p cnf 12680 53595                                                                                   

1 0
c Encoding variable: field_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00001' direct represents '1' with '2'
c Var 'field_00001_00001' direct represents '2' with '3'
c Var 'field_00001_00001' direct represents '3' with '4'
c Var 'field_00001_00001' direct represents '4' with '5'
c Var 'field_00001_00001' direct represents '5' with '6'
c Var 'field_00001_00001' direct represents '6' with '7'
c Var 'field_00001_00001' direct represents '7' with '8'
c Var 'field_00001_00001' direct represents '8' with '9'
c Var 'field_00001_00001' direct represents '9' with '10'
2 3 4 5 6 7 8 9 10 0
-2 11 0
-2 14 0
-3 12 0
-3 14 0
-4 13 0
-4 14 0
-5 11 0
-5 15 0
-6 12 0
-6 15 0
-7 13 0
-7 15 0
-8 11 0
-8 16 0
-9 12 0
-9 16 0
-10 13 0
-10 16 0
-11 -12 0
-11 -13 0
-12 -13 0
-14 -15 0
-14 -16 0
-15 -16 0
c Encoding variable: field_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00002' direct represents '1' with '17'
c Var 'field_00001_00002' direct represents '2' with '18'
c Var 'field_00001_00002' direct represents '3' with '19'
c Var 'field_00001_00002' direct represents '4' with '20'
c Var 'field_00001_00002' direct represents '5' with '21'
c Var 'field_00001_00002' direct represents '6' with '22'
c Var 'field_00001_00002' direct represents '7' with '23'
c Var 'field_00001_00002' direct represents '8' with '24'
c Var 'field_00001_00002' direct represents '9' with '25'
17 18 19 20 21 22 23 24 25 0
-17 26 0
-17 29 0
-18 27 0
-18 29 0
-19 28 0
-19 29 0
-20 26 0
-20 30 0
-21 27 0
-21 30 0
-22 28 0
-22 30 0
-23 26 0
-23 31 0
-24 27 0
-24 31 0
-25 28 0
-25 31 0
-26 -27 0
-26 -28 0
-27 -28 0
-29 -30 0
-29 -31 0
-30 -31 0
c Encoding variable: field_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00003' direct represents '1' with '32'
c Var 'field_00001_00003' direct represents '2' with '33'
c Var 'field_00001_00003' direct represents '3' with '34'
c Var 'field_00001_00003' direct represents '4' with '35'
c Var 'field_00001_00003' direct represents '5' with '36'
c Var 'field_00001_00003' direct represents '6' with '37'
c Var 'field_00001_00003' direct represents '7' with '38'
c Var 'field_00001_00003' direct represents '8' with '39'
c Var 'field_00001_00003' direct represents '9' with '40'
32 33 34 35 36 37 38 39 40 0
-32 41 0
-32 44 0
-33 42 0
-33 44 0
-34 43 0
-34 44 0
-35 41 0
-35 45 0
-36 42 0
-36 45 0
-37 43 0
-37 45 0
-38 41 0
-38 46 0
-39 42 0
-39 46 0
-40 43 0
-40 46 0
-41 -42 0
-41 -43 0
-42 -43 0
-44 -45 0
-44 -46 0
-45 -46 0
c Encoding variable: field_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00004' direct represents '1' with '47'
c Var 'field_00001_00004' direct represents '2' with '48'
c Var 'field_00001_00004' direct represents '3' with '49'
c Var 'field_00001_00004' direct represents '4' with '50'
c Var 'field_00001_00004' direct represents '5' with '51'
c Var 'field_00001_00004' direct represents '6' with '52'
c Var 'field_00001_00004' direct represents '7' with '53'
c Var 'field_00001_00004' direct represents '8' with '54'
c Var 'field_00001_00004' direct represents '9' with '55'
47 48 49 50 51 52 53 54 55 0
-47 56 0
-47 59 0
-48 57 0
-48 59 0
-49 58 0
-49 59 0
-50 56 0
-50 60 0
-51 57 0
-51 60 0
-52 58 0
-52 60 0
-53 56 0
-53 61 0
-54 57 0
-54 61 0
-55 58 0
-55 61 0
-56 -57 0
-56 -58 0
-57 -58 0
-59 -60 0
-59 -61 0
-60 -61 0
c Encoding variable: field_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00005' direct represents '1' with '62'
c Var 'field_00001_00005' direct represents '2' with '63'
c Var 'field_00001_00005' direct represents '3' with '64'
c Var 'field_00001_00005' direct represents '4' with '65'
c Var 'field_00001_00005' direct represents '5' with '66'
c Var 'field_00001_00005' direct represents '6' with '67'
c Var 'field_00001_00005' direct represents '7' with '68'
c Var 'field_00001_00005' direct represents '8' with '69'
c Var 'field_00001_00005' direct represents '9' with '70'
62 63 64 65 66 67 68 69 70 0
-62 71 0
-62 74 0
-63 72 0
-63 74 0
-64 73 0
-64 74 0
-65 71 0
-65 75 0
-66 72 0
-66 75 0
-67 73 0
-67 75 0
-68 71 0
-68 76 0
-69 72 0
-69 76 0
-70 73 0
-70 76 0
-71 -72 0
-71 -73 0
-72 -73 0
-74 -75 0
-74 -76 0
-75 -76 0
c Encoding variable: field_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00006' direct represents '1' with '77'
c Var 'field_00001_00006' direct represents '2' with '78'
c Var 'field_00001_00006' direct represents '3' with '79'
c Var 'field_00001_00006' direct represents '4' with '80'
c Var 'field_00001_00006' direct represents '5' with '81'
c Var 'field_00001_00006' direct represents '6' with '82'
c Var 'field_00001_00006' direct represents '7' with '83'
c Var 'field_00001_00006' direct represents '8' with '84'
c Var 'field_00001_00006' direct represents '9' with '85'
77 78 79 80 81 82 83 84 85 0
-77 86 0
-77 89 0
-78 87 0
-78 89 0
-79 88 0
-79 89 0
-80 86 0
-80 90 0
-81 87 0
-81 90 0
-82 88 0
-82 90 0
-83 86 0
-83 91 0
-84 87 0
-84 91 0
-85 88 0
-85 91 0
-86 -87 0
-86 -88 0
-87 -88 0
-89 -90 0
-89 -91 0
-90 -91 0
c Encoding variable: field_00001_00007 with domain: int(5) (representing constraint )
c Var 'field_00001_00007' direct represents '5' with '92'
92 0
c Encoding variable: field_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00008' direct represents '1' with '93'
c Var 'field_00001_00008' direct represents '2' with '94'
c Var 'field_00001_00008' direct represents '3' with '95'
c Var 'field_00001_00008' direct represents '4' with '96'
c Var 'field_00001_00008' direct represents '5' with '97'
c Var 'field_00001_00008' direct represents '6' with '98'
c Var 'field_00001_00008' direct represents '7' with '99'
c Var 'field_00001_00008' direct represents '8' with '100'
c Var 'field_00001_00008' direct represents '9' with '101'
93 94 95 96 97 98 99 100 101 0
-93 102 0
-93 105 0
-94 103 0
-94 105 0
-95 104 0
-95 105 0
-96 102 0
-96 106 0
-97 103 0
-97 106 0
-98 104 0
-98 106 0
-99 102 0
-99 107 0
-100 103 0
-100 107 0
-101 104 0
-101 107 0
-102 -103 0
-102 -104 0
-103 -104 0
-105 -106 0
-105 -107 0
-106 -107 0
c Encoding variable: field_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00009' direct represents '1' with '108'
c Var 'field_00001_00009' direct represents '2' with '109'
c Var 'field_00001_00009' direct represents '3' with '110'
c Var 'field_00001_00009' direct represents '4' with '111'
c Var 'field_00001_00009' direct represents '5' with '112'
c Var 'field_00001_00009' direct represents '6' with '113'
c Var 'field_00001_00009' direct represents '7' with '114'
c Var 'field_00001_00009' direct represents '8' with '115'
c Var 'field_00001_00009' direct represents '9' with '116'
108 109 110 111 112 113 114 115 116 0
-108 117 0
-108 120 0
-109 118 0
-109 120 0
-110 119 0
-110 120 0
-111 117 0
-111 121 0
-112 118 0
-112 121 0
-113 119 0
-113 121 0
-114 117 0
-114 122 0
-115 118 0
-115 122 0
-116 119 0
-116 122 0
-117 -118 0
-117 -119 0
-118 -119 0
-120 -121 0
-120 -122 0
-121 -122 0
c Encoding variable: field_00002_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00001' direct represents '1' with '123'
c Var 'field_00002_00001' direct represents '2' with '124'
c Var 'field_00002_00001' direct represents '3' with '125'
c Var 'field_00002_00001' direct represents '4' with '126'
c Var 'field_00002_00001' direct represents '5' with '127'
c Var 'field_00002_00001' direct represents '6' with '128'
c Var 'field_00002_00001' direct represents '7' with '129'
c Var 'field_00002_00001' direct represents '8' with '130'
c Var 'field_00002_00001' direct represents '9' with '131'
123 124 125 126 127 128 129 130 131 0
-123 132 0
-123 135 0
-124 133 0
-124 135 0
-125 134 0
-125 135 0
-126 132 0
-126 136 0
-127 133 0
-127 136 0
-128 134 0
-128 136 0
-129 132 0
-129 137 0
-130 133 0
-130 137 0
-131 134 0
-131 137 0
-132 -133 0
-132 -134 0
-133 -134 0
-135 -136 0
-135 -137 0
-136 -137 0
c Encoding variable: field_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00002' direct represents '1' with '138'
c Var 'field_00002_00002' direct represents '2' with '139'
c Var 'field_00002_00002' direct represents '3' with '140'
c Var 'field_00002_00002' direct represents '4' with '141'
c Var 'field_00002_00002' direct represents '5' with '142'
c Var 'field_00002_00002' direct represents '6' with '143'
c Var 'field_00002_00002' direct represents '7' with '144'
c Var 'field_00002_00002' direct represents '8' with '145'
c Var 'field_00002_00002' direct represents '9' with '146'
138 139 140 141 142 143 144 145 146 0
-138 147 0
-138 150 0
-139 148 0
-139 150 0
-140 149 0
-140 150 0
-141 147 0
-141 151 0
-142 148 0
-142 151 0
-143 149 0
-143 151 0
-144 147 0
-144 152 0
-145 148 0
-145 152 0
-146 149 0
-146 152 0
-147 -148 0
-147 -149 0
-148 -149 0
-150 -151 0
-150 -152 0
-151 -152 0
c Encoding variable: field_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00003' direct represents '1' with '153'
c Var 'field_00002_00003' direct represents '2' with '154'
c Var 'field_00002_00003' direct represents '3' with '155'
c Var 'field_00002_00003' direct represents '4' with '156'
c Var 'field_00002_00003' direct represents '5' with '157'
c Var 'field_00002_00003' direct represents '6' with '158'
c Var 'field_00002_00003' direct represents '7' with '159'
c Var 'field_00002_00003' direct represents '8' with '160'
c Var 'field_00002_00003' direct represents '9' with '161'
153 154 155 156 157 158 159 160 161 0
-153 162 0
-153 165 0
-154 163 0
-154 165 0
-155 164 0
-155 165 0
-156 162 0
-156 166 0
-157 163 0
-157 166 0
-158 164 0
-158 166 0
-159 162 0
-159 167 0
-160 163 0
-160 167 0
-161 164 0
-161 167 0
-162 -163 0
-162 -164 0
-163 -164 0
-165 -166 0
-165 -167 0
-166 -167 0
c Encoding variable: field_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00004' direct represents '1' with '168'
c Var 'field_00002_00004' direct represents '2' with '169'
c Var 'field_00002_00004' direct represents '3' with '170'
c Var 'field_00002_00004' direct represents '4' with '171'
c Var 'field_00002_00004' direct represents '5' with '172'
c Var 'field_00002_00004' direct represents '6' with '173'
c Var 'field_00002_00004' direct represents '7' with '174'
c Var 'field_00002_00004' direct represents '8' with '175'
c Var 'field_00002_00004' direct represents '9' with '176'
168 169 170 171 172 173 174 175 176 0
-168 177 0
-168 180 0
-169 178 0
-169 180 0
-170 179 0
-170 180 0
-171 177 0
-171 181 0
-172 178 0
-172 181 0
-173 179 0
-173 181 0
-174 177 0
-174 182 0
-175 178 0
-175 182 0
-176 179 0
-176 182 0
-177 -178 0
-177 -179 0
-178 -179 0
-180 -181 0
-180 -182 0
-181 -182 0
c Encoding variable: field_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00005' direct represents '1' with '183'
c Var 'field_00002_00005' direct represents '2' with '184'
c Var 'field_00002_00005' direct represents '3' with '185'
c Var 'field_00002_00005' direct represents '4' with '186'
c Var 'field_00002_00005' direct represents '5' with '187'
c Var 'field_00002_00005' direct represents '6' with '188'
c Var 'field_00002_00005' direct represents '7' with '189'
c Var 'field_00002_00005' direct represents '8' with '190'
c Var 'field_00002_00005' direct represents '9' with '191'
183 184 185 186 187 188 189 190 191 0
-183 192 0
-183 195 0
-184 193 0
-184 195 0
-185 194 0
-185 195 0
-186 192 0
-186 196 0
-187 193 0
-187 196 0
-188 194 0
-188 196 0
-189 192 0
-189 197 0
-190 193 0
-190 197 0
-191 194 0
-191 197 0
-192 -193 0
-192 -194 0
-193 -194 0
-195 -196 0
-195 -197 0
-196 -197 0
c Encoding variable: field_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00006' direct represents '1' with '198'
c Var 'field_00002_00006' direct represents '2' with '199'
c Var 'field_00002_00006' direct represents '3' with '200'
c Var 'field_00002_00006' direct represents '4' with '201'
c Var 'field_00002_00006' direct represents '5' with '202'
c Var 'field_00002_00006' direct represents '6' with '203'
c Var 'field_00002_00006' direct represents '7' with '204'
c Var 'field_00002_00006' direct represents '8' with '205'
c Var 'field_00002_00006' direct represents '9' with '206'
198 199 200 201 202 203 204 205 206 0
-198 207 0
-198 210 0
-199 208 0
-199 210 0
-200 209 0
-200 210 0
-201 207 0
-201 211 0
-202 208 0
-202 211 0
-203 209 0
-203 211 0
-204 207 0
-204 212 0
-205 208 0
-205 212 0
-206 209 0
-206 212 0
-207 -208 0
-207 -209 0
-208 -209 0
-210 -211 0
-210 -212 0
-211 -212 0
c Encoding variable: field_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00007' direct represents '1' with '213'
c Var 'field_00002_00007' direct represents '2' with '214'
c Var 'field_00002_00007' direct represents '3' with '215'
c Var 'field_00002_00007' direct represents '4' with '216'
c Var 'field_00002_00007' direct represents '5' with '217'
c Var 'field_00002_00007' direct represents '6' with '218'
c Var 'field_00002_00007' direct represents '7' with '219'
c Var 'field_00002_00007' direct represents '8' with '220'
c Var 'field_00002_00007' direct represents '9' with '221'
213 214 215 216 217 218 219 220 221 0
-213 222 0
-213 225 0
-214 223 0
-214 225 0
-215 224 0
-215 225 0
-216 222 0
-216 226 0
-217 223 0
-217 226 0
-218 224 0
-218 226 0
-219 222 0
-219 227 0
-220 223 0
-220 227 0
-221 224 0
-221 227 0
-222 -223 0
-222 -224 0
-223 -224 0
-225 -226 0
-225 -227 0
-226 -227 0
c Encoding variable: field_00002_00008 with domain: int(7) (representing constraint )
c Var 'field_00002_00008' direct represents '7' with '228'
228 0
c Encoding variable: field_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00009' direct represents '1' with '229'
c Var 'field_00002_00009' direct represents '2' with '230'
c Var 'field_00002_00009' direct represents '3' with '231'
c Var 'field_00002_00009' direct represents '4' with '232'
c Var 'field_00002_00009' direct represents '5' with '233'
c Var 'field_00002_00009' direct represents '6' with '234'
c Var 'field_00002_00009' direct represents '7' with '235'
c Var 'field_00002_00009' direct represents '8' with '236'
c Var 'field_00002_00009' direct represents '9' with '237'
229 230 231 232 233 234 235 236 237 0
-229 238 0
-229 241 0
-230 239 0
-230 241 0
-231 240 0
-231 241 0
-232 238 0
-232 242 0
-233 239 0
-233 242 0
-234 240 0
-234 242 0
-235 238 0
-235 243 0
-236 239 0
-236 243 0
-237 240 0
-237 243 0
-238 -239 0
-238 -240 0
-239 -240 0
-241 -242 0
-241 -243 0
-242 -243 0
c Encoding variable: field_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00001' direct represents '1' with '244'
c Var 'field_00003_00001' direct represents '2' with '245'
c Var 'field_00003_00001' direct represents '3' with '246'
c Var 'field_00003_00001' direct represents '4' with '247'
c Var 'field_00003_00001' direct represents '5' with '248'
c Var 'field_00003_00001' direct represents '6' with '249'
c Var 'field_00003_00001' direct represents '7' with '250'
c Var 'field_00003_00001' direct represents '8' with '251'
c Var 'field_00003_00001' direct represents '9' with '252'
244 245 246 247 248 249 250 251 252 0
-244 253 0
-244 256 0
-245 254 0
-245 256 0
-246 255 0
-246 256 0
-247 253 0
-247 257 0
-248 254 0
-248 257 0
-249 255 0
-249 257 0
-250 253 0
-250 258 0
-251 254 0
-251 258 0
-252 255 0
-252 258 0
-253 -254 0
-253 -255 0
-254 -255 0
-256 -257 0
-256 -258 0
-257 -258 0
c Encoding variable: field_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00002' direct represents '1' with '259'
c Var 'field_00003_00002' direct represents '2' with '260'
c Var 'field_00003_00002' direct represents '3' with '261'
c Var 'field_00003_00002' direct represents '4' with '262'
c Var 'field_00003_00002' direct represents '5' with '263'
c Var 'field_00003_00002' direct represents '6' with '264'
c Var 'field_00003_00002' direct represents '7' with '265'
c Var 'field_00003_00002' direct represents '8' with '266'
c Var 'field_00003_00002' direct represents '9' with '267'
259 260 261 262 263 264 265 266 267 0
-259 268 0
-259 271 0
-260 269 0
-260 271 0
-261 270 0
-261 271 0
-262 268 0
-262 272 0
-263 269 0
-263 272 0
-264 270 0
-264 272 0
-265 268 0
-265 273 0
-266 269 0
-266 273 0
-267 270 0
-267 273 0
-268 -269 0
-268 -270 0
-269 -270 0
-271 -272 0
-271 -273 0
-272 -273 0
c Encoding variable: field_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00003' direct represents '1' with '274'
c Var 'field_00003_00003' direct represents '2' with '275'
c Var 'field_00003_00003' direct represents '3' with '276'
c Var 'field_00003_00003' direct represents '4' with '277'
c Var 'field_00003_00003' direct represents '5' with '278'
c Var 'field_00003_00003' direct represents '6' with '279'
c Var 'field_00003_00003' direct represents '7' with '280'
c Var 'field_00003_00003' direct represents '8' with '281'
c Var 'field_00003_00003' direct represents '9' with '282'
274 275 276 277 278 279 280 281 282 0
-274 283 0
-274 286 0
-275 284 0
-275 286 0
-276 285 0
-276 286 0
-277 283 0
-277 287 0
-278 284 0
-278 287 0
-279 285 0
-279 287 0
-280 283 0
-280 288 0
-281 284 0
-281 288 0
-282 285 0
-282 288 0
-283 -284 0
-283 -285 0
-284 -285 0
-286 -287 0
-286 -288 0
-287 -288 0
c Encoding variable: field_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00004' direct represents '1' with '289'
c Var 'field_00003_00004' direct represents '2' with '290'
c Var 'field_00003_00004' direct represents '3' with '291'
c Var 'field_00003_00004' direct represents '4' with '292'
c Var 'field_00003_00004' direct represents '5' with '293'
c Var 'field_00003_00004' direct represents '6' with '294'
c Var 'field_00003_00004' direct represents '7' with '295'
c Var 'field_00003_00004' direct represents '8' with '296'
c Var 'field_00003_00004' direct represents '9' with '297'
289 290 291 292 293 294 295 296 297 0
-289 298 0
-289 301 0
-290 299 0
-290 301 0
-291 300 0
-291 301 0
-292 298 0
-292 302 0
-293 299 0
-293 302 0
-294 300 0
-294 302 0
-295 298 0
-295 303 0
-296 299 0
-296 303 0
-297 300 0
-297 303 0
-298 -299 0
-298 -300 0
-299 -300 0
-301 -302 0
-301 -303 0
-302 -303 0
c Encoding variable: field_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00005' direct represents '1' with '304'
c Var 'field_00003_00005' direct represents '2' with '305'
c Var 'field_00003_00005' direct represents '3' with '306'
c Var 'field_00003_00005' direct represents '4' with '307'
c Var 'field_00003_00005' direct represents '5' with '308'
c Var 'field_00003_00005' direct represents '6' with '309'
c Var 'field_00003_00005' direct represents '7' with '310'
c Var 'field_00003_00005' direct represents '8' with '311'
c Var 'field_00003_00005' direct represents '9' with '312'
304 305 306 307 308 309 310 311 312 0
-304 313 0
-304 316 0
-305 314 0
-305 316 0
-306 315 0
-306 316 0
-307 313 0
-307 317 0
-308 314 0
-308 317 0
-309 315 0
-309 317 0
-310 313 0
-310 318 0
-311 314 0
-311 318 0
-312 315 0
-312 318 0
-313 -314 0
-313 -315 0
-314 -315 0
-316 -317 0
-316 -318 0
-317 -318 0
c Encoding variable: field_00003_00006 with domain: int(6) (representing constraint )
c Var 'field_00003_00006' direct represents '6' with '319'
319 0
c Encoding variable: field_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00007' direct represents '1' with '320'
c Var 'field_00003_00007' direct represents '2' with '321'
c Var 'field_00003_00007' direct represents '3' with '322'
c Var 'field_00003_00007' direct represents '4' with '323'
c Var 'field_00003_00007' direct represents '5' with '324'
c Var 'field_00003_00007' direct represents '6' with '325'
c Var 'field_00003_00007' direct represents '7' with '326'
c Var 'field_00003_00007' direct represents '8' with '327'
c Var 'field_00003_00007' direct represents '9' with '328'
320 321 322 323 324 325 326 327 328 0
-320 329 0
-320 332 0
-321 330 0
-321 332 0
-322 331 0
-322 332 0
-323 329 0
-323 333 0
-324 330 0
-324 333 0
-325 331 0
-325 333 0
-326 329 0
-326 334 0
-327 330 0
-327 334 0
-328 331 0
-328 334 0
-329 -330 0
-329 -331 0
-330 -331 0
-332 -333 0
-332 -334 0
-333 -334 0
c Encoding variable: field_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00008' direct represents '1' with '335'
c Var 'field_00003_00008' direct represents '2' with '336'
c Var 'field_00003_00008' direct represents '3' with '337'
c Var 'field_00003_00008' direct represents '4' with '338'
c Var 'field_00003_00008' direct represents '5' with '339'
c Var 'field_00003_00008' direct represents '6' with '340'
c Var 'field_00003_00008' direct represents '7' with '341'
c Var 'field_00003_00008' direct represents '8' with '342'
c Var 'field_00003_00008' direct represents '9' with '343'
335 336 337 338 339 340 341 342 343 0
-335 344 0
-335 347 0
-336 345 0
-336 347 0
-337 346 0
-337 347 0
-338 344 0
-338 348 0
-339 345 0
-339 348 0
-340 346 0
-340 348 0
-341 344 0
-341 349 0
-342 345 0
-342 349 0
-343 346 0
-343 349 0
-344 -345 0
-344 -346 0
-345 -346 0
-347 -348 0
-347 -349 0
-348 -349 0
c Encoding variable: field_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00009' direct represents '1' with '350'
c Var 'field_00003_00009' direct represents '2' with '351'
c Var 'field_00003_00009' direct represents '3' with '352'
c Var 'field_00003_00009' direct represents '4' with '353'
c Var 'field_00003_00009' direct represents '5' with '354'
c Var 'field_00003_00009' direct represents '6' with '355'
c Var 'field_00003_00009' direct represents '7' with '356'
c Var 'field_00003_00009' direct represents '8' with '357'
c Var 'field_00003_00009' direct represents '9' with '358'
350 351 352 353 354 355 356 357 358 0
-350 359 0
-350 362 0
-351 360 0
-351 362 0
-352 361 0
-352 362 0
-353 359 0
-353 363 0
-354 360 0
-354 363 0
-355 361 0
-355 363 0
-356 359 0
-356 364 0
-357 360 0
-357 364 0
-358 361 0
-358 364 0
-359 -360 0
-359 -361 0
-360 -361 0
-362 -363 0
-362 -364 0
-363 -364 0
c Encoding variable: field_00004_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00001' direct represents '1' with '365'
c Var 'field_00004_00001' direct represents '2' with '366'
c Var 'field_00004_00001' direct represents '3' with '367'
c Var 'field_00004_00001' direct represents '4' with '368'
c Var 'field_00004_00001' direct represents '5' with '369'
c Var 'field_00004_00001' direct represents '6' with '370'
c Var 'field_00004_00001' direct represents '7' with '371'
c Var 'field_00004_00001' direct represents '8' with '372'
c Var 'field_00004_00001' direct represents '9' with '373'
365 366 367 368 369 370 371 372 373 0
-365 374 0
-365 377 0
-366 375 0
-366 377 0
-367 376 0
-367 377 0
-368 374 0
-368 378 0
-369 375 0
-369 378 0
-370 376 0
-370 378 0
-371 374 0
-371 379 0
-372 375 0
-372 379 0
-373 376 0
-373 379 0
-374 -375 0
-374 -376 0
-375 -376 0
-377 -378 0
-377 -379 0
-378 -379 0
c Encoding variable: field_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '380'
c Var 'field_00004_00002' direct represents '2' with '381'
c Var 'field_00004_00002' direct represents '3' with '382'
c Var 'field_00004_00002' direct represents '4' with '383'
c Var 'field_00004_00002' direct represents '5' with '384'
c Var 'field_00004_00002' direct represents '6' with '385'
c Var 'field_00004_00002' direct represents '7' with '386'
c Var 'field_00004_00002' direct represents '8' with '387'
c Var 'field_00004_00002' direct represents '9' with '388'
380 381 382 383 384 385 386 387 388 0
-380 389 0
-380 392 0
-381 390 0
-381 392 0
-382 391 0
-382 392 0
-383 389 0
-383 393 0
-384 390 0
-384 393 0
-385 391 0
-385 393 0
-386 389 0
-386 394 0
-387 390 0
-387 394 0
-388 391 0
-388 394 0
-389 -390 0
-389 -391 0
-390 -391 0
-392 -393 0
-392 -394 0
-393 -394 0
c Encoding variable: field_00004_00003 with domain: int(1) (representing constraint )
c Var 'field_00004_00003' direct represents '1' with '395'
395 0
c Encoding variable: field_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00004' direct represents '1' with '396'
c Var 'field_00004_00004' direct represents '2' with '397'
c Var 'field_00004_00004' direct represents '3' with '398'
c Var 'field_00004_00004' direct represents '4' with '399'
c Var 'field_00004_00004' direct represents '5' with '400'
c Var 'field_00004_00004' direct represents '6' with '401'
c Var 'field_00004_00004' direct represents '7' with '402'
c Var 'field_00004_00004' direct represents '8' with '403'
c Var 'field_00004_00004' direct represents '9' with '404'
396 397 398 399 400 401 402 403 404 0
-396 405 0
-396 408 0
-397 406 0
-397 408 0
-398 407 0
-398 408 0
-399 405 0
-399 409 0
-400 406 0
-400 409 0
-401 407 0
-401 409 0
-402 405 0
-402 410 0
-403 406 0
-403 410 0
-404 407 0
-404 410 0
-405 -406 0
-405 -407 0
-406 -407 0
-408 -409 0
-408 -410 0
-409 -410 0
c Encoding variable: field_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00005' direct represents '1' with '411'
c Var 'field_00004_00005' direct represents '2' with '412'
c Var 'field_00004_00005' direct represents '3' with '413'
c Var 'field_00004_00005' direct represents '4' with '414'
c Var 'field_00004_00005' direct represents '5' with '415'
c Var 'field_00004_00005' direct represents '6' with '416'
c Var 'field_00004_00005' direct represents '7' with '417'
c Var 'field_00004_00005' direct represents '8' with '418'
c Var 'field_00004_00005' direct represents '9' with '419'
411 412 413 414 415 416 417 418 419 0
-411 420 0
-411 423 0
-412 421 0
-412 423 0
-413 422 0
-413 423 0
-414 420 0
-414 424 0
-415 421 0
-415 424 0
-416 422 0
-416 424 0
-417 420 0
-417 425 0
-418 421 0
-418 425 0
-419 422 0
-419 425 0
-420 -421 0
-420 -422 0
-421 -422 0
-423 -424 0
-423 -425 0
-424 -425 0
c Encoding variable: field_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00006' direct represents '1' with '426'
c Var 'field_00004_00006' direct represents '2' with '427'
c Var 'field_00004_00006' direct represents '3' with '428'
c Var 'field_00004_00006' direct represents '4' with '429'
c Var 'field_00004_00006' direct represents '5' with '430'
c Var 'field_00004_00006' direct represents '6' with '431'
c Var 'field_00004_00006' direct represents '7' with '432'
c Var 'field_00004_00006' direct represents '8' with '433'
c Var 'field_00004_00006' direct represents '9' with '434'
426 427 428 429 430 431 432 433 434 0
-426 435 0
-426 438 0
-427 436 0
-427 438 0
-428 437 0
-428 438 0
-429 435 0
-429 439 0
-430 436 0
-430 439 0
-431 437 0
-431 439 0
-432 435 0
-432 440 0
-433 436 0
-433 440 0
-434 437 0
-434 440 0
-435 -436 0
-435 -437 0
-436 -437 0
-438 -439 0
-438 -440 0
-439 -440 0
c Encoding variable: field_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00007' direct represents '1' with '441'
c Var 'field_00004_00007' direct represents '2' with '442'
c Var 'field_00004_00007' direct represents '3' with '443'
c Var 'field_00004_00007' direct represents '4' with '444'
c Var 'field_00004_00007' direct represents '5' with '445'
c Var 'field_00004_00007' direct represents '6' with '446'
c Var 'field_00004_00007' direct represents '7' with '447'
c Var 'field_00004_00007' direct represents '8' with '448'
c Var 'field_00004_00007' direct represents '9' with '449'
441 442 443 444 445 446 447 448 449 0
-441 450 0
-441 453 0
-442 451 0
-442 453 0
-443 452 0
-443 453 0
-444 450 0
-444 454 0
-445 451 0
-445 454 0
-446 452 0
-446 454 0
-447 450 0
-447 455 0
-448 451 0
-448 455 0
-449 452 0
-449 455 0
-450 -451 0
-450 -452 0
-451 -452 0
-453 -454 0
-453 -455 0
-454 -455 0
c Encoding variable: field_00004_00008 with domain: int(3) (representing constraint )
c Var 'field_00004_00008' direct represents '3' with '456'
456 0
c Encoding variable: field_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00009' direct represents '1' with '457'
c Var 'field_00004_00009' direct represents '2' with '458'
c Var 'field_00004_00009' direct represents '3' with '459'
c Var 'field_00004_00009' direct represents '4' with '460'
c Var 'field_00004_00009' direct represents '5' with '461'
c Var 'field_00004_00009' direct represents '6' with '462'
c Var 'field_00004_00009' direct represents '7' with '463'
c Var 'field_00004_00009' direct represents '8' with '464'
c Var 'field_00004_00009' direct represents '9' with '465'
457 458 459 460 461 462 463 464 465 0
-457 466 0
-457 469 0
-458 467 0
-458 469 0
-459 468 0
-459 469 0
-460 466 0
-460 470 0
-461 467 0
-461 470 0
-462 468 0
-462 470 0
-463 466 0
-463 471 0
-464 467 0
-464 471 0
-465 468 0
-465 471 0
-466 -467 0
-466 -468 0
-467 -468 0
-469 -470 0
-469 -471 0
-470 -471 0
c Encoding variable: field_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00001' direct represents '1' with '472'
c Var 'field_00005_00001' direct represents '2' with '473'
c Var 'field_00005_00001' direct represents '3' with '474'
c Var 'field_00005_00001' direct represents '4' with '475'
c Var 'field_00005_00001' direct represents '5' with '476'
c Var 'field_00005_00001' direct represents '6' with '477'
c Var 'field_00005_00001' direct represents '7' with '478'
c Var 'field_00005_00001' direct represents '8' with '479'
c Var 'field_00005_00001' direct represents '9' with '480'
472 473 474 475 476 477 478 479 480 0
-472 481 0
-472 484 0
-473 482 0
-473 484 0
-474 483 0
-474 484 0
-475 481 0
-475 485 0
-476 482 0
-476 485 0
-477 483 0
-477 485 0
-478 481 0
-478 486 0
-479 482 0
-479 486 0
-480 483 0
-480 486 0
-481 -482 0
-481 -483 0
-482 -483 0
-484 -485 0
-484 -486 0
-485 -486 0
c Encoding variable: field_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00002' direct represents '1' with '487'
c Var 'field_00005_00002' direct represents '2' with '488'
c Var 'field_00005_00002' direct represents '3' with '489'
c Var 'field_00005_00002' direct represents '4' with '490'
c Var 'field_00005_00002' direct represents '5' with '491'
c Var 'field_00005_00002' direct represents '6' with '492'
c Var 'field_00005_00002' direct represents '7' with '493'
c Var 'field_00005_00002' direct represents '8' with '494'
c Var 'field_00005_00002' direct represents '9' with '495'
487 488 489 490 491 492 493 494 495 0
-487 496 0
-487 499 0
-488 497 0
-488 499 0
-489 498 0
-489 499 0
-490 496 0
-490 500 0
-491 497 0
-491 500 0
-492 498 0
-492 500 0
-493 496 0
-493 501 0
-494 497 0
-494 501 0
-495 498 0
-495 501 0
-496 -497 0
-496 -498 0
-497 -498 0
-499 -500 0
-499 -501 0
-500 -501 0
c Encoding variable: field_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00003' direct represents '1' with '502'
c Var 'field_00005_00003' direct represents '2' with '503'
c Var 'field_00005_00003' direct represents '3' with '504'
c Var 'field_00005_00003' direct represents '4' with '505'
c Var 'field_00005_00003' direct represents '5' with '506'
c Var 'field_00005_00003' direct represents '6' with '507'
c Var 'field_00005_00003' direct represents '7' with '508'
c Var 'field_00005_00003' direct represents '8' with '509'
c Var 'field_00005_00003' direct represents '9' with '510'
502 503 504 505 506 507 508 509 510 0
-502 511 0
-502 514 0
-503 512 0
-503 514 0
-504 513 0
-504 514 0
-505 511 0
-505 515 0
-506 512 0
-506 515 0
-507 513 0
-507 515 0
-508 511 0
-508 516 0
-509 512 0
-509 516 0
-510 513 0
-510 516 0
-511 -512 0
-511 -513 0
-512 -513 0
-514 -515 0
-514 -516 0
-515 -516 0
c Encoding variable: field_00005_00004 with domain: int(1) (representing constraint )
c Var 'field_00005_00004' direct represents '1' with '517'
517 0
c Encoding variable: field_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00005' direct represents '1' with '518'
c Var 'field_00005_00005' direct represents '2' with '519'
c Var 'field_00005_00005' direct represents '3' with '520'
c Var 'field_00005_00005' direct represents '4' with '521'
c Var 'field_00005_00005' direct represents '5' with '522'
c Var 'field_00005_00005' direct represents '6' with '523'
c Var 'field_00005_00005' direct represents '7' with '524'
c Var 'field_00005_00005' direct represents '8' with '525'
c Var 'field_00005_00005' direct represents '9' with '526'
518 519 520 521 522 523 524 525 526 0
-518 527 0
-518 530 0
-519 528 0
-519 530 0
-520 529 0
-520 530 0
-521 527 0
-521 531 0
-522 528 0
-522 531 0
-523 529 0
-523 531 0
-524 527 0
-524 532 0
-525 528 0
-525 532 0
-526 529 0
-526 532 0
-527 -528 0
-527 -529 0
-528 -529 0
-530 -531 0
-530 -532 0
-531 -532 0
c Encoding variable: field_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00006' direct represents '1' with '533'
c Var 'field_00005_00006' direct represents '2' with '534'
c Var 'field_00005_00006' direct represents '3' with '535'
c Var 'field_00005_00006' direct represents '4' with '536'
c Var 'field_00005_00006' direct represents '5' with '537'
c Var 'field_00005_00006' direct represents '6' with '538'
c Var 'field_00005_00006' direct represents '7' with '539'
c Var 'field_00005_00006' direct represents '8' with '540'
c Var 'field_00005_00006' direct represents '9' with '541'
533 534 535 536 537 538 539 540 541 0
-533 542 0
-533 545 0
-534 543 0
-534 545 0
-535 544 0
-535 545 0
-536 542 0
-536 546 0
-537 543 0
-537 546 0
-538 544 0
-538 546 0
-539 542 0
-539 547 0
-540 543 0
-540 547 0
-541 544 0
-541 547 0
-542 -543 0
-542 -544 0
-543 -544 0
-545 -546 0
-545 -547 0
-546 -547 0
c Encoding variable: field_00005_00007 with domain: int(7) (representing constraint )
c Var 'field_00005_00007' direct represents '7' with '548'
548 0
c Encoding variable: field_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00008' direct represents '1' with '549'
c Var 'field_00005_00008' direct represents '2' with '550'
c Var 'field_00005_00008' direct represents '3' with '551'
c Var 'field_00005_00008' direct represents '4' with '552'
c Var 'field_00005_00008' direct represents '5' with '553'
c Var 'field_00005_00008' direct represents '6' with '554'
c Var 'field_00005_00008' direct represents '7' with '555'
c Var 'field_00005_00008' direct represents '8' with '556'
c Var 'field_00005_00008' direct represents '9' with '557'
549 550 551 552 553 554 555 556 557 0
-549 558 0
-549 561 0
-550 559 0
-550 561 0
-551 560 0
-551 561 0
-552 558 0
-552 562 0
-553 559 0
-553 562 0
-554 560 0
-554 562 0
-555 558 0
-555 563 0
-556 559 0
-556 563 0
-557 560 0
-557 563 0
-558 -559 0
-558 -560 0
-559 -560 0
-561 -562 0
-561 -563 0
-562 -563 0
c Encoding variable: field_00005_00009 with domain: int(2) (representing constraint )
c Var 'field_00005_00009' direct represents '2' with '564'
564 0
c Encoding variable: field_00006_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00001' direct represents '1' with '565'
c Var 'field_00006_00001' direct represents '2' with '566'
c Var 'field_00006_00001' direct represents '3' with '567'
c Var 'field_00006_00001' direct represents '4' with '568'
c Var 'field_00006_00001' direct represents '5' with '569'
c Var 'field_00006_00001' direct represents '6' with '570'
c Var 'field_00006_00001' direct represents '7' with '571'
c Var 'field_00006_00001' direct represents '8' with '572'
c Var 'field_00006_00001' direct represents '9' with '573'
565 566 567 568 569 570 571 572 573 0
-565 574 0
-565 577 0
-566 575 0
-566 577 0
-567 576 0
-567 577 0
-568 574 0
-568 578 0
-569 575 0
-569 578 0
-570 576 0
-570 578 0
-571 574 0
-571 579 0
-572 575 0
-572 579 0
-573 576 0
-573 579 0
-574 -575 0
-574 -576 0
-575 -576 0
-577 -578 0
-577 -579 0
-578 -579 0
c Encoding variable: field_00006_00002 with domain: int(8) (representing constraint )
c Var 'field_00006_00002' direct represents '8' with '580'
580 0
c Encoding variable: field_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00003' direct represents '1' with '581'
c Var 'field_00006_00003' direct represents '2' with '582'
c Var 'field_00006_00003' direct represents '3' with '583'
c Var 'field_00006_00003' direct represents '4' with '584'
c Var 'field_00006_00003' direct represents '5' with '585'
c Var 'field_00006_00003' direct represents '6' with '586'
c Var 'field_00006_00003' direct represents '7' with '587'
c Var 'field_00006_00003' direct represents '8' with '588'
c Var 'field_00006_00003' direct represents '9' with '589'
581 582 583 584 585 586 587 588 589 0
-581 590 0
-581 593 0
-582 591 0
-582 593 0
-583 592 0
-583 593 0
-584 590 0
-584 594 0
-585 591 0
-585 594 0
-586 592 0
-586 594 0
-587 590 0
-587 595 0
-588 591 0
-588 595 0
-589 592 0
-589 595 0
-590 -591 0
-590 -592 0
-591 -592 0
-593 -594 0
-593 -595 0
-594 -595 0
c Encoding variable: field_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00004' direct represents '1' with '596'
c Var 'field_00006_00004' direct represents '2' with '597'
c Var 'field_00006_00004' direct represents '3' with '598'
c Var 'field_00006_00004' direct represents '4' with '599'
c Var 'field_00006_00004' direct represents '5' with '600'
c Var 'field_00006_00004' direct represents '6' with '601'
c Var 'field_00006_00004' direct represents '7' with '602'
c Var 'field_00006_00004' direct represents '8' with '603'
c Var 'field_00006_00004' direct represents '9' with '604'
596 597 598 599 600 601 602 603 604 0
-596 605 0
-596 608 0
-597 606 0
-597 608 0
-598 607 0
-598 608 0
-599 605 0
-599 609 0
-600 606 0
-600 609 0
-601 607 0
-601 609 0
-602 605 0
-602 610 0
-603 606 0
-603 610 0
-604 607 0
-604 610 0
-605 -606 0
-605 -607 0
-606 -607 0
-608 -609 0
-608 -610 0
-609 -610 0
c Encoding variable: field_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00005' direct represents '1' with '611'
c Var 'field_00006_00005' direct represents '2' with '612'
c Var 'field_00006_00005' direct represents '3' with '613'
c Var 'field_00006_00005' direct represents '4' with '614'
c Var 'field_00006_00005' direct represents '5' with '615'
c Var 'field_00006_00005' direct represents '6' with '616'
c Var 'field_00006_00005' direct represents '7' with '617'
c Var 'field_00006_00005' direct represents '8' with '618'
c Var 'field_00006_00005' direct represents '9' with '619'
611 612 613 614 615 616 617 618 619 0
-611 620 0
-611 623 0
-612 621 0
-612 623 0
-613 622 0
-613 623 0
-614 620 0
-614 624 0
-615 621 0
-615 624 0
-616 622 0
-616 624 0
-617 620 0
-617 625 0
-618 621 0
-618 625 0
-619 622 0
-619 625 0
-620 -621 0
-620 -622 0
-621 -622 0
-623 -624 0
-623 -625 0
-624 -625 0
c Encoding variable: field_00006_00006 with domain: int(7) (representing constraint )
c Var 'field_00006_00006' direct represents '7' with '626'
626 0
c Encoding variable: field_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00007' direct represents '1' with '627'
c Var 'field_00006_00007' direct represents '2' with '628'
c Var 'field_00006_00007' direct represents '3' with '629'
c Var 'field_00006_00007' direct represents '4' with '630'
c Var 'field_00006_00007' direct represents '5' with '631'
c Var 'field_00006_00007' direct represents '6' with '632'
c Var 'field_00006_00007' direct represents '7' with '633'
c Var 'field_00006_00007' direct represents '8' with '634'
c Var 'field_00006_00007' direct represents '9' with '635'
627 628 629 630 631 632 633 634 635 0
-627 636 0
-627 639 0
-628 637 0
-628 639 0
-629 638 0
-629 639 0
-630 636 0
-630 640 0
-631 637 0
-631 640 0
-632 638 0
-632 640 0
-633 636 0
-633 641 0
-634 637 0
-634 641 0
-635 638 0
-635 641 0
-636 -637 0
-636 -638 0
-637 -638 0
-639 -640 0
-639 -641 0
-640 -641 0
c Encoding variable: field_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00008' direct represents '1' with '642'
c Var 'field_00006_00008' direct represents '2' with '643'
c Var 'field_00006_00008' direct represents '3' with '644'
c Var 'field_00006_00008' direct represents '4' with '645'
c Var 'field_00006_00008' direct represents '5' with '646'
c Var 'field_00006_00008' direct represents '6' with '647'
c Var 'field_00006_00008' direct represents '7' with '648'
c Var 'field_00006_00008' direct represents '8' with '649'
c Var 'field_00006_00008' direct represents '9' with '650'
642 643 644 645 646 647 648 649 650 0
-642 651 0
-642 654 0
-643 652 0
-643 654 0
-644 653 0
-644 654 0
-645 651 0
-645 655 0
-646 652 0
-646 655 0
-647 653 0
-647 655 0
-648 651 0
-648 656 0
-649 652 0
-649 656 0
-650 653 0
-650 656 0
-651 -652 0
-651 -653 0
-652 -653 0
-654 -655 0
-654 -656 0
-655 -656 0
c Encoding variable: field_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00009' direct represents '1' with '657'
c Var 'field_00006_00009' direct represents '2' with '658'
c Var 'field_00006_00009' direct represents '3' with '659'
c Var 'field_00006_00009' direct represents '4' with '660'
c Var 'field_00006_00009' direct represents '5' with '661'
c Var 'field_00006_00009' direct represents '6' with '662'
c Var 'field_00006_00009' direct represents '7' with '663'
c Var 'field_00006_00009' direct represents '8' with '664'
c Var 'field_00006_00009' direct represents '9' with '665'
657 658 659 660 661 662 663 664 665 0
-657 666 0
-657 669 0
-658 667 0
-658 669 0
-659 668 0
-659 669 0
-660 666 0
-660 670 0
-661 667 0
-661 670 0
-662 668 0
-662 670 0
-663 666 0
-663 671 0
-664 667 0
-664 671 0
-665 668 0
-665 671 0
-666 -667 0
-666 -668 0
-667 -668 0
-669 -670 0
-669 -671 0
-670 -671 0
c Encoding variable: field_00007_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00001' direct represents '1' with '672'
c Var 'field_00007_00001' direct represents '2' with '673'
c Var 'field_00007_00001' direct represents '3' with '674'
c Var 'field_00007_00001' direct represents '4' with '675'
c Var 'field_00007_00001' direct represents '5' with '676'
c Var 'field_00007_00001' direct represents '6' with '677'
c Var 'field_00007_00001' direct represents '7' with '678'
c Var 'field_00007_00001' direct represents '8' with '679'
c Var 'field_00007_00001' direct represents '9' with '680'
672 673 674 675 676 677 678 679 680 0
-672 681 0
-672 684 0
-673 682 0
-673 684 0
-674 683 0
-674 684 0
-675 681 0
-675 685 0
-676 682 0
-676 685 0
-677 683 0
-677 685 0
-678 681 0
-678 686 0
-679 682 0
-679 686 0
-680 683 0
-680 686 0
-681 -682 0
-681 -683 0
-682 -683 0
-684 -685 0
-684 -686 0
-685 -686 0
c Encoding variable: field_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00002' direct represents '1' with '687'
c Var 'field_00007_00002' direct represents '2' with '688'
c Var 'field_00007_00002' direct represents '3' with '689'
c Var 'field_00007_00002' direct represents '4' with '690'
c Var 'field_00007_00002' direct represents '5' with '691'
c Var 'field_00007_00002' direct represents '6' with '692'
c Var 'field_00007_00002' direct represents '7' with '693'
c Var 'field_00007_00002' direct represents '8' with '694'
c Var 'field_00007_00002' direct represents '9' with '695'
687 688 689 690 691 692 693 694 695 0
-687 696 0
-687 699 0
-688 697 0
-688 699 0
-689 698 0
-689 699 0
-690 696 0
-690 700 0
-691 697 0
-691 700 0
-692 698 0
-692 700 0
-693 696 0
-693 701 0
-694 697 0
-694 701 0
-695 698 0
-695 701 0
-696 -697 0
-696 -698 0
-697 -698 0
-699 -700 0
-699 -701 0
-700 -701 0
c Encoding variable: field_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00003' direct represents '1' with '702'
c Var 'field_00007_00003' direct represents '2' with '703'
c Var 'field_00007_00003' direct represents '3' with '704'
c Var 'field_00007_00003' direct represents '4' with '705'
c Var 'field_00007_00003' direct represents '5' with '706'
c Var 'field_00007_00003' direct represents '6' with '707'
c Var 'field_00007_00003' direct represents '7' with '708'
c Var 'field_00007_00003' direct represents '8' with '709'
c Var 'field_00007_00003' direct represents '9' with '710'
702 703 704 705 706 707 708 709 710 0
-702 711 0
-702 714 0
-703 712 0
-703 714 0
-704 713 0
-704 714 0
-705 711 0
-705 715 0
-706 712 0
-706 715 0
-707 713 0
-707 715 0
-708 711 0
-708 716 0
-709 712 0
-709 716 0
-710 713 0
-710 716 0
-711 -712 0
-711 -713 0
-712 -713 0
-714 -715 0
-714 -716 0
-715 -716 0
c Encoding variable: field_00007_00004 with domain: int(3) (representing constraint )
c Var 'field_00007_00004' direct represents '3' with '717'
717 0
c Encoding variable: field_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00005' direct represents '1' with '718'
c Var 'field_00007_00005' direct represents '2' with '719'
c Var 'field_00007_00005' direct represents '3' with '720'
c Var 'field_00007_00005' direct represents '4' with '721'
c Var 'field_00007_00005' direct represents '5' with '722'
c Var 'field_00007_00005' direct represents '6' with '723'
c Var 'field_00007_00005' direct represents '7' with '724'
c Var 'field_00007_00005' direct represents '8' with '725'
c Var 'field_00007_00005' direct represents '9' with '726'
718 719 720 721 722 723 724 725 726 0
-718 727 0
-718 730 0
-719 728 0
-719 730 0
-720 729 0
-720 730 0
-721 727 0
-721 731 0
-722 728 0
-722 731 0
-723 729 0
-723 731 0
-724 727 0
-724 732 0
-725 728 0
-725 732 0
-726 729 0
-726 732 0
-727 -728 0
-727 -729 0
-728 -729 0
-730 -731 0
-730 -732 0
-731 -732 0
c Encoding variable: field_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00006' direct represents '1' with '733'
c Var 'field_00007_00006' direct represents '2' with '734'
c Var 'field_00007_00006' direct represents '3' with '735'
c Var 'field_00007_00006' direct represents '4' with '736'
c Var 'field_00007_00006' direct represents '5' with '737'
c Var 'field_00007_00006' direct represents '6' with '738'
c Var 'field_00007_00006' direct represents '7' with '739'
c Var 'field_00007_00006' direct represents '8' with '740'
c Var 'field_00007_00006' direct represents '9' with '741'
733 734 735 736 737 738 739 740 741 0
-733 742 0
-733 745 0
-734 743 0
-734 745 0
-735 744 0
-735 745 0
-736 742 0
-736 746 0
-737 743 0
-737 746 0
-738 744 0
-738 746 0
-739 742 0
-739 747 0
-740 743 0
-740 747 0
-741 744 0
-741 747 0
-742 -743 0
-742 -744 0
-743 -744 0
-745 -746 0
-745 -747 0
-746 -747 0
c Encoding variable: field_00007_00007 with domain: int(6) (representing constraint )
c Var 'field_00007_00007' direct represents '6' with '748'
748 0
c Encoding variable: field_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00008' direct represents '1' with '749'
c Var 'field_00007_00008' direct represents '2' with '750'
c Var 'field_00007_00008' direct represents '3' with '751'
c Var 'field_00007_00008' direct represents '4' with '752'
c Var 'field_00007_00008' direct represents '5' with '753'
c Var 'field_00007_00008' direct represents '6' with '754'
c Var 'field_00007_00008' direct represents '7' with '755'
c Var 'field_00007_00008' direct represents '8' with '756'
c Var 'field_00007_00008' direct represents '9' with '757'
749 750 751 752 753 754 755 756 757 0
-749 758 0
-749 761 0
-750 759 0
-750 761 0
-751 760 0
-751 761 0
-752 758 0
-752 762 0
-753 759 0
-753 762 0
-754 760 0
-754 762 0
-755 758 0
-755 763 0
-756 759 0
-756 763 0
-757 760 0
-757 763 0
-758 -759 0
-758 -760 0
-759 -760 0
-761 -762 0
-761 -763 0
-762 -763 0
c Encoding variable: field_00007_00009 with domain: int(7) (representing constraint )
c Var 'field_00007_00009' direct represents '7' with '764'
764 0
c Encoding variable: field_00008_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00001' direct represents '1' with '765'
c Var 'field_00008_00001' direct represents '2' with '766'
c Var 'field_00008_00001' direct represents '3' with '767'
c Var 'field_00008_00001' direct represents '4' with '768'
c Var 'field_00008_00001' direct represents '5' with '769'
c Var 'field_00008_00001' direct represents '6' with '770'
c Var 'field_00008_00001' direct represents '7' with '771'
c Var 'field_00008_00001' direct represents '8' with '772'
c Var 'field_00008_00001' direct represents '9' with '773'
765 766 767 768 769 770 771 772 773 0
-765 774 0
-765 777 0
-766 775 0
-766 777 0
-767 776 0
-767 777 0
-768 774 0
-768 778 0
-769 775 0
-769 778 0
-770 776 0
-770 778 0
-771 774 0
-771 779 0
-772 775 0
-772 779 0
-773 776 0
-773 779 0
-774 -775 0
-774 -776 0
-775 -776 0
-777 -778 0
-777 -779 0
-778 -779 0
c Encoding variable: field_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00002' direct represents '1' with '780'
c Var 'field_00008_00002' direct represents '2' with '781'
c Var 'field_00008_00002' direct represents '3' with '782'
c Var 'field_00008_00002' direct represents '4' with '783'
c Var 'field_00008_00002' direct represents '5' with '784'
c Var 'field_00008_00002' direct represents '6' with '785'
c Var 'field_00008_00002' direct represents '7' with '786'
c Var 'field_00008_00002' direct represents '8' with '787'
c Var 'field_00008_00002' direct represents '9' with '788'
780 781 782 783 784 785 786 787 788 0
-780 789 0
-780 792 0
-781 790 0
-781 792 0
-782 791 0
-782 792 0
-783 789 0
-783 793 0
-784 790 0
-784 793 0
-785 791 0
-785 793 0
-786 789 0
-786 794 0
-787 790 0
-787 794 0
-788 791 0
-788 794 0
-789 -790 0
-789 -791 0
-790 -791 0
-792 -793 0
-792 -794 0
-793 -794 0
c Encoding variable: field_00008_00003 with domain: int(8) (representing constraint )
c Var 'field_00008_00003' direct represents '8' with '795'
795 0
c Encoding variable: field_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00004' direct represents '1' with '796'
c Var 'field_00008_00004' direct represents '2' with '797'
c Var 'field_00008_00004' direct represents '3' with '798'
c Var 'field_00008_00004' direct represents '4' with '799'
c Var 'field_00008_00004' direct represents '5' with '800'
c Var 'field_00008_00004' direct represents '6' with '801'
c Var 'field_00008_00004' direct represents '7' with '802'
c Var 'field_00008_00004' direct represents '8' with '803'
c Var 'field_00008_00004' direct represents '9' with '804'
796 797 798 799 800 801 802 803 804 0
-796 805 0
-796 808 0
-797 806 0
-797 808 0
-798 807 0
-798 808 0
-799 805 0
-799 809 0
-800 806 0
-800 809 0
-801 807 0
-801 809 0
-802 805 0
-802 810 0
-803 806 0
-803 810 0
-804 807 0
-804 810 0
-805 -806 0
-805 -807 0
-806 -807 0
-808 -809 0
-808 -810 0
-809 -810 0
c Encoding variable: field_00008_00005 with domain: int(7) (representing constraint )
c Var 'field_00008_00005' direct represents '7' with '811'
811 0
c Encoding variable: field_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00006' direct represents '1' with '812'
c Var 'field_00008_00006' direct represents '2' with '813'
c Var 'field_00008_00006' direct represents '3' with '814'
c Var 'field_00008_00006' direct represents '4' with '815'
c Var 'field_00008_00006' direct represents '5' with '816'
c Var 'field_00008_00006' direct represents '6' with '817'
c Var 'field_00008_00006' direct represents '7' with '818'
c Var 'field_00008_00006' direct represents '8' with '819'
c Var 'field_00008_00006' direct represents '9' with '820'
812 813 814 815 816 817 818 819 820 0
-812 821 0
-812 824 0
-813 822 0
-813 824 0
-814 823 0
-814 824 0
-815 821 0
-815 825 0
-816 822 0
-816 825 0
-817 823 0
-817 825 0
-818 821 0
-818 826 0
-819 822 0
-819 826 0
-820 823 0
-820 826 0
-821 -822 0
-821 -823 0
-822 -823 0
-824 -825 0
-824 -826 0
-825 -826 0
c Encoding variable: field_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00007' direct represents '1' with '827'
c Var 'field_00008_00007' direct represents '2' with '828'
c Var 'field_00008_00007' direct represents '3' with '829'
c Var 'field_00008_00007' direct represents '4' with '830'
c Var 'field_00008_00007' direct represents '5' with '831'
c Var 'field_00008_00007' direct represents '6' with '832'
c Var 'field_00008_00007' direct represents '7' with '833'
c Var 'field_00008_00007' direct represents '8' with '834'
c Var 'field_00008_00007' direct represents '9' with '835'
827 828 829 830 831 832 833 834 835 0
-827 836 0
-827 839 0
-828 837 0
-828 839 0
-829 838 0
-829 839 0
-830 836 0
-830 840 0
-831 837 0
-831 840 0
-832 838 0
-832 840 0
-833 836 0
-833 841 0
-834 837 0
-834 841 0
-835 838 0
-835 841 0
-836 -837 0
-836 -838 0
-837 -838 0
-839 -840 0
-839 -841 0
-840 -841 0
c Encoding variable: field_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00008' direct represents '1' with '842'
c Var 'field_00008_00008' direct represents '2' with '843'
c Var 'field_00008_00008' direct represents '3' with '844'
c Var 'field_00008_00008' direct represents '4' with '845'
c Var 'field_00008_00008' direct represents '5' with '846'
c Var 'field_00008_00008' direct represents '6' with '847'
c Var 'field_00008_00008' direct represents '7' with '848'
c Var 'field_00008_00008' direct represents '8' with '849'
c Var 'field_00008_00008' direct represents '9' with '850'
842 843 844 845 846 847 848 849 850 0
-842 851 0
-842 854 0
-843 852 0
-843 854 0
-844 853 0
-844 854 0
-845 851 0
-845 855 0
-846 852 0
-846 855 0
-847 853 0
-847 855 0
-848 851 0
-848 856 0
-849 852 0
-849 856 0
-850 853 0
-850 856 0
-851 -852 0
-851 -853 0
-852 -853 0
-854 -855 0
-854 -856 0
-855 -856 0
c Encoding variable: field_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00009' direct represents '1' with '857'
c Var 'field_00008_00009' direct represents '2' with '858'
c Var 'field_00008_00009' direct represents '3' with '859'
c Var 'field_00008_00009' direct represents '4' with '860'
c Var 'field_00008_00009' direct represents '5' with '861'
c Var 'field_00008_00009' direct represents '6' with '862'
c Var 'field_00008_00009' direct represents '7' with '863'
c Var 'field_00008_00009' direct represents '8' with '864'
c Var 'field_00008_00009' direct represents '9' with '865'
857 858 859 860 861 862 863 864 865 0
-857 866 0
-857 869 0
-858 867 0
-858 869 0
-859 868 0
-859 869 0
-860 866 0
-860 870 0
-861 867 0
-861 870 0
-862 868 0
-862 870 0
-863 866 0
-863 871 0
-864 867 0
-864 871 0
-865 868 0
-865 871 0
-866 -867 0
-866 -868 0
-867 -868 0
-869 -870 0
-869 -871 0
-870 -871 0
c Encoding variable: field_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00001' direct represents '1' with '872'
c Var 'field_00009_00001' direct represents '2' with '873'
c Var 'field_00009_00001' direct represents '3' with '874'
c Var 'field_00009_00001' direct represents '4' with '875'
c Var 'field_00009_00001' direct represents '5' with '876'
c Var 'field_00009_00001' direct represents '6' with '877'
c Var 'field_00009_00001' direct represents '7' with '878'
c Var 'field_00009_00001' direct represents '8' with '879'
c Var 'field_00009_00001' direct represents '9' with '880'
872 873 874 875 876 877 878 879 880 0
-872 881 0
-872 884 0
-873 882 0
-873 884 0
-874 883 0
-874 884 0
-875 881 0
-875 885 0
-876 882 0
-876 885 0
-877 883 0
-877 885 0
-878 881 0
-878 886 0
-879 882 0
-879 886 0
-880 883 0
-880 886 0
-881 -882 0
-881 -883 0
-882 -883 0
-884 -885 0
-884 -886 0
-885 -886 0
c Encoding variable: field_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00002' direct represents '1' with '887'
c Var 'field_00009_00002' direct represents '2' with '888'
c Var 'field_00009_00002' direct represents '3' with '889'
c Var 'field_00009_00002' direct represents '4' with '890'
c Var 'field_00009_00002' direct represents '5' with '891'
c Var 'field_00009_00002' direct represents '6' with '892'
c Var 'field_00009_00002' direct represents '7' with '893'
c Var 'field_00009_00002' direct represents '8' with '894'
c Var 'field_00009_00002' direct represents '9' with '895'
887 888 889 890 891 892 893 894 895 0
-887 896 0
-887 899 0
-888 897 0
-888 899 0
-889 898 0
-889 899 0
-890 896 0
-890 900 0
-891 897 0
-891 900 0
-892 898 0
-892 900 0
-893 896 0
-893 901 0
-894 897 0
-894 901 0
-895 898 0
-895 901 0
-896 -897 0
-896 -898 0
-897 -898 0
-899 -900 0
-899 -901 0
-900 -901 0
c Encoding variable: field_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00003' direct represents '1' with '902'
c Var 'field_00009_00003' direct represents '2' with '903'
c Var 'field_00009_00003' direct represents '3' with '904'
c Var 'field_00009_00003' direct represents '4' with '905'
c Var 'field_00009_00003' direct represents '5' with '906'
c Var 'field_00009_00003' direct represents '6' with '907'
c Var 'field_00009_00003' direct represents '7' with '908'
c Var 'field_00009_00003' direct represents '8' with '909'
c Var 'field_00009_00003' direct represents '9' with '910'
902 903 904 905 906 907 908 909 910 0
-902 911 0
-902 914 0
-903 912 0
-903 914 0
-904 913 0
-904 914 0
-905 911 0
-905 915 0
-906 912 0
-906 915 0
-907 913 0
-907 915 0
-908 911 0
-908 916 0
-909 912 0
-909 916 0
-910 913 0
-910 916 0
-911 -912 0
-911 -913 0
-912 -913 0
-914 -915 0
-914 -916 0
-915 -916 0
c Encoding variable: field_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00004' direct represents '1' with '917'
c Var 'field_00009_00004' direct represents '2' with '918'
c Var 'field_00009_00004' direct represents '3' with '919'
c Var 'field_00009_00004' direct represents '4' with '920'
c Var 'field_00009_00004' direct represents '5' with '921'
c Var 'field_00009_00004' direct represents '6' with '922'
c Var 'field_00009_00004' direct represents '7' with '923'
c Var 'field_00009_00004' direct represents '8' with '924'
c Var 'field_00009_00004' direct represents '9' with '925'
917 918 919 920 921 922 923 924 925 0
-917 926 0
-917 929 0
-918 927 0
-918 929 0
-919 928 0
-919 929 0
-920 926 0
-920 930 0
-921 927 0
-921 930 0
-922 928 0
-922 930 0
-923 926 0
-923 931 0
-924 927 0
-924 931 0
-925 928 0
-925 931 0
-926 -927 0
-926 -928 0
-927 -928 0
-929 -930 0
-929 -931 0
-930 -931 0
c Encoding variable: field_00009_00005 with domain: int(1) (representing constraint )
c Var 'field_00009_00005' direct represents '1' with '932'
932 0
c Encoding variable: field_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00006' direct represents '1' with '933'
c Var 'field_00009_00006' direct represents '2' with '934'
c Var 'field_00009_00006' direct represents '3' with '935'
c Var 'field_00009_00006' direct represents '4' with '936'
c Var 'field_00009_00006' direct represents '5' with '937'
c Var 'field_00009_00006' direct represents '6' with '938'
c Var 'field_00009_00006' direct represents '7' with '939'
c Var 'field_00009_00006' direct represents '8' with '940'
c Var 'field_00009_00006' direct represents '9' with '941'
933 934 935 936 937 938 939 940 941 0
-933 942 0
-933 945 0
-934 943 0
-934 945 0
-935 944 0
-935 945 0
-936 942 0
-936 946 0
-937 943 0
-937 946 0
-938 944 0
-938 946 0
-939 942 0
-939 947 0
-940 943 0
-940 947 0
-941 944 0
-941 947 0
-942 -943 0
-942 -944 0
-943 -944 0
-945 -946 0
-945 -947 0
-946 -947 0
c Encoding variable: field_00009_00007 with domain: int(8) (representing constraint )
c Var 'field_00009_00007' direct represents '8' with '948'
948 0
c Encoding variable: field_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00008' direct represents '1' with '949'
c Var 'field_00009_00008' direct represents '2' with '950'
c Var 'field_00009_00008' direct represents '3' with '951'
c Var 'field_00009_00008' direct represents '4' with '952'
c Var 'field_00009_00008' direct represents '5' with '953'
c Var 'field_00009_00008' direct represents '6' with '954'
c Var 'field_00009_00008' direct represents '7' with '955'
c Var 'field_00009_00008' direct represents '8' with '956'
c Var 'field_00009_00008' direct represents '9' with '957'
949 950 951 952 953 954 955 956 957 0
-949 958 0
-949 961 0
-950 959 0
-950 961 0
-951 960 0
-951 961 0
-952 958 0
-952 962 0
-953 959 0
-953 962 0
-954 960 0
-954 962 0
-955 958 0
-955 963 0
-956 959 0
-956 963 0
-957 960 0
-957 963 0
-958 -959 0
-958 -960 0
-959 -960 0
-961 -962 0
-961 -963 0
-962 -963 0
c Encoding variable: field_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00009' direct represents '1' with '964'
c Var 'field_00009_00009' direct represents '2' with '965'
c Var 'field_00009_00009' direct represents '3' with '966'
c Var 'field_00009_00009' direct represents '4' with '967'
c Var 'field_00009_00009' direct represents '5' with '968'
c Var 'field_00009_00009' direct represents '6' with '969'
c Var 'field_00009_00009' direct represents '7' with '970'
c Var 'field_00009_00009' direct represents '8' with '971'
c Var 'field_00009_00009' direct represents '9' with '972'
964 965 966 967 968 969 970 971 972 0
-964 973 0
-964 976 0
-965 974 0
-965 976 0
-966 975 0
-966 976 0
-967 973 0
-967 977 0
-968 974 0
-968 977 0
-969 975 0
-969 977 0
-970 973 0
-970 978 0
-971 974 0
-971 978 0
-972 975 0
-972 978 0
-973 -974 0
-973 -975 0
-974 -975 0
-976 -977 0
-976 -978 0
-977 -978 0
c Encoding variable: row_alldiff_00001 with domain: bool (representing constraint )
c Var 'row_alldiff_00001' direct represents '0' with '-979'
c Var 'row_alldiff_00001' direct represents '1' with '979'
c Var 'row_alldiff_00001' order represents '1' with '1'
c Var 'row_alldiff_00001' order represents '0' with '-979'
c Encoding variable: row_alldiff_00002 with domain: bool (representing constraint )
c Var 'row_alldiff_00002' direct represents '0' with '-980'
c Var 'row_alldiff_00002' direct represents '1' with '980'
c Var 'row_alldiff_00002' order represents '1' with '1'
c Var 'row_alldiff_00002' order represents '0' with '-980'
c Encoding variable: row_alldiff_00003 with domain: bool (representing constraint )
c Var 'row_alldiff_00003' direct represents '0' with '-981'
c Var 'row_alldiff_00003' direct represents '1' with '981'
c Var 'row_alldiff_00003' order represents '1' with '1'
c Var 'row_alldiff_00003' order represents '0' with '-981'
c Encoding variable: row_alldiff_00004 with domain: bool (representing constraint )
c Var 'row_alldiff_00004' direct represents '0' with '-982'
c Var 'row_alldiff_00004' direct represents '1' with '982'
c Var 'row_alldiff_00004' order represents '1' with '1'
c Var 'row_alldiff_00004' order represents '0' with '-982'
c Encoding variable: row_alldiff_00005 with domain: bool (representing constraint )
c Var 'row_alldiff_00005' direct represents '0' with '-983'
c Var 'row_alldiff_00005' direct represents '1' with '983'
c Var 'row_alldiff_00005' order represents '1' with '1'
c Var 'row_alldiff_00005' order represents '0' with '-983'
c Encoding variable: row_alldiff_00006 with domain: bool (representing constraint )
c Var 'row_alldiff_00006' direct represents '0' with '-984'
c Var 'row_alldiff_00006' direct represents '1' with '984'
c Var 'row_alldiff_00006' order represents '1' with '1'
c Var 'row_alldiff_00006' order represents '0' with '-984'
c Encoding variable: row_alldiff_00007 with domain: bool (representing constraint )
c Var 'row_alldiff_00007' direct represents '0' with '-985'
c Var 'row_alldiff_00007' direct represents '1' with '985'
c Var 'row_alldiff_00007' order represents '1' with '1'
c Var 'row_alldiff_00007' order represents '0' with '-985'
c Encoding variable: row_alldiff_00008 with domain: bool (representing constraint )
c Var 'row_alldiff_00008' direct represents '0' with '-986'
c Var 'row_alldiff_00008' direct represents '1' with '986'
c Var 'row_alldiff_00008' order represents '1' with '1'
c Var 'row_alldiff_00008' order represents '0' with '-986'
c Encoding variable: row_alldiff_00009 with domain: bool (representing constraint )
c Var 'row_alldiff_00009' direct represents '0' with '-987'
c Var 'row_alldiff_00009' direct represents '1' with '987'
c Var 'row_alldiff_00009' order represents '1' with '1'
c Var 'row_alldiff_00009' order represents '0' with '-987'
c Encoding variable: col_alldiff_00001 with domain: bool (representing constraint )
c Var 'col_alldiff_00001' direct represents '0' with '-988'
c Var 'col_alldiff_00001' direct represents '1' with '988'
c Var 'col_alldiff_00001' order represents '1' with '1'
c Var 'col_alldiff_00001' order represents '0' with '-988'
c Encoding variable: col_alldiff_00002 with domain: bool (representing constraint )
c Var 'col_alldiff_00002' direct represents '0' with '-989'
c Var 'col_alldiff_00002' direct represents '1' with '989'
c Var 'col_alldiff_00002' order represents '1' with '1'
c Var 'col_alldiff_00002' order represents '0' with '-989'
c Encoding variable: col_alldiff_00003 with domain: bool (representing constraint )
c Var 'col_alldiff_00003' direct represents '0' with '-990'
c Var 'col_alldiff_00003' direct represents '1' with '990'
c Var 'col_alldiff_00003' order represents '1' with '1'
c Var 'col_alldiff_00003' order represents '0' with '-990'
c Encoding variable: col_alldiff_00004 with domain: bool (representing constraint )
c Var 'col_alldiff_00004' direct represents '0' with '-991'
c Var 'col_alldiff_00004' direct represents '1' with '991'
c Var 'col_alldiff_00004' order represents '1' with '1'
c Var 'col_alldiff_00004' order represents '0' with '-991'
c Encoding variable: col_alldiff_00005 with domain: bool (representing constraint )
c Var 'col_alldiff_00005' direct represents '0' with '-992'
c Var 'col_alldiff_00005' direct represents '1' with '992'
c Var 'col_alldiff_00005' order represents '1' with '1'
c Var 'col_alldiff_00005' order represents '0' with '-992'
c Encoding variable: col_alldiff_00006 with domain: bool (representing constraint )
c Var 'col_alldiff_00006' direct represents '0' with '-993'
c Var 'col_alldiff_00006' direct represents '1' with '993'
c Var 'col_alldiff_00006' order represents '1' with '1'
c Var 'col_alldiff_00006' order represents '0' with '-993'
c Encoding variable: col_alldiff_00007 with domain: bool (representing constraint )
c Var 'col_alldiff_00007' direct represents '0' with '-994'
c Var 'col_alldiff_00007' direct represents '1' with '994'
c Var 'col_alldiff_00007' order represents '1' with '1'
c Var 'col_alldiff_00007' order represents '0' with '-994'
c Encoding variable: col_alldiff_00008 with domain: bool (representing constraint )
c Var 'col_alldiff_00008' direct represents '0' with '-995'
c Var 'col_alldiff_00008' direct represents '1' with '995'
c Var 'col_alldiff_00008' order represents '1' with '1'
c Var 'col_alldiff_00008' order represents '0' with '-995'
c Encoding variable: col_alldiff_00009 with domain: bool (representing constraint )
c Var 'col_alldiff_00009' direct represents '0' with '-996'
c Var 'col_alldiff_00009' direct represents '1' with '996'
c Var 'col_alldiff_00009' order represents '1' with '1'
c Var 'col_alldiff_00009' order represents '0' with '-996'
c Encoding variable: clues_left_on_00001_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00001' direct represents '0' with '-997'
c Var 'clues_left_on_00001_00001' direct represents '1' with '997'
c Var 'clues_left_on_00001_00001' order represents '1' with '1'
c Var 'clues_left_on_00001_00001' order represents '0' with '-997'
c Encoding variable: clues_left_on_00001_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00002' direct represents '0' with '-998'
c Var 'clues_left_on_00001_00002' direct represents '1' with '998'
c Var 'clues_left_on_00001_00002' order represents '1' with '1'
c Var 'clues_left_on_00001_00002' order represents '0' with '-998'
c Encoding variable: clues_left_on_00001_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00003' direct represents '0' with '-999'
c Var 'clues_left_on_00001_00003' direct represents '1' with '999'
c Var 'clues_left_on_00001_00003' order represents '1' with '1'
c Var 'clues_left_on_00001_00003' order represents '0' with '-999'
c Encoding variable: clues_left_on_00001_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00004' direct represents '0' with '-1000'
c Var 'clues_left_on_00001_00004' direct represents '1' with '1000'
c Var 'clues_left_on_00001_00004' order represents '1' with '1'
c Var 'clues_left_on_00001_00004' order represents '0' with '-1000'
c Encoding variable: clues_left_on_00001_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00005' direct represents '0' with '-1001'
c Var 'clues_left_on_00001_00005' direct represents '1' with '1001'
c Var 'clues_left_on_00001_00005' order represents '1' with '1'
c Var 'clues_left_on_00001_00005' order represents '0' with '-1001'
c Encoding variable: clues_left_on_00001_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00006' direct represents '0' with '-1002'
c Var 'clues_left_on_00001_00006' direct represents '1' with '1002'
c Var 'clues_left_on_00001_00006' order represents '1' with '1'
c Var 'clues_left_on_00001_00006' order represents '0' with '-1002'
c Encoding variable: clues_left_on_00001_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00007' direct represents '0' with '-1003'
c Var 'clues_left_on_00001_00007' direct represents '1' with '1003'
c Var 'clues_left_on_00001_00007' order represents '1' with '1'
c Var 'clues_left_on_00001_00007' order represents '0' with '-1003'
c Encoding variable: clues_left_on_00001_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00008' direct represents '0' with '-1004'
c Var 'clues_left_on_00001_00008' direct represents '1' with '1004'
c Var 'clues_left_on_00001_00008' order represents '1' with '1'
c Var 'clues_left_on_00001_00008' order represents '0' with '-1004'
c Encoding variable: clues_left_on_00001_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00009' direct represents '0' with '-1005'
c Var 'clues_left_on_00001_00009' direct represents '1' with '1005'
c Var 'clues_left_on_00001_00009' order represents '1' with '1'
c Var 'clues_left_on_00001_00009' order represents '0' with '-1005'
c Encoding variable: clues_left_on_00002_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00001' direct represents '0' with '-1006'
c Var 'clues_left_on_00002_00001' direct represents '1' with '1006'
c Var 'clues_left_on_00002_00001' order represents '1' with '1'
c Var 'clues_left_on_00002_00001' order represents '0' with '-1006'
c Encoding variable: clues_left_on_00002_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00002' direct represents '0' with '-1007'
c Var 'clues_left_on_00002_00002' direct represents '1' with '1007'
c Var 'clues_left_on_00002_00002' order represents '1' with '1'
c Var 'clues_left_on_00002_00002' order represents '0' with '-1007'
c Encoding variable: clues_left_on_00002_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00003' direct represents '0' with '-1008'
c Var 'clues_left_on_00002_00003' direct represents '1' with '1008'
c Var 'clues_left_on_00002_00003' order represents '1' with '1'
c Var 'clues_left_on_00002_00003' order represents '0' with '-1008'
c Encoding variable: clues_left_on_00002_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00004' direct represents '0' with '-1009'
c Var 'clues_left_on_00002_00004' direct represents '1' with '1009'
c Var 'clues_left_on_00002_00004' order represents '1' with '1'
c Var 'clues_left_on_00002_00004' order represents '0' with '-1009'
c Encoding variable: clues_left_on_00002_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00005' direct represents '0' with '-1010'
c Var 'clues_left_on_00002_00005' direct represents '1' with '1010'
c Var 'clues_left_on_00002_00005' order represents '1' with '1'
c Var 'clues_left_on_00002_00005' order represents '0' with '-1010'
c Encoding variable: clues_left_on_00002_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00006' direct represents '0' with '-1011'
c Var 'clues_left_on_00002_00006' direct represents '1' with '1011'
c Var 'clues_left_on_00002_00006' order represents '1' with '1'
c Var 'clues_left_on_00002_00006' order represents '0' with '-1011'
c Encoding variable: clues_left_on_00002_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00007' direct represents '0' with '-1012'
c Var 'clues_left_on_00002_00007' direct represents '1' with '1012'
c Var 'clues_left_on_00002_00007' order represents '1' with '1'
c Var 'clues_left_on_00002_00007' order represents '0' with '-1012'
c Encoding variable: clues_left_on_00002_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00008' direct represents '0' with '-1013'
c Var 'clues_left_on_00002_00008' direct represents '1' with '1013'
c Var 'clues_left_on_00002_00008' order represents '1' with '1'
c Var 'clues_left_on_00002_00008' order represents '0' with '-1013'
c Encoding variable: clues_left_on_00002_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00009' direct represents '0' with '-1014'
c Var 'clues_left_on_00002_00009' direct represents '1' with '1014'
c Var 'clues_left_on_00002_00009' order represents '1' with '1'
c Var 'clues_left_on_00002_00009' order represents '0' with '-1014'
c Encoding variable: clues_left_on_00003_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00001' direct represents '0' with '-1015'
c Var 'clues_left_on_00003_00001' direct represents '1' with '1015'
c Var 'clues_left_on_00003_00001' order represents '1' with '1'
c Var 'clues_left_on_00003_00001' order represents '0' with '-1015'
c Encoding variable: clues_left_on_00003_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00002' direct represents '0' with '-1016'
c Var 'clues_left_on_00003_00002' direct represents '1' with '1016'
c Var 'clues_left_on_00003_00002' order represents '1' with '1'
c Var 'clues_left_on_00003_00002' order represents '0' with '-1016'
c Encoding variable: clues_left_on_00003_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00003' direct represents '0' with '-1017'
c Var 'clues_left_on_00003_00003' direct represents '1' with '1017'
c Var 'clues_left_on_00003_00003' order represents '1' with '1'
c Var 'clues_left_on_00003_00003' order represents '0' with '-1017'
c Encoding variable: clues_left_on_00003_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00004' direct represents '0' with '-1018'
c Var 'clues_left_on_00003_00004' direct represents '1' with '1018'
c Var 'clues_left_on_00003_00004' order represents '1' with '1'
c Var 'clues_left_on_00003_00004' order represents '0' with '-1018'
c Encoding variable: clues_left_on_00003_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00005' direct represents '0' with '-1019'
c Var 'clues_left_on_00003_00005' direct represents '1' with '1019'
c Var 'clues_left_on_00003_00005' order represents '1' with '1'
c Var 'clues_left_on_00003_00005' order represents '0' with '-1019'
c Encoding variable: clues_left_on_00003_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00006' direct represents '0' with '-1020'
c Var 'clues_left_on_00003_00006' direct represents '1' with '1020'
c Var 'clues_left_on_00003_00006' order represents '1' with '1'
c Var 'clues_left_on_00003_00006' order represents '0' with '-1020'
c Encoding variable: clues_left_on_00003_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00007' direct represents '0' with '-1021'
c Var 'clues_left_on_00003_00007' direct represents '1' with '1021'
c Var 'clues_left_on_00003_00007' order represents '1' with '1'
c Var 'clues_left_on_00003_00007' order represents '0' with '-1021'
c Encoding variable: clues_left_on_00003_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00008' direct represents '0' with '-1022'
c Var 'clues_left_on_00003_00008' direct represents '1' with '1022'
c Var 'clues_left_on_00003_00008' order represents '1' with '1'
c Var 'clues_left_on_00003_00008' order represents '0' with '-1022'
c Encoding variable: clues_left_on_00003_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00009' direct represents '0' with '-1023'
c Var 'clues_left_on_00003_00009' direct represents '1' with '1023'
c Var 'clues_left_on_00003_00009' order represents '1' with '1'
c Var 'clues_left_on_00003_00009' order represents '0' with '-1023'
c Encoding variable: clues_left_on_00004_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00001' direct represents '0' with '-1024'
c Var 'clues_left_on_00004_00001' direct represents '1' with '1024'
c Var 'clues_left_on_00004_00001' order represents '1' with '1'
c Var 'clues_left_on_00004_00001' order represents '0' with '-1024'
c Encoding variable: clues_left_on_00004_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00002' direct represents '0' with '-1025'
c Var 'clues_left_on_00004_00002' direct represents '1' with '1025'
c Var 'clues_left_on_00004_00002' order represents '1' with '1'
c Var 'clues_left_on_00004_00002' order represents '0' with '-1025'
c Encoding variable: clues_left_on_00004_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00003' direct represents '0' with '-1026'
c Var 'clues_left_on_00004_00003' direct represents '1' with '1026'
c Var 'clues_left_on_00004_00003' order represents '1' with '1'
c Var 'clues_left_on_00004_00003' order represents '0' with '-1026'
c Encoding variable: clues_left_on_00004_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00004' direct represents '0' with '-1027'
c Var 'clues_left_on_00004_00004' direct represents '1' with '1027'
c Var 'clues_left_on_00004_00004' order represents '1' with '1'
c Var 'clues_left_on_00004_00004' order represents '0' with '-1027'
c Encoding variable: clues_left_on_00004_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00005' direct represents '0' with '-1028'
c Var 'clues_left_on_00004_00005' direct represents '1' with '1028'
c Var 'clues_left_on_00004_00005' order represents '1' with '1'
c Var 'clues_left_on_00004_00005' order represents '0' with '-1028'
c Encoding variable: clues_left_on_00004_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00006' direct represents '0' with '-1029'
c Var 'clues_left_on_00004_00006' direct represents '1' with '1029'
c Var 'clues_left_on_00004_00006' order represents '1' with '1'
c Var 'clues_left_on_00004_00006' order represents '0' with '-1029'
c Encoding variable: clues_left_on_00004_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00007' direct represents '0' with '-1030'
c Var 'clues_left_on_00004_00007' direct represents '1' with '1030'
c Var 'clues_left_on_00004_00007' order represents '1' with '1'
c Var 'clues_left_on_00004_00007' order represents '0' with '-1030'
c Encoding variable: clues_left_on_00004_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00008' direct represents '0' with '-1031'
c Var 'clues_left_on_00004_00008' direct represents '1' with '1031'
c Var 'clues_left_on_00004_00008' order represents '1' with '1'
c Var 'clues_left_on_00004_00008' order represents '0' with '-1031'
c Encoding variable: clues_left_on_00004_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00009' direct represents '0' with '-1032'
c Var 'clues_left_on_00004_00009' direct represents '1' with '1032'
c Var 'clues_left_on_00004_00009' order represents '1' with '1'
c Var 'clues_left_on_00004_00009' order represents '0' with '-1032'
c Encoding variable: max_left_00001_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00001_00000' direct represents '0' with '1033'
1033 0
c Encoding variable: max_left_00001_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00001' order represents '1' with '1034'
c Var 'max_left_00001_00001_00001' direct represents '1' with '1034'
c Var 'max_left_00001_00001_00001' order represents '2' with '1035'
-1034 1035 0
c Var 'max_left_00001_00001_00001' direct represents '2' with '1036'
1034 -1035 1036 0
-1036 1035 0
-1036 -1034 0
c Var 'max_left_00001_00001_00001' order represents '3' with '1037'
-1035 1037 0
c Var 'max_left_00001_00001_00001' direct represents '3' with '1038'
1035 -1037 1038 0
-1038 1037 0
-1038 -1035 0
c Var 'max_left_00001_00001_00001' order represents '4' with '1039'
-1037 1039 0
c Var 'max_left_00001_00001_00001' direct represents '4' with '1040'
1037 -1039 1040 0
-1040 1039 0
-1040 -1037 0
c Var 'max_left_00001_00001_00001' order represents '5' with '1041'
-1039 1041 0
c Var 'max_left_00001_00001_00001' direct represents '5' with '1042'
1039 -1041 1042 0
-1042 1041 0
-1042 -1039 0
c Var 'max_left_00001_00001_00001' order represents '6' with '1043'
-1041 1043 0
c Var 'max_left_00001_00001_00001' direct represents '6' with '1044'
1041 -1043 1044 0
-1044 1043 0
-1044 -1041 0
c Var 'max_left_00001_00001_00001' order represents '7' with '1045'
-1043 1045 0
c Var 'max_left_00001_00001_00001' direct represents '7' with '1046'
1043 -1045 1046 0
-1046 1045 0
-1046 -1043 0
c Var 'max_left_00001_00001_00001' order represents '8' with '1047'
-1045 1047 0
c Var 'max_left_00001_00001_00001' direct represents '8' with '1048'
1045 -1047 1048 0
-1048 1047 0
-1048 -1045 0
c Var 'max_left_00001_00001_00001' direct represents '9' with '-1047'
1034 1036 1038 1040 1042 1044 1046 1048 -1047 0
c Encoding variable: max_left_00001_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00002' order represents '1' with '1049'
c Var 'max_left_00001_00001_00002' direct represents '1' with '1049'
c Var 'max_left_00001_00001_00002' order represents '2' with '1050'
-1049 1050 0
c Var 'max_left_00001_00001_00002' direct represents '2' with '1051'
1049 -1050 1051 0
-1051 1050 0
-1051 -1049 0
c Var 'max_left_00001_00001_00002' order represents '3' with '1052'
-1050 1052 0
c Var 'max_left_00001_00001_00002' direct represents '3' with '1053'
1050 -1052 1053 0
-1053 1052 0
-1053 -1050 0
c Var 'max_left_00001_00001_00002' order represents '4' with '1054'
-1052 1054 0
c Var 'max_left_00001_00001_00002' direct represents '4' with '1055'
1052 -1054 1055 0
-1055 1054 0
-1055 -1052 0
c Var 'max_left_00001_00001_00002' order represents '5' with '1056'
-1054 1056 0
c Var 'max_left_00001_00001_00002' direct represents '5' with '1057'
1054 -1056 1057 0
-1057 1056 0
-1057 -1054 0
c Var 'max_left_00001_00001_00002' order represents '6' with '1058'
-1056 1058 0
c Var 'max_left_00001_00001_00002' direct represents '6' with '1059'
1056 -1058 1059 0
-1059 1058 0
-1059 -1056 0
c Var 'max_left_00001_00001_00002' order represents '7' with '1060'
-1058 1060 0
c Var 'max_left_00001_00001_00002' direct represents '7' with '1061'
1058 -1060 1061 0
-1061 1060 0
-1061 -1058 0
c Var 'max_left_00001_00001_00002' order represents '8' with '1062'
-1060 1062 0
c Var 'max_left_00001_00001_00002' direct represents '8' with '1063'
1060 -1062 1063 0
-1063 1062 0
-1063 -1060 0
c Var 'max_left_00001_00001_00002' direct represents '9' with '-1062'
1049 1051 1053 1055 1057 1059 1061 1063 -1062 0
c Encoding variable: max_left_00001_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00003' order represents '1' with '1064'
c Var 'max_left_00001_00001_00003' direct represents '1' with '1064'
c Var 'max_left_00001_00001_00003' order represents '2' with '1065'
-1064 1065 0
c Var 'max_left_00001_00001_00003' direct represents '2' with '1066'
1064 -1065 1066 0
-1066 1065 0
-1066 -1064 0
c Var 'max_left_00001_00001_00003' order represents '3' with '1067'
-1065 1067 0
c Var 'max_left_00001_00001_00003' direct represents '3' with '1068'
1065 -1067 1068 0
-1068 1067 0
-1068 -1065 0
c Var 'max_left_00001_00001_00003' order represents '4' with '1069'
-1067 1069 0
c Var 'max_left_00001_00001_00003' direct represents '4' with '1070'
1067 -1069 1070 0
-1070 1069 0
-1070 -1067 0
c Var 'max_left_00001_00001_00003' order represents '5' with '1071'
-1069 1071 0
c Var 'max_left_00001_00001_00003' direct represents '5' with '1072'
1069 -1071 1072 0
-1072 1071 0
-1072 -1069 0
c Var 'max_left_00001_00001_00003' order represents '6' with '1073'
-1071 1073 0
c Var 'max_left_00001_00001_00003' direct represents '6' with '1074'
1071 -1073 1074 0
-1074 1073 0
-1074 -1071 0
c Var 'max_left_00001_00001_00003' order represents '7' with '1075'
-1073 1075 0
c Var 'max_left_00001_00001_00003' direct represents '7' with '1076'
1073 -1075 1076 0
-1076 1075 0
-1076 -1073 0
c Var 'max_left_00001_00001_00003' order represents '8' with '1077'
-1075 1077 0
c Var 'max_left_00001_00001_00003' direct represents '8' with '1078'
1075 -1077 1078 0
-1078 1077 0
-1078 -1075 0
c Var 'max_left_00001_00001_00003' direct represents '9' with '-1077'
1064 1066 1068 1070 1072 1074 1076 1078 -1077 0
c Encoding variable: max_left_00001_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00004' order represents '1' with '1079'
c Var 'max_left_00001_00001_00004' direct represents '1' with '1079'
c Var 'max_left_00001_00001_00004' order represents '2' with '1080'
-1079 1080 0
c Var 'max_left_00001_00001_00004' direct represents '2' with '1081'
1079 -1080 1081 0
-1081 1080 0
-1081 -1079 0
c Var 'max_left_00001_00001_00004' order represents '3' with '1082'
-1080 1082 0
c Var 'max_left_00001_00001_00004' direct represents '3' with '1083'
1080 -1082 1083 0
-1083 1082 0
-1083 -1080 0
c Var 'max_left_00001_00001_00004' order represents '4' with '1084'
-1082 1084 0
c Var 'max_left_00001_00001_00004' direct represents '4' with '1085'
1082 -1084 1085 0
-1085 1084 0
-1085 -1082 0
c Var 'max_left_00001_00001_00004' order represents '5' with '1086'
-1084 1086 0
c Var 'max_left_00001_00001_00004' direct represents '5' with '1087'
1084 -1086 1087 0
-1087 1086 0
-1087 -1084 0
c Var 'max_left_00001_00001_00004' order represents '6' with '1088'
-1086 1088 0
c Var 'max_left_00001_00001_00004' direct represents '6' with '1089'
1086 -1088 1089 0
-1089 1088 0
-1089 -1086 0
c Var 'max_left_00001_00001_00004' order represents '7' with '1090'
-1088 1090 0
c Var 'max_left_00001_00001_00004' direct represents '7' with '1091'
1088 -1090 1091 0
-1091 1090 0
-1091 -1088 0
c Var 'max_left_00001_00001_00004' order represents '8' with '1092'
-1090 1092 0
c Var 'max_left_00001_00001_00004' direct represents '8' with '1093'
1090 -1092 1093 0
-1093 1092 0
-1093 -1090 0
c Var 'max_left_00001_00001_00004' direct represents '9' with '-1092'
1079 1081 1083 1085 1087 1089 1091 1093 -1092 0
c Encoding variable: max_left_00001_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00005' order represents '1' with '1094'
c Var 'max_left_00001_00001_00005' direct represents '1' with '1094'
c Var 'max_left_00001_00001_00005' order represents '2' with '1095'
-1094 1095 0
c Var 'max_left_00001_00001_00005' direct represents '2' with '1096'
1094 -1095 1096 0
-1096 1095 0
-1096 -1094 0
c Var 'max_left_00001_00001_00005' order represents '3' with '1097'
-1095 1097 0
c Var 'max_left_00001_00001_00005' direct represents '3' with '1098'
1095 -1097 1098 0
-1098 1097 0
-1098 -1095 0
c Var 'max_left_00001_00001_00005' order represents '4' with '1099'
-1097 1099 0
c Var 'max_left_00001_00001_00005' direct represents '4' with '1100'
1097 -1099 1100 0
-1100 1099 0
-1100 -1097 0
c Var 'max_left_00001_00001_00005' order represents '5' with '1101'
-1099 1101 0
c Var 'max_left_00001_00001_00005' direct represents '5' with '1102'
1099 -1101 1102 0
-1102 1101 0
-1102 -1099 0
c Var 'max_left_00001_00001_00005' order represents '6' with '1103'
-1101 1103 0
c Var 'max_left_00001_00001_00005' direct represents '6' with '1104'
1101 -1103 1104 0
-1104 1103 0
-1104 -1101 0
c Var 'max_left_00001_00001_00005' order represents '7' with '1105'
-1103 1105 0
c Var 'max_left_00001_00001_00005' direct represents '7' with '1106'
1103 -1105 1106 0
-1106 1105 0
-1106 -1103 0
c Var 'max_left_00001_00001_00005' order represents '8' with '1107'
-1105 1107 0
c Var 'max_left_00001_00001_00005' direct represents '8' with '1108'
1105 -1107 1108 0
-1108 1107 0
-1108 -1105 0
c Var 'max_left_00001_00001_00005' direct represents '9' with '-1107'
1094 1096 1098 1100 1102 1104 1106 1108 -1107 0
c Encoding variable: max_left_00001_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00006' order represents '1' with '1109'
c Var 'max_left_00001_00001_00006' direct represents '1' with '1109'
c Var 'max_left_00001_00001_00006' order represents '2' with '1110'
-1109 1110 0
c Var 'max_left_00001_00001_00006' direct represents '2' with '1111'
1109 -1110 1111 0
-1111 1110 0
-1111 -1109 0
c Var 'max_left_00001_00001_00006' order represents '3' with '1112'
-1110 1112 0
c Var 'max_left_00001_00001_00006' direct represents '3' with '1113'
1110 -1112 1113 0
-1113 1112 0
-1113 -1110 0
c Var 'max_left_00001_00001_00006' order represents '4' with '1114'
-1112 1114 0
c Var 'max_left_00001_00001_00006' direct represents '4' with '1115'
1112 -1114 1115 0
-1115 1114 0
-1115 -1112 0
c Var 'max_left_00001_00001_00006' order represents '5' with '1116'
-1114 1116 0
c Var 'max_left_00001_00001_00006' direct represents '5' with '1117'
1114 -1116 1117 0
-1117 1116 0
-1117 -1114 0
c Var 'max_left_00001_00001_00006' order represents '6' with '1118'
-1116 1118 0
c Var 'max_left_00001_00001_00006' direct represents '6' with '1119'
1116 -1118 1119 0
-1119 1118 0
-1119 -1116 0
c Var 'max_left_00001_00001_00006' order represents '7' with '1120'
-1118 1120 0
c Var 'max_left_00001_00001_00006' direct represents '7' with '1121'
1118 -1120 1121 0
-1121 1120 0
-1121 -1118 0
c Var 'max_left_00001_00001_00006' order represents '8' with '1122'
-1120 1122 0
c Var 'max_left_00001_00001_00006' direct represents '8' with '1123'
1120 -1122 1123 0
-1123 1122 0
-1123 -1120 0
c Var 'max_left_00001_00001_00006' direct represents '9' with '-1122'
1109 1111 1113 1115 1117 1119 1121 1123 -1122 0
c Encoding variable: max_left_00001_00001_00007 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00007' order represents '5' with '1124'
c Var 'max_left_00001_00001_00007' direct represents '5' with '1124'
c Var 'max_left_00001_00001_00007' order represents '6' with '1125'
-1124 1125 0
c Var 'max_left_00001_00001_00007' direct represents '6' with '1126'
1124 -1125 1126 0
-1126 1125 0
-1126 -1124 0
c Var 'max_left_00001_00001_00007' order represents '7' with '1127'
-1125 1127 0
c Var 'max_left_00001_00001_00007' direct represents '7' with '1128'
1125 -1127 1128 0
-1128 1127 0
-1128 -1125 0
c Var 'max_left_00001_00001_00007' order represents '8' with '1129'
-1127 1129 0
c Var 'max_left_00001_00001_00007' direct represents '8' with '1130'
1127 -1129 1130 0
-1130 1129 0
-1130 -1127 0
c Var 'max_left_00001_00001_00007' direct represents '9' with '-1129'
1124 1126 1128 1130 -1129 0
c Encoding variable: max_left_00001_00001_00008 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00008' order represents '5' with '1131'
c Var 'max_left_00001_00001_00008' direct represents '5' with '1131'
c Var 'max_left_00001_00001_00008' order represents '6' with '1132'
-1131 1132 0
c Var 'max_left_00001_00001_00008' direct represents '6' with '1133'
1131 -1132 1133 0
-1133 1132 0
-1133 -1131 0
c Var 'max_left_00001_00001_00008' order represents '7' with '1134'
-1132 1134 0
c Var 'max_left_00001_00001_00008' direct represents '7' with '1135'
1132 -1134 1135 0
-1135 1134 0
-1135 -1132 0
c Var 'max_left_00001_00001_00008' order represents '8' with '1136'
-1134 1136 0
c Var 'max_left_00001_00001_00008' direct represents '8' with '1137'
1134 -1136 1137 0
-1137 1136 0
-1137 -1134 0
c Var 'max_left_00001_00001_00008' direct represents '9' with '-1136'
1131 1133 1135 1137 -1136 0
c Encoding variable: max_left_00001_00001_00009 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00009' order represents '5' with '1138'
c Var 'max_left_00001_00001_00009' direct represents '5' with '1138'
c Var 'max_left_00001_00001_00009' order represents '6' with '1139'
-1138 1139 0
c Var 'max_left_00001_00001_00009' direct represents '6' with '1140'
1138 -1139 1140 0
-1140 1139 0
-1140 -1138 0
c Var 'max_left_00001_00001_00009' order represents '7' with '1141'
-1139 1141 0
c Var 'max_left_00001_00001_00009' direct represents '7' with '1142'
1139 -1141 1142 0
-1142 1141 0
-1142 -1139 0
c Var 'max_left_00001_00001_00009' order represents '8' with '1143'
-1141 1143 0
c Var 'max_left_00001_00001_00009' direct represents '8' with '1144'
1141 -1143 1144 0
-1144 1143 0
-1144 -1141 0
c Var 'max_left_00001_00001_00009' direct represents '9' with '-1143'
1138 1140 1142 1144 -1143 0
c Encoding variable: max_left_00001_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00002_00000' direct represents '0' with '1145'
1145 0
c Encoding variable: max_left_00001_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00001' order represents '1' with '1146'
c Var 'max_left_00001_00002_00001' direct represents '1' with '1146'
c Var 'max_left_00001_00002_00001' order represents '2' with '1147'
-1146 1147 0
c Var 'max_left_00001_00002_00001' direct represents '2' with '1148'
1146 -1147 1148 0
-1148 1147 0
-1148 -1146 0
c Var 'max_left_00001_00002_00001' order represents '3' with '1149'
-1147 1149 0
c Var 'max_left_00001_00002_00001' direct represents '3' with '1150'
1147 -1149 1150 0
-1150 1149 0
-1150 -1147 0
c Var 'max_left_00001_00002_00001' order represents '4' with '1151'
-1149 1151 0
c Var 'max_left_00001_00002_00001' direct represents '4' with '1152'
1149 -1151 1152 0
-1152 1151 0
-1152 -1149 0
c Var 'max_left_00001_00002_00001' order represents '5' with '1153'
-1151 1153 0
c Var 'max_left_00001_00002_00001' direct represents '5' with '1154'
1151 -1153 1154 0
-1154 1153 0
-1154 -1151 0
c Var 'max_left_00001_00002_00001' order represents '6' with '1155'
-1153 1155 0
c Var 'max_left_00001_00002_00001' direct represents '6' with '1156'
1153 -1155 1156 0
-1156 1155 0
-1156 -1153 0
c Var 'max_left_00001_00002_00001' order represents '7' with '1157'
-1155 1157 0
c Var 'max_left_00001_00002_00001' direct represents '7' with '1158'
1155 -1157 1158 0
-1158 1157 0
-1158 -1155 0
c Var 'max_left_00001_00002_00001' order represents '8' with '1159'
-1157 1159 0
c Var 'max_left_00001_00002_00001' direct represents '8' with '1160'
1157 -1159 1160 0
-1160 1159 0
-1160 -1157 0
c Var 'max_left_00001_00002_00001' direct represents '9' with '-1159'
1146 1148 1150 1152 1154 1156 1158 1160 -1159 0
c Encoding variable: max_left_00001_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00002' order represents '1' with '1161'
c Var 'max_left_00001_00002_00002' direct represents '1' with '1161'
c Var 'max_left_00001_00002_00002' order represents '2' with '1162'
-1161 1162 0
c Var 'max_left_00001_00002_00002' direct represents '2' with '1163'
1161 -1162 1163 0
-1163 1162 0
-1163 -1161 0
c Var 'max_left_00001_00002_00002' order represents '3' with '1164'
-1162 1164 0
c Var 'max_left_00001_00002_00002' direct represents '3' with '1165'
1162 -1164 1165 0
-1165 1164 0
-1165 -1162 0
c Var 'max_left_00001_00002_00002' order represents '4' with '1166'
-1164 1166 0
c Var 'max_left_00001_00002_00002' direct represents '4' with '1167'
1164 -1166 1167 0
-1167 1166 0
-1167 -1164 0
c Var 'max_left_00001_00002_00002' order represents '5' with '1168'
-1166 1168 0
c Var 'max_left_00001_00002_00002' direct represents '5' with '1169'
1166 -1168 1169 0
-1169 1168 0
-1169 -1166 0
c Var 'max_left_00001_00002_00002' order represents '6' with '1170'
-1168 1170 0
c Var 'max_left_00001_00002_00002' direct represents '6' with '1171'
1168 -1170 1171 0
-1171 1170 0
-1171 -1168 0
c Var 'max_left_00001_00002_00002' order represents '7' with '1172'
-1170 1172 0
c Var 'max_left_00001_00002_00002' direct represents '7' with '1173'
1170 -1172 1173 0
-1173 1172 0
-1173 -1170 0
c Var 'max_left_00001_00002_00002' order represents '8' with '1174'
-1172 1174 0
c Var 'max_left_00001_00002_00002' direct represents '8' with '1175'
1172 -1174 1175 0
-1175 1174 0
-1175 -1172 0
c Var 'max_left_00001_00002_00002' direct represents '9' with '-1174'
1161 1163 1165 1167 1169 1171 1173 1175 -1174 0
c Encoding variable: max_left_00001_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00003' order represents '1' with '1176'
c Var 'max_left_00001_00002_00003' direct represents '1' with '1176'
c Var 'max_left_00001_00002_00003' order represents '2' with '1177'
-1176 1177 0
c Var 'max_left_00001_00002_00003' direct represents '2' with '1178'
1176 -1177 1178 0
-1178 1177 0
-1178 -1176 0
c Var 'max_left_00001_00002_00003' order represents '3' with '1179'
-1177 1179 0
c Var 'max_left_00001_00002_00003' direct represents '3' with '1180'
1177 -1179 1180 0
-1180 1179 0
-1180 -1177 0
c Var 'max_left_00001_00002_00003' order represents '4' with '1181'
-1179 1181 0
c Var 'max_left_00001_00002_00003' direct represents '4' with '1182'
1179 -1181 1182 0
-1182 1181 0
-1182 -1179 0
c Var 'max_left_00001_00002_00003' order represents '5' with '1183'
-1181 1183 0
c Var 'max_left_00001_00002_00003' direct represents '5' with '1184'
1181 -1183 1184 0
-1184 1183 0
-1184 -1181 0
c Var 'max_left_00001_00002_00003' order represents '6' with '1185'
-1183 1185 0
c Var 'max_left_00001_00002_00003' direct represents '6' with '1186'
1183 -1185 1186 0
-1186 1185 0
-1186 -1183 0
c Var 'max_left_00001_00002_00003' order represents '7' with '1187'
-1185 1187 0
c Var 'max_left_00001_00002_00003' direct represents '7' with '1188'
1185 -1187 1188 0
-1188 1187 0
-1188 -1185 0
c Var 'max_left_00001_00002_00003' order represents '8' with '1189'
-1187 1189 0
c Var 'max_left_00001_00002_00003' direct represents '8' with '1190'
1187 -1189 1190 0
-1190 1189 0
-1190 -1187 0
c Var 'max_left_00001_00002_00003' direct represents '9' with '-1189'
1176 1178 1180 1182 1184 1186 1188 1190 -1189 0
c Encoding variable: max_left_00001_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00004' order represents '1' with '1191'
c Var 'max_left_00001_00002_00004' direct represents '1' with '1191'
c Var 'max_left_00001_00002_00004' order represents '2' with '1192'
-1191 1192 0
c Var 'max_left_00001_00002_00004' direct represents '2' with '1193'
1191 -1192 1193 0
-1193 1192 0
-1193 -1191 0
c Var 'max_left_00001_00002_00004' order represents '3' with '1194'
-1192 1194 0
c Var 'max_left_00001_00002_00004' direct represents '3' with '1195'
1192 -1194 1195 0
-1195 1194 0
-1195 -1192 0
c Var 'max_left_00001_00002_00004' order represents '4' with '1196'
-1194 1196 0
c Var 'max_left_00001_00002_00004' direct represents '4' with '1197'
1194 -1196 1197 0
-1197 1196 0
-1197 -1194 0
c Var 'max_left_00001_00002_00004' order represents '5' with '1198'
-1196 1198 0
c Var 'max_left_00001_00002_00004' direct represents '5' with '1199'
1196 -1198 1199 0
-1199 1198 0
-1199 -1196 0
c Var 'max_left_00001_00002_00004' order represents '6' with '1200'
-1198 1200 0
c Var 'max_left_00001_00002_00004' direct represents '6' with '1201'
1198 -1200 1201 0
-1201 1200 0
-1201 -1198 0
c Var 'max_left_00001_00002_00004' order represents '7' with '1202'
-1200 1202 0
c Var 'max_left_00001_00002_00004' direct represents '7' with '1203'
1200 -1202 1203 0
-1203 1202 0
-1203 -1200 0
c Var 'max_left_00001_00002_00004' order represents '8' with '1204'
-1202 1204 0
c Var 'max_left_00001_00002_00004' direct represents '8' with '1205'
1202 -1204 1205 0
-1205 1204 0
-1205 -1202 0
c Var 'max_left_00001_00002_00004' direct represents '9' with '-1204'
1191 1193 1195 1197 1199 1201 1203 1205 -1204 0
c Encoding variable: max_left_00001_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00005' order represents '1' with '1206'
c Var 'max_left_00001_00002_00005' direct represents '1' with '1206'
c Var 'max_left_00001_00002_00005' order represents '2' with '1207'
-1206 1207 0
c Var 'max_left_00001_00002_00005' direct represents '2' with '1208'
1206 -1207 1208 0
-1208 1207 0
-1208 -1206 0
c Var 'max_left_00001_00002_00005' order represents '3' with '1209'
-1207 1209 0
c Var 'max_left_00001_00002_00005' direct represents '3' with '1210'
1207 -1209 1210 0
-1210 1209 0
-1210 -1207 0
c Var 'max_left_00001_00002_00005' order represents '4' with '1211'
-1209 1211 0
c Var 'max_left_00001_00002_00005' direct represents '4' with '1212'
1209 -1211 1212 0
-1212 1211 0
-1212 -1209 0
c Var 'max_left_00001_00002_00005' order represents '5' with '1213'
-1211 1213 0
c Var 'max_left_00001_00002_00005' direct represents '5' with '1214'
1211 -1213 1214 0
-1214 1213 0
-1214 -1211 0
c Var 'max_left_00001_00002_00005' order represents '6' with '1215'
-1213 1215 0
c Var 'max_left_00001_00002_00005' direct represents '6' with '1216'
1213 -1215 1216 0
-1216 1215 0
-1216 -1213 0
c Var 'max_left_00001_00002_00005' order represents '7' with '1217'
-1215 1217 0
c Var 'max_left_00001_00002_00005' direct represents '7' with '1218'
1215 -1217 1218 0
-1218 1217 0
-1218 -1215 0
c Var 'max_left_00001_00002_00005' order represents '8' with '1219'
-1217 1219 0
c Var 'max_left_00001_00002_00005' direct represents '8' with '1220'
1217 -1219 1220 0
-1220 1219 0
-1220 -1217 0
c Var 'max_left_00001_00002_00005' direct represents '9' with '-1219'
1206 1208 1210 1212 1214 1216 1218 1220 -1219 0
c Encoding variable: max_left_00001_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00006' order represents '1' with '1221'
c Var 'max_left_00001_00002_00006' direct represents '1' with '1221'
c Var 'max_left_00001_00002_00006' order represents '2' with '1222'
-1221 1222 0
c Var 'max_left_00001_00002_00006' direct represents '2' with '1223'
1221 -1222 1223 0
-1223 1222 0
-1223 -1221 0
c Var 'max_left_00001_00002_00006' order represents '3' with '1224'
-1222 1224 0
c Var 'max_left_00001_00002_00006' direct represents '3' with '1225'
1222 -1224 1225 0
-1225 1224 0
-1225 -1222 0
c Var 'max_left_00001_00002_00006' order represents '4' with '1226'
-1224 1226 0
c Var 'max_left_00001_00002_00006' direct represents '4' with '1227'
1224 -1226 1227 0
-1227 1226 0
-1227 -1224 0
c Var 'max_left_00001_00002_00006' order represents '5' with '1228'
-1226 1228 0
c Var 'max_left_00001_00002_00006' direct represents '5' with '1229'
1226 -1228 1229 0
-1229 1228 0
-1229 -1226 0
c Var 'max_left_00001_00002_00006' order represents '6' with '1230'
-1228 1230 0
c Var 'max_left_00001_00002_00006' direct represents '6' with '1231'
1228 -1230 1231 0
-1231 1230 0
-1231 -1228 0
c Var 'max_left_00001_00002_00006' order represents '7' with '1232'
-1230 1232 0
c Var 'max_left_00001_00002_00006' direct represents '7' with '1233'
1230 -1232 1233 0
-1233 1232 0
-1233 -1230 0
c Var 'max_left_00001_00002_00006' order represents '8' with '1234'
-1232 1234 0
c Var 'max_left_00001_00002_00006' direct represents '8' with '1235'
1232 -1234 1235 0
-1235 1234 0
-1235 -1232 0
c Var 'max_left_00001_00002_00006' direct represents '9' with '-1234'
1221 1223 1225 1227 1229 1231 1233 1235 -1234 0
c Encoding variable: max_left_00001_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00007' order represents '1' with '1236'
c Var 'max_left_00001_00002_00007' direct represents '1' with '1236'
c Var 'max_left_00001_00002_00007' order represents '2' with '1237'
-1236 1237 0
c Var 'max_left_00001_00002_00007' direct represents '2' with '1238'
1236 -1237 1238 0
-1238 1237 0
-1238 -1236 0
c Var 'max_left_00001_00002_00007' order represents '3' with '1239'
-1237 1239 0
c Var 'max_left_00001_00002_00007' direct represents '3' with '1240'
1237 -1239 1240 0
-1240 1239 0
-1240 -1237 0
c Var 'max_left_00001_00002_00007' order represents '4' with '1241'
-1239 1241 0
c Var 'max_left_00001_00002_00007' direct represents '4' with '1242'
1239 -1241 1242 0
-1242 1241 0
-1242 -1239 0
c Var 'max_left_00001_00002_00007' order represents '5' with '1243'
-1241 1243 0
c Var 'max_left_00001_00002_00007' direct represents '5' with '1244'
1241 -1243 1244 0
-1244 1243 0
-1244 -1241 0
c Var 'max_left_00001_00002_00007' order represents '6' with '1245'
-1243 1245 0
c Var 'max_left_00001_00002_00007' direct represents '6' with '1246'
1243 -1245 1246 0
-1246 1245 0
-1246 -1243 0
c Var 'max_left_00001_00002_00007' order represents '7' with '1247'
-1245 1247 0
c Var 'max_left_00001_00002_00007' direct represents '7' with '1248'
1245 -1247 1248 0
-1248 1247 0
-1248 -1245 0
c Var 'max_left_00001_00002_00007' order represents '8' with '1249'
-1247 1249 0
c Var 'max_left_00001_00002_00007' direct represents '8' with '1250'
1247 -1249 1250 0
-1250 1249 0
-1250 -1247 0
c Var 'max_left_00001_00002_00007' direct represents '9' with '-1249'
1236 1238 1240 1242 1244 1246 1248 1250 -1249 0
c Encoding variable: max_left_00001_00002_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00008' order represents '7' with '1251'
c Var 'max_left_00001_00002_00008' direct represents '7' with '1251'
c Var 'max_left_00001_00002_00008' order represents '8' with '1252'
-1251 1252 0
c Var 'max_left_00001_00002_00008' direct represents '8' with '1253'
1251 -1252 1253 0
-1253 1252 0
-1253 -1251 0
c Var 'max_left_00001_00002_00008' direct represents '9' with '-1252'
1251 1253 -1252 0
c Encoding variable: max_left_00001_00002_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00009' order represents '7' with '1254'
c Var 'max_left_00001_00002_00009' direct represents '7' with '1254'
c Var 'max_left_00001_00002_00009' order represents '8' with '1255'
-1254 1255 0
c Var 'max_left_00001_00002_00009' direct represents '8' with '1256'
1254 -1255 1256 0
-1256 1255 0
-1256 -1254 0
c Var 'max_left_00001_00002_00009' direct represents '9' with '-1255'
1254 1256 -1255 0
c Encoding variable: max_left_00001_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00003_00000' direct represents '0' with '1257'
1257 0
c Encoding variable: max_left_00001_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00001' order represents '1' with '1258'
c Var 'max_left_00001_00003_00001' direct represents '1' with '1258'
c Var 'max_left_00001_00003_00001' order represents '2' with '1259'
-1258 1259 0
c Var 'max_left_00001_00003_00001' direct represents '2' with '1260'
1258 -1259 1260 0
-1260 1259 0
-1260 -1258 0
c Var 'max_left_00001_00003_00001' order represents '3' with '1261'
-1259 1261 0
c Var 'max_left_00001_00003_00001' direct represents '3' with '1262'
1259 -1261 1262 0
-1262 1261 0
-1262 -1259 0
c Var 'max_left_00001_00003_00001' order represents '4' with '1263'
-1261 1263 0
c Var 'max_left_00001_00003_00001' direct represents '4' with '1264'
1261 -1263 1264 0
-1264 1263 0
-1264 -1261 0
c Var 'max_left_00001_00003_00001' order represents '5' with '1265'
-1263 1265 0
c Var 'max_left_00001_00003_00001' direct represents '5' with '1266'
1263 -1265 1266 0
-1266 1265 0
-1266 -1263 0
c Var 'max_left_00001_00003_00001' order represents '6' with '1267'
-1265 1267 0
c Var 'max_left_00001_00003_00001' direct represents '6' with '1268'
1265 -1267 1268 0
-1268 1267 0
-1268 -1265 0
c Var 'max_left_00001_00003_00001' order represents '7' with '1269'
-1267 1269 0
c Var 'max_left_00001_00003_00001' direct represents '7' with '1270'
1267 -1269 1270 0
-1270 1269 0
-1270 -1267 0
c Var 'max_left_00001_00003_00001' order represents '8' with '1271'
-1269 1271 0
c Var 'max_left_00001_00003_00001' direct represents '8' with '1272'
1269 -1271 1272 0
-1272 1271 0
-1272 -1269 0
c Var 'max_left_00001_00003_00001' direct represents '9' with '-1271'
1258 1260 1262 1264 1266 1268 1270 1272 -1271 0
c Encoding variable: max_left_00001_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00002' order represents '1' with '1273'
c Var 'max_left_00001_00003_00002' direct represents '1' with '1273'
c Var 'max_left_00001_00003_00002' order represents '2' with '1274'
-1273 1274 0
c Var 'max_left_00001_00003_00002' direct represents '2' with '1275'
1273 -1274 1275 0
-1275 1274 0
-1275 -1273 0
c Var 'max_left_00001_00003_00002' order represents '3' with '1276'
-1274 1276 0
c Var 'max_left_00001_00003_00002' direct represents '3' with '1277'
1274 -1276 1277 0
-1277 1276 0
-1277 -1274 0
c Var 'max_left_00001_00003_00002' order represents '4' with '1278'
-1276 1278 0
c Var 'max_left_00001_00003_00002' direct represents '4' with '1279'
1276 -1278 1279 0
-1279 1278 0
-1279 -1276 0
c Var 'max_left_00001_00003_00002' order represents '5' with '1280'
-1278 1280 0
c Var 'max_left_00001_00003_00002' direct represents '5' with '1281'
1278 -1280 1281 0
-1281 1280 0
-1281 -1278 0
c Var 'max_left_00001_00003_00002' order represents '6' with '1282'
-1280 1282 0
c Var 'max_left_00001_00003_00002' direct represents '6' with '1283'
1280 -1282 1283 0
-1283 1282 0
-1283 -1280 0
c Var 'max_left_00001_00003_00002' order represents '7' with '1284'
-1282 1284 0
c Var 'max_left_00001_00003_00002' direct represents '7' with '1285'
1282 -1284 1285 0
-1285 1284 0
-1285 -1282 0
c Var 'max_left_00001_00003_00002' order represents '8' with '1286'
-1284 1286 0
c Var 'max_left_00001_00003_00002' direct represents '8' with '1287'
1284 -1286 1287 0
-1287 1286 0
-1287 -1284 0
c Var 'max_left_00001_00003_00002' direct represents '9' with '-1286'
1273 1275 1277 1279 1281 1283 1285 1287 -1286 0
c Encoding variable: max_left_00001_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00003' order represents '1' with '1288'
c Var 'max_left_00001_00003_00003' direct represents '1' with '1288'
c Var 'max_left_00001_00003_00003' order represents '2' with '1289'
-1288 1289 0
c Var 'max_left_00001_00003_00003' direct represents '2' with '1290'
1288 -1289 1290 0
-1290 1289 0
-1290 -1288 0
c Var 'max_left_00001_00003_00003' order represents '3' with '1291'
-1289 1291 0
c Var 'max_left_00001_00003_00003' direct represents '3' with '1292'
1289 -1291 1292 0
-1292 1291 0
-1292 -1289 0
c Var 'max_left_00001_00003_00003' order represents '4' with '1293'
-1291 1293 0
c Var 'max_left_00001_00003_00003' direct represents '4' with '1294'
1291 -1293 1294 0
-1294 1293 0
-1294 -1291 0
c Var 'max_left_00001_00003_00003' order represents '5' with '1295'
-1293 1295 0
c Var 'max_left_00001_00003_00003' direct represents '5' with '1296'
1293 -1295 1296 0
-1296 1295 0
-1296 -1293 0
c Var 'max_left_00001_00003_00003' order represents '6' with '1297'
-1295 1297 0
c Var 'max_left_00001_00003_00003' direct represents '6' with '1298'
1295 -1297 1298 0
-1298 1297 0
-1298 -1295 0
c Var 'max_left_00001_00003_00003' order represents '7' with '1299'
-1297 1299 0
c Var 'max_left_00001_00003_00003' direct represents '7' with '1300'
1297 -1299 1300 0
-1300 1299 0
-1300 -1297 0
c Var 'max_left_00001_00003_00003' order represents '8' with '1301'
-1299 1301 0
c Var 'max_left_00001_00003_00003' direct represents '8' with '1302'
1299 -1301 1302 0
-1302 1301 0
-1302 -1299 0
c Var 'max_left_00001_00003_00003' direct represents '9' with '-1301'
1288 1290 1292 1294 1296 1298 1300 1302 -1301 0
c Encoding variable: max_left_00001_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00004' order represents '1' with '1303'
c Var 'max_left_00001_00003_00004' direct represents '1' with '1303'
c Var 'max_left_00001_00003_00004' order represents '2' with '1304'
-1303 1304 0
c Var 'max_left_00001_00003_00004' direct represents '2' with '1305'
1303 -1304 1305 0
-1305 1304 0
-1305 -1303 0
c Var 'max_left_00001_00003_00004' order represents '3' with '1306'
-1304 1306 0
c Var 'max_left_00001_00003_00004' direct represents '3' with '1307'
1304 -1306 1307 0
-1307 1306 0
-1307 -1304 0
c Var 'max_left_00001_00003_00004' order represents '4' with '1308'
-1306 1308 0
c Var 'max_left_00001_00003_00004' direct represents '4' with '1309'
1306 -1308 1309 0
-1309 1308 0
-1309 -1306 0
c Var 'max_left_00001_00003_00004' order represents '5' with '1310'
-1308 1310 0
c Var 'max_left_00001_00003_00004' direct represents '5' with '1311'
1308 -1310 1311 0
-1311 1310 0
-1311 -1308 0
c Var 'max_left_00001_00003_00004' order represents '6' with '1312'
-1310 1312 0
c Var 'max_left_00001_00003_00004' direct represents '6' with '1313'
1310 -1312 1313 0
-1313 1312 0
-1313 -1310 0
c Var 'max_left_00001_00003_00004' order represents '7' with '1314'
-1312 1314 0
c Var 'max_left_00001_00003_00004' direct represents '7' with '1315'
1312 -1314 1315 0
-1315 1314 0
-1315 -1312 0
c Var 'max_left_00001_00003_00004' order represents '8' with '1316'
-1314 1316 0
c Var 'max_left_00001_00003_00004' direct represents '8' with '1317'
1314 -1316 1317 0
-1317 1316 0
-1317 -1314 0
c Var 'max_left_00001_00003_00004' direct represents '9' with '-1316'
1303 1305 1307 1309 1311 1313 1315 1317 -1316 0
c Encoding variable: max_left_00001_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00005' order represents '1' with '1318'
c Var 'max_left_00001_00003_00005' direct represents '1' with '1318'
c Var 'max_left_00001_00003_00005' order represents '2' with '1319'
-1318 1319 0
c Var 'max_left_00001_00003_00005' direct represents '2' with '1320'
1318 -1319 1320 0
-1320 1319 0
-1320 -1318 0
c Var 'max_left_00001_00003_00005' order represents '3' with '1321'
-1319 1321 0
c Var 'max_left_00001_00003_00005' direct represents '3' with '1322'
1319 -1321 1322 0
-1322 1321 0
-1322 -1319 0
c Var 'max_left_00001_00003_00005' order represents '4' with '1323'
-1321 1323 0
c Var 'max_left_00001_00003_00005' direct represents '4' with '1324'
1321 -1323 1324 0
-1324 1323 0
-1324 -1321 0
c Var 'max_left_00001_00003_00005' order represents '5' with '1325'
-1323 1325 0
c Var 'max_left_00001_00003_00005' direct represents '5' with '1326'
1323 -1325 1326 0
-1326 1325 0
-1326 -1323 0
c Var 'max_left_00001_00003_00005' order represents '6' with '1327'
-1325 1327 0
c Var 'max_left_00001_00003_00005' direct represents '6' with '1328'
1325 -1327 1328 0
-1328 1327 0
-1328 -1325 0
c Var 'max_left_00001_00003_00005' order represents '7' with '1329'
-1327 1329 0
c Var 'max_left_00001_00003_00005' direct represents '7' with '1330'
1327 -1329 1330 0
-1330 1329 0
-1330 -1327 0
c Var 'max_left_00001_00003_00005' order represents '8' with '1331'
-1329 1331 0
c Var 'max_left_00001_00003_00005' direct represents '8' with '1332'
1329 -1331 1332 0
-1332 1331 0
-1332 -1329 0
c Var 'max_left_00001_00003_00005' direct represents '9' with '-1331'
1318 1320 1322 1324 1326 1328 1330 1332 -1331 0
c Encoding variable: max_left_00001_00003_00006 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00006' order represents '6' with '1333'
c Var 'max_left_00001_00003_00006' direct represents '6' with '1333'
c Var 'max_left_00001_00003_00006' order represents '7' with '1334'
-1333 1334 0
c Var 'max_left_00001_00003_00006' direct represents '7' with '1335'
1333 -1334 1335 0
-1335 1334 0
-1335 -1333 0
c Var 'max_left_00001_00003_00006' order represents '8' with '1336'
-1334 1336 0
c Var 'max_left_00001_00003_00006' direct represents '8' with '1337'
1334 -1336 1337 0
-1337 1336 0
-1337 -1334 0
c Var 'max_left_00001_00003_00006' direct represents '9' with '-1336'
1333 1335 1337 -1336 0
c Encoding variable: max_left_00001_00003_00007 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00007' order represents '6' with '1338'
c Var 'max_left_00001_00003_00007' direct represents '6' with '1338'
c Var 'max_left_00001_00003_00007' order represents '7' with '1339'
-1338 1339 0
c Var 'max_left_00001_00003_00007' direct represents '7' with '1340'
1338 -1339 1340 0
-1340 1339 0
-1340 -1338 0
c Var 'max_left_00001_00003_00007' order represents '8' with '1341'
-1339 1341 0
c Var 'max_left_00001_00003_00007' direct represents '8' with '1342'
1339 -1341 1342 0
-1342 1341 0
-1342 -1339 0
c Var 'max_left_00001_00003_00007' direct represents '9' with '-1341'
1338 1340 1342 -1341 0
c Encoding variable: max_left_00001_00003_00008 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00008' order represents '6' with '1343'
c Var 'max_left_00001_00003_00008' direct represents '6' with '1343'
c Var 'max_left_00001_00003_00008' order represents '7' with '1344'
-1343 1344 0
c Var 'max_left_00001_00003_00008' direct represents '7' with '1345'
1343 -1344 1345 0
-1345 1344 0
-1345 -1343 0
c Var 'max_left_00001_00003_00008' order represents '8' with '1346'
-1344 1346 0
c Var 'max_left_00001_00003_00008' direct represents '8' with '1347'
1344 -1346 1347 0
-1347 1346 0
-1347 -1344 0
c Var 'max_left_00001_00003_00008' direct represents '9' with '-1346'
1343 1345 1347 -1346 0
c Encoding variable: max_left_00001_00003_00009 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00009' order represents '6' with '1348'
c Var 'max_left_00001_00003_00009' direct represents '6' with '1348'
c Var 'max_left_00001_00003_00009' order represents '7' with '1349'
-1348 1349 0
c Var 'max_left_00001_00003_00009' direct represents '7' with '1350'
1348 -1349 1350 0
-1350 1349 0
-1350 -1348 0
c Var 'max_left_00001_00003_00009' order represents '8' with '1351'
-1349 1351 0
c Var 'max_left_00001_00003_00009' direct represents '8' with '1352'
1349 -1351 1352 0
-1352 1351 0
-1352 -1349 0
c Var 'max_left_00001_00003_00009' direct represents '9' with '-1351'
1348 1350 1352 -1351 0
c Encoding variable: max_left_00001_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00004_00000' direct represents '0' with '1353'
1353 0
c Encoding variable: max_left_00001_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00001' order represents '1' with '1354'
c Var 'max_left_00001_00004_00001' direct represents '1' with '1354'
c Var 'max_left_00001_00004_00001' order represents '2' with '1355'
-1354 1355 0
c Var 'max_left_00001_00004_00001' direct represents '2' with '1356'
1354 -1355 1356 0
-1356 1355 0
-1356 -1354 0
c Var 'max_left_00001_00004_00001' order represents '3' with '1357'
-1355 1357 0
c Var 'max_left_00001_00004_00001' direct represents '3' with '1358'
1355 -1357 1358 0
-1358 1357 0
-1358 -1355 0
c Var 'max_left_00001_00004_00001' order represents '4' with '1359'
-1357 1359 0
c Var 'max_left_00001_00004_00001' direct represents '4' with '1360'
1357 -1359 1360 0
-1360 1359 0
-1360 -1357 0
c Var 'max_left_00001_00004_00001' order represents '5' with '1361'
-1359 1361 0
c Var 'max_left_00001_00004_00001' direct represents '5' with '1362'
1359 -1361 1362 0
-1362 1361 0
-1362 -1359 0
c Var 'max_left_00001_00004_00001' order represents '6' with '1363'
-1361 1363 0
c Var 'max_left_00001_00004_00001' direct represents '6' with '1364'
1361 -1363 1364 0
-1364 1363 0
-1364 -1361 0
c Var 'max_left_00001_00004_00001' order represents '7' with '1365'
-1363 1365 0
c Var 'max_left_00001_00004_00001' direct represents '7' with '1366'
1363 -1365 1366 0
-1366 1365 0
-1366 -1363 0
c Var 'max_left_00001_00004_00001' order represents '8' with '1367'
-1365 1367 0
c Var 'max_left_00001_00004_00001' direct represents '8' with '1368'
1365 -1367 1368 0
-1368 1367 0
-1368 -1365 0
c Var 'max_left_00001_00004_00001' direct represents '9' with '-1367'
1354 1356 1358 1360 1362 1364 1366 1368 -1367 0
c Encoding variable: max_left_00001_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00002' order represents '1' with '1369'
c Var 'max_left_00001_00004_00002' direct represents '1' with '1369'
c Var 'max_left_00001_00004_00002' order represents '2' with '1370'
-1369 1370 0
c Var 'max_left_00001_00004_00002' direct represents '2' with '1371'
1369 -1370 1371 0
-1371 1370 0
-1371 -1369 0
c Var 'max_left_00001_00004_00002' order represents '3' with '1372'
-1370 1372 0
c Var 'max_left_00001_00004_00002' direct represents '3' with '1373'
1370 -1372 1373 0
-1373 1372 0
-1373 -1370 0
c Var 'max_left_00001_00004_00002' order represents '4' with '1374'
-1372 1374 0
c Var 'max_left_00001_00004_00002' direct represents '4' with '1375'
1372 -1374 1375 0
-1375 1374 0
-1375 -1372 0
c Var 'max_left_00001_00004_00002' order represents '5' with '1376'
-1374 1376 0
c Var 'max_left_00001_00004_00002' direct represents '5' with '1377'
1374 -1376 1377 0
-1377 1376 0
-1377 -1374 0
c Var 'max_left_00001_00004_00002' order represents '6' with '1378'
-1376 1378 0
c Var 'max_left_00001_00004_00002' direct represents '6' with '1379'
1376 -1378 1379 0
-1379 1378 0
-1379 -1376 0
c Var 'max_left_00001_00004_00002' order represents '7' with '1380'
-1378 1380 0
c Var 'max_left_00001_00004_00002' direct represents '7' with '1381'
1378 -1380 1381 0
-1381 1380 0
-1381 -1378 0
c Var 'max_left_00001_00004_00002' order represents '8' with '1382'
-1380 1382 0
c Var 'max_left_00001_00004_00002' direct represents '8' with '1383'
1380 -1382 1383 0
-1383 1382 0
-1383 -1380 0
c Var 'max_left_00001_00004_00002' direct represents '9' with '-1382'
1369 1371 1373 1375 1377 1379 1381 1383 -1382 0
c Encoding variable: max_left_00001_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00003' order represents '1' with '1384'
c Var 'max_left_00001_00004_00003' direct represents '1' with '1384'
c Var 'max_left_00001_00004_00003' order represents '2' with '1385'
-1384 1385 0
c Var 'max_left_00001_00004_00003' direct represents '2' with '1386'
1384 -1385 1386 0
-1386 1385 0
-1386 -1384 0
c Var 'max_left_00001_00004_00003' order represents '3' with '1387'
-1385 1387 0
c Var 'max_left_00001_00004_00003' direct represents '3' with '1388'
1385 -1387 1388 0
-1388 1387 0
-1388 -1385 0
c Var 'max_left_00001_00004_00003' order represents '4' with '1389'
-1387 1389 0
c Var 'max_left_00001_00004_00003' direct represents '4' with '1390'
1387 -1389 1390 0
-1390 1389 0
-1390 -1387 0
c Var 'max_left_00001_00004_00003' order represents '5' with '1391'
-1389 1391 0
c Var 'max_left_00001_00004_00003' direct represents '5' with '1392'
1389 -1391 1392 0
-1392 1391 0
-1392 -1389 0
c Var 'max_left_00001_00004_00003' order represents '6' with '1393'
-1391 1393 0
c Var 'max_left_00001_00004_00003' direct represents '6' with '1394'
1391 -1393 1394 0
-1394 1393 0
-1394 -1391 0
c Var 'max_left_00001_00004_00003' order represents '7' with '1395'
-1393 1395 0
c Var 'max_left_00001_00004_00003' direct represents '7' with '1396'
1393 -1395 1396 0
-1396 1395 0
-1396 -1393 0
c Var 'max_left_00001_00004_00003' order represents '8' with '1397'
-1395 1397 0
c Var 'max_left_00001_00004_00003' direct represents '8' with '1398'
1395 -1397 1398 0
-1398 1397 0
-1398 -1395 0
c Var 'max_left_00001_00004_00003' direct represents '9' with '-1397'
1384 1386 1388 1390 1392 1394 1396 1398 -1397 0
c Encoding variable: max_left_00001_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00004' order represents '1' with '1399'
c Var 'max_left_00001_00004_00004' direct represents '1' with '1399'
c Var 'max_left_00001_00004_00004' order represents '2' with '1400'
-1399 1400 0
c Var 'max_left_00001_00004_00004' direct represents '2' with '1401'
1399 -1400 1401 0
-1401 1400 0
-1401 -1399 0
c Var 'max_left_00001_00004_00004' order represents '3' with '1402'
-1400 1402 0
c Var 'max_left_00001_00004_00004' direct represents '3' with '1403'
1400 -1402 1403 0
-1403 1402 0
-1403 -1400 0
c Var 'max_left_00001_00004_00004' order represents '4' with '1404'
-1402 1404 0
c Var 'max_left_00001_00004_00004' direct represents '4' with '1405'
1402 -1404 1405 0
-1405 1404 0
-1405 -1402 0
c Var 'max_left_00001_00004_00004' order represents '5' with '1406'
-1404 1406 0
c Var 'max_left_00001_00004_00004' direct represents '5' with '1407'
1404 -1406 1407 0
-1407 1406 0
-1407 -1404 0
c Var 'max_left_00001_00004_00004' order represents '6' with '1408'
-1406 1408 0
c Var 'max_left_00001_00004_00004' direct represents '6' with '1409'
1406 -1408 1409 0
-1409 1408 0
-1409 -1406 0
c Var 'max_left_00001_00004_00004' order represents '7' with '1410'
-1408 1410 0
c Var 'max_left_00001_00004_00004' direct represents '7' with '1411'
1408 -1410 1411 0
-1411 1410 0
-1411 -1408 0
c Var 'max_left_00001_00004_00004' order represents '8' with '1412'
-1410 1412 0
c Var 'max_left_00001_00004_00004' direct represents '8' with '1413'
1410 -1412 1413 0
-1413 1412 0
-1413 -1410 0
c Var 'max_left_00001_00004_00004' direct represents '9' with '-1412'
1399 1401 1403 1405 1407 1409 1411 1413 -1412 0
c Encoding variable: max_left_00001_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00005' order represents '1' with '1414'
c Var 'max_left_00001_00004_00005' direct represents '1' with '1414'
c Var 'max_left_00001_00004_00005' order represents '2' with '1415'
-1414 1415 0
c Var 'max_left_00001_00004_00005' direct represents '2' with '1416'
1414 -1415 1416 0
-1416 1415 0
-1416 -1414 0
c Var 'max_left_00001_00004_00005' order represents '3' with '1417'
-1415 1417 0
c Var 'max_left_00001_00004_00005' direct represents '3' with '1418'
1415 -1417 1418 0
-1418 1417 0
-1418 -1415 0
c Var 'max_left_00001_00004_00005' order represents '4' with '1419'
-1417 1419 0
c Var 'max_left_00001_00004_00005' direct represents '4' with '1420'
1417 -1419 1420 0
-1420 1419 0
-1420 -1417 0
c Var 'max_left_00001_00004_00005' order represents '5' with '1421'
-1419 1421 0
c Var 'max_left_00001_00004_00005' direct represents '5' with '1422'
1419 -1421 1422 0
-1422 1421 0
-1422 -1419 0
c Var 'max_left_00001_00004_00005' order represents '6' with '1423'
-1421 1423 0
c Var 'max_left_00001_00004_00005' direct represents '6' with '1424'
1421 -1423 1424 0
-1424 1423 0
-1424 -1421 0
c Var 'max_left_00001_00004_00005' order represents '7' with '1425'
-1423 1425 0
c Var 'max_left_00001_00004_00005' direct represents '7' with '1426'
1423 -1425 1426 0
-1426 1425 0
-1426 -1423 0
c Var 'max_left_00001_00004_00005' order represents '8' with '1427'
-1425 1427 0
c Var 'max_left_00001_00004_00005' direct represents '8' with '1428'
1425 -1427 1428 0
-1428 1427 0
-1428 -1425 0
c Var 'max_left_00001_00004_00005' direct represents '9' with '-1427'
1414 1416 1418 1420 1422 1424 1426 1428 -1427 0
c Encoding variable: max_left_00001_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00006' order represents '1' with '1429'
c Var 'max_left_00001_00004_00006' direct represents '1' with '1429'
c Var 'max_left_00001_00004_00006' order represents '2' with '1430'
-1429 1430 0
c Var 'max_left_00001_00004_00006' direct represents '2' with '1431'
1429 -1430 1431 0
-1431 1430 0
-1431 -1429 0
c Var 'max_left_00001_00004_00006' order represents '3' with '1432'
-1430 1432 0
c Var 'max_left_00001_00004_00006' direct represents '3' with '1433'
1430 -1432 1433 0
-1433 1432 0
-1433 -1430 0
c Var 'max_left_00001_00004_00006' order represents '4' with '1434'
-1432 1434 0
c Var 'max_left_00001_00004_00006' direct represents '4' with '1435'
1432 -1434 1435 0
-1435 1434 0
-1435 -1432 0
c Var 'max_left_00001_00004_00006' order represents '5' with '1436'
-1434 1436 0
c Var 'max_left_00001_00004_00006' direct represents '5' with '1437'
1434 -1436 1437 0
-1437 1436 0
-1437 -1434 0
c Var 'max_left_00001_00004_00006' order represents '6' with '1438'
-1436 1438 0
c Var 'max_left_00001_00004_00006' direct represents '6' with '1439'
1436 -1438 1439 0
-1439 1438 0
-1439 -1436 0
c Var 'max_left_00001_00004_00006' order represents '7' with '1440'
-1438 1440 0
c Var 'max_left_00001_00004_00006' direct represents '7' with '1441'
1438 -1440 1441 0
-1441 1440 0
-1441 -1438 0
c Var 'max_left_00001_00004_00006' order represents '8' with '1442'
-1440 1442 0
c Var 'max_left_00001_00004_00006' direct represents '8' with '1443'
1440 -1442 1443 0
-1443 1442 0
-1443 -1440 0
c Var 'max_left_00001_00004_00006' direct represents '9' with '-1442'
1429 1431 1433 1435 1437 1439 1441 1443 -1442 0
c Encoding variable: max_left_00001_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00007' order represents '1' with '1444'
c Var 'max_left_00001_00004_00007' direct represents '1' with '1444'
c Var 'max_left_00001_00004_00007' order represents '2' with '1445'
-1444 1445 0
c Var 'max_left_00001_00004_00007' direct represents '2' with '1446'
1444 -1445 1446 0
-1446 1445 0
-1446 -1444 0
c Var 'max_left_00001_00004_00007' order represents '3' with '1447'
-1445 1447 0
c Var 'max_left_00001_00004_00007' direct represents '3' with '1448'
1445 -1447 1448 0
-1448 1447 0
-1448 -1445 0
c Var 'max_left_00001_00004_00007' order represents '4' with '1449'
-1447 1449 0
c Var 'max_left_00001_00004_00007' direct represents '4' with '1450'
1447 -1449 1450 0
-1450 1449 0
-1450 -1447 0
c Var 'max_left_00001_00004_00007' order represents '5' with '1451'
-1449 1451 0
c Var 'max_left_00001_00004_00007' direct represents '5' with '1452'
1449 -1451 1452 0
-1452 1451 0
-1452 -1449 0
c Var 'max_left_00001_00004_00007' order represents '6' with '1453'
-1451 1453 0
c Var 'max_left_00001_00004_00007' direct represents '6' with '1454'
1451 -1453 1454 0
-1454 1453 0
-1454 -1451 0
c Var 'max_left_00001_00004_00007' order represents '7' with '1455'
-1453 1455 0
c Var 'max_left_00001_00004_00007' direct represents '7' with '1456'
1453 -1455 1456 0
-1456 1455 0
-1456 -1453 0
c Var 'max_left_00001_00004_00007' order represents '8' with '1457'
-1455 1457 0
c Var 'max_left_00001_00004_00007' direct represents '8' with '1458'
1455 -1457 1458 0
-1458 1457 0
-1458 -1455 0
c Var 'max_left_00001_00004_00007' direct represents '9' with '-1457'
1444 1446 1448 1450 1452 1454 1456 1458 -1457 0
c Encoding variable: max_left_00001_00004_00008 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00008' order represents '3' with '1459'
c Var 'max_left_00001_00004_00008' direct represents '3' with '1459'
c Var 'max_left_00001_00004_00008' order represents '4' with '1460'
-1459 1460 0
c Var 'max_left_00001_00004_00008' direct represents '4' with '1461'
1459 -1460 1461 0
-1461 1460 0
-1461 -1459 0
c Var 'max_left_00001_00004_00008' order represents '5' with '1462'
-1460 1462 0
c Var 'max_left_00001_00004_00008' direct represents '5' with '1463'
1460 -1462 1463 0
-1463 1462 0
-1463 -1460 0
c Var 'max_left_00001_00004_00008' order represents '6' with '1464'
-1462 1464 0
c Var 'max_left_00001_00004_00008' direct represents '6' with '1465'
1462 -1464 1465 0
-1465 1464 0
-1465 -1462 0
c Var 'max_left_00001_00004_00008' order represents '7' with '1466'
-1464 1466 0
c Var 'max_left_00001_00004_00008' direct represents '7' with '1467'
1464 -1466 1467 0
-1467 1466 0
-1467 -1464 0
c Var 'max_left_00001_00004_00008' order represents '8' with '1468'
-1466 1468 0
c Var 'max_left_00001_00004_00008' direct represents '8' with '1469'
1466 -1468 1469 0
-1469 1468 0
-1469 -1466 0
c Var 'max_left_00001_00004_00008' direct represents '9' with '-1468'
1459 1461 1463 1465 1467 1469 -1468 0
c Encoding variable: max_left_00001_00004_00009 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00009' order represents '3' with '1470'
c Var 'max_left_00001_00004_00009' direct represents '3' with '1470'
c Var 'max_left_00001_00004_00009' order represents '4' with '1471'
-1470 1471 0
c Var 'max_left_00001_00004_00009' direct represents '4' with '1472'
1470 -1471 1472 0
-1472 1471 0
-1472 -1470 0
c Var 'max_left_00001_00004_00009' order represents '5' with '1473'
-1471 1473 0
c Var 'max_left_00001_00004_00009' direct represents '5' with '1474'
1471 -1473 1474 0
-1474 1473 0
-1474 -1471 0
c Var 'max_left_00001_00004_00009' order represents '6' with '1475'
-1473 1475 0
c Var 'max_left_00001_00004_00009' direct represents '6' with '1476'
1473 -1475 1476 0
-1476 1475 0
-1476 -1473 0
c Var 'max_left_00001_00004_00009' order represents '7' with '1477'
-1475 1477 0
c Var 'max_left_00001_00004_00009' direct represents '7' with '1478'
1475 -1477 1478 0
-1478 1477 0
-1478 -1475 0
c Var 'max_left_00001_00004_00009' order represents '8' with '1479'
-1477 1479 0
c Var 'max_left_00001_00004_00009' direct represents '8' with '1480'
1477 -1479 1480 0
-1480 1479 0
-1480 -1477 0
c Var 'max_left_00001_00004_00009' direct represents '9' with '-1479'
1470 1472 1474 1476 1478 1480 -1479 0
c Encoding variable: max_left_00001_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00005_00000' direct represents '0' with '1481'
1481 0
c Encoding variable: max_left_00001_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00001' order represents '1' with '1482'
c Var 'max_left_00001_00005_00001' direct represents '1' with '1482'
c Var 'max_left_00001_00005_00001' order represents '2' with '1483'
-1482 1483 0
c Var 'max_left_00001_00005_00001' direct represents '2' with '1484'
1482 -1483 1484 0
-1484 1483 0
-1484 -1482 0
c Var 'max_left_00001_00005_00001' order represents '3' with '1485'
-1483 1485 0
c Var 'max_left_00001_00005_00001' direct represents '3' with '1486'
1483 -1485 1486 0
-1486 1485 0
-1486 -1483 0
c Var 'max_left_00001_00005_00001' order represents '4' with '1487'
-1485 1487 0
c Var 'max_left_00001_00005_00001' direct represents '4' with '1488'
1485 -1487 1488 0
-1488 1487 0
-1488 -1485 0
c Var 'max_left_00001_00005_00001' order represents '5' with '1489'
-1487 1489 0
c Var 'max_left_00001_00005_00001' direct represents '5' with '1490'
1487 -1489 1490 0
-1490 1489 0
-1490 -1487 0
c Var 'max_left_00001_00005_00001' order represents '6' with '1491'
-1489 1491 0
c Var 'max_left_00001_00005_00001' direct represents '6' with '1492'
1489 -1491 1492 0
-1492 1491 0
-1492 -1489 0
c Var 'max_left_00001_00005_00001' order represents '7' with '1493'
-1491 1493 0
c Var 'max_left_00001_00005_00001' direct represents '7' with '1494'
1491 -1493 1494 0
-1494 1493 0
-1494 -1491 0
c Var 'max_left_00001_00005_00001' order represents '8' with '1495'
-1493 1495 0
c Var 'max_left_00001_00005_00001' direct represents '8' with '1496'
1493 -1495 1496 0
-1496 1495 0
-1496 -1493 0
c Var 'max_left_00001_00005_00001' direct represents '9' with '-1495'
1482 1484 1486 1488 1490 1492 1494 1496 -1495 0
c Encoding variable: max_left_00001_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00002' order represents '1' with '1497'
c Var 'max_left_00001_00005_00002' direct represents '1' with '1497'
c Var 'max_left_00001_00005_00002' order represents '2' with '1498'
-1497 1498 0
c Var 'max_left_00001_00005_00002' direct represents '2' with '1499'
1497 -1498 1499 0
-1499 1498 0
-1499 -1497 0
c Var 'max_left_00001_00005_00002' order represents '3' with '1500'
-1498 1500 0
c Var 'max_left_00001_00005_00002' direct represents '3' with '1501'
1498 -1500 1501 0
-1501 1500 0
-1501 -1498 0
c Var 'max_left_00001_00005_00002' order represents '4' with '1502'
-1500 1502 0
c Var 'max_left_00001_00005_00002' direct represents '4' with '1503'
1500 -1502 1503 0
-1503 1502 0
-1503 -1500 0
c Var 'max_left_00001_00005_00002' order represents '5' with '1504'
-1502 1504 0
c Var 'max_left_00001_00005_00002' direct represents '5' with '1505'
1502 -1504 1505 0
-1505 1504 0
-1505 -1502 0
c Var 'max_left_00001_00005_00002' order represents '6' with '1506'
-1504 1506 0
c Var 'max_left_00001_00005_00002' direct represents '6' with '1507'
1504 -1506 1507 0
-1507 1506 0
-1507 -1504 0
c Var 'max_left_00001_00005_00002' order represents '7' with '1508'
-1506 1508 0
c Var 'max_left_00001_00005_00002' direct represents '7' with '1509'
1506 -1508 1509 0
-1509 1508 0
-1509 -1506 0
c Var 'max_left_00001_00005_00002' order represents '8' with '1510'
-1508 1510 0
c Var 'max_left_00001_00005_00002' direct represents '8' with '1511'
1508 -1510 1511 0
-1511 1510 0
-1511 -1508 0
c Var 'max_left_00001_00005_00002' direct represents '9' with '-1510'
1497 1499 1501 1503 1505 1507 1509 1511 -1510 0
c Encoding variable: max_left_00001_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00003' order represents '1' with '1512'
c Var 'max_left_00001_00005_00003' direct represents '1' with '1512'
c Var 'max_left_00001_00005_00003' order represents '2' with '1513'
-1512 1513 0
c Var 'max_left_00001_00005_00003' direct represents '2' with '1514'
1512 -1513 1514 0
-1514 1513 0
-1514 -1512 0
c Var 'max_left_00001_00005_00003' order represents '3' with '1515'
-1513 1515 0
c Var 'max_left_00001_00005_00003' direct represents '3' with '1516'
1513 -1515 1516 0
-1516 1515 0
-1516 -1513 0
c Var 'max_left_00001_00005_00003' order represents '4' with '1517'
-1515 1517 0
c Var 'max_left_00001_00005_00003' direct represents '4' with '1518'
1515 -1517 1518 0
-1518 1517 0
-1518 -1515 0
c Var 'max_left_00001_00005_00003' order represents '5' with '1519'
-1517 1519 0
c Var 'max_left_00001_00005_00003' direct represents '5' with '1520'
1517 -1519 1520 0
-1520 1519 0
-1520 -1517 0
c Var 'max_left_00001_00005_00003' order represents '6' with '1521'
-1519 1521 0
c Var 'max_left_00001_00005_00003' direct represents '6' with '1522'
1519 -1521 1522 0
-1522 1521 0
-1522 -1519 0
c Var 'max_left_00001_00005_00003' order represents '7' with '1523'
-1521 1523 0
c Var 'max_left_00001_00005_00003' direct represents '7' with '1524'
1521 -1523 1524 0
-1524 1523 0
-1524 -1521 0
c Var 'max_left_00001_00005_00003' order represents '8' with '1525'
-1523 1525 0
c Var 'max_left_00001_00005_00003' direct represents '8' with '1526'
1523 -1525 1526 0
-1526 1525 0
-1526 -1523 0
c Var 'max_left_00001_00005_00003' direct represents '9' with '-1525'
1512 1514 1516 1518 1520 1522 1524 1526 -1525 0
c Encoding variable: max_left_00001_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00004' order represents '1' with '1527'
c Var 'max_left_00001_00005_00004' direct represents '1' with '1527'
c Var 'max_left_00001_00005_00004' order represents '2' with '1528'
-1527 1528 0
c Var 'max_left_00001_00005_00004' direct represents '2' with '1529'
1527 -1528 1529 0
-1529 1528 0
-1529 -1527 0
c Var 'max_left_00001_00005_00004' order represents '3' with '1530'
-1528 1530 0
c Var 'max_left_00001_00005_00004' direct represents '3' with '1531'
1528 -1530 1531 0
-1531 1530 0
-1531 -1528 0
c Var 'max_left_00001_00005_00004' order represents '4' with '1532'
-1530 1532 0
c Var 'max_left_00001_00005_00004' direct represents '4' with '1533'
1530 -1532 1533 0
-1533 1532 0
-1533 -1530 0
c Var 'max_left_00001_00005_00004' order represents '5' with '1534'
-1532 1534 0
c Var 'max_left_00001_00005_00004' direct represents '5' with '1535'
1532 -1534 1535 0
-1535 1534 0
-1535 -1532 0
c Var 'max_left_00001_00005_00004' order represents '6' with '1536'
-1534 1536 0
c Var 'max_left_00001_00005_00004' direct represents '6' with '1537'
1534 -1536 1537 0
-1537 1536 0
-1537 -1534 0
c Var 'max_left_00001_00005_00004' order represents '7' with '1538'
-1536 1538 0
c Var 'max_left_00001_00005_00004' direct represents '7' with '1539'
1536 -1538 1539 0
-1539 1538 0
-1539 -1536 0
c Var 'max_left_00001_00005_00004' order represents '8' with '1540'
-1538 1540 0
c Var 'max_left_00001_00005_00004' direct represents '8' with '1541'
1538 -1540 1541 0
-1541 1540 0
-1541 -1538 0
c Var 'max_left_00001_00005_00004' direct represents '9' with '-1540'
1527 1529 1531 1533 1535 1537 1539 1541 -1540 0
c Encoding variable: max_left_00001_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00005' order represents '1' with '1542'
c Var 'max_left_00001_00005_00005' direct represents '1' with '1542'
c Var 'max_left_00001_00005_00005' order represents '2' with '1543'
-1542 1543 0
c Var 'max_left_00001_00005_00005' direct represents '2' with '1544'
1542 -1543 1544 0
-1544 1543 0
-1544 -1542 0
c Var 'max_left_00001_00005_00005' order represents '3' with '1545'
-1543 1545 0
c Var 'max_left_00001_00005_00005' direct represents '3' with '1546'
1543 -1545 1546 0
-1546 1545 0
-1546 -1543 0
c Var 'max_left_00001_00005_00005' order represents '4' with '1547'
-1545 1547 0
c Var 'max_left_00001_00005_00005' direct represents '4' with '1548'
1545 -1547 1548 0
-1548 1547 0
-1548 -1545 0
c Var 'max_left_00001_00005_00005' order represents '5' with '1549'
-1547 1549 0
c Var 'max_left_00001_00005_00005' direct represents '5' with '1550'
1547 -1549 1550 0
-1550 1549 0
-1550 -1547 0
c Var 'max_left_00001_00005_00005' order represents '6' with '1551'
-1549 1551 0
c Var 'max_left_00001_00005_00005' direct represents '6' with '1552'
1549 -1551 1552 0
-1552 1551 0
-1552 -1549 0
c Var 'max_left_00001_00005_00005' order represents '7' with '1553'
-1551 1553 0
c Var 'max_left_00001_00005_00005' direct represents '7' with '1554'
1551 -1553 1554 0
-1554 1553 0
-1554 -1551 0
c Var 'max_left_00001_00005_00005' order represents '8' with '1555'
-1553 1555 0
c Var 'max_left_00001_00005_00005' direct represents '8' with '1556'
1553 -1555 1556 0
-1556 1555 0
-1556 -1553 0
c Var 'max_left_00001_00005_00005' direct represents '9' with '-1555'
1542 1544 1546 1548 1550 1552 1554 1556 -1555 0
c Encoding variable: max_left_00001_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00006' order represents '1' with '1557'
c Var 'max_left_00001_00005_00006' direct represents '1' with '1557'
c Var 'max_left_00001_00005_00006' order represents '2' with '1558'
-1557 1558 0
c Var 'max_left_00001_00005_00006' direct represents '2' with '1559'
1557 -1558 1559 0
-1559 1558 0
-1559 -1557 0
c Var 'max_left_00001_00005_00006' order represents '3' with '1560'
-1558 1560 0
c Var 'max_left_00001_00005_00006' direct represents '3' with '1561'
1558 -1560 1561 0
-1561 1560 0
-1561 -1558 0
c Var 'max_left_00001_00005_00006' order represents '4' with '1562'
-1560 1562 0
c Var 'max_left_00001_00005_00006' direct represents '4' with '1563'
1560 -1562 1563 0
-1563 1562 0
-1563 -1560 0
c Var 'max_left_00001_00005_00006' order represents '5' with '1564'
-1562 1564 0
c Var 'max_left_00001_00005_00006' direct represents '5' with '1565'
1562 -1564 1565 0
-1565 1564 0
-1565 -1562 0
c Var 'max_left_00001_00005_00006' order represents '6' with '1566'
-1564 1566 0
c Var 'max_left_00001_00005_00006' direct represents '6' with '1567'
1564 -1566 1567 0
-1567 1566 0
-1567 -1564 0
c Var 'max_left_00001_00005_00006' order represents '7' with '1568'
-1566 1568 0
c Var 'max_left_00001_00005_00006' direct represents '7' with '1569'
1566 -1568 1569 0
-1569 1568 0
-1569 -1566 0
c Var 'max_left_00001_00005_00006' order represents '8' with '1570'
-1568 1570 0
c Var 'max_left_00001_00005_00006' direct represents '8' with '1571'
1568 -1570 1571 0
-1571 1570 0
-1571 -1568 0
c Var 'max_left_00001_00005_00006' direct represents '9' with '-1570'
1557 1559 1561 1563 1565 1567 1569 1571 -1570 0
c Encoding variable: max_left_00001_00005_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00007' order represents '7' with '1572'
c Var 'max_left_00001_00005_00007' direct represents '7' with '1572'
c Var 'max_left_00001_00005_00007' order represents '8' with '1573'
-1572 1573 0
c Var 'max_left_00001_00005_00007' direct represents '8' with '1574'
1572 -1573 1574 0
-1574 1573 0
-1574 -1572 0
c Var 'max_left_00001_00005_00007' direct represents '9' with '-1573'
1572 1574 -1573 0
c Encoding variable: max_left_00001_00005_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00008' order represents '7' with '1575'
c Var 'max_left_00001_00005_00008' direct represents '7' with '1575'
c Var 'max_left_00001_00005_00008' order represents '8' with '1576'
-1575 1576 0
c Var 'max_left_00001_00005_00008' direct represents '8' with '1577'
1575 -1576 1577 0
-1577 1576 0
-1577 -1575 0
c Var 'max_left_00001_00005_00008' direct represents '9' with '-1576'
1575 1577 -1576 0
c Encoding variable: max_left_00001_00005_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00009' order represents '7' with '1578'
c Var 'max_left_00001_00005_00009' direct represents '7' with '1578'
c Var 'max_left_00001_00005_00009' order represents '8' with '1579'
-1578 1579 0
c Var 'max_left_00001_00005_00009' direct represents '8' with '1580'
1578 -1579 1580 0
-1580 1579 0
-1580 -1578 0
c Var 'max_left_00001_00005_00009' direct represents '9' with '-1579'
1578 1580 -1579 0
c Encoding variable: max_left_00001_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00006_00000' direct represents '0' with '1581'
1581 0
c Encoding variable: max_left_00001_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00001' order represents '1' with '1582'
c Var 'max_left_00001_00006_00001' direct represents '1' with '1582'
c Var 'max_left_00001_00006_00001' order represents '2' with '1583'
-1582 1583 0
c Var 'max_left_00001_00006_00001' direct represents '2' with '1584'
1582 -1583 1584 0
-1584 1583 0
-1584 -1582 0
c Var 'max_left_00001_00006_00001' order represents '3' with '1585'
-1583 1585 0
c Var 'max_left_00001_00006_00001' direct represents '3' with '1586'
1583 -1585 1586 0
-1586 1585 0
-1586 -1583 0
c Var 'max_left_00001_00006_00001' order represents '4' with '1587'
-1585 1587 0
c Var 'max_left_00001_00006_00001' direct represents '4' with '1588'
1585 -1587 1588 0
-1588 1587 0
-1588 -1585 0
c Var 'max_left_00001_00006_00001' order represents '5' with '1589'
-1587 1589 0
c Var 'max_left_00001_00006_00001' direct represents '5' with '1590'
1587 -1589 1590 0
-1590 1589 0
-1590 -1587 0
c Var 'max_left_00001_00006_00001' order represents '6' with '1591'
-1589 1591 0
c Var 'max_left_00001_00006_00001' direct represents '6' with '1592'
1589 -1591 1592 0
-1592 1591 0
-1592 -1589 0
c Var 'max_left_00001_00006_00001' order represents '7' with '1593'
-1591 1593 0
c Var 'max_left_00001_00006_00001' direct represents '7' with '1594'
1591 -1593 1594 0
-1594 1593 0
-1594 -1591 0
c Var 'max_left_00001_00006_00001' order represents '8' with '1595'
-1593 1595 0
c Var 'max_left_00001_00006_00001' direct represents '8' with '1596'
1593 -1595 1596 0
-1596 1595 0
-1596 -1593 0
c Var 'max_left_00001_00006_00001' direct represents '9' with '-1595'
1582 1584 1586 1588 1590 1592 1594 1596 -1595 0
c Encoding variable: max_left_00001_00006_00002 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00002' direct represents '8' with '-1597'
c Var 'max_left_00001_00006_00002' direct represents '9' with '1597'
c Var 'max_left_00001_00006_00002' order represents '9' with '1'
c Var 'max_left_00001_00006_00002' order represents '8' with '-1597'
c Encoding variable: max_left_00001_00006_00003 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00003' direct represents '8' with '-1598'
c Var 'max_left_00001_00006_00003' direct represents '9' with '1598'
c Var 'max_left_00001_00006_00003' order represents '9' with '1'
c Var 'max_left_00001_00006_00003' order represents '8' with '-1598'
c Encoding variable: max_left_00001_00006_00004 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00004' direct represents '8' with '-1599'
c Var 'max_left_00001_00006_00004' direct represents '9' with '1599'
c Var 'max_left_00001_00006_00004' order represents '9' with '1'
c Var 'max_left_00001_00006_00004' order represents '8' with '-1599'
c Encoding variable: max_left_00001_00006_00005 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00005' direct represents '8' with '-1600'
c Var 'max_left_00001_00006_00005' direct represents '9' with '1600'
c Var 'max_left_00001_00006_00005' order represents '9' with '1'
c Var 'max_left_00001_00006_00005' order represents '8' with '-1600'
c Encoding variable: max_left_00001_00006_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00006' direct represents '8' with '-1601'
c Var 'max_left_00001_00006_00006' direct represents '9' with '1601'
c Var 'max_left_00001_00006_00006' order represents '9' with '1'
c Var 'max_left_00001_00006_00006' order represents '8' with '-1601'
c Encoding variable: max_left_00001_00006_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00007' direct represents '8' with '-1602'
c Var 'max_left_00001_00006_00007' direct represents '9' with '1602'
c Var 'max_left_00001_00006_00007' order represents '9' with '1'
c Var 'max_left_00001_00006_00007' order represents '8' with '-1602'
c Encoding variable: max_left_00001_00006_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00008' direct represents '8' with '-1603'
c Var 'max_left_00001_00006_00008' direct represents '9' with '1603'
c Var 'max_left_00001_00006_00008' order represents '9' with '1'
c Var 'max_left_00001_00006_00008' order represents '8' with '-1603'
c Encoding variable: max_left_00001_00006_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00006_00009' direct represents '8' with '-1604'
c Var 'max_left_00001_00006_00009' direct represents '9' with '1604'
c Var 'max_left_00001_00006_00009' order represents '9' with '1'
c Var 'max_left_00001_00006_00009' order represents '8' with '-1604'
c Encoding variable: max_left_00001_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00007_00000' direct represents '0' with '1605'
1605 0
c Encoding variable: max_left_00001_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00001' order represents '1' with '1606'
c Var 'max_left_00001_00007_00001' direct represents '1' with '1606'
c Var 'max_left_00001_00007_00001' order represents '2' with '1607'
-1606 1607 0
c Var 'max_left_00001_00007_00001' direct represents '2' with '1608'
1606 -1607 1608 0
-1608 1607 0
-1608 -1606 0
c Var 'max_left_00001_00007_00001' order represents '3' with '1609'
-1607 1609 0
c Var 'max_left_00001_00007_00001' direct represents '3' with '1610'
1607 -1609 1610 0
-1610 1609 0
-1610 -1607 0
c Var 'max_left_00001_00007_00001' order represents '4' with '1611'
-1609 1611 0
c Var 'max_left_00001_00007_00001' direct represents '4' with '1612'
1609 -1611 1612 0
-1612 1611 0
-1612 -1609 0
c Var 'max_left_00001_00007_00001' order represents '5' with '1613'
-1611 1613 0
c Var 'max_left_00001_00007_00001' direct represents '5' with '1614'
1611 -1613 1614 0
-1614 1613 0
-1614 -1611 0
c Var 'max_left_00001_00007_00001' order represents '6' with '1615'
-1613 1615 0
c Var 'max_left_00001_00007_00001' direct represents '6' with '1616'
1613 -1615 1616 0
-1616 1615 0
-1616 -1613 0
c Var 'max_left_00001_00007_00001' order represents '7' with '1617'
-1615 1617 0
c Var 'max_left_00001_00007_00001' direct represents '7' with '1618'
1615 -1617 1618 0
-1618 1617 0
-1618 -1615 0
c Var 'max_left_00001_00007_00001' order represents '8' with '1619'
-1617 1619 0
c Var 'max_left_00001_00007_00001' direct represents '8' with '1620'
1617 -1619 1620 0
-1620 1619 0
-1620 -1617 0
c Var 'max_left_00001_00007_00001' direct represents '9' with '-1619'
1606 1608 1610 1612 1614 1616 1618 1620 -1619 0
c Encoding variable: max_left_00001_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00002' order represents '1' with '1621'
c Var 'max_left_00001_00007_00002' direct represents '1' with '1621'
c Var 'max_left_00001_00007_00002' order represents '2' with '1622'
-1621 1622 0
c Var 'max_left_00001_00007_00002' direct represents '2' with '1623'
1621 -1622 1623 0
-1623 1622 0
-1623 -1621 0
c Var 'max_left_00001_00007_00002' order represents '3' with '1624'
-1622 1624 0
c Var 'max_left_00001_00007_00002' direct represents '3' with '1625'
1622 -1624 1625 0
-1625 1624 0
-1625 -1622 0
c Var 'max_left_00001_00007_00002' order represents '4' with '1626'
-1624 1626 0
c Var 'max_left_00001_00007_00002' direct represents '4' with '1627'
1624 -1626 1627 0
-1627 1626 0
-1627 -1624 0
c Var 'max_left_00001_00007_00002' order represents '5' with '1628'
-1626 1628 0
c Var 'max_left_00001_00007_00002' direct represents '5' with '1629'
1626 -1628 1629 0
-1629 1628 0
-1629 -1626 0
c Var 'max_left_00001_00007_00002' order represents '6' with '1630'
-1628 1630 0
c Var 'max_left_00001_00007_00002' direct represents '6' with '1631'
1628 -1630 1631 0
-1631 1630 0
-1631 -1628 0
c Var 'max_left_00001_00007_00002' order represents '7' with '1632'
-1630 1632 0
c Var 'max_left_00001_00007_00002' direct represents '7' with '1633'
1630 -1632 1633 0
-1633 1632 0
-1633 -1630 0
c Var 'max_left_00001_00007_00002' order represents '8' with '1634'
-1632 1634 0
c Var 'max_left_00001_00007_00002' direct represents '8' with '1635'
1632 -1634 1635 0
-1635 1634 0
-1635 -1632 0
c Var 'max_left_00001_00007_00002' direct represents '9' with '-1634'
1621 1623 1625 1627 1629 1631 1633 1635 -1634 0
c Encoding variable: max_left_00001_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00003' order represents '1' with '1636'
c Var 'max_left_00001_00007_00003' direct represents '1' with '1636'
c Var 'max_left_00001_00007_00003' order represents '2' with '1637'
-1636 1637 0
c Var 'max_left_00001_00007_00003' direct represents '2' with '1638'
1636 -1637 1638 0
-1638 1637 0
-1638 -1636 0
c Var 'max_left_00001_00007_00003' order represents '3' with '1639'
-1637 1639 0
c Var 'max_left_00001_00007_00003' direct represents '3' with '1640'
1637 -1639 1640 0
-1640 1639 0
-1640 -1637 0
c Var 'max_left_00001_00007_00003' order represents '4' with '1641'
-1639 1641 0
c Var 'max_left_00001_00007_00003' direct represents '4' with '1642'
1639 -1641 1642 0
-1642 1641 0
-1642 -1639 0
c Var 'max_left_00001_00007_00003' order represents '5' with '1643'
-1641 1643 0
c Var 'max_left_00001_00007_00003' direct represents '5' with '1644'
1641 -1643 1644 0
-1644 1643 0
-1644 -1641 0
c Var 'max_left_00001_00007_00003' order represents '6' with '1645'
-1643 1645 0
c Var 'max_left_00001_00007_00003' direct represents '6' with '1646'
1643 -1645 1646 0
-1646 1645 0
-1646 -1643 0
c Var 'max_left_00001_00007_00003' order represents '7' with '1647'
-1645 1647 0
c Var 'max_left_00001_00007_00003' direct represents '7' with '1648'
1645 -1647 1648 0
-1648 1647 0
-1648 -1645 0
c Var 'max_left_00001_00007_00003' order represents '8' with '1649'
-1647 1649 0
c Var 'max_left_00001_00007_00003' direct represents '8' with '1650'
1647 -1649 1650 0
-1650 1649 0
-1650 -1647 0
c Var 'max_left_00001_00007_00003' direct represents '9' with '-1649'
1636 1638 1640 1642 1644 1646 1648 1650 -1649 0
c Encoding variable: max_left_00001_00007_00004 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00004' order represents '3' with '1651'
c Var 'max_left_00001_00007_00004' direct represents '3' with '1651'
c Var 'max_left_00001_00007_00004' order represents '4' with '1652'
-1651 1652 0
c Var 'max_left_00001_00007_00004' direct represents '4' with '1653'
1651 -1652 1653 0
-1653 1652 0
-1653 -1651 0
c Var 'max_left_00001_00007_00004' order represents '5' with '1654'
-1652 1654 0
c Var 'max_left_00001_00007_00004' direct represents '5' with '1655'
1652 -1654 1655 0
-1655 1654 0
-1655 -1652 0
c Var 'max_left_00001_00007_00004' order represents '6' with '1656'
-1654 1656 0
c Var 'max_left_00001_00007_00004' direct represents '6' with '1657'
1654 -1656 1657 0
-1657 1656 0
-1657 -1654 0
c Var 'max_left_00001_00007_00004' order represents '7' with '1658'
-1656 1658 0
c Var 'max_left_00001_00007_00004' direct represents '7' with '1659'
1656 -1658 1659 0
-1659 1658 0
-1659 -1656 0
c Var 'max_left_00001_00007_00004' order represents '8' with '1660'
-1658 1660 0
c Var 'max_left_00001_00007_00004' direct represents '8' with '1661'
1658 -1660 1661 0
-1661 1660 0
-1661 -1658 0
c Var 'max_left_00001_00007_00004' direct represents '9' with '-1660'
1651 1653 1655 1657 1659 1661 -1660 0
c Encoding variable: max_left_00001_00007_00005 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00005' order represents '3' with '1662'
c Var 'max_left_00001_00007_00005' direct represents '3' with '1662'
c Var 'max_left_00001_00007_00005' order represents '4' with '1663'
-1662 1663 0
c Var 'max_left_00001_00007_00005' direct represents '4' with '1664'
1662 -1663 1664 0
-1664 1663 0
-1664 -1662 0
c Var 'max_left_00001_00007_00005' order represents '5' with '1665'
-1663 1665 0
c Var 'max_left_00001_00007_00005' direct represents '5' with '1666'
1663 -1665 1666 0
-1666 1665 0
-1666 -1663 0
c Var 'max_left_00001_00007_00005' order represents '6' with '1667'
-1665 1667 0
c Var 'max_left_00001_00007_00005' direct represents '6' with '1668'
1665 -1667 1668 0
-1668 1667 0
-1668 -1665 0
c Var 'max_left_00001_00007_00005' order represents '7' with '1669'
-1667 1669 0
c Var 'max_left_00001_00007_00005' direct represents '7' with '1670'
1667 -1669 1670 0
-1670 1669 0
-1670 -1667 0
c Var 'max_left_00001_00007_00005' order represents '8' with '1671'
-1669 1671 0
c Var 'max_left_00001_00007_00005' direct represents '8' with '1672'
1669 -1671 1672 0
-1672 1671 0
-1672 -1669 0
c Var 'max_left_00001_00007_00005' direct represents '9' with '-1671'
1662 1664 1666 1668 1670 1672 -1671 0
c Encoding variable: max_left_00001_00007_00006 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00006' order represents '3' with '1673'
c Var 'max_left_00001_00007_00006' direct represents '3' with '1673'
c Var 'max_left_00001_00007_00006' order represents '4' with '1674'
-1673 1674 0
c Var 'max_left_00001_00007_00006' direct represents '4' with '1675'
1673 -1674 1675 0
-1675 1674 0
-1675 -1673 0
c Var 'max_left_00001_00007_00006' order represents '5' with '1676'
-1674 1676 0
c Var 'max_left_00001_00007_00006' direct represents '5' with '1677'
1674 -1676 1677 0
-1677 1676 0
-1677 -1674 0
c Var 'max_left_00001_00007_00006' order represents '6' with '1678'
-1676 1678 0
c Var 'max_left_00001_00007_00006' direct represents '6' with '1679'
1676 -1678 1679 0
-1679 1678 0
-1679 -1676 0
c Var 'max_left_00001_00007_00006' order represents '7' with '1680'
-1678 1680 0
c Var 'max_left_00001_00007_00006' direct represents '7' with '1681'
1678 -1680 1681 0
-1681 1680 0
-1681 -1678 0
c Var 'max_left_00001_00007_00006' order represents '8' with '1682'
-1680 1682 0
c Var 'max_left_00001_00007_00006' direct represents '8' with '1683'
1680 -1682 1683 0
-1683 1682 0
-1683 -1680 0
c Var 'max_left_00001_00007_00006' direct represents '9' with '-1682'
1673 1675 1677 1679 1681 1683 -1682 0
c Encoding variable: max_left_00001_00007_00007 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00007' order represents '6' with '1684'
c Var 'max_left_00001_00007_00007' direct represents '6' with '1684'
c Var 'max_left_00001_00007_00007' order represents '7' with '1685'
-1684 1685 0
c Var 'max_left_00001_00007_00007' direct represents '7' with '1686'
1684 -1685 1686 0
-1686 1685 0
-1686 -1684 0
c Var 'max_left_00001_00007_00007' order represents '8' with '1687'
-1685 1687 0
c Var 'max_left_00001_00007_00007' direct represents '8' with '1688'
1685 -1687 1688 0
-1688 1687 0
-1688 -1685 0
c Var 'max_left_00001_00007_00007' direct represents '9' with '-1687'
1684 1686 1688 -1687 0
c Encoding variable: max_left_00001_00007_00008 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00008' order represents '6' with '1689'
c Var 'max_left_00001_00007_00008' direct represents '6' with '1689'
c Var 'max_left_00001_00007_00008' order represents '7' with '1690'
-1689 1690 0
c Var 'max_left_00001_00007_00008' direct represents '7' with '1691'
1689 -1690 1691 0
-1691 1690 0
-1691 -1689 0
c Var 'max_left_00001_00007_00008' order represents '8' with '1692'
-1690 1692 0
c Var 'max_left_00001_00007_00008' direct represents '8' with '1693'
1690 -1692 1693 0
-1693 1692 0
-1693 -1690 0
c Var 'max_left_00001_00007_00008' direct represents '9' with '-1692'
1689 1691 1693 -1692 0
c Encoding variable: max_left_00001_00007_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00009' order represents '7' with '1694'
c Var 'max_left_00001_00007_00009' direct represents '7' with '1694'
c Var 'max_left_00001_00007_00009' order represents '8' with '1695'
-1694 1695 0
c Var 'max_left_00001_00007_00009' direct represents '8' with '1696'
1694 -1695 1696 0
-1696 1695 0
-1696 -1694 0
c Var 'max_left_00001_00007_00009' direct represents '9' with '-1695'
1694 1696 -1695 0
c Encoding variable: max_left_00001_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00008_00000' direct represents '0' with '1697'
1697 0
c Encoding variable: max_left_00001_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00001' order represents '1' with '1698'
c Var 'max_left_00001_00008_00001' direct represents '1' with '1698'
c Var 'max_left_00001_00008_00001' order represents '2' with '1699'
-1698 1699 0
c Var 'max_left_00001_00008_00001' direct represents '2' with '1700'
1698 -1699 1700 0
-1700 1699 0
-1700 -1698 0
c Var 'max_left_00001_00008_00001' order represents '3' with '1701'
-1699 1701 0
c Var 'max_left_00001_00008_00001' direct represents '3' with '1702'
1699 -1701 1702 0
-1702 1701 0
-1702 -1699 0
c Var 'max_left_00001_00008_00001' order represents '4' with '1703'
-1701 1703 0
c Var 'max_left_00001_00008_00001' direct represents '4' with '1704'
1701 -1703 1704 0
-1704 1703 0
-1704 -1701 0
c Var 'max_left_00001_00008_00001' order represents '5' with '1705'
-1703 1705 0
c Var 'max_left_00001_00008_00001' direct represents '5' with '1706'
1703 -1705 1706 0
-1706 1705 0
-1706 -1703 0
c Var 'max_left_00001_00008_00001' order represents '6' with '1707'
-1705 1707 0
c Var 'max_left_00001_00008_00001' direct represents '6' with '1708'
1705 -1707 1708 0
-1708 1707 0
-1708 -1705 0
c Var 'max_left_00001_00008_00001' order represents '7' with '1709'
-1707 1709 0
c Var 'max_left_00001_00008_00001' direct represents '7' with '1710'
1707 -1709 1710 0
-1710 1709 0
-1710 -1707 0
c Var 'max_left_00001_00008_00001' order represents '8' with '1711'
-1709 1711 0
c Var 'max_left_00001_00008_00001' direct represents '8' with '1712'
1709 -1711 1712 0
-1712 1711 0
-1712 -1709 0
c Var 'max_left_00001_00008_00001' direct represents '9' with '-1711'
1698 1700 1702 1704 1706 1708 1710 1712 -1711 0
c Encoding variable: max_left_00001_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00002' order represents '1' with '1713'
c Var 'max_left_00001_00008_00002' direct represents '1' with '1713'
c Var 'max_left_00001_00008_00002' order represents '2' with '1714'
-1713 1714 0
c Var 'max_left_00001_00008_00002' direct represents '2' with '1715'
1713 -1714 1715 0
-1715 1714 0
-1715 -1713 0
c Var 'max_left_00001_00008_00002' order represents '3' with '1716'
-1714 1716 0
c Var 'max_left_00001_00008_00002' direct represents '3' with '1717'
1714 -1716 1717 0
-1717 1716 0
-1717 -1714 0
c Var 'max_left_00001_00008_00002' order represents '4' with '1718'
-1716 1718 0
c Var 'max_left_00001_00008_00002' direct represents '4' with '1719'
1716 -1718 1719 0
-1719 1718 0
-1719 -1716 0
c Var 'max_left_00001_00008_00002' order represents '5' with '1720'
-1718 1720 0
c Var 'max_left_00001_00008_00002' direct represents '5' with '1721'
1718 -1720 1721 0
-1721 1720 0
-1721 -1718 0
c Var 'max_left_00001_00008_00002' order represents '6' with '1722'
-1720 1722 0
c Var 'max_left_00001_00008_00002' direct represents '6' with '1723'
1720 -1722 1723 0
-1723 1722 0
-1723 -1720 0
c Var 'max_left_00001_00008_00002' order represents '7' with '1724'
-1722 1724 0
c Var 'max_left_00001_00008_00002' direct represents '7' with '1725'
1722 -1724 1725 0
-1725 1724 0
-1725 -1722 0
c Var 'max_left_00001_00008_00002' order represents '8' with '1726'
-1724 1726 0
c Var 'max_left_00001_00008_00002' direct represents '8' with '1727'
1724 -1726 1727 0
-1727 1726 0
-1727 -1724 0
c Var 'max_left_00001_00008_00002' direct represents '9' with '-1726'
1713 1715 1717 1719 1721 1723 1725 1727 -1726 0
c Encoding variable: max_left_00001_00008_00003 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00003' direct represents '8' with '-1728'
c Var 'max_left_00001_00008_00003' direct represents '9' with '1728'
c Var 'max_left_00001_00008_00003' order represents '9' with '1'
c Var 'max_left_00001_00008_00003' order represents '8' with '-1728'
c Encoding variable: max_left_00001_00008_00004 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00004' direct represents '8' with '-1729'
c Var 'max_left_00001_00008_00004' direct represents '9' with '1729'
c Var 'max_left_00001_00008_00004' order represents '9' with '1'
c Var 'max_left_00001_00008_00004' order represents '8' with '-1729'
c Encoding variable: max_left_00001_00008_00005 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00005' direct represents '8' with '-1730'
c Var 'max_left_00001_00008_00005' direct represents '9' with '1730'
c Var 'max_left_00001_00008_00005' order represents '9' with '1'
c Var 'max_left_00001_00008_00005' order represents '8' with '-1730'
c Encoding variable: max_left_00001_00008_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00006' direct represents '8' with '-1731'
c Var 'max_left_00001_00008_00006' direct represents '9' with '1731'
c Var 'max_left_00001_00008_00006' order represents '9' with '1'
c Var 'max_left_00001_00008_00006' order represents '8' with '-1731'
c Encoding variable: max_left_00001_00008_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00007' direct represents '8' with '-1732'
c Var 'max_left_00001_00008_00007' direct represents '9' with '1732'
c Var 'max_left_00001_00008_00007' order represents '9' with '1'
c Var 'max_left_00001_00008_00007' order represents '8' with '-1732'
c Encoding variable: max_left_00001_00008_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00008' direct represents '8' with '-1733'
c Var 'max_left_00001_00008_00008' direct represents '9' with '1733'
c Var 'max_left_00001_00008_00008' order represents '9' with '1'
c Var 'max_left_00001_00008_00008' order represents '8' with '-1733'
c Encoding variable: max_left_00001_00008_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00008_00009' direct represents '8' with '-1734'
c Var 'max_left_00001_00008_00009' direct represents '9' with '1734'
c Var 'max_left_00001_00008_00009' order represents '9' with '1'
c Var 'max_left_00001_00008_00009' order represents '8' with '-1734'
c Encoding variable: max_left_00001_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00009_00000' direct represents '0' with '1735'
1735 0
c Encoding variable: max_left_00001_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00001' order represents '1' with '1736'
c Var 'max_left_00001_00009_00001' direct represents '1' with '1736'
c Var 'max_left_00001_00009_00001' order represents '2' with '1737'
-1736 1737 0
c Var 'max_left_00001_00009_00001' direct represents '2' with '1738'
1736 -1737 1738 0
-1738 1737 0
-1738 -1736 0
c Var 'max_left_00001_00009_00001' order represents '3' with '1739'
-1737 1739 0
c Var 'max_left_00001_00009_00001' direct represents '3' with '1740'
1737 -1739 1740 0
-1740 1739 0
-1740 -1737 0
c Var 'max_left_00001_00009_00001' order represents '4' with '1741'
-1739 1741 0
c Var 'max_left_00001_00009_00001' direct represents '4' with '1742'
1739 -1741 1742 0
-1742 1741 0
-1742 -1739 0
c Var 'max_left_00001_00009_00001' order represents '5' with '1743'
-1741 1743 0
c Var 'max_left_00001_00009_00001' direct represents '5' with '1744'
1741 -1743 1744 0
-1744 1743 0
-1744 -1741 0
c Var 'max_left_00001_00009_00001' order represents '6' with '1745'
-1743 1745 0
c Var 'max_left_00001_00009_00001' direct represents '6' with '1746'
1743 -1745 1746 0
-1746 1745 0
-1746 -1743 0
c Var 'max_left_00001_00009_00001' order represents '7' with '1747'
-1745 1747 0
c Var 'max_left_00001_00009_00001' direct represents '7' with '1748'
1745 -1747 1748 0
-1748 1747 0
-1748 -1745 0
c Var 'max_left_00001_00009_00001' order represents '8' with '1749'
-1747 1749 0
c Var 'max_left_00001_00009_00001' direct represents '8' with '1750'
1747 -1749 1750 0
-1750 1749 0
-1750 -1747 0
c Var 'max_left_00001_00009_00001' direct represents '9' with '-1749'
1736 1738 1740 1742 1744 1746 1748 1750 -1749 0
c Encoding variable: max_left_00001_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00002' order represents '1' with '1751'
c Var 'max_left_00001_00009_00002' direct represents '1' with '1751'
c Var 'max_left_00001_00009_00002' order represents '2' with '1752'
-1751 1752 0
c Var 'max_left_00001_00009_00002' direct represents '2' with '1753'
1751 -1752 1753 0
-1753 1752 0
-1753 -1751 0
c Var 'max_left_00001_00009_00002' order represents '3' with '1754'
-1752 1754 0
c Var 'max_left_00001_00009_00002' direct represents '3' with '1755'
1752 -1754 1755 0
-1755 1754 0
-1755 -1752 0
c Var 'max_left_00001_00009_00002' order represents '4' with '1756'
-1754 1756 0
c Var 'max_left_00001_00009_00002' direct represents '4' with '1757'
1754 -1756 1757 0
-1757 1756 0
-1757 -1754 0
c Var 'max_left_00001_00009_00002' order represents '5' with '1758'
-1756 1758 0
c Var 'max_left_00001_00009_00002' direct represents '5' with '1759'
1756 -1758 1759 0
-1759 1758 0
-1759 -1756 0
c Var 'max_left_00001_00009_00002' order represents '6' with '1760'
-1758 1760 0
c Var 'max_left_00001_00009_00002' direct represents '6' with '1761'
1758 -1760 1761 0
-1761 1760 0
-1761 -1758 0
c Var 'max_left_00001_00009_00002' order represents '7' with '1762'
-1760 1762 0
c Var 'max_left_00001_00009_00002' direct represents '7' with '1763'
1760 -1762 1763 0
-1763 1762 0
-1763 -1760 0
c Var 'max_left_00001_00009_00002' order represents '8' with '1764'
-1762 1764 0
c Var 'max_left_00001_00009_00002' direct represents '8' with '1765'
1762 -1764 1765 0
-1765 1764 0
-1765 -1762 0
c Var 'max_left_00001_00009_00002' direct represents '9' with '-1764'
1751 1753 1755 1757 1759 1761 1763 1765 -1764 0
c Encoding variable: max_left_00001_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00003' order represents '1' with '1766'
c Var 'max_left_00001_00009_00003' direct represents '1' with '1766'
c Var 'max_left_00001_00009_00003' order represents '2' with '1767'
-1766 1767 0
c Var 'max_left_00001_00009_00003' direct represents '2' with '1768'
1766 -1767 1768 0
-1768 1767 0
-1768 -1766 0
c Var 'max_left_00001_00009_00003' order represents '3' with '1769'
-1767 1769 0
c Var 'max_left_00001_00009_00003' direct represents '3' with '1770'
1767 -1769 1770 0
-1770 1769 0
-1770 -1767 0
c Var 'max_left_00001_00009_00003' order represents '4' with '1771'
-1769 1771 0
c Var 'max_left_00001_00009_00003' direct represents '4' with '1772'
1769 -1771 1772 0
-1772 1771 0
-1772 -1769 0
c Var 'max_left_00001_00009_00003' order represents '5' with '1773'
-1771 1773 0
c Var 'max_left_00001_00009_00003' direct represents '5' with '1774'
1771 -1773 1774 0
-1774 1773 0
-1774 -1771 0
c Var 'max_left_00001_00009_00003' order represents '6' with '1775'
-1773 1775 0
c Var 'max_left_00001_00009_00003' direct represents '6' with '1776'
1773 -1775 1776 0
-1776 1775 0
-1776 -1773 0
c Var 'max_left_00001_00009_00003' order represents '7' with '1777'
-1775 1777 0
c Var 'max_left_00001_00009_00003' direct represents '7' with '1778'
1775 -1777 1778 0
-1778 1777 0
-1778 -1775 0
c Var 'max_left_00001_00009_00003' order represents '8' with '1779'
-1777 1779 0
c Var 'max_left_00001_00009_00003' direct represents '8' with '1780'
1777 -1779 1780 0
-1780 1779 0
-1780 -1777 0
c Var 'max_left_00001_00009_00003' direct represents '9' with '-1779'
1766 1768 1770 1772 1774 1776 1778 1780 -1779 0
c Encoding variable: max_left_00001_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00004' order represents '1' with '1781'
c Var 'max_left_00001_00009_00004' direct represents '1' with '1781'
c Var 'max_left_00001_00009_00004' order represents '2' with '1782'
-1781 1782 0
c Var 'max_left_00001_00009_00004' direct represents '2' with '1783'
1781 -1782 1783 0
-1783 1782 0
-1783 -1781 0
c Var 'max_left_00001_00009_00004' order represents '3' with '1784'
-1782 1784 0
c Var 'max_left_00001_00009_00004' direct represents '3' with '1785'
1782 -1784 1785 0
-1785 1784 0
-1785 -1782 0
c Var 'max_left_00001_00009_00004' order represents '4' with '1786'
-1784 1786 0
c Var 'max_left_00001_00009_00004' direct represents '4' with '1787'
1784 -1786 1787 0
-1787 1786 0
-1787 -1784 0
c Var 'max_left_00001_00009_00004' order represents '5' with '1788'
-1786 1788 0
c Var 'max_left_00001_00009_00004' direct represents '5' with '1789'
1786 -1788 1789 0
-1789 1788 0
-1789 -1786 0
c Var 'max_left_00001_00009_00004' order represents '6' with '1790'
-1788 1790 0
c Var 'max_left_00001_00009_00004' direct represents '6' with '1791'
1788 -1790 1791 0
-1791 1790 0
-1791 -1788 0
c Var 'max_left_00001_00009_00004' order represents '7' with '1792'
-1790 1792 0
c Var 'max_left_00001_00009_00004' direct represents '7' with '1793'
1790 -1792 1793 0
-1793 1792 0
-1793 -1790 0
c Var 'max_left_00001_00009_00004' order represents '8' with '1794'
-1792 1794 0
c Var 'max_left_00001_00009_00004' direct represents '8' with '1795'
1792 -1794 1795 0
-1795 1794 0
-1795 -1792 0
c Var 'max_left_00001_00009_00004' direct represents '9' with '-1794'
1781 1783 1785 1787 1789 1791 1793 1795 -1794 0
c Encoding variable: max_left_00001_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00005' order represents '1' with '1796'
c Var 'max_left_00001_00009_00005' direct represents '1' with '1796'
c Var 'max_left_00001_00009_00005' order represents '2' with '1797'
-1796 1797 0
c Var 'max_left_00001_00009_00005' direct represents '2' with '1798'
1796 -1797 1798 0
-1798 1797 0
-1798 -1796 0
c Var 'max_left_00001_00009_00005' order represents '3' with '1799'
-1797 1799 0
c Var 'max_left_00001_00009_00005' direct represents '3' with '1800'
1797 -1799 1800 0
-1800 1799 0
-1800 -1797 0
c Var 'max_left_00001_00009_00005' order represents '4' with '1801'
-1799 1801 0
c Var 'max_left_00001_00009_00005' direct represents '4' with '1802'
1799 -1801 1802 0
-1802 1801 0
-1802 -1799 0
c Var 'max_left_00001_00009_00005' order represents '5' with '1803'
-1801 1803 0
c Var 'max_left_00001_00009_00005' direct represents '5' with '1804'
1801 -1803 1804 0
-1804 1803 0
-1804 -1801 0
c Var 'max_left_00001_00009_00005' order represents '6' with '1805'
-1803 1805 0
c Var 'max_left_00001_00009_00005' direct represents '6' with '1806'
1803 -1805 1806 0
-1806 1805 0
-1806 -1803 0
c Var 'max_left_00001_00009_00005' order represents '7' with '1807'
-1805 1807 0
c Var 'max_left_00001_00009_00005' direct represents '7' with '1808'
1805 -1807 1808 0
-1808 1807 0
-1808 -1805 0
c Var 'max_left_00001_00009_00005' order represents '8' with '1809'
-1807 1809 0
c Var 'max_left_00001_00009_00005' direct represents '8' with '1810'
1807 -1809 1810 0
-1810 1809 0
-1810 -1807 0
c Var 'max_left_00001_00009_00005' direct represents '9' with '-1809'
1796 1798 1800 1802 1804 1806 1808 1810 -1809 0
c Encoding variable: max_left_00001_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00006' order represents '1' with '1811'
c Var 'max_left_00001_00009_00006' direct represents '1' with '1811'
c Var 'max_left_00001_00009_00006' order represents '2' with '1812'
-1811 1812 0
c Var 'max_left_00001_00009_00006' direct represents '2' with '1813'
1811 -1812 1813 0
-1813 1812 0
-1813 -1811 0
c Var 'max_left_00001_00009_00006' order represents '3' with '1814'
-1812 1814 0
c Var 'max_left_00001_00009_00006' direct represents '3' with '1815'
1812 -1814 1815 0
-1815 1814 0
-1815 -1812 0
c Var 'max_left_00001_00009_00006' order represents '4' with '1816'
-1814 1816 0
c Var 'max_left_00001_00009_00006' direct represents '4' with '1817'
1814 -1816 1817 0
-1817 1816 0
-1817 -1814 0
c Var 'max_left_00001_00009_00006' order represents '5' with '1818'
-1816 1818 0
c Var 'max_left_00001_00009_00006' direct represents '5' with '1819'
1816 -1818 1819 0
-1819 1818 0
-1819 -1816 0
c Var 'max_left_00001_00009_00006' order represents '6' with '1820'
-1818 1820 0
c Var 'max_left_00001_00009_00006' direct represents '6' with '1821'
1818 -1820 1821 0
-1821 1820 0
-1821 -1818 0
c Var 'max_left_00001_00009_00006' order represents '7' with '1822'
-1820 1822 0
c Var 'max_left_00001_00009_00006' direct represents '7' with '1823'
1820 -1822 1823 0
-1823 1822 0
-1823 -1820 0
c Var 'max_left_00001_00009_00006' order represents '8' with '1824'
-1822 1824 0
c Var 'max_left_00001_00009_00006' direct represents '8' with '1825'
1822 -1824 1825 0
-1825 1824 0
-1825 -1822 0
c Var 'max_left_00001_00009_00006' direct represents '9' with '-1824'
1811 1813 1815 1817 1819 1821 1823 1825 -1824 0
c Encoding variable: max_left_00001_00009_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00009_00007' direct represents '8' with '-1826'
c Var 'max_left_00001_00009_00007' direct represents '9' with '1826'
c Var 'max_left_00001_00009_00007' order represents '9' with '1'
c Var 'max_left_00001_00009_00007' order represents '8' with '-1826'
c Encoding variable: max_left_00001_00009_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00009_00008' direct represents '8' with '-1827'
c Var 'max_left_00001_00009_00008' direct represents '9' with '1827'
c Var 'max_left_00001_00009_00008' order represents '9' with '1'
c Var 'max_left_00001_00009_00008' order represents '8' with '-1827'
c Encoding variable: max_left_00001_00009_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00001_00009_00009' direct represents '8' with '-1828'
c Var 'max_left_00001_00009_00009' direct represents '9' with '1828'
c Var 'max_left_00001_00009_00009' order represents '9' with '1'
c Var 'max_left_00001_00009_00009' order represents '8' with '-1828'
c Encoding variable: max_left_00002_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00001_00000' direct represents '0' with '1829'
1829 0
c Encoding variable: max_left_00002_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00001' order represents '1' with '1830'
c Var 'max_left_00002_00001_00001' direct represents '1' with '1830'
c Var 'max_left_00002_00001_00001' order represents '2' with '1831'
-1830 1831 0
c Var 'max_left_00002_00001_00001' direct represents '2' with '1832'
1830 -1831 1832 0
-1832 1831 0
-1832 -1830 0
c Var 'max_left_00002_00001_00001' order represents '3' with '1833'
-1831 1833 0
c Var 'max_left_00002_00001_00001' direct represents '3' with '1834'
1831 -1833 1834 0
-1834 1833 0
-1834 -1831 0
c Var 'max_left_00002_00001_00001' order represents '4' with '1835'
-1833 1835 0
c Var 'max_left_00002_00001_00001' direct represents '4' with '1836'
1833 -1835 1836 0
-1836 1835 0
-1836 -1833 0
c Var 'max_left_00002_00001_00001' order represents '5' with '1837'
-1835 1837 0
c Var 'max_left_00002_00001_00001' direct represents '5' with '1838'
1835 -1837 1838 0
-1838 1837 0
-1838 -1835 0
c Var 'max_left_00002_00001_00001' order represents '6' with '1839'
-1837 1839 0
c Var 'max_left_00002_00001_00001' direct represents '6' with '1840'
1837 -1839 1840 0
-1840 1839 0
-1840 -1837 0
c Var 'max_left_00002_00001_00001' order represents '7' with '1841'
-1839 1841 0
c Var 'max_left_00002_00001_00001' direct represents '7' with '1842'
1839 -1841 1842 0
-1842 1841 0
-1842 -1839 0
c Var 'max_left_00002_00001_00001' order represents '8' with '1843'
-1841 1843 0
c Var 'max_left_00002_00001_00001' direct represents '8' with '1844'
1841 -1843 1844 0
-1844 1843 0
-1844 -1841 0
c Var 'max_left_00002_00001_00001' direct represents '9' with '-1843'
1830 1832 1834 1836 1838 1840 1842 1844 -1843 0
c Encoding variable: max_left_00002_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00002' order represents '1' with '1845'
c Var 'max_left_00002_00001_00002' direct represents '1' with '1845'
c Var 'max_left_00002_00001_00002' order represents '2' with '1846'
-1845 1846 0
c Var 'max_left_00002_00001_00002' direct represents '2' with '1847'
1845 -1846 1847 0
-1847 1846 0
-1847 -1845 0
c Var 'max_left_00002_00001_00002' order represents '3' with '1848'
-1846 1848 0
c Var 'max_left_00002_00001_00002' direct represents '3' with '1849'
1846 -1848 1849 0
-1849 1848 0
-1849 -1846 0
c Var 'max_left_00002_00001_00002' order represents '4' with '1850'
-1848 1850 0
c Var 'max_left_00002_00001_00002' direct represents '4' with '1851'
1848 -1850 1851 0
-1851 1850 0
-1851 -1848 0
c Var 'max_left_00002_00001_00002' order represents '5' with '1852'
-1850 1852 0
c Var 'max_left_00002_00001_00002' direct represents '5' with '1853'
1850 -1852 1853 0
-1853 1852 0
-1853 -1850 0
c Var 'max_left_00002_00001_00002' order represents '6' with '1854'
-1852 1854 0
c Var 'max_left_00002_00001_00002' direct represents '6' with '1855'
1852 -1854 1855 0
-1855 1854 0
-1855 -1852 0
c Var 'max_left_00002_00001_00002' order represents '7' with '1856'
-1854 1856 0
c Var 'max_left_00002_00001_00002' direct represents '7' with '1857'
1854 -1856 1857 0
-1857 1856 0
-1857 -1854 0
c Var 'max_left_00002_00001_00002' order represents '8' with '1858'
-1856 1858 0
c Var 'max_left_00002_00001_00002' direct represents '8' with '1859'
1856 -1858 1859 0
-1859 1858 0
-1859 -1856 0
c Var 'max_left_00002_00001_00002' direct represents '9' with '-1858'
1845 1847 1849 1851 1853 1855 1857 1859 -1858 0
c Encoding variable: max_left_00002_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00003' order represents '1' with '1860'
c Var 'max_left_00002_00001_00003' direct represents '1' with '1860'
c Var 'max_left_00002_00001_00003' order represents '2' with '1861'
-1860 1861 0
c Var 'max_left_00002_00001_00003' direct represents '2' with '1862'
1860 -1861 1862 0
-1862 1861 0
-1862 -1860 0
c Var 'max_left_00002_00001_00003' order represents '3' with '1863'
-1861 1863 0
c Var 'max_left_00002_00001_00003' direct represents '3' with '1864'
1861 -1863 1864 0
-1864 1863 0
-1864 -1861 0
c Var 'max_left_00002_00001_00003' order represents '4' with '1865'
-1863 1865 0
c Var 'max_left_00002_00001_00003' direct represents '4' with '1866'
1863 -1865 1866 0
-1866 1865 0
-1866 -1863 0
c Var 'max_left_00002_00001_00003' order represents '5' with '1867'
-1865 1867 0
c Var 'max_left_00002_00001_00003' direct represents '5' with '1868'
1865 -1867 1868 0
-1868 1867 0
-1868 -1865 0
c Var 'max_left_00002_00001_00003' order represents '6' with '1869'
-1867 1869 0
c Var 'max_left_00002_00001_00003' direct represents '6' with '1870'
1867 -1869 1870 0
-1870 1869 0
-1870 -1867 0
c Var 'max_left_00002_00001_00003' order represents '7' with '1871'
-1869 1871 0
c Var 'max_left_00002_00001_00003' direct represents '7' with '1872'
1869 -1871 1872 0
-1872 1871 0
-1872 -1869 0
c Var 'max_left_00002_00001_00003' order represents '8' with '1873'
-1871 1873 0
c Var 'max_left_00002_00001_00003' direct represents '8' with '1874'
1871 -1873 1874 0
-1874 1873 0
-1874 -1871 0
c Var 'max_left_00002_00001_00003' direct represents '9' with '-1873'
1860 1862 1864 1866 1868 1870 1872 1874 -1873 0
c Encoding variable: max_left_00002_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00004' order represents '1' with '1875'
c Var 'max_left_00002_00001_00004' direct represents '1' with '1875'
c Var 'max_left_00002_00001_00004' order represents '2' with '1876'
-1875 1876 0
c Var 'max_left_00002_00001_00004' direct represents '2' with '1877'
1875 -1876 1877 0
-1877 1876 0
-1877 -1875 0
c Var 'max_left_00002_00001_00004' order represents '3' with '1878'
-1876 1878 0
c Var 'max_left_00002_00001_00004' direct represents '3' with '1879'
1876 -1878 1879 0
-1879 1878 0
-1879 -1876 0
c Var 'max_left_00002_00001_00004' order represents '4' with '1880'
-1878 1880 0
c Var 'max_left_00002_00001_00004' direct represents '4' with '1881'
1878 -1880 1881 0
-1881 1880 0
-1881 -1878 0
c Var 'max_left_00002_00001_00004' order represents '5' with '1882'
-1880 1882 0
c Var 'max_left_00002_00001_00004' direct represents '5' with '1883'
1880 -1882 1883 0
-1883 1882 0
-1883 -1880 0
c Var 'max_left_00002_00001_00004' order represents '6' with '1884'
-1882 1884 0
c Var 'max_left_00002_00001_00004' direct represents '6' with '1885'
1882 -1884 1885 0
-1885 1884 0
-1885 -1882 0
c Var 'max_left_00002_00001_00004' order represents '7' with '1886'
-1884 1886 0
c Var 'max_left_00002_00001_00004' direct represents '7' with '1887'
1884 -1886 1887 0
-1887 1886 0
-1887 -1884 0
c Var 'max_left_00002_00001_00004' order represents '8' with '1888'
-1886 1888 0
c Var 'max_left_00002_00001_00004' direct represents '8' with '1889'
1886 -1888 1889 0
-1889 1888 0
-1889 -1886 0
c Var 'max_left_00002_00001_00004' direct represents '9' with '-1888'
1875 1877 1879 1881 1883 1885 1887 1889 -1888 0
c Encoding variable: max_left_00002_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00005' order represents '1' with '1890'
c Var 'max_left_00002_00001_00005' direct represents '1' with '1890'
c Var 'max_left_00002_00001_00005' order represents '2' with '1891'
-1890 1891 0
c Var 'max_left_00002_00001_00005' direct represents '2' with '1892'
1890 -1891 1892 0
-1892 1891 0
-1892 -1890 0
c Var 'max_left_00002_00001_00005' order represents '3' with '1893'
-1891 1893 0
c Var 'max_left_00002_00001_00005' direct represents '3' with '1894'
1891 -1893 1894 0
-1894 1893 0
-1894 -1891 0
c Var 'max_left_00002_00001_00005' order represents '4' with '1895'
-1893 1895 0
c Var 'max_left_00002_00001_00005' direct represents '4' with '1896'
1893 -1895 1896 0
-1896 1895 0
-1896 -1893 0
c Var 'max_left_00002_00001_00005' order represents '5' with '1897'
-1895 1897 0
c Var 'max_left_00002_00001_00005' direct represents '5' with '1898'
1895 -1897 1898 0
-1898 1897 0
-1898 -1895 0
c Var 'max_left_00002_00001_00005' order represents '6' with '1899'
-1897 1899 0
c Var 'max_left_00002_00001_00005' direct represents '6' with '1900'
1897 -1899 1900 0
-1900 1899 0
-1900 -1897 0
c Var 'max_left_00002_00001_00005' order represents '7' with '1901'
-1899 1901 0
c Var 'max_left_00002_00001_00005' direct represents '7' with '1902'
1899 -1901 1902 0
-1902 1901 0
-1902 -1899 0
c Var 'max_left_00002_00001_00005' order represents '8' with '1903'
-1901 1903 0
c Var 'max_left_00002_00001_00005' direct represents '8' with '1904'
1901 -1903 1904 0
-1904 1903 0
-1904 -1901 0
c Var 'max_left_00002_00001_00005' direct represents '9' with '-1903'
1890 1892 1894 1896 1898 1900 1902 1904 -1903 0
c Encoding variable: max_left_00002_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00006' order represents '1' with '1905'
c Var 'max_left_00002_00001_00006' direct represents '1' with '1905'
c Var 'max_left_00002_00001_00006' order represents '2' with '1906'
-1905 1906 0
c Var 'max_left_00002_00001_00006' direct represents '2' with '1907'
1905 -1906 1907 0
-1907 1906 0
-1907 -1905 0
c Var 'max_left_00002_00001_00006' order represents '3' with '1908'
-1906 1908 0
c Var 'max_left_00002_00001_00006' direct represents '3' with '1909'
1906 -1908 1909 0
-1909 1908 0
-1909 -1906 0
c Var 'max_left_00002_00001_00006' order represents '4' with '1910'
-1908 1910 0
c Var 'max_left_00002_00001_00006' direct represents '4' with '1911'
1908 -1910 1911 0
-1911 1910 0
-1911 -1908 0
c Var 'max_left_00002_00001_00006' order represents '5' with '1912'
-1910 1912 0
c Var 'max_left_00002_00001_00006' direct represents '5' with '1913'
1910 -1912 1913 0
-1913 1912 0
-1913 -1910 0
c Var 'max_left_00002_00001_00006' order represents '6' with '1914'
-1912 1914 0
c Var 'max_left_00002_00001_00006' direct represents '6' with '1915'
1912 -1914 1915 0
-1915 1914 0
-1915 -1912 0
c Var 'max_left_00002_00001_00006' order represents '7' with '1916'
-1914 1916 0
c Var 'max_left_00002_00001_00006' direct represents '7' with '1917'
1914 -1916 1917 0
-1917 1916 0
-1917 -1914 0
c Var 'max_left_00002_00001_00006' order represents '8' with '1918'
-1916 1918 0
c Var 'max_left_00002_00001_00006' direct represents '8' with '1919'
1916 -1918 1919 0
-1919 1918 0
-1919 -1916 0
c Var 'max_left_00002_00001_00006' direct represents '9' with '-1918'
1905 1907 1909 1911 1913 1915 1917 1919 -1918 0
c Encoding variable: max_left_00002_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00007' order represents '1' with '1920'
c Var 'max_left_00002_00001_00007' direct represents '1' with '1920'
c Var 'max_left_00002_00001_00007' order represents '2' with '1921'
-1920 1921 0
c Var 'max_left_00002_00001_00007' direct represents '2' with '1922'
1920 -1921 1922 0
-1922 1921 0
-1922 -1920 0
c Var 'max_left_00002_00001_00007' order represents '3' with '1923'
-1921 1923 0
c Var 'max_left_00002_00001_00007' direct represents '3' with '1924'
1921 -1923 1924 0
-1924 1923 0
-1924 -1921 0
c Var 'max_left_00002_00001_00007' order represents '4' with '1925'
-1923 1925 0
c Var 'max_left_00002_00001_00007' direct represents '4' with '1926'
1923 -1925 1926 0
-1926 1925 0
-1926 -1923 0
c Var 'max_left_00002_00001_00007' order represents '5' with '1927'
-1925 1927 0
c Var 'max_left_00002_00001_00007' direct represents '5' with '1928'
1925 -1927 1928 0
-1928 1927 0
-1928 -1925 0
c Var 'max_left_00002_00001_00007' order represents '6' with '1929'
-1927 1929 0
c Var 'max_left_00002_00001_00007' direct represents '6' with '1930'
1927 -1929 1930 0
-1930 1929 0
-1930 -1927 0
c Var 'max_left_00002_00001_00007' order represents '7' with '1931'
-1929 1931 0
c Var 'max_left_00002_00001_00007' direct represents '7' with '1932'
1929 -1931 1932 0
-1932 1931 0
-1932 -1929 0
c Var 'max_left_00002_00001_00007' order represents '8' with '1933'
-1931 1933 0
c Var 'max_left_00002_00001_00007' direct represents '8' with '1934'
1931 -1933 1934 0
-1934 1933 0
-1934 -1931 0
c Var 'max_left_00002_00001_00007' direct represents '9' with '-1933'
1920 1922 1924 1926 1928 1930 1932 1934 -1933 0
c Encoding variable: max_left_00002_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00008' order represents '1' with '1935'
c Var 'max_left_00002_00001_00008' direct represents '1' with '1935'
c Var 'max_left_00002_00001_00008' order represents '2' with '1936'
-1935 1936 0
c Var 'max_left_00002_00001_00008' direct represents '2' with '1937'
1935 -1936 1937 0
-1937 1936 0
-1937 -1935 0
c Var 'max_left_00002_00001_00008' order represents '3' with '1938'
-1936 1938 0
c Var 'max_left_00002_00001_00008' direct represents '3' with '1939'
1936 -1938 1939 0
-1939 1938 0
-1939 -1936 0
c Var 'max_left_00002_00001_00008' order represents '4' with '1940'
-1938 1940 0
c Var 'max_left_00002_00001_00008' direct represents '4' with '1941'
1938 -1940 1941 0
-1941 1940 0
-1941 -1938 0
c Var 'max_left_00002_00001_00008' order represents '5' with '1942'
-1940 1942 0
c Var 'max_left_00002_00001_00008' direct represents '5' with '1943'
1940 -1942 1943 0
-1943 1942 0
-1943 -1940 0
c Var 'max_left_00002_00001_00008' order represents '6' with '1944'
-1942 1944 0
c Var 'max_left_00002_00001_00008' direct represents '6' with '1945'
1942 -1944 1945 0
-1945 1944 0
-1945 -1942 0
c Var 'max_left_00002_00001_00008' order represents '7' with '1946'
-1944 1946 0
c Var 'max_left_00002_00001_00008' direct represents '7' with '1947'
1944 -1946 1947 0
-1947 1946 0
-1947 -1944 0
c Var 'max_left_00002_00001_00008' order represents '8' with '1948'
-1946 1948 0
c Var 'max_left_00002_00001_00008' direct represents '8' with '1949'
1946 -1948 1949 0
-1949 1948 0
-1949 -1946 0
c Var 'max_left_00002_00001_00008' direct represents '9' with '-1948'
1935 1937 1939 1941 1943 1945 1947 1949 -1948 0
c Encoding variable: max_left_00002_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00009' order represents '1' with '1950'
c Var 'max_left_00002_00001_00009' direct represents '1' with '1950'
c Var 'max_left_00002_00001_00009' order represents '2' with '1951'
-1950 1951 0
c Var 'max_left_00002_00001_00009' direct represents '2' with '1952'
1950 -1951 1952 0
-1952 1951 0
-1952 -1950 0
c Var 'max_left_00002_00001_00009' order represents '3' with '1953'
-1951 1953 0
c Var 'max_left_00002_00001_00009' direct represents '3' with '1954'
1951 -1953 1954 0
-1954 1953 0
-1954 -1951 0
c Var 'max_left_00002_00001_00009' order represents '4' with '1955'
-1953 1955 0
c Var 'max_left_00002_00001_00009' direct represents '4' with '1956'
1953 -1955 1956 0
-1956 1955 0
-1956 -1953 0
c Var 'max_left_00002_00001_00009' order represents '5' with '1957'
-1955 1957 0
c Var 'max_left_00002_00001_00009' direct represents '5' with '1958'
1955 -1957 1958 0
-1958 1957 0
-1958 -1955 0
c Var 'max_left_00002_00001_00009' order represents '6' with '1959'
-1957 1959 0
c Var 'max_left_00002_00001_00009' direct represents '6' with '1960'
1957 -1959 1960 0
-1960 1959 0
-1960 -1957 0
c Var 'max_left_00002_00001_00009' order represents '7' with '1961'
-1959 1961 0
c Var 'max_left_00002_00001_00009' direct represents '7' with '1962'
1959 -1961 1962 0
-1962 1961 0
-1962 -1959 0
c Var 'max_left_00002_00001_00009' order represents '8' with '1963'
-1961 1963 0
c Var 'max_left_00002_00001_00009' direct represents '8' with '1964'
1961 -1963 1964 0
-1964 1963 0
-1964 -1961 0
c Var 'max_left_00002_00001_00009' direct represents '9' with '-1963'
1950 1952 1954 1956 1958 1960 1962 1964 -1963 0
c Encoding variable: max_left_00002_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00002_00000' direct represents '0' with '1965'
1965 0
c Encoding variable: max_left_00002_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00001' order represents '1' with '1966'
c Var 'max_left_00002_00002_00001' direct represents '1' with '1966'
c Var 'max_left_00002_00002_00001' order represents '2' with '1967'
-1966 1967 0
c Var 'max_left_00002_00002_00001' direct represents '2' with '1968'
1966 -1967 1968 0
-1968 1967 0
-1968 -1966 0
c Var 'max_left_00002_00002_00001' order represents '3' with '1969'
-1967 1969 0
c Var 'max_left_00002_00002_00001' direct represents '3' with '1970'
1967 -1969 1970 0
-1970 1969 0
-1970 -1967 0
c Var 'max_left_00002_00002_00001' order represents '4' with '1971'
-1969 1971 0
c Var 'max_left_00002_00002_00001' direct represents '4' with '1972'
1969 -1971 1972 0
-1972 1971 0
-1972 -1969 0
c Var 'max_left_00002_00002_00001' order represents '5' with '1973'
-1971 1973 0
c Var 'max_left_00002_00002_00001' direct represents '5' with '1974'
1971 -1973 1974 0
-1974 1973 0
-1974 -1971 0
c Var 'max_left_00002_00002_00001' order represents '6' with '1975'
-1973 1975 0
c Var 'max_left_00002_00002_00001' direct represents '6' with '1976'
1973 -1975 1976 0
-1976 1975 0
-1976 -1973 0
c Var 'max_left_00002_00002_00001' order represents '7' with '1977'
-1975 1977 0
c Var 'max_left_00002_00002_00001' direct represents '7' with '1978'
1975 -1977 1978 0
-1978 1977 0
-1978 -1975 0
c Var 'max_left_00002_00002_00001' order represents '8' with '1979'
-1977 1979 0
c Var 'max_left_00002_00002_00001' direct represents '8' with '1980'
1977 -1979 1980 0
-1980 1979 0
-1980 -1977 0
c Var 'max_left_00002_00002_00001' direct represents '9' with '-1979'
1966 1968 1970 1972 1974 1976 1978 1980 -1979 0
c Encoding variable: max_left_00002_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00002' order represents '1' with '1981'
c Var 'max_left_00002_00002_00002' direct represents '1' with '1981'
c Var 'max_left_00002_00002_00002' order represents '2' with '1982'
-1981 1982 0
c Var 'max_left_00002_00002_00002' direct represents '2' with '1983'
1981 -1982 1983 0
-1983 1982 0
-1983 -1981 0
c Var 'max_left_00002_00002_00002' order represents '3' with '1984'
-1982 1984 0
c Var 'max_left_00002_00002_00002' direct represents '3' with '1985'
1982 -1984 1985 0
-1985 1984 0
-1985 -1982 0
c Var 'max_left_00002_00002_00002' order represents '4' with '1986'
-1984 1986 0
c Var 'max_left_00002_00002_00002' direct represents '4' with '1987'
1984 -1986 1987 0
-1987 1986 0
-1987 -1984 0
c Var 'max_left_00002_00002_00002' order represents '5' with '1988'
-1986 1988 0
c Var 'max_left_00002_00002_00002' direct represents '5' with '1989'
1986 -1988 1989 0
-1989 1988 0
-1989 -1986 0
c Var 'max_left_00002_00002_00002' order represents '6' with '1990'
-1988 1990 0
c Var 'max_left_00002_00002_00002' direct represents '6' with '1991'
1988 -1990 1991 0
-1991 1990 0
-1991 -1988 0
c Var 'max_left_00002_00002_00002' order represents '7' with '1992'
-1990 1992 0
c Var 'max_left_00002_00002_00002' direct represents '7' with '1993'
1990 -1992 1993 0
-1993 1992 0
-1993 -1990 0
c Var 'max_left_00002_00002_00002' order represents '8' with '1994'
-1992 1994 0
c Var 'max_left_00002_00002_00002' direct represents '8' with '1995'
1992 -1994 1995 0
-1995 1994 0
-1995 -1992 0
c Var 'max_left_00002_00002_00002' direct represents '9' with '-1994'
1981 1983 1985 1987 1989 1991 1993 1995 -1994 0
c Encoding variable: max_left_00002_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00003' order represents '1' with '1996'
c Var 'max_left_00002_00002_00003' direct represents '1' with '1996'
c Var 'max_left_00002_00002_00003' order represents '2' with '1997'
-1996 1997 0
c Var 'max_left_00002_00002_00003' direct represents '2' with '1998'
1996 -1997 1998 0
-1998 1997 0
-1998 -1996 0
c Var 'max_left_00002_00002_00003' order represents '3' with '1999'
-1997 1999 0
c Var 'max_left_00002_00002_00003' direct represents '3' with '2000'
1997 -1999 2000 0
-2000 1999 0
-2000 -1997 0
c Var 'max_left_00002_00002_00003' order represents '4' with '2001'
-1999 2001 0
c Var 'max_left_00002_00002_00003' direct represents '4' with '2002'
1999 -2001 2002 0
-2002 2001 0
-2002 -1999 0
c Var 'max_left_00002_00002_00003' order represents '5' with '2003'
-2001 2003 0
c Var 'max_left_00002_00002_00003' direct represents '5' with '2004'
2001 -2003 2004 0
-2004 2003 0
-2004 -2001 0
c Var 'max_left_00002_00002_00003' order represents '6' with '2005'
-2003 2005 0
c Var 'max_left_00002_00002_00003' direct represents '6' with '2006'
2003 -2005 2006 0
-2006 2005 0
-2006 -2003 0
c Var 'max_left_00002_00002_00003' order represents '7' with '2007'
-2005 2007 0
c Var 'max_left_00002_00002_00003' direct represents '7' with '2008'
2005 -2007 2008 0
-2008 2007 0
-2008 -2005 0
c Var 'max_left_00002_00002_00003' order represents '8' with '2009'
-2007 2009 0
c Var 'max_left_00002_00002_00003' direct represents '8' with '2010'
2007 -2009 2010 0
-2010 2009 0
-2010 -2007 0
c Var 'max_left_00002_00002_00003' direct represents '9' with '-2009'
1996 1998 2000 2002 2004 2006 2008 2010 -2009 0
c Encoding variable: max_left_00002_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00004' order represents '1' with '2011'
c Var 'max_left_00002_00002_00004' direct represents '1' with '2011'
c Var 'max_left_00002_00002_00004' order represents '2' with '2012'
-2011 2012 0
c Var 'max_left_00002_00002_00004' direct represents '2' with '2013'
2011 -2012 2013 0
-2013 2012 0
-2013 -2011 0
c Var 'max_left_00002_00002_00004' order represents '3' with '2014'
-2012 2014 0
c Var 'max_left_00002_00002_00004' direct represents '3' with '2015'
2012 -2014 2015 0
-2015 2014 0
-2015 -2012 0
c Var 'max_left_00002_00002_00004' order represents '4' with '2016'
-2014 2016 0
c Var 'max_left_00002_00002_00004' direct represents '4' with '2017'
2014 -2016 2017 0
-2017 2016 0
-2017 -2014 0
c Var 'max_left_00002_00002_00004' order represents '5' with '2018'
-2016 2018 0
c Var 'max_left_00002_00002_00004' direct represents '5' with '2019'
2016 -2018 2019 0
-2019 2018 0
-2019 -2016 0
c Var 'max_left_00002_00002_00004' order represents '6' with '2020'
-2018 2020 0
c Var 'max_left_00002_00002_00004' direct represents '6' with '2021'
2018 -2020 2021 0
-2021 2020 0
-2021 -2018 0
c Var 'max_left_00002_00002_00004' order represents '7' with '2022'
-2020 2022 0
c Var 'max_left_00002_00002_00004' direct represents '7' with '2023'
2020 -2022 2023 0
-2023 2022 0
-2023 -2020 0
c Var 'max_left_00002_00002_00004' order represents '8' with '2024'
-2022 2024 0
c Var 'max_left_00002_00002_00004' direct represents '8' with '2025'
2022 -2024 2025 0
-2025 2024 0
-2025 -2022 0
c Var 'max_left_00002_00002_00004' direct represents '9' with '-2024'
2011 2013 2015 2017 2019 2021 2023 2025 -2024 0
c Encoding variable: max_left_00002_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00005' order represents '1' with '2026'
c Var 'max_left_00002_00002_00005' direct represents '1' with '2026'
c Var 'max_left_00002_00002_00005' order represents '2' with '2027'
-2026 2027 0
c Var 'max_left_00002_00002_00005' direct represents '2' with '2028'
2026 -2027 2028 0
-2028 2027 0
-2028 -2026 0
c Var 'max_left_00002_00002_00005' order represents '3' with '2029'
-2027 2029 0
c Var 'max_left_00002_00002_00005' direct represents '3' with '2030'
2027 -2029 2030 0
-2030 2029 0
-2030 -2027 0
c Var 'max_left_00002_00002_00005' order represents '4' with '2031'
-2029 2031 0
c Var 'max_left_00002_00002_00005' direct represents '4' with '2032'
2029 -2031 2032 0
-2032 2031 0
-2032 -2029 0
c Var 'max_left_00002_00002_00005' order represents '5' with '2033'
-2031 2033 0
c Var 'max_left_00002_00002_00005' direct represents '5' with '2034'
2031 -2033 2034 0
-2034 2033 0
-2034 -2031 0
c Var 'max_left_00002_00002_00005' order represents '6' with '2035'
-2033 2035 0
c Var 'max_left_00002_00002_00005' direct represents '6' with '2036'
2033 -2035 2036 0
-2036 2035 0
-2036 -2033 0
c Var 'max_left_00002_00002_00005' order represents '7' with '2037'
-2035 2037 0
c Var 'max_left_00002_00002_00005' direct represents '7' with '2038'
2035 -2037 2038 0
-2038 2037 0
-2038 -2035 0
c Var 'max_left_00002_00002_00005' order represents '8' with '2039'
-2037 2039 0
c Var 'max_left_00002_00002_00005' direct represents '8' with '2040'
2037 -2039 2040 0
-2040 2039 0
-2040 -2037 0
c Var 'max_left_00002_00002_00005' direct represents '9' with '-2039'
2026 2028 2030 2032 2034 2036 2038 2040 -2039 0
c Encoding variable: max_left_00002_00002_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00002_00006' direct represents '8' with '-2041'
c Var 'max_left_00002_00002_00006' direct represents '9' with '2041'
c Var 'max_left_00002_00002_00006' order represents '9' with '1'
c Var 'max_left_00002_00002_00006' order represents '8' with '-2041'
c Encoding variable: max_left_00002_00002_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00002_00007' direct represents '8' with '-2042'
c Var 'max_left_00002_00002_00007' direct represents '9' with '2042'
c Var 'max_left_00002_00002_00007' order represents '9' with '1'
c Var 'max_left_00002_00002_00007' order represents '8' with '-2042'
c Encoding variable: max_left_00002_00002_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00002_00008' direct represents '8' with '-2043'
c Var 'max_left_00002_00002_00008' direct represents '9' with '2043'
c Var 'max_left_00002_00002_00008' order represents '9' with '1'
c Var 'max_left_00002_00002_00008' order represents '8' with '-2043'
c Encoding variable: max_left_00002_00002_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00002_00009' direct represents '8' with '-2044'
c Var 'max_left_00002_00002_00009' direct represents '9' with '2044'
c Var 'max_left_00002_00002_00009' order represents '9' with '1'
c Var 'max_left_00002_00002_00009' order represents '8' with '-2044'
c Encoding variable: max_left_00002_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00003_00000' direct represents '0' with '2045'
2045 0
c Encoding variable: max_left_00002_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00001' order represents '1' with '2046'
c Var 'max_left_00002_00003_00001' direct represents '1' with '2046'
c Var 'max_left_00002_00003_00001' order represents '2' with '2047'
-2046 2047 0
c Var 'max_left_00002_00003_00001' direct represents '2' with '2048'
2046 -2047 2048 0
-2048 2047 0
-2048 -2046 0
c Var 'max_left_00002_00003_00001' order represents '3' with '2049'
-2047 2049 0
c Var 'max_left_00002_00003_00001' direct represents '3' with '2050'
2047 -2049 2050 0
-2050 2049 0
-2050 -2047 0
c Var 'max_left_00002_00003_00001' order represents '4' with '2051'
-2049 2051 0
c Var 'max_left_00002_00003_00001' direct represents '4' with '2052'
2049 -2051 2052 0
-2052 2051 0
-2052 -2049 0
c Var 'max_left_00002_00003_00001' order represents '5' with '2053'
-2051 2053 0
c Var 'max_left_00002_00003_00001' direct represents '5' with '2054'
2051 -2053 2054 0
-2054 2053 0
-2054 -2051 0
c Var 'max_left_00002_00003_00001' order represents '6' with '2055'
-2053 2055 0
c Var 'max_left_00002_00003_00001' direct represents '6' with '2056'
2053 -2055 2056 0
-2056 2055 0
-2056 -2053 0
c Var 'max_left_00002_00003_00001' order represents '7' with '2057'
-2055 2057 0
c Var 'max_left_00002_00003_00001' direct represents '7' with '2058'
2055 -2057 2058 0
-2058 2057 0
-2058 -2055 0
c Var 'max_left_00002_00003_00001' order represents '8' with '2059'
-2057 2059 0
c Var 'max_left_00002_00003_00001' direct represents '8' with '2060'
2057 -2059 2060 0
-2060 2059 0
-2060 -2057 0
c Var 'max_left_00002_00003_00001' direct represents '9' with '-2059'
2046 2048 2050 2052 2054 2056 2058 2060 -2059 0
c Encoding variable: max_left_00002_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00002' order represents '1' with '2061'
c Var 'max_left_00002_00003_00002' direct represents '1' with '2061'
c Var 'max_left_00002_00003_00002' order represents '2' with '2062'
-2061 2062 0
c Var 'max_left_00002_00003_00002' direct represents '2' with '2063'
2061 -2062 2063 0
-2063 2062 0
-2063 -2061 0
c Var 'max_left_00002_00003_00002' order represents '3' with '2064'
-2062 2064 0
c Var 'max_left_00002_00003_00002' direct represents '3' with '2065'
2062 -2064 2065 0
-2065 2064 0
-2065 -2062 0
c Var 'max_left_00002_00003_00002' order represents '4' with '2066'
-2064 2066 0
c Var 'max_left_00002_00003_00002' direct represents '4' with '2067'
2064 -2066 2067 0
-2067 2066 0
-2067 -2064 0
c Var 'max_left_00002_00003_00002' order represents '5' with '2068'
-2066 2068 0
c Var 'max_left_00002_00003_00002' direct represents '5' with '2069'
2066 -2068 2069 0
-2069 2068 0
-2069 -2066 0
c Var 'max_left_00002_00003_00002' order represents '6' with '2070'
-2068 2070 0
c Var 'max_left_00002_00003_00002' direct represents '6' with '2071'
2068 -2070 2071 0
-2071 2070 0
-2071 -2068 0
c Var 'max_left_00002_00003_00002' order represents '7' with '2072'
-2070 2072 0
c Var 'max_left_00002_00003_00002' direct represents '7' with '2073'
2070 -2072 2073 0
-2073 2072 0
-2073 -2070 0
c Var 'max_left_00002_00003_00002' order represents '8' with '2074'
-2072 2074 0
c Var 'max_left_00002_00003_00002' direct represents '8' with '2075'
2072 -2074 2075 0
-2075 2074 0
-2075 -2072 0
c Var 'max_left_00002_00003_00002' direct represents '9' with '-2074'
2061 2063 2065 2067 2069 2071 2073 2075 -2074 0
c Encoding variable: max_left_00002_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00003' order represents '1' with '2076'
c Var 'max_left_00002_00003_00003' direct represents '1' with '2076'
c Var 'max_left_00002_00003_00003' order represents '2' with '2077'
-2076 2077 0
c Var 'max_left_00002_00003_00003' direct represents '2' with '2078'
2076 -2077 2078 0
-2078 2077 0
-2078 -2076 0
c Var 'max_left_00002_00003_00003' order represents '3' with '2079'
-2077 2079 0
c Var 'max_left_00002_00003_00003' direct represents '3' with '2080'
2077 -2079 2080 0
-2080 2079 0
-2080 -2077 0
c Var 'max_left_00002_00003_00003' order represents '4' with '2081'
-2079 2081 0
c Var 'max_left_00002_00003_00003' direct represents '4' with '2082'
2079 -2081 2082 0
-2082 2081 0
-2082 -2079 0
c Var 'max_left_00002_00003_00003' order represents '5' with '2083'
-2081 2083 0
c Var 'max_left_00002_00003_00003' direct represents '5' with '2084'
2081 -2083 2084 0
-2084 2083 0
-2084 -2081 0
c Var 'max_left_00002_00003_00003' order represents '6' with '2085'
-2083 2085 0
c Var 'max_left_00002_00003_00003' direct represents '6' with '2086'
2083 -2085 2086 0
-2086 2085 0
-2086 -2083 0
c Var 'max_left_00002_00003_00003' order represents '7' with '2087'
-2085 2087 0
c Var 'max_left_00002_00003_00003' direct represents '7' with '2088'
2085 -2087 2088 0
-2088 2087 0
-2088 -2085 0
c Var 'max_left_00002_00003_00003' order represents '8' with '2089'
-2087 2089 0
c Var 'max_left_00002_00003_00003' direct represents '8' with '2090'
2087 -2089 2090 0
-2090 2089 0
-2090 -2087 0
c Var 'max_left_00002_00003_00003' direct represents '9' with '-2089'
2076 2078 2080 2082 2084 2086 2088 2090 -2089 0
c Encoding variable: max_left_00002_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00004' order represents '1' with '2091'
c Var 'max_left_00002_00003_00004' direct represents '1' with '2091'
c Var 'max_left_00002_00003_00004' order represents '2' with '2092'
-2091 2092 0
c Var 'max_left_00002_00003_00004' direct represents '2' with '2093'
2091 -2092 2093 0
-2093 2092 0
-2093 -2091 0
c Var 'max_left_00002_00003_00004' order represents '3' with '2094'
-2092 2094 0
c Var 'max_left_00002_00003_00004' direct represents '3' with '2095'
2092 -2094 2095 0
-2095 2094 0
-2095 -2092 0
c Var 'max_left_00002_00003_00004' order represents '4' with '2096'
-2094 2096 0
c Var 'max_left_00002_00003_00004' direct represents '4' with '2097'
2094 -2096 2097 0
-2097 2096 0
-2097 -2094 0
c Var 'max_left_00002_00003_00004' order represents '5' with '2098'
-2096 2098 0
c Var 'max_left_00002_00003_00004' direct represents '5' with '2099'
2096 -2098 2099 0
-2099 2098 0
-2099 -2096 0
c Var 'max_left_00002_00003_00004' order represents '6' with '2100'
-2098 2100 0
c Var 'max_left_00002_00003_00004' direct represents '6' with '2101'
2098 -2100 2101 0
-2101 2100 0
-2101 -2098 0
c Var 'max_left_00002_00003_00004' order represents '7' with '2102'
-2100 2102 0
c Var 'max_left_00002_00003_00004' direct represents '7' with '2103'
2100 -2102 2103 0
-2103 2102 0
-2103 -2100 0
c Var 'max_left_00002_00003_00004' order represents '8' with '2104'
-2102 2104 0
c Var 'max_left_00002_00003_00004' direct represents '8' with '2105'
2102 -2104 2105 0
-2105 2104 0
-2105 -2102 0
c Var 'max_left_00002_00003_00004' direct represents '9' with '-2104'
2091 2093 2095 2097 2099 2101 2103 2105 -2104 0
c Encoding variable: max_left_00002_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00005' order represents '1' with '2106'
c Var 'max_left_00002_00003_00005' direct represents '1' with '2106'
c Var 'max_left_00002_00003_00005' order represents '2' with '2107'
-2106 2107 0
c Var 'max_left_00002_00003_00005' direct represents '2' with '2108'
2106 -2107 2108 0
-2108 2107 0
-2108 -2106 0
c Var 'max_left_00002_00003_00005' order represents '3' with '2109'
-2107 2109 0
c Var 'max_left_00002_00003_00005' direct represents '3' with '2110'
2107 -2109 2110 0
-2110 2109 0
-2110 -2107 0
c Var 'max_left_00002_00003_00005' order represents '4' with '2111'
-2109 2111 0
c Var 'max_left_00002_00003_00005' direct represents '4' with '2112'
2109 -2111 2112 0
-2112 2111 0
-2112 -2109 0
c Var 'max_left_00002_00003_00005' order represents '5' with '2113'
-2111 2113 0
c Var 'max_left_00002_00003_00005' direct represents '5' with '2114'
2111 -2113 2114 0
-2114 2113 0
-2114 -2111 0
c Var 'max_left_00002_00003_00005' order represents '6' with '2115'
-2113 2115 0
c Var 'max_left_00002_00003_00005' direct represents '6' with '2116'
2113 -2115 2116 0
-2116 2115 0
-2116 -2113 0
c Var 'max_left_00002_00003_00005' order represents '7' with '2117'
-2115 2117 0
c Var 'max_left_00002_00003_00005' direct represents '7' with '2118'
2115 -2117 2118 0
-2118 2117 0
-2118 -2115 0
c Var 'max_left_00002_00003_00005' order represents '8' with '2119'
-2117 2119 0
c Var 'max_left_00002_00003_00005' direct represents '8' with '2120'
2117 -2119 2120 0
-2120 2119 0
-2120 -2117 0
c Var 'max_left_00002_00003_00005' direct represents '9' with '-2119'
2106 2108 2110 2112 2114 2116 2118 2120 -2119 0
c Encoding variable: max_left_00002_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00006' order represents '1' with '2121'
c Var 'max_left_00002_00003_00006' direct represents '1' with '2121'
c Var 'max_left_00002_00003_00006' order represents '2' with '2122'
-2121 2122 0
c Var 'max_left_00002_00003_00006' direct represents '2' with '2123'
2121 -2122 2123 0
-2123 2122 0
-2123 -2121 0
c Var 'max_left_00002_00003_00006' order represents '3' with '2124'
-2122 2124 0
c Var 'max_left_00002_00003_00006' direct represents '3' with '2125'
2122 -2124 2125 0
-2125 2124 0
-2125 -2122 0
c Var 'max_left_00002_00003_00006' order represents '4' with '2126'
-2124 2126 0
c Var 'max_left_00002_00003_00006' direct represents '4' with '2127'
2124 -2126 2127 0
-2127 2126 0
-2127 -2124 0
c Var 'max_left_00002_00003_00006' order represents '5' with '2128'
-2126 2128 0
c Var 'max_left_00002_00003_00006' direct represents '5' with '2129'
2126 -2128 2129 0
-2129 2128 0
-2129 -2126 0
c Var 'max_left_00002_00003_00006' order represents '6' with '2130'
-2128 2130 0
c Var 'max_left_00002_00003_00006' direct represents '6' with '2131'
2128 -2130 2131 0
-2131 2130 0
-2131 -2128 0
c Var 'max_left_00002_00003_00006' order represents '7' with '2132'
-2130 2132 0
c Var 'max_left_00002_00003_00006' direct represents '7' with '2133'
2130 -2132 2133 0
-2133 2132 0
-2133 -2130 0
c Var 'max_left_00002_00003_00006' order represents '8' with '2134'
-2132 2134 0
c Var 'max_left_00002_00003_00006' direct represents '8' with '2135'
2132 -2134 2135 0
-2135 2134 0
-2135 -2132 0
c Var 'max_left_00002_00003_00006' direct represents '9' with '-2134'
2121 2123 2125 2127 2129 2131 2133 2135 -2134 0
c Encoding variable: max_left_00002_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00007' order represents '1' with '2136'
c Var 'max_left_00002_00003_00007' direct represents '1' with '2136'
c Var 'max_left_00002_00003_00007' order represents '2' with '2137'
-2136 2137 0
c Var 'max_left_00002_00003_00007' direct represents '2' with '2138'
2136 -2137 2138 0
-2138 2137 0
-2138 -2136 0
c Var 'max_left_00002_00003_00007' order represents '3' with '2139'
-2137 2139 0
c Var 'max_left_00002_00003_00007' direct represents '3' with '2140'
2137 -2139 2140 0
-2140 2139 0
-2140 -2137 0
c Var 'max_left_00002_00003_00007' order represents '4' with '2141'
-2139 2141 0
c Var 'max_left_00002_00003_00007' direct represents '4' with '2142'
2139 -2141 2142 0
-2142 2141 0
-2142 -2139 0
c Var 'max_left_00002_00003_00007' order represents '5' with '2143'
-2141 2143 0
c Var 'max_left_00002_00003_00007' direct represents '5' with '2144'
2141 -2143 2144 0
-2144 2143 0
-2144 -2141 0
c Var 'max_left_00002_00003_00007' order represents '6' with '2145'
-2143 2145 0
c Var 'max_left_00002_00003_00007' direct represents '6' with '2146'
2143 -2145 2146 0
-2146 2145 0
-2146 -2143 0
c Var 'max_left_00002_00003_00007' order represents '7' with '2147'
-2145 2147 0
c Var 'max_left_00002_00003_00007' direct represents '7' with '2148'
2145 -2147 2148 0
-2148 2147 0
-2148 -2145 0
c Var 'max_left_00002_00003_00007' order represents '8' with '2149'
-2147 2149 0
c Var 'max_left_00002_00003_00007' direct represents '8' with '2150'
2147 -2149 2150 0
-2150 2149 0
-2150 -2147 0
c Var 'max_left_00002_00003_00007' direct represents '9' with '-2149'
2136 2138 2140 2142 2144 2146 2148 2150 -2149 0
c Encoding variable: max_left_00002_00003_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00003_00008' direct represents '8' with '-2151'
c Var 'max_left_00002_00003_00008' direct represents '9' with '2151'
c Var 'max_left_00002_00003_00008' order represents '9' with '1'
c Var 'max_left_00002_00003_00008' order represents '8' with '-2151'
c Encoding variable: max_left_00002_00003_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00003_00009' direct represents '8' with '-2152'
c Var 'max_left_00002_00003_00009' direct represents '9' with '2152'
c Var 'max_left_00002_00003_00009' order represents '9' with '1'
c Var 'max_left_00002_00003_00009' order represents '8' with '-2152'
c Encoding variable: max_left_00002_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00004_00000' direct represents '0' with '2153'
2153 0
c Encoding variable: max_left_00002_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00001' order represents '1' with '2154'
c Var 'max_left_00002_00004_00001' direct represents '1' with '2154'
c Var 'max_left_00002_00004_00001' order represents '2' with '2155'
-2154 2155 0
c Var 'max_left_00002_00004_00001' direct represents '2' with '2156'
2154 -2155 2156 0
-2156 2155 0
-2156 -2154 0
c Var 'max_left_00002_00004_00001' order represents '3' with '2157'
-2155 2157 0
c Var 'max_left_00002_00004_00001' direct represents '3' with '2158'
2155 -2157 2158 0
-2158 2157 0
-2158 -2155 0
c Var 'max_left_00002_00004_00001' order represents '4' with '2159'
-2157 2159 0
c Var 'max_left_00002_00004_00001' direct represents '4' with '2160'
2157 -2159 2160 0
-2160 2159 0
-2160 -2157 0
c Var 'max_left_00002_00004_00001' order represents '5' with '2161'
-2159 2161 0
c Var 'max_left_00002_00004_00001' direct represents '5' with '2162'
2159 -2161 2162 0
-2162 2161 0
-2162 -2159 0
c Var 'max_left_00002_00004_00001' order represents '6' with '2163'
-2161 2163 0
c Var 'max_left_00002_00004_00001' direct represents '6' with '2164'
2161 -2163 2164 0
-2164 2163 0
-2164 -2161 0
c Var 'max_left_00002_00004_00001' order represents '7' with '2165'
-2163 2165 0
c Var 'max_left_00002_00004_00001' direct represents '7' with '2166'
2163 -2165 2166 0
-2166 2165 0
-2166 -2163 0
c Var 'max_left_00002_00004_00001' order represents '8' with '2167'
-2165 2167 0
c Var 'max_left_00002_00004_00001' direct represents '8' with '2168'
2165 -2167 2168 0
-2168 2167 0
-2168 -2165 0
c Var 'max_left_00002_00004_00001' direct represents '9' with '-2167'
2154 2156 2158 2160 2162 2164 2166 2168 -2167 0
c Encoding variable: max_left_00002_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00002' order represents '1' with '2169'
c Var 'max_left_00002_00004_00002' direct represents '1' with '2169'
c Var 'max_left_00002_00004_00002' order represents '2' with '2170'
-2169 2170 0
c Var 'max_left_00002_00004_00002' direct represents '2' with '2171'
2169 -2170 2171 0
-2171 2170 0
-2171 -2169 0
c Var 'max_left_00002_00004_00002' order represents '3' with '2172'
-2170 2172 0
c Var 'max_left_00002_00004_00002' direct represents '3' with '2173'
2170 -2172 2173 0
-2173 2172 0
-2173 -2170 0
c Var 'max_left_00002_00004_00002' order represents '4' with '2174'
-2172 2174 0
c Var 'max_left_00002_00004_00002' direct represents '4' with '2175'
2172 -2174 2175 0
-2175 2174 0
-2175 -2172 0
c Var 'max_left_00002_00004_00002' order represents '5' with '2176'
-2174 2176 0
c Var 'max_left_00002_00004_00002' direct represents '5' with '2177'
2174 -2176 2177 0
-2177 2176 0
-2177 -2174 0
c Var 'max_left_00002_00004_00002' order represents '6' with '2178'
-2176 2178 0
c Var 'max_left_00002_00004_00002' direct represents '6' with '2179'
2176 -2178 2179 0
-2179 2178 0
-2179 -2176 0
c Var 'max_left_00002_00004_00002' order represents '7' with '2180'
-2178 2180 0
c Var 'max_left_00002_00004_00002' direct represents '7' with '2181'
2178 -2180 2181 0
-2181 2180 0
-2181 -2178 0
c Var 'max_left_00002_00004_00002' order represents '8' with '2182'
-2180 2182 0
c Var 'max_left_00002_00004_00002' direct represents '8' with '2183'
2180 -2182 2183 0
-2183 2182 0
-2183 -2180 0
c Var 'max_left_00002_00004_00002' direct represents '9' with '-2182'
2169 2171 2173 2175 2177 2179 2181 2183 -2182 0
c Encoding variable: max_left_00002_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00003' order represents '1' with '2184'
c Var 'max_left_00002_00004_00003' direct represents '1' with '2184'
c Var 'max_left_00002_00004_00003' order represents '2' with '2185'
-2184 2185 0
c Var 'max_left_00002_00004_00003' direct represents '2' with '2186'
2184 -2185 2186 0
-2186 2185 0
-2186 -2184 0
c Var 'max_left_00002_00004_00003' order represents '3' with '2187'
-2185 2187 0
c Var 'max_left_00002_00004_00003' direct represents '3' with '2188'
2185 -2187 2188 0
-2188 2187 0
-2188 -2185 0
c Var 'max_left_00002_00004_00003' order represents '4' with '2189'
-2187 2189 0
c Var 'max_left_00002_00004_00003' direct represents '4' with '2190'
2187 -2189 2190 0
-2190 2189 0
-2190 -2187 0
c Var 'max_left_00002_00004_00003' order represents '5' with '2191'
-2189 2191 0
c Var 'max_left_00002_00004_00003' direct represents '5' with '2192'
2189 -2191 2192 0
-2192 2191 0
-2192 -2189 0
c Var 'max_left_00002_00004_00003' order represents '6' with '2193'
-2191 2193 0
c Var 'max_left_00002_00004_00003' direct represents '6' with '2194'
2191 -2193 2194 0
-2194 2193 0
-2194 -2191 0
c Var 'max_left_00002_00004_00003' order represents '7' with '2195'
-2193 2195 0
c Var 'max_left_00002_00004_00003' direct represents '7' with '2196'
2193 -2195 2196 0
-2196 2195 0
-2196 -2193 0
c Var 'max_left_00002_00004_00003' order represents '8' with '2197'
-2195 2197 0
c Var 'max_left_00002_00004_00003' direct represents '8' with '2198'
2195 -2197 2198 0
-2198 2197 0
-2198 -2195 0
c Var 'max_left_00002_00004_00003' direct represents '9' with '-2197'
2184 2186 2188 2190 2192 2194 2196 2198 -2197 0
c Encoding variable: max_left_00002_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00004' order represents '1' with '2199'
c Var 'max_left_00002_00004_00004' direct represents '1' with '2199'
c Var 'max_left_00002_00004_00004' order represents '2' with '2200'
-2199 2200 0
c Var 'max_left_00002_00004_00004' direct represents '2' with '2201'
2199 -2200 2201 0
-2201 2200 0
-2201 -2199 0
c Var 'max_left_00002_00004_00004' order represents '3' with '2202'
-2200 2202 0
c Var 'max_left_00002_00004_00004' direct represents '3' with '2203'
2200 -2202 2203 0
-2203 2202 0
-2203 -2200 0
c Var 'max_left_00002_00004_00004' order represents '4' with '2204'
-2202 2204 0
c Var 'max_left_00002_00004_00004' direct represents '4' with '2205'
2202 -2204 2205 0
-2205 2204 0
-2205 -2202 0
c Var 'max_left_00002_00004_00004' order represents '5' with '2206'
-2204 2206 0
c Var 'max_left_00002_00004_00004' direct represents '5' with '2207'
2204 -2206 2207 0
-2207 2206 0
-2207 -2204 0
c Var 'max_left_00002_00004_00004' order represents '6' with '2208'
-2206 2208 0
c Var 'max_left_00002_00004_00004' direct represents '6' with '2209'
2206 -2208 2209 0
-2209 2208 0
-2209 -2206 0
c Var 'max_left_00002_00004_00004' order represents '7' with '2210'
-2208 2210 0
c Var 'max_left_00002_00004_00004' direct represents '7' with '2211'
2208 -2210 2211 0
-2211 2210 0
-2211 -2208 0
c Var 'max_left_00002_00004_00004' order represents '8' with '2212'
-2210 2212 0
c Var 'max_left_00002_00004_00004' direct represents '8' with '2213'
2210 -2212 2213 0
-2213 2212 0
-2213 -2210 0
c Var 'max_left_00002_00004_00004' direct represents '9' with '-2212'
2199 2201 2203 2205 2207 2209 2211 2213 -2212 0
c Encoding variable: max_left_00002_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00005' order represents '1' with '2214'
c Var 'max_left_00002_00004_00005' direct represents '1' with '2214'
c Var 'max_left_00002_00004_00005' order represents '2' with '2215'
-2214 2215 0
c Var 'max_left_00002_00004_00005' direct represents '2' with '2216'
2214 -2215 2216 0
-2216 2215 0
-2216 -2214 0
c Var 'max_left_00002_00004_00005' order represents '3' with '2217'
-2215 2217 0
c Var 'max_left_00002_00004_00005' direct represents '3' with '2218'
2215 -2217 2218 0
-2218 2217 0
-2218 -2215 0
c Var 'max_left_00002_00004_00005' order represents '4' with '2219'
-2217 2219 0
c Var 'max_left_00002_00004_00005' direct represents '4' with '2220'
2217 -2219 2220 0
-2220 2219 0
-2220 -2217 0
c Var 'max_left_00002_00004_00005' order represents '5' with '2221'
-2219 2221 0
c Var 'max_left_00002_00004_00005' direct represents '5' with '2222'
2219 -2221 2222 0
-2222 2221 0
-2222 -2219 0
c Var 'max_left_00002_00004_00005' order represents '6' with '2223'
-2221 2223 0
c Var 'max_left_00002_00004_00005' direct represents '6' with '2224'
2221 -2223 2224 0
-2224 2223 0
-2224 -2221 0
c Var 'max_left_00002_00004_00005' order represents '7' with '2225'
-2223 2225 0
c Var 'max_left_00002_00004_00005' direct represents '7' with '2226'
2223 -2225 2226 0
-2226 2225 0
-2226 -2223 0
c Var 'max_left_00002_00004_00005' order represents '8' with '2227'
-2225 2227 0
c Var 'max_left_00002_00004_00005' direct represents '8' with '2228'
2225 -2227 2228 0
-2228 2227 0
-2228 -2225 0
c Var 'max_left_00002_00004_00005' direct represents '9' with '-2227'
2214 2216 2218 2220 2222 2224 2226 2228 -2227 0
c Encoding variable: max_left_00002_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00006' order represents '1' with '2229'
c Var 'max_left_00002_00004_00006' direct represents '1' with '2229'
c Var 'max_left_00002_00004_00006' order represents '2' with '2230'
-2229 2230 0
c Var 'max_left_00002_00004_00006' direct represents '2' with '2231'
2229 -2230 2231 0
-2231 2230 0
-2231 -2229 0
c Var 'max_left_00002_00004_00006' order represents '3' with '2232'
-2230 2232 0
c Var 'max_left_00002_00004_00006' direct represents '3' with '2233'
2230 -2232 2233 0
-2233 2232 0
-2233 -2230 0
c Var 'max_left_00002_00004_00006' order represents '4' with '2234'
-2232 2234 0
c Var 'max_left_00002_00004_00006' direct represents '4' with '2235'
2232 -2234 2235 0
-2235 2234 0
-2235 -2232 0
c Var 'max_left_00002_00004_00006' order represents '5' with '2236'
-2234 2236 0
c Var 'max_left_00002_00004_00006' direct represents '5' with '2237'
2234 -2236 2237 0
-2237 2236 0
-2237 -2234 0
c Var 'max_left_00002_00004_00006' order represents '6' with '2238'
-2236 2238 0
c Var 'max_left_00002_00004_00006' direct represents '6' with '2239'
2236 -2238 2239 0
-2239 2238 0
-2239 -2236 0
c Var 'max_left_00002_00004_00006' order represents '7' with '2240'
-2238 2240 0
c Var 'max_left_00002_00004_00006' direct represents '7' with '2241'
2238 -2240 2241 0
-2241 2240 0
-2241 -2238 0
c Var 'max_left_00002_00004_00006' order represents '8' with '2242'
-2240 2242 0
c Var 'max_left_00002_00004_00006' direct represents '8' with '2243'
2240 -2242 2243 0
-2243 2242 0
-2243 -2240 0
c Var 'max_left_00002_00004_00006' direct represents '9' with '-2242'
2229 2231 2233 2235 2237 2239 2241 2243 -2242 0
c Encoding variable: max_left_00002_00004_00007 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00007' order represents '3' with '2244'
c Var 'max_left_00002_00004_00007' direct represents '3' with '2244'
c Var 'max_left_00002_00004_00007' order represents '4' with '2245'
-2244 2245 0
c Var 'max_left_00002_00004_00007' direct represents '4' with '2246'
2244 -2245 2246 0
-2246 2245 0
-2246 -2244 0
c Var 'max_left_00002_00004_00007' order represents '5' with '2247'
-2245 2247 0
c Var 'max_left_00002_00004_00007' direct represents '5' with '2248'
2245 -2247 2248 0
-2248 2247 0
-2248 -2245 0
c Var 'max_left_00002_00004_00007' order represents '6' with '2249'
-2247 2249 0
c Var 'max_left_00002_00004_00007' direct represents '6' with '2250'
2247 -2249 2250 0
-2250 2249 0
-2250 -2247 0
c Var 'max_left_00002_00004_00007' order represents '7' with '2251'
-2249 2251 0
c Var 'max_left_00002_00004_00007' direct represents '7' with '2252'
2249 -2251 2252 0
-2252 2251 0
-2252 -2249 0
c Var 'max_left_00002_00004_00007' order represents '8' with '2253'
-2251 2253 0
c Var 'max_left_00002_00004_00007' direct represents '8' with '2254'
2251 -2253 2254 0
-2254 2253 0
-2254 -2251 0
c Var 'max_left_00002_00004_00007' direct represents '9' with '-2253'
2244 2246 2248 2250 2252 2254 -2253 0
c Encoding variable: max_left_00002_00004_00008 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00008' order represents '3' with '2255'
c Var 'max_left_00002_00004_00008' direct represents '3' with '2255'
c Var 'max_left_00002_00004_00008' order represents '4' with '2256'
-2255 2256 0
c Var 'max_left_00002_00004_00008' direct represents '4' with '2257'
2255 -2256 2257 0
-2257 2256 0
-2257 -2255 0
c Var 'max_left_00002_00004_00008' order represents '5' with '2258'
-2256 2258 0
c Var 'max_left_00002_00004_00008' direct represents '5' with '2259'
2256 -2258 2259 0
-2259 2258 0
-2259 -2256 0
c Var 'max_left_00002_00004_00008' order represents '6' with '2260'
-2258 2260 0
c Var 'max_left_00002_00004_00008' direct represents '6' with '2261'
2258 -2260 2261 0
-2261 2260 0
-2261 -2258 0
c Var 'max_left_00002_00004_00008' order represents '7' with '2262'
-2260 2262 0
c Var 'max_left_00002_00004_00008' direct represents '7' with '2263'
2260 -2262 2263 0
-2263 2262 0
-2263 -2260 0
c Var 'max_left_00002_00004_00008' order represents '8' with '2264'
-2262 2264 0
c Var 'max_left_00002_00004_00008' direct represents '8' with '2265'
2262 -2264 2265 0
-2265 2264 0
-2265 -2262 0
c Var 'max_left_00002_00004_00008' direct represents '9' with '-2264'
2255 2257 2259 2261 2263 2265 -2264 0
c Encoding variable: max_left_00002_00004_00009 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00009' order represents '3' with '2266'
c Var 'max_left_00002_00004_00009' direct represents '3' with '2266'
c Var 'max_left_00002_00004_00009' order represents '4' with '2267'
-2266 2267 0
c Var 'max_left_00002_00004_00009' direct represents '4' with '2268'
2266 -2267 2268 0
-2268 2267 0
-2268 -2266 0
c Var 'max_left_00002_00004_00009' order represents '5' with '2269'
-2267 2269 0
c Var 'max_left_00002_00004_00009' direct represents '5' with '2270'
2267 -2269 2270 0
-2270 2269 0
-2270 -2267 0
c Var 'max_left_00002_00004_00009' order represents '6' with '2271'
-2269 2271 0
c Var 'max_left_00002_00004_00009' direct represents '6' with '2272'
2269 -2271 2272 0
-2272 2271 0
-2272 -2269 0
c Var 'max_left_00002_00004_00009' order represents '7' with '2273'
-2271 2273 0
c Var 'max_left_00002_00004_00009' direct represents '7' with '2274'
2271 -2273 2274 0
-2274 2273 0
-2274 -2271 0
c Var 'max_left_00002_00004_00009' order represents '8' with '2275'
-2273 2275 0
c Var 'max_left_00002_00004_00009' direct represents '8' with '2276'
2273 -2275 2276 0
-2276 2275 0
-2276 -2273 0
c Var 'max_left_00002_00004_00009' direct represents '9' with '-2275'
2266 2268 2270 2272 2274 2276 -2275 0
c Encoding variable: max_left_00002_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00005_00000' direct represents '0' with '2277'
2277 0
c Encoding variable: max_left_00002_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00001' order represents '1' with '2278'
c Var 'max_left_00002_00005_00001' direct represents '1' with '2278'
c Var 'max_left_00002_00005_00001' order represents '2' with '2279'
-2278 2279 0
c Var 'max_left_00002_00005_00001' direct represents '2' with '2280'
2278 -2279 2280 0
-2280 2279 0
-2280 -2278 0
c Var 'max_left_00002_00005_00001' order represents '3' with '2281'
-2279 2281 0
c Var 'max_left_00002_00005_00001' direct represents '3' with '2282'
2279 -2281 2282 0
-2282 2281 0
-2282 -2279 0
c Var 'max_left_00002_00005_00001' order represents '4' with '2283'
-2281 2283 0
c Var 'max_left_00002_00005_00001' direct represents '4' with '2284'
2281 -2283 2284 0
-2284 2283 0
-2284 -2281 0
c Var 'max_left_00002_00005_00001' order represents '5' with '2285'
-2283 2285 0
c Var 'max_left_00002_00005_00001' direct represents '5' with '2286'
2283 -2285 2286 0
-2286 2285 0
-2286 -2283 0
c Var 'max_left_00002_00005_00001' order represents '6' with '2287'
-2285 2287 0
c Var 'max_left_00002_00005_00001' direct represents '6' with '2288'
2285 -2287 2288 0
-2288 2287 0
-2288 -2285 0
c Var 'max_left_00002_00005_00001' order represents '7' with '2289'
-2287 2289 0
c Var 'max_left_00002_00005_00001' direct represents '7' with '2290'
2287 -2289 2290 0
-2290 2289 0
-2290 -2287 0
c Var 'max_left_00002_00005_00001' order represents '8' with '2291'
-2289 2291 0
c Var 'max_left_00002_00005_00001' direct represents '8' with '2292'
2289 -2291 2292 0
-2292 2291 0
-2292 -2289 0
c Var 'max_left_00002_00005_00001' direct represents '9' with '-2291'
2278 2280 2282 2284 2286 2288 2290 2292 -2291 0
c Encoding variable: max_left_00002_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00002' order represents '1' with '2293'
c Var 'max_left_00002_00005_00002' direct represents '1' with '2293'
c Var 'max_left_00002_00005_00002' order represents '2' with '2294'
-2293 2294 0
c Var 'max_left_00002_00005_00002' direct represents '2' with '2295'
2293 -2294 2295 0
-2295 2294 0
-2295 -2293 0
c Var 'max_left_00002_00005_00002' order represents '3' with '2296'
-2294 2296 0
c Var 'max_left_00002_00005_00002' direct represents '3' with '2297'
2294 -2296 2297 0
-2297 2296 0
-2297 -2294 0
c Var 'max_left_00002_00005_00002' order represents '4' with '2298'
-2296 2298 0
c Var 'max_left_00002_00005_00002' direct represents '4' with '2299'
2296 -2298 2299 0
-2299 2298 0
-2299 -2296 0
c Var 'max_left_00002_00005_00002' order represents '5' with '2300'
-2298 2300 0
c Var 'max_left_00002_00005_00002' direct represents '5' with '2301'
2298 -2300 2301 0
-2301 2300 0
-2301 -2298 0
c Var 'max_left_00002_00005_00002' order represents '6' with '2302'
-2300 2302 0
c Var 'max_left_00002_00005_00002' direct represents '6' with '2303'
2300 -2302 2303 0
-2303 2302 0
-2303 -2300 0
c Var 'max_left_00002_00005_00002' order represents '7' with '2304'
-2302 2304 0
c Var 'max_left_00002_00005_00002' direct represents '7' with '2305'
2302 -2304 2305 0
-2305 2304 0
-2305 -2302 0
c Var 'max_left_00002_00005_00002' order represents '8' with '2306'
-2304 2306 0
c Var 'max_left_00002_00005_00002' direct represents '8' with '2307'
2304 -2306 2307 0
-2307 2306 0
-2307 -2304 0
c Var 'max_left_00002_00005_00002' direct represents '9' with '-2306'
2293 2295 2297 2299 2301 2303 2305 2307 -2306 0
c Encoding variable: max_left_00002_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00003' order represents '1' with '2308'
c Var 'max_left_00002_00005_00003' direct represents '1' with '2308'
c Var 'max_left_00002_00005_00003' order represents '2' with '2309'
-2308 2309 0
c Var 'max_left_00002_00005_00003' direct represents '2' with '2310'
2308 -2309 2310 0
-2310 2309 0
-2310 -2308 0
c Var 'max_left_00002_00005_00003' order represents '3' with '2311'
-2309 2311 0
c Var 'max_left_00002_00005_00003' direct represents '3' with '2312'
2309 -2311 2312 0
-2312 2311 0
-2312 -2309 0
c Var 'max_left_00002_00005_00003' order represents '4' with '2313'
-2311 2313 0
c Var 'max_left_00002_00005_00003' direct represents '4' with '2314'
2311 -2313 2314 0
-2314 2313 0
-2314 -2311 0
c Var 'max_left_00002_00005_00003' order represents '5' with '2315'
-2313 2315 0
c Var 'max_left_00002_00005_00003' direct represents '5' with '2316'
2313 -2315 2316 0
-2316 2315 0
-2316 -2313 0
c Var 'max_left_00002_00005_00003' order represents '6' with '2317'
-2315 2317 0
c Var 'max_left_00002_00005_00003' direct represents '6' with '2318'
2315 -2317 2318 0
-2318 2317 0
-2318 -2315 0
c Var 'max_left_00002_00005_00003' order represents '7' with '2319'
-2317 2319 0
c Var 'max_left_00002_00005_00003' direct represents '7' with '2320'
2317 -2319 2320 0
-2320 2319 0
-2320 -2317 0
c Var 'max_left_00002_00005_00003' order represents '8' with '2321'
-2319 2321 0
c Var 'max_left_00002_00005_00003' direct represents '8' with '2322'
2319 -2321 2322 0
-2322 2321 0
-2322 -2319 0
c Var 'max_left_00002_00005_00003' direct represents '9' with '-2321'
2308 2310 2312 2314 2316 2318 2320 2322 -2321 0
c Encoding variable: max_left_00002_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00004' order represents '1' with '2323'
c Var 'max_left_00002_00005_00004' direct represents '1' with '2323'
c Var 'max_left_00002_00005_00004' order represents '2' with '2324'
-2323 2324 0
c Var 'max_left_00002_00005_00004' direct represents '2' with '2325'
2323 -2324 2325 0
-2325 2324 0
-2325 -2323 0
c Var 'max_left_00002_00005_00004' order represents '3' with '2326'
-2324 2326 0
c Var 'max_left_00002_00005_00004' direct represents '3' with '2327'
2324 -2326 2327 0
-2327 2326 0
-2327 -2324 0
c Var 'max_left_00002_00005_00004' order represents '4' with '2328'
-2326 2328 0
c Var 'max_left_00002_00005_00004' direct represents '4' with '2329'
2326 -2328 2329 0
-2329 2328 0
-2329 -2326 0
c Var 'max_left_00002_00005_00004' order represents '5' with '2330'
-2328 2330 0
c Var 'max_left_00002_00005_00004' direct represents '5' with '2331'
2328 -2330 2331 0
-2331 2330 0
-2331 -2328 0
c Var 'max_left_00002_00005_00004' order represents '6' with '2332'
-2330 2332 0
c Var 'max_left_00002_00005_00004' direct represents '6' with '2333'
2330 -2332 2333 0
-2333 2332 0
-2333 -2330 0
c Var 'max_left_00002_00005_00004' order represents '7' with '2334'
-2332 2334 0
c Var 'max_left_00002_00005_00004' direct represents '7' with '2335'
2332 -2334 2335 0
-2335 2334 0
-2335 -2332 0
c Var 'max_left_00002_00005_00004' order represents '8' with '2336'
-2334 2336 0
c Var 'max_left_00002_00005_00004' direct represents '8' with '2337'
2334 -2336 2337 0
-2337 2336 0
-2337 -2334 0
c Var 'max_left_00002_00005_00004' direct represents '9' with '-2336'
2323 2325 2327 2329 2331 2333 2335 2337 -2336 0
c Encoding variable: max_left_00002_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00005' order represents '1' with '2338'
c Var 'max_left_00002_00005_00005' direct represents '1' with '2338'
c Var 'max_left_00002_00005_00005' order represents '2' with '2339'
-2338 2339 0
c Var 'max_left_00002_00005_00005' direct represents '2' with '2340'
2338 -2339 2340 0
-2340 2339 0
-2340 -2338 0
c Var 'max_left_00002_00005_00005' order represents '3' with '2341'
-2339 2341 0
c Var 'max_left_00002_00005_00005' direct represents '3' with '2342'
2339 -2341 2342 0
-2342 2341 0
-2342 -2339 0
c Var 'max_left_00002_00005_00005' order represents '4' with '2343'
-2341 2343 0
c Var 'max_left_00002_00005_00005' direct represents '4' with '2344'
2341 -2343 2344 0
-2344 2343 0
-2344 -2341 0
c Var 'max_left_00002_00005_00005' order represents '5' with '2345'
-2343 2345 0
c Var 'max_left_00002_00005_00005' direct represents '5' with '2346'
2343 -2345 2346 0
-2346 2345 0
-2346 -2343 0
c Var 'max_left_00002_00005_00005' order represents '6' with '2347'
-2345 2347 0
c Var 'max_left_00002_00005_00005' direct represents '6' with '2348'
2345 -2347 2348 0
-2348 2347 0
-2348 -2345 0
c Var 'max_left_00002_00005_00005' order represents '7' with '2349'
-2347 2349 0
c Var 'max_left_00002_00005_00005' direct represents '7' with '2350'
2347 -2349 2350 0
-2350 2349 0
-2350 -2347 0
c Var 'max_left_00002_00005_00005' order represents '8' with '2351'
-2349 2351 0
c Var 'max_left_00002_00005_00005' direct represents '8' with '2352'
2349 -2351 2352 0
-2352 2351 0
-2352 -2349 0
c Var 'max_left_00002_00005_00005' direct represents '9' with '-2351'
2338 2340 2342 2344 2346 2348 2350 2352 -2351 0
c Encoding variable: max_left_00002_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00006' order represents '1' with '2353'
c Var 'max_left_00002_00005_00006' direct represents '1' with '2353'
c Var 'max_left_00002_00005_00006' order represents '2' with '2354'
-2353 2354 0
c Var 'max_left_00002_00005_00006' direct represents '2' with '2355'
2353 -2354 2355 0
-2355 2354 0
-2355 -2353 0
c Var 'max_left_00002_00005_00006' order represents '3' with '2356'
-2354 2356 0
c Var 'max_left_00002_00005_00006' direct represents '3' with '2357'
2354 -2356 2357 0
-2357 2356 0
-2357 -2354 0
c Var 'max_left_00002_00005_00006' order represents '4' with '2358'
-2356 2358 0
c Var 'max_left_00002_00005_00006' direct represents '4' with '2359'
2356 -2358 2359 0
-2359 2358 0
-2359 -2356 0
c Var 'max_left_00002_00005_00006' order represents '5' with '2360'
-2358 2360 0
c Var 'max_left_00002_00005_00006' direct represents '5' with '2361'
2358 -2360 2361 0
-2361 2360 0
-2361 -2358 0
c Var 'max_left_00002_00005_00006' order represents '6' with '2362'
-2360 2362 0
c Var 'max_left_00002_00005_00006' direct represents '6' with '2363'
2360 -2362 2363 0
-2363 2362 0
-2363 -2360 0
c Var 'max_left_00002_00005_00006' order represents '7' with '2364'
-2362 2364 0
c Var 'max_left_00002_00005_00006' direct represents '7' with '2365'
2362 -2364 2365 0
-2365 2364 0
-2365 -2362 0
c Var 'max_left_00002_00005_00006' order represents '8' with '2366'
-2364 2366 0
c Var 'max_left_00002_00005_00006' direct represents '8' with '2367'
2364 -2366 2367 0
-2367 2366 0
-2367 -2364 0
c Var 'max_left_00002_00005_00006' direct represents '9' with '-2366'
2353 2355 2357 2359 2361 2363 2365 2367 -2366 0
c Encoding variable: max_left_00002_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00007' order represents '1' with '2368'
c Var 'max_left_00002_00005_00007' direct represents '1' with '2368'
c Var 'max_left_00002_00005_00007' order represents '2' with '2369'
-2368 2369 0
c Var 'max_left_00002_00005_00007' direct represents '2' with '2370'
2368 -2369 2370 0
-2370 2369 0
-2370 -2368 0
c Var 'max_left_00002_00005_00007' order represents '3' with '2371'
-2369 2371 0
c Var 'max_left_00002_00005_00007' direct represents '3' with '2372'
2369 -2371 2372 0
-2372 2371 0
-2372 -2369 0
c Var 'max_left_00002_00005_00007' order represents '4' with '2373'
-2371 2373 0
c Var 'max_left_00002_00005_00007' direct represents '4' with '2374'
2371 -2373 2374 0
-2374 2373 0
-2374 -2371 0
c Var 'max_left_00002_00005_00007' order represents '5' with '2375'
-2373 2375 0
c Var 'max_left_00002_00005_00007' direct represents '5' with '2376'
2373 -2375 2376 0
-2376 2375 0
-2376 -2373 0
c Var 'max_left_00002_00005_00007' order represents '6' with '2377'
-2375 2377 0
c Var 'max_left_00002_00005_00007' direct represents '6' with '2378'
2375 -2377 2378 0
-2378 2377 0
-2378 -2375 0
c Var 'max_left_00002_00005_00007' order represents '7' with '2379'
-2377 2379 0
c Var 'max_left_00002_00005_00007' direct represents '7' with '2380'
2377 -2379 2380 0
-2380 2379 0
-2380 -2377 0
c Var 'max_left_00002_00005_00007' order represents '8' with '2381'
-2379 2381 0
c Var 'max_left_00002_00005_00007' direct represents '8' with '2382'
2379 -2381 2382 0
-2382 2381 0
-2382 -2379 0
c Var 'max_left_00002_00005_00007' direct represents '9' with '-2381'
2368 2370 2372 2374 2376 2378 2380 2382 -2381 0
c Encoding variable: max_left_00002_00005_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00008' order represents '7' with '2383'
c Var 'max_left_00002_00005_00008' direct represents '7' with '2383'
c Var 'max_left_00002_00005_00008' order represents '8' with '2384'
-2383 2384 0
c Var 'max_left_00002_00005_00008' direct represents '8' with '2385'
2383 -2384 2385 0
-2385 2384 0
-2385 -2383 0
c Var 'max_left_00002_00005_00008' direct represents '9' with '-2384'
2383 2385 -2384 0
c Encoding variable: max_left_00002_00005_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00009' order represents '7' with '2386'
c Var 'max_left_00002_00005_00009' direct represents '7' with '2386'
c Var 'max_left_00002_00005_00009' order represents '8' with '2387'
-2386 2387 0
c Var 'max_left_00002_00005_00009' direct represents '8' with '2388'
2386 -2387 2388 0
-2388 2387 0
-2388 -2386 0
c Var 'max_left_00002_00005_00009' direct represents '9' with '-2387'
2386 2388 -2387 0
c Encoding variable: max_left_00002_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00006_00000' direct represents '0' with '2389'
2389 0
c Encoding variable: max_left_00002_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00001' order represents '1' with '2390'
c Var 'max_left_00002_00006_00001' direct represents '1' with '2390'
c Var 'max_left_00002_00006_00001' order represents '2' with '2391'
-2390 2391 0
c Var 'max_left_00002_00006_00001' direct represents '2' with '2392'
2390 -2391 2392 0
-2392 2391 0
-2392 -2390 0
c Var 'max_left_00002_00006_00001' order represents '3' with '2393'
-2391 2393 0
c Var 'max_left_00002_00006_00001' direct represents '3' with '2394'
2391 -2393 2394 0
-2394 2393 0
-2394 -2391 0
c Var 'max_left_00002_00006_00001' order represents '4' with '2395'
-2393 2395 0
c Var 'max_left_00002_00006_00001' direct represents '4' with '2396'
2393 -2395 2396 0
-2396 2395 0
-2396 -2393 0
c Var 'max_left_00002_00006_00001' order represents '5' with '2397'
-2395 2397 0
c Var 'max_left_00002_00006_00001' direct represents '5' with '2398'
2395 -2397 2398 0
-2398 2397 0
-2398 -2395 0
c Var 'max_left_00002_00006_00001' order represents '6' with '2399'
-2397 2399 0
c Var 'max_left_00002_00006_00001' direct represents '6' with '2400'
2397 -2399 2400 0
-2400 2399 0
-2400 -2397 0
c Var 'max_left_00002_00006_00001' order represents '7' with '2401'
-2399 2401 0
c Var 'max_left_00002_00006_00001' direct represents '7' with '2402'
2399 -2401 2402 0
-2402 2401 0
-2402 -2399 0
c Var 'max_left_00002_00006_00001' order represents '8' with '2403'
-2401 2403 0
c Var 'max_left_00002_00006_00001' direct represents '8' with '2404'
2401 -2403 2404 0
-2404 2403 0
-2404 -2401 0
c Var 'max_left_00002_00006_00001' direct represents '9' with '-2403'
2390 2392 2394 2396 2398 2400 2402 2404 -2403 0
c Encoding variable: max_left_00002_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00002' order represents '1' with '2405'
c Var 'max_left_00002_00006_00002' direct represents '1' with '2405'
c Var 'max_left_00002_00006_00002' order represents '2' with '2406'
-2405 2406 0
c Var 'max_left_00002_00006_00002' direct represents '2' with '2407'
2405 -2406 2407 0
-2407 2406 0
-2407 -2405 0
c Var 'max_left_00002_00006_00002' order represents '3' with '2408'
-2406 2408 0
c Var 'max_left_00002_00006_00002' direct represents '3' with '2409'
2406 -2408 2409 0
-2409 2408 0
-2409 -2406 0
c Var 'max_left_00002_00006_00002' order represents '4' with '2410'
-2408 2410 0
c Var 'max_left_00002_00006_00002' direct represents '4' with '2411'
2408 -2410 2411 0
-2411 2410 0
-2411 -2408 0
c Var 'max_left_00002_00006_00002' order represents '5' with '2412'
-2410 2412 0
c Var 'max_left_00002_00006_00002' direct represents '5' with '2413'
2410 -2412 2413 0
-2413 2412 0
-2413 -2410 0
c Var 'max_left_00002_00006_00002' order represents '6' with '2414'
-2412 2414 0
c Var 'max_left_00002_00006_00002' direct represents '6' with '2415'
2412 -2414 2415 0
-2415 2414 0
-2415 -2412 0
c Var 'max_left_00002_00006_00002' order represents '7' with '2416'
-2414 2416 0
c Var 'max_left_00002_00006_00002' direct represents '7' with '2417'
2414 -2416 2417 0
-2417 2416 0
-2417 -2414 0
c Var 'max_left_00002_00006_00002' order represents '8' with '2418'
-2416 2418 0
c Var 'max_left_00002_00006_00002' direct represents '8' with '2419'
2416 -2418 2419 0
-2419 2418 0
-2419 -2416 0
c Var 'max_left_00002_00006_00002' direct represents '9' with '-2418'
2405 2407 2409 2411 2413 2415 2417 2419 -2418 0
c Encoding variable: max_left_00002_00006_00003 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00003' order represents '6' with '2420'
c Var 'max_left_00002_00006_00003' direct represents '6' with '2420'
c Var 'max_left_00002_00006_00003' order represents '7' with '2421'
-2420 2421 0
c Var 'max_left_00002_00006_00003' direct represents '7' with '2422'
2420 -2421 2422 0
-2422 2421 0
-2422 -2420 0
c Var 'max_left_00002_00006_00003' order represents '8' with '2423'
-2421 2423 0
c Var 'max_left_00002_00006_00003' direct represents '8' with '2424'
2421 -2423 2424 0
-2424 2423 0
-2424 -2421 0
c Var 'max_left_00002_00006_00003' direct represents '9' with '-2423'
2420 2422 2424 -2423 0
c Encoding variable: max_left_00002_00006_00004 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00004' order represents '6' with '2425'
c Var 'max_left_00002_00006_00004' direct represents '6' with '2425'
c Var 'max_left_00002_00006_00004' order represents '7' with '2426'
-2425 2426 0
c Var 'max_left_00002_00006_00004' direct represents '7' with '2427'
2425 -2426 2427 0
-2427 2426 0
-2427 -2425 0
c Var 'max_left_00002_00006_00004' order represents '8' with '2428'
-2426 2428 0
c Var 'max_left_00002_00006_00004' direct represents '8' with '2429'
2426 -2428 2429 0
-2429 2428 0
-2429 -2426 0
c Var 'max_left_00002_00006_00004' direct represents '9' with '-2428'
2425 2427 2429 -2428 0
c Encoding variable: max_left_00002_00006_00005 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00005' order represents '6' with '2430'
c Var 'max_left_00002_00006_00005' direct represents '6' with '2430'
c Var 'max_left_00002_00006_00005' order represents '7' with '2431'
-2430 2431 0
c Var 'max_left_00002_00006_00005' direct represents '7' with '2432'
2430 -2431 2432 0
-2432 2431 0
-2432 -2430 0
c Var 'max_left_00002_00006_00005' order represents '8' with '2433'
-2431 2433 0
c Var 'max_left_00002_00006_00005' direct represents '8' with '2434'
2431 -2433 2434 0
-2434 2433 0
-2434 -2431 0
c Var 'max_left_00002_00006_00005' direct represents '9' with '-2433'
2430 2432 2434 -2433 0
c Encoding variable: max_left_00002_00006_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00006' order represents '7' with '2435'
c Var 'max_left_00002_00006_00006' direct represents '7' with '2435'
c Var 'max_left_00002_00006_00006' order represents '8' with '2436'
-2435 2436 0
c Var 'max_left_00002_00006_00006' direct represents '8' with '2437'
2435 -2436 2437 0
-2437 2436 0
-2437 -2435 0
c Var 'max_left_00002_00006_00006' direct represents '9' with '-2436'
2435 2437 -2436 0
c Encoding variable: max_left_00002_00006_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00007' order represents '7' with '2438'
c Var 'max_left_00002_00006_00007' direct represents '7' with '2438'
c Var 'max_left_00002_00006_00007' order represents '8' with '2439'
-2438 2439 0
c Var 'max_left_00002_00006_00007' direct represents '8' with '2440'
2438 -2439 2440 0
-2440 2439 0
-2440 -2438 0
c Var 'max_left_00002_00006_00007' direct represents '9' with '-2439'
2438 2440 -2439 0
c Encoding variable: max_left_00002_00006_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00008' order represents '7' with '2441'
c Var 'max_left_00002_00006_00008' direct represents '7' with '2441'
c Var 'max_left_00002_00006_00008' order represents '8' with '2442'
-2441 2442 0
c Var 'max_left_00002_00006_00008' direct represents '8' with '2443'
2441 -2442 2443 0
-2443 2442 0
-2443 -2441 0
c Var 'max_left_00002_00006_00008' direct represents '9' with '-2442'
2441 2443 -2442 0
c Encoding variable: max_left_00002_00006_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00009' order represents '7' with '2444'
c Var 'max_left_00002_00006_00009' direct represents '7' with '2444'
c Var 'max_left_00002_00006_00009' order represents '8' with '2445'
-2444 2445 0
c Var 'max_left_00002_00006_00009' direct represents '8' with '2446'
2444 -2445 2446 0
-2446 2445 0
-2446 -2444 0
c Var 'max_left_00002_00006_00009' direct represents '9' with '-2445'
2444 2446 -2445 0
c Encoding variable: max_left_00002_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00007_00000' direct represents '0' with '2447'
2447 0
c Encoding variable: max_left_00002_00007_00001 with domain: int(5) (representing constraint )
c Var 'max_left_00002_00007_00001' direct represents '5' with '2448'
2448 0
c Encoding variable: max_left_00002_00007_00002 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00002' order represents '5' with '2449'
c Var 'max_left_00002_00007_00002' direct represents '5' with '2449'
c Var 'max_left_00002_00007_00002' order represents '6' with '2450'
-2449 2450 0
c Var 'max_left_00002_00007_00002' direct represents '6' with '2451'
2449 -2450 2451 0
-2451 2450 0
-2451 -2449 0
c Var 'max_left_00002_00007_00002' order represents '7' with '2452'
-2450 2452 0
c Var 'max_left_00002_00007_00002' direct represents '7' with '2453'
2450 -2452 2453 0
-2453 2452 0
-2453 -2450 0
c Var 'max_left_00002_00007_00002' order represents '8' with '2454'
-2452 2454 0
c Var 'max_left_00002_00007_00002' direct represents '8' with '2455'
2452 -2454 2455 0
-2455 2454 0
-2455 -2452 0
c Var 'max_left_00002_00007_00002' direct represents '9' with '-2454'
2449 2451 2453 2455 -2454 0
c Encoding variable: max_left_00002_00007_00003 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00003' order represents '5' with '2456'
c Var 'max_left_00002_00007_00003' direct represents '5' with '2456'
c Var 'max_left_00002_00007_00003' order represents '6' with '2457'
-2456 2457 0
c Var 'max_left_00002_00007_00003' direct represents '6' with '2458'
2456 -2457 2458 0
-2458 2457 0
-2458 -2456 0
c Var 'max_left_00002_00007_00003' order represents '7' with '2459'
-2457 2459 0
c Var 'max_left_00002_00007_00003' direct represents '7' with '2460'
2457 -2459 2460 0
-2460 2459 0
-2460 -2457 0
c Var 'max_left_00002_00007_00003' order represents '8' with '2461'
-2459 2461 0
c Var 'max_left_00002_00007_00003' direct represents '8' with '2462'
2459 -2461 2462 0
-2462 2461 0
-2462 -2459 0
c Var 'max_left_00002_00007_00003' direct represents '9' with '-2461'
2456 2458 2460 2462 -2461 0
c Encoding variable: max_left_00002_00007_00004 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00004' order represents '5' with '2463'
c Var 'max_left_00002_00007_00004' direct represents '5' with '2463'
c Var 'max_left_00002_00007_00004' order represents '6' with '2464'
-2463 2464 0
c Var 'max_left_00002_00007_00004' direct represents '6' with '2465'
2463 -2464 2465 0
-2465 2464 0
-2465 -2463 0
c Var 'max_left_00002_00007_00004' order represents '7' with '2466'
-2464 2466 0
c Var 'max_left_00002_00007_00004' direct represents '7' with '2467'
2464 -2466 2467 0
-2467 2466 0
-2467 -2464 0
c Var 'max_left_00002_00007_00004' order represents '8' with '2468'
-2466 2468 0
c Var 'max_left_00002_00007_00004' direct represents '8' with '2469'
2466 -2468 2469 0
-2469 2468 0
-2469 -2466 0
c Var 'max_left_00002_00007_00004' direct represents '9' with '-2468'
2463 2465 2467 2469 -2468 0
c Encoding variable: max_left_00002_00007_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00005' order represents '7' with '2470'
c Var 'max_left_00002_00007_00005' direct represents '7' with '2470'
c Var 'max_left_00002_00007_00005' order represents '8' with '2471'
-2470 2471 0
c Var 'max_left_00002_00007_00005' direct represents '8' with '2472'
2470 -2471 2472 0
-2472 2471 0
-2472 -2470 0
c Var 'max_left_00002_00007_00005' direct represents '9' with '-2471'
2470 2472 -2471 0
c Encoding variable: max_left_00002_00007_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00006' order represents '7' with '2473'
c Var 'max_left_00002_00007_00006' direct represents '7' with '2473'
c Var 'max_left_00002_00007_00006' order represents '8' with '2474'
-2473 2474 0
c Var 'max_left_00002_00007_00006' direct represents '8' with '2475'
2473 -2474 2475 0
-2475 2474 0
-2475 -2473 0
c Var 'max_left_00002_00007_00006' direct represents '9' with '-2474'
2473 2475 -2474 0
c Encoding variable: max_left_00002_00007_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00007' order represents '7' with '2476'
c Var 'max_left_00002_00007_00007' direct represents '7' with '2476'
c Var 'max_left_00002_00007_00007' order represents '8' with '2477'
-2476 2477 0
c Var 'max_left_00002_00007_00007' direct represents '8' with '2478'
2476 -2477 2478 0
-2478 2477 0
-2478 -2476 0
c Var 'max_left_00002_00007_00007' direct represents '9' with '-2477'
2476 2478 -2477 0
c Encoding variable: max_left_00002_00007_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00008' order represents '7' with '2479'
c Var 'max_left_00002_00007_00008' direct represents '7' with '2479'
c Var 'max_left_00002_00007_00008' order represents '8' with '2480'
-2479 2480 0
c Var 'max_left_00002_00007_00008' direct represents '8' with '2481'
2479 -2480 2481 0
-2481 2480 0
-2481 -2479 0
c Var 'max_left_00002_00007_00008' direct represents '9' with '-2480'
2479 2481 -2480 0
c Encoding variable: max_left_00002_00007_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00002_00007_00009' direct represents '8' with '-2482'
c Var 'max_left_00002_00007_00009' direct represents '9' with '2482'
c Var 'max_left_00002_00007_00009' order represents '9' with '1'
c Var 'max_left_00002_00007_00009' order represents '8' with '-2482'
c Encoding variable: max_left_00002_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00008_00000' direct represents '0' with '2483'
2483 0
c Encoding variable: max_left_00002_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00001' order represents '1' with '2484'
c Var 'max_left_00002_00008_00001' direct represents '1' with '2484'
c Var 'max_left_00002_00008_00001' order represents '2' with '2485'
-2484 2485 0
c Var 'max_left_00002_00008_00001' direct represents '2' with '2486'
2484 -2485 2486 0
-2486 2485 0
-2486 -2484 0
c Var 'max_left_00002_00008_00001' order represents '3' with '2487'
-2485 2487 0
c Var 'max_left_00002_00008_00001' direct represents '3' with '2488'
2485 -2487 2488 0
-2488 2487 0
-2488 -2485 0
c Var 'max_left_00002_00008_00001' order represents '4' with '2489'
-2487 2489 0
c Var 'max_left_00002_00008_00001' direct represents '4' with '2490'
2487 -2489 2490 0
-2490 2489 0
-2490 -2487 0
c Var 'max_left_00002_00008_00001' order represents '5' with '2491'
-2489 2491 0
c Var 'max_left_00002_00008_00001' direct represents '5' with '2492'
2489 -2491 2492 0
-2492 2491 0
-2492 -2489 0
c Var 'max_left_00002_00008_00001' order represents '6' with '2493'
-2491 2493 0
c Var 'max_left_00002_00008_00001' direct represents '6' with '2494'
2491 -2493 2494 0
-2494 2493 0
-2494 -2491 0
c Var 'max_left_00002_00008_00001' order represents '7' with '2495'
-2493 2495 0
c Var 'max_left_00002_00008_00001' direct represents '7' with '2496'
2493 -2495 2496 0
-2496 2495 0
-2496 -2493 0
c Var 'max_left_00002_00008_00001' order represents '8' with '2497'
-2495 2497 0
c Var 'max_left_00002_00008_00001' direct represents '8' with '2498'
2495 -2497 2498 0
-2498 2497 0
-2498 -2495 0
c Var 'max_left_00002_00008_00001' direct represents '9' with '-2497'
2484 2486 2488 2490 2492 2494 2496 2498 -2497 0
c Encoding variable: max_left_00002_00008_00002 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00002' order represents '7' with '2499'
c Var 'max_left_00002_00008_00002' direct represents '7' with '2499'
c Var 'max_left_00002_00008_00002' order represents '8' with '2500'
-2499 2500 0
c Var 'max_left_00002_00008_00002' direct represents '8' with '2501'
2499 -2500 2501 0
-2501 2500 0
-2501 -2499 0
c Var 'max_left_00002_00008_00002' direct represents '9' with '-2500'
2499 2501 -2500 0
c Encoding variable: max_left_00002_00008_00003 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00003' order represents '7' with '2502'
c Var 'max_left_00002_00008_00003' direct represents '7' with '2502'
c Var 'max_left_00002_00008_00003' order represents '8' with '2503'
-2502 2503 0
c Var 'max_left_00002_00008_00003' direct represents '8' with '2504'
2502 -2503 2504 0
-2504 2503 0
-2504 -2502 0
c Var 'max_left_00002_00008_00003' direct represents '9' with '-2503'
2502 2504 -2503 0
c Encoding variable: max_left_00002_00008_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00004' order represents '7' with '2505'
c Var 'max_left_00002_00008_00004' direct represents '7' with '2505'
c Var 'max_left_00002_00008_00004' order represents '8' with '2506'
-2505 2506 0
c Var 'max_left_00002_00008_00004' direct represents '8' with '2507'
2505 -2506 2507 0
-2507 2506 0
-2507 -2505 0
c Var 'max_left_00002_00008_00004' direct represents '9' with '-2506'
2505 2507 -2506 0
c Encoding variable: max_left_00002_00008_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00005' order represents '7' with '2508'
c Var 'max_left_00002_00008_00005' direct represents '7' with '2508'
c Var 'max_left_00002_00008_00005' order represents '8' with '2509'
-2508 2509 0
c Var 'max_left_00002_00008_00005' direct represents '8' with '2510'
2508 -2509 2510 0
-2510 2509 0
-2510 -2508 0
c Var 'max_left_00002_00008_00005' direct represents '9' with '-2509'
2508 2510 -2509 0
c Encoding variable: max_left_00002_00008_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00006' order represents '7' with '2511'
c Var 'max_left_00002_00008_00006' direct represents '7' with '2511'
c Var 'max_left_00002_00008_00006' order represents '8' with '2512'
-2511 2512 0
c Var 'max_left_00002_00008_00006' direct represents '8' with '2513'
2511 -2512 2513 0
-2513 2512 0
-2513 -2511 0
c Var 'max_left_00002_00008_00006' direct represents '9' with '-2512'
2511 2513 -2512 0
c Encoding variable: max_left_00002_00008_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00007' order represents '7' with '2514'
c Var 'max_left_00002_00008_00007' direct represents '7' with '2514'
c Var 'max_left_00002_00008_00007' order represents '8' with '2515'
-2514 2515 0
c Var 'max_left_00002_00008_00007' direct represents '8' with '2516'
2514 -2515 2516 0
-2516 2515 0
-2516 -2514 0
c Var 'max_left_00002_00008_00007' direct represents '9' with '-2515'
2514 2516 -2515 0
c Encoding variable: max_left_00002_00008_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00008' order represents '7' with '2517'
c Var 'max_left_00002_00008_00008' direct represents '7' with '2517'
c Var 'max_left_00002_00008_00008' order represents '8' with '2518'
-2517 2518 0
c Var 'max_left_00002_00008_00008' direct represents '8' with '2519'
2517 -2518 2519 0
-2519 2518 0
-2519 -2517 0
c Var 'max_left_00002_00008_00008' direct represents '9' with '-2518'
2517 2519 -2518 0
c Encoding variable: max_left_00002_00008_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00009' order represents '7' with '2520'
c Var 'max_left_00002_00008_00009' direct represents '7' with '2520'
c Var 'max_left_00002_00008_00009' order represents '8' with '2521'
-2520 2521 0
c Var 'max_left_00002_00008_00009' direct represents '8' with '2522'
2520 -2521 2522 0
-2522 2521 0
-2522 -2520 0
c Var 'max_left_00002_00008_00009' direct represents '9' with '-2521'
2520 2522 -2521 0
c Encoding variable: max_left_00002_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00009_00000' direct represents '0' with '2523'
2523 0
c Encoding variable: max_left_00002_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00001' order represents '1' with '2524'
c Var 'max_left_00002_00009_00001' direct represents '1' with '2524'
c Var 'max_left_00002_00009_00001' order represents '2' with '2525'
-2524 2525 0
c Var 'max_left_00002_00009_00001' direct represents '2' with '2526'
2524 -2525 2526 0
-2526 2525 0
-2526 -2524 0
c Var 'max_left_00002_00009_00001' order represents '3' with '2527'
-2525 2527 0
c Var 'max_left_00002_00009_00001' direct represents '3' with '2528'
2525 -2527 2528 0
-2528 2527 0
-2528 -2525 0
c Var 'max_left_00002_00009_00001' order represents '4' with '2529'
-2527 2529 0
c Var 'max_left_00002_00009_00001' direct represents '4' with '2530'
2527 -2529 2530 0
-2530 2529 0
-2530 -2527 0
c Var 'max_left_00002_00009_00001' order represents '5' with '2531'
-2529 2531 0
c Var 'max_left_00002_00009_00001' direct represents '5' with '2532'
2529 -2531 2532 0
-2532 2531 0
-2532 -2529 0
c Var 'max_left_00002_00009_00001' order represents '6' with '2533'
-2531 2533 0
c Var 'max_left_00002_00009_00001' direct represents '6' with '2534'
2531 -2533 2534 0
-2534 2533 0
-2534 -2531 0
c Var 'max_left_00002_00009_00001' order represents '7' with '2535'
-2533 2535 0
c Var 'max_left_00002_00009_00001' direct represents '7' with '2536'
2533 -2535 2536 0
-2536 2535 0
-2536 -2533 0
c Var 'max_left_00002_00009_00001' order represents '8' with '2537'
-2535 2537 0
c Var 'max_left_00002_00009_00001' direct represents '8' with '2538'
2535 -2537 2538 0
-2538 2537 0
-2538 -2535 0
c Var 'max_left_00002_00009_00001' direct represents '9' with '-2537'
2524 2526 2528 2530 2532 2534 2536 2538 -2537 0
c Encoding variable: max_left_00002_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00002' order represents '1' with '2539'
c Var 'max_left_00002_00009_00002' direct represents '1' with '2539'
c Var 'max_left_00002_00009_00002' order represents '2' with '2540'
-2539 2540 0
c Var 'max_left_00002_00009_00002' direct represents '2' with '2541'
2539 -2540 2541 0
-2541 2540 0
-2541 -2539 0
c Var 'max_left_00002_00009_00002' order represents '3' with '2542'
-2540 2542 0
c Var 'max_left_00002_00009_00002' direct represents '3' with '2543'
2540 -2542 2543 0
-2543 2542 0
-2543 -2540 0
c Var 'max_left_00002_00009_00002' order represents '4' with '2544'
-2542 2544 0
c Var 'max_left_00002_00009_00002' direct represents '4' with '2545'
2542 -2544 2545 0
-2545 2544 0
-2545 -2542 0
c Var 'max_left_00002_00009_00002' order represents '5' with '2546'
-2544 2546 0
c Var 'max_left_00002_00009_00002' direct represents '5' with '2547'
2544 -2546 2547 0
-2547 2546 0
-2547 -2544 0
c Var 'max_left_00002_00009_00002' order represents '6' with '2548'
-2546 2548 0
c Var 'max_left_00002_00009_00002' direct represents '6' with '2549'
2546 -2548 2549 0
-2549 2548 0
-2549 -2546 0
c Var 'max_left_00002_00009_00002' order represents '7' with '2550'
-2548 2550 0
c Var 'max_left_00002_00009_00002' direct represents '7' with '2551'
2548 -2550 2551 0
-2551 2550 0
-2551 -2548 0
c Var 'max_left_00002_00009_00002' order represents '8' with '2552'
-2550 2552 0
c Var 'max_left_00002_00009_00002' direct represents '8' with '2553'
2550 -2552 2553 0
-2553 2552 0
-2553 -2550 0
c Var 'max_left_00002_00009_00002' direct represents '9' with '-2552'
2539 2541 2543 2545 2547 2549 2551 2553 -2552 0
c Encoding variable: max_left_00002_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00003' order represents '1' with '2554'
c Var 'max_left_00002_00009_00003' direct represents '1' with '2554'
c Var 'max_left_00002_00009_00003' order represents '2' with '2555'
-2554 2555 0
c Var 'max_left_00002_00009_00003' direct represents '2' with '2556'
2554 -2555 2556 0
-2556 2555 0
-2556 -2554 0
c Var 'max_left_00002_00009_00003' order represents '3' with '2557'
-2555 2557 0
c Var 'max_left_00002_00009_00003' direct represents '3' with '2558'
2555 -2557 2558 0
-2558 2557 0
-2558 -2555 0
c Var 'max_left_00002_00009_00003' order represents '4' with '2559'
-2557 2559 0
c Var 'max_left_00002_00009_00003' direct represents '4' with '2560'
2557 -2559 2560 0
-2560 2559 0
-2560 -2557 0
c Var 'max_left_00002_00009_00003' order represents '5' with '2561'
-2559 2561 0
c Var 'max_left_00002_00009_00003' direct represents '5' with '2562'
2559 -2561 2562 0
-2562 2561 0
-2562 -2559 0
c Var 'max_left_00002_00009_00003' order represents '6' with '2563'
-2561 2563 0
c Var 'max_left_00002_00009_00003' direct represents '6' with '2564'
2561 -2563 2564 0
-2564 2563 0
-2564 -2561 0
c Var 'max_left_00002_00009_00003' order represents '7' with '2565'
-2563 2565 0
c Var 'max_left_00002_00009_00003' direct represents '7' with '2566'
2563 -2565 2566 0
-2566 2565 0
-2566 -2563 0
c Var 'max_left_00002_00009_00003' order represents '8' with '2567'
-2565 2567 0
c Var 'max_left_00002_00009_00003' direct represents '8' with '2568'
2565 -2567 2568 0
-2568 2567 0
-2568 -2565 0
c Var 'max_left_00002_00009_00003' direct represents '9' with '-2567'
2554 2556 2558 2560 2562 2564 2566 2568 -2567 0
c Encoding variable: max_left_00002_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00004' order represents '1' with '2569'
c Var 'max_left_00002_00009_00004' direct represents '1' with '2569'
c Var 'max_left_00002_00009_00004' order represents '2' with '2570'
-2569 2570 0
c Var 'max_left_00002_00009_00004' direct represents '2' with '2571'
2569 -2570 2571 0
-2571 2570 0
-2571 -2569 0
c Var 'max_left_00002_00009_00004' order represents '3' with '2572'
-2570 2572 0
c Var 'max_left_00002_00009_00004' direct represents '3' with '2573'
2570 -2572 2573 0
-2573 2572 0
-2573 -2570 0
c Var 'max_left_00002_00009_00004' order represents '4' with '2574'
-2572 2574 0
c Var 'max_left_00002_00009_00004' direct represents '4' with '2575'
2572 -2574 2575 0
-2575 2574 0
-2575 -2572 0
c Var 'max_left_00002_00009_00004' order represents '5' with '2576'
-2574 2576 0
c Var 'max_left_00002_00009_00004' direct represents '5' with '2577'
2574 -2576 2577 0
-2577 2576 0
-2577 -2574 0
c Var 'max_left_00002_00009_00004' order represents '6' with '2578'
-2576 2578 0
c Var 'max_left_00002_00009_00004' direct represents '6' with '2579'
2576 -2578 2579 0
-2579 2578 0
-2579 -2576 0
c Var 'max_left_00002_00009_00004' order represents '7' with '2580'
-2578 2580 0
c Var 'max_left_00002_00009_00004' direct represents '7' with '2581'
2578 -2580 2581 0
-2581 2580 0
-2581 -2578 0
c Var 'max_left_00002_00009_00004' order represents '8' with '2582'
-2580 2582 0
c Var 'max_left_00002_00009_00004' direct represents '8' with '2583'
2580 -2582 2583 0
-2583 2582 0
-2583 -2580 0
c Var 'max_left_00002_00009_00004' direct represents '9' with '-2582'
2569 2571 2573 2575 2577 2579 2581 2583 -2582 0
c Encoding variable: max_left_00002_00009_00005 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00005' order represents '2' with '2584'
c Var 'max_left_00002_00009_00005' direct represents '2' with '2584'
c Var 'max_left_00002_00009_00005' order represents '3' with '2585'
-2584 2585 0
c Var 'max_left_00002_00009_00005' direct represents '3' with '2586'
2584 -2585 2586 0
-2586 2585 0
-2586 -2584 0
c Var 'max_left_00002_00009_00005' order represents '4' with '2587'
-2585 2587 0
c Var 'max_left_00002_00009_00005' direct represents '4' with '2588'
2585 -2587 2588 0
-2588 2587 0
-2588 -2585 0
c Var 'max_left_00002_00009_00005' order represents '5' with '2589'
-2587 2589 0
c Var 'max_left_00002_00009_00005' direct represents '5' with '2590'
2587 -2589 2590 0
-2590 2589 0
-2590 -2587 0
c Var 'max_left_00002_00009_00005' order represents '6' with '2591'
-2589 2591 0
c Var 'max_left_00002_00009_00005' direct represents '6' with '2592'
2589 -2591 2592 0
-2592 2591 0
-2592 -2589 0
c Var 'max_left_00002_00009_00005' order represents '7' with '2593'
-2591 2593 0
c Var 'max_left_00002_00009_00005' direct represents '7' with '2594'
2591 -2593 2594 0
-2594 2593 0
-2594 -2591 0
c Var 'max_left_00002_00009_00005' order represents '8' with '2595'
-2593 2595 0
c Var 'max_left_00002_00009_00005' direct represents '8' with '2596'
2593 -2595 2596 0
-2596 2595 0
-2596 -2593 0
c Var 'max_left_00002_00009_00005' direct represents '9' with '-2595'
2584 2586 2588 2590 2592 2594 2596 -2595 0
c Encoding variable: max_left_00002_00009_00006 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00006' order represents '2' with '2597'
c Var 'max_left_00002_00009_00006' direct represents '2' with '2597'
c Var 'max_left_00002_00009_00006' order represents '3' with '2598'
-2597 2598 0
c Var 'max_left_00002_00009_00006' direct represents '3' with '2599'
2597 -2598 2599 0
-2599 2598 0
-2599 -2597 0
c Var 'max_left_00002_00009_00006' order represents '4' with '2600'
-2598 2600 0
c Var 'max_left_00002_00009_00006' direct represents '4' with '2601'
2598 -2600 2601 0
-2601 2600 0
-2601 -2598 0
c Var 'max_left_00002_00009_00006' order represents '5' with '2602'
-2600 2602 0
c Var 'max_left_00002_00009_00006' direct represents '5' with '2603'
2600 -2602 2603 0
-2603 2602 0
-2603 -2600 0
c Var 'max_left_00002_00009_00006' order represents '6' with '2604'
-2602 2604 0
c Var 'max_left_00002_00009_00006' direct represents '6' with '2605'
2602 -2604 2605 0
-2605 2604 0
-2605 -2602 0
c Var 'max_left_00002_00009_00006' order represents '7' with '2606'
-2604 2606 0
c Var 'max_left_00002_00009_00006' direct represents '7' with '2607'
2604 -2606 2607 0
-2607 2606 0
-2607 -2604 0
c Var 'max_left_00002_00009_00006' order represents '8' with '2608'
-2606 2608 0
c Var 'max_left_00002_00009_00006' direct represents '8' with '2609'
2606 -2608 2609 0
-2609 2608 0
-2609 -2606 0
c Var 'max_left_00002_00009_00006' direct represents '9' with '-2608'
2597 2599 2601 2603 2605 2607 2609 -2608 0
c Encoding variable: max_left_00002_00009_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00007' order represents '7' with '2610'
c Var 'max_left_00002_00009_00007' direct represents '7' with '2610'
c Var 'max_left_00002_00009_00007' order represents '8' with '2611'
-2610 2611 0
c Var 'max_left_00002_00009_00007' direct represents '8' with '2612'
2610 -2611 2612 0
-2612 2611 0
-2612 -2610 0
c Var 'max_left_00002_00009_00007' direct represents '9' with '-2611'
2610 2612 -2611 0
c Encoding variable: max_left_00002_00009_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00008' order represents '7' with '2613'
c Var 'max_left_00002_00009_00008' direct represents '7' with '2613'
c Var 'max_left_00002_00009_00008' order represents '8' with '2614'
-2613 2614 0
c Var 'max_left_00002_00009_00008' direct represents '8' with '2615'
2613 -2614 2615 0
-2615 2614 0
-2615 -2613 0
c Var 'max_left_00002_00009_00008' direct represents '9' with '-2614'
2613 2615 -2614 0
c Encoding variable: max_left_00002_00009_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00009' order represents '7' with '2616'
c Var 'max_left_00002_00009_00009' direct represents '7' with '2616'
c Var 'max_left_00002_00009_00009' order represents '8' with '2617'
-2616 2617 0
c Var 'max_left_00002_00009_00009' direct represents '8' with '2618'
2616 -2617 2618 0
-2618 2617 0
-2618 -2616 0
c Var 'max_left_00002_00009_00009' direct represents '9' with '-2617'
2616 2618 -2617 0
c Encoding variable: max_left_00003_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00001_00000' direct represents '0' with '2619'
2619 0
c Encoding variable: max_left_00003_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00001' order represents '1' with '2620'
c Var 'max_left_00003_00001_00001' direct represents '1' with '2620'
c Var 'max_left_00003_00001_00001' order represents '2' with '2621'
-2620 2621 0
c Var 'max_left_00003_00001_00001' direct represents '2' with '2622'
2620 -2621 2622 0
-2622 2621 0
-2622 -2620 0
c Var 'max_left_00003_00001_00001' order represents '3' with '2623'
-2621 2623 0
c Var 'max_left_00003_00001_00001' direct represents '3' with '2624'
2621 -2623 2624 0
-2624 2623 0
-2624 -2621 0
c Var 'max_left_00003_00001_00001' order represents '4' with '2625'
-2623 2625 0
c Var 'max_left_00003_00001_00001' direct represents '4' with '2626'
2623 -2625 2626 0
-2626 2625 0
-2626 -2623 0
c Var 'max_left_00003_00001_00001' order represents '5' with '2627'
-2625 2627 0
c Var 'max_left_00003_00001_00001' direct represents '5' with '2628'
2625 -2627 2628 0
-2628 2627 0
-2628 -2625 0
c Var 'max_left_00003_00001_00001' order represents '6' with '2629'
-2627 2629 0
c Var 'max_left_00003_00001_00001' direct represents '6' with '2630'
2627 -2629 2630 0
-2630 2629 0
-2630 -2627 0
c Var 'max_left_00003_00001_00001' order represents '7' with '2631'
-2629 2631 0
c Var 'max_left_00003_00001_00001' direct represents '7' with '2632'
2629 -2631 2632 0
-2632 2631 0
-2632 -2629 0
c Var 'max_left_00003_00001_00001' order represents '8' with '2633'
-2631 2633 0
c Var 'max_left_00003_00001_00001' direct represents '8' with '2634'
2631 -2633 2634 0
-2634 2633 0
-2634 -2631 0
c Var 'max_left_00003_00001_00001' direct represents '9' with '-2633'
2620 2622 2624 2626 2628 2630 2632 2634 -2633 0
c Encoding variable: max_left_00003_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00002' order represents '1' with '2635'
c Var 'max_left_00003_00001_00002' direct represents '1' with '2635'
c Var 'max_left_00003_00001_00002' order represents '2' with '2636'
-2635 2636 0
c Var 'max_left_00003_00001_00002' direct represents '2' with '2637'
2635 -2636 2637 0
-2637 2636 0
-2637 -2635 0
c Var 'max_left_00003_00001_00002' order represents '3' with '2638'
-2636 2638 0
c Var 'max_left_00003_00001_00002' direct represents '3' with '2639'
2636 -2638 2639 0
-2639 2638 0
-2639 -2636 0
c Var 'max_left_00003_00001_00002' order represents '4' with '2640'
-2638 2640 0
c Var 'max_left_00003_00001_00002' direct represents '4' with '2641'
2638 -2640 2641 0
-2641 2640 0
-2641 -2638 0
c Var 'max_left_00003_00001_00002' order represents '5' with '2642'
-2640 2642 0
c Var 'max_left_00003_00001_00002' direct represents '5' with '2643'
2640 -2642 2643 0
-2643 2642 0
-2643 -2640 0
c Var 'max_left_00003_00001_00002' order represents '6' with '2644'
-2642 2644 0
c Var 'max_left_00003_00001_00002' direct represents '6' with '2645'
2642 -2644 2645 0
-2645 2644 0
-2645 -2642 0
c Var 'max_left_00003_00001_00002' order represents '7' with '2646'
-2644 2646 0
c Var 'max_left_00003_00001_00002' direct represents '7' with '2647'
2644 -2646 2647 0
-2647 2646 0
-2647 -2644 0
c Var 'max_left_00003_00001_00002' order represents '8' with '2648'
-2646 2648 0
c Var 'max_left_00003_00001_00002' direct represents '8' with '2649'
2646 -2648 2649 0
-2649 2648 0
-2649 -2646 0
c Var 'max_left_00003_00001_00002' direct represents '9' with '-2648'
2635 2637 2639 2641 2643 2645 2647 2649 -2648 0
c Encoding variable: max_left_00003_00001_00003 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00003' order represents '5' with '2650'
c Var 'max_left_00003_00001_00003' direct represents '5' with '2650'
c Var 'max_left_00003_00001_00003' order represents '6' with '2651'
-2650 2651 0
c Var 'max_left_00003_00001_00003' direct represents '6' with '2652'
2650 -2651 2652 0
-2652 2651 0
-2652 -2650 0
c Var 'max_left_00003_00001_00003' order represents '7' with '2653'
-2651 2653 0
c Var 'max_left_00003_00001_00003' direct represents '7' with '2654'
2651 -2653 2654 0
-2654 2653 0
-2654 -2651 0
c Var 'max_left_00003_00001_00003' order represents '8' with '2655'
-2653 2655 0
c Var 'max_left_00003_00001_00003' direct represents '8' with '2656'
2653 -2655 2656 0
-2656 2655 0
-2656 -2653 0
c Var 'max_left_00003_00001_00003' direct represents '9' with '-2655'
2650 2652 2654 2656 -2655 0
c Encoding variable: max_left_00003_00001_00004 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00004' order represents '5' with '2657'
c Var 'max_left_00003_00001_00004' direct represents '5' with '2657'
c Var 'max_left_00003_00001_00004' order represents '6' with '2658'
-2657 2658 0
c Var 'max_left_00003_00001_00004' direct represents '6' with '2659'
2657 -2658 2659 0
-2659 2658 0
-2659 -2657 0
c Var 'max_left_00003_00001_00004' order represents '7' with '2660'
-2658 2660 0
c Var 'max_left_00003_00001_00004' direct represents '7' with '2661'
2658 -2660 2661 0
-2661 2660 0
-2661 -2658 0
c Var 'max_left_00003_00001_00004' order represents '8' with '2662'
-2660 2662 0
c Var 'max_left_00003_00001_00004' direct represents '8' with '2663'
2660 -2662 2663 0
-2663 2662 0
-2663 -2660 0
c Var 'max_left_00003_00001_00004' direct represents '9' with '-2662'
2657 2659 2661 2663 -2662 0
c Encoding variable: max_left_00003_00001_00005 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00005' order represents '5' with '2664'
c Var 'max_left_00003_00001_00005' direct represents '5' with '2664'
c Var 'max_left_00003_00001_00005' order represents '6' with '2665'
-2664 2665 0
c Var 'max_left_00003_00001_00005' direct represents '6' with '2666'
2664 -2665 2666 0
-2666 2665 0
-2666 -2664 0
c Var 'max_left_00003_00001_00005' order represents '7' with '2667'
-2665 2667 0
c Var 'max_left_00003_00001_00005' direct represents '7' with '2668'
2665 -2667 2668 0
-2668 2667 0
-2668 -2665 0
c Var 'max_left_00003_00001_00005' order represents '8' with '2669'
-2667 2669 0
c Var 'max_left_00003_00001_00005' direct represents '8' with '2670'
2667 -2669 2670 0
-2670 2669 0
-2670 -2667 0
c Var 'max_left_00003_00001_00005' direct represents '9' with '-2669'
2664 2666 2668 2670 -2669 0
c Encoding variable: max_left_00003_00001_00006 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00006' order represents '5' with '2671'
c Var 'max_left_00003_00001_00006' direct represents '5' with '2671'
c Var 'max_left_00003_00001_00006' order represents '6' with '2672'
-2671 2672 0
c Var 'max_left_00003_00001_00006' direct represents '6' with '2673'
2671 -2672 2673 0
-2673 2672 0
-2673 -2671 0
c Var 'max_left_00003_00001_00006' order represents '7' with '2674'
-2672 2674 0
c Var 'max_left_00003_00001_00006' direct represents '7' with '2675'
2672 -2674 2675 0
-2675 2674 0
-2675 -2672 0
c Var 'max_left_00003_00001_00006' order represents '8' with '2676'
-2674 2676 0
c Var 'max_left_00003_00001_00006' direct represents '8' with '2677'
2674 -2676 2677 0
-2677 2676 0
-2677 -2674 0
c Var 'max_left_00003_00001_00006' direct represents '9' with '-2676'
2671 2673 2675 2677 -2676 0
c Encoding variable: max_left_00003_00001_00007 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00007' order represents '5' with '2678'
c Var 'max_left_00003_00001_00007' direct represents '5' with '2678'
c Var 'max_left_00003_00001_00007' order represents '6' with '2679'
-2678 2679 0
c Var 'max_left_00003_00001_00007' direct represents '6' with '2680'
2678 -2679 2680 0
-2680 2679 0
-2680 -2678 0
c Var 'max_left_00003_00001_00007' order represents '7' with '2681'
-2679 2681 0
c Var 'max_left_00003_00001_00007' direct represents '7' with '2682'
2679 -2681 2682 0
-2682 2681 0
-2682 -2679 0
c Var 'max_left_00003_00001_00007' order represents '8' with '2683'
-2681 2683 0
c Var 'max_left_00003_00001_00007' direct represents '8' with '2684'
2681 -2683 2684 0
-2684 2683 0
-2684 -2681 0
c Var 'max_left_00003_00001_00007' direct represents '9' with '-2683'
2678 2680 2682 2684 -2683 0
c Encoding variable: max_left_00003_00001_00008 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00008' order represents '5' with '2685'
c Var 'max_left_00003_00001_00008' direct represents '5' with '2685'
c Var 'max_left_00003_00001_00008' order represents '6' with '2686'
-2685 2686 0
c Var 'max_left_00003_00001_00008' direct represents '6' with '2687'
2685 -2686 2687 0
-2687 2686 0
-2687 -2685 0
c Var 'max_left_00003_00001_00008' order represents '7' with '2688'
-2686 2688 0
c Var 'max_left_00003_00001_00008' direct represents '7' with '2689'
2686 -2688 2689 0
-2689 2688 0
-2689 -2686 0
c Var 'max_left_00003_00001_00008' order represents '8' with '2690'
-2688 2690 0
c Var 'max_left_00003_00001_00008' direct represents '8' with '2691'
2688 -2690 2691 0
-2691 2690 0
-2691 -2688 0
c Var 'max_left_00003_00001_00008' direct represents '9' with '-2690'
2685 2687 2689 2691 -2690 0
c Encoding variable: max_left_00003_00001_00009 with domain: int(5..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00009' order represents '5' with '2692'
c Var 'max_left_00003_00001_00009' direct represents '5' with '2692'
c Var 'max_left_00003_00001_00009' order represents '6' with '2693'
-2692 2693 0
c Var 'max_left_00003_00001_00009' direct represents '6' with '2694'
2692 -2693 2694 0
-2694 2693 0
-2694 -2692 0
c Var 'max_left_00003_00001_00009' order represents '7' with '2695'
-2693 2695 0
c Var 'max_left_00003_00001_00009' direct represents '7' with '2696'
2693 -2695 2696 0
-2696 2695 0
-2696 -2693 0
c Var 'max_left_00003_00001_00009' order represents '8' with '2697'
-2695 2697 0
c Var 'max_left_00003_00001_00009' direct represents '8' with '2698'
2695 -2697 2698 0
-2698 2697 0
-2698 -2695 0
c Var 'max_left_00003_00001_00009' direct represents '9' with '-2697'
2692 2694 2696 2698 -2697 0
c Encoding variable: max_left_00003_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00002_00000' direct represents '0' with '2699'
2699 0
c Encoding variable: max_left_00003_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00001' order represents '1' with '2700'
c Var 'max_left_00003_00002_00001' direct represents '1' with '2700'
c Var 'max_left_00003_00002_00001' order represents '2' with '2701'
-2700 2701 0
c Var 'max_left_00003_00002_00001' direct represents '2' with '2702'
2700 -2701 2702 0
-2702 2701 0
-2702 -2700 0
c Var 'max_left_00003_00002_00001' order represents '3' with '2703'
-2701 2703 0
c Var 'max_left_00003_00002_00001' direct represents '3' with '2704'
2701 -2703 2704 0
-2704 2703 0
-2704 -2701 0
c Var 'max_left_00003_00002_00001' order represents '4' with '2705'
-2703 2705 0
c Var 'max_left_00003_00002_00001' direct represents '4' with '2706'
2703 -2705 2706 0
-2706 2705 0
-2706 -2703 0
c Var 'max_left_00003_00002_00001' order represents '5' with '2707'
-2705 2707 0
c Var 'max_left_00003_00002_00001' direct represents '5' with '2708'
2705 -2707 2708 0
-2708 2707 0
-2708 -2705 0
c Var 'max_left_00003_00002_00001' order represents '6' with '2709'
-2707 2709 0
c Var 'max_left_00003_00002_00001' direct represents '6' with '2710'
2707 -2709 2710 0
-2710 2709 0
-2710 -2707 0
c Var 'max_left_00003_00002_00001' order represents '7' with '2711'
-2709 2711 0
c Var 'max_left_00003_00002_00001' direct represents '7' with '2712'
2709 -2711 2712 0
-2712 2711 0
-2712 -2709 0
c Var 'max_left_00003_00002_00001' order represents '8' with '2713'
-2711 2713 0
c Var 'max_left_00003_00002_00001' direct represents '8' with '2714'
2711 -2713 2714 0
-2714 2713 0
-2714 -2711 0
c Var 'max_left_00003_00002_00001' direct represents '9' with '-2713'
2700 2702 2704 2706 2708 2710 2712 2714 -2713 0
c Encoding variable: max_left_00003_00002_00002 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00002' order represents '7' with '2715'
c Var 'max_left_00003_00002_00002' direct represents '7' with '2715'
c Var 'max_left_00003_00002_00002' order represents '8' with '2716'
-2715 2716 0
c Var 'max_left_00003_00002_00002' direct represents '8' with '2717'
2715 -2716 2717 0
-2717 2716 0
-2717 -2715 0
c Var 'max_left_00003_00002_00002' direct represents '9' with '-2716'
2715 2717 -2716 0
c Encoding variable: max_left_00003_00002_00003 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00003' order represents '7' with '2718'
c Var 'max_left_00003_00002_00003' direct represents '7' with '2718'
c Var 'max_left_00003_00002_00003' order represents '8' with '2719'
-2718 2719 0
c Var 'max_left_00003_00002_00003' direct represents '8' with '2720'
2718 -2719 2720 0
-2720 2719 0
-2720 -2718 0
c Var 'max_left_00003_00002_00003' direct represents '9' with '-2719'
2718 2720 -2719 0
c Encoding variable: max_left_00003_00002_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00004' order represents '7' with '2721'
c Var 'max_left_00003_00002_00004' direct represents '7' with '2721'
c Var 'max_left_00003_00002_00004' order represents '8' with '2722'
-2721 2722 0
c Var 'max_left_00003_00002_00004' direct represents '8' with '2723'
2721 -2722 2723 0
-2723 2722 0
-2723 -2721 0
c Var 'max_left_00003_00002_00004' direct represents '9' with '-2722'
2721 2723 -2722 0
c Encoding variable: max_left_00003_00002_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00005' order represents '7' with '2724'
c Var 'max_left_00003_00002_00005' direct represents '7' with '2724'
c Var 'max_left_00003_00002_00005' order represents '8' with '2725'
-2724 2725 0
c Var 'max_left_00003_00002_00005' direct represents '8' with '2726'
2724 -2725 2726 0
-2726 2725 0
-2726 -2724 0
c Var 'max_left_00003_00002_00005' direct represents '9' with '-2725'
2724 2726 -2725 0
c Encoding variable: max_left_00003_00002_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00006' order represents '7' with '2727'
c Var 'max_left_00003_00002_00006' direct represents '7' with '2727'
c Var 'max_left_00003_00002_00006' order represents '8' with '2728'
-2727 2728 0
c Var 'max_left_00003_00002_00006' direct represents '8' with '2729'
2727 -2728 2729 0
-2729 2728 0
-2729 -2727 0
c Var 'max_left_00003_00002_00006' direct represents '9' with '-2728'
2727 2729 -2728 0
c Encoding variable: max_left_00003_00002_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00007' order represents '7' with '2730'
c Var 'max_left_00003_00002_00007' direct represents '7' with '2730'
c Var 'max_left_00003_00002_00007' order represents '8' with '2731'
-2730 2731 0
c Var 'max_left_00003_00002_00007' direct represents '8' with '2732'
2730 -2731 2732 0
-2732 2731 0
-2732 -2730 0
c Var 'max_left_00003_00002_00007' direct represents '9' with '-2731'
2730 2732 -2731 0
c Encoding variable: max_left_00003_00002_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00008' order represents '7' with '2733'
c Var 'max_left_00003_00002_00008' direct represents '7' with '2733'
c Var 'max_left_00003_00002_00008' order represents '8' with '2734'
-2733 2734 0
c Var 'max_left_00003_00002_00008' direct represents '8' with '2735'
2733 -2734 2735 0
-2735 2734 0
-2735 -2733 0
c Var 'max_left_00003_00002_00008' direct represents '9' with '-2734'
2733 2735 -2734 0
c Encoding variable: max_left_00003_00002_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00009' order represents '7' with '2736'
c Var 'max_left_00003_00002_00009' direct represents '7' with '2736'
c Var 'max_left_00003_00002_00009' order represents '8' with '2737'
-2736 2737 0
c Var 'max_left_00003_00002_00009' direct represents '8' with '2738'
2736 -2737 2738 0
-2738 2737 0
-2738 -2736 0
c Var 'max_left_00003_00002_00009' direct represents '9' with '-2737'
2736 2738 -2737 0
c Encoding variable: max_left_00003_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00003_00000' direct represents '0' with '2739'
2739 0
c Encoding variable: max_left_00003_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00001' order represents '1' with '2740'
c Var 'max_left_00003_00003_00001' direct represents '1' with '2740'
c Var 'max_left_00003_00003_00001' order represents '2' with '2741'
-2740 2741 0
c Var 'max_left_00003_00003_00001' direct represents '2' with '2742'
2740 -2741 2742 0
-2742 2741 0
-2742 -2740 0
c Var 'max_left_00003_00003_00001' order represents '3' with '2743'
-2741 2743 0
c Var 'max_left_00003_00003_00001' direct represents '3' with '2744'
2741 -2743 2744 0
-2744 2743 0
-2744 -2741 0
c Var 'max_left_00003_00003_00001' order represents '4' with '2745'
-2743 2745 0
c Var 'max_left_00003_00003_00001' direct represents '4' with '2746'
2743 -2745 2746 0
-2746 2745 0
-2746 -2743 0
c Var 'max_left_00003_00003_00001' order represents '5' with '2747'
-2745 2747 0
c Var 'max_left_00003_00003_00001' direct represents '5' with '2748'
2745 -2747 2748 0
-2748 2747 0
-2748 -2745 0
c Var 'max_left_00003_00003_00001' order represents '6' with '2749'
-2747 2749 0
c Var 'max_left_00003_00003_00001' direct represents '6' with '2750'
2747 -2749 2750 0
-2750 2749 0
-2750 -2747 0
c Var 'max_left_00003_00003_00001' order represents '7' with '2751'
-2749 2751 0
c Var 'max_left_00003_00003_00001' direct represents '7' with '2752'
2749 -2751 2752 0
-2752 2751 0
-2752 -2749 0
c Var 'max_left_00003_00003_00001' order represents '8' with '2753'
-2751 2753 0
c Var 'max_left_00003_00003_00001' direct represents '8' with '2754'
2751 -2753 2754 0
-2754 2753 0
-2754 -2751 0
c Var 'max_left_00003_00003_00001' direct represents '9' with '-2753'
2740 2742 2744 2746 2748 2750 2752 2754 -2753 0
c Encoding variable: max_left_00003_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00002' order represents '1' with '2755'
c Var 'max_left_00003_00003_00002' direct represents '1' with '2755'
c Var 'max_left_00003_00003_00002' order represents '2' with '2756'
-2755 2756 0
c Var 'max_left_00003_00003_00002' direct represents '2' with '2757'
2755 -2756 2757 0
-2757 2756 0
-2757 -2755 0
c Var 'max_left_00003_00003_00002' order represents '3' with '2758'
-2756 2758 0
c Var 'max_left_00003_00003_00002' direct represents '3' with '2759'
2756 -2758 2759 0
-2759 2758 0
-2759 -2756 0
c Var 'max_left_00003_00003_00002' order represents '4' with '2760'
-2758 2760 0
c Var 'max_left_00003_00003_00002' direct represents '4' with '2761'
2758 -2760 2761 0
-2761 2760 0
-2761 -2758 0
c Var 'max_left_00003_00003_00002' order represents '5' with '2762'
-2760 2762 0
c Var 'max_left_00003_00003_00002' direct represents '5' with '2763'
2760 -2762 2763 0
-2763 2762 0
-2763 -2760 0
c Var 'max_left_00003_00003_00002' order represents '6' with '2764'
-2762 2764 0
c Var 'max_left_00003_00003_00002' direct represents '6' with '2765'
2762 -2764 2765 0
-2765 2764 0
-2765 -2762 0
c Var 'max_left_00003_00003_00002' order represents '7' with '2766'
-2764 2766 0
c Var 'max_left_00003_00003_00002' direct represents '7' with '2767'
2764 -2766 2767 0
-2767 2766 0
-2767 -2764 0
c Var 'max_left_00003_00003_00002' order represents '8' with '2768'
-2766 2768 0
c Var 'max_left_00003_00003_00002' direct represents '8' with '2769'
2766 -2768 2769 0
-2769 2768 0
-2769 -2766 0
c Var 'max_left_00003_00003_00002' direct represents '9' with '-2768'
2755 2757 2759 2761 2763 2765 2767 2769 -2768 0
c Encoding variable: max_left_00003_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00003' order represents '1' with '2770'
c Var 'max_left_00003_00003_00003' direct represents '1' with '2770'
c Var 'max_left_00003_00003_00003' order represents '2' with '2771'
-2770 2771 0
c Var 'max_left_00003_00003_00003' direct represents '2' with '2772'
2770 -2771 2772 0
-2772 2771 0
-2772 -2770 0
c Var 'max_left_00003_00003_00003' order represents '3' with '2773'
-2771 2773 0
c Var 'max_left_00003_00003_00003' direct represents '3' with '2774'
2771 -2773 2774 0
-2774 2773 0
-2774 -2771 0
c Var 'max_left_00003_00003_00003' order represents '4' with '2775'
-2773 2775 0
c Var 'max_left_00003_00003_00003' direct represents '4' with '2776'
2773 -2775 2776 0
-2776 2775 0
-2776 -2773 0
c Var 'max_left_00003_00003_00003' order represents '5' with '2777'
-2775 2777 0
c Var 'max_left_00003_00003_00003' direct represents '5' with '2778'
2775 -2777 2778 0
-2778 2777 0
-2778 -2775 0
c Var 'max_left_00003_00003_00003' order represents '6' with '2779'
-2777 2779 0
c Var 'max_left_00003_00003_00003' direct represents '6' with '2780'
2777 -2779 2780 0
-2780 2779 0
-2780 -2777 0
c Var 'max_left_00003_00003_00003' order represents '7' with '2781'
-2779 2781 0
c Var 'max_left_00003_00003_00003' direct represents '7' with '2782'
2779 -2781 2782 0
-2782 2781 0
-2782 -2779 0
c Var 'max_left_00003_00003_00003' order represents '8' with '2783'
-2781 2783 0
c Var 'max_left_00003_00003_00003' direct represents '8' with '2784'
2781 -2783 2784 0
-2784 2783 0
-2784 -2781 0
c Var 'max_left_00003_00003_00003' direct represents '9' with '-2783'
2770 2772 2774 2776 2778 2780 2782 2784 -2783 0
c Encoding variable: max_left_00003_00003_00004 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00004' order represents '6' with '2785'
c Var 'max_left_00003_00003_00004' direct represents '6' with '2785'
c Var 'max_left_00003_00003_00004' order represents '7' with '2786'
-2785 2786 0
c Var 'max_left_00003_00003_00004' direct represents '7' with '2787'
2785 -2786 2787 0
-2787 2786 0
-2787 -2785 0
c Var 'max_left_00003_00003_00004' order represents '8' with '2788'
-2786 2788 0
c Var 'max_left_00003_00003_00004' direct represents '8' with '2789'
2786 -2788 2789 0
-2789 2788 0
-2789 -2786 0
c Var 'max_left_00003_00003_00004' direct represents '9' with '-2788'
2785 2787 2789 -2788 0
c Encoding variable: max_left_00003_00003_00005 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00005' order represents '6' with '2790'
c Var 'max_left_00003_00003_00005' direct represents '6' with '2790'
c Var 'max_left_00003_00003_00005' order represents '7' with '2791'
-2790 2791 0
c Var 'max_left_00003_00003_00005' direct represents '7' with '2792'
2790 -2791 2792 0
-2792 2791 0
-2792 -2790 0
c Var 'max_left_00003_00003_00005' order represents '8' with '2793'
-2791 2793 0
c Var 'max_left_00003_00003_00005' direct represents '8' with '2794'
2791 -2793 2794 0
-2794 2793 0
-2794 -2791 0
c Var 'max_left_00003_00003_00005' direct represents '9' with '-2793'
2790 2792 2794 -2793 0
c Encoding variable: max_left_00003_00003_00006 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00006' order represents '6' with '2795'
c Var 'max_left_00003_00003_00006' direct represents '6' with '2795'
c Var 'max_left_00003_00003_00006' order represents '7' with '2796'
-2795 2796 0
c Var 'max_left_00003_00003_00006' direct represents '7' with '2797'
2795 -2796 2797 0
-2797 2796 0
-2797 -2795 0
c Var 'max_left_00003_00003_00006' order represents '8' with '2798'
-2796 2798 0
c Var 'max_left_00003_00003_00006' direct represents '8' with '2799'
2796 -2798 2799 0
-2799 2798 0
-2799 -2796 0
c Var 'max_left_00003_00003_00006' direct represents '9' with '-2798'
2795 2797 2799 -2798 0
c Encoding variable: max_left_00003_00003_00007 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00007' order represents '6' with '2800'
c Var 'max_left_00003_00003_00007' direct represents '6' with '2800'
c Var 'max_left_00003_00003_00007' order represents '7' with '2801'
-2800 2801 0
c Var 'max_left_00003_00003_00007' direct represents '7' with '2802'
2800 -2801 2802 0
-2802 2801 0
-2802 -2800 0
c Var 'max_left_00003_00003_00007' order represents '8' with '2803'
-2801 2803 0
c Var 'max_left_00003_00003_00007' direct represents '8' with '2804'
2801 -2803 2804 0
-2804 2803 0
-2804 -2801 0
c Var 'max_left_00003_00003_00007' direct represents '9' with '-2803'
2800 2802 2804 -2803 0
c Encoding variable: max_left_00003_00003_00008 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00008' order represents '6' with '2805'
c Var 'max_left_00003_00003_00008' direct represents '6' with '2805'
c Var 'max_left_00003_00003_00008' order represents '7' with '2806'
-2805 2806 0
c Var 'max_left_00003_00003_00008' direct represents '7' with '2807'
2805 -2806 2807 0
-2807 2806 0
-2807 -2805 0
c Var 'max_left_00003_00003_00008' order represents '8' with '2808'
-2806 2808 0
c Var 'max_left_00003_00003_00008' direct represents '8' with '2809'
2806 -2808 2809 0
-2809 2808 0
-2809 -2806 0
c Var 'max_left_00003_00003_00008' direct represents '9' with '-2808'
2805 2807 2809 -2808 0
c Encoding variable: max_left_00003_00003_00009 with domain: int(6..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00009' order represents '6' with '2810'
c Var 'max_left_00003_00003_00009' direct represents '6' with '2810'
c Var 'max_left_00003_00003_00009' order represents '7' with '2811'
-2810 2811 0
c Var 'max_left_00003_00003_00009' direct represents '7' with '2812'
2810 -2811 2812 0
-2812 2811 0
-2812 -2810 0
c Var 'max_left_00003_00003_00009' order represents '8' with '2813'
-2811 2813 0
c Var 'max_left_00003_00003_00009' direct represents '8' with '2814'
2811 -2813 2814 0
-2814 2813 0
-2814 -2811 0
c Var 'max_left_00003_00003_00009' direct represents '9' with '-2813'
2810 2812 2814 -2813 0
c Encoding variable: max_left_00003_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00004_00000' direct represents '0' with '2815'
2815 0
c Encoding variable: max_left_00003_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00001' order represents '1' with '2816'
c Var 'max_left_00003_00004_00001' direct represents '1' with '2816'
c Var 'max_left_00003_00004_00001' order represents '2' with '2817'
-2816 2817 0
c Var 'max_left_00003_00004_00001' direct represents '2' with '2818'
2816 -2817 2818 0
-2818 2817 0
-2818 -2816 0
c Var 'max_left_00003_00004_00001' order represents '3' with '2819'
-2817 2819 0
c Var 'max_left_00003_00004_00001' direct represents '3' with '2820'
2817 -2819 2820 0
-2820 2819 0
-2820 -2817 0
c Var 'max_left_00003_00004_00001' order represents '4' with '2821'
-2819 2821 0
c Var 'max_left_00003_00004_00001' direct represents '4' with '2822'
2819 -2821 2822 0
-2822 2821 0
-2822 -2819 0
c Var 'max_left_00003_00004_00001' order represents '5' with '2823'
-2821 2823 0
c Var 'max_left_00003_00004_00001' direct represents '5' with '2824'
2821 -2823 2824 0
-2824 2823 0
-2824 -2821 0
c Var 'max_left_00003_00004_00001' order represents '6' with '2825'
-2823 2825 0
c Var 'max_left_00003_00004_00001' direct represents '6' with '2826'
2823 -2825 2826 0
-2826 2825 0
-2826 -2823 0
c Var 'max_left_00003_00004_00001' order represents '7' with '2827'
-2825 2827 0
c Var 'max_left_00003_00004_00001' direct represents '7' with '2828'
2825 -2827 2828 0
-2828 2827 0
-2828 -2825 0
c Var 'max_left_00003_00004_00001' order represents '8' with '2829'
-2827 2829 0
c Var 'max_left_00003_00004_00001' direct represents '8' with '2830'
2827 -2829 2830 0
-2830 2829 0
-2830 -2827 0
c Var 'max_left_00003_00004_00001' direct represents '9' with '-2829'
2816 2818 2820 2822 2824 2826 2828 2830 -2829 0
c Encoding variable: max_left_00003_00004_00002 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00002' order represents '3' with '2831'
c Var 'max_left_00003_00004_00002' direct represents '3' with '2831'
c Var 'max_left_00003_00004_00002' order represents '4' with '2832'
-2831 2832 0
c Var 'max_left_00003_00004_00002' direct represents '4' with '2833'
2831 -2832 2833 0
-2833 2832 0
-2833 -2831 0
c Var 'max_left_00003_00004_00002' order represents '5' with '2834'
-2832 2834 0
c Var 'max_left_00003_00004_00002' direct represents '5' with '2835'
2832 -2834 2835 0
-2835 2834 0
-2835 -2832 0
c Var 'max_left_00003_00004_00002' order represents '6' with '2836'
-2834 2836 0
c Var 'max_left_00003_00004_00002' direct represents '6' with '2837'
2834 -2836 2837 0
-2837 2836 0
-2837 -2834 0
c Var 'max_left_00003_00004_00002' order represents '7' with '2838'
-2836 2838 0
c Var 'max_left_00003_00004_00002' direct represents '7' with '2839'
2836 -2838 2839 0
-2839 2838 0
-2839 -2836 0
c Var 'max_left_00003_00004_00002' order represents '8' with '2840'
-2838 2840 0
c Var 'max_left_00003_00004_00002' direct represents '8' with '2841'
2838 -2840 2841 0
-2841 2840 0
-2841 -2838 0
c Var 'max_left_00003_00004_00002' direct represents '9' with '-2840'
2831 2833 2835 2837 2839 2841 -2840 0
c Encoding variable: max_left_00003_00004_00003 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00003' order represents '3' with '2842'
c Var 'max_left_00003_00004_00003' direct represents '3' with '2842'
c Var 'max_left_00003_00004_00003' order represents '4' with '2843'
-2842 2843 0
c Var 'max_left_00003_00004_00003' direct represents '4' with '2844'
2842 -2843 2844 0
-2844 2843 0
-2844 -2842 0
c Var 'max_left_00003_00004_00003' order represents '5' with '2845'
-2843 2845 0
c Var 'max_left_00003_00004_00003' direct represents '5' with '2846'
2843 -2845 2846 0
-2846 2845 0
-2846 -2843 0
c Var 'max_left_00003_00004_00003' order represents '6' with '2847'
-2845 2847 0
c Var 'max_left_00003_00004_00003' direct represents '6' with '2848'
2845 -2847 2848 0
-2848 2847 0
-2848 -2845 0
c Var 'max_left_00003_00004_00003' order represents '7' with '2849'
-2847 2849 0
c Var 'max_left_00003_00004_00003' direct represents '7' with '2850'
2847 -2849 2850 0
-2850 2849 0
-2850 -2847 0
c Var 'max_left_00003_00004_00003' order represents '8' with '2851'
-2849 2851 0
c Var 'max_left_00003_00004_00003' direct represents '8' with '2852'
2849 -2851 2852 0
-2852 2851 0
-2852 -2849 0
c Var 'max_left_00003_00004_00003' direct represents '9' with '-2851'
2842 2844 2846 2848 2850 2852 -2851 0
c Encoding variable: max_left_00003_00004_00004 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00004' order represents '3' with '2853'
c Var 'max_left_00003_00004_00004' direct represents '3' with '2853'
c Var 'max_left_00003_00004_00004' order represents '4' with '2854'
-2853 2854 0
c Var 'max_left_00003_00004_00004' direct represents '4' with '2855'
2853 -2854 2855 0
-2855 2854 0
-2855 -2853 0
c Var 'max_left_00003_00004_00004' order represents '5' with '2856'
-2854 2856 0
c Var 'max_left_00003_00004_00004' direct represents '5' with '2857'
2854 -2856 2857 0
-2857 2856 0
-2857 -2854 0
c Var 'max_left_00003_00004_00004' order represents '6' with '2858'
-2856 2858 0
c Var 'max_left_00003_00004_00004' direct represents '6' with '2859'
2856 -2858 2859 0
-2859 2858 0
-2859 -2856 0
c Var 'max_left_00003_00004_00004' order represents '7' with '2860'
-2858 2860 0
c Var 'max_left_00003_00004_00004' direct represents '7' with '2861'
2858 -2860 2861 0
-2861 2860 0
-2861 -2858 0
c Var 'max_left_00003_00004_00004' order represents '8' with '2862'
-2860 2862 0
c Var 'max_left_00003_00004_00004' direct represents '8' with '2863'
2860 -2862 2863 0
-2863 2862 0
-2863 -2860 0
c Var 'max_left_00003_00004_00004' direct represents '9' with '-2862'
2853 2855 2857 2859 2861 2863 -2862 0
c Encoding variable: max_left_00003_00004_00005 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00005' order represents '3' with '2864'
c Var 'max_left_00003_00004_00005' direct represents '3' with '2864'
c Var 'max_left_00003_00004_00005' order represents '4' with '2865'
-2864 2865 0
c Var 'max_left_00003_00004_00005' direct represents '4' with '2866'
2864 -2865 2866 0
-2866 2865 0
-2866 -2864 0
c Var 'max_left_00003_00004_00005' order represents '5' with '2867'
-2865 2867 0
c Var 'max_left_00003_00004_00005' direct represents '5' with '2868'
2865 -2867 2868 0
-2868 2867 0
-2868 -2865 0
c Var 'max_left_00003_00004_00005' order represents '6' with '2869'
-2867 2869 0
c Var 'max_left_00003_00004_00005' direct represents '6' with '2870'
2867 -2869 2870 0
-2870 2869 0
-2870 -2867 0
c Var 'max_left_00003_00004_00005' order represents '7' with '2871'
-2869 2871 0
c Var 'max_left_00003_00004_00005' direct represents '7' with '2872'
2869 -2871 2872 0
-2872 2871 0
-2872 -2869 0
c Var 'max_left_00003_00004_00005' order represents '8' with '2873'
-2871 2873 0
c Var 'max_left_00003_00004_00005' direct represents '8' with '2874'
2871 -2873 2874 0
-2874 2873 0
-2874 -2871 0
c Var 'max_left_00003_00004_00005' direct represents '9' with '-2873'
2864 2866 2868 2870 2872 2874 -2873 0
c Encoding variable: max_left_00003_00004_00006 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00006' order represents '3' with '2875'
c Var 'max_left_00003_00004_00006' direct represents '3' with '2875'
c Var 'max_left_00003_00004_00006' order represents '4' with '2876'
-2875 2876 0
c Var 'max_left_00003_00004_00006' direct represents '4' with '2877'
2875 -2876 2877 0
-2877 2876 0
-2877 -2875 0
c Var 'max_left_00003_00004_00006' order represents '5' with '2878'
-2876 2878 0
c Var 'max_left_00003_00004_00006' direct represents '5' with '2879'
2876 -2878 2879 0
-2879 2878 0
-2879 -2876 0
c Var 'max_left_00003_00004_00006' order represents '6' with '2880'
-2878 2880 0
c Var 'max_left_00003_00004_00006' direct represents '6' with '2881'
2878 -2880 2881 0
-2881 2880 0
-2881 -2878 0
c Var 'max_left_00003_00004_00006' order represents '7' with '2882'
-2880 2882 0
c Var 'max_left_00003_00004_00006' direct represents '7' with '2883'
2880 -2882 2883 0
-2883 2882 0
-2883 -2880 0
c Var 'max_left_00003_00004_00006' order represents '8' with '2884'
-2882 2884 0
c Var 'max_left_00003_00004_00006' direct represents '8' with '2885'
2882 -2884 2885 0
-2885 2884 0
-2885 -2882 0
c Var 'max_left_00003_00004_00006' direct represents '9' with '-2884'
2875 2877 2879 2881 2883 2885 -2884 0
c Encoding variable: max_left_00003_00004_00007 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00007' order represents '3' with '2886'
c Var 'max_left_00003_00004_00007' direct represents '3' with '2886'
c Var 'max_left_00003_00004_00007' order represents '4' with '2887'
-2886 2887 0
c Var 'max_left_00003_00004_00007' direct represents '4' with '2888'
2886 -2887 2888 0
-2888 2887 0
-2888 -2886 0
c Var 'max_left_00003_00004_00007' order represents '5' with '2889'
-2887 2889 0
c Var 'max_left_00003_00004_00007' direct represents '5' with '2890'
2887 -2889 2890 0
-2890 2889 0
-2890 -2887 0
c Var 'max_left_00003_00004_00007' order represents '6' with '2891'
-2889 2891 0
c Var 'max_left_00003_00004_00007' direct represents '6' with '2892'
2889 -2891 2892 0
-2892 2891 0
-2892 -2889 0
c Var 'max_left_00003_00004_00007' order represents '7' with '2893'
-2891 2893 0
c Var 'max_left_00003_00004_00007' direct represents '7' with '2894'
2891 -2893 2894 0
-2894 2893 0
-2894 -2891 0
c Var 'max_left_00003_00004_00007' order represents '8' with '2895'
-2893 2895 0
c Var 'max_left_00003_00004_00007' direct represents '8' with '2896'
2893 -2895 2896 0
-2896 2895 0
-2896 -2893 0
c Var 'max_left_00003_00004_00007' direct represents '9' with '-2895'
2886 2888 2890 2892 2894 2896 -2895 0
c Encoding variable: max_left_00003_00004_00008 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00008' order represents '3' with '2897'
c Var 'max_left_00003_00004_00008' direct represents '3' with '2897'
c Var 'max_left_00003_00004_00008' order represents '4' with '2898'
-2897 2898 0
c Var 'max_left_00003_00004_00008' direct represents '4' with '2899'
2897 -2898 2899 0
-2899 2898 0
-2899 -2897 0
c Var 'max_left_00003_00004_00008' order represents '5' with '2900'
-2898 2900 0
c Var 'max_left_00003_00004_00008' direct represents '5' with '2901'
2898 -2900 2901 0
-2901 2900 0
-2901 -2898 0
c Var 'max_left_00003_00004_00008' order represents '6' with '2902'
-2900 2902 0
c Var 'max_left_00003_00004_00008' direct represents '6' with '2903'
2900 -2902 2903 0
-2903 2902 0
-2903 -2900 0
c Var 'max_left_00003_00004_00008' order represents '7' with '2904'
-2902 2904 0
c Var 'max_left_00003_00004_00008' direct represents '7' with '2905'
2902 -2904 2905 0
-2905 2904 0
-2905 -2902 0
c Var 'max_left_00003_00004_00008' order represents '8' with '2906'
-2904 2906 0
c Var 'max_left_00003_00004_00008' direct represents '8' with '2907'
2904 -2906 2907 0
-2907 2906 0
-2907 -2904 0
c Var 'max_left_00003_00004_00008' direct represents '9' with '-2906'
2897 2899 2901 2903 2905 2907 -2906 0
c Encoding variable: max_left_00003_00004_00009 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00009' order represents '3' with '2908'
c Var 'max_left_00003_00004_00009' direct represents '3' with '2908'
c Var 'max_left_00003_00004_00009' order represents '4' with '2909'
-2908 2909 0
c Var 'max_left_00003_00004_00009' direct represents '4' with '2910'
2908 -2909 2910 0
-2910 2909 0
-2910 -2908 0
c Var 'max_left_00003_00004_00009' order represents '5' with '2911'
-2909 2911 0
c Var 'max_left_00003_00004_00009' direct represents '5' with '2912'
2909 -2911 2912 0
-2912 2911 0
-2912 -2909 0
c Var 'max_left_00003_00004_00009' order represents '6' with '2913'
-2911 2913 0
c Var 'max_left_00003_00004_00009' direct represents '6' with '2914'
2911 -2913 2914 0
-2914 2913 0
-2914 -2911 0
c Var 'max_left_00003_00004_00009' order represents '7' with '2915'
-2913 2915 0
c Var 'max_left_00003_00004_00009' direct represents '7' with '2916'
2913 -2915 2916 0
-2916 2915 0
-2916 -2913 0
c Var 'max_left_00003_00004_00009' order represents '8' with '2917'
-2915 2917 0
c Var 'max_left_00003_00004_00009' direct represents '8' with '2918'
2915 -2917 2918 0
-2918 2917 0
-2918 -2915 0
c Var 'max_left_00003_00004_00009' direct represents '9' with '-2917'
2908 2910 2912 2914 2916 2918 -2917 0
c Encoding variable: max_left_00003_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00005_00000' direct represents '0' with '2919'
2919 0
c Encoding variable: max_left_00003_00005_00001 with domain: int(2) (representing constraint )
c Var 'max_left_00003_00005_00001' direct represents '2' with '2920'
2920 0
c Encoding variable: max_left_00003_00005_00002 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00002' order represents '2' with '2921'
c Var 'max_left_00003_00005_00002' direct represents '2' with '2921'
c Var 'max_left_00003_00005_00002' order represents '3' with '2922'
-2921 2922 0
c Var 'max_left_00003_00005_00002' direct represents '3' with '2923'
2921 -2922 2923 0
-2923 2922 0
-2923 -2921 0
c Var 'max_left_00003_00005_00002' order represents '4' with '2924'
-2922 2924 0
c Var 'max_left_00003_00005_00002' direct represents '4' with '2925'
2922 -2924 2925 0
-2925 2924 0
-2925 -2922 0
c Var 'max_left_00003_00005_00002' order represents '5' with '2926'
-2924 2926 0
c Var 'max_left_00003_00005_00002' direct represents '5' with '2927'
2924 -2926 2927 0
-2927 2926 0
-2927 -2924 0
c Var 'max_left_00003_00005_00002' order represents '6' with '2928'
-2926 2928 0
c Var 'max_left_00003_00005_00002' direct represents '6' with '2929'
2926 -2928 2929 0
-2929 2928 0
-2929 -2926 0
c Var 'max_left_00003_00005_00002' order represents '7' with '2930'
-2928 2930 0
c Var 'max_left_00003_00005_00002' direct represents '7' with '2931'
2928 -2930 2931 0
-2931 2930 0
-2931 -2928 0
c Var 'max_left_00003_00005_00002' order represents '8' with '2932'
-2930 2932 0
c Var 'max_left_00003_00005_00002' direct represents '8' with '2933'
2930 -2932 2933 0
-2933 2932 0
-2933 -2930 0
c Var 'max_left_00003_00005_00002' direct represents '9' with '-2932'
2921 2923 2925 2927 2929 2931 2933 -2932 0
c Encoding variable: max_left_00003_00005_00003 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00003' order represents '7' with '2934'
c Var 'max_left_00003_00005_00003' direct represents '7' with '2934'
c Var 'max_left_00003_00005_00003' order represents '8' with '2935'
-2934 2935 0
c Var 'max_left_00003_00005_00003' direct represents '8' with '2936'
2934 -2935 2936 0
-2936 2935 0
-2936 -2934 0
c Var 'max_left_00003_00005_00003' direct represents '9' with '-2935'
2934 2936 -2935 0
c Encoding variable: max_left_00003_00005_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00004' order represents '7' with '2937'
c Var 'max_left_00003_00005_00004' direct represents '7' with '2937'
c Var 'max_left_00003_00005_00004' order represents '8' with '2938'
-2937 2938 0
c Var 'max_left_00003_00005_00004' direct represents '8' with '2939'
2937 -2938 2939 0
-2939 2938 0
-2939 -2937 0
c Var 'max_left_00003_00005_00004' direct represents '9' with '-2938'
2937 2939 -2938 0
c Encoding variable: max_left_00003_00005_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00005' order represents '7' with '2940'
c Var 'max_left_00003_00005_00005' direct represents '7' with '2940'
c Var 'max_left_00003_00005_00005' order represents '8' with '2941'
-2940 2941 0
c Var 'max_left_00003_00005_00005' direct represents '8' with '2942'
2940 -2941 2942 0
-2942 2941 0
-2942 -2940 0
c Var 'max_left_00003_00005_00005' direct represents '9' with '-2941'
2940 2942 -2941 0
c Encoding variable: max_left_00003_00005_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00006' order represents '7' with '2943'
c Var 'max_left_00003_00005_00006' direct represents '7' with '2943'
c Var 'max_left_00003_00005_00006' order represents '8' with '2944'
-2943 2944 0
c Var 'max_left_00003_00005_00006' direct represents '8' with '2945'
2943 -2944 2945 0
-2945 2944 0
-2945 -2943 0
c Var 'max_left_00003_00005_00006' direct represents '9' with '-2944'
2943 2945 -2944 0
c Encoding variable: max_left_00003_00005_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00007' order represents '7' with '2946'
c Var 'max_left_00003_00005_00007' direct represents '7' with '2946'
c Var 'max_left_00003_00005_00007' order represents '8' with '2947'
-2946 2947 0
c Var 'max_left_00003_00005_00007' direct represents '8' with '2948'
2946 -2947 2948 0
-2948 2947 0
-2948 -2946 0
c Var 'max_left_00003_00005_00007' direct represents '9' with '-2947'
2946 2948 -2947 0
c Encoding variable: max_left_00003_00005_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00008' order represents '7' with '2949'
c Var 'max_left_00003_00005_00008' direct represents '7' with '2949'
c Var 'max_left_00003_00005_00008' order represents '8' with '2950'
-2949 2950 0
c Var 'max_left_00003_00005_00008' direct represents '8' with '2951'
2949 -2950 2951 0
-2951 2950 0
-2951 -2949 0
c Var 'max_left_00003_00005_00008' direct represents '9' with '-2950'
2949 2951 -2950 0
c Encoding variable: max_left_00003_00005_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00009' order represents '7' with '2952'
c Var 'max_left_00003_00005_00009' direct represents '7' with '2952'
c Var 'max_left_00003_00005_00009' order represents '8' with '2953'
-2952 2953 0
c Var 'max_left_00003_00005_00009' direct represents '8' with '2954'
2952 -2953 2954 0
-2954 2953 0
-2954 -2952 0
c Var 'max_left_00003_00005_00009' direct represents '9' with '-2953'
2952 2954 -2953 0
c Encoding variable: max_left_00003_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00006_00000' direct represents '0' with '2955'
2955 0
c Encoding variable: max_left_00003_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00001' order represents '1' with '2956'
c Var 'max_left_00003_00006_00001' direct represents '1' with '2956'
c Var 'max_left_00003_00006_00001' order represents '2' with '2957'
-2956 2957 0
c Var 'max_left_00003_00006_00001' direct represents '2' with '2958'
2956 -2957 2958 0
-2958 2957 0
-2958 -2956 0
c Var 'max_left_00003_00006_00001' order represents '3' with '2959'
-2957 2959 0
c Var 'max_left_00003_00006_00001' direct represents '3' with '2960'
2957 -2959 2960 0
-2960 2959 0
-2960 -2957 0
c Var 'max_left_00003_00006_00001' order represents '4' with '2961'
-2959 2961 0
c Var 'max_left_00003_00006_00001' direct represents '4' with '2962'
2959 -2961 2962 0
-2962 2961 0
-2962 -2959 0
c Var 'max_left_00003_00006_00001' order represents '5' with '2963'
-2961 2963 0
c Var 'max_left_00003_00006_00001' direct represents '5' with '2964'
2961 -2963 2964 0
-2964 2963 0
-2964 -2961 0
c Var 'max_left_00003_00006_00001' order represents '6' with '2965'
-2963 2965 0
c Var 'max_left_00003_00006_00001' direct represents '6' with '2966'
2963 -2965 2966 0
-2966 2965 0
-2966 -2963 0
c Var 'max_left_00003_00006_00001' order represents '7' with '2967'
-2965 2967 0
c Var 'max_left_00003_00006_00001' direct represents '7' with '2968'
2965 -2967 2968 0
-2968 2967 0
-2968 -2965 0
c Var 'max_left_00003_00006_00001' order represents '8' with '2969'
-2967 2969 0
c Var 'max_left_00003_00006_00001' direct represents '8' with '2970'
2967 -2969 2970 0
-2970 2969 0
-2970 -2967 0
c Var 'max_left_00003_00006_00001' direct represents '9' with '-2969'
2956 2958 2960 2962 2964 2966 2968 2970 -2969 0
c Encoding variable: max_left_00003_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00002' order represents '1' with '2971'
c Var 'max_left_00003_00006_00002' direct represents '1' with '2971'
c Var 'max_left_00003_00006_00002' order represents '2' with '2972'
-2971 2972 0
c Var 'max_left_00003_00006_00002' direct represents '2' with '2973'
2971 -2972 2973 0
-2973 2972 0
-2973 -2971 0
c Var 'max_left_00003_00006_00002' order represents '3' with '2974'
-2972 2974 0
c Var 'max_left_00003_00006_00002' direct represents '3' with '2975'
2972 -2974 2975 0
-2975 2974 0
-2975 -2972 0
c Var 'max_left_00003_00006_00002' order represents '4' with '2976'
-2974 2976 0
c Var 'max_left_00003_00006_00002' direct represents '4' with '2977'
2974 -2976 2977 0
-2977 2976 0
-2977 -2974 0
c Var 'max_left_00003_00006_00002' order represents '5' with '2978'
-2976 2978 0
c Var 'max_left_00003_00006_00002' direct represents '5' with '2979'
2976 -2978 2979 0
-2979 2978 0
-2979 -2976 0
c Var 'max_left_00003_00006_00002' order represents '6' with '2980'
-2978 2980 0
c Var 'max_left_00003_00006_00002' direct represents '6' with '2981'
2978 -2980 2981 0
-2981 2980 0
-2981 -2978 0
c Var 'max_left_00003_00006_00002' order represents '7' with '2982'
-2980 2982 0
c Var 'max_left_00003_00006_00002' direct represents '7' with '2983'
2980 -2982 2983 0
-2983 2982 0
-2983 -2980 0
c Var 'max_left_00003_00006_00002' order represents '8' with '2984'
-2982 2984 0
c Var 'max_left_00003_00006_00002' direct represents '8' with '2985'
2982 -2984 2985 0
-2985 2984 0
-2985 -2982 0
c Var 'max_left_00003_00006_00002' direct represents '9' with '-2984'
2971 2973 2975 2977 2979 2981 2983 2985 -2984 0
c Encoding variable: max_left_00003_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00003' order represents '1' with '2986'
c Var 'max_left_00003_00006_00003' direct represents '1' with '2986'
c Var 'max_left_00003_00006_00003' order represents '2' with '2987'
-2986 2987 0
c Var 'max_left_00003_00006_00003' direct represents '2' with '2988'
2986 -2987 2988 0
-2988 2987 0
-2988 -2986 0
c Var 'max_left_00003_00006_00003' order represents '3' with '2989'
-2987 2989 0
c Var 'max_left_00003_00006_00003' direct represents '3' with '2990'
2987 -2989 2990 0
-2990 2989 0
-2990 -2987 0
c Var 'max_left_00003_00006_00003' order represents '4' with '2991'
-2989 2991 0
c Var 'max_left_00003_00006_00003' direct represents '4' with '2992'
2989 -2991 2992 0
-2992 2991 0
-2992 -2989 0
c Var 'max_left_00003_00006_00003' order represents '5' with '2993'
-2991 2993 0
c Var 'max_left_00003_00006_00003' direct represents '5' with '2994'
2991 -2993 2994 0
-2994 2993 0
-2994 -2991 0
c Var 'max_left_00003_00006_00003' order represents '6' with '2995'
-2993 2995 0
c Var 'max_left_00003_00006_00003' direct represents '6' with '2996'
2993 -2995 2996 0
-2996 2995 0
-2996 -2993 0
c Var 'max_left_00003_00006_00003' order represents '7' with '2997'
-2995 2997 0
c Var 'max_left_00003_00006_00003' direct represents '7' with '2998'
2995 -2997 2998 0
-2998 2997 0
-2998 -2995 0
c Var 'max_left_00003_00006_00003' order represents '8' with '2999'
-2997 2999 0
c Var 'max_left_00003_00006_00003' direct represents '8' with '3000'
2997 -2999 3000 0
-3000 2999 0
-3000 -2997 0
c Var 'max_left_00003_00006_00003' direct represents '9' with '-2999'
2986 2988 2990 2992 2994 2996 2998 3000 -2999 0
c Encoding variable: max_left_00003_00006_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00004' order represents '7' with '3001'
c Var 'max_left_00003_00006_00004' direct represents '7' with '3001'
c Var 'max_left_00003_00006_00004' order represents '8' with '3002'
-3001 3002 0
c Var 'max_left_00003_00006_00004' direct represents '8' with '3003'
3001 -3002 3003 0
-3003 3002 0
-3003 -3001 0
c Var 'max_left_00003_00006_00004' direct represents '9' with '-3002'
3001 3003 -3002 0
c Encoding variable: max_left_00003_00006_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00005' order represents '7' with '3004'
c Var 'max_left_00003_00006_00005' direct represents '7' with '3004'
c Var 'max_left_00003_00006_00005' order represents '8' with '3005'
-3004 3005 0
c Var 'max_left_00003_00006_00005' direct represents '8' with '3006'
3004 -3005 3006 0
-3006 3005 0
-3006 -3004 0
c Var 'max_left_00003_00006_00005' direct represents '9' with '-3005'
3004 3006 -3005 0
c Encoding variable: max_left_00003_00006_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00006' order represents '7' with '3007'
c Var 'max_left_00003_00006_00006' direct represents '7' with '3007'
c Var 'max_left_00003_00006_00006' order represents '8' with '3008'
-3007 3008 0
c Var 'max_left_00003_00006_00006' direct represents '8' with '3009'
3007 -3008 3009 0
-3009 3008 0
-3009 -3007 0
c Var 'max_left_00003_00006_00006' direct represents '9' with '-3008'
3007 3009 -3008 0
c Encoding variable: max_left_00003_00006_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00007' order represents '7' with '3010'
c Var 'max_left_00003_00006_00007' direct represents '7' with '3010'
c Var 'max_left_00003_00006_00007' order represents '8' with '3011'
-3010 3011 0
c Var 'max_left_00003_00006_00007' direct represents '8' with '3012'
3010 -3011 3012 0
-3012 3011 0
-3012 -3010 0
c Var 'max_left_00003_00006_00007' direct represents '9' with '-3011'
3010 3012 -3011 0
c Encoding variable: max_left_00003_00006_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00006_00008' direct represents '8' with '-3013'
c Var 'max_left_00003_00006_00008' direct represents '9' with '3013'
c Var 'max_left_00003_00006_00008' order represents '9' with '1'
c Var 'max_left_00003_00006_00008' order represents '8' with '-3013'
c Encoding variable: max_left_00003_00006_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00006_00009' direct represents '8' with '-3014'
c Var 'max_left_00003_00006_00009' direct represents '9' with '3014'
c Var 'max_left_00003_00006_00009' order represents '9' with '1'
c Var 'max_left_00003_00006_00009' order represents '8' with '-3014'
c Encoding variable: max_left_00003_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00007_00000' direct represents '0' with '3015'
3015 0
c Encoding variable: max_left_00003_00007_00001 with domain: int(7) (representing constraint )
c Var 'max_left_00003_00007_00001' direct represents '7' with '3016'
3016 0
c Encoding variable: max_left_00003_00007_00002 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00002' order represents '7' with '3017'
c Var 'max_left_00003_00007_00002' direct represents '7' with '3017'
c Var 'max_left_00003_00007_00002' order represents '8' with '3018'
-3017 3018 0
c Var 'max_left_00003_00007_00002' direct represents '8' with '3019'
3017 -3018 3019 0
-3019 3018 0
-3019 -3017 0
c Var 'max_left_00003_00007_00002' direct represents '9' with '-3018'
3017 3019 -3018 0
c Encoding variable: max_left_00003_00007_00003 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00003' order represents '7' with '3020'
c Var 'max_left_00003_00007_00003' direct represents '7' with '3020'
c Var 'max_left_00003_00007_00003' order represents '8' with '3021'
-3020 3021 0
c Var 'max_left_00003_00007_00003' direct represents '8' with '3022'
3020 -3021 3022 0
-3022 3021 0
-3022 -3020 0
c Var 'max_left_00003_00007_00003' direct represents '9' with '-3021'
3020 3022 -3021 0
c Encoding variable: max_left_00003_00007_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00004' order represents '7' with '3023'
c Var 'max_left_00003_00007_00004' direct represents '7' with '3023'
c Var 'max_left_00003_00007_00004' order represents '8' with '3024'
-3023 3024 0
c Var 'max_left_00003_00007_00004' direct represents '8' with '3025'
3023 -3024 3025 0
-3025 3024 0
-3025 -3023 0
c Var 'max_left_00003_00007_00004' direct represents '9' with '-3024'
3023 3025 -3024 0
c Encoding variable: max_left_00003_00007_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00005' order represents '7' with '3026'
c Var 'max_left_00003_00007_00005' direct represents '7' with '3026'
c Var 'max_left_00003_00007_00005' order represents '8' with '3027'
-3026 3027 0
c Var 'max_left_00003_00007_00005' direct represents '8' with '3028'
3026 -3027 3028 0
-3028 3027 0
-3028 -3026 0
c Var 'max_left_00003_00007_00005' direct represents '9' with '-3027'
3026 3028 -3027 0
c Encoding variable: max_left_00003_00007_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00006' order represents '7' with '3029'
c Var 'max_left_00003_00007_00006' direct represents '7' with '3029'
c Var 'max_left_00003_00007_00006' order represents '8' with '3030'
-3029 3030 0
c Var 'max_left_00003_00007_00006' direct represents '8' with '3031'
3029 -3030 3031 0
-3031 3030 0
-3031 -3029 0
c Var 'max_left_00003_00007_00006' direct represents '9' with '-3030'
3029 3031 -3030 0
c Encoding variable: max_left_00003_00007_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00007' order represents '7' with '3032'
c Var 'max_left_00003_00007_00007' direct represents '7' with '3032'
c Var 'max_left_00003_00007_00007' order represents '8' with '3033'
-3032 3033 0
c Var 'max_left_00003_00007_00007' direct represents '8' with '3034'
3032 -3033 3034 0
-3034 3033 0
-3034 -3032 0
c Var 'max_left_00003_00007_00007' direct represents '9' with '-3033'
3032 3034 -3033 0
c Encoding variable: max_left_00003_00007_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00008' order represents '7' with '3035'
c Var 'max_left_00003_00007_00008' direct represents '7' with '3035'
c Var 'max_left_00003_00007_00008' order represents '8' with '3036'
-3035 3036 0
c Var 'max_left_00003_00007_00008' direct represents '8' with '3037'
3035 -3036 3037 0
-3037 3036 0
-3037 -3035 0
c Var 'max_left_00003_00007_00008' direct represents '9' with '-3036'
3035 3037 -3036 0
c Encoding variable: max_left_00003_00007_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00009' order represents '7' with '3038'
c Var 'max_left_00003_00007_00009' direct represents '7' with '3038'
c Var 'max_left_00003_00007_00009' order represents '8' with '3039'
-3038 3039 0
c Var 'max_left_00003_00007_00009' direct represents '8' with '3040'
3038 -3039 3040 0
-3040 3039 0
-3040 -3038 0
c Var 'max_left_00003_00007_00009' direct represents '9' with '-3039'
3038 3040 -3039 0
c Encoding variable: max_left_00003_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00008_00000' direct represents '0' with '3041'
3041 0
c Encoding variable: max_left_00003_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00001' order represents '1' with '3042'
c Var 'max_left_00003_00008_00001' direct represents '1' with '3042'
c Var 'max_left_00003_00008_00001' order represents '2' with '3043'
-3042 3043 0
c Var 'max_left_00003_00008_00001' direct represents '2' with '3044'
3042 -3043 3044 0
-3044 3043 0
-3044 -3042 0
c Var 'max_left_00003_00008_00001' order represents '3' with '3045'
-3043 3045 0
c Var 'max_left_00003_00008_00001' direct represents '3' with '3046'
3043 -3045 3046 0
-3046 3045 0
-3046 -3043 0
c Var 'max_left_00003_00008_00001' order represents '4' with '3047'
-3045 3047 0
c Var 'max_left_00003_00008_00001' direct represents '4' with '3048'
3045 -3047 3048 0
-3048 3047 0
-3048 -3045 0
c Var 'max_left_00003_00008_00001' order represents '5' with '3049'
-3047 3049 0
c Var 'max_left_00003_00008_00001' direct represents '5' with '3050'
3047 -3049 3050 0
-3050 3049 0
-3050 -3047 0
c Var 'max_left_00003_00008_00001' order represents '6' with '3051'
-3049 3051 0
c Var 'max_left_00003_00008_00001' direct represents '6' with '3052'
3049 -3051 3052 0
-3052 3051 0
-3052 -3049 0
c Var 'max_left_00003_00008_00001' order represents '7' with '3053'
-3051 3053 0
c Var 'max_left_00003_00008_00001' direct represents '7' with '3054'
3051 -3053 3054 0
-3054 3053 0
-3054 -3051 0
c Var 'max_left_00003_00008_00001' order represents '8' with '3055'
-3053 3055 0
c Var 'max_left_00003_00008_00001' direct represents '8' with '3056'
3053 -3055 3056 0
-3056 3055 0
-3056 -3053 0
c Var 'max_left_00003_00008_00001' direct represents '9' with '-3055'
3042 3044 3046 3048 3050 3052 3054 3056 -3055 0
c Encoding variable: max_left_00003_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00002' order represents '1' with '3057'
c Var 'max_left_00003_00008_00002' direct represents '1' with '3057'
c Var 'max_left_00003_00008_00002' order represents '2' with '3058'
-3057 3058 0
c Var 'max_left_00003_00008_00002' direct represents '2' with '3059'
3057 -3058 3059 0
-3059 3058 0
-3059 -3057 0
c Var 'max_left_00003_00008_00002' order represents '3' with '3060'
-3058 3060 0
c Var 'max_left_00003_00008_00002' direct represents '3' with '3061'
3058 -3060 3061 0
-3061 3060 0
-3061 -3058 0
c Var 'max_left_00003_00008_00002' order represents '4' with '3062'
-3060 3062 0
c Var 'max_left_00003_00008_00002' direct represents '4' with '3063'
3060 -3062 3063 0
-3063 3062 0
-3063 -3060 0
c Var 'max_left_00003_00008_00002' order represents '5' with '3064'
-3062 3064 0
c Var 'max_left_00003_00008_00002' direct represents '5' with '3065'
3062 -3064 3065 0
-3065 3064 0
-3065 -3062 0
c Var 'max_left_00003_00008_00002' order represents '6' with '3066'
-3064 3066 0
c Var 'max_left_00003_00008_00002' direct represents '6' with '3067'
3064 -3066 3067 0
-3067 3066 0
-3067 -3064 0
c Var 'max_left_00003_00008_00002' order represents '7' with '3068'
-3066 3068 0
c Var 'max_left_00003_00008_00002' direct represents '7' with '3069'
3066 -3068 3069 0
-3069 3068 0
-3069 -3066 0
c Var 'max_left_00003_00008_00002' order represents '8' with '3070'
-3068 3070 0
c Var 'max_left_00003_00008_00002' direct represents '8' with '3071'
3068 -3070 3071 0
-3071 3070 0
-3071 -3068 0
c Var 'max_left_00003_00008_00002' direct represents '9' with '-3070'
3057 3059 3061 3063 3065 3067 3069 3071 -3070 0
c Encoding variable: max_left_00003_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00003' order represents '1' with '3072'
c Var 'max_left_00003_00008_00003' direct represents '1' with '3072'
c Var 'max_left_00003_00008_00003' order represents '2' with '3073'
-3072 3073 0
c Var 'max_left_00003_00008_00003' direct represents '2' with '3074'
3072 -3073 3074 0
-3074 3073 0
-3074 -3072 0
c Var 'max_left_00003_00008_00003' order represents '3' with '3075'
-3073 3075 0
c Var 'max_left_00003_00008_00003' direct represents '3' with '3076'
3073 -3075 3076 0
-3076 3075 0
-3076 -3073 0
c Var 'max_left_00003_00008_00003' order represents '4' with '3077'
-3075 3077 0
c Var 'max_left_00003_00008_00003' direct represents '4' with '3078'
3075 -3077 3078 0
-3078 3077 0
-3078 -3075 0
c Var 'max_left_00003_00008_00003' order represents '5' with '3079'
-3077 3079 0
c Var 'max_left_00003_00008_00003' direct represents '5' with '3080'
3077 -3079 3080 0
-3080 3079 0
-3080 -3077 0
c Var 'max_left_00003_00008_00003' order represents '6' with '3081'
-3079 3081 0
c Var 'max_left_00003_00008_00003' direct represents '6' with '3082'
3079 -3081 3082 0
-3082 3081 0
-3082 -3079 0
c Var 'max_left_00003_00008_00003' order represents '7' with '3083'
-3081 3083 0
c Var 'max_left_00003_00008_00003' direct represents '7' with '3084'
3081 -3083 3084 0
-3084 3083 0
-3084 -3081 0
c Var 'max_left_00003_00008_00003' order represents '8' with '3085'
-3083 3085 0
c Var 'max_left_00003_00008_00003' direct represents '8' with '3086'
3083 -3085 3086 0
-3086 3085 0
-3086 -3083 0
c Var 'max_left_00003_00008_00003' direct represents '9' with '-3085'
3072 3074 3076 3078 3080 3082 3084 3086 -3085 0
c Encoding variable: max_left_00003_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00004' order represents '1' with '3087'
c Var 'max_left_00003_00008_00004' direct represents '1' with '3087'
c Var 'max_left_00003_00008_00004' order represents '2' with '3088'
-3087 3088 0
c Var 'max_left_00003_00008_00004' direct represents '2' with '3089'
3087 -3088 3089 0
-3089 3088 0
-3089 -3087 0
c Var 'max_left_00003_00008_00004' order represents '3' with '3090'
-3088 3090 0
c Var 'max_left_00003_00008_00004' direct represents '3' with '3091'
3088 -3090 3091 0
-3091 3090 0
-3091 -3088 0
c Var 'max_left_00003_00008_00004' order represents '4' with '3092'
-3090 3092 0
c Var 'max_left_00003_00008_00004' direct represents '4' with '3093'
3090 -3092 3093 0
-3093 3092 0
-3093 -3090 0
c Var 'max_left_00003_00008_00004' order represents '5' with '3094'
-3092 3094 0
c Var 'max_left_00003_00008_00004' direct represents '5' with '3095'
3092 -3094 3095 0
-3095 3094 0
-3095 -3092 0
c Var 'max_left_00003_00008_00004' order represents '6' with '3096'
-3094 3096 0
c Var 'max_left_00003_00008_00004' direct represents '6' with '3097'
3094 -3096 3097 0
-3097 3096 0
-3097 -3094 0
c Var 'max_left_00003_00008_00004' order represents '7' with '3098'
-3096 3098 0
c Var 'max_left_00003_00008_00004' direct represents '7' with '3099'
3096 -3098 3099 0
-3099 3098 0
-3099 -3096 0
c Var 'max_left_00003_00008_00004' order represents '8' with '3100'
-3098 3100 0
c Var 'max_left_00003_00008_00004' direct represents '8' with '3101'
3098 -3100 3101 0
-3101 3100 0
-3101 -3098 0
c Var 'max_left_00003_00008_00004' direct represents '9' with '-3100'
3087 3089 3091 3093 3095 3097 3099 3101 -3100 0
c Encoding variable: max_left_00003_00008_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00005' order represents '7' with '3102'
c Var 'max_left_00003_00008_00005' direct represents '7' with '3102'
c Var 'max_left_00003_00008_00005' order represents '8' with '3103'
-3102 3103 0
c Var 'max_left_00003_00008_00005' direct represents '8' with '3104'
3102 -3103 3104 0
-3104 3103 0
-3104 -3102 0
c Var 'max_left_00003_00008_00005' direct represents '9' with '-3103'
3102 3104 -3103 0
c Encoding variable: max_left_00003_00008_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00006' order represents '7' with '3105'
c Var 'max_left_00003_00008_00006' direct represents '7' with '3105'
c Var 'max_left_00003_00008_00006' order represents '8' with '3106'
-3105 3106 0
c Var 'max_left_00003_00008_00006' direct represents '8' with '3107'
3105 -3106 3107 0
-3107 3106 0
-3107 -3105 0
c Var 'max_left_00003_00008_00006' direct represents '9' with '-3106'
3105 3107 -3106 0
c Encoding variable: max_left_00003_00008_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00008_00007' direct represents '8' with '-3108'
c Var 'max_left_00003_00008_00007' direct represents '9' with '3108'
c Var 'max_left_00003_00008_00007' order represents '9' with '1'
c Var 'max_left_00003_00008_00007' order represents '8' with '-3108'
c Encoding variable: max_left_00003_00008_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00008_00008' direct represents '8' with '-3109'
c Var 'max_left_00003_00008_00008' direct represents '9' with '3109'
c Var 'max_left_00003_00008_00008' order represents '9' with '1'
c Var 'max_left_00003_00008_00008' order represents '8' with '-3109'
c Encoding variable: max_left_00003_00008_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00008_00009' direct represents '8' with '-3110'
c Var 'max_left_00003_00008_00009' direct represents '9' with '3110'
c Var 'max_left_00003_00008_00009' order represents '9' with '1'
c Var 'max_left_00003_00008_00009' order represents '8' with '-3110'
c Encoding variable: max_left_00003_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00009_00000' direct represents '0' with '3111'
3111 0
c Encoding variable: max_left_00003_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00001' order represents '1' with '3112'
c Var 'max_left_00003_00009_00001' direct represents '1' with '3112'
c Var 'max_left_00003_00009_00001' order represents '2' with '3113'
-3112 3113 0
c Var 'max_left_00003_00009_00001' direct represents '2' with '3114'
3112 -3113 3114 0
-3114 3113 0
-3114 -3112 0
c Var 'max_left_00003_00009_00001' order represents '3' with '3115'
-3113 3115 0
c Var 'max_left_00003_00009_00001' direct represents '3' with '3116'
3113 -3115 3116 0
-3116 3115 0
-3116 -3113 0
c Var 'max_left_00003_00009_00001' order represents '4' with '3117'
-3115 3117 0
c Var 'max_left_00003_00009_00001' direct represents '4' with '3118'
3115 -3117 3118 0
-3118 3117 0
-3118 -3115 0
c Var 'max_left_00003_00009_00001' order represents '5' with '3119'
-3117 3119 0
c Var 'max_left_00003_00009_00001' direct represents '5' with '3120'
3117 -3119 3120 0
-3120 3119 0
-3120 -3117 0
c Var 'max_left_00003_00009_00001' order represents '6' with '3121'
-3119 3121 0
c Var 'max_left_00003_00009_00001' direct represents '6' with '3122'
3119 -3121 3122 0
-3122 3121 0
-3122 -3119 0
c Var 'max_left_00003_00009_00001' order represents '7' with '3123'
-3121 3123 0
c Var 'max_left_00003_00009_00001' direct represents '7' with '3124'
3121 -3123 3124 0
-3124 3123 0
-3124 -3121 0
c Var 'max_left_00003_00009_00001' order represents '8' with '3125'
-3123 3125 0
c Var 'max_left_00003_00009_00001' direct represents '8' with '3126'
3123 -3125 3126 0
-3126 3125 0
-3126 -3123 0
c Var 'max_left_00003_00009_00001' direct represents '9' with '-3125'
3112 3114 3116 3118 3120 3122 3124 3126 -3125 0
c Encoding variable: max_left_00003_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00002' order represents '1' with '3127'
c Var 'max_left_00003_00009_00002' direct represents '1' with '3127'
c Var 'max_left_00003_00009_00002' order represents '2' with '3128'
-3127 3128 0
c Var 'max_left_00003_00009_00002' direct represents '2' with '3129'
3127 -3128 3129 0
-3129 3128 0
-3129 -3127 0
c Var 'max_left_00003_00009_00002' order represents '3' with '3130'
-3128 3130 0
c Var 'max_left_00003_00009_00002' direct represents '3' with '3131'
3128 -3130 3131 0
-3131 3130 0
-3131 -3128 0
c Var 'max_left_00003_00009_00002' order represents '4' with '3132'
-3130 3132 0
c Var 'max_left_00003_00009_00002' direct represents '4' with '3133'
3130 -3132 3133 0
-3133 3132 0
-3133 -3130 0
c Var 'max_left_00003_00009_00002' order represents '5' with '3134'
-3132 3134 0
c Var 'max_left_00003_00009_00002' direct represents '5' with '3135'
3132 -3134 3135 0
-3135 3134 0
-3135 -3132 0
c Var 'max_left_00003_00009_00002' order represents '6' with '3136'
-3134 3136 0
c Var 'max_left_00003_00009_00002' direct represents '6' with '3137'
3134 -3136 3137 0
-3137 3136 0
-3137 -3134 0
c Var 'max_left_00003_00009_00002' order represents '7' with '3138'
-3136 3138 0
c Var 'max_left_00003_00009_00002' direct represents '7' with '3139'
3136 -3138 3139 0
-3139 3138 0
-3139 -3136 0
c Var 'max_left_00003_00009_00002' order represents '8' with '3140'
-3138 3140 0
c Var 'max_left_00003_00009_00002' direct represents '8' with '3141'
3138 -3140 3141 0
-3141 3140 0
-3141 -3138 0
c Var 'max_left_00003_00009_00002' direct represents '9' with '-3140'
3127 3129 3131 3133 3135 3137 3139 3141 -3140 0
c Encoding variable: max_left_00003_00009_00003 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00003' direct represents '8' with '-3142'
c Var 'max_left_00003_00009_00003' direct represents '9' with '3142'
c Var 'max_left_00003_00009_00003' order represents '9' with '1'
c Var 'max_left_00003_00009_00003' order represents '8' with '-3142'
c Encoding variable: max_left_00003_00009_00004 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00004' direct represents '8' with '-3143'
c Var 'max_left_00003_00009_00004' direct represents '9' with '3143'
c Var 'max_left_00003_00009_00004' order represents '9' with '1'
c Var 'max_left_00003_00009_00004' order represents '8' with '-3143'
c Encoding variable: max_left_00003_00009_00005 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00005' direct represents '8' with '-3144'
c Var 'max_left_00003_00009_00005' direct represents '9' with '3144'
c Var 'max_left_00003_00009_00005' order represents '9' with '1'
c Var 'max_left_00003_00009_00005' order represents '8' with '-3144'
c Encoding variable: max_left_00003_00009_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00006' direct represents '8' with '-3145'
c Var 'max_left_00003_00009_00006' direct represents '9' with '3145'
c Var 'max_left_00003_00009_00006' order represents '9' with '1'
c Var 'max_left_00003_00009_00006' order represents '8' with '-3145'
c Encoding variable: max_left_00003_00009_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00007' direct represents '8' with '-3146'
c Var 'max_left_00003_00009_00007' direct represents '9' with '3146'
c Var 'max_left_00003_00009_00007' order represents '9' with '1'
c Var 'max_left_00003_00009_00007' order represents '8' with '-3146'
c Encoding variable: max_left_00003_00009_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00008' direct represents '8' with '-3147'
c Var 'max_left_00003_00009_00008' direct represents '9' with '3147'
c Var 'max_left_00003_00009_00008' order represents '9' with '1'
c Var 'max_left_00003_00009_00008' order represents '8' with '-3147'
c Encoding variable: max_left_00003_00009_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00003_00009_00009' direct represents '8' with '-3148'
c Var 'max_left_00003_00009_00009' direct represents '9' with '3148'
c Var 'max_left_00003_00009_00009' order represents '9' with '1'
c Var 'max_left_00003_00009_00009' order represents '8' with '-3148'
c Encoding variable: max_left_00004_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00001_00000' direct represents '0' with '3149'
3149 0
c Encoding variable: max_left_00004_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00001' order represents '1' with '3150'
c Var 'max_left_00004_00001_00001' direct represents '1' with '3150'
c Var 'max_left_00004_00001_00001' order represents '2' with '3151'
-3150 3151 0
c Var 'max_left_00004_00001_00001' direct represents '2' with '3152'
3150 -3151 3152 0
-3152 3151 0
-3152 -3150 0
c Var 'max_left_00004_00001_00001' order represents '3' with '3153'
-3151 3153 0
c Var 'max_left_00004_00001_00001' direct represents '3' with '3154'
3151 -3153 3154 0
-3154 3153 0
-3154 -3151 0
c Var 'max_left_00004_00001_00001' order represents '4' with '3155'
-3153 3155 0
c Var 'max_left_00004_00001_00001' direct represents '4' with '3156'
3153 -3155 3156 0
-3156 3155 0
-3156 -3153 0
c Var 'max_left_00004_00001_00001' order represents '5' with '3157'
-3155 3157 0
c Var 'max_left_00004_00001_00001' direct represents '5' with '3158'
3155 -3157 3158 0
-3158 3157 0
-3158 -3155 0
c Var 'max_left_00004_00001_00001' order represents '6' with '3159'
-3157 3159 0
c Var 'max_left_00004_00001_00001' direct represents '6' with '3160'
3157 -3159 3160 0
-3160 3159 0
-3160 -3157 0
c Var 'max_left_00004_00001_00001' order represents '7' with '3161'
-3159 3161 0
c Var 'max_left_00004_00001_00001' direct represents '7' with '3162'
3159 -3161 3162 0
-3162 3161 0
-3162 -3159 0
c Var 'max_left_00004_00001_00001' order represents '8' with '3163'
-3161 3163 0
c Var 'max_left_00004_00001_00001' direct represents '8' with '3164'
3161 -3163 3164 0
-3164 3163 0
-3164 -3161 0
c Var 'max_left_00004_00001_00001' direct represents '9' with '-3163'
3150 3152 3154 3156 3158 3160 3162 3164 -3163 0
c Encoding variable: max_left_00004_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00002' order represents '1' with '3165'
c Var 'max_left_00004_00001_00002' direct represents '1' with '3165'
c Var 'max_left_00004_00001_00002' order represents '2' with '3166'
-3165 3166 0
c Var 'max_left_00004_00001_00002' direct represents '2' with '3167'
3165 -3166 3167 0
-3167 3166 0
-3167 -3165 0
c Var 'max_left_00004_00001_00002' order represents '3' with '3168'
-3166 3168 0
c Var 'max_left_00004_00001_00002' direct represents '3' with '3169'
3166 -3168 3169 0
-3169 3168 0
-3169 -3166 0
c Var 'max_left_00004_00001_00002' order represents '4' with '3170'
-3168 3170 0
c Var 'max_left_00004_00001_00002' direct represents '4' with '3171'
3168 -3170 3171 0
-3171 3170 0
-3171 -3168 0
c Var 'max_left_00004_00001_00002' order represents '5' with '3172'
-3170 3172 0
c Var 'max_left_00004_00001_00002' direct represents '5' with '3173'
3170 -3172 3173 0
-3173 3172 0
-3173 -3170 0
c Var 'max_left_00004_00001_00002' order represents '6' with '3174'
-3172 3174 0
c Var 'max_left_00004_00001_00002' direct represents '6' with '3175'
3172 -3174 3175 0
-3175 3174 0
-3175 -3172 0
c Var 'max_left_00004_00001_00002' order represents '7' with '3176'
-3174 3176 0
c Var 'max_left_00004_00001_00002' direct represents '7' with '3177'
3174 -3176 3177 0
-3177 3176 0
-3177 -3174 0
c Var 'max_left_00004_00001_00002' order represents '8' with '3178'
-3176 3178 0
c Var 'max_left_00004_00001_00002' direct represents '8' with '3179'
3176 -3178 3179 0
-3179 3178 0
-3179 -3176 0
c Var 'max_left_00004_00001_00002' direct represents '9' with '-3178'
3165 3167 3169 3171 3173 3175 3177 3179 -3178 0
c Encoding variable: max_left_00004_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00003' order represents '1' with '3180'
c Var 'max_left_00004_00001_00003' direct represents '1' with '3180'
c Var 'max_left_00004_00001_00003' order represents '2' with '3181'
-3180 3181 0
c Var 'max_left_00004_00001_00003' direct represents '2' with '3182'
3180 -3181 3182 0
-3182 3181 0
-3182 -3180 0
c Var 'max_left_00004_00001_00003' order represents '3' with '3183'
-3181 3183 0
c Var 'max_left_00004_00001_00003' direct represents '3' with '3184'
3181 -3183 3184 0
-3184 3183 0
-3184 -3181 0
c Var 'max_left_00004_00001_00003' order represents '4' with '3185'
-3183 3185 0
c Var 'max_left_00004_00001_00003' direct represents '4' with '3186'
3183 -3185 3186 0
-3186 3185 0
-3186 -3183 0
c Var 'max_left_00004_00001_00003' order represents '5' with '3187'
-3185 3187 0
c Var 'max_left_00004_00001_00003' direct represents '5' with '3188'
3185 -3187 3188 0
-3188 3187 0
-3188 -3185 0
c Var 'max_left_00004_00001_00003' order represents '6' with '3189'
-3187 3189 0
c Var 'max_left_00004_00001_00003' direct represents '6' with '3190'
3187 -3189 3190 0
-3190 3189 0
-3190 -3187 0
c Var 'max_left_00004_00001_00003' order represents '7' with '3191'
-3189 3191 0
c Var 'max_left_00004_00001_00003' direct represents '7' with '3192'
3189 -3191 3192 0
-3192 3191 0
-3192 -3189 0
c Var 'max_left_00004_00001_00003' order represents '8' with '3193'
-3191 3193 0
c Var 'max_left_00004_00001_00003' direct represents '8' with '3194'
3191 -3193 3194 0
-3194 3193 0
-3194 -3191 0
c Var 'max_left_00004_00001_00003' direct represents '9' with '-3193'
3180 3182 3184 3186 3188 3190 3192 3194 -3193 0
c Encoding variable: max_left_00004_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00004' order represents '1' with '3195'
c Var 'max_left_00004_00001_00004' direct represents '1' with '3195'
c Var 'max_left_00004_00001_00004' order represents '2' with '3196'
-3195 3196 0
c Var 'max_left_00004_00001_00004' direct represents '2' with '3197'
3195 -3196 3197 0
-3197 3196 0
-3197 -3195 0
c Var 'max_left_00004_00001_00004' order represents '3' with '3198'
-3196 3198 0
c Var 'max_left_00004_00001_00004' direct represents '3' with '3199'
3196 -3198 3199 0
-3199 3198 0
-3199 -3196 0
c Var 'max_left_00004_00001_00004' order represents '4' with '3200'
-3198 3200 0
c Var 'max_left_00004_00001_00004' direct represents '4' with '3201'
3198 -3200 3201 0
-3201 3200 0
-3201 -3198 0
c Var 'max_left_00004_00001_00004' order represents '5' with '3202'
-3200 3202 0
c Var 'max_left_00004_00001_00004' direct represents '5' with '3203'
3200 -3202 3203 0
-3203 3202 0
-3203 -3200 0
c Var 'max_left_00004_00001_00004' order represents '6' with '3204'
-3202 3204 0
c Var 'max_left_00004_00001_00004' direct represents '6' with '3205'
3202 -3204 3205 0
-3205 3204 0
-3205 -3202 0
c Var 'max_left_00004_00001_00004' order represents '7' with '3206'
-3204 3206 0
c Var 'max_left_00004_00001_00004' direct represents '7' with '3207'
3204 -3206 3207 0
-3207 3206 0
-3207 -3204 0
c Var 'max_left_00004_00001_00004' order represents '8' with '3208'
-3206 3208 0
c Var 'max_left_00004_00001_00004' direct represents '8' with '3209'
3206 -3208 3209 0
-3209 3208 0
-3209 -3206 0
c Var 'max_left_00004_00001_00004' direct represents '9' with '-3208'
3195 3197 3199 3201 3203 3205 3207 3209 -3208 0
c Encoding variable: max_left_00004_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00005' order represents '1' with '3210'
c Var 'max_left_00004_00001_00005' direct represents '1' with '3210'
c Var 'max_left_00004_00001_00005' order represents '2' with '3211'
-3210 3211 0
c Var 'max_left_00004_00001_00005' direct represents '2' with '3212'
3210 -3211 3212 0
-3212 3211 0
-3212 -3210 0
c Var 'max_left_00004_00001_00005' order represents '3' with '3213'
-3211 3213 0
c Var 'max_left_00004_00001_00005' direct represents '3' with '3214'
3211 -3213 3214 0
-3214 3213 0
-3214 -3211 0
c Var 'max_left_00004_00001_00005' order represents '4' with '3215'
-3213 3215 0
c Var 'max_left_00004_00001_00005' direct represents '4' with '3216'
3213 -3215 3216 0
-3216 3215 0
-3216 -3213 0
c Var 'max_left_00004_00001_00005' order represents '5' with '3217'
-3215 3217 0
c Var 'max_left_00004_00001_00005' direct represents '5' with '3218'
3215 -3217 3218 0
-3218 3217 0
-3218 -3215 0
c Var 'max_left_00004_00001_00005' order represents '6' with '3219'
-3217 3219 0
c Var 'max_left_00004_00001_00005' direct represents '6' with '3220'
3217 -3219 3220 0
-3220 3219 0
-3220 -3217 0
c Var 'max_left_00004_00001_00005' order represents '7' with '3221'
-3219 3221 0
c Var 'max_left_00004_00001_00005' direct represents '7' with '3222'
3219 -3221 3222 0
-3222 3221 0
-3222 -3219 0
c Var 'max_left_00004_00001_00005' order represents '8' with '3223'
-3221 3223 0
c Var 'max_left_00004_00001_00005' direct represents '8' with '3224'
3221 -3223 3224 0
-3224 3223 0
-3224 -3221 0
c Var 'max_left_00004_00001_00005' direct represents '9' with '-3223'
3210 3212 3214 3216 3218 3220 3222 3224 -3223 0
c Encoding variable: max_left_00004_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00006' order represents '1' with '3225'
c Var 'max_left_00004_00001_00006' direct represents '1' with '3225'
c Var 'max_left_00004_00001_00006' order represents '2' with '3226'
-3225 3226 0
c Var 'max_left_00004_00001_00006' direct represents '2' with '3227'
3225 -3226 3227 0
-3227 3226 0
-3227 -3225 0
c Var 'max_left_00004_00001_00006' order represents '3' with '3228'
-3226 3228 0
c Var 'max_left_00004_00001_00006' direct represents '3' with '3229'
3226 -3228 3229 0
-3229 3228 0
-3229 -3226 0
c Var 'max_left_00004_00001_00006' order represents '4' with '3230'
-3228 3230 0
c Var 'max_left_00004_00001_00006' direct represents '4' with '3231'
3228 -3230 3231 0
-3231 3230 0
-3231 -3228 0
c Var 'max_left_00004_00001_00006' order represents '5' with '3232'
-3230 3232 0
c Var 'max_left_00004_00001_00006' direct represents '5' with '3233'
3230 -3232 3233 0
-3233 3232 0
-3233 -3230 0
c Var 'max_left_00004_00001_00006' order represents '6' with '3234'
-3232 3234 0
c Var 'max_left_00004_00001_00006' direct represents '6' with '3235'
3232 -3234 3235 0
-3235 3234 0
-3235 -3232 0
c Var 'max_left_00004_00001_00006' order represents '7' with '3236'
-3234 3236 0
c Var 'max_left_00004_00001_00006' direct represents '7' with '3237'
3234 -3236 3237 0
-3237 3236 0
-3237 -3234 0
c Var 'max_left_00004_00001_00006' order represents '8' with '3238'
-3236 3238 0
c Var 'max_left_00004_00001_00006' direct represents '8' with '3239'
3236 -3238 3239 0
-3239 3238 0
-3239 -3236 0
c Var 'max_left_00004_00001_00006' direct represents '9' with '-3238'
3225 3227 3229 3231 3233 3235 3237 3239 -3238 0
c Encoding variable: max_left_00004_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00007' order represents '1' with '3240'
c Var 'max_left_00004_00001_00007' direct represents '1' with '3240'
c Var 'max_left_00004_00001_00007' order represents '2' with '3241'
-3240 3241 0
c Var 'max_left_00004_00001_00007' direct represents '2' with '3242'
3240 -3241 3242 0
-3242 3241 0
-3242 -3240 0
c Var 'max_left_00004_00001_00007' order represents '3' with '3243'
-3241 3243 0
c Var 'max_left_00004_00001_00007' direct represents '3' with '3244'
3241 -3243 3244 0
-3244 3243 0
-3244 -3241 0
c Var 'max_left_00004_00001_00007' order represents '4' with '3245'
-3243 3245 0
c Var 'max_left_00004_00001_00007' direct represents '4' with '3246'
3243 -3245 3246 0
-3246 3245 0
-3246 -3243 0
c Var 'max_left_00004_00001_00007' order represents '5' with '3247'
-3245 3247 0
c Var 'max_left_00004_00001_00007' direct represents '5' with '3248'
3245 -3247 3248 0
-3248 3247 0
-3248 -3245 0
c Var 'max_left_00004_00001_00007' order represents '6' with '3249'
-3247 3249 0
c Var 'max_left_00004_00001_00007' direct represents '6' with '3250'
3247 -3249 3250 0
-3250 3249 0
-3250 -3247 0
c Var 'max_left_00004_00001_00007' order represents '7' with '3251'
-3249 3251 0
c Var 'max_left_00004_00001_00007' direct represents '7' with '3252'
3249 -3251 3252 0
-3252 3251 0
-3252 -3249 0
c Var 'max_left_00004_00001_00007' order represents '8' with '3253'
-3251 3253 0
c Var 'max_left_00004_00001_00007' direct represents '8' with '3254'
3251 -3253 3254 0
-3254 3253 0
-3254 -3251 0
c Var 'max_left_00004_00001_00007' direct represents '9' with '-3253'
3240 3242 3244 3246 3248 3250 3252 3254 -3253 0
c Encoding variable: max_left_00004_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00008' order represents '1' with '3255'
c Var 'max_left_00004_00001_00008' direct represents '1' with '3255'
c Var 'max_left_00004_00001_00008' order represents '2' with '3256'
-3255 3256 0
c Var 'max_left_00004_00001_00008' direct represents '2' with '3257'
3255 -3256 3257 0
-3257 3256 0
-3257 -3255 0
c Var 'max_left_00004_00001_00008' order represents '3' with '3258'
-3256 3258 0
c Var 'max_left_00004_00001_00008' direct represents '3' with '3259'
3256 -3258 3259 0
-3259 3258 0
-3259 -3256 0
c Var 'max_left_00004_00001_00008' order represents '4' with '3260'
-3258 3260 0
c Var 'max_left_00004_00001_00008' direct represents '4' with '3261'
3258 -3260 3261 0
-3261 3260 0
-3261 -3258 0
c Var 'max_left_00004_00001_00008' order represents '5' with '3262'
-3260 3262 0
c Var 'max_left_00004_00001_00008' direct represents '5' with '3263'
3260 -3262 3263 0
-3263 3262 0
-3263 -3260 0
c Var 'max_left_00004_00001_00008' order represents '6' with '3264'
-3262 3264 0
c Var 'max_left_00004_00001_00008' direct represents '6' with '3265'
3262 -3264 3265 0
-3265 3264 0
-3265 -3262 0
c Var 'max_left_00004_00001_00008' order represents '7' with '3266'
-3264 3266 0
c Var 'max_left_00004_00001_00008' direct represents '7' with '3267'
3264 -3266 3267 0
-3267 3266 0
-3267 -3264 0
c Var 'max_left_00004_00001_00008' order represents '8' with '3268'
-3266 3268 0
c Var 'max_left_00004_00001_00008' direct represents '8' with '3269'
3266 -3268 3269 0
-3269 3268 0
-3269 -3266 0
c Var 'max_left_00004_00001_00008' direct represents '9' with '-3268'
3255 3257 3259 3261 3263 3265 3267 3269 -3268 0
c Encoding variable: max_left_00004_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00009' order represents '1' with '3270'
c Var 'max_left_00004_00001_00009' direct represents '1' with '3270'
c Var 'max_left_00004_00001_00009' order represents '2' with '3271'
-3270 3271 0
c Var 'max_left_00004_00001_00009' direct represents '2' with '3272'
3270 -3271 3272 0
-3272 3271 0
-3272 -3270 0
c Var 'max_left_00004_00001_00009' order represents '3' with '3273'
-3271 3273 0
c Var 'max_left_00004_00001_00009' direct represents '3' with '3274'
3271 -3273 3274 0
-3274 3273 0
-3274 -3271 0
c Var 'max_left_00004_00001_00009' order represents '4' with '3275'
-3273 3275 0
c Var 'max_left_00004_00001_00009' direct represents '4' with '3276'
3273 -3275 3276 0
-3276 3275 0
-3276 -3273 0
c Var 'max_left_00004_00001_00009' order represents '5' with '3277'
-3275 3277 0
c Var 'max_left_00004_00001_00009' direct represents '5' with '3278'
3275 -3277 3278 0
-3278 3277 0
-3278 -3275 0
c Var 'max_left_00004_00001_00009' order represents '6' with '3279'
-3277 3279 0
c Var 'max_left_00004_00001_00009' direct represents '6' with '3280'
3277 -3279 3280 0
-3280 3279 0
-3280 -3277 0
c Var 'max_left_00004_00001_00009' order represents '7' with '3281'
-3279 3281 0
c Var 'max_left_00004_00001_00009' direct represents '7' with '3282'
3279 -3281 3282 0
-3282 3281 0
-3282 -3279 0
c Var 'max_left_00004_00001_00009' order represents '8' with '3283'
-3281 3283 0
c Var 'max_left_00004_00001_00009' direct represents '8' with '3284'
3281 -3283 3284 0
-3284 3283 0
-3284 -3281 0
c Var 'max_left_00004_00001_00009' direct represents '9' with '-3283'
3270 3272 3274 3276 3278 3280 3282 3284 -3283 0
c Encoding variable: max_left_00004_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00002_00000' direct represents '0' with '3285'
3285 0
c Encoding variable: max_left_00004_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00001' order represents '1' with '3286'
c Var 'max_left_00004_00002_00001' direct represents '1' with '3286'
c Var 'max_left_00004_00002_00001' order represents '2' with '3287'
-3286 3287 0
c Var 'max_left_00004_00002_00001' direct represents '2' with '3288'
3286 -3287 3288 0
-3288 3287 0
-3288 -3286 0
c Var 'max_left_00004_00002_00001' order represents '3' with '3289'
-3287 3289 0
c Var 'max_left_00004_00002_00001' direct represents '3' with '3290'
3287 -3289 3290 0
-3290 3289 0
-3290 -3287 0
c Var 'max_left_00004_00002_00001' order represents '4' with '3291'
-3289 3291 0
c Var 'max_left_00004_00002_00001' direct represents '4' with '3292'
3289 -3291 3292 0
-3292 3291 0
-3292 -3289 0
c Var 'max_left_00004_00002_00001' order represents '5' with '3293'
-3291 3293 0
c Var 'max_left_00004_00002_00001' direct represents '5' with '3294'
3291 -3293 3294 0
-3294 3293 0
-3294 -3291 0
c Var 'max_left_00004_00002_00001' order represents '6' with '3295'
-3293 3295 0
c Var 'max_left_00004_00002_00001' direct represents '6' with '3296'
3293 -3295 3296 0
-3296 3295 0
-3296 -3293 0
c Var 'max_left_00004_00002_00001' order represents '7' with '3297'
-3295 3297 0
c Var 'max_left_00004_00002_00001' direct represents '7' with '3298'
3295 -3297 3298 0
-3298 3297 0
-3298 -3295 0
c Var 'max_left_00004_00002_00001' order represents '8' with '3299'
-3297 3299 0
c Var 'max_left_00004_00002_00001' direct represents '8' with '3300'
3297 -3299 3300 0
-3300 3299 0
-3300 -3297 0
c Var 'max_left_00004_00002_00001' direct represents '9' with '-3299'
3286 3288 3290 3292 3294 3296 3298 3300 -3299 0
c Encoding variable: max_left_00004_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00002' order represents '1' with '3301'
c Var 'max_left_00004_00002_00002' direct represents '1' with '3301'
c Var 'max_left_00004_00002_00002' order represents '2' with '3302'
-3301 3302 0
c Var 'max_left_00004_00002_00002' direct represents '2' with '3303'
3301 -3302 3303 0
-3303 3302 0
-3303 -3301 0
c Var 'max_left_00004_00002_00002' order represents '3' with '3304'
-3302 3304 0
c Var 'max_left_00004_00002_00002' direct represents '3' with '3305'
3302 -3304 3305 0
-3305 3304 0
-3305 -3302 0
c Var 'max_left_00004_00002_00002' order represents '4' with '3306'
-3304 3306 0
c Var 'max_left_00004_00002_00002' direct represents '4' with '3307'
3304 -3306 3307 0
-3307 3306 0
-3307 -3304 0
c Var 'max_left_00004_00002_00002' order represents '5' with '3308'
-3306 3308 0
c Var 'max_left_00004_00002_00002' direct represents '5' with '3309'
3306 -3308 3309 0
-3309 3308 0
-3309 -3306 0
c Var 'max_left_00004_00002_00002' order represents '6' with '3310'
-3308 3310 0
c Var 'max_left_00004_00002_00002' direct represents '6' with '3311'
3308 -3310 3311 0
-3311 3310 0
-3311 -3308 0
c Var 'max_left_00004_00002_00002' order represents '7' with '3312'
-3310 3312 0
c Var 'max_left_00004_00002_00002' direct represents '7' with '3313'
3310 -3312 3313 0
-3313 3312 0
-3313 -3310 0
c Var 'max_left_00004_00002_00002' order represents '8' with '3314'
-3312 3314 0
c Var 'max_left_00004_00002_00002' direct represents '8' with '3315'
3312 -3314 3315 0
-3315 3314 0
-3315 -3312 0
c Var 'max_left_00004_00002_00002' direct represents '9' with '-3314'
3301 3303 3305 3307 3309 3311 3313 3315 -3314 0
c Encoding variable: max_left_00004_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00003' order represents '1' with '3316'
c Var 'max_left_00004_00002_00003' direct represents '1' with '3316'
c Var 'max_left_00004_00002_00003' order represents '2' with '3317'
-3316 3317 0
c Var 'max_left_00004_00002_00003' direct represents '2' with '3318'
3316 -3317 3318 0
-3318 3317 0
-3318 -3316 0
c Var 'max_left_00004_00002_00003' order represents '3' with '3319'
-3317 3319 0
c Var 'max_left_00004_00002_00003' direct represents '3' with '3320'
3317 -3319 3320 0
-3320 3319 0
-3320 -3317 0
c Var 'max_left_00004_00002_00003' order represents '4' with '3321'
-3319 3321 0
c Var 'max_left_00004_00002_00003' direct represents '4' with '3322'
3319 -3321 3322 0
-3322 3321 0
-3322 -3319 0
c Var 'max_left_00004_00002_00003' order represents '5' with '3323'
-3321 3323 0
c Var 'max_left_00004_00002_00003' direct represents '5' with '3324'
3321 -3323 3324 0
-3324 3323 0
-3324 -3321 0
c Var 'max_left_00004_00002_00003' order represents '6' with '3325'
-3323 3325 0
c Var 'max_left_00004_00002_00003' direct represents '6' with '3326'
3323 -3325 3326 0
-3326 3325 0
-3326 -3323 0
c Var 'max_left_00004_00002_00003' order represents '7' with '3327'
-3325 3327 0
c Var 'max_left_00004_00002_00003' direct represents '7' with '3328'
3325 -3327 3328 0
-3328 3327 0
-3328 -3325 0
c Var 'max_left_00004_00002_00003' order represents '8' with '3329'
-3327 3329 0
c Var 'max_left_00004_00002_00003' direct represents '8' with '3330'
3327 -3329 3330 0
-3330 3329 0
-3330 -3327 0
c Var 'max_left_00004_00002_00003' direct represents '9' with '-3329'
3316 3318 3320 3322 3324 3326 3328 3330 -3329 0
c Encoding variable: max_left_00004_00002_00004 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00002_00004' direct represents '8' with '-3331'
c Var 'max_left_00004_00002_00004' direct represents '9' with '3331'
c Var 'max_left_00004_00002_00004' order represents '9' with '1'
c Var 'max_left_00004_00002_00004' order represents '8' with '-3331'
c Encoding variable: max_left_00004_00002_00005 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00002_00005' direct represents '8' with '-3332'
c Var 'max_left_00004_00002_00005' direct represents '9' with '3332'
c Var 'max_left_00004_00002_00005' order represents '9' with '1'
c Var 'max_left_00004_00002_00005' order represents '8' with '-3332'
c Encoding variable: max_left_00004_00002_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00002_00006' direct represents '8' with '-3333'
c Var 'max_left_00004_00002_00006' direct represents '9' with '3333'
c Var 'max_left_00004_00002_00006' order represents '9' with '1'
c Var 'max_left_00004_00002_00006' order represents '8' with '-3333'
c Encoding variable: max_left_00004_00002_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00002_00007' direct represents '8' with '-3334'
c Var 'max_left_00004_00002_00007' direct represents '9' with '3334'
c Var 'max_left_00004_00002_00007' order represents '9' with '1'
c Var 'max_left_00004_00002_00007' order represents '8' with '-3334'
c Encoding variable: max_left_00004_00002_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00002_00008' direct represents '8' with '-3335'
c Var 'max_left_00004_00002_00008' direct represents '9' with '3335'
c Var 'max_left_00004_00002_00008' order represents '9' with '1'
c Var 'max_left_00004_00002_00008' order represents '8' with '-3335'
c Encoding variable: max_left_00004_00002_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00002_00009' direct represents '8' with '-3336'
c Var 'max_left_00004_00002_00009' direct represents '9' with '3336'
c Var 'max_left_00004_00002_00009' order represents '9' with '1'
c Var 'max_left_00004_00002_00009' order represents '8' with '-3336'
c Encoding variable: max_left_00004_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00003_00000' direct represents '0' with '3337'
3337 0
c Encoding variable: max_left_00004_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00001' order represents '1' with '3338'
c Var 'max_left_00004_00003_00001' direct represents '1' with '3338'
c Var 'max_left_00004_00003_00001' order represents '2' with '3339'
-3338 3339 0
c Var 'max_left_00004_00003_00001' direct represents '2' with '3340'
3338 -3339 3340 0
-3340 3339 0
-3340 -3338 0
c Var 'max_left_00004_00003_00001' order represents '3' with '3341'
-3339 3341 0
c Var 'max_left_00004_00003_00001' direct represents '3' with '3342'
3339 -3341 3342 0
-3342 3341 0
-3342 -3339 0
c Var 'max_left_00004_00003_00001' order represents '4' with '3343'
-3341 3343 0
c Var 'max_left_00004_00003_00001' direct represents '4' with '3344'
3341 -3343 3344 0
-3344 3343 0
-3344 -3341 0
c Var 'max_left_00004_00003_00001' order represents '5' with '3345'
-3343 3345 0
c Var 'max_left_00004_00003_00001' direct represents '5' with '3346'
3343 -3345 3346 0
-3346 3345 0
-3346 -3343 0
c Var 'max_left_00004_00003_00001' order represents '6' with '3347'
-3345 3347 0
c Var 'max_left_00004_00003_00001' direct represents '6' with '3348'
3345 -3347 3348 0
-3348 3347 0
-3348 -3345 0
c Var 'max_left_00004_00003_00001' order represents '7' with '3349'
-3347 3349 0
c Var 'max_left_00004_00003_00001' direct represents '7' with '3350'
3347 -3349 3350 0
-3350 3349 0
-3350 -3347 0
c Var 'max_left_00004_00003_00001' order represents '8' with '3351'
-3349 3351 0
c Var 'max_left_00004_00003_00001' direct represents '8' with '3352'
3349 -3351 3352 0
-3352 3351 0
-3352 -3349 0
c Var 'max_left_00004_00003_00001' direct represents '9' with '-3351'
3338 3340 3342 3344 3346 3348 3350 3352 -3351 0
c Encoding variable: max_left_00004_00003_00002 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00002' direct represents '8' with '-3353'
c Var 'max_left_00004_00003_00002' direct represents '9' with '3353'
c Var 'max_left_00004_00003_00002' order represents '9' with '1'
c Var 'max_left_00004_00003_00002' order represents '8' with '-3353'
c Encoding variable: max_left_00004_00003_00003 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00003' direct represents '8' with '-3354'
c Var 'max_left_00004_00003_00003' direct represents '9' with '3354'
c Var 'max_left_00004_00003_00003' order represents '9' with '1'
c Var 'max_left_00004_00003_00003' order represents '8' with '-3354'
c Encoding variable: max_left_00004_00003_00004 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00004' direct represents '8' with '-3355'
c Var 'max_left_00004_00003_00004' direct represents '9' with '3355'
c Var 'max_left_00004_00003_00004' order represents '9' with '1'
c Var 'max_left_00004_00003_00004' order represents '8' with '-3355'
c Encoding variable: max_left_00004_00003_00005 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00005' direct represents '8' with '-3356'
c Var 'max_left_00004_00003_00005' direct represents '9' with '3356'
c Var 'max_left_00004_00003_00005' order represents '9' with '1'
c Var 'max_left_00004_00003_00005' order represents '8' with '-3356'
c Encoding variable: max_left_00004_00003_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00006' direct represents '8' with '-3357'
c Var 'max_left_00004_00003_00006' direct represents '9' with '3357'
c Var 'max_left_00004_00003_00006' order represents '9' with '1'
c Var 'max_left_00004_00003_00006' order represents '8' with '-3357'
c Encoding variable: max_left_00004_00003_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00007' direct represents '8' with '-3358'
c Var 'max_left_00004_00003_00007' direct represents '9' with '3358'
c Var 'max_left_00004_00003_00007' order represents '9' with '1'
c Var 'max_left_00004_00003_00007' order represents '8' with '-3358'
c Encoding variable: max_left_00004_00003_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00008' direct represents '8' with '-3359'
c Var 'max_left_00004_00003_00008' direct represents '9' with '3359'
c Var 'max_left_00004_00003_00008' order represents '9' with '1'
c Var 'max_left_00004_00003_00008' order represents '8' with '-3359'
c Encoding variable: max_left_00004_00003_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00003_00009' direct represents '8' with '-3360'
c Var 'max_left_00004_00003_00009' direct represents '9' with '3360'
c Var 'max_left_00004_00003_00009' order represents '9' with '1'
c Var 'max_left_00004_00003_00009' order represents '8' with '-3360'
c Encoding variable: max_left_00004_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00004_00000' direct represents '0' with '3361'
3361 0
c Encoding variable: max_left_00004_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00001' order represents '1' with '3362'
c Var 'max_left_00004_00004_00001' direct represents '1' with '3362'
c Var 'max_left_00004_00004_00001' order represents '2' with '3363'
-3362 3363 0
c Var 'max_left_00004_00004_00001' direct represents '2' with '3364'
3362 -3363 3364 0
-3364 3363 0
-3364 -3362 0
c Var 'max_left_00004_00004_00001' order represents '3' with '3365'
-3363 3365 0
c Var 'max_left_00004_00004_00001' direct represents '3' with '3366'
3363 -3365 3366 0
-3366 3365 0
-3366 -3363 0
c Var 'max_left_00004_00004_00001' order represents '4' with '3367'
-3365 3367 0
c Var 'max_left_00004_00004_00001' direct represents '4' with '3368'
3365 -3367 3368 0
-3368 3367 0
-3368 -3365 0
c Var 'max_left_00004_00004_00001' order represents '5' with '3369'
-3367 3369 0
c Var 'max_left_00004_00004_00001' direct represents '5' with '3370'
3367 -3369 3370 0
-3370 3369 0
-3370 -3367 0
c Var 'max_left_00004_00004_00001' order represents '6' with '3371'
-3369 3371 0
c Var 'max_left_00004_00004_00001' direct represents '6' with '3372'
3369 -3371 3372 0
-3372 3371 0
-3372 -3369 0
c Var 'max_left_00004_00004_00001' order represents '7' with '3373'
-3371 3373 0
c Var 'max_left_00004_00004_00001' direct represents '7' with '3374'
3371 -3373 3374 0
-3374 3373 0
-3374 -3371 0
c Var 'max_left_00004_00004_00001' order represents '8' with '3375'
-3373 3375 0
c Var 'max_left_00004_00004_00001' direct represents '8' with '3376'
3373 -3375 3376 0
-3376 3375 0
-3376 -3373 0
c Var 'max_left_00004_00004_00001' direct represents '9' with '-3375'
3362 3364 3366 3368 3370 3372 3374 3376 -3375 0
c Encoding variable: max_left_00004_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00002' order represents '1' with '3377'
c Var 'max_left_00004_00004_00002' direct represents '1' with '3377'
c Var 'max_left_00004_00004_00002' order represents '2' with '3378'
-3377 3378 0
c Var 'max_left_00004_00004_00002' direct represents '2' with '3379'
3377 -3378 3379 0
-3379 3378 0
-3379 -3377 0
c Var 'max_left_00004_00004_00002' order represents '3' with '3380'
-3378 3380 0
c Var 'max_left_00004_00004_00002' direct represents '3' with '3381'
3378 -3380 3381 0
-3381 3380 0
-3381 -3378 0
c Var 'max_left_00004_00004_00002' order represents '4' with '3382'
-3380 3382 0
c Var 'max_left_00004_00004_00002' direct represents '4' with '3383'
3380 -3382 3383 0
-3383 3382 0
-3383 -3380 0
c Var 'max_left_00004_00004_00002' order represents '5' with '3384'
-3382 3384 0
c Var 'max_left_00004_00004_00002' direct represents '5' with '3385'
3382 -3384 3385 0
-3385 3384 0
-3385 -3382 0
c Var 'max_left_00004_00004_00002' order represents '6' with '3386'
-3384 3386 0
c Var 'max_left_00004_00004_00002' direct represents '6' with '3387'
3384 -3386 3387 0
-3387 3386 0
-3387 -3384 0
c Var 'max_left_00004_00004_00002' order represents '7' with '3388'
-3386 3388 0
c Var 'max_left_00004_00004_00002' direct represents '7' with '3389'
3386 -3388 3389 0
-3389 3388 0
-3389 -3386 0
c Var 'max_left_00004_00004_00002' order represents '8' with '3390'
-3388 3390 0
c Var 'max_left_00004_00004_00002' direct represents '8' with '3391'
3388 -3390 3391 0
-3391 3390 0
-3391 -3388 0
c Var 'max_left_00004_00004_00002' direct represents '9' with '-3390'
3377 3379 3381 3383 3385 3387 3389 3391 -3390 0
c Encoding variable: max_left_00004_00004_00003 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00003' order represents '3' with '3392'
c Var 'max_left_00004_00004_00003' direct represents '3' with '3392'
c Var 'max_left_00004_00004_00003' order represents '4' with '3393'
-3392 3393 0
c Var 'max_left_00004_00004_00003' direct represents '4' with '3394'
3392 -3393 3394 0
-3394 3393 0
-3394 -3392 0
c Var 'max_left_00004_00004_00003' order represents '5' with '3395'
-3393 3395 0
c Var 'max_left_00004_00004_00003' direct represents '5' with '3396'
3393 -3395 3396 0
-3396 3395 0
-3396 -3393 0
c Var 'max_left_00004_00004_00003' order represents '6' with '3397'
-3395 3397 0
c Var 'max_left_00004_00004_00003' direct represents '6' with '3398'
3395 -3397 3398 0
-3398 3397 0
-3398 -3395 0
c Var 'max_left_00004_00004_00003' order represents '7' with '3399'
-3397 3399 0
c Var 'max_left_00004_00004_00003' direct represents '7' with '3400'
3397 -3399 3400 0
-3400 3399 0
-3400 -3397 0
c Var 'max_left_00004_00004_00003' order represents '8' with '3401'
-3399 3401 0
c Var 'max_left_00004_00004_00003' direct represents '8' with '3402'
3399 -3401 3402 0
-3402 3401 0
-3402 -3399 0
c Var 'max_left_00004_00004_00003' direct represents '9' with '-3401'
3392 3394 3396 3398 3400 3402 -3401 0
c Encoding variable: max_left_00004_00004_00004 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00004' order represents '3' with '3403'
c Var 'max_left_00004_00004_00004' direct represents '3' with '3403'
c Var 'max_left_00004_00004_00004' order represents '4' with '3404'
-3403 3404 0
c Var 'max_left_00004_00004_00004' direct represents '4' with '3405'
3403 -3404 3405 0
-3405 3404 0
-3405 -3403 0
c Var 'max_left_00004_00004_00004' order represents '5' with '3406'
-3404 3406 0
c Var 'max_left_00004_00004_00004' direct represents '5' with '3407'
3404 -3406 3407 0
-3407 3406 0
-3407 -3404 0
c Var 'max_left_00004_00004_00004' order represents '6' with '3408'
-3406 3408 0
c Var 'max_left_00004_00004_00004' direct represents '6' with '3409'
3406 -3408 3409 0
-3409 3408 0
-3409 -3406 0
c Var 'max_left_00004_00004_00004' order represents '7' with '3410'
-3408 3410 0
c Var 'max_left_00004_00004_00004' direct represents '7' with '3411'
3408 -3410 3411 0
-3411 3410 0
-3411 -3408 0
c Var 'max_left_00004_00004_00004' order represents '8' with '3412'
-3410 3412 0
c Var 'max_left_00004_00004_00004' direct represents '8' with '3413'
3410 -3412 3413 0
-3413 3412 0
-3413 -3410 0
c Var 'max_left_00004_00004_00004' direct represents '9' with '-3412'
3403 3405 3407 3409 3411 3413 -3412 0
c Encoding variable: max_left_00004_00004_00005 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00005' order represents '3' with '3414'
c Var 'max_left_00004_00004_00005' direct represents '3' with '3414'
c Var 'max_left_00004_00004_00005' order represents '4' with '3415'
-3414 3415 0
c Var 'max_left_00004_00004_00005' direct represents '4' with '3416'
3414 -3415 3416 0
-3416 3415 0
-3416 -3414 0
c Var 'max_left_00004_00004_00005' order represents '5' with '3417'
-3415 3417 0
c Var 'max_left_00004_00004_00005' direct represents '5' with '3418'
3415 -3417 3418 0
-3418 3417 0
-3418 -3415 0
c Var 'max_left_00004_00004_00005' order represents '6' with '3419'
-3417 3419 0
c Var 'max_left_00004_00004_00005' direct represents '6' with '3420'
3417 -3419 3420 0
-3420 3419 0
-3420 -3417 0
c Var 'max_left_00004_00004_00005' order represents '7' with '3421'
-3419 3421 0
c Var 'max_left_00004_00004_00005' direct represents '7' with '3422'
3419 -3421 3422 0
-3422 3421 0
-3422 -3419 0
c Var 'max_left_00004_00004_00005' order represents '8' with '3423'
-3421 3423 0
c Var 'max_left_00004_00004_00005' direct represents '8' with '3424'
3421 -3423 3424 0
-3424 3423 0
-3424 -3421 0
c Var 'max_left_00004_00004_00005' direct represents '9' with '-3423'
3414 3416 3418 3420 3422 3424 -3423 0
c Encoding variable: max_left_00004_00004_00006 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00006' order represents '3' with '3425'
c Var 'max_left_00004_00004_00006' direct represents '3' with '3425'
c Var 'max_left_00004_00004_00006' order represents '4' with '3426'
-3425 3426 0
c Var 'max_left_00004_00004_00006' direct represents '4' with '3427'
3425 -3426 3427 0
-3427 3426 0
-3427 -3425 0
c Var 'max_left_00004_00004_00006' order represents '5' with '3428'
-3426 3428 0
c Var 'max_left_00004_00004_00006' direct represents '5' with '3429'
3426 -3428 3429 0
-3429 3428 0
-3429 -3426 0
c Var 'max_left_00004_00004_00006' order represents '6' with '3430'
-3428 3430 0
c Var 'max_left_00004_00004_00006' direct represents '6' with '3431'
3428 -3430 3431 0
-3431 3430 0
-3431 -3428 0
c Var 'max_left_00004_00004_00006' order represents '7' with '3432'
-3430 3432 0
c Var 'max_left_00004_00004_00006' direct represents '7' with '3433'
3430 -3432 3433 0
-3433 3432 0
-3433 -3430 0
c Var 'max_left_00004_00004_00006' order represents '8' with '3434'
-3432 3434 0
c Var 'max_left_00004_00004_00006' direct represents '8' with '3435'
3432 -3434 3435 0
-3435 3434 0
-3435 -3432 0
c Var 'max_left_00004_00004_00006' direct represents '9' with '-3434'
3425 3427 3429 3431 3433 3435 -3434 0
c Encoding variable: max_left_00004_00004_00007 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00007' order represents '3' with '3436'
c Var 'max_left_00004_00004_00007' direct represents '3' with '3436'
c Var 'max_left_00004_00004_00007' order represents '4' with '3437'
-3436 3437 0
c Var 'max_left_00004_00004_00007' direct represents '4' with '3438'
3436 -3437 3438 0
-3438 3437 0
-3438 -3436 0
c Var 'max_left_00004_00004_00007' order represents '5' with '3439'
-3437 3439 0
c Var 'max_left_00004_00004_00007' direct represents '5' with '3440'
3437 -3439 3440 0
-3440 3439 0
-3440 -3437 0
c Var 'max_left_00004_00004_00007' order represents '6' with '3441'
-3439 3441 0
c Var 'max_left_00004_00004_00007' direct represents '6' with '3442'
3439 -3441 3442 0
-3442 3441 0
-3442 -3439 0
c Var 'max_left_00004_00004_00007' order represents '7' with '3443'
-3441 3443 0
c Var 'max_left_00004_00004_00007' direct represents '7' with '3444'
3441 -3443 3444 0
-3444 3443 0
-3444 -3441 0
c Var 'max_left_00004_00004_00007' order represents '8' with '3445'
-3443 3445 0
c Var 'max_left_00004_00004_00007' direct represents '8' with '3446'
3443 -3445 3446 0
-3446 3445 0
-3446 -3443 0
c Var 'max_left_00004_00004_00007' direct represents '9' with '-3445'
3436 3438 3440 3442 3444 3446 -3445 0
c Encoding variable: max_left_00004_00004_00008 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00008' order represents '3' with '3447'
c Var 'max_left_00004_00004_00008' direct represents '3' with '3447'
c Var 'max_left_00004_00004_00008' order represents '4' with '3448'
-3447 3448 0
c Var 'max_left_00004_00004_00008' direct represents '4' with '3449'
3447 -3448 3449 0
-3449 3448 0
-3449 -3447 0
c Var 'max_left_00004_00004_00008' order represents '5' with '3450'
-3448 3450 0
c Var 'max_left_00004_00004_00008' direct represents '5' with '3451'
3448 -3450 3451 0
-3451 3450 0
-3451 -3448 0
c Var 'max_left_00004_00004_00008' order represents '6' with '3452'
-3450 3452 0
c Var 'max_left_00004_00004_00008' direct represents '6' with '3453'
3450 -3452 3453 0
-3453 3452 0
-3453 -3450 0
c Var 'max_left_00004_00004_00008' order represents '7' with '3454'
-3452 3454 0
c Var 'max_left_00004_00004_00008' direct represents '7' with '3455'
3452 -3454 3455 0
-3455 3454 0
-3455 -3452 0
c Var 'max_left_00004_00004_00008' order represents '8' with '3456'
-3454 3456 0
c Var 'max_left_00004_00004_00008' direct represents '8' with '3457'
3454 -3456 3457 0
-3457 3456 0
-3457 -3454 0
c Var 'max_left_00004_00004_00008' direct represents '9' with '-3456'
3447 3449 3451 3453 3455 3457 -3456 0
c Encoding variable: max_left_00004_00004_00009 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00009' order represents '3' with '3458'
c Var 'max_left_00004_00004_00009' direct represents '3' with '3458'
c Var 'max_left_00004_00004_00009' order represents '4' with '3459'
-3458 3459 0
c Var 'max_left_00004_00004_00009' direct represents '4' with '3460'
3458 -3459 3460 0
-3460 3459 0
-3460 -3458 0
c Var 'max_left_00004_00004_00009' order represents '5' with '3461'
-3459 3461 0
c Var 'max_left_00004_00004_00009' direct represents '5' with '3462'
3459 -3461 3462 0
-3462 3461 0
-3462 -3459 0
c Var 'max_left_00004_00004_00009' order represents '6' with '3463'
-3461 3463 0
c Var 'max_left_00004_00004_00009' direct represents '6' with '3464'
3461 -3463 3464 0
-3464 3463 0
-3464 -3461 0
c Var 'max_left_00004_00004_00009' order represents '7' with '3465'
-3463 3465 0
c Var 'max_left_00004_00004_00009' direct represents '7' with '3466'
3463 -3465 3466 0
-3466 3465 0
-3466 -3463 0
c Var 'max_left_00004_00004_00009' order represents '8' with '3467'
-3465 3467 0
c Var 'max_left_00004_00004_00009' direct represents '8' with '3468'
3465 -3467 3468 0
-3468 3467 0
-3468 -3465 0
c Var 'max_left_00004_00004_00009' direct represents '9' with '-3467'
3458 3460 3462 3464 3466 3468 -3467 0
c Encoding variable: max_left_00004_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00005_00000' direct represents '0' with '3469'
3469 0
c Encoding variable: max_left_00004_00005_00001 with domain: int(1) (representing constraint )
c Var 'max_left_00004_00005_00001' direct represents '1' with '3470'
3470 0
c Encoding variable: max_left_00004_00005_00002 with domain: int(7) (representing constraint )
c Var 'max_left_00004_00005_00002' direct represents '7' with '3471'
3471 0
c Encoding variable: max_left_00004_00005_00003 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00003' order represents '7' with '3472'
c Var 'max_left_00004_00005_00003' direct represents '7' with '3472'
c Var 'max_left_00004_00005_00003' order represents '8' with '3473'
-3472 3473 0
c Var 'max_left_00004_00005_00003' direct represents '8' with '3474'
3472 -3473 3474 0
-3474 3473 0
-3474 -3472 0
c Var 'max_left_00004_00005_00003' direct represents '9' with '-3473'
3472 3474 -3473 0
c Encoding variable: max_left_00004_00005_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00004' order represents '7' with '3475'
c Var 'max_left_00004_00005_00004' direct represents '7' with '3475'
c Var 'max_left_00004_00005_00004' order represents '8' with '3476'
-3475 3476 0
c Var 'max_left_00004_00005_00004' direct represents '8' with '3477'
3475 -3476 3477 0
-3477 3476 0
-3477 -3475 0
c Var 'max_left_00004_00005_00004' direct represents '9' with '-3476'
3475 3477 -3476 0
c Encoding variable: max_left_00004_00005_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00005' order represents '7' with '3478'
c Var 'max_left_00004_00005_00005' direct represents '7' with '3478'
c Var 'max_left_00004_00005_00005' order represents '8' with '3479'
-3478 3479 0
c Var 'max_left_00004_00005_00005' direct represents '8' with '3480'
3478 -3479 3480 0
-3480 3479 0
-3480 -3478 0
c Var 'max_left_00004_00005_00005' direct represents '9' with '-3479'
3478 3480 -3479 0
c Encoding variable: max_left_00004_00005_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00006' order represents '7' with '3481'
c Var 'max_left_00004_00005_00006' direct represents '7' with '3481'
c Var 'max_left_00004_00005_00006' order represents '8' with '3482'
-3481 3482 0
c Var 'max_left_00004_00005_00006' direct represents '8' with '3483'
3481 -3482 3483 0
-3483 3482 0
-3483 -3481 0
c Var 'max_left_00004_00005_00006' direct represents '9' with '-3482'
3481 3483 -3482 0
c Encoding variable: max_left_00004_00005_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00007' order represents '7' with '3484'
c Var 'max_left_00004_00005_00007' direct represents '7' with '3484'
c Var 'max_left_00004_00005_00007' order represents '8' with '3485'
-3484 3485 0
c Var 'max_left_00004_00005_00007' direct represents '8' with '3486'
3484 -3485 3486 0
-3486 3485 0
-3486 -3484 0
c Var 'max_left_00004_00005_00007' direct represents '9' with '-3485'
3484 3486 -3485 0
c Encoding variable: max_left_00004_00005_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00008' order represents '7' with '3487'
c Var 'max_left_00004_00005_00008' direct represents '7' with '3487'
c Var 'max_left_00004_00005_00008' order represents '8' with '3488'
-3487 3488 0
c Var 'max_left_00004_00005_00008' direct represents '8' with '3489'
3487 -3488 3489 0
-3489 3488 0
-3489 -3487 0
c Var 'max_left_00004_00005_00008' direct represents '9' with '-3488'
3487 3489 -3488 0
c Encoding variable: max_left_00004_00005_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00009' order represents '7' with '3490'
c Var 'max_left_00004_00005_00009' direct represents '7' with '3490'
c Var 'max_left_00004_00005_00009' order represents '8' with '3491'
-3490 3491 0
c Var 'max_left_00004_00005_00009' direct represents '8' with '3492'
3490 -3491 3492 0
-3492 3491 0
-3492 -3490 0
c Var 'max_left_00004_00005_00009' direct represents '9' with '-3491'
3490 3492 -3491 0
c Encoding variable: max_left_00004_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00006_00000' direct represents '0' with '3493'
3493 0
c Encoding variable: max_left_00004_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00001' order represents '1' with '3494'
c Var 'max_left_00004_00006_00001' direct represents '1' with '3494'
c Var 'max_left_00004_00006_00001' order represents '2' with '3495'
-3494 3495 0
c Var 'max_left_00004_00006_00001' direct represents '2' with '3496'
3494 -3495 3496 0
-3496 3495 0
-3496 -3494 0
c Var 'max_left_00004_00006_00001' order represents '3' with '3497'
-3495 3497 0
c Var 'max_left_00004_00006_00001' direct represents '3' with '3498'
3495 -3497 3498 0
-3498 3497 0
-3498 -3495 0
c Var 'max_left_00004_00006_00001' order represents '4' with '3499'
-3497 3499 0
c Var 'max_left_00004_00006_00001' direct represents '4' with '3500'
3497 -3499 3500 0
-3500 3499 0
-3500 -3497 0
c Var 'max_left_00004_00006_00001' order represents '5' with '3501'
-3499 3501 0
c Var 'max_left_00004_00006_00001' direct represents '5' with '3502'
3499 -3501 3502 0
-3502 3501 0
-3502 -3499 0
c Var 'max_left_00004_00006_00001' order represents '6' with '3503'
-3501 3503 0
c Var 'max_left_00004_00006_00001' direct represents '6' with '3504'
3501 -3503 3504 0
-3504 3503 0
-3504 -3501 0
c Var 'max_left_00004_00006_00001' order represents '7' with '3505'
-3503 3505 0
c Var 'max_left_00004_00006_00001' direct represents '7' with '3506'
3503 -3505 3506 0
-3506 3505 0
-3506 -3503 0
c Var 'max_left_00004_00006_00001' order represents '8' with '3507'
-3505 3507 0
c Var 'max_left_00004_00006_00001' direct represents '8' with '3508'
3505 -3507 3508 0
-3508 3507 0
-3508 -3505 0
c Var 'max_left_00004_00006_00001' direct represents '9' with '-3507'
3494 3496 3498 3500 3502 3504 3506 3508 -3507 0
c Encoding variable: max_left_00004_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00002' order represents '1' with '3509'
c Var 'max_left_00004_00006_00002' direct represents '1' with '3509'
c Var 'max_left_00004_00006_00002' order represents '2' with '3510'
-3509 3510 0
c Var 'max_left_00004_00006_00002' direct represents '2' with '3511'
3509 -3510 3511 0
-3511 3510 0
-3511 -3509 0
c Var 'max_left_00004_00006_00002' order represents '3' with '3512'
-3510 3512 0
c Var 'max_left_00004_00006_00002' direct represents '3' with '3513'
3510 -3512 3513 0
-3513 3512 0
-3513 -3510 0
c Var 'max_left_00004_00006_00002' order represents '4' with '3514'
-3512 3514 0
c Var 'max_left_00004_00006_00002' direct represents '4' with '3515'
3512 -3514 3515 0
-3515 3514 0
-3515 -3512 0
c Var 'max_left_00004_00006_00002' order represents '5' with '3516'
-3514 3516 0
c Var 'max_left_00004_00006_00002' direct represents '5' with '3517'
3514 -3516 3517 0
-3517 3516 0
-3517 -3514 0
c Var 'max_left_00004_00006_00002' order represents '6' with '3518'
-3516 3518 0
c Var 'max_left_00004_00006_00002' direct represents '6' with '3519'
3516 -3518 3519 0
-3519 3518 0
-3519 -3516 0
c Var 'max_left_00004_00006_00002' order represents '7' with '3520'
-3518 3520 0
c Var 'max_left_00004_00006_00002' direct represents '7' with '3521'
3518 -3520 3521 0
-3521 3520 0
-3521 -3518 0
c Var 'max_left_00004_00006_00002' order represents '8' with '3522'
-3520 3522 0
c Var 'max_left_00004_00006_00002' direct represents '8' with '3523'
3520 -3522 3523 0
-3523 3522 0
-3523 -3520 0
c Var 'max_left_00004_00006_00002' direct represents '9' with '-3522'
3509 3511 3513 3515 3517 3519 3521 3523 -3522 0
c Encoding variable: max_left_00004_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00003' order represents '1' with '3524'
c Var 'max_left_00004_00006_00003' direct represents '1' with '3524'
c Var 'max_left_00004_00006_00003' order represents '2' with '3525'
-3524 3525 0
c Var 'max_left_00004_00006_00003' direct represents '2' with '3526'
3524 -3525 3526 0
-3526 3525 0
-3526 -3524 0
c Var 'max_left_00004_00006_00003' order represents '3' with '3527'
-3525 3527 0
c Var 'max_left_00004_00006_00003' direct represents '3' with '3528'
3525 -3527 3528 0
-3528 3527 0
-3528 -3525 0
c Var 'max_left_00004_00006_00003' order represents '4' with '3529'
-3527 3529 0
c Var 'max_left_00004_00006_00003' direct represents '4' with '3530'
3527 -3529 3530 0
-3530 3529 0
-3530 -3527 0
c Var 'max_left_00004_00006_00003' order represents '5' with '3531'
-3529 3531 0
c Var 'max_left_00004_00006_00003' direct represents '5' with '3532'
3529 -3531 3532 0
-3532 3531 0
-3532 -3529 0
c Var 'max_left_00004_00006_00003' order represents '6' with '3533'
-3531 3533 0
c Var 'max_left_00004_00006_00003' direct represents '6' with '3534'
3531 -3533 3534 0
-3534 3533 0
-3534 -3531 0
c Var 'max_left_00004_00006_00003' order represents '7' with '3535'
-3533 3535 0
c Var 'max_left_00004_00006_00003' direct represents '7' with '3536'
3533 -3535 3536 0
-3536 3535 0
-3536 -3533 0
c Var 'max_left_00004_00006_00003' order represents '8' with '3537'
-3535 3537 0
c Var 'max_left_00004_00006_00003' direct represents '8' with '3538'
3535 -3537 3538 0
-3538 3537 0
-3538 -3535 0
c Var 'max_left_00004_00006_00003' direct represents '9' with '-3537'
3524 3526 3528 3530 3532 3534 3536 3538 -3537 0
c Encoding variable: max_left_00004_00006_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00004' order represents '7' with '3539'
c Var 'max_left_00004_00006_00004' direct represents '7' with '3539'
c Var 'max_left_00004_00006_00004' order represents '8' with '3540'
-3539 3540 0
c Var 'max_left_00004_00006_00004' direct represents '8' with '3541'
3539 -3540 3541 0
-3541 3540 0
-3541 -3539 0
c Var 'max_left_00004_00006_00004' direct represents '9' with '-3540'
3539 3541 -3540 0
c Encoding variable: max_left_00004_00006_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00005' order represents '7' with '3542'
c Var 'max_left_00004_00006_00005' direct represents '7' with '3542'
c Var 'max_left_00004_00006_00005' order represents '8' with '3543'
-3542 3543 0
c Var 'max_left_00004_00006_00005' direct represents '8' with '3544'
3542 -3543 3544 0
-3544 3543 0
-3544 -3542 0
c Var 'max_left_00004_00006_00005' direct represents '9' with '-3543'
3542 3544 -3543 0
c Encoding variable: max_left_00004_00006_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00006' order represents '7' with '3545'
c Var 'max_left_00004_00006_00006' direct represents '7' with '3545'
c Var 'max_left_00004_00006_00006' order represents '8' with '3546'
-3545 3546 0
c Var 'max_left_00004_00006_00006' direct represents '8' with '3547'
3545 -3546 3547 0
-3547 3546 0
-3547 -3545 0
c Var 'max_left_00004_00006_00006' direct represents '9' with '-3546'
3545 3547 -3546 0
c Encoding variable: max_left_00004_00006_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00007' order represents '7' with '3548'
c Var 'max_left_00004_00006_00007' direct represents '7' with '3548'
c Var 'max_left_00004_00006_00007' order represents '8' with '3549'
-3548 3549 0
c Var 'max_left_00004_00006_00007' direct represents '8' with '3550'
3548 -3549 3550 0
-3550 3549 0
-3550 -3548 0
c Var 'max_left_00004_00006_00007' direct represents '9' with '-3549'
3548 3550 -3549 0
c Encoding variable: max_left_00004_00006_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00008' order represents '7' with '3551'
c Var 'max_left_00004_00006_00008' direct represents '7' with '3551'
c Var 'max_left_00004_00006_00008' order represents '8' with '3552'
-3551 3552 0
c Var 'max_left_00004_00006_00008' direct represents '8' with '3553'
3551 -3552 3553 0
-3553 3552 0
-3553 -3551 0
c Var 'max_left_00004_00006_00008' direct represents '9' with '-3552'
3551 3553 -3552 0
c Encoding variable: max_left_00004_00006_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00009' order represents '7' with '3554'
c Var 'max_left_00004_00006_00009' direct represents '7' with '3554'
c Var 'max_left_00004_00006_00009' order represents '8' with '3555'
-3554 3555 0
c Var 'max_left_00004_00006_00009' direct represents '8' with '3556'
3554 -3555 3556 0
-3556 3555 0
-3556 -3554 0
c Var 'max_left_00004_00006_00009' direct represents '9' with '-3555'
3554 3556 -3555 0
c Encoding variable: max_left_00004_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00007_00000' direct represents '0' with '3557'
3557 0
c Encoding variable: max_left_00004_00007_00001 with domain: int(8) (representing constraint )
c Var 'max_left_00004_00007_00001' direct represents '8' with '3558'
3558 0
c Encoding variable: max_left_00004_00007_00002 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00002' direct represents '8' with '-3559'
c Var 'max_left_00004_00007_00002' direct represents '9' with '3559'
c Var 'max_left_00004_00007_00002' order represents '9' with '1'
c Var 'max_left_00004_00007_00002' order represents '8' with '-3559'
c Encoding variable: max_left_00004_00007_00003 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00003' direct represents '8' with '-3560'
c Var 'max_left_00004_00007_00003' direct represents '9' with '3560'
c Var 'max_left_00004_00007_00003' order represents '9' with '1'
c Var 'max_left_00004_00007_00003' order represents '8' with '-3560'
c Encoding variable: max_left_00004_00007_00004 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00004' direct represents '8' with '-3561'
c Var 'max_left_00004_00007_00004' direct represents '9' with '3561'
c Var 'max_left_00004_00007_00004' order represents '9' with '1'
c Var 'max_left_00004_00007_00004' order represents '8' with '-3561'
c Encoding variable: max_left_00004_00007_00005 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00005' direct represents '8' with '-3562'
c Var 'max_left_00004_00007_00005' direct represents '9' with '3562'
c Var 'max_left_00004_00007_00005' order represents '9' with '1'
c Var 'max_left_00004_00007_00005' order represents '8' with '-3562'
c Encoding variable: max_left_00004_00007_00006 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00006' direct represents '8' with '-3563'
c Var 'max_left_00004_00007_00006' direct represents '9' with '3563'
c Var 'max_left_00004_00007_00006' order represents '9' with '1'
c Var 'max_left_00004_00007_00006' order represents '8' with '-3563'
c Encoding variable: max_left_00004_00007_00007 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00007' direct represents '8' with '-3564'
c Var 'max_left_00004_00007_00007' direct represents '9' with '3564'
c Var 'max_left_00004_00007_00007' order represents '9' with '1'
c Var 'max_left_00004_00007_00007' order represents '8' with '-3564'
c Encoding variable: max_left_00004_00007_00008 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00008' direct represents '8' with '-3565'
c Var 'max_left_00004_00007_00008' direct represents '9' with '3565'
c Var 'max_left_00004_00007_00008' order represents '9' with '1'
c Var 'max_left_00004_00007_00008' order represents '8' with '-3565'
c Encoding variable: max_left_00004_00007_00009 with domain: int(8..9) (representing constraint )
c Var 'max_left_00004_00007_00009' direct represents '8' with '-3566'
c Var 'max_left_00004_00007_00009' direct represents '9' with '3566'
c Var 'max_left_00004_00007_00009' order represents '9' with '1'
c Var 'max_left_00004_00007_00009' order represents '8' with '-3566'
c Encoding variable: max_left_00004_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00008_00000' direct represents '0' with '3567'
3567 0
c Encoding variable: max_left_00004_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00001' order represents '1' with '3568'
c Var 'max_left_00004_00008_00001' direct represents '1' with '3568'
c Var 'max_left_00004_00008_00001' order represents '2' with '3569'
-3568 3569 0
c Var 'max_left_00004_00008_00001' direct represents '2' with '3570'
3568 -3569 3570 0
-3570 3569 0
-3570 -3568 0
c Var 'max_left_00004_00008_00001' order represents '3' with '3571'
-3569 3571 0
c Var 'max_left_00004_00008_00001' direct represents '3' with '3572'
3569 -3571 3572 0
-3572 3571 0
-3572 -3569 0
c Var 'max_left_00004_00008_00001' order represents '4' with '3573'
-3571 3573 0
c Var 'max_left_00004_00008_00001' direct represents '4' with '3574'
3571 -3573 3574 0
-3574 3573 0
-3574 -3571 0
c Var 'max_left_00004_00008_00001' order represents '5' with '3575'
-3573 3575 0
c Var 'max_left_00004_00008_00001' direct represents '5' with '3576'
3573 -3575 3576 0
-3576 3575 0
-3576 -3573 0
c Var 'max_left_00004_00008_00001' order represents '6' with '3577'
-3575 3577 0
c Var 'max_left_00004_00008_00001' direct represents '6' with '3578'
3575 -3577 3578 0
-3578 3577 0
-3578 -3575 0
c Var 'max_left_00004_00008_00001' order represents '7' with '3579'
-3577 3579 0
c Var 'max_left_00004_00008_00001' direct represents '7' with '3580'
3577 -3579 3580 0
-3580 3579 0
-3580 -3577 0
c Var 'max_left_00004_00008_00001' order represents '8' with '3581'
-3579 3581 0
c Var 'max_left_00004_00008_00001' direct represents '8' with '3582'
3579 -3581 3582 0
-3582 3581 0
-3582 -3579 0
c Var 'max_left_00004_00008_00001' direct represents '9' with '-3581'
3568 3570 3572 3574 3576 3578 3580 3582 -3581 0
c Encoding variable: max_left_00004_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00002' order represents '1' with '3583'
c Var 'max_left_00004_00008_00002' direct represents '1' with '3583'
c Var 'max_left_00004_00008_00002' order represents '2' with '3584'
-3583 3584 0
c Var 'max_left_00004_00008_00002' direct represents '2' with '3585'
3583 -3584 3585 0
-3585 3584 0
-3585 -3583 0
c Var 'max_left_00004_00008_00002' order represents '3' with '3586'
-3584 3586 0
c Var 'max_left_00004_00008_00002' direct represents '3' with '3587'
3584 -3586 3587 0
-3587 3586 0
-3587 -3584 0
c Var 'max_left_00004_00008_00002' order represents '4' with '3588'
-3586 3588 0
c Var 'max_left_00004_00008_00002' direct represents '4' with '3589'
3586 -3588 3589 0
-3589 3588 0
-3589 -3586 0
c Var 'max_left_00004_00008_00002' order represents '5' with '3590'
-3588 3590 0
c Var 'max_left_00004_00008_00002' direct represents '5' with '3591'
3588 -3590 3591 0
-3591 3590 0
-3591 -3588 0
c Var 'max_left_00004_00008_00002' order represents '6' with '3592'
-3590 3592 0
c Var 'max_left_00004_00008_00002' direct represents '6' with '3593'
3590 -3592 3593 0
-3593 3592 0
-3593 -3590 0
c Var 'max_left_00004_00008_00002' order represents '7' with '3594'
-3592 3594 0
c Var 'max_left_00004_00008_00002' direct represents '7' with '3595'
3592 -3594 3595 0
-3595 3594 0
-3595 -3592 0
c Var 'max_left_00004_00008_00002' order represents '8' with '3596'
-3594 3596 0
c Var 'max_left_00004_00008_00002' direct represents '8' with '3597'
3594 -3596 3597 0
-3597 3596 0
-3597 -3594 0
c Var 'max_left_00004_00008_00002' direct represents '9' with '-3596'
3583 3585 3587 3589 3591 3593 3595 3597 -3596 0
c Encoding variable: max_left_00004_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00003' order represents '1' with '3598'
c Var 'max_left_00004_00008_00003' direct represents '1' with '3598'
c Var 'max_left_00004_00008_00003' order represents '2' with '3599'
-3598 3599 0
c Var 'max_left_00004_00008_00003' direct represents '2' with '3600'
3598 -3599 3600 0
-3600 3599 0
-3600 -3598 0
c Var 'max_left_00004_00008_00003' order represents '3' with '3601'
-3599 3601 0
c Var 'max_left_00004_00008_00003' direct represents '3' with '3602'
3599 -3601 3602 0
-3602 3601 0
-3602 -3599 0
c Var 'max_left_00004_00008_00003' order represents '4' with '3603'
-3601 3603 0
c Var 'max_left_00004_00008_00003' direct represents '4' with '3604'
3601 -3603 3604 0
-3604 3603 0
-3604 -3601 0
c Var 'max_left_00004_00008_00003' order represents '5' with '3605'
-3603 3605 0
c Var 'max_left_00004_00008_00003' direct represents '5' with '3606'
3603 -3605 3606 0
-3606 3605 0
-3606 -3603 0
c Var 'max_left_00004_00008_00003' order represents '6' with '3607'
-3605 3607 0
c Var 'max_left_00004_00008_00003' direct represents '6' with '3608'
3605 -3607 3608 0
-3608 3607 0
-3608 -3605 0
c Var 'max_left_00004_00008_00003' order represents '7' with '3609'
-3607 3609 0
c Var 'max_left_00004_00008_00003' direct represents '7' with '3610'
3607 -3609 3610 0
-3610 3609 0
-3610 -3607 0
c Var 'max_left_00004_00008_00003' order represents '8' with '3611'
-3609 3611 0
c Var 'max_left_00004_00008_00003' direct represents '8' with '3612'
3609 -3611 3612 0
-3612 3611 0
-3612 -3609 0
c Var 'max_left_00004_00008_00003' direct represents '9' with '-3611'
3598 3600 3602 3604 3606 3608 3610 3612 -3611 0
c Encoding variable: max_left_00004_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00004' order represents '1' with '3613'
c Var 'max_left_00004_00008_00004' direct represents '1' with '3613'
c Var 'max_left_00004_00008_00004' order represents '2' with '3614'
-3613 3614 0
c Var 'max_left_00004_00008_00004' direct represents '2' with '3615'
3613 -3614 3615 0
-3615 3614 0
-3615 -3613 0
c Var 'max_left_00004_00008_00004' order represents '3' with '3616'
-3614 3616 0
c Var 'max_left_00004_00008_00004' direct represents '3' with '3617'
3614 -3616 3617 0
-3617 3616 0
-3617 -3614 0
c Var 'max_left_00004_00008_00004' order represents '4' with '3618'
-3616 3618 0
c Var 'max_left_00004_00008_00004' direct represents '4' with '3619'
3616 -3618 3619 0
-3619 3618 0
-3619 -3616 0
c Var 'max_left_00004_00008_00004' order represents '5' with '3620'
-3618 3620 0
c Var 'max_left_00004_00008_00004' direct represents '5' with '3621'
3618 -3620 3621 0
-3621 3620 0
-3621 -3618 0
c Var 'max_left_00004_00008_00004' order represents '6' with '3622'
-3620 3622 0
c Var 'max_left_00004_00008_00004' direct represents '6' with '3623'
3620 -3622 3623 0
-3623 3622 0
-3623 -3620 0
c Var 'max_left_00004_00008_00004' order represents '7' with '3624'
-3622 3624 0
c Var 'max_left_00004_00008_00004' direct represents '7' with '3625'
3622 -3624 3625 0
-3625 3624 0
-3625 -3622 0
c Var 'max_left_00004_00008_00004' order represents '8' with '3626'
-3624 3626 0
c Var 'max_left_00004_00008_00004' direct represents '8' with '3627'
3624 -3626 3627 0
-3627 3626 0
-3627 -3624 0
c Var 'max_left_00004_00008_00004' direct represents '9' with '-3626'
3613 3615 3617 3619 3621 3623 3625 3627 -3626 0
c Encoding variable: max_left_00004_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00005' order represents '1' with '3628'
c Var 'max_left_00004_00008_00005' direct represents '1' with '3628'
c Var 'max_left_00004_00008_00005' order represents '2' with '3629'
-3628 3629 0
c Var 'max_left_00004_00008_00005' direct represents '2' with '3630'
3628 -3629 3630 0
-3630 3629 0
-3630 -3628 0
c Var 'max_left_00004_00008_00005' order represents '3' with '3631'
-3629 3631 0
c Var 'max_left_00004_00008_00005' direct represents '3' with '3632'
3629 -3631 3632 0
-3632 3631 0
-3632 -3629 0
c Var 'max_left_00004_00008_00005' order represents '4' with '3633'
-3631 3633 0
c Var 'max_left_00004_00008_00005' direct represents '4' with '3634'
3631 -3633 3634 0
-3634 3633 0
-3634 -3631 0
c Var 'max_left_00004_00008_00005' order represents '5' with '3635'
-3633 3635 0
c Var 'max_left_00004_00008_00005' direct represents '5' with '3636'
3633 -3635 3636 0
-3636 3635 0
-3636 -3633 0
c Var 'max_left_00004_00008_00005' order represents '6' with '3637'
-3635 3637 0
c Var 'max_left_00004_00008_00005' direct represents '6' with '3638'
3635 -3637 3638 0
-3638 3637 0
-3638 -3635 0
c Var 'max_left_00004_00008_00005' order represents '7' with '3639'
-3637 3639 0
c Var 'max_left_00004_00008_00005' direct represents '7' with '3640'
3637 -3639 3640 0
-3640 3639 0
-3640 -3637 0
c Var 'max_left_00004_00008_00005' order represents '8' with '3641'
-3639 3641 0
c Var 'max_left_00004_00008_00005' direct represents '8' with '3642'
3639 -3641 3642 0
-3642 3641 0
-3642 -3639 0
c Var 'max_left_00004_00008_00005' direct represents '9' with '-3641'
3628 3630 3632 3634 3636 3638 3640 3642 -3641 0
c Encoding variable: max_left_00004_00008_00006 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00006' order represents '3' with '3643'
c Var 'max_left_00004_00008_00006' direct represents '3' with '3643'
c Var 'max_left_00004_00008_00006' order represents '4' with '3644'
-3643 3644 0
c Var 'max_left_00004_00008_00006' direct represents '4' with '3645'
3643 -3644 3645 0
-3645 3644 0
-3645 -3643 0
c Var 'max_left_00004_00008_00006' order represents '5' with '3646'
-3644 3646 0
c Var 'max_left_00004_00008_00006' direct represents '5' with '3647'
3644 -3646 3647 0
-3647 3646 0
-3647 -3644 0
c Var 'max_left_00004_00008_00006' order represents '6' with '3648'
-3646 3648 0
c Var 'max_left_00004_00008_00006' direct represents '6' with '3649'
3646 -3648 3649 0
-3649 3648 0
-3649 -3646 0
c Var 'max_left_00004_00008_00006' order represents '7' with '3650'
-3648 3650 0
c Var 'max_left_00004_00008_00006' direct represents '7' with '3651'
3648 -3650 3651 0
-3651 3650 0
-3651 -3648 0
c Var 'max_left_00004_00008_00006' order represents '8' with '3652'
-3650 3652 0
c Var 'max_left_00004_00008_00006' direct represents '8' with '3653'
3650 -3652 3653 0
-3653 3652 0
-3653 -3650 0
c Var 'max_left_00004_00008_00006' direct represents '9' with '-3652'
3643 3645 3647 3649 3651 3653 -3652 0
c Encoding variable: max_left_00004_00008_00007 with domain: int(3..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00007' order represents '3' with '3654'
c Var 'max_left_00004_00008_00007' direct represents '3' with '3654'
c Var 'max_left_00004_00008_00007' order represents '4' with '3655'
-3654 3655 0
c Var 'max_left_00004_00008_00007' direct represents '4' with '3656'
3654 -3655 3656 0
-3656 3655 0
-3656 -3654 0
c Var 'max_left_00004_00008_00007' order represents '5' with '3657'
-3655 3657 0
c Var 'max_left_00004_00008_00007' direct represents '5' with '3658'
3655 -3657 3658 0
-3658 3657 0
-3658 -3655 0
c Var 'max_left_00004_00008_00007' order represents '6' with '3659'
-3657 3659 0
c Var 'max_left_00004_00008_00007' direct represents '6' with '3660'
3657 -3659 3660 0
-3660 3659 0
-3660 -3657 0
c Var 'max_left_00004_00008_00007' order represents '7' with '3661'
-3659 3661 0
c Var 'max_left_00004_00008_00007' direct represents '7' with '3662'
3659 -3661 3662 0
-3662 3661 0
-3662 -3659 0
c Var 'max_left_00004_00008_00007' order represents '8' with '3663'
-3661 3663 0
c Var 'max_left_00004_00008_00007' direct represents '8' with '3664'
3661 -3663 3664 0
-3664 3663 0
-3664 -3661 0
c Var 'max_left_00004_00008_00007' direct represents '9' with '-3663'
3654 3656 3658 3660 3662 3664 -3663 0
c Encoding variable: max_left_00004_00008_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00008' order represents '7' with '3665'
c Var 'max_left_00004_00008_00008' direct represents '7' with '3665'
c Var 'max_left_00004_00008_00008' order represents '8' with '3666'
-3665 3666 0
c Var 'max_left_00004_00008_00008' direct represents '8' with '3667'
3665 -3666 3667 0
-3667 3666 0
-3667 -3665 0
c Var 'max_left_00004_00008_00008' direct represents '9' with '-3666'
3665 3667 -3666 0
c Encoding variable: max_left_00004_00008_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00009' order represents '7' with '3668'
c Var 'max_left_00004_00008_00009' direct represents '7' with '3668'
c Var 'max_left_00004_00008_00009' order represents '8' with '3669'
-3668 3669 0
c Var 'max_left_00004_00008_00009' direct represents '8' with '3670'
3668 -3669 3670 0
-3670 3669 0
-3670 -3668 0
c Var 'max_left_00004_00008_00009' direct represents '9' with '-3669'
3668 3670 -3669 0
c Encoding variable: max_left_00004_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00009_00000' direct represents '0' with '3671'
3671 0
c Encoding variable: max_left_00004_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00001' order represents '1' with '3672'
c Var 'max_left_00004_00009_00001' direct represents '1' with '3672'
c Var 'max_left_00004_00009_00001' order represents '2' with '3673'
-3672 3673 0
c Var 'max_left_00004_00009_00001' direct represents '2' with '3674'
3672 -3673 3674 0
-3674 3673 0
-3674 -3672 0
c Var 'max_left_00004_00009_00001' order represents '3' with '3675'
-3673 3675 0
c Var 'max_left_00004_00009_00001' direct represents '3' with '3676'
3673 -3675 3676 0
-3676 3675 0
-3676 -3673 0
c Var 'max_left_00004_00009_00001' order represents '4' with '3677'
-3675 3677 0
c Var 'max_left_00004_00009_00001' direct represents '4' with '3678'
3675 -3677 3678 0
-3678 3677 0
-3678 -3675 0
c Var 'max_left_00004_00009_00001' order represents '5' with '3679'
-3677 3679 0
c Var 'max_left_00004_00009_00001' direct represents '5' with '3680'
3677 -3679 3680 0
-3680 3679 0
-3680 -3677 0
c Var 'max_left_00004_00009_00001' order represents '6' with '3681'
-3679 3681 0
c Var 'max_left_00004_00009_00001' direct represents '6' with '3682'
3679 -3681 3682 0
-3682 3681 0
-3682 -3679 0
c Var 'max_left_00004_00009_00001' order represents '7' with '3683'
-3681 3683 0
c Var 'max_left_00004_00009_00001' direct represents '7' with '3684'
3681 -3683 3684 0
-3684 3683 0
-3684 -3681 0
c Var 'max_left_00004_00009_00001' order represents '8' with '3685'
-3683 3685 0
c Var 'max_left_00004_00009_00001' direct represents '8' with '3686'
3683 -3685 3686 0
-3686 3685 0
-3686 -3683 0
c Var 'max_left_00004_00009_00001' direct represents '9' with '-3685'
3672 3674 3676 3678 3680 3682 3684 3686 -3685 0
c Encoding variable: max_left_00004_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00002' order represents '1' with '3687'
c Var 'max_left_00004_00009_00002' direct represents '1' with '3687'
c Var 'max_left_00004_00009_00002' order represents '2' with '3688'
-3687 3688 0
c Var 'max_left_00004_00009_00002' direct represents '2' with '3689'
3687 -3688 3689 0
-3689 3688 0
-3689 -3687 0
c Var 'max_left_00004_00009_00002' order represents '3' with '3690'
-3688 3690 0
c Var 'max_left_00004_00009_00002' direct represents '3' with '3691'
3688 -3690 3691 0
-3691 3690 0
-3691 -3688 0
c Var 'max_left_00004_00009_00002' order represents '4' with '3692'
-3690 3692 0
c Var 'max_left_00004_00009_00002' direct represents '4' with '3693'
3690 -3692 3693 0
-3693 3692 0
-3693 -3690 0
c Var 'max_left_00004_00009_00002' order represents '5' with '3694'
-3692 3694 0
c Var 'max_left_00004_00009_00002' direct represents '5' with '3695'
3692 -3694 3695 0
-3695 3694 0
-3695 -3692 0
c Var 'max_left_00004_00009_00002' order represents '6' with '3696'
-3694 3696 0
c Var 'max_left_00004_00009_00002' direct represents '6' with '3697'
3694 -3696 3697 0
-3697 3696 0
-3697 -3694 0
c Var 'max_left_00004_00009_00002' order represents '7' with '3698'
-3696 3698 0
c Var 'max_left_00004_00009_00002' direct represents '7' with '3699'
3696 -3698 3699 0
-3699 3698 0
-3699 -3696 0
c Var 'max_left_00004_00009_00002' order represents '8' with '3700'
-3698 3700 0
c Var 'max_left_00004_00009_00002' direct represents '8' with '3701'
3698 -3700 3701 0
-3701 3700 0
-3701 -3698 0
c Var 'max_left_00004_00009_00002' direct represents '9' with '-3700'
3687 3689 3691 3693 3695 3697 3699 3701 -3700 0
c Encoding variable: max_left_00004_00009_00003 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00003' order represents '7' with '3702'
c Var 'max_left_00004_00009_00003' direct represents '7' with '3702'
c Var 'max_left_00004_00009_00003' order represents '8' with '3703'
-3702 3703 0
c Var 'max_left_00004_00009_00003' direct represents '8' with '3704'
3702 -3703 3704 0
-3704 3703 0
-3704 -3702 0
c Var 'max_left_00004_00009_00003' direct represents '9' with '-3703'
3702 3704 -3703 0
c Encoding variable: max_left_00004_00009_00004 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00004' order represents '7' with '3705'
c Var 'max_left_00004_00009_00004' direct represents '7' with '3705'
c Var 'max_left_00004_00009_00004' order represents '8' with '3706'
-3705 3706 0
c Var 'max_left_00004_00009_00004' direct represents '8' with '3707'
3705 -3706 3707 0
-3707 3706 0
-3707 -3705 0
c Var 'max_left_00004_00009_00004' direct represents '9' with '-3706'
3705 3707 -3706 0
c Encoding variable: max_left_00004_00009_00005 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00005' order represents '7' with '3708'
c Var 'max_left_00004_00009_00005' direct represents '7' with '3708'
c Var 'max_left_00004_00009_00005' order represents '8' with '3709'
-3708 3709 0
c Var 'max_left_00004_00009_00005' direct represents '8' with '3710'
3708 -3709 3710 0
-3710 3709 0
-3710 -3708 0
c Var 'max_left_00004_00009_00005' direct represents '9' with '-3709'
3708 3710 -3709 0
c Encoding variable: max_left_00004_00009_00006 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00006' order represents '7' with '3711'
c Var 'max_left_00004_00009_00006' direct represents '7' with '3711'
c Var 'max_left_00004_00009_00006' order represents '8' with '3712'
-3711 3712 0
c Var 'max_left_00004_00009_00006' direct represents '8' with '3713'
3711 -3712 3713 0
-3713 3712 0
-3713 -3711 0
c Var 'max_left_00004_00009_00006' direct represents '9' with '-3712'
3711 3713 -3712 0
c Encoding variable: max_left_00004_00009_00007 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00007' order represents '7' with '3714'
c Var 'max_left_00004_00009_00007' direct represents '7' with '3714'
c Var 'max_left_00004_00009_00007' order represents '8' with '3715'
-3714 3715 0
c Var 'max_left_00004_00009_00007' direct represents '8' with '3716'
3714 -3715 3716 0
-3716 3715 0
-3716 -3714 0
c Var 'max_left_00004_00009_00007' direct represents '9' with '-3715'
3714 3716 -3715 0
c Encoding variable: max_left_00004_00009_00008 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00008' order represents '7' with '3717'
c Var 'max_left_00004_00009_00008' direct represents '7' with '3717'
c Var 'max_left_00004_00009_00008' order represents '8' with '3718'
-3717 3718 0
c Var 'max_left_00004_00009_00008' direct represents '8' with '3719'
3717 -3718 3719 0
-3719 3718 0
-3719 -3717 0
c Var 'max_left_00004_00009_00008' direct represents '9' with '-3718'
3717 3719 -3718 0
c Encoding variable: max_left_00004_00009_00009 with domain: int(7..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00009' order represents '7' with '3720'
c Var 'max_left_00004_00009_00009' direct represents '7' with '3720'
c Var 'max_left_00004_00009_00009' order represents '8' with '3721'
-3720 3721 0
c Var 'max_left_00004_00009_00009' direct represents '8' with '3722'
3720 -3721 3722 0
-3722 3721 0
-3722 -3720 0
c Var 'max_left_00004_00009_00009' direct represents '9' with '-3721'
3720 3722 -3721 0
c Encoding variable: sky_left_00001_00001 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00001' order represents '1' with '3723'
c Var 'sky_left_00001_00001' direct represents '1' with '3723'
c Var 'sky_left_00001_00001' order represents '2' with '3724'
-3723 3724 0
c Var 'sky_left_00001_00001' direct represents '2' with '3725'
3723 -3724 3725 0
-3725 3724 0
-3725 -3723 0
c Var 'sky_left_00001_00001' order represents '3' with '3726'
-3724 3726 0
c Var 'sky_left_00001_00001' direct represents '3' with '3727'
3724 -3726 3727 0
-3727 3726 0
-3727 -3724 0
c Var 'sky_left_00001_00001' order represents '4' with '3728'
-3726 3728 0
c Var 'sky_left_00001_00001' direct represents '4' with '3729'
3726 -3728 3729 0
-3729 3728 0
-3729 -3726 0
c Var 'sky_left_00001_00001' order represents '5' with '3730'
-3728 3730 0
c Var 'sky_left_00001_00001' direct represents '5' with '3731'
3728 -3730 3731 0
-3731 3730 0
-3731 -3728 0
c Var 'sky_left_00001_00001' order represents '6' with '3732'
-3730 3732 0
c Var 'sky_left_00001_00001' direct represents '6' with '3733'
3730 -3732 3733 0
-3733 3732 0
-3733 -3730 0
c Var 'sky_left_00001_00001' order represents '7' with '3734'
-3732 3734 0
c Var 'sky_left_00001_00001' direct represents '7' with '3735'
3732 -3734 3735 0
-3735 3734 0
-3735 -3732 0
c Var 'sky_left_00001_00001' direct represents '8' with '-3734'
3723 3725 3727 3729 3731 3733 3735 -3734 0
c Encoding variable: sky_left_00001_00002 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00002' order represents '1' with '3736'
c Var 'sky_left_00001_00002' direct represents '1' with '3736'
c Var 'sky_left_00001_00002' order represents '2' with '3737'
-3736 3737 0
c Var 'sky_left_00001_00002' direct represents '2' with '3738'
3736 -3737 3738 0
-3738 3737 0
-3738 -3736 0
c Var 'sky_left_00001_00002' order represents '3' with '3739'
-3737 3739 0
c Var 'sky_left_00001_00002' direct represents '3' with '3740'
3737 -3739 3740 0
-3740 3739 0
-3740 -3737 0
c Var 'sky_left_00001_00002' order represents '4' with '3741'
-3739 3741 0
c Var 'sky_left_00001_00002' direct represents '4' with '3742'
3739 -3741 3742 0
-3742 3741 0
-3742 -3739 0
c Var 'sky_left_00001_00002' order represents '5' with '3743'
-3741 3743 0
c Var 'sky_left_00001_00002' direct represents '5' with '3744'
3741 -3743 3744 0
-3744 3743 0
-3744 -3741 0
c Var 'sky_left_00001_00002' order represents '6' with '3745'
-3743 3745 0
c Var 'sky_left_00001_00002' direct represents '6' with '3746'
3743 -3745 3746 0
-3746 3745 0
-3746 -3743 0
c Var 'sky_left_00001_00002' order represents '7' with '3747'
-3745 3747 0
c Var 'sky_left_00001_00002' direct represents '7' with '3748'
3745 -3747 3748 0
-3748 3747 0
-3748 -3745 0
c Var 'sky_left_00001_00002' direct represents '8' with '-3747'
3736 3738 3740 3742 3744 3746 3748 -3747 0
c Encoding variable: sky_left_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00003' order represents '1' with '3749'
c Var 'sky_left_00001_00003' direct represents '1' with '3749'
c Var 'sky_left_00001_00003' order represents '2' with '3750'
-3749 3750 0
c Var 'sky_left_00001_00003' direct represents '2' with '3751'
3749 -3750 3751 0
-3751 3750 0
-3751 -3749 0
c Var 'sky_left_00001_00003' order represents '3' with '3752'
-3750 3752 0
c Var 'sky_left_00001_00003' direct represents '3' with '3753'
3750 -3752 3753 0
-3753 3752 0
-3753 -3750 0
c Var 'sky_left_00001_00003' order represents '4' with '3754'
-3752 3754 0
c Var 'sky_left_00001_00003' direct represents '4' with '3755'
3752 -3754 3755 0
-3755 3754 0
-3755 -3752 0
c Var 'sky_left_00001_00003' order represents '5' with '3756'
-3754 3756 0
c Var 'sky_left_00001_00003' direct represents '5' with '3757'
3754 -3756 3757 0
-3757 3756 0
-3757 -3754 0
c Var 'sky_left_00001_00003' order represents '6' with '3758'
-3756 3758 0
c Var 'sky_left_00001_00003' direct represents '6' with '3759'
3756 -3758 3759 0
-3759 3758 0
-3759 -3756 0
c Var 'sky_left_00001_00003' order represents '7' with '3760'
-3758 3760 0
c Var 'sky_left_00001_00003' direct represents '7' with '3761'
3758 -3760 3761 0
-3761 3760 0
-3761 -3758 0
c Var 'sky_left_00001_00003' order represents '8' with '3762'
-3760 3762 0
c Var 'sky_left_00001_00003' direct represents '8' with '3763'
3760 -3762 3763 0
-3763 3762 0
-3763 -3760 0
c Var 'sky_left_00001_00003' direct represents '9' with '-3762'
3749 3751 3753 3755 3757 3759 3761 3763 -3762 0
c Encoding variable: sky_left_00001_00004 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00004' order represents '1' with '3764'
c Var 'sky_left_00001_00004' direct represents '1' with '3764'
c Var 'sky_left_00001_00004' order represents '2' with '3765'
-3764 3765 0
c Var 'sky_left_00001_00004' direct represents '2' with '3766'
3764 -3765 3766 0
-3766 3765 0
-3766 -3764 0
c Var 'sky_left_00001_00004' order represents '3' with '3767'
-3765 3767 0
c Var 'sky_left_00001_00004' direct represents '3' with '3768'
3765 -3767 3768 0
-3768 3767 0
-3768 -3765 0
c Var 'sky_left_00001_00004' order represents '4' with '3769'
-3767 3769 0
c Var 'sky_left_00001_00004' direct represents '4' with '3770'
3767 -3769 3770 0
-3770 3769 0
-3770 -3767 0
c Var 'sky_left_00001_00004' order represents '5' with '3771'
-3769 3771 0
c Var 'sky_left_00001_00004' direct represents '5' with '3772'
3769 -3771 3772 0
-3772 3771 0
-3772 -3769 0
c Var 'sky_left_00001_00004' order represents '6' with '3773'
-3771 3773 0
c Var 'sky_left_00001_00004' direct represents '6' with '3774'
3771 -3773 3774 0
-3774 3773 0
-3774 -3771 0
c Var 'sky_left_00001_00004' direct represents '7' with '-3773'
3764 3766 3768 3770 3772 3774 -3773 0
c Encoding variable: sky_left_00001_00005 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00005' order represents '1' with '3775'
c Var 'sky_left_00001_00005' direct represents '1' with '3775'
c Var 'sky_left_00001_00005' order represents '2' with '3776'
-3775 3776 0
c Var 'sky_left_00001_00005' direct represents '2' with '3777'
3775 -3776 3777 0
-3777 3776 0
-3777 -3775 0
c Var 'sky_left_00001_00005' order represents '3' with '3778'
-3776 3778 0
c Var 'sky_left_00001_00005' direct represents '3' with '3779'
3776 -3778 3779 0
-3779 3778 0
-3779 -3776 0
c Var 'sky_left_00001_00005' order represents '4' with '3780'
-3778 3780 0
c Var 'sky_left_00001_00005' direct represents '4' with '3781'
3778 -3780 3781 0
-3781 3780 0
-3781 -3778 0
c Var 'sky_left_00001_00005' order represents '5' with '3782'
-3780 3782 0
c Var 'sky_left_00001_00005' direct represents '5' with '3783'
3780 -3782 3783 0
-3783 3782 0
-3783 -3780 0
c Var 'sky_left_00001_00005' order represents '6' with '3784'
-3782 3784 0
c Var 'sky_left_00001_00005' direct represents '6' with '3785'
3782 -3784 3785 0
-3785 3784 0
-3785 -3782 0
c Var 'sky_left_00001_00005' direct represents '7' with '-3784'
3775 3777 3779 3781 3783 3785 -3784 0
c Encoding variable: sky_left_00001_00006 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00006' order represents '1' with '3786'
c Var 'sky_left_00001_00006' direct represents '1' with '3786'
c Var 'sky_left_00001_00006' order represents '2' with '3787'
-3786 3787 0
c Var 'sky_left_00001_00006' direct represents '2' with '3788'
3786 -3787 3788 0
-3788 3787 0
-3788 -3786 0
c Var 'sky_left_00001_00006' order represents '3' with '3789'
-3787 3789 0
c Var 'sky_left_00001_00006' direct represents '3' with '3790'
3787 -3789 3790 0
-3790 3789 0
-3790 -3787 0
c Var 'sky_left_00001_00006' order represents '4' with '3791'
-3789 3791 0
c Var 'sky_left_00001_00006' direct represents '4' with '3792'
3789 -3791 3792 0
-3792 3791 0
-3792 -3789 0
c Var 'sky_left_00001_00006' order represents '5' with '3793'
-3791 3793 0
c Var 'sky_left_00001_00006' direct represents '5' with '3794'
3791 -3793 3794 0
-3794 3793 0
-3794 -3791 0
c Var 'sky_left_00001_00006' order represents '6' with '3795'
-3793 3795 0
c Var 'sky_left_00001_00006' direct represents '6' with '3796'
3793 -3795 3796 0
-3796 3795 0
-3796 -3793 0
c Var 'sky_left_00001_00006' direct represents '7' with '-3795'
3786 3788 3790 3792 3794 3796 -3795 0
c Encoding variable: sky_left_00001_00007 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00007' order represents '1' with '3797'
c Var 'sky_left_00001_00007' direct represents '1' with '3797'
c Var 'sky_left_00001_00007' order represents '2' with '3798'
-3797 3798 0
c Var 'sky_left_00001_00007' direct represents '2' with '3799'
3797 -3798 3799 0
-3799 3798 0
-3799 -3797 0
c Var 'sky_left_00001_00007' order represents '3' with '3800'
-3798 3800 0
c Var 'sky_left_00001_00007' direct represents '3' with '3801'
3798 -3800 3801 0
-3801 3800 0
-3801 -3798 0
c Var 'sky_left_00001_00007' order represents '4' with '3802'
-3800 3802 0
c Var 'sky_left_00001_00007' direct represents '4' with '3803'
3800 -3802 3803 0
-3803 3802 0
-3803 -3800 0
c Var 'sky_left_00001_00007' order represents '5' with '3804'
-3802 3804 0
c Var 'sky_left_00001_00007' direct represents '5' with '3805'
3802 -3804 3805 0
-3805 3804 0
-3805 -3802 0
c Var 'sky_left_00001_00007' order represents '6' with '3806'
-3804 3806 0
c Var 'sky_left_00001_00007' direct represents '6' with '3807'
3804 -3806 3807 0
-3807 3806 0
-3807 -3804 0
c Var 'sky_left_00001_00007' order represents '7' with '3808'
-3806 3808 0
c Var 'sky_left_00001_00007' direct represents '7' with '3809'
3806 -3808 3809 0
-3809 3808 0
-3809 -3806 0
c Var 'sky_left_00001_00007' direct represents '8' with '-3808'
3797 3799 3801 3803 3805 3807 3809 -3808 0
c Encoding variable: sky_left_00001_00008 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00008' order represents '1' with '3810'
c Var 'sky_left_00001_00008' direct represents '1' with '3810'
c Var 'sky_left_00001_00008' order represents '2' with '3811'
-3810 3811 0
c Var 'sky_left_00001_00008' direct represents '2' with '3812'
3810 -3811 3812 0
-3812 3811 0
-3812 -3810 0
c Var 'sky_left_00001_00008' order represents '3' with '3813'
-3811 3813 0
c Var 'sky_left_00001_00008' direct represents '3' with '3814'
3811 -3813 3814 0
-3814 3813 0
-3814 -3811 0
c Var 'sky_left_00001_00008' order represents '4' with '3815'
-3813 3815 0
c Var 'sky_left_00001_00008' direct represents '4' with '3816'
3813 -3815 3816 0
-3816 3815 0
-3816 -3813 0
c Var 'sky_left_00001_00008' order represents '5' with '3817'
-3815 3817 0
c Var 'sky_left_00001_00008' direct represents '5' with '3818'
3815 -3817 3818 0
-3818 3817 0
-3818 -3815 0
c Var 'sky_left_00001_00008' order represents '6' with '3819'
-3817 3819 0
c Var 'sky_left_00001_00008' direct represents '6' with '3820'
3817 -3819 3820 0
-3820 3819 0
-3820 -3817 0
c Var 'sky_left_00001_00008' direct represents '7' with '-3819'
3810 3812 3814 3816 3818 3820 -3819 0
c Encoding variable: sky_left_00001_00009 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00009' order represents '1' with '3821'
c Var 'sky_left_00001_00009' direct represents '1' with '3821'
c Var 'sky_left_00001_00009' order represents '2' with '3822'
-3821 3822 0
c Var 'sky_left_00001_00009' direct represents '2' with '3823'
3821 -3822 3823 0
-3823 3822 0
-3823 -3821 0
c Var 'sky_left_00001_00009' order represents '3' with '3824'
-3822 3824 0
c Var 'sky_left_00001_00009' direct represents '3' with '3825'
3822 -3824 3825 0
-3825 3824 0
-3825 -3822 0
c Var 'sky_left_00001_00009' order represents '4' with '3826'
-3824 3826 0
c Var 'sky_left_00001_00009' direct represents '4' with '3827'
3824 -3826 3827 0
-3827 3826 0
-3827 -3824 0
c Var 'sky_left_00001_00009' order represents '5' with '3828'
-3826 3828 0
c Var 'sky_left_00001_00009' direct represents '5' with '3829'
3826 -3828 3829 0
-3829 3828 0
-3829 -3826 0
c Var 'sky_left_00001_00009' order represents '6' with '3830'
-3828 3830 0
c Var 'sky_left_00001_00009' direct represents '6' with '3831'
3828 -3830 3831 0
-3831 3830 0
-3831 -3828 0
c Var 'sky_left_00001_00009' direct represents '7' with '-3830'
3821 3823 3825 3827 3829 3831 -3830 0
c Encoding variable: sky_left_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00001' order represents '1' with '3832'
c Var 'sky_left_00002_00001' direct represents '1' with '3832'
c Var 'sky_left_00002_00001' order represents '2' with '3833'
-3832 3833 0
c Var 'sky_left_00002_00001' direct represents '2' with '3834'
3832 -3833 3834 0
-3834 3833 0
-3834 -3832 0
c Var 'sky_left_00002_00001' order represents '3' with '3835'
-3833 3835 0
c Var 'sky_left_00002_00001' direct represents '3' with '3836'
3833 -3835 3836 0
-3836 3835 0
-3836 -3833 0
c Var 'sky_left_00002_00001' order represents '4' with '3837'
-3835 3837 0
c Var 'sky_left_00002_00001' direct represents '4' with '3838'
3835 -3837 3838 0
-3838 3837 0
-3838 -3835 0
c Var 'sky_left_00002_00001' order represents '5' with '3839'
-3837 3839 0
c Var 'sky_left_00002_00001' direct represents '5' with '3840'
3837 -3839 3840 0
-3840 3839 0
-3840 -3837 0
c Var 'sky_left_00002_00001' order represents '6' with '3841'
-3839 3841 0
c Var 'sky_left_00002_00001' direct represents '6' with '3842'
3839 -3841 3842 0
-3842 3841 0
-3842 -3839 0
c Var 'sky_left_00002_00001' order represents '7' with '3843'
-3841 3843 0
c Var 'sky_left_00002_00001' direct represents '7' with '3844'
3841 -3843 3844 0
-3844 3843 0
-3844 -3841 0
c Var 'sky_left_00002_00001' order represents '8' with '3845'
-3843 3845 0
c Var 'sky_left_00002_00001' direct represents '8' with '3846'
3843 -3845 3846 0
-3846 3845 0
-3846 -3843 0
c Var 'sky_left_00002_00001' direct represents '9' with '-3845'
3832 3834 3836 3838 3840 3842 3844 3846 -3845 0
c Encoding variable: sky_left_00002_00002 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00002' order represents '1' with '3847'
c Var 'sky_left_00002_00002' direct represents '1' with '3847'
c Var 'sky_left_00002_00002' order represents '2' with '3848'
-3847 3848 0
c Var 'sky_left_00002_00002' direct represents '2' with '3849'
3847 -3848 3849 0
-3849 3848 0
-3849 -3847 0
c Var 'sky_left_00002_00002' order represents '3' with '3850'
-3848 3850 0
c Var 'sky_left_00002_00002' direct represents '3' with '3851'
3848 -3850 3851 0
-3851 3850 0
-3851 -3848 0
c Var 'sky_left_00002_00002' order represents '4' with '3852'
-3850 3852 0
c Var 'sky_left_00002_00002' direct represents '4' with '3853'
3850 -3852 3853 0
-3853 3852 0
-3853 -3850 0
c Var 'sky_left_00002_00002' order represents '5' with '3854'
-3852 3854 0
c Var 'sky_left_00002_00002' direct represents '5' with '3855'
3852 -3854 3855 0
-3855 3854 0
-3855 -3852 0
c Var 'sky_left_00002_00002' order represents '6' with '3856'
-3854 3856 0
c Var 'sky_left_00002_00002' direct represents '6' with '3857'
3854 -3856 3857 0
-3857 3856 0
-3857 -3854 0
c Var 'sky_left_00002_00002' order represents '7' with '3858'
-3856 3858 0
c Var 'sky_left_00002_00002' direct represents '7' with '3859'
3856 -3858 3859 0
-3859 3858 0
-3859 -3856 0
c Var 'sky_left_00002_00002' direct represents '8' with '-3858'
3847 3849 3851 3853 3855 3857 3859 -3858 0
c Encoding variable: sky_left_00002_00003 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00003' order represents '1' with '3860'
c Var 'sky_left_00002_00003' direct represents '1' with '3860'
c Var 'sky_left_00002_00003' order represents '2' with '3861'
-3860 3861 0
c Var 'sky_left_00002_00003' direct represents '2' with '3862'
3860 -3861 3862 0
-3862 3861 0
-3862 -3860 0
c Var 'sky_left_00002_00003' order represents '3' with '3863'
-3861 3863 0
c Var 'sky_left_00002_00003' direct represents '3' with '3864'
3861 -3863 3864 0
-3864 3863 0
-3864 -3861 0
c Var 'sky_left_00002_00003' order represents '4' with '3865'
-3863 3865 0
c Var 'sky_left_00002_00003' direct represents '4' with '3866'
3863 -3865 3866 0
-3866 3865 0
-3866 -3863 0
c Var 'sky_left_00002_00003' order represents '5' with '3867'
-3865 3867 0
c Var 'sky_left_00002_00003' direct represents '5' with '3868'
3865 -3867 3868 0
-3868 3867 0
-3868 -3865 0
c Var 'sky_left_00002_00003' order represents '6' with '3869'
-3867 3869 0
c Var 'sky_left_00002_00003' direct represents '6' with '3870'
3867 -3869 3870 0
-3870 3869 0
-3870 -3867 0
c Var 'sky_left_00002_00003' order represents '7' with '3871'
-3869 3871 0
c Var 'sky_left_00002_00003' direct represents '7' with '3872'
3869 -3871 3872 0
-3872 3871 0
-3872 -3869 0
c Var 'sky_left_00002_00003' direct represents '8' with '-3871'
3860 3862 3864 3866 3868 3870 3872 -3871 0
c Encoding variable: sky_left_00002_00004 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00004' order represents '1' with '3873'
c Var 'sky_left_00002_00004' direct represents '1' with '3873'
c Var 'sky_left_00002_00004' order represents '2' with '3874'
-3873 3874 0
c Var 'sky_left_00002_00004' direct represents '2' with '3875'
3873 -3874 3875 0
-3875 3874 0
-3875 -3873 0
c Var 'sky_left_00002_00004' order represents '3' with '3876'
-3874 3876 0
c Var 'sky_left_00002_00004' direct represents '3' with '3877'
3874 -3876 3877 0
-3877 3876 0
-3877 -3874 0
c Var 'sky_left_00002_00004' order represents '4' with '3878'
-3876 3878 0
c Var 'sky_left_00002_00004' direct represents '4' with '3879'
3876 -3878 3879 0
-3879 3878 0
-3879 -3876 0
c Var 'sky_left_00002_00004' order represents '5' with '3880'
-3878 3880 0
c Var 'sky_left_00002_00004' direct represents '5' with '3881'
3878 -3880 3881 0
-3881 3880 0
-3881 -3878 0
c Var 'sky_left_00002_00004' order represents '6' with '3882'
-3880 3882 0
c Var 'sky_left_00002_00004' direct represents '6' with '3883'
3880 -3882 3883 0
-3883 3882 0
-3883 -3880 0
c Var 'sky_left_00002_00004' direct represents '7' with '-3882'
3873 3875 3877 3879 3881 3883 -3882 0
c Encoding variable: sky_left_00002_00005 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00005' order represents '1' with '3884'
c Var 'sky_left_00002_00005' direct represents '1' with '3884'
c Var 'sky_left_00002_00005' order represents '2' with '3885'
-3884 3885 0
c Var 'sky_left_00002_00005' direct represents '2' with '3886'
3884 -3885 3886 0
-3886 3885 0
-3886 -3884 0
c Var 'sky_left_00002_00005' order represents '3' with '3887'
-3885 3887 0
c Var 'sky_left_00002_00005' direct represents '3' with '3888'
3885 -3887 3888 0
-3888 3887 0
-3888 -3885 0
c Var 'sky_left_00002_00005' order represents '4' with '3889'
-3887 3889 0
c Var 'sky_left_00002_00005' direct represents '4' with '3890'
3887 -3889 3890 0
-3890 3889 0
-3890 -3887 0
c Var 'sky_left_00002_00005' order represents '5' with '3891'
-3889 3891 0
c Var 'sky_left_00002_00005' direct represents '5' with '3892'
3889 -3891 3892 0
-3892 3891 0
-3892 -3889 0
c Var 'sky_left_00002_00005' order represents '6' with '3893'
-3891 3893 0
c Var 'sky_left_00002_00005' direct represents '6' with '3894'
3891 -3893 3894 0
-3894 3893 0
-3894 -3891 0
c Var 'sky_left_00002_00005' direct represents '7' with '-3893'
3884 3886 3888 3890 3892 3894 -3893 0
c Encoding variable: sky_left_00002_00006 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00006' order represents '1' with '3895'
c Var 'sky_left_00002_00006' direct represents '1' with '3895'
c Var 'sky_left_00002_00006' order represents '2' with '3896'
-3895 3896 0
c Var 'sky_left_00002_00006' direct represents '2' with '3897'
3895 -3896 3897 0
-3897 3896 0
-3897 -3895 0
c Var 'sky_left_00002_00006' order represents '3' with '3898'
-3896 3898 0
c Var 'sky_left_00002_00006' direct represents '3' with '3899'
3896 -3898 3899 0
-3899 3898 0
-3899 -3896 0
c Var 'sky_left_00002_00006' order represents '4' with '3900'
-3898 3900 0
c Var 'sky_left_00002_00006' direct represents '4' with '3901'
3898 -3900 3901 0
-3901 3900 0
-3901 -3898 0
c Var 'sky_left_00002_00006' order represents '5' with '3902'
-3900 3902 0
c Var 'sky_left_00002_00006' direct represents '5' with '3903'
3900 -3902 3903 0
-3903 3902 0
-3903 -3900 0
c Var 'sky_left_00002_00006' order represents '6' with '3904'
-3902 3904 0
c Var 'sky_left_00002_00006' direct represents '6' with '3905'
3902 -3904 3905 0
-3905 3904 0
-3905 -3902 0
c Var 'sky_left_00002_00006' order represents '7' with '3906'
-3904 3906 0
c Var 'sky_left_00002_00006' direct represents '7' with '3907'
3904 -3906 3907 0
-3907 3906 0
-3907 -3904 0
c Var 'sky_left_00002_00006' direct represents '8' with '-3906'
3895 3897 3899 3901 3903 3905 3907 -3906 0
c Encoding variable: sky_left_00002_00007 with domain: int(2..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00007' order represents '2' with '3908'
c Var 'sky_left_00002_00007' direct represents '2' with '3908'
c Var 'sky_left_00002_00007' order represents '3' with '3909'
-3908 3909 0
c Var 'sky_left_00002_00007' direct represents '3' with '3910'
3908 -3909 3910 0
-3910 3909 0
-3910 -3908 0
c Var 'sky_left_00002_00007' order represents '4' with '3911'
-3909 3911 0
c Var 'sky_left_00002_00007' direct represents '4' with '3912'
3909 -3911 3912 0
-3912 3911 0
-3912 -3909 0
c Var 'sky_left_00002_00007' order represents '5' with '3913'
-3911 3913 0
c Var 'sky_left_00002_00007' direct represents '5' with '3914'
3911 -3913 3914 0
-3914 3913 0
-3914 -3911 0
c Var 'sky_left_00002_00007' order represents '6' with '3915'
-3913 3915 0
c Var 'sky_left_00002_00007' direct represents '6' with '3916'
3913 -3915 3916 0
-3916 3915 0
-3916 -3913 0
c Var 'sky_left_00002_00007' direct represents '7' with '-3915'
3908 3910 3912 3914 3916 -3915 0
c Encoding variable: sky_left_00002_00008 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00008' order represents '1' with '3917'
c Var 'sky_left_00002_00008' direct represents '1' with '3917'
c Var 'sky_left_00002_00008' order represents '2' with '3918'
-3917 3918 0
c Var 'sky_left_00002_00008' direct represents '2' with '3919'
3917 -3918 3919 0
-3919 3918 0
-3919 -3917 0
c Var 'sky_left_00002_00008' order represents '3' with '3920'
-3918 3920 0
c Var 'sky_left_00002_00008' direct represents '3' with '3921'
3918 -3920 3921 0
-3921 3920 0
-3921 -3918 0
c Var 'sky_left_00002_00008' order represents '4' with '3922'
-3920 3922 0
c Var 'sky_left_00002_00008' direct represents '4' with '3923'
3920 -3922 3923 0
-3923 3922 0
-3923 -3920 0
c Var 'sky_left_00002_00008' order represents '5' with '3924'
-3922 3924 0
c Var 'sky_left_00002_00008' direct represents '5' with '3925'
3922 -3924 3925 0
-3925 3924 0
-3925 -3922 0
c Var 'sky_left_00002_00008' order represents '6' with '3926'
-3924 3926 0
c Var 'sky_left_00002_00008' direct represents '6' with '3927'
3924 -3926 3927 0
-3927 3926 0
-3927 -3924 0
c Var 'sky_left_00002_00008' direct represents '7' with '-3926'
3917 3919 3921 3923 3925 3927 -3926 0
c Encoding variable: sky_left_00002_00009 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00009' order represents '1' with '3928'
c Var 'sky_left_00002_00009' direct represents '1' with '3928'
c Var 'sky_left_00002_00009' order represents '2' with '3929'
-3928 3929 0
c Var 'sky_left_00002_00009' direct represents '2' with '3930'
3928 -3929 3930 0
-3930 3929 0
-3930 -3928 0
c Var 'sky_left_00002_00009' order represents '3' with '3931'
-3929 3931 0
c Var 'sky_left_00002_00009' direct represents '3' with '3932'
3929 -3931 3932 0
-3932 3931 0
-3932 -3929 0
c Var 'sky_left_00002_00009' order represents '4' with '3933'
-3931 3933 0
c Var 'sky_left_00002_00009' direct represents '4' with '3934'
3931 -3933 3934 0
-3934 3933 0
-3934 -3931 0
c Var 'sky_left_00002_00009' order represents '5' with '3935'
-3933 3935 0
c Var 'sky_left_00002_00009' direct represents '5' with '3936'
3933 -3935 3936 0
-3936 3935 0
-3936 -3933 0
c Var 'sky_left_00002_00009' order represents '6' with '3937'
-3935 3937 0
c Var 'sky_left_00002_00009' direct represents '6' with '3938'
3935 -3937 3938 0
-3938 3937 0
-3938 -3935 0
c Var 'sky_left_00002_00009' order represents '7' with '3939'
-3937 3939 0
c Var 'sky_left_00002_00009' direct represents '7' with '3940'
3937 -3939 3940 0
-3940 3939 0
-3940 -3937 0
c Var 'sky_left_00002_00009' direct represents '8' with '-3939'
3928 3930 3932 3934 3936 3938 3940 -3939 0
c Encoding variable: sky_left_00003_00001 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00001' order represents '1' with '3941'
c Var 'sky_left_00003_00001' direct represents '1' with '3941'
c Var 'sky_left_00003_00001' order represents '2' with '3942'
-3941 3942 0
c Var 'sky_left_00003_00001' direct represents '2' with '3943'
3941 -3942 3943 0
-3943 3942 0
-3943 -3941 0
c Var 'sky_left_00003_00001' order represents '3' with '3944'
-3942 3944 0
c Var 'sky_left_00003_00001' direct represents '3' with '3945'
3942 -3944 3945 0
-3945 3944 0
-3945 -3942 0
c Var 'sky_left_00003_00001' order represents '4' with '3946'
-3944 3946 0
c Var 'sky_left_00003_00001' direct represents '4' with '3947'
3944 -3946 3947 0
-3947 3946 0
-3947 -3944 0
c Var 'sky_left_00003_00001' order represents '5' with '3948'
-3946 3948 0
c Var 'sky_left_00003_00001' direct represents '5' with '3949'
3946 -3948 3949 0
-3949 3948 0
-3949 -3946 0
c Var 'sky_left_00003_00001' order represents '6' with '3950'
-3948 3950 0
c Var 'sky_left_00003_00001' direct represents '6' with '3951'
3948 -3950 3951 0
-3951 3950 0
-3951 -3948 0
c Var 'sky_left_00003_00001' order represents '7' with '3952'
-3950 3952 0
c Var 'sky_left_00003_00001' direct represents '7' with '3953'
3950 -3952 3953 0
-3953 3952 0
-3953 -3950 0
c Var 'sky_left_00003_00001' direct represents '8' with '-3952'
3941 3943 3945 3947 3949 3951 3953 -3952 0
c Encoding variable: sky_left_00003_00002 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00002' order represents '1' with '3954'
c Var 'sky_left_00003_00002' direct represents '1' with '3954'
c Var 'sky_left_00003_00002' order represents '2' with '3955'
-3954 3955 0
c Var 'sky_left_00003_00002' direct represents '2' with '3956'
3954 -3955 3956 0
-3956 3955 0
-3956 -3954 0
c Var 'sky_left_00003_00002' order represents '3' with '3957'
-3955 3957 0
c Var 'sky_left_00003_00002' direct represents '3' with '3958'
3955 -3957 3958 0
-3958 3957 0
-3958 -3955 0
c Var 'sky_left_00003_00002' order represents '4' with '3959'
-3957 3959 0
c Var 'sky_left_00003_00002' direct represents '4' with '3960'
3957 -3959 3960 0
-3960 3959 0
-3960 -3957 0
c Var 'sky_left_00003_00002' order represents '5' with '3961'
-3959 3961 0
c Var 'sky_left_00003_00002' direct represents '5' with '3962'
3959 -3961 3962 0
-3962 3961 0
-3962 -3959 0
c Var 'sky_left_00003_00002' order represents '6' with '3963'
-3961 3963 0
c Var 'sky_left_00003_00002' direct represents '6' with '3964'
3961 -3963 3964 0
-3964 3963 0
-3964 -3961 0
c Var 'sky_left_00003_00002' order represents '7' with '3965'
-3963 3965 0
c Var 'sky_left_00003_00002' direct represents '7' with '3966'
3963 -3965 3966 0
-3966 3965 0
-3966 -3963 0
c Var 'sky_left_00003_00002' direct represents '8' with '-3965'
3954 3956 3958 3960 3962 3964 3966 -3965 0
c Encoding variable: sky_left_00003_00003 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00003' order represents '1' with '3967'
c Var 'sky_left_00003_00003' direct represents '1' with '3967'
c Var 'sky_left_00003_00003' order represents '2' with '3968'
-3967 3968 0
c Var 'sky_left_00003_00003' direct represents '2' with '3969'
3967 -3968 3969 0
-3969 3968 0
-3969 -3967 0
c Var 'sky_left_00003_00003' order represents '3' with '3970'
-3968 3970 0
c Var 'sky_left_00003_00003' direct represents '3' with '3971'
3968 -3970 3971 0
-3971 3970 0
-3971 -3968 0
c Var 'sky_left_00003_00003' order represents '4' with '3972'
-3970 3972 0
c Var 'sky_left_00003_00003' direct represents '4' with '3973'
3970 -3972 3973 0
-3973 3972 0
-3973 -3970 0
c Var 'sky_left_00003_00003' order represents '5' with '3974'
-3972 3974 0
c Var 'sky_left_00003_00003' direct represents '5' with '3975'
3972 -3974 3975 0
-3975 3974 0
-3975 -3972 0
c Var 'sky_left_00003_00003' order represents '6' with '3976'
-3974 3976 0
c Var 'sky_left_00003_00003' direct represents '6' with '3977'
3974 -3976 3977 0
-3977 3976 0
-3977 -3974 0
c Var 'sky_left_00003_00003' order represents '7' with '3978'
-3976 3978 0
c Var 'sky_left_00003_00003' direct represents '7' with '3979'
3976 -3978 3979 0
-3979 3978 0
-3979 -3976 0
c Var 'sky_left_00003_00003' direct represents '8' with '-3978'
3967 3969 3971 3973 3975 3977 3979 -3978 0
c Encoding variable: sky_left_00003_00004 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00004' order represents '1' with '3980'
c Var 'sky_left_00003_00004' direct represents '1' with '3980'
c Var 'sky_left_00003_00004' order represents '2' with '3981'
-3980 3981 0
c Var 'sky_left_00003_00004' direct represents '2' with '3982'
3980 -3981 3982 0
-3982 3981 0
-3982 -3980 0
c Var 'sky_left_00003_00004' order represents '3' with '3983'
-3981 3983 0
c Var 'sky_left_00003_00004' direct represents '3' with '3984'
3981 -3983 3984 0
-3984 3983 0
-3984 -3981 0
c Var 'sky_left_00003_00004' order represents '4' with '3985'
-3983 3985 0
c Var 'sky_left_00003_00004' direct represents '4' with '3986'
3983 -3985 3986 0
-3986 3985 0
-3986 -3983 0
c Var 'sky_left_00003_00004' order represents '5' with '3987'
-3985 3987 0
c Var 'sky_left_00003_00004' direct represents '5' with '3988'
3985 -3987 3988 0
-3988 3987 0
-3988 -3985 0
c Var 'sky_left_00003_00004' order represents '6' with '3989'
-3987 3989 0
c Var 'sky_left_00003_00004' direct represents '6' with '3990'
3987 -3989 3990 0
-3990 3989 0
-3990 -3987 0
c Var 'sky_left_00003_00004' order represents '7' with '3991'
-3989 3991 0
c Var 'sky_left_00003_00004' direct represents '7' with '3992'
3989 -3991 3992 0
-3992 3991 0
-3992 -3989 0
c Var 'sky_left_00003_00004' direct represents '8' with '-3991'
3980 3982 3984 3986 3988 3990 3992 -3991 0
c Encoding variable: sky_left_00003_00005 with domain: int(2..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00005' order represents '2' with '3993'
c Var 'sky_left_00003_00005' direct represents '2' with '3993'
c Var 'sky_left_00003_00005' order represents '3' with '3994'
-3993 3994 0
c Var 'sky_left_00003_00005' direct represents '3' with '3995'
3993 -3994 3995 0
-3995 3994 0
-3995 -3993 0
c Var 'sky_left_00003_00005' order represents '4' with '3996'
-3994 3996 0
c Var 'sky_left_00003_00005' direct represents '4' with '3997'
3994 -3996 3997 0
-3997 3996 0
-3997 -3994 0
c Var 'sky_left_00003_00005' order represents '5' with '3998'
-3996 3998 0
c Var 'sky_left_00003_00005' direct represents '5' with '3999'
3996 -3998 3999 0
-3999 3998 0
-3999 -3996 0
c Var 'sky_left_00003_00005' order represents '6' with '4000'
-3998 4000 0
c Var 'sky_left_00003_00005' direct represents '6' with '4001'
3998 -4000 4001 0
-4001 4000 0
-4001 -3998 0
c Var 'sky_left_00003_00005' direct represents '7' with '-4000'
3993 3995 3997 3999 4001 -4000 0
c Encoding variable: sky_left_00003_00006 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00006' order represents '1' with '4002'
c Var 'sky_left_00003_00006' direct represents '1' with '4002'
c Var 'sky_left_00003_00006' order represents '2' with '4003'
-4002 4003 0
c Var 'sky_left_00003_00006' direct represents '2' with '4004'
4002 -4003 4004 0
-4004 4003 0
-4004 -4002 0
c Var 'sky_left_00003_00006' order represents '3' with '4005'
-4003 4005 0
c Var 'sky_left_00003_00006' direct represents '3' with '4006'
4003 -4005 4006 0
-4006 4005 0
-4006 -4003 0
c Var 'sky_left_00003_00006' order represents '4' with '4007'
-4005 4007 0
c Var 'sky_left_00003_00006' direct represents '4' with '4008'
4005 -4007 4008 0
-4008 4007 0
-4008 -4005 0
c Var 'sky_left_00003_00006' order represents '5' with '4009'
-4007 4009 0
c Var 'sky_left_00003_00006' direct represents '5' with '4010'
4007 -4009 4010 0
-4010 4009 0
-4010 -4007 0
c Var 'sky_left_00003_00006' order represents '6' with '4011'
-4009 4011 0
c Var 'sky_left_00003_00006' direct represents '6' with '4012'
4009 -4011 4012 0
-4012 4011 0
-4012 -4009 0
c Var 'sky_left_00003_00006' order represents '7' with '4013'
-4011 4013 0
c Var 'sky_left_00003_00006' direct represents '7' with '4014'
4011 -4013 4014 0
-4014 4013 0
-4014 -4011 0
c Var 'sky_left_00003_00006' direct represents '8' with '-4013'
4002 4004 4006 4008 4010 4012 4014 -4013 0
c Encoding variable: sky_left_00003_00007 with domain: int(1..6) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00007' order represents '1' with '4015'
c Var 'sky_left_00003_00007' direct represents '1' with '4015'
c Var 'sky_left_00003_00007' order represents '2' with '4016'
-4015 4016 0
c Var 'sky_left_00003_00007' direct represents '2' with '4017'
4015 -4016 4017 0
-4017 4016 0
-4017 -4015 0
c Var 'sky_left_00003_00007' order represents '3' with '4018'
-4016 4018 0
c Var 'sky_left_00003_00007' direct represents '3' with '4019'
4016 -4018 4019 0
-4019 4018 0
-4019 -4016 0
c Var 'sky_left_00003_00007' order represents '4' with '4020'
-4018 4020 0
c Var 'sky_left_00003_00007' direct represents '4' with '4021'
4018 -4020 4021 0
-4021 4020 0
-4021 -4018 0
c Var 'sky_left_00003_00007' order represents '5' with '4022'
-4020 4022 0
c Var 'sky_left_00003_00007' direct represents '5' with '4023'
4020 -4022 4023 0
-4023 4022 0
-4023 -4020 0
c Var 'sky_left_00003_00007' direct represents '6' with '-4022'
4015 4017 4019 4021 4023 -4022 0
c Encoding variable: sky_left_00003_00008 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00008' order represents '1' with '4024'
c Var 'sky_left_00003_00008' direct represents '1' with '4024'
c Var 'sky_left_00003_00008' order represents '2' with '4025'
-4024 4025 0
c Var 'sky_left_00003_00008' direct represents '2' with '4026'
4024 -4025 4026 0
-4026 4025 0
-4026 -4024 0
c Var 'sky_left_00003_00008' order represents '3' with '4027'
-4025 4027 0
c Var 'sky_left_00003_00008' direct represents '3' with '4028'
4025 -4027 4028 0
-4028 4027 0
-4028 -4025 0
c Var 'sky_left_00003_00008' order represents '4' with '4029'
-4027 4029 0
c Var 'sky_left_00003_00008' direct represents '4' with '4030'
4027 -4029 4030 0
-4030 4029 0
-4030 -4027 0
c Var 'sky_left_00003_00008' order represents '5' with '4031'
-4029 4031 0
c Var 'sky_left_00003_00008' direct represents '5' with '4032'
4029 -4031 4032 0
-4032 4031 0
-4032 -4029 0
c Var 'sky_left_00003_00008' order represents '6' with '4033'
-4031 4033 0
c Var 'sky_left_00003_00008' direct represents '6' with '4034'
4031 -4033 4034 0
-4034 4033 0
-4034 -4031 0
c Var 'sky_left_00003_00008' order represents '7' with '4035'
-4033 4035 0
c Var 'sky_left_00003_00008' direct represents '7' with '4036'
4033 -4035 4036 0
-4036 4035 0
-4036 -4033 0
c Var 'sky_left_00003_00008' direct represents '8' with '-4035'
4024 4026 4028 4030 4032 4034 4036 -4035 0
c Encoding variable: sky_left_00003_00009 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00009' order represents '1' with '4037'
c Var 'sky_left_00003_00009' direct represents '1' with '4037'
c Var 'sky_left_00003_00009' order represents '2' with '4038'
-4037 4038 0
c Var 'sky_left_00003_00009' direct represents '2' with '4039'
4037 -4038 4039 0
-4039 4038 0
-4039 -4037 0
c Var 'sky_left_00003_00009' order represents '3' with '4040'
-4038 4040 0
c Var 'sky_left_00003_00009' direct represents '3' with '4041'
4038 -4040 4041 0
-4041 4040 0
-4041 -4038 0
c Var 'sky_left_00003_00009' order represents '4' with '4042'
-4040 4042 0
c Var 'sky_left_00003_00009' direct represents '4' with '4043'
4040 -4042 4043 0
-4043 4042 0
-4043 -4040 0
c Var 'sky_left_00003_00009' order represents '5' with '4044'
-4042 4044 0
c Var 'sky_left_00003_00009' direct represents '5' with '4045'
4042 -4044 4045 0
-4045 4044 0
-4045 -4042 0
c Var 'sky_left_00003_00009' order represents '6' with '4046'
-4044 4046 0
c Var 'sky_left_00003_00009' direct represents '6' with '4047'
4044 -4046 4047 0
-4047 4046 0
-4047 -4044 0
c Var 'sky_left_00003_00009' direct represents '7' with '-4046'
4037 4039 4041 4043 4045 4047 -4046 0
c Encoding variable: sky_left_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00001' order represents '1' with '4048'
c Var 'sky_left_00004_00001' direct represents '1' with '4048'
c Var 'sky_left_00004_00001' order represents '2' with '4049'
-4048 4049 0
c Var 'sky_left_00004_00001' direct represents '2' with '4050'
4048 -4049 4050 0
-4050 4049 0
-4050 -4048 0
c Var 'sky_left_00004_00001' order represents '3' with '4051'
-4049 4051 0
c Var 'sky_left_00004_00001' direct represents '3' with '4052'
4049 -4051 4052 0
-4052 4051 0
-4052 -4049 0
c Var 'sky_left_00004_00001' order represents '4' with '4053'
-4051 4053 0
c Var 'sky_left_00004_00001' direct represents '4' with '4054'
4051 -4053 4054 0
-4054 4053 0
-4054 -4051 0
c Var 'sky_left_00004_00001' order represents '5' with '4055'
-4053 4055 0
c Var 'sky_left_00004_00001' direct represents '5' with '4056'
4053 -4055 4056 0
-4056 4055 0
-4056 -4053 0
c Var 'sky_left_00004_00001' order represents '6' with '4057'
-4055 4057 0
c Var 'sky_left_00004_00001' direct represents '6' with '4058'
4055 -4057 4058 0
-4058 4057 0
-4058 -4055 0
c Var 'sky_left_00004_00001' order represents '7' with '4059'
-4057 4059 0
c Var 'sky_left_00004_00001' direct represents '7' with '4060'
4057 -4059 4060 0
-4060 4059 0
-4060 -4057 0
c Var 'sky_left_00004_00001' order represents '8' with '4061'
-4059 4061 0
c Var 'sky_left_00004_00001' direct represents '8' with '4062'
4059 -4061 4062 0
-4062 4061 0
-4062 -4059 0
c Var 'sky_left_00004_00001' direct represents '9' with '-4061'
4048 4050 4052 4054 4056 4058 4060 4062 -4061 0
c Encoding variable: sky_left_00004_00002 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00002' order represents '1' with '4063'
c Var 'sky_left_00004_00002' direct represents '1' with '4063'
c Var 'sky_left_00004_00002' order represents '2' with '4064'
-4063 4064 0
c Var 'sky_left_00004_00002' direct represents '2' with '4065'
4063 -4064 4065 0
-4065 4064 0
-4065 -4063 0
c Var 'sky_left_00004_00002' order represents '3' with '4066'
-4064 4066 0
c Var 'sky_left_00004_00002' direct represents '3' with '4067'
4064 -4066 4067 0
-4067 4066 0
-4067 -4064 0
c Var 'sky_left_00004_00002' order represents '4' with '4068'
-4066 4068 0
c Var 'sky_left_00004_00002' direct represents '4' with '4069'
4066 -4068 4069 0
-4069 4068 0
-4069 -4066 0
c Var 'sky_left_00004_00002' order represents '5' with '4070'
-4068 4070 0
c Var 'sky_left_00004_00002' direct represents '5' with '4071'
4068 -4070 4071 0
-4071 4070 0
-4071 -4068 0
c Var 'sky_left_00004_00002' order represents '6' with '4072'
-4070 4072 0
c Var 'sky_left_00004_00002' direct represents '6' with '4073'
4070 -4072 4073 0
-4073 4072 0
-4073 -4070 0
c Var 'sky_left_00004_00002' order represents '7' with '4074'
-4072 4074 0
c Var 'sky_left_00004_00002' direct represents '7' with '4075'
4072 -4074 4075 0
-4075 4074 0
-4075 -4072 0
c Var 'sky_left_00004_00002' direct represents '8' with '-4074'
4063 4065 4067 4069 4071 4073 4075 -4074 0
c Encoding variable: sky_left_00004_00003 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00003' order represents '1' with '4076'
c Var 'sky_left_00004_00003' direct represents '1' with '4076'
c Var 'sky_left_00004_00003' order represents '2' with '4077'
-4076 4077 0
c Var 'sky_left_00004_00003' direct represents '2' with '4078'
4076 -4077 4078 0
-4078 4077 0
-4078 -4076 0
c Var 'sky_left_00004_00003' order represents '3' with '4079'
-4077 4079 0
c Var 'sky_left_00004_00003' direct represents '3' with '4080'
4077 -4079 4080 0
-4080 4079 0
-4080 -4077 0
c Var 'sky_left_00004_00003' order represents '4' with '4081'
-4079 4081 0
c Var 'sky_left_00004_00003' direct represents '4' with '4082'
4079 -4081 4082 0
-4082 4081 0
-4082 -4079 0
c Var 'sky_left_00004_00003' order represents '5' with '4083'
-4081 4083 0
c Var 'sky_left_00004_00003' direct represents '5' with '4084'
4081 -4083 4084 0
-4084 4083 0
-4084 -4081 0
c Var 'sky_left_00004_00003' order represents '6' with '4085'
-4083 4085 0
c Var 'sky_left_00004_00003' direct represents '6' with '4086'
4083 -4085 4086 0
-4086 4085 0
-4086 -4083 0
c Var 'sky_left_00004_00003' direct represents '7' with '-4085'
4076 4078 4080 4082 4084 4086 -4085 0
c Encoding variable: sky_left_00004_00004 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00004' order represents '1' with '4087'
c Var 'sky_left_00004_00004' direct represents '1' with '4087'
c Var 'sky_left_00004_00004' order represents '2' with '4088'
-4087 4088 0
c Var 'sky_left_00004_00004' direct represents '2' with '4089'
4087 -4088 4089 0
-4089 4088 0
-4089 -4087 0
c Var 'sky_left_00004_00004' order represents '3' with '4090'
-4088 4090 0
c Var 'sky_left_00004_00004' direct represents '3' with '4091'
4088 -4090 4091 0
-4091 4090 0
-4091 -4088 0
c Var 'sky_left_00004_00004' order represents '4' with '4092'
-4090 4092 0
c Var 'sky_left_00004_00004' direct represents '4' with '4093'
4090 -4092 4093 0
-4093 4092 0
-4093 -4090 0
c Var 'sky_left_00004_00004' order represents '5' with '4094'
-4092 4094 0
c Var 'sky_left_00004_00004' direct represents '5' with '4095'
4092 -4094 4095 0
-4095 4094 0
-4095 -4092 0
c Var 'sky_left_00004_00004' order represents '6' with '4096'
-4094 4096 0
c Var 'sky_left_00004_00004' direct represents '6' with '4097'
4094 -4096 4097 0
-4097 4096 0
-4097 -4094 0
c Var 'sky_left_00004_00004' order represents '7' with '4098'
-4096 4098 0
c Var 'sky_left_00004_00004' direct represents '7' with '4099'
4096 -4098 4099 0
-4099 4098 0
-4099 -4096 0
c Var 'sky_left_00004_00004' direct represents '8' with '-4098'
4087 4089 4091 4093 4095 4097 4099 -4098 0
c Encoding variable: sky_left_00004_00005 with domain: int(2..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00005' order represents '2' with '4100'
c Var 'sky_left_00004_00005' direct represents '2' with '4100'
c Var 'sky_left_00004_00005' order represents '3' with '4101'
-4100 4101 0
c Var 'sky_left_00004_00005' direct represents '3' with '4102'
4100 -4101 4102 0
-4102 4101 0
-4102 -4100 0
c Var 'sky_left_00004_00005' order represents '4' with '4103'
-4101 4103 0
c Var 'sky_left_00004_00005' direct represents '4' with '4104'
4101 -4103 4104 0
-4104 4103 0
-4104 -4101 0
c Var 'sky_left_00004_00005' order represents '5' with '4105'
-4103 4105 0
c Var 'sky_left_00004_00005' direct represents '5' with '4106'
4103 -4105 4106 0
-4106 4105 0
-4106 -4103 0
c Var 'sky_left_00004_00005' order represents '6' with '4107'
-4105 4107 0
c Var 'sky_left_00004_00005' direct represents '6' with '4108'
4105 -4107 4108 0
-4108 4107 0
-4108 -4105 0
c Var 'sky_left_00004_00005' order represents '7' with '4109'
-4107 4109 0
c Var 'sky_left_00004_00005' direct represents '7' with '4110'
4107 -4109 4110 0
-4110 4109 0
-4110 -4107 0
c Var 'sky_left_00004_00005' direct represents '8' with '-4109'
4100 4102 4104 4106 4108 4110 -4109 0
c Encoding variable: sky_left_00004_00006 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00006' order represents '1' with '4111'
c Var 'sky_left_00004_00006' direct represents '1' with '4111'
c Var 'sky_left_00004_00006' order represents '2' with '4112'
-4111 4112 0
c Var 'sky_left_00004_00006' direct represents '2' with '4113'
4111 -4112 4113 0
-4113 4112 0
-4113 -4111 0
c Var 'sky_left_00004_00006' order represents '3' with '4114'
-4112 4114 0
c Var 'sky_left_00004_00006' direct represents '3' with '4115'
4112 -4114 4115 0
-4115 4114 0
-4115 -4112 0
c Var 'sky_left_00004_00006' order represents '4' with '4116'
-4114 4116 0
c Var 'sky_left_00004_00006' direct represents '4' with '4117'
4114 -4116 4117 0
-4117 4116 0
-4117 -4114 0
c Var 'sky_left_00004_00006' order represents '5' with '4118'
-4116 4118 0
c Var 'sky_left_00004_00006' direct represents '5' with '4119'
4116 -4118 4119 0
-4119 4118 0
-4119 -4116 0
c Var 'sky_left_00004_00006' order represents '6' with '4120'
-4118 4120 0
c Var 'sky_left_00004_00006' direct represents '6' with '4121'
4118 -4120 4121 0
-4121 4120 0
-4121 -4118 0
c Var 'sky_left_00004_00006' direct represents '7' with '-4120'
4111 4113 4115 4117 4119 4121 -4120 0
c Encoding variable: sky_left_00004_00007 with domain: int(1..5) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00007' order represents '1' with '4122'
c Var 'sky_left_00004_00007' direct represents '1' with '4122'
c Var 'sky_left_00004_00007' order represents '2' with '4123'
-4122 4123 0
c Var 'sky_left_00004_00007' direct represents '2' with '4124'
4122 -4123 4124 0
-4124 4123 0
-4124 -4122 0
c Var 'sky_left_00004_00007' order represents '3' with '4125'
-4123 4125 0
c Var 'sky_left_00004_00007' direct represents '3' with '4126'
4123 -4125 4126 0
-4126 4125 0
-4126 -4123 0
c Var 'sky_left_00004_00007' order represents '4' with '4127'
-4125 4127 0
c Var 'sky_left_00004_00007' direct represents '4' with '4128'
4125 -4127 4128 0
-4128 4127 0
-4128 -4125 0
c Var 'sky_left_00004_00007' direct represents '5' with '-4127'
4122 4124 4126 4128 -4127 0
c Encoding variable: sky_left_00004_00008 with domain: int(1..8) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00008' order represents '1' with '4129'
c Var 'sky_left_00004_00008' direct represents '1' with '4129'
c Var 'sky_left_00004_00008' order represents '2' with '4130'
-4129 4130 0
c Var 'sky_left_00004_00008' direct represents '2' with '4131'
4129 -4130 4131 0
-4131 4130 0
-4131 -4129 0
c Var 'sky_left_00004_00008' order represents '3' with '4132'
-4130 4132 0
c Var 'sky_left_00004_00008' direct represents '3' with '4133'
4130 -4132 4133 0
-4133 4132 0
-4133 -4130 0
c Var 'sky_left_00004_00008' order represents '4' with '4134'
-4132 4134 0
c Var 'sky_left_00004_00008' direct represents '4' with '4135'
4132 -4134 4135 0
-4135 4134 0
-4135 -4132 0
c Var 'sky_left_00004_00008' order represents '5' with '4136'
-4134 4136 0
c Var 'sky_left_00004_00008' direct represents '5' with '4137'
4134 -4136 4137 0
-4137 4136 0
-4137 -4134 0
c Var 'sky_left_00004_00008' order represents '6' with '4138'
-4136 4138 0
c Var 'sky_left_00004_00008' direct represents '6' with '4139'
4136 -4138 4139 0
-4139 4138 0
-4139 -4136 0
c Var 'sky_left_00004_00008' order represents '7' with '4140'
-4138 4140 0
c Var 'sky_left_00004_00008' direct represents '7' with '4141'
4138 -4140 4141 0
-4141 4140 0
-4141 -4138 0
c Var 'sky_left_00004_00008' direct represents '8' with '-4140'
4129 4131 4133 4135 4137 4139 4141 -4140 0
c Encoding variable: sky_left_00004_00009 with domain: int(1..7) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00009' order represents '1' with '4142'
c Var 'sky_left_00004_00009' direct represents '1' with '4142'
c Var 'sky_left_00004_00009' order represents '2' with '4143'
-4142 4143 0
c Var 'sky_left_00004_00009' direct represents '2' with '4144'
4142 -4143 4144 0
-4144 4143 0
-4144 -4142 0
c Var 'sky_left_00004_00009' order represents '3' with '4145'
-4143 4145 0
c Var 'sky_left_00004_00009' direct represents '3' with '4146'
4143 -4145 4146 0
-4146 4145 0
-4146 -4143 0
c Var 'sky_left_00004_00009' order represents '4' with '4147'
-4145 4147 0
c Var 'sky_left_00004_00009' direct represents '4' with '4148'
4145 -4147 4148 0
-4148 4147 0
-4148 -4145 0
c Var 'sky_left_00004_00009' order represents '5' with '4149'
-4147 4149 0
c Var 'sky_left_00004_00009' direct represents '5' with '4150'
4147 -4149 4150 0
-4150 4149 0
-4150 -4147 0
c Var 'sky_left_00004_00009' order represents '6' with '4151'
-4149 4151 0
c Var 'sky_left_00004_00009' direct represents '6' with '4152'
4149 -4151 4152 0
-4152 4151 0
-4152 -4149 0
c Var 'sky_left_00004_00009' direct represents '7' with '-4151'
4142 4144 4146 4148 4150 4152 -4151 0
c Encoding variable: variant_fields_00001_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00001' order represents '1' with '4153'
c Var 'variant_fields_00001_00001_00001' direct represents '1' with '4153'
c Var 'variant_fields_00001_00001_00001' order represents '2' with '4154'
-4153 4154 0
c Var 'variant_fields_00001_00001_00001' direct represents '2' with '4155'
4153 -4154 4155 0
-4155 4154 0
-4155 -4153 0
c Var 'variant_fields_00001_00001_00001' order represents '3' with '4156'
-4154 4156 0
c Var 'variant_fields_00001_00001_00001' direct represents '3' with '4157'
4154 -4156 4157 0
-4157 4156 0
-4157 -4154 0
c Var 'variant_fields_00001_00001_00001' order represents '4' with '4158'
-4156 4158 0
c Var 'variant_fields_00001_00001_00001' direct represents '4' with '4159'
4156 -4158 4159 0
-4159 4158 0
-4159 -4156 0
c Var 'variant_fields_00001_00001_00001' order represents '5' with '4160'
-4158 4160 0
c Var 'variant_fields_00001_00001_00001' direct represents '5' with '4161'
4158 -4160 4161 0
-4161 4160 0
-4161 -4158 0
c Var 'variant_fields_00001_00001_00001' order represents '6' with '4162'
-4160 4162 0
c Var 'variant_fields_00001_00001_00001' direct represents '6' with '4163'
4160 -4162 4163 0
-4163 4162 0
-4163 -4160 0
c Var 'variant_fields_00001_00001_00001' order represents '7' with '4164'
-4162 4164 0
c Var 'variant_fields_00001_00001_00001' direct represents '7' with '4165'
4162 -4164 4165 0
-4165 4164 0
-4165 -4162 0
c Var 'variant_fields_00001_00001_00001' order represents '8' with '4166'
-4164 4166 0
c Var 'variant_fields_00001_00001_00001' direct represents '8' with '4167'
4164 -4166 4167 0
-4167 4166 0
-4167 -4164 0
c Var 'variant_fields_00001_00001_00001' direct represents '9' with '-4166'
4153 4155 4157 4159 4161 4163 4165 4167 -4166 0
c Encoding variable: variant_fields_00001_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00002' order represents '1' with '4168'
c Var 'variant_fields_00001_00001_00002' direct represents '1' with '4168'
c Var 'variant_fields_00001_00001_00002' order represents '2' with '4169'
-4168 4169 0
c Var 'variant_fields_00001_00001_00002' direct represents '2' with '4170'
4168 -4169 4170 0
-4170 4169 0
-4170 -4168 0
c Var 'variant_fields_00001_00001_00002' order represents '3' with '4171'
-4169 4171 0
c Var 'variant_fields_00001_00001_00002' direct represents '3' with '4172'
4169 -4171 4172 0
-4172 4171 0
-4172 -4169 0
c Var 'variant_fields_00001_00001_00002' order represents '4' with '4173'
-4171 4173 0
c Var 'variant_fields_00001_00001_00002' direct represents '4' with '4174'
4171 -4173 4174 0
-4174 4173 0
-4174 -4171 0
c Var 'variant_fields_00001_00001_00002' order represents '5' with '4175'
-4173 4175 0
c Var 'variant_fields_00001_00001_00002' direct represents '5' with '4176'
4173 -4175 4176 0
-4176 4175 0
-4176 -4173 0
c Var 'variant_fields_00001_00001_00002' order represents '6' with '4177'
-4175 4177 0
c Var 'variant_fields_00001_00001_00002' direct represents '6' with '4178'
4175 -4177 4178 0
-4178 4177 0
-4178 -4175 0
c Var 'variant_fields_00001_00001_00002' order represents '7' with '4179'
-4177 4179 0
c Var 'variant_fields_00001_00001_00002' direct represents '7' with '4180'
4177 -4179 4180 0
-4180 4179 0
-4180 -4177 0
c Var 'variant_fields_00001_00001_00002' order represents '8' with '4181'
-4179 4181 0
c Var 'variant_fields_00001_00001_00002' direct represents '8' with '4182'
4179 -4181 4182 0
-4182 4181 0
-4182 -4179 0
c Var 'variant_fields_00001_00001_00002' direct represents '9' with '-4181'
4168 4170 4172 4174 4176 4178 4180 4182 -4181 0
c Encoding variable: variant_fields_00001_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00003' order represents '1' with '4183'
c Var 'variant_fields_00001_00001_00003' direct represents '1' with '4183'
c Var 'variant_fields_00001_00001_00003' order represents '2' with '4184'
-4183 4184 0
c Var 'variant_fields_00001_00001_00003' direct represents '2' with '4185'
4183 -4184 4185 0
-4185 4184 0
-4185 -4183 0
c Var 'variant_fields_00001_00001_00003' order represents '3' with '4186'
-4184 4186 0
c Var 'variant_fields_00001_00001_00003' direct represents '3' with '4187'
4184 -4186 4187 0
-4187 4186 0
-4187 -4184 0
c Var 'variant_fields_00001_00001_00003' order represents '4' with '4188'
-4186 4188 0
c Var 'variant_fields_00001_00001_00003' direct represents '4' with '4189'
4186 -4188 4189 0
-4189 4188 0
-4189 -4186 0
c Var 'variant_fields_00001_00001_00003' order represents '5' with '4190'
-4188 4190 0
c Var 'variant_fields_00001_00001_00003' direct represents '5' with '4191'
4188 -4190 4191 0
-4191 4190 0
-4191 -4188 0
c Var 'variant_fields_00001_00001_00003' order represents '6' with '4192'
-4190 4192 0
c Var 'variant_fields_00001_00001_00003' direct represents '6' with '4193'
4190 -4192 4193 0
-4193 4192 0
-4193 -4190 0
c Var 'variant_fields_00001_00001_00003' order represents '7' with '4194'
-4192 4194 0
c Var 'variant_fields_00001_00001_00003' direct represents '7' with '4195'
4192 -4194 4195 0
-4195 4194 0
-4195 -4192 0
c Var 'variant_fields_00001_00001_00003' order represents '8' with '4196'
-4194 4196 0
c Var 'variant_fields_00001_00001_00003' direct represents '8' with '4197'
4194 -4196 4197 0
-4197 4196 0
-4197 -4194 0
c Var 'variant_fields_00001_00001_00003' direct represents '9' with '-4196'
4183 4185 4187 4189 4191 4193 4195 4197 -4196 0
c Encoding variable: variant_fields_00001_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00004' order represents '1' with '4198'
c Var 'variant_fields_00001_00001_00004' direct represents '1' with '4198'
c Var 'variant_fields_00001_00001_00004' order represents '2' with '4199'
-4198 4199 0
c Var 'variant_fields_00001_00001_00004' direct represents '2' with '4200'
4198 -4199 4200 0
-4200 4199 0
-4200 -4198 0
c Var 'variant_fields_00001_00001_00004' order represents '3' with '4201'
-4199 4201 0
c Var 'variant_fields_00001_00001_00004' direct represents '3' with '4202'
4199 -4201 4202 0
-4202 4201 0
-4202 -4199 0
c Var 'variant_fields_00001_00001_00004' order represents '4' with '4203'
-4201 4203 0
c Var 'variant_fields_00001_00001_00004' direct represents '4' with '4204'
4201 -4203 4204 0
-4204 4203 0
-4204 -4201 0
c Var 'variant_fields_00001_00001_00004' order represents '5' with '4205'
-4203 4205 0
c Var 'variant_fields_00001_00001_00004' direct represents '5' with '4206'
4203 -4205 4206 0
-4206 4205 0
-4206 -4203 0
c Var 'variant_fields_00001_00001_00004' order represents '6' with '4207'
-4205 4207 0
c Var 'variant_fields_00001_00001_00004' direct represents '6' with '4208'
4205 -4207 4208 0
-4208 4207 0
-4208 -4205 0
c Var 'variant_fields_00001_00001_00004' order represents '7' with '4209'
-4207 4209 0
c Var 'variant_fields_00001_00001_00004' direct represents '7' with '4210'
4207 -4209 4210 0
-4210 4209 0
-4210 -4207 0
c Var 'variant_fields_00001_00001_00004' order represents '8' with '4211'
-4209 4211 0
c Var 'variant_fields_00001_00001_00004' direct represents '8' with '4212'
4209 -4211 4212 0
-4212 4211 0
-4212 -4209 0
c Var 'variant_fields_00001_00001_00004' direct represents '9' with '-4211'
4198 4200 4202 4204 4206 4208 4210 4212 -4211 0
c Encoding variable: variant_fields_00001_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00005' order represents '1' with '4213'
c Var 'variant_fields_00001_00001_00005' direct represents '1' with '4213'
c Var 'variant_fields_00001_00001_00005' order represents '2' with '4214'
-4213 4214 0
c Var 'variant_fields_00001_00001_00005' direct represents '2' with '4215'
4213 -4214 4215 0
-4215 4214 0
-4215 -4213 0
c Var 'variant_fields_00001_00001_00005' order represents '3' with '4216'
-4214 4216 0
c Var 'variant_fields_00001_00001_00005' direct represents '3' with '4217'
4214 -4216 4217 0
-4217 4216 0
-4217 -4214 0
c Var 'variant_fields_00001_00001_00005' order represents '4' with '4218'
-4216 4218 0
c Var 'variant_fields_00001_00001_00005' direct represents '4' with '4219'
4216 -4218 4219 0
-4219 4218 0
-4219 -4216 0
c Var 'variant_fields_00001_00001_00005' order represents '5' with '4220'
-4218 4220 0
c Var 'variant_fields_00001_00001_00005' direct represents '5' with '4221'
4218 -4220 4221 0
-4221 4220 0
-4221 -4218 0
c Var 'variant_fields_00001_00001_00005' order represents '6' with '4222'
-4220 4222 0
c Var 'variant_fields_00001_00001_00005' direct represents '6' with '4223'
4220 -4222 4223 0
-4223 4222 0
-4223 -4220 0
c Var 'variant_fields_00001_00001_00005' order represents '7' with '4224'
-4222 4224 0
c Var 'variant_fields_00001_00001_00005' direct represents '7' with '4225'
4222 -4224 4225 0
-4225 4224 0
-4225 -4222 0
c Var 'variant_fields_00001_00001_00005' order represents '8' with '4226'
-4224 4226 0
c Var 'variant_fields_00001_00001_00005' direct represents '8' with '4227'
4224 -4226 4227 0
-4227 4226 0
-4227 -4224 0
c Var 'variant_fields_00001_00001_00005' direct represents '9' with '-4226'
4213 4215 4217 4219 4221 4223 4225 4227 -4226 0
c Encoding variable: variant_fields_00001_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00006' order represents '1' with '4228'
c Var 'variant_fields_00001_00001_00006' direct represents '1' with '4228'
c Var 'variant_fields_00001_00001_00006' order represents '2' with '4229'
-4228 4229 0
c Var 'variant_fields_00001_00001_00006' direct represents '2' with '4230'
4228 -4229 4230 0
-4230 4229 0
-4230 -4228 0
c Var 'variant_fields_00001_00001_00006' order represents '3' with '4231'
-4229 4231 0
c Var 'variant_fields_00001_00001_00006' direct represents '3' with '4232'
4229 -4231 4232 0
-4232 4231 0
-4232 -4229 0
c Var 'variant_fields_00001_00001_00006' order represents '4' with '4233'
-4231 4233 0
c Var 'variant_fields_00001_00001_00006' direct represents '4' with '4234'
4231 -4233 4234 0
-4234 4233 0
-4234 -4231 0
c Var 'variant_fields_00001_00001_00006' order represents '5' with '4235'
-4233 4235 0
c Var 'variant_fields_00001_00001_00006' direct represents '5' with '4236'
4233 -4235 4236 0
-4236 4235 0
-4236 -4233 0
c Var 'variant_fields_00001_00001_00006' order represents '6' with '4237'
-4235 4237 0
c Var 'variant_fields_00001_00001_00006' direct represents '6' with '4238'
4235 -4237 4238 0
-4238 4237 0
-4238 -4235 0
c Var 'variant_fields_00001_00001_00006' order represents '7' with '4239'
-4237 4239 0
c Var 'variant_fields_00001_00001_00006' direct represents '7' with '4240'
4237 -4239 4240 0
-4240 4239 0
-4240 -4237 0
c Var 'variant_fields_00001_00001_00006' order represents '8' with '4241'
-4239 4241 0
c Var 'variant_fields_00001_00001_00006' direct represents '8' with '4242'
4239 -4241 4242 0
-4242 4241 0
-4242 -4239 0
c Var 'variant_fields_00001_00001_00006' direct represents '9' with '-4241'
4228 4230 4232 4234 4236 4238 4240 4242 -4241 0
c Encoding variable: variant_fields_00001_00001_00007 with domain: int(5) (representing constraint )
c Var 'variant_fields_00001_00001_00007' direct represents '5' with '4243'
4243 0
c Encoding variable: variant_fields_00001_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00008' order represents '1' with '4244'
c Var 'variant_fields_00001_00001_00008' direct represents '1' with '4244'
c Var 'variant_fields_00001_00001_00008' order represents '2' with '4245'
-4244 4245 0
c Var 'variant_fields_00001_00001_00008' direct represents '2' with '4246'
4244 -4245 4246 0
-4246 4245 0
-4246 -4244 0
c Var 'variant_fields_00001_00001_00008' order represents '3' with '4247'
-4245 4247 0
c Var 'variant_fields_00001_00001_00008' direct represents '3' with '4248'
4245 -4247 4248 0
-4248 4247 0
-4248 -4245 0
c Var 'variant_fields_00001_00001_00008' order represents '4' with '4249'
-4247 4249 0
c Var 'variant_fields_00001_00001_00008' direct represents '4' with '4250'
4247 -4249 4250 0
-4250 4249 0
-4250 -4247 0
c Var 'variant_fields_00001_00001_00008' order represents '5' with '4251'
-4249 4251 0
c Var 'variant_fields_00001_00001_00008' direct represents '5' with '4252'
4249 -4251 4252 0
-4252 4251 0
-4252 -4249 0
c Var 'variant_fields_00001_00001_00008' order represents '6' with '4253'
-4251 4253 0
c Var 'variant_fields_00001_00001_00008' direct represents '6' with '4254'
4251 -4253 4254 0
-4254 4253 0
-4254 -4251 0
c Var 'variant_fields_00001_00001_00008' order represents '7' with '4255'
-4253 4255 0
c Var 'variant_fields_00001_00001_00008' direct represents '7' with '4256'
4253 -4255 4256 0
-4256 4255 0
-4256 -4253 0
c Var 'variant_fields_00001_00001_00008' order represents '8' with '4257'
-4255 4257 0
c Var 'variant_fields_00001_00001_00008' direct represents '8' with '4258'
4255 -4257 4258 0
-4258 4257 0
-4258 -4255 0
c Var 'variant_fields_00001_00001_00008' direct represents '9' with '-4257'
4244 4246 4248 4250 4252 4254 4256 4258 -4257 0
c Encoding variable: variant_fields_00001_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00009' order represents '1' with '4259'
c Var 'variant_fields_00001_00001_00009' direct represents '1' with '4259'
c Var 'variant_fields_00001_00001_00009' order represents '2' with '4260'
-4259 4260 0
c Var 'variant_fields_00001_00001_00009' direct represents '2' with '4261'
4259 -4260 4261 0
-4261 4260 0
-4261 -4259 0
c Var 'variant_fields_00001_00001_00009' order represents '3' with '4262'
-4260 4262 0
c Var 'variant_fields_00001_00001_00009' direct represents '3' with '4263'
4260 -4262 4263 0
-4263 4262 0
-4263 -4260 0
c Var 'variant_fields_00001_00001_00009' order represents '4' with '4264'
-4262 4264 0
c Var 'variant_fields_00001_00001_00009' direct represents '4' with '4265'
4262 -4264 4265 0
-4265 4264 0
-4265 -4262 0
c Var 'variant_fields_00001_00001_00009' order represents '5' with '4266'
-4264 4266 0
c Var 'variant_fields_00001_00001_00009' direct represents '5' with '4267'
4264 -4266 4267 0
-4267 4266 0
-4267 -4264 0
c Var 'variant_fields_00001_00001_00009' order represents '6' with '4268'
-4266 4268 0
c Var 'variant_fields_00001_00001_00009' direct represents '6' with '4269'
4266 -4268 4269 0
-4269 4268 0
-4269 -4266 0
c Var 'variant_fields_00001_00001_00009' order represents '7' with '4270'
-4268 4270 0
c Var 'variant_fields_00001_00001_00009' direct represents '7' with '4271'
4268 -4270 4271 0
-4271 4270 0
-4271 -4268 0
c Var 'variant_fields_00001_00001_00009' order represents '8' with '4272'
-4270 4272 0
c Var 'variant_fields_00001_00001_00009' direct represents '8' with '4273'
4270 -4272 4273 0
-4273 4272 0
-4273 -4270 0
c Var 'variant_fields_00001_00001_00009' direct represents '9' with '-4272'
4259 4261 4263 4265 4267 4269 4271 4273 -4272 0
c Encoding variable: variant_fields_00001_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00001' order represents '1' with '4274'
c Var 'variant_fields_00001_00002_00001' direct represents '1' with '4274'
c Var 'variant_fields_00001_00002_00001' order represents '2' with '4275'
-4274 4275 0
c Var 'variant_fields_00001_00002_00001' direct represents '2' with '4276'
4274 -4275 4276 0
-4276 4275 0
-4276 -4274 0
c Var 'variant_fields_00001_00002_00001' order represents '3' with '4277'
-4275 4277 0
c Var 'variant_fields_00001_00002_00001' direct represents '3' with '4278'
4275 -4277 4278 0
-4278 4277 0
-4278 -4275 0
c Var 'variant_fields_00001_00002_00001' order represents '4' with '4279'
-4277 4279 0
c Var 'variant_fields_00001_00002_00001' direct represents '4' with '4280'
4277 -4279 4280 0
-4280 4279 0
-4280 -4277 0
c Var 'variant_fields_00001_00002_00001' order represents '5' with '4281'
-4279 4281 0
c Var 'variant_fields_00001_00002_00001' direct represents '5' with '4282'
4279 -4281 4282 0
-4282 4281 0
-4282 -4279 0
c Var 'variant_fields_00001_00002_00001' order represents '6' with '4283'
-4281 4283 0
c Var 'variant_fields_00001_00002_00001' direct represents '6' with '4284'
4281 -4283 4284 0
-4284 4283 0
-4284 -4281 0
c Var 'variant_fields_00001_00002_00001' order represents '7' with '4285'
-4283 4285 0
c Var 'variant_fields_00001_00002_00001' direct represents '7' with '4286'
4283 -4285 4286 0
-4286 4285 0
-4286 -4283 0
c Var 'variant_fields_00001_00002_00001' order represents '8' with '4287'
-4285 4287 0
c Var 'variant_fields_00001_00002_00001' direct represents '8' with '4288'
4285 -4287 4288 0
-4288 4287 0
-4288 -4285 0
c Var 'variant_fields_00001_00002_00001' direct represents '9' with '-4287'
4274 4276 4278 4280 4282 4284 4286 4288 -4287 0
c Encoding variable: variant_fields_00001_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00002' order represents '1' with '4289'
c Var 'variant_fields_00001_00002_00002' direct represents '1' with '4289'
c Var 'variant_fields_00001_00002_00002' order represents '2' with '4290'
-4289 4290 0
c Var 'variant_fields_00001_00002_00002' direct represents '2' with '4291'
4289 -4290 4291 0
-4291 4290 0
-4291 -4289 0
c Var 'variant_fields_00001_00002_00002' order represents '3' with '4292'
-4290 4292 0
c Var 'variant_fields_00001_00002_00002' direct represents '3' with '4293'
4290 -4292 4293 0
-4293 4292 0
-4293 -4290 0
c Var 'variant_fields_00001_00002_00002' order represents '4' with '4294'
-4292 4294 0
c Var 'variant_fields_00001_00002_00002' direct represents '4' with '4295'
4292 -4294 4295 0
-4295 4294 0
-4295 -4292 0
c Var 'variant_fields_00001_00002_00002' order represents '5' with '4296'
-4294 4296 0
c Var 'variant_fields_00001_00002_00002' direct represents '5' with '4297'
4294 -4296 4297 0
-4297 4296 0
-4297 -4294 0
c Var 'variant_fields_00001_00002_00002' order represents '6' with '4298'
-4296 4298 0
c Var 'variant_fields_00001_00002_00002' direct represents '6' with '4299'
4296 -4298 4299 0
-4299 4298 0
-4299 -4296 0
c Var 'variant_fields_00001_00002_00002' order represents '7' with '4300'
-4298 4300 0
c Var 'variant_fields_00001_00002_00002' direct represents '7' with '4301'
4298 -4300 4301 0
-4301 4300 0
-4301 -4298 0
c Var 'variant_fields_00001_00002_00002' order represents '8' with '4302'
-4300 4302 0
c Var 'variant_fields_00001_00002_00002' direct represents '8' with '4303'
4300 -4302 4303 0
-4303 4302 0
-4303 -4300 0
c Var 'variant_fields_00001_00002_00002' direct represents '9' with '-4302'
4289 4291 4293 4295 4297 4299 4301 4303 -4302 0
c Encoding variable: variant_fields_00001_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00003' order represents '1' with '4304'
c Var 'variant_fields_00001_00002_00003' direct represents '1' with '4304'
c Var 'variant_fields_00001_00002_00003' order represents '2' with '4305'
-4304 4305 0
c Var 'variant_fields_00001_00002_00003' direct represents '2' with '4306'
4304 -4305 4306 0
-4306 4305 0
-4306 -4304 0
c Var 'variant_fields_00001_00002_00003' order represents '3' with '4307'
-4305 4307 0
c Var 'variant_fields_00001_00002_00003' direct represents '3' with '4308'
4305 -4307 4308 0
-4308 4307 0
-4308 -4305 0
c Var 'variant_fields_00001_00002_00003' order represents '4' with '4309'
-4307 4309 0
c Var 'variant_fields_00001_00002_00003' direct represents '4' with '4310'
4307 -4309 4310 0
-4310 4309 0
-4310 -4307 0
c Var 'variant_fields_00001_00002_00003' order represents '5' with '4311'
-4309 4311 0
c Var 'variant_fields_00001_00002_00003' direct represents '5' with '4312'
4309 -4311 4312 0
-4312 4311 0
-4312 -4309 0
c Var 'variant_fields_00001_00002_00003' order represents '6' with '4313'
-4311 4313 0
c Var 'variant_fields_00001_00002_00003' direct represents '6' with '4314'
4311 -4313 4314 0
-4314 4313 0
-4314 -4311 0
c Var 'variant_fields_00001_00002_00003' order represents '7' with '4315'
-4313 4315 0
c Var 'variant_fields_00001_00002_00003' direct represents '7' with '4316'
4313 -4315 4316 0
-4316 4315 0
-4316 -4313 0
c Var 'variant_fields_00001_00002_00003' order represents '8' with '4317'
-4315 4317 0
c Var 'variant_fields_00001_00002_00003' direct represents '8' with '4318'
4315 -4317 4318 0
-4318 4317 0
-4318 -4315 0
c Var 'variant_fields_00001_00002_00003' direct represents '9' with '-4317'
4304 4306 4308 4310 4312 4314 4316 4318 -4317 0
c Encoding variable: variant_fields_00001_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00004' order represents '1' with '4319'
c Var 'variant_fields_00001_00002_00004' direct represents '1' with '4319'
c Var 'variant_fields_00001_00002_00004' order represents '2' with '4320'
-4319 4320 0
c Var 'variant_fields_00001_00002_00004' direct represents '2' with '4321'
4319 -4320 4321 0
-4321 4320 0
-4321 -4319 0
c Var 'variant_fields_00001_00002_00004' order represents '3' with '4322'
-4320 4322 0
c Var 'variant_fields_00001_00002_00004' direct represents '3' with '4323'
4320 -4322 4323 0
-4323 4322 0
-4323 -4320 0
c Var 'variant_fields_00001_00002_00004' order represents '4' with '4324'
-4322 4324 0
c Var 'variant_fields_00001_00002_00004' direct represents '4' with '4325'
4322 -4324 4325 0
-4325 4324 0
-4325 -4322 0
c Var 'variant_fields_00001_00002_00004' order represents '5' with '4326'
-4324 4326 0
c Var 'variant_fields_00001_00002_00004' direct represents '5' with '4327'
4324 -4326 4327 0
-4327 4326 0
-4327 -4324 0
c Var 'variant_fields_00001_00002_00004' order represents '6' with '4328'
-4326 4328 0
c Var 'variant_fields_00001_00002_00004' direct represents '6' with '4329'
4326 -4328 4329 0
-4329 4328 0
-4329 -4326 0
c Var 'variant_fields_00001_00002_00004' order represents '7' with '4330'
-4328 4330 0
c Var 'variant_fields_00001_00002_00004' direct represents '7' with '4331'
4328 -4330 4331 0
-4331 4330 0
-4331 -4328 0
c Var 'variant_fields_00001_00002_00004' order represents '8' with '4332'
-4330 4332 0
c Var 'variant_fields_00001_00002_00004' direct represents '8' with '4333'
4330 -4332 4333 0
-4333 4332 0
-4333 -4330 0
c Var 'variant_fields_00001_00002_00004' direct represents '9' with '-4332'
4319 4321 4323 4325 4327 4329 4331 4333 -4332 0
c Encoding variable: variant_fields_00001_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00005' order represents '1' with '4334'
c Var 'variant_fields_00001_00002_00005' direct represents '1' with '4334'
c Var 'variant_fields_00001_00002_00005' order represents '2' with '4335'
-4334 4335 0
c Var 'variant_fields_00001_00002_00005' direct represents '2' with '4336'
4334 -4335 4336 0
-4336 4335 0
-4336 -4334 0
c Var 'variant_fields_00001_00002_00005' order represents '3' with '4337'
-4335 4337 0
c Var 'variant_fields_00001_00002_00005' direct represents '3' with '4338'
4335 -4337 4338 0
-4338 4337 0
-4338 -4335 0
c Var 'variant_fields_00001_00002_00005' order represents '4' with '4339'
-4337 4339 0
c Var 'variant_fields_00001_00002_00005' direct represents '4' with '4340'
4337 -4339 4340 0
-4340 4339 0
-4340 -4337 0
c Var 'variant_fields_00001_00002_00005' order represents '5' with '4341'
-4339 4341 0
c Var 'variant_fields_00001_00002_00005' direct represents '5' with '4342'
4339 -4341 4342 0
-4342 4341 0
-4342 -4339 0
c Var 'variant_fields_00001_00002_00005' order represents '6' with '4343'
-4341 4343 0
c Var 'variant_fields_00001_00002_00005' direct represents '6' with '4344'
4341 -4343 4344 0
-4344 4343 0
-4344 -4341 0
c Var 'variant_fields_00001_00002_00005' order represents '7' with '4345'
-4343 4345 0
c Var 'variant_fields_00001_00002_00005' direct represents '7' with '4346'
4343 -4345 4346 0
-4346 4345 0
-4346 -4343 0
c Var 'variant_fields_00001_00002_00005' order represents '8' with '4347'
-4345 4347 0
c Var 'variant_fields_00001_00002_00005' direct represents '8' with '4348'
4345 -4347 4348 0
-4348 4347 0
-4348 -4345 0
c Var 'variant_fields_00001_00002_00005' direct represents '9' with '-4347'
4334 4336 4338 4340 4342 4344 4346 4348 -4347 0
c Encoding variable: variant_fields_00001_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00006' order represents '1' with '4349'
c Var 'variant_fields_00001_00002_00006' direct represents '1' with '4349'
c Var 'variant_fields_00001_00002_00006' order represents '2' with '4350'
-4349 4350 0
c Var 'variant_fields_00001_00002_00006' direct represents '2' with '4351'
4349 -4350 4351 0
-4351 4350 0
-4351 -4349 0
c Var 'variant_fields_00001_00002_00006' order represents '3' with '4352'
-4350 4352 0
c Var 'variant_fields_00001_00002_00006' direct represents '3' with '4353'
4350 -4352 4353 0
-4353 4352 0
-4353 -4350 0
c Var 'variant_fields_00001_00002_00006' order represents '4' with '4354'
-4352 4354 0
c Var 'variant_fields_00001_00002_00006' direct represents '4' with '4355'
4352 -4354 4355 0
-4355 4354 0
-4355 -4352 0
c Var 'variant_fields_00001_00002_00006' order represents '5' with '4356'
-4354 4356 0
c Var 'variant_fields_00001_00002_00006' direct represents '5' with '4357'
4354 -4356 4357 0
-4357 4356 0
-4357 -4354 0
c Var 'variant_fields_00001_00002_00006' order represents '6' with '4358'
-4356 4358 0
c Var 'variant_fields_00001_00002_00006' direct represents '6' with '4359'
4356 -4358 4359 0
-4359 4358 0
-4359 -4356 0
c Var 'variant_fields_00001_00002_00006' order represents '7' with '4360'
-4358 4360 0
c Var 'variant_fields_00001_00002_00006' direct represents '7' with '4361'
4358 -4360 4361 0
-4361 4360 0
-4361 -4358 0
c Var 'variant_fields_00001_00002_00006' order represents '8' with '4362'
-4360 4362 0
c Var 'variant_fields_00001_00002_00006' direct represents '8' with '4363'
4360 -4362 4363 0
-4363 4362 0
-4363 -4360 0
c Var 'variant_fields_00001_00002_00006' direct represents '9' with '-4362'
4349 4351 4353 4355 4357 4359 4361 4363 -4362 0
c Encoding variable: variant_fields_00001_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00007' order represents '1' with '4364'
c Var 'variant_fields_00001_00002_00007' direct represents '1' with '4364'
c Var 'variant_fields_00001_00002_00007' order represents '2' with '4365'
-4364 4365 0
c Var 'variant_fields_00001_00002_00007' direct represents '2' with '4366'
4364 -4365 4366 0
-4366 4365 0
-4366 -4364 0
c Var 'variant_fields_00001_00002_00007' order represents '3' with '4367'
-4365 4367 0
c Var 'variant_fields_00001_00002_00007' direct represents '3' with '4368'
4365 -4367 4368 0
-4368 4367 0
-4368 -4365 0
c Var 'variant_fields_00001_00002_00007' order represents '4' with '4369'
-4367 4369 0
c Var 'variant_fields_00001_00002_00007' direct represents '4' with '4370'
4367 -4369 4370 0
-4370 4369 0
-4370 -4367 0
c Var 'variant_fields_00001_00002_00007' order represents '5' with '4371'
-4369 4371 0
c Var 'variant_fields_00001_00002_00007' direct represents '5' with '4372'
4369 -4371 4372 0
-4372 4371 0
-4372 -4369 0
c Var 'variant_fields_00001_00002_00007' order represents '6' with '4373'
-4371 4373 0
c Var 'variant_fields_00001_00002_00007' direct represents '6' with '4374'
4371 -4373 4374 0
-4374 4373 0
-4374 -4371 0
c Var 'variant_fields_00001_00002_00007' order represents '7' with '4375'
-4373 4375 0
c Var 'variant_fields_00001_00002_00007' direct represents '7' with '4376'
4373 -4375 4376 0
-4376 4375 0
-4376 -4373 0
c Var 'variant_fields_00001_00002_00007' order represents '8' with '4377'
-4375 4377 0
c Var 'variant_fields_00001_00002_00007' direct represents '8' with '4378'
4375 -4377 4378 0
-4378 4377 0
-4378 -4375 0
c Var 'variant_fields_00001_00002_00007' direct represents '9' with '-4377'
4364 4366 4368 4370 4372 4374 4376 4378 -4377 0
c Encoding variable: variant_fields_00001_00002_00008 with domain: int(7) (representing constraint )
c Var 'variant_fields_00001_00002_00008' direct represents '7' with '4379'
4379 0
c Encoding variable: variant_fields_00001_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00009' order represents '1' with '4380'
c Var 'variant_fields_00001_00002_00009' direct represents '1' with '4380'
c Var 'variant_fields_00001_00002_00009' order represents '2' with '4381'
-4380 4381 0
c Var 'variant_fields_00001_00002_00009' direct represents '2' with '4382'
4380 -4381 4382 0
-4382 4381 0
-4382 -4380 0
c Var 'variant_fields_00001_00002_00009' order represents '3' with '4383'
-4381 4383 0
c Var 'variant_fields_00001_00002_00009' direct represents '3' with '4384'
4381 -4383 4384 0
-4384 4383 0
-4384 -4381 0
c Var 'variant_fields_00001_00002_00009' order represents '4' with '4385'
-4383 4385 0
c Var 'variant_fields_00001_00002_00009' direct represents '4' with '4386'
4383 -4385 4386 0
-4386 4385 0
-4386 -4383 0
c Var 'variant_fields_00001_00002_00009' order represents '5' with '4387'
-4385 4387 0
c Var 'variant_fields_00001_00002_00009' direct represents '5' with '4388'
4385 -4387 4388 0
-4388 4387 0
-4388 -4385 0
c Var 'variant_fields_00001_00002_00009' order represents '6' with '4389'
-4387 4389 0
c Var 'variant_fields_00001_00002_00009' direct represents '6' with '4390'
4387 -4389 4390 0
-4390 4389 0
-4390 -4387 0
c Var 'variant_fields_00001_00002_00009' order represents '7' with '4391'
-4389 4391 0
c Var 'variant_fields_00001_00002_00009' direct represents '7' with '4392'
4389 -4391 4392 0
-4392 4391 0
-4392 -4389 0
c Var 'variant_fields_00001_00002_00009' order represents '8' with '4393'
-4391 4393 0
c Var 'variant_fields_00001_00002_00009' direct represents '8' with '4394'
4391 -4393 4394 0
-4394 4393 0
-4394 -4391 0
c Var 'variant_fields_00001_00002_00009' direct represents '9' with '-4393'
4380 4382 4384 4386 4388 4390 4392 4394 -4393 0
c Encoding variable: variant_fields_00001_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00001' order represents '1' with '4395'
c Var 'variant_fields_00001_00003_00001' direct represents '1' with '4395'
c Var 'variant_fields_00001_00003_00001' order represents '2' with '4396'
-4395 4396 0
c Var 'variant_fields_00001_00003_00001' direct represents '2' with '4397'
4395 -4396 4397 0
-4397 4396 0
-4397 -4395 0
c Var 'variant_fields_00001_00003_00001' order represents '3' with '4398'
-4396 4398 0
c Var 'variant_fields_00001_00003_00001' direct represents '3' with '4399'
4396 -4398 4399 0
-4399 4398 0
-4399 -4396 0
c Var 'variant_fields_00001_00003_00001' order represents '4' with '4400'
-4398 4400 0
c Var 'variant_fields_00001_00003_00001' direct represents '4' with '4401'
4398 -4400 4401 0
-4401 4400 0
-4401 -4398 0
c Var 'variant_fields_00001_00003_00001' order represents '5' with '4402'
-4400 4402 0
c Var 'variant_fields_00001_00003_00001' direct represents '5' with '4403'
4400 -4402 4403 0
-4403 4402 0
-4403 -4400 0
c Var 'variant_fields_00001_00003_00001' order represents '6' with '4404'
-4402 4404 0
c Var 'variant_fields_00001_00003_00001' direct represents '6' with '4405'
4402 -4404 4405 0
-4405 4404 0
-4405 -4402 0
c Var 'variant_fields_00001_00003_00001' order represents '7' with '4406'
-4404 4406 0
c Var 'variant_fields_00001_00003_00001' direct represents '7' with '4407'
4404 -4406 4407 0
-4407 4406 0
-4407 -4404 0
c Var 'variant_fields_00001_00003_00001' order represents '8' with '4408'
-4406 4408 0
c Var 'variant_fields_00001_00003_00001' direct represents '8' with '4409'
4406 -4408 4409 0
-4409 4408 0
-4409 -4406 0
c Var 'variant_fields_00001_00003_00001' direct represents '9' with '-4408'
4395 4397 4399 4401 4403 4405 4407 4409 -4408 0
c Encoding variable: variant_fields_00001_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00002' order represents '1' with '4410'
c Var 'variant_fields_00001_00003_00002' direct represents '1' with '4410'
c Var 'variant_fields_00001_00003_00002' order represents '2' with '4411'
-4410 4411 0
c Var 'variant_fields_00001_00003_00002' direct represents '2' with '4412'
4410 -4411 4412 0
-4412 4411 0
-4412 -4410 0
c Var 'variant_fields_00001_00003_00002' order represents '3' with '4413'
-4411 4413 0
c Var 'variant_fields_00001_00003_00002' direct represents '3' with '4414'
4411 -4413 4414 0
-4414 4413 0
-4414 -4411 0
c Var 'variant_fields_00001_00003_00002' order represents '4' with '4415'
-4413 4415 0
c Var 'variant_fields_00001_00003_00002' direct represents '4' with '4416'
4413 -4415 4416 0
-4416 4415 0
-4416 -4413 0
c Var 'variant_fields_00001_00003_00002' order represents '5' with '4417'
-4415 4417 0
c Var 'variant_fields_00001_00003_00002' direct represents '5' with '4418'
4415 -4417 4418 0
-4418 4417 0
-4418 -4415 0
c Var 'variant_fields_00001_00003_00002' order represents '6' with '4419'
-4417 4419 0
c Var 'variant_fields_00001_00003_00002' direct represents '6' with '4420'
4417 -4419 4420 0
-4420 4419 0
-4420 -4417 0
c Var 'variant_fields_00001_00003_00002' order represents '7' with '4421'
-4419 4421 0
c Var 'variant_fields_00001_00003_00002' direct represents '7' with '4422'
4419 -4421 4422 0
-4422 4421 0
-4422 -4419 0
c Var 'variant_fields_00001_00003_00002' order represents '8' with '4423'
-4421 4423 0
c Var 'variant_fields_00001_00003_00002' direct represents '8' with '4424'
4421 -4423 4424 0
-4424 4423 0
-4424 -4421 0
c Var 'variant_fields_00001_00003_00002' direct represents '9' with '-4423'
4410 4412 4414 4416 4418 4420 4422 4424 -4423 0
c Encoding variable: variant_fields_00001_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00003' order represents '1' with '4425'
c Var 'variant_fields_00001_00003_00003' direct represents '1' with '4425'
c Var 'variant_fields_00001_00003_00003' order represents '2' with '4426'
-4425 4426 0
c Var 'variant_fields_00001_00003_00003' direct represents '2' with '4427'
4425 -4426 4427 0
-4427 4426 0
-4427 -4425 0
c Var 'variant_fields_00001_00003_00003' order represents '3' with '4428'
-4426 4428 0
c Var 'variant_fields_00001_00003_00003' direct represents '3' with '4429'
4426 -4428 4429 0
-4429 4428 0
-4429 -4426 0
c Var 'variant_fields_00001_00003_00003' order represents '4' with '4430'
-4428 4430 0
c Var 'variant_fields_00001_00003_00003' direct represents '4' with '4431'
4428 -4430 4431 0
-4431 4430 0
-4431 -4428 0
c Var 'variant_fields_00001_00003_00003' order represents '5' with '4432'
-4430 4432 0
c Var 'variant_fields_00001_00003_00003' direct represents '5' with '4433'
4430 -4432 4433 0
-4433 4432 0
-4433 -4430 0
c Var 'variant_fields_00001_00003_00003' order represents '6' with '4434'
-4432 4434 0
c Var 'variant_fields_00001_00003_00003' direct represents '6' with '4435'
4432 -4434 4435 0
-4435 4434 0
-4435 -4432 0
c Var 'variant_fields_00001_00003_00003' order represents '7' with '4436'
-4434 4436 0
c Var 'variant_fields_00001_00003_00003' direct represents '7' with '4437'
4434 -4436 4437 0
-4437 4436 0
-4437 -4434 0
c Var 'variant_fields_00001_00003_00003' order represents '8' with '4438'
-4436 4438 0
c Var 'variant_fields_00001_00003_00003' direct represents '8' with '4439'
4436 -4438 4439 0
-4439 4438 0
-4439 -4436 0
c Var 'variant_fields_00001_00003_00003' direct represents '9' with '-4438'
4425 4427 4429 4431 4433 4435 4437 4439 -4438 0
c Encoding variable: variant_fields_00001_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00004' order represents '1' with '4440'
c Var 'variant_fields_00001_00003_00004' direct represents '1' with '4440'
c Var 'variant_fields_00001_00003_00004' order represents '2' with '4441'
-4440 4441 0
c Var 'variant_fields_00001_00003_00004' direct represents '2' with '4442'
4440 -4441 4442 0
-4442 4441 0
-4442 -4440 0
c Var 'variant_fields_00001_00003_00004' order represents '3' with '4443'
-4441 4443 0
c Var 'variant_fields_00001_00003_00004' direct represents '3' with '4444'
4441 -4443 4444 0
-4444 4443 0
-4444 -4441 0
c Var 'variant_fields_00001_00003_00004' order represents '4' with '4445'
-4443 4445 0
c Var 'variant_fields_00001_00003_00004' direct represents '4' with '4446'
4443 -4445 4446 0
-4446 4445 0
-4446 -4443 0
c Var 'variant_fields_00001_00003_00004' order represents '5' with '4447'
-4445 4447 0
c Var 'variant_fields_00001_00003_00004' direct represents '5' with '4448'
4445 -4447 4448 0
-4448 4447 0
-4448 -4445 0
c Var 'variant_fields_00001_00003_00004' order represents '6' with '4449'
-4447 4449 0
c Var 'variant_fields_00001_00003_00004' direct represents '6' with '4450'
4447 -4449 4450 0
-4450 4449 0
-4450 -4447 0
c Var 'variant_fields_00001_00003_00004' order represents '7' with '4451'
-4449 4451 0
c Var 'variant_fields_00001_00003_00004' direct represents '7' with '4452'
4449 -4451 4452 0
-4452 4451 0
-4452 -4449 0
c Var 'variant_fields_00001_00003_00004' order represents '8' with '4453'
-4451 4453 0
c Var 'variant_fields_00001_00003_00004' direct represents '8' with '4454'
4451 -4453 4454 0
-4454 4453 0
-4454 -4451 0
c Var 'variant_fields_00001_00003_00004' direct represents '9' with '-4453'
4440 4442 4444 4446 4448 4450 4452 4454 -4453 0
c Encoding variable: variant_fields_00001_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00005' order represents '1' with '4455'
c Var 'variant_fields_00001_00003_00005' direct represents '1' with '4455'
c Var 'variant_fields_00001_00003_00005' order represents '2' with '4456'
-4455 4456 0
c Var 'variant_fields_00001_00003_00005' direct represents '2' with '4457'
4455 -4456 4457 0
-4457 4456 0
-4457 -4455 0
c Var 'variant_fields_00001_00003_00005' order represents '3' with '4458'
-4456 4458 0
c Var 'variant_fields_00001_00003_00005' direct represents '3' with '4459'
4456 -4458 4459 0
-4459 4458 0
-4459 -4456 0
c Var 'variant_fields_00001_00003_00005' order represents '4' with '4460'
-4458 4460 0
c Var 'variant_fields_00001_00003_00005' direct represents '4' with '4461'
4458 -4460 4461 0
-4461 4460 0
-4461 -4458 0
c Var 'variant_fields_00001_00003_00005' order represents '5' with '4462'
-4460 4462 0
c Var 'variant_fields_00001_00003_00005' direct represents '5' with '4463'
4460 -4462 4463 0
-4463 4462 0
-4463 -4460 0
c Var 'variant_fields_00001_00003_00005' order represents '6' with '4464'
-4462 4464 0
c Var 'variant_fields_00001_00003_00005' direct represents '6' with '4465'
4462 -4464 4465 0
-4465 4464 0
-4465 -4462 0
c Var 'variant_fields_00001_00003_00005' order represents '7' with '4466'
-4464 4466 0
c Var 'variant_fields_00001_00003_00005' direct represents '7' with '4467'
4464 -4466 4467 0
-4467 4466 0
-4467 -4464 0
c Var 'variant_fields_00001_00003_00005' order represents '8' with '4468'
-4466 4468 0
c Var 'variant_fields_00001_00003_00005' direct represents '8' with '4469'
4466 -4468 4469 0
-4469 4468 0
-4469 -4466 0
c Var 'variant_fields_00001_00003_00005' direct represents '9' with '-4468'
4455 4457 4459 4461 4463 4465 4467 4469 -4468 0
c Encoding variable: variant_fields_00001_00003_00006 with domain: int(6) (representing constraint )
c Var 'variant_fields_00001_00003_00006' direct represents '6' with '4470'
4470 0
c Encoding variable: variant_fields_00001_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00007' order represents '1' with '4471'
c Var 'variant_fields_00001_00003_00007' direct represents '1' with '4471'
c Var 'variant_fields_00001_00003_00007' order represents '2' with '4472'
-4471 4472 0
c Var 'variant_fields_00001_00003_00007' direct represents '2' with '4473'
4471 -4472 4473 0
-4473 4472 0
-4473 -4471 0
c Var 'variant_fields_00001_00003_00007' order represents '3' with '4474'
-4472 4474 0
c Var 'variant_fields_00001_00003_00007' direct represents '3' with '4475'
4472 -4474 4475 0
-4475 4474 0
-4475 -4472 0
c Var 'variant_fields_00001_00003_00007' order represents '4' with '4476'
-4474 4476 0
c Var 'variant_fields_00001_00003_00007' direct represents '4' with '4477'
4474 -4476 4477 0
-4477 4476 0
-4477 -4474 0
c Var 'variant_fields_00001_00003_00007' order represents '5' with '4478'
-4476 4478 0
c Var 'variant_fields_00001_00003_00007' direct represents '5' with '4479'
4476 -4478 4479 0
-4479 4478 0
-4479 -4476 0
c Var 'variant_fields_00001_00003_00007' order represents '6' with '4480'
-4478 4480 0
c Var 'variant_fields_00001_00003_00007' direct represents '6' with '4481'
4478 -4480 4481 0
-4481 4480 0
-4481 -4478 0
c Var 'variant_fields_00001_00003_00007' order represents '7' with '4482'
-4480 4482 0
c Var 'variant_fields_00001_00003_00007' direct represents '7' with '4483'
4480 -4482 4483 0
-4483 4482 0
-4483 -4480 0
c Var 'variant_fields_00001_00003_00007' order represents '8' with '4484'
-4482 4484 0
c Var 'variant_fields_00001_00003_00007' direct represents '8' with '4485'
4482 -4484 4485 0
-4485 4484 0
-4485 -4482 0
c Var 'variant_fields_00001_00003_00007' direct represents '9' with '-4484'
4471 4473 4475 4477 4479 4481 4483 4485 -4484 0
c Encoding variable: variant_fields_00001_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00008' order represents '1' with '4486'
c Var 'variant_fields_00001_00003_00008' direct represents '1' with '4486'
c Var 'variant_fields_00001_00003_00008' order represents '2' with '4487'
-4486 4487 0
c Var 'variant_fields_00001_00003_00008' direct represents '2' with '4488'
4486 -4487 4488 0
-4488 4487 0
-4488 -4486 0
c Var 'variant_fields_00001_00003_00008' order represents '3' with '4489'
-4487 4489 0
c Var 'variant_fields_00001_00003_00008' direct represents '3' with '4490'
4487 -4489 4490 0
-4490 4489 0
-4490 -4487 0
c Var 'variant_fields_00001_00003_00008' order represents '4' with '4491'
-4489 4491 0
c Var 'variant_fields_00001_00003_00008' direct represents '4' with '4492'
4489 -4491 4492 0
-4492 4491 0
-4492 -4489 0
c Var 'variant_fields_00001_00003_00008' order represents '5' with '4493'
-4491 4493 0
c Var 'variant_fields_00001_00003_00008' direct represents '5' with '4494'
4491 -4493 4494 0
-4494 4493 0
-4494 -4491 0
c Var 'variant_fields_00001_00003_00008' order represents '6' with '4495'
-4493 4495 0
c Var 'variant_fields_00001_00003_00008' direct represents '6' with '4496'
4493 -4495 4496 0
-4496 4495 0
-4496 -4493 0
c Var 'variant_fields_00001_00003_00008' order represents '7' with '4497'
-4495 4497 0
c Var 'variant_fields_00001_00003_00008' direct represents '7' with '4498'
4495 -4497 4498 0
-4498 4497 0
-4498 -4495 0
c Var 'variant_fields_00001_00003_00008' order represents '8' with '4499'
-4497 4499 0
c Var 'variant_fields_00001_00003_00008' direct represents '8' with '4500'
4497 -4499 4500 0
-4500 4499 0
-4500 -4497 0
c Var 'variant_fields_00001_00003_00008' direct represents '9' with '-4499'
4486 4488 4490 4492 4494 4496 4498 4500 -4499 0
c Encoding variable: variant_fields_00001_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00009' order represents '1' with '4501'
c Var 'variant_fields_00001_00003_00009' direct represents '1' with '4501'
c Var 'variant_fields_00001_00003_00009' order represents '2' with '4502'
-4501 4502 0
c Var 'variant_fields_00001_00003_00009' direct represents '2' with '4503'
4501 -4502 4503 0
-4503 4502 0
-4503 -4501 0
c Var 'variant_fields_00001_00003_00009' order represents '3' with '4504'
-4502 4504 0
c Var 'variant_fields_00001_00003_00009' direct represents '3' with '4505'
4502 -4504 4505 0
-4505 4504 0
-4505 -4502 0
c Var 'variant_fields_00001_00003_00009' order represents '4' with '4506'
-4504 4506 0
c Var 'variant_fields_00001_00003_00009' direct represents '4' with '4507'
4504 -4506 4507 0
-4507 4506 0
-4507 -4504 0
c Var 'variant_fields_00001_00003_00009' order represents '5' with '4508'
-4506 4508 0
c Var 'variant_fields_00001_00003_00009' direct represents '5' with '4509'
4506 -4508 4509 0
-4509 4508 0
-4509 -4506 0
c Var 'variant_fields_00001_00003_00009' order represents '6' with '4510'
-4508 4510 0
c Var 'variant_fields_00001_00003_00009' direct represents '6' with '4511'
4508 -4510 4511 0
-4511 4510 0
-4511 -4508 0
c Var 'variant_fields_00001_00003_00009' order represents '7' with '4512'
-4510 4512 0
c Var 'variant_fields_00001_00003_00009' direct represents '7' with '4513'
4510 -4512 4513 0
-4513 4512 0
-4513 -4510 0
c Var 'variant_fields_00001_00003_00009' order represents '8' with '4514'
-4512 4514 0
c Var 'variant_fields_00001_00003_00009' direct represents '8' with '4515'
4512 -4514 4515 0
-4515 4514 0
-4515 -4512 0
c Var 'variant_fields_00001_00003_00009' direct represents '9' with '-4514'
4501 4503 4505 4507 4509 4511 4513 4515 -4514 0
c Encoding variable: variant_fields_00001_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00001' order represents '1' with '4516'
c Var 'variant_fields_00001_00004_00001' direct represents '1' with '4516'
c Var 'variant_fields_00001_00004_00001' order represents '2' with '4517'
-4516 4517 0
c Var 'variant_fields_00001_00004_00001' direct represents '2' with '4518'
4516 -4517 4518 0
-4518 4517 0
-4518 -4516 0
c Var 'variant_fields_00001_00004_00001' order represents '3' with '4519'
-4517 4519 0
c Var 'variant_fields_00001_00004_00001' direct represents '3' with '4520'
4517 -4519 4520 0
-4520 4519 0
-4520 -4517 0
c Var 'variant_fields_00001_00004_00001' order represents '4' with '4521'
-4519 4521 0
c Var 'variant_fields_00001_00004_00001' direct represents '4' with '4522'
4519 -4521 4522 0
-4522 4521 0
-4522 -4519 0
c Var 'variant_fields_00001_00004_00001' order represents '5' with '4523'
-4521 4523 0
c Var 'variant_fields_00001_00004_00001' direct represents '5' with '4524'
4521 -4523 4524 0
-4524 4523 0
-4524 -4521 0
c Var 'variant_fields_00001_00004_00001' order represents '6' with '4525'
-4523 4525 0
c Var 'variant_fields_00001_00004_00001' direct represents '6' with '4526'
4523 -4525 4526 0
-4526 4525 0
-4526 -4523 0
c Var 'variant_fields_00001_00004_00001' order represents '7' with '4527'
-4525 4527 0
c Var 'variant_fields_00001_00004_00001' direct represents '7' with '4528'
4525 -4527 4528 0
-4528 4527 0
-4528 -4525 0
c Var 'variant_fields_00001_00004_00001' order represents '8' with '4529'
-4527 4529 0
c Var 'variant_fields_00001_00004_00001' direct represents '8' with '4530'
4527 -4529 4530 0
-4530 4529 0
-4530 -4527 0
c Var 'variant_fields_00001_00004_00001' direct represents '9' with '-4529'
4516 4518 4520 4522 4524 4526 4528 4530 -4529 0
c Encoding variable: variant_fields_00001_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00002' order represents '1' with '4531'
c Var 'variant_fields_00001_00004_00002' direct represents '1' with '4531'
c Var 'variant_fields_00001_00004_00002' order represents '2' with '4532'
-4531 4532 0
c Var 'variant_fields_00001_00004_00002' direct represents '2' with '4533'
4531 -4532 4533 0
-4533 4532 0
-4533 -4531 0
c Var 'variant_fields_00001_00004_00002' order represents '3' with '4534'
-4532 4534 0
c Var 'variant_fields_00001_00004_00002' direct represents '3' with '4535'
4532 -4534 4535 0
-4535 4534 0
-4535 -4532 0
c Var 'variant_fields_00001_00004_00002' order represents '4' with '4536'
-4534 4536 0
c Var 'variant_fields_00001_00004_00002' direct represents '4' with '4537'
4534 -4536 4537 0
-4537 4536 0
-4537 -4534 0
c Var 'variant_fields_00001_00004_00002' order represents '5' with '4538'
-4536 4538 0
c Var 'variant_fields_00001_00004_00002' direct represents '5' with '4539'
4536 -4538 4539 0
-4539 4538 0
-4539 -4536 0
c Var 'variant_fields_00001_00004_00002' order represents '6' with '4540'
-4538 4540 0
c Var 'variant_fields_00001_00004_00002' direct represents '6' with '4541'
4538 -4540 4541 0
-4541 4540 0
-4541 -4538 0
c Var 'variant_fields_00001_00004_00002' order represents '7' with '4542'
-4540 4542 0
c Var 'variant_fields_00001_00004_00002' direct represents '7' with '4543'
4540 -4542 4543 0
-4543 4542 0
-4543 -4540 0
c Var 'variant_fields_00001_00004_00002' order represents '8' with '4544'
-4542 4544 0
c Var 'variant_fields_00001_00004_00002' direct represents '8' with '4545'
4542 -4544 4545 0
-4545 4544 0
-4545 -4542 0
c Var 'variant_fields_00001_00004_00002' direct represents '9' with '-4544'
4531 4533 4535 4537 4539 4541 4543 4545 -4544 0
c Encoding variable: variant_fields_00001_00004_00003 with domain: int(1) (representing constraint )
c Var 'variant_fields_00001_00004_00003' direct represents '1' with '4546'
4546 0
c Encoding variable: variant_fields_00001_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00004' order represents '1' with '4547'
c Var 'variant_fields_00001_00004_00004' direct represents '1' with '4547'
c Var 'variant_fields_00001_00004_00004' order represents '2' with '4548'
-4547 4548 0
c Var 'variant_fields_00001_00004_00004' direct represents '2' with '4549'
4547 -4548 4549 0
-4549 4548 0
-4549 -4547 0
c Var 'variant_fields_00001_00004_00004' order represents '3' with '4550'
-4548 4550 0
c Var 'variant_fields_00001_00004_00004' direct represents '3' with '4551'
4548 -4550 4551 0
-4551 4550 0
-4551 -4548 0
c Var 'variant_fields_00001_00004_00004' order represents '4' with '4552'
-4550 4552 0
c Var 'variant_fields_00001_00004_00004' direct represents '4' with '4553'
4550 -4552 4553 0
-4553 4552 0
-4553 -4550 0
c Var 'variant_fields_00001_00004_00004' order represents '5' with '4554'
-4552 4554 0
c Var 'variant_fields_00001_00004_00004' direct represents '5' with '4555'
4552 -4554 4555 0
-4555 4554 0
-4555 -4552 0
c Var 'variant_fields_00001_00004_00004' order represents '6' with '4556'
-4554 4556 0
c Var 'variant_fields_00001_00004_00004' direct represents '6' with '4557'
4554 -4556 4557 0
-4557 4556 0
-4557 -4554 0
c Var 'variant_fields_00001_00004_00004' order represents '7' with '4558'
-4556 4558 0
c Var 'variant_fields_00001_00004_00004' direct represents '7' with '4559'
4556 -4558 4559 0
-4559 4558 0
-4559 -4556 0
c Var 'variant_fields_00001_00004_00004' order represents '8' with '4560'
-4558 4560 0
c Var 'variant_fields_00001_00004_00004' direct represents '8' with '4561'
4558 -4560 4561 0
-4561 4560 0
-4561 -4558 0
c Var 'variant_fields_00001_00004_00004' direct represents '9' with '-4560'
4547 4549 4551 4553 4555 4557 4559 4561 -4560 0
c Encoding variable: variant_fields_00001_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00005' order represents '1' with '4562'
c Var 'variant_fields_00001_00004_00005' direct represents '1' with '4562'
c Var 'variant_fields_00001_00004_00005' order represents '2' with '4563'
-4562 4563 0
c Var 'variant_fields_00001_00004_00005' direct represents '2' with '4564'
4562 -4563 4564 0
-4564 4563 0
-4564 -4562 0
c Var 'variant_fields_00001_00004_00005' order represents '3' with '4565'
-4563 4565 0
c Var 'variant_fields_00001_00004_00005' direct represents '3' with '4566'
4563 -4565 4566 0
-4566 4565 0
-4566 -4563 0
c Var 'variant_fields_00001_00004_00005' order represents '4' with '4567'
-4565 4567 0
c Var 'variant_fields_00001_00004_00005' direct represents '4' with '4568'
4565 -4567 4568 0
-4568 4567 0
-4568 -4565 0
c Var 'variant_fields_00001_00004_00005' order represents '5' with '4569'
-4567 4569 0
c Var 'variant_fields_00001_00004_00005' direct represents '5' with '4570'
4567 -4569 4570 0
-4570 4569 0
-4570 -4567 0
c Var 'variant_fields_00001_00004_00005' order represents '6' with '4571'
-4569 4571 0
c Var 'variant_fields_00001_00004_00005' direct represents '6' with '4572'
4569 -4571 4572 0
-4572 4571 0
-4572 -4569 0
c Var 'variant_fields_00001_00004_00005' order represents '7' with '4573'
-4571 4573 0
c Var 'variant_fields_00001_00004_00005' direct represents '7' with '4574'
4571 -4573 4574 0
-4574 4573 0
-4574 -4571 0
c Var 'variant_fields_00001_00004_00005' order represents '8' with '4575'
-4573 4575 0
c Var 'variant_fields_00001_00004_00005' direct represents '8' with '4576'
4573 -4575 4576 0
-4576 4575 0
-4576 -4573 0
c Var 'variant_fields_00001_00004_00005' direct represents '9' with '-4575'
4562 4564 4566 4568 4570 4572 4574 4576 -4575 0
c Encoding variable: variant_fields_00001_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00006' order represents '1' with '4577'
c Var 'variant_fields_00001_00004_00006' direct represents '1' with '4577'
c Var 'variant_fields_00001_00004_00006' order represents '2' with '4578'
-4577 4578 0
c Var 'variant_fields_00001_00004_00006' direct represents '2' with '4579'
4577 -4578 4579 0
-4579 4578 0
-4579 -4577 0
c Var 'variant_fields_00001_00004_00006' order represents '3' with '4580'
-4578 4580 0
c Var 'variant_fields_00001_00004_00006' direct represents '3' with '4581'
4578 -4580 4581 0
-4581 4580 0
-4581 -4578 0
c Var 'variant_fields_00001_00004_00006' order represents '4' with '4582'
-4580 4582 0
c Var 'variant_fields_00001_00004_00006' direct represents '4' with '4583'
4580 -4582 4583 0
-4583 4582 0
-4583 -4580 0
c Var 'variant_fields_00001_00004_00006' order represents '5' with '4584'
-4582 4584 0
c Var 'variant_fields_00001_00004_00006' direct represents '5' with '4585'
4582 -4584 4585 0
-4585 4584 0
-4585 -4582 0
c Var 'variant_fields_00001_00004_00006' order represents '6' with '4586'
-4584 4586 0
c Var 'variant_fields_00001_00004_00006' direct represents '6' with '4587'
4584 -4586 4587 0
-4587 4586 0
-4587 -4584 0
c Var 'variant_fields_00001_00004_00006' order represents '7' with '4588'
-4586 4588 0
c Var 'variant_fields_00001_00004_00006' direct represents '7' with '4589'
4586 -4588 4589 0
-4589 4588 0
-4589 -4586 0
c Var 'variant_fields_00001_00004_00006' order represents '8' with '4590'
-4588 4590 0
c Var 'variant_fields_00001_00004_00006' direct represents '8' with '4591'
4588 -4590 4591 0
-4591 4590 0
-4591 -4588 0
c Var 'variant_fields_00001_00004_00006' direct represents '9' with '-4590'
4577 4579 4581 4583 4585 4587 4589 4591 -4590 0
c Encoding variable: variant_fields_00001_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00007' order represents '1' with '4592'
c Var 'variant_fields_00001_00004_00007' direct represents '1' with '4592'
c Var 'variant_fields_00001_00004_00007' order represents '2' with '4593'
-4592 4593 0
c Var 'variant_fields_00001_00004_00007' direct represents '2' with '4594'
4592 -4593 4594 0
-4594 4593 0
-4594 -4592 0
c Var 'variant_fields_00001_00004_00007' order represents '3' with '4595'
-4593 4595 0
c Var 'variant_fields_00001_00004_00007' direct represents '3' with '4596'
4593 -4595 4596 0
-4596 4595 0
-4596 -4593 0
c Var 'variant_fields_00001_00004_00007' order represents '4' with '4597'
-4595 4597 0
c Var 'variant_fields_00001_00004_00007' direct represents '4' with '4598'
4595 -4597 4598 0
-4598 4597 0
-4598 -4595 0
c Var 'variant_fields_00001_00004_00007' order represents '5' with '4599'
-4597 4599 0
c Var 'variant_fields_00001_00004_00007' direct represents '5' with '4600'
4597 -4599 4600 0
-4600 4599 0
-4600 -4597 0
c Var 'variant_fields_00001_00004_00007' order represents '6' with '4601'
-4599 4601 0
c Var 'variant_fields_00001_00004_00007' direct represents '6' with '4602'
4599 -4601 4602 0
-4602 4601 0
-4602 -4599 0
c Var 'variant_fields_00001_00004_00007' order represents '7' with '4603'
-4601 4603 0
c Var 'variant_fields_00001_00004_00007' direct represents '7' with '4604'
4601 -4603 4604 0
-4604 4603 0
-4604 -4601 0
c Var 'variant_fields_00001_00004_00007' order represents '8' with '4605'
-4603 4605 0
c Var 'variant_fields_00001_00004_00007' direct represents '8' with '4606'
4603 -4605 4606 0
-4606 4605 0
-4606 -4603 0
c Var 'variant_fields_00001_00004_00007' direct represents '9' with '-4605'
4592 4594 4596 4598 4600 4602 4604 4606 -4605 0
c Encoding variable: variant_fields_00001_00004_00008 with domain: int(3) (representing constraint )
c Var 'variant_fields_00001_00004_00008' direct represents '3' with '4607'
4607 0
c Encoding variable: variant_fields_00001_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00009' order represents '1' with '4608'
c Var 'variant_fields_00001_00004_00009' direct represents '1' with '4608'
c Var 'variant_fields_00001_00004_00009' order represents '2' with '4609'
-4608 4609 0
c Var 'variant_fields_00001_00004_00009' direct represents '2' with '4610'
4608 -4609 4610 0
-4610 4609 0
-4610 -4608 0
c Var 'variant_fields_00001_00004_00009' order represents '3' with '4611'
-4609 4611 0
c Var 'variant_fields_00001_00004_00009' direct represents '3' with '4612'
4609 -4611 4612 0
-4612 4611 0
-4612 -4609 0
c Var 'variant_fields_00001_00004_00009' order represents '4' with '4613'
-4611 4613 0
c Var 'variant_fields_00001_00004_00009' direct represents '4' with '4614'
4611 -4613 4614 0
-4614 4613 0
-4614 -4611 0
c Var 'variant_fields_00001_00004_00009' order represents '5' with '4615'
-4613 4615 0
c Var 'variant_fields_00001_00004_00009' direct represents '5' with '4616'
4613 -4615 4616 0
-4616 4615 0
-4616 -4613 0
c Var 'variant_fields_00001_00004_00009' order represents '6' with '4617'
-4615 4617 0
c Var 'variant_fields_00001_00004_00009' direct represents '6' with '4618'
4615 -4617 4618 0
-4618 4617 0
-4618 -4615 0
c Var 'variant_fields_00001_00004_00009' order represents '7' with '4619'
-4617 4619 0
c Var 'variant_fields_00001_00004_00009' direct represents '7' with '4620'
4617 -4619 4620 0
-4620 4619 0
-4620 -4617 0
c Var 'variant_fields_00001_00004_00009' order represents '8' with '4621'
-4619 4621 0
c Var 'variant_fields_00001_00004_00009' direct represents '8' with '4622'
4619 -4621 4622 0
-4622 4621 0
-4622 -4619 0
c Var 'variant_fields_00001_00004_00009' direct represents '9' with '-4621'
4608 4610 4612 4614 4616 4618 4620 4622 -4621 0
c Encoding variable: variant_fields_00001_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00001' order represents '1' with '4623'
c Var 'variant_fields_00001_00005_00001' direct represents '1' with '4623'
c Var 'variant_fields_00001_00005_00001' order represents '2' with '4624'
-4623 4624 0
c Var 'variant_fields_00001_00005_00001' direct represents '2' with '4625'
4623 -4624 4625 0
-4625 4624 0
-4625 -4623 0
c Var 'variant_fields_00001_00005_00001' order represents '3' with '4626'
-4624 4626 0
c Var 'variant_fields_00001_00005_00001' direct represents '3' with '4627'
4624 -4626 4627 0
-4627 4626 0
-4627 -4624 0
c Var 'variant_fields_00001_00005_00001' order represents '4' with '4628'
-4626 4628 0
c Var 'variant_fields_00001_00005_00001' direct represents '4' with '4629'
4626 -4628 4629 0
-4629 4628 0
-4629 -4626 0
c Var 'variant_fields_00001_00005_00001' order represents '5' with '4630'
-4628 4630 0
c Var 'variant_fields_00001_00005_00001' direct represents '5' with '4631'
4628 -4630 4631 0
-4631 4630 0
-4631 -4628 0
c Var 'variant_fields_00001_00005_00001' order represents '6' with '4632'
-4630 4632 0
c Var 'variant_fields_00001_00005_00001' direct represents '6' with '4633'
4630 -4632 4633 0
-4633 4632 0
-4633 -4630 0
c Var 'variant_fields_00001_00005_00001' order represents '7' with '4634'
-4632 4634 0
c Var 'variant_fields_00001_00005_00001' direct represents '7' with '4635'
4632 -4634 4635 0
-4635 4634 0
-4635 -4632 0
c Var 'variant_fields_00001_00005_00001' order represents '8' with '4636'
-4634 4636 0
c Var 'variant_fields_00001_00005_00001' direct represents '8' with '4637'
4634 -4636 4637 0
-4637 4636 0
-4637 -4634 0
c Var 'variant_fields_00001_00005_00001' direct represents '9' with '-4636'
4623 4625 4627 4629 4631 4633 4635 4637 -4636 0
c Encoding variable: variant_fields_00001_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00002' order represents '1' with '4638'
c Var 'variant_fields_00001_00005_00002' direct represents '1' with '4638'
c Var 'variant_fields_00001_00005_00002' order represents '2' with '4639'
-4638 4639 0
c Var 'variant_fields_00001_00005_00002' direct represents '2' with '4640'
4638 -4639 4640 0
-4640 4639 0
-4640 -4638 0
c Var 'variant_fields_00001_00005_00002' order represents '3' with '4641'
-4639 4641 0
c Var 'variant_fields_00001_00005_00002' direct represents '3' with '4642'
4639 -4641 4642 0
-4642 4641 0
-4642 -4639 0
c Var 'variant_fields_00001_00005_00002' order represents '4' with '4643'
-4641 4643 0
c Var 'variant_fields_00001_00005_00002' direct represents '4' with '4644'
4641 -4643 4644 0
-4644 4643 0
-4644 -4641 0
c Var 'variant_fields_00001_00005_00002' order represents '5' with '4645'
-4643 4645 0
c Var 'variant_fields_00001_00005_00002' direct represents '5' with '4646'
4643 -4645 4646 0
-4646 4645 0
-4646 -4643 0
c Var 'variant_fields_00001_00005_00002' order represents '6' with '4647'
-4645 4647 0
c Var 'variant_fields_00001_00005_00002' direct represents '6' with '4648'
4645 -4647 4648 0
-4648 4647 0
-4648 -4645 0
c Var 'variant_fields_00001_00005_00002' order represents '7' with '4649'
-4647 4649 0
c Var 'variant_fields_00001_00005_00002' direct represents '7' with '4650'
4647 -4649 4650 0
-4650 4649 0
-4650 -4647 0
c Var 'variant_fields_00001_00005_00002' order represents '8' with '4651'
-4649 4651 0
c Var 'variant_fields_00001_00005_00002' direct represents '8' with '4652'
4649 -4651 4652 0
-4652 4651 0
-4652 -4649 0
c Var 'variant_fields_00001_00005_00002' direct represents '9' with '-4651'
4638 4640 4642 4644 4646 4648 4650 4652 -4651 0
c Encoding variable: variant_fields_00001_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00003' order represents '1' with '4653'
c Var 'variant_fields_00001_00005_00003' direct represents '1' with '4653'
c Var 'variant_fields_00001_00005_00003' order represents '2' with '4654'
-4653 4654 0
c Var 'variant_fields_00001_00005_00003' direct represents '2' with '4655'
4653 -4654 4655 0
-4655 4654 0
-4655 -4653 0
c Var 'variant_fields_00001_00005_00003' order represents '3' with '4656'
-4654 4656 0
c Var 'variant_fields_00001_00005_00003' direct represents '3' with '4657'
4654 -4656 4657 0
-4657 4656 0
-4657 -4654 0
c Var 'variant_fields_00001_00005_00003' order represents '4' with '4658'
-4656 4658 0
c Var 'variant_fields_00001_00005_00003' direct represents '4' with '4659'
4656 -4658 4659 0
-4659 4658 0
-4659 -4656 0
c Var 'variant_fields_00001_00005_00003' order represents '5' with '4660'
-4658 4660 0
c Var 'variant_fields_00001_00005_00003' direct represents '5' with '4661'
4658 -4660 4661 0
-4661 4660 0
-4661 -4658 0
c Var 'variant_fields_00001_00005_00003' order represents '6' with '4662'
-4660 4662 0
c Var 'variant_fields_00001_00005_00003' direct represents '6' with '4663'
4660 -4662 4663 0
-4663 4662 0
-4663 -4660 0
c Var 'variant_fields_00001_00005_00003' order represents '7' with '4664'
-4662 4664 0
c Var 'variant_fields_00001_00005_00003' direct represents '7' with '4665'
4662 -4664 4665 0
-4665 4664 0
-4665 -4662 0
c Var 'variant_fields_00001_00005_00003' order represents '8' with '4666'
-4664 4666 0
c Var 'variant_fields_00001_00005_00003' direct represents '8' with '4667'
4664 -4666 4667 0
-4667 4666 0
-4667 -4664 0
c Var 'variant_fields_00001_00005_00003' direct represents '9' with '-4666'
4653 4655 4657 4659 4661 4663 4665 4667 -4666 0
c Encoding variable: variant_fields_00001_00005_00004 with domain: int(1) (representing constraint )
c Var 'variant_fields_00001_00005_00004' direct represents '1' with '4668'
4668 0
c Encoding variable: variant_fields_00001_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00005' order represents '1' with '4669'
c Var 'variant_fields_00001_00005_00005' direct represents '1' with '4669'
c Var 'variant_fields_00001_00005_00005' order represents '2' with '4670'
-4669 4670 0
c Var 'variant_fields_00001_00005_00005' direct represents '2' with '4671'
4669 -4670 4671 0
-4671 4670 0
-4671 -4669 0
c Var 'variant_fields_00001_00005_00005' order represents '3' with '4672'
-4670 4672 0
c Var 'variant_fields_00001_00005_00005' direct represents '3' with '4673'
4670 -4672 4673 0
-4673 4672 0
-4673 -4670 0
c Var 'variant_fields_00001_00005_00005' order represents '4' with '4674'
-4672 4674 0
c Var 'variant_fields_00001_00005_00005' direct represents '4' with '4675'
4672 -4674 4675 0
-4675 4674 0
-4675 -4672 0
c Var 'variant_fields_00001_00005_00005' order represents '5' with '4676'
-4674 4676 0
c Var 'variant_fields_00001_00005_00005' direct represents '5' with '4677'
4674 -4676 4677 0
-4677 4676 0
-4677 -4674 0
c Var 'variant_fields_00001_00005_00005' order represents '6' with '4678'
-4676 4678 0
c Var 'variant_fields_00001_00005_00005' direct represents '6' with '4679'
4676 -4678 4679 0
-4679 4678 0
-4679 -4676 0
c Var 'variant_fields_00001_00005_00005' order represents '7' with '4680'
-4678 4680 0
c Var 'variant_fields_00001_00005_00005' direct represents '7' with '4681'
4678 -4680 4681 0
-4681 4680 0
-4681 -4678 0
c Var 'variant_fields_00001_00005_00005' order represents '8' with '4682'
-4680 4682 0
c Var 'variant_fields_00001_00005_00005' direct represents '8' with '4683'
4680 -4682 4683 0
-4683 4682 0
-4683 -4680 0
c Var 'variant_fields_00001_00005_00005' direct represents '9' with '-4682'
4669 4671 4673 4675 4677 4679 4681 4683 -4682 0
c Encoding variable: variant_fields_00001_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00006' order represents '1' with '4684'
c Var 'variant_fields_00001_00005_00006' direct represents '1' with '4684'
c Var 'variant_fields_00001_00005_00006' order represents '2' with '4685'
-4684 4685 0
c Var 'variant_fields_00001_00005_00006' direct represents '2' with '4686'
4684 -4685 4686 0
-4686 4685 0
-4686 -4684 0
c Var 'variant_fields_00001_00005_00006' order represents '3' with '4687'
-4685 4687 0
c Var 'variant_fields_00001_00005_00006' direct represents '3' with '4688'
4685 -4687 4688 0
-4688 4687 0
-4688 -4685 0
c Var 'variant_fields_00001_00005_00006' order represents '4' with '4689'
-4687 4689 0
c Var 'variant_fields_00001_00005_00006' direct represents '4' with '4690'
4687 -4689 4690 0
-4690 4689 0
-4690 -4687 0
c Var 'variant_fields_00001_00005_00006' order represents '5' with '4691'
-4689 4691 0
c Var 'variant_fields_00001_00005_00006' direct represents '5' with '4692'
4689 -4691 4692 0
-4692 4691 0
-4692 -4689 0
c Var 'variant_fields_00001_00005_00006' order represents '6' with '4693'
-4691 4693 0
c Var 'variant_fields_00001_00005_00006' direct represents '6' with '4694'
4691 -4693 4694 0
-4694 4693 0
-4694 -4691 0
c Var 'variant_fields_00001_00005_00006' order represents '7' with '4695'
-4693 4695 0
c Var 'variant_fields_00001_00005_00006' direct represents '7' with '4696'
4693 -4695 4696 0
-4696 4695 0
-4696 -4693 0
c Var 'variant_fields_00001_00005_00006' order represents '8' with '4697'
-4695 4697 0
c Var 'variant_fields_00001_00005_00006' direct represents '8' with '4698'
4695 -4697 4698 0
-4698 4697 0
-4698 -4695 0
c Var 'variant_fields_00001_00005_00006' direct represents '9' with '-4697'
4684 4686 4688 4690 4692 4694 4696 4698 -4697 0
c Encoding variable: variant_fields_00001_00005_00007 with domain: int(7) (representing constraint )
c Var 'variant_fields_00001_00005_00007' direct represents '7' with '4699'
4699 0
c Encoding variable: variant_fields_00001_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00008' order represents '1' with '4700'
c Var 'variant_fields_00001_00005_00008' direct represents '1' with '4700'
c Var 'variant_fields_00001_00005_00008' order represents '2' with '4701'
-4700 4701 0
c Var 'variant_fields_00001_00005_00008' direct represents '2' with '4702'
4700 -4701 4702 0
-4702 4701 0
-4702 -4700 0
c Var 'variant_fields_00001_00005_00008' order represents '3' with '4703'
-4701 4703 0
c Var 'variant_fields_00001_00005_00008' direct represents '3' with '4704'
4701 -4703 4704 0
-4704 4703 0
-4704 -4701 0
c Var 'variant_fields_00001_00005_00008' order represents '4' with '4705'
-4703 4705 0
c Var 'variant_fields_00001_00005_00008' direct represents '4' with '4706'
4703 -4705 4706 0
-4706 4705 0
-4706 -4703 0
c Var 'variant_fields_00001_00005_00008' order represents '5' with '4707'
-4705 4707 0
c Var 'variant_fields_00001_00005_00008' direct represents '5' with '4708'
4705 -4707 4708 0
-4708 4707 0
-4708 -4705 0
c Var 'variant_fields_00001_00005_00008' order represents '6' with '4709'
-4707 4709 0
c Var 'variant_fields_00001_00005_00008' direct represents '6' with '4710'
4707 -4709 4710 0
-4710 4709 0
-4710 -4707 0
c Var 'variant_fields_00001_00005_00008' order represents '7' with '4711'
-4709 4711 0
c Var 'variant_fields_00001_00005_00008' direct represents '7' with '4712'
4709 -4711 4712 0
-4712 4711 0
-4712 -4709 0
c Var 'variant_fields_00001_00005_00008' order represents '8' with '4713'
-4711 4713 0
c Var 'variant_fields_00001_00005_00008' direct represents '8' with '4714'
4711 -4713 4714 0
-4714 4713 0
-4714 -4711 0
c Var 'variant_fields_00001_00005_00008' direct represents '9' with '-4713'
4700 4702 4704 4706 4708 4710 4712 4714 -4713 0
c Encoding variable: variant_fields_00001_00005_00009 with domain: int(2) (representing constraint )
c Var 'variant_fields_00001_00005_00009' direct represents '2' with '4715'
4715 0
c Encoding variable: variant_fields_00001_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00001' order represents '1' with '4716'
c Var 'variant_fields_00001_00006_00001' direct represents '1' with '4716'
c Var 'variant_fields_00001_00006_00001' order represents '2' with '4717'
-4716 4717 0
c Var 'variant_fields_00001_00006_00001' direct represents '2' with '4718'
4716 -4717 4718 0
-4718 4717 0
-4718 -4716 0
c Var 'variant_fields_00001_00006_00001' order represents '3' with '4719'
-4717 4719 0
c Var 'variant_fields_00001_00006_00001' direct represents '3' with '4720'
4717 -4719 4720 0
-4720 4719 0
-4720 -4717 0
c Var 'variant_fields_00001_00006_00001' order represents '4' with '4721'
-4719 4721 0
c Var 'variant_fields_00001_00006_00001' direct represents '4' with '4722'
4719 -4721 4722 0
-4722 4721 0
-4722 -4719 0
c Var 'variant_fields_00001_00006_00001' order represents '5' with '4723'
-4721 4723 0
c Var 'variant_fields_00001_00006_00001' direct represents '5' with '4724'
4721 -4723 4724 0
-4724 4723 0
-4724 -4721 0
c Var 'variant_fields_00001_00006_00001' order represents '6' with '4725'
-4723 4725 0
c Var 'variant_fields_00001_00006_00001' direct represents '6' with '4726'
4723 -4725 4726 0
-4726 4725 0
-4726 -4723 0
c Var 'variant_fields_00001_00006_00001' order represents '7' with '4727'
-4725 4727 0
c Var 'variant_fields_00001_00006_00001' direct represents '7' with '4728'
4725 -4727 4728 0
-4728 4727 0
-4728 -4725 0
c Var 'variant_fields_00001_00006_00001' order represents '8' with '4729'
-4727 4729 0
c Var 'variant_fields_00001_00006_00001' direct represents '8' with '4730'
4727 -4729 4730 0
-4730 4729 0
-4730 -4727 0
c Var 'variant_fields_00001_00006_00001' direct represents '9' with '-4729'
4716 4718 4720 4722 4724 4726 4728 4730 -4729 0
c Encoding variable: variant_fields_00001_00006_00002 with domain: int(8) (representing constraint )
c Var 'variant_fields_00001_00006_00002' direct represents '8' with '4731'
4731 0
c Encoding variable: variant_fields_00001_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00003' order represents '1' with '4732'
c Var 'variant_fields_00001_00006_00003' direct represents '1' with '4732'
c Var 'variant_fields_00001_00006_00003' order represents '2' with '4733'
-4732 4733 0
c Var 'variant_fields_00001_00006_00003' direct represents '2' with '4734'
4732 -4733 4734 0
-4734 4733 0
-4734 -4732 0
c Var 'variant_fields_00001_00006_00003' order represents '3' with '4735'
-4733 4735 0
c Var 'variant_fields_00001_00006_00003' direct represents '3' with '4736'
4733 -4735 4736 0
-4736 4735 0
-4736 -4733 0
c Var 'variant_fields_00001_00006_00003' order represents '4' with '4737'
-4735 4737 0
c Var 'variant_fields_00001_00006_00003' direct represents '4' with '4738'
4735 -4737 4738 0
-4738 4737 0
-4738 -4735 0
c Var 'variant_fields_00001_00006_00003' order represents '5' with '4739'
-4737 4739 0
c Var 'variant_fields_00001_00006_00003' direct represents '5' with '4740'
4737 -4739 4740 0
-4740 4739 0
-4740 -4737 0
c Var 'variant_fields_00001_00006_00003' order represents '6' with '4741'
-4739 4741 0
c Var 'variant_fields_00001_00006_00003' direct represents '6' with '4742'
4739 -4741 4742 0
-4742 4741 0
-4742 -4739 0
c Var 'variant_fields_00001_00006_00003' order represents '7' with '4743'
-4741 4743 0
c Var 'variant_fields_00001_00006_00003' direct represents '7' with '4744'
4741 -4743 4744 0
-4744 4743 0
-4744 -4741 0
c Var 'variant_fields_00001_00006_00003' order represents '8' with '4745'
-4743 4745 0
c Var 'variant_fields_00001_00006_00003' direct represents '8' with '4746'
4743 -4745 4746 0
-4746 4745 0
-4746 -4743 0
c Var 'variant_fields_00001_00006_00003' direct represents '9' with '-4745'
4732 4734 4736 4738 4740 4742 4744 4746 -4745 0
c Encoding variable: variant_fields_00001_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00004' order represents '1' with '4747'
c Var 'variant_fields_00001_00006_00004' direct represents '1' with '4747'
c Var 'variant_fields_00001_00006_00004' order represents '2' with '4748'
-4747 4748 0
c Var 'variant_fields_00001_00006_00004' direct represents '2' with '4749'
4747 -4748 4749 0
-4749 4748 0
-4749 -4747 0
c Var 'variant_fields_00001_00006_00004' order represents '3' with '4750'
-4748 4750 0
c Var 'variant_fields_00001_00006_00004' direct represents '3' with '4751'
4748 -4750 4751 0
-4751 4750 0
-4751 -4748 0
c Var 'variant_fields_00001_00006_00004' order represents '4' with '4752'
-4750 4752 0
c Var 'variant_fields_00001_00006_00004' direct represents '4' with '4753'
4750 -4752 4753 0
-4753 4752 0
-4753 -4750 0
c Var 'variant_fields_00001_00006_00004' order represents '5' with '4754'
-4752 4754 0
c Var 'variant_fields_00001_00006_00004' direct represents '5' with '4755'
4752 -4754 4755 0
-4755 4754 0
-4755 -4752 0
c Var 'variant_fields_00001_00006_00004' order represents '6' with '4756'
-4754 4756 0
c Var 'variant_fields_00001_00006_00004' direct represents '6' with '4757'
4754 -4756 4757 0
-4757 4756 0
-4757 -4754 0
c Var 'variant_fields_00001_00006_00004' order represents '7' with '4758'
-4756 4758 0
c Var 'variant_fields_00001_00006_00004' direct represents '7' with '4759'
4756 -4758 4759 0
-4759 4758 0
-4759 -4756 0
c Var 'variant_fields_00001_00006_00004' order represents '8' with '4760'
-4758 4760 0
c Var 'variant_fields_00001_00006_00004' direct represents '8' with '4761'
4758 -4760 4761 0
-4761 4760 0
-4761 -4758 0
c Var 'variant_fields_00001_00006_00004' direct represents '9' with '-4760'
4747 4749 4751 4753 4755 4757 4759 4761 -4760 0
c Encoding variable: variant_fields_00001_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00005' order represents '1' with '4762'
c Var 'variant_fields_00001_00006_00005' direct represents '1' with '4762'
c Var 'variant_fields_00001_00006_00005' order represents '2' with '4763'
-4762 4763 0
c Var 'variant_fields_00001_00006_00005' direct represents '2' with '4764'
4762 -4763 4764 0
-4764 4763 0
-4764 -4762 0
c Var 'variant_fields_00001_00006_00005' order represents '3' with '4765'
-4763 4765 0
c Var 'variant_fields_00001_00006_00005' direct represents '3' with '4766'
4763 -4765 4766 0
-4766 4765 0
-4766 -4763 0
c Var 'variant_fields_00001_00006_00005' order represents '4' with '4767'
-4765 4767 0
c Var 'variant_fields_00001_00006_00005' direct represents '4' with '4768'
4765 -4767 4768 0
-4768 4767 0
-4768 -4765 0
c Var 'variant_fields_00001_00006_00005' order represents '5' with '4769'
-4767 4769 0
c Var 'variant_fields_00001_00006_00005' direct represents '5' with '4770'
4767 -4769 4770 0
-4770 4769 0
-4770 -4767 0
c Var 'variant_fields_00001_00006_00005' order represents '6' with '4771'
-4769 4771 0
c Var 'variant_fields_00001_00006_00005' direct represents '6' with '4772'
4769 -4771 4772 0
-4772 4771 0
-4772 -4769 0
c Var 'variant_fields_00001_00006_00005' order represents '7' with '4773'
-4771 4773 0
c Var 'variant_fields_00001_00006_00005' direct represents '7' with '4774'
4771 -4773 4774 0
-4774 4773 0
-4774 -4771 0
c Var 'variant_fields_00001_00006_00005' order represents '8' with '4775'
-4773 4775 0
c Var 'variant_fields_00001_00006_00005' direct represents '8' with '4776'
4773 -4775 4776 0
-4776 4775 0
-4776 -4773 0
c Var 'variant_fields_00001_00006_00005' direct represents '9' with '-4775'
4762 4764 4766 4768 4770 4772 4774 4776 -4775 0
c Encoding variable: variant_fields_00001_00006_00006 with domain: int(7) (representing constraint )
c Var 'variant_fields_00001_00006_00006' direct represents '7' with '4777'
4777 0
c Encoding variable: variant_fields_00001_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00007' order represents '1' with '4778'
c Var 'variant_fields_00001_00006_00007' direct represents '1' with '4778'
c Var 'variant_fields_00001_00006_00007' order represents '2' with '4779'
-4778 4779 0
c Var 'variant_fields_00001_00006_00007' direct represents '2' with '4780'
4778 -4779 4780 0
-4780 4779 0
-4780 -4778 0
c Var 'variant_fields_00001_00006_00007' order represents '3' with '4781'
-4779 4781 0
c Var 'variant_fields_00001_00006_00007' direct represents '3' with '4782'
4779 -4781 4782 0
-4782 4781 0
-4782 -4779 0
c Var 'variant_fields_00001_00006_00007' order represents '4' with '4783'
-4781 4783 0
c Var 'variant_fields_00001_00006_00007' direct represents '4' with '4784'
4781 -4783 4784 0
-4784 4783 0
-4784 -4781 0
c Var 'variant_fields_00001_00006_00007' order represents '5' with '4785'
-4783 4785 0
c Var 'variant_fields_00001_00006_00007' direct represents '5' with '4786'
4783 -4785 4786 0
-4786 4785 0
-4786 -4783 0
c Var 'variant_fields_00001_00006_00007' order represents '6' with '4787'
-4785 4787 0
c Var 'variant_fields_00001_00006_00007' direct represents '6' with '4788'
4785 -4787 4788 0
-4788 4787 0
-4788 -4785 0
c Var 'variant_fields_00001_00006_00007' order represents '7' with '4789'
-4787 4789 0
c Var 'variant_fields_00001_00006_00007' direct represents '7' with '4790'
4787 -4789 4790 0
-4790 4789 0
-4790 -4787 0
c Var 'variant_fields_00001_00006_00007' order represents '8' with '4791'
-4789 4791 0
c Var 'variant_fields_00001_00006_00007' direct represents '8' with '4792'
4789 -4791 4792 0
-4792 4791 0
-4792 -4789 0
c Var 'variant_fields_00001_00006_00007' direct represents '9' with '-4791'
4778 4780 4782 4784 4786 4788 4790 4792 -4791 0
c Encoding variable: variant_fields_00001_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00008' order represents '1' with '4793'
c Var 'variant_fields_00001_00006_00008' direct represents '1' with '4793'
c Var 'variant_fields_00001_00006_00008' order represents '2' with '4794'
-4793 4794 0
c Var 'variant_fields_00001_00006_00008' direct represents '2' with '4795'
4793 -4794 4795 0
-4795 4794 0
-4795 -4793 0
c Var 'variant_fields_00001_00006_00008' order represents '3' with '4796'
-4794 4796 0
c Var 'variant_fields_00001_00006_00008' direct represents '3' with '4797'
4794 -4796 4797 0
-4797 4796 0
-4797 -4794 0
c Var 'variant_fields_00001_00006_00008' order represents '4' with '4798'
-4796 4798 0
c Var 'variant_fields_00001_00006_00008' direct represents '4' with '4799'
4796 -4798 4799 0
-4799 4798 0
-4799 -4796 0
c Var 'variant_fields_00001_00006_00008' order represents '5' with '4800'
-4798 4800 0
c Var 'variant_fields_00001_00006_00008' direct represents '5' with '4801'
4798 -4800 4801 0
-4801 4800 0
-4801 -4798 0
c Var 'variant_fields_00001_00006_00008' order represents '6' with '4802'
-4800 4802 0
c Var 'variant_fields_00001_00006_00008' direct represents '6' with '4803'
4800 -4802 4803 0
-4803 4802 0
-4803 -4800 0
c Var 'variant_fields_00001_00006_00008' order represents '7' with '4804'
-4802 4804 0
c Var 'variant_fields_00001_00006_00008' direct represents '7' with '4805'
4802 -4804 4805 0
-4805 4804 0
-4805 -4802 0
c Var 'variant_fields_00001_00006_00008' order represents '8' with '4806'
-4804 4806 0
c Var 'variant_fields_00001_00006_00008' direct represents '8' with '4807'
4804 -4806 4807 0
-4807 4806 0
-4807 -4804 0
c Var 'variant_fields_00001_00006_00008' direct represents '9' with '-4806'
4793 4795 4797 4799 4801 4803 4805 4807 -4806 0
c Encoding variable: variant_fields_00001_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00009' order represents '1' with '4808'
c Var 'variant_fields_00001_00006_00009' direct represents '1' with '4808'
c Var 'variant_fields_00001_00006_00009' order represents '2' with '4809'
-4808 4809 0
c Var 'variant_fields_00001_00006_00009' direct represents '2' with '4810'
4808 -4809 4810 0
-4810 4809 0
-4810 -4808 0
c Var 'variant_fields_00001_00006_00009' order represents '3' with '4811'
-4809 4811 0
c Var 'variant_fields_00001_00006_00009' direct represents '3' with '4812'
4809 -4811 4812 0
-4812 4811 0
-4812 -4809 0
c Var 'variant_fields_00001_00006_00009' order represents '4' with '4813'
-4811 4813 0
c Var 'variant_fields_00001_00006_00009' direct represents '4' with '4814'
4811 -4813 4814 0
-4814 4813 0
-4814 -4811 0
c Var 'variant_fields_00001_00006_00009' order represents '5' with '4815'
-4813 4815 0
c Var 'variant_fields_00001_00006_00009' direct represents '5' with '4816'
4813 -4815 4816 0
-4816 4815 0
-4816 -4813 0
c Var 'variant_fields_00001_00006_00009' order represents '6' with '4817'
-4815 4817 0
c Var 'variant_fields_00001_00006_00009' direct represents '6' with '4818'
4815 -4817 4818 0
-4818 4817 0
-4818 -4815 0
c Var 'variant_fields_00001_00006_00009' order represents '7' with '4819'
-4817 4819 0
c Var 'variant_fields_00001_00006_00009' direct represents '7' with '4820'
4817 -4819 4820 0
-4820 4819 0
-4820 -4817 0
c Var 'variant_fields_00001_00006_00009' order represents '8' with '4821'
-4819 4821 0
c Var 'variant_fields_00001_00006_00009' direct represents '8' with '4822'
4819 -4821 4822 0
-4822 4821 0
-4822 -4819 0
c Var 'variant_fields_00001_00006_00009' direct represents '9' with '-4821'
4808 4810 4812 4814 4816 4818 4820 4822 -4821 0
c Encoding variable: variant_fields_00001_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00001' order represents '1' with '4823'
c Var 'variant_fields_00001_00007_00001' direct represents '1' with '4823'
c Var 'variant_fields_00001_00007_00001' order represents '2' with '4824'
-4823 4824 0
c Var 'variant_fields_00001_00007_00001' direct represents '2' with '4825'
4823 -4824 4825 0
-4825 4824 0
-4825 -4823 0
c Var 'variant_fields_00001_00007_00001' order represents '3' with '4826'
-4824 4826 0
c Var 'variant_fields_00001_00007_00001' direct represents '3' with '4827'
4824 -4826 4827 0
-4827 4826 0
-4827 -4824 0
c Var 'variant_fields_00001_00007_00001' order represents '4' with '4828'
-4826 4828 0
c Var 'variant_fields_00001_00007_00001' direct represents '4' with '4829'
4826 -4828 4829 0
-4829 4828 0
-4829 -4826 0
c Var 'variant_fields_00001_00007_00001' order represents '5' with '4830'
-4828 4830 0
c Var 'variant_fields_00001_00007_00001' direct represents '5' with '4831'
4828 -4830 4831 0
-4831 4830 0
-4831 -4828 0
c Var 'variant_fields_00001_00007_00001' order represents '6' with '4832'
-4830 4832 0
c Var 'variant_fields_00001_00007_00001' direct represents '6' with '4833'
4830 -4832 4833 0
-4833 4832 0
-4833 -4830 0
c Var 'variant_fields_00001_00007_00001' order represents '7' with '4834'
-4832 4834 0
c Var 'variant_fields_00001_00007_00001' direct represents '7' with '4835'
4832 -4834 4835 0
-4835 4834 0
-4835 -4832 0
c Var 'variant_fields_00001_00007_00001' order represents '8' with '4836'
-4834 4836 0
c Var 'variant_fields_00001_00007_00001' direct represents '8' with '4837'
4834 -4836 4837 0
-4837 4836 0
-4837 -4834 0
c Var 'variant_fields_00001_00007_00001' direct represents '9' with '-4836'
4823 4825 4827 4829 4831 4833 4835 4837 -4836 0
c Encoding variable: variant_fields_00001_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00002' order represents '1' with '4838'
c Var 'variant_fields_00001_00007_00002' direct represents '1' with '4838'
c Var 'variant_fields_00001_00007_00002' order represents '2' with '4839'
-4838 4839 0
c Var 'variant_fields_00001_00007_00002' direct represents '2' with '4840'
4838 -4839 4840 0
-4840 4839 0
-4840 -4838 0
c Var 'variant_fields_00001_00007_00002' order represents '3' with '4841'
-4839 4841 0
c Var 'variant_fields_00001_00007_00002' direct represents '3' with '4842'
4839 -4841 4842 0
-4842 4841 0
-4842 -4839 0
c Var 'variant_fields_00001_00007_00002' order represents '4' with '4843'
-4841 4843 0
c Var 'variant_fields_00001_00007_00002' direct represents '4' with '4844'
4841 -4843 4844 0
-4844 4843 0
-4844 -4841 0
c Var 'variant_fields_00001_00007_00002' order represents '5' with '4845'
-4843 4845 0
c Var 'variant_fields_00001_00007_00002' direct represents '5' with '4846'
4843 -4845 4846 0
-4846 4845 0
-4846 -4843 0
c Var 'variant_fields_00001_00007_00002' order represents '6' with '4847'
-4845 4847 0
c Var 'variant_fields_00001_00007_00002' direct represents '6' with '4848'
4845 -4847 4848 0
-4848 4847 0
-4848 -4845 0
c Var 'variant_fields_00001_00007_00002' order represents '7' with '4849'
-4847 4849 0
c Var 'variant_fields_00001_00007_00002' direct represents '7' with '4850'
4847 -4849 4850 0
-4850 4849 0
-4850 -4847 0
c Var 'variant_fields_00001_00007_00002' order represents '8' with '4851'
-4849 4851 0
c Var 'variant_fields_00001_00007_00002' direct represents '8' with '4852'
4849 -4851 4852 0
-4852 4851 0
-4852 -4849 0
c Var 'variant_fields_00001_00007_00002' direct represents '9' with '-4851'
4838 4840 4842 4844 4846 4848 4850 4852 -4851 0
c Encoding variable: variant_fields_00001_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00003' order represents '1' with '4853'
c Var 'variant_fields_00001_00007_00003' direct represents '1' with '4853'
c Var 'variant_fields_00001_00007_00003' order represents '2' with '4854'
-4853 4854 0
c Var 'variant_fields_00001_00007_00003' direct represents '2' with '4855'
4853 -4854 4855 0
-4855 4854 0
-4855 -4853 0
c Var 'variant_fields_00001_00007_00003' order represents '3' with '4856'
-4854 4856 0
c Var 'variant_fields_00001_00007_00003' direct represents '3' with '4857'
4854 -4856 4857 0
-4857 4856 0
-4857 -4854 0
c Var 'variant_fields_00001_00007_00003' order represents '4' with '4858'
-4856 4858 0
c Var 'variant_fields_00001_00007_00003' direct represents '4' with '4859'
4856 -4858 4859 0
-4859 4858 0
-4859 -4856 0
c Var 'variant_fields_00001_00007_00003' order represents '5' with '4860'
-4858 4860 0
c Var 'variant_fields_00001_00007_00003' direct represents '5' with '4861'
4858 -4860 4861 0
-4861 4860 0
-4861 -4858 0
c Var 'variant_fields_00001_00007_00003' order represents '6' with '4862'
-4860 4862 0
c Var 'variant_fields_00001_00007_00003' direct represents '6' with '4863'
4860 -4862 4863 0
-4863 4862 0
-4863 -4860 0
c Var 'variant_fields_00001_00007_00003' order represents '7' with '4864'
-4862 4864 0
c Var 'variant_fields_00001_00007_00003' direct represents '7' with '4865'
4862 -4864 4865 0
-4865 4864 0
-4865 -4862 0
c Var 'variant_fields_00001_00007_00003' order represents '8' with '4866'
-4864 4866 0
c Var 'variant_fields_00001_00007_00003' direct represents '8' with '4867'
4864 -4866 4867 0
-4867 4866 0
-4867 -4864 0
c Var 'variant_fields_00001_00007_00003' direct represents '9' with '-4866'
4853 4855 4857 4859 4861 4863 4865 4867 -4866 0
c Encoding variable: variant_fields_00001_00007_00004 with domain: int(3) (representing constraint )
c Var 'variant_fields_00001_00007_00004' direct represents '3' with '4868'
4868 0
c Encoding variable: variant_fields_00001_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00005' order represents '1' with '4869'
c Var 'variant_fields_00001_00007_00005' direct represents '1' with '4869'
c Var 'variant_fields_00001_00007_00005' order represents '2' with '4870'
-4869 4870 0
c Var 'variant_fields_00001_00007_00005' direct represents '2' with '4871'
4869 -4870 4871 0
-4871 4870 0
-4871 -4869 0
c Var 'variant_fields_00001_00007_00005' order represents '3' with '4872'
-4870 4872 0
c Var 'variant_fields_00001_00007_00005' direct represents '3' with '4873'
4870 -4872 4873 0
-4873 4872 0
-4873 -4870 0
c Var 'variant_fields_00001_00007_00005' order represents '4' with '4874'
-4872 4874 0
c Var 'variant_fields_00001_00007_00005' direct represents '4' with '4875'
4872 -4874 4875 0
-4875 4874 0
-4875 -4872 0
c Var 'variant_fields_00001_00007_00005' order represents '5' with '4876'
-4874 4876 0
c Var 'variant_fields_00001_00007_00005' direct represents '5' with '4877'
4874 -4876 4877 0
-4877 4876 0
-4877 -4874 0
c Var 'variant_fields_00001_00007_00005' order represents '6' with '4878'
-4876 4878 0
c Var 'variant_fields_00001_00007_00005' direct represents '6' with '4879'
4876 -4878 4879 0
-4879 4878 0
-4879 -4876 0
c Var 'variant_fields_00001_00007_00005' order represents '7' with '4880'
-4878 4880 0
c Var 'variant_fields_00001_00007_00005' direct represents '7' with '4881'
4878 -4880 4881 0
-4881 4880 0
-4881 -4878 0
c Var 'variant_fields_00001_00007_00005' order represents '8' with '4882'
-4880 4882 0
c Var 'variant_fields_00001_00007_00005' direct represents '8' with '4883'
4880 -4882 4883 0
-4883 4882 0
-4883 -4880 0
c Var 'variant_fields_00001_00007_00005' direct represents '9' with '-4882'
4869 4871 4873 4875 4877 4879 4881 4883 -4882 0
c Encoding variable: variant_fields_00001_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00006' order represents '1' with '4884'
c Var 'variant_fields_00001_00007_00006' direct represents '1' with '4884'
c Var 'variant_fields_00001_00007_00006' order represents '2' with '4885'
-4884 4885 0
c Var 'variant_fields_00001_00007_00006' direct represents '2' with '4886'
4884 -4885 4886 0
-4886 4885 0
-4886 -4884 0
c Var 'variant_fields_00001_00007_00006' order represents '3' with '4887'
-4885 4887 0
c Var 'variant_fields_00001_00007_00006' direct represents '3' with '4888'
4885 -4887 4888 0
-4888 4887 0
-4888 -4885 0
c Var 'variant_fields_00001_00007_00006' order represents '4' with '4889'
-4887 4889 0
c Var 'variant_fields_00001_00007_00006' direct represents '4' with '4890'
4887 -4889 4890 0
-4890 4889 0
-4890 -4887 0
c Var 'variant_fields_00001_00007_00006' order represents '5' with '4891'
-4889 4891 0
c Var 'variant_fields_00001_00007_00006' direct represents '5' with '4892'
4889 -4891 4892 0
-4892 4891 0
-4892 -4889 0
c Var 'variant_fields_00001_00007_00006' order represents '6' with '4893'
-4891 4893 0
c Var 'variant_fields_00001_00007_00006' direct represents '6' with '4894'
4891 -4893 4894 0
-4894 4893 0
-4894 -4891 0
c Var 'variant_fields_00001_00007_00006' order represents '7' with '4895'
-4893 4895 0
c Var 'variant_fields_00001_00007_00006' direct represents '7' with '4896'
4893 -4895 4896 0
-4896 4895 0
-4896 -4893 0
c Var 'variant_fields_00001_00007_00006' order represents '8' with '4897'
-4895 4897 0
c Var 'variant_fields_00001_00007_00006' direct represents '8' with '4898'
4895 -4897 4898 0
-4898 4897 0
-4898 -4895 0
c Var 'variant_fields_00001_00007_00006' direct represents '9' with '-4897'
4884 4886 4888 4890 4892 4894 4896 4898 -4897 0
c Encoding variable: variant_fields_00001_00007_00007 with domain: int(6) (representing constraint )
c Var 'variant_fields_00001_00007_00007' direct represents '6' with '4899'
4899 0
c Encoding variable: variant_fields_00001_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00008' order represents '1' with '4900'
c Var 'variant_fields_00001_00007_00008' direct represents '1' with '4900'
c Var 'variant_fields_00001_00007_00008' order represents '2' with '4901'
-4900 4901 0
c Var 'variant_fields_00001_00007_00008' direct represents '2' with '4902'
4900 -4901 4902 0
-4902 4901 0
-4902 -4900 0
c Var 'variant_fields_00001_00007_00008' order represents '3' with '4903'
-4901 4903 0
c Var 'variant_fields_00001_00007_00008' direct represents '3' with '4904'
4901 -4903 4904 0
-4904 4903 0
-4904 -4901 0
c Var 'variant_fields_00001_00007_00008' order represents '4' with '4905'
-4903 4905 0
c Var 'variant_fields_00001_00007_00008' direct represents '4' with '4906'
4903 -4905 4906 0
-4906 4905 0
-4906 -4903 0
c Var 'variant_fields_00001_00007_00008' order represents '5' with '4907'
-4905 4907 0
c Var 'variant_fields_00001_00007_00008' direct represents '5' with '4908'
4905 -4907 4908 0
-4908 4907 0
-4908 -4905 0
c Var 'variant_fields_00001_00007_00008' order represents '6' with '4909'
-4907 4909 0
c Var 'variant_fields_00001_00007_00008' direct represents '6' with '4910'
4907 -4909 4910 0
-4910 4909 0
-4910 -4907 0
c Var 'variant_fields_00001_00007_00008' order represents '7' with '4911'
-4909 4911 0
c Var 'variant_fields_00001_00007_00008' direct represents '7' with '4912'
4909 -4911 4912 0
-4912 4911 0
-4912 -4909 0
c Var 'variant_fields_00001_00007_00008' order represents '8' with '4913'
-4911 4913 0
c Var 'variant_fields_00001_00007_00008' direct represents '8' with '4914'
4911 -4913 4914 0
-4914 4913 0
-4914 -4911 0
c Var 'variant_fields_00001_00007_00008' direct represents '9' with '-4913'
4900 4902 4904 4906 4908 4910 4912 4914 -4913 0
c Encoding variable: variant_fields_00001_00007_00009 with domain: int(7) (representing constraint )
c Var 'variant_fields_00001_00007_00009' direct represents '7' with '4915'
4915 0
c Encoding variable: variant_fields_00001_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00001' order represents '1' with '4916'
c Var 'variant_fields_00001_00008_00001' direct represents '1' with '4916'
c Var 'variant_fields_00001_00008_00001' order represents '2' with '4917'
-4916 4917 0
c Var 'variant_fields_00001_00008_00001' direct represents '2' with '4918'
4916 -4917 4918 0
-4918 4917 0
-4918 -4916 0
c Var 'variant_fields_00001_00008_00001' order represents '3' with '4919'
-4917 4919 0
c Var 'variant_fields_00001_00008_00001' direct represents '3' with '4920'
4917 -4919 4920 0
-4920 4919 0
-4920 -4917 0
c Var 'variant_fields_00001_00008_00001' order represents '4' with '4921'
-4919 4921 0
c Var 'variant_fields_00001_00008_00001' direct represents '4' with '4922'
4919 -4921 4922 0
-4922 4921 0
-4922 -4919 0
c Var 'variant_fields_00001_00008_00001' order represents '5' with '4923'
-4921 4923 0
c Var 'variant_fields_00001_00008_00001' direct represents '5' with '4924'
4921 -4923 4924 0
-4924 4923 0
-4924 -4921 0
c Var 'variant_fields_00001_00008_00001' order represents '6' with '4925'
-4923 4925 0
c Var 'variant_fields_00001_00008_00001' direct represents '6' with '4926'
4923 -4925 4926 0
-4926 4925 0
-4926 -4923 0
c Var 'variant_fields_00001_00008_00001' order represents '7' with '4927'
-4925 4927 0
c Var 'variant_fields_00001_00008_00001' direct represents '7' with '4928'
4925 -4927 4928 0
-4928 4927 0
-4928 -4925 0
c Var 'variant_fields_00001_00008_00001' order represents '8' with '4929'
-4927 4929 0
c Var 'variant_fields_00001_00008_00001' direct represents '8' with '4930'
4927 -4929 4930 0
-4930 4929 0
-4930 -4927 0
c Var 'variant_fields_00001_00008_00001' direct represents '9' with '-4929'
4916 4918 4920 4922 4924 4926 4928 4930 -4929 0
c Encoding variable: variant_fields_00001_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00002' order represents '1' with '4931'
c Var 'variant_fields_00001_00008_00002' direct represents '1' with '4931'
c Var 'variant_fields_00001_00008_00002' order represents '2' with '4932'
-4931 4932 0
c Var 'variant_fields_00001_00008_00002' direct represents '2' with '4933'
4931 -4932 4933 0
-4933 4932 0
-4933 -4931 0
c Var 'variant_fields_00001_00008_00002' order represents '3' with '4934'
-4932 4934 0
c Var 'variant_fields_00001_00008_00002' direct represents '3' with '4935'
4932 -4934 4935 0
-4935 4934 0
-4935 -4932 0
c Var 'variant_fields_00001_00008_00002' order represents '4' with '4936'
-4934 4936 0
c Var 'variant_fields_00001_00008_00002' direct represents '4' with '4937'
4934 -4936 4937 0
-4937 4936 0
-4937 -4934 0
c Var 'variant_fields_00001_00008_00002' order represents '5' with '4938'
-4936 4938 0
c Var 'variant_fields_00001_00008_00002' direct represents '5' with '4939'
4936 -4938 4939 0
-4939 4938 0
-4939 -4936 0
c Var 'variant_fields_00001_00008_00002' order represents '6' with '4940'
-4938 4940 0
c Var 'variant_fields_00001_00008_00002' direct represents '6' with '4941'
4938 -4940 4941 0
-4941 4940 0
-4941 -4938 0
c Var 'variant_fields_00001_00008_00002' order represents '7' with '4942'
-4940 4942 0
c Var 'variant_fields_00001_00008_00002' direct represents '7' with '4943'
4940 -4942 4943 0
-4943 4942 0
-4943 -4940 0
c Var 'variant_fields_00001_00008_00002' order represents '8' with '4944'
-4942 4944 0
c Var 'variant_fields_00001_00008_00002' direct represents '8' with '4945'
4942 -4944 4945 0
-4945 4944 0
-4945 -4942 0
c Var 'variant_fields_00001_00008_00002' direct represents '9' with '-4944'
4931 4933 4935 4937 4939 4941 4943 4945 -4944 0
c Encoding variable: variant_fields_00001_00008_00003 with domain: int(8) (representing constraint )
c Var 'variant_fields_00001_00008_00003' direct represents '8' with '4946'
4946 0
c Encoding variable: variant_fields_00001_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00004' order represents '1' with '4947'
c Var 'variant_fields_00001_00008_00004' direct represents '1' with '4947'
c Var 'variant_fields_00001_00008_00004' order represents '2' with '4948'
-4947 4948 0
c Var 'variant_fields_00001_00008_00004' direct represents '2' with '4949'
4947 -4948 4949 0
-4949 4948 0
-4949 -4947 0
c Var 'variant_fields_00001_00008_00004' order represents '3' with '4950'
-4948 4950 0
c Var 'variant_fields_00001_00008_00004' direct represents '3' with '4951'
4948 -4950 4951 0
-4951 4950 0
-4951 -4948 0
c Var 'variant_fields_00001_00008_00004' order represents '4' with '4952'
-4950 4952 0
c Var 'variant_fields_00001_00008_00004' direct represents '4' with '4953'
4950 -4952 4953 0
-4953 4952 0
-4953 -4950 0
c Var 'variant_fields_00001_00008_00004' order represents '5' with '4954'
-4952 4954 0
c Var 'variant_fields_00001_00008_00004' direct represents '5' with '4955'
4952 -4954 4955 0
-4955 4954 0
-4955 -4952 0
c Var 'variant_fields_00001_00008_00004' order represents '6' with '4956'
-4954 4956 0
c Var 'variant_fields_00001_00008_00004' direct represents '6' with '4957'
4954 -4956 4957 0
-4957 4956 0
-4957 -4954 0
c Var 'variant_fields_00001_00008_00004' order represents '7' with '4958'
-4956 4958 0
c Var 'variant_fields_00001_00008_00004' direct represents '7' with '4959'
4956 -4958 4959 0
-4959 4958 0
-4959 -4956 0
c Var 'variant_fields_00001_00008_00004' order represents '8' with '4960'
-4958 4960 0
c Var 'variant_fields_00001_00008_00004' direct represents '8' with '4961'
4958 -4960 4961 0
-4961 4960 0
-4961 -4958 0
c Var 'variant_fields_00001_00008_00004' direct represents '9' with '-4960'
4947 4949 4951 4953 4955 4957 4959 4961 -4960 0
c Encoding variable: variant_fields_00001_00008_00005 with domain: int(7) (representing constraint )
c Var 'variant_fields_00001_00008_00005' direct represents '7' with '4962'
4962 0
c Encoding variable: variant_fields_00001_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00006' order represents '1' with '4963'
c Var 'variant_fields_00001_00008_00006' direct represents '1' with '4963'
c Var 'variant_fields_00001_00008_00006' order represents '2' with '4964'
-4963 4964 0
c Var 'variant_fields_00001_00008_00006' direct represents '2' with '4965'
4963 -4964 4965 0
-4965 4964 0
-4965 -4963 0
c Var 'variant_fields_00001_00008_00006' order represents '3' with '4966'
-4964 4966 0
c Var 'variant_fields_00001_00008_00006' direct represents '3' with '4967'
4964 -4966 4967 0
-4967 4966 0
-4967 -4964 0
c Var 'variant_fields_00001_00008_00006' order represents '4' with '4968'
-4966 4968 0
c Var 'variant_fields_00001_00008_00006' direct represents '4' with '4969'
4966 -4968 4969 0
-4969 4968 0
-4969 -4966 0
c Var 'variant_fields_00001_00008_00006' order represents '5' with '4970'
-4968 4970 0
c Var 'variant_fields_00001_00008_00006' direct represents '5' with '4971'
4968 -4970 4971 0
-4971 4970 0
-4971 -4968 0
c Var 'variant_fields_00001_00008_00006' order represents '6' with '4972'
-4970 4972 0
c Var 'variant_fields_00001_00008_00006' direct represents '6' with '4973'
4970 -4972 4973 0
-4973 4972 0
-4973 -4970 0
c Var 'variant_fields_00001_00008_00006' order represents '7' with '4974'
-4972 4974 0
c Var 'variant_fields_00001_00008_00006' direct represents '7' with '4975'
4972 -4974 4975 0
-4975 4974 0
-4975 -4972 0
c Var 'variant_fields_00001_00008_00006' order represents '8' with '4976'
-4974 4976 0
c Var 'variant_fields_00001_00008_00006' direct represents '8' with '4977'
4974 -4976 4977 0
-4977 4976 0
-4977 -4974 0
c Var 'variant_fields_00001_00008_00006' direct represents '9' with '-4976'
4963 4965 4967 4969 4971 4973 4975 4977 -4976 0
c Encoding variable: variant_fields_00001_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00007' order represents '1' with '4978'
c Var 'variant_fields_00001_00008_00007' direct represents '1' with '4978'
c Var 'variant_fields_00001_00008_00007' order represents '2' with '4979'
-4978 4979 0
c Var 'variant_fields_00001_00008_00007' direct represents '2' with '4980'
4978 -4979 4980 0
-4980 4979 0
-4980 -4978 0
c Var 'variant_fields_00001_00008_00007' order represents '3' with '4981'
-4979 4981 0
c Var 'variant_fields_00001_00008_00007' direct represents '3' with '4982'
4979 -4981 4982 0
-4982 4981 0
-4982 -4979 0
c Var 'variant_fields_00001_00008_00007' order represents '4' with '4983'
-4981 4983 0
c Var 'variant_fields_00001_00008_00007' direct represents '4' with '4984'
4981 -4983 4984 0
-4984 4983 0
-4984 -4981 0
c Var 'variant_fields_00001_00008_00007' order represents '5' with '4985'
-4983 4985 0
c Var 'variant_fields_00001_00008_00007' direct represents '5' with '4986'
4983 -4985 4986 0
-4986 4985 0
-4986 -4983 0
c Var 'variant_fields_00001_00008_00007' order represents '6' with '4987'
-4985 4987 0
c Var 'variant_fields_00001_00008_00007' direct represents '6' with '4988'
4985 -4987 4988 0
-4988 4987 0
-4988 -4985 0
c Var 'variant_fields_00001_00008_00007' order represents '7' with '4989'
-4987 4989 0
c Var 'variant_fields_00001_00008_00007' direct represents '7' with '4990'
4987 -4989 4990 0
-4990 4989 0
-4990 -4987 0
c Var 'variant_fields_00001_00008_00007' order represents '8' with '4991'
-4989 4991 0
c Var 'variant_fields_00001_00008_00007' direct represents '8' with '4992'
4989 -4991 4992 0
-4992 4991 0
-4992 -4989 0
c Var 'variant_fields_00001_00008_00007' direct represents '9' with '-4991'
4978 4980 4982 4984 4986 4988 4990 4992 -4991 0
c Encoding variable: variant_fields_00001_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00008' order represents '1' with '4993'
c Var 'variant_fields_00001_00008_00008' direct represents '1' with '4993'
c Var 'variant_fields_00001_00008_00008' order represents '2' with '4994'
-4993 4994 0
c Var 'variant_fields_00001_00008_00008' direct represents '2' with '4995'
4993 -4994 4995 0
-4995 4994 0
-4995 -4993 0
c Var 'variant_fields_00001_00008_00008' order represents '3' with '4996'
-4994 4996 0
c Var 'variant_fields_00001_00008_00008' direct represents '3' with '4997'
4994 -4996 4997 0
-4997 4996 0
-4997 -4994 0
c Var 'variant_fields_00001_00008_00008' order represents '4' with '4998'
-4996 4998 0
c Var 'variant_fields_00001_00008_00008' direct represents '4' with '4999'
4996 -4998 4999 0
-4999 4998 0
-4999 -4996 0
c Var 'variant_fields_00001_00008_00008' order represents '5' with '5000'
-4998 5000 0
c Var 'variant_fields_00001_00008_00008' direct represents '5' with '5001'
4998 -5000 5001 0
-5001 5000 0
-5001 -4998 0
c Var 'variant_fields_00001_00008_00008' order represents '6' with '5002'
-5000 5002 0
c Var 'variant_fields_00001_00008_00008' direct represents '6' with '5003'
5000 -5002 5003 0
-5003 5002 0
-5003 -5000 0
c Var 'variant_fields_00001_00008_00008' order represents '7' with '5004'
-5002 5004 0
c Var 'variant_fields_00001_00008_00008' direct represents '7' with '5005'
5002 -5004 5005 0
-5005 5004 0
-5005 -5002 0
c Var 'variant_fields_00001_00008_00008' order represents '8' with '5006'
-5004 5006 0
c Var 'variant_fields_00001_00008_00008' direct represents '8' with '5007'
5004 -5006 5007 0
-5007 5006 0
-5007 -5004 0
c Var 'variant_fields_00001_00008_00008' direct represents '9' with '-5006'
4993 4995 4997 4999 5001 5003 5005 5007 -5006 0
c Encoding variable: variant_fields_00001_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00009' order represents '1' with '5008'
c Var 'variant_fields_00001_00008_00009' direct represents '1' with '5008'
c Var 'variant_fields_00001_00008_00009' order represents '2' with '5009'
-5008 5009 0
c Var 'variant_fields_00001_00008_00009' direct represents '2' with '5010'
5008 -5009 5010 0
-5010 5009 0
-5010 -5008 0
c Var 'variant_fields_00001_00008_00009' order represents '3' with '5011'
-5009 5011 0
c Var 'variant_fields_00001_00008_00009' direct represents '3' with '5012'
5009 -5011 5012 0
-5012 5011 0
-5012 -5009 0
c Var 'variant_fields_00001_00008_00009' order represents '4' with '5013'
-5011 5013 0
c Var 'variant_fields_00001_00008_00009' direct represents '4' with '5014'
5011 -5013 5014 0
-5014 5013 0
-5014 -5011 0
c Var 'variant_fields_00001_00008_00009' order represents '5' with '5015'
-5013 5015 0
c Var 'variant_fields_00001_00008_00009' direct represents '5' with '5016'
5013 -5015 5016 0
-5016 5015 0
-5016 -5013 0
c Var 'variant_fields_00001_00008_00009' order represents '6' with '5017'
-5015 5017 0
c Var 'variant_fields_00001_00008_00009' direct represents '6' with '5018'
5015 -5017 5018 0
-5018 5017 0
-5018 -5015 0
c Var 'variant_fields_00001_00008_00009' order represents '7' with '5019'
-5017 5019 0
c Var 'variant_fields_00001_00008_00009' direct represents '7' with '5020'
5017 -5019 5020 0
-5020 5019 0
-5020 -5017 0
c Var 'variant_fields_00001_00008_00009' order represents '8' with '5021'
-5019 5021 0
c Var 'variant_fields_00001_00008_00009' direct represents '8' with '5022'
5019 -5021 5022 0
-5022 5021 0
-5022 -5019 0
c Var 'variant_fields_00001_00008_00009' direct represents '9' with '-5021'
5008 5010 5012 5014 5016 5018 5020 5022 -5021 0
c Encoding variable: variant_fields_00001_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00001' order represents '1' with '5023'
c Var 'variant_fields_00001_00009_00001' direct represents '1' with '5023'
c Var 'variant_fields_00001_00009_00001' order represents '2' with '5024'
-5023 5024 0
c Var 'variant_fields_00001_00009_00001' direct represents '2' with '5025'
5023 -5024 5025 0
-5025 5024 0
-5025 -5023 0
c Var 'variant_fields_00001_00009_00001' order represents '3' with '5026'
-5024 5026 0
c Var 'variant_fields_00001_00009_00001' direct represents '3' with '5027'
5024 -5026 5027 0
-5027 5026 0
-5027 -5024 0
c Var 'variant_fields_00001_00009_00001' order represents '4' with '5028'
-5026 5028 0
c Var 'variant_fields_00001_00009_00001' direct represents '4' with '5029'
5026 -5028 5029 0
-5029 5028 0
-5029 -5026 0
c Var 'variant_fields_00001_00009_00001' order represents '5' with '5030'
-5028 5030 0
c Var 'variant_fields_00001_00009_00001' direct represents '5' with '5031'
5028 -5030 5031 0
-5031 5030 0
-5031 -5028 0
c Var 'variant_fields_00001_00009_00001' order represents '6' with '5032'
-5030 5032 0
c Var 'variant_fields_00001_00009_00001' direct represents '6' with '5033'
5030 -5032 5033 0
-5033 5032 0
-5033 -5030 0
c Var 'variant_fields_00001_00009_00001' order represents '7' with '5034'
-5032 5034 0
c Var 'variant_fields_00001_00009_00001' direct represents '7' with '5035'
5032 -5034 5035 0
-5035 5034 0
-5035 -5032 0
c Var 'variant_fields_00001_00009_00001' order represents '8' with '5036'
-5034 5036 0
c Var 'variant_fields_00001_00009_00001' direct represents '8' with '5037'
5034 -5036 5037 0
-5037 5036 0
-5037 -5034 0
c Var 'variant_fields_00001_00009_00001' direct represents '9' with '-5036'
5023 5025 5027 5029 5031 5033 5035 5037 -5036 0
c Encoding variable: variant_fields_00001_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00002' order represents '1' with '5038'
c Var 'variant_fields_00001_00009_00002' direct represents '1' with '5038'
c Var 'variant_fields_00001_00009_00002' order represents '2' with '5039'
-5038 5039 0
c Var 'variant_fields_00001_00009_00002' direct represents '2' with '5040'
5038 -5039 5040 0
-5040 5039 0
-5040 -5038 0
c Var 'variant_fields_00001_00009_00002' order represents '3' with '5041'
-5039 5041 0
c Var 'variant_fields_00001_00009_00002' direct represents '3' with '5042'
5039 -5041 5042 0
-5042 5041 0
-5042 -5039 0
c Var 'variant_fields_00001_00009_00002' order represents '4' with '5043'
-5041 5043 0
c Var 'variant_fields_00001_00009_00002' direct represents '4' with '5044'
5041 -5043 5044 0
-5044 5043 0
-5044 -5041 0
c Var 'variant_fields_00001_00009_00002' order represents '5' with '5045'
-5043 5045 0
c Var 'variant_fields_00001_00009_00002' direct represents '5' with '5046'
5043 -5045 5046 0
-5046 5045 0
-5046 -5043 0
c Var 'variant_fields_00001_00009_00002' order represents '6' with '5047'
-5045 5047 0
c Var 'variant_fields_00001_00009_00002' direct represents '6' with '5048'
5045 -5047 5048 0
-5048 5047 0
-5048 -5045 0
c Var 'variant_fields_00001_00009_00002' order represents '7' with '5049'
-5047 5049 0
c Var 'variant_fields_00001_00009_00002' direct represents '7' with '5050'
5047 -5049 5050 0
-5050 5049 0
-5050 -5047 0
c Var 'variant_fields_00001_00009_00002' order represents '8' with '5051'
-5049 5051 0
c Var 'variant_fields_00001_00009_00002' direct represents '8' with '5052'
5049 -5051 5052 0
-5052 5051 0
-5052 -5049 0
c Var 'variant_fields_00001_00009_00002' direct represents '9' with '-5051'
5038 5040 5042 5044 5046 5048 5050 5052 -5051 0
c Encoding variable: variant_fields_00001_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00003' order represents '1' with '5053'
c Var 'variant_fields_00001_00009_00003' direct represents '1' with '5053'
c Var 'variant_fields_00001_00009_00003' order represents '2' with '5054'
-5053 5054 0
c Var 'variant_fields_00001_00009_00003' direct represents '2' with '5055'
5053 -5054 5055 0
-5055 5054 0
-5055 -5053 0
c Var 'variant_fields_00001_00009_00003' order represents '3' with '5056'
-5054 5056 0
c Var 'variant_fields_00001_00009_00003' direct represents '3' with '5057'
5054 -5056 5057 0
-5057 5056 0
-5057 -5054 0
c Var 'variant_fields_00001_00009_00003' order represents '4' with '5058'
-5056 5058 0
c Var 'variant_fields_00001_00009_00003' direct represents '4' with '5059'
5056 -5058 5059 0
-5059 5058 0
-5059 -5056 0
c Var 'variant_fields_00001_00009_00003' order represents '5' with '5060'
-5058 5060 0
c Var 'variant_fields_00001_00009_00003' direct represents '5' with '5061'
5058 -5060 5061 0
-5061 5060 0
-5061 -5058 0
c Var 'variant_fields_00001_00009_00003' order represents '6' with '5062'
-5060 5062 0
c Var 'variant_fields_00001_00009_00003' direct represents '6' with '5063'
5060 -5062 5063 0
-5063 5062 0
-5063 -5060 0
c Var 'variant_fields_00001_00009_00003' order represents '7' with '5064'
-5062 5064 0
c Var 'variant_fields_00001_00009_00003' direct represents '7' with '5065'
5062 -5064 5065 0
-5065 5064 0
-5065 -5062 0
c Var 'variant_fields_00001_00009_00003' order represents '8' with '5066'
-5064 5066 0
c Var 'variant_fields_00001_00009_00003' direct represents '8' with '5067'
5064 -5066 5067 0
-5067 5066 0
-5067 -5064 0
c Var 'variant_fields_00001_00009_00003' direct represents '9' with '-5066'
5053 5055 5057 5059 5061 5063 5065 5067 -5066 0
c Encoding variable: variant_fields_00001_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00004' order represents '1' with '5068'
c Var 'variant_fields_00001_00009_00004' direct represents '1' with '5068'
c Var 'variant_fields_00001_00009_00004' order represents '2' with '5069'
-5068 5069 0
c Var 'variant_fields_00001_00009_00004' direct represents '2' with '5070'
5068 -5069 5070 0
-5070 5069 0
-5070 -5068 0
c Var 'variant_fields_00001_00009_00004' order represents '3' with '5071'
-5069 5071 0
c Var 'variant_fields_00001_00009_00004' direct represents '3' with '5072'
5069 -5071 5072 0
-5072 5071 0
-5072 -5069 0
c Var 'variant_fields_00001_00009_00004' order represents '4' with '5073'
-5071 5073 0
c Var 'variant_fields_00001_00009_00004' direct represents '4' with '5074'
5071 -5073 5074 0
-5074 5073 0
-5074 -5071 0
c Var 'variant_fields_00001_00009_00004' order represents '5' with '5075'
-5073 5075 0
c Var 'variant_fields_00001_00009_00004' direct represents '5' with '5076'
5073 -5075 5076 0
-5076 5075 0
-5076 -5073 0
c Var 'variant_fields_00001_00009_00004' order represents '6' with '5077'
-5075 5077 0
c Var 'variant_fields_00001_00009_00004' direct represents '6' with '5078'
5075 -5077 5078 0
-5078 5077 0
-5078 -5075 0
c Var 'variant_fields_00001_00009_00004' order represents '7' with '5079'
-5077 5079 0
c Var 'variant_fields_00001_00009_00004' direct represents '7' with '5080'
5077 -5079 5080 0
-5080 5079 0
-5080 -5077 0
c Var 'variant_fields_00001_00009_00004' order represents '8' with '5081'
-5079 5081 0
c Var 'variant_fields_00001_00009_00004' direct represents '8' with '5082'
5079 -5081 5082 0
-5082 5081 0
-5082 -5079 0
c Var 'variant_fields_00001_00009_00004' direct represents '9' with '-5081'
5068 5070 5072 5074 5076 5078 5080 5082 -5081 0
c Encoding variable: variant_fields_00001_00009_00005 with domain: int(1) (representing constraint )
c Var 'variant_fields_00001_00009_00005' direct represents '1' with '5083'
5083 0
c Encoding variable: variant_fields_00001_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00006' order represents '1' with '5084'
c Var 'variant_fields_00001_00009_00006' direct represents '1' with '5084'
c Var 'variant_fields_00001_00009_00006' order represents '2' with '5085'
-5084 5085 0
c Var 'variant_fields_00001_00009_00006' direct represents '2' with '5086'
5084 -5085 5086 0
-5086 5085 0
-5086 -5084 0
c Var 'variant_fields_00001_00009_00006' order represents '3' with '5087'
-5085 5087 0
c Var 'variant_fields_00001_00009_00006' direct represents '3' with '5088'
5085 -5087 5088 0
-5088 5087 0
-5088 -5085 0
c Var 'variant_fields_00001_00009_00006' order represents '4' with '5089'
-5087 5089 0
c Var 'variant_fields_00001_00009_00006' direct represents '4' with '5090'
5087 -5089 5090 0
-5090 5089 0
-5090 -5087 0
c Var 'variant_fields_00001_00009_00006' order represents '5' with '5091'
-5089 5091 0
c Var 'variant_fields_00001_00009_00006' direct represents '5' with '5092'
5089 -5091 5092 0
-5092 5091 0
-5092 -5089 0
c Var 'variant_fields_00001_00009_00006' order represents '6' with '5093'
-5091 5093 0
c Var 'variant_fields_00001_00009_00006' direct represents '6' with '5094'
5091 -5093 5094 0
-5094 5093 0
-5094 -5091 0
c Var 'variant_fields_00001_00009_00006' order represents '7' with '5095'
-5093 5095 0
c Var 'variant_fields_00001_00009_00006' direct represents '7' with '5096'
5093 -5095 5096 0
-5096 5095 0
-5096 -5093 0
c Var 'variant_fields_00001_00009_00006' order represents '8' with '5097'
-5095 5097 0
c Var 'variant_fields_00001_00009_00006' direct represents '8' with '5098'
5095 -5097 5098 0
-5098 5097 0
-5098 -5095 0
c Var 'variant_fields_00001_00009_00006' direct represents '9' with '-5097'
5084 5086 5088 5090 5092 5094 5096 5098 -5097 0
c Encoding variable: variant_fields_00001_00009_00007 with domain: int(8) (representing constraint )
c Var 'variant_fields_00001_00009_00007' direct represents '8' with '5099'
5099 0
c Encoding variable: variant_fields_00001_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00008' order represents '1' with '5100'
c Var 'variant_fields_00001_00009_00008' direct represents '1' with '5100'
c Var 'variant_fields_00001_00009_00008' order represents '2' with '5101'
-5100 5101 0
c Var 'variant_fields_00001_00009_00008' direct represents '2' with '5102'
5100 -5101 5102 0
-5102 5101 0
-5102 -5100 0
c Var 'variant_fields_00001_00009_00008' order represents '3' with '5103'
-5101 5103 0
c Var 'variant_fields_00001_00009_00008' direct represents '3' with '5104'
5101 -5103 5104 0
-5104 5103 0
-5104 -5101 0
c Var 'variant_fields_00001_00009_00008' order represents '4' with '5105'
-5103 5105 0
c Var 'variant_fields_00001_00009_00008' direct represents '4' with '5106'
5103 -5105 5106 0
-5106 5105 0
-5106 -5103 0
c Var 'variant_fields_00001_00009_00008' order represents '5' with '5107'
-5105 5107 0
c Var 'variant_fields_00001_00009_00008' direct represents '5' with '5108'
5105 -5107 5108 0
-5108 5107 0
-5108 -5105 0
c Var 'variant_fields_00001_00009_00008' order represents '6' with '5109'
-5107 5109 0
c Var 'variant_fields_00001_00009_00008' direct represents '6' with '5110'
5107 -5109 5110 0
-5110 5109 0
-5110 -5107 0
c Var 'variant_fields_00001_00009_00008' order represents '7' with '5111'
-5109 5111 0
c Var 'variant_fields_00001_00009_00008' direct represents '7' with '5112'
5109 -5111 5112 0
-5112 5111 0
-5112 -5109 0
c Var 'variant_fields_00001_00009_00008' order represents '8' with '5113'
-5111 5113 0
c Var 'variant_fields_00001_00009_00008' direct represents '8' with '5114'
5111 -5113 5114 0
-5114 5113 0
-5114 -5111 0
c Var 'variant_fields_00001_00009_00008' direct represents '9' with '-5113'
5100 5102 5104 5106 5108 5110 5112 5114 -5113 0
c Encoding variable: variant_fields_00001_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00009' order represents '1' with '5115'
c Var 'variant_fields_00001_00009_00009' direct represents '1' with '5115'
c Var 'variant_fields_00001_00009_00009' order represents '2' with '5116'
-5115 5116 0
c Var 'variant_fields_00001_00009_00009' direct represents '2' with '5117'
5115 -5116 5117 0
-5117 5116 0
-5117 -5115 0
c Var 'variant_fields_00001_00009_00009' order represents '3' with '5118'
-5116 5118 0
c Var 'variant_fields_00001_00009_00009' direct represents '3' with '5119'
5116 -5118 5119 0
-5119 5118 0
-5119 -5116 0
c Var 'variant_fields_00001_00009_00009' order represents '4' with '5120'
-5118 5120 0
c Var 'variant_fields_00001_00009_00009' direct represents '4' with '5121'
5118 -5120 5121 0
-5121 5120 0
-5121 -5118 0
c Var 'variant_fields_00001_00009_00009' order represents '5' with '5122'
-5120 5122 0
c Var 'variant_fields_00001_00009_00009' direct represents '5' with '5123'
5120 -5122 5123 0
-5123 5122 0
-5123 -5120 0
c Var 'variant_fields_00001_00009_00009' order represents '6' with '5124'
-5122 5124 0
c Var 'variant_fields_00001_00009_00009' direct represents '6' with '5125'
5122 -5124 5125 0
-5125 5124 0
-5125 -5122 0
c Var 'variant_fields_00001_00009_00009' order represents '7' with '5126'
-5124 5126 0
c Var 'variant_fields_00001_00009_00009' direct represents '7' with '5127'
5124 -5126 5127 0
-5127 5126 0
-5127 -5124 0
c Var 'variant_fields_00001_00009_00009' order represents '8' with '5128'
-5126 5128 0
c Var 'variant_fields_00001_00009_00009' direct represents '8' with '5129'
5126 -5128 5129 0
-5129 5128 0
-5129 -5126 0
c Var 'variant_fields_00001_00009_00009' direct represents '9' with '-5128'
5115 5117 5119 5121 5123 5125 5127 5129 -5128 0
c Encoding variable: variant_fields_00002_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00001' order represents '1' with '5130'
c Var 'variant_fields_00002_00001_00001' direct represents '1' with '5130'
c Var 'variant_fields_00002_00001_00001' order represents '2' with '5131'
-5130 5131 0
c Var 'variant_fields_00002_00001_00001' direct represents '2' with '5132'
5130 -5131 5132 0
-5132 5131 0
-5132 -5130 0
c Var 'variant_fields_00002_00001_00001' order represents '3' with '5133'
-5131 5133 0
c Var 'variant_fields_00002_00001_00001' direct represents '3' with '5134'
5131 -5133 5134 0
-5134 5133 0
-5134 -5131 0
c Var 'variant_fields_00002_00001_00001' order represents '4' with '5135'
-5133 5135 0
c Var 'variant_fields_00002_00001_00001' direct represents '4' with '5136'
5133 -5135 5136 0
-5136 5135 0
-5136 -5133 0
c Var 'variant_fields_00002_00001_00001' order represents '5' with '5137'
-5135 5137 0
c Var 'variant_fields_00002_00001_00001' direct represents '5' with '5138'
5135 -5137 5138 0
-5138 5137 0
-5138 -5135 0
c Var 'variant_fields_00002_00001_00001' order represents '6' with '5139'
-5137 5139 0
c Var 'variant_fields_00002_00001_00001' direct represents '6' with '5140'
5137 -5139 5140 0
-5140 5139 0
-5140 -5137 0
c Var 'variant_fields_00002_00001_00001' order represents '7' with '5141'
-5139 5141 0
c Var 'variant_fields_00002_00001_00001' direct represents '7' with '5142'
5139 -5141 5142 0
-5142 5141 0
-5142 -5139 0
c Var 'variant_fields_00002_00001_00001' order represents '8' with '5143'
-5141 5143 0
c Var 'variant_fields_00002_00001_00001' direct represents '8' with '5144'
5141 -5143 5144 0
-5144 5143 0
-5144 -5141 0
c Var 'variant_fields_00002_00001_00001' direct represents '9' with '-5143'
5130 5132 5134 5136 5138 5140 5142 5144 -5143 0
c Encoding variable: variant_fields_00002_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00002' order represents '1' with '5145'
c Var 'variant_fields_00002_00001_00002' direct represents '1' with '5145'
c Var 'variant_fields_00002_00001_00002' order represents '2' with '5146'
-5145 5146 0
c Var 'variant_fields_00002_00001_00002' direct represents '2' with '5147'
5145 -5146 5147 0
-5147 5146 0
-5147 -5145 0
c Var 'variant_fields_00002_00001_00002' order represents '3' with '5148'
-5146 5148 0
c Var 'variant_fields_00002_00001_00002' direct represents '3' with '5149'
5146 -5148 5149 0
-5149 5148 0
-5149 -5146 0
c Var 'variant_fields_00002_00001_00002' order represents '4' with '5150'
-5148 5150 0
c Var 'variant_fields_00002_00001_00002' direct represents '4' with '5151'
5148 -5150 5151 0
-5151 5150 0
-5151 -5148 0
c Var 'variant_fields_00002_00001_00002' order represents '5' with '5152'
-5150 5152 0
c Var 'variant_fields_00002_00001_00002' direct represents '5' with '5153'
5150 -5152 5153 0
-5153 5152 0
-5153 -5150 0
c Var 'variant_fields_00002_00001_00002' order represents '6' with '5154'
-5152 5154 0
c Var 'variant_fields_00002_00001_00002' direct represents '6' with '5155'
5152 -5154 5155 0
-5155 5154 0
-5155 -5152 0
c Var 'variant_fields_00002_00001_00002' order represents '7' with '5156'
-5154 5156 0
c Var 'variant_fields_00002_00001_00002' direct represents '7' with '5157'
5154 -5156 5157 0
-5157 5156 0
-5157 -5154 0
c Var 'variant_fields_00002_00001_00002' order represents '8' with '5158'
-5156 5158 0
c Var 'variant_fields_00002_00001_00002' direct represents '8' with '5159'
5156 -5158 5159 0
-5159 5158 0
-5159 -5156 0
c Var 'variant_fields_00002_00001_00002' direct represents '9' with '-5158'
5145 5147 5149 5151 5153 5155 5157 5159 -5158 0
c Encoding variable: variant_fields_00002_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00003' order represents '1' with '5160'
c Var 'variant_fields_00002_00001_00003' direct represents '1' with '5160'
c Var 'variant_fields_00002_00001_00003' order represents '2' with '5161'
-5160 5161 0
c Var 'variant_fields_00002_00001_00003' direct represents '2' with '5162'
5160 -5161 5162 0
-5162 5161 0
-5162 -5160 0
c Var 'variant_fields_00002_00001_00003' order represents '3' with '5163'
-5161 5163 0
c Var 'variant_fields_00002_00001_00003' direct represents '3' with '5164'
5161 -5163 5164 0
-5164 5163 0
-5164 -5161 0
c Var 'variant_fields_00002_00001_00003' order represents '4' with '5165'
-5163 5165 0
c Var 'variant_fields_00002_00001_00003' direct represents '4' with '5166'
5163 -5165 5166 0
-5166 5165 0
-5166 -5163 0
c Var 'variant_fields_00002_00001_00003' order represents '5' with '5167'
-5165 5167 0
c Var 'variant_fields_00002_00001_00003' direct represents '5' with '5168'
5165 -5167 5168 0
-5168 5167 0
-5168 -5165 0
c Var 'variant_fields_00002_00001_00003' order represents '6' with '5169'
-5167 5169 0
c Var 'variant_fields_00002_00001_00003' direct represents '6' with '5170'
5167 -5169 5170 0
-5170 5169 0
-5170 -5167 0
c Var 'variant_fields_00002_00001_00003' order represents '7' with '5171'
-5169 5171 0
c Var 'variant_fields_00002_00001_00003' direct represents '7' with '5172'
5169 -5171 5172 0
-5172 5171 0
-5172 -5169 0
c Var 'variant_fields_00002_00001_00003' order represents '8' with '5173'
-5171 5173 0
c Var 'variant_fields_00002_00001_00003' direct represents '8' with '5174'
5171 -5173 5174 0
-5174 5173 0
-5174 -5171 0
c Var 'variant_fields_00002_00001_00003' direct represents '9' with '-5173'
5160 5162 5164 5166 5168 5170 5172 5174 -5173 0
c Encoding variable: variant_fields_00002_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00004' order represents '1' with '5175'
c Var 'variant_fields_00002_00001_00004' direct represents '1' with '5175'
c Var 'variant_fields_00002_00001_00004' order represents '2' with '5176'
-5175 5176 0
c Var 'variant_fields_00002_00001_00004' direct represents '2' with '5177'
5175 -5176 5177 0
-5177 5176 0
-5177 -5175 0
c Var 'variant_fields_00002_00001_00004' order represents '3' with '5178'
-5176 5178 0
c Var 'variant_fields_00002_00001_00004' direct represents '3' with '5179'
5176 -5178 5179 0
-5179 5178 0
-5179 -5176 0
c Var 'variant_fields_00002_00001_00004' order represents '4' with '5180'
-5178 5180 0
c Var 'variant_fields_00002_00001_00004' direct represents '4' with '5181'
5178 -5180 5181 0
-5181 5180 0
-5181 -5178 0
c Var 'variant_fields_00002_00001_00004' order represents '5' with '5182'
-5180 5182 0
c Var 'variant_fields_00002_00001_00004' direct represents '5' with '5183'
5180 -5182 5183 0
-5183 5182 0
-5183 -5180 0
c Var 'variant_fields_00002_00001_00004' order represents '6' with '5184'
-5182 5184 0
c Var 'variant_fields_00002_00001_00004' direct represents '6' with '5185'
5182 -5184 5185 0
-5185 5184 0
-5185 -5182 0
c Var 'variant_fields_00002_00001_00004' order represents '7' with '5186'
-5184 5186 0
c Var 'variant_fields_00002_00001_00004' direct represents '7' with '5187'
5184 -5186 5187 0
-5187 5186 0
-5187 -5184 0
c Var 'variant_fields_00002_00001_00004' order represents '8' with '5188'
-5186 5188 0
c Var 'variant_fields_00002_00001_00004' direct represents '8' with '5189'
5186 -5188 5189 0
-5189 5188 0
-5189 -5186 0
c Var 'variant_fields_00002_00001_00004' direct represents '9' with '-5188'
5175 5177 5179 5181 5183 5185 5187 5189 -5188 0
c Encoding variable: variant_fields_00002_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00005' order represents '1' with '5190'
c Var 'variant_fields_00002_00001_00005' direct represents '1' with '5190'
c Var 'variant_fields_00002_00001_00005' order represents '2' with '5191'
-5190 5191 0
c Var 'variant_fields_00002_00001_00005' direct represents '2' with '5192'
5190 -5191 5192 0
-5192 5191 0
-5192 -5190 0
c Var 'variant_fields_00002_00001_00005' order represents '3' with '5193'
-5191 5193 0
c Var 'variant_fields_00002_00001_00005' direct represents '3' with '5194'
5191 -5193 5194 0
-5194 5193 0
-5194 -5191 0
c Var 'variant_fields_00002_00001_00005' order represents '4' with '5195'
-5193 5195 0
c Var 'variant_fields_00002_00001_00005' direct represents '4' with '5196'
5193 -5195 5196 0
-5196 5195 0
-5196 -5193 0
c Var 'variant_fields_00002_00001_00005' order represents '5' with '5197'
-5195 5197 0
c Var 'variant_fields_00002_00001_00005' direct represents '5' with '5198'
5195 -5197 5198 0
-5198 5197 0
-5198 -5195 0
c Var 'variant_fields_00002_00001_00005' order represents '6' with '5199'
-5197 5199 0
c Var 'variant_fields_00002_00001_00005' direct represents '6' with '5200'
5197 -5199 5200 0
-5200 5199 0
-5200 -5197 0
c Var 'variant_fields_00002_00001_00005' order represents '7' with '5201'
-5199 5201 0
c Var 'variant_fields_00002_00001_00005' direct represents '7' with '5202'
5199 -5201 5202 0
-5202 5201 0
-5202 -5199 0
c Var 'variant_fields_00002_00001_00005' order represents '8' with '5203'
-5201 5203 0
c Var 'variant_fields_00002_00001_00005' direct represents '8' with '5204'
5201 -5203 5204 0
-5204 5203 0
-5204 -5201 0
c Var 'variant_fields_00002_00001_00005' direct represents '9' with '-5203'
5190 5192 5194 5196 5198 5200 5202 5204 -5203 0
c Encoding variable: variant_fields_00002_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00006' order represents '1' with '5205'
c Var 'variant_fields_00002_00001_00006' direct represents '1' with '5205'
c Var 'variant_fields_00002_00001_00006' order represents '2' with '5206'
-5205 5206 0
c Var 'variant_fields_00002_00001_00006' direct represents '2' with '5207'
5205 -5206 5207 0
-5207 5206 0
-5207 -5205 0
c Var 'variant_fields_00002_00001_00006' order represents '3' with '5208'
-5206 5208 0
c Var 'variant_fields_00002_00001_00006' direct represents '3' with '5209'
5206 -5208 5209 0
-5209 5208 0
-5209 -5206 0
c Var 'variant_fields_00002_00001_00006' order represents '4' with '5210'
-5208 5210 0
c Var 'variant_fields_00002_00001_00006' direct represents '4' with '5211'
5208 -5210 5211 0
-5211 5210 0
-5211 -5208 0
c Var 'variant_fields_00002_00001_00006' order represents '5' with '5212'
-5210 5212 0
c Var 'variant_fields_00002_00001_00006' direct represents '5' with '5213'
5210 -5212 5213 0
-5213 5212 0
-5213 -5210 0
c Var 'variant_fields_00002_00001_00006' order represents '6' with '5214'
-5212 5214 0
c Var 'variant_fields_00002_00001_00006' direct represents '6' with '5215'
5212 -5214 5215 0
-5215 5214 0
-5215 -5212 0
c Var 'variant_fields_00002_00001_00006' order represents '7' with '5216'
-5214 5216 0
c Var 'variant_fields_00002_00001_00006' direct represents '7' with '5217'
5214 -5216 5217 0
-5217 5216 0
-5217 -5214 0
c Var 'variant_fields_00002_00001_00006' order represents '8' with '5218'
-5216 5218 0
c Var 'variant_fields_00002_00001_00006' direct represents '8' with '5219'
5216 -5218 5219 0
-5219 5218 0
-5219 -5216 0
c Var 'variant_fields_00002_00001_00006' direct represents '9' with '-5218'
5205 5207 5209 5211 5213 5215 5217 5219 -5218 0
c Encoding variable: variant_fields_00002_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00007' order represents '1' with '5220'
c Var 'variant_fields_00002_00001_00007' direct represents '1' with '5220'
c Var 'variant_fields_00002_00001_00007' order represents '2' with '5221'
-5220 5221 0
c Var 'variant_fields_00002_00001_00007' direct represents '2' with '5222'
5220 -5221 5222 0
-5222 5221 0
-5222 -5220 0
c Var 'variant_fields_00002_00001_00007' order represents '3' with '5223'
-5221 5223 0
c Var 'variant_fields_00002_00001_00007' direct represents '3' with '5224'
5221 -5223 5224 0
-5224 5223 0
-5224 -5221 0
c Var 'variant_fields_00002_00001_00007' order represents '4' with '5225'
-5223 5225 0
c Var 'variant_fields_00002_00001_00007' direct represents '4' with '5226'
5223 -5225 5226 0
-5226 5225 0
-5226 -5223 0
c Var 'variant_fields_00002_00001_00007' order represents '5' with '5227'
-5225 5227 0
c Var 'variant_fields_00002_00001_00007' direct represents '5' with '5228'
5225 -5227 5228 0
-5228 5227 0
-5228 -5225 0
c Var 'variant_fields_00002_00001_00007' order represents '6' with '5229'
-5227 5229 0
c Var 'variant_fields_00002_00001_00007' direct represents '6' with '5230'
5227 -5229 5230 0
-5230 5229 0
-5230 -5227 0
c Var 'variant_fields_00002_00001_00007' order represents '7' with '5231'
-5229 5231 0
c Var 'variant_fields_00002_00001_00007' direct represents '7' with '5232'
5229 -5231 5232 0
-5232 5231 0
-5232 -5229 0
c Var 'variant_fields_00002_00001_00007' order represents '8' with '5233'
-5231 5233 0
c Var 'variant_fields_00002_00001_00007' direct represents '8' with '5234'
5231 -5233 5234 0
-5234 5233 0
-5234 -5231 0
c Var 'variant_fields_00002_00001_00007' direct represents '9' with '-5233'
5220 5222 5224 5226 5228 5230 5232 5234 -5233 0
c Encoding variable: variant_fields_00002_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00008' order represents '1' with '5235'
c Var 'variant_fields_00002_00001_00008' direct represents '1' with '5235'
c Var 'variant_fields_00002_00001_00008' order represents '2' with '5236'
-5235 5236 0
c Var 'variant_fields_00002_00001_00008' direct represents '2' with '5237'
5235 -5236 5237 0
-5237 5236 0
-5237 -5235 0
c Var 'variant_fields_00002_00001_00008' order represents '3' with '5238'
-5236 5238 0
c Var 'variant_fields_00002_00001_00008' direct represents '3' with '5239'
5236 -5238 5239 0
-5239 5238 0
-5239 -5236 0
c Var 'variant_fields_00002_00001_00008' order represents '4' with '5240'
-5238 5240 0
c Var 'variant_fields_00002_00001_00008' direct represents '4' with '5241'
5238 -5240 5241 0
-5241 5240 0
-5241 -5238 0
c Var 'variant_fields_00002_00001_00008' order represents '5' with '5242'
-5240 5242 0
c Var 'variant_fields_00002_00001_00008' direct represents '5' with '5243'
5240 -5242 5243 0
-5243 5242 0
-5243 -5240 0
c Var 'variant_fields_00002_00001_00008' order represents '6' with '5244'
-5242 5244 0
c Var 'variant_fields_00002_00001_00008' direct represents '6' with '5245'
5242 -5244 5245 0
-5245 5244 0
-5245 -5242 0
c Var 'variant_fields_00002_00001_00008' order represents '7' with '5246'
-5244 5246 0
c Var 'variant_fields_00002_00001_00008' direct represents '7' with '5247'
5244 -5246 5247 0
-5247 5246 0
-5247 -5244 0
c Var 'variant_fields_00002_00001_00008' order represents '8' with '5248'
-5246 5248 0
c Var 'variant_fields_00002_00001_00008' direct represents '8' with '5249'
5246 -5248 5249 0
-5249 5248 0
-5249 -5246 0
c Var 'variant_fields_00002_00001_00008' direct represents '9' with '-5248'
5235 5237 5239 5241 5243 5245 5247 5249 -5248 0
c Encoding variable: variant_fields_00002_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00009' order represents '1' with '5250'
c Var 'variant_fields_00002_00001_00009' direct represents '1' with '5250'
c Var 'variant_fields_00002_00001_00009' order represents '2' with '5251'
-5250 5251 0
c Var 'variant_fields_00002_00001_00009' direct represents '2' with '5252'
5250 -5251 5252 0
-5252 5251 0
-5252 -5250 0
c Var 'variant_fields_00002_00001_00009' order represents '3' with '5253'
-5251 5253 0
c Var 'variant_fields_00002_00001_00009' direct represents '3' with '5254'
5251 -5253 5254 0
-5254 5253 0
-5254 -5251 0
c Var 'variant_fields_00002_00001_00009' order represents '4' with '5255'
-5253 5255 0
c Var 'variant_fields_00002_00001_00009' direct represents '4' with '5256'
5253 -5255 5256 0
-5256 5255 0
-5256 -5253 0
c Var 'variant_fields_00002_00001_00009' order represents '5' with '5257'
-5255 5257 0
c Var 'variant_fields_00002_00001_00009' direct represents '5' with '5258'
5255 -5257 5258 0
-5258 5257 0
-5258 -5255 0
c Var 'variant_fields_00002_00001_00009' order represents '6' with '5259'
-5257 5259 0
c Var 'variant_fields_00002_00001_00009' direct represents '6' with '5260'
5257 -5259 5260 0
-5260 5259 0
-5260 -5257 0
c Var 'variant_fields_00002_00001_00009' order represents '7' with '5261'
-5259 5261 0
c Var 'variant_fields_00002_00001_00009' direct represents '7' with '5262'
5259 -5261 5262 0
-5262 5261 0
-5262 -5259 0
c Var 'variant_fields_00002_00001_00009' order represents '8' with '5263'
-5261 5263 0
c Var 'variant_fields_00002_00001_00009' direct represents '8' with '5264'
5261 -5263 5264 0
-5264 5263 0
-5264 -5261 0
c Var 'variant_fields_00002_00001_00009' direct represents '9' with '-5263'
5250 5252 5254 5256 5258 5260 5262 5264 -5263 0
c Encoding variable: variant_fields_00002_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00001' order represents '1' with '5265'
c Var 'variant_fields_00002_00002_00001' direct represents '1' with '5265'
c Var 'variant_fields_00002_00002_00001' order represents '2' with '5266'
-5265 5266 0
c Var 'variant_fields_00002_00002_00001' direct represents '2' with '5267'
5265 -5266 5267 0
-5267 5266 0
-5267 -5265 0
c Var 'variant_fields_00002_00002_00001' order represents '3' with '5268'
-5266 5268 0
c Var 'variant_fields_00002_00002_00001' direct represents '3' with '5269'
5266 -5268 5269 0
-5269 5268 0
-5269 -5266 0
c Var 'variant_fields_00002_00002_00001' order represents '4' with '5270'
-5268 5270 0
c Var 'variant_fields_00002_00002_00001' direct represents '4' with '5271'
5268 -5270 5271 0
-5271 5270 0
-5271 -5268 0
c Var 'variant_fields_00002_00002_00001' order represents '5' with '5272'
-5270 5272 0
c Var 'variant_fields_00002_00002_00001' direct represents '5' with '5273'
5270 -5272 5273 0
-5273 5272 0
-5273 -5270 0
c Var 'variant_fields_00002_00002_00001' order represents '6' with '5274'
-5272 5274 0
c Var 'variant_fields_00002_00002_00001' direct represents '6' with '5275'
5272 -5274 5275 0
-5275 5274 0
-5275 -5272 0
c Var 'variant_fields_00002_00002_00001' order represents '7' with '5276'
-5274 5276 0
c Var 'variant_fields_00002_00002_00001' direct represents '7' with '5277'
5274 -5276 5277 0
-5277 5276 0
-5277 -5274 0
c Var 'variant_fields_00002_00002_00001' order represents '8' with '5278'
-5276 5278 0
c Var 'variant_fields_00002_00002_00001' direct represents '8' with '5279'
5276 -5278 5279 0
-5279 5278 0
-5279 -5276 0
c Var 'variant_fields_00002_00002_00001' direct represents '9' with '-5278'
5265 5267 5269 5271 5273 5275 5277 5279 -5278 0
c Encoding variable: variant_fields_00002_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00002' order represents '1' with '5280'
c Var 'variant_fields_00002_00002_00002' direct represents '1' with '5280'
c Var 'variant_fields_00002_00002_00002' order represents '2' with '5281'
-5280 5281 0
c Var 'variant_fields_00002_00002_00002' direct represents '2' with '5282'
5280 -5281 5282 0
-5282 5281 0
-5282 -5280 0
c Var 'variant_fields_00002_00002_00002' order represents '3' with '5283'
-5281 5283 0
c Var 'variant_fields_00002_00002_00002' direct represents '3' with '5284'
5281 -5283 5284 0
-5284 5283 0
-5284 -5281 0
c Var 'variant_fields_00002_00002_00002' order represents '4' with '5285'
-5283 5285 0
c Var 'variant_fields_00002_00002_00002' direct represents '4' with '5286'
5283 -5285 5286 0
-5286 5285 0
-5286 -5283 0
c Var 'variant_fields_00002_00002_00002' order represents '5' with '5287'
-5285 5287 0
c Var 'variant_fields_00002_00002_00002' direct represents '5' with '5288'
5285 -5287 5288 0
-5288 5287 0
-5288 -5285 0
c Var 'variant_fields_00002_00002_00002' order represents '6' with '5289'
-5287 5289 0
c Var 'variant_fields_00002_00002_00002' direct represents '6' with '5290'
5287 -5289 5290 0
-5290 5289 0
-5290 -5287 0
c Var 'variant_fields_00002_00002_00002' order represents '7' with '5291'
-5289 5291 0
c Var 'variant_fields_00002_00002_00002' direct represents '7' with '5292'
5289 -5291 5292 0
-5292 5291 0
-5292 -5289 0
c Var 'variant_fields_00002_00002_00002' order represents '8' with '5293'
-5291 5293 0
c Var 'variant_fields_00002_00002_00002' direct represents '8' with '5294'
5291 -5293 5294 0
-5294 5293 0
-5294 -5291 0
c Var 'variant_fields_00002_00002_00002' direct represents '9' with '-5293'
5280 5282 5284 5286 5288 5290 5292 5294 -5293 0
c Encoding variable: variant_fields_00002_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00003' order represents '1' with '5295'
c Var 'variant_fields_00002_00002_00003' direct represents '1' with '5295'
c Var 'variant_fields_00002_00002_00003' order represents '2' with '5296'
-5295 5296 0
c Var 'variant_fields_00002_00002_00003' direct represents '2' with '5297'
5295 -5296 5297 0
-5297 5296 0
-5297 -5295 0
c Var 'variant_fields_00002_00002_00003' order represents '3' with '5298'
-5296 5298 0
c Var 'variant_fields_00002_00002_00003' direct represents '3' with '5299'
5296 -5298 5299 0
-5299 5298 0
-5299 -5296 0
c Var 'variant_fields_00002_00002_00003' order represents '4' with '5300'
-5298 5300 0
c Var 'variant_fields_00002_00002_00003' direct represents '4' with '5301'
5298 -5300 5301 0
-5301 5300 0
-5301 -5298 0
c Var 'variant_fields_00002_00002_00003' order represents '5' with '5302'
-5300 5302 0
c Var 'variant_fields_00002_00002_00003' direct represents '5' with '5303'
5300 -5302 5303 0
-5303 5302 0
-5303 -5300 0
c Var 'variant_fields_00002_00002_00003' order represents '6' with '5304'
-5302 5304 0
c Var 'variant_fields_00002_00002_00003' direct represents '6' with '5305'
5302 -5304 5305 0
-5305 5304 0
-5305 -5302 0
c Var 'variant_fields_00002_00002_00003' order represents '7' with '5306'
-5304 5306 0
c Var 'variant_fields_00002_00002_00003' direct represents '7' with '5307'
5304 -5306 5307 0
-5307 5306 0
-5307 -5304 0
c Var 'variant_fields_00002_00002_00003' order represents '8' with '5308'
-5306 5308 0
c Var 'variant_fields_00002_00002_00003' direct represents '8' with '5309'
5306 -5308 5309 0
-5309 5308 0
-5309 -5306 0
c Var 'variant_fields_00002_00002_00003' direct represents '9' with '-5308'
5295 5297 5299 5301 5303 5305 5307 5309 -5308 0
c Encoding variable: variant_fields_00002_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00004' order represents '1' with '5310'
c Var 'variant_fields_00002_00002_00004' direct represents '1' with '5310'
c Var 'variant_fields_00002_00002_00004' order represents '2' with '5311'
-5310 5311 0
c Var 'variant_fields_00002_00002_00004' direct represents '2' with '5312'
5310 -5311 5312 0
-5312 5311 0
-5312 -5310 0
c Var 'variant_fields_00002_00002_00004' order represents '3' with '5313'
-5311 5313 0
c Var 'variant_fields_00002_00002_00004' direct represents '3' with '5314'
5311 -5313 5314 0
-5314 5313 0
-5314 -5311 0
c Var 'variant_fields_00002_00002_00004' order represents '4' with '5315'
-5313 5315 0
c Var 'variant_fields_00002_00002_00004' direct represents '4' with '5316'
5313 -5315 5316 0
-5316 5315 0
-5316 -5313 0
c Var 'variant_fields_00002_00002_00004' order represents '5' with '5317'
-5315 5317 0
c Var 'variant_fields_00002_00002_00004' direct represents '5' with '5318'
5315 -5317 5318 0
-5318 5317 0
-5318 -5315 0
c Var 'variant_fields_00002_00002_00004' order represents '6' with '5319'
-5317 5319 0
c Var 'variant_fields_00002_00002_00004' direct represents '6' with '5320'
5317 -5319 5320 0
-5320 5319 0
-5320 -5317 0
c Var 'variant_fields_00002_00002_00004' order represents '7' with '5321'
-5319 5321 0
c Var 'variant_fields_00002_00002_00004' direct represents '7' with '5322'
5319 -5321 5322 0
-5322 5321 0
-5322 -5319 0
c Var 'variant_fields_00002_00002_00004' order represents '8' with '5323'
-5321 5323 0
c Var 'variant_fields_00002_00002_00004' direct represents '8' with '5324'
5321 -5323 5324 0
-5324 5323 0
-5324 -5321 0
c Var 'variant_fields_00002_00002_00004' direct represents '9' with '-5323'
5310 5312 5314 5316 5318 5320 5322 5324 -5323 0
c Encoding variable: variant_fields_00002_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00005' order represents '1' with '5325'
c Var 'variant_fields_00002_00002_00005' direct represents '1' with '5325'
c Var 'variant_fields_00002_00002_00005' order represents '2' with '5326'
-5325 5326 0
c Var 'variant_fields_00002_00002_00005' direct represents '2' with '5327'
5325 -5326 5327 0
-5327 5326 0
-5327 -5325 0
c Var 'variant_fields_00002_00002_00005' order represents '3' with '5328'
-5326 5328 0
c Var 'variant_fields_00002_00002_00005' direct represents '3' with '5329'
5326 -5328 5329 0
-5329 5328 0
-5329 -5326 0
c Var 'variant_fields_00002_00002_00005' order represents '4' with '5330'
-5328 5330 0
c Var 'variant_fields_00002_00002_00005' direct represents '4' with '5331'
5328 -5330 5331 0
-5331 5330 0
-5331 -5328 0
c Var 'variant_fields_00002_00002_00005' order represents '5' with '5332'
-5330 5332 0
c Var 'variant_fields_00002_00002_00005' direct represents '5' with '5333'
5330 -5332 5333 0
-5333 5332 0
-5333 -5330 0
c Var 'variant_fields_00002_00002_00005' order represents '6' with '5334'
-5332 5334 0
c Var 'variant_fields_00002_00002_00005' direct represents '6' with '5335'
5332 -5334 5335 0
-5335 5334 0
-5335 -5332 0
c Var 'variant_fields_00002_00002_00005' order represents '7' with '5336'
-5334 5336 0
c Var 'variant_fields_00002_00002_00005' direct represents '7' with '5337'
5334 -5336 5337 0
-5337 5336 0
-5337 -5334 0
c Var 'variant_fields_00002_00002_00005' order represents '8' with '5338'
-5336 5338 0
c Var 'variant_fields_00002_00002_00005' direct represents '8' with '5339'
5336 -5338 5339 0
-5339 5338 0
-5339 -5336 0
c Var 'variant_fields_00002_00002_00005' direct represents '9' with '-5338'
5325 5327 5329 5331 5333 5335 5337 5339 -5338 0
c Encoding variable: variant_fields_00002_00002_00006 with domain: int(8) (representing constraint )
c Var 'variant_fields_00002_00002_00006' direct represents '8' with '5340'
5340 0
c Encoding variable: variant_fields_00002_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00007' order represents '1' with '5341'
c Var 'variant_fields_00002_00002_00007' direct represents '1' with '5341'
c Var 'variant_fields_00002_00002_00007' order represents '2' with '5342'
-5341 5342 0
c Var 'variant_fields_00002_00002_00007' direct represents '2' with '5343'
5341 -5342 5343 0
-5343 5342 0
-5343 -5341 0
c Var 'variant_fields_00002_00002_00007' order represents '3' with '5344'
-5342 5344 0
c Var 'variant_fields_00002_00002_00007' direct represents '3' with '5345'
5342 -5344 5345 0
-5345 5344 0
-5345 -5342 0
c Var 'variant_fields_00002_00002_00007' order represents '4' with '5346'
-5344 5346 0
c Var 'variant_fields_00002_00002_00007' direct represents '4' with '5347'
5344 -5346 5347 0
-5347 5346 0
-5347 -5344 0
c Var 'variant_fields_00002_00002_00007' order represents '5' with '5348'
-5346 5348 0
c Var 'variant_fields_00002_00002_00007' direct represents '5' with '5349'
5346 -5348 5349 0
-5349 5348 0
-5349 -5346 0
c Var 'variant_fields_00002_00002_00007' order represents '6' with '5350'
-5348 5350 0
c Var 'variant_fields_00002_00002_00007' direct represents '6' with '5351'
5348 -5350 5351 0
-5351 5350 0
-5351 -5348 0
c Var 'variant_fields_00002_00002_00007' order represents '7' with '5352'
-5350 5352 0
c Var 'variant_fields_00002_00002_00007' direct represents '7' with '5353'
5350 -5352 5353 0
-5353 5352 0
-5353 -5350 0
c Var 'variant_fields_00002_00002_00007' order represents '8' with '5354'
-5352 5354 0
c Var 'variant_fields_00002_00002_00007' direct represents '8' with '5355'
5352 -5354 5355 0
-5355 5354 0
-5355 -5352 0
c Var 'variant_fields_00002_00002_00007' direct represents '9' with '-5354'
5341 5343 5345 5347 5349 5351 5353 5355 -5354 0
c Encoding variable: variant_fields_00002_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00008' order represents '1' with '5356'
c Var 'variant_fields_00002_00002_00008' direct represents '1' with '5356'
c Var 'variant_fields_00002_00002_00008' order represents '2' with '5357'
-5356 5357 0
c Var 'variant_fields_00002_00002_00008' direct represents '2' with '5358'
5356 -5357 5358 0
-5358 5357 0
-5358 -5356 0
c Var 'variant_fields_00002_00002_00008' order represents '3' with '5359'
-5357 5359 0
c Var 'variant_fields_00002_00002_00008' direct represents '3' with '5360'
5357 -5359 5360 0
-5360 5359 0
-5360 -5357 0
c Var 'variant_fields_00002_00002_00008' order represents '4' with '5361'
-5359 5361 0
c Var 'variant_fields_00002_00002_00008' direct represents '4' with '5362'
5359 -5361 5362 0
-5362 5361 0
-5362 -5359 0
c Var 'variant_fields_00002_00002_00008' order represents '5' with '5363'
-5361 5363 0
c Var 'variant_fields_00002_00002_00008' direct represents '5' with '5364'
5361 -5363 5364 0
-5364 5363 0
-5364 -5361 0
c Var 'variant_fields_00002_00002_00008' order represents '6' with '5365'
-5363 5365 0
c Var 'variant_fields_00002_00002_00008' direct represents '6' with '5366'
5363 -5365 5366 0
-5366 5365 0
-5366 -5363 0
c Var 'variant_fields_00002_00002_00008' order represents '7' with '5367'
-5365 5367 0
c Var 'variant_fields_00002_00002_00008' direct represents '7' with '5368'
5365 -5367 5368 0
-5368 5367 0
-5368 -5365 0
c Var 'variant_fields_00002_00002_00008' order represents '8' with '5369'
-5367 5369 0
c Var 'variant_fields_00002_00002_00008' direct represents '8' with '5370'
5367 -5369 5370 0
-5370 5369 0
-5370 -5367 0
c Var 'variant_fields_00002_00002_00008' direct represents '9' with '-5369'
5356 5358 5360 5362 5364 5366 5368 5370 -5369 0
c Encoding variable: variant_fields_00002_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00009' order represents '1' with '5371'
c Var 'variant_fields_00002_00002_00009' direct represents '1' with '5371'
c Var 'variant_fields_00002_00002_00009' order represents '2' with '5372'
-5371 5372 0
c Var 'variant_fields_00002_00002_00009' direct represents '2' with '5373'
5371 -5372 5373 0
-5373 5372 0
-5373 -5371 0
c Var 'variant_fields_00002_00002_00009' order represents '3' with '5374'
-5372 5374 0
c Var 'variant_fields_00002_00002_00009' direct represents '3' with '5375'
5372 -5374 5375 0
-5375 5374 0
-5375 -5372 0
c Var 'variant_fields_00002_00002_00009' order represents '4' with '5376'
-5374 5376 0
c Var 'variant_fields_00002_00002_00009' direct represents '4' with '5377'
5374 -5376 5377 0
-5377 5376 0
-5377 -5374 0
c Var 'variant_fields_00002_00002_00009' order represents '5' with '5378'
-5376 5378 0
c Var 'variant_fields_00002_00002_00009' direct represents '5' with '5379'
5376 -5378 5379 0
-5379 5378 0
-5379 -5376 0
c Var 'variant_fields_00002_00002_00009' order represents '6' with '5380'
-5378 5380 0
c Var 'variant_fields_00002_00002_00009' direct represents '6' with '5381'
5378 -5380 5381 0
-5381 5380 0
-5381 -5378 0
c Var 'variant_fields_00002_00002_00009' order represents '7' with '5382'
-5380 5382 0
c Var 'variant_fields_00002_00002_00009' direct represents '7' with '5383'
5380 -5382 5383 0
-5383 5382 0
-5383 -5380 0
c Var 'variant_fields_00002_00002_00009' order represents '8' with '5384'
-5382 5384 0
c Var 'variant_fields_00002_00002_00009' direct represents '8' with '5385'
5382 -5384 5385 0
-5385 5384 0
-5385 -5382 0
c Var 'variant_fields_00002_00002_00009' direct represents '9' with '-5384'
5371 5373 5375 5377 5379 5381 5383 5385 -5384 0
c Encoding variable: variant_fields_00002_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00001' order represents '1' with '5386'
c Var 'variant_fields_00002_00003_00001' direct represents '1' with '5386'
c Var 'variant_fields_00002_00003_00001' order represents '2' with '5387'
-5386 5387 0
c Var 'variant_fields_00002_00003_00001' direct represents '2' with '5388'
5386 -5387 5388 0
-5388 5387 0
-5388 -5386 0
c Var 'variant_fields_00002_00003_00001' order represents '3' with '5389'
-5387 5389 0
c Var 'variant_fields_00002_00003_00001' direct represents '3' with '5390'
5387 -5389 5390 0
-5390 5389 0
-5390 -5387 0
c Var 'variant_fields_00002_00003_00001' order represents '4' with '5391'
-5389 5391 0
c Var 'variant_fields_00002_00003_00001' direct represents '4' with '5392'
5389 -5391 5392 0
-5392 5391 0
-5392 -5389 0
c Var 'variant_fields_00002_00003_00001' order represents '5' with '5393'
-5391 5393 0
c Var 'variant_fields_00002_00003_00001' direct represents '5' with '5394'
5391 -5393 5394 0
-5394 5393 0
-5394 -5391 0
c Var 'variant_fields_00002_00003_00001' order represents '6' with '5395'
-5393 5395 0
c Var 'variant_fields_00002_00003_00001' direct represents '6' with '5396'
5393 -5395 5396 0
-5396 5395 0
-5396 -5393 0
c Var 'variant_fields_00002_00003_00001' order represents '7' with '5397'
-5395 5397 0
c Var 'variant_fields_00002_00003_00001' direct represents '7' with '5398'
5395 -5397 5398 0
-5398 5397 0
-5398 -5395 0
c Var 'variant_fields_00002_00003_00001' order represents '8' with '5399'
-5397 5399 0
c Var 'variant_fields_00002_00003_00001' direct represents '8' with '5400'
5397 -5399 5400 0
-5400 5399 0
-5400 -5397 0
c Var 'variant_fields_00002_00003_00001' direct represents '9' with '-5399'
5386 5388 5390 5392 5394 5396 5398 5400 -5399 0
c Encoding variable: variant_fields_00002_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00002' order represents '1' with '5401'
c Var 'variant_fields_00002_00003_00002' direct represents '1' with '5401'
c Var 'variant_fields_00002_00003_00002' order represents '2' with '5402'
-5401 5402 0
c Var 'variant_fields_00002_00003_00002' direct represents '2' with '5403'
5401 -5402 5403 0
-5403 5402 0
-5403 -5401 0
c Var 'variant_fields_00002_00003_00002' order represents '3' with '5404'
-5402 5404 0
c Var 'variant_fields_00002_00003_00002' direct represents '3' with '5405'
5402 -5404 5405 0
-5405 5404 0
-5405 -5402 0
c Var 'variant_fields_00002_00003_00002' order represents '4' with '5406'
-5404 5406 0
c Var 'variant_fields_00002_00003_00002' direct represents '4' with '5407'
5404 -5406 5407 0
-5407 5406 0
-5407 -5404 0
c Var 'variant_fields_00002_00003_00002' order represents '5' with '5408'
-5406 5408 0
c Var 'variant_fields_00002_00003_00002' direct represents '5' with '5409'
5406 -5408 5409 0
-5409 5408 0
-5409 -5406 0
c Var 'variant_fields_00002_00003_00002' order represents '6' with '5410'
-5408 5410 0
c Var 'variant_fields_00002_00003_00002' direct represents '6' with '5411'
5408 -5410 5411 0
-5411 5410 0
-5411 -5408 0
c Var 'variant_fields_00002_00003_00002' order represents '7' with '5412'
-5410 5412 0
c Var 'variant_fields_00002_00003_00002' direct represents '7' with '5413'
5410 -5412 5413 0
-5413 5412 0
-5413 -5410 0
c Var 'variant_fields_00002_00003_00002' order represents '8' with '5414'
-5412 5414 0
c Var 'variant_fields_00002_00003_00002' direct represents '8' with '5415'
5412 -5414 5415 0
-5415 5414 0
-5415 -5412 0
c Var 'variant_fields_00002_00003_00002' direct represents '9' with '-5414'
5401 5403 5405 5407 5409 5411 5413 5415 -5414 0
c Encoding variable: variant_fields_00002_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00003' order represents '1' with '5416'
c Var 'variant_fields_00002_00003_00003' direct represents '1' with '5416'
c Var 'variant_fields_00002_00003_00003' order represents '2' with '5417'
-5416 5417 0
c Var 'variant_fields_00002_00003_00003' direct represents '2' with '5418'
5416 -5417 5418 0
-5418 5417 0
-5418 -5416 0
c Var 'variant_fields_00002_00003_00003' order represents '3' with '5419'
-5417 5419 0
c Var 'variant_fields_00002_00003_00003' direct represents '3' with '5420'
5417 -5419 5420 0
-5420 5419 0
-5420 -5417 0
c Var 'variant_fields_00002_00003_00003' order represents '4' with '5421'
-5419 5421 0
c Var 'variant_fields_00002_00003_00003' direct represents '4' with '5422'
5419 -5421 5422 0
-5422 5421 0
-5422 -5419 0
c Var 'variant_fields_00002_00003_00003' order represents '5' with '5423'
-5421 5423 0
c Var 'variant_fields_00002_00003_00003' direct represents '5' with '5424'
5421 -5423 5424 0
-5424 5423 0
-5424 -5421 0
c Var 'variant_fields_00002_00003_00003' order represents '6' with '5425'
-5423 5425 0
c Var 'variant_fields_00002_00003_00003' direct represents '6' with '5426'
5423 -5425 5426 0
-5426 5425 0
-5426 -5423 0
c Var 'variant_fields_00002_00003_00003' order represents '7' with '5427'
-5425 5427 0
c Var 'variant_fields_00002_00003_00003' direct represents '7' with '5428'
5425 -5427 5428 0
-5428 5427 0
-5428 -5425 0
c Var 'variant_fields_00002_00003_00003' order represents '8' with '5429'
-5427 5429 0
c Var 'variant_fields_00002_00003_00003' direct represents '8' with '5430'
5427 -5429 5430 0
-5430 5429 0
-5430 -5427 0
c Var 'variant_fields_00002_00003_00003' direct represents '9' with '-5429'
5416 5418 5420 5422 5424 5426 5428 5430 -5429 0
c Encoding variable: variant_fields_00002_00003_00004 with domain: int(1) (representing constraint )
c Var 'variant_fields_00002_00003_00004' direct represents '1' with '5431'
5431 0
c Encoding variable: variant_fields_00002_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00005' order represents '1' with '5432'
c Var 'variant_fields_00002_00003_00005' direct represents '1' with '5432'
c Var 'variant_fields_00002_00003_00005' order represents '2' with '5433'
-5432 5433 0
c Var 'variant_fields_00002_00003_00005' direct represents '2' with '5434'
5432 -5433 5434 0
-5434 5433 0
-5434 -5432 0
c Var 'variant_fields_00002_00003_00005' order represents '3' with '5435'
-5433 5435 0
c Var 'variant_fields_00002_00003_00005' direct represents '3' with '5436'
5433 -5435 5436 0
-5436 5435 0
-5436 -5433 0
c Var 'variant_fields_00002_00003_00005' order represents '4' with '5437'
-5435 5437 0
c Var 'variant_fields_00002_00003_00005' direct represents '4' with '5438'
5435 -5437 5438 0
-5438 5437 0
-5438 -5435 0
c Var 'variant_fields_00002_00003_00005' order represents '5' with '5439'
-5437 5439 0
c Var 'variant_fields_00002_00003_00005' direct represents '5' with '5440'
5437 -5439 5440 0
-5440 5439 0
-5440 -5437 0
c Var 'variant_fields_00002_00003_00005' order represents '6' with '5441'
-5439 5441 0
c Var 'variant_fields_00002_00003_00005' direct represents '6' with '5442'
5439 -5441 5442 0
-5442 5441 0
-5442 -5439 0
c Var 'variant_fields_00002_00003_00005' order represents '7' with '5443'
-5441 5443 0
c Var 'variant_fields_00002_00003_00005' direct represents '7' with '5444'
5441 -5443 5444 0
-5444 5443 0
-5444 -5441 0
c Var 'variant_fields_00002_00003_00005' order represents '8' with '5445'
-5443 5445 0
c Var 'variant_fields_00002_00003_00005' direct represents '8' with '5446'
5443 -5445 5446 0
-5446 5445 0
-5446 -5443 0
c Var 'variant_fields_00002_00003_00005' direct represents '9' with '-5445'
5432 5434 5436 5438 5440 5442 5444 5446 -5445 0
c Encoding variable: variant_fields_00002_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00006' order represents '1' with '5447'
c Var 'variant_fields_00002_00003_00006' direct represents '1' with '5447'
c Var 'variant_fields_00002_00003_00006' order represents '2' with '5448'
-5447 5448 0
c Var 'variant_fields_00002_00003_00006' direct represents '2' with '5449'
5447 -5448 5449 0
-5449 5448 0
-5449 -5447 0
c Var 'variant_fields_00002_00003_00006' order represents '3' with '5450'
-5448 5450 0
c Var 'variant_fields_00002_00003_00006' direct represents '3' with '5451'
5448 -5450 5451 0
-5451 5450 0
-5451 -5448 0
c Var 'variant_fields_00002_00003_00006' order represents '4' with '5452'
-5450 5452 0
c Var 'variant_fields_00002_00003_00006' direct represents '4' with '5453'
5450 -5452 5453 0
-5453 5452 0
-5453 -5450 0
c Var 'variant_fields_00002_00003_00006' order represents '5' with '5454'
-5452 5454 0
c Var 'variant_fields_00002_00003_00006' direct represents '5' with '5455'
5452 -5454 5455 0
-5455 5454 0
-5455 -5452 0
c Var 'variant_fields_00002_00003_00006' order represents '6' with '5456'
-5454 5456 0
c Var 'variant_fields_00002_00003_00006' direct represents '6' with '5457'
5454 -5456 5457 0
-5457 5456 0
-5457 -5454 0
c Var 'variant_fields_00002_00003_00006' order represents '7' with '5458'
-5456 5458 0
c Var 'variant_fields_00002_00003_00006' direct represents '7' with '5459'
5456 -5458 5459 0
-5459 5458 0
-5459 -5456 0
c Var 'variant_fields_00002_00003_00006' order represents '8' with '5460'
-5458 5460 0
c Var 'variant_fields_00002_00003_00006' direct represents '8' with '5461'
5458 -5460 5461 0
-5461 5460 0
-5461 -5458 0
c Var 'variant_fields_00002_00003_00006' direct represents '9' with '-5460'
5447 5449 5451 5453 5455 5457 5459 5461 -5460 0
c Encoding variable: variant_fields_00002_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00007' order represents '1' with '5462'
c Var 'variant_fields_00002_00003_00007' direct represents '1' with '5462'
c Var 'variant_fields_00002_00003_00007' order represents '2' with '5463'
-5462 5463 0
c Var 'variant_fields_00002_00003_00007' direct represents '2' with '5464'
5462 -5463 5464 0
-5464 5463 0
-5464 -5462 0
c Var 'variant_fields_00002_00003_00007' order represents '3' with '5465'
-5463 5465 0
c Var 'variant_fields_00002_00003_00007' direct represents '3' with '5466'
5463 -5465 5466 0
-5466 5465 0
-5466 -5463 0
c Var 'variant_fields_00002_00003_00007' order represents '4' with '5467'
-5465 5467 0
c Var 'variant_fields_00002_00003_00007' direct represents '4' with '5468'
5465 -5467 5468 0
-5468 5467 0
-5468 -5465 0
c Var 'variant_fields_00002_00003_00007' order represents '5' with '5469'
-5467 5469 0
c Var 'variant_fields_00002_00003_00007' direct represents '5' with '5470'
5467 -5469 5470 0
-5470 5469 0
-5470 -5467 0
c Var 'variant_fields_00002_00003_00007' order represents '6' with '5471'
-5469 5471 0
c Var 'variant_fields_00002_00003_00007' direct represents '6' with '5472'
5469 -5471 5472 0
-5472 5471 0
-5472 -5469 0
c Var 'variant_fields_00002_00003_00007' order represents '7' with '5473'
-5471 5473 0
c Var 'variant_fields_00002_00003_00007' direct represents '7' with '5474'
5471 -5473 5474 0
-5474 5473 0
-5474 -5471 0
c Var 'variant_fields_00002_00003_00007' order represents '8' with '5475'
-5473 5475 0
c Var 'variant_fields_00002_00003_00007' direct represents '8' with '5476'
5473 -5475 5476 0
-5476 5475 0
-5476 -5473 0
c Var 'variant_fields_00002_00003_00007' direct represents '9' with '-5475'
5462 5464 5466 5468 5470 5472 5474 5476 -5475 0
c Encoding variable: variant_fields_00002_00003_00008 with domain: int(8) (representing constraint )
c Var 'variant_fields_00002_00003_00008' direct represents '8' with '5477'
5477 0
c Encoding variable: variant_fields_00002_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00009' order represents '1' with '5478'
c Var 'variant_fields_00002_00003_00009' direct represents '1' with '5478'
c Var 'variant_fields_00002_00003_00009' order represents '2' with '5479'
-5478 5479 0
c Var 'variant_fields_00002_00003_00009' direct represents '2' with '5480'
5478 -5479 5480 0
-5480 5479 0
-5480 -5478 0
c Var 'variant_fields_00002_00003_00009' order represents '3' with '5481'
-5479 5481 0
c Var 'variant_fields_00002_00003_00009' direct represents '3' with '5482'
5479 -5481 5482 0
-5482 5481 0
-5482 -5479 0
c Var 'variant_fields_00002_00003_00009' order represents '4' with '5483'
-5481 5483 0
c Var 'variant_fields_00002_00003_00009' direct represents '4' with '5484'
5481 -5483 5484 0
-5484 5483 0
-5484 -5481 0
c Var 'variant_fields_00002_00003_00009' order represents '5' with '5485'
-5483 5485 0
c Var 'variant_fields_00002_00003_00009' direct represents '5' with '5486'
5483 -5485 5486 0
-5486 5485 0
-5486 -5483 0
c Var 'variant_fields_00002_00003_00009' order represents '6' with '5487'
-5485 5487 0
c Var 'variant_fields_00002_00003_00009' direct represents '6' with '5488'
5485 -5487 5488 0
-5488 5487 0
-5488 -5485 0
c Var 'variant_fields_00002_00003_00009' order represents '7' with '5489'
-5487 5489 0
c Var 'variant_fields_00002_00003_00009' direct represents '7' with '5490'
5487 -5489 5490 0
-5490 5489 0
-5490 -5487 0
c Var 'variant_fields_00002_00003_00009' order represents '8' with '5491'
-5489 5491 0
c Var 'variant_fields_00002_00003_00009' direct represents '8' with '5492'
5489 -5491 5492 0
-5492 5491 0
-5492 -5489 0
c Var 'variant_fields_00002_00003_00009' direct represents '9' with '-5491'
5478 5480 5482 5484 5486 5488 5490 5492 -5491 0
c Encoding variable: variant_fields_00002_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00001' order represents '1' with '5493'
c Var 'variant_fields_00002_00004_00001' direct represents '1' with '5493'
c Var 'variant_fields_00002_00004_00001' order represents '2' with '5494'
-5493 5494 0
c Var 'variant_fields_00002_00004_00001' direct represents '2' with '5495'
5493 -5494 5495 0
-5495 5494 0
-5495 -5493 0
c Var 'variant_fields_00002_00004_00001' order represents '3' with '5496'
-5494 5496 0
c Var 'variant_fields_00002_00004_00001' direct represents '3' with '5497'
5494 -5496 5497 0
-5497 5496 0
-5497 -5494 0
c Var 'variant_fields_00002_00004_00001' order represents '4' with '5498'
-5496 5498 0
c Var 'variant_fields_00002_00004_00001' direct represents '4' with '5499'
5496 -5498 5499 0
-5499 5498 0
-5499 -5496 0
c Var 'variant_fields_00002_00004_00001' order represents '5' with '5500'
-5498 5500 0
c Var 'variant_fields_00002_00004_00001' direct represents '5' with '5501'
5498 -5500 5501 0
-5501 5500 0
-5501 -5498 0
c Var 'variant_fields_00002_00004_00001' order represents '6' with '5502'
-5500 5502 0
c Var 'variant_fields_00002_00004_00001' direct represents '6' with '5503'
5500 -5502 5503 0
-5503 5502 0
-5503 -5500 0
c Var 'variant_fields_00002_00004_00001' order represents '7' with '5504'
-5502 5504 0
c Var 'variant_fields_00002_00004_00001' direct represents '7' with '5505'
5502 -5504 5505 0
-5505 5504 0
-5505 -5502 0
c Var 'variant_fields_00002_00004_00001' order represents '8' with '5506'
-5504 5506 0
c Var 'variant_fields_00002_00004_00001' direct represents '8' with '5507'
5504 -5506 5507 0
-5507 5506 0
-5507 -5504 0
c Var 'variant_fields_00002_00004_00001' direct represents '9' with '-5506'
5493 5495 5497 5499 5501 5503 5505 5507 -5506 0
c Encoding variable: variant_fields_00002_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00002' order represents '1' with '5508'
c Var 'variant_fields_00002_00004_00002' direct represents '1' with '5508'
c Var 'variant_fields_00002_00004_00002' order represents '2' with '5509'
-5508 5509 0
c Var 'variant_fields_00002_00004_00002' direct represents '2' with '5510'
5508 -5509 5510 0
-5510 5509 0
-5510 -5508 0
c Var 'variant_fields_00002_00004_00002' order represents '3' with '5511'
-5509 5511 0
c Var 'variant_fields_00002_00004_00002' direct represents '3' with '5512'
5509 -5511 5512 0
-5512 5511 0
-5512 -5509 0
c Var 'variant_fields_00002_00004_00002' order represents '4' with '5513'
-5511 5513 0
c Var 'variant_fields_00002_00004_00002' direct represents '4' with '5514'
5511 -5513 5514 0
-5514 5513 0
-5514 -5511 0
c Var 'variant_fields_00002_00004_00002' order represents '5' with '5515'
-5513 5515 0
c Var 'variant_fields_00002_00004_00002' direct represents '5' with '5516'
5513 -5515 5516 0
-5516 5515 0
-5516 -5513 0
c Var 'variant_fields_00002_00004_00002' order represents '6' with '5517'
-5515 5517 0
c Var 'variant_fields_00002_00004_00002' direct represents '6' with '5518'
5515 -5517 5518 0
-5518 5517 0
-5518 -5515 0
c Var 'variant_fields_00002_00004_00002' order represents '7' with '5519'
-5517 5519 0
c Var 'variant_fields_00002_00004_00002' direct represents '7' with '5520'
5517 -5519 5520 0
-5520 5519 0
-5520 -5517 0
c Var 'variant_fields_00002_00004_00002' order represents '8' with '5521'
-5519 5521 0
c Var 'variant_fields_00002_00004_00002' direct represents '8' with '5522'
5519 -5521 5522 0
-5522 5521 0
-5522 -5519 0
c Var 'variant_fields_00002_00004_00002' direct represents '9' with '-5521'
5508 5510 5512 5514 5516 5518 5520 5522 -5521 0
c Encoding variable: variant_fields_00002_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00003' order represents '1' with '5523'
c Var 'variant_fields_00002_00004_00003' direct represents '1' with '5523'
c Var 'variant_fields_00002_00004_00003' order represents '2' with '5524'
-5523 5524 0
c Var 'variant_fields_00002_00004_00003' direct represents '2' with '5525'
5523 -5524 5525 0
-5525 5524 0
-5525 -5523 0
c Var 'variant_fields_00002_00004_00003' order represents '3' with '5526'
-5524 5526 0
c Var 'variant_fields_00002_00004_00003' direct represents '3' with '5527'
5524 -5526 5527 0
-5527 5526 0
-5527 -5524 0
c Var 'variant_fields_00002_00004_00003' order represents '4' with '5528'
-5526 5528 0
c Var 'variant_fields_00002_00004_00003' direct represents '4' with '5529'
5526 -5528 5529 0
-5529 5528 0
-5529 -5526 0
c Var 'variant_fields_00002_00004_00003' order represents '5' with '5530'
-5528 5530 0
c Var 'variant_fields_00002_00004_00003' direct represents '5' with '5531'
5528 -5530 5531 0
-5531 5530 0
-5531 -5528 0
c Var 'variant_fields_00002_00004_00003' order represents '6' with '5532'
-5530 5532 0
c Var 'variant_fields_00002_00004_00003' direct represents '6' with '5533'
5530 -5532 5533 0
-5533 5532 0
-5533 -5530 0
c Var 'variant_fields_00002_00004_00003' order represents '7' with '5534'
-5532 5534 0
c Var 'variant_fields_00002_00004_00003' direct represents '7' with '5535'
5532 -5534 5535 0
-5535 5534 0
-5535 -5532 0
c Var 'variant_fields_00002_00004_00003' order represents '8' with '5536'
-5534 5536 0
c Var 'variant_fields_00002_00004_00003' direct represents '8' with '5537'
5534 -5536 5537 0
-5537 5536 0
-5537 -5534 0
c Var 'variant_fields_00002_00004_00003' direct represents '9' with '-5536'
5523 5525 5527 5529 5531 5533 5535 5537 -5536 0
c Encoding variable: variant_fields_00002_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00004' order represents '1' with '5538'
c Var 'variant_fields_00002_00004_00004' direct represents '1' with '5538'
c Var 'variant_fields_00002_00004_00004' order represents '2' with '5539'
-5538 5539 0
c Var 'variant_fields_00002_00004_00004' direct represents '2' with '5540'
5538 -5539 5540 0
-5540 5539 0
-5540 -5538 0
c Var 'variant_fields_00002_00004_00004' order represents '3' with '5541'
-5539 5541 0
c Var 'variant_fields_00002_00004_00004' direct represents '3' with '5542'
5539 -5541 5542 0
-5542 5541 0
-5542 -5539 0
c Var 'variant_fields_00002_00004_00004' order represents '4' with '5543'
-5541 5543 0
c Var 'variant_fields_00002_00004_00004' direct represents '4' with '5544'
5541 -5543 5544 0
-5544 5543 0
-5544 -5541 0
c Var 'variant_fields_00002_00004_00004' order represents '5' with '5545'
-5543 5545 0
c Var 'variant_fields_00002_00004_00004' direct represents '5' with '5546'
5543 -5545 5546 0
-5546 5545 0
-5546 -5543 0
c Var 'variant_fields_00002_00004_00004' order represents '6' with '5547'
-5545 5547 0
c Var 'variant_fields_00002_00004_00004' direct represents '6' with '5548'
5545 -5547 5548 0
-5548 5547 0
-5548 -5545 0
c Var 'variant_fields_00002_00004_00004' order represents '7' with '5549'
-5547 5549 0
c Var 'variant_fields_00002_00004_00004' direct represents '7' with '5550'
5547 -5549 5550 0
-5550 5549 0
-5550 -5547 0
c Var 'variant_fields_00002_00004_00004' order represents '8' with '5551'
-5549 5551 0
c Var 'variant_fields_00002_00004_00004' direct represents '8' with '5552'
5549 -5551 5552 0
-5552 5551 0
-5552 -5549 0
c Var 'variant_fields_00002_00004_00004' direct represents '9' with '-5551'
5538 5540 5542 5544 5546 5548 5550 5552 -5551 0
c Encoding variable: variant_fields_00002_00004_00005 with domain: int(1) (representing constraint )
c Var 'variant_fields_00002_00004_00005' direct represents '1' with '5553'
5553 0
c Encoding variable: variant_fields_00002_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00006' order represents '1' with '5554'
c Var 'variant_fields_00002_00004_00006' direct represents '1' with '5554'
c Var 'variant_fields_00002_00004_00006' order represents '2' with '5555'
-5554 5555 0
c Var 'variant_fields_00002_00004_00006' direct represents '2' with '5556'
5554 -5555 5556 0
-5556 5555 0
-5556 -5554 0
c Var 'variant_fields_00002_00004_00006' order represents '3' with '5557'
-5555 5557 0
c Var 'variant_fields_00002_00004_00006' direct represents '3' with '5558'
5555 -5557 5558 0
-5558 5557 0
-5558 -5555 0
c Var 'variant_fields_00002_00004_00006' order represents '4' with '5559'
-5557 5559 0
c Var 'variant_fields_00002_00004_00006' direct represents '4' with '5560'
5557 -5559 5560 0
-5560 5559 0
-5560 -5557 0
c Var 'variant_fields_00002_00004_00006' order represents '5' with '5561'
-5559 5561 0
c Var 'variant_fields_00002_00004_00006' direct represents '5' with '5562'
5559 -5561 5562 0
-5562 5561 0
-5562 -5559 0
c Var 'variant_fields_00002_00004_00006' order represents '6' with '5563'
-5561 5563 0
c Var 'variant_fields_00002_00004_00006' direct represents '6' with '5564'
5561 -5563 5564 0
-5564 5563 0
-5564 -5561 0
c Var 'variant_fields_00002_00004_00006' order represents '7' with '5565'
-5563 5565 0
c Var 'variant_fields_00002_00004_00006' direct represents '7' with '5566'
5563 -5565 5566 0
-5566 5565 0
-5566 -5563 0
c Var 'variant_fields_00002_00004_00006' order represents '8' with '5567'
-5565 5567 0
c Var 'variant_fields_00002_00004_00006' direct represents '8' with '5568'
5565 -5567 5568 0
-5568 5567 0
-5568 -5565 0
c Var 'variant_fields_00002_00004_00006' direct represents '9' with '-5567'
5554 5556 5558 5560 5562 5564 5566 5568 -5567 0
c Encoding variable: variant_fields_00002_00004_00007 with domain: int(3) (representing constraint )
c Var 'variant_fields_00002_00004_00007' direct represents '3' with '5569'
5569 0
c Encoding variable: variant_fields_00002_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00008' order represents '1' with '5570'
c Var 'variant_fields_00002_00004_00008' direct represents '1' with '5570'
c Var 'variant_fields_00002_00004_00008' order represents '2' with '5571'
-5570 5571 0
c Var 'variant_fields_00002_00004_00008' direct represents '2' with '5572'
5570 -5571 5572 0
-5572 5571 0
-5572 -5570 0
c Var 'variant_fields_00002_00004_00008' order represents '3' with '5573'
-5571 5573 0
c Var 'variant_fields_00002_00004_00008' direct represents '3' with '5574'
5571 -5573 5574 0
-5574 5573 0
-5574 -5571 0
c Var 'variant_fields_00002_00004_00008' order represents '4' with '5575'
-5573 5575 0
c Var 'variant_fields_00002_00004_00008' direct represents '4' with '5576'
5573 -5575 5576 0
-5576 5575 0
-5576 -5573 0
c Var 'variant_fields_00002_00004_00008' order represents '5' with '5577'
-5575 5577 0
c Var 'variant_fields_00002_00004_00008' direct represents '5' with '5578'
5575 -5577 5578 0
-5578 5577 0
-5578 -5575 0
c Var 'variant_fields_00002_00004_00008' order represents '6' with '5579'
-5577 5579 0
c Var 'variant_fields_00002_00004_00008' direct represents '6' with '5580'
5577 -5579 5580 0
-5580 5579 0
-5580 -5577 0
c Var 'variant_fields_00002_00004_00008' order represents '7' with '5581'
-5579 5581 0
c Var 'variant_fields_00002_00004_00008' direct represents '7' with '5582'
5579 -5581 5582 0
-5582 5581 0
-5582 -5579 0
c Var 'variant_fields_00002_00004_00008' order represents '8' with '5583'
-5581 5583 0
c Var 'variant_fields_00002_00004_00008' direct represents '8' with '5584'
5581 -5583 5584 0
-5584 5583 0
-5584 -5581 0
c Var 'variant_fields_00002_00004_00008' direct represents '9' with '-5583'
5570 5572 5574 5576 5578 5580 5582 5584 -5583 0
c Encoding variable: variant_fields_00002_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00009' order represents '1' with '5585'
c Var 'variant_fields_00002_00004_00009' direct represents '1' with '5585'
c Var 'variant_fields_00002_00004_00009' order represents '2' with '5586'
-5585 5586 0
c Var 'variant_fields_00002_00004_00009' direct represents '2' with '5587'
5585 -5586 5587 0
-5587 5586 0
-5587 -5585 0
c Var 'variant_fields_00002_00004_00009' order represents '3' with '5588'
-5586 5588 0
c Var 'variant_fields_00002_00004_00009' direct represents '3' with '5589'
5586 -5588 5589 0
-5589 5588 0
-5589 -5586 0
c Var 'variant_fields_00002_00004_00009' order represents '4' with '5590'
-5588 5590 0
c Var 'variant_fields_00002_00004_00009' direct represents '4' with '5591'
5588 -5590 5591 0
-5591 5590 0
-5591 -5588 0
c Var 'variant_fields_00002_00004_00009' order represents '5' with '5592'
-5590 5592 0
c Var 'variant_fields_00002_00004_00009' direct represents '5' with '5593'
5590 -5592 5593 0
-5593 5592 0
-5593 -5590 0
c Var 'variant_fields_00002_00004_00009' order represents '6' with '5594'
-5592 5594 0
c Var 'variant_fields_00002_00004_00009' direct represents '6' with '5595'
5592 -5594 5595 0
-5595 5594 0
-5595 -5592 0
c Var 'variant_fields_00002_00004_00009' order represents '7' with '5596'
-5594 5596 0
c Var 'variant_fields_00002_00004_00009' direct represents '7' with '5597'
5594 -5596 5597 0
-5597 5596 0
-5597 -5594 0
c Var 'variant_fields_00002_00004_00009' order represents '8' with '5598'
-5596 5598 0
c Var 'variant_fields_00002_00004_00009' direct represents '8' with '5599'
5596 -5598 5599 0
-5599 5598 0
-5599 -5596 0
c Var 'variant_fields_00002_00004_00009' direct represents '9' with '-5598'
5585 5587 5589 5591 5593 5595 5597 5599 -5598 0
c Encoding variable: variant_fields_00002_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00001' order represents '1' with '5600'
c Var 'variant_fields_00002_00005_00001' direct represents '1' with '5600'
c Var 'variant_fields_00002_00005_00001' order represents '2' with '5601'
-5600 5601 0
c Var 'variant_fields_00002_00005_00001' direct represents '2' with '5602'
5600 -5601 5602 0
-5602 5601 0
-5602 -5600 0
c Var 'variant_fields_00002_00005_00001' order represents '3' with '5603'
-5601 5603 0
c Var 'variant_fields_00002_00005_00001' direct represents '3' with '5604'
5601 -5603 5604 0
-5604 5603 0
-5604 -5601 0
c Var 'variant_fields_00002_00005_00001' order represents '4' with '5605'
-5603 5605 0
c Var 'variant_fields_00002_00005_00001' direct represents '4' with '5606'
5603 -5605 5606 0
-5606 5605 0
-5606 -5603 0
c Var 'variant_fields_00002_00005_00001' order represents '5' with '5607'
-5605 5607 0
c Var 'variant_fields_00002_00005_00001' direct represents '5' with '5608'
5605 -5607 5608 0
-5608 5607 0
-5608 -5605 0
c Var 'variant_fields_00002_00005_00001' order represents '6' with '5609'
-5607 5609 0
c Var 'variant_fields_00002_00005_00001' direct represents '6' with '5610'
5607 -5609 5610 0
-5610 5609 0
-5610 -5607 0
c Var 'variant_fields_00002_00005_00001' order represents '7' with '5611'
-5609 5611 0
c Var 'variant_fields_00002_00005_00001' direct represents '7' with '5612'
5609 -5611 5612 0
-5612 5611 0
-5612 -5609 0
c Var 'variant_fields_00002_00005_00001' order represents '8' with '5613'
-5611 5613 0
c Var 'variant_fields_00002_00005_00001' direct represents '8' with '5614'
5611 -5613 5614 0
-5614 5613 0
-5614 -5611 0
c Var 'variant_fields_00002_00005_00001' direct represents '9' with '-5613'
5600 5602 5604 5606 5608 5610 5612 5614 -5613 0
c Encoding variable: variant_fields_00002_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00002' order represents '1' with '5615'
c Var 'variant_fields_00002_00005_00002' direct represents '1' with '5615'
c Var 'variant_fields_00002_00005_00002' order represents '2' with '5616'
-5615 5616 0
c Var 'variant_fields_00002_00005_00002' direct represents '2' with '5617'
5615 -5616 5617 0
-5617 5616 0
-5617 -5615 0
c Var 'variant_fields_00002_00005_00002' order represents '3' with '5618'
-5616 5618 0
c Var 'variant_fields_00002_00005_00002' direct represents '3' with '5619'
5616 -5618 5619 0
-5619 5618 0
-5619 -5616 0
c Var 'variant_fields_00002_00005_00002' order represents '4' with '5620'
-5618 5620 0
c Var 'variant_fields_00002_00005_00002' direct represents '4' with '5621'
5618 -5620 5621 0
-5621 5620 0
-5621 -5618 0
c Var 'variant_fields_00002_00005_00002' order represents '5' with '5622'
-5620 5622 0
c Var 'variant_fields_00002_00005_00002' direct represents '5' with '5623'
5620 -5622 5623 0
-5623 5622 0
-5623 -5620 0
c Var 'variant_fields_00002_00005_00002' order represents '6' with '5624'
-5622 5624 0
c Var 'variant_fields_00002_00005_00002' direct represents '6' with '5625'
5622 -5624 5625 0
-5625 5624 0
-5625 -5622 0
c Var 'variant_fields_00002_00005_00002' order represents '7' with '5626'
-5624 5626 0
c Var 'variant_fields_00002_00005_00002' direct represents '7' with '5627'
5624 -5626 5627 0
-5627 5626 0
-5627 -5624 0
c Var 'variant_fields_00002_00005_00002' order represents '8' with '5628'
-5626 5628 0
c Var 'variant_fields_00002_00005_00002' direct represents '8' with '5629'
5626 -5628 5629 0
-5629 5628 0
-5629 -5626 0
c Var 'variant_fields_00002_00005_00002' direct represents '9' with '-5628'
5615 5617 5619 5621 5623 5625 5627 5629 -5628 0
c Encoding variable: variant_fields_00002_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00003' order represents '1' with '5630'
c Var 'variant_fields_00002_00005_00003' direct represents '1' with '5630'
c Var 'variant_fields_00002_00005_00003' order represents '2' with '5631'
-5630 5631 0
c Var 'variant_fields_00002_00005_00003' direct represents '2' with '5632'
5630 -5631 5632 0
-5632 5631 0
-5632 -5630 0
c Var 'variant_fields_00002_00005_00003' order represents '3' with '5633'
-5631 5633 0
c Var 'variant_fields_00002_00005_00003' direct represents '3' with '5634'
5631 -5633 5634 0
-5634 5633 0
-5634 -5631 0
c Var 'variant_fields_00002_00005_00003' order represents '4' with '5635'
-5633 5635 0
c Var 'variant_fields_00002_00005_00003' direct represents '4' with '5636'
5633 -5635 5636 0
-5636 5635 0
-5636 -5633 0
c Var 'variant_fields_00002_00005_00003' order represents '5' with '5637'
-5635 5637 0
c Var 'variant_fields_00002_00005_00003' direct represents '5' with '5638'
5635 -5637 5638 0
-5638 5637 0
-5638 -5635 0
c Var 'variant_fields_00002_00005_00003' order represents '6' with '5639'
-5637 5639 0
c Var 'variant_fields_00002_00005_00003' direct represents '6' with '5640'
5637 -5639 5640 0
-5640 5639 0
-5640 -5637 0
c Var 'variant_fields_00002_00005_00003' order represents '7' with '5641'
-5639 5641 0
c Var 'variant_fields_00002_00005_00003' direct represents '7' with '5642'
5639 -5641 5642 0
-5642 5641 0
-5642 -5639 0
c Var 'variant_fields_00002_00005_00003' order represents '8' with '5643'
-5641 5643 0
c Var 'variant_fields_00002_00005_00003' direct represents '8' with '5644'
5641 -5643 5644 0
-5644 5643 0
-5644 -5641 0
c Var 'variant_fields_00002_00005_00003' direct represents '9' with '-5643'
5630 5632 5634 5636 5638 5640 5642 5644 -5643 0
c Encoding variable: variant_fields_00002_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00004' order represents '1' with '5645'
c Var 'variant_fields_00002_00005_00004' direct represents '1' with '5645'
c Var 'variant_fields_00002_00005_00004' order represents '2' with '5646'
-5645 5646 0
c Var 'variant_fields_00002_00005_00004' direct represents '2' with '5647'
5645 -5646 5647 0
-5647 5646 0
-5647 -5645 0
c Var 'variant_fields_00002_00005_00004' order represents '3' with '5648'
-5646 5648 0
c Var 'variant_fields_00002_00005_00004' direct represents '3' with '5649'
5646 -5648 5649 0
-5649 5648 0
-5649 -5646 0
c Var 'variant_fields_00002_00005_00004' order represents '4' with '5650'
-5648 5650 0
c Var 'variant_fields_00002_00005_00004' direct represents '4' with '5651'
5648 -5650 5651 0
-5651 5650 0
-5651 -5648 0
c Var 'variant_fields_00002_00005_00004' order represents '5' with '5652'
-5650 5652 0
c Var 'variant_fields_00002_00005_00004' direct represents '5' with '5653'
5650 -5652 5653 0
-5653 5652 0
-5653 -5650 0
c Var 'variant_fields_00002_00005_00004' order represents '6' with '5654'
-5652 5654 0
c Var 'variant_fields_00002_00005_00004' direct represents '6' with '5655'
5652 -5654 5655 0
-5655 5654 0
-5655 -5652 0
c Var 'variant_fields_00002_00005_00004' order represents '7' with '5656'
-5654 5656 0
c Var 'variant_fields_00002_00005_00004' direct represents '7' with '5657'
5654 -5656 5657 0
-5657 5656 0
-5657 -5654 0
c Var 'variant_fields_00002_00005_00004' order represents '8' with '5658'
-5656 5658 0
c Var 'variant_fields_00002_00005_00004' direct represents '8' with '5659'
5656 -5658 5659 0
-5659 5658 0
-5659 -5656 0
c Var 'variant_fields_00002_00005_00004' direct represents '9' with '-5658'
5645 5647 5649 5651 5653 5655 5657 5659 -5658 0
c Encoding variable: variant_fields_00002_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00005' order represents '1' with '5660'
c Var 'variant_fields_00002_00005_00005' direct represents '1' with '5660'
c Var 'variant_fields_00002_00005_00005' order represents '2' with '5661'
-5660 5661 0
c Var 'variant_fields_00002_00005_00005' direct represents '2' with '5662'
5660 -5661 5662 0
-5662 5661 0
-5662 -5660 0
c Var 'variant_fields_00002_00005_00005' order represents '3' with '5663'
-5661 5663 0
c Var 'variant_fields_00002_00005_00005' direct represents '3' with '5664'
5661 -5663 5664 0
-5664 5663 0
-5664 -5661 0
c Var 'variant_fields_00002_00005_00005' order represents '4' with '5665'
-5663 5665 0
c Var 'variant_fields_00002_00005_00005' direct represents '4' with '5666'
5663 -5665 5666 0
-5666 5665 0
-5666 -5663 0
c Var 'variant_fields_00002_00005_00005' order represents '5' with '5667'
-5665 5667 0
c Var 'variant_fields_00002_00005_00005' direct represents '5' with '5668'
5665 -5667 5668 0
-5668 5667 0
-5668 -5665 0
c Var 'variant_fields_00002_00005_00005' order represents '6' with '5669'
-5667 5669 0
c Var 'variant_fields_00002_00005_00005' direct represents '6' with '5670'
5667 -5669 5670 0
-5670 5669 0
-5670 -5667 0
c Var 'variant_fields_00002_00005_00005' order represents '7' with '5671'
-5669 5671 0
c Var 'variant_fields_00002_00005_00005' direct represents '7' with '5672'
5669 -5671 5672 0
-5672 5671 0
-5672 -5669 0
c Var 'variant_fields_00002_00005_00005' order represents '8' with '5673'
-5671 5673 0
c Var 'variant_fields_00002_00005_00005' direct represents '8' with '5674'
5671 -5673 5674 0
-5674 5673 0
-5674 -5671 0
c Var 'variant_fields_00002_00005_00005' direct represents '9' with '-5673'
5660 5662 5664 5666 5668 5670 5672 5674 -5673 0
c Encoding variable: variant_fields_00002_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00006' order represents '1' with '5675'
c Var 'variant_fields_00002_00005_00006' direct represents '1' with '5675'
c Var 'variant_fields_00002_00005_00006' order represents '2' with '5676'
-5675 5676 0
c Var 'variant_fields_00002_00005_00006' direct represents '2' with '5677'
5675 -5676 5677 0
-5677 5676 0
-5677 -5675 0
c Var 'variant_fields_00002_00005_00006' order represents '3' with '5678'
-5676 5678 0
c Var 'variant_fields_00002_00005_00006' direct represents '3' with '5679'
5676 -5678 5679 0
-5679 5678 0
-5679 -5676 0
c Var 'variant_fields_00002_00005_00006' order represents '4' with '5680'
-5678 5680 0
c Var 'variant_fields_00002_00005_00006' direct represents '4' with '5681'
5678 -5680 5681 0
-5681 5680 0
-5681 -5678 0
c Var 'variant_fields_00002_00005_00006' order represents '5' with '5682'
-5680 5682 0
c Var 'variant_fields_00002_00005_00006' direct represents '5' with '5683'
5680 -5682 5683 0
-5683 5682 0
-5683 -5680 0
c Var 'variant_fields_00002_00005_00006' order represents '6' with '5684'
-5682 5684 0
c Var 'variant_fields_00002_00005_00006' direct represents '6' with '5685'
5682 -5684 5685 0
-5685 5684 0
-5685 -5682 0
c Var 'variant_fields_00002_00005_00006' order represents '7' with '5686'
-5684 5686 0
c Var 'variant_fields_00002_00005_00006' direct represents '7' with '5687'
5684 -5686 5687 0
-5687 5686 0
-5687 -5684 0
c Var 'variant_fields_00002_00005_00006' order represents '8' with '5688'
-5686 5688 0
c Var 'variant_fields_00002_00005_00006' direct represents '8' with '5689'
5686 -5688 5689 0
-5689 5688 0
-5689 -5686 0
c Var 'variant_fields_00002_00005_00006' direct represents '9' with '-5688'
5675 5677 5679 5681 5683 5685 5687 5689 -5688 0
c Encoding variable: variant_fields_00002_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00007' order represents '1' with '5690'
c Var 'variant_fields_00002_00005_00007' direct represents '1' with '5690'
c Var 'variant_fields_00002_00005_00007' order represents '2' with '5691'
-5690 5691 0
c Var 'variant_fields_00002_00005_00007' direct represents '2' with '5692'
5690 -5691 5692 0
-5692 5691 0
-5692 -5690 0
c Var 'variant_fields_00002_00005_00007' order represents '3' with '5693'
-5691 5693 0
c Var 'variant_fields_00002_00005_00007' direct represents '3' with '5694'
5691 -5693 5694 0
-5694 5693 0
-5694 -5691 0
c Var 'variant_fields_00002_00005_00007' order represents '4' with '5695'
-5693 5695 0
c Var 'variant_fields_00002_00005_00007' direct represents '4' with '5696'
5693 -5695 5696 0
-5696 5695 0
-5696 -5693 0
c Var 'variant_fields_00002_00005_00007' order represents '5' with '5697'
-5695 5697 0
c Var 'variant_fields_00002_00005_00007' direct represents '5' with '5698'
5695 -5697 5698 0
-5698 5697 0
-5698 -5695 0
c Var 'variant_fields_00002_00005_00007' order represents '6' with '5699'
-5697 5699 0
c Var 'variant_fields_00002_00005_00007' direct represents '6' with '5700'
5697 -5699 5700 0
-5700 5699 0
-5700 -5697 0
c Var 'variant_fields_00002_00005_00007' order represents '7' with '5701'
-5699 5701 0
c Var 'variant_fields_00002_00005_00007' direct represents '7' with '5702'
5699 -5701 5702 0
-5702 5701 0
-5702 -5699 0
c Var 'variant_fields_00002_00005_00007' order represents '8' with '5703'
-5701 5703 0
c Var 'variant_fields_00002_00005_00007' direct represents '8' with '5704'
5701 -5703 5704 0
-5704 5703 0
-5704 -5701 0
c Var 'variant_fields_00002_00005_00007' direct represents '9' with '-5703'
5690 5692 5694 5696 5698 5700 5702 5704 -5703 0
c Encoding variable: variant_fields_00002_00005_00008 with domain: int(7) (representing constraint )
c Var 'variant_fields_00002_00005_00008' direct represents '7' with '5705'
5705 0
c Encoding variable: variant_fields_00002_00005_00009 with domain: int(1) (representing constraint )
c Var 'variant_fields_00002_00005_00009' direct represents '1' with '5706'
5706 0
c Encoding variable: variant_fields_00002_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00001' order represents '1' with '5707'
c Var 'variant_fields_00002_00006_00001' direct represents '1' with '5707'
c Var 'variant_fields_00002_00006_00001' order represents '2' with '5708'
-5707 5708 0
c Var 'variant_fields_00002_00006_00001' direct represents '2' with '5709'
5707 -5708 5709 0
-5709 5708 0
-5709 -5707 0
c Var 'variant_fields_00002_00006_00001' order represents '3' with '5710'
-5708 5710 0
c Var 'variant_fields_00002_00006_00001' direct represents '3' with '5711'
5708 -5710 5711 0
-5711 5710 0
-5711 -5708 0
c Var 'variant_fields_00002_00006_00001' order represents '4' with '5712'
-5710 5712 0
c Var 'variant_fields_00002_00006_00001' direct represents '4' with '5713'
5710 -5712 5713 0
-5713 5712 0
-5713 -5710 0
c Var 'variant_fields_00002_00006_00001' order represents '5' with '5714'
-5712 5714 0
c Var 'variant_fields_00002_00006_00001' direct represents '5' with '5715'
5712 -5714 5715 0
-5715 5714 0
-5715 -5712 0
c Var 'variant_fields_00002_00006_00001' order represents '6' with '5716'
-5714 5716 0
c Var 'variant_fields_00002_00006_00001' direct represents '6' with '5717'
5714 -5716 5717 0
-5717 5716 0
-5717 -5714 0
c Var 'variant_fields_00002_00006_00001' order represents '7' with '5718'
-5716 5718 0
c Var 'variant_fields_00002_00006_00001' direct represents '7' with '5719'
5716 -5718 5719 0
-5719 5718 0
-5719 -5716 0
c Var 'variant_fields_00002_00006_00001' order represents '8' with '5720'
-5718 5720 0
c Var 'variant_fields_00002_00006_00001' direct represents '8' with '5721'
5718 -5720 5721 0
-5721 5720 0
-5721 -5718 0
c Var 'variant_fields_00002_00006_00001' direct represents '9' with '-5720'
5707 5709 5711 5713 5715 5717 5719 5721 -5720 0
c Encoding variable: variant_fields_00002_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00002' order represents '1' with '5722'
c Var 'variant_fields_00002_00006_00002' direct represents '1' with '5722'
c Var 'variant_fields_00002_00006_00002' order represents '2' with '5723'
-5722 5723 0
c Var 'variant_fields_00002_00006_00002' direct represents '2' with '5724'
5722 -5723 5724 0
-5724 5723 0
-5724 -5722 0
c Var 'variant_fields_00002_00006_00002' order represents '3' with '5725'
-5723 5725 0
c Var 'variant_fields_00002_00006_00002' direct represents '3' with '5726'
5723 -5725 5726 0
-5726 5725 0
-5726 -5723 0
c Var 'variant_fields_00002_00006_00002' order represents '4' with '5727'
-5725 5727 0
c Var 'variant_fields_00002_00006_00002' direct represents '4' with '5728'
5725 -5727 5728 0
-5728 5727 0
-5728 -5725 0
c Var 'variant_fields_00002_00006_00002' order represents '5' with '5729'
-5727 5729 0
c Var 'variant_fields_00002_00006_00002' direct represents '5' with '5730'
5727 -5729 5730 0
-5730 5729 0
-5730 -5727 0
c Var 'variant_fields_00002_00006_00002' order represents '6' with '5731'
-5729 5731 0
c Var 'variant_fields_00002_00006_00002' direct represents '6' with '5732'
5729 -5731 5732 0
-5732 5731 0
-5732 -5729 0
c Var 'variant_fields_00002_00006_00002' order represents '7' with '5733'
-5731 5733 0
c Var 'variant_fields_00002_00006_00002' direct represents '7' with '5734'
5731 -5733 5734 0
-5734 5733 0
-5734 -5731 0
c Var 'variant_fields_00002_00006_00002' order represents '8' with '5735'
-5733 5735 0
c Var 'variant_fields_00002_00006_00002' direct represents '8' with '5736'
5733 -5735 5736 0
-5736 5735 0
-5736 -5733 0
c Var 'variant_fields_00002_00006_00002' direct represents '9' with '-5735'
5722 5724 5726 5728 5730 5732 5734 5736 -5735 0
c Encoding variable: variant_fields_00002_00006_00003 with domain: int(6) (representing constraint )
c Var 'variant_fields_00002_00006_00003' direct represents '6' with '5737'
5737 0
c Encoding variable: variant_fields_00002_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00004' order represents '1' with '5738'
c Var 'variant_fields_00002_00006_00004' direct represents '1' with '5738'
c Var 'variant_fields_00002_00006_00004' order represents '2' with '5739'
-5738 5739 0
c Var 'variant_fields_00002_00006_00004' direct represents '2' with '5740'
5738 -5739 5740 0
-5740 5739 0
-5740 -5738 0
c Var 'variant_fields_00002_00006_00004' order represents '3' with '5741'
-5739 5741 0
c Var 'variant_fields_00002_00006_00004' direct represents '3' with '5742'
5739 -5741 5742 0
-5742 5741 0
-5742 -5739 0
c Var 'variant_fields_00002_00006_00004' order represents '4' with '5743'
-5741 5743 0
c Var 'variant_fields_00002_00006_00004' direct represents '4' with '5744'
5741 -5743 5744 0
-5744 5743 0
-5744 -5741 0
c Var 'variant_fields_00002_00006_00004' order represents '5' with '5745'
-5743 5745 0
c Var 'variant_fields_00002_00006_00004' direct represents '5' with '5746'
5743 -5745 5746 0
-5746 5745 0
-5746 -5743 0
c Var 'variant_fields_00002_00006_00004' order represents '6' with '5747'
-5745 5747 0
c Var 'variant_fields_00002_00006_00004' direct represents '6' with '5748'
5745 -5747 5748 0
-5748 5747 0
-5748 -5745 0
c Var 'variant_fields_00002_00006_00004' order represents '7' with '5749'
-5747 5749 0
c Var 'variant_fields_00002_00006_00004' direct represents '7' with '5750'
5747 -5749 5750 0
-5750 5749 0
-5750 -5747 0
c Var 'variant_fields_00002_00006_00004' order represents '8' with '5751'
-5749 5751 0
c Var 'variant_fields_00002_00006_00004' direct represents '8' with '5752'
5749 -5751 5752 0
-5752 5751 0
-5752 -5749 0
c Var 'variant_fields_00002_00006_00004' direct represents '9' with '-5751'
5738 5740 5742 5744 5746 5748 5750 5752 -5751 0
c Encoding variable: variant_fields_00002_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00005' order represents '1' with '5753'
c Var 'variant_fields_00002_00006_00005' direct represents '1' with '5753'
c Var 'variant_fields_00002_00006_00005' order represents '2' with '5754'
-5753 5754 0
c Var 'variant_fields_00002_00006_00005' direct represents '2' with '5755'
5753 -5754 5755 0
-5755 5754 0
-5755 -5753 0
c Var 'variant_fields_00002_00006_00005' order represents '3' with '5756'
-5754 5756 0
c Var 'variant_fields_00002_00006_00005' direct represents '3' with '5757'
5754 -5756 5757 0
-5757 5756 0
-5757 -5754 0
c Var 'variant_fields_00002_00006_00005' order represents '4' with '5758'
-5756 5758 0
c Var 'variant_fields_00002_00006_00005' direct represents '4' with '5759'
5756 -5758 5759 0
-5759 5758 0
-5759 -5756 0
c Var 'variant_fields_00002_00006_00005' order represents '5' with '5760'
-5758 5760 0
c Var 'variant_fields_00002_00006_00005' direct represents '5' with '5761'
5758 -5760 5761 0
-5761 5760 0
-5761 -5758 0
c Var 'variant_fields_00002_00006_00005' order represents '6' with '5762'
-5760 5762 0
c Var 'variant_fields_00002_00006_00005' direct represents '6' with '5763'
5760 -5762 5763 0
-5763 5762 0
-5763 -5760 0
c Var 'variant_fields_00002_00006_00005' order represents '7' with '5764'
-5762 5764 0
c Var 'variant_fields_00002_00006_00005' direct represents '7' with '5765'
5762 -5764 5765 0
-5765 5764 0
-5765 -5762 0
c Var 'variant_fields_00002_00006_00005' order represents '8' with '5766'
-5764 5766 0
c Var 'variant_fields_00002_00006_00005' direct represents '8' with '5767'
5764 -5766 5767 0
-5767 5766 0
-5767 -5764 0
c Var 'variant_fields_00002_00006_00005' direct represents '9' with '-5766'
5753 5755 5757 5759 5761 5763 5765 5767 -5766 0
c Encoding variable: variant_fields_00002_00006_00006 with domain: int(7) (representing constraint )
c Var 'variant_fields_00002_00006_00006' direct represents '7' with '5768'
5768 0
c Encoding variable: variant_fields_00002_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00007' order represents '1' with '5769'
c Var 'variant_fields_00002_00006_00007' direct represents '1' with '5769'
c Var 'variant_fields_00002_00006_00007' order represents '2' with '5770'
-5769 5770 0
c Var 'variant_fields_00002_00006_00007' direct represents '2' with '5771'
5769 -5770 5771 0
-5771 5770 0
-5771 -5769 0
c Var 'variant_fields_00002_00006_00007' order represents '3' with '5772'
-5770 5772 0
c Var 'variant_fields_00002_00006_00007' direct represents '3' with '5773'
5770 -5772 5773 0
-5773 5772 0
-5773 -5770 0
c Var 'variant_fields_00002_00006_00007' order represents '4' with '5774'
-5772 5774 0
c Var 'variant_fields_00002_00006_00007' direct represents '4' with '5775'
5772 -5774 5775 0
-5775 5774 0
-5775 -5772 0
c Var 'variant_fields_00002_00006_00007' order represents '5' with '5776'
-5774 5776 0
c Var 'variant_fields_00002_00006_00007' direct represents '5' with '5777'
5774 -5776 5777 0
-5777 5776 0
-5777 -5774 0
c Var 'variant_fields_00002_00006_00007' order represents '6' with '5778'
-5776 5778 0
c Var 'variant_fields_00002_00006_00007' direct represents '6' with '5779'
5776 -5778 5779 0
-5779 5778 0
-5779 -5776 0
c Var 'variant_fields_00002_00006_00007' order represents '7' with '5780'
-5778 5780 0
c Var 'variant_fields_00002_00006_00007' direct represents '7' with '5781'
5778 -5780 5781 0
-5781 5780 0
-5781 -5778 0
c Var 'variant_fields_00002_00006_00007' order represents '8' with '5782'
-5780 5782 0
c Var 'variant_fields_00002_00006_00007' direct represents '8' with '5783'
5780 -5782 5783 0
-5783 5782 0
-5783 -5780 0
c Var 'variant_fields_00002_00006_00007' direct represents '9' with '-5782'
5769 5771 5773 5775 5777 5779 5781 5783 -5782 0
c Encoding variable: variant_fields_00002_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00008' order represents '1' with '5784'
c Var 'variant_fields_00002_00006_00008' direct represents '1' with '5784'
c Var 'variant_fields_00002_00006_00008' order represents '2' with '5785'
-5784 5785 0
c Var 'variant_fields_00002_00006_00008' direct represents '2' with '5786'
5784 -5785 5786 0
-5786 5785 0
-5786 -5784 0
c Var 'variant_fields_00002_00006_00008' order represents '3' with '5787'
-5785 5787 0
c Var 'variant_fields_00002_00006_00008' direct represents '3' with '5788'
5785 -5787 5788 0
-5788 5787 0
-5788 -5785 0
c Var 'variant_fields_00002_00006_00008' order represents '4' with '5789'
-5787 5789 0
c Var 'variant_fields_00002_00006_00008' direct represents '4' with '5790'
5787 -5789 5790 0
-5790 5789 0
-5790 -5787 0
c Var 'variant_fields_00002_00006_00008' order represents '5' with '5791'
-5789 5791 0
c Var 'variant_fields_00002_00006_00008' direct represents '5' with '5792'
5789 -5791 5792 0
-5792 5791 0
-5792 -5789 0
c Var 'variant_fields_00002_00006_00008' order represents '6' with '5793'
-5791 5793 0
c Var 'variant_fields_00002_00006_00008' direct represents '6' with '5794'
5791 -5793 5794 0
-5794 5793 0
-5794 -5791 0
c Var 'variant_fields_00002_00006_00008' order represents '7' with '5795'
-5793 5795 0
c Var 'variant_fields_00002_00006_00008' direct represents '7' with '5796'
5793 -5795 5796 0
-5796 5795 0
-5796 -5793 0
c Var 'variant_fields_00002_00006_00008' order represents '8' with '5797'
-5795 5797 0
c Var 'variant_fields_00002_00006_00008' direct represents '8' with '5798'
5795 -5797 5798 0
-5798 5797 0
-5798 -5795 0
c Var 'variant_fields_00002_00006_00008' direct represents '9' with '-5797'
5784 5786 5788 5790 5792 5794 5796 5798 -5797 0
c Encoding variable: variant_fields_00002_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00009' order represents '1' with '5799'
c Var 'variant_fields_00002_00006_00009' direct represents '1' with '5799'
c Var 'variant_fields_00002_00006_00009' order represents '2' with '5800'
-5799 5800 0
c Var 'variant_fields_00002_00006_00009' direct represents '2' with '5801'
5799 -5800 5801 0
-5801 5800 0
-5801 -5799 0
c Var 'variant_fields_00002_00006_00009' order represents '3' with '5802'
-5800 5802 0
c Var 'variant_fields_00002_00006_00009' direct represents '3' with '5803'
5800 -5802 5803 0
-5803 5802 0
-5803 -5800 0
c Var 'variant_fields_00002_00006_00009' order represents '4' with '5804'
-5802 5804 0
c Var 'variant_fields_00002_00006_00009' direct represents '4' with '5805'
5802 -5804 5805 0
-5805 5804 0
-5805 -5802 0
c Var 'variant_fields_00002_00006_00009' order represents '5' with '5806'
-5804 5806 0
c Var 'variant_fields_00002_00006_00009' direct represents '5' with '5807'
5804 -5806 5807 0
-5807 5806 0
-5807 -5804 0
c Var 'variant_fields_00002_00006_00009' order represents '6' with '5808'
-5806 5808 0
c Var 'variant_fields_00002_00006_00009' direct represents '6' with '5809'
5806 -5808 5809 0
-5809 5808 0
-5809 -5806 0
c Var 'variant_fields_00002_00006_00009' order represents '7' with '5810'
-5808 5810 0
c Var 'variant_fields_00002_00006_00009' direct represents '7' with '5811'
5808 -5810 5811 0
-5811 5810 0
-5811 -5808 0
c Var 'variant_fields_00002_00006_00009' order represents '8' with '5812'
-5810 5812 0
c Var 'variant_fields_00002_00006_00009' direct represents '8' with '5813'
5810 -5812 5813 0
-5813 5812 0
-5813 -5810 0
c Var 'variant_fields_00002_00006_00009' direct represents '9' with '-5812'
5799 5801 5803 5805 5807 5809 5811 5813 -5812 0
c Encoding variable: variant_fields_00002_00007_00001 with domain: int(5) (representing constraint )
c Var 'variant_fields_00002_00007_00001' direct represents '5' with '5814'
5814 0
c Encoding variable: variant_fields_00002_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00002' order represents '1' with '5815'
c Var 'variant_fields_00002_00007_00002' direct represents '1' with '5815'
c Var 'variant_fields_00002_00007_00002' order represents '2' with '5816'
-5815 5816 0
c Var 'variant_fields_00002_00007_00002' direct represents '2' with '5817'
5815 -5816 5817 0
-5817 5816 0
-5817 -5815 0
c Var 'variant_fields_00002_00007_00002' order represents '3' with '5818'
-5816 5818 0
c Var 'variant_fields_00002_00007_00002' direct represents '3' with '5819'
5816 -5818 5819 0
-5819 5818 0
-5819 -5816 0
c Var 'variant_fields_00002_00007_00002' order represents '4' with '5820'
-5818 5820 0
c Var 'variant_fields_00002_00007_00002' direct represents '4' with '5821'
5818 -5820 5821 0
-5821 5820 0
-5821 -5818 0
c Var 'variant_fields_00002_00007_00002' order represents '5' with '5822'
-5820 5822 0
c Var 'variant_fields_00002_00007_00002' direct represents '5' with '5823'
5820 -5822 5823 0
-5823 5822 0
-5823 -5820 0
c Var 'variant_fields_00002_00007_00002' order represents '6' with '5824'
-5822 5824 0
c Var 'variant_fields_00002_00007_00002' direct represents '6' with '5825'
5822 -5824 5825 0
-5825 5824 0
-5825 -5822 0
c Var 'variant_fields_00002_00007_00002' order represents '7' with '5826'
-5824 5826 0
c Var 'variant_fields_00002_00007_00002' direct represents '7' with '5827'
5824 -5826 5827 0
-5827 5826 0
-5827 -5824 0
c Var 'variant_fields_00002_00007_00002' order represents '8' with '5828'
-5826 5828 0
c Var 'variant_fields_00002_00007_00002' direct represents '8' with '5829'
5826 -5828 5829 0
-5829 5828 0
-5829 -5826 0
c Var 'variant_fields_00002_00007_00002' direct represents '9' with '-5828'
5815 5817 5819 5821 5823 5825 5827 5829 -5828 0
c Encoding variable: variant_fields_00002_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00003' order represents '1' with '5830'
c Var 'variant_fields_00002_00007_00003' direct represents '1' with '5830'
c Var 'variant_fields_00002_00007_00003' order represents '2' with '5831'
-5830 5831 0
c Var 'variant_fields_00002_00007_00003' direct represents '2' with '5832'
5830 -5831 5832 0
-5832 5831 0
-5832 -5830 0
c Var 'variant_fields_00002_00007_00003' order represents '3' with '5833'
-5831 5833 0
c Var 'variant_fields_00002_00007_00003' direct represents '3' with '5834'
5831 -5833 5834 0
-5834 5833 0
-5834 -5831 0
c Var 'variant_fields_00002_00007_00003' order represents '4' with '5835'
-5833 5835 0
c Var 'variant_fields_00002_00007_00003' direct represents '4' with '5836'
5833 -5835 5836 0
-5836 5835 0
-5836 -5833 0
c Var 'variant_fields_00002_00007_00003' order represents '5' with '5837'
-5835 5837 0
c Var 'variant_fields_00002_00007_00003' direct represents '5' with '5838'
5835 -5837 5838 0
-5838 5837 0
-5838 -5835 0
c Var 'variant_fields_00002_00007_00003' order represents '6' with '5839'
-5837 5839 0
c Var 'variant_fields_00002_00007_00003' direct represents '6' with '5840'
5837 -5839 5840 0
-5840 5839 0
-5840 -5837 0
c Var 'variant_fields_00002_00007_00003' order represents '7' with '5841'
-5839 5841 0
c Var 'variant_fields_00002_00007_00003' direct represents '7' with '5842'
5839 -5841 5842 0
-5842 5841 0
-5842 -5839 0
c Var 'variant_fields_00002_00007_00003' order represents '8' with '5843'
-5841 5843 0
c Var 'variant_fields_00002_00007_00003' direct represents '8' with '5844'
5841 -5843 5844 0
-5844 5843 0
-5844 -5841 0
c Var 'variant_fields_00002_00007_00003' direct represents '9' with '-5843'
5830 5832 5834 5836 5838 5840 5842 5844 -5843 0
c Encoding variable: variant_fields_00002_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00004' order represents '1' with '5845'
c Var 'variant_fields_00002_00007_00004' direct represents '1' with '5845'
c Var 'variant_fields_00002_00007_00004' order represents '2' with '5846'
-5845 5846 0
c Var 'variant_fields_00002_00007_00004' direct represents '2' with '5847'
5845 -5846 5847 0
-5847 5846 0
-5847 -5845 0
c Var 'variant_fields_00002_00007_00004' order represents '3' with '5848'
-5846 5848 0
c Var 'variant_fields_00002_00007_00004' direct represents '3' with '5849'
5846 -5848 5849 0
-5849 5848 0
-5849 -5846 0
c Var 'variant_fields_00002_00007_00004' order represents '4' with '5850'
-5848 5850 0
c Var 'variant_fields_00002_00007_00004' direct represents '4' with '5851'
5848 -5850 5851 0
-5851 5850 0
-5851 -5848 0
c Var 'variant_fields_00002_00007_00004' order represents '5' with '5852'
-5850 5852 0
c Var 'variant_fields_00002_00007_00004' direct represents '5' with '5853'
5850 -5852 5853 0
-5853 5852 0
-5853 -5850 0
c Var 'variant_fields_00002_00007_00004' order represents '6' with '5854'
-5852 5854 0
c Var 'variant_fields_00002_00007_00004' direct represents '6' with '5855'
5852 -5854 5855 0
-5855 5854 0
-5855 -5852 0
c Var 'variant_fields_00002_00007_00004' order represents '7' with '5856'
-5854 5856 0
c Var 'variant_fields_00002_00007_00004' direct represents '7' with '5857'
5854 -5856 5857 0
-5857 5856 0
-5857 -5854 0
c Var 'variant_fields_00002_00007_00004' order represents '8' with '5858'
-5856 5858 0
c Var 'variant_fields_00002_00007_00004' direct represents '8' with '5859'
5856 -5858 5859 0
-5859 5858 0
-5859 -5856 0
c Var 'variant_fields_00002_00007_00004' direct represents '9' with '-5858'
5845 5847 5849 5851 5853 5855 5857 5859 -5858 0
c Encoding variable: variant_fields_00002_00007_00005 with domain: int(7) (representing constraint )
c Var 'variant_fields_00002_00007_00005' direct represents '7' with '5860'
5860 0
c Encoding variable: variant_fields_00002_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00006' order represents '1' with '5861'
c Var 'variant_fields_00002_00007_00006' direct represents '1' with '5861'
c Var 'variant_fields_00002_00007_00006' order represents '2' with '5862'
-5861 5862 0
c Var 'variant_fields_00002_00007_00006' direct represents '2' with '5863'
5861 -5862 5863 0
-5863 5862 0
-5863 -5861 0
c Var 'variant_fields_00002_00007_00006' order represents '3' with '5864'
-5862 5864 0
c Var 'variant_fields_00002_00007_00006' direct represents '3' with '5865'
5862 -5864 5865 0
-5865 5864 0
-5865 -5862 0
c Var 'variant_fields_00002_00007_00006' order represents '4' with '5866'
-5864 5866 0
c Var 'variant_fields_00002_00007_00006' direct represents '4' with '5867'
5864 -5866 5867 0
-5867 5866 0
-5867 -5864 0
c Var 'variant_fields_00002_00007_00006' order represents '5' with '5868'
-5866 5868 0
c Var 'variant_fields_00002_00007_00006' direct represents '5' with '5869'
5866 -5868 5869 0
-5869 5868 0
-5869 -5866 0
c Var 'variant_fields_00002_00007_00006' order represents '6' with '5870'
-5868 5870 0
c Var 'variant_fields_00002_00007_00006' direct represents '6' with '5871'
5868 -5870 5871 0
-5871 5870 0
-5871 -5868 0
c Var 'variant_fields_00002_00007_00006' order represents '7' with '5872'
-5870 5872 0
c Var 'variant_fields_00002_00007_00006' direct represents '7' with '5873'
5870 -5872 5873 0
-5873 5872 0
-5873 -5870 0
c Var 'variant_fields_00002_00007_00006' order represents '8' with '5874'
-5872 5874 0
c Var 'variant_fields_00002_00007_00006' direct represents '8' with '5875'
5872 -5874 5875 0
-5875 5874 0
-5875 -5872 0
c Var 'variant_fields_00002_00007_00006' direct represents '9' with '-5874'
5861 5863 5865 5867 5869 5871 5873 5875 -5874 0
c Encoding variable: variant_fields_00002_00007_00007 with domain: int(6) (representing constraint )
c Var 'variant_fields_00002_00007_00007' direct represents '6' with '5876'
5876 0
c Encoding variable: variant_fields_00002_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00008' order represents '1' with '5877'
c Var 'variant_fields_00002_00007_00008' direct represents '1' with '5877'
c Var 'variant_fields_00002_00007_00008' order represents '2' with '5878'
-5877 5878 0
c Var 'variant_fields_00002_00007_00008' direct represents '2' with '5879'
5877 -5878 5879 0
-5879 5878 0
-5879 -5877 0
c Var 'variant_fields_00002_00007_00008' order represents '3' with '5880'
-5878 5880 0
c Var 'variant_fields_00002_00007_00008' direct represents '3' with '5881'
5878 -5880 5881 0
-5881 5880 0
-5881 -5878 0
c Var 'variant_fields_00002_00007_00008' order represents '4' with '5882'
-5880 5882 0
c Var 'variant_fields_00002_00007_00008' direct represents '4' with '5883'
5880 -5882 5883 0
-5883 5882 0
-5883 -5880 0
c Var 'variant_fields_00002_00007_00008' order represents '5' with '5884'
-5882 5884 0
c Var 'variant_fields_00002_00007_00008' direct represents '5' with '5885'
5882 -5884 5885 0
-5885 5884 0
-5885 -5882 0
c Var 'variant_fields_00002_00007_00008' order represents '6' with '5886'
-5884 5886 0
c Var 'variant_fields_00002_00007_00008' direct represents '6' with '5887'
5884 -5886 5887 0
-5887 5886 0
-5887 -5884 0
c Var 'variant_fields_00002_00007_00008' order represents '7' with '5888'
-5886 5888 0
c Var 'variant_fields_00002_00007_00008' direct represents '7' with '5889'
5886 -5888 5889 0
-5889 5888 0
-5889 -5886 0
c Var 'variant_fields_00002_00007_00008' order represents '8' with '5890'
-5888 5890 0
c Var 'variant_fields_00002_00007_00008' direct represents '8' with '5891'
5888 -5890 5891 0
-5891 5890 0
-5891 -5888 0
c Var 'variant_fields_00002_00007_00008' direct represents '9' with '-5890'
5877 5879 5881 5883 5885 5887 5889 5891 -5890 0
c Encoding variable: variant_fields_00002_00007_00009 with domain: int(8) (representing constraint )
c Var 'variant_fields_00002_00007_00009' direct represents '8' with '5892'
5892 0
c Encoding variable: variant_fields_00002_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00001' order represents '1' with '5893'
c Var 'variant_fields_00002_00008_00001' direct represents '1' with '5893'
c Var 'variant_fields_00002_00008_00001' order represents '2' with '5894'
-5893 5894 0
c Var 'variant_fields_00002_00008_00001' direct represents '2' with '5895'
5893 -5894 5895 0
-5895 5894 0
-5895 -5893 0
c Var 'variant_fields_00002_00008_00001' order represents '3' with '5896'
-5894 5896 0
c Var 'variant_fields_00002_00008_00001' direct represents '3' with '5897'
5894 -5896 5897 0
-5897 5896 0
-5897 -5894 0
c Var 'variant_fields_00002_00008_00001' order represents '4' with '5898'
-5896 5898 0
c Var 'variant_fields_00002_00008_00001' direct represents '4' with '5899'
5896 -5898 5899 0
-5899 5898 0
-5899 -5896 0
c Var 'variant_fields_00002_00008_00001' order represents '5' with '5900'
-5898 5900 0
c Var 'variant_fields_00002_00008_00001' direct represents '5' with '5901'
5898 -5900 5901 0
-5901 5900 0
-5901 -5898 0
c Var 'variant_fields_00002_00008_00001' order represents '6' with '5902'
-5900 5902 0
c Var 'variant_fields_00002_00008_00001' direct represents '6' with '5903'
5900 -5902 5903 0
-5903 5902 0
-5903 -5900 0
c Var 'variant_fields_00002_00008_00001' order represents '7' with '5904'
-5902 5904 0
c Var 'variant_fields_00002_00008_00001' direct represents '7' with '5905'
5902 -5904 5905 0
-5905 5904 0
-5905 -5902 0
c Var 'variant_fields_00002_00008_00001' order represents '8' with '5906'
-5904 5906 0
c Var 'variant_fields_00002_00008_00001' direct represents '8' with '5907'
5904 -5906 5907 0
-5907 5906 0
-5907 -5904 0
c Var 'variant_fields_00002_00008_00001' direct represents '9' with '-5906'
5893 5895 5897 5899 5901 5903 5905 5907 -5906 0
c Encoding variable: variant_fields_00002_00008_00002 with domain: int(7) (representing constraint )
c Var 'variant_fields_00002_00008_00002' direct represents '7' with '5908'
5908 0
c Encoding variable: variant_fields_00002_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00003' order represents '1' with '5909'
c Var 'variant_fields_00002_00008_00003' direct represents '1' with '5909'
c Var 'variant_fields_00002_00008_00003' order represents '2' with '5910'
-5909 5910 0
c Var 'variant_fields_00002_00008_00003' direct represents '2' with '5911'
5909 -5910 5911 0
-5911 5910 0
-5911 -5909 0
c Var 'variant_fields_00002_00008_00003' order represents '3' with '5912'
-5910 5912 0
c Var 'variant_fields_00002_00008_00003' direct represents '3' with '5913'
5910 -5912 5913 0
-5913 5912 0
-5913 -5910 0
c Var 'variant_fields_00002_00008_00003' order represents '4' with '5914'
-5912 5914 0
c Var 'variant_fields_00002_00008_00003' direct represents '4' with '5915'
5912 -5914 5915 0
-5915 5914 0
-5915 -5912 0
c Var 'variant_fields_00002_00008_00003' order represents '5' with '5916'
-5914 5916 0
c Var 'variant_fields_00002_00008_00003' direct represents '5' with '5917'
5914 -5916 5917 0
-5917 5916 0
-5917 -5914 0
c Var 'variant_fields_00002_00008_00003' order represents '6' with '5918'
-5916 5918 0
c Var 'variant_fields_00002_00008_00003' direct represents '6' with '5919'
5916 -5918 5919 0
-5919 5918 0
-5919 -5916 0
c Var 'variant_fields_00002_00008_00003' order represents '7' with '5920'
-5918 5920 0
c Var 'variant_fields_00002_00008_00003' direct represents '7' with '5921'
5918 -5920 5921 0
-5921 5920 0
-5921 -5918 0
c Var 'variant_fields_00002_00008_00003' order represents '8' with '5922'
-5920 5922 0
c Var 'variant_fields_00002_00008_00003' direct represents '8' with '5923'
5920 -5922 5923 0
-5923 5922 0
-5923 -5920 0
c Var 'variant_fields_00002_00008_00003' direct represents '9' with '-5922'
5909 5911 5913 5915 5917 5919 5921 5923 -5922 0
c Encoding variable: variant_fields_00002_00008_00004 with domain: int(3) (representing constraint )
c Var 'variant_fields_00002_00008_00004' direct represents '3' with '5924'
5924 0
c Encoding variable: variant_fields_00002_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00005' order represents '1' with '5925'
c Var 'variant_fields_00002_00008_00005' direct represents '1' with '5925'
c Var 'variant_fields_00002_00008_00005' order represents '2' with '5926'
-5925 5926 0
c Var 'variant_fields_00002_00008_00005' direct represents '2' with '5927'
5925 -5926 5927 0
-5927 5926 0
-5927 -5925 0
c Var 'variant_fields_00002_00008_00005' order represents '3' with '5928'
-5926 5928 0
c Var 'variant_fields_00002_00008_00005' direct represents '3' with '5929'
5926 -5928 5929 0
-5929 5928 0
-5929 -5926 0
c Var 'variant_fields_00002_00008_00005' order represents '4' with '5930'
-5928 5930 0
c Var 'variant_fields_00002_00008_00005' direct represents '4' with '5931'
5928 -5930 5931 0
-5931 5930 0
-5931 -5928 0
c Var 'variant_fields_00002_00008_00005' order represents '5' with '5932'
-5930 5932 0
c Var 'variant_fields_00002_00008_00005' direct represents '5' with '5933'
5930 -5932 5933 0
-5933 5932 0
-5933 -5930 0
c Var 'variant_fields_00002_00008_00005' order represents '6' with '5934'
-5932 5934 0
c Var 'variant_fields_00002_00008_00005' direct represents '6' with '5935'
5932 -5934 5935 0
-5935 5934 0
-5935 -5932 0
c Var 'variant_fields_00002_00008_00005' order represents '7' with '5936'
-5934 5936 0
c Var 'variant_fields_00002_00008_00005' direct represents '7' with '5937'
5934 -5936 5937 0
-5937 5936 0
-5937 -5934 0
c Var 'variant_fields_00002_00008_00005' order represents '8' with '5938'
-5936 5938 0
c Var 'variant_fields_00002_00008_00005' direct represents '8' with '5939'
5936 -5938 5939 0
-5939 5938 0
-5939 -5936 0
c Var 'variant_fields_00002_00008_00005' direct represents '9' with '-5938'
5925 5927 5929 5931 5933 5935 5937 5939 -5938 0
c Encoding variable: variant_fields_00002_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00006' order represents '1' with '5940'
c Var 'variant_fields_00002_00008_00006' direct represents '1' with '5940'
c Var 'variant_fields_00002_00008_00006' order represents '2' with '5941'
-5940 5941 0
c Var 'variant_fields_00002_00008_00006' direct represents '2' with '5942'
5940 -5941 5942 0
-5942 5941 0
-5942 -5940 0
c Var 'variant_fields_00002_00008_00006' order represents '3' with '5943'
-5941 5943 0
c Var 'variant_fields_00002_00008_00006' direct represents '3' with '5944'
5941 -5943 5944 0
-5944 5943 0
-5944 -5941 0
c Var 'variant_fields_00002_00008_00006' order represents '4' with '5945'
-5943 5945 0
c Var 'variant_fields_00002_00008_00006' direct represents '4' with '5946'
5943 -5945 5946 0
-5946 5945 0
-5946 -5943 0
c Var 'variant_fields_00002_00008_00006' order represents '5' with '5947'
-5945 5947 0
c Var 'variant_fields_00002_00008_00006' direct represents '5' with '5948'
5945 -5947 5948 0
-5948 5947 0
-5948 -5945 0
c Var 'variant_fields_00002_00008_00006' order represents '6' with '5949'
-5947 5949 0
c Var 'variant_fields_00002_00008_00006' direct represents '6' with '5950'
5947 -5949 5950 0
-5950 5949 0
-5950 -5947 0
c Var 'variant_fields_00002_00008_00006' order represents '7' with '5951'
-5949 5951 0
c Var 'variant_fields_00002_00008_00006' direct represents '7' with '5952'
5949 -5951 5952 0
-5952 5951 0
-5952 -5949 0
c Var 'variant_fields_00002_00008_00006' order represents '8' with '5953'
-5951 5953 0
c Var 'variant_fields_00002_00008_00006' direct represents '8' with '5954'
5951 -5953 5954 0
-5954 5953 0
-5954 -5951 0
c Var 'variant_fields_00002_00008_00006' direct represents '9' with '-5953'
5940 5942 5944 5946 5948 5950 5952 5954 -5953 0
c Encoding variable: variant_fields_00002_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00007' order represents '1' with '5955'
c Var 'variant_fields_00002_00008_00007' direct represents '1' with '5955'
c Var 'variant_fields_00002_00008_00007' order represents '2' with '5956'
-5955 5956 0
c Var 'variant_fields_00002_00008_00007' direct represents '2' with '5957'
5955 -5956 5957 0
-5957 5956 0
-5957 -5955 0
c Var 'variant_fields_00002_00008_00007' order represents '3' with '5958'
-5956 5958 0
c Var 'variant_fields_00002_00008_00007' direct represents '3' with '5959'
5956 -5958 5959 0
-5959 5958 0
-5959 -5956 0
c Var 'variant_fields_00002_00008_00007' order represents '4' with '5960'
-5958 5960 0
c Var 'variant_fields_00002_00008_00007' direct represents '4' with '5961'
5958 -5960 5961 0
-5961 5960 0
-5961 -5958 0
c Var 'variant_fields_00002_00008_00007' order represents '5' with '5962'
-5960 5962 0
c Var 'variant_fields_00002_00008_00007' direct represents '5' with '5963'
5960 -5962 5963 0
-5963 5962 0
-5963 -5960 0
c Var 'variant_fields_00002_00008_00007' order represents '6' with '5964'
-5962 5964 0
c Var 'variant_fields_00002_00008_00007' direct represents '6' with '5965'
5962 -5964 5965 0
-5965 5964 0
-5965 -5962 0
c Var 'variant_fields_00002_00008_00007' order represents '7' with '5966'
-5964 5966 0
c Var 'variant_fields_00002_00008_00007' direct represents '7' with '5967'
5964 -5966 5967 0
-5967 5966 0
-5967 -5964 0
c Var 'variant_fields_00002_00008_00007' order represents '8' with '5968'
-5966 5968 0
c Var 'variant_fields_00002_00008_00007' direct represents '8' with '5969'
5966 -5968 5969 0
-5969 5968 0
-5969 -5966 0
c Var 'variant_fields_00002_00008_00007' direct represents '9' with '-5968'
5955 5957 5959 5961 5963 5965 5967 5969 -5968 0
c Encoding variable: variant_fields_00002_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00008' order represents '1' with '5970'
c Var 'variant_fields_00002_00008_00008' direct represents '1' with '5970'
c Var 'variant_fields_00002_00008_00008' order represents '2' with '5971'
-5970 5971 0
c Var 'variant_fields_00002_00008_00008' direct represents '2' with '5972'
5970 -5971 5972 0
-5972 5971 0
-5972 -5970 0
c Var 'variant_fields_00002_00008_00008' order represents '3' with '5973'
-5971 5973 0
c Var 'variant_fields_00002_00008_00008' direct represents '3' with '5974'
5971 -5973 5974 0
-5974 5973 0
-5974 -5971 0
c Var 'variant_fields_00002_00008_00008' order represents '4' with '5975'
-5973 5975 0
c Var 'variant_fields_00002_00008_00008' direct represents '4' with '5976'
5973 -5975 5976 0
-5976 5975 0
-5976 -5973 0
c Var 'variant_fields_00002_00008_00008' order represents '5' with '5977'
-5975 5977 0
c Var 'variant_fields_00002_00008_00008' direct represents '5' with '5978'
5975 -5977 5978 0
-5978 5977 0
-5978 -5975 0
c Var 'variant_fields_00002_00008_00008' order represents '6' with '5979'
-5977 5979 0
c Var 'variant_fields_00002_00008_00008' direct represents '6' with '5980'
5977 -5979 5980 0
-5980 5979 0
-5980 -5977 0
c Var 'variant_fields_00002_00008_00008' order represents '7' with '5981'
-5979 5981 0
c Var 'variant_fields_00002_00008_00008' direct represents '7' with '5982'
5979 -5981 5982 0
-5982 5981 0
-5982 -5979 0
c Var 'variant_fields_00002_00008_00008' order represents '8' with '5983'
-5981 5983 0
c Var 'variant_fields_00002_00008_00008' direct represents '8' with '5984'
5981 -5983 5984 0
-5984 5983 0
-5984 -5981 0
c Var 'variant_fields_00002_00008_00008' direct represents '9' with '-5983'
5970 5972 5974 5976 5978 5980 5982 5984 -5983 0
c Encoding variable: variant_fields_00002_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00009' order represents '1' with '5985'
c Var 'variant_fields_00002_00008_00009' direct represents '1' with '5985'
c Var 'variant_fields_00002_00008_00009' order represents '2' with '5986'
-5985 5986 0
c Var 'variant_fields_00002_00008_00009' direct represents '2' with '5987'
5985 -5986 5987 0
-5987 5986 0
-5987 -5985 0
c Var 'variant_fields_00002_00008_00009' order represents '3' with '5988'
-5986 5988 0
c Var 'variant_fields_00002_00008_00009' direct represents '3' with '5989'
5986 -5988 5989 0
-5989 5988 0
-5989 -5986 0
c Var 'variant_fields_00002_00008_00009' order represents '4' with '5990'
-5988 5990 0
c Var 'variant_fields_00002_00008_00009' direct represents '4' with '5991'
5988 -5990 5991 0
-5991 5990 0
-5991 -5988 0
c Var 'variant_fields_00002_00008_00009' order represents '5' with '5992'
-5990 5992 0
c Var 'variant_fields_00002_00008_00009' direct represents '5' with '5993'
5990 -5992 5993 0
-5993 5992 0
-5993 -5990 0
c Var 'variant_fields_00002_00008_00009' order represents '6' with '5994'
-5992 5994 0
c Var 'variant_fields_00002_00008_00009' direct represents '6' with '5995'
5992 -5994 5995 0
-5995 5994 0
-5995 -5992 0
c Var 'variant_fields_00002_00008_00009' order represents '7' with '5996'
-5994 5996 0
c Var 'variant_fields_00002_00008_00009' direct represents '7' with '5997'
5994 -5996 5997 0
-5997 5996 0
-5997 -5994 0
c Var 'variant_fields_00002_00008_00009' order represents '8' with '5998'
-5996 5998 0
c Var 'variant_fields_00002_00008_00009' direct represents '8' with '5999'
5996 -5998 5999 0
-5999 5998 0
-5999 -5996 0
c Var 'variant_fields_00002_00008_00009' direct represents '9' with '-5998'
5985 5987 5989 5991 5993 5995 5997 5999 -5998 0
c Encoding variable: variant_fields_00002_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00001' order represents '1' with '6000'
c Var 'variant_fields_00002_00009_00001' direct represents '1' with '6000'
c Var 'variant_fields_00002_00009_00001' order represents '2' with '6001'
-6000 6001 0
c Var 'variant_fields_00002_00009_00001' direct represents '2' with '6002'
6000 -6001 6002 0
-6002 6001 0
-6002 -6000 0
c Var 'variant_fields_00002_00009_00001' order represents '3' with '6003'
-6001 6003 0
c Var 'variant_fields_00002_00009_00001' direct represents '3' with '6004'
6001 -6003 6004 0
-6004 6003 0
-6004 -6001 0
c Var 'variant_fields_00002_00009_00001' order represents '4' with '6005'
-6003 6005 0
c Var 'variant_fields_00002_00009_00001' direct represents '4' with '6006'
6003 -6005 6006 0
-6006 6005 0
-6006 -6003 0
c Var 'variant_fields_00002_00009_00001' order represents '5' with '6007'
-6005 6007 0
c Var 'variant_fields_00002_00009_00001' direct represents '5' with '6008'
6005 -6007 6008 0
-6008 6007 0
-6008 -6005 0
c Var 'variant_fields_00002_00009_00001' order represents '6' with '6009'
-6007 6009 0
c Var 'variant_fields_00002_00009_00001' direct represents '6' with '6010'
6007 -6009 6010 0
-6010 6009 0
-6010 -6007 0
c Var 'variant_fields_00002_00009_00001' order represents '7' with '6011'
-6009 6011 0
c Var 'variant_fields_00002_00009_00001' direct represents '7' with '6012'
6009 -6011 6012 0
-6012 6011 0
-6012 -6009 0
c Var 'variant_fields_00002_00009_00001' order represents '8' with '6013'
-6011 6013 0
c Var 'variant_fields_00002_00009_00001' direct represents '8' with '6014'
6011 -6013 6014 0
-6014 6013 0
-6014 -6011 0
c Var 'variant_fields_00002_00009_00001' direct represents '9' with '-6013'
6000 6002 6004 6006 6008 6010 6012 6014 -6013 0
c Encoding variable: variant_fields_00002_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00002' order represents '1' with '6015'
c Var 'variant_fields_00002_00009_00002' direct represents '1' with '6015'
c Var 'variant_fields_00002_00009_00002' order represents '2' with '6016'
-6015 6016 0
c Var 'variant_fields_00002_00009_00002' direct represents '2' with '6017'
6015 -6016 6017 0
-6017 6016 0
-6017 -6015 0
c Var 'variant_fields_00002_00009_00002' order represents '3' with '6018'
-6016 6018 0
c Var 'variant_fields_00002_00009_00002' direct represents '3' with '6019'
6016 -6018 6019 0
-6019 6018 0
-6019 -6016 0
c Var 'variant_fields_00002_00009_00002' order represents '4' with '6020'
-6018 6020 0
c Var 'variant_fields_00002_00009_00002' direct represents '4' with '6021'
6018 -6020 6021 0
-6021 6020 0
-6021 -6018 0
c Var 'variant_fields_00002_00009_00002' order represents '5' with '6022'
-6020 6022 0
c Var 'variant_fields_00002_00009_00002' direct represents '5' with '6023'
6020 -6022 6023 0
-6023 6022 0
-6023 -6020 0
c Var 'variant_fields_00002_00009_00002' order represents '6' with '6024'
-6022 6024 0
c Var 'variant_fields_00002_00009_00002' direct represents '6' with '6025'
6022 -6024 6025 0
-6025 6024 0
-6025 -6022 0
c Var 'variant_fields_00002_00009_00002' order represents '7' with '6026'
-6024 6026 0
c Var 'variant_fields_00002_00009_00002' direct represents '7' with '6027'
6024 -6026 6027 0
-6027 6026 0
-6027 -6024 0
c Var 'variant_fields_00002_00009_00002' order represents '8' with '6028'
-6026 6028 0
c Var 'variant_fields_00002_00009_00002' direct represents '8' with '6029'
6026 -6028 6029 0
-6029 6028 0
-6029 -6026 0
c Var 'variant_fields_00002_00009_00002' direct represents '9' with '-6028'
6015 6017 6019 6021 6023 6025 6027 6029 -6028 0
c Encoding variable: variant_fields_00002_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00003' order represents '1' with '6030'
c Var 'variant_fields_00002_00009_00003' direct represents '1' with '6030'
c Var 'variant_fields_00002_00009_00003' order represents '2' with '6031'
-6030 6031 0
c Var 'variant_fields_00002_00009_00003' direct represents '2' with '6032'
6030 -6031 6032 0
-6032 6031 0
-6032 -6030 0
c Var 'variant_fields_00002_00009_00003' order represents '3' with '6033'
-6031 6033 0
c Var 'variant_fields_00002_00009_00003' direct represents '3' with '6034'
6031 -6033 6034 0
-6034 6033 0
-6034 -6031 0
c Var 'variant_fields_00002_00009_00003' order represents '4' with '6035'
-6033 6035 0
c Var 'variant_fields_00002_00009_00003' direct represents '4' with '6036'
6033 -6035 6036 0
-6036 6035 0
-6036 -6033 0
c Var 'variant_fields_00002_00009_00003' order represents '5' with '6037'
-6035 6037 0
c Var 'variant_fields_00002_00009_00003' direct represents '5' with '6038'
6035 -6037 6038 0
-6038 6037 0
-6038 -6035 0
c Var 'variant_fields_00002_00009_00003' order represents '6' with '6039'
-6037 6039 0
c Var 'variant_fields_00002_00009_00003' direct represents '6' with '6040'
6037 -6039 6040 0
-6040 6039 0
-6040 -6037 0
c Var 'variant_fields_00002_00009_00003' order represents '7' with '6041'
-6039 6041 0
c Var 'variant_fields_00002_00009_00003' direct represents '7' with '6042'
6039 -6041 6042 0
-6042 6041 0
-6042 -6039 0
c Var 'variant_fields_00002_00009_00003' order represents '8' with '6043'
-6041 6043 0
c Var 'variant_fields_00002_00009_00003' direct represents '8' with '6044'
6041 -6043 6044 0
-6044 6043 0
-6044 -6041 0
c Var 'variant_fields_00002_00009_00003' direct represents '9' with '-6043'
6030 6032 6034 6036 6038 6040 6042 6044 -6043 0
c Encoding variable: variant_fields_00002_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00004' order represents '1' with '6045'
c Var 'variant_fields_00002_00009_00004' direct represents '1' with '6045'
c Var 'variant_fields_00002_00009_00004' order represents '2' with '6046'
-6045 6046 0
c Var 'variant_fields_00002_00009_00004' direct represents '2' with '6047'
6045 -6046 6047 0
-6047 6046 0
-6047 -6045 0
c Var 'variant_fields_00002_00009_00004' order represents '3' with '6048'
-6046 6048 0
c Var 'variant_fields_00002_00009_00004' direct represents '3' with '6049'
6046 -6048 6049 0
-6049 6048 0
-6049 -6046 0
c Var 'variant_fields_00002_00009_00004' order represents '4' with '6050'
-6048 6050 0
c Var 'variant_fields_00002_00009_00004' direct represents '4' with '6051'
6048 -6050 6051 0
-6051 6050 0
-6051 -6048 0
c Var 'variant_fields_00002_00009_00004' order represents '5' with '6052'
-6050 6052 0
c Var 'variant_fields_00002_00009_00004' direct represents '5' with '6053'
6050 -6052 6053 0
-6053 6052 0
-6053 -6050 0
c Var 'variant_fields_00002_00009_00004' order represents '6' with '6054'
-6052 6054 0
c Var 'variant_fields_00002_00009_00004' direct represents '6' with '6055'
6052 -6054 6055 0
-6055 6054 0
-6055 -6052 0
c Var 'variant_fields_00002_00009_00004' order represents '7' with '6056'
-6054 6056 0
c Var 'variant_fields_00002_00009_00004' direct represents '7' with '6057'
6054 -6056 6057 0
-6057 6056 0
-6057 -6054 0
c Var 'variant_fields_00002_00009_00004' order represents '8' with '6058'
-6056 6058 0
c Var 'variant_fields_00002_00009_00004' direct represents '8' with '6059'
6056 -6058 6059 0
-6059 6058 0
-6059 -6056 0
c Var 'variant_fields_00002_00009_00004' direct represents '9' with '-6058'
6045 6047 6049 6051 6053 6055 6057 6059 -6058 0
c Encoding variable: variant_fields_00002_00009_00005 with domain: int(2) (representing constraint )
c Var 'variant_fields_00002_00009_00005' direct represents '2' with '6060'
6060 0
c Encoding variable: variant_fields_00002_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00006' order represents '1' with '6061'
c Var 'variant_fields_00002_00009_00006' direct represents '1' with '6061'
c Var 'variant_fields_00002_00009_00006' order represents '2' with '6062'
-6061 6062 0
c Var 'variant_fields_00002_00009_00006' direct represents '2' with '6063'
6061 -6062 6063 0
-6063 6062 0
-6063 -6061 0
c Var 'variant_fields_00002_00009_00006' order represents '3' with '6064'
-6062 6064 0
c Var 'variant_fields_00002_00009_00006' direct represents '3' with '6065'
6062 -6064 6065 0
-6065 6064 0
-6065 -6062 0
c Var 'variant_fields_00002_00009_00006' order represents '4' with '6066'
-6064 6066 0
c Var 'variant_fields_00002_00009_00006' direct represents '4' with '6067'
6064 -6066 6067 0
-6067 6066 0
-6067 -6064 0
c Var 'variant_fields_00002_00009_00006' order represents '5' with '6068'
-6066 6068 0
c Var 'variant_fields_00002_00009_00006' direct represents '5' with '6069'
6066 -6068 6069 0
-6069 6068 0
-6069 -6066 0
c Var 'variant_fields_00002_00009_00006' order represents '6' with '6070'
-6068 6070 0
c Var 'variant_fields_00002_00009_00006' direct represents '6' with '6071'
6068 -6070 6071 0
-6071 6070 0
-6071 -6068 0
c Var 'variant_fields_00002_00009_00006' order represents '7' with '6072'
-6070 6072 0
c Var 'variant_fields_00002_00009_00006' direct represents '7' with '6073'
6070 -6072 6073 0
-6073 6072 0
-6073 -6070 0
c Var 'variant_fields_00002_00009_00006' order represents '8' with '6074'
-6072 6074 0
c Var 'variant_fields_00002_00009_00006' direct represents '8' with '6075'
6072 -6074 6075 0
-6075 6074 0
-6075 -6072 0
c Var 'variant_fields_00002_00009_00006' direct represents '9' with '-6074'
6061 6063 6065 6067 6069 6071 6073 6075 -6074 0
c Encoding variable: variant_fields_00002_00009_00007 with domain: int(7) (representing constraint )
c Var 'variant_fields_00002_00009_00007' direct represents '7' with '6076'
6076 0
c Encoding variable: variant_fields_00002_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00008' order represents '1' with '6077'
c Var 'variant_fields_00002_00009_00008' direct represents '1' with '6077'
c Var 'variant_fields_00002_00009_00008' order represents '2' with '6078'
-6077 6078 0
c Var 'variant_fields_00002_00009_00008' direct represents '2' with '6079'
6077 -6078 6079 0
-6079 6078 0
-6079 -6077 0
c Var 'variant_fields_00002_00009_00008' order represents '3' with '6080'
-6078 6080 0
c Var 'variant_fields_00002_00009_00008' direct represents '3' with '6081'
6078 -6080 6081 0
-6081 6080 0
-6081 -6078 0
c Var 'variant_fields_00002_00009_00008' order represents '4' with '6082'
-6080 6082 0
c Var 'variant_fields_00002_00009_00008' direct represents '4' with '6083'
6080 -6082 6083 0
-6083 6082 0
-6083 -6080 0
c Var 'variant_fields_00002_00009_00008' order represents '5' with '6084'
-6082 6084 0
c Var 'variant_fields_00002_00009_00008' direct represents '5' with '6085'
6082 -6084 6085 0
-6085 6084 0
-6085 -6082 0
c Var 'variant_fields_00002_00009_00008' order represents '6' with '6086'
-6084 6086 0
c Var 'variant_fields_00002_00009_00008' direct represents '6' with '6087'
6084 -6086 6087 0
-6087 6086 0
-6087 -6084 0
c Var 'variant_fields_00002_00009_00008' order represents '7' with '6088'
-6086 6088 0
c Var 'variant_fields_00002_00009_00008' direct represents '7' with '6089'
6086 -6088 6089 0
-6089 6088 0
-6089 -6086 0
c Var 'variant_fields_00002_00009_00008' order represents '8' with '6090'
-6088 6090 0
c Var 'variant_fields_00002_00009_00008' direct represents '8' with '6091'
6088 -6090 6091 0
-6091 6090 0
-6091 -6088 0
c Var 'variant_fields_00002_00009_00008' direct represents '9' with '-6090'
6077 6079 6081 6083 6085 6087 6089 6091 -6090 0
c Encoding variable: variant_fields_00002_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00009' order represents '1' with '6092'
c Var 'variant_fields_00002_00009_00009' direct represents '1' with '6092'
c Var 'variant_fields_00002_00009_00009' order represents '2' with '6093'
-6092 6093 0
c Var 'variant_fields_00002_00009_00009' direct represents '2' with '6094'
6092 -6093 6094 0
-6094 6093 0
-6094 -6092 0
c Var 'variant_fields_00002_00009_00009' order represents '3' with '6095'
-6093 6095 0
c Var 'variant_fields_00002_00009_00009' direct represents '3' with '6096'
6093 -6095 6096 0
-6096 6095 0
-6096 -6093 0
c Var 'variant_fields_00002_00009_00009' order represents '4' with '6097'
-6095 6097 0
c Var 'variant_fields_00002_00009_00009' direct represents '4' with '6098'
6095 -6097 6098 0
-6098 6097 0
-6098 -6095 0
c Var 'variant_fields_00002_00009_00009' order represents '5' with '6099'
-6097 6099 0
c Var 'variant_fields_00002_00009_00009' direct represents '5' with '6100'
6097 -6099 6100 0
-6100 6099 0
-6100 -6097 0
c Var 'variant_fields_00002_00009_00009' order represents '6' with '6101'
-6099 6101 0
c Var 'variant_fields_00002_00009_00009' direct represents '6' with '6102'
6099 -6101 6102 0
-6102 6101 0
-6102 -6099 0
c Var 'variant_fields_00002_00009_00009' order represents '7' with '6103'
-6101 6103 0
c Var 'variant_fields_00002_00009_00009' direct represents '7' with '6104'
6101 -6103 6104 0
-6104 6103 0
-6104 -6101 0
c Var 'variant_fields_00002_00009_00009' order represents '8' with '6105'
-6103 6105 0
c Var 'variant_fields_00002_00009_00009' direct represents '8' with '6106'
6103 -6105 6106 0
-6106 6105 0
-6106 -6103 0
c Var 'variant_fields_00002_00009_00009' direct represents '9' with '-6105'
6092 6094 6096 6098 6100 6102 6104 6106 -6105 0
c Encoding variable: variant_fields_00003_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00001' order represents '1' with '6107'
c Var 'variant_fields_00003_00001_00001' direct represents '1' with '6107'
c Var 'variant_fields_00003_00001_00001' order represents '2' with '6108'
-6107 6108 0
c Var 'variant_fields_00003_00001_00001' direct represents '2' with '6109'
6107 -6108 6109 0
-6109 6108 0
-6109 -6107 0
c Var 'variant_fields_00003_00001_00001' order represents '3' with '6110'
-6108 6110 0
c Var 'variant_fields_00003_00001_00001' direct represents '3' with '6111'
6108 -6110 6111 0
-6111 6110 0
-6111 -6108 0
c Var 'variant_fields_00003_00001_00001' order represents '4' with '6112'
-6110 6112 0
c Var 'variant_fields_00003_00001_00001' direct represents '4' with '6113'
6110 -6112 6113 0
-6113 6112 0
-6113 -6110 0
c Var 'variant_fields_00003_00001_00001' order represents '5' with '6114'
-6112 6114 0
c Var 'variant_fields_00003_00001_00001' direct represents '5' with '6115'
6112 -6114 6115 0
-6115 6114 0
-6115 -6112 0
c Var 'variant_fields_00003_00001_00001' order represents '6' with '6116'
-6114 6116 0
c Var 'variant_fields_00003_00001_00001' direct represents '6' with '6117'
6114 -6116 6117 0
-6117 6116 0
-6117 -6114 0
c Var 'variant_fields_00003_00001_00001' order represents '7' with '6118'
-6116 6118 0
c Var 'variant_fields_00003_00001_00001' direct represents '7' with '6119'
6116 -6118 6119 0
-6119 6118 0
-6119 -6116 0
c Var 'variant_fields_00003_00001_00001' order represents '8' with '6120'
-6118 6120 0
c Var 'variant_fields_00003_00001_00001' direct represents '8' with '6121'
6118 -6120 6121 0
-6121 6120 0
-6121 -6118 0
c Var 'variant_fields_00003_00001_00001' direct represents '9' with '-6120'
6107 6109 6111 6113 6115 6117 6119 6121 -6120 0
c Encoding variable: variant_fields_00003_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00002' order represents '1' with '6122'
c Var 'variant_fields_00003_00001_00002' direct represents '1' with '6122'
c Var 'variant_fields_00003_00001_00002' order represents '2' with '6123'
-6122 6123 0
c Var 'variant_fields_00003_00001_00002' direct represents '2' with '6124'
6122 -6123 6124 0
-6124 6123 0
-6124 -6122 0
c Var 'variant_fields_00003_00001_00002' order represents '3' with '6125'
-6123 6125 0
c Var 'variant_fields_00003_00001_00002' direct represents '3' with '6126'
6123 -6125 6126 0
-6126 6125 0
-6126 -6123 0
c Var 'variant_fields_00003_00001_00002' order represents '4' with '6127'
-6125 6127 0
c Var 'variant_fields_00003_00001_00002' direct represents '4' with '6128'
6125 -6127 6128 0
-6128 6127 0
-6128 -6125 0
c Var 'variant_fields_00003_00001_00002' order represents '5' with '6129'
-6127 6129 0
c Var 'variant_fields_00003_00001_00002' direct represents '5' with '6130'
6127 -6129 6130 0
-6130 6129 0
-6130 -6127 0
c Var 'variant_fields_00003_00001_00002' order represents '6' with '6131'
-6129 6131 0
c Var 'variant_fields_00003_00001_00002' direct represents '6' with '6132'
6129 -6131 6132 0
-6132 6131 0
-6132 -6129 0
c Var 'variant_fields_00003_00001_00002' order represents '7' with '6133'
-6131 6133 0
c Var 'variant_fields_00003_00001_00002' direct represents '7' with '6134'
6131 -6133 6134 0
-6134 6133 0
-6134 -6131 0
c Var 'variant_fields_00003_00001_00002' order represents '8' with '6135'
-6133 6135 0
c Var 'variant_fields_00003_00001_00002' direct represents '8' with '6136'
6133 -6135 6136 0
-6136 6135 0
-6136 -6133 0
c Var 'variant_fields_00003_00001_00002' direct represents '9' with '-6135'
6122 6124 6126 6128 6130 6132 6134 6136 -6135 0
c Encoding variable: variant_fields_00003_00001_00003 with domain: int(5) (representing constraint )
c Var 'variant_fields_00003_00001_00003' direct represents '5' with '6137'
6137 0
c Encoding variable: variant_fields_00003_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00004' order represents '1' with '6138'
c Var 'variant_fields_00003_00001_00004' direct represents '1' with '6138'
c Var 'variant_fields_00003_00001_00004' order represents '2' with '6139'
-6138 6139 0
c Var 'variant_fields_00003_00001_00004' direct represents '2' with '6140'
6138 -6139 6140 0
-6140 6139 0
-6140 -6138 0
c Var 'variant_fields_00003_00001_00004' order represents '3' with '6141'
-6139 6141 0
c Var 'variant_fields_00003_00001_00004' direct represents '3' with '6142'
6139 -6141 6142 0
-6142 6141 0
-6142 -6139 0
c Var 'variant_fields_00003_00001_00004' order represents '4' with '6143'
-6141 6143 0
c Var 'variant_fields_00003_00001_00004' direct represents '4' with '6144'
6141 -6143 6144 0
-6144 6143 0
-6144 -6141 0
c Var 'variant_fields_00003_00001_00004' order represents '5' with '6145'
-6143 6145 0
c Var 'variant_fields_00003_00001_00004' direct represents '5' with '6146'
6143 -6145 6146 0
-6146 6145 0
-6146 -6143 0
c Var 'variant_fields_00003_00001_00004' order represents '6' with '6147'
-6145 6147 0
c Var 'variant_fields_00003_00001_00004' direct represents '6' with '6148'
6145 -6147 6148 0
-6148 6147 0
-6148 -6145 0
c Var 'variant_fields_00003_00001_00004' order represents '7' with '6149'
-6147 6149 0
c Var 'variant_fields_00003_00001_00004' direct represents '7' with '6150'
6147 -6149 6150 0
-6150 6149 0
-6150 -6147 0
c Var 'variant_fields_00003_00001_00004' order represents '8' with '6151'
-6149 6151 0
c Var 'variant_fields_00003_00001_00004' direct represents '8' with '6152'
6149 -6151 6152 0
-6152 6151 0
-6152 -6149 0
c Var 'variant_fields_00003_00001_00004' direct represents '9' with '-6151'
6138 6140 6142 6144 6146 6148 6150 6152 -6151 0
c Encoding variable: variant_fields_00003_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00005' order represents '1' with '6153'
c Var 'variant_fields_00003_00001_00005' direct represents '1' with '6153'
c Var 'variant_fields_00003_00001_00005' order represents '2' with '6154'
-6153 6154 0
c Var 'variant_fields_00003_00001_00005' direct represents '2' with '6155'
6153 -6154 6155 0
-6155 6154 0
-6155 -6153 0
c Var 'variant_fields_00003_00001_00005' order represents '3' with '6156'
-6154 6156 0
c Var 'variant_fields_00003_00001_00005' direct represents '3' with '6157'
6154 -6156 6157 0
-6157 6156 0
-6157 -6154 0
c Var 'variant_fields_00003_00001_00005' order represents '4' with '6158'
-6156 6158 0
c Var 'variant_fields_00003_00001_00005' direct represents '4' with '6159'
6156 -6158 6159 0
-6159 6158 0
-6159 -6156 0
c Var 'variant_fields_00003_00001_00005' order represents '5' with '6160'
-6158 6160 0
c Var 'variant_fields_00003_00001_00005' direct represents '5' with '6161'
6158 -6160 6161 0
-6161 6160 0
-6161 -6158 0
c Var 'variant_fields_00003_00001_00005' order represents '6' with '6162'
-6160 6162 0
c Var 'variant_fields_00003_00001_00005' direct represents '6' with '6163'
6160 -6162 6163 0
-6163 6162 0
-6163 -6160 0
c Var 'variant_fields_00003_00001_00005' order represents '7' with '6164'
-6162 6164 0
c Var 'variant_fields_00003_00001_00005' direct represents '7' with '6165'
6162 -6164 6165 0
-6165 6164 0
-6165 -6162 0
c Var 'variant_fields_00003_00001_00005' order represents '8' with '6166'
-6164 6166 0
c Var 'variant_fields_00003_00001_00005' direct represents '8' with '6167'
6164 -6166 6167 0
-6167 6166 0
-6167 -6164 0
c Var 'variant_fields_00003_00001_00005' direct represents '9' with '-6166'
6153 6155 6157 6159 6161 6163 6165 6167 -6166 0
c Encoding variable: variant_fields_00003_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00006' order represents '1' with '6168'
c Var 'variant_fields_00003_00001_00006' direct represents '1' with '6168'
c Var 'variant_fields_00003_00001_00006' order represents '2' with '6169'
-6168 6169 0
c Var 'variant_fields_00003_00001_00006' direct represents '2' with '6170'
6168 -6169 6170 0
-6170 6169 0
-6170 -6168 0
c Var 'variant_fields_00003_00001_00006' order represents '3' with '6171'
-6169 6171 0
c Var 'variant_fields_00003_00001_00006' direct represents '3' with '6172'
6169 -6171 6172 0
-6172 6171 0
-6172 -6169 0
c Var 'variant_fields_00003_00001_00006' order represents '4' with '6173'
-6171 6173 0
c Var 'variant_fields_00003_00001_00006' direct represents '4' with '6174'
6171 -6173 6174 0
-6174 6173 0
-6174 -6171 0
c Var 'variant_fields_00003_00001_00006' order represents '5' with '6175'
-6173 6175 0
c Var 'variant_fields_00003_00001_00006' direct represents '5' with '6176'
6173 -6175 6176 0
-6176 6175 0
-6176 -6173 0
c Var 'variant_fields_00003_00001_00006' order represents '6' with '6177'
-6175 6177 0
c Var 'variant_fields_00003_00001_00006' direct represents '6' with '6178'
6175 -6177 6178 0
-6178 6177 0
-6178 -6175 0
c Var 'variant_fields_00003_00001_00006' order represents '7' with '6179'
-6177 6179 0
c Var 'variant_fields_00003_00001_00006' direct represents '7' with '6180'
6177 -6179 6180 0
-6180 6179 0
-6180 -6177 0
c Var 'variant_fields_00003_00001_00006' order represents '8' with '6181'
-6179 6181 0
c Var 'variant_fields_00003_00001_00006' direct represents '8' with '6182'
6179 -6181 6182 0
-6182 6181 0
-6182 -6179 0
c Var 'variant_fields_00003_00001_00006' direct represents '9' with '-6181'
6168 6170 6172 6174 6176 6178 6180 6182 -6181 0
c Encoding variable: variant_fields_00003_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00007' order represents '1' with '6183'
c Var 'variant_fields_00003_00001_00007' direct represents '1' with '6183'
c Var 'variant_fields_00003_00001_00007' order represents '2' with '6184'
-6183 6184 0
c Var 'variant_fields_00003_00001_00007' direct represents '2' with '6185'
6183 -6184 6185 0
-6185 6184 0
-6185 -6183 0
c Var 'variant_fields_00003_00001_00007' order represents '3' with '6186'
-6184 6186 0
c Var 'variant_fields_00003_00001_00007' direct represents '3' with '6187'
6184 -6186 6187 0
-6187 6186 0
-6187 -6184 0
c Var 'variant_fields_00003_00001_00007' order represents '4' with '6188'
-6186 6188 0
c Var 'variant_fields_00003_00001_00007' direct represents '4' with '6189'
6186 -6188 6189 0
-6189 6188 0
-6189 -6186 0
c Var 'variant_fields_00003_00001_00007' order represents '5' with '6190'
-6188 6190 0
c Var 'variant_fields_00003_00001_00007' direct represents '5' with '6191'
6188 -6190 6191 0
-6191 6190 0
-6191 -6188 0
c Var 'variant_fields_00003_00001_00007' order represents '6' with '6192'
-6190 6192 0
c Var 'variant_fields_00003_00001_00007' direct represents '6' with '6193'
6190 -6192 6193 0
-6193 6192 0
-6193 -6190 0
c Var 'variant_fields_00003_00001_00007' order represents '7' with '6194'
-6192 6194 0
c Var 'variant_fields_00003_00001_00007' direct represents '7' with '6195'
6192 -6194 6195 0
-6195 6194 0
-6195 -6192 0
c Var 'variant_fields_00003_00001_00007' order represents '8' with '6196'
-6194 6196 0
c Var 'variant_fields_00003_00001_00007' direct represents '8' with '6197'
6194 -6196 6197 0
-6197 6196 0
-6197 -6194 0
c Var 'variant_fields_00003_00001_00007' direct represents '9' with '-6196'
6183 6185 6187 6189 6191 6193 6195 6197 -6196 0
c Encoding variable: variant_fields_00003_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00008' order represents '1' with '6198'
c Var 'variant_fields_00003_00001_00008' direct represents '1' with '6198'
c Var 'variant_fields_00003_00001_00008' order represents '2' with '6199'
-6198 6199 0
c Var 'variant_fields_00003_00001_00008' direct represents '2' with '6200'
6198 -6199 6200 0
-6200 6199 0
-6200 -6198 0
c Var 'variant_fields_00003_00001_00008' order represents '3' with '6201'
-6199 6201 0
c Var 'variant_fields_00003_00001_00008' direct represents '3' with '6202'
6199 -6201 6202 0
-6202 6201 0
-6202 -6199 0
c Var 'variant_fields_00003_00001_00008' order represents '4' with '6203'
-6201 6203 0
c Var 'variant_fields_00003_00001_00008' direct represents '4' with '6204'
6201 -6203 6204 0
-6204 6203 0
-6204 -6201 0
c Var 'variant_fields_00003_00001_00008' order represents '5' with '6205'
-6203 6205 0
c Var 'variant_fields_00003_00001_00008' direct represents '5' with '6206'
6203 -6205 6206 0
-6206 6205 0
-6206 -6203 0
c Var 'variant_fields_00003_00001_00008' order represents '6' with '6207'
-6205 6207 0
c Var 'variant_fields_00003_00001_00008' direct represents '6' with '6208'
6205 -6207 6208 0
-6208 6207 0
-6208 -6205 0
c Var 'variant_fields_00003_00001_00008' order represents '7' with '6209'
-6207 6209 0
c Var 'variant_fields_00003_00001_00008' direct represents '7' with '6210'
6207 -6209 6210 0
-6210 6209 0
-6210 -6207 0
c Var 'variant_fields_00003_00001_00008' order represents '8' with '6211'
-6209 6211 0
c Var 'variant_fields_00003_00001_00008' direct represents '8' with '6212'
6209 -6211 6212 0
-6212 6211 0
-6212 -6209 0
c Var 'variant_fields_00003_00001_00008' direct represents '9' with '-6211'
6198 6200 6202 6204 6206 6208 6210 6212 -6211 0
c Encoding variable: variant_fields_00003_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00009' order represents '1' with '6213'
c Var 'variant_fields_00003_00001_00009' direct represents '1' with '6213'
c Var 'variant_fields_00003_00001_00009' order represents '2' with '6214'
-6213 6214 0
c Var 'variant_fields_00003_00001_00009' direct represents '2' with '6215'
6213 -6214 6215 0
-6215 6214 0
-6215 -6213 0
c Var 'variant_fields_00003_00001_00009' order represents '3' with '6216'
-6214 6216 0
c Var 'variant_fields_00003_00001_00009' direct represents '3' with '6217'
6214 -6216 6217 0
-6217 6216 0
-6217 -6214 0
c Var 'variant_fields_00003_00001_00009' order represents '4' with '6218'
-6216 6218 0
c Var 'variant_fields_00003_00001_00009' direct represents '4' with '6219'
6216 -6218 6219 0
-6219 6218 0
-6219 -6216 0
c Var 'variant_fields_00003_00001_00009' order represents '5' with '6220'
-6218 6220 0
c Var 'variant_fields_00003_00001_00009' direct represents '5' with '6221'
6218 -6220 6221 0
-6221 6220 0
-6221 -6218 0
c Var 'variant_fields_00003_00001_00009' order represents '6' with '6222'
-6220 6222 0
c Var 'variant_fields_00003_00001_00009' direct represents '6' with '6223'
6220 -6222 6223 0
-6223 6222 0
-6223 -6220 0
c Var 'variant_fields_00003_00001_00009' order represents '7' with '6224'
-6222 6224 0
c Var 'variant_fields_00003_00001_00009' direct represents '7' with '6225'
6222 -6224 6225 0
-6225 6224 0
-6225 -6222 0
c Var 'variant_fields_00003_00001_00009' order represents '8' with '6226'
-6224 6226 0
c Var 'variant_fields_00003_00001_00009' direct represents '8' with '6227'
6224 -6226 6227 0
-6227 6226 0
-6227 -6224 0
c Var 'variant_fields_00003_00001_00009' direct represents '9' with '-6226'
6213 6215 6217 6219 6221 6223 6225 6227 -6226 0
c Encoding variable: variant_fields_00003_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00001' order represents '1' with '6228'
c Var 'variant_fields_00003_00002_00001' direct represents '1' with '6228'
c Var 'variant_fields_00003_00002_00001' order represents '2' with '6229'
-6228 6229 0
c Var 'variant_fields_00003_00002_00001' direct represents '2' with '6230'
6228 -6229 6230 0
-6230 6229 0
-6230 -6228 0
c Var 'variant_fields_00003_00002_00001' order represents '3' with '6231'
-6229 6231 0
c Var 'variant_fields_00003_00002_00001' direct represents '3' with '6232'
6229 -6231 6232 0
-6232 6231 0
-6232 -6229 0
c Var 'variant_fields_00003_00002_00001' order represents '4' with '6233'
-6231 6233 0
c Var 'variant_fields_00003_00002_00001' direct represents '4' with '6234'
6231 -6233 6234 0
-6234 6233 0
-6234 -6231 0
c Var 'variant_fields_00003_00002_00001' order represents '5' with '6235'
-6233 6235 0
c Var 'variant_fields_00003_00002_00001' direct represents '5' with '6236'
6233 -6235 6236 0
-6236 6235 0
-6236 -6233 0
c Var 'variant_fields_00003_00002_00001' order represents '6' with '6237'
-6235 6237 0
c Var 'variant_fields_00003_00002_00001' direct represents '6' with '6238'
6235 -6237 6238 0
-6238 6237 0
-6238 -6235 0
c Var 'variant_fields_00003_00002_00001' order represents '7' with '6239'
-6237 6239 0
c Var 'variant_fields_00003_00002_00001' direct represents '7' with '6240'
6237 -6239 6240 0
-6240 6239 0
-6240 -6237 0
c Var 'variant_fields_00003_00002_00001' order represents '8' with '6241'
-6239 6241 0
c Var 'variant_fields_00003_00002_00001' direct represents '8' with '6242'
6239 -6241 6242 0
-6242 6241 0
-6242 -6239 0
c Var 'variant_fields_00003_00002_00001' direct represents '9' with '-6241'
6228 6230 6232 6234 6236 6238 6240 6242 -6241 0
c Encoding variable: variant_fields_00003_00002_00002 with domain: int(7) (representing constraint )
c Var 'variant_fields_00003_00002_00002' direct represents '7' with '6243'
6243 0
c Encoding variable: variant_fields_00003_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00003' order represents '1' with '6244'
c Var 'variant_fields_00003_00002_00003' direct represents '1' with '6244'
c Var 'variant_fields_00003_00002_00003' order represents '2' with '6245'
-6244 6245 0
c Var 'variant_fields_00003_00002_00003' direct represents '2' with '6246'
6244 -6245 6246 0
-6246 6245 0
-6246 -6244 0
c Var 'variant_fields_00003_00002_00003' order represents '3' with '6247'
-6245 6247 0
c Var 'variant_fields_00003_00002_00003' direct represents '3' with '6248'
6245 -6247 6248 0
-6248 6247 0
-6248 -6245 0
c Var 'variant_fields_00003_00002_00003' order represents '4' with '6249'
-6247 6249 0
c Var 'variant_fields_00003_00002_00003' direct represents '4' with '6250'
6247 -6249 6250 0
-6250 6249 0
-6250 -6247 0
c Var 'variant_fields_00003_00002_00003' order represents '5' with '6251'
-6249 6251 0
c Var 'variant_fields_00003_00002_00003' direct represents '5' with '6252'
6249 -6251 6252 0
-6252 6251 0
-6252 -6249 0
c Var 'variant_fields_00003_00002_00003' order represents '6' with '6253'
-6251 6253 0
c Var 'variant_fields_00003_00002_00003' direct represents '6' with '6254'
6251 -6253 6254 0
-6254 6253 0
-6254 -6251 0
c Var 'variant_fields_00003_00002_00003' order represents '7' with '6255'
-6253 6255 0
c Var 'variant_fields_00003_00002_00003' direct represents '7' with '6256'
6253 -6255 6256 0
-6256 6255 0
-6256 -6253 0
c Var 'variant_fields_00003_00002_00003' order represents '8' with '6257'
-6255 6257 0
c Var 'variant_fields_00003_00002_00003' direct represents '8' with '6258'
6255 -6257 6258 0
-6258 6257 0
-6258 -6255 0
c Var 'variant_fields_00003_00002_00003' direct represents '9' with '-6257'
6244 6246 6248 6250 6252 6254 6256 6258 -6257 0
c Encoding variable: variant_fields_00003_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00004' order represents '1' with '6259'
c Var 'variant_fields_00003_00002_00004' direct represents '1' with '6259'
c Var 'variant_fields_00003_00002_00004' order represents '2' with '6260'
-6259 6260 0
c Var 'variant_fields_00003_00002_00004' direct represents '2' with '6261'
6259 -6260 6261 0
-6261 6260 0
-6261 -6259 0
c Var 'variant_fields_00003_00002_00004' order represents '3' with '6262'
-6260 6262 0
c Var 'variant_fields_00003_00002_00004' direct represents '3' with '6263'
6260 -6262 6263 0
-6263 6262 0
-6263 -6260 0
c Var 'variant_fields_00003_00002_00004' order represents '4' with '6264'
-6262 6264 0
c Var 'variant_fields_00003_00002_00004' direct represents '4' with '6265'
6262 -6264 6265 0
-6265 6264 0
-6265 -6262 0
c Var 'variant_fields_00003_00002_00004' order represents '5' with '6266'
-6264 6266 0
c Var 'variant_fields_00003_00002_00004' direct represents '5' with '6267'
6264 -6266 6267 0
-6267 6266 0
-6267 -6264 0
c Var 'variant_fields_00003_00002_00004' order represents '6' with '6268'
-6266 6268 0
c Var 'variant_fields_00003_00002_00004' direct represents '6' with '6269'
6266 -6268 6269 0
-6269 6268 0
-6269 -6266 0
c Var 'variant_fields_00003_00002_00004' order represents '7' with '6270'
-6268 6270 0
c Var 'variant_fields_00003_00002_00004' direct represents '7' with '6271'
6268 -6270 6271 0
-6271 6270 0
-6271 -6268 0
c Var 'variant_fields_00003_00002_00004' order represents '8' with '6272'
-6270 6272 0
c Var 'variant_fields_00003_00002_00004' direct represents '8' with '6273'
6270 -6272 6273 0
-6273 6272 0
-6273 -6270 0
c Var 'variant_fields_00003_00002_00004' direct represents '9' with '-6272'
6259 6261 6263 6265 6267 6269 6271 6273 -6272 0
c Encoding variable: variant_fields_00003_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00005' order represents '1' with '6274'
c Var 'variant_fields_00003_00002_00005' direct represents '1' with '6274'
c Var 'variant_fields_00003_00002_00005' order represents '2' with '6275'
-6274 6275 0
c Var 'variant_fields_00003_00002_00005' direct represents '2' with '6276'
6274 -6275 6276 0
-6276 6275 0
-6276 -6274 0
c Var 'variant_fields_00003_00002_00005' order represents '3' with '6277'
-6275 6277 0
c Var 'variant_fields_00003_00002_00005' direct represents '3' with '6278'
6275 -6277 6278 0
-6278 6277 0
-6278 -6275 0
c Var 'variant_fields_00003_00002_00005' order represents '4' with '6279'
-6277 6279 0
c Var 'variant_fields_00003_00002_00005' direct represents '4' with '6280'
6277 -6279 6280 0
-6280 6279 0
-6280 -6277 0
c Var 'variant_fields_00003_00002_00005' order represents '5' with '6281'
-6279 6281 0
c Var 'variant_fields_00003_00002_00005' direct represents '5' with '6282'
6279 -6281 6282 0
-6282 6281 0
-6282 -6279 0
c Var 'variant_fields_00003_00002_00005' order represents '6' with '6283'
-6281 6283 0
c Var 'variant_fields_00003_00002_00005' direct represents '6' with '6284'
6281 -6283 6284 0
-6284 6283 0
-6284 -6281 0
c Var 'variant_fields_00003_00002_00005' order represents '7' with '6285'
-6283 6285 0
c Var 'variant_fields_00003_00002_00005' direct represents '7' with '6286'
6283 -6285 6286 0
-6286 6285 0
-6286 -6283 0
c Var 'variant_fields_00003_00002_00005' order represents '8' with '6287'
-6285 6287 0
c Var 'variant_fields_00003_00002_00005' direct represents '8' with '6288'
6285 -6287 6288 0
-6288 6287 0
-6288 -6285 0
c Var 'variant_fields_00003_00002_00005' direct represents '9' with '-6287'
6274 6276 6278 6280 6282 6284 6286 6288 -6287 0
c Encoding variable: variant_fields_00003_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00006' order represents '1' with '6289'
c Var 'variant_fields_00003_00002_00006' direct represents '1' with '6289'
c Var 'variant_fields_00003_00002_00006' order represents '2' with '6290'
-6289 6290 0
c Var 'variant_fields_00003_00002_00006' direct represents '2' with '6291'
6289 -6290 6291 0
-6291 6290 0
-6291 -6289 0
c Var 'variant_fields_00003_00002_00006' order represents '3' with '6292'
-6290 6292 0
c Var 'variant_fields_00003_00002_00006' direct represents '3' with '6293'
6290 -6292 6293 0
-6293 6292 0
-6293 -6290 0
c Var 'variant_fields_00003_00002_00006' order represents '4' with '6294'
-6292 6294 0
c Var 'variant_fields_00003_00002_00006' direct represents '4' with '6295'
6292 -6294 6295 0
-6295 6294 0
-6295 -6292 0
c Var 'variant_fields_00003_00002_00006' order represents '5' with '6296'
-6294 6296 0
c Var 'variant_fields_00003_00002_00006' direct represents '5' with '6297'
6294 -6296 6297 0
-6297 6296 0
-6297 -6294 0
c Var 'variant_fields_00003_00002_00006' order represents '6' with '6298'
-6296 6298 0
c Var 'variant_fields_00003_00002_00006' direct represents '6' with '6299'
6296 -6298 6299 0
-6299 6298 0
-6299 -6296 0
c Var 'variant_fields_00003_00002_00006' order represents '7' with '6300'
-6298 6300 0
c Var 'variant_fields_00003_00002_00006' direct represents '7' with '6301'
6298 -6300 6301 0
-6301 6300 0
-6301 -6298 0
c Var 'variant_fields_00003_00002_00006' order represents '8' with '6302'
-6300 6302 0
c Var 'variant_fields_00003_00002_00006' direct represents '8' with '6303'
6300 -6302 6303 0
-6303 6302 0
-6303 -6300 0
c Var 'variant_fields_00003_00002_00006' direct represents '9' with '-6302'
6289 6291 6293 6295 6297 6299 6301 6303 -6302 0
c Encoding variable: variant_fields_00003_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00007' order represents '1' with '6304'
c Var 'variant_fields_00003_00002_00007' direct represents '1' with '6304'
c Var 'variant_fields_00003_00002_00007' order represents '2' with '6305'
-6304 6305 0
c Var 'variant_fields_00003_00002_00007' direct represents '2' with '6306'
6304 -6305 6306 0
-6306 6305 0
-6306 -6304 0
c Var 'variant_fields_00003_00002_00007' order represents '3' with '6307'
-6305 6307 0
c Var 'variant_fields_00003_00002_00007' direct represents '3' with '6308'
6305 -6307 6308 0
-6308 6307 0
-6308 -6305 0
c Var 'variant_fields_00003_00002_00007' order represents '4' with '6309'
-6307 6309 0
c Var 'variant_fields_00003_00002_00007' direct represents '4' with '6310'
6307 -6309 6310 0
-6310 6309 0
-6310 -6307 0
c Var 'variant_fields_00003_00002_00007' order represents '5' with '6311'
-6309 6311 0
c Var 'variant_fields_00003_00002_00007' direct represents '5' with '6312'
6309 -6311 6312 0
-6312 6311 0
-6312 -6309 0
c Var 'variant_fields_00003_00002_00007' order represents '6' with '6313'
-6311 6313 0
c Var 'variant_fields_00003_00002_00007' direct represents '6' with '6314'
6311 -6313 6314 0
-6314 6313 0
-6314 -6311 0
c Var 'variant_fields_00003_00002_00007' order represents '7' with '6315'
-6313 6315 0
c Var 'variant_fields_00003_00002_00007' direct represents '7' with '6316'
6313 -6315 6316 0
-6316 6315 0
-6316 -6313 0
c Var 'variant_fields_00003_00002_00007' order represents '8' with '6317'
-6315 6317 0
c Var 'variant_fields_00003_00002_00007' direct represents '8' with '6318'
6315 -6317 6318 0
-6318 6317 0
-6318 -6315 0
c Var 'variant_fields_00003_00002_00007' direct represents '9' with '-6317'
6304 6306 6308 6310 6312 6314 6316 6318 -6317 0
c Encoding variable: variant_fields_00003_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00008' order represents '1' with '6319'
c Var 'variant_fields_00003_00002_00008' direct represents '1' with '6319'
c Var 'variant_fields_00003_00002_00008' order represents '2' with '6320'
-6319 6320 0
c Var 'variant_fields_00003_00002_00008' direct represents '2' with '6321'
6319 -6320 6321 0
-6321 6320 0
-6321 -6319 0
c Var 'variant_fields_00003_00002_00008' order represents '3' with '6322'
-6320 6322 0
c Var 'variant_fields_00003_00002_00008' direct represents '3' with '6323'
6320 -6322 6323 0
-6323 6322 0
-6323 -6320 0
c Var 'variant_fields_00003_00002_00008' order represents '4' with '6324'
-6322 6324 0
c Var 'variant_fields_00003_00002_00008' direct represents '4' with '6325'
6322 -6324 6325 0
-6325 6324 0
-6325 -6322 0
c Var 'variant_fields_00003_00002_00008' order represents '5' with '6326'
-6324 6326 0
c Var 'variant_fields_00003_00002_00008' direct represents '5' with '6327'
6324 -6326 6327 0
-6327 6326 0
-6327 -6324 0
c Var 'variant_fields_00003_00002_00008' order represents '6' with '6328'
-6326 6328 0
c Var 'variant_fields_00003_00002_00008' direct represents '6' with '6329'
6326 -6328 6329 0
-6329 6328 0
-6329 -6326 0
c Var 'variant_fields_00003_00002_00008' order represents '7' with '6330'
-6328 6330 0
c Var 'variant_fields_00003_00002_00008' direct represents '7' with '6331'
6328 -6330 6331 0
-6331 6330 0
-6331 -6328 0
c Var 'variant_fields_00003_00002_00008' order represents '8' with '6332'
-6330 6332 0
c Var 'variant_fields_00003_00002_00008' direct represents '8' with '6333'
6330 -6332 6333 0
-6333 6332 0
-6333 -6330 0
c Var 'variant_fields_00003_00002_00008' direct represents '9' with '-6332'
6319 6321 6323 6325 6327 6329 6331 6333 -6332 0
c Encoding variable: variant_fields_00003_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00009' order represents '1' with '6334'
c Var 'variant_fields_00003_00002_00009' direct represents '1' with '6334'
c Var 'variant_fields_00003_00002_00009' order represents '2' with '6335'
-6334 6335 0
c Var 'variant_fields_00003_00002_00009' direct represents '2' with '6336'
6334 -6335 6336 0
-6336 6335 0
-6336 -6334 0
c Var 'variant_fields_00003_00002_00009' order represents '3' with '6337'
-6335 6337 0
c Var 'variant_fields_00003_00002_00009' direct represents '3' with '6338'
6335 -6337 6338 0
-6338 6337 0
-6338 -6335 0
c Var 'variant_fields_00003_00002_00009' order represents '4' with '6339'
-6337 6339 0
c Var 'variant_fields_00003_00002_00009' direct represents '4' with '6340'
6337 -6339 6340 0
-6340 6339 0
-6340 -6337 0
c Var 'variant_fields_00003_00002_00009' order represents '5' with '6341'
-6339 6341 0
c Var 'variant_fields_00003_00002_00009' direct represents '5' with '6342'
6339 -6341 6342 0
-6342 6341 0
-6342 -6339 0
c Var 'variant_fields_00003_00002_00009' order represents '6' with '6343'
-6341 6343 0
c Var 'variant_fields_00003_00002_00009' direct represents '6' with '6344'
6341 -6343 6344 0
-6344 6343 0
-6344 -6341 0
c Var 'variant_fields_00003_00002_00009' order represents '7' with '6345'
-6343 6345 0
c Var 'variant_fields_00003_00002_00009' direct represents '7' with '6346'
6343 -6345 6346 0
-6346 6345 0
-6346 -6343 0
c Var 'variant_fields_00003_00002_00009' order represents '8' with '6347'
-6345 6347 0
c Var 'variant_fields_00003_00002_00009' direct represents '8' with '6348'
6345 -6347 6348 0
-6348 6347 0
-6348 -6345 0
c Var 'variant_fields_00003_00002_00009' direct represents '9' with '-6347'
6334 6336 6338 6340 6342 6344 6346 6348 -6347 0
c Encoding variable: variant_fields_00003_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00001' order represents '1' with '6349'
c Var 'variant_fields_00003_00003_00001' direct represents '1' with '6349'
c Var 'variant_fields_00003_00003_00001' order represents '2' with '6350'
-6349 6350 0
c Var 'variant_fields_00003_00003_00001' direct represents '2' with '6351'
6349 -6350 6351 0
-6351 6350 0
-6351 -6349 0
c Var 'variant_fields_00003_00003_00001' order represents '3' with '6352'
-6350 6352 0
c Var 'variant_fields_00003_00003_00001' direct represents '3' with '6353'
6350 -6352 6353 0
-6353 6352 0
-6353 -6350 0
c Var 'variant_fields_00003_00003_00001' order represents '4' with '6354'
-6352 6354 0
c Var 'variant_fields_00003_00003_00001' direct represents '4' with '6355'
6352 -6354 6355 0
-6355 6354 0
-6355 -6352 0
c Var 'variant_fields_00003_00003_00001' order represents '5' with '6356'
-6354 6356 0
c Var 'variant_fields_00003_00003_00001' direct represents '5' with '6357'
6354 -6356 6357 0
-6357 6356 0
-6357 -6354 0
c Var 'variant_fields_00003_00003_00001' order represents '6' with '6358'
-6356 6358 0
c Var 'variant_fields_00003_00003_00001' direct represents '6' with '6359'
6356 -6358 6359 0
-6359 6358 0
-6359 -6356 0
c Var 'variant_fields_00003_00003_00001' order represents '7' with '6360'
-6358 6360 0
c Var 'variant_fields_00003_00003_00001' direct represents '7' with '6361'
6358 -6360 6361 0
-6361 6360 0
-6361 -6358 0
c Var 'variant_fields_00003_00003_00001' order represents '8' with '6362'
-6360 6362 0
c Var 'variant_fields_00003_00003_00001' direct represents '8' with '6363'
6360 -6362 6363 0
-6363 6362 0
-6363 -6360 0
c Var 'variant_fields_00003_00003_00001' direct represents '9' with '-6362'
6349 6351 6353 6355 6357 6359 6361 6363 -6362 0
c Encoding variable: variant_fields_00003_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00002' order represents '1' with '6364'
c Var 'variant_fields_00003_00003_00002' direct represents '1' with '6364'
c Var 'variant_fields_00003_00003_00002' order represents '2' with '6365'
-6364 6365 0
c Var 'variant_fields_00003_00003_00002' direct represents '2' with '6366'
6364 -6365 6366 0
-6366 6365 0
-6366 -6364 0
c Var 'variant_fields_00003_00003_00002' order represents '3' with '6367'
-6365 6367 0
c Var 'variant_fields_00003_00003_00002' direct represents '3' with '6368'
6365 -6367 6368 0
-6368 6367 0
-6368 -6365 0
c Var 'variant_fields_00003_00003_00002' order represents '4' with '6369'
-6367 6369 0
c Var 'variant_fields_00003_00003_00002' direct represents '4' with '6370'
6367 -6369 6370 0
-6370 6369 0
-6370 -6367 0
c Var 'variant_fields_00003_00003_00002' order represents '5' with '6371'
-6369 6371 0
c Var 'variant_fields_00003_00003_00002' direct represents '5' with '6372'
6369 -6371 6372 0
-6372 6371 0
-6372 -6369 0
c Var 'variant_fields_00003_00003_00002' order represents '6' with '6373'
-6371 6373 0
c Var 'variant_fields_00003_00003_00002' direct represents '6' with '6374'
6371 -6373 6374 0
-6374 6373 0
-6374 -6371 0
c Var 'variant_fields_00003_00003_00002' order represents '7' with '6375'
-6373 6375 0
c Var 'variant_fields_00003_00003_00002' direct represents '7' with '6376'
6373 -6375 6376 0
-6376 6375 0
-6376 -6373 0
c Var 'variant_fields_00003_00003_00002' order represents '8' with '6377'
-6375 6377 0
c Var 'variant_fields_00003_00003_00002' direct represents '8' with '6378'
6375 -6377 6378 0
-6378 6377 0
-6378 -6375 0
c Var 'variant_fields_00003_00003_00002' direct represents '9' with '-6377'
6364 6366 6368 6370 6372 6374 6376 6378 -6377 0
c Encoding variable: variant_fields_00003_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00003' order represents '1' with '6379'
c Var 'variant_fields_00003_00003_00003' direct represents '1' with '6379'
c Var 'variant_fields_00003_00003_00003' order represents '2' with '6380'
-6379 6380 0
c Var 'variant_fields_00003_00003_00003' direct represents '2' with '6381'
6379 -6380 6381 0
-6381 6380 0
-6381 -6379 0
c Var 'variant_fields_00003_00003_00003' order represents '3' with '6382'
-6380 6382 0
c Var 'variant_fields_00003_00003_00003' direct represents '3' with '6383'
6380 -6382 6383 0
-6383 6382 0
-6383 -6380 0
c Var 'variant_fields_00003_00003_00003' order represents '4' with '6384'
-6382 6384 0
c Var 'variant_fields_00003_00003_00003' direct represents '4' with '6385'
6382 -6384 6385 0
-6385 6384 0
-6385 -6382 0
c Var 'variant_fields_00003_00003_00003' order represents '5' with '6386'
-6384 6386 0
c Var 'variant_fields_00003_00003_00003' direct represents '5' with '6387'
6384 -6386 6387 0
-6387 6386 0
-6387 -6384 0
c Var 'variant_fields_00003_00003_00003' order represents '6' with '6388'
-6386 6388 0
c Var 'variant_fields_00003_00003_00003' direct represents '6' with '6389'
6386 -6388 6389 0
-6389 6388 0
-6389 -6386 0
c Var 'variant_fields_00003_00003_00003' order represents '7' with '6390'
-6388 6390 0
c Var 'variant_fields_00003_00003_00003' direct represents '7' with '6391'
6388 -6390 6391 0
-6391 6390 0
-6391 -6388 0
c Var 'variant_fields_00003_00003_00003' order represents '8' with '6392'
-6390 6392 0
c Var 'variant_fields_00003_00003_00003' direct represents '8' with '6393'
6390 -6392 6393 0
-6393 6392 0
-6393 -6390 0
c Var 'variant_fields_00003_00003_00003' direct represents '9' with '-6392'
6379 6381 6383 6385 6387 6389 6391 6393 -6392 0
c Encoding variable: variant_fields_00003_00003_00004 with domain: int(6) (representing constraint )
c Var 'variant_fields_00003_00003_00004' direct represents '6' with '6394'
6394 0
c Encoding variable: variant_fields_00003_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00005' order represents '1' with '6395'
c Var 'variant_fields_00003_00003_00005' direct represents '1' with '6395'
c Var 'variant_fields_00003_00003_00005' order represents '2' with '6396'
-6395 6396 0
c Var 'variant_fields_00003_00003_00005' direct represents '2' with '6397'
6395 -6396 6397 0
-6397 6396 0
-6397 -6395 0
c Var 'variant_fields_00003_00003_00005' order represents '3' with '6398'
-6396 6398 0
c Var 'variant_fields_00003_00003_00005' direct represents '3' with '6399'
6396 -6398 6399 0
-6399 6398 0
-6399 -6396 0
c Var 'variant_fields_00003_00003_00005' order represents '4' with '6400'
-6398 6400 0
c Var 'variant_fields_00003_00003_00005' direct represents '4' with '6401'
6398 -6400 6401 0
-6401 6400 0
-6401 -6398 0
c Var 'variant_fields_00003_00003_00005' order represents '5' with '6402'
-6400 6402 0
c Var 'variant_fields_00003_00003_00005' direct represents '5' with '6403'
6400 -6402 6403 0
-6403 6402 0
-6403 -6400 0
c Var 'variant_fields_00003_00003_00005' order represents '6' with '6404'
-6402 6404 0
c Var 'variant_fields_00003_00003_00005' direct represents '6' with '6405'
6402 -6404 6405 0
-6405 6404 0
-6405 -6402 0
c Var 'variant_fields_00003_00003_00005' order represents '7' with '6406'
-6404 6406 0
c Var 'variant_fields_00003_00003_00005' direct represents '7' with '6407'
6404 -6406 6407 0
-6407 6406 0
-6407 -6404 0
c Var 'variant_fields_00003_00003_00005' order represents '8' with '6408'
-6406 6408 0
c Var 'variant_fields_00003_00003_00005' direct represents '8' with '6409'
6406 -6408 6409 0
-6409 6408 0
-6409 -6406 0
c Var 'variant_fields_00003_00003_00005' direct represents '9' with '-6408'
6395 6397 6399 6401 6403 6405 6407 6409 -6408 0
c Encoding variable: variant_fields_00003_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00006' order represents '1' with '6410'
c Var 'variant_fields_00003_00003_00006' direct represents '1' with '6410'
c Var 'variant_fields_00003_00003_00006' order represents '2' with '6411'
-6410 6411 0
c Var 'variant_fields_00003_00003_00006' direct represents '2' with '6412'
6410 -6411 6412 0
-6412 6411 0
-6412 -6410 0
c Var 'variant_fields_00003_00003_00006' order represents '3' with '6413'
-6411 6413 0
c Var 'variant_fields_00003_00003_00006' direct represents '3' with '6414'
6411 -6413 6414 0
-6414 6413 0
-6414 -6411 0
c Var 'variant_fields_00003_00003_00006' order represents '4' with '6415'
-6413 6415 0
c Var 'variant_fields_00003_00003_00006' direct represents '4' with '6416'
6413 -6415 6416 0
-6416 6415 0
-6416 -6413 0
c Var 'variant_fields_00003_00003_00006' order represents '5' with '6417'
-6415 6417 0
c Var 'variant_fields_00003_00003_00006' direct represents '5' with '6418'
6415 -6417 6418 0
-6418 6417 0
-6418 -6415 0
c Var 'variant_fields_00003_00003_00006' order represents '6' with '6419'
-6417 6419 0
c Var 'variant_fields_00003_00003_00006' direct represents '6' with '6420'
6417 -6419 6420 0
-6420 6419 0
-6420 -6417 0
c Var 'variant_fields_00003_00003_00006' order represents '7' with '6421'
-6419 6421 0
c Var 'variant_fields_00003_00003_00006' direct represents '7' with '6422'
6419 -6421 6422 0
-6422 6421 0
-6422 -6419 0
c Var 'variant_fields_00003_00003_00006' order represents '8' with '6423'
-6421 6423 0
c Var 'variant_fields_00003_00003_00006' direct represents '8' with '6424'
6421 -6423 6424 0
-6424 6423 0
-6424 -6421 0
c Var 'variant_fields_00003_00003_00006' direct represents '9' with '-6423'
6410 6412 6414 6416 6418 6420 6422 6424 -6423 0
c Encoding variable: variant_fields_00003_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00007' order represents '1' with '6425'
c Var 'variant_fields_00003_00003_00007' direct represents '1' with '6425'
c Var 'variant_fields_00003_00003_00007' order represents '2' with '6426'
-6425 6426 0
c Var 'variant_fields_00003_00003_00007' direct represents '2' with '6427'
6425 -6426 6427 0
-6427 6426 0
-6427 -6425 0
c Var 'variant_fields_00003_00003_00007' order represents '3' with '6428'
-6426 6428 0
c Var 'variant_fields_00003_00003_00007' direct represents '3' with '6429'
6426 -6428 6429 0
-6429 6428 0
-6429 -6426 0
c Var 'variant_fields_00003_00003_00007' order represents '4' with '6430'
-6428 6430 0
c Var 'variant_fields_00003_00003_00007' direct represents '4' with '6431'
6428 -6430 6431 0
-6431 6430 0
-6431 -6428 0
c Var 'variant_fields_00003_00003_00007' order represents '5' with '6432'
-6430 6432 0
c Var 'variant_fields_00003_00003_00007' direct represents '5' with '6433'
6430 -6432 6433 0
-6433 6432 0
-6433 -6430 0
c Var 'variant_fields_00003_00003_00007' order represents '6' with '6434'
-6432 6434 0
c Var 'variant_fields_00003_00003_00007' direct represents '6' with '6435'
6432 -6434 6435 0
-6435 6434 0
-6435 -6432 0
c Var 'variant_fields_00003_00003_00007' order represents '7' with '6436'
-6434 6436 0
c Var 'variant_fields_00003_00003_00007' direct represents '7' with '6437'
6434 -6436 6437 0
-6437 6436 0
-6437 -6434 0
c Var 'variant_fields_00003_00003_00007' order represents '8' with '6438'
-6436 6438 0
c Var 'variant_fields_00003_00003_00007' direct represents '8' with '6439'
6436 -6438 6439 0
-6439 6438 0
-6439 -6436 0
c Var 'variant_fields_00003_00003_00007' direct represents '9' with '-6438'
6425 6427 6429 6431 6433 6435 6437 6439 -6438 0
c Encoding variable: variant_fields_00003_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00008' order represents '1' with '6440'
c Var 'variant_fields_00003_00003_00008' direct represents '1' with '6440'
c Var 'variant_fields_00003_00003_00008' order represents '2' with '6441'
-6440 6441 0
c Var 'variant_fields_00003_00003_00008' direct represents '2' with '6442'
6440 -6441 6442 0
-6442 6441 0
-6442 -6440 0
c Var 'variant_fields_00003_00003_00008' order represents '3' with '6443'
-6441 6443 0
c Var 'variant_fields_00003_00003_00008' direct represents '3' with '6444'
6441 -6443 6444 0
-6444 6443 0
-6444 -6441 0
c Var 'variant_fields_00003_00003_00008' order represents '4' with '6445'
-6443 6445 0
c Var 'variant_fields_00003_00003_00008' direct represents '4' with '6446'
6443 -6445 6446 0
-6446 6445 0
-6446 -6443 0
c Var 'variant_fields_00003_00003_00008' order represents '5' with '6447'
-6445 6447 0
c Var 'variant_fields_00003_00003_00008' direct represents '5' with '6448'
6445 -6447 6448 0
-6448 6447 0
-6448 -6445 0
c Var 'variant_fields_00003_00003_00008' order represents '6' with '6449'
-6447 6449 0
c Var 'variant_fields_00003_00003_00008' direct represents '6' with '6450'
6447 -6449 6450 0
-6450 6449 0
-6450 -6447 0
c Var 'variant_fields_00003_00003_00008' order represents '7' with '6451'
-6449 6451 0
c Var 'variant_fields_00003_00003_00008' direct represents '7' with '6452'
6449 -6451 6452 0
-6452 6451 0
-6452 -6449 0
c Var 'variant_fields_00003_00003_00008' order represents '8' with '6453'
-6451 6453 0
c Var 'variant_fields_00003_00003_00008' direct represents '8' with '6454'
6451 -6453 6454 0
-6454 6453 0
-6454 -6451 0
c Var 'variant_fields_00003_00003_00008' direct represents '9' with '-6453'
6440 6442 6444 6446 6448 6450 6452 6454 -6453 0
c Encoding variable: variant_fields_00003_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00009' order represents '1' with '6455'
c Var 'variant_fields_00003_00003_00009' direct represents '1' with '6455'
c Var 'variant_fields_00003_00003_00009' order represents '2' with '6456'
-6455 6456 0
c Var 'variant_fields_00003_00003_00009' direct represents '2' with '6457'
6455 -6456 6457 0
-6457 6456 0
-6457 -6455 0
c Var 'variant_fields_00003_00003_00009' order represents '3' with '6458'
-6456 6458 0
c Var 'variant_fields_00003_00003_00009' direct represents '3' with '6459'
6456 -6458 6459 0
-6459 6458 0
-6459 -6456 0
c Var 'variant_fields_00003_00003_00009' order represents '4' with '6460'
-6458 6460 0
c Var 'variant_fields_00003_00003_00009' direct represents '4' with '6461'
6458 -6460 6461 0
-6461 6460 0
-6461 -6458 0
c Var 'variant_fields_00003_00003_00009' order represents '5' with '6462'
-6460 6462 0
c Var 'variant_fields_00003_00003_00009' direct represents '5' with '6463'
6460 -6462 6463 0
-6463 6462 0
-6463 -6460 0
c Var 'variant_fields_00003_00003_00009' order represents '6' with '6464'
-6462 6464 0
c Var 'variant_fields_00003_00003_00009' direct represents '6' with '6465'
6462 -6464 6465 0
-6465 6464 0
-6465 -6462 0
c Var 'variant_fields_00003_00003_00009' order represents '7' with '6466'
-6464 6466 0
c Var 'variant_fields_00003_00003_00009' direct represents '7' with '6467'
6464 -6466 6467 0
-6467 6466 0
-6467 -6464 0
c Var 'variant_fields_00003_00003_00009' order represents '8' with '6468'
-6466 6468 0
c Var 'variant_fields_00003_00003_00009' direct represents '8' with '6469'
6466 -6468 6469 0
-6469 6468 0
-6469 -6466 0
c Var 'variant_fields_00003_00003_00009' direct represents '9' with '-6468'
6455 6457 6459 6461 6463 6465 6467 6469 -6468 0
c Encoding variable: variant_fields_00003_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00001' order represents '1' with '6470'
c Var 'variant_fields_00003_00004_00001' direct represents '1' with '6470'
c Var 'variant_fields_00003_00004_00001' order represents '2' with '6471'
-6470 6471 0
c Var 'variant_fields_00003_00004_00001' direct represents '2' with '6472'
6470 -6471 6472 0
-6472 6471 0
-6472 -6470 0
c Var 'variant_fields_00003_00004_00001' order represents '3' with '6473'
-6471 6473 0
c Var 'variant_fields_00003_00004_00001' direct represents '3' with '6474'
6471 -6473 6474 0
-6474 6473 0
-6474 -6471 0
c Var 'variant_fields_00003_00004_00001' order represents '4' with '6475'
-6473 6475 0
c Var 'variant_fields_00003_00004_00001' direct represents '4' with '6476'
6473 -6475 6476 0
-6476 6475 0
-6476 -6473 0
c Var 'variant_fields_00003_00004_00001' order represents '5' with '6477'
-6475 6477 0
c Var 'variant_fields_00003_00004_00001' direct represents '5' with '6478'
6475 -6477 6478 0
-6478 6477 0
-6478 -6475 0
c Var 'variant_fields_00003_00004_00001' order represents '6' with '6479'
-6477 6479 0
c Var 'variant_fields_00003_00004_00001' direct represents '6' with '6480'
6477 -6479 6480 0
-6480 6479 0
-6480 -6477 0
c Var 'variant_fields_00003_00004_00001' order represents '7' with '6481'
-6479 6481 0
c Var 'variant_fields_00003_00004_00001' direct represents '7' with '6482'
6479 -6481 6482 0
-6482 6481 0
-6482 -6479 0
c Var 'variant_fields_00003_00004_00001' order represents '8' with '6483'
-6481 6483 0
c Var 'variant_fields_00003_00004_00001' direct represents '8' with '6484'
6481 -6483 6484 0
-6484 6483 0
-6484 -6481 0
c Var 'variant_fields_00003_00004_00001' direct represents '9' with '-6483'
6470 6472 6474 6476 6478 6480 6482 6484 -6483 0
c Encoding variable: variant_fields_00003_00004_00002 with domain: int(3) (representing constraint )
c Var 'variant_fields_00003_00004_00002' direct represents '3' with '6485'
6485 0
c Encoding variable: variant_fields_00003_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00003' order represents '1' with '6486'
c Var 'variant_fields_00003_00004_00003' direct represents '1' with '6486'
c Var 'variant_fields_00003_00004_00003' order represents '2' with '6487'
-6486 6487 0
c Var 'variant_fields_00003_00004_00003' direct represents '2' with '6488'
6486 -6487 6488 0
-6488 6487 0
-6488 -6486 0
c Var 'variant_fields_00003_00004_00003' order represents '3' with '6489'
-6487 6489 0
c Var 'variant_fields_00003_00004_00003' direct represents '3' with '6490'
6487 -6489 6490 0
-6490 6489 0
-6490 -6487 0
c Var 'variant_fields_00003_00004_00003' order represents '4' with '6491'
-6489 6491 0
c Var 'variant_fields_00003_00004_00003' direct represents '4' with '6492'
6489 -6491 6492 0
-6492 6491 0
-6492 -6489 0
c Var 'variant_fields_00003_00004_00003' order represents '5' with '6493'
-6491 6493 0
c Var 'variant_fields_00003_00004_00003' direct represents '5' with '6494'
6491 -6493 6494 0
-6494 6493 0
-6494 -6491 0
c Var 'variant_fields_00003_00004_00003' order represents '6' with '6495'
-6493 6495 0
c Var 'variant_fields_00003_00004_00003' direct represents '6' with '6496'
6493 -6495 6496 0
-6496 6495 0
-6496 -6493 0
c Var 'variant_fields_00003_00004_00003' order represents '7' with '6497'
-6495 6497 0
c Var 'variant_fields_00003_00004_00003' direct represents '7' with '6498'
6495 -6497 6498 0
-6498 6497 0
-6498 -6495 0
c Var 'variant_fields_00003_00004_00003' order represents '8' with '6499'
-6497 6499 0
c Var 'variant_fields_00003_00004_00003' direct represents '8' with '6500'
6497 -6499 6500 0
-6500 6499 0
-6500 -6497 0
c Var 'variant_fields_00003_00004_00003' direct represents '9' with '-6499'
6486 6488 6490 6492 6494 6496 6498 6500 -6499 0
c Encoding variable: variant_fields_00003_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00004' order represents '1' with '6501'
c Var 'variant_fields_00003_00004_00004' direct represents '1' with '6501'
c Var 'variant_fields_00003_00004_00004' order represents '2' with '6502'
-6501 6502 0
c Var 'variant_fields_00003_00004_00004' direct represents '2' with '6503'
6501 -6502 6503 0
-6503 6502 0
-6503 -6501 0
c Var 'variant_fields_00003_00004_00004' order represents '3' with '6504'
-6502 6504 0
c Var 'variant_fields_00003_00004_00004' direct represents '3' with '6505'
6502 -6504 6505 0
-6505 6504 0
-6505 -6502 0
c Var 'variant_fields_00003_00004_00004' order represents '4' with '6506'
-6504 6506 0
c Var 'variant_fields_00003_00004_00004' direct represents '4' with '6507'
6504 -6506 6507 0
-6507 6506 0
-6507 -6504 0
c Var 'variant_fields_00003_00004_00004' order represents '5' with '6508'
-6506 6508 0
c Var 'variant_fields_00003_00004_00004' direct represents '5' with '6509'
6506 -6508 6509 0
-6509 6508 0
-6509 -6506 0
c Var 'variant_fields_00003_00004_00004' order represents '6' with '6510'
-6508 6510 0
c Var 'variant_fields_00003_00004_00004' direct represents '6' with '6511'
6508 -6510 6511 0
-6511 6510 0
-6511 -6508 0
c Var 'variant_fields_00003_00004_00004' order represents '7' with '6512'
-6510 6512 0
c Var 'variant_fields_00003_00004_00004' direct represents '7' with '6513'
6510 -6512 6513 0
-6513 6512 0
-6513 -6510 0
c Var 'variant_fields_00003_00004_00004' order represents '8' with '6514'
-6512 6514 0
c Var 'variant_fields_00003_00004_00004' direct represents '8' with '6515'
6512 -6514 6515 0
-6515 6514 0
-6515 -6512 0
c Var 'variant_fields_00003_00004_00004' direct represents '9' with '-6514'
6501 6503 6505 6507 6509 6511 6513 6515 -6514 0
c Encoding variable: variant_fields_00003_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00005' order represents '1' with '6516'
c Var 'variant_fields_00003_00004_00005' direct represents '1' with '6516'
c Var 'variant_fields_00003_00004_00005' order represents '2' with '6517'
-6516 6517 0
c Var 'variant_fields_00003_00004_00005' direct represents '2' with '6518'
6516 -6517 6518 0
-6518 6517 0
-6518 -6516 0
c Var 'variant_fields_00003_00004_00005' order represents '3' with '6519'
-6517 6519 0
c Var 'variant_fields_00003_00004_00005' direct represents '3' with '6520'
6517 -6519 6520 0
-6520 6519 0
-6520 -6517 0
c Var 'variant_fields_00003_00004_00005' order represents '4' with '6521'
-6519 6521 0
c Var 'variant_fields_00003_00004_00005' direct represents '4' with '6522'
6519 -6521 6522 0
-6522 6521 0
-6522 -6519 0
c Var 'variant_fields_00003_00004_00005' order represents '5' with '6523'
-6521 6523 0
c Var 'variant_fields_00003_00004_00005' direct represents '5' with '6524'
6521 -6523 6524 0
-6524 6523 0
-6524 -6521 0
c Var 'variant_fields_00003_00004_00005' order represents '6' with '6525'
-6523 6525 0
c Var 'variant_fields_00003_00004_00005' direct represents '6' with '6526'
6523 -6525 6526 0
-6526 6525 0
-6526 -6523 0
c Var 'variant_fields_00003_00004_00005' order represents '7' with '6527'
-6525 6527 0
c Var 'variant_fields_00003_00004_00005' direct represents '7' with '6528'
6525 -6527 6528 0
-6528 6527 0
-6528 -6525 0
c Var 'variant_fields_00003_00004_00005' order represents '8' with '6529'
-6527 6529 0
c Var 'variant_fields_00003_00004_00005' direct represents '8' with '6530'
6527 -6529 6530 0
-6530 6529 0
-6530 -6527 0
c Var 'variant_fields_00003_00004_00005' direct represents '9' with '-6529'
6516 6518 6520 6522 6524 6526 6528 6530 -6529 0
c Encoding variable: variant_fields_00003_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00006' order represents '1' with '6531'
c Var 'variant_fields_00003_00004_00006' direct represents '1' with '6531'
c Var 'variant_fields_00003_00004_00006' order represents '2' with '6532'
-6531 6532 0
c Var 'variant_fields_00003_00004_00006' direct represents '2' with '6533'
6531 -6532 6533 0
-6533 6532 0
-6533 -6531 0
c Var 'variant_fields_00003_00004_00006' order represents '3' with '6534'
-6532 6534 0
c Var 'variant_fields_00003_00004_00006' direct represents '3' with '6535'
6532 -6534 6535 0
-6535 6534 0
-6535 -6532 0
c Var 'variant_fields_00003_00004_00006' order represents '4' with '6536'
-6534 6536 0
c Var 'variant_fields_00003_00004_00006' direct represents '4' with '6537'
6534 -6536 6537 0
-6537 6536 0
-6537 -6534 0
c Var 'variant_fields_00003_00004_00006' order represents '5' with '6538'
-6536 6538 0
c Var 'variant_fields_00003_00004_00006' direct represents '5' with '6539'
6536 -6538 6539 0
-6539 6538 0
-6539 -6536 0
c Var 'variant_fields_00003_00004_00006' order represents '6' with '6540'
-6538 6540 0
c Var 'variant_fields_00003_00004_00006' direct represents '6' with '6541'
6538 -6540 6541 0
-6541 6540 0
-6541 -6538 0
c Var 'variant_fields_00003_00004_00006' order represents '7' with '6542'
-6540 6542 0
c Var 'variant_fields_00003_00004_00006' direct represents '7' with '6543'
6540 -6542 6543 0
-6543 6542 0
-6543 -6540 0
c Var 'variant_fields_00003_00004_00006' order represents '8' with '6544'
-6542 6544 0
c Var 'variant_fields_00003_00004_00006' direct represents '8' with '6545'
6542 -6544 6545 0
-6545 6544 0
-6545 -6542 0
c Var 'variant_fields_00003_00004_00006' direct represents '9' with '-6544'
6531 6533 6535 6537 6539 6541 6543 6545 -6544 0
c Encoding variable: variant_fields_00003_00004_00007 with domain: int(1) (representing constraint )
c Var 'variant_fields_00003_00004_00007' direct represents '1' with '6546'
6546 0
c Encoding variable: variant_fields_00003_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00008' order represents '1' with '6547'
c Var 'variant_fields_00003_00004_00008' direct represents '1' with '6547'
c Var 'variant_fields_00003_00004_00008' order represents '2' with '6548'
-6547 6548 0
c Var 'variant_fields_00003_00004_00008' direct represents '2' with '6549'
6547 -6548 6549 0
-6549 6548 0
-6549 -6547 0
c Var 'variant_fields_00003_00004_00008' order represents '3' with '6550'
-6548 6550 0
c Var 'variant_fields_00003_00004_00008' direct represents '3' with '6551'
6548 -6550 6551 0
-6551 6550 0
-6551 -6548 0
c Var 'variant_fields_00003_00004_00008' order represents '4' with '6552'
-6550 6552 0
c Var 'variant_fields_00003_00004_00008' direct represents '4' with '6553'
6550 -6552 6553 0
-6553 6552 0
-6553 -6550 0
c Var 'variant_fields_00003_00004_00008' order represents '5' with '6554'
-6552 6554 0
c Var 'variant_fields_00003_00004_00008' direct represents '5' with '6555'
6552 -6554 6555 0
-6555 6554 0
-6555 -6552 0
c Var 'variant_fields_00003_00004_00008' order represents '6' with '6556'
-6554 6556 0
c Var 'variant_fields_00003_00004_00008' direct represents '6' with '6557'
6554 -6556 6557 0
-6557 6556 0
-6557 -6554 0
c Var 'variant_fields_00003_00004_00008' order represents '7' with '6558'
-6556 6558 0
c Var 'variant_fields_00003_00004_00008' direct represents '7' with '6559'
6556 -6558 6559 0
-6559 6558 0
-6559 -6556 0
c Var 'variant_fields_00003_00004_00008' order represents '8' with '6560'
-6558 6560 0
c Var 'variant_fields_00003_00004_00008' direct represents '8' with '6561'
6558 -6560 6561 0
-6561 6560 0
-6561 -6558 0
c Var 'variant_fields_00003_00004_00008' direct represents '9' with '-6560'
6547 6549 6551 6553 6555 6557 6559 6561 -6560 0
c Encoding variable: variant_fields_00003_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00009' order represents '1' with '6562'
c Var 'variant_fields_00003_00004_00009' direct represents '1' with '6562'
c Var 'variant_fields_00003_00004_00009' order represents '2' with '6563'
-6562 6563 0
c Var 'variant_fields_00003_00004_00009' direct represents '2' with '6564'
6562 -6563 6564 0
-6564 6563 0
-6564 -6562 0
c Var 'variant_fields_00003_00004_00009' order represents '3' with '6565'
-6563 6565 0
c Var 'variant_fields_00003_00004_00009' direct represents '3' with '6566'
6563 -6565 6566 0
-6566 6565 0
-6566 -6563 0
c Var 'variant_fields_00003_00004_00009' order represents '4' with '6567'
-6565 6567 0
c Var 'variant_fields_00003_00004_00009' direct represents '4' with '6568'
6565 -6567 6568 0
-6568 6567 0
-6568 -6565 0
c Var 'variant_fields_00003_00004_00009' order represents '5' with '6569'
-6567 6569 0
c Var 'variant_fields_00003_00004_00009' direct represents '5' with '6570'
6567 -6569 6570 0
-6570 6569 0
-6570 -6567 0
c Var 'variant_fields_00003_00004_00009' order represents '6' with '6571'
-6569 6571 0
c Var 'variant_fields_00003_00004_00009' direct represents '6' with '6572'
6569 -6571 6572 0
-6572 6571 0
-6572 -6569 0
c Var 'variant_fields_00003_00004_00009' order represents '7' with '6573'
-6571 6573 0
c Var 'variant_fields_00003_00004_00009' direct represents '7' with '6574'
6571 -6573 6574 0
-6574 6573 0
-6574 -6571 0
c Var 'variant_fields_00003_00004_00009' order represents '8' with '6575'
-6573 6575 0
c Var 'variant_fields_00003_00004_00009' direct represents '8' with '6576'
6573 -6575 6576 0
-6576 6575 0
-6576 -6573 0
c Var 'variant_fields_00003_00004_00009' direct represents '9' with '-6575'
6562 6564 6566 6568 6570 6572 6574 6576 -6575 0
c Encoding variable: variant_fields_00003_00005_00001 with domain: int(2) (representing constraint )
c Var 'variant_fields_00003_00005_00001' direct represents '2' with '6577'
6577 0
c Encoding variable: variant_fields_00003_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00002' order represents '1' with '6578'
c Var 'variant_fields_00003_00005_00002' direct represents '1' with '6578'
c Var 'variant_fields_00003_00005_00002' order represents '2' with '6579'
-6578 6579 0
c Var 'variant_fields_00003_00005_00002' direct represents '2' with '6580'
6578 -6579 6580 0
-6580 6579 0
-6580 -6578 0
c Var 'variant_fields_00003_00005_00002' order represents '3' with '6581'
-6579 6581 0
c Var 'variant_fields_00003_00005_00002' direct represents '3' with '6582'
6579 -6581 6582 0
-6582 6581 0
-6582 -6579 0
c Var 'variant_fields_00003_00005_00002' order represents '4' with '6583'
-6581 6583 0
c Var 'variant_fields_00003_00005_00002' direct represents '4' with '6584'
6581 -6583 6584 0
-6584 6583 0
-6584 -6581 0
c Var 'variant_fields_00003_00005_00002' order represents '5' with '6585'
-6583 6585 0
c Var 'variant_fields_00003_00005_00002' direct represents '5' with '6586'
6583 -6585 6586 0
-6586 6585 0
-6586 -6583 0
c Var 'variant_fields_00003_00005_00002' order represents '6' with '6587'
-6585 6587 0
c Var 'variant_fields_00003_00005_00002' direct represents '6' with '6588'
6585 -6587 6588 0
-6588 6587 0
-6588 -6585 0
c Var 'variant_fields_00003_00005_00002' order represents '7' with '6589'
-6587 6589 0
c Var 'variant_fields_00003_00005_00002' direct represents '7' with '6590'
6587 -6589 6590 0
-6590 6589 0
-6590 -6587 0
c Var 'variant_fields_00003_00005_00002' order represents '8' with '6591'
-6589 6591 0
c Var 'variant_fields_00003_00005_00002' direct represents '8' with '6592'
6589 -6591 6592 0
-6592 6591 0
-6592 -6589 0
c Var 'variant_fields_00003_00005_00002' direct represents '9' with '-6591'
6578 6580 6582 6584 6586 6588 6590 6592 -6591 0
c Encoding variable: variant_fields_00003_00005_00003 with domain: int(7) (representing constraint )
c Var 'variant_fields_00003_00005_00003' direct represents '7' with '6593'
6593 0
c Encoding variable: variant_fields_00003_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00004' order represents '1' with '6594'
c Var 'variant_fields_00003_00005_00004' direct represents '1' with '6594'
c Var 'variant_fields_00003_00005_00004' order represents '2' with '6595'
-6594 6595 0
c Var 'variant_fields_00003_00005_00004' direct represents '2' with '6596'
6594 -6595 6596 0
-6596 6595 0
-6596 -6594 0
c Var 'variant_fields_00003_00005_00004' order represents '3' with '6597'
-6595 6597 0
c Var 'variant_fields_00003_00005_00004' direct represents '3' with '6598'
6595 -6597 6598 0
-6598 6597 0
-6598 -6595 0
c Var 'variant_fields_00003_00005_00004' order represents '4' with '6599'
-6597 6599 0
c Var 'variant_fields_00003_00005_00004' direct represents '4' with '6600'
6597 -6599 6600 0
-6600 6599 0
-6600 -6597 0
c Var 'variant_fields_00003_00005_00004' order represents '5' with '6601'
-6599 6601 0
c Var 'variant_fields_00003_00005_00004' direct represents '5' with '6602'
6599 -6601 6602 0
-6602 6601 0
-6602 -6599 0
c Var 'variant_fields_00003_00005_00004' order represents '6' with '6603'
-6601 6603 0
c Var 'variant_fields_00003_00005_00004' direct represents '6' with '6604'
6601 -6603 6604 0
-6604 6603 0
-6604 -6601 0
c Var 'variant_fields_00003_00005_00004' order represents '7' with '6605'
-6603 6605 0
c Var 'variant_fields_00003_00005_00004' direct represents '7' with '6606'
6603 -6605 6606 0
-6606 6605 0
-6606 -6603 0
c Var 'variant_fields_00003_00005_00004' order represents '8' with '6607'
-6605 6607 0
c Var 'variant_fields_00003_00005_00004' direct represents '8' with '6608'
6605 -6607 6608 0
-6608 6607 0
-6608 -6605 0
c Var 'variant_fields_00003_00005_00004' direct represents '9' with '-6607'
6594 6596 6598 6600 6602 6604 6606 6608 -6607 0
c Encoding variable: variant_fields_00003_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00005' order represents '1' with '6609'
c Var 'variant_fields_00003_00005_00005' direct represents '1' with '6609'
c Var 'variant_fields_00003_00005_00005' order represents '2' with '6610'
-6609 6610 0
c Var 'variant_fields_00003_00005_00005' direct represents '2' with '6611'
6609 -6610 6611 0
-6611 6610 0
-6611 -6609 0
c Var 'variant_fields_00003_00005_00005' order represents '3' with '6612'
-6610 6612 0
c Var 'variant_fields_00003_00005_00005' direct represents '3' with '6613'
6610 -6612 6613 0
-6613 6612 0
-6613 -6610 0
c Var 'variant_fields_00003_00005_00005' order represents '4' with '6614'
-6612 6614 0
c Var 'variant_fields_00003_00005_00005' direct represents '4' with '6615'
6612 -6614 6615 0
-6615 6614 0
-6615 -6612 0
c Var 'variant_fields_00003_00005_00005' order represents '5' with '6616'
-6614 6616 0
c Var 'variant_fields_00003_00005_00005' direct represents '5' with '6617'
6614 -6616 6617 0
-6617 6616 0
-6617 -6614 0
c Var 'variant_fields_00003_00005_00005' order represents '6' with '6618'
-6616 6618 0
c Var 'variant_fields_00003_00005_00005' direct represents '6' with '6619'
6616 -6618 6619 0
-6619 6618 0
-6619 -6616 0
c Var 'variant_fields_00003_00005_00005' order represents '7' with '6620'
-6618 6620 0
c Var 'variant_fields_00003_00005_00005' direct represents '7' with '6621'
6618 -6620 6621 0
-6621 6620 0
-6621 -6618 0
c Var 'variant_fields_00003_00005_00005' order represents '8' with '6622'
-6620 6622 0
c Var 'variant_fields_00003_00005_00005' direct represents '8' with '6623'
6620 -6622 6623 0
-6623 6622 0
-6623 -6620 0
c Var 'variant_fields_00003_00005_00005' direct represents '9' with '-6622'
6609 6611 6613 6615 6617 6619 6621 6623 -6622 0
c Encoding variable: variant_fields_00003_00005_00006 with domain: int(1) (representing constraint )
c Var 'variant_fields_00003_00005_00006' direct represents '1' with '6624'
6624 0
c Encoding variable: variant_fields_00003_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00007' order represents '1' with '6625'
c Var 'variant_fields_00003_00005_00007' direct represents '1' with '6625'
c Var 'variant_fields_00003_00005_00007' order represents '2' with '6626'
-6625 6626 0
c Var 'variant_fields_00003_00005_00007' direct represents '2' with '6627'
6625 -6626 6627 0
-6627 6626 0
-6627 -6625 0
c Var 'variant_fields_00003_00005_00007' order represents '3' with '6628'
-6626 6628 0
c Var 'variant_fields_00003_00005_00007' direct represents '3' with '6629'
6626 -6628 6629 0
-6629 6628 0
-6629 -6626 0
c Var 'variant_fields_00003_00005_00007' order represents '4' with '6630'
-6628 6630 0
c Var 'variant_fields_00003_00005_00007' direct represents '4' with '6631'
6628 -6630 6631 0
-6631 6630 0
-6631 -6628 0
c Var 'variant_fields_00003_00005_00007' order represents '5' with '6632'
-6630 6632 0
c Var 'variant_fields_00003_00005_00007' direct represents '5' with '6633'
6630 -6632 6633 0
-6633 6632 0
-6633 -6630 0
c Var 'variant_fields_00003_00005_00007' order represents '6' with '6634'
-6632 6634 0
c Var 'variant_fields_00003_00005_00007' direct represents '6' with '6635'
6632 -6634 6635 0
-6635 6634 0
-6635 -6632 0
c Var 'variant_fields_00003_00005_00007' order represents '7' with '6636'
-6634 6636 0
c Var 'variant_fields_00003_00005_00007' direct represents '7' with '6637'
6634 -6636 6637 0
-6637 6636 0
-6637 -6634 0
c Var 'variant_fields_00003_00005_00007' order represents '8' with '6638'
-6636 6638 0
c Var 'variant_fields_00003_00005_00007' direct represents '8' with '6639'
6636 -6638 6639 0
-6639 6638 0
-6639 -6636 0
c Var 'variant_fields_00003_00005_00007' direct represents '9' with '-6638'
6625 6627 6629 6631 6633 6635 6637 6639 -6638 0
c Encoding variable: variant_fields_00003_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00008' order represents '1' with '6640'
c Var 'variant_fields_00003_00005_00008' direct represents '1' with '6640'
c Var 'variant_fields_00003_00005_00008' order represents '2' with '6641'
-6640 6641 0
c Var 'variant_fields_00003_00005_00008' direct represents '2' with '6642'
6640 -6641 6642 0
-6642 6641 0
-6642 -6640 0
c Var 'variant_fields_00003_00005_00008' order represents '3' with '6643'
-6641 6643 0
c Var 'variant_fields_00003_00005_00008' direct represents '3' with '6644'
6641 -6643 6644 0
-6644 6643 0
-6644 -6641 0
c Var 'variant_fields_00003_00005_00008' order represents '4' with '6645'
-6643 6645 0
c Var 'variant_fields_00003_00005_00008' direct represents '4' with '6646'
6643 -6645 6646 0
-6646 6645 0
-6646 -6643 0
c Var 'variant_fields_00003_00005_00008' order represents '5' with '6647'
-6645 6647 0
c Var 'variant_fields_00003_00005_00008' direct represents '5' with '6648'
6645 -6647 6648 0
-6648 6647 0
-6648 -6645 0
c Var 'variant_fields_00003_00005_00008' order represents '6' with '6649'
-6647 6649 0
c Var 'variant_fields_00003_00005_00008' direct represents '6' with '6650'
6647 -6649 6650 0
-6650 6649 0
-6650 -6647 0
c Var 'variant_fields_00003_00005_00008' order represents '7' with '6651'
-6649 6651 0
c Var 'variant_fields_00003_00005_00008' direct represents '7' with '6652'
6649 -6651 6652 0
-6652 6651 0
-6652 -6649 0
c Var 'variant_fields_00003_00005_00008' order represents '8' with '6653'
-6651 6653 0
c Var 'variant_fields_00003_00005_00008' direct represents '8' with '6654'
6651 -6653 6654 0
-6654 6653 0
-6654 -6651 0
c Var 'variant_fields_00003_00005_00008' direct represents '9' with '-6653'
6640 6642 6644 6646 6648 6650 6652 6654 -6653 0
c Encoding variable: variant_fields_00003_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00009' order represents '1' with '6655'
c Var 'variant_fields_00003_00005_00009' direct represents '1' with '6655'
c Var 'variant_fields_00003_00005_00009' order represents '2' with '6656'
-6655 6656 0
c Var 'variant_fields_00003_00005_00009' direct represents '2' with '6657'
6655 -6656 6657 0
-6657 6656 0
-6657 -6655 0
c Var 'variant_fields_00003_00005_00009' order represents '3' with '6658'
-6656 6658 0
c Var 'variant_fields_00003_00005_00009' direct represents '3' with '6659'
6656 -6658 6659 0
-6659 6658 0
-6659 -6656 0
c Var 'variant_fields_00003_00005_00009' order represents '4' with '6660'
-6658 6660 0
c Var 'variant_fields_00003_00005_00009' direct represents '4' with '6661'
6658 -6660 6661 0
-6661 6660 0
-6661 -6658 0
c Var 'variant_fields_00003_00005_00009' order represents '5' with '6662'
-6660 6662 0
c Var 'variant_fields_00003_00005_00009' direct represents '5' with '6663'
6660 -6662 6663 0
-6663 6662 0
-6663 -6660 0
c Var 'variant_fields_00003_00005_00009' order represents '6' with '6664'
-6662 6664 0
c Var 'variant_fields_00003_00005_00009' direct represents '6' with '6665'
6662 -6664 6665 0
-6665 6664 0
-6665 -6662 0
c Var 'variant_fields_00003_00005_00009' order represents '7' with '6666'
-6664 6666 0
c Var 'variant_fields_00003_00005_00009' direct represents '7' with '6667'
6664 -6666 6667 0
-6667 6666 0
-6667 -6664 0
c Var 'variant_fields_00003_00005_00009' order represents '8' with '6668'
-6666 6668 0
c Var 'variant_fields_00003_00005_00009' direct represents '8' with '6669'
6666 -6668 6669 0
-6669 6668 0
-6669 -6666 0
c Var 'variant_fields_00003_00005_00009' direct represents '9' with '-6668'
6655 6657 6659 6661 6663 6665 6667 6669 -6668 0
c Encoding variable: variant_fields_00003_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00001' order represents '1' with '6670'
c Var 'variant_fields_00003_00006_00001' direct represents '1' with '6670'
c Var 'variant_fields_00003_00006_00001' order represents '2' with '6671'
-6670 6671 0
c Var 'variant_fields_00003_00006_00001' direct represents '2' with '6672'
6670 -6671 6672 0
-6672 6671 0
-6672 -6670 0
c Var 'variant_fields_00003_00006_00001' order represents '3' with '6673'
-6671 6673 0
c Var 'variant_fields_00003_00006_00001' direct represents '3' with '6674'
6671 -6673 6674 0
-6674 6673 0
-6674 -6671 0
c Var 'variant_fields_00003_00006_00001' order represents '4' with '6675'
-6673 6675 0
c Var 'variant_fields_00003_00006_00001' direct represents '4' with '6676'
6673 -6675 6676 0
-6676 6675 0
-6676 -6673 0
c Var 'variant_fields_00003_00006_00001' order represents '5' with '6677'
-6675 6677 0
c Var 'variant_fields_00003_00006_00001' direct represents '5' with '6678'
6675 -6677 6678 0
-6678 6677 0
-6678 -6675 0
c Var 'variant_fields_00003_00006_00001' order represents '6' with '6679'
-6677 6679 0
c Var 'variant_fields_00003_00006_00001' direct represents '6' with '6680'
6677 -6679 6680 0
-6680 6679 0
-6680 -6677 0
c Var 'variant_fields_00003_00006_00001' order represents '7' with '6681'
-6679 6681 0
c Var 'variant_fields_00003_00006_00001' direct represents '7' with '6682'
6679 -6681 6682 0
-6682 6681 0
-6682 -6679 0
c Var 'variant_fields_00003_00006_00001' order represents '8' with '6683'
-6681 6683 0
c Var 'variant_fields_00003_00006_00001' direct represents '8' with '6684'
6681 -6683 6684 0
-6684 6683 0
-6684 -6681 0
c Var 'variant_fields_00003_00006_00001' direct represents '9' with '-6683'
6670 6672 6674 6676 6678 6680 6682 6684 -6683 0
c Encoding variable: variant_fields_00003_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00002' order represents '1' with '6685'
c Var 'variant_fields_00003_00006_00002' direct represents '1' with '6685'
c Var 'variant_fields_00003_00006_00002' order represents '2' with '6686'
-6685 6686 0
c Var 'variant_fields_00003_00006_00002' direct represents '2' with '6687'
6685 -6686 6687 0
-6687 6686 0
-6687 -6685 0
c Var 'variant_fields_00003_00006_00002' order represents '3' with '6688'
-6686 6688 0
c Var 'variant_fields_00003_00006_00002' direct represents '3' with '6689'
6686 -6688 6689 0
-6689 6688 0
-6689 -6686 0
c Var 'variant_fields_00003_00006_00002' order represents '4' with '6690'
-6688 6690 0
c Var 'variant_fields_00003_00006_00002' direct represents '4' with '6691'
6688 -6690 6691 0
-6691 6690 0
-6691 -6688 0
c Var 'variant_fields_00003_00006_00002' order represents '5' with '6692'
-6690 6692 0
c Var 'variant_fields_00003_00006_00002' direct represents '5' with '6693'
6690 -6692 6693 0
-6693 6692 0
-6693 -6690 0
c Var 'variant_fields_00003_00006_00002' order represents '6' with '6694'
-6692 6694 0
c Var 'variant_fields_00003_00006_00002' direct represents '6' with '6695'
6692 -6694 6695 0
-6695 6694 0
-6695 -6692 0
c Var 'variant_fields_00003_00006_00002' order represents '7' with '6696'
-6694 6696 0
c Var 'variant_fields_00003_00006_00002' direct represents '7' with '6697'
6694 -6696 6697 0
-6697 6696 0
-6697 -6694 0
c Var 'variant_fields_00003_00006_00002' order represents '8' with '6698'
-6696 6698 0
c Var 'variant_fields_00003_00006_00002' direct represents '8' with '6699'
6696 -6698 6699 0
-6699 6698 0
-6699 -6696 0
c Var 'variant_fields_00003_00006_00002' direct represents '9' with '-6698'
6685 6687 6689 6691 6693 6695 6697 6699 -6698 0
c Encoding variable: variant_fields_00003_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00003' order represents '1' with '6700'
c Var 'variant_fields_00003_00006_00003' direct represents '1' with '6700'
c Var 'variant_fields_00003_00006_00003' order represents '2' with '6701'
-6700 6701 0
c Var 'variant_fields_00003_00006_00003' direct represents '2' with '6702'
6700 -6701 6702 0
-6702 6701 0
-6702 -6700 0
c Var 'variant_fields_00003_00006_00003' order represents '3' with '6703'
-6701 6703 0
c Var 'variant_fields_00003_00006_00003' direct represents '3' with '6704'
6701 -6703 6704 0
-6704 6703 0
-6704 -6701 0
c Var 'variant_fields_00003_00006_00003' order represents '4' with '6705'
-6703 6705 0
c Var 'variant_fields_00003_00006_00003' direct represents '4' with '6706'
6703 -6705 6706 0
-6706 6705 0
-6706 -6703 0
c Var 'variant_fields_00003_00006_00003' order represents '5' with '6707'
-6705 6707 0
c Var 'variant_fields_00003_00006_00003' direct represents '5' with '6708'
6705 -6707 6708 0
-6708 6707 0
-6708 -6705 0
c Var 'variant_fields_00003_00006_00003' order represents '6' with '6709'
-6707 6709 0
c Var 'variant_fields_00003_00006_00003' direct represents '6' with '6710'
6707 -6709 6710 0
-6710 6709 0
-6710 -6707 0
c Var 'variant_fields_00003_00006_00003' order represents '7' with '6711'
-6709 6711 0
c Var 'variant_fields_00003_00006_00003' direct represents '7' with '6712'
6709 -6711 6712 0
-6712 6711 0
-6712 -6709 0
c Var 'variant_fields_00003_00006_00003' order represents '8' with '6713'
-6711 6713 0
c Var 'variant_fields_00003_00006_00003' direct represents '8' with '6714'
6711 -6713 6714 0
-6714 6713 0
-6714 -6711 0
c Var 'variant_fields_00003_00006_00003' direct represents '9' with '-6713'
6700 6702 6704 6706 6708 6710 6712 6714 -6713 0
c Encoding variable: variant_fields_00003_00006_00004 with domain: int(7) (representing constraint )
c Var 'variant_fields_00003_00006_00004' direct represents '7' with '6715'
6715 0
c Encoding variable: variant_fields_00003_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00005' order represents '1' with '6716'
c Var 'variant_fields_00003_00006_00005' direct represents '1' with '6716'
c Var 'variant_fields_00003_00006_00005' order represents '2' with '6717'
-6716 6717 0
c Var 'variant_fields_00003_00006_00005' direct represents '2' with '6718'
6716 -6717 6718 0
-6718 6717 0
-6718 -6716 0
c Var 'variant_fields_00003_00006_00005' order represents '3' with '6719'
-6717 6719 0
c Var 'variant_fields_00003_00006_00005' direct represents '3' with '6720'
6717 -6719 6720 0
-6720 6719 0
-6720 -6717 0
c Var 'variant_fields_00003_00006_00005' order represents '4' with '6721'
-6719 6721 0
c Var 'variant_fields_00003_00006_00005' direct represents '4' with '6722'
6719 -6721 6722 0
-6722 6721 0
-6722 -6719 0
c Var 'variant_fields_00003_00006_00005' order represents '5' with '6723'
-6721 6723 0
c Var 'variant_fields_00003_00006_00005' direct represents '5' with '6724'
6721 -6723 6724 0
-6724 6723 0
-6724 -6721 0
c Var 'variant_fields_00003_00006_00005' order represents '6' with '6725'
-6723 6725 0
c Var 'variant_fields_00003_00006_00005' direct represents '6' with '6726'
6723 -6725 6726 0
-6726 6725 0
-6726 -6723 0
c Var 'variant_fields_00003_00006_00005' order represents '7' with '6727'
-6725 6727 0
c Var 'variant_fields_00003_00006_00005' direct represents '7' with '6728'
6725 -6727 6728 0
-6728 6727 0
-6728 -6725 0
c Var 'variant_fields_00003_00006_00005' order represents '8' with '6729'
-6727 6729 0
c Var 'variant_fields_00003_00006_00005' direct represents '8' with '6730'
6727 -6729 6730 0
-6730 6729 0
-6730 -6727 0
c Var 'variant_fields_00003_00006_00005' direct represents '9' with '-6729'
6716 6718 6720 6722 6724 6726 6728 6730 -6729 0
c Encoding variable: variant_fields_00003_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00006' order represents '1' with '6731'
c Var 'variant_fields_00003_00006_00006' direct represents '1' with '6731'
c Var 'variant_fields_00003_00006_00006' order represents '2' with '6732'
-6731 6732 0
c Var 'variant_fields_00003_00006_00006' direct represents '2' with '6733'
6731 -6732 6733 0
-6733 6732 0
-6733 -6731 0
c Var 'variant_fields_00003_00006_00006' order represents '3' with '6734'
-6732 6734 0
c Var 'variant_fields_00003_00006_00006' direct represents '3' with '6735'
6732 -6734 6735 0
-6735 6734 0
-6735 -6732 0
c Var 'variant_fields_00003_00006_00006' order represents '4' with '6736'
-6734 6736 0
c Var 'variant_fields_00003_00006_00006' direct represents '4' with '6737'
6734 -6736 6737 0
-6737 6736 0
-6737 -6734 0
c Var 'variant_fields_00003_00006_00006' order represents '5' with '6738'
-6736 6738 0
c Var 'variant_fields_00003_00006_00006' direct represents '5' with '6739'
6736 -6738 6739 0
-6739 6738 0
-6739 -6736 0
c Var 'variant_fields_00003_00006_00006' order represents '6' with '6740'
-6738 6740 0
c Var 'variant_fields_00003_00006_00006' direct represents '6' with '6741'
6738 -6740 6741 0
-6741 6740 0
-6741 -6738 0
c Var 'variant_fields_00003_00006_00006' order represents '7' with '6742'
-6740 6742 0
c Var 'variant_fields_00003_00006_00006' direct represents '7' with '6743'
6740 -6742 6743 0
-6743 6742 0
-6743 -6740 0
c Var 'variant_fields_00003_00006_00006' order represents '8' with '6744'
-6742 6744 0
c Var 'variant_fields_00003_00006_00006' direct represents '8' with '6745'
6742 -6744 6745 0
-6745 6744 0
-6745 -6742 0
c Var 'variant_fields_00003_00006_00006' direct represents '9' with '-6744'
6731 6733 6735 6737 6739 6741 6743 6745 -6744 0
c Encoding variable: variant_fields_00003_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00007' order represents '1' with '6746'
c Var 'variant_fields_00003_00006_00007' direct represents '1' with '6746'
c Var 'variant_fields_00003_00006_00007' order represents '2' with '6747'
-6746 6747 0
c Var 'variant_fields_00003_00006_00007' direct represents '2' with '6748'
6746 -6747 6748 0
-6748 6747 0
-6748 -6746 0
c Var 'variant_fields_00003_00006_00007' order represents '3' with '6749'
-6747 6749 0
c Var 'variant_fields_00003_00006_00007' direct represents '3' with '6750'
6747 -6749 6750 0
-6750 6749 0
-6750 -6747 0
c Var 'variant_fields_00003_00006_00007' order represents '4' with '6751'
-6749 6751 0
c Var 'variant_fields_00003_00006_00007' direct represents '4' with '6752'
6749 -6751 6752 0
-6752 6751 0
-6752 -6749 0
c Var 'variant_fields_00003_00006_00007' order represents '5' with '6753'
-6751 6753 0
c Var 'variant_fields_00003_00006_00007' direct represents '5' with '6754'
6751 -6753 6754 0
-6754 6753 0
-6754 -6751 0
c Var 'variant_fields_00003_00006_00007' order represents '6' with '6755'
-6753 6755 0
c Var 'variant_fields_00003_00006_00007' direct represents '6' with '6756'
6753 -6755 6756 0
-6756 6755 0
-6756 -6753 0
c Var 'variant_fields_00003_00006_00007' order represents '7' with '6757'
-6755 6757 0
c Var 'variant_fields_00003_00006_00007' direct represents '7' with '6758'
6755 -6757 6758 0
-6758 6757 0
-6758 -6755 0
c Var 'variant_fields_00003_00006_00007' order represents '8' with '6759'
-6757 6759 0
c Var 'variant_fields_00003_00006_00007' direct represents '8' with '6760'
6757 -6759 6760 0
-6760 6759 0
-6760 -6757 0
c Var 'variant_fields_00003_00006_00007' direct represents '9' with '-6759'
6746 6748 6750 6752 6754 6756 6758 6760 -6759 0
c Encoding variable: variant_fields_00003_00006_00008 with domain: int(8) (representing constraint )
c Var 'variant_fields_00003_00006_00008' direct represents '8' with '6761'
6761 0
c Encoding variable: variant_fields_00003_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00009' order represents '1' with '6762'
c Var 'variant_fields_00003_00006_00009' direct represents '1' with '6762'
c Var 'variant_fields_00003_00006_00009' order represents '2' with '6763'
-6762 6763 0
c Var 'variant_fields_00003_00006_00009' direct represents '2' with '6764'
6762 -6763 6764 0
-6764 6763 0
-6764 -6762 0
c Var 'variant_fields_00003_00006_00009' order represents '3' with '6765'
-6763 6765 0
c Var 'variant_fields_00003_00006_00009' direct represents '3' with '6766'
6763 -6765 6766 0
-6766 6765 0
-6766 -6763 0
c Var 'variant_fields_00003_00006_00009' order represents '4' with '6767'
-6765 6767 0
c Var 'variant_fields_00003_00006_00009' direct represents '4' with '6768'
6765 -6767 6768 0
-6768 6767 0
-6768 -6765 0
c Var 'variant_fields_00003_00006_00009' order represents '5' with '6769'
-6767 6769 0
c Var 'variant_fields_00003_00006_00009' direct represents '5' with '6770'
6767 -6769 6770 0
-6770 6769 0
-6770 -6767 0
c Var 'variant_fields_00003_00006_00009' order represents '6' with '6771'
-6769 6771 0
c Var 'variant_fields_00003_00006_00009' direct represents '6' with '6772'
6769 -6771 6772 0
-6772 6771 0
-6772 -6769 0
c Var 'variant_fields_00003_00006_00009' order represents '7' with '6773'
-6771 6773 0
c Var 'variant_fields_00003_00006_00009' direct represents '7' with '6774'
6771 -6773 6774 0
-6774 6773 0
-6774 -6771 0
c Var 'variant_fields_00003_00006_00009' order represents '8' with '6775'
-6773 6775 0
c Var 'variant_fields_00003_00006_00009' direct represents '8' with '6776'
6773 -6775 6776 0
-6776 6775 0
-6776 -6773 0
c Var 'variant_fields_00003_00006_00009' direct represents '9' with '-6775'
6762 6764 6766 6768 6770 6772 6774 6776 -6775 0
c Encoding variable: variant_fields_00003_00007_00001 with domain: int(7) (representing constraint )
c Var 'variant_fields_00003_00007_00001' direct represents '7' with '6777'
6777 0
c Encoding variable: variant_fields_00003_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00002' order represents '1' with '6778'
c Var 'variant_fields_00003_00007_00002' direct represents '1' with '6778'
c Var 'variant_fields_00003_00007_00002' order represents '2' with '6779'
-6778 6779 0
c Var 'variant_fields_00003_00007_00002' direct represents '2' with '6780'
6778 -6779 6780 0
-6780 6779 0
-6780 -6778 0
c Var 'variant_fields_00003_00007_00002' order represents '3' with '6781'
-6779 6781 0
c Var 'variant_fields_00003_00007_00002' direct represents '3' with '6782'
6779 -6781 6782 0
-6782 6781 0
-6782 -6779 0
c Var 'variant_fields_00003_00007_00002' order represents '4' with '6783'
-6781 6783 0
c Var 'variant_fields_00003_00007_00002' direct represents '4' with '6784'
6781 -6783 6784 0
-6784 6783 0
-6784 -6781 0
c Var 'variant_fields_00003_00007_00002' order represents '5' with '6785'
-6783 6785 0
c Var 'variant_fields_00003_00007_00002' direct represents '5' with '6786'
6783 -6785 6786 0
-6786 6785 0
-6786 -6783 0
c Var 'variant_fields_00003_00007_00002' order represents '6' with '6787'
-6785 6787 0
c Var 'variant_fields_00003_00007_00002' direct represents '6' with '6788'
6785 -6787 6788 0
-6788 6787 0
-6788 -6785 0
c Var 'variant_fields_00003_00007_00002' order represents '7' with '6789'
-6787 6789 0
c Var 'variant_fields_00003_00007_00002' direct represents '7' with '6790'
6787 -6789 6790 0
-6790 6789 0
-6790 -6787 0
c Var 'variant_fields_00003_00007_00002' order represents '8' with '6791'
-6789 6791 0
c Var 'variant_fields_00003_00007_00002' direct represents '8' with '6792'
6789 -6791 6792 0
-6792 6791 0
-6792 -6789 0
c Var 'variant_fields_00003_00007_00002' direct represents '9' with '-6791'
6778 6780 6782 6784 6786 6788 6790 6792 -6791 0
c Encoding variable: variant_fields_00003_00007_00003 with domain: int(6) (representing constraint )
c Var 'variant_fields_00003_00007_00003' direct represents '6' with '6793'
6793 0
c Encoding variable: variant_fields_00003_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00004' order represents '1' with '6794'
c Var 'variant_fields_00003_00007_00004' direct represents '1' with '6794'
c Var 'variant_fields_00003_00007_00004' order represents '2' with '6795'
-6794 6795 0
c Var 'variant_fields_00003_00007_00004' direct represents '2' with '6796'
6794 -6795 6796 0
-6796 6795 0
-6796 -6794 0
c Var 'variant_fields_00003_00007_00004' order represents '3' with '6797'
-6795 6797 0
c Var 'variant_fields_00003_00007_00004' direct represents '3' with '6798'
6795 -6797 6798 0
-6798 6797 0
-6798 -6795 0
c Var 'variant_fields_00003_00007_00004' order represents '4' with '6799'
-6797 6799 0
c Var 'variant_fields_00003_00007_00004' direct represents '4' with '6800'
6797 -6799 6800 0
-6800 6799 0
-6800 -6797 0
c Var 'variant_fields_00003_00007_00004' order represents '5' with '6801'
-6799 6801 0
c Var 'variant_fields_00003_00007_00004' direct represents '5' with '6802'
6799 -6801 6802 0
-6802 6801 0
-6802 -6799 0
c Var 'variant_fields_00003_00007_00004' order represents '6' with '6803'
-6801 6803 0
c Var 'variant_fields_00003_00007_00004' direct represents '6' with '6804'
6801 -6803 6804 0
-6804 6803 0
-6804 -6801 0
c Var 'variant_fields_00003_00007_00004' order represents '7' with '6805'
-6803 6805 0
c Var 'variant_fields_00003_00007_00004' direct represents '7' with '6806'
6803 -6805 6806 0
-6806 6805 0
-6806 -6803 0
c Var 'variant_fields_00003_00007_00004' order represents '8' with '6807'
-6805 6807 0
c Var 'variant_fields_00003_00007_00004' direct represents '8' with '6808'
6805 -6807 6808 0
-6808 6807 0
-6808 -6805 0
c Var 'variant_fields_00003_00007_00004' direct represents '9' with '-6807'
6794 6796 6798 6800 6802 6804 6806 6808 -6807 0
c Encoding variable: variant_fields_00003_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00005' order represents '1' with '6809'
c Var 'variant_fields_00003_00007_00005' direct represents '1' with '6809'
c Var 'variant_fields_00003_00007_00005' order represents '2' with '6810'
-6809 6810 0
c Var 'variant_fields_00003_00007_00005' direct represents '2' with '6811'
6809 -6810 6811 0
-6811 6810 0
-6811 -6809 0
c Var 'variant_fields_00003_00007_00005' order represents '3' with '6812'
-6810 6812 0
c Var 'variant_fields_00003_00007_00005' direct represents '3' with '6813'
6810 -6812 6813 0
-6813 6812 0
-6813 -6810 0
c Var 'variant_fields_00003_00007_00005' order represents '4' with '6814'
-6812 6814 0
c Var 'variant_fields_00003_00007_00005' direct represents '4' with '6815'
6812 -6814 6815 0
-6815 6814 0
-6815 -6812 0
c Var 'variant_fields_00003_00007_00005' order represents '5' with '6816'
-6814 6816 0
c Var 'variant_fields_00003_00007_00005' direct represents '5' with '6817'
6814 -6816 6817 0
-6817 6816 0
-6817 -6814 0
c Var 'variant_fields_00003_00007_00005' order represents '6' with '6818'
-6816 6818 0
c Var 'variant_fields_00003_00007_00005' direct represents '6' with '6819'
6816 -6818 6819 0
-6819 6818 0
-6819 -6816 0
c Var 'variant_fields_00003_00007_00005' order represents '7' with '6820'
-6818 6820 0
c Var 'variant_fields_00003_00007_00005' direct represents '7' with '6821'
6818 -6820 6821 0
-6821 6820 0
-6821 -6818 0
c Var 'variant_fields_00003_00007_00005' order represents '8' with '6822'
-6820 6822 0
c Var 'variant_fields_00003_00007_00005' direct represents '8' with '6823'
6820 -6822 6823 0
-6823 6822 0
-6823 -6820 0
c Var 'variant_fields_00003_00007_00005' direct represents '9' with '-6822'
6809 6811 6813 6815 6817 6819 6821 6823 -6822 0
c Encoding variable: variant_fields_00003_00007_00006 with domain: int(3) (representing constraint )
c Var 'variant_fields_00003_00007_00006' direct represents '3' with '6824'
6824 0
c Encoding variable: variant_fields_00003_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00007' order represents '1' with '6825'
c Var 'variant_fields_00003_00007_00007' direct represents '1' with '6825'
c Var 'variant_fields_00003_00007_00007' order represents '2' with '6826'
-6825 6826 0
c Var 'variant_fields_00003_00007_00007' direct represents '2' with '6827'
6825 -6826 6827 0
-6827 6826 0
-6827 -6825 0
c Var 'variant_fields_00003_00007_00007' order represents '3' with '6828'
-6826 6828 0
c Var 'variant_fields_00003_00007_00007' direct represents '3' with '6829'
6826 -6828 6829 0
-6829 6828 0
-6829 -6826 0
c Var 'variant_fields_00003_00007_00007' order represents '4' with '6830'
-6828 6830 0
c Var 'variant_fields_00003_00007_00007' direct represents '4' with '6831'
6828 -6830 6831 0
-6831 6830 0
-6831 -6828 0
c Var 'variant_fields_00003_00007_00007' order represents '5' with '6832'
-6830 6832 0
c Var 'variant_fields_00003_00007_00007' direct represents '5' with '6833'
6830 -6832 6833 0
-6833 6832 0
-6833 -6830 0
c Var 'variant_fields_00003_00007_00007' order represents '6' with '6834'
-6832 6834 0
c Var 'variant_fields_00003_00007_00007' direct represents '6' with '6835'
6832 -6834 6835 0
-6835 6834 0
-6835 -6832 0
c Var 'variant_fields_00003_00007_00007' order represents '7' with '6836'
-6834 6836 0
c Var 'variant_fields_00003_00007_00007' direct represents '7' with '6837'
6834 -6836 6837 0
-6837 6836 0
-6837 -6834 0
c Var 'variant_fields_00003_00007_00007' order represents '8' with '6838'
-6836 6838 0
c Var 'variant_fields_00003_00007_00007' direct represents '8' with '6839'
6836 -6838 6839 0
-6839 6838 0
-6839 -6836 0
c Var 'variant_fields_00003_00007_00007' direct represents '9' with '-6838'
6825 6827 6829 6831 6833 6835 6837 6839 -6838 0
c Encoding variable: variant_fields_00003_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00008' order represents '1' with '6840'
c Var 'variant_fields_00003_00007_00008' direct represents '1' with '6840'
c Var 'variant_fields_00003_00007_00008' order represents '2' with '6841'
-6840 6841 0
c Var 'variant_fields_00003_00007_00008' direct represents '2' with '6842'
6840 -6841 6842 0
-6842 6841 0
-6842 -6840 0
c Var 'variant_fields_00003_00007_00008' order represents '3' with '6843'
-6841 6843 0
c Var 'variant_fields_00003_00007_00008' direct represents '3' with '6844'
6841 -6843 6844 0
-6844 6843 0
-6844 -6841 0
c Var 'variant_fields_00003_00007_00008' order represents '4' with '6845'
-6843 6845 0
c Var 'variant_fields_00003_00007_00008' direct represents '4' with '6846'
6843 -6845 6846 0
-6846 6845 0
-6846 -6843 0
c Var 'variant_fields_00003_00007_00008' order represents '5' with '6847'
-6845 6847 0
c Var 'variant_fields_00003_00007_00008' direct represents '5' with '6848'
6845 -6847 6848 0
-6848 6847 0
-6848 -6845 0
c Var 'variant_fields_00003_00007_00008' order represents '6' with '6849'
-6847 6849 0
c Var 'variant_fields_00003_00007_00008' direct represents '6' with '6850'
6847 -6849 6850 0
-6850 6849 0
-6850 -6847 0
c Var 'variant_fields_00003_00007_00008' order represents '7' with '6851'
-6849 6851 0
c Var 'variant_fields_00003_00007_00008' direct represents '7' with '6852'
6849 -6851 6852 0
-6852 6851 0
-6852 -6849 0
c Var 'variant_fields_00003_00007_00008' order represents '8' with '6853'
-6851 6853 0
c Var 'variant_fields_00003_00007_00008' direct represents '8' with '6854'
6851 -6853 6854 0
-6854 6853 0
-6854 -6851 0
c Var 'variant_fields_00003_00007_00008' direct represents '9' with '-6853'
6840 6842 6844 6846 6848 6850 6852 6854 -6853 0
c Encoding variable: variant_fields_00003_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00009' order represents '1' with '6855'
c Var 'variant_fields_00003_00007_00009' direct represents '1' with '6855'
c Var 'variant_fields_00003_00007_00009' order represents '2' with '6856'
-6855 6856 0
c Var 'variant_fields_00003_00007_00009' direct represents '2' with '6857'
6855 -6856 6857 0
-6857 6856 0
-6857 -6855 0
c Var 'variant_fields_00003_00007_00009' order represents '3' with '6858'
-6856 6858 0
c Var 'variant_fields_00003_00007_00009' direct represents '3' with '6859'
6856 -6858 6859 0
-6859 6858 0
-6859 -6856 0
c Var 'variant_fields_00003_00007_00009' order represents '4' with '6860'
-6858 6860 0
c Var 'variant_fields_00003_00007_00009' direct represents '4' with '6861'
6858 -6860 6861 0
-6861 6860 0
-6861 -6858 0
c Var 'variant_fields_00003_00007_00009' order represents '5' with '6862'
-6860 6862 0
c Var 'variant_fields_00003_00007_00009' direct represents '5' with '6863'
6860 -6862 6863 0
-6863 6862 0
-6863 -6860 0
c Var 'variant_fields_00003_00007_00009' order represents '6' with '6864'
-6862 6864 0
c Var 'variant_fields_00003_00007_00009' direct represents '6' with '6865'
6862 -6864 6865 0
-6865 6864 0
-6865 -6862 0
c Var 'variant_fields_00003_00007_00009' order represents '7' with '6866'
-6864 6866 0
c Var 'variant_fields_00003_00007_00009' direct represents '7' with '6867'
6864 -6866 6867 0
-6867 6866 0
-6867 -6864 0
c Var 'variant_fields_00003_00007_00009' order represents '8' with '6868'
-6866 6868 0
c Var 'variant_fields_00003_00007_00009' direct represents '8' with '6869'
6866 -6868 6869 0
-6869 6868 0
-6869 -6866 0
c Var 'variant_fields_00003_00007_00009' direct represents '9' with '-6868'
6855 6857 6859 6861 6863 6865 6867 6869 -6868 0
c Encoding variable: variant_fields_00003_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00001' order represents '1' with '6870'
c Var 'variant_fields_00003_00008_00001' direct represents '1' with '6870'
c Var 'variant_fields_00003_00008_00001' order represents '2' with '6871'
-6870 6871 0
c Var 'variant_fields_00003_00008_00001' direct represents '2' with '6872'
6870 -6871 6872 0
-6872 6871 0
-6872 -6870 0
c Var 'variant_fields_00003_00008_00001' order represents '3' with '6873'
-6871 6873 0
c Var 'variant_fields_00003_00008_00001' direct represents '3' with '6874'
6871 -6873 6874 0
-6874 6873 0
-6874 -6871 0
c Var 'variant_fields_00003_00008_00001' order represents '4' with '6875'
-6873 6875 0
c Var 'variant_fields_00003_00008_00001' direct represents '4' with '6876'
6873 -6875 6876 0
-6876 6875 0
-6876 -6873 0
c Var 'variant_fields_00003_00008_00001' order represents '5' with '6877'
-6875 6877 0
c Var 'variant_fields_00003_00008_00001' direct represents '5' with '6878'
6875 -6877 6878 0
-6878 6877 0
-6878 -6875 0
c Var 'variant_fields_00003_00008_00001' order represents '6' with '6879'
-6877 6879 0
c Var 'variant_fields_00003_00008_00001' direct represents '6' with '6880'
6877 -6879 6880 0
-6880 6879 0
-6880 -6877 0
c Var 'variant_fields_00003_00008_00001' order represents '7' with '6881'
-6879 6881 0
c Var 'variant_fields_00003_00008_00001' direct represents '7' with '6882'
6879 -6881 6882 0
-6882 6881 0
-6882 -6879 0
c Var 'variant_fields_00003_00008_00001' order represents '8' with '6883'
-6881 6883 0
c Var 'variant_fields_00003_00008_00001' direct represents '8' with '6884'
6881 -6883 6884 0
-6884 6883 0
-6884 -6881 0
c Var 'variant_fields_00003_00008_00001' direct represents '9' with '-6883'
6870 6872 6874 6876 6878 6880 6882 6884 -6883 0
c Encoding variable: variant_fields_00003_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00002' order represents '1' with '6885'
c Var 'variant_fields_00003_00008_00002' direct represents '1' with '6885'
c Var 'variant_fields_00003_00008_00002' order represents '2' with '6886'
-6885 6886 0
c Var 'variant_fields_00003_00008_00002' direct represents '2' with '6887'
6885 -6886 6887 0
-6887 6886 0
-6887 -6885 0
c Var 'variant_fields_00003_00008_00002' order represents '3' with '6888'
-6886 6888 0
c Var 'variant_fields_00003_00008_00002' direct represents '3' with '6889'
6886 -6888 6889 0
-6889 6888 0
-6889 -6886 0
c Var 'variant_fields_00003_00008_00002' order represents '4' with '6890'
-6888 6890 0
c Var 'variant_fields_00003_00008_00002' direct represents '4' with '6891'
6888 -6890 6891 0
-6891 6890 0
-6891 -6888 0
c Var 'variant_fields_00003_00008_00002' order represents '5' with '6892'
-6890 6892 0
c Var 'variant_fields_00003_00008_00002' direct represents '5' with '6893'
6890 -6892 6893 0
-6893 6892 0
-6893 -6890 0
c Var 'variant_fields_00003_00008_00002' order represents '6' with '6894'
-6892 6894 0
c Var 'variant_fields_00003_00008_00002' direct represents '6' with '6895'
6892 -6894 6895 0
-6895 6894 0
-6895 -6892 0
c Var 'variant_fields_00003_00008_00002' order represents '7' with '6896'
-6894 6896 0
c Var 'variant_fields_00003_00008_00002' direct represents '7' with '6897'
6894 -6896 6897 0
-6897 6896 0
-6897 -6894 0
c Var 'variant_fields_00003_00008_00002' order represents '8' with '6898'
-6896 6898 0
c Var 'variant_fields_00003_00008_00002' direct represents '8' with '6899'
6896 -6898 6899 0
-6899 6898 0
-6899 -6896 0
c Var 'variant_fields_00003_00008_00002' direct represents '9' with '-6898'
6885 6887 6889 6891 6893 6895 6897 6899 -6898 0
c Encoding variable: variant_fields_00003_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00003' order represents '1' with '6900'
c Var 'variant_fields_00003_00008_00003' direct represents '1' with '6900'
c Var 'variant_fields_00003_00008_00003' order represents '2' with '6901'
-6900 6901 0
c Var 'variant_fields_00003_00008_00003' direct represents '2' with '6902'
6900 -6901 6902 0
-6902 6901 0
-6902 -6900 0
c Var 'variant_fields_00003_00008_00003' order represents '3' with '6903'
-6901 6903 0
c Var 'variant_fields_00003_00008_00003' direct represents '3' with '6904'
6901 -6903 6904 0
-6904 6903 0
-6904 -6901 0
c Var 'variant_fields_00003_00008_00003' order represents '4' with '6905'
-6903 6905 0
c Var 'variant_fields_00003_00008_00003' direct represents '4' with '6906'
6903 -6905 6906 0
-6906 6905 0
-6906 -6903 0
c Var 'variant_fields_00003_00008_00003' order represents '5' with '6907'
-6905 6907 0
c Var 'variant_fields_00003_00008_00003' direct represents '5' with '6908'
6905 -6907 6908 0
-6908 6907 0
-6908 -6905 0
c Var 'variant_fields_00003_00008_00003' order represents '6' with '6909'
-6907 6909 0
c Var 'variant_fields_00003_00008_00003' direct represents '6' with '6910'
6907 -6909 6910 0
-6910 6909 0
-6910 -6907 0
c Var 'variant_fields_00003_00008_00003' order represents '7' with '6911'
-6909 6911 0
c Var 'variant_fields_00003_00008_00003' direct represents '7' with '6912'
6909 -6911 6912 0
-6912 6911 0
-6912 -6909 0
c Var 'variant_fields_00003_00008_00003' order represents '8' with '6913'
-6911 6913 0
c Var 'variant_fields_00003_00008_00003' direct represents '8' with '6914'
6911 -6913 6914 0
-6914 6913 0
-6914 -6911 0
c Var 'variant_fields_00003_00008_00003' direct represents '9' with '-6913'
6900 6902 6904 6906 6908 6910 6912 6914 -6913 0
c Encoding variable: variant_fields_00003_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00004' order represents '1' with '6915'
c Var 'variant_fields_00003_00008_00004' direct represents '1' with '6915'
c Var 'variant_fields_00003_00008_00004' order represents '2' with '6916'
-6915 6916 0
c Var 'variant_fields_00003_00008_00004' direct represents '2' with '6917'
6915 -6916 6917 0
-6917 6916 0
-6917 -6915 0
c Var 'variant_fields_00003_00008_00004' order represents '3' with '6918'
-6916 6918 0
c Var 'variant_fields_00003_00008_00004' direct represents '3' with '6919'
6916 -6918 6919 0
-6919 6918 0
-6919 -6916 0
c Var 'variant_fields_00003_00008_00004' order represents '4' with '6920'
-6918 6920 0
c Var 'variant_fields_00003_00008_00004' direct represents '4' with '6921'
6918 -6920 6921 0
-6921 6920 0
-6921 -6918 0
c Var 'variant_fields_00003_00008_00004' order represents '5' with '6922'
-6920 6922 0
c Var 'variant_fields_00003_00008_00004' direct represents '5' with '6923'
6920 -6922 6923 0
-6923 6922 0
-6923 -6920 0
c Var 'variant_fields_00003_00008_00004' order represents '6' with '6924'
-6922 6924 0
c Var 'variant_fields_00003_00008_00004' direct represents '6' with '6925'
6922 -6924 6925 0
-6925 6924 0
-6925 -6922 0
c Var 'variant_fields_00003_00008_00004' order represents '7' with '6926'
-6924 6926 0
c Var 'variant_fields_00003_00008_00004' direct represents '7' with '6927'
6924 -6926 6927 0
-6927 6926 0
-6927 -6924 0
c Var 'variant_fields_00003_00008_00004' order represents '8' with '6928'
-6926 6928 0
c Var 'variant_fields_00003_00008_00004' direct represents '8' with '6929'
6926 -6928 6929 0
-6929 6928 0
-6929 -6926 0
c Var 'variant_fields_00003_00008_00004' direct represents '9' with '-6928'
6915 6917 6919 6921 6923 6925 6927 6929 -6928 0
c Encoding variable: variant_fields_00003_00008_00005 with domain: int(7) (representing constraint )
c Var 'variant_fields_00003_00008_00005' direct represents '7' with '6930'
6930 0
c Encoding variable: variant_fields_00003_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00006' order represents '1' with '6931'
c Var 'variant_fields_00003_00008_00006' direct represents '1' with '6931'
c Var 'variant_fields_00003_00008_00006' order represents '2' with '6932'
-6931 6932 0
c Var 'variant_fields_00003_00008_00006' direct represents '2' with '6933'
6931 -6932 6933 0
-6933 6932 0
-6933 -6931 0
c Var 'variant_fields_00003_00008_00006' order represents '3' with '6934'
-6932 6934 0
c Var 'variant_fields_00003_00008_00006' direct represents '3' with '6935'
6932 -6934 6935 0
-6935 6934 0
-6935 -6932 0
c Var 'variant_fields_00003_00008_00006' order represents '4' with '6936'
-6934 6936 0
c Var 'variant_fields_00003_00008_00006' direct represents '4' with '6937'
6934 -6936 6937 0
-6937 6936 0
-6937 -6934 0
c Var 'variant_fields_00003_00008_00006' order represents '5' with '6938'
-6936 6938 0
c Var 'variant_fields_00003_00008_00006' direct represents '5' with '6939'
6936 -6938 6939 0
-6939 6938 0
-6939 -6936 0
c Var 'variant_fields_00003_00008_00006' order represents '6' with '6940'
-6938 6940 0
c Var 'variant_fields_00003_00008_00006' direct represents '6' with '6941'
6938 -6940 6941 0
-6941 6940 0
-6941 -6938 0
c Var 'variant_fields_00003_00008_00006' order represents '7' with '6942'
-6940 6942 0
c Var 'variant_fields_00003_00008_00006' direct represents '7' with '6943'
6940 -6942 6943 0
-6943 6942 0
-6943 -6940 0
c Var 'variant_fields_00003_00008_00006' order represents '8' with '6944'
-6942 6944 0
c Var 'variant_fields_00003_00008_00006' direct represents '8' with '6945'
6942 -6944 6945 0
-6945 6944 0
-6945 -6942 0
c Var 'variant_fields_00003_00008_00006' direct represents '9' with '-6944'
6931 6933 6935 6937 6939 6941 6943 6945 -6944 0
c Encoding variable: variant_fields_00003_00008_00007 with domain: int(8) (representing constraint )
c Var 'variant_fields_00003_00008_00007' direct represents '8' with '6946'
6946 0
c Encoding variable: variant_fields_00003_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00008' order represents '1' with '6947'
c Var 'variant_fields_00003_00008_00008' direct represents '1' with '6947'
c Var 'variant_fields_00003_00008_00008' order represents '2' with '6948'
-6947 6948 0
c Var 'variant_fields_00003_00008_00008' direct represents '2' with '6949'
6947 -6948 6949 0
-6949 6948 0
-6949 -6947 0
c Var 'variant_fields_00003_00008_00008' order represents '3' with '6950'
-6948 6950 0
c Var 'variant_fields_00003_00008_00008' direct represents '3' with '6951'
6948 -6950 6951 0
-6951 6950 0
-6951 -6948 0
c Var 'variant_fields_00003_00008_00008' order represents '4' with '6952'
-6950 6952 0
c Var 'variant_fields_00003_00008_00008' direct represents '4' with '6953'
6950 -6952 6953 0
-6953 6952 0
-6953 -6950 0
c Var 'variant_fields_00003_00008_00008' order represents '5' with '6954'
-6952 6954 0
c Var 'variant_fields_00003_00008_00008' direct represents '5' with '6955'
6952 -6954 6955 0
-6955 6954 0
-6955 -6952 0
c Var 'variant_fields_00003_00008_00008' order represents '6' with '6956'
-6954 6956 0
c Var 'variant_fields_00003_00008_00008' direct represents '6' with '6957'
6954 -6956 6957 0
-6957 6956 0
-6957 -6954 0
c Var 'variant_fields_00003_00008_00008' order represents '7' with '6958'
-6956 6958 0
c Var 'variant_fields_00003_00008_00008' direct represents '7' with '6959'
6956 -6958 6959 0
-6959 6958 0
-6959 -6956 0
c Var 'variant_fields_00003_00008_00008' order represents '8' with '6960'
-6958 6960 0
c Var 'variant_fields_00003_00008_00008' direct represents '8' with '6961'
6958 -6960 6961 0
-6961 6960 0
-6961 -6958 0
c Var 'variant_fields_00003_00008_00008' direct represents '9' with '-6960'
6947 6949 6951 6953 6955 6957 6959 6961 -6960 0
c Encoding variable: variant_fields_00003_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00009' order represents '1' with '6962'
c Var 'variant_fields_00003_00008_00009' direct represents '1' with '6962'
c Var 'variant_fields_00003_00008_00009' order represents '2' with '6963'
-6962 6963 0
c Var 'variant_fields_00003_00008_00009' direct represents '2' with '6964'
6962 -6963 6964 0
-6964 6963 0
-6964 -6962 0
c Var 'variant_fields_00003_00008_00009' order represents '3' with '6965'
-6963 6965 0
c Var 'variant_fields_00003_00008_00009' direct represents '3' with '6966'
6963 -6965 6966 0
-6966 6965 0
-6966 -6963 0
c Var 'variant_fields_00003_00008_00009' order represents '4' with '6967'
-6965 6967 0
c Var 'variant_fields_00003_00008_00009' direct represents '4' with '6968'
6965 -6967 6968 0
-6968 6967 0
-6968 -6965 0
c Var 'variant_fields_00003_00008_00009' order represents '5' with '6969'
-6967 6969 0
c Var 'variant_fields_00003_00008_00009' direct represents '5' with '6970'
6967 -6969 6970 0
-6970 6969 0
-6970 -6967 0
c Var 'variant_fields_00003_00008_00009' order represents '6' with '6971'
-6969 6971 0
c Var 'variant_fields_00003_00008_00009' direct represents '6' with '6972'
6969 -6971 6972 0
-6972 6971 0
-6972 -6969 0
c Var 'variant_fields_00003_00008_00009' order represents '7' with '6973'
-6971 6973 0
c Var 'variant_fields_00003_00008_00009' direct represents '7' with '6974'
6971 -6973 6974 0
-6974 6973 0
-6974 -6971 0
c Var 'variant_fields_00003_00008_00009' order represents '8' with '6975'
-6973 6975 0
c Var 'variant_fields_00003_00008_00009' direct represents '8' with '6976'
6973 -6975 6976 0
-6976 6975 0
-6976 -6973 0
c Var 'variant_fields_00003_00008_00009' direct represents '9' with '-6975'
6962 6964 6966 6968 6970 6972 6974 6976 -6975 0
c Encoding variable: variant_fields_00003_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00001' order represents '1' with '6977'
c Var 'variant_fields_00003_00009_00001' direct represents '1' with '6977'
c Var 'variant_fields_00003_00009_00001' order represents '2' with '6978'
-6977 6978 0
c Var 'variant_fields_00003_00009_00001' direct represents '2' with '6979'
6977 -6978 6979 0
-6979 6978 0
-6979 -6977 0
c Var 'variant_fields_00003_00009_00001' order represents '3' with '6980'
-6978 6980 0
c Var 'variant_fields_00003_00009_00001' direct represents '3' with '6981'
6978 -6980 6981 0
-6981 6980 0
-6981 -6978 0
c Var 'variant_fields_00003_00009_00001' order represents '4' with '6982'
-6980 6982 0
c Var 'variant_fields_00003_00009_00001' direct represents '4' with '6983'
6980 -6982 6983 0
-6983 6982 0
-6983 -6980 0
c Var 'variant_fields_00003_00009_00001' order represents '5' with '6984'
-6982 6984 0
c Var 'variant_fields_00003_00009_00001' direct represents '5' with '6985'
6982 -6984 6985 0
-6985 6984 0
-6985 -6982 0
c Var 'variant_fields_00003_00009_00001' order represents '6' with '6986'
-6984 6986 0
c Var 'variant_fields_00003_00009_00001' direct represents '6' with '6987'
6984 -6986 6987 0
-6987 6986 0
-6987 -6984 0
c Var 'variant_fields_00003_00009_00001' order represents '7' with '6988'
-6986 6988 0
c Var 'variant_fields_00003_00009_00001' direct represents '7' with '6989'
6986 -6988 6989 0
-6989 6988 0
-6989 -6986 0
c Var 'variant_fields_00003_00009_00001' order represents '8' with '6990'
-6988 6990 0
c Var 'variant_fields_00003_00009_00001' direct represents '8' with '6991'
6988 -6990 6991 0
-6991 6990 0
-6991 -6988 0
c Var 'variant_fields_00003_00009_00001' direct represents '9' with '-6990'
6977 6979 6981 6983 6985 6987 6989 6991 -6990 0
c Encoding variable: variant_fields_00003_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00002' order represents '1' with '6992'
c Var 'variant_fields_00003_00009_00002' direct represents '1' with '6992'
c Var 'variant_fields_00003_00009_00002' order represents '2' with '6993'
-6992 6993 0
c Var 'variant_fields_00003_00009_00002' direct represents '2' with '6994'
6992 -6993 6994 0
-6994 6993 0
-6994 -6992 0
c Var 'variant_fields_00003_00009_00002' order represents '3' with '6995'
-6993 6995 0
c Var 'variant_fields_00003_00009_00002' direct represents '3' with '6996'
6993 -6995 6996 0
-6996 6995 0
-6996 -6993 0
c Var 'variant_fields_00003_00009_00002' order represents '4' with '6997'
-6995 6997 0
c Var 'variant_fields_00003_00009_00002' direct represents '4' with '6998'
6995 -6997 6998 0
-6998 6997 0
-6998 -6995 0
c Var 'variant_fields_00003_00009_00002' order represents '5' with '6999'
-6997 6999 0
c Var 'variant_fields_00003_00009_00002' direct represents '5' with '7000'
6997 -6999 7000 0
-7000 6999 0
-7000 -6997 0
c Var 'variant_fields_00003_00009_00002' order represents '6' with '7001'
-6999 7001 0
c Var 'variant_fields_00003_00009_00002' direct represents '6' with '7002'
6999 -7001 7002 0
-7002 7001 0
-7002 -6999 0
c Var 'variant_fields_00003_00009_00002' order represents '7' with '7003'
-7001 7003 0
c Var 'variant_fields_00003_00009_00002' direct represents '7' with '7004'
7001 -7003 7004 0
-7004 7003 0
-7004 -7001 0
c Var 'variant_fields_00003_00009_00002' order represents '8' with '7005'
-7003 7005 0
c Var 'variant_fields_00003_00009_00002' direct represents '8' with '7006'
7003 -7005 7006 0
-7006 7005 0
-7006 -7003 0
c Var 'variant_fields_00003_00009_00002' direct represents '9' with '-7005'
6992 6994 6996 6998 7000 7002 7004 7006 -7005 0
c Encoding variable: variant_fields_00003_00009_00003 with domain: int(8) (representing constraint )
c Var 'variant_fields_00003_00009_00003' direct represents '8' with '7007'
7007 0
c Encoding variable: variant_fields_00003_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00004' order represents '1' with '7008'
c Var 'variant_fields_00003_00009_00004' direct represents '1' with '7008'
c Var 'variant_fields_00003_00009_00004' order represents '2' with '7009'
-7008 7009 0
c Var 'variant_fields_00003_00009_00004' direct represents '2' with '7010'
7008 -7009 7010 0
-7010 7009 0
-7010 -7008 0
c Var 'variant_fields_00003_00009_00004' order represents '3' with '7011'
-7009 7011 0
c Var 'variant_fields_00003_00009_00004' direct represents '3' with '7012'
7009 -7011 7012 0
-7012 7011 0
-7012 -7009 0
c Var 'variant_fields_00003_00009_00004' order represents '4' with '7013'
-7011 7013 0
c Var 'variant_fields_00003_00009_00004' direct represents '4' with '7014'
7011 -7013 7014 0
-7014 7013 0
-7014 -7011 0
c Var 'variant_fields_00003_00009_00004' order represents '5' with '7015'
-7013 7015 0
c Var 'variant_fields_00003_00009_00004' direct represents '5' with '7016'
7013 -7015 7016 0
-7016 7015 0
-7016 -7013 0
c Var 'variant_fields_00003_00009_00004' order represents '6' with '7017'
-7015 7017 0
c Var 'variant_fields_00003_00009_00004' direct represents '6' with '7018'
7015 -7017 7018 0
-7018 7017 0
-7018 -7015 0
c Var 'variant_fields_00003_00009_00004' order represents '7' with '7019'
-7017 7019 0
c Var 'variant_fields_00003_00009_00004' direct represents '7' with '7020'
7017 -7019 7020 0
-7020 7019 0
-7020 -7017 0
c Var 'variant_fields_00003_00009_00004' order represents '8' with '7021'
-7019 7021 0
c Var 'variant_fields_00003_00009_00004' direct represents '8' with '7022'
7019 -7021 7022 0
-7022 7021 0
-7022 -7019 0
c Var 'variant_fields_00003_00009_00004' direct represents '9' with '-7021'
7008 7010 7012 7014 7016 7018 7020 7022 -7021 0
c Encoding variable: variant_fields_00003_00009_00005 with domain: int(1) (representing constraint )
c Var 'variant_fields_00003_00009_00005' direct represents '1' with '7023'
7023 0
c Encoding variable: variant_fields_00003_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00006' order represents '1' with '7024'
c Var 'variant_fields_00003_00009_00006' direct represents '1' with '7024'
c Var 'variant_fields_00003_00009_00006' order represents '2' with '7025'
-7024 7025 0
c Var 'variant_fields_00003_00009_00006' direct represents '2' with '7026'
7024 -7025 7026 0
-7026 7025 0
-7026 -7024 0
c Var 'variant_fields_00003_00009_00006' order represents '3' with '7027'
-7025 7027 0
c Var 'variant_fields_00003_00009_00006' direct represents '3' with '7028'
7025 -7027 7028 0
-7028 7027 0
-7028 -7025 0
c Var 'variant_fields_00003_00009_00006' order represents '4' with '7029'
-7027 7029 0
c Var 'variant_fields_00003_00009_00006' direct represents '4' with '7030'
7027 -7029 7030 0
-7030 7029 0
-7030 -7027 0
c Var 'variant_fields_00003_00009_00006' order represents '5' with '7031'
-7029 7031 0
c Var 'variant_fields_00003_00009_00006' direct represents '5' with '7032'
7029 -7031 7032 0
-7032 7031 0
-7032 -7029 0
c Var 'variant_fields_00003_00009_00006' order represents '6' with '7033'
-7031 7033 0
c Var 'variant_fields_00003_00009_00006' direct represents '6' with '7034'
7031 -7033 7034 0
-7034 7033 0
-7034 -7031 0
c Var 'variant_fields_00003_00009_00006' order represents '7' with '7035'
-7033 7035 0
c Var 'variant_fields_00003_00009_00006' direct represents '7' with '7036'
7033 -7035 7036 0
-7036 7035 0
-7036 -7033 0
c Var 'variant_fields_00003_00009_00006' order represents '8' with '7037'
-7035 7037 0
c Var 'variant_fields_00003_00009_00006' direct represents '8' with '7038'
7035 -7037 7038 0
-7038 7037 0
-7038 -7035 0
c Var 'variant_fields_00003_00009_00006' direct represents '9' with '-7037'
7024 7026 7028 7030 7032 7034 7036 7038 -7037 0
c Encoding variable: variant_fields_00003_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00007' order represents '1' with '7039'
c Var 'variant_fields_00003_00009_00007' direct represents '1' with '7039'
c Var 'variant_fields_00003_00009_00007' order represents '2' with '7040'
-7039 7040 0
c Var 'variant_fields_00003_00009_00007' direct represents '2' with '7041'
7039 -7040 7041 0
-7041 7040 0
-7041 -7039 0
c Var 'variant_fields_00003_00009_00007' order represents '3' with '7042'
-7040 7042 0
c Var 'variant_fields_00003_00009_00007' direct represents '3' with '7043'
7040 -7042 7043 0
-7043 7042 0
-7043 -7040 0
c Var 'variant_fields_00003_00009_00007' order represents '4' with '7044'
-7042 7044 0
c Var 'variant_fields_00003_00009_00007' direct represents '4' with '7045'
7042 -7044 7045 0
-7045 7044 0
-7045 -7042 0
c Var 'variant_fields_00003_00009_00007' order represents '5' with '7046'
-7044 7046 0
c Var 'variant_fields_00003_00009_00007' direct represents '5' with '7047'
7044 -7046 7047 0
-7047 7046 0
-7047 -7044 0
c Var 'variant_fields_00003_00009_00007' order represents '6' with '7048'
-7046 7048 0
c Var 'variant_fields_00003_00009_00007' direct represents '6' with '7049'
7046 -7048 7049 0
-7049 7048 0
-7049 -7046 0
c Var 'variant_fields_00003_00009_00007' order represents '7' with '7050'
-7048 7050 0
c Var 'variant_fields_00003_00009_00007' direct represents '7' with '7051'
7048 -7050 7051 0
-7051 7050 0
-7051 -7048 0
c Var 'variant_fields_00003_00009_00007' order represents '8' with '7052'
-7050 7052 0
c Var 'variant_fields_00003_00009_00007' direct represents '8' with '7053'
7050 -7052 7053 0
-7053 7052 0
-7053 -7050 0
c Var 'variant_fields_00003_00009_00007' direct represents '9' with '-7052'
7039 7041 7043 7045 7047 7049 7051 7053 -7052 0
c Encoding variable: variant_fields_00003_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00008' order represents '1' with '7054'
c Var 'variant_fields_00003_00009_00008' direct represents '1' with '7054'
c Var 'variant_fields_00003_00009_00008' order represents '2' with '7055'
-7054 7055 0
c Var 'variant_fields_00003_00009_00008' direct represents '2' with '7056'
7054 -7055 7056 0
-7056 7055 0
-7056 -7054 0
c Var 'variant_fields_00003_00009_00008' order represents '3' with '7057'
-7055 7057 0
c Var 'variant_fields_00003_00009_00008' direct represents '3' with '7058'
7055 -7057 7058 0
-7058 7057 0
-7058 -7055 0
c Var 'variant_fields_00003_00009_00008' order represents '4' with '7059'
-7057 7059 0
c Var 'variant_fields_00003_00009_00008' direct represents '4' with '7060'
7057 -7059 7060 0
-7060 7059 0
-7060 -7057 0
c Var 'variant_fields_00003_00009_00008' order represents '5' with '7061'
-7059 7061 0
c Var 'variant_fields_00003_00009_00008' direct represents '5' with '7062'
7059 -7061 7062 0
-7062 7061 0
-7062 -7059 0
c Var 'variant_fields_00003_00009_00008' order represents '6' with '7063'
-7061 7063 0
c Var 'variant_fields_00003_00009_00008' direct represents '6' with '7064'
7061 -7063 7064 0
-7064 7063 0
-7064 -7061 0
c Var 'variant_fields_00003_00009_00008' order represents '7' with '7065'
-7063 7065 0
c Var 'variant_fields_00003_00009_00008' direct represents '7' with '7066'
7063 -7065 7066 0
-7066 7065 0
-7066 -7063 0
c Var 'variant_fields_00003_00009_00008' order represents '8' with '7067'
-7065 7067 0
c Var 'variant_fields_00003_00009_00008' direct represents '8' with '7068'
7065 -7067 7068 0
-7068 7067 0
-7068 -7065 0
c Var 'variant_fields_00003_00009_00008' direct represents '9' with '-7067'
7054 7056 7058 7060 7062 7064 7066 7068 -7067 0
c Encoding variable: variant_fields_00003_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00009' order represents '1' with '7069'
c Var 'variant_fields_00003_00009_00009' direct represents '1' with '7069'
c Var 'variant_fields_00003_00009_00009' order represents '2' with '7070'
-7069 7070 0
c Var 'variant_fields_00003_00009_00009' direct represents '2' with '7071'
7069 -7070 7071 0
-7071 7070 0
-7071 -7069 0
c Var 'variant_fields_00003_00009_00009' order represents '3' with '7072'
-7070 7072 0
c Var 'variant_fields_00003_00009_00009' direct represents '3' with '7073'
7070 -7072 7073 0
-7073 7072 0
-7073 -7070 0
c Var 'variant_fields_00003_00009_00009' order represents '4' with '7074'
-7072 7074 0
c Var 'variant_fields_00003_00009_00009' direct represents '4' with '7075'
7072 -7074 7075 0
-7075 7074 0
-7075 -7072 0
c Var 'variant_fields_00003_00009_00009' order represents '5' with '7076'
-7074 7076 0
c Var 'variant_fields_00003_00009_00009' direct represents '5' with '7077'
7074 -7076 7077 0
-7077 7076 0
-7077 -7074 0
c Var 'variant_fields_00003_00009_00009' order represents '6' with '7078'
-7076 7078 0
c Var 'variant_fields_00003_00009_00009' direct represents '6' with '7079'
7076 -7078 7079 0
-7079 7078 0
-7079 -7076 0
c Var 'variant_fields_00003_00009_00009' order represents '7' with '7080'
-7078 7080 0
c Var 'variant_fields_00003_00009_00009' direct represents '7' with '7081'
7078 -7080 7081 0
-7081 7080 0
-7081 -7078 0
c Var 'variant_fields_00003_00009_00009' order represents '8' with '7082'
-7080 7082 0
c Var 'variant_fields_00003_00009_00009' direct represents '8' with '7083'
7080 -7082 7083 0
-7083 7082 0
-7083 -7080 0
c Var 'variant_fields_00003_00009_00009' direct represents '9' with '-7082'
7069 7071 7073 7075 7077 7079 7081 7083 -7082 0
c Encoding variable: variant_fields_00004_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00001' order represents '1' with '7084'
c Var 'variant_fields_00004_00001_00001' direct represents '1' with '7084'
c Var 'variant_fields_00004_00001_00001' order represents '2' with '7085'
-7084 7085 0
c Var 'variant_fields_00004_00001_00001' direct represents '2' with '7086'
7084 -7085 7086 0
-7086 7085 0
-7086 -7084 0
c Var 'variant_fields_00004_00001_00001' order represents '3' with '7087'
-7085 7087 0
c Var 'variant_fields_00004_00001_00001' direct represents '3' with '7088'
7085 -7087 7088 0
-7088 7087 0
-7088 -7085 0
c Var 'variant_fields_00004_00001_00001' order represents '4' with '7089'
-7087 7089 0
c Var 'variant_fields_00004_00001_00001' direct represents '4' with '7090'
7087 -7089 7090 0
-7090 7089 0
-7090 -7087 0
c Var 'variant_fields_00004_00001_00001' order represents '5' with '7091'
-7089 7091 0
c Var 'variant_fields_00004_00001_00001' direct represents '5' with '7092'
7089 -7091 7092 0
-7092 7091 0
-7092 -7089 0
c Var 'variant_fields_00004_00001_00001' order represents '6' with '7093'
-7091 7093 0
c Var 'variant_fields_00004_00001_00001' direct represents '6' with '7094'
7091 -7093 7094 0
-7094 7093 0
-7094 -7091 0
c Var 'variant_fields_00004_00001_00001' order represents '7' with '7095'
-7093 7095 0
c Var 'variant_fields_00004_00001_00001' direct represents '7' with '7096'
7093 -7095 7096 0
-7096 7095 0
-7096 -7093 0
c Var 'variant_fields_00004_00001_00001' order represents '8' with '7097'
-7095 7097 0
c Var 'variant_fields_00004_00001_00001' direct represents '8' with '7098'
7095 -7097 7098 0
-7098 7097 0
-7098 -7095 0
c Var 'variant_fields_00004_00001_00001' direct represents '9' with '-7097'
7084 7086 7088 7090 7092 7094 7096 7098 -7097 0
c Encoding variable: variant_fields_00004_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00002' order represents '1' with '7099'
c Var 'variant_fields_00004_00001_00002' direct represents '1' with '7099'
c Var 'variant_fields_00004_00001_00002' order represents '2' with '7100'
-7099 7100 0
c Var 'variant_fields_00004_00001_00002' direct represents '2' with '7101'
7099 -7100 7101 0
-7101 7100 0
-7101 -7099 0
c Var 'variant_fields_00004_00001_00002' order represents '3' with '7102'
-7100 7102 0
c Var 'variant_fields_00004_00001_00002' direct represents '3' with '7103'
7100 -7102 7103 0
-7103 7102 0
-7103 -7100 0
c Var 'variant_fields_00004_00001_00002' order represents '4' with '7104'
-7102 7104 0
c Var 'variant_fields_00004_00001_00002' direct represents '4' with '7105'
7102 -7104 7105 0
-7105 7104 0
-7105 -7102 0
c Var 'variant_fields_00004_00001_00002' order represents '5' with '7106'
-7104 7106 0
c Var 'variant_fields_00004_00001_00002' direct represents '5' with '7107'
7104 -7106 7107 0
-7107 7106 0
-7107 -7104 0
c Var 'variant_fields_00004_00001_00002' order represents '6' with '7108'
-7106 7108 0
c Var 'variant_fields_00004_00001_00002' direct represents '6' with '7109'
7106 -7108 7109 0
-7109 7108 0
-7109 -7106 0
c Var 'variant_fields_00004_00001_00002' order represents '7' with '7110'
-7108 7110 0
c Var 'variant_fields_00004_00001_00002' direct represents '7' with '7111'
7108 -7110 7111 0
-7111 7110 0
-7111 -7108 0
c Var 'variant_fields_00004_00001_00002' order represents '8' with '7112'
-7110 7112 0
c Var 'variant_fields_00004_00001_00002' direct represents '8' with '7113'
7110 -7112 7113 0
-7113 7112 0
-7113 -7110 0
c Var 'variant_fields_00004_00001_00002' direct represents '9' with '-7112'
7099 7101 7103 7105 7107 7109 7111 7113 -7112 0
c Encoding variable: variant_fields_00004_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00003' order represents '1' with '7114'
c Var 'variant_fields_00004_00001_00003' direct represents '1' with '7114'
c Var 'variant_fields_00004_00001_00003' order represents '2' with '7115'
-7114 7115 0
c Var 'variant_fields_00004_00001_00003' direct represents '2' with '7116'
7114 -7115 7116 0
-7116 7115 0
-7116 -7114 0
c Var 'variant_fields_00004_00001_00003' order represents '3' with '7117'
-7115 7117 0
c Var 'variant_fields_00004_00001_00003' direct represents '3' with '7118'
7115 -7117 7118 0
-7118 7117 0
-7118 -7115 0
c Var 'variant_fields_00004_00001_00003' order represents '4' with '7119'
-7117 7119 0
c Var 'variant_fields_00004_00001_00003' direct represents '4' with '7120'
7117 -7119 7120 0
-7120 7119 0
-7120 -7117 0
c Var 'variant_fields_00004_00001_00003' order represents '5' with '7121'
-7119 7121 0
c Var 'variant_fields_00004_00001_00003' direct represents '5' with '7122'
7119 -7121 7122 0
-7122 7121 0
-7122 -7119 0
c Var 'variant_fields_00004_00001_00003' order represents '6' with '7123'
-7121 7123 0
c Var 'variant_fields_00004_00001_00003' direct represents '6' with '7124'
7121 -7123 7124 0
-7124 7123 0
-7124 -7121 0
c Var 'variant_fields_00004_00001_00003' order represents '7' with '7125'
-7123 7125 0
c Var 'variant_fields_00004_00001_00003' direct represents '7' with '7126'
7123 -7125 7126 0
-7126 7125 0
-7126 -7123 0
c Var 'variant_fields_00004_00001_00003' order represents '8' with '7127'
-7125 7127 0
c Var 'variant_fields_00004_00001_00003' direct represents '8' with '7128'
7125 -7127 7128 0
-7128 7127 0
-7128 -7125 0
c Var 'variant_fields_00004_00001_00003' direct represents '9' with '-7127'
7114 7116 7118 7120 7122 7124 7126 7128 -7127 0
c Encoding variable: variant_fields_00004_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00004' order represents '1' with '7129'
c Var 'variant_fields_00004_00001_00004' direct represents '1' with '7129'
c Var 'variant_fields_00004_00001_00004' order represents '2' with '7130'
-7129 7130 0
c Var 'variant_fields_00004_00001_00004' direct represents '2' with '7131'
7129 -7130 7131 0
-7131 7130 0
-7131 -7129 0
c Var 'variant_fields_00004_00001_00004' order represents '3' with '7132'
-7130 7132 0
c Var 'variant_fields_00004_00001_00004' direct represents '3' with '7133'
7130 -7132 7133 0
-7133 7132 0
-7133 -7130 0
c Var 'variant_fields_00004_00001_00004' order represents '4' with '7134'
-7132 7134 0
c Var 'variant_fields_00004_00001_00004' direct represents '4' with '7135'
7132 -7134 7135 0
-7135 7134 0
-7135 -7132 0
c Var 'variant_fields_00004_00001_00004' order represents '5' with '7136'
-7134 7136 0
c Var 'variant_fields_00004_00001_00004' direct represents '5' with '7137'
7134 -7136 7137 0
-7137 7136 0
-7137 -7134 0
c Var 'variant_fields_00004_00001_00004' order represents '6' with '7138'
-7136 7138 0
c Var 'variant_fields_00004_00001_00004' direct represents '6' with '7139'
7136 -7138 7139 0
-7139 7138 0
-7139 -7136 0
c Var 'variant_fields_00004_00001_00004' order represents '7' with '7140'
-7138 7140 0
c Var 'variant_fields_00004_00001_00004' direct represents '7' with '7141'
7138 -7140 7141 0
-7141 7140 0
-7141 -7138 0
c Var 'variant_fields_00004_00001_00004' order represents '8' with '7142'
-7140 7142 0
c Var 'variant_fields_00004_00001_00004' direct represents '8' with '7143'
7140 -7142 7143 0
-7143 7142 0
-7143 -7140 0
c Var 'variant_fields_00004_00001_00004' direct represents '9' with '-7142'
7129 7131 7133 7135 7137 7139 7141 7143 -7142 0
c Encoding variable: variant_fields_00004_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00005' order represents '1' with '7144'
c Var 'variant_fields_00004_00001_00005' direct represents '1' with '7144'
c Var 'variant_fields_00004_00001_00005' order represents '2' with '7145'
-7144 7145 0
c Var 'variant_fields_00004_00001_00005' direct represents '2' with '7146'
7144 -7145 7146 0
-7146 7145 0
-7146 -7144 0
c Var 'variant_fields_00004_00001_00005' order represents '3' with '7147'
-7145 7147 0
c Var 'variant_fields_00004_00001_00005' direct represents '3' with '7148'
7145 -7147 7148 0
-7148 7147 0
-7148 -7145 0
c Var 'variant_fields_00004_00001_00005' order represents '4' with '7149'
-7147 7149 0
c Var 'variant_fields_00004_00001_00005' direct represents '4' with '7150'
7147 -7149 7150 0
-7150 7149 0
-7150 -7147 0
c Var 'variant_fields_00004_00001_00005' order represents '5' with '7151'
-7149 7151 0
c Var 'variant_fields_00004_00001_00005' direct represents '5' with '7152'
7149 -7151 7152 0
-7152 7151 0
-7152 -7149 0
c Var 'variant_fields_00004_00001_00005' order represents '6' with '7153'
-7151 7153 0
c Var 'variant_fields_00004_00001_00005' direct represents '6' with '7154'
7151 -7153 7154 0
-7154 7153 0
-7154 -7151 0
c Var 'variant_fields_00004_00001_00005' order represents '7' with '7155'
-7153 7155 0
c Var 'variant_fields_00004_00001_00005' direct represents '7' with '7156'
7153 -7155 7156 0
-7156 7155 0
-7156 -7153 0
c Var 'variant_fields_00004_00001_00005' order represents '8' with '7157'
-7155 7157 0
c Var 'variant_fields_00004_00001_00005' direct represents '8' with '7158'
7155 -7157 7158 0
-7158 7157 0
-7158 -7155 0
c Var 'variant_fields_00004_00001_00005' direct represents '9' with '-7157'
7144 7146 7148 7150 7152 7154 7156 7158 -7157 0
c Encoding variable: variant_fields_00004_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00006' order represents '1' with '7159'
c Var 'variant_fields_00004_00001_00006' direct represents '1' with '7159'
c Var 'variant_fields_00004_00001_00006' order represents '2' with '7160'
-7159 7160 0
c Var 'variant_fields_00004_00001_00006' direct represents '2' with '7161'
7159 -7160 7161 0
-7161 7160 0
-7161 -7159 0
c Var 'variant_fields_00004_00001_00006' order represents '3' with '7162'
-7160 7162 0
c Var 'variant_fields_00004_00001_00006' direct represents '3' with '7163'
7160 -7162 7163 0
-7163 7162 0
-7163 -7160 0
c Var 'variant_fields_00004_00001_00006' order represents '4' with '7164'
-7162 7164 0
c Var 'variant_fields_00004_00001_00006' direct represents '4' with '7165'
7162 -7164 7165 0
-7165 7164 0
-7165 -7162 0
c Var 'variant_fields_00004_00001_00006' order represents '5' with '7166'
-7164 7166 0
c Var 'variant_fields_00004_00001_00006' direct represents '5' with '7167'
7164 -7166 7167 0
-7167 7166 0
-7167 -7164 0
c Var 'variant_fields_00004_00001_00006' order represents '6' with '7168'
-7166 7168 0
c Var 'variant_fields_00004_00001_00006' direct represents '6' with '7169'
7166 -7168 7169 0
-7169 7168 0
-7169 -7166 0
c Var 'variant_fields_00004_00001_00006' order represents '7' with '7170'
-7168 7170 0
c Var 'variant_fields_00004_00001_00006' direct represents '7' with '7171'
7168 -7170 7171 0
-7171 7170 0
-7171 -7168 0
c Var 'variant_fields_00004_00001_00006' order represents '8' with '7172'
-7170 7172 0
c Var 'variant_fields_00004_00001_00006' direct represents '8' with '7173'
7170 -7172 7173 0
-7173 7172 0
-7173 -7170 0
c Var 'variant_fields_00004_00001_00006' direct represents '9' with '-7172'
7159 7161 7163 7165 7167 7169 7171 7173 -7172 0
c Encoding variable: variant_fields_00004_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00007' order represents '1' with '7174'
c Var 'variant_fields_00004_00001_00007' direct represents '1' with '7174'
c Var 'variant_fields_00004_00001_00007' order represents '2' with '7175'
-7174 7175 0
c Var 'variant_fields_00004_00001_00007' direct represents '2' with '7176'
7174 -7175 7176 0
-7176 7175 0
-7176 -7174 0
c Var 'variant_fields_00004_00001_00007' order represents '3' with '7177'
-7175 7177 0
c Var 'variant_fields_00004_00001_00007' direct represents '3' with '7178'
7175 -7177 7178 0
-7178 7177 0
-7178 -7175 0
c Var 'variant_fields_00004_00001_00007' order represents '4' with '7179'
-7177 7179 0
c Var 'variant_fields_00004_00001_00007' direct represents '4' with '7180'
7177 -7179 7180 0
-7180 7179 0
-7180 -7177 0
c Var 'variant_fields_00004_00001_00007' order represents '5' with '7181'
-7179 7181 0
c Var 'variant_fields_00004_00001_00007' direct represents '5' with '7182'
7179 -7181 7182 0
-7182 7181 0
-7182 -7179 0
c Var 'variant_fields_00004_00001_00007' order represents '6' with '7183'
-7181 7183 0
c Var 'variant_fields_00004_00001_00007' direct represents '6' with '7184'
7181 -7183 7184 0
-7184 7183 0
-7184 -7181 0
c Var 'variant_fields_00004_00001_00007' order represents '7' with '7185'
-7183 7185 0
c Var 'variant_fields_00004_00001_00007' direct represents '7' with '7186'
7183 -7185 7186 0
-7186 7185 0
-7186 -7183 0
c Var 'variant_fields_00004_00001_00007' order represents '8' with '7187'
-7185 7187 0
c Var 'variant_fields_00004_00001_00007' direct represents '8' with '7188'
7185 -7187 7188 0
-7188 7187 0
-7188 -7185 0
c Var 'variant_fields_00004_00001_00007' direct represents '9' with '-7187'
7174 7176 7178 7180 7182 7184 7186 7188 -7187 0
c Encoding variable: variant_fields_00004_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00008' order represents '1' with '7189'
c Var 'variant_fields_00004_00001_00008' direct represents '1' with '7189'
c Var 'variant_fields_00004_00001_00008' order represents '2' with '7190'
-7189 7190 0
c Var 'variant_fields_00004_00001_00008' direct represents '2' with '7191'
7189 -7190 7191 0
-7191 7190 0
-7191 -7189 0
c Var 'variant_fields_00004_00001_00008' order represents '3' with '7192'
-7190 7192 0
c Var 'variant_fields_00004_00001_00008' direct represents '3' with '7193'
7190 -7192 7193 0
-7193 7192 0
-7193 -7190 0
c Var 'variant_fields_00004_00001_00008' order represents '4' with '7194'
-7192 7194 0
c Var 'variant_fields_00004_00001_00008' direct represents '4' with '7195'
7192 -7194 7195 0
-7195 7194 0
-7195 -7192 0
c Var 'variant_fields_00004_00001_00008' order represents '5' with '7196'
-7194 7196 0
c Var 'variant_fields_00004_00001_00008' direct represents '5' with '7197'
7194 -7196 7197 0
-7197 7196 0
-7197 -7194 0
c Var 'variant_fields_00004_00001_00008' order represents '6' with '7198'
-7196 7198 0
c Var 'variant_fields_00004_00001_00008' direct represents '6' with '7199'
7196 -7198 7199 0
-7199 7198 0
-7199 -7196 0
c Var 'variant_fields_00004_00001_00008' order represents '7' with '7200'
-7198 7200 0
c Var 'variant_fields_00004_00001_00008' direct represents '7' with '7201'
7198 -7200 7201 0
-7201 7200 0
-7201 -7198 0
c Var 'variant_fields_00004_00001_00008' order represents '8' with '7202'
-7200 7202 0
c Var 'variant_fields_00004_00001_00008' direct represents '8' with '7203'
7200 -7202 7203 0
-7203 7202 0
-7203 -7200 0
c Var 'variant_fields_00004_00001_00008' direct represents '9' with '-7202'
7189 7191 7193 7195 7197 7199 7201 7203 -7202 0
c Encoding variable: variant_fields_00004_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00009' order represents '1' with '7204'
c Var 'variant_fields_00004_00001_00009' direct represents '1' with '7204'
c Var 'variant_fields_00004_00001_00009' order represents '2' with '7205'
-7204 7205 0
c Var 'variant_fields_00004_00001_00009' direct represents '2' with '7206'
7204 -7205 7206 0
-7206 7205 0
-7206 -7204 0
c Var 'variant_fields_00004_00001_00009' order represents '3' with '7207'
-7205 7207 0
c Var 'variant_fields_00004_00001_00009' direct represents '3' with '7208'
7205 -7207 7208 0
-7208 7207 0
-7208 -7205 0
c Var 'variant_fields_00004_00001_00009' order represents '4' with '7209'
-7207 7209 0
c Var 'variant_fields_00004_00001_00009' direct represents '4' with '7210'
7207 -7209 7210 0
-7210 7209 0
-7210 -7207 0
c Var 'variant_fields_00004_00001_00009' order represents '5' with '7211'
-7209 7211 0
c Var 'variant_fields_00004_00001_00009' direct represents '5' with '7212'
7209 -7211 7212 0
-7212 7211 0
-7212 -7209 0
c Var 'variant_fields_00004_00001_00009' order represents '6' with '7213'
-7211 7213 0
c Var 'variant_fields_00004_00001_00009' direct represents '6' with '7214'
7211 -7213 7214 0
-7214 7213 0
-7214 -7211 0
c Var 'variant_fields_00004_00001_00009' order represents '7' with '7215'
-7213 7215 0
c Var 'variant_fields_00004_00001_00009' direct represents '7' with '7216'
7213 -7215 7216 0
-7216 7215 0
-7216 -7213 0
c Var 'variant_fields_00004_00001_00009' order represents '8' with '7217'
-7215 7217 0
c Var 'variant_fields_00004_00001_00009' direct represents '8' with '7218'
7215 -7217 7218 0
-7218 7217 0
-7218 -7215 0
c Var 'variant_fields_00004_00001_00009' direct represents '9' with '-7217'
7204 7206 7208 7210 7212 7214 7216 7218 -7217 0
c Encoding variable: variant_fields_00004_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00001' order represents '1' with '7219'
c Var 'variant_fields_00004_00002_00001' direct represents '1' with '7219'
c Var 'variant_fields_00004_00002_00001' order represents '2' with '7220'
-7219 7220 0
c Var 'variant_fields_00004_00002_00001' direct represents '2' with '7221'
7219 -7220 7221 0
-7221 7220 0
-7221 -7219 0
c Var 'variant_fields_00004_00002_00001' order represents '3' with '7222'
-7220 7222 0
c Var 'variant_fields_00004_00002_00001' direct represents '3' with '7223'
7220 -7222 7223 0
-7223 7222 0
-7223 -7220 0
c Var 'variant_fields_00004_00002_00001' order represents '4' with '7224'
-7222 7224 0
c Var 'variant_fields_00004_00002_00001' direct represents '4' with '7225'
7222 -7224 7225 0
-7225 7224 0
-7225 -7222 0
c Var 'variant_fields_00004_00002_00001' order represents '5' with '7226'
-7224 7226 0
c Var 'variant_fields_00004_00002_00001' direct represents '5' with '7227'
7224 -7226 7227 0
-7227 7226 0
-7227 -7224 0
c Var 'variant_fields_00004_00002_00001' order represents '6' with '7228'
-7226 7228 0
c Var 'variant_fields_00004_00002_00001' direct represents '6' with '7229'
7226 -7228 7229 0
-7229 7228 0
-7229 -7226 0
c Var 'variant_fields_00004_00002_00001' order represents '7' with '7230'
-7228 7230 0
c Var 'variant_fields_00004_00002_00001' direct represents '7' with '7231'
7228 -7230 7231 0
-7231 7230 0
-7231 -7228 0
c Var 'variant_fields_00004_00002_00001' order represents '8' with '7232'
-7230 7232 0
c Var 'variant_fields_00004_00002_00001' direct represents '8' with '7233'
7230 -7232 7233 0
-7233 7232 0
-7233 -7230 0
c Var 'variant_fields_00004_00002_00001' direct represents '9' with '-7232'
7219 7221 7223 7225 7227 7229 7231 7233 -7232 0
c Encoding variable: variant_fields_00004_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00002' order represents '1' with '7234'
c Var 'variant_fields_00004_00002_00002' direct represents '1' with '7234'
c Var 'variant_fields_00004_00002_00002' order represents '2' with '7235'
-7234 7235 0
c Var 'variant_fields_00004_00002_00002' direct represents '2' with '7236'
7234 -7235 7236 0
-7236 7235 0
-7236 -7234 0
c Var 'variant_fields_00004_00002_00002' order represents '3' with '7237'
-7235 7237 0
c Var 'variant_fields_00004_00002_00002' direct represents '3' with '7238'
7235 -7237 7238 0
-7238 7237 0
-7238 -7235 0
c Var 'variant_fields_00004_00002_00002' order represents '4' with '7239'
-7237 7239 0
c Var 'variant_fields_00004_00002_00002' direct represents '4' with '7240'
7237 -7239 7240 0
-7240 7239 0
-7240 -7237 0
c Var 'variant_fields_00004_00002_00002' order represents '5' with '7241'
-7239 7241 0
c Var 'variant_fields_00004_00002_00002' direct represents '5' with '7242'
7239 -7241 7242 0
-7242 7241 0
-7242 -7239 0
c Var 'variant_fields_00004_00002_00002' order represents '6' with '7243'
-7241 7243 0
c Var 'variant_fields_00004_00002_00002' direct represents '6' with '7244'
7241 -7243 7244 0
-7244 7243 0
-7244 -7241 0
c Var 'variant_fields_00004_00002_00002' order represents '7' with '7245'
-7243 7245 0
c Var 'variant_fields_00004_00002_00002' direct represents '7' with '7246'
7243 -7245 7246 0
-7246 7245 0
-7246 -7243 0
c Var 'variant_fields_00004_00002_00002' order represents '8' with '7247'
-7245 7247 0
c Var 'variant_fields_00004_00002_00002' direct represents '8' with '7248'
7245 -7247 7248 0
-7248 7247 0
-7248 -7245 0
c Var 'variant_fields_00004_00002_00002' direct represents '9' with '-7247'
7234 7236 7238 7240 7242 7244 7246 7248 -7247 0
c Encoding variable: variant_fields_00004_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00003' order represents '1' with '7249'
c Var 'variant_fields_00004_00002_00003' direct represents '1' with '7249'
c Var 'variant_fields_00004_00002_00003' order represents '2' with '7250'
-7249 7250 0
c Var 'variant_fields_00004_00002_00003' direct represents '2' with '7251'
7249 -7250 7251 0
-7251 7250 0
-7251 -7249 0
c Var 'variant_fields_00004_00002_00003' order represents '3' with '7252'
-7250 7252 0
c Var 'variant_fields_00004_00002_00003' direct represents '3' with '7253'
7250 -7252 7253 0
-7253 7252 0
-7253 -7250 0
c Var 'variant_fields_00004_00002_00003' order represents '4' with '7254'
-7252 7254 0
c Var 'variant_fields_00004_00002_00003' direct represents '4' with '7255'
7252 -7254 7255 0
-7255 7254 0
-7255 -7252 0
c Var 'variant_fields_00004_00002_00003' order represents '5' with '7256'
-7254 7256 0
c Var 'variant_fields_00004_00002_00003' direct represents '5' with '7257'
7254 -7256 7257 0
-7257 7256 0
-7257 -7254 0
c Var 'variant_fields_00004_00002_00003' order represents '6' with '7258'
-7256 7258 0
c Var 'variant_fields_00004_00002_00003' direct represents '6' with '7259'
7256 -7258 7259 0
-7259 7258 0
-7259 -7256 0
c Var 'variant_fields_00004_00002_00003' order represents '7' with '7260'
-7258 7260 0
c Var 'variant_fields_00004_00002_00003' direct represents '7' with '7261'
7258 -7260 7261 0
-7261 7260 0
-7261 -7258 0
c Var 'variant_fields_00004_00002_00003' order represents '8' with '7262'
-7260 7262 0
c Var 'variant_fields_00004_00002_00003' direct represents '8' with '7263'
7260 -7262 7263 0
-7263 7262 0
-7263 -7260 0
c Var 'variant_fields_00004_00002_00003' direct represents '9' with '-7262'
7249 7251 7253 7255 7257 7259 7261 7263 -7262 0
c Encoding variable: variant_fields_00004_00002_00004 with domain: int(8) (representing constraint )
c Var 'variant_fields_00004_00002_00004' direct represents '8' with '7264'
7264 0
c Encoding variable: variant_fields_00004_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00005' order represents '1' with '7265'
c Var 'variant_fields_00004_00002_00005' direct represents '1' with '7265'
c Var 'variant_fields_00004_00002_00005' order represents '2' with '7266'
-7265 7266 0
c Var 'variant_fields_00004_00002_00005' direct represents '2' with '7267'
7265 -7266 7267 0
-7267 7266 0
-7267 -7265 0
c Var 'variant_fields_00004_00002_00005' order represents '3' with '7268'
-7266 7268 0
c Var 'variant_fields_00004_00002_00005' direct represents '3' with '7269'
7266 -7268 7269 0
-7269 7268 0
-7269 -7266 0
c Var 'variant_fields_00004_00002_00005' order represents '4' with '7270'
-7268 7270 0
c Var 'variant_fields_00004_00002_00005' direct represents '4' with '7271'
7268 -7270 7271 0
-7271 7270 0
-7271 -7268 0
c Var 'variant_fields_00004_00002_00005' order represents '5' with '7272'
-7270 7272 0
c Var 'variant_fields_00004_00002_00005' direct represents '5' with '7273'
7270 -7272 7273 0
-7273 7272 0
-7273 -7270 0
c Var 'variant_fields_00004_00002_00005' order represents '6' with '7274'
-7272 7274 0
c Var 'variant_fields_00004_00002_00005' direct represents '6' with '7275'
7272 -7274 7275 0
-7275 7274 0
-7275 -7272 0
c Var 'variant_fields_00004_00002_00005' order represents '7' with '7276'
-7274 7276 0
c Var 'variant_fields_00004_00002_00005' direct represents '7' with '7277'
7274 -7276 7277 0
-7277 7276 0
-7277 -7274 0
c Var 'variant_fields_00004_00002_00005' order represents '8' with '7278'
-7276 7278 0
c Var 'variant_fields_00004_00002_00005' direct represents '8' with '7279'
7276 -7278 7279 0
-7279 7278 0
-7279 -7276 0
c Var 'variant_fields_00004_00002_00005' direct represents '9' with '-7278'
7265 7267 7269 7271 7273 7275 7277 7279 -7278 0
c Encoding variable: variant_fields_00004_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00006' order represents '1' with '7280'
c Var 'variant_fields_00004_00002_00006' direct represents '1' with '7280'
c Var 'variant_fields_00004_00002_00006' order represents '2' with '7281'
-7280 7281 0
c Var 'variant_fields_00004_00002_00006' direct represents '2' with '7282'
7280 -7281 7282 0
-7282 7281 0
-7282 -7280 0
c Var 'variant_fields_00004_00002_00006' order represents '3' with '7283'
-7281 7283 0
c Var 'variant_fields_00004_00002_00006' direct represents '3' with '7284'
7281 -7283 7284 0
-7284 7283 0
-7284 -7281 0
c Var 'variant_fields_00004_00002_00006' order represents '4' with '7285'
-7283 7285 0
c Var 'variant_fields_00004_00002_00006' direct represents '4' with '7286'
7283 -7285 7286 0
-7286 7285 0
-7286 -7283 0
c Var 'variant_fields_00004_00002_00006' order represents '5' with '7287'
-7285 7287 0
c Var 'variant_fields_00004_00002_00006' direct represents '5' with '7288'
7285 -7287 7288 0
-7288 7287 0
-7288 -7285 0
c Var 'variant_fields_00004_00002_00006' order represents '6' with '7289'
-7287 7289 0
c Var 'variant_fields_00004_00002_00006' direct represents '6' with '7290'
7287 -7289 7290 0
-7290 7289 0
-7290 -7287 0
c Var 'variant_fields_00004_00002_00006' order represents '7' with '7291'
-7289 7291 0
c Var 'variant_fields_00004_00002_00006' direct represents '7' with '7292'
7289 -7291 7292 0
-7292 7291 0
-7292 -7289 0
c Var 'variant_fields_00004_00002_00006' order represents '8' with '7293'
-7291 7293 0
c Var 'variant_fields_00004_00002_00006' direct represents '8' with '7294'
7291 -7293 7294 0
-7294 7293 0
-7294 -7291 0
c Var 'variant_fields_00004_00002_00006' direct represents '9' with '-7293'
7280 7282 7284 7286 7288 7290 7292 7294 -7293 0
c Encoding variable: variant_fields_00004_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00007' order represents '1' with '7295'
c Var 'variant_fields_00004_00002_00007' direct represents '1' with '7295'
c Var 'variant_fields_00004_00002_00007' order represents '2' with '7296'
-7295 7296 0
c Var 'variant_fields_00004_00002_00007' direct represents '2' with '7297'
7295 -7296 7297 0
-7297 7296 0
-7297 -7295 0
c Var 'variant_fields_00004_00002_00007' order represents '3' with '7298'
-7296 7298 0
c Var 'variant_fields_00004_00002_00007' direct represents '3' with '7299'
7296 -7298 7299 0
-7299 7298 0
-7299 -7296 0
c Var 'variant_fields_00004_00002_00007' order represents '4' with '7300'
-7298 7300 0
c Var 'variant_fields_00004_00002_00007' direct represents '4' with '7301'
7298 -7300 7301 0
-7301 7300 0
-7301 -7298 0
c Var 'variant_fields_00004_00002_00007' order represents '5' with '7302'
-7300 7302 0
c Var 'variant_fields_00004_00002_00007' direct represents '5' with '7303'
7300 -7302 7303 0
-7303 7302 0
-7303 -7300 0
c Var 'variant_fields_00004_00002_00007' order represents '6' with '7304'
-7302 7304 0
c Var 'variant_fields_00004_00002_00007' direct represents '6' with '7305'
7302 -7304 7305 0
-7305 7304 0
-7305 -7302 0
c Var 'variant_fields_00004_00002_00007' order represents '7' with '7306'
-7304 7306 0
c Var 'variant_fields_00004_00002_00007' direct represents '7' with '7307'
7304 -7306 7307 0
-7307 7306 0
-7307 -7304 0
c Var 'variant_fields_00004_00002_00007' order represents '8' with '7308'
-7306 7308 0
c Var 'variant_fields_00004_00002_00007' direct represents '8' with '7309'
7306 -7308 7309 0
-7309 7308 0
-7309 -7306 0
c Var 'variant_fields_00004_00002_00007' direct represents '9' with '-7308'
7295 7297 7299 7301 7303 7305 7307 7309 -7308 0
c Encoding variable: variant_fields_00004_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00008' order represents '1' with '7310'
c Var 'variant_fields_00004_00002_00008' direct represents '1' with '7310'
c Var 'variant_fields_00004_00002_00008' order represents '2' with '7311'
-7310 7311 0
c Var 'variant_fields_00004_00002_00008' direct represents '2' with '7312'
7310 -7311 7312 0
-7312 7311 0
-7312 -7310 0
c Var 'variant_fields_00004_00002_00008' order represents '3' with '7313'
-7311 7313 0
c Var 'variant_fields_00004_00002_00008' direct represents '3' with '7314'
7311 -7313 7314 0
-7314 7313 0
-7314 -7311 0
c Var 'variant_fields_00004_00002_00008' order represents '4' with '7315'
-7313 7315 0
c Var 'variant_fields_00004_00002_00008' direct represents '4' with '7316'
7313 -7315 7316 0
-7316 7315 0
-7316 -7313 0
c Var 'variant_fields_00004_00002_00008' order represents '5' with '7317'
-7315 7317 0
c Var 'variant_fields_00004_00002_00008' direct represents '5' with '7318'
7315 -7317 7318 0
-7318 7317 0
-7318 -7315 0
c Var 'variant_fields_00004_00002_00008' order represents '6' with '7319'
-7317 7319 0
c Var 'variant_fields_00004_00002_00008' direct represents '6' with '7320'
7317 -7319 7320 0
-7320 7319 0
-7320 -7317 0
c Var 'variant_fields_00004_00002_00008' order represents '7' with '7321'
-7319 7321 0
c Var 'variant_fields_00004_00002_00008' direct represents '7' with '7322'
7319 -7321 7322 0
-7322 7321 0
-7322 -7319 0
c Var 'variant_fields_00004_00002_00008' order represents '8' with '7323'
-7321 7323 0
c Var 'variant_fields_00004_00002_00008' direct represents '8' with '7324'
7321 -7323 7324 0
-7324 7323 0
-7324 -7321 0
c Var 'variant_fields_00004_00002_00008' direct represents '9' with '-7323'
7310 7312 7314 7316 7318 7320 7322 7324 -7323 0
c Encoding variable: variant_fields_00004_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00009' order represents '1' with '7325'
c Var 'variant_fields_00004_00002_00009' direct represents '1' with '7325'
c Var 'variant_fields_00004_00002_00009' order represents '2' with '7326'
-7325 7326 0
c Var 'variant_fields_00004_00002_00009' direct represents '2' with '7327'
7325 -7326 7327 0
-7327 7326 0
-7327 -7325 0
c Var 'variant_fields_00004_00002_00009' order represents '3' with '7328'
-7326 7328 0
c Var 'variant_fields_00004_00002_00009' direct represents '3' with '7329'
7326 -7328 7329 0
-7329 7328 0
-7329 -7326 0
c Var 'variant_fields_00004_00002_00009' order represents '4' with '7330'
-7328 7330 0
c Var 'variant_fields_00004_00002_00009' direct represents '4' with '7331'
7328 -7330 7331 0
-7331 7330 0
-7331 -7328 0
c Var 'variant_fields_00004_00002_00009' order represents '5' with '7332'
-7330 7332 0
c Var 'variant_fields_00004_00002_00009' direct represents '5' with '7333'
7330 -7332 7333 0
-7333 7332 0
-7333 -7330 0
c Var 'variant_fields_00004_00002_00009' order represents '6' with '7334'
-7332 7334 0
c Var 'variant_fields_00004_00002_00009' direct represents '6' with '7335'
7332 -7334 7335 0
-7335 7334 0
-7335 -7332 0
c Var 'variant_fields_00004_00002_00009' order represents '7' with '7336'
-7334 7336 0
c Var 'variant_fields_00004_00002_00009' direct represents '7' with '7337'
7334 -7336 7337 0
-7337 7336 0
-7337 -7334 0
c Var 'variant_fields_00004_00002_00009' order represents '8' with '7338'
-7336 7338 0
c Var 'variant_fields_00004_00002_00009' direct represents '8' with '7339'
7336 -7338 7339 0
-7339 7338 0
-7339 -7336 0
c Var 'variant_fields_00004_00002_00009' direct represents '9' with '-7338'
7325 7327 7329 7331 7333 7335 7337 7339 -7338 0
c Encoding variable: variant_fields_00004_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00001' order represents '1' with '7340'
c Var 'variant_fields_00004_00003_00001' direct represents '1' with '7340'
c Var 'variant_fields_00004_00003_00001' order represents '2' with '7341'
-7340 7341 0
c Var 'variant_fields_00004_00003_00001' direct represents '2' with '7342'
7340 -7341 7342 0
-7342 7341 0
-7342 -7340 0
c Var 'variant_fields_00004_00003_00001' order represents '3' with '7343'
-7341 7343 0
c Var 'variant_fields_00004_00003_00001' direct represents '3' with '7344'
7341 -7343 7344 0
-7344 7343 0
-7344 -7341 0
c Var 'variant_fields_00004_00003_00001' order represents '4' with '7345'
-7343 7345 0
c Var 'variant_fields_00004_00003_00001' direct represents '4' with '7346'
7343 -7345 7346 0
-7346 7345 0
-7346 -7343 0
c Var 'variant_fields_00004_00003_00001' order represents '5' with '7347'
-7345 7347 0
c Var 'variant_fields_00004_00003_00001' direct represents '5' with '7348'
7345 -7347 7348 0
-7348 7347 0
-7348 -7345 0
c Var 'variant_fields_00004_00003_00001' order represents '6' with '7349'
-7347 7349 0
c Var 'variant_fields_00004_00003_00001' direct represents '6' with '7350'
7347 -7349 7350 0
-7350 7349 0
-7350 -7347 0
c Var 'variant_fields_00004_00003_00001' order represents '7' with '7351'
-7349 7351 0
c Var 'variant_fields_00004_00003_00001' direct represents '7' with '7352'
7349 -7351 7352 0
-7352 7351 0
-7352 -7349 0
c Var 'variant_fields_00004_00003_00001' order represents '8' with '7353'
-7351 7353 0
c Var 'variant_fields_00004_00003_00001' direct represents '8' with '7354'
7351 -7353 7354 0
-7354 7353 0
-7354 -7351 0
c Var 'variant_fields_00004_00003_00001' direct represents '9' with '-7353'
7340 7342 7344 7346 7348 7350 7352 7354 -7353 0
c Encoding variable: variant_fields_00004_00003_00002 with domain: int(8) (representing constraint )
c Var 'variant_fields_00004_00003_00002' direct represents '8' with '7355'
7355 0
c Encoding variable: variant_fields_00004_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00003' order represents '1' with '7356'
c Var 'variant_fields_00004_00003_00003' direct represents '1' with '7356'
c Var 'variant_fields_00004_00003_00003' order represents '2' with '7357'
-7356 7357 0
c Var 'variant_fields_00004_00003_00003' direct represents '2' with '7358'
7356 -7357 7358 0
-7358 7357 0
-7358 -7356 0
c Var 'variant_fields_00004_00003_00003' order represents '3' with '7359'
-7357 7359 0
c Var 'variant_fields_00004_00003_00003' direct represents '3' with '7360'
7357 -7359 7360 0
-7360 7359 0
-7360 -7357 0
c Var 'variant_fields_00004_00003_00003' order represents '4' with '7361'
-7359 7361 0
c Var 'variant_fields_00004_00003_00003' direct represents '4' with '7362'
7359 -7361 7362 0
-7362 7361 0
-7362 -7359 0
c Var 'variant_fields_00004_00003_00003' order represents '5' with '7363'
-7361 7363 0
c Var 'variant_fields_00004_00003_00003' direct represents '5' with '7364'
7361 -7363 7364 0
-7364 7363 0
-7364 -7361 0
c Var 'variant_fields_00004_00003_00003' order represents '6' with '7365'
-7363 7365 0
c Var 'variant_fields_00004_00003_00003' direct represents '6' with '7366'
7363 -7365 7366 0
-7366 7365 0
-7366 -7363 0
c Var 'variant_fields_00004_00003_00003' order represents '7' with '7367'
-7365 7367 0
c Var 'variant_fields_00004_00003_00003' direct represents '7' with '7368'
7365 -7367 7368 0
-7368 7367 0
-7368 -7365 0
c Var 'variant_fields_00004_00003_00003' order represents '8' with '7369'
-7367 7369 0
c Var 'variant_fields_00004_00003_00003' direct represents '8' with '7370'
7367 -7369 7370 0
-7370 7369 0
-7370 -7367 0
c Var 'variant_fields_00004_00003_00003' direct represents '9' with '-7369'
7356 7358 7360 7362 7364 7366 7368 7370 -7369 0
c Encoding variable: variant_fields_00004_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00004' order represents '1' with '7371'
c Var 'variant_fields_00004_00003_00004' direct represents '1' with '7371'
c Var 'variant_fields_00004_00003_00004' order represents '2' with '7372'
-7371 7372 0
c Var 'variant_fields_00004_00003_00004' direct represents '2' with '7373'
7371 -7372 7373 0
-7373 7372 0
-7373 -7371 0
c Var 'variant_fields_00004_00003_00004' order represents '3' with '7374'
-7372 7374 0
c Var 'variant_fields_00004_00003_00004' direct represents '3' with '7375'
7372 -7374 7375 0
-7375 7374 0
-7375 -7372 0
c Var 'variant_fields_00004_00003_00004' order represents '4' with '7376'
-7374 7376 0
c Var 'variant_fields_00004_00003_00004' direct represents '4' with '7377'
7374 -7376 7377 0
-7377 7376 0
-7377 -7374 0
c Var 'variant_fields_00004_00003_00004' order represents '5' with '7378'
-7376 7378 0
c Var 'variant_fields_00004_00003_00004' direct represents '5' with '7379'
7376 -7378 7379 0
-7379 7378 0
-7379 -7376 0
c Var 'variant_fields_00004_00003_00004' order represents '6' with '7380'
-7378 7380 0
c Var 'variant_fields_00004_00003_00004' direct represents '6' with '7381'
7378 -7380 7381 0
-7381 7380 0
-7381 -7378 0
c Var 'variant_fields_00004_00003_00004' order represents '7' with '7382'
-7380 7382 0
c Var 'variant_fields_00004_00003_00004' direct represents '7' with '7383'
7380 -7382 7383 0
-7383 7382 0
-7383 -7380 0
c Var 'variant_fields_00004_00003_00004' order represents '8' with '7384'
-7382 7384 0
c Var 'variant_fields_00004_00003_00004' direct represents '8' with '7385'
7382 -7384 7385 0
-7385 7384 0
-7385 -7382 0
c Var 'variant_fields_00004_00003_00004' direct represents '9' with '-7384'
7371 7373 7375 7377 7379 7381 7383 7385 -7384 0
c Encoding variable: variant_fields_00004_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00005' order represents '1' with '7386'
c Var 'variant_fields_00004_00003_00005' direct represents '1' with '7386'
c Var 'variant_fields_00004_00003_00005' order represents '2' with '7387'
-7386 7387 0
c Var 'variant_fields_00004_00003_00005' direct represents '2' with '7388'
7386 -7387 7388 0
-7388 7387 0
-7388 -7386 0
c Var 'variant_fields_00004_00003_00005' order represents '3' with '7389'
-7387 7389 0
c Var 'variant_fields_00004_00003_00005' direct represents '3' with '7390'
7387 -7389 7390 0
-7390 7389 0
-7390 -7387 0
c Var 'variant_fields_00004_00003_00005' order represents '4' with '7391'
-7389 7391 0
c Var 'variant_fields_00004_00003_00005' direct represents '4' with '7392'
7389 -7391 7392 0
-7392 7391 0
-7392 -7389 0
c Var 'variant_fields_00004_00003_00005' order represents '5' with '7393'
-7391 7393 0
c Var 'variant_fields_00004_00003_00005' direct represents '5' with '7394'
7391 -7393 7394 0
-7394 7393 0
-7394 -7391 0
c Var 'variant_fields_00004_00003_00005' order represents '6' with '7395'
-7393 7395 0
c Var 'variant_fields_00004_00003_00005' direct represents '6' with '7396'
7393 -7395 7396 0
-7396 7395 0
-7396 -7393 0
c Var 'variant_fields_00004_00003_00005' order represents '7' with '7397'
-7395 7397 0
c Var 'variant_fields_00004_00003_00005' direct represents '7' with '7398'
7395 -7397 7398 0
-7398 7397 0
-7398 -7395 0
c Var 'variant_fields_00004_00003_00005' order represents '8' with '7399'
-7397 7399 0
c Var 'variant_fields_00004_00003_00005' direct represents '8' with '7400'
7397 -7399 7400 0
-7400 7399 0
-7400 -7397 0
c Var 'variant_fields_00004_00003_00005' direct represents '9' with '-7399'
7386 7388 7390 7392 7394 7396 7398 7400 -7399 0
c Encoding variable: variant_fields_00004_00003_00006 with domain: int(1) (representing constraint )
c Var 'variant_fields_00004_00003_00006' direct represents '1' with '7401'
7401 0
c Encoding variable: variant_fields_00004_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00007' order represents '1' with '7402'
c Var 'variant_fields_00004_00003_00007' direct represents '1' with '7402'
c Var 'variant_fields_00004_00003_00007' order represents '2' with '7403'
-7402 7403 0
c Var 'variant_fields_00004_00003_00007' direct represents '2' with '7404'
7402 -7403 7404 0
-7404 7403 0
-7404 -7402 0
c Var 'variant_fields_00004_00003_00007' order represents '3' with '7405'
-7403 7405 0
c Var 'variant_fields_00004_00003_00007' direct represents '3' with '7406'
7403 -7405 7406 0
-7406 7405 0
-7406 -7403 0
c Var 'variant_fields_00004_00003_00007' order represents '4' with '7407'
-7405 7407 0
c Var 'variant_fields_00004_00003_00007' direct represents '4' with '7408'
7405 -7407 7408 0
-7408 7407 0
-7408 -7405 0
c Var 'variant_fields_00004_00003_00007' order represents '5' with '7409'
-7407 7409 0
c Var 'variant_fields_00004_00003_00007' direct represents '5' with '7410'
7407 -7409 7410 0
-7410 7409 0
-7410 -7407 0
c Var 'variant_fields_00004_00003_00007' order represents '6' with '7411'
-7409 7411 0
c Var 'variant_fields_00004_00003_00007' direct represents '6' with '7412'
7409 -7411 7412 0
-7412 7411 0
-7412 -7409 0
c Var 'variant_fields_00004_00003_00007' order represents '7' with '7413'
-7411 7413 0
c Var 'variant_fields_00004_00003_00007' direct represents '7' with '7414'
7411 -7413 7414 0
-7414 7413 0
-7414 -7411 0
c Var 'variant_fields_00004_00003_00007' order represents '8' with '7415'
-7413 7415 0
c Var 'variant_fields_00004_00003_00007' direct represents '8' with '7416'
7413 -7415 7416 0
-7416 7415 0
-7416 -7413 0
c Var 'variant_fields_00004_00003_00007' direct represents '9' with '-7415'
7402 7404 7406 7408 7410 7412 7414 7416 -7415 0
c Encoding variable: variant_fields_00004_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00008' order represents '1' with '7417'
c Var 'variant_fields_00004_00003_00008' direct represents '1' with '7417'
c Var 'variant_fields_00004_00003_00008' order represents '2' with '7418'
-7417 7418 0
c Var 'variant_fields_00004_00003_00008' direct represents '2' with '7419'
7417 -7418 7419 0
-7419 7418 0
-7419 -7417 0
c Var 'variant_fields_00004_00003_00008' order represents '3' with '7420'
-7418 7420 0
c Var 'variant_fields_00004_00003_00008' direct represents '3' with '7421'
7418 -7420 7421 0
-7421 7420 0
-7421 -7418 0
c Var 'variant_fields_00004_00003_00008' order represents '4' with '7422'
-7420 7422 0
c Var 'variant_fields_00004_00003_00008' direct represents '4' with '7423'
7420 -7422 7423 0
-7423 7422 0
-7423 -7420 0
c Var 'variant_fields_00004_00003_00008' order represents '5' with '7424'
-7422 7424 0
c Var 'variant_fields_00004_00003_00008' direct represents '5' with '7425'
7422 -7424 7425 0
-7425 7424 0
-7425 -7422 0
c Var 'variant_fields_00004_00003_00008' order represents '6' with '7426'
-7424 7426 0
c Var 'variant_fields_00004_00003_00008' direct represents '6' with '7427'
7424 -7426 7427 0
-7427 7426 0
-7427 -7424 0
c Var 'variant_fields_00004_00003_00008' order represents '7' with '7428'
-7426 7428 0
c Var 'variant_fields_00004_00003_00008' direct represents '7' with '7429'
7426 -7428 7429 0
-7429 7428 0
-7429 -7426 0
c Var 'variant_fields_00004_00003_00008' order represents '8' with '7430'
-7428 7430 0
c Var 'variant_fields_00004_00003_00008' direct represents '8' with '7431'
7428 -7430 7431 0
-7431 7430 0
-7431 -7428 0
c Var 'variant_fields_00004_00003_00008' direct represents '9' with '-7430'
7417 7419 7421 7423 7425 7427 7429 7431 -7430 0
c Encoding variable: variant_fields_00004_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00009' order represents '1' with '7432'
c Var 'variant_fields_00004_00003_00009' direct represents '1' with '7432'
c Var 'variant_fields_00004_00003_00009' order represents '2' with '7433'
-7432 7433 0
c Var 'variant_fields_00004_00003_00009' direct represents '2' with '7434'
7432 -7433 7434 0
-7434 7433 0
-7434 -7432 0
c Var 'variant_fields_00004_00003_00009' order represents '3' with '7435'
-7433 7435 0
c Var 'variant_fields_00004_00003_00009' direct represents '3' with '7436'
7433 -7435 7436 0
-7436 7435 0
-7436 -7433 0
c Var 'variant_fields_00004_00003_00009' order represents '4' with '7437'
-7435 7437 0
c Var 'variant_fields_00004_00003_00009' direct represents '4' with '7438'
7435 -7437 7438 0
-7438 7437 0
-7438 -7435 0
c Var 'variant_fields_00004_00003_00009' order represents '5' with '7439'
-7437 7439 0
c Var 'variant_fields_00004_00003_00009' direct represents '5' with '7440'
7437 -7439 7440 0
-7440 7439 0
-7440 -7437 0
c Var 'variant_fields_00004_00003_00009' order represents '6' with '7441'
-7439 7441 0
c Var 'variant_fields_00004_00003_00009' direct represents '6' with '7442'
7439 -7441 7442 0
-7442 7441 0
-7442 -7439 0
c Var 'variant_fields_00004_00003_00009' order represents '7' with '7443'
-7441 7443 0
c Var 'variant_fields_00004_00003_00009' direct represents '7' with '7444'
7441 -7443 7444 0
-7444 7443 0
-7444 -7441 0
c Var 'variant_fields_00004_00003_00009' order represents '8' with '7445'
-7443 7445 0
c Var 'variant_fields_00004_00003_00009' direct represents '8' with '7446'
7443 -7445 7446 0
-7446 7445 0
-7446 -7443 0
c Var 'variant_fields_00004_00003_00009' direct represents '9' with '-7445'
7432 7434 7436 7438 7440 7442 7444 7446 -7445 0
c Encoding variable: variant_fields_00004_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00001' order represents '1' with '7447'
c Var 'variant_fields_00004_00004_00001' direct represents '1' with '7447'
c Var 'variant_fields_00004_00004_00001' order represents '2' with '7448'
-7447 7448 0
c Var 'variant_fields_00004_00004_00001' direct represents '2' with '7449'
7447 -7448 7449 0
-7449 7448 0
-7449 -7447 0
c Var 'variant_fields_00004_00004_00001' order represents '3' with '7450'
-7448 7450 0
c Var 'variant_fields_00004_00004_00001' direct represents '3' with '7451'
7448 -7450 7451 0
-7451 7450 0
-7451 -7448 0
c Var 'variant_fields_00004_00004_00001' order represents '4' with '7452'
-7450 7452 0
c Var 'variant_fields_00004_00004_00001' direct represents '4' with '7453'
7450 -7452 7453 0
-7453 7452 0
-7453 -7450 0
c Var 'variant_fields_00004_00004_00001' order represents '5' with '7454'
-7452 7454 0
c Var 'variant_fields_00004_00004_00001' direct represents '5' with '7455'
7452 -7454 7455 0
-7455 7454 0
-7455 -7452 0
c Var 'variant_fields_00004_00004_00001' order represents '6' with '7456'
-7454 7456 0
c Var 'variant_fields_00004_00004_00001' direct represents '6' with '7457'
7454 -7456 7457 0
-7457 7456 0
-7457 -7454 0
c Var 'variant_fields_00004_00004_00001' order represents '7' with '7458'
-7456 7458 0
c Var 'variant_fields_00004_00004_00001' direct represents '7' with '7459'
7456 -7458 7459 0
-7459 7458 0
-7459 -7456 0
c Var 'variant_fields_00004_00004_00001' order represents '8' with '7460'
-7458 7460 0
c Var 'variant_fields_00004_00004_00001' direct represents '8' with '7461'
7458 -7460 7461 0
-7461 7460 0
-7461 -7458 0
c Var 'variant_fields_00004_00004_00001' direct represents '9' with '-7460'
7447 7449 7451 7453 7455 7457 7459 7461 -7460 0
c Encoding variable: variant_fields_00004_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00002' order represents '1' with '7462'
c Var 'variant_fields_00004_00004_00002' direct represents '1' with '7462'
c Var 'variant_fields_00004_00004_00002' order represents '2' with '7463'
-7462 7463 0
c Var 'variant_fields_00004_00004_00002' direct represents '2' with '7464'
7462 -7463 7464 0
-7464 7463 0
-7464 -7462 0
c Var 'variant_fields_00004_00004_00002' order represents '3' with '7465'
-7463 7465 0
c Var 'variant_fields_00004_00004_00002' direct represents '3' with '7466'
7463 -7465 7466 0
-7466 7465 0
-7466 -7463 0
c Var 'variant_fields_00004_00004_00002' order represents '4' with '7467'
-7465 7467 0
c Var 'variant_fields_00004_00004_00002' direct represents '4' with '7468'
7465 -7467 7468 0
-7468 7467 0
-7468 -7465 0
c Var 'variant_fields_00004_00004_00002' order represents '5' with '7469'
-7467 7469 0
c Var 'variant_fields_00004_00004_00002' direct represents '5' with '7470'
7467 -7469 7470 0
-7470 7469 0
-7470 -7467 0
c Var 'variant_fields_00004_00004_00002' order represents '6' with '7471'
-7469 7471 0
c Var 'variant_fields_00004_00004_00002' direct represents '6' with '7472'
7469 -7471 7472 0
-7472 7471 0
-7472 -7469 0
c Var 'variant_fields_00004_00004_00002' order represents '7' with '7473'
-7471 7473 0
c Var 'variant_fields_00004_00004_00002' direct represents '7' with '7474'
7471 -7473 7474 0
-7474 7473 0
-7474 -7471 0
c Var 'variant_fields_00004_00004_00002' order represents '8' with '7475'
-7473 7475 0
c Var 'variant_fields_00004_00004_00002' direct represents '8' with '7476'
7473 -7475 7476 0
-7476 7475 0
-7476 -7473 0
c Var 'variant_fields_00004_00004_00002' direct represents '9' with '-7475'
7462 7464 7466 7468 7470 7472 7474 7476 -7475 0
c Encoding variable: variant_fields_00004_00004_00003 with domain: int(3) (representing constraint )
c Var 'variant_fields_00004_00004_00003' direct represents '3' with '7477'
7477 0
c Encoding variable: variant_fields_00004_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00004' order represents '1' with '7478'
c Var 'variant_fields_00004_00004_00004' direct represents '1' with '7478'
c Var 'variant_fields_00004_00004_00004' order represents '2' with '7479'
-7478 7479 0
c Var 'variant_fields_00004_00004_00004' direct represents '2' with '7480'
7478 -7479 7480 0
-7480 7479 0
-7480 -7478 0
c Var 'variant_fields_00004_00004_00004' order represents '3' with '7481'
-7479 7481 0
c Var 'variant_fields_00004_00004_00004' direct represents '3' with '7482'
7479 -7481 7482 0
-7482 7481 0
-7482 -7479 0
c Var 'variant_fields_00004_00004_00004' order represents '4' with '7483'
-7481 7483 0
c Var 'variant_fields_00004_00004_00004' direct represents '4' with '7484'
7481 -7483 7484 0
-7484 7483 0
-7484 -7481 0
c Var 'variant_fields_00004_00004_00004' order represents '5' with '7485'
-7483 7485 0
c Var 'variant_fields_00004_00004_00004' direct represents '5' with '7486'
7483 -7485 7486 0
-7486 7485 0
-7486 -7483 0
c Var 'variant_fields_00004_00004_00004' order represents '6' with '7487'
-7485 7487 0
c Var 'variant_fields_00004_00004_00004' direct represents '6' with '7488'
7485 -7487 7488 0
-7488 7487 0
-7488 -7485 0
c Var 'variant_fields_00004_00004_00004' order represents '7' with '7489'
-7487 7489 0
c Var 'variant_fields_00004_00004_00004' direct represents '7' with '7490'
7487 -7489 7490 0
-7490 7489 0
-7490 -7487 0
c Var 'variant_fields_00004_00004_00004' order represents '8' with '7491'
-7489 7491 0
c Var 'variant_fields_00004_00004_00004' direct represents '8' with '7492'
7489 -7491 7492 0
-7492 7491 0
-7492 -7489 0
c Var 'variant_fields_00004_00004_00004' direct represents '9' with '-7491'
7478 7480 7482 7484 7486 7488 7490 7492 -7491 0
c Encoding variable: variant_fields_00004_00004_00005 with domain: int(1) (representing constraint )
c Var 'variant_fields_00004_00004_00005' direct represents '1' with '7493'
7493 0
c Encoding variable: variant_fields_00004_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00006' order represents '1' with '7494'
c Var 'variant_fields_00004_00004_00006' direct represents '1' with '7494'
c Var 'variant_fields_00004_00004_00006' order represents '2' with '7495'
-7494 7495 0
c Var 'variant_fields_00004_00004_00006' direct represents '2' with '7496'
7494 -7495 7496 0
-7496 7495 0
-7496 -7494 0
c Var 'variant_fields_00004_00004_00006' order represents '3' with '7497'
-7495 7497 0
c Var 'variant_fields_00004_00004_00006' direct represents '3' with '7498'
7495 -7497 7498 0
-7498 7497 0
-7498 -7495 0
c Var 'variant_fields_00004_00004_00006' order represents '4' with '7499'
-7497 7499 0
c Var 'variant_fields_00004_00004_00006' direct represents '4' with '7500'
7497 -7499 7500 0
-7500 7499 0
-7500 -7497 0
c Var 'variant_fields_00004_00004_00006' order represents '5' with '7501'
-7499 7501 0
c Var 'variant_fields_00004_00004_00006' direct represents '5' with '7502'
7499 -7501 7502 0
-7502 7501 0
-7502 -7499 0
c Var 'variant_fields_00004_00004_00006' order represents '6' with '7503'
-7501 7503 0
c Var 'variant_fields_00004_00004_00006' direct represents '6' with '7504'
7501 -7503 7504 0
-7504 7503 0
-7504 -7501 0
c Var 'variant_fields_00004_00004_00006' order represents '7' with '7505'
-7503 7505 0
c Var 'variant_fields_00004_00004_00006' direct represents '7' with '7506'
7503 -7505 7506 0
-7506 7505 0
-7506 -7503 0
c Var 'variant_fields_00004_00004_00006' order represents '8' with '7507'
-7505 7507 0
c Var 'variant_fields_00004_00004_00006' direct represents '8' with '7508'
7505 -7507 7508 0
-7508 7507 0
-7508 -7505 0
c Var 'variant_fields_00004_00004_00006' direct represents '9' with '-7507'
7494 7496 7498 7500 7502 7504 7506 7508 -7507 0
c Encoding variable: variant_fields_00004_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00007' order represents '1' with '7509'
c Var 'variant_fields_00004_00004_00007' direct represents '1' with '7509'
c Var 'variant_fields_00004_00004_00007' order represents '2' with '7510'
-7509 7510 0
c Var 'variant_fields_00004_00004_00007' direct represents '2' with '7511'
7509 -7510 7511 0
-7511 7510 0
-7511 -7509 0
c Var 'variant_fields_00004_00004_00007' order represents '3' with '7512'
-7510 7512 0
c Var 'variant_fields_00004_00004_00007' direct represents '3' with '7513'
7510 -7512 7513 0
-7513 7512 0
-7513 -7510 0
c Var 'variant_fields_00004_00004_00007' order represents '4' with '7514'
-7512 7514 0
c Var 'variant_fields_00004_00004_00007' direct represents '4' with '7515'
7512 -7514 7515 0
-7515 7514 0
-7515 -7512 0
c Var 'variant_fields_00004_00004_00007' order represents '5' with '7516'
-7514 7516 0
c Var 'variant_fields_00004_00004_00007' direct represents '5' with '7517'
7514 -7516 7517 0
-7517 7516 0
-7517 -7514 0
c Var 'variant_fields_00004_00004_00007' order represents '6' with '7518'
-7516 7518 0
c Var 'variant_fields_00004_00004_00007' direct represents '6' with '7519'
7516 -7518 7519 0
-7519 7518 0
-7519 -7516 0
c Var 'variant_fields_00004_00004_00007' order represents '7' with '7520'
-7518 7520 0
c Var 'variant_fields_00004_00004_00007' direct represents '7' with '7521'
7518 -7520 7521 0
-7521 7520 0
-7521 -7518 0
c Var 'variant_fields_00004_00004_00007' order represents '8' with '7522'
-7520 7522 0
c Var 'variant_fields_00004_00004_00007' direct represents '8' with '7523'
7520 -7522 7523 0
-7523 7522 0
-7523 -7520 0
c Var 'variant_fields_00004_00004_00007' direct represents '9' with '-7522'
7509 7511 7513 7515 7517 7519 7521 7523 -7522 0
c Encoding variable: variant_fields_00004_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00008' order represents '1' with '7524'
c Var 'variant_fields_00004_00004_00008' direct represents '1' with '7524'
c Var 'variant_fields_00004_00004_00008' order represents '2' with '7525'
-7524 7525 0
c Var 'variant_fields_00004_00004_00008' direct represents '2' with '7526'
7524 -7525 7526 0
-7526 7525 0
-7526 -7524 0
c Var 'variant_fields_00004_00004_00008' order represents '3' with '7527'
-7525 7527 0
c Var 'variant_fields_00004_00004_00008' direct represents '3' with '7528'
7525 -7527 7528 0
-7528 7527 0
-7528 -7525 0
c Var 'variant_fields_00004_00004_00008' order represents '4' with '7529'
-7527 7529 0
c Var 'variant_fields_00004_00004_00008' direct represents '4' with '7530'
7527 -7529 7530 0
-7530 7529 0
-7530 -7527 0
c Var 'variant_fields_00004_00004_00008' order represents '5' with '7531'
-7529 7531 0
c Var 'variant_fields_00004_00004_00008' direct represents '5' with '7532'
7529 -7531 7532 0
-7532 7531 0
-7532 -7529 0
c Var 'variant_fields_00004_00004_00008' order represents '6' with '7533'
-7531 7533 0
c Var 'variant_fields_00004_00004_00008' direct represents '6' with '7534'
7531 -7533 7534 0
-7534 7533 0
-7534 -7531 0
c Var 'variant_fields_00004_00004_00008' order represents '7' with '7535'
-7533 7535 0
c Var 'variant_fields_00004_00004_00008' direct represents '7' with '7536'
7533 -7535 7536 0
-7536 7535 0
-7536 -7533 0
c Var 'variant_fields_00004_00004_00008' order represents '8' with '7537'
-7535 7537 0
c Var 'variant_fields_00004_00004_00008' direct represents '8' with '7538'
7535 -7537 7538 0
-7538 7537 0
-7538 -7535 0
c Var 'variant_fields_00004_00004_00008' direct represents '9' with '-7537'
7524 7526 7528 7530 7532 7534 7536 7538 -7537 0
c Encoding variable: variant_fields_00004_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00009' order represents '1' with '7539'
c Var 'variant_fields_00004_00004_00009' direct represents '1' with '7539'
c Var 'variant_fields_00004_00004_00009' order represents '2' with '7540'
-7539 7540 0
c Var 'variant_fields_00004_00004_00009' direct represents '2' with '7541'
7539 -7540 7541 0
-7541 7540 0
-7541 -7539 0
c Var 'variant_fields_00004_00004_00009' order represents '3' with '7542'
-7540 7542 0
c Var 'variant_fields_00004_00004_00009' direct represents '3' with '7543'
7540 -7542 7543 0
-7543 7542 0
-7543 -7540 0
c Var 'variant_fields_00004_00004_00009' order represents '4' with '7544'
-7542 7544 0
c Var 'variant_fields_00004_00004_00009' direct represents '4' with '7545'
7542 -7544 7545 0
-7545 7544 0
-7545 -7542 0
c Var 'variant_fields_00004_00004_00009' order represents '5' with '7546'
-7544 7546 0
c Var 'variant_fields_00004_00004_00009' direct represents '5' with '7547'
7544 -7546 7547 0
-7547 7546 0
-7547 -7544 0
c Var 'variant_fields_00004_00004_00009' order represents '6' with '7548'
-7546 7548 0
c Var 'variant_fields_00004_00004_00009' direct represents '6' with '7549'
7546 -7548 7549 0
-7549 7548 0
-7549 -7546 0
c Var 'variant_fields_00004_00004_00009' order represents '7' with '7550'
-7548 7550 0
c Var 'variant_fields_00004_00004_00009' direct represents '7' with '7551'
7548 -7550 7551 0
-7551 7550 0
-7551 -7548 0
c Var 'variant_fields_00004_00004_00009' order represents '8' with '7552'
-7550 7552 0
c Var 'variant_fields_00004_00004_00009' direct represents '8' with '7553'
7550 -7552 7553 0
-7553 7552 0
-7553 -7550 0
c Var 'variant_fields_00004_00004_00009' direct represents '9' with '-7552'
7539 7541 7543 7545 7547 7549 7551 7553 -7552 0
c Encoding variable: variant_fields_00004_00005_00001 with domain: int(1) (representing constraint )
c Var 'variant_fields_00004_00005_00001' direct represents '1' with '7554'
7554 0
c Encoding variable: variant_fields_00004_00005_00002 with domain: int(7) (representing constraint )
c Var 'variant_fields_00004_00005_00002' direct represents '7' with '7555'
7555 0
c Encoding variable: variant_fields_00004_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00003' order represents '1' with '7556'
c Var 'variant_fields_00004_00005_00003' direct represents '1' with '7556'
c Var 'variant_fields_00004_00005_00003' order represents '2' with '7557'
-7556 7557 0
c Var 'variant_fields_00004_00005_00003' direct represents '2' with '7558'
7556 -7557 7558 0
-7558 7557 0
-7558 -7556 0
c Var 'variant_fields_00004_00005_00003' order represents '3' with '7559'
-7557 7559 0
c Var 'variant_fields_00004_00005_00003' direct represents '3' with '7560'
7557 -7559 7560 0
-7560 7559 0
-7560 -7557 0
c Var 'variant_fields_00004_00005_00003' order represents '4' with '7561'
-7559 7561 0
c Var 'variant_fields_00004_00005_00003' direct represents '4' with '7562'
7559 -7561 7562 0
-7562 7561 0
-7562 -7559 0
c Var 'variant_fields_00004_00005_00003' order represents '5' with '7563'
-7561 7563 0
c Var 'variant_fields_00004_00005_00003' direct represents '5' with '7564'
7561 -7563 7564 0
-7564 7563 0
-7564 -7561 0
c Var 'variant_fields_00004_00005_00003' order represents '6' with '7565'
-7563 7565 0
c Var 'variant_fields_00004_00005_00003' direct represents '6' with '7566'
7563 -7565 7566 0
-7566 7565 0
-7566 -7563 0
c Var 'variant_fields_00004_00005_00003' order represents '7' with '7567'
-7565 7567 0
c Var 'variant_fields_00004_00005_00003' direct represents '7' with '7568'
7565 -7567 7568 0
-7568 7567 0
-7568 -7565 0
c Var 'variant_fields_00004_00005_00003' order represents '8' with '7569'
-7567 7569 0
c Var 'variant_fields_00004_00005_00003' direct represents '8' with '7570'
7567 -7569 7570 0
-7570 7569 0
-7570 -7567 0
c Var 'variant_fields_00004_00005_00003' direct represents '9' with '-7569'
7556 7558 7560 7562 7564 7566 7568 7570 -7569 0
c Encoding variable: variant_fields_00004_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00004' order represents '1' with '7571'
c Var 'variant_fields_00004_00005_00004' direct represents '1' with '7571'
c Var 'variant_fields_00004_00005_00004' order represents '2' with '7572'
-7571 7572 0
c Var 'variant_fields_00004_00005_00004' direct represents '2' with '7573'
7571 -7572 7573 0
-7573 7572 0
-7573 -7571 0
c Var 'variant_fields_00004_00005_00004' order represents '3' with '7574'
-7572 7574 0
c Var 'variant_fields_00004_00005_00004' direct represents '3' with '7575'
7572 -7574 7575 0
-7575 7574 0
-7575 -7572 0
c Var 'variant_fields_00004_00005_00004' order represents '4' with '7576'
-7574 7576 0
c Var 'variant_fields_00004_00005_00004' direct represents '4' with '7577'
7574 -7576 7577 0
-7577 7576 0
-7577 -7574 0
c Var 'variant_fields_00004_00005_00004' order represents '5' with '7578'
-7576 7578 0
c Var 'variant_fields_00004_00005_00004' direct represents '5' with '7579'
7576 -7578 7579 0
-7579 7578 0
-7579 -7576 0
c Var 'variant_fields_00004_00005_00004' order represents '6' with '7580'
-7578 7580 0
c Var 'variant_fields_00004_00005_00004' direct represents '6' with '7581'
7578 -7580 7581 0
-7581 7580 0
-7581 -7578 0
c Var 'variant_fields_00004_00005_00004' order represents '7' with '7582'
-7580 7582 0
c Var 'variant_fields_00004_00005_00004' direct represents '7' with '7583'
7580 -7582 7583 0
-7583 7582 0
-7583 -7580 0
c Var 'variant_fields_00004_00005_00004' order represents '8' with '7584'
-7582 7584 0
c Var 'variant_fields_00004_00005_00004' direct represents '8' with '7585'
7582 -7584 7585 0
-7585 7584 0
-7585 -7582 0
c Var 'variant_fields_00004_00005_00004' direct represents '9' with '-7584'
7571 7573 7575 7577 7579 7581 7583 7585 -7584 0
c Encoding variable: variant_fields_00004_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00005' order represents '1' with '7586'
c Var 'variant_fields_00004_00005_00005' direct represents '1' with '7586'
c Var 'variant_fields_00004_00005_00005' order represents '2' with '7587'
-7586 7587 0
c Var 'variant_fields_00004_00005_00005' direct represents '2' with '7588'
7586 -7587 7588 0
-7588 7587 0
-7588 -7586 0
c Var 'variant_fields_00004_00005_00005' order represents '3' with '7589'
-7587 7589 0
c Var 'variant_fields_00004_00005_00005' direct represents '3' with '7590'
7587 -7589 7590 0
-7590 7589 0
-7590 -7587 0
c Var 'variant_fields_00004_00005_00005' order represents '4' with '7591'
-7589 7591 0
c Var 'variant_fields_00004_00005_00005' direct represents '4' with '7592'
7589 -7591 7592 0
-7592 7591 0
-7592 -7589 0
c Var 'variant_fields_00004_00005_00005' order represents '5' with '7593'
-7591 7593 0
c Var 'variant_fields_00004_00005_00005' direct represents '5' with '7594'
7591 -7593 7594 0
-7594 7593 0
-7594 -7591 0
c Var 'variant_fields_00004_00005_00005' order represents '6' with '7595'
-7593 7595 0
c Var 'variant_fields_00004_00005_00005' direct represents '6' with '7596'
7593 -7595 7596 0
-7596 7595 0
-7596 -7593 0
c Var 'variant_fields_00004_00005_00005' order represents '7' with '7597'
-7595 7597 0
c Var 'variant_fields_00004_00005_00005' direct represents '7' with '7598'
7595 -7597 7598 0
-7598 7597 0
-7598 -7595 0
c Var 'variant_fields_00004_00005_00005' order represents '8' with '7599'
-7597 7599 0
c Var 'variant_fields_00004_00005_00005' direct represents '8' with '7600'
7597 -7599 7600 0
-7600 7599 0
-7600 -7597 0
c Var 'variant_fields_00004_00005_00005' direct represents '9' with '-7599'
7586 7588 7590 7592 7594 7596 7598 7600 -7599 0
c Encoding variable: variant_fields_00004_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00006' order represents '1' with '7601'
c Var 'variant_fields_00004_00005_00006' direct represents '1' with '7601'
c Var 'variant_fields_00004_00005_00006' order represents '2' with '7602'
-7601 7602 0
c Var 'variant_fields_00004_00005_00006' direct represents '2' with '7603'
7601 -7602 7603 0
-7603 7602 0
-7603 -7601 0
c Var 'variant_fields_00004_00005_00006' order represents '3' with '7604'
-7602 7604 0
c Var 'variant_fields_00004_00005_00006' direct represents '3' with '7605'
7602 -7604 7605 0
-7605 7604 0
-7605 -7602 0
c Var 'variant_fields_00004_00005_00006' order represents '4' with '7606'
-7604 7606 0
c Var 'variant_fields_00004_00005_00006' direct represents '4' with '7607'
7604 -7606 7607 0
-7607 7606 0
-7607 -7604 0
c Var 'variant_fields_00004_00005_00006' order represents '5' with '7608'
-7606 7608 0
c Var 'variant_fields_00004_00005_00006' direct represents '5' with '7609'
7606 -7608 7609 0
-7609 7608 0
-7609 -7606 0
c Var 'variant_fields_00004_00005_00006' order represents '6' with '7610'
-7608 7610 0
c Var 'variant_fields_00004_00005_00006' direct represents '6' with '7611'
7608 -7610 7611 0
-7611 7610 0
-7611 -7608 0
c Var 'variant_fields_00004_00005_00006' order represents '7' with '7612'
-7610 7612 0
c Var 'variant_fields_00004_00005_00006' direct represents '7' with '7613'
7610 -7612 7613 0
-7613 7612 0
-7613 -7610 0
c Var 'variant_fields_00004_00005_00006' order represents '8' with '7614'
-7612 7614 0
c Var 'variant_fields_00004_00005_00006' direct represents '8' with '7615'
7612 -7614 7615 0
-7615 7614 0
-7615 -7612 0
c Var 'variant_fields_00004_00005_00006' direct represents '9' with '-7614'
7601 7603 7605 7607 7609 7611 7613 7615 -7614 0
c Encoding variable: variant_fields_00004_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00007' order represents '1' with '7616'
c Var 'variant_fields_00004_00005_00007' direct represents '1' with '7616'
c Var 'variant_fields_00004_00005_00007' order represents '2' with '7617'
-7616 7617 0
c Var 'variant_fields_00004_00005_00007' direct represents '2' with '7618'
7616 -7617 7618 0
-7618 7617 0
-7618 -7616 0
c Var 'variant_fields_00004_00005_00007' order represents '3' with '7619'
-7617 7619 0
c Var 'variant_fields_00004_00005_00007' direct represents '3' with '7620'
7617 -7619 7620 0
-7620 7619 0
-7620 -7617 0
c Var 'variant_fields_00004_00005_00007' order represents '4' with '7621'
-7619 7621 0
c Var 'variant_fields_00004_00005_00007' direct represents '4' with '7622'
7619 -7621 7622 0
-7622 7621 0
-7622 -7619 0
c Var 'variant_fields_00004_00005_00007' order represents '5' with '7623'
-7621 7623 0
c Var 'variant_fields_00004_00005_00007' direct represents '5' with '7624'
7621 -7623 7624 0
-7624 7623 0
-7624 -7621 0
c Var 'variant_fields_00004_00005_00007' order represents '6' with '7625'
-7623 7625 0
c Var 'variant_fields_00004_00005_00007' direct represents '6' with '7626'
7623 -7625 7626 0
-7626 7625 0
-7626 -7623 0
c Var 'variant_fields_00004_00005_00007' order represents '7' with '7627'
-7625 7627 0
c Var 'variant_fields_00004_00005_00007' direct represents '7' with '7628'
7625 -7627 7628 0
-7628 7627 0
-7628 -7625 0
c Var 'variant_fields_00004_00005_00007' order represents '8' with '7629'
-7627 7629 0
c Var 'variant_fields_00004_00005_00007' direct represents '8' with '7630'
7627 -7629 7630 0
-7630 7629 0
-7630 -7627 0
c Var 'variant_fields_00004_00005_00007' direct represents '9' with '-7629'
7616 7618 7620 7622 7624 7626 7628 7630 -7629 0
c Encoding variable: variant_fields_00004_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00008' order represents '1' with '7631'
c Var 'variant_fields_00004_00005_00008' direct represents '1' with '7631'
c Var 'variant_fields_00004_00005_00008' order represents '2' with '7632'
-7631 7632 0
c Var 'variant_fields_00004_00005_00008' direct represents '2' with '7633'
7631 -7632 7633 0
-7633 7632 0
-7633 -7631 0
c Var 'variant_fields_00004_00005_00008' order represents '3' with '7634'
-7632 7634 0
c Var 'variant_fields_00004_00005_00008' direct represents '3' with '7635'
7632 -7634 7635 0
-7635 7634 0
-7635 -7632 0
c Var 'variant_fields_00004_00005_00008' order represents '4' with '7636'
-7634 7636 0
c Var 'variant_fields_00004_00005_00008' direct represents '4' with '7637'
7634 -7636 7637 0
-7637 7636 0
-7637 -7634 0
c Var 'variant_fields_00004_00005_00008' order represents '5' with '7638'
-7636 7638 0
c Var 'variant_fields_00004_00005_00008' direct represents '5' with '7639'
7636 -7638 7639 0
-7639 7638 0
-7639 -7636 0
c Var 'variant_fields_00004_00005_00008' order represents '6' with '7640'
-7638 7640 0
c Var 'variant_fields_00004_00005_00008' direct represents '6' with '7641'
7638 -7640 7641 0
-7641 7640 0
-7641 -7638 0
c Var 'variant_fields_00004_00005_00008' order represents '7' with '7642'
-7640 7642 0
c Var 'variant_fields_00004_00005_00008' direct represents '7' with '7643'
7640 -7642 7643 0
-7643 7642 0
-7643 -7640 0
c Var 'variant_fields_00004_00005_00008' order represents '8' with '7644'
-7642 7644 0
c Var 'variant_fields_00004_00005_00008' direct represents '8' with '7645'
7642 -7644 7645 0
-7645 7644 0
-7645 -7642 0
c Var 'variant_fields_00004_00005_00008' direct represents '9' with '-7644'
7631 7633 7635 7637 7639 7641 7643 7645 -7644 0
c Encoding variable: variant_fields_00004_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00009' order represents '1' with '7646'
c Var 'variant_fields_00004_00005_00009' direct represents '1' with '7646'
c Var 'variant_fields_00004_00005_00009' order represents '2' with '7647'
-7646 7647 0
c Var 'variant_fields_00004_00005_00009' direct represents '2' with '7648'
7646 -7647 7648 0
-7648 7647 0
-7648 -7646 0
c Var 'variant_fields_00004_00005_00009' order represents '3' with '7649'
-7647 7649 0
c Var 'variant_fields_00004_00005_00009' direct represents '3' with '7650'
7647 -7649 7650 0
-7650 7649 0
-7650 -7647 0
c Var 'variant_fields_00004_00005_00009' order represents '4' with '7651'
-7649 7651 0
c Var 'variant_fields_00004_00005_00009' direct represents '4' with '7652'
7649 -7651 7652 0
-7652 7651 0
-7652 -7649 0
c Var 'variant_fields_00004_00005_00009' order represents '5' with '7653'
-7651 7653 0
c Var 'variant_fields_00004_00005_00009' direct represents '5' with '7654'
7651 -7653 7654 0
-7654 7653 0
-7654 -7651 0
c Var 'variant_fields_00004_00005_00009' order represents '6' with '7655'
-7653 7655 0
c Var 'variant_fields_00004_00005_00009' direct represents '6' with '7656'
7653 -7655 7656 0
-7656 7655 0
-7656 -7653 0
c Var 'variant_fields_00004_00005_00009' order represents '7' with '7657'
-7655 7657 0
c Var 'variant_fields_00004_00005_00009' direct represents '7' with '7658'
7655 -7657 7658 0
-7658 7657 0
-7658 -7655 0
c Var 'variant_fields_00004_00005_00009' order represents '8' with '7659'
-7657 7659 0
c Var 'variant_fields_00004_00005_00009' direct represents '8' with '7660'
7657 -7659 7660 0
-7660 7659 0
-7660 -7657 0
c Var 'variant_fields_00004_00005_00009' direct represents '9' with '-7659'
7646 7648 7650 7652 7654 7656 7658 7660 -7659 0
c Encoding variable: variant_fields_00004_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00001' order represents '1' with '7661'
c Var 'variant_fields_00004_00006_00001' direct represents '1' with '7661'
c Var 'variant_fields_00004_00006_00001' order represents '2' with '7662'
-7661 7662 0
c Var 'variant_fields_00004_00006_00001' direct represents '2' with '7663'
7661 -7662 7663 0
-7663 7662 0
-7663 -7661 0
c Var 'variant_fields_00004_00006_00001' order represents '3' with '7664'
-7662 7664 0
c Var 'variant_fields_00004_00006_00001' direct represents '3' with '7665'
7662 -7664 7665 0
-7665 7664 0
-7665 -7662 0
c Var 'variant_fields_00004_00006_00001' order represents '4' with '7666'
-7664 7666 0
c Var 'variant_fields_00004_00006_00001' direct represents '4' with '7667'
7664 -7666 7667 0
-7667 7666 0
-7667 -7664 0
c Var 'variant_fields_00004_00006_00001' order represents '5' with '7668'
-7666 7668 0
c Var 'variant_fields_00004_00006_00001' direct represents '5' with '7669'
7666 -7668 7669 0
-7669 7668 0
-7669 -7666 0
c Var 'variant_fields_00004_00006_00001' order represents '6' with '7670'
-7668 7670 0
c Var 'variant_fields_00004_00006_00001' direct represents '6' with '7671'
7668 -7670 7671 0
-7671 7670 0
-7671 -7668 0
c Var 'variant_fields_00004_00006_00001' order represents '7' with '7672'
-7670 7672 0
c Var 'variant_fields_00004_00006_00001' direct represents '7' with '7673'
7670 -7672 7673 0
-7673 7672 0
-7673 -7670 0
c Var 'variant_fields_00004_00006_00001' order represents '8' with '7674'
-7672 7674 0
c Var 'variant_fields_00004_00006_00001' direct represents '8' with '7675'
7672 -7674 7675 0
-7675 7674 0
-7675 -7672 0
c Var 'variant_fields_00004_00006_00001' direct represents '9' with '-7674'
7661 7663 7665 7667 7669 7671 7673 7675 -7674 0
c Encoding variable: variant_fields_00004_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00002' order represents '1' with '7676'
c Var 'variant_fields_00004_00006_00002' direct represents '1' with '7676'
c Var 'variant_fields_00004_00006_00002' order represents '2' with '7677'
-7676 7677 0
c Var 'variant_fields_00004_00006_00002' direct represents '2' with '7678'
7676 -7677 7678 0
-7678 7677 0
-7678 -7676 0
c Var 'variant_fields_00004_00006_00002' order represents '3' with '7679'
-7677 7679 0
c Var 'variant_fields_00004_00006_00002' direct represents '3' with '7680'
7677 -7679 7680 0
-7680 7679 0
-7680 -7677 0
c Var 'variant_fields_00004_00006_00002' order represents '4' with '7681'
-7679 7681 0
c Var 'variant_fields_00004_00006_00002' direct represents '4' with '7682'
7679 -7681 7682 0
-7682 7681 0
-7682 -7679 0
c Var 'variant_fields_00004_00006_00002' order represents '5' with '7683'
-7681 7683 0
c Var 'variant_fields_00004_00006_00002' direct represents '5' with '7684'
7681 -7683 7684 0
-7684 7683 0
-7684 -7681 0
c Var 'variant_fields_00004_00006_00002' order represents '6' with '7685'
-7683 7685 0
c Var 'variant_fields_00004_00006_00002' direct represents '6' with '7686'
7683 -7685 7686 0
-7686 7685 0
-7686 -7683 0
c Var 'variant_fields_00004_00006_00002' order represents '7' with '7687'
-7685 7687 0
c Var 'variant_fields_00004_00006_00002' direct represents '7' with '7688'
7685 -7687 7688 0
-7688 7687 0
-7688 -7685 0
c Var 'variant_fields_00004_00006_00002' order represents '8' with '7689'
-7687 7689 0
c Var 'variant_fields_00004_00006_00002' direct represents '8' with '7690'
7687 -7689 7690 0
-7690 7689 0
-7690 -7687 0
c Var 'variant_fields_00004_00006_00002' direct represents '9' with '-7689'
7676 7678 7680 7682 7684 7686 7688 7690 -7689 0
c Encoding variable: variant_fields_00004_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00003' order represents '1' with '7691'
c Var 'variant_fields_00004_00006_00003' direct represents '1' with '7691'
c Var 'variant_fields_00004_00006_00003' order represents '2' with '7692'
-7691 7692 0
c Var 'variant_fields_00004_00006_00003' direct represents '2' with '7693'
7691 -7692 7693 0
-7693 7692 0
-7693 -7691 0
c Var 'variant_fields_00004_00006_00003' order represents '3' with '7694'
-7692 7694 0
c Var 'variant_fields_00004_00006_00003' direct represents '3' with '7695'
7692 -7694 7695 0
-7695 7694 0
-7695 -7692 0
c Var 'variant_fields_00004_00006_00003' order represents '4' with '7696'
-7694 7696 0
c Var 'variant_fields_00004_00006_00003' direct represents '4' with '7697'
7694 -7696 7697 0
-7697 7696 0
-7697 -7694 0
c Var 'variant_fields_00004_00006_00003' order represents '5' with '7698'
-7696 7698 0
c Var 'variant_fields_00004_00006_00003' direct represents '5' with '7699'
7696 -7698 7699 0
-7699 7698 0
-7699 -7696 0
c Var 'variant_fields_00004_00006_00003' order represents '6' with '7700'
-7698 7700 0
c Var 'variant_fields_00004_00006_00003' direct represents '6' with '7701'
7698 -7700 7701 0
-7701 7700 0
-7701 -7698 0
c Var 'variant_fields_00004_00006_00003' order represents '7' with '7702'
-7700 7702 0
c Var 'variant_fields_00004_00006_00003' direct represents '7' with '7703'
7700 -7702 7703 0
-7703 7702 0
-7703 -7700 0
c Var 'variant_fields_00004_00006_00003' order represents '8' with '7704'
-7702 7704 0
c Var 'variant_fields_00004_00006_00003' direct represents '8' with '7705'
7702 -7704 7705 0
-7705 7704 0
-7705 -7702 0
c Var 'variant_fields_00004_00006_00003' direct represents '9' with '-7704'
7691 7693 7695 7697 7699 7701 7703 7705 -7704 0
c Encoding variable: variant_fields_00004_00006_00004 with domain: int(7) (representing constraint )
c Var 'variant_fields_00004_00006_00004' direct represents '7' with '7706'
7706 0
c Encoding variable: variant_fields_00004_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00005' order represents '1' with '7707'
c Var 'variant_fields_00004_00006_00005' direct represents '1' with '7707'
c Var 'variant_fields_00004_00006_00005' order represents '2' with '7708'
-7707 7708 0
c Var 'variant_fields_00004_00006_00005' direct represents '2' with '7709'
7707 -7708 7709 0
-7709 7708 0
-7709 -7707 0
c Var 'variant_fields_00004_00006_00005' order represents '3' with '7710'
-7708 7710 0
c Var 'variant_fields_00004_00006_00005' direct represents '3' with '7711'
7708 -7710 7711 0
-7711 7710 0
-7711 -7708 0
c Var 'variant_fields_00004_00006_00005' order represents '4' with '7712'
-7710 7712 0
c Var 'variant_fields_00004_00006_00005' direct represents '4' with '7713'
7710 -7712 7713 0
-7713 7712 0
-7713 -7710 0
c Var 'variant_fields_00004_00006_00005' order represents '5' with '7714'
-7712 7714 0
c Var 'variant_fields_00004_00006_00005' direct represents '5' with '7715'
7712 -7714 7715 0
-7715 7714 0
-7715 -7712 0
c Var 'variant_fields_00004_00006_00005' order represents '6' with '7716'
-7714 7716 0
c Var 'variant_fields_00004_00006_00005' direct represents '6' with '7717'
7714 -7716 7717 0
-7717 7716 0
-7717 -7714 0
c Var 'variant_fields_00004_00006_00005' order represents '7' with '7718'
-7716 7718 0
c Var 'variant_fields_00004_00006_00005' direct represents '7' with '7719'
7716 -7718 7719 0
-7719 7718 0
-7719 -7716 0
c Var 'variant_fields_00004_00006_00005' order represents '8' with '7720'
-7718 7720 0
c Var 'variant_fields_00004_00006_00005' direct represents '8' with '7721'
7718 -7720 7721 0
-7721 7720 0
-7721 -7718 0
c Var 'variant_fields_00004_00006_00005' direct represents '9' with '-7720'
7707 7709 7711 7713 7715 7717 7719 7721 -7720 0
c Encoding variable: variant_fields_00004_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00006' order represents '1' with '7722'
c Var 'variant_fields_00004_00006_00006' direct represents '1' with '7722'
c Var 'variant_fields_00004_00006_00006' order represents '2' with '7723'
-7722 7723 0
c Var 'variant_fields_00004_00006_00006' direct represents '2' with '7724'
7722 -7723 7724 0
-7724 7723 0
-7724 -7722 0
c Var 'variant_fields_00004_00006_00006' order represents '3' with '7725'
-7723 7725 0
c Var 'variant_fields_00004_00006_00006' direct represents '3' with '7726'
7723 -7725 7726 0
-7726 7725 0
-7726 -7723 0
c Var 'variant_fields_00004_00006_00006' order represents '4' with '7727'
-7725 7727 0
c Var 'variant_fields_00004_00006_00006' direct represents '4' with '7728'
7725 -7727 7728 0
-7728 7727 0
-7728 -7725 0
c Var 'variant_fields_00004_00006_00006' order represents '5' with '7729'
-7727 7729 0
c Var 'variant_fields_00004_00006_00006' direct represents '5' with '7730'
7727 -7729 7730 0
-7730 7729 0
-7730 -7727 0
c Var 'variant_fields_00004_00006_00006' order represents '6' with '7731'
-7729 7731 0
c Var 'variant_fields_00004_00006_00006' direct represents '6' with '7732'
7729 -7731 7732 0
-7732 7731 0
-7732 -7729 0
c Var 'variant_fields_00004_00006_00006' order represents '7' with '7733'
-7731 7733 0
c Var 'variant_fields_00004_00006_00006' direct represents '7' with '7734'
7731 -7733 7734 0
-7734 7733 0
-7734 -7731 0
c Var 'variant_fields_00004_00006_00006' order represents '8' with '7735'
-7733 7735 0
c Var 'variant_fields_00004_00006_00006' direct represents '8' with '7736'
7733 -7735 7736 0
-7736 7735 0
-7736 -7733 0
c Var 'variant_fields_00004_00006_00006' direct represents '9' with '-7735'
7722 7724 7726 7728 7730 7732 7734 7736 -7735 0
c Encoding variable: variant_fields_00004_00006_00007 with domain: int(6) (representing constraint )
c Var 'variant_fields_00004_00006_00007' direct represents '6' with '7737'
7737 0
c Encoding variable: variant_fields_00004_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00008' order represents '1' with '7738'
c Var 'variant_fields_00004_00006_00008' direct represents '1' with '7738'
c Var 'variant_fields_00004_00006_00008' order represents '2' with '7739'
-7738 7739 0
c Var 'variant_fields_00004_00006_00008' direct represents '2' with '7740'
7738 -7739 7740 0
-7740 7739 0
-7740 -7738 0
c Var 'variant_fields_00004_00006_00008' order represents '3' with '7741'
-7739 7741 0
c Var 'variant_fields_00004_00006_00008' direct represents '3' with '7742'
7739 -7741 7742 0
-7742 7741 0
-7742 -7739 0
c Var 'variant_fields_00004_00006_00008' order represents '4' with '7743'
-7741 7743 0
c Var 'variant_fields_00004_00006_00008' direct represents '4' with '7744'
7741 -7743 7744 0
-7744 7743 0
-7744 -7741 0
c Var 'variant_fields_00004_00006_00008' order represents '5' with '7745'
-7743 7745 0
c Var 'variant_fields_00004_00006_00008' direct represents '5' with '7746'
7743 -7745 7746 0
-7746 7745 0
-7746 -7743 0
c Var 'variant_fields_00004_00006_00008' order represents '6' with '7747'
-7745 7747 0
c Var 'variant_fields_00004_00006_00008' direct represents '6' with '7748'
7745 -7747 7748 0
-7748 7747 0
-7748 -7745 0
c Var 'variant_fields_00004_00006_00008' order represents '7' with '7749'
-7747 7749 0
c Var 'variant_fields_00004_00006_00008' direct represents '7' with '7750'
7747 -7749 7750 0
-7750 7749 0
-7750 -7747 0
c Var 'variant_fields_00004_00006_00008' order represents '8' with '7751'
-7749 7751 0
c Var 'variant_fields_00004_00006_00008' direct represents '8' with '7752'
7749 -7751 7752 0
-7752 7751 0
-7752 -7749 0
c Var 'variant_fields_00004_00006_00008' direct represents '9' with '-7751'
7738 7740 7742 7744 7746 7748 7750 7752 -7751 0
c Encoding variable: variant_fields_00004_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00009' order represents '1' with '7753'
c Var 'variant_fields_00004_00006_00009' direct represents '1' with '7753'
c Var 'variant_fields_00004_00006_00009' order represents '2' with '7754'
-7753 7754 0
c Var 'variant_fields_00004_00006_00009' direct represents '2' with '7755'
7753 -7754 7755 0
-7755 7754 0
-7755 -7753 0
c Var 'variant_fields_00004_00006_00009' order represents '3' with '7756'
-7754 7756 0
c Var 'variant_fields_00004_00006_00009' direct represents '3' with '7757'
7754 -7756 7757 0
-7757 7756 0
-7757 -7754 0
c Var 'variant_fields_00004_00006_00009' order represents '4' with '7758'
-7756 7758 0
c Var 'variant_fields_00004_00006_00009' direct represents '4' with '7759'
7756 -7758 7759 0
-7759 7758 0
-7759 -7756 0
c Var 'variant_fields_00004_00006_00009' order represents '5' with '7760'
-7758 7760 0
c Var 'variant_fields_00004_00006_00009' direct represents '5' with '7761'
7758 -7760 7761 0
-7761 7760 0
-7761 -7758 0
c Var 'variant_fields_00004_00006_00009' order represents '6' with '7762'
-7760 7762 0
c Var 'variant_fields_00004_00006_00009' direct represents '6' with '7763'
7760 -7762 7763 0
-7763 7762 0
-7763 -7760 0
c Var 'variant_fields_00004_00006_00009' order represents '7' with '7764'
-7762 7764 0
c Var 'variant_fields_00004_00006_00009' direct represents '7' with '7765'
7762 -7764 7765 0
-7765 7764 0
-7765 -7762 0
c Var 'variant_fields_00004_00006_00009' order represents '8' with '7766'
-7764 7766 0
c Var 'variant_fields_00004_00006_00009' direct represents '8' with '7767'
7764 -7766 7767 0
-7767 7766 0
-7767 -7764 0
c Var 'variant_fields_00004_00006_00009' direct represents '9' with '-7766'
7753 7755 7757 7759 7761 7763 7765 7767 -7766 0
c Encoding variable: variant_fields_00004_00007_00001 with domain: int(8) (representing constraint )
c Var 'variant_fields_00004_00007_00001' direct represents '8' with '7768'
7768 0
c Encoding variable: variant_fields_00004_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00002' order represents '1' with '7769'
c Var 'variant_fields_00004_00007_00002' direct represents '1' with '7769'
c Var 'variant_fields_00004_00007_00002' order represents '2' with '7770'
-7769 7770 0
c Var 'variant_fields_00004_00007_00002' direct represents '2' with '7771'
7769 -7770 7771 0
-7771 7770 0
-7771 -7769 0
c Var 'variant_fields_00004_00007_00002' order represents '3' with '7772'
-7770 7772 0
c Var 'variant_fields_00004_00007_00002' direct represents '3' with '7773'
7770 -7772 7773 0
-7773 7772 0
-7773 -7770 0
c Var 'variant_fields_00004_00007_00002' order represents '4' with '7774'
-7772 7774 0
c Var 'variant_fields_00004_00007_00002' direct represents '4' with '7775'
7772 -7774 7775 0
-7775 7774 0
-7775 -7772 0
c Var 'variant_fields_00004_00007_00002' order represents '5' with '7776'
-7774 7776 0
c Var 'variant_fields_00004_00007_00002' direct represents '5' with '7777'
7774 -7776 7777 0
-7777 7776 0
-7777 -7774 0
c Var 'variant_fields_00004_00007_00002' order represents '6' with '7778'
-7776 7778 0
c Var 'variant_fields_00004_00007_00002' direct represents '6' with '7779'
7776 -7778 7779 0
-7779 7778 0
-7779 -7776 0
c Var 'variant_fields_00004_00007_00002' order represents '7' with '7780'
-7778 7780 0
c Var 'variant_fields_00004_00007_00002' direct represents '7' with '7781'
7778 -7780 7781 0
-7781 7780 0
-7781 -7778 0
c Var 'variant_fields_00004_00007_00002' order represents '8' with '7782'
-7780 7782 0
c Var 'variant_fields_00004_00007_00002' direct represents '8' with '7783'
7780 -7782 7783 0
-7783 7782 0
-7783 -7780 0
c Var 'variant_fields_00004_00007_00002' direct represents '9' with '-7782'
7769 7771 7773 7775 7777 7779 7781 7783 -7782 0
c Encoding variable: variant_fields_00004_00007_00003 with domain: int(6) (representing constraint )
c Var 'variant_fields_00004_00007_00003' direct represents '6' with '7784'
7784 0
c Encoding variable: variant_fields_00004_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00004' order represents '1' with '7785'
c Var 'variant_fields_00004_00007_00004' direct represents '1' with '7785'
c Var 'variant_fields_00004_00007_00004' order represents '2' with '7786'
-7785 7786 0
c Var 'variant_fields_00004_00007_00004' direct represents '2' with '7787'
7785 -7786 7787 0
-7787 7786 0
-7787 -7785 0
c Var 'variant_fields_00004_00007_00004' order represents '3' with '7788'
-7786 7788 0
c Var 'variant_fields_00004_00007_00004' direct represents '3' with '7789'
7786 -7788 7789 0
-7789 7788 0
-7789 -7786 0
c Var 'variant_fields_00004_00007_00004' order represents '4' with '7790'
-7788 7790 0
c Var 'variant_fields_00004_00007_00004' direct represents '4' with '7791'
7788 -7790 7791 0
-7791 7790 0
-7791 -7788 0
c Var 'variant_fields_00004_00007_00004' order represents '5' with '7792'
-7790 7792 0
c Var 'variant_fields_00004_00007_00004' direct represents '5' with '7793'
7790 -7792 7793 0
-7793 7792 0
-7793 -7790 0
c Var 'variant_fields_00004_00007_00004' order represents '6' with '7794'
-7792 7794 0
c Var 'variant_fields_00004_00007_00004' direct represents '6' with '7795'
7792 -7794 7795 0
-7795 7794 0
-7795 -7792 0
c Var 'variant_fields_00004_00007_00004' order represents '7' with '7796'
-7794 7796 0
c Var 'variant_fields_00004_00007_00004' direct represents '7' with '7797'
7794 -7796 7797 0
-7797 7796 0
-7797 -7794 0
c Var 'variant_fields_00004_00007_00004' order represents '8' with '7798'
-7796 7798 0
c Var 'variant_fields_00004_00007_00004' direct represents '8' with '7799'
7796 -7798 7799 0
-7799 7798 0
-7799 -7796 0
c Var 'variant_fields_00004_00007_00004' direct represents '9' with '-7798'
7785 7787 7789 7791 7793 7795 7797 7799 -7798 0
c Encoding variable: variant_fields_00004_00007_00005 with domain: int(7) (representing constraint )
c Var 'variant_fields_00004_00007_00005' direct represents '7' with '7800'
7800 0
c Encoding variable: variant_fields_00004_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00006' order represents '1' with '7801'
c Var 'variant_fields_00004_00007_00006' direct represents '1' with '7801'
c Var 'variant_fields_00004_00007_00006' order represents '2' with '7802'
-7801 7802 0
c Var 'variant_fields_00004_00007_00006' direct represents '2' with '7803'
7801 -7802 7803 0
-7803 7802 0
-7803 -7801 0
c Var 'variant_fields_00004_00007_00006' order represents '3' with '7804'
-7802 7804 0
c Var 'variant_fields_00004_00007_00006' direct represents '3' with '7805'
7802 -7804 7805 0
-7805 7804 0
-7805 -7802 0
c Var 'variant_fields_00004_00007_00006' order represents '4' with '7806'
-7804 7806 0
c Var 'variant_fields_00004_00007_00006' direct represents '4' with '7807'
7804 -7806 7807 0
-7807 7806 0
-7807 -7804 0
c Var 'variant_fields_00004_00007_00006' order represents '5' with '7808'
-7806 7808 0
c Var 'variant_fields_00004_00007_00006' direct represents '5' with '7809'
7806 -7808 7809 0
-7809 7808 0
-7809 -7806 0
c Var 'variant_fields_00004_00007_00006' order represents '6' with '7810'
-7808 7810 0
c Var 'variant_fields_00004_00007_00006' direct represents '6' with '7811'
7808 -7810 7811 0
-7811 7810 0
-7811 -7808 0
c Var 'variant_fields_00004_00007_00006' order represents '7' with '7812'
-7810 7812 0
c Var 'variant_fields_00004_00007_00006' direct represents '7' with '7813'
7810 -7812 7813 0
-7813 7812 0
-7813 -7810 0
c Var 'variant_fields_00004_00007_00006' order represents '8' with '7814'
-7812 7814 0
c Var 'variant_fields_00004_00007_00006' direct represents '8' with '7815'
7812 -7814 7815 0
-7815 7814 0
-7815 -7812 0
c Var 'variant_fields_00004_00007_00006' direct represents '9' with '-7814'
7801 7803 7805 7807 7809 7811 7813 7815 -7814 0
c Encoding variable: variant_fields_00004_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00007' order represents '1' with '7816'
c Var 'variant_fields_00004_00007_00007' direct represents '1' with '7816'
c Var 'variant_fields_00004_00007_00007' order represents '2' with '7817'
-7816 7817 0
c Var 'variant_fields_00004_00007_00007' direct represents '2' with '7818'
7816 -7817 7818 0
-7818 7817 0
-7818 -7816 0
c Var 'variant_fields_00004_00007_00007' order represents '3' with '7819'
-7817 7819 0
c Var 'variant_fields_00004_00007_00007' direct represents '3' with '7820'
7817 -7819 7820 0
-7820 7819 0
-7820 -7817 0
c Var 'variant_fields_00004_00007_00007' order represents '4' with '7821'
-7819 7821 0
c Var 'variant_fields_00004_00007_00007' direct represents '4' with '7822'
7819 -7821 7822 0
-7822 7821 0
-7822 -7819 0
c Var 'variant_fields_00004_00007_00007' order represents '5' with '7823'
-7821 7823 0
c Var 'variant_fields_00004_00007_00007' direct represents '5' with '7824'
7821 -7823 7824 0
-7824 7823 0
-7824 -7821 0
c Var 'variant_fields_00004_00007_00007' order represents '6' with '7825'
-7823 7825 0
c Var 'variant_fields_00004_00007_00007' direct represents '6' with '7826'
7823 -7825 7826 0
-7826 7825 0
-7826 -7823 0
c Var 'variant_fields_00004_00007_00007' order represents '7' with '7827'
-7825 7827 0
c Var 'variant_fields_00004_00007_00007' direct represents '7' with '7828'
7825 -7827 7828 0
-7828 7827 0
-7828 -7825 0
c Var 'variant_fields_00004_00007_00007' order represents '8' with '7829'
-7827 7829 0
c Var 'variant_fields_00004_00007_00007' direct represents '8' with '7830'
7827 -7829 7830 0
-7830 7829 0
-7830 -7827 0
c Var 'variant_fields_00004_00007_00007' direct represents '9' with '-7829'
7816 7818 7820 7822 7824 7826 7828 7830 -7829 0
c Encoding variable: variant_fields_00004_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00008' order represents '1' with '7831'
c Var 'variant_fields_00004_00007_00008' direct represents '1' with '7831'
c Var 'variant_fields_00004_00007_00008' order represents '2' with '7832'
-7831 7832 0
c Var 'variant_fields_00004_00007_00008' direct represents '2' with '7833'
7831 -7832 7833 0
-7833 7832 0
-7833 -7831 0
c Var 'variant_fields_00004_00007_00008' order represents '3' with '7834'
-7832 7834 0
c Var 'variant_fields_00004_00007_00008' direct represents '3' with '7835'
7832 -7834 7835 0
-7835 7834 0
-7835 -7832 0
c Var 'variant_fields_00004_00007_00008' order represents '4' with '7836'
-7834 7836 0
c Var 'variant_fields_00004_00007_00008' direct represents '4' with '7837'
7834 -7836 7837 0
-7837 7836 0
-7837 -7834 0
c Var 'variant_fields_00004_00007_00008' order represents '5' with '7838'
-7836 7838 0
c Var 'variant_fields_00004_00007_00008' direct represents '5' with '7839'
7836 -7838 7839 0
-7839 7838 0
-7839 -7836 0
c Var 'variant_fields_00004_00007_00008' order represents '6' with '7840'
-7838 7840 0
c Var 'variant_fields_00004_00007_00008' direct represents '6' with '7841'
7838 -7840 7841 0
-7841 7840 0
-7841 -7838 0
c Var 'variant_fields_00004_00007_00008' order represents '7' with '7842'
-7840 7842 0
c Var 'variant_fields_00004_00007_00008' direct represents '7' with '7843'
7840 -7842 7843 0
-7843 7842 0
-7843 -7840 0
c Var 'variant_fields_00004_00007_00008' order represents '8' with '7844'
-7842 7844 0
c Var 'variant_fields_00004_00007_00008' direct represents '8' with '7845'
7842 -7844 7845 0
-7845 7844 0
-7845 -7842 0
c Var 'variant_fields_00004_00007_00008' direct represents '9' with '-7844'
7831 7833 7835 7837 7839 7841 7843 7845 -7844 0
c Encoding variable: variant_fields_00004_00007_00009 with domain: int(5) (representing constraint )
c Var 'variant_fields_00004_00007_00009' direct represents '5' with '7846'
7846 0
c Encoding variable: variant_fields_00004_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00001' order represents '1' with '7847'
c Var 'variant_fields_00004_00008_00001' direct represents '1' with '7847'
c Var 'variant_fields_00004_00008_00001' order represents '2' with '7848'
-7847 7848 0
c Var 'variant_fields_00004_00008_00001' direct represents '2' with '7849'
7847 -7848 7849 0
-7849 7848 0
-7849 -7847 0
c Var 'variant_fields_00004_00008_00001' order represents '3' with '7850'
-7848 7850 0
c Var 'variant_fields_00004_00008_00001' direct represents '3' with '7851'
7848 -7850 7851 0
-7851 7850 0
-7851 -7848 0
c Var 'variant_fields_00004_00008_00001' order represents '4' with '7852'
-7850 7852 0
c Var 'variant_fields_00004_00008_00001' direct represents '4' with '7853'
7850 -7852 7853 0
-7853 7852 0
-7853 -7850 0
c Var 'variant_fields_00004_00008_00001' order represents '5' with '7854'
-7852 7854 0
c Var 'variant_fields_00004_00008_00001' direct represents '5' with '7855'
7852 -7854 7855 0
-7855 7854 0
-7855 -7852 0
c Var 'variant_fields_00004_00008_00001' order represents '6' with '7856'
-7854 7856 0
c Var 'variant_fields_00004_00008_00001' direct represents '6' with '7857'
7854 -7856 7857 0
-7857 7856 0
-7857 -7854 0
c Var 'variant_fields_00004_00008_00001' order represents '7' with '7858'
-7856 7858 0
c Var 'variant_fields_00004_00008_00001' direct represents '7' with '7859'
7856 -7858 7859 0
-7859 7858 0
-7859 -7856 0
c Var 'variant_fields_00004_00008_00001' order represents '8' with '7860'
-7858 7860 0
c Var 'variant_fields_00004_00008_00001' direct represents '8' with '7861'
7858 -7860 7861 0
-7861 7860 0
-7861 -7858 0
c Var 'variant_fields_00004_00008_00001' direct represents '9' with '-7860'
7847 7849 7851 7853 7855 7857 7859 7861 -7860 0
c Encoding variable: variant_fields_00004_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00002' order represents '1' with '7862'
c Var 'variant_fields_00004_00008_00002' direct represents '1' with '7862'
c Var 'variant_fields_00004_00008_00002' order represents '2' with '7863'
-7862 7863 0
c Var 'variant_fields_00004_00008_00002' direct represents '2' with '7864'
7862 -7863 7864 0
-7864 7863 0
-7864 -7862 0
c Var 'variant_fields_00004_00008_00002' order represents '3' with '7865'
-7863 7865 0
c Var 'variant_fields_00004_00008_00002' direct represents '3' with '7866'
7863 -7865 7866 0
-7866 7865 0
-7866 -7863 0
c Var 'variant_fields_00004_00008_00002' order represents '4' with '7867'
-7865 7867 0
c Var 'variant_fields_00004_00008_00002' direct represents '4' with '7868'
7865 -7867 7868 0
-7868 7867 0
-7868 -7865 0
c Var 'variant_fields_00004_00008_00002' order represents '5' with '7869'
-7867 7869 0
c Var 'variant_fields_00004_00008_00002' direct represents '5' with '7870'
7867 -7869 7870 0
-7870 7869 0
-7870 -7867 0
c Var 'variant_fields_00004_00008_00002' order represents '6' with '7871'
-7869 7871 0
c Var 'variant_fields_00004_00008_00002' direct represents '6' with '7872'
7869 -7871 7872 0
-7872 7871 0
-7872 -7869 0
c Var 'variant_fields_00004_00008_00002' order represents '7' with '7873'
-7871 7873 0
c Var 'variant_fields_00004_00008_00002' direct represents '7' with '7874'
7871 -7873 7874 0
-7874 7873 0
-7874 -7871 0
c Var 'variant_fields_00004_00008_00002' order represents '8' with '7875'
-7873 7875 0
c Var 'variant_fields_00004_00008_00002' direct represents '8' with '7876'
7873 -7875 7876 0
-7876 7875 0
-7876 -7873 0
c Var 'variant_fields_00004_00008_00002' direct represents '9' with '-7875'
7862 7864 7866 7868 7870 7872 7874 7876 -7875 0
c Encoding variable: variant_fields_00004_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00003' order represents '1' with '7877'
c Var 'variant_fields_00004_00008_00003' direct represents '1' with '7877'
c Var 'variant_fields_00004_00008_00003' order represents '2' with '7878'
-7877 7878 0
c Var 'variant_fields_00004_00008_00003' direct represents '2' with '7879'
7877 -7878 7879 0
-7879 7878 0
-7879 -7877 0
c Var 'variant_fields_00004_00008_00003' order represents '3' with '7880'
-7878 7880 0
c Var 'variant_fields_00004_00008_00003' direct represents '3' with '7881'
7878 -7880 7881 0
-7881 7880 0
-7881 -7878 0
c Var 'variant_fields_00004_00008_00003' order represents '4' with '7882'
-7880 7882 0
c Var 'variant_fields_00004_00008_00003' direct represents '4' with '7883'
7880 -7882 7883 0
-7883 7882 0
-7883 -7880 0
c Var 'variant_fields_00004_00008_00003' order represents '5' with '7884'
-7882 7884 0
c Var 'variant_fields_00004_00008_00003' direct represents '5' with '7885'
7882 -7884 7885 0
-7885 7884 0
-7885 -7882 0
c Var 'variant_fields_00004_00008_00003' order represents '6' with '7886'
-7884 7886 0
c Var 'variant_fields_00004_00008_00003' direct represents '6' with '7887'
7884 -7886 7887 0
-7887 7886 0
-7887 -7884 0
c Var 'variant_fields_00004_00008_00003' order represents '7' with '7888'
-7886 7888 0
c Var 'variant_fields_00004_00008_00003' direct represents '7' with '7889'
7886 -7888 7889 0
-7889 7888 0
-7889 -7886 0
c Var 'variant_fields_00004_00008_00003' order represents '8' with '7890'
-7888 7890 0
c Var 'variant_fields_00004_00008_00003' direct represents '8' with '7891'
7888 -7890 7891 0
-7891 7890 0
-7891 -7888 0
c Var 'variant_fields_00004_00008_00003' direct represents '9' with '-7890'
7877 7879 7881 7883 7885 7887 7889 7891 -7890 0
c Encoding variable: variant_fields_00004_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00004' order represents '1' with '7892'
c Var 'variant_fields_00004_00008_00004' direct represents '1' with '7892'
c Var 'variant_fields_00004_00008_00004' order represents '2' with '7893'
-7892 7893 0
c Var 'variant_fields_00004_00008_00004' direct represents '2' with '7894'
7892 -7893 7894 0
-7894 7893 0
-7894 -7892 0
c Var 'variant_fields_00004_00008_00004' order represents '3' with '7895'
-7893 7895 0
c Var 'variant_fields_00004_00008_00004' direct represents '3' with '7896'
7893 -7895 7896 0
-7896 7895 0
-7896 -7893 0
c Var 'variant_fields_00004_00008_00004' order represents '4' with '7897'
-7895 7897 0
c Var 'variant_fields_00004_00008_00004' direct represents '4' with '7898'
7895 -7897 7898 0
-7898 7897 0
-7898 -7895 0
c Var 'variant_fields_00004_00008_00004' order represents '5' with '7899'
-7897 7899 0
c Var 'variant_fields_00004_00008_00004' direct represents '5' with '7900'
7897 -7899 7900 0
-7900 7899 0
-7900 -7897 0
c Var 'variant_fields_00004_00008_00004' order represents '6' with '7901'
-7899 7901 0
c Var 'variant_fields_00004_00008_00004' direct represents '6' with '7902'
7899 -7901 7902 0
-7902 7901 0
-7902 -7899 0
c Var 'variant_fields_00004_00008_00004' order represents '7' with '7903'
-7901 7903 0
c Var 'variant_fields_00004_00008_00004' direct represents '7' with '7904'
7901 -7903 7904 0
-7904 7903 0
-7904 -7901 0
c Var 'variant_fields_00004_00008_00004' order represents '8' with '7905'
-7903 7905 0
c Var 'variant_fields_00004_00008_00004' direct represents '8' with '7906'
7903 -7905 7906 0
-7906 7905 0
-7906 -7903 0
c Var 'variant_fields_00004_00008_00004' direct represents '9' with '-7905'
7892 7894 7896 7898 7900 7902 7904 7906 -7905 0
c Encoding variable: variant_fields_00004_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00005' order represents '1' with '7907'
c Var 'variant_fields_00004_00008_00005' direct represents '1' with '7907'
c Var 'variant_fields_00004_00008_00005' order represents '2' with '7908'
-7907 7908 0
c Var 'variant_fields_00004_00008_00005' direct represents '2' with '7909'
7907 -7908 7909 0
-7909 7908 0
-7909 -7907 0
c Var 'variant_fields_00004_00008_00005' order represents '3' with '7910'
-7908 7910 0
c Var 'variant_fields_00004_00008_00005' direct represents '3' with '7911'
7908 -7910 7911 0
-7911 7910 0
-7911 -7908 0
c Var 'variant_fields_00004_00008_00005' order represents '4' with '7912'
-7910 7912 0
c Var 'variant_fields_00004_00008_00005' direct represents '4' with '7913'
7910 -7912 7913 0
-7913 7912 0
-7913 -7910 0
c Var 'variant_fields_00004_00008_00005' order represents '5' with '7914'
-7912 7914 0
c Var 'variant_fields_00004_00008_00005' direct represents '5' with '7915'
7912 -7914 7915 0
-7915 7914 0
-7915 -7912 0
c Var 'variant_fields_00004_00008_00005' order represents '6' with '7916'
-7914 7916 0
c Var 'variant_fields_00004_00008_00005' direct represents '6' with '7917'
7914 -7916 7917 0
-7917 7916 0
-7917 -7914 0
c Var 'variant_fields_00004_00008_00005' order represents '7' with '7918'
-7916 7918 0
c Var 'variant_fields_00004_00008_00005' direct represents '7' with '7919'
7916 -7918 7919 0
-7919 7918 0
-7919 -7916 0
c Var 'variant_fields_00004_00008_00005' order represents '8' with '7920'
-7918 7920 0
c Var 'variant_fields_00004_00008_00005' direct represents '8' with '7921'
7918 -7920 7921 0
-7921 7920 0
-7921 -7918 0
c Var 'variant_fields_00004_00008_00005' direct represents '9' with '-7920'
7907 7909 7911 7913 7915 7917 7919 7921 -7920 0
c Encoding variable: variant_fields_00004_00008_00006 with domain: int(3) (representing constraint )
c Var 'variant_fields_00004_00008_00006' direct represents '3' with '7922'
7922 0
c Encoding variable: variant_fields_00004_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00007' order represents '1' with '7923'
c Var 'variant_fields_00004_00008_00007' direct represents '1' with '7923'
c Var 'variant_fields_00004_00008_00007' order represents '2' with '7924'
-7923 7924 0
c Var 'variant_fields_00004_00008_00007' direct represents '2' with '7925'
7923 -7924 7925 0
-7925 7924 0
-7925 -7923 0
c Var 'variant_fields_00004_00008_00007' order represents '3' with '7926'
-7924 7926 0
c Var 'variant_fields_00004_00008_00007' direct represents '3' with '7927'
7924 -7926 7927 0
-7927 7926 0
-7927 -7924 0
c Var 'variant_fields_00004_00008_00007' order represents '4' with '7928'
-7926 7928 0
c Var 'variant_fields_00004_00008_00007' direct represents '4' with '7929'
7926 -7928 7929 0
-7929 7928 0
-7929 -7926 0
c Var 'variant_fields_00004_00008_00007' order represents '5' with '7930'
-7928 7930 0
c Var 'variant_fields_00004_00008_00007' direct represents '5' with '7931'
7928 -7930 7931 0
-7931 7930 0
-7931 -7928 0
c Var 'variant_fields_00004_00008_00007' order represents '6' with '7932'
-7930 7932 0
c Var 'variant_fields_00004_00008_00007' direct represents '6' with '7933'
7930 -7932 7933 0
-7933 7932 0
-7933 -7930 0
c Var 'variant_fields_00004_00008_00007' order represents '7' with '7934'
-7932 7934 0
c Var 'variant_fields_00004_00008_00007' direct represents '7' with '7935'
7932 -7934 7935 0
-7935 7934 0
-7935 -7932 0
c Var 'variant_fields_00004_00008_00007' order represents '8' with '7936'
-7934 7936 0
c Var 'variant_fields_00004_00008_00007' direct represents '8' with '7937'
7934 -7936 7937 0
-7937 7936 0
-7937 -7934 0
c Var 'variant_fields_00004_00008_00007' direct represents '9' with '-7936'
7923 7925 7927 7929 7931 7933 7935 7937 -7936 0
c Encoding variable: variant_fields_00004_00008_00008 with domain: int(7) (representing constraint )
c Var 'variant_fields_00004_00008_00008' direct represents '7' with '7938'
7938 0
c Encoding variable: variant_fields_00004_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00009' order represents '1' with '7939'
c Var 'variant_fields_00004_00008_00009' direct represents '1' with '7939'
c Var 'variant_fields_00004_00008_00009' order represents '2' with '7940'
-7939 7940 0
c Var 'variant_fields_00004_00008_00009' direct represents '2' with '7941'
7939 -7940 7941 0
-7941 7940 0
-7941 -7939 0
c Var 'variant_fields_00004_00008_00009' order represents '3' with '7942'
-7940 7942 0
c Var 'variant_fields_00004_00008_00009' direct represents '3' with '7943'
7940 -7942 7943 0
-7943 7942 0
-7943 -7940 0
c Var 'variant_fields_00004_00008_00009' order represents '4' with '7944'
-7942 7944 0
c Var 'variant_fields_00004_00008_00009' direct represents '4' with '7945'
7942 -7944 7945 0
-7945 7944 0
-7945 -7942 0
c Var 'variant_fields_00004_00008_00009' order represents '5' with '7946'
-7944 7946 0
c Var 'variant_fields_00004_00008_00009' direct represents '5' with '7947'
7944 -7946 7947 0
-7947 7946 0
-7947 -7944 0
c Var 'variant_fields_00004_00008_00009' order represents '6' with '7948'
-7946 7948 0
c Var 'variant_fields_00004_00008_00009' direct represents '6' with '7949'
7946 -7948 7949 0
-7949 7948 0
-7949 -7946 0
c Var 'variant_fields_00004_00008_00009' order represents '7' with '7950'
-7948 7950 0
c Var 'variant_fields_00004_00008_00009' direct represents '7' with '7951'
7948 -7950 7951 0
-7951 7950 0
-7951 -7948 0
c Var 'variant_fields_00004_00008_00009' order represents '8' with '7952'
-7950 7952 0
c Var 'variant_fields_00004_00008_00009' direct represents '8' with '7953'
7950 -7952 7953 0
-7953 7952 0
-7953 -7950 0
c Var 'variant_fields_00004_00008_00009' direct represents '9' with '-7952'
7939 7941 7943 7945 7947 7949 7951 7953 -7952 0
c Encoding variable: variant_fields_00004_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00001' order represents '1' with '7954'
c Var 'variant_fields_00004_00009_00001' direct represents '1' with '7954'
c Var 'variant_fields_00004_00009_00001' order represents '2' with '7955'
-7954 7955 0
c Var 'variant_fields_00004_00009_00001' direct represents '2' with '7956'
7954 -7955 7956 0
-7956 7955 0
-7956 -7954 0
c Var 'variant_fields_00004_00009_00001' order represents '3' with '7957'
-7955 7957 0
c Var 'variant_fields_00004_00009_00001' direct represents '3' with '7958'
7955 -7957 7958 0
-7958 7957 0
-7958 -7955 0
c Var 'variant_fields_00004_00009_00001' order represents '4' with '7959'
-7957 7959 0
c Var 'variant_fields_00004_00009_00001' direct represents '4' with '7960'
7957 -7959 7960 0
-7960 7959 0
-7960 -7957 0
c Var 'variant_fields_00004_00009_00001' order represents '5' with '7961'
-7959 7961 0
c Var 'variant_fields_00004_00009_00001' direct represents '5' with '7962'
7959 -7961 7962 0
-7962 7961 0
-7962 -7959 0
c Var 'variant_fields_00004_00009_00001' order represents '6' with '7963'
-7961 7963 0
c Var 'variant_fields_00004_00009_00001' direct represents '6' with '7964'
7961 -7963 7964 0
-7964 7963 0
-7964 -7961 0
c Var 'variant_fields_00004_00009_00001' order represents '7' with '7965'
-7963 7965 0
c Var 'variant_fields_00004_00009_00001' direct represents '7' with '7966'
7963 -7965 7966 0
-7966 7965 0
-7966 -7963 0
c Var 'variant_fields_00004_00009_00001' order represents '8' with '7967'
-7965 7967 0
c Var 'variant_fields_00004_00009_00001' direct represents '8' with '7968'
7965 -7967 7968 0
-7968 7967 0
-7968 -7965 0
c Var 'variant_fields_00004_00009_00001' direct represents '9' with '-7967'
7954 7956 7958 7960 7962 7964 7966 7968 -7967 0
c Encoding variable: variant_fields_00004_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00002' order represents '1' with '7969'
c Var 'variant_fields_00004_00009_00002' direct represents '1' with '7969'
c Var 'variant_fields_00004_00009_00002' order represents '2' with '7970'
-7969 7970 0
c Var 'variant_fields_00004_00009_00002' direct represents '2' with '7971'
7969 -7970 7971 0
-7971 7970 0
-7971 -7969 0
c Var 'variant_fields_00004_00009_00002' order represents '3' with '7972'
-7970 7972 0
c Var 'variant_fields_00004_00009_00002' direct represents '3' with '7973'
7970 -7972 7973 0
-7973 7972 0
-7973 -7970 0
c Var 'variant_fields_00004_00009_00002' order represents '4' with '7974'
-7972 7974 0
c Var 'variant_fields_00004_00009_00002' direct represents '4' with '7975'
7972 -7974 7975 0
-7975 7974 0
-7975 -7972 0
c Var 'variant_fields_00004_00009_00002' order represents '5' with '7976'
-7974 7976 0
c Var 'variant_fields_00004_00009_00002' direct represents '5' with '7977'
7974 -7976 7977 0
-7977 7976 0
-7977 -7974 0
c Var 'variant_fields_00004_00009_00002' order represents '6' with '7978'
-7976 7978 0
c Var 'variant_fields_00004_00009_00002' direct represents '6' with '7979'
7976 -7978 7979 0
-7979 7978 0
-7979 -7976 0
c Var 'variant_fields_00004_00009_00002' order represents '7' with '7980'
-7978 7980 0
c Var 'variant_fields_00004_00009_00002' direct represents '7' with '7981'
7978 -7980 7981 0
-7981 7980 0
-7981 -7978 0
c Var 'variant_fields_00004_00009_00002' order represents '8' with '7982'
-7980 7982 0
c Var 'variant_fields_00004_00009_00002' direct represents '8' with '7983'
7980 -7982 7983 0
-7983 7982 0
-7983 -7980 0
c Var 'variant_fields_00004_00009_00002' direct represents '9' with '-7982'
7969 7971 7973 7975 7977 7979 7981 7983 -7982 0
c Encoding variable: variant_fields_00004_00009_00003 with domain: int(7) (representing constraint )
c Var 'variant_fields_00004_00009_00003' direct represents '7' with '7984'
7984 0
c Encoding variable: variant_fields_00004_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00004' order represents '1' with '7985'
c Var 'variant_fields_00004_00009_00004' direct represents '1' with '7985'
c Var 'variant_fields_00004_00009_00004' order represents '2' with '7986'
-7985 7986 0
c Var 'variant_fields_00004_00009_00004' direct represents '2' with '7987'
7985 -7986 7987 0
-7987 7986 0
-7987 -7985 0
c Var 'variant_fields_00004_00009_00004' order represents '3' with '7988'
-7986 7988 0
c Var 'variant_fields_00004_00009_00004' direct represents '3' with '7989'
7986 -7988 7989 0
-7989 7988 0
-7989 -7986 0
c Var 'variant_fields_00004_00009_00004' order represents '4' with '7990'
-7988 7990 0
c Var 'variant_fields_00004_00009_00004' direct represents '4' with '7991'
7988 -7990 7991 0
-7991 7990 0
-7991 -7988 0
c Var 'variant_fields_00004_00009_00004' order represents '5' with '7992'
-7990 7992 0
c Var 'variant_fields_00004_00009_00004' direct represents '5' with '7993'
7990 -7992 7993 0
-7993 7992 0
-7993 -7990 0
c Var 'variant_fields_00004_00009_00004' order represents '6' with '7994'
-7992 7994 0
c Var 'variant_fields_00004_00009_00004' direct represents '6' with '7995'
7992 -7994 7995 0
-7995 7994 0
-7995 -7992 0
c Var 'variant_fields_00004_00009_00004' order represents '7' with '7996'
-7994 7996 0
c Var 'variant_fields_00004_00009_00004' direct represents '7' with '7997'
7994 -7996 7997 0
-7997 7996 0
-7997 -7994 0
c Var 'variant_fields_00004_00009_00004' order represents '8' with '7998'
-7996 7998 0
c Var 'variant_fields_00004_00009_00004' direct represents '8' with '7999'
7996 -7998 7999 0
-7999 7998 0
-7999 -7996 0
c Var 'variant_fields_00004_00009_00004' direct represents '9' with '-7998'
7985 7987 7989 7991 7993 7995 7997 7999 -7998 0
c Encoding variable: variant_fields_00004_00009_00005 with domain: int(2) (representing constraint )
c Var 'variant_fields_00004_00009_00005' direct represents '2' with '8000'
8000 0
c Encoding variable: variant_fields_00004_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00006' order represents '1' with '8001'
c Var 'variant_fields_00004_00009_00006' direct represents '1' with '8001'
c Var 'variant_fields_00004_00009_00006' order represents '2' with '8002'
-8001 8002 0
c Var 'variant_fields_00004_00009_00006' direct represents '2' with '8003'
8001 -8002 8003 0
-8003 8002 0
-8003 -8001 0
c Var 'variant_fields_00004_00009_00006' order represents '3' with '8004'
-8002 8004 0
c Var 'variant_fields_00004_00009_00006' direct represents '3' with '8005'
8002 -8004 8005 0
-8005 8004 0
-8005 -8002 0
c Var 'variant_fields_00004_00009_00006' order represents '4' with '8006'
-8004 8006 0
c Var 'variant_fields_00004_00009_00006' direct represents '4' with '8007'
8004 -8006 8007 0
-8007 8006 0
-8007 -8004 0
c Var 'variant_fields_00004_00009_00006' order represents '5' with '8008'
-8006 8008 0
c Var 'variant_fields_00004_00009_00006' direct represents '5' with '8009'
8006 -8008 8009 0
-8009 8008 0
-8009 -8006 0
c Var 'variant_fields_00004_00009_00006' order represents '6' with '8010'
-8008 8010 0
c Var 'variant_fields_00004_00009_00006' direct represents '6' with '8011'
8008 -8010 8011 0
-8011 8010 0
-8011 -8008 0
c Var 'variant_fields_00004_00009_00006' order represents '7' with '8012'
-8010 8012 0
c Var 'variant_fields_00004_00009_00006' direct represents '7' with '8013'
8010 -8012 8013 0
-8013 8012 0
-8013 -8010 0
c Var 'variant_fields_00004_00009_00006' order represents '8' with '8014'
-8012 8014 0
c Var 'variant_fields_00004_00009_00006' direct represents '8' with '8015'
8012 -8014 8015 0
-8015 8014 0
-8015 -8012 0
c Var 'variant_fields_00004_00009_00006' direct represents '9' with '-8014'
8001 8003 8005 8007 8009 8011 8013 8015 -8014 0
c Encoding variable: variant_fields_00004_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00007' order represents '1' with '8016'
c Var 'variant_fields_00004_00009_00007' direct represents '1' with '8016'
c Var 'variant_fields_00004_00009_00007' order represents '2' with '8017'
-8016 8017 0
c Var 'variant_fields_00004_00009_00007' direct represents '2' with '8018'
8016 -8017 8018 0
-8018 8017 0
-8018 -8016 0
c Var 'variant_fields_00004_00009_00007' order represents '3' with '8019'
-8017 8019 0
c Var 'variant_fields_00004_00009_00007' direct represents '3' with '8020'
8017 -8019 8020 0
-8020 8019 0
-8020 -8017 0
c Var 'variant_fields_00004_00009_00007' order represents '4' with '8021'
-8019 8021 0
c Var 'variant_fields_00004_00009_00007' direct represents '4' with '8022'
8019 -8021 8022 0
-8022 8021 0
-8022 -8019 0
c Var 'variant_fields_00004_00009_00007' order represents '5' with '8023'
-8021 8023 0
c Var 'variant_fields_00004_00009_00007' direct represents '5' with '8024'
8021 -8023 8024 0
-8024 8023 0
-8024 -8021 0
c Var 'variant_fields_00004_00009_00007' order represents '6' with '8025'
-8023 8025 0
c Var 'variant_fields_00004_00009_00007' direct represents '6' with '8026'
8023 -8025 8026 0
-8026 8025 0
-8026 -8023 0
c Var 'variant_fields_00004_00009_00007' order represents '7' with '8027'
-8025 8027 0
c Var 'variant_fields_00004_00009_00007' direct represents '7' with '8028'
8025 -8027 8028 0
-8028 8027 0
-8028 -8025 0
c Var 'variant_fields_00004_00009_00007' order represents '8' with '8029'
-8027 8029 0
c Var 'variant_fields_00004_00009_00007' direct represents '8' with '8030'
8027 -8029 8030 0
-8030 8029 0
-8030 -8027 0
c Var 'variant_fields_00004_00009_00007' direct represents '9' with '-8029'
8016 8018 8020 8022 8024 8026 8028 8030 -8029 0
c Encoding variable: variant_fields_00004_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00008' order represents '1' with '8031'
c Var 'variant_fields_00004_00009_00008' direct represents '1' with '8031'
c Var 'variant_fields_00004_00009_00008' order represents '2' with '8032'
-8031 8032 0
c Var 'variant_fields_00004_00009_00008' direct represents '2' with '8033'
8031 -8032 8033 0
-8033 8032 0
-8033 -8031 0
c Var 'variant_fields_00004_00009_00008' order represents '3' with '8034'
-8032 8034 0
c Var 'variant_fields_00004_00009_00008' direct represents '3' with '8035'
8032 -8034 8035 0
-8035 8034 0
-8035 -8032 0
c Var 'variant_fields_00004_00009_00008' order represents '4' with '8036'
-8034 8036 0
c Var 'variant_fields_00004_00009_00008' direct represents '4' with '8037'
8034 -8036 8037 0
-8037 8036 0
-8037 -8034 0
c Var 'variant_fields_00004_00009_00008' order represents '5' with '8038'
-8036 8038 0
c Var 'variant_fields_00004_00009_00008' direct represents '5' with '8039'
8036 -8038 8039 0
-8039 8038 0
-8039 -8036 0
c Var 'variant_fields_00004_00009_00008' order represents '6' with '8040'
-8038 8040 0
c Var 'variant_fields_00004_00009_00008' direct represents '6' with '8041'
8038 -8040 8041 0
-8041 8040 0
-8041 -8038 0
c Var 'variant_fields_00004_00009_00008' order represents '7' with '8042'
-8040 8042 0
c Var 'variant_fields_00004_00009_00008' direct represents '7' with '8043'
8040 -8042 8043 0
-8043 8042 0
-8043 -8040 0
c Var 'variant_fields_00004_00009_00008' order represents '8' with '8044'
-8042 8044 0
c Var 'variant_fields_00004_00009_00008' direct represents '8' with '8045'
8042 -8044 8045 0
-8045 8044 0
-8045 -8042 0
c Var 'variant_fields_00004_00009_00008' direct represents '9' with '-8044'
8031 8033 8035 8037 8039 8041 8043 8045 -8044 0
c Encoding variable: variant_fields_00004_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00009' order represents '1' with '8046'
c Var 'variant_fields_00004_00009_00009' direct represents '1' with '8046'
c Var 'variant_fields_00004_00009_00009' order represents '2' with '8047'
-8046 8047 0
c Var 'variant_fields_00004_00009_00009' direct represents '2' with '8048'
8046 -8047 8048 0
-8048 8047 0
-8048 -8046 0
c Var 'variant_fields_00004_00009_00009' order represents '3' with '8049'
-8047 8049 0
c Var 'variant_fields_00004_00009_00009' direct represents '3' with '8050'
8047 -8049 8050 0
-8050 8049 0
-8050 -8047 0
c Var 'variant_fields_00004_00009_00009' order represents '4' with '8051'
-8049 8051 0
c Var 'variant_fields_00004_00009_00009' direct represents '4' with '8052'
8049 -8051 8052 0
-8052 8051 0
-8052 -8049 0
c Var 'variant_fields_00004_00009_00009' order represents '5' with '8053'
-8051 8053 0
c Var 'variant_fields_00004_00009_00009' direct represents '5' with '8054'
8051 -8053 8054 0
-8054 8053 0
-8054 -8051 0
c Var 'variant_fields_00004_00009_00009' order represents '6' with '8055'
-8053 8055 0
c Var 'variant_fields_00004_00009_00009' direct represents '6' with '8056'
8053 -8055 8056 0
-8056 8055 0
-8056 -8053 0
c Var 'variant_fields_00004_00009_00009' order represents '7' with '8057'
-8055 8057 0
c Var 'variant_fields_00004_00009_00009' direct represents '7' with '8058'
8055 -8057 8058 0
-8058 8057 0
-8058 -8055 0
c Var 'variant_fields_00004_00009_00009' order represents '8' with '8059'
-8057 8059 0
c Var 'variant_fields_00004_00009_00009' direct represents '8' with '8060'
8057 -8059 8060 0
-8060 8059 0
-8060 -8057 0
c Var 'variant_fields_00004_00009_00009' direct represents '9' with '-8059'
8046 8048 8050 8052 8054 8056 8058 8060 -8059 0
c Encoding variable: aux0 with domain: bool (representing constraint (max_left_00001_00001_00001<max_left_00001_00001_00002))
c Var 'aux0' direct represents '0' with '-8061'
c Var 'aux0' direct represents '1' with '8061'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-8061'
c Encoding variable: aux1 with domain: bool (representing constraint (max_left_00001_00001_00002<max_left_00001_00001_00003))
c Var 'aux1' direct represents '0' with '-8062'
c Var 'aux1' direct represents '1' with '8062'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-8062'
c Encoding variable: aux2 with domain: bool (representing constraint (max_left_00001_00001_00003<max_left_00001_00001_00004))
c Var 'aux2' direct represents '0' with '-8063'
c Var 'aux2' direct represents '1' with '8063'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-8063'
c Encoding variable: aux3 with domain: bool (representing constraint (max_left_00001_00001_00004<max_left_00001_00001_00005))
c Var 'aux3' direct represents '0' with '-8064'
c Var 'aux3' direct represents '1' with '8064'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-8064'
c Encoding variable: aux4 with domain: bool (representing constraint (max_left_00001_00001_00005<max_left_00001_00001_00006))
c Var 'aux4' direct represents '0' with '-8065'
c Var 'aux4' direct represents '1' with '8065'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-8065'
c Encoding variable: aux5 with domain: bool (representing constraint (max_left_00001_00001_00006<max_left_00001_00001_00007))
c Var 'aux5' direct represents '0' with '-8066'
c Var 'aux5' direct represents '1' with '8066'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-8066'
c Encoding variable: aux6 with domain: bool (representing constraint (max_left_00001_00001_00007<max_left_00001_00001_00008))
c Var 'aux6' direct represents '0' with '-8067'
c Var 'aux6' direct represents '1' with '8067'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-8067'
c Encoding variable: aux7 with domain: bool (representing constraint (max_left_00001_00001_00008<max_left_00001_00001_00009))
c Var 'aux7' direct represents '0' with '-8068'
c Var 'aux7' direct represents '1' with '8068'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-8068'
c Encoding variable: aux8 with domain: bool (representing constraint (max_left_00001_00002_00001<max_left_00001_00002_00002))
c Var 'aux8' direct represents '0' with '-8069'
c Var 'aux8' direct represents '1' with '8069'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-8069'
c Encoding variable: aux9 with domain: bool (representing constraint (max_left_00001_00002_00002<max_left_00001_00002_00003))
c Var 'aux9' direct represents '0' with '-8070'
c Var 'aux9' direct represents '1' with '8070'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-8070'
c Encoding variable: aux10 with domain: bool (representing constraint (max_left_00001_00002_00003<max_left_00001_00002_00004))
c Var 'aux10' direct represents '0' with '-8071'
c Var 'aux10' direct represents '1' with '8071'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-8071'
c Encoding variable: aux11 with domain: bool (representing constraint (max_left_00001_00002_00004<max_left_00001_00002_00005))
c Var 'aux11' direct represents '0' with '-8072'
c Var 'aux11' direct represents '1' with '8072'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-8072'
c Encoding variable: aux12 with domain: bool (representing constraint (max_left_00001_00002_00005<max_left_00001_00002_00006))
c Var 'aux12' direct represents '0' with '-8073'
c Var 'aux12' direct represents '1' with '8073'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-8073'
c Encoding variable: aux13 with domain: bool (representing constraint (max_left_00001_00002_00006<max_left_00001_00002_00007))
c Var 'aux13' direct represents '0' with '-8074'
c Var 'aux13' direct represents '1' with '8074'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-8074'
c Encoding variable: aux14 with domain: bool (representing constraint (max_left_00001_00002_00007<max_left_00001_00002_00008))
c Var 'aux14' direct represents '0' with '-8075'
c Var 'aux14' direct represents '1' with '8075'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-8075'
c Encoding variable: aux15 with domain: bool (representing constraint (max_left_00001_00002_00008<max_left_00001_00002_00009))
c Var 'aux15' direct represents '0' with '-8076'
c Var 'aux15' direct represents '1' with '8076'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-8076'
c Encoding variable: aux16 with domain: bool (representing constraint (max_left_00001_00003_00001<max_left_00001_00003_00002))
c Var 'aux16' direct represents '0' with '-8077'
c Var 'aux16' direct represents '1' with '8077'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-8077'
c Encoding variable: aux17 with domain: bool (representing constraint (max_left_00001_00003_00002<max_left_00001_00003_00003))
c Var 'aux17' direct represents '0' with '-8078'
c Var 'aux17' direct represents '1' with '8078'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-8078'
c Encoding variable: aux18 with domain: bool (representing constraint (max_left_00001_00003_00003<max_left_00001_00003_00004))
c Var 'aux18' direct represents '0' with '-8079'
c Var 'aux18' direct represents '1' with '8079'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-8079'
c Encoding variable: aux19 with domain: bool (representing constraint (max_left_00001_00003_00004<max_left_00001_00003_00005))
c Var 'aux19' direct represents '0' with '-8080'
c Var 'aux19' direct represents '1' with '8080'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-8080'
c Encoding variable: aux20 with domain: bool (representing constraint (max_left_00001_00003_00005<max_left_00001_00003_00006))
c Var 'aux20' direct represents '0' with '-8081'
c Var 'aux20' direct represents '1' with '8081'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-8081'
c Encoding variable: aux21 with domain: bool (representing constraint (max_left_00001_00003_00006<max_left_00001_00003_00007))
c Var 'aux21' direct represents '0' with '-8082'
c Var 'aux21' direct represents '1' with '8082'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-8082'
c Encoding variable: aux22 with domain: bool (representing constraint (max_left_00001_00003_00007<max_left_00001_00003_00008))
c Var 'aux22' direct represents '0' with '-8083'
c Var 'aux22' direct represents '1' with '8083'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-8083'
c Encoding variable: aux23 with domain: bool (representing constraint (max_left_00001_00003_00008<max_left_00001_00003_00009))
c Var 'aux23' direct represents '0' with '-8084'
c Var 'aux23' direct represents '1' with '8084'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-8084'
c Encoding variable: aux24 with domain: bool (representing constraint (max_left_00001_00004_00001<max_left_00001_00004_00002))
c Var 'aux24' direct represents '0' with '-8085'
c Var 'aux24' direct represents '1' with '8085'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-8085'
c Encoding variable: aux25 with domain: bool (representing constraint (max_left_00001_00004_00002<max_left_00001_00004_00003))
c Var 'aux25' direct represents '0' with '-8086'
c Var 'aux25' direct represents '1' with '8086'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-8086'
c Encoding variable: aux26 with domain: bool (representing constraint (max_left_00001_00004_00003<max_left_00001_00004_00004))
c Var 'aux26' direct represents '0' with '-8087'
c Var 'aux26' direct represents '1' with '8087'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-8087'
c Encoding variable: aux27 with domain: bool (representing constraint (max_left_00001_00004_00004<max_left_00001_00004_00005))
c Var 'aux27' direct represents '0' with '-8088'
c Var 'aux27' direct represents '1' with '8088'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-8088'
c Encoding variable: aux28 with domain: bool (representing constraint (max_left_00001_00004_00005<max_left_00001_00004_00006))
c Var 'aux28' direct represents '0' with '-8089'
c Var 'aux28' direct represents '1' with '8089'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-8089'
c Encoding variable: aux29 with domain: bool (representing constraint (max_left_00001_00004_00006<max_left_00001_00004_00007))
c Var 'aux29' direct represents '0' with '-8090'
c Var 'aux29' direct represents '1' with '8090'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-8090'
c Encoding variable: aux30 with domain: bool (representing constraint (max_left_00001_00004_00007<max_left_00001_00004_00008))
c Var 'aux30' direct represents '0' with '-8091'
c Var 'aux30' direct represents '1' with '8091'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-8091'
c Encoding variable: aux31 with domain: bool (representing constraint (max_left_00001_00004_00008<max_left_00001_00004_00009))
c Var 'aux31' direct represents '0' with '-8092'
c Var 'aux31' direct represents '1' with '8092'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-8092'
c Encoding variable: aux32 with domain: bool (representing constraint (max_left_00001_00005_00001<max_left_00001_00005_00002))
c Var 'aux32' direct represents '0' with '-8093'
c Var 'aux32' direct represents '1' with '8093'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-8093'
c Encoding variable: aux33 with domain: bool (representing constraint (max_left_00001_00005_00002<max_left_00001_00005_00003))
c Var 'aux33' direct represents '0' with '-8094'
c Var 'aux33' direct represents '1' with '8094'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-8094'
c Encoding variable: aux34 with domain: bool (representing constraint (max_left_00001_00005_00003<max_left_00001_00005_00004))
c Var 'aux34' direct represents '0' with '-8095'
c Var 'aux34' direct represents '1' with '8095'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-8095'
c Encoding variable: aux35 with domain: bool (representing constraint (max_left_00001_00005_00004<max_left_00001_00005_00005))
c Var 'aux35' direct represents '0' with '-8096'
c Var 'aux35' direct represents '1' with '8096'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-8096'
c Encoding variable: aux36 with domain: bool (representing constraint (max_left_00001_00005_00005<max_left_00001_00005_00006))
c Var 'aux36' direct represents '0' with '-8097'
c Var 'aux36' direct represents '1' with '8097'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-8097'
c Encoding variable: aux37 with domain: bool (representing constraint (max_left_00001_00005_00006<max_left_00001_00005_00007))
c Var 'aux37' direct represents '0' with '-8098'
c Var 'aux37' direct represents '1' with '8098'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-8098'
c Encoding variable: aux38 with domain: bool (representing constraint (max_left_00001_00005_00007<max_left_00001_00005_00008))
c Var 'aux38' direct represents '0' with '-8099'
c Var 'aux38' direct represents '1' with '8099'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-8099'
c Encoding variable: aux39 with domain: bool (representing constraint (max_left_00001_00005_00008<max_left_00001_00005_00009))
c Var 'aux39' direct represents '0' with '-8100'
c Var 'aux39' direct represents '1' with '8100'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-8100'
c Encoding variable: aux40 with domain: bool (representing constraint (max_left_00001_00006_00001<max_left_00001_00006_00002))
c Var 'aux40' direct represents '0' with '-8101'
c Var 'aux40' direct represents '1' with '8101'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-8101'
c Encoding variable: aux41 with domain: bool (representing constraint (max_left_00001_00006_00002<max_left_00001_00006_00003))
c Var 'aux41' direct represents '0' with '-8102'
c Var 'aux41' direct represents '1' with '8102'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-8102'
c Encoding variable: aux42 with domain: bool (representing constraint (max_left_00001_00006_00003<max_left_00001_00006_00004))
c Var 'aux42' direct represents '0' with '-8103'
c Var 'aux42' direct represents '1' with '8103'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-8103'
c Encoding variable: aux43 with domain: bool (representing constraint (max_left_00001_00006_00004<max_left_00001_00006_00005))
c Var 'aux43' direct represents '0' with '-8104'
c Var 'aux43' direct represents '1' with '8104'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-8104'
c Encoding variable: aux44 with domain: bool (representing constraint (max_left_00001_00006_00005<max_left_00001_00006_00006))
c Var 'aux44' direct represents '0' with '-8105'
c Var 'aux44' direct represents '1' with '8105'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-8105'
c Encoding variable: aux45 with domain: bool (representing constraint (max_left_00001_00006_00006<max_left_00001_00006_00007))
c Var 'aux45' direct represents '0' with '-8106'
c Var 'aux45' direct represents '1' with '8106'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-8106'
c Encoding variable: aux46 with domain: bool (representing constraint (max_left_00001_00006_00007<max_left_00001_00006_00008))
c Var 'aux46' direct represents '0' with '-8107'
c Var 'aux46' direct represents '1' with '8107'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-8107'
c Encoding variable: aux47 with domain: bool (representing constraint (max_left_00001_00006_00008<max_left_00001_00006_00009))
c Var 'aux47' direct represents '0' with '-8108'
c Var 'aux47' direct represents '1' with '8108'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-8108'
c Encoding variable: aux48 with domain: bool (representing constraint (max_left_00001_00007_00001<max_left_00001_00007_00002))
c Var 'aux48' direct represents '0' with '-8109'
c Var 'aux48' direct represents '1' with '8109'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-8109'
c Encoding variable: aux49 with domain: bool (representing constraint (max_left_00001_00007_00002<max_left_00001_00007_00003))
c Var 'aux49' direct represents '0' with '-8110'
c Var 'aux49' direct represents '1' with '8110'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-8110'
c Encoding variable: aux50 with domain: bool (representing constraint (max_left_00001_00007_00003<max_left_00001_00007_00004))
c Var 'aux50' direct represents '0' with '-8111'
c Var 'aux50' direct represents '1' with '8111'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-8111'
c Encoding variable: aux51 with domain: bool (representing constraint (max_left_00001_00007_00004<max_left_00001_00007_00005))
c Var 'aux51' direct represents '0' with '-8112'
c Var 'aux51' direct represents '1' with '8112'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-8112'
c Encoding variable: aux52 with domain: bool (representing constraint (max_left_00001_00007_00005<max_left_00001_00007_00006))
c Var 'aux52' direct represents '0' with '-8113'
c Var 'aux52' direct represents '1' with '8113'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-8113'
c Encoding variable: aux53 with domain: bool (representing constraint (max_left_00001_00007_00006<max_left_00001_00007_00007))
c Var 'aux53' direct represents '0' with '-8114'
c Var 'aux53' direct represents '1' with '8114'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-8114'
c Encoding variable: aux54 with domain: bool (representing constraint (max_left_00001_00007_00007<max_left_00001_00007_00008))
c Var 'aux54' direct represents '0' with '-8115'
c Var 'aux54' direct represents '1' with '8115'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-8115'
c Encoding variable: aux55 with domain: bool (representing constraint (max_left_00001_00007_00008<max_left_00001_00007_00009))
c Var 'aux55' direct represents '0' with '-8116'
c Var 'aux55' direct represents '1' with '8116'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-8116'
c Encoding variable: aux56 with domain: bool (representing constraint (max_left_00001_00008_00001<max_left_00001_00008_00002))
c Var 'aux56' direct represents '0' with '-8117'
c Var 'aux56' direct represents '1' with '8117'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-8117'
c Encoding variable: aux57 with domain: bool (representing constraint (max_left_00001_00008_00002<max_left_00001_00008_00003))
c Var 'aux57' direct represents '0' with '-8118'
c Var 'aux57' direct represents '1' with '8118'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-8118'
c Encoding variable: aux58 with domain: bool (representing constraint (max_left_00001_00008_00003<max_left_00001_00008_00004))
c Var 'aux58' direct represents '0' with '-8119'
c Var 'aux58' direct represents '1' with '8119'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-8119'
c Encoding variable: aux59 with domain: bool (representing constraint (max_left_00001_00008_00004<max_left_00001_00008_00005))
c Var 'aux59' direct represents '0' with '-8120'
c Var 'aux59' direct represents '1' with '8120'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-8120'
c Encoding variable: aux60 with domain: bool (representing constraint (max_left_00001_00008_00005<max_left_00001_00008_00006))
c Var 'aux60' direct represents '0' with '-8121'
c Var 'aux60' direct represents '1' with '8121'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-8121'
c Encoding variable: aux61 with domain: bool (representing constraint (max_left_00001_00008_00006<max_left_00001_00008_00007))
c Var 'aux61' direct represents '0' with '-8122'
c Var 'aux61' direct represents '1' with '8122'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-8122'
c Encoding variable: aux62 with domain: bool (representing constraint (max_left_00001_00008_00007<max_left_00001_00008_00008))
c Var 'aux62' direct represents '0' with '-8123'
c Var 'aux62' direct represents '1' with '8123'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-8123'
c Encoding variable: aux63 with domain: bool (representing constraint (max_left_00001_00008_00008<max_left_00001_00008_00009))
c Var 'aux63' direct represents '0' with '-8124'
c Var 'aux63' direct represents '1' with '8124'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-8124'
c Encoding variable: aux64 with domain: bool (representing constraint (max_left_00001_00009_00001<max_left_00001_00009_00002))
c Var 'aux64' direct represents '0' with '-8125'
c Var 'aux64' direct represents '1' with '8125'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-8125'
c Encoding variable: aux65 with domain: bool (representing constraint (max_left_00001_00009_00002<max_left_00001_00009_00003))
c Var 'aux65' direct represents '0' with '-8126'
c Var 'aux65' direct represents '1' with '8126'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-8126'
c Encoding variable: aux66 with domain: bool (representing constraint (max_left_00001_00009_00003<max_left_00001_00009_00004))
c Var 'aux66' direct represents '0' with '-8127'
c Var 'aux66' direct represents '1' with '8127'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-8127'
c Encoding variable: aux67 with domain: bool (representing constraint (max_left_00001_00009_00004<max_left_00001_00009_00005))
c Var 'aux67' direct represents '0' with '-8128'
c Var 'aux67' direct represents '1' with '8128'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-8128'
c Encoding variable: aux68 with domain: bool (representing constraint (max_left_00001_00009_00005<max_left_00001_00009_00006))
c Var 'aux68' direct represents '0' with '-8129'
c Var 'aux68' direct represents '1' with '8129'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-8129'
c Encoding variable: aux69 with domain: bool (representing constraint (max_left_00001_00009_00006<max_left_00001_00009_00007))
c Var 'aux69' direct represents '0' with '-8130'
c Var 'aux69' direct represents '1' with '8130'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-8130'
c Encoding variable: aux70 with domain: bool (representing constraint (max_left_00001_00009_00007<max_left_00001_00009_00008))
c Var 'aux70' direct represents '0' with '-8131'
c Var 'aux70' direct represents '1' with '8131'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-8131'
c Encoding variable: aux71 with domain: bool (representing constraint (max_left_00001_00009_00008<max_left_00001_00009_00009))
c Var 'aux71' direct represents '0' with '-8132'
c Var 'aux71' direct represents '1' with '8132'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-8132'
c Encoding variable: aux72 with domain: bool (representing constraint (max_left_00002_00001_00001<max_left_00002_00001_00002))
c Var 'aux72' direct represents '0' with '-8133'
c Var 'aux72' direct represents '1' with '8133'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-8133'
c Encoding variable: aux73 with domain: bool (representing constraint (max_left_00002_00001_00002<max_left_00002_00001_00003))
c Var 'aux73' direct represents '0' with '-8134'
c Var 'aux73' direct represents '1' with '8134'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-8134'
c Encoding variable: aux74 with domain: bool (representing constraint (max_left_00002_00001_00003<max_left_00002_00001_00004))
c Var 'aux74' direct represents '0' with '-8135'
c Var 'aux74' direct represents '1' with '8135'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-8135'
c Encoding variable: aux75 with domain: bool (representing constraint (max_left_00002_00001_00004<max_left_00002_00001_00005))
c Var 'aux75' direct represents '0' with '-8136'
c Var 'aux75' direct represents '1' with '8136'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-8136'
c Encoding variable: aux76 with domain: bool (representing constraint (max_left_00002_00001_00005<max_left_00002_00001_00006))
c Var 'aux76' direct represents '0' with '-8137'
c Var 'aux76' direct represents '1' with '8137'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-8137'
c Encoding variable: aux77 with domain: bool (representing constraint (max_left_00002_00001_00006<max_left_00002_00001_00007))
c Var 'aux77' direct represents '0' with '-8138'
c Var 'aux77' direct represents '1' with '8138'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-8138'
c Encoding variable: aux78 with domain: bool (representing constraint (max_left_00002_00001_00007<max_left_00002_00001_00008))
c Var 'aux78' direct represents '0' with '-8139'
c Var 'aux78' direct represents '1' with '8139'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-8139'
c Encoding variable: aux79 with domain: bool (representing constraint (max_left_00002_00001_00008<max_left_00002_00001_00009))
c Var 'aux79' direct represents '0' with '-8140'
c Var 'aux79' direct represents '1' with '8140'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-8140'
c Encoding variable: aux80 with domain: bool (representing constraint (max_left_00002_00002_00001<max_left_00002_00002_00002))
c Var 'aux80' direct represents '0' with '-8141'
c Var 'aux80' direct represents '1' with '8141'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-8141'
c Encoding variable: aux81 with domain: bool (representing constraint (max_left_00002_00002_00002<max_left_00002_00002_00003))
c Var 'aux81' direct represents '0' with '-8142'
c Var 'aux81' direct represents '1' with '8142'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-8142'
c Encoding variable: aux82 with domain: bool (representing constraint (max_left_00002_00002_00003<max_left_00002_00002_00004))
c Var 'aux82' direct represents '0' with '-8143'
c Var 'aux82' direct represents '1' with '8143'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-8143'
c Encoding variable: aux83 with domain: bool (representing constraint (max_left_00002_00002_00004<max_left_00002_00002_00005))
c Var 'aux83' direct represents '0' with '-8144'
c Var 'aux83' direct represents '1' with '8144'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-8144'
c Encoding variable: aux84 with domain: bool (representing constraint (max_left_00002_00002_00005<max_left_00002_00002_00006))
c Var 'aux84' direct represents '0' with '-8145'
c Var 'aux84' direct represents '1' with '8145'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-8145'
c Encoding variable: aux85 with domain: bool (representing constraint (max_left_00002_00002_00006<max_left_00002_00002_00007))
c Var 'aux85' direct represents '0' with '-8146'
c Var 'aux85' direct represents '1' with '8146'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-8146'
c Encoding variable: aux86 with domain: bool (representing constraint (max_left_00002_00002_00007<max_left_00002_00002_00008))
c Var 'aux86' direct represents '0' with '-8147'
c Var 'aux86' direct represents '1' with '8147'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-8147'
c Encoding variable: aux87 with domain: bool (representing constraint (max_left_00002_00002_00008<max_left_00002_00002_00009))
c Var 'aux87' direct represents '0' with '-8148'
c Var 'aux87' direct represents '1' with '8148'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-8148'
c Encoding variable: aux88 with domain: bool (representing constraint (max_left_00002_00003_00001<max_left_00002_00003_00002))
c Var 'aux88' direct represents '0' with '-8149'
c Var 'aux88' direct represents '1' with '8149'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-8149'
c Encoding variable: aux89 with domain: bool (representing constraint (max_left_00002_00003_00002<max_left_00002_00003_00003))
c Var 'aux89' direct represents '0' with '-8150'
c Var 'aux89' direct represents '1' with '8150'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-8150'
c Encoding variable: aux90 with domain: bool (representing constraint (max_left_00002_00003_00003<max_left_00002_00003_00004))
c Var 'aux90' direct represents '0' with '-8151'
c Var 'aux90' direct represents '1' with '8151'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-8151'
c Encoding variable: aux91 with domain: bool (representing constraint (max_left_00002_00003_00004<max_left_00002_00003_00005))
c Var 'aux91' direct represents '0' with '-8152'
c Var 'aux91' direct represents '1' with '8152'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-8152'
c Encoding variable: aux92 with domain: bool (representing constraint (max_left_00002_00003_00005<max_left_00002_00003_00006))
c Var 'aux92' direct represents '0' with '-8153'
c Var 'aux92' direct represents '1' with '8153'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-8153'
c Encoding variable: aux93 with domain: bool (representing constraint (max_left_00002_00003_00006<max_left_00002_00003_00007))
c Var 'aux93' direct represents '0' with '-8154'
c Var 'aux93' direct represents '1' with '8154'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-8154'
c Encoding variable: aux94 with domain: bool (representing constraint (max_left_00002_00003_00007<max_left_00002_00003_00008))
c Var 'aux94' direct represents '0' with '-8155'
c Var 'aux94' direct represents '1' with '8155'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-8155'
c Encoding variable: aux95 with domain: bool (representing constraint (max_left_00002_00003_00008<max_left_00002_00003_00009))
c Var 'aux95' direct represents '0' with '-8156'
c Var 'aux95' direct represents '1' with '8156'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-8156'
c Encoding variable: aux96 with domain: bool (representing constraint (max_left_00002_00004_00001<max_left_00002_00004_00002))
c Var 'aux96' direct represents '0' with '-8157'
c Var 'aux96' direct represents '1' with '8157'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-8157'
c Encoding variable: aux97 with domain: bool (representing constraint (max_left_00002_00004_00002<max_left_00002_00004_00003))
c Var 'aux97' direct represents '0' with '-8158'
c Var 'aux97' direct represents '1' with '8158'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-8158'
c Encoding variable: aux98 with domain: bool (representing constraint (max_left_00002_00004_00003<max_left_00002_00004_00004))
c Var 'aux98' direct represents '0' with '-8159'
c Var 'aux98' direct represents '1' with '8159'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-8159'
c Encoding variable: aux99 with domain: bool (representing constraint (max_left_00002_00004_00004<max_left_00002_00004_00005))
c Var 'aux99' direct represents '0' with '-8160'
c Var 'aux99' direct represents '1' with '8160'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-8160'
c Encoding variable: aux100 with domain: bool (representing constraint (max_left_00002_00004_00005<max_left_00002_00004_00006))
c Var 'aux100' direct represents '0' with '-8161'
c Var 'aux100' direct represents '1' with '8161'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-8161'
c Encoding variable: aux101 with domain: bool (representing constraint (max_left_00002_00004_00006<max_left_00002_00004_00007))
c Var 'aux101' direct represents '0' with '-8162'
c Var 'aux101' direct represents '1' with '8162'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-8162'
c Encoding variable: aux102 with domain: bool (representing constraint (max_left_00002_00004_00007<max_left_00002_00004_00008))
c Var 'aux102' direct represents '0' with '-8163'
c Var 'aux102' direct represents '1' with '8163'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-8163'
c Encoding variable: aux103 with domain: bool (representing constraint (max_left_00002_00004_00008<max_left_00002_00004_00009))
c Var 'aux103' direct represents '0' with '-8164'
c Var 'aux103' direct represents '1' with '8164'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-8164'
c Encoding variable: aux104 with domain: bool (representing constraint (max_left_00002_00005_00001<max_left_00002_00005_00002))
c Var 'aux104' direct represents '0' with '-8165'
c Var 'aux104' direct represents '1' with '8165'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-8165'
c Encoding variable: aux105 with domain: bool (representing constraint (max_left_00002_00005_00002<max_left_00002_00005_00003))
c Var 'aux105' direct represents '0' with '-8166'
c Var 'aux105' direct represents '1' with '8166'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-8166'
c Encoding variable: aux106 with domain: bool (representing constraint (max_left_00002_00005_00003<max_left_00002_00005_00004))
c Var 'aux106' direct represents '0' with '-8167'
c Var 'aux106' direct represents '1' with '8167'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-8167'
c Encoding variable: aux107 with domain: bool (representing constraint (max_left_00002_00005_00004<max_left_00002_00005_00005))
c Var 'aux107' direct represents '0' with '-8168'
c Var 'aux107' direct represents '1' with '8168'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-8168'
c Encoding variable: aux108 with domain: bool (representing constraint (max_left_00002_00005_00005<max_left_00002_00005_00006))
c Var 'aux108' direct represents '0' with '-8169'
c Var 'aux108' direct represents '1' with '8169'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-8169'
c Encoding variable: aux109 with domain: bool (representing constraint (max_left_00002_00005_00006<max_left_00002_00005_00007))
c Var 'aux109' direct represents '0' with '-8170'
c Var 'aux109' direct represents '1' with '8170'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-8170'
c Encoding variable: aux110 with domain: bool (representing constraint (max_left_00002_00005_00007<max_left_00002_00005_00008))
c Var 'aux110' direct represents '0' with '-8171'
c Var 'aux110' direct represents '1' with '8171'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-8171'
c Encoding variable: aux111 with domain: bool (representing constraint (max_left_00002_00005_00008<max_left_00002_00005_00009))
c Var 'aux111' direct represents '0' with '-8172'
c Var 'aux111' direct represents '1' with '8172'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-8172'
c Encoding variable: aux112 with domain: bool (representing constraint (max_left_00002_00006_00001<max_left_00002_00006_00002))
c Var 'aux112' direct represents '0' with '-8173'
c Var 'aux112' direct represents '1' with '8173'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-8173'
c Encoding variable: aux113 with domain: bool (representing constraint (max_left_00002_00006_00002<max_left_00002_00006_00003))
c Var 'aux113' direct represents '0' with '-8174'
c Var 'aux113' direct represents '1' with '8174'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-8174'
c Encoding variable: aux114 with domain: bool (representing constraint (max_left_00002_00006_00003<max_left_00002_00006_00004))
c Var 'aux114' direct represents '0' with '-8175'
c Var 'aux114' direct represents '1' with '8175'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-8175'
c Encoding variable: aux115 with domain: bool (representing constraint (max_left_00002_00006_00004<max_left_00002_00006_00005))
c Var 'aux115' direct represents '0' with '-8176'
c Var 'aux115' direct represents '1' with '8176'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-8176'
c Encoding variable: aux116 with domain: bool (representing constraint (max_left_00002_00006_00005<max_left_00002_00006_00006))
c Var 'aux116' direct represents '0' with '-8177'
c Var 'aux116' direct represents '1' with '8177'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-8177'
c Encoding variable: aux117 with domain: bool (representing constraint (max_left_00002_00006_00006<max_left_00002_00006_00007))
c Var 'aux117' direct represents '0' with '-8178'
c Var 'aux117' direct represents '1' with '8178'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-8178'
c Encoding variable: aux118 with domain: bool (representing constraint (max_left_00002_00006_00007<max_left_00002_00006_00008))
c Var 'aux118' direct represents '0' with '-8179'
c Var 'aux118' direct represents '1' with '8179'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-8179'
c Encoding variable: aux119 with domain: bool (representing constraint (max_left_00002_00006_00008<max_left_00002_00006_00009))
c Var 'aux119' direct represents '0' with '-8180'
c Var 'aux119' direct represents '1' with '8180'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-8180'
c Encoding variable: aux120 with domain: bool (representing constraint (max_left_00002_00007_00001<max_left_00002_00007_00002))
c Var 'aux120' direct represents '0' with '-8181'
c Var 'aux120' direct represents '1' with '8181'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-8181'
c Encoding variable: aux121 with domain: bool (representing constraint (max_left_00002_00007_00002<max_left_00002_00007_00003))
c Var 'aux121' direct represents '0' with '-8182'
c Var 'aux121' direct represents '1' with '8182'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-8182'
c Encoding variable: aux122 with domain: bool (representing constraint (max_left_00002_00007_00003<max_left_00002_00007_00004))
c Var 'aux122' direct represents '0' with '-8183'
c Var 'aux122' direct represents '1' with '8183'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-8183'
c Encoding variable: aux123 with domain: bool (representing constraint (max_left_00002_00007_00004<max_left_00002_00007_00005))
c Var 'aux123' direct represents '0' with '-8184'
c Var 'aux123' direct represents '1' with '8184'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-8184'
c Encoding variable: aux124 with domain: bool (representing constraint (max_left_00002_00007_00005<max_left_00002_00007_00006))
c Var 'aux124' direct represents '0' with '-8185'
c Var 'aux124' direct represents '1' with '8185'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-8185'
c Encoding variable: aux125 with domain: bool (representing constraint (max_left_00002_00007_00006<max_left_00002_00007_00007))
c Var 'aux125' direct represents '0' with '-8186'
c Var 'aux125' direct represents '1' with '8186'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-8186'
c Encoding variable: aux126 with domain: bool (representing constraint (max_left_00002_00007_00007<max_left_00002_00007_00008))
c Var 'aux126' direct represents '0' with '-8187'
c Var 'aux126' direct represents '1' with '8187'
c Var 'aux126' order represents '1' with '1'
c Var 'aux126' order represents '0' with '-8187'
c Encoding variable: aux127 with domain: bool (representing constraint (max_left_00002_00007_00008<max_left_00002_00007_00009))
c Var 'aux127' direct represents '0' with '-8188'
c Var 'aux127' direct represents '1' with '8188'
c Var 'aux127' order represents '1' with '1'
c Var 'aux127' order represents '0' with '-8188'
c Encoding variable: aux128 with domain: bool (representing constraint (max_left_00002_00008_00001<max_left_00002_00008_00002))
c Var 'aux128' direct represents '0' with '-8189'
c Var 'aux128' direct represents '1' with '8189'
c Var 'aux128' order represents '1' with '1'
c Var 'aux128' order represents '0' with '-8189'
c Encoding variable: aux129 with domain: bool (representing constraint (max_left_00002_00008_00002<max_left_00002_00008_00003))
c Var 'aux129' direct represents '0' with '-8190'
c Var 'aux129' direct represents '1' with '8190'
c Var 'aux129' order represents '1' with '1'
c Var 'aux129' order represents '0' with '-8190'
c Encoding variable: aux130 with domain: bool (representing constraint (max_left_00002_00008_00003<max_left_00002_00008_00004))
c Var 'aux130' direct represents '0' with '-8191'
c Var 'aux130' direct represents '1' with '8191'
c Var 'aux130' order represents '1' with '1'
c Var 'aux130' order represents '0' with '-8191'
c Encoding variable: aux131 with domain: bool (representing constraint (max_left_00002_00008_00004<max_left_00002_00008_00005))
c Var 'aux131' direct represents '0' with '-8192'
c Var 'aux131' direct represents '1' with '8192'
c Var 'aux131' order represents '1' with '1'
c Var 'aux131' order represents '0' with '-8192'
c Encoding variable: aux132 with domain: bool (representing constraint (max_left_00002_00008_00005<max_left_00002_00008_00006))
c Var 'aux132' direct represents '0' with '-8193'
c Var 'aux132' direct represents '1' with '8193'
c Var 'aux132' order represents '1' with '1'
c Var 'aux132' order represents '0' with '-8193'
c Encoding variable: aux133 with domain: bool (representing constraint (max_left_00002_00008_00006<max_left_00002_00008_00007))
c Var 'aux133' direct represents '0' with '-8194'
c Var 'aux133' direct represents '1' with '8194'
c Var 'aux133' order represents '1' with '1'
c Var 'aux133' order represents '0' with '-8194'
c Encoding variable: aux134 with domain: bool (representing constraint (max_left_00002_00008_00007<max_left_00002_00008_00008))
c Var 'aux134' direct represents '0' with '-8195'
c Var 'aux134' direct represents '1' with '8195'
c Var 'aux134' order represents '1' with '1'
c Var 'aux134' order represents '0' with '-8195'
c Encoding variable: aux135 with domain: bool (representing constraint (max_left_00002_00008_00008<max_left_00002_00008_00009))
c Var 'aux135' direct represents '0' with '-8196'
c Var 'aux135' direct represents '1' with '8196'
c Var 'aux135' order represents '1' with '1'
c Var 'aux135' order represents '0' with '-8196'
c Encoding variable: aux136 with domain: bool (representing constraint (max_left_00002_00009_00001<max_left_00002_00009_00002))
c Var 'aux136' direct represents '0' with '-8197'
c Var 'aux136' direct represents '1' with '8197'
c Var 'aux136' order represents '1' with '1'
c Var 'aux136' order represents '0' with '-8197'
c Encoding variable: aux137 with domain: bool (representing constraint (max_left_00002_00009_00002<max_left_00002_00009_00003))
c Var 'aux137' direct represents '0' with '-8198'
c Var 'aux137' direct represents '1' with '8198'
c Var 'aux137' order represents '1' with '1'
c Var 'aux137' order represents '0' with '-8198'
c Encoding variable: aux138 with domain: bool (representing constraint (max_left_00002_00009_00003<max_left_00002_00009_00004))
c Var 'aux138' direct represents '0' with '-8199'
c Var 'aux138' direct represents '1' with '8199'
c Var 'aux138' order represents '1' with '1'
c Var 'aux138' order represents '0' with '-8199'
c Encoding variable: aux139 with domain: bool (representing constraint (max_left_00002_00009_00004<max_left_00002_00009_00005))
c Var 'aux139' direct represents '0' with '-8200'
c Var 'aux139' direct represents '1' with '8200'
c Var 'aux139' order represents '1' with '1'
c Var 'aux139' order represents '0' with '-8200'
c Encoding variable: aux140 with domain: bool (representing constraint (max_left_00002_00009_00005<max_left_00002_00009_00006))
c Var 'aux140' direct represents '0' with '-8201'
c Var 'aux140' direct represents '1' with '8201'
c Var 'aux140' order represents '1' with '1'
c Var 'aux140' order represents '0' with '-8201'
c Encoding variable: aux141 with domain: bool (representing constraint (max_left_00002_00009_00006<max_left_00002_00009_00007))
c Var 'aux141' direct represents '0' with '-8202'
c Var 'aux141' direct represents '1' with '8202'
c Var 'aux141' order represents '1' with '1'
c Var 'aux141' order represents '0' with '-8202'
c Encoding variable: aux142 with domain: bool (representing constraint (max_left_00002_00009_00007<max_left_00002_00009_00008))
c Var 'aux142' direct represents '0' with '-8203'
c Var 'aux142' direct represents '1' with '8203'
c Var 'aux142' order represents '1' with '1'
c Var 'aux142' order represents '0' with '-8203'
c Encoding variable: aux143 with domain: bool (representing constraint (max_left_00002_00009_00008<max_left_00002_00009_00009))
c Var 'aux143' direct represents '0' with '-8204'
c Var 'aux143' direct represents '1' with '8204'
c Var 'aux143' order represents '1' with '1'
c Var 'aux143' order represents '0' with '-8204'
c Encoding variable: aux144 with domain: bool (representing constraint (max_left_00003_00001_00001<max_left_00003_00001_00002))
c Var 'aux144' direct represents '0' with '-8205'
c Var 'aux144' direct represents '1' with '8205'
c Var 'aux144' order represents '1' with '1'
c Var 'aux144' order represents '0' with '-8205'
c Encoding variable: aux145 with domain: bool (representing constraint (max_left_00003_00001_00002<max_left_00003_00001_00003))
c Var 'aux145' direct represents '0' with '-8206'
c Var 'aux145' direct represents '1' with '8206'
c Var 'aux145' order represents '1' with '1'
c Var 'aux145' order represents '0' with '-8206'
c Encoding variable: aux146 with domain: bool (representing constraint (max_left_00003_00001_00003<max_left_00003_00001_00004))
c Var 'aux146' direct represents '0' with '-8207'
c Var 'aux146' direct represents '1' with '8207'
c Var 'aux146' order represents '1' with '1'
c Var 'aux146' order represents '0' with '-8207'
c Encoding variable: aux147 with domain: bool (representing constraint (max_left_00003_00001_00004<max_left_00003_00001_00005))
c Var 'aux147' direct represents '0' with '-8208'
c Var 'aux147' direct represents '1' with '8208'
c Var 'aux147' order represents '1' with '1'
c Var 'aux147' order represents '0' with '-8208'
c Encoding variable: aux148 with domain: bool (representing constraint (max_left_00003_00001_00005<max_left_00003_00001_00006))
c Var 'aux148' direct represents '0' with '-8209'
c Var 'aux148' direct represents '1' with '8209'
c Var 'aux148' order represents '1' with '1'
c Var 'aux148' order represents '0' with '-8209'
c Encoding variable: aux149 with domain: bool (representing constraint (max_left_00003_00001_00006<max_left_00003_00001_00007))
c Var 'aux149' direct represents '0' with '-8210'
c Var 'aux149' direct represents '1' with '8210'
c Var 'aux149' order represents '1' with '1'
c Var 'aux149' order represents '0' with '-8210'
c Encoding variable: aux150 with domain: bool (representing constraint (max_left_00003_00001_00007<max_left_00003_00001_00008))
c Var 'aux150' direct represents '0' with '-8211'
c Var 'aux150' direct represents '1' with '8211'
c Var 'aux150' order represents '1' with '1'
c Var 'aux150' order represents '0' with '-8211'
c Encoding variable: aux151 with domain: bool (representing constraint (max_left_00003_00001_00008<max_left_00003_00001_00009))
c Var 'aux151' direct represents '0' with '-8212'
c Var 'aux151' direct represents '1' with '8212'
c Var 'aux151' order represents '1' with '1'
c Var 'aux151' order represents '0' with '-8212'
c Encoding variable: aux152 with domain: bool (representing constraint (max_left_00003_00002_00001<max_left_00003_00002_00002))
c Var 'aux152' direct represents '0' with '-8213'
c Var 'aux152' direct represents '1' with '8213'
c Var 'aux152' order represents '1' with '1'
c Var 'aux152' order represents '0' with '-8213'
c Encoding variable: aux153 with domain: bool (representing constraint (max_left_00003_00002_00002<max_left_00003_00002_00003))
c Var 'aux153' direct represents '0' with '-8214'
c Var 'aux153' direct represents '1' with '8214'
c Var 'aux153' order represents '1' with '1'
c Var 'aux153' order represents '0' with '-8214'
c Encoding variable: aux154 with domain: bool (representing constraint (max_left_00003_00002_00003<max_left_00003_00002_00004))
c Var 'aux154' direct represents '0' with '-8215'
c Var 'aux154' direct represents '1' with '8215'
c Var 'aux154' order represents '1' with '1'
c Var 'aux154' order represents '0' with '-8215'
c Encoding variable: aux155 with domain: bool (representing constraint (max_left_00003_00002_00004<max_left_00003_00002_00005))
c Var 'aux155' direct represents '0' with '-8216'
c Var 'aux155' direct represents '1' with '8216'
c Var 'aux155' order represents '1' with '1'
c Var 'aux155' order represents '0' with '-8216'
c Encoding variable: aux156 with domain: bool (representing constraint (max_left_00003_00002_00005<max_left_00003_00002_00006))
c Var 'aux156' direct represents '0' with '-8217'
c Var 'aux156' direct represents '1' with '8217'
c Var 'aux156' order represents '1' with '1'
c Var 'aux156' order represents '0' with '-8217'
c Encoding variable: aux157 with domain: bool (representing constraint (max_left_00003_00002_00006<max_left_00003_00002_00007))
c Var 'aux157' direct represents '0' with '-8218'
c Var 'aux157' direct represents '1' with '8218'
c Var 'aux157' order represents '1' with '1'
c Var 'aux157' order represents '0' with '-8218'
c Encoding variable: aux158 with domain: bool (representing constraint (max_left_00003_00002_00007<max_left_00003_00002_00008))
c Var 'aux158' direct represents '0' with '-8219'
c Var 'aux158' direct represents '1' with '8219'
c Var 'aux158' order represents '1' with '1'
c Var 'aux158' order represents '0' with '-8219'
c Encoding variable: aux159 with domain: bool (representing constraint (max_left_00003_00002_00008<max_left_00003_00002_00009))
c Var 'aux159' direct represents '0' with '-8220'
c Var 'aux159' direct represents '1' with '8220'
c Var 'aux159' order represents '1' with '1'
c Var 'aux159' order represents '0' with '-8220'
c Encoding variable: aux160 with domain: bool (representing constraint (max_left_00003_00003_00001<max_left_00003_00003_00002))
c Var 'aux160' direct represents '0' with '-8221'
c Var 'aux160' direct represents '1' with '8221'
c Var 'aux160' order represents '1' with '1'
c Var 'aux160' order represents '0' with '-8221'
c Encoding variable: aux161 with domain: bool (representing constraint (max_left_00003_00003_00002<max_left_00003_00003_00003))
c Var 'aux161' direct represents '0' with '-8222'
c Var 'aux161' direct represents '1' with '8222'
c Var 'aux161' order represents '1' with '1'
c Var 'aux161' order represents '0' with '-8222'
c Encoding variable: aux162 with domain: bool (representing constraint (max_left_00003_00003_00003<max_left_00003_00003_00004))
c Var 'aux162' direct represents '0' with '-8223'
c Var 'aux162' direct represents '1' with '8223'
c Var 'aux162' order represents '1' with '1'
c Var 'aux162' order represents '0' with '-8223'
c Encoding variable: aux163 with domain: bool (representing constraint (max_left_00003_00003_00004<max_left_00003_00003_00005))
c Var 'aux163' direct represents '0' with '-8224'
c Var 'aux163' direct represents '1' with '8224'
c Var 'aux163' order represents '1' with '1'
c Var 'aux163' order represents '0' with '-8224'
c Encoding variable: aux164 with domain: bool (representing constraint (max_left_00003_00003_00005<max_left_00003_00003_00006))
c Var 'aux164' direct represents '0' with '-8225'
c Var 'aux164' direct represents '1' with '8225'
c Var 'aux164' order represents '1' with '1'
c Var 'aux164' order represents '0' with '-8225'
c Encoding variable: aux165 with domain: bool (representing constraint (max_left_00003_00003_00006<max_left_00003_00003_00007))
c Var 'aux165' direct represents '0' with '-8226'
c Var 'aux165' direct represents '1' with '8226'
c Var 'aux165' order represents '1' with '1'
c Var 'aux165' order represents '0' with '-8226'
c Encoding variable: aux166 with domain: bool (representing constraint (max_left_00003_00003_00007<max_left_00003_00003_00008))
c Var 'aux166' direct represents '0' with '-8227'
c Var 'aux166' direct represents '1' with '8227'
c Var 'aux166' order represents '1' with '1'
c Var 'aux166' order represents '0' with '-8227'
c Encoding variable: aux167 with domain: bool (representing constraint (max_left_00003_00003_00008<max_left_00003_00003_00009))
c Var 'aux167' direct represents '0' with '-8228'
c Var 'aux167' direct represents '1' with '8228'
c Var 'aux167' order represents '1' with '1'
c Var 'aux167' order represents '0' with '-8228'
c Encoding variable: aux168 with domain: bool (representing constraint (max_left_00003_00004_00001<max_left_00003_00004_00002))
c Var 'aux168' direct represents '0' with '-8229'
c Var 'aux168' direct represents '1' with '8229'
c Var 'aux168' order represents '1' with '1'
c Var 'aux168' order represents '0' with '-8229'
c Encoding variable: aux169 with domain: bool (representing constraint (max_left_00003_00004_00002<max_left_00003_00004_00003))
c Var 'aux169' direct represents '0' with '-8230'
c Var 'aux169' direct represents '1' with '8230'
c Var 'aux169' order represents '1' with '1'
c Var 'aux169' order represents '0' with '-8230'
c Encoding variable: aux170 with domain: bool (representing constraint (max_left_00003_00004_00003<max_left_00003_00004_00004))
c Var 'aux170' direct represents '0' with '-8231'
c Var 'aux170' direct represents '1' with '8231'
c Var 'aux170' order represents '1' with '1'
c Var 'aux170' order represents '0' with '-8231'
c Encoding variable: aux171 with domain: bool (representing constraint (max_left_00003_00004_00004<max_left_00003_00004_00005))
c Var 'aux171' direct represents '0' with '-8232'
c Var 'aux171' direct represents '1' with '8232'
c Var 'aux171' order represents '1' with '1'
c Var 'aux171' order represents '0' with '-8232'
c Encoding variable: aux172 with domain: bool (representing constraint (max_left_00003_00004_00005<max_left_00003_00004_00006))
c Var 'aux172' direct represents '0' with '-8233'
c Var 'aux172' direct represents '1' with '8233'
c Var 'aux172' order represents '1' with '1'
c Var 'aux172' order represents '0' with '-8233'
c Encoding variable: aux173 with domain: bool (representing constraint (max_left_00003_00004_00006<max_left_00003_00004_00007))
c Var 'aux173' direct represents '0' with '-8234'
c Var 'aux173' direct represents '1' with '8234'
c Var 'aux173' order represents '1' with '1'
c Var 'aux173' order represents '0' with '-8234'
c Encoding variable: aux174 with domain: bool (representing constraint (max_left_00003_00004_00007<max_left_00003_00004_00008))
c Var 'aux174' direct represents '0' with '-8235'
c Var 'aux174' direct represents '1' with '8235'
c Var 'aux174' order represents '1' with '1'
c Var 'aux174' order represents '0' with '-8235'
c Encoding variable: aux175 with domain: bool (representing constraint (max_left_00003_00004_00008<max_left_00003_00004_00009))
c Var 'aux175' direct represents '0' with '-8236'
c Var 'aux175' direct represents '1' with '8236'
c Var 'aux175' order represents '1' with '1'
c Var 'aux175' order represents '0' with '-8236'
c Encoding variable: aux176 with domain: bool (representing constraint (max_left_00003_00005_00001<max_left_00003_00005_00002))
c Var 'aux176' direct represents '0' with '-8237'
c Var 'aux176' direct represents '1' with '8237'
c Var 'aux176' order represents '1' with '1'
c Var 'aux176' order represents '0' with '-8237'
c Encoding variable: aux177 with domain: bool (representing constraint (max_left_00003_00005_00002<max_left_00003_00005_00003))
c Var 'aux177' direct represents '0' with '-8238'
c Var 'aux177' direct represents '1' with '8238'
c Var 'aux177' order represents '1' with '1'
c Var 'aux177' order represents '0' with '-8238'
c Encoding variable: aux178 with domain: bool (representing constraint (max_left_00003_00005_00003<max_left_00003_00005_00004))
c Var 'aux178' direct represents '0' with '-8239'
c Var 'aux178' direct represents '1' with '8239'
c Var 'aux178' order represents '1' with '1'
c Var 'aux178' order represents '0' with '-8239'
c Encoding variable: aux179 with domain: bool (representing constraint (max_left_00003_00005_00004<max_left_00003_00005_00005))
c Var 'aux179' direct represents '0' with '-8240'
c Var 'aux179' direct represents '1' with '8240'
c Var 'aux179' order represents '1' with '1'
c Var 'aux179' order represents '0' with '-8240'
c Encoding variable: aux180 with domain: bool (representing constraint (max_left_00003_00005_00005<max_left_00003_00005_00006))
c Var 'aux180' direct represents '0' with '-8241'
c Var 'aux180' direct represents '1' with '8241'
c Var 'aux180' order represents '1' with '1'
c Var 'aux180' order represents '0' with '-8241'
c Encoding variable: aux181 with domain: bool (representing constraint (max_left_00003_00005_00006<max_left_00003_00005_00007))
c Var 'aux181' direct represents '0' with '-8242'
c Var 'aux181' direct represents '1' with '8242'
c Var 'aux181' order represents '1' with '1'
c Var 'aux181' order represents '0' with '-8242'
c Encoding variable: aux182 with domain: bool (representing constraint (max_left_00003_00005_00007<max_left_00003_00005_00008))
c Var 'aux182' direct represents '0' with '-8243'
c Var 'aux182' direct represents '1' with '8243'
c Var 'aux182' order represents '1' with '1'
c Var 'aux182' order represents '0' with '-8243'
c Encoding variable: aux183 with domain: bool (representing constraint (max_left_00003_00005_00008<max_left_00003_00005_00009))
c Var 'aux183' direct represents '0' with '-8244'
c Var 'aux183' direct represents '1' with '8244'
c Var 'aux183' order represents '1' with '1'
c Var 'aux183' order represents '0' with '-8244'
c Encoding variable: aux184 with domain: bool (representing constraint (max_left_00003_00006_00001<max_left_00003_00006_00002))
c Var 'aux184' direct represents '0' with '-8245'
c Var 'aux184' direct represents '1' with '8245'
c Var 'aux184' order represents '1' with '1'
c Var 'aux184' order represents '0' with '-8245'
c Encoding variable: aux185 with domain: bool (representing constraint (max_left_00003_00006_00002<max_left_00003_00006_00003))
c Var 'aux185' direct represents '0' with '-8246'
c Var 'aux185' direct represents '1' with '8246'
c Var 'aux185' order represents '1' with '1'
c Var 'aux185' order represents '0' with '-8246'
c Encoding variable: aux186 with domain: bool (representing constraint (max_left_00003_00006_00003<max_left_00003_00006_00004))
c Var 'aux186' direct represents '0' with '-8247'
c Var 'aux186' direct represents '1' with '8247'
c Var 'aux186' order represents '1' with '1'
c Var 'aux186' order represents '0' with '-8247'
c Encoding variable: aux187 with domain: bool (representing constraint (max_left_00003_00006_00004<max_left_00003_00006_00005))
c Var 'aux187' direct represents '0' with '-8248'
c Var 'aux187' direct represents '1' with '8248'
c Var 'aux187' order represents '1' with '1'
c Var 'aux187' order represents '0' with '-8248'
c Encoding variable: aux188 with domain: bool (representing constraint (max_left_00003_00006_00005<max_left_00003_00006_00006))
c Var 'aux188' direct represents '0' with '-8249'
c Var 'aux188' direct represents '1' with '8249'
c Var 'aux188' order represents '1' with '1'
c Var 'aux188' order represents '0' with '-8249'
c Encoding variable: aux189 with domain: bool (representing constraint (max_left_00003_00006_00006<max_left_00003_00006_00007))
c Var 'aux189' direct represents '0' with '-8250'
c Var 'aux189' direct represents '1' with '8250'
c Var 'aux189' order represents '1' with '1'
c Var 'aux189' order represents '0' with '-8250'
c Encoding variable: aux190 with domain: bool (representing constraint (max_left_00003_00006_00007<max_left_00003_00006_00008))
c Var 'aux190' direct represents '0' with '-8251'
c Var 'aux190' direct represents '1' with '8251'
c Var 'aux190' order represents '1' with '1'
c Var 'aux190' order represents '0' with '-8251'
c Encoding variable: aux191 with domain: bool (representing constraint (max_left_00003_00006_00008<max_left_00003_00006_00009))
c Var 'aux191' direct represents '0' with '-8252'
c Var 'aux191' direct represents '1' with '8252'
c Var 'aux191' order represents '1' with '1'
c Var 'aux191' order represents '0' with '-8252'
c Encoding variable: aux192 with domain: bool (representing constraint (max_left_00003_00007_00001<max_left_00003_00007_00002))
c Var 'aux192' direct represents '0' with '-8253'
c Var 'aux192' direct represents '1' with '8253'
c Var 'aux192' order represents '1' with '1'
c Var 'aux192' order represents '0' with '-8253'
c Encoding variable: aux193 with domain: bool (representing constraint (max_left_00003_00007_00002<max_left_00003_00007_00003))
c Var 'aux193' direct represents '0' with '-8254'
c Var 'aux193' direct represents '1' with '8254'
c Var 'aux193' order represents '1' with '1'
c Var 'aux193' order represents '0' with '-8254'
c Encoding variable: aux194 with domain: bool (representing constraint (max_left_00003_00007_00003<max_left_00003_00007_00004))
c Var 'aux194' direct represents '0' with '-8255'
c Var 'aux194' direct represents '1' with '8255'
c Var 'aux194' order represents '1' with '1'
c Var 'aux194' order represents '0' with '-8255'
c Encoding variable: aux195 with domain: bool (representing constraint (max_left_00003_00007_00004<max_left_00003_00007_00005))
c Var 'aux195' direct represents '0' with '-8256'
c Var 'aux195' direct represents '1' with '8256'
c Var 'aux195' order represents '1' with '1'
c Var 'aux195' order represents '0' with '-8256'
c Encoding variable: aux196 with domain: bool (representing constraint (max_left_00003_00007_00005<max_left_00003_00007_00006))
c Var 'aux196' direct represents '0' with '-8257'
c Var 'aux196' direct represents '1' with '8257'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-8257'
c Encoding variable: aux197 with domain: bool (representing constraint (max_left_00003_00007_00006<max_left_00003_00007_00007))
c Var 'aux197' direct represents '0' with '-8258'
c Var 'aux197' direct represents '1' with '8258'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-8258'
c Encoding variable: aux198 with domain: bool (representing constraint (max_left_00003_00007_00007<max_left_00003_00007_00008))
c Var 'aux198' direct represents '0' with '-8259'
c Var 'aux198' direct represents '1' with '8259'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-8259'
c Encoding variable: aux199 with domain: bool (representing constraint (max_left_00003_00007_00008<max_left_00003_00007_00009))
c Var 'aux199' direct represents '0' with '-8260'
c Var 'aux199' direct represents '1' with '8260'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-8260'
c Encoding variable: aux200 with domain: bool (representing constraint (max_left_00003_00008_00001<max_left_00003_00008_00002))
c Var 'aux200' direct represents '0' with '-8261'
c Var 'aux200' direct represents '1' with '8261'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-8261'
c Encoding variable: aux201 with domain: bool (representing constraint (max_left_00003_00008_00002<max_left_00003_00008_00003))
c Var 'aux201' direct represents '0' with '-8262'
c Var 'aux201' direct represents '1' with '8262'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-8262'
c Encoding variable: aux202 with domain: bool (representing constraint (max_left_00003_00008_00003<max_left_00003_00008_00004))
c Var 'aux202' direct represents '0' with '-8263'
c Var 'aux202' direct represents '1' with '8263'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-8263'
c Encoding variable: aux203 with domain: bool (representing constraint (max_left_00003_00008_00004<max_left_00003_00008_00005))
c Var 'aux203' direct represents '0' with '-8264'
c Var 'aux203' direct represents '1' with '8264'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-8264'
c Encoding variable: aux204 with domain: bool (representing constraint (max_left_00003_00008_00005<max_left_00003_00008_00006))
c Var 'aux204' direct represents '0' with '-8265'
c Var 'aux204' direct represents '1' with '8265'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-8265'
c Encoding variable: aux205 with domain: bool (representing constraint (max_left_00003_00008_00006<max_left_00003_00008_00007))
c Var 'aux205' direct represents '0' with '-8266'
c Var 'aux205' direct represents '1' with '8266'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-8266'
c Encoding variable: aux206 with domain: bool (representing constraint (max_left_00003_00008_00007<max_left_00003_00008_00008))
c Var 'aux206' direct represents '0' with '-8267'
c Var 'aux206' direct represents '1' with '8267'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-8267'
c Encoding variable: aux207 with domain: bool (representing constraint (max_left_00003_00008_00008<max_left_00003_00008_00009))
c Var 'aux207' direct represents '0' with '-8268'
c Var 'aux207' direct represents '1' with '8268'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-8268'
c Encoding variable: aux208 with domain: bool (representing constraint (max_left_00003_00009_00001<max_left_00003_00009_00002))
c Var 'aux208' direct represents '0' with '-8269'
c Var 'aux208' direct represents '1' with '8269'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-8269'
c Encoding variable: aux209 with domain: bool (representing constraint (max_left_00003_00009_00002<max_left_00003_00009_00003))
c Var 'aux209' direct represents '0' with '-8270'
c Var 'aux209' direct represents '1' with '8270'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-8270'
c Encoding variable: aux210 with domain: bool (representing constraint (max_left_00003_00009_00003<max_left_00003_00009_00004))
c Var 'aux210' direct represents '0' with '-8271'
c Var 'aux210' direct represents '1' with '8271'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-8271'
c Encoding variable: aux211 with domain: bool (representing constraint (max_left_00003_00009_00004<max_left_00003_00009_00005))
c Var 'aux211' direct represents '0' with '-8272'
c Var 'aux211' direct represents '1' with '8272'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-8272'
c Encoding variable: aux212 with domain: bool (representing constraint (max_left_00003_00009_00005<max_left_00003_00009_00006))
c Var 'aux212' direct represents '0' with '-8273'
c Var 'aux212' direct represents '1' with '8273'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-8273'
c Encoding variable: aux213 with domain: bool (representing constraint (max_left_00003_00009_00006<max_left_00003_00009_00007))
c Var 'aux213' direct represents '0' with '-8274'
c Var 'aux213' direct represents '1' with '8274'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-8274'
c Encoding variable: aux214 with domain: bool (representing constraint (max_left_00003_00009_00007<max_left_00003_00009_00008))
c Var 'aux214' direct represents '0' with '-8275'
c Var 'aux214' direct represents '1' with '8275'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-8275'
c Encoding variable: aux215 with domain: bool (representing constraint (max_left_00003_00009_00008<max_left_00003_00009_00009))
c Var 'aux215' direct represents '0' with '-8276'
c Var 'aux215' direct represents '1' with '8276'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-8276'
c Encoding variable: aux216 with domain: bool (representing constraint (max_left_00004_00001_00001<max_left_00004_00001_00002))
c Var 'aux216' direct represents '0' with '-8277'
c Var 'aux216' direct represents '1' with '8277'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-8277'
c Encoding variable: aux217 with domain: bool (representing constraint (max_left_00004_00001_00002<max_left_00004_00001_00003))
c Var 'aux217' direct represents '0' with '-8278'
c Var 'aux217' direct represents '1' with '8278'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-8278'
c Encoding variable: aux218 with domain: bool (representing constraint (max_left_00004_00001_00003<max_left_00004_00001_00004))
c Var 'aux218' direct represents '0' with '-8279'
c Var 'aux218' direct represents '1' with '8279'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-8279'
c Encoding variable: aux219 with domain: bool (representing constraint (max_left_00004_00001_00004<max_left_00004_00001_00005))
c Var 'aux219' direct represents '0' with '-8280'
c Var 'aux219' direct represents '1' with '8280'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-8280'
c Encoding variable: aux220 with domain: bool (representing constraint (max_left_00004_00001_00005<max_left_00004_00001_00006))
c Var 'aux220' direct represents '0' with '-8281'
c Var 'aux220' direct represents '1' with '8281'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-8281'
c Encoding variable: aux221 with domain: bool (representing constraint (max_left_00004_00001_00006<max_left_00004_00001_00007))
c Var 'aux221' direct represents '0' with '-8282'
c Var 'aux221' direct represents '1' with '8282'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-8282'
c Encoding variable: aux222 with domain: bool (representing constraint (max_left_00004_00001_00007<max_left_00004_00001_00008))
c Var 'aux222' direct represents '0' with '-8283'
c Var 'aux222' direct represents '1' with '8283'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-8283'
c Encoding variable: aux223 with domain: bool (representing constraint (max_left_00004_00001_00008<max_left_00004_00001_00009))
c Var 'aux223' direct represents '0' with '-8284'
c Var 'aux223' direct represents '1' with '8284'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-8284'
c Encoding variable: aux224 with domain: bool (representing constraint (max_left_00004_00002_00001<max_left_00004_00002_00002))
c Var 'aux224' direct represents '0' with '-8285'
c Var 'aux224' direct represents '1' with '8285'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-8285'
c Encoding variable: aux225 with domain: bool (representing constraint (max_left_00004_00002_00002<max_left_00004_00002_00003))
c Var 'aux225' direct represents '0' with '-8286'
c Var 'aux225' direct represents '1' with '8286'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-8286'
c Encoding variable: aux226 with domain: bool (representing constraint (max_left_00004_00002_00003<max_left_00004_00002_00004))
c Var 'aux226' direct represents '0' with '-8287'
c Var 'aux226' direct represents '1' with '8287'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-8287'
c Encoding variable: aux227 with domain: bool (representing constraint (max_left_00004_00002_00004<max_left_00004_00002_00005))
c Var 'aux227' direct represents '0' with '-8288'
c Var 'aux227' direct represents '1' with '8288'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-8288'
c Encoding variable: aux228 with domain: bool (representing constraint (max_left_00004_00002_00005<max_left_00004_00002_00006))
c Var 'aux228' direct represents '0' with '-8289'
c Var 'aux228' direct represents '1' with '8289'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-8289'
c Encoding variable: aux229 with domain: bool (representing constraint (max_left_00004_00002_00006<max_left_00004_00002_00007))
c Var 'aux229' direct represents '0' with '-8290'
c Var 'aux229' direct represents '1' with '8290'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-8290'
c Encoding variable: aux230 with domain: bool (representing constraint (max_left_00004_00002_00007<max_left_00004_00002_00008))
c Var 'aux230' direct represents '0' with '-8291'
c Var 'aux230' direct represents '1' with '8291'
c Var 'aux230' order represents '1' with '1'
c Var 'aux230' order represents '0' with '-8291'
c Encoding variable: aux231 with domain: bool (representing constraint (max_left_00004_00002_00008<max_left_00004_00002_00009))
c Var 'aux231' direct represents '0' with '-8292'
c Var 'aux231' direct represents '1' with '8292'
c Var 'aux231' order represents '1' with '1'
c Var 'aux231' order represents '0' with '-8292'
c Encoding variable: aux232 with domain: bool (representing constraint (max_left_00004_00003_00001<max_left_00004_00003_00002))
c Var 'aux232' direct represents '0' with '-8293'
c Var 'aux232' direct represents '1' with '8293'
c Var 'aux232' order represents '1' with '1'
c Var 'aux232' order represents '0' with '-8293'
c Encoding variable: aux233 with domain: bool (representing constraint (max_left_00004_00003_00002<max_left_00004_00003_00003))
c Var 'aux233' direct represents '0' with '-8294'
c Var 'aux233' direct represents '1' with '8294'
c Var 'aux233' order represents '1' with '1'
c Var 'aux233' order represents '0' with '-8294'
c Encoding variable: aux234 with domain: bool (representing constraint (max_left_00004_00003_00003<max_left_00004_00003_00004))
c Var 'aux234' direct represents '0' with '-8295'
c Var 'aux234' direct represents '1' with '8295'
c Var 'aux234' order represents '1' with '1'
c Var 'aux234' order represents '0' with '-8295'
c Encoding variable: aux235 with domain: bool (representing constraint (max_left_00004_00003_00004<max_left_00004_00003_00005))
c Var 'aux235' direct represents '0' with '-8296'
c Var 'aux235' direct represents '1' with '8296'
c Var 'aux235' order represents '1' with '1'
c Var 'aux235' order represents '0' with '-8296'
c Encoding variable: aux236 with domain: bool (representing constraint (max_left_00004_00003_00005<max_left_00004_00003_00006))
c Var 'aux236' direct represents '0' with '-8297'
c Var 'aux236' direct represents '1' with '8297'
c Var 'aux236' order represents '1' with '1'
c Var 'aux236' order represents '0' with '-8297'
c Encoding variable: aux237 with domain: bool (representing constraint (max_left_00004_00003_00006<max_left_00004_00003_00007))
c Var 'aux237' direct represents '0' with '-8298'
c Var 'aux237' direct represents '1' with '8298'
c Var 'aux237' order represents '1' with '1'
c Var 'aux237' order represents '0' with '-8298'
c Encoding variable: aux238 with domain: bool (representing constraint (max_left_00004_00003_00007<max_left_00004_00003_00008))
c Var 'aux238' direct represents '0' with '-8299'
c Var 'aux238' direct represents '1' with '8299'
c Var 'aux238' order represents '1' with '1'
c Var 'aux238' order represents '0' with '-8299'
c Encoding variable: aux239 with domain: bool (representing constraint (max_left_00004_00003_00008<max_left_00004_00003_00009))
c Var 'aux239' direct represents '0' with '-8300'
c Var 'aux239' direct represents '1' with '8300'
c Var 'aux239' order represents '1' with '1'
c Var 'aux239' order represents '0' with '-8300'
c Encoding variable: aux240 with domain: bool (representing constraint (max_left_00004_00004_00001<max_left_00004_00004_00002))
c Var 'aux240' direct represents '0' with '-8301'
c Var 'aux240' direct represents '1' with '8301'
c Var 'aux240' order represents '1' with '1'
c Var 'aux240' order represents '0' with '-8301'
c Encoding variable: aux241 with domain: bool (representing constraint (max_left_00004_00004_00002<max_left_00004_00004_00003))
c Var 'aux241' direct represents '0' with '-8302'
c Var 'aux241' direct represents '1' with '8302'
c Var 'aux241' order represents '1' with '1'
c Var 'aux241' order represents '0' with '-8302'
c Encoding variable: aux242 with domain: bool (representing constraint (max_left_00004_00004_00003<max_left_00004_00004_00004))
c Var 'aux242' direct represents '0' with '-8303'
c Var 'aux242' direct represents '1' with '8303'
c Var 'aux242' order represents '1' with '1'
c Var 'aux242' order represents '0' with '-8303'
c Encoding variable: aux243 with domain: bool (representing constraint (max_left_00004_00004_00004<max_left_00004_00004_00005))
c Var 'aux243' direct represents '0' with '-8304'
c Var 'aux243' direct represents '1' with '8304'
c Var 'aux243' order represents '1' with '1'
c Var 'aux243' order represents '0' with '-8304'
c Encoding variable: aux244 with domain: bool (representing constraint (max_left_00004_00004_00005<max_left_00004_00004_00006))
c Var 'aux244' direct represents '0' with '-8305'
c Var 'aux244' direct represents '1' with '8305'
c Var 'aux244' order represents '1' with '1'
c Var 'aux244' order represents '0' with '-8305'
c Encoding variable: aux245 with domain: bool (representing constraint (max_left_00004_00004_00006<max_left_00004_00004_00007))
c Var 'aux245' direct represents '0' with '-8306'
c Var 'aux245' direct represents '1' with '8306'
c Var 'aux245' order represents '1' with '1'
c Var 'aux245' order represents '0' with '-8306'
c Encoding variable: aux246 with domain: bool (representing constraint (max_left_00004_00004_00007<max_left_00004_00004_00008))
c Var 'aux246' direct represents '0' with '-8307'
c Var 'aux246' direct represents '1' with '8307'
c Var 'aux246' order represents '1' with '1'
c Var 'aux246' order represents '0' with '-8307'
c Encoding variable: aux247 with domain: bool (representing constraint (max_left_00004_00004_00008<max_left_00004_00004_00009))
c Var 'aux247' direct represents '0' with '-8308'
c Var 'aux247' direct represents '1' with '8308'
c Var 'aux247' order represents '1' with '1'
c Var 'aux247' order represents '0' with '-8308'
c Encoding variable: aux248 with domain: bool (representing constraint (max_left_00004_00005_00002<max_left_00004_00005_00003))
c Var 'aux248' direct represents '0' with '-8309'
c Var 'aux248' direct represents '1' with '8309'
c Var 'aux248' order represents '1' with '1'
c Var 'aux248' order represents '0' with '-8309'
c Encoding variable: aux249 with domain: bool (representing constraint (max_left_00004_00005_00003<max_left_00004_00005_00004))
c Var 'aux249' direct represents '0' with '-8310'
c Var 'aux249' direct represents '1' with '8310'
c Var 'aux249' order represents '1' with '1'
c Var 'aux249' order represents '0' with '-8310'
c Encoding variable: aux250 with domain: bool (representing constraint (max_left_00004_00005_00004<max_left_00004_00005_00005))
c Var 'aux250' direct represents '0' with '-8311'
c Var 'aux250' direct represents '1' with '8311'
c Var 'aux250' order represents '1' with '1'
c Var 'aux250' order represents '0' with '-8311'
c Encoding variable: aux251 with domain: bool (representing constraint (max_left_00004_00005_00005<max_left_00004_00005_00006))
c Var 'aux251' direct represents '0' with '-8312'
c Var 'aux251' direct represents '1' with '8312'
c Var 'aux251' order represents '1' with '1'
c Var 'aux251' order represents '0' with '-8312'
c Encoding variable: aux252 with domain: bool (representing constraint (max_left_00004_00005_00006<max_left_00004_00005_00007))
c Var 'aux252' direct represents '0' with '-8313'
c Var 'aux252' direct represents '1' with '8313'
c Var 'aux252' order represents '1' with '1'
c Var 'aux252' order represents '0' with '-8313'
c Encoding variable: aux253 with domain: bool (representing constraint (max_left_00004_00005_00007<max_left_00004_00005_00008))
c Var 'aux253' direct represents '0' with '-8314'
c Var 'aux253' direct represents '1' with '8314'
c Var 'aux253' order represents '1' with '1'
c Var 'aux253' order represents '0' with '-8314'
c Encoding variable: aux254 with domain: bool (representing constraint (max_left_00004_00005_00008<max_left_00004_00005_00009))
c Var 'aux254' direct represents '0' with '-8315'
c Var 'aux254' direct represents '1' with '8315'
c Var 'aux254' order represents '1' with '1'
c Var 'aux254' order represents '0' with '-8315'
c Encoding variable: aux255 with domain: bool (representing constraint (max_left_00004_00006_00001<max_left_00004_00006_00002))
c Var 'aux255' direct represents '0' with '-8316'
c Var 'aux255' direct represents '1' with '8316'
c Var 'aux255' order represents '1' with '1'
c Var 'aux255' order represents '0' with '-8316'
c Encoding variable: aux256 with domain: bool (representing constraint (max_left_00004_00006_00002<max_left_00004_00006_00003))
c Var 'aux256' direct represents '0' with '-8317'
c Var 'aux256' direct represents '1' with '8317'
c Var 'aux256' order represents '1' with '1'
c Var 'aux256' order represents '0' with '-8317'
c Encoding variable: aux257 with domain: bool (representing constraint (max_left_00004_00006_00003<max_left_00004_00006_00004))
c Var 'aux257' direct represents '0' with '-8318'
c Var 'aux257' direct represents '1' with '8318'
c Var 'aux257' order represents '1' with '1'
c Var 'aux257' order represents '0' with '-8318'
c Encoding variable: aux258 with domain: bool (representing constraint (max_left_00004_00006_00004<max_left_00004_00006_00005))
c Var 'aux258' direct represents '0' with '-8319'
c Var 'aux258' direct represents '1' with '8319'
c Var 'aux258' order represents '1' with '1'
c Var 'aux258' order represents '0' with '-8319'
c Encoding variable: aux259 with domain: bool (representing constraint (max_left_00004_00006_00005<max_left_00004_00006_00006))
c Var 'aux259' direct represents '0' with '-8320'
c Var 'aux259' direct represents '1' with '8320'
c Var 'aux259' order represents '1' with '1'
c Var 'aux259' order represents '0' with '-8320'
c Encoding variable: aux260 with domain: bool (representing constraint (max_left_00004_00006_00006<max_left_00004_00006_00007))
c Var 'aux260' direct represents '0' with '-8321'
c Var 'aux260' direct represents '1' with '8321'
c Var 'aux260' order represents '1' with '1'
c Var 'aux260' order represents '0' with '-8321'
c Encoding variable: aux261 with domain: bool (representing constraint (max_left_00004_00006_00007<max_left_00004_00006_00008))
c Var 'aux261' direct represents '0' with '-8322'
c Var 'aux261' direct represents '1' with '8322'
c Var 'aux261' order represents '1' with '1'
c Var 'aux261' order represents '0' with '-8322'
c Encoding variable: aux262 with domain: bool (representing constraint (max_left_00004_00006_00008<max_left_00004_00006_00009))
c Var 'aux262' direct represents '0' with '-8323'
c Var 'aux262' direct represents '1' with '8323'
c Var 'aux262' order represents '1' with '1'
c Var 'aux262' order represents '0' with '-8323'
c Encoding variable: aux263 with domain: bool (representing constraint (max_left_00004_00007_00001<max_left_00004_00007_00002))
c Var 'aux263' direct represents '0' with '-8324'
c Var 'aux263' direct represents '1' with '8324'
c Var 'aux263' order represents '1' with '1'
c Var 'aux263' order represents '0' with '-8324'
c Encoding variable: aux264 with domain: bool (representing constraint (max_left_00004_00007_00002<max_left_00004_00007_00003))
c Var 'aux264' direct represents '0' with '-8325'
c Var 'aux264' direct represents '1' with '8325'
c Var 'aux264' order represents '1' with '1'
c Var 'aux264' order represents '0' with '-8325'
c Encoding variable: aux265 with domain: bool (representing constraint (max_left_00004_00007_00003<max_left_00004_00007_00004))
c Var 'aux265' direct represents '0' with '-8326'
c Var 'aux265' direct represents '1' with '8326'
c Var 'aux265' order represents '1' with '1'
c Var 'aux265' order represents '0' with '-8326'
c Encoding variable: aux266 with domain: bool (representing constraint (max_left_00004_00007_00004<max_left_00004_00007_00005))
c Var 'aux266' direct represents '0' with '-8327'
c Var 'aux266' direct represents '1' with '8327'
c Var 'aux266' order represents '1' with '1'
c Var 'aux266' order represents '0' with '-8327'
c Encoding variable: aux267 with domain: bool (representing constraint (max_left_00004_00007_00005<max_left_00004_00007_00006))
c Var 'aux267' direct represents '0' with '-8328'
c Var 'aux267' direct represents '1' with '8328'
c Var 'aux267' order represents '1' with '1'
c Var 'aux267' order represents '0' with '-8328'
c Encoding variable: aux268 with domain: bool (representing constraint (max_left_00004_00007_00006<max_left_00004_00007_00007))
c Var 'aux268' direct represents '0' with '-8329'
c Var 'aux268' direct represents '1' with '8329'
c Var 'aux268' order represents '1' with '1'
c Var 'aux268' order represents '0' with '-8329'
c Encoding variable: aux269 with domain: bool (representing constraint (max_left_00004_00007_00007<max_left_00004_00007_00008))
c Var 'aux269' direct represents '0' with '-8330'
c Var 'aux269' direct represents '1' with '8330'
c Var 'aux269' order represents '1' with '1'
c Var 'aux269' order represents '0' with '-8330'
c Encoding variable: aux270 with domain: bool (representing constraint (max_left_00004_00007_00008<max_left_00004_00007_00009))
c Var 'aux270' direct represents '0' with '-8331'
c Var 'aux270' direct represents '1' with '8331'
c Var 'aux270' order represents '1' with '1'
c Var 'aux270' order represents '0' with '-8331'
c Encoding variable: aux271 with domain: bool (representing constraint (max_left_00004_00008_00001<max_left_00004_00008_00002))
c Var 'aux271' direct represents '0' with '-8332'
c Var 'aux271' direct represents '1' with '8332'
c Var 'aux271' order represents '1' with '1'
c Var 'aux271' order represents '0' with '-8332'
c Encoding variable: aux272 with domain: bool (representing constraint (max_left_00004_00008_00002<max_left_00004_00008_00003))
c Var 'aux272' direct represents '0' with '-8333'
c Var 'aux272' direct represents '1' with '8333'
c Var 'aux272' order represents '1' with '1'
c Var 'aux272' order represents '0' with '-8333'
c Encoding variable: aux273 with domain: bool (representing constraint (max_left_00004_00008_00003<max_left_00004_00008_00004))
c Var 'aux273' direct represents '0' with '-8334'
c Var 'aux273' direct represents '1' with '8334'
c Var 'aux273' order represents '1' with '1'
c Var 'aux273' order represents '0' with '-8334'
c Encoding variable: aux274 with domain: bool (representing constraint (max_left_00004_00008_00004<max_left_00004_00008_00005))
c Var 'aux274' direct represents '0' with '-8335'
c Var 'aux274' direct represents '1' with '8335'
c Var 'aux274' order represents '1' with '1'
c Var 'aux274' order represents '0' with '-8335'
c Encoding variable: aux275 with domain: bool (representing constraint (max_left_00004_00008_00005<max_left_00004_00008_00006))
c Var 'aux275' direct represents '0' with '-8336'
c Var 'aux275' direct represents '1' with '8336'
c Var 'aux275' order represents '1' with '1'
c Var 'aux275' order represents '0' with '-8336'
c Encoding variable: aux276 with domain: bool (representing constraint (max_left_00004_00008_00006<max_left_00004_00008_00007))
c Var 'aux276' direct represents '0' with '-8337'
c Var 'aux276' direct represents '1' with '8337'
c Var 'aux276' order represents '1' with '1'
c Var 'aux276' order represents '0' with '-8337'
c Encoding variable: aux277 with domain: bool (representing constraint (max_left_00004_00008_00007<max_left_00004_00008_00008))
c Var 'aux277' direct represents '0' with '-8338'
c Var 'aux277' direct represents '1' with '8338'
c Var 'aux277' order represents '1' with '1'
c Var 'aux277' order represents '0' with '-8338'
c Encoding variable: aux278 with domain: bool (representing constraint (max_left_00004_00008_00008<max_left_00004_00008_00009))
c Var 'aux278' direct represents '0' with '-8339'
c Var 'aux278' direct represents '1' with '8339'
c Var 'aux278' order represents '1' with '1'
c Var 'aux278' order represents '0' with '-8339'
c Encoding variable: aux279 with domain: bool (representing constraint (max_left_00004_00009_00001<max_left_00004_00009_00002))
c Var 'aux279' direct represents '0' with '-8340'
c Var 'aux279' direct represents '1' with '8340'
c Var 'aux279' order represents '1' with '1'
c Var 'aux279' order represents '0' with '-8340'
c Encoding variable: aux280 with domain: bool (representing constraint (max_left_00004_00009_00002<max_left_00004_00009_00003))
c Var 'aux280' direct represents '0' with '-8341'
c Var 'aux280' direct represents '1' with '8341'
c Var 'aux280' order represents '1' with '1'
c Var 'aux280' order represents '0' with '-8341'
c Encoding variable: aux281 with domain: bool (representing constraint (max_left_00004_00009_00003<max_left_00004_00009_00004))
c Var 'aux281' direct represents '0' with '-8342'
c Var 'aux281' direct represents '1' with '8342'
c Var 'aux281' order represents '1' with '1'
c Var 'aux281' order represents '0' with '-8342'
c Encoding variable: aux282 with domain: bool (representing constraint (max_left_00004_00009_00004<max_left_00004_00009_00005))
c Var 'aux282' direct represents '0' with '-8343'
c Var 'aux282' direct represents '1' with '8343'
c Var 'aux282' order represents '1' with '1'
c Var 'aux282' order represents '0' with '-8343'
c Encoding variable: aux283 with domain: bool (representing constraint (max_left_00004_00009_00005<max_left_00004_00009_00006))
c Var 'aux283' direct represents '0' with '-8344'
c Var 'aux283' direct represents '1' with '8344'
c Var 'aux283' order represents '1' with '1'
c Var 'aux283' order represents '0' with '-8344'
c Encoding variable: aux284 with domain: bool (representing constraint (max_left_00004_00009_00006<max_left_00004_00009_00007))
c Var 'aux284' direct represents '0' with '-8345'
c Var 'aux284' direct represents '1' with '8345'
c Var 'aux284' order represents '1' with '1'
c Var 'aux284' order represents '0' with '-8345'
c Encoding variable: aux285 with domain: bool (representing constraint (max_left_00004_00009_00007<max_left_00004_00009_00008))
c Var 'aux285' direct represents '0' with '-8346'
c Var 'aux285' direct represents '1' with '8346'
c Var 'aux285' order represents '1' with '1'
c Var 'aux285' order represents '0' with '-8346'
c Encoding variable: aux286 with domain: bool (representing constraint (max_left_00004_00009_00008<max_left_00004_00009_00009))
c Var 'aux286' direct represents '0' with '-8347'
c Var 'aux286' direct represents '1' with '8347'
c Var 'aux286' order represents '1' with '1'
c Var 'aux286' order represents '0' with '-8347'
c Encoding variable: aux287 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00003=1) + (field_00001_00004=1) + (field_00001_00005=1) + (field_00001_00006=1) + (field_00001_00008=1) + (field_00001_00009=1))=tv=1))
c Var 'aux287' direct represents '0' with '-8348'
c Var 'aux287' direct represents '1' with '8348'
c Var 'aux287' order represents '1' with '1'
c Var 'aux287' order represents '0' with '-8348'
c Encoding variable: aux288 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00003=2) + (field_00001_00004=2) + (field_00001_00005=2) + (field_00001_00006=2) + (field_00001_00008=2) + (field_00001_00009=2))=tv=1))
c Var 'aux288' direct represents '0' with '-8349'
c Var 'aux288' direct represents '1' with '8349'
c Var 'aux288' order represents '1' with '1'
c Var 'aux288' order represents '0' with '-8349'
c Encoding variable: aux289 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00003=3) + (field_00001_00004=3) + (field_00001_00005=3) + (field_00001_00006=3) + (field_00001_00008=3) + (field_00001_00009=3))=tv=1))
c Var 'aux289' direct represents '0' with '-8350'
c Var 'aux289' direct represents '1' with '8350'
c Var 'aux289' order represents '1' with '1'
c Var 'aux289' order represents '0' with '-8350'
c Encoding variable: aux290 with domain: bool (representing constraint (((field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4) + (field_00001_00004=4) + (field_00001_00005=4) + (field_00001_00006=4) + (field_00001_00008=4) + (field_00001_00009=4))=tv=1))
c Var 'aux290' direct represents '0' with '-8351'
c Var 'aux290' direct represents '1' with '8351'
c Var 'aux290' order represents '1' with '1'
c Var 'aux290' order represents '0' with '-8351'
c Encoding variable: aux291 with domain: bool (representing constraint (((field_00001_00001=5) + (field_00001_00002=5) + (field_00001_00003=5) + (field_00001_00004=5) + (field_00001_00005=5) + (field_00001_00006=5) + (field_00001_00007=5) + (field_00001_00008=5) + (field_00001_00009=5))=tv=1))
c Var 'aux291' direct represents '0' with '-8352'
c Var 'aux291' direct represents '1' with '8352'
c Var 'aux291' order represents '1' with '1'
c Var 'aux291' order represents '0' with '-8352'
c Encoding variable: aux292 with domain: bool (representing constraint (((field_00001_00001=6) + (field_00001_00002=6) + (field_00001_00003=6) + (field_00001_00004=6) + (field_00001_00005=6) + (field_00001_00006=6) + (field_00001_00008=6) + (field_00001_00009=6))=tv=1))
c Var 'aux292' direct represents '0' with '-8353'
c Var 'aux292' direct represents '1' with '8353'
c Var 'aux292' order represents '1' with '1'
c Var 'aux292' order represents '0' with '-8353'
c Encoding variable: aux293 with domain: bool (representing constraint (((field_00001_00001=7) + (field_00001_00002=7) + (field_00001_00003=7) + (field_00001_00004=7) + (field_00001_00005=7) + (field_00001_00006=7) + (field_00001_00008=7) + (field_00001_00009=7))=tv=1))
c Var 'aux293' direct represents '0' with '-8354'
c Var 'aux293' direct represents '1' with '8354'
c Var 'aux293' order represents '1' with '1'
c Var 'aux293' order represents '0' with '-8354'
c Encoding variable: aux294 with domain: bool (representing constraint (((field_00001_00001=8) + (field_00001_00002=8) + (field_00001_00003=8) + (field_00001_00004=8) + (field_00001_00005=8) + (field_00001_00006=8) + (field_00001_00008=8) + (field_00001_00009=8))=tv=1))
c Var 'aux294' direct represents '0' with '-8355'
c Var 'aux294' direct represents '1' with '8355'
c Var 'aux294' order represents '1' with '1'
c Var 'aux294' order represents '0' with '-8355'
c Encoding variable: aux295 with domain: bool (representing constraint (((field_00001_00001=9) + (field_00001_00002=9) + (field_00001_00003=9) + (field_00001_00004=9) + (field_00001_00005=9) + (field_00001_00006=9) + (field_00001_00008=9) + (field_00001_00009=9))=tv=1))
c Var 'aux295' direct represents '0' with '-8356'
c Var 'aux295' direct represents '1' with '8356'
c Var 'aux295' order represents '1' with '1'
c Var 'aux295' order represents '0' with '-8356'
c Encoding variable: aux296 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00002=1) + (field_00002_00003=1) + (field_00002_00004=1) + (field_00002_00005=1) + (field_00002_00006=1) + (field_00002_00007=1) + (field_00002_00009=1))=tv=1))
c Var 'aux296' direct represents '0' with '-8357'
c Var 'aux296' direct represents '1' with '8357'
c Var 'aux296' order represents '1' with '1'
c Var 'aux296' order represents '0' with '-8357'
c Encoding variable: aux297 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00002=2) + (field_00002_00003=2) + (field_00002_00004=2) + (field_00002_00005=2) + (field_00002_00006=2) + (field_00002_00007=2) + (field_00002_00009=2))=tv=1))
c Var 'aux297' direct represents '0' with '-8358'
c Var 'aux297' direct represents '1' with '8358'
c Var 'aux297' order represents '1' with '1'
c Var 'aux297' order represents '0' with '-8358'
c Encoding variable: aux298 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00002=3) + (field_00002_00003=3) + (field_00002_00004=3) + (field_00002_00005=3) + (field_00002_00006=3) + (field_00002_00007=3) + (field_00002_00009=3))=tv=1))
c Var 'aux298' direct represents '0' with '-8359'
c Var 'aux298' direct represents '1' with '8359'
c Var 'aux298' order represents '1' with '1'
c Var 'aux298' order represents '0' with '-8359'
c Encoding variable: aux299 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00002_00004=4) + (field_00002_00005=4) + (field_00002_00006=4) + (field_00002_00007=4) + (field_00002_00009=4))=tv=1))
c Var 'aux299' direct represents '0' with '-8360'
c Var 'aux299' direct represents '1' with '8360'
c Var 'aux299' order represents '1' with '1'
c Var 'aux299' order represents '0' with '-8360'
c Encoding variable: aux300 with domain: bool (representing constraint (((field_00002_00001=5) + (field_00002_00002=5) + (field_00002_00003=5) + (field_00002_00004=5) + (field_00002_00005=5) + (field_00002_00006=5) + (field_00002_00007=5) + (field_00002_00009=5))=tv=1))
c Var 'aux300' direct represents '0' with '-8361'
c Var 'aux300' direct represents '1' with '8361'
c Var 'aux300' order represents '1' with '1'
c Var 'aux300' order represents '0' with '-8361'
c Encoding variable: aux301 with domain: bool (representing constraint (((field_00002_00001=6) + (field_00002_00002=6) + (field_00002_00003=6) + (field_00002_00004=6) + (field_00002_00005=6) + (field_00002_00006=6) + (field_00002_00007=6) + (field_00002_00009=6))=tv=1))
c Var 'aux301' direct represents '0' with '-8362'
c Var 'aux301' direct represents '1' with '8362'
c Var 'aux301' order represents '1' with '1'
c Var 'aux301' order represents '0' with '-8362'
c Encoding variable: aux302 with domain: bool (representing constraint (((field_00002_00001=7) + (field_00002_00002=7) + (field_00002_00003=7) + (field_00002_00004=7) + (field_00002_00005=7) + (field_00002_00006=7) + (field_00002_00007=7) + (field_00002_00008=7) + (field_00002_00009=7))=tv=1))
c Var 'aux302' direct represents '0' with '-8363'
c Var 'aux302' direct represents '1' with '8363'
c Var 'aux302' order represents '1' with '1'
c Var 'aux302' order represents '0' with '-8363'
c Encoding variable: aux303 with domain: bool (representing constraint (((field_00002_00001=8) + (field_00002_00002=8) + (field_00002_00003=8) + (field_00002_00004=8) + (field_00002_00005=8) + (field_00002_00006=8) + (field_00002_00007=8) + (field_00002_00009=8))=tv=1))
c Var 'aux303' direct represents '0' with '-8364'
c Var 'aux303' direct represents '1' with '8364'
c Var 'aux303' order represents '1' with '1'
c Var 'aux303' order represents '0' with '-8364'
c Encoding variable: aux304 with domain: bool (representing constraint (((field_00002_00001=9) + (field_00002_00002=9) + (field_00002_00003=9) + (field_00002_00004=9) + (field_00002_00005=9) + (field_00002_00006=9) + (field_00002_00007=9) + (field_00002_00009=9))=tv=1))
c Var 'aux304' direct represents '0' with '-8365'
c Var 'aux304' direct represents '1' with '8365'
c Var 'aux304' order represents '1' with '1'
c Var 'aux304' order represents '0' with '-8365'
c Encoding variable: aux305 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1) + (field_00003_00004=1) + (field_00003_00005=1) + (field_00003_00007=1) + (field_00003_00008=1) + (field_00003_00009=1))=tv=1))
c Var 'aux305' direct represents '0' with '-8366'
c Var 'aux305' direct represents '1' with '8366'
c Var 'aux305' order represents '1' with '1'
c Var 'aux305' order represents '0' with '-8366'
c Encoding variable: aux306 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2) + (field_00003_00005=2) + (field_00003_00007=2) + (field_00003_00008=2) + (field_00003_00009=2))=tv=1))
c Var 'aux306' direct represents '0' with '-8367'
c Var 'aux306' direct represents '1' with '8367'
c Var 'aux306' order represents '1' with '1'
c Var 'aux306' order represents '0' with '-8367'
c Encoding variable: aux307 with domain: bool (representing constraint (((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3) + (field_00003_00005=3) + (field_00003_00007=3) + (field_00003_00008=3) + (field_00003_00009=3))=tv=1))
c Var 'aux307' direct represents '0' with '-8368'
c Var 'aux307' direct represents '1' with '8368'
c Var 'aux307' order represents '1' with '1'
c Var 'aux307' order represents '0' with '-8368'
c Encoding variable: aux308 with domain: bool (representing constraint (((field_00003_00001=4) + (field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4) + (field_00003_00005=4) + (field_00003_00007=4) + (field_00003_00008=4) + (field_00003_00009=4))=tv=1))
c Var 'aux308' direct represents '0' with '-8369'
c Var 'aux308' direct represents '1' with '8369'
c Var 'aux308' order represents '1' with '1'
c Var 'aux308' order represents '0' with '-8369'
c Encoding variable: aux309 with domain: bool (representing constraint (((field_00003_00001=5) + (field_00003_00002=5) + (field_00003_00003=5) + (field_00003_00004=5) + (field_00003_00005=5) + (field_00003_00007=5) + (field_00003_00008=5) + (field_00003_00009=5))=tv=1))
c Var 'aux309' direct represents '0' with '-8370'
c Var 'aux309' direct represents '1' with '8370'
c Var 'aux309' order represents '1' with '1'
c Var 'aux309' order represents '0' with '-8370'
c Encoding variable: aux310 with domain: bool (representing constraint (((field_00003_00001=6) + (field_00003_00002=6) + (field_00003_00003=6) + (field_00003_00004=6) + (field_00003_00005=6) + (field_00003_00006=6) + (field_00003_00007=6) + (field_00003_00008=6) + (field_00003_00009=6))=tv=1))
c Var 'aux310' direct represents '0' with '-8371'
c Var 'aux310' direct represents '1' with '8371'
c Var 'aux310' order represents '1' with '1'
c Var 'aux310' order represents '0' with '-8371'
c Encoding variable: aux311 with domain: bool (representing constraint (((field_00003_00001=7) + (field_00003_00002=7) + (field_00003_00003=7) + (field_00003_00004=7) + (field_00003_00005=7) + (field_00003_00007=7) + (field_00003_00008=7) + (field_00003_00009=7))=tv=1))
c Var 'aux311' direct represents '0' with '-8372'
c Var 'aux311' direct represents '1' with '8372'
c Var 'aux311' order represents '1' with '1'
c Var 'aux311' order represents '0' with '-8372'
c Encoding variable: aux312 with domain: bool (representing constraint (((field_00003_00001=8) + (field_00003_00002=8) + (field_00003_00003=8) + (field_00003_00004=8) + (field_00003_00005=8) + (field_00003_00007=8) + (field_00003_00008=8) + (field_00003_00009=8))=tv=1))
c Var 'aux312' direct represents '0' with '-8373'
c Var 'aux312' direct represents '1' with '8373'
c Var 'aux312' order represents '1' with '1'
c Var 'aux312' order represents '0' with '-8373'
c Encoding variable: aux313 with domain: bool (representing constraint (((field_00003_00001=9) + (field_00003_00002=9) + (field_00003_00003=9) + (field_00003_00004=9) + (field_00003_00005=9) + (field_00003_00007=9) + (field_00003_00008=9) + (field_00003_00009=9))=tv=1))
c Var 'aux313' direct represents '0' with '-8374'
c Var 'aux313' direct represents '1' with '8374'
c Var 'aux313' order represents '1' with '1'
c Var 'aux313' order represents '0' with '-8374'
c Encoding variable: aux314 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1) + (field_00004_00005=1) + (field_00004_00006=1) + (field_00004_00007=1) + (field_00004_00009=1))=tv=1))
c Var 'aux314' direct represents '0' with '-8375'
c Var 'aux314' direct represents '1' with '8375'
c Var 'aux314' order represents '1' with '1'
c Var 'aux314' order represents '0' with '-8375'
c Encoding variable: aux315 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00004_00002=2) + (field_00004_00004=2) + (field_00004_00005=2) + (field_00004_00006=2) + (field_00004_00007=2) + (field_00004_00009=2))=tv=1))
c Var 'aux315' direct represents '0' with '-8376'
c Var 'aux315' direct represents '1' with '8376'
c Var 'aux315' order represents '1' with '1'
c Var 'aux315' order represents '0' with '-8376'
c Encoding variable: aux316 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00004_00002=3) + (field_00004_00004=3) + (field_00004_00005=3) + (field_00004_00006=3) + (field_00004_00007=3) + (field_00004_00008=3) + (field_00004_00009=3))=tv=1))
c Var 'aux316' direct represents '0' with '-8377'
c Var 'aux316' direct represents '1' with '8377'
c Var 'aux316' order represents '1' with '1'
c Var 'aux316' order represents '0' with '-8377'
c Encoding variable: aux317 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00004=4) + (field_00004_00005=4) + (field_00004_00006=4) + (field_00004_00007=4) + (field_00004_00009=4))=tv=1))
c Var 'aux317' direct represents '0' with '-8378'
c Var 'aux317' direct represents '1' with '8378'
c Var 'aux317' order represents '1' with '1'
c Var 'aux317' order represents '0' with '-8378'
c Encoding variable: aux318 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00004_00002=5) + (field_00004_00004=5) + (field_00004_00005=5) + (field_00004_00006=5) + (field_00004_00007=5) + (field_00004_00009=5))=tv=1))
c Var 'aux318' direct represents '0' with '-8379'
c Var 'aux318' direct represents '1' with '8379'
c Var 'aux318' order represents '1' with '1'
c Var 'aux318' order represents '0' with '-8379'
c Encoding variable: aux319 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00004_00002=6) + (field_00004_00004=6) + (field_00004_00005=6) + (field_00004_00006=6) + (field_00004_00007=6) + (field_00004_00009=6))=tv=1))
c Var 'aux319' direct represents '0' with '-8380'
c Var 'aux319' direct represents '1' with '8380'
c Var 'aux319' order represents '1' with '1'
c Var 'aux319' order represents '0' with '-8380'
c Encoding variable: aux320 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00004_00002=7) + (field_00004_00004=7) + (field_00004_00005=7) + (field_00004_00006=7) + (field_00004_00007=7) + (field_00004_00009=7))=tv=1))
c Var 'aux320' direct represents '0' with '-8381'
c Var 'aux320' direct represents '1' with '8381'
c Var 'aux320' order represents '1' with '1'
c Var 'aux320' order represents '0' with '-8381'
c Encoding variable: aux321 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00004_00002=8) + (field_00004_00004=8) + (field_00004_00005=8) + (field_00004_00006=8) + (field_00004_00007=8) + (field_00004_00009=8))=tv=1))
c Var 'aux321' direct represents '0' with '-8382'
c Var 'aux321' direct represents '1' with '8382'
c Var 'aux321' order represents '1' with '1'
c Var 'aux321' order represents '0' with '-8382'
c Encoding variable: aux322 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00004_00002=9) + (field_00004_00004=9) + (field_00004_00005=9) + (field_00004_00006=9) + (field_00004_00007=9) + (field_00004_00009=9))=tv=1))
c Var 'aux322' direct represents '0' with '-8383'
c Var 'aux322' direct represents '1' with '8383'
c Var 'aux322' order represents '1' with '1'
c Var 'aux322' order represents '0' with '-8383'
c Encoding variable: aux323 with domain: bool (representing constraint (((field_00005_00001=1) + (field_00005_00002=1) + (field_00005_00003=1) + (field_00005_00004=1) + (field_00005_00005=1) + (field_00005_00006=1) + (field_00005_00008=1))=tv=1))
c Var 'aux323' direct represents '0' with '-8384'
c Var 'aux323' direct represents '1' with '8384'
c Var 'aux323' order represents '1' with '1'
c Var 'aux323' order represents '0' with '-8384'
c Encoding variable: aux324 with domain: bool (representing constraint (((field_00005_00001=2) + (field_00005_00002=2) + (field_00005_00003=2) + (field_00005_00005=2) + (field_00005_00006=2) + (field_00005_00008=2) + (field_00005_00009=2))=tv=1))
c Var 'aux324' direct represents '0' with '-8385'
c Var 'aux324' direct represents '1' with '8385'
c Var 'aux324' order represents '1' with '1'
c Var 'aux324' order represents '0' with '-8385'
c Encoding variable: aux325 with domain: bool (representing constraint (((field_00005_00001=3) + (field_00005_00002=3) + (field_00005_00003=3) + (field_00005_00005=3) + (field_00005_00006=3) + (field_00005_00008=3))=tv=1))
c Var 'aux325' direct represents '0' with '-8386'
c Var 'aux325' direct represents '1' with '8386'
c Var 'aux325' order represents '1' with '1'
c Var 'aux325' order represents '0' with '-8386'
c Encoding variable: aux326 with domain: bool (representing constraint (((field_00005_00001=4) + (field_00005_00002=4) + (field_00005_00003=4) + (field_00005_00005=4) + (field_00005_00006=4) + (field_00005_00008=4))=tv=1))
c Var 'aux326' direct represents '0' with '-8387'
c Var 'aux326' direct represents '1' with '8387'
c Var 'aux326' order represents '1' with '1'
c Var 'aux326' order represents '0' with '-8387'
c Encoding variable: aux327 with domain: bool (representing constraint (((field_00005_00001=5) + (field_00005_00002=5) + (field_00005_00003=5) + (field_00005_00005=5) + (field_00005_00006=5) + (field_00005_00008=5))=tv=1))
c Var 'aux327' direct represents '0' with '-8388'
c Var 'aux327' direct represents '1' with '8388'
c Var 'aux327' order represents '1' with '1'
c Var 'aux327' order represents '0' with '-8388'
c Encoding variable: aux328 with domain: bool (representing constraint (((field_00005_00001=6) + (field_00005_00002=6) + (field_00005_00003=6) + (field_00005_00005=6) + (field_00005_00006=6) + (field_00005_00008=6))=tv=1))
c Var 'aux328' direct represents '0' with '-8389'
c Var 'aux328' direct represents '1' with '8389'
c Var 'aux328' order represents '1' with '1'
c Var 'aux328' order represents '0' with '-8389'
c Encoding variable: aux329 with domain: bool (representing constraint (((field_00005_00001=7) + (field_00005_00002=7) + (field_00005_00003=7) + (field_00005_00005=7) + (field_00005_00006=7) + (field_00005_00007=7) + (field_00005_00008=7))=tv=1))
c Var 'aux329' direct represents '0' with '-8390'
c Var 'aux329' direct represents '1' with '8390'
c Var 'aux329' order represents '1' with '1'
c Var 'aux329' order represents '0' with '-8390'
c Encoding variable: aux330 with domain: bool (representing constraint (((field_00005_00001=8) + (field_00005_00002=8) + (field_00005_00003=8) + (field_00005_00005=8) + (field_00005_00006=8) + (field_00005_00008=8))=tv=1))
c Var 'aux330' direct represents '0' with '-8391'
c Var 'aux330' direct represents '1' with '8391'
c Var 'aux330' order represents '1' with '1'
c Var 'aux330' order represents '0' with '-8391'
c Encoding variable: aux331 with domain: bool (representing constraint (((field_00005_00001=9) + (field_00005_00002=9) + (field_00005_00003=9) + (field_00005_00005=9) + (field_00005_00006=9) + (field_00005_00008=9))=tv=1))
c Var 'aux331' direct represents '0' with '-8392'
c Var 'aux331' direct represents '1' with '8392'
c Var 'aux331' order represents '1' with '1'
c Var 'aux331' order represents '0' with '-8392'
c Encoding variable: aux332 with domain: bool (representing constraint (((field_00006_00001=1) + (field_00006_00003=1) + (field_00006_00004=1) + (field_00006_00005=1) + (field_00006_00007=1) + (field_00006_00008=1) + (field_00006_00009=1))=tv=1))
c Var 'aux332' direct represents '0' with '-8393'
c Var 'aux332' direct represents '1' with '8393'
c Var 'aux332' order represents '1' with '1'
c Var 'aux332' order represents '0' with '-8393'
c Encoding variable: aux333 with domain: bool (representing constraint (((field_00006_00001=2) + (field_00006_00003=2) + (field_00006_00004=2) + (field_00006_00005=2) + (field_00006_00007=2) + (field_00006_00008=2) + (field_00006_00009=2))=tv=1))
c Var 'aux333' direct represents '0' with '-8394'
c Var 'aux333' direct represents '1' with '8394'
c Var 'aux333' order represents '1' with '1'
c Var 'aux333' order represents '0' with '-8394'
c Encoding variable: aux334 with domain: bool (representing constraint (((field_00006_00001=3) + (field_00006_00003=3) + (field_00006_00004=3) + (field_00006_00005=3) + (field_00006_00007=3) + (field_00006_00008=3) + (field_00006_00009=3))=tv=1))
c Var 'aux334' direct represents '0' with '-8395'
c Var 'aux334' direct represents '1' with '8395'
c Var 'aux334' order represents '1' with '1'
c Var 'aux334' order represents '0' with '-8395'
c Encoding variable: aux335 with domain: bool (representing constraint (((field_00006_00001=4) + (field_00006_00003=4) + (field_00006_00004=4) + (field_00006_00005=4) + (field_00006_00007=4) + (field_00006_00008=4) + (field_00006_00009=4))=tv=1))
c Var 'aux335' direct represents '0' with '-8396'
c Var 'aux335' direct represents '1' with '8396'
c Var 'aux335' order represents '1' with '1'
c Var 'aux335' order represents '0' with '-8396'
c Encoding variable: aux336 with domain: bool (representing constraint (((field_00006_00001=5) + (field_00006_00003=5) + (field_00006_00004=5) + (field_00006_00005=5) + (field_00006_00007=5) + (field_00006_00008=5) + (field_00006_00009=5))=tv=1))
c Var 'aux336' direct represents '0' with '-8397'
c Var 'aux336' direct represents '1' with '8397'
c Var 'aux336' order represents '1' with '1'
c Var 'aux336' order represents '0' with '-8397'
c Encoding variable: aux337 with domain: bool (representing constraint (((field_00006_00001=6) + (field_00006_00003=6) + (field_00006_00004=6) + (field_00006_00005=6) + (field_00006_00007=6) + (field_00006_00008=6) + (field_00006_00009=6))=tv=1))
c Var 'aux337' direct represents '0' with '-8398'
c Var 'aux337' direct represents '1' with '8398'
c Var 'aux337' order represents '1' with '1'
c Var 'aux337' order represents '0' with '-8398'
c Encoding variable: aux338 with domain: bool (representing constraint (((field_00006_00001=7) + (field_00006_00003=7) + (field_00006_00004=7) + (field_00006_00005=7) + (field_00006_00006=7) + (field_00006_00007=7) + (field_00006_00008=7) + (field_00006_00009=7))=tv=1))
c Var 'aux338' direct represents '0' with '-8399'
c Var 'aux338' direct represents '1' with '8399'
c Var 'aux338' order represents '1' with '1'
c Var 'aux338' order represents '0' with '-8399'
c Encoding variable: aux339 with domain: bool (representing constraint (((field_00006_00001=8) + (field_00006_00002=8) + (field_00006_00003=8) + (field_00006_00004=8) + (field_00006_00005=8) + (field_00006_00007=8) + (field_00006_00008=8) + (field_00006_00009=8))=tv=1))
c Var 'aux339' direct represents '0' with '-8400'
c Var 'aux339' direct represents '1' with '8400'
c Var 'aux339' order represents '1' with '1'
c Var 'aux339' order represents '0' with '-8400'
c Encoding variable: aux340 with domain: bool (representing constraint (((field_00006_00001=9) + (field_00006_00003=9) + (field_00006_00004=9) + (field_00006_00005=9) + (field_00006_00007=9) + (field_00006_00008=9) + (field_00006_00009=9))=tv=1))
c Var 'aux340' direct represents '0' with '-8401'
c Var 'aux340' direct represents '1' with '8401'
c Var 'aux340' order represents '1' with '1'
c Var 'aux340' order represents '0' with '-8401'
c Encoding variable: aux341 with domain: bool (representing constraint (((field_00007_00001=1) + (field_00007_00002=1) + (field_00007_00003=1) + (field_00007_00005=1) + (field_00007_00006=1) + (field_00007_00008=1))=tv=1))
c Var 'aux341' direct represents '0' with '-8402'
c Var 'aux341' direct represents '1' with '8402'
c Var 'aux341' order represents '1' with '1'
c Var 'aux341' order represents '0' with '-8402'
c Encoding variable: aux342 with domain: bool (representing constraint (((field_00007_00001=2) + (field_00007_00002=2) + (field_00007_00003=2) + (field_00007_00005=2) + (field_00007_00006=2) + (field_00007_00008=2))=tv=1))
c Var 'aux342' direct represents '0' with '-8403'
c Var 'aux342' direct represents '1' with '8403'
c Var 'aux342' order represents '1' with '1'
c Var 'aux342' order represents '0' with '-8403'
c Encoding variable: aux343 with domain: bool (representing constraint (((field_00007_00001=3) + (field_00007_00002=3) + (field_00007_00003=3) + (field_00007_00004=3) + (field_00007_00005=3) + (field_00007_00006=3) + (field_00007_00008=3))=tv=1))
c Var 'aux343' direct represents '0' with '-8404'
c Var 'aux343' direct represents '1' with '8404'
c Var 'aux343' order represents '1' with '1'
c Var 'aux343' order represents '0' with '-8404'
c Encoding variable: aux344 with domain: bool (representing constraint (((field_00007_00001=4) + (field_00007_00002=4) + (field_00007_00003=4) + (field_00007_00005=4) + (field_00007_00006=4) + (field_00007_00008=4))=tv=1))
c Var 'aux344' direct represents '0' with '-8405'
c Var 'aux344' direct represents '1' with '8405'
c Var 'aux344' order represents '1' with '1'
c Var 'aux344' order represents '0' with '-8405'
c Encoding variable: aux345 with domain: bool (representing constraint (((field_00007_00001=5) + (field_00007_00002=5) + (field_00007_00003=5) + (field_00007_00005=5) + (field_00007_00006=5) + (field_00007_00008=5))=tv=1))
c Var 'aux345' direct represents '0' with '-8406'
c Var 'aux345' direct represents '1' with '8406'
c Var 'aux345' order represents '1' with '1'
c Var 'aux345' order represents '0' with '-8406'
c Encoding variable: aux346 with domain: bool (representing constraint (((field_00007_00001=6) + (field_00007_00002=6) + (field_00007_00003=6) + (field_00007_00005=6) + (field_00007_00006=6) + (field_00007_00007=6) + (field_00007_00008=6))=tv=1))
c Var 'aux346' direct represents '0' with '-8407'
c Var 'aux346' direct represents '1' with '8407'
c Var 'aux346' order represents '1' with '1'
c Var 'aux346' order represents '0' with '-8407'
c Encoding variable: aux347 with domain: bool (representing constraint (((field_00007_00001=7) + (field_00007_00002=7) + (field_00007_00003=7) + (field_00007_00005=7) + (field_00007_00006=7) + (field_00007_00008=7) + (field_00007_00009=7))=tv=1))
c Var 'aux347' direct represents '0' with '-8408'
c Var 'aux347' direct represents '1' with '8408'
c Var 'aux347' order represents '1' with '1'
c Var 'aux347' order represents '0' with '-8408'
c Encoding variable: aux348 with domain: bool (representing constraint (((field_00007_00001=8) + (field_00007_00002=8) + (field_00007_00003=8) + (field_00007_00005=8) + (field_00007_00006=8) + (field_00007_00008=8))=tv=1))
c Var 'aux348' direct represents '0' with '-8409'
c Var 'aux348' direct represents '1' with '8409'
c Var 'aux348' order represents '1' with '1'
c Var 'aux348' order represents '0' with '-8409'
c Encoding variable: aux349 with domain: bool (representing constraint (((field_00007_00001=9) + (field_00007_00002=9) + (field_00007_00003=9) + (field_00007_00005=9) + (field_00007_00006=9) + (field_00007_00008=9))=tv=1))
c Var 'aux349' direct represents '0' with '-8410'
c Var 'aux349' direct represents '1' with '8410'
c Var 'aux349' order represents '1' with '1'
c Var 'aux349' order represents '0' with '-8410'
c Encoding variable: aux350 with domain: bool (representing constraint (((field_00008_00001=1) + (field_00008_00002=1) + (field_00008_00004=1) + (field_00008_00006=1) + (field_00008_00007=1) + (field_00008_00008=1) + (field_00008_00009=1))=tv=1))
c Var 'aux350' direct represents '0' with '-8411'
c Var 'aux350' direct represents '1' with '8411'
c Var 'aux350' order represents '1' with '1'
c Var 'aux350' order represents '0' with '-8411'
c Encoding variable: aux351 with domain: bool (representing constraint (((field_00008_00001=2) + (field_00008_00002=2) + (field_00008_00004=2) + (field_00008_00006=2) + (field_00008_00007=2) + (field_00008_00008=2) + (field_00008_00009=2))=tv=1))
c Var 'aux351' direct represents '0' with '-8412'
c Var 'aux351' direct represents '1' with '8412'
c Var 'aux351' order represents '1' with '1'
c Var 'aux351' order represents '0' with '-8412'
c Encoding variable: aux352 with domain: bool (representing constraint (((field_00008_00001=3) + (field_00008_00002=3) + (field_00008_00004=3) + (field_00008_00006=3) + (field_00008_00007=3) + (field_00008_00008=3) + (field_00008_00009=3))=tv=1))
c Var 'aux352' direct represents '0' with '-8413'
c Var 'aux352' direct represents '1' with '8413'
c Var 'aux352' order represents '1' with '1'
c Var 'aux352' order represents '0' with '-8413'
c Encoding variable: aux353 with domain: bool (representing constraint (((field_00008_00001=4) + (field_00008_00002=4) + (field_00008_00004=4) + (field_00008_00006=4) + (field_00008_00007=4) + (field_00008_00008=4) + (field_00008_00009=4))=tv=1))
c Var 'aux353' direct represents '0' with '-8414'
c Var 'aux353' direct represents '1' with '8414'
c Var 'aux353' order represents '1' with '1'
c Var 'aux353' order represents '0' with '-8414'
c Encoding variable: aux354 with domain: bool (representing constraint (((field_00008_00001=5) + (field_00008_00002=5) + (field_00008_00004=5) + (field_00008_00006=5) + (field_00008_00007=5) + (field_00008_00008=5) + (field_00008_00009=5))=tv=1))
c Var 'aux354' direct represents '0' with '-8415'
c Var 'aux354' direct represents '1' with '8415'
c Var 'aux354' order represents '1' with '1'
c Var 'aux354' order represents '0' with '-8415'
c Encoding variable: aux355 with domain: bool (representing constraint (((field_00008_00001=6) + (field_00008_00002=6) + (field_00008_00004=6) + (field_00008_00006=6) + (field_00008_00007=6) + (field_00008_00008=6) + (field_00008_00009=6))=tv=1))
c Var 'aux355' direct represents '0' with '-8416'
c Var 'aux355' direct represents '1' with '8416'
c Var 'aux355' order represents '1' with '1'
c Var 'aux355' order represents '0' with '-8416'
c Encoding variable: aux356 with domain: bool (representing constraint (((field_00008_00001=7) + (field_00008_00002=7) + (field_00008_00004=7) + (field_00008_00005=7) + (field_00008_00006=7) + (field_00008_00007=7) + (field_00008_00008=7) + (field_00008_00009=7))=tv=1))
c Var 'aux356' direct represents '0' with '-8417'
c Var 'aux356' direct represents '1' with '8417'
c Var 'aux356' order represents '1' with '1'
c Var 'aux356' order represents '0' with '-8417'
c Encoding variable: aux357 with domain: bool (representing constraint (((field_00008_00001=8) + (field_00008_00002=8) + (field_00008_00003=8) + (field_00008_00004=8) + (field_00008_00006=8) + (field_00008_00007=8) + (field_00008_00008=8) + (field_00008_00009=8))=tv=1))
c Var 'aux357' direct represents '0' with '-8418'
c Var 'aux357' direct represents '1' with '8418'
c Var 'aux357' order represents '1' with '1'
c Var 'aux357' order represents '0' with '-8418'
c Encoding variable: aux358 with domain: bool (representing constraint (((field_00008_00001=9) + (field_00008_00002=9) + (field_00008_00004=9) + (field_00008_00006=9) + (field_00008_00007=9) + (field_00008_00008=9) + (field_00008_00009=9))=tv=1))
c Var 'aux358' direct represents '0' with '-8419'
c Var 'aux358' direct represents '1' with '8419'
c Var 'aux358' order represents '1' with '1'
c Var 'aux358' order represents '0' with '-8419'
c Encoding variable: aux359 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00009_00002=1) + (field_00009_00003=1) + (field_00009_00004=1) + (field_00009_00005=1) + (field_00009_00006=1) + (field_00009_00008=1) + (field_00009_00009=1))=tv=1))
c Var 'aux359' direct represents '0' with '-8420'
c Var 'aux359' direct represents '1' with '8420'
c Var 'aux359' order represents '1' with '1'
c Var 'aux359' order represents '0' with '-8420'
c Encoding variable: aux360 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00009_00002=2) + (field_00009_00003=2) + (field_00009_00004=2) + (field_00009_00006=2) + (field_00009_00008=2) + (field_00009_00009=2))=tv=1))
c Var 'aux360' direct represents '0' with '-8421'
c Var 'aux360' direct represents '1' with '8421'
c Var 'aux360' order represents '1' with '1'
c Var 'aux360' order represents '0' with '-8421'
c Encoding variable: aux361 with domain: bool (representing constraint (((field_00009_00001=3) + (field_00009_00002=3) + (field_00009_00003=3) + (field_00009_00004=3) + (field_00009_00006=3) + (field_00009_00008=3) + (field_00009_00009=3))=tv=1))
c Var 'aux361' direct represents '0' with '-8422'
c Var 'aux361' direct represents '1' with '8422'
c Var 'aux361' order represents '1' with '1'
c Var 'aux361' order represents '0' with '-8422'
c Encoding variable: aux362 with domain: bool (representing constraint (((field_00009_00001=4) + (field_00009_00002=4) + (field_00009_00003=4) + (field_00009_00004=4) + (field_00009_00006=4) + (field_00009_00008=4) + (field_00009_00009=4))=tv=1))
c Var 'aux362' direct represents '0' with '-8423'
c Var 'aux362' direct represents '1' with '8423'
c Var 'aux362' order represents '1' with '1'
c Var 'aux362' order represents '0' with '-8423'
c Encoding variable: aux363 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00009_00002=5) + (field_00009_00003=5) + (field_00009_00004=5) + (field_00009_00006=5) + (field_00009_00008=5) + (field_00009_00009=5))=tv=1))
c Var 'aux363' direct represents '0' with '-8424'
c Var 'aux363' direct represents '1' with '8424'
c Var 'aux363' order represents '1' with '1'
c Var 'aux363' order represents '0' with '-8424'
c Encoding variable: aux364 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00009_00002=6) + (field_00009_00003=6) + (field_00009_00004=6) + (field_00009_00006=6) + (field_00009_00008=6) + (field_00009_00009=6))=tv=1))
c Var 'aux364' direct represents '0' with '-8425'
c Var 'aux364' direct represents '1' with '8425'
c Var 'aux364' order represents '1' with '1'
c Var 'aux364' order represents '0' with '-8425'
c Encoding variable: aux365 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00009_00002=7) + (field_00009_00003=7) + (field_00009_00004=7) + (field_00009_00006=7) + (field_00009_00008=7) + (field_00009_00009=7))=tv=1))
c Var 'aux365' direct represents '0' with '-8426'
c Var 'aux365' direct represents '1' with '8426'
c Var 'aux365' order represents '1' with '1'
c Var 'aux365' order represents '0' with '-8426'
c Encoding variable: aux366 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00009_00002=8) + (field_00009_00003=8) + (field_00009_00004=8) + (field_00009_00006=8) + (field_00009_00007=8) + (field_00009_00008=8) + (field_00009_00009=8))=tv=1))
c Var 'aux366' direct represents '0' with '-8427'
c Var 'aux366' direct represents '1' with '8427'
c Var 'aux366' order represents '1' with '1'
c Var 'aux366' order represents '0' with '-8427'
c Encoding variable: aux367 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00009_00002=9) + (field_00009_00003=9) + (field_00009_00004=9) + (field_00009_00006=9) + (field_00009_00008=9) + (field_00009_00009=9))=tv=1))
c Var 'aux367' direct represents '0' with '-8428'
c Var 'aux367' direct represents '1' with '8428'
c Var 'aux367' order represents '1' with '1'
c Var 'aux367' order represents '0' with '-8428'
c Encoding variable: aux368 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00009_00001=1) + (field_00002_00001=1) + (field_00007_00001=1) + (field_00005_00001=1) + (field_00003_00001=1) + (field_00008_00001=1) + (field_00001_00001=1) + (field_00006_00001=1))=tv=1))
c Var 'aux368' direct represents '0' with '-8429'
c Var 'aux368' direct represents '1' with '8429'
c Var 'aux368' order represents '1' with '1'
c Var 'aux368' order represents '0' with '-8429'
c Encoding variable: aux369 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00009_00001=2) + (field_00002_00001=2) + (field_00007_00001=2) + (field_00005_00001=2) + (field_00003_00001=2) + (field_00008_00001=2) + (field_00001_00001=2) + (field_00006_00001=2))=tv=1))
c Var 'aux369' direct represents '0' with '-8430'
c Var 'aux369' direct represents '1' with '8430'
c Var 'aux369' order represents '1' with '1'
c Var 'aux369' order represents '0' with '-8430'
c Encoding variable: aux370 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00009_00001=3) + (field_00002_00001=3) + (field_00007_00001=3) + (field_00005_00001=3) + (field_00003_00001=3) + (field_00008_00001=3) + (field_00001_00001=3) + (field_00006_00001=3))=tv=1))
c Var 'aux370' direct represents '0' with '-8431'
c Var 'aux370' direct represents '1' with '8431'
c Var 'aux370' order represents '1' with '1'
c Var 'aux370' order represents '0' with '-8431'
c Encoding variable: aux371 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00009_00001=4) + (field_00002_00001=4) + (field_00007_00001=4) + (field_00005_00001=4) + (field_00003_00001=4) + (field_00008_00001=4) + (field_00001_00001=4) + (field_00006_00001=4))=tv=1))
c Var 'aux371' direct represents '0' with '-8432'
c Var 'aux371' direct represents '1' with '8432'
c Var 'aux371' order represents '1' with '1'
c Var 'aux371' order represents '0' with '-8432'
c Encoding variable: aux372 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00009_00001=5) + (field_00002_00001=5) + (field_00007_00001=5) + (field_00005_00001=5) + (field_00003_00001=5) + (field_00008_00001=5) + (field_00001_00001=5) + (field_00006_00001=5))=tv=1))
c Var 'aux372' direct represents '0' with '-8433'
c Var 'aux372' direct represents '1' with '8433'
c Var 'aux372' order represents '1' with '1'
c Var 'aux372' order represents '0' with '-8433'
c Encoding variable: aux373 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00009_00001=6) + (field_00002_00001=6) + (field_00007_00001=6) + (field_00005_00001=6) + (field_00003_00001=6) + (field_00008_00001=6) + (field_00001_00001=6) + (field_00006_00001=6))=tv=1))
c Var 'aux373' direct represents '0' with '-8434'
c Var 'aux373' direct represents '1' with '8434'
c Var 'aux373' order represents '1' with '1'
c Var 'aux373' order represents '0' with '-8434'
c Encoding variable: aux374 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00009_00001=7) + (field_00002_00001=7) + (field_00007_00001=7) + (field_00005_00001=7) + (field_00003_00001=7) + (field_00008_00001=7) + (field_00001_00001=7) + (field_00006_00001=7))=tv=1))
c Var 'aux374' direct represents '0' with '-8435'
c Var 'aux374' direct represents '1' with '8435'
c Var 'aux374' order represents '1' with '1'
c Var 'aux374' order represents '0' with '-8435'
c Encoding variable: aux375 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00009_00001=8) + (field_00002_00001=8) + (field_00007_00001=8) + (field_00005_00001=8) + (field_00003_00001=8) + (field_00008_00001=8) + (field_00001_00001=8) + (field_00006_00001=8))=tv=1))
c Var 'aux375' direct represents '0' with '-8436'
c Var 'aux375' direct represents '1' with '8436'
c Var 'aux375' order represents '1' with '1'
c Var 'aux375' order represents '0' with '-8436'
c Encoding variable: aux376 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00009_00001=9) + (field_00002_00001=9) + (field_00007_00001=9) + (field_00005_00001=9) + (field_00003_00001=9) + (field_00008_00001=9) + (field_00001_00001=9) + (field_00006_00001=9))=tv=1))
c Var 'aux376' direct represents '0' with '-8437'
c Var 'aux376' direct represents '1' with '8437'
c Var 'aux376' order represents '1' with '1'
c Var 'aux376' order represents '0' with '-8437'
c Encoding variable: aux377 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00009_00002=1) + (field_00002_00002=1) + (field_00007_00002=1) + (field_00005_00002=1) + (field_00003_00002=1) + (field_00008_00002=1) + (field_00001_00002=1))=tv=1))
c Var 'aux377' direct represents '0' with '-8438'
c Var 'aux377' direct represents '1' with '8438'
c Var 'aux377' order represents '1' with '1'
c Var 'aux377' order represents '0' with '-8438'
c Encoding variable: aux378 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00009_00002=2) + (field_00002_00002=2) + (field_00007_00002=2) + (field_00005_00002=2) + (field_00003_00002=2) + (field_00008_00002=2) + (field_00001_00002=2))=tv=1))
c Var 'aux378' direct represents '0' with '-8439'
c Var 'aux378' direct represents '1' with '8439'
c Var 'aux378' order represents '1' with '1'
c Var 'aux378' order represents '0' with '-8439'
c Encoding variable: aux379 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00009_00002=3) + (field_00002_00002=3) + (field_00007_00002=3) + (field_00005_00002=3) + (field_00003_00002=3) + (field_00008_00002=3) + (field_00001_00002=3))=tv=1))
c Var 'aux379' direct represents '0' with '-8440'
c Var 'aux379' direct represents '1' with '8440'
c Var 'aux379' order represents '1' with '1'
c Var 'aux379' order represents '0' with '-8440'
c Encoding variable: aux380 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00009_00002=4) + (field_00002_00002=4) + (field_00007_00002=4) + (field_00005_00002=4) + (field_00003_00002=4) + (field_00008_00002=4) + (field_00001_00002=4))=tv=1))
c Var 'aux380' direct represents '0' with '-8441'
c Var 'aux380' direct represents '1' with '8441'
c Var 'aux380' order represents '1' with '1'
c Var 'aux380' order represents '0' with '-8441'
c Encoding variable: aux381 with domain: bool (representing constraint (((field_00004_00002=5) + (field_00009_00002=5) + (field_00002_00002=5) + (field_00007_00002=5) + (field_00005_00002=5) + (field_00003_00002=5) + (field_00008_00002=5) + (field_00001_00002=5))=tv=1))
c Var 'aux381' direct represents '0' with '-8442'
c Var 'aux381' direct represents '1' with '8442'
c Var 'aux381' order represents '1' with '1'
c Var 'aux381' order represents '0' with '-8442'
c Encoding variable: aux382 with domain: bool (representing constraint (((field_00004_00002=6) + (field_00009_00002=6) + (field_00002_00002=6) + (field_00007_00002=6) + (field_00005_00002=6) + (field_00003_00002=6) + (field_00008_00002=6) + (field_00001_00002=6))=tv=1))
c Var 'aux382' direct represents '0' with '-8443'
c Var 'aux382' direct represents '1' with '8443'
c Var 'aux382' order represents '1' with '1'
c Var 'aux382' order represents '0' with '-8443'
c Encoding variable: aux383 with domain: bool (representing constraint (((field_00004_00002=7) + (field_00009_00002=7) + (field_00002_00002=7) + (field_00007_00002=7) + (field_00005_00002=7) + (field_00003_00002=7) + (field_00008_00002=7) + (field_00001_00002=7))=tv=1))
c Var 'aux383' direct represents '0' with '-8444'
c Var 'aux383' direct represents '1' with '8444'
c Var 'aux383' order represents '1' with '1'
c Var 'aux383' order represents '0' with '-8444'
c Encoding variable: aux384 with domain: bool (representing constraint (((field_00004_00002=8) + (field_00009_00002=8) + (field_00002_00002=8) + (field_00007_00002=8) + (field_00005_00002=8) + (field_00003_00002=8) + (field_00008_00002=8) + (field_00001_00002=8) + (field_00006_00002=8))=tv=1))
c Var 'aux384' direct represents '0' with '-8445'
c Var 'aux384' direct represents '1' with '8445'
c Var 'aux384' order represents '1' with '1'
c Var 'aux384' order represents '0' with '-8445'
c Encoding variable: aux385 with domain: bool (representing constraint (((field_00004_00002=9) + (field_00009_00002=9) + (field_00002_00002=9) + (field_00007_00002=9) + (field_00005_00002=9) + (field_00003_00002=9) + (field_00008_00002=9) + (field_00001_00002=9))=tv=1))
c Var 'aux385' direct represents '0' with '-8446'
c Var 'aux385' direct represents '1' with '8446'
c Var 'aux385' order represents '1' with '1'
c Var 'aux385' order represents '0' with '-8446'
c Encoding variable: aux386 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00009_00003=1) + (field_00002_00003=1) + (field_00007_00003=1) + (field_00005_00003=1) + (field_00003_00003=1) + (field_00001_00003=1) + (field_00006_00003=1))=tv=1))
c Var 'aux386' direct represents '0' with '-8447'
c Var 'aux386' direct represents '1' with '8447'
c Var 'aux386' order represents '1' with '1'
c Var 'aux386' order represents '0' with '-8447'
c Encoding variable: aux387 with domain: bool (representing constraint (((field_00009_00003=2) + (field_00002_00003=2) + (field_00007_00003=2) + (field_00005_00003=2) + (field_00003_00003=2) + (field_00001_00003=2) + (field_00006_00003=2))=tv=1))
c Var 'aux387' direct represents '0' with '-8448'
c Var 'aux387' direct represents '1' with '8448'
c Var 'aux387' order represents '1' with '1'
c Var 'aux387' order represents '0' with '-8448'
c Encoding variable: aux388 with domain: bool (representing constraint (((field_00009_00003=3) + (field_00002_00003=3) + (field_00007_00003=3) + (field_00005_00003=3) + (field_00003_00003=3) + (field_00001_00003=3) + (field_00006_00003=3))=tv=1))
c Var 'aux388' direct represents '0' with '-8449'
c Var 'aux388' direct represents '1' with '8449'
c Var 'aux388' order represents '1' with '1'
c Var 'aux388' order represents '0' with '-8449'
c Encoding variable: aux389 with domain: bool (representing constraint (((field_00009_00003=4) + (field_00002_00003=4) + (field_00007_00003=4) + (field_00005_00003=4) + (field_00003_00003=4) + (field_00001_00003=4) + (field_00006_00003=4))=tv=1))
c Var 'aux389' direct represents '0' with '-8450'
c Var 'aux389' direct represents '1' with '8450'
c Var 'aux389' order represents '1' with '1'
c Var 'aux389' order represents '0' with '-8450'
c Encoding variable: aux390 with domain: bool (representing constraint (((field_00009_00003=5) + (field_00002_00003=5) + (field_00007_00003=5) + (field_00005_00003=5) + (field_00003_00003=5) + (field_00001_00003=5) + (field_00006_00003=5))=tv=1))
c Var 'aux390' direct represents '0' with '-8451'
c Var 'aux390' direct represents '1' with '8451'
c Var 'aux390' order represents '1' with '1'
c Var 'aux390' order represents '0' with '-8451'
c Encoding variable: aux391 with domain: bool (representing constraint (((field_00009_00003=6) + (field_00002_00003=6) + (field_00007_00003=6) + (field_00005_00003=6) + (field_00003_00003=6) + (field_00001_00003=6) + (field_00006_00003=6))=tv=1))
c Var 'aux391' direct represents '0' with '-8452'
c Var 'aux391' direct represents '1' with '8452'
c Var 'aux391' order represents '1' with '1'
c Var 'aux391' order represents '0' with '-8452'
c Encoding variable: aux392 with domain: bool (representing constraint (((field_00009_00003=7) + (field_00002_00003=7) + (field_00007_00003=7) + (field_00005_00003=7) + (field_00003_00003=7) + (field_00001_00003=7) + (field_00006_00003=7))=tv=1))
c Var 'aux392' direct represents '0' with '-8453'
c Var 'aux392' direct represents '1' with '8453'
c Var 'aux392' order represents '1' with '1'
c Var 'aux392' order represents '0' with '-8453'
c Encoding variable: aux393 with domain: bool (representing constraint (((field_00009_00003=8) + (field_00002_00003=8) + (field_00007_00003=8) + (field_00005_00003=8) + (field_00003_00003=8) + (field_00008_00003=8) + (field_00001_00003=8) + (field_00006_00003=8))=tv=1))
c Var 'aux393' direct represents '0' with '-8454'
c Var 'aux393' direct represents '1' with '8454'
c Var 'aux393' order represents '1' with '1'
c Var 'aux393' order represents '0' with '-8454'
c Encoding variable: aux394 with domain: bool (representing constraint (((field_00009_00003=9) + (field_00002_00003=9) + (field_00007_00003=9) + (field_00005_00003=9) + (field_00003_00003=9) + (field_00001_00003=9) + (field_00006_00003=9))=tv=1))
c Var 'aux394' direct represents '0' with '-8455'
c Var 'aux394' direct represents '1' with '8455'
c Var 'aux394' order represents '1' with '1'
c Var 'aux394' order represents '0' with '-8455'
c Encoding variable: aux395 with domain: bool (representing constraint (((field_00004_00004=1) + (field_00009_00004=1) + (field_00002_00004=1) + (field_00005_00004=1) + (field_00003_00004=1) + (field_00008_00004=1) + (field_00001_00004=1) + (field_00006_00004=1))=tv=1))
c Var 'aux395' direct represents '0' with '-8456'
c Var 'aux395' direct represents '1' with '8456'
c Var 'aux395' order represents '1' with '1'
c Var 'aux395' order represents '0' with '-8456'
c Encoding variable: aux396 with domain: bool (representing constraint (((field_00004_00004=2) + (field_00009_00004=2) + (field_00002_00004=2) + (field_00003_00004=2) + (field_00008_00004=2) + (field_00001_00004=2) + (field_00006_00004=2))=tv=1))
c Var 'aux396' direct represents '0' with '-8457'
c Var 'aux396' direct represents '1' with '8457'
c Var 'aux396' order represents '1' with '1'
c Var 'aux396' order represents '0' with '-8457'
c Encoding variable: aux397 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00009_00004=3) + (field_00002_00004=3) + (field_00007_00004=3) + (field_00003_00004=3) + (field_00008_00004=3) + (field_00001_00004=3) + (field_00006_00004=3))=tv=1))
c Var 'aux397' direct represents '0' with '-8458'
c Var 'aux397' direct represents '1' with '8458'
c Var 'aux397' order represents '1' with '1'
c Var 'aux397' order represents '0' with '-8458'
c Encoding variable: aux398 with domain: bool (representing constraint (((field_00004_00004=4) + (field_00009_00004=4) + (field_00002_00004=4) + (field_00003_00004=4) + (field_00008_00004=4) + (field_00001_00004=4) + (field_00006_00004=4))=tv=1))
c Var 'aux398' direct represents '0' with '-8459'
c Var 'aux398' direct represents '1' with '8459'
c Var 'aux398' order represents '1' with '1'
c Var 'aux398' order represents '0' with '-8459'
c Encoding variable: aux399 with domain: bool (representing constraint (((field_00004_00004=5) + (field_00009_00004=5) + (field_00002_00004=5) + (field_00003_00004=5) + (field_00008_00004=5) + (field_00001_00004=5) + (field_00006_00004=5))=tv=1))
c Var 'aux399' direct represents '0' with '-8460'
c Var 'aux399' direct represents '1' with '8460'
c Var 'aux399' order represents '1' with '1'
c Var 'aux399' order represents '0' with '-8460'
c Encoding variable: aux400 with domain: bool (representing constraint (((field_00004_00004=6) + (field_00009_00004=6) + (field_00002_00004=6) + (field_00003_00004=6) + (field_00008_00004=6) + (field_00001_00004=6) + (field_00006_00004=6))=tv=1))
c Var 'aux400' direct represents '0' with '-8461'
c Var 'aux400' direct represents '1' with '8461'
c Var 'aux400' order represents '1' with '1'
c Var 'aux400' order represents '0' with '-8461'
c Encoding variable: aux401 with domain: bool (representing constraint (((field_00004_00004=7) + (field_00009_00004=7) + (field_00002_00004=7) + (field_00003_00004=7) + (field_00008_00004=7) + (field_00001_00004=7) + (field_00006_00004=7))=tv=1))
c Var 'aux401' direct represents '0' with '-8462'
c Var 'aux401' direct represents '1' with '8462'
c Var 'aux401' order represents '1' with '1'
c Var 'aux401' order represents '0' with '-8462'
c Encoding variable: aux402 with domain: bool (representing constraint (((field_00004_00004=8) + (field_00009_00004=8) + (field_00002_00004=8) + (field_00003_00004=8) + (field_00008_00004=8) + (field_00001_00004=8) + (field_00006_00004=8))=tv=1))
c Var 'aux402' direct represents '0' with '-8463'
c Var 'aux402' direct represents '1' with '8463'
c Var 'aux402' order represents '1' with '1'
c Var 'aux402' order represents '0' with '-8463'
c Encoding variable: aux403 with domain: bool (representing constraint (((field_00004_00004=9) + (field_00009_00004=9) + (field_00002_00004=9) + (field_00003_00004=9) + (field_00008_00004=9) + (field_00001_00004=9) + (field_00006_00004=9))=tv=1))
c Var 'aux403' direct represents '0' with '-8464'
c Var 'aux403' direct represents '1' with '8464'
c Var 'aux403' order represents '1' with '1'
c Var 'aux403' order represents '0' with '-8464'
c Encoding variable: aux404 with domain: bool (representing constraint (((field_00004_00005=1) + (field_00009_00005=1) + (field_00002_00005=1) + (field_00007_00005=1) + (field_00005_00005=1) + (field_00003_00005=1) + (field_00001_00005=1) + (field_00006_00005=1))=tv=1))
c Var 'aux404' direct represents '0' with '-8465'
c Var 'aux404' direct represents '1' with '8465'
c Var 'aux404' order represents '1' with '1'
c Var 'aux404' order represents '0' with '-8465'
c Encoding variable: aux405 with domain: bool (representing constraint (((field_00004_00005=2) + (field_00002_00005=2) + (field_00007_00005=2) + (field_00005_00005=2) + (field_00003_00005=2) + (field_00001_00005=2) + (field_00006_00005=2))=tv=1))
c Var 'aux405' direct represents '0' with '-8466'
c Var 'aux405' direct represents '1' with '8466'
c Var 'aux405' order represents '1' with '1'
c Var 'aux405' order represents '0' with '-8466'
c Encoding variable: aux406 with domain: bool (representing constraint (((field_00004_00005=3) + (field_00002_00005=3) + (field_00007_00005=3) + (field_00005_00005=3) + (field_00003_00005=3) + (field_00001_00005=3) + (field_00006_00005=3))=tv=1))
c Var 'aux406' direct represents '0' with '-8467'
c Var 'aux406' direct represents '1' with '8467'
c Var 'aux406' order represents '1' with '1'
c Var 'aux406' order represents '0' with '-8467'
c Encoding variable: aux407 with domain: bool (representing constraint (((field_00004_00005=4) + (field_00002_00005=4) + (field_00007_00005=4) + (field_00005_00005=4) + (field_00003_00005=4) + (field_00001_00005=4) + (field_00006_00005=4))=tv=1))
c Var 'aux407' direct represents '0' with '-8468'
c Var 'aux407' direct represents '1' with '8468'
c Var 'aux407' order represents '1' with '1'
c Var 'aux407' order represents '0' with '-8468'
c Encoding variable: aux408 with domain: bool (representing constraint (((field_00004_00005=5) + (field_00002_00005=5) + (field_00007_00005=5) + (field_00005_00005=5) + (field_00003_00005=5) + (field_00001_00005=5) + (field_00006_00005=5))=tv=1))
c Var 'aux408' direct represents '0' with '-8469'
c Var 'aux408' direct represents '1' with '8469'
c Var 'aux408' order represents '1' with '1'
c Var 'aux408' order represents '0' with '-8469'
c Encoding variable: aux409 with domain: bool (representing constraint (((field_00004_00005=6) + (field_00002_00005=6) + (field_00007_00005=6) + (field_00005_00005=6) + (field_00003_00005=6) + (field_00001_00005=6) + (field_00006_00005=6))=tv=1))
c Var 'aux409' direct represents '0' with '-8470'
c Var 'aux409' direct represents '1' with '8470'
c Var 'aux409' order represents '1' with '1'
c Var 'aux409' order represents '0' with '-8470'
c Encoding variable: aux410 with domain: bool (representing constraint (((field_00004_00005=7) + (field_00002_00005=7) + (field_00007_00005=7) + (field_00005_00005=7) + (field_00003_00005=7) + (field_00008_00005=7) + (field_00001_00005=7) + (field_00006_00005=7))=tv=1))
c Var 'aux410' direct represents '0' with '-8471'
c Var 'aux410' direct represents '1' with '8471'
c Var 'aux410' order represents '1' with '1'
c Var 'aux410' order represents '0' with '-8471'
c Encoding variable: aux411 with domain: bool (representing constraint (((field_00004_00005=8) + (field_00002_00005=8) + (field_00007_00005=8) + (field_00005_00005=8) + (field_00003_00005=8) + (field_00001_00005=8) + (field_00006_00005=8))=tv=1))
c Var 'aux411' direct represents '0' with '-8472'
c Var 'aux411' direct represents '1' with '8472'
c Var 'aux411' order represents '1' with '1'
c Var 'aux411' order represents '0' with '-8472'
c Encoding variable: aux412 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00002_00005=9) + (field_00007_00005=9) + (field_00005_00005=9) + (field_00003_00005=9) + (field_00001_00005=9) + (field_00006_00005=9))=tv=1))
c Var 'aux412' direct represents '0' with '-8473'
c Var 'aux412' direct represents '1' with '8473'
c Var 'aux412' order represents '1' with '1'
c Var 'aux412' order represents '0' with '-8473'
c Encoding variable: aux413 with domain: bool (representing constraint (((field_00004_00006=1) + (field_00009_00006=1) + (field_00002_00006=1) + (field_00007_00006=1) + (field_00005_00006=1) + (field_00008_00006=1) + (field_00001_00006=1))=tv=1))
c Var 'aux413' direct represents '0' with '-8474'
c Var 'aux413' direct represents '1' with '8474'
c Var 'aux413' order represents '1' with '1'
c Var 'aux413' order represents '0' with '-8474'
c Encoding variable: aux414 with domain: bool (representing constraint (((field_00004_00006=2) + (field_00009_00006=2) + (field_00002_00006=2) + (field_00007_00006=2) + (field_00005_00006=2) + (field_00008_00006=2) + (field_00001_00006=2))=tv=1))
c Var 'aux414' direct represents '0' with '-8475'
c Var 'aux414' direct represents '1' with '8475'
c Var 'aux414' order represents '1' with '1'
c Var 'aux414' order represents '0' with '-8475'
c Encoding variable: aux415 with domain: bool (representing constraint (((field_00004_00006=3) + (field_00009_00006=3) + (field_00002_00006=3) + (field_00007_00006=3) + (field_00005_00006=3) + (field_00008_00006=3) + (field_00001_00006=3))=tv=1))
c Var 'aux415' direct represents '0' with '-8476'
c Var 'aux415' direct represents '1' with '8476'
c Var 'aux415' order represents '1' with '1'
c Var 'aux415' order represents '0' with '-8476'
c Encoding variable: aux416 with domain: bool (representing constraint (((field_00004_00006=4) + (field_00009_00006=4) + (field_00002_00006=4) + (field_00007_00006=4) + (field_00005_00006=4) + (field_00008_00006=4) + (field_00001_00006=4))=tv=1))
c Var 'aux416' direct represents '0' with '-8477'
c Var 'aux416' direct represents '1' with '8477'
c Var 'aux416' order represents '1' with '1'
c Var 'aux416' order represents '0' with '-8477'
c Encoding variable: aux417 with domain: bool (representing constraint (((field_00004_00006=5) + (field_00009_00006=5) + (field_00002_00006=5) + (field_00007_00006=5) + (field_00005_00006=5) + (field_00008_00006=5) + (field_00001_00006=5))=tv=1))
c Var 'aux417' direct represents '0' with '-8478'
c Var 'aux417' direct represents '1' with '8478'
c Var 'aux417' order represents '1' with '1'
c Var 'aux417' order represents '0' with '-8478'
c Encoding variable: aux418 with domain: bool (representing constraint (((field_00004_00006=6) + (field_00009_00006=6) + (field_00002_00006=6) + (field_00007_00006=6) + (field_00005_00006=6) + (field_00003_00006=6) + (field_00008_00006=6) + (field_00001_00006=6))=tv=1))
c Var 'aux418' direct represents '0' with '-8479'
c Var 'aux418' direct represents '1' with '8479'
c Var 'aux418' order represents '1' with '1'
c Var 'aux418' order represents '0' with '-8479'
c Encoding variable: aux419 with domain: bool (representing constraint (((field_00004_00006=7) + (field_00009_00006=7) + (field_00002_00006=7) + (field_00007_00006=7) + (field_00005_00006=7) + (field_00008_00006=7) + (field_00001_00006=7) + (field_00006_00006=7))=tv=1))
c Var 'aux419' direct represents '0' with '-8480'
c Var 'aux419' direct represents '1' with '8480'
c Var 'aux419' order represents '1' with '1'
c Var 'aux419' order represents '0' with '-8480'
c Encoding variable: aux420 with domain: bool (representing constraint (((field_00004_00006=8) + (field_00009_00006=8) + (field_00002_00006=8) + (field_00007_00006=8) + (field_00005_00006=8) + (field_00008_00006=8) + (field_00001_00006=8))=tv=1))
c Var 'aux420' direct represents '0' with '-8481'
c Var 'aux420' direct represents '1' with '8481'
c Var 'aux420' order represents '1' with '1'
c Var 'aux420' order represents '0' with '-8481'
c Encoding variable: aux421 with domain: bool (representing constraint (((field_00004_00006=9) + (field_00009_00006=9) + (field_00002_00006=9) + (field_00007_00006=9) + (field_00005_00006=9) + (field_00008_00006=9) + (field_00001_00006=9))=tv=1))
c Var 'aux421' direct represents '0' with '-8482'
c Var 'aux421' direct represents '1' with '8482'
c Var 'aux421' order represents '1' with '1'
c Var 'aux421' order represents '0' with '-8482'
c Encoding variable: aux422 with domain: bool (representing constraint (((field_00004_00007=1) + (field_00002_00007=1) + (field_00003_00007=1) + (field_00008_00007=1) + (field_00006_00007=1))=tv=1))
c Var 'aux422' direct represents '0' with '-8483'
c Var 'aux422' direct represents '1' with '8483'
c Var 'aux422' order represents '1' with '1'
c Var 'aux422' order represents '0' with '-8483'
c Encoding variable: aux423 with domain: bool (representing constraint (((field_00004_00007=2) + (field_00002_00007=2) + (field_00003_00007=2) + (field_00008_00007=2) + (field_00006_00007=2))=tv=1))
c Var 'aux423' direct represents '0' with '-8484'
c Var 'aux423' direct represents '1' with '8484'
c Var 'aux423' order represents '1' with '1'
c Var 'aux423' order represents '0' with '-8484'
c Encoding variable: aux424 with domain: bool (representing constraint (((field_00004_00007=3) + (field_00002_00007=3) + (field_00003_00007=3) + (field_00008_00007=3) + (field_00006_00007=3))=tv=1))
c Var 'aux424' direct represents '0' with '-8485'
c Var 'aux424' direct represents '1' with '8485'
c Var 'aux424' order represents '1' with '1'
c Var 'aux424' order represents '0' with '-8485'
c Encoding variable: aux425 with domain: bool (representing constraint (((field_00004_00007=4) + (field_00002_00007=4) + (field_00003_00007=4) + (field_00008_00007=4) + (field_00006_00007=4))=tv=1))
c Var 'aux425' direct represents '0' with '-8486'
c Var 'aux425' direct represents '1' with '8486'
c Var 'aux425' order represents '1' with '1'
c Var 'aux425' order represents '0' with '-8486'
c Encoding variable: aux426 with domain: bool (representing constraint (((field_00004_00007=5) + (field_00002_00007=5) + (field_00003_00007=5) + (field_00008_00007=5) + (field_00001_00007=5) + (field_00006_00007=5))=tv=1))
c Var 'aux426' direct represents '0' with '-8487'
c Var 'aux426' direct represents '1' with '8487'
c Var 'aux426' order represents '1' with '1'
c Var 'aux426' order represents '0' with '-8487'
c Encoding variable: aux427 with domain: bool (representing constraint (((field_00004_00007=6) + (field_00002_00007=6) + (field_00007_00007=6) + (field_00003_00007=6) + (field_00008_00007=6) + (field_00006_00007=6))=tv=1))
c Var 'aux427' direct represents '0' with '-8488'
c Var 'aux427' direct represents '1' with '8488'
c Var 'aux427' order represents '1' with '1'
c Var 'aux427' order represents '0' with '-8488'
c Encoding variable: aux428 with domain: bool (representing constraint (((field_00004_00007=7) + (field_00002_00007=7) + (field_00005_00007=7) + (field_00003_00007=7) + (field_00008_00007=7) + (field_00006_00007=7))=tv=1))
c Var 'aux428' direct represents '0' with '-8489'
c Var 'aux428' direct represents '1' with '8489'
c Var 'aux428' order represents '1' with '1'
c Var 'aux428' order represents '0' with '-8489'
c Encoding variable: aux429 with domain: bool (representing constraint (((field_00004_00007=8) + (field_00009_00007=8) + (field_00002_00007=8) + (field_00003_00007=8) + (field_00008_00007=8) + (field_00006_00007=8))=tv=1))
c Var 'aux429' direct represents '0' with '-8490'
c Var 'aux429' direct represents '1' with '8490'
c Var 'aux429' order represents '1' with '1'
c Var 'aux429' order represents '0' with '-8490'
c Encoding variable: aux430 with domain: bool (representing constraint (((field_00004_00007=9) + (field_00002_00007=9) + (field_00003_00007=9) + (field_00008_00007=9) + (field_00006_00007=9))=tv=1))
c Var 'aux430' direct represents '0' with '-8491'
c Var 'aux430' direct represents '1' with '8491'
c Var 'aux430' order represents '1' with '1'
c Var 'aux430' order represents '0' with '-8491'
c Encoding variable: aux431 with domain: bool (representing constraint (((field_00009_00008=1) + (field_00007_00008=1) + (field_00005_00008=1) + (field_00003_00008=1) + (field_00008_00008=1) + (field_00001_00008=1) + (field_00006_00008=1))=tv=1))
c Var 'aux431' direct represents '0' with '-8492'
c Var 'aux431' direct represents '1' with '8492'
c Var 'aux431' order represents '1' with '1'
c Var 'aux431' order represents '0' with '-8492'
c Encoding variable: aux432 with domain: bool (representing constraint (((field_00009_00008=2) + (field_00007_00008=2) + (field_00005_00008=2) + (field_00003_00008=2) + (field_00008_00008=2) + (field_00001_00008=2) + (field_00006_00008=2))=tv=1))
c Var 'aux432' direct represents '0' with '-8493'
c Var 'aux432' direct represents '1' with '8493'
c Var 'aux432' order represents '1' with '1'
c Var 'aux432' order represents '0' with '-8493'
c Encoding variable: aux433 with domain: bool (representing constraint (((field_00004_00008=3) + (field_00009_00008=3) + (field_00007_00008=3) + (field_00005_00008=3) + (field_00003_00008=3) + (field_00008_00008=3) + (field_00001_00008=3) + (field_00006_00008=3))=tv=1))
c Var 'aux433' direct represents '0' with '-8494'
c Var 'aux433' direct represents '1' with '8494'
c Var 'aux433' order represents '1' with '1'
c Var 'aux433' order represents '0' with '-8494'
c Encoding variable: aux434 with domain: bool (representing constraint (((field_00009_00008=4) + (field_00007_00008=4) + (field_00005_00008=4) + (field_00003_00008=4) + (field_00008_00008=4) + (field_00001_00008=4) + (field_00006_00008=4))=tv=1))
c Var 'aux434' direct represents '0' with '-8495'
c Var 'aux434' direct represents '1' with '8495'
c Var 'aux434' order represents '1' with '1'
c Var 'aux434' order represents '0' with '-8495'
c Encoding variable: aux435 with domain: bool (representing constraint (((field_00009_00008=5) + (field_00007_00008=5) + (field_00005_00008=5) + (field_00003_00008=5) + (field_00008_00008=5) + (field_00001_00008=5) + (field_00006_00008=5))=tv=1))
c Var 'aux435' direct represents '0' with '-8496'
c Var 'aux435' direct represents '1' with '8496'
c Var 'aux435' order represents '1' with '1'
c Var 'aux435' order represents '0' with '-8496'
c Encoding variable: aux436 with domain: bool (representing constraint (((field_00009_00008=6) + (field_00007_00008=6) + (field_00005_00008=6) + (field_00003_00008=6) + (field_00008_00008=6) + (field_00001_00008=6) + (field_00006_00008=6))=tv=1))
c Var 'aux436' direct represents '0' with '-8497'
c Var 'aux436' direct represents '1' with '8497'
c Var 'aux436' order represents '1' with '1'
c Var 'aux436' order represents '0' with '-8497'
c Encoding variable: aux437 with domain: bool (representing constraint (((field_00009_00008=7) + (field_00002_00008=7) + (field_00007_00008=7) + (field_00005_00008=7) + (field_00003_00008=7) + (field_00008_00008=7) + (field_00001_00008=7) + (field_00006_00008=7))=tv=1))
c Var 'aux437' direct represents '0' with '-8498'
c Var 'aux437' direct represents '1' with '8498'
c Var 'aux437' order represents '1' with '1'
c Var 'aux437' order represents '0' with '-8498'
c Encoding variable: aux438 with domain: bool (representing constraint (((field_00009_00008=8) + (field_00007_00008=8) + (field_00005_00008=8) + (field_00003_00008=8) + (field_00008_00008=8) + (field_00001_00008=8) + (field_00006_00008=8))=tv=1))
c Var 'aux438' direct represents '0' with '-8499'
c Var 'aux438' direct represents '1' with '8499'
c Var 'aux438' order represents '1' with '1'
c Var 'aux438' order represents '0' with '-8499'
c Encoding variable: aux439 with domain: bool (representing constraint (((field_00009_00008=9) + (field_00007_00008=9) + (field_00005_00008=9) + (field_00003_00008=9) + (field_00008_00008=9) + (field_00001_00008=9) + (field_00006_00008=9))=tv=1))
c Var 'aux439' direct represents '0' with '-8500'
c Var 'aux439' direct represents '1' with '8500'
c Var 'aux439' order represents '1' with '1'
c Var 'aux439' order represents '0' with '-8500'
c Encoding variable: aux440 with domain: bool (representing constraint (((field_00004_00009=1) + (field_00009_00009=1) + (field_00002_00009=1) + (field_00003_00009=1) + (field_00008_00009=1) + (field_00001_00009=1) + (field_00006_00009=1))=tv=1))
c Var 'aux440' direct represents '0' with '-8501'
c Var 'aux440' direct represents '1' with '8501'
c Var 'aux440' order represents '1' with '1'
c Var 'aux440' order represents '0' with '-8501'
c Encoding variable: aux441 with domain: bool (representing constraint (((field_00004_00009=2) + (field_00009_00009=2) + (field_00002_00009=2) + (field_00005_00009=2) + (field_00003_00009=2) + (field_00008_00009=2) + (field_00001_00009=2) + (field_00006_00009=2))=tv=1))
c Var 'aux441' direct represents '0' with '-8502'
c Var 'aux441' direct represents '1' with '8502'
c Var 'aux441' order represents '1' with '1'
c Var 'aux441' order represents '0' with '-8502'
c Encoding variable: aux442 with domain: bool (representing constraint (((field_00004_00009=3) + (field_00009_00009=3) + (field_00002_00009=3) + (field_00003_00009=3) + (field_00008_00009=3) + (field_00001_00009=3) + (field_00006_00009=3))=tv=1))
c Var 'aux442' direct represents '0' with '-8503'
c Var 'aux442' direct represents '1' with '8503'
c Var 'aux442' order represents '1' with '1'
c Var 'aux442' order represents '0' with '-8503'
c Encoding variable: aux443 with domain: bool (representing constraint (((field_00004_00009=4) + (field_00009_00009=4) + (field_00002_00009=4) + (field_00003_00009=4) + (field_00008_00009=4) + (field_00001_00009=4) + (field_00006_00009=4))=tv=1))
c Var 'aux443' direct represents '0' with '-8504'
c Var 'aux443' direct represents '1' with '8504'
c Var 'aux443' order represents '1' with '1'
c Var 'aux443' order represents '0' with '-8504'
c Encoding variable: aux444 with domain: bool (representing constraint (((field_00004_00009=5) + (field_00009_00009=5) + (field_00002_00009=5) + (field_00003_00009=5) + (field_00008_00009=5) + (field_00001_00009=5) + (field_00006_00009=5))=tv=1))
c Var 'aux444' direct represents '0' with '-8505'
c Var 'aux444' direct represents '1' with '8505'
c Var 'aux444' order represents '1' with '1'
c Var 'aux444' order represents '0' with '-8505'
c Encoding variable: aux445 with domain: bool (representing constraint (((field_00004_00009=6) + (field_00009_00009=6) + (field_00002_00009=6) + (field_00003_00009=6) + (field_00008_00009=6) + (field_00001_00009=6) + (field_00006_00009=6))=tv=1))
c Var 'aux445' direct represents '0' with '-8506'
c Var 'aux445' direct represents '1' with '8506'
c Var 'aux445' order represents '1' with '1'
c Var 'aux445' order represents '0' with '-8506'
c Encoding variable: aux446 with domain: bool (representing constraint (((field_00004_00009=7) + (field_00009_00009=7) + (field_00002_00009=7) + (field_00007_00009=7) + (field_00003_00009=7) + (field_00008_00009=7) + (field_00001_00009=7) + (field_00006_00009=7))=tv=1))
c Var 'aux446' direct represents '0' with '-8507'
c Var 'aux446' direct represents '1' with '8507'
c Var 'aux446' order represents '1' with '1'
c Var 'aux446' order represents '0' with '-8507'
c Encoding variable: aux447 with domain: bool (representing constraint (((field_00004_00009=8) + (field_00009_00009=8) + (field_00002_00009=8) + (field_00003_00009=8) + (field_00008_00009=8) + (field_00001_00009=8) + (field_00006_00009=8))=tv=1))
c Var 'aux447' direct represents '0' with '-8508'
c Var 'aux447' direct represents '1' with '8508'
c Var 'aux447' order represents '1' with '1'
c Var 'aux447' order represents '0' with '-8508'
c Encoding variable: aux448 with domain: bool (representing constraint (((field_00004_00009=9) + (field_00009_00009=9) + (field_00002_00009=9) + (field_00003_00009=9) + (field_00008_00009=9) + (field_00001_00009=9) + (field_00006_00009=9))=tv=1))
c Var 'aux448' direct represents '0' with '-8509'
c Var 'aux448' direct represents '1' with '8509'
c Var 'aux448' order represents '1' with '1'
c Var 'aux448' order represents '0' with '-8509'
c Encoding variable: aux449 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00001_00009=1)))
c Both direct and order encoding.
c Var 'aux449' order represents '0' with '8510'
c Var 'aux449' direct represents '0' with '8510'
c Var 'aux449' order represents '1' with '8511'
-8510 8511 0
c Var 'aux449' direct represents '1' with '8512'
8510 -8511 8512 0
-8512 8511 0
-8512 -8510 0
c Var 'aux449' direct represents '2' with '-8511'
8510 8512 -8511 0
c Encoding variable: aux450 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux450' order represents '0' with '8513'
c Var 'aux450' direct represents '0' with '8513'
c Var 'aux450' order represents '1' with '8514'
-8513 8514 0
c Var 'aux450' direct represents '1' with '8515'
8513 -8514 8515 0
-8515 8514 0
-8515 -8513 0
c Var 'aux450' direct represents '2' with '-8514'
8513 8515 -8514 0
c Encoding variable: aux451 with domain: int(0..2) (representing constraint ((field_00001_00006=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux451' order represents '0' with '8516'
c Var 'aux451' direct represents '0' with '8516'
c Var 'aux451' order represents '1' with '8517'
-8516 8517 0
c Var 'aux451' direct represents '1' with '8518'
8516 -8517 8518 0
-8518 8517 0
-8518 -8516 0
c Var 'aux451' direct represents '2' with '-8517'
8516 8518 -8517 0
c Encoding variable: aux452 with domain: int(0..2) (representing constraint ((field_00001_00005=1) + (field_00001_00003=1)))
c Both direct and order encoding.
c Var 'aux452' order represents '0' with '8519'
c Var 'aux452' direct represents '0' with '8519'
c Var 'aux452' order represents '1' with '8520'
-8519 8520 0
c Var 'aux452' direct represents '1' with '8521'
8519 -8520 8521 0
-8521 8520 0
-8521 -8519 0
c Var 'aux452' direct represents '2' with '-8520'
8519 8521 -8520 0
c Encoding variable: aux453 with domain: int(0..4) (representing constraint (aux449 + aux452))
c Both direct and order encoding.
c Var 'aux453' order represents '0' with '8522'
c Var 'aux453' direct represents '0' with '8522'
c Var 'aux453' order represents '1' with '8523'
-8522 8523 0
c Var 'aux453' direct represents '1' with '8524'
8522 -8523 8524 0
-8524 8523 0
-8524 -8522 0
c Var 'aux453' order represents '2' with '8525'
-8523 8525 0
c Var 'aux453' direct represents '2' with '8526'
8523 -8525 8526 0
-8526 8525 0
-8526 -8523 0
c Var 'aux453' order represents '3' with '8527'
-8525 8527 0
c Var 'aux453' direct represents '3' with '8528'
8525 -8527 8528 0
-8528 8527 0
-8528 -8525 0
c Var 'aux453' direct represents '4' with '-8527'
8522 8524 8526 8528 -8527 0
c Encoding variable: aux454 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00001_00009=2)))
c Both direct and order encoding.
c Var 'aux454' order represents '0' with '8529'
c Var 'aux454' direct represents '0' with '8529'
c Var 'aux454' order represents '1' with '8530'
-8529 8530 0
c Var 'aux454' direct represents '1' with '8531'
8529 -8530 8531 0
-8531 8530 0
-8531 -8529 0
c Var 'aux454' direct represents '2' with '-8530'
8529 8531 -8530 0
c Encoding variable: aux455 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux455' order represents '0' with '8532'
c Var 'aux455' direct represents '0' with '8532'
c Var 'aux455' order represents '1' with '8533'
-8532 8533 0
c Var 'aux455' direct represents '1' with '8534'
8532 -8533 8534 0
-8534 8533 0
-8534 -8532 0
c Var 'aux455' direct represents '2' with '-8533'
8532 8534 -8533 0
c Encoding variable: aux456 with domain: int(0..2) (representing constraint ((field_00001_00006=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux456' order represents '0' with '8535'
c Var 'aux456' direct represents '0' with '8535'
c Var 'aux456' order represents '1' with '8536'
-8535 8536 0
c Var 'aux456' direct represents '1' with '8537'
8535 -8536 8537 0
-8537 8536 0
-8537 -8535 0
c Var 'aux456' direct represents '2' with '-8536'
8535 8537 -8536 0
c Encoding variable: aux457 with domain: int(0..2) (representing constraint ((field_00001_00005=2) + (field_00001_00003=2)))
c Both direct and order encoding.
c Var 'aux457' order represents '0' with '8538'
c Var 'aux457' direct represents '0' with '8538'
c Var 'aux457' order represents '1' with '8539'
-8538 8539 0
c Var 'aux457' direct represents '1' with '8540'
8538 -8539 8540 0
-8540 8539 0
-8540 -8538 0
c Var 'aux457' direct represents '2' with '-8539'
8538 8540 -8539 0
c Encoding variable: aux458 with domain: int(0..4) (representing constraint (aux454 + aux457))
c Both direct and order encoding.
c Var 'aux458' order represents '0' with '8541'
c Var 'aux458' direct represents '0' with '8541'
c Var 'aux458' order represents '1' with '8542'
-8541 8542 0
c Var 'aux458' direct represents '1' with '8543'
8541 -8542 8543 0
-8543 8542 0
-8543 -8541 0
c Var 'aux458' order represents '2' with '8544'
-8542 8544 0
c Var 'aux458' direct represents '2' with '8545'
8542 -8544 8545 0
-8545 8544 0
-8545 -8542 0
c Var 'aux458' order represents '3' with '8546'
-8544 8546 0
c Var 'aux458' direct represents '3' with '8547'
8544 -8546 8547 0
-8547 8546 0
-8547 -8544 0
c Var 'aux458' direct represents '4' with '-8546'
8541 8543 8545 8547 -8546 0
c Encoding variable: aux459 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00001_00009=3)))
c Both direct and order encoding.
c Var 'aux459' order represents '0' with '8548'
c Var 'aux459' direct represents '0' with '8548'
c Var 'aux459' order represents '1' with '8549'
-8548 8549 0
c Var 'aux459' direct represents '1' with '8550'
8548 -8549 8550 0
-8550 8549 0
-8550 -8548 0
c Var 'aux459' direct represents '2' with '-8549'
8548 8550 -8549 0
c Encoding variable: aux460 with domain: int(0..2) (representing constraint ((field_00001_00008=3) + (field_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux460' order represents '0' with '8551'
c Var 'aux460' direct represents '0' with '8551'
c Var 'aux460' order represents '1' with '8552'
-8551 8552 0
c Var 'aux460' direct represents '1' with '8553'
8551 -8552 8553 0
-8553 8552 0
-8553 -8551 0
c Var 'aux460' direct represents '2' with '-8552'
8551 8553 -8552 0
c Encoding variable: aux461 with domain: int(0..2) (representing constraint ((field_00001_00006=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux461' order represents '0' with '8554'
c Var 'aux461' direct represents '0' with '8554'
c Var 'aux461' order represents '1' with '8555'
-8554 8555 0
c Var 'aux461' direct represents '1' with '8556'
8554 -8555 8556 0
-8556 8555 0
-8556 -8554 0
c Var 'aux461' direct represents '2' with '-8555'
8554 8556 -8555 0
c Encoding variable: aux462 with domain: int(0..2) (representing constraint ((field_00001_00005=3) + (field_00001_00003=3)))
c Both direct and order encoding.
c Var 'aux462' order represents '0' with '8557'
c Var 'aux462' direct represents '0' with '8557'
c Var 'aux462' order represents '1' with '8558'
-8557 8558 0
c Var 'aux462' direct represents '1' with '8559'
8557 -8558 8559 0
-8559 8558 0
-8559 -8557 0
c Var 'aux462' direct represents '2' with '-8558'
8557 8559 -8558 0
c Encoding variable: aux463 with domain: int(0..4) (representing constraint (aux459 + aux462))
c Both direct and order encoding.
c Var 'aux463' order represents '0' with '8560'
c Var 'aux463' direct represents '0' with '8560'
c Var 'aux463' order represents '1' with '8561'
-8560 8561 0
c Var 'aux463' direct represents '1' with '8562'
8560 -8561 8562 0
-8562 8561 0
-8562 -8560 0
c Var 'aux463' order represents '2' with '8563'
-8561 8563 0
c Var 'aux463' direct represents '2' with '8564'
8561 -8563 8564 0
-8564 8563 0
-8564 -8561 0
c Var 'aux463' order represents '3' with '8565'
-8563 8565 0
c Var 'aux463' direct represents '3' with '8566'
8563 -8565 8566 0
-8566 8565 0
-8566 -8563 0
c Var 'aux463' direct represents '4' with '-8565'
8560 8562 8564 8566 -8565 0
c Encoding variable: aux464 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00001_00009=4)))
c Both direct and order encoding.
c Var 'aux464' order represents '0' with '8567'
c Var 'aux464' direct represents '0' with '8567'
c Var 'aux464' order represents '1' with '8568'
-8567 8568 0
c Var 'aux464' direct represents '1' with '8569'
8567 -8568 8569 0
-8569 8568 0
-8569 -8567 0
c Var 'aux464' direct represents '2' with '-8568'
8567 8569 -8568 0
c Encoding variable: aux465 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux465' order represents '0' with '8570'
c Var 'aux465' direct represents '0' with '8570'
c Var 'aux465' order represents '1' with '8571'
-8570 8571 0
c Var 'aux465' direct represents '1' with '8572'
8570 -8571 8572 0
-8572 8571 0
-8572 -8570 0
c Var 'aux465' direct represents '2' with '-8571'
8570 8572 -8571 0
c Encoding variable: aux466 with domain: int(0..2) (representing constraint ((field_00001_00006=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux466' order represents '0' with '8573'
c Var 'aux466' direct represents '0' with '8573'
c Var 'aux466' order represents '1' with '8574'
-8573 8574 0
c Var 'aux466' direct represents '1' with '8575'
8573 -8574 8575 0
-8575 8574 0
-8575 -8573 0
c Var 'aux466' direct represents '2' with '-8574'
8573 8575 -8574 0
c Encoding variable: aux467 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00001_00003=4)))
c Both direct and order encoding.
c Var 'aux467' order represents '0' with '8576'
c Var 'aux467' direct represents '0' with '8576'
c Var 'aux467' order represents '1' with '8577'
-8576 8577 0
c Var 'aux467' direct represents '1' with '8578'
8576 -8577 8578 0
-8578 8577 0
-8578 -8576 0
c Var 'aux467' direct represents '2' with '-8577'
8576 8578 -8577 0
c Encoding variable: aux468 with domain: int(0..4) (representing constraint (aux464 + aux467))
c Both direct and order encoding.
c Var 'aux468' order represents '0' with '8579'
c Var 'aux468' direct represents '0' with '8579'
c Var 'aux468' order represents '1' with '8580'
-8579 8580 0
c Var 'aux468' direct represents '1' with '8581'
8579 -8580 8581 0
-8581 8580 0
-8581 -8579 0
c Var 'aux468' order represents '2' with '8582'
-8580 8582 0
c Var 'aux468' direct represents '2' with '8583'
8580 -8582 8583 0
-8583 8582 0
-8583 -8580 0
c Var 'aux468' order represents '3' with '8584'
-8582 8584 0
c Var 'aux468' direct represents '3' with '8585'
8582 -8584 8585 0
-8585 8584 0
-8585 -8582 0
c Var 'aux468' direct represents '4' with '-8584'
8579 8581 8583 8585 -8584 0
c Encoding variable: aux469 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00001_00009=5)))
c Both direct and order encoding.
c Var 'aux469' order represents '0' with '8586'
c Var 'aux469' direct represents '0' with '8586'
c Var 'aux469' order represents '1' with '8587'
-8586 8587 0
c Var 'aux469' direct represents '1' with '8588'
8586 -8587 8588 0
-8588 8587 0
-8588 -8586 0
c Var 'aux469' direct represents '2' with '-8587'
8586 8588 -8587 0
c Encoding variable: aux470 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00001_00002=5)))
c Both direct and order encoding.
c Var 'aux470' order represents '0' with '8589'
c Var 'aux470' direct represents '0' with '8589'
c Var 'aux470' order represents '1' with '8590'
-8589 8590 0
c Var 'aux470' direct represents '1' with '8591'
8589 -8590 8591 0
-8591 8590 0
-8591 -8589 0
c Var 'aux470' direct represents '2' with '-8590'
8589 8591 -8590 0
c Encoding variable: aux471 with domain: int(1..2) (representing constraint ((field_00001_00007=5) + (field_00001_00004=5)))
c Var 'aux471' direct represents '1' with '-8592'
c Var 'aux471' direct represents '2' with '8592'
c Var 'aux471' order represents '2' with '1'
c Var 'aux471' order represents '1' with '-8592'
c Encoding variable: aux472 with domain: int(1..3) (representing constraint ((field_00001_00006=5) + aux471))
c Both direct and order encoding.
c Var 'aux472' order represents '1' with '8593'
c Var 'aux472' direct represents '1' with '8593'
c Var 'aux472' order represents '2' with '8594'
-8593 8594 0
c Var 'aux472' direct represents '2' with '8595'
8593 -8594 8595 0
-8595 8594 0
-8595 -8593 0
c Var 'aux472' direct represents '3' with '-8594'
8593 8595 -8594 0
c Encoding variable: aux473 with domain: int(0..2) (representing constraint ((field_00001_00005=5) + (field_00001_00003=5)))
c Both direct and order encoding.
c Var 'aux473' order represents '0' with '8596'
c Var 'aux473' direct represents '0' with '8596'
c Var 'aux473' order represents '1' with '8597'
-8596 8597 0
c Var 'aux473' direct represents '1' with '8598'
8596 -8597 8598 0
-8598 8597 0
-8598 -8596 0
c Var 'aux473' direct represents '2' with '-8597'
8596 8598 -8597 0
c Encoding variable: aux474 with domain: int(0..4) (representing constraint (aux469 + aux473))
c Both direct and order encoding.
c Var 'aux474' order represents '0' with '8599'
c Var 'aux474' direct represents '0' with '8599'
c Var 'aux474' order represents '1' with '8600'
-8599 8600 0
c Var 'aux474' direct represents '1' with '8601'
8599 -8600 8601 0
-8601 8600 0
-8601 -8599 0
c Var 'aux474' order represents '2' with '8602'
-8600 8602 0
c Var 'aux474' direct represents '2' with '8603'
8600 -8602 8603 0
-8603 8602 0
-8603 -8600 0
c Var 'aux474' order represents '3' with '8604'
-8602 8604 0
c Var 'aux474' direct represents '3' with '8605'
8602 -8604 8605 0
-8605 8604 0
-8605 -8602 0
c Var 'aux474' direct represents '4' with '-8604'
8599 8601 8603 8605 -8604 0
c Encoding variable: aux475 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00001_00009=6)))
c Both direct and order encoding.
c Var 'aux475' order represents '0' with '8606'
c Var 'aux475' direct represents '0' with '8606'
c Var 'aux475' order represents '1' with '8607'
-8606 8607 0
c Var 'aux475' direct represents '1' with '8608'
8606 -8607 8608 0
-8608 8607 0
-8608 -8606 0
c Var 'aux475' direct represents '2' with '-8607'
8606 8608 -8607 0
c Encoding variable: aux476 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00001_00002=6)))
c Both direct and order encoding.
c Var 'aux476' order represents '0' with '8609'
c Var 'aux476' direct represents '0' with '8609'
c Var 'aux476' order represents '1' with '8610'
-8609 8610 0
c Var 'aux476' direct represents '1' with '8611'
8609 -8610 8611 0
-8611 8610 0
-8611 -8609 0
c Var 'aux476' direct represents '2' with '-8610'
8609 8611 -8610 0
c Encoding variable: aux477 with domain: int(0..2) (representing constraint ((field_00001_00006=6) + (field_00001_00004=6)))
c Both direct and order encoding.
c Var 'aux477' order represents '0' with '8612'
c Var 'aux477' direct represents '0' with '8612'
c Var 'aux477' order represents '1' with '8613'
-8612 8613 0
c Var 'aux477' direct represents '1' with '8614'
8612 -8613 8614 0
-8614 8613 0
-8614 -8612 0
c Var 'aux477' direct represents '2' with '-8613'
8612 8614 -8613 0
c Encoding variable: aux478 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00001_00003=6)))
c Both direct and order encoding.
c Var 'aux478' order represents '0' with '8615'
c Var 'aux478' direct represents '0' with '8615'
c Var 'aux478' order represents '1' with '8616'
-8615 8616 0
c Var 'aux478' direct represents '1' with '8617'
8615 -8616 8617 0
-8617 8616 0
-8617 -8615 0
c Var 'aux478' direct represents '2' with '-8616'
8615 8617 -8616 0
c Encoding variable: aux479 with domain: int(0..4) (representing constraint (aux475 + aux478))
c Both direct and order encoding.
c Var 'aux479' order represents '0' with '8618'
c Var 'aux479' direct represents '0' with '8618'
c Var 'aux479' order represents '1' with '8619'
-8618 8619 0
c Var 'aux479' direct represents '1' with '8620'
8618 -8619 8620 0
-8620 8619 0
-8620 -8618 0
c Var 'aux479' order represents '2' with '8621'
-8619 8621 0
c Var 'aux479' direct represents '2' with '8622'
8619 -8621 8622 0
-8622 8621 0
-8622 -8619 0
c Var 'aux479' order represents '3' with '8623'
-8621 8623 0
c Var 'aux479' direct represents '3' with '8624'
8621 -8623 8624 0
-8624 8623 0
-8624 -8621 0
c Var 'aux479' direct represents '4' with '-8623'
8618 8620 8622 8624 -8623 0
c Encoding variable: aux480 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00001_00009=7)))
c Both direct and order encoding.
c Var 'aux480' order represents '0' with '8625'
c Var 'aux480' direct represents '0' with '8625'
c Var 'aux480' order represents '1' with '8626'
-8625 8626 0
c Var 'aux480' direct represents '1' with '8627'
8625 -8626 8627 0
-8627 8626 0
-8627 -8625 0
c Var 'aux480' direct represents '2' with '-8626'
8625 8627 -8626 0
c Encoding variable: aux481 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00001_00002=7)))
c Both direct and order encoding.
c Var 'aux481' order represents '0' with '8628'
c Var 'aux481' direct represents '0' with '8628'
c Var 'aux481' order represents '1' with '8629'
-8628 8629 0
c Var 'aux481' direct represents '1' with '8630'
8628 -8629 8630 0
-8630 8629 0
-8630 -8628 0
c Var 'aux481' direct represents '2' with '-8629'
8628 8630 -8629 0
c Encoding variable: aux482 with domain: int(0..2) (representing constraint ((field_00001_00006=7) + (field_00001_00004=7)))
c Both direct and order encoding.
c Var 'aux482' order represents '0' with '8631'
c Var 'aux482' direct represents '0' with '8631'
c Var 'aux482' order represents '1' with '8632'
-8631 8632 0
c Var 'aux482' direct represents '1' with '8633'
8631 -8632 8633 0
-8633 8632 0
-8633 -8631 0
c Var 'aux482' direct represents '2' with '-8632'
8631 8633 -8632 0
c Encoding variable: aux483 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00001_00003=7)))
c Both direct and order encoding.
c Var 'aux483' order represents '0' with '8634'
c Var 'aux483' direct represents '0' with '8634'
c Var 'aux483' order represents '1' with '8635'
-8634 8635 0
c Var 'aux483' direct represents '1' with '8636'
8634 -8635 8636 0
-8636 8635 0
-8636 -8634 0
c Var 'aux483' direct represents '2' with '-8635'
8634 8636 -8635 0
c Encoding variable: aux484 with domain: int(0..4) (representing constraint (aux480 + aux483))
c Both direct and order encoding.
c Var 'aux484' order represents '0' with '8637'
c Var 'aux484' direct represents '0' with '8637'
c Var 'aux484' order represents '1' with '8638'
-8637 8638 0
c Var 'aux484' direct represents '1' with '8639'
8637 -8638 8639 0
-8639 8638 0
-8639 -8637 0
c Var 'aux484' order represents '2' with '8640'
-8638 8640 0
c Var 'aux484' direct represents '2' with '8641'
8638 -8640 8641 0
-8641 8640 0
-8641 -8638 0
c Var 'aux484' order represents '3' with '8642'
-8640 8642 0
c Var 'aux484' direct represents '3' with '8643'
8640 -8642 8643 0
-8643 8642 0
-8643 -8640 0
c Var 'aux484' direct represents '4' with '-8642'
8637 8639 8641 8643 -8642 0
c Encoding variable: aux485 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux485' order represents '0' with '8644'
c Var 'aux485' direct represents '0' with '8644'
c Var 'aux485' order represents '1' with '8645'
-8644 8645 0
c Var 'aux485' direct represents '1' with '8646'
8644 -8645 8646 0
-8646 8645 0
-8646 -8644 0
c Var 'aux485' direct represents '2' with '-8645'
8644 8646 -8645 0
c Encoding variable: aux486 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00001_00002=8)))
c Both direct and order encoding.
c Var 'aux486' order represents '0' with '8647'
c Var 'aux486' direct represents '0' with '8647'
c Var 'aux486' order represents '1' with '8648'
-8647 8648 0
c Var 'aux486' direct represents '1' with '8649'
8647 -8648 8649 0
-8649 8648 0
-8649 -8647 0
c Var 'aux486' direct represents '2' with '-8648'
8647 8649 -8648 0
c Encoding variable: aux487 with domain: int(0..2) (representing constraint ((field_00001_00006=8) + (field_00001_00004=8)))
c Both direct and order encoding.
c Var 'aux487' order represents '0' with '8650'
c Var 'aux487' direct represents '0' with '8650'
c Var 'aux487' order represents '1' with '8651'
-8650 8651 0
c Var 'aux487' direct represents '1' with '8652'
8650 -8651 8652 0
-8652 8651 0
-8652 -8650 0
c Var 'aux487' direct represents '2' with '-8651'
8650 8652 -8651 0
c Encoding variable: aux488 with domain: int(0..2) (representing constraint ((field_00001_00005=8) + (field_00001_00003=8)))
c Both direct and order encoding.
c Var 'aux488' order represents '0' with '8653'
c Var 'aux488' direct represents '0' with '8653'
c Var 'aux488' order represents '1' with '8654'
-8653 8654 0
c Var 'aux488' direct represents '1' with '8655'
8653 -8654 8655 0
-8655 8654 0
-8655 -8653 0
c Var 'aux488' direct represents '2' with '-8654'
8653 8655 -8654 0
c Encoding variable: aux489 with domain: int(0..4) (representing constraint (aux485 + aux488))
c Both direct and order encoding.
c Var 'aux489' order represents '0' with '8656'
c Var 'aux489' direct represents '0' with '8656'
c Var 'aux489' order represents '1' with '8657'
-8656 8657 0
c Var 'aux489' direct represents '1' with '8658'
8656 -8657 8658 0
-8658 8657 0
-8658 -8656 0
c Var 'aux489' order represents '2' with '8659'
-8657 8659 0
c Var 'aux489' direct represents '2' with '8660'
8657 -8659 8660 0
-8660 8659 0
-8660 -8657 0
c Var 'aux489' order represents '3' with '8661'
-8659 8661 0
c Var 'aux489' direct represents '3' with '8662'
8659 -8661 8662 0
-8662 8661 0
-8662 -8659 0
c Var 'aux489' direct represents '4' with '-8661'
8656 8658 8660 8662 -8661 0
c Encoding variable: aux490 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux490' order represents '0' with '8663'
c Var 'aux490' direct represents '0' with '8663'
c Var 'aux490' order represents '1' with '8664'
-8663 8664 0
c Var 'aux490' direct represents '1' with '8665'
8663 -8664 8665 0
-8665 8664 0
-8665 -8663 0
c Var 'aux490' direct represents '2' with '-8664'
8663 8665 -8664 0
c Encoding variable: aux491 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00001_00002=9)))
c Both direct and order encoding.
c Var 'aux491' order represents '0' with '8666'
c Var 'aux491' direct represents '0' with '8666'
c Var 'aux491' order represents '1' with '8667'
-8666 8667 0
c Var 'aux491' direct represents '1' with '8668'
8666 -8667 8668 0
-8668 8667 0
-8668 -8666 0
c Var 'aux491' direct represents '2' with '-8667'
8666 8668 -8667 0
c Encoding variable: aux492 with domain: int(0..2) (representing constraint ((field_00001_00006=9) + (field_00001_00004=9)))
c Both direct and order encoding.
c Var 'aux492' order represents '0' with '8669'
c Var 'aux492' direct represents '0' with '8669'
c Var 'aux492' order represents '1' with '8670'
-8669 8670 0
c Var 'aux492' direct represents '1' with '8671'
8669 -8670 8671 0
-8671 8670 0
-8671 -8669 0
c Var 'aux492' direct represents '2' with '-8670'
8669 8671 -8670 0
c Encoding variable: aux493 with domain: int(0..2) (representing constraint ((field_00001_00005=9) + (field_00001_00003=9)))
c Both direct and order encoding.
c Var 'aux493' order represents '0' with '8672'
c Var 'aux493' direct represents '0' with '8672'
c Var 'aux493' order represents '1' with '8673'
-8672 8673 0
c Var 'aux493' direct represents '1' with '8674'
8672 -8673 8674 0
-8674 8673 0
-8674 -8672 0
c Var 'aux493' direct represents '2' with '-8673'
8672 8674 -8673 0
c Encoding variable: aux494 with domain: int(0..4) (representing constraint (aux490 + aux493))
c Both direct and order encoding.
c Var 'aux494' order represents '0' with '8675'
c Var 'aux494' direct represents '0' with '8675'
c Var 'aux494' order represents '1' with '8676'
-8675 8676 0
c Var 'aux494' direct represents '1' with '8677'
8675 -8676 8677 0
-8677 8676 0
-8677 -8675 0
c Var 'aux494' order represents '2' with '8678'
-8676 8678 0
c Var 'aux494' direct represents '2' with '8679'
8676 -8678 8679 0
-8679 8678 0
-8679 -8676 0
c Var 'aux494' order represents '3' with '8680'
-8678 8680 0
c Var 'aux494' direct represents '3' with '8681'
8678 -8680 8681 0
-8681 8680 0
-8681 -8678 0
c Var 'aux494' direct represents '4' with '-8680'
8675 8677 8679 8681 -8680 0
c Encoding variable: aux495 with domain: int(0..2) (representing constraint ((field_00002_00001=1) + (field_00002_00009=1)))
c Both direct and order encoding.
c Var 'aux495' order represents '0' with '8682'
c Var 'aux495' direct represents '0' with '8682'
c Var 'aux495' order represents '1' with '8683'
-8682 8683 0
c Var 'aux495' direct represents '1' with '8684'
8682 -8683 8684 0
-8684 8683 0
-8684 -8682 0
c Var 'aux495' direct represents '2' with '-8683'
8682 8684 -8683 0
c Encoding variable: aux496 with domain: int(0..2) (representing constraint ((field_00002_00007=1) + (field_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux496' order represents '0' with '8685'
c Var 'aux496' direct represents '0' with '8685'
c Var 'aux496' order represents '1' with '8686'
-8685 8686 0
c Var 'aux496' direct represents '1' with '8687'
8685 -8686 8687 0
-8687 8686 0
-8687 -8685 0
c Var 'aux496' direct represents '2' with '-8686'
8685 8687 -8686 0
c Encoding variable: aux497 with domain: int(0..2) (representing constraint ((field_00002_00006=1) + (field_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux497' order represents '0' with '8688'
c Var 'aux497' direct represents '0' with '8688'
c Var 'aux497' order represents '1' with '8689'
-8688 8689 0
c Var 'aux497' direct represents '1' with '8690'
8688 -8689 8690 0
-8690 8689 0
-8690 -8688 0
c Var 'aux497' direct represents '2' with '-8689'
8688 8690 -8689 0
c Encoding variable: aux498 with domain: int(0..2) (representing constraint ((field_00002_00005=1) + (field_00002_00003=1)))
c Both direct and order encoding.
c Var 'aux498' order represents '0' with '8691'
c Var 'aux498' direct represents '0' with '8691'
c Var 'aux498' order represents '1' with '8692'
-8691 8692 0
c Var 'aux498' direct represents '1' with '8693'
8691 -8692 8693 0
-8693 8692 0
-8693 -8691 0
c Var 'aux498' direct represents '2' with '-8692'
8691 8693 -8692 0
c Encoding variable: aux499 with domain: int(0..4) (representing constraint (aux495 + aux498))
c Both direct and order encoding.
c Var 'aux499' order represents '0' with '8694'
c Var 'aux499' direct represents '0' with '8694'
c Var 'aux499' order represents '1' with '8695'
-8694 8695 0
c Var 'aux499' direct represents '1' with '8696'
8694 -8695 8696 0
-8696 8695 0
-8696 -8694 0
c Var 'aux499' order represents '2' with '8697'
-8695 8697 0
c Var 'aux499' direct represents '2' with '8698'
8695 -8697 8698 0
-8698 8697 0
-8698 -8695 0
c Var 'aux499' order represents '3' with '8699'
-8697 8699 0
c Var 'aux499' direct represents '3' with '8700'
8697 -8699 8700 0
-8700 8699 0
-8700 -8697 0
c Var 'aux499' direct represents '4' with '-8699'
8694 8696 8698 8700 -8699 0
c Encoding variable: aux500 with domain: int(0..2) (representing constraint ((field_00002_00001=2) + (field_00002_00009=2)))
c Both direct and order encoding.
c Var 'aux500' order represents '0' with '8701'
c Var 'aux500' direct represents '0' with '8701'
c Var 'aux500' order represents '1' with '8702'
-8701 8702 0
c Var 'aux500' direct represents '1' with '8703'
8701 -8702 8703 0
-8703 8702 0
-8703 -8701 0
c Var 'aux500' direct represents '2' with '-8702'
8701 8703 -8702 0
c Encoding variable: aux501 with domain: int(0..2) (representing constraint ((field_00002_00007=2) + (field_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux501' order represents '0' with '8704'
c Var 'aux501' direct represents '0' with '8704'
c Var 'aux501' order represents '1' with '8705'
-8704 8705 0
c Var 'aux501' direct represents '1' with '8706'
8704 -8705 8706 0
-8706 8705 0
-8706 -8704 0
c Var 'aux501' direct represents '2' with '-8705'
8704 8706 -8705 0
c Encoding variable: aux502 with domain: int(0..2) (representing constraint ((field_00002_00006=2) + (field_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux502' order represents '0' with '8707'
c Var 'aux502' direct represents '0' with '8707'
c Var 'aux502' order represents '1' with '8708'
-8707 8708 0
c Var 'aux502' direct represents '1' with '8709'
8707 -8708 8709 0
-8709 8708 0
-8709 -8707 0
c Var 'aux502' direct represents '2' with '-8708'
8707 8709 -8708 0
c Encoding variable: aux503 with domain: int(0..2) (representing constraint ((field_00002_00005=2) + (field_00002_00003=2)))
c Both direct and order encoding.
c Var 'aux503' order represents '0' with '8710'
c Var 'aux503' direct represents '0' with '8710'
c Var 'aux503' order represents '1' with '8711'
-8710 8711 0
c Var 'aux503' direct represents '1' with '8712'
8710 -8711 8712 0
-8712 8711 0
-8712 -8710 0
c Var 'aux503' direct represents '2' with '-8711'
8710 8712 -8711 0
c Encoding variable: aux504 with domain: int(0..4) (representing constraint (aux500 + aux503))
c Both direct and order encoding.
c Var 'aux504' order represents '0' with '8713'
c Var 'aux504' direct represents '0' with '8713'
c Var 'aux504' order represents '1' with '8714'
-8713 8714 0
c Var 'aux504' direct represents '1' with '8715'
8713 -8714 8715 0
-8715 8714 0
-8715 -8713 0
c Var 'aux504' order represents '2' with '8716'
-8714 8716 0
c Var 'aux504' direct represents '2' with '8717'
8714 -8716 8717 0
-8717 8716 0
-8717 -8714 0
c Var 'aux504' order represents '3' with '8718'
-8716 8718 0
c Var 'aux504' direct represents '3' with '8719'
8716 -8718 8719 0
-8719 8718 0
-8719 -8716 0
c Var 'aux504' direct represents '4' with '-8718'
8713 8715 8717 8719 -8718 0
c Encoding variable: aux505 with domain: int(0..2) (representing constraint ((field_00002_00001=3) + (field_00002_00009=3)))
c Both direct and order encoding.
c Var 'aux505' order represents '0' with '8720'
c Var 'aux505' direct represents '0' with '8720'
c Var 'aux505' order represents '1' with '8721'
-8720 8721 0
c Var 'aux505' direct represents '1' with '8722'
8720 -8721 8722 0
-8722 8721 0
-8722 -8720 0
c Var 'aux505' direct represents '2' with '-8721'
8720 8722 -8721 0
c Encoding variable: aux506 with domain: int(0..2) (representing constraint ((field_00002_00007=3) + (field_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux506' order represents '0' with '8723'
c Var 'aux506' direct represents '0' with '8723'
c Var 'aux506' order represents '1' with '8724'
-8723 8724 0
c Var 'aux506' direct represents '1' with '8725'
8723 -8724 8725 0
-8725 8724 0
-8725 -8723 0
c Var 'aux506' direct represents '2' with '-8724'
8723 8725 -8724 0
c Encoding variable: aux507 with domain: int(0..2) (representing constraint ((field_00002_00006=3) + (field_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux507' order represents '0' with '8726'
c Var 'aux507' direct represents '0' with '8726'
c Var 'aux507' order represents '1' with '8727'
-8726 8727 0
c Var 'aux507' direct represents '1' with '8728'
8726 -8727 8728 0
-8728 8727 0
-8728 -8726 0
c Var 'aux507' direct represents '2' with '-8727'
8726 8728 -8727 0
c Encoding variable: aux508 with domain: int(0..2) (representing constraint ((field_00002_00005=3) + (field_00002_00003=3)))
c Both direct and order encoding.
c Var 'aux508' order represents '0' with '8729'
c Var 'aux508' direct represents '0' with '8729'
c Var 'aux508' order represents '1' with '8730'
-8729 8730 0
c Var 'aux508' direct represents '1' with '8731'
8729 -8730 8731 0
-8731 8730 0
-8731 -8729 0
c Var 'aux508' direct represents '2' with '-8730'
8729 8731 -8730 0
c Encoding variable: aux509 with domain: int(0..4) (representing constraint (aux505 + aux508))
c Both direct and order encoding.
c Var 'aux509' order represents '0' with '8732'
c Var 'aux509' direct represents '0' with '8732'
c Var 'aux509' order represents '1' with '8733'
-8732 8733 0
c Var 'aux509' direct represents '1' with '8734'
8732 -8733 8734 0
-8734 8733 0
-8734 -8732 0
c Var 'aux509' order represents '2' with '8735'
-8733 8735 0
c Var 'aux509' direct represents '2' with '8736'
8733 -8735 8736 0
-8736 8735 0
-8736 -8733 0
c Var 'aux509' order represents '3' with '8737'
-8735 8737 0
c Var 'aux509' direct represents '3' with '8738'
8735 -8737 8738 0
-8738 8737 0
-8738 -8735 0
c Var 'aux509' direct represents '4' with '-8737'
8732 8734 8736 8738 -8737 0
c Encoding variable: aux510 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00002_00009=4)))
c Both direct and order encoding.
c Var 'aux510' order represents '0' with '8739'
c Var 'aux510' direct represents '0' with '8739'
c Var 'aux510' order represents '1' with '8740'
-8739 8740 0
c Var 'aux510' direct represents '1' with '8741'
8739 -8740 8741 0
-8741 8740 0
-8741 -8739 0
c Var 'aux510' direct represents '2' with '-8740'
8739 8741 -8740 0
c Encoding variable: aux511 with domain: int(0..2) (representing constraint ((field_00002_00007=4) + (field_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux511' order represents '0' with '8742'
c Var 'aux511' direct represents '0' with '8742'
c Var 'aux511' order represents '1' with '8743'
-8742 8743 0
c Var 'aux511' direct represents '1' with '8744'
8742 -8743 8744 0
-8744 8743 0
-8744 -8742 0
c Var 'aux511' direct represents '2' with '-8743'
8742 8744 -8743 0
c Encoding variable: aux512 with domain: int(0..2) (representing constraint ((field_00002_00006=4) + (field_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux512' order represents '0' with '8745'
c Var 'aux512' direct represents '0' with '8745'
c Var 'aux512' order represents '1' with '8746'
-8745 8746 0
c Var 'aux512' direct represents '1' with '8747'
8745 -8746 8747 0
-8747 8746 0
-8747 -8745 0
c Var 'aux512' direct represents '2' with '-8746'
8745 8747 -8746 0
c Encoding variable: aux513 with domain: int(0..2) (representing constraint ((field_00002_00005=4) + (field_00002_00003=4)))
c Both direct and order encoding.
c Var 'aux513' order represents '0' with '8748'
c Var 'aux513' direct represents '0' with '8748'
c Var 'aux513' order represents '1' with '8749'
-8748 8749 0
c Var 'aux513' direct represents '1' with '8750'
8748 -8749 8750 0
-8750 8749 0
-8750 -8748 0
c Var 'aux513' direct represents '2' with '-8749'
8748 8750 -8749 0
c Encoding variable: aux514 with domain: int(0..4) (representing constraint (aux510 + aux513))
c Both direct and order encoding.
c Var 'aux514' order represents '0' with '8751'
c Var 'aux514' direct represents '0' with '8751'
c Var 'aux514' order represents '1' with '8752'
-8751 8752 0
c Var 'aux514' direct represents '1' with '8753'
8751 -8752 8753 0
-8753 8752 0
-8753 -8751 0
c Var 'aux514' order represents '2' with '8754'
-8752 8754 0
c Var 'aux514' direct represents '2' with '8755'
8752 -8754 8755 0
-8755 8754 0
-8755 -8752 0
c Var 'aux514' order represents '3' with '8756'
-8754 8756 0
c Var 'aux514' direct represents '3' with '8757'
8754 -8756 8757 0
-8757 8756 0
-8757 -8754 0
c Var 'aux514' direct represents '4' with '-8756'
8751 8753 8755 8757 -8756 0
c Encoding variable: aux515 with domain: int(0..2) (representing constraint ((field_00002_00001=5) + (field_00002_00009=5)))
c Both direct and order encoding.
c Var 'aux515' order represents '0' with '8758'
c Var 'aux515' direct represents '0' with '8758'
c Var 'aux515' order represents '1' with '8759'
-8758 8759 0
c Var 'aux515' direct represents '1' with '8760'
8758 -8759 8760 0
-8760 8759 0
-8760 -8758 0
c Var 'aux515' direct represents '2' with '-8759'
8758 8760 -8759 0
c Encoding variable: aux516 with domain: int(0..2) (representing constraint ((field_00002_00007=5) + (field_00002_00002=5)))
c Both direct and order encoding.
c Var 'aux516' order represents '0' with '8761'
c Var 'aux516' direct represents '0' with '8761'
c Var 'aux516' order represents '1' with '8762'
-8761 8762 0
c Var 'aux516' direct represents '1' with '8763'
8761 -8762 8763 0
-8763 8762 0
-8763 -8761 0
c Var 'aux516' direct represents '2' with '-8762'
8761 8763 -8762 0
c Encoding variable: aux517 with domain: int(0..2) (representing constraint ((field_00002_00006=5) + (field_00002_00004=5)))
c Both direct and order encoding.
c Var 'aux517' order represents '0' with '8764'
c Var 'aux517' direct represents '0' with '8764'
c Var 'aux517' order represents '1' with '8765'
-8764 8765 0
c Var 'aux517' direct represents '1' with '8766'
8764 -8765 8766 0
-8766 8765 0
-8766 -8764 0
c Var 'aux517' direct represents '2' with '-8765'
8764 8766 -8765 0
c Encoding variable: aux518 with domain: int(0..2) (representing constraint ((field_00002_00005=5) + (field_00002_00003=5)))
c Both direct and order encoding.
c Var 'aux518' order represents '0' with '8767'
c Var 'aux518' direct represents '0' with '8767'
c Var 'aux518' order represents '1' with '8768'
-8767 8768 0
c Var 'aux518' direct represents '1' with '8769'
8767 -8768 8769 0
-8769 8768 0
-8769 -8767 0
c Var 'aux518' direct represents '2' with '-8768'
8767 8769 -8768 0
c Encoding variable: aux519 with domain: int(0..4) (representing constraint (aux515 + aux518))
c Both direct and order encoding.
c Var 'aux519' order represents '0' with '8770'
c Var 'aux519' direct represents '0' with '8770'
c Var 'aux519' order represents '1' with '8771'
-8770 8771 0
c Var 'aux519' direct represents '1' with '8772'
8770 -8771 8772 0
-8772 8771 0
-8772 -8770 0
c Var 'aux519' order represents '2' with '8773'
-8771 8773 0
c Var 'aux519' direct represents '2' with '8774'
8771 -8773 8774 0
-8774 8773 0
-8774 -8771 0
c Var 'aux519' order represents '3' with '8775'
-8773 8775 0
c Var 'aux519' direct represents '3' with '8776'
8773 -8775 8776 0
-8776 8775 0
-8776 -8773 0
c Var 'aux519' direct represents '4' with '-8775'
8770 8772 8774 8776 -8775 0
c Encoding variable: aux520 with domain: int(0..2) (representing constraint ((field_00002_00001=6) + (field_00002_00009=6)))
c Both direct and order encoding.
c Var 'aux520' order represents '0' with '8777'
c Var 'aux520' direct represents '0' with '8777'
c Var 'aux520' order represents '1' with '8778'
-8777 8778 0
c Var 'aux520' direct represents '1' with '8779'
8777 -8778 8779 0
-8779 8778 0
-8779 -8777 0
c Var 'aux520' direct represents '2' with '-8778'
8777 8779 -8778 0
c Encoding variable: aux521 with domain: int(0..2) (representing constraint ((field_00002_00007=6) + (field_00002_00002=6)))
c Both direct and order encoding.
c Var 'aux521' order represents '0' with '8780'
c Var 'aux521' direct represents '0' with '8780'
c Var 'aux521' order represents '1' with '8781'
-8780 8781 0
c Var 'aux521' direct represents '1' with '8782'
8780 -8781 8782 0
-8782 8781 0
-8782 -8780 0
c Var 'aux521' direct represents '2' with '-8781'
8780 8782 -8781 0
c Encoding variable: aux522 with domain: int(0..2) (representing constraint ((field_00002_00006=6) + (field_00002_00004=6)))
c Both direct and order encoding.
c Var 'aux522' order represents '0' with '8783'
c Var 'aux522' direct represents '0' with '8783'
c Var 'aux522' order represents '1' with '8784'
-8783 8784 0
c Var 'aux522' direct represents '1' with '8785'
8783 -8784 8785 0
-8785 8784 0
-8785 -8783 0
c Var 'aux522' direct represents '2' with '-8784'
8783 8785 -8784 0
c Encoding variable: aux523 with domain: int(0..2) (representing constraint ((field_00002_00005=6) + (field_00002_00003=6)))
c Both direct and order encoding.
c Var 'aux523' order represents '0' with '8786'
c Var 'aux523' direct represents '0' with '8786'
c Var 'aux523' order represents '1' with '8787'
-8786 8787 0
c Var 'aux523' direct represents '1' with '8788'
8786 -8787 8788 0
-8788 8787 0
-8788 -8786 0
c Var 'aux523' direct represents '2' with '-8787'
8786 8788 -8787 0
c Encoding variable: aux524 with domain: int(0..4) (representing constraint (aux520 + aux523))
c Both direct and order encoding.
c Var 'aux524' order represents '0' with '8789'
c Var 'aux524' direct represents '0' with '8789'
c Var 'aux524' order represents '1' with '8790'
-8789 8790 0
c Var 'aux524' direct represents '1' with '8791'
8789 -8790 8791 0
-8791 8790 0
-8791 -8789 0
c Var 'aux524' order represents '2' with '8792'
-8790 8792 0
c Var 'aux524' direct represents '2' with '8793'
8790 -8792 8793 0
-8793 8792 0
-8793 -8790 0
c Var 'aux524' order represents '3' with '8794'
-8792 8794 0
c Var 'aux524' direct represents '3' with '8795'
8792 -8794 8795 0
-8795 8794 0
-8795 -8792 0
c Var 'aux524' direct represents '4' with '-8794'
8789 8791 8793 8795 -8794 0
c Encoding variable: aux525 with domain: int(0..2) (representing constraint ((field_00002_00001=7) + (field_00002_00009=7)))
c Both direct and order encoding.
c Var 'aux525' order represents '0' with '8796'
c Var 'aux525' direct represents '0' with '8796'
c Var 'aux525' order represents '1' with '8797'
-8796 8797 0
c Var 'aux525' direct represents '1' with '8798'
8796 -8797 8798 0
-8798 8797 0
-8798 -8796 0
c Var 'aux525' direct represents '2' with '-8797'
8796 8798 -8797 0
c Encoding variable: aux526 with domain: int(1..2) (representing constraint ((field_00002_00008=7) + (field_00002_00002=7)))
c Var 'aux526' direct represents '1' with '-8799'
c Var 'aux526' direct represents '2' with '8799'
c Var 'aux526' order represents '2' with '1'
c Var 'aux526' order represents '1' with '-8799'
c Encoding variable: aux527 with domain: int(1..3) (representing constraint ((field_00002_00007=7) + aux526))
c Both direct and order encoding.
c Var 'aux527' order represents '1' with '8800'
c Var 'aux527' direct represents '1' with '8800'
c Var 'aux527' order represents '2' with '8801'
-8800 8801 0
c Var 'aux527' direct represents '2' with '8802'
8800 -8801 8802 0
-8802 8801 0
-8802 -8800 0
c Var 'aux527' direct represents '3' with '-8801'
8800 8802 -8801 0
c Encoding variable: aux528 with domain: int(0..2) (representing constraint ((field_00002_00006=7) + (field_00002_00004=7)))
c Both direct and order encoding.
c Var 'aux528' order represents '0' with '8803'
c Var 'aux528' direct represents '0' with '8803'
c Var 'aux528' order represents '1' with '8804'
-8803 8804 0
c Var 'aux528' direct represents '1' with '8805'
8803 -8804 8805 0
-8805 8804 0
-8805 -8803 0
c Var 'aux528' direct represents '2' with '-8804'
8803 8805 -8804 0
c Encoding variable: aux529 with domain: int(0..2) (representing constraint ((field_00002_00005=7) + (field_00002_00003=7)))
c Both direct and order encoding.
c Var 'aux529' order represents '0' with '8806'
c Var 'aux529' direct represents '0' with '8806'
c Var 'aux529' order represents '1' with '8807'
-8806 8807 0
c Var 'aux529' direct represents '1' with '8808'
8806 -8807 8808 0
-8808 8807 0
-8808 -8806 0
c Var 'aux529' direct represents '2' with '-8807'
8806 8808 -8807 0
c Encoding variable: aux530 with domain: int(0..4) (representing constraint (aux525 + aux529))
c Both direct and order encoding.
c Var 'aux530' order represents '0' with '8809'
c Var 'aux530' direct represents '0' with '8809'
c Var 'aux530' order represents '1' with '8810'
-8809 8810 0
c Var 'aux530' direct represents '1' with '8811'
8809 -8810 8811 0
-8811 8810 0
-8811 -8809 0
c Var 'aux530' order represents '2' with '8812'
-8810 8812 0
c Var 'aux530' direct represents '2' with '8813'
8810 -8812 8813 0
-8813 8812 0
-8813 -8810 0
c Var 'aux530' order represents '3' with '8814'
-8812 8814 0
c Var 'aux530' direct represents '3' with '8815'
8812 -8814 8815 0
-8815 8814 0
-8815 -8812 0
c Var 'aux530' direct represents '4' with '-8814'
8809 8811 8813 8815 -8814 0
c Encoding variable: aux531 with domain: int(0..2) (representing constraint ((field_00002_00001=8) + (field_00002_00009=8)))
c Both direct and order encoding.
c Var 'aux531' order represents '0' with '8816'
c Var 'aux531' direct represents '0' with '8816'
c Var 'aux531' order represents '1' with '8817'
-8816 8817 0
c Var 'aux531' direct represents '1' with '8818'
8816 -8817 8818 0
-8818 8817 0
-8818 -8816 0
c Var 'aux531' direct represents '2' with '-8817'
8816 8818 -8817 0
c Encoding variable: aux532 with domain: int(0..2) (representing constraint ((field_00002_00007=8) + (field_00002_00002=8)))
c Both direct and order encoding.
c Var 'aux532' order represents '0' with '8819'
c Var 'aux532' direct represents '0' with '8819'
c Var 'aux532' order represents '1' with '8820'
-8819 8820 0
c Var 'aux532' direct represents '1' with '8821'
8819 -8820 8821 0
-8821 8820 0
-8821 -8819 0
c Var 'aux532' direct represents '2' with '-8820'
8819 8821 -8820 0
c Encoding variable: aux533 with domain: int(0..2) (representing constraint ((field_00002_00006=8) + (field_00002_00004=8)))
c Both direct and order encoding.
c Var 'aux533' order represents '0' with '8822'
c Var 'aux533' direct represents '0' with '8822'
c Var 'aux533' order represents '1' with '8823'
-8822 8823 0
c Var 'aux533' direct represents '1' with '8824'
8822 -8823 8824 0
-8824 8823 0
-8824 -8822 0
c Var 'aux533' direct represents '2' with '-8823'
8822 8824 -8823 0
c Encoding variable: aux534 with domain: int(0..2) (representing constraint ((field_00002_00005=8) + (field_00002_00003=8)))
c Both direct and order encoding.
c Var 'aux534' order represents '0' with '8825'
c Var 'aux534' direct represents '0' with '8825'
c Var 'aux534' order represents '1' with '8826'
-8825 8826 0
c Var 'aux534' direct represents '1' with '8827'
8825 -8826 8827 0
-8827 8826 0
-8827 -8825 0
c Var 'aux534' direct represents '2' with '-8826'
8825 8827 -8826 0
c Encoding variable: aux535 with domain: int(0..4) (representing constraint (aux531 + aux534))
c Both direct and order encoding.
c Var 'aux535' order represents '0' with '8828'
c Var 'aux535' direct represents '0' with '8828'
c Var 'aux535' order represents '1' with '8829'
-8828 8829 0
c Var 'aux535' direct represents '1' with '8830'
8828 -8829 8830 0
-8830 8829 0
-8830 -8828 0
c Var 'aux535' order represents '2' with '8831'
-8829 8831 0
c Var 'aux535' direct represents '2' with '8832'
8829 -8831 8832 0
-8832 8831 0
-8832 -8829 0
c Var 'aux535' order represents '3' with '8833'
-8831 8833 0
c Var 'aux535' direct represents '3' with '8834'
8831 -8833 8834 0
-8834 8833 0
-8834 -8831 0
c Var 'aux535' direct represents '4' with '-8833'
8828 8830 8832 8834 -8833 0
c Encoding variable: aux536 with domain: int(0..2) (representing constraint ((field_00002_00001=9) + (field_00002_00009=9)))
c Both direct and order encoding.
c Var 'aux536' order represents '0' with '8835'
c Var 'aux536' direct represents '0' with '8835'
c Var 'aux536' order represents '1' with '8836'
-8835 8836 0
c Var 'aux536' direct represents '1' with '8837'
8835 -8836 8837 0
-8837 8836 0
-8837 -8835 0
c Var 'aux536' direct represents '2' with '-8836'
8835 8837 -8836 0
c Encoding variable: aux537 with domain: int(0..2) (representing constraint ((field_00002_00007=9) + (field_00002_00002=9)))
c Both direct and order encoding.
c Var 'aux537' order represents '0' with '8838'
c Var 'aux537' direct represents '0' with '8838'
c Var 'aux537' order represents '1' with '8839'
-8838 8839 0
c Var 'aux537' direct represents '1' with '8840'
8838 -8839 8840 0
-8840 8839 0
-8840 -8838 0
c Var 'aux537' direct represents '2' with '-8839'
8838 8840 -8839 0
c Encoding variable: aux538 with domain: int(0..2) (representing constraint ((field_00002_00006=9) + (field_00002_00004=9)))
c Both direct and order encoding.
c Var 'aux538' order represents '0' with '8841'
c Var 'aux538' direct represents '0' with '8841'
c Var 'aux538' order represents '1' with '8842'
-8841 8842 0
c Var 'aux538' direct represents '1' with '8843'
8841 -8842 8843 0
-8843 8842 0
-8843 -8841 0
c Var 'aux538' direct represents '2' with '-8842'
8841 8843 -8842 0
c Encoding variable: aux539 with domain: int(0..2) (representing constraint ((field_00002_00005=9) + (field_00002_00003=9)))
c Both direct and order encoding.
c Var 'aux539' order represents '0' with '8844'
c Var 'aux539' direct represents '0' with '8844'
c Var 'aux539' order represents '1' with '8845'
-8844 8845 0
c Var 'aux539' direct represents '1' with '8846'
8844 -8845 8846 0
-8846 8845 0
-8846 -8844 0
c Var 'aux539' direct represents '2' with '-8845'
8844 8846 -8845 0
c Encoding variable: aux540 with domain: int(0..4) (representing constraint (aux536 + aux539))
c Both direct and order encoding.
c Var 'aux540' order represents '0' with '8847'
c Var 'aux540' direct represents '0' with '8847'
c Var 'aux540' order represents '1' with '8848'
-8847 8848 0
c Var 'aux540' direct represents '1' with '8849'
8847 -8848 8849 0
-8849 8848 0
-8849 -8847 0
c Var 'aux540' order represents '2' with '8850'
-8848 8850 0
c Var 'aux540' direct represents '2' with '8851'
8848 -8850 8851 0
-8851 8850 0
-8851 -8848 0
c Var 'aux540' order represents '3' with '8852'
-8850 8852 0
c Var 'aux540' direct represents '3' with '8853'
8850 -8852 8853 0
-8853 8852 0
-8853 -8850 0
c Var 'aux540' direct represents '4' with '-8852'
8847 8849 8851 8853 -8852 0
c Encoding variable: aux541 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00003_00009=1)))
c Both direct and order encoding.
c Var 'aux541' order represents '0' with '8854'
c Var 'aux541' direct represents '0' with '8854'
c Var 'aux541' order represents '1' with '8855'
-8854 8855 0
c Var 'aux541' direct represents '1' with '8856'
8854 -8855 8856 0
-8856 8855 0
-8856 -8854 0
c Var 'aux541' direct represents '2' with '-8855'
8854 8856 -8855 0
c Encoding variable: aux542 with domain: int(0..2) (representing constraint ((field_00003_00008=1) + (field_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux542' order represents '0' with '8857'
c Var 'aux542' direct represents '0' with '8857'
c Var 'aux542' order represents '1' with '8858'
-8857 8858 0
c Var 'aux542' direct represents '1' with '8859'
8857 -8858 8859 0
-8859 8858 0
-8859 -8857 0
c Var 'aux542' direct represents '2' with '-8858'
8857 8859 -8858 0
c Encoding variable: aux543 with domain: int(0..2) (representing constraint ((field_00003_00007=1) + (field_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux543' order represents '0' with '8860'
c Var 'aux543' direct represents '0' with '8860'
c Var 'aux543' order represents '1' with '8861'
-8860 8861 0
c Var 'aux543' direct represents '1' with '8862'
8860 -8861 8862 0
-8862 8861 0
-8862 -8860 0
c Var 'aux543' direct represents '2' with '-8861'
8860 8862 -8861 0
c Encoding variable: aux544 with domain: int(0..2) (representing constraint ((field_00003_00005=1) + (field_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux544' order represents '0' with '8863'
c Var 'aux544' direct represents '0' with '8863'
c Var 'aux544' order represents '1' with '8864'
-8863 8864 0
c Var 'aux544' direct represents '1' with '8865'
8863 -8864 8865 0
-8865 8864 0
-8865 -8863 0
c Var 'aux544' direct represents '2' with '-8864'
8863 8865 -8864 0
c Encoding variable: aux545 with domain: int(0..4) (representing constraint (aux541 + aux544))
c Both direct and order encoding.
c Var 'aux545' order represents '0' with '8866'
c Var 'aux545' direct represents '0' with '8866'
c Var 'aux545' order represents '1' with '8867'
-8866 8867 0
c Var 'aux545' direct represents '1' with '8868'
8866 -8867 8868 0
-8868 8867 0
-8868 -8866 0
c Var 'aux545' order represents '2' with '8869'
-8867 8869 0
c Var 'aux545' direct represents '2' with '8870'
8867 -8869 8870 0
-8870 8869 0
-8870 -8867 0
c Var 'aux545' order represents '3' with '8871'
-8869 8871 0
c Var 'aux545' direct represents '3' with '8872'
8869 -8871 8872 0
-8872 8871 0
-8872 -8869 0
c Var 'aux545' direct represents '4' with '-8871'
8866 8868 8870 8872 -8871 0
c Encoding variable: aux546 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00003_00009=2)))
c Both direct and order encoding.
c Var 'aux546' order represents '0' with '8873'
c Var 'aux546' direct represents '0' with '8873'
c Var 'aux546' order represents '1' with '8874'
-8873 8874 0
c Var 'aux546' direct represents '1' with '8875'
8873 -8874 8875 0
-8875 8874 0
-8875 -8873 0
c Var 'aux546' direct represents '2' with '-8874'
8873 8875 -8874 0
c Encoding variable: aux547 with domain: int(0..2) (representing constraint ((field_00003_00008=2) + (field_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux547' order represents '0' with '8876'
c Var 'aux547' direct represents '0' with '8876'
c Var 'aux547' order represents '1' with '8877'
-8876 8877 0
c Var 'aux547' direct represents '1' with '8878'
8876 -8877 8878 0
-8878 8877 0
-8878 -8876 0
c Var 'aux547' direct represents '2' with '-8877'
8876 8878 -8877 0
c Encoding variable: aux548 with domain: int(0..2) (representing constraint ((field_00003_00007=2) + (field_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux548' order represents '0' with '8879'
c Var 'aux548' direct represents '0' with '8879'
c Var 'aux548' order represents '1' with '8880'
-8879 8880 0
c Var 'aux548' direct represents '1' with '8881'
8879 -8880 8881 0
-8881 8880 0
-8881 -8879 0
c Var 'aux548' direct represents '2' with '-8880'
8879 8881 -8880 0
c Encoding variable: aux549 with domain: int(0..2) (representing constraint ((field_00003_00005=2) + (field_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux549' order represents '0' with '8882'
c Var 'aux549' direct represents '0' with '8882'
c Var 'aux549' order represents '1' with '8883'
-8882 8883 0
c Var 'aux549' direct represents '1' with '8884'
8882 -8883 8884 0
-8884 8883 0
-8884 -8882 0
c Var 'aux549' direct represents '2' with '-8883'
8882 8884 -8883 0
c Encoding variable: aux550 with domain: int(0..4) (representing constraint (aux546 + aux549))
c Both direct and order encoding.
c Var 'aux550' order represents '0' with '8885'
c Var 'aux550' direct represents '0' with '8885'
c Var 'aux550' order represents '1' with '8886'
-8885 8886 0
c Var 'aux550' direct represents '1' with '8887'
8885 -8886 8887 0
-8887 8886 0
-8887 -8885 0
c Var 'aux550' order represents '2' with '8888'
-8886 8888 0
c Var 'aux550' direct represents '2' with '8889'
8886 -8888 8889 0
-8889 8888 0
-8889 -8886 0
c Var 'aux550' order represents '3' with '8890'
-8888 8890 0
c Var 'aux550' direct represents '3' with '8891'
8888 -8890 8891 0
-8891 8890 0
-8891 -8888 0
c Var 'aux550' direct represents '4' with '-8890'
8885 8887 8889 8891 -8890 0
c Encoding variable: aux551 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00003_00009=3)))
c Both direct and order encoding.
c Var 'aux551' order represents '0' with '8892'
c Var 'aux551' direct represents '0' with '8892'
c Var 'aux551' order represents '1' with '8893'
-8892 8893 0
c Var 'aux551' direct represents '1' with '8894'
8892 -8893 8894 0
-8894 8893 0
-8894 -8892 0
c Var 'aux551' direct represents '2' with '-8893'
8892 8894 -8893 0
c Encoding variable: aux552 with domain: int(0..2) (representing constraint ((field_00003_00008=3) + (field_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux552' order represents '0' with '8895'
c Var 'aux552' direct represents '0' with '8895'
c Var 'aux552' order represents '1' with '8896'
-8895 8896 0
c Var 'aux552' direct represents '1' with '8897'
8895 -8896 8897 0
-8897 8896 0
-8897 -8895 0
c Var 'aux552' direct represents '2' with '-8896'
8895 8897 -8896 0
c Encoding variable: aux553 with domain: int(0..2) (representing constraint ((field_00003_00007=3) + (field_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux553' order represents '0' with '8898'
c Var 'aux553' direct represents '0' with '8898'
c Var 'aux553' order represents '1' with '8899'
-8898 8899 0
c Var 'aux553' direct represents '1' with '8900'
8898 -8899 8900 0
-8900 8899 0
-8900 -8898 0
c Var 'aux553' direct represents '2' with '-8899'
8898 8900 -8899 0
c Encoding variable: aux554 with domain: int(0..2) (representing constraint ((field_00003_00005=3) + (field_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux554' order represents '0' with '8901'
c Var 'aux554' direct represents '0' with '8901'
c Var 'aux554' order represents '1' with '8902'
-8901 8902 0
c Var 'aux554' direct represents '1' with '8903'
8901 -8902 8903 0
-8903 8902 0
-8903 -8901 0
c Var 'aux554' direct represents '2' with '-8902'
8901 8903 -8902 0
c Encoding variable: aux555 with domain: int(0..4) (representing constraint (aux551 + aux554))
c Both direct and order encoding.
c Var 'aux555' order represents '0' with '8904'
c Var 'aux555' direct represents '0' with '8904'
c Var 'aux555' order represents '1' with '8905'
-8904 8905 0
c Var 'aux555' direct represents '1' with '8906'
8904 -8905 8906 0
-8906 8905 0
-8906 -8904 0
c Var 'aux555' order represents '2' with '8907'
-8905 8907 0
c Var 'aux555' direct represents '2' with '8908'
8905 -8907 8908 0
-8908 8907 0
-8908 -8905 0
c Var 'aux555' order represents '3' with '8909'
-8907 8909 0
c Var 'aux555' direct represents '3' with '8910'
8907 -8909 8910 0
-8910 8909 0
-8910 -8907 0
c Var 'aux555' direct represents '4' with '-8909'
8904 8906 8908 8910 -8909 0
c Encoding variable: aux556 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00003_00009=4)))
c Both direct and order encoding.
c Var 'aux556' order represents '0' with '8911'
c Var 'aux556' direct represents '0' with '8911'
c Var 'aux556' order represents '1' with '8912'
-8911 8912 0
c Var 'aux556' direct represents '1' with '8913'
8911 -8912 8913 0
-8913 8912 0
-8913 -8911 0
c Var 'aux556' direct represents '2' with '-8912'
8911 8913 -8912 0
c Encoding variable: aux557 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux557' order represents '0' with '8914'
c Var 'aux557' direct represents '0' with '8914'
c Var 'aux557' order represents '1' with '8915'
-8914 8915 0
c Var 'aux557' direct represents '1' with '8916'
8914 -8915 8916 0
-8916 8915 0
-8916 -8914 0
c Var 'aux557' direct represents '2' with '-8915'
8914 8916 -8915 0
c Encoding variable: aux558 with domain: int(0..2) (representing constraint ((field_00003_00007=4) + (field_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux558' order represents '0' with '8917'
c Var 'aux558' direct represents '0' with '8917'
c Var 'aux558' order represents '1' with '8918'
-8917 8918 0
c Var 'aux558' direct represents '1' with '8919'
8917 -8918 8919 0
-8919 8918 0
-8919 -8917 0
c Var 'aux558' direct represents '2' with '-8918'
8917 8919 -8918 0
c Encoding variable: aux559 with domain: int(0..2) (representing constraint ((field_00003_00005=4) + (field_00003_00003=4)))
c Both direct and order encoding.
c Var 'aux559' order represents '0' with '8920'
c Var 'aux559' direct represents '0' with '8920'
c Var 'aux559' order represents '1' with '8921'
-8920 8921 0
c Var 'aux559' direct represents '1' with '8922'
8920 -8921 8922 0
-8922 8921 0
-8922 -8920 0
c Var 'aux559' direct represents '2' with '-8921'
8920 8922 -8921 0
c Encoding variable: aux560 with domain: int(0..4) (representing constraint (aux556 + aux559))
c Both direct and order encoding.
c Var 'aux560' order represents '0' with '8923'
c Var 'aux560' direct represents '0' with '8923'
c Var 'aux560' order represents '1' with '8924'
-8923 8924 0
c Var 'aux560' direct represents '1' with '8925'
8923 -8924 8925 0
-8925 8924 0
-8925 -8923 0
c Var 'aux560' order represents '2' with '8926'
-8924 8926 0
c Var 'aux560' direct represents '2' with '8927'
8924 -8926 8927 0
-8927 8926 0
-8927 -8924 0
c Var 'aux560' order represents '3' with '8928'
-8926 8928 0
c Var 'aux560' direct represents '3' with '8929'
8926 -8928 8929 0
-8929 8928 0
-8929 -8926 0
c Var 'aux560' direct represents '4' with '-8928'
8923 8925 8927 8929 -8928 0
c Encoding variable: aux561 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00003_00009=5)))
c Both direct and order encoding.
c Var 'aux561' order represents '0' with '8930'
c Var 'aux561' direct represents '0' with '8930'
c Var 'aux561' order represents '1' with '8931'
-8930 8931 0
c Var 'aux561' direct represents '1' with '8932'
8930 -8931 8932 0
-8932 8931 0
-8932 -8930 0
c Var 'aux561' direct represents '2' with '-8931'
8930 8932 -8931 0
c Encoding variable: aux562 with domain: int(0..2) (representing constraint ((field_00003_00008=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux562' order represents '0' with '8933'
c Var 'aux562' direct represents '0' with '8933'
c Var 'aux562' order represents '1' with '8934'
-8933 8934 0
c Var 'aux562' direct represents '1' with '8935'
8933 -8934 8935 0
-8935 8934 0
-8935 -8933 0
c Var 'aux562' direct represents '2' with '-8934'
8933 8935 -8934 0
c Encoding variable: aux563 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux563' order represents '0' with '8936'
c Var 'aux563' direct represents '0' with '8936'
c Var 'aux563' order represents '1' with '8937'
-8936 8937 0
c Var 'aux563' direct represents '1' with '8938'
8936 -8937 8938 0
-8938 8937 0
-8938 -8936 0
c Var 'aux563' direct represents '2' with '-8937'
8936 8938 -8937 0
c Encoding variable: aux564 with domain: int(0..2) (representing constraint ((field_00003_00005=5) + (field_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux564' order represents '0' with '8939'
c Var 'aux564' direct represents '0' with '8939'
c Var 'aux564' order represents '1' with '8940'
-8939 8940 0
c Var 'aux564' direct represents '1' with '8941'
8939 -8940 8941 0
-8941 8940 0
-8941 -8939 0
c Var 'aux564' direct represents '2' with '-8940'
8939 8941 -8940 0
c Encoding variable: aux565 with domain: int(0..4) (representing constraint (aux561 + aux564))
c Both direct and order encoding.
c Var 'aux565' order represents '0' with '8942'
c Var 'aux565' direct represents '0' with '8942'
c Var 'aux565' order represents '1' with '8943'
-8942 8943 0
c Var 'aux565' direct represents '1' with '8944'
8942 -8943 8944 0
-8944 8943 0
-8944 -8942 0
c Var 'aux565' order represents '2' with '8945'
-8943 8945 0
c Var 'aux565' direct represents '2' with '8946'
8943 -8945 8946 0
-8946 8945 0
-8946 -8943 0
c Var 'aux565' order represents '3' with '8947'
-8945 8947 0
c Var 'aux565' direct represents '3' with '8948'
8945 -8947 8948 0
-8948 8947 0
-8948 -8945 0
c Var 'aux565' direct represents '4' with '-8947'
8942 8944 8946 8948 -8947 0
c Encoding variable: aux566 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00003_00009=6)))
c Both direct and order encoding.
c Var 'aux566' order represents '0' with '8949'
c Var 'aux566' direct represents '0' with '8949'
c Var 'aux566' order represents '1' with '8950'
-8949 8950 0
c Var 'aux566' direct represents '1' with '8951'
8949 -8950 8951 0
-8951 8950 0
-8951 -8949 0
c Var 'aux566' direct represents '2' with '-8950'
8949 8951 -8950 0
c Encoding variable: aux567 with domain: int(0..2) (representing constraint ((field_00003_00008=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux567' order represents '0' with '8952'
c Var 'aux567' direct represents '0' with '8952'
c Var 'aux567' order represents '1' with '8953'
-8952 8953 0
c Var 'aux567' direct represents '1' with '8954'
8952 -8953 8954 0
-8954 8953 0
-8954 -8952 0
c Var 'aux567' direct represents '2' with '-8953'
8952 8954 -8953 0
c Encoding variable: aux568 with domain: int(0..2) (representing constraint ((field_00003_00007=6) + (field_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux568' order represents '0' with '8955'
c Var 'aux568' direct represents '0' with '8955'
c Var 'aux568' order represents '1' with '8956'
-8955 8956 0
c Var 'aux568' direct represents '1' with '8957'
8955 -8956 8957 0
-8957 8956 0
-8957 -8955 0
c Var 'aux568' direct represents '2' with '-8956'
8955 8957 -8956 0
c Encoding variable: aux569 with domain: int(1..2) (representing constraint ((field_00003_00006=6) + (field_00003_00005=6)))
c Var 'aux569' direct represents '1' with '-8958'
c Var 'aux569' direct represents '2' with '8958'
c Var 'aux569' order represents '2' with '1'
c Var 'aux569' order represents '1' with '-8958'
c Encoding variable: aux570 with domain: int(1..3) (representing constraint ((field_00003_00003=6) + aux569))
c Both direct and order encoding.
c Var 'aux570' order represents '1' with '8959'
c Var 'aux570' direct represents '1' with '8959'
c Var 'aux570' order represents '2' with '8960'
-8959 8960 0
c Var 'aux570' direct represents '2' with '8961'
8959 -8960 8961 0
-8961 8960 0
-8961 -8959 0
c Var 'aux570' direct represents '3' with '-8960'
8959 8961 -8960 0
c Encoding variable: aux571 with domain: int(1..5) (representing constraint (aux566 + aux570))
c Both direct and order encoding.
c Var 'aux571' order represents '1' with '8962'
c Var 'aux571' direct represents '1' with '8962'
c Var 'aux571' order represents '2' with '8963'
-8962 8963 0
c Var 'aux571' direct represents '2' with '8964'
8962 -8963 8964 0
-8964 8963 0
-8964 -8962 0
c Var 'aux571' order represents '3' with '8965'
-8963 8965 0
c Var 'aux571' direct represents '3' with '8966'
8963 -8965 8966 0
-8966 8965 0
-8966 -8963 0
c Var 'aux571' order represents '4' with '8967'
-8965 8967 0
c Var 'aux571' direct represents '4' with '8968'
8965 -8967 8968 0
-8968 8967 0
-8968 -8965 0
c Var 'aux571' direct represents '5' with '-8967'
8962 8964 8966 8968 -8967 0
c Encoding variable: aux572 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00003_00009=7)))
c Both direct and order encoding.
c Var 'aux572' order represents '0' with '8969'
c Var 'aux572' direct represents '0' with '8969'
c Var 'aux572' order represents '1' with '8970'
-8969 8970 0
c Var 'aux572' direct represents '1' with '8971'
8969 -8970 8971 0
-8971 8970 0
-8971 -8969 0
c Var 'aux572' direct represents '2' with '-8970'
8969 8971 -8970 0
c Encoding variable: aux573 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux573' order represents '0' with '8972'
c Var 'aux573' direct represents '0' with '8972'
c Var 'aux573' order represents '1' with '8973'
-8972 8973 0
c Var 'aux573' direct represents '1' with '8974'
8972 -8973 8974 0
-8974 8973 0
-8974 -8972 0
c Var 'aux573' direct represents '2' with '-8973'
8972 8974 -8973 0
c Encoding variable: aux574 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux574' order represents '0' with '8975'
c Var 'aux574' direct represents '0' with '8975'
c Var 'aux574' order represents '1' with '8976'
-8975 8976 0
c Var 'aux574' direct represents '1' with '8977'
8975 -8976 8977 0
-8977 8976 0
-8977 -8975 0
c Var 'aux574' direct represents '2' with '-8976'
8975 8977 -8976 0
c Encoding variable: aux575 with domain: int(0..2) (representing constraint ((field_00003_00005=7) + (field_00003_00003=7)))
c Both direct and order encoding.
c Var 'aux575' order represents '0' with '8978'
c Var 'aux575' direct represents '0' with '8978'
c Var 'aux575' order represents '1' with '8979'
-8978 8979 0
c Var 'aux575' direct represents '1' with '8980'
8978 -8979 8980 0
-8980 8979 0
-8980 -8978 0
c Var 'aux575' direct represents '2' with '-8979'
8978 8980 -8979 0
c Encoding variable: aux576 with domain: int(0..4) (representing constraint (aux572 + aux575))
c Both direct and order encoding.
c Var 'aux576' order represents '0' with '8981'
c Var 'aux576' direct represents '0' with '8981'
c Var 'aux576' order represents '1' with '8982'
-8981 8982 0
c Var 'aux576' direct represents '1' with '8983'
8981 -8982 8983 0
-8983 8982 0
-8983 -8981 0
c Var 'aux576' order represents '2' with '8984'
-8982 8984 0
c Var 'aux576' direct represents '2' with '8985'
8982 -8984 8985 0
-8985 8984 0
-8985 -8982 0
c Var 'aux576' order represents '3' with '8986'
-8984 8986 0
c Var 'aux576' direct represents '3' with '8987'
8984 -8986 8987 0
-8987 8986 0
-8987 -8984 0
c Var 'aux576' direct represents '4' with '-8986'
8981 8983 8985 8987 -8986 0
c Encoding variable: aux577 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00003_00009=8)))
c Both direct and order encoding.
c Var 'aux577' order represents '0' with '8988'
c Var 'aux577' direct represents '0' with '8988'
c Var 'aux577' order represents '1' with '8989'
-8988 8989 0
c Var 'aux577' direct represents '1' with '8990'
8988 -8989 8990 0
-8990 8989 0
-8990 -8988 0
c Var 'aux577' direct represents '2' with '-8989'
8988 8990 -8989 0
c Encoding variable: aux578 with domain: int(0..2) (representing constraint ((field_00003_00008=8) + (field_00003_00002=8)))
c Both direct and order encoding.
c Var 'aux578' order represents '0' with '8991'
c Var 'aux578' direct represents '0' with '8991'
c Var 'aux578' order represents '1' with '8992'
-8991 8992 0
c Var 'aux578' direct represents '1' with '8993'
8991 -8992 8993 0
-8993 8992 0
-8993 -8991 0
c Var 'aux578' direct represents '2' with '-8992'
8991 8993 -8992 0
c Encoding variable: aux579 with domain: int(0..2) (representing constraint ((field_00003_00007=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux579' order represents '0' with '8994'
c Var 'aux579' direct represents '0' with '8994'
c Var 'aux579' order represents '1' with '8995'
-8994 8995 0
c Var 'aux579' direct represents '1' with '8996'
8994 -8995 8996 0
-8996 8995 0
-8996 -8994 0
c Var 'aux579' direct represents '2' with '-8995'
8994 8996 -8995 0
c Encoding variable: aux580 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00003_00003=8)))
c Both direct and order encoding.
c Var 'aux580' order represents '0' with '8997'
c Var 'aux580' direct represents '0' with '8997'
c Var 'aux580' order represents '1' with '8998'
-8997 8998 0
c Var 'aux580' direct represents '1' with '8999'
8997 -8998 8999 0
-8999 8998 0
-8999 -8997 0
c Var 'aux580' direct represents '2' with '-8998'
8997 8999 -8998 0
c Encoding variable: aux581 with domain: int(0..4) (representing constraint (aux577 + aux580))
c Both direct and order encoding.
c Var 'aux581' order represents '0' with '9000'
c Var 'aux581' direct represents '0' with '9000'
c Var 'aux581' order represents '1' with '9001'
-9000 9001 0
c Var 'aux581' direct represents '1' with '9002'
9000 -9001 9002 0
-9002 9001 0
-9002 -9000 0
c Var 'aux581' order represents '2' with '9003'
-9001 9003 0
c Var 'aux581' direct represents '2' with '9004'
9001 -9003 9004 0
-9004 9003 0
-9004 -9001 0
c Var 'aux581' order represents '3' with '9005'
-9003 9005 0
c Var 'aux581' direct represents '3' with '9006'
9003 -9005 9006 0
-9006 9005 0
-9006 -9003 0
c Var 'aux581' direct represents '4' with '-9005'
9000 9002 9004 9006 -9005 0
c Encoding variable: aux582 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00003_00009=9)))
c Both direct and order encoding.
c Var 'aux582' order represents '0' with '9007'
c Var 'aux582' direct represents '0' with '9007'
c Var 'aux582' order represents '1' with '9008'
-9007 9008 0
c Var 'aux582' direct represents '1' with '9009'
9007 -9008 9009 0
-9009 9008 0
-9009 -9007 0
c Var 'aux582' direct represents '2' with '-9008'
9007 9009 -9008 0
c Encoding variable: aux583 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00003_00002=9)))
c Both direct and order encoding.
c Var 'aux583' order represents '0' with '9010'
c Var 'aux583' direct represents '0' with '9010'
c Var 'aux583' order represents '1' with '9011'
-9010 9011 0
c Var 'aux583' direct represents '1' with '9012'
9010 -9011 9012 0
-9012 9011 0
-9012 -9010 0
c Var 'aux583' direct represents '2' with '-9011'
9010 9012 -9011 0
c Encoding variable: aux584 with domain: int(0..2) (representing constraint ((field_00003_00007=9) + (field_00003_00004=9)))
c Both direct and order encoding.
c Var 'aux584' order represents '0' with '9013'
c Var 'aux584' direct represents '0' with '9013'
c Var 'aux584' order represents '1' with '9014'
-9013 9014 0
c Var 'aux584' direct represents '1' with '9015'
9013 -9014 9015 0
-9015 9014 0
-9015 -9013 0
c Var 'aux584' direct represents '2' with '-9014'
9013 9015 -9014 0
c Encoding variable: aux585 with domain: int(0..2) (representing constraint ((field_00003_00005=9) + (field_00003_00003=9)))
c Both direct and order encoding.
c Var 'aux585' order represents '0' with '9016'
c Var 'aux585' direct represents '0' with '9016'
c Var 'aux585' order represents '1' with '9017'
-9016 9017 0
c Var 'aux585' direct represents '1' with '9018'
9016 -9017 9018 0
-9018 9017 0
-9018 -9016 0
c Var 'aux585' direct represents '2' with '-9017'
9016 9018 -9017 0
c Encoding variable: aux586 with domain: int(0..4) (representing constraint (aux582 + aux585))
c Both direct and order encoding.
c Var 'aux586' order represents '0' with '9019'
c Var 'aux586' direct represents '0' with '9019'
c Var 'aux586' order represents '1' with '9020'
-9019 9020 0
c Var 'aux586' direct represents '1' with '9021'
9019 -9020 9021 0
-9021 9020 0
-9021 -9019 0
c Var 'aux586' order represents '2' with '9022'
-9020 9022 0
c Var 'aux586' direct represents '2' with '9023'
9020 -9022 9023 0
-9023 9022 0
-9023 -9020 0
c Var 'aux586' order represents '3' with '9024'
-9022 9024 0
c Var 'aux586' direct represents '3' with '9025'
9022 -9024 9025 0
-9025 9024 0
-9025 -9022 0
c Var 'aux586' direct represents '4' with '-9024'
9019 9021 9023 9025 -9024 0
c Encoding variable: aux587 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00004_00009=1)))
c Both direct and order encoding.
c Var 'aux587' order represents '0' with '9026'
c Var 'aux587' direct represents '0' with '9026'
c Var 'aux587' order represents '1' with '9027'
-9026 9027 0
c Var 'aux587' direct represents '1' with '9028'
9026 -9027 9028 0
-9028 9027 0
-9028 -9026 0
c Var 'aux587' direct represents '2' with '-9027'
9026 9028 -9027 0
c Encoding variable: aux588 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00004_00002=1)))
c Both direct and order encoding.
c Var 'aux588' order represents '0' with '9029'
c Var 'aux588' direct represents '0' with '9029'
c Var 'aux588' order represents '1' with '9030'
-9029 9030 0
c Var 'aux588' direct represents '1' with '9031'
9029 -9030 9031 0
-9031 9030 0
-9031 -9029 0
c Var 'aux588' direct represents '2' with '-9030'
9029 9031 -9030 0
c Encoding variable: aux589 with domain: int(0..2) (representing constraint ((field_00004_00006=1) + (field_00004_00004=1)))
c Both direct and order encoding.
c Var 'aux589' order represents '0' with '9032'
c Var 'aux589' direct represents '0' with '9032'
c Var 'aux589' order represents '1' with '9033'
-9032 9033 0
c Var 'aux589' direct represents '1' with '9034'
9032 -9033 9034 0
-9034 9033 0
-9034 -9032 0
c Var 'aux589' direct represents '2' with '-9033'
9032 9034 -9033 0
c Encoding variable: aux590 with domain: int(1..2) (representing constraint ((field_00004_00005=1) + (field_00004_00003=1)))
c Var 'aux590' direct represents '1' with '-9035'
c Var 'aux590' direct represents '2' with '9035'
c Var 'aux590' order represents '2' with '1'
c Var 'aux590' order represents '1' with '-9035'
c Encoding variable: aux591 with domain: int(1..4) (representing constraint (aux590 + aux588))
c Both direct and order encoding.
c Var 'aux591' order represents '1' with '9036'
c Var 'aux591' direct represents '1' with '9036'
c Var 'aux591' order represents '2' with '9037'
-9036 9037 0
c Var 'aux591' direct represents '2' with '9038'
9036 -9037 9038 0
-9038 9037 0
-9038 -9036 0
c Var 'aux591' order represents '3' with '9039'
-9037 9039 0
c Var 'aux591' direct represents '3' with '9040'
9037 -9039 9040 0
-9040 9039 0
-9040 -9037 0
c Var 'aux591' direct represents '4' with '-9039'
9036 9038 9040 -9039 0
c Encoding variable: aux592 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00004_00009=2)))
c Both direct and order encoding.
c Var 'aux592' order represents '0' with '9041'
c Var 'aux592' direct represents '0' with '9041'
c Var 'aux592' order represents '1' with '9042'
-9041 9042 0
c Var 'aux592' direct represents '1' with '9043'
9041 -9042 9043 0
-9043 9042 0
-9043 -9041 0
c Var 'aux592' direct represents '2' with '-9042'
9041 9043 -9042 0
c Encoding variable: aux593 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00004_00002=2)))
c Both direct and order encoding.
c Var 'aux593' order represents '0' with '9044'
c Var 'aux593' direct represents '0' with '9044'
c Var 'aux593' order represents '1' with '9045'
-9044 9045 0
c Var 'aux593' direct represents '1' with '9046'
9044 -9045 9046 0
-9046 9045 0
-9046 -9044 0
c Var 'aux593' direct represents '2' with '-9045'
9044 9046 -9045 0
c Encoding variable: aux594 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00004_00005=2)))
c Both direct and order encoding.
c Var 'aux594' order represents '0' with '9047'
c Var 'aux594' direct represents '0' with '9047'
c Var 'aux594' order represents '1' with '9048'
-9047 9048 0
c Var 'aux594' direct represents '1' with '9049'
9047 -9048 9049 0
-9049 9048 0
-9049 -9047 0
c Var 'aux594' direct represents '2' with '-9048'
9047 9049 -9048 0
c Encoding variable: aux595 with domain: int(0..3) (representing constraint ((field_00004_00004=2) + aux594))
c Both direct and order encoding.
c Var 'aux595' order represents '0' with '9050'
c Var 'aux595' direct represents '0' with '9050'
c Var 'aux595' order represents '1' with '9051'
-9050 9051 0
c Var 'aux595' direct represents '1' with '9052'
9050 -9051 9052 0
-9052 9051 0
-9052 -9050 0
c Var 'aux595' order represents '2' with '9053'
-9051 9053 0
c Var 'aux595' direct represents '2' with '9054'
9051 -9053 9054 0
-9054 9053 0
-9054 -9051 0
c Var 'aux595' direct represents '3' with '-9053'
9050 9052 9054 -9053 0
c Encoding variable: aux596 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00004_00009=3)))
c Both direct and order encoding.
c Var 'aux596' order represents '0' with '9055'
c Var 'aux596' direct represents '0' with '9055'
c Var 'aux596' order represents '1' with '9056'
-9055 9056 0
c Var 'aux596' direct represents '1' with '9057'
9055 -9056 9057 0
-9057 9056 0
-9057 -9055 0
c Var 'aux596' direct represents '2' with '-9056'
9055 9057 -9056 0
c Encoding variable: aux597 with domain: int(1..2) (representing constraint ((field_00004_00008=3) + (field_00004_00002=3)))
c Var 'aux597' direct represents '1' with '-9058'
c Var 'aux597' direct represents '2' with '9058'
c Var 'aux597' order represents '2' with '1'
c Var 'aux597' order represents '1' with '-9058'
c Encoding variable: aux598 with domain: int(1..3) (representing constraint ((field_00004_00007=3) + aux597))
c Both direct and order encoding.
c Var 'aux598' order represents '1' with '9059'
c Var 'aux598' direct represents '1' with '9059'
c Var 'aux598' order represents '2' with '9060'
-9059 9060 0
c Var 'aux598' direct represents '2' with '9061'
9059 -9060 9061 0
-9061 9060 0
-9061 -9059 0
c Var 'aux598' direct represents '3' with '-9060'
9059 9061 -9060 0
c Encoding variable: aux599 with domain: int(0..2) (representing constraint ((field_00004_00006=3) + (field_00004_00005=3)))
c Both direct and order encoding.
c Var 'aux599' order represents '0' with '9062'
c Var 'aux599' direct represents '0' with '9062'
c Var 'aux599' order represents '1' with '9063'
-9062 9063 0
c Var 'aux599' direct represents '1' with '9064'
9062 -9063 9064 0
-9064 9063 0
-9064 -9062 0
c Var 'aux599' direct represents '2' with '-9063'
9062 9064 -9063 0
c Encoding variable: aux600 with domain: int(0..3) (representing constraint ((field_00004_00004=3) + aux599))
c Both direct and order encoding.
c Var 'aux600' order represents '0' with '9065'
c Var 'aux600' direct represents '0' with '9065'
c Var 'aux600' order represents '1' with '9066'
-9065 9066 0
c Var 'aux600' direct represents '1' with '9067'
9065 -9066 9067 0
-9067 9066 0
-9067 -9065 0
c Var 'aux600' order represents '2' with '9068'
-9066 9068 0
c Var 'aux600' direct represents '2' with '9069'
9066 -9068 9069 0
-9069 9068 0
-9069 -9066 0
c Var 'aux600' direct represents '3' with '-9068'
9065 9067 9069 -9068 0
c Encoding variable: aux601 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00004_00009=4)))
c Both direct and order encoding.
c Var 'aux601' order represents '0' with '9070'
c Var 'aux601' direct represents '0' with '9070'
c Var 'aux601' order represents '1' with '9071'
-9070 9071 0
c Var 'aux601' direct represents '1' with '9072'
9070 -9071 9072 0
-9072 9071 0
-9072 -9070 0
c Var 'aux601' direct represents '2' with '-9071'
9070 9072 -9071 0
c Encoding variable: aux602 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00004_00002=4)))
c Both direct and order encoding.
c Var 'aux602' order represents '0' with '9073'
c Var 'aux602' direct represents '0' with '9073'
c Var 'aux602' order represents '1' with '9074'
-9073 9074 0
c Var 'aux602' direct represents '1' with '9075'
9073 -9074 9075 0
-9075 9074 0
-9075 -9073 0
c Var 'aux602' direct represents '2' with '-9074'
9073 9075 -9074 0
c Encoding variable: aux603 with domain: int(0..2) (representing constraint ((field_00004_00006=4) + (field_00004_00005=4)))
c Both direct and order encoding.
c Var 'aux603' order represents '0' with '9076'
c Var 'aux603' direct represents '0' with '9076'
c Var 'aux603' order represents '1' with '9077'
-9076 9077 0
c Var 'aux603' direct represents '1' with '9078'
9076 -9077 9078 0
-9078 9077 0
-9078 -9076 0
c Var 'aux603' direct represents '2' with '-9077'
9076 9078 -9077 0
c Encoding variable: aux604 with domain: int(0..3) (representing constraint ((field_00004_00004=4) + aux603))
c Both direct and order encoding.
c Var 'aux604' order represents '0' with '9079'
c Var 'aux604' direct represents '0' with '9079'
c Var 'aux604' order represents '1' with '9080'
-9079 9080 0
c Var 'aux604' direct represents '1' with '9081'
9079 -9080 9081 0
-9081 9080 0
-9081 -9079 0
c Var 'aux604' order represents '2' with '9082'
-9080 9082 0
c Var 'aux604' direct represents '2' with '9083'
9080 -9082 9083 0
-9083 9082 0
-9083 -9080 0
c Var 'aux604' direct represents '3' with '-9082'
9079 9081 9083 -9082 0
c Encoding variable: aux605 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00004_00009=5)))
c Both direct and order encoding.
c Var 'aux605' order represents '0' with '9084'
c Var 'aux605' direct represents '0' with '9084'
c Var 'aux605' order represents '1' with '9085'
-9084 9085 0
c Var 'aux605' direct represents '1' with '9086'
9084 -9085 9086 0
-9086 9085 0
-9086 -9084 0
c Var 'aux605' direct represents '2' with '-9085'
9084 9086 -9085 0
c Encoding variable: aux606 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00004_00002=5)))
c Both direct and order encoding.
c Var 'aux606' order represents '0' with '9087'
c Var 'aux606' direct represents '0' with '9087'
c Var 'aux606' order represents '1' with '9088'
-9087 9088 0
c Var 'aux606' direct represents '1' with '9089'
9087 -9088 9089 0
-9089 9088 0
-9089 -9087 0
c Var 'aux606' direct represents '2' with '-9088'
9087 9089 -9088 0
c Encoding variable: aux607 with domain: int(0..2) (representing constraint ((field_00004_00006=5) + (field_00004_00005=5)))
c Both direct and order encoding.
c Var 'aux607' order represents '0' with '9090'
c Var 'aux607' direct represents '0' with '9090'
c Var 'aux607' order represents '1' with '9091'
-9090 9091 0
c Var 'aux607' direct represents '1' with '9092'
9090 -9091 9092 0
-9092 9091 0
-9092 -9090 0
c Var 'aux607' direct represents '2' with '-9091'
9090 9092 -9091 0
c Encoding variable: aux608 with domain: int(0..3) (representing constraint ((field_00004_00004=5) + aux607))
c Both direct and order encoding.
c Var 'aux608' order represents '0' with '9093'
c Var 'aux608' direct represents '0' with '9093'
c Var 'aux608' order represents '1' with '9094'
-9093 9094 0
c Var 'aux608' direct represents '1' with '9095'
9093 -9094 9095 0
-9095 9094 0
-9095 -9093 0
c Var 'aux608' order represents '2' with '9096'
-9094 9096 0
c Var 'aux608' direct represents '2' with '9097'
9094 -9096 9097 0
-9097 9096 0
-9097 -9094 0
c Var 'aux608' direct represents '3' with '-9096'
9093 9095 9097 -9096 0
c Encoding variable: aux609 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00004_00009=6)))
c Both direct and order encoding.
c Var 'aux609' order represents '0' with '9098'
c Var 'aux609' direct represents '0' with '9098'
c Var 'aux609' order represents '1' with '9099'
-9098 9099 0
c Var 'aux609' direct represents '1' with '9100'
9098 -9099 9100 0
-9100 9099 0
-9100 -9098 0
c Var 'aux609' direct represents '2' with '-9099'
9098 9100 -9099 0
c Encoding variable: aux610 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00004_00002=6)))
c Both direct and order encoding.
c Var 'aux610' order represents '0' with '9101'
c Var 'aux610' direct represents '0' with '9101'
c Var 'aux610' order represents '1' with '9102'
-9101 9102 0
c Var 'aux610' direct represents '1' with '9103'
9101 -9102 9103 0
-9103 9102 0
-9103 -9101 0
c Var 'aux610' direct represents '2' with '-9102'
9101 9103 -9102 0
c Encoding variable: aux611 with domain: int(0..2) (representing constraint ((field_00004_00006=6) + (field_00004_00005=6)))
c Both direct and order encoding.
c Var 'aux611' order represents '0' with '9104'
c Var 'aux611' direct represents '0' with '9104'
c Var 'aux611' order represents '1' with '9105'
-9104 9105 0
c Var 'aux611' direct represents '1' with '9106'
9104 -9105 9106 0
-9106 9105 0
-9106 -9104 0
c Var 'aux611' direct represents '2' with '-9105'
9104 9106 -9105 0
c Encoding variable: aux612 with domain: int(0..3) (representing constraint ((field_00004_00004=6) + aux611))
c Both direct and order encoding.
c Var 'aux612' order represents '0' with '9107'
c Var 'aux612' direct represents '0' with '9107'
c Var 'aux612' order represents '1' with '9108'
-9107 9108 0
c Var 'aux612' direct represents '1' with '9109'
9107 -9108 9109 0
-9109 9108 0
-9109 -9107 0
c Var 'aux612' order represents '2' with '9110'
-9108 9110 0
c Var 'aux612' direct represents '2' with '9111'
9108 -9110 9111 0
-9111 9110 0
-9111 -9108 0
c Var 'aux612' direct represents '3' with '-9110'
9107 9109 9111 -9110 0
c Encoding variable: aux613 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00004_00009=7)))
c Both direct and order encoding.
c Var 'aux613' order represents '0' with '9112'
c Var 'aux613' direct represents '0' with '9112'
c Var 'aux613' order represents '1' with '9113'
-9112 9113 0
c Var 'aux613' direct represents '1' with '9114'
9112 -9113 9114 0
-9114 9113 0
-9114 -9112 0
c Var 'aux613' direct represents '2' with '-9113'
9112 9114 -9113 0
c Encoding variable: aux614 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00004_00002=7)))
c Both direct and order encoding.
c Var 'aux614' order represents '0' with '9115'
c Var 'aux614' direct represents '0' with '9115'
c Var 'aux614' order represents '1' with '9116'
-9115 9116 0
c Var 'aux614' direct represents '1' with '9117'
9115 -9116 9117 0
-9117 9116 0
-9117 -9115 0
c Var 'aux614' direct represents '2' with '-9116'
9115 9117 -9116 0
c Encoding variable: aux615 with domain: int(0..2) (representing constraint ((field_00004_00006=7) + (field_00004_00005=7)))
c Both direct and order encoding.
c Var 'aux615' order represents '0' with '9118'
c Var 'aux615' direct represents '0' with '9118'
c Var 'aux615' order represents '1' with '9119'
-9118 9119 0
c Var 'aux615' direct represents '1' with '9120'
9118 -9119 9120 0
-9120 9119 0
-9120 -9118 0
c Var 'aux615' direct represents '2' with '-9119'
9118 9120 -9119 0
c Encoding variable: aux616 with domain: int(0..3) (representing constraint ((field_00004_00004=7) + aux615))
c Both direct and order encoding.
c Var 'aux616' order represents '0' with '9121'
c Var 'aux616' direct represents '0' with '9121'
c Var 'aux616' order represents '1' with '9122'
-9121 9122 0
c Var 'aux616' direct represents '1' with '9123'
9121 -9122 9123 0
-9123 9122 0
-9123 -9121 0
c Var 'aux616' order represents '2' with '9124'
-9122 9124 0
c Var 'aux616' direct represents '2' with '9125'
9122 -9124 9125 0
-9125 9124 0
-9125 -9122 0
c Var 'aux616' direct represents '3' with '-9124'
9121 9123 9125 -9124 0
c Encoding variable: aux617 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00004_00009=8)))
c Both direct and order encoding.
c Var 'aux617' order represents '0' with '9126'
c Var 'aux617' direct represents '0' with '9126'
c Var 'aux617' order represents '1' with '9127'
-9126 9127 0
c Var 'aux617' direct represents '1' with '9128'
9126 -9127 9128 0
-9128 9127 0
-9128 -9126 0
c Var 'aux617' direct represents '2' with '-9127'
9126 9128 -9127 0
c Encoding variable: aux618 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00004_00002=8)))
c Both direct and order encoding.
c Var 'aux618' order represents '0' with '9129'
c Var 'aux618' direct represents '0' with '9129'
c Var 'aux618' order represents '1' with '9130'
-9129 9130 0
c Var 'aux618' direct represents '1' with '9131'
9129 -9130 9131 0
-9131 9130 0
-9131 -9129 0
c Var 'aux618' direct represents '2' with '-9130'
9129 9131 -9130 0
c Encoding variable: aux619 with domain: int(0..2) (representing constraint ((field_00004_00006=8) + (field_00004_00005=8)))
c Both direct and order encoding.
c Var 'aux619' order represents '0' with '9132'
c Var 'aux619' direct represents '0' with '9132'
c Var 'aux619' order represents '1' with '9133'
-9132 9133 0
c Var 'aux619' direct represents '1' with '9134'
9132 -9133 9134 0
-9134 9133 0
-9134 -9132 0
c Var 'aux619' direct represents '2' with '-9133'
9132 9134 -9133 0
c Encoding variable: aux620 with domain: int(0..3) (representing constraint ((field_00004_00004=8) + aux619))
c Both direct and order encoding.
c Var 'aux620' order represents '0' with '9135'
c Var 'aux620' direct represents '0' with '9135'
c Var 'aux620' order represents '1' with '9136'
-9135 9136 0
c Var 'aux620' direct represents '1' with '9137'
9135 -9136 9137 0
-9137 9136 0
-9137 -9135 0
c Var 'aux620' order represents '2' with '9138'
-9136 9138 0
c Var 'aux620' direct represents '2' with '9139'
9136 -9138 9139 0
-9139 9138 0
-9139 -9136 0
c Var 'aux620' direct represents '3' with '-9138'
9135 9137 9139 -9138 0
c Encoding variable: aux621 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00004_00009=9)))
c Both direct and order encoding.
c Var 'aux621' order represents '0' with '9140'
c Var 'aux621' direct represents '0' with '9140'
c Var 'aux621' order represents '1' with '9141'
-9140 9141 0
c Var 'aux621' direct represents '1' with '9142'
9140 -9141 9142 0
-9142 9141 0
-9142 -9140 0
c Var 'aux621' direct represents '2' with '-9141'
9140 9142 -9141 0
c Encoding variable: aux622 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00004_00002=9)))
c Both direct and order encoding.
c Var 'aux622' order represents '0' with '9143'
c Var 'aux622' direct represents '0' with '9143'
c Var 'aux622' order represents '1' with '9144'
-9143 9144 0
c Var 'aux622' direct represents '1' with '9145'
9143 -9144 9145 0
-9145 9144 0
-9145 -9143 0
c Var 'aux622' direct represents '2' with '-9144'
9143 9145 -9144 0
c Encoding variable: aux623 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00004_00005=9)))
c Both direct and order encoding.
c Var 'aux623' order represents '0' with '9146'
c Var 'aux623' direct represents '0' with '9146'
c Var 'aux623' order represents '1' with '9147'
-9146 9147 0
c Var 'aux623' direct represents '1' with '9148'
9146 -9147 9148 0
-9148 9147 0
-9148 -9146 0
c Var 'aux623' direct represents '2' with '-9147'
9146 9148 -9147 0
c Encoding variable: aux624 with domain: int(0..3) (representing constraint ((field_00004_00004=9) + aux623))
c Both direct and order encoding.
c Var 'aux624' order represents '0' with '9149'
c Var 'aux624' direct represents '0' with '9149'
c Var 'aux624' order represents '1' with '9150'
-9149 9150 0
c Var 'aux624' direct represents '1' with '9151'
9149 -9150 9151 0
-9151 9150 0
-9151 -9149 0
c Var 'aux624' order represents '2' with '9152'
-9150 9152 0
c Var 'aux624' direct represents '2' with '9153'
9150 -9152 9153 0
-9153 9152 0
-9153 -9150 0
c Var 'aux624' direct represents '3' with '-9152'
9149 9151 9153 -9152 0
c Encoding variable: aux625 with domain: int(0..2) (representing constraint ((field_00005_00001=1) + (field_00005_00008=1)))
c Both direct and order encoding.
c Var 'aux625' order represents '0' with '9154'
c Var 'aux625' direct represents '0' with '9154'
c Var 'aux625' order represents '1' with '9155'
-9154 9155 0
c Var 'aux625' direct represents '1' with '9156'
9154 -9155 9156 0
-9156 9155 0
-9156 -9154 0
c Var 'aux625' direct represents '2' with '-9155'
9154 9156 -9155 0
c Encoding variable: aux626 with domain: int(0..2) (representing constraint ((field_00005_00006=1) + (field_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux626' order represents '0' with '9157'
c Var 'aux626' direct represents '0' with '9157'
c Var 'aux626' order represents '1' with '9158'
-9157 9158 0
c Var 'aux626' direct represents '1' with '9159'
9157 -9158 9159 0
-9159 9158 0
-9159 -9157 0
c Var 'aux626' direct represents '2' with '-9158'
9157 9159 -9158 0
c Encoding variable: aux627 with domain: int(1..2) (representing constraint ((field_00005_00005=1) + (field_00005_00004=1)))
c Var 'aux627' direct represents '1' with '-9160'
c Var 'aux627' direct represents '2' with '9160'
c Var 'aux627' order represents '2' with '1'
c Var 'aux627' order represents '1' with '-9160'
c Encoding variable: aux628 with domain: int(1..3) (representing constraint ((field_00005_00003=1) + aux627))
c Both direct and order encoding.
c Var 'aux628' order represents '1' with '9161'
c Var 'aux628' direct represents '1' with '9161'
c Var 'aux628' order represents '2' with '9162'
-9161 9162 0
c Var 'aux628' direct represents '2' with '9163'
9161 -9162 9163 0
-9163 9162 0
-9163 -9161 0
c Var 'aux628' direct represents '3' with '-9162'
9161 9163 -9162 0
c Encoding variable: aux629 with domain: int(1..2) (representing constraint ((field_00005_00001=2) + (field_00005_00009=2)))
c Var 'aux629' direct represents '1' with '-9164'
c Var 'aux629' direct represents '2' with '9164'
c Var 'aux629' order represents '2' with '1'
c Var 'aux629' order represents '1' with '-9164'
c Encoding variable: aux630 with domain: int(1..3) (representing constraint ((field_00005_00008=2) + aux629))
c Both direct and order encoding.
c Var 'aux630' order represents '1' with '9165'
c Var 'aux630' direct represents '1' with '9165'
c Var 'aux630' order represents '2' with '9166'
-9165 9166 0
c Var 'aux630' direct represents '2' with '9167'
9165 -9166 9167 0
-9167 9166 0
-9167 -9165 0
c Var 'aux630' direct represents '3' with '-9166'
9165 9167 -9166 0
c Encoding variable: aux631 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux631' order represents '0' with '9168'
c Var 'aux631' direct represents '0' with '9168'
c Var 'aux631' order represents '1' with '9169'
-9168 9169 0
c Var 'aux631' direct represents '1' with '9170'
9168 -9169 9170 0
-9170 9169 0
-9170 -9168 0
c Var 'aux631' direct represents '2' with '-9169'
9168 9170 -9169 0
c Encoding variable: aux632 with domain: int(0..2) (representing constraint ((field_00005_00005=2) + (field_00005_00003=2)))
c Both direct and order encoding.
c Var 'aux632' order represents '0' with '9171'
c Var 'aux632' direct represents '0' with '9171'
c Var 'aux632' order represents '1' with '9172'
-9171 9172 0
c Var 'aux632' direct represents '1' with '9173'
9171 -9172 9173 0
-9173 9172 0
-9173 -9171 0
c Var 'aux632' direct represents '2' with '-9172'
9171 9173 -9172 0
c Encoding variable: aux633 with domain: int(0..2) (representing constraint ((field_00005_00001=3) + (field_00005_00008=3)))
c Both direct and order encoding.
c Var 'aux633' order represents '0' with '9174'
c Var 'aux633' direct represents '0' with '9174'
c Var 'aux633' order represents '1' with '9175'
-9174 9175 0
c Var 'aux633' direct represents '1' with '9176'
9174 -9175 9176 0
-9176 9175 0
-9176 -9174 0
c Var 'aux633' direct represents '2' with '-9175'
9174 9176 -9175 0
c Encoding variable: aux634 with domain: int(0..2) (representing constraint ((field_00005_00006=3) + (field_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux634' order represents '0' with '9177'
c Var 'aux634' direct represents '0' with '9177'
c Var 'aux634' order represents '1' with '9178'
-9177 9178 0
c Var 'aux634' direct represents '1' with '9179'
9177 -9178 9179 0
-9179 9178 0
-9179 -9177 0
c Var 'aux634' direct represents '2' with '-9178'
9177 9179 -9178 0
c Encoding variable: aux635 with domain: int(0..2) (representing constraint ((field_00005_00005=3) + (field_00005_00003=3)))
c Both direct and order encoding.
c Var 'aux635' order represents '0' with '9180'
c Var 'aux635' direct represents '0' with '9180'
c Var 'aux635' order represents '1' with '9181'
-9180 9181 0
c Var 'aux635' direct represents '1' with '9182'
9180 -9181 9182 0
-9182 9181 0
-9182 -9180 0
c Var 'aux635' direct represents '2' with '-9181'
9180 9182 -9181 0
c Encoding variable: aux636 with domain: int(0..2) (representing constraint ((field_00005_00001=4) + (field_00005_00008=4)))
c Both direct and order encoding.
c Var 'aux636' order represents '0' with '9183'
c Var 'aux636' direct represents '0' with '9183'
c Var 'aux636' order represents '1' with '9184'
-9183 9184 0
c Var 'aux636' direct represents '1' with '9185'
9183 -9184 9185 0
-9185 9184 0
-9185 -9183 0
c Var 'aux636' direct represents '2' with '-9184'
9183 9185 -9184 0
c Encoding variable: aux637 with domain: int(0..2) (representing constraint ((field_00005_00006=4) + (field_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux637' order represents '0' with '9186'
c Var 'aux637' direct represents '0' with '9186'
c Var 'aux637' order represents '1' with '9187'
-9186 9187 0
c Var 'aux637' direct represents '1' with '9188'
9186 -9187 9188 0
-9188 9187 0
-9188 -9186 0
c Var 'aux637' direct represents '2' with '-9187'
9186 9188 -9187 0
c Encoding variable: aux638 with domain: int(0..2) (representing constraint ((field_00005_00005=4) + (field_00005_00003=4)))
c Both direct and order encoding.
c Var 'aux638' order represents '0' with '9189'
c Var 'aux638' direct represents '0' with '9189'
c Var 'aux638' order represents '1' with '9190'
-9189 9190 0
c Var 'aux638' direct represents '1' with '9191'
9189 -9190 9191 0
-9191 9190 0
-9191 -9189 0
c Var 'aux638' direct represents '2' with '-9190'
9189 9191 -9190 0
c Encoding variable: aux639 with domain: int(0..2) (representing constraint ((field_00005_00001=5) + (field_00005_00008=5)))
c Both direct and order encoding.
c Var 'aux639' order represents '0' with '9192'
c Var 'aux639' direct represents '0' with '9192'
c Var 'aux639' order represents '1' with '9193'
-9192 9193 0
c Var 'aux639' direct represents '1' with '9194'
9192 -9193 9194 0
-9194 9193 0
-9194 -9192 0
c Var 'aux639' direct represents '2' with '-9193'
9192 9194 -9193 0
c Encoding variable: aux640 with domain: int(0..2) (representing constraint ((field_00005_00006=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux640' order represents '0' with '9195'
c Var 'aux640' direct represents '0' with '9195'
c Var 'aux640' order represents '1' with '9196'
-9195 9196 0
c Var 'aux640' direct represents '1' with '9197'
9195 -9196 9197 0
-9197 9196 0
-9197 -9195 0
c Var 'aux640' direct represents '2' with '-9196'
9195 9197 -9196 0
c Encoding variable: aux641 with domain: int(0..2) (representing constraint ((field_00005_00005=5) + (field_00005_00003=5)))
c Both direct and order encoding.
c Var 'aux641' order represents '0' with '9198'
c Var 'aux641' direct represents '0' with '9198'
c Var 'aux641' order represents '1' with '9199'
-9198 9199 0
c Var 'aux641' direct represents '1' with '9200'
9198 -9199 9200 0
-9200 9199 0
-9200 -9198 0
c Var 'aux641' direct represents '2' with '-9199'
9198 9200 -9199 0
c Encoding variable: aux642 with domain: int(0..2) (representing constraint ((field_00005_00001=6) + (field_00005_00008=6)))
c Both direct and order encoding.
c Var 'aux642' order represents '0' with '9201'
c Var 'aux642' direct represents '0' with '9201'
c Var 'aux642' order represents '1' with '9202'
-9201 9202 0
c Var 'aux642' direct represents '1' with '9203'
9201 -9202 9203 0
-9203 9202 0
-9203 -9201 0
c Var 'aux642' direct represents '2' with '-9202'
9201 9203 -9202 0
c Encoding variable: aux643 with domain: int(0..2) (representing constraint ((field_00005_00006=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux643' order represents '0' with '9204'
c Var 'aux643' direct represents '0' with '9204'
c Var 'aux643' order represents '1' with '9205'
-9204 9205 0
c Var 'aux643' direct represents '1' with '9206'
9204 -9205 9206 0
-9206 9205 0
-9206 -9204 0
c Var 'aux643' direct represents '2' with '-9205'
9204 9206 -9205 0
c Encoding variable: aux644 with domain: int(0..2) (representing constraint ((field_00005_00005=6) + (field_00005_00003=6)))
c Both direct and order encoding.
c Var 'aux644' order represents '0' with '9207'
c Var 'aux644' direct represents '0' with '9207'
c Var 'aux644' order represents '1' with '9208'
-9207 9208 0
c Var 'aux644' direct represents '1' with '9209'
9207 -9208 9209 0
-9209 9208 0
-9209 -9207 0
c Var 'aux644' direct represents '2' with '-9208'
9207 9209 -9208 0
c Encoding variable: aux645 with domain: int(0..2) (representing constraint ((field_00005_00001=7) + (field_00005_00008=7)))
c Both direct and order encoding.
c Var 'aux645' order represents '0' with '9210'
c Var 'aux645' direct represents '0' with '9210'
c Var 'aux645' order represents '1' with '9211'
-9210 9211 0
c Var 'aux645' direct represents '1' with '9212'
9210 -9211 9212 0
-9212 9211 0
-9212 -9210 0
c Var 'aux645' direct represents '2' with '-9211'
9210 9212 -9211 0
c Encoding variable: aux646 with domain: int(1..2) (representing constraint ((field_00005_00007=7) + (field_00005_00002=7)))
c Var 'aux646' direct represents '1' with '-9213'
c Var 'aux646' direct represents '2' with '9213'
c Var 'aux646' order represents '2' with '1'
c Var 'aux646' order represents '1' with '-9213'
c Encoding variable: aux647 with domain: int(1..3) (representing constraint ((field_00005_00006=7) + aux646))
c Both direct and order encoding.
c Var 'aux647' order represents '1' with '9214'
c Var 'aux647' direct represents '1' with '9214'
c Var 'aux647' order represents '2' with '9215'
-9214 9215 0
c Var 'aux647' direct represents '2' with '9216'
9214 -9215 9216 0
-9216 9215 0
-9216 -9214 0
c Var 'aux647' direct represents '3' with '-9215'
9214 9216 -9215 0
c Encoding variable: aux648 with domain: int(0..2) (representing constraint ((field_00005_00005=7) + (field_00005_00003=7)))
c Both direct and order encoding.
c Var 'aux648' order represents '0' with '9217'
c Var 'aux648' direct represents '0' with '9217'
c Var 'aux648' order represents '1' with '9218'
-9217 9218 0
c Var 'aux648' direct represents '1' with '9219'
9217 -9218 9219 0
-9219 9218 0
-9219 -9217 0
c Var 'aux648' direct represents '2' with '-9218'
9217 9219 -9218 0
c Encoding variable: aux649 with domain: int(0..2) (representing constraint ((field_00005_00001=8) + (field_00005_00008=8)))
c Both direct and order encoding.
c Var 'aux649' order represents '0' with '9220'
c Var 'aux649' direct represents '0' with '9220'
c Var 'aux649' order represents '1' with '9221'
-9220 9221 0
c Var 'aux649' direct represents '1' with '9222'
9220 -9221 9222 0
-9222 9221 0
-9222 -9220 0
c Var 'aux649' direct represents '2' with '-9221'
9220 9222 -9221 0
c Encoding variable: aux650 with domain: int(0..2) (representing constraint ((field_00005_00006=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux650' order represents '0' with '9223'
c Var 'aux650' direct represents '0' with '9223'
c Var 'aux650' order represents '1' with '9224'
-9223 9224 0
c Var 'aux650' direct represents '1' with '9225'
9223 -9224 9225 0
-9225 9224 0
-9225 -9223 0
c Var 'aux650' direct represents '2' with '-9224'
9223 9225 -9224 0
c Encoding variable: aux651 with domain: int(0..2) (representing constraint ((field_00005_00005=8) + (field_00005_00003=8)))
c Both direct and order encoding.
c Var 'aux651' order represents '0' with '9226'
c Var 'aux651' direct represents '0' with '9226'
c Var 'aux651' order represents '1' with '9227'
-9226 9227 0
c Var 'aux651' direct represents '1' with '9228'
9226 -9227 9228 0
-9228 9227 0
-9228 -9226 0
c Var 'aux651' direct represents '2' with '-9227'
9226 9228 -9227 0
c Encoding variable: aux652 with domain: int(0..2) (representing constraint ((field_00005_00001=9) + (field_00005_00008=9)))
c Both direct and order encoding.
c Var 'aux652' order represents '0' with '9229'
c Var 'aux652' direct represents '0' with '9229'
c Var 'aux652' order represents '1' with '9230'
-9229 9230 0
c Var 'aux652' direct represents '1' with '9231'
9229 -9230 9231 0
-9231 9230 0
-9231 -9229 0
c Var 'aux652' direct represents '2' with '-9230'
9229 9231 -9230 0
c Encoding variable: aux653 with domain: int(0..2) (representing constraint ((field_00005_00006=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux653' order represents '0' with '9232'
c Var 'aux653' direct represents '0' with '9232'
c Var 'aux653' order represents '1' with '9233'
-9232 9233 0
c Var 'aux653' direct represents '1' with '9234'
9232 -9233 9234 0
-9234 9233 0
-9234 -9232 0
c Var 'aux653' direct represents '2' with '-9233'
9232 9234 -9233 0
c Encoding variable: aux654 with domain: int(0..2) (representing constraint ((field_00005_00005=9) + (field_00005_00003=9)))
c Both direct and order encoding.
c Var 'aux654' order represents '0' with '9235'
c Var 'aux654' direct represents '0' with '9235'
c Var 'aux654' order represents '1' with '9236'
-9235 9236 0
c Var 'aux654' direct represents '1' with '9237'
9235 -9236 9237 0
-9237 9236 0
-9237 -9235 0
c Var 'aux654' direct represents '2' with '-9236'
9235 9237 -9236 0
c Encoding variable: aux655 with domain: int(0..2) (representing constraint ((field_00006_00001=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux655' order represents '0' with '9238'
c Var 'aux655' direct represents '0' with '9238'
c Var 'aux655' order represents '1' with '9239'
-9238 9239 0
c Var 'aux655' direct represents '1' with '9240'
9238 -9239 9240 0
-9240 9239 0
-9240 -9238 0
c Var 'aux655' direct represents '2' with '-9239'
9238 9240 -9239 0
c Encoding variable: aux656 with domain: int(0..2) (representing constraint ((field_00006_00008=1) + (field_00006_00003=1)))
c Both direct and order encoding.
c Var 'aux656' order represents '0' with '9241'
c Var 'aux656' direct represents '0' with '9241'
c Var 'aux656' order represents '1' with '9242'
-9241 9242 0
c Var 'aux656' direct represents '1' with '9243'
9241 -9242 9243 0
-9243 9242 0
-9243 -9241 0
c Var 'aux656' direct represents '2' with '-9242'
9241 9243 -9242 0
c Encoding variable: aux657 with domain: int(0..2) (representing constraint ((field_00006_00007=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux657' order represents '0' with '9244'
c Var 'aux657' direct represents '0' with '9244'
c Var 'aux657' order represents '1' with '9245'
-9244 9245 0
c Var 'aux657' direct represents '1' with '9246'
9244 -9245 9246 0
-9246 9245 0
-9246 -9244 0
c Var 'aux657' direct represents '2' with '-9245'
9244 9246 -9245 0
c Encoding variable: aux658 with domain: int(0..3) (representing constraint ((field_00006_00004=1) + aux657))
c Both direct and order encoding.
c Var 'aux658' order represents '0' with '9247'
c Var 'aux658' direct represents '0' with '9247'
c Var 'aux658' order represents '1' with '9248'
-9247 9248 0
c Var 'aux658' direct represents '1' with '9249'
9247 -9248 9249 0
-9249 9248 0
-9249 -9247 0
c Var 'aux658' order represents '2' with '9250'
-9248 9250 0
c Var 'aux658' direct represents '2' with '9251'
9248 -9250 9251 0
-9251 9250 0
-9251 -9248 0
c Var 'aux658' direct represents '3' with '-9250'
9247 9249 9251 -9250 0
c Encoding variable: aux659 with domain: int(0..2) (representing constraint ((field_00006_00001=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux659' order represents '0' with '9252'
c Var 'aux659' direct represents '0' with '9252'
c Var 'aux659' order represents '1' with '9253'
-9252 9253 0
c Var 'aux659' direct represents '1' with '9254'
9252 -9253 9254 0
-9254 9253 0
-9254 -9252 0
c Var 'aux659' direct represents '2' with '-9253'
9252 9254 -9253 0
c Encoding variable: aux660 with domain: int(0..2) (representing constraint ((field_00006_00008=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux660' order represents '0' with '9255'
c Var 'aux660' direct represents '0' with '9255'
c Var 'aux660' order represents '1' with '9256'
-9255 9256 0
c Var 'aux660' direct represents '1' with '9257'
9255 -9256 9257 0
-9257 9256 0
-9257 -9255 0
c Var 'aux660' direct represents '2' with '-9256'
9255 9257 -9256 0
c Encoding variable: aux661 with domain: int(0..2) (representing constraint ((field_00006_00007=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux661' order represents '0' with '9258'
c Var 'aux661' direct represents '0' with '9258'
c Var 'aux661' order represents '1' with '9259'
-9258 9259 0
c Var 'aux661' direct represents '1' with '9260'
9258 -9259 9260 0
-9260 9259 0
-9260 -9258 0
c Var 'aux661' direct represents '2' with '-9259'
9258 9260 -9259 0
c Encoding variable: aux662 with domain: int(0..3) (representing constraint ((field_00006_00004=2) + aux661))
c Both direct and order encoding.
c Var 'aux662' order represents '0' with '9261'
c Var 'aux662' direct represents '0' with '9261'
c Var 'aux662' order represents '1' with '9262'
-9261 9262 0
c Var 'aux662' direct represents '1' with '9263'
9261 -9262 9263 0
-9263 9262 0
-9263 -9261 0
c Var 'aux662' order represents '2' with '9264'
-9262 9264 0
c Var 'aux662' direct represents '2' with '9265'
9262 -9264 9265 0
-9265 9264 0
-9265 -9262 0
c Var 'aux662' direct represents '3' with '-9264'
9261 9263 9265 -9264 0
c Encoding variable: aux663 with domain: int(0..2) (representing constraint ((field_00006_00001=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux663' order represents '0' with '9266'
c Var 'aux663' direct represents '0' with '9266'
c Var 'aux663' order represents '1' with '9267'
-9266 9267 0
c Var 'aux663' direct represents '1' with '9268'
9266 -9267 9268 0
-9268 9267 0
-9268 -9266 0
c Var 'aux663' direct represents '2' with '-9267'
9266 9268 -9267 0
c Encoding variable: aux664 with domain: int(0..2) (representing constraint ((field_00006_00008=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux664' order represents '0' with '9269'
c Var 'aux664' direct represents '0' with '9269'
c Var 'aux664' order represents '1' with '9270'
-9269 9270 0
c Var 'aux664' direct represents '1' with '9271'
9269 -9270 9271 0
-9271 9270 0
-9271 -9269 0
c Var 'aux664' direct represents '2' with '-9270'
9269 9271 -9270 0
c Encoding variable: aux665 with domain: int(0..2) (representing constraint ((field_00006_00007=3) + (field_00006_00005=3)))
c Both direct and order encoding.
c Var 'aux665' order represents '0' with '9272'
c Var 'aux665' direct represents '0' with '9272'
c Var 'aux665' order represents '1' with '9273'
-9272 9273 0
c Var 'aux665' direct represents '1' with '9274'
9272 -9273 9274 0
-9274 9273 0
-9274 -9272 0
c Var 'aux665' direct represents '2' with '-9273'
9272 9274 -9273 0
c Encoding variable: aux666 with domain: int(0..3) (representing constraint ((field_00006_00004=3) + aux665))
c Both direct and order encoding.
c Var 'aux666' order represents '0' with '9275'
c Var 'aux666' direct represents '0' with '9275'
c Var 'aux666' order represents '1' with '9276'
-9275 9276 0
c Var 'aux666' direct represents '1' with '9277'
9275 -9276 9277 0
-9277 9276 0
-9277 -9275 0
c Var 'aux666' order represents '2' with '9278'
-9276 9278 0
c Var 'aux666' direct represents '2' with '9279'
9276 -9278 9279 0
-9279 9278 0
-9279 -9276 0
c Var 'aux666' direct represents '3' with '-9278'
9275 9277 9279 -9278 0
c Encoding variable: aux667 with domain: int(0..2) (representing constraint ((field_00006_00001=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux667' order represents '0' with '9280'
c Var 'aux667' direct represents '0' with '9280'
c Var 'aux667' order represents '1' with '9281'
-9280 9281 0
c Var 'aux667' direct represents '1' with '9282'
9280 -9281 9282 0
-9282 9281 0
-9282 -9280 0
c Var 'aux667' direct represents '2' with '-9281'
9280 9282 -9281 0
c Encoding variable: aux668 with domain: int(0..2) (representing constraint ((field_00006_00008=4) + (field_00006_00003=4)))
c Both direct and order encoding.
c Var 'aux668' order represents '0' with '9283'
c Var 'aux668' direct represents '0' with '9283'
c Var 'aux668' order represents '1' with '9284'
-9283 9284 0
c Var 'aux668' direct represents '1' with '9285'
9283 -9284 9285 0
-9285 9284 0
-9285 -9283 0
c Var 'aux668' direct represents '2' with '-9284'
9283 9285 -9284 0
c Encoding variable: aux669 with domain: int(0..2) (representing constraint ((field_00006_00007=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux669' order represents '0' with '9286'
c Var 'aux669' direct represents '0' with '9286'
c Var 'aux669' order represents '1' with '9287'
-9286 9287 0
c Var 'aux669' direct represents '1' with '9288'
9286 -9287 9288 0
-9288 9287 0
-9288 -9286 0
c Var 'aux669' direct represents '2' with '-9287'
9286 9288 -9287 0
c Encoding variable: aux670 with domain: int(0..3) (representing constraint ((field_00006_00004=4) + aux669))
c Both direct and order encoding.
c Var 'aux670' order represents '0' with '9289'
c Var 'aux670' direct represents '0' with '9289'
c Var 'aux670' order represents '1' with '9290'
-9289 9290 0
c Var 'aux670' direct represents '1' with '9291'
9289 -9290 9291 0
-9291 9290 0
-9291 -9289 0
c Var 'aux670' order represents '2' with '9292'
-9290 9292 0
c Var 'aux670' direct represents '2' with '9293'
9290 -9292 9293 0
-9293 9292 0
-9293 -9290 0
c Var 'aux670' direct represents '3' with '-9292'
9289 9291 9293 -9292 0
c Encoding variable: aux671 with domain: int(0..2) (representing constraint ((field_00006_00001=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux671' order represents '0' with '9294'
c Var 'aux671' direct represents '0' with '9294'
c Var 'aux671' order represents '1' with '9295'
-9294 9295 0
c Var 'aux671' direct represents '1' with '9296'
9294 -9295 9296 0
-9296 9295 0
-9296 -9294 0
c Var 'aux671' direct represents '2' with '-9295'
9294 9296 -9295 0
c Encoding variable: aux672 with domain: int(0..2) (representing constraint ((field_00006_00008=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux672' order represents '0' with '9297'
c Var 'aux672' direct represents '0' with '9297'
c Var 'aux672' order represents '1' with '9298'
-9297 9298 0
c Var 'aux672' direct represents '1' with '9299'
9297 -9298 9299 0
-9299 9298 0
-9299 -9297 0
c Var 'aux672' direct represents '2' with '-9298'
9297 9299 -9298 0
c Encoding variable: aux673 with domain: int(0..2) (representing constraint ((field_00006_00007=5) + (field_00006_00005=5)))
c Both direct and order encoding.
c Var 'aux673' order represents '0' with '9300'
c Var 'aux673' direct represents '0' with '9300'
c Var 'aux673' order represents '1' with '9301'
-9300 9301 0
c Var 'aux673' direct represents '1' with '9302'
9300 -9301 9302 0
-9302 9301 0
-9302 -9300 0
c Var 'aux673' direct represents '2' with '-9301'
9300 9302 -9301 0
c Encoding variable: aux674 with domain: int(0..3) (representing constraint ((field_00006_00004=5) + aux673))
c Both direct and order encoding.
c Var 'aux674' order represents '0' with '9303'
c Var 'aux674' direct represents '0' with '9303'
c Var 'aux674' order represents '1' with '9304'
-9303 9304 0
c Var 'aux674' direct represents '1' with '9305'
9303 -9304 9305 0
-9305 9304 0
-9305 -9303 0
c Var 'aux674' order represents '2' with '9306'
-9304 9306 0
c Var 'aux674' direct represents '2' with '9307'
9304 -9306 9307 0
-9307 9306 0
-9307 -9304 0
c Var 'aux674' direct represents '3' with '-9306'
9303 9305 9307 -9306 0
c Encoding variable: aux675 with domain: int(0..2) (representing constraint ((field_00006_00001=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux675' order represents '0' with '9308'
c Var 'aux675' direct represents '0' with '9308'
c Var 'aux675' order represents '1' with '9309'
-9308 9309 0
c Var 'aux675' direct represents '1' with '9310'
9308 -9309 9310 0
-9310 9309 0
-9310 -9308 0
c Var 'aux675' direct represents '2' with '-9309'
9308 9310 -9309 0
c Encoding variable: aux676 with domain: int(0..2) (representing constraint ((field_00006_00008=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux676' order represents '0' with '9311'
c Var 'aux676' direct represents '0' with '9311'
c Var 'aux676' order represents '1' with '9312'
-9311 9312 0
c Var 'aux676' direct represents '1' with '9313'
9311 -9312 9313 0
-9313 9312 0
-9313 -9311 0
c Var 'aux676' direct represents '2' with '-9312'
9311 9313 -9312 0
c Encoding variable: aux677 with domain: int(0..2) (representing constraint ((field_00006_00007=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux677' order represents '0' with '9314'
c Var 'aux677' direct represents '0' with '9314'
c Var 'aux677' order represents '1' with '9315'
-9314 9315 0
c Var 'aux677' direct represents '1' with '9316'
9314 -9315 9316 0
-9316 9315 0
-9316 -9314 0
c Var 'aux677' direct represents '2' with '-9315'
9314 9316 -9315 0
c Encoding variable: aux678 with domain: int(0..3) (representing constraint ((field_00006_00004=6) + aux677))
c Both direct and order encoding.
c Var 'aux678' order represents '0' with '9317'
c Var 'aux678' direct represents '0' with '9317'
c Var 'aux678' order represents '1' with '9318'
-9317 9318 0
c Var 'aux678' direct represents '1' with '9319'
9317 -9318 9319 0
-9319 9318 0
-9319 -9317 0
c Var 'aux678' order represents '2' with '9320'
-9318 9320 0
c Var 'aux678' direct represents '2' with '9321'
9318 -9320 9321 0
-9321 9320 0
-9321 -9318 0
c Var 'aux678' direct represents '3' with '-9320'
9317 9319 9321 -9320 0
c Encoding variable: aux679 with domain: int(0..2) (representing constraint ((field_00006_00001=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux679' order represents '0' with '9322'
c Var 'aux679' direct represents '0' with '9322'
c Var 'aux679' order represents '1' with '9323'
-9322 9323 0
c Var 'aux679' direct represents '1' with '9324'
9322 -9323 9324 0
-9324 9323 0
-9324 -9322 0
c Var 'aux679' direct represents '2' with '-9323'
9322 9324 -9323 0
c Encoding variable: aux680 with domain: int(0..2) (representing constraint ((field_00006_00008=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux680' order represents '0' with '9325'
c Var 'aux680' direct represents '0' with '9325'
c Var 'aux680' order represents '1' with '9326'
-9325 9326 0
c Var 'aux680' direct represents '1' with '9327'
9325 -9326 9327 0
-9327 9326 0
-9327 -9325 0
c Var 'aux680' direct represents '2' with '-9326'
9325 9327 -9326 0
c Encoding variable: aux681 with domain: int(0..2) (representing constraint ((field_00006_00007=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux681' order represents '0' with '9328'
c Var 'aux681' direct represents '0' with '9328'
c Var 'aux681' order represents '1' with '9329'
-9328 9329 0
c Var 'aux681' direct represents '1' with '9330'
9328 -9329 9330 0
-9330 9329 0
-9330 -9328 0
c Var 'aux681' direct represents '2' with '-9329'
9328 9330 -9329 0
c Encoding variable: aux682 with domain: int(1..2) (representing constraint ((field_00006_00006=7) + (field_00006_00004=7)))
c Var 'aux682' direct represents '1' with '-9331'
c Var 'aux682' direct represents '2' with '9331'
c Var 'aux682' order represents '2' with '1'
c Var 'aux682' order represents '1' with '-9331'
c Encoding variable: aux683 with domain: int(1..4) (representing constraint (aux682 + aux680))
c Both direct and order encoding.
c Var 'aux683' order represents '1' with '9332'
c Var 'aux683' direct represents '1' with '9332'
c Var 'aux683' order represents '2' with '9333'
-9332 9333 0
c Var 'aux683' direct represents '2' with '9334'
9332 -9333 9334 0
-9334 9333 0
-9334 -9332 0
c Var 'aux683' order represents '3' with '9335'
-9333 9335 0
c Var 'aux683' direct represents '3' with '9336'
9333 -9335 9336 0
-9336 9335 0
-9336 -9333 0
c Var 'aux683' direct represents '4' with '-9335'
9332 9334 9336 -9335 0
c Encoding variable: aux684 with domain: int(0..2) (representing constraint ((field_00006_00001=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux684' order represents '0' with '9337'
c Var 'aux684' direct represents '0' with '9337'
c Var 'aux684' order represents '1' with '9338'
-9337 9338 0
c Var 'aux684' direct represents '1' with '9339'
9337 -9338 9339 0
-9339 9338 0
-9339 -9337 0
c Var 'aux684' direct represents '2' with '-9338'
9337 9339 -9338 0
c Encoding variable: aux685 with domain: int(1..2) (representing constraint ((field_00006_00008=8) + (field_00006_00002=8)))
c Var 'aux685' direct represents '1' with '-9340'
c Var 'aux685' direct represents '2' with '9340'
c Var 'aux685' order represents '2' with '1'
c Var 'aux685' order represents '1' with '-9340'
c Encoding variable: aux686 with domain: int(1..3) (representing constraint ((field_00006_00007=8) + aux685))
c Both direct and order encoding.
c Var 'aux686' order represents '1' with '9341'
c Var 'aux686' direct represents '1' with '9341'
c Var 'aux686' order represents '2' with '9342'
-9341 9342 0
c Var 'aux686' direct represents '2' with '9343'
9341 -9342 9343 0
-9343 9342 0
-9343 -9341 0
c Var 'aux686' direct represents '3' with '-9342'
9341 9343 -9342 0
c Encoding variable: aux687 with domain: int(0..2) (representing constraint ((field_00006_00005=8) + (field_00006_00004=8)))
c Both direct and order encoding.
c Var 'aux687' order represents '0' with '9344'
c Var 'aux687' direct represents '0' with '9344'
c Var 'aux687' order represents '1' with '9345'
-9344 9345 0
c Var 'aux687' direct represents '1' with '9346'
9344 -9345 9346 0
-9346 9345 0
-9346 -9344 0
c Var 'aux687' direct represents '2' with '-9345'
9344 9346 -9345 0
c Encoding variable: aux688 with domain: int(0..3) (representing constraint ((field_00006_00003=8) + aux687))
c Both direct and order encoding.
c Var 'aux688' order represents '0' with '9347'
c Var 'aux688' direct represents '0' with '9347'
c Var 'aux688' order represents '1' with '9348'
-9347 9348 0
c Var 'aux688' direct represents '1' with '9349'
9347 -9348 9349 0
-9349 9348 0
-9349 -9347 0
c Var 'aux688' order represents '2' with '9350'
-9348 9350 0
c Var 'aux688' direct represents '2' with '9351'
9348 -9350 9351 0
-9351 9350 0
-9351 -9348 0
c Var 'aux688' direct represents '3' with '-9350'
9347 9349 9351 -9350 0
c Encoding variable: aux689 with domain: int(0..2) (representing constraint ((field_00006_00001=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux689' order represents '0' with '9352'
c Var 'aux689' direct represents '0' with '9352'
c Var 'aux689' order represents '1' with '9353'
-9352 9353 0
c Var 'aux689' direct represents '1' with '9354'
9352 -9353 9354 0
-9354 9353 0
-9354 -9352 0
c Var 'aux689' direct represents '2' with '-9353'
9352 9354 -9353 0
c Encoding variable: aux690 with domain: int(0..2) (representing constraint ((field_00006_00008=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux690' order represents '0' with '9355'
c Var 'aux690' direct represents '0' with '9355'
c Var 'aux690' order represents '1' with '9356'
-9355 9356 0
c Var 'aux690' direct represents '1' with '9357'
9355 -9356 9357 0
-9357 9356 0
-9357 -9355 0
c Var 'aux690' direct represents '2' with '-9356'
9355 9357 -9356 0
c Encoding variable: aux691 with domain: int(0..2) (representing constraint ((field_00006_00007=9) + (field_00006_00005=9)))
c Both direct and order encoding.
c Var 'aux691' order represents '0' with '9358'
c Var 'aux691' direct represents '0' with '9358'
c Var 'aux691' order represents '1' with '9359'
-9358 9359 0
c Var 'aux691' direct represents '1' with '9360'
9358 -9359 9360 0
-9360 9359 0
-9360 -9358 0
c Var 'aux691' direct represents '2' with '-9359'
9358 9360 -9359 0
c Encoding variable: aux692 with domain: int(0..3) (representing constraint ((field_00006_00004=9) + aux691))
c Both direct and order encoding.
c Var 'aux692' order represents '0' with '9361'
c Var 'aux692' direct represents '0' with '9361'
c Var 'aux692' order represents '1' with '9362'
-9361 9362 0
c Var 'aux692' direct represents '1' with '9363'
9361 -9362 9363 0
-9363 9362 0
-9363 -9361 0
c Var 'aux692' order represents '2' with '9364'
-9362 9364 0
c Var 'aux692' direct represents '2' with '9365'
9362 -9364 9365 0
-9365 9364 0
-9365 -9362 0
c Var 'aux692' direct represents '3' with '-9364'
9361 9363 9365 -9364 0
c Encoding variable: aux693 with domain: int(0..2) (representing constraint ((field_00007_00001=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux693' order represents '0' with '9366'
c Var 'aux693' direct represents '0' with '9366'
c Var 'aux693' order represents '1' with '9367'
-9366 9367 0
c Var 'aux693' direct represents '1' with '9368'
9366 -9367 9368 0
-9368 9367 0
-9368 -9366 0
c Var 'aux693' direct represents '2' with '-9367'
9366 9368 -9367 0
c Encoding variable: aux694 with domain: int(0..2) (representing constraint ((field_00007_00006=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux694' order represents '0' with '9369'
c Var 'aux694' direct represents '0' with '9369'
c Var 'aux694' order represents '1' with '9370'
-9369 9370 0
c Var 'aux694' direct represents '1' with '9371'
9369 -9370 9371 0
-9371 9370 0
-9371 -9369 0
c Var 'aux694' direct represents '2' with '-9370'
9369 9371 -9370 0
c Encoding variable: aux695 with domain: int(0..2) (representing constraint ((field_00007_00005=1) + (field_00007_00003=1)))
c Both direct and order encoding.
c Var 'aux695' order represents '0' with '9372'
c Var 'aux695' direct represents '0' with '9372'
c Var 'aux695' order represents '1' with '9373'
-9372 9373 0
c Var 'aux695' direct represents '1' with '9374'
9372 -9373 9374 0
-9374 9373 0
-9374 -9372 0
c Var 'aux695' direct represents '2' with '-9373'
9372 9374 -9373 0
c Encoding variable: aux696 with domain: int(0..2) (representing constraint ((field_00007_00001=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux696' order represents '0' with '9375'
c Var 'aux696' direct represents '0' with '9375'
c Var 'aux696' order represents '1' with '9376'
-9375 9376 0
c Var 'aux696' direct represents '1' with '9377'
9375 -9376 9377 0
-9377 9376 0
-9377 -9375 0
c Var 'aux696' direct represents '2' with '-9376'
9375 9377 -9376 0
c Encoding variable: aux697 with domain: int(0..2) (representing constraint ((field_00007_00006=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux697' order represents '0' with '9378'
c Var 'aux697' direct represents '0' with '9378'
c Var 'aux697' order represents '1' with '9379'
-9378 9379 0
c Var 'aux697' direct represents '1' with '9380'
9378 -9379 9380 0
-9380 9379 0
-9380 -9378 0
c Var 'aux697' direct represents '2' with '-9379'
9378 9380 -9379 0
c Encoding variable: aux698 with domain: int(0..2) (representing constraint ((field_00007_00005=2) + (field_00007_00003=2)))
c Both direct and order encoding.
c Var 'aux698' order represents '0' with '9381'
c Var 'aux698' direct represents '0' with '9381'
c Var 'aux698' order represents '1' with '9382'
-9381 9382 0
c Var 'aux698' direct represents '1' with '9383'
9381 -9382 9383 0
-9383 9382 0
-9383 -9381 0
c Var 'aux698' direct represents '2' with '-9382'
9381 9383 -9382 0
c Encoding variable: aux699 with domain: int(0..2) (representing constraint ((field_00007_00001=3) + (field_00007_00008=3)))
c Both direct and order encoding.
c Var 'aux699' order represents '0' with '9384'
c Var 'aux699' direct represents '0' with '9384'
c Var 'aux699' order represents '1' with '9385'
-9384 9385 0
c Var 'aux699' direct represents '1' with '9386'
9384 -9385 9386 0
-9386 9385 0
-9386 -9384 0
c Var 'aux699' direct represents '2' with '-9385'
9384 9386 -9385 0
c Encoding variable: aux700 with domain: int(0..2) (representing constraint ((field_00007_00006=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux700' order represents '0' with '9387'
c Var 'aux700' direct represents '0' with '9387'
c Var 'aux700' order represents '1' with '9388'
-9387 9388 0
c Var 'aux700' direct represents '1' with '9389'
9387 -9388 9389 0
-9389 9388 0
-9389 -9387 0
c Var 'aux700' direct represents '2' with '-9388'
9387 9389 -9388 0
c Encoding variable: aux701 with domain: int(1..2) (representing constraint ((field_00007_00005=3) + (field_00007_00004=3)))
c Var 'aux701' direct represents '1' with '-9390'
c Var 'aux701' direct represents '2' with '9390'
c Var 'aux701' order represents '2' with '1'
c Var 'aux701' order represents '1' with '-9390'
c Encoding variable: aux702 with domain: int(1..3) (representing constraint ((field_00007_00003=3) + aux701))
c Both direct and order encoding.
c Var 'aux702' order represents '1' with '9391'
c Var 'aux702' direct represents '1' with '9391'
c Var 'aux702' order represents '2' with '9392'
-9391 9392 0
c Var 'aux702' direct represents '2' with '9393'
9391 -9392 9393 0
-9393 9392 0
-9393 -9391 0
c Var 'aux702' direct represents '3' with '-9392'
9391 9393 -9392 0
c Encoding variable: aux703 with domain: int(0..2) (representing constraint ((field_00007_00001=4) + (field_00007_00008=4)))
c Both direct and order encoding.
c Var 'aux703' order represents '0' with '9394'
c Var 'aux703' direct represents '0' with '9394'
c Var 'aux703' order represents '1' with '9395'
-9394 9395 0
c Var 'aux703' direct represents '1' with '9396'
9394 -9395 9396 0
-9396 9395 0
-9396 -9394 0
c Var 'aux703' direct represents '2' with '-9395'
9394 9396 -9395 0
c Encoding variable: aux704 with domain: int(0..2) (representing constraint ((field_00007_00006=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux704' order represents '0' with '9397'
c Var 'aux704' direct represents '0' with '9397'
c Var 'aux704' order represents '1' with '9398'
-9397 9398 0
c Var 'aux704' direct represents '1' with '9399'
9397 -9398 9399 0
-9399 9398 0
-9399 -9397 0
c Var 'aux704' direct represents '2' with '-9398'
9397 9399 -9398 0
c Encoding variable: aux705 with domain: int(0..2) (representing constraint ((field_00007_00005=4) + (field_00007_00003=4)))
c Both direct and order encoding.
c Var 'aux705' order represents '0' with '9400'
c Var 'aux705' direct represents '0' with '9400'
c Var 'aux705' order represents '1' with '9401'
-9400 9401 0
c Var 'aux705' direct represents '1' with '9402'
9400 -9401 9402 0
-9402 9401 0
-9402 -9400 0
c Var 'aux705' direct represents '2' with '-9401'
9400 9402 -9401 0
c Encoding variable: aux706 with domain: int(0..2) (representing constraint ((field_00007_00001=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux706' order represents '0' with '9403'
c Var 'aux706' direct represents '0' with '9403'
c Var 'aux706' order represents '1' with '9404'
-9403 9404 0
c Var 'aux706' direct represents '1' with '9405'
9403 -9404 9405 0
-9405 9404 0
-9405 -9403 0
c Var 'aux706' direct represents '2' with '-9404'
9403 9405 -9404 0
c Encoding variable: aux707 with domain: int(0..2) (representing constraint ((field_00007_00006=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux707' order represents '0' with '9406'
c Var 'aux707' direct represents '0' with '9406'
c Var 'aux707' order represents '1' with '9407'
-9406 9407 0
c Var 'aux707' direct represents '1' with '9408'
9406 -9407 9408 0
-9408 9407 0
-9408 -9406 0
c Var 'aux707' direct represents '2' with '-9407'
9406 9408 -9407 0
c Encoding variable: aux708 with domain: int(0..2) (representing constraint ((field_00007_00005=5) + (field_00007_00003=5)))
c Both direct and order encoding.
c Var 'aux708' order represents '0' with '9409'
c Var 'aux708' direct represents '0' with '9409'
c Var 'aux708' order represents '1' with '9410'
-9409 9410 0
c Var 'aux708' direct represents '1' with '9411'
9409 -9410 9411 0
-9411 9410 0
-9411 -9409 0
c Var 'aux708' direct represents '2' with '-9410'
9409 9411 -9410 0
c Encoding variable: aux709 with domain: int(0..2) (representing constraint ((field_00007_00001=6) + (field_00007_00008=6)))
c Both direct and order encoding.
c Var 'aux709' order represents '0' with '9412'
c Var 'aux709' direct represents '0' with '9412'
c Var 'aux709' order represents '1' with '9413'
-9412 9413 0
c Var 'aux709' direct represents '1' with '9414'
9412 -9413 9414 0
-9414 9413 0
-9414 -9412 0
c Var 'aux709' direct represents '2' with '-9413'
9412 9414 -9413 0
c Encoding variable: aux710 with domain: int(1..2) (representing constraint ((field_00007_00007=6) + (field_00007_00002=6)))
c Var 'aux710' direct represents '1' with '-9415'
c Var 'aux710' direct represents '2' with '9415'
c Var 'aux710' order represents '2' with '1'
c Var 'aux710' order represents '1' with '-9415'
c Encoding variable: aux711 with domain: int(1..3) (representing constraint ((field_00007_00006=6) + aux710))
c Both direct and order encoding.
c Var 'aux711' order represents '1' with '9416'
c Var 'aux711' direct represents '1' with '9416'
c Var 'aux711' order represents '2' with '9417'
-9416 9417 0
c Var 'aux711' direct represents '2' with '9418'
9416 -9417 9418 0
-9418 9417 0
-9418 -9416 0
c Var 'aux711' direct represents '3' with '-9417'
9416 9418 -9417 0
c Encoding variable: aux712 with domain: int(0..2) (representing constraint ((field_00007_00005=6) + (field_00007_00003=6)))
c Both direct and order encoding.
c Var 'aux712' order represents '0' with '9419'
c Var 'aux712' direct represents '0' with '9419'
c Var 'aux712' order represents '1' with '9420'
-9419 9420 0
c Var 'aux712' direct represents '1' with '9421'
9419 -9420 9421 0
-9421 9420 0
-9421 -9419 0
c Var 'aux712' direct represents '2' with '-9420'
9419 9421 -9420 0
c Encoding variable: aux713 with domain: int(1..2) (representing constraint ((field_00007_00001=7) + (field_00007_00009=7)))
c Var 'aux713' direct represents '1' with '-9422'
c Var 'aux713' direct represents '2' with '9422'
c Var 'aux713' order represents '2' with '1'
c Var 'aux713' order represents '1' with '-9422'
c Encoding variable: aux714 with domain: int(1..3) (representing constraint ((field_00007_00008=7) + aux713))
c Both direct and order encoding.
c Var 'aux714' order represents '1' with '9423'
c Var 'aux714' direct represents '1' with '9423'
c Var 'aux714' order represents '2' with '9424'
-9423 9424 0
c Var 'aux714' direct represents '2' with '9425'
9423 -9424 9425 0
-9425 9424 0
-9425 -9423 0
c Var 'aux714' direct represents '3' with '-9424'
9423 9425 -9424 0
c Encoding variable: aux715 with domain: int(0..2) (representing constraint ((field_00007_00006=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux715' order represents '0' with '9426'
c Var 'aux715' direct represents '0' with '9426'
c Var 'aux715' order represents '1' with '9427'
-9426 9427 0
c Var 'aux715' direct represents '1' with '9428'
9426 -9427 9428 0
-9428 9427 0
-9428 -9426 0
c Var 'aux715' direct represents '2' with '-9427'
9426 9428 -9427 0
c Encoding variable: aux716 with domain: int(0..2) (representing constraint ((field_00007_00005=7) + (field_00007_00003=7)))
c Both direct and order encoding.
c Var 'aux716' order represents '0' with '9429'
c Var 'aux716' direct represents '0' with '9429'
c Var 'aux716' order represents '1' with '9430'
-9429 9430 0
c Var 'aux716' direct represents '1' with '9431'
9429 -9430 9431 0
-9431 9430 0
-9431 -9429 0
c Var 'aux716' direct represents '2' with '-9430'
9429 9431 -9430 0
c Encoding variable: aux717 with domain: int(0..2) (representing constraint ((field_00007_00001=8) + (field_00007_00008=8)))
c Both direct and order encoding.
c Var 'aux717' order represents '0' with '9432'
c Var 'aux717' direct represents '0' with '9432'
c Var 'aux717' order represents '1' with '9433'
-9432 9433 0
c Var 'aux717' direct represents '1' with '9434'
9432 -9433 9434 0
-9434 9433 0
-9434 -9432 0
c Var 'aux717' direct represents '2' with '-9433'
9432 9434 -9433 0
c Encoding variable: aux718 with domain: int(0..2) (representing constraint ((field_00007_00006=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux718' order represents '0' with '9435'
c Var 'aux718' direct represents '0' with '9435'
c Var 'aux718' order represents '1' with '9436'
-9435 9436 0
c Var 'aux718' direct represents '1' with '9437'
9435 -9436 9437 0
-9437 9436 0
-9437 -9435 0
c Var 'aux718' direct represents '2' with '-9436'
9435 9437 -9436 0
c Encoding variable: aux719 with domain: int(0..2) (representing constraint ((field_00007_00005=8) + (field_00007_00003=8)))
c Both direct and order encoding.
c Var 'aux719' order represents '0' with '9438'
c Var 'aux719' direct represents '0' with '9438'
c Var 'aux719' order represents '1' with '9439'
-9438 9439 0
c Var 'aux719' direct represents '1' with '9440'
9438 -9439 9440 0
-9440 9439 0
-9440 -9438 0
c Var 'aux719' direct represents '2' with '-9439'
9438 9440 -9439 0
c Encoding variable: aux720 with domain: int(0..2) (representing constraint ((field_00007_00001=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux720' order represents '0' with '9441'
c Var 'aux720' direct represents '0' with '9441'
c Var 'aux720' order represents '1' with '9442'
-9441 9442 0
c Var 'aux720' direct represents '1' with '9443'
9441 -9442 9443 0
-9443 9442 0
-9443 -9441 0
c Var 'aux720' direct represents '2' with '-9442'
9441 9443 -9442 0
c Encoding variable: aux721 with domain: int(0..2) (representing constraint ((field_00007_00006=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux721' order represents '0' with '9444'
c Var 'aux721' direct represents '0' with '9444'
c Var 'aux721' order represents '1' with '9445'
-9444 9445 0
c Var 'aux721' direct represents '1' with '9446'
9444 -9445 9446 0
-9446 9445 0
-9446 -9444 0
c Var 'aux721' direct represents '2' with '-9445'
9444 9446 -9445 0
c Encoding variable: aux722 with domain: int(0..2) (representing constraint ((field_00007_00005=9) + (field_00007_00003=9)))
c Both direct and order encoding.
c Var 'aux722' order represents '0' with '9447'
c Var 'aux722' direct represents '0' with '9447'
c Var 'aux722' order represents '1' with '9448'
-9447 9448 0
c Var 'aux722' direct represents '1' with '9449'
9447 -9448 9449 0
-9449 9448 0
-9449 -9447 0
c Var 'aux722' direct represents '2' with '-9448'
9447 9449 -9448 0
c Encoding variable: aux723 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00008_00009=1)))
c Both direct and order encoding.
c Var 'aux723' order represents '0' with '9450'
c Var 'aux723' direct represents '0' with '9450'
c Var 'aux723' order represents '1' with '9451'
-9450 9451 0
c Var 'aux723' direct represents '1' with '9452'
9450 -9451 9452 0
-9452 9451 0
-9452 -9450 0
c Var 'aux723' direct represents '2' with '-9451'
9450 9452 -9451 0
c Encoding variable: aux724 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00008_00002=1)))
c Both direct and order encoding.
c Var 'aux724' order represents '0' with '9453'
c Var 'aux724' direct represents '0' with '9453'
c Var 'aux724' order represents '1' with '9454'
-9453 9454 0
c Var 'aux724' direct represents '1' with '9455'
9453 -9454 9455 0
-9455 9454 0
-9455 -9453 0
c Var 'aux724' direct represents '2' with '-9454'
9453 9455 -9454 0
c Encoding variable: aux725 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00008_00006=1)))
c Both direct and order encoding.
c Var 'aux725' order represents '0' with '9456'
c Var 'aux725' direct represents '0' with '9456'
c Var 'aux725' order represents '1' with '9457'
-9456 9457 0
c Var 'aux725' direct represents '1' with '9458'
9456 -9457 9458 0
-9458 9457 0
-9458 -9456 0
c Var 'aux725' direct represents '2' with '-9457'
9456 9458 -9457 0
c Encoding variable: aux726 with domain: int(0..3) (representing constraint ((field_00008_00004=1) + aux725))
c Both direct and order encoding.
c Var 'aux726' order represents '0' with '9459'
c Var 'aux726' direct represents '0' with '9459'
c Var 'aux726' order represents '1' with '9460'
-9459 9460 0
c Var 'aux726' direct represents '1' with '9461'
9459 -9460 9461 0
-9461 9460 0
-9461 -9459 0
c Var 'aux726' order represents '2' with '9462'
-9460 9462 0
c Var 'aux726' direct represents '2' with '9463'
9460 -9462 9463 0
-9463 9462 0
-9463 -9460 0
c Var 'aux726' direct represents '3' with '-9462'
9459 9461 9463 -9462 0
c Encoding variable: aux727 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00008_00009=2)))
c Both direct and order encoding.
c Var 'aux727' order represents '0' with '9464'
c Var 'aux727' direct represents '0' with '9464'
c Var 'aux727' order represents '1' with '9465'
-9464 9465 0
c Var 'aux727' direct represents '1' with '9466'
9464 -9465 9466 0
-9466 9465 0
-9466 -9464 0
c Var 'aux727' direct represents '2' with '-9465'
9464 9466 -9465 0
c Encoding variable: aux728 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00008_00002=2)))
c Both direct and order encoding.
c Var 'aux728' order represents '0' with '9467'
c Var 'aux728' direct represents '0' with '9467'
c Var 'aux728' order represents '1' with '9468'
-9467 9468 0
c Var 'aux728' direct represents '1' with '9469'
9467 -9468 9469 0
-9469 9468 0
-9469 -9467 0
c Var 'aux728' direct represents '2' with '-9468'
9467 9469 -9468 0
c Encoding variable: aux729 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00008_00006=2)))
c Both direct and order encoding.
c Var 'aux729' order represents '0' with '9470'
c Var 'aux729' direct represents '0' with '9470'
c Var 'aux729' order represents '1' with '9471'
-9470 9471 0
c Var 'aux729' direct represents '1' with '9472'
9470 -9471 9472 0
-9472 9471 0
-9472 -9470 0
c Var 'aux729' direct represents '2' with '-9471'
9470 9472 -9471 0
c Encoding variable: aux730 with domain: int(0..3) (representing constraint ((field_00008_00004=2) + aux729))
c Both direct and order encoding.
c Var 'aux730' order represents '0' with '9473'
c Var 'aux730' direct represents '0' with '9473'
c Var 'aux730' order represents '1' with '9474'
-9473 9474 0
c Var 'aux730' direct represents '1' with '9475'
9473 -9474 9475 0
-9475 9474 0
-9475 -9473 0
c Var 'aux730' order represents '2' with '9476'
-9474 9476 0
c Var 'aux730' direct represents '2' with '9477'
9474 -9476 9477 0
-9477 9476 0
-9477 -9474 0
c Var 'aux730' direct represents '3' with '-9476'
9473 9475 9477 -9476 0
c Encoding variable: aux731 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00008_00009=3)))
c Both direct and order encoding.
c Var 'aux731' order represents '0' with '9478'
c Var 'aux731' direct represents '0' with '9478'
c Var 'aux731' order represents '1' with '9479'
-9478 9479 0
c Var 'aux731' direct represents '1' with '9480'
9478 -9479 9480 0
-9480 9479 0
-9480 -9478 0
c Var 'aux731' direct represents '2' with '-9479'
9478 9480 -9479 0
c Encoding variable: aux732 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00008_00002=3)))
c Both direct and order encoding.
c Var 'aux732' order represents '0' with '9481'
c Var 'aux732' direct represents '0' with '9481'
c Var 'aux732' order represents '1' with '9482'
-9481 9482 0
c Var 'aux732' direct represents '1' with '9483'
9481 -9482 9483 0
-9483 9482 0
-9483 -9481 0
c Var 'aux732' direct represents '2' with '-9482'
9481 9483 -9482 0
c Encoding variable: aux733 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00008_00006=3)))
c Both direct and order encoding.
c Var 'aux733' order represents '0' with '9484'
c Var 'aux733' direct represents '0' with '9484'
c Var 'aux733' order represents '1' with '9485'
-9484 9485 0
c Var 'aux733' direct represents '1' with '9486'
9484 -9485 9486 0
-9486 9485 0
-9486 -9484 0
c Var 'aux733' direct represents '2' with '-9485'
9484 9486 -9485 0
c Encoding variable: aux734 with domain: int(0..3) (representing constraint ((field_00008_00004=3) + aux733))
c Both direct and order encoding.
c Var 'aux734' order represents '0' with '9487'
c Var 'aux734' direct represents '0' with '9487'
c Var 'aux734' order represents '1' with '9488'
-9487 9488 0
c Var 'aux734' direct represents '1' with '9489'
9487 -9488 9489 0
-9489 9488 0
-9489 -9487 0
c Var 'aux734' order represents '2' with '9490'
-9488 9490 0
c Var 'aux734' direct represents '2' with '9491'
9488 -9490 9491 0
-9491 9490 0
-9491 -9488 0
c Var 'aux734' direct represents '3' with '-9490'
9487 9489 9491 -9490 0
c Encoding variable: aux735 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00008_00009=4)))
c Both direct and order encoding.
c Var 'aux735' order represents '0' with '9492'
c Var 'aux735' direct represents '0' with '9492'
c Var 'aux735' order represents '1' with '9493'
-9492 9493 0
c Var 'aux735' direct represents '1' with '9494'
9492 -9493 9494 0
-9494 9493 0
-9494 -9492 0
c Var 'aux735' direct represents '2' with '-9493'
9492 9494 -9493 0
c Encoding variable: aux736 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00008_00002=4)))
c Both direct and order encoding.
c Var 'aux736' order represents '0' with '9495'
c Var 'aux736' direct represents '0' with '9495'
c Var 'aux736' order represents '1' with '9496'
-9495 9496 0
c Var 'aux736' direct represents '1' with '9497'
9495 -9496 9497 0
-9497 9496 0
-9497 -9495 0
c Var 'aux736' direct represents '2' with '-9496'
9495 9497 -9496 0
c Encoding variable: aux737 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00008_00006=4)))
c Both direct and order encoding.
c Var 'aux737' order represents '0' with '9498'
c Var 'aux737' direct represents '0' with '9498'
c Var 'aux737' order represents '1' with '9499'
-9498 9499 0
c Var 'aux737' direct represents '1' with '9500'
9498 -9499 9500 0
-9500 9499 0
-9500 -9498 0
c Var 'aux737' direct represents '2' with '-9499'
9498 9500 -9499 0
c Encoding variable: aux738 with domain: int(0..3) (representing constraint ((field_00008_00004=4) + aux737))
c Both direct and order encoding.
c Var 'aux738' order represents '0' with '9501'
c Var 'aux738' direct represents '0' with '9501'
c Var 'aux738' order represents '1' with '9502'
-9501 9502 0
c Var 'aux738' direct represents '1' with '9503'
9501 -9502 9503 0
-9503 9502 0
-9503 -9501 0
c Var 'aux738' order represents '2' with '9504'
-9502 9504 0
c Var 'aux738' direct represents '2' with '9505'
9502 -9504 9505 0
-9505 9504 0
-9505 -9502 0
c Var 'aux738' direct represents '3' with '-9504'
9501 9503 9505 -9504 0
c Encoding variable: aux739 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00008_00009=5)))
c Both direct and order encoding.
c Var 'aux739' order represents '0' with '9506'
c Var 'aux739' direct represents '0' with '9506'
c Var 'aux739' order represents '1' with '9507'
-9506 9507 0
c Var 'aux739' direct represents '1' with '9508'
9506 -9507 9508 0
-9508 9507 0
-9508 -9506 0
c Var 'aux739' direct represents '2' with '-9507'
9506 9508 -9507 0
c Encoding variable: aux740 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00008_00002=5)))
c Both direct and order encoding.
c Var 'aux740' order represents '0' with '9509'
c Var 'aux740' direct represents '0' with '9509'
c Var 'aux740' order represents '1' with '9510'
-9509 9510 0
c Var 'aux740' direct represents '1' with '9511'
9509 -9510 9511 0
-9511 9510 0
-9511 -9509 0
c Var 'aux740' direct represents '2' with '-9510'
9509 9511 -9510 0
c Encoding variable: aux741 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00008_00006=5)))
c Both direct and order encoding.
c Var 'aux741' order represents '0' with '9512'
c Var 'aux741' direct represents '0' with '9512'
c Var 'aux741' order represents '1' with '9513'
-9512 9513 0
c Var 'aux741' direct represents '1' with '9514'
9512 -9513 9514 0
-9514 9513 0
-9514 -9512 0
c Var 'aux741' direct represents '2' with '-9513'
9512 9514 -9513 0
c Encoding variable: aux742 with domain: int(0..3) (representing constraint ((field_00008_00004=5) + aux741))
c Both direct and order encoding.
c Var 'aux742' order represents '0' with '9515'
c Var 'aux742' direct represents '0' with '9515'
c Var 'aux742' order represents '1' with '9516'
-9515 9516 0
c Var 'aux742' direct represents '1' with '9517'
9515 -9516 9517 0
-9517 9516 0
-9517 -9515 0
c Var 'aux742' order represents '2' with '9518'
-9516 9518 0
c Var 'aux742' direct represents '2' with '9519'
9516 -9518 9519 0
-9519 9518 0
-9519 -9516 0
c Var 'aux742' direct represents '3' with '-9518'
9515 9517 9519 -9518 0
c Encoding variable: aux743 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00008_00009=6)))
c Both direct and order encoding.
c Var 'aux743' order represents '0' with '9520'
c Var 'aux743' direct represents '0' with '9520'
c Var 'aux743' order represents '1' with '9521'
-9520 9521 0
c Var 'aux743' direct represents '1' with '9522'
9520 -9521 9522 0
-9522 9521 0
-9522 -9520 0
c Var 'aux743' direct represents '2' with '-9521'
9520 9522 -9521 0
c Encoding variable: aux744 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00008_00002=6)))
c Both direct and order encoding.
c Var 'aux744' order represents '0' with '9523'
c Var 'aux744' direct represents '0' with '9523'
c Var 'aux744' order represents '1' with '9524'
-9523 9524 0
c Var 'aux744' direct represents '1' with '9525'
9523 -9524 9525 0
-9525 9524 0
-9525 -9523 0
c Var 'aux744' direct represents '2' with '-9524'
9523 9525 -9524 0
c Encoding variable: aux745 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00008_00006=6)))
c Both direct and order encoding.
c Var 'aux745' order represents '0' with '9526'
c Var 'aux745' direct represents '0' with '9526'
c Var 'aux745' order represents '1' with '9527'
-9526 9527 0
c Var 'aux745' direct represents '1' with '9528'
9526 -9527 9528 0
-9528 9527 0
-9528 -9526 0
c Var 'aux745' direct represents '2' with '-9527'
9526 9528 -9527 0
c Encoding variable: aux746 with domain: int(0..3) (representing constraint ((field_00008_00004=6) + aux745))
c Both direct and order encoding.
c Var 'aux746' order represents '0' with '9529'
c Var 'aux746' direct represents '0' with '9529'
c Var 'aux746' order represents '1' with '9530'
-9529 9530 0
c Var 'aux746' direct represents '1' with '9531'
9529 -9530 9531 0
-9531 9530 0
-9531 -9529 0
c Var 'aux746' order represents '2' with '9532'
-9530 9532 0
c Var 'aux746' direct represents '2' with '9533'
9530 -9532 9533 0
-9533 9532 0
-9533 -9530 0
c Var 'aux746' direct represents '3' with '-9532'
9529 9531 9533 -9532 0
c Encoding variable: aux747 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00008_00009=7)))
c Both direct and order encoding.
c Var 'aux747' order represents '0' with '9534'
c Var 'aux747' direct represents '0' with '9534'
c Var 'aux747' order represents '1' with '9535'
-9534 9535 0
c Var 'aux747' direct represents '1' with '9536'
9534 -9535 9536 0
-9536 9535 0
-9536 -9534 0
c Var 'aux747' direct represents '2' with '-9535'
9534 9536 -9535 0
c Encoding variable: aux748 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00008_00002=7)))
c Both direct and order encoding.
c Var 'aux748' order represents '0' with '9537'
c Var 'aux748' direct represents '0' with '9537'
c Var 'aux748' order represents '1' with '9538'
-9537 9538 0
c Var 'aux748' direct represents '1' with '9539'
9537 -9538 9539 0
-9539 9538 0
-9539 -9537 0
c Var 'aux748' direct represents '2' with '-9538'
9537 9539 -9538 0
c Encoding variable: aux749 with domain: int(1..2) (representing constraint ((field_00008_00007=7) + (field_00008_00005=7)))
c Var 'aux749' direct represents '1' with '-9540'
c Var 'aux749' direct represents '2' with '9540'
c Var 'aux749' order represents '2' with '1'
c Var 'aux749' order represents '1' with '-9540'
c Encoding variable: aux750 with domain: int(1..3) (representing constraint ((field_00008_00006=7) + aux749))
c Both direct and order encoding.
c Var 'aux750' order represents '1' with '9541'
c Var 'aux750' direct represents '1' with '9541'
c Var 'aux750' order represents '2' with '9542'
-9541 9542 0
c Var 'aux750' direct represents '2' with '9543'
9541 -9542 9543 0
-9543 9542 0
-9543 -9541 0
c Var 'aux750' direct represents '3' with '-9542'
9541 9543 -9542 0
c Encoding variable: aux751 with domain: int(1..4) (representing constraint ((field_00008_00004=7) + aux750))
c Both direct and order encoding.
c Var 'aux751' order represents '1' with '9544'
c Var 'aux751' direct represents '1' with '9544'
c Var 'aux751' order represents '2' with '9545'
-9544 9545 0
c Var 'aux751' direct represents '2' with '9546'
9544 -9545 9546 0
-9546 9545 0
-9546 -9544 0
c Var 'aux751' order represents '3' with '9547'
-9545 9547 0
c Var 'aux751' direct represents '3' with '9548'
9545 -9547 9548 0
-9548 9547 0
-9548 -9545 0
c Var 'aux751' direct represents '4' with '-9547'
9544 9546 9548 -9547 0
c Encoding variable: aux752 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00008_00009=8)))
c Both direct and order encoding.
c Var 'aux752' order represents '0' with '9549'
c Var 'aux752' direct represents '0' with '9549'
c Var 'aux752' order represents '1' with '9550'
-9549 9550 0
c Var 'aux752' direct represents '1' with '9551'
9549 -9550 9551 0
-9551 9550 0
-9551 -9549 0
c Var 'aux752' direct represents '2' with '-9550'
9549 9551 -9550 0
c Encoding variable: aux753 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00008_00002=8)))
c Both direct and order encoding.
c Var 'aux753' order represents '0' with '9552'
c Var 'aux753' direct represents '0' with '9552'
c Var 'aux753' order represents '1' with '9553'
-9552 9553 0
c Var 'aux753' direct represents '1' with '9554'
9552 -9553 9554 0
-9554 9553 0
-9554 -9552 0
c Var 'aux753' direct represents '2' with '-9553'
9552 9554 -9553 0
c Encoding variable: aux754 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00008_00004=8)))
c Both direct and order encoding.
c Var 'aux754' order represents '0' with '9555'
c Var 'aux754' direct represents '0' with '9555'
c Var 'aux754' order represents '1' with '9556'
-9555 9556 0
c Var 'aux754' direct represents '1' with '9557'
9555 -9556 9557 0
-9557 9556 0
-9557 -9555 0
c Var 'aux754' direct represents '2' with '-9556'
9555 9557 -9556 0
c Encoding variable: aux755 with domain: int(1..2) (representing constraint ((field_00008_00006=8) + (field_00008_00003=8)))
c Var 'aux755' direct represents '1' with '-9558'
c Var 'aux755' direct represents '2' with '9558'
c Var 'aux755' order represents '2' with '1'
c Var 'aux755' order represents '1' with '-9558'
c Encoding variable: aux756 with domain: int(1..4) (representing constraint (aux755 + aux753))
c Both direct and order encoding.
c Var 'aux756' order represents '1' with '9559'
c Var 'aux756' direct represents '1' with '9559'
c Var 'aux756' order represents '2' with '9560'
-9559 9560 0
c Var 'aux756' direct represents '2' with '9561'
9559 -9560 9561 0
-9561 9560 0
-9561 -9559 0
c Var 'aux756' order represents '3' with '9562'
-9560 9562 0
c Var 'aux756' direct represents '3' with '9563'
9560 -9562 9563 0
-9563 9562 0
-9563 -9560 0
c Var 'aux756' direct represents '4' with '-9562'
9559 9561 9563 -9562 0
c Encoding variable: aux757 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00008_00009=9)))
c Both direct and order encoding.
c Var 'aux757' order represents '0' with '9564'
c Var 'aux757' direct represents '0' with '9564'
c Var 'aux757' order represents '1' with '9565'
-9564 9565 0
c Var 'aux757' direct represents '1' with '9566'
9564 -9565 9566 0
-9566 9565 0
-9566 -9564 0
c Var 'aux757' direct represents '2' with '-9565'
9564 9566 -9565 0
c Encoding variable: aux758 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00008_00002=9)))
c Both direct and order encoding.
c Var 'aux758' order represents '0' with '9567'
c Var 'aux758' direct represents '0' with '9567'
c Var 'aux758' order represents '1' with '9568'
-9567 9568 0
c Var 'aux758' direct represents '1' with '9569'
9567 -9568 9569 0
-9569 9568 0
-9569 -9567 0
c Var 'aux758' direct represents '2' with '-9568'
9567 9569 -9568 0
c Encoding variable: aux759 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00008_00006=9)))
c Both direct and order encoding.
c Var 'aux759' order represents '0' with '9570'
c Var 'aux759' direct represents '0' with '9570'
c Var 'aux759' order represents '1' with '9571'
-9570 9571 0
c Var 'aux759' direct represents '1' with '9572'
9570 -9571 9572 0
-9572 9571 0
-9572 -9570 0
c Var 'aux759' direct represents '2' with '-9571'
9570 9572 -9571 0
c Encoding variable: aux760 with domain: int(0..3) (representing constraint ((field_00008_00004=9) + aux759))
c Both direct and order encoding.
c Var 'aux760' order represents '0' with '9573'
c Var 'aux760' direct represents '0' with '9573'
c Var 'aux760' order represents '1' with '9574'
-9573 9574 0
c Var 'aux760' direct represents '1' with '9575'
9573 -9574 9575 0
-9575 9574 0
-9575 -9573 0
c Var 'aux760' order represents '2' with '9576'
-9574 9576 0
c Var 'aux760' direct represents '2' with '9577'
9574 -9576 9577 0
-9577 9576 0
-9577 -9574 0
c Var 'aux760' direct represents '3' with '-9576'
9573 9575 9577 -9576 0
c Encoding variable: aux761 with domain: int(0..2) (representing constraint ((field_00009_00001=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux761' order represents '0' with '9578'
c Var 'aux761' direct represents '0' with '9578'
c Var 'aux761' order represents '1' with '9579'
-9578 9579 0
c Var 'aux761' direct represents '1' with '9580'
9578 -9579 9580 0
-9580 9579 0
-9580 -9578 0
c Var 'aux761' direct represents '2' with '-9579'
9578 9580 -9579 0
c Encoding variable: aux762 with domain: int(0..2) (representing constraint ((field_00009_00008=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux762' order represents '0' with '9581'
c Var 'aux762' direct represents '0' with '9581'
c Var 'aux762' order represents '1' with '9582'
-9581 9582 0
c Var 'aux762' direct represents '1' with '9583'
9581 -9582 9583 0
-9583 9582 0
-9583 -9581 0
c Var 'aux762' direct represents '2' with '-9582'
9581 9583 -9582 0
c Encoding variable: aux763 with domain: int(0..2) (representing constraint ((field_00009_00006=1) + (field_00009_00004=1)))
c Both direct and order encoding.
c Var 'aux763' order represents '0' with '9584'
c Var 'aux763' direct represents '0' with '9584'
c Var 'aux763' order represents '1' with '9585'
-9584 9585 0
c Var 'aux763' direct represents '1' with '9586'
9584 -9585 9586 0
-9586 9585 0
-9586 -9584 0
c Var 'aux763' direct represents '2' with '-9585'
9584 9586 -9585 0
c Encoding variable: aux764 with domain: int(1..2) (representing constraint ((field_00009_00005=1) + (field_00009_00003=1)))
c Var 'aux764' direct represents '1' with '-9587'
c Var 'aux764' direct represents '2' with '9587'
c Var 'aux764' order represents '2' with '1'
c Var 'aux764' order represents '1' with '-9587'
c Encoding variable: aux765 with domain: int(1..4) (representing constraint (aux764 + aux762))
c Both direct and order encoding.
c Var 'aux765' order represents '1' with '9588'
c Var 'aux765' direct represents '1' with '9588'
c Var 'aux765' order represents '2' with '9589'
-9588 9589 0
c Var 'aux765' direct represents '2' with '9590'
9588 -9589 9590 0
-9590 9589 0
-9590 -9588 0
c Var 'aux765' order represents '3' with '9591'
-9589 9591 0
c Var 'aux765' direct represents '3' with '9592'
9589 -9591 9592 0
-9592 9591 0
-9592 -9589 0
c Var 'aux765' direct represents '4' with '-9591'
9588 9590 9592 -9591 0
c Encoding variable: aux766 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00009_00009=2)))
c Both direct and order encoding.
c Var 'aux766' order represents '0' with '9593'
c Var 'aux766' direct represents '0' with '9593'
c Var 'aux766' order represents '1' with '9594'
-9593 9594 0
c Var 'aux766' direct represents '1' with '9595'
9593 -9594 9595 0
-9595 9594 0
-9595 -9593 0
c Var 'aux766' direct represents '2' with '-9594'
9593 9595 -9594 0
c Encoding variable: aux767 with domain: int(0..2) (representing constraint ((field_00009_00008=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux767' order represents '0' with '9596'
c Var 'aux767' direct represents '0' with '9596'
c Var 'aux767' order represents '1' with '9597'
-9596 9597 0
c Var 'aux767' direct represents '1' with '9598'
9596 -9597 9598 0
-9598 9597 0
-9598 -9596 0
c Var 'aux767' direct represents '2' with '-9597'
9596 9598 -9597 0
c Encoding variable: aux768 with domain: int(0..2) (representing constraint ((field_00009_00006=2) + (field_00009_00004=2)))
c Both direct and order encoding.
c Var 'aux768' order represents '0' with '9599'
c Var 'aux768' direct represents '0' with '9599'
c Var 'aux768' order represents '1' with '9600'
-9599 9600 0
c Var 'aux768' direct represents '1' with '9601'
9599 -9600 9601 0
-9601 9600 0
-9601 -9599 0
c Var 'aux768' direct represents '2' with '-9600'
9599 9601 -9600 0
c Encoding variable: aux769 with domain: int(0..3) (representing constraint ((field_00009_00003=2) + aux768))
c Both direct and order encoding.
c Var 'aux769' order represents '0' with '9602'
c Var 'aux769' direct represents '0' with '9602'
c Var 'aux769' order represents '1' with '9603'
-9602 9603 0
c Var 'aux769' direct represents '1' with '9604'
9602 -9603 9604 0
-9604 9603 0
-9604 -9602 0
c Var 'aux769' order represents '2' with '9605'
-9603 9605 0
c Var 'aux769' direct represents '2' with '9606'
9603 -9605 9606 0
-9606 9605 0
-9606 -9603 0
c Var 'aux769' direct represents '3' with '-9605'
9602 9604 9606 -9605 0
c Encoding variable: aux770 with domain: int(0..2) (representing constraint ((field_00009_00001=3) + (field_00009_00009=3)))
c Both direct and order encoding.
c Var 'aux770' order represents '0' with '9607'
c Var 'aux770' direct represents '0' with '9607'
c Var 'aux770' order represents '1' with '9608'
-9607 9608 0
c Var 'aux770' direct represents '1' with '9609'
9607 -9608 9609 0
-9609 9608 0
-9609 -9607 0
c Var 'aux770' direct represents '2' with '-9608'
9607 9609 -9608 0
c Encoding variable: aux771 with domain: int(0..2) (representing constraint ((field_00009_00008=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux771' order represents '0' with '9610'
c Var 'aux771' direct represents '0' with '9610'
c Var 'aux771' order represents '1' with '9611'
-9610 9611 0
c Var 'aux771' direct represents '1' with '9612'
9610 -9611 9612 0
-9612 9611 0
-9612 -9610 0
c Var 'aux771' direct represents '2' with '-9611'
9610 9612 -9611 0
c Encoding variable: aux772 with domain: int(0..2) (representing constraint ((field_00009_00006=3) + (field_00009_00004=3)))
c Both direct and order encoding.
c Var 'aux772' order represents '0' with '9613'
c Var 'aux772' direct represents '0' with '9613'
c Var 'aux772' order represents '1' with '9614'
-9613 9614 0
c Var 'aux772' direct represents '1' with '9615'
9613 -9614 9615 0
-9615 9614 0
-9615 -9613 0
c Var 'aux772' direct represents '2' with '-9614'
9613 9615 -9614 0
c Encoding variable: aux773 with domain: int(0..3) (representing constraint ((field_00009_00003=3) + aux772))
c Both direct and order encoding.
c Var 'aux773' order represents '0' with '9616'
c Var 'aux773' direct represents '0' with '9616'
c Var 'aux773' order represents '1' with '9617'
-9616 9617 0
c Var 'aux773' direct represents '1' with '9618'
9616 -9617 9618 0
-9618 9617 0
-9618 -9616 0
c Var 'aux773' order represents '2' with '9619'
-9617 9619 0
c Var 'aux773' direct represents '2' with '9620'
9617 -9619 9620 0
-9620 9619 0
-9620 -9617 0
c Var 'aux773' direct represents '3' with '-9619'
9616 9618 9620 -9619 0
c Encoding variable: aux774 with domain: int(0..2) (representing constraint ((field_00009_00001=4) + (field_00009_00009=4)))
c Both direct and order encoding.
c Var 'aux774' order represents '0' with '9621'
c Var 'aux774' direct represents '0' with '9621'
c Var 'aux774' order represents '1' with '9622'
-9621 9622 0
c Var 'aux774' direct represents '1' with '9623'
9621 -9622 9623 0
-9623 9622 0
-9623 -9621 0
c Var 'aux774' direct represents '2' with '-9622'
9621 9623 -9622 0
c Encoding variable: aux775 with domain: int(0..2) (representing constraint ((field_00009_00008=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux775' order represents '0' with '9624'
c Var 'aux775' direct represents '0' with '9624'
c Var 'aux775' order represents '1' with '9625'
-9624 9625 0
c Var 'aux775' direct represents '1' with '9626'
9624 -9625 9626 0
-9626 9625 0
-9626 -9624 0
c Var 'aux775' direct represents '2' with '-9625'
9624 9626 -9625 0
c Encoding variable: aux776 with domain: int(0..2) (representing constraint ((field_00009_00006=4) + (field_00009_00004=4)))
c Both direct and order encoding.
c Var 'aux776' order represents '0' with '9627'
c Var 'aux776' direct represents '0' with '9627'
c Var 'aux776' order represents '1' with '9628'
-9627 9628 0
c Var 'aux776' direct represents '1' with '9629'
9627 -9628 9629 0
-9629 9628 0
-9629 -9627 0
c Var 'aux776' direct represents '2' with '-9628'
9627 9629 -9628 0
c Encoding variable: aux777 with domain: int(0..3) (representing constraint ((field_00009_00003=4) + aux776))
c Both direct and order encoding.
c Var 'aux777' order represents '0' with '9630'
c Var 'aux777' direct represents '0' with '9630'
c Var 'aux777' order represents '1' with '9631'
-9630 9631 0
c Var 'aux777' direct represents '1' with '9632'
9630 -9631 9632 0
-9632 9631 0
-9632 -9630 0
c Var 'aux777' order represents '2' with '9633'
-9631 9633 0
c Var 'aux777' direct represents '2' with '9634'
9631 -9633 9634 0
-9634 9633 0
-9634 -9631 0
c Var 'aux777' direct represents '3' with '-9633'
9630 9632 9634 -9633 0
c Encoding variable: aux778 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux778' order represents '0' with '9635'
c Var 'aux778' direct represents '0' with '9635'
c Var 'aux778' order represents '1' with '9636'
-9635 9636 0
c Var 'aux778' direct represents '1' with '9637'
9635 -9636 9637 0
-9637 9636 0
-9637 -9635 0
c Var 'aux778' direct represents '2' with '-9636'
9635 9637 -9636 0
c Encoding variable: aux779 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux779' order represents '0' with '9638'
c Var 'aux779' direct represents '0' with '9638'
c Var 'aux779' order represents '1' with '9639'
-9638 9639 0
c Var 'aux779' direct represents '1' with '9640'
9638 -9639 9640 0
-9640 9639 0
-9640 -9638 0
c Var 'aux779' direct represents '2' with '-9639'
9638 9640 -9639 0
c Encoding variable: aux780 with domain: int(0..2) (representing constraint ((field_00009_00006=5) + (field_00009_00004=5)))
c Both direct and order encoding.
c Var 'aux780' order represents '0' with '9641'
c Var 'aux780' direct represents '0' with '9641'
c Var 'aux780' order represents '1' with '9642'
-9641 9642 0
c Var 'aux780' direct represents '1' with '9643'
9641 -9642 9643 0
-9643 9642 0
-9643 -9641 0
c Var 'aux780' direct represents '2' with '-9642'
9641 9643 -9642 0
c Encoding variable: aux781 with domain: int(0..3) (representing constraint ((field_00009_00003=5) + aux780))
c Both direct and order encoding.
c Var 'aux781' order represents '0' with '9644'
c Var 'aux781' direct represents '0' with '9644'
c Var 'aux781' order represents '1' with '9645'
-9644 9645 0
c Var 'aux781' direct represents '1' with '9646'
9644 -9645 9646 0
-9646 9645 0
-9646 -9644 0
c Var 'aux781' order represents '2' with '9647'
-9645 9647 0
c Var 'aux781' direct represents '2' with '9648'
9645 -9647 9648 0
-9648 9647 0
-9648 -9645 0
c Var 'aux781' direct represents '3' with '-9647'
9644 9646 9648 -9647 0
c Encoding variable: aux782 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux782' order represents '0' with '9649'
c Var 'aux782' direct represents '0' with '9649'
c Var 'aux782' order represents '1' with '9650'
-9649 9650 0
c Var 'aux782' direct represents '1' with '9651'
9649 -9650 9651 0
-9651 9650 0
-9651 -9649 0
c Var 'aux782' direct represents '2' with '-9650'
9649 9651 -9650 0
c Encoding variable: aux783 with domain: int(0..2) (representing constraint ((field_00009_00008=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux783' order represents '0' with '9652'
c Var 'aux783' direct represents '0' with '9652'
c Var 'aux783' order represents '1' with '9653'
-9652 9653 0
c Var 'aux783' direct represents '1' with '9654'
9652 -9653 9654 0
-9654 9653 0
-9654 -9652 0
c Var 'aux783' direct represents '2' with '-9653'
9652 9654 -9653 0
c Encoding variable: aux784 with domain: int(0..2) (representing constraint ((field_00009_00006=6) + (field_00009_00004=6)))
c Both direct and order encoding.
c Var 'aux784' order represents '0' with '9655'
c Var 'aux784' direct represents '0' with '9655'
c Var 'aux784' order represents '1' with '9656'
-9655 9656 0
c Var 'aux784' direct represents '1' with '9657'
9655 -9656 9657 0
-9657 9656 0
-9657 -9655 0
c Var 'aux784' direct represents '2' with '-9656'
9655 9657 -9656 0
c Encoding variable: aux785 with domain: int(0..3) (representing constraint ((field_00009_00003=6) + aux784))
c Both direct and order encoding.
c Var 'aux785' order represents '0' with '9658'
c Var 'aux785' direct represents '0' with '9658'
c Var 'aux785' order represents '1' with '9659'
-9658 9659 0
c Var 'aux785' direct represents '1' with '9660'
9658 -9659 9660 0
-9660 9659 0
-9660 -9658 0
c Var 'aux785' order represents '2' with '9661'
-9659 9661 0
c Var 'aux785' direct represents '2' with '9662'
9659 -9661 9662 0
-9662 9661 0
-9662 -9659 0
c Var 'aux785' direct represents '3' with '-9661'
9658 9660 9662 -9661 0
c Encoding variable: aux786 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux786' order represents '0' with '9663'
c Var 'aux786' direct represents '0' with '9663'
c Var 'aux786' order represents '1' with '9664'
-9663 9664 0
c Var 'aux786' direct represents '1' with '9665'
9663 -9664 9665 0
-9665 9664 0
-9665 -9663 0
c Var 'aux786' direct represents '2' with '-9664'
9663 9665 -9664 0
c Encoding variable: aux787 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux787' order represents '0' with '9666'
c Var 'aux787' direct represents '0' with '9666'
c Var 'aux787' order represents '1' with '9667'
-9666 9667 0
c Var 'aux787' direct represents '1' with '9668'
9666 -9667 9668 0
-9668 9667 0
-9668 -9666 0
c Var 'aux787' direct represents '2' with '-9667'
9666 9668 -9667 0
c Encoding variable: aux788 with domain: int(0..2) (representing constraint ((field_00009_00006=7) + (field_00009_00004=7)))
c Both direct and order encoding.
c Var 'aux788' order represents '0' with '9669'
c Var 'aux788' direct represents '0' with '9669'
c Var 'aux788' order represents '1' with '9670'
-9669 9670 0
c Var 'aux788' direct represents '1' with '9671'
9669 -9670 9671 0
-9671 9670 0
-9671 -9669 0
c Var 'aux788' direct represents '2' with '-9670'
9669 9671 -9670 0
c Encoding variable: aux789 with domain: int(0..3) (representing constraint ((field_00009_00003=7) + aux788))
c Both direct and order encoding.
c Var 'aux789' order represents '0' with '9672'
c Var 'aux789' direct represents '0' with '9672'
c Var 'aux789' order represents '1' with '9673'
-9672 9673 0
c Var 'aux789' direct represents '1' with '9674'
9672 -9673 9674 0
-9674 9673 0
-9674 -9672 0
c Var 'aux789' order represents '2' with '9675'
-9673 9675 0
c Var 'aux789' direct represents '2' with '9676'
9673 -9675 9676 0
-9676 9675 0
-9676 -9673 0
c Var 'aux789' direct represents '3' with '-9675'
9672 9674 9676 -9675 0
c Encoding variable: aux790 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux790' order represents '0' with '9677'
c Var 'aux790' direct represents '0' with '9677'
c Var 'aux790' order represents '1' with '9678'
-9677 9678 0
c Var 'aux790' direct represents '1' with '9679'
9677 -9678 9679 0
-9679 9678 0
-9679 -9677 0
c Var 'aux790' direct represents '2' with '-9678'
9677 9679 -9678 0
c Encoding variable: aux791 with domain: int(0..2) (representing constraint ((field_00009_00008=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux791' order represents '0' with '9680'
c Var 'aux791' direct represents '0' with '9680'
c Var 'aux791' order represents '1' with '9681'
-9680 9681 0
c Var 'aux791' direct represents '1' with '9682'
9680 -9681 9682 0
-9682 9681 0
-9682 -9680 0
c Var 'aux791' direct represents '2' with '-9681'
9680 9682 -9681 0
c Encoding variable: aux792 with domain: int(1..2) (representing constraint ((field_00009_00007=8) + (field_00009_00004=8)))
c Var 'aux792' direct represents '1' with '-9683'
c Var 'aux792' direct represents '2' with '9683'
c Var 'aux792' order represents '2' with '1'
c Var 'aux792' order represents '1' with '-9683'
c Encoding variable: aux793 with domain: int(1..3) (representing constraint ((field_00009_00006=8) + aux792))
c Both direct and order encoding.
c Var 'aux793' order represents '1' with '9684'
c Var 'aux793' direct represents '1' with '9684'
c Var 'aux793' order represents '2' with '9685'
-9684 9685 0
c Var 'aux793' direct represents '2' with '9686'
9684 -9685 9686 0
-9686 9685 0
-9686 -9684 0
c Var 'aux793' direct represents '3' with '-9685'
9684 9686 -9685 0
c Encoding variable: aux794 with domain: int(1..4) (representing constraint ((field_00009_00003=8) + aux793))
c Both direct and order encoding.
c Var 'aux794' order represents '1' with '9687'
c Var 'aux794' direct represents '1' with '9687'
c Var 'aux794' order represents '2' with '9688'
-9687 9688 0
c Var 'aux794' direct represents '2' with '9689'
9687 -9688 9689 0
-9689 9688 0
-9689 -9687 0
c Var 'aux794' order represents '3' with '9690'
-9688 9690 0
c Var 'aux794' direct represents '3' with '9691'
9688 -9690 9691 0
-9691 9690 0
-9691 -9688 0
c Var 'aux794' direct represents '4' with '-9690'
9687 9689 9691 -9690 0
c Encoding variable: aux795 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux795' order represents '0' with '9692'
c Var 'aux795' direct represents '0' with '9692'
c Var 'aux795' order represents '1' with '9693'
-9692 9693 0
c Var 'aux795' direct represents '1' with '9694'
9692 -9693 9694 0
-9694 9693 0
-9694 -9692 0
c Var 'aux795' direct represents '2' with '-9693'
9692 9694 -9693 0
c Encoding variable: aux796 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux796' order represents '0' with '9695'
c Var 'aux796' direct represents '0' with '9695'
c Var 'aux796' order represents '1' with '9696'
-9695 9696 0
c Var 'aux796' direct represents '1' with '9697'
9695 -9696 9697 0
-9697 9696 0
-9697 -9695 0
c Var 'aux796' direct represents '2' with '-9696'
9695 9697 -9696 0
c Encoding variable: aux797 with domain: int(0..2) (representing constraint ((field_00009_00006=9) + (field_00009_00004=9)))
c Both direct and order encoding.
c Var 'aux797' order represents '0' with '9698'
c Var 'aux797' direct represents '0' with '9698'
c Var 'aux797' order represents '1' with '9699'
-9698 9699 0
c Var 'aux797' direct represents '1' with '9700'
9698 -9699 9700 0
-9700 9699 0
-9700 -9698 0
c Var 'aux797' direct represents '2' with '-9699'
9698 9700 -9699 0
c Encoding variable: aux798 with domain: int(0..3) (representing constraint ((field_00009_00003=9) + aux797))
c Both direct and order encoding.
c Var 'aux798' order represents '0' with '9701'
c Var 'aux798' direct represents '0' with '9701'
c Var 'aux798' order represents '1' with '9702'
-9701 9702 0
c Var 'aux798' direct represents '1' with '9703'
9701 -9702 9703 0
-9703 9702 0
-9703 -9701 0
c Var 'aux798' order represents '2' with '9704'
-9702 9704 0
c Var 'aux798' direct represents '2' with '9705'
9702 -9704 9705 0
-9705 9704 0
-9705 -9702 0
c Var 'aux798' direct represents '3' with '-9704'
9701 9703 9705 -9704 0
c Encoding variable: aux799 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00006_00001=1)))
c Both direct and order encoding.
c Var 'aux799' order represents '0' with '9706'
c Var 'aux799' direct represents '0' with '9706'
c Var 'aux799' order represents '1' with '9707'
-9706 9707 0
c Var 'aux799' direct represents '1' with '9708'
9706 -9707 9708 0
-9708 9707 0
-9708 -9706 0
c Var 'aux799' direct represents '2' with '-9707'
9706 9708 -9707 0
c Encoding variable: aux800 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00009_00001=1)))
c Both direct and order encoding.
c Var 'aux800' order represents '0' with '9709'
c Var 'aux800' direct represents '0' with '9709'
c Var 'aux800' order represents '1' with '9710'
-9709 9710 0
c Var 'aux800' direct represents '1' with '9711'
9709 -9710 9711 0
-9711 9710 0
-9711 -9709 0
c Var 'aux800' direct represents '2' with '-9710'
9709 9711 -9710 0
c Encoding variable: aux801 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00007_00001=1)))
c Both direct and order encoding.
c Var 'aux801' order represents '0' with '9712'
c Var 'aux801' direct represents '0' with '9712'
c Var 'aux801' order represents '1' with '9713'
-9712 9713 0
c Var 'aux801' direct represents '1' with '9714'
9712 -9713 9714 0
-9714 9713 0
-9714 -9712 0
c Var 'aux801' direct represents '2' with '-9713'
9712 9714 -9713 0
c Encoding variable: aux802 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00005_00001=1)))
c Both direct and order encoding.
c Var 'aux802' order represents '0' with '9715'
c Var 'aux802' direct represents '0' with '9715'
c Var 'aux802' order represents '1' with '9716'
-9715 9716 0
c Var 'aux802' direct represents '1' with '9717'
9715 -9716 9717 0
-9717 9716 0
-9717 -9715 0
c Var 'aux802' direct represents '2' with '-9716'
9715 9717 -9716 0
c Encoding variable: aux803 with domain: int(0..3) (representing constraint ((field_00002_00001=1) + aux802))
c Both direct and order encoding.
c Var 'aux803' order represents '0' with '9718'
c Var 'aux803' direct represents '0' with '9718'
c Var 'aux803' order represents '1' with '9719'
-9718 9719 0
c Var 'aux803' direct represents '1' with '9720'
9718 -9719 9720 0
-9720 9719 0
-9720 -9718 0
c Var 'aux803' order represents '2' with '9721'
-9719 9721 0
c Var 'aux803' direct represents '2' with '9722'
9719 -9721 9722 0
-9722 9721 0
-9722 -9719 0
c Var 'aux803' direct represents '3' with '-9721'
9718 9720 9722 -9721 0
c Encoding variable: aux804 with domain: int(0..4) (representing constraint (aux799 + aux801))
c Both direct and order encoding.
c Var 'aux804' order represents '0' with '9723'
c Var 'aux804' direct represents '0' with '9723'
c Var 'aux804' order represents '1' with '9724'
-9723 9724 0
c Var 'aux804' direct represents '1' with '9725'
9723 -9724 9725 0
-9725 9724 0
-9725 -9723 0
c Var 'aux804' order represents '2' with '9726'
-9724 9726 0
c Var 'aux804' direct represents '2' with '9727'
9724 -9726 9727 0
-9727 9726 0
-9727 -9724 0
c Var 'aux804' order represents '3' with '9728'
-9726 9728 0
c Var 'aux804' direct represents '3' with '9729'
9726 -9728 9729 0
-9729 9728 0
-9729 -9726 0
c Var 'aux804' direct represents '4' with '-9728'
9723 9725 9727 9729 -9728 0
c Encoding variable: aux805 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00006_00001=2)))
c Both direct and order encoding.
c Var 'aux805' order represents '0' with '9730'
c Var 'aux805' direct represents '0' with '9730'
c Var 'aux805' order represents '1' with '9731'
-9730 9731 0
c Var 'aux805' direct represents '1' with '9732'
9730 -9731 9732 0
-9732 9731 0
-9732 -9730 0
c Var 'aux805' direct represents '2' with '-9731'
9730 9732 -9731 0
c Encoding variable: aux806 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00009_00001=2)))
c Both direct and order encoding.
c Var 'aux806' order represents '0' with '9733'
c Var 'aux806' direct represents '0' with '9733'
c Var 'aux806' order represents '1' with '9734'
-9733 9734 0
c Var 'aux806' direct represents '1' with '9735'
9733 -9734 9735 0
-9735 9734 0
-9735 -9733 0
c Var 'aux806' direct represents '2' with '-9734'
9733 9735 -9734 0
c Encoding variable: aux807 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00007_00001=2)))
c Both direct and order encoding.
c Var 'aux807' order represents '0' with '9736'
c Var 'aux807' direct represents '0' with '9736'
c Var 'aux807' order represents '1' with '9737'
-9736 9737 0
c Var 'aux807' direct represents '1' with '9738'
9736 -9737 9738 0
-9738 9737 0
-9738 -9736 0
c Var 'aux807' direct represents '2' with '-9737'
9736 9738 -9737 0
c Encoding variable: aux808 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00005_00001=2)))
c Both direct and order encoding.
c Var 'aux808' order represents '0' with '9739'
c Var 'aux808' direct represents '0' with '9739'
c Var 'aux808' order represents '1' with '9740'
-9739 9740 0
c Var 'aux808' direct represents '1' with '9741'
9739 -9740 9741 0
-9741 9740 0
-9741 -9739 0
c Var 'aux808' direct represents '2' with '-9740'
9739 9741 -9740 0
c Encoding variable: aux809 with domain: int(0..3) (representing constraint ((field_00002_00001=2) + aux808))
c Both direct and order encoding.
c Var 'aux809' order represents '0' with '9742'
c Var 'aux809' direct represents '0' with '9742'
c Var 'aux809' order represents '1' with '9743'
-9742 9743 0
c Var 'aux809' direct represents '1' with '9744'
9742 -9743 9744 0
-9744 9743 0
-9744 -9742 0
c Var 'aux809' order represents '2' with '9745'
-9743 9745 0
c Var 'aux809' direct represents '2' with '9746'
9743 -9745 9746 0
-9746 9745 0
-9746 -9743 0
c Var 'aux809' direct represents '3' with '-9745'
9742 9744 9746 -9745 0
c Encoding variable: aux810 with domain: int(0..4) (representing constraint (aux805 + aux807))
c Both direct and order encoding.
c Var 'aux810' order represents '0' with '9747'
c Var 'aux810' direct represents '0' with '9747'
c Var 'aux810' order represents '1' with '9748'
-9747 9748 0
c Var 'aux810' direct represents '1' with '9749'
9747 -9748 9749 0
-9749 9748 0
-9749 -9747 0
c Var 'aux810' order represents '2' with '9750'
-9748 9750 0
c Var 'aux810' direct represents '2' with '9751'
9748 -9750 9751 0
-9751 9750 0
-9751 -9748 0
c Var 'aux810' order represents '3' with '9752'
-9750 9752 0
c Var 'aux810' direct represents '3' with '9753'
9750 -9752 9753 0
-9753 9752 0
-9753 -9750 0
c Var 'aux810' direct represents '4' with '-9752'
9747 9749 9751 9753 -9752 0
c Encoding variable: aux811 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00006_00001=3)))
c Both direct and order encoding.
c Var 'aux811' order represents '0' with '9754'
c Var 'aux811' direct represents '0' with '9754'
c Var 'aux811' order represents '1' with '9755'
-9754 9755 0
c Var 'aux811' direct represents '1' with '9756'
9754 -9755 9756 0
-9756 9755 0
-9756 -9754 0
c Var 'aux811' direct represents '2' with '-9755'
9754 9756 -9755 0
c Encoding variable: aux812 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00009_00001=3)))
c Both direct and order encoding.
c Var 'aux812' order represents '0' with '9757'
c Var 'aux812' direct represents '0' with '9757'
c Var 'aux812' order represents '1' with '9758'
-9757 9758 0
c Var 'aux812' direct represents '1' with '9759'
9757 -9758 9759 0
-9759 9758 0
-9759 -9757 0
c Var 'aux812' direct represents '2' with '-9758'
9757 9759 -9758 0
c Encoding variable: aux813 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00007_00001=3)))
c Both direct and order encoding.
c Var 'aux813' order represents '0' with '9760'
c Var 'aux813' direct represents '0' with '9760'
c Var 'aux813' order represents '1' with '9761'
-9760 9761 0
c Var 'aux813' direct represents '1' with '9762'
9760 -9761 9762 0
-9762 9761 0
-9762 -9760 0
c Var 'aux813' direct represents '2' with '-9761'
9760 9762 -9761 0
c Encoding variable: aux814 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00005_00001=3)))
c Both direct and order encoding.
c Var 'aux814' order represents '0' with '9763'
c Var 'aux814' direct represents '0' with '9763'
c Var 'aux814' order represents '1' with '9764'
-9763 9764 0
c Var 'aux814' direct represents '1' with '9765'
9763 -9764 9765 0
-9765 9764 0
-9765 -9763 0
c Var 'aux814' direct represents '2' with '-9764'
9763 9765 -9764 0
c Encoding variable: aux815 with domain: int(0..3) (representing constraint ((field_00002_00001=3) + aux814))
c Both direct and order encoding.
c Var 'aux815' order represents '0' with '9766'
c Var 'aux815' direct represents '0' with '9766'
c Var 'aux815' order represents '1' with '9767'
-9766 9767 0
c Var 'aux815' direct represents '1' with '9768'
9766 -9767 9768 0
-9768 9767 0
-9768 -9766 0
c Var 'aux815' order represents '2' with '9769'
-9767 9769 0
c Var 'aux815' direct represents '2' with '9770'
9767 -9769 9770 0
-9770 9769 0
-9770 -9767 0
c Var 'aux815' direct represents '3' with '-9769'
9766 9768 9770 -9769 0
c Encoding variable: aux816 with domain: int(0..4) (representing constraint (aux811 + aux813))
c Both direct and order encoding.
c Var 'aux816' order represents '0' with '9771'
c Var 'aux816' direct represents '0' with '9771'
c Var 'aux816' order represents '1' with '9772'
-9771 9772 0
c Var 'aux816' direct represents '1' with '9773'
9771 -9772 9773 0
-9773 9772 0
-9773 -9771 0
c Var 'aux816' order represents '2' with '9774'
-9772 9774 0
c Var 'aux816' direct represents '2' with '9775'
9772 -9774 9775 0
-9775 9774 0
-9775 -9772 0
c Var 'aux816' order represents '3' with '9776'
-9774 9776 0
c Var 'aux816' direct represents '3' with '9777'
9774 -9776 9777 0
-9777 9776 0
-9777 -9774 0
c Var 'aux816' direct represents '4' with '-9776'
9771 9773 9775 9777 -9776 0
c Encoding variable: aux817 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00006_00001=4)))
c Both direct and order encoding.
c Var 'aux817' order represents '0' with '9778'
c Var 'aux817' direct represents '0' with '9778'
c Var 'aux817' order represents '1' with '9779'
-9778 9779 0
c Var 'aux817' direct represents '1' with '9780'
9778 -9779 9780 0
-9780 9779 0
-9780 -9778 0
c Var 'aux817' direct represents '2' with '-9779'
9778 9780 -9779 0
c Encoding variable: aux818 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00009_00001=4)))
c Both direct and order encoding.
c Var 'aux818' order represents '0' with '9781'
c Var 'aux818' direct represents '0' with '9781'
c Var 'aux818' order represents '1' with '9782'
-9781 9782 0
c Var 'aux818' direct represents '1' with '9783'
9781 -9782 9783 0
-9783 9782 0
-9783 -9781 0
c Var 'aux818' direct represents '2' with '-9782'
9781 9783 -9782 0
c Encoding variable: aux819 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00007_00001=4)))
c Both direct and order encoding.
c Var 'aux819' order represents '0' with '9784'
c Var 'aux819' direct represents '0' with '9784'
c Var 'aux819' order represents '1' with '9785'
-9784 9785 0
c Var 'aux819' direct represents '1' with '9786'
9784 -9785 9786 0
-9786 9785 0
-9786 -9784 0
c Var 'aux819' direct represents '2' with '-9785'
9784 9786 -9785 0
c Encoding variable: aux820 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00005_00001=4)))
c Both direct and order encoding.
c Var 'aux820' order represents '0' with '9787'
c Var 'aux820' direct represents '0' with '9787'
c Var 'aux820' order represents '1' with '9788'
-9787 9788 0
c Var 'aux820' direct represents '1' with '9789'
9787 -9788 9789 0
-9789 9788 0
-9789 -9787 0
c Var 'aux820' direct represents '2' with '-9788'
9787 9789 -9788 0
c Encoding variable: aux821 with domain: int(0..3) (representing constraint ((field_00002_00001=4) + aux820))
c Both direct and order encoding.
c Var 'aux821' order represents '0' with '9790'
c Var 'aux821' direct represents '0' with '9790'
c Var 'aux821' order represents '1' with '9791'
-9790 9791 0
c Var 'aux821' direct represents '1' with '9792'
9790 -9791 9792 0
-9792 9791 0
-9792 -9790 0
c Var 'aux821' order represents '2' with '9793'
-9791 9793 0
c Var 'aux821' direct represents '2' with '9794'
9791 -9793 9794 0
-9794 9793 0
-9794 -9791 0
c Var 'aux821' direct represents '3' with '-9793'
9790 9792 9794 -9793 0
c Encoding variable: aux822 with domain: int(0..4) (representing constraint (aux817 + aux819))
c Both direct and order encoding.
c Var 'aux822' order represents '0' with '9795'
c Var 'aux822' direct represents '0' with '9795'
c Var 'aux822' order represents '1' with '9796'
-9795 9796 0
c Var 'aux822' direct represents '1' with '9797'
9795 -9796 9797 0
-9797 9796 0
-9797 -9795 0
c Var 'aux822' order represents '2' with '9798'
-9796 9798 0
c Var 'aux822' direct represents '2' with '9799'
9796 -9798 9799 0
-9799 9798 0
-9799 -9796 0
c Var 'aux822' order represents '3' with '9800'
-9798 9800 0
c Var 'aux822' direct represents '3' with '9801'
9798 -9800 9801 0
-9801 9800 0
-9801 -9798 0
c Var 'aux822' direct represents '4' with '-9800'
9795 9797 9799 9801 -9800 0
c Encoding variable: aux823 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00006_00001=5)))
c Both direct and order encoding.
c Var 'aux823' order represents '0' with '9802'
c Var 'aux823' direct represents '0' with '9802'
c Var 'aux823' order represents '1' with '9803'
-9802 9803 0
c Var 'aux823' direct represents '1' with '9804'
9802 -9803 9804 0
-9804 9803 0
-9804 -9802 0
c Var 'aux823' direct represents '2' with '-9803'
9802 9804 -9803 0
c Encoding variable: aux824 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00009_00001=5)))
c Both direct and order encoding.
c Var 'aux824' order represents '0' with '9805'
c Var 'aux824' direct represents '0' with '9805'
c Var 'aux824' order represents '1' with '9806'
-9805 9806 0
c Var 'aux824' direct represents '1' with '9807'
9805 -9806 9807 0
-9807 9806 0
-9807 -9805 0
c Var 'aux824' direct represents '2' with '-9806'
9805 9807 -9806 0
c Encoding variable: aux825 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00007_00001=5)))
c Both direct and order encoding.
c Var 'aux825' order represents '0' with '9808'
c Var 'aux825' direct represents '0' with '9808'
c Var 'aux825' order represents '1' with '9809'
-9808 9809 0
c Var 'aux825' direct represents '1' with '9810'
9808 -9809 9810 0
-9810 9809 0
-9810 -9808 0
c Var 'aux825' direct represents '2' with '-9809'
9808 9810 -9809 0
c Encoding variable: aux826 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00005_00001=5)))
c Both direct and order encoding.
c Var 'aux826' order represents '0' with '9811'
c Var 'aux826' direct represents '0' with '9811'
c Var 'aux826' order represents '1' with '9812'
-9811 9812 0
c Var 'aux826' direct represents '1' with '9813'
9811 -9812 9813 0
-9813 9812 0
-9813 -9811 0
c Var 'aux826' direct represents '2' with '-9812'
9811 9813 -9812 0
c Encoding variable: aux827 with domain: int(0..3) (representing constraint ((field_00002_00001=5) + aux826))
c Both direct and order encoding.
c Var 'aux827' order represents '0' with '9814'
c Var 'aux827' direct represents '0' with '9814'
c Var 'aux827' order represents '1' with '9815'
-9814 9815 0
c Var 'aux827' direct represents '1' with '9816'
9814 -9815 9816 0
-9816 9815 0
-9816 -9814 0
c Var 'aux827' order represents '2' with '9817'
-9815 9817 0
c Var 'aux827' direct represents '2' with '9818'
9815 -9817 9818 0
-9818 9817 0
-9818 -9815 0
c Var 'aux827' direct represents '3' with '-9817'
9814 9816 9818 -9817 0
c Encoding variable: aux828 with domain: int(0..4) (representing constraint (aux823 + aux825))
c Both direct and order encoding.
c Var 'aux828' order represents '0' with '9819'
c Var 'aux828' direct represents '0' with '9819'
c Var 'aux828' order represents '1' with '9820'
-9819 9820 0
c Var 'aux828' direct represents '1' with '9821'
9819 -9820 9821 0
-9821 9820 0
-9821 -9819 0
c Var 'aux828' order represents '2' with '9822'
-9820 9822 0
c Var 'aux828' direct represents '2' with '9823'
9820 -9822 9823 0
-9823 9822 0
-9823 -9820 0
c Var 'aux828' order represents '3' with '9824'
-9822 9824 0
c Var 'aux828' direct represents '3' with '9825'
9822 -9824 9825 0
-9825 9824 0
-9825 -9822 0
c Var 'aux828' direct represents '4' with '-9824'
9819 9821 9823 9825 -9824 0
c Encoding variable: aux829 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00006_00001=6)))
c Both direct and order encoding.
c Var 'aux829' order represents '0' with '9826'
c Var 'aux829' direct represents '0' with '9826'
c Var 'aux829' order represents '1' with '9827'
-9826 9827 0
c Var 'aux829' direct represents '1' with '9828'
9826 -9827 9828 0
-9828 9827 0
-9828 -9826 0
c Var 'aux829' direct represents '2' with '-9827'
9826 9828 -9827 0
c Encoding variable: aux830 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00009_00001=6)))
c Both direct and order encoding.
c Var 'aux830' order represents '0' with '9829'
c Var 'aux830' direct represents '0' with '9829'
c Var 'aux830' order represents '1' with '9830'
-9829 9830 0
c Var 'aux830' direct represents '1' with '9831'
9829 -9830 9831 0
-9831 9830 0
-9831 -9829 0
c Var 'aux830' direct represents '2' with '-9830'
9829 9831 -9830 0
c Encoding variable: aux831 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00007_00001=6)))
c Both direct and order encoding.
c Var 'aux831' order represents '0' with '9832'
c Var 'aux831' direct represents '0' with '9832'
c Var 'aux831' order represents '1' with '9833'
-9832 9833 0
c Var 'aux831' direct represents '1' with '9834'
9832 -9833 9834 0
-9834 9833 0
-9834 -9832 0
c Var 'aux831' direct represents '2' with '-9833'
9832 9834 -9833 0
c Encoding variable: aux832 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00005_00001=6)))
c Both direct and order encoding.
c Var 'aux832' order represents '0' with '9835'
c Var 'aux832' direct represents '0' with '9835'
c Var 'aux832' order represents '1' with '9836'
-9835 9836 0
c Var 'aux832' direct represents '1' with '9837'
9835 -9836 9837 0
-9837 9836 0
-9837 -9835 0
c Var 'aux832' direct represents '2' with '-9836'
9835 9837 -9836 0
c Encoding variable: aux833 with domain: int(0..3) (representing constraint ((field_00002_00001=6) + aux832))
c Both direct and order encoding.
c Var 'aux833' order represents '0' with '9838'
c Var 'aux833' direct represents '0' with '9838'
c Var 'aux833' order represents '1' with '9839'
-9838 9839 0
c Var 'aux833' direct represents '1' with '9840'
9838 -9839 9840 0
-9840 9839 0
-9840 -9838 0
c Var 'aux833' order represents '2' with '9841'
-9839 9841 0
c Var 'aux833' direct represents '2' with '9842'
9839 -9841 9842 0
-9842 9841 0
-9842 -9839 0
c Var 'aux833' direct represents '3' with '-9841'
9838 9840 9842 -9841 0
c Encoding variable: aux834 with domain: int(0..4) (representing constraint (aux829 + aux831))
c Both direct and order encoding.
c Var 'aux834' order represents '0' with '9843'
c Var 'aux834' direct represents '0' with '9843'
c Var 'aux834' order represents '1' with '9844'
-9843 9844 0
c Var 'aux834' direct represents '1' with '9845'
9843 -9844 9845 0
-9845 9844 0
-9845 -9843 0
c Var 'aux834' order represents '2' with '9846'
-9844 9846 0
c Var 'aux834' direct represents '2' with '9847'
9844 -9846 9847 0
-9847 9846 0
-9847 -9844 0
c Var 'aux834' order represents '3' with '9848'
-9846 9848 0
c Var 'aux834' direct represents '3' with '9849'
9846 -9848 9849 0
-9849 9848 0
-9849 -9846 0
c Var 'aux834' direct represents '4' with '-9848'
9843 9845 9847 9849 -9848 0
c Encoding variable: aux835 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00006_00001=7)))
c Both direct and order encoding.
c Var 'aux835' order represents '0' with '9850'
c Var 'aux835' direct represents '0' with '9850'
c Var 'aux835' order represents '1' with '9851'
-9850 9851 0
c Var 'aux835' direct represents '1' with '9852'
9850 -9851 9852 0
-9852 9851 0
-9852 -9850 0
c Var 'aux835' direct represents '2' with '-9851'
9850 9852 -9851 0
c Encoding variable: aux836 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00009_00001=7)))
c Both direct and order encoding.
c Var 'aux836' order represents '0' with '9853'
c Var 'aux836' direct represents '0' with '9853'
c Var 'aux836' order represents '1' with '9854'
-9853 9854 0
c Var 'aux836' direct represents '1' with '9855'
9853 -9854 9855 0
-9855 9854 0
-9855 -9853 0
c Var 'aux836' direct represents '2' with '-9854'
9853 9855 -9854 0
c Encoding variable: aux837 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00007_00001=7)))
c Both direct and order encoding.
c Var 'aux837' order represents '0' with '9856'
c Var 'aux837' direct represents '0' with '9856'
c Var 'aux837' order represents '1' with '9857'
-9856 9857 0
c Var 'aux837' direct represents '1' with '9858'
9856 -9857 9858 0
-9858 9857 0
-9858 -9856 0
c Var 'aux837' direct represents '2' with '-9857'
9856 9858 -9857 0
c Encoding variable: aux838 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00005_00001=7)))
c Both direct and order encoding.
c Var 'aux838' order represents '0' with '9859'
c Var 'aux838' direct represents '0' with '9859'
c Var 'aux838' order represents '1' with '9860'
-9859 9860 0
c Var 'aux838' direct represents '1' with '9861'
9859 -9860 9861 0
-9861 9860 0
-9861 -9859 0
c Var 'aux838' direct represents '2' with '-9860'
9859 9861 -9860 0
c Encoding variable: aux839 with domain: int(0..3) (representing constraint ((field_00002_00001=7) + aux838))
c Both direct and order encoding.
c Var 'aux839' order represents '0' with '9862'
c Var 'aux839' direct represents '0' with '9862'
c Var 'aux839' order represents '1' with '9863'
-9862 9863 0
c Var 'aux839' direct represents '1' with '9864'
9862 -9863 9864 0
-9864 9863 0
-9864 -9862 0
c Var 'aux839' order represents '2' with '9865'
-9863 9865 0
c Var 'aux839' direct represents '2' with '9866'
9863 -9865 9866 0
-9866 9865 0
-9866 -9863 0
c Var 'aux839' direct represents '3' with '-9865'
9862 9864 9866 -9865 0
c Encoding variable: aux840 with domain: int(0..4) (representing constraint (aux835 + aux837))
c Both direct and order encoding.
c Var 'aux840' order represents '0' with '9867'
c Var 'aux840' direct represents '0' with '9867'
c Var 'aux840' order represents '1' with '9868'
-9867 9868 0
c Var 'aux840' direct represents '1' with '9869'
9867 -9868 9869 0
-9869 9868 0
-9869 -9867 0
c Var 'aux840' order represents '2' with '9870'
-9868 9870 0
c Var 'aux840' direct represents '2' with '9871'
9868 -9870 9871 0
-9871 9870 0
-9871 -9868 0
c Var 'aux840' order represents '3' with '9872'
-9870 9872 0
c Var 'aux840' direct represents '3' with '9873'
9870 -9872 9873 0
-9873 9872 0
-9873 -9870 0
c Var 'aux840' direct represents '4' with '-9872'
9867 9869 9871 9873 -9872 0
c Encoding variable: aux841 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00006_00001=8)))
c Both direct and order encoding.
c Var 'aux841' order represents '0' with '9874'
c Var 'aux841' direct represents '0' with '9874'
c Var 'aux841' order represents '1' with '9875'
-9874 9875 0
c Var 'aux841' direct represents '1' with '9876'
9874 -9875 9876 0
-9876 9875 0
-9876 -9874 0
c Var 'aux841' direct represents '2' with '-9875'
9874 9876 -9875 0
c Encoding variable: aux842 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00009_00001=8)))
c Both direct and order encoding.
c Var 'aux842' order represents '0' with '9877'
c Var 'aux842' direct represents '0' with '9877'
c Var 'aux842' order represents '1' with '9878'
-9877 9878 0
c Var 'aux842' direct represents '1' with '9879'
9877 -9878 9879 0
-9879 9878 0
-9879 -9877 0
c Var 'aux842' direct represents '2' with '-9878'
9877 9879 -9878 0
c Encoding variable: aux843 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00007_00001=8)))
c Both direct and order encoding.
c Var 'aux843' order represents '0' with '9880'
c Var 'aux843' direct represents '0' with '9880'
c Var 'aux843' order represents '1' with '9881'
-9880 9881 0
c Var 'aux843' direct represents '1' with '9882'
9880 -9881 9882 0
-9882 9881 0
-9882 -9880 0
c Var 'aux843' direct represents '2' with '-9881'
9880 9882 -9881 0
c Encoding variable: aux844 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00005_00001=8)))
c Both direct and order encoding.
c Var 'aux844' order represents '0' with '9883'
c Var 'aux844' direct represents '0' with '9883'
c Var 'aux844' order represents '1' with '9884'
-9883 9884 0
c Var 'aux844' direct represents '1' with '9885'
9883 -9884 9885 0
-9885 9884 0
-9885 -9883 0
c Var 'aux844' direct represents '2' with '-9884'
9883 9885 -9884 0
c Encoding variable: aux845 with domain: int(0..3) (representing constraint ((field_00002_00001=8) + aux844))
c Both direct and order encoding.
c Var 'aux845' order represents '0' with '9886'
c Var 'aux845' direct represents '0' with '9886'
c Var 'aux845' order represents '1' with '9887'
-9886 9887 0
c Var 'aux845' direct represents '1' with '9888'
9886 -9887 9888 0
-9888 9887 0
-9888 -9886 0
c Var 'aux845' order represents '2' with '9889'
-9887 9889 0
c Var 'aux845' direct represents '2' with '9890'
9887 -9889 9890 0
-9890 9889 0
-9890 -9887 0
c Var 'aux845' direct represents '3' with '-9889'
9886 9888 9890 -9889 0
c Encoding variable: aux846 with domain: int(0..4) (representing constraint (aux841 + aux843))
c Both direct and order encoding.
c Var 'aux846' order represents '0' with '9891'
c Var 'aux846' direct represents '0' with '9891'
c Var 'aux846' order represents '1' with '9892'
-9891 9892 0
c Var 'aux846' direct represents '1' with '9893'
9891 -9892 9893 0
-9893 9892 0
-9893 -9891 0
c Var 'aux846' order represents '2' with '9894'
-9892 9894 0
c Var 'aux846' direct represents '2' with '9895'
9892 -9894 9895 0
-9895 9894 0
-9895 -9892 0
c Var 'aux846' order represents '3' with '9896'
-9894 9896 0
c Var 'aux846' direct represents '3' with '9897'
9894 -9896 9897 0
-9897 9896 0
-9897 -9894 0
c Var 'aux846' direct represents '4' with '-9896'
9891 9893 9895 9897 -9896 0
c Encoding variable: aux847 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00006_00001=9)))
c Both direct and order encoding.
c Var 'aux847' order represents '0' with '9898'
c Var 'aux847' direct represents '0' with '9898'
c Var 'aux847' order represents '1' with '9899'
-9898 9899 0
c Var 'aux847' direct represents '1' with '9900'
9898 -9899 9900 0
-9900 9899 0
-9900 -9898 0
c Var 'aux847' direct represents '2' with '-9899'
9898 9900 -9899 0
c Encoding variable: aux848 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00009_00001=9)))
c Both direct and order encoding.
c Var 'aux848' order represents '0' with '9901'
c Var 'aux848' direct represents '0' with '9901'
c Var 'aux848' order represents '1' with '9902'
-9901 9902 0
c Var 'aux848' direct represents '1' with '9903'
9901 -9902 9903 0
-9903 9902 0
-9903 -9901 0
c Var 'aux848' direct represents '2' with '-9902'
9901 9903 -9902 0
c Encoding variable: aux849 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00007_00001=9)))
c Both direct and order encoding.
c Var 'aux849' order represents '0' with '9904'
c Var 'aux849' direct represents '0' with '9904'
c Var 'aux849' order represents '1' with '9905'
-9904 9905 0
c Var 'aux849' direct represents '1' with '9906'
9904 -9905 9906 0
-9906 9905 0
-9906 -9904 0
c Var 'aux849' direct represents '2' with '-9905'
9904 9906 -9905 0
c Encoding variable: aux850 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00005_00001=9)))
c Both direct and order encoding.
c Var 'aux850' order represents '0' with '9907'
c Var 'aux850' direct represents '0' with '9907'
c Var 'aux850' order represents '1' with '9908'
-9907 9908 0
c Var 'aux850' direct represents '1' with '9909'
9907 -9908 9909 0
-9909 9908 0
-9909 -9907 0
c Var 'aux850' direct represents '2' with '-9908'
9907 9909 -9908 0
c Encoding variable: aux851 with domain: int(0..3) (representing constraint ((field_00002_00001=9) + aux850))
c Both direct and order encoding.
c Var 'aux851' order represents '0' with '9910'
c Var 'aux851' direct represents '0' with '9910'
c Var 'aux851' order represents '1' with '9911'
-9910 9911 0
c Var 'aux851' direct represents '1' with '9912'
9910 -9911 9912 0
-9912 9911 0
-9912 -9910 0
c Var 'aux851' order represents '2' with '9913'
-9911 9913 0
c Var 'aux851' direct represents '2' with '9914'
9911 -9913 9914 0
-9914 9913 0
-9914 -9911 0
c Var 'aux851' direct represents '3' with '-9913'
9910 9912 9914 -9913 0
c Encoding variable: aux852 with domain: int(0..4) (representing constraint (aux847 + aux849))
c Both direct and order encoding.
c Var 'aux852' order represents '0' with '9915'
c Var 'aux852' direct represents '0' with '9915'
c Var 'aux852' order represents '1' with '9916'
-9915 9916 0
c Var 'aux852' direct represents '1' with '9917'
9915 -9916 9917 0
-9917 9916 0
-9917 -9915 0
c Var 'aux852' order represents '2' with '9918'
-9916 9918 0
c Var 'aux852' direct represents '2' with '9919'
9916 -9918 9919 0
-9919 9918 0
-9919 -9916 0
c Var 'aux852' order represents '3' with '9920'
-9918 9920 0
c Var 'aux852' direct represents '3' with '9921'
9918 -9920 9921 0
-9921 9920 0
-9921 -9918 0
c Var 'aux852' direct represents '4' with '-9920'
9915 9917 9919 9921 -9920 0
c Encoding variable: aux853 with domain: int(0..2) (representing constraint ((field_00004_00002=1) + (field_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux853' order represents '0' with '9922'
c Var 'aux853' direct represents '0' with '9922'
c Var 'aux853' order represents '1' with '9923'
-9922 9923 0
c Var 'aux853' direct represents '1' with '9924'
9922 -9923 9924 0
-9924 9923 0
-9924 -9922 0
c Var 'aux853' direct represents '2' with '-9923'
9922 9924 -9923 0
c Encoding variable: aux854 with domain: int(0..2) (representing constraint ((field_00008_00002=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux854' order represents '0' with '9925'
c Var 'aux854' direct represents '0' with '9925'
c Var 'aux854' order represents '1' with '9926'
-9925 9926 0
c Var 'aux854' direct represents '1' with '9927'
9925 -9926 9927 0
-9927 9926 0
-9927 -9925 0
c Var 'aux854' direct represents '2' with '-9926'
9925 9927 -9926 0
c Encoding variable: aux855 with domain: int(0..2) (representing constraint ((field_00003_00002=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux855' order represents '0' with '9928'
c Var 'aux855' direct represents '0' with '9928'
c Var 'aux855' order represents '1' with '9929'
-9928 9929 0
c Var 'aux855' direct represents '1' with '9930'
9928 -9929 9930 0
-9930 9929 0
-9930 -9928 0
c Var 'aux855' direct represents '2' with '-9929'
9928 9930 -9929 0
c Encoding variable: aux856 with domain: int(0..2) (representing constraint ((field_00005_00002=1) + (field_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux856' order represents '0' with '9931'
c Var 'aux856' direct represents '0' with '9931'
c Var 'aux856' order represents '1' with '9932'
-9931 9932 0
c Var 'aux856' direct represents '1' with '9933'
9931 -9932 9933 0
-9933 9932 0
-9933 -9931 0
c Var 'aux856' direct represents '2' with '-9932'
9931 9933 -9932 0
c Encoding variable: aux857 with domain: int(0..4) (representing constraint (aux853 + aux856))
c Both direct and order encoding.
c Var 'aux857' order represents '0' with '9934'
c Var 'aux857' direct represents '0' with '9934'
c Var 'aux857' order represents '1' with '9935'
-9934 9935 0
c Var 'aux857' direct represents '1' with '9936'
9934 -9935 9936 0
-9936 9935 0
-9936 -9934 0
c Var 'aux857' order represents '2' with '9937'
-9935 9937 0
c Var 'aux857' direct represents '2' with '9938'
9935 -9937 9938 0
-9938 9937 0
-9938 -9935 0
c Var 'aux857' order represents '3' with '9939'
-9937 9939 0
c Var 'aux857' direct represents '3' with '9940'
9937 -9939 9940 0
-9940 9939 0
-9940 -9937 0
c Var 'aux857' direct represents '4' with '-9939'
9934 9936 9938 9940 -9939 0
c Encoding variable: aux858 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux858' order represents '0' with '9941'
c Var 'aux858' direct represents '0' with '9941'
c Var 'aux858' order represents '1' with '9942'
-9941 9942 0
c Var 'aux858' direct represents '1' with '9943'
9941 -9942 9943 0
-9943 9942 0
-9943 -9941 0
c Var 'aux858' direct represents '2' with '-9942'
9941 9943 -9942 0
c Encoding variable: aux859 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux859' order represents '0' with '9944'
c Var 'aux859' direct represents '0' with '9944'
c Var 'aux859' order represents '1' with '9945'
-9944 9945 0
c Var 'aux859' direct represents '1' with '9946'
9944 -9945 9946 0
-9946 9945 0
-9946 -9944 0
c Var 'aux859' direct represents '2' with '-9945'
9944 9946 -9945 0
c Encoding variable: aux860 with domain: int(0..2) (representing constraint ((field_00003_00002=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux860' order represents '0' with '9947'
c Var 'aux860' direct represents '0' with '9947'
c Var 'aux860' order represents '1' with '9948'
-9947 9948 0
c Var 'aux860' direct represents '1' with '9949'
9947 -9948 9949 0
-9949 9948 0
-9949 -9947 0
c Var 'aux860' direct represents '2' with '-9948'
9947 9949 -9948 0
c Encoding variable: aux861 with domain: int(0..2) (representing constraint ((field_00005_00002=2) + (field_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux861' order represents '0' with '9950'
c Var 'aux861' direct represents '0' with '9950'
c Var 'aux861' order represents '1' with '9951'
-9950 9951 0
c Var 'aux861' direct represents '1' with '9952'
9950 -9951 9952 0
-9952 9951 0
-9952 -9950 0
c Var 'aux861' direct represents '2' with '-9951'
9950 9952 -9951 0
c Encoding variable: aux862 with domain: int(0..4) (representing constraint (aux858 + aux861))
c Both direct and order encoding.
c Var 'aux862' order represents '0' with '9953'
c Var 'aux862' direct represents '0' with '9953'
c Var 'aux862' order represents '1' with '9954'
-9953 9954 0
c Var 'aux862' direct represents '1' with '9955'
9953 -9954 9955 0
-9955 9954 0
-9955 -9953 0
c Var 'aux862' order represents '2' with '9956'
-9954 9956 0
c Var 'aux862' direct represents '2' with '9957'
9954 -9956 9957 0
-9957 9956 0
-9957 -9954 0
c Var 'aux862' order represents '3' with '9958'
-9956 9958 0
c Var 'aux862' direct represents '3' with '9959'
9956 -9958 9959 0
-9959 9958 0
-9959 -9956 0
c Var 'aux862' direct represents '4' with '-9958'
9953 9955 9957 9959 -9958 0
c Encoding variable: aux863 with domain: int(0..2) (representing constraint ((field_00004_00002=3) + (field_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux863' order represents '0' with '9960'
c Var 'aux863' direct represents '0' with '9960'
c Var 'aux863' order represents '1' with '9961'
-9960 9961 0
c Var 'aux863' direct represents '1' with '9962'
9960 -9961 9962 0
-9962 9961 0
-9962 -9960 0
c Var 'aux863' direct represents '2' with '-9961'
9960 9962 -9961 0
c Encoding variable: aux864 with domain: int(0..2) (representing constraint ((field_00008_00002=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux864' order represents '0' with '9963'
c Var 'aux864' direct represents '0' with '9963'
c Var 'aux864' order represents '1' with '9964'
-9963 9964 0
c Var 'aux864' direct represents '1' with '9965'
9963 -9964 9965 0
-9965 9964 0
-9965 -9963 0
c Var 'aux864' direct represents '2' with '-9964'
9963 9965 -9964 0
c Encoding variable: aux865 with domain: int(0..2) (representing constraint ((field_00003_00002=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux865' order represents '0' with '9966'
c Var 'aux865' direct represents '0' with '9966'
c Var 'aux865' order represents '1' with '9967'
-9966 9967 0
c Var 'aux865' direct represents '1' with '9968'
9966 -9967 9968 0
-9968 9967 0
-9968 -9966 0
c Var 'aux865' direct represents '2' with '-9967'
9966 9968 -9967 0
c Encoding variable: aux866 with domain: int(0..2) (representing constraint ((field_00005_00002=3) + (field_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux866' order represents '0' with '9969'
c Var 'aux866' direct represents '0' with '9969'
c Var 'aux866' order represents '1' with '9970'
-9969 9970 0
c Var 'aux866' direct represents '1' with '9971'
9969 -9970 9971 0
-9971 9970 0
-9971 -9969 0
c Var 'aux866' direct represents '2' with '-9970'
9969 9971 -9970 0
c Encoding variable: aux867 with domain: int(0..4) (representing constraint (aux863 + aux866))
c Both direct and order encoding.
c Var 'aux867' order represents '0' with '9972'
c Var 'aux867' direct represents '0' with '9972'
c Var 'aux867' order represents '1' with '9973'
-9972 9973 0
c Var 'aux867' direct represents '1' with '9974'
9972 -9973 9974 0
-9974 9973 0
-9974 -9972 0
c Var 'aux867' order represents '2' with '9975'
-9973 9975 0
c Var 'aux867' direct represents '2' with '9976'
9973 -9975 9976 0
-9976 9975 0
-9976 -9973 0
c Var 'aux867' order represents '3' with '9977'
-9975 9977 0
c Var 'aux867' direct represents '3' with '9978'
9975 -9977 9978 0
-9978 9977 0
-9978 -9975 0
c Var 'aux867' direct represents '4' with '-9977'
9972 9974 9976 9978 -9977 0
c Encoding variable: aux868 with domain: int(0..2) (representing constraint ((field_00004_00002=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux868' order represents '0' with '9979'
c Var 'aux868' direct represents '0' with '9979'
c Var 'aux868' order represents '1' with '9980'
-9979 9980 0
c Var 'aux868' direct represents '1' with '9981'
9979 -9980 9981 0
-9981 9980 0
-9981 -9979 0
c Var 'aux868' direct represents '2' with '-9980'
9979 9981 -9980 0
c Encoding variable: aux869 with domain: int(0..2) (representing constraint ((field_00008_00002=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux869' order represents '0' with '9982'
c Var 'aux869' direct represents '0' with '9982'
c Var 'aux869' order represents '1' with '9983'
-9982 9983 0
c Var 'aux869' direct represents '1' with '9984'
9982 -9983 9984 0
-9984 9983 0
-9984 -9982 0
c Var 'aux869' direct represents '2' with '-9983'
9982 9984 -9983 0
c Encoding variable: aux870 with domain: int(0..2) (representing constraint ((field_00003_00002=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux870' order represents '0' with '9985'
c Var 'aux870' direct represents '0' with '9985'
c Var 'aux870' order represents '1' with '9986'
-9985 9986 0
c Var 'aux870' direct represents '1' with '9987'
9985 -9986 9987 0
-9987 9986 0
-9987 -9985 0
c Var 'aux870' direct represents '2' with '-9986'
9985 9987 -9986 0
c Encoding variable: aux871 with domain: int(0..2) (representing constraint ((field_00005_00002=4) + (field_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux871' order represents '0' with '9988'
c Var 'aux871' direct represents '0' with '9988'
c Var 'aux871' order represents '1' with '9989'
-9988 9989 0
c Var 'aux871' direct represents '1' with '9990'
9988 -9989 9990 0
-9990 9989 0
-9990 -9988 0
c Var 'aux871' direct represents '2' with '-9989'
9988 9990 -9989 0
c Encoding variable: aux872 with domain: int(0..4) (representing constraint (aux868 + aux871))
c Both direct and order encoding.
c Var 'aux872' order represents '0' with '9991'
c Var 'aux872' direct represents '0' with '9991'
c Var 'aux872' order represents '1' with '9992'
-9991 9992 0
c Var 'aux872' direct represents '1' with '9993'
9991 -9992 9993 0
-9993 9992 0
-9993 -9991 0
c Var 'aux872' order represents '2' with '9994'
-9992 9994 0
c Var 'aux872' direct represents '2' with '9995'
9992 -9994 9995 0
-9995 9994 0
-9995 -9992 0
c Var 'aux872' order represents '3' with '9996'
-9994 9996 0
c Var 'aux872' direct represents '3' with '9997'
9994 -9996 9997 0
-9997 9996 0
-9997 -9994 0
c Var 'aux872' direct represents '4' with '-9996'
9991 9993 9995 9997 -9996 0
c Encoding variable: aux873 with domain: int(0..2) (representing constraint ((field_00004_00002=5) + (field_00001_00002=5)))
c Both direct and order encoding.
c Var 'aux873' order represents '0' with '9998'
c Var 'aux873' direct represents '0' with '9998'
c Var 'aux873' order represents '1' with '9999'
-9998 9999 0
c Var 'aux873' direct represents '1' with '10000'
9998 -9999 10000 0
-10000 9999 0
-10000 -9998 0
c Var 'aux873' direct represents '2' with '-9999'
9998 10000 -9999 0
c Encoding variable: aux874 with domain: int(0..2) (representing constraint ((field_00008_00002=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux874' order represents '0' with '10001'
c Var 'aux874' direct represents '0' with '10001'
c Var 'aux874' order represents '1' with '10002'
-10001 10002 0
c Var 'aux874' direct represents '1' with '10003'
10001 -10002 10003 0
-10003 10002 0
-10003 -10001 0
c Var 'aux874' direct represents '2' with '-10002'
10001 10003 -10002 0
c Encoding variable: aux875 with domain: int(0..2) (representing constraint ((field_00003_00002=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux875' order represents '0' with '10004'
c Var 'aux875' direct represents '0' with '10004'
c Var 'aux875' order represents '1' with '10005'
-10004 10005 0
c Var 'aux875' direct represents '1' with '10006'
10004 -10005 10006 0
-10006 10005 0
-10006 -10004 0
c Var 'aux875' direct represents '2' with '-10005'
10004 10006 -10005 0
c Encoding variable: aux876 with domain: int(0..2) (representing constraint ((field_00005_00002=5) + (field_00002_00002=5)))
c Both direct and order encoding.
c Var 'aux876' order represents '0' with '10007'
c Var 'aux876' direct represents '0' with '10007'
c Var 'aux876' order represents '1' with '10008'
-10007 10008 0
c Var 'aux876' direct represents '1' with '10009'
10007 -10008 10009 0
-10009 10008 0
-10009 -10007 0
c Var 'aux876' direct represents '2' with '-10008'
10007 10009 -10008 0
c Encoding variable: aux877 with domain: int(0..4) (representing constraint (aux873 + aux876))
c Both direct and order encoding.
c Var 'aux877' order represents '0' with '10010'
c Var 'aux877' direct represents '0' with '10010'
c Var 'aux877' order represents '1' with '10011'
-10010 10011 0
c Var 'aux877' direct represents '1' with '10012'
10010 -10011 10012 0
-10012 10011 0
-10012 -10010 0
c Var 'aux877' order represents '2' with '10013'
-10011 10013 0
c Var 'aux877' direct represents '2' with '10014'
10011 -10013 10014 0
-10014 10013 0
-10014 -10011 0
c Var 'aux877' order represents '3' with '10015'
-10013 10015 0
c Var 'aux877' direct represents '3' with '10016'
10013 -10015 10016 0
-10016 10015 0
-10016 -10013 0
c Var 'aux877' direct represents '4' with '-10015'
10010 10012 10014 10016 -10015 0
c Encoding variable: aux878 with domain: int(0..2) (representing constraint ((field_00004_00002=6) + (field_00001_00002=6)))
c Both direct and order encoding.
c Var 'aux878' order represents '0' with '10017'
c Var 'aux878' direct represents '0' with '10017'
c Var 'aux878' order represents '1' with '10018'
-10017 10018 0
c Var 'aux878' direct represents '1' with '10019'
10017 -10018 10019 0
-10019 10018 0
-10019 -10017 0
c Var 'aux878' direct represents '2' with '-10018'
10017 10019 -10018 0
c Encoding variable: aux879 with domain: int(0..2) (representing constraint ((field_00008_00002=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux879' order represents '0' with '10020'
c Var 'aux879' direct represents '0' with '10020'
c Var 'aux879' order represents '1' with '10021'
-10020 10021 0
c Var 'aux879' direct represents '1' with '10022'
10020 -10021 10022 0
-10022 10021 0
-10022 -10020 0
c Var 'aux879' direct represents '2' with '-10021'
10020 10022 -10021 0
c Encoding variable: aux880 with domain: int(0..2) (representing constraint ((field_00003_00002=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux880' order represents '0' with '10023'
c Var 'aux880' direct represents '0' with '10023'
c Var 'aux880' order represents '1' with '10024'
-10023 10024 0
c Var 'aux880' direct represents '1' with '10025'
10023 -10024 10025 0
-10025 10024 0
-10025 -10023 0
c Var 'aux880' direct represents '2' with '-10024'
10023 10025 -10024 0
c Encoding variable: aux881 with domain: int(0..2) (representing constraint ((field_00005_00002=6) + (field_00002_00002=6)))
c Both direct and order encoding.
c Var 'aux881' order represents '0' with '10026'
c Var 'aux881' direct represents '0' with '10026'
c Var 'aux881' order represents '1' with '10027'
-10026 10027 0
c Var 'aux881' direct represents '1' with '10028'
10026 -10027 10028 0
-10028 10027 0
-10028 -10026 0
c Var 'aux881' direct represents '2' with '-10027'
10026 10028 -10027 0
c Encoding variable: aux882 with domain: int(0..4) (representing constraint (aux878 + aux881))
c Both direct and order encoding.
c Var 'aux882' order represents '0' with '10029'
c Var 'aux882' direct represents '0' with '10029'
c Var 'aux882' order represents '1' with '10030'
-10029 10030 0
c Var 'aux882' direct represents '1' with '10031'
10029 -10030 10031 0
-10031 10030 0
-10031 -10029 0
c Var 'aux882' order represents '2' with '10032'
-10030 10032 0
c Var 'aux882' direct represents '2' with '10033'
10030 -10032 10033 0
-10033 10032 0
-10033 -10030 0
c Var 'aux882' order represents '3' with '10034'
-10032 10034 0
c Var 'aux882' direct represents '3' with '10035'
10032 -10034 10035 0
-10035 10034 0
-10035 -10032 0
c Var 'aux882' direct represents '4' with '-10034'
10029 10031 10033 10035 -10034 0
c Encoding variable: aux883 with domain: int(0..2) (representing constraint ((field_00004_00002=7) + (field_00001_00002=7)))
c Both direct and order encoding.
c Var 'aux883' order represents '0' with '10036'
c Var 'aux883' direct represents '0' with '10036'
c Var 'aux883' order represents '1' with '10037'
-10036 10037 0
c Var 'aux883' direct represents '1' with '10038'
10036 -10037 10038 0
-10038 10037 0
-10038 -10036 0
c Var 'aux883' direct represents '2' with '-10037'
10036 10038 -10037 0
c Encoding variable: aux884 with domain: int(0..2) (representing constraint ((field_00008_00002=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux884' order represents '0' with '10039'
c Var 'aux884' direct represents '0' with '10039'
c Var 'aux884' order represents '1' with '10040'
-10039 10040 0
c Var 'aux884' direct represents '1' with '10041'
10039 -10040 10041 0
-10041 10040 0
-10041 -10039 0
c Var 'aux884' direct represents '2' with '-10040'
10039 10041 -10040 0
c Encoding variable: aux885 with domain: int(0..2) (representing constraint ((field_00003_00002=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux885' order represents '0' with '10042'
c Var 'aux885' direct represents '0' with '10042'
c Var 'aux885' order represents '1' with '10043'
-10042 10043 0
c Var 'aux885' direct represents '1' with '10044'
10042 -10043 10044 0
-10044 10043 0
-10044 -10042 0
c Var 'aux885' direct represents '2' with '-10043'
10042 10044 -10043 0
c Encoding variable: aux886 with domain: int(0..2) (representing constraint ((field_00005_00002=7) + (field_00002_00002=7)))
c Both direct and order encoding.
c Var 'aux886' order represents '0' with '10045'
c Var 'aux886' direct represents '0' with '10045'
c Var 'aux886' order represents '1' with '10046'
-10045 10046 0
c Var 'aux886' direct represents '1' with '10047'
10045 -10046 10047 0
-10047 10046 0
-10047 -10045 0
c Var 'aux886' direct represents '2' with '-10046'
10045 10047 -10046 0
c Encoding variable: aux887 with domain: int(0..4) (representing constraint (aux883 + aux886))
c Both direct and order encoding.
c Var 'aux887' order represents '0' with '10048'
c Var 'aux887' direct represents '0' with '10048'
c Var 'aux887' order represents '1' with '10049'
-10048 10049 0
c Var 'aux887' direct represents '1' with '10050'
10048 -10049 10050 0
-10050 10049 0
-10050 -10048 0
c Var 'aux887' order represents '2' with '10051'
-10049 10051 0
c Var 'aux887' direct represents '2' with '10052'
10049 -10051 10052 0
-10052 10051 0
-10052 -10049 0
c Var 'aux887' order represents '3' with '10053'
-10051 10053 0
c Var 'aux887' direct represents '3' with '10054'
10051 -10053 10054 0
-10054 10053 0
-10054 -10051 0
c Var 'aux887' direct represents '4' with '-10053'
10048 10050 10052 10054 -10053 0
c Encoding variable: aux888 with domain: int(1..2) (representing constraint ((field_00004_00002=8) + (field_00006_00002=8)))
c Var 'aux888' direct represents '1' with '-10055'
c Var 'aux888' direct represents '2' with '10055'
c Var 'aux888' order represents '2' with '1'
c Var 'aux888' order represents '1' with '-10055'
c Encoding variable: aux889 with domain: int(1..3) (representing constraint ((field_00001_00002=8) + aux888))
c Both direct and order encoding.
c Var 'aux889' order represents '1' with '10056'
c Var 'aux889' direct represents '1' with '10056'
c Var 'aux889' order represents '2' with '10057'
-10056 10057 0
c Var 'aux889' direct represents '2' with '10058'
10056 -10057 10058 0
-10058 10057 0
-10058 -10056 0
c Var 'aux889' direct represents '3' with '-10057'
10056 10058 -10057 0
c Encoding variable: aux890 with domain: int(0..2) (representing constraint ((field_00008_00002=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux890' order represents '0' with '10059'
c Var 'aux890' direct represents '0' with '10059'
c Var 'aux890' order represents '1' with '10060'
-10059 10060 0
c Var 'aux890' direct represents '1' with '10061'
10059 -10060 10061 0
-10061 10060 0
-10061 -10059 0
c Var 'aux890' direct represents '2' with '-10060'
10059 10061 -10060 0
c Encoding variable: aux891 with domain: int(0..2) (representing constraint ((field_00003_00002=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux891' order represents '0' with '10062'
c Var 'aux891' direct represents '0' with '10062'
c Var 'aux891' order represents '1' with '10063'
-10062 10063 0
c Var 'aux891' direct represents '1' with '10064'
10062 -10063 10064 0
-10064 10063 0
-10064 -10062 0
c Var 'aux891' direct represents '2' with '-10063'
10062 10064 -10063 0
c Encoding variable: aux892 with domain: int(0..2) (representing constraint ((field_00005_00002=8) + (field_00002_00002=8)))
c Both direct and order encoding.
c Var 'aux892' order represents '0' with '10065'
c Var 'aux892' direct represents '0' with '10065'
c Var 'aux892' order represents '1' with '10066'
-10065 10066 0
c Var 'aux892' direct represents '1' with '10067'
10065 -10066 10067 0
-10067 10066 0
-10067 -10065 0
c Var 'aux892' direct represents '2' with '-10066'
10065 10067 -10066 0
c Encoding variable: aux893 with domain: int(1..5) (representing constraint (aux889 + aux892))
c Both direct and order encoding.
c Var 'aux893' order represents '1' with '10068'
c Var 'aux893' direct represents '1' with '10068'
c Var 'aux893' order represents '2' with '10069'
-10068 10069 0
c Var 'aux893' direct represents '2' with '10070'
10068 -10069 10070 0
-10070 10069 0
-10070 -10068 0
c Var 'aux893' order represents '3' with '10071'
-10069 10071 0
c Var 'aux893' direct represents '3' with '10072'
10069 -10071 10072 0
-10072 10071 0
-10072 -10069 0
c Var 'aux893' order represents '4' with '10073'
-10071 10073 0
c Var 'aux893' direct represents '4' with '10074'
10071 -10073 10074 0
-10074 10073 0
-10074 -10071 0
c Var 'aux893' direct represents '5' with '-10073'
10068 10070 10072 10074 -10073 0
c Encoding variable: aux894 with domain: int(0..2) (representing constraint ((field_00004_00002=9) + (field_00001_00002=9)))
c Both direct and order encoding.
c Var 'aux894' order represents '0' with '10075'
c Var 'aux894' direct represents '0' with '10075'
c Var 'aux894' order represents '1' with '10076'
-10075 10076 0
c Var 'aux894' direct represents '1' with '10077'
10075 -10076 10077 0
-10077 10076 0
-10077 -10075 0
c Var 'aux894' direct represents '2' with '-10076'
10075 10077 -10076 0
c Encoding variable: aux895 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux895' order represents '0' with '10078'
c Var 'aux895' direct represents '0' with '10078'
c Var 'aux895' order represents '1' with '10079'
-10078 10079 0
c Var 'aux895' direct represents '1' with '10080'
10078 -10079 10080 0
-10080 10079 0
-10080 -10078 0
c Var 'aux895' direct represents '2' with '-10079'
10078 10080 -10079 0
c Encoding variable: aux896 with domain: int(0..2) (representing constraint ((field_00003_00002=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux896' order represents '0' with '10081'
c Var 'aux896' direct represents '0' with '10081'
c Var 'aux896' order represents '1' with '10082'
-10081 10082 0
c Var 'aux896' direct represents '1' with '10083'
10081 -10082 10083 0
-10083 10082 0
-10083 -10081 0
c Var 'aux896' direct represents '2' with '-10082'
10081 10083 -10082 0
c Encoding variable: aux897 with domain: int(0..2) (representing constraint ((field_00005_00002=9) + (field_00002_00002=9)))
c Both direct and order encoding.
c Var 'aux897' order represents '0' with '10084'
c Var 'aux897' direct represents '0' with '10084'
c Var 'aux897' order represents '1' with '10085'
-10084 10085 0
c Var 'aux897' direct represents '1' with '10086'
10084 -10085 10086 0
-10086 10085 0
-10086 -10084 0
c Var 'aux897' direct represents '2' with '-10085'
10084 10086 -10085 0
c Encoding variable: aux898 with domain: int(0..4) (representing constraint (aux894 + aux897))
c Both direct and order encoding.
c Var 'aux898' order represents '0' with '10087'
c Var 'aux898' direct represents '0' with '10087'
c Var 'aux898' order represents '1' with '10088'
-10087 10088 0
c Var 'aux898' direct represents '1' with '10089'
10087 -10088 10089 0
-10089 10088 0
-10089 -10087 0
c Var 'aux898' order represents '2' with '10090'
-10088 10090 0
c Var 'aux898' direct represents '2' with '10091'
10088 -10090 10091 0
-10091 10090 0
-10091 -10088 0
c Var 'aux898' order represents '3' with '10092'
-10090 10092 0
c Var 'aux898' direct represents '3' with '10093'
10090 -10092 10093 0
-10093 10092 0
-10093 -10090 0
c Var 'aux898' direct represents '4' with '-10092'
10087 10089 10091 10093 -10092 0
c Encoding variable: aux899 with domain: int(1..2) (representing constraint ((field_00004_00003=1) + (field_00006_00003=1)))
c Var 'aux899' direct represents '1' with '-10094'
c Var 'aux899' direct represents '2' with '10094'
c Var 'aux899' order represents '2' with '1'
c Var 'aux899' order represents '1' with '-10094'
c Encoding variable: aux900 with domain: int(1..3) (representing constraint ((field_00001_00003=1) + aux899))
c Both direct and order encoding.
c Var 'aux900' order represents '1' with '10095'
c Var 'aux900' direct represents '1' with '10095'
c Var 'aux900' order represents '2' with '10096'
-10095 10096 0
c Var 'aux900' direct represents '2' with '10097'
10095 -10096 10097 0
-10097 10096 0
-10097 -10095 0
c Var 'aux900' direct represents '3' with '-10096'
10095 10097 -10096 0
c Encoding variable: aux901 with domain: int(0..2) (representing constraint ((field_00003_00003=1) + (field_00009_00003=1)))
c Both direct and order encoding.
c Var 'aux901' order represents '0' with '10098'
c Var 'aux901' direct represents '0' with '10098'
c Var 'aux901' order represents '1' with '10099'
-10098 10099 0
c Var 'aux901' direct represents '1' with '10100'
10098 -10099 10100 0
-10100 10099 0
-10100 -10098 0
c Var 'aux901' direct represents '2' with '-10099'
10098 10100 -10099 0
c Encoding variable: aux902 with domain: int(0..2) (representing constraint ((field_00005_00003=1) + (field_00007_00003=1)))
c Both direct and order encoding.
c Var 'aux902' order represents '0' with '10101'
c Var 'aux902' direct represents '0' with '10101'
c Var 'aux902' order represents '1' with '10102'
-10101 10102 0
c Var 'aux902' direct represents '1' with '10103'
10101 -10102 10103 0
-10103 10102 0
-10103 -10101 0
c Var 'aux902' direct represents '2' with '-10102'
10101 10103 -10102 0
c Encoding variable: aux903 with domain: int(0..3) (representing constraint ((field_00002_00003=1) + aux902))
c Both direct and order encoding.
c Var 'aux903' order represents '0' with '10104'
c Var 'aux903' direct represents '0' with '10104'
c Var 'aux903' order represents '1' with '10105'
-10104 10105 0
c Var 'aux903' direct represents '1' with '10106'
10104 -10105 10106 0
-10106 10105 0
-10106 -10104 0
c Var 'aux903' order represents '2' with '10107'
-10105 10107 0
c Var 'aux903' direct represents '2' with '10108'
10105 -10107 10108 0
-10108 10107 0
-10108 -10105 0
c Var 'aux903' direct represents '3' with '-10107'
10104 10106 10108 -10107 0
c Encoding variable: aux904 with domain: int(0..2) (representing constraint ((field_00009_00003=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux904' order represents '0' with '10109'
c Var 'aux904' direct represents '0' with '10109'
c Var 'aux904' order represents '1' with '10110'
-10109 10110 0
c Var 'aux904' direct represents '1' with '10111'
10109 -10110 10111 0
-10111 10110 0
-10111 -10109 0
c Var 'aux904' direct represents '2' with '-10110'
10109 10111 -10110 0
c Encoding variable: aux905 with domain: int(0..2) (representing constraint ((field_00001_00003=2) + (field_00002_00003=2)))
c Both direct and order encoding.
c Var 'aux905' order represents '0' with '10112'
c Var 'aux905' direct represents '0' with '10112'
c Var 'aux905' order represents '1' with '10113'
-10112 10113 0
c Var 'aux905' direct represents '1' with '10114'
10112 -10113 10114 0
-10114 10113 0
-10114 -10112 0
c Var 'aux905' direct represents '2' with '-10113'
10112 10114 -10113 0
c Encoding variable: aux906 with domain: int(0..2) (representing constraint ((field_00003_00003=2) + (field_00005_00003=2)))
c Both direct and order encoding.
c Var 'aux906' order represents '0' with '10115'
c Var 'aux906' direct represents '0' with '10115'
c Var 'aux906' order represents '1' with '10116'
-10115 10116 0
c Var 'aux906' direct represents '1' with '10117'
10115 -10116 10117 0
-10117 10116 0
-10117 -10115 0
c Var 'aux906' direct represents '2' with '-10116'
10115 10117 -10116 0
c Encoding variable: aux907 with domain: int(0..3) (representing constraint ((field_00007_00003=2) + aux906))
c Both direct and order encoding.
c Var 'aux907' order represents '0' with '10118'
c Var 'aux907' direct represents '0' with '10118'
c Var 'aux907' order represents '1' with '10119'
-10118 10119 0
c Var 'aux907' direct represents '1' with '10120'
10118 -10119 10120 0
-10120 10119 0
-10120 -10118 0
c Var 'aux907' order represents '2' with '10121'
-10119 10121 0
c Var 'aux907' direct represents '2' with '10122'
10119 -10121 10122 0
-10122 10121 0
-10122 -10119 0
c Var 'aux907' direct represents '3' with '-10121'
10118 10120 10122 -10121 0
c Encoding variable: aux908 with domain: int(0..2) (representing constraint ((field_00009_00003=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux908' order represents '0' with '10123'
c Var 'aux908' direct represents '0' with '10123'
c Var 'aux908' order represents '1' with '10124'
-10123 10124 0
c Var 'aux908' direct represents '1' with '10125'
10123 -10124 10125 0
-10125 10124 0
-10125 -10123 0
c Var 'aux908' direct represents '2' with '-10124'
10123 10125 -10124 0
c Encoding variable: aux909 with domain: int(0..2) (representing constraint ((field_00001_00003=3) + (field_00002_00003=3)))
c Both direct and order encoding.
c Var 'aux909' order represents '0' with '10126'
c Var 'aux909' direct represents '0' with '10126'
c Var 'aux909' order represents '1' with '10127'
-10126 10127 0
c Var 'aux909' direct represents '1' with '10128'
10126 -10127 10128 0
-10128 10127 0
-10128 -10126 0
c Var 'aux909' direct represents '2' with '-10127'
10126 10128 -10127 0
c Encoding variable: aux910 with domain: int(0..2) (representing constraint ((field_00003_00003=3) + (field_00005_00003=3)))
c Both direct and order encoding.
c Var 'aux910' order represents '0' with '10129'
c Var 'aux910' direct represents '0' with '10129'
c Var 'aux910' order represents '1' with '10130'
-10129 10130 0
c Var 'aux910' direct represents '1' with '10131'
10129 -10130 10131 0
-10131 10130 0
-10131 -10129 0
c Var 'aux910' direct represents '2' with '-10130'
10129 10131 -10130 0
c Encoding variable: aux911 with domain: int(0..3) (representing constraint ((field_00007_00003=3) + aux910))
c Both direct and order encoding.
c Var 'aux911' order represents '0' with '10132'
c Var 'aux911' direct represents '0' with '10132'
c Var 'aux911' order represents '1' with '10133'
-10132 10133 0
c Var 'aux911' direct represents '1' with '10134'
10132 -10133 10134 0
-10134 10133 0
-10134 -10132 0
c Var 'aux911' order represents '2' with '10135'
-10133 10135 0
c Var 'aux911' direct represents '2' with '10136'
10133 -10135 10136 0
-10136 10135 0
-10136 -10133 0
c Var 'aux911' direct represents '3' with '-10135'
10132 10134 10136 -10135 0
c Encoding variable: aux912 with domain: int(0..2) (representing constraint ((field_00009_00003=4) + (field_00006_00003=4)))
c Both direct and order encoding.
c Var 'aux912' order represents '0' with '10137'
c Var 'aux912' direct represents '0' with '10137'
c Var 'aux912' order represents '1' with '10138'
-10137 10138 0
c Var 'aux912' direct represents '1' with '10139'
10137 -10138 10139 0
-10139 10138 0
-10139 -10137 0
c Var 'aux912' direct represents '2' with '-10138'
10137 10139 -10138 0
c Encoding variable: aux913 with domain: int(0..2) (representing constraint ((field_00001_00003=4) + (field_00002_00003=4)))
c Both direct and order encoding.
c Var 'aux913' order represents '0' with '10140'
c Var 'aux913' direct represents '0' with '10140'
c Var 'aux913' order represents '1' with '10141'
-10140 10141 0
c Var 'aux913' direct represents '1' with '10142'
10140 -10141 10142 0
-10142 10141 0
-10142 -10140 0
c Var 'aux913' direct represents '2' with '-10141'
10140 10142 -10141 0
c Encoding variable: aux914 with domain: int(0..2) (representing constraint ((field_00003_00003=4) + (field_00005_00003=4)))
c Both direct and order encoding.
c Var 'aux914' order represents '0' with '10143'
c Var 'aux914' direct represents '0' with '10143'
c Var 'aux914' order represents '1' with '10144'
-10143 10144 0
c Var 'aux914' direct represents '1' with '10145'
10143 -10144 10145 0
-10145 10144 0
-10145 -10143 0
c Var 'aux914' direct represents '2' with '-10144'
10143 10145 -10144 0
c Encoding variable: aux915 with domain: int(0..3) (representing constraint ((field_00007_00003=4) + aux914))
c Both direct and order encoding.
c Var 'aux915' order represents '0' with '10146'
c Var 'aux915' direct represents '0' with '10146'
c Var 'aux915' order represents '1' with '10147'
-10146 10147 0
c Var 'aux915' direct represents '1' with '10148'
10146 -10147 10148 0
-10148 10147 0
-10148 -10146 0
c Var 'aux915' order represents '2' with '10149'
-10147 10149 0
c Var 'aux915' direct represents '2' with '10150'
10147 -10149 10150 0
-10150 10149 0
-10150 -10147 0
c Var 'aux915' direct represents '3' with '-10149'
10146 10148 10150 -10149 0
c Encoding variable: aux916 with domain: int(0..2) (representing constraint ((field_00009_00003=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux916' order represents '0' with '10151'
c Var 'aux916' direct represents '0' with '10151'
c Var 'aux916' order represents '1' with '10152'
-10151 10152 0
c Var 'aux916' direct represents '1' with '10153'
10151 -10152 10153 0
-10153 10152 0
-10153 -10151 0
c Var 'aux916' direct represents '2' with '-10152'
10151 10153 -10152 0
c Encoding variable: aux917 with domain: int(0..2) (representing constraint ((field_00001_00003=5) + (field_00002_00003=5)))
c Both direct and order encoding.
c Var 'aux917' order represents '0' with '10154'
c Var 'aux917' direct represents '0' with '10154'
c Var 'aux917' order represents '1' with '10155'
-10154 10155 0
c Var 'aux917' direct represents '1' with '10156'
10154 -10155 10156 0
-10156 10155 0
-10156 -10154 0
c Var 'aux917' direct represents '2' with '-10155'
10154 10156 -10155 0
c Encoding variable: aux918 with domain: int(0..2) (representing constraint ((field_00003_00003=5) + (field_00005_00003=5)))
c Both direct and order encoding.
c Var 'aux918' order represents '0' with '10157'
c Var 'aux918' direct represents '0' with '10157'
c Var 'aux918' order represents '1' with '10158'
-10157 10158 0
c Var 'aux918' direct represents '1' with '10159'
10157 -10158 10159 0
-10159 10158 0
-10159 -10157 0
c Var 'aux918' direct represents '2' with '-10158'
10157 10159 -10158 0
c Encoding variable: aux919 with domain: int(0..3) (representing constraint ((field_00007_00003=5) + aux918))
c Both direct and order encoding.
c Var 'aux919' order represents '0' with '10160'
c Var 'aux919' direct represents '0' with '10160'
c Var 'aux919' order represents '1' with '10161'
-10160 10161 0
c Var 'aux919' direct represents '1' with '10162'
10160 -10161 10162 0
-10162 10161 0
-10162 -10160 0
c Var 'aux919' order represents '2' with '10163'
-10161 10163 0
c Var 'aux919' direct represents '2' with '10164'
10161 -10163 10164 0
-10164 10163 0
-10164 -10161 0
c Var 'aux919' direct represents '3' with '-10163'
10160 10162 10164 -10163 0
c Encoding variable: aux920 with domain: int(0..2) (representing constraint ((field_00009_00003=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux920' order represents '0' with '10165'
c Var 'aux920' direct represents '0' with '10165'
c Var 'aux920' order represents '1' with '10166'
-10165 10166 0
c Var 'aux920' direct represents '1' with '10167'
10165 -10166 10167 0
-10167 10166 0
-10167 -10165 0
c Var 'aux920' direct represents '2' with '-10166'
10165 10167 -10166 0
c Encoding variable: aux921 with domain: int(0..2) (representing constraint ((field_00001_00003=6) + (field_00002_00003=6)))
c Both direct and order encoding.
c Var 'aux921' order represents '0' with '10168'
c Var 'aux921' direct represents '0' with '10168'
c Var 'aux921' order represents '1' with '10169'
-10168 10169 0
c Var 'aux921' direct represents '1' with '10170'
10168 -10169 10170 0
-10170 10169 0
-10170 -10168 0
c Var 'aux921' direct represents '2' with '-10169'
10168 10170 -10169 0
c Encoding variable: aux922 with domain: int(0..2) (representing constraint ((field_00003_00003=6) + (field_00005_00003=6)))
c Both direct and order encoding.
c Var 'aux922' order represents '0' with '10171'
c Var 'aux922' direct represents '0' with '10171'
c Var 'aux922' order represents '1' with '10172'
-10171 10172 0
c Var 'aux922' direct represents '1' with '10173'
10171 -10172 10173 0
-10173 10172 0
-10173 -10171 0
c Var 'aux922' direct represents '2' with '-10172'
10171 10173 -10172 0
c Encoding variable: aux923 with domain: int(0..3) (representing constraint ((field_00007_00003=6) + aux922))
c Both direct and order encoding.
c Var 'aux923' order represents '0' with '10174'
c Var 'aux923' direct represents '0' with '10174'
c Var 'aux923' order represents '1' with '10175'
-10174 10175 0
c Var 'aux923' direct represents '1' with '10176'
10174 -10175 10176 0
-10176 10175 0
-10176 -10174 0
c Var 'aux923' order represents '2' with '10177'
-10175 10177 0
c Var 'aux923' direct represents '2' with '10178'
10175 -10177 10178 0
-10178 10177 0
-10178 -10175 0
c Var 'aux923' direct represents '3' with '-10177'
10174 10176 10178 -10177 0
c Encoding variable: aux924 with domain: int(0..2) (representing constraint ((field_00009_00003=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux924' order represents '0' with '10179'
c Var 'aux924' direct represents '0' with '10179'
c Var 'aux924' order represents '1' with '10180'
-10179 10180 0
c Var 'aux924' direct represents '1' with '10181'
10179 -10180 10181 0
-10181 10180 0
-10181 -10179 0
c Var 'aux924' direct represents '2' with '-10180'
10179 10181 -10180 0
c Encoding variable: aux925 with domain: int(0..2) (representing constraint ((field_00001_00003=7) + (field_00002_00003=7)))
c Both direct and order encoding.
c Var 'aux925' order represents '0' with '10182'
c Var 'aux925' direct represents '0' with '10182'
c Var 'aux925' order represents '1' with '10183'
-10182 10183 0
c Var 'aux925' direct represents '1' with '10184'
10182 -10183 10184 0
-10184 10183 0
-10184 -10182 0
c Var 'aux925' direct represents '2' with '-10183'
10182 10184 -10183 0
c Encoding variable: aux926 with domain: int(0..2) (representing constraint ((field_00003_00003=7) + (field_00005_00003=7)))
c Both direct and order encoding.
c Var 'aux926' order represents '0' with '10185'
c Var 'aux926' direct represents '0' with '10185'
c Var 'aux926' order represents '1' with '10186'
-10185 10186 0
c Var 'aux926' direct represents '1' with '10187'
10185 -10186 10187 0
-10187 10186 0
-10187 -10185 0
c Var 'aux926' direct represents '2' with '-10186'
10185 10187 -10186 0
c Encoding variable: aux927 with domain: int(0..3) (representing constraint ((field_00007_00003=7) + aux926))
c Both direct and order encoding.
c Var 'aux927' order represents '0' with '10188'
c Var 'aux927' direct represents '0' with '10188'
c Var 'aux927' order represents '1' with '10189'
-10188 10189 0
c Var 'aux927' direct represents '1' with '10190'
10188 -10189 10190 0
-10190 10189 0
-10190 -10188 0
c Var 'aux927' order represents '2' with '10191'
-10189 10191 0
c Var 'aux927' direct represents '2' with '10192'
10189 -10191 10192 0
-10192 10191 0
-10192 -10189 0
c Var 'aux927' direct represents '3' with '-10191'
10188 10190 10192 -10191 0
c Encoding variable: aux928 with domain: int(0..2) (representing constraint ((field_00009_00003=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux928' order represents '0' with '10193'
c Var 'aux928' direct represents '0' with '10193'
c Var 'aux928' order represents '1' with '10194'
-10193 10194 0
c Var 'aux928' direct represents '1' with '10195'
10193 -10194 10195 0
-10195 10194 0
-10195 -10193 0
c Var 'aux928' direct represents '2' with '-10194'
10193 10195 -10194 0
c Encoding variable: aux929 with domain: int(0..2) (representing constraint ((field_00001_00003=8) + (field_00002_00003=8)))
c Both direct and order encoding.
c Var 'aux929' order represents '0' with '10196'
c Var 'aux929' direct represents '0' with '10196'
c Var 'aux929' order represents '1' with '10197'
-10196 10197 0
c Var 'aux929' direct represents '1' with '10198'
10196 -10197 10198 0
-10198 10197 0
-10198 -10196 0
c Var 'aux929' direct represents '2' with '-10197'
10196 10198 -10197 0
c Encoding variable: aux930 with domain: int(1..2) (representing constraint ((field_00008_00003=8) + (field_00005_00003=8)))
c Var 'aux930' direct represents '1' with '-10199'
c Var 'aux930' direct represents '2' with '10199'
c Var 'aux930' order represents '2' with '1'
c Var 'aux930' order represents '1' with '-10199'
c Encoding variable: aux931 with domain: int(1..3) (representing constraint ((field_00003_00003=8) + aux930))
c Both direct and order encoding.
c Var 'aux931' order represents '1' with '10200'
c Var 'aux931' direct represents '1' with '10200'
c Var 'aux931' order represents '2' with '10201'
-10200 10201 0
c Var 'aux931' direct represents '2' with '10202'
10200 -10201 10202 0
-10202 10201 0
-10202 -10200 0
c Var 'aux931' direct represents '3' with '-10201'
10200 10202 -10201 0
c Encoding variable: aux932 with domain: int(1..4) (representing constraint ((field_00007_00003=8) + aux931))
c Both direct and order encoding.
c Var 'aux932' order represents '1' with '10203'
c Var 'aux932' direct represents '1' with '10203'
c Var 'aux932' order represents '2' with '10204'
-10203 10204 0
c Var 'aux932' direct represents '2' with '10205'
10203 -10204 10205 0
-10205 10204 0
-10205 -10203 0
c Var 'aux932' order represents '3' with '10206'
-10204 10206 0
c Var 'aux932' direct represents '3' with '10207'
10204 -10206 10207 0
-10207 10206 0
-10207 -10204 0
c Var 'aux932' direct represents '4' with '-10206'
10203 10205 10207 -10206 0
c Encoding variable: aux933 with domain: int(0..2) (representing constraint ((field_00009_00003=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux933' order represents '0' with '10208'
c Var 'aux933' direct represents '0' with '10208'
c Var 'aux933' order represents '1' with '10209'
-10208 10209 0
c Var 'aux933' direct represents '1' with '10210'
10208 -10209 10210 0
-10210 10209 0
-10210 -10208 0
c Var 'aux933' direct represents '2' with '-10209'
10208 10210 -10209 0
c Encoding variable: aux934 with domain: int(0..2) (representing constraint ((field_00001_00003=9) + (field_00002_00003=9)))
c Both direct and order encoding.
c Var 'aux934' order represents '0' with '10211'
c Var 'aux934' direct represents '0' with '10211'
c Var 'aux934' order represents '1' with '10212'
-10211 10212 0
c Var 'aux934' direct represents '1' with '10213'
10211 -10212 10213 0
-10213 10212 0
-10213 -10211 0
c Var 'aux934' direct represents '2' with '-10212'
10211 10213 -10212 0
c Encoding variable: aux935 with domain: int(0..2) (representing constraint ((field_00003_00003=9) + (field_00005_00003=9)))
c Both direct and order encoding.
c Var 'aux935' order represents '0' with '10214'
c Var 'aux935' direct represents '0' with '10214'
c Var 'aux935' order represents '1' with '10215'
-10214 10215 0
c Var 'aux935' direct represents '1' with '10216'
10214 -10215 10216 0
-10216 10215 0
-10216 -10214 0
c Var 'aux935' direct represents '2' with '-10215'
10214 10216 -10215 0
c Encoding variable: aux936 with domain: int(0..3) (representing constraint ((field_00007_00003=9) + aux935))
c Both direct and order encoding.
c Var 'aux936' order represents '0' with '10217'
c Var 'aux936' direct represents '0' with '10217'
c Var 'aux936' order represents '1' with '10218'
-10217 10218 0
c Var 'aux936' direct represents '1' with '10219'
10217 -10218 10219 0
-10219 10218 0
-10219 -10217 0
c Var 'aux936' order represents '2' with '10220'
-10218 10220 0
c Var 'aux936' direct represents '2' with '10221'
10218 -10220 10221 0
-10221 10220 0
-10221 -10218 0
c Var 'aux936' direct represents '3' with '-10220'
10217 10219 10221 -10220 0
c Encoding variable: aux937 with domain: int(0..2) (representing constraint ((field_00004_00004=1) + (field_00006_00004=1)))
c Both direct and order encoding.
c Var 'aux937' order represents '0' with '10222'
c Var 'aux937' direct represents '0' with '10222'
c Var 'aux937' order represents '1' with '10223'
-10222 10223 0
c Var 'aux937' direct represents '1' with '10224'
10222 -10223 10224 0
-10224 10223 0
-10224 -10222 0
c Var 'aux937' direct represents '2' with '-10223'
10222 10224 -10223 0
c Encoding variable: aux938 with domain: int(0..2) (representing constraint ((field_00001_00004=1) + (field_00009_00004=1)))
c Both direct and order encoding.
c Var 'aux938' order represents '0' with '10225'
c Var 'aux938' direct represents '0' with '10225'
c Var 'aux938' order represents '1' with '10226'
-10225 10226 0
c Var 'aux938' direct represents '1' with '10227'
10225 -10226 10227 0
-10227 10226 0
-10227 -10225 0
c Var 'aux938' direct represents '2' with '-10226'
10225 10227 -10226 0
c Encoding variable: aux939 with domain: int(1..2) (representing constraint ((field_00008_00004=1) + (field_00005_00004=1)))
c Var 'aux939' direct represents '1' with '-10228'
c Var 'aux939' direct represents '2' with '10228'
c Var 'aux939' order represents '2' with '1'
c Var 'aux939' order represents '1' with '-10228'
c Encoding variable: aux940 with domain: int(1..3) (representing constraint ((field_00003_00004=1) + aux939))
c Both direct and order encoding.
c Var 'aux940' order represents '1' with '10229'
c Var 'aux940' direct represents '1' with '10229'
c Var 'aux940' order represents '2' with '10230'
-10229 10230 0
c Var 'aux940' direct represents '2' with '10231'
10229 -10230 10231 0
-10231 10230 0
-10231 -10229 0
c Var 'aux940' direct represents '3' with '-10230'
10229 10231 -10230 0
c Encoding variable: aux941 with domain: int(1..4) (representing constraint ((field_00002_00004=1) + aux940))
c Both direct and order encoding.
c Var 'aux941' order represents '1' with '10232'
c Var 'aux941' direct represents '1' with '10232'
c Var 'aux941' order represents '2' with '10233'
-10232 10233 0
c Var 'aux941' direct represents '2' with '10234'
10232 -10233 10234 0
-10234 10233 0
-10234 -10232 0
c Var 'aux941' order represents '3' with '10235'
-10233 10235 0
c Var 'aux941' direct represents '3' with '10236'
10233 -10235 10236 0
-10236 10235 0
-10236 -10233 0
c Var 'aux941' direct represents '4' with '-10235'
10232 10234 10236 -10235 0
c Encoding variable: aux942 with domain: int(0..2) (representing constraint ((field_00004_00004=2) + (field_00006_00004=2)))
c Both direct and order encoding.
c Var 'aux942' order represents '0' with '10237'
c Var 'aux942' direct represents '0' with '10237'
c Var 'aux942' order represents '1' with '10238'
-10237 10238 0
c Var 'aux942' direct represents '1' with '10239'
10237 -10238 10239 0
-10239 10238 0
-10239 -10237 0
c Var 'aux942' direct represents '2' with '-10238'
10237 10239 -10238 0
c Encoding variable: aux943 with domain: int(0..2) (representing constraint ((field_00001_00004=2) + (field_00009_00004=2)))
c Both direct and order encoding.
c Var 'aux943' order represents '0' with '10240'
c Var 'aux943' direct represents '0' with '10240'
c Var 'aux943' order represents '1' with '10241'
-10240 10241 0
c Var 'aux943' direct represents '1' with '10242'
10240 -10241 10242 0
-10242 10241 0
-10242 -10240 0
c Var 'aux943' direct represents '2' with '-10241'
10240 10242 -10241 0
c Encoding variable: aux944 with domain: int(0..2) (representing constraint ((field_00008_00004=2) + (field_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux944' order represents '0' with '10243'
c Var 'aux944' direct represents '0' with '10243'
c Var 'aux944' order represents '1' with '10244'
-10243 10244 0
c Var 'aux944' direct represents '1' with '10245'
10243 -10244 10245 0
-10245 10244 0
-10245 -10243 0
c Var 'aux944' direct represents '2' with '-10244'
10243 10245 -10244 0
c Encoding variable: aux945 with domain: int(0..3) (representing constraint ((field_00002_00004=2) + aux944))
c Both direct and order encoding.
c Var 'aux945' order represents '0' with '10246'
c Var 'aux945' direct represents '0' with '10246'
c Var 'aux945' order represents '1' with '10247'
-10246 10247 0
c Var 'aux945' direct represents '1' with '10248'
10246 -10247 10248 0
-10248 10247 0
-10248 -10246 0
c Var 'aux945' order represents '2' with '10249'
-10247 10249 0
c Var 'aux945' direct represents '2' with '10250'
10247 -10249 10250 0
-10250 10249 0
-10250 -10247 0
c Var 'aux945' direct represents '3' with '-10249'
10246 10248 10250 -10249 0
c Encoding variable: aux946 with domain: int(0..2) (representing constraint ((field_00004_00004=3) + (field_00006_00004=3)))
c Both direct and order encoding.
c Var 'aux946' order represents '0' with '10251'
c Var 'aux946' direct represents '0' with '10251'
c Var 'aux946' order represents '1' with '10252'
-10251 10252 0
c Var 'aux946' direct represents '1' with '10253'
10251 -10252 10253 0
-10253 10252 0
-10253 -10251 0
c Var 'aux946' direct represents '2' with '-10252'
10251 10253 -10252 0
c Encoding variable: aux947 with domain: int(0..2) (representing constraint ((field_00001_00004=3) + (field_00009_00004=3)))
c Both direct and order encoding.
c Var 'aux947' order represents '0' with '10254'
c Var 'aux947' direct represents '0' with '10254'
c Var 'aux947' order represents '1' with '10255'
-10254 10255 0
c Var 'aux947' direct represents '1' with '10256'
10254 -10255 10256 0
-10256 10255 0
-10256 -10254 0
c Var 'aux947' direct represents '2' with '-10255'
10254 10256 -10255 0
c Encoding variable: aux948 with domain: int(1..2) (representing constraint ((field_00008_00004=3) + (field_00007_00004=3)))
c Var 'aux948' direct represents '1' with '-10257'
c Var 'aux948' direct represents '2' with '10257'
c Var 'aux948' order represents '2' with '1'
c Var 'aux948' order represents '1' with '-10257'
c Encoding variable: aux949 with domain: int(1..3) (representing constraint ((field_00003_00004=3) + aux948))
c Both direct and order encoding.
c Var 'aux949' order represents '1' with '10258'
c Var 'aux949' direct represents '1' with '10258'
c Var 'aux949' order represents '2' with '10259'
-10258 10259 0
c Var 'aux949' direct represents '2' with '10260'
10258 -10259 10260 0
-10260 10259 0
-10260 -10258 0
c Var 'aux949' direct represents '3' with '-10259'
10258 10260 -10259 0
c Encoding variable: aux950 with domain: int(1..4) (representing constraint ((field_00002_00004=3) + aux949))
c Both direct and order encoding.
c Var 'aux950' order represents '1' with '10261'
c Var 'aux950' direct represents '1' with '10261'
c Var 'aux950' order represents '2' with '10262'
-10261 10262 0
c Var 'aux950' direct represents '2' with '10263'
10261 -10262 10263 0
-10263 10262 0
-10263 -10261 0
c Var 'aux950' order represents '3' with '10264'
-10262 10264 0
c Var 'aux950' direct represents '3' with '10265'
10262 -10264 10265 0
-10265 10264 0
-10265 -10262 0
c Var 'aux950' direct represents '4' with '-10264'
10261 10263 10265 -10264 0
c Encoding variable: aux951 with domain: int(0..2) (representing constraint ((field_00004_00004=4) + (field_00006_00004=4)))
c Both direct and order encoding.
c Var 'aux951' order represents '0' with '10266'
c Var 'aux951' direct represents '0' with '10266'
c Var 'aux951' order represents '1' with '10267'
-10266 10267 0
c Var 'aux951' direct represents '1' with '10268'
10266 -10267 10268 0
-10268 10267 0
-10268 -10266 0
c Var 'aux951' direct represents '2' with '-10267'
10266 10268 -10267 0
c Encoding variable: aux952 with domain: int(0..2) (representing constraint ((field_00001_00004=4) + (field_00009_00004=4)))
c Both direct and order encoding.
c Var 'aux952' order represents '0' with '10269'
c Var 'aux952' direct represents '0' with '10269'
c Var 'aux952' order represents '1' with '10270'
-10269 10270 0
c Var 'aux952' direct represents '1' with '10271'
10269 -10270 10271 0
-10271 10270 0
-10271 -10269 0
c Var 'aux952' direct represents '2' with '-10270'
10269 10271 -10270 0
c Encoding variable: aux953 with domain: int(0..2) (representing constraint ((field_00008_00004=4) + (field_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux953' order represents '0' with '10272'
c Var 'aux953' direct represents '0' with '10272'
c Var 'aux953' order represents '1' with '10273'
-10272 10273 0
c Var 'aux953' direct represents '1' with '10274'
10272 -10273 10274 0
-10274 10273 0
-10274 -10272 0
c Var 'aux953' direct represents '2' with '-10273'
10272 10274 -10273 0
c Encoding variable: aux954 with domain: int(0..3) (representing constraint ((field_00002_00004=4) + aux953))
c Both direct and order encoding.
c Var 'aux954' order represents '0' with '10275'
c Var 'aux954' direct represents '0' with '10275'
c Var 'aux954' order represents '1' with '10276'
-10275 10276 0
c Var 'aux954' direct represents '1' with '10277'
10275 -10276 10277 0
-10277 10276 0
-10277 -10275 0
c Var 'aux954' order represents '2' with '10278'
-10276 10278 0
c Var 'aux954' direct represents '2' with '10279'
10276 -10278 10279 0
-10279 10278 0
-10279 -10276 0
c Var 'aux954' direct represents '3' with '-10278'
10275 10277 10279 -10278 0
c Encoding variable: aux955 with domain: int(0..2) (representing constraint ((field_00004_00004=5) + (field_00006_00004=5)))
c Both direct and order encoding.
c Var 'aux955' order represents '0' with '10280'
c Var 'aux955' direct represents '0' with '10280'
c Var 'aux955' order represents '1' with '10281'
-10280 10281 0
c Var 'aux955' direct represents '1' with '10282'
10280 -10281 10282 0
-10282 10281 0
-10282 -10280 0
c Var 'aux955' direct represents '2' with '-10281'
10280 10282 -10281 0
c Encoding variable: aux956 with domain: int(0..2) (representing constraint ((field_00001_00004=5) + (field_00009_00004=5)))
c Both direct and order encoding.
c Var 'aux956' order represents '0' with '10283'
c Var 'aux956' direct represents '0' with '10283'
c Var 'aux956' order represents '1' with '10284'
-10283 10284 0
c Var 'aux956' direct represents '1' with '10285'
10283 -10284 10285 0
-10285 10284 0
-10285 -10283 0
c Var 'aux956' direct represents '2' with '-10284'
10283 10285 -10284 0
c Encoding variable: aux957 with domain: int(0..2) (representing constraint ((field_00008_00004=5) + (field_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux957' order represents '0' with '10286'
c Var 'aux957' direct represents '0' with '10286'
c Var 'aux957' order represents '1' with '10287'
-10286 10287 0
c Var 'aux957' direct represents '1' with '10288'
10286 -10287 10288 0
-10288 10287 0
-10288 -10286 0
c Var 'aux957' direct represents '2' with '-10287'
10286 10288 -10287 0
c Encoding variable: aux958 with domain: int(0..3) (representing constraint ((field_00002_00004=5) + aux957))
c Both direct and order encoding.
c Var 'aux958' order represents '0' with '10289'
c Var 'aux958' direct represents '0' with '10289'
c Var 'aux958' order represents '1' with '10290'
-10289 10290 0
c Var 'aux958' direct represents '1' with '10291'
10289 -10290 10291 0
-10291 10290 0
-10291 -10289 0
c Var 'aux958' order represents '2' with '10292'
-10290 10292 0
c Var 'aux958' direct represents '2' with '10293'
10290 -10292 10293 0
-10293 10292 0
-10293 -10290 0
c Var 'aux958' direct represents '3' with '-10292'
10289 10291 10293 -10292 0
c Encoding variable: aux959 with domain: int(0..2) (representing constraint ((field_00004_00004=6) + (field_00006_00004=6)))
c Both direct and order encoding.
c Var 'aux959' order represents '0' with '10294'
c Var 'aux959' direct represents '0' with '10294'
c Var 'aux959' order represents '1' with '10295'
-10294 10295 0
c Var 'aux959' direct represents '1' with '10296'
10294 -10295 10296 0
-10296 10295 0
-10296 -10294 0
c Var 'aux959' direct represents '2' with '-10295'
10294 10296 -10295 0
c Encoding variable: aux960 with domain: int(0..2) (representing constraint ((field_00001_00004=6) + (field_00009_00004=6)))
c Both direct and order encoding.
c Var 'aux960' order represents '0' with '10297'
c Var 'aux960' direct represents '0' with '10297'
c Var 'aux960' order represents '1' with '10298'
-10297 10298 0
c Var 'aux960' direct represents '1' with '10299'
10297 -10298 10299 0
-10299 10298 0
-10299 -10297 0
c Var 'aux960' direct represents '2' with '-10298'
10297 10299 -10298 0
c Encoding variable: aux961 with domain: int(0..2) (representing constraint ((field_00008_00004=6) + (field_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux961' order represents '0' with '10300'
c Var 'aux961' direct represents '0' with '10300'
c Var 'aux961' order represents '1' with '10301'
-10300 10301 0
c Var 'aux961' direct represents '1' with '10302'
10300 -10301 10302 0
-10302 10301 0
-10302 -10300 0
c Var 'aux961' direct represents '2' with '-10301'
10300 10302 -10301 0
c Encoding variable: aux962 with domain: int(0..3) (representing constraint ((field_00002_00004=6) + aux961))
c Both direct and order encoding.
c Var 'aux962' order represents '0' with '10303'
c Var 'aux962' direct represents '0' with '10303'
c Var 'aux962' order represents '1' with '10304'
-10303 10304 0
c Var 'aux962' direct represents '1' with '10305'
10303 -10304 10305 0
-10305 10304 0
-10305 -10303 0
c Var 'aux962' order represents '2' with '10306'
-10304 10306 0
c Var 'aux962' direct represents '2' with '10307'
10304 -10306 10307 0
-10307 10306 0
-10307 -10304 0
c Var 'aux962' direct represents '3' with '-10306'
10303 10305 10307 -10306 0
c Encoding variable: aux963 with domain: int(0..2) (representing constraint ((field_00004_00004=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux963' order represents '0' with '10308'
c Var 'aux963' direct represents '0' with '10308'
c Var 'aux963' order represents '1' with '10309'
-10308 10309 0
c Var 'aux963' direct represents '1' with '10310'
10308 -10309 10310 0
-10310 10309 0
-10310 -10308 0
c Var 'aux963' direct represents '2' with '-10309'
10308 10310 -10309 0
c Encoding variable: aux964 with domain: int(0..2) (representing constraint ((field_00001_00004=7) + (field_00009_00004=7)))
c Both direct and order encoding.
c Var 'aux964' order represents '0' with '10311'
c Var 'aux964' direct represents '0' with '10311'
c Var 'aux964' order represents '1' with '10312'
-10311 10312 0
c Var 'aux964' direct represents '1' with '10313'
10311 -10312 10313 0
-10313 10312 0
-10313 -10311 0
c Var 'aux964' direct represents '2' with '-10312'
10311 10313 -10312 0
c Encoding variable: aux965 with domain: int(0..2) (representing constraint ((field_00008_00004=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux965' order represents '0' with '10314'
c Var 'aux965' direct represents '0' with '10314'
c Var 'aux965' order represents '1' with '10315'
-10314 10315 0
c Var 'aux965' direct represents '1' with '10316'
10314 -10315 10316 0
-10316 10315 0
-10316 -10314 0
c Var 'aux965' direct represents '2' with '-10315'
10314 10316 -10315 0
c Encoding variable: aux966 with domain: int(0..3) (representing constraint ((field_00002_00004=7) + aux965))
c Both direct and order encoding.
c Var 'aux966' order represents '0' with '10317'
c Var 'aux966' direct represents '0' with '10317'
c Var 'aux966' order represents '1' with '10318'
-10317 10318 0
c Var 'aux966' direct represents '1' with '10319'
10317 -10318 10319 0
-10319 10318 0
-10319 -10317 0
c Var 'aux966' order represents '2' with '10320'
-10318 10320 0
c Var 'aux966' direct represents '2' with '10321'
10318 -10320 10321 0
-10321 10320 0
-10321 -10318 0
c Var 'aux966' direct represents '3' with '-10320'
10317 10319 10321 -10320 0
c Encoding variable: aux967 with domain: int(0..2) (representing constraint ((field_00004_00004=8) + (field_00006_00004=8)))
c Both direct and order encoding.
c Var 'aux967' order represents '0' with '10322'
c Var 'aux967' direct represents '0' with '10322'
c Var 'aux967' order represents '1' with '10323'
-10322 10323 0
c Var 'aux967' direct represents '1' with '10324'
10322 -10323 10324 0
-10324 10323 0
-10324 -10322 0
c Var 'aux967' direct represents '2' with '-10323'
10322 10324 -10323 0
c Encoding variable: aux968 with domain: int(0..2) (representing constraint ((field_00001_00004=8) + (field_00009_00004=8)))
c Both direct and order encoding.
c Var 'aux968' order represents '0' with '10325'
c Var 'aux968' direct represents '0' with '10325'
c Var 'aux968' order represents '1' with '10326'
-10325 10326 0
c Var 'aux968' direct represents '1' with '10327'
10325 -10326 10327 0
-10327 10326 0
-10327 -10325 0
c Var 'aux968' direct represents '2' with '-10326'
10325 10327 -10326 0
c Encoding variable: aux969 with domain: int(0..2) (representing constraint ((field_00008_00004=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux969' order represents '0' with '10328'
c Var 'aux969' direct represents '0' with '10328'
c Var 'aux969' order represents '1' with '10329'
-10328 10329 0
c Var 'aux969' direct represents '1' with '10330'
10328 -10329 10330 0
-10330 10329 0
-10330 -10328 0
c Var 'aux969' direct represents '2' with '-10329'
10328 10330 -10329 0
c Encoding variable: aux970 with domain: int(0..3) (representing constraint ((field_00002_00004=8) + aux969))
c Both direct and order encoding.
c Var 'aux970' order represents '0' with '10331'
c Var 'aux970' direct represents '0' with '10331'
c Var 'aux970' order represents '1' with '10332'
-10331 10332 0
c Var 'aux970' direct represents '1' with '10333'
10331 -10332 10333 0
-10333 10332 0
-10333 -10331 0
c Var 'aux970' order represents '2' with '10334'
-10332 10334 0
c Var 'aux970' direct represents '2' with '10335'
10332 -10334 10335 0
-10335 10334 0
-10335 -10332 0
c Var 'aux970' direct represents '3' with '-10334'
10331 10333 10335 -10334 0
c Encoding variable: aux971 with domain: int(0..2) (representing constraint ((field_00004_00004=9) + (field_00006_00004=9)))
c Both direct and order encoding.
c Var 'aux971' order represents '0' with '10336'
c Var 'aux971' direct represents '0' with '10336'
c Var 'aux971' order represents '1' with '10337'
-10336 10337 0
c Var 'aux971' direct represents '1' with '10338'
10336 -10337 10338 0
-10338 10337 0
-10338 -10336 0
c Var 'aux971' direct represents '2' with '-10337'
10336 10338 -10337 0
c Encoding variable: aux972 with domain: int(0..2) (representing constraint ((field_00001_00004=9) + (field_00009_00004=9)))
c Both direct and order encoding.
c Var 'aux972' order represents '0' with '10339'
c Var 'aux972' direct represents '0' with '10339'
c Var 'aux972' order represents '1' with '10340'
-10339 10340 0
c Var 'aux972' direct represents '1' with '10341'
10339 -10340 10341 0
-10341 10340 0
-10341 -10339 0
c Var 'aux972' direct represents '2' with '-10340'
10339 10341 -10340 0
c Encoding variable: aux973 with domain: int(0..2) (representing constraint ((field_00008_00004=9) + (field_00003_00004=9)))
c Both direct and order encoding.
c Var 'aux973' order represents '0' with '10342'
c Var 'aux973' direct represents '0' with '10342'
c Var 'aux973' order represents '1' with '10343'
-10342 10343 0
c Var 'aux973' direct represents '1' with '10344'
10342 -10343 10344 0
-10344 10343 0
-10344 -10342 0
c Var 'aux973' direct represents '2' with '-10343'
10342 10344 -10343 0
c Encoding variable: aux974 with domain: int(0..3) (representing constraint ((field_00002_00004=9) + aux973))
c Both direct and order encoding.
c Var 'aux974' order represents '0' with '10345'
c Var 'aux974' direct represents '0' with '10345'
c Var 'aux974' order represents '1' with '10346'
-10345 10346 0
c Var 'aux974' direct represents '1' with '10347'
10345 -10346 10347 0
-10347 10346 0
-10347 -10345 0
c Var 'aux974' order represents '2' with '10348'
-10346 10348 0
c Var 'aux974' direct represents '2' with '10349'
10346 -10348 10349 0
-10349 10348 0
-10349 -10346 0
c Var 'aux974' direct represents '3' with '-10348'
10345 10347 10349 -10348 0
c Encoding variable: aux975 with domain: int(0..2) (representing constraint ((field_00004_00005=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux975' order represents '0' with '10350'
c Var 'aux975' direct represents '0' with '10350'
c Var 'aux975' order represents '1' with '10351'
-10350 10351 0
c Var 'aux975' direct represents '1' with '10352'
10350 -10351 10352 0
-10352 10351 0
-10352 -10350 0
c Var 'aux975' direct represents '2' with '-10351'
10350 10352 -10351 0
c Encoding variable: aux976 with domain: int(1..2) (representing constraint ((field_00001_00005=1) + (field_00009_00005=1)))
c Var 'aux976' direct represents '1' with '-10353'
c Var 'aux976' direct represents '2' with '10353'
c Var 'aux976' order represents '2' with '1'
c Var 'aux976' order represents '1' with '-10353'
c Encoding variable: aux977 with domain: int(1..3) (representing constraint ((field_00003_00005=1) + aux976))
c Both direct and order encoding.
c Var 'aux977' order represents '1' with '10354'
c Var 'aux977' direct represents '1' with '10354'
c Var 'aux977' order represents '2' with '10355'
-10354 10355 0
c Var 'aux977' direct represents '2' with '10356'
10354 -10355 10356 0
-10356 10355 0
-10356 -10354 0
c Var 'aux977' direct represents '3' with '-10355'
10354 10356 -10355 0
c Encoding variable: aux978 with domain: int(0..2) (representing constraint ((field_00005_00005=1) + (field_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux978' order represents '0' with '10357'
c Var 'aux978' direct represents '0' with '10357'
c Var 'aux978' order represents '1' with '10358'
-10357 10358 0
c Var 'aux978' direct represents '1' with '10359'
10357 -10358 10359 0
-10359 10358 0
-10359 -10357 0
c Var 'aux978' direct represents '2' with '-10358'
10357 10359 -10358 0
c Encoding variable: aux979 with domain: int(0..3) (representing constraint ((field_00002_00005=1) + aux978))
c Both direct and order encoding.
c Var 'aux979' order represents '0' with '10360'
c Var 'aux979' direct represents '0' with '10360'
c Var 'aux979' order represents '1' with '10361'
-10360 10361 0
c Var 'aux979' direct represents '1' with '10362'
10360 -10361 10362 0
-10362 10361 0
-10362 -10360 0
c Var 'aux979' order represents '2' with '10363'
-10361 10363 0
c Var 'aux979' direct represents '2' with '10364'
10361 -10363 10364 0
-10364 10363 0
-10364 -10361 0
c Var 'aux979' direct represents '3' with '-10363'
10360 10362 10364 -10363 0
c Encoding variable: aux980 with domain: int(0..2) (representing constraint ((field_00004_00005=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux980' order represents '0' with '10365'
c Var 'aux980' direct represents '0' with '10365'
c Var 'aux980' order represents '1' with '10366'
-10365 10366 0
c Var 'aux980' direct represents '1' with '10367'
10365 -10366 10367 0
-10367 10366 0
-10367 -10365 0
c Var 'aux980' direct represents '2' with '-10366'
10365 10367 -10366 0
c Encoding variable: aux981 with domain: int(0..2) (representing constraint ((field_00001_00005=2) + (field_00002_00005=2)))
c Both direct and order encoding.
c Var 'aux981' order represents '0' with '10368'
c Var 'aux981' direct represents '0' with '10368'
c Var 'aux981' order represents '1' with '10369'
-10368 10369 0
c Var 'aux981' direct represents '1' with '10370'
10368 -10369 10370 0
-10370 10369 0
-10370 -10368 0
c Var 'aux981' direct represents '2' with '-10369'
10368 10370 -10369 0
c Encoding variable: aux982 with domain: int(0..2) (representing constraint ((field_00003_00005=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux982' order represents '0' with '10371'
c Var 'aux982' direct represents '0' with '10371'
c Var 'aux982' order represents '1' with '10372'
-10371 10372 0
c Var 'aux982' direct represents '1' with '10373'
10371 -10372 10373 0
-10373 10372 0
-10373 -10371 0
c Var 'aux982' direct represents '2' with '-10372'
10371 10373 -10372 0
c Encoding variable: aux983 with domain: int(0..3) (representing constraint ((field_00007_00005=2) + aux982))
c Both direct and order encoding.
c Var 'aux983' order represents '0' with '10374'
c Var 'aux983' direct represents '0' with '10374'
c Var 'aux983' order represents '1' with '10375'
-10374 10375 0
c Var 'aux983' direct represents '1' with '10376'
10374 -10375 10376 0
-10376 10375 0
-10376 -10374 0
c Var 'aux983' order represents '2' with '10377'
-10375 10377 0
c Var 'aux983' direct represents '2' with '10378'
10375 -10377 10378 0
-10378 10377 0
-10378 -10375 0
c Var 'aux983' direct represents '3' with '-10377'
10374 10376 10378 -10377 0
c Encoding variable: aux984 with domain: int(0..2) (representing constraint ((field_00004_00005=3) + (field_00006_00005=3)))
c Both direct and order encoding.
c Var 'aux984' order represents '0' with '10379'
c Var 'aux984' direct represents '0' with '10379'
c Var 'aux984' order represents '1' with '10380'
-10379 10380 0
c Var 'aux984' direct represents '1' with '10381'
10379 -10380 10381 0
-10381 10380 0
-10381 -10379 0
c Var 'aux984' direct represents '2' with '-10380'
10379 10381 -10380 0
c Encoding variable: aux985 with domain: int(0..2) (representing constraint ((field_00001_00005=3) + (field_00002_00005=3)))
c Both direct and order encoding.
c Var 'aux985' order represents '0' with '10382'
c Var 'aux985' direct represents '0' with '10382'
c Var 'aux985' order represents '1' with '10383'
-10382 10383 0
c Var 'aux985' direct represents '1' with '10384'
10382 -10383 10384 0
-10384 10383 0
-10384 -10382 0
c Var 'aux985' direct represents '2' with '-10383'
10382 10384 -10383 0
c Encoding variable: aux986 with domain: int(0..2) (representing constraint ((field_00003_00005=3) + (field_00005_00005=3)))
c Both direct and order encoding.
c Var 'aux986' order represents '0' with '10385'
c Var 'aux986' direct represents '0' with '10385'
c Var 'aux986' order represents '1' with '10386'
-10385 10386 0
c Var 'aux986' direct represents '1' with '10387'
10385 -10386 10387 0
-10387 10386 0
-10387 -10385 0
c Var 'aux986' direct represents '2' with '-10386'
10385 10387 -10386 0
c Encoding variable: aux987 with domain: int(0..3) (representing constraint ((field_00007_00005=3) + aux986))
c Both direct and order encoding.
c Var 'aux987' order represents '0' with '10388'
c Var 'aux987' direct represents '0' with '10388'
c Var 'aux987' order represents '1' with '10389'
-10388 10389 0
c Var 'aux987' direct represents '1' with '10390'
10388 -10389 10390 0
-10390 10389 0
-10390 -10388 0
c Var 'aux987' order represents '2' with '10391'
-10389 10391 0
c Var 'aux987' direct represents '2' with '10392'
10389 -10391 10392 0
-10392 10391 0
-10392 -10389 0
c Var 'aux987' direct represents '3' with '-10391'
10388 10390 10392 -10391 0
c Encoding variable: aux988 with domain: int(0..2) (representing constraint ((field_00004_00005=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux988' order represents '0' with '10393'
c Var 'aux988' direct represents '0' with '10393'
c Var 'aux988' order represents '1' with '10394'
-10393 10394 0
c Var 'aux988' direct represents '1' with '10395'
10393 -10394 10395 0
-10395 10394 0
-10395 -10393 0
c Var 'aux988' direct represents '2' with '-10394'
10393 10395 -10394 0
c Encoding variable: aux989 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00002_00005=4)))
c Both direct and order encoding.
c Var 'aux989' order represents '0' with '10396'
c Var 'aux989' direct represents '0' with '10396'
c Var 'aux989' order represents '1' with '10397'
-10396 10397 0
c Var 'aux989' direct represents '1' with '10398'
10396 -10397 10398 0
-10398 10397 0
-10398 -10396 0
c Var 'aux989' direct represents '2' with '-10397'
10396 10398 -10397 0
c Encoding variable: aux990 with domain: int(0..2) (representing constraint ((field_00003_00005=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux990' order represents '0' with '10399'
c Var 'aux990' direct represents '0' with '10399'
c Var 'aux990' order represents '1' with '10400'
-10399 10400 0
c Var 'aux990' direct represents '1' with '10401'
10399 -10400 10401 0
-10401 10400 0
-10401 -10399 0
c Var 'aux990' direct represents '2' with '-10400'
10399 10401 -10400 0
c Encoding variable: aux991 with domain: int(0..3) (representing constraint ((field_00007_00005=4) + aux990))
c Both direct and order encoding.
c Var 'aux991' order represents '0' with '10402'
c Var 'aux991' direct represents '0' with '10402'
c Var 'aux991' order represents '1' with '10403'
-10402 10403 0
c Var 'aux991' direct represents '1' with '10404'
10402 -10403 10404 0
-10404 10403 0
-10404 -10402 0
c Var 'aux991' order represents '2' with '10405'
-10403 10405 0
c Var 'aux991' direct represents '2' with '10406'
10403 -10405 10406 0
-10406 10405 0
-10406 -10403 0
c Var 'aux991' direct represents '3' with '-10405'
10402 10404 10406 -10405 0
c Encoding variable: aux992 with domain: int(0..2) (representing constraint ((field_00004_00005=5) + (field_00006_00005=5)))
c Both direct and order encoding.
c Var 'aux992' order represents '0' with '10407'
c Var 'aux992' direct represents '0' with '10407'
c Var 'aux992' order represents '1' with '10408'
-10407 10408 0
c Var 'aux992' direct represents '1' with '10409'
10407 -10408 10409 0
-10409 10408 0
-10409 -10407 0
c Var 'aux992' direct represents '2' with '-10408'
10407 10409 -10408 0
c Encoding variable: aux993 with domain: int(0..2) (representing constraint ((field_00001_00005=5) + (field_00002_00005=5)))
c Both direct and order encoding.
c Var 'aux993' order represents '0' with '10410'
c Var 'aux993' direct represents '0' with '10410'
c Var 'aux993' order represents '1' with '10411'
-10410 10411 0
c Var 'aux993' direct represents '1' with '10412'
10410 -10411 10412 0
-10412 10411 0
-10412 -10410 0
c Var 'aux993' direct represents '2' with '-10411'
10410 10412 -10411 0
c Encoding variable: aux994 with domain: int(0..2) (representing constraint ((field_00003_00005=5) + (field_00005_00005=5)))
c Both direct and order encoding.
c Var 'aux994' order represents '0' with '10413'
c Var 'aux994' direct represents '0' with '10413'
c Var 'aux994' order represents '1' with '10414'
-10413 10414 0
c Var 'aux994' direct represents '1' with '10415'
10413 -10414 10415 0
-10415 10414 0
-10415 -10413 0
c Var 'aux994' direct represents '2' with '-10414'
10413 10415 -10414 0
c Encoding variable: aux995 with domain: int(0..3) (representing constraint ((field_00007_00005=5) + aux994))
c Both direct and order encoding.
c Var 'aux995' order represents '0' with '10416'
c Var 'aux995' direct represents '0' with '10416'
c Var 'aux995' order represents '1' with '10417'
-10416 10417 0
c Var 'aux995' direct represents '1' with '10418'
10416 -10417 10418 0
-10418 10417 0
-10418 -10416 0
c Var 'aux995' order represents '2' with '10419'
-10417 10419 0
c Var 'aux995' direct represents '2' with '10420'
10417 -10419 10420 0
-10420 10419 0
-10420 -10417 0
c Var 'aux995' direct represents '3' with '-10419'
10416 10418 10420 -10419 0
c Encoding variable: aux996 with domain: int(0..2) (representing constraint ((field_00004_00005=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux996' order represents '0' with '10421'
c Var 'aux996' direct represents '0' with '10421'
c Var 'aux996' order represents '1' with '10422'
-10421 10422 0
c Var 'aux996' direct represents '1' with '10423'
10421 -10422 10423 0
-10423 10422 0
-10423 -10421 0
c Var 'aux996' direct represents '2' with '-10422'
10421 10423 -10422 0
c Encoding variable: aux997 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00002_00005=6)))
c Both direct and order encoding.
c Var 'aux997' order represents '0' with '10424'
c Var 'aux997' direct represents '0' with '10424'
c Var 'aux997' order represents '1' with '10425'
-10424 10425 0
c Var 'aux997' direct represents '1' with '10426'
10424 -10425 10426 0
-10426 10425 0
-10426 -10424 0
c Var 'aux997' direct represents '2' with '-10425'
10424 10426 -10425 0
c Encoding variable: aux998 with domain: int(0..2) (representing constraint ((field_00003_00005=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux998' order represents '0' with '10427'
c Var 'aux998' direct represents '0' with '10427'
c Var 'aux998' order represents '1' with '10428'
-10427 10428 0
c Var 'aux998' direct represents '1' with '10429'
10427 -10428 10429 0
-10429 10428 0
-10429 -10427 0
c Var 'aux998' direct represents '2' with '-10428'
10427 10429 -10428 0
c Encoding variable: aux999 with domain: int(0..3) (representing constraint ((field_00007_00005=6) + aux998))
c Both direct and order encoding.
c Var 'aux999' order represents '0' with '10430'
c Var 'aux999' direct represents '0' with '10430'
c Var 'aux999' order represents '1' with '10431'
-10430 10431 0
c Var 'aux999' direct represents '1' with '10432'
10430 -10431 10432 0
-10432 10431 0
-10432 -10430 0
c Var 'aux999' order represents '2' with '10433'
-10431 10433 0
c Var 'aux999' direct represents '2' with '10434'
10431 -10433 10434 0
-10434 10433 0
-10434 -10431 0
c Var 'aux999' direct represents '3' with '-10433'
10430 10432 10434 -10433 0
c Encoding variable: aux1000 with domain: int(0..2) (representing constraint ((field_00004_00005=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux1000' order represents '0' with '10435'
c Var 'aux1000' direct represents '0' with '10435'
c Var 'aux1000' order represents '1' with '10436'
-10435 10436 0
c Var 'aux1000' direct represents '1' with '10437'
10435 -10436 10437 0
-10437 10436 0
-10437 -10435 0
c Var 'aux1000' direct represents '2' with '-10436'
10435 10437 -10436 0
c Encoding variable: aux1001 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00002_00005=7)))
c Both direct and order encoding.
c Var 'aux1001' order represents '0' with '10438'
c Var 'aux1001' direct represents '0' with '10438'
c Var 'aux1001' order represents '1' with '10439'
-10438 10439 0
c Var 'aux1001' direct represents '1' with '10440'
10438 -10439 10440 0
-10440 10439 0
-10440 -10438 0
c Var 'aux1001' direct represents '2' with '-10439'
10438 10440 -10439 0
c Encoding variable: aux1002 with domain: int(1..2) (representing constraint ((field_00008_00005=7) + (field_00005_00005=7)))
c Var 'aux1002' direct represents '1' with '-10441'
c Var 'aux1002' direct represents '2' with '10441'
c Var 'aux1002' order represents '2' with '1'
c Var 'aux1002' order represents '1' with '-10441'
c Encoding variable: aux1003 with domain: int(1..3) (representing constraint ((field_00003_00005=7) + aux1002))
c Both direct and order encoding.
c Var 'aux1003' order represents '1' with '10442'
c Var 'aux1003' direct represents '1' with '10442'
c Var 'aux1003' order represents '2' with '10443'
-10442 10443 0
c Var 'aux1003' direct represents '2' with '10444'
10442 -10443 10444 0
-10444 10443 0
-10444 -10442 0
c Var 'aux1003' direct represents '3' with '-10443'
10442 10444 -10443 0
c Encoding variable: aux1004 with domain: int(1..4) (representing constraint ((field_00007_00005=7) + aux1003))
c Both direct and order encoding.
c Var 'aux1004' order represents '1' with '10445'
c Var 'aux1004' direct represents '1' with '10445'
c Var 'aux1004' order represents '2' with '10446'
-10445 10446 0
c Var 'aux1004' direct represents '2' with '10447'
10445 -10446 10447 0
-10447 10446 0
-10447 -10445 0
c Var 'aux1004' order represents '3' with '10448'
-10446 10448 0
c Var 'aux1004' direct represents '3' with '10449'
10446 -10448 10449 0
-10449 10448 0
-10449 -10446 0
c Var 'aux1004' direct represents '4' with '-10448'
10445 10447 10449 -10448 0
c Encoding variable: aux1005 with domain: int(0..2) (representing constraint ((field_00004_00005=8) + (field_00006_00005=8)))
c Both direct and order encoding.
c Var 'aux1005' order represents '0' with '10450'
c Var 'aux1005' direct represents '0' with '10450'
c Var 'aux1005' order represents '1' with '10451'
-10450 10451 0
c Var 'aux1005' direct represents '1' with '10452'
10450 -10451 10452 0
-10452 10451 0
-10452 -10450 0
c Var 'aux1005' direct represents '2' with '-10451'
10450 10452 -10451 0
c Encoding variable: aux1006 with domain: int(0..2) (representing constraint ((field_00001_00005=8) + (field_00002_00005=8)))
c Both direct and order encoding.
c Var 'aux1006' order represents '0' with '10453'
c Var 'aux1006' direct represents '0' with '10453'
c Var 'aux1006' order represents '1' with '10454'
-10453 10454 0
c Var 'aux1006' direct represents '1' with '10455'
10453 -10454 10455 0
-10455 10454 0
-10455 -10453 0
c Var 'aux1006' direct represents '2' with '-10454'
10453 10455 -10454 0
c Encoding variable: aux1007 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux1007' order represents '0' with '10456'
c Var 'aux1007' direct represents '0' with '10456'
c Var 'aux1007' order represents '1' with '10457'
-10456 10457 0
c Var 'aux1007' direct represents '1' with '10458'
10456 -10457 10458 0
-10458 10457 0
-10458 -10456 0
c Var 'aux1007' direct represents '2' with '-10457'
10456 10458 -10457 0
c Encoding variable: aux1008 with domain: int(0..3) (representing constraint ((field_00007_00005=8) + aux1007))
c Both direct and order encoding.
c Var 'aux1008' order represents '0' with '10459'
c Var 'aux1008' direct represents '0' with '10459'
c Var 'aux1008' order represents '1' with '10460'
-10459 10460 0
c Var 'aux1008' direct represents '1' with '10461'
10459 -10460 10461 0
-10461 10460 0
-10461 -10459 0
c Var 'aux1008' order represents '2' with '10462'
-10460 10462 0
c Var 'aux1008' direct represents '2' with '10463'
10460 -10462 10463 0
-10463 10462 0
-10463 -10460 0
c Var 'aux1008' direct represents '3' with '-10462'
10459 10461 10463 -10462 0
c Encoding variable: aux1009 with domain: int(0..2) (representing constraint ((field_00004_00005=9) + (field_00006_00005=9)))
c Both direct and order encoding.
c Var 'aux1009' order represents '0' with '10464'
c Var 'aux1009' direct represents '0' with '10464'
c Var 'aux1009' order represents '1' with '10465'
-10464 10465 0
c Var 'aux1009' direct represents '1' with '10466'
10464 -10465 10466 0
-10466 10465 0
-10466 -10464 0
c Var 'aux1009' direct represents '2' with '-10465'
10464 10466 -10465 0
c Encoding variable: aux1010 with domain: int(0..2) (representing constraint ((field_00001_00005=9) + (field_00002_00005=9)))
c Both direct and order encoding.
c Var 'aux1010' order represents '0' with '10467'
c Var 'aux1010' direct represents '0' with '10467'
c Var 'aux1010' order represents '1' with '10468'
-10467 10468 0
c Var 'aux1010' direct represents '1' with '10469'
10467 -10468 10469 0
-10469 10468 0
-10469 -10467 0
c Var 'aux1010' direct represents '2' with '-10468'
10467 10469 -10468 0
c Encoding variable: aux1011 with domain: int(0..2) (representing constraint ((field_00003_00005=9) + (field_00005_00005=9)))
c Both direct and order encoding.
c Var 'aux1011' order represents '0' with '10470'
c Var 'aux1011' direct represents '0' with '10470'
c Var 'aux1011' order represents '1' with '10471'
-10470 10471 0
c Var 'aux1011' direct represents '1' with '10472'
10470 -10471 10472 0
-10472 10471 0
-10472 -10470 0
c Var 'aux1011' direct represents '2' with '-10471'
10470 10472 -10471 0
c Encoding variable: aux1012 with domain: int(0..3) (representing constraint ((field_00007_00005=9) + aux1011))
c Both direct and order encoding.
c Var 'aux1012' order represents '0' with '10473'
c Var 'aux1012' direct represents '0' with '10473'
c Var 'aux1012' order represents '1' with '10474'
-10473 10474 0
c Var 'aux1012' direct represents '1' with '10475'
10473 -10474 10475 0
-10475 10474 0
-10475 -10473 0
c Var 'aux1012' order represents '2' with '10476'
-10474 10476 0
c Var 'aux1012' direct represents '2' with '10477'
10474 -10476 10477 0
-10477 10476 0
-10477 -10474 0
c Var 'aux1012' direct represents '3' with '-10476'
10473 10475 10477 -10476 0
c Encoding variable: aux1013 with domain: int(0..2) (representing constraint ((field_00004_00006=1) + (field_00001_00006=1)))
c Both direct and order encoding.
c Var 'aux1013' order represents '0' with '10478'
c Var 'aux1013' direct represents '0' with '10478'
c Var 'aux1013' order represents '1' with '10479'
-10478 10479 0
c Var 'aux1013' direct represents '1' with '10480'
10478 -10479 10480 0
-10480 10479 0
-10480 -10478 0
c Var 'aux1013' direct represents '2' with '-10479'
10478 10480 -10479 0
c Encoding variable: aux1014 with domain: int(0..2) (representing constraint ((field_00008_00006=1) + (field_00009_00006=1)))
c Both direct and order encoding.
c Var 'aux1014' order represents '0' with '10481'
c Var 'aux1014' direct represents '0' with '10481'
c Var 'aux1014' order represents '1' with '10482'
-10481 10482 0
c Var 'aux1014' direct represents '1' with '10483'
10481 -10482 10483 0
-10483 10482 0
-10483 -10481 0
c Var 'aux1014' direct represents '2' with '-10482'
10481 10483 -10482 0
c Encoding variable: aux1015 with domain: int(0..2) (representing constraint ((field_00005_00006=1) + (field_00007_00006=1)))
c Both direct and order encoding.
c Var 'aux1015' order represents '0' with '10484'
c Var 'aux1015' direct represents '0' with '10484'
c Var 'aux1015' order represents '1' with '10485'
-10484 10485 0
c Var 'aux1015' direct represents '1' with '10486'
10484 -10485 10486 0
-10486 10485 0
-10486 -10484 0
c Var 'aux1015' direct represents '2' with '-10485'
10484 10486 -10485 0
c Encoding variable: aux1016 with domain: int(0..3) (representing constraint ((field_00002_00006=1) + aux1015))
c Both direct and order encoding.
c Var 'aux1016' order represents '0' with '10487'
c Var 'aux1016' direct represents '0' with '10487'
c Var 'aux1016' order represents '1' with '10488'
-10487 10488 0
c Var 'aux1016' direct represents '1' with '10489'
10487 -10488 10489 0
-10489 10488 0
-10489 -10487 0
c Var 'aux1016' order represents '2' with '10490'
-10488 10490 0
c Var 'aux1016' direct represents '2' with '10491'
10488 -10490 10491 0
-10491 10490 0
-10491 -10488 0
c Var 'aux1016' direct represents '3' with '-10490'
10487 10489 10491 -10490 0
c Encoding variable: aux1017 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00001_00006=2)))
c Both direct and order encoding.
c Var 'aux1017' order represents '0' with '10492'
c Var 'aux1017' direct represents '0' with '10492'
c Var 'aux1017' order represents '1' with '10493'
-10492 10493 0
c Var 'aux1017' direct represents '1' with '10494'
10492 -10493 10494 0
-10494 10493 0
-10494 -10492 0
c Var 'aux1017' direct represents '2' with '-10493'
10492 10494 -10493 0
c Encoding variable: aux1018 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00009_00006=2)))
c Both direct and order encoding.
c Var 'aux1018' order represents '0' with '10495'
c Var 'aux1018' direct represents '0' with '10495'
c Var 'aux1018' order represents '1' with '10496'
-10495 10496 0
c Var 'aux1018' direct represents '1' with '10497'
10495 -10496 10497 0
-10497 10496 0
-10497 -10495 0
c Var 'aux1018' direct represents '2' with '-10496'
10495 10497 -10496 0
c Encoding variable: aux1019 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00007_00006=2)))
c Both direct and order encoding.
c Var 'aux1019' order represents '0' with '10498'
c Var 'aux1019' direct represents '0' with '10498'
c Var 'aux1019' order represents '1' with '10499'
-10498 10499 0
c Var 'aux1019' direct represents '1' with '10500'
10498 -10499 10500 0
-10500 10499 0
-10500 -10498 0
c Var 'aux1019' direct represents '2' with '-10499'
10498 10500 -10499 0
c Encoding variable: aux1020 with domain: int(0..3) (representing constraint ((field_00002_00006=2) + aux1019))
c Both direct and order encoding.
c Var 'aux1020' order represents '0' with '10501'
c Var 'aux1020' direct represents '0' with '10501'
c Var 'aux1020' order represents '1' with '10502'
-10501 10502 0
c Var 'aux1020' direct represents '1' with '10503'
10501 -10502 10503 0
-10503 10502 0
-10503 -10501 0
c Var 'aux1020' order represents '2' with '10504'
-10502 10504 0
c Var 'aux1020' direct represents '2' with '10505'
10502 -10504 10505 0
-10505 10504 0
-10505 -10502 0
c Var 'aux1020' direct represents '3' with '-10504'
10501 10503 10505 -10504 0
c Encoding variable: aux1021 with domain: int(0..2) (representing constraint ((field_00004_00006=3) + (field_00001_00006=3)))
c Both direct and order encoding.
c Var 'aux1021' order represents '0' with '10506'
c Var 'aux1021' direct represents '0' with '10506'
c Var 'aux1021' order represents '1' with '10507'
-10506 10507 0
c Var 'aux1021' direct represents '1' with '10508'
10506 -10507 10508 0
-10508 10507 0
-10508 -10506 0
c Var 'aux1021' direct represents '2' with '-10507'
10506 10508 -10507 0
c Encoding variable: aux1022 with domain: int(0..2) (representing constraint ((field_00008_00006=3) + (field_00009_00006=3)))
c Both direct and order encoding.
c Var 'aux1022' order represents '0' with '10509'
c Var 'aux1022' direct represents '0' with '10509'
c Var 'aux1022' order represents '1' with '10510'
-10509 10510 0
c Var 'aux1022' direct represents '1' with '10511'
10509 -10510 10511 0
-10511 10510 0
-10511 -10509 0
c Var 'aux1022' direct represents '2' with '-10510'
10509 10511 -10510 0
c Encoding variable: aux1023 with domain: int(0..2) (representing constraint ((field_00005_00006=3) + (field_00007_00006=3)))
c Both direct and order encoding.
c Var 'aux1023' order represents '0' with '10512'
c Var 'aux1023' direct represents '0' with '10512'
c Var 'aux1023' order represents '1' with '10513'
-10512 10513 0
c Var 'aux1023' direct represents '1' with '10514'
10512 -10513 10514 0
-10514 10513 0
-10514 -10512 0
c Var 'aux1023' direct represents '2' with '-10513'
10512 10514 -10513 0
c Encoding variable: aux1024 with domain: int(0..3) (representing constraint ((field_00002_00006=3) + aux1023))
c Both direct and order encoding.
c Var 'aux1024' order represents '0' with '10515'
c Var 'aux1024' direct represents '0' with '10515'
c Var 'aux1024' order represents '1' with '10516'
-10515 10516 0
c Var 'aux1024' direct represents '1' with '10517'
10515 -10516 10517 0
-10517 10516 0
-10517 -10515 0
c Var 'aux1024' order represents '2' with '10518'
-10516 10518 0
c Var 'aux1024' direct represents '2' with '10519'
10516 -10518 10519 0
-10519 10518 0
-10519 -10516 0
c Var 'aux1024' direct represents '3' with '-10518'
10515 10517 10519 -10518 0
c Encoding variable: aux1025 with domain: int(0..2) (representing constraint ((field_00004_00006=4) + (field_00001_00006=4)))
c Both direct and order encoding.
c Var 'aux1025' order represents '0' with '10520'
c Var 'aux1025' direct represents '0' with '10520'
c Var 'aux1025' order represents '1' with '10521'
-10520 10521 0
c Var 'aux1025' direct represents '1' with '10522'
10520 -10521 10522 0
-10522 10521 0
-10522 -10520 0
c Var 'aux1025' direct represents '2' with '-10521'
10520 10522 -10521 0
c Encoding variable: aux1026 with domain: int(0..2) (representing constraint ((field_00008_00006=4) + (field_00009_00006=4)))
c Both direct and order encoding.
c Var 'aux1026' order represents '0' with '10523'
c Var 'aux1026' direct represents '0' with '10523'
c Var 'aux1026' order represents '1' with '10524'
-10523 10524 0
c Var 'aux1026' direct represents '1' with '10525'
10523 -10524 10525 0
-10525 10524 0
-10525 -10523 0
c Var 'aux1026' direct represents '2' with '-10524'
10523 10525 -10524 0
c Encoding variable: aux1027 with domain: int(0..2) (representing constraint ((field_00005_00006=4) + (field_00007_00006=4)))
c Both direct and order encoding.
c Var 'aux1027' order represents '0' with '10526'
c Var 'aux1027' direct represents '0' with '10526'
c Var 'aux1027' order represents '1' with '10527'
-10526 10527 0
c Var 'aux1027' direct represents '1' with '10528'
10526 -10527 10528 0
-10528 10527 0
-10528 -10526 0
c Var 'aux1027' direct represents '2' with '-10527'
10526 10528 -10527 0
c Encoding variable: aux1028 with domain: int(0..3) (representing constraint ((field_00002_00006=4) + aux1027))
c Both direct and order encoding.
c Var 'aux1028' order represents '0' with '10529'
c Var 'aux1028' direct represents '0' with '10529'
c Var 'aux1028' order represents '1' with '10530'
-10529 10530 0
c Var 'aux1028' direct represents '1' with '10531'
10529 -10530 10531 0
-10531 10530 0
-10531 -10529 0
c Var 'aux1028' order represents '2' with '10532'
-10530 10532 0
c Var 'aux1028' direct represents '2' with '10533'
10530 -10532 10533 0
-10533 10532 0
-10533 -10530 0
c Var 'aux1028' direct represents '3' with '-10532'
10529 10531 10533 -10532 0
c Encoding variable: aux1029 with domain: int(0..2) (representing constraint ((field_00004_00006=5) + (field_00001_00006=5)))
c Both direct and order encoding.
c Var 'aux1029' order represents '0' with '10534'
c Var 'aux1029' direct represents '0' with '10534'
c Var 'aux1029' order represents '1' with '10535'
-10534 10535 0
c Var 'aux1029' direct represents '1' with '10536'
10534 -10535 10536 0
-10536 10535 0
-10536 -10534 0
c Var 'aux1029' direct represents '2' with '-10535'
10534 10536 -10535 0
c Encoding variable: aux1030 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00009_00006=5)))
c Both direct and order encoding.
c Var 'aux1030' order represents '0' with '10537'
c Var 'aux1030' direct represents '0' with '10537'
c Var 'aux1030' order represents '1' with '10538'
-10537 10538 0
c Var 'aux1030' direct represents '1' with '10539'
10537 -10538 10539 0
-10539 10538 0
-10539 -10537 0
c Var 'aux1030' direct represents '2' with '-10538'
10537 10539 -10538 0
c Encoding variable: aux1031 with domain: int(0..2) (representing constraint ((field_00005_00006=5) + (field_00007_00006=5)))
c Both direct and order encoding.
c Var 'aux1031' order represents '0' with '10540'
c Var 'aux1031' direct represents '0' with '10540'
c Var 'aux1031' order represents '1' with '10541'
-10540 10541 0
c Var 'aux1031' direct represents '1' with '10542'
10540 -10541 10542 0
-10542 10541 0
-10542 -10540 0
c Var 'aux1031' direct represents '2' with '-10541'
10540 10542 -10541 0
c Encoding variable: aux1032 with domain: int(0..3) (representing constraint ((field_00002_00006=5) + aux1031))
c Both direct and order encoding.
c Var 'aux1032' order represents '0' with '10543'
c Var 'aux1032' direct represents '0' with '10543'
c Var 'aux1032' order represents '1' with '10544'
-10543 10544 0
c Var 'aux1032' direct represents '1' with '10545'
10543 -10544 10545 0
-10545 10544 0
-10545 -10543 0
c Var 'aux1032' order represents '2' with '10546'
-10544 10546 0
c Var 'aux1032' direct represents '2' with '10547'
10544 -10546 10547 0
-10547 10546 0
-10547 -10544 0
c Var 'aux1032' direct represents '3' with '-10546'
10543 10545 10547 -10546 0
c Encoding variable: aux1033 with domain: int(0..2) (representing constraint ((field_00004_00006=6) + (field_00001_00006=6)))
c Both direct and order encoding.
c Var 'aux1033' order represents '0' with '10548'
c Var 'aux1033' direct represents '0' with '10548'
c Var 'aux1033' order represents '1' with '10549'
-10548 10549 0
c Var 'aux1033' direct represents '1' with '10550'
10548 -10549 10550 0
-10550 10549 0
-10550 -10548 0
c Var 'aux1033' direct represents '2' with '-10549'
10548 10550 -10549 0
c Encoding variable: aux1034 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00009_00006=6)))
c Both direct and order encoding.
c Var 'aux1034' order represents '0' with '10551'
c Var 'aux1034' direct represents '0' with '10551'
c Var 'aux1034' order represents '1' with '10552'
-10551 10552 0
c Var 'aux1034' direct represents '1' with '10553'
10551 -10552 10553 0
-10553 10552 0
-10553 -10551 0
c Var 'aux1034' direct represents '2' with '-10552'
10551 10553 -10552 0
c Encoding variable: aux1035 with domain: int(1..2) (representing constraint ((field_00003_00006=6) + (field_00007_00006=6)))
c Var 'aux1035' direct represents '1' with '-10554'
c Var 'aux1035' direct represents '2' with '10554'
c Var 'aux1035' order represents '2' with '1'
c Var 'aux1035' order represents '1' with '-10554'
c Encoding variable: aux1036 with domain: int(1..3) (representing constraint ((field_00005_00006=6) + aux1035))
c Both direct and order encoding.
c Var 'aux1036' order represents '1' with '10555'
c Var 'aux1036' direct represents '1' with '10555'
c Var 'aux1036' order represents '2' with '10556'
-10555 10556 0
c Var 'aux1036' direct represents '2' with '10557'
10555 -10556 10557 0
-10557 10556 0
-10557 -10555 0
c Var 'aux1036' direct represents '3' with '-10556'
10555 10557 -10556 0
c Encoding variable: aux1037 with domain: int(1..4) (representing constraint ((field_00002_00006=6) + aux1036))
c Both direct and order encoding.
c Var 'aux1037' order represents '1' with '10558'
c Var 'aux1037' direct represents '1' with '10558'
c Var 'aux1037' order represents '2' with '10559'
-10558 10559 0
c Var 'aux1037' direct represents '2' with '10560'
10558 -10559 10560 0
-10560 10559 0
-10560 -10558 0
c Var 'aux1037' order represents '3' with '10561'
-10559 10561 0
c Var 'aux1037' direct represents '3' with '10562'
10559 -10561 10562 0
-10562 10561 0
-10562 -10559 0
c Var 'aux1037' direct represents '4' with '-10561'
10558 10560 10562 -10561 0
c Encoding variable: aux1038 with domain: int(1..2) (representing constraint ((field_00004_00006=7) + (field_00006_00006=7)))
c Var 'aux1038' direct represents '1' with '-10563'
c Var 'aux1038' direct represents '2' with '10563'
c Var 'aux1038' order represents '2' with '1'
c Var 'aux1038' order represents '1' with '-10563'
c Encoding variable: aux1039 with domain: int(1..3) (representing constraint ((field_00001_00006=7) + aux1038))
c Both direct and order encoding.
c Var 'aux1039' order represents '1' with '10564'
c Var 'aux1039' direct represents '1' with '10564'
c Var 'aux1039' order represents '2' with '10565'
-10564 10565 0
c Var 'aux1039' direct represents '2' with '10566'
10564 -10565 10566 0
-10566 10565 0
-10566 -10564 0
c Var 'aux1039' direct represents '3' with '-10565'
10564 10566 -10565 0
c Encoding variable: aux1040 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00009_00006=7)))
c Both direct and order encoding.
c Var 'aux1040' order represents '0' with '10567'
c Var 'aux1040' direct represents '0' with '10567'
c Var 'aux1040' order represents '1' with '10568'
-10567 10568 0
c Var 'aux1040' direct represents '1' with '10569'
10567 -10568 10569 0
-10569 10568 0
-10569 -10567 0
c Var 'aux1040' direct represents '2' with '-10568'
10567 10569 -10568 0
c Encoding variable: aux1041 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00007_00006=7)))
c Both direct and order encoding.
c Var 'aux1041' order represents '0' with '10570'
c Var 'aux1041' direct represents '0' with '10570'
c Var 'aux1041' order represents '1' with '10571'
-10570 10571 0
c Var 'aux1041' direct represents '1' with '10572'
10570 -10571 10572 0
-10572 10571 0
-10572 -10570 0
c Var 'aux1041' direct represents '2' with '-10571'
10570 10572 -10571 0
c Encoding variable: aux1042 with domain: int(0..3) (representing constraint ((field_00002_00006=7) + aux1041))
c Both direct and order encoding.
c Var 'aux1042' order represents '0' with '10573'
c Var 'aux1042' direct represents '0' with '10573'
c Var 'aux1042' order represents '1' with '10574'
-10573 10574 0
c Var 'aux1042' direct represents '1' with '10575'
10573 -10574 10575 0
-10575 10574 0
-10575 -10573 0
c Var 'aux1042' order represents '2' with '10576'
-10574 10576 0
c Var 'aux1042' direct represents '2' with '10577'
10574 -10576 10577 0
-10577 10576 0
-10577 -10574 0
c Var 'aux1042' direct represents '3' with '-10576'
10573 10575 10577 -10576 0
c Encoding variable: aux1043 with domain: int(0..2) (representing constraint ((field_00004_00006=8) + (field_00001_00006=8)))
c Both direct and order encoding.
c Var 'aux1043' order represents '0' with '10578'
c Var 'aux1043' direct represents '0' with '10578'
c Var 'aux1043' order represents '1' with '10579'
-10578 10579 0
c Var 'aux1043' direct represents '1' with '10580'
10578 -10579 10580 0
-10580 10579 0
-10580 -10578 0
c Var 'aux1043' direct represents '2' with '-10579'
10578 10580 -10579 0
c Encoding variable: aux1044 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00009_00006=8)))
c Both direct and order encoding.
c Var 'aux1044' order represents '0' with '10581'
c Var 'aux1044' direct represents '0' with '10581'
c Var 'aux1044' order represents '1' with '10582'
-10581 10582 0
c Var 'aux1044' direct represents '1' with '10583'
10581 -10582 10583 0
-10583 10582 0
-10583 -10581 0
c Var 'aux1044' direct represents '2' with '-10582'
10581 10583 -10582 0
c Encoding variable: aux1045 with domain: int(0..2) (representing constraint ((field_00005_00006=8) + (field_00007_00006=8)))
c Both direct and order encoding.
c Var 'aux1045' order represents '0' with '10584'
c Var 'aux1045' direct represents '0' with '10584'
c Var 'aux1045' order represents '1' with '10585'
-10584 10585 0
c Var 'aux1045' direct represents '1' with '10586'
10584 -10585 10586 0
-10586 10585 0
-10586 -10584 0
c Var 'aux1045' direct represents '2' with '-10585'
10584 10586 -10585 0
c Encoding variable: aux1046 with domain: int(0..3) (representing constraint ((field_00002_00006=8) + aux1045))
c Both direct and order encoding.
c Var 'aux1046' order represents '0' with '10587'
c Var 'aux1046' direct represents '0' with '10587'
c Var 'aux1046' order represents '1' with '10588'
-10587 10588 0
c Var 'aux1046' direct represents '1' with '10589'
10587 -10588 10589 0
-10589 10588 0
-10589 -10587 0
c Var 'aux1046' order represents '2' with '10590'
-10588 10590 0
c Var 'aux1046' direct represents '2' with '10591'
10588 -10590 10591 0
-10591 10590 0
-10591 -10588 0
c Var 'aux1046' direct represents '3' with '-10590'
10587 10589 10591 -10590 0
c Encoding variable: aux1047 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00001_00006=9)))
c Both direct and order encoding.
c Var 'aux1047' order represents '0' with '10592'
c Var 'aux1047' direct represents '0' with '10592'
c Var 'aux1047' order represents '1' with '10593'
-10592 10593 0
c Var 'aux1047' direct represents '1' with '10594'
10592 -10593 10594 0
-10594 10593 0
-10594 -10592 0
c Var 'aux1047' direct represents '2' with '-10593'
10592 10594 -10593 0
c Encoding variable: aux1048 with domain: int(0..2) (representing constraint ((field_00008_00006=9) + (field_00009_00006=9)))
c Both direct and order encoding.
c Var 'aux1048' order represents '0' with '10595'
c Var 'aux1048' direct represents '0' with '10595'
c Var 'aux1048' order represents '1' with '10596'
-10595 10596 0
c Var 'aux1048' direct represents '1' with '10597'
10595 -10596 10597 0
-10597 10596 0
-10597 -10595 0
c Var 'aux1048' direct represents '2' with '-10596'
10595 10597 -10596 0
c Encoding variable: aux1049 with domain: int(0..2) (representing constraint ((field_00005_00006=9) + (field_00007_00006=9)))
c Both direct and order encoding.
c Var 'aux1049' order represents '0' with '10598'
c Var 'aux1049' direct represents '0' with '10598'
c Var 'aux1049' order represents '1' with '10599'
-10598 10599 0
c Var 'aux1049' direct represents '1' with '10600'
10598 -10599 10600 0
-10600 10599 0
-10600 -10598 0
c Var 'aux1049' direct represents '2' with '-10599'
10598 10600 -10599 0
c Encoding variable: aux1050 with domain: int(0..3) (representing constraint ((field_00002_00006=9) + aux1049))
c Both direct and order encoding.
c Var 'aux1050' order represents '0' with '10601'
c Var 'aux1050' direct represents '0' with '10601'
c Var 'aux1050' order represents '1' with '10602'
-10601 10602 0
c Var 'aux1050' direct represents '1' with '10603'
10601 -10602 10603 0
-10603 10602 0
-10603 -10601 0
c Var 'aux1050' order represents '2' with '10604'
-10602 10604 0
c Var 'aux1050' direct represents '2' with '10605'
10602 -10604 10605 0
-10605 10604 0
-10605 -10602 0
c Var 'aux1050' direct represents '3' with '-10604'
10601 10603 10605 -10604 0
c Encoding variable: aux1051 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00006_00007=1)))
c Both direct and order encoding.
c Var 'aux1051' order represents '0' with '10606'
c Var 'aux1051' direct represents '0' with '10606'
c Var 'aux1051' order represents '1' with '10607'
-10606 10607 0
c Var 'aux1051' direct represents '1' with '10608'
10606 -10607 10608 0
-10608 10607 0
-10608 -10606 0
c Var 'aux1051' direct represents '2' with '-10607'
10606 10608 -10607 0
c Encoding variable: aux1052 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00002_00007=1)))
c Both direct and order encoding.
c Var 'aux1052' order represents '0' with '10609'
c Var 'aux1052' direct represents '0' with '10609'
c Var 'aux1052' order represents '1' with '10610'
-10609 10610 0
c Var 'aux1052' direct represents '1' with '10611'
10609 -10610 10611 0
-10611 10610 0
-10611 -10609 0
c Var 'aux1052' direct represents '2' with '-10610'
10609 10611 -10610 0
c Encoding variable: aux1053 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00006_00007=2)))
c Both direct and order encoding.
c Var 'aux1053' order represents '0' with '10612'
c Var 'aux1053' direct represents '0' with '10612'
c Var 'aux1053' order represents '1' with '10613'
-10612 10613 0
c Var 'aux1053' direct represents '1' with '10614'
10612 -10613 10614 0
-10614 10613 0
-10614 -10612 0
c Var 'aux1053' direct represents '2' with '-10613'
10612 10614 -10613 0
c Encoding variable: aux1054 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00002_00007=2)))
c Both direct and order encoding.
c Var 'aux1054' order represents '0' with '10615'
c Var 'aux1054' direct represents '0' with '10615'
c Var 'aux1054' order represents '1' with '10616'
-10615 10616 0
c Var 'aux1054' direct represents '1' with '10617'
10615 -10616 10617 0
-10617 10616 0
-10617 -10615 0
c Var 'aux1054' direct represents '2' with '-10616'
10615 10617 -10616 0
c Encoding variable: aux1055 with domain: int(0..2) (representing constraint ((field_00004_00007=3) + (field_00006_00007=3)))
c Both direct and order encoding.
c Var 'aux1055' order represents '0' with '10618'
c Var 'aux1055' direct represents '0' with '10618'
c Var 'aux1055' order represents '1' with '10619'
-10618 10619 0
c Var 'aux1055' direct represents '1' with '10620'
10618 -10619 10620 0
-10620 10619 0
-10620 -10618 0
c Var 'aux1055' direct represents '2' with '-10619'
10618 10620 -10619 0
c Encoding variable: aux1056 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00002_00007=3)))
c Both direct and order encoding.
c Var 'aux1056' order represents '0' with '10621'
c Var 'aux1056' direct represents '0' with '10621'
c Var 'aux1056' order represents '1' with '10622'
-10621 10622 0
c Var 'aux1056' direct represents '1' with '10623'
10621 -10622 10623 0
-10623 10622 0
-10623 -10621 0
c Var 'aux1056' direct represents '2' with '-10622'
10621 10623 -10622 0
c Encoding variable: aux1057 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00006_00007=4)))
c Both direct and order encoding.
c Var 'aux1057' order represents '0' with '10624'
c Var 'aux1057' direct represents '0' with '10624'
c Var 'aux1057' order represents '1' with '10625'
-10624 10625 0
c Var 'aux1057' direct represents '1' with '10626'
10624 -10625 10626 0
-10626 10625 0
-10626 -10624 0
c Var 'aux1057' direct represents '2' with '-10625'
10624 10626 -10625 0
c Encoding variable: aux1058 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00002_00007=4)))
c Both direct and order encoding.
c Var 'aux1058' order represents '0' with '10627'
c Var 'aux1058' direct represents '0' with '10627'
c Var 'aux1058' order represents '1' with '10628'
-10627 10628 0
c Var 'aux1058' direct represents '1' with '10629'
10627 -10628 10629 0
-10629 10628 0
-10629 -10627 0
c Var 'aux1058' direct represents '2' with '-10628'
10627 10629 -10628 0
c Encoding variable: aux1059 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00006_00007=5)))
c Both direct and order encoding.
c Var 'aux1059' order represents '0' with '10630'
c Var 'aux1059' direct represents '0' with '10630'
c Var 'aux1059' order represents '1' with '10631'
-10630 10631 0
c Var 'aux1059' direct represents '1' with '10632'
10630 -10631 10632 0
-10632 10631 0
-10632 -10630 0
c Var 'aux1059' direct represents '2' with '-10631'
10630 10632 -10631 0
c Encoding variable: aux1060 with domain: int(1..2) (representing constraint ((field_00001_00007=5) + (field_00002_00007=5)))
c Var 'aux1060' direct represents '1' with '-10633'
c Var 'aux1060' direct represents '2' with '10633'
c Var 'aux1060' order represents '2' with '1'
c Var 'aux1060' order represents '1' with '-10633'
c Encoding variable: aux1061 with domain: int(1..3) (representing constraint ((field_00008_00007=5) + aux1060))
c Both direct and order encoding.
c Var 'aux1061' order represents '1' with '10634'
c Var 'aux1061' direct represents '1' with '10634'
c Var 'aux1061' order represents '2' with '10635'
-10634 10635 0
c Var 'aux1061' direct represents '2' with '10636'
10634 -10635 10636 0
-10636 10635 0
-10636 -10634 0
c Var 'aux1061' direct represents '3' with '-10635'
10634 10636 -10635 0
c Encoding variable: aux1062 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00006_00007=6)))
c Both direct and order encoding.
c Var 'aux1062' order represents '0' with '10637'
c Var 'aux1062' direct represents '0' with '10637'
c Var 'aux1062' order represents '1' with '10638'
-10637 10638 0
c Var 'aux1062' direct represents '1' with '10639'
10637 -10638 10639 0
-10639 10638 0
-10639 -10637 0
c Var 'aux1062' direct represents '2' with '-10638'
10637 10639 -10638 0
c Encoding variable: aux1063 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00002_00007=6)))
c Both direct and order encoding.
c Var 'aux1063' order represents '0' with '10640'
c Var 'aux1063' direct represents '0' with '10640'
c Var 'aux1063' order represents '1' with '10641'
-10640 10641 0
c Var 'aux1063' direct represents '1' with '10642'
10640 -10641 10642 0
-10642 10641 0
-10642 -10640 0
c Var 'aux1063' direct represents '2' with '-10641'
10640 10642 -10641 0
c Encoding variable: aux1064 with domain: int(1..2) (representing constraint ((field_00003_00007=6) + (field_00007_00007=6)))
c Var 'aux1064' direct represents '1' with '-10643'
c Var 'aux1064' direct represents '2' with '10643'
c Var 'aux1064' order represents '2' with '1'
c Var 'aux1064' order represents '1' with '-10643'
c Encoding variable: aux1065 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00006_00007=7)))
c Both direct and order encoding.
c Var 'aux1065' order represents '0' with '10644'
c Var 'aux1065' direct represents '0' with '10644'
c Var 'aux1065' order represents '1' with '10645'
-10644 10645 0
c Var 'aux1065' direct represents '1' with '10646'
10644 -10645 10646 0
-10646 10645 0
-10646 -10644 0
c Var 'aux1065' direct represents '2' with '-10645'
10644 10646 -10645 0
c Encoding variable: aux1066 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00002_00007=7)))
c Both direct and order encoding.
c Var 'aux1066' order represents '0' with '10647'
c Var 'aux1066' direct represents '0' with '10647'
c Var 'aux1066' order represents '1' with '10648'
-10647 10648 0
c Var 'aux1066' direct represents '1' with '10649'
10647 -10648 10649 0
-10649 10648 0
-10649 -10647 0
c Var 'aux1066' direct represents '2' with '-10648'
10647 10649 -10648 0
c Encoding variable: aux1067 with domain: int(1..2) (representing constraint ((field_00003_00007=7) + (field_00005_00007=7)))
c Var 'aux1067' direct represents '1' with '-10650'
c Var 'aux1067' direct represents '2' with '10650'
c Var 'aux1067' order represents '2' with '1'
c Var 'aux1067' order represents '1' with '-10650'
c Encoding variable: aux1068 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00006_00007=8)))
c Both direct and order encoding.
c Var 'aux1068' order represents '0' with '10651'
c Var 'aux1068' direct represents '0' with '10651'
c Var 'aux1068' order represents '1' with '10652'
-10651 10652 0
c Var 'aux1068' direct represents '1' with '10653'
10651 -10652 10653 0
-10653 10652 0
-10653 -10651 0
c Var 'aux1068' direct represents '2' with '-10652'
10651 10653 -10652 0
c Encoding variable: aux1069 with domain: int(1..2) (representing constraint ((field_00008_00007=8) + (field_00009_00007=8)))
c Var 'aux1069' direct represents '1' with '-10654'
c Var 'aux1069' direct represents '2' with '10654'
c Var 'aux1069' order represents '2' with '1'
c Var 'aux1069' order represents '1' with '-10654'
c Encoding variable: aux1070 with domain: int(1..3) (representing constraint ((field_00003_00007=8) + aux1069))
c Both direct and order encoding.
c Var 'aux1070' order represents '1' with '10655'
c Var 'aux1070' direct represents '1' with '10655'
c Var 'aux1070' order represents '2' with '10656'
-10655 10656 0
c Var 'aux1070' direct represents '2' with '10657'
10655 -10656 10657 0
-10657 10656 0
-10657 -10655 0
c Var 'aux1070' direct represents '3' with '-10656'
10655 10657 -10656 0
c Encoding variable: aux1071 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00006_00007=9)))
c Both direct and order encoding.
c Var 'aux1071' order represents '0' with '10658'
c Var 'aux1071' direct represents '0' with '10658'
c Var 'aux1071' order represents '1' with '10659'
-10658 10659 0
c Var 'aux1071' direct represents '1' with '10660'
10658 -10659 10660 0
-10660 10659 0
-10660 -10658 0
c Var 'aux1071' direct represents '2' with '-10659'
10658 10660 -10659 0
c Encoding variable: aux1072 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00002_00007=9)))
c Both direct and order encoding.
c Var 'aux1072' order represents '0' with '10661'
c Var 'aux1072' direct represents '0' with '10661'
c Var 'aux1072' order represents '1' with '10662'
-10661 10662 0
c Var 'aux1072' direct represents '1' with '10663'
10661 -10662 10663 0
-10663 10662 0
-10663 -10661 0
c Var 'aux1072' direct represents '2' with '-10662'
10661 10663 -10662 0
c Encoding variable: aux1073 with domain: int(0..2) (representing constraint ((field_00009_00008=1) + (field_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux1073' order represents '0' with '10664'
c Var 'aux1073' direct represents '0' with '10664'
c Var 'aux1073' order represents '1' with '10665'
-10664 10665 0
c Var 'aux1073' direct represents '1' with '10666'
10664 -10665 10666 0
-10666 10665 0
-10666 -10664 0
c Var 'aux1073' direct represents '2' with '-10665'
10664 10666 -10665 0
c Encoding variable: aux1074 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux1074' order represents '0' with '10667'
c Var 'aux1074' direct represents '0' with '10667'
c Var 'aux1074' order represents '1' with '10668'
-10667 10668 0
c Var 'aux1074' direct represents '1' with '10669'
10667 -10668 10669 0
-10669 10668 0
-10669 -10667 0
c Var 'aux1074' direct represents '2' with '-10668'
10667 10669 -10668 0
c Encoding variable: aux1075 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00003_00008=1)))
c Both direct and order encoding.
c Var 'aux1075' order represents '0' with '10670'
c Var 'aux1075' direct represents '0' with '10670'
c Var 'aux1075' order represents '1' with '10671'
-10670 10671 0
c Var 'aux1075' direct represents '1' with '10672'
10670 -10671 10672 0
-10672 10671 0
-10672 -10670 0
c Var 'aux1075' direct represents '2' with '-10671'
10670 10672 -10671 0
c Encoding variable: aux1076 with domain: int(0..3) (representing constraint ((field_00005_00008=1) + aux1075))
c Both direct and order encoding.
c Var 'aux1076' order represents '0' with '10673'
c Var 'aux1076' direct represents '0' with '10673'
c Var 'aux1076' order represents '1' with '10674'
-10673 10674 0
c Var 'aux1076' direct represents '1' with '10675'
10673 -10674 10675 0
-10675 10674 0
-10675 -10673 0
c Var 'aux1076' order represents '2' with '10676'
-10674 10676 0
c Var 'aux1076' direct represents '2' with '10677'
10674 -10676 10677 0
-10677 10676 0
-10677 -10674 0
c Var 'aux1076' direct represents '3' with '-10676'
10673 10675 10677 -10676 0
c Encoding variable: aux1077 with domain: int(0..2) (representing constraint ((field_00009_00008=2) + (field_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux1077' order represents '0' with '10678'
c Var 'aux1077' direct represents '0' with '10678'
c Var 'aux1077' order represents '1' with '10679'
-10678 10679 0
c Var 'aux1077' direct represents '1' with '10680'
10678 -10679 10680 0
-10680 10679 0
-10680 -10678 0
c Var 'aux1077' direct represents '2' with '-10679'
10678 10680 -10679 0
c Encoding variable: aux1078 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux1078' order represents '0' with '10681'
c Var 'aux1078' direct represents '0' with '10681'
c Var 'aux1078' order represents '1' with '10682'
-10681 10682 0
c Var 'aux1078' direct represents '1' with '10683'
10681 -10682 10683 0
-10683 10682 0
-10683 -10681 0
c Var 'aux1078' direct represents '2' with '-10682'
10681 10683 -10682 0
c Encoding variable: aux1079 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00003_00008=2)))
c Both direct and order encoding.
c Var 'aux1079' order represents '0' with '10684'
c Var 'aux1079' direct represents '0' with '10684'
c Var 'aux1079' order represents '1' with '10685'
-10684 10685 0
c Var 'aux1079' direct represents '1' with '10686'
10684 -10685 10686 0
-10686 10685 0
-10686 -10684 0
c Var 'aux1079' direct represents '2' with '-10685'
10684 10686 -10685 0
c Encoding variable: aux1080 with domain: int(0..3) (representing constraint ((field_00005_00008=2) + aux1079))
c Both direct and order encoding.
c Var 'aux1080' order represents '0' with '10687'
c Var 'aux1080' direct represents '0' with '10687'
c Var 'aux1080' order represents '1' with '10688'
-10687 10688 0
c Var 'aux1080' direct represents '1' with '10689'
10687 -10688 10689 0
-10689 10688 0
-10689 -10687 0
c Var 'aux1080' order represents '2' with '10690'
-10688 10690 0
c Var 'aux1080' direct represents '2' with '10691'
10688 -10690 10691 0
-10691 10690 0
-10691 -10688 0
c Var 'aux1080' direct represents '3' with '-10690'
10687 10689 10691 -10690 0
c Encoding variable: aux1081 with domain: int(1..2) (representing constraint ((field_00004_00008=3) + (field_00006_00008=3)))
c Var 'aux1081' direct represents '1' with '-10692'
c Var 'aux1081' direct represents '2' with '10692'
c Var 'aux1081' order represents '2' with '1'
c Var 'aux1081' order represents '1' with '-10692'
c Encoding variable: aux1082 with domain: int(1..3) (representing constraint ((field_00001_00008=3) + aux1081))
c Both direct and order encoding.
c Var 'aux1082' order represents '1' with '10693'
c Var 'aux1082' direct represents '1' with '10693'
c Var 'aux1082' order represents '2' with '10694'
-10693 10694 0
c Var 'aux1082' direct represents '2' with '10695'
10693 -10694 10695 0
-10695 10694 0
-10695 -10693 0
c Var 'aux1082' direct represents '3' with '-10694'
10693 10695 -10694 0
c Encoding variable: aux1083 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00009_00008=3)))
c Both direct and order encoding.
c Var 'aux1083' order represents '0' with '10696'
c Var 'aux1083' direct represents '0' with '10696'
c Var 'aux1083' order represents '1' with '10697'
-10696 10697 0
c Var 'aux1083' direct represents '1' with '10698'
10696 -10697 10698 0
-10698 10697 0
-10698 -10696 0
c Var 'aux1083' direct represents '2' with '-10697'
10696 10698 -10697 0
c Encoding variable: aux1084 with domain: int(0..2) (representing constraint ((field_00003_00008=3) + (field_00005_00008=3)))
c Both direct and order encoding.
c Var 'aux1084' order represents '0' with '10699'
c Var 'aux1084' direct represents '0' with '10699'
c Var 'aux1084' order represents '1' with '10700'
-10699 10700 0
c Var 'aux1084' direct represents '1' with '10701'
10699 -10700 10701 0
-10701 10700 0
-10701 -10699 0
c Var 'aux1084' direct represents '2' with '-10700'
10699 10701 -10700 0
c Encoding variable: aux1085 with domain: int(0..3) (representing constraint ((field_00007_00008=3) + aux1084))
c Both direct and order encoding.
c Var 'aux1085' order represents '0' with '10702'
c Var 'aux1085' direct represents '0' with '10702'
c Var 'aux1085' order represents '1' with '10703'
-10702 10703 0
c Var 'aux1085' direct represents '1' with '10704'
10702 -10703 10704 0
-10704 10703 0
-10704 -10702 0
c Var 'aux1085' order represents '2' with '10705'
-10703 10705 0
c Var 'aux1085' direct represents '2' with '10706'
10703 -10705 10706 0
-10706 10705 0
-10706 -10703 0
c Var 'aux1085' direct represents '3' with '-10705'
10702 10704 10706 -10705 0
c Encoding variable: aux1086 with domain: int(0..2) (representing constraint ((field_00009_00008=4) + (field_00006_00008=4)))
c Both direct and order encoding.
c Var 'aux1086' order represents '0' with '10707'
c Var 'aux1086' direct represents '0' with '10707'
c Var 'aux1086' order represents '1' with '10708'
-10707 10708 0
c Var 'aux1086' direct represents '1' with '10709'
10707 -10708 10709 0
-10709 10708 0
-10709 -10707 0
c Var 'aux1086' direct represents '2' with '-10708'
10707 10709 -10708 0
c Encoding variable: aux1087 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00007_00008=4)))
c Both direct and order encoding.
c Var 'aux1087' order represents '0' with '10710'
c Var 'aux1087' direct represents '0' with '10710'
c Var 'aux1087' order represents '1' with '10711'
-10710 10711 0
c Var 'aux1087' direct represents '1' with '10712'
10710 -10711 10712 0
-10712 10711 0
-10712 -10710 0
c Var 'aux1087' direct represents '2' with '-10711'
10710 10712 -10711 0
c Encoding variable: aux1088 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00003_00008=4)))
c Both direct and order encoding.
c Var 'aux1088' order represents '0' with '10713'
c Var 'aux1088' direct represents '0' with '10713'
c Var 'aux1088' order represents '1' with '10714'
-10713 10714 0
c Var 'aux1088' direct represents '1' with '10715'
10713 -10714 10715 0
-10715 10714 0
-10715 -10713 0
c Var 'aux1088' direct represents '2' with '-10714'
10713 10715 -10714 0
c Encoding variable: aux1089 with domain: int(0..3) (representing constraint ((field_00005_00008=4) + aux1088))
c Both direct and order encoding.
c Var 'aux1089' order represents '0' with '10716'
c Var 'aux1089' direct represents '0' with '10716'
c Var 'aux1089' order represents '1' with '10717'
-10716 10717 0
c Var 'aux1089' direct represents '1' with '10718'
10716 -10717 10718 0
-10718 10717 0
-10718 -10716 0
c Var 'aux1089' order represents '2' with '10719'
-10717 10719 0
c Var 'aux1089' direct represents '2' with '10720'
10717 -10719 10720 0
-10720 10719 0
-10720 -10717 0
c Var 'aux1089' direct represents '3' with '-10719'
10716 10718 10720 -10719 0
c Encoding variable: aux1090 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00006_00008=5)))
c Both direct and order encoding.
c Var 'aux1090' order represents '0' with '10721'
c Var 'aux1090' direct represents '0' with '10721'
c Var 'aux1090' order represents '1' with '10722'
-10721 10722 0
c Var 'aux1090' direct represents '1' with '10723'
10721 -10722 10723 0
-10723 10722 0
-10723 -10721 0
c Var 'aux1090' direct represents '2' with '-10722'
10721 10723 -10722 0
c Encoding variable: aux1091 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux1091' order represents '0' with '10724'
c Var 'aux1091' direct represents '0' with '10724'
c Var 'aux1091' order represents '1' with '10725'
-10724 10725 0
c Var 'aux1091' direct represents '1' with '10726'
10724 -10725 10726 0
-10726 10725 0
-10726 -10724 0
c Var 'aux1091' direct represents '2' with '-10725'
10724 10726 -10725 0
c Encoding variable: aux1092 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00003_00008=5)))
c Both direct and order encoding.
c Var 'aux1092' order represents '0' with '10727'
c Var 'aux1092' direct represents '0' with '10727'
c Var 'aux1092' order represents '1' with '10728'
-10727 10728 0
c Var 'aux1092' direct represents '1' with '10729'
10727 -10728 10729 0
-10729 10728 0
-10729 -10727 0
c Var 'aux1092' direct represents '2' with '-10728'
10727 10729 -10728 0
c Encoding variable: aux1093 with domain: int(0..3) (representing constraint ((field_00005_00008=5) + aux1092))
c Both direct and order encoding.
c Var 'aux1093' order represents '0' with '10730'
c Var 'aux1093' direct represents '0' with '10730'
c Var 'aux1093' order represents '1' with '10731'
-10730 10731 0
c Var 'aux1093' direct represents '1' with '10732'
10730 -10731 10732 0
-10732 10731 0
-10732 -10730 0
c Var 'aux1093' order represents '2' with '10733'
-10731 10733 0
c Var 'aux1093' direct represents '2' with '10734'
10731 -10733 10734 0
-10734 10733 0
-10734 -10731 0
c Var 'aux1093' direct represents '3' with '-10733'
10730 10732 10734 -10733 0
c Encoding variable: aux1094 with domain: int(0..2) (representing constraint ((field_00009_00008=6) + (field_00006_00008=6)))
c Both direct and order encoding.
c Var 'aux1094' order represents '0' with '10735'
c Var 'aux1094' direct represents '0' with '10735'
c Var 'aux1094' order represents '1' with '10736'
-10735 10736 0
c Var 'aux1094' direct represents '1' with '10737'
10735 -10736 10737 0
-10737 10736 0
-10737 -10735 0
c Var 'aux1094' direct represents '2' with '-10736'
10735 10737 -10736 0
c Encoding variable: aux1095 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00007_00008=6)))
c Both direct and order encoding.
c Var 'aux1095' order represents '0' with '10738'
c Var 'aux1095' direct represents '0' with '10738'
c Var 'aux1095' order represents '1' with '10739'
-10738 10739 0
c Var 'aux1095' direct represents '1' with '10740'
10738 -10739 10740 0
-10740 10739 0
-10740 -10738 0
c Var 'aux1095' direct represents '2' with '-10739'
10738 10740 -10739 0
c Encoding variable: aux1096 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00003_00008=6)))
c Both direct and order encoding.
c Var 'aux1096' order represents '0' with '10741'
c Var 'aux1096' direct represents '0' with '10741'
c Var 'aux1096' order represents '1' with '10742'
-10741 10742 0
c Var 'aux1096' direct represents '1' with '10743'
10741 -10742 10743 0
-10743 10742 0
-10743 -10741 0
c Var 'aux1096' direct represents '2' with '-10742'
10741 10743 -10742 0
c Encoding variable: aux1097 with domain: int(0..3) (representing constraint ((field_00005_00008=6) + aux1096))
c Both direct and order encoding.
c Var 'aux1097' order represents '0' with '10744'
c Var 'aux1097' direct represents '0' with '10744'
c Var 'aux1097' order represents '1' with '10745'
-10744 10745 0
c Var 'aux1097' direct represents '1' with '10746'
10744 -10745 10746 0
-10746 10745 0
-10746 -10744 0
c Var 'aux1097' order represents '2' with '10747'
-10745 10747 0
c Var 'aux1097' direct represents '2' with '10748'
10745 -10747 10748 0
-10748 10747 0
-10748 -10745 0
c Var 'aux1097' direct represents '3' with '-10747'
10744 10746 10748 -10747 0
c Encoding variable: aux1098 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00006_00008=7)))
c Both direct and order encoding.
c Var 'aux1098' order represents '0' with '10749'
c Var 'aux1098' direct represents '0' with '10749'
c Var 'aux1098' order represents '1' with '10750'
-10749 10750 0
c Var 'aux1098' direct represents '1' with '10751'
10749 -10750 10751 0
-10751 10750 0
-10751 -10749 0
c Var 'aux1098' direct represents '2' with '-10750'
10749 10751 -10750 0
c Encoding variable: aux1099 with domain: int(1..2) (representing constraint ((field_00001_00008=7) + (field_00002_00008=7)))
c Var 'aux1099' direct represents '1' with '-10752'
c Var 'aux1099' direct represents '2' with '10752'
c Var 'aux1099' order represents '2' with '1'
c Var 'aux1099' order represents '1' with '-10752'
c Encoding variable: aux1100 with domain: int(1..3) (representing constraint ((field_00008_00008=7) + aux1099))
c Both direct and order encoding.
c Var 'aux1100' order represents '1' with '10753'
c Var 'aux1100' direct represents '1' with '10753'
c Var 'aux1100' order represents '2' with '10754'
-10753 10754 0
c Var 'aux1100' direct represents '2' with '10755'
10753 -10754 10755 0
-10755 10754 0
-10755 -10753 0
c Var 'aux1100' direct represents '3' with '-10754'
10753 10755 -10754 0
c Encoding variable: aux1101 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00005_00008=7)))
c Both direct and order encoding.
c Var 'aux1101' order represents '0' with '10756'
c Var 'aux1101' direct represents '0' with '10756'
c Var 'aux1101' order represents '1' with '10757'
-10756 10757 0
c Var 'aux1101' direct represents '1' with '10758'
10756 -10757 10758 0
-10758 10757 0
-10758 -10756 0
c Var 'aux1101' direct represents '2' with '-10757'
10756 10758 -10757 0
c Encoding variable: aux1102 with domain: int(0..3) (representing constraint ((field_00007_00008=7) + aux1101))
c Both direct and order encoding.
c Var 'aux1102' order represents '0' with '10759'
c Var 'aux1102' direct represents '0' with '10759'
c Var 'aux1102' order represents '1' with '10760'
-10759 10760 0
c Var 'aux1102' direct represents '1' with '10761'
10759 -10760 10761 0
-10761 10760 0
-10761 -10759 0
c Var 'aux1102' order represents '2' with '10762'
-10760 10762 0
c Var 'aux1102' direct represents '2' with '10763'
10760 -10762 10763 0
-10763 10762 0
-10763 -10760 0
c Var 'aux1102' direct represents '3' with '-10762'
10759 10761 10763 -10762 0
c Encoding variable: aux1103 with domain: int(0..2) (representing constraint ((field_00009_00008=8) + (field_00006_00008=8)))
c Both direct and order encoding.
c Var 'aux1103' order represents '0' with '10764'
c Var 'aux1103' direct represents '0' with '10764'
c Var 'aux1103' order represents '1' with '10765'
-10764 10765 0
c Var 'aux1103' direct represents '1' with '10766'
10764 -10765 10766 0
-10766 10765 0
-10766 -10764 0
c Var 'aux1103' direct represents '2' with '-10765'
10764 10766 -10765 0
c Encoding variable: aux1104 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00007_00008=8)))
c Both direct and order encoding.
c Var 'aux1104' order represents '0' with '10767'
c Var 'aux1104' direct represents '0' with '10767'
c Var 'aux1104' order represents '1' with '10768'
-10767 10768 0
c Var 'aux1104' direct represents '1' with '10769'
10767 -10768 10769 0
-10769 10768 0
-10769 -10767 0
c Var 'aux1104' direct represents '2' with '-10768'
10767 10769 -10768 0
c Encoding variable: aux1105 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00003_00008=8)))
c Both direct and order encoding.
c Var 'aux1105' order represents '0' with '10770'
c Var 'aux1105' direct represents '0' with '10770'
c Var 'aux1105' order represents '1' with '10771'
-10770 10771 0
c Var 'aux1105' direct represents '1' with '10772'
10770 -10771 10772 0
-10772 10771 0
-10772 -10770 0
c Var 'aux1105' direct represents '2' with '-10771'
10770 10772 -10771 0
c Encoding variable: aux1106 with domain: int(0..3) (representing constraint ((field_00005_00008=8) + aux1105))
c Both direct and order encoding.
c Var 'aux1106' order represents '0' with '10773'
c Var 'aux1106' direct represents '0' with '10773'
c Var 'aux1106' order represents '1' with '10774'
-10773 10774 0
c Var 'aux1106' direct represents '1' with '10775'
10773 -10774 10775 0
-10775 10774 0
-10775 -10773 0
c Var 'aux1106' order represents '2' with '10776'
-10774 10776 0
c Var 'aux1106' direct represents '2' with '10777'
10774 -10776 10777 0
-10777 10776 0
-10777 -10774 0
c Var 'aux1106' direct represents '3' with '-10776'
10773 10775 10777 -10776 0
c Encoding variable: aux1107 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00006_00008=9)))
c Both direct and order encoding.
c Var 'aux1107' order represents '0' with '10778'
c Var 'aux1107' direct represents '0' with '10778'
c Var 'aux1107' order represents '1' with '10779'
-10778 10779 0
c Var 'aux1107' direct represents '1' with '10780'
10778 -10779 10780 0
-10780 10779 0
-10780 -10778 0
c Var 'aux1107' direct represents '2' with '-10779'
10778 10780 -10779 0
c Encoding variable: aux1108 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux1108' order represents '0' with '10781'
c Var 'aux1108' direct represents '0' with '10781'
c Var 'aux1108' order represents '1' with '10782'
-10781 10782 0
c Var 'aux1108' direct represents '1' with '10783'
10781 -10782 10783 0
-10783 10782 0
-10783 -10781 0
c Var 'aux1108' direct represents '2' with '-10782'
10781 10783 -10782 0
c Encoding variable: aux1109 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00003_00008=9)))
c Both direct and order encoding.
c Var 'aux1109' order represents '0' with '10784'
c Var 'aux1109' direct represents '0' with '10784'
c Var 'aux1109' order represents '1' with '10785'
-10784 10785 0
c Var 'aux1109' direct represents '1' with '10786'
10784 -10785 10786 0
-10786 10785 0
-10786 -10784 0
c Var 'aux1109' direct represents '2' with '-10785'
10784 10786 -10785 0
c Encoding variable: aux1110 with domain: int(0..3) (representing constraint ((field_00005_00008=9) + aux1109))
c Both direct and order encoding.
c Var 'aux1110' order represents '0' with '10787'
c Var 'aux1110' direct represents '0' with '10787'
c Var 'aux1110' order represents '1' with '10788'
-10787 10788 0
c Var 'aux1110' direct represents '1' with '10789'
10787 -10788 10789 0
-10789 10788 0
-10789 -10787 0
c Var 'aux1110' order represents '2' with '10790'
-10788 10790 0
c Var 'aux1110' direct represents '2' with '10791'
10788 -10790 10791 0
-10791 10790 0
-10791 -10788 0
c Var 'aux1110' direct represents '3' with '-10790'
10787 10789 10791 -10790 0
c Encoding variable: aux1111 with domain: int(0..2) (representing constraint ((field_00004_00009=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux1111' order represents '0' with '10792'
c Var 'aux1111' direct represents '0' with '10792'
c Var 'aux1111' order represents '1' with '10793'
-10792 10793 0
c Var 'aux1111' direct represents '1' with '10794'
10792 -10793 10794 0
-10794 10793 0
-10794 -10792 0
c Var 'aux1111' direct represents '2' with '-10793'
10792 10794 -10793 0
c Encoding variable: aux1112 with domain: int(0..2) (representing constraint ((field_00001_00009=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux1112' order represents '0' with '10795'
c Var 'aux1112' direct represents '0' with '10795'
c Var 'aux1112' order represents '1' with '10796'
-10795 10796 0
c Var 'aux1112' direct represents '1' with '10797'
10795 -10796 10797 0
-10797 10796 0
-10797 -10795 0
c Var 'aux1112' direct represents '2' with '-10796'
10795 10797 -10796 0
c Encoding variable: aux1113 with domain: int(0..2) (representing constraint ((field_00008_00009=1) + (field_00003_00009=1)))
c Both direct and order encoding.
c Var 'aux1113' order represents '0' with '10798'
c Var 'aux1113' direct represents '0' with '10798'
c Var 'aux1113' order represents '1' with '10799'
-10798 10799 0
c Var 'aux1113' direct represents '1' with '10800'
10798 -10799 10800 0
-10800 10799 0
-10800 -10798 0
c Var 'aux1113' direct represents '2' with '-10799'
10798 10800 -10799 0
c Encoding variable: aux1114 with domain: int(0..3) (representing constraint ((field_00002_00009=1) + aux1113))
c Both direct and order encoding.
c Var 'aux1114' order represents '0' with '10801'
c Var 'aux1114' direct represents '0' with '10801'
c Var 'aux1114' order represents '1' with '10802'
-10801 10802 0
c Var 'aux1114' direct represents '1' with '10803'
10801 -10802 10803 0
-10803 10802 0
-10803 -10801 0
c Var 'aux1114' order represents '2' with '10804'
-10802 10804 0
c Var 'aux1114' direct represents '2' with '10805'
10802 -10804 10805 0
-10805 10804 0
-10805 -10802 0
c Var 'aux1114' direct represents '3' with '-10804'
10801 10803 10805 -10804 0
c Encoding variable: aux1115 with domain: int(0..2) (representing constraint ((field_00004_00009=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux1115' order represents '0' with '10806'
c Var 'aux1115' direct represents '0' with '10806'
c Var 'aux1115' order represents '1' with '10807'
-10806 10807 0
c Var 'aux1115' direct represents '1' with '10808'
10806 -10807 10808 0
-10808 10807 0
-10808 -10806 0
c Var 'aux1115' direct represents '2' with '-10807'
10806 10808 -10807 0
c Encoding variable: aux1116 with domain: int(0..2) (representing constraint ((field_00001_00009=2) + (field_00009_00009=2)))
c Both direct and order encoding.
c Var 'aux1116' order represents '0' with '10809'
c Var 'aux1116' direct represents '0' with '10809'
c Var 'aux1116' order represents '1' with '10810'
-10809 10810 0
c Var 'aux1116' direct represents '1' with '10811'
10809 -10810 10811 0
-10811 10810 0
-10811 -10809 0
c Var 'aux1116' direct represents '2' with '-10810'
10809 10811 -10810 0
c Encoding variable: aux1117 with domain: int(1..2) (representing constraint ((field_00008_00009=2) + (field_00005_00009=2)))
c Var 'aux1117' direct represents '1' with '-10812'
c Var 'aux1117' direct represents '2' with '10812'
c Var 'aux1117' order represents '2' with '1'
c Var 'aux1117' order represents '1' with '-10812'
c Encoding variable: aux1118 with domain: int(1..3) (representing constraint ((field_00003_00009=2) + aux1117))
c Both direct and order encoding.
c Var 'aux1118' order represents '1' with '10813'
c Var 'aux1118' direct represents '1' with '10813'
c Var 'aux1118' order represents '2' with '10814'
-10813 10814 0
c Var 'aux1118' direct represents '2' with '10815'
10813 -10814 10815 0
-10815 10814 0
-10815 -10813 0
c Var 'aux1118' direct represents '3' with '-10814'
10813 10815 -10814 0
c Encoding variable: aux1119 with domain: int(1..4) (representing constraint ((field_00002_00009=2) + aux1118))
c Both direct and order encoding.
c Var 'aux1119' order represents '1' with '10816'
c Var 'aux1119' direct represents '1' with '10816'
c Var 'aux1119' order represents '2' with '10817'
-10816 10817 0
c Var 'aux1119' direct represents '2' with '10818'
10816 -10817 10818 0
-10818 10817 0
-10818 -10816 0
c Var 'aux1119' order represents '3' with '10819'
-10817 10819 0
c Var 'aux1119' direct represents '3' with '10820'
10817 -10819 10820 0
-10820 10819 0
-10820 -10817 0
c Var 'aux1119' direct represents '4' with '-10819'
10816 10818 10820 -10819 0
c Encoding variable: aux1120 with domain: int(0..2) (representing constraint ((field_00004_00009=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux1120' order represents '0' with '10821'
c Var 'aux1120' direct represents '0' with '10821'
c Var 'aux1120' order represents '1' with '10822'
-10821 10822 0
c Var 'aux1120' direct represents '1' with '10823'
10821 -10822 10823 0
-10823 10822 0
-10823 -10821 0
c Var 'aux1120' direct represents '2' with '-10822'
10821 10823 -10822 0
c Encoding variable: aux1121 with domain: int(0..2) (representing constraint ((field_00001_00009=3) + (field_00009_00009=3)))
c Both direct and order encoding.
c Var 'aux1121' order represents '0' with '10824'
c Var 'aux1121' direct represents '0' with '10824'
c Var 'aux1121' order represents '1' with '10825'
-10824 10825 0
c Var 'aux1121' direct represents '1' with '10826'
10824 -10825 10826 0
-10826 10825 0
-10826 -10824 0
c Var 'aux1121' direct represents '2' with '-10825'
10824 10826 -10825 0
c Encoding variable: aux1122 with domain: int(0..2) (representing constraint ((field_00008_00009=3) + (field_00003_00009=3)))
c Both direct and order encoding.
c Var 'aux1122' order represents '0' with '10827'
c Var 'aux1122' direct represents '0' with '10827'
c Var 'aux1122' order represents '1' with '10828'
-10827 10828 0
c Var 'aux1122' direct represents '1' with '10829'
10827 -10828 10829 0
-10829 10828 0
-10829 -10827 0
c Var 'aux1122' direct represents '2' with '-10828'
10827 10829 -10828 0
c Encoding variable: aux1123 with domain: int(0..3) (representing constraint ((field_00002_00009=3) + aux1122))
c Both direct and order encoding.
c Var 'aux1123' order represents '0' with '10830'
c Var 'aux1123' direct represents '0' with '10830'
c Var 'aux1123' order represents '1' with '10831'
-10830 10831 0
c Var 'aux1123' direct represents '1' with '10832'
10830 -10831 10832 0
-10832 10831 0
-10832 -10830 0
c Var 'aux1123' order represents '2' with '10833'
-10831 10833 0
c Var 'aux1123' direct represents '2' with '10834'
10831 -10833 10834 0
-10834 10833 0
-10834 -10831 0
c Var 'aux1123' direct represents '3' with '-10833'
10830 10832 10834 -10833 0
c Encoding variable: aux1124 with domain: int(0..2) (representing constraint ((field_00004_00009=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux1124' order represents '0' with '10835'
c Var 'aux1124' direct represents '0' with '10835'
c Var 'aux1124' order represents '1' with '10836'
-10835 10836 0
c Var 'aux1124' direct represents '1' with '10837'
10835 -10836 10837 0
-10837 10836 0
-10837 -10835 0
c Var 'aux1124' direct represents '2' with '-10836'
10835 10837 -10836 0
c Encoding variable: aux1125 with domain: int(0..2) (representing constraint ((field_00001_00009=4) + (field_00009_00009=4)))
c Both direct and order encoding.
c Var 'aux1125' order represents '0' with '10838'
c Var 'aux1125' direct represents '0' with '10838'
c Var 'aux1125' order represents '1' with '10839'
-10838 10839 0
c Var 'aux1125' direct represents '1' with '10840'
10838 -10839 10840 0
-10840 10839 0
-10840 -10838 0
c Var 'aux1125' direct represents '2' with '-10839'
10838 10840 -10839 0
c Encoding variable: aux1126 with domain: int(0..2) (representing constraint ((field_00008_00009=4) + (field_00003_00009=4)))
c Both direct and order encoding.
c Var 'aux1126' order represents '0' with '10841'
c Var 'aux1126' direct represents '0' with '10841'
c Var 'aux1126' order represents '1' with '10842'
-10841 10842 0
c Var 'aux1126' direct represents '1' with '10843'
10841 -10842 10843 0
-10843 10842 0
-10843 -10841 0
c Var 'aux1126' direct represents '2' with '-10842'
10841 10843 -10842 0
c Encoding variable: aux1127 with domain: int(0..3) (representing constraint ((field_00002_00009=4) + aux1126))
c Both direct and order encoding.
c Var 'aux1127' order represents '0' with '10844'
c Var 'aux1127' direct represents '0' with '10844'
c Var 'aux1127' order represents '1' with '10845'
-10844 10845 0
c Var 'aux1127' direct represents '1' with '10846'
10844 -10845 10846 0
-10846 10845 0
-10846 -10844 0
c Var 'aux1127' order represents '2' with '10847'
-10845 10847 0
c Var 'aux1127' direct represents '2' with '10848'
10845 -10847 10848 0
-10848 10847 0
-10848 -10845 0
c Var 'aux1127' direct represents '3' with '-10847'
10844 10846 10848 -10847 0
c Encoding variable: aux1128 with domain: int(0..2) (representing constraint ((field_00004_00009=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux1128' order represents '0' with '10849'
c Var 'aux1128' direct represents '0' with '10849'
c Var 'aux1128' order represents '1' with '10850'
-10849 10850 0
c Var 'aux1128' direct represents '1' with '10851'
10849 -10850 10851 0
-10851 10850 0
-10851 -10849 0
c Var 'aux1128' direct represents '2' with '-10850'
10849 10851 -10850 0
c Encoding variable: aux1129 with domain: int(0..2) (representing constraint ((field_00001_00009=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux1129' order represents '0' with '10852'
c Var 'aux1129' direct represents '0' with '10852'
c Var 'aux1129' order represents '1' with '10853'
-10852 10853 0
c Var 'aux1129' direct represents '1' with '10854'
10852 -10853 10854 0
-10854 10853 0
-10854 -10852 0
c Var 'aux1129' direct represents '2' with '-10853'
10852 10854 -10853 0
c Encoding variable: aux1130 with domain: int(0..2) (representing constraint ((field_00008_00009=5) + (field_00003_00009=5)))
c Both direct and order encoding.
c Var 'aux1130' order represents '0' with '10855'
c Var 'aux1130' direct represents '0' with '10855'
c Var 'aux1130' order represents '1' with '10856'
-10855 10856 0
c Var 'aux1130' direct represents '1' with '10857'
10855 -10856 10857 0
-10857 10856 0
-10857 -10855 0
c Var 'aux1130' direct represents '2' with '-10856'
10855 10857 -10856 0
c Encoding variable: aux1131 with domain: int(0..3) (representing constraint ((field_00002_00009=5) + aux1130))
c Both direct and order encoding.
c Var 'aux1131' order represents '0' with '10858'
c Var 'aux1131' direct represents '0' with '10858'
c Var 'aux1131' order represents '1' with '10859'
-10858 10859 0
c Var 'aux1131' direct represents '1' with '10860'
10858 -10859 10860 0
-10860 10859 0
-10860 -10858 0
c Var 'aux1131' order represents '2' with '10861'
-10859 10861 0
c Var 'aux1131' direct represents '2' with '10862'
10859 -10861 10862 0
-10862 10861 0
-10862 -10859 0
c Var 'aux1131' direct represents '3' with '-10861'
10858 10860 10862 -10861 0
c Encoding variable: aux1132 with domain: int(0..2) (representing constraint ((field_00004_00009=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux1132' order represents '0' with '10863'
c Var 'aux1132' direct represents '0' with '10863'
c Var 'aux1132' order represents '1' with '10864'
-10863 10864 0
c Var 'aux1132' direct represents '1' with '10865'
10863 -10864 10865 0
-10865 10864 0
-10865 -10863 0
c Var 'aux1132' direct represents '2' with '-10864'
10863 10865 -10864 0
c Encoding variable: aux1133 with domain: int(0..2) (representing constraint ((field_00001_00009=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux1133' order represents '0' with '10866'
c Var 'aux1133' direct represents '0' with '10866'
c Var 'aux1133' order represents '1' with '10867'
-10866 10867 0
c Var 'aux1133' direct represents '1' with '10868'
10866 -10867 10868 0
-10868 10867 0
-10868 -10866 0
c Var 'aux1133' direct represents '2' with '-10867'
10866 10868 -10867 0
c Encoding variable: aux1134 with domain: int(0..2) (representing constraint ((field_00008_00009=6) + (field_00003_00009=6)))
c Both direct and order encoding.
c Var 'aux1134' order represents '0' with '10869'
c Var 'aux1134' direct represents '0' with '10869'
c Var 'aux1134' order represents '1' with '10870'
-10869 10870 0
c Var 'aux1134' direct represents '1' with '10871'
10869 -10870 10871 0
-10871 10870 0
-10871 -10869 0
c Var 'aux1134' direct represents '2' with '-10870'
10869 10871 -10870 0
c Encoding variable: aux1135 with domain: int(0..3) (representing constraint ((field_00002_00009=6) + aux1134))
c Both direct and order encoding.
c Var 'aux1135' order represents '0' with '10872'
c Var 'aux1135' direct represents '0' with '10872'
c Var 'aux1135' order represents '1' with '10873'
-10872 10873 0
c Var 'aux1135' direct represents '1' with '10874'
10872 -10873 10874 0
-10874 10873 0
-10874 -10872 0
c Var 'aux1135' order represents '2' with '10875'
-10873 10875 0
c Var 'aux1135' direct represents '2' with '10876'
10873 -10875 10876 0
-10876 10875 0
-10876 -10873 0
c Var 'aux1135' direct represents '3' with '-10875'
10872 10874 10876 -10875 0
c Encoding variable: aux1136 with domain: int(0..2) (representing constraint ((field_00004_00009=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux1136' order represents '0' with '10877'
c Var 'aux1136' direct represents '0' with '10877'
c Var 'aux1136' order represents '1' with '10878'
-10877 10878 0
c Var 'aux1136' direct represents '1' with '10879'
10877 -10878 10879 0
-10879 10878 0
-10879 -10877 0
c Var 'aux1136' direct represents '2' with '-10878'
10877 10879 -10878 0
c Encoding variable: aux1137 with domain: int(0..2) (representing constraint ((field_00001_00009=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux1137' order represents '0' with '10880'
c Var 'aux1137' direct represents '0' with '10880'
c Var 'aux1137' order represents '1' with '10881'
-10880 10881 0
c Var 'aux1137' direct represents '1' with '10882'
10880 -10881 10882 0
-10882 10881 0
-10882 -10880 0
c Var 'aux1137' direct represents '2' with '-10881'
10880 10882 -10881 0
c Encoding variable: aux1138 with domain: int(1..2) (representing constraint ((field_00008_00009=7) + (field_00007_00009=7)))
c Var 'aux1138' direct represents '1' with '-10883'
c Var 'aux1138' direct represents '2' with '10883'
c Var 'aux1138' order represents '2' with '1'
c Var 'aux1138' order represents '1' with '-10883'
c Encoding variable: aux1139 with domain: int(1..3) (representing constraint ((field_00003_00009=7) + aux1138))
c Both direct and order encoding.
c Var 'aux1139' order represents '1' with '10884'
c Var 'aux1139' direct represents '1' with '10884'
c Var 'aux1139' order represents '2' with '10885'
-10884 10885 0
c Var 'aux1139' direct represents '2' with '10886'
10884 -10885 10886 0
-10886 10885 0
-10886 -10884 0
c Var 'aux1139' direct represents '3' with '-10885'
10884 10886 -10885 0
c Encoding variable: aux1140 with domain: int(1..4) (representing constraint ((field_00002_00009=7) + aux1139))
c Both direct and order encoding.
c Var 'aux1140' order represents '1' with '10887'
c Var 'aux1140' direct represents '1' with '10887'
c Var 'aux1140' order represents '2' with '10888'
-10887 10888 0
c Var 'aux1140' direct represents '2' with '10889'
10887 -10888 10889 0
-10889 10888 0
-10889 -10887 0
c Var 'aux1140' order represents '3' with '10890'
-10888 10890 0
c Var 'aux1140' direct represents '3' with '10891'
10888 -10890 10891 0
-10891 10890 0
-10891 -10888 0
c Var 'aux1140' direct represents '4' with '-10890'
10887 10889 10891 -10890 0
c Encoding variable: aux1141 with domain: int(0..2) (representing constraint ((field_00004_00009=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux1141' order represents '0' with '10892'
c Var 'aux1141' direct represents '0' with '10892'
c Var 'aux1141' order represents '1' with '10893'
-10892 10893 0
c Var 'aux1141' direct represents '1' with '10894'
10892 -10893 10894 0
-10894 10893 0
-10894 -10892 0
c Var 'aux1141' direct represents '2' with '-10893'
10892 10894 -10893 0
c Encoding variable: aux1142 with domain: int(0..2) (representing constraint ((field_00001_00009=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux1142' order represents '0' with '10895'
c Var 'aux1142' direct represents '0' with '10895'
c Var 'aux1142' order represents '1' with '10896'
-10895 10896 0
c Var 'aux1142' direct represents '1' with '10897'
10895 -10896 10897 0
-10897 10896 0
-10897 -10895 0
c Var 'aux1142' direct represents '2' with '-10896'
10895 10897 -10896 0
c Encoding variable: aux1143 with domain: int(0..2) (representing constraint ((field_00008_00009=8) + (field_00003_00009=8)))
c Both direct and order encoding.
c Var 'aux1143' order represents '0' with '10898'
c Var 'aux1143' direct represents '0' with '10898'
c Var 'aux1143' order represents '1' with '10899'
-10898 10899 0
c Var 'aux1143' direct represents '1' with '10900'
10898 -10899 10900 0
-10900 10899 0
-10900 -10898 0
c Var 'aux1143' direct represents '2' with '-10899'
10898 10900 -10899 0
c Encoding variable: aux1144 with domain: int(0..3) (representing constraint ((field_00002_00009=8) + aux1143))
c Both direct and order encoding.
c Var 'aux1144' order represents '0' with '10901'
c Var 'aux1144' direct represents '0' with '10901'
c Var 'aux1144' order represents '1' with '10902'
-10901 10902 0
c Var 'aux1144' direct represents '1' with '10903'
10901 -10902 10903 0
-10903 10902 0
-10903 -10901 0
c Var 'aux1144' order represents '2' with '10904'
-10902 10904 0
c Var 'aux1144' direct represents '2' with '10905'
10902 -10904 10905 0
-10905 10904 0
-10905 -10902 0
c Var 'aux1144' direct represents '3' with '-10904'
10901 10903 10905 -10904 0
c Encoding variable: aux1145 with domain: int(0..2) (representing constraint ((field_00004_00009=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux1145' order represents '0' with '10906'
c Var 'aux1145' direct represents '0' with '10906'
c Var 'aux1145' order represents '1' with '10907'
-10906 10907 0
c Var 'aux1145' direct represents '1' with '10908'
10906 -10907 10908 0
-10908 10907 0
-10908 -10906 0
c Var 'aux1145' direct represents '2' with '-10907'
10906 10908 -10907 0
c Encoding variable: aux1146 with domain: int(0..2) (representing constraint ((field_00001_00009=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux1146' order represents '0' with '10909'
c Var 'aux1146' direct represents '0' with '10909'
c Var 'aux1146' order represents '1' with '10910'
-10909 10910 0
c Var 'aux1146' direct represents '1' with '10911'
10909 -10910 10911 0
-10911 10910 0
-10911 -10909 0
c Var 'aux1146' direct represents '2' with '-10910'
10909 10911 -10910 0
c Encoding variable: aux1147 with domain: int(0..2) (representing constraint ((field_00008_00009=9) + (field_00003_00009=9)))
c Both direct and order encoding.
c Var 'aux1147' order represents '0' with '10912'
c Var 'aux1147' direct represents '0' with '10912'
c Var 'aux1147' order represents '1' with '10913'
-10912 10913 0
c Var 'aux1147' direct represents '1' with '10914'
10912 -10913 10914 0
-10914 10913 0
-10914 -10912 0
c Var 'aux1147' direct represents '2' with '-10913'
10912 10914 -10913 0
c Encoding variable: aux1148 with domain: int(0..3) (representing constraint ((field_00002_00009=9) + aux1147))
c Both direct and order encoding.
c Var 'aux1148' order represents '0' with '10915'
c Var 'aux1148' direct represents '0' with '10915'
c Var 'aux1148' order represents '1' with '10916'
-10915 10916 0
c Var 'aux1148' direct represents '1' with '10917'
10915 -10916 10917 0
-10917 10916 0
-10917 -10915 0
c Var 'aux1148' order represents '2' with '10918'
-10916 10918 0
c Var 'aux1148' direct represents '2' with '10919'
10916 -10918 10919 0
-10919 10918 0
-10919 -10916 0
c Var 'aux1148' direct represents '3' with '-10918'
10915 10917 10919 -10918 0
c Encoding variable: aux1149 with domain: bool (representing constraint (shift(true, -1) + aux0))
c Var 'aux1149' direct represents '0' with '-10920'
c Var 'aux1149' direct represents '1' with '10920'
c Var 'aux1149' order represents '1' with '1'
c Var 'aux1149' order represents '0' with '-10920'
c Encoding variable: aux1150 with domain: int(0..2) (representing constraint (aux7 + aux1149))
c Both direct and order encoding.
c Var 'aux1150' order represents '0' with '10921'
c Var 'aux1150' direct represents '0' with '10921'
c Var 'aux1150' order represents '1' with '10922'
-10921 10922 0
c Var 'aux1150' direct represents '1' with '10923'
10921 -10922 10923 0
-10923 10922 0
-10923 -10921 0
c Var 'aux1150' direct represents '2' with '-10922'
10921 10923 -10922 0
c Encoding variable: aux1151 with domain: int(0..2) (representing constraint (aux2 + aux6))
c Both direct and order encoding.
c Var 'aux1151' order represents '0' with '10924'
c Var 'aux1151' direct represents '0' with '10924'
c Var 'aux1151' order represents '1' with '10925'
-10924 10925 0
c Var 'aux1151' direct represents '1' with '10926'
10924 -10925 10926 0
-10926 10925 0
-10926 -10924 0
c Var 'aux1151' direct represents '2' with '-10925'
10924 10926 -10925 0
c Encoding variable: aux1152 with domain: int(0..2) (representing constraint (aux5 + aux3))
c Both direct and order encoding.
c Var 'aux1152' order represents '0' with '10927'
c Var 'aux1152' direct represents '0' with '10927'
c Var 'aux1152' order represents '1' with '10928'
-10927 10928 0
c Var 'aux1152' direct represents '1' with '10929'
10927 -10928 10929 0
-10929 10928 0
-10929 -10927 0
c Var 'aux1152' direct represents '2' with '-10928'
10927 10929 -10928 0
c Encoding variable: aux1153 with domain: int(0..2) (representing constraint (aux4 + aux1))
c Both direct and order encoding.
c Var 'aux1153' order represents '0' with '10930'
c Var 'aux1153' direct represents '0' with '10930'
c Var 'aux1153' order represents '1' with '10931'
-10930 10931 0
c Var 'aux1153' direct represents '1' with '10932'
10930 -10931 10932 0
-10932 10931 0
-10932 -10930 0
c Var 'aux1153' direct represents '2' with '-10931'
10930 10932 -10931 0
c Encoding variable: aux1154 with domain: int(0..4) (representing constraint (aux1151 + aux1153))
c Both direct and order encoding.
c Var 'aux1154' order represents '0' with '10933'
c Var 'aux1154' direct represents '0' with '10933'
c Var 'aux1154' order represents '1' with '10934'
-10933 10934 0
c Var 'aux1154' direct represents '1' with '10935'
10933 -10934 10935 0
-10935 10934 0
-10935 -10933 0
c Var 'aux1154' order represents '2' with '10936'
-10934 10936 0
c Var 'aux1154' direct represents '2' with '10937'
10934 -10936 10937 0
-10937 10936 0
-10937 -10934 0
c Var 'aux1154' order represents '3' with '10938'
-10936 10938 0
c Var 'aux1154' direct represents '3' with '10939'
10936 -10938 10939 0
-10939 10938 0
-10939 -10936 0
c Var 'aux1154' direct represents '4' with '-10938'
10933 10935 10937 10939 -10938 0
c Encoding variable: aux1155 with domain: int(0..4) (representing constraint (aux1150 + aux1152))
c Both direct and order encoding.
c Var 'aux1155' order represents '0' with '10940'
c Var 'aux1155' direct represents '0' with '10940'
c Var 'aux1155' order represents '1' with '10941'
-10940 10941 0
c Var 'aux1155' direct represents '1' with '10942'
10940 -10941 10942 0
-10942 10941 0
-10942 -10940 0
c Var 'aux1155' order represents '2' with '10943'
-10941 10943 0
c Var 'aux1155' direct represents '2' with '10944'
10941 -10943 10944 0
-10944 10943 0
-10944 -10941 0
c Var 'aux1155' order represents '3' with '10945'
-10943 10945 0
c Var 'aux1155' direct represents '3' with '10946'
10943 -10945 10946 0
-10946 10945 0
-10946 -10943 0
c Var 'aux1155' direct represents '4' with '-10945'
10940 10942 10944 10946 -10945 0
c Encoding variable: aux1156 with domain: bool (representing constraint (shift(true, -1) + aux8))
c Var 'aux1156' direct represents '0' with '-10947'
c Var 'aux1156' direct represents '1' with '10947'
c Var 'aux1156' order represents '1' with '1'
c Var 'aux1156' order represents '0' with '-10947'
c Encoding variable: aux1157 with domain: int(0..2) (representing constraint (aux15 + aux1156))
c Both direct and order encoding.
c Var 'aux1157' order represents '0' with '10948'
c Var 'aux1157' direct represents '0' with '10948'
c Var 'aux1157' order represents '1' with '10949'
-10948 10949 0
c Var 'aux1157' direct represents '1' with '10950'
10948 -10949 10950 0
-10950 10949 0
-10950 -10948 0
c Var 'aux1157' direct represents '2' with '-10949'
10948 10950 -10949 0
c Encoding variable: aux1158 with domain: int(0..2) (representing constraint (aux10 + aux14))
c Both direct and order encoding.
c Var 'aux1158' order represents '0' with '10951'
c Var 'aux1158' direct represents '0' with '10951'
c Var 'aux1158' order represents '1' with '10952'
-10951 10952 0
c Var 'aux1158' direct represents '1' with '10953'
10951 -10952 10953 0
-10953 10952 0
-10953 -10951 0
c Var 'aux1158' direct represents '2' with '-10952'
10951 10953 -10952 0
c Encoding variable: aux1159 with domain: int(0..2) (representing constraint (aux13 + aux11))
c Both direct and order encoding.
c Var 'aux1159' order represents '0' with '10954'
c Var 'aux1159' direct represents '0' with '10954'
c Var 'aux1159' order represents '1' with '10955'
-10954 10955 0
c Var 'aux1159' direct represents '1' with '10956'
10954 -10955 10956 0
-10956 10955 0
-10956 -10954 0
c Var 'aux1159' direct represents '2' with '-10955'
10954 10956 -10955 0
c Encoding variable: aux1160 with domain: int(0..2) (representing constraint (aux12 + aux9))
c Both direct and order encoding.
c Var 'aux1160' order represents '0' with '10957'
c Var 'aux1160' direct represents '0' with '10957'
c Var 'aux1160' order represents '1' with '10958'
-10957 10958 0
c Var 'aux1160' direct represents '1' with '10959'
10957 -10958 10959 0
-10959 10958 0
-10959 -10957 0
c Var 'aux1160' direct represents '2' with '-10958'
10957 10959 -10958 0
c Encoding variable: aux1161 with domain: int(0..4) (representing constraint (aux1158 + aux1160))
c Both direct and order encoding.
c Var 'aux1161' order represents '0' with '10960'
c Var 'aux1161' direct represents '0' with '10960'
c Var 'aux1161' order represents '1' with '10961'
-10960 10961 0
c Var 'aux1161' direct represents '1' with '10962'
10960 -10961 10962 0
-10962 10961 0
-10962 -10960 0
c Var 'aux1161' order represents '2' with '10963'
-10961 10963 0
c Var 'aux1161' direct represents '2' with '10964'
10961 -10963 10964 0
-10964 10963 0
-10964 -10961 0
c Var 'aux1161' order represents '3' with '10965'
-10963 10965 0
c Var 'aux1161' direct represents '3' with '10966'
10963 -10965 10966 0
-10966 10965 0
-10966 -10963 0
c Var 'aux1161' direct represents '4' with '-10965'
10960 10962 10964 10966 -10965 0
c Encoding variable: aux1162 with domain: int(0..4) (representing constraint (aux1157 + aux1159))
c Both direct and order encoding.
c Var 'aux1162' order represents '0' with '10967'
c Var 'aux1162' direct represents '0' with '10967'
c Var 'aux1162' order represents '1' with '10968'
-10967 10968 0
c Var 'aux1162' direct represents '1' with '10969'
10967 -10968 10969 0
-10969 10968 0
-10969 -10967 0
c Var 'aux1162' order represents '2' with '10970'
-10968 10970 0
c Var 'aux1162' direct represents '2' with '10971'
10968 -10970 10971 0
-10971 10970 0
-10971 -10968 0
c Var 'aux1162' order represents '3' with '10972'
-10970 10972 0
c Var 'aux1162' direct represents '3' with '10973'
10970 -10972 10973 0
-10973 10972 0
-10973 -10970 0
c Var 'aux1162' direct represents '4' with '-10972'
10967 10969 10971 10973 -10972 0
c Encoding variable: aux1163 with domain: bool (representing constraint (shift(true, -1) + aux16))
c Var 'aux1163' direct represents '0' with '-10974'
c Var 'aux1163' direct represents '1' with '10974'
c Var 'aux1163' order represents '1' with '1'
c Var 'aux1163' order represents '0' with '-10974'
c Encoding variable: aux1164 with domain: int(0..2) (representing constraint (aux23 + aux1163))
c Both direct and order encoding.
c Var 'aux1164' order represents '0' with '10975'
c Var 'aux1164' direct represents '0' with '10975'
c Var 'aux1164' order represents '1' with '10976'
-10975 10976 0
c Var 'aux1164' direct represents '1' with '10977'
10975 -10976 10977 0
-10977 10976 0
-10977 -10975 0
c Var 'aux1164' direct represents '2' with '-10976'
10975 10977 -10976 0
c Encoding variable: aux1165 with domain: int(0..2) (representing constraint (aux18 + aux22))
c Both direct and order encoding.
c Var 'aux1165' order represents '0' with '10978'
c Var 'aux1165' direct represents '0' with '10978'
c Var 'aux1165' order represents '1' with '10979'
-10978 10979 0
c Var 'aux1165' direct represents '1' with '10980'
10978 -10979 10980 0
-10980 10979 0
-10980 -10978 0
c Var 'aux1165' direct represents '2' with '-10979'
10978 10980 -10979 0
c Encoding variable: aux1166 with domain: int(0..2) (representing constraint (aux21 + aux19))
c Both direct and order encoding.
c Var 'aux1166' order represents '0' with '10981'
c Var 'aux1166' direct represents '0' with '10981'
c Var 'aux1166' order represents '1' with '10982'
-10981 10982 0
c Var 'aux1166' direct represents '1' with '10983'
10981 -10982 10983 0
-10983 10982 0
-10983 -10981 0
c Var 'aux1166' direct represents '2' with '-10982'
10981 10983 -10982 0
c Encoding variable: aux1167 with domain: int(0..2) (representing constraint (aux20 + aux17))
c Both direct and order encoding.
c Var 'aux1167' order represents '0' with '10984'
c Var 'aux1167' direct represents '0' with '10984'
c Var 'aux1167' order represents '1' with '10985'
-10984 10985 0
c Var 'aux1167' direct represents '1' with '10986'
10984 -10985 10986 0
-10986 10985 0
-10986 -10984 0
c Var 'aux1167' direct represents '2' with '-10985'
10984 10986 -10985 0
c Encoding variable: aux1168 with domain: int(0..4) (representing constraint (aux1165 + aux1167))
c Both direct and order encoding.
c Var 'aux1168' order represents '0' with '10987'
c Var 'aux1168' direct represents '0' with '10987'
c Var 'aux1168' order represents '1' with '10988'
-10987 10988 0
c Var 'aux1168' direct represents '1' with '10989'
10987 -10988 10989 0
-10989 10988 0
-10989 -10987 0
c Var 'aux1168' order represents '2' with '10990'
-10988 10990 0
c Var 'aux1168' direct represents '2' with '10991'
10988 -10990 10991 0
-10991 10990 0
-10991 -10988 0
c Var 'aux1168' order represents '3' with '10992'
-10990 10992 0
c Var 'aux1168' direct represents '3' with '10993'
10990 -10992 10993 0
-10993 10992 0
-10993 -10990 0
c Var 'aux1168' direct represents '4' with '-10992'
10987 10989 10991 10993 -10992 0
c Encoding variable: aux1169 with domain: int(0..4) (representing constraint (aux1164 + aux1166))
c Both direct and order encoding.
c Var 'aux1169' order represents '0' with '10994'
c Var 'aux1169' direct represents '0' with '10994'
c Var 'aux1169' order represents '1' with '10995'
-10994 10995 0
c Var 'aux1169' direct represents '1' with '10996'
10994 -10995 10996 0
-10996 10995 0
-10996 -10994 0
c Var 'aux1169' order represents '2' with '10997'
-10995 10997 0
c Var 'aux1169' direct represents '2' with '10998'
10995 -10997 10998 0
-10998 10997 0
-10998 -10995 0
c Var 'aux1169' order represents '3' with '10999'
-10997 10999 0
c Var 'aux1169' direct represents '3' with '11000'
10997 -10999 11000 0
-11000 10999 0
-11000 -10997 0
c Var 'aux1169' direct represents '4' with '-10999'
10994 10996 10998 11000 -10999 0
c Encoding variable: aux1170 with domain: bool (representing constraint (shift(true, -1) + aux24))
c Var 'aux1170' direct represents '0' with '-11001'
c Var 'aux1170' direct represents '1' with '11001'
c Var 'aux1170' order represents '1' with '1'
c Var 'aux1170' order represents '0' with '-11001'
c Encoding variable: aux1171 with domain: int(0..2) (representing constraint (aux31 + aux1170))
c Both direct and order encoding.
c Var 'aux1171' order represents '0' with '11002'
c Var 'aux1171' direct represents '0' with '11002'
c Var 'aux1171' order represents '1' with '11003'
-11002 11003 0
c Var 'aux1171' direct represents '1' with '11004'
11002 -11003 11004 0
-11004 11003 0
-11004 -11002 0
c Var 'aux1171' direct represents '2' with '-11003'
11002 11004 -11003 0
c Encoding variable: aux1172 with domain: int(0..2) (representing constraint (aux26 + aux30))
c Both direct and order encoding.
c Var 'aux1172' order represents '0' with '11005'
c Var 'aux1172' direct represents '0' with '11005'
c Var 'aux1172' order represents '1' with '11006'
-11005 11006 0
c Var 'aux1172' direct represents '1' with '11007'
11005 -11006 11007 0
-11007 11006 0
-11007 -11005 0
c Var 'aux1172' direct represents '2' with '-11006'
11005 11007 -11006 0
c Encoding variable: aux1173 with domain: int(0..2) (representing constraint (aux29 + aux27))
c Both direct and order encoding.
c Var 'aux1173' order represents '0' with '11008'
c Var 'aux1173' direct represents '0' with '11008'
c Var 'aux1173' order represents '1' with '11009'
-11008 11009 0
c Var 'aux1173' direct represents '1' with '11010'
11008 -11009 11010 0
-11010 11009 0
-11010 -11008 0
c Var 'aux1173' direct represents '2' with '-11009'
11008 11010 -11009 0
c Encoding variable: aux1174 with domain: int(0..2) (representing constraint (aux28 + aux25))
c Both direct and order encoding.
c Var 'aux1174' order represents '0' with '11011'
c Var 'aux1174' direct represents '0' with '11011'
c Var 'aux1174' order represents '1' with '11012'
-11011 11012 0
c Var 'aux1174' direct represents '1' with '11013'
11011 -11012 11013 0
-11013 11012 0
-11013 -11011 0
c Var 'aux1174' direct represents '2' with '-11012'
11011 11013 -11012 0
c Encoding variable: aux1175 with domain: int(0..4) (representing constraint (aux1172 + aux1174))
c Both direct and order encoding.
c Var 'aux1175' order represents '0' with '11014'
c Var 'aux1175' direct represents '0' with '11014'
c Var 'aux1175' order represents '1' with '11015'
-11014 11015 0
c Var 'aux1175' direct represents '1' with '11016'
11014 -11015 11016 0
-11016 11015 0
-11016 -11014 0
c Var 'aux1175' order represents '2' with '11017'
-11015 11017 0
c Var 'aux1175' direct represents '2' with '11018'
11015 -11017 11018 0
-11018 11017 0
-11018 -11015 0
c Var 'aux1175' order represents '3' with '11019'
-11017 11019 0
c Var 'aux1175' direct represents '3' with '11020'
11017 -11019 11020 0
-11020 11019 0
-11020 -11017 0
c Var 'aux1175' direct represents '4' with '-11019'
11014 11016 11018 11020 -11019 0
c Encoding variable: aux1176 with domain: int(0..4) (representing constraint (aux1171 + aux1173))
c Both direct and order encoding.
c Var 'aux1176' order represents '0' with '11021'
c Var 'aux1176' direct represents '0' with '11021'
c Var 'aux1176' order represents '1' with '11022'
-11021 11022 0
c Var 'aux1176' direct represents '1' with '11023'
11021 -11022 11023 0
-11023 11022 0
-11023 -11021 0
c Var 'aux1176' order represents '2' with '11024'
-11022 11024 0
c Var 'aux1176' direct represents '2' with '11025'
11022 -11024 11025 0
-11025 11024 0
-11025 -11022 0
c Var 'aux1176' order represents '3' with '11026'
-11024 11026 0
c Var 'aux1176' direct represents '3' with '11027'
11024 -11026 11027 0
-11027 11026 0
-11027 -11024 0
c Var 'aux1176' direct represents '4' with '-11026'
11021 11023 11025 11027 -11026 0
c Encoding variable: aux1177 with domain: bool (representing constraint (shift(true, -1) + aux32))
c Var 'aux1177' direct represents '0' with '-11028'
c Var 'aux1177' direct represents '1' with '11028'
c Var 'aux1177' order represents '1' with '1'
c Var 'aux1177' order represents '0' with '-11028'
c Encoding variable: aux1178 with domain: int(0..2) (representing constraint (aux39 + aux1177))
c Both direct and order encoding.
c Var 'aux1178' order represents '0' with '11029'
c Var 'aux1178' direct represents '0' with '11029'
c Var 'aux1178' order represents '1' with '11030'
-11029 11030 0
c Var 'aux1178' direct represents '1' with '11031'
11029 -11030 11031 0
-11031 11030 0
-11031 -11029 0
c Var 'aux1178' direct represents '2' with '-11030'
11029 11031 -11030 0
c Encoding variable: aux1179 with domain: int(0..2) (representing constraint (aux34 + aux38))
c Both direct and order encoding.
c Var 'aux1179' order represents '0' with '11032'
c Var 'aux1179' direct represents '0' with '11032'
c Var 'aux1179' order represents '1' with '11033'
-11032 11033 0
c Var 'aux1179' direct represents '1' with '11034'
11032 -11033 11034 0
-11034 11033 0
-11034 -11032 0
c Var 'aux1179' direct represents '2' with '-11033'
11032 11034 -11033 0
c Encoding variable: aux1180 with domain: int(0..2) (representing constraint (aux37 + aux35))
c Both direct and order encoding.
c Var 'aux1180' order represents '0' with '11035'
c Var 'aux1180' direct represents '0' with '11035'
c Var 'aux1180' order represents '1' with '11036'
-11035 11036 0
c Var 'aux1180' direct represents '1' with '11037'
11035 -11036 11037 0
-11037 11036 0
-11037 -11035 0
c Var 'aux1180' direct represents '2' with '-11036'
11035 11037 -11036 0
c Encoding variable: aux1181 with domain: int(0..2) (representing constraint (aux36 + aux33))
c Both direct and order encoding.
c Var 'aux1181' order represents '0' with '11038'
c Var 'aux1181' direct represents '0' with '11038'
c Var 'aux1181' order represents '1' with '11039'
-11038 11039 0
c Var 'aux1181' direct represents '1' with '11040'
11038 -11039 11040 0
-11040 11039 0
-11040 -11038 0
c Var 'aux1181' direct represents '2' with '-11039'
11038 11040 -11039 0
c Encoding variable: aux1182 with domain: int(0..4) (representing constraint (aux1179 + aux1181))
c Both direct and order encoding.
c Var 'aux1182' order represents '0' with '11041'
c Var 'aux1182' direct represents '0' with '11041'
c Var 'aux1182' order represents '1' with '11042'
-11041 11042 0
c Var 'aux1182' direct represents '1' with '11043'
11041 -11042 11043 0
-11043 11042 0
-11043 -11041 0
c Var 'aux1182' order represents '2' with '11044'
-11042 11044 0
c Var 'aux1182' direct represents '2' with '11045'
11042 -11044 11045 0
-11045 11044 0
-11045 -11042 0
c Var 'aux1182' order represents '3' with '11046'
-11044 11046 0
c Var 'aux1182' direct represents '3' with '11047'
11044 -11046 11047 0
-11047 11046 0
-11047 -11044 0
c Var 'aux1182' direct represents '4' with '-11046'
11041 11043 11045 11047 -11046 0
c Encoding variable: aux1183 with domain: int(0..4) (representing constraint (aux1178 + aux1180))
c Both direct and order encoding.
c Var 'aux1183' order represents '0' with '11048'
c Var 'aux1183' direct represents '0' with '11048'
c Var 'aux1183' order represents '1' with '11049'
-11048 11049 0
c Var 'aux1183' direct represents '1' with '11050'
11048 -11049 11050 0
-11050 11049 0
-11050 -11048 0
c Var 'aux1183' order represents '2' with '11051'
-11049 11051 0
c Var 'aux1183' direct represents '2' with '11052'
11049 -11051 11052 0
-11052 11051 0
-11052 -11049 0
c Var 'aux1183' order represents '3' with '11053'
-11051 11053 0
c Var 'aux1183' direct represents '3' with '11054'
11051 -11053 11054 0
-11054 11053 0
-11054 -11051 0
c Var 'aux1183' direct represents '4' with '-11053'
11048 11050 11052 11054 -11053 0
c Encoding variable: aux1184 with domain: bool (representing constraint (shift(true, -1) + aux40))
c Var 'aux1184' direct represents '0' with '-11055'
c Var 'aux1184' direct represents '1' with '11055'
c Var 'aux1184' order represents '1' with '1'
c Var 'aux1184' order represents '0' with '-11055'
c Encoding variable: aux1185 with domain: int(0..2) (representing constraint (aux47 + aux1184))
c Both direct and order encoding.
c Var 'aux1185' order represents '0' with '11056'
c Var 'aux1185' direct represents '0' with '11056'
c Var 'aux1185' order represents '1' with '11057'
-11056 11057 0
c Var 'aux1185' direct represents '1' with '11058'
11056 -11057 11058 0
-11058 11057 0
-11058 -11056 0
c Var 'aux1185' direct represents '2' with '-11057'
11056 11058 -11057 0
c Encoding variable: aux1186 with domain: int(0..2) (representing constraint (aux42 + aux46))
c Both direct and order encoding.
c Var 'aux1186' order represents '0' with '11059'
c Var 'aux1186' direct represents '0' with '11059'
c Var 'aux1186' order represents '1' with '11060'
-11059 11060 0
c Var 'aux1186' direct represents '1' with '11061'
11059 -11060 11061 0
-11061 11060 0
-11061 -11059 0
c Var 'aux1186' direct represents '2' with '-11060'
11059 11061 -11060 0
c Encoding variable: aux1187 with domain: int(0..2) (representing constraint (aux45 + aux43))
c Both direct and order encoding.
c Var 'aux1187' order represents '0' with '11062'
c Var 'aux1187' direct represents '0' with '11062'
c Var 'aux1187' order represents '1' with '11063'
-11062 11063 0
c Var 'aux1187' direct represents '1' with '11064'
11062 -11063 11064 0
-11064 11063 0
-11064 -11062 0
c Var 'aux1187' direct represents '2' with '-11063'
11062 11064 -11063 0
c Encoding variable: aux1188 with domain: int(0..2) (representing constraint (aux44 + aux41))
c Both direct and order encoding.
c Var 'aux1188' order represents '0' with '11065'
c Var 'aux1188' direct represents '0' with '11065'
c Var 'aux1188' order represents '1' with '11066'
-11065 11066 0
c Var 'aux1188' direct represents '1' with '11067'
11065 -11066 11067 0
-11067 11066 0
-11067 -11065 0
c Var 'aux1188' direct represents '2' with '-11066'
11065 11067 -11066 0
c Encoding variable: aux1189 with domain: int(0..4) (representing constraint (aux1186 + aux1188))
c Both direct and order encoding.
c Var 'aux1189' order represents '0' with '11068'
c Var 'aux1189' direct represents '0' with '11068'
c Var 'aux1189' order represents '1' with '11069'
-11068 11069 0
c Var 'aux1189' direct represents '1' with '11070'
11068 -11069 11070 0
-11070 11069 0
-11070 -11068 0
c Var 'aux1189' order represents '2' with '11071'
-11069 11071 0
c Var 'aux1189' direct represents '2' with '11072'
11069 -11071 11072 0
-11072 11071 0
-11072 -11069 0
c Var 'aux1189' order represents '3' with '11073'
-11071 11073 0
c Var 'aux1189' direct represents '3' with '11074'
11071 -11073 11074 0
-11074 11073 0
-11074 -11071 0
c Var 'aux1189' direct represents '4' with '-11073'
11068 11070 11072 11074 -11073 0
c Encoding variable: aux1190 with domain: int(0..4) (representing constraint (aux1185 + aux1187))
c Both direct and order encoding.
c Var 'aux1190' order represents '0' with '11075'
c Var 'aux1190' direct represents '0' with '11075'
c Var 'aux1190' order represents '1' with '11076'
-11075 11076 0
c Var 'aux1190' direct represents '1' with '11077'
11075 -11076 11077 0
-11077 11076 0
-11077 -11075 0
c Var 'aux1190' order represents '2' with '11078'
-11076 11078 0
c Var 'aux1190' direct represents '2' with '11079'
11076 -11078 11079 0
-11079 11078 0
-11079 -11076 0
c Var 'aux1190' order represents '3' with '11080'
-11078 11080 0
c Var 'aux1190' direct represents '3' with '11081'
11078 -11080 11081 0
-11081 11080 0
-11081 -11078 0
c Var 'aux1190' direct represents '4' with '-11080'
11075 11077 11079 11081 -11080 0
c Encoding variable: aux1191 with domain: bool (representing constraint (shift(true, -1) + aux48))
c Var 'aux1191' direct represents '0' with '-11082'
c Var 'aux1191' direct represents '1' with '11082'
c Var 'aux1191' order represents '1' with '1'
c Var 'aux1191' order represents '0' with '-11082'
c Encoding variable: aux1192 with domain: int(0..2) (representing constraint (aux55 + aux1191))
c Both direct and order encoding.
c Var 'aux1192' order represents '0' with '11083'
c Var 'aux1192' direct represents '0' with '11083'
c Var 'aux1192' order represents '1' with '11084'
-11083 11084 0
c Var 'aux1192' direct represents '1' with '11085'
11083 -11084 11085 0
-11085 11084 0
-11085 -11083 0
c Var 'aux1192' direct represents '2' with '-11084'
11083 11085 -11084 0
c Encoding variable: aux1193 with domain: int(0..2) (representing constraint (aux50 + aux54))
c Both direct and order encoding.
c Var 'aux1193' order represents '0' with '11086'
c Var 'aux1193' direct represents '0' with '11086'
c Var 'aux1193' order represents '1' with '11087'
-11086 11087 0
c Var 'aux1193' direct represents '1' with '11088'
11086 -11087 11088 0
-11088 11087 0
-11088 -11086 0
c Var 'aux1193' direct represents '2' with '-11087'
11086 11088 -11087 0
c Encoding variable: aux1194 with domain: int(0..2) (representing constraint (aux53 + aux51))
c Both direct and order encoding.
c Var 'aux1194' order represents '0' with '11089'
c Var 'aux1194' direct represents '0' with '11089'
c Var 'aux1194' order represents '1' with '11090'
-11089 11090 0
c Var 'aux1194' direct represents '1' with '11091'
11089 -11090 11091 0
-11091 11090 0
-11091 -11089 0
c Var 'aux1194' direct represents '2' with '-11090'
11089 11091 -11090 0
c Encoding variable: aux1195 with domain: int(0..2) (representing constraint (aux52 + aux49))
c Both direct and order encoding.
c Var 'aux1195' order represents '0' with '11092'
c Var 'aux1195' direct represents '0' with '11092'
c Var 'aux1195' order represents '1' with '11093'
-11092 11093 0
c Var 'aux1195' direct represents '1' with '11094'
11092 -11093 11094 0
-11094 11093 0
-11094 -11092 0
c Var 'aux1195' direct represents '2' with '-11093'
11092 11094 -11093 0
c Encoding variable: aux1196 with domain: int(0..4) (representing constraint (aux1193 + aux1195))
c Both direct and order encoding.
c Var 'aux1196' order represents '0' with '11095'
c Var 'aux1196' direct represents '0' with '11095'
c Var 'aux1196' order represents '1' with '11096'
-11095 11096 0
c Var 'aux1196' direct represents '1' with '11097'
11095 -11096 11097 0
-11097 11096 0
-11097 -11095 0
c Var 'aux1196' order represents '2' with '11098'
-11096 11098 0
c Var 'aux1196' direct represents '2' with '11099'
11096 -11098 11099 0
-11099 11098 0
-11099 -11096 0
c Var 'aux1196' order represents '3' with '11100'
-11098 11100 0
c Var 'aux1196' direct represents '3' with '11101'
11098 -11100 11101 0
-11101 11100 0
-11101 -11098 0
c Var 'aux1196' direct represents '4' with '-11100'
11095 11097 11099 11101 -11100 0
c Encoding variable: aux1197 with domain: int(0..4) (representing constraint (aux1192 + aux1194))
c Both direct and order encoding.
c Var 'aux1197' order represents '0' with '11102'
c Var 'aux1197' direct represents '0' with '11102'
c Var 'aux1197' order represents '1' with '11103'
-11102 11103 0
c Var 'aux1197' direct represents '1' with '11104'
11102 -11103 11104 0
-11104 11103 0
-11104 -11102 0
c Var 'aux1197' order represents '2' with '11105'
-11103 11105 0
c Var 'aux1197' direct represents '2' with '11106'
11103 -11105 11106 0
-11106 11105 0
-11106 -11103 0
c Var 'aux1197' order represents '3' with '11107'
-11105 11107 0
c Var 'aux1197' direct represents '3' with '11108'
11105 -11107 11108 0
-11108 11107 0
-11108 -11105 0
c Var 'aux1197' direct represents '4' with '-11107'
11102 11104 11106 11108 -11107 0
c Encoding variable: aux1198 with domain: bool (representing constraint (shift(true, -1) + aux56))
c Var 'aux1198' direct represents '0' with '-11109'
c Var 'aux1198' direct represents '1' with '11109'
c Var 'aux1198' order represents '1' with '1'
c Var 'aux1198' order represents '0' with '-11109'
c Encoding variable: aux1199 with domain: int(0..2) (representing constraint (aux63 + aux1198))
c Both direct and order encoding.
c Var 'aux1199' order represents '0' with '11110'
c Var 'aux1199' direct represents '0' with '11110'
c Var 'aux1199' order represents '1' with '11111'
-11110 11111 0
c Var 'aux1199' direct represents '1' with '11112'
11110 -11111 11112 0
-11112 11111 0
-11112 -11110 0
c Var 'aux1199' direct represents '2' with '-11111'
11110 11112 -11111 0
c Encoding variable: aux1200 with domain: int(0..2) (representing constraint (aux58 + aux62))
c Both direct and order encoding.
c Var 'aux1200' order represents '0' with '11113'
c Var 'aux1200' direct represents '0' with '11113'
c Var 'aux1200' order represents '1' with '11114'
-11113 11114 0
c Var 'aux1200' direct represents '1' with '11115'
11113 -11114 11115 0
-11115 11114 0
-11115 -11113 0
c Var 'aux1200' direct represents '2' with '-11114'
11113 11115 -11114 0
c Encoding variable: aux1201 with domain: int(0..2) (representing constraint (aux61 + aux59))
c Both direct and order encoding.
c Var 'aux1201' order represents '0' with '11116'
c Var 'aux1201' direct represents '0' with '11116'
c Var 'aux1201' order represents '1' with '11117'
-11116 11117 0
c Var 'aux1201' direct represents '1' with '11118'
11116 -11117 11118 0
-11118 11117 0
-11118 -11116 0
c Var 'aux1201' direct represents '2' with '-11117'
11116 11118 -11117 0
c Encoding variable: aux1202 with domain: int(0..2) (representing constraint (aux60 + aux57))
c Both direct and order encoding.
c Var 'aux1202' order represents '0' with '11119'
c Var 'aux1202' direct represents '0' with '11119'
c Var 'aux1202' order represents '1' with '11120'
-11119 11120 0
c Var 'aux1202' direct represents '1' with '11121'
11119 -11120 11121 0
-11121 11120 0
-11121 -11119 0
c Var 'aux1202' direct represents '2' with '-11120'
11119 11121 -11120 0
c Encoding variable: aux1203 with domain: int(0..4) (representing constraint (aux1200 + aux1202))
c Both direct and order encoding.
c Var 'aux1203' order represents '0' with '11122'
c Var 'aux1203' direct represents '0' with '11122'
c Var 'aux1203' order represents '1' with '11123'
-11122 11123 0
c Var 'aux1203' direct represents '1' with '11124'
11122 -11123 11124 0
-11124 11123 0
-11124 -11122 0
c Var 'aux1203' order represents '2' with '11125'
-11123 11125 0
c Var 'aux1203' direct represents '2' with '11126'
11123 -11125 11126 0
-11126 11125 0
-11126 -11123 0
c Var 'aux1203' order represents '3' with '11127'
-11125 11127 0
c Var 'aux1203' direct represents '3' with '11128'
11125 -11127 11128 0
-11128 11127 0
-11128 -11125 0
c Var 'aux1203' direct represents '4' with '-11127'
11122 11124 11126 11128 -11127 0
c Encoding variable: aux1204 with domain: int(0..4) (representing constraint (aux1199 + aux1201))
c Both direct and order encoding.
c Var 'aux1204' order represents '0' with '11129'
c Var 'aux1204' direct represents '0' with '11129'
c Var 'aux1204' order represents '1' with '11130'
-11129 11130 0
c Var 'aux1204' direct represents '1' with '11131'
11129 -11130 11131 0
-11131 11130 0
-11131 -11129 0
c Var 'aux1204' order represents '2' with '11132'
-11130 11132 0
c Var 'aux1204' direct represents '2' with '11133'
11130 -11132 11133 0
-11133 11132 0
-11133 -11130 0
c Var 'aux1204' order represents '3' with '11134'
-11132 11134 0
c Var 'aux1204' direct represents '3' with '11135'
11132 -11134 11135 0
-11135 11134 0
-11135 -11132 0
c Var 'aux1204' direct represents '4' with '-11134'
11129 11131 11133 11135 -11134 0
c Encoding variable: aux1205 with domain: bool (representing constraint (shift(true, -1) + aux64))
c Var 'aux1205' direct represents '0' with '-11136'
c Var 'aux1205' direct represents '1' with '11136'
c Var 'aux1205' order represents '1' with '1'
c Var 'aux1205' order represents '0' with '-11136'
c Encoding variable: aux1206 with domain: int(0..2) (representing constraint (aux71 + aux1205))
c Both direct and order encoding.
c Var 'aux1206' order represents '0' with '11137'
c Var 'aux1206' direct represents '0' with '11137'
c Var 'aux1206' order represents '1' with '11138'
-11137 11138 0
c Var 'aux1206' direct represents '1' with '11139'
11137 -11138 11139 0
-11139 11138 0
-11139 -11137 0
c Var 'aux1206' direct represents '2' with '-11138'
11137 11139 -11138 0
c Encoding variable: aux1207 with domain: int(0..2) (representing constraint (aux66 + aux70))
c Both direct and order encoding.
c Var 'aux1207' order represents '0' with '11140'
c Var 'aux1207' direct represents '0' with '11140'
c Var 'aux1207' order represents '1' with '11141'
-11140 11141 0
c Var 'aux1207' direct represents '1' with '11142'
11140 -11141 11142 0
-11142 11141 0
-11142 -11140 0
c Var 'aux1207' direct represents '2' with '-11141'
11140 11142 -11141 0
c Encoding variable: aux1208 with domain: int(0..2) (representing constraint (aux69 + aux67))
c Both direct and order encoding.
c Var 'aux1208' order represents '0' with '11143'
c Var 'aux1208' direct represents '0' with '11143'
c Var 'aux1208' order represents '1' with '11144'
-11143 11144 0
c Var 'aux1208' direct represents '1' with '11145'
11143 -11144 11145 0
-11145 11144 0
-11145 -11143 0
c Var 'aux1208' direct represents '2' with '-11144'
11143 11145 -11144 0
c Encoding variable: aux1209 with domain: int(0..2) (representing constraint (aux68 + aux65))
c Both direct and order encoding.
c Var 'aux1209' order represents '0' with '11146'
c Var 'aux1209' direct represents '0' with '11146'
c Var 'aux1209' order represents '1' with '11147'
-11146 11147 0
c Var 'aux1209' direct represents '1' with '11148'
11146 -11147 11148 0
-11148 11147 0
-11148 -11146 0
c Var 'aux1209' direct represents '2' with '-11147'
11146 11148 -11147 0
c Encoding variable: aux1210 with domain: int(0..4) (representing constraint (aux1207 + aux1209))
c Both direct and order encoding.
c Var 'aux1210' order represents '0' with '11149'
c Var 'aux1210' direct represents '0' with '11149'
c Var 'aux1210' order represents '1' with '11150'
-11149 11150 0
c Var 'aux1210' direct represents '1' with '11151'
11149 -11150 11151 0
-11151 11150 0
-11151 -11149 0
c Var 'aux1210' order represents '2' with '11152'
-11150 11152 0
c Var 'aux1210' direct represents '2' with '11153'
11150 -11152 11153 0
-11153 11152 0
-11153 -11150 0
c Var 'aux1210' order represents '3' with '11154'
-11152 11154 0
c Var 'aux1210' direct represents '3' with '11155'
11152 -11154 11155 0
-11155 11154 0
-11155 -11152 0
c Var 'aux1210' direct represents '4' with '-11154'
11149 11151 11153 11155 -11154 0
c Encoding variable: aux1211 with domain: int(0..4) (representing constraint (aux1206 + aux1208))
c Both direct and order encoding.
c Var 'aux1211' order represents '0' with '11156'
c Var 'aux1211' direct represents '0' with '11156'
c Var 'aux1211' order represents '1' with '11157'
-11156 11157 0
c Var 'aux1211' direct represents '1' with '11158'
11156 -11157 11158 0
-11158 11157 0
-11158 -11156 0
c Var 'aux1211' order represents '2' with '11159'
-11157 11159 0
c Var 'aux1211' direct represents '2' with '11160'
11157 -11159 11160 0
-11160 11159 0
-11160 -11157 0
c Var 'aux1211' order represents '3' with '11161'
-11159 11161 0
c Var 'aux1211' direct represents '3' with '11162'
11159 -11161 11162 0
-11162 11161 0
-11162 -11159 0
c Var 'aux1211' direct represents '4' with '-11161'
11156 11158 11160 11162 -11161 0
c Encoding variable: aux1212 with domain: bool (representing constraint (shift(true, -1) + aux72))
c Var 'aux1212' direct represents '0' with '-11163'
c Var 'aux1212' direct represents '1' with '11163'
c Var 'aux1212' order represents '1' with '1'
c Var 'aux1212' order represents '0' with '-11163'
c Encoding variable: aux1213 with domain: int(0..2) (representing constraint (aux79 + aux1212))
c Both direct and order encoding.
c Var 'aux1213' order represents '0' with '11164'
c Var 'aux1213' direct represents '0' with '11164'
c Var 'aux1213' order represents '1' with '11165'
-11164 11165 0
c Var 'aux1213' direct represents '1' with '11166'
11164 -11165 11166 0
-11166 11165 0
-11166 -11164 0
c Var 'aux1213' direct represents '2' with '-11165'
11164 11166 -11165 0
c Encoding variable: aux1214 with domain: int(0..2) (representing constraint (aux74 + aux78))
c Both direct and order encoding.
c Var 'aux1214' order represents '0' with '11167'
c Var 'aux1214' direct represents '0' with '11167'
c Var 'aux1214' order represents '1' with '11168'
-11167 11168 0
c Var 'aux1214' direct represents '1' with '11169'
11167 -11168 11169 0
-11169 11168 0
-11169 -11167 0
c Var 'aux1214' direct represents '2' with '-11168'
11167 11169 -11168 0
c Encoding variable: aux1215 with domain: int(0..2) (representing constraint (aux77 + aux75))
c Both direct and order encoding.
c Var 'aux1215' order represents '0' with '11170'
c Var 'aux1215' direct represents '0' with '11170'
c Var 'aux1215' order represents '1' with '11171'
-11170 11171 0
c Var 'aux1215' direct represents '1' with '11172'
11170 -11171 11172 0
-11172 11171 0
-11172 -11170 0
c Var 'aux1215' direct represents '2' with '-11171'
11170 11172 -11171 0
c Encoding variable: aux1216 with domain: int(0..2) (representing constraint (aux76 + aux73))
c Both direct and order encoding.
c Var 'aux1216' order represents '0' with '11173'
c Var 'aux1216' direct represents '0' with '11173'
c Var 'aux1216' order represents '1' with '11174'
-11173 11174 0
c Var 'aux1216' direct represents '1' with '11175'
11173 -11174 11175 0
-11175 11174 0
-11175 -11173 0
c Var 'aux1216' direct represents '2' with '-11174'
11173 11175 -11174 0
c Encoding variable: aux1217 with domain: int(0..4) (representing constraint (aux1214 + aux1216))
c Both direct and order encoding.
c Var 'aux1217' order represents '0' with '11176'
c Var 'aux1217' direct represents '0' with '11176'
c Var 'aux1217' order represents '1' with '11177'
-11176 11177 0
c Var 'aux1217' direct represents '1' with '11178'
11176 -11177 11178 0
-11178 11177 0
-11178 -11176 0
c Var 'aux1217' order represents '2' with '11179'
-11177 11179 0
c Var 'aux1217' direct represents '2' with '11180'
11177 -11179 11180 0
-11180 11179 0
-11180 -11177 0
c Var 'aux1217' order represents '3' with '11181'
-11179 11181 0
c Var 'aux1217' direct represents '3' with '11182'
11179 -11181 11182 0
-11182 11181 0
-11182 -11179 0
c Var 'aux1217' direct represents '4' with '-11181'
11176 11178 11180 11182 -11181 0
c Encoding variable: aux1218 with domain: int(0..4) (representing constraint (aux1213 + aux1215))
c Both direct and order encoding.
c Var 'aux1218' order represents '0' with '11183'
c Var 'aux1218' direct represents '0' with '11183'
c Var 'aux1218' order represents '1' with '11184'
-11183 11184 0
c Var 'aux1218' direct represents '1' with '11185'
11183 -11184 11185 0
-11185 11184 0
-11185 -11183 0
c Var 'aux1218' order represents '2' with '11186'
-11184 11186 0
c Var 'aux1218' direct represents '2' with '11187'
11184 -11186 11187 0
-11187 11186 0
-11187 -11184 0
c Var 'aux1218' order represents '3' with '11188'
-11186 11188 0
c Var 'aux1218' direct represents '3' with '11189'
11186 -11188 11189 0
-11189 11188 0
-11189 -11186 0
c Var 'aux1218' direct represents '4' with '-11188'
11183 11185 11187 11189 -11188 0
c Encoding variable: aux1219 with domain: bool (representing constraint (shift(true, -1) + aux80))
c Var 'aux1219' direct represents '0' with '-11190'
c Var 'aux1219' direct represents '1' with '11190'
c Var 'aux1219' order represents '1' with '1'
c Var 'aux1219' order represents '0' with '-11190'
c Encoding variable: aux1220 with domain: int(0..2) (representing constraint (aux87 + aux1219))
c Both direct and order encoding.
c Var 'aux1220' order represents '0' with '11191'
c Var 'aux1220' direct represents '0' with '11191'
c Var 'aux1220' order represents '1' with '11192'
-11191 11192 0
c Var 'aux1220' direct represents '1' with '11193'
11191 -11192 11193 0
-11193 11192 0
-11193 -11191 0
c Var 'aux1220' direct represents '2' with '-11192'
11191 11193 -11192 0
c Encoding variable: aux1221 with domain: int(0..2) (representing constraint (aux82 + aux86))
c Both direct and order encoding.
c Var 'aux1221' order represents '0' with '11194'
c Var 'aux1221' direct represents '0' with '11194'
c Var 'aux1221' order represents '1' with '11195'
-11194 11195 0
c Var 'aux1221' direct represents '1' with '11196'
11194 -11195 11196 0
-11196 11195 0
-11196 -11194 0
c Var 'aux1221' direct represents '2' with '-11195'
11194 11196 -11195 0
c Encoding variable: aux1222 with domain: int(0..2) (representing constraint (aux85 + aux83))
c Both direct and order encoding.
c Var 'aux1222' order represents '0' with '11197'
c Var 'aux1222' direct represents '0' with '11197'
c Var 'aux1222' order represents '1' with '11198'
-11197 11198 0
c Var 'aux1222' direct represents '1' with '11199'
11197 -11198 11199 0
-11199 11198 0
-11199 -11197 0
c Var 'aux1222' direct represents '2' with '-11198'
11197 11199 -11198 0
c Encoding variable: aux1223 with domain: int(0..2) (representing constraint (aux84 + aux81))
c Both direct and order encoding.
c Var 'aux1223' order represents '0' with '11200'
c Var 'aux1223' direct represents '0' with '11200'
c Var 'aux1223' order represents '1' with '11201'
-11200 11201 0
c Var 'aux1223' direct represents '1' with '11202'
11200 -11201 11202 0
-11202 11201 0
-11202 -11200 0
c Var 'aux1223' direct represents '2' with '-11201'
11200 11202 -11201 0
c Encoding variable: aux1224 with domain: int(0..4) (representing constraint (aux1221 + aux1223))
c Both direct and order encoding.
c Var 'aux1224' order represents '0' with '11203'
c Var 'aux1224' direct represents '0' with '11203'
c Var 'aux1224' order represents '1' with '11204'
-11203 11204 0
c Var 'aux1224' direct represents '1' with '11205'
11203 -11204 11205 0
-11205 11204 0
-11205 -11203 0
c Var 'aux1224' order represents '2' with '11206'
-11204 11206 0
c Var 'aux1224' direct represents '2' with '11207'
11204 -11206 11207 0
-11207 11206 0
-11207 -11204 0
c Var 'aux1224' order represents '3' with '11208'
-11206 11208 0
c Var 'aux1224' direct represents '3' with '11209'
11206 -11208 11209 0
-11209 11208 0
-11209 -11206 0
c Var 'aux1224' direct represents '4' with '-11208'
11203 11205 11207 11209 -11208 0
c Encoding variable: aux1225 with domain: int(0..4) (representing constraint (aux1220 + aux1222))
c Both direct and order encoding.
c Var 'aux1225' order represents '0' with '11210'
c Var 'aux1225' direct represents '0' with '11210'
c Var 'aux1225' order represents '1' with '11211'
-11210 11211 0
c Var 'aux1225' direct represents '1' with '11212'
11210 -11211 11212 0
-11212 11211 0
-11212 -11210 0
c Var 'aux1225' order represents '2' with '11213'
-11211 11213 0
c Var 'aux1225' direct represents '2' with '11214'
11211 -11213 11214 0
-11214 11213 0
-11214 -11211 0
c Var 'aux1225' order represents '3' with '11215'
-11213 11215 0
c Var 'aux1225' direct represents '3' with '11216'
11213 -11215 11216 0
-11216 11215 0
-11216 -11213 0
c Var 'aux1225' direct represents '4' with '-11215'
11210 11212 11214 11216 -11215 0
c Encoding variable: aux1226 with domain: bool (representing constraint (shift(true, -1) + aux88))
c Var 'aux1226' direct represents '0' with '-11217'
c Var 'aux1226' direct represents '1' with '11217'
c Var 'aux1226' order represents '1' with '1'
c Var 'aux1226' order represents '0' with '-11217'
c Encoding variable: aux1227 with domain: int(0..2) (representing constraint (aux95 + aux1226))
c Both direct and order encoding.
c Var 'aux1227' order represents '0' with '11218'
c Var 'aux1227' direct represents '0' with '11218'
c Var 'aux1227' order represents '1' with '11219'
-11218 11219 0
c Var 'aux1227' direct represents '1' with '11220'
11218 -11219 11220 0
-11220 11219 0
-11220 -11218 0
c Var 'aux1227' direct represents '2' with '-11219'
11218 11220 -11219 0
c Encoding variable: aux1228 with domain: int(0..2) (representing constraint (aux90 + aux94))
c Both direct and order encoding.
c Var 'aux1228' order represents '0' with '11221'
c Var 'aux1228' direct represents '0' with '11221'
c Var 'aux1228' order represents '1' with '11222'
-11221 11222 0
c Var 'aux1228' direct represents '1' with '11223'
11221 -11222 11223 0
-11223 11222 0
-11223 -11221 0
c Var 'aux1228' direct represents '2' with '-11222'
11221 11223 -11222 0
c Encoding variable: aux1229 with domain: int(0..2) (representing constraint (aux93 + aux91))
c Both direct and order encoding.
c Var 'aux1229' order represents '0' with '11224'
c Var 'aux1229' direct represents '0' with '11224'
c Var 'aux1229' order represents '1' with '11225'
-11224 11225 0
c Var 'aux1229' direct represents '1' with '11226'
11224 -11225 11226 0
-11226 11225 0
-11226 -11224 0
c Var 'aux1229' direct represents '2' with '-11225'
11224 11226 -11225 0
c Encoding variable: aux1230 with domain: int(0..2) (representing constraint (aux92 + aux89))
c Both direct and order encoding.
c Var 'aux1230' order represents '0' with '11227'
c Var 'aux1230' direct represents '0' with '11227'
c Var 'aux1230' order represents '1' with '11228'
-11227 11228 0
c Var 'aux1230' direct represents '1' with '11229'
11227 -11228 11229 0
-11229 11228 0
-11229 -11227 0
c Var 'aux1230' direct represents '2' with '-11228'
11227 11229 -11228 0
c Encoding variable: aux1231 with domain: int(0..4) (representing constraint (aux1228 + aux1230))
c Both direct and order encoding.
c Var 'aux1231' order represents '0' with '11230'
c Var 'aux1231' direct represents '0' with '11230'
c Var 'aux1231' order represents '1' with '11231'
-11230 11231 0
c Var 'aux1231' direct represents '1' with '11232'
11230 -11231 11232 0
-11232 11231 0
-11232 -11230 0
c Var 'aux1231' order represents '2' with '11233'
-11231 11233 0
c Var 'aux1231' direct represents '2' with '11234'
11231 -11233 11234 0
-11234 11233 0
-11234 -11231 0
c Var 'aux1231' order represents '3' with '11235'
-11233 11235 0
c Var 'aux1231' direct represents '3' with '11236'
11233 -11235 11236 0
-11236 11235 0
-11236 -11233 0
c Var 'aux1231' direct represents '4' with '-11235'
11230 11232 11234 11236 -11235 0
c Encoding variable: aux1232 with domain: int(0..4) (representing constraint (aux1227 + aux1229))
c Both direct and order encoding.
c Var 'aux1232' order represents '0' with '11237'
c Var 'aux1232' direct represents '0' with '11237'
c Var 'aux1232' order represents '1' with '11238'
-11237 11238 0
c Var 'aux1232' direct represents '1' with '11239'
11237 -11238 11239 0
-11239 11238 0
-11239 -11237 0
c Var 'aux1232' order represents '2' with '11240'
-11238 11240 0
c Var 'aux1232' direct represents '2' with '11241'
11238 -11240 11241 0
-11241 11240 0
-11241 -11238 0
c Var 'aux1232' order represents '3' with '11242'
-11240 11242 0
c Var 'aux1232' direct represents '3' with '11243'
11240 -11242 11243 0
-11243 11242 0
-11243 -11240 0
c Var 'aux1232' direct represents '4' with '-11242'
11237 11239 11241 11243 -11242 0
c Encoding variable: aux1233 with domain: bool (representing constraint (shift(true, -1) + aux100))
c Var 'aux1233' direct represents '0' with '-11244'
c Var 'aux1233' direct represents '1' with '11244'
c Var 'aux1233' order represents '1' with '1'
c Var 'aux1233' order represents '0' with '-11244'
c Encoding variable: aux1234 with domain: int(0..2) (representing constraint (aux99 + aux1233))
c Both direct and order encoding.
c Var 'aux1234' order represents '0' with '11245'
c Var 'aux1234' direct represents '0' with '11245'
c Var 'aux1234' order represents '1' with '11246'
-11245 11246 0
c Var 'aux1234' direct represents '1' with '11247'
11245 -11246 11247 0
-11247 11246 0
-11247 -11245 0
c Var 'aux1234' direct represents '2' with '-11246'
11245 11247 -11246 0
c Encoding variable: aux1235 with domain: int(0..2) (representing constraint (aux103 + aux98))
c Both direct and order encoding.
c Var 'aux1235' order represents '0' with '11248'
c Var 'aux1235' direct represents '0' with '11248'
c Var 'aux1235' order represents '1' with '11249'
-11248 11249 0
c Var 'aux1235' direct represents '1' with '11250'
11248 -11249 11250 0
-11250 11249 0
-11250 -11248 0
c Var 'aux1235' direct represents '2' with '-11249'
11248 11250 -11249 0
c Encoding variable: aux1236 with domain: int(0..2) (representing constraint (aux97 + aux101))
c Both direct and order encoding.
c Var 'aux1236' order represents '0' with '11251'
c Var 'aux1236' direct represents '0' with '11251'
c Var 'aux1236' order represents '1' with '11252'
-11251 11252 0
c Var 'aux1236' direct represents '1' with '11253'
11251 -11252 11253 0
-11253 11252 0
-11253 -11251 0
c Var 'aux1236' direct represents '2' with '-11252'
11251 11253 -11252 0
c Encoding variable: aux1237 with domain: int(0..2) (representing constraint (aux96 + aux102))
c Both direct and order encoding.
c Var 'aux1237' order represents '0' with '11254'
c Var 'aux1237' direct represents '0' with '11254'
c Var 'aux1237' order represents '1' with '11255'
-11254 11255 0
c Var 'aux1237' direct represents '1' with '11256'
11254 -11255 11256 0
-11256 11255 0
-11256 -11254 0
c Var 'aux1237' direct represents '2' with '-11255'
11254 11256 -11255 0
c Encoding variable: aux1238 with domain: int(0..4) (representing constraint (aux1235 + aux1237))
c Both direct and order encoding.
c Var 'aux1238' order represents '0' with '11257'
c Var 'aux1238' direct represents '0' with '11257'
c Var 'aux1238' order represents '1' with '11258'
-11257 11258 0
c Var 'aux1238' direct represents '1' with '11259'
11257 -11258 11259 0
-11259 11258 0
-11259 -11257 0
c Var 'aux1238' order represents '2' with '11260'
-11258 11260 0
c Var 'aux1238' direct represents '2' with '11261'
11258 -11260 11261 0
-11261 11260 0
-11261 -11258 0
c Var 'aux1238' order represents '3' with '11262'
-11260 11262 0
c Var 'aux1238' direct represents '3' with '11263'
11260 -11262 11263 0
-11263 11262 0
-11263 -11260 0
c Var 'aux1238' direct represents '4' with '-11262'
11257 11259 11261 11263 -11262 0
c Encoding variable: aux1239 with domain: int(0..4) (representing constraint (aux1234 + aux1236))
c Both direct and order encoding.
c Var 'aux1239' order represents '0' with '11264'
c Var 'aux1239' direct represents '0' with '11264'
c Var 'aux1239' order represents '1' with '11265'
-11264 11265 0
c Var 'aux1239' direct represents '1' with '11266'
11264 -11265 11266 0
-11266 11265 0
-11266 -11264 0
c Var 'aux1239' order represents '2' with '11267'
-11265 11267 0
c Var 'aux1239' direct represents '2' with '11268'
11265 -11267 11268 0
-11268 11267 0
-11268 -11265 0
c Var 'aux1239' order represents '3' with '11269'
-11267 11269 0
c Var 'aux1239' direct represents '3' with '11270'
11267 -11269 11270 0
-11270 11269 0
-11270 -11267 0
c Var 'aux1239' direct represents '4' with '-11269'
11264 11266 11268 11270 -11269 0
c Encoding variable: aux1240 with domain: bool (representing constraint (shift(true, -1) + aux104))
c Var 'aux1240' direct represents '0' with '-11271'
c Var 'aux1240' direct represents '1' with '11271'
c Var 'aux1240' order represents '1' with '1'
c Var 'aux1240' order represents '0' with '-11271'
c Encoding variable: aux1241 with domain: int(0..2) (representing constraint (aux107 + aux1240))
c Both direct and order encoding.
c Var 'aux1241' order represents '0' with '11272'
c Var 'aux1241' direct represents '0' with '11272'
c Var 'aux1241' order represents '1' with '11273'
-11272 11273 0
c Var 'aux1241' direct represents '1' with '11274'
11272 -11273 11274 0
-11274 11273 0
-11274 -11272 0
c Var 'aux1241' direct represents '2' with '-11273'
11272 11274 -11273 0
c Encoding variable: aux1242 with domain: int(0..2) (representing constraint (aux105 + aux111))
c Both direct and order encoding.
c Var 'aux1242' order represents '0' with '11275'
c Var 'aux1242' direct represents '0' with '11275'
c Var 'aux1242' order represents '1' with '11276'
-11275 11276 0
c Var 'aux1242' direct represents '1' with '11277'
11275 -11276 11277 0
-11277 11276 0
-11277 -11275 0
c Var 'aux1242' direct represents '2' with '-11276'
11275 11277 -11276 0
c Encoding variable: aux1243 with domain: int(0..2) (representing constraint (aux110 + aux108))
c Both direct and order encoding.
c Var 'aux1243' order represents '0' with '11278'
c Var 'aux1243' direct represents '0' with '11278'
c Var 'aux1243' order represents '1' with '11279'
-11278 11279 0
c Var 'aux1243' direct represents '1' with '11280'
11278 -11279 11280 0
-11280 11279 0
-11280 -11278 0
c Var 'aux1243' direct represents '2' with '-11279'
11278 11280 -11279 0
c Encoding variable: aux1244 with domain: int(0..2) (representing constraint (aux109 + aux106))
c Both direct and order encoding.
c Var 'aux1244' order represents '0' with '11281'
c Var 'aux1244' direct represents '0' with '11281'
c Var 'aux1244' order represents '1' with '11282'
-11281 11282 0
c Var 'aux1244' direct represents '1' with '11283'
11281 -11282 11283 0
-11283 11282 0
-11283 -11281 0
c Var 'aux1244' direct represents '2' with '-11282'
11281 11283 -11282 0
c Encoding variable: aux1245 with domain: int(0..4) (representing constraint (aux1242 + aux1244))
c Both direct and order encoding.
c Var 'aux1245' order represents '0' with '11284'
c Var 'aux1245' direct represents '0' with '11284'
c Var 'aux1245' order represents '1' with '11285'
-11284 11285 0
c Var 'aux1245' direct represents '1' with '11286'
11284 -11285 11286 0
-11286 11285 0
-11286 -11284 0
c Var 'aux1245' order represents '2' with '11287'
-11285 11287 0
c Var 'aux1245' direct represents '2' with '11288'
11285 -11287 11288 0
-11288 11287 0
-11288 -11285 0
c Var 'aux1245' order represents '3' with '11289'
-11287 11289 0
c Var 'aux1245' direct represents '3' with '11290'
11287 -11289 11290 0
-11290 11289 0
-11290 -11287 0
c Var 'aux1245' direct represents '4' with '-11289'
11284 11286 11288 11290 -11289 0
c Encoding variable: aux1246 with domain: int(0..4) (representing constraint (aux1241 + aux1243))
c Both direct and order encoding.
c Var 'aux1246' order represents '0' with '11291'
c Var 'aux1246' direct represents '0' with '11291'
c Var 'aux1246' order represents '1' with '11292'
-11291 11292 0
c Var 'aux1246' direct represents '1' with '11293'
11291 -11292 11293 0
-11293 11292 0
-11293 -11291 0
c Var 'aux1246' order represents '2' with '11294'
-11292 11294 0
c Var 'aux1246' direct represents '2' with '11295'
11292 -11294 11295 0
-11295 11294 0
-11295 -11292 0
c Var 'aux1246' order represents '3' with '11296'
-11294 11296 0
c Var 'aux1246' direct represents '3' with '11297'
11294 -11296 11297 0
-11297 11296 0
-11297 -11294 0
c Var 'aux1246' direct represents '4' with '-11296'
11291 11293 11295 11297 -11296 0
c Encoding variable: aux1247 with domain: bool (representing constraint (shift(true, -1) + aux112))
c Var 'aux1247' direct represents '0' with '-11298'
c Var 'aux1247' direct represents '1' with '11298'
c Var 'aux1247' order represents '1' with '1'
c Var 'aux1247' order represents '0' with '-11298'
c Encoding variable: aux1248 with domain: int(0..2) (representing constraint (aux115 + aux1247))
c Both direct and order encoding.
c Var 'aux1248' order represents '0' with '11299'
c Var 'aux1248' direct represents '0' with '11299'
c Var 'aux1248' order represents '1' with '11300'
-11299 11300 0
c Var 'aux1248' direct represents '1' with '11301'
11299 -11300 11301 0
-11301 11300 0
-11301 -11299 0
c Var 'aux1248' direct represents '2' with '-11300'
11299 11301 -11300 0
c Encoding variable: aux1249 with domain: int(0..2) (representing constraint (aux113 + aux119))
c Both direct and order encoding.
c Var 'aux1249' order represents '0' with '11302'
c Var 'aux1249' direct represents '0' with '11302'
c Var 'aux1249' order represents '1' with '11303'
-11302 11303 0
c Var 'aux1249' direct represents '1' with '11304'
11302 -11303 11304 0
-11304 11303 0
-11304 -11302 0
c Var 'aux1249' direct represents '2' with '-11303'
11302 11304 -11303 0
c Encoding variable: aux1250 with domain: int(0..2) (representing constraint (aux118 + aux116))
c Both direct and order encoding.
c Var 'aux1250' order represents '0' with '11305'
c Var 'aux1250' direct represents '0' with '11305'
c Var 'aux1250' order represents '1' with '11306'
-11305 11306 0
c Var 'aux1250' direct represents '1' with '11307'
11305 -11306 11307 0
-11307 11306 0
-11307 -11305 0
c Var 'aux1250' direct represents '2' with '-11306'
11305 11307 -11306 0
c Encoding variable: aux1251 with domain: int(0..2) (representing constraint (aux117 + aux114))
c Both direct and order encoding.
c Var 'aux1251' order represents '0' with '11308'
c Var 'aux1251' direct represents '0' with '11308'
c Var 'aux1251' order represents '1' with '11309'
-11308 11309 0
c Var 'aux1251' direct represents '1' with '11310'
11308 -11309 11310 0
-11310 11309 0
-11310 -11308 0
c Var 'aux1251' direct represents '2' with '-11309'
11308 11310 -11309 0
c Encoding variable: aux1252 with domain: int(0..4) (representing constraint (aux1249 + aux1251))
c Both direct and order encoding.
c Var 'aux1252' order represents '0' with '11311'
c Var 'aux1252' direct represents '0' with '11311'
c Var 'aux1252' order represents '1' with '11312'
-11311 11312 0
c Var 'aux1252' direct represents '1' with '11313'
11311 -11312 11313 0
-11313 11312 0
-11313 -11311 0
c Var 'aux1252' order represents '2' with '11314'
-11312 11314 0
c Var 'aux1252' direct represents '2' with '11315'
11312 -11314 11315 0
-11315 11314 0
-11315 -11312 0
c Var 'aux1252' order represents '3' with '11316'
-11314 11316 0
c Var 'aux1252' direct represents '3' with '11317'
11314 -11316 11317 0
-11317 11316 0
-11317 -11314 0
c Var 'aux1252' direct represents '4' with '-11316'
11311 11313 11315 11317 -11316 0
c Encoding variable: aux1253 with domain: int(0..4) (representing constraint (aux1248 + aux1250))
c Both direct and order encoding.
c Var 'aux1253' order represents '0' with '11318'
c Var 'aux1253' direct represents '0' with '11318'
c Var 'aux1253' order represents '1' with '11319'
-11318 11319 0
c Var 'aux1253' direct represents '1' with '11320'
11318 -11319 11320 0
-11320 11319 0
-11320 -11318 0
c Var 'aux1253' order represents '2' with '11321'
-11319 11321 0
c Var 'aux1253' direct represents '2' with '11322'
11319 -11321 11322 0
-11322 11321 0
-11322 -11319 0
c Var 'aux1253' order represents '3' with '11323'
-11321 11323 0
c Var 'aux1253' direct represents '3' with '11324'
11321 -11323 11324 0
-11324 11323 0
-11324 -11321 0
c Var 'aux1253' direct represents '4' with '-11323'
11318 11320 11322 11324 -11323 0
c Encoding variable: aux1254 with domain: bool (representing constraint (shift(true, -1) + aux120))
c Var 'aux1254' direct represents '0' with '-11325'
c Var 'aux1254' direct represents '1' with '11325'
c Var 'aux1254' order represents '1' with '1'
c Var 'aux1254' order represents '0' with '-11325'
c Encoding variable: aux1255 with domain: int(0..2) (representing constraint (aux123 + aux1254))
c Both direct and order encoding.
c Var 'aux1255' order represents '0' with '11326'
c Var 'aux1255' direct represents '0' with '11326'
c Var 'aux1255' order represents '1' with '11327'
-11326 11327 0
c Var 'aux1255' direct represents '1' with '11328'
11326 -11327 11328 0
-11328 11327 0
-11328 -11326 0
c Var 'aux1255' direct represents '2' with '-11327'
11326 11328 -11327 0
c Encoding variable: aux1256 with domain: int(0..2) (representing constraint (aux121 + aux127))
c Both direct and order encoding.
c Var 'aux1256' order represents '0' with '11329'
c Var 'aux1256' direct represents '0' with '11329'
c Var 'aux1256' order represents '1' with '11330'
-11329 11330 0
c Var 'aux1256' direct represents '1' with '11331'
11329 -11330 11331 0
-11331 11330 0
-11331 -11329 0
c Var 'aux1256' direct represents '2' with '-11330'
11329 11331 -11330 0
c Encoding variable: aux1257 with domain: int(0..2) (representing constraint (aux126 + aux124))
c Both direct and order encoding.
c Var 'aux1257' order represents '0' with '11332'
c Var 'aux1257' direct represents '0' with '11332'
c Var 'aux1257' order represents '1' with '11333'
-11332 11333 0
c Var 'aux1257' direct represents '1' with '11334'
11332 -11333 11334 0
-11334 11333 0
-11334 -11332 0
c Var 'aux1257' direct represents '2' with '-11333'
11332 11334 -11333 0
c Encoding variable: aux1258 with domain: int(0..2) (representing constraint (aux125 + aux122))
c Both direct and order encoding.
c Var 'aux1258' order represents '0' with '11335'
c Var 'aux1258' direct represents '0' with '11335'
c Var 'aux1258' order represents '1' with '11336'
-11335 11336 0
c Var 'aux1258' direct represents '1' with '11337'
11335 -11336 11337 0
-11337 11336 0
-11337 -11335 0
c Var 'aux1258' direct represents '2' with '-11336'
11335 11337 -11336 0
c Encoding variable: aux1259 with domain: int(0..4) (representing constraint (aux1256 + aux1258))
c Both direct and order encoding.
c Var 'aux1259' order represents '0' with '11338'
c Var 'aux1259' direct represents '0' with '11338'
c Var 'aux1259' order represents '1' with '11339'
-11338 11339 0
c Var 'aux1259' direct represents '1' with '11340'
11338 -11339 11340 0
-11340 11339 0
-11340 -11338 0
c Var 'aux1259' order represents '2' with '11341'
-11339 11341 0
c Var 'aux1259' direct represents '2' with '11342'
11339 -11341 11342 0
-11342 11341 0
-11342 -11339 0
c Var 'aux1259' order represents '3' with '11343'
-11341 11343 0
c Var 'aux1259' direct represents '3' with '11344'
11341 -11343 11344 0
-11344 11343 0
-11344 -11341 0
c Var 'aux1259' direct represents '4' with '-11343'
11338 11340 11342 11344 -11343 0
c Encoding variable: aux1260 with domain: int(0..4) (representing constraint (aux1255 + aux1257))
c Both direct and order encoding.
c Var 'aux1260' order represents '0' with '11345'
c Var 'aux1260' direct represents '0' with '11345'
c Var 'aux1260' order represents '1' with '11346'
-11345 11346 0
c Var 'aux1260' direct represents '1' with '11347'
11345 -11346 11347 0
-11347 11346 0
-11347 -11345 0
c Var 'aux1260' order represents '2' with '11348'
-11346 11348 0
c Var 'aux1260' direct represents '2' with '11349'
11346 -11348 11349 0
-11349 11348 0
-11349 -11346 0
c Var 'aux1260' order represents '3' with '11350'
-11348 11350 0
c Var 'aux1260' direct represents '3' with '11351'
11348 -11350 11351 0
-11351 11350 0
-11351 -11348 0
c Var 'aux1260' direct represents '4' with '-11350'
11345 11347 11349 11351 -11350 0
c Encoding variable: aux1261 with domain: bool (representing constraint (shift(true, -1) + aux128))
c Var 'aux1261' direct represents '0' with '-11352'
c Var 'aux1261' direct represents '1' with '11352'
c Var 'aux1261' order represents '1' with '1'
c Var 'aux1261' order represents '0' with '-11352'
c Encoding variable: aux1262 with domain: int(0..2) (representing constraint (aux131 + aux1261))
c Both direct and order encoding.
c Var 'aux1262' order represents '0' with '11353'
c Var 'aux1262' direct represents '0' with '11353'
c Var 'aux1262' order represents '1' with '11354'
-11353 11354 0
c Var 'aux1262' direct represents '1' with '11355'
11353 -11354 11355 0
-11355 11354 0
-11355 -11353 0
c Var 'aux1262' direct represents '2' with '-11354'
11353 11355 -11354 0
c Encoding variable: aux1263 with domain: int(0..2) (representing constraint (aux129 + aux135))
c Both direct and order encoding.
c Var 'aux1263' order represents '0' with '11356'
c Var 'aux1263' direct represents '0' with '11356'
c Var 'aux1263' order represents '1' with '11357'
-11356 11357 0
c Var 'aux1263' direct represents '1' with '11358'
11356 -11357 11358 0
-11358 11357 0
-11358 -11356 0
c Var 'aux1263' direct represents '2' with '-11357'
11356 11358 -11357 0
c Encoding variable: aux1264 with domain: int(0..2) (representing constraint (aux134 + aux132))
c Both direct and order encoding.
c Var 'aux1264' order represents '0' with '11359'
c Var 'aux1264' direct represents '0' with '11359'
c Var 'aux1264' order represents '1' with '11360'
-11359 11360 0
c Var 'aux1264' direct represents '1' with '11361'
11359 -11360 11361 0
-11361 11360 0
-11361 -11359 0
c Var 'aux1264' direct represents '2' with '-11360'
11359 11361 -11360 0
c Encoding variable: aux1265 with domain: int(0..2) (representing constraint (aux133 + aux130))
c Both direct and order encoding.
c Var 'aux1265' order represents '0' with '11362'
c Var 'aux1265' direct represents '0' with '11362'
c Var 'aux1265' order represents '1' with '11363'
-11362 11363 0
c Var 'aux1265' direct represents '1' with '11364'
11362 -11363 11364 0
-11364 11363 0
-11364 -11362 0
c Var 'aux1265' direct represents '2' with '-11363'
11362 11364 -11363 0
c Encoding variable: aux1266 with domain: int(0..4) (representing constraint (aux1263 + aux1265))
c Both direct and order encoding.
c Var 'aux1266' order represents '0' with '11365'
c Var 'aux1266' direct represents '0' with '11365'
c Var 'aux1266' order represents '1' with '11366'
-11365 11366 0
c Var 'aux1266' direct represents '1' with '11367'
11365 -11366 11367 0
-11367 11366 0
-11367 -11365 0
c Var 'aux1266' order represents '2' with '11368'
-11366 11368 0
c Var 'aux1266' direct represents '2' with '11369'
11366 -11368 11369 0
-11369 11368 0
-11369 -11366 0
c Var 'aux1266' order represents '3' with '11370'
-11368 11370 0
c Var 'aux1266' direct represents '3' with '11371'
11368 -11370 11371 0
-11371 11370 0
-11371 -11368 0
c Var 'aux1266' direct represents '4' with '-11370'
11365 11367 11369 11371 -11370 0
c Encoding variable: aux1267 with domain: int(0..4) (representing constraint (aux1262 + aux1264))
c Both direct and order encoding.
c Var 'aux1267' order represents '0' with '11372'
c Var 'aux1267' direct represents '0' with '11372'
c Var 'aux1267' order represents '1' with '11373'
-11372 11373 0
c Var 'aux1267' direct represents '1' with '11374'
11372 -11373 11374 0
-11374 11373 0
-11374 -11372 0
c Var 'aux1267' order represents '2' with '11375'
-11373 11375 0
c Var 'aux1267' direct represents '2' with '11376'
11373 -11375 11376 0
-11376 11375 0
-11376 -11373 0
c Var 'aux1267' order represents '3' with '11377'
-11375 11377 0
c Var 'aux1267' direct represents '3' with '11378'
11375 -11377 11378 0
-11378 11377 0
-11378 -11375 0
c Var 'aux1267' direct represents '4' with '-11377'
11372 11374 11376 11378 -11377 0
c Encoding variable: aux1268 with domain: bool (representing constraint (shift(true, -1) + aux136))
c Var 'aux1268' direct represents '0' with '-11379'
c Var 'aux1268' direct represents '1' with '11379'
c Var 'aux1268' order represents '1' with '1'
c Var 'aux1268' order represents '0' with '-11379'
c Encoding variable: aux1269 with domain: int(0..2) (representing constraint (aux139 + aux1268))
c Both direct and order encoding.
c Var 'aux1269' order represents '0' with '11380'
c Var 'aux1269' direct represents '0' with '11380'
c Var 'aux1269' order represents '1' with '11381'
-11380 11381 0
c Var 'aux1269' direct represents '1' with '11382'
11380 -11381 11382 0
-11382 11381 0
-11382 -11380 0
c Var 'aux1269' direct represents '2' with '-11381'
11380 11382 -11381 0
c Encoding variable: aux1270 with domain: int(0..2) (representing constraint (aux137 + aux143))
c Both direct and order encoding.
c Var 'aux1270' order represents '0' with '11383'
c Var 'aux1270' direct represents '0' with '11383'
c Var 'aux1270' order represents '1' with '11384'
-11383 11384 0
c Var 'aux1270' direct represents '1' with '11385'
11383 -11384 11385 0
-11385 11384 0
-11385 -11383 0
c Var 'aux1270' direct represents '2' with '-11384'
11383 11385 -11384 0
c Encoding variable: aux1271 with domain: int(0..2) (representing constraint (aux142 + aux140))
c Both direct and order encoding.
c Var 'aux1271' order represents '0' with '11386'
c Var 'aux1271' direct represents '0' with '11386'
c Var 'aux1271' order represents '1' with '11387'
-11386 11387 0
c Var 'aux1271' direct represents '1' with '11388'
11386 -11387 11388 0
-11388 11387 0
-11388 -11386 0
c Var 'aux1271' direct represents '2' with '-11387'
11386 11388 -11387 0
c Encoding variable: aux1272 with domain: int(0..2) (representing constraint (aux141 + aux138))
c Both direct and order encoding.
c Var 'aux1272' order represents '0' with '11389'
c Var 'aux1272' direct represents '0' with '11389'
c Var 'aux1272' order represents '1' with '11390'
-11389 11390 0
c Var 'aux1272' direct represents '1' with '11391'
11389 -11390 11391 0
-11391 11390 0
-11391 -11389 0
c Var 'aux1272' direct represents '2' with '-11390'
11389 11391 -11390 0
c Encoding variable: aux1273 with domain: int(0..4) (representing constraint (aux1270 + aux1272))
c Both direct and order encoding.
c Var 'aux1273' order represents '0' with '11392'
c Var 'aux1273' direct represents '0' with '11392'
c Var 'aux1273' order represents '1' with '11393'
-11392 11393 0
c Var 'aux1273' direct represents '1' with '11394'
11392 -11393 11394 0
-11394 11393 0
-11394 -11392 0
c Var 'aux1273' order represents '2' with '11395'
-11393 11395 0
c Var 'aux1273' direct represents '2' with '11396'
11393 -11395 11396 0
-11396 11395 0
-11396 -11393 0
c Var 'aux1273' order represents '3' with '11397'
-11395 11397 0
c Var 'aux1273' direct represents '3' with '11398'
11395 -11397 11398 0
-11398 11397 0
-11398 -11395 0
c Var 'aux1273' direct represents '4' with '-11397'
11392 11394 11396 11398 -11397 0
c Encoding variable: aux1274 with domain: int(0..4) (representing constraint (aux1269 + aux1271))
c Both direct and order encoding.
c Var 'aux1274' order represents '0' with '11399'
c Var 'aux1274' direct represents '0' with '11399'
c Var 'aux1274' order represents '1' with '11400'
-11399 11400 0
c Var 'aux1274' direct represents '1' with '11401'
11399 -11400 11401 0
-11401 11400 0
-11401 -11399 0
c Var 'aux1274' order represents '2' with '11402'
-11400 11402 0
c Var 'aux1274' direct represents '2' with '11403'
11400 -11402 11403 0
-11403 11402 0
-11403 -11400 0
c Var 'aux1274' order represents '3' with '11404'
-11402 11404 0
c Var 'aux1274' direct represents '3' with '11405'
11402 -11404 11405 0
-11405 11404 0
-11405 -11402 0
c Var 'aux1274' direct represents '4' with '-11404'
11399 11401 11403 11405 -11404 0
c Encoding variable: aux1275 with domain: bool (representing constraint (shift(true, -1) + aux147))
c Var 'aux1275' direct represents '0' with '-11406'
c Var 'aux1275' direct represents '1' with '11406'
c Var 'aux1275' order represents '1' with '1'
c Var 'aux1275' order represents '0' with '-11406'
c Encoding variable: aux1276 with domain: int(0..2) (representing constraint (aux151 + aux1275))
c Both direct and order encoding.
c Var 'aux1276' order represents '0' with '11407'
c Var 'aux1276' direct represents '0' with '11407'
c Var 'aux1276' order represents '1' with '11408'
-11407 11408 0
c Var 'aux1276' direct represents '1' with '11409'
11407 -11408 11409 0
-11409 11408 0
-11409 -11407 0
c Var 'aux1276' direct represents '2' with '-11408'
11407 11409 -11408 0
c Encoding variable: aux1277 with domain: int(0..2) (representing constraint (aux144 + aux150))
c Both direct and order encoding.
c Var 'aux1277' order represents '0' with '11410'
c Var 'aux1277' direct represents '0' with '11410'
c Var 'aux1277' order represents '1' with '11411'
-11410 11411 0
c Var 'aux1277' direct represents '1' with '11412'
11410 -11411 11412 0
-11412 11411 0
-11412 -11410 0
c Var 'aux1277' direct represents '2' with '-11411'
11410 11412 -11411 0
c Encoding variable: aux1278 with domain: int(0..2) (representing constraint (aux149 + aux146))
c Both direct and order encoding.
c Var 'aux1278' order represents '0' with '11413'
c Var 'aux1278' direct represents '0' with '11413'
c Var 'aux1278' order represents '1' with '11414'
-11413 11414 0
c Var 'aux1278' direct represents '1' with '11415'
11413 -11414 11415 0
-11415 11414 0
-11415 -11413 0
c Var 'aux1278' direct represents '2' with '-11414'
11413 11415 -11414 0
c Encoding variable: aux1279 with domain: int(0..2) (representing constraint (aux148 + aux145))
c Both direct and order encoding.
c Var 'aux1279' order represents '0' with '11416'
c Var 'aux1279' direct represents '0' with '11416'
c Var 'aux1279' order represents '1' with '11417'
-11416 11417 0
c Var 'aux1279' direct represents '1' with '11418'
11416 -11417 11418 0
-11418 11417 0
-11418 -11416 0
c Var 'aux1279' direct represents '2' with '-11417'
11416 11418 -11417 0
c Encoding variable: aux1280 with domain: int(0..4) (representing constraint (aux1277 + aux1279))
c Both direct and order encoding.
c Var 'aux1280' order represents '0' with '11419'
c Var 'aux1280' direct represents '0' with '11419'
c Var 'aux1280' order represents '1' with '11420'
-11419 11420 0
c Var 'aux1280' direct represents '1' with '11421'
11419 -11420 11421 0
-11421 11420 0
-11421 -11419 0
c Var 'aux1280' order represents '2' with '11422'
-11420 11422 0
c Var 'aux1280' direct represents '2' with '11423'
11420 -11422 11423 0
-11423 11422 0
-11423 -11420 0
c Var 'aux1280' order represents '3' with '11424'
-11422 11424 0
c Var 'aux1280' direct represents '3' with '11425'
11422 -11424 11425 0
-11425 11424 0
-11425 -11422 0
c Var 'aux1280' direct represents '4' with '-11424'
11419 11421 11423 11425 -11424 0
c Encoding variable: aux1281 with domain: int(0..4) (representing constraint (aux1276 + aux1278))
c Both direct and order encoding.
c Var 'aux1281' order represents '0' with '11426'
c Var 'aux1281' direct represents '0' with '11426'
c Var 'aux1281' order represents '1' with '11427'
-11426 11427 0
c Var 'aux1281' direct represents '1' with '11428'
11426 -11427 11428 0
-11428 11427 0
-11428 -11426 0
c Var 'aux1281' order represents '2' with '11429'
-11427 11429 0
c Var 'aux1281' direct represents '2' with '11430'
11427 -11429 11430 0
-11430 11429 0
-11430 -11427 0
c Var 'aux1281' order represents '3' with '11431'
-11429 11431 0
c Var 'aux1281' direct represents '3' with '11432'
11429 -11431 11432 0
-11432 11431 0
-11432 -11429 0
c Var 'aux1281' direct represents '4' with '-11431'
11426 11428 11430 11432 -11431 0
c Encoding variable: aux1282 with domain: bool (representing constraint (shift(true, -1) + aux155))
c Var 'aux1282' direct represents '0' with '-11433'
c Var 'aux1282' direct represents '1' with '11433'
c Var 'aux1282' order represents '1' with '1'
c Var 'aux1282' order represents '0' with '-11433'
c Encoding variable: aux1283 with domain: int(0..2) (representing constraint (aux159 + aux1282))
c Both direct and order encoding.
c Var 'aux1283' order represents '0' with '11434'
c Var 'aux1283' direct represents '0' with '11434'
c Var 'aux1283' order represents '1' with '11435'
-11434 11435 0
c Var 'aux1283' direct represents '1' with '11436'
11434 -11435 11436 0
-11436 11435 0
-11436 -11434 0
c Var 'aux1283' direct represents '2' with '-11435'
11434 11436 -11435 0
c Encoding variable: aux1284 with domain: int(0..2) (representing constraint (aux152 + aux158))
c Both direct and order encoding.
c Var 'aux1284' order represents '0' with '11437'
c Var 'aux1284' direct represents '0' with '11437'
c Var 'aux1284' order represents '1' with '11438'
-11437 11438 0
c Var 'aux1284' direct represents '1' with '11439'
11437 -11438 11439 0
-11439 11438 0
-11439 -11437 0
c Var 'aux1284' direct represents '2' with '-11438'
11437 11439 -11438 0
c Encoding variable: aux1285 with domain: int(0..2) (representing constraint (aux157 + aux154))
c Both direct and order encoding.
c Var 'aux1285' order represents '0' with '11440'
c Var 'aux1285' direct represents '0' with '11440'
c Var 'aux1285' order represents '1' with '11441'
-11440 11441 0
c Var 'aux1285' direct represents '1' with '11442'
11440 -11441 11442 0
-11442 11441 0
-11442 -11440 0
c Var 'aux1285' direct represents '2' with '-11441'
11440 11442 -11441 0
c Encoding variable: aux1286 with domain: int(0..2) (representing constraint (aux156 + aux153))
c Both direct and order encoding.
c Var 'aux1286' order represents '0' with '11443'
c Var 'aux1286' direct represents '0' with '11443'
c Var 'aux1286' order represents '1' with '11444'
-11443 11444 0
c Var 'aux1286' direct represents '1' with '11445'
11443 -11444 11445 0
-11445 11444 0
-11445 -11443 0
c Var 'aux1286' direct represents '2' with '-11444'
11443 11445 -11444 0
c Encoding variable: aux1287 with domain: int(0..4) (representing constraint (aux1284 + aux1286))
c Both direct and order encoding.
c Var 'aux1287' order represents '0' with '11446'
c Var 'aux1287' direct represents '0' with '11446'
c Var 'aux1287' order represents '1' with '11447'
-11446 11447 0
c Var 'aux1287' direct represents '1' with '11448'
11446 -11447 11448 0
-11448 11447 0
-11448 -11446 0
c Var 'aux1287' order represents '2' with '11449'
-11447 11449 0
c Var 'aux1287' direct represents '2' with '11450'
11447 -11449 11450 0
-11450 11449 0
-11450 -11447 0
c Var 'aux1287' order represents '3' with '11451'
-11449 11451 0
c Var 'aux1287' direct represents '3' with '11452'
11449 -11451 11452 0
-11452 11451 0
-11452 -11449 0
c Var 'aux1287' direct represents '4' with '-11451'
11446 11448 11450 11452 -11451 0
c Encoding variable: aux1288 with domain: int(0..4) (representing constraint (aux1283 + aux1285))
c Both direct and order encoding.
c Var 'aux1288' order represents '0' with '11453'
c Var 'aux1288' direct represents '0' with '11453'
c Var 'aux1288' order represents '1' with '11454'
-11453 11454 0
c Var 'aux1288' direct represents '1' with '11455'
11453 -11454 11455 0
-11455 11454 0
-11455 -11453 0
c Var 'aux1288' order represents '2' with '11456'
-11454 11456 0
c Var 'aux1288' direct represents '2' with '11457'
11454 -11456 11457 0
-11457 11456 0
-11457 -11454 0
c Var 'aux1288' order represents '3' with '11458'
-11456 11458 0
c Var 'aux1288' direct represents '3' with '11459'
11456 -11458 11459 0
-11459 11458 0
-11459 -11456 0
c Var 'aux1288' direct represents '4' with '-11458'
11453 11455 11457 11459 -11458 0
c Encoding variable: aux1289 with domain: bool (representing constraint (shift(true, -1) + aux163))
c Var 'aux1289' direct represents '0' with '-11460'
c Var 'aux1289' direct represents '1' with '11460'
c Var 'aux1289' order represents '1' with '1'
c Var 'aux1289' order represents '0' with '-11460'
c Encoding variable: aux1290 with domain: int(0..2) (representing constraint (aux167 + aux1289))
c Both direct and order encoding.
c Var 'aux1290' order represents '0' with '11461'
c Var 'aux1290' direct represents '0' with '11461'
c Var 'aux1290' order represents '1' with '11462'
-11461 11462 0
c Var 'aux1290' direct represents '1' with '11463'
11461 -11462 11463 0
-11463 11462 0
-11463 -11461 0
c Var 'aux1290' direct represents '2' with '-11462'
11461 11463 -11462 0
c Encoding variable: aux1291 with domain: int(0..2) (representing constraint (aux160 + aux166))
c Both direct and order encoding.
c Var 'aux1291' order represents '0' with '11464'
c Var 'aux1291' direct represents '0' with '11464'
c Var 'aux1291' order represents '1' with '11465'
-11464 11465 0
c Var 'aux1291' direct represents '1' with '11466'
11464 -11465 11466 0
-11466 11465 0
-11466 -11464 0
c Var 'aux1291' direct represents '2' with '-11465'
11464 11466 -11465 0
c Encoding variable: aux1292 with domain: int(0..2) (representing constraint (aux165 + aux162))
c Both direct and order encoding.
c Var 'aux1292' order represents '0' with '11467'
c Var 'aux1292' direct represents '0' with '11467'
c Var 'aux1292' order represents '1' with '11468'
-11467 11468 0
c Var 'aux1292' direct represents '1' with '11469'
11467 -11468 11469 0
-11469 11468 0
-11469 -11467 0
c Var 'aux1292' direct represents '2' with '-11468'
11467 11469 -11468 0
c Encoding variable: aux1293 with domain: int(0..2) (representing constraint (aux164 + aux161))
c Both direct and order encoding.
c Var 'aux1293' order represents '0' with '11470'
c Var 'aux1293' direct represents '0' with '11470'
c Var 'aux1293' order represents '1' with '11471'
-11470 11471 0
c Var 'aux1293' direct represents '1' with '11472'
11470 -11471 11472 0
-11472 11471 0
-11472 -11470 0
c Var 'aux1293' direct represents '2' with '-11471'
11470 11472 -11471 0
c Encoding variable: aux1294 with domain: int(0..4) (representing constraint (aux1291 + aux1293))
c Both direct and order encoding.
c Var 'aux1294' order represents '0' with '11473'
c Var 'aux1294' direct represents '0' with '11473'
c Var 'aux1294' order represents '1' with '11474'
-11473 11474 0
c Var 'aux1294' direct represents '1' with '11475'
11473 -11474 11475 0
-11475 11474 0
-11475 -11473 0
c Var 'aux1294' order represents '2' with '11476'
-11474 11476 0
c Var 'aux1294' direct represents '2' with '11477'
11474 -11476 11477 0
-11477 11476 0
-11477 -11474 0
c Var 'aux1294' order represents '3' with '11478'
-11476 11478 0
c Var 'aux1294' direct represents '3' with '11479'
11476 -11478 11479 0
-11479 11478 0
-11479 -11476 0
c Var 'aux1294' direct represents '4' with '-11478'
11473 11475 11477 11479 -11478 0
c Encoding variable: aux1295 with domain: int(0..4) (representing constraint (aux1290 + aux1292))
c Both direct and order encoding.
c Var 'aux1295' order represents '0' with '11480'
c Var 'aux1295' direct represents '0' with '11480'
c Var 'aux1295' order represents '1' with '11481'
-11480 11481 0
c Var 'aux1295' direct represents '1' with '11482'
11480 -11481 11482 0
-11482 11481 0
-11482 -11480 0
c Var 'aux1295' order represents '2' with '11483'
-11481 11483 0
c Var 'aux1295' direct represents '2' with '11484'
11481 -11483 11484 0
-11484 11483 0
-11484 -11481 0
c Var 'aux1295' order represents '3' with '11485'
-11483 11485 0
c Var 'aux1295' direct represents '3' with '11486'
11483 -11485 11486 0
-11486 11485 0
-11486 -11483 0
c Var 'aux1295' direct represents '4' with '-11485'
11480 11482 11484 11486 -11485 0
c Encoding variable: aux1296 with domain: bool (representing constraint (shift(true, -1) + aux171))
c Var 'aux1296' direct represents '0' with '-11487'
c Var 'aux1296' direct represents '1' with '11487'
c Var 'aux1296' order represents '1' with '1'
c Var 'aux1296' order represents '0' with '-11487'
c Encoding variable: aux1297 with domain: int(0..2) (representing constraint (aux175 + aux1296))
c Both direct and order encoding.
c Var 'aux1297' order represents '0' with '11488'
c Var 'aux1297' direct represents '0' with '11488'
c Var 'aux1297' order represents '1' with '11489'
-11488 11489 0
c Var 'aux1297' direct represents '1' with '11490'
11488 -11489 11490 0
-11490 11489 0
-11490 -11488 0
c Var 'aux1297' direct represents '2' with '-11489'
11488 11490 -11489 0
c Encoding variable: aux1298 with domain: int(0..2) (representing constraint (aux168 + aux174))
c Both direct and order encoding.
c Var 'aux1298' order represents '0' with '11491'
c Var 'aux1298' direct represents '0' with '11491'
c Var 'aux1298' order represents '1' with '11492'
-11491 11492 0
c Var 'aux1298' direct represents '1' with '11493'
11491 -11492 11493 0
-11493 11492 0
-11493 -11491 0
c Var 'aux1298' direct represents '2' with '-11492'
11491 11493 -11492 0
c Encoding variable: aux1299 with domain: int(0..2) (representing constraint (aux173 + aux170))
c Both direct and order encoding.
c Var 'aux1299' order represents '0' with '11494'
c Var 'aux1299' direct represents '0' with '11494'
c Var 'aux1299' order represents '1' with '11495'
-11494 11495 0
c Var 'aux1299' direct represents '1' with '11496'
11494 -11495 11496 0
-11496 11495 0
-11496 -11494 0
c Var 'aux1299' direct represents '2' with '-11495'
11494 11496 -11495 0
c Encoding variable: aux1300 with domain: int(0..2) (representing constraint (aux172 + aux169))
c Both direct and order encoding.
c Var 'aux1300' order represents '0' with '11497'
c Var 'aux1300' direct represents '0' with '11497'
c Var 'aux1300' order represents '1' with '11498'
-11497 11498 0
c Var 'aux1300' direct represents '1' with '11499'
11497 -11498 11499 0
-11499 11498 0
-11499 -11497 0
c Var 'aux1300' direct represents '2' with '-11498'
11497 11499 -11498 0
c Encoding variable: aux1301 with domain: int(0..4) (representing constraint (aux1298 + aux1300))
c Both direct and order encoding.
c Var 'aux1301' order represents '0' with '11500'
c Var 'aux1301' direct represents '0' with '11500'
c Var 'aux1301' order represents '1' with '11501'
-11500 11501 0
c Var 'aux1301' direct represents '1' with '11502'
11500 -11501 11502 0
-11502 11501 0
-11502 -11500 0
c Var 'aux1301' order represents '2' with '11503'
-11501 11503 0
c Var 'aux1301' direct represents '2' with '11504'
11501 -11503 11504 0
-11504 11503 0
-11504 -11501 0
c Var 'aux1301' order represents '3' with '11505'
-11503 11505 0
c Var 'aux1301' direct represents '3' with '11506'
11503 -11505 11506 0
-11506 11505 0
-11506 -11503 0
c Var 'aux1301' direct represents '4' with '-11505'
11500 11502 11504 11506 -11505 0
c Encoding variable: aux1302 with domain: int(0..4) (representing constraint (aux1297 + aux1299))
c Both direct and order encoding.
c Var 'aux1302' order represents '0' with '11507'
c Var 'aux1302' direct represents '0' with '11507'
c Var 'aux1302' order represents '1' with '11508'
-11507 11508 0
c Var 'aux1302' direct represents '1' with '11509'
11507 -11508 11509 0
-11509 11508 0
-11509 -11507 0
c Var 'aux1302' order represents '2' with '11510'
-11508 11510 0
c Var 'aux1302' direct represents '2' with '11511'
11508 -11510 11511 0
-11511 11510 0
-11511 -11508 0
c Var 'aux1302' order represents '3' with '11512'
-11510 11512 0
c Var 'aux1302' direct represents '3' with '11513'
11510 -11512 11513 0
-11513 11512 0
-11513 -11510 0
c Var 'aux1302' direct represents '4' with '-11512'
11507 11509 11511 11513 -11512 0
c Encoding variable: aux1303 with domain: bool (representing constraint (shift(true, -1) + aux179))
c Var 'aux1303' direct represents '0' with '-11514'
c Var 'aux1303' direct represents '1' with '11514'
c Var 'aux1303' order represents '1' with '1'
c Var 'aux1303' order represents '0' with '-11514'
c Encoding variable: aux1304 with domain: int(0..2) (representing constraint (aux183 + aux1303))
c Both direct and order encoding.
c Var 'aux1304' order represents '0' with '11515'
c Var 'aux1304' direct represents '0' with '11515'
c Var 'aux1304' order represents '1' with '11516'
-11515 11516 0
c Var 'aux1304' direct represents '1' with '11517'
11515 -11516 11517 0
-11517 11516 0
-11517 -11515 0
c Var 'aux1304' direct represents '2' with '-11516'
11515 11517 -11516 0
c Encoding variable: aux1305 with domain: int(0..2) (representing constraint (aux176 + aux182))
c Both direct and order encoding.
c Var 'aux1305' order represents '0' with '11518'
c Var 'aux1305' direct represents '0' with '11518'
c Var 'aux1305' order represents '1' with '11519'
-11518 11519 0
c Var 'aux1305' direct represents '1' with '11520'
11518 -11519 11520 0
-11520 11519 0
-11520 -11518 0
c Var 'aux1305' direct represents '2' with '-11519'
11518 11520 -11519 0
c Encoding variable: aux1306 with domain: int(0..2) (representing constraint (aux181 + aux178))
c Both direct and order encoding.
c Var 'aux1306' order represents '0' with '11521'
c Var 'aux1306' direct represents '0' with '11521'
c Var 'aux1306' order represents '1' with '11522'
-11521 11522 0
c Var 'aux1306' direct represents '1' with '11523'
11521 -11522 11523 0
-11523 11522 0
-11523 -11521 0
c Var 'aux1306' direct represents '2' with '-11522'
11521 11523 -11522 0
c Encoding variable: aux1307 with domain: int(0..2) (representing constraint (aux180 + aux177))
c Both direct and order encoding.
c Var 'aux1307' order represents '0' with '11524'
c Var 'aux1307' direct represents '0' with '11524'
c Var 'aux1307' order represents '1' with '11525'
-11524 11525 0
c Var 'aux1307' direct represents '1' with '11526'
11524 -11525 11526 0
-11526 11525 0
-11526 -11524 0
c Var 'aux1307' direct represents '2' with '-11525'
11524 11526 -11525 0
c Encoding variable: aux1308 with domain: int(0..4) (representing constraint (aux1305 + aux1307))
c Both direct and order encoding.
c Var 'aux1308' order represents '0' with '11527'
c Var 'aux1308' direct represents '0' with '11527'
c Var 'aux1308' order represents '1' with '11528'
-11527 11528 0
c Var 'aux1308' direct represents '1' with '11529'
11527 -11528 11529 0
-11529 11528 0
-11529 -11527 0
c Var 'aux1308' order represents '2' with '11530'
-11528 11530 0
c Var 'aux1308' direct represents '2' with '11531'
11528 -11530 11531 0
-11531 11530 0
-11531 -11528 0
c Var 'aux1308' order represents '3' with '11532'
-11530 11532 0
c Var 'aux1308' direct represents '3' with '11533'
11530 -11532 11533 0
-11533 11532 0
-11533 -11530 0
c Var 'aux1308' direct represents '4' with '-11532'
11527 11529 11531 11533 -11532 0
c Encoding variable: aux1309 with domain: int(0..4) (representing constraint (aux1304 + aux1306))
c Both direct and order encoding.
c Var 'aux1309' order represents '0' with '11534'
c Var 'aux1309' direct represents '0' with '11534'
c Var 'aux1309' order represents '1' with '11535'
-11534 11535 0
c Var 'aux1309' direct represents '1' with '11536'
11534 -11535 11536 0
-11536 11535 0
-11536 -11534 0
c Var 'aux1309' order represents '2' with '11537'
-11535 11537 0
c Var 'aux1309' direct represents '2' with '11538'
11535 -11537 11538 0
-11538 11537 0
-11538 -11535 0
c Var 'aux1309' order represents '3' with '11539'
-11537 11539 0
c Var 'aux1309' direct represents '3' with '11540'
11537 -11539 11540 0
-11540 11539 0
-11540 -11537 0
c Var 'aux1309' direct represents '4' with '-11539'
11534 11536 11538 11540 -11539 0
c Encoding variable: aux1310 with domain: bool (representing constraint (shift(true, -1) + aux187))
c Var 'aux1310' direct represents '0' with '-11541'
c Var 'aux1310' direct represents '1' with '11541'
c Var 'aux1310' order represents '1' with '1'
c Var 'aux1310' order represents '0' with '-11541'
c Encoding variable: aux1311 with domain: int(0..2) (representing constraint (aux191 + aux1310))
c Both direct and order encoding.
c Var 'aux1311' order represents '0' with '11542'
c Var 'aux1311' direct represents '0' with '11542'
c Var 'aux1311' order represents '1' with '11543'
-11542 11543 0
c Var 'aux1311' direct represents '1' with '11544'
11542 -11543 11544 0
-11544 11543 0
-11544 -11542 0
c Var 'aux1311' direct represents '2' with '-11543'
11542 11544 -11543 0
c Encoding variable: aux1312 with domain: int(0..2) (representing constraint (aux184 + aux190))
c Both direct and order encoding.
c Var 'aux1312' order represents '0' with '11545'
c Var 'aux1312' direct represents '0' with '11545'
c Var 'aux1312' order represents '1' with '11546'
-11545 11546 0
c Var 'aux1312' direct represents '1' with '11547'
11545 -11546 11547 0
-11547 11546 0
-11547 -11545 0
c Var 'aux1312' direct represents '2' with '-11546'
11545 11547 -11546 0
c Encoding variable: aux1313 with domain: int(0..2) (representing constraint (aux189 + aux186))
c Both direct and order encoding.
c Var 'aux1313' order represents '0' with '11548'
c Var 'aux1313' direct represents '0' with '11548'
c Var 'aux1313' order represents '1' with '11549'
-11548 11549 0
c Var 'aux1313' direct represents '1' with '11550'
11548 -11549 11550 0
-11550 11549 0
-11550 -11548 0
c Var 'aux1313' direct represents '2' with '-11549'
11548 11550 -11549 0
c Encoding variable: aux1314 with domain: int(0..2) (representing constraint (aux188 + aux185))
c Both direct and order encoding.
c Var 'aux1314' order represents '0' with '11551'
c Var 'aux1314' direct represents '0' with '11551'
c Var 'aux1314' order represents '1' with '11552'
-11551 11552 0
c Var 'aux1314' direct represents '1' with '11553'
11551 -11552 11553 0
-11553 11552 0
-11553 -11551 0
c Var 'aux1314' direct represents '2' with '-11552'
11551 11553 -11552 0
c Encoding variable: aux1315 with domain: int(0..4) (representing constraint (aux1312 + aux1314))
c Both direct and order encoding.
c Var 'aux1315' order represents '0' with '11554'
c Var 'aux1315' direct represents '0' with '11554'
c Var 'aux1315' order represents '1' with '11555'
-11554 11555 0
c Var 'aux1315' direct represents '1' with '11556'
11554 -11555 11556 0
-11556 11555 0
-11556 -11554 0
c Var 'aux1315' order represents '2' with '11557'
-11555 11557 0
c Var 'aux1315' direct represents '2' with '11558'
11555 -11557 11558 0
-11558 11557 0
-11558 -11555 0
c Var 'aux1315' order represents '3' with '11559'
-11557 11559 0
c Var 'aux1315' direct represents '3' with '11560'
11557 -11559 11560 0
-11560 11559 0
-11560 -11557 0
c Var 'aux1315' direct represents '4' with '-11559'
11554 11556 11558 11560 -11559 0
c Encoding variable: aux1316 with domain: int(0..4) (representing constraint (aux1311 + aux1313))
c Both direct and order encoding.
c Var 'aux1316' order represents '0' with '11561'
c Var 'aux1316' direct represents '0' with '11561'
c Var 'aux1316' order represents '1' with '11562'
-11561 11562 0
c Var 'aux1316' direct represents '1' with '11563'
11561 -11562 11563 0
-11563 11562 0
-11563 -11561 0
c Var 'aux1316' order represents '2' with '11564'
-11562 11564 0
c Var 'aux1316' direct represents '2' with '11565'
11562 -11564 11565 0
-11565 11564 0
-11565 -11562 0
c Var 'aux1316' order represents '3' with '11566'
-11564 11566 0
c Var 'aux1316' direct represents '3' with '11567'
11564 -11566 11567 0
-11567 11566 0
-11567 -11564 0
c Var 'aux1316' direct represents '4' with '-11566'
11561 11563 11565 11567 -11566 0
c Encoding variable: aux1317 with domain: bool (representing constraint (shift(true, -1) + aux195))
c Var 'aux1317' direct represents '0' with '-11568'
c Var 'aux1317' direct represents '1' with '11568'
c Var 'aux1317' order represents '1' with '1'
c Var 'aux1317' order represents '0' with '-11568'
c Encoding variable: aux1318 with domain: int(0..2) (representing constraint (aux199 + aux1317))
c Both direct and order encoding.
c Var 'aux1318' order represents '0' with '11569'
c Var 'aux1318' direct represents '0' with '11569'
c Var 'aux1318' order represents '1' with '11570'
-11569 11570 0
c Var 'aux1318' direct represents '1' with '11571'
11569 -11570 11571 0
-11571 11570 0
-11571 -11569 0
c Var 'aux1318' direct represents '2' with '-11570'
11569 11571 -11570 0
c Encoding variable: aux1319 with domain: int(0..2) (representing constraint (aux192 + aux198))
c Both direct and order encoding.
c Var 'aux1319' order represents '0' with '11572'
c Var 'aux1319' direct represents '0' with '11572'
c Var 'aux1319' order represents '1' with '11573'
-11572 11573 0
c Var 'aux1319' direct represents '1' with '11574'
11572 -11573 11574 0
-11574 11573 0
-11574 -11572 0
c Var 'aux1319' direct represents '2' with '-11573'
11572 11574 -11573 0
c Encoding variable: aux1320 with domain: int(0..2) (representing constraint (aux197 + aux194))
c Both direct and order encoding.
c Var 'aux1320' order represents '0' with '11575'
c Var 'aux1320' direct represents '0' with '11575'
c Var 'aux1320' order represents '1' with '11576'
-11575 11576 0
c Var 'aux1320' direct represents '1' with '11577'
11575 -11576 11577 0
-11577 11576 0
-11577 -11575 0
c Var 'aux1320' direct represents '2' with '-11576'
11575 11577 -11576 0
c Encoding variable: aux1321 with domain: int(0..2) (representing constraint (aux196 + aux193))
c Both direct and order encoding.
c Var 'aux1321' order represents '0' with '11578'
c Var 'aux1321' direct represents '0' with '11578'
c Var 'aux1321' order represents '1' with '11579'
-11578 11579 0
c Var 'aux1321' direct represents '1' with '11580'
11578 -11579 11580 0
-11580 11579 0
-11580 -11578 0
c Var 'aux1321' direct represents '2' with '-11579'
11578 11580 -11579 0
c Encoding variable: aux1322 with domain: int(0..4) (representing constraint (aux1319 + aux1321))
c Both direct and order encoding.
c Var 'aux1322' order represents '0' with '11581'
c Var 'aux1322' direct represents '0' with '11581'
c Var 'aux1322' order represents '1' with '11582'
-11581 11582 0
c Var 'aux1322' direct represents '1' with '11583'
11581 -11582 11583 0
-11583 11582 0
-11583 -11581 0
c Var 'aux1322' order represents '2' with '11584'
-11582 11584 0
c Var 'aux1322' direct represents '2' with '11585'
11582 -11584 11585 0
-11585 11584 0
-11585 -11582 0
c Var 'aux1322' order represents '3' with '11586'
-11584 11586 0
c Var 'aux1322' direct represents '3' with '11587'
11584 -11586 11587 0
-11587 11586 0
-11587 -11584 0
c Var 'aux1322' direct represents '4' with '-11586'
11581 11583 11585 11587 -11586 0
c Encoding variable: aux1323 with domain: int(0..4) (representing constraint (aux1318 + aux1320))
c Both direct and order encoding.
c Var 'aux1323' order represents '0' with '11588'
c Var 'aux1323' direct represents '0' with '11588'
c Var 'aux1323' order represents '1' with '11589'
-11588 11589 0
c Var 'aux1323' direct represents '1' with '11590'
11588 -11589 11590 0
-11590 11589 0
-11590 -11588 0
c Var 'aux1323' order represents '2' with '11591'
-11589 11591 0
c Var 'aux1323' direct represents '2' with '11592'
11589 -11591 11592 0
-11592 11591 0
-11592 -11589 0
c Var 'aux1323' order represents '3' with '11593'
-11591 11593 0
c Var 'aux1323' direct represents '3' with '11594'
11591 -11593 11594 0
-11594 11593 0
-11594 -11591 0
c Var 'aux1323' direct represents '4' with '-11593'
11588 11590 11592 11594 -11593 0
c Encoding variable: aux1324 with domain: bool (representing constraint (shift(true, -1) + aux203))
c Var 'aux1324' direct represents '0' with '-11595'
c Var 'aux1324' direct represents '1' with '11595'
c Var 'aux1324' order represents '1' with '1'
c Var 'aux1324' order represents '0' with '-11595'
c Encoding variable: aux1325 with domain: int(0..2) (representing constraint (aux207 + aux1324))
c Both direct and order encoding.
c Var 'aux1325' order represents '0' with '11596'
c Var 'aux1325' direct represents '0' with '11596'
c Var 'aux1325' order represents '1' with '11597'
-11596 11597 0
c Var 'aux1325' direct represents '1' with '11598'
11596 -11597 11598 0
-11598 11597 0
-11598 -11596 0
c Var 'aux1325' direct represents '2' with '-11597'
11596 11598 -11597 0
c Encoding variable: aux1326 with domain: int(0..2) (representing constraint (aux200 + aux206))
c Both direct and order encoding.
c Var 'aux1326' order represents '0' with '11599'
c Var 'aux1326' direct represents '0' with '11599'
c Var 'aux1326' order represents '1' with '11600'
-11599 11600 0
c Var 'aux1326' direct represents '1' with '11601'
11599 -11600 11601 0
-11601 11600 0
-11601 -11599 0
c Var 'aux1326' direct represents '2' with '-11600'
11599 11601 -11600 0
c Encoding variable: aux1327 with domain: int(0..2) (representing constraint (aux205 + aux202))
c Both direct and order encoding.
c Var 'aux1327' order represents '0' with '11602'
c Var 'aux1327' direct represents '0' with '11602'
c Var 'aux1327' order represents '1' with '11603'
-11602 11603 0
c Var 'aux1327' direct represents '1' with '11604'
11602 -11603 11604 0
-11604 11603 0
-11604 -11602 0
c Var 'aux1327' direct represents '2' with '-11603'
11602 11604 -11603 0
c Encoding variable: aux1328 with domain: int(0..2) (representing constraint (aux204 + aux201))
c Both direct and order encoding.
c Var 'aux1328' order represents '0' with '11605'
c Var 'aux1328' direct represents '0' with '11605'
c Var 'aux1328' order represents '1' with '11606'
-11605 11606 0
c Var 'aux1328' direct represents '1' with '11607'
11605 -11606 11607 0
-11607 11606 0
-11607 -11605 0
c Var 'aux1328' direct represents '2' with '-11606'
11605 11607 -11606 0
c Encoding variable: aux1329 with domain: int(0..4) (representing constraint (aux1326 + aux1328))
c Both direct and order encoding.
c Var 'aux1329' order represents '0' with '11608'
c Var 'aux1329' direct represents '0' with '11608'
c Var 'aux1329' order represents '1' with '11609'
-11608 11609 0
c Var 'aux1329' direct represents '1' with '11610'
11608 -11609 11610 0
-11610 11609 0
-11610 -11608 0
c Var 'aux1329' order represents '2' with '11611'
-11609 11611 0
c Var 'aux1329' direct represents '2' with '11612'
11609 -11611 11612 0
-11612 11611 0
-11612 -11609 0
c Var 'aux1329' order represents '3' with '11613'
-11611 11613 0
c Var 'aux1329' direct represents '3' with '11614'
11611 -11613 11614 0
-11614 11613 0
-11614 -11611 0
c Var 'aux1329' direct represents '4' with '-11613'
11608 11610 11612 11614 -11613 0
c Encoding variable: aux1330 with domain: int(0..4) (representing constraint (aux1325 + aux1327))
c Both direct and order encoding.
c Var 'aux1330' order represents '0' with '11615'
c Var 'aux1330' direct represents '0' with '11615'
c Var 'aux1330' order represents '1' with '11616'
-11615 11616 0
c Var 'aux1330' direct represents '1' with '11617'
11615 -11616 11617 0
-11617 11616 0
-11617 -11615 0
c Var 'aux1330' order represents '2' with '11618'
-11616 11618 0
c Var 'aux1330' direct represents '2' with '11619'
11616 -11618 11619 0
-11619 11618 0
-11619 -11616 0
c Var 'aux1330' order represents '3' with '11620'
-11618 11620 0
c Var 'aux1330' direct represents '3' with '11621'
11618 -11620 11621 0
-11621 11620 0
-11621 -11618 0
c Var 'aux1330' direct represents '4' with '-11620'
11615 11617 11619 11621 -11620 0
c Encoding variable: aux1331 with domain: bool (representing constraint (shift(true, -1) + aux211))
c Var 'aux1331' direct represents '0' with '-11622'
c Var 'aux1331' direct represents '1' with '11622'
c Var 'aux1331' order represents '1' with '1'
c Var 'aux1331' order represents '0' with '-11622'
c Encoding variable: aux1332 with domain: int(0..2) (representing constraint (aux215 + aux1331))
c Both direct and order encoding.
c Var 'aux1332' order represents '0' with '11623'
c Var 'aux1332' direct represents '0' with '11623'
c Var 'aux1332' order represents '1' with '11624'
-11623 11624 0
c Var 'aux1332' direct represents '1' with '11625'
11623 -11624 11625 0
-11625 11624 0
-11625 -11623 0
c Var 'aux1332' direct represents '2' with '-11624'
11623 11625 -11624 0
c Encoding variable: aux1333 with domain: int(0..2) (representing constraint (aux208 + aux214))
c Both direct and order encoding.
c Var 'aux1333' order represents '0' with '11626'
c Var 'aux1333' direct represents '0' with '11626'
c Var 'aux1333' order represents '1' with '11627'
-11626 11627 0
c Var 'aux1333' direct represents '1' with '11628'
11626 -11627 11628 0
-11628 11627 0
-11628 -11626 0
c Var 'aux1333' direct represents '2' with '-11627'
11626 11628 -11627 0
c Encoding variable: aux1334 with domain: int(0..2) (representing constraint (aux213 + aux210))
c Both direct and order encoding.
c Var 'aux1334' order represents '0' with '11629'
c Var 'aux1334' direct represents '0' with '11629'
c Var 'aux1334' order represents '1' with '11630'
-11629 11630 0
c Var 'aux1334' direct represents '1' with '11631'
11629 -11630 11631 0
-11631 11630 0
-11631 -11629 0
c Var 'aux1334' direct represents '2' with '-11630'
11629 11631 -11630 0
c Encoding variable: aux1335 with domain: int(0..2) (representing constraint (aux212 + aux209))
c Both direct and order encoding.
c Var 'aux1335' order represents '0' with '11632'
c Var 'aux1335' direct represents '0' with '11632'
c Var 'aux1335' order represents '1' with '11633'
-11632 11633 0
c Var 'aux1335' direct represents '1' with '11634'
11632 -11633 11634 0
-11634 11633 0
-11634 -11632 0
c Var 'aux1335' direct represents '2' with '-11633'
11632 11634 -11633 0
c Encoding variable: aux1336 with domain: int(0..4) (representing constraint (aux1333 + aux1335))
c Both direct and order encoding.
c Var 'aux1336' order represents '0' with '11635'
c Var 'aux1336' direct represents '0' with '11635'
c Var 'aux1336' order represents '1' with '11636'
-11635 11636 0
c Var 'aux1336' direct represents '1' with '11637'
11635 -11636 11637 0
-11637 11636 0
-11637 -11635 0
c Var 'aux1336' order represents '2' with '11638'
-11636 11638 0
c Var 'aux1336' direct represents '2' with '11639'
11636 -11638 11639 0
-11639 11638 0
-11639 -11636 0
c Var 'aux1336' order represents '3' with '11640'
-11638 11640 0
c Var 'aux1336' direct represents '3' with '11641'
11638 -11640 11641 0
-11641 11640 0
-11641 -11638 0
c Var 'aux1336' direct represents '4' with '-11640'
11635 11637 11639 11641 -11640 0
c Encoding variable: aux1337 with domain: int(0..4) (representing constraint (aux1332 + aux1334))
c Both direct and order encoding.
c Var 'aux1337' order represents '0' with '11642'
c Var 'aux1337' direct represents '0' with '11642'
c Var 'aux1337' order represents '1' with '11643'
-11642 11643 0
c Var 'aux1337' direct represents '1' with '11644'
11642 -11643 11644 0
-11644 11643 0
-11644 -11642 0
c Var 'aux1337' order represents '2' with '11645'
-11643 11645 0
c Var 'aux1337' direct represents '2' with '11646'
11643 -11645 11646 0
-11646 11645 0
-11646 -11643 0
c Var 'aux1337' order represents '3' with '11647'
-11645 11647 0
c Var 'aux1337' direct represents '3' with '11648'
11645 -11647 11648 0
-11648 11647 0
-11648 -11645 0
c Var 'aux1337' direct represents '4' with '-11647'
11642 11644 11646 11648 -11647 0
c Encoding variable: aux1338 with domain: bool (representing constraint (shift(true, -1) + aux220))
c Var 'aux1338' direct represents '0' with '-11649'
c Var 'aux1338' direct represents '1' with '11649'
c Var 'aux1338' order represents '1' with '1'
c Var 'aux1338' order represents '0' with '-11649'
c Encoding variable: aux1339 with domain: int(0..2) (representing constraint (aux216 + aux1338))
c Both direct and order encoding.
c Var 'aux1339' order represents '0' with '11650'
c Var 'aux1339' direct represents '0' with '11650'
c Var 'aux1339' order represents '1' with '11651'
-11650 11651 0
c Var 'aux1339' direct represents '1' with '11652'
11650 -11651 11652 0
-11652 11651 0
-11652 -11650 0
c Var 'aux1339' direct represents '2' with '-11651'
11650 11652 -11651 0
c Encoding variable: aux1340 with domain: int(0..2) (representing constraint (aux219 + aux223))
c Both direct and order encoding.
c Var 'aux1340' order represents '0' with '11653'
c Var 'aux1340' direct represents '0' with '11653'
c Var 'aux1340' order represents '1' with '11654'
-11653 11654 0
c Var 'aux1340' direct represents '1' with '11655'
11653 -11654 11655 0
-11655 11654 0
-11655 -11653 0
c Var 'aux1340' direct represents '2' with '-11654'
11653 11655 -11654 0
c Encoding variable: aux1341 with domain: int(0..2) (representing constraint (aux222 + aux217))
c Both direct and order encoding.
c Var 'aux1341' order represents '0' with '11656'
c Var 'aux1341' direct represents '0' with '11656'
c Var 'aux1341' order represents '1' with '11657'
-11656 11657 0
c Var 'aux1341' direct represents '1' with '11658'
11656 -11657 11658 0
-11658 11657 0
-11658 -11656 0
c Var 'aux1341' direct represents '2' with '-11657'
11656 11658 -11657 0
c Encoding variable: aux1342 with domain: int(0..2) (representing constraint (aux221 + aux218))
c Both direct and order encoding.
c Var 'aux1342' order represents '0' with '11659'
c Var 'aux1342' direct represents '0' with '11659'
c Var 'aux1342' order represents '1' with '11660'
-11659 11660 0
c Var 'aux1342' direct represents '1' with '11661'
11659 -11660 11661 0
-11661 11660 0
-11661 -11659 0
c Var 'aux1342' direct represents '2' with '-11660'
11659 11661 -11660 0
c Encoding variable: aux1343 with domain: int(0..4) (representing constraint (aux1340 + aux1342))
c Both direct and order encoding.
c Var 'aux1343' order represents '0' with '11662'
c Var 'aux1343' direct represents '0' with '11662'
c Var 'aux1343' order represents '1' with '11663'
-11662 11663 0
c Var 'aux1343' direct represents '1' with '11664'
11662 -11663 11664 0
-11664 11663 0
-11664 -11662 0
c Var 'aux1343' order represents '2' with '11665'
-11663 11665 0
c Var 'aux1343' direct represents '2' with '11666'
11663 -11665 11666 0
-11666 11665 0
-11666 -11663 0
c Var 'aux1343' order represents '3' with '11667'
-11665 11667 0
c Var 'aux1343' direct represents '3' with '11668'
11665 -11667 11668 0
-11668 11667 0
-11668 -11665 0
c Var 'aux1343' direct represents '4' with '-11667'
11662 11664 11666 11668 -11667 0
c Encoding variable: aux1344 with domain: int(0..4) (representing constraint (aux1339 + aux1341))
c Both direct and order encoding.
c Var 'aux1344' order represents '0' with '11669'
c Var 'aux1344' direct represents '0' with '11669'
c Var 'aux1344' order represents '1' with '11670'
-11669 11670 0
c Var 'aux1344' direct represents '1' with '11671'
11669 -11670 11671 0
-11671 11670 0
-11671 -11669 0
c Var 'aux1344' order represents '2' with '11672'
-11670 11672 0
c Var 'aux1344' direct represents '2' with '11673'
11670 -11672 11673 0
-11673 11672 0
-11673 -11670 0
c Var 'aux1344' order represents '3' with '11674'
-11672 11674 0
c Var 'aux1344' direct represents '3' with '11675'
11672 -11674 11675 0
-11675 11674 0
-11675 -11672 0
c Var 'aux1344' direct represents '4' with '-11674'
11669 11671 11673 11675 -11674 0
c Encoding variable: aux1345 with domain: bool (representing constraint (shift(true, -1) + aux228))
c Var 'aux1345' direct represents '0' with '-11676'
c Var 'aux1345' direct represents '1' with '11676'
c Var 'aux1345' order represents '1' with '1'
c Var 'aux1345' order represents '0' with '-11676'
c Encoding variable: aux1346 with domain: int(0..2) (representing constraint (aux224 + aux1345))
c Both direct and order encoding.
c Var 'aux1346' order represents '0' with '11677'
c Var 'aux1346' direct represents '0' with '11677'
c Var 'aux1346' order represents '1' with '11678'
-11677 11678 0
c Var 'aux1346' direct represents '1' with '11679'
11677 -11678 11679 0
-11679 11678 0
-11679 -11677 0
c Var 'aux1346' direct represents '2' with '-11678'
11677 11679 -11678 0
c Encoding variable: aux1347 with domain: int(0..2) (representing constraint (aux227 + aux231))
c Both direct and order encoding.
c Var 'aux1347' order represents '0' with '11680'
c Var 'aux1347' direct represents '0' with '11680'
c Var 'aux1347' order represents '1' with '11681'
-11680 11681 0
c Var 'aux1347' direct represents '1' with '11682'
11680 -11681 11682 0
-11682 11681 0
-11682 -11680 0
c Var 'aux1347' direct represents '2' with '-11681'
11680 11682 -11681 0
c Encoding variable: aux1348 with domain: int(0..2) (representing constraint (aux230 + aux225))
c Both direct and order encoding.
c Var 'aux1348' order represents '0' with '11683'
c Var 'aux1348' direct represents '0' with '11683'
c Var 'aux1348' order represents '1' with '11684'
-11683 11684 0
c Var 'aux1348' direct represents '1' with '11685'
11683 -11684 11685 0
-11685 11684 0
-11685 -11683 0
c Var 'aux1348' direct represents '2' with '-11684'
11683 11685 -11684 0
c Encoding variable: aux1349 with domain: int(0..2) (representing constraint (aux229 + aux226))
c Both direct and order encoding.
c Var 'aux1349' order represents '0' with '11686'
c Var 'aux1349' direct represents '0' with '11686'
c Var 'aux1349' order represents '1' with '11687'
-11686 11687 0
c Var 'aux1349' direct represents '1' with '11688'
11686 -11687 11688 0
-11688 11687 0
-11688 -11686 0
c Var 'aux1349' direct represents '2' with '-11687'
11686 11688 -11687 0
c Encoding variable: aux1350 with domain: int(0..4) (representing constraint (aux1347 + aux1349))
c Both direct and order encoding.
c Var 'aux1350' order represents '0' with '11689'
c Var 'aux1350' direct represents '0' with '11689'
c Var 'aux1350' order represents '1' with '11690'
-11689 11690 0
c Var 'aux1350' direct represents '1' with '11691'
11689 -11690 11691 0
-11691 11690 0
-11691 -11689 0
c Var 'aux1350' order represents '2' with '11692'
-11690 11692 0
c Var 'aux1350' direct represents '2' with '11693'
11690 -11692 11693 0
-11693 11692 0
-11693 -11690 0
c Var 'aux1350' order represents '3' with '11694'
-11692 11694 0
c Var 'aux1350' direct represents '3' with '11695'
11692 -11694 11695 0
-11695 11694 0
-11695 -11692 0
c Var 'aux1350' direct represents '4' with '-11694'
11689 11691 11693 11695 -11694 0
c Encoding variable: aux1351 with domain: int(0..4) (representing constraint (aux1346 + aux1348))
c Both direct and order encoding.
c Var 'aux1351' order represents '0' with '11696'
c Var 'aux1351' direct represents '0' with '11696'
c Var 'aux1351' order represents '1' with '11697'
-11696 11697 0
c Var 'aux1351' direct represents '1' with '11698'
11696 -11697 11698 0
-11698 11697 0
-11698 -11696 0
c Var 'aux1351' order represents '2' with '11699'
-11697 11699 0
c Var 'aux1351' direct represents '2' with '11700'
11697 -11699 11700 0
-11700 11699 0
-11700 -11697 0
c Var 'aux1351' order represents '3' with '11701'
-11699 11701 0
c Var 'aux1351' direct represents '3' with '11702'
11699 -11701 11702 0
-11702 11701 0
-11702 -11699 0
c Var 'aux1351' direct represents '4' with '-11701'
11696 11698 11700 11702 -11701 0
c Encoding variable: aux1352 with domain: bool (representing constraint (shift(true, -1) + aux236))
c Var 'aux1352' direct represents '0' with '-11703'
c Var 'aux1352' direct represents '1' with '11703'
c Var 'aux1352' order represents '1' with '1'
c Var 'aux1352' order represents '0' with '-11703'
c Encoding variable: aux1353 with domain: int(0..2) (representing constraint (aux232 + aux1352))
c Both direct and order encoding.
c Var 'aux1353' order represents '0' with '11704'
c Var 'aux1353' direct represents '0' with '11704'
c Var 'aux1353' order represents '1' with '11705'
-11704 11705 0
c Var 'aux1353' direct represents '1' with '11706'
11704 -11705 11706 0
-11706 11705 0
-11706 -11704 0
c Var 'aux1353' direct represents '2' with '-11705'
11704 11706 -11705 0
c Encoding variable: aux1354 with domain: int(0..2) (representing constraint (aux235 + aux239))
c Both direct and order encoding.
c Var 'aux1354' order represents '0' with '11707'
c Var 'aux1354' direct represents '0' with '11707'
c Var 'aux1354' order represents '1' with '11708'
-11707 11708 0
c Var 'aux1354' direct represents '1' with '11709'
11707 -11708 11709 0
-11709 11708 0
-11709 -11707 0
c Var 'aux1354' direct represents '2' with '-11708'
11707 11709 -11708 0
c Encoding variable: aux1355 with domain: int(0..2) (representing constraint (aux238 + aux233))
c Both direct and order encoding.
c Var 'aux1355' order represents '0' with '11710'
c Var 'aux1355' direct represents '0' with '11710'
c Var 'aux1355' order represents '1' with '11711'
-11710 11711 0
c Var 'aux1355' direct represents '1' with '11712'
11710 -11711 11712 0
-11712 11711 0
-11712 -11710 0
c Var 'aux1355' direct represents '2' with '-11711'
11710 11712 -11711 0
c Encoding variable: aux1356 with domain: int(0..2) (representing constraint (aux237 + aux234))
c Both direct and order encoding.
c Var 'aux1356' order represents '0' with '11713'
c Var 'aux1356' direct represents '0' with '11713'
c Var 'aux1356' order represents '1' with '11714'
-11713 11714 0
c Var 'aux1356' direct represents '1' with '11715'
11713 -11714 11715 0
-11715 11714 0
-11715 -11713 0
c Var 'aux1356' direct represents '2' with '-11714'
11713 11715 -11714 0
c Encoding variable: aux1357 with domain: int(0..4) (representing constraint (aux1354 + aux1356))
c Both direct and order encoding.
c Var 'aux1357' order represents '0' with '11716'
c Var 'aux1357' direct represents '0' with '11716'
c Var 'aux1357' order represents '1' with '11717'
-11716 11717 0
c Var 'aux1357' direct represents '1' with '11718'
11716 -11717 11718 0
-11718 11717 0
-11718 -11716 0
c Var 'aux1357' order represents '2' with '11719'
-11717 11719 0
c Var 'aux1357' direct represents '2' with '11720'
11717 -11719 11720 0
-11720 11719 0
-11720 -11717 0
c Var 'aux1357' order represents '3' with '11721'
-11719 11721 0
c Var 'aux1357' direct represents '3' with '11722'
11719 -11721 11722 0
-11722 11721 0
-11722 -11719 0
c Var 'aux1357' direct represents '4' with '-11721'
11716 11718 11720 11722 -11721 0
c Encoding variable: aux1358 with domain: int(0..4) (representing constraint (aux1353 + aux1355))
c Both direct and order encoding.
c Var 'aux1358' order represents '0' with '11723'
c Var 'aux1358' direct represents '0' with '11723'
c Var 'aux1358' order represents '1' with '11724'
-11723 11724 0
c Var 'aux1358' direct represents '1' with '11725'
11723 -11724 11725 0
-11725 11724 0
-11725 -11723 0
c Var 'aux1358' order represents '2' with '11726'
-11724 11726 0
c Var 'aux1358' direct represents '2' with '11727'
11724 -11726 11727 0
-11727 11726 0
-11727 -11724 0
c Var 'aux1358' order represents '3' with '11728'
-11726 11728 0
c Var 'aux1358' direct represents '3' with '11729'
11726 -11728 11729 0
-11729 11728 0
-11729 -11726 0
c Var 'aux1358' direct represents '4' with '-11728'
11723 11725 11727 11729 -11728 0
c Encoding variable: aux1359 with domain: bool (representing constraint (shift(true, -1) + aux244))
c Var 'aux1359' direct represents '0' with '-11730'
c Var 'aux1359' direct represents '1' with '11730'
c Var 'aux1359' order represents '1' with '1'
c Var 'aux1359' order represents '0' with '-11730'
c Encoding variable: aux1360 with domain: int(0..2) (representing constraint (aux240 + aux1359))
c Both direct and order encoding.
c Var 'aux1360' order represents '0' with '11731'
c Var 'aux1360' direct represents '0' with '11731'
c Var 'aux1360' order represents '1' with '11732'
-11731 11732 0
c Var 'aux1360' direct represents '1' with '11733'
11731 -11732 11733 0
-11733 11732 0
-11733 -11731 0
c Var 'aux1360' direct represents '2' with '-11732'
11731 11733 -11732 0
c Encoding variable: aux1361 with domain: int(0..2) (representing constraint (aux243 + aux247))
c Both direct and order encoding.
c Var 'aux1361' order represents '0' with '11734'
c Var 'aux1361' direct represents '0' with '11734'
c Var 'aux1361' order represents '1' with '11735'
-11734 11735 0
c Var 'aux1361' direct represents '1' with '11736'
11734 -11735 11736 0
-11736 11735 0
-11736 -11734 0
c Var 'aux1361' direct represents '2' with '-11735'
11734 11736 -11735 0
c Encoding variable: aux1362 with domain: int(0..2) (representing constraint (aux246 + aux241))
c Both direct and order encoding.
c Var 'aux1362' order represents '0' with '11737'
c Var 'aux1362' direct represents '0' with '11737'
c Var 'aux1362' order represents '1' with '11738'
-11737 11738 0
c Var 'aux1362' direct represents '1' with '11739'
11737 -11738 11739 0
-11739 11738 0
-11739 -11737 0
c Var 'aux1362' direct represents '2' with '-11738'
11737 11739 -11738 0
c Encoding variable: aux1363 with domain: int(0..2) (representing constraint (aux245 + aux242))
c Both direct and order encoding.
c Var 'aux1363' order represents '0' with '11740'
c Var 'aux1363' direct represents '0' with '11740'
c Var 'aux1363' order represents '1' with '11741'
-11740 11741 0
c Var 'aux1363' direct represents '1' with '11742'
11740 -11741 11742 0
-11742 11741 0
-11742 -11740 0
c Var 'aux1363' direct represents '2' with '-11741'
11740 11742 -11741 0
c Encoding variable: aux1364 with domain: int(0..4) (representing constraint (aux1361 + aux1363))
c Both direct and order encoding.
c Var 'aux1364' order represents '0' with '11743'
c Var 'aux1364' direct represents '0' with '11743'
c Var 'aux1364' order represents '1' with '11744'
-11743 11744 0
c Var 'aux1364' direct represents '1' with '11745'
11743 -11744 11745 0
-11745 11744 0
-11745 -11743 0
c Var 'aux1364' order represents '2' with '11746'
-11744 11746 0
c Var 'aux1364' direct represents '2' with '11747'
11744 -11746 11747 0
-11747 11746 0
-11747 -11744 0
c Var 'aux1364' order represents '3' with '11748'
-11746 11748 0
c Var 'aux1364' direct represents '3' with '11749'
11746 -11748 11749 0
-11749 11748 0
-11749 -11746 0
c Var 'aux1364' direct represents '4' with '-11748'
11743 11745 11747 11749 -11748 0
c Encoding variable: aux1365 with domain: int(0..4) (representing constraint (aux1360 + aux1362))
c Both direct and order encoding.
c Var 'aux1365' order represents '0' with '11750'
c Var 'aux1365' direct represents '0' with '11750'
c Var 'aux1365' order represents '1' with '11751'
-11750 11751 0
c Var 'aux1365' direct represents '1' with '11752'
11750 -11751 11752 0
-11752 11751 0
-11752 -11750 0
c Var 'aux1365' order represents '2' with '11753'
-11751 11753 0
c Var 'aux1365' direct represents '2' with '11754'
11751 -11753 11754 0
-11754 11753 0
-11754 -11751 0
c Var 'aux1365' order represents '3' with '11755'
-11753 11755 0
c Var 'aux1365' direct represents '3' with '11756'
11753 -11755 11756 0
-11756 11755 0
-11756 -11753 0
c Var 'aux1365' direct represents '4' with '-11755'
11750 11752 11754 11756 -11755 0
c Encoding variable: aux1366 with domain: bool (representing constraint (shift(2, -2) + aux251))
c Var 'aux1366' direct represents '0' with '-11757'
c Var 'aux1366' direct represents '1' with '11757'
c Var 'aux1366' order represents '1' with '1'
c Var 'aux1366' order represents '0' with '-11757'
c Encoding variable: aux1367 with domain: int(0..2) (representing constraint (aux248 + aux249))
c Both direct and order encoding.
c Var 'aux1367' order represents '0' with '11758'
c Var 'aux1367' direct represents '0' with '11758'
c Var 'aux1367' order represents '1' with '11759'
-11758 11759 0
c Var 'aux1367' direct represents '1' with '11760'
11758 -11759 11760 0
-11760 11759 0
-11760 -11758 0
c Var 'aux1367' direct represents '2' with '-11759'
11758 11760 -11759 0
c Encoding variable: aux1368 with domain: int(0..2) (representing constraint (aux254 + aux1366))
c Both direct and order encoding.
c Var 'aux1368' order represents '0' with '11761'
c Var 'aux1368' direct represents '0' with '11761'
c Var 'aux1368' order represents '1' with '11762'
-11761 11762 0
c Var 'aux1368' direct represents '1' with '11763'
11761 -11762 11763 0
-11763 11762 0
-11763 -11761 0
c Var 'aux1368' direct represents '2' with '-11762'
11761 11763 -11762 0
c Encoding variable: aux1369 with domain: int(0..2) (representing constraint (aux253 + aux252))
c Both direct and order encoding.
c Var 'aux1369' order represents '0' with '11764'
c Var 'aux1369' direct represents '0' with '11764'
c Var 'aux1369' order represents '1' with '11765'
-11764 11765 0
c Var 'aux1369' direct represents '1' with '11766'
11764 -11765 11766 0
-11766 11765 0
-11766 -11764 0
c Var 'aux1369' direct represents '2' with '-11765'
11764 11766 -11765 0
c Encoding variable: aux1370 with domain: int(0..3) (representing constraint (aux250 + aux1369))
c Both direct and order encoding.
c Var 'aux1370' order represents '0' with '11767'
c Var 'aux1370' direct represents '0' with '11767'
c Var 'aux1370' order represents '1' with '11768'
-11767 11768 0
c Var 'aux1370' direct represents '1' with '11769'
11767 -11768 11769 0
-11769 11768 0
-11769 -11767 0
c Var 'aux1370' order represents '2' with '11770'
-11768 11770 0
c Var 'aux1370' direct represents '2' with '11771'
11768 -11770 11771 0
-11771 11770 0
-11771 -11768 0
c Var 'aux1370' direct represents '3' with '-11770'
11767 11769 11771 -11770 0
c Encoding variable: aux1371 with domain: int(0..4) (representing constraint (aux1368 + aux1367))
c Both direct and order encoding.
c Var 'aux1371' order represents '0' with '11772'
c Var 'aux1371' direct represents '0' with '11772'
c Var 'aux1371' order represents '1' with '11773'
-11772 11773 0
c Var 'aux1371' direct represents '1' with '11774'
11772 -11773 11774 0
-11774 11773 0
-11774 -11772 0
c Var 'aux1371' order represents '2' with '11775'
-11773 11775 0
c Var 'aux1371' direct represents '2' with '11776'
11773 -11775 11776 0
-11776 11775 0
-11776 -11773 0
c Var 'aux1371' order represents '3' with '11777'
-11775 11777 0
c Var 'aux1371' direct represents '3' with '11778'
11775 -11777 11778 0
-11778 11777 0
-11778 -11775 0
c Var 'aux1371' direct represents '4' with '-11777'
11772 11774 11776 11778 -11777 0
c Encoding variable: aux1372 with domain: bool (representing constraint (shift(true, -1) + aux259))
c Var 'aux1372' direct represents '0' with '-11779'
c Var 'aux1372' direct represents '1' with '11779'
c Var 'aux1372' order represents '1' with '1'
c Var 'aux1372' order represents '0' with '-11779'
c Encoding variable: aux1373 with domain: int(0..2) (representing constraint (aux255 + aux1372))
c Both direct and order encoding.
c Var 'aux1373' order represents '0' with '11780'
c Var 'aux1373' direct represents '0' with '11780'
c Var 'aux1373' order represents '1' with '11781'
-11780 11781 0
c Var 'aux1373' direct represents '1' with '11782'
11780 -11781 11782 0
-11782 11781 0
-11782 -11780 0
c Var 'aux1373' direct represents '2' with '-11781'
11780 11782 -11781 0
c Encoding variable: aux1374 with domain: int(0..2) (representing constraint (aux258 + aux262))
c Both direct and order encoding.
c Var 'aux1374' order represents '0' with '11783'
c Var 'aux1374' direct represents '0' with '11783'
c Var 'aux1374' order represents '1' with '11784'
-11783 11784 0
c Var 'aux1374' direct represents '1' with '11785'
11783 -11784 11785 0
-11785 11784 0
-11785 -11783 0
c Var 'aux1374' direct represents '2' with '-11784'
11783 11785 -11784 0
c Encoding variable: aux1375 with domain: int(0..2) (representing constraint (aux261 + aux256))
c Both direct and order encoding.
c Var 'aux1375' order represents '0' with '11786'
c Var 'aux1375' direct represents '0' with '11786'
c Var 'aux1375' order represents '1' with '11787'
-11786 11787 0
c Var 'aux1375' direct represents '1' with '11788'
11786 -11787 11788 0
-11788 11787 0
-11788 -11786 0
c Var 'aux1375' direct represents '2' with '-11787'
11786 11788 -11787 0
c Encoding variable: aux1376 with domain: int(0..2) (representing constraint (aux260 + aux257))
c Both direct and order encoding.
c Var 'aux1376' order represents '0' with '11789'
c Var 'aux1376' direct represents '0' with '11789'
c Var 'aux1376' order represents '1' with '11790'
-11789 11790 0
c Var 'aux1376' direct represents '1' with '11791'
11789 -11790 11791 0
-11791 11790 0
-11791 -11789 0
c Var 'aux1376' direct represents '2' with '-11790'
11789 11791 -11790 0
c Encoding variable: aux1377 with domain: int(0..4) (representing constraint (aux1374 + aux1376))
c Both direct and order encoding.
c Var 'aux1377' order represents '0' with '11792'
c Var 'aux1377' direct represents '0' with '11792'
c Var 'aux1377' order represents '1' with '11793'
-11792 11793 0
c Var 'aux1377' direct represents '1' with '11794'
11792 -11793 11794 0
-11794 11793 0
-11794 -11792 0
c Var 'aux1377' order represents '2' with '11795'
-11793 11795 0
c Var 'aux1377' direct represents '2' with '11796'
11793 -11795 11796 0
-11796 11795 0
-11796 -11793 0
c Var 'aux1377' order represents '3' with '11797'
-11795 11797 0
c Var 'aux1377' direct represents '3' with '11798'
11795 -11797 11798 0
-11798 11797 0
-11798 -11795 0
c Var 'aux1377' direct represents '4' with '-11797'
11792 11794 11796 11798 -11797 0
c Encoding variable: aux1378 with domain: int(0..4) (representing constraint (aux1373 + aux1375))
c Both direct and order encoding.
c Var 'aux1378' order represents '0' with '11799'
c Var 'aux1378' direct represents '0' with '11799'
c Var 'aux1378' order represents '1' with '11800'
-11799 11800 0
c Var 'aux1378' direct represents '1' with '11801'
11799 -11800 11801 0
-11801 11800 0
-11801 -11799 0
c Var 'aux1378' order represents '2' with '11802'
-11800 11802 0
c Var 'aux1378' direct represents '2' with '11803'
11800 -11802 11803 0
-11803 11802 0
-11803 -11800 0
c Var 'aux1378' order represents '3' with '11804'
-11802 11804 0
c Var 'aux1378' direct represents '3' with '11805'
11802 -11804 11805 0
-11805 11804 0
-11805 -11802 0
c Var 'aux1378' direct represents '4' with '-11804'
11799 11801 11803 11805 -11804 0
c Encoding variable: aux1379 with domain: bool (representing constraint (shift(true, -1) + aux267))
c Var 'aux1379' direct represents '0' with '-11806'
c Var 'aux1379' direct represents '1' with '11806'
c Var 'aux1379' order represents '1' with '1'
c Var 'aux1379' order represents '0' with '-11806'
c Encoding variable: aux1380 with domain: int(0..2) (representing constraint (aux263 + aux1379))
c Both direct and order encoding.
c Var 'aux1380' order represents '0' with '11807'
c Var 'aux1380' direct represents '0' with '11807'
c Var 'aux1380' order represents '1' with '11808'
-11807 11808 0
c Var 'aux1380' direct represents '1' with '11809'
11807 -11808 11809 0
-11809 11808 0
-11809 -11807 0
c Var 'aux1380' direct represents '2' with '-11808'
11807 11809 -11808 0
c Encoding variable: aux1381 with domain: int(0..2) (representing constraint (aux266 + aux270))
c Both direct and order encoding.
c Var 'aux1381' order represents '0' with '11810'
c Var 'aux1381' direct represents '0' with '11810'
c Var 'aux1381' order represents '1' with '11811'
-11810 11811 0
c Var 'aux1381' direct represents '1' with '11812'
11810 -11811 11812 0
-11812 11811 0
-11812 -11810 0
c Var 'aux1381' direct represents '2' with '-11811'
11810 11812 -11811 0
c Encoding variable: aux1382 with domain: int(0..2) (representing constraint (aux269 + aux264))
c Both direct and order encoding.
c Var 'aux1382' order represents '0' with '11813'
c Var 'aux1382' direct represents '0' with '11813'
c Var 'aux1382' order represents '1' with '11814'
-11813 11814 0
c Var 'aux1382' direct represents '1' with '11815'
11813 -11814 11815 0
-11815 11814 0
-11815 -11813 0
c Var 'aux1382' direct represents '2' with '-11814'
11813 11815 -11814 0
c Encoding variable: aux1383 with domain: int(0..2) (representing constraint (aux268 + aux265))
c Both direct and order encoding.
c Var 'aux1383' order represents '0' with '11816'
c Var 'aux1383' direct represents '0' with '11816'
c Var 'aux1383' order represents '1' with '11817'
-11816 11817 0
c Var 'aux1383' direct represents '1' with '11818'
11816 -11817 11818 0
-11818 11817 0
-11818 -11816 0
c Var 'aux1383' direct represents '2' with '-11817'
11816 11818 -11817 0
c Encoding variable: aux1384 with domain: int(0..4) (representing constraint (aux1381 + aux1383))
c Both direct and order encoding.
c Var 'aux1384' order represents '0' with '11819'
c Var 'aux1384' direct represents '0' with '11819'
c Var 'aux1384' order represents '1' with '11820'
-11819 11820 0
c Var 'aux1384' direct represents '1' with '11821'
11819 -11820 11821 0
-11821 11820 0
-11821 -11819 0
c Var 'aux1384' order represents '2' with '11822'
-11820 11822 0
c Var 'aux1384' direct represents '2' with '11823'
11820 -11822 11823 0
-11823 11822 0
-11823 -11820 0
c Var 'aux1384' order represents '3' with '11824'
-11822 11824 0
c Var 'aux1384' direct represents '3' with '11825'
11822 -11824 11825 0
-11825 11824 0
-11825 -11822 0
c Var 'aux1384' direct represents '4' with '-11824'
11819 11821 11823 11825 -11824 0
c Encoding variable: aux1385 with domain: int(0..4) (representing constraint (aux1380 + aux1382))
c Both direct and order encoding.
c Var 'aux1385' order represents '0' with '11826'
c Var 'aux1385' direct represents '0' with '11826'
c Var 'aux1385' order represents '1' with '11827'
-11826 11827 0
c Var 'aux1385' direct represents '1' with '11828'
11826 -11827 11828 0
-11828 11827 0
-11828 -11826 0
c Var 'aux1385' order represents '2' with '11829'
-11827 11829 0
c Var 'aux1385' direct represents '2' with '11830'
11827 -11829 11830 0
-11830 11829 0
-11830 -11827 0
c Var 'aux1385' order represents '3' with '11831'
-11829 11831 0
c Var 'aux1385' direct represents '3' with '11832'
11829 -11831 11832 0
-11832 11831 0
-11832 -11829 0
c Var 'aux1385' direct represents '4' with '-11831'
11826 11828 11830 11832 -11831 0
c Encoding variable: aux1386 with domain: bool (representing constraint (shift(true, -1) + aux275))
c Var 'aux1386' direct represents '0' with '-11833'
c Var 'aux1386' direct represents '1' with '11833'
c Var 'aux1386' order represents '1' with '1'
c Var 'aux1386' order represents '0' with '-11833'
c Encoding variable: aux1387 with domain: int(0..2) (representing constraint (aux271 + aux1386))
c Both direct and order encoding.
c Var 'aux1387' order represents '0' with '11834'
c Var 'aux1387' direct represents '0' with '11834'
c Var 'aux1387' order represents '1' with '11835'
-11834 11835 0
c Var 'aux1387' direct represents '1' with '11836'
11834 -11835 11836 0
-11836 11835 0
-11836 -11834 0
c Var 'aux1387' direct represents '2' with '-11835'
11834 11836 -11835 0
c Encoding variable: aux1388 with domain: int(0..2) (representing constraint (aux274 + aux278))
c Both direct and order encoding.
c Var 'aux1388' order represents '0' with '11837'
c Var 'aux1388' direct represents '0' with '11837'
c Var 'aux1388' order represents '1' with '11838'
-11837 11838 0
c Var 'aux1388' direct represents '1' with '11839'
11837 -11838 11839 0
-11839 11838 0
-11839 -11837 0
c Var 'aux1388' direct represents '2' with '-11838'
11837 11839 -11838 0
c Encoding variable: aux1389 with domain: int(0..2) (representing constraint (aux277 + aux272))
c Both direct and order encoding.
c Var 'aux1389' order represents '0' with '11840'
c Var 'aux1389' direct represents '0' with '11840'
c Var 'aux1389' order represents '1' with '11841'
-11840 11841 0
c Var 'aux1389' direct represents '1' with '11842'
11840 -11841 11842 0
-11842 11841 0
-11842 -11840 0
c Var 'aux1389' direct represents '2' with '-11841'
11840 11842 -11841 0
c Encoding variable: aux1390 with domain: int(0..2) (representing constraint (aux276 + aux273))
c Both direct and order encoding.
c Var 'aux1390' order represents '0' with '11843'
c Var 'aux1390' direct represents '0' with '11843'
c Var 'aux1390' order represents '1' with '11844'
-11843 11844 0
c Var 'aux1390' direct represents '1' with '11845'
11843 -11844 11845 0
-11845 11844 0
-11845 -11843 0
c Var 'aux1390' direct represents '2' with '-11844'
11843 11845 -11844 0
c Encoding variable: aux1391 with domain: int(0..4) (representing constraint (aux1388 + aux1390))
c Both direct and order encoding.
c Var 'aux1391' order represents '0' with '11846'
c Var 'aux1391' direct represents '0' with '11846'
c Var 'aux1391' order represents '1' with '11847'
-11846 11847 0
c Var 'aux1391' direct represents '1' with '11848'
11846 -11847 11848 0
-11848 11847 0
-11848 -11846 0
c Var 'aux1391' order represents '2' with '11849'
-11847 11849 0
c Var 'aux1391' direct represents '2' with '11850'
11847 -11849 11850 0
-11850 11849 0
-11850 -11847 0
c Var 'aux1391' order represents '3' with '11851'
-11849 11851 0
c Var 'aux1391' direct represents '3' with '11852'
11849 -11851 11852 0
-11852 11851 0
-11852 -11849 0
c Var 'aux1391' direct represents '4' with '-11851'
11846 11848 11850 11852 -11851 0
c Encoding variable: aux1392 with domain: int(0..4) (representing constraint (aux1387 + aux1389))
c Both direct and order encoding.
c Var 'aux1392' order represents '0' with '11853'
c Var 'aux1392' direct represents '0' with '11853'
c Var 'aux1392' order represents '1' with '11854'
-11853 11854 0
c Var 'aux1392' direct represents '1' with '11855'
11853 -11854 11855 0
-11855 11854 0
-11855 -11853 0
c Var 'aux1392' order represents '2' with '11856'
-11854 11856 0
c Var 'aux1392' direct represents '2' with '11857'
11854 -11856 11857 0
-11857 11856 0
-11857 -11854 0
c Var 'aux1392' order represents '3' with '11858'
-11856 11858 0
c Var 'aux1392' direct represents '3' with '11859'
11856 -11858 11859 0
-11859 11858 0
-11859 -11856 0
c Var 'aux1392' direct represents '4' with '-11858'
11853 11855 11857 11859 -11858 0
c Encoding variable: aux1393 with domain: bool (representing constraint (shift(true, -1) + aux283))
c Var 'aux1393' direct represents '0' with '-11860'
c Var 'aux1393' direct represents '1' with '11860'
c Var 'aux1393' order represents '1' with '1'
c Var 'aux1393' order represents '0' with '-11860'
c Encoding variable: aux1394 with domain: int(0..2) (representing constraint (aux279 + aux1393))
c Both direct and order encoding.
c Var 'aux1394' order represents '0' with '11861'
c Var 'aux1394' direct represents '0' with '11861'
c Var 'aux1394' order represents '1' with '11862'
-11861 11862 0
c Var 'aux1394' direct represents '1' with '11863'
11861 -11862 11863 0
-11863 11862 0
-11863 -11861 0
c Var 'aux1394' direct represents '2' with '-11862'
11861 11863 -11862 0
c Encoding variable: aux1395 with domain: int(0..2) (representing constraint (aux282 + aux286))
c Both direct and order encoding.
c Var 'aux1395' order represents '0' with '11864'
c Var 'aux1395' direct represents '0' with '11864'
c Var 'aux1395' order represents '1' with '11865'
-11864 11865 0
c Var 'aux1395' direct represents '1' with '11866'
11864 -11865 11866 0
-11866 11865 0
-11866 -11864 0
c Var 'aux1395' direct represents '2' with '-11865'
11864 11866 -11865 0
c Encoding variable: aux1396 with domain: int(0..2) (representing constraint (aux285 + aux280))
c Both direct and order encoding.
c Var 'aux1396' order represents '0' with '11867'
c Var 'aux1396' direct represents '0' with '11867'
c Var 'aux1396' order represents '1' with '11868'
-11867 11868 0
c Var 'aux1396' direct represents '1' with '11869'
11867 -11868 11869 0
-11869 11868 0
-11869 -11867 0
c Var 'aux1396' direct represents '2' with '-11868'
11867 11869 -11868 0
c Encoding variable: aux1397 with domain: int(0..2) (representing constraint (aux284 + aux281))
c Both direct and order encoding.
c Var 'aux1397' order represents '0' with '11870'
c Var 'aux1397' direct represents '0' with '11870'
c Var 'aux1397' order represents '1' with '11871'
-11870 11871 0
c Var 'aux1397' direct represents '1' with '11872'
11870 -11871 11872 0
-11872 11871 0
-11872 -11870 0
c Var 'aux1397' direct represents '2' with '-11871'
11870 11872 -11871 0
c Encoding variable: aux1398 with domain: int(0..4) (representing constraint (aux1395 + aux1397))
c Both direct and order encoding.
c Var 'aux1398' order represents '0' with '11873'
c Var 'aux1398' direct represents '0' with '11873'
c Var 'aux1398' order represents '1' with '11874'
-11873 11874 0
c Var 'aux1398' direct represents '1' with '11875'
11873 -11874 11875 0
-11875 11874 0
-11875 -11873 0
c Var 'aux1398' order represents '2' with '11876'
-11874 11876 0
c Var 'aux1398' direct represents '2' with '11877'
11874 -11876 11877 0
-11877 11876 0
-11877 -11874 0
c Var 'aux1398' order represents '3' with '11878'
-11876 11878 0
c Var 'aux1398' direct represents '3' with '11879'
11876 -11878 11879 0
-11879 11878 0
-11879 -11876 0
c Var 'aux1398' direct represents '4' with '-11878'
11873 11875 11877 11879 -11878 0
c Encoding variable: aux1399 with domain: int(0..4) (representing constraint (aux1394 + aux1396))
c Both direct and order encoding.
c Var 'aux1399' order represents '0' with '11880'
c Var 'aux1399' direct represents '0' with '11880'
c Var 'aux1399' order represents '1' with '11881'
-11880 11881 0
c Var 'aux1399' direct represents '1' with '11882'
11880 -11881 11882 0
-11882 11881 0
-11882 -11880 0
c Var 'aux1399' order represents '2' with '11883'
-11881 11883 0
c Var 'aux1399' direct represents '2' with '11884'
11881 -11883 11884 0
-11884 11883 0
-11884 -11881 0
c Var 'aux1399' order represents '3' with '11885'
-11883 11885 0
c Var 'aux1399' direct represents '3' with '11886'
11883 -11885 11886 0
-11886 11885 0
-11886 -11883 0
c Var 'aux1399' direct represents '4' with '-11885'
11880 11882 11884 11886 -11885 0
c Encoding variable: aux1400 with domain: bool (representing constraint ((aux450 + aux451 + aux453)<=1))
c Var 'aux1400' direct represents '0' with '-11887'
c Var 'aux1400' direct represents '1' with '11887'
c Var 'aux1400' order represents '1' with '1'
c Var 'aux1400' order represents '0' with '-11887'
c Encoding variable: aux1401 with domain: bool (representing constraint (1<=(aux450 + aux451 + aux453)))
c Var 'aux1401' direct represents '0' with '-11888'
c Var 'aux1401' direct represents '1' with '11888'
c Var 'aux1401' order represents '1' with '1'
c Var 'aux1401' order represents '0' with '-11888'
c Encoding variable: aux1402 with domain: bool (representing constraint ((aux455 + aux456 + aux458)<=1))
c Var 'aux1402' direct represents '0' with '-11889'
c Var 'aux1402' direct represents '1' with '11889'
c Var 'aux1402' order represents '1' with '1'
c Var 'aux1402' order represents '0' with '-11889'
c Encoding variable: aux1403 with domain: bool (representing constraint (1<=(aux455 + aux456 + aux458)))
c Var 'aux1403' direct represents '0' with '-11890'
c Var 'aux1403' direct represents '1' with '11890'
c Var 'aux1403' order represents '1' with '1'
c Var 'aux1403' order represents '0' with '-11890'
c Encoding variable: aux1404 with domain: bool (representing constraint ((aux460 + aux461 + aux463)<=1))
c Var 'aux1404' direct represents '0' with '-11891'
c Var 'aux1404' direct represents '1' with '11891'
c Var 'aux1404' order represents '1' with '1'
c Var 'aux1404' order represents '0' with '-11891'
c Encoding variable: aux1405 with domain: bool (representing constraint (1<=(aux460 + aux461 + aux463)))
c Var 'aux1405' direct represents '0' with '-11892'
c Var 'aux1405' direct represents '1' with '11892'
c Var 'aux1405' order represents '1' with '1'
c Var 'aux1405' order represents '0' with '-11892'
c Encoding variable: aux1406 with domain: bool (representing constraint ((aux465 + aux466 + aux468)<=1))
c Var 'aux1406' direct represents '0' with '-11893'
c Var 'aux1406' direct represents '1' with '11893'
c Var 'aux1406' order represents '1' with '1'
c Var 'aux1406' order represents '0' with '-11893'
c Encoding variable: aux1407 with domain: bool (representing constraint (1<=(aux465 + aux466 + aux468)))
c Var 'aux1407' direct represents '0' with '-11894'
c Var 'aux1407' direct represents '1' with '11894'
c Var 'aux1407' order represents '1' with '1'
c Var 'aux1407' order represents '0' with '-11894'
c Encoding variable: aux1408 with domain: bool (representing constraint ((aux476 + aux477 + aux479)<=1))
c Var 'aux1408' direct represents '0' with '-11895'
c Var 'aux1408' direct represents '1' with '11895'
c Var 'aux1408' order represents '1' with '1'
c Var 'aux1408' order represents '0' with '-11895'
c Encoding variable: aux1409 with domain: bool (representing constraint (1<=(aux476 + aux477 + aux479)))
c Var 'aux1409' direct represents '0' with '-11896'
c Var 'aux1409' direct represents '1' with '11896'
c Var 'aux1409' order represents '1' with '1'
c Var 'aux1409' order represents '0' with '-11896'
c Encoding variable: aux1410 with domain: bool (representing constraint ((aux481 + aux482 + aux484)<=1))
c Var 'aux1410' direct represents '0' with '-11897'
c Var 'aux1410' direct represents '1' with '11897'
c Var 'aux1410' order represents '1' with '1'
c Var 'aux1410' order represents '0' with '-11897'
c Encoding variable: aux1411 with domain: bool (representing constraint (1<=(aux481 + aux482 + aux484)))
c Var 'aux1411' direct represents '0' with '-11898'
c Var 'aux1411' direct represents '1' with '11898'
c Var 'aux1411' order represents '1' with '1'
c Var 'aux1411' order represents '0' with '-11898'
c Encoding variable: aux1412 with domain: bool (representing constraint ((aux486 + aux487 + aux489)<=1))
c Var 'aux1412' direct represents '0' with '-11899'
c Var 'aux1412' direct represents '1' with '11899'
c Var 'aux1412' order represents '1' with '1'
c Var 'aux1412' order represents '0' with '-11899'
c Encoding variable: aux1413 with domain: bool (representing constraint (1<=(aux486 + aux487 + aux489)))
c Var 'aux1413' direct represents '0' with '-11900'
c Var 'aux1413' direct represents '1' with '11900'
c Var 'aux1413' order represents '1' with '1'
c Var 'aux1413' order represents '0' with '-11900'
c Encoding variable: aux1414 with domain: bool (representing constraint ((aux491 + aux492 + aux494)<=1))
c Var 'aux1414' direct represents '0' with '-11901'
c Var 'aux1414' direct represents '1' with '11901'
c Var 'aux1414' order represents '1' with '1'
c Var 'aux1414' order represents '0' with '-11901'
c Encoding variable: aux1415 with domain: bool (representing constraint (1<=(aux491 + aux492 + aux494)))
c Var 'aux1415' direct represents '0' with '-11902'
c Var 'aux1415' direct represents '1' with '11902'
c Var 'aux1415' order represents '1' with '1'
c Var 'aux1415' order represents '0' with '-11902'
c Encoding variable: aux1416 with domain: bool (representing constraint ((aux496 + aux497 + aux499)<=1))
c Var 'aux1416' direct represents '0' with '-11903'
c Var 'aux1416' direct represents '1' with '11903'
c Var 'aux1416' order represents '1' with '1'
c Var 'aux1416' order represents '0' with '-11903'
c Encoding variable: aux1417 with domain: bool (representing constraint (1<=(aux496 + aux497 + aux499)))
c Var 'aux1417' direct represents '0' with '-11904'
c Var 'aux1417' direct represents '1' with '11904'
c Var 'aux1417' order represents '1' with '1'
c Var 'aux1417' order represents '0' with '-11904'
c Encoding variable: aux1418 with domain: bool (representing constraint ((aux501 + aux502 + aux504)<=1))
c Var 'aux1418' direct represents '0' with '-11905'
c Var 'aux1418' direct represents '1' with '11905'
c Var 'aux1418' order represents '1' with '1'
c Var 'aux1418' order represents '0' with '-11905'
c Encoding variable: aux1419 with domain: bool (representing constraint (1<=(aux501 + aux502 + aux504)))
c Var 'aux1419' direct represents '0' with '-11906'
c Var 'aux1419' direct represents '1' with '11906'
c Var 'aux1419' order represents '1' with '1'
c Var 'aux1419' order represents '0' with '-11906'
c Encoding variable: aux1420 with domain: bool (representing constraint ((aux506 + aux507 + aux509)<=1))
c Var 'aux1420' direct represents '0' with '-11907'
c Var 'aux1420' direct represents '1' with '11907'
c Var 'aux1420' order represents '1' with '1'
c Var 'aux1420' order represents '0' with '-11907'
c Encoding variable: aux1421 with domain: bool (representing constraint (1<=(aux506 + aux507 + aux509)))
c Var 'aux1421' direct represents '0' with '-11908'
c Var 'aux1421' direct represents '1' with '11908'
c Var 'aux1421' order represents '1' with '1'
c Var 'aux1421' order represents '0' with '-11908'
c Encoding variable: aux1422 with domain: bool (representing constraint ((aux511 + aux512 + aux514)<=1))
c Var 'aux1422' direct represents '0' with '-11909'
c Var 'aux1422' direct represents '1' with '11909'
c Var 'aux1422' order represents '1' with '1'
c Var 'aux1422' order represents '0' with '-11909'
c Encoding variable: aux1423 with domain: bool (representing constraint (1<=(aux511 + aux512 + aux514)))
c Var 'aux1423' direct represents '0' with '-11910'
c Var 'aux1423' direct represents '1' with '11910'
c Var 'aux1423' order represents '1' with '1'
c Var 'aux1423' order represents '0' with '-11910'
c Encoding variable: aux1424 with domain: bool (representing constraint ((aux516 + aux517 + aux519)<=1))
c Var 'aux1424' direct represents '0' with '-11911'
c Var 'aux1424' direct represents '1' with '11911'
c Var 'aux1424' order represents '1' with '1'
c Var 'aux1424' order represents '0' with '-11911'
c Encoding variable: aux1425 with domain: bool (representing constraint (1<=(aux516 + aux517 + aux519)))
c Var 'aux1425' direct represents '0' with '-11912'
c Var 'aux1425' direct represents '1' with '11912'
c Var 'aux1425' order represents '1' with '1'
c Var 'aux1425' order represents '0' with '-11912'
c Encoding variable: aux1426 with domain: bool (representing constraint ((aux521 + aux522 + aux524)<=1))
c Var 'aux1426' direct represents '0' with '-11913'
c Var 'aux1426' direct represents '1' with '11913'
c Var 'aux1426' order represents '1' with '1'
c Var 'aux1426' order represents '0' with '-11913'
c Encoding variable: aux1427 with domain: bool (representing constraint (1<=(aux521 + aux522 + aux524)))
c Var 'aux1427' direct represents '0' with '-11914'
c Var 'aux1427' direct represents '1' with '11914'
c Var 'aux1427' order represents '1' with '1'
c Var 'aux1427' order represents '0' with '-11914'
c Encoding variable: aux1428 with domain: bool (representing constraint ((aux532 + aux533 + aux535)<=1))
c Var 'aux1428' direct represents '0' with '-11915'
c Var 'aux1428' direct represents '1' with '11915'
c Var 'aux1428' order represents '1' with '1'
c Var 'aux1428' order represents '0' with '-11915'
c Encoding variable: aux1429 with domain: bool (representing constraint (1<=(aux532 + aux533 + aux535)))
c Var 'aux1429' direct represents '0' with '-11916'
c Var 'aux1429' direct represents '1' with '11916'
c Var 'aux1429' order represents '1' with '1'
c Var 'aux1429' order represents '0' with '-11916'
c Encoding variable: aux1430 with domain: bool (representing constraint ((aux537 + aux538 + aux540)<=1))
c Var 'aux1430' direct represents '0' with '-11917'
c Var 'aux1430' direct represents '1' with '11917'
c Var 'aux1430' order represents '1' with '1'
c Var 'aux1430' order represents '0' with '-11917'
c Encoding variable: aux1431 with domain: bool (representing constraint (1<=(aux537 + aux538 + aux540)))
c Var 'aux1431' direct represents '0' with '-11918'
c Var 'aux1431' direct represents '1' with '11918'
c Var 'aux1431' order represents '1' with '1'
c Var 'aux1431' order represents '0' with '-11918'
c Encoding variable: aux1432 with domain: bool (representing constraint ((aux542 + aux543 + aux545)<=1))
c Var 'aux1432' direct represents '0' with '-11919'
c Var 'aux1432' direct represents '1' with '11919'
c Var 'aux1432' order represents '1' with '1'
c Var 'aux1432' order represents '0' with '-11919'
c Encoding variable: aux1433 with domain: bool (representing constraint (1<=(aux542 + aux543 + aux545)))
c Var 'aux1433' direct represents '0' with '-11920'
c Var 'aux1433' direct represents '1' with '11920'
c Var 'aux1433' order represents '1' with '1'
c Var 'aux1433' order represents '0' with '-11920'
c Encoding variable: aux1434 with domain: bool (representing constraint ((aux547 + aux548 + aux550)<=1))
c Var 'aux1434' direct represents '0' with '-11921'
c Var 'aux1434' direct represents '1' with '11921'
c Var 'aux1434' order represents '1' with '1'
c Var 'aux1434' order represents '0' with '-11921'
c Encoding variable: aux1435 with domain: bool (representing constraint (1<=(aux547 + aux548 + aux550)))
c Var 'aux1435' direct represents '0' with '-11922'
c Var 'aux1435' direct represents '1' with '11922'
c Var 'aux1435' order represents '1' with '1'
c Var 'aux1435' order represents '0' with '-11922'
c Encoding variable: aux1436 with domain: bool (representing constraint ((aux552 + aux553 + aux555)<=1))
c Var 'aux1436' direct represents '0' with '-11923'
c Var 'aux1436' direct represents '1' with '11923'
c Var 'aux1436' order represents '1' with '1'
c Var 'aux1436' order represents '0' with '-11923'
c Encoding variable: aux1437 with domain: bool (representing constraint (1<=(aux552 + aux553 + aux555)))
c Var 'aux1437' direct represents '0' with '-11924'
c Var 'aux1437' direct represents '1' with '11924'
c Var 'aux1437' order represents '1' with '1'
c Var 'aux1437' order represents '0' with '-11924'
c Encoding variable: aux1438 with domain: bool (representing constraint ((aux557 + aux558 + aux560)<=1))
c Var 'aux1438' direct represents '0' with '-11925'
c Var 'aux1438' direct represents '1' with '11925'
c Var 'aux1438' order represents '1' with '1'
c Var 'aux1438' order represents '0' with '-11925'
c Encoding variable: aux1439 with domain: bool (representing constraint (1<=(aux557 + aux558 + aux560)))
c Var 'aux1439' direct represents '0' with '-11926'
c Var 'aux1439' direct represents '1' with '11926'
c Var 'aux1439' order represents '1' with '1'
c Var 'aux1439' order represents '0' with '-11926'
c Encoding variable: aux1440 with domain: bool (representing constraint ((aux562 + aux563 + aux565)<=1))
c Var 'aux1440' direct represents '0' with '-11927'
c Var 'aux1440' direct represents '1' with '11927'
c Var 'aux1440' order represents '1' with '1'
c Var 'aux1440' order represents '0' with '-11927'
c Encoding variable: aux1441 with domain: bool (representing constraint (1<=(aux562 + aux563 + aux565)))
c Var 'aux1441' direct represents '0' with '-11928'
c Var 'aux1441' direct represents '1' with '11928'
c Var 'aux1441' order represents '1' with '1'
c Var 'aux1441' order represents '0' with '-11928'
c Encoding variable: aux1442 with domain: bool (representing constraint ((aux573 + aux574 + aux576)<=1))
c Var 'aux1442' direct represents '0' with '-11929'
c Var 'aux1442' direct represents '1' with '11929'
c Var 'aux1442' order represents '1' with '1'
c Var 'aux1442' order represents '0' with '-11929'
c Encoding variable: aux1443 with domain: bool (representing constraint (1<=(aux573 + aux574 + aux576)))
c Var 'aux1443' direct represents '0' with '-11930'
c Var 'aux1443' direct represents '1' with '11930'
c Var 'aux1443' order represents '1' with '1'
c Var 'aux1443' order represents '0' with '-11930'
c Encoding variable: aux1444 with domain: bool (representing constraint ((aux578 + aux579 + aux581)<=1))
c Var 'aux1444' direct represents '0' with '-11931'
c Var 'aux1444' direct represents '1' with '11931'
c Var 'aux1444' order represents '1' with '1'
c Var 'aux1444' order represents '0' with '-11931'
c Encoding variable: aux1445 with domain: bool (representing constraint (1<=(aux578 + aux579 + aux581)))
c Var 'aux1445' direct represents '0' with '-11932'
c Var 'aux1445' direct represents '1' with '11932'
c Var 'aux1445' order represents '1' with '1'
c Var 'aux1445' order represents '0' with '-11932'
c Encoding variable: aux1446 with domain: bool (representing constraint ((aux583 + aux584 + aux586)<=1))
c Var 'aux1446' direct represents '0' with '-11933'
c Var 'aux1446' direct represents '1' with '11933'
c Var 'aux1446' order represents '1' with '1'
c Var 'aux1446' order represents '0' with '-11933'
c Encoding variable: aux1447 with domain: bool (representing constraint (1<=(aux583 + aux584 + aux586)))
c Var 'aux1447' direct represents '0' with '-11934'
c Var 'aux1447' direct represents '1' with '11934'
c Var 'aux1447' order represents '1' with '1'
c Var 'aux1447' order represents '0' with '-11934'
c Encoding variable: aux1448 with domain: bool (representing constraint ((aux592 + aux593 + aux595)<=1))
c Var 'aux1448' direct represents '0' with '-11935'
c Var 'aux1448' direct represents '1' with '11935'
c Var 'aux1448' order represents '1' with '1'
c Var 'aux1448' order represents '0' with '-11935'
c Encoding variable: aux1449 with domain: bool (representing constraint (1<=(aux592 + aux593 + aux595)))
c Var 'aux1449' direct represents '0' with '-11936'
c Var 'aux1449' direct represents '1' with '11936'
c Var 'aux1449' order represents '1' with '1'
c Var 'aux1449' order represents '0' with '-11936'
c Encoding variable: aux1450 with domain: bool (representing constraint ((aux601 + aux602 + aux604)<=1))
c Var 'aux1450' direct represents '0' with '-11937'
c Var 'aux1450' direct represents '1' with '11937'
c Var 'aux1450' order represents '1' with '1'
c Var 'aux1450' order represents '0' with '-11937'
c Encoding variable: aux1451 with domain: bool (representing constraint (1<=(aux601 + aux602 + aux604)))
c Var 'aux1451' direct represents '0' with '-11938'
c Var 'aux1451' direct represents '1' with '11938'
c Var 'aux1451' order represents '1' with '1'
c Var 'aux1451' order represents '0' with '-11938'
c Encoding variable: aux1452 with domain: bool (representing constraint ((aux605 + aux606 + aux608)<=1))
c Var 'aux1452' direct represents '0' with '-11939'
c Var 'aux1452' direct represents '1' with '11939'
c Var 'aux1452' order represents '1' with '1'
c Var 'aux1452' order represents '0' with '-11939'
c Encoding variable: aux1453 with domain: bool (representing constraint (1<=(aux605 + aux606 + aux608)))
c Var 'aux1453' direct represents '0' with '-11940'
c Var 'aux1453' direct represents '1' with '11940'
c Var 'aux1453' order represents '1' with '1'
c Var 'aux1453' order represents '0' with '-11940'
c Encoding variable: aux1454 with domain: bool (representing constraint ((aux609 + aux610 + aux612)<=1))
c Var 'aux1454' direct represents '0' with '-11941'
c Var 'aux1454' direct represents '1' with '11941'
c Var 'aux1454' order represents '1' with '1'
c Var 'aux1454' order represents '0' with '-11941'
c Encoding variable: aux1455 with domain: bool (representing constraint (1<=(aux609 + aux610 + aux612)))
c Var 'aux1455' direct represents '0' with '-11942'
c Var 'aux1455' direct represents '1' with '11942'
c Var 'aux1455' order represents '1' with '1'
c Var 'aux1455' order represents '0' with '-11942'
c Encoding variable: aux1456 with domain: bool (representing constraint ((aux613 + aux614 + aux616)<=1))
c Var 'aux1456' direct represents '0' with '-11943'
c Var 'aux1456' direct represents '1' with '11943'
c Var 'aux1456' order represents '1' with '1'
c Var 'aux1456' order represents '0' with '-11943'
c Encoding variable: aux1457 with domain: bool (representing constraint (1<=(aux613 + aux614 + aux616)))
c Var 'aux1457' direct represents '0' with '-11944'
c Var 'aux1457' direct represents '1' with '11944'
c Var 'aux1457' order represents '1' with '1'
c Var 'aux1457' order represents '0' with '-11944'
c Encoding variable: aux1458 with domain: bool (representing constraint ((aux617 + aux618 + aux620)<=1))
c Var 'aux1458' direct represents '0' with '-11945'
c Var 'aux1458' direct represents '1' with '11945'
c Var 'aux1458' order represents '1' with '1'
c Var 'aux1458' order represents '0' with '-11945'
c Encoding variable: aux1459 with domain: bool (representing constraint (1<=(aux617 + aux618 + aux620)))
c Var 'aux1459' direct represents '0' with '-11946'
c Var 'aux1459' direct represents '1' with '11946'
c Var 'aux1459' order represents '1' with '1'
c Var 'aux1459' order represents '0' with '-11946'
c Encoding variable: aux1460 with domain: bool (representing constraint ((aux621 + aux622 + aux624)<=1))
c Var 'aux1460' direct represents '0' with '-11947'
c Var 'aux1460' direct represents '1' with '11947'
c Var 'aux1460' order represents '1' with '1'
c Var 'aux1460' order represents '0' with '-11947'
c Encoding variable: aux1461 with domain: bool (representing constraint (1<=(aux621 + aux622 + aux624)))
c Var 'aux1461' direct represents '0' with '-11948'
c Var 'aux1461' direct represents '1' with '11948'
c Var 'aux1461' order represents '1' with '1'
c Var 'aux1461' order represents '0' with '-11948'
c Encoding variable: aux1462 with domain: bool (representing constraint ((aux633 + aux634 + aux635)<=1))
c Var 'aux1462' direct represents '0' with '-11949'
c Var 'aux1462' direct represents '1' with '11949'
c Var 'aux1462' order represents '1' with '1'
c Var 'aux1462' order represents '0' with '-11949'
c Encoding variable: aux1463 with domain: bool (representing constraint (1<=(aux633 + aux634 + aux635)))
c Var 'aux1463' direct represents '0' with '-11950'
c Var 'aux1463' direct represents '1' with '11950'
c Var 'aux1463' order represents '1' with '1'
c Var 'aux1463' order represents '0' with '-11950'
c Encoding variable: aux1464 with domain: bool (representing constraint ((aux636 + aux637 + aux638)<=1))
c Var 'aux1464' direct represents '0' with '-11951'
c Var 'aux1464' direct represents '1' with '11951'
c Var 'aux1464' order represents '1' with '1'
c Var 'aux1464' order represents '0' with '-11951'
c Encoding variable: aux1465 with domain: bool (representing constraint (1<=(aux636 + aux637 + aux638)))
c Var 'aux1465' direct represents '0' with '-11952'
c Var 'aux1465' direct represents '1' with '11952'
c Var 'aux1465' order represents '1' with '1'
c Var 'aux1465' order represents '0' with '-11952'
c Encoding variable: aux1466 with domain: bool (representing constraint ((aux639 + aux640 + aux641)<=1))
c Var 'aux1466' direct represents '0' with '-11953'
c Var 'aux1466' direct represents '1' with '11953'
c Var 'aux1466' order represents '1' with '1'
c Var 'aux1466' order represents '0' with '-11953'
c Encoding variable: aux1467 with domain: bool (representing constraint (1<=(aux639 + aux640 + aux641)))
c Var 'aux1467' direct represents '0' with '-11954'
c Var 'aux1467' direct represents '1' with '11954'
c Var 'aux1467' order represents '1' with '1'
c Var 'aux1467' order represents '0' with '-11954'
c Encoding variable: aux1468 with domain: bool (representing constraint ((aux642 + aux643 + aux644)<=1))
c Var 'aux1468' direct represents '0' with '-11955'
c Var 'aux1468' direct represents '1' with '11955'
c Var 'aux1468' order represents '1' with '1'
c Var 'aux1468' order represents '0' with '-11955'
c Encoding variable: aux1469 with domain: bool (representing constraint (1<=(aux642 + aux643 + aux644)))
c Var 'aux1469' direct represents '0' with '-11956'
c Var 'aux1469' direct represents '1' with '11956'
c Var 'aux1469' order represents '1' with '1'
c Var 'aux1469' order represents '0' with '-11956'
c Encoding variable: aux1470 with domain: bool (representing constraint ((aux649 + aux650 + aux651)<=1))
c Var 'aux1470' direct represents '0' with '-11957'
c Var 'aux1470' direct represents '1' with '11957'
c Var 'aux1470' order represents '1' with '1'
c Var 'aux1470' order represents '0' with '-11957'
c Encoding variable: aux1471 with domain: bool (representing constraint (1<=(aux649 + aux650 + aux651)))
c Var 'aux1471' direct represents '0' with '-11958'
c Var 'aux1471' direct represents '1' with '11958'
c Var 'aux1471' order represents '1' with '1'
c Var 'aux1471' order represents '0' with '-11958'
c Encoding variable: aux1472 with domain: bool (representing constraint ((aux652 + aux653 + aux654)<=1))
c Var 'aux1472' direct represents '0' with '-11959'
c Var 'aux1472' direct represents '1' with '11959'
c Var 'aux1472' order represents '1' with '1'
c Var 'aux1472' order represents '0' with '-11959'
c Encoding variable: aux1473 with domain: bool (representing constraint (1<=(aux652 + aux653 + aux654)))
c Var 'aux1473' direct represents '0' with '-11960'
c Var 'aux1473' direct represents '1' with '11960'
c Var 'aux1473' order represents '1' with '1'
c Var 'aux1473' order represents '0' with '-11960'
c Encoding variable: aux1474 with domain: bool (representing constraint ((aux655 + aux656 + aux658)<=1))
c Var 'aux1474' direct represents '0' with '-11961'
c Var 'aux1474' direct represents '1' with '11961'
c Var 'aux1474' order represents '1' with '1'
c Var 'aux1474' order represents '0' with '-11961'
c Encoding variable: aux1475 with domain: bool (representing constraint (1<=(aux655 + aux656 + aux658)))
c Var 'aux1475' direct represents '0' with '-11962'
c Var 'aux1475' direct represents '1' with '11962'
c Var 'aux1475' order represents '1' with '1'
c Var 'aux1475' order represents '0' with '-11962'
c Encoding variable: aux1476 with domain: bool (representing constraint ((aux659 + aux660 + aux662)<=1))
c Var 'aux1476' direct represents '0' with '-11963'
c Var 'aux1476' direct represents '1' with '11963'
c Var 'aux1476' order represents '1' with '1'
c Var 'aux1476' order represents '0' with '-11963'
c Encoding variable: aux1477 with domain: bool (representing constraint (1<=(aux659 + aux660 + aux662)))
c Var 'aux1477' direct represents '0' with '-11964'
c Var 'aux1477' direct represents '1' with '11964'
c Var 'aux1477' order represents '1' with '1'
c Var 'aux1477' order represents '0' with '-11964'
c Encoding variable: aux1478 with domain: bool (representing constraint ((aux663 + aux664 + aux666)<=1))
c Var 'aux1478' direct represents '0' with '-11965'
c Var 'aux1478' direct represents '1' with '11965'
c Var 'aux1478' order represents '1' with '1'
c Var 'aux1478' order represents '0' with '-11965'
c Encoding variable: aux1479 with domain: bool (representing constraint (1<=(aux663 + aux664 + aux666)))
c Var 'aux1479' direct represents '0' with '-11966'
c Var 'aux1479' direct represents '1' with '11966'
c Var 'aux1479' order represents '1' with '1'
c Var 'aux1479' order represents '0' with '-11966'
c Encoding variable: aux1480 with domain: bool (representing constraint ((aux667 + aux668 + aux670)<=1))
c Var 'aux1480' direct represents '0' with '-11967'
c Var 'aux1480' direct represents '1' with '11967'
c Var 'aux1480' order represents '1' with '1'
c Var 'aux1480' order represents '0' with '-11967'
c Encoding variable: aux1481 with domain: bool (representing constraint (1<=(aux667 + aux668 + aux670)))
c Var 'aux1481' direct represents '0' with '-11968'
c Var 'aux1481' direct represents '1' with '11968'
c Var 'aux1481' order represents '1' with '1'
c Var 'aux1481' order represents '0' with '-11968'
c Encoding variable: aux1482 with domain: bool (representing constraint ((aux671 + aux672 + aux674)<=1))
c Var 'aux1482' direct represents '0' with '-11969'
c Var 'aux1482' direct represents '1' with '11969'
c Var 'aux1482' order represents '1' with '1'
c Var 'aux1482' order represents '0' with '-11969'
c Encoding variable: aux1483 with domain: bool (representing constraint (1<=(aux671 + aux672 + aux674)))
c Var 'aux1483' direct represents '0' with '-11970'
c Var 'aux1483' direct represents '1' with '11970'
c Var 'aux1483' order represents '1' with '1'
c Var 'aux1483' order represents '0' with '-11970'
c Encoding variable: aux1484 with domain: bool (representing constraint ((aux675 + aux676 + aux678)<=1))
c Var 'aux1484' direct represents '0' with '-11971'
c Var 'aux1484' direct represents '1' with '11971'
c Var 'aux1484' order represents '1' with '1'
c Var 'aux1484' order represents '0' with '-11971'
c Encoding variable: aux1485 with domain: bool (representing constraint (1<=(aux675 + aux676 + aux678)))
c Var 'aux1485' direct represents '0' with '-11972'
c Var 'aux1485' direct represents '1' with '11972'
c Var 'aux1485' order represents '1' with '1'
c Var 'aux1485' order represents '0' with '-11972'
c Encoding variable: aux1486 with domain: bool (representing constraint ((aux689 + aux690 + aux692)<=1))
c Var 'aux1486' direct represents '0' with '-11973'
c Var 'aux1486' direct represents '1' with '11973'
c Var 'aux1486' order represents '1' with '1'
c Var 'aux1486' order represents '0' with '-11973'
c Encoding variable: aux1487 with domain: bool (representing constraint (1<=(aux689 + aux690 + aux692)))
c Var 'aux1487' direct represents '0' with '-11974'
c Var 'aux1487' direct represents '1' with '11974'
c Var 'aux1487' order represents '1' with '1'
c Var 'aux1487' order represents '0' with '-11974'
c Encoding variable: aux1488 with domain: bool (representing constraint ((aux693 + aux694 + aux695)<=1))
c Var 'aux1488' direct represents '0' with '-11975'
c Var 'aux1488' direct represents '1' with '11975'
c Var 'aux1488' order represents '1' with '1'
c Var 'aux1488' order represents '0' with '-11975'
c Encoding variable: aux1489 with domain: bool (representing constraint (1<=(aux693 + aux694 + aux695)))
c Var 'aux1489' direct represents '0' with '-11976'
c Var 'aux1489' direct represents '1' with '11976'
c Var 'aux1489' order represents '1' with '1'
c Var 'aux1489' order represents '0' with '-11976'
c Encoding variable: aux1490 with domain: bool (representing constraint ((aux696 + aux697 + aux698)<=1))
c Var 'aux1490' direct represents '0' with '-11977'
c Var 'aux1490' direct represents '1' with '11977'
c Var 'aux1490' order represents '1' with '1'
c Var 'aux1490' order represents '0' with '-11977'
c Encoding variable: aux1491 with domain: bool (representing constraint (1<=(aux696 + aux697 + aux698)))
c Var 'aux1491' direct represents '0' with '-11978'
c Var 'aux1491' direct represents '1' with '11978'
c Var 'aux1491' order represents '1' with '1'
c Var 'aux1491' order represents '0' with '-11978'
c Encoding variable: aux1492 with domain: bool (representing constraint ((aux703 + aux704 + aux705)<=1))
c Var 'aux1492' direct represents '0' with '-11979'
c Var 'aux1492' direct represents '1' with '11979'
c Var 'aux1492' order represents '1' with '1'
c Var 'aux1492' order represents '0' with '-11979'
c Encoding variable: aux1493 with domain: bool (representing constraint (1<=(aux703 + aux704 + aux705)))
c Var 'aux1493' direct represents '0' with '-11980'
c Var 'aux1493' direct represents '1' with '11980'
c Var 'aux1493' order represents '1' with '1'
c Var 'aux1493' order represents '0' with '-11980'
c Encoding variable: aux1494 with domain: bool (representing constraint ((aux706 + aux707 + aux708)<=1))
c Var 'aux1494' direct represents '0' with '-11981'
c Var 'aux1494' direct represents '1' with '11981'
c Var 'aux1494' order represents '1' with '1'
c Var 'aux1494' order represents '0' with '-11981'
c Encoding variable: aux1495 with domain: bool (representing constraint (1<=(aux706 + aux707 + aux708)))
c Var 'aux1495' direct represents '0' with '-11982'
c Var 'aux1495' direct represents '1' with '11982'
c Var 'aux1495' order represents '1' with '1'
c Var 'aux1495' order represents '0' with '-11982'
c Encoding variable: aux1496 with domain: bool (representing constraint ((aux717 + aux718 + aux719)<=1))
c Var 'aux1496' direct represents '0' with '-11983'
c Var 'aux1496' direct represents '1' with '11983'
c Var 'aux1496' order represents '1' with '1'
c Var 'aux1496' order represents '0' with '-11983'
c Encoding variable: aux1497 with domain: bool (representing constraint (1<=(aux717 + aux718 + aux719)))
c Var 'aux1497' direct represents '0' with '-11984'
c Var 'aux1497' direct represents '1' with '11984'
c Var 'aux1497' order represents '1' with '1'
c Var 'aux1497' order represents '0' with '-11984'
c Encoding variable: aux1498 with domain: bool (representing constraint ((aux720 + aux721 + aux722)<=1))
c Var 'aux1498' direct represents '0' with '-11985'
c Var 'aux1498' direct represents '1' with '11985'
c Var 'aux1498' order represents '1' with '1'
c Var 'aux1498' order represents '0' with '-11985'
c Encoding variable: aux1499 with domain: bool (representing constraint (1<=(aux720 + aux721 + aux722)))
c Var 'aux1499' direct represents '0' with '-11986'
c Var 'aux1499' direct represents '1' with '11986'
c Var 'aux1499' order represents '1' with '1'
c Var 'aux1499' order represents '0' with '-11986'
c Encoding variable: aux1500 with domain: bool (representing constraint ((aux723 + aux724 + aux726)<=1))
c Var 'aux1500' direct represents '0' with '-11987'
c Var 'aux1500' direct represents '1' with '11987'
c Var 'aux1500' order represents '1' with '1'
c Var 'aux1500' order represents '0' with '-11987'
c Encoding variable: aux1501 with domain: bool (representing constraint (1<=(aux723 + aux724 + aux726)))
c Var 'aux1501' direct represents '0' with '-11988'
c Var 'aux1501' direct represents '1' with '11988'
c Var 'aux1501' order represents '1' with '1'
c Var 'aux1501' order represents '0' with '-11988'
c Encoding variable: aux1502 with domain: bool (representing constraint ((aux727 + aux728 + aux730)<=1))
c Var 'aux1502' direct represents '0' with '-11989'
c Var 'aux1502' direct represents '1' with '11989'
c Var 'aux1502' order represents '1' with '1'
c Var 'aux1502' order represents '0' with '-11989'
c Encoding variable: aux1503 with domain: bool (representing constraint (1<=(aux727 + aux728 + aux730)))
c Var 'aux1503' direct represents '0' with '-11990'
c Var 'aux1503' direct represents '1' with '11990'
c Var 'aux1503' order represents '1' with '1'
c Var 'aux1503' order represents '0' with '-11990'
c Encoding variable: aux1504 with domain: bool (representing constraint ((aux731 + aux732 + aux734)<=1))
c Var 'aux1504' direct represents '0' with '-11991'
c Var 'aux1504' direct represents '1' with '11991'
c Var 'aux1504' order represents '1' with '1'
c Var 'aux1504' order represents '0' with '-11991'
c Encoding variable: aux1505 with domain: bool (representing constraint (1<=(aux731 + aux732 + aux734)))
c Var 'aux1505' direct represents '0' with '-11992'
c Var 'aux1505' direct represents '1' with '11992'
c Var 'aux1505' order represents '1' with '1'
c Var 'aux1505' order represents '0' with '-11992'
c Encoding variable: aux1506 with domain: bool (representing constraint ((aux735 + aux736 + aux738)<=1))
c Var 'aux1506' direct represents '0' with '-11993'
c Var 'aux1506' direct represents '1' with '11993'
c Var 'aux1506' order represents '1' with '1'
c Var 'aux1506' order represents '0' with '-11993'
c Encoding variable: aux1507 with domain: bool (representing constraint (1<=(aux735 + aux736 + aux738)))
c Var 'aux1507' direct represents '0' with '-11994'
c Var 'aux1507' direct represents '1' with '11994'
c Var 'aux1507' order represents '1' with '1'
c Var 'aux1507' order represents '0' with '-11994'
c Encoding variable: aux1508 with domain: bool (representing constraint ((aux739 + aux740 + aux742)<=1))
c Var 'aux1508' direct represents '0' with '-11995'
c Var 'aux1508' direct represents '1' with '11995'
c Var 'aux1508' order represents '1' with '1'
c Var 'aux1508' order represents '0' with '-11995'
c Encoding variable: aux1509 with domain: bool (representing constraint (1<=(aux739 + aux740 + aux742)))
c Var 'aux1509' direct represents '0' with '-11996'
c Var 'aux1509' direct represents '1' with '11996'
c Var 'aux1509' order represents '1' with '1'
c Var 'aux1509' order represents '0' with '-11996'
c Encoding variable: aux1510 with domain: bool (representing constraint ((aux743 + aux744 + aux746)<=1))
c Var 'aux1510' direct represents '0' with '-11997'
c Var 'aux1510' direct represents '1' with '11997'
c Var 'aux1510' order represents '1' with '1'
c Var 'aux1510' order represents '0' with '-11997'
c Encoding variable: aux1511 with domain: bool (representing constraint (1<=(aux743 + aux744 + aux746)))
c Var 'aux1511' direct represents '0' with '-11998'
c Var 'aux1511' direct represents '1' with '11998'
c Var 'aux1511' order represents '1' with '1'
c Var 'aux1511' order represents '0' with '-11998'
c Encoding variable: aux1512 with domain: bool (representing constraint ((aux757 + aux758 + aux760)<=1))
c Var 'aux1512' direct represents '0' with '-11999'
c Var 'aux1512' direct represents '1' with '11999'
c Var 'aux1512' order represents '1' with '1'
c Var 'aux1512' order represents '0' with '-11999'
c Encoding variable: aux1513 with domain: bool (representing constraint (1<=(aux757 + aux758 + aux760)))
c Var 'aux1513' direct represents '0' with '-12000'
c Var 'aux1513' direct represents '1' with '12000'
c Var 'aux1513' order represents '1' with '1'
c Var 'aux1513' order represents '0' with '-12000'
c Encoding variable: aux1514 with domain: bool (representing constraint ((aux766 + aux767 + aux769)<=1))
c Var 'aux1514' direct represents '0' with '-12001'
c Var 'aux1514' direct represents '1' with '12001'
c Var 'aux1514' order represents '1' with '1'
c Var 'aux1514' order represents '0' with '-12001'
c Encoding variable: aux1515 with domain: bool (representing constraint (1<=(aux766 + aux767 + aux769)))
c Var 'aux1515' direct represents '0' with '-12002'
c Var 'aux1515' direct represents '1' with '12002'
c Var 'aux1515' order represents '1' with '1'
c Var 'aux1515' order represents '0' with '-12002'
c Encoding variable: aux1516 with domain: bool (representing constraint ((aux770 + aux771 + aux773)<=1))
c Var 'aux1516' direct represents '0' with '-12003'
c Var 'aux1516' direct represents '1' with '12003'
c Var 'aux1516' order represents '1' with '1'
c Var 'aux1516' order represents '0' with '-12003'
c Encoding variable: aux1517 with domain: bool (representing constraint (1<=(aux770 + aux771 + aux773)))
c Var 'aux1517' direct represents '0' with '-12004'
c Var 'aux1517' direct represents '1' with '12004'
c Var 'aux1517' order represents '1' with '1'
c Var 'aux1517' order represents '0' with '-12004'
c Encoding variable: aux1518 with domain: bool (representing constraint ((aux774 + aux775 + aux777)<=1))
c Var 'aux1518' direct represents '0' with '-12005'
c Var 'aux1518' direct represents '1' with '12005'
c Var 'aux1518' order represents '1' with '1'
c Var 'aux1518' order represents '0' with '-12005'
c Encoding variable: aux1519 with domain: bool (representing constraint (1<=(aux774 + aux775 + aux777)))
c Var 'aux1519' direct represents '0' with '-12006'
c Var 'aux1519' direct represents '1' with '12006'
c Var 'aux1519' order represents '1' with '1'
c Var 'aux1519' order represents '0' with '-12006'
c Encoding variable: aux1520 with domain: bool (representing constraint ((aux778 + aux779 + aux781)<=1))
c Var 'aux1520' direct represents '0' with '-12007'
c Var 'aux1520' direct represents '1' with '12007'
c Var 'aux1520' order represents '1' with '1'
c Var 'aux1520' order represents '0' with '-12007'
c Encoding variable: aux1521 with domain: bool (representing constraint (1<=(aux778 + aux779 + aux781)))
c Var 'aux1521' direct represents '0' with '-12008'
c Var 'aux1521' direct represents '1' with '12008'
c Var 'aux1521' order represents '1' with '1'
c Var 'aux1521' order represents '0' with '-12008'
c Encoding variable: aux1522 with domain: bool (representing constraint ((aux782 + aux783 + aux785)<=1))
c Var 'aux1522' direct represents '0' with '-12009'
c Var 'aux1522' direct represents '1' with '12009'
c Var 'aux1522' order represents '1' with '1'
c Var 'aux1522' order represents '0' with '-12009'
c Encoding variable: aux1523 with domain: bool (representing constraint (1<=(aux782 + aux783 + aux785)))
c Var 'aux1523' direct represents '0' with '-12010'
c Var 'aux1523' direct represents '1' with '12010'
c Var 'aux1523' order represents '1' with '1'
c Var 'aux1523' order represents '0' with '-12010'
c Encoding variable: aux1524 with domain: bool (representing constraint ((aux786 + aux787 + aux789)<=1))
c Var 'aux1524' direct represents '0' with '-12011'
c Var 'aux1524' direct represents '1' with '12011'
c Var 'aux1524' order represents '1' with '1'
c Var 'aux1524' order represents '0' with '-12011'
c Encoding variable: aux1525 with domain: bool (representing constraint (1<=(aux786 + aux787 + aux789)))
c Var 'aux1525' direct represents '0' with '-12012'
c Var 'aux1525' direct represents '1' with '12012'
c Var 'aux1525' order represents '1' with '1'
c Var 'aux1525' order represents '0' with '-12012'
c Encoding variable: aux1526 with domain: bool (representing constraint ((aux795 + aux796 + aux798)<=1))
c Var 'aux1526' direct represents '0' with '-12013'
c Var 'aux1526' direct represents '1' with '12013'
c Var 'aux1526' order represents '1' with '1'
c Var 'aux1526' order represents '0' with '-12013'
c Encoding variable: aux1527 with domain: bool (representing constraint (1<=(aux795 + aux796 + aux798)))
c Var 'aux1527' direct represents '0' with '-12014'
c Var 'aux1527' direct represents '1' with '12014'
c Var 'aux1527' order represents '1' with '1'
c Var 'aux1527' order represents '0' with '-12014'
c Encoding variable: aux1528 with domain: bool (representing constraint ((aux800 + aux803 + aux804)<=1))
c Var 'aux1528' direct represents '0' with '-12015'
c Var 'aux1528' direct represents '1' with '12015'
c Var 'aux1528' order represents '1' with '1'
c Var 'aux1528' order represents '0' with '-12015'
c Encoding variable: aux1529 with domain: bool (representing constraint (1<=(aux800 + aux803 + aux804)))
c Var 'aux1529' direct represents '0' with '-12016'
c Var 'aux1529' direct represents '1' with '12016'
c Var 'aux1529' order represents '1' with '1'
c Var 'aux1529' order represents '0' with '-12016'
c Encoding variable: aux1530 with domain: bool (representing constraint ((aux806 + aux809 + aux810)<=1))
c Var 'aux1530' direct represents '0' with '-12017'
c Var 'aux1530' direct represents '1' with '12017'
c Var 'aux1530' order represents '1' with '1'
c Var 'aux1530' order represents '0' with '-12017'
c Encoding variable: aux1531 with domain: bool (representing constraint (1<=(aux806 + aux809 + aux810)))
c Var 'aux1531' direct represents '0' with '-12018'
c Var 'aux1531' direct represents '1' with '12018'
c Var 'aux1531' order represents '1' with '1'
c Var 'aux1531' order represents '0' with '-12018'
c Encoding variable: aux1532 with domain: bool (representing constraint ((aux812 + aux815 + aux816)<=1))
c Var 'aux1532' direct represents '0' with '-12019'
c Var 'aux1532' direct represents '1' with '12019'
c Var 'aux1532' order represents '1' with '1'
c Var 'aux1532' order represents '0' with '-12019'
c Encoding variable: aux1533 with domain: bool (representing constraint (1<=(aux812 + aux815 + aux816)))
c Var 'aux1533' direct represents '0' with '-12020'
c Var 'aux1533' direct represents '1' with '12020'
c Var 'aux1533' order represents '1' with '1'
c Var 'aux1533' order represents '0' with '-12020'
c Encoding variable: aux1534 with domain: bool (representing constraint ((aux818 + aux821 + aux822)<=1))
c Var 'aux1534' direct represents '0' with '-12021'
c Var 'aux1534' direct represents '1' with '12021'
c Var 'aux1534' order represents '1' with '1'
c Var 'aux1534' order represents '0' with '-12021'
c Encoding variable: aux1535 with domain: bool (representing constraint (1<=(aux818 + aux821 + aux822)))
c Var 'aux1535' direct represents '0' with '-12022'
c Var 'aux1535' direct represents '1' with '12022'
c Var 'aux1535' order represents '1' with '1'
c Var 'aux1535' order represents '0' with '-12022'
c Encoding variable: aux1536 with domain: bool (representing constraint ((aux824 + aux827 + aux828)<=1))
c Var 'aux1536' direct represents '0' with '-12023'
c Var 'aux1536' direct represents '1' with '12023'
c Var 'aux1536' order represents '1' with '1'
c Var 'aux1536' order represents '0' with '-12023'
c Encoding variable: aux1537 with domain: bool (representing constraint (1<=(aux824 + aux827 + aux828)))
c Var 'aux1537' direct represents '0' with '-12024'
c Var 'aux1537' direct represents '1' with '12024'
c Var 'aux1537' order represents '1' with '1'
c Var 'aux1537' order represents '0' with '-12024'
c Encoding variable: aux1538 with domain: bool (representing constraint ((aux830 + aux833 + aux834)<=1))
c Var 'aux1538' direct represents '0' with '-12025'
c Var 'aux1538' direct represents '1' with '12025'
c Var 'aux1538' order represents '1' with '1'
c Var 'aux1538' order represents '0' with '-12025'
c Encoding variable: aux1539 with domain: bool (representing constraint (1<=(aux830 + aux833 + aux834)))
c Var 'aux1539' direct represents '0' with '-12026'
c Var 'aux1539' direct represents '1' with '12026'
c Var 'aux1539' order represents '1' with '1'
c Var 'aux1539' order represents '0' with '-12026'
c Encoding variable: aux1540 with domain: bool (representing constraint ((aux836 + aux839 + aux840)<=1))
c Var 'aux1540' direct represents '0' with '-12027'
c Var 'aux1540' direct represents '1' with '12027'
c Var 'aux1540' order represents '1' with '1'
c Var 'aux1540' order represents '0' with '-12027'
c Encoding variable: aux1541 with domain: bool (representing constraint (1<=(aux836 + aux839 + aux840)))
c Var 'aux1541' direct represents '0' with '-12028'
c Var 'aux1541' direct represents '1' with '12028'
c Var 'aux1541' order represents '1' with '1'
c Var 'aux1541' order represents '0' with '-12028'
c Encoding variable: aux1542 with domain: bool (representing constraint ((aux842 + aux845 + aux846)<=1))
c Var 'aux1542' direct represents '0' with '-12029'
c Var 'aux1542' direct represents '1' with '12029'
c Var 'aux1542' order represents '1' with '1'
c Var 'aux1542' order represents '0' with '-12029'
c Encoding variable: aux1543 with domain: bool (representing constraint (1<=(aux842 + aux845 + aux846)))
c Var 'aux1543' direct represents '0' with '-12030'
c Var 'aux1543' direct represents '1' with '12030'
c Var 'aux1543' order represents '1' with '1'
c Var 'aux1543' order represents '0' with '-12030'
c Encoding variable: aux1544 with domain: bool (representing constraint ((aux848 + aux851 + aux852)<=1))
c Var 'aux1544' direct represents '0' with '-12031'
c Var 'aux1544' direct represents '1' with '12031'
c Var 'aux1544' order represents '1' with '1'
c Var 'aux1544' order represents '0' with '-12031'
c Encoding variable: aux1545 with domain: bool (representing constraint (1<=(aux848 + aux851 + aux852)))
c Var 'aux1545' direct represents '0' with '-12032'
c Var 'aux1545' direct represents '1' with '12032'
c Var 'aux1545' order represents '1' with '1'
c Var 'aux1545' order represents '0' with '-12032'
c Encoding variable: aux1546 with domain: bool (representing constraint ((aux854 + aux855 + aux857)<=1))
c Var 'aux1546' direct represents '0' with '-12033'
c Var 'aux1546' direct represents '1' with '12033'
c Var 'aux1546' order represents '1' with '1'
c Var 'aux1546' order represents '0' with '-12033'
c Encoding variable: aux1547 with domain: bool (representing constraint (1<=(aux854 + aux855 + aux857)))
c Var 'aux1547' direct represents '0' with '-12034'
c Var 'aux1547' direct represents '1' with '12034'
c Var 'aux1547' order represents '1' with '1'
c Var 'aux1547' order represents '0' with '-12034'
c Encoding variable: aux1548 with domain: bool (representing constraint ((aux859 + aux860 + aux862)<=1))
c Var 'aux1548' direct represents '0' with '-12035'
c Var 'aux1548' direct represents '1' with '12035'
c Var 'aux1548' order represents '1' with '1'
c Var 'aux1548' order represents '0' with '-12035'
c Encoding variable: aux1549 with domain: bool (representing constraint (1<=(aux859 + aux860 + aux862)))
c Var 'aux1549' direct represents '0' with '-12036'
c Var 'aux1549' direct represents '1' with '12036'
c Var 'aux1549' order represents '1' with '1'
c Var 'aux1549' order represents '0' with '-12036'
c Encoding variable: aux1550 with domain: bool (representing constraint ((aux864 + aux865 + aux867)<=1))
c Var 'aux1550' direct represents '0' with '-12037'
c Var 'aux1550' direct represents '1' with '12037'
c Var 'aux1550' order represents '1' with '1'
c Var 'aux1550' order represents '0' with '-12037'
c Encoding variable: aux1551 with domain: bool (representing constraint (1<=(aux864 + aux865 + aux867)))
c Var 'aux1551' direct represents '0' with '-12038'
c Var 'aux1551' direct represents '1' with '12038'
c Var 'aux1551' order represents '1' with '1'
c Var 'aux1551' order represents '0' with '-12038'
c Encoding variable: aux1552 with domain: bool (representing constraint ((aux869 + aux870 + aux872)<=1))
c Var 'aux1552' direct represents '0' with '-12039'
c Var 'aux1552' direct represents '1' with '12039'
c Var 'aux1552' order represents '1' with '1'
c Var 'aux1552' order represents '0' with '-12039'
c Encoding variable: aux1553 with domain: bool (representing constraint (1<=(aux869 + aux870 + aux872)))
c Var 'aux1553' direct represents '0' with '-12040'
c Var 'aux1553' direct represents '1' with '12040'
c Var 'aux1553' order represents '1' with '1'
c Var 'aux1553' order represents '0' with '-12040'
c Encoding variable: aux1554 with domain: bool (representing constraint ((aux874 + aux875 + aux877)<=1))
c Var 'aux1554' direct represents '0' with '-12041'
c Var 'aux1554' direct represents '1' with '12041'
c Var 'aux1554' order represents '1' with '1'
c Var 'aux1554' order represents '0' with '-12041'
c Encoding variable: aux1555 with domain: bool (representing constraint (1<=(aux874 + aux875 + aux877)))
c Var 'aux1555' direct represents '0' with '-12042'
c Var 'aux1555' direct represents '1' with '12042'
c Var 'aux1555' order represents '1' with '1'
c Var 'aux1555' order represents '0' with '-12042'
c Encoding variable: aux1556 with domain: bool (representing constraint ((aux879 + aux880 + aux882)<=1))
c Var 'aux1556' direct represents '0' with '-12043'
c Var 'aux1556' direct represents '1' with '12043'
c Var 'aux1556' order represents '1' with '1'
c Var 'aux1556' order represents '0' with '-12043'
c Encoding variable: aux1557 with domain: bool (representing constraint (1<=(aux879 + aux880 + aux882)))
c Var 'aux1557' direct represents '0' with '-12044'
c Var 'aux1557' direct represents '1' with '12044'
c Var 'aux1557' order represents '1' with '1'
c Var 'aux1557' order represents '0' with '-12044'
c Encoding variable: aux1558 with domain: bool (representing constraint ((aux884 + aux885 + aux887)<=1))
c Var 'aux1558' direct represents '0' with '-12045'
c Var 'aux1558' direct represents '1' with '12045'
c Var 'aux1558' order represents '1' with '1'
c Var 'aux1558' order represents '0' with '-12045'
c Encoding variable: aux1559 with domain: bool (representing constraint (1<=(aux884 + aux885 + aux887)))
c Var 'aux1559' direct represents '0' with '-12046'
c Var 'aux1559' direct represents '1' with '12046'
c Var 'aux1559' order represents '1' with '1'
c Var 'aux1559' order represents '0' with '-12046'
c Encoding variable: aux1560 with domain: bool (representing constraint ((aux895 + aux896 + aux898)<=1))
c Var 'aux1560' direct represents '0' with '-12047'
c Var 'aux1560' direct represents '1' with '12047'
c Var 'aux1560' order represents '1' with '1'
c Var 'aux1560' order represents '0' with '-12047'
c Encoding variable: aux1561 with domain: bool (representing constraint (1<=(aux895 + aux896 + aux898)))
c Var 'aux1561' direct represents '0' with '-12048'
c Var 'aux1561' direct represents '1' with '12048'
c Var 'aux1561' order represents '1' with '1'
c Var 'aux1561' order represents '0' with '-12048'
c Encoding variable: aux1562 with domain: bool (representing constraint ((aux904 + aux905 + aux907)<=1))
c Var 'aux1562' direct represents '0' with '-12049'
c Var 'aux1562' direct represents '1' with '12049'
c Var 'aux1562' order represents '1' with '1'
c Var 'aux1562' order represents '0' with '-12049'
c Encoding variable: aux1563 with domain: bool (representing constraint (1<=(aux904 + aux905 + aux907)))
c Var 'aux1563' direct represents '0' with '-12050'
c Var 'aux1563' direct represents '1' with '12050'
c Var 'aux1563' order represents '1' with '1'
c Var 'aux1563' order represents '0' with '-12050'
c Encoding variable: aux1564 with domain: bool (representing constraint ((aux908 + aux909 + aux911)<=1))
c Var 'aux1564' direct represents '0' with '-12051'
c Var 'aux1564' direct represents '1' with '12051'
c Var 'aux1564' order represents '1' with '1'
c Var 'aux1564' order represents '0' with '-12051'
c Encoding variable: aux1565 with domain: bool (representing constraint (1<=(aux908 + aux909 + aux911)))
c Var 'aux1565' direct represents '0' with '-12052'
c Var 'aux1565' direct represents '1' with '12052'
c Var 'aux1565' order represents '1' with '1'
c Var 'aux1565' order represents '0' with '-12052'
c Encoding variable: aux1566 with domain: bool (representing constraint ((aux912 + aux913 + aux915)<=1))
c Var 'aux1566' direct represents '0' with '-12053'
c Var 'aux1566' direct represents '1' with '12053'
c Var 'aux1566' order represents '1' with '1'
c Var 'aux1566' order represents '0' with '-12053'
c Encoding variable: aux1567 with domain: bool (representing constraint (1<=(aux912 + aux913 + aux915)))
c Var 'aux1567' direct represents '0' with '-12054'
c Var 'aux1567' direct represents '1' with '12054'
c Var 'aux1567' order represents '1' with '1'
c Var 'aux1567' order represents '0' with '-12054'
c Encoding variable: aux1568 with domain: bool (representing constraint ((aux916 + aux917 + aux919)<=1))
c Var 'aux1568' direct represents '0' with '-12055'
c Var 'aux1568' direct represents '1' with '12055'
c Var 'aux1568' order represents '1' with '1'
c Var 'aux1568' order represents '0' with '-12055'
c Encoding variable: aux1569 with domain: bool (representing constraint (1<=(aux916 + aux917 + aux919)))
c Var 'aux1569' direct represents '0' with '-12056'
c Var 'aux1569' direct represents '1' with '12056'
c Var 'aux1569' order represents '1' with '1'
c Var 'aux1569' order represents '0' with '-12056'
c Encoding variable: aux1570 with domain: bool (representing constraint ((aux920 + aux921 + aux923)<=1))
c Var 'aux1570' direct represents '0' with '-12057'
c Var 'aux1570' direct represents '1' with '12057'
c Var 'aux1570' order represents '1' with '1'
c Var 'aux1570' order represents '0' with '-12057'
c Encoding variable: aux1571 with domain: bool (representing constraint (1<=(aux920 + aux921 + aux923)))
c Var 'aux1571' direct represents '0' with '-12058'
c Var 'aux1571' direct represents '1' with '12058'
c Var 'aux1571' order represents '1' with '1'
c Var 'aux1571' order represents '0' with '-12058'
c Encoding variable: aux1572 with domain: bool (representing constraint ((aux924 + aux925 + aux927)<=1))
c Var 'aux1572' direct represents '0' with '-12059'
c Var 'aux1572' direct represents '1' with '12059'
c Var 'aux1572' order represents '1' with '1'
c Var 'aux1572' order represents '0' with '-12059'
c Encoding variable: aux1573 with domain: bool (representing constraint (1<=(aux924 + aux925 + aux927)))
c Var 'aux1573' direct represents '0' with '-12060'
c Var 'aux1573' direct represents '1' with '12060'
c Var 'aux1573' order represents '1' with '1'
c Var 'aux1573' order represents '0' with '-12060'
c Encoding variable: aux1574 with domain: bool (representing constraint ((aux933 + aux934 + aux936)<=1))
c Var 'aux1574' direct represents '0' with '-12061'
c Var 'aux1574' direct represents '1' with '12061'
c Var 'aux1574' order represents '1' with '1'
c Var 'aux1574' order represents '0' with '-12061'
c Encoding variable: aux1575 with domain: bool (representing constraint (1<=(aux933 + aux934 + aux936)))
c Var 'aux1575' direct represents '0' with '-12062'
c Var 'aux1575' direct represents '1' with '12062'
c Var 'aux1575' order represents '1' with '1'
c Var 'aux1575' order represents '0' with '-12062'
c Encoding variable: aux1576 with domain: bool (representing constraint ((aux942 + aux943 + aux945)<=1))
c Var 'aux1576' direct represents '0' with '-12063'
c Var 'aux1576' direct represents '1' with '12063'
c Var 'aux1576' order represents '1' with '1'
c Var 'aux1576' order represents '0' with '-12063'
c Encoding variable: aux1577 with domain: bool (representing constraint (1<=(aux942 + aux943 + aux945)))
c Var 'aux1577' direct represents '0' with '-12064'
c Var 'aux1577' direct represents '1' with '12064'
c Var 'aux1577' order represents '1' with '1'
c Var 'aux1577' order represents '0' with '-12064'
c Encoding variable: aux1578 with domain: bool (representing constraint ((aux951 + aux952 + aux954)<=1))
c Var 'aux1578' direct represents '0' with '-12065'
c Var 'aux1578' direct represents '1' with '12065'
c Var 'aux1578' order represents '1' with '1'
c Var 'aux1578' order represents '0' with '-12065'
c Encoding variable: aux1579 with domain: bool (representing constraint (1<=(aux951 + aux952 + aux954)))
c Var 'aux1579' direct represents '0' with '-12066'
c Var 'aux1579' direct represents '1' with '12066'
c Var 'aux1579' order represents '1' with '1'
c Var 'aux1579' order represents '0' with '-12066'
c Encoding variable: aux1580 with domain: bool (representing constraint ((aux955 + aux956 + aux958)<=1))
c Var 'aux1580' direct represents '0' with '-12067'
c Var 'aux1580' direct represents '1' with '12067'
c Var 'aux1580' order represents '1' with '1'
c Var 'aux1580' order represents '0' with '-12067'
c Encoding variable: aux1581 with domain: bool (representing constraint (1<=(aux955 + aux956 + aux958)))
c Var 'aux1581' direct represents '0' with '-12068'
c Var 'aux1581' direct represents '1' with '12068'
c Var 'aux1581' order represents '1' with '1'
c Var 'aux1581' order represents '0' with '-12068'
c Encoding variable: aux1582 with domain: bool (representing constraint ((aux959 + aux960 + aux962)<=1))
c Var 'aux1582' direct represents '0' with '-12069'
c Var 'aux1582' direct represents '1' with '12069'
c Var 'aux1582' order represents '1' with '1'
c Var 'aux1582' order represents '0' with '-12069'
c Encoding variable: aux1583 with domain: bool (representing constraint (1<=(aux959 + aux960 + aux962)))
c Var 'aux1583' direct represents '0' with '-12070'
c Var 'aux1583' direct represents '1' with '12070'
c Var 'aux1583' order represents '1' with '1'
c Var 'aux1583' order represents '0' with '-12070'
c Encoding variable: aux1584 with domain: bool (representing constraint ((aux963 + aux964 + aux966)<=1))
c Var 'aux1584' direct represents '0' with '-12071'
c Var 'aux1584' direct represents '1' with '12071'
c Var 'aux1584' order represents '1' with '1'
c Var 'aux1584' order represents '0' with '-12071'
c Encoding variable: aux1585 with domain: bool (representing constraint (1<=(aux963 + aux964 + aux966)))
c Var 'aux1585' direct represents '0' with '-12072'
c Var 'aux1585' direct represents '1' with '12072'
c Var 'aux1585' order represents '1' with '1'
c Var 'aux1585' order represents '0' with '-12072'
c Encoding variable: aux1586 with domain: bool (representing constraint ((aux967 + aux968 + aux970)<=1))
c Var 'aux1586' direct represents '0' with '-12073'
c Var 'aux1586' direct represents '1' with '12073'
c Var 'aux1586' order represents '1' with '1'
c Var 'aux1586' order represents '0' with '-12073'
c Encoding variable: aux1587 with domain: bool (representing constraint (1<=(aux967 + aux968 + aux970)))
c Var 'aux1587' direct represents '0' with '-12074'
c Var 'aux1587' direct represents '1' with '12074'
c Var 'aux1587' order represents '1' with '1'
c Var 'aux1587' order represents '0' with '-12074'
c Encoding variable: aux1588 with domain: bool (representing constraint ((aux971 + aux972 + aux974)<=1))
c Var 'aux1588' direct represents '0' with '-12075'
c Var 'aux1588' direct represents '1' with '12075'
c Var 'aux1588' order represents '1' with '1'
c Var 'aux1588' order represents '0' with '-12075'
c Encoding variable: aux1589 with domain: bool (representing constraint (1<=(aux971 + aux972 + aux974)))
c Var 'aux1589' direct represents '0' with '-12076'
c Var 'aux1589' direct represents '1' with '12076'
c Var 'aux1589' order represents '1' with '1'
c Var 'aux1589' order represents '0' with '-12076'
c Encoding variable: aux1590 with domain: bool (representing constraint ((aux980 + aux981 + aux983)<=1))
c Var 'aux1590' direct represents '0' with '-12077'
c Var 'aux1590' direct represents '1' with '12077'
c Var 'aux1590' order represents '1' with '1'
c Var 'aux1590' order represents '0' with '-12077'
c Encoding variable: aux1591 with domain: bool (representing constraint (1<=(aux980 + aux981 + aux983)))
c Var 'aux1591' direct represents '0' with '-12078'
c Var 'aux1591' direct represents '1' with '12078'
c Var 'aux1591' order represents '1' with '1'
c Var 'aux1591' order represents '0' with '-12078'
c Encoding variable: aux1592 with domain: bool (representing constraint ((aux984 + aux985 + aux987)<=1))
c Var 'aux1592' direct represents '0' with '-12079'
c Var 'aux1592' direct represents '1' with '12079'
c Var 'aux1592' order represents '1' with '1'
c Var 'aux1592' order represents '0' with '-12079'
c Encoding variable: aux1593 with domain: bool (representing constraint (1<=(aux984 + aux985 + aux987)))
c Var 'aux1593' direct represents '0' with '-12080'
c Var 'aux1593' direct represents '1' with '12080'
c Var 'aux1593' order represents '1' with '1'
c Var 'aux1593' order represents '0' with '-12080'
c Encoding variable: aux1594 with domain: bool (representing constraint ((aux988 + aux989 + aux991)<=1))
c Var 'aux1594' direct represents '0' with '-12081'
c Var 'aux1594' direct represents '1' with '12081'
c Var 'aux1594' order represents '1' with '1'
c Var 'aux1594' order represents '0' with '-12081'
c Encoding variable: aux1595 with domain: bool (representing constraint (1<=(aux988 + aux989 + aux991)))
c Var 'aux1595' direct represents '0' with '-12082'
c Var 'aux1595' direct represents '1' with '12082'
c Var 'aux1595' order represents '1' with '1'
c Var 'aux1595' order represents '0' with '-12082'
c Encoding variable: aux1596 with domain: bool (representing constraint ((aux992 + aux993 + aux995)<=1))
c Var 'aux1596' direct represents '0' with '-12083'
c Var 'aux1596' direct represents '1' with '12083'
c Var 'aux1596' order represents '1' with '1'
c Var 'aux1596' order represents '0' with '-12083'
c Encoding variable: aux1597 with domain: bool (representing constraint (1<=(aux992 + aux993 + aux995)))
c Var 'aux1597' direct represents '0' with '-12084'
c Var 'aux1597' direct represents '1' with '12084'
c Var 'aux1597' order represents '1' with '1'
c Var 'aux1597' order represents '0' with '-12084'
c Encoding variable: aux1598 with domain: bool (representing constraint ((aux996 + aux997 + aux999)<=1))
c Var 'aux1598' direct represents '0' with '-12085'
c Var 'aux1598' direct represents '1' with '12085'
c Var 'aux1598' order represents '1' with '1'
c Var 'aux1598' order represents '0' with '-12085'
c Encoding variable: aux1599 with domain: bool (representing constraint (1<=(aux996 + aux997 + aux999)))
c Var 'aux1599' direct represents '0' with '-12086'
c Var 'aux1599' direct represents '1' with '12086'
c Var 'aux1599' order represents '1' with '1'
c Var 'aux1599' order represents '0' with '-12086'
c Encoding variable: aux1600 with domain: bool (representing constraint ((aux1005 + aux1006 + aux1008)<=1))
c Var 'aux1600' direct represents '0' with '-12087'
c Var 'aux1600' direct represents '1' with '12087'
c Var 'aux1600' order represents '1' with '1'
c Var 'aux1600' order represents '0' with '-12087'
c Encoding variable: aux1601 with domain: bool (representing constraint (1<=(aux1005 + aux1006 + aux1008)))
c Var 'aux1601' direct represents '0' with '-12088'
c Var 'aux1601' direct represents '1' with '12088'
c Var 'aux1601' order represents '1' with '1'
c Var 'aux1601' order represents '0' with '-12088'
c Encoding variable: aux1602 with domain: bool (representing constraint ((aux1009 + aux1010 + aux1012)<=1))
c Var 'aux1602' direct represents '0' with '-12089'
c Var 'aux1602' direct represents '1' with '12089'
c Var 'aux1602' order represents '1' with '1'
c Var 'aux1602' order represents '0' with '-12089'
c Encoding variable: aux1603 with domain: bool (representing constraint (1<=(aux1009 + aux1010 + aux1012)))
c Var 'aux1603' direct represents '0' with '-12090'
c Var 'aux1603' direct represents '1' with '12090'
c Var 'aux1603' order represents '1' with '1'
c Var 'aux1603' order represents '0' with '-12090'
c Encoding variable: aux1604 with domain: bool (representing constraint ((aux1013 + aux1014 + aux1016)<=1))
c Var 'aux1604' direct represents '0' with '-12091'
c Var 'aux1604' direct represents '1' with '12091'
c Var 'aux1604' order represents '1' with '1'
c Var 'aux1604' order represents '0' with '-12091'
c Encoding variable: aux1605 with domain: bool (representing constraint (1<=(aux1013 + aux1014 + aux1016)))
c Var 'aux1605' direct represents '0' with '-12092'
c Var 'aux1605' direct represents '1' with '12092'
c Var 'aux1605' order represents '1' with '1'
c Var 'aux1605' order represents '0' with '-12092'
c Encoding variable: aux1606 with domain: bool (representing constraint ((aux1017 + aux1018 + aux1020)<=1))
c Var 'aux1606' direct represents '0' with '-12093'
c Var 'aux1606' direct represents '1' with '12093'
c Var 'aux1606' order represents '1' with '1'
c Var 'aux1606' order represents '0' with '-12093'
c Encoding variable: aux1607 with domain: bool (representing constraint (1<=(aux1017 + aux1018 + aux1020)))
c Var 'aux1607' direct represents '0' with '-12094'
c Var 'aux1607' direct represents '1' with '12094'
c Var 'aux1607' order represents '1' with '1'
c Var 'aux1607' order represents '0' with '-12094'
c Encoding variable: aux1608 with domain: bool (representing constraint ((aux1021 + aux1022 + aux1024)<=1))
c Var 'aux1608' direct represents '0' with '-12095'
c Var 'aux1608' direct represents '1' with '12095'
c Var 'aux1608' order represents '1' with '1'
c Var 'aux1608' order represents '0' with '-12095'
c Encoding variable: aux1609 with domain: bool (representing constraint (1<=(aux1021 + aux1022 + aux1024)))
c Var 'aux1609' direct represents '0' with '-12096'
c Var 'aux1609' direct represents '1' with '12096'
c Var 'aux1609' order represents '1' with '1'
c Var 'aux1609' order represents '0' with '-12096'
c Encoding variable: aux1610 with domain: bool (representing constraint ((aux1025 + aux1026 + aux1028)<=1))
c Var 'aux1610' direct represents '0' with '-12097'
c Var 'aux1610' direct represents '1' with '12097'
c Var 'aux1610' order represents '1' with '1'
c Var 'aux1610' order represents '0' with '-12097'
c Encoding variable: aux1611 with domain: bool (representing constraint (1<=(aux1025 + aux1026 + aux1028)))
c Var 'aux1611' direct represents '0' with '-12098'
c Var 'aux1611' direct represents '1' with '12098'
c Var 'aux1611' order represents '1' with '1'
c Var 'aux1611' order represents '0' with '-12098'
c Encoding variable: aux1612 with domain: bool (representing constraint ((aux1029 + aux1030 + aux1032)<=1))
c Var 'aux1612' direct represents '0' with '-12099'
c Var 'aux1612' direct represents '1' with '12099'
c Var 'aux1612' order represents '1' with '1'
c Var 'aux1612' order represents '0' with '-12099'
c Encoding variable: aux1613 with domain: bool (representing constraint (1<=(aux1029 + aux1030 + aux1032)))
c Var 'aux1613' direct represents '0' with '-12100'
c Var 'aux1613' direct represents '1' with '12100'
c Var 'aux1613' order represents '1' with '1'
c Var 'aux1613' order represents '0' with '-12100'
c Encoding variable: aux1614 with domain: bool (representing constraint ((aux1043 + aux1044 + aux1046)<=1))
c Var 'aux1614' direct represents '0' with '-12101'
c Var 'aux1614' direct represents '1' with '12101'
c Var 'aux1614' order represents '1' with '1'
c Var 'aux1614' order represents '0' with '-12101'
c Encoding variable: aux1615 with domain: bool (representing constraint (1<=(aux1043 + aux1044 + aux1046)))
c Var 'aux1615' direct represents '0' with '-12102'
c Var 'aux1615' direct represents '1' with '12102'
c Var 'aux1615' order represents '1' with '1'
c Var 'aux1615' order represents '0' with '-12102'
c Encoding variable: aux1616 with domain: bool (representing constraint ((aux1047 + aux1048 + aux1050)<=1))
c Var 'aux1616' direct represents '0' with '-12103'
c Var 'aux1616' direct represents '1' with '12103'
c Var 'aux1616' order represents '1' with '1'
c Var 'aux1616' order represents '0' with '-12103'
c Encoding variable: aux1617 with domain: bool (representing constraint (1<=(aux1047 + aux1048 + aux1050)))
c Var 'aux1617' direct represents '0' with '-12104'
c Var 'aux1617' direct represents '1' with '12104'
c Var 'aux1617' order represents '1' with '1'
c Var 'aux1617' order represents '0' with '-12104'
c Encoding variable: aux1618 with domain: bool (representing constraint ((aux1051 + aux1052 + (field_00003_00007=1))<=1))
c Var 'aux1618' direct represents '0' with '-12105'
c Var 'aux1618' direct represents '1' with '12105'
c Var 'aux1618' order represents '1' with '1'
c Var 'aux1618' order represents '0' with '-12105'
c Encoding variable: aux1619 with domain: bool (representing constraint (1<=(aux1051 + aux1052 + (field_00003_00007=1))))
c Var 'aux1619' direct represents '0' with '-12106'
c Var 'aux1619' direct represents '1' with '12106'
c Var 'aux1619' order represents '1' with '1'
c Var 'aux1619' order represents '0' with '-12106'
c Encoding variable: aux1620 with domain: bool (representing constraint ((aux1053 + aux1054 + (field_00003_00007=2))<=1))
c Var 'aux1620' direct represents '0' with '-12107'
c Var 'aux1620' direct represents '1' with '12107'
c Var 'aux1620' order represents '1' with '1'
c Var 'aux1620' order represents '0' with '-12107'
c Encoding variable: aux1621 with domain: bool (representing constraint (1<=(aux1053 + aux1054 + (field_00003_00007=2))))
c Var 'aux1621' direct represents '0' with '-12108'
c Var 'aux1621' direct represents '1' with '12108'
c Var 'aux1621' order represents '1' with '1'
c Var 'aux1621' order represents '0' with '-12108'
c Encoding variable: aux1622 with domain: bool (representing constraint ((aux1055 + aux1056 + (field_00003_00007=3))<=1))
c Var 'aux1622' direct represents '0' with '-12109'
c Var 'aux1622' direct represents '1' with '12109'
c Var 'aux1622' order represents '1' with '1'
c Var 'aux1622' order represents '0' with '-12109'
c Encoding variable: aux1623 with domain: bool (representing constraint (1<=(aux1055 + aux1056 + (field_00003_00007=3))))
c Var 'aux1623' direct represents '0' with '-12110'
c Var 'aux1623' direct represents '1' with '12110'
c Var 'aux1623' order represents '1' with '1'
c Var 'aux1623' order represents '0' with '-12110'
c Encoding variable: aux1624 with domain: bool (representing constraint ((aux1057 + aux1058 + (field_00003_00007=4))<=1))
c Var 'aux1624' direct represents '0' with '-12111'
c Var 'aux1624' direct represents '1' with '12111'
c Var 'aux1624' order represents '1' with '1'
c Var 'aux1624' order represents '0' with '-12111'
c Encoding variable: aux1625 with domain: bool (representing constraint (1<=(aux1057 + aux1058 + (field_00003_00007=4))))
c Var 'aux1625' direct represents '0' with '-12112'
c Var 'aux1625' direct represents '1' with '12112'
c Var 'aux1625' order represents '1' with '1'
c Var 'aux1625' order represents '0' with '-12112'
c Encoding variable: aux1626 with domain: bool (representing constraint ((aux1071 + aux1072 + (field_00003_00007=9))<=1))
c Var 'aux1626' direct represents '0' with '-12113'
c Var 'aux1626' direct represents '1' with '12113'
c Var 'aux1626' order represents '1' with '1'
c Var 'aux1626' order represents '0' with '-12113'
c Encoding variable: aux1627 with domain: bool (representing constraint (1<=(aux1071 + aux1072 + (field_00003_00007=9))))
c Var 'aux1627' direct represents '0' with '-12114'
c Var 'aux1627' direct represents '1' with '12114'
c Var 'aux1627' order represents '1' with '1'
c Var 'aux1627' order represents '0' with '-12114'
c Encoding variable: aux1628 with domain: bool (representing constraint ((aux1073 + aux1074 + aux1076)<=1))
c Var 'aux1628' direct represents '0' with '-12115'
c Var 'aux1628' direct represents '1' with '12115'
c Var 'aux1628' order represents '1' with '1'
c Var 'aux1628' order represents '0' with '-12115'
c Encoding variable: aux1629 with domain: bool (representing constraint (1<=(aux1073 + aux1074 + aux1076)))
c Var 'aux1629' direct represents '0' with '-12116'
c Var 'aux1629' direct represents '1' with '12116'
c Var 'aux1629' order represents '1' with '1'
c Var 'aux1629' order represents '0' with '-12116'
c Encoding variable: aux1630 with domain: bool (representing constraint ((aux1077 + aux1078 + aux1080)<=1))
c Var 'aux1630' direct represents '0' with '-12117'
c Var 'aux1630' direct represents '1' with '12117'
c Var 'aux1630' order represents '1' with '1'
c Var 'aux1630' order represents '0' with '-12117'
c Encoding variable: aux1631 with domain: bool (representing constraint (1<=(aux1077 + aux1078 + aux1080)))
c Var 'aux1631' direct represents '0' with '-12118'
c Var 'aux1631' direct represents '1' with '12118'
c Var 'aux1631' order represents '1' with '1'
c Var 'aux1631' order represents '0' with '-12118'
c Encoding variable: aux1632 with domain: bool (representing constraint ((aux1086 + aux1087 + aux1089)<=1))
c Var 'aux1632' direct represents '0' with '-12119'
c Var 'aux1632' direct represents '1' with '12119'
c Var 'aux1632' order represents '1' with '1'
c Var 'aux1632' order represents '0' with '-12119'
c Encoding variable: aux1633 with domain: bool (representing constraint (1<=(aux1086 + aux1087 + aux1089)))
c Var 'aux1633' direct represents '0' with '-12120'
c Var 'aux1633' direct represents '1' with '12120'
c Var 'aux1633' order represents '1' with '1'
c Var 'aux1633' order represents '0' with '-12120'
c Encoding variable: aux1634 with domain: bool (representing constraint ((aux1090 + aux1091 + aux1093)<=1))
c Var 'aux1634' direct represents '0' with '-12121'
c Var 'aux1634' direct represents '1' with '12121'
c Var 'aux1634' order represents '1' with '1'
c Var 'aux1634' order represents '0' with '-12121'
c Encoding variable: aux1635 with domain: bool (representing constraint (1<=(aux1090 + aux1091 + aux1093)))
c Var 'aux1635' direct represents '0' with '-12122'
c Var 'aux1635' direct represents '1' with '12122'
c Var 'aux1635' order represents '1' with '1'
c Var 'aux1635' order represents '0' with '-12122'
c Encoding variable: aux1636 with domain: bool (representing constraint ((aux1094 + aux1095 + aux1097)<=1))
c Var 'aux1636' direct represents '0' with '-12123'
c Var 'aux1636' direct represents '1' with '12123'
c Var 'aux1636' order represents '1' with '1'
c Var 'aux1636' order represents '0' with '-12123'
c Encoding variable: aux1637 with domain: bool (representing constraint (1<=(aux1094 + aux1095 + aux1097)))
c Var 'aux1637' direct represents '0' with '-12124'
c Var 'aux1637' direct represents '1' with '12124'
c Var 'aux1637' order represents '1' with '1'
c Var 'aux1637' order represents '0' with '-12124'
c Encoding variable: aux1638 with domain: bool (representing constraint ((aux1103 + aux1104 + aux1106)<=1))
c Var 'aux1638' direct represents '0' with '-12125'
c Var 'aux1638' direct represents '1' with '12125'
c Var 'aux1638' order represents '1' with '1'
c Var 'aux1638' order represents '0' with '-12125'
c Encoding variable: aux1639 with domain: bool (representing constraint (1<=(aux1103 + aux1104 + aux1106)))
c Var 'aux1639' direct represents '0' with '-12126'
c Var 'aux1639' direct represents '1' with '12126'
c Var 'aux1639' order represents '1' with '1'
c Var 'aux1639' order represents '0' with '-12126'
c Encoding variable: aux1640 with domain: bool (representing constraint ((aux1107 + aux1108 + aux1110)<=1))
c Var 'aux1640' direct represents '0' with '-12127'
c Var 'aux1640' direct represents '1' with '12127'
c Var 'aux1640' order represents '1' with '1'
c Var 'aux1640' order represents '0' with '-12127'
c Encoding variable: aux1641 with domain: bool (representing constraint (1<=(aux1107 + aux1108 + aux1110)))
c Var 'aux1641' direct represents '0' with '-12128'
c Var 'aux1641' direct represents '1' with '12128'
c Var 'aux1641' order represents '1' with '1'
c Var 'aux1641' order represents '0' with '-12128'
c Encoding variable: aux1642 with domain: bool (representing constraint ((aux1111 + aux1112 + aux1114)<=1))
c Var 'aux1642' direct represents '0' with '-12129'
c Var 'aux1642' direct represents '1' with '12129'
c Var 'aux1642' order represents '1' with '1'
c Var 'aux1642' order represents '0' with '-12129'
c Encoding variable: aux1643 with domain: bool (representing constraint (1<=(aux1111 + aux1112 + aux1114)))
c Var 'aux1643' direct represents '0' with '-12130'
c Var 'aux1643' direct represents '1' with '12130'
c Var 'aux1643' order represents '1' with '1'
c Var 'aux1643' order represents '0' with '-12130'
c Encoding variable: aux1644 with domain: bool (representing constraint ((aux1120 + aux1121 + aux1123)<=1))
c Var 'aux1644' direct represents '0' with '-12131'
c Var 'aux1644' direct represents '1' with '12131'
c Var 'aux1644' order represents '1' with '1'
c Var 'aux1644' order represents '0' with '-12131'
c Encoding variable: aux1645 with domain: bool (representing constraint (1<=(aux1120 + aux1121 + aux1123)))
c Var 'aux1645' direct represents '0' with '-12132'
c Var 'aux1645' direct represents '1' with '12132'
c Var 'aux1645' order represents '1' with '1'
c Var 'aux1645' order represents '0' with '-12132'
c Encoding variable: aux1646 with domain: bool (representing constraint ((aux1124 + aux1125 + aux1127)<=1))
c Var 'aux1646' direct represents '0' with '-12133'
c Var 'aux1646' direct represents '1' with '12133'
c Var 'aux1646' order represents '1' with '1'
c Var 'aux1646' order represents '0' with '-12133'
c Encoding variable: aux1647 with domain: bool (representing constraint (1<=(aux1124 + aux1125 + aux1127)))
c Var 'aux1647' direct represents '0' with '-12134'
c Var 'aux1647' direct represents '1' with '12134'
c Var 'aux1647' order represents '1' with '1'
c Var 'aux1647' order represents '0' with '-12134'
c Encoding variable: aux1648 with domain: bool (representing constraint ((aux1128 + aux1129 + aux1131)<=1))
c Var 'aux1648' direct represents '0' with '-12135'
c Var 'aux1648' direct represents '1' with '12135'
c Var 'aux1648' order represents '1' with '1'
c Var 'aux1648' order represents '0' with '-12135'
c Encoding variable: aux1649 with domain: bool (representing constraint (1<=(aux1128 + aux1129 + aux1131)))
c Var 'aux1649' direct represents '0' with '-12136'
c Var 'aux1649' direct represents '1' with '12136'
c Var 'aux1649' order represents '1' with '1'
c Var 'aux1649' order represents '0' with '-12136'
c Encoding variable: aux1650 with domain: bool (representing constraint ((aux1132 + aux1133 + aux1135)<=1))
c Var 'aux1650' direct represents '0' with '-12137'
c Var 'aux1650' direct represents '1' with '12137'
c Var 'aux1650' order represents '1' with '1'
c Var 'aux1650' order represents '0' with '-12137'
c Encoding variable: aux1651 with domain: bool (representing constraint (1<=(aux1132 + aux1133 + aux1135)))
c Var 'aux1651' direct represents '0' with '-12138'
c Var 'aux1651' direct represents '1' with '12138'
c Var 'aux1651' order represents '1' with '1'
c Var 'aux1651' order represents '0' with '-12138'
c Encoding variable: aux1652 with domain: bool (representing constraint ((aux1141 + aux1142 + aux1144)<=1))
c Var 'aux1652' direct represents '0' with '-12139'
c Var 'aux1652' direct represents '1' with '12139'
c Var 'aux1652' order represents '1' with '1'
c Var 'aux1652' order represents '0' with '-12139'
c Encoding variable: aux1653 with domain: bool (representing constraint (1<=(aux1141 + aux1142 + aux1144)))
c Var 'aux1653' direct represents '0' with '-12140'
c Var 'aux1653' direct represents '1' with '12140'
c Var 'aux1653' order represents '1' with '1'
c Var 'aux1653' order represents '0' with '-12140'
c Encoding variable: aux1654 with domain: bool (representing constraint ((aux1145 + aux1146 + aux1148)<=1))
c Var 'aux1654' direct represents '0' with '-12141'
c Var 'aux1654' direct represents '1' with '12141'
c Var 'aux1654' order represents '1' with '1'
c Var 'aux1654' order represents '0' with '-12141'
c Encoding variable: aux1655 with domain: bool (representing constraint (1<=(aux1145 + aux1146 + aux1148)))
c Var 'aux1655' direct represents '0' with '-12142'
c Var 'aux1655' direct represents '1' with '12142'
c Var 'aux1655' order represents '1' with '1'
c Var 'aux1655' order represents '0' with '-12142'
c Encoding variable: aux1656 with domain: bool (representing constraint (max_left_00001_00001_00001=max_left_00001_00001_00002))
c Var 'aux1656' direct represents '0' with '-12143'
c Var 'aux1656' direct represents '1' with '12143'
c Var 'aux1656' order represents '1' with '1'
c Var 'aux1656' order represents '0' with '-12143'
c Encoding variable: aux1657 with domain: bool (representing constraint (variant_fields_00001_00001_00002=max_left_00001_00001_00002))
c Var 'aux1657' direct represents '0' with '-12144'
c Var 'aux1657' direct represents '1' with '12144'
c Var 'aux1657' order represents '1' with '1'
c Var 'aux1657' order represents '0' with '-12144'
c Encoding variable: aux1658 with domain: bool (representing constraint (max_left_00001_00001_00002=max_left_00001_00001_00003))
c Var 'aux1658' direct represents '0' with '-12145'
c Var 'aux1658' direct represents '1' with '12145'
c Var 'aux1658' order represents '1' with '1'
c Var 'aux1658' order represents '0' with '-12145'
c Encoding variable: aux1659 with domain: bool (representing constraint (variant_fields_00001_00001_00003=max_left_00001_00001_00003))
c Var 'aux1659' direct represents '0' with '-12146'
c Var 'aux1659' direct represents '1' with '12146'
c Var 'aux1659' order represents '1' with '1'
c Var 'aux1659' order represents '0' with '-12146'
c Encoding variable: aux1660 with domain: bool (representing constraint (max_left_00001_00001_00003=max_left_00001_00001_00004))
c Var 'aux1660' direct represents '0' with '-12147'
c Var 'aux1660' direct represents '1' with '12147'
c Var 'aux1660' order represents '1' with '1'
c Var 'aux1660' order represents '0' with '-12147'
c Encoding variable: aux1661 with domain: bool (representing constraint (variant_fields_00001_00001_00004=max_left_00001_00001_00004))
c Var 'aux1661' direct represents '0' with '-12148'
c Var 'aux1661' direct represents '1' with '12148'
c Var 'aux1661' order represents '1' with '1'
c Var 'aux1661' order represents '0' with '-12148'
c Encoding variable: aux1662 with domain: bool (representing constraint (max_left_00001_00001_00004=max_left_00001_00001_00005))
c Var 'aux1662' direct represents '0' with '-12149'
c Var 'aux1662' direct represents '1' with '12149'
c Var 'aux1662' order represents '1' with '1'
c Var 'aux1662' order represents '0' with '-12149'
c Encoding variable: aux1663 with domain: bool (representing constraint (variant_fields_00001_00001_00005=max_left_00001_00001_00005))
c Var 'aux1663' direct represents '0' with '-12150'
c Var 'aux1663' direct represents '1' with '12150'
c Var 'aux1663' order represents '1' with '1'
c Var 'aux1663' order represents '0' with '-12150'
c Encoding variable: aux1664 with domain: bool (representing constraint (max_left_00001_00001_00005=max_left_00001_00001_00006))
c Var 'aux1664' direct represents '0' with '-12151'
c Var 'aux1664' direct represents '1' with '12151'
c Var 'aux1664' order represents '1' with '1'
c Var 'aux1664' order represents '0' with '-12151'
c Encoding variable: aux1665 with domain: bool (representing constraint (variant_fields_00001_00001_00006=max_left_00001_00001_00006))
c Var 'aux1665' direct represents '0' with '-12152'
c Var 'aux1665' direct represents '1' with '12152'
c Var 'aux1665' order represents '1' with '1'
c Var 'aux1665' order represents '0' with '-12152'
c Encoding variable: aux1666 with domain: bool (representing constraint (max_left_00001_00001_00006=max_left_00001_00001_00007))
c Var 'aux1666' direct represents '0' with '-12153'
c Var 'aux1666' direct represents '1' with '12153'
c Var 'aux1666' order represents '1' with '1'
c Var 'aux1666' order represents '0' with '-12153'
c Encoding variable: aux1667 with domain: bool (representing constraint (variant_fields_00001_00001_00007=max_left_00001_00001_00007))
c Var 'aux1667' direct represents '0' with '-12154'
c Var 'aux1667' direct represents '1' with '12154'
c Var 'aux1667' order represents '1' with '1'
c Var 'aux1667' order represents '0' with '-12154'
c Encoding variable: aux1668 with domain: bool (representing constraint (max_left_00001_00001_00007=max_left_00001_00001_00008))
c Var 'aux1668' direct represents '0' with '-12155'
c Var 'aux1668' direct represents '1' with '12155'
c Var 'aux1668' order represents '1' with '1'
c Var 'aux1668' order represents '0' with '-12155'
c Encoding variable: aux1669 with domain: bool (representing constraint (variant_fields_00001_00001_00008=max_left_00001_00001_00008))
c Var 'aux1669' direct represents '0' with '-12156'
c Var 'aux1669' direct represents '1' with '12156'
c Var 'aux1669' order represents '1' with '1'
c Var 'aux1669' order represents '0' with '-12156'
c Encoding variable: aux1670 with domain: bool (representing constraint (max_left_00001_00001_00008=max_left_00001_00001_00009))
c Var 'aux1670' direct represents '0' with '-12157'
c Var 'aux1670' direct represents '1' with '12157'
c Var 'aux1670' order represents '1' with '1'
c Var 'aux1670' order represents '0' with '-12157'
c Encoding variable: aux1671 with domain: bool (representing constraint (variant_fields_00001_00001_00009=max_left_00001_00001_00009))
c Var 'aux1671' direct represents '0' with '-12158'
c Var 'aux1671' direct represents '1' with '12158'
c Var 'aux1671' order represents '1' with '1'
c Var 'aux1671' order represents '0' with '-12158'
c Encoding variable: aux1672 with domain: bool (representing constraint (max_left_00001_00002_00001=max_left_00001_00002_00002))
c Var 'aux1672' direct represents '0' with '-12159'
c Var 'aux1672' direct represents '1' with '12159'
c Var 'aux1672' order represents '1' with '1'
c Var 'aux1672' order represents '0' with '-12159'
c Encoding variable: aux1673 with domain: bool (representing constraint (variant_fields_00001_00002_00002=max_left_00001_00002_00002))
c Var 'aux1673' direct represents '0' with '-12160'
c Var 'aux1673' direct represents '1' with '12160'
c Var 'aux1673' order represents '1' with '1'
c Var 'aux1673' order represents '0' with '-12160'
c Encoding variable: aux1674 with domain: bool (representing constraint (max_left_00001_00002_00002=max_left_00001_00002_00003))
c Var 'aux1674' direct represents '0' with '-12161'
c Var 'aux1674' direct represents '1' with '12161'
c Var 'aux1674' order represents '1' with '1'
c Var 'aux1674' order represents '0' with '-12161'
c Encoding variable: aux1675 with domain: bool (representing constraint (variant_fields_00001_00002_00003=max_left_00001_00002_00003))
c Var 'aux1675' direct represents '0' with '-12162'
c Var 'aux1675' direct represents '1' with '12162'
c Var 'aux1675' order represents '1' with '1'
c Var 'aux1675' order represents '0' with '-12162'
c Encoding variable: aux1676 with domain: bool (representing constraint (max_left_00001_00002_00003=max_left_00001_00002_00004))
c Var 'aux1676' direct represents '0' with '-12163'
c Var 'aux1676' direct represents '1' with '12163'
c Var 'aux1676' order represents '1' with '1'
c Var 'aux1676' order represents '0' with '-12163'
c Encoding variable: aux1677 with domain: bool (representing constraint (variant_fields_00001_00002_00004=max_left_00001_00002_00004))
c Var 'aux1677' direct represents '0' with '-12164'
c Var 'aux1677' direct represents '1' with '12164'
c Var 'aux1677' order represents '1' with '1'
c Var 'aux1677' order represents '0' with '-12164'
c Encoding variable: aux1678 with domain: bool (representing constraint (max_left_00001_00002_00004=max_left_00001_00002_00005))
c Var 'aux1678' direct represents '0' with '-12165'
c Var 'aux1678' direct represents '1' with '12165'
c Var 'aux1678' order represents '1' with '1'
c Var 'aux1678' order represents '0' with '-12165'
c Encoding variable: aux1679 with domain: bool (representing constraint (variant_fields_00001_00002_00005=max_left_00001_00002_00005))
c Var 'aux1679' direct represents '0' with '-12166'
c Var 'aux1679' direct represents '1' with '12166'
c Var 'aux1679' order represents '1' with '1'
c Var 'aux1679' order represents '0' with '-12166'
c Encoding variable: aux1680 with domain: bool (representing constraint (max_left_00001_00002_00005=max_left_00001_00002_00006))
c Var 'aux1680' direct represents '0' with '-12167'
c Var 'aux1680' direct represents '1' with '12167'
c Var 'aux1680' order represents '1' with '1'
c Var 'aux1680' order represents '0' with '-12167'
c Encoding variable: aux1681 with domain: bool (representing constraint (variant_fields_00001_00002_00006=max_left_00001_00002_00006))
c Var 'aux1681' direct represents '0' with '-12168'
c Var 'aux1681' direct represents '1' with '12168'
c Var 'aux1681' order represents '1' with '1'
c Var 'aux1681' order represents '0' with '-12168'
c Encoding variable: aux1682 with domain: bool (representing constraint (max_left_00001_00002_00006=max_left_00001_00002_00007))
c Var 'aux1682' direct represents '0' with '-12169'
c Var 'aux1682' direct represents '1' with '12169'
c Var 'aux1682' order represents '1' with '1'
c Var 'aux1682' order represents '0' with '-12169'
c Encoding variable: aux1683 with domain: bool (representing constraint (variant_fields_00001_00002_00007=max_left_00001_00002_00007))
c Var 'aux1683' direct represents '0' with '-12170'
c Var 'aux1683' direct represents '1' with '12170'
c Var 'aux1683' order represents '1' with '1'
c Var 'aux1683' order represents '0' with '-12170'
c Encoding variable: aux1684 with domain: bool (representing constraint (max_left_00001_00002_00007=max_left_00001_00002_00008))
c Var 'aux1684' direct represents '0' with '-12171'
c Var 'aux1684' direct represents '1' with '12171'
c Var 'aux1684' order represents '1' with '1'
c Var 'aux1684' order represents '0' with '-12171'
c Encoding variable: aux1685 with domain: bool (representing constraint (variant_fields_00001_00002_00008=max_left_00001_00002_00008))
c Var 'aux1685' direct represents '0' with '-12172'
c Var 'aux1685' direct represents '1' with '12172'
c Var 'aux1685' order represents '1' with '1'
c Var 'aux1685' order represents '0' with '-12172'
c Encoding variable: aux1686 with domain: bool (representing constraint (max_left_00001_00002_00008=max_left_00001_00002_00009))
c Var 'aux1686' direct represents '0' with '-12173'
c Var 'aux1686' direct represents '1' with '12173'
c Var 'aux1686' order represents '1' with '1'
c Var 'aux1686' order represents '0' with '-12173'
c Encoding variable: aux1687 with domain: bool (representing constraint (variant_fields_00001_00002_00009=max_left_00001_00002_00009))
c Var 'aux1687' direct represents '0' with '-12174'
c Var 'aux1687' direct represents '1' with '12174'
c Var 'aux1687' order represents '1' with '1'
c Var 'aux1687' order represents '0' with '-12174'
c Encoding variable: aux1688 with domain: bool (representing constraint (max_left_00001_00003_00001=max_left_00001_00003_00002))
c Var 'aux1688' direct represents '0' with '-12175'
c Var 'aux1688' direct represents '1' with '12175'
c Var 'aux1688' order represents '1' with '1'
c Var 'aux1688' order represents '0' with '-12175'
c Encoding variable: aux1689 with domain: bool (representing constraint (variant_fields_00001_00003_00002=max_left_00001_00003_00002))
c Var 'aux1689' direct represents '0' with '-12176'
c Var 'aux1689' direct represents '1' with '12176'
c Var 'aux1689' order represents '1' with '1'
c Var 'aux1689' order represents '0' with '-12176'
c Encoding variable: aux1690 with domain: bool (representing constraint (max_left_00001_00003_00002=max_left_00001_00003_00003))
c Var 'aux1690' direct represents '0' with '-12177'
c Var 'aux1690' direct represents '1' with '12177'
c Var 'aux1690' order represents '1' with '1'
c Var 'aux1690' order represents '0' with '-12177'
c Encoding variable: aux1691 with domain: bool (representing constraint (variant_fields_00001_00003_00003=max_left_00001_00003_00003))
c Var 'aux1691' direct represents '0' with '-12178'
c Var 'aux1691' direct represents '1' with '12178'
c Var 'aux1691' order represents '1' with '1'
c Var 'aux1691' order represents '0' with '-12178'
c Encoding variable: aux1692 with domain: bool (representing constraint (max_left_00001_00003_00003=max_left_00001_00003_00004))
c Var 'aux1692' direct represents '0' with '-12179'
c Var 'aux1692' direct represents '1' with '12179'
c Var 'aux1692' order represents '1' with '1'
c Var 'aux1692' order represents '0' with '-12179'
c Encoding variable: aux1693 with domain: bool (representing constraint (variant_fields_00001_00003_00004=max_left_00001_00003_00004))
c Var 'aux1693' direct represents '0' with '-12180'
c Var 'aux1693' direct represents '1' with '12180'
c Var 'aux1693' order represents '1' with '1'
c Var 'aux1693' order represents '0' with '-12180'
c Encoding variable: aux1694 with domain: bool (representing constraint (max_left_00001_00003_00004=max_left_00001_00003_00005))
c Var 'aux1694' direct represents '0' with '-12181'
c Var 'aux1694' direct represents '1' with '12181'
c Var 'aux1694' order represents '1' with '1'
c Var 'aux1694' order represents '0' with '-12181'
c Encoding variable: aux1695 with domain: bool (representing constraint (variant_fields_00001_00003_00005=max_left_00001_00003_00005))
c Var 'aux1695' direct represents '0' with '-12182'
c Var 'aux1695' direct represents '1' with '12182'
c Var 'aux1695' order represents '1' with '1'
c Var 'aux1695' order represents '0' with '-12182'
c Encoding variable: aux1696 with domain: bool (representing constraint (max_left_00001_00003_00005=max_left_00001_00003_00006))
c Var 'aux1696' direct represents '0' with '-12183'
c Var 'aux1696' direct represents '1' with '12183'
c Var 'aux1696' order represents '1' with '1'
c Var 'aux1696' order represents '0' with '-12183'
c Encoding variable: aux1697 with domain: bool (representing constraint (variant_fields_00001_00003_00006=max_left_00001_00003_00006))
c Var 'aux1697' direct represents '0' with '-12184'
c Var 'aux1697' direct represents '1' with '12184'
c Var 'aux1697' order represents '1' with '1'
c Var 'aux1697' order represents '0' with '-12184'
c Encoding variable: aux1698 with domain: bool (representing constraint (max_left_00001_00003_00006=max_left_00001_00003_00007))
c Var 'aux1698' direct represents '0' with '-12185'
c Var 'aux1698' direct represents '1' with '12185'
c Var 'aux1698' order represents '1' with '1'
c Var 'aux1698' order represents '0' with '-12185'
c Encoding variable: aux1699 with domain: bool (representing constraint (variant_fields_00001_00003_00007=max_left_00001_00003_00007))
c Var 'aux1699' direct represents '0' with '-12186'
c Var 'aux1699' direct represents '1' with '12186'
c Var 'aux1699' order represents '1' with '1'
c Var 'aux1699' order represents '0' with '-12186'
c Encoding variable: aux1700 with domain: bool (representing constraint (max_left_00001_00003_00007=max_left_00001_00003_00008))
c Var 'aux1700' direct represents '0' with '-12187'
c Var 'aux1700' direct represents '1' with '12187'
c Var 'aux1700' order represents '1' with '1'
c Var 'aux1700' order represents '0' with '-12187'
c Encoding variable: aux1701 with domain: bool (representing constraint (variant_fields_00001_00003_00008=max_left_00001_00003_00008))
c Var 'aux1701' direct represents '0' with '-12188'
c Var 'aux1701' direct represents '1' with '12188'
c Var 'aux1701' order represents '1' with '1'
c Var 'aux1701' order represents '0' with '-12188'
c Encoding variable: aux1702 with domain: bool (representing constraint (max_left_00001_00003_00008=max_left_00001_00003_00009))
c Var 'aux1702' direct represents '0' with '-12189'
c Var 'aux1702' direct represents '1' with '12189'
c Var 'aux1702' order represents '1' with '1'
c Var 'aux1702' order represents '0' with '-12189'
c Encoding variable: aux1703 with domain: bool (representing constraint (variant_fields_00001_00003_00009=max_left_00001_00003_00009))
c Var 'aux1703' direct represents '0' with '-12190'
c Var 'aux1703' direct represents '1' with '12190'
c Var 'aux1703' order represents '1' with '1'
c Var 'aux1703' order represents '0' with '-12190'
c Encoding variable: aux1704 with domain: bool (representing constraint (max_left_00001_00004_00001=max_left_00001_00004_00002))
c Var 'aux1704' direct represents '0' with '-12191'
c Var 'aux1704' direct represents '1' with '12191'
c Var 'aux1704' order represents '1' with '1'
c Var 'aux1704' order represents '0' with '-12191'
c Encoding variable: aux1705 with domain: bool (representing constraint (variant_fields_00001_00004_00002=max_left_00001_00004_00002))
c Var 'aux1705' direct represents '0' with '-12192'
c Var 'aux1705' direct represents '1' with '12192'
c Var 'aux1705' order represents '1' with '1'
c Var 'aux1705' order represents '0' with '-12192'
c Encoding variable: aux1706 with domain: bool (representing constraint (max_left_00001_00004_00002=max_left_00001_00004_00003))
c Var 'aux1706' direct represents '0' with '-12193'
c Var 'aux1706' direct represents '1' with '12193'
c Var 'aux1706' order represents '1' with '1'
c Var 'aux1706' order represents '0' with '-12193'
c Encoding variable: aux1707 with domain: bool (representing constraint (variant_fields_00001_00004_00003=max_left_00001_00004_00003))
c Var 'aux1707' direct represents '0' with '-12194'
c Var 'aux1707' direct represents '1' with '12194'
c Var 'aux1707' order represents '1' with '1'
c Var 'aux1707' order represents '0' with '-12194'
c Encoding variable: aux1708 with domain: bool (representing constraint (max_left_00001_00004_00003=max_left_00001_00004_00004))
c Var 'aux1708' direct represents '0' with '-12195'
c Var 'aux1708' direct represents '1' with '12195'
c Var 'aux1708' order represents '1' with '1'
c Var 'aux1708' order represents '0' with '-12195'
c Encoding variable: aux1709 with domain: bool (representing constraint (variant_fields_00001_00004_00004=max_left_00001_00004_00004))
c Var 'aux1709' direct represents '0' with '-12196'
c Var 'aux1709' direct represents '1' with '12196'
c Var 'aux1709' order represents '1' with '1'
c Var 'aux1709' order represents '0' with '-12196'
c Encoding variable: aux1710 with domain: bool (representing constraint (max_left_00001_00004_00004=max_left_00001_00004_00005))
c Var 'aux1710' direct represents '0' with '-12197'
c Var 'aux1710' direct represents '1' with '12197'
c Var 'aux1710' order represents '1' with '1'
c Var 'aux1710' order represents '0' with '-12197'
c Encoding variable: aux1711 with domain: bool (representing constraint (variant_fields_00001_00004_00005=max_left_00001_00004_00005))
c Var 'aux1711' direct represents '0' with '-12198'
c Var 'aux1711' direct represents '1' with '12198'
c Var 'aux1711' order represents '1' with '1'
c Var 'aux1711' order represents '0' with '-12198'
c Encoding variable: aux1712 with domain: bool (representing constraint (max_left_00001_00004_00005=max_left_00001_00004_00006))
c Var 'aux1712' direct represents '0' with '-12199'
c Var 'aux1712' direct represents '1' with '12199'
c Var 'aux1712' order represents '1' with '1'
c Var 'aux1712' order represents '0' with '-12199'
c Encoding variable: aux1713 with domain: bool (representing constraint (variant_fields_00001_00004_00006=max_left_00001_00004_00006))
c Var 'aux1713' direct represents '0' with '-12200'
c Var 'aux1713' direct represents '1' with '12200'
c Var 'aux1713' order represents '1' with '1'
c Var 'aux1713' order represents '0' with '-12200'
c Encoding variable: aux1714 with domain: bool (representing constraint (max_left_00001_00004_00006=max_left_00001_00004_00007))
c Var 'aux1714' direct represents '0' with '-12201'
c Var 'aux1714' direct represents '1' with '12201'
c Var 'aux1714' order represents '1' with '1'
c Var 'aux1714' order represents '0' with '-12201'
c Encoding variable: aux1715 with domain: bool (representing constraint (variant_fields_00001_00004_00007=max_left_00001_00004_00007))
c Var 'aux1715' direct represents '0' with '-12202'
c Var 'aux1715' direct represents '1' with '12202'
c Var 'aux1715' order represents '1' with '1'
c Var 'aux1715' order represents '0' with '-12202'
c Encoding variable: aux1716 with domain: bool (representing constraint (max_left_00001_00004_00007=max_left_00001_00004_00008))
c Var 'aux1716' direct represents '0' with '-12203'
c Var 'aux1716' direct represents '1' with '12203'
c Var 'aux1716' order represents '1' with '1'
c Var 'aux1716' order represents '0' with '-12203'
c Encoding variable: aux1717 with domain: bool (representing constraint (variant_fields_00001_00004_00008=max_left_00001_00004_00008))
c Var 'aux1717' direct represents '0' with '-12204'
c Var 'aux1717' direct represents '1' with '12204'
c Var 'aux1717' order represents '1' with '1'
c Var 'aux1717' order represents '0' with '-12204'
c Encoding variable: aux1718 with domain: bool (representing constraint (max_left_00001_00004_00008=max_left_00001_00004_00009))
c Var 'aux1718' direct represents '0' with '-12205'
c Var 'aux1718' direct represents '1' with '12205'
c Var 'aux1718' order represents '1' with '1'
c Var 'aux1718' order represents '0' with '-12205'
c Encoding variable: aux1719 with domain: bool (representing constraint (variant_fields_00001_00004_00009=max_left_00001_00004_00009))
c Var 'aux1719' direct represents '0' with '-12206'
c Var 'aux1719' direct represents '1' with '12206'
c Var 'aux1719' order represents '1' with '1'
c Var 'aux1719' order represents '0' with '-12206'
c Encoding variable: aux1720 with domain: bool (representing constraint (max_left_00001_00005_00001=max_left_00001_00005_00002))
c Var 'aux1720' direct represents '0' with '-12207'
c Var 'aux1720' direct represents '1' with '12207'
c Var 'aux1720' order represents '1' with '1'
c Var 'aux1720' order represents '0' with '-12207'
c Encoding variable: aux1721 with domain: bool (representing constraint (variant_fields_00001_00005_00002=max_left_00001_00005_00002))
c Var 'aux1721' direct represents '0' with '-12208'
c Var 'aux1721' direct represents '1' with '12208'
c Var 'aux1721' order represents '1' with '1'
c Var 'aux1721' order represents '0' with '-12208'
c Encoding variable: aux1722 with domain: bool (representing constraint (max_left_00001_00005_00002=max_left_00001_00005_00003))
c Var 'aux1722' direct represents '0' with '-12209'
c Var 'aux1722' direct represents '1' with '12209'
c Var 'aux1722' order represents '1' with '1'
c Var 'aux1722' order represents '0' with '-12209'
c Encoding variable: aux1723 with domain: bool (representing constraint (variant_fields_00001_00005_00003=max_left_00001_00005_00003))
c Var 'aux1723' direct represents '0' with '-12210'
c Var 'aux1723' direct represents '1' with '12210'
c Var 'aux1723' order represents '1' with '1'
c Var 'aux1723' order represents '0' with '-12210'
c Encoding variable: aux1724 with domain: bool (representing constraint (max_left_00001_00005_00003=max_left_00001_00005_00004))
c Var 'aux1724' direct represents '0' with '-12211'
c Var 'aux1724' direct represents '1' with '12211'
c Var 'aux1724' order represents '1' with '1'
c Var 'aux1724' order represents '0' with '-12211'
c Encoding variable: aux1725 with domain: bool (representing constraint (variant_fields_00001_00005_00004=max_left_00001_00005_00004))
c Var 'aux1725' direct represents '0' with '-12212'
c Var 'aux1725' direct represents '1' with '12212'
c Var 'aux1725' order represents '1' with '1'
c Var 'aux1725' order represents '0' with '-12212'
c Encoding variable: aux1726 with domain: bool (representing constraint (max_left_00001_00005_00004=max_left_00001_00005_00005))
c Var 'aux1726' direct represents '0' with '-12213'
c Var 'aux1726' direct represents '1' with '12213'
c Var 'aux1726' order represents '1' with '1'
c Var 'aux1726' order represents '0' with '-12213'
c Encoding variable: aux1727 with domain: bool (representing constraint (variant_fields_00001_00005_00005=max_left_00001_00005_00005))
c Var 'aux1727' direct represents '0' with '-12214'
c Var 'aux1727' direct represents '1' with '12214'
c Var 'aux1727' order represents '1' with '1'
c Var 'aux1727' order represents '0' with '-12214'
c Encoding variable: aux1728 with domain: bool (representing constraint (max_left_00001_00005_00005=max_left_00001_00005_00006))
c Var 'aux1728' direct represents '0' with '-12215'
c Var 'aux1728' direct represents '1' with '12215'
c Var 'aux1728' order represents '1' with '1'
c Var 'aux1728' order represents '0' with '-12215'
c Encoding variable: aux1729 with domain: bool (representing constraint (variant_fields_00001_00005_00006=max_left_00001_00005_00006))
c Var 'aux1729' direct represents '0' with '-12216'
c Var 'aux1729' direct represents '1' with '12216'
c Var 'aux1729' order represents '1' with '1'
c Var 'aux1729' order represents '0' with '-12216'
c Encoding variable: aux1730 with domain: bool (representing constraint (max_left_00001_00005_00006=max_left_00001_00005_00007))
c Var 'aux1730' direct represents '0' with '-12217'
c Var 'aux1730' direct represents '1' with '12217'
c Var 'aux1730' order represents '1' with '1'
c Var 'aux1730' order represents '0' with '-12217'
c Encoding variable: aux1731 with domain: bool (representing constraint (variant_fields_00001_00005_00007=max_left_00001_00005_00007))
c Var 'aux1731' direct represents '0' with '-12218'
c Var 'aux1731' direct represents '1' with '12218'
c Var 'aux1731' order represents '1' with '1'
c Var 'aux1731' order represents '0' with '-12218'
c Encoding variable: aux1732 with domain: bool (representing constraint (max_left_00001_00005_00007=max_left_00001_00005_00008))
c Var 'aux1732' direct represents '0' with '-12219'
c Var 'aux1732' direct represents '1' with '12219'
c Var 'aux1732' order represents '1' with '1'
c Var 'aux1732' order represents '0' with '-12219'
c Encoding variable: aux1733 with domain: bool (representing constraint (variant_fields_00001_00005_00008=max_left_00001_00005_00008))
c Var 'aux1733' direct represents '0' with '-12220'
c Var 'aux1733' direct represents '1' with '12220'
c Var 'aux1733' order represents '1' with '1'
c Var 'aux1733' order represents '0' with '-12220'
c Encoding variable: aux1734 with domain: bool (representing constraint (max_left_00001_00006_00001=max_left_00001_00006_00002))
c Var 'aux1734' direct represents '0' with '-12221'
c Var 'aux1734' direct represents '1' with '12221'
c Var 'aux1734' order represents '1' with '1'
c Var 'aux1734' order represents '0' with '-12221'
c Encoding variable: aux1735 with domain: bool (representing constraint (variant_fields_00001_00006_00002=max_left_00001_00006_00002))
c Var 'aux1735' direct represents '0' with '-12222'
c Var 'aux1735' direct represents '1' with '12222'
c Var 'aux1735' order represents '1' with '1'
c Var 'aux1735' order represents '0' with '-12222'
c Encoding variable: aux1736 with domain: bool (representing constraint (max_left_00001_00006_00002=max_left_00001_00006_00003))
c Var 'aux1736' direct represents '0' with '-12223'
c Var 'aux1736' direct represents '1' with '12223'
c Var 'aux1736' order represents '1' with '1'
c Var 'aux1736' order represents '0' with '-12223'
c Encoding variable: aux1737 with domain: bool (representing constraint (variant_fields_00001_00006_00003=max_left_00001_00006_00003))
c Var 'aux1737' direct represents '0' with '-12224'
c Var 'aux1737' direct represents '1' with '12224'
c Var 'aux1737' order represents '1' with '1'
c Var 'aux1737' order represents '0' with '-12224'
c Encoding variable: aux1738 with domain: bool (representing constraint (max_left_00001_00006_00003=max_left_00001_00006_00004))
c Var 'aux1738' direct represents '0' with '-12225'
c Var 'aux1738' direct represents '1' with '12225'
c Var 'aux1738' order represents '1' with '1'
c Var 'aux1738' order represents '0' with '-12225'
c Encoding variable: aux1739 with domain: bool (representing constraint (variant_fields_00001_00006_00004=max_left_00001_00006_00004))
c Var 'aux1739' direct represents '0' with '-12226'
c Var 'aux1739' direct represents '1' with '12226'
c Var 'aux1739' order represents '1' with '1'
c Var 'aux1739' order represents '0' with '-12226'
c Encoding variable: aux1740 with domain: bool (representing constraint (max_left_00001_00006_00004=max_left_00001_00006_00005))
c Var 'aux1740' direct represents '0' with '-12227'
c Var 'aux1740' direct represents '1' with '12227'
c Var 'aux1740' order represents '1' with '1'
c Var 'aux1740' order represents '0' with '-12227'
c Encoding variable: aux1741 with domain: bool (representing constraint (variant_fields_00001_00006_00005=max_left_00001_00006_00005))
c Var 'aux1741' direct represents '0' with '-12228'
c Var 'aux1741' direct represents '1' with '12228'
c Var 'aux1741' order represents '1' with '1'
c Var 'aux1741' order represents '0' with '-12228'
c Encoding variable: aux1742 with domain: bool (representing constraint (max_left_00001_00006_00006=max_left_00001_00006_00007))
c Var 'aux1742' direct represents '0' with '-12229'
c Var 'aux1742' direct represents '1' with '12229'
c Var 'aux1742' order represents '1' with '1'
c Var 'aux1742' order represents '0' with '-12229'
c Encoding variable: aux1743 with domain: bool (representing constraint (variant_fields_00001_00006_00007=max_left_00001_00006_00007))
c Var 'aux1743' direct represents '0' with '-12230'
c Var 'aux1743' direct represents '1' with '12230'
c Var 'aux1743' order represents '1' with '1'
c Var 'aux1743' order represents '0' with '-12230'
c Encoding variable: aux1744 with domain: bool (representing constraint (max_left_00001_00006_00007=max_left_00001_00006_00008))
c Var 'aux1744' direct represents '0' with '-12231'
c Var 'aux1744' direct represents '1' with '12231'
c Var 'aux1744' order represents '1' with '1'
c Var 'aux1744' order represents '0' with '-12231'
c Encoding variable: aux1745 with domain: bool (representing constraint (variant_fields_00001_00006_00008=max_left_00001_00006_00008))
c Var 'aux1745' direct represents '0' with '-12232'
c Var 'aux1745' direct represents '1' with '12232'
c Var 'aux1745' order represents '1' with '1'
c Var 'aux1745' order represents '0' with '-12232'
c Encoding variable: aux1746 with domain: bool (representing constraint (max_left_00001_00006_00008=max_left_00001_00006_00009))
c Var 'aux1746' direct represents '0' with '-12233'
c Var 'aux1746' direct represents '1' with '12233'
c Var 'aux1746' order represents '1' with '1'
c Var 'aux1746' order represents '0' with '-12233'
c Encoding variable: aux1747 with domain: bool (representing constraint (variant_fields_00001_00006_00009=max_left_00001_00006_00009))
c Var 'aux1747' direct represents '0' with '-12234'
c Var 'aux1747' direct represents '1' with '12234'
c Var 'aux1747' order represents '1' with '1'
c Var 'aux1747' order represents '0' with '-12234'
c Encoding variable: aux1748 with domain: bool (representing constraint (max_left_00001_00007_00001=max_left_00001_00007_00002))
c Var 'aux1748' direct represents '0' with '-12235'
c Var 'aux1748' direct represents '1' with '12235'
c Var 'aux1748' order represents '1' with '1'
c Var 'aux1748' order represents '0' with '-12235'
c Encoding variable: aux1749 with domain: bool (representing constraint (variant_fields_00001_00007_00002=max_left_00001_00007_00002))
c Var 'aux1749' direct represents '0' with '-12236'
c Var 'aux1749' direct represents '1' with '12236'
c Var 'aux1749' order represents '1' with '1'
c Var 'aux1749' order represents '0' with '-12236'
c Encoding variable: aux1750 with domain: bool (representing constraint (max_left_00001_00007_00002=max_left_00001_00007_00003))
c Var 'aux1750' direct represents '0' with '-12237'
c Var 'aux1750' direct represents '1' with '12237'
c Var 'aux1750' order represents '1' with '1'
c Var 'aux1750' order represents '0' with '-12237'
c Encoding variable: aux1751 with domain: bool (representing constraint (variant_fields_00001_00007_00003=max_left_00001_00007_00003))
c Var 'aux1751' direct represents '0' with '-12238'
c Var 'aux1751' direct represents '1' with '12238'
c Var 'aux1751' order represents '1' with '1'
c Var 'aux1751' order represents '0' with '-12238'
c Encoding variable: aux1752 with domain: bool (representing constraint (max_left_00001_00007_00003=max_left_00001_00007_00004))
c Var 'aux1752' direct represents '0' with '-12239'
c Var 'aux1752' direct represents '1' with '12239'
c Var 'aux1752' order represents '1' with '1'
c Var 'aux1752' order represents '0' with '-12239'
c Encoding variable: aux1753 with domain: bool (representing constraint (variant_fields_00001_00007_00004=max_left_00001_00007_00004))
c Var 'aux1753' direct represents '0' with '-12240'
c Var 'aux1753' direct represents '1' with '12240'
c Var 'aux1753' order represents '1' with '1'
c Var 'aux1753' order represents '0' with '-12240'
c Encoding variable: aux1754 with domain: bool (representing constraint (max_left_00001_00007_00004=max_left_00001_00007_00005))
c Var 'aux1754' direct represents '0' with '-12241'
c Var 'aux1754' direct represents '1' with '12241'
c Var 'aux1754' order represents '1' with '1'
c Var 'aux1754' order represents '0' with '-12241'
c Encoding variable: aux1755 with domain: bool (representing constraint (variant_fields_00001_00007_00005=max_left_00001_00007_00005))
c Var 'aux1755' direct represents '0' with '-12242'
c Var 'aux1755' direct represents '1' with '12242'
c Var 'aux1755' order represents '1' with '1'
c Var 'aux1755' order represents '0' with '-12242'
c Encoding variable: aux1756 with domain: bool (representing constraint (max_left_00001_00007_00005=max_left_00001_00007_00006))
c Var 'aux1756' direct represents '0' with '-12243'
c Var 'aux1756' direct represents '1' with '12243'
c Var 'aux1756' order represents '1' with '1'
c Var 'aux1756' order represents '0' with '-12243'
c Encoding variable: aux1757 with domain: bool (representing constraint (variant_fields_00001_00007_00006=max_left_00001_00007_00006))
c Var 'aux1757' direct represents '0' with '-12244'
c Var 'aux1757' direct represents '1' with '12244'
c Var 'aux1757' order represents '1' with '1'
c Var 'aux1757' order represents '0' with '-12244'
c Encoding variable: aux1758 with domain: bool (representing constraint (max_left_00001_00007_00006=max_left_00001_00007_00007))
c Var 'aux1758' direct represents '0' with '-12245'
c Var 'aux1758' direct represents '1' with '12245'
c Var 'aux1758' order represents '1' with '1'
c Var 'aux1758' order represents '0' with '-12245'
c Encoding variable: aux1759 with domain: bool (representing constraint (variant_fields_00001_00007_00007=max_left_00001_00007_00007))
c Var 'aux1759' direct represents '0' with '-12246'
c Var 'aux1759' direct represents '1' with '12246'
c Var 'aux1759' order represents '1' with '1'
c Var 'aux1759' order represents '0' with '-12246'
c Encoding variable: aux1760 with domain: bool (representing constraint (max_left_00001_00007_00007=max_left_00001_00007_00008))
c Var 'aux1760' direct represents '0' with '-12247'
c Var 'aux1760' direct represents '1' with '12247'
c Var 'aux1760' order represents '1' with '1'
c Var 'aux1760' order represents '0' with '-12247'
c Encoding variable: aux1761 with domain: bool (representing constraint (variant_fields_00001_00007_00008=max_left_00001_00007_00008))
c Var 'aux1761' direct represents '0' with '-12248'
c Var 'aux1761' direct represents '1' with '12248'
c Var 'aux1761' order represents '1' with '1'
c Var 'aux1761' order represents '0' with '-12248'
c Encoding variable: aux1762 with domain: bool (representing constraint (max_left_00001_00007_00008=max_left_00001_00007_00009))
c Var 'aux1762' direct represents '0' with '-12249'
c Var 'aux1762' direct represents '1' with '12249'
c Var 'aux1762' order represents '1' with '1'
c Var 'aux1762' order represents '0' with '-12249'
c Encoding variable: aux1763 with domain: bool (representing constraint (variant_fields_00001_00007_00009=max_left_00001_00007_00009))
c Var 'aux1763' direct represents '0' with '-12250'
c Var 'aux1763' direct represents '1' with '12250'
c Var 'aux1763' order represents '1' with '1'
c Var 'aux1763' order represents '0' with '-12250'
c Encoding variable: aux1764 with domain: bool (representing constraint (max_left_00001_00008_00001=max_left_00001_00008_00002))
c Var 'aux1764' direct represents '0' with '-12251'
c Var 'aux1764' direct represents '1' with '12251'
c Var 'aux1764' order represents '1' with '1'
c Var 'aux1764' order represents '0' with '-12251'
c Encoding variable: aux1765 with domain: bool (representing constraint (variant_fields_00001_00008_00002=max_left_00001_00008_00002))
c Var 'aux1765' direct represents '0' with '-12252'
c Var 'aux1765' direct represents '1' with '12252'
c Var 'aux1765' order represents '1' with '1'
c Var 'aux1765' order represents '0' with '-12252'
c Encoding variable: aux1766 with domain: bool (representing constraint (max_left_00001_00008_00002=max_left_00001_00008_00003))
c Var 'aux1766' direct represents '0' with '-12253'
c Var 'aux1766' direct represents '1' with '12253'
c Var 'aux1766' order represents '1' with '1'
c Var 'aux1766' order represents '0' with '-12253'
c Encoding variable: aux1767 with domain: bool (representing constraint (variant_fields_00001_00008_00003=max_left_00001_00008_00003))
c Var 'aux1767' direct represents '0' with '-12254'
c Var 'aux1767' direct represents '1' with '12254'
c Var 'aux1767' order represents '1' with '1'
c Var 'aux1767' order represents '0' with '-12254'
c Encoding variable: aux1768 with domain: bool (representing constraint (max_left_00001_00008_00003=max_left_00001_00008_00004))
c Var 'aux1768' direct represents '0' with '-12255'
c Var 'aux1768' direct represents '1' with '12255'
c Var 'aux1768' order represents '1' with '1'
c Var 'aux1768' order represents '0' with '-12255'
c Encoding variable: aux1769 with domain: bool (representing constraint (variant_fields_00001_00008_00004=max_left_00001_00008_00004))
c Var 'aux1769' direct represents '0' with '-12256'
c Var 'aux1769' direct represents '1' with '12256'
c Var 'aux1769' order represents '1' with '1'
c Var 'aux1769' order represents '0' with '-12256'
c Encoding variable: aux1770 with domain: bool (representing constraint (max_left_00001_00008_00005=max_left_00001_00008_00006))
c Var 'aux1770' direct represents '0' with '-12257'
c Var 'aux1770' direct represents '1' with '12257'
c Var 'aux1770' order represents '1' with '1'
c Var 'aux1770' order represents '0' with '-12257'
c Encoding variable: aux1771 with domain: bool (representing constraint (variant_fields_00001_00008_00006=max_left_00001_00008_00006))
c Var 'aux1771' direct represents '0' with '-12258'
c Var 'aux1771' direct represents '1' with '12258'
c Var 'aux1771' order represents '1' with '1'
c Var 'aux1771' order represents '0' with '-12258'
c Encoding variable: aux1772 with domain: bool (representing constraint (max_left_00001_00008_00006=max_left_00001_00008_00007))
c Var 'aux1772' direct represents '0' with '-12259'
c Var 'aux1772' direct represents '1' with '12259'
c Var 'aux1772' order represents '1' with '1'
c Var 'aux1772' order represents '0' with '-12259'
c Encoding variable: aux1773 with domain: bool (representing constraint (variant_fields_00001_00008_00007=max_left_00001_00008_00007))
c Var 'aux1773' direct represents '0' with '-12260'
c Var 'aux1773' direct represents '1' with '12260'
c Var 'aux1773' order represents '1' with '1'
c Var 'aux1773' order represents '0' with '-12260'
c Encoding variable: aux1774 with domain: bool (representing constraint (max_left_00001_00008_00007=max_left_00001_00008_00008))
c Var 'aux1774' direct represents '0' with '-12261'
c Var 'aux1774' direct represents '1' with '12261'
c Var 'aux1774' order represents '1' with '1'
c Var 'aux1774' order represents '0' with '-12261'
c Encoding variable: aux1775 with domain: bool (representing constraint (variant_fields_00001_00008_00008=max_left_00001_00008_00008))
c Var 'aux1775' direct represents '0' with '-12262'
c Var 'aux1775' direct represents '1' with '12262'
c Var 'aux1775' order represents '1' with '1'
c Var 'aux1775' order represents '0' with '-12262'
c Encoding variable: aux1776 with domain: bool (representing constraint (max_left_00001_00008_00008=max_left_00001_00008_00009))
c Var 'aux1776' direct represents '0' with '-12263'
c Var 'aux1776' direct represents '1' with '12263'
c Var 'aux1776' order represents '1' with '1'
c Var 'aux1776' order represents '0' with '-12263'
c Encoding variable: aux1777 with domain: bool (representing constraint (variant_fields_00001_00008_00009=max_left_00001_00008_00009))
c Var 'aux1777' direct represents '0' with '-12264'
c Var 'aux1777' direct represents '1' with '12264'
c Var 'aux1777' order represents '1' with '1'
c Var 'aux1777' order represents '0' with '-12264'
c Encoding variable: aux1778 with domain: bool (representing constraint (max_left_00001_00009_00001=max_left_00001_00009_00002))
c Var 'aux1778' direct represents '0' with '-12265'
c Var 'aux1778' direct represents '1' with '12265'
c Var 'aux1778' order represents '1' with '1'
c Var 'aux1778' order represents '0' with '-12265'
c Encoding variable: aux1779 with domain: bool (representing constraint (variant_fields_00001_00009_00002=max_left_00001_00009_00002))
c Var 'aux1779' direct represents '0' with '-12266'
c Var 'aux1779' direct represents '1' with '12266'
c Var 'aux1779' order represents '1' with '1'
c Var 'aux1779' order represents '0' with '-12266'
c Encoding variable: aux1780 with domain: bool (representing constraint (max_left_00001_00009_00002=max_left_00001_00009_00003))
c Var 'aux1780' direct represents '0' with '-12267'
c Var 'aux1780' direct represents '1' with '12267'
c Var 'aux1780' order represents '1' with '1'
c Var 'aux1780' order represents '0' with '-12267'
c Encoding variable: aux1781 with domain: bool (representing constraint (variant_fields_00001_00009_00003=max_left_00001_00009_00003))
c Var 'aux1781' direct represents '0' with '-12268'
c Var 'aux1781' direct represents '1' with '12268'
c Var 'aux1781' order represents '1' with '1'
c Var 'aux1781' order represents '0' with '-12268'
c Encoding variable: aux1782 with domain: bool (representing constraint (max_left_00001_00009_00003=max_left_00001_00009_00004))
c Var 'aux1782' direct represents '0' with '-12269'
c Var 'aux1782' direct represents '1' with '12269'
c Var 'aux1782' order represents '1' with '1'
c Var 'aux1782' order represents '0' with '-12269'
c Encoding variable: aux1783 with domain: bool (representing constraint (variant_fields_00001_00009_00004=max_left_00001_00009_00004))
c Var 'aux1783' direct represents '0' with '-12270'
c Var 'aux1783' direct represents '1' with '12270'
c Var 'aux1783' order represents '1' with '1'
c Var 'aux1783' order represents '0' with '-12270'
c Encoding variable: aux1784 with domain: bool (representing constraint (max_left_00001_00009_00004=max_left_00001_00009_00005))
c Var 'aux1784' direct represents '0' with '-12271'
c Var 'aux1784' direct represents '1' with '12271'
c Var 'aux1784' order represents '1' with '1'
c Var 'aux1784' order represents '0' with '-12271'
c Encoding variable: aux1785 with domain: bool (representing constraint (variant_fields_00001_00009_00005=max_left_00001_00009_00005))
c Var 'aux1785' direct represents '0' with '-12272'
c Var 'aux1785' direct represents '1' with '12272'
c Var 'aux1785' order represents '1' with '1'
c Var 'aux1785' order represents '0' with '-12272'
c Encoding variable: aux1786 with domain: bool (representing constraint (max_left_00001_00009_00005=max_left_00001_00009_00006))
c Var 'aux1786' direct represents '0' with '-12273'
c Var 'aux1786' direct represents '1' with '12273'
c Var 'aux1786' order represents '1' with '1'
c Var 'aux1786' order represents '0' with '-12273'
c Encoding variable: aux1787 with domain: bool (representing constraint (variant_fields_00001_00009_00006=max_left_00001_00009_00006))
c Var 'aux1787' direct represents '0' with '-12274'
c Var 'aux1787' direct represents '1' with '12274'
c Var 'aux1787' order represents '1' with '1'
c Var 'aux1787' order represents '0' with '-12274'
c Encoding variable: aux1788 with domain: bool (representing constraint (max_left_00001_00009_00006=max_left_00001_00009_00007))
c Var 'aux1788' direct represents '0' with '-12275'
c Var 'aux1788' direct represents '1' with '12275'
c Var 'aux1788' order represents '1' with '1'
c Var 'aux1788' order represents '0' with '-12275'
c Encoding variable: aux1789 with domain: bool (representing constraint (variant_fields_00001_00009_00007=max_left_00001_00009_00007))
c Var 'aux1789' direct represents '0' with '-12276'
c Var 'aux1789' direct represents '1' with '12276'
c Var 'aux1789' order represents '1' with '1'
c Var 'aux1789' order represents '0' with '-12276'
c Encoding variable: aux1790 with domain: bool (representing constraint (max_left_00001_00009_00007=max_left_00001_00009_00008))
c Var 'aux1790' direct represents '0' with '-12277'
c Var 'aux1790' direct represents '1' with '12277'
c Var 'aux1790' order represents '1' with '1'
c Var 'aux1790' order represents '0' with '-12277'
c Encoding variable: aux1791 with domain: bool (representing constraint (variant_fields_00001_00009_00008=max_left_00001_00009_00008))
c Var 'aux1791' direct represents '0' with '-12278'
c Var 'aux1791' direct represents '1' with '12278'
c Var 'aux1791' order represents '1' with '1'
c Var 'aux1791' order represents '0' with '-12278'
c Encoding variable: aux1792 with domain: bool (representing constraint (max_left_00001_00009_00008=max_left_00001_00009_00009))
c Var 'aux1792' direct represents '0' with '-12279'
c Var 'aux1792' direct represents '1' with '12279'
c Var 'aux1792' order represents '1' with '1'
c Var 'aux1792' order represents '0' with '-12279'
c Encoding variable: aux1793 with domain: bool (representing constraint (variant_fields_00001_00009_00009=max_left_00001_00009_00009))
c Var 'aux1793' direct represents '0' with '-12280'
c Var 'aux1793' direct represents '1' with '12280'
c Var 'aux1793' order represents '1' with '1'
c Var 'aux1793' order represents '0' with '-12280'
c Encoding variable: aux1794 with domain: bool (representing constraint (max_left_00002_00001_00001=max_left_00002_00001_00002))
c Var 'aux1794' direct represents '0' with '-12281'
c Var 'aux1794' direct represents '1' with '12281'
c Var 'aux1794' order represents '1' with '1'
c Var 'aux1794' order represents '0' with '-12281'
c Encoding variable: aux1795 with domain: bool (representing constraint (variant_fields_00002_00001_00002=max_left_00002_00001_00002))
c Var 'aux1795' direct represents '0' with '-12282'
c Var 'aux1795' direct represents '1' with '12282'
c Var 'aux1795' order represents '1' with '1'
c Var 'aux1795' order represents '0' with '-12282'
c Encoding variable: aux1796 with domain: bool (representing constraint (max_left_00002_00001_00002=max_left_00002_00001_00003))
c Var 'aux1796' direct represents '0' with '-12283'
c Var 'aux1796' direct represents '1' with '12283'
c Var 'aux1796' order represents '1' with '1'
c Var 'aux1796' order represents '0' with '-12283'
c Encoding variable: aux1797 with domain: bool (representing constraint (variant_fields_00002_00001_00003=max_left_00002_00001_00003))
c Var 'aux1797' direct represents '0' with '-12284'
c Var 'aux1797' direct represents '1' with '12284'
c Var 'aux1797' order represents '1' with '1'
c Var 'aux1797' order represents '0' with '-12284'
c Encoding variable: aux1798 with domain: bool (representing constraint (max_left_00002_00001_00003=max_left_00002_00001_00004))
c Var 'aux1798' direct represents '0' with '-12285'
c Var 'aux1798' direct represents '1' with '12285'
c Var 'aux1798' order represents '1' with '1'
c Var 'aux1798' order represents '0' with '-12285'
c Encoding variable: aux1799 with domain: bool (representing constraint (variant_fields_00002_00001_00004=max_left_00002_00001_00004))
c Var 'aux1799' direct represents '0' with '-12286'
c Var 'aux1799' direct represents '1' with '12286'
c Var 'aux1799' order represents '1' with '1'
c Var 'aux1799' order represents '0' with '-12286'
c Encoding variable: aux1800 with domain: bool (representing constraint (max_left_00002_00001_00004=max_left_00002_00001_00005))
c Var 'aux1800' direct represents '0' with '-12287'
c Var 'aux1800' direct represents '1' with '12287'
c Var 'aux1800' order represents '1' with '1'
c Var 'aux1800' order represents '0' with '-12287'
c Encoding variable: aux1801 with domain: bool (representing constraint (variant_fields_00002_00001_00005=max_left_00002_00001_00005))
c Var 'aux1801' direct represents '0' with '-12288'
c Var 'aux1801' direct represents '1' with '12288'
c Var 'aux1801' order represents '1' with '1'
c Var 'aux1801' order represents '0' with '-12288'
c Encoding variable: aux1802 with domain: bool (representing constraint (max_left_00002_00001_00005=max_left_00002_00001_00006))
c Var 'aux1802' direct represents '0' with '-12289'
c Var 'aux1802' direct represents '1' with '12289'
c Var 'aux1802' order represents '1' with '1'
c Var 'aux1802' order represents '0' with '-12289'
c Encoding variable: aux1803 with domain: bool (representing constraint (variant_fields_00002_00001_00006=max_left_00002_00001_00006))
c Var 'aux1803' direct represents '0' with '-12290'
c Var 'aux1803' direct represents '1' with '12290'
c Var 'aux1803' order represents '1' with '1'
c Var 'aux1803' order represents '0' with '-12290'
c Encoding variable: aux1804 with domain: bool (representing constraint (max_left_00002_00001_00006=max_left_00002_00001_00007))
c Var 'aux1804' direct represents '0' with '-12291'
c Var 'aux1804' direct represents '1' with '12291'
c Var 'aux1804' order represents '1' with '1'
c Var 'aux1804' order represents '0' with '-12291'
c Encoding variable: aux1805 with domain: bool (representing constraint (variant_fields_00002_00001_00007=max_left_00002_00001_00007))
c Var 'aux1805' direct represents '0' with '-12292'
c Var 'aux1805' direct represents '1' with '12292'
c Var 'aux1805' order represents '1' with '1'
c Var 'aux1805' order represents '0' with '-12292'
c Encoding variable: aux1806 with domain: bool (representing constraint (max_left_00002_00001_00007=max_left_00002_00001_00008))
c Var 'aux1806' direct represents '0' with '-12293'
c Var 'aux1806' direct represents '1' with '12293'
c Var 'aux1806' order represents '1' with '1'
c Var 'aux1806' order represents '0' with '-12293'
c Encoding variable: aux1807 with domain: bool (representing constraint (variant_fields_00002_00001_00008=max_left_00002_00001_00008))
c Var 'aux1807' direct represents '0' with '-12294'
c Var 'aux1807' direct represents '1' with '12294'
c Var 'aux1807' order represents '1' with '1'
c Var 'aux1807' order represents '0' with '-12294'
c Encoding variable: aux1808 with domain: bool (representing constraint (max_left_00002_00001_00008=max_left_00002_00001_00009))
c Var 'aux1808' direct represents '0' with '-12295'
c Var 'aux1808' direct represents '1' with '12295'
c Var 'aux1808' order represents '1' with '1'
c Var 'aux1808' order represents '0' with '-12295'
c Encoding variable: aux1809 with domain: bool (representing constraint (variant_fields_00002_00001_00009=max_left_00002_00001_00009))
c Var 'aux1809' direct represents '0' with '-12296'
c Var 'aux1809' direct represents '1' with '12296'
c Var 'aux1809' order represents '1' with '1'
c Var 'aux1809' order represents '0' with '-12296'
c Encoding variable: aux1810 with domain: bool (representing constraint (max_left_00002_00002_00001=max_left_00002_00002_00002))
c Var 'aux1810' direct represents '0' with '-12297'
c Var 'aux1810' direct represents '1' with '12297'
c Var 'aux1810' order represents '1' with '1'
c Var 'aux1810' order represents '0' with '-12297'
c Encoding variable: aux1811 with domain: bool (representing constraint (variant_fields_00002_00002_00002=max_left_00002_00002_00002))
c Var 'aux1811' direct represents '0' with '-12298'
c Var 'aux1811' direct represents '1' with '12298'
c Var 'aux1811' order represents '1' with '1'
c Var 'aux1811' order represents '0' with '-12298'
c Encoding variable: aux1812 with domain: bool (representing constraint (max_left_00002_00002_00002=max_left_00002_00002_00003))
c Var 'aux1812' direct represents '0' with '-12299'
c Var 'aux1812' direct represents '1' with '12299'
c Var 'aux1812' order represents '1' with '1'
c Var 'aux1812' order represents '0' with '-12299'
c Encoding variable: aux1813 with domain: bool (representing constraint (variant_fields_00002_00002_00003=max_left_00002_00002_00003))
c Var 'aux1813' direct represents '0' with '-12300'
c Var 'aux1813' direct represents '1' with '12300'
c Var 'aux1813' order represents '1' with '1'
c Var 'aux1813' order represents '0' with '-12300'
c Encoding variable: aux1814 with domain: bool (representing constraint (max_left_00002_00002_00003=max_left_00002_00002_00004))
c Var 'aux1814' direct represents '0' with '-12301'
c Var 'aux1814' direct represents '1' with '12301'
c Var 'aux1814' order represents '1' with '1'
c Var 'aux1814' order represents '0' with '-12301'
c Encoding variable: aux1815 with domain: bool (representing constraint (variant_fields_00002_00002_00004=max_left_00002_00002_00004))
c Var 'aux1815' direct represents '0' with '-12302'
c Var 'aux1815' direct represents '1' with '12302'
c Var 'aux1815' order represents '1' with '1'
c Var 'aux1815' order represents '0' with '-12302'
c Encoding variable: aux1816 with domain: bool (representing constraint (max_left_00002_00002_00004=max_left_00002_00002_00005))
c Var 'aux1816' direct represents '0' with '-12303'
c Var 'aux1816' direct represents '1' with '12303'
c Var 'aux1816' order represents '1' with '1'
c Var 'aux1816' order represents '0' with '-12303'
c Encoding variable: aux1817 with domain: bool (representing constraint (variant_fields_00002_00002_00005=max_left_00002_00002_00005))
c Var 'aux1817' direct represents '0' with '-12304'
c Var 'aux1817' direct represents '1' with '12304'
c Var 'aux1817' order represents '1' with '1'
c Var 'aux1817' order represents '0' with '-12304'
c Encoding variable: aux1818 with domain: bool (representing constraint (max_left_00002_00002_00005=max_left_00002_00002_00006))
c Var 'aux1818' direct represents '0' with '-12305'
c Var 'aux1818' direct represents '1' with '12305'
c Var 'aux1818' order represents '1' with '1'
c Var 'aux1818' order represents '0' with '-12305'
c Encoding variable: aux1819 with domain: bool (representing constraint (variant_fields_00002_00002_00006=max_left_00002_00002_00006))
c Var 'aux1819' direct represents '0' with '-12306'
c Var 'aux1819' direct represents '1' with '12306'
c Var 'aux1819' order represents '1' with '1'
c Var 'aux1819' order represents '0' with '-12306'
c Encoding variable: aux1820 with domain: bool (representing constraint (max_left_00002_00002_00006=max_left_00002_00002_00007))
c Var 'aux1820' direct represents '0' with '-12307'
c Var 'aux1820' direct represents '1' with '12307'
c Var 'aux1820' order represents '1' with '1'
c Var 'aux1820' order represents '0' with '-12307'
c Encoding variable: aux1821 with domain: bool (representing constraint (variant_fields_00002_00002_00007=max_left_00002_00002_00007))
c Var 'aux1821' direct represents '0' with '-12308'
c Var 'aux1821' direct represents '1' with '12308'
c Var 'aux1821' order represents '1' with '1'
c Var 'aux1821' order represents '0' with '-12308'
c Encoding variable: aux1822 with domain: bool (representing constraint (max_left_00002_00002_00007=max_left_00002_00002_00008))
c Var 'aux1822' direct represents '0' with '-12309'
c Var 'aux1822' direct represents '1' with '12309'
c Var 'aux1822' order represents '1' with '1'
c Var 'aux1822' order represents '0' with '-12309'
c Encoding variable: aux1823 with domain: bool (representing constraint (variant_fields_00002_00002_00008=max_left_00002_00002_00008))
c Var 'aux1823' direct represents '0' with '-12310'
c Var 'aux1823' direct represents '1' with '12310'
c Var 'aux1823' order represents '1' with '1'
c Var 'aux1823' order represents '0' with '-12310'
c Encoding variable: aux1824 with domain: bool (representing constraint (max_left_00002_00002_00008=max_left_00002_00002_00009))
c Var 'aux1824' direct represents '0' with '-12311'
c Var 'aux1824' direct represents '1' with '12311'
c Var 'aux1824' order represents '1' with '1'
c Var 'aux1824' order represents '0' with '-12311'
c Encoding variable: aux1825 with domain: bool (representing constraint (variant_fields_00002_00002_00009=max_left_00002_00002_00009))
c Var 'aux1825' direct represents '0' with '-12312'
c Var 'aux1825' direct represents '1' with '12312'
c Var 'aux1825' order represents '1' with '1'
c Var 'aux1825' order represents '0' with '-12312'
c Encoding variable: aux1826 with domain: bool (representing constraint (max_left_00002_00003_00001=max_left_00002_00003_00002))
c Var 'aux1826' direct represents '0' with '-12313'
c Var 'aux1826' direct represents '1' with '12313'
c Var 'aux1826' order represents '1' with '1'
c Var 'aux1826' order represents '0' with '-12313'
c Encoding variable: aux1827 with domain: bool (representing constraint (variant_fields_00002_00003_00002=max_left_00002_00003_00002))
c Var 'aux1827' direct represents '0' with '-12314'
c Var 'aux1827' direct represents '1' with '12314'
c Var 'aux1827' order represents '1' with '1'
c Var 'aux1827' order represents '0' with '-12314'
c Encoding variable: aux1828 with domain: bool (representing constraint (max_left_00002_00003_00002=max_left_00002_00003_00003))
c Var 'aux1828' direct represents '0' with '-12315'
c Var 'aux1828' direct represents '1' with '12315'
c Var 'aux1828' order represents '1' with '1'
c Var 'aux1828' order represents '0' with '-12315'
c Encoding variable: aux1829 with domain: bool (representing constraint (variant_fields_00002_00003_00003=max_left_00002_00003_00003))
c Var 'aux1829' direct represents '0' with '-12316'
c Var 'aux1829' direct represents '1' with '12316'
c Var 'aux1829' order represents '1' with '1'
c Var 'aux1829' order represents '0' with '-12316'
c Encoding variable: aux1830 with domain: bool (representing constraint (max_left_00002_00003_00003=max_left_00002_00003_00004))
c Var 'aux1830' direct represents '0' with '-12317'
c Var 'aux1830' direct represents '1' with '12317'
c Var 'aux1830' order represents '1' with '1'
c Var 'aux1830' order represents '0' with '-12317'
c Encoding variable: aux1831 with domain: bool (representing constraint (variant_fields_00002_00003_00004=max_left_00002_00003_00004))
c Var 'aux1831' direct represents '0' with '-12318'
c Var 'aux1831' direct represents '1' with '12318'
c Var 'aux1831' order represents '1' with '1'
c Var 'aux1831' order represents '0' with '-12318'
c Encoding variable: aux1832 with domain: bool (representing constraint (max_left_00002_00003_00004=max_left_00002_00003_00005))
c Var 'aux1832' direct represents '0' with '-12319'
c Var 'aux1832' direct represents '1' with '12319'
c Var 'aux1832' order represents '1' with '1'
c Var 'aux1832' order represents '0' with '-12319'
c Encoding variable: aux1833 with domain: bool (representing constraint (variant_fields_00002_00003_00005=max_left_00002_00003_00005))
c Var 'aux1833' direct represents '0' with '-12320'
c Var 'aux1833' direct represents '1' with '12320'
c Var 'aux1833' order represents '1' with '1'
c Var 'aux1833' order represents '0' with '-12320'
c Encoding variable: aux1834 with domain: bool (representing constraint (max_left_00002_00003_00005=max_left_00002_00003_00006))
c Var 'aux1834' direct represents '0' with '-12321'
c Var 'aux1834' direct represents '1' with '12321'
c Var 'aux1834' order represents '1' with '1'
c Var 'aux1834' order represents '0' with '-12321'
c Encoding variable: aux1835 with domain: bool (representing constraint (variant_fields_00002_00003_00006=max_left_00002_00003_00006))
c Var 'aux1835' direct represents '0' with '-12322'
c Var 'aux1835' direct represents '1' with '12322'
c Var 'aux1835' order represents '1' with '1'
c Var 'aux1835' order represents '0' with '-12322'
c Encoding variable: aux1836 with domain: bool (representing constraint (max_left_00002_00003_00006=max_left_00002_00003_00007))
c Var 'aux1836' direct represents '0' with '-12323'
c Var 'aux1836' direct represents '1' with '12323'
c Var 'aux1836' order represents '1' with '1'
c Var 'aux1836' order represents '0' with '-12323'
c Encoding variable: aux1837 with domain: bool (representing constraint (variant_fields_00002_00003_00007=max_left_00002_00003_00007))
c Var 'aux1837' direct represents '0' with '-12324'
c Var 'aux1837' direct represents '1' with '12324'
c Var 'aux1837' order represents '1' with '1'
c Var 'aux1837' order represents '0' with '-12324'
c Encoding variable: aux1838 with domain: bool (representing constraint (max_left_00002_00003_00007=max_left_00002_00003_00008))
c Var 'aux1838' direct represents '0' with '-12325'
c Var 'aux1838' direct represents '1' with '12325'
c Var 'aux1838' order represents '1' with '1'
c Var 'aux1838' order represents '0' with '-12325'
c Encoding variable: aux1839 with domain: bool (representing constraint (variant_fields_00002_00003_00008=max_left_00002_00003_00008))
c Var 'aux1839' direct represents '0' with '-12326'
c Var 'aux1839' direct represents '1' with '12326'
c Var 'aux1839' order represents '1' with '1'
c Var 'aux1839' order represents '0' with '-12326'
c Encoding variable: aux1840 with domain: bool (representing constraint (max_left_00002_00003_00008=max_left_00002_00003_00009))
c Var 'aux1840' direct represents '0' with '-12327'
c Var 'aux1840' direct represents '1' with '12327'
c Var 'aux1840' order represents '1' with '1'
c Var 'aux1840' order represents '0' with '-12327'
c Encoding variable: aux1841 with domain: bool (representing constraint (variant_fields_00002_00003_00009=max_left_00002_00003_00009))
c Var 'aux1841' direct represents '0' with '-12328'
c Var 'aux1841' direct represents '1' with '12328'
c Var 'aux1841' order represents '1' with '1'
c Var 'aux1841' order represents '0' with '-12328'
c Encoding variable: aux1842 with domain: bool (representing constraint (max_left_00002_00004_00001=max_left_00002_00004_00002))
c Var 'aux1842' direct represents '0' with '-12329'
c Var 'aux1842' direct represents '1' with '12329'
c Var 'aux1842' order represents '1' with '1'
c Var 'aux1842' order represents '0' with '-12329'
c Encoding variable: aux1843 with domain: bool (representing constraint (variant_fields_00002_00004_00002=max_left_00002_00004_00002))
c Var 'aux1843' direct represents '0' with '-12330'
c Var 'aux1843' direct represents '1' with '12330'
c Var 'aux1843' order represents '1' with '1'
c Var 'aux1843' order represents '0' with '-12330'
c Encoding variable: aux1844 with domain: bool (representing constraint (max_left_00002_00004_00002=max_left_00002_00004_00003))
c Var 'aux1844' direct represents '0' with '-12331'
c Var 'aux1844' direct represents '1' with '12331'
c Var 'aux1844' order represents '1' with '1'
c Var 'aux1844' order represents '0' with '-12331'
c Encoding variable: aux1845 with domain: bool (representing constraint (variant_fields_00002_00004_00003=max_left_00002_00004_00003))
c Var 'aux1845' direct represents '0' with '-12332'
c Var 'aux1845' direct represents '1' with '12332'
c Var 'aux1845' order represents '1' with '1'
c Var 'aux1845' order represents '0' with '-12332'
c Encoding variable: aux1846 with domain: bool (representing constraint (max_left_00002_00004_00003=max_left_00002_00004_00004))
c Var 'aux1846' direct represents '0' with '-12333'
c Var 'aux1846' direct represents '1' with '12333'
c Var 'aux1846' order represents '1' with '1'
c Var 'aux1846' order represents '0' with '-12333'
c Encoding variable: aux1847 with domain: bool (representing constraint (variant_fields_00002_00004_00004=max_left_00002_00004_00004))
c Var 'aux1847' direct represents '0' with '-12334'
c Var 'aux1847' direct represents '1' with '12334'
c Var 'aux1847' order represents '1' with '1'
c Var 'aux1847' order represents '0' with '-12334'
c Encoding variable: aux1848 with domain: bool (representing constraint (max_left_00002_00004_00004=max_left_00002_00004_00005))
c Var 'aux1848' direct represents '0' with '-12335'
c Var 'aux1848' direct represents '1' with '12335'
c Var 'aux1848' order represents '1' with '1'
c Var 'aux1848' order represents '0' with '-12335'
c Encoding variable: aux1849 with domain: bool (representing constraint (variant_fields_00002_00004_00005=max_left_00002_00004_00005))
c Var 'aux1849' direct represents '0' with '-12336'
c Var 'aux1849' direct represents '1' with '12336'
c Var 'aux1849' order represents '1' with '1'
c Var 'aux1849' order represents '0' with '-12336'
c Encoding variable: aux1850 with domain: bool (representing constraint (max_left_00002_00004_00005=max_left_00002_00004_00006))
c Var 'aux1850' direct represents '0' with '-12337'
c Var 'aux1850' direct represents '1' with '12337'
c Var 'aux1850' order represents '1' with '1'
c Var 'aux1850' order represents '0' with '-12337'
c Encoding variable: aux1851 with domain: bool (representing constraint (variant_fields_00002_00004_00006=max_left_00002_00004_00006))
c Var 'aux1851' direct represents '0' with '-12338'
c Var 'aux1851' direct represents '1' with '12338'
c Var 'aux1851' order represents '1' with '1'
c Var 'aux1851' order represents '0' with '-12338'
c Encoding variable: aux1852 with domain: bool (representing constraint (max_left_00002_00004_00006=max_left_00002_00004_00007))
c Var 'aux1852' direct represents '0' with '-12339'
c Var 'aux1852' direct represents '1' with '12339'
c Var 'aux1852' order represents '1' with '1'
c Var 'aux1852' order represents '0' with '-12339'
c Encoding variable: aux1853 with domain: bool (representing constraint (variant_fields_00002_00004_00007=max_left_00002_00004_00007))
c Var 'aux1853' direct represents '0' with '-12340'
c Var 'aux1853' direct represents '1' with '12340'
c Var 'aux1853' order represents '1' with '1'
c Var 'aux1853' order represents '0' with '-12340'
c Encoding variable: aux1854 with domain: bool (representing constraint (max_left_00002_00004_00007=max_left_00002_00004_00008))
c Var 'aux1854' direct represents '0' with '-12341'
c Var 'aux1854' direct represents '1' with '12341'
c Var 'aux1854' order represents '1' with '1'
c Var 'aux1854' order represents '0' with '-12341'
c Encoding variable: aux1855 with domain: bool (representing constraint (variant_fields_00002_00004_00008=max_left_00002_00004_00008))
c Var 'aux1855' direct represents '0' with '-12342'
c Var 'aux1855' direct represents '1' with '12342'
c Var 'aux1855' order represents '1' with '1'
c Var 'aux1855' order represents '0' with '-12342'
c Encoding variable: aux1856 with domain: bool (representing constraint (max_left_00002_00004_00008=max_left_00002_00004_00009))
c Var 'aux1856' direct represents '0' with '-12343'
c Var 'aux1856' direct represents '1' with '12343'
c Var 'aux1856' order represents '1' with '1'
c Var 'aux1856' order represents '0' with '-12343'
c Encoding variable: aux1857 with domain: bool (representing constraint (variant_fields_00002_00004_00009=max_left_00002_00004_00009))
c Var 'aux1857' direct represents '0' with '-12344'
c Var 'aux1857' direct represents '1' with '12344'
c Var 'aux1857' order represents '1' with '1'
c Var 'aux1857' order represents '0' with '-12344'
c Encoding variable: aux1858 with domain: bool (representing constraint (max_left_00002_00005_00001=max_left_00002_00005_00002))
c Var 'aux1858' direct represents '0' with '-12345'
c Var 'aux1858' direct represents '1' with '12345'
c Var 'aux1858' order represents '1' with '1'
c Var 'aux1858' order represents '0' with '-12345'
c Encoding variable: aux1859 with domain: bool (representing constraint (variant_fields_00002_00005_00002=max_left_00002_00005_00002))
c Var 'aux1859' direct represents '0' with '-12346'
c Var 'aux1859' direct represents '1' with '12346'
c Var 'aux1859' order represents '1' with '1'
c Var 'aux1859' order represents '0' with '-12346'
c Encoding variable: aux1860 with domain: bool (representing constraint (max_left_00002_00005_00002=max_left_00002_00005_00003))
c Var 'aux1860' direct represents '0' with '-12347'
c Var 'aux1860' direct represents '1' with '12347'
c Var 'aux1860' order represents '1' with '1'
c Var 'aux1860' order represents '0' with '-12347'
c Encoding variable: aux1861 with domain: bool (representing constraint (variant_fields_00002_00005_00003=max_left_00002_00005_00003))
c Var 'aux1861' direct represents '0' with '-12348'
c Var 'aux1861' direct represents '1' with '12348'
c Var 'aux1861' order represents '1' with '1'
c Var 'aux1861' order represents '0' with '-12348'
c Encoding variable: aux1862 with domain: bool (representing constraint (max_left_00002_00005_00003=max_left_00002_00005_00004))
c Var 'aux1862' direct represents '0' with '-12349'
c Var 'aux1862' direct represents '1' with '12349'
c Var 'aux1862' order represents '1' with '1'
c Var 'aux1862' order represents '0' with '-12349'
c Encoding variable: aux1863 with domain: bool (representing constraint (variant_fields_00002_00005_00004=max_left_00002_00005_00004))
c Var 'aux1863' direct represents '0' with '-12350'
c Var 'aux1863' direct represents '1' with '12350'
c Var 'aux1863' order represents '1' with '1'
c Var 'aux1863' order represents '0' with '-12350'
c Encoding variable: aux1864 with domain: bool (representing constraint (max_left_00002_00005_00004=max_left_00002_00005_00005))
c Var 'aux1864' direct represents '0' with '-12351'
c Var 'aux1864' direct represents '1' with '12351'
c Var 'aux1864' order represents '1' with '1'
c Var 'aux1864' order represents '0' with '-12351'
c Encoding variable: aux1865 with domain: bool (representing constraint (variant_fields_00002_00005_00005=max_left_00002_00005_00005))
c Var 'aux1865' direct represents '0' with '-12352'
c Var 'aux1865' direct represents '1' with '12352'
c Var 'aux1865' order represents '1' with '1'
c Var 'aux1865' order represents '0' with '-12352'
c Encoding variable: aux1866 with domain: bool (representing constraint (max_left_00002_00005_00005=max_left_00002_00005_00006))
c Var 'aux1866' direct represents '0' with '-12353'
c Var 'aux1866' direct represents '1' with '12353'
c Var 'aux1866' order represents '1' with '1'
c Var 'aux1866' order represents '0' with '-12353'
c Encoding variable: aux1867 with domain: bool (representing constraint (variant_fields_00002_00005_00006=max_left_00002_00005_00006))
c Var 'aux1867' direct represents '0' with '-12354'
c Var 'aux1867' direct represents '1' with '12354'
c Var 'aux1867' order represents '1' with '1'
c Var 'aux1867' order represents '0' with '-12354'
c Encoding variable: aux1868 with domain: bool (representing constraint (max_left_00002_00005_00006=max_left_00002_00005_00007))
c Var 'aux1868' direct represents '0' with '-12355'
c Var 'aux1868' direct represents '1' with '12355'
c Var 'aux1868' order represents '1' with '1'
c Var 'aux1868' order represents '0' with '-12355'
c Encoding variable: aux1869 with domain: bool (representing constraint (variant_fields_00002_00005_00007=max_left_00002_00005_00007))
c Var 'aux1869' direct represents '0' with '-12356'
c Var 'aux1869' direct represents '1' with '12356'
c Var 'aux1869' order represents '1' with '1'
c Var 'aux1869' order represents '0' with '-12356'
c Encoding variable: aux1870 with domain: bool (representing constraint (max_left_00002_00005_00007=max_left_00002_00005_00008))
c Var 'aux1870' direct represents '0' with '-12357'
c Var 'aux1870' direct represents '1' with '12357'
c Var 'aux1870' order represents '1' with '1'
c Var 'aux1870' order represents '0' with '-12357'
c Encoding variable: aux1871 with domain: bool (representing constraint (variant_fields_00002_00005_00008=max_left_00002_00005_00008))
c Var 'aux1871' direct represents '0' with '-12358'
c Var 'aux1871' direct represents '1' with '12358'
c Var 'aux1871' order represents '1' with '1'
c Var 'aux1871' order represents '0' with '-12358'
c Encoding variable: aux1872 with domain: bool (representing constraint (max_left_00002_00006_00001=max_left_00002_00006_00002))
c Var 'aux1872' direct represents '0' with '-12359'
c Var 'aux1872' direct represents '1' with '12359'
c Var 'aux1872' order represents '1' with '1'
c Var 'aux1872' order represents '0' with '-12359'
c Encoding variable: aux1873 with domain: bool (representing constraint (variant_fields_00002_00006_00002=max_left_00002_00006_00002))
c Var 'aux1873' direct represents '0' with '-12360'
c Var 'aux1873' direct represents '1' with '12360'
c Var 'aux1873' order represents '1' with '1'
c Var 'aux1873' order represents '0' with '-12360'
c Encoding variable: aux1874 with domain: bool (representing constraint (max_left_00002_00006_00002=max_left_00002_00006_00003))
c Var 'aux1874' direct represents '0' with '-12361'
c Var 'aux1874' direct represents '1' with '12361'
c Var 'aux1874' order represents '1' with '1'
c Var 'aux1874' order represents '0' with '-12361'
c Encoding variable: aux1875 with domain: bool (representing constraint (variant_fields_00002_00006_00003=max_left_00002_00006_00003))
c Var 'aux1875' direct represents '0' with '-12362'
c Var 'aux1875' direct represents '1' with '12362'
c Var 'aux1875' order represents '1' with '1'
c Var 'aux1875' order represents '0' with '-12362'
c Encoding variable: aux1876 with domain: bool (representing constraint (max_left_00002_00006_00003=max_left_00002_00006_00004))
c Var 'aux1876' direct represents '0' with '-12363'
c Var 'aux1876' direct represents '1' with '12363'
c Var 'aux1876' order represents '1' with '1'
c Var 'aux1876' order represents '0' with '-12363'
c Encoding variable: aux1877 with domain: bool (representing constraint (variant_fields_00002_00006_00004=max_left_00002_00006_00004))
c Var 'aux1877' direct represents '0' with '-12364'
c Var 'aux1877' direct represents '1' with '12364'
c Var 'aux1877' order represents '1' with '1'
c Var 'aux1877' order represents '0' with '-12364'
c Encoding variable: aux1878 with domain: bool (representing constraint (max_left_00002_00006_00004=max_left_00002_00006_00005))
c Var 'aux1878' direct represents '0' with '-12365'
c Var 'aux1878' direct represents '1' with '12365'
c Var 'aux1878' order represents '1' with '1'
c Var 'aux1878' order represents '0' with '-12365'
c Encoding variable: aux1879 with domain: bool (representing constraint (variant_fields_00002_00006_00005=max_left_00002_00006_00005))
c Var 'aux1879' direct represents '0' with '-12366'
c Var 'aux1879' direct represents '1' with '12366'
c Var 'aux1879' order represents '1' with '1'
c Var 'aux1879' order represents '0' with '-12366'
c Encoding variable: aux1880 with domain: bool (representing constraint (max_left_00002_00006_00005=max_left_00002_00006_00006))
c Var 'aux1880' direct represents '0' with '-12367'
c Var 'aux1880' direct represents '1' with '12367'
c Var 'aux1880' order represents '1' with '1'
c Var 'aux1880' order represents '0' with '-12367'
c Encoding variable: aux1881 with domain: bool (representing constraint (variant_fields_00002_00006_00006=max_left_00002_00006_00006))
c Var 'aux1881' direct represents '0' with '-12368'
c Var 'aux1881' direct represents '1' with '12368'
c Var 'aux1881' order represents '1' with '1'
c Var 'aux1881' order represents '0' with '-12368'
c Encoding variable: aux1882 with domain: bool (representing constraint (max_left_00002_00006_00006=max_left_00002_00006_00007))
c Var 'aux1882' direct represents '0' with '-12369'
c Var 'aux1882' direct represents '1' with '12369'
c Var 'aux1882' order represents '1' with '1'
c Var 'aux1882' order represents '0' with '-12369'
c Encoding variable: aux1883 with domain: bool (representing constraint (variant_fields_00002_00006_00007=max_left_00002_00006_00007))
c Var 'aux1883' direct represents '0' with '-12370'
c Var 'aux1883' direct represents '1' with '12370'
c Var 'aux1883' order represents '1' with '1'
c Var 'aux1883' order represents '0' with '-12370'
c Encoding variable: aux1884 with domain: bool (representing constraint (max_left_00002_00006_00007=max_left_00002_00006_00008))
c Var 'aux1884' direct represents '0' with '-12371'
c Var 'aux1884' direct represents '1' with '12371'
c Var 'aux1884' order represents '1' with '1'
c Var 'aux1884' order represents '0' with '-12371'
c Encoding variable: aux1885 with domain: bool (representing constraint (variant_fields_00002_00006_00008=max_left_00002_00006_00008))
c Var 'aux1885' direct represents '0' with '-12372'
c Var 'aux1885' direct represents '1' with '12372'
c Var 'aux1885' order represents '1' with '1'
c Var 'aux1885' order represents '0' with '-12372'
c Encoding variable: aux1886 with domain: bool (representing constraint (max_left_00002_00006_00008=max_left_00002_00006_00009))
c Var 'aux1886' direct represents '0' with '-12373'
c Var 'aux1886' direct represents '1' with '12373'
c Var 'aux1886' order represents '1' with '1'
c Var 'aux1886' order represents '0' with '-12373'
c Encoding variable: aux1887 with domain: bool (representing constraint (variant_fields_00002_00006_00009=max_left_00002_00006_00009))
c Var 'aux1887' direct represents '0' with '-12374'
c Var 'aux1887' direct represents '1' with '12374'
c Var 'aux1887' order represents '1' with '1'
c Var 'aux1887' order represents '0' with '-12374'
c Encoding variable: aux1888 with domain: bool (representing constraint (max_left_00002_00007_00001=max_left_00002_00007_00002))
c Var 'aux1888' direct represents '0' with '-12375'
c Var 'aux1888' direct represents '1' with '12375'
c Var 'aux1888' order represents '1' with '1'
c Var 'aux1888' order represents '0' with '-12375'
c Encoding variable: aux1889 with domain: bool (representing constraint (variant_fields_00002_00007_00002=max_left_00002_00007_00002))
c Var 'aux1889' direct represents '0' with '-12376'
c Var 'aux1889' direct represents '1' with '12376'
c Var 'aux1889' order represents '1' with '1'
c Var 'aux1889' order represents '0' with '-12376'
c Encoding variable: aux1890 with domain: bool (representing constraint (max_left_00002_00007_00002=max_left_00002_00007_00003))
c Var 'aux1890' direct represents '0' with '-12377'
c Var 'aux1890' direct represents '1' with '12377'
c Var 'aux1890' order represents '1' with '1'
c Var 'aux1890' order represents '0' with '-12377'
c Encoding variable: aux1891 with domain: bool (representing constraint (variant_fields_00002_00007_00003=max_left_00002_00007_00003))
c Var 'aux1891' direct represents '0' with '-12378'
c Var 'aux1891' direct represents '1' with '12378'
c Var 'aux1891' order represents '1' with '1'
c Var 'aux1891' order represents '0' with '-12378'
c Encoding variable: aux1892 with domain: bool (representing constraint (max_left_00002_00007_00003=max_left_00002_00007_00004))
c Var 'aux1892' direct represents '0' with '-12379'
c Var 'aux1892' direct represents '1' with '12379'
c Var 'aux1892' order represents '1' with '1'
c Var 'aux1892' order represents '0' with '-12379'
c Encoding variable: aux1893 with domain: bool (representing constraint (variant_fields_00002_00007_00004=max_left_00002_00007_00004))
c Var 'aux1893' direct represents '0' with '-12380'
c Var 'aux1893' direct represents '1' with '12380'
c Var 'aux1893' order represents '1' with '1'
c Var 'aux1893' order represents '0' with '-12380'
c Encoding variable: aux1894 with domain: bool (representing constraint (max_left_00002_00007_00004=max_left_00002_00007_00005))
c Var 'aux1894' direct represents '0' with '-12381'
c Var 'aux1894' direct represents '1' with '12381'
c Var 'aux1894' order represents '1' with '1'
c Var 'aux1894' order represents '0' with '-12381'
c Encoding variable: aux1895 with domain: bool (representing constraint (variant_fields_00002_00007_00005=max_left_00002_00007_00005))
c Var 'aux1895' direct represents '0' with '-12382'
c Var 'aux1895' direct represents '1' with '12382'
c Var 'aux1895' order represents '1' with '1'
c Var 'aux1895' order represents '0' with '-12382'
c Encoding variable: aux1896 with domain: bool (representing constraint (max_left_00002_00007_00005=max_left_00002_00007_00006))
c Var 'aux1896' direct represents '0' with '-12383'
c Var 'aux1896' direct represents '1' with '12383'
c Var 'aux1896' order represents '1' with '1'
c Var 'aux1896' order represents '0' with '-12383'
c Encoding variable: aux1897 with domain: bool (representing constraint (variant_fields_00002_00007_00006=max_left_00002_00007_00006))
c Var 'aux1897' direct represents '0' with '-12384'
c Var 'aux1897' direct represents '1' with '12384'
c Var 'aux1897' order represents '1' with '1'
c Var 'aux1897' order represents '0' with '-12384'
c Encoding variable: aux1898 with domain: bool (representing constraint (max_left_00002_00007_00007=max_left_00002_00007_00008))
c Var 'aux1898' direct represents '0' with '-12385'
c Var 'aux1898' direct represents '1' with '12385'
c Var 'aux1898' order represents '1' with '1'
c Var 'aux1898' order represents '0' with '-12385'
c Encoding variable: aux1899 with domain: bool (representing constraint (variant_fields_00002_00007_00008=max_left_00002_00007_00008))
c Var 'aux1899' direct represents '0' with '-12386'
c Var 'aux1899' direct represents '1' with '12386'
c Var 'aux1899' order represents '1' with '1'
c Var 'aux1899' order represents '0' with '-12386'
c Encoding variable: aux1900 with domain: bool (representing constraint (max_left_00002_00007_00008=max_left_00002_00007_00009))
c Var 'aux1900' direct represents '0' with '-12387'
c Var 'aux1900' direct represents '1' with '12387'
c Var 'aux1900' order represents '1' with '1'
c Var 'aux1900' order represents '0' with '-12387'
c Encoding variable: aux1901 with domain: bool (representing constraint (variant_fields_00002_00007_00009=max_left_00002_00007_00009))
c Var 'aux1901' direct represents '0' with '-12388'
c Var 'aux1901' direct represents '1' with '12388'
c Var 'aux1901' order represents '1' with '1'
c Var 'aux1901' order represents '0' with '-12388'
c Encoding variable: aux1902 with domain: bool (representing constraint (max_left_00002_00008_00001=max_left_00002_00008_00002))
c Var 'aux1902' direct represents '0' with '-12389'
c Var 'aux1902' direct represents '1' with '12389'
c Var 'aux1902' order represents '1' with '1'
c Var 'aux1902' order represents '0' with '-12389'
c Encoding variable: aux1903 with domain: bool (representing constraint (variant_fields_00002_00008_00002=max_left_00002_00008_00002))
c Var 'aux1903' direct represents '0' with '-12390'
c Var 'aux1903' direct represents '1' with '12390'
c Var 'aux1903' order represents '1' with '1'
c Var 'aux1903' order represents '0' with '-12390'
c Encoding variable: aux1904 with domain: bool (representing constraint (max_left_00002_00008_00002=max_left_00002_00008_00003))
c Var 'aux1904' direct represents '0' with '-12391'
c Var 'aux1904' direct represents '1' with '12391'
c Var 'aux1904' order represents '1' with '1'
c Var 'aux1904' order represents '0' with '-12391'
c Encoding variable: aux1905 with domain: bool (representing constraint (variant_fields_00002_00008_00003=max_left_00002_00008_00003))
c Var 'aux1905' direct represents '0' with '-12392'
c Var 'aux1905' direct represents '1' with '12392'
c Var 'aux1905' order represents '1' with '1'
c Var 'aux1905' order represents '0' with '-12392'
c Encoding variable: aux1906 with domain: bool (representing constraint (max_left_00002_00008_00004=max_left_00002_00008_00005))
c Var 'aux1906' direct represents '0' with '-12393'
c Var 'aux1906' direct represents '1' with '12393'
c Var 'aux1906' order represents '1' with '1'
c Var 'aux1906' order represents '0' with '-12393'
c Encoding variable: aux1907 with domain: bool (representing constraint (variant_fields_00002_00008_00005=max_left_00002_00008_00005))
c Var 'aux1907' direct represents '0' with '-12394'
c Var 'aux1907' direct represents '1' with '12394'
c Var 'aux1907' order represents '1' with '1'
c Var 'aux1907' order represents '0' with '-12394'
c Encoding variable: aux1908 with domain: bool (representing constraint (max_left_00002_00008_00005=max_left_00002_00008_00006))
c Var 'aux1908' direct represents '0' with '-12395'
c Var 'aux1908' direct represents '1' with '12395'
c Var 'aux1908' order represents '1' with '1'
c Var 'aux1908' order represents '0' with '-12395'
c Encoding variable: aux1909 with domain: bool (representing constraint (variant_fields_00002_00008_00006=max_left_00002_00008_00006))
c Var 'aux1909' direct represents '0' with '-12396'
c Var 'aux1909' direct represents '1' with '12396'
c Var 'aux1909' order represents '1' with '1'
c Var 'aux1909' order represents '0' with '-12396'
c Encoding variable: aux1910 with domain: bool (representing constraint (max_left_00002_00008_00006=max_left_00002_00008_00007))
c Var 'aux1910' direct represents '0' with '-12397'
c Var 'aux1910' direct represents '1' with '12397'
c Var 'aux1910' order represents '1' with '1'
c Var 'aux1910' order represents '0' with '-12397'
c Encoding variable: aux1911 with domain: bool (representing constraint (variant_fields_00002_00008_00007=max_left_00002_00008_00007))
c Var 'aux1911' direct represents '0' with '-12398'
c Var 'aux1911' direct represents '1' with '12398'
c Var 'aux1911' order represents '1' with '1'
c Var 'aux1911' order represents '0' with '-12398'
c Encoding variable: aux1912 with domain: bool (representing constraint (max_left_00002_00008_00007=max_left_00002_00008_00008))
c Var 'aux1912' direct represents '0' with '-12399'
c Var 'aux1912' direct represents '1' with '12399'
c Var 'aux1912' order represents '1' with '1'
c Var 'aux1912' order represents '0' with '-12399'
c Encoding variable: aux1913 with domain: bool (representing constraint (variant_fields_00002_00008_00008=max_left_00002_00008_00008))
c Var 'aux1913' direct represents '0' with '-12400'
c Var 'aux1913' direct represents '1' with '12400'
c Var 'aux1913' order represents '1' with '1'
c Var 'aux1913' order represents '0' with '-12400'
c Encoding variable: aux1914 with domain: bool (representing constraint (max_left_00002_00008_00008=max_left_00002_00008_00009))
c Var 'aux1914' direct represents '0' with '-12401'
c Var 'aux1914' direct represents '1' with '12401'
c Var 'aux1914' order represents '1' with '1'
c Var 'aux1914' order represents '0' with '-12401'
c Encoding variable: aux1915 with domain: bool (representing constraint (variant_fields_00002_00008_00009=max_left_00002_00008_00009))
c Var 'aux1915' direct represents '0' with '-12402'
c Var 'aux1915' direct represents '1' with '12402'
c Var 'aux1915' order represents '1' with '1'
c Var 'aux1915' order represents '0' with '-12402'
c Encoding variable: aux1916 with domain: bool (representing constraint (max_left_00002_00009_00001=max_left_00002_00009_00002))
c Var 'aux1916' direct represents '0' with '-12403'
c Var 'aux1916' direct represents '1' with '12403'
c Var 'aux1916' order represents '1' with '1'
c Var 'aux1916' order represents '0' with '-12403'
c Encoding variable: aux1917 with domain: bool (representing constraint (variant_fields_00002_00009_00002=max_left_00002_00009_00002))
c Var 'aux1917' direct represents '0' with '-12404'
c Var 'aux1917' direct represents '1' with '12404'
c Var 'aux1917' order represents '1' with '1'
c Var 'aux1917' order represents '0' with '-12404'
c Encoding variable: aux1918 with domain: bool (representing constraint (max_left_00002_00009_00002=max_left_00002_00009_00003))
c Var 'aux1918' direct represents '0' with '-12405'
c Var 'aux1918' direct represents '1' with '12405'
c Var 'aux1918' order represents '1' with '1'
c Var 'aux1918' order represents '0' with '-12405'
c Encoding variable: aux1919 with domain: bool (representing constraint (variant_fields_00002_00009_00003=max_left_00002_00009_00003))
c Var 'aux1919' direct represents '0' with '-12406'
c Var 'aux1919' direct represents '1' with '12406'
c Var 'aux1919' order represents '1' with '1'
c Var 'aux1919' order represents '0' with '-12406'
c Encoding variable: aux1920 with domain: bool (representing constraint (max_left_00002_00009_00003=max_left_00002_00009_00004))
c Var 'aux1920' direct represents '0' with '-12407'
c Var 'aux1920' direct represents '1' with '12407'
c Var 'aux1920' order represents '1' with '1'
c Var 'aux1920' order represents '0' with '-12407'
c Encoding variable: aux1921 with domain: bool (representing constraint (variant_fields_00002_00009_00004=max_left_00002_00009_00004))
c Var 'aux1921' direct represents '0' with '-12408'
c Var 'aux1921' direct represents '1' with '12408'
c Var 'aux1921' order represents '1' with '1'
c Var 'aux1921' order represents '0' with '-12408'
c Encoding variable: aux1922 with domain: bool (representing constraint (max_left_00002_00009_00004=max_left_00002_00009_00005))
c Var 'aux1922' direct represents '0' with '-12409'
c Var 'aux1922' direct represents '1' with '12409'
c Var 'aux1922' order represents '1' with '1'
c Var 'aux1922' order represents '0' with '-12409'
c Encoding variable: aux1923 with domain: bool (representing constraint (variant_fields_00002_00009_00005=max_left_00002_00009_00005))
c Var 'aux1923' direct represents '0' with '-12410'
c Var 'aux1923' direct represents '1' with '12410'
c Var 'aux1923' order represents '1' with '1'
c Var 'aux1923' order represents '0' with '-12410'
c Encoding variable: aux1924 with domain: bool (representing constraint (max_left_00002_00009_00005=max_left_00002_00009_00006))
c Var 'aux1924' direct represents '0' with '-12411'
c Var 'aux1924' direct represents '1' with '12411'
c Var 'aux1924' order represents '1' with '1'
c Var 'aux1924' order represents '0' with '-12411'
c Encoding variable: aux1925 with domain: bool (representing constraint (variant_fields_00002_00009_00006=max_left_00002_00009_00006))
c Var 'aux1925' direct represents '0' with '-12412'
c Var 'aux1925' direct represents '1' with '12412'
c Var 'aux1925' order represents '1' with '1'
c Var 'aux1925' order represents '0' with '-12412'
c Encoding variable: aux1926 with domain: bool (representing constraint (max_left_00002_00009_00006=max_left_00002_00009_00007))
c Var 'aux1926' direct represents '0' with '-12413'
c Var 'aux1926' direct represents '1' with '12413'
c Var 'aux1926' order represents '1' with '1'
c Var 'aux1926' order represents '0' with '-12413'
c Encoding variable: aux1927 with domain: bool (representing constraint (variant_fields_00002_00009_00007=max_left_00002_00009_00007))
c Var 'aux1927' direct represents '0' with '-12414'
c Var 'aux1927' direct represents '1' with '12414'
c Var 'aux1927' order represents '1' with '1'
c Var 'aux1927' order represents '0' with '-12414'
c Encoding variable: aux1928 with domain: bool (representing constraint (max_left_00002_00009_00007=max_left_00002_00009_00008))
c Var 'aux1928' direct represents '0' with '-12415'
c Var 'aux1928' direct represents '1' with '12415'
c Var 'aux1928' order represents '1' with '1'
c Var 'aux1928' order represents '0' with '-12415'
c Encoding variable: aux1929 with domain: bool (representing constraint (variant_fields_00002_00009_00008=max_left_00002_00009_00008))
c Var 'aux1929' direct represents '0' with '-12416'
c Var 'aux1929' direct represents '1' with '12416'
c Var 'aux1929' order represents '1' with '1'
c Var 'aux1929' order represents '0' with '-12416'
c Encoding variable: aux1930 with domain: bool (representing constraint (max_left_00002_00009_00008=max_left_00002_00009_00009))
c Var 'aux1930' direct represents '0' with '-12417'
c Var 'aux1930' direct represents '1' with '12417'
c Var 'aux1930' order represents '1' with '1'
c Var 'aux1930' order represents '0' with '-12417'
c Encoding variable: aux1931 with domain: bool (representing constraint (variant_fields_00002_00009_00009=max_left_00002_00009_00009))
c Var 'aux1931' direct represents '0' with '-12418'
c Var 'aux1931' direct represents '1' with '12418'
c Var 'aux1931' order represents '1' with '1'
c Var 'aux1931' order represents '0' with '-12418'
c Encoding variable: aux1932 with domain: bool (representing constraint (variant_fields_00003_00001_00002=max_left_00003_00001_00002))
c Var 'aux1932' direct represents '0' with '-12419'
c Var 'aux1932' direct represents '1' with '12419'
c Var 'aux1932' order represents '1' with '1'
c Var 'aux1932' order represents '0' with '-12419'
c Encoding variable: aux1933 with domain: bool (representing constraint (max_left_00003_00001_00001=max_left_00003_00001_00002))
c Var 'aux1933' direct represents '0' with '-12420'
c Var 'aux1933' direct represents '1' with '12420'
c Var 'aux1933' order represents '1' with '1'
c Var 'aux1933' order represents '0' with '-12420'
c Encoding variable: aux1934 with domain: bool (representing constraint (variant_fields_00003_00001_00003=max_left_00003_00001_00003))
c Var 'aux1934' direct represents '0' with '-12421'
c Var 'aux1934' direct represents '1' with '12421'
c Var 'aux1934' order represents '1' with '1'
c Var 'aux1934' order represents '0' with '-12421'
c Encoding variable: aux1935 with domain: bool (representing constraint (max_left_00003_00001_00002=max_left_00003_00001_00003))
c Var 'aux1935' direct represents '0' with '-12422'
c Var 'aux1935' direct represents '1' with '12422'
c Var 'aux1935' order represents '1' with '1'
c Var 'aux1935' order represents '0' with '-12422'
c Encoding variable: aux1936 with domain: bool (representing constraint (variant_fields_00003_00001_00004=max_left_00003_00001_00004))
c Var 'aux1936' direct represents '0' with '-12423'
c Var 'aux1936' direct represents '1' with '12423'
c Var 'aux1936' order represents '1' with '1'
c Var 'aux1936' order represents '0' with '-12423'
c Encoding variable: aux1937 with domain: bool (representing constraint (max_left_00003_00001_00003=max_left_00003_00001_00004))
c Var 'aux1937' direct represents '0' with '-12424'
c Var 'aux1937' direct represents '1' with '12424'
c Var 'aux1937' order represents '1' with '1'
c Var 'aux1937' order represents '0' with '-12424'
c Encoding variable: aux1938 with domain: bool (representing constraint (variant_fields_00003_00001_00005=max_left_00003_00001_00005))
c Var 'aux1938' direct represents '0' with '-12425'
c Var 'aux1938' direct represents '1' with '12425'
c Var 'aux1938' order represents '1' with '1'
c Var 'aux1938' order represents '0' with '-12425'
c Encoding variable: aux1939 with domain: bool (representing constraint (max_left_00003_00001_00004=max_left_00003_00001_00005))
c Var 'aux1939' direct represents '0' with '-12426'
c Var 'aux1939' direct represents '1' with '12426'
c Var 'aux1939' order represents '1' with '1'
c Var 'aux1939' order represents '0' with '-12426'
c Encoding variable: aux1940 with domain: bool (representing constraint (variant_fields_00003_00001_00006=max_left_00003_00001_00006))
c Var 'aux1940' direct represents '0' with '-12427'
c Var 'aux1940' direct represents '1' with '12427'
c Var 'aux1940' order represents '1' with '1'
c Var 'aux1940' order represents '0' with '-12427'
c Encoding variable: aux1941 with domain: bool (representing constraint (max_left_00003_00001_00005=max_left_00003_00001_00006))
c Var 'aux1941' direct represents '0' with '-12428'
c Var 'aux1941' direct represents '1' with '12428'
c Var 'aux1941' order represents '1' with '1'
c Var 'aux1941' order represents '0' with '-12428'
c Encoding variable: aux1942 with domain: bool (representing constraint (variant_fields_00003_00001_00007=max_left_00003_00001_00007))
c Var 'aux1942' direct represents '0' with '-12429'
c Var 'aux1942' direct represents '1' with '12429'
c Var 'aux1942' order represents '1' with '1'
c Var 'aux1942' order represents '0' with '-12429'
c Encoding variable: aux1943 with domain: bool (representing constraint (max_left_00003_00001_00006=max_left_00003_00001_00007))
c Var 'aux1943' direct represents '0' with '-12430'
c Var 'aux1943' direct represents '1' with '12430'
c Var 'aux1943' order represents '1' with '1'
c Var 'aux1943' order represents '0' with '-12430'
c Encoding variable: aux1944 with domain: bool (representing constraint (variant_fields_00003_00001_00008=max_left_00003_00001_00008))
c Var 'aux1944' direct represents '0' with '-12431'
c Var 'aux1944' direct represents '1' with '12431'
c Var 'aux1944' order represents '1' with '1'
c Var 'aux1944' order represents '0' with '-12431'
c Encoding variable: aux1945 with domain: bool (representing constraint (max_left_00003_00001_00007=max_left_00003_00001_00008))
c Var 'aux1945' direct represents '0' with '-12432'
c Var 'aux1945' direct represents '1' with '12432'
c Var 'aux1945' order represents '1' with '1'
c Var 'aux1945' order represents '0' with '-12432'
c Encoding variable: aux1946 with domain: bool (representing constraint (variant_fields_00003_00001_00009=max_left_00003_00001_00009))
c Var 'aux1946' direct represents '0' with '-12433'
c Var 'aux1946' direct represents '1' with '12433'
c Var 'aux1946' order represents '1' with '1'
c Var 'aux1946' order represents '0' with '-12433'
c Encoding variable: aux1947 with domain: bool (representing constraint (max_left_00003_00001_00008=max_left_00003_00001_00009))
c Var 'aux1947' direct represents '0' with '-12434'
c Var 'aux1947' direct represents '1' with '12434'
c Var 'aux1947' order represents '1' with '1'
c Var 'aux1947' order represents '0' with '-12434'
c Encoding variable: aux1948 with domain: bool (representing constraint (max_left_00003_00002_00001=max_left_00003_00002_00002))
c Var 'aux1948' direct represents '0' with '-12435'
c Var 'aux1948' direct represents '1' with '12435'
c Var 'aux1948' order represents '1' with '1'
c Var 'aux1948' order represents '0' with '-12435'
c Encoding variable: aux1949 with domain: bool (representing constraint (variant_fields_00003_00002_00002=max_left_00003_00002_00002))
c Var 'aux1949' direct represents '0' with '-12436'
c Var 'aux1949' direct represents '1' with '12436'
c Var 'aux1949' order represents '1' with '1'
c Var 'aux1949' order represents '0' with '-12436'
c Encoding variable: aux1950 with domain: bool (representing constraint (max_left_00003_00002_00002=max_left_00003_00002_00003))
c Var 'aux1950' direct represents '0' with '-12437'
c Var 'aux1950' direct represents '1' with '12437'
c Var 'aux1950' order represents '1' with '1'
c Var 'aux1950' order represents '0' with '-12437'
c Encoding variable: aux1951 with domain: bool (representing constraint (variant_fields_00003_00002_00003=max_left_00003_00002_00003))
c Var 'aux1951' direct represents '0' with '-12438'
c Var 'aux1951' direct represents '1' with '12438'
c Var 'aux1951' order represents '1' with '1'
c Var 'aux1951' order represents '0' with '-12438'
c Encoding variable: aux1952 with domain: bool (representing constraint (max_left_00003_00002_00003=max_left_00003_00002_00004))
c Var 'aux1952' direct represents '0' with '-12439'
c Var 'aux1952' direct represents '1' with '12439'
c Var 'aux1952' order represents '1' with '1'
c Var 'aux1952' order represents '0' with '-12439'
c Encoding variable: aux1953 with domain: bool (representing constraint (variant_fields_00003_00002_00004=max_left_00003_00002_00004))
c Var 'aux1953' direct represents '0' with '-12440'
c Var 'aux1953' direct represents '1' with '12440'
c Var 'aux1953' order represents '1' with '1'
c Var 'aux1953' order represents '0' with '-12440'
c Encoding variable: aux1954 with domain: bool (representing constraint (max_left_00003_00002_00004=max_left_00003_00002_00005))
c Var 'aux1954' direct represents '0' with '-12441'
c Var 'aux1954' direct represents '1' with '12441'
c Var 'aux1954' order represents '1' with '1'
c Var 'aux1954' order represents '0' with '-12441'
c Encoding variable: aux1955 with domain: bool (representing constraint (variant_fields_00003_00002_00005=max_left_00003_00002_00005))
c Var 'aux1955' direct represents '0' with '-12442'
c Var 'aux1955' direct represents '1' with '12442'
c Var 'aux1955' order represents '1' with '1'
c Var 'aux1955' order represents '0' with '-12442'
c Encoding variable: aux1956 with domain: bool (representing constraint (max_left_00003_00002_00005=max_left_00003_00002_00006))
c Var 'aux1956' direct represents '0' with '-12443'
c Var 'aux1956' direct represents '1' with '12443'
c Var 'aux1956' order represents '1' with '1'
c Var 'aux1956' order represents '0' with '-12443'
c Encoding variable: aux1957 with domain: bool (representing constraint (variant_fields_00003_00002_00006=max_left_00003_00002_00006))
c Var 'aux1957' direct represents '0' with '-12444'
c Var 'aux1957' direct represents '1' with '12444'
c Var 'aux1957' order represents '1' with '1'
c Var 'aux1957' order represents '0' with '-12444'
c Encoding variable: aux1958 with domain: bool (representing constraint (max_left_00003_00002_00006=max_left_00003_00002_00007))
c Var 'aux1958' direct represents '0' with '-12445'
c Var 'aux1958' direct represents '1' with '12445'
c Var 'aux1958' order represents '1' with '1'
c Var 'aux1958' order represents '0' with '-12445'
c Encoding variable: aux1959 with domain: bool (representing constraint (variant_fields_00003_00002_00007=max_left_00003_00002_00007))
c Var 'aux1959' direct represents '0' with '-12446'
c Var 'aux1959' direct represents '1' with '12446'
c Var 'aux1959' order represents '1' with '1'
c Var 'aux1959' order represents '0' with '-12446'
c Encoding variable: aux1960 with domain: bool (representing constraint (max_left_00003_00002_00007=max_left_00003_00002_00008))
c Var 'aux1960' direct represents '0' with '-12447'
c Var 'aux1960' direct represents '1' with '12447'
c Var 'aux1960' order represents '1' with '1'
c Var 'aux1960' order represents '0' with '-12447'
c Encoding variable: aux1961 with domain: bool (representing constraint (variant_fields_00003_00002_00008=max_left_00003_00002_00008))
c Var 'aux1961' direct represents '0' with '-12448'
c Var 'aux1961' direct represents '1' with '12448'
c Var 'aux1961' order represents '1' with '1'
c Var 'aux1961' order represents '0' with '-12448'
c Encoding variable: aux1962 with domain: bool (representing constraint (max_left_00003_00002_00008=max_left_00003_00002_00009))
c Var 'aux1962' direct represents '0' with '-12449'
c Var 'aux1962' direct represents '1' with '12449'
c Var 'aux1962' order represents '1' with '1'
c Var 'aux1962' order represents '0' with '-12449'
c Encoding variable: aux1963 with domain: bool (representing constraint (variant_fields_00003_00002_00009=max_left_00003_00002_00009))
c Var 'aux1963' direct represents '0' with '-12450'
c Var 'aux1963' direct represents '1' with '12450'
c Var 'aux1963' order represents '1' with '1'
c Var 'aux1963' order represents '0' with '-12450'
c Encoding variable: aux1964 with domain: bool (representing constraint (max_left_00003_00003_00001=max_left_00003_00003_00002))
c Var 'aux1964' direct represents '0' with '-12451'
c Var 'aux1964' direct represents '1' with '12451'
c Var 'aux1964' order represents '1' with '1'
c Var 'aux1964' order represents '0' with '-12451'
c Encoding variable: aux1965 with domain: bool (representing constraint (variant_fields_00003_00003_00002=max_left_00003_00003_00002))
c Var 'aux1965' direct represents '0' with '-12452'
c Var 'aux1965' direct represents '1' with '12452'
c Var 'aux1965' order represents '1' with '1'
c Var 'aux1965' order represents '0' with '-12452'
c Encoding variable: aux1966 with domain: bool (representing constraint (max_left_00003_00003_00002=max_left_00003_00003_00003))
c Var 'aux1966' direct represents '0' with '-12453'
c Var 'aux1966' direct represents '1' with '12453'
c Var 'aux1966' order represents '1' with '1'
c Var 'aux1966' order represents '0' with '-12453'
c Encoding variable: aux1967 with domain: bool (representing constraint (variant_fields_00003_00003_00003=max_left_00003_00003_00003))
c Var 'aux1967' direct represents '0' with '-12454'
c Var 'aux1967' direct represents '1' with '12454'
c Var 'aux1967' order represents '1' with '1'
c Var 'aux1967' order represents '0' with '-12454'
c Encoding variable: aux1968 with domain: bool (representing constraint (max_left_00003_00003_00003=max_left_00003_00003_00004))
c Var 'aux1968' direct represents '0' with '-12455'
c Var 'aux1968' direct represents '1' with '12455'
c Var 'aux1968' order represents '1' with '1'
c Var 'aux1968' order represents '0' with '-12455'
c Encoding variable: aux1969 with domain: bool (representing constraint (variant_fields_00003_00003_00004=max_left_00003_00003_00004))
c Var 'aux1969' direct represents '0' with '-12456'
c Var 'aux1969' direct represents '1' with '12456'
c Var 'aux1969' order represents '1' with '1'
c Var 'aux1969' order represents '0' with '-12456'
c Encoding variable: aux1970 with domain: bool (representing constraint (max_left_00003_00003_00004=max_left_00003_00003_00005))
c Var 'aux1970' direct represents '0' with '-12457'
c Var 'aux1970' direct represents '1' with '12457'
c Var 'aux1970' order represents '1' with '1'
c Var 'aux1970' order represents '0' with '-12457'
c Encoding variable: aux1971 with domain: bool (representing constraint (variant_fields_00003_00003_00005=max_left_00003_00003_00005))
c Var 'aux1971' direct represents '0' with '-12458'
c Var 'aux1971' direct represents '1' with '12458'
c Var 'aux1971' order represents '1' with '1'
c Var 'aux1971' order represents '0' with '-12458'
c Encoding variable: aux1972 with domain: bool (representing constraint (max_left_00003_00003_00005=max_left_00003_00003_00006))
c Var 'aux1972' direct represents '0' with '-12459'
c Var 'aux1972' direct represents '1' with '12459'
c Var 'aux1972' order represents '1' with '1'
c Var 'aux1972' order represents '0' with '-12459'
c Encoding variable: aux1973 with domain: bool (representing constraint (variant_fields_00003_00003_00006=max_left_00003_00003_00006))
c Var 'aux1973' direct represents '0' with '-12460'
c Var 'aux1973' direct represents '1' with '12460'
c Var 'aux1973' order represents '1' with '1'
c Var 'aux1973' order represents '0' with '-12460'
c Encoding variable: aux1974 with domain: bool (representing constraint (max_left_00003_00003_00006=max_left_00003_00003_00007))
c Var 'aux1974' direct represents '0' with '-12461'
c Var 'aux1974' direct represents '1' with '12461'
c Var 'aux1974' order represents '1' with '1'
c Var 'aux1974' order represents '0' with '-12461'
c Encoding variable: aux1975 with domain: bool (representing constraint (variant_fields_00003_00003_00007=max_left_00003_00003_00007))
c Var 'aux1975' direct represents '0' with '-12462'
c Var 'aux1975' direct represents '1' with '12462'
c Var 'aux1975' order represents '1' with '1'
c Var 'aux1975' order represents '0' with '-12462'
c Encoding variable: aux1976 with domain: bool (representing constraint (max_left_00003_00003_00007=max_left_00003_00003_00008))
c Var 'aux1976' direct represents '0' with '-12463'
c Var 'aux1976' direct represents '1' with '12463'
c Var 'aux1976' order represents '1' with '1'
c Var 'aux1976' order represents '0' with '-12463'
c Encoding variable: aux1977 with domain: bool (representing constraint (variant_fields_00003_00003_00008=max_left_00003_00003_00008))
c Var 'aux1977' direct represents '0' with '-12464'
c Var 'aux1977' direct represents '1' with '12464'
c Var 'aux1977' order represents '1' with '1'
c Var 'aux1977' order represents '0' with '-12464'
c Encoding variable: aux1978 with domain: bool (representing constraint (max_left_00003_00003_00008=max_left_00003_00003_00009))
c Var 'aux1978' direct represents '0' with '-12465'
c Var 'aux1978' direct represents '1' with '12465'
c Var 'aux1978' order represents '1' with '1'
c Var 'aux1978' order represents '0' with '-12465'
c Encoding variable: aux1979 with domain: bool (representing constraint (variant_fields_00003_00003_00009=max_left_00003_00003_00009))
c Var 'aux1979' direct represents '0' with '-12466'
c Var 'aux1979' direct represents '1' with '12466'
c Var 'aux1979' order represents '1' with '1'
c Var 'aux1979' order represents '0' with '-12466'
c Encoding variable: aux1980 with domain: bool (representing constraint (max_left_00003_00004_00001=max_left_00003_00004_00002))
c Var 'aux1980' direct represents '0' with '-12467'
c Var 'aux1980' direct represents '1' with '12467'
c Var 'aux1980' order represents '1' with '1'
c Var 'aux1980' order represents '0' with '-12467'
c Encoding variable: aux1981 with domain: bool (representing constraint (variant_fields_00003_00004_00002=max_left_00003_00004_00002))
c Var 'aux1981' direct represents '0' with '-12468'
c Var 'aux1981' direct represents '1' with '12468'
c Var 'aux1981' order represents '1' with '1'
c Var 'aux1981' order represents '0' with '-12468'
c Encoding variable: aux1982 with domain: bool (representing constraint (max_left_00003_00004_00002=max_left_00003_00004_00003))
c Var 'aux1982' direct represents '0' with '-12469'
c Var 'aux1982' direct represents '1' with '12469'
c Var 'aux1982' order represents '1' with '1'
c Var 'aux1982' order represents '0' with '-12469'
c Encoding variable: aux1983 with domain: bool (representing constraint (variant_fields_00003_00004_00003=max_left_00003_00004_00003))
c Var 'aux1983' direct represents '0' with '-12470'
c Var 'aux1983' direct represents '1' with '12470'
c Var 'aux1983' order represents '1' with '1'
c Var 'aux1983' order represents '0' with '-12470'
c Encoding variable: aux1984 with domain: bool (representing constraint (max_left_00003_00004_00003=max_left_00003_00004_00004))
c Var 'aux1984' direct represents '0' with '-12471'
c Var 'aux1984' direct represents '1' with '12471'
c Var 'aux1984' order represents '1' with '1'
c Var 'aux1984' order represents '0' with '-12471'
c Encoding variable: aux1985 with domain: bool (representing constraint (variant_fields_00003_00004_00004=max_left_00003_00004_00004))
c Var 'aux1985' direct represents '0' with '-12472'
c Var 'aux1985' direct represents '1' with '12472'
c Var 'aux1985' order represents '1' with '1'
c Var 'aux1985' order represents '0' with '-12472'
c Encoding variable: aux1986 with domain: bool (representing constraint (max_left_00003_00004_00004=max_left_00003_00004_00005))
c Var 'aux1986' direct represents '0' with '-12473'
c Var 'aux1986' direct represents '1' with '12473'
c Var 'aux1986' order represents '1' with '1'
c Var 'aux1986' order represents '0' with '-12473'
c Encoding variable: aux1987 with domain: bool (representing constraint (variant_fields_00003_00004_00005=max_left_00003_00004_00005))
c Var 'aux1987' direct represents '0' with '-12474'
c Var 'aux1987' direct represents '1' with '12474'
c Var 'aux1987' order represents '1' with '1'
c Var 'aux1987' order represents '0' with '-12474'
c Encoding variable: aux1988 with domain: bool (representing constraint (max_left_00003_00004_00005=max_left_00003_00004_00006))
c Var 'aux1988' direct represents '0' with '-12475'
c Var 'aux1988' direct represents '1' with '12475'
c Var 'aux1988' order represents '1' with '1'
c Var 'aux1988' order represents '0' with '-12475'
c Encoding variable: aux1989 with domain: bool (representing constraint (variant_fields_00003_00004_00006=max_left_00003_00004_00006))
c Var 'aux1989' direct represents '0' with '-12476'
c Var 'aux1989' direct represents '1' with '12476'
c Var 'aux1989' order represents '1' with '1'
c Var 'aux1989' order represents '0' with '-12476'
c Encoding variable: aux1990 with domain: bool (representing constraint (max_left_00003_00004_00007=max_left_00003_00004_00008))
c Var 'aux1990' direct represents '0' with '-12477'
c Var 'aux1990' direct represents '1' with '12477'
c Var 'aux1990' order represents '1' with '1'
c Var 'aux1990' order represents '0' with '-12477'
c Encoding variable: aux1991 with domain: bool (representing constraint (variant_fields_00003_00004_00008=max_left_00003_00004_00008))
c Var 'aux1991' direct represents '0' with '-12478'
c Var 'aux1991' direct represents '1' with '12478'
c Var 'aux1991' order represents '1' with '1'
c Var 'aux1991' order represents '0' with '-12478'
c Encoding variable: aux1992 with domain: bool (representing constraint (max_left_00003_00004_00008=max_left_00003_00004_00009))
c Var 'aux1992' direct represents '0' with '-12479'
c Var 'aux1992' direct represents '1' with '12479'
c Var 'aux1992' order represents '1' with '1'
c Var 'aux1992' order represents '0' with '-12479'
c Encoding variable: aux1993 with domain: bool (representing constraint (variant_fields_00003_00004_00009=max_left_00003_00004_00009))
c Var 'aux1993' direct represents '0' with '-12480'
c Var 'aux1993' direct represents '1' with '12480'
c Var 'aux1993' order represents '1' with '1'
c Var 'aux1993' order represents '0' with '-12480'
c Encoding variable: aux1994 with domain: bool (representing constraint (max_left_00003_00005_00001=max_left_00003_00005_00002))
c Var 'aux1994' direct represents '0' with '-12481'
c Var 'aux1994' direct represents '1' with '12481'
c Var 'aux1994' order represents '1' with '1'
c Var 'aux1994' order represents '0' with '-12481'
c Encoding variable: aux1995 with domain: bool (representing constraint (variant_fields_00003_00005_00002=max_left_00003_00005_00002))
c Var 'aux1995' direct represents '0' with '-12482'
c Var 'aux1995' direct represents '1' with '12482'
c Var 'aux1995' order represents '1' with '1'
c Var 'aux1995' order represents '0' with '-12482'
c Encoding variable: aux1996 with domain: bool (representing constraint (max_left_00003_00005_00002=max_left_00003_00005_00003))
c Var 'aux1996' direct represents '0' with '-12483'
c Var 'aux1996' direct represents '1' with '12483'
c Var 'aux1996' order represents '1' with '1'
c Var 'aux1996' order represents '0' with '-12483'
c Encoding variable: aux1997 with domain: bool (representing constraint (variant_fields_00003_00005_00003=max_left_00003_00005_00003))
c Var 'aux1997' direct represents '0' with '-12484'
c Var 'aux1997' direct represents '1' with '12484'
c Var 'aux1997' order represents '1' with '1'
c Var 'aux1997' order represents '0' with '-12484'
c Encoding variable: aux1998 with domain: bool (representing constraint (max_left_00003_00005_00003=max_left_00003_00005_00004))
c Var 'aux1998' direct represents '0' with '-12485'
c Var 'aux1998' direct represents '1' with '12485'
c Var 'aux1998' order represents '1' with '1'
c Var 'aux1998' order represents '0' with '-12485'
c Encoding variable: aux1999 with domain: bool (representing constraint (variant_fields_00003_00005_00004=max_left_00003_00005_00004))
c Var 'aux1999' direct represents '0' with '-12486'
c Var 'aux1999' direct represents '1' with '12486'
c Var 'aux1999' order represents '1' with '1'
c Var 'aux1999' order represents '0' with '-12486'
c Encoding variable: aux2000 with domain: bool (representing constraint (max_left_00003_00005_00004=max_left_00003_00005_00005))
c Var 'aux2000' direct represents '0' with '-12487'
c Var 'aux2000' direct represents '1' with '12487'
c Var 'aux2000' order represents '1' with '1'
c Var 'aux2000' order represents '0' with '-12487'
c Encoding variable: aux2001 with domain: bool (representing constraint (variant_fields_00003_00005_00005=max_left_00003_00005_00005))
c Var 'aux2001' direct represents '0' with '-12488'
c Var 'aux2001' direct represents '1' with '12488'
c Var 'aux2001' order represents '1' with '1'
c Var 'aux2001' order represents '0' with '-12488'
c Encoding variable: aux2002 with domain: bool (representing constraint (max_left_00003_00005_00006=max_left_00003_00005_00007))
c Var 'aux2002' direct represents '0' with '-12489'
c Var 'aux2002' direct represents '1' with '12489'
c Var 'aux2002' order represents '1' with '1'
c Var 'aux2002' order represents '0' with '-12489'
c Encoding variable: aux2003 with domain: bool (representing constraint (variant_fields_00003_00005_00007=max_left_00003_00005_00007))
c Var 'aux2003' direct represents '0' with '-12490'
c Var 'aux2003' direct represents '1' with '12490'
c Var 'aux2003' order represents '1' with '1'
c Var 'aux2003' order represents '0' with '-12490'
c Encoding variable: aux2004 with domain: bool (representing constraint (max_left_00003_00005_00007=max_left_00003_00005_00008))
c Var 'aux2004' direct represents '0' with '-12491'
c Var 'aux2004' direct represents '1' with '12491'
c Var 'aux2004' order represents '1' with '1'
c Var 'aux2004' order represents '0' with '-12491'
c Encoding variable: aux2005 with domain: bool (representing constraint (variant_fields_00003_00005_00008=max_left_00003_00005_00008))
c Var 'aux2005' direct represents '0' with '-12492'
c Var 'aux2005' direct represents '1' with '12492'
c Var 'aux2005' order represents '1' with '1'
c Var 'aux2005' order represents '0' with '-12492'
c Encoding variable: aux2006 with domain: bool (representing constraint (max_left_00003_00005_00008=max_left_00003_00005_00009))
c Var 'aux2006' direct represents '0' with '-12493'
c Var 'aux2006' direct represents '1' with '12493'
c Var 'aux2006' order represents '1' with '1'
c Var 'aux2006' order represents '0' with '-12493'
c Encoding variable: aux2007 with domain: bool (representing constraint (variant_fields_00003_00005_00009=max_left_00003_00005_00009))
c Var 'aux2007' direct represents '0' with '-12494'
c Var 'aux2007' direct represents '1' with '12494'
c Var 'aux2007' order represents '1' with '1'
c Var 'aux2007' order represents '0' with '-12494'
c Encoding variable: aux2008 with domain: bool (representing constraint (variant_fields_00003_00006_00002=max_left_00003_00006_00002))
c Var 'aux2008' direct represents '0' with '-12495'
c Var 'aux2008' direct represents '1' with '12495'
c Var 'aux2008' order represents '1' with '1'
c Var 'aux2008' order represents '0' with '-12495'
c Encoding variable: aux2009 with domain: bool (representing constraint (max_left_00003_00006_00001=max_left_00003_00006_00002))
c Var 'aux2009' direct represents '0' with '-12496'
c Var 'aux2009' direct represents '1' with '12496'
c Var 'aux2009' order represents '1' with '1'
c Var 'aux2009' order represents '0' with '-12496'
c Encoding variable: aux2010 with domain: bool (representing constraint (variant_fields_00003_00006_00003=max_left_00003_00006_00003))
c Var 'aux2010' direct represents '0' with '-12497'
c Var 'aux2010' direct represents '1' with '12497'
c Var 'aux2010' order represents '1' with '1'
c Var 'aux2010' order represents '0' with '-12497'
c Encoding variable: aux2011 with domain: bool (representing constraint (max_left_00003_00006_00002=max_left_00003_00006_00003))
c Var 'aux2011' direct represents '0' with '-12498'
c Var 'aux2011' direct represents '1' with '12498'
c Var 'aux2011' order represents '1' with '1'
c Var 'aux2011' order represents '0' with '-12498'
c Encoding variable: aux2012 with domain: bool (representing constraint (variant_fields_00003_00006_00004=max_left_00003_00006_00004))
c Var 'aux2012' direct represents '0' with '-12499'
c Var 'aux2012' direct represents '1' with '12499'
c Var 'aux2012' order represents '1' with '1'
c Var 'aux2012' order represents '0' with '-12499'
c Encoding variable: aux2013 with domain: bool (representing constraint (max_left_00003_00006_00003=max_left_00003_00006_00004))
c Var 'aux2013' direct represents '0' with '-12500'
c Var 'aux2013' direct represents '1' with '12500'
c Var 'aux2013' order represents '1' with '1'
c Var 'aux2013' order represents '0' with '-12500'
c Encoding variable: aux2014 with domain: bool (representing constraint (variant_fields_00003_00006_00005=max_left_00003_00006_00005))
c Var 'aux2014' direct represents '0' with '-12501'
c Var 'aux2014' direct represents '1' with '12501'
c Var 'aux2014' order represents '1' with '1'
c Var 'aux2014' order represents '0' with '-12501'
c Encoding variable: aux2015 with domain: bool (representing constraint (max_left_00003_00006_00004=max_left_00003_00006_00005))
c Var 'aux2015' direct represents '0' with '-12502'
c Var 'aux2015' direct represents '1' with '12502'
c Var 'aux2015' order represents '1' with '1'
c Var 'aux2015' order represents '0' with '-12502'
c Encoding variable: aux2016 with domain: bool (representing constraint (variant_fields_00003_00006_00006=max_left_00003_00006_00006))
c Var 'aux2016' direct represents '0' with '-12503'
c Var 'aux2016' direct represents '1' with '12503'
c Var 'aux2016' order represents '1' with '1'
c Var 'aux2016' order represents '0' with '-12503'
c Encoding variable: aux2017 with domain: bool (representing constraint (max_left_00003_00006_00005=max_left_00003_00006_00006))
c Var 'aux2017' direct represents '0' with '-12504'
c Var 'aux2017' direct represents '1' with '12504'
c Var 'aux2017' order represents '1' with '1'
c Var 'aux2017' order represents '0' with '-12504'
c Encoding variable: aux2018 with domain: bool (representing constraint (variant_fields_00003_00006_00007=max_left_00003_00006_00007))
c Var 'aux2018' direct represents '0' with '-12505'
c Var 'aux2018' direct represents '1' with '12505'
c Var 'aux2018' order represents '1' with '1'
c Var 'aux2018' order represents '0' with '-12505'
c Encoding variable: aux2019 with domain: bool (representing constraint (max_left_00003_00006_00006=max_left_00003_00006_00007))
c Var 'aux2019' direct represents '0' with '-12506'
c Var 'aux2019' direct represents '1' with '12506'
c Var 'aux2019' order represents '1' with '1'
c Var 'aux2019' order represents '0' with '-12506'
c Encoding variable: aux2020 with domain: bool (representing constraint (variant_fields_00003_00006_00008=max_left_00003_00006_00008))
c Var 'aux2020' direct represents '0' with '-12507'
c Var 'aux2020' direct represents '1' with '12507'
c Var 'aux2020' order represents '1' with '1'
c Var 'aux2020' order represents '0' with '-12507'
c Encoding variable: aux2021 with domain: bool (representing constraint (max_left_00003_00006_00007=max_left_00003_00006_00008))
c Var 'aux2021' direct represents '0' with '-12508'
c Var 'aux2021' direct represents '1' with '12508'
c Var 'aux2021' order represents '1' with '1'
c Var 'aux2021' order represents '0' with '-12508'
c Encoding variable: aux2022 with domain: bool (representing constraint (variant_fields_00003_00006_00009=max_left_00003_00006_00009))
c Var 'aux2022' direct represents '0' with '-12509'
c Var 'aux2022' direct represents '1' with '12509'
c Var 'aux2022' order represents '1' with '1'
c Var 'aux2022' order represents '0' with '-12509'
c Encoding variable: aux2023 with domain: bool (representing constraint (max_left_00003_00006_00008=max_left_00003_00006_00009))
c Var 'aux2023' direct represents '0' with '-12510'
c Var 'aux2023' direct represents '1' with '12510'
c Var 'aux2023' order represents '1' with '1'
c Var 'aux2023' order represents '0' with '-12510'
c Encoding variable: aux2024 with domain: bool (representing constraint (max_left_00003_00007_00001=max_left_00003_00007_00002))
c Var 'aux2024' direct represents '0' with '-12511'
c Var 'aux2024' direct represents '1' with '12511'
c Var 'aux2024' order represents '1' with '1'
c Var 'aux2024' order represents '0' with '-12511'
c Encoding variable: aux2025 with domain: bool (representing constraint (variant_fields_00003_00007_00002=max_left_00003_00007_00002))
c Var 'aux2025' direct represents '0' with '-12512'
c Var 'aux2025' direct represents '1' with '12512'
c Var 'aux2025' order represents '1' with '1'
c Var 'aux2025' order represents '0' with '-12512'
c Encoding variable: aux2026 with domain: bool (representing constraint (max_left_00003_00007_00003=max_left_00003_00007_00004))
c Var 'aux2026' direct represents '0' with '-12513'
c Var 'aux2026' direct represents '1' with '12513'
c Var 'aux2026' order represents '1' with '1'
c Var 'aux2026' order represents '0' with '-12513'
c Encoding variable: aux2027 with domain: bool (representing constraint (variant_fields_00003_00007_00004=max_left_00003_00007_00004))
c Var 'aux2027' direct represents '0' with '-12514'
c Var 'aux2027' direct represents '1' with '12514'
c Var 'aux2027' order represents '1' with '1'
c Var 'aux2027' order represents '0' with '-12514'
c Encoding variable: aux2028 with domain: bool (representing constraint (max_left_00003_00007_00004=max_left_00003_00007_00005))
c Var 'aux2028' direct represents '0' with '-12515'
c Var 'aux2028' direct represents '1' with '12515'
c Var 'aux2028' order represents '1' with '1'
c Var 'aux2028' order represents '0' with '-12515'
c Encoding variable: aux2029 with domain: bool (representing constraint (variant_fields_00003_00007_00005=max_left_00003_00007_00005))
c Var 'aux2029' direct represents '0' with '-12516'
c Var 'aux2029' direct represents '1' with '12516'
c Var 'aux2029' order represents '1' with '1'
c Var 'aux2029' order represents '0' with '-12516'
c Encoding variable: aux2030 with domain: bool (representing constraint (max_left_00003_00007_00006=max_left_00003_00007_00007))
c Var 'aux2030' direct represents '0' with '-12517'
c Var 'aux2030' direct represents '1' with '12517'
c Var 'aux2030' order represents '1' with '1'
c Var 'aux2030' order represents '0' with '-12517'
c Encoding variable: aux2031 with domain: bool (representing constraint (variant_fields_00003_00007_00007=max_left_00003_00007_00007))
c Var 'aux2031' direct represents '0' with '-12518'
c Var 'aux2031' direct represents '1' with '12518'
c Var 'aux2031' order represents '1' with '1'
c Var 'aux2031' order represents '0' with '-12518'
c Encoding variable: aux2032 with domain: bool (representing constraint (max_left_00003_00007_00007=max_left_00003_00007_00008))
c Var 'aux2032' direct represents '0' with '-12519'
c Var 'aux2032' direct represents '1' with '12519'
c Var 'aux2032' order represents '1' with '1'
c Var 'aux2032' order represents '0' with '-12519'
c Encoding variable: aux2033 with domain: bool (representing constraint (variant_fields_00003_00007_00008=max_left_00003_00007_00008))
c Var 'aux2033' direct represents '0' with '-12520'
c Var 'aux2033' direct represents '1' with '12520'
c Var 'aux2033' order represents '1' with '1'
c Var 'aux2033' order represents '0' with '-12520'
c Encoding variable: aux2034 with domain: bool (representing constraint (max_left_00003_00007_00008=max_left_00003_00007_00009))
c Var 'aux2034' direct represents '0' with '-12521'
c Var 'aux2034' direct represents '1' with '12521'
c Var 'aux2034' order represents '1' with '1'
c Var 'aux2034' order represents '0' with '-12521'
c Encoding variable: aux2035 with domain: bool (representing constraint (variant_fields_00003_00007_00009=max_left_00003_00007_00009))
c Var 'aux2035' direct represents '0' with '-12522'
c Var 'aux2035' direct represents '1' with '12522'
c Var 'aux2035' order represents '1' with '1'
c Var 'aux2035' order represents '0' with '-12522'
c Encoding variable: aux2036 with domain: bool (representing constraint (max_left_00003_00008_00001=max_left_00003_00008_00002))
c Var 'aux2036' direct represents '0' with '-12523'
c Var 'aux2036' direct represents '1' with '12523'
c Var 'aux2036' order represents '1' with '1'
c Var 'aux2036' order represents '0' with '-12523'
c Encoding variable: aux2037 with domain: bool (representing constraint (variant_fields_00003_00008_00002=max_left_00003_00008_00002))
c Var 'aux2037' direct represents '0' with '-12524'
c Var 'aux2037' direct represents '1' with '12524'
c Var 'aux2037' order represents '1' with '1'
c Var 'aux2037' order represents '0' with '-12524'
c Encoding variable: aux2038 with domain: bool (representing constraint (max_left_00003_00008_00002=max_left_00003_00008_00003))
c Var 'aux2038' direct represents '0' with '-12525'
c Var 'aux2038' direct represents '1' with '12525'
c Var 'aux2038' order represents '1' with '1'
c Var 'aux2038' order represents '0' with '-12525'
c Encoding variable: aux2039 with domain: bool (representing constraint (variant_fields_00003_00008_00003=max_left_00003_00008_00003))
c Var 'aux2039' direct represents '0' with '-12526'
c Var 'aux2039' direct represents '1' with '12526'
c Var 'aux2039' order represents '1' with '1'
c Var 'aux2039' order represents '0' with '-12526'
c Encoding variable: aux2040 with domain: bool (representing constraint (max_left_00003_00008_00003=max_left_00003_00008_00004))
c Var 'aux2040' direct represents '0' with '-12527'
c Var 'aux2040' direct represents '1' with '12527'
c Var 'aux2040' order represents '1' with '1'
c Var 'aux2040' order represents '0' with '-12527'
c Encoding variable: aux2041 with domain: bool (representing constraint (variant_fields_00003_00008_00004=max_left_00003_00008_00004))
c Var 'aux2041' direct represents '0' with '-12528'
c Var 'aux2041' direct represents '1' with '12528'
c Var 'aux2041' order represents '1' with '1'
c Var 'aux2041' order represents '0' with '-12528'
c Encoding variable: aux2042 with domain: bool (representing constraint (max_left_00003_00008_00004=max_left_00003_00008_00005))
c Var 'aux2042' direct represents '0' with '-12529'
c Var 'aux2042' direct represents '1' with '12529'
c Var 'aux2042' order represents '1' with '1'
c Var 'aux2042' order represents '0' with '-12529'
c Encoding variable: aux2043 with domain: bool (representing constraint (variant_fields_00003_00008_00005=max_left_00003_00008_00005))
c Var 'aux2043' direct represents '0' with '-12530'
c Var 'aux2043' direct represents '1' with '12530'
c Var 'aux2043' order represents '1' with '1'
c Var 'aux2043' order represents '0' with '-12530'
c Encoding variable: aux2044 with domain: bool (representing constraint (max_left_00003_00008_00005=max_left_00003_00008_00006))
c Var 'aux2044' direct represents '0' with '-12531'
c Var 'aux2044' direct represents '1' with '12531'
c Var 'aux2044' order represents '1' with '1'
c Var 'aux2044' order represents '0' with '-12531'
c Encoding variable: aux2045 with domain: bool (representing constraint (variant_fields_00003_00008_00006=max_left_00003_00008_00006))
c Var 'aux2045' direct represents '0' with '-12532'
c Var 'aux2045' direct represents '1' with '12532'
c Var 'aux2045' order represents '1' with '1'
c Var 'aux2045' order represents '0' with '-12532'
c Encoding variable: aux2046 with domain: bool (representing constraint (max_left_00003_00008_00006=max_left_00003_00008_00007))
c Var 'aux2046' direct represents '0' with '-12533'
c Var 'aux2046' direct represents '1' with '12533'
c Var 'aux2046' order represents '1' with '1'
c Var 'aux2046' order represents '0' with '-12533'
c Encoding variable: aux2047 with domain: bool (representing constraint (variant_fields_00003_00008_00007=max_left_00003_00008_00007))
c Var 'aux2047' direct represents '0' with '-12534'
c Var 'aux2047' direct represents '1' with '12534'
c Var 'aux2047' order represents '1' with '1'
c Var 'aux2047' order represents '0' with '-12534'
c Encoding variable: aux2048 with domain: bool (representing constraint (max_left_00003_00008_00007=max_left_00003_00008_00008))
c Var 'aux2048' direct represents '0' with '-12535'
c Var 'aux2048' direct represents '1' with '12535'
c Var 'aux2048' order represents '1' with '1'
c Var 'aux2048' order represents '0' with '-12535'
c Encoding variable: aux2049 with domain: bool (representing constraint (variant_fields_00003_00008_00008=max_left_00003_00008_00008))
c Var 'aux2049' direct represents '0' with '-12536'
c Var 'aux2049' direct represents '1' with '12536'
c Var 'aux2049' order represents '1' with '1'
c Var 'aux2049' order represents '0' with '-12536'
c Encoding variable: aux2050 with domain: bool (representing constraint (max_left_00003_00008_00008=max_left_00003_00008_00009))
c Var 'aux2050' direct represents '0' with '-12537'
c Var 'aux2050' direct represents '1' with '12537'
c Var 'aux2050' order represents '1' with '1'
c Var 'aux2050' order represents '0' with '-12537'
c Encoding variable: aux2051 with domain: bool (representing constraint (variant_fields_00003_00008_00009=max_left_00003_00008_00009))
c Var 'aux2051' direct represents '0' with '-12538'
c Var 'aux2051' direct represents '1' with '12538'
c Var 'aux2051' order represents '1' with '1'
c Var 'aux2051' order represents '0' with '-12538'
c Encoding variable: aux2052 with domain: bool (representing constraint (max_left_00003_00009_00001=max_left_00003_00009_00002))
c Var 'aux2052' direct represents '0' with '-12539'
c Var 'aux2052' direct represents '1' with '12539'
c Var 'aux2052' order represents '1' with '1'
c Var 'aux2052' order represents '0' with '-12539'
c Encoding variable: aux2053 with domain: bool (representing constraint (variant_fields_00003_00009_00002=max_left_00003_00009_00002))
c Var 'aux2053' direct represents '0' with '-12540'
c Var 'aux2053' direct represents '1' with '12540'
c Var 'aux2053' order represents '1' with '1'
c Var 'aux2053' order represents '0' with '-12540'
c Encoding variable: aux2054 with domain: bool (representing constraint (max_left_00003_00009_00002=max_left_00003_00009_00003))
c Var 'aux2054' direct represents '0' with '-12541'
c Var 'aux2054' direct represents '1' with '12541'
c Var 'aux2054' order represents '1' with '1'
c Var 'aux2054' order represents '0' with '-12541'
c Encoding variable: aux2055 with domain: bool (representing constraint (variant_fields_00003_00009_00003=max_left_00003_00009_00003))
c Var 'aux2055' direct represents '0' with '-12542'
c Var 'aux2055' direct represents '1' with '12542'
c Var 'aux2055' order represents '1' with '1'
c Var 'aux2055' order represents '0' with '-12542'
c Encoding variable: aux2056 with domain: bool (representing constraint (max_left_00003_00009_00003=max_left_00003_00009_00004))
c Var 'aux2056' direct represents '0' with '-12543'
c Var 'aux2056' direct represents '1' with '12543'
c Var 'aux2056' order represents '1' with '1'
c Var 'aux2056' order represents '0' with '-12543'
c Encoding variable: aux2057 with domain: bool (representing constraint (variant_fields_00003_00009_00004=max_left_00003_00009_00004))
c Var 'aux2057' direct represents '0' with '-12544'
c Var 'aux2057' direct represents '1' with '12544'
c Var 'aux2057' order represents '1' with '1'
c Var 'aux2057' order represents '0' with '-12544'
c Encoding variable: aux2058 with domain: bool (representing constraint (max_left_00003_00009_00005=max_left_00003_00009_00006))
c Var 'aux2058' direct represents '0' with '-12545'
c Var 'aux2058' direct represents '1' with '12545'
c Var 'aux2058' order represents '1' with '1'
c Var 'aux2058' order represents '0' with '-12545'
c Encoding variable: aux2059 with domain: bool (representing constraint (variant_fields_00003_00009_00006=max_left_00003_00009_00006))
c Var 'aux2059' direct represents '0' with '-12546'
c Var 'aux2059' direct represents '1' with '12546'
c Var 'aux2059' order represents '1' with '1'
c Var 'aux2059' order represents '0' with '-12546'
c Encoding variable: aux2060 with domain: bool (representing constraint (max_left_00003_00009_00006=max_left_00003_00009_00007))
c Var 'aux2060' direct represents '0' with '-12547'
c Var 'aux2060' direct represents '1' with '12547'
c Var 'aux2060' order represents '1' with '1'
c Var 'aux2060' order represents '0' with '-12547'
c Encoding variable: aux2061 with domain: bool (representing constraint (variant_fields_00003_00009_00007=max_left_00003_00009_00007))
c Var 'aux2061' direct represents '0' with '-12548'
c Var 'aux2061' direct represents '1' with '12548'
c Var 'aux2061' order represents '1' with '1'
c Var 'aux2061' order represents '0' with '-12548'
c Encoding variable: aux2062 with domain: bool (representing constraint (max_left_00003_00009_00007=max_left_00003_00009_00008))
c Var 'aux2062' direct represents '0' with '-12549'
c Var 'aux2062' direct represents '1' with '12549'
c Var 'aux2062' order represents '1' with '1'
c Var 'aux2062' order represents '0' with '-12549'
c Encoding variable: aux2063 with domain: bool (representing constraint (variant_fields_00003_00009_00008=max_left_00003_00009_00008))
c Var 'aux2063' direct represents '0' with '-12550'
c Var 'aux2063' direct represents '1' with '12550'
c Var 'aux2063' order represents '1' with '1'
c Var 'aux2063' order represents '0' with '-12550'
c Encoding variable: aux2064 with domain: bool (representing constraint (max_left_00003_00009_00008=max_left_00003_00009_00009))
c Var 'aux2064' direct represents '0' with '-12551'
c Var 'aux2064' direct represents '1' with '12551'
c Var 'aux2064' order represents '1' with '1'
c Var 'aux2064' order represents '0' with '-12551'
c Encoding variable: aux2065 with domain: bool (representing constraint (variant_fields_00003_00009_00009=max_left_00003_00009_00009))
c Var 'aux2065' direct represents '0' with '-12552'
c Var 'aux2065' direct represents '1' with '12552'
c Var 'aux2065' order represents '1' with '1'
c Var 'aux2065' order represents '0' with '-12552'
c Encoding variable: aux2066 with domain: bool (representing constraint (max_left_00004_00001_00001=max_left_00004_00001_00002))
c Var 'aux2066' direct represents '0' with '-12553'
c Var 'aux2066' direct represents '1' with '12553'
c Var 'aux2066' order represents '1' with '1'
c Var 'aux2066' order represents '0' with '-12553'
c Encoding variable: aux2067 with domain: bool (representing constraint (variant_fields_00004_00001_00002=max_left_00004_00001_00002))
c Var 'aux2067' direct represents '0' with '-12554'
c Var 'aux2067' direct represents '1' with '12554'
c Var 'aux2067' order represents '1' with '1'
c Var 'aux2067' order represents '0' with '-12554'
c Encoding variable: aux2068 with domain: bool (representing constraint (max_left_00004_00001_00002=max_left_00004_00001_00003))
c Var 'aux2068' direct represents '0' with '-12555'
c Var 'aux2068' direct represents '1' with '12555'
c Var 'aux2068' order represents '1' with '1'
c Var 'aux2068' order represents '0' with '-12555'
c Encoding variable: aux2069 with domain: bool (representing constraint (variant_fields_00004_00001_00003=max_left_00004_00001_00003))
c Var 'aux2069' direct represents '0' with '-12556'
c Var 'aux2069' direct represents '1' with '12556'
c Var 'aux2069' order represents '1' with '1'
c Var 'aux2069' order represents '0' with '-12556'
c Encoding variable: aux2070 with domain: bool (representing constraint (max_left_00004_00001_00003=max_left_00004_00001_00004))
c Var 'aux2070' direct represents '0' with '-12557'
c Var 'aux2070' direct represents '1' with '12557'
c Var 'aux2070' order represents '1' with '1'
c Var 'aux2070' order represents '0' with '-12557'
c Encoding variable: aux2071 with domain: bool (representing constraint (variant_fields_00004_00001_00004=max_left_00004_00001_00004))
c Var 'aux2071' direct represents '0' with '-12558'
c Var 'aux2071' direct represents '1' with '12558'
c Var 'aux2071' order represents '1' with '1'
c Var 'aux2071' order represents '0' with '-12558'
c Encoding variable: aux2072 with domain: bool (representing constraint (max_left_00004_00001_00004=max_left_00004_00001_00005))
c Var 'aux2072' direct represents '0' with '-12559'
c Var 'aux2072' direct represents '1' with '12559'
c Var 'aux2072' order represents '1' with '1'
c Var 'aux2072' order represents '0' with '-12559'
c Encoding variable: aux2073 with domain: bool (representing constraint (variant_fields_00004_00001_00005=max_left_00004_00001_00005))
c Var 'aux2073' direct represents '0' with '-12560'
c Var 'aux2073' direct represents '1' with '12560'
c Var 'aux2073' order represents '1' with '1'
c Var 'aux2073' order represents '0' with '-12560'
c Encoding variable: aux2074 with domain: bool (representing constraint (max_left_00004_00001_00005=max_left_00004_00001_00006))
c Var 'aux2074' direct represents '0' with '-12561'
c Var 'aux2074' direct represents '1' with '12561'
c Var 'aux2074' order represents '1' with '1'
c Var 'aux2074' order represents '0' with '-12561'
c Encoding variable: aux2075 with domain: bool (representing constraint (variant_fields_00004_00001_00006=max_left_00004_00001_00006))
c Var 'aux2075' direct represents '0' with '-12562'
c Var 'aux2075' direct represents '1' with '12562'
c Var 'aux2075' order represents '1' with '1'
c Var 'aux2075' order represents '0' with '-12562'
c Encoding variable: aux2076 with domain: bool (representing constraint (max_left_00004_00001_00006=max_left_00004_00001_00007))
c Var 'aux2076' direct represents '0' with '-12563'
c Var 'aux2076' direct represents '1' with '12563'
c Var 'aux2076' order represents '1' with '1'
c Var 'aux2076' order represents '0' with '-12563'
c Encoding variable: aux2077 with domain: bool (representing constraint (variant_fields_00004_00001_00007=max_left_00004_00001_00007))
c Var 'aux2077' direct represents '0' with '-12564'
c Var 'aux2077' direct represents '1' with '12564'
c Var 'aux2077' order represents '1' with '1'
c Var 'aux2077' order represents '0' with '-12564'
c Encoding variable: aux2078 with domain: bool (representing constraint (max_left_00004_00001_00007=max_left_00004_00001_00008))
c Var 'aux2078' direct represents '0' with '-12565'
c Var 'aux2078' direct represents '1' with '12565'
c Var 'aux2078' order represents '1' with '1'
c Var 'aux2078' order represents '0' with '-12565'
c Encoding variable: aux2079 with domain: bool (representing constraint (variant_fields_00004_00001_00008=max_left_00004_00001_00008))
c Var 'aux2079' direct represents '0' with '-12566'
c Var 'aux2079' direct represents '1' with '12566'
c Var 'aux2079' order represents '1' with '1'
c Var 'aux2079' order represents '0' with '-12566'
c Encoding variable: aux2080 with domain: bool (representing constraint (max_left_00004_00001_00008=max_left_00004_00001_00009))
c Var 'aux2080' direct represents '0' with '-12567'
c Var 'aux2080' direct represents '1' with '12567'
c Var 'aux2080' order represents '1' with '1'
c Var 'aux2080' order represents '0' with '-12567'
c Encoding variable: aux2081 with domain: bool (representing constraint (variant_fields_00004_00001_00009=max_left_00004_00001_00009))
c Var 'aux2081' direct represents '0' with '-12568'
c Var 'aux2081' direct represents '1' with '12568'
c Var 'aux2081' order represents '1' with '1'
c Var 'aux2081' order represents '0' with '-12568'
c Encoding variable: aux2082 with domain: bool (representing constraint (max_left_00004_00002_00001=max_left_00004_00002_00002))
c Var 'aux2082' direct represents '0' with '-12569'
c Var 'aux2082' direct represents '1' with '12569'
c Var 'aux2082' order represents '1' with '1'
c Var 'aux2082' order represents '0' with '-12569'
c Encoding variable: aux2083 with domain: bool (representing constraint (variant_fields_00004_00002_00002=max_left_00004_00002_00002))
c Var 'aux2083' direct represents '0' with '-12570'
c Var 'aux2083' direct represents '1' with '12570'
c Var 'aux2083' order represents '1' with '1'
c Var 'aux2083' order represents '0' with '-12570'
c Encoding variable: aux2084 with domain: bool (representing constraint (max_left_00004_00002_00002=max_left_00004_00002_00003))
c Var 'aux2084' direct represents '0' with '-12571'
c Var 'aux2084' direct represents '1' with '12571'
c Var 'aux2084' order represents '1' with '1'
c Var 'aux2084' order represents '0' with '-12571'
c Encoding variable: aux2085 with domain: bool (representing constraint (variant_fields_00004_00002_00003=max_left_00004_00002_00003))
c Var 'aux2085' direct represents '0' with '-12572'
c Var 'aux2085' direct represents '1' with '12572'
c Var 'aux2085' order represents '1' with '1'
c Var 'aux2085' order represents '0' with '-12572'
c Encoding variable: aux2086 with domain: bool (representing constraint (max_left_00004_00002_00003=max_left_00004_00002_00004))
c Var 'aux2086' direct represents '0' with '-12573'
c Var 'aux2086' direct represents '1' with '12573'
c Var 'aux2086' order represents '1' with '1'
c Var 'aux2086' order represents '0' with '-12573'
c Encoding variable: aux2087 with domain: bool (representing constraint (variant_fields_00004_00002_00004=max_left_00004_00002_00004))
c Var 'aux2087' direct represents '0' with '-12574'
c Var 'aux2087' direct represents '1' with '12574'
c Var 'aux2087' order represents '1' with '1'
c Var 'aux2087' order represents '0' with '-12574'
c Encoding variable: aux2088 with domain: bool (representing constraint (max_left_00004_00002_00004=max_left_00004_00002_00005))
c Var 'aux2088' direct represents '0' with '-12575'
c Var 'aux2088' direct represents '1' with '12575'
c Var 'aux2088' order represents '1' with '1'
c Var 'aux2088' order represents '0' with '-12575'
c Encoding variable: aux2089 with domain: bool (representing constraint (variant_fields_00004_00002_00005=max_left_00004_00002_00005))
c Var 'aux2089' direct represents '0' with '-12576'
c Var 'aux2089' direct represents '1' with '12576'
c Var 'aux2089' order represents '1' with '1'
c Var 'aux2089' order represents '0' with '-12576'
c Encoding variable: aux2090 with domain: bool (representing constraint (max_left_00004_00002_00005=max_left_00004_00002_00006))
c Var 'aux2090' direct represents '0' with '-12577'
c Var 'aux2090' direct represents '1' with '12577'
c Var 'aux2090' order represents '1' with '1'
c Var 'aux2090' order represents '0' with '-12577'
c Encoding variable: aux2091 with domain: bool (representing constraint (variant_fields_00004_00002_00006=max_left_00004_00002_00006))
c Var 'aux2091' direct represents '0' with '-12578'
c Var 'aux2091' direct represents '1' with '12578'
c Var 'aux2091' order represents '1' with '1'
c Var 'aux2091' order represents '0' with '-12578'
c Encoding variable: aux2092 with domain: bool (representing constraint (max_left_00004_00002_00006=max_left_00004_00002_00007))
c Var 'aux2092' direct represents '0' with '-12579'
c Var 'aux2092' direct represents '1' with '12579'
c Var 'aux2092' order represents '1' with '1'
c Var 'aux2092' order represents '0' with '-12579'
c Encoding variable: aux2093 with domain: bool (representing constraint (variant_fields_00004_00002_00007=max_left_00004_00002_00007))
c Var 'aux2093' direct represents '0' with '-12580'
c Var 'aux2093' direct represents '1' with '12580'
c Var 'aux2093' order represents '1' with '1'
c Var 'aux2093' order represents '0' with '-12580'
c Encoding variable: aux2094 with domain: bool (representing constraint (max_left_00004_00002_00007=max_left_00004_00002_00008))
c Var 'aux2094' direct represents '0' with '-12581'
c Var 'aux2094' direct represents '1' with '12581'
c Var 'aux2094' order represents '1' with '1'
c Var 'aux2094' order represents '0' with '-12581'
c Encoding variable: aux2095 with domain: bool (representing constraint (variant_fields_00004_00002_00008=max_left_00004_00002_00008))
c Var 'aux2095' direct represents '0' with '-12582'
c Var 'aux2095' direct represents '1' with '12582'
c Var 'aux2095' order represents '1' with '1'
c Var 'aux2095' order represents '0' with '-12582'
c Encoding variable: aux2096 with domain: bool (representing constraint (max_left_00004_00002_00008=max_left_00004_00002_00009))
c Var 'aux2096' direct represents '0' with '-12583'
c Var 'aux2096' direct represents '1' with '12583'
c Var 'aux2096' order represents '1' with '1'
c Var 'aux2096' order represents '0' with '-12583'
c Encoding variable: aux2097 with domain: bool (representing constraint (variant_fields_00004_00002_00009=max_left_00004_00002_00009))
c Var 'aux2097' direct represents '0' with '-12584'
c Var 'aux2097' direct represents '1' with '12584'
c Var 'aux2097' order represents '1' with '1'
c Var 'aux2097' order represents '0' with '-12584'
c Encoding variable: aux2098 with domain: bool (representing constraint (max_left_00004_00003_00001=max_left_00004_00003_00002))
c Var 'aux2098' direct represents '0' with '-12585'
c Var 'aux2098' direct represents '1' with '12585'
c Var 'aux2098' order represents '1' with '1'
c Var 'aux2098' order represents '0' with '-12585'
c Encoding variable: aux2099 with domain: bool (representing constraint (variant_fields_00004_00003_00002=max_left_00004_00003_00002))
c Var 'aux2099' direct represents '0' with '-12586'
c Var 'aux2099' direct represents '1' with '12586'
c Var 'aux2099' order represents '1' with '1'
c Var 'aux2099' order represents '0' with '-12586'
c Encoding variable: aux2100 with domain: bool (representing constraint (max_left_00004_00003_00002=max_left_00004_00003_00003))
c Var 'aux2100' direct represents '0' with '-12587'
c Var 'aux2100' direct represents '1' with '12587'
c Var 'aux2100' order represents '1' with '1'
c Var 'aux2100' order represents '0' with '-12587'
c Encoding variable: aux2101 with domain: bool (representing constraint (variant_fields_00004_00003_00003=max_left_00004_00003_00003))
c Var 'aux2101' direct represents '0' with '-12588'
c Var 'aux2101' direct represents '1' with '12588'
c Var 'aux2101' order represents '1' with '1'
c Var 'aux2101' order represents '0' with '-12588'
c Encoding variable: aux2102 with domain: bool (representing constraint (max_left_00004_00003_00003=max_left_00004_00003_00004))
c Var 'aux2102' direct represents '0' with '-12589'
c Var 'aux2102' direct represents '1' with '12589'
c Var 'aux2102' order represents '1' with '1'
c Var 'aux2102' order represents '0' with '-12589'
c Encoding variable: aux2103 with domain: bool (representing constraint (variant_fields_00004_00003_00004=max_left_00004_00003_00004))
c Var 'aux2103' direct represents '0' with '-12590'
c Var 'aux2103' direct represents '1' with '12590'
c Var 'aux2103' order represents '1' with '1'
c Var 'aux2103' order represents '0' with '-12590'
c Encoding variable: aux2104 with domain: bool (representing constraint (max_left_00004_00003_00004=max_left_00004_00003_00005))
c Var 'aux2104' direct represents '0' with '-12591'
c Var 'aux2104' direct represents '1' with '12591'
c Var 'aux2104' order represents '1' with '1'
c Var 'aux2104' order represents '0' with '-12591'
c Encoding variable: aux2105 with domain: bool (representing constraint (variant_fields_00004_00003_00005=max_left_00004_00003_00005))
c Var 'aux2105' direct represents '0' with '-12592'
c Var 'aux2105' direct represents '1' with '12592'
c Var 'aux2105' order represents '1' with '1'
c Var 'aux2105' order represents '0' with '-12592'
c Encoding variable: aux2106 with domain: bool (representing constraint (max_left_00004_00003_00006=max_left_00004_00003_00007))
c Var 'aux2106' direct represents '0' with '-12593'
c Var 'aux2106' direct represents '1' with '12593'
c Var 'aux2106' order represents '1' with '1'
c Var 'aux2106' order represents '0' with '-12593'
c Encoding variable: aux2107 with domain: bool (representing constraint (variant_fields_00004_00003_00007=max_left_00004_00003_00007))
c Var 'aux2107' direct represents '0' with '-12594'
c Var 'aux2107' direct represents '1' with '12594'
c Var 'aux2107' order represents '1' with '1'
c Var 'aux2107' order represents '0' with '-12594'
c Encoding variable: aux2108 with domain: bool (representing constraint (max_left_00004_00003_00007=max_left_00004_00003_00008))
c Var 'aux2108' direct represents '0' with '-12595'
c Var 'aux2108' direct represents '1' with '12595'
c Var 'aux2108' order represents '1' with '1'
c Var 'aux2108' order represents '0' with '-12595'
c Encoding variable: aux2109 with domain: bool (representing constraint (variant_fields_00004_00003_00008=max_left_00004_00003_00008))
c Var 'aux2109' direct represents '0' with '-12596'
c Var 'aux2109' direct represents '1' with '12596'
c Var 'aux2109' order represents '1' with '1'
c Var 'aux2109' order represents '0' with '-12596'
c Encoding variable: aux2110 with domain: bool (representing constraint (max_left_00004_00003_00008=max_left_00004_00003_00009))
c Var 'aux2110' direct represents '0' with '-12597'
c Var 'aux2110' direct represents '1' with '12597'
c Var 'aux2110' order represents '1' with '1'
c Var 'aux2110' order represents '0' with '-12597'
c Encoding variable: aux2111 with domain: bool (representing constraint (variant_fields_00004_00003_00009=max_left_00004_00003_00009))
c Var 'aux2111' direct represents '0' with '-12598'
c Var 'aux2111' direct represents '1' with '12598'
c Var 'aux2111' order represents '1' with '1'
c Var 'aux2111' order represents '0' with '-12598'
c Encoding variable: aux2112 with domain: bool (representing constraint (max_left_00004_00004_00001=max_left_00004_00004_00002))
c Var 'aux2112' direct represents '0' with '-12599'
c Var 'aux2112' direct represents '1' with '12599'
c Var 'aux2112' order represents '1' with '1'
c Var 'aux2112' order represents '0' with '-12599'
c Encoding variable: aux2113 with domain: bool (representing constraint (variant_fields_00004_00004_00002=max_left_00004_00004_00002))
c Var 'aux2113' direct represents '0' with '-12600'
c Var 'aux2113' direct represents '1' with '12600'
c Var 'aux2113' order represents '1' with '1'
c Var 'aux2113' order represents '0' with '-12600'
c Encoding variable: aux2114 with domain: bool (representing constraint (max_left_00004_00004_00002=max_left_00004_00004_00003))
c Var 'aux2114' direct represents '0' with '-12601'
c Var 'aux2114' direct represents '1' with '12601'
c Var 'aux2114' order represents '1' with '1'
c Var 'aux2114' order represents '0' with '-12601'
c Encoding variable: aux2115 with domain: bool (representing constraint (variant_fields_00004_00004_00003=max_left_00004_00004_00003))
c Var 'aux2115' direct represents '0' with '-12602'
c Var 'aux2115' direct represents '1' with '12602'
c Var 'aux2115' order represents '1' with '1'
c Var 'aux2115' order represents '0' with '-12602'
c Encoding variable: aux2116 with domain: bool (representing constraint (max_left_00004_00004_00003=max_left_00004_00004_00004))
c Var 'aux2116' direct represents '0' with '-12603'
c Var 'aux2116' direct represents '1' with '12603'
c Var 'aux2116' order represents '1' with '1'
c Var 'aux2116' order represents '0' with '-12603'
c Encoding variable: aux2117 with domain: bool (representing constraint (variant_fields_00004_00004_00004=max_left_00004_00004_00004))
c Var 'aux2117' direct represents '0' with '-12604'
c Var 'aux2117' direct represents '1' with '12604'
c Var 'aux2117' order represents '1' with '1'
c Var 'aux2117' order represents '0' with '-12604'
c Encoding variable: aux2118 with domain: bool (representing constraint (max_left_00004_00004_00005=max_left_00004_00004_00006))
c Var 'aux2118' direct represents '0' with '-12605'
c Var 'aux2118' direct represents '1' with '12605'
c Var 'aux2118' order represents '1' with '1'
c Var 'aux2118' order represents '0' with '-12605'
c Encoding variable: aux2119 with domain: bool (representing constraint (variant_fields_00004_00004_00006=max_left_00004_00004_00006))
c Var 'aux2119' direct represents '0' with '-12606'
c Var 'aux2119' direct represents '1' with '12606'
c Var 'aux2119' order represents '1' with '1'
c Var 'aux2119' order represents '0' with '-12606'
c Encoding variable: aux2120 with domain: bool (representing constraint (max_left_00004_00004_00006=max_left_00004_00004_00007))
c Var 'aux2120' direct represents '0' with '-12607'
c Var 'aux2120' direct represents '1' with '12607'
c Var 'aux2120' order represents '1' with '1'
c Var 'aux2120' order represents '0' with '-12607'
c Encoding variable: aux2121 with domain: bool (representing constraint (variant_fields_00004_00004_00007=max_left_00004_00004_00007))
c Var 'aux2121' direct represents '0' with '-12608'
c Var 'aux2121' direct represents '1' with '12608'
c Var 'aux2121' order represents '1' with '1'
c Var 'aux2121' order represents '0' with '-12608'
c Encoding variable: aux2122 with domain: bool (representing constraint (max_left_00004_00004_00007=max_left_00004_00004_00008))
c Var 'aux2122' direct represents '0' with '-12609'
c Var 'aux2122' direct represents '1' with '12609'
c Var 'aux2122' order represents '1' with '1'
c Var 'aux2122' order represents '0' with '-12609'
c Encoding variable: aux2123 with domain: bool (representing constraint (variant_fields_00004_00004_00008=max_left_00004_00004_00008))
c Var 'aux2123' direct represents '0' with '-12610'
c Var 'aux2123' direct represents '1' with '12610'
c Var 'aux2123' order represents '1' with '1'
c Var 'aux2123' order represents '0' with '-12610'
c Encoding variable: aux2124 with domain: bool (representing constraint (max_left_00004_00004_00008=max_left_00004_00004_00009))
c Var 'aux2124' direct represents '0' with '-12611'
c Var 'aux2124' direct represents '1' with '12611'
c Var 'aux2124' order represents '1' with '1'
c Var 'aux2124' order represents '0' with '-12611'
c Encoding variable: aux2125 with domain: bool (representing constraint (variant_fields_00004_00004_00009=max_left_00004_00004_00009))
c Var 'aux2125' direct represents '0' with '-12612'
c Var 'aux2125' direct represents '1' with '12612'
c Var 'aux2125' order represents '1' with '1'
c Var 'aux2125' order represents '0' with '-12612'
c Encoding variable: aux2126 with domain: bool (representing constraint (max_left_00004_00005_00002=max_left_00004_00005_00003))
c Var 'aux2126' direct represents '0' with '-12613'
c Var 'aux2126' direct represents '1' with '12613'
c Var 'aux2126' order represents '1' with '1'
c Var 'aux2126' order represents '0' with '-12613'
c Encoding variable: aux2127 with domain: bool (representing constraint (variant_fields_00004_00005_00003=max_left_00004_00005_00003))
c Var 'aux2127' direct represents '0' with '-12614'
c Var 'aux2127' direct represents '1' with '12614'
c Var 'aux2127' order represents '1' with '1'
c Var 'aux2127' order represents '0' with '-12614'
c Encoding variable: aux2128 with domain: bool (representing constraint (max_left_00004_00005_00003=max_left_00004_00005_00004))
c Var 'aux2128' direct represents '0' with '-12615'
c Var 'aux2128' direct represents '1' with '12615'
c Var 'aux2128' order represents '1' with '1'
c Var 'aux2128' order represents '0' with '-12615'
c Encoding variable: aux2129 with domain: bool (representing constraint (variant_fields_00004_00005_00004=max_left_00004_00005_00004))
c Var 'aux2129' direct represents '0' with '-12616'
c Var 'aux2129' direct represents '1' with '12616'
c Var 'aux2129' order represents '1' with '1'
c Var 'aux2129' order represents '0' with '-12616'
c Encoding variable: aux2130 with domain: bool (representing constraint (max_left_00004_00005_00004=max_left_00004_00005_00005))
c Var 'aux2130' direct represents '0' with '-12617'
c Var 'aux2130' direct represents '1' with '12617'
c Var 'aux2130' order represents '1' with '1'
c Var 'aux2130' order represents '0' with '-12617'
c Encoding variable: aux2131 with domain: bool (representing constraint (variant_fields_00004_00005_00005=max_left_00004_00005_00005))
c Var 'aux2131' direct represents '0' with '-12618'
c Var 'aux2131' direct represents '1' with '12618'
c Var 'aux2131' order represents '1' with '1'
c Var 'aux2131' order represents '0' with '-12618'
c Encoding variable: aux2132 with domain: bool (representing constraint (max_left_00004_00005_00005=max_left_00004_00005_00006))
c Var 'aux2132' direct represents '0' with '-12619'
c Var 'aux2132' direct represents '1' with '12619'
c Var 'aux2132' order represents '1' with '1'
c Var 'aux2132' order represents '0' with '-12619'
c Encoding variable: aux2133 with domain: bool (representing constraint (variant_fields_00004_00005_00006=max_left_00004_00005_00006))
c Var 'aux2133' direct represents '0' with '-12620'
c Var 'aux2133' direct represents '1' with '12620'
c Var 'aux2133' order represents '1' with '1'
c Var 'aux2133' order represents '0' with '-12620'
c Encoding variable: aux2134 with domain: bool (representing constraint (max_left_00004_00005_00006=max_left_00004_00005_00007))
c Var 'aux2134' direct represents '0' with '-12621'
c Var 'aux2134' direct represents '1' with '12621'
c Var 'aux2134' order represents '1' with '1'
c Var 'aux2134' order represents '0' with '-12621'
c Encoding variable: aux2135 with domain: bool (representing constraint (variant_fields_00004_00005_00007=max_left_00004_00005_00007))
c Var 'aux2135' direct represents '0' with '-12622'
c Var 'aux2135' direct represents '1' with '12622'
c Var 'aux2135' order represents '1' with '1'
c Var 'aux2135' order represents '0' with '-12622'
c Encoding variable: aux2136 with domain: bool (representing constraint (max_left_00004_00005_00007=max_left_00004_00005_00008))
c Var 'aux2136' direct represents '0' with '-12623'
c Var 'aux2136' direct represents '1' with '12623'
c Var 'aux2136' order represents '1' with '1'
c Var 'aux2136' order represents '0' with '-12623'
c Encoding variable: aux2137 with domain: bool (representing constraint (variant_fields_00004_00005_00008=max_left_00004_00005_00008))
c Var 'aux2137' direct represents '0' with '-12624'
c Var 'aux2137' direct represents '1' with '12624'
c Var 'aux2137' order represents '1' with '1'
c Var 'aux2137' order represents '0' with '-12624'
c Encoding variable: aux2138 with domain: bool (representing constraint (max_left_00004_00005_00008=max_left_00004_00005_00009))
c Var 'aux2138' direct represents '0' with '-12625'
c Var 'aux2138' direct represents '1' with '12625'
c Var 'aux2138' order represents '1' with '1'
c Var 'aux2138' order represents '0' with '-12625'
c Encoding variable: aux2139 with domain: bool (representing constraint (variant_fields_00004_00005_00009=max_left_00004_00005_00009))
c Var 'aux2139' direct represents '0' with '-12626'
c Var 'aux2139' direct represents '1' with '12626'
c Var 'aux2139' order represents '1' with '1'
c Var 'aux2139' order represents '0' with '-12626'
c Encoding variable: aux2140 with domain: bool (representing constraint (max_left_00004_00006_00001=max_left_00004_00006_00002))
c Var 'aux2140' direct represents '0' with '-12627'
c Var 'aux2140' direct represents '1' with '12627'
c Var 'aux2140' order represents '1' with '1'
c Var 'aux2140' order represents '0' with '-12627'
c Encoding variable: aux2141 with domain: bool (representing constraint (variant_fields_00004_00006_00002=max_left_00004_00006_00002))
c Var 'aux2141' direct represents '0' with '-12628'
c Var 'aux2141' direct represents '1' with '12628'
c Var 'aux2141' order represents '1' with '1'
c Var 'aux2141' order represents '0' with '-12628'
c Encoding variable: aux2142 with domain: bool (representing constraint (max_left_00004_00006_00002=max_left_00004_00006_00003))
c Var 'aux2142' direct represents '0' with '-12629'
c Var 'aux2142' direct represents '1' with '12629'
c Var 'aux2142' order represents '1' with '1'
c Var 'aux2142' order represents '0' with '-12629'
c Encoding variable: aux2143 with domain: bool (representing constraint (variant_fields_00004_00006_00003=max_left_00004_00006_00003))
c Var 'aux2143' direct represents '0' with '-12630'
c Var 'aux2143' direct represents '1' with '12630'
c Var 'aux2143' order represents '1' with '1'
c Var 'aux2143' order represents '0' with '-12630'
c Encoding variable: aux2144 with domain: bool (representing constraint (max_left_00004_00006_00003=max_left_00004_00006_00004))
c Var 'aux2144' direct represents '0' with '-12631'
c Var 'aux2144' direct represents '1' with '12631'
c Var 'aux2144' order represents '1' with '1'
c Var 'aux2144' order represents '0' with '-12631'
c Encoding variable: aux2145 with domain: bool (representing constraint (variant_fields_00004_00006_00004=max_left_00004_00006_00004))
c Var 'aux2145' direct represents '0' with '-12632'
c Var 'aux2145' direct represents '1' with '12632'
c Var 'aux2145' order represents '1' with '1'
c Var 'aux2145' order represents '0' with '-12632'
c Encoding variable: aux2146 with domain: bool (representing constraint (max_left_00004_00006_00004=max_left_00004_00006_00005))
c Var 'aux2146' direct represents '0' with '-12633'
c Var 'aux2146' direct represents '1' with '12633'
c Var 'aux2146' order represents '1' with '1'
c Var 'aux2146' order represents '0' with '-12633'
c Encoding variable: aux2147 with domain: bool (representing constraint (variant_fields_00004_00006_00005=max_left_00004_00006_00005))
c Var 'aux2147' direct represents '0' with '-12634'
c Var 'aux2147' direct represents '1' with '12634'
c Var 'aux2147' order represents '1' with '1'
c Var 'aux2147' order represents '0' with '-12634'
c Encoding variable: aux2148 with domain: bool (representing constraint (max_left_00004_00006_00005=max_left_00004_00006_00006))
c Var 'aux2148' direct represents '0' with '-12635'
c Var 'aux2148' direct represents '1' with '12635'
c Var 'aux2148' order represents '1' with '1'
c Var 'aux2148' order represents '0' with '-12635'
c Encoding variable: aux2149 with domain: bool (representing constraint (variant_fields_00004_00006_00006=max_left_00004_00006_00006))
c Var 'aux2149' direct represents '0' with '-12636'
c Var 'aux2149' direct represents '1' with '12636'
c Var 'aux2149' order represents '1' with '1'
c Var 'aux2149' order represents '0' with '-12636'
c Encoding variable: aux2150 with domain: bool (representing constraint (max_left_00004_00006_00007=max_left_00004_00006_00008))
c Var 'aux2150' direct represents '0' with '-12637'
c Var 'aux2150' direct represents '1' with '12637'
c Var 'aux2150' order represents '1' with '1'
c Var 'aux2150' order represents '0' with '-12637'
c Encoding variable: aux2151 with domain: bool (representing constraint (variant_fields_00004_00006_00008=max_left_00004_00006_00008))
c Var 'aux2151' direct represents '0' with '-12638'
c Var 'aux2151' direct represents '1' with '12638'
c Var 'aux2151' order represents '1' with '1'
c Var 'aux2151' order represents '0' with '-12638'
c Encoding variable: aux2152 with domain: bool (representing constraint (max_left_00004_00006_00008=max_left_00004_00006_00009))
c Var 'aux2152' direct represents '0' with '-12639'
c Var 'aux2152' direct represents '1' with '12639'
c Var 'aux2152' order represents '1' with '1'
c Var 'aux2152' order represents '0' with '-12639'
c Encoding variable: aux2153 with domain: bool (representing constraint (variant_fields_00004_00006_00009=max_left_00004_00006_00009))
c Var 'aux2153' direct represents '0' with '-12640'
c Var 'aux2153' direct represents '1' with '12640'
c Var 'aux2153' order represents '1' with '1'
c Var 'aux2153' order represents '0' with '-12640'
c Encoding variable: aux2154 with domain: bool (representing constraint (max_left_00004_00007_00001=max_left_00004_00007_00002))
c Var 'aux2154' direct represents '0' with '-12641'
c Var 'aux2154' direct represents '1' with '12641'
c Var 'aux2154' order represents '1' with '1'
c Var 'aux2154' order represents '0' with '-12641'
c Encoding variable: aux2155 with domain: bool (representing constraint (variant_fields_00004_00007_00002=max_left_00004_00007_00002))
c Var 'aux2155' direct represents '0' with '-12642'
c Var 'aux2155' direct represents '1' with '12642'
c Var 'aux2155' order represents '1' with '1'
c Var 'aux2155' order represents '0' with '-12642'
c Encoding variable: aux2156 with domain: bool (representing constraint (max_left_00004_00007_00003=max_left_00004_00007_00004))
c Var 'aux2156' direct represents '0' with '-12643'
c Var 'aux2156' direct represents '1' with '12643'
c Var 'aux2156' order represents '1' with '1'
c Var 'aux2156' order represents '0' with '-12643'
c Encoding variable: aux2157 with domain: bool (representing constraint (variant_fields_00004_00007_00004=max_left_00004_00007_00004))
c Var 'aux2157' direct represents '0' with '-12644'
c Var 'aux2157' direct represents '1' with '12644'
c Var 'aux2157' order represents '1' with '1'
c Var 'aux2157' order represents '0' with '-12644'
c Encoding variable: aux2158 with domain: bool (representing constraint (max_left_00004_00007_00005=max_left_00004_00007_00006))
c Var 'aux2158' direct represents '0' with '-12645'
c Var 'aux2158' direct represents '1' with '12645'
c Var 'aux2158' order represents '1' with '1'
c Var 'aux2158' order represents '0' with '-12645'
c Encoding variable: aux2159 with domain: bool (representing constraint (variant_fields_00004_00007_00006=max_left_00004_00007_00006))
c Var 'aux2159' direct represents '0' with '-12646'
c Var 'aux2159' direct represents '1' with '12646'
c Var 'aux2159' order represents '1' with '1'
c Var 'aux2159' order represents '0' with '-12646'
c Encoding variable: aux2160 with domain: bool (representing constraint (max_left_00004_00007_00006=max_left_00004_00007_00007))
c Var 'aux2160' direct represents '0' with '-12647'
c Var 'aux2160' direct represents '1' with '12647'
c Var 'aux2160' order represents '1' with '1'
c Var 'aux2160' order represents '0' with '-12647'
c Encoding variable: aux2161 with domain: bool (representing constraint (variant_fields_00004_00007_00007=max_left_00004_00007_00007))
c Var 'aux2161' direct represents '0' with '-12648'
c Var 'aux2161' direct represents '1' with '12648'
c Var 'aux2161' order represents '1' with '1'
c Var 'aux2161' order represents '0' with '-12648'
c Encoding variable: aux2162 with domain: bool (representing constraint (max_left_00004_00007_00007=max_left_00004_00007_00008))
c Var 'aux2162' direct represents '0' with '-12649'
c Var 'aux2162' direct represents '1' with '12649'
c Var 'aux2162' order represents '1' with '1'
c Var 'aux2162' order represents '0' with '-12649'
c Encoding variable: aux2163 with domain: bool (representing constraint (variant_fields_00004_00007_00008=max_left_00004_00007_00008))
c Var 'aux2163' direct represents '0' with '-12650'
c Var 'aux2163' direct represents '1' with '12650'
c Var 'aux2163' order represents '1' with '1'
c Var 'aux2163' order represents '0' with '-12650'
c Encoding variable: aux2164 with domain: bool (representing constraint (max_left_00004_00008_00001=max_left_00004_00008_00002))
c Var 'aux2164' direct represents '0' with '-12651'
c Var 'aux2164' direct represents '1' with '12651'
c Var 'aux2164' order represents '1' with '1'
c Var 'aux2164' order represents '0' with '-12651'
c Encoding variable: aux2165 with domain: bool (representing constraint (variant_fields_00004_00008_00002=max_left_00004_00008_00002))
c Var 'aux2165' direct represents '0' with '-12652'
c Var 'aux2165' direct represents '1' with '12652'
c Var 'aux2165' order represents '1' with '1'
c Var 'aux2165' order represents '0' with '-12652'
c Encoding variable: aux2166 with domain: bool (representing constraint (max_left_00004_00008_00002=max_left_00004_00008_00003))
c Var 'aux2166' direct represents '0' with '-12653'
c Var 'aux2166' direct represents '1' with '12653'
c Var 'aux2166' order represents '1' with '1'
c Var 'aux2166' order represents '0' with '-12653'
c Encoding variable: aux2167 with domain: bool (representing constraint (variant_fields_00004_00008_00003=max_left_00004_00008_00003))
c Var 'aux2167' direct represents '0' with '-12654'
c Var 'aux2167' direct represents '1' with '12654'
c Var 'aux2167' order represents '1' with '1'
c Var 'aux2167' order represents '0' with '-12654'
c Encoding variable: aux2168 with domain: bool (representing constraint (max_left_00004_00008_00003=max_left_00004_00008_00004))
c Var 'aux2168' direct represents '0' with '-12655'
c Var 'aux2168' direct represents '1' with '12655'
c Var 'aux2168' order represents '1' with '1'
c Var 'aux2168' order represents '0' with '-12655'
c Encoding variable: aux2169 with domain: bool (representing constraint (variant_fields_00004_00008_00004=max_left_00004_00008_00004))
c Var 'aux2169' direct represents '0' with '-12656'
c Var 'aux2169' direct represents '1' with '12656'
c Var 'aux2169' order represents '1' with '1'
c Var 'aux2169' order represents '0' with '-12656'
c Encoding variable: aux2170 with domain: bool (representing constraint (max_left_00004_00008_00004=max_left_00004_00008_00005))
c Var 'aux2170' direct represents '0' with '-12657'
c Var 'aux2170' direct represents '1' with '12657'
c Var 'aux2170' order represents '1' with '1'
c Var 'aux2170' order represents '0' with '-12657'
c Encoding variable: aux2171 with domain: bool (representing constraint (variant_fields_00004_00008_00005=max_left_00004_00008_00005))
c Var 'aux2171' direct represents '0' with '-12658'
c Var 'aux2171' direct represents '1' with '12658'
c Var 'aux2171' order represents '1' with '1'
c Var 'aux2171' order represents '0' with '-12658'
c Encoding variable: aux2172 with domain: bool (representing constraint (max_left_00004_00008_00005=max_left_00004_00008_00006))
c Var 'aux2172' direct represents '0' with '-12659'
c Var 'aux2172' direct represents '1' with '12659'
c Var 'aux2172' order represents '1' with '1'
c Var 'aux2172' order represents '0' with '-12659'
c Encoding variable: aux2173 with domain: bool (representing constraint (variant_fields_00004_00008_00006=max_left_00004_00008_00006))
c Var 'aux2173' direct represents '0' with '-12660'
c Var 'aux2173' direct represents '1' with '12660'
c Var 'aux2173' order represents '1' with '1'
c Var 'aux2173' order represents '0' with '-12660'
c Encoding variable: aux2174 with domain: bool (representing constraint (max_left_00004_00008_00006=max_left_00004_00008_00007))
c Var 'aux2174' direct represents '0' with '-12661'
c Var 'aux2174' direct represents '1' with '12661'
c Var 'aux2174' order represents '1' with '1'
c Var 'aux2174' order represents '0' with '-12661'
c Encoding variable: aux2175 with domain: bool (representing constraint (variant_fields_00004_00008_00007=max_left_00004_00008_00007))
c Var 'aux2175' direct represents '0' with '-12662'
c Var 'aux2175' direct represents '1' with '12662'
c Var 'aux2175' order represents '1' with '1'
c Var 'aux2175' order represents '0' with '-12662'
c Encoding variable: aux2176 with domain: bool (representing constraint (max_left_00004_00008_00007=max_left_00004_00008_00008))
c Var 'aux2176' direct represents '0' with '-12663'
c Var 'aux2176' direct represents '1' with '12663'
c Var 'aux2176' order represents '1' with '1'
c Var 'aux2176' order represents '0' with '-12663'
c Encoding variable: aux2177 with domain: bool (representing constraint (variant_fields_00004_00008_00008=max_left_00004_00008_00008))
c Var 'aux2177' direct represents '0' with '-12664'
c Var 'aux2177' direct represents '1' with '12664'
c Var 'aux2177' order represents '1' with '1'
c Var 'aux2177' order represents '0' with '-12664'
c Encoding variable: aux2178 with domain: bool (representing constraint (max_left_00004_00008_00008=max_left_00004_00008_00009))
c Var 'aux2178' direct represents '0' with '-12665'
c Var 'aux2178' direct represents '1' with '12665'
c Var 'aux2178' order represents '1' with '1'
c Var 'aux2178' order represents '0' with '-12665'
c Encoding variable: aux2179 with domain: bool (representing constraint (variant_fields_00004_00008_00009=max_left_00004_00008_00009))
c Var 'aux2179' direct represents '0' with '-12666'
c Var 'aux2179' direct represents '1' with '12666'
c Var 'aux2179' order represents '1' with '1'
c Var 'aux2179' order represents '0' with '-12666'
c Encoding variable: aux2180 with domain: bool (representing constraint (max_left_00004_00009_00001=max_left_00004_00009_00002))
c Var 'aux2180' direct represents '0' with '-12667'
c Var 'aux2180' direct represents '1' with '12667'
c Var 'aux2180' order represents '1' with '1'
c Var 'aux2180' order represents '0' with '-12667'
c Encoding variable: aux2181 with domain: bool (representing constraint (variant_fields_00004_00009_00002=max_left_00004_00009_00002))
c Var 'aux2181' direct represents '0' with '-12668'
c Var 'aux2181' direct represents '1' with '12668'
c Var 'aux2181' order represents '1' with '1'
c Var 'aux2181' order represents '0' with '-12668'
c Encoding variable: aux2182 with domain: bool (representing constraint (max_left_00004_00009_00002=max_left_00004_00009_00003))
c Var 'aux2182' direct represents '0' with '-12669'
c Var 'aux2182' direct represents '1' with '12669'
c Var 'aux2182' order represents '1' with '1'
c Var 'aux2182' order represents '0' with '-12669'
c Encoding variable: aux2183 with domain: bool (representing constraint (variant_fields_00004_00009_00003=max_left_00004_00009_00003))
c Var 'aux2183' direct represents '0' with '-12670'
c Var 'aux2183' direct represents '1' with '12670'
c Var 'aux2183' order represents '1' with '1'
c Var 'aux2183' order represents '0' with '-12670'
c Encoding variable: aux2184 with domain: bool (representing constraint (max_left_00004_00009_00003=max_left_00004_00009_00004))
c Var 'aux2184' direct represents '0' with '-12671'
c Var 'aux2184' direct represents '1' with '12671'
c Var 'aux2184' order represents '1' with '1'
c Var 'aux2184' order represents '0' with '-12671'
c Encoding variable: aux2185 with domain: bool (representing constraint (variant_fields_00004_00009_00004=max_left_00004_00009_00004))
c Var 'aux2185' direct represents '0' with '-12672'
c Var 'aux2185' direct represents '1' with '12672'
c Var 'aux2185' order represents '1' with '1'
c Var 'aux2185' order represents '0' with '-12672'
c Encoding variable: aux2186 with domain: bool (representing constraint (max_left_00004_00009_00005=max_left_00004_00009_00006))
c Var 'aux2186' direct represents '0' with '-12673'
c Var 'aux2186' direct represents '1' with '12673'
c Var 'aux2186' order represents '1' with '1'
c Var 'aux2186' order represents '0' with '-12673'
c Encoding variable: aux2187 with domain: bool (representing constraint (variant_fields_00004_00009_00006=max_left_00004_00009_00006))
c Var 'aux2187' direct represents '0' with '-12674'
c Var 'aux2187' direct represents '1' with '12674'
c Var 'aux2187' order represents '1' with '1'
c Var 'aux2187' order represents '0' with '-12674'
c Encoding variable: aux2188 with domain: bool (representing constraint (max_left_00004_00009_00006=max_left_00004_00009_00007))
c Var 'aux2188' direct represents '0' with '-12675'
c Var 'aux2188' direct represents '1' with '12675'
c Var 'aux2188' order represents '1' with '1'
c Var 'aux2188' order represents '0' with '-12675'
c Encoding variable: aux2189 with domain: bool (representing constraint (variant_fields_00004_00009_00007=max_left_00004_00009_00007))
c Var 'aux2189' direct represents '0' with '-12676'
c Var 'aux2189' direct represents '1' with '12676'
c Var 'aux2189' order represents '1' with '1'
c Var 'aux2189' order represents '0' with '-12676'
c Encoding variable: aux2190 with domain: bool (representing constraint (max_left_00004_00009_00007=max_left_00004_00009_00008))
c Var 'aux2190' direct represents '0' with '-12677'
c Var 'aux2190' direct represents '1' with '12677'
c Var 'aux2190' order represents '1' with '1'
c Var 'aux2190' order represents '0' with '-12677'
c Encoding variable: aux2191 with domain: bool (representing constraint (variant_fields_00004_00009_00008=max_left_00004_00009_00008))
c Var 'aux2191' direct represents '0' with '-12678'
c Var 'aux2191' direct represents '1' with '12678'
c Var 'aux2191' order represents '1' with '1'
c Var 'aux2191' order represents '0' with '-12678'
c Encoding variable: aux2192 with domain: bool (representing constraint (max_left_00004_00009_00008=max_left_00004_00009_00009))
c Var 'aux2192' direct represents '0' with '-12679'
c Var 'aux2192' direct represents '1' with '12679'
c Var 'aux2192' order represents '1' with '1'
c Var 'aux2192' order represents '0' with '-12679'
c Encoding variable: aux2193 with domain: bool (representing constraint (variant_fields_00004_00009_00009=max_left_00004_00009_00009))
c Var 'aux2193' direct represents '0' with '-12680'
c Var 'aux2193' direct represents '1' with '12680'
c Var 'aux2193' order represents '1' with '1'
c Var 'aux2193' order represents '0' with '-12680'
c (((aux450 + aux451 + aux453)<=1)=tv=SATLiteral(11887))
-11887 8523 0
-11887 8516 8522 0
-11887 8517 0
-11887 8513 8522 0
-11887 8513 8516 0
-11887 8513 8517 0
-11887 8514 0
-11887 8514 8516 0
-11887 8514 8517 0
11887 -8514 -8516 -8522 0
11887 -8513 -8517 -8522 0
11887 -8513 -8516 -8523 0
c ((1<=(aux450 + aux451 + aux453))=tv=SATLiteral(11888))
-11888 -8513 -8516 -8522 0
11888 8522 0
11888 8516 0
11888 8517 0
11888 8513 0
11888 8513 8516 0
11888 8513 8517 0
11888 8514 0
11888 8514 8516 0
11888 8514 8517 0
c (((aux455 + aux456 + aux458)<=1)=tv=SATLiteral(11889))
-11889 8542 0
-11889 8535 8541 0
-11889 8536 0
-11889 8532 8541 0
-11889 8532 8535 0
-11889 8532 8536 0
-11889 8533 0
-11889 8533 8535 0
-11889 8533 8536 0
11889 -8533 -8535 -8541 0
11889 -8532 -8536 -8541 0
11889 -8532 -8535 -8542 0
c ((1<=(aux455 + aux456 + aux458))=tv=SATLiteral(11890))
-11890 -8532 -8535 -8541 0
11890 8541 0
11890 8535 0
11890 8536 0
11890 8532 0
11890 8532 8535 0
11890 8532 8536 0
11890 8533 0
11890 8533 8535 0
11890 8533 8536 0
c (((aux460 + aux461 + aux463)<=1)=tv=SATLiteral(11891))
-11891 8561 0
-11891 8554 8560 0
-11891 8555 0
-11891 8551 8560 0
-11891 8551 8554 0
-11891 8551 8555 0
-11891 8552 0
-11891 8552 8554 0
-11891 8552 8555 0
11891 -8552 -8554 -8560 0
11891 -8551 -8555 -8560 0
11891 -8551 -8554 -8561 0
c ((1<=(aux460 + aux461 + aux463))=tv=SATLiteral(11892))
-11892 -8551 -8554 -8560 0
11892 8560 0
11892 8554 0
11892 8555 0
11892 8551 0
11892 8551 8554 0
11892 8551 8555 0
11892 8552 0
11892 8552 8554 0
11892 8552 8555 0
c (((aux465 + aux466 + aux468)<=1)=tv=SATLiteral(11893))
-11893 8580 0
-11893 8573 8579 0
-11893 8574 0
-11893 8570 8579 0
-11893 8570 8573 0
-11893 8570 8574 0
-11893 8571 0
-11893 8571 8573 0
-11893 8571 8574 0
11893 -8571 -8573 -8579 0
11893 -8570 -8574 -8579 0
11893 -8570 -8573 -8580 0
c ((1<=(aux465 + aux466 + aux468))=tv=SATLiteral(11894))
-11894 -8570 -8573 -8579 0
11894 8579 0
11894 8573 0
11894 8574 0
11894 8570 0
11894 8570 8573 0
11894 8570 8574 0
11894 8571 0
11894 8571 8573 0
11894 8571 8574 0
c (((aux476 + aux477 + aux479)<=1)=tv=SATLiteral(11895))
-11895 8619 0
-11895 8612 8618 0
-11895 8613 0
-11895 8609 8618 0
-11895 8609 8612 0
-11895 8609 8613 0
-11895 8610 0
-11895 8610 8612 0
-11895 8610 8613 0
11895 -8610 -8612 -8618 0
11895 -8609 -8613 -8618 0
11895 -8609 -8612 -8619 0
c ((1<=(aux476 + aux477 + aux479))=tv=SATLiteral(11896))
-11896 -8609 -8612 -8618 0
11896 8618 0
11896 8612 0
11896 8613 0
11896 8609 0
11896 8609 8612 0
11896 8609 8613 0
11896 8610 0
11896 8610 8612 0
11896 8610 8613 0
c (((aux481 + aux482 + aux484)<=1)=tv=SATLiteral(11897))
-11897 8638 0
-11897 8631 8637 0
-11897 8632 0
-11897 8628 8637 0
-11897 8628 8631 0
-11897 8628 8632 0
-11897 8629 0
-11897 8629 8631 0
-11897 8629 8632 0
11897 -8629 -8631 -8637 0
11897 -8628 -8632 -8637 0
11897 -8628 -8631 -8638 0
c ((1<=(aux481 + aux482 + aux484))=tv=SATLiteral(11898))
-11898 -8628 -8631 -8637 0
11898 8637 0
11898 8631 0
11898 8632 0
11898 8628 0
11898 8628 8631 0
11898 8628 8632 0
11898 8629 0
11898 8629 8631 0
11898 8629 8632 0
c (((aux486 + aux487 + aux489)<=1)=tv=SATLiteral(11899))
-11899 8657 0
-11899 8650 8656 0
-11899 8651 0
-11899 8647 8656 0
-11899 8647 8650 0
-11899 8647 8651 0
-11899 8648 0
-11899 8648 8650 0
-11899 8648 8651 0
11899 -8648 -8650 -8656 0
11899 -8647 -8651 -8656 0
11899 -8647 -8650 -8657 0
c ((1<=(aux486 + aux487 + aux489))=tv=SATLiteral(11900))
-11900 -8647 -8650 -8656 0
11900 8656 0
11900 8650 0
11900 8651 0
11900 8647 0
11900 8647 8650 0
11900 8647 8651 0
11900 8648 0
11900 8648 8650 0
11900 8648 8651 0
c (((aux491 + aux492 + aux494)<=1)=tv=SATLiteral(11901))
-11901 8676 0
-11901 8669 8675 0
-11901 8670 0
-11901 8666 8675 0
-11901 8666 8669 0
-11901 8666 8670 0
-11901 8667 0
-11901 8667 8669 0
-11901 8667 8670 0
11901 -8667 -8669 -8675 0
11901 -8666 -8670 -8675 0
11901 -8666 -8669 -8676 0
c ((1<=(aux491 + aux492 + aux494))=tv=SATLiteral(11902))
-11902 -8666 -8669 -8675 0
11902 8675 0
11902 8669 0
11902 8670 0
11902 8666 0
11902 8666 8669 0
11902 8666 8670 0
11902 8667 0
11902 8667 8669 0
11902 8667 8670 0
c (((aux496 + aux497 + aux499)<=1)=tv=SATLiteral(11903))
-11903 8695 0
-11903 8688 8694 0
-11903 8689 0
-11903 8685 8694 0
-11903 8685 8688 0
-11903 8685 8689 0
-11903 8686 0
-11903 8686 8688 0
-11903 8686 8689 0
11903 -8686 -8688 -8694 0
11903 -8685 -8689 -8694 0
11903 -8685 -8688 -8695 0
c ((1<=(aux496 + aux497 + aux499))=tv=SATLiteral(11904))
-11904 -8685 -8688 -8694 0
11904 8694 0
11904 8688 0
11904 8689 0
11904 8685 0
11904 8685 8688 0
11904 8685 8689 0
11904 8686 0
11904 8686 8688 0
11904 8686 8689 0
c (((aux501 + aux502 + aux504)<=1)=tv=SATLiteral(11905))
-11905 8714 0
-11905 8707 8713 0
-11905 8708 0
-11905 8704 8713 0
-11905 8704 8707 0
-11905 8704 8708 0
-11905 8705 0
-11905 8705 8707 0
-11905 8705 8708 0
11905 -8705 -8707 -8713 0
11905 -8704 -8708 -8713 0
11905 -8704 -8707 -8714 0
c ((1<=(aux501 + aux502 + aux504))=tv=SATLiteral(11906))
-11906 -8704 -8707 -8713 0
11906 8713 0
11906 8707 0
11906 8708 0
11906 8704 0
11906 8704 8707 0
11906 8704 8708 0
11906 8705 0
11906 8705 8707 0
11906 8705 8708 0
c (((aux506 + aux507 + aux509)<=1)=tv=SATLiteral(11907))
-11907 8733 0
-11907 8726 8732 0
-11907 8727 0
-11907 8723 8732 0
-11907 8723 8726 0
-11907 8723 8727 0
-11907 8724 0
-11907 8724 8726 0
-11907 8724 8727 0
11907 -8724 -8726 -8732 0
11907 -8723 -8727 -8732 0
11907 -8723 -8726 -8733 0
c ((1<=(aux506 + aux507 + aux509))=tv=SATLiteral(11908))
-11908 -8723 -8726 -8732 0
11908 8732 0
11908 8726 0
11908 8727 0
11908 8723 0
11908 8723 8726 0
11908 8723 8727 0
11908 8724 0
11908 8724 8726 0
11908 8724 8727 0
c (((aux511 + aux512 + aux514)<=1)=tv=SATLiteral(11909))
-11909 8752 0
-11909 8745 8751 0
-11909 8746 0
-11909 8742 8751 0
-11909 8742 8745 0
-11909 8742 8746 0
-11909 8743 0
-11909 8743 8745 0
-11909 8743 8746 0
11909 -8743 -8745 -8751 0
11909 -8742 -8746 -8751 0
11909 -8742 -8745 -8752 0
c ((1<=(aux511 + aux512 + aux514))=tv=SATLiteral(11910))
-11910 -8742 -8745 -8751 0
11910 8751 0
11910 8745 0
11910 8746 0
11910 8742 0
11910 8742 8745 0
11910 8742 8746 0
11910 8743 0
11910 8743 8745 0
11910 8743 8746 0
c (((aux516 + aux517 + aux519)<=1)=tv=SATLiteral(11911))
-11911 8771 0
-11911 8764 8770 0
-11911 8765 0
-11911 8761 8770 0
-11911 8761 8764 0
-11911 8761 8765 0
-11911 8762 0
-11911 8762 8764 0
-11911 8762 8765 0
11911 -8762 -8764 -8770 0
11911 -8761 -8765 -8770 0
11911 -8761 -8764 -8771 0
c ((1<=(aux516 + aux517 + aux519))=tv=SATLiteral(11912))
-11912 -8761 -8764 -8770 0
11912 8770 0
11912 8764 0
11912 8765 0
11912 8761 0
11912 8761 8764 0
11912 8761 8765 0
11912 8762 0
11912 8762 8764 0
11912 8762 8765 0
c (((aux521 + aux522 + aux524)<=1)=tv=SATLiteral(11913))
-11913 8790 0
-11913 8783 8789 0
-11913 8784 0
-11913 8780 8789 0
-11913 8780 8783 0
-11913 8780 8784 0
-11913 8781 0
-11913 8781 8783 0
-11913 8781 8784 0
11913 -8781 -8783 -8789 0
11913 -8780 -8784 -8789 0
11913 -8780 -8783 -8790 0
c ((1<=(aux521 + aux522 + aux524))=tv=SATLiteral(11914))
-11914 -8780 -8783 -8789 0
11914 8789 0
11914 8783 0
11914 8784 0
11914 8780 0
11914 8780 8783 0
11914 8780 8784 0
11914 8781 0
11914 8781 8783 0
11914 8781 8784 0
c (((aux532 + aux533 + aux535)<=1)=tv=SATLiteral(11915))
-11915 8829 0
-11915 8822 8828 0
-11915 8823 0
-11915 8819 8828 0
-11915 8819 8822 0
-11915 8819 8823 0
-11915 8820 0
-11915 8820 8822 0
-11915 8820 8823 0
11915 -8820 -8822 -8828 0
11915 -8819 -8823 -8828 0
11915 -8819 -8822 -8829 0
c ((1<=(aux532 + aux533 + aux535))=tv=SATLiteral(11916))
-11916 -8819 -8822 -8828 0
11916 8828 0
11916 8822 0
11916 8823 0
11916 8819 0
11916 8819 8822 0
11916 8819 8823 0
11916 8820 0
11916 8820 8822 0
11916 8820 8823 0
c (((aux537 + aux538 + aux540)<=1)=tv=SATLiteral(11917))
-11917 8848 0
-11917 8841 8847 0
-11917 8842 0
-11917 8838 8847 0
-11917 8838 8841 0
-11917 8838 8842 0
-11917 8839 0
-11917 8839 8841 0
-11917 8839 8842 0
11917 -8839 -8841 -8847 0
11917 -8838 -8842 -8847 0
11917 -8838 -8841 -8848 0
c ((1<=(aux537 + aux538 + aux540))=tv=SATLiteral(11918))
-11918 -8838 -8841 -8847 0
11918 8847 0
11918 8841 0
11918 8842 0
11918 8838 0
11918 8838 8841 0
11918 8838 8842 0
11918 8839 0
11918 8839 8841 0
11918 8839 8842 0
c (((aux542 + aux543 + aux545)<=1)=tv=SATLiteral(11919))
-11919 8867 0
-11919 8860 8866 0
-11919 8861 0
-11919 8857 8866 0
-11919 8857 8860 0
-11919 8857 8861 0
-11919 8858 0
-11919 8858 8860 0
-11919 8858 8861 0
11919 -8858 -8860 -8866 0
11919 -8857 -8861 -8866 0
11919 -8857 -8860 -8867 0
c ((1<=(aux542 + aux543 + aux545))=tv=SATLiteral(11920))
-11920 -8857 -8860 -8866 0
11920 8866 0
11920 8860 0
11920 8861 0
11920 8857 0
11920 8857 8860 0
11920 8857 8861 0
11920 8858 0
11920 8858 8860 0
11920 8858 8861 0
c (((aux547 + aux548 + aux550)<=1)=tv=SATLiteral(11921))
-11921 8886 0
-11921 8879 8885 0
-11921 8880 0
-11921 8876 8885 0
-11921 8876 8879 0
-11921 8876 8880 0
-11921 8877 0
-11921 8877 8879 0
-11921 8877 8880 0
11921 -8877 -8879 -8885 0
11921 -8876 -8880 -8885 0
11921 -8876 -8879 -8886 0
c ((1<=(aux547 + aux548 + aux550))=tv=SATLiteral(11922))
-11922 -8876 -8879 -8885 0
11922 8885 0
11922 8879 0
11922 8880 0
11922 8876 0
11922 8876 8879 0
11922 8876 8880 0
11922 8877 0
11922 8877 8879 0
11922 8877 8880 0
c (((aux552 + aux553 + aux555)<=1)=tv=SATLiteral(11923))
-11923 8905 0
-11923 8898 8904 0
-11923 8899 0
-11923 8895 8904 0
-11923 8895 8898 0
-11923 8895 8899 0
-11923 8896 0
-11923 8896 8898 0
-11923 8896 8899 0
11923 -8896 -8898 -8904 0
11923 -8895 -8899 -8904 0
11923 -8895 -8898 -8905 0
c ((1<=(aux552 + aux553 + aux555))=tv=SATLiteral(11924))
-11924 -8895 -8898 -8904 0
11924 8904 0
11924 8898 0
11924 8899 0
11924 8895 0
11924 8895 8898 0
11924 8895 8899 0
11924 8896 0
11924 8896 8898 0
11924 8896 8899 0
c (((aux557 + aux558 + aux560)<=1)=tv=SATLiteral(11925))
-11925 8924 0
-11925 8917 8923 0
-11925 8918 0
-11925 8914 8923 0
-11925 8914 8917 0
-11925 8914 8918 0
-11925 8915 0
-11925 8915 8917 0
-11925 8915 8918 0
11925 -8915 -8917 -8923 0
11925 -8914 -8918 -8923 0
11925 -8914 -8917 -8924 0
c ((1<=(aux557 + aux558 + aux560))=tv=SATLiteral(11926))
-11926 -8914 -8917 -8923 0
11926 8923 0
11926 8917 0
11926 8918 0
11926 8914 0
11926 8914 8917 0
11926 8914 8918 0
11926 8915 0
11926 8915 8917 0
11926 8915 8918 0
c (((aux562 + aux563 + aux565)<=1)=tv=SATLiteral(11927))
-11927 8943 0
-11927 8936 8942 0
-11927 8937 0
-11927 8933 8942 0
-11927 8933 8936 0
-11927 8933 8937 0
-11927 8934 0
-11927 8934 8936 0
-11927 8934 8937 0
11927 -8934 -8936 -8942 0
11927 -8933 -8937 -8942 0
11927 -8933 -8936 -8943 0
c ((1<=(aux562 + aux563 + aux565))=tv=SATLiteral(11928))
-11928 -8933 -8936 -8942 0
11928 8942 0
11928 8936 0
11928 8937 0
11928 8933 0
11928 8933 8936 0
11928 8933 8937 0
11928 8934 0
11928 8934 8936 0
11928 8934 8937 0
c (((aux573 + aux574 + aux576)<=1)=tv=SATLiteral(11929))
-11929 8982 0
-11929 8975 8981 0
-11929 8976 0
-11929 8972 8981 0
-11929 8972 8975 0
-11929 8972 8976 0
-11929 8973 0
-11929 8973 8975 0
-11929 8973 8976 0
11929 -8973 -8975 -8981 0
11929 -8972 -8976 -8981 0
11929 -8972 -8975 -8982 0
c ((1<=(aux573 + aux574 + aux576))=tv=SATLiteral(11930))
-11930 -8972 -8975 -8981 0
11930 8981 0
11930 8975 0
11930 8976 0
11930 8972 0
11930 8972 8975 0
11930 8972 8976 0
11930 8973 0
11930 8973 8975 0
11930 8973 8976 0
c (((aux578 + aux579 + aux581)<=1)=tv=SATLiteral(11931))
-11931 9001 0
-11931 8994 9000 0
-11931 8995 0
-11931 8991 9000 0
-11931 8991 8994 0
-11931 8991 8995 0
-11931 8992 0
-11931 8992 8994 0
-11931 8992 8995 0
11931 -8992 -8994 -9000 0
11931 -8991 -8995 -9000 0
11931 -8991 -8994 -9001 0
c ((1<=(aux578 + aux579 + aux581))=tv=SATLiteral(11932))
-11932 -8991 -8994 -9000 0
11932 9000 0
11932 8994 0
11932 8995 0
11932 8991 0
11932 8991 8994 0
11932 8991 8995 0
11932 8992 0
11932 8992 8994 0
11932 8992 8995 0
c (((aux583 + aux584 + aux586)<=1)=tv=SATLiteral(11933))
-11933 9020 0
-11933 9013 9019 0
-11933 9014 0
-11933 9010 9019 0
-11933 9010 9013 0
-11933 9010 9014 0
-11933 9011 0
-11933 9011 9013 0
-11933 9011 9014 0
11933 -9011 -9013 -9019 0
11933 -9010 -9014 -9019 0
11933 -9010 -9013 -9020 0
c ((1<=(aux583 + aux584 + aux586))=tv=SATLiteral(11934))
-11934 -9010 -9013 -9019 0
11934 9019 0
11934 9013 0
11934 9014 0
11934 9010 0
11934 9010 9013 0
11934 9010 9014 0
11934 9011 0
11934 9011 9013 0
11934 9011 9014 0
c (((aux592 + aux593 + aux595)<=1)=tv=SATLiteral(11935))
-11935 9051 0
-11935 9044 9050 0
-11935 9045 0
-11935 9041 9050 0
-11935 9041 9044 0
-11935 9041 9045 0
-11935 9042 0
-11935 9042 9044 0
-11935 9042 9045 0
11935 -9042 -9044 -9050 0
11935 -9041 -9045 -9050 0
11935 -9041 -9044 -9051 0
c ((1<=(aux592 + aux593 + aux595))=tv=SATLiteral(11936))
-11936 -9041 -9044 -9050 0
11936 9050 0
11936 9044 0
11936 9045 0
11936 9041 0
11936 9041 9044 0
11936 9041 9045 0
11936 9042 0
11936 9042 9044 0
11936 9042 9045 0
c (((aux601 + aux602 + aux604)<=1)=tv=SATLiteral(11937))
-11937 9080 0
-11937 9073 9079 0
-11937 9074 0
-11937 9070 9079 0
-11937 9070 9073 0
-11937 9070 9074 0
-11937 9071 0
-11937 9071 9073 0
-11937 9071 9074 0
11937 -9071 -9073 -9079 0
11937 -9070 -9074 -9079 0
11937 -9070 -9073 -9080 0
c ((1<=(aux601 + aux602 + aux604))=tv=SATLiteral(11938))
-11938 -9070 -9073 -9079 0
11938 9079 0
11938 9073 0
11938 9074 0
11938 9070 0
11938 9070 9073 0
11938 9070 9074 0
11938 9071 0
11938 9071 9073 0
11938 9071 9074 0
c (((aux605 + aux606 + aux608)<=1)=tv=SATLiteral(11939))
-11939 9094 0
-11939 9087 9093 0
-11939 9088 0
-11939 9084 9093 0
-11939 9084 9087 0
-11939 9084 9088 0
-11939 9085 0
-11939 9085 9087 0
-11939 9085 9088 0
11939 -9085 -9087 -9093 0
11939 -9084 -9088 -9093 0
11939 -9084 -9087 -9094 0
c ((1<=(aux605 + aux606 + aux608))=tv=SATLiteral(11940))
-11940 -9084 -9087 -9093 0
11940 9093 0
11940 9087 0
11940 9088 0
11940 9084 0
11940 9084 9087 0
11940 9084 9088 0
11940 9085 0
11940 9085 9087 0
11940 9085 9088 0
c (((aux609 + aux610 + aux612)<=1)=tv=SATLiteral(11941))
-11941 9108 0
-11941 9101 9107 0
-11941 9102 0
-11941 9098 9107 0
-11941 9098 9101 0
-11941 9098 9102 0
-11941 9099 0
-11941 9099 9101 0
-11941 9099 9102 0
11941 -9099 -9101 -9107 0
11941 -9098 -9102 -9107 0
11941 -9098 -9101 -9108 0
c ((1<=(aux609 + aux610 + aux612))=tv=SATLiteral(11942))
-11942 -9098 -9101 -9107 0
11942 9107 0
11942 9101 0
11942 9102 0
11942 9098 0
11942 9098 9101 0
11942 9098 9102 0
11942 9099 0
11942 9099 9101 0
11942 9099 9102 0
c (((aux613 + aux614 + aux616)<=1)=tv=SATLiteral(11943))
-11943 9122 0
-11943 9115 9121 0
-11943 9116 0
-11943 9112 9121 0
-11943 9112 9115 0
-11943 9112 9116 0
-11943 9113 0
-11943 9113 9115 0
-11943 9113 9116 0
11943 -9113 -9115 -9121 0
11943 -9112 -9116 -9121 0
11943 -9112 -9115 -9122 0
c ((1<=(aux613 + aux614 + aux616))=tv=SATLiteral(11944))
-11944 -9112 -9115 -9121 0
11944 9121 0
11944 9115 0
11944 9116 0
11944 9112 0
11944 9112 9115 0
11944 9112 9116 0
11944 9113 0
11944 9113 9115 0
11944 9113 9116 0
c (((aux617 + aux618 + aux620)<=1)=tv=SATLiteral(11945))
-11945 9136 0
-11945 9129 9135 0
-11945 9130 0
-11945 9126 9135 0
-11945 9126 9129 0
-11945 9126 9130 0
-11945 9127 0
-11945 9127 9129 0
-11945 9127 9130 0
11945 -9127 -9129 -9135 0
11945 -9126 -9130 -9135 0
11945 -9126 -9129 -9136 0
c ((1<=(aux617 + aux618 + aux620))=tv=SATLiteral(11946))
-11946 -9126 -9129 -9135 0
11946 9135 0
11946 9129 0
11946 9130 0
11946 9126 0
11946 9126 9129 0
11946 9126 9130 0
11946 9127 0
11946 9127 9129 0
11946 9127 9130 0
c (((aux621 + aux622 + aux624)<=1)=tv=SATLiteral(11947))
-11947 9150 0
-11947 9143 9149 0
-11947 9144 0
-11947 9140 9149 0
-11947 9140 9143 0
-11947 9140 9144 0
-11947 9141 0
-11947 9141 9143 0
-11947 9141 9144 0
11947 -9141 -9143 -9149 0
11947 -9140 -9144 -9149 0
11947 -9140 -9143 -9150 0
c ((1<=(aux621 + aux622 + aux624))=tv=SATLiteral(11948))
-11948 -9140 -9143 -9149 0
11948 9149 0
11948 9143 0
11948 9144 0
11948 9140 0
11948 9140 9143 0
11948 9140 9144 0
11948 9141 0
11948 9141 9143 0
11948 9141 9144 0
c (((aux633 + aux634 + aux635)<=1)=tv=SATLiteral(11949))
-11949 9181 0
-11949 9177 9180 0
-11949 9178 0
-11949 9174 9180 0
-11949 9174 9177 0
-11949 9174 9178 0
-11949 9175 0
-11949 9175 9177 0
-11949 9175 9178 0
11949 -9175 -9177 -9180 0
11949 -9174 -9178 -9180 0
11949 -9174 -9177 -9181 0
c ((1<=(aux633 + aux634 + aux635))=tv=SATLiteral(11950))
-11950 -9174 -9177 -9180 0
11950 9180 0
11950 9177 0
11950 9178 0
11950 9174 0
11950 9174 9177 0
11950 9174 9178 0
11950 9175 0
11950 9175 9177 0
11950 9175 9178 0
c (((aux636 + aux637 + aux638)<=1)=tv=SATLiteral(11951))
-11951 9190 0
-11951 9186 9189 0
-11951 9187 0
-11951 9183 9189 0
-11951 9183 9186 0
-11951 9183 9187 0
-11951 9184 0
-11951 9184 9186 0
-11951 9184 9187 0
11951 -9184 -9186 -9189 0
11951 -9183 -9187 -9189 0
11951 -9183 -9186 -9190 0
c ((1<=(aux636 + aux637 + aux638))=tv=SATLiteral(11952))
-11952 -9183 -9186 -9189 0
11952 9189 0
11952 9186 0
11952 9187 0
11952 9183 0
11952 9183 9186 0
11952 9183 9187 0
11952 9184 0
11952 9184 9186 0
11952 9184 9187 0
c (((aux639 + aux640 + aux641)<=1)=tv=SATLiteral(11953))
-11953 9199 0
-11953 9195 9198 0
-11953 9196 0
-11953 9192 9198 0
-11953 9192 9195 0
-11953 9192 9196 0
-11953 9193 0
-11953 9193 9195 0
-11953 9193 9196 0
11953 -9193 -9195 -9198 0
11953 -9192 -9196 -9198 0
11953 -9192 -9195 -9199 0
c ((1<=(aux639 + aux640 + aux641))=tv=SATLiteral(11954))
-11954 -9192 -9195 -9198 0
11954 9198 0
11954 9195 0
11954 9196 0
11954 9192 0
11954 9192 9195 0
11954 9192 9196 0
11954 9193 0
11954 9193 9195 0
11954 9193 9196 0
c (((aux642 + aux643 + aux644)<=1)=tv=SATLiteral(11955))
-11955 9208 0
-11955 9204 9207 0
-11955 9205 0
-11955 9201 9207 0
-11955 9201 9204 0
-11955 9201 9205 0
-11955 9202 0
-11955 9202 9204 0
-11955 9202 9205 0
11955 -9202 -9204 -9207 0
11955 -9201 -9205 -9207 0
11955 -9201 -9204 -9208 0
c ((1<=(aux642 + aux643 + aux644))=tv=SATLiteral(11956))
-11956 -9201 -9204 -9207 0
11956 9207 0
11956 9204 0
11956 9205 0
11956 9201 0
11956 9201 9204 0
11956 9201 9205 0
11956 9202 0
11956 9202 9204 0
11956 9202 9205 0
c (((aux649 + aux650 + aux651)<=1)=tv=SATLiteral(11957))
-11957 9227 0
-11957 9223 9226 0
-11957 9224 0
-11957 9220 9226 0
-11957 9220 9223 0
-11957 9220 9224 0
-11957 9221 0
-11957 9221 9223 0
-11957 9221 9224 0
11957 -9221 -9223 -9226 0
11957 -9220 -9224 -9226 0
11957 -9220 -9223 -9227 0
c ((1<=(aux649 + aux650 + aux651))=tv=SATLiteral(11958))
-11958 -9220 -9223 -9226 0
11958 9226 0
11958 9223 0
11958 9224 0
11958 9220 0
11958 9220 9223 0
11958 9220 9224 0
11958 9221 0
11958 9221 9223 0
11958 9221 9224 0
c (((aux652 + aux653 + aux654)<=1)=tv=SATLiteral(11959))
-11959 9236 0
-11959 9232 9235 0
-11959 9233 0
-11959 9229 9235 0
-11959 9229 9232 0
-11959 9229 9233 0
-11959 9230 0
-11959 9230 9232 0
-11959 9230 9233 0
11959 -9230 -9232 -9235 0
11959 -9229 -9233 -9235 0
11959 -9229 -9232 -9236 0
c ((1<=(aux652 + aux653 + aux654))=tv=SATLiteral(11960))
-11960 -9229 -9232 -9235 0
11960 9235 0
11960 9232 0
11960 9233 0
11960 9229 0
11960 9229 9232 0
11960 9229 9233 0
11960 9230 0
11960 9230 9232 0
11960 9230 9233 0
c (((aux655 + aux656 + aux658)<=1)=tv=SATLiteral(11961))
-11961 9248 0
-11961 9241 9247 0
-11961 9242 0
-11961 9238 9247 0
-11961 9238 9241 0
-11961 9238 9242 0
-11961 9239 0
-11961 9239 9241 0
-11961 9239 9242 0
11961 -9239 -9241 -9247 0
11961 -9238 -9242 -9247 0
11961 -9238 -9241 -9248 0
c ((1<=(aux655 + aux656 + aux658))=tv=SATLiteral(11962))
-11962 -9238 -9241 -9247 0
11962 9247 0
11962 9241 0
11962 9242 0
11962 9238 0
11962 9238 9241 0
11962 9238 9242 0
11962 9239 0
11962 9239 9241 0
11962 9239 9242 0
c (((aux659 + aux660 + aux662)<=1)=tv=SATLiteral(11963))
-11963 9262 0
-11963 9255 9261 0
-11963 9256 0
-11963 9252 9261 0
-11963 9252 9255 0
-11963 9252 9256 0
-11963 9253 0
-11963 9253 9255 0
-11963 9253 9256 0
11963 -9253 -9255 -9261 0
11963 -9252 -9256 -9261 0
11963 -9252 -9255 -9262 0
c ((1<=(aux659 + aux660 + aux662))=tv=SATLiteral(11964))
-11964 -9252 -9255 -9261 0
11964 9261 0
11964 9255 0
11964 9256 0
11964 9252 0
11964 9252 9255 0
11964 9252 9256 0
11964 9253 0
11964 9253 9255 0
11964 9253 9256 0
c (((aux663 + aux664 + aux666)<=1)=tv=SATLiteral(11965))
-11965 9276 0
-11965 9269 9275 0
-11965 9270 0
-11965 9266 9275 0
-11965 9266 9269 0
-11965 9266 9270 0
-11965 9267 0
-11965 9267 9269 0
-11965 9267 9270 0
11965 -9267 -9269 -9275 0
11965 -9266 -9270 -9275 0
11965 -9266 -9269 -9276 0
c ((1<=(aux663 + aux664 + aux666))=tv=SATLiteral(11966))
-11966 -9266 -9269 -9275 0
11966 9275 0
11966 9269 0
11966 9270 0
11966 9266 0
11966 9266 9269 0
11966 9266 9270 0
11966 9267 0
11966 9267 9269 0
11966 9267 9270 0
c (((aux667 + aux668 + aux670)<=1)=tv=SATLiteral(11967))
-11967 9290 0
-11967 9283 9289 0
-11967 9284 0
-11967 9280 9289 0
-11967 9280 9283 0
-11967 9280 9284 0
-11967 9281 0
-11967 9281 9283 0
-11967 9281 9284 0
11967 -9281 -9283 -9289 0
11967 -9280 -9284 -9289 0
11967 -9280 -9283 -9290 0
c ((1<=(aux667 + aux668 + aux670))=tv=SATLiteral(11968))
-11968 -9280 -9283 -9289 0
11968 9289 0
11968 9283 0
11968 9284 0
11968 9280 0
11968 9280 9283 0
11968 9280 9284 0
11968 9281 0
11968 9281 9283 0
11968 9281 9284 0
c (((aux671 + aux672 + aux674)<=1)=tv=SATLiteral(11969))
-11969 9304 0
-11969 9297 9303 0
-11969 9298 0
-11969 9294 9303 0
-11969 9294 9297 0
-11969 9294 9298 0
-11969 9295 0
-11969 9295 9297 0
-11969 9295 9298 0
11969 -9295 -9297 -9303 0
11969 -9294 -9298 -9303 0
11969 -9294 -9297 -9304 0
c ((1<=(aux671 + aux672 + aux674))=tv=SATLiteral(11970))
-11970 -9294 -9297 -9303 0
11970 9303 0
11970 9297 0
11970 9298 0
11970 9294 0
11970 9294 9297 0
11970 9294 9298 0
11970 9295 0
11970 9295 9297 0
11970 9295 9298 0
c (((aux675 + aux676 + aux678)<=1)=tv=SATLiteral(11971))
-11971 9318 0
-11971 9311 9317 0
-11971 9312 0
-11971 9308 9317 0
-11971 9308 9311 0
-11971 9308 9312 0
-11971 9309 0
-11971 9309 9311 0
-11971 9309 9312 0
11971 -9309 -9311 -9317 0
11971 -9308 -9312 -9317 0
11971 -9308 -9311 -9318 0
c ((1<=(aux675 + aux676 + aux678))=tv=SATLiteral(11972))
-11972 -9308 -9311 -9317 0
11972 9317 0
11972 9311 0
11972 9312 0
11972 9308 0
11972 9308 9311 0
11972 9308 9312 0
11972 9309 0
11972 9309 9311 0
11972 9309 9312 0
c (((aux689 + aux690 + aux692)<=1)=tv=SATLiteral(11973))
-11973 9362 0
-11973 9355 9361 0
-11973 9356 0
-11973 9352 9361 0
-11973 9352 9355 0
-11973 9352 9356 0
-11973 9353 0
-11973 9353 9355 0
-11973 9353 9356 0
11973 -9353 -9355 -9361 0
11973 -9352 -9356 -9361 0
11973 -9352 -9355 -9362 0
c ((1<=(aux689 + aux690 + aux692))=tv=SATLiteral(11974))
-11974 -9352 -9355 -9361 0
11974 9361 0
11974 9355 0
11974 9356 0
11974 9352 0
11974 9352 9355 0
11974 9352 9356 0
11974 9353 0
11974 9353 9355 0
11974 9353 9356 0
c (((aux693 + aux694 + aux695)<=1)=tv=SATLiteral(11975))
-11975 9373 0
-11975 9369 9372 0
-11975 9370 0
-11975 9366 9372 0
-11975 9366 9369 0
-11975 9366 9370 0
-11975 9367 0
-11975 9367 9369 0
-11975 9367 9370 0
11975 -9367 -9369 -9372 0
11975 -9366 -9370 -9372 0
11975 -9366 -9369 -9373 0
c ((1<=(aux693 + aux694 + aux695))=tv=SATLiteral(11976))
-11976 -9366 -9369 -9372 0
11976 9372 0
11976 9369 0
11976 9370 0
11976 9366 0
11976 9366 9369 0
11976 9366 9370 0
11976 9367 0
11976 9367 9369 0
11976 9367 9370 0
c (((aux696 + aux697 + aux698)<=1)=tv=SATLiteral(11977))
-11977 9382 0
-11977 9378 9381 0
-11977 9379 0
-11977 9375 9381 0
-11977 9375 9378 0
-11977 9375 9379 0
-11977 9376 0
-11977 9376 9378 0
-11977 9376 9379 0
11977 -9376 -9378 -9381 0
11977 -9375 -9379 -9381 0
11977 -9375 -9378 -9382 0
c ((1<=(aux696 + aux697 + aux698))=tv=SATLiteral(11978))
-11978 -9375 -9378 -9381 0
11978 9381 0
11978 9378 0
11978 9379 0
11978 9375 0
11978 9375 9378 0
11978 9375 9379 0
11978 9376 0
11978 9376 9378 0
11978 9376 9379 0
c (((aux703 + aux704 + aux705)<=1)=tv=SATLiteral(11979))
-11979 9401 0
-11979 9397 9400 0
-11979 9398 0
-11979 9394 9400 0
-11979 9394 9397 0
-11979 9394 9398 0
-11979 9395 0
-11979 9395 9397 0
-11979 9395 9398 0
11979 -9395 -9397 -9400 0
11979 -9394 -9398 -9400 0
11979 -9394 -9397 -9401 0
c ((1<=(aux703 + aux704 + aux705))=tv=SATLiteral(11980))
-11980 -9394 -9397 -9400 0
11980 9400 0
11980 9397 0
11980 9398 0
11980 9394 0
11980 9394 9397 0
11980 9394 9398 0
11980 9395 0
11980 9395 9397 0
11980 9395 9398 0
c (((aux706 + aux707 + aux708)<=1)=tv=SATLiteral(11981))
-11981 9410 0
-11981 9406 9409 0
-11981 9407 0
-11981 9403 9409 0
-11981 9403 9406 0
-11981 9403 9407 0
-11981 9404 0
-11981 9404 9406 0
-11981 9404 9407 0
11981 -9404 -9406 -9409 0
11981 -9403 -9407 -9409 0
11981 -9403 -9406 -9410 0
c ((1<=(aux706 + aux707 + aux708))=tv=SATLiteral(11982))
-11982 -9403 -9406 -9409 0
11982 9409 0
11982 9406 0
11982 9407 0
11982 9403 0
11982 9403 9406 0
11982 9403 9407 0
11982 9404 0
11982 9404 9406 0
11982 9404 9407 0
c (((aux717 + aux718 + aux719)<=1)=tv=SATLiteral(11983))
-11983 9439 0
-11983 9435 9438 0
-11983 9436 0
-11983 9432 9438 0
-11983 9432 9435 0
-11983 9432 9436 0
-11983 9433 0
-11983 9433 9435 0
-11983 9433 9436 0
11983 -9433 -9435 -9438 0
11983 -9432 -9436 -9438 0
11983 -9432 -9435 -9439 0
c ((1<=(aux717 + aux718 + aux719))=tv=SATLiteral(11984))
-11984 -9432 -9435 -9438 0
11984 9438 0
11984 9435 0
11984 9436 0
11984 9432 0
11984 9432 9435 0
11984 9432 9436 0
11984 9433 0
11984 9433 9435 0
11984 9433 9436 0
c (((aux720 + aux721 + aux722)<=1)=tv=SATLiteral(11985))
-11985 9448 0
-11985 9444 9447 0
-11985 9445 0
-11985 9441 9447 0
-11985 9441 9444 0
-11985 9441 9445 0
-11985 9442 0
-11985 9442 9444 0
-11985 9442 9445 0
11985 -9442 -9444 -9447 0
11985 -9441 -9445 -9447 0
11985 -9441 -9444 -9448 0
c ((1<=(aux720 + aux721 + aux722))=tv=SATLiteral(11986))
-11986 -9441 -9444 -9447 0
11986 9447 0
11986 9444 0
11986 9445 0
11986 9441 0
11986 9441 9444 0
11986 9441 9445 0
11986 9442 0
11986 9442 9444 0
11986 9442 9445 0
c (((aux723 + aux724 + aux726)<=1)=tv=SATLiteral(11987))
-11987 9460 0
-11987 9453 9459 0
-11987 9454 0
-11987 9450 9459 0
-11987 9450 9453 0
-11987 9450 9454 0
-11987 9451 0
-11987 9451 9453 0
-11987 9451 9454 0
11987 -9451 -9453 -9459 0
11987 -9450 -9454 -9459 0
11987 -9450 -9453 -9460 0
c ((1<=(aux723 + aux724 + aux726))=tv=SATLiteral(11988))
-11988 -9450 -9453 -9459 0
11988 9459 0
11988 9453 0
11988 9454 0
11988 9450 0
11988 9450 9453 0
11988 9450 9454 0
11988 9451 0
11988 9451 9453 0
11988 9451 9454 0
c (((aux727 + aux728 + aux730)<=1)=tv=SATLiteral(11989))
-11989 9474 0
-11989 9467 9473 0
-11989 9468 0
-11989 9464 9473 0
-11989 9464 9467 0
-11989 9464 9468 0
-11989 9465 0
-11989 9465 9467 0
-11989 9465 9468 0
11989 -9465 -9467 -9473 0
11989 -9464 -9468 -9473 0
11989 -9464 -9467 -9474 0
c ((1<=(aux727 + aux728 + aux730))=tv=SATLiteral(11990))
-11990 -9464 -9467 -9473 0
11990 9473 0
11990 9467 0
11990 9468 0
11990 9464 0
11990 9464 9467 0
11990 9464 9468 0
11990 9465 0
11990 9465 9467 0
11990 9465 9468 0
c (((aux731 + aux732 + aux734)<=1)=tv=SATLiteral(11991))
-11991 9488 0
-11991 9481 9487 0
-11991 9482 0
-11991 9478 9487 0
-11991 9478 9481 0
-11991 9478 9482 0
-11991 9479 0
-11991 9479 9481 0
-11991 9479 9482 0
11991 -9479 -9481 -9487 0
11991 -9478 -9482 -9487 0
11991 -9478 -9481 -9488 0
c ((1<=(aux731 + aux732 + aux734))=tv=SATLiteral(11992))
-11992 -9478 -9481 -9487 0
11992 9487 0
11992 9481 0
11992 9482 0
11992 9478 0
11992 9478 9481 0
11992 9478 9482 0
11992 9479 0
11992 9479 9481 0
11992 9479 9482 0
c (((aux735 + aux736 + aux738)<=1)=tv=SATLiteral(11993))
-11993 9502 0
-11993 9495 9501 0
-11993 9496 0
-11993 9492 9501 0
-11993 9492 9495 0
-11993 9492 9496 0
-11993 9493 0
-11993 9493 9495 0
-11993 9493 9496 0
11993 -9493 -9495 -9501 0
11993 -9492 -9496 -9501 0
11993 -9492 -9495 -9502 0
c ((1<=(aux735 + aux736 + aux738))=tv=SATLiteral(11994))
-11994 -9492 -9495 -9501 0
11994 9501 0
11994 9495 0
11994 9496 0
11994 9492 0
11994 9492 9495 0
11994 9492 9496 0
11994 9493 0
11994 9493 9495 0
11994 9493 9496 0
c (((aux739 + aux740 + aux742)<=1)=tv=SATLiteral(11995))
-11995 9516 0
-11995 9509 9515 0
-11995 9510 0
-11995 9506 9515 0
-11995 9506 9509 0
-11995 9506 9510 0
-11995 9507 0
-11995 9507 9509 0
-11995 9507 9510 0
11995 -9507 -9509 -9515 0
11995 -9506 -9510 -9515 0
11995 -9506 -9509 -9516 0
c ((1<=(aux739 + aux740 + aux742))=tv=SATLiteral(11996))
-11996 -9506 -9509 -9515 0
11996 9515 0
11996 9509 0
11996 9510 0
11996 9506 0
11996 9506 9509 0
11996 9506 9510 0
11996 9507 0
11996 9507 9509 0
11996 9507 9510 0
c (((aux743 + aux744 + aux746)<=1)=tv=SATLiteral(11997))
-11997 9530 0
-11997 9523 9529 0
-11997 9524 0
-11997 9520 9529 0
-11997 9520 9523 0
-11997 9520 9524 0
-11997 9521 0
-11997 9521 9523 0
-11997 9521 9524 0
11997 -9521 -9523 -9529 0
11997 -9520 -9524 -9529 0
11997 -9520 -9523 -9530 0
c ((1<=(aux743 + aux744 + aux746))=tv=SATLiteral(11998))
-11998 -9520 -9523 -9529 0
11998 9529 0
11998 9523 0
11998 9524 0
11998 9520 0
11998 9520 9523 0
11998 9520 9524 0
11998 9521 0
11998 9521 9523 0
11998 9521 9524 0
c (((aux757 + aux758 + aux760)<=1)=tv=SATLiteral(11999))
-11999 9574 0
-11999 9567 9573 0
-11999 9568 0
-11999 9564 9573 0
-11999 9564 9567 0
-11999 9564 9568 0
-11999 9565 0
-11999 9565 9567 0
-11999 9565 9568 0
11999 -9565 -9567 -9573 0
11999 -9564 -9568 -9573 0
11999 -9564 -9567 -9574 0
c ((1<=(aux757 + aux758 + aux760))=tv=SATLiteral(12000))
-12000 -9564 -9567 -9573 0
12000 9573 0
12000 9567 0
12000 9568 0
12000 9564 0
12000 9564 9567 0
12000 9564 9568 0
12000 9565 0
12000 9565 9567 0
12000 9565 9568 0
c (((aux766 + aux767 + aux769)<=1)=tv=SATLiteral(12001))
-12001 9603 0
-12001 9596 9602 0
-12001 9597 0
-12001 9593 9602 0
-12001 9593 9596 0
-12001 9593 9597 0
-12001 9594 0
-12001 9594 9596 0
-12001 9594 9597 0
12001 -9594 -9596 -9602 0
12001 -9593 -9597 -9602 0
12001 -9593 -9596 -9603 0
c ((1<=(aux766 + aux767 + aux769))=tv=SATLiteral(12002))
-12002 -9593 -9596 -9602 0
12002 9602 0
12002 9596 0
12002 9597 0
12002 9593 0
12002 9593 9596 0
12002 9593 9597 0
12002 9594 0
12002 9594 9596 0
12002 9594 9597 0
c (((aux770 + aux771 + aux773)<=1)=tv=SATLiteral(12003))
-12003 9617 0
-12003 9610 9616 0
-12003 9611 0
-12003 9607 9616 0
-12003 9607 9610 0
-12003 9607 9611 0
-12003 9608 0
-12003 9608 9610 0
-12003 9608 9611 0
12003 -9608 -9610 -9616 0
12003 -9607 -9611 -9616 0
12003 -9607 -9610 -9617 0
c ((1<=(aux770 + aux771 + aux773))=tv=SATLiteral(12004))
-12004 -9607 -9610 -9616 0
12004 9616 0
12004 9610 0
12004 9611 0
12004 9607 0
12004 9607 9610 0
12004 9607 9611 0
12004 9608 0
12004 9608 9610 0
12004 9608 9611 0
c (((aux774 + aux775 + aux777)<=1)=tv=SATLiteral(12005))
-12005 9631 0
-12005 9624 9630 0
-12005 9625 0
-12005 9621 9630 0
-12005 9621 9624 0
-12005 9621 9625 0
-12005 9622 0
-12005 9622 9624 0
-12005 9622 9625 0
12005 -9622 -9624 -9630 0
12005 -9621 -9625 -9630 0
12005 -9621 -9624 -9631 0
c ((1<=(aux774 + aux775 + aux777))=tv=SATLiteral(12006))
-12006 -9621 -9624 -9630 0
12006 9630 0
12006 9624 0
12006 9625 0
12006 9621 0
12006 9621 9624 0
12006 9621 9625 0
12006 9622 0
12006 9622 9624 0
12006 9622 9625 0
c (((aux778 + aux779 + aux781)<=1)=tv=SATLiteral(12007))
-12007 9645 0
-12007 9638 9644 0
-12007 9639 0
-12007 9635 9644 0
-12007 9635 9638 0
-12007 9635 9639 0
-12007 9636 0
-12007 9636 9638 0
-12007 9636 9639 0
12007 -9636 -9638 -9644 0
12007 -9635 -9639 -9644 0
12007 -9635 -9638 -9645 0
c ((1<=(aux778 + aux779 + aux781))=tv=SATLiteral(12008))
-12008 -9635 -9638 -9644 0
12008 9644 0
12008 9638 0
12008 9639 0
12008 9635 0
12008 9635 9638 0
12008 9635 9639 0
12008 9636 0
12008 9636 9638 0
12008 9636 9639 0
c (((aux782 + aux783 + aux785)<=1)=tv=SATLiteral(12009))
-12009 9659 0
-12009 9652 9658 0
-12009 9653 0
-12009 9649 9658 0
-12009 9649 9652 0
-12009 9649 9653 0
-12009 9650 0
-12009 9650 9652 0
-12009 9650 9653 0
12009 -9650 -9652 -9658 0
12009 -9649 -9653 -9658 0
12009 -9649 -9652 -9659 0
c ((1<=(aux782 + aux783 + aux785))=tv=SATLiteral(12010))
-12010 -9649 -9652 -9658 0
12010 9658 0
12010 9652 0
12010 9653 0
12010 9649 0
12010 9649 9652 0
12010 9649 9653 0
12010 9650 0
12010 9650 9652 0
12010 9650 9653 0
c (((aux786 + aux787 + aux789)<=1)=tv=SATLiteral(12011))
-12011 9673 0
-12011 9666 9672 0
-12011 9667 0
-12011 9663 9672 0
-12011 9663 9666 0
-12011 9663 9667 0
-12011 9664 0
-12011 9664 9666 0
-12011 9664 9667 0
12011 -9664 -9666 -9672 0
12011 -9663 -9667 -9672 0
12011 -9663 -9666 -9673 0
c ((1<=(aux786 + aux787 + aux789))=tv=SATLiteral(12012))
-12012 -9663 -9666 -9672 0
12012 9672 0
12012 9666 0
12012 9667 0
12012 9663 0
12012 9663 9666 0
12012 9663 9667 0
12012 9664 0
12012 9664 9666 0
12012 9664 9667 0
c (((aux795 + aux796 + aux798)<=1)=tv=SATLiteral(12013))
-12013 9702 0
-12013 9695 9701 0
-12013 9696 0
-12013 9692 9701 0
-12013 9692 9695 0
-12013 9692 9696 0
-12013 9693 0
-12013 9693 9695 0
-12013 9693 9696 0
12013 -9693 -9695 -9701 0
12013 -9692 -9696 -9701 0
12013 -9692 -9695 -9702 0
c ((1<=(aux795 + aux796 + aux798))=tv=SATLiteral(12014))
-12014 -9692 -9695 -9701 0
12014 9701 0
12014 9695 0
12014 9696 0
12014 9692 0
12014 9692 9695 0
12014 9692 9696 0
12014 9693 0
12014 9693 9695 0
12014 9693 9696 0
c (((aux800 + aux803 + aux804)<=1)=tv=SATLiteral(12015))
-12015 9724 0
-12015 9718 9723 0
-12015 9719 0
-12015 9721 0
-12015 9709 9723 0
-12015 9709 9718 0
-12015 9709 9719 0
-12015 9709 9721 0
-12015 9710 0
-12015 9710 9718 0
-12015 9710 9719 0
-12015 9710 9721 0
12015 -9710 -9718 -9723 0
12015 -9709 -9719 -9723 0
12015 -9709 -9718 -9724 0
c ((1<=(aux800 + aux803 + aux804))=tv=SATLiteral(12016))
-12016 -9709 -9718 -9723 0
12016 9723 0
12016 9718 0
12016 9719 0
12016 9721 0
12016 9709 0
12016 9709 9718 0
12016 9709 9719 0
12016 9709 9721 0
12016 9710 0
12016 9710 9718 0
12016 9710 9719 0
12016 9710 9721 0
c (((aux806 + aux809 + aux810)<=1)=tv=SATLiteral(12017))
-12017 9748 0
-12017 9742 9747 0
-12017 9743 0
-12017 9745 0
-12017 9733 9747 0
-12017 9733 9742 0
-12017 9733 9743 0
-12017 9733 9745 0
-12017 9734 0
-12017 9734 9742 0
-12017 9734 9743 0
-12017 9734 9745 0
12017 -9734 -9742 -9747 0
12017 -9733 -9743 -9747 0
12017 -9733 -9742 -9748 0
c ((1<=(aux806 + aux809 + aux810))=tv=SATLiteral(12018))
-12018 -9733 -9742 -9747 0
12018 9747 0
12018 9742 0
12018 9743 0
12018 9745 0
12018 9733 0
12018 9733 9742 0
12018 9733 9743 0
12018 9733 9745 0
12018 9734 0
12018 9734 9742 0
12018 9734 9743 0
12018 9734 9745 0
c (((aux812 + aux815 + aux816)<=1)=tv=SATLiteral(12019))
-12019 9772 0
-12019 9766 9771 0
-12019 9767 0
-12019 9769 0
-12019 9757 9771 0
-12019 9757 9766 0
-12019 9757 9767 0
-12019 9757 9769 0
-12019 9758 0
-12019 9758 9766 0
-12019 9758 9767 0
-12019 9758 9769 0
12019 -9758 -9766 -9771 0
12019 -9757 -9767 -9771 0
12019 -9757 -9766 -9772 0
c ((1<=(aux812 + aux815 + aux816))=tv=SATLiteral(12020))
-12020 -9757 -9766 -9771 0
12020 9771 0
12020 9766 0
12020 9767 0
12020 9769 0
12020 9757 0
12020 9757 9766 0
12020 9757 9767 0
12020 9757 9769 0
12020 9758 0
12020 9758 9766 0
12020 9758 9767 0
12020 9758 9769 0
c (((aux818 + aux821 + aux822)<=1)=tv=SATLiteral(12021))
-12021 9796 0
-12021 9790 9795 0
-12021 9791 0
-12021 9793 0
-12021 9781 9795 0
-12021 9781 9790 0
-12021 9781 9791 0
-12021 9781 9793 0
-12021 9782 0
-12021 9782 9790 0
-12021 9782 9791 0
-12021 9782 9793 0
12021 -9782 -9790 -9795 0
12021 -9781 -9791 -9795 0
12021 -9781 -9790 -9796 0
c ((1<=(aux818 + aux821 + aux822))=tv=SATLiteral(12022))
-12022 -9781 -9790 -9795 0
12022 9795 0
12022 9790 0
12022 9791 0
12022 9793 0
12022 9781 0
12022 9781 9790 0
12022 9781 9791 0
12022 9781 9793 0
12022 9782 0
12022 9782 9790 0
12022 9782 9791 0
12022 9782 9793 0
c (((aux824 + aux827 + aux828)<=1)=tv=SATLiteral(12023))
-12023 9820 0
-12023 9814 9819 0
-12023 9815 0
-12023 9817 0
-12023 9805 9819 0
-12023 9805 9814 0
-12023 9805 9815 0
-12023 9805 9817 0
-12023 9806 0
-12023 9806 9814 0
-12023 9806 9815 0
-12023 9806 9817 0
12023 -9806 -9814 -9819 0
12023 -9805 -9815 -9819 0
12023 -9805 -9814 -9820 0
c ((1<=(aux824 + aux827 + aux828))=tv=SATLiteral(12024))
-12024 -9805 -9814 -9819 0
12024 9819 0
12024 9814 0
12024 9815 0
12024 9817 0
12024 9805 0
12024 9805 9814 0
12024 9805 9815 0
12024 9805 9817 0
12024 9806 0
12024 9806 9814 0
12024 9806 9815 0
12024 9806 9817 0
c (((aux830 + aux833 + aux834)<=1)=tv=SATLiteral(12025))
-12025 9844 0
-12025 9838 9843 0
-12025 9839 0
-12025 9841 0
-12025 9829 9843 0
-12025 9829 9838 0
-12025 9829 9839 0
-12025 9829 9841 0
-12025 9830 0
-12025 9830 9838 0
-12025 9830 9839 0
-12025 9830 9841 0
12025 -9830 -9838 -9843 0
12025 -9829 -9839 -9843 0
12025 -9829 -9838 -9844 0
c ((1<=(aux830 + aux833 + aux834))=tv=SATLiteral(12026))
-12026 -9829 -9838 -9843 0
12026 9843 0
12026 9838 0
12026 9839 0
12026 9841 0
12026 9829 0
12026 9829 9838 0
12026 9829 9839 0
12026 9829 9841 0
12026 9830 0
12026 9830 9838 0
12026 9830 9839 0
12026 9830 9841 0
c (((aux836 + aux839 + aux840)<=1)=tv=SATLiteral(12027))
-12027 9868 0
-12027 9862 9867 0
-12027 9863 0
-12027 9865 0
-12027 9853 9867 0
-12027 9853 9862 0
-12027 9853 9863 0
-12027 9853 9865 0
-12027 9854 0
-12027 9854 9862 0
-12027 9854 9863 0
-12027 9854 9865 0
12027 -9854 -9862 -9867 0
12027 -9853 -9863 -9867 0
12027 -9853 -9862 -9868 0
c ((1<=(aux836 + aux839 + aux840))=tv=SATLiteral(12028))
-12028 -9853 -9862 -9867 0
12028 9867 0
12028 9862 0
12028 9863 0
12028 9865 0
12028 9853 0
12028 9853 9862 0
12028 9853 9863 0
12028 9853 9865 0
12028 9854 0
12028 9854 9862 0
12028 9854 9863 0
12028 9854 9865 0
c (((aux842 + aux845 + aux846)<=1)=tv=SATLiteral(12029))
-12029 9892 0
-12029 9886 9891 0
-12029 9887 0
-12029 9889 0
-12029 9877 9891 0
-12029 9877 9886 0
-12029 9877 9887 0
-12029 9877 9889 0
-12029 9878 0
-12029 9878 9886 0
-12029 9878 9887 0
-12029 9878 9889 0
12029 -9878 -9886 -9891 0
12029 -9877 -9887 -9891 0
12029 -9877 -9886 -9892 0
c ((1<=(aux842 + aux845 + aux846))=tv=SATLiteral(12030))
-12030 -9877 -9886 -9891 0
12030 9891 0
12030 9886 0
12030 9887 0
12030 9889 0
12030 9877 0
12030 9877 9886 0
12030 9877 9887 0
12030 9877 9889 0
12030 9878 0
12030 9878 9886 0
12030 9878 9887 0
12030 9878 9889 0
c (((aux848 + aux851 + aux852)<=1)=tv=SATLiteral(12031))
-12031 9916 0
-12031 9910 9915 0
-12031 9911 0
-12031 9913 0
-12031 9901 9915 0
-12031 9901 9910 0
-12031 9901 9911 0
-12031 9901 9913 0
-12031 9902 0
-12031 9902 9910 0
-12031 9902 9911 0
-12031 9902 9913 0
12031 -9902 -9910 -9915 0
12031 -9901 -9911 -9915 0
12031 -9901 -9910 -9916 0
c ((1<=(aux848 + aux851 + aux852))=tv=SATLiteral(12032))
-12032 -9901 -9910 -9915 0
12032 9915 0
12032 9910 0
12032 9911 0
12032 9913 0
12032 9901 0
12032 9901 9910 0
12032 9901 9911 0
12032 9901 9913 0
12032 9902 0
12032 9902 9910 0
12032 9902 9911 0
12032 9902 9913 0
c (((aux854 + aux855 + aux857)<=1)=tv=SATLiteral(12033))
-12033 9935 0
-12033 9928 9934 0
-12033 9929 0
-12033 9925 9934 0
-12033 9925 9928 0
-12033 9925 9929 0
-12033 9926 0
-12033 9926 9928 0
-12033 9926 9929 0
12033 -9926 -9928 -9934 0
12033 -9925 -9929 -9934 0
12033 -9925 -9928 -9935 0
c ((1<=(aux854 + aux855 + aux857))=tv=SATLiteral(12034))
-12034 -9925 -9928 -9934 0
12034 9934 0
12034 9928 0
12034 9929 0
12034 9925 0
12034 9925 9928 0
12034 9925 9929 0
12034 9926 0
12034 9926 9928 0
12034 9926 9929 0
c (((aux859 + aux860 + aux862)<=1)=tv=SATLiteral(12035))
-12035 9954 0
-12035 9947 9953 0
-12035 9948 0
-12035 9944 9953 0
-12035 9944 9947 0
-12035 9944 9948 0
-12035 9945 0
-12035 9945 9947 0
-12035 9945 9948 0
12035 -9945 -9947 -9953 0
12035 -9944 -9948 -9953 0
12035 -9944 -9947 -9954 0
c ((1<=(aux859 + aux860 + aux862))=tv=SATLiteral(12036))
-12036 -9944 -9947 -9953 0
12036 9953 0
12036 9947 0
12036 9948 0
12036 9944 0
12036 9944 9947 0
12036 9944 9948 0
12036 9945 0
12036 9945 9947 0
12036 9945 9948 0
c (((aux864 + aux865 + aux867)<=1)=tv=SATLiteral(12037))
-12037 9973 0
-12037 9966 9972 0
-12037 9967 0
-12037 9963 9972 0
-12037 9963 9966 0
-12037 9963 9967 0
-12037 9964 0
-12037 9964 9966 0
-12037 9964 9967 0
12037 -9964 -9966 -9972 0
12037 -9963 -9967 -9972 0
12037 -9963 -9966 -9973 0
c ((1<=(aux864 + aux865 + aux867))=tv=SATLiteral(12038))
-12038 -9963 -9966 -9972 0
12038 9972 0
12038 9966 0
12038 9967 0
12038 9963 0
12038 9963 9966 0
12038 9963 9967 0
12038 9964 0
12038 9964 9966 0
12038 9964 9967 0
c (((aux869 + aux870 + aux872)<=1)=tv=SATLiteral(12039))
-12039 9992 0
-12039 9985 9991 0
-12039 9986 0
-12039 9982 9991 0
-12039 9982 9985 0
-12039 9982 9986 0
-12039 9983 0
-12039 9983 9985 0
-12039 9983 9986 0
12039 -9983 -9985 -9991 0
12039 -9982 -9986 -9991 0
12039 -9982 -9985 -9992 0
c ((1<=(aux869 + aux870 + aux872))=tv=SATLiteral(12040))
-12040 -9982 -9985 -9991 0
12040 9991 0
12040 9985 0
12040 9986 0
12040 9982 0
12040 9982 9985 0
12040 9982 9986 0
12040 9983 0
12040 9983 9985 0
12040 9983 9986 0
c (((aux874 + aux875 + aux877)<=1)=tv=SATLiteral(12041))
-12041 10011 0
-12041 10004 10010 0
-12041 10005 0
-12041 10001 10010 0
-12041 10001 10004 0
-12041 10001 10005 0
-12041 10002 0
-12041 10002 10004 0
-12041 10002 10005 0
12041 -10002 -10004 -10010 0
12041 -10001 -10005 -10010 0
12041 -10001 -10004 -10011 0
c ((1<=(aux874 + aux875 + aux877))=tv=SATLiteral(12042))
-12042 -10001 -10004 -10010 0
12042 10010 0
12042 10004 0
12042 10005 0
12042 10001 0
12042 10001 10004 0
12042 10001 10005 0
12042 10002 0
12042 10002 10004 0
12042 10002 10005 0
c (((aux879 + aux880 + aux882)<=1)=tv=SATLiteral(12043))
-12043 10030 0
-12043 10023 10029 0
-12043 10024 0
-12043 10020 10029 0
-12043 10020 10023 0
-12043 10020 10024 0
-12043 10021 0
-12043 10021 10023 0
-12043 10021 10024 0
12043 -10021 -10023 -10029 0
12043 -10020 -10024 -10029 0
12043 -10020 -10023 -10030 0
c ((1<=(aux879 + aux880 + aux882))=tv=SATLiteral(12044))
-12044 -10020 -10023 -10029 0
12044 10029 0
12044 10023 0
12044 10024 0
12044 10020 0
12044 10020 10023 0
12044 10020 10024 0
12044 10021 0
12044 10021 10023 0
12044 10021 10024 0
c (((aux884 + aux885 + aux887)<=1)=tv=SATLiteral(12045))
-12045 10049 0
-12045 10042 10048 0
-12045 10043 0
-12045 10039 10048 0
-12045 10039 10042 0
-12045 10039 10043 0
-12045 10040 0
-12045 10040 10042 0
-12045 10040 10043 0
12045 -10040 -10042 -10048 0
12045 -10039 -10043 -10048 0
12045 -10039 -10042 -10049 0
c ((1<=(aux884 + aux885 + aux887))=tv=SATLiteral(12046))
-12046 -10039 -10042 -10048 0
12046 10048 0
12046 10042 0
12046 10043 0
12046 10039 0
12046 10039 10042 0
12046 10039 10043 0
12046 10040 0
12046 10040 10042 0
12046 10040 10043 0
c (((aux895 + aux896 + aux898)<=1)=tv=SATLiteral(12047))
-12047 10088 0
-12047 10081 10087 0
-12047 10082 0
-12047 10078 10087 0
-12047 10078 10081 0
-12047 10078 10082 0
-12047 10079 0
-12047 10079 10081 0
-12047 10079 10082 0
12047 -10079 -10081 -10087 0
12047 -10078 -10082 -10087 0
12047 -10078 -10081 -10088 0
c ((1<=(aux895 + aux896 + aux898))=tv=SATLiteral(12048))
-12048 -10078 -10081 -10087 0
12048 10087 0
12048 10081 0
12048 10082 0
12048 10078 0
12048 10078 10081 0
12048 10078 10082 0
12048 10079 0
12048 10079 10081 0
12048 10079 10082 0
c (((aux904 + aux905 + aux907)<=1)=tv=SATLiteral(12049))
-12049 10119 0
-12049 10112 10118 0
-12049 10113 0
-12049 10109 10118 0
-12049 10109 10112 0
-12049 10109 10113 0
-12049 10110 0
-12049 10110 10112 0
-12049 10110 10113 0
12049 -10110 -10112 -10118 0
12049 -10109 -10113 -10118 0
12049 -10109 -10112 -10119 0
c ((1<=(aux904 + aux905 + aux907))=tv=SATLiteral(12050))
-12050 -10109 -10112 -10118 0
12050 10118 0
12050 10112 0
12050 10113 0
12050 10109 0
12050 10109 10112 0
12050 10109 10113 0
12050 10110 0
12050 10110 10112 0
12050 10110 10113 0
c (((aux908 + aux909 + aux911)<=1)=tv=SATLiteral(12051))
-12051 10133 0
-12051 10126 10132 0
-12051 10127 0
-12051 10123 10132 0
-12051 10123 10126 0
-12051 10123 10127 0
-12051 10124 0
-12051 10124 10126 0
-12051 10124 10127 0
12051 -10124 -10126 -10132 0
12051 -10123 -10127 -10132 0
12051 -10123 -10126 -10133 0
c ((1<=(aux908 + aux909 + aux911))=tv=SATLiteral(12052))
-12052 -10123 -10126 -10132 0
12052 10132 0
12052 10126 0
12052 10127 0
12052 10123 0
12052 10123 10126 0
12052 10123 10127 0
12052 10124 0
12052 10124 10126 0
12052 10124 10127 0
c (((aux912 + aux913 + aux915)<=1)=tv=SATLiteral(12053))
-12053 10147 0
-12053 10140 10146 0
-12053 10141 0
-12053 10137 10146 0
-12053 10137 10140 0
-12053 10137 10141 0
-12053 10138 0
-12053 10138 10140 0
-12053 10138 10141 0
12053 -10138 -10140 -10146 0
12053 -10137 -10141 -10146 0
12053 -10137 -10140 -10147 0
c ((1<=(aux912 + aux913 + aux915))=tv=SATLiteral(12054))
-12054 -10137 -10140 -10146 0
12054 10146 0
12054 10140 0
12054 10141 0
12054 10137 0
12054 10137 10140 0
12054 10137 10141 0
12054 10138 0
12054 10138 10140 0
12054 10138 10141 0
c (((aux916 + aux917 + aux919)<=1)=tv=SATLiteral(12055))
-12055 10161 0
-12055 10154 10160 0
-12055 10155 0
-12055 10151 10160 0
-12055 10151 10154 0
-12055 10151 10155 0
-12055 10152 0
-12055 10152 10154 0
-12055 10152 10155 0
12055 -10152 -10154 -10160 0
12055 -10151 -10155 -10160 0
12055 -10151 -10154 -10161 0
c ((1<=(aux916 + aux917 + aux919))=tv=SATLiteral(12056))
-12056 -10151 -10154 -10160 0
12056 10160 0
12056 10154 0
12056 10155 0
12056 10151 0
12056 10151 10154 0
12056 10151 10155 0
12056 10152 0
12056 10152 10154 0
12056 10152 10155 0
c (((aux920 + aux921 + aux923)<=1)=tv=SATLiteral(12057))
-12057 10175 0
-12057 10168 10174 0
-12057 10169 0
-12057 10165 10174 0
-12057 10165 10168 0
-12057 10165 10169 0
-12057 10166 0
-12057 10166 10168 0
-12057 10166 10169 0
12057 -10166 -10168 -10174 0
12057 -10165 -10169 -10174 0
12057 -10165 -10168 -10175 0
c ((1<=(aux920 + aux921 + aux923))=tv=SATLiteral(12058))
-12058 -10165 -10168 -10174 0
12058 10174 0
12058 10168 0
12058 10169 0
12058 10165 0
12058 10165 10168 0
12058 10165 10169 0
12058 10166 0
12058 10166 10168 0
12058 10166 10169 0
c (((aux924 + aux925 + aux927)<=1)=tv=SATLiteral(12059))
-12059 10189 0
-12059 10182 10188 0
-12059 10183 0
-12059 10179 10188 0
-12059 10179 10182 0
-12059 10179 10183 0
-12059 10180 0
-12059 10180 10182 0
-12059 10180 10183 0
12059 -10180 -10182 -10188 0
12059 -10179 -10183 -10188 0
12059 -10179 -10182 -10189 0
c ((1<=(aux924 + aux925 + aux927))=tv=SATLiteral(12060))
-12060 -10179 -10182 -10188 0
12060 10188 0
12060 10182 0
12060 10183 0
12060 10179 0
12060 10179 10182 0
12060 10179 10183 0
12060 10180 0
12060 10180 10182 0
12060 10180 10183 0
c (((aux933 + aux934 + aux936)<=1)=tv=SATLiteral(12061))
-12061 10218 0
-12061 10211 10217 0
-12061 10212 0
-12061 10208 10217 0
-12061 10208 10211 0
-12061 10208 10212 0
-12061 10209 0
-12061 10209 10211 0
-12061 10209 10212 0
12061 -10209 -10211 -10217 0
12061 -10208 -10212 -10217 0
12061 -10208 -10211 -10218 0
c ((1<=(aux933 + aux934 + aux936))=tv=SATLiteral(12062))
-12062 -10208 -10211 -10217 0
12062 10217 0
12062 10211 0
12062 10212 0
12062 10208 0
12062 10208 10211 0
12062 10208 10212 0
12062 10209 0
12062 10209 10211 0
12062 10209 10212 0
c (((aux942 + aux943 + aux945)<=1)=tv=SATLiteral(12063))
-12063 10247 0
-12063 10240 10246 0
-12063 10241 0
-12063 10237 10246 0
-12063 10237 10240 0
-12063 10237 10241 0
-12063 10238 0
-12063 10238 10240 0
-12063 10238 10241 0
12063 -10238 -10240 -10246 0
12063 -10237 -10241 -10246 0
12063 -10237 -10240 -10247 0
c ((1<=(aux942 + aux943 + aux945))=tv=SATLiteral(12064))
-12064 -10237 -10240 -10246 0
12064 10246 0
12064 10240 0
12064 10241 0
12064 10237 0
12064 10237 10240 0
12064 10237 10241 0
12064 10238 0
12064 10238 10240 0
12064 10238 10241 0
c (((aux951 + aux952 + aux954)<=1)=tv=SATLiteral(12065))
-12065 10276 0
-12065 10269 10275 0
-12065 10270 0
-12065 10266 10275 0
-12065 10266 10269 0
-12065 10266 10270 0
-12065 10267 0
-12065 10267 10269 0
-12065 10267 10270 0
12065 -10267 -10269 -10275 0
12065 -10266 -10270 -10275 0
12065 -10266 -10269 -10276 0
c ((1<=(aux951 + aux952 + aux954))=tv=SATLiteral(12066))
-12066 -10266 -10269 -10275 0
12066 10275 0
12066 10269 0
12066 10270 0
12066 10266 0
12066 10266 10269 0
12066 10266 10270 0
12066 10267 0
12066 10267 10269 0
12066 10267 10270 0
c (((aux955 + aux956 + aux958)<=1)=tv=SATLiteral(12067))
-12067 10290 0
-12067 10283 10289 0
-12067 10284 0
-12067 10280 10289 0
-12067 10280 10283 0
-12067 10280 10284 0
-12067 10281 0
-12067 10281 10283 0
-12067 10281 10284 0
12067 -10281 -10283 -10289 0
12067 -10280 -10284 -10289 0
12067 -10280 -10283 -10290 0
c ((1<=(aux955 + aux956 + aux958))=tv=SATLiteral(12068))
-12068 -10280 -10283 -10289 0
12068 10289 0
12068 10283 0
12068 10284 0
12068 10280 0
12068 10280 10283 0
12068 10280 10284 0
12068 10281 0
12068 10281 10283 0
12068 10281 10284 0
c (((aux959 + aux960 + aux962)<=1)=tv=SATLiteral(12069))
-12069 10304 0
-12069 10297 10303 0
-12069 10298 0
-12069 10294 10303 0
-12069 10294 10297 0
-12069 10294 10298 0
-12069 10295 0
-12069 10295 10297 0
-12069 10295 10298 0
12069 -10295 -10297 -10303 0
12069 -10294 -10298 -10303 0
12069 -10294 -10297 -10304 0
c ((1<=(aux959 + aux960 + aux962))=tv=SATLiteral(12070))
-12070 -10294 -10297 -10303 0
12070 10303 0
12070 10297 0
12070 10298 0
12070 10294 0
12070 10294 10297 0
12070 10294 10298 0
12070 10295 0
12070 10295 10297 0
12070 10295 10298 0
c (((aux963 + aux964 + aux966)<=1)=tv=SATLiteral(12071))
-12071 10318 0
-12071 10311 10317 0
-12071 10312 0
-12071 10308 10317 0
-12071 10308 10311 0
-12071 10308 10312 0
-12071 10309 0
-12071 10309 10311 0
-12071 10309 10312 0
12071 -10309 -10311 -10317 0
12071 -10308 -10312 -10317 0
12071 -10308 -10311 -10318 0
c ((1<=(aux963 + aux964 + aux966))=tv=SATLiteral(12072))
-12072 -10308 -10311 -10317 0
12072 10317 0
12072 10311 0
12072 10312 0
12072 10308 0
12072 10308 10311 0
12072 10308 10312 0
12072 10309 0
12072 10309 10311 0
12072 10309 10312 0
c (((aux967 + aux968 + aux970)<=1)=tv=SATLiteral(12073))
-12073 10332 0
-12073 10325 10331 0
-12073 10326 0
-12073 10322 10331 0
-12073 10322 10325 0
-12073 10322 10326 0
-12073 10323 0
-12073 10323 10325 0
-12073 10323 10326 0
12073 -10323 -10325 -10331 0
12073 -10322 -10326 -10331 0
12073 -10322 -10325 -10332 0
c ((1<=(aux967 + aux968 + aux970))=tv=SATLiteral(12074))
-12074 -10322 -10325 -10331 0
12074 10331 0
12074 10325 0
12074 10326 0
12074 10322 0
12074 10322 10325 0
12074 10322 10326 0
12074 10323 0
12074 10323 10325 0
12074 10323 10326 0
c (((aux971 + aux972 + aux974)<=1)=tv=SATLiteral(12075))
-12075 10346 0
-12075 10339 10345 0
-12075 10340 0
-12075 10336 10345 0
-12075 10336 10339 0
-12075 10336 10340 0
-12075 10337 0
-12075 10337 10339 0
-12075 10337 10340 0
12075 -10337 -10339 -10345 0
12075 -10336 -10340 -10345 0
12075 -10336 -10339 -10346 0
c ((1<=(aux971 + aux972 + aux974))=tv=SATLiteral(12076))
-12076 -10336 -10339 -10345 0
12076 10345 0
12076 10339 0
12076 10340 0
12076 10336 0
12076 10336 10339 0
12076 10336 10340 0
12076 10337 0
12076 10337 10339 0
12076 10337 10340 0
c (((aux980 + aux981 + aux983)<=1)=tv=SATLiteral(12077))
-12077 10375 0
-12077 10368 10374 0
-12077 10369 0
-12077 10365 10374 0
-12077 10365 10368 0
-12077 10365 10369 0
-12077 10366 0
-12077 10366 10368 0
-12077 10366 10369 0
12077 -10366 -10368 -10374 0
12077 -10365 -10369 -10374 0
12077 -10365 -10368 -10375 0
c ((1<=(aux980 + aux981 + aux983))=tv=SATLiteral(12078))
-12078 -10365 -10368 -10374 0
12078 10374 0
12078 10368 0
12078 10369 0
12078 10365 0
12078 10365 10368 0
12078 10365 10369 0
12078 10366 0
12078 10366 10368 0
12078 10366 10369 0
c (((aux984 + aux985 + aux987)<=1)=tv=SATLiteral(12079))
-12079 10389 0
-12079 10382 10388 0
-12079 10383 0
-12079 10379 10388 0
-12079 10379 10382 0
-12079 10379 10383 0
-12079 10380 0
-12079 10380 10382 0
-12079 10380 10383 0
12079 -10380 -10382 -10388 0
12079 -10379 -10383 -10388 0
12079 -10379 -10382 -10389 0
c ((1<=(aux984 + aux985 + aux987))=tv=SATLiteral(12080))
-12080 -10379 -10382 -10388 0
12080 10388 0
12080 10382 0
12080 10383 0
12080 10379 0
12080 10379 10382 0
12080 10379 10383 0
12080 10380 0
12080 10380 10382 0
12080 10380 10383 0
c (((aux988 + aux989 + aux991)<=1)=tv=SATLiteral(12081))
-12081 10403 0
-12081 10396 10402 0
-12081 10397 0
-12081 10393 10402 0
-12081 10393 10396 0
-12081 10393 10397 0
-12081 10394 0
-12081 10394 10396 0
-12081 10394 10397 0
12081 -10394 -10396 -10402 0
12081 -10393 -10397 -10402 0
12081 -10393 -10396 -10403 0
c ((1<=(aux988 + aux989 + aux991))=tv=SATLiteral(12082))
-12082 -10393 -10396 -10402 0
12082 10402 0
12082 10396 0
12082 10397 0
12082 10393 0
12082 10393 10396 0
12082 10393 10397 0
12082 10394 0
12082 10394 10396 0
12082 10394 10397 0
c (((aux992 + aux993 + aux995)<=1)=tv=SATLiteral(12083))
-12083 10417 0
-12083 10410 10416 0
-12083 10411 0
-12083 10407 10416 0
-12083 10407 10410 0
-12083 10407 10411 0
-12083 10408 0
-12083 10408 10410 0
-12083 10408 10411 0
12083 -10408 -10410 -10416 0
12083 -10407 -10411 -10416 0
12083 -10407 -10410 -10417 0
c ((1<=(aux992 + aux993 + aux995))=tv=SATLiteral(12084))
-12084 -10407 -10410 -10416 0
12084 10416 0
12084 10410 0
12084 10411 0
12084 10407 0
12084 10407 10410 0
12084 10407 10411 0
12084 10408 0
12084 10408 10410 0
12084 10408 10411 0
c (((aux996 + aux997 + aux999)<=1)=tv=SATLiteral(12085))
-12085 10431 0
-12085 10424 10430 0
-12085 10425 0
-12085 10421 10430 0
-12085 10421 10424 0
-12085 10421 10425 0
-12085 10422 0
-12085 10422 10424 0
-12085 10422 10425 0
12085 -10422 -10424 -10430 0
12085 -10421 -10425 -10430 0
12085 -10421 -10424 -10431 0
c ((1<=(aux996 + aux997 + aux999))=tv=SATLiteral(12086))
-12086 -10421 -10424 -10430 0
12086 10430 0
12086 10424 0
12086 10425 0
12086 10421 0
12086 10421 10424 0
12086 10421 10425 0
12086 10422 0
12086 10422 10424 0
12086 10422 10425 0
c (((aux1005 + aux1006 + aux1008)<=1)=tv=SATLiteral(12087))
-12087 10460 0
-12087 10453 10459 0
-12087 10454 0
-12087 10450 10459 0
-12087 10450 10453 0
-12087 10450 10454 0
-12087 10451 0
-12087 10451 10453 0
-12087 10451 10454 0
12087 -10451 -10453 -10459 0
12087 -10450 -10454 -10459 0
12087 -10450 -10453 -10460 0
c ((1<=(aux1005 + aux1006 + aux1008))=tv=SATLiteral(12088))
-12088 -10450 -10453 -10459 0
12088 10459 0
12088 10453 0
12088 10454 0
12088 10450 0
12088 10450 10453 0
12088 10450 10454 0
12088 10451 0
12088 10451 10453 0
12088 10451 10454 0
c (((aux1009 + aux1010 + aux1012)<=1)=tv=SATLiteral(12089))
-12089 10474 0
-12089 10467 10473 0
-12089 10468 0
-12089 10464 10473 0
-12089 10464 10467 0
-12089 10464 10468 0
-12089 10465 0
-12089 10465 10467 0
-12089 10465 10468 0
12089 -10465 -10467 -10473 0
12089 -10464 -10468 -10473 0
12089 -10464 -10467 -10474 0
c ((1<=(aux1009 + aux1010 + aux1012))=tv=SATLiteral(12090))
-12090 -10464 -10467 -10473 0
12090 10473 0
12090 10467 0
12090 10468 0
12090 10464 0
12090 10464 10467 0
12090 10464 10468 0
12090 10465 0
12090 10465 10467 0
12090 10465 10468 0
c (((aux1013 + aux1014 + aux1016)<=1)=tv=SATLiteral(12091))
-12091 10488 0
-12091 10481 10487 0
-12091 10482 0
-12091 10478 10487 0
-12091 10478 10481 0
-12091 10478 10482 0
-12091 10479 0
-12091 10479 10481 0
-12091 10479 10482 0
12091 -10479 -10481 -10487 0
12091 -10478 -10482 -10487 0
12091 -10478 -10481 -10488 0
c ((1<=(aux1013 + aux1014 + aux1016))=tv=SATLiteral(12092))
-12092 -10478 -10481 -10487 0
12092 10487 0
12092 10481 0
12092 10482 0
12092 10478 0
12092 10478 10481 0
12092 10478 10482 0
12092 10479 0
12092 10479 10481 0
12092 10479 10482 0
c (((aux1017 + aux1018 + aux1020)<=1)=tv=SATLiteral(12093))
-12093 10502 0
-12093 10495 10501 0
-12093 10496 0
-12093 10492 10501 0
-12093 10492 10495 0
-12093 10492 10496 0
-12093 10493 0
-12093 10493 10495 0
-12093 10493 10496 0
12093 -10493 -10495 -10501 0
12093 -10492 -10496 -10501 0
12093 -10492 -10495 -10502 0
c ((1<=(aux1017 + aux1018 + aux1020))=tv=SATLiteral(12094))
-12094 -10492 -10495 -10501 0
12094 10501 0
12094 10495 0
12094 10496 0
12094 10492 0
12094 10492 10495 0
12094 10492 10496 0
12094 10493 0
12094 10493 10495 0
12094 10493 10496 0
c (((aux1021 + aux1022 + aux1024)<=1)=tv=SATLiteral(12095))
-12095 10516 0
-12095 10509 10515 0
-12095 10510 0
-12095 10506 10515 0
-12095 10506 10509 0
-12095 10506 10510 0
-12095 10507 0
-12095 10507 10509 0
-12095 10507 10510 0
12095 -10507 -10509 -10515 0
12095 -10506 -10510 -10515 0
12095 -10506 -10509 -10516 0
c ((1<=(aux1021 + aux1022 + aux1024))=tv=SATLiteral(12096))
-12096 -10506 -10509 -10515 0
12096 10515 0
12096 10509 0
12096 10510 0
12096 10506 0
12096 10506 10509 0
12096 10506 10510 0
12096 10507 0
12096 10507 10509 0
12096 10507 10510 0
c (((aux1025 + aux1026 + aux1028)<=1)=tv=SATLiteral(12097))
-12097 10530 0
-12097 10523 10529 0
-12097 10524 0
-12097 10520 10529 0
-12097 10520 10523 0
-12097 10520 10524 0
-12097 10521 0
-12097 10521 10523 0
-12097 10521 10524 0
12097 -10521 -10523 -10529 0
12097 -10520 -10524 -10529 0
12097 -10520 -10523 -10530 0
c ((1<=(aux1025 + aux1026 + aux1028))=tv=SATLiteral(12098))
-12098 -10520 -10523 -10529 0
12098 10529 0
12098 10523 0
12098 10524 0
12098 10520 0
12098 10520 10523 0
12098 10520 10524 0
12098 10521 0
12098 10521 10523 0
12098 10521 10524 0
c (((aux1029 + aux1030 + aux1032)<=1)=tv=SATLiteral(12099))
-12099 10544 0
-12099 10537 10543 0
-12099 10538 0
-12099 10534 10543 0
-12099 10534 10537 0
-12099 10534 10538 0
-12099 10535 0
-12099 10535 10537 0
-12099 10535 10538 0
12099 -10535 -10537 -10543 0
12099 -10534 -10538 -10543 0
12099 -10534 -10537 -10544 0
c ((1<=(aux1029 + aux1030 + aux1032))=tv=SATLiteral(12100))
-12100 -10534 -10537 -10543 0
12100 10543 0
12100 10537 0
12100 10538 0
12100 10534 0
12100 10534 10537 0
12100 10534 10538 0
12100 10535 0
12100 10535 10537 0
12100 10535 10538 0
c (((aux1043 + aux1044 + aux1046)<=1)=tv=SATLiteral(12101))
-12101 10588 0
-12101 10581 10587 0
-12101 10582 0
-12101 10578 10587 0
-12101 10578 10581 0
-12101 10578 10582 0
-12101 10579 0
-12101 10579 10581 0
-12101 10579 10582 0
12101 -10579 -10581 -10587 0
12101 -10578 -10582 -10587 0
12101 -10578 -10581 -10588 0
c ((1<=(aux1043 + aux1044 + aux1046))=tv=SATLiteral(12102))
-12102 -10578 -10581 -10587 0
12102 10587 0
12102 10581 0
12102 10582 0
12102 10578 0
12102 10578 10581 0
12102 10578 10582 0
12102 10579 0
12102 10579 10581 0
12102 10579 10582 0
c (((aux1047 + aux1048 + aux1050)<=1)=tv=SATLiteral(12103))
-12103 10602 0
-12103 10595 10601 0
-12103 10596 0
-12103 10592 10601 0
-12103 10592 10595 0
-12103 10592 10596 0
-12103 10593 0
-12103 10593 10595 0
-12103 10593 10596 0
12103 -10593 -10595 -10601 0
12103 -10592 -10596 -10601 0
12103 -10592 -10595 -10602 0
c ((1<=(aux1047 + aux1048 + aux1050))=tv=SATLiteral(12104))
-12104 -10592 -10595 -10601 0
12104 10601 0
12104 10595 0
12104 10596 0
12104 10592 0
12104 10592 10595 0
12104 10592 10596 0
12104 10593 0
12104 10593 10595 0
12104 10593 10596 0
c (((aux1051 + aux1052 + SATLiteral(320))<=1)=tv=SATLiteral(12105))
-12105 10610 0
-12105 10606 10609 0
-12105 10607 0
-12105 -320 10609 0
-12105 -320 10606 0
-12105 -320 10607 0
12105 -10606 -10609 0
12105 320 -10607 -10609 0
12105 320 -10606 -10610 0
c ((1<=(aux1051 + aux1052 + SATLiteral(320)))=tv=SATLiteral(12106))
-12106 320 -10606 -10609 0
12106 10609 0
12106 10606 0
12106 10607 0
12106 -320 0
12106 -320 10606 0
12106 -320 10607 0
c (((aux1053 + aux1054 + SATLiteral(321))<=1)=tv=SATLiteral(12107))
-12107 10616 0
-12107 10612 10615 0
-12107 10613 0
-12107 -321 10615 0
-12107 -321 10612 0
-12107 -321 10613 0
12107 -10612 -10615 0
12107 321 -10613 -10615 0
12107 321 -10612 -10616 0
c ((1<=(aux1053 + aux1054 + SATLiteral(321)))=tv=SATLiteral(12108))
-12108 321 -10612 -10615 0
12108 10615 0
12108 10612 0
12108 10613 0
12108 -321 0
12108 -321 10612 0
12108 -321 10613 0
c (((aux1055 + aux1056 + SATLiteral(322))<=1)=tv=SATLiteral(12109))
-12109 10622 0
-12109 10618 10621 0
-12109 10619 0
-12109 -322 10621 0
-12109 -322 10618 0
-12109 -322 10619 0
12109 -10618 -10621 0
12109 322 -10619 -10621 0
12109 322 -10618 -10622 0
c ((1<=(aux1055 + aux1056 + SATLiteral(322)))=tv=SATLiteral(12110))
-12110 322 -10618 -10621 0
12110 10621 0
12110 10618 0
12110 10619 0
12110 -322 0
12110 -322 10618 0
12110 -322 10619 0
c (((aux1057 + aux1058 + SATLiteral(323))<=1)=tv=SATLiteral(12111))
-12111 10628 0
-12111 10624 10627 0
-12111 10625 0
-12111 -323 10627 0
-12111 -323 10624 0
-12111 -323 10625 0
12111 -10624 -10627 0
12111 323 -10625 -10627 0
12111 323 -10624 -10628 0
c ((1<=(aux1057 + aux1058 + SATLiteral(323)))=tv=SATLiteral(12112))
-12112 323 -10624 -10627 0
12112 10627 0
12112 10624 0
12112 10625 0
12112 -323 0
12112 -323 10624 0
12112 -323 10625 0
c (((aux1071 + aux1072 + SATLiteral(328))<=1)=tv=SATLiteral(12113))
-12113 10662 0
-12113 10658 10661 0
-12113 10659 0
-12113 -328 10661 0
-12113 -328 10658 0
-12113 -328 10659 0
12113 -10658 -10661 0
12113 328 -10659 -10661 0
12113 328 -10658 -10662 0
c ((1<=(aux1071 + aux1072 + SATLiteral(328)))=tv=SATLiteral(12114))
-12114 328 -10658 -10661 0
12114 10661 0
12114 10658 0
12114 10659 0
12114 -328 0
12114 -328 10658 0
12114 -328 10659 0
c (((aux1073 + aux1074 + aux1076)<=1)=tv=SATLiteral(12115))
-12115 10674 0
-12115 10667 10673 0
-12115 10668 0
-12115 10664 10673 0
-12115 10664 10667 0
-12115 10664 10668 0
-12115 10665 0
-12115 10665 10667 0
-12115 10665 10668 0
12115 -10665 -10667 -10673 0
12115 -10664 -10668 -10673 0
12115 -10664 -10667 -10674 0
c ((1<=(aux1073 + aux1074 + aux1076))=tv=SATLiteral(12116))
-12116 -10664 -10667 -10673 0
12116 10673 0
12116 10667 0
12116 10668 0
12116 10664 0
12116 10664 10667 0
12116 10664 10668 0
12116 10665 0
12116 10665 10667 0
12116 10665 10668 0
c (((aux1077 + aux1078 + aux1080)<=1)=tv=SATLiteral(12117))
-12117 10688 0
-12117 10681 10687 0
-12117 10682 0
-12117 10678 10687 0
-12117 10678 10681 0
-12117 10678 10682 0
-12117 10679 0
-12117 10679 10681 0
-12117 10679 10682 0
12117 -10679 -10681 -10687 0
12117 -10678 -10682 -10687 0
12117 -10678 -10681 -10688 0
c ((1<=(aux1077 + aux1078 + aux1080))=tv=SATLiteral(12118))
-12118 -10678 -10681 -10687 0
12118 10687 0
12118 10681 0
12118 10682 0
12118 10678 0
12118 10678 10681 0
12118 10678 10682 0
12118 10679 0
12118 10679 10681 0
12118 10679 10682 0
c (((aux1086 + aux1087 + aux1089)<=1)=tv=SATLiteral(12119))
-12119 10717 0
-12119 10710 10716 0
-12119 10711 0
-12119 10707 10716 0
-12119 10707 10710 0
-12119 10707 10711 0
-12119 10708 0
-12119 10708 10710 0
-12119 10708 10711 0
12119 -10708 -10710 -10716 0
12119 -10707 -10711 -10716 0
12119 -10707 -10710 -10717 0
c ((1<=(aux1086 + aux1087 + aux1089))=tv=SATLiteral(12120))
-12120 -10707 -10710 -10716 0
12120 10716 0
12120 10710 0
12120 10711 0
12120 10707 0
12120 10707 10710 0
12120 10707 10711 0
12120 10708 0
12120 10708 10710 0
12120 10708 10711 0
c (((aux1090 + aux1091 + aux1093)<=1)=tv=SATLiteral(12121))
-12121 10731 0
-12121 10724 10730 0
-12121 10725 0
-12121 10721 10730 0
-12121 10721 10724 0
-12121 10721 10725 0
-12121 10722 0
-12121 10722 10724 0
-12121 10722 10725 0
12121 -10722 -10724 -10730 0
12121 -10721 -10725 -10730 0
12121 -10721 -10724 -10731 0
c ((1<=(aux1090 + aux1091 + aux1093))=tv=SATLiteral(12122))
-12122 -10721 -10724 -10730 0
12122 10730 0
12122 10724 0
12122 10725 0
12122 10721 0
12122 10721 10724 0
12122 10721 10725 0
12122 10722 0
12122 10722 10724 0
12122 10722 10725 0
c (((aux1094 + aux1095 + aux1097)<=1)=tv=SATLiteral(12123))
-12123 10745 0
-12123 10738 10744 0
-12123 10739 0
-12123 10735 10744 0
-12123 10735 10738 0
-12123 10735 10739 0
-12123 10736 0
-12123 10736 10738 0
-12123 10736 10739 0
12123 -10736 -10738 -10744 0
12123 -10735 -10739 -10744 0
12123 -10735 -10738 -10745 0
c ((1<=(aux1094 + aux1095 + aux1097))=tv=SATLiteral(12124))
-12124 -10735 -10738 -10744 0
12124 10744 0
12124 10738 0
12124 10739 0
12124 10735 0
12124 10735 10738 0
12124 10735 10739 0
12124 10736 0
12124 10736 10738 0
12124 10736 10739 0
c (((aux1103 + aux1104 + aux1106)<=1)=tv=SATLiteral(12125))
-12125 10774 0
-12125 10767 10773 0
-12125 10768 0
-12125 10764 10773 0
-12125 10764 10767 0
-12125 10764 10768 0
-12125 10765 0
-12125 10765 10767 0
-12125 10765 10768 0
12125 -10765 -10767 -10773 0
12125 -10764 -10768 -10773 0
12125 -10764 -10767 -10774 0
c ((1<=(aux1103 + aux1104 + aux1106))=tv=SATLiteral(12126))
-12126 -10764 -10767 -10773 0
12126 10773 0
12126 10767 0
12126 10768 0
12126 10764 0
12126 10764 10767 0
12126 10764 10768 0
12126 10765 0
12126 10765 10767 0
12126 10765 10768 0
c (((aux1107 + aux1108 + aux1110)<=1)=tv=SATLiteral(12127))
-12127 10788 0
-12127 10781 10787 0
-12127 10782 0
-12127 10778 10787 0
-12127 10778 10781 0
-12127 10778 10782 0
-12127 10779 0
-12127 10779 10781 0
-12127 10779 10782 0
12127 -10779 -10781 -10787 0
12127 -10778 -10782 -10787 0
12127 -10778 -10781 -10788 0
c ((1<=(aux1107 + aux1108 + aux1110))=tv=SATLiteral(12128))
-12128 -10778 -10781 -10787 0
12128 10787 0
12128 10781 0
12128 10782 0
12128 10778 0
12128 10778 10781 0
12128 10778 10782 0
12128 10779 0
12128 10779 10781 0
12128 10779 10782 0
c (((aux1111 + aux1112 + aux1114)<=1)=tv=SATLiteral(12129))
-12129 10802 0
-12129 10795 10801 0
-12129 10796 0
-12129 10792 10801 0
-12129 10792 10795 0
-12129 10792 10796 0
-12129 10793 0
-12129 10793 10795 0
-12129 10793 10796 0
12129 -10793 -10795 -10801 0
12129 -10792 -10796 -10801 0
12129 -10792 -10795 -10802 0
c ((1<=(aux1111 + aux1112 + aux1114))=tv=SATLiteral(12130))
-12130 -10792 -10795 -10801 0
12130 10801 0
12130 10795 0
12130 10796 0
12130 10792 0
12130 10792 10795 0
12130 10792 10796 0
12130 10793 0
12130 10793 10795 0
12130 10793 10796 0
c (((aux1120 + aux1121 + aux1123)<=1)=tv=SATLiteral(12131))
-12131 10831 0
-12131 10824 10830 0
-12131 10825 0
-12131 10821 10830 0
-12131 10821 10824 0
-12131 10821 10825 0
-12131 10822 0
-12131 10822 10824 0
-12131 10822 10825 0
12131 -10822 -10824 -10830 0
12131 -10821 -10825 -10830 0
12131 -10821 -10824 -10831 0
c ((1<=(aux1120 + aux1121 + aux1123))=tv=SATLiteral(12132))
-12132 -10821 -10824 -10830 0
12132 10830 0
12132 10824 0
12132 10825 0
12132 10821 0
12132 10821 10824 0
12132 10821 10825 0
12132 10822 0
12132 10822 10824 0
12132 10822 10825 0
c (((aux1124 + aux1125 + aux1127)<=1)=tv=SATLiteral(12133))
-12133 10845 0
-12133 10838 10844 0
-12133 10839 0
-12133 10835 10844 0
-12133 10835 10838 0
-12133 10835 10839 0
-12133 10836 0
-12133 10836 10838 0
-12133 10836 10839 0
12133 -10836 -10838 -10844 0
12133 -10835 -10839 -10844 0
12133 -10835 -10838 -10845 0
c ((1<=(aux1124 + aux1125 + aux1127))=tv=SATLiteral(12134))
-12134 -10835 -10838 -10844 0
12134 10844 0
12134 10838 0
12134 10839 0
12134 10835 0
12134 10835 10838 0
12134 10835 10839 0
12134 10836 0
12134 10836 10838 0
12134 10836 10839 0
c (((aux1128 + aux1129 + aux1131)<=1)=tv=SATLiteral(12135))
-12135 10859 0
-12135 10852 10858 0
-12135 10853 0
-12135 10849 10858 0
-12135 10849 10852 0
-12135 10849 10853 0
-12135 10850 0
-12135 10850 10852 0
-12135 10850 10853 0
12135 -10850 -10852 -10858 0
12135 -10849 -10853 -10858 0
12135 -10849 -10852 -10859 0
c ((1<=(aux1128 + aux1129 + aux1131))=tv=SATLiteral(12136))
-12136 -10849 -10852 -10858 0
12136 10858 0
12136 10852 0
12136 10853 0
12136 10849 0
12136 10849 10852 0
12136 10849 10853 0
12136 10850 0
12136 10850 10852 0
12136 10850 10853 0
c (((aux1132 + aux1133 + aux1135)<=1)=tv=SATLiteral(12137))
-12137 10873 0
-12137 10866 10872 0
-12137 10867 0
-12137 10863 10872 0
-12137 10863 10866 0
-12137 10863 10867 0
-12137 10864 0
-12137 10864 10866 0
-12137 10864 10867 0
12137 -10864 -10866 -10872 0
12137 -10863 -10867 -10872 0
12137 -10863 -10866 -10873 0
c ((1<=(aux1132 + aux1133 + aux1135))=tv=SATLiteral(12138))
-12138 -10863 -10866 -10872 0
12138 10872 0
12138 10866 0
12138 10867 0
12138 10863 0
12138 10863 10866 0
12138 10863 10867 0
12138 10864 0
12138 10864 10866 0
12138 10864 10867 0
c (((aux1141 + aux1142 + aux1144)<=1)=tv=SATLiteral(12139))
-12139 10902 0
-12139 10895 10901 0
-12139 10896 0
-12139 10892 10901 0
-12139 10892 10895 0
-12139 10892 10896 0
-12139 10893 0
-12139 10893 10895 0
-12139 10893 10896 0
12139 -10893 -10895 -10901 0
12139 -10892 -10896 -10901 0
12139 -10892 -10895 -10902 0
c ((1<=(aux1141 + aux1142 + aux1144))=tv=SATLiteral(12140))
-12140 -10892 -10895 -10901 0
12140 10901 0
12140 10895 0
12140 10896 0
12140 10892 0
12140 10892 10895 0
12140 10892 10896 0
12140 10893 0
12140 10893 10895 0
12140 10893 10896 0
c (((aux1145 + aux1146 + aux1148)<=1)=tv=SATLiteral(12141))
-12141 10916 0
-12141 10909 10915 0
-12141 10910 0
-12141 10906 10915 0
-12141 10906 10909 0
-12141 10906 10910 0
-12141 10907 0
-12141 10907 10909 0
-12141 10907 10910 0
12141 -10907 -10909 -10915 0
12141 -10906 -10910 -10915 0
12141 -10906 -10909 -10916 0
c ((1<=(aux1145 + aux1146 + aux1148))=tv=SATLiteral(12142))
-12142 -10906 -10909 -10915 0
12142 10915 0
12142 10909 0
12142 10910 0
12142 10906 0
12142 10906 10909 0
12142 10906 10910 0
12142 10907 0
12142 10907 10909 0
12142 10907 10910 0
c ((max_left_00001_00001_00001=max_left_00001_00001_00002)=tv=SATLiteral(12143))
-1034 1049 -12143 0
-1036 1051 -12143 0
-1038 1053 -12143 0
-1040 1055 -12143 0
-1042 1057 -12143 0
-1044 1059 -12143 0
-1046 1061 -12143 0
-1048 1063 -12143 0
1047 -1062 -12143 0
-1049 1034 -12143 0
-1051 1036 -12143 0
-1053 1038 -12143 0
-1055 1040 -12143 0
-1057 1042 -12143 0
-1059 1044 -12143 0
-1061 1046 -12143 0
-1063 1048 -12143 0
1062 -1047 -12143 0
-1034 -1049 12143 0
-1036 -1051 12143 0
-1038 -1053 12143 0
-1040 -1055 12143 0
-1042 -1057 12143 0
-1044 -1059 12143 0
-1046 -1061 12143 0
-1048 -1063 12143 0
1047 1062 12143 0
c ((variant_fields_00001_00001_00002=max_left_00001_00001_00002)=tv=SATLiteral(12144))
-4168 1049 -12144 0
-4170 1051 -12144 0
-4172 1053 -12144 0
-4174 1055 -12144 0
-4176 1057 -12144 0
-4178 1059 -12144 0
-4180 1061 -12144 0
-4182 1063 -12144 0
4181 -1062 -12144 0
-1049 4168 -12144 0
-1051 4170 -12144 0
-1053 4172 -12144 0
-1055 4174 -12144 0
-1057 4176 -12144 0
-1059 4178 -12144 0
-1061 4180 -12144 0
-1063 4182 -12144 0
1062 -4181 -12144 0
-4168 -1049 12144 0
-4170 -1051 12144 0
-4172 -1053 12144 0
-4174 -1055 12144 0
-4176 -1057 12144 0
-4178 -1059 12144 0
-4180 -1061 12144 0
-4182 -1063 12144 0
4181 1062 12144 0
c ((max_left_00001_00001_00002=max_left_00001_00001_00003)=tv=SATLiteral(12145))
-1049 1064 -12145 0
-1051 1066 -12145 0
-1053 1068 -12145 0
-1055 1070 -12145 0
-1057 1072 -12145 0
-1059 1074 -12145 0
-1061 1076 -12145 0
-1063 1078 -12145 0
1062 -1077 -12145 0
-1064 1049 -12145 0
-1066 1051 -12145 0
-1068 1053 -12145 0
-1070 1055 -12145 0
-1072 1057 -12145 0
-1074 1059 -12145 0
-1076 1061 -12145 0
-1078 1063 -12145 0
1077 -1062 -12145 0
-1049 -1064 12145 0
-1051 -1066 12145 0
-1053 -1068 12145 0
-1055 -1070 12145 0
-1057 -1072 12145 0
-1059 -1074 12145 0
-1061 -1076 12145 0
-1063 -1078 12145 0
1062 1077 12145 0
c ((variant_fields_00001_00001_00003=max_left_00001_00001_00003)=tv=SATLiteral(12146))
-4183 1064 -12146 0
-4185 1066 -12146 0
-4187 1068 -12146 0
-4189 1070 -12146 0
-4191 1072 -12146 0
-4193 1074 -12146 0
-4195 1076 -12146 0
-4197 1078 -12146 0
4196 -1077 -12146 0
-1064 4183 -12146 0
-1066 4185 -12146 0
-1068 4187 -12146 0
-1070 4189 -12146 0
-1072 4191 -12146 0
-1074 4193 -12146 0
-1076 4195 -12146 0
-1078 4197 -12146 0
1077 -4196 -12146 0
-4183 -1064 12146 0
-4185 -1066 12146 0
-4187 -1068 12146 0
-4189 -1070 12146 0
-4191 -1072 12146 0
-4193 -1074 12146 0
-4195 -1076 12146 0
-4197 -1078 12146 0
4196 1077 12146 0
c ((max_left_00001_00001_00003=max_left_00001_00001_00004)=tv=SATLiteral(12147))
-1064 1079 -12147 0
-1066 1081 -12147 0
-1068 1083 -12147 0
-1070 1085 -12147 0
-1072 1087 -12147 0
-1074 1089 -12147 0
-1076 1091 -12147 0
-1078 1093 -12147 0
1077 -1092 -12147 0
-1079 1064 -12147 0
-1081 1066 -12147 0
-1083 1068 -12147 0
-1085 1070 -12147 0
-1087 1072 -12147 0
-1089 1074 -12147 0
-1091 1076 -12147 0
-1093 1078 -12147 0
1092 -1077 -12147 0
-1064 -1079 12147 0
-1066 -1081 12147 0
-1068 -1083 12147 0
-1070 -1085 12147 0
-1072 -1087 12147 0
-1074 -1089 12147 0
-1076 -1091 12147 0
-1078 -1093 12147 0
1077 1092 12147 0
c ((variant_fields_00001_00001_00004=max_left_00001_00001_00004)=tv=SATLiteral(12148))
-4198 1079 -12148 0
-4200 1081 -12148 0
-4202 1083 -12148 0
-4204 1085 -12148 0
-4206 1087 -12148 0
-4208 1089 -12148 0
-4210 1091 -12148 0
-4212 1093 -12148 0
4211 -1092 -12148 0
-1079 4198 -12148 0
-1081 4200 -12148 0
-1083 4202 -12148 0
-1085 4204 -12148 0
-1087 4206 -12148 0
-1089 4208 -12148 0
-1091 4210 -12148 0
-1093 4212 -12148 0
1092 -4211 -12148 0
-4198 -1079 12148 0
-4200 -1081 12148 0
-4202 -1083 12148 0
-4204 -1085 12148 0
-4206 -1087 12148 0
-4208 -1089 12148 0
-4210 -1091 12148 0
-4212 -1093 12148 0
4211 1092 12148 0
c ((max_left_00001_00001_00004=max_left_00001_00001_00005)=tv=SATLiteral(12149))
-1079 1094 -12149 0
-1081 1096 -12149 0
-1083 1098 -12149 0
-1085 1100 -12149 0
-1087 1102 -12149 0
-1089 1104 -12149 0
-1091 1106 -12149 0
-1093 1108 -12149 0
1092 -1107 -12149 0
-1094 1079 -12149 0
-1096 1081 -12149 0
-1098 1083 -12149 0
-1100 1085 -12149 0
-1102 1087 -12149 0
-1104 1089 -12149 0
-1106 1091 -12149 0
-1108 1093 -12149 0
1107 -1092 -12149 0
-1079 -1094 12149 0
-1081 -1096 12149 0
-1083 -1098 12149 0
-1085 -1100 12149 0
-1087 -1102 12149 0
-1089 -1104 12149 0
-1091 -1106 12149 0
-1093 -1108 12149 0
1092 1107 12149 0
c ((variant_fields_00001_00001_00005=max_left_00001_00001_00005)=tv=SATLiteral(12150))
-4213 1094 -12150 0
-4215 1096 -12150 0
-4217 1098 -12150 0
-4219 1100 -12150 0
-4221 1102 -12150 0
-4223 1104 -12150 0
-4225 1106 -12150 0
-4227 1108 -12150 0
4226 -1107 -12150 0
-1094 4213 -12150 0
-1096 4215 -12150 0
-1098 4217 -12150 0
-1100 4219 -12150 0
-1102 4221 -12150 0
-1104 4223 -12150 0
-1106 4225 -12150 0
-1108 4227 -12150 0
1107 -4226 -12150 0
-4213 -1094 12150 0
-4215 -1096 12150 0
-4217 -1098 12150 0
-4219 -1100 12150 0
-4221 -1102 12150 0
-4223 -1104 12150 0
-4225 -1106 12150 0
-4227 -1108 12150 0
4226 1107 12150 0
c ((max_left_00001_00001_00005=max_left_00001_00001_00006)=tv=SATLiteral(12151))
-1094 1109 -12151 0
-1096 1111 -12151 0
-1098 1113 -12151 0
-1100 1115 -12151 0
-1102 1117 -12151 0
-1104 1119 -12151 0
-1106 1121 -12151 0
-1108 1123 -12151 0
1107 -1122 -12151 0
-1109 1094 -12151 0
-1111 1096 -12151 0
-1113 1098 -12151 0
-1115 1100 -12151 0
-1117 1102 -12151 0
-1119 1104 -12151 0
-1121 1106 -12151 0
-1123 1108 -12151 0
1122 -1107 -12151 0
-1094 -1109 12151 0
-1096 -1111 12151 0
-1098 -1113 12151 0
-1100 -1115 12151 0
-1102 -1117 12151 0
-1104 -1119 12151 0
-1106 -1121 12151 0
-1108 -1123 12151 0
1107 1122 12151 0
c ((variant_fields_00001_00001_00006=max_left_00001_00001_00006)=tv=SATLiteral(12152))
-4228 1109 -12152 0
-4230 1111 -12152 0
-4232 1113 -12152 0
-4234 1115 -12152 0
-4236 1117 -12152 0
-4238 1119 -12152 0
-4240 1121 -12152 0
-4242 1123 -12152 0
4241 -1122 -12152 0
-1109 4228 -12152 0
-1111 4230 -12152 0
-1113 4232 -12152 0
-1115 4234 -12152 0
-1117 4236 -12152 0
-1119 4238 -12152 0
-1121 4240 -12152 0
-1123 4242 -12152 0
1122 -4241 -12152 0
-4228 -1109 12152 0
-4230 -1111 12152 0
-4232 -1113 12152 0
-4234 -1115 12152 0
-4236 -1117 12152 0
-4238 -1119 12152 0
-4240 -1121 12152 0
-4242 -1123 12152 0
4241 1122 12152 0
c ((max_left_00001_00001_00006=max_left_00001_00001_00007)=tv=SATLiteral(12153))
-1109 -12153 0
-1111 -12153 0
-1113 -12153 0
-1115 -12153 0
-1117 1124 -12153 0
-1119 1126 -12153 0
-1121 1128 -12153 0
-1123 1130 -12153 0
1122 -1129 -12153 0
-1124 1117 -12153 0
-1126 1119 -12153 0
-1128 1121 -12153 0
-1130 1123 -12153 0
1129 -1122 -12153 0
-1117 -1124 12153 0
-1119 -1126 12153 0
-1121 -1128 12153 0
-1123 -1130 12153 0
1122 1129 12153 0
c ((variant_fields_00001_00001_00007=max_left_00001_00001_00007)=tv=SATLiteral(12154))
-4243 1124 -12154 0
-1124 4243 -12154 0
-1126 -12154 0
-1128 -12154 0
-1130 -12154 0
1129 -12154 0
-4243 -1124 12154 0
c ((max_left_00001_00001_00007=max_left_00001_00001_00008)=tv=SATLiteral(12155))
-1124 1131 -12155 0
-1126 1133 -12155 0
-1128 1135 -12155 0
-1130 1137 -12155 0
1129 -1136 -12155 0
-1131 1124 -12155 0
-1133 1126 -12155 0
-1135 1128 -12155 0
-1137 1130 -12155 0
1136 -1129 -12155 0
-1124 -1131 12155 0
-1126 -1133 12155 0
-1128 -1135 12155 0
-1130 -1137 12155 0
1129 1136 12155 0
c ((variant_fields_00001_00001_00008=max_left_00001_00001_00008)=tv=SATLiteral(12156))
-4244 -12156 0
-4246 -12156 0
-4248 -12156 0
-4250 -12156 0
-4252 1131 -12156 0
-4254 1133 -12156 0
-4256 1135 -12156 0
-4258 1137 -12156 0
4257 -1136 -12156 0
-1131 4252 -12156 0
-1133 4254 -12156 0
-1135 4256 -12156 0
-1137 4258 -12156 0
1136 -4257 -12156 0
-4252 -1131 12156 0
-4254 -1133 12156 0
-4256 -1135 12156 0
-4258 -1137 12156 0
4257 1136 12156 0
c ((max_left_00001_00001_00008=max_left_00001_00001_00009)=tv=SATLiteral(12157))
-1131 1138 -12157 0
-1133 1140 -12157 0
-1135 1142 -12157 0
-1137 1144 -12157 0
1136 -1143 -12157 0
-1138 1131 -12157 0
-1140 1133 -12157 0
-1142 1135 -12157 0
-1144 1137 -12157 0
1143 -1136 -12157 0
-1131 -1138 12157 0
-1133 -1140 12157 0
-1135 -1142 12157 0
-1137 -1144 12157 0
1136 1143 12157 0
c ((variant_fields_00001_00001_00009=max_left_00001_00001_00009)=tv=SATLiteral(12158))
-4259 -12158 0
-4261 -12158 0
-4263 -12158 0
-4265 -12158 0
-4267 1138 -12158 0
-4269 1140 -12158 0
-4271 1142 -12158 0
-4273 1144 -12158 0
4272 -1143 -12158 0
-1138 4267 -12158 0
-1140 4269 -12158 0
-1142 4271 -12158 0
-1144 4273 -12158 0
1143 -4272 -12158 0
-4267 -1138 12158 0
-4269 -1140 12158 0
-4271 -1142 12158 0
-4273 -1144 12158 0
4272 1143 12158 0
c ((max_left_00001_00002_00001=max_left_00001_00002_00002)=tv=SATLiteral(12159))
-1146 1161 -12159 0
-1148 1163 -12159 0
-1150 1165 -12159 0
-1152 1167 -12159 0
-1154 1169 -12159 0
-1156 1171 -12159 0
-1158 1173 -12159 0
-1160 1175 -12159 0
1159 -1174 -12159 0
-1161 1146 -12159 0
-1163 1148 -12159 0
-1165 1150 -12159 0
-1167 1152 -12159 0
-1169 1154 -12159 0
-1171 1156 -12159 0
-1173 1158 -12159 0
-1175 1160 -12159 0
1174 -1159 -12159 0
-1146 -1161 12159 0
-1148 -1163 12159 0
-1150 -1165 12159 0
-1152 -1167 12159 0
-1154 -1169 12159 0
-1156 -1171 12159 0
-1158 -1173 12159 0
-1160 -1175 12159 0
1159 1174 12159 0
c ((variant_fields_00001_00002_00002=max_left_00001_00002_00002)=tv=SATLiteral(12160))
-4289 1161 -12160 0
-4291 1163 -12160 0
-4293 1165 -12160 0
-4295 1167 -12160 0
-4297 1169 -12160 0
-4299 1171 -12160 0
-4301 1173 -12160 0
-4303 1175 -12160 0
4302 -1174 -12160 0
-1161 4289 -12160 0
-1163 4291 -12160 0
-1165 4293 -12160 0
-1167 4295 -12160 0
-1169 4297 -12160 0
-1171 4299 -12160 0
-1173 4301 -12160 0
-1175 4303 -12160 0
1174 -4302 -12160 0
-4289 -1161 12160 0
-4291 -1163 12160 0
-4293 -1165 12160 0
-4295 -1167 12160 0
-4297 -1169 12160 0
-4299 -1171 12160 0
-4301 -1173 12160 0
-4303 -1175 12160 0
4302 1174 12160 0
c ((max_left_00001_00002_00002=max_left_00001_00002_00003)=tv=SATLiteral(12161))
-1161 1176 -12161 0
-1163 1178 -12161 0
-1165 1180 -12161 0
-1167 1182 -12161 0
-1169 1184 -12161 0
-1171 1186 -12161 0
-1173 1188 -12161 0
-1175 1190 -12161 0
1174 -1189 -12161 0
-1176 1161 -12161 0
-1178 1163 -12161 0
-1180 1165 -12161 0
-1182 1167 -12161 0
-1184 1169 -12161 0
-1186 1171 -12161 0
-1188 1173 -12161 0
-1190 1175 -12161 0
1189 -1174 -12161 0
-1161 -1176 12161 0
-1163 -1178 12161 0
-1165 -1180 12161 0
-1167 -1182 12161 0
-1169 -1184 12161 0
-1171 -1186 12161 0
-1173 -1188 12161 0
-1175 -1190 12161 0
1174 1189 12161 0
c ((variant_fields_00001_00002_00003=max_left_00001_00002_00003)=tv=SATLiteral(12162))
-4304 1176 -12162 0
-4306 1178 -12162 0
-4308 1180 -12162 0
-4310 1182 -12162 0
-4312 1184 -12162 0
-4314 1186 -12162 0
-4316 1188 -12162 0
-4318 1190 -12162 0
4317 -1189 -12162 0
-1176 4304 -12162 0
-1178 4306 -12162 0
-1180 4308 -12162 0
-1182 4310 -12162 0
-1184 4312 -12162 0
-1186 4314 -12162 0
-1188 4316 -12162 0
-1190 4318 -12162 0
1189 -4317 -12162 0
-4304 -1176 12162 0
-4306 -1178 12162 0
-4308 -1180 12162 0
-4310 -1182 12162 0
-4312 -1184 12162 0
-4314 -1186 12162 0
-4316 -1188 12162 0
-4318 -1190 12162 0
4317 1189 12162 0
c ((max_left_00001_00002_00003=max_left_00001_00002_00004)=tv=SATLiteral(12163))
-1176 1191 -12163 0
-1178 1193 -12163 0
-1180 1195 -12163 0
-1182 1197 -12163 0
-1184 1199 -12163 0
-1186 1201 -12163 0
-1188 1203 -12163 0
-1190 1205 -12163 0
1189 -1204 -12163 0
-1191 1176 -12163 0
-1193 1178 -12163 0
-1195 1180 -12163 0
-1197 1182 -12163 0
-1199 1184 -12163 0
-1201 1186 -12163 0
-1203 1188 -12163 0
-1205 1190 -12163 0
1204 -1189 -12163 0
-1176 -1191 12163 0
-1178 -1193 12163 0
-1180 -1195 12163 0
-1182 -1197 12163 0
-1184 -1199 12163 0
-1186 -1201 12163 0
-1188 -1203 12163 0
-1190 -1205 12163 0
1189 1204 12163 0
c ((variant_fields_00001_00002_00004=max_left_00001_00002_00004)=tv=SATLiteral(12164))
-4319 1191 -12164 0
-4321 1193 -12164 0
-4323 1195 -12164 0
-4325 1197 -12164 0
-4327 1199 -12164 0
-4329 1201 -12164 0
-4331 1203 -12164 0
-4333 1205 -12164 0
4332 -1204 -12164 0
-1191 4319 -12164 0
-1193 4321 -12164 0
-1195 4323 -12164 0
-1197 4325 -12164 0
-1199 4327 -12164 0
-1201 4329 -12164 0
-1203 4331 -12164 0
-1205 4333 -12164 0
1204 -4332 -12164 0
-4319 -1191 12164 0
-4321 -1193 12164 0
-4323 -1195 12164 0
-4325 -1197 12164 0
-4327 -1199 12164 0
-4329 -1201 12164 0
-4331 -1203 12164 0
-4333 -1205 12164 0
4332 1204 12164 0
c ((max_left_00001_00002_00004=max_left_00001_00002_00005)=tv=SATLiteral(12165))
-1191 1206 -12165 0
-1193 1208 -12165 0
-1195 1210 -12165 0
-1197 1212 -12165 0
-1199 1214 -12165 0
-1201 1216 -12165 0
-1203 1218 -12165 0
-1205 1220 -12165 0
1204 -1219 -12165 0
-1206 1191 -12165 0
-1208 1193 -12165 0
-1210 1195 -12165 0
-1212 1197 -12165 0
-1214 1199 -12165 0
-1216 1201 -12165 0
-1218 1203 -12165 0
-1220 1205 -12165 0
1219 -1204 -12165 0
-1191 -1206 12165 0
-1193 -1208 12165 0
-1195 -1210 12165 0
-1197 -1212 12165 0
-1199 -1214 12165 0
-1201 -1216 12165 0
-1203 -1218 12165 0
-1205 -1220 12165 0
1204 1219 12165 0
c ((variant_fields_00001_00002_00005=max_left_00001_00002_00005)=tv=SATLiteral(12166))
-4334 1206 -12166 0
-4336 1208 -12166 0
-4338 1210 -12166 0
-4340 1212 -12166 0
-4342 1214 -12166 0
-4344 1216 -12166 0
-4346 1218 -12166 0
-4348 1220 -12166 0
4347 -1219 -12166 0
-1206 4334 -12166 0
-1208 4336 -12166 0
-1210 4338 -12166 0
-1212 4340 -12166 0
-1214 4342 -12166 0
-1216 4344 -12166 0
-1218 4346 -12166 0
-1220 4348 -12166 0
1219 -4347 -12166 0
-4334 -1206 12166 0
-4336 -1208 12166 0
-4338 -1210 12166 0
-4340 -1212 12166 0
-4342 -1214 12166 0
-4344 -1216 12166 0
-4346 -1218 12166 0
-4348 -1220 12166 0
4347 1219 12166 0
c ((max_left_00001_00002_00005=max_left_00001_00002_00006)=tv=SATLiteral(12167))
-1206 1221 -12167 0
-1208 1223 -12167 0
-1210 1225 -12167 0
-1212 1227 -12167 0
-1214 1229 -12167 0
-1216 1231 -12167 0
-1218 1233 -12167 0
-1220 1235 -12167 0
1219 -1234 -12167 0
-1221 1206 -12167 0
-1223 1208 -12167 0
-1225 1210 -12167 0
-1227 1212 -12167 0
-1229 1214 -12167 0
-1231 1216 -12167 0
-1233 1218 -12167 0
-1235 1220 -12167 0
1234 -1219 -12167 0
-1206 -1221 12167 0
-1208 -1223 12167 0
-1210 -1225 12167 0
-1212 -1227 12167 0
-1214 -1229 12167 0
-1216 -1231 12167 0
-1218 -1233 12167 0
-1220 -1235 12167 0
1219 1234 12167 0
c ((variant_fields_00001_00002_00006=max_left_00001_00002_00006)=tv=SATLiteral(12168))
-4349 1221 -12168 0
-4351 1223 -12168 0
-4353 1225 -12168 0
-4355 1227 -12168 0
-4357 1229 -12168 0
-4359 1231 -12168 0
-4361 1233 -12168 0
-4363 1235 -12168 0
4362 -1234 -12168 0
-1221 4349 -12168 0
-1223 4351 -12168 0
-1225 4353 -12168 0
-1227 4355 -12168 0
-1229 4357 -12168 0
-1231 4359 -12168 0
-1233 4361 -12168 0
-1235 4363 -12168 0
1234 -4362 -12168 0
-4349 -1221 12168 0
-4351 -1223 12168 0
-4353 -1225 12168 0
-4355 -1227 12168 0
-4357 -1229 12168 0
-4359 -1231 12168 0
-4361 -1233 12168 0
-4363 -1235 12168 0
4362 1234 12168 0
c ((max_left_00001_00002_00006=max_left_00001_00002_00007)=tv=SATLiteral(12169))
-1221 1236 -12169 0
-1223 1238 -12169 0
-1225 1240 -12169 0
-1227 1242 -12169 0
-1229 1244 -12169 0
-1231 1246 -12169 0
-1233 1248 -12169 0
-1235 1250 -12169 0
1234 -1249 -12169 0
-1236 1221 -12169 0
-1238 1223 -12169 0
-1240 1225 -12169 0
-1242 1227 -12169 0
-1244 1229 -12169 0
-1246 1231 -12169 0
-1248 1233 -12169 0
-1250 1235 -12169 0
1249 -1234 -12169 0
-1221 -1236 12169 0
-1223 -1238 12169 0
-1225 -1240 12169 0
-1227 -1242 12169 0
-1229 -1244 12169 0
-1231 -1246 12169 0
-1233 -1248 12169 0
-1235 -1250 12169 0
1234 1249 12169 0
c ((variant_fields_00001_00002_00007=max_left_00001_00002_00007)=tv=SATLiteral(12170))
-4364 1236 -12170 0
-4366 1238 -12170 0
-4368 1240 -12170 0
-4370 1242 -12170 0
-4372 1244 -12170 0
-4374 1246 -12170 0
-4376 1248 -12170 0
-4378 1250 -12170 0
4377 -1249 -12170 0
-1236 4364 -12170 0
-1238 4366 -12170 0
-1240 4368 -12170 0
-1242 4370 -12170 0
-1244 4372 -12170 0
-1246 4374 -12170 0
-1248 4376 -12170 0
-1250 4378 -12170 0
1249 -4377 -12170 0
-4364 -1236 12170 0
-4366 -1238 12170 0
-4368 -1240 12170 0
-4370 -1242 12170 0
-4372 -1244 12170 0
-4374 -1246 12170 0
-4376 -1248 12170 0
-4378 -1250 12170 0
4377 1249 12170 0
c ((max_left_00001_00002_00007=max_left_00001_00002_00008)=tv=SATLiteral(12171))
-1236 -12171 0
-1238 -12171 0
-1240 -12171 0
-1242 -12171 0
-1244 -12171 0
-1246 -12171 0
-1248 1251 -12171 0
-1250 1253 -12171 0
1249 -1252 -12171 0
-1251 1248 -12171 0
-1253 1250 -12171 0
1252 -1249 -12171 0
-1248 -1251 12171 0
-1250 -1253 12171 0
1249 1252 12171 0
c ((variant_fields_00001_00002_00008=max_left_00001_00002_00008)=tv=SATLiteral(12172))
-4379 1251 -12172 0
-1251 4379 -12172 0
-1253 -12172 0
1252 -12172 0
-4379 -1251 12172 0
c ((max_left_00001_00002_00008=max_left_00001_00002_00009)=tv=SATLiteral(12173))
-1251 1254 -12173 0
-1253 1256 -12173 0
1252 -1255 -12173 0
-1254 1251 -12173 0
-1256 1253 -12173 0
1255 -1252 -12173 0
-1251 -1254 12173 0
-1253 -1256 12173 0
1252 1255 12173 0
c ((variant_fields_00001_00002_00009=max_left_00001_00002_00009)=tv=SATLiteral(12174))
-4380 -12174 0
-4382 -12174 0
-4384 -12174 0
-4386 -12174 0
-4388 -12174 0
-4390 -12174 0
-4392 1254 -12174 0
-4394 1256 -12174 0
4393 -1255 -12174 0
-1254 4392 -12174 0
-1256 4394 -12174 0
1255 -4393 -12174 0
-4392 -1254 12174 0
-4394 -1256 12174 0
4393 1255 12174 0
c ((max_left_00001_00003_00001=max_left_00001_00003_00002)=tv=SATLiteral(12175))
-1258 1273 -12175 0
-1260 1275 -12175 0
-1262 1277 -12175 0
-1264 1279 -12175 0
-1266 1281 -12175 0
-1268 1283 -12175 0
-1270 1285 -12175 0
-1272 1287 -12175 0
1271 -1286 -12175 0
-1273 1258 -12175 0
-1275 1260 -12175 0
-1277 1262 -12175 0
-1279 1264 -12175 0
-1281 1266 -12175 0
-1283 1268 -12175 0
-1285 1270 -12175 0
-1287 1272 -12175 0
1286 -1271 -12175 0
-1258 -1273 12175 0
-1260 -1275 12175 0
-1262 -1277 12175 0
-1264 -1279 12175 0
-1266 -1281 12175 0
-1268 -1283 12175 0
-1270 -1285 12175 0
-1272 -1287 12175 0
1271 1286 12175 0
c ((variant_fields_00001_00003_00002=max_left_00001_00003_00002)=tv=SATLiteral(12176))
-4410 1273 -12176 0
-4412 1275 -12176 0
-4414 1277 -12176 0
-4416 1279 -12176 0
-4418 1281 -12176 0
-4420 1283 -12176 0
-4422 1285 -12176 0
-4424 1287 -12176 0
4423 -1286 -12176 0
-1273 4410 -12176 0
-1275 4412 -12176 0
-1277 4414 -12176 0
-1279 4416 -12176 0
-1281 4418 -12176 0
-1283 4420 -12176 0
-1285 4422 -12176 0
-1287 4424 -12176 0
1286 -4423 -12176 0
-4410 -1273 12176 0
-4412 -1275 12176 0
-4414 -1277 12176 0
-4416 -1279 12176 0
-4418 -1281 12176 0
-4420 -1283 12176 0
-4422 -1285 12176 0
-4424 -1287 12176 0
4423 1286 12176 0
c ((max_left_00001_00003_00002=max_left_00001_00003_00003)=tv=SATLiteral(12177))
-1273 1288 -12177 0
-1275 1290 -12177 0
-1277 1292 -12177 0
-1279 1294 -12177 0
-1281 1296 -12177 0
-1283 1298 -12177 0
-1285 1300 -12177 0
-1287 1302 -12177 0
1286 -1301 -12177 0
-1288 1273 -12177 0
-1290 1275 -12177 0
-1292 1277 -12177 0
-1294 1279 -12177 0
-1296 1281 -12177 0
-1298 1283 -12177 0
-1300 1285 -12177 0
-1302 1287 -12177 0
1301 -1286 -12177 0
-1273 -1288 12177 0
-1275 -1290 12177 0
-1277 -1292 12177 0
-1279 -1294 12177 0
-1281 -1296 12177 0
-1283 -1298 12177 0
-1285 -1300 12177 0
-1287 -1302 12177 0
1286 1301 12177 0
c ((variant_fields_00001_00003_00003=max_left_00001_00003_00003)=tv=SATLiteral(12178))
-4425 1288 -12178 0
-4427 1290 -12178 0
-4429 1292 -12178 0
-4431 1294 -12178 0
-4433 1296 -12178 0
-4435 1298 -12178 0
-4437 1300 -12178 0
-4439 1302 -12178 0
4438 -1301 -12178 0
-1288 4425 -12178 0
-1290 4427 -12178 0
-1292 4429 -12178 0
-1294 4431 -12178 0
-1296 4433 -12178 0
-1298 4435 -12178 0
-1300 4437 -12178 0
-1302 4439 -12178 0
1301 -4438 -12178 0
-4425 -1288 12178 0
-4427 -1290 12178 0
-4429 -1292 12178 0
-4431 -1294 12178 0
-4433 -1296 12178 0
-4435 -1298 12178 0
-4437 -1300 12178 0
-4439 -1302 12178 0
4438 1301 12178 0
c ((max_left_00001_00003_00003=max_left_00001_00003_00004)=tv=SATLiteral(12179))
-1288 1303 -12179 0
-1290 1305 -12179 0
-1292 1307 -12179 0
-1294 1309 -12179 0
-1296 1311 -12179 0
-1298 1313 -12179 0
-1300 1315 -12179 0
-1302 1317 -12179 0
1301 -1316 -12179 0
-1303 1288 -12179 0
-1305 1290 -12179 0
-1307 1292 -12179 0
-1309 1294 -12179 0
-1311 1296 -12179 0
-1313 1298 -12179 0
-1315 1300 -12179 0
-1317 1302 -12179 0
1316 -1301 -12179 0
-1288 -1303 12179 0
-1290 -1305 12179 0
-1292 -1307 12179 0
-1294 -1309 12179 0
-1296 -1311 12179 0
-1298 -1313 12179 0
-1300 -1315 12179 0
-1302 -1317 12179 0
1301 1316 12179 0
c ((variant_fields_00001_00003_00004=max_left_00001_00003_00004)=tv=SATLiteral(12180))
-4440 1303 -12180 0
-4442 1305 -12180 0
-4444 1307 -12180 0
-4446 1309 -12180 0
-4448 1311 -12180 0
-4450 1313 -12180 0
-4452 1315 -12180 0
-4454 1317 -12180 0
4453 -1316 -12180 0
-1303 4440 -12180 0
-1305 4442 -12180 0
-1307 4444 -12180 0
-1309 4446 -12180 0
-1311 4448 -12180 0
-1313 4450 -12180 0
-1315 4452 -12180 0
-1317 4454 -12180 0
1316 -4453 -12180 0
-4440 -1303 12180 0
-4442 -1305 12180 0
-4444 -1307 12180 0
-4446 -1309 12180 0
-4448 -1311 12180 0
-4450 -1313 12180 0
-4452 -1315 12180 0
-4454 -1317 12180 0
4453 1316 12180 0
c ((max_left_00001_00003_00004=max_left_00001_00003_00005)=tv=SATLiteral(12181))
-1303 1318 -12181 0
-1305 1320 -12181 0
-1307 1322 -12181 0
-1309 1324 -12181 0
-1311 1326 -12181 0
-1313 1328 -12181 0
-1315 1330 -12181 0
-1317 1332 -12181 0
1316 -1331 -12181 0
-1318 1303 -12181 0
-1320 1305 -12181 0
-1322 1307 -12181 0
-1324 1309 -12181 0
-1326 1311 -12181 0
-1328 1313 -12181 0
-1330 1315 -12181 0
-1332 1317 -12181 0
1331 -1316 -12181 0
-1303 -1318 12181 0
-1305 -1320 12181 0
-1307 -1322 12181 0
-1309 -1324 12181 0
-1311 -1326 12181 0
-1313 -1328 12181 0
-1315 -1330 12181 0
-1317 -1332 12181 0
1316 1331 12181 0
c ((variant_fields_00001_00003_00005=max_left_00001_00003_00005)=tv=SATLiteral(12182))
-4455 1318 -12182 0
-4457 1320 -12182 0
-4459 1322 -12182 0
-4461 1324 -12182 0
-4463 1326 -12182 0
-4465 1328 -12182 0
-4467 1330 -12182 0
-4469 1332 -12182 0
4468 -1331 -12182 0
-1318 4455 -12182 0
-1320 4457 -12182 0
-1322 4459 -12182 0
-1324 4461 -12182 0
-1326 4463 -12182 0
-1328 4465 -12182 0
-1330 4467 -12182 0
-1332 4469 -12182 0
1331 -4468 -12182 0
-4455 -1318 12182 0
-4457 -1320 12182 0
-4459 -1322 12182 0
-4461 -1324 12182 0
-4463 -1326 12182 0
-4465 -1328 12182 0
-4467 -1330 12182 0
-4469 -1332 12182 0
4468 1331 12182 0
c ((max_left_00001_00003_00005=max_left_00001_00003_00006)=tv=SATLiteral(12183))
-1318 -12183 0
-1320 -12183 0
-1322 -12183 0
-1324 -12183 0
-1326 -12183 0
-1328 1333 -12183 0
-1330 1335 -12183 0
-1332 1337 -12183 0
1331 -1336 -12183 0
-1333 1328 -12183 0
-1335 1330 -12183 0
-1337 1332 -12183 0
1336 -1331 -12183 0
-1328 -1333 12183 0
-1330 -1335 12183 0
-1332 -1337 12183 0
1331 1336 12183 0
c ((variant_fields_00001_00003_00006=max_left_00001_00003_00006)=tv=SATLiteral(12184))
-4470 1333 -12184 0
-1333 4470 -12184 0
-1335 -12184 0
-1337 -12184 0
1336 -12184 0
-4470 -1333 12184 0
c ((max_left_00001_00003_00006=max_left_00001_00003_00007)=tv=SATLiteral(12185))
-1333 1338 -12185 0
-1335 1340 -12185 0
-1337 1342 -12185 0
1336 -1341 -12185 0
-1338 1333 -12185 0
-1340 1335 -12185 0
-1342 1337 -12185 0
1341 -1336 -12185 0
-1333 -1338 12185 0
-1335 -1340 12185 0
-1337 -1342 12185 0
1336 1341 12185 0
c ((variant_fields_00001_00003_00007=max_left_00001_00003_00007)=tv=SATLiteral(12186))
-4471 -12186 0
-4473 -12186 0
-4475 -12186 0
-4477 -12186 0
-4479 -12186 0
-4481 1338 -12186 0
-4483 1340 -12186 0
-4485 1342 -12186 0
4484 -1341 -12186 0
-1338 4481 -12186 0
-1340 4483 -12186 0
-1342 4485 -12186 0
1341 -4484 -12186 0
-4481 -1338 12186 0
-4483 -1340 12186 0
-4485 -1342 12186 0
4484 1341 12186 0
c ((max_left_00001_00003_00007=max_left_00001_00003_00008)=tv=SATLiteral(12187))
-1338 1343 -12187 0
-1340 1345 -12187 0
-1342 1347 -12187 0
1341 -1346 -12187 0
-1343 1338 -12187 0
-1345 1340 -12187 0
-1347 1342 -12187 0
1346 -1341 -12187 0
-1338 -1343 12187 0
-1340 -1345 12187 0
-1342 -1347 12187 0
1341 1346 12187 0
c ((variant_fields_00001_00003_00008=max_left_00001_00003_00008)=tv=SATLiteral(12188))
-4486 -12188 0
-4488 -12188 0
-4490 -12188 0
-4492 -12188 0
-4494 -12188 0
-4496 1343 -12188 0
-4498 1345 -12188 0
-4500 1347 -12188 0
4499 -1346 -12188 0
-1343 4496 -12188 0
-1345 4498 -12188 0
-1347 4500 -12188 0
1346 -4499 -12188 0
-4496 -1343 12188 0
-4498 -1345 12188 0
-4500 -1347 12188 0
4499 1346 12188 0
c ((max_left_00001_00003_00008=max_left_00001_00003_00009)=tv=SATLiteral(12189))
-1343 1348 -12189 0
-1345 1350 -12189 0
-1347 1352 -12189 0
1346 -1351 -12189 0
-1348 1343 -12189 0
-1350 1345 -12189 0
-1352 1347 -12189 0
1351 -1346 -12189 0
-1343 -1348 12189 0
-1345 -1350 12189 0
-1347 -1352 12189 0
1346 1351 12189 0
c ((variant_fields_00001_00003_00009=max_left_00001_00003_00009)=tv=SATLiteral(12190))
-4501 -12190 0
-4503 -12190 0
-4505 -12190 0
-4507 -12190 0
-4509 -12190 0
-4511 1348 -12190 0
-4513 1350 -12190 0
-4515 1352 -12190 0
4514 -1351 -12190 0
-1348 4511 -12190 0
-1350 4513 -12190 0
-1352 4515 -12190 0
1351 -4514 -12190 0
-4511 -1348 12190 0
-4513 -1350 12190 0
-4515 -1352 12190 0
4514 1351 12190 0
c ((max_left_00001_00004_00001=max_left_00001_00004_00002)=tv=SATLiteral(12191))
-1354 1369 -12191 0
-1356 1371 -12191 0
-1358 1373 -12191 0
-1360 1375 -12191 0
-1362 1377 -12191 0
-1364 1379 -12191 0
-1366 1381 -12191 0
-1368 1383 -12191 0
1367 -1382 -12191 0
-1369 1354 -12191 0
-1371 1356 -12191 0
-1373 1358 -12191 0
-1375 1360 -12191 0
-1377 1362 -12191 0
-1379 1364 -12191 0
-1381 1366 -12191 0
-1383 1368 -12191 0
1382 -1367 -12191 0
-1354 -1369 12191 0
-1356 -1371 12191 0
-1358 -1373 12191 0
-1360 -1375 12191 0
-1362 -1377 12191 0
-1364 -1379 12191 0
-1366 -1381 12191 0
-1368 -1383 12191 0
1367 1382 12191 0
c ((variant_fields_00001_00004_00002=max_left_00001_00004_00002)=tv=SATLiteral(12192))
-4531 1369 -12192 0
-4533 1371 -12192 0
-4535 1373 -12192 0
-4537 1375 -12192 0
-4539 1377 -12192 0
-4541 1379 -12192 0
-4543 1381 -12192 0
-4545 1383 -12192 0
4544 -1382 -12192 0
-1369 4531 -12192 0
-1371 4533 -12192 0
-1373 4535 -12192 0
-1375 4537 -12192 0
-1377 4539 -12192 0
-1379 4541 -12192 0
-1381 4543 -12192 0
-1383 4545 -12192 0
1382 -4544 -12192 0
-4531 -1369 12192 0
-4533 -1371 12192 0
-4535 -1373 12192 0
-4537 -1375 12192 0
-4539 -1377 12192 0
-4541 -1379 12192 0
-4543 -1381 12192 0
-4545 -1383 12192 0
4544 1382 12192 0
c ((max_left_00001_00004_00002=max_left_00001_00004_00003)=tv=SATLiteral(12193))
-1369 1384 -12193 0
-1371 1386 -12193 0
-1373 1388 -12193 0
-1375 1390 -12193 0
-1377 1392 -12193 0
-1379 1394 -12193 0
-1381 1396 -12193 0
-1383 1398 -12193 0
1382 -1397 -12193 0
-1384 1369 -12193 0
-1386 1371 -12193 0
-1388 1373 -12193 0
-1390 1375 -12193 0
-1392 1377 -12193 0
-1394 1379 -12193 0
-1396 1381 -12193 0
-1398 1383 -12193 0
1397 -1382 -12193 0
-1369 -1384 12193 0
-1371 -1386 12193 0
-1373 -1388 12193 0
-1375 -1390 12193 0
-1377 -1392 12193 0
-1379 -1394 12193 0
-1381 -1396 12193 0
-1383 -1398 12193 0
1382 1397 12193 0
c ((variant_fields_00001_00004_00003=max_left_00001_00004_00003)=tv=SATLiteral(12194))
-4546 1384 -12194 0
-1384 4546 -12194 0
-1386 -12194 0
-1388 -12194 0
-1390 -12194 0
-1392 -12194 0
-1394 -12194 0
-1396 -12194 0
-1398 -12194 0
1397 -12194 0
-4546 -1384 12194 0
c ((max_left_00001_00004_00003=max_left_00001_00004_00004)=tv=SATLiteral(12195))
-1384 1399 -12195 0
-1386 1401 -12195 0
-1388 1403 -12195 0
-1390 1405 -12195 0
-1392 1407 -12195 0
-1394 1409 -12195 0
-1396 1411 -12195 0
-1398 1413 -12195 0
1397 -1412 -12195 0
-1399 1384 -12195 0
-1401 1386 -12195 0
-1403 1388 -12195 0
-1405 1390 -12195 0
-1407 1392 -12195 0
-1409 1394 -12195 0
-1411 1396 -12195 0
-1413 1398 -12195 0
1412 -1397 -12195 0
-1384 -1399 12195 0
-1386 -1401 12195 0
-1388 -1403 12195 0
-1390 -1405 12195 0
-1392 -1407 12195 0
-1394 -1409 12195 0
-1396 -1411 12195 0
-1398 -1413 12195 0
1397 1412 12195 0
c ((variant_fields_00001_00004_00004=max_left_00001_00004_00004)=tv=SATLiteral(12196))
-4547 1399 -12196 0
-4549 1401 -12196 0
-4551 1403 -12196 0
-4553 1405 -12196 0
-4555 1407 -12196 0
-4557 1409 -12196 0
-4559 1411 -12196 0
-4561 1413 -12196 0
4560 -1412 -12196 0
-1399 4547 -12196 0
-1401 4549 -12196 0
-1403 4551 -12196 0
-1405 4553 -12196 0
-1407 4555 -12196 0
-1409 4557 -12196 0
-1411 4559 -12196 0
-1413 4561 -12196 0
1412 -4560 -12196 0
-4547 -1399 12196 0
-4549 -1401 12196 0
-4551 -1403 12196 0
-4553 -1405 12196 0
-4555 -1407 12196 0
-4557 -1409 12196 0
-4559 -1411 12196 0
-4561 -1413 12196 0
4560 1412 12196 0
c ((max_left_00001_00004_00004=max_left_00001_00004_00005)=tv=SATLiteral(12197))
-1399 1414 -12197 0
-1401 1416 -12197 0
-1403 1418 -12197 0
-1405 1420 -12197 0
-1407 1422 -12197 0
-1409 1424 -12197 0
-1411 1426 -12197 0
-1413 1428 -12197 0
1412 -1427 -12197 0
-1414 1399 -12197 0
-1416 1401 -12197 0
-1418 1403 -12197 0
-1420 1405 -12197 0
-1422 1407 -12197 0
-1424 1409 -12197 0
-1426 1411 -12197 0
-1428 1413 -12197 0
1427 -1412 -12197 0
-1399 -1414 12197 0
-1401 -1416 12197 0
-1403 -1418 12197 0
-1405 -1420 12197 0
-1407 -1422 12197 0
-1409 -1424 12197 0
-1411 -1426 12197 0
-1413 -1428 12197 0
1412 1427 12197 0
c ((variant_fields_00001_00004_00005=max_left_00001_00004_00005)=tv=SATLiteral(12198))
-4562 1414 -12198 0
-4564 1416 -12198 0
-4566 1418 -12198 0
-4568 1420 -12198 0
-4570 1422 -12198 0
-4572 1424 -12198 0
-4574 1426 -12198 0
-4576 1428 -12198 0
4575 -1427 -12198 0
-1414 4562 -12198 0
-1416 4564 -12198 0
-1418 4566 -12198 0
-1420 4568 -12198 0
-1422 4570 -12198 0
-1424 4572 -12198 0
-1426 4574 -12198 0
-1428 4576 -12198 0
1427 -4575 -12198 0
-4562 -1414 12198 0
-4564 -1416 12198 0
-4566 -1418 12198 0
-4568 -1420 12198 0
-4570 -1422 12198 0
-4572 -1424 12198 0
-4574 -1426 12198 0
-4576 -1428 12198 0
4575 1427 12198 0
c ((max_left_00001_00004_00005=max_left_00001_00004_00006)=tv=SATLiteral(12199))
-1414 1429 -12199 0
-1416 1431 -12199 0
-1418 1433 -12199 0
-1420 1435 -12199 0
-1422 1437 -12199 0
-1424 1439 -12199 0
-1426 1441 -12199 0
-1428 1443 -12199 0
1427 -1442 -12199 0
-1429 1414 -12199 0
-1431 1416 -12199 0
-1433 1418 -12199 0
-1435 1420 -12199 0
-1437 1422 -12199 0
-1439 1424 -12199 0
-1441 1426 -12199 0
-1443 1428 -12199 0
1442 -1427 -12199 0
-1414 -1429 12199 0
-1416 -1431 12199 0
-1418 -1433 12199 0
-1420 -1435 12199 0
-1422 -1437 12199 0
-1424 -1439 12199 0
-1426 -1441 12199 0
-1428 -1443 12199 0
1427 1442 12199 0
c ((variant_fields_00001_00004_00006=max_left_00001_00004_00006)=tv=SATLiteral(12200))
-4577 1429 -12200 0
-4579 1431 -12200 0
-4581 1433 -12200 0
-4583 1435 -12200 0
-4585 1437 -12200 0
-4587 1439 -12200 0
-4589 1441 -12200 0
-4591 1443 -12200 0
4590 -1442 -12200 0
-1429 4577 -12200 0
-1431 4579 -12200 0
-1433 4581 -12200 0
-1435 4583 -12200 0
-1437 4585 -12200 0
-1439 4587 -12200 0
-1441 4589 -12200 0
-1443 4591 -12200 0
1442 -4590 -12200 0
-4577 -1429 12200 0
-4579 -1431 12200 0
-4581 -1433 12200 0
-4583 -1435 12200 0
-4585 -1437 12200 0
-4587 -1439 12200 0
-4589 -1441 12200 0
-4591 -1443 12200 0
4590 1442 12200 0
c ((max_left_00001_00004_00006=max_left_00001_00004_00007)=tv=SATLiteral(12201))
-1429 1444 -12201 0
-1431 1446 -12201 0
-1433 1448 -12201 0
-1435 1450 -12201 0
-1437 1452 -12201 0
-1439 1454 -12201 0
-1441 1456 -12201 0
-1443 1458 -12201 0
1442 -1457 -12201 0
-1444 1429 -12201 0
-1446 1431 -12201 0
-1448 1433 -12201 0
-1450 1435 -12201 0
-1452 1437 -12201 0
-1454 1439 -12201 0
-1456 1441 -12201 0
-1458 1443 -12201 0
1457 -1442 -12201 0
-1429 -1444 12201 0
-1431 -1446 12201 0
-1433 -1448 12201 0
-1435 -1450 12201 0
-1437 -1452 12201 0
-1439 -1454 12201 0
-1441 -1456 12201 0
-1443 -1458 12201 0
1442 1457 12201 0
c ((variant_fields_00001_00004_00007=max_left_00001_00004_00007)=tv=SATLiteral(12202))
-4592 1444 -12202 0
-4594 1446 -12202 0
-4596 1448 -12202 0
-4598 1450 -12202 0
-4600 1452 -12202 0
-4602 1454 -12202 0
-4604 1456 -12202 0
-4606 1458 -12202 0
4605 -1457 -12202 0
-1444 4592 -12202 0
-1446 4594 -12202 0
-1448 4596 -12202 0
-1450 4598 -12202 0
-1452 4600 -12202 0
-1454 4602 -12202 0
-1456 4604 -12202 0
-1458 4606 -12202 0
1457 -4605 -12202 0
-4592 -1444 12202 0
-4594 -1446 12202 0
-4596 -1448 12202 0
-4598 -1450 12202 0
-4600 -1452 12202 0
-4602 -1454 12202 0
-4604 -1456 12202 0
-4606 -1458 12202 0
4605 1457 12202 0
c ((max_left_00001_00004_00007=max_left_00001_00004_00008)=tv=SATLiteral(12203))
-1444 -12203 0
-1446 -12203 0
-1448 1459 -12203 0
-1450 1461 -12203 0
-1452 1463 -12203 0
-1454 1465 -12203 0
-1456 1467 -12203 0
-1458 1469 -12203 0
1457 -1468 -12203 0
-1459 1448 -12203 0
-1461 1450 -12203 0
-1463 1452 -12203 0
-1465 1454 -12203 0
-1467 1456 -12203 0
-1469 1458 -12203 0
1468 -1457 -12203 0
-1448 -1459 12203 0
-1450 -1461 12203 0
-1452 -1463 12203 0
-1454 -1465 12203 0
-1456 -1467 12203 0
-1458 -1469 12203 0
1457 1468 12203 0
c ((variant_fields_00001_00004_00008=max_left_00001_00004_00008)=tv=SATLiteral(12204))
-4607 1459 -12204 0
-1459 4607 -12204 0
-1461 -12204 0
-1463 -12204 0
-1465 -12204 0
-1467 -12204 0
-1469 -12204 0
1468 -12204 0
-4607 -1459 12204 0
c ((max_left_00001_00004_00008=max_left_00001_00004_00009)=tv=SATLiteral(12205))
-1459 1470 -12205 0
-1461 1472 -12205 0
-1463 1474 -12205 0
-1465 1476 -12205 0
-1467 1478 -12205 0
-1469 1480 -12205 0
1468 -1479 -12205 0
-1470 1459 -12205 0
-1472 1461 -12205 0
-1474 1463 -12205 0
-1476 1465 -12205 0
-1478 1467 -12205 0
-1480 1469 -12205 0
1479 -1468 -12205 0
-1459 -1470 12205 0
-1461 -1472 12205 0
-1463 -1474 12205 0
-1465 -1476 12205 0
-1467 -1478 12205 0
-1469 -1480 12205 0
1468 1479 12205 0
c ((variant_fields_00001_00004_00009=max_left_00001_00004_00009)=tv=SATLiteral(12206))
-4608 -12206 0
-4610 -12206 0
-4612 1470 -12206 0
-4614 1472 -12206 0
-4616 1474 -12206 0
-4618 1476 -12206 0
-4620 1478 -12206 0
-4622 1480 -12206 0
4621 -1479 -12206 0
-1470 4612 -12206 0
-1472 4614 -12206 0
-1474 4616 -12206 0
-1476 4618 -12206 0
-1478 4620 -12206 0
-1480 4622 -12206 0
1479 -4621 -12206 0
-4612 -1470 12206 0
-4614 -1472 12206 0
-4616 -1474 12206 0
-4618 -1476 12206 0
-4620 -1478 12206 0
-4622 -1480 12206 0
4621 1479 12206 0
c ((max_left_00001_00005_00001=max_left_00001_00005_00002)=tv=SATLiteral(12207))
-1482 1497 -12207 0
-1484 1499 -12207 0
-1486 1501 -12207 0
-1488 1503 -12207 0
-1490 1505 -12207 0
-1492 1507 -12207 0
-1494 1509 -12207 0
-1496 1511 -12207 0
1495 -1510 -12207 0
-1497 1482 -12207 0
-1499 1484 -12207 0
-1501 1486 -12207 0
-1503 1488 -12207 0
-1505 1490 -12207 0
-1507 1492 -12207 0
-1509 1494 -12207 0
-1511 1496 -12207 0
1510 -1495 -12207 0
-1482 -1497 12207 0
-1484 -1499 12207 0
-1486 -1501 12207 0
-1488 -1503 12207 0
-1490 -1505 12207 0
-1492 -1507 12207 0
-1494 -1509 12207 0
-1496 -1511 12207 0
1495 1510 12207 0
c ((variant_fields_00001_00005_00002=max_left_00001_00005_00002)=tv=SATLiteral(12208))
-4638 1497 -12208 0
-4640 1499 -12208 0
-4642 1501 -12208 0
-4644 1503 -12208 0
-4646 1505 -12208 0
-4648 1507 -12208 0
-4650 1509 -12208 0
-4652 1511 -12208 0
4651 -1510 -12208 0
-1497 4638 -12208 0
-1499 4640 -12208 0
-1501 4642 -12208 0
-1503 4644 -12208 0
-1505 4646 -12208 0
-1507 4648 -12208 0
-1509 4650 -12208 0
-1511 4652 -12208 0
1510 -4651 -12208 0
-4638 -1497 12208 0
-4640 -1499 12208 0
-4642 -1501 12208 0
-4644 -1503 12208 0
-4646 -1505 12208 0
-4648 -1507 12208 0
-4650 -1509 12208 0
-4652 -1511 12208 0
4651 1510 12208 0
c ((max_left_00001_00005_00002=max_left_00001_00005_00003)=tv=SATLiteral(12209))
-1497 1512 -12209 0
-1499 1514 -12209 0
-1501 1516 -12209 0
-1503 1518 -12209 0
-1505 1520 -12209 0
-1507 1522 -12209 0
-1509 1524 -12209 0
-1511 1526 -12209 0
1510 -1525 -12209 0
-1512 1497 -12209 0
-1514 1499 -12209 0
-1516 1501 -12209 0
-1518 1503 -12209 0
-1520 1505 -12209 0
-1522 1507 -12209 0
-1524 1509 -12209 0
-1526 1511 -12209 0
1525 -1510 -12209 0
-1497 -1512 12209 0
-1499 -1514 12209 0
-1501 -1516 12209 0
-1503 -1518 12209 0
-1505 -1520 12209 0
-1507 -1522 12209 0
-1509 -1524 12209 0
-1511 -1526 12209 0
1510 1525 12209 0
c ((variant_fields_00001_00005_00003=max_left_00001_00005_00003)=tv=SATLiteral(12210))
-4653 1512 -12210 0
-4655 1514 -12210 0
-4657 1516 -12210 0
-4659 1518 -12210 0
-4661 1520 -12210 0
-4663 1522 -12210 0
-4665 1524 -12210 0
-4667 1526 -12210 0
4666 -1525 -12210 0
-1512 4653 -12210 0
-1514 4655 -12210 0
-1516 4657 -12210 0
-1518 4659 -12210 0
-1520 4661 -12210 0
-1522 4663 -12210 0
-1524 4665 -12210 0
-1526 4667 -12210 0
1525 -4666 -12210 0
-4653 -1512 12210 0
-4655 -1514 12210 0
-4657 -1516 12210 0
-4659 -1518 12210 0
-4661 -1520 12210 0
-4663 -1522 12210 0
-4665 -1524 12210 0
-4667 -1526 12210 0
4666 1525 12210 0
c ((max_left_00001_00005_00003=max_left_00001_00005_00004)=tv=SATLiteral(12211))
-1512 1527 -12211 0
-1514 1529 -12211 0
-1516 1531 -12211 0
-1518 1533 -12211 0
-1520 1535 -12211 0
-1522 1537 -12211 0
-1524 1539 -12211 0
-1526 1541 -12211 0
1525 -1540 -12211 0
-1527 1512 -12211 0
-1529 1514 -12211 0
-1531 1516 -12211 0
-1533 1518 -12211 0
-1535 1520 -12211 0
-1537 1522 -12211 0
-1539 1524 -12211 0
-1541 1526 -12211 0
1540 -1525 -12211 0
-1512 -1527 12211 0
-1514 -1529 12211 0
-1516 -1531 12211 0
-1518 -1533 12211 0
-1520 -1535 12211 0
-1522 -1537 12211 0
-1524 -1539 12211 0
-1526 -1541 12211 0
1525 1540 12211 0
c ((variant_fields_00001_00005_00004=max_left_00001_00005_00004)=tv=SATLiteral(12212))
-4668 1527 -12212 0
-1527 4668 -12212 0
-1529 -12212 0
-1531 -12212 0
-1533 -12212 0
-1535 -12212 0
-1537 -12212 0
-1539 -12212 0
-1541 -12212 0
1540 -12212 0
-4668 -1527 12212 0
c ((max_left_00001_00005_00004=max_left_00001_00005_00005)=tv=SATLiteral(12213))
-1527 1542 -12213 0
-1529 1544 -12213 0
-1531 1546 -12213 0
-1533 1548 -12213 0
-1535 1550 -12213 0
-1537 1552 -12213 0
-1539 1554 -12213 0
-1541 1556 -12213 0
1540 -1555 -12213 0
-1542 1527 -12213 0
-1544 1529 -12213 0
-1546 1531 -12213 0
-1548 1533 -12213 0
-1550 1535 -12213 0
-1552 1537 -12213 0
-1554 1539 -12213 0
-1556 1541 -12213 0
1555 -1540 -12213 0
-1527 -1542 12213 0
-1529 -1544 12213 0
-1531 -1546 12213 0
-1533 -1548 12213 0
-1535 -1550 12213 0
-1537 -1552 12213 0
-1539 -1554 12213 0
-1541 -1556 12213 0
1540 1555 12213 0
c ((variant_fields_00001_00005_00005=max_left_00001_00005_00005)=tv=SATLiteral(12214))
-4669 1542 -12214 0
-4671 1544 -12214 0
-4673 1546 -12214 0
-4675 1548 -12214 0
-4677 1550 -12214 0
-4679 1552 -12214 0
-4681 1554 -12214 0
-4683 1556 -12214 0
4682 -1555 -12214 0
-1542 4669 -12214 0
-1544 4671 -12214 0
-1546 4673 -12214 0
-1548 4675 -12214 0
-1550 4677 -12214 0
-1552 4679 -12214 0
-1554 4681 -12214 0
-1556 4683 -12214 0
1555 -4682 -12214 0
-4669 -1542 12214 0
-4671 -1544 12214 0
-4673 -1546 12214 0
-4675 -1548 12214 0
-4677 -1550 12214 0
-4679 -1552 12214 0
-4681 -1554 12214 0
-4683 -1556 12214 0
4682 1555 12214 0
c ((max_left_00001_00005_00005=max_left_00001_00005_00006)=tv=SATLiteral(12215))
-1542 1557 -12215 0
-1544 1559 -12215 0
-1546 1561 -12215 0
-1548 1563 -12215 0
-1550 1565 -12215 0
-1552 1567 -12215 0
-1554 1569 -12215 0
-1556 1571 -12215 0
1555 -1570 -12215 0
-1557 1542 -12215 0
-1559 1544 -12215 0
-1561 1546 -12215 0
-1563 1548 -12215 0
-1565 1550 -12215 0
-1567 1552 -12215 0
-1569 1554 -12215 0
-1571 1556 -12215 0
1570 -1555 -12215 0
-1542 -1557 12215 0
-1544 -1559 12215 0
-1546 -1561 12215 0
-1548 -1563 12215 0
-1550 -1565 12215 0
-1552 -1567 12215 0
-1554 -1569 12215 0
-1556 -1571 12215 0
1555 1570 12215 0
c ((variant_fields_00001_00005_00006=max_left_00001_00005_00006)=tv=SATLiteral(12216))
-4684 1557 -12216 0
-4686 1559 -12216 0
-4688 1561 -12216 0
-4690 1563 -12216 0
-4692 1565 -12216 0
-4694 1567 -12216 0
-4696 1569 -12216 0
-4698 1571 -12216 0
4697 -1570 -12216 0
-1557 4684 -12216 0
-1559 4686 -12216 0
-1561 4688 -12216 0
-1563 4690 -12216 0
-1565 4692 -12216 0
-1567 4694 -12216 0
-1569 4696 -12216 0
-1571 4698 -12216 0
1570 -4697 -12216 0
-4684 -1557 12216 0
-4686 -1559 12216 0
-4688 -1561 12216 0
-4690 -1563 12216 0
-4692 -1565 12216 0
-4694 -1567 12216 0
-4696 -1569 12216 0
-4698 -1571 12216 0
4697 1570 12216 0
c ((max_left_00001_00005_00006=max_left_00001_00005_00007)=tv=SATLiteral(12217))
-1557 -12217 0
-1559 -12217 0
-1561 -12217 0
-1563 -12217 0
-1565 -12217 0
-1567 -12217 0
-1569 1572 -12217 0
-1571 1574 -12217 0
1570 -1573 -12217 0
-1572 1569 -12217 0
-1574 1571 -12217 0
1573 -1570 -12217 0
-1569 -1572 12217 0
-1571 -1574 12217 0
1570 1573 12217 0
c ((variant_fields_00001_00005_00007=max_left_00001_00005_00007)=tv=SATLiteral(12218))
-4699 1572 -12218 0
-1572 4699 -12218 0
-1574 -12218 0
1573 -12218 0
-4699 -1572 12218 0
c ((max_left_00001_00005_00007=max_left_00001_00005_00008)=tv=SATLiteral(12219))
-1572 1575 -12219 0
-1574 1577 -12219 0
1573 -1576 -12219 0
-1575 1572 -12219 0
-1577 1574 -12219 0
1576 -1573 -12219 0
-1572 -1575 12219 0
-1574 -1577 12219 0
1573 1576 12219 0
c ((variant_fields_00001_00005_00008=max_left_00001_00005_00008)=tv=SATLiteral(12220))
-4700 -12220 0
-4702 -12220 0
-4704 -12220 0
-4706 -12220 0
-4708 -12220 0
-4710 -12220 0
-4712 1575 -12220 0
-4714 1577 -12220 0
4713 -1576 -12220 0
-1575 4712 -12220 0
-1577 4714 -12220 0
1576 -4713 -12220 0
-4712 -1575 12220 0
-4714 -1577 12220 0
4713 1576 12220 0
c ((max_left_00001_00006_00001=max_left_00001_00006_00002)=tv=SATLiteral(12221))
-1582 -12221 0
-1584 -12221 0
-1586 -12221 0
-1588 -12221 0
-1590 -12221 0
-1592 -12221 0
-1594 -12221 0
-1596 -1597 -12221 0
1595 1597 -12221 0
1597 1596 -12221 0
-1597 -1595 -12221 0
-1596 1597 12221 0
1595 -1597 12221 0
c ((variant_fields_00001_00006_00002=max_left_00001_00006_00002)=tv=SATLiteral(12222))
-4731 -1597 -12222 0
1597 4731 -12222 0
-1597 -12222 0
-4731 1597 12222 0
c ((max_left_00001_00006_00002=max_left_00001_00006_00003)=tv=SATLiteral(12223))
1597 -1598 -12223 0
-1597 1598 -12223 0
1598 -1597 -12223 0
-1598 1597 -12223 0
1597 1598 12223 0
-1597 -1598 12223 0
c ((variant_fields_00001_00006_00003=max_left_00001_00006_00003)=tv=SATLiteral(12224))
-4732 -12224 0
-4734 -12224 0
-4736 -12224 0
-4738 -12224 0
-4740 -12224 0
-4742 -12224 0
-4744 -12224 0
-4746 -1598 -12224 0
4745 1598 -12224 0
1598 4746 -12224 0
-1598 -4745 -12224 0
-4746 1598 12224 0
4745 -1598 12224 0
c ((max_left_00001_00006_00003=max_left_00001_00006_00004)=tv=SATLiteral(12225))
1598 -1599 -12225 0
-1598 1599 -12225 0
1599 -1598 -12225 0
-1599 1598 -12225 0
1598 1599 12225 0
-1598 -1599 12225 0
c ((variant_fields_00001_00006_00004=max_left_00001_00006_00004)=tv=SATLiteral(12226))
-4747 -12226 0
-4749 -12226 0
-4751 -12226 0
-4753 -12226 0
-4755 -12226 0
-4757 -12226 0
-4759 -12226 0
-4761 -1599 -12226 0
4760 1599 -12226 0
1599 4761 -12226 0
-1599 -4760 -12226 0
-4761 1599 12226 0
4760 -1599 12226 0
c ((max_left_00001_00006_00004=max_left_00001_00006_00005)=tv=SATLiteral(12227))
1599 -1600 -12227 0
-1599 1600 -12227 0
1600 -1599 -12227 0
-1600 1599 -12227 0
1599 1600 12227 0
-1599 -1600 12227 0
c ((variant_fields_00001_00006_00005=max_left_00001_00006_00005)=tv=SATLiteral(12228))
-4762 -12228 0
-4764 -12228 0
-4766 -12228 0
-4768 -12228 0
-4770 -12228 0
-4772 -12228 0
-4774 -12228 0
-4776 -1600 -12228 0
4775 1600 -12228 0
1600 4776 -12228 0
-1600 -4775 -12228 0
-4776 1600 12228 0
4775 -1600 12228 0
c ((max_left_00001_00006_00006=max_left_00001_00006_00007)=tv=SATLiteral(12229))
1601 -1602 -12229 0
-1601 1602 -12229 0
1602 -1601 -12229 0
-1602 1601 -12229 0
1601 1602 12229 0
-1601 -1602 12229 0
c ((variant_fields_00001_00006_00007=max_left_00001_00006_00007)=tv=SATLiteral(12230))
-4778 -12230 0
-4780 -12230 0
-4782 -12230 0
-4784 -12230 0
-4786 -12230 0
-4788 -12230 0
-4790 -12230 0
-4792 -1602 -12230 0
4791 1602 -12230 0
1602 4792 -12230 0
-1602 -4791 -12230 0
-4792 1602 12230 0
4791 -1602 12230 0
c ((max_left_00001_00006_00007=max_left_00001_00006_00008)=tv=SATLiteral(12231))
1602 -1603 -12231 0
-1602 1603 -12231 0
1603 -1602 -12231 0
-1603 1602 -12231 0
1602 1603 12231 0
-1602 -1603 12231 0
c ((variant_fields_00001_00006_00008=max_left_00001_00006_00008)=tv=SATLiteral(12232))
-4793 -12232 0
-4795 -12232 0
-4797 -12232 0
-4799 -12232 0
-4801 -12232 0
-4803 -12232 0
-4805 -12232 0
-4807 -1603 -12232 0
4806 1603 -12232 0
1603 4807 -12232 0
-1603 -4806 -12232 0
-4807 1603 12232 0
4806 -1603 12232 0
c ((max_left_00001_00006_00008=max_left_00001_00006_00009)=tv=SATLiteral(12233))
1603 -1604 -12233 0
-1603 1604 -12233 0
1604 -1603 -12233 0
-1604 1603 -12233 0
1603 1604 12233 0
-1603 -1604 12233 0
c ((variant_fields_00001_00006_00009=max_left_00001_00006_00009)=tv=SATLiteral(12234))
-4808 -12234 0
-4810 -12234 0
-4812 -12234 0
-4814 -12234 0
-4816 -12234 0
-4818 -12234 0
-4820 -12234 0
-4822 -1604 -12234 0
4821 1604 -12234 0
1604 4822 -12234 0
-1604 -4821 -12234 0
-4822 1604 12234 0
4821 -1604 12234 0
c ((max_left_00001_00007_00001=max_left_00001_00007_00002)=tv=SATLiteral(12235))
-1606 1621 -12235 0
-1608 1623 -12235 0
-1610 1625 -12235 0
-1612 1627 -12235 0
-1614 1629 -12235 0
-1616 1631 -12235 0
-1618 1633 -12235 0
-1620 1635 -12235 0
1619 -1634 -12235 0
-1621 1606 -12235 0
-1623 1608 -12235 0
-1625 1610 -12235 0
-1627 1612 -12235 0
-1629 1614 -12235 0
-1631 1616 -12235 0
-1633 1618 -12235 0
-1635 1620 -12235 0
1634 -1619 -12235 0
-1606 -1621 12235 0
-1608 -1623 12235 0
-1610 -1625 12235 0
-1612 -1627 12235 0
-1614 -1629 12235 0
-1616 -1631 12235 0
-1618 -1633 12235 0
-1620 -1635 12235 0
1619 1634 12235 0
c ((variant_fields_00001_00007_00002=max_left_00001_00007_00002)=tv=SATLiteral(12236))
-4838 1621 -12236 0
-4840 1623 -12236 0
-4842 1625 -12236 0
-4844 1627 -12236 0
-4846 1629 -12236 0
-4848 1631 -12236 0
-4850 1633 -12236 0
-4852 1635 -12236 0
4851 -1634 -12236 0
-1621 4838 -12236 0
-1623 4840 -12236 0
-1625 4842 -12236 0
-1627 4844 -12236 0
-1629 4846 -12236 0
-1631 4848 -12236 0
-1633 4850 -12236 0
-1635 4852 -12236 0
1634 -4851 -12236 0
-4838 -1621 12236 0
-4840 -1623 12236 0
-4842 -1625 12236 0
-4844 -1627 12236 0
-4846 -1629 12236 0
-4848 -1631 12236 0
-4850 -1633 12236 0
-4852 -1635 12236 0
4851 1634 12236 0
c ((max_left_00001_00007_00002=max_left_00001_00007_00003)=tv=SATLiteral(12237))
-1621 1636 -12237 0
-1623 1638 -12237 0
-1625 1640 -12237 0
-1627 1642 -12237 0
-1629 1644 -12237 0
-1631 1646 -12237 0
-1633 1648 -12237 0
-1635 1650 -12237 0
1634 -1649 -12237 0
-1636 1621 -12237 0
-1638 1623 -12237 0
-1640 1625 -12237 0
-1642 1627 -12237 0
-1644 1629 -12237 0
-1646 1631 -12237 0
-1648 1633 -12237 0
-1650 1635 -12237 0
1649 -1634 -12237 0
-1621 -1636 12237 0
-1623 -1638 12237 0
-1625 -1640 12237 0
-1627 -1642 12237 0
-1629 -1644 12237 0
-1631 -1646 12237 0
-1633 -1648 12237 0
-1635 -1650 12237 0
1634 1649 12237 0
c ((variant_fields_00001_00007_00003=max_left_00001_00007_00003)=tv=SATLiteral(12238))
-4853 1636 -12238 0
-4855 1638 -12238 0
-4857 1640 -12238 0
-4859 1642 -12238 0
-4861 1644 -12238 0
-4863 1646 -12238 0
-4865 1648 -12238 0
-4867 1650 -12238 0
4866 -1649 -12238 0
-1636 4853 -12238 0
-1638 4855 -12238 0
-1640 4857 -12238 0
-1642 4859 -12238 0
-1644 4861 -12238 0
-1646 4863 -12238 0
-1648 4865 -12238 0
-1650 4867 -12238 0
1649 -4866 -12238 0
-4853 -1636 12238 0
-4855 -1638 12238 0
-4857 -1640 12238 0
-4859 -1642 12238 0
-4861 -1644 12238 0
-4863 -1646 12238 0
-4865 -1648 12238 0
-4867 -1650 12238 0
4866 1649 12238 0
c ((max_left_00001_00007_00003=max_left_00001_00007_00004)=tv=SATLiteral(12239))
-1636 -12239 0
-1638 -12239 0
-1640 1651 -12239 0
-1642 1653 -12239 0
-1644 1655 -12239 0
-1646 1657 -12239 0
-1648 1659 -12239 0
-1650 1661 -12239 0
1649 -1660 -12239 0
-1651 1640 -12239 0
-1653 1642 -12239 0
-1655 1644 -12239 0
-1657 1646 -12239 0
-1659 1648 -12239 0
-1661 1650 -12239 0
1660 -1649 -12239 0
-1640 -1651 12239 0
-1642 -1653 12239 0
-1644 -1655 12239 0
-1646 -1657 12239 0
-1648 -1659 12239 0
-1650 -1661 12239 0
1649 1660 12239 0
c ((variant_fields_00001_00007_00004=max_left_00001_00007_00004)=tv=SATLiteral(12240))
-4868 1651 -12240 0
-1651 4868 -12240 0
-1653 -12240 0
-1655 -12240 0
-1657 -12240 0
-1659 -12240 0
-1661 -12240 0
1660 -12240 0
-4868 -1651 12240 0
c ((max_left_00001_00007_00004=max_left_00001_00007_00005)=tv=SATLiteral(12241))
-1651 1662 -12241 0
-1653 1664 -12241 0
-1655 1666 -12241 0
-1657 1668 -12241 0
-1659 1670 -12241 0
-1661 1672 -12241 0
1660 -1671 -12241 0
-1662 1651 -12241 0
-1664 1653 -12241 0
-1666 1655 -12241 0
-1668 1657 -12241 0
-1670 1659 -12241 0
-1672 1661 -12241 0
1671 -1660 -12241 0
-1651 -1662 12241 0
-1653 -1664 12241 0
-1655 -1666 12241 0
-1657 -1668 12241 0
-1659 -1670 12241 0
-1661 -1672 12241 0
1660 1671 12241 0
c ((variant_fields_00001_00007_00005=max_left_00001_00007_00005)=tv=SATLiteral(12242))
-4869 -12242 0
-4871 -12242 0
-4873 1662 -12242 0
-4875 1664 -12242 0
-4877 1666 -12242 0
-4879 1668 -12242 0
-4881 1670 -12242 0
-4883 1672 -12242 0
4882 -1671 -12242 0
-1662 4873 -12242 0
-1664 4875 -12242 0
-1666 4877 -12242 0
-1668 4879 -12242 0
-1670 4881 -12242 0
-1672 4883 -12242 0
1671 -4882 -12242 0
-4873 -1662 12242 0
-4875 -1664 12242 0
-4877 -1666 12242 0
-4879 -1668 12242 0
-4881 -1670 12242 0
-4883 -1672 12242 0
4882 1671 12242 0
c ((max_left_00001_00007_00005=max_left_00001_00007_00006)=tv=SATLiteral(12243))
-1662 1673 -12243 0
-1664 1675 -12243 0
-1666 1677 -12243 0
-1668 1679 -12243 0
-1670 1681 -12243 0
-1672 1683 -12243 0
1671 -1682 -12243 0
-1673 1662 -12243 0
-1675 1664 -12243 0
-1677 1666 -12243 0
-1679 1668 -12243 0
-1681 1670 -12243 0
-1683 1672 -12243 0
1682 -1671 -12243 0
-1662 -1673 12243 0
-1664 -1675 12243 0
-1666 -1677 12243 0
-1668 -1679 12243 0
-1670 -1681 12243 0
-1672 -1683 12243 0
1671 1682 12243 0
c ((variant_fields_00001_00007_00006=max_left_00001_00007_00006)=tv=SATLiteral(12244))
-4884 -12244 0
-4886 -12244 0
-4888 1673 -12244 0
-4890 1675 -12244 0
-4892 1677 -12244 0
-4894 1679 -12244 0
-4896 1681 -12244 0
-4898 1683 -12244 0
4897 -1682 -12244 0
-1673 4888 -12244 0
-1675 4890 -12244 0
-1677 4892 -12244 0
-1679 4894 -12244 0
-1681 4896 -12244 0
-1683 4898 -12244 0
1682 -4897 -12244 0
-4888 -1673 12244 0
-4890 -1675 12244 0
-4892 -1677 12244 0
-4894 -1679 12244 0
-4896 -1681 12244 0
-4898 -1683 12244 0
4897 1682 12244 0
c ((max_left_00001_00007_00006=max_left_00001_00007_00007)=tv=SATLiteral(12245))
-1673 -12245 0
-1675 -12245 0
-1677 -12245 0
-1679 1684 -12245 0
-1681 1686 -12245 0
-1683 1688 -12245 0
1682 -1687 -12245 0
-1684 1679 -12245 0
-1686 1681 -12245 0
-1688 1683 -12245 0
1687 -1682 -12245 0
-1679 -1684 12245 0
-1681 -1686 12245 0
-1683 -1688 12245 0
1682 1687 12245 0
c ((variant_fields_00001_00007_00007=max_left_00001_00007_00007)=tv=SATLiteral(12246))
-4899 1684 -12246 0
-1684 4899 -12246 0
-1686 -12246 0
-1688 -12246 0
1687 -12246 0
-4899 -1684 12246 0
c ((max_left_00001_00007_00007=max_left_00001_00007_00008)=tv=SATLiteral(12247))
-1684 1689 -12247 0
-1686 1691 -12247 0
-1688 1693 -12247 0
1687 -1692 -12247 0
-1689 1684 -12247 0
-1691 1686 -12247 0
-1693 1688 -12247 0
1692 -1687 -12247 0
-1684 -1689 12247 0
-1686 -1691 12247 0
-1688 -1693 12247 0
1687 1692 12247 0
c ((variant_fields_00001_00007_00008=max_left_00001_00007_00008)=tv=SATLiteral(12248))
-4900 -12248 0
-4902 -12248 0
-4904 -12248 0
-4906 -12248 0
-4908 -12248 0
-4910 1689 -12248 0
-4912 1691 -12248 0
-4914 1693 -12248 0
4913 -1692 -12248 0
-1689 4910 -12248 0
-1691 4912 -12248 0
-1693 4914 -12248 0
1692 -4913 -12248 0
-4910 -1689 12248 0
-4912 -1691 12248 0
-4914 -1693 12248 0
4913 1692 12248 0
c ((max_left_00001_00007_00008=max_left_00001_00007_00009)=tv=SATLiteral(12249))
-1689 -12249 0
-1691 1694 -12249 0
-1693 1696 -12249 0
1692 -1695 -12249 0
-1694 1691 -12249 0
-1696 1693 -12249 0
1695 -1692 -12249 0
-1691 -1694 12249 0
-1693 -1696 12249 0
1692 1695 12249 0
c ((variant_fields_00001_00007_00009=max_left_00001_00007_00009)=tv=SATLiteral(12250))
-4915 1694 -12250 0
-1694 4915 -12250 0
-1696 -12250 0
1695 -12250 0
-4915 -1694 12250 0
c ((max_left_00001_00008_00001=max_left_00001_00008_00002)=tv=SATLiteral(12251))
-1698 1713 -12251 0
-1700 1715 -12251 0
-1702 1717 -12251 0
-1704 1719 -12251 0
-1706 1721 -12251 0
-1708 1723 -12251 0
-1710 1725 -12251 0
-1712 1727 -12251 0
1711 -1726 -12251 0
-1713 1698 -12251 0
-1715 1700 -12251 0
-1717 1702 -12251 0
-1719 1704 -12251 0
-1721 1706 -12251 0
-1723 1708 -12251 0
-1725 1710 -12251 0
-1727 1712 -12251 0
1726 -1711 -12251 0
-1698 -1713 12251 0
-1700 -1715 12251 0
-1702 -1717 12251 0
-1704 -1719 12251 0
-1706 -1721 12251 0
-1708 -1723 12251 0
-1710 -1725 12251 0
-1712 -1727 12251 0
1711 1726 12251 0
c ((variant_fields_00001_00008_00002=max_left_00001_00008_00002)=tv=SATLiteral(12252))
-4931 1713 -12252 0
-4933 1715 -12252 0
-4935 1717 -12252 0
-4937 1719 -12252 0
-4939 1721 -12252 0
-4941 1723 -12252 0
-4943 1725 -12252 0
-4945 1727 -12252 0
4944 -1726 -12252 0
-1713 4931 -12252 0
-1715 4933 -12252 0
-1717 4935 -12252 0
-1719 4937 -12252 0
-1721 4939 -12252 0
-1723 4941 -12252 0
-1725 4943 -12252 0
-1727 4945 -12252 0
1726 -4944 -12252 0
-4931 -1713 12252 0
-4933 -1715 12252 0
-4935 -1717 12252 0
-4937 -1719 12252 0
-4939 -1721 12252 0
-4941 -1723 12252 0
-4943 -1725 12252 0
-4945 -1727 12252 0
4944 1726 12252 0
c ((max_left_00001_00008_00002=max_left_00001_00008_00003)=tv=SATLiteral(12253))
-1713 -12253 0
-1715 -12253 0
-1717 -12253 0
-1719 -12253 0
-1721 -12253 0
-1723 -12253 0
-1725 -12253 0
-1727 -1728 -12253 0
1726 1728 -12253 0
1728 1727 -12253 0
-1728 -1726 -12253 0
-1727 1728 12253 0
1726 -1728 12253 0
c ((variant_fields_00001_00008_00003=max_left_00001_00008_00003)=tv=SATLiteral(12254))
-4946 -1728 -12254 0
1728 4946 -12254 0
-1728 -12254 0
-4946 1728 12254 0
c ((max_left_00001_00008_00003=max_left_00001_00008_00004)=tv=SATLiteral(12255))
1728 -1729 -12255 0
-1728 1729 -12255 0
1729 -1728 -12255 0
-1729 1728 -12255 0
1728 1729 12255 0
-1728 -1729 12255 0
c ((variant_fields_00001_00008_00004=max_left_00001_00008_00004)=tv=SATLiteral(12256))
-4947 -12256 0
-4949 -12256 0
-4951 -12256 0
-4953 -12256 0
-4955 -12256 0
-4957 -12256 0
-4959 -12256 0
-4961 -1729 -12256 0
4960 1729 -12256 0
1729 4961 -12256 0
-1729 -4960 -12256 0
-4961 1729 12256 0
4960 -1729 12256 0
c ((max_left_00001_00008_00005=max_left_00001_00008_00006)=tv=SATLiteral(12257))
1730 -1731 -12257 0
-1730 1731 -12257 0
1731 -1730 -12257 0
-1731 1730 -12257 0
1730 1731 12257 0
-1730 -1731 12257 0
c ((variant_fields_00001_00008_00006=max_left_00001_00008_00006)=tv=SATLiteral(12258))
-4963 -12258 0
-4965 -12258 0
-4967 -12258 0
-4969 -12258 0
-4971 -12258 0
-4973 -12258 0
-4975 -12258 0
-4977 -1731 -12258 0
4976 1731 -12258 0
1731 4977 -12258 0
-1731 -4976 -12258 0
-4977 1731 12258 0
4976 -1731 12258 0
c ((max_left_00001_00008_00006=max_left_00001_00008_00007)=tv=SATLiteral(12259))
1731 -1732 -12259 0
-1731 1732 -12259 0
1732 -1731 -12259 0
-1732 1731 -12259 0
1731 1732 12259 0
-1731 -1732 12259 0
c ((variant_fields_00001_00008_00007=max_left_00001_00008_00007)=tv=SATLiteral(12260))
-4978 -12260 0
-4980 -12260 0
-4982 -12260 0
-4984 -12260 0
-4986 -12260 0
-4988 -12260 0
-4990 -12260 0
-4992 -1732 -12260 0
4991 1732 -12260 0
1732 4992 -12260 0
-1732 -4991 -12260 0
-4992 1732 12260 0
4991 -1732 12260 0
c ((max_left_00001_00008_00007=max_left_00001_00008_00008)=tv=SATLiteral(12261))
1732 -1733 -12261 0
-1732 1733 -12261 0
1733 -1732 -12261 0
-1733 1732 -12261 0
1732 1733 12261 0
-1732 -1733 12261 0
c ((variant_fields_00001_00008_00008=max_left_00001_00008_00008)=tv=SATLiteral(12262))
-4993 -12262 0
-4995 -12262 0
-4997 -12262 0
-4999 -12262 0
-5001 -12262 0
-5003 -12262 0
-5005 -12262 0
-5007 -1733 -12262 0
5006 1733 -12262 0
1733 5007 -12262 0
-1733 -5006 -12262 0
-5007 1733 12262 0
5006 -1733 12262 0
c ((max_left_00001_00008_00008=max_left_00001_00008_00009)=tv=SATLiteral(12263))
1733 -1734 -12263 0
-1733 1734 -12263 0
1734 -1733 -12263 0
-1734 1733 -12263 0
1733 1734 12263 0
-1733 -1734 12263 0
c ((variant_fields_00001_00008_00009=max_left_00001_00008_00009)=tv=SATLiteral(12264))
-5008 -12264 0
-5010 -12264 0
-5012 -12264 0
-5014 -12264 0
-5016 -12264 0
-5018 -12264 0
-5020 -12264 0
-5022 -1734 -12264 0
5021 1734 -12264 0
1734 5022 -12264 0
-1734 -5021 -12264 0
-5022 1734 12264 0
5021 -1734 12264 0
c ((max_left_00001_00009_00001=max_left_00001_00009_00002)=tv=SATLiteral(12265))
-1736 1751 -12265 0
-1738 1753 -12265 0
-1740 1755 -12265 0
-1742 1757 -12265 0
-1744 1759 -12265 0
-1746 1761 -12265 0
-1748 1763 -12265 0
-1750 1765 -12265 0
1749 -1764 -12265 0
-1751 1736 -12265 0
-1753 1738 -12265 0
-1755 1740 -12265 0
-1757 1742 -12265 0
-1759 1744 -12265 0
-1761 1746 -12265 0
-1763 1748 -12265 0
-1765 1750 -12265 0
1764 -1749 -12265 0
-1736 -1751 12265 0
-1738 -1753 12265 0
-1740 -1755 12265 0
-1742 -1757 12265 0
-1744 -1759 12265 0
-1746 -1761 12265 0
-1748 -1763 12265 0
-1750 -1765 12265 0
1749 1764 12265 0
c ((variant_fields_00001_00009_00002=max_left_00001_00009_00002)=tv=SATLiteral(12266))
-5038 1751 -12266 0
-5040 1753 -12266 0
-5042 1755 -12266 0
-5044 1757 -12266 0
-5046 1759 -12266 0
-5048 1761 -12266 0
-5050 1763 -12266 0
-5052 1765 -12266 0
5051 -1764 -12266 0
-1751 5038 -12266 0
-1753 5040 -12266 0
-1755 5042 -12266 0
-1757 5044 -12266 0
-1759 5046 -12266 0
-1761 5048 -12266 0
-1763 5050 -12266 0
-1765 5052 -12266 0
1764 -5051 -12266 0
-5038 -1751 12266 0
-5040 -1753 12266 0
-5042 -1755 12266 0
-5044 -1757 12266 0
-5046 -1759 12266 0
-5048 -1761 12266 0
-5050 -1763 12266 0
-5052 -1765 12266 0
5051 1764 12266 0
c ((max_left_00001_00009_00002=max_left_00001_00009_00003)=tv=SATLiteral(12267))
-1751 1766 -12267 0
-1753 1768 -12267 0
-1755 1770 -12267 0
-1757 1772 -12267 0
-1759 1774 -12267 0
-1761 1776 -12267 0
-1763 1778 -12267 0
-1765 1780 -12267 0
1764 -1779 -12267 0
-1766 1751 -12267 0
-1768 1753 -12267 0
-1770 1755 -12267 0
-1772 1757 -12267 0
-1774 1759 -12267 0
-1776 1761 -12267 0
-1778 1763 -12267 0
-1780 1765 -12267 0
1779 -1764 -12267 0
-1751 -1766 12267 0
-1753 -1768 12267 0
-1755 -1770 12267 0
-1757 -1772 12267 0
-1759 -1774 12267 0
-1761 -1776 12267 0
-1763 -1778 12267 0
-1765 -1780 12267 0
1764 1779 12267 0
c ((variant_fields_00001_00009_00003=max_left_00001_00009_00003)=tv=SATLiteral(12268))
-5053 1766 -12268 0
-5055 1768 -12268 0
-5057 1770 -12268 0
-5059 1772 -12268 0
-5061 1774 -12268 0
-5063 1776 -12268 0
-5065 1778 -12268 0
-5067 1780 -12268 0
5066 -1779 -12268 0
-1766 5053 -12268 0
-1768 5055 -12268 0
-1770 5057 -12268 0
-1772 5059 -12268 0
-1774 5061 -12268 0
-1776 5063 -12268 0
-1778 5065 -12268 0
-1780 5067 -12268 0
1779 -5066 -12268 0
-5053 -1766 12268 0
-5055 -1768 12268 0
-5057 -1770 12268 0
-5059 -1772 12268 0
-5061 -1774 12268 0
-5063 -1776 12268 0
-5065 -1778 12268 0
-5067 -1780 12268 0
5066 1779 12268 0
c ((max_left_00001_00009_00003=max_left_00001_00009_00004)=tv=SATLiteral(12269))
-1766 1781 -12269 0
-1768 1783 -12269 0
-1770 1785 -12269 0
-1772 1787 -12269 0
-1774 1789 -12269 0
-1776 1791 -12269 0
-1778 1793 -12269 0
-1780 1795 -12269 0
1779 -1794 -12269 0
-1781 1766 -12269 0
-1783 1768 -12269 0
-1785 1770 -12269 0
-1787 1772 -12269 0
-1789 1774 -12269 0
-1791 1776 -12269 0
-1793 1778 -12269 0
-1795 1780 -12269 0
1794 -1779 -12269 0
-1766 -1781 12269 0
-1768 -1783 12269 0
-1770 -1785 12269 0
-1772 -1787 12269 0
-1774 -1789 12269 0
-1776 -1791 12269 0
-1778 -1793 12269 0
-1780 -1795 12269 0
1779 1794 12269 0
c ((variant_fields_00001_00009_00004=max_left_00001_00009_00004)=tv=SATLiteral(12270))
-5068 1781 -12270 0
-5070 1783 -12270 0
-5072 1785 -12270 0
-5074 1787 -12270 0
-5076 1789 -12270 0
-5078 1791 -12270 0
-5080 1793 -12270 0
-5082 1795 -12270 0
5081 -1794 -12270 0
-1781 5068 -12270 0
-1783 5070 -12270 0
-1785 5072 -12270 0
-1787 5074 -12270 0
-1789 5076 -12270 0
-1791 5078 -12270 0
-1793 5080 -12270 0
-1795 5082 -12270 0
1794 -5081 -12270 0
-5068 -1781 12270 0
-5070 -1783 12270 0
-5072 -1785 12270 0
-5074 -1787 12270 0
-5076 -1789 12270 0
-5078 -1791 12270 0
-5080 -1793 12270 0
-5082 -1795 12270 0
5081 1794 12270 0
c ((max_left_00001_00009_00004=max_left_00001_00009_00005)=tv=SATLiteral(12271))
-1781 1796 -12271 0
-1783 1798 -12271 0
-1785 1800 -12271 0
-1787 1802 -12271 0
-1789 1804 -12271 0
-1791 1806 -12271 0
-1793 1808 -12271 0
-1795 1810 -12271 0
1794 -1809 -12271 0
-1796 1781 -12271 0
-1798 1783 -12271 0
-1800 1785 -12271 0
-1802 1787 -12271 0
-1804 1789 -12271 0
-1806 1791 -12271 0
-1808 1793 -12271 0
-1810 1795 -12271 0
1809 -1794 -12271 0
-1781 -1796 12271 0
-1783 -1798 12271 0
-1785 -1800 12271 0
-1787 -1802 12271 0
-1789 -1804 12271 0
-1791 -1806 12271 0
-1793 -1808 12271 0
-1795 -1810 12271 0
1794 1809 12271 0
c ((variant_fields_00001_00009_00005=max_left_00001_00009_00005)=tv=SATLiteral(12272))
-5083 1796 -12272 0
-1796 5083 -12272 0
-1798 -12272 0
-1800 -12272 0
-1802 -12272 0
-1804 -12272 0
-1806 -12272 0
-1808 -12272 0
-1810 -12272 0
1809 -12272 0
-5083 -1796 12272 0
c ((max_left_00001_00009_00005=max_left_00001_00009_00006)=tv=SATLiteral(12273))
-1796 1811 -12273 0
-1798 1813 -12273 0
-1800 1815 -12273 0
-1802 1817 -12273 0
-1804 1819 -12273 0
-1806 1821 -12273 0
-1808 1823 -12273 0
-1810 1825 -12273 0
1809 -1824 -12273 0
-1811 1796 -12273 0
-1813 1798 -12273 0
-1815 1800 -12273 0
-1817 1802 -12273 0
-1819 1804 -12273 0
-1821 1806 -12273 0
-1823 1808 -12273 0
-1825 1810 -12273 0
1824 -1809 -12273 0
-1796 -1811 12273 0
-1798 -1813 12273 0
-1800 -1815 12273 0
-1802 -1817 12273 0
-1804 -1819 12273 0
-1806 -1821 12273 0
-1808 -1823 12273 0
-1810 -1825 12273 0
1809 1824 12273 0
c ((variant_fields_00001_00009_00006=max_left_00001_00009_00006)=tv=SATLiteral(12274))
-5084 1811 -12274 0
-5086 1813 -12274 0
-5088 1815 -12274 0
-5090 1817 -12274 0
-5092 1819 -12274 0
-5094 1821 -12274 0
-5096 1823 -12274 0
-5098 1825 -12274 0
5097 -1824 -12274 0
-1811 5084 -12274 0
-1813 5086 -12274 0
-1815 5088 -12274 0
-1817 5090 -12274 0
-1819 5092 -12274 0
-1821 5094 -12274 0
-1823 5096 -12274 0
-1825 5098 -12274 0
1824 -5097 -12274 0
-5084 -1811 12274 0
-5086 -1813 12274 0
-5088 -1815 12274 0
-5090 -1817 12274 0
-5092 -1819 12274 0
-5094 -1821 12274 0
-5096 -1823 12274 0
-5098 -1825 12274 0
5097 1824 12274 0
c ((max_left_00001_00009_00006=max_left_00001_00009_00007)=tv=SATLiteral(12275))
-1811 -12275 0
-1813 -12275 0
-1815 -12275 0
-1817 -12275 0
-1819 -12275 0
-1821 -12275 0
-1823 -12275 0
-1825 -1826 -12275 0
1824 1826 -12275 0
1826 1825 -12275 0
-1826 -1824 -12275 0
-1825 1826 12275 0
1824 -1826 12275 0
c ((variant_fields_00001_00009_00007=max_left_00001_00009_00007)=tv=SATLiteral(12276))
-5099 -1826 -12276 0
1826 5099 -12276 0
-1826 -12276 0
-5099 1826 12276 0
c ((max_left_00001_00009_00007=max_left_00001_00009_00008)=tv=SATLiteral(12277))
1826 -1827 -12277 0
-1826 1827 -12277 0
1827 -1826 -12277 0
-1827 1826 -12277 0
1826 1827 12277 0
-1826 -1827 12277 0
c ((variant_fields_00001_00009_00008=max_left_00001_00009_00008)=tv=SATLiteral(12278))
-5100 -12278 0
-5102 -12278 0
-5104 -12278 0
-5106 -12278 0
-5108 -12278 0
-5110 -12278 0
-5112 -12278 0
-5114 -1827 -12278 0
5113 1827 -12278 0
1827 5114 -12278 0
-1827 -5113 -12278 0
-5114 1827 12278 0
5113 -1827 12278 0
c ((max_left_00001_00009_00008=max_left_00001_00009_00009)=tv=SATLiteral(12279))
1827 -1828 -12279 0
-1827 1828 -12279 0
1828 -1827 -12279 0
-1828 1827 -12279 0
1827 1828 12279 0
-1827 -1828 12279 0
c ((variant_fields_00001_00009_00009=max_left_00001_00009_00009)=tv=SATLiteral(12280))
-5115 -12280 0
-5117 -12280 0
-5119 -12280 0
-5121 -12280 0
-5123 -12280 0
-5125 -12280 0
-5127 -12280 0
-5129 -1828 -12280 0
5128 1828 -12280 0
1828 5129 -12280 0
-1828 -5128 -12280 0
-5129 1828 12280 0
5128 -1828 12280 0
c ((max_left_00002_00001_00001=max_left_00002_00001_00002)=tv=SATLiteral(12281))
-1830 1845 -12281 0
-1832 1847 -12281 0
-1834 1849 -12281 0
-1836 1851 -12281 0
-1838 1853 -12281 0
-1840 1855 -12281 0
-1842 1857 -12281 0
-1844 1859 -12281 0
1843 -1858 -12281 0
-1845 1830 -12281 0
-1847 1832 -12281 0
-1849 1834 -12281 0
-1851 1836 -12281 0
-1853 1838 -12281 0
-1855 1840 -12281 0
-1857 1842 -12281 0
-1859 1844 -12281 0
1858 -1843 -12281 0
-1830 -1845 12281 0
-1832 -1847 12281 0
-1834 -1849 12281 0
-1836 -1851 12281 0
-1838 -1853 12281 0
-1840 -1855 12281 0
-1842 -1857 12281 0
-1844 -1859 12281 0
1843 1858 12281 0
c ((variant_fields_00002_00001_00002=max_left_00002_00001_00002)=tv=SATLiteral(12282))
-5145 1845 -12282 0
-5147 1847 -12282 0
-5149 1849 -12282 0
-5151 1851 -12282 0
-5153 1853 -12282 0
-5155 1855 -12282 0
-5157 1857 -12282 0
-5159 1859 -12282 0
5158 -1858 -12282 0
-1845 5145 -12282 0
-1847 5147 -12282 0
-1849 5149 -12282 0
-1851 5151 -12282 0
-1853 5153 -12282 0
-1855 5155 -12282 0
-1857 5157 -12282 0
-1859 5159 -12282 0
1858 -5158 -12282 0
-5145 -1845 12282 0
-5147 -1847 12282 0
-5149 -1849 12282 0
-5151 -1851 12282 0
-5153 -1853 12282 0
-5155 -1855 12282 0
-5157 -1857 12282 0
-5159 -1859 12282 0
5158 1858 12282 0
c ((max_left_00002_00001_00002=max_left_00002_00001_00003)=tv=SATLiteral(12283))
-1845 1860 -12283 0
-1847 1862 -12283 0
-1849 1864 -12283 0
-1851 1866 -12283 0
-1853 1868 -12283 0
-1855 1870 -12283 0
-1857 1872 -12283 0
-1859 1874 -12283 0
1858 -1873 -12283 0
-1860 1845 -12283 0
-1862 1847 -12283 0
-1864 1849 -12283 0
-1866 1851 -12283 0
-1868 1853 -12283 0
-1870 1855 -12283 0
-1872 1857 -12283 0
-1874 1859 -12283 0
1873 -1858 -12283 0
-1845 -1860 12283 0
-1847 -1862 12283 0
-1849 -1864 12283 0
-1851 -1866 12283 0
-1853 -1868 12283 0
-1855 -1870 12283 0
-1857 -1872 12283 0
-1859 -1874 12283 0
1858 1873 12283 0
c ((variant_fields_00002_00001_00003=max_left_00002_00001_00003)=tv=SATLiteral(12284))
-5160 1860 -12284 0
-5162 1862 -12284 0
-5164 1864 -12284 0
-5166 1866 -12284 0
-5168 1868 -12284 0
-5170 1870 -12284 0
-5172 1872 -12284 0
-5174 1874 -12284 0
5173 -1873 -12284 0
-1860 5160 -12284 0
-1862 5162 -12284 0
-1864 5164 -12284 0
-1866 5166 -12284 0
-1868 5168 -12284 0
-1870 5170 -12284 0
-1872 5172 -12284 0
-1874 5174 -12284 0
1873 -5173 -12284 0
-5160 -1860 12284 0
-5162 -1862 12284 0
-5164 -1864 12284 0
-5166 -1866 12284 0
-5168 -1868 12284 0
-5170 -1870 12284 0
-5172 -1872 12284 0
-5174 -1874 12284 0
5173 1873 12284 0
c ((max_left_00002_00001_00003=max_left_00002_00001_00004)=tv=SATLiteral(12285))
-1860 1875 -12285 0
-1862 1877 -12285 0
-1864 1879 -12285 0
-1866 1881 -12285 0
-1868 1883 -12285 0
-1870 1885 -12285 0
-1872 1887 -12285 0
-1874 1889 -12285 0
1873 -1888 -12285 0
-1875 1860 -12285 0
-1877 1862 -12285 0
-1879 1864 -12285 0
-1881 1866 -12285 0
-1883 1868 -12285 0
-1885 1870 -12285 0
-1887 1872 -12285 0
-1889 1874 -12285 0
1888 -1873 -12285 0
-1860 -1875 12285 0
-1862 -1877 12285 0
-1864 -1879 12285 0
-1866 -1881 12285 0
-1868 -1883 12285 0
-1870 -1885 12285 0
-1872 -1887 12285 0
-1874 -1889 12285 0
1873 1888 12285 0
c ((variant_fields_00002_00001_00004=max_left_00002_00001_00004)=tv=SATLiteral(12286))
-5175 1875 -12286 0
-5177 1877 -12286 0
-5179 1879 -12286 0
-5181 1881 -12286 0
-5183 1883 -12286 0
-5185 1885 -12286 0
-5187 1887 -12286 0
-5189 1889 -12286 0
5188 -1888 -12286 0
-1875 5175 -12286 0
-1877 5177 -12286 0
-1879 5179 -12286 0
-1881 5181 -12286 0
-1883 5183 -12286 0
-1885 5185 -12286 0
-1887 5187 -12286 0
-1889 5189 -12286 0
1888 -5188 -12286 0
-5175 -1875 12286 0
-5177 -1877 12286 0
-5179 -1879 12286 0
-5181 -1881 12286 0
-5183 -1883 12286 0
-5185 -1885 12286 0
-5187 -1887 12286 0
-5189 -1889 12286 0
5188 1888 12286 0
c ((max_left_00002_00001_00004=max_left_00002_00001_00005)=tv=SATLiteral(12287))
-1875 1890 -12287 0
-1877 1892 -12287 0
-1879 1894 -12287 0
-1881 1896 -12287 0
-1883 1898 -12287 0
-1885 1900 -12287 0
-1887 1902 -12287 0
-1889 1904 -12287 0
1888 -1903 -12287 0
-1890 1875 -12287 0
-1892 1877 -12287 0
-1894 1879 -12287 0
-1896 1881 -12287 0
-1898 1883 -12287 0
-1900 1885 -12287 0
-1902 1887 -12287 0
-1904 1889 -12287 0
1903 -1888 -12287 0
-1875 -1890 12287 0
-1877 -1892 12287 0
-1879 -1894 12287 0
-1881 -1896 12287 0
-1883 -1898 12287 0
-1885 -1900 12287 0
-1887 -1902 12287 0
-1889 -1904 12287 0
1888 1903 12287 0
c ((variant_fields_00002_00001_00005=max_left_00002_00001_00005)=tv=SATLiteral(12288))
-5190 1890 -12288 0
-5192 1892 -12288 0
-5194 1894 -12288 0
-5196 1896 -12288 0
-5198 1898 -12288 0
-5200 1900 -12288 0
-5202 1902 -12288 0
-5204 1904 -12288 0
5203 -1903 -12288 0
-1890 5190 -12288 0
-1892 5192 -12288 0
-1894 5194 -12288 0
-1896 5196 -12288 0
-1898 5198 -12288 0
-1900 5200 -12288 0
-1902 5202 -12288 0
-1904 5204 -12288 0
1903 -5203 -12288 0
-5190 -1890 12288 0
-5192 -1892 12288 0
-5194 -1894 12288 0
-5196 -1896 12288 0
-5198 -1898 12288 0
-5200 -1900 12288 0
-5202 -1902 12288 0
-5204 -1904 12288 0
5203 1903 12288 0
c ((max_left_00002_00001_00005=max_left_00002_00001_00006)=tv=SATLiteral(12289))
-1890 1905 -12289 0
-1892 1907 -12289 0
-1894 1909 -12289 0
-1896 1911 -12289 0
-1898 1913 -12289 0
-1900 1915 -12289 0
-1902 1917 -12289 0
-1904 1919 -12289 0
1903 -1918 -12289 0
-1905 1890 -12289 0
-1907 1892 -12289 0
-1909 1894 -12289 0
-1911 1896 -12289 0
-1913 1898 -12289 0
-1915 1900 -12289 0
-1917 1902 -12289 0
-1919 1904 -12289 0
1918 -1903 -12289 0
-1890 -1905 12289 0
-1892 -1907 12289 0
-1894 -1909 12289 0
-1896 -1911 12289 0
-1898 -1913 12289 0
-1900 -1915 12289 0
-1902 -1917 12289 0
-1904 -1919 12289 0
1903 1918 12289 0
c ((variant_fields_00002_00001_00006=max_left_00002_00001_00006)=tv=SATLiteral(12290))
-5205 1905 -12290 0
-5207 1907 -12290 0
-5209 1909 -12290 0
-5211 1911 -12290 0
-5213 1913 -12290 0
-5215 1915 -12290 0
-5217 1917 -12290 0
-5219 1919 -12290 0
5218 -1918 -12290 0
-1905 5205 -12290 0
-1907 5207 -12290 0
-1909 5209 -12290 0
-1911 5211 -12290 0
-1913 5213 -12290 0
-1915 5215 -12290 0
-1917 5217 -12290 0
-1919 5219 -12290 0
1918 -5218 -12290 0
-5205 -1905 12290 0
-5207 -1907 12290 0
-5209 -1909 12290 0
-5211 -1911 12290 0
-5213 -1913 12290 0
-5215 -1915 12290 0
-5217 -1917 12290 0
-5219 -1919 12290 0
5218 1918 12290 0
c ((max_left_00002_00001_00006=max_left_00002_00001_00007)=tv=SATLiteral(12291))
-1905 1920 -12291 0
-1907 1922 -12291 0
-1909 1924 -12291 0
-1911 1926 -12291 0
-1913 1928 -12291 0
-1915 1930 -12291 0
-1917 1932 -12291 0
-1919 1934 -12291 0
1918 -1933 -12291 0
-1920 1905 -12291 0
-1922 1907 -12291 0
-1924 1909 -12291 0
-1926 1911 -12291 0
-1928 1913 -12291 0
-1930 1915 -12291 0
-1932 1917 -12291 0
-1934 1919 -12291 0
1933 -1918 -12291 0
-1905 -1920 12291 0
-1907 -1922 12291 0
-1909 -1924 12291 0
-1911 -1926 12291 0
-1913 -1928 12291 0
-1915 -1930 12291 0
-1917 -1932 12291 0
-1919 -1934 12291 0
1918 1933 12291 0
c ((variant_fields_00002_00001_00007=max_left_00002_00001_00007)=tv=SATLiteral(12292))
-5220 1920 -12292 0
-5222 1922 -12292 0
-5224 1924 -12292 0
-5226 1926 -12292 0
-5228 1928 -12292 0
-5230 1930 -12292 0
-5232 1932 -12292 0
-5234 1934 -12292 0
5233 -1933 -12292 0
-1920 5220 -12292 0
-1922 5222 -12292 0
-1924 5224 -12292 0
-1926 5226 -12292 0
-1928 5228 -12292 0
-1930 5230 -12292 0
-1932 5232 -12292 0
-1934 5234 -12292 0
1933 -5233 -12292 0
-5220 -1920 12292 0
-5222 -1922 12292 0
-5224 -1924 12292 0
-5226 -1926 12292 0
-5228 -1928 12292 0
-5230 -1930 12292 0
-5232 -1932 12292 0
-5234 -1934 12292 0
5233 1933 12292 0
c ((max_left_00002_00001_00007=max_left_00002_00001_00008)=tv=SATLiteral(12293))
-1920 1935 -12293 0
-1922 1937 -12293 0
-1924 1939 -12293 0
-1926 1941 -12293 0
-1928 1943 -12293 0
-1930 1945 -12293 0
-1932 1947 -12293 0
-1934 1949 -12293 0
1933 -1948 -12293 0
-1935 1920 -12293 0
-1937 1922 -12293 0
-1939 1924 -12293 0
-1941 1926 -12293 0
-1943 1928 -12293 0
-1945 1930 -12293 0
-1947 1932 -12293 0
-1949 1934 -12293 0
1948 -1933 -12293 0
-1920 -1935 12293 0
-1922 -1937 12293 0
-1924 -1939 12293 0
-1926 -1941 12293 0
-1928 -1943 12293 0
-1930 -1945 12293 0
-1932 -1947 12293 0
-1934 -1949 12293 0
1933 1948 12293 0
c ((variant_fields_00002_00001_00008=max_left_00002_00001_00008)=tv=SATLiteral(12294))
-5235 1935 -12294 0
-5237 1937 -12294 0
-5239 1939 -12294 0
-5241 1941 -12294 0
-5243 1943 -12294 0
-5245 1945 -12294 0
-5247 1947 -12294 0
-5249 1949 -12294 0
5248 -1948 -12294 0
-1935 5235 -12294 0
-1937 5237 -12294 0
-1939 5239 -12294 0
-1941 5241 -12294 0
-1943 5243 -12294 0
-1945 5245 -12294 0
-1947 5247 -12294 0
-1949 5249 -12294 0
1948 -5248 -12294 0
-5235 -1935 12294 0
-5237 -1937 12294 0
-5239 -1939 12294 0
-5241 -1941 12294 0
-5243 -1943 12294 0
-5245 -1945 12294 0
-5247 -1947 12294 0
-5249 -1949 12294 0
5248 1948 12294 0
c ((max_left_00002_00001_00008=max_left_00002_00001_00009)=tv=SATLiteral(12295))
-1935 1950 -12295 0
-1937 1952 -12295 0
-1939 1954 -12295 0
-1941 1956 -12295 0
-1943 1958 -12295 0
-1945 1960 -12295 0
-1947 1962 -12295 0
-1949 1964 -12295 0
1948 -1963 -12295 0
-1950 1935 -12295 0
-1952 1937 -12295 0
-1954 1939 -12295 0
-1956 1941 -12295 0
-1958 1943 -12295 0
-1960 1945 -12295 0
-1962 1947 -12295 0
-1964 1949 -12295 0
1963 -1948 -12295 0
-1935 -1950 12295 0
-1937 -1952 12295 0
-1939 -1954 12295 0
-1941 -1956 12295 0
-1943 -1958 12295 0
-1945 -1960 12295 0
-1947 -1962 12295 0
-1949 -1964 12295 0
1948 1963 12295 0
c ((variant_fields_00002_00001_00009=max_left_00002_00001_00009)=tv=SATLiteral(12296))
-5250 1950 -12296 0
-5252 1952 -12296 0
-5254 1954 -12296 0
-5256 1956 -12296 0
-5258 1958 -12296 0
-5260 1960 -12296 0
-5262 1962 -12296 0
-5264 1964 -12296 0
5263 -1963 -12296 0
-1950 5250 -12296 0
-1952 5252 -12296 0
-1954 5254 -12296 0
-1956 5256 -12296 0
-1958 5258 -12296 0
-1960 5260 -12296 0
-1962 5262 -12296 0
-1964 5264 -12296 0
1963 -5263 -12296 0
-5250 -1950 12296 0
-5252 -1952 12296 0
-5254 -1954 12296 0
-5256 -1956 12296 0
-5258 -1958 12296 0
-5260 -1960 12296 0
-5262 -1962 12296 0
-5264 -1964 12296 0
5263 1963 12296 0
c ((max_left_00002_00002_00001=max_left_00002_00002_00002)=tv=SATLiteral(12297))
-1966 1981 -12297 0
-1968 1983 -12297 0
-1970 1985 -12297 0
-1972 1987 -12297 0
-1974 1989 -12297 0
-1976 1991 -12297 0
-1978 1993 -12297 0
-1980 1995 -12297 0
1979 -1994 -12297 0
-1981 1966 -12297 0
-1983 1968 -12297 0
-1985 1970 -12297 0
-1987 1972 -12297 0
-1989 1974 -12297 0
-1991 1976 -12297 0
-1993 1978 -12297 0
-1995 1980 -12297 0
1994 -1979 -12297 0
-1966 -1981 12297 0
-1968 -1983 12297 0
-1970 -1985 12297 0
-1972 -1987 12297 0
-1974 -1989 12297 0
-1976 -1991 12297 0
-1978 -1993 12297 0
-1980 -1995 12297 0
1979 1994 12297 0
c ((variant_fields_00002_00002_00002=max_left_00002_00002_00002)=tv=SATLiteral(12298))
-5280 1981 -12298 0
-5282 1983 -12298 0
-5284 1985 -12298 0
-5286 1987 -12298 0
-5288 1989 -12298 0
-5290 1991 -12298 0
-5292 1993 -12298 0
-5294 1995 -12298 0
5293 -1994 -12298 0
-1981 5280 -12298 0
-1983 5282 -12298 0
-1985 5284 -12298 0
-1987 5286 -12298 0
-1989 5288 -12298 0
-1991 5290 -12298 0
-1993 5292 -12298 0
-1995 5294 -12298 0
1994 -5293 -12298 0
-5280 -1981 12298 0
-5282 -1983 12298 0
-5284 -1985 12298 0
-5286 -1987 12298 0
-5288 -1989 12298 0
-5290 -1991 12298 0
-5292 -1993 12298 0
-5294 -1995 12298 0
5293 1994 12298 0
c ((max_left_00002_00002_00002=max_left_00002_00002_00003)=tv=SATLiteral(12299))
-1981 1996 -12299 0
-1983 1998 -12299 0
-1985 2000 -12299 0
-1987 2002 -12299 0
-1989 2004 -12299 0
-1991 2006 -12299 0
-1993 2008 -12299 0
-1995 2010 -12299 0
1994 -2009 -12299 0
-1996 1981 -12299 0
-1998 1983 -12299 0
-2000 1985 -12299 0
-2002 1987 -12299 0
-2004 1989 -12299 0
-2006 1991 -12299 0
-2008 1993 -12299 0
-2010 1995 -12299 0
2009 -1994 -12299 0
-1981 -1996 12299 0
-1983 -1998 12299 0
-1985 -2000 12299 0
-1987 -2002 12299 0
-1989 -2004 12299 0
-1991 -2006 12299 0
-1993 -2008 12299 0
-1995 -2010 12299 0
1994 2009 12299 0
c ((variant_fields_00002_00002_00003=max_left_00002_00002_00003)=tv=SATLiteral(12300))
-5295 1996 -12300 0
-5297 1998 -12300 0
-5299 2000 -12300 0
-5301 2002 -12300 0
-5303 2004 -12300 0
-5305 2006 -12300 0
-5307 2008 -12300 0
-5309 2010 -12300 0
5308 -2009 -12300 0
-1996 5295 -12300 0
-1998 5297 -12300 0
-2000 5299 -12300 0
-2002 5301 -12300 0
-2004 5303 -12300 0
-2006 5305 -12300 0
-2008 5307 -12300 0
-2010 5309 -12300 0
2009 -5308 -12300 0
-5295 -1996 12300 0
-5297 -1998 12300 0
-5299 -2000 12300 0
-5301 -2002 12300 0
-5303 -2004 12300 0
-5305 -2006 12300 0
-5307 -2008 12300 0
-5309 -2010 12300 0
5308 2009 12300 0
c ((max_left_00002_00002_00003=max_left_00002_00002_00004)=tv=SATLiteral(12301))
-1996 2011 -12301 0
-1998 2013 -12301 0
-2000 2015 -12301 0
-2002 2017 -12301 0
-2004 2019 -12301 0
-2006 2021 -12301 0
-2008 2023 -12301 0
-2010 2025 -12301 0
2009 -2024 -12301 0
-2011 1996 -12301 0
-2013 1998 -12301 0
-2015 2000 -12301 0
-2017 2002 -12301 0
-2019 2004 -12301 0
-2021 2006 -12301 0
-2023 2008 -12301 0
-2025 2010 -12301 0
2024 -2009 -12301 0
-1996 -2011 12301 0
-1998 -2013 12301 0
-2000 -2015 12301 0
-2002 -2017 12301 0
-2004 -2019 12301 0
-2006 -2021 12301 0
-2008 -2023 12301 0
-2010 -2025 12301 0
2009 2024 12301 0
c ((variant_fields_00002_00002_00004=max_left_00002_00002_00004)=tv=SATLiteral(12302))
-5310 2011 -12302 0
-5312 2013 -12302 0
-5314 2015 -12302 0
-5316 2017 -12302 0
-5318 2019 -12302 0
-5320 2021 -12302 0
-5322 2023 -12302 0
-5324 2025 -12302 0
5323 -2024 -12302 0
-2011 5310 -12302 0
-2013 5312 -12302 0
-2015 5314 -12302 0
-2017 5316 -12302 0
-2019 5318 -12302 0
-2021 5320 -12302 0
-2023 5322 -12302 0
-2025 5324 -12302 0
2024 -5323 -12302 0
-5310 -2011 12302 0
-5312 -2013 12302 0
-5314 -2015 12302 0
-5316 -2017 12302 0
-5318 -2019 12302 0
-5320 -2021 12302 0
-5322 -2023 12302 0
-5324 -2025 12302 0
5323 2024 12302 0
c ((max_left_00002_00002_00004=max_left_00002_00002_00005)=tv=SATLiteral(12303))
-2011 2026 -12303 0
-2013 2028 -12303 0
-2015 2030 -12303 0
-2017 2032 -12303 0
-2019 2034 -12303 0
-2021 2036 -12303 0
-2023 2038 -12303 0
-2025 2040 -12303 0
2024 -2039 -12303 0
-2026 2011 -12303 0
-2028 2013 -12303 0
-2030 2015 -12303 0
-2032 2017 -12303 0
-2034 2019 -12303 0
-2036 2021 -12303 0
-2038 2023 -12303 0
-2040 2025 -12303 0
2039 -2024 -12303 0
-2011 -2026 12303 0
-2013 -2028 12303 0
-2015 -2030 12303 0
-2017 -2032 12303 0
-2019 -2034 12303 0
-2021 -2036 12303 0
-2023 -2038 12303 0
-2025 -2040 12303 0
2024 2039 12303 0
c ((variant_fields_00002_00002_00005=max_left_00002_00002_00005)=tv=SATLiteral(12304))
-5325 2026 -12304 0
-5327 2028 -12304 0
-5329 2030 -12304 0
-5331 2032 -12304 0
-5333 2034 -12304 0
-5335 2036 -12304 0
-5337 2038 -12304 0
-5339 2040 -12304 0
5338 -2039 -12304 0
-2026 5325 -12304 0
-2028 5327 -12304 0
-2030 5329 -12304 0
-2032 5331 -12304 0
-2034 5333 -12304 0
-2036 5335 -12304 0
-2038 5337 -12304 0
-2040 5339 -12304 0
2039 -5338 -12304 0
-5325 -2026 12304 0
-5327 -2028 12304 0
-5329 -2030 12304 0
-5331 -2032 12304 0
-5333 -2034 12304 0
-5335 -2036 12304 0
-5337 -2038 12304 0
-5339 -2040 12304 0
5338 2039 12304 0
c ((max_left_00002_00002_00005=max_left_00002_00002_00006)=tv=SATLiteral(12305))
-2026 -12305 0
-2028 -12305 0
-2030 -12305 0
-2032 -12305 0
-2034 -12305 0
-2036 -12305 0
-2038 -12305 0
-2040 -2041 -12305 0
2039 2041 -12305 0
2041 2040 -12305 0
-2041 -2039 -12305 0
-2040 2041 12305 0
2039 -2041 12305 0
c ((variant_fields_00002_00002_00006=max_left_00002_00002_00006)=tv=SATLiteral(12306))
-5340 -2041 -12306 0
2041 5340 -12306 0
-2041 -12306 0
-5340 2041 12306 0
c ((max_left_00002_00002_00006=max_left_00002_00002_00007)=tv=SATLiteral(12307))
2041 -2042 -12307 0
-2041 2042 -12307 0
2042 -2041 -12307 0
-2042 2041 -12307 0
2041 2042 12307 0
-2041 -2042 12307 0
c ((variant_fields_00002_00002_00007=max_left_00002_00002_00007)=tv=SATLiteral(12308))
-5341 -12308 0
-5343 -12308 0
-5345 -12308 0
-5347 -12308 0
-5349 -12308 0
-5351 -12308 0
-5353 -12308 0
-5355 -2042 -12308 0
5354 2042 -12308 0
2042 5355 -12308 0
-2042 -5354 -12308 0
-5355 2042 12308 0
5354 -2042 12308 0
c ((max_left_00002_00002_00007=max_left_00002_00002_00008)=tv=SATLiteral(12309))
2042 -2043 -12309 0
-2042 2043 -12309 0
2043 -2042 -12309 0
-2043 2042 -12309 0
2042 2043 12309 0
-2042 -2043 12309 0
c ((variant_fields_00002_00002_00008=max_left_00002_00002_00008)=tv=SATLiteral(12310))
-5356 -12310 0
-5358 -12310 0
-5360 -12310 0
-5362 -12310 0
-5364 -12310 0
-5366 -12310 0
-5368 -12310 0
-5370 -2043 -12310 0
5369 2043 -12310 0
2043 5370 -12310 0
-2043 -5369 -12310 0
-5370 2043 12310 0
5369 -2043 12310 0
c ((max_left_00002_00002_00008=max_left_00002_00002_00009)=tv=SATLiteral(12311))
2043 -2044 -12311 0
-2043 2044 -12311 0
2044 -2043 -12311 0
-2044 2043 -12311 0
2043 2044 12311 0
-2043 -2044 12311 0
c ((variant_fields_00002_00002_00009=max_left_00002_00002_00009)=tv=SATLiteral(12312))
-5371 -12312 0
-5373 -12312 0
-5375 -12312 0
-5377 -12312 0
-5379 -12312 0
-5381 -12312 0
-5383 -12312 0
-5385 -2044 -12312 0
5384 2044 -12312 0
2044 5385 -12312 0
-2044 -5384 -12312 0
-5385 2044 12312 0
5384 -2044 12312 0
c ((max_left_00002_00003_00001=max_left_00002_00003_00002)=tv=SATLiteral(12313))
-2046 2061 -12313 0
-2048 2063 -12313 0
-2050 2065 -12313 0
-2052 2067 -12313 0
-2054 2069 -12313 0
-2056 2071 -12313 0
-2058 2073 -12313 0
-2060 2075 -12313 0
2059 -2074 -12313 0
-2061 2046 -12313 0
-2063 2048 -12313 0
-2065 2050 -12313 0
-2067 2052 -12313 0
-2069 2054 -12313 0
-2071 2056 -12313 0
-2073 2058 -12313 0
-2075 2060 -12313 0
2074 -2059 -12313 0
-2046 -2061 12313 0
-2048 -2063 12313 0
-2050 -2065 12313 0
-2052 -2067 12313 0
-2054 -2069 12313 0
-2056 -2071 12313 0
-2058 -2073 12313 0
-2060 -2075 12313 0
2059 2074 12313 0
c ((variant_fields_00002_00003_00002=max_left_00002_00003_00002)=tv=SATLiteral(12314))
-5401 2061 -12314 0
-5403 2063 -12314 0
-5405 2065 -12314 0
-5407 2067 -12314 0
-5409 2069 -12314 0
-5411 2071 -12314 0
-5413 2073 -12314 0
-5415 2075 -12314 0
5414 -2074 -12314 0
-2061 5401 -12314 0
-2063 5403 -12314 0
-2065 5405 -12314 0
-2067 5407 -12314 0
-2069 5409 -12314 0
-2071 5411 -12314 0
-2073 5413 -12314 0
-2075 5415 -12314 0
2074 -5414 -12314 0
-5401 -2061 12314 0
-5403 -2063 12314 0
-5405 -2065 12314 0
-5407 -2067 12314 0
-5409 -2069 12314 0
-5411 -2071 12314 0
-5413 -2073 12314 0
-5415 -2075 12314 0
5414 2074 12314 0
c ((max_left_00002_00003_00002=max_left_00002_00003_00003)=tv=SATLiteral(12315))
-2061 2076 -12315 0
-2063 2078 -12315 0
-2065 2080 -12315 0
-2067 2082 -12315 0
-2069 2084 -12315 0
-2071 2086 -12315 0
-2073 2088 -12315 0
-2075 2090 -12315 0
2074 -2089 -12315 0
-2076 2061 -12315 0
-2078 2063 -12315 0
-2080 2065 -12315 0
-2082 2067 -12315 0
-2084 2069 -12315 0
-2086 2071 -12315 0
-2088 2073 -12315 0
-2090 2075 -12315 0
2089 -2074 -12315 0
-2061 -2076 12315 0
-2063 -2078 12315 0
-2065 -2080 12315 0
-2067 -2082 12315 0
-2069 -2084 12315 0
-2071 -2086 12315 0
-2073 -2088 12315 0
-2075 -2090 12315 0
2074 2089 12315 0
c ((variant_fields_00002_00003_00003=max_left_00002_00003_00003)=tv=SATLiteral(12316))
-5416 2076 -12316 0
-5418 2078 -12316 0
-5420 2080 -12316 0
-5422 2082 -12316 0
-5424 2084 -12316 0
-5426 2086 -12316 0
-5428 2088 -12316 0
-5430 2090 -12316 0
5429 -2089 -12316 0
-2076 5416 -12316 0
-2078 5418 -12316 0
-2080 5420 -12316 0
-2082 5422 -12316 0
-2084 5424 -12316 0
-2086 5426 -12316 0
-2088 5428 -12316 0
-2090 5430 -12316 0
2089 -5429 -12316 0
-5416 -2076 12316 0
-5418 -2078 12316 0
-5420 -2080 12316 0
-5422 -2082 12316 0
-5424 -2084 12316 0
-5426 -2086 12316 0
-5428 -2088 12316 0
-5430 -2090 12316 0
5429 2089 12316 0
c ((max_left_00002_00003_00003=max_left_00002_00003_00004)=tv=SATLiteral(12317))
-2076 2091 -12317 0
-2078 2093 -12317 0
-2080 2095 -12317 0
-2082 2097 -12317 0
-2084 2099 -12317 0
-2086 2101 -12317 0
-2088 2103 -12317 0
-2090 2105 -12317 0
2089 -2104 -12317 0
-2091 2076 -12317 0
-2093 2078 -12317 0
-2095 2080 -12317 0
-2097 2082 -12317 0
-2099 2084 -12317 0
-2101 2086 -12317 0
-2103 2088 -12317 0
-2105 2090 -12317 0
2104 -2089 -12317 0
-2076 -2091 12317 0
-2078 -2093 12317 0
-2080 -2095 12317 0
-2082 -2097 12317 0
-2084 -2099 12317 0
-2086 -2101 12317 0
-2088 -2103 12317 0
-2090 -2105 12317 0
2089 2104 12317 0
c ((variant_fields_00002_00003_00004=max_left_00002_00003_00004)=tv=SATLiteral(12318))
-5431 2091 -12318 0
-2091 5431 -12318 0
-2093 -12318 0
-2095 -12318 0
-2097 -12318 0
-2099 -12318 0
-2101 -12318 0
-2103 -12318 0
-2105 -12318 0
2104 -12318 0
-5431 -2091 12318 0
c ((max_left_00002_00003_00004=max_left_00002_00003_00005)=tv=SATLiteral(12319))
-2091 2106 -12319 0
-2093 2108 -12319 0
-2095 2110 -12319 0
-2097 2112 -12319 0
-2099 2114 -12319 0
-2101 2116 -12319 0
-2103 2118 -12319 0
-2105 2120 -12319 0
2104 -2119 -12319 0
-2106 2091 -12319 0
-2108 2093 -12319 0
-2110 2095 -12319 0
-2112 2097 -12319 0
-2114 2099 -12319 0
-2116 2101 -12319 0
-2118 2103 -12319 0
-2120 2105 -12319 0
2119 -2104 -12319 0
-2091 -2106 12319 0
-2093 -2108 12319 0
-2095 -2110 12319 0
-2097 -2112 12319 0
-2099 -2114 12319 0
-2101 -2116 12319 0
-2103 -2118 12319 0
-2105 -2120 12319 0
2104 2119 12319 0
c ((variant_fields_00002_00003_00005=max_left_00002_00003_00005)=tv=SATLiteral(12320))
-5432 2106 -12320 0
-5434 2108 -12320 0
-5436 2110 -12320 0
-5438 2112 -12320 0
-5440 2114 -12320 0
-5442 2116 -12320 0
-5444 2118 -12320 0
-5446 2120 -12320 0
5445 -2119 -12320 0
-2106 5432 -12320 0
-2108 5434 -12320 0
-2110 5436 -12320 0
-2112 5438 -12320 0
-2114 5440 -12320 0
-2116 5442 -12320 0
-2118 5444 -12320 0
-2120 5446 -12320 0
2119 -5445 -12320 0
-5432 -2106 12320 0
-5434 -2108 12320 0
-5436 -2110 12320 0
-5438 -2112 12320 0
-5440 -2114 12320 0
-5442 -2116 12320 0
-5444 -2118 12320 0
-5446 -2120 12320 0
5445 2119 12320 0
c ((max_left_00002_00003_00005=max_left_00002_00003_00006)=tv=SATLiteral(12321))
-2106 2121 -12321 0
-2108 2123 -12321 0
-2110 2125 -12321 0
-2112 2127 -12321 0
-2114 2129 -12321 0
-2116 2131 -12321 0
-2118 2133 -12321 0
-2120 2135 -12321 0
2119 -2134 -12321 0
-2121 2106 -12321 0
-2123 2108 -12321 0
-2125 2110 -12321 0
-2127 2112 -12321 0
-2129 2114 -12321 0
-2131 2116 -12321 0
-2133 2118 -12321 0
-2135 2120 -12321 0
2134 -2119 -12321 0
-2106 -2121 12321 0
-2108 -2123 12321 0
-2110 -2125 12321 0
-2112 -2127 12321 0
-2114 -2129 12321 0
-2116 -2131 12321 0
-2118 -2133 12321 0
-2120 -2135 12321 0
2119 2134 12321 0
c ((variant_fields_00002_00003_00006=max_left_00002_00003_00006)=tv=SATLiteral(12322))
-5447 2121 -12322 0
-5449 2123 -12322 0
-5451 2125 -12322 0
-5453 2127 -12322 0
-5455 2129 -12322 0
-5457 2131 -12322 0
-5459 2133 -12322 0
-5461 2135 -12322 0
5460 -2134 -12322 0
-2121 5447 -12322 0
-2123 5449 -12322 0
-2125 5451 -12322 0
-2127 5453 -12322 0
-2129 5455 -12322 0
-2131 5457 -12322 0
-2133 5459 -12322 0
-2135 5461 -12322 0
2134 -5460 -12322 0
-5447 -2121 12322 0
-5449 -2123 12322 0
-5451 -2125 12322 0
-5453 -2127 12322 0
-5455 -2129 12322 0
-5457 -2131 12322 0
-5459 -2133 12322 0
-5461 -2135 12322 0
5460 2134 12322 0
c ((max_left_00002_00003_00006=max_left_00002_00003_00007)=tv=SATLiteral(12323))
-2121 2136 -12323 0
-2123 2138 -12323 0
-2125 2140 -12323 0
-2127 2142 -12323 0
-2129 2144 -12323 0
-2131 2146 -12323 0
-2133 2148 -12323 0
-2135 2150 -12323 0
2134 -2149 -12323 0
-2136 2121 -12323 0
-2138 2123 -12323 0
-2140 2125 -12323 0
-2142 2127 -12323 0
-2144 2129 -12323 0
-2146 2131 -12323 0
-2148 2133 -12323 0
-2150 2135 -12323 0
2149 -2134 -12323 0
-2121 -2136 12323 0
-2123 -2138 12323 0
-2125 -2140 12323 0
-2127 -2142 12323 0
-2129 -2144 12323 0
-2131 -2146 12323 0
-2133 -2148 12323 0
-2135 -2150 12323 0
2134 2149 12323 0
c ((variant_fields_00002_00003_00007=max_left_00002_00003_00007)=tv=SATLiteral(12324))
-5462 2136 -12324 0
-5464 2138 -12324 0
-5466 2140 -12324 0
-5468 2142 -12324 0
-5470 2144 -12324 0
-5472 2146 -12324 0
-5474 2148 -12324 0
-5476 2150 -12324 0
5475 -2149 -12324 0
-2136 5462 -12324 0
-2138 5464 -12324 0
-2140 5466 -12324 0
-2142 5468 -12324 0
-2144 5470 -12324 0
-2146 5472 -12324 0
-2148 5474 -12324 0
-2150 5476 -12324 0
2149 -5475 -12324 0
-5462 -2136 12324 0
-5464 -2138 12324 0
-5466 -2140 12324 0
-5468 -2142 12324 0
-5470 -2144 12324 0
-5472 -2146 12324 0
-5474 -2148 12324 0
-5476 -2150 12324 0
5475 2149 12324 0
c ((max_left_00002_00003_00007=max_left_00002_00003_00008)=tv=SATLiteral(12325))
-2136 -12325 0
-2138 -12325 0
-2140 -12325 0
-2142 -12325 0
-2144 -12325 0
-2146 -12325 0
-2148 -12325 0
-2150 -2151 -12325 0
2149 2151 -12325 0
2151 2150 -12325 0
-2151 -2149 -12325 0
-2150 2151 12325 0
2149 -2151 12325 0
c ((variant_fields_00002_00003_00008=max_left_00002_00003_00008)=tv=SATLiteral(12326))
-5477 -2151 -12326 0
2151 5477 -12326 0
-2151 -12326 0
-5477 2151 12326 0
c ((max_left_00002_00003_00008=max_left_00002_00003_00009)=tv=SATLiteral(12327))
2151 -2152 -12327 0
-2151 2152 -12327 0
2152 -2151 -12327 0
-2152 2151 -12327 0
2151 2152 12327 0
-2151 -2152 12327 0
c ((variant_fields_00002_00003_00009=max_left_00002_00003_00009)=tv=SATLiteral(12328))
-5478 -12328 0
-5480 -12328 0
-5482 -12328 0
-5484 -12328 0
-5486 -12328 0
-5488 -12328 0
-5490 -12328 0
-5492 -2152 -12328 0
5491 2152 -12328 0
2152 5492 -12328 0
-2152 -5491 -12328 0
-5492 2152 12328 0
5491 -2152 12328 0
c ((max_left_00002_00004_00001=max_left_00002_00004_00002)=tv=SATLiteral(12329))
-2154 2169 -12329 0
-2156 2171 -12329 0
-2158 2173 -12329 0
-2160 2175 -12329 0
-2162 2177 -12329 0
-2164 2179 -12329 0
-2166 2181 -12329 0
-2168 2183 -12329 0
2167 -2182 -12329 0
-2169 2154 -12329 0
-2171 2156 -12329 0
-2173 2158 -12329 0
-2175 2160 -12329 0
-2177 2162 -12329 0
-2179 2164 -12329 0
-2181 2166 -12329 0
-2183 2168 -12329 0
2182 -2167 -12329 0
-2154 -2169 12329 0
-2156 -2171 12329 0
-2158 -2173 12329 0
-2160 -2175 12329 0
-2162 -2177 12329 0
-2164 -2179 12329 0
-2166 -2181 12329 0
-2168 -2183 12329 0
2167 2182 12329 0
c ((variant_fields_00002_00004_00002=max_left_00002_00004_00002)=tv=SATLiteral(12330))
-5508 2169 -12330 0
-5510 2171 -12330 0
-5512 2173 -12330 0
-5514 2175 -12330 0
-5516 2177 -12330 0
-5518 2179 -12330 0
-5520 2181 -12330 0
-5522 2183 -12330 0
5521 -2182 -12330 0
-2169 5508 -12330 0
-2171 5510 -12330 0
-2173 5512 -12330 0
-2175 5514 -12330 0
-2177 5516 -12330 0
-2179 5518 -12330 0
-2181 5520 -12330 0
-2183 5522 -12330 0
2182 -5521 -12330 0
-5508 -2169 12330 0
-5510 -2171 12330 0
-5512 -2173 12330 0
-5514 -2175 12330 0
-5516 -2177 12330 0
-5518 -2179 12330 0
-5520 -2181 12330 0
-5522 -2183 12330 0
5521 2182 12330 0
c ((max_left_00002_00004_00002=max_left_00002_00004_00003)=tv=SATLiteral(12331))
-2169 2184 -12331 0
-2171 2186 -12331 0
-2173 2188 -12331 0
-2175 2190 -12331 0
-2177 2192 -12331 0
-2179 2194 -12331 0
-2181 2196 -12331 0
-2183 2198 -12331 0
2182 -2197 -12331 0
-2184 2169 -12331 0
-2186 2171 -12331 0
-2188 2173 -12331 0
-2190 2175 -12331 0
-2192 2177 -12331 0
-2194 2179 -12331 0
-2196 2181 -12331 0
-2198 2183 -12331 0
2197 -2182 -12331 0
-2169 -2184 12331 0
-2171 -2186 12331 0
-2173 -2188 12331 0
-2175 -2190 12331 0
-2177 -2192 12331 0
-2179 -2194 12331 0
-2181 -2196 12331 0
-2183 -2198 12331 0
2182 2197 12331 0
c ((variant_fields_00002_00004_00003=max_left_00002_00004_00003)=tv=SATLiteral(12332))
-5523 2184 -12332 0
-5525 2186 -12332 0
-5527 2188 -12332 0
-5529 2190 -12332 0
-5531 2192 -12332 0
-5533 2194 -12332 0
-5535 2196 -12332 0
-5537 2198 -12332 0
5536 -2197 -12332 0
-2184 5523 -12332 0
-2186 5525 -12332 0
-2188 5527 -12332 0
-2190 5529 -12332 0
-2192 5531 -12332 0
-2194 5533 -12332 0
-2196 5535 -12332 0
-2198 5537 -12332 0
2197 -5536 -12332 0
-5523 -2184 12332 0
-5525 -2186 12332 0
-5527 -2188 12332 0
-5529 -2190 12332 0
-5531 -2192 12332 0
-5533 -2194 12332 0
-5535 -2196 12332 0
-5537 -2198 12332 0
5536 2197 12332 0
c ((max_left_00002_00004_00003=max_left_00002_00004_00004)=tv=SATLiteral(12333))
-2184 2199 -12333 0
-2186 2201 -12333 0
-2188 2203 -12333 0
-2190 2205 -12333 0
-2192 2207 -12333 0
-2194 2209 -12333 0
-2196 2211 -12333 0
-2198 2213 -12333 0
2197 -2212 -12333 0
-2199 2184 -12333 0
-2201 2186 -12333 0
-2203 2188 -12333 0
-2205 2190 -12333 0
-2207 2192 -12333 0
-2209 2194 -12333 0
-2211 2196 -12333 0
-2213 2198 -12333 0
2212 -2197 -12333 0
-2184 -2199 12333 0
-2186 -2201 12333 0
-2188 -2203 12333 0
-2190 -2205 12333 0
-2192 -2207 12333 0
-2194 -2209 12333 0
-2196 -2211 12333 0
-2198 -2213 12333 0
2197 2212 12333 0
c ((variant_fields_00002_00004_00004=max_left_00002_00004_00004)=tv=SATLiteral(12334))
-5538 2199 -12334 0
-5540 2201 -12334 0
-5542 2203 -12334 0
-5544 2205 -12334 0
-5546 2207 -12334 0
-5548 2209 -12334 0
-5550 2211 -12334 0
-5552 2213 -12334 0
5551 -2212 -12334 0
-2199 5538 -12334 0
-2201 5540 -12334 0
-2203 5542 -12334 0
-2205 5544 -12334 0
-2207 5546 -12334 0
-2209 5548 -12334 0
-2211 5550 -12334 0
-2213 5552 -12334 0
2212 -5551 -12334 0
-5538 -2199 12334 0
-5540 -2201 12334 0
-5542 -2203 12334 0
-5544 -2205 12334 0
-5546 -2207 12334 0
-5548 -2209 12334 0
-5550 -2211 12334 0
-5552 -2213 12334 0
5551 2212 12334 0
c ((max_left_00002_00004_00004=max_left_00002_00004_00005)=tv=SATLiteral(12335))
-2199 2214 -12335 0
-2201 2216 -12335 0
-2203 2218 -12335 0
-2205 2220 -12335 0
-2207 2222 -12335 0
-2209 2224 -12335 0
-2211 2226 -12335 0
-2213 2228 -12335 0
2212 -2227 -12335 0
-2214 2199 -12335 0
-2216 2201 -12335 0
-2218 2203 -12335 0
-2220 2205 -12335 0
-2222 2207 -12335 0
-2224 2209 -12335 0
-2226 2211 -12335 0
-2228 2213 -12335 0
2227 -2212 -12335 0
-2199 -2214 12335 0
-2201 -2216 12335 0
-2203 -2218 12335 0
-2205 -2220 12335 0
-2207 -2222 12335 0
-2209 -2224 12335 0
-2211 -2226 12335 0
-2213 -2228 12335 0
2212 2227 12335 0
c ((variant_fields_00002_00004_00005=max_left_00002_00004_00005)=tv=SATLiteral(12336))
-5553 2214 -12336 0
-2214 5553 -12336 0
-2216 -12336 0
-2218 -12336 0
-2220 -12336 0
-2222 -12336 0
-2224 -12336 0
-2226 -12336 0
-2228 -12336 0
2227 -12336 0
-5553 -2214 12336 0
c ((max_left_00002_00004_00005=max_left_00002_00004_00006)=tv=SATLiteral(12337))
-2214 2229 -12337 0
-2216 2231 -12337 0
-2218 2233 -12337 0
-2220 2235 -12337 0
-2222 2237 -12337 0
-2224 2239 -12337 0
-2226 2241 -12337 0
-2228 2243 -12337 0
2227 -2242 -12337 0
-2229 2214 -12337 0
-2231 2216 -12337 0
-2233 2218 -12337 0
-2235 2220 -12337 0
-2237 2222 -12337 0
-2239 2224 -12337 0
-2241 2226 -12337 0
-2243 2228 -12337 0
2242 -2227 -12337 0
-2214 -2229 12337 0
-2216 -2231 12337 0
-2218 -2233 12337 0
-2220 -2235 12337 0
-2222 -2237 12337 0
-2224 -2239 12337 0
-2226 -2241 12337 0
-2228 -2243 12337 0
2227 2242 12337 0
c ((variant_fields_00002_00004_00006=max_left_00002_00004_00006)=tv=SATLiteral(12338))
-5554 2229 -12338 0
-5556 2231 -12338 0
-5558 2233 -12338 0
-5560 2235 -12338 0
-5562 2237 -12338 0
-5564 2239 -12338 0
-5566 2241 -12338 0
-5568 2243 -12338 0
5567 -2242 -12338 0
-2229 5554 -12338 0
-2231 5556 -12338 0
-2233 5558 -12338 0
-2235 5560 -12338 0
-2237 5562 -12338 0
-2239 5564 -12338 0
-2241 5566 -12338 0
-2243 5568 -12338 0
2242 -5567 -12338 0
-5554 -2229 12338 0
-5556 -2231 12338 0
-5558 -2233 12338 0
-5560 -2235 12338 0
-5562 -2237 12338 0
-5564 -2239 12338 0
-5566 -2241 12338 0
-5568 -2243 12338 0
5567 2242 12338 0
c ((max_left_00002_00004_00006=max_left_00002_00004_00007)=tv=SATLiteral(12339))
-2229 -12339 0
-2231 -12339 0
-2233 2244 -12339 0
-2235 2246 -12339 0
-2237 2248 -12339 0
-2239 2250 -12339 0
-2241 2252 -12339 0
-2243 2254 -12339 0
2242 -2253 -12339 0
-2244 2233 -12339 0
-2246 2235 -12339 0
-2248 2237 -12339 0
-2250 2239 -12339 0
-2252 2241 -12339 0
-2254 2243 -12339 0
2253 -2242 -12339 0
-2233 -2244 12339 0
-2235 -2246 12339 0
-2237 -2248 12339 0
-2239 -2250 12339 0
-2241 -2252 12339 0
-2243 -2254 12339 0
2242 2253 12339 0
c ((variant_fields_00002_00004_00007=max_left_00002_00004_00007)=tv=SATLiteral(12340))
-5569 2244 -12340 0
-2244 5569 -12340 0
-2246 -12340 0
-2248 -12340 0
-2250 -12340 0
-2252 -12340 0
-2254 -12340 0
2253 -12340 0
-5569 -2244 12340 0
c ((max_left_00002_00004_00007=max_left_00002_00004_00008)=tv=SATLiteral(12341))
-2244 2255 -12341 0
-2246 2257 -12341 0
-2248 2259 -12341 0
-2250 2261 -12341 0
-2252 2263 -12341 0
-2254 2265 -12341 0
2253 -2264 -12341 0
-2255 2244 -12341 0
-2257 2246 -12341 0
-2259 2248 -12341 0
-2261 2250 -12341 0
-2263 2252 -12341 0
-2265 2254 -12341 0
2264 -2253 -12341 0
-2244 -2255 12341 0
-2246 -2257 12341 0
-2248 -2259 12341 0
-2250 -2261 12341 0
-2252 -2263 12341 0
-2254 -2265 12341 0
2253 2264 12341 0
c ((variant_fields_00002_00004_00008=max_left_00002_00004_00008)=tv=SATLiteral(12342))
-5570 -12342 0
-5572 -12342 0
-5574 2255 -12342 0
-5576 2257 -12342 0
-5578 2259 -12342 0
-5580 2261 -12342 0
-5582 2263 -12342 0
-5584 2265 -12342 0
5583 -2264 -12342 0
-2255 5574 -12342 0
-2257 5576 -12342 0
-2259 5578 -12342 0
-2261 5580 -12342 0
-2263 5582 -12342 0
-2265 5584 -12342 0
2264 -5583 -12342 0
-5574 -2255 12342 0
-5576 -2257 12342 0
-5578 -2259 12342 0
-5580 -2261 12342 0
-5582 -2263 12342 0
-5584 -2265 12342 0
5583 2264 12342 0
c ((max_left_00002_00004_00008=max_left_00002_00004_00009)=tv=SATLiteral(12343))
-2255 2266 -12343 0
-2257 2268 -12343 0
-2259 2270 -12343 0
-2261 2272 -12343 0
-2263 2274 -12343 0
-2265 2276 -12343 0
2264 -2275 -12343 0
-2266 2255 -12343 0
-2268 2257 -12343 0
-2270 2259 -12343 0
-2272 2261 -12343 0
-2274 2263 -12343 0
-2276 2265 -12343 0
2275 -2264 -12343 0
-2255 -2266 12343 0
-2257 -2268 12343 0
-2259 -2270 12343 0
-2261 -2272 12343 0
-2263 -2274 12343 0
-2265 -2276 12343 0
2264 2275 12343 0
c ((variant_fields_00002_00004_00009=max_left_00002_00004_00009)=tv=SATLiteral(12344))
-5585 -12344 0
-5587 -12344 0
-5589 2266 -12344 0
-5591 2268 -12344 0
-5593 2270 -12344 0
-5595 2272 -12344 0
-5597 2274 -12344 0
-5599 2276 -12344 0
5598 -2275 -12344 0
-2266 5589 -12344 0
-2268 5591 -12344 0
-2270 5593 -12344 0
-2272 5595 -12344 0
-2274 5597 -12344 0
-2276 5599 -12344 0
2275 -5598 -12344 0
-5589 -2266 12344 0
-5591 -2268 12344 0
-5593 -2270 12344 0
-5595 -2272 12344 0
-5597 -2274 12344 0
-5599 -2276 12344 0
5598 2275 12344 0
c ((max_left_00002_00005_00001=max_left_00002_00005_00002)=tv=SATLiteral(12345))
-2278 2293 -12345 0
-2280 2295 -12345 0
-2282 2297 -12345 0
-2284 2299 -12345 0
-2286 2301 -12345 0
-2288 2303 -12345 0
-2290 2305 -12345 0
-2292 2307 -12345 0
2291 -2306 -12345 0
-2293 2278 -12345 0
-2295 2280 -12345 0
-2297 2282 -12345 0
-2299 2284 -12345 0
-2301 2286 -12345 0
-2303 2288 -12345 0
-2305 2290 -12345 0
-2307 2292 -12345 0
2306 -2291 -12345 0
-2278 -2293 12345 0
-2280 -2295 12345 0
-2282 -2297 12345 0
-2284 -2299 12345 0
-2286 -2301 12345 0
-2288 -2303 12345 0
-2290 -2305 12345 0
-2292 -2307 12345 0
2291 2306 12345 0
c ((variant_fields_00002_00005_00002=max_left_00002_00005_00002)=tv=SATLiteral(12346))
-5615 2293 -12346 0
-5617 2295 -12346 0
-5619 2297 -12346 0
-5621 2299 -12346 0
-5623 2301 -12346 0
-5625 2303 -12346 0
-5627 2305 -12346 0
-5629 2307 -12346 0
5628 -2306 -12346 0
-2293 5615 -12346 0
-2295 5617 -12346 0
-2297 5619 -12346 0
-2299 5621 -12346 0
-2301 5623 -12346 0
-2303 5625 -12346 0
-2305 5627 -12346 0
-2307 5629 -12346 0
2306 -5628 -12346 0
-5615 -2293 12346 0
-5617 -2295 12346 0
-5619 -2297 12346 0
-5621 -2299 12346 0
-5623 -2301 12346 0
-5625 -2303 12346 0
-5627 -2305 12346 0
-5629 -2307 12346 0
5628 2306 12346 0
c ((max_left_00002_00005_00002=max_left_00002_00005_00003)=tv=SATLiteral(12347))
-2293 2308 -12347 0
-2295 2310 -12347 0
-2297 2312 -12347 0
-2299 2314 -12347 0
-2301 2316 -12347 0
-2303 2318 -12347 0
-2305 2320 -12347 0
-2307 2322 -12347 0
2306 -2321 -12347 0
-2308 2293 -12347 0
-2310 2295 -12347 0
-2312 2297 -12347 0
-2314 2299 -12347 0
-2316 2301 -12347 0
-2318 2303 -12347 0
-2320 2305 -12347 0
-2322 2307 -12347 0
2321 -2306 -12347 0
-2293 -2308 12347 0
-2295 -2310 12347 0
-2297 -2312 12347 0
-2299 -2314 12347 0
-2301 -2316 12347 0
-2303 -2318 12347 0
-2305 -2320 12347 0
-2307 -2322 12347 0
2306 2321 12347 0
c ((variant_fields_00002_00005_00003=max_left_00002_00005_00003)=tv=SATLiteral(12348))
-5630 2308 -12348 0
-5632 2310 -12348 0
-5634 2312 -12348 0
-5636 2314 -12348 0
-5638 2316 -12348 0
-5640 2318 -12348 0
-5642 2320 -12348 0
-5644 2322 -12348 0
5643 -2321 -12348 0
-2308 5630 -12348 0
-2310 5632 -12348 0
-2312 5634 -12348 0
-2314 5636 -12348 0
-2316 5638 -12348 0
-2318 5640 -12348 0
-2320 5642 -12348 0
-2322 5644 -12348 0
2321 -5643 -12348 0
-5630 -2308 12348 0
-5632 -2310 12348 0
-5634 -2312 12348 0
-5636 -2314 12348 0
-5638 -2316 12348 0
-5640 -2318 12348 0
-5642 -2320 12348 0
-5644 -2322 12348 0
5643 2321 12348 0
c ((max_left_00002_00005_00003=max_left_00002_00005_00004)=tv=SATLiteral(12349))
-2308 2323 -12349 0
-2310 2325 -12349 0
-2312 2327 -12349 0
-2314 2329 -12349 0
-2316 2331 -12349 0
-2318 2333 -12349 0
-2320 2335 -12349 0
-2322 2337 -12349 0
2321 -2336 -12349 0
-2323 2308 -12349 0
-2325 2310 -12349 0
-2327 2312 -12349 0
-2329 2314 -12349 0
-2331 2316 -12349 0
-2333 2318 -12349 0
-2335 2320 -12349 0
-2337 2322 -12349 0
2336 -2321 -12349 0
-2308 -2323 12349 0
-2310 -2325 12349 0
-2312 -2327 12349 0
-2314 -2329 12349 0
-2316 -2331 12349 0
-2318 -2333 12349 0
-2320 -2335 12349 0
-2322 -2337 12349 0
2321 2336 12349 0
c ((variant_fields_00002_00005_00004=max_left_00002_00005_00004)=tv=SATLiteral(12350))
-5645 2323 -12350 0
-5647 2325 -12350 0
-5649 2327 -12350 0
-5651 2329 -12350 0
-5653 2331 -12350 0
-5655 2333 -12350 0
-5657 2335 -12350 0
-5659 2337 -12350 0
5658 -2336 -12350 0
-2323 5645 -12350 0
-2325 5647 -12350 0
-2327 5649 -12350 0
-2329 5651 -12350 0
-2331 5653 -12350 0
-2333 5655 -12350 0
-2335 5657 -12350 0
-2337 5659 -12350 0
2336 -5658 -12350 0
-5645 -2323 12350 0
-5647 -2325 12350 0
-5649 -2327 12350 0
-5651 -2329 12350 0
-5653 -2331 12350 0
-5655 -2333 12350 0
-5657 -2335 12350 0
-5659 -2337 12350 0
5658 2336 12350 0
c ((max_left_00002_00005_00004=max_left_00002_00005_00005)=tv=SATLiteral(12351))
-2323 2338 -12351 0
-2325 2340 -12351 0
-2327 2342 -12351 0
-2329 2344 -12351 0
-2331 2346 -12351 0
-2333 2348 -12351 0
-2335 2350 -12351 0
-2337 2352 -12351 0
2336 -2351 -12351 0
-2338 2323 -12351 0
-2340 2325 -12351 0
-2342 2327 -12351 0
-2344 2329 -12351 0
-2346 2331 -12351 0
-2348 2333 -12351 0
-2350 2335 -12351 0
-2352 2337 -12351 0
2351 -2336 -12351 0
-2323 -2338 12351 0
-2325 -2340 12351 0
-2327 -2342 12351 0
-2329 -2344 12351 0
-2331 -2346 12351 0
-2333 -2348 12351 0
-2335 -2350 12351 0
-2337 -2352 12351 0
2336 2351 12351 0
c ((variant_fields_00002_00005_00005=max_left_00002_00005_00005)=tv=SATLiteral(12352))
-5660 2338 -12352 0
-5662 2340 -12352 0
-5664 2342 -12352 0
-5666 2344 -12352 0
-5668 2346 -12352 0
-5670 2348 -12352 0
-5672 2350 -12352 0
-5674 2352 -12352 0
5673 -2351 -12352 0
-2338 5660 -12352 0
-2340 5662 -12352 0
-2342 5664 -12352 0
-2344 5666 -12352 0
-2346 5668 -12352 0
-2348 5670 -12352 0
-2350 5672 -12352 0
-2352 5674 -12352 0
2351 -5673 -12352 0
-5660 -2338 12352 0
-5662 -2340 12352 0
-5664 -2342 12352 0
-5666 -2344 12352 0
-5668 -2346 12352 0
-5670 -2348 12352 0
-5672 -2350 12352 0
-5674 -2352 12352 0
5673 2351 12352 0
c ((max_left_00002_00005_00005=max_left_00002_00005_00006)=tv=SATLiteral(12353))
-2338 2353 -12353 0
-2340 2355 -12353 0
-2342 2357 -12353 0
-2344 2359 -12353 0
-2346 2361 -12353 0
-2348 2363 -12353 0
-2350 2365 -12353 0
-2352 2367 -12353 0
2351 -2366 -12353 0
-2353 2338 -12353 0
-2355 2340 -12353 0
-2357 2342 -12353 0
-2359 2344 -12353 0
-2361 2346 -12353 0
-2363 2348 -12353 0
-2365 2350 -12353 0
-2367 2352 -12353 0
2366 -2351 -12353 0
-2338 -2353 12353 0
-2340 -2355 12353 0
-2342 -2357 12353 0
-2344 -2359 12353 0
-2346 -2361 12353 0
-2348 -2363 12353 0
-2350 -2365 12353 0
-2352 -2367 12353 0
2351 2366 12353 0
c ((variant_fields_00002_00005_00006=max_left_00002_00005_00006)=tv=SATLiteral(12354))
-5675 2353 -12354 0
-5677 2355 -12354 0
-5679 2357 -12354 0
-5681 2359 -12354 0
-5683 2361 -12354 0
-5685 2363 -12354 0
-5687 2365 -12354 0
-5689 2367 -12354 0
5688 -2366 -12354 0
-2353 5675 -12354 0
-2355 5677 -12354 0
-2357 5679 -12354 0
-2359 5681 -12354 0
-2361 5683 -12354 0
-2363 5685 -12354 0
-2365 5687 -12354 0
-2367 5689 -12354 0
2366 -5688 -12354 0
-5675 -2353 12354 0
-5677 -2355 12354 0
-5679 -2357 12354 0
-5681 -2359 12354 0
-5683 -2361 12354 0
-5685 -2363 12354 0
-5687 -2365 12354 0
-5689 -2367 12354 0
5688 2366 12354 0
c ((max_left_00002_00005_00006=max_left_00002_00005_00007)=tv=SATLiteral(12355))
-2353 2368 -12355 0
-2355 2370 -12355 0
-2357 2372 -12355 0
-2359 2374 -12355 0
-2361 2376 -12355 0
-2363 2378 -12355 0
-2365 2380 -12355 0
-2367 2382 -12355 0
2366 -2381 -12355 0
-2368 2353 -12355 0
-2370 2355 -12355 0
-2372 2357 -12355 0
-2374 2359 -12355 0
-2376 2361 -12355 0
-2378 2363 -12355 0
-2380 2365 -12355 0
-2382 2367 -12355 0
2381 -2366 -12355 0
-2353 -2368 12355 0
-2355 -2370 12355 0
-2357 -2372 12355 0
-2359 -2374 12355 0
-2361 -2376 12355 0
-2363 -2378 12355 0
-2365 -2380 12355 0
-2367 -2382 12355 0
2366 2381 12355 0
c ((variant_fields_00002_00005_00007=max_left_00002_00005_00007)=tv=SATLiteral(12356))
-5690 2368 -12356 0
-5692 2370 -12356 0
-5694 2372 -12356 0
-5696 2374 -12356 0
-5698 2376 -12356 0
-5700 2378 -12356 0
-5702 2380 -12356 0
-5704 2382 -12356 0
5703 -2381 -12356 0
-2368 5690 -12356 0
-2370 5692 -12356 0
-2372 5694 -12356 0
-2374 5696 -12356 0
-2376 5698 -12356 0
-2378 5700 -12356 0
-2380 5702 -12356 0
-2382 5704 -12356 0
2381 -5703 -12356 0
-5690 -2368 12356 0
-5692 -2370 12356 0
-5694 -2372 12356 0
-5696 -2374 12356 0
-5698 -2376 12356 0
-5700 -2378 12356 0
-5702 -2380 12356 0
-5704 -2382 12356 0
5703 2381 12356 0
c ((max_left_00002_00005_00007=max_left_00002_00005_00008)=tv=SATLiteral(12357))
-2368 -12357 0
-2370 -12357 0
-2372 -12357 0
-2374 -12357 0
-2376 -12357 0
-2378 -12357 0
-2380 2383 -12357 0
-2382 2385 -12357 0
2381 -2384 -12357 0
-2383 2380 -12357 0
-2385 2382 -12357 0
2384 -2381 -12357 0
-2380 -2383 12357 0
-2382 -2385 12357 0
2381 2384 12357 0
c ((variant_fields_00002_00005_00008=max_left_00002_00005_00008)=tv=SATLiteral(12358))
-5705 2383 -12358 0
-2383 5705 -12358 0
-2385 -12358 0
2384 -12358 0
-5705 -2383 12358 0
c ((max_left_00002_00006_00001=max_left_00002_00006_00002)=tv=SATLiteral(12359))
-2390 2405 -12359 0
-2392 2407 -12359 0
-2394 2409 -12359 0
-2396 2411 -12359 0
-2398 2413 -12359 0
-2400 2415 -12359 0
-2402 2417 -12359 0
-2404 2419 -12359 0
2403 -2418 -12359 0
-2405 2390 -12359 0
-2407 2392 -12359 0
-2409 2394 -12359 0
-2411 2396 -12359 0
-2413 2398 -12359 0
-2415 2400 -12359 0
-2417 2402 -12359 0
-2419 2404 -12359 0
2418 -2403 -12359 0
-2390 -2405 12359 0
-2392 -2407 12359 0
-2394 -2409 12359 0
-2396 -2411 12359 0
-2398 -2413 12359 0
-2400 -2415 12359 0
-2402 -2417 12359 0
-2404 -2419 12359 0
2403 2418 12359 0
c ((variant_fields_00002_00006_00002=max_left_00002_00006_00002)=tv=SATLiteral(12360))
-5722 2405 -12360 0
-5724 2407 -12360 0
-5726 2409 -12360 0
-5728 2411 -12360 0
-5730 2413 -12360 0
-5732 2415 -12360 0
-5734 2417 -12360 0
-5736 2419 -12360 0
5735 -2418 -12360 0
-2405 5722 -12360 0
-2407 5724 -12360 0
-2409 5726 -12360 0
-2411 5728 -12360 0
-2413 5730 -12360 0
-2415 5732 -12360 0
-2417 5734 -12360 0
-2419 5736 -12360 0
2418 -5735 -12360 0
-5722 -2405 12360 0
-5724 -2407 12360 0
-5726 -2409 12360 0
-5728 -2411 12360 0
-5730 -2413 12360 0
-5732 -2415 12360 0
-5734 -2417 12360 0
-5736 -2419 12360 0
5735 2418 12360 0
c ((max_left_00002_00006_00002=max_left_00002_00006_00003)=tv=SATLiteral(12361))
-2405 -12361 0
-2407 -12361 0
-2409 -12361 0
-2411 -12361 0
-2413 -12361 0
-2415 2420 -12361 0
-2417 2422 -12361 0
-2419 2424 -12361 0
2418 -2423 -12361 0
-2420 2415 -12361 0
-2422 2417 -12361 0
-2424 2419 -12361 0
2423 -2418 -12361 0
-2415 -2420 12361 0
-2417 -2422 12361 0
-2419 -2424 12361 0
2418 2423 12361 0
c ((variant_fields_00002_00006_00003=max_left_00002_00006_00003)=tv=SATLiteral(12362))
-5737 2420 -12362 0
-2420 5737 -12362 0
-2422 -12362 0
-2424 -12362 0
2423 -12362 0
-5737 -2420 12362 0
c ((max_left_00002_00006_00003=max_left_00002_00006_00004)=tv=SATLiteral(12363))
-2420 2425 -12363 0
-2422 2427 -12363 0
-2424 2429 -12363 0
2423 -2428 -12363 0
-2425 2420 -12363 0
-2427 2422 -12363 0
-2429 2424 -12363 0
2428 -2423 -12363 0
-2420 -2425 12363 0
-2422 -2427 12363 0
-2424 -2429 12363 0
2423 2428 12363 0
c ((variant_fields_00002_00006_00004=max_left_00002_00006_00004)=tv=SATLiteral(12364))
-5738 -12364 0
-5740 -12364 0
-5742 -12364 0
-5744 -12364 0
-5746 -12364 0
-5748 2425 -12364 0
-5750 2427 -12364 0
-5752 2429 -12364 0
5751 -2428 -12364 0
-2425 5748 -12364 0
-2427 5750 -12364 0
-2429 5752 -12364 0
2428 -5751 -12364 0
-5748 -2425 12364 0
-5750 -2427 12364 0
-5752 -2429 12364 0
5751 2428 12364 0
c ((max_left_00002_00006_00004=max_left_00002_00006_00005)=tv=SATLiteral(12365))
-2425 2430 -12365 0
-2427 2432 -12365 0
-2429 2434 -12365 0
2428 -2433 -12365 0
-2430 2425 -12365 0
-2432 2427 -12365 0
-2434 2429 -12365 0
2433 -2428 -12365 0
-2425 -2430 12365 0
-2427 -2432 12365 0
-2429 -2434 12365 0
2428 2433 12365 0
c ((variant_fields_00002_00006_00005=max_left_00002_00006_00005)=tv=SATLiteral(12366))
-5753 -12366 0
-5755 -12366 0
-5757 -12366 0
-5759 -12366 0
-5761 -12366 0
-5763 2430 -12366 0
-5765 2432 -12366 0
-5767 2434 -12366 0
5766 -2433 -12366 0
-2430 5763 -12366 0
-2432 5765 -12366 0
-2434 5767 -12366 0
2433 -5766 -12366 0
-5763 -2430 12366 0
-5765 -2432 12366 0
-5767 -2434 12366 0
5766 2433 12366 0
c ((max_left_00002_00006_00005=max_left_00002_00006_00006)=tv=SATLiteral(12367))
-2430 -12367 0
-2432 2435 -12367 0
-2434 2437 -12367 0
2433 -2436 -12367 0
-2435 2432 -12367 0
-2437 2434 -12367 0
2436 -2433 -12367 0
-2432 -2435 12367 0
-2434 -2437 12367 0
2433 2436 12367 0
c ((variant_fields_00002_00006_00006=max_left_00002_00006_00006)=tv=SATLiteral(12368))
-5768 2435 -12368 0
-2435 5768 -12368 0
-2437 -12368 0
2436 -12368 0
-5768 -2435 12368 0
c ((max_left_00002_00006_00006=max_left_00002_00006_00007)=tv=SATLiteral(12369))
-2435 2438 -12369 0
-2437 2440 -12369 0
2436 -2439 -12369 0
-2438 2435 -12369 0
-2440 2437 -12369 0
2439 -2436 -12369 0
-2435 -2438 12369 0
-2437 -2440 12369 0
2436 2439 12369 0
c ((variant_fields_00002_00006_00007=max_left_00002_00006_00007)=tv=SATLiteral(12370))
-5769 -12370 0
-5771 -12370 0
-5773 -12370 0
-5775 -12370 0
-5777 -12370 0
-5779 -12370 0
-5781 2438 -12370 0
-5783 2440 -12370 0
5782 -2439 -12370 0
-2438 5781 -12370 0
-2440 5783 -12370 0
2439 -5782 -12370 0
-5781 -2438 12370 0
-5783 -2440 12370 0
5782 2439 12370 0
c ((max_left_00002_00006_00007=max_left_00002_00006_00008)=tv=SATLiteral(12371))
-2438 2441 -12371 0
-2440 2443 -12371 0
2439 -2442 -12371 0
-2441 2438 -12371 0
-2443 2440 -12371 0
2442 -2439 -12371 0
-2438 -2441 12371 0
-2440 -2443 12371 0
2439 2442 12371 0
c ((variant_fields_00002_00006_00008=max_left_00002_00006_00008)=tv=SATLiteral(12372))
-5784 -12372 0
-5786 -12372 0
-5788 -12372 0
-5790 -12372 0
-5792 -12372 0
-5794 -12372 0
-5796 2441 -12372 0
-5798 2443 -12372 0
5797 -2442 -12372 0
-2441 5796 -12372 0
-2443 5798 -12372 0
2442 -5797 -12372 0
-5796 -2441 12372 0
-5798 -2443 12372 0
5797 2442 12372 0
c ((max_left_00002_00006_00008=max_left_00002_00006_00009)=tv=SATLiteral(12373))
-2441 2444 -12373 0
-2443 2446 -12373 0
2442 -2445 -12373 0
-2444 2441 -12373 0
-2446 2443 -12373 0
2445 -2442 -12373 0
-2441 -2444 12373 0
-2443 -2446 12373 0
2442 2445 12373 0
c ((variant_fields_00002_00006_00009=max_left_00002_00006_00009)=tv=SATLiteral(12374))
-5799 -12374 0
-5801 -12374 0
-5803 -12374 0
-5805 -12374 0
-5807 -12374 0
-5809 -12374 0
-5811 2444 -12374 0
-5813 2446 -12374 0
5812 -2445 -12374 0
-2444 5811 -12374 0
-2446 5813 -12374 0
2445 -5812 -12374 0
-5811 -2444 12374 0
-5813 -2446 12374 0
5812 2445 12374 0
c ((max_left_00002_00007_00001=max_left_00002_00007_00002)=tv=SATLiteral(12375))
-2448 2449 -12375 0
-2449 2448 -12375 0
-2451 -12375 0
-2453 -12375 0
-2455 -12375 0
2454 -12375 0
-2448 -2449 12375 0
c ((variant_fields_00002_00007_00002=max_left_00002_00007_00002)=tv=SATLiteral(12376))
-5815 -12376 0
-5817 -12376 0
-5819 -12376 0
-5821 -12376 0
-5823 2449 -12376 0
-5825 2451 -12376 0
-5827 2453 -12376 0
-5829 2455 -12376 0
5828 -2454 -12376 0
-2449 5823 -12376 0
-2451 5825 -12376 0
-2453 5827 -12376 0
-2455 5829 -12376 0
2454 -5828 -12376 0
-5823 -2449 12376 0
-5825 -2451 12376 0
-5827 -2453 12376 0
-5829 -2455 12376 0
5828 2454 12376 0
c ((max_left_00002_00007_00002=max_left_00002_00007_00003)=tv=SATLiteral(12377))
-2449 2456 -12377 0
-2451 2458 -12377 0
-2453 2460 -12377 0
-2455 2462 -12377 0
2454 -2461 -12377 0
-2456 2449 -12377 0
-2458 2451 -12377 0
-2460 2453 -12377 0
-2462 2455 -12377 0
2461 -2454 -12377 0
-2449 -2456 12377 0
-2451 -2458 12377 0
-2453 -2460 12377 0
-2455 -2462 12377 0
2454 2461 12377 0
c ((variant_fields_00002_00007_00003=max_left_00002_00007_00003)=tv=SATLiteral(12378))
-5830 -12378 0
-5832 -12378 0
-5834 -12378 0
-5836 -12378 0
-5838 2456 -12378 0
-5840 2458 -12378 0
-5842 2460 -12378 0
-5844 2462 -12378 0
5843 -2461 -12378 0
-2456 5838 -12378 0
-2458 5840 -12378 0
-2460 5842 -12378 0
-2462 5844 -12378 0
2461 -5843 -12378 0
-5838 -2456 12378 0
-5840 -2458 12378 0
-5842 -2460 12378 0
-5844 -2462 12378 0
5843 2461 12378 0
c ((max_left_00002_00007_00003=max_left_00002_00007_00004)=tv=SATLiteral(12379))
-2456 2463 -12379 0
-2458 2465 -12379 0
-2460 2467 -12379 0
-2462 2469 -12379 0
2461 -2468 -12379 0
-2463 2456 -12379 0
-2465 2458 -12379 0
-2467 2460 -12379 0
-2469 2462 -12379 0
2468 -2461 -12379 0
-2456 -2463 12379 0
-2458 -2465 12379 0
-2460 -2467 12379 0
-2462 -2469 12379 0
2461 2468 12379 0
c ((variant_fields_00002_00007_00004=max_left_00002_00007_00004)=tv=SATLiteral(12380))
-5845 -12380 0
-5847 -12380 0
-5849 -12380 0
-5851 -12380 0
-5853 2463 -12380 0
-5855 2465 -12380 0
-5857 2467 -12380 0
-5859 2469 -12380 0
5858 -2468 -12380 0
-2463 5853 -12380 0
-2465 5855 -12380 0
-2467 5857 -12380 0
-2469 5859 -12380 0
2468 -5858 -12380 0
-5853 -2463 12380 0
-5855 -2465 12380 0
-5857 -2467 12380 0
-5859 -2469 12380 0
5858 2468 12380 0
c ((max_left_00002_00007_00004=max_left_00002_00007_00005)=tv=SATLiteral(12381))
-2463 -12381 0
-2465 -12381 0
-2467 2470 -12381 0
-2469 2472 -12381 0
2468 -2471 -12381 0
-2470 2467 -12381 0
-2472 2469 -12381 0
2471 -2468 -12381 0
-2467 -2470 12381 0
-2469 -2472 12381 0
2468 2471 12381 0
c ((variant_fields_00002_00007_00005=max_left_00002_00007_00005)=tv=SATLiteral(12382))
-5860 2470 -12382 0
-2470 5860 -12382 0
-2472 -12382 0
2471 -12382 0
-5860 -2470 12382 0
c ((max_left_00002_00007_00005=max_left_00002_00007_00006)=tv=SATLiteral(12383))
-2470 2473 -12383 0
-2472 2475 -12383 0
2471 -2474 -12383 0
-2473 2470 -12383 0
-2475 2472 -12383 0
2474 -2471 -12383 0
-2470 -2473 12383 0
-2472 -2475 12383 0
2471 2474 12383 0
c ((variant_fields_00002_00007_00006=max_left_00002_00007_00006)=tv=SATLiteral(12384))
-5861 -12384 0
-5863 -12384 0
-5865 -12384 0
-5867 -12384 0
-5869 -12384 0
-5871 -12384 0
-5873 2473 -12384 0
-5875 2475 -12384 0
5874 -2474 -12384 0
-2473 5873 -12384 0
-2475 5875 -12384 0
2474 -5874 -12384 0
-5873 -2473 12384 0
-5875 -2475 12384 0
5874 2474 12384 0
c ((max_left_00002_00007_00007=max_left_00002_00007_00008)=tv=SATLiteral(12385))
-2476 2479 -12385 0
-2478 2481 -12385 0
2477 -2480 -12385 0
-2479 2476 -12385 0
-2481 2478 -12385 0
2480 -2477 -12385 0
-2476 -2479 12385 0
-2478 -2481 12385 0
2477 2480 12385 0
c ((variant_fields_00002_00007_00008=max_left_00002_00007_00008)=tv=SATLiteral(12386))
-5877 -12386 0
-5879 -12386 0
-5881 -12386 0
-5883 -12386 0
-5885 -12386 0
-5887 -12386 0
-5889 2479 -12386 0
-5891 2481 -12386 0
5890 -2480 -12386 0
-2479 5889 -12386 0
-2481 5891 -12386 0
2480 -5890 -12386 0
-5889 -2479 12386 0
-5891 -2481 12386 0
5890 2480 12386 0
c ((max_left_00002_00007_00008=max_left_00002_00007_00009)=tv=SATLiteral(12387))
-2479 -12387 0
-2481 -2482 -12387 0
2480 2482 -12387 0
2482 2481 -12387 0
-2482 -2480 -12387 0
-2481 2482 12387 0
2480 -2482 12387 0
c ((variant_fields_00002_00007_00009=max_left_00002_00007_00009)=tv=SATLiteral(12388))
-5892 -2482 -12388 0
2482 5892 -12388 0
-2482 -12388 0
-5892 2482 12388 0
c ((max_left_00002_00008_00001=max_left_00002_00008_00002)=tv=SATLiteral(12389))
-2484 -12389 0
-2486 -12389 0
-2488 -12389 0
-2490 -12389 0
-2492 -12389 0
-2494 -12389 0
-2496 2499 -12389 0
-2498 2501 -12389 0
2497 -2500 -12389 0
-2499 2496 -12389 0
-2501 2498 -12389 0
2500 -2497 -12389 0
-2496 -2499 12389 0
-2498 -2501 12389 0
2497 2500 12389 0
c ((variant_fields_00002_00008_00002=max_left_00002_00008_00002)=tv=SATLiteral(12390))
-5908 2499 -12390 0
-2499 5908 -12390 0
-2501 -12390 0
2500 -12390 0
-5908 -2499 12390 0
c ((max_left_00002_00008_00002=max_left_00002_00008_00003)=tv=SATLiteral(12391))
-2499 2502 -12391 0
-2501 2504 -12391 0
2500 -2503 -12391 0
-2502 2499 -12391 0
-2504 2501 -12391 0
2503 -2500 -12391 0
-2499 -2502 12391 0
-2501 -2504 12391 0
2500 2503 12391 0
c ((variant_fields_00002_00008_00003=max_left_00002_00008_00003)=tv=SATLiteral(12392))
-5909 -12392 0
-5911 -12392 0
-5913 -12392 0
-5915 -12392 0
-5917 -12392 0
-5919 -12392 0
-5921 2502 -12392 0
-5923 2504 -12392 0
5922 -2503 -12392 0
-2502 5921 -12392 0
-2504 5923 -12392 0
2503 -5922 -12392 0
-5921 -2502 12392 0
-5923 -2504 12392 0
5922 2503 12392 0
c ((max_left_00002_00008_00004=max_left_00002_00008_00005)=tv=SATLiteral(12393))
-2505 2508 -12393 0
-2507 2510 -12393 0
2506 -2509 -12393 0
-2508 2505 -12393 0
-2510 2507 -12393 0
2509 -2506 -12393 0
-2505 -2508 12393 0
-2507 -2510 12393 0
2506 2509 12393 0
c ((variant_fields_00002_00008_00005=max_left_00002_00008_00005)=tv=SATLiteral(12394))
-5925 -12394 0
-5927 -12394 0
-5929 -12394 0
-5931 -12394 0
-5933 -12394 0
-5935 -12394 0
-5937 2508 -12394 0
-5939 2510 -12394 0
5938 -2509 -12394 0
-2508 5937 -12394 0
-2510 5939 -12394 0
2509 -5938 -12394 0
-5937 -2508 12394 0
-5939 -2510 12394 0
5938 2509 12394 0
c ((max_left_00002_00008_00005=max_left_00002_00008_00006)=tv=SATLiteral(12395))
-2508 2511 -12395 0
-2510 2513 -12395 0
2509 -2512 -12395 0
-2511 2508 -12395 0
-2513 2510 -12395 0
2512 -2509 -12395 0
-2508 -2511 12395 0
-2510 -2513 12395 0
2509 2512 12395 0
c ((variant_fields_00002_00008_00006=max_left_00002_00008_00006)=tv=SATLiteral(12396))
-5940 -12396 0
-5942 -12396 0
-5944 -12396 0
-5946 -12396 0
-5948 -12396 0
-5950 -12396 0
-5952 2511 -12396 0
-5954 2513 -12396 0
5953 -2512 -12396 0
-2511 5952 -12396 0
-2513 5954 -12396 0
2512 -5953 -12396 0
-5952 -2511 12396 0
-5954 -2513 12396 0
5953 2512 12396 0
c ((max_left_00002_00008_00006=max_left_00002_00008_00007)=tv=SATLiteral(12397))
-2511 2514 -12397 0
-2513 2516 -12397 0
2512 -2515 -12397 0
-2514 2511 -12397 0
-2516 2513 -12397 0
2515 -2512 -12397 0
-2511 -2514 12397 0
-2513 -2516 12397 0
2512 2515 12397 0
c ((variant_fields_00002_00008_00007=max_left_00002_00008_00007)=tv=SATLiteral(12398))
-5955 -12398 0
-5957 -12398 0
-5959 -12398 0
-5961 -12398 0
-5963 -12398 0
-5965 -12398 0
-5967 2514 -12398 0
-5969 2516 -12398 0
5968 -2515 -12398 0
-2514 5967 -12398 0
-2516 5969 -12398 0
2515 -5968 -12398 0
-5967 -2514 12398 0
-5969 -2516 12398 0
5968 2515 12398 0
c ((max_left_00002_00008_00007=max_left_00002_00008_00008)=tv=SATLiteral(12399))
-2514 2517 -12399 0
-2516 2519 -12399 0
2515 -2518 -12399 0
-2517 2514 -12399 0
-2519 2516 -12399 0
2518 -2515 -12399 0
-2514 -2517 12399 0
-2516 -2519 12399 0
2515 2518 12399 0
c ((variant_fields_00002_00008_00008=max_left_00002_00008_00008)=tv=SATLiteral(12400))
-5970 -12400 0
-5972 -12400 0
-5974 -12400 0
-5976 -12400 0
-5978 -12400 0
-5980 -12400 0
-5982 2517 -12400 0
-5984 2519 -12400 0
5983 -2518 -12400 0
-2517 5982 -12400 0
-2519 5984 -12400 0
2518 -5983 -12400 0
-5982 -2517 12400 0
-5984 -2519 12400 0
5983 2518 12400 0
c ((max_left_00002_00008_00008=max_left_00002_00008_00009)=tv=SATLiteral(12401))
-2517 2520 -12401 0
-2519 2522 -12401 0
2518 -2521 -12401 0
-2520 2517 -12401 0
-2522 2519 -12401 0
2521 -2518 -12401 0
-2517 -2520 12401 0
-2519 -2522 12401 0
2518 2521 12401 0
c ((variant_fields_00002_00008_00009=max_left_00002_00008_00009)=tv=SATLiteral(12402))
-5985 -12402 0
-5987 -12402 0
-5989 -12402 0
-5991 -12402 0
-5993 -12402 0
-5995 -12402 0
-5997 2520 -12402 0
-5999 2522 -12402 0
5998 -2521 -12402 0
-2520 5997 -12402 0
-2522 5999 -12402 0
2521 -5998 -12402 0
-5997 -2520 12402 0
-5999 -2522 12402 0
5998 2521 12402 0
c ((max_left_00002_00009_00001=max_left_00002_00009_00002)=tv=SATLiteral(12403))
-2524 2539 -12403 0
-2526 2541 -12403 0
-2528 2543 -12403 0
-2530 2545 -12403 0
-2532 2547 -12403 0
-2534 2549 -12403 0
-2536 2551 -12403 0
-2538 2553 -12403 0
2537 -2552 -12403 0
-2539 2524 -12403 0
-2541 2526 -12403 0
-2543 2528 -12403 0
-2545 2530 -12403 0
-2547 2532 -12403 0
-2549 2534 -12403 0
-2551 2536 -12403 0
-2553 2538 -12403 0
2552 -2537 -12403 0
-2524 -2539 12403 0
-2526 -2541 12403 0
-2528 -2543 12403 0
-2530 -2545 12403 0
-2532 -2547 12403 0
-2534 -2549 12403 0
-2536 -2551 12403 0
-2538 -2553 12403 0
2537 2552 12403 0
c ((variant_fields_00002_00009_00002=max_left_00002_00009_00002)=tv=SATLiteral(12404))
-6015 2539 -12404 0
-6017 2541 -12404 0
-6019 2543 -12404 0
-6021 2545 -12404 0
-6023 2547 -12404 0
-6025 2549 -12404 0
-6027 2551 -12404 0
-6029 2553 -12404 0
6028 -2552 -12404 0
-2539 6015 -12404 0
-2541 6017 -12404 0
-2543 6019 -12404 0
-2545 6021 -12404 0
-2547 6023 -12404 0
-2549 6025 -12404 0
-2551 6027 -12404 0
-2553 6029 -12404 0
2552 -6028 -12404 0
-6015 -2539 12404 0
-6017 -2541 12404 0
-6019 -2543 12404 0
-6021 -2545 12404 0
-6023 -2547 12404 0
-6025 -2549 12404 0
-6027 -2551 12404 0
-6029 -2553 12404 0
6028 2552 12404 0
c ((max_left_00002_00009_00002=max_left_00002_00009_00003)=tv=SATLiteral(12405))
-2539 2554 -12405 0
-2541 2556 -12405 0
-2543 2558 -12405 0
-2545 2560 -12405 0
-2547 2562 -12405 0
-2549 2564 -12405 0
-2551 2566 -12405 0
-2553 2568 -12405 0
2552 -2567 -12405 0
-2554 2539 -12405 0
-2556 2541 -12405 0
-2558 2543 -12405 0
-2560 2545 -12405 0
-2562 2547 -12405 0
-2564 2549 -12405 0
-2566 2551 -12405 0
-2568 2553 -12405 0
2567 -2552 -12405 0
-2539 -2554 12405 0
-2541 -2556 12405 0
-2543 -2558 12405 0
-2545 -2560 12405 0
-2547 -2562 12405 0
-2549 -2564 12405 0
-2551 -2566 12405 0
-2553 -2568 12405 0
2552 2567 12405 0
c ((variant_fields_00002_00009_00003=max_left_00002_00009_00003)=tv=SATLiteral(12406))
-6030 2554 -12406 0
-6032 2556 -12406 0
-6034 2558 -12406 0
-6036 2560 -12406 0
-6038 2562 -12406 0
-6040 2564 -12406 0
-6042 2566 -12406 0
-6044 2568 -12406 0
6043 -2567 -12406 0
-2554 6030 -12406 0
-2556 6032 -12406 0
-2558 6034 -12406 0
-2560 6036 -12406 0
-2562 6038 -12406 0
-2564 6040 -12406 0
-2566 6042 -12406 0
-2568 6044 -12406 0
2567 -6043 -12406 0
-6030 -2554 12406 0
-6032 -2556 12406 0
-6034 -2558 12406 0
-6036 -2560 12406 0
-6038 -2562 12406 0
-6040 -2564 12406 0
-6042 -2566 12406 0
-6044 -2568 12406 0
6043 2567 12406 0
c ((max_left_00002_00009_00003=max_left_00002_00009_00004)=tv=SATLiteral(12407))
-2554 2569 -12407 0
-2556 2571 -12407 0
-2558 2573 -12407 0
-2560 2575 -12407 0
-2562 2577 -12407 0
-2564 2579 -12407 0
-2566 2581 -12407 0
-2568 2583 -12407 0
2567 -2582 -12407 0
-2569 2554 -12407 0
-2571 2556 -12407 0
-2573 2558 -12407 0
-2575 2560 -12407 0
-2577 2562 -12407 0
-2579 2564 -12407 0
-2581 2566 -12407 0
-2583 2568 -12407 0
2582 -2567 -12407 0
-2554 -2569 12407 0
-2556 -2571 12407 0
-2558 -2573 12407 0
-2560 -2575 12407 0
-2562 -2577 12407 0
-2564 -2579 12407 0
-2566 -2581 12407 0
-2568 -2583 12407 0
2567 2582 12407 0
c ((variant_fields_00002_00009_00004=max_left_00002_00009_00004)=tv=SATLiteral(12408))
-6045 2569 -12408 0
-6047 2571 -12408 0
-6049 2573 -12408 0
-6051 2575 -12408 0
-6053 2577 -12408 0
-6055 2579 -12408 0
-6057 2581 -12408 0
-6059 2583 -12408 0
6058 -2582 -12408 0
-2569 6045 -12408 0
-2571 6047 -12408 0
-2573 6049 -12408 0
-2575 6051 -12408 0
-2577 6053 -12408 0
-2579 6055 -12408 0
-2581 6057 -12408 0
-2583 6059 -12408 0
2582 -6058 -12408 0
-6045 -2569 12408 0
-6047 -2571 12408 0
-6049 -2573 12408 0
-6051 -2575 12408 0
-6053 -2577 12408 0
-6055 -2579 12408 0
-6057 -2581 12408 0
-6059 -2583 12408 0
6058 2582 12408 0
c ((max_left_00002_00009_00004=max_left_00002_00009_00005)=tv=SATLiteral(12409))
-2569 -12409 0
-2571 2584 -12409 0
-2573 2586 -12409 0
-2575 2588 -12409 0
-2577 2590 -12409 0
-2579 2592 -12409 0
-2581 2594 -12409 0
-2583 2596 -12409 0
2582 -2595 -12409 0
-2584 2571 -12409 0
-2586 2573 -12409 0
-2588 2575 -12409 0
-2590 2577 -12409 0
-2592 2579 -12409 0
-2594 2581 -12409 0
-2596 2583 -12409 0
2595 -2582 -12409 0
-2571 -2584 12409 0
-2573 -2586 12409 0
-2575 -2588 12409 0
-2577 -2590 12409 0
-2579 -2592 12409 0
-2581 -2594 12409 0
-2583 -2596 12409 0
2582 2595 12409 0
c ((variant_fields_00002_00009_00005=max_left_00002_00009_00005)=tv=SATLiteral(12410))
-6060 2584 -12410 0
-2584 6060 -12410 0
-2586 -12410 0
-2588 -12410 0
-2590 -12410 0
-2592 -12410 0
-2594 -12410 0
-2596 -12410 0
2595 -12410 0
-6060 -2584 12410 0
c ((max_left_00002_00009_00005=max_left_00002_00009_00006)=tv=SATLiteral(12411))
-2584 2597 -12411 0
-2586 2599 -12411 0
-2588 2601 -12411 0
-2590 2603 -12411 0
-2592 2605 -12411 0
-2594 2607 -12411 0
-2596 2609 -12411 0
2595 -2608 -12411 0
-2597 2584 -12411 0
-2599 2586 -12411 0
-2601 2588 -12411 0
-2603 2590 -12411 0
-2605 2592 -12411 0
-2607 2594 -12411 0
-2609 2596 -12411 0
2608 -2595 -12411 0
-2584 -2597 12411 0
-2586 -2599 12411 0
-2588 -2601 12411 0
-2590 -2603 12411 0
-2592 -2605 12411 0
-2594 -2607 12411 0
-2596 -2609 12411 0
2595 2608 12411 0
c ((variant_fields_00002_00009_00006=max_left_00002_00009_00006)=tv=SATLiteral(12412))
-6061 -12412 0
-6063 2597 -12412 0
-6065 2599 -12412 0
-6067 2601 -12412 0
-6069 2603 -12412 0
-6071 2605 -12412 0
-6073 2607 -12412 0
-6075 2609 -12412 0
6074 -2608 -12412 0
-2597 6063 -12412 0
-2599 6065 -12412 0
-2601 6067 -12412 0
-2603 6069 -12412 0
-2605 6071 -12412 0
-2607 6073 -12412 0
-2609 6075 -12412 0
2608 -6074 -12412 0
-6063 -2597 12412 0
-6065 -2599 12412 0
-6067 -2601 12412 0
-6069 -2603 12412 0
-6071 -2605 12412 0
-6073 -2607 12412 0
-6075 -2609 12412 0
6074 2608 12412 0
c ((max_left_00002_00009_00006=max_left_00002_00009_00007)=tv=SATLiteral(12413))
-2597 -12413 0
-2599 -12413 0
-2601 -12413 0
-2603 -12413 0
-2605 -12413 0
-2607 2610 -12413 0
-2609 2612 -12413 0
2608 -2611 -12413 0
-2610 2607 -12413 0
-2612 2609 -12413 0
2611 -2608 -12413 0
-2607 -2610 12413 0
-2609 -2612 12413 0
2608 2611 12413 0
c ((variant_fields_00002_00009_00007=max_left_00002_00009_00007)=tv=SATLiteral(12414))
-6076 2610 -12414 0
-2610 6076 -12414 0
-2612 -12414 0
2611 -12414 0
-6076 -2610 12414 0
c ((max_left_00002_00009_00007=max_left_00002_00009_00008)=tv=SATLiteral(12415))
-2610 2613 -12415 0
-2612 2615 -12415 0
2611 -2614 -12415 0
-2613 2610 -12415 0
-2615 2612 -12415 0
2614 -2611 -12415 0
-2610 -2613 12415 0
-2612 -2615 12415 0
2611 2614 12415 0
c ((variant_fields_00002_00009_00008=max_left_00002_00009_00008)=tv=SATLiteral(12416))
-6077 -12416 0
-6079 -12416 0
-6081 -12416 0
-6083 -12416 0
-6085 -12416 0
-6087 -12416 0
-6089 2613 -12416 0
-6091 2615 -12416 0
6090 -2614 -12416 0
-2613 6089 -12416 0
-2615 6091 -12416 0
2614 -6090 -12416 0
-6089 -2613 12416 0
-6091 -2615 12416 0
6090 2614 12416 0
c ((max_left_00002_00009_00008=max_left_00002_00009_00009)=tv=SATLiteral(12417))
-2613 2616 -12417 0
-2615 2618 -12417 0
2614 -2617 -12417 0
-2616 2613 -12417 0
-2618 2615 -12417 0
2617 -2614 -12417 0
-2613 -2616 12417 0
-2615 -2618 12417 0
2614 2617 12417 0
c ((variant_fields_00002_00009_00009=max_left_00002_00009_00009)=tv=SATLiteral(12418))
-6092 -12418 0
-6094 -12418 0
-6096 -12418 0
-6098 -12418 0
-6100 -12418 0
-6102 -12418 0
-6104 2616 -12418 0
-6106 2618 -12418 0
6105 -2617 -12418 0
-2616 6104 -12418 0
-2618 6106 -12418 0
2617 -6105 -12418 0
-6104 -2616 12418 0
-6106 -2618 12418 0
6105 2617 12418 0
c ((variant_fields_00003_00001_00002=max_left_00003_00001_00002)=tv=SATLiteral(12419))
-6122 2635 -12419 0
-6124 2637 -12419 0
-6126 2639 -12419 0
-6128 2641 -12419 0
-6130 2643 -12419 0
-6132 2645 -12419 0
-6134 2647 -12419 0
-6136 2649 -12419 0
6135 -2648 -12419 0
-2635 6122 -12419 0
-2637 6124 -12419 0
-2639 6126 -12419 0
-2641 6128 -12419 0
-2643 6130 -12419 0
-2645 6132 -12419 0
-2647 6134 -12419 0
-2649 6136 -12419 0
2648 -6135 -12419 0
-6122 -2635 12419 0
-6124 -2637 12419 0
-6126 -2639 12419 0
-6128 -2641 12419 0
-6130 -2643 12419 0
-6132 -2645 12419 0
-6134 -2647 12419 0
-6136 -2649 12419 0
6135 2648 12419 0
c ((max_left_00003_00001_00001=max_left_00003_00001_00002)=tv=SATLiteral(12420))
-2620 2635 -12420 0
-2622 2637 -12420 0
-2624 2639 -12420 0
-2626 2641 -12420 0
-2628 2643 -12420 0
-2630 2645 -12420 0
-2632 2647 -12420 0
-2634 2649 -12420 0
2633 -2648 -12420 0
-2635 2620 -12420 0
-2637 2622 -12420 0
-2639 2624 -12420 0
-2641 2626 -12420 0
-2643 2628 -12420 0
-2645 2630 -12420 0
-2647 2632 -12420 0
-2649 2634 -12420 0
2648 -2633 -12420 0
-2620 -2635 12420 0
-2622 -2637 12420 0
-2624 -2639 12420 0
-2626 -2641 12420 0
-2628 -2643 12420 0
-2630 -2645 12420 0
-2632 -2647 12420 0
-2634 -2649 12420 0
2633 2648 12420 0
c ((variant_fields_00003_00001_00003=max_left_00003_00001_00003)=tv=SATLiteral(12421))
-6137 2650 -12421 0
-2650 6137 -12421 0
-2652 -12421 0
-2654 -12421 0
-2656 -12421 0
2655 -12421 0
-6137 -2650 12421 0
c ((max_left_00003_00001_00002=max_left_00003_00001_00003)=tv=SATLiteral(12422))
-2635 -12422 0
-2637 -12422 0
-2639 -12422 0
-2641 -12422 0
-2643 2650 -12422 0
-2645 2652 -12422 0
-2647 2654 -12422 0
-2649 2656 -12422 0
2648 -2655 -12422 0
-2650 2643 -12422 0
-2652 2645 -12422 0
-2654 2647 -12422 0
-2656 2649 -12422 0
2655 -2648 -12422 0
-2643 -2650 12422 0
-2645 -2652 12422 0
-2647 -2654 12422 0
-2649 -2656 12422 0
2648 2655 12422 0
c ((variant_fields_00003_00001_00004=max_left_00003_00001_00004)=tv=SATLiteral(12423))
-6138 -12423 0
-6140 -12423 0
-6142 -12423 0
-6144 -12423 0
-6146 2657 -12423 0
-6148 2659 -12423 0
-6150 2661 -12423 0
-6152 2663 -12423 0
6151 -2662 -12423 0
-2657 6146 -12423 0
-2659 6148 -12423 0
-2661 6150 -12423 0
-2663 6152 -12423 0
2662 -6151 -12423 0
-6146 -2657 12423 0
-6148 -2659 12423 0
-6150 -2661 12423 0
-6152 -2663 12423 0
6151 2662 12423 0
c ((max_left_00003_00001_00003=max_left_00003_00001_00004)=tv=SATLiteral(12424))
-2650 2657 -12424 0
-2652 2659 -12424 0
-2654 2661 -12424 0
-2656 2663 -12424 0
2655 -2662 -12424 0
-2657 2650 -12424 0
-2659 2652 -12424 0
-2661 2654 -12424 0
-2663 2656 -12424 0
2662 -2655 -12424 0
-2650 -2657 12424 0
-2652 -2659 12424 0
-2654 -2661 12424 0
-2656 -2663 12424 0
2655 2662 12424 0
c ((variant_fields_00003_00001_00005=max_left_00003_00001_00005)=tv=SATLiteral(12425))
-6153 -12425 0
-6155 -12425 0
-6157 -12425 0
-6159 -12425 0
-6161 2664 -12425 0
-6163 2666 -12425 0
-6165 2668 -12425 0
-6167 2670 -12425 0
6166 -2669 -12425 0
-2664 6161 -12425 0
-2666 6163 -12425 0
-2668 6165 -12425 0
-2670 6167 -12425 0
2669 -6166 -12425 0
-6161 -2664 12425 0
-6163 -2666 12425 0
-6165 -2668 12425 0
-6167 -2670 12425 0
6166 2669 12425 0
c ((max_left_00003_00001_00004=max_left_00003_00001_00005)=tv=SATLiteral(12426))
-2657 2664 -12426 0
-2659 2666 -12426 0
-2661 2668 -12426 0
-2663 2670 -12426 0
2662 -2669 -12426 0
-2664 2657 -12426 0
-2666 2659 -12426 0
-2668 2661 -12426 0
-2670 2663 -12426 0
2669 -2662 -12426 0
-2657 -2664 12426 0
-2659 -2666 12426 0
-2661 -2668 12426 0
-2663 -2670 12426 0
2662 2669 12426 0
c ((variant_fields_00003_00001_00006=max_left_00003_00001_00006)=tv=SATLiteral(12427))
-6168 -12427 0
-6170 -12427 0
-6172 -12427 0
-6174 -12427 0
-6176 2671 -12427 0
-6178 2673 -12427 0
-6180 2675 -12427 0
-6182 2677 -12427 0
6181 -2676 -12427 0
-2671 6176 -12427 0
-2673 6178 -12427 0
-2675 6180 -12427 0
-2677 6182 -12427 0
2676 -6181 -12427 0
-6176 -2671 12427 0
-6178 -2673 12427 0
-6180 -2675 12427 0
-6182 -2677 12427 0
6181 2676 12427 0
c ((max_left_00003_00001_00005=max_left_00003_00001_00006)=tv=SATLiteral(12428))
-2664 2671 -12428 0
-2666 2673 -12428 0
-2668 2675 -12428 0
-2670 2677 -12428 0
2669 -2676 -12428 0
-2671 2664 -12428 0
-2673 2666 -12428 0
-2675 2668 -12428 0
-2677 2670 -12428 0
2676 -2669 -12428 0
-2664 -2671 12428 0
-2666 -2673 12428 0
-2668 -2675 12428 0
-2670 -2677 12428 0
2669 2676 12428 0
c ((variant_fields_00003_00001_00007=max_left_00003_00001_00007)=tv=SATLiteral(12429))
-6183 -12429 0
-6185 -12429 0
-6187 -12429 0
-6189 -12429 0
-6191 2678 -12429 0
-6193 2680 -12429 0
-6195 2682 -12429 0
-6197 2684 -12429 0
6196 -2683 -12429 0
-2678 6191 -12429 0
-2680 6193 -12429 0
-2682 6195 -12429 0
-2684 6197 -12429 0
2683 -6196 -12429 0
-6191 -2678 12429 0
-6193 -2680 12429 0
-6195 -2682 12429 0
-6197 -2684 12429 0
6196 2683 12429 0
c ((max_left_00003_00001_00006=max_left_00003_00001_00007)=tv=SATLiteral(12430))
-2671 2678 -12430 0
-2673 2680 -12430 0
-2675 2682 -12430 0
-2677 2684 -12430 0
2676 -2683 -12430 0
-2678 2671 -12430 0
-2680 2673 -12430 0
-2682 2675 -12430 0
-2684 2677 -12430 0
2683 -2676 -12430 0
-2671 -2678 12430 0
-2673 -2680 12430 0
-2675 -2682 12430 0
-2677 -2684 12430 0
2676 2683 12430 0
c ((variant_fields_00003_00001_00008=max_left_00003_00001_00008)=tv=SATLiteral(12431))
-6198 -12431 0
-6200 -12431 0
-6202 -12431 0
-6204 -12431 0
-6206 2685 -12431 0
-6208 2687 -12431 0
-6210 2689 -12431 0
-6212 2691 -12431 0
6211 -2690 -12431 0
-2685 6206 -12431 0
-2687 6208 -12431 0
-2689 6210 -12431 0
-2691 6212 -12431 0
2690 -6211 -12431 0
-6206 -2685 12431 0
-6208 -2687 12431 0
-6210 -2689 12431 0
-6212 -2691 12431 0
6211 2690 12431 0
c ((max_left_00003_00001_00007=max_left_00003_00001_00008)=tv=SATLiteral(12432))
-2678 2685 -12432 0
-2680 2687 -12432 0
-2682 2689 -12432 0
-2684 2691 -12432 0
2683 -2690 -12432 0
-2685 2678 -12432 0
-2687 2680 -12432 0
-2689 2682 -12432 0
-2691 2684 -12432 0
2690 -2683 -12432 0
-2678 -2685 12432 0
-2680 -2687 12432 0
-2682 -2689 12432 0
-2684 -2691 12432 0
2683 2690 12432 0
c ((variant_fields_00003_00001_00009=max_left_00003_00001_00009)=tv=SATLiteral(12433))
-6213 -12433 0
-6215 -12433 0
-6217 -12433 0
-6219 -12433 0
-6221 2692 -12433 0
-6223 2694 -12433 0
-6225 2696 -12433 0
-6227 2698 -12433 0
6226 -2697 -12433 0
-2692 6221 -12433 0
-2694 6223 -12433 0
-2696 6225 -12433 0
-2698 6227 -12433 0
2697 -6226 -12433 0
-6221 -2692 12433 0
-6223 -2694 12433 0
-6225 -2696 12433 0
-6227 -2698 12433 0
6226 2697 12433 0
c ((max_left_00003_00001_00008=max_left_00003_00001_00009)=tv=SATLiteral(12434))
-2685 2692 -12434 0
-2687 2694 -12434 0
-2689 2696 -12434 0
-2691 2698 -12434 0
2690 -2697 -12434 0
-2692 2685 -12434 0
-2694 2687 -12434 0
-2696 2689 -12434 0
-2698 2691 -12434 0
2697 -2690 -12434 0
-2685 -2692 12434 0
-2687 -2694 12434 0
-2689 -2696 12434 0
-2691 -2698 12434 0
2690 2697 12434 0
c ((max_left_00003_00002_00001=max_left_00003_00002_00002)=tv=SATLiteral(12435))
-2700 -12435 0
-2702 -12435 0
-2704 -12435 0
-2706 -12435 0
-2708 -12435 0
-2710 -12435 0
-2712 2715 -12435 0
-2714 2717 -12435 0
2713 -2716 -12435 0
-2715 2712 -12435 0
-2717 2714 -12435 0
2716 -2713 -12435 0
-2712 -2715 12435 0
-2714 -2717 12435 0
2713 2716 12435 0
c ((variant_fields_00003_00002_00002=max_left_00003_00002_00002)=tv=SATLiteral(12436))
-6243 2715 -12436 0
-2715 6243 -12436 0
-2717 -12436 0
2716 -12436 0
-6243 -2715 12436 0
c ((max_left_00003_00002_00002=max_left_00003_00002_00003)=tv=SATLiteral(12437))
-2715 2718 -12437 0
-2717 2720 -12437 0
2716 -2719 -12437 0
-2718 2715 -12437 0
-2720 2717 -12437 0
2719 -2716 -12437 0
-2715 -2718 12437 0
-2717 -2720 12437 0
2716 2719 12437 0
c ((variant_fields_00003_00002_00003=max_left_00003_00002_00003)=tv=SATLiteral(12438))
-6244 -12438 0
-6246 -12438 0
-6248 -12438 0
-6250 -12438 0
-6252 -12438 0
-6254 -12438 0
-6256 2718 -12438 0
-6258 2720 -12438 0
6257 -2719 -12438 0
-2718 6256 -12438 0
-2720 6258 -12438 0
2719 -6257 -12438 0
-6256 -2718 12438 0
-6258 -2720 12438 0
6257 2719 12438 0
c ((max_left_00003_00002_00003=max_left_00003_00002_00004)=tv=SATLiteral(12439))
-2718 2721 -12439 0
-2720 2723 -12439 0
2719 -2722 -12439 0
-2721 2718 -12439 0
-2723 2720 -12439 0
2722 -2719 -12439 0
-2718 -2721 12439 0
-2720 -2723 12439 0
2719 2722 12439 0
c ((variant_fields_00003_00002_00004=max_left_00003_00002_00004)=tv=SATLiteral(12440))
-6259 -12440 0
-6261 -12440 0
-6263 -12440 0
-6265 -12440 0
-6267 -12440 0
-6269 -12440 0
-6271 2721 -12440 0
-6273 2723 -12440 0
6272 -2722 -12440 0
-2721 6271 -12440 0
-2723 6273 -12440 0
2722 -6272 -12440 0
-6271 -2721 12440 0
-6273 -2723 12440 0
6272 2722 12440 0
c ((max_left_00003_00002_00004=max_left_00003_00002_00005)=tv=SATLiteral(12441))
-2721 2724 -12441 0
-2723 2726 -12441 0
2722 -2725 -12441 0
-2724 2721 -12441 0
-2726 2723 -12441 0
2725 -2722 -12441 0
-2721 -2724 12441 0
-2723 -2726 12441 0
2722 2725 12441 0
c ((variant_fields_00003_00002_00005=max_left_00003_00002_00005)=tv=SATLiteral(12442))
-6274 -12442 0
-6276 -12442 0
-6278 -12442 0
-6280 -12442 0
-6282 -12442 0
-6284 -12442 0
-6286 2724 -12442 0
-6288 2726 -12442 0
6287 -2725 -12442 0
-2724 6286 -12442 0
-2726 6288 -12442 0
2725 -6287 -12442 0
-6286 -2724 12442 0
-6288 -2726 12442 0
6287 2725 12442 0
c ((max_left_00003_00002_00005=max_left_00003_00002_00006)=tv=SATLiteral(12443))
-2724 2727 -12443 0
-2726 2729 -12443 0
2725 -2728 -12443 0
-2727 2724 -12443 0
-2729 2726 -12443 0
2728 -2725 -12443 0
-2724 -2727 12443 0
-2726 -2729 12443 0
2725 2728 12443 0
c ((variant_fields_00003_00002_00006=max_left_00003_00002_00006)=tv=SATLiteral(12444))
-6289 -12444 0
-6291 -12444 0
-6293 -12444 0
-6295 -12444 0
-6297 -12444 0
-6299 -12444 0
-6301 2727 -12444 0
-6303 2729 -12444 0
6302 -2728 -12444 0
-2727 6301 -12444 0
-2729 6303 -12444 0
2728 -6302 -12444 0
-6301 -2727 12444 0
-6303 -2729 12444 0
6302 2728 12444 0
c ((max_left_00003_00002_00006=max_left_00003_00002_00007)=tv=SATLiteral(12445))
-2727 2730 -12445 0
-2729 2732 -12445 0
2728 -2731 -12445 0
-2730 2727 -12445 0
-2732 2729 -12445 0
2731 -2728 -12445 0
-2727 -2730 12445 0
-2729 -2732 12445 0
2728 2731 12445 0
c ((variant_fields_00003_00002_00007=max_left_00003_00002_00007)=tv=SATLiteral(12446))
-6304 -12446 0
-6306 -12446 0
-6308 -12446 0
-6310 -12446 0
-6312 -12446 0
-6314 -12446 0
-6316 2730 -12446 0
-6318 2732 -12446 0
6317 -2731 -12446 0
-2730 6316 -12446 0
-2732 6318 -12446 0
2731 -6317 -12446 0
-6316 -2730 12446 0
-6318 -2732 12446 0
6317 2731 12446 0
c ((max_left_00003_00002_00007=max_left_00003_00002_00008)=tv=SATLiteral(12447))
-2730 2733 -12447 0
-2732 2735 -12447 0
2731 -2734 -12447 0
-2733 2730 -12447 0
-2735 2732 -12447 0
2734 -2731 -12447 0
-2730 -2733 12447 0
-2732 -2735 12447 0
2731 2734 12447 0
c ((variant_fields_00003_00002_00008=max_left_00003_00002_00008)=tv=SATLiteral(12448))
-6319 -12448 0
-6321 -12448 0
-6323 -12448 0
-6325 -12448 0
-6327 -12448 0
-6329 -12448 0
-6331 2733 -12448 0
-6333 2735 -12448 0
6332 -2734 -12448 0
-2733 6331 -12448 0
-2735 6333 -12448 0
2734 -6332 -12448 0
-6331 -2733 12448 0
-6333 -2735 12448 0
6332 2734 12448 0
c ((max_left_00003_00002_00008=max_left_00003_00002_00009)=tv=SATLiteral(12449))
-2733 2736 -12449 0
-2735 2738 -12449 0
2734 -2737 -12449 0
-2736 2733 -12449 0
-2738 2735 -12449 0
2737 -2734 -12449 0
-2733 -2736 12449 0
-2735 -2738 12449 0
2734 2737 12449 0
c ((variant_fields_00003_00002_00009=max_left_00003_00002_00009)=tv=SATLiteral(12450))
-6334 -12450 0
-6336 -12450 0
-6338 -12450 0
-6340 -12450 0
-6342 -12450 0
-6344 -12450 0
-6346 2736 -12450 0
-6348 2738 -12450 0
6347 -2737 -12450 0
-2736 6346 -12450 0
-2738 6348 -12450 0
2737 -6347 -12450 0
-6346 -2736 12450 0
-6348 -2738 12450 0
6347 2737 12450 0
c ((max_left_00003_00003_00001=max_left_00003_00003_00002)=tv=SATLiteral(12451))
-2740 2755 -12451 0
-2742 2757 -12451 0
-2744 2759 -12451 0
-2746 2761 -12451 0
-2748 2763 -12451 0
-2750 2765 -12451 0
-2752 2767 -12451 0
-2754 2769 -12451 0
2753 -2768 -12451 0
-2755 2740 -12451 0
-2757 2742 -12451 0
-2759 2744 -12451 0
-2761 2746 -12451 0
-2763 2748 -12451 0
-2765 2750 -12451 0
-2767 2752 -12451 0
-2769 2754 -12451 0
2768 -2753 -12451 0
-2740 -2755 12451 0
-2742 -2757 12451 0
-2744 -2759 12451 0
-2746 -2761 12451 0
-2748 -2763 12451 0
-2750 -2765 12451 0
-2752 -2767 12451 0
-2754 -2769 12451 0
2753 2768 12451 0
c ((variant_fields_00003_00003_00002=max_left_00003_00003_00002)=tv=SATLiteral(12452))
-6364 2755 -12452 0
-6366 2757 -12452 0
-6368 2759 -12452 0
-6370 2761 -12452 0
-6372 2763 -12452 0
-6374 2765 -12452 0
-6376 2767 -12452 0
-6378 2769 -12452 0
6377 -2768 -12452 0
-2755 6364 -12452 0
-2757 6366 -12452 0
-2759 6368 -12452 0
-2761 6370 -12452 0
-2763 6372 -12452 0
-2765 6374 -12452 0
-2767 6376 -12452 0
-2769 6378 -12452 0
2768 -6377 -12452 0
-6364 -2755 12452 0
-6366 -2757 12452 0
-6368 -2759 12452 0
-6370 -2761 12452 0
-6372 -2763 12452 0
-6374 -2765 12452 0
-6376 -2767 12452 0
-6378 -2769 12452 0
6377 2768 12452 0
c ((max_left_00003_00003_00002=max_left_00003_00003_00003)=tv=SATLiteral(12453))
-2755 2770 -12453 0
-2757 2772 -12453 0
-2759 2774 -12453 0
-2761 2776 -12453 0
-2763 2778 -12453 0
-2765 2780 -12453 0
-2767 2782 -12453 0
-2769 2784 -12453 0
2768 -2783 -12453 0
-2770 2755 -12453 0
-2772 2757 -12453 0
-2774 2759 -12453 0
-2776 2761 -12453 0
-2778 2763 -12453 0
-2780 2765 -12453 0
-2782 2767 -12453 0
-2784 2769 -12453 0
2783 -2768 -12453 0
-2755 -2770 12453 0
-2757 -2772 12453 0
-2759 -2774 12453 0
-2761 -2776 12453 0
-2763 -2778 12453 0
-2765 -2780 12453 0
-2767 -2782 12453 0
-2769 -2784 12453 0
2768 2783 12453 0
c ((variant_fields_00003_00003_00003=max_left_00003_00003_00003)=tv=SATLiteral(12454))
-6379 2770 -12454 0
-6381 2772 -12454 0
-6383 2774 -12454 0
-6385 2776 -12454 0
-6387 2778 -12454 0
-6389 2780 -12454 0
-6391 2782 -12454 0
-6393 2784 -12454 0
6392 -2783 -12454 0
-2770 6379 -12454 0
-2772 6381 -12454 0
-2774 6383 -12454 0
-2776 6385 -12454 0
-2778 6387 -12454 0
-2780 6389 -12454 0
-2782 6391 -12454 0
-2784 6393 -12454 0
2783 -6392 -12454 0
-6379 -2770 12454 0
-6381 -2772 12454 0
-6383 -2774 12454 0
-6385 -2776 12454 0
-6387 -2778 12454 0
-6389 -2780 12454 0
-6391 -2782 12454 0
-6393 -2784 12454 0
6392 2783 12454 0
c ((max_left_00003_00003_00003=max_left_00003_00003_00004)=tv=SATLiteral(12455))
-2770 -12455 0
-2772 -12455 0
-2774 -12455 0
-2776 -12455 0
-2778 -12455 0
-2780 2785 -12455 0
-2782 2787 -12455 0
-2784 2789 -12455 0
2783 -2788 -12455 0
-2785 2780 -12455 0
-2787 2782 -12455 0
-2789 2784 -12455 0
2788 -2783 -12455 0
-2780 -2785 12455 0
-2782 -2787 12455 0
-2784 -2789 12455 0
2783 2788 12455 0
c ((variant_fields_00003_00003_00004=max_left_00003_00003_00004)=tv=SATLiteral(12456))
-6394 2785 -12456 0
-2785 6394 -12456 0
-2787 -12456 0
-2789 -12456 0
2788 -12456 0
-6394 -2785 12456 0
c ((max_left_00003_00003_00004=max_left_00003_00003_00005)=tv=SATLiteral(12457))
-2785 2790 -12457 0
-2787 2792 -12457 0
-2789 2794 -12457 0
2788 -2793 -12457 0
-2790 2785 -12457 0
-2792 2787 -12457 0
-2794 2789 -12457 0
2793 -2788 -12457 0
-2785 -2790 12457 0
-2787 -2792 12457 0
-2789 -2794 12457 0
2788 2793 12457 0
c ((variant_fields_00003_00003_00005=max_left_00003_00003_00005)=tv=SATLiteral(12458))
-6395 -12458 0
-6397 -12458 0
-6399 -12458 0
-6401 -12458 0
-6403 -12458 0
-6405 2790 -12458 0
-6407 2792 -12458 0
-6409 2794 -12458 0
6408 -2793 -12458 0
-2790 6405 -12458 0
-2792 6407 -12458 0
-2794 6409 -12458 0
2793 -6408 -12458 0
-6405 -2790 12458 0
-6407 -2792 12458 0
-6409 -2794 12458 0
6408 2793 12458 0
c ((max_left_00003_00003_00005=max_left_00003_00003_00006)=tv=SATLiteral(12459))
-2790 2795 -12459 0
-2792 2797 -12459 0
-2794 2799 -12459 0
2793 -2798 -12459 0
-2795 2790 -12459 0
-2797 2792 -12459 0
-2799 2794 -12459 0
2798 -2793 -12459 0
-2790 -2795 12459 0
-2792 -2797 12459 0
-2794 -2799 12459 0
2793 2798 12459 0
c ((variant_fields_00003_00003_00006=max_left_00003_00003_00006)=tv=SATLiteral(12460))
-6410 -12460 0
-6412 -12460 0
-6414 -12460 0
-6416 -12460 0
-6418 -12460 0
-6420 2795 -12460 0
-6422 2797 -12460 0
-6424 2799 -12460 0
6423 -2798 -12460 0
-2795 6420 -12460 0
-2797 6422 -12460 0
-2799 6424 -12460 0
2798 -6423 -12460 0
-6420 -2795 12460 0
-6422 -2797 12460 0
-6424 -2799 12460 0
6423 2798 12460 0
c ((max_left_00003_00003_00006=max_left_00003_00003_00007)=tv=SATLiteral(12461))
-2795 2800 -12461 0
-2797 2802 -12461 0
-2799 2804 -12461 0
2798 -2803 -12461 0
-2800 2795 -12461 0
-2802 2797 -12461 0
-2804 2799 -12461 0
2803 -2798 -12461 0
-2795 -2800 12461 0
-2797 -2802 12461 0
-2799 -2804 12461 0
2798 2803 12461 0
c ((variant_fields_00003_00003_00007=max_left_00003_00003_00007)=tv=SATLiteral(12462))
-6425 -12462 0
-6427 -12462 0
-6429 -12462 0
-6431 -12462 0
-6433 -12462 0
-6435 2800 -12462 0
-6437 2802 -12462 0
-6439 2804 -12462 0
6438 -2803 -12462 0
-2800 6435 -12462 0
-2802 6437 -12462 0
-2804 6439 -12462 0
2803 -6438 -12462 0
-6435 -2800 12462 0
-6437 -2802 12462 0
-6439 -2804 12462 0
6438 2803 12462 0
c ((max_left_00003_00003_00007=max_left_00003_00003_00008)=tv=SATLiteral(12463))
-2800 2805 -12463 0
-2802 2807 -12463 0
-2804 2809 -12463 0
2803 -2808 -12463 0
-2805 2800 -12463 0
-2807 2802 -12463 0
-2809 2804 -12463 0
2808 -2803 -12463 0
-2800 -2805 12463 0
-2802 -2807 12463 0
-2804 -2809 12463 0
2803 2808 12463 0
c ((variant_fields_00003_00003_00008=max_left_00003_00003_00008)=tv=SATLiteral(12464))
-6440 -12464 0
-6442 -12464 0
-6444 -12464 0
-6446 -12464 0
-6448 -12464 0
-6450 2805 -12464 0
-6452 2807 -12464 0
-6454 2809 -12464 0
6453 -2808 -12464 0
-2805 6450 -12464 0
-2807 6452 -12464 0
-2809 6454 -12464 0
2808 -6453 -12464 0
-6450 -2805 12464 0
-6452 -2807 12464 0
-6454 -2809 12464 0
6453 2808 12464 0
c ((max_left_00003_00003_00008=max_left_00003_00003_00009)=tv=SATLiteral(12465))
-2805 2810 -12465 0
-2807 2812 -12465 0
-2809 2814 -12465 0
2808 -2813 -12465 0
-2810 2805 -12465 0
-2812 2807 -12465 0
-2814 2809 -12465 0
2813 -2808 -12465 0
-2805 -2810 12465 0
-2807 -2812 12465 0
-2809 -2814 12465 0
2808 2813 12465 0
c ((variant_fields_00003_00003_00009=max_left_00003_00003_00009)=tv=SATLiteral(12466))
-6455 -12466 0
-6457 -12466 0
-6459 -12466 0
-6461 -12466 0
-6463 -12466 0
-6465 2810 -12466 0
-6467 2812 -12466 0
-6469 2814 -12466 0
6468 -2813 -12466 0
-2810 6465 -12466 0
-2812 6467 -12466 0
-2814 6469 -12466 0
2813 -6468 -12466 0
-6465 -2810 12466 0
-6467 -2812 12466 0
-6469 -2814 12466 0
6468 2813 12466 0
c ((max_left_00003_00004_00001=max_left_00003_00004_00002)=tv=SATLiteral(12467))
-2816 -12467 0
-2818 -12467 0
-2820 2831 -12467 0
-2822 2833 -12467 0
-2824 2835 -12467 0
-2826 2837 -12467 0
-2828 2839 -12467 0
-2830 2841 -12467 0
2829 -2840 -12467 0
-2831 2820 -12467 0
-2833 2822 -12467 0
-2835 2824 -12467 0
-2837 2826 -12467 0
-2839 2828 -12467 0
-2841 2830 -12467 0
2840 -2829 -12467 0
-2820 -2831 12467 0
-2822 -2833 12467 0
-2824 -2835 12467 0
-2826 -2837 12467 0
-2828 -2839 12467 0
-2830 -2841 12467 0
2829 2840 12467 0
c ((variant_fields_00003_00004_00002=max_left_00003_00004_00002)=tv=SATLiteral(12468))
-6485 2831 -12468 0
-2831 6485 -12468 0
-2833 -12468 0
-2835 -12468 0
-2837 -12468 0
-2839 -12468 0
-2841 -12468 0
2840 -12468 0
-6485 -2831 12468 0
c ((max_left_00003_00004_00002=max_left_00003_00004_00003)=tv=SATLiteral(12469))
-2831 2842 -12469 0
-2833 2844 -12469 0
-2835 2846 -12469 0
-2837 2848 -12469 0
-2839 2850 -12469 0
-2841 2852 -12469 0
2840 -2851 -12469 0
-2842 2831 -12469 0
-2844 2833 -12469 0
-2846 2835 -12469 0
-2848 2837 -12469 0
-2850 2839 -12469 0
-2852 2841 -12469 0
2851 -2840 -12469 0
-2831 -2842 12469 0
-2833 -2844 12469 0
-2835 -2846 12469 0
-2837 -2848 12469 0
-2839 -2850 12469 0
-2841 -2852 12469 0
2840 2851 12469 0
c ((variant_fields_00003_00004_00003=max_left_00003_00004_00003)=tv=SATLiteral(12470))
-6486 -12470 0
-6488 -12470 0
-6490 2842 -12470 0
-6492 2844 -12470 0
-6494 2846 -12470 0
-6496 2848 -12470 0
-6498 2850 -12470 0
-6500 2852 -12470 0
6499 -2851 -12470 0
-2842 6490 -12470 0
-2844 6492 -12470 0
-2846 6494 -12470 0
-2848 6496 -12470 0
-2850 6498 -12470 0
-2852 6500 -12470 0
2851 -6499 -12470 0
-6490 -2842 12470 0
-6492 -2844 12470 0
-6494 -2846 12470 0
-6496 -2848 12470 0
-6498 -2850 12470 0
-6500 -2852 12470 0
6499 2851 12470 0
c ((max_left_00003_00004_00003=max_left_00003_00004_00004)=tv=SATLiteral(12471))
-2842 2853 -12471 0
-2844 2855 -12471 0
-2846 2857 -12471 0
-2848 2859 -12471 0
-2850 2861 -12471 0
-2852 2863 -12471 0
2851 -2862 -12471 0
-2853 2842 -12471 0
-2855 2844 -12471 0
-2857 2846 -12471 0
-2859 2848 -12471 0
-2861 2850 -12471 0
-2863 2852 -12471 0
2862 -2851 -12471 0
-2842 -2853 12471 0
-2844 -2855 12471 0
-2846 -2857 12471 0
-2848 -2859 12471 0
-2850 -2861 12471 0
-2852 -2863 12471 0
2851 2862 12471 0
c ((variant_fields_00003_00004_00004=max_left_00003_00004_00004)=tv=SATLiteral(12472))
-6501 -12472 0
-6503 -12472 0
-6505 2853 -12472 0
-6507 2855 -12472 0
-6509 2857 -12472 0
-6511 2859 -12472 0
-6513 2861 -12472 0
-6515 2863 -12472 0
6514 -2862 -12472 0
-2853 6505 -12472 0
-2855 6507 -12472 0
-2857 6509 -12472 0
-2859 6511 -12472 0
-2861 6513 -12472 0
-2863 6515 -12472 0
2862 -6514 -12472 0
-6505 -2853 12472 0
-6507 -2855 12472 0
-6509 -2857 12472 0
-6511 -2859 12472 0
-6513 -2861 12472 0
-6515 -2863 12472 0
6514 2862 12472 0
c ((max_left_00003_00004_00004=max_left_00003_00004_00005)=tv=SATLiteral(12473))
-2853 2864 -12473 0
-2855 2866 -12473 0
-2857 2868 -12473 0
-2859 2870 -12473 0
-2861 2872 -12473 0
-2863 2874 -12473 0
2862 -2873 -12473 0
-2864 2853 -12473 0
-2866 2855 -12473 0
-2868 2857 -12473 0
-2870 2859 -12473 0
-2872 2861 -12473 0
-2874 2863 -12473 0
2873 -2862 -12473 0
-2853 -2864 12473 0
-2855 -2866 12473 0
-2857 -2868 12473 0
-2859 -2870 12473 0
-2861 -2872 12473 0
-2863 -2874 12473 0
2862 2873 12473 0
c ((variant_fields_00003_00004_00005=max_left_00003_00004_00005)=tv=SATLiteral(12474))
-6516 -12474 0
-6518 -12474 0
-6520 2864 -12474 0
-6522 2866 -12474 0
-6524 2868 -12474 0
-6526 2870 -12474 0
-6528 2872 -12474 0
-6530 2874 -12474 0
6529 -2873 -12474 0
-2864 6520 -12474 0
-2866 6522 -12474 0
-2868 6524 -12474 0
-2870 6526 -12474 0
-2872 6528 -12474 0
-2874 6530 -12474 0
2873 -6529 -12474 0
-6520 -2864 12474 0
-6522 -2866 12474 0
-6524 -2868 12474 0
-6526 -2870 12474 0
-6528 -2872 12474 0
-6530 -2874 12474 0
6529 2873 12474 0
c ((max_left_00003_00004_00005=max_left_00003_00004_00006)=tv=SATLiteral(12475))
-2864 2875 -12475 0
-2866 2877 -12475 0
-2868 2879 -12475 0
-2870 2881 -12475 0
-2872 2883 -12475 0
-2874 2885 -12475 0
2873 -2884 -12475 0
-2875 2864 -12475 0
-2877 2866 -12475 0
-2879 2868 -12475 0
-2881 2870 -12475 0
-2883 2872 -12475 0
-2885 2874 -12475 0
2884 -2873 -12475 0
-2864 -2875 12475 0
-2866 -2877 12475 0
-2868 -2879 12475 0
-2870 -2881 12475 0
-2872 -2883 12475 0
-2874 -2885 12475 0
2873 2884 12475 0
c ((variant_fields_00003_00004_00006=max_left_00003_00004_00006)=tv=SATLiteral(12476))
-6531 -12476 0
-6533 -12476 0
-6535 2875 -12476 0
-6537 2877 -12476 0
-6539 2879 -12476 0
-6541 2881 -12476 0
-6543 2883 -12476 0
-6545 2885 -12476 0
6544 -2884 -12476 0
-2875 6535 -12476 0
-2877 6537 -12476 0
-2879 6539 -12476 0
-2881 6541 -12476 0
-2883 6543 -12476 0
-2885 6545 -12476 0
2884 -6544 -12476 0
-6535 -2875 12476 0
-6537 -2877 12476 0
-6539 -2879 12476 0
-6541 -2881 12476 0
-6543 -2883 12476 0
-6545 -2885 12476 0
6544 2884 12476 0
c ((max_left_00003_00004_00007=max_left_00003_00004_00008)=tv=SATLiteral(12477))
-2886 2897 -12477 0
-2888 2899 -12477 0
-2890 2901 -12477 0
-2892 2903 -12477 0
-2894 2905 -12477 0
-2896 2907 -12477 0
2895 -2906 -12477 0
-2897 2886 -12477 0
-2899 2888 -12477 0
-2901 2890 -12477 0
-2903 2892 -12477 0
-2905 2894 -12477 0
-2907 2896 -12477 0
2906 -2895 -12477 0
-2886 -2897 12477 0
-2888 -2899 12477 0
-2890 -2901 12477 0
-2892 -2903 12477 0
-2894 -2905 12477 0
-2896 -2907 12477 0
2895 2906 12477 0
c ((variant_fields_00003_00004_00008=max_left_00003_00004_00008)=tv=SATLiteral(12478))
-6547 -12478 0
-6549 -12478 0
-6551 2897 -12478 0
-6553 2899 -12478 0
-6555 2901 -12478 0
-6557 2903 -12478 0
-6559 2905 -12478 0
-6561 2907 -12478 0
6560 -2906 -12478 0
-2897 6551 -12478 0
-2899 6553 -12478 0
-2901 6555 -12478 0
-2903 6557 -12478 0
-2905 6559 -12478 0
-2907 6561 -12478 0
2906 -6560 -12478 0
-6551 -2897 12478 0
-6553 -2899 12478 0
-6555 -2901 12478 0
-6557 -2903 12478 0
-6559 -2905 12478 0
-6561 -2907 12478 0
6560 2906 12478 0
c ((max_left_00003_00004_00008=max_left_00003_00004_00009)=tv=SATLiteral(12479))
-2897 2908 -12479 0
-2899 2910 -12479 0
-2901 2912 -12479 0
-2903 2914 -12479 0
-2905 2916 -12479 0
-2907 2918 -12479 0
2906 -2917 -12479 0
-2908 2897 -12479 0
-2910 2899 -12479 0
-2912 2901 -12479 0
-2914 2903 -12479 0
-2916 2905 -12479 0
-2918 2907 -12479 0
2917 -2906 -12479 0
-2897 -2908 12479 0
-2899 -2910 12479 0
-2901 -2912 12479 0
-2903 -2914 12479 0
-2905 -2916 12479 0
-2907 -2918 12479 0
2906 2917 12479 0
c ((variant_fields_00003_00004_00009=max_left_00003_00004_00009)=tv=SATLiteral(12480))
-6562 -12480 0
-6564 -12480 0
-6566 2908 -12480 0
-6568 2910 -12480 0
-6570 2912 -12480 0
-6572 2914 -12480 0
-6574 2916 -12480 0
-6576 2918 -12480 0
6575 -2917 -12480 0
-2908 6566 -12480 0
-2910 6568 -12480 0
-2912 6570 -12480 0
-2914 6572 -12480 0
-2916 6574 -12480 0
-2918 6576 -12480 0
2917 -6575 -12480 0
-6566 -2908 12480 0
-6568 -2910 12480 0
-6570 -2912 12480 0
-6572 -2914 12480 0
-6574 -2916 12480 0
-6576 -2918 12480 0
6575 2917 12480 0
c ((max_left_00003_00005_00001=max_left_00003_00005_00002)=tv=SATLiteral(12481))
-2920 2921 -12481 0
-2921 2920 -12481 0
-2923 -12481 0
-2925 -12481 0
-2927 -12481 0
-2929 -12481 0
-2931 -12481 0
-2933 -12481 0
2932 -12481 0
-2920 -2921 12481 0
c ((variant_fields_00003_00005_00002=max_left_00003_00005_00002)=tv=SATLiteral(12482))
-6578 -12482 0
-6580 2921 -12482 0
-6582 2923 -12482 0
-6584 2925 -12482 0
-6586 2927 -12482 0
-6588 2929 -12482 0
-6590 2931 -12482 0
-6592 2933 -12482 0
6591 -2932 -12482 0
-2921 6580 -12482 0
-2923 6582 -12482 0
-2925 6584 -12482 0
-2927 6586 -12482 0
-2929 6588 -12482 0
-2931 6590 -12482 0
-2933 6592 -12482 0
2932 -6591 -12482 0
-6580 -2921 12482 0
-6582 -2923 12482 0
-6584 -2925 12482 0
-6586 -2927 12482 0
-6588 -2929 12482 0
-6590 -2931 12482 0
-6592 -2933 12482 0
6591 2932 12482 0
c ((max_left_00003_00005_00002=max_left_00003_00005_00003)=tv=SATLiteral(12483))
-2921 -12483 0
-2923 -12483 0
-2925 -12483 0
-2927 -12483 0
-2929 -12483 0
-2931 2934 -12483 0
-2933 2936 -12483 0
2932 -2935 -12483 0
-2934 2931 -12483 0
-2936 2933 -12483 0
2935 -2932 -12483 0
-2931 -2934 12483 0
-2933 -2936 12483 0
2932 2935 12483 0
c ((variant_fields_00003_00005_00003=max_left_00003_00005_00003)=tv=SATLiteral(12484))
-6593 2934 -12484 0
-2934 6593 -12484 0
-2936 -12484 0
2935 -12484 0
-6593 -2934 12484 0
c ((max_left_00003_00005_00003=max_left_00003_00005_00004)=tv=SATLiteral(12485))
-2934 2937 -12485 0
-2936 2939 -12485 0
2935 -2938 -12485 0
-2937 2934 -12485 0
-2939 2936 -12485 0
2938 -2935 -12485 0
-2934 -2937 12485 0
-2936 -2939 12485 0
2935 2938 12485 0
c ((variant_fields_00003_00005_00004=max_left_00003_00005_00004)=tv=SATLiteral(12486))
-6594 -12486 0
-6596 -12486 0
-6598 -12486 0
-6600 -12486 0
-6602 -12486 0
-6604 -12486 0
-6606 2937 -12486 0
-6608 2939 -12486 0
6607 -2938 -12486 0
-2937 6606 -12486 0
-2939 6608 -12486 0
2938 -6607 -12486 0
-6606 -2937 12486 0
-6608 -2939 12486 0
6607 2938 12486 0
c ((max_left_00003_00005_00004=max_left_00003_00005_00005)=tv=SATLiteral(12487))
-2937 2940 -12487 0
-2939 2942 -12487 0
2938 -2941 -12487 0
-2940 2937 -12487 0
-2942 2939 -12487 0
2941 -2938 -12487 0
-2937 -2940 12487 0
-2939 -2942 12487 0
2938 2941 12487 0
c ((variant_fields_00003_00005_00005=max_left_00003_00005_00005)=tv=SATLiteral(12488))
-6609 -12488 0
-6611 -12488 0
-6613 -12488 0
-6615 -12488 0
-6617 -12488 0
-6619 -12488 0
-6621 2940 -12488 0
-6623 2942 -12488 0
6622 -2941 -12488 0
-2940 6621 -12488 0
-2942 6623 -12488 0
2941 -6622 -12488 0
-6621 -2940 12488 0
-6623 -2942 12488 0
6622 2941 12488 0
c ((max_left_00003_00005_00006=max_left_00003_00005_00007)=tv=SATLiteral(12489))
-2943 2946 -12489 0
-2945 2948 -12489 0
2944 -2947 -12489 0
-2946 2943 -12489 0
-2948 2945 -12489 0
2947 -2944 -12489 0
-2943 -2946 12489 0
-2945 -2948 12489 0
2944 2947 12489 0
c ((variant_fields_00003_00005_00007=max_left_00003_00005_00007)=tv=SATLiteral(12490))
-6625 -12490 0
-6627 -12490 0
-6629 -12490 0
-6631 -12490 0
-6633 -12490 0
-6635 -12490 0
-6637 2946 -12490 0
-6639 2948 -12490 0
6638 -2947 -12490 0
-2946 6637 -12490 0
-2948 6639 -12490 0
2947 -6638 -12490 0
-6637 -2946 12490 0
-6639 -2948 12490 0
6638 2947 12490 0
c ((max_left_00003_00005_00007=max_left_00003_00005_00008)=tv=SATLiteral(12491))
-2946 2949 -12491 0
-2948 2951 -12491 0
2947 -2950 -12491 0
-2949 2946 -12491 0
-2951 2948 -12491 0
2950 -2947 -12491 0
-2946 -2949 12491 0
-2948 -2951 12491 0
2947 2950 12491 0
c ((variant_fields_00003_00005_00008=max_left_00003_00005_00008)=tv=SATLiteral(12492))
-6640 -12492 0
-6642 -12492 0
-6644 -12492 0
-6646 -12492 0
-6648 -12492 0
-6650 -12492 0
-6652 2949 -12492 0
-6654 2951 -12492 0
6653 -2950 -12492 0
-2949 6652 -12492 0
-2951 6654 -12492 0
2950 -6653 -12492 0
-6652 -2949 12492 0
-6654 -2951 12492 0
6653 2950 12492 0
c ((max_left_00003_00005_00008=max_left_00003_00005_00009)=tv=SATLiteral(12493))
-2949 2952 -12493 0
-2951 2954 -12493 0
2950 -2953 -12493 0
-2952 2949 -12493 0
-2954 2951 -12493 0
2953 -2950 -12493 0
-2949 -2952 12493 0
-2951 -2954 12493 0
2950 2953 12493 0
c ((variant_fields_00003_00005_00009=max_left_00003_00005_00009)=tv=SATLiteral(12494))
-6655 -12494 0
-6657 -12494 0
-6659 -12494 0
-6661 -12494 0
-6663 -12494 0
-6665 -12494 0
-6667 2952 -12494 0
-6669 2954 -12494 0
6668 -2953 -12494 0
-2952 6667 -12494 0
-2954 6669 -12494 0
2953 -6668 -12494 0
-6667 -2952 12494 0
-6669 -2954 12494 0
6668 2953 12494 0
c ((variant_fields_00003_00006_00002=max_left_00003_00006_00002)=tv=SATLiteral(12495))
-6685 2971 -12495 0
-6687 2973 -12495 0
-6689 2975 -12495 0
-6691 2977 -12495 0
-6693 2979 -12495 0
-6695 2981 -12495 0
-6697 2983 -12495 0
-6699 2985 -12495 0
6698 -2984 -12495 0
-2971 6685 -12495 0
-2973 6687 -12495 0
-2975 6689 -12495 0
-2977 6691 -12495 0
-2979 6693 -12495 0
-2981 6695 -12495 0
-2983 6697 -12495 0
-2985 6699 -12495 0
2984 -6698 -12495 0
-6685 -2971 12495 0
-6687 -2973 12495 0
-6689 -2975 12495 0
-6691 -2977 12495 0
-6693 -2979 12495 0
-6695 -2981 12495 0
-6697 -2983 12495 0
-6699 -2985 12495 0
6698 2984 12495 0
c ((max_left_00003_00006_00001=max_left_00003_00006_00002)=tv=SATLiteral(12496))
-2956 2971 -12496 0
-2958 2973 -12496 0
-2960 2975 -12496 0
-2962 2977 -12496 0
-2964 2979 -12496 0
-2966 2981 -12496 0
-2968 2983 -12496 0
-2970 2985 -12496 0
2969 -2984 -12496 0
-2971 2956 -12496 0
-2973 2958 -12496 0
-2975 2960 -12496 0
-2977 2962 -12496 0
-2979 2964 -12496 0
-2981 2966 -12496 0
-2983 2968 -12496 0
-2985 2970 -12496 0
2984 -2969 -12496 0
-2956 -2971 12496 0
-2958 -2973 12496 0
-2960 -2975 12496 0
-2962 -2977 12496 0
-2964 -2979 12496 0
-2966 -2981 12496 0
-2968 -2983 12496 0
-2970 -2985 12496 0
2969 2984 12496 0
c ((variant_fields_00003_00006_00003=max_left_00003_00006_00003)=tv=SATLiteral(12497))
-6700 2986 -12497 0
-6702 2988 -12497 0
-6704 2990 -12497 0
-6706 2992 -12497 0
-6708 2994 -12497 0
-6710 2996 -12497 0
-6712 2998 -12497 0
-6714 3000 -12497 0
6713 -2999 -12497 0
-2986 6700 -12497 0
-2988 6702 -12497 0
-2990 6704 -12497 0
-2992 6706 -12497 0
-2994 6708 -12497 0
-2996 6710 -12497 0
-2998 6712 -12497 0
-3000 6714 -12497 0
2999 -6713 -12497 0
-6700 -2986 12497 0
-6702 -2988 12497 0
-6704 -2990 12497 0
-6706 -2992 12497 0
-6708 -2994 12497 0
-6710 -2996 12497 0
-6712 -2998 12497 0
-6714 -3000 12497 0
6713 2999 12497 0
c ((max_left_00003_00006_00002=max_left_00003_00006_00003)=tv=SATLiteral(12498))
-2971 2986 -12498 0
-2973 2988 -12498 0
-2975 2990 -12498 0
-2977 2992 -12498 0
-2979 2994 -12498 0
-2981 2996 -12498 0
-2983 2998 -12498 0
-2985 3000 -12498 0
2984 -2999 -12498 0
-2986 2971 -12498 0
-2988 2973 -12498 0
-2990 2975 -12498 0
-2992 2977 -12498 0
-2994 2979 -12498 0
-2996 2981 -12498 0
-2998 2983 -12498 0
-3000 2985 -12498 0
2999 -2984 -12498 0
-2971 -2986 12498 0
-2973 -2988 12498 0
-2975 -2990 12498 0
-2977 -2992 12498 0
-2979 -2994 12498 0
-2981 -2996 12498 0
-2983 -2998 12498 0
-2985 -3000 12498 0
2984 2999 12498 0
c ((variant_fields_00003_00006_00004=max_left_00003_00006_00004)=tv=SATLiteral(12499))
-6715 3001 -12499 0
-3001 6715 -12499 0
-3003 -12499 0
3002 -12499 0
-6715 -3001 12499 0
c ((max_left_00003_00006_00003=max_left_00003_00006_00004)=tv=SATLiteral(12500))
-2986 -12500 0
-2988 -12500 0
-2990 -12500 0
-2992 -12500 0
-2994 -12500 0
-2996 -12500 0
-2998 3001 -12500 0
-3000 3003 -12500 0
2999 -3002 -12500 0
-3001 2998 -12500 0
-3003 3000 -12500 0
3002 -2999 -12500 0
-2998 -3001 12500 0
-3000 -3003 12500 0
2999 3002 12500 0
c ((variant_fields_00003_00006_00005=max_left_00003_00006_00005)=tv=SATLiteral(12501))
-6716 -12501 0
-6718 -12501 0
-6720 -12501 0
-6722 -12501 0
-6724 -12501 0
-6726 -12501 0
-6728 3004 -12501 0
-6730 3006 -12501 0
6729 -3005 -12501 0
-3004 6728 -12501 0
-3006 6730 -12501 0
3005 -6729 -12501 0
-6728 -3004 12501 0
-6730 -3006 12501 0
6729 3005 12501 0
c ((max_left_00003_00006_00004=max_left_00003_00006_00005)=tv=SATLiteral(12502))
-3001 3004 -12502 0
-3003 3006 -12502 0
3002 -3005 -12502 0
-3004 3001 -12502 0
-3006 3003 -12502 0
3005 -3002 -12502 0
-3001 -3004 12502 0
-3003 -3006 12502 0
3002 3005 12502 0
c ((variant_fields_00003_00006_00006=max_left_00003_00006_00006)=tv=SATLiteral(12503))
-6731 -12503 0
-6733 -12503 0
-6735 -12503 0
-6737 -12503 0
-6739 -12503 0
-6741 -12503 0
-6743 3007 -12503 0
-6745 3009 -12503 0
6744 -3008 -12503 0
-3007 6743 -12503 0
-3009 6745 -12503 0
3008 -6744 -12503 0
-6743 -3007 12503 0
-6745 -3009 12503 0
6744 3008 12503 0
c ((max_left_00003_00006_00005=max_left_00003_00006_00006)=tv=SATLiteral(12504))
-3004 3007 -12504 0
-3006 3009 -12504 0
3005 -3008 -12504 0
-3007 3004 -12504 0
-3009 3006 -12504 0
3008 -3005 -12504 0
-3004 -3007 12504 0
-3006 -3009 12504 0
3005 3008 12504 0
c ((variant_fields_00003_00006_00007=max_left_00003_00006_00007)=tv=SATLiteral(12505))
-6746 -12505 0
-6748 -12505 0
-6750 -12505 0
-6752 -12505 0
-6754 -12505 0
-6756 -12505 0
-6758 3010 -12505 0
-6760 3012 -12505 0
6759 -3011 -12505 0
-3010 6758 -12505 0
-3012 6760 -12505 0
3011 -6759 -12505 0
-6758 -3010 12505 0
-6760 -3012 12505 0
6759 3011 12505 0
c ((max_left_00003_00006_00006=max_left_00003_00006_00007)=tv=SATLiteral(12506))
-3007 3010 -12506 0
-3009 3012 -12506 0
3008 -3011 -12506 0
-3010 3007 -12506 0
-3012 3009 -12506 0
3011 -3008 -12506 0
-3007 -3010 12506 0
-3009 -3012 12506 0
3008 3011 12506 0
c ((variant_fields_00003_00006_00008=max_left_00003_00006_00008)=tv=SATLiteral(12507))
-6761 -3013 -12507 0
3013 6761 -12507 0
-3013 -12507 0
-6761 3013 12507 0
c ((max_left_00003_00006_00007=max_left_00003_00006_00008)=tv=SATLiteral(12508))
-3010 -12508 0
-3012 -3013 -12508 0
3011 3013 -12508 0
3013 3012 -12508 0
-3013 -3011 -12508 0
-3012 3013 12508 0
3011 -3013 12508 0
c ((variant_fields_00003_00006_00009=max_left_00003_00006_00009)=tv=SATLiteral(12509))
-6762 -12509 0
-6764 -12509 0
-6766 -12509 0
-6768 -12509 0
-6770 -12509 0
-6772 -12509 0
-6774 -12509 0
-6776 -3014 -12509 0
6775 3014 -12509 0
3014 6776 -12509 0
-3014 -6775 -12509 0
-6776 3014 12509 0
6775 -3014 12509 0
c ((max_left_00003_00006_00008=max_left_00003_00006_00009)=tv=SATLiteral(12510))
3013 -3014 -12510 0
-3013 3014 -12510 0
3014 -3013 -12510 0
-3014 3013 -12510 0
3013 3014 12510 0
-3013 -3014 12510 0
c ((max_left_00003_00007_00001=max_left_00003_00007_00002)=tv=SATLiteral(12511))
-3016 3017 -12511 0
-3017 3016 -12511 0
-3019 -12511 0
3018 -12511 0
-3016 -3017 12511 0
c ((variant_fields_00003_00007_00002=max_left_00003_00007_00002)=tv=SATLiteral(12512))
-6778 -12512 0
-6780 -12512 0
-6782 -12512 0
-6784 -12512 0
-6786 -12512 0
-6788 -12512 0
-6790 3017 -12512 0
-6792 3019 -12512 0
6791 -3018 -12512 0
-3017 6790 -12512 0
-3019 6792 -12512 0
3018 -6791 -12512 0
-6790 -3017 12512 0
-6792 -3019 12512 0
6791 3018 12512 0
c ((max_left_00003_00007_00003=max_left_00003_00007_00004)=tv=SATLiteral(12513))
-3020 3023 -12513 0
-3022 3025 -12513 0
3021 -3024 -12513 0
-3023 3020 -12513 0
-3025 3022 -12513 0
3024 -3021 -12513 0
-3020 -3023 12513 0
-3022 -3025 12513 0
3021 3024 12513 0
c ((variant_fields_00003_00007_00004=max_left_00003_00007_00004)=tv=SATLiteral(12514))
-6794 -12514 0
-6796 -12514 0
-6798 -12514 0
-6800 -12514 0
-6802 -12514 0
-6804 -12514 0
-6806 3023 -12514 0
-6808 3025 -12514 0
6807 -3024 -12514 0
-3023 6806 -12514 0
-3025 6808 -12514 0
3024 -6807 -12514 0
-6806 -3023 12514 0
-6808 -3025 12514 0
6807 3024 12514 0
c ((max_left_00003_00007_00004=max_left_00003_00007_00005)=tv=SATLiteral(12515))
-3023 3026 -12515 0
-3025 3028 -12515 0
3024 -3027 -12515 0
-3026 3023 -12515 0
-3028 3025 -12515 0
3027 -3024 -12515 0
-3023 -3026 12515 0
-3025 -3028 12515 0
3024 3027 12515 0
c ((variant_fields_00003_00007_00005=max_left_00003_00007_00005)=tv=SATLiteral(12516))
-6809 -12516 0
-6811 -12516 0
-6813 -12516 0
-6815 -12516 0
-6817 -12516 0
-6819 -12516 0
-6821 3026 -12516 0
-6823 3028 -12516 0
6822 -3027 -12516 0
-3026 6821 -12516 0
-3028 6823 -12516 0
3027 -6822 -12516 0
-6821 -3026 12516 0
-6823 -3028 12516 0
6822 3027 12516 0
c ((max_left_00003_00007_00006=max_left_00003_00007_00007)=tv=SATLiteral(12517))
-3029 3032 -12517 0
-3031 3034 -12517 0
3030 -3033 -12517 0
-3032 3029 -12517 0
-3034 3031 -12517 0
3033 -3030 -12517 0
-3029 -3032 12517 0
-3031 -3034 12517 0
3030 3033 12517 0
c ((variant_fields_00003_00007_00007=max_left_00003_00007_00007)=tv=SATLiteral(12518))
-6825 -12518 0
-6827 -12518 0
-6829 -12518 0
-6831 -12518 0
-6833 -12518 0
-6835 -12518 0
-6837 3032 -12518 0
-6839 3034 -12518 0
6838 -3033 -12518 0
-3032 6837 -12518 0
-3034 6839 -12518 0
3033 -6838 -12518 0
-6837 -3032 12518 0
-6839 -3034 12518 0
6838 3033 12518 0
c ((max_left_00003_00007_00007=max_left_00003_00007_00008)=tv=SATLiteral(12519))
-3032 3035 -12519 0
-3034 3037 -12519 0
3033 -3036 -12519 0
-3035 3032 -12519 0
-3037 3034 -12519 0
3036 -3033 -12519 0
-3032 -3035 12519 0
-3034 -3037 12519 0
3033 3036 12519 0
c ((variant_fields_00003_00007_00008=max_left_00003_00007_00008)=tv=SATLiteral(12520))
-6840 -12520 0
-6842 -12520 0
-6844 -12520 0
-6846 -12520 0
-6848 -12520 0
-6850 -12520 0
-6852 3035 -12520 0
-6854 3037 -12520 0
6853 -3036 -12520 0
-3035 6852 -12520 0
-3037 6854 -12520 0
3036 -6853 -12520 0
-6852 -3035 12520 0
-6854 -3037 12520 0
6853 3036 12520 0
c ((max_left_00003_00007_00008=max_left_00003_00007_00009)=tv=SATLiteral(12521))
-3035 3038 -12521 0
-3037 3040 -12521 0
3036 -3039 -12521 0
-3038 3035 -12521 0
-3040 3037 -12521 0
3039 -3036 -12521 0
-3035 -3038 12521 0
-3037 -3040 12521 0
3036 3039 12521 0
c ((variant_fields_00003_00007_00009=max_left_00003_00007_00009)=tv=SATLiteral(12522))
-6855 -12522 0
-6857 -12522 0
-6859 -12522 0
-6861 -12522 0
-6863 -12522 0
-6865 -12522 0
-6867 3038 -12522 0
-6869 3040 -12522 0
6868 -3039 -12522 0
-3038 6867 -12522 0
-3040 6869 -12522 0
3039 -6868 -12522 0
-6867 -3038 12522 0
-6869 -3040 12522 0
6868 3039 12522 0
c ((max_left_00003_00008_00001=max_left_00003_00008_00002)=tv=SATLiteral(12523))
-3042 3057 -12523 0
-3044 3059 -12523 0
-3046 3061 -12523 0
-3048 3063 -12523 0
-3050 3065 -12523 0
-3052 3067 -12523 0
-3054 3069 -12523 0
-3056 3071 -12523 0
3055 -3070 -12523 0
-3057 3042 -12523 0
-3059 3044 -12523 0
-3061 3046 -12523 0
-3063 3048 -12523 0
-3065 3050 -12523 0
-3067 3052 -12523 0
-3069 3054 -12523 0
-3071 3056 -12523 0
3070 -3055 -12523 0
-3042 -3057 12523 0
-3044 -3059 12523 0
-3046 -3061 12523 0
-3048 -3063 12523 0
-3050 -3065 12523 0
-3052 -3067 12523 0
-3054 -3069 12523 0
-3056 -3071 12523 0
3055 3070 12523 0
c ((variant_fields_00003_00008_00002=max_left_00003_00008_00002)=tv=SATLiteral(12524))
-6885 3057 -12524 0
-6887 3059 -12524 0
-6889 3061 -12524 0
-6891 3063 -12524 0
-6893 3065 -12524 0
-6895 3067 -12524 0
-6897 3069 -12524 0
-6899 3071 -12524 0
6898 -3070 -12524 0
-3057 6885 -12524 0
-3059 6887 -12524 0
-3061 6889 -12524 0
-3063 6891 -12524 0
-3065 6893 -12524 0
-3067 6895 -12524 0
-3069 6897 -12524 0
-3071 6899 -12524 0
3070 -6898 -12524 0
-6885 -3057 12524 0
-6887 -3059 12524 0
-6889 -3061 12524 0
-6891 -3063 12524 0
-6893 -3065 12524 0
-6895 -3067 12524 0
-6897 -3069 12524 0
-6899 -3071 12524 0
6898 3070 12524 0
c ((max_left_00003_00008_00002=max_left_00003_00008_00003)=tv=SATLiteral(12525))
-3057 3072 -12525 0
-3059 3074 -12525 0
-3061 3076 -12525 0
-3063 3078 -12525 0
-3065 3080 -12525 0
-3067 3082 -12525 0
-3069 3084 -12525 0
-3071 3086 -12525 0
3070 -3085 -12525 0
-3072 3057 -12525 0
-3074 3059 -12525 0
-3076 3061 -12525 0
-3078 3063 -12525 0
-3080 3065 -12525 0
-3082 3067 -12525 0
-3084 3069 -12525 0
-3086 3071 -12525 0
3085 -3070 -12525 0
-3057 -3072 12525 0
-3059 -3074 12525 0
-3061 -3076 12525 0
-3063 -3078 12525 0
-3065 -3080 12525 0
-3067 -3082 12525 0
-3069 -3084 12525 0
-3071 -3086 12525 0
3070 3085 12525 0
c ((variant_fields_00003_00008_00003=max_left_00003_00008_00003)=tv=SATLiteral(12526))
-6900 3072 -12526 0
-6902 3074 -12526 0
-6904 3076 -12526 0
-6906 3078 -12526 0
-6908 3080 -12526 0
-6910 3082 -12526 0
-6912 3084 -12526 0
-6914 3086 -12526 0
6913 -3085 -12526 0
-3072 6900 -12526 0
-3074 6902 -12526 0
-3076 6904 -12526 0
-3078 6906 -12526 0
-3080 6908 -12526 0
-3082 6910 -12526 0
-3084 6912 -12526 0
-3086 6914 -12526 0
3085 -6913 -12526 0
-6900 -3072 12526 0
-6902 -3074 12526 0
-6904 -3076 12526 0
-6906 -3078 12526 0
-6908 -3080 12526 0
-6910 -3082 12526 0
-6912 -3084 12526 0
-6914 -3086 12526 0
6913 3085 12526 0
c ((max_left_00003_00008_00003=max_left_00003_00008_00004)=tv=SATLiteral(12527))
-3072 3087 -12527 0
-3074 3089 -12527 0
-3076 3091 -12527 0
-3078 3093 -12527 0
-3080 3095 -12527 0
-3082 3097 -12527 0
-3084 3099 -12527 0
-3086 3101 -12527 0
3085 -3100 -12527 0
-3087 3072 -12527 0
-3089 3074 -12527 0
-3091 3076 -12527 0
-3093 3078 -12527 0
-3095 3080 -12527 0
-3097 3082 -12527 0
-3099 3084 -12527 0
-3101 3086 -12527 0
3100 -3085 -12527 0
-3072 -3087 12527 0
-3074 -3089 12527 0
-3076 -3091 12527 0
-3078 -3093 12527 0
-3080 -3095 12527 0
-3082 -3097 12527 0
-3084 -3099 12527 0
-3086 -3101 12527 0
3085 3100 12527 0
c ((variant_fields_00003_00008_00004=max_left_00003_00008_00004)=tv=SATLiteral(12528))
-6915 3087 -12528 0
-6917 3089 -12528 0
-6919 3091 -12528 0
-6921 3093 -12528 0
-6923 3095 -12528 0
-6925 3097 -12528 0
-6927 3099 -12528 0
-6929 3101 -12528 0
6928 -3100 -12528 0
-3087 6915 -12528 0
-3089 6917 -12528 0
-3091 6919 -12528 0
-3093 6921 -12528 0
-3095 6923 -12528 0
-3097 6925 -12528 0
-3099 6927 -12528 0
-3101 6929 -12528 0
3100 -6928 -12528 0
-6915 -3087 12528 0
-6917 -3089 12528 0
-6919 -3091 12528 0
-6921 -3093 12528 0
-6923 -3095 12528 0
-6925 -3097 12528 0
-6927 -3099 12528 0
-6929 -3101 12528 0
6928 3100 12528 0
c ((max_left_00003_00008_00004=max_left_00003_00008_00005)=tv=SATLiteral(12529))
-3087 -12529 0
-3089 -12529 0
-3091 -12529 0
-3093 -12529 0
-3095 -12529 0
-3097 -12529 0
-3099 3102 -12529 0
-3101 3104 -12529 0
3100 -3103 -12529 0
-3102 3099 -12529 0
-3104 3101 -12529 0
3103 -3100 -12529 0
-3099 -3102 12529 0
-3101 -3104 12529 0
3100 3103 12529 0
c ((variant_fields_00003_00008_00005=max_left_00003_00008_00005)=tv=SATLiteral(12530))
-6930 3102 -12530 0
-3102 6930 -12530 0
-3104 -12530 0
3103 -12530 0
-6930 -3102 12530 0
c ((max_left_00003_00008_00005=max_left_00003_00008_00006)=tv=SATLiteral(12531))
-3102 3105 -12531 0
-3104 3107 -12531 0
3103 -3106 -12531 0
-3105 3102 -12531 0
-3107 3104 -12531 0
3106 -3103 -12531 0
-3102 -3105 12531 0
-3104 -3107 12531 0
3103 3106 12531 0
c ((variant_fields_00003_00008_00006=max_left_00003_00008_00006)=tv=SATLiteral(12532))
-6931 -12532 0
-6933 -12532 0
-6935 -12532 0
-6937 -12532 0
-6939 -12532 0
-6941 -12532 0
-6943 3105 -12532 0
-6945 3107 -12532 0
6944 -3106 -12532 0
-3105 6943 -12532 0
-3107 6945 -12532 0
3106 -6944 -12532 0
-6943 -3105 12532 0
-6945 -3107 12532 0
6944 3106 12532 0
c ((max_left_00003_00008_00006=max_left_00003_00008_00007)=tv=SATLiteral(12533))
-3105 -12533 0
-3107 -3108 -12533 0
3106 3108 -12533 0
3108 3107 -12533 0
-3108 -3106 -12533 0
-3107 3108 12533 0
3106 -3108 12533 0
c ((variant_fields_00003_00008_00007=max_left_00003_00008_00007)=tv=SATLiteral(12534))
-6946 -3108 -12534 0
3108 6946 -12534 0
-3108 -12534 0
-6946 3108 12534 0
c ((max_left_00003_00008_00007=max_left_00003_00008_00008)=tv=SATLiteral(12535))
3108 -3109 -12535 0
-3108 3109 -12535 0
3109 -3108 -12535 0
-3109 3108 -12535 0
3108 3109 12535 0
-3108 -3109 12535 0
c ((variant_fields_00003_00008_00008=max_left_00003_00008_00008)=tv=SATLiteral(12536))
-6947 -12536 0
-6949 -12536 0
-6951 -12536 0
-6953 -12536 0
-6955 -12536 0
-6957 -12536 0
-6959 -12536 0
-6961 -3109 -12536 0
6960 3109 -12536 0
3109 6961 -12536 0
-3109 -6960 -12536 0
-6961 3109 12536 0
6960 -3109 12536 0
c ((max_left_00003_00008_00008=max_left_00003_00008_00009)=tv=SATLiteral(12537))
3109 -3110 -12537 0
-3109 3110 -12537 0
3110 -3109 -12537 0
-3110 3109 -12537 0
3109 3110 12537 0
-3109 -3110 12537 0
c ((variant_fields_00003_00008_00009=max_left_00003_00008_00009)=tv=SATLiteral(12538))
-6962 -12538 0
-6964 -12538 0
-6966 -12538 0
-6968 -12538 0
-6970 -12538 0
-6972 -12538 0
-6974 -12538 0
-6976 -3110 -12538 0
6975 3110 -12538 0
3110 6976 -12538 0
-3110 -6975 -12538 0
-6976 3110 12538 0
6975 -3110 12538 0
c ((max_left_00003_00009_00001=max_left_00003_00009_00002)=tv=SATLiteral(12539))
-3112 3127 -12539 0
-3114 3129 -12539 0
-3116 3131 -12539 0
-3118 3133 -12539 0
-3120 3135 -12539 0
-3122 3137 -12539 0
-3124 3139 -12539 0
-3126 3141 -12539 0
3125 -3140 -12539 0
-3127 3112 -12539 0
-3129 3114 -12539 0
-3131 3116 -12539 0
-3133 3118 -12539 0
-3135 3120 -12539 0
-3137 3122 -12539 0
-3139 3124 -12539 0
-3141 3126 -12539 0
3140 -3125 -12539 0
-3112 -3127 12539 0
-3114 -3129 12539 0
-3116 -3131 12539 0
-3118 -3133 12539 0
-3120 -3135 12539 0
-3122 -3137 12539 0
-3124 -3139 12539 0
-3126 -3141 12539 0
3125 3140 12539 0
c ((variant_fields_00003_00009_00002=max_left_00003_00009_00002)=tv=SATLiteral(12540))
-6992 3127 -12540 0
-6994 3129 -12540 0
-6996 3131 -12540 0
-6998 3133 -12540 0
-7000 3135 -12540 0
-7002 3137 -12540 0
-7004 3139 -12540 0
-7006 3141 -12540 0
7005 -3140 -12540 0
-3127 6992 -12540 0
-3129 6994 -12540 0
-3131 6996 -12540 0
-3133 6998 -12540 0
-3135 7000 -12540 0
-3137 7002 -12540 0
-3139 7004 -12540 0
-3141 7006 -12540 0
3140 -7005 -12540 0
-6992 -3127 12540 0
-6994 -3129 12540 0
-6996 -3131 12540 0
-6998 -3133 12540 0
-7000 -3135 12540 0
-7002 -3137 12540 0
-7004 -3139 12540 0
-7006 -3141 12540 0
7005 3140 12540 0
c ((max_left_00003_00009_00002=max_left_00003_00009_00003)=tv=SATLiteral(12541))
-3127 -12541 0
-3129 -12541 0
-3131 -12541 0
-3133 -12541 0
-3135 -12541 0
-3137 -12541 0
-3139 -12541 0
-3141 -3142 -12541 0
3140 3142 -12541 0
3142 3141 -12541 0
-3142 -3140 -12541 0
-3141 3142 12541 0
3140 -3142 12541 0
c ((variant_fields_00003_00009_00003=max_left_00003_00009_00003)=tv=SATLiteral(12542))
-7007 -3142 -12542 0
3142 7007 -12542 0
-3142 -12542 0
-7007 3142 12542 0
c ((max_left_00003_00009_00003=max_left_00003_00009_00004)=tv=SATLiteral(12543))
3142 -3143 -12543 0
-3142 3143 -12543 0
3143 -3142 -12543 0
-3143 3142 -12543 0
3142 3143 12543 0
-3142 -3143 12543 0
c ((variant_fields_00003_00009_00004=max_left_00003_00009_00004)=tv=SATLiteral(12544))
-7008 -12544 0
-7010 -12544 0
-7012 -12544 0
-7014 -12544 0
-7016 -12544 0
-7018 -12544 0
-7020 -12544 0
-7022 -3143 -12544 0
7021 3143 -12544 0
3143 7022 -12544 0
-3143 -7021 -12544 0
-7022 3143 12544 0
7021 -3143 12544 0
c ((max_left_00003_00009_00005=max_left_00003_00009_00006)=tv=SATLiteral(12545))
3144 -3145 -12545 0
-3144 3145 -12545 0
3145 -3144 -12545 0
-3145 3144 -12545 0
3144 3145 12545 0
-3144 -3145 12545 0
c ((variant_fields_00003_00009_00006=max_left_00003_00009_00006)=tv=SATLiteral(12546))
-7024 -12546 0
-7026 -12546 0
-7028 -12546 0
-7030 -12546 0
-7032 -12546 0
-7034 -12546 0
-7036 -12546 0
-7038 -3145 -12546 0
7037 3145 -12546 0
3145 7038 -12546 0
-3145 -7037 -12546 0
-7038 3145 12546 0
7037 -3145 12546 0
c ((max_left_00003_00009_00006=max_left_00003_00009_00007)=tv=SATLiteral(12547))
3145 -3146 -12547 0
-3145 3146 -12547 0
3146 -3145 -12547 0
-3146 3145 -12547 0
3145 3146 12547 0
-3145 -3146 12547 0
c ((variant_fields_00003_00009_00007=max_left_00003_00009_00007)=tv=SATLiteral(12548))
-7039 -12548 0
-7041 -12548 0
-7043 -12548 0
-7045 -12548 0
-7047 -12548 0
-7049 -12548 0
-7051 -12548 0
-7053 -3146 -12548 0
7052 3146 -12548 0
3146 7053 -12548 0
-3146 -7052 -12548 0
-7053 3146 12548 0
7052 -3146 12548 0
c ((max_left_00003_00009_00007=max_left_00003_00009_00008)=tv=SATLiteral(12549))
3146 -3147 -12549 0
-3146 3147 -12549 0
3147 -3146 -12549 0
-3147 3146 -12549 0
3146 3147 12549 0
-3146 -3147 12549 0
c ((variant_fields_00003_00009_00008=max_left_00003_00009_00008)=tv=SATLiteral(12550))
-7054 -12550 0
-7056 -12550 0
-7058 -12550 0
-7060 -12550 0
-7062 -12550 0
-7064 -12550 0
-7066 -12550 0
-7068 -3147 -12550 0
7067 3147 -12550 0
3147 7068 -12550 0
-3147 -7067 -12550 0
-7068 3147 12550 0
7067 -3147 12550 0
c ((max_left_00003_00009_00008=max_left_00003_00009_00009)=tv=SATLiteral(12551))
3147 -3148 -12551 0
-3147 3148 -12551 0
3148 -3147 -12551 0
-3148 3147 -12551 0
3147 3148 12551 0
-3147 -3148 12551 0
c ((variant_fields_00003_00009_00009=max_left_00003_00009_00009)=tv=SATLiteral(12552))
-7069 -12552 0
-7071 -12552 0
-7073 -12552 0
-7075 -12552 0
-7077 -12552 0
-7079 -12552 0
-7081 -12552 0
-7083 -3148 -12552 0
7082 3148 -12552 0
3148 7083 -12552 0
-3148 -7082 -12552 0
-7083 3148 12552 0
7082 -3148 12552 0
c ((max_left_00004_00001_00001=max_left_00004_00001_00002)=tv=SATLiteral(12553))
-3150 3165 -12553 0
-3152 3167 -12553 0
-3154 3169 -12553 0
-3156 3171 -12553 0
-3158 3173 -12553 0
-3160 3175 -12553 0
-3162 3177 -12553 0
-3164 3179 -12553 0
3163 -3178 -12553 0
-3165 3150 -12553 0
-3167 3152 -12553 0
-3169 3154 -12553 0
-3171 3156 -12553 0
-3173 3158 -12553 0
-3175 3160 -12553 0
-3177 3162 -12553 0
-3179 3164 -12553 0
3178 -3163 -12553 0
-3150 -3165 12553 0
-3152 -3167 12553 0
-3154 -3169 12553 0
-3156 -3171 12553 0
-3158 -3173 12553 0
-3160 -3175 12553 0
-3162 -3177 12553 0
-3164 -3179 12553 0
3163 3178 12553 0
c ((variant_fields_00004_00001_00002=max_left_00004_00001_00002)=tv=SATLiteral(12554))
-7099 3165 -12554 0
-7101 3167 -12554 0
-7103 3169 -12554 0
-7105 3171 -12554 0
-7107 3173 -12554 0
-7109 3175 -12554 0
-7111 3177 -12554 0
-7113 3179 -12554 0
7112 -3178 -12554 0
-3165 7099 -12554 0
-3167 7101 -12554 0
-3169 7103 -12554 0
-3171 7105 -12554 0
-3173 7107 -12554 0
-3175 7109 -12554 0
-3177 7111 -12554 0
-3179 7113 -12554 0
3178 -7112 -12554 0
-7099 -3165 12554 0
-7101 -3167 12554 0
-7103 -3169 12554 0
-7105 -3171 12554 0
-7107 -3173 12554 0
-7109 -3175 12554 0
-7111 -3177 12554 0
-7113 -3179 12554 0
7112 3178 12554 0
c ((max_left_00004_00001_00002=max_left_00004_00001_00003)=tv=SATLiteral(12555))
-3165 3180 -12555 0
-3167 3182 -12555 0
-3169 3184 -12555 0
-3171 3186 -12555 0
-3173 3188 -12555 0
-3175 3190 -12555 0
-3177 3192 -12555 0
-3179 3194 -12555 0
3178 -3193 -12555 0
-3180 3165 -12555 0
-3182 3167 -12555 0
-3184 3169 -12555 0
-3186 3171 -12555 0
-3188 3173 -12555 0
-3190 3175 -12555 0
-3192 3177 -12555 0
-3194 3179 -12555 0
3193 -3178 -12555 0
-3165 -3180 12555 0
-3167 -3182 12555 0
-3169 -3184 12555 0
-3171 -3186 12555 0
-3173 -3188 12555 0
-3175 -3190 12555 0
-3177 -3192 12555 0
-3179 -3194 12555 0
3178 3193 12555 0
c ((variant_fields_00004_00001_00003=max_left_00004_00001_00003)=tv=SATLiteral(12556))
-7114 3180 -12556 0
-7116 3182 -12556 0
-7118 3184 -12556 0
-7120 3186 -12556 0
-7122 3188 -12556 0
-7124 3190 -12556 0
-7126 3192 -12556 0
-7128 3194 -12556 0
7127 -3193 -12556 0
-3180 7114 -12556 0
-3182 7116 -12556 0
-3184 7118 -12556 0
-3186 7120 -12556 0
-3188 7122 -12556 0
-3190 7124 -12556 0
-3192 7126 -12556 0
-3194 7128 -12556 0
3193 -7127 -12556 0
-7114 -3180 12556 0
-7116 -3182 12556 0
-7118 -3184 12556 0
-7120 -3186 12556 0
-7122 -3188 12556 0
-7124 -3190 12556 0
-7126 -3192 12556 0
-7128 -3194 12556 0
7127 3193 12556 0
c ((max_left_00004_00001_00003=max_left_00004_00001_00004)=tv=SATLiteral(12557))
-3180 3195 -12557 0
-3182 3197 -12557 0
-3184 3199 -12557 0
-3186 3201 -12557 0
-3188 3203 -12557 0
-3190 3205 -12557 0
-3192 3207 -12557 0
-3194 3209 -12557 0
3193 -3208 -12557 0
-3195 3180 -12557 0
-3197 3182 -12557 0
-3199 3184 -12557 0
-3201 3186 -12557 0
-3203 3188 -12557 0
-3205 3190 -12557 0
-3207 3192 -12557 0
-3209 3194 -12557 0
3208 -3193 -12557 0
-3180 -3195 12557 0
-3182 -3197 12557 0
-3184 -3199 12557 0
-3186 -3201 12557 0
-3188 -3203 12557 0
-3190 -3205 12557 0
-3192 -3207 12557 0
-3194 -3209 12557 0
3193 3208 12557 0
c ((variant_fields_00004_00001_00004=max_left_00004_00001_00004)=tv=SATLiteral(12558))
-7129 3195 -12558 0
-7131 3197 -12558 0
-7133 3199 -12558 0
-7135 3201 -12558 0
-7137 3203 -12558 0
-7139 3205 -12558 0
-7141 3207 -12558 0
-7143 3209 -12558 0
7142 -3208 -12558 0
-3195 7129 -12558 0
-3197 7131 -12558 0
-3199 7133 -12558 0
-3201 7135 -12558 0
-3203 7137 -12558 0
-3205 7139 -12558 0
-3207 7141 -12558 0
-3209 7143 -12558 0
3208 -7142 -12558 0
-7129 -3195 12558 0
-7131 -3197 12558 0
-7133 -3199 12558 0
-7135 -3201 12558 0
-7137 -3203 12558 0
-7139 -3205 12558 0
-7141 -3207 12558 0
-7143 -3209 12558 0
7142 3208 12558 0
c ((max_left_00004_00001_00004=max_left_00004_00001_00005)=tv=SATLiteral(12559))
-3195 3210 -12559 0
-3197 3212 -12559 0
-3199 3214 -12559 0
-3201 3216 -12559 0
-3203 3218 -12559 0
-3205 3220 -12559 0
-3207 3222 -12559 0
-3209 3224 -12559 0
3208 -3223 -12559 0
-3210 3195 -12559 0
-3212 3197 -12559 0
-3214 3199 -12559 0
-3216 3201 -12559 0
-3218 3203 -12559 0
-3220 3205 -12559 0
-3222 3207 -12559 0
-3224 3209 -12559 0
3223 -3208 -12559 0
-3195 -3210 12559 0
-3197 -3212 12559 0
-3199 -3214 12559 0
-3201 -3216 12559 0
-3203 -3218 12559 0
-3205 -3220 12559 0
-3207 -3222 12559 0
-3209 -3224 12559 0
3208 3223 12559 0
c ((variant_fields_00004_00001_00005=max_left_00004_00001_00005)=tv=SATLiteral(12560))
-7144 3210 -12560 0
-7146 3212 -12560 0
-7148 3214 -12560 0
-7150 3216 -12560 0
-7152 3218 -12560 0
-7154 3220 -12560 0
-7156 3222 -12560 0
-7158 3224 -12560 0
7157 -3223 -12560 0
-3210 7144 -12560 0
-3212 7146 -12560 0
-3214 7148 -12560 0
-3216 7150 -12560 0
-3218 7152 -12560 0
-3220 7154 -12560 0
-3222 7156 -12560 0
-3224 7158 -12560 0
3223 -7157 -12560 0
-7144 -3210 12560 0
-7146 -3212 12560 0
-7148 -3214 12560 0
-7150 -3216 12560 0
-7152 -3218 12560 0
-7154 -3220 12560 0
-7156 -3222 12560 0
-7158 -3224 12560 0
7157 3223 12560 0
c ((max_left_00004_00001_00005=max_left_00004_00001_00006)=tv=SATLiteral(12561))
-3210 3225 -12561 0
-3212 3227 -12561 0
-3214 3229 -12561 0
-3216 3231 -12561 0
-3218 3233 -12561 0
-3220 3235 -12561 0
-3222 3237 -12561 0
-3224 3239 -12561 0
3223 -3238 -12561 0
-3225 3210 -12561 0
-3227 3212 -12561 0
-3229 3214 -12561 0
-3231 3216 -12561 0
-3233 3218 -12561 0
-3235 3220 -12561 0
-3237 3222 -12561 0
-3239 3224 -12561 0
3238 -3223 -12561 0
-3210 -3225 12561 0
-3212 -3227 12561 0
-3214 -3229 12561 0
-3216 -3231 12561 0
-3218 -3233 12561 0
-3220 -3235 12561 0
-3222 -3237 12561 0
-3224 -3239 12561 0
3223 3238 12561 0
c ((variant_fields_00004_00001_00006=max_left_00004_00001_00006)=tv=SATLiteral(12562))
-7159 3225 -12562 0
-7161 3227 -12562 0
-7163 3229 -12562 0
-7165 3231 -12562 0
-7167 3233 -12562 0
-7169 3235 -12562 0
-7171 3237 -12562 0
-7173 3239 -12562 0
7172 -3238 -12562 0
-3225 7159 -12562 0
-3227 7161 -12562 0
-3229 7163 -12562 0
-3231 7165 -12562 0
-3233 7167 -12562 0
-3235 7169 -12562 0
-3237 7171 -12562 0
-3239 7173 -12562 0
3238 -7172 -12562 0
-7159 -3225 12562 0
-7161 -3227 12562 0
-7163 -3229 12562 0
-7165 -3231 12562 0
-7167 -3233 12562 0
-7169 -3235 12562 0
-7171 -3237 12562 0
-7173 -3239 12562 0
7172 3238 12562 0
c ((max_left_00004_00001_00006=max_left_00004_00001_00007)=tv=SATLiteral(12563))
-3225 3240 -12563 0
-3227 3242 -12563 0
-3229 3244 -12563 0
-3231 3246 -12563 0
-3233 3248 -12563 0
-3235 3250 -12563 0
-3237 3252 -12563 0
-3239 3254 -12563 0
3238 -3253 -12563 0
-3240 3225 -12563 0
-3242 3227 -12563 0
-3244 3229 -12563 0
-3246 3231 -12563 0
-3248 3233 -12563 0
-3250 3235 -12563 0
-3252 3237 -12563 0
-3254 3239 -12563 0
3253 -3238 -12563 0
-3225 -3240 12563 0
-3227 -3242 12563 0
-3229 -3244 12563 0
-3231 -3246 12563 0
-3233 -3248 12563 0
-3235 -3250 12563 0
-3237 -3252 12563 0
-3239 -3254 12563 0
3238 3253 12563 0
c ((variant_fields_00004_00001_00007=max_left_00004_00001_00007)=tv=SATLiteral(12564))
-7174 3240 -12564 0
-7176 3242 -12564 0
-7178 3244 -12564 0
-7180 3246 -12564 0
-7182 3248 -12564 0
-7184 3250 -12564 0
-7186 3252 -12564 0
-7188 3254 -12564 0
7187 -3253 -12564 0
-3240 7174 -12564 0
-3242 7176 -12564 0
-3244 7178 -12564 0
-3246 7180 -12564 0
-3248 7182 -12564 0
-3250 7184 -12564 0
-3252 7186 -12564 0
-3254 7188 -12564 0
3253 -7187 -12564 0
-7174 -3240 12564 0
-7176 -3242 12564 0
-7178 -3244 12564 0
-7180 -3246 12564 0
-7182 -3248 12564 0
-7184 -3250 12564 0
-7186 -3252 12564 0
-7188 -3254 12564 0
7187 3253 12564 0
c ((max_left_00004_00001_00007=max_left_00004_00001_00008)=tv=SATLiteral(12565))
-3240 3255 -12565 0
-3242 3257 -12565 0
-3244 3259 -12565 0
-3246 3261 -12565 0
-3248 3263 -12565 0
-3250 3265 -12565 0
-3252 3267 -12565 0
-3254 3269 -12565 0
3253 -3268 -12565 0
-3255 3240 -12565 0
-3257 3242 -12565 0
-3259 3244 -12565 0
-3261 3246 -12565 0
-3263 3248 -12565 0
-3265 3250 -12565 0
-3267 3252 -12565 0
-3269 3254 -12565 0
3268 -3253 -12565 0
-3240 -3255 12565 0
-3242 -3257 12565 0
-3244 -3259 12565 0
-3246 -3261 12565 0
-3248 -3263 12565 0
-3250 -3265 12565 0
-3252 -3267 12565 0
-3254 -3269 12565 0
3253 3268 12565 0
c ((variant_fields_00004_00001_00008=max_left_00004_00001_00008)=tv=SATLiteral(12566))
-7189 3255 -12566 0
-7191 3257 -12566 0
-7193 3259 -12566 0
-7195 3261 -12566 0
-7197 3263 -12566 0
-7199 3265 -12566 0
-7201 3267 -12566 0
-7203 3269 -12566 0
7202 -3268 -12566 0
-3255 7189 -12566 0
-3257 7191 -12566 0
-3259 7193 -12566 0
-3261 7195 -12566 0
-3263 7197 -12566 0
-3265 7199 -12566 0
-3267 7201 -12566 0
-3269 7203 -12566 0
3268 -7202 -12566 0
-7189 -3255 12566 0
-7191 -3257 12566 0
-7193 -3259 12566 0
-7195 -3261 12566 0
-7197 -3263 12566 0
-7199 -3265 12566 0
-7201 -3267 12566 0
-7203 -3269 12566 0
7202 3268 12566 0
c ((max_left_00004_00001_00008=max_left_00004_00001_00009)=tv=SATLiteral(12567))
-3255 3270 -12567 0
-3257 3272 -12567 0
-3259 3274 -12567 0
-3261 3276 -12567 0
-3263 3278 -12567 0
-3265 3280 -12567 0
-3267 3282 -12567 0
-3269 3284 -12567 0
3268 -3283 -12567 0
-3270 3255 -12567 0
-3272 3257 -12567 0
-3274 3259 -12567 0
-3276 3261 -12567 0
-3278 3263 -12567 0
-3280 3265 -12567 0
-3282 3267 -12567 0
-3284 3269 -12567 0
3283 -3268 -12567 0
-3255 -3270 12567 0
-3257 -3272 12567 0
-3259 -3274 12567 0
-3261 -3276 12567 0
-3263 -3278 12567 0
-3265 -3280 12567 0
-3267 -3282 12567 0
-3269 -3284 12567 0
3268 3283 12567 0
c ((variant_fields_00004_00001_00009=max_left_00004_00001_00009)=tv=SATLiteral(12568))
-7204 3270 -12568 0
-7206 3272 -12568 0
-7208 3274 -12568 0
-7210 3276 -12568 0
-7212 3278 -12568 0
-7214 3280 -12568 0
-7216 3282 -12568 0
-7218 3284 -12568 0
7217 -3283 -12568 0
-3270 7204 -12568 0
-3272 7206 -12568 0
-3274 7208 -12568 0
-3276 7210 -12568 0
-3278 7212 -12568 0
-3280 7214 -12568 0
-3282 7216 -12568 0
-3284 7218 -12568 0
3283 -7217 -12568 0
-7204 -3270 12568 0
-7206 -3272 12568 0
-7208 -3274 12568 0
-7210 -3276 12568 0
-7212 -3278 12568 0
-7214 -3280 12568 0
-7216 -3282 12568 0
-7218 -3284 12568 0
7217 3283 12568 0
c ((max_left_00004_00002_00001=max_left_00004_00002_00002)=tv=SATLiteral(12569))
-3286 3301 -12569 0
-3288 3303 -12569 0
-3290 3305 -12569 0
-3292 3307 -12569 0
-3294 3309 -12569 0
-3296 3311 -12569 0
-3298 3313 -12569 0
-3300 3315 -12569 0
3299 -3314 -12569 0
-3301 3286 -12569 0
-3303 3288 -12569 0
-3305 3290 -12569 0
-3307 3292 -12569 0
-3309 3294 -12569 0
-3311 3296 -12569 0
-3313 3298 -12569 0
-3315 3300 -12569 0
3314 -3299 -12569 0
-3286 -3301 12569 0
-3288 -3303 12569 0
-3290 -3305 12569 0
-3292 -3307 12569 0
-3294 -3309 12569 0
-3296 -3311 12569 0
-3298 -3313 12569 0
-3300 -3315 12569 0
3299 3314 12569 0
c ((variant_fields_00004_00002_00002=max_left_00004_00002_00002)=tv=SATLiteral(12570))
-7234 3301 -12570 0
-7236 3303 -12570 0
-7238 3305 -12570 0
-7240 3307 -12570 0
-7242 3309 -12570 0
-7244 3311 -12570 0
-7246 3313 -12570 0
-7248 3315 -12570 0
7247 -3314 -12570 0
-3301 7234 -12570 0
-3303 7236 -12570 0
-3305 7238 -12570 0
-3307 7240 -12570 0
-3309 7242 -12570 0
-3311 7244 -12570 0
-3313 7246 -12570 0
-3315 7248 -12570 0
3314 -7247 -12570 0
-7234 -3301 12570 0
-7236 -3303 12570 0
-7238 -3305 12570 0
-7240 -3307 12570 0
-7242 -3309 12570 0
-7244 -3311 12570 0
-7246 -3313 12570 0
-7248 -3315 12570 0
7247 3314 12570 0
c ((max_left_00004_00002_00002=max_left_00004_00002_00003)=tv=SATLiteral(12571))
-3301 3316 -12571 0
-3303 3318 -12571 0
-3305 3320 -12571 0
-3307 3322 -12571 0
-3309 3324 -12571 0
-3311 3326 -12571 0
-3313 3328 -12571 0
-3315 3330 -12571 0
3314 -3329 -12571 0
-3316 3301 -12571 0
-3318 3303 -12571 0
-3320 3305 -12571 0
-3322 3307 -12571 0
-3324 3309 -12571 0
-3326 3311 -12571 0
-3328 3313 -12571 0
-3330 3315 -12571 0
3329 -3314 -12571 0
-3301 -3316 12571 0
-3303 -3318 12571 0
-3305 -3320 12571 0
-3307 -3322 12571 0
-3309 -3324 12571 0
-3311 -3326 12571 0
-3313 -3328 12571 0
-3315 -3330 12571 0
3314 3329 12571 0
c ((variant_fields_00004_00002_00003=max_left_00004_00002_00003)=tv=SATLiteral(12572))
-7249 3316 -12572 0
-7251 3318 -12572 0
-7253 3320 -12572 0
-7255 3322 -12572 0
-7257 3324 -12572 0
-7259 3326 -12572 0
-7261 3328 -12572 0
-7263 3330 -12572 0
7262 -3329 -12572 0
-3316 7249 -12572 0
-3318 7251 -12572 0
-3320 7253 -12572 0
-3322 7255 -12572 0
-3324 7257 -12572 0
-3326 7259 -12572 0
-3328 7261 -12572 0
-3330 7263 -12572 0
3329 -7262 -12572 0
-7249 -3316 12572 0
-7251 -3318 12572 0
-7253 -3320 12572 0
-7255 -3322 12572 0
-7257 -3324 12572 0
-7259 -3326 12572 0
-7261 -3328 12572 0
-7263 -3330 12572 0
7262 3329 12572 0
c ((max_left_00004_00002_00003=max_left_00004_00002_00004)=tv=SATLiteral(12573))
-3316 -12573 0
-3318 -12573 0
-3320 -12573 0
-3322 -12573 0
-3324 -12573 0
-3326 -12573 0
-3328 -12573 0
-3330 -3331 -12573 0
3329 3331 -12573 0
3331 3330 -12573 0
-3331 -3329 -12573 0
-3330 3331 12573 0
3329 -3331 12573 0
c ((variant_fields_00004_00002_00004=max_left_00004_00002_00004)=tv=SATLiteral(12574))
-7264 -3331 -12574 0
3331 7264 -12574 0
-3331 -12574 0
-7264 3331 12574 0
c ((max_left_00004_00002_00004=max_left_00004_00002_00005)=tv=SATLiteral(12575))
3331 -3332 -12575 0
-3331 3332 -12575 0
3332 -3331 -12575 0
-3332 3331 -12575 0
3331 3332 12575 0
-3331 -3332 12575 0
c ((variant_fields_00004_00002_00005=max_left_00004_00002_00005)=tv=SATLiteral(12576))
-7265 -12576 0
-7267 -12576 0
-7269 -12576 0
-7271 -12576 0
-7273 -12576 0
-7275 -12576 0
-7277 -12576 0
-7279 -3332 -12576 0
7278 3332 -12576 0
3332 7279 -12576 0
-3332 -7278 -12576 0
-7279 3332 12576 0
7278 -3332 12576 0
c ((max_left_00004_00002_00005=max_left_00004_00002_00006)=tv=SATLiteral(12577))
3332 -3333 -12577 0
-3332 3333 -12577 0
3333 -3332 -12577 0
-3333 3332 -12577 0
3332 3333 12577 0
-3332 -3333 12577 0
c ((variant_fields_00004_00002_00006=max_left_00004_00002_00006)=tv=SATLiteral(12578))
-7280 -12578 0
-7282 -12578 0
-7284 -12578 0
-7286 -12578 0
-7288 -12578 0
-7290 -12578 0
-7292 -12578 0
-7294 -3333 -12578 0
7293 3333 -12578 0
3333 7294 -12578 0
-3333 -7293 -12578 0
-7294 3333 12578 0
7293 -3333 12578 0
c ((max_left_00004_00002_00006=max_left_00004_00002_00007)=tv=SATLiteral(12579))
3333 -3334 -12579 0
-3333 3334 -12579 0
3334 -3333 -12579 0
-3334 3333 -12579 0
3333 3334 12579 0
-3333 -3334 12579 0
c ((variant_fields_00004_00002_00007=max_left_00004_00002_00007)=tv=SATLiteral(12580))
-7295 -12580 0
-7297 -12580 0
-7299 -12580 0
-7301 -12580 0
-7303 -12580 0
-7305 -12580 0
-7307 -12580 0
-7309 -3334 -12580 0
7308 3334 -12580 0
3334 7309 -12580 0
-3334 -7308 -12580 0
-7309 3334 12580 0
7308 -3334 12580 0
c ((max_left_00004_00002_00007=max_left_00004_00002_00008)=tv=SATLiteral(12581))
3334 -3335 -12581 0
-3334 3335 -12581 0
3335 -3334 -12581 0
-3335 3334 -12581 0
3334 3335 12581 0
-3334 -3335 12581 0
c ((variant_fields_00004_00002_00008=max_left_00004_00002_00008)=tv=SATLiteral(12582))
-7310 -12582 0
-7312 -12582 0
-7314 -12582 0
-7316 -12582 0
-7318 -12582 0
-7320 -12582 0
-7322 -12582 0
-7324 -3335 -12582 0
7323 3335 -12582 0
3335 7324 -12582 0
-3335 -7323 -12582 0
-7324 3335 12582 0
7323 -3335 12582 0
c ((max_left_00004_00002_00008=max_left_00004_00002_00009)=tv=SATLiteral(12583))
3335 -3336 -12583 0
-3335 3336 -12583 0
3336 -3335 -12583 0
-3336 3335 -12583 0
3335 3336 12583 0
-3335 -3336 12583 0
c ((variant_fields_00004_00002_00009=max_left_00004_00002_00009)=tv=SATLiteral(12584))
-7325 -12584 0
-7327 -12584 0
-7329 -12584 0
-7331 -12584 0
-7333 -12584 0
-7335 -12584 0
-7337 -12584 0
-7339 -3336 -12584 0
7338 3336 -12584 0
3336 7339 -12584 0
-3336 -7338 -12584 0
-7339 3336 12584 0
7338 -3336 12584 0
c ((max_left_00004_00003_00001=max_left_00004_00003_00002)=tv=SATLiteral(12585))
-3338 -12585 0
-3340 -12585 0
-3342 -12585 0
-3344 -12585 0
-3346 -12585 0
-3348 -12585 0
-3350 -12585 0
-3352 -3353 -12585 0
3351 3353 -12585 0
3353 3352 -12585 0
-3353 -3351 -12585 0
-3352 3353 12585 0
3351 -3353 12585 0
c ((variant_fields_00004_00003_00002=max_left_00004_00003_00002)=tv=SATLiteral(12586))
-7355 -3353 -12586 0
3353 7355 -12586 0
-3353 -12586 0
-7355 3353 12586 0
c ((max_left_00004_00003_00002=max_left_00004_00003_00003)=tv=SATLiteral(12587))
3353 -3354 -12587 0
-3353 3354 -12587 0
3354 -3353 -12587 0
-3354 3353 -12587 0
3353 3354 12587 0
-3353 -3354 12587 0
c ((variant_fields_00004_00003_00003=max_left_00004_00003_00003)=tv=SATLiteral(12588))
-7356 -12588 0
-7358 -12588 0
-7360 -12588 0
-7362 -12588 0
-7364 -12588 0
-7366 -12588 0
-7368 -12588 0
-7370 -3354 -12588 0
7369 3354 -12588 0
3354 7370 -12588 0
-3354 -7369 -12588 0
-7370 3354 12588 0
7369 -3354 12588 0
c ((max_left_00004_00003_00003=max_left_00004_00003_00004)=tv=SATLiteral(12589))
3354 -3355 -12589 0
-3354 3355 -12589 0
3355 -3354 -12589 0
-3355 3354 -12589 0
3354 3355 12589 0
-3354 -3355 12589 0
c ((variant_fields_00004_00003_00004=max_left_00004_00003_00004)=tv=SATLiteral(12590))
-7371 -12590 0
-7373 -12590 0
-7375 -12590 0
-7377 -12590 0
-7379 -12590 0
-7381 -12590 0
-7383 -12590 0
-7385 -3355 -12590 0
7384 3355 -12590 0
3355 7385 -12590 0
-3355 -7384 -12590 0
-7385 3355 12590 0
7384 -3355 12590 0
c ((max_left_00004_00003_00004=max_left_00004_00003_00005)=tv=SATLiteral(12591))
3355 -3356 -12591 0
-3355 3356 -12591 0
3356 -3355 -12591 0
-3356 3355 -12591 0
3355 3356 12591 0
-3355 -3356 12591 0
c ((variant_fields_00004_00003_00005=max_left_00004_00003_00005)=tv=SATLiteral(12592))
-7386 -12592 0
-7388 -12592 0
-7390 -12592 0
-7392 -12592 0
-7394 -12592 0
-7396 -12592 0
-7398 -12592 0
-7400 -3356 -12592 0
7399 3356 -12592 0
3356 7400 -12592 0
-3356 -7399 -12592 0
-7400 3356 12592 0
7399 -3356 12592 0
c ((max_left_00004_00003_00006=max_left_00004_00003_00007)=tv=SATLiteral(12593))
3357 -3358 -12593 0
-3357 3358 -12593 0
3358 -3357 -12593 0
-3358 3357 -12593 0
3357 3358 12593 0
-3357 -3358 12593 0
c ((variant_fields_00004_00003_00007=max_left_00004_00003_00007)=tv=SATLiteral(12594))
-7402 -12594 0
-7404 -12594 0
-7406 -12594 0
-7408 -12594 0
-7410 -12594 0
-7412 -12594 0
-7414 -12594 0
-7416 -3358 -12594 0
7415 3358 -12594 0
3358 7416 -12594 0
-3358 -7415 -12594 0
-7416 3358 12594 0
7415 -3358 12594 0
c ((max_left_00004_00003_00007=max_left_00004_00003_00008)=tv=SATLiteral(12595))
3358 -3359 -12595 0
-3358 3359 -12595 0
3359 -3358 -12595 0
-3359 3358 -12595 0
3358 3359 12595 0
-3358 -3359 12595 0
c ((variant_fields_00004_00003_00008=max_left_00004_00003_00008)=tv=SATLiteral(12596))
-7417 -12596 0
-7419 -12596 0
-7421 -12596 0
-7423 -12596 0
-7425 -12596 0
-7427 -12596 0
-7429 -12596 0
-7431 -3359 -12596 0
7430 3359 -12596 0
3359 7431 -12596 0
-3359 -7430 -12596 0
-7431 3359 12596 0
7430 -3359 12596 0
c ((max_left_00004_00003_00008=max_left_00004_00003_00009)=tv=SATLiteral(12597))
3359 -3360 -12597 0
-3359 3360 -12597 0
3360 -3359 -12597 0
-3360 3359 -12597 0
3359 3360 12597 0
-3359 -3360 12597 0
c ((variant_fields_00004_00003_00009=max_left_00004_00003_00009)=tv=SATLiteral(12598))
-7432 -12598 0
-7434 -12598 0
-7436 -12598 0
-7438 -12598 0
-7440 -12598 0
-7442 -12598 0
-7444 -12598 0
-7446 -3360 -12598 0
7445 3360 -12598 0
3360 7446 -12598 0
-3360 -7445 -12598 0
-7446 3360 12598 0
7445 -3360 12598 0
c ((max_left_00004_00004_00001=max_left_00004_00004_00002)=tv=SATLiteral(12599))
-3362 3377 -12599 0
-3364 3379 -12599 0
-3366 3381 -12599 0
-3368 3383 -12599 0
-3370 3385 -12599 0
-3372 3387 -12599 0
-3374 3389 -12599 0
-3376 3391 -12599 0
3375 -3390 -12599 0
-3377 3362 -12599 0
-3379 3364 -12599 0
-3381 3366 -12599 0
-3383 3368 -12599 0
-3385 3370 -12599 0
-3387 3372 -12599 0
-3389 3374 -12599 0
-3391 3376 -12599 0
3390 -3375 -12599 0
-3362 -3377 12599 0
-3364 -3379 12599 0
-3366 -3381 12599 0
-3368 -3383 12599 0
-3370 -3385 12599 0
-3372 -3387 12599 0
-3374 -3389 12599 0
-3376 -3391 12599 0
3375 3390 12599 0
c ((variant_fields_00004_00004_00002=max_left_00004_00004_00002)=tv=SATLiteral(12600))
-7462 3377 -12600 0
-7464 3379 -12600 0
-7466 3381 -12600 0
-7468 3383 -12600 0
-7470 3385 -12600 0
-7472 3387 -12600 0
-7474 3389 -12600 0
-7476 3391 -12600 0
7475 -3390 -12600 0
-3377 7462 -12600 0
-3379 7464 -12600 0
-3381 7466 -12600 0
-3383 7468 -12600 0
-3385 7470 -12600 0
-3387 7472 -12600 0
-3389 7474 -12600 0
-3391 7476 -12600 0
3390 -7475 -12600 0
-7462 -3377 12600 0
-7464 -3379 12600 0
-7466 -3381 12600 0
-7468 -3383 12600 0
-7470 -3385 12600 0
-7472 -3387 12600 0
-7474 -3389 12600 0
-7476 -3391 12600 0
7475 3390 12600 0
c ((max_left_00004_00004_00002=max_left_00004_00004_00003)=tv=SATLiteral(12601))
-3377 -12601 0
-3379 -12601 0
-3381 3392 -12601 0
-3383 3394 -12601 0
-3385 3396 -12601 0
-3387 3398 -12601 0
-3389 3400 -12601 0
-3391 3402 -12601 0
3390 -3401 -12601 0
-3392 3381 -12601 0
-3394 3383 -12601 0
-3396 3385 -12601 0
-3398 3387 -12601 0
-3400 3389 -12601 0
-3402 3391 -12601 0
3401 -3390 -12601 0
-3381 -3392 12601 0
-3383 -3394 12601 0
-3385 -3396 12601 0
-3387 -3398 12601 0
-3389 -3400 12601 0
-3391 -3402 12601 0
3390 3401 12601 0
c ((variant_fields_00004_00004_00003=max_left_00004_00004_00003)=tv=SATLiteral(12602))
-7477 3392 -12602 0
-3392 7477 -12602 0
-3394 -12602 0
-3396 -12602 0
-3398 -12602 0
-3400 -12602 0
-3402 -12602 0
3401 -12602 0
-7477 -3392 12602 0
c ((max_left_00004_00004_00003=max_left_00004_00004_00004)=tv=SATLiteral(12603))
-3392 3403 -12603 0
-3394 3405 -12603 0
-3396 3407 -12603 0
-3398 3409 -12603 0
-3400 3411 -12603 0
-3402 3413 -12603 0
3401 -3412 -12603 0
-3403 3392 -12603 0
-3405 3394 -12603 0
-3407 3396 -12603 0
-3409 3398 -12603 0
-3411 3400 -12603 0
-3413 3402 -12603 0
3412 -3401 -12603 0
-3392 -3403 12603 0
-3394 -3405 12603 0
-3396 -3407 12603 0
-3398 -3409 12603 0
-3400 -3411 12603 0
-3402 -3413 12603 0
3401 3412 12603 0
c ((variant_fields_00004_00004_00004=max_left_00004_00004_00004)=tv=SATLiteral(12604))
-7478 -12604 0
-7480 -12604 0
-7482 3403 -12604 0
-7484 3405 -12604 0
-7486 3407 -12604 0
-7488 3409 -12604 0
-7490 3411 -12604 0
-7492 3413 -12604 0
7491 -3412 -12604 0
-3403 7482 -12604 0
-3405 7484 -12604 0
-3407 7486 -12604 0
-3409 7488 -12604 0
-3411 7490 -12604 0
-3413 7492 -12604 0
3412 -7491 -12604 0
-7482 -3403 12604 0
-7484 -3405 12604 0
-7486 -3407 12604 0
-7488 -3409 12604 0
-7490 -3411 12604 0
-7492 -3413 12604 0
7491 3412 12604 0
c ((max_left_00004_00004_00005=max_left_00004_00004_00006)=tv=SATLiteral(12605))
-3414 3425 -12605 0
-3416 3427 -12605 0
-3418 3429 -12605 0
-3420 3431 -12605 0
-3422 3433 -12605 0
-3424 3435 -12605 0
3423 -3434 -12605 0
-3425 3414 -12605 0
-3427 3416 -12605 0
-3429 3418 -12605 0
-3431 3420 -12605 0
-3433 3422 -12605 0
-3435 3424 -12605 0
3434 -3423 -12605 0
-3414 -3425 12605 0
-3416 -3427 12605 0
-3418 -3429 12605 0
-3420 -3431 12605 0
-3422 -3433 12605 0
-3424 -3435 12605 0
3423 3434 12605 0
c ((variant_fields_00004_00004_00006=max_left_00004_00004_00006)=tv=SATLiteral(12606))
-7494 -12606 0
-7496 -12606 0
-7498 3425 -12606 0
-7500 3427 -12606 0
-7502 3429 -12606 0
-7504 3431 -12606 0
-7506 3433 -12606 0
-7508 3435 -12606 0
7507 -3434 -12606 0
-3425 7498 -12606 0
-3427 7500 -12606 0
-3429 7502 -12606 0
-3431 7504 -12606 0
-3433 7506 -12606 0
-3435 7508 -12606 0
3434 -7507 -12606 0
-7498 -3425 12606 0
-7500 -3427 12606 0
-7502 -3429 12606 0
-7504 -3431 12606 0
-7506 -3433 12606 0
-7508 -3435 12606 0
7507 3434 12606 0
c ((max_left_00004_00004_00006=max_left_00004_00004_00007)=tv=SATLiteral(12607))
-3425 3436 -12607 0
-3427 3438 -12607 0
-3429 3440 -12607 0
-3431 3442 -12607 0
-3433 3444 -12607 0
-3435 3446 -12607 0
3434 -3445 -12607 0
-3436 3425 -12607 0
-3438 3427 -12607 0
-3440 3429 -12607 0
-3442 3431 -12607 0
-3444 3433 -12607 0
-3446 3435 -12607 0
3445 -3434 -12607 0
-3425 -3436 12607 0
-3427 -3438 12607 0
-3429 -3440 12607 0
-3431 -3442 12607 0
-3433 -3444 12607 0
-3435 -3446 12607 0
3434 3445 12607 0
c ((variant_fields_00004_00004_00007=max_left_00004_00004_00007)=tv=SATLiteral(12608))
-7509 -12608 0
-7511 -12608 0
-7513 3436 -12608 0
-7515 3438 -12608 0
-7517 3440 -12608 0
-7519 3442 -12608 0
-7521 3444 -12608 0
-7523 3446 -12608 0
7522 -3445 -12608 0
-3436 7513 -12608 0
-3438 7515 -12608 0
-3440 7517 -12608 0
-3442 7519 -12608 0
-3444 7521 -12608 0
-3446 7523 -12608 0
3445 -7522 -12608 0
-7513 -3436 12608 0
-7515 -3438 12608 0
-7517 -3440 12608 0
-7519 -3442 12608 0
-7521 -3444 12608 0
-7523 -3446 12608 0
7522 3445 12608 0
c ((max_left_00004_00004_00007=max_left_00004_00004_00008)=tv=SATLiteral(12609))
-3436 3447 -12609 0
-3438 3449 -12609 0
-3440 3451 -12609 0
-3442 3453 -12609 0
-3444 3455 -12609 0
-3446 3457 -12609 0
3445 -3456 -12609 0
-3447 3436 -12609 0
-3449 3438 -12609 0
-3451 3440 -12609 0
-3453 3442 -12609 0
-3455 3444 -12609 0
-3457 3446 -12609 0
3456 -3445 -12609 0
-3436 -3447 12609 0
-3438 -3449 12609 0
-3440 -3451 12609 0
-3442 -3453 12609 0
-3444 -3455 12609 0
-3446 -3457 12609 0
3445 3456 12609 0
c ((variant_fields_00004_00004_00008=max_left_00004_00004_00008)=tv=SATLiteral(12610))
-7524 -12610 0
-7526 -12610 0
-7528 3447 -12610 0
-7530 3449 -12610 0
-7532 3451 -12610 0
-7534 3453 -12610 0
-7536 3455 -12610 0
-7538 3457 -12610 0
7537 -3456 -12610 0
-3447 7528 -12610 0
-3449 7530 -12610 0
-3451 7532 -12610 0
-3453 7534 -12610 0
-3455 7536 -12610 0
-3457 7538 -12610 0
3456 -7537 -12610 0
-7528 -3447 12610 0
-7530 -3449 12610 0
-7532 -3451 12610 0
-7534 -3453 12610 0
-7536 -3455 12610 0
-7538 -3457 12610 0
7537 3456 12610 0
c ((max_left_00004_00004_00008=max_left_00004_00004_00009)=tv=SATLiteral(12611))
-3447 3458 -12611 0
-3449 3460 -12611 0
-3451 3462 -12611 0
-3453 3464 -12611 0
-3455 3466 -12611 0
-3457 3468 -12611 0
3456 -3467 -12611 0
-3458 3447 -12611 0
-3460 3449 -12611 0
-3462 3451 -12611 0
-3464 3453 -12611 0
-3466 3455 -12611 0
-3468 3457 -12611 0
3467 -3456 -12611 0
-3447 -3458 12611 0
-3449 -3460 12611 0
-3451 -3462 12611 0
-3453 -3464 12611 0
-3455 -3466 12611 0
-3457 -3468 12611 0
3456 3467 12611 0
c ((variant_fields_00004_00004_00009=max_left_00004_00004_00009)=tv=SATLiteral(12612))
-7539 -12612 0
-7541 -12612 0
-7543 3458 -12612 0
-7545 3460 -12612 0
-7547 3462 -12612 0
-7549 3464 -12612 0
-7551 3466 -12612 0
-7553 3468 -12612 0
7552 -3467 -12612 0
-3458 7543 -12612 0
-3460 7545 -12612 0
-3462 7547 -12612 0
-3464 7549 -12612 0
-3466 7551 -12612 0
-3468 7553 -12612 0
3467 -7552 -12612 0
-7543 -3458 12612 0
-7545 -3460 12612 0
-7547 -3462 12612 0
-7549 -3464 12612 0
-7551 -3466 12612 0
-7553 -3468 12612 0
7552 3467 12612 0
c ((max_left_00004_00005_00002=max_left_00004_00005_00003)=tv=SATLiteral(12613))
-3471 3472 -12613 0
-3472 3471 -12613 0
-3474 -12613 0
3473 -12613 0
-3471 -3472 12613 0
c ((variant_fields_00004_00005_00003=max_left_00004_00005_00003)=tv=SATLiteral(12614))
-7556 -12614 0
-7558 -12614 0
-7560 -12614 0
-7562 -12614 0
-7564 -12614 0
-7566 -12614 0
-7568 3472 -12614 0
-7570 3474 -12614 0
7569 -3473 -12614 0
-3472 7568 -12614 0
-3474 7570 -12614 0
3473 -7569 -12614 0
-7568 -3472 12614 0
-7570 -3474 12614 0
7569 3473 12614 0
c ((max_left_00004_00005_00003=max_left_00004_00005_00004)=tv=SATLiteral(12615))
-3472 3475 -12615 0
-3474 3477 -12615 0
3473 -3476 -12615 0
-3475 3472 -12615 0
-3477 3474 -12615 0
3476 -3473 -12615 0
-3472 -3475 12615 0
-3474 -3477 12615 0
3473 3476 12615 0
c ((variant_fields_00004_00005_00004=max_left_00004_00005_00004)=tv=SATLiteral(12616))
-7571 -12616 0
-7573 -12616 0
-7575 -12616 0
-7577 -12616 0
-7579 -12616 0
-7581 -12616 0
-7583 3475 -12616 0
-7585 3477 -12616 0
7584 -3476 -12616 0
-3475 7583 -12616 0
-3477 7585 -12616 0
3476 -7584 -12616 0
-7583 -3475 12616 0
-7585 -3477 12616 0
7584 3476 12616 0
c ((max_left_00004_00005_00004=max_left_00004_00005_00005)=tv=SATLiteral(12617))
-3475 3478 -12617 0
-3477 3480 -12617 0
3476 -3479 -12617 0
-3478 3475 -12617 0
-3480 3477 -12617 0
3479 -3476 -12617 0
-3475 -3478 12617 0
-3477 -3480 12617 0
3476 3479 12617 0
c ((variant_fields_00004_00005_00005=max_left_00004_00005_00005)=tv=SATLiteral(12618))
-7586 -12618 0
-7588 -12618 0
-7590 -12618 0
-7592 -12618 0
-7594 -12618 0
-7596 -12618 0
-7598 3478 -12618 0
-7600 3480 -12618 0
7599 -3479 -12618 0
-3478 7598 -12618 0
-3480 7600 -12618 0
3479 -7599 -12618 0
-7598 -3478 12618 0
-7600 -3480 12618 0
7599 3479 12618 0
c ((max_left_00004_00005_00005=max_left_00004_00005_00006)=tv=SATLiteral(12619))
-3478 3481 -12619 0
-3480 3483 -12619 0
3479 -3482 -12619 0
-3481 3478 -12619 0
-3483 3480 -12619 0
3482 -3479 -12619 0
-3478 -3481 12619 0
-3480 -3483 12619 0
3479 3482 12619 0
c ((variant_fields_00004_00005_00006=max_left_00004_00005_00006)=tv=SATLiteral(12620))
-7601 -12620 0
-7603 -12620 0
-7605 -12620 0
-7607 -12620 0
-7609 -12620 0
-7611 -12620 0
-7613 3481 -12620 0
-7615 3483 -12620 0
7614 -3482 -12620 0
-3481 7613 -12620 0
-3483 7615 -12620 0
3482 -7614 -12620 0
-7613 -3481 12620 0
-7615 -3483 12620 0
7614 3482 12620 0
c ((max_left_00004_00005_00006=max_left_00004_00005_00007)=tv=SATLiteral(12621))
-3481 3484 -12621 0
-3483 3486 -12621 0
3482 -3485 -12621 0
-3484 3481 -12621 0
-3486 3483 -12621 0
3485 -3482 -12621 0
-3481 -3484 12621 0
-3483 -3486 12621 0
3482 3485 12621 0
c ((variant_fields_00004_00005_00007=max_left_00004_00005_00007)=tv=SATLiteral(12622))
-7616 -12622 0
-7618 -12622 0
-7620 -12622 0
-7622 -12622 0
-7624 -12622 0
-7626 -12622 0
-7628 3484 -12622 0
-7630 3486 -12622 0
7629 -3485 -12622 0
-3484 7628 -12622 0
-3486 7630 -12622 0
3485 -7629 -12622 0
-7628 -3484 12622 0
-7630 -3486 12622 0
7629 3485 12622 0
c ((max_left_00004_00005_00007=max_left_00004_00005_00008)=tv=SATLiteral(12623))
-3484 3487 -12623 0
-3486 3489 -12623 0
3485 -3488 -12623 0
-3487 3484 -12623 0
-3489 3486 -12623 0
3488 -3485 -12623 0
-3484 -3487 12623 0
-3486 -3489 12623 0
3485 3488 12623 0
c ((variant_fields_00004_00005_00008=max_left_00004_00005_00008)=tv=SATLiteral(12624))
-7631 -12624 0
-7633 -12624 0
-7635 -12624 0
-7637 -12624 0
-7639 -12624 0
-7641 -12624 0
-7643 3487 -12624 0
-7645 3489 -12624 0
7644 -3488 -12624 0
-3487 7643 -12624 0
-3489 7645 -12624 0
3488 -7644 -12624 0
-7643 -3487 12624 0
-7645 -3489 12624 0
7644 3488 12624 0
c ((max_left_00004_00005_00008=max_left_00004_00005_00009)=tv=SATLiteral(12625))
-3487 3490 -12625 0
-3489 3492 -12625 0
3488 -3491 -12625 0
-3490 3487 -12625 0
-3492 3489 -12625 0
3491 -3488 -12625 0
-3487 -3490 12625 0
-3489 -3492 12625 0
3488 3491 12625 0
c ((variant_fields_00004_00005_00009=max_left_00004_00005_00009)=tv=SATLiteral(12626))
-7646 -12626 0
-7648 -12626 0
-7650 -12626 0
-7652 -12626 0
-7654 -12626 0
-7656 -12626 0
-7658 3490 -12626 0
-7660 3492 -12626 0
7659 -3491 -12626 0
-3490 7658 -12626 0
-3492 7660 -12626 0
3491 -7659 -12626 0
-7658 -3490 12626 0
-7660 -3492 12626 0
7659 3491 12626 0
c ((max_left_00004_00006_00001=max_left_00004_00006_00002)=tv=SATLiteral(12627))
-3494 3509 -12627 0
-3496 3511 -12627 0
-3498 3513 -12627 0
-3500 3515 -12627 0
-3502 3517 -12627 0
-3504 3519 -12627 0
-3506 3521 -12627 0
-3508 3523 -12627 0
3507 -3522 -12627 0
-3509 3494 -12627 0
-3511 3496 -12627 0
-3513 3498 -12627 0
-3515 3500 -12627 0
-3517 3502 -12627 0
-3519 3504 -12627 0
-3521 3506 -12627 0
-3523 3508 -12627 0
3522 -3507 -12627 0
-3494 -3509 12627 0
-3496 -3511 12627 0
-3498 -3513 12627 0
-3500 -3515 12627 0
-3502 -3517 12627 0
-3504 -3519 12627 0
-3506 -3521 12627 0
-3508 -3523 12627 0
3507 3522 12627 0
c ((variant_fields_00004_00006_00002=max_left_00004_00006_00002)=tv=SATLiteral(12628))
-7676 3509 -12628 0
-7678 3511 -12628 0
-7680 3513 -12628 0
-7682 3515 -12628 0
-7684 3517 -12628 0
-7686 3519 -12628 0
-7688 3521 -12628 0
-7690 3523 -12628 0
7689 -3522 -12628 0
-3509 7676 -12628 0
-3511 7678 -12628 0
-3513 7680 -12628 0
-3515 7682 -12628 0
-3517 7684 -12628 0
-3519 7686 -12628 0
-3521 7688 -12628 0
-3523 7690 -12628 0
3522 -7689 -12628 0
-7676 -3509 12628 0
-7678 -3511 12628 0
-7680 -3513 12628 0
-7682 -3515 12628 0
-7684 -3517 12628 0
-7686 -3519 12628 0
-7688 -3521 12628 0
-7690 -3523 12628 0
7689 3522 12628 0
c ((max_left_00004_00006_00002=max_left_00004_00006_00003)=tv=SATLiteral(12629))
-3509 3524 -12629 0
-3511 3526 -12629 0
-3513 3528 -12629 0
-3515 3530 -12629 0
-3517 3532 -12629 0
-3519 3534 -12629 0
-3521 3536 -12629 0
-3523 3538 -12629 0
3522 -3537 -12629 0
-3524 3509 -12629 0
-3526 3511 -12629 0
-3528 3513 -12629 0
-3530 3515 -12629 0
-3532 3517 -12629 0
-3534 3519 -12629 0
-3536 3521 -12629 0
-3538 3523 -12629 0
3537 -3522 -12629 0
-3509 -3524 12629 0
-3511 -3526 12629 0
-3513 -3528 12629 0
-3515 -3530 12629 0
-3517 -3532 12629 0
-3519 -3534 12629 0
-3521 -3536 12629 0
-3523 -3538 12629 0
3522 3537 12629 0
c ((variant_fields_00004_00006_00003=max_left_00004_00006_00003)=tv=SATLiteral(12630))
-7691 3524 -12630 0
-7693 3526 -12630 0
-7695 3528 -12630 0
-7697 3530 -12630 0
-7699 3532 -12630 0
-7701 3534 -12630 0
-7703 3536 -12630 0
-7705 3538 -12630 0
7704 -3537 -12630 0
-3524 7691 -12630 0
-3526 7693 -12630 0
-3528 7695 -12630 0
-3530 7697 -12630 0
-3532 7699 -12630 0
-3534 7701 -12630 0
-3536 7703 -12630 0
-3538 7705 -12630 0
3537 -7704 -12630 0
-7691 -3524 12630 0
-7693 -3526 12630 0
-7695 -3528 12630 0
-7697 -3530 12630 0
-7699 -3532 12630 0
-7701 -3534 12630 0
-7703 -3536 12630 0
-7705 -3538 12630 0
7704 3537 12630 0
c ((max_left_00004_00006_00003=max_left_00004_00006_00004)=tv=SATLiteral(12631))
-3524 -12631 0
-3526 -12631 0
-3528 -12631 0
-3530 -12631 0
-3532 -12631 0
-3534 -12631 0
-3536 3539 -12631 0
-3538 3541 -12631 0
3537 -3540 -12631 0
-3539 3536 -12631 0
-3541 3538 -12631 0
3540 -3537 -12631 0
-3536 -3539 12631 0
-3538 -3541 12631 0
3537 3540 12631 0
c ((variant_fields_00004_00006_00004=max_left_00004_00006_00004)=tv=SATLiteral(12632))
-7706 3539 -12632 0
-3539 7706 -12632 0
-3541 -12632 0
3540 -12632 0
-7706 -3539 12632 0
c ((max_left_00004_00006_00004=max_left_00004_00006_00005)=tv=SATLiteral(12633))
-3539 3542 -12633 0
-3541 3544 -12633 0
3540 -3543 -12633 0
-3542 3539 -12633 0
-3544 3541 -12633 0
3543 -3540 -12633 0
-3539 -3542 12633 0
-3541 -3544 12633 0
3540 3543 12633 0
c ((variant_fields_00004_00006_00005=max_left_00004_00006_00005)=tv=SATLiteral(12634))
-7707 -12634 0
-7709 -12634 0
-7711 -12634 0
-7713 -12634 0
-7715 -12634 0
-7717 -12634 0
-7719 3542 -12634 0
-7721 3544 -12634 0
7720 -3543 -12634 0
-3542 7719 -12634 0
-3544 7721 -12634 0
3543 -7720 -12634 0
-7719 -3542 12634 0
-7721 -3544 12634 0
7720 3543 12634 0
c ((max_left_00004_00006_00005=max_left_00004_00006_00006)=tv=SATLiteral(12635))
-3542 3545 -12635 0
-3544 3547 -12635 0
3543 -3546 -12635 0
-3545 3542 -12635 0
-3547 3544 -12635 0
3546 -3543 -12635 0
-3542 -3545 12635 0
-3544 -3547 12635 0
3543 3546 12635 0
c ((variant_fields_00004_00006_00006=max_left_00004_00006_00006)=tv=SATLiteral(12636))
-7722 -12636 0
-7724 -12636 0
-7726 -12636 0
-7728 -12636 0
-7730 -12636 0
-7732 -12636 0
-7734 3545 -12636 0
-7736 3547 -12636 0
7735 -3546 -12636 0
-3545 7734 -12636 0
-3547 7736 -12636 0
3546 -7735 -12636 0
-7734 -3545 12636 0
-7736 -3547 12636 0
7735 3546 12636 0
c ((max_left_00004_00006_00007=max_left_00004_00006_00008)=tv=SATLiteral(12637))
-3548 3551 -12637 0
-3550 3553 -12637 0
3549 -3552 -12637 0
-3551 3548 -12637 0
-3553 3550 -12637 0
3552 -3549 -12637 0
-3548 -3551 12637 0
-3550 -3553 12637 0
3549 3552 12637 0
c ((variant_fields_00004_00006_00008=max_left_00004_00006_00008)=tv=SATLiteral(12638))
-7738 -12638 0
-7740 -12638 0
-7742 -12638 0
-7744 -12638 0
-7746 -12638 0
-7748 -12638 0
-7750 3551 -12638 0
-7752 3553 -12638 0
7751 -3552 -12638 0
-3551 7750 -12638 0
-3553 7752 -12638 0
3552 -7751 -12638 0
-7750 -3551 12638 0
-7752 -3553 12638 0
7751 3552 12638 0
c ((max_left_00004_00006_00008=max_left_00004_00006_00009)=tv=SATLiteral(12639))
-3551 3554 -12639 0
-3553 3556 -12639 0
3552 -3555 -12639 0
-3554 3551 -12639 0
-3556 3553 -12639 0
3555 -3552 -12639 0
-3551 -3554 12639 0
-3553 -3556 12639 0
3552 3555 12639 0
c ((variant_fields_00004_00006_00009=max_left_00004_00006_00009)=tv=SATLiteral(12640))
-7753 -12640 0
-7755 -12640 0
-7757 -12640 0
-7759 -12640 0
-7761 -12640 0
-7763 -12640 0
-7765 3554 -12640 0
-7767 3556 -12640 0
7766 -3555 -12640 0
-3554 7765 -12640 0
-3556 7767 -12640 0
3555 -7766 -12640 0
-7765 -3554 12640 0
-7767 -3556 12640 0
7766 3555 12640 0
c ((max_left_00004_00007_00001=max_left_00004_00007_00002)=tv=SATLiteral(12641))
-3558 -3559 -12641 0
3559 3558 -12641 0
-3559 -12641 0
-3558 3559 12641 0
c ((variant_fields_00004_00007_00002=max_left_00004_00007_00002)=tv=SATLiteral(12642))
-7769 -12642 0
-7771 -12642 0
-7773 -12642 0
-7775 -12642 0
-7777 -12642 0
-7779 -12642 0
-7781 -12642 0
-7783 -3559 -12642 0
7782 3559 -12642 0
3559 7783 -12642 0
-3559 -7782 -12642 0
-7783 3559 12642 0
7782 -3559 12642 0
c ((max_left_00004_00007_00003=max_left_00004_00007_00004)=tv=SATLiteral(12643))
3560 -3561 -12643 0
-3560 3561 -12643 0
3561 -3560 -12643 0
-3561 3560 -12643 0
3560 3561 12643 0
-3560 -3561 12643 0
c ((variant_fields_00004_00007_00004=max_left_00004_00007_00004)=tv=SATLiteral(12644))
-7785 -12644 0
-7787 -12644 0
-7789 -12644 0
-7791 -12644 0
-7793 -12644 0
-7795 -12644 0
-7797 -12644 0
-7799 -3561 -12644 0
7798 3561 -12644 0
3561 7799 -12644 0
-3561 -7798 -12644 0
-7799 3561 12644 0
7798 -3561 12644 0
c ((max_left_00004_00007_00005=max_left_00004_00007_00006)=tv=SATLiteral(12645))
3562 -3563 -12645 0
-3562 3563 -12645 0
3563 -3562 -12645 0
-3563 3562 -12645 0
3562 3563 12645 0
-3562 -3563 12645 0
c ((variant_fields_00004_00007_00006=max_left_00004_00007_00006)=tv=SATLiteral(12646))
-7801 -12646 0
-7803 -12646 0
-7805 -12646 0
-7807 -12646 0
-7809 -12646 0
-7811 -12646 0
-7813 -12646 0
-7815 -3563 -12646 0
7814 3563 -12646 0
3563 7815 -12646 0
-3563 -7814 -12646 0
-7815 3563 12646 0
7814 -3563 12646 0
c ((max_left_00004_00007_00006=max_left_00004_00007_00007)=tv=SATLiteral(12647))
3563 -3564 -12647 0
-3563 3564 -12647 0
3564 -3563 -12647 0
-3564 3563 -12647 0
3563 3564 12647 0
-3563 -3564 12647 0
c ((variant_fields_00004_00007_00007=max_left_00004_00007_00007)=tv=SATLiteral(12648))
-7816 -12648 0
-7818 -12648 0
-7820 -12648 0
-7822 -12648 0
-7824 -12648 0
-7826 -12648 0
-7828 -12648 0
-7830 -3564 -12648 0
7829 3564 -12648 0
3564 7830 -12648 0
-3564 -7829 -12648 0
-7830 3564 12648 0
7829 -3564 12648 0
c ((max_left_00004_00007_00007=max_left_00004_00007_00008)=tv=SATLiteral(12649))
3564 -3565 -12649 0
-3564 3565 -12649 0
3565 -3564 -12649 0
-3565 3564 -12649 0
3564 3565 12649 0
-3564 -3565 12649 0
c ((variant_fields_00004_00007_00008=max_left_00004_00007_00008)=tv=SATLiteral(12650))
-7831 -12650 0
-7833 -12650 0
-7835 -12650 0
-7837 -12650 0
-7839 -12650 0
-7841 -12650 0
-7843 -12650 0
-7845 -3565 -12650 0
7844 3565 -12650 0
3565 7845 -12650 0
-3565 -7844 -12650 0
-7845 3565 12650 0
7844 -3565 12650 0
c ((max_left_00004_00008_00001=max_left_00004_00008_00002)=tv=SATLiteral(12651))
-3568 3583 -12651 0
-3570 3585 -12651 0
-3572 3587 -12651 0
-3574 3589 -12651 0
-3576 3591 -12651 0
-3578 3593 -12651 0
-3580 3595 -12651 0
-3582 3597 -12651 0
3581 -3596 -12651 0
-3583 3568 -12651 0
-3585 3570 -12651 0
-3587 3572 -12651 0
-3589 3574 -12651 0
-3591 3576 -12651 0
-3593 3578 -12651 0
-3595 3580 -12651 0
-3597 3582 -12651 0
3596 -3581 -12651 0
-3568 -3583 12651 0
-3570 -3585 12651 0
-3572 -3587 12651 0
-3574 -3589 12651 0
-3576 -3591 12651 0
-3578 -3593 12651 0
-3580 -3595 12651 0
-3582 -3597 12651 0
3581 3596 12651 0
c ((variant_fields_00004_00008_00002=max_left_00004_00008_00002)=tv=SATLiteral(12652))
-7862 3583 -12652 0
-7864 3585 -12652 0
-7866 3587 -12652 0
-7868 3589 -12652 0
-7870 3591 -12652 0
-7872 3593 -12652 0
-7874 3595 -12652 0
-7876 3597 -12652 0
7875 -3596 -12652 0
-3583 7862 -12652 0
-3585 7864 -12652 0
-3587 7866 -12652 0
-3589 7868 -12652 0
-3591 7870 -12652 0
-3593 7872 -12652 0
-3595 7874 -12652 0
-3597 7876 -12652 0
3596 -7875 -12652 0
-7862 -3583 12652 0
-7864 -3585 12652 0
-7866 -3587 12652 0
-7868 -3589 12652 0
-7870 -3591 12652 0
-7872 -3593 12652 0
-7874 -3595 12652 0
-7876 -3597 12652 0
7875 3596 12652 0
c ((max_left_00004_00008_00002=max_left_00004_00008_00003)=tv=SATLiteral(12653))
-3583 3598 -12653 0
-3585 3600 -12653 0
-3587 3602 -12653 0
-3589 3604 -12653 0
-3591 3606 -12653 0
-3593 3608 -12653 0
-3595 3610 -12653 0
-3597 3612 -12653 0
3596 -3611 -12653 0
-3598 3583 -12653 0
-3600 3585 -12653 0
-3602 3587 -12653 0
-3604 3589 -12653 0
-3606 3591 -12653 0
-3608 3593 -12653 0
-3610 3595 -12653 0
-3612 3597 -12653 0
3611 -3596 -12653 0
-3583 -3598 12653 0
-3585 -3600 12653 0
-3587 -3602 12653 0
-3589 -3604 12653 0
-3591 -3606 12653 0
-3593 -3608 12653 0
-3595 -3610 12653 0
-3597 -3612 12653 0
3596 3611 12653 0
c ((variant_fields_00004_00008_00003=max_left_00004_00008_00003)=tv=SATLiteral(12654))
-7877 3598 -12654 0
-7879 3600 -12654 0
-7881 3602 -12654 0
-7883 3604 -12654 0
-7885 3606 -12654 0
-7887 3608 -12654 0
-7889 3610 -12654 0
-7891 3612 -12654 0
7890 -3611 -12654 0
-3598 7877 -12654 0
-3600 7879 -12654 0
-3602 7881 -12654 0
-3604 7883 -12654 0
-3606 7885 -12654 0
-3608 7887 -12654 0
-3610 7889 -12654 0
-3612 7891 -12654 0
3611 -7890 -12654 0
-7877 -3598 12654 0
-7879 -3600 12654 0
-7881 -3602 12654 0
-7883 -3604 12654 0
-7885 -3606 12654 0
-7887 -3608 12654 0
-7889 -3610 12654 0
-7891 -3612 12654 0
7890 3611 12654 0
c ((max_left_00004_00008_00003=max_left_00004_00008_00004)=tv=SATLiteral(12655))
-3598 3613 -12655 0
-3600 3615 -12655 0
-3602 3617 -12655 0
-3604 3619 -12655 0
-3606 3621 -12655 0
-3608 3623 -12655 0
-3610 3625 -12655 0
-3612 3627 -12655 0
3611 -3626 -12655 0
-3613 3598 -12655 0
-3615 3600 -12655 0
-3617 3602 -12655 0
-3619 3604 -12655 0
-3621 3606 -12655 0
-3623 3608 -12655 0
-3625 3610 -12655 0
-3627 3612 -12655 0
3626 -3611 -12655 0
-3598 -3613 12655 0
-3600 -3615 12655 0
-3602 -3617 12655 0
-3604 -3619 12655 0
-3606 -3621 12655 0
-3608 -3623 12655 0
-3610 -3625 12655 0
-3612 -3627 12655 0
3611 3626 12655 0
c ((variant_fields_00004_00008_00004=max_left_00004_00008_00004)=tv=SATLiteral(12656))
-7892 3613 -12656 0
-7894 3615 -12656 0
-7896 3617 -12656 0
-7898 3619 -12656 0
-7900 3621 -12656 0
-7902 3623 -12656 0
-7904 3625 -12656 0
-7906 3627 -12656 0
7905 -3626 -12656 0
-3613 7892 -12656 0
-3615 7894 -12656 0
-3617 7896 -12656 0
-3619 7898 -12656 0
-3621 7900 -12656 0
-3623 7902 -12656 0
-3625 7904 -12656 0
-3627 7906 -12656 0
3626 -7905 -12656 0
-7892 -3613 12656 0
-7894 -3615 12656 0
-7896 -3617 12656 0
-7898 -3619 12656 0
-7900 -3621 12656 0
-7902 -3623 12656 0
-7904 -3625 12656 0
-7906 -3627 12656 0
7905 3626 12656 0
c ((max_left_00004_00008_00004=max_left_00004_00008_00005)=tv=SATLiteral(12657))
-3613 3628 -12657 0
-3615 3630 -12657 0
-3617 3632 -12657 0
-3619 3634 -12657 0
-3621 3636 -12657 0
-3623 3638 -12657 0
-3625 3640 -12657 0
-3627 3642 -12657 0
3626 -3641 -12657 0
-3628 3613 -12657 0
-3630 3615 -12657 0
-3632 3617 -12657 0
-3634 3619 -12657 0
-3636 3621 -12657 0
-3638 3623 -12657 0
-3640 3625 -12657 0
-3642 3627 -12657 0
3641 -3626 -12657 0
-3613 -3628 12657 0
-3615 -3630 12657 0
-3617 -3632 12657 0
-3619 -3634 12657 0
-3621 -3636 12657 0
-3623 -3638 12657 0
-3625 -3640 12657 0
-3627 -3642 12657 0
3626 3641 12657 0
c ((variant_fields_00004_00008_00005=max_left_00004_00008_00005)=tv=SATLiteral(12658))
-7907 3628 -12658 0
-7909 3630 -12658 0
-7911 3632 -12658 0
-7913 3634 -12658 0
-7915 3636 -12658 0
-7917 3638 -12658 0
-7919 3640 -12658 0
-7921 3642 -12658 0
7920 -3641 -12658 0
-3628 7907 -12658 0
-3630 7909 -12658 0
-3632 7911 -12658 0
-3634 7913 -12658 0
-3636 7915 -12658 0
-3638 7917 -12658 0
-3640 7919 -12658 0
-3642 7921 -12658 0
3641 -7920 -12658 0
-7907 -3628 12658 0
-7909 -3630 12658 0
-7911 -3632 12658 0
-7913 -3634 12658 0
-7915 -3636 12658 0
-7917 -3638 12658 0
-7919 -3640 12658 0
-7921 -3642 12658 0
7920 3641 12658 0
c ((max_left_00004_00008_00005=max_left_00004_00008_00006)=tv=SATLiteral(12659))
-3628 -12659 0
-3630 -12659 0
-3632 3643 -12659 0
-3634 3645 -12659 0
-3636 3647 -12659 0
-3638 3649 -12659 0
-3640 3651 -12659 0
-3642 3653 -12659 0
3641 -3652 -12659 0
-3643 3632 -12659 0
-3645 3634 -12659 0
-3647 3636 -12659 0
-3649 3638 -12659 0
-3651 3640 -12659 0
-3653 3642 -12659 0
3652 -3641 -12659 0
-3632 -3643 12659 0
-3634 -3645 12659 0
-3636 -3647 12659 0
-3638 -3649 12659 0
-3640 -3651 12659 0
-3642 -3653 12659 0
3641 3652 12659 0
c ((variant_fields_00004_00008_00006=max_left_00004_00008_00006)=tv=SATLiteral(12660))
-7922 3643 -12660 0
-3643 7922 -12660 0
-3645 -12660 0
-3647 -12660 0
-3649 -12660 0
-3651 -12660 0
-3653 -12660 0
3652 -12660 0
-7922 -3643 12660 0
c ((max_left_00004_00008_00006=max_left_00004_00008_00007)=tv=SATLiteral(12661))
-3643 3654 -12661 0
-3645 3656 -12661 0
-3647 3658 -12661 0
-3649 3660 -12661 0
-3651 3662 -12661 0
-3653 3664 -12661 0
3652 -3663 -12661 0
-3654 3643 -12661 0
-3656 3645 -12661 0
-3658 3647 -12661 0
-3660 3649 -12661 0
-3662 3651 -12661 0
-3664 3653 -12661 0
3663 -3652 -12661 0
-3643 -3654 12661 0
-3645 -3656 12661 0
-3647 -3658 12661 0
-3649 -3660 12661 0
-3651 -3662 12661 0
-3653 -3664 12661 0
3652 3663 12661 0
c ((variant_fields_00004_00008_00007=max_left_00004_00008_00007)=tv=SATLiteral(12662))
-7923 -12662 0
-7925 -12662 0
-7927 3654 -12662 0
-7929 3656 -12662 0
-7931 3658 -12662 0
-7933 3660 -12662 0
-7935 3662 -12662 0
-7937 3664 -12662 0
7936 -3663 -12662 0
-3654 7927 -12662 0
-3656 7929 -12662 0
-3658 7931 -12662 0
-3660 7933 -12662 0
-3662 7935 -12662 0
-3664 7937 -12662 0
3663 -7936 -12662 0
-7927 -3654 12662 0
-7929 -3656 12662 0
-7931 -3658 12662 0
-7933 -3660 12662 0
-7935 -3662 12662 0
-7937 -3664 12662 0
7936 3663 12662 0
c ((max_left_00004_00008_00007=max_left_00004_00008_00008)=tv=SATLiteral(12663))
-3654 -12663 0
-3656 -12663 0
-3658 -12663 0
-3660 -12663 0
-3662 3665 -12663 0
-3664 3667 -12663 0
3663 -3666 -12663 0
-3665 3662 -12663 0
-3667 3664 -12663 0
3666 -3663 -12663 0
-3662 -3665 12663 0
-3664 -3667 12663 0
3663 3666 12663 0
c ((variant_fields_00004_00008_00008=max_left_00004_00008_00008)=tv=SATLiteral(12664))
-7938 3665 -12664 0
-3665 7938 -12664 0
-3667 -12664 0
3666 -12664 0
-7938 -3665 12664 0
c ((max_left_00004_00008_00008=max_left_00004_00008_00009)=tv=SATLiteral(12665))
-3665 3668 -12665 0
-3667 3670 -12665 0
3666 -3669 -12665 0
-3668 3665 -12665 0
-3670 3667 -12665 0
3669 -3666 -12665 0
-3665 -3668 12665 0
-3667 -3670 12665 0
3666 3669 12665 0
c ((variant_fields_00004_00008_00009=max_left_00004_00008_00009)=tv=SATLiteral(12666))
-7939 -12666 0
-7941 -12666 0
-7943 -12666 0
-7945 -12666 0
-7947 -12666 0
-7949 -12666 0
-7951 3668 -12666 0
-7953 3670 -12666 0
7952 -3669 -12666 0
-3668 7951 -12666 0
-3670 7953 -12666 0
3669 -7952 -12666 0
-7951 -3668 12666 0
-7953 -3670 12666 0
7952 3669 12666 0
c ((max_left_00004_00009_00001=max_left_00004_00009_00002)=tv=SATLiteral(12667))
-3672 3687 -12667 0
-3674 3689 -12667 0
-3676 3691 -12667 0
-3678 3693 -12667 0
-3680 3695 -12667 0
-3682 3697 -12667 0
-3684 3699 -12667 0
-3686 3701 -12667 0
3685 -3700 -12667 0
-3687 3672 -12667 0
-3689 3674 -12667 0
-3691 3676 -12667 0
-3693 3678 -12667 0
-3695 3680 -12667 0
-3697 3682 -12667 0
-3699 3684 -12667 0
-3701 3686 -12667 0
3700 -3685 -12667 0
-3672 -3687 12667 0
-3674 -3689 12667 0
-3676 -3691 12667 0
-3678 -3693 12667 0
-3680 -3695 12667 0
-3682 -3697 12667 0
-3684 -3699 12667 0
-3686 -3701 12667 0
3685 3700 12667 0
c ((variant_fields_00004_00009_00002=max_left_00004_00009_00002)=tv=SATLiteral(12668))
-7969 3687 -12668 0
-7971 3689 -12668 0
-7973 3691 -12668 0
-7975 3693 -12668 0
-7977 3695 -12668 0
-7979 3697 -12668 0
-7981 3699 -12668 0
-7983 3701 -12668 0
7982 -3700 -12668 0
-3687 7969 -12668 0
-3689 7971 -12668 0
-3691 7973 -12668 0
-3693 7975 -12668 0
-3695 7977 -12668 0
-3697 7979 -12668 0
-3699 7981 -12668 0
-3701 7983 -12668 0
3700 -7982 -12668 0
-7969 -3687 12668 0
-7971 -3689 12668 0
-7973 -3691 12668 0
-7975 -3693 12668 0
-7977 -3695 12668 0
-7979 -3697 12668 0
-7981 -3699 12668 0
-7983 -3701 12668 0
7982 3700 12668 0
c ((max_left_00004_00009_00002=max_left_00004_00009_00003)=tv=SATLiteral(12669))
-3687 -12669 0
-3689 -12669 0
-3691 -12669 0
-3693 -12669 0
-3695 -12669 0
-3697 -12669 0
-3699 3702 -12669 0
-3701 3704 -12669 0
3700 -3703 -12669 0
-3702 3699 -12669 0
-3704 3701 -12669 0
3703 -3700 -12669 0
-3699 -3702 12669 0
-3701 -3704 12669 0
3700 3703 12669 0
c ((variant_fields_00004_00009_00003=max_left_00004_00009_00003)=tv=SATLiteral(12670))
-7984 3702 -12670 0
-3702 7984 -12670 0
-3704 -12670 0
3703 -12670 0
-7984 -3702 12670 0
c ((max_left_00004_00009_00003=max_left_00004_00009_00004)=tv=SATLiteral(12671))
-3702 3705 -12671 0
-3704 3707 -12671 0
3703 -3706 -12671 0
-3705 3702 -12671 0
-3707 3704 -12671 0
3706 -3703 -12671 0
-3702 -3705 12671 0
-3704 -3707 12671 0
3703 3706 12671 0
c ((variant_fields_00004_00009_00004=max_left_00004_00009_00004)=tv=SATLiteral(12672))
-7985 -12672 0
-7987 -12672 0
-7989 -12672 0
-7991 -12672 0
-7993 -12672 0
-7995 -12672 0
-7997 3705 -12672 0
-7999 3707 -12672 0
7998 -3706 -12672 0
-3705 7997 -12672 0
-3707 7999 -12672 0
3706 -7998 -12672 0
-7997 -3705 12672 0
-7999 -3707 12672 0
7998 3706 12672 0
c ((max_left_00004_00009_00005=max_left_00004_00009_00006)=tv=SATLiteral(12673))
-3708 3711 -12673 0
-3710 3713 -12673 0
3709 -3712 -12673 0
-3711 3708 -12673 0
-3713 3710 -12673 0
3712 -3709 -12673 0
-3708 -3711 12673 0
-3710 -3713 12673 0
3709 3712 12673 0
c ((variant_fields_00004_00009_00006=max_left_00004_00009_00006)=tv=SATLiteral(12674))
-8001 -12674 0
-8003 -12674 0
-8005 -12674 0
-8007 -12674 0
-8009 -12674 0
-8011 -12674 0
-8013 3711 -12674 0
-8015 3713 -12674 0
8014 -3712 -12674 0
-3711 8013 -12674 0
-3713 8015 -12674 0
3712 -8014 -12674 0
-8013 -3711 12674 0
-8015 -3713 12674 0
8014 3712 12674 0
c ((max_left_00004_00009_00006=max_left_00004_00009_00007)=tv=SATLiteral(12675))
-3711 3714 -12675 0
-3713 3716 -12675 0
3712 -3715 -12675 0
-3714 3711 -12675 0
-3716 3713 -12675 0
3715 -3712 -12675 0
-3711 -3714 12675 0
-3713 -3716 12675 0
3712 3715 12675 0
c ((variant_fields_00004_00009_00007=max_left_00004_00009_00007)=tv=SATLiteral(12676))
-8016 -12676 0
-8018 -12676 0
-8020 -12676 0
-8022 -12676 0
-8024 -12676 0
-8026 -12676 0
-8028 3714 -12676 0
-8030 3716 -12676 0
8029 -3715 -12676 0
-3714 8028 -12676 0
-3716 8030 -12676 0
3715 -8029 -12676 0
-8028 -3714 12676 0
-8030 -3716 12676 0
8029 3715 12676 0
c ((max_left_00004_00009_00007=max_left_00004_00009_00008)=tv=SATLiteral(12677))
-3714 3717 -12677 0
-3716 3719 -12677 0
3715 -3718 -12677 0
-3717 3714 -12677 0
-3719 3716 -12677 0
3718 -3715 -12677 0
-3714 -3717 12677 0
-3716 -3719 12677 0
3715 3718 12677 0
c ((variant_fields_00004_00009_00008=max_left_00004_00009_00008)=tv=SATLiteral(12678))
-8031 -12678 0
-8033 -12678 0
-8035 -12678 0
-8037 -12678 0
-8039 -12678 0
-8041 -12678 0
-8043 3717 -12678 0
-8045 3719 -12678 0
8044 -3718 -12678 0
-3717 8043 -12678 0
-3719 8045 -12678 0
3718 -8044 -12678 0
-8043 -3717 12678 0
-8045 -3719 12678 0
8044 3718 12678 0
c ((max_left_00004_00009_00008=max_left_00004_00009_00009)=tv=SATLiteral(12679))
-3717 3720 -12679 0
-3719 3722 -12679 0
3718 -3721 -12679 0
-3720 3717 -12679 0
-3722 3719 -12679 0
3721 -3718 -12679 0
-3717 -3720 12679 0
-3719 -3722 12679 0
3718 3721 12679 0
c ((variant_fields_00004_00009_00009=max_left_00004_00009_00009)=tv=SATLiteral(12680))
-8046 -12680 0
-8048 -12680 0
-8050 -12680 0
-8052 -12680 0
-8054 -12680 0
-8056 -12680 0
-8058 3720 -12680 0
-8060 3722 -12680 0
8059 -3721 -12680 0
-3720 8058 -12680 0
-3722 8060 -12680 0
3721 -8059 -12680 0
-8058 -3720 12680 0
-8060 -3722 12680 0
8059 3721 12680 0
c (SATLiteral(8061) <-> SATLiteral(10920))
-8061 10920 0
8061 -10920 0
c (SATLiteral(8069) <-> SATLiteral(10947))
-8069 10947 0
8069 -10947 0
c (SATLiteral(8077) <-> SATLiteral(10974))
-8077 10974 0
8077 -10974 0
c (SATLiteral(8085) <-> SATLiteral(11001))
-8085 11001 0
8085 -11001 0
c (SATLiteral(8093) <-> SATLiteral(11028))
-8093 11028 0
8093 -11028 0
c (SATLiteral(8101) <-> SATLiteral(11055))
-8101 11055 0
8101 -11055 0
c (SATLiteral(8109) <-> SATLiteral(11082))
-8109 11082 0
8109 -11082 0
c (SATLiteral(8117) <-> SATLiteral(11109))
-8117 11109 0
8117 -11109 0
c (SATLiteral(8125) <-> SATLiteral(11136))
-8125 11136 0
8125 -11136 0
c (SATLiteral(8133) <-> SATLiteral(11163))
-8133 11163 0
8133 -11163 0
c (SATLiteral(8141) <-> SATLiteral(11190))
-8141 11190 0
8141 -11190 0
c (SATLiteral(8149) <-> SATLiteral(11217))
-8149 11217 0
8149 -11217 0
c (SATLiteral(8161) <-> SATLiteral(11244))
-8161 11244 0
8161 -11244 0
c (SATLiteral(8165) <-> SATLiteral(11271))
-8165 11271 0
8165 -11271 0
c (SATLiteral(8173) <-> SATLiteral(11298))
-8173 11298 0
8173 -11298 0
c (SATLiteral(8181) <-> SATLiteral(11325))
-8181 11325 0
8181 -11325 0
c (SATLiteral(8189) <-> SATLiteral(11352))
-8189 11352 0
8189 -11352 0
c (SATLiteral(8197) <-> SATLiteral(11379))
-8197 11379 0
8197 -11379 0
c (SATLiteral(8208) <-> SATLiteral(11406))
-8208 11406 0
8208 -11406 0
c (SATLiteral(8216) <-> SATLiteral(11433))
-8216 11433 0
8216 -11433 0
c (SATLiteral(8224) <-> SATLiteral(11460))
-8224 11460 0
8224 -11460 0
c (SATLiteral(8232) <-> SATLiteral(11487))
-8232 11487 0
8232 -11487 0
c (SATLiteral(8240) <-> SATLiteral(11514))
-8240 11514 0
8240 -11514 0
c (SATLiteral(8248) <-> SATLiteral(11541))
-8248 11541 0
8248 -11541 0
c (SATLiteral(8256) <-> SATLiteral(11568))
-8256 11568 0
8256 -11568 0
c (SATLiteral(8264) <-> SATLiteral(11595))
-8264 11595 0
8264 -11595 0
c (SATLiteral(8272) <-> SATLiteral(11622))
-8272 11622 0
8272 -11622 0
c (SATLiteral(8281) <-> SATLiteral(11649))
-8281 11649 0
8281 -11649 0
c (SATLiteral(8289) <-> SATLiteral(11676))
-8289 11676 0
8289 -11676 0
c (SATLiteral(8297) <-> SATLiteral(11703))
-8297 11703 0
8297 -11703 0
c (SATLiteral(8305) <-> SATLiteral(11730))
-8305 11730 0
8305 -11730 0
c (SATLiteral(8312) <-> SATLiteral(11757))
-8312 11757 0
8312 -11757 0
c (SATLiteral(8320) <-> SATLiteral(11779))
-8320 11779 0
8320 -11779 0
c (SATLiteral(8328) <-> SATLiteral(11806))
-8328 11806 0
8328 -11806 0
c (SATLiteral(8336) <-> SATLiteral(11833))
-8336 11833 0
8336 -11833 0
c (SATLiteral(8344) <-> SATLiteral(11860))
-8344 11860 0
8344 -11860 0
c ((max_left_00001_00001_00001<max_left_00001_00001_00002)=tv=SATLiteral(8061))
-1049 -8061 0
1034 -1050 -8061 0
1035 -1052 -8061 0
1037 -1054 -8061 0
1039 -1056 -8061 0
1041 -1058 -8061 0
1043 -1060 -8061 0
1045 -1062 -8061 0
1047 -8061 0
1049 -1034 8061 0
1050 -1035 8061 0
1052 -1037 8061 0
1054 -1039 8061 0
1056 -1041 8061 0
1058 -1043 8061 0
1060 -1045 8061 0
1062 -1047 8061 0
c ((max_left_00001_00001_00002<max_left_00001_00001_00003)=tv=SATLiteral(8062))
-1064 -8062 0
1049 -1065 -8062 0
1050 -1067 -8062 0
1052 -1069 -8062 0
1054 -1071 -8062 0
1056 -1073 -8062 0
1058 -1075 -8062 0
1060 -1077 -8062 0
1062 -8062 0
1064 -1049 8062 0
1065 -1050 8062 0
1067 -1052 8062 0
1069 -1054 8062 0
1071 -1056 8062 0
1073 -1058 8062 0
1075 -1060 8062 0
1077 -1062 8062 0
c ((max_left_00001_00001_00003<max_left_00001_00001_00004)=tv=SATLiteral(8063))
-1079 -8063 0
1064 -1080 -8063 0
1065 -1082 -8063 0
1067 -1084 -8063 0
1069 -1086 -8063 0
1071 -1088 -8063 0
1073 -1090 -8063 0
1075 -1092 -8063 0
1077 -8063 0
1079 -1064 8063 0
1080 -1065 8063 0
1082 -1067 8063 0
1084 -1069 8063 0
1086 -1071 8063 0
1088 -1073 8063 0
1090 -1075 8063 0
1092 -1077 8063 0
c ((max_left_00001_00001_00004<max_left_00001_00001_00005)=tv=SATLiteral(8064))
-1094 -8064 0
1079 -1095 -8064 0
1080 -1097 -8064 0
1082 -1099 -8064 0
1084 -1101 -8064 0
1086 -1103 -8064 0
1088 -1105 -8064 0
1090 -1107 -8064 0
1092 -8064 0
1094 -1079 8064 0
1095 -1080 8064 0
1097 -1082 8064 0
1099 -1084 8064 0
1101 -1086 8064 0
1103 -1088 8064 0
1105 -1090 8064 0
1107 -1092 8064 0
c ((max_left_00001_00001_00005<max_left_00001_00001_00006)=tv=SATLiteral(8065))
-1109 -8065 0
1094 -1110 -8065 0
1095 -1112 -8065 0
1097 -1114 -8065 0
1099 -1116 -8065 0
1101 -1118 -8065 0
1103 -1120 -8065 0
1105 -1122 -8065 0
1107 -8065 0
1109 -1094 8065 0
1110 -1095 8065 0
1112 -1097 8065 0
1114 -1099 8065 0
1116 -1101 8065 0
1118 -1103 8065 0
1120 -1105 8065 0
1122 -1107 8065 0
c ((max_left_00001_00001_00006<max_left_00001_00001_00007)=tv=SATLiteral(8066))
1114 -1124 -8066 0
1116 -1125 -8066 0
1118 -1127 -8066 0
1120 -1129 -8066 0
1122 -8066 0
-1109 8066 0
-1110 8066 0
-1112 8066 0
-1114 8066 0
1124 -1116 8066 0
1125 -1118 8066 0
1127 -1120 8066 0
1129 -1122 8066 0
c ((max_left_00001_00001_00007<max_left_00001_00001_00008)=tv=SATLiteral(8067))
-1131 -8067 0
1124 -1132 -8067 0
1125 -1134 -8067 0
1127 -1136 -8067 0
1129 -8067 0
1131 -1124 8067 0
1132 -1125 8067 0
1134 -1127 8067 0
1136 -1129 8067 0
c ((max_left_00001_00001_00008<max_left_00001_00001_00009)=tv=SATLiteral(8068))
-1138 -8068 0
1131 -1139 -8068 0
1132 -1141 -8068 0
1134 -1143 -8068 0
1136 -8068 0
1138 -1131 8068 0
1139 -1132 8068 0
1141 -1134 8068 0
1143 -1136 8068 0
c ((max_left_00001_00002_00001<max_left_00001_00002_00002)=tv=SATLiteral(8069))
-1161 -8069 0
1146 -1162 -8069 0
1147 -1164 -8069 0
1149 -1166 -8069 0
1151 -1168 -8069 0
1153 -1170 -8069 0
1155 -1172 -8069 0
1157 -1174 -8069 0
1159 -8069 0
1161 -1146 8069 0
1162 -1147 8069 0
1164 -1149 8069 0
1166 -1151 8069 0
1168 -1153 8069 0
1170 -1155 8069 0
1172 -1157 8069 0
1174 -1159 8069 0
c ((max_left_00001_00002_00002<max_left_00001_00002_00003)=tv=SATLiteral(8070))
-1176 -8070 0
1161 -1177 -8070 0
1162 -1179 -8070 0
1164 -1181 -8070 0
1166 -1183 -8070 0
1168 -1185 -8070 0
1170 -1187 -8070 0
1172 -1189 -8070 0
1174 -8070 0
1176 -1161 8070 0
1177 -1162 8070 0
1179 -1164 8070 0
1181 -1166 8070 0
1183 -1168 8070 0
1185 -1170 8070 0
1187 -1172 8070 0
1189 -1174 8070 0
c ((max_left_00001_00002_00003<max_left_00001_00002_00004)=tv=SATLiteral(8071))
-1191 -8071 0
1176 -1192 -8071 0
1177 -1194 -8071 0
1179 -1196 -8071 0
1181 -1198 -8071 0
1183 -1200 -8071 0
1185 -1202 -8071 0
1187 -1204 -8071 0
1189 -8071 0
1191 -1176 8071 0
1192 -1177 8071 0
1194 -1179 8071 0
1196 -1181 8071 0
1198 -1183 8071 0
1200 -1185 8071 0
1202 -1187 8071 0
1204 -1189 8071 0
c ((max_left_00001_00002_00004<max_left_00001_00002_00005)=tv=SATLiteral(8072))
-1206 -8072 0
1191 -1207 -8072 0
1192 -1209 -8072 0
1194 -1211 -8072 0
1196 -1213 -8072 0
1198 -1215 -8072 0
1200 -1217 -8072 0
1202 -1219 -8072 0
1204 -8072 0
1206 -1191 8072 0
1207 -1192 8072 0
1209 -1194 8072 0
1211 -1196 8072 0
1213 -1198 8072 0
1215 -1200 8072 0
1217 -1202 8072 0
1219 -1204 8072 0
c ((max_left_00001_00002_00005<max_left_00001_00002_00006)=tv=SATLiteral(8073))
-1221 -8073 0
1206 -1222 -8073 0
1207 -1224 -8073 0
1209 -1226 -8073 0
1211 -1228 -8073 0
1213 -1230 -8073 0
1215 -1232 -8073 0
1217 -1234 -8073 0
1219 -8073 0
1221 -1206 8073 0
1222 -1207 8073 0
1224 -1209 8073 0
1226 -1211 8073 0
1228 -1213 8073 0
1230 -1215 8073 0
1232 -1217 8073 0
1234 -1219 8073 0
c ((max_left_00001_00002_00006<max_left_00001_00002_00007)=tv=SATLiteral(8074))
-1236 -8074 0
1221 -1237 -8074 0
1222 -1239 -8074 0
1224 -1241 -8074 0
1226 -1243 -8074 0
1228 -1245 -8074 0
1230 -1247 -8074 0
1232 -1249 -8074 0
1234 -8074 0
1236 -1221 8074 0
1237 -1222 8074 0
1239 -1224 8074 0
1241 -1226 8074 0
1243 -1228 8074 0
1245 -1230 8074 0
1247 -1232 8074 0
1249 -1234 8074 0
c ((max_left_00001_00002_00007<max_left_00001_00002_00008)=tv=SATLiteral(8075))
1245 -1251 -8075 0
1247 -1252 -8075 0
1249 -8075 0
-1236 8075 0
-1237 8075 0
-1239 8075 0
-1241 8075 0
-1243 8075 0
-1245 8075 0
1251 -1247 8075 0
1252 -1249 8075 0
c ((max_left_00001_00002_00008<max_left_00001_00002_00009)=tv=SATLiteral(8076))
-1254 -8076 0
1251 -1255 -8076 0
1252 -8076 0
1254 -1251 8076 0
1255 -1252 8076 0
c ((max_left_00001_00003_00001<max_left_00001_00003_00002)=tv=SATLiteral(8077))
-1273 -8077 0
1258 -1274 -8077 0
1259 -1276 -8077 0
1261 -1278 -8077 0
1263 -1280 -8077 0
1265 -1282 -8077 0
1267 -1284 -8077 0
1269 -1286 -8077 0
1271 -8077 0
1273 -1258 8077 0
1274 -1259 8077 0
1276 -1261 8077 0
1278 -1263 8077 0
1280 -1265 8077 0
1282 -1267 8077 0
1284 -1269 8077 0
1286 -1271 8077 0
c ((max_left_00001_00003_00002<max_left_00001_00003_00003)=tv=SATLiteral(8078))
-1288 -8078 0
1273 -1289 -8078 0
1274 -1291 -8078 0
1276 -1293 -8078 0
1278 -1295 -8078 0
1280 -1297 -8078 0
1282 -1299 -8078 0
1284 -1301 -8078 0
1286 -8078 0
1288 -1273 8078 0
1289 -1274 8078 0
1291 -1276 8078 0
1293 -1278 8078 0
1295 -1280 8078 0
1297 -1282 8078 0
1299 -1284 8078 0
1301 -1286 8078 0
c ((max_left_00001_00003_00003<max_left_00001_00003_00004)=tv=SATLiteral(8079))
-1303 -8079 0
1288 -1304 -8079 0
1289 -1306 -8079 0
1291 -1308 -8079 0
1293 -1310 -8079 0
1295 -1312 -8079 0
1297 -1314 -8079 0
1299 -1316 -8079 0
1301 -8079 0
1303 -1288 8079 0
1304 -1289 8079 0
1306 -1291 8079 0
1308 -1293 8079 0
1310 -1295 8079 0
1312 -1297 8079 0
1314 -1299 8079 0
1316 -1301 8079 0
c ((max_left_00001_00003_00004<max_left_00001_00003_00005)=tv=SATLiteral(8080))
-1318 -8080 0
1303 -1319 -8080 0
1304 -1321 -8080 0
1306 -1323 -8080 0
1308 -1325 -8080 0
1310 -1327 -8080 0
1312 -1329 -8080 0
1314 -1331 -8080 0
1316 -8080 0
1318 -1303 8080 0
1319 -1304 8080 0
1321 -1306 8080 0
1323 -1308 8080 0
1325 -1310 8080 0
1327 -1312 8080 0
1329 -1314 8080 0
1331 -1316 8080 0
c ((max_left_00001_00003_00005<max_left_00001_00003_00006)=tv=SATLiteral(8081))
1325 -1333 -8081 0
1327 -1334 -8081 0
1329 -1336 -8081 0
1331 -8081 0
-1318 8081 0
-1319 8081 0
-1321 8081 0
-1323 8081 0
-1325 8081 0
1333 -1327 8081 0
1334 -1329 8081 0
1336 -1331 8081 0
c ((max_left_00001_00003_00006<max_left_00001_00003_00007)=tv=SATLiteral(8082))
-1338 -8082 0
1333 -1339 -8082 0
1334 -1341 -8082 0
1336 -8082 0
1338 -1333 8082 0
1339 -1334 8082 0
1341 -1336 8082 0
c ((max_left_00001_00003_00007<max_left_00001_00003_00008)=tv=SATLiteral(8083))
-1343 -8083 0
1338 -1344 -8083 0
1339 -1346 -8083 0
1341 -8083 0
1343 -1338 8083 0
1344 -1339 8083 0
1346 -1341 8083 0
c ((max_left_00001_00003_00008<max_left_00001_00003_00009)=tv=SATLiteral(8084))
-1348 -8084 0
1343 -1349 -8084 0
1344 -1351 -8084 0
1346 -8084 0
1348 -1343 8084 0
1349 -1344 8084 0
1351 -1346 8084 0
c ((max_left_00001_00004_00001<max_left_00001_00004_00002)=tv=SATLiteral(8085))
-1369 -8085 0
1354 -1370 -8085 0
1355 -1372 -8085 0
1357 -1374 -8085 0
1359 -1376 -8085 0
1361 -1378 -8085 0
1363 -1380 -8085 0
1365 -1382 -8085 0
1367 -8085 0
1369 -1354 8085 0
1370 -1355 8085 0
1372 -1357 8085 0
1374 -1359 8085 0
1376 -1361 8085 0
1378 -1363 8085 0
1380 -1365 8085 0
1382 -1367 8085 0
c ((max_left_00001_00004_00002<max_left_00001_00004_00003)=tv=SATLiteral(8086))
-1384 -8086 0
1369 -1385 -8086 0
1370 -1387 -8086 0
1372 -1389 -8086 0
1374 -1391 -8086 0
1376 -1393 -8086 0
1378 -1395 -8086 0
1380 -1397 -8086 0
1382 -8086 0
1384 -1369 8086 0
1385 -1370 8086 0
1387 -1372 8086 0
1389 -1374 8086 0
1391 -1376 8086 0
1393 -1378 8086 0
1395 -1380 8086 0
1397 -1382 8086 0
c ((max_left_00001_00004_00003<max_left_00001_00004_00004)=tv=SATLiteral(8087))
-1399 -8087 0
1384 -1400 -8087 0
1385 -1402 -8087 0
1387 -1404 -8087 0
1389 -1406 -8087 0
1391 -1408 -8087 0
1393 -1410 -8087 0
1395 -1412 -8087 0
1397 -8087 0
1399 -1384 8087 0
1400 -1385 8087 0
1402 -1387 8087 0
1404 -1389 8087 0
1406 -1391 8087 0
1408 -1393 8087 0
1410 -1395 8087 0
1412 -1397 8087 0
c ((max_left_00001_00004_00004<max_left_00001_00004_00005)=tv=SATLiteral(8088))
-1414 -8088 0
1399 -1415 -8088 0
1400 -1417 -8088 0
1402 -1419 -8088 0
1404 -1421 -8088 0
1406 -1423 -8088 0
1408 -1425 -8088 0
1410 -1427 -8088 0
1412 -8088 0
1414 -1399 8088 0
1415 -1400 8088 0
1417 -1402 8088 0
1419 -1404 8088 0
1421 -1406 8088 0
1423 -1408 8088 0
1425 -1410 8088 0
1427 -1412 8088 0
c ((max_left_00001_00004_00005<max_left_00001_00004_00006)=tv=SATLiteral(8089))
-1429 -8089 0
1414 -1430 -8089 0
1415 -1432 -8089 0
1417 -1434 -8089 0
1419 -1436 -8089 0
1421 -1438 -8089 0
1423 -1440 -8089 0
1425 -1442 -8089 0
1427 -8089 0
1429 -1414 8089 0
1430 -1415 8089 0
1432 -1417 8089 0
1434 -1419 8089 0
1436 -1421 8089 0
1438 -1423 8089 0
1440 -1425 8089 0
1442 -1427 8089 0
c ((max_left_00001_00004_00006<max_left_00001_00004_00007)=tv=SATLiteral(8090))
-1444 -8090 0
1429 -1445 -8090 0
1430 -1447 -8090 0
1432 -1449 -8090 0
1434 -1451 -8090 0
1436 -1453 -8090 0
1438 -1455 -8090 0
1440 -1457 -8090 0
1442 -8090 0
1444 -1429 8090 0
1445 -1430 8090 0
1447 -1432 8090 0
1449 -1434 8090 0
1451 -1436 8090 0
1453 -1438 8090 0
1455 -1440 8090 0
1457 -1442 8090 0
c ((max_left_00001_00004_00007<max_left_00001_00004_00008)=tv=SATLiteral(8091))
1445 -1459 -8091 0
1447 -1460 -8091 0
1449 -1462 -8091 0
1451 -1464 -8091 0
1453 -1466 -8091 0
1455 -1468 -8091 0
1457 -8091 0
-1444 8091 0
-1445 8091 0
1459 -1447 8091 0
1460 -1449 8091 0
1462 -1451 8091 0
1464 -1453 8091 0
1466 -1455 8091 0
1468 -1457 8091 0
c ((max_left_00001_00004_00008<max_left_00001_00004_00009)=tv=SATLiteral(8092))
-1470 -8092 0
1459 -1471 -8092 0
1460 -1473 -8092 0
1462 -1475 -8092 0
1464 -1477 -8092 0
1466 -1479 -8092 0
1468 -8092 0
1470 -1459 8092 0
1471 -1460 8092 0
1473 -1462 8092 0
1475 -1464 8092 0
1477 -1466 8092 0
1479 -1468 8092 0
c ((max_left_00001_00005_00001<max_left_00001_00005_00002)=tv=SATLiteral(8093))
-1497 -8093 0
1482 -1498 -8093 0
1483 -1500 -8093 0
1485 -1502 -8093 0
1487 -1504 -8093 0
1489 -1506 -8093 0
1491 -1508 -8093 0
1493 -1510 -8093 0
1495 -8093 0
1497 -1482 8093 0
1498 -1483 8093 0
1500 -1485 8093 0
1502 -1487 8093 0
1504 -1489 8093 0
1506 -1491 8093 0
1508 -1493 8093 0
1510 -1495 8093 0
c ((max_left_00001_00005_00002<max_left_00001_00005_00003)=tv=SATLiteral(8094))
-1512 -8094 0
1497 -1513 -8094 0
1498 -1515 -8094 0
1500 -1517 -8094 0
1502 -1519 -8094 0
1504 -1521 -8094 0
1506 -1523 -8094 0
1508 -1525 -8094 0
1510 -8094 0
1512 -1497 8094 0
1513 -1498 8094 0
1515 -1500 8094 0
1517 -1502 8094 0
1519 -1504 8094 0
1521 -1506 8094 0
1523 -1508 8094 0
1525 -1510 8094 0
c ((max_left_00001_00005_00003<max_left_00001_00005_00004)=tv=SATLiteral(8095))
-1527 -8095 0
1512 -1528 -8095 0
1513 -1530 -8095 0
1515 -1532 -8095 0
1517 -1534 -8095 0
1519 -1536 -8095 0
1521 -1538 -8095 0
1523 -1540 -8095 0
1525 -8095 0
1527 -1512 8095 0
1528 -1513 8095 0
1530 -1515 8095 0
1532 -1517 8095 0
1534 -1519 8095 0
1536 -1521 8095 0
1538 -1523 8095 0
1540 -1525 8095 0
c ((max_left_00001_00005_00004<max_left_00001_00005_00005)=tv=SATLiteral(8096))
-1542 -8096 0
1527 -1543 -8096 0
1528 -1545 -8096 0
1530 -1547 -8096 0
1532 -1549 -8096 0
1534 -1551 -8096 0
1536 -1553 -8096 0
1538 -1555 -8096 0
1540 -8096 0
1542 -1527 8096 0
1543 -1528 8096 0
1545 -1530 8096 0
1547 -1532 8096 0
1549 -1534 8096 0
1551 -1536 8096 0
1553 -1538 8096 0
1555 -1540 8096 0
c ((max_left_00001_00005_00005<max_left_00001_00005_00006)=tv=SATLiteral(8097))
-1557 -8097 0
1542 -1558 -8097 0
1543 -1560 -8097 0
1545 -1562 -8097 0
1547 -1564 -8097 0
1549 -1566 -8097 0
1551 -1568 -8097 0
1553 -1570 -8097 0
1555 -8097 0
1557 -1542 8097 0
1558 -1543 8097 0
1560 -1545 8097 0
1562 -1547 8097 0
1564 -1549 8097 0
1566 -1551 8097 0
1568 -1553 8097 0
1570 -1555 8097 0
c ((max_left_00001_00005_00006<max_left_00001_00005_00007)=tv=SATLiteral(8098))
1566 -1572 -8098 0
1568 -1573 -8098 0
1570 -8098 0
-1557 8098 0
-1558 8098 0
-1560 8098 0
-1562 8098 0
-1564 8098 0
-1566 8098 0
1572 -1568 8098 0
1573 -1570 8098 0
c ((max_left_00001_00005_00007<max_left_00001_00005_00008)=tv=SATLiteral(8099))
-1575 -8099 0
1572 -1576 -8099 0
1573 -8099 0
1575 -1572 8099 0
1576 -1573 8099 0
c ((max_left_00001_00005_00008<max_left_00001_00005_00009)=tv=SATLiteral(8100))
-1578 -8100 0
1575 -1579 -8100 0
1576 -8100 0
1578 -1575 8100 0
1579 -1576 8100 0
c ((max_left_00001_00006_00001<max_left_00001_00006_00002)=tv=SATLiteral(8101))
1593 1597 -8101 0
1595 -8101 0
-1582 8101 0
-1583 8101 0
-1585 8101 0
-1587 8101 0
-1589 8101 0
-1591 8101 0
-1593 8101 0
-1597 -1595 8101 0
c ((max_left_00001_00006_00002<max_left_00001_00006_00003)=tv=SATLiteral(8102))
1598 -8102 0
-1597 -8102 0
-1598 1597 8102 0
c ((max_left_00001_00006_00003<max_left_00001_00006_00004)=tv=SATLiteral(8103))
1599 -8103 0
-1598 -8103 0
-1599 1598 8103 0
c ((max_left_00001_00006_00004<max_left_00001_00006_00005)=tv=SATLiteral(8104))
1600 -8104 0
-1599 -8104 0
-1600 1599 8104 0
c ((max_left_00001_00006_00005<max_left_00001_00006_00006)=tv=SATLiteral(8105))
1601 -8105 0
-1600 -8105 0
-1601 1600 8105 0
c ((max_left_00001_00006_00006<max_left_00001_00006_00007)=tv=SATLiteral(8106))
1602 -8106 0
-1601 -8106 0
-1602 1601 8106 0
c ((max_left_00001_00006_00007<max_left_00001_00006_00008)=tv=SATLiteral(8107))
1603 -8107 0
-1602 -8107 0
-1603 1602 8107 0
c ((max_left_00001_00006_00008<max_left_00001_00006_00009)=tv=SATLiteral(8108))
1604 -8108 0
-1603 -8108 0
-1604 1603 8108 0
c ((max_left_00001_00007_00001<max_left_00001_00007_00002)=tv=SATLiteral(8109))
-1621 -8109 0
1606 -1622 -8109 0
1607 -1624 -8109 0
1609 -1626 -8109 0
1611 -1628 -8109 0
1613 -1630 -8109 0
1615 -1632 -8109 0
1617 -1634 -8109 0
1619 -8109 0
1621 -1606 8109 0
1622 -1607 8109 0
1624 -1609 8109 0
1626 -1611 8109 0
1628 -1613 8109 0
1630 -1615 8109 0
1632 -1617 8109 0
1634 -1619 8109 0
c ((max_left_00001_00007_00002<max_left_00001_00007_00003)=tv=SATLiteral(8110))
-1636 -8110 0
1621 -1637 -8110 0
1622 -1639 -8110 0
1624 -1641 -8110 0
1626 -1643 -8110 0
1628 -1645 -8110 0
1630 -1647 -8110 0
1632 -1649 -8110 0
1634 -8110 0
1636 -1621 8110 0
1637 -1622 8110 0
1639 -1624 8110 0
1641 -1626 8110 0
1643 -1628 8110 0
1645 -1630 8110 0
1647 -1632 8110 0
1649 -1634 8110 0
c ((max_left_00001_00007_00003<max_left_00001_00007_00004)=tv=SATLiteral(8111))
1637 -1651 -8111 0
1639 -1652 -8111 0
1641 -1654 -8111 0
1643 -1656 -8111 0
1645 -1658 -8111 0
1647 -1660 -8111 0
1649 -8111 0
-1636 8111 0
-1637 8111 0
1651 -1639 8111 0
1652 -1641 8111 0
1654 -1643 8111 0
1656 -1645 8111 0
1658 -1647 8111 0
1660 -1649 8111 0
c ((max_left_00001_00007_00004<max_left_00001_00007_00005)=tv=SATLiteral(8112))
-1662 -8112 0
1651 -1663 -8112 0
1652 -1665 -8112 0
1654 -1667 -8112 0
1656 -1669 -8112 0
1658 -1671 -8112 0
1660 -8112 0
1662 -1651 8112 0
1663 -1652 8112 0
1665 -1654 8112 0
1667 -1656 8112 0
1669 -1658 8112 0
1671 -1660 8112 0
c ((max_left_00001_00007_00005<max_left_00001_00007_00006)=tv=SATLiteral(8113))
-1673 -8113 0
1662 -1674 -8113 0
1663 -1676 -8113 0
1665 -1678 -8113 0
1667 -1680 -8113 0
1669 -1682 -8113 0
1671 -8113 0
1673 -1662 8113 0
1674 -1663 8113 0
1676 -1665 8113 0
1678 -1667 8113 0
1680 -1669 8113 0
1682 -1671 8113 0
c ((max_left_00001_00007_00006<max_left_00001_00007_00007)=tv=SATLiteral(8114))
1676 -1684 -8114 0
1678 -1685 -8114 0
1680 -1687 -8114 0
1682 -8114 0
-1673 8114 0
-1674 8114 0
-1676 8114 0
1684 -1678 8114 0
1685 -1680 8114 0
1687 -1682 8114 0
c ((max_left_00001_00007_00007<max_left_00001_00007_00008)=tv=SATLiteral(8115))
-1689 -8115 0
1684 -1690 -8115 0
1685 -1692 -8115 0
1687 -8115 0
1689 -1684 8115 0
1690 -1685 8115 0
1692 -1687 8115 0
c ((max_left_00001_00007_00008<max_left_00001_00007_00009)=tv=SATLiteral(8116))
1689 -1694 -8116 0
1690 -1695 -8116 0
1692 -8116 0
-1689 8116 0
1694 -1690 8116 0
1695 -1692 8116 0
c ((max_left_00001_00008_00001<max_left_00001_00008_00002)=tv=SATLiteral(8117))
-1713 -8117 0
1698 -1714 -8117 0
1699 -1716 -8117 0
1701 -1718 -8117 0
1703 -1720 -8117 0
1705 -1722 -8117 0
1707 -1724 -8117 0
1709 -1726 -8117 0
1711 -8117 0
1713 -1698 8117 0
1714 -1699 8117 0
1716 -1701 8117 0
1718 -1703 8117 0
1720 -1705 8117 0
1722 -1707 8117 0
1724 -1709 8117 0
1726 -1711 8117 0
c ((max_left_00001_00008_00002<max_left_00001_00008_00003)=tv=SATLiteral(8118))
1724 1728 -8118 0
1726 -8118 0
-1713 8118 0
-1714 8118 0
-1716 8118 0
-1718 8118 0
-1720 8118 0
-1722 8118 0
-1724 8118 0
-1728 -1726 8118 0
c ((max_left_00001_00008_00003<max_left_00001_00008_00004)=tv=SATLiteral(8119))
1729 -8119 0
-1728 -8119 0
-1729 1728 8119 0
c ((max_left_00001_00008_00004<max_left_00001_00008_00005)=tv=SATLiteral(8120))
1730 -8120 0
-1729 -8120 0
-1730 1729 8120 0
c ((max_left_00001_00008_00005<max_left_00001_00008_00006)=tv=SATLiteral(8121))
1731 -8121 0
-1730 -8121 0
-1731 1730 8121 0
c ((max_left_00001_00008_00006<max_left_00001_00008_00007)=tv=SATLiteral(8122))
1732 -8122 0
-1731 -8122 0
-1732 1731 8122 0
c ((max_left_00001_00008_00007<max_left_00001_00008_00008)=tv=SATLiteral(8123))
1733 -8123 0
-1732 -8123 0
-1733 1732 8123 0
c ((max_left_00001_00008_00008<max_left_00001_00008_00009)=tv=SATLiteral(8124))
1734 -8124 0
-1733 -8124 0
-1734 1733 8124 0
c ((max_left_00001_00009_00001<max_left_00001_00009_00002)=tv=SATLiteral(8125))
-1751 -8125 0
1736 -1752 -8125 0
1737 -1754 -8125 0
1739 -1756 -8125 0
1741 -1758 -8125 0
1743 -1760 -8125 0
1745 -1762 -8125 0
1747 -1764 -8125 0
1749 -8125 0
1751 -1736 8125 0
1752 -1737 8125 0
1754 -1739 8125 0
1756 -1741 8125 0
1758 -1743 8125 0
1760 -1745 8125 0
1762 -1747 8125 0
1764 -1749 8125 0
c ((max_left_00001_00009_00002<max_left_00001_00009_00003)=tv=SATLiteral(8126))
-1766 -8126 0
1751 -1767 -8126 0
1752 -1769 -8126 0
1754 -1771 -8126 0
1756 -1773 -8126 0
1758 -1775 -8126 0
1760 -1777 -8126 0
1762 -1779 -8126 0
1764 -8126 0
1766 -1751 8126 0
1767 -1752 8126 0
1769 -1754 8126 0
1771 -1756 8126 0
1773 -1758 8126 0
1775 -1760 8126 0
1777 -1762 8126 0
1779 -1764 8126 0
c ((max_left_00001_00009_00003<max_left_00001_00009_00004)=tv=SATLiteral(8127))
-1781 -8127 0
1766 -1782 -8127 0
1767 -1784 -8127 0
1769 -1786 -8127 0
1771 -1788 -8127 0
1773 -1790 -8127 0
1775 -1792 -8127 0
1777 -1794 -8127 0
1779 -8127 0
1781 -1766 8127 0
1782 -1767 8127 0
1784 -1769 8127 0
1786 -1771 8127 0
1788 -1773 8127 0
1790 -1775 8127 0
1792 -1777 8127 0
1794 -1779 8127 0
c ((max_left_00001_00009_00004<max_left_00001_00009_00005)=tv=SATLiteral(8128))
-1796 -8128 0
1781 -1797 -8128 0
1782 -1799 -8128 0
1784 -1801 -8128 0
1786 -1803 -8128 0
1788 -1805 -8128 0
1790 -1807 -8128 0
1792 -1809 -8128 0
1794 -8128 0
1796 -1781 8128 0
1797 -1782 8128 0
1799 -1784 8128 0
1801 -1786 8128 0
1803 -1788 8128 0
1805 -1790 8128 0
1807 -1792 8128 0
1809 -1794 8128 0
c ((max_left_00001_00009_00005<max_left_00001_00009_00006)=tv=SATLiteral(8129))
-1811 -8129 0
1796 -1812 -8129 0
1797 -1814 -8129 0
1799 -1816 -8129 0
1801 -1818 -8129 0
1803 -1820 -8129 0
1805 -1822 -8129 0
1807 -1824 -8129 0
1809 -8129 0
1811 -1796 8129 0
1812 -1797 8129 0
1814 -1799 8129 0
1816 -1801 8129 0
1818 -1803 8129 0
1820 -1805 8129 0
1822 -1807 8129 0
1824 -1809 8129 0
c ((max_left_00001_00009_00006<max_left_00001_00009_00007)=tv=SATLiteral(8130))
1822 1826 -8130 0
1824 -8130 0
-1811 8130 0
-1812 8130 0
-1814 8130 0
-1816 8130 0
-1818 8130 0
-1820 8130 0
-1822 8130 0
-1826 -1824 8130 0
c ((max_left_00001_00009_00007<max_left_00001_00009_00008)=tv=SATLiteral(8131))
1827 -8131 0
-1826 -8131 0
-1827 1826 8131 0
c ((max_left_00001_00009_00008<max_left_00001_00009_00009)=tv=SATLiteral(8132))
1828 -8132 0
-1827 -8132 0
-1828 1827 8132 0
c ((max_left_00002_00001_00001<max_left_00002_00001_00002)=tv=SATLiteral(8133))
-1845 -8133 0
1830 -1846 -8133 0
1831 -1848 -8133 0
1833 -1850 -8133 0
1835 -1852 -8133 0
1837 -1854 -8133 0
1839 -1856 -8133 0
1841 -1858 -8133 0
1843 -8133 0
1845 -1830 8133 0
1846 -1831 8133 0
1848 -1833 8133 0
1850 -1835 8133 0
1852 -1837 8133 0
1854 -1839 8133 0
1856 -1841 8133 0
1858 -1843 8133 0
c ((max_left_00002_00001_00002<max_left_00002_00001_00003)=tv=SATLiteral(8134))
-1860 -8134 0
1845 -1861 -8134 0
1846 -1863 -8134 0
1848 -1865 -8134 0
1850 -1867 -8134 0
1852 -1869 -8134 0
1854 -1871 -8134 0
1856 -1873 -8134 0
1858 -8134 0
1860 -1845 8134 0
1861 -1846 8134 0
1863 -1848 8134 0
1865 -1850 8134 0
1867 -1852 8134 0
1869 -1854 8134 0
1871 -1856 8134 0
1873 -1858 8134 0
c ((max_left_00002_00001_00003<max_left_00002_00001_00004)=tv=SATLiteral(8135))
-1875 -8135 0
1860 -1876 -8135 0
1861 -1878 -8135 0
1863 -1880 -8135 0
1865 -1882 -8135 0
1867 -1884 -8135 0
1869 -1886 -8135 0
1871 -1888 -8135 0
1873 -8135 0
1875 -1860 8135 0
1876 -1861 8135 0
1878 -1863 8135 0
1880 -1865 8135 0
1882 -1867 8135 0
1884 -1869 8135 0
1886 -1871 8135 0
1888 -1873 8135 0
c ((max_left_00002_00001_00004<max_left_00002_00001_00005)=tv=SATLiteral(8136))
-1890 -8136 0
1875 -1891 -8136 0
1876 -1893 -8136 0
1878 -1895 -8136 0
1880 -1897 -8136 0
1882 -1899 -8136 0
1884 -1901 -8136 0
1886 -1903 -8136 0
1888 -8136 0
1890 -1875 8136 0
1891 -1876 8136 0
1893 -1878 8136 0
1895 -1880 8136 0
1897 -1882 8136 0
1899 -1884 8136 0
1901 -1886 8136 0
1903 -1888 8136 0
c ((max_left_00002_00001_00005<max_left_00002_00001_00006)=tv=SATLiteral(8137))
-1905 -8137 0
1890 -1906 -8137 0
1891 -1908 -8137 0
1893 -1910 -8137 0
1895 -1912 -8137 0
1897 -1914 -8137 0
1899 -1916 -8137 0
1901 -1918 -8137 0
1903 -8137 0
1905 -1890 8137 0
1906 -1891 8137 0
1908 -1893 8137 0
1910 -1895 8137 0
1912 -1897 8137 0
1914 -1899 8137 0
1916 -1901 8137 0
1918 -1903 8137 0
c ((max_left_00002_00001_00006<max_left_00002_00001_00007)=tv=SATLiteral(8138))
-1920 -8138 0
1905 -1921 -8138 0
1906 -1923 -8138 0
1908 -1925 -8138 0
1910 -1927 -8138 0
1912 -1929 -8138 0
1914 -1931 -8138 0
1916 -1933 -8138 0
1918 -8138 0
1920 -1905 8138 0
1921 -1906 8138 0
1923 -1908 8138 0
1925 -1910 8138 0
1927 -1912 8138 0
1929 -1914 8138 0
1931 -1916 8138 0
1933 -1918 8138 0
c ((max_left_00002_00001_00007<max_left_00002_00001_00008)=tv=SATLiteral(8139))
-1935 -8139 0
1920 -1936 -8139 0
1921 -1938 -8139 0
1923 -1940 -8139 0
1925 -1942 -8139 0
1927 -1944 -8139 0
1929 -1946 -8139 0
1931 -1948 -8139 0
1933 -8139 0
1935 -1920 8139 0
1936 -1921 8139 0
1938 -1923 8139 0
1940 -1925 8139 0
1942 -1927 8139 0
1944 -1929 8139 0
1946 -1931 8139 0
1948 -1933 8139 0
c ((max_left_00002_00001_00008<max_left_00002_00001_00009)=tv=SATLiteral(8140))
-1950 -8140 0
1935 -1951 -8140 0
1936 -1953 -8140 0
1938 -1955 -8140 0
1940 -1957 -8140 0
1942 -1959 -8140 0
1944 -1961 -8140 0
1946 -1963 -8140 0
1948 -8140 0
1950 -1935 8140 0
1951 -1936 8140 0
1953 -1938 8140 0
1955 -1940 8140 0
1957 -1942 8140 0
1959 -1944 8140 0
1961 -1946 8140 0
1963 -1948 8140 0
c ((max_left_00002_00002_00001<max_left_00002_00002_00002)=tv=SATLiteral(8141))
-1981 -8141 0
1966 -1982 -8141 0
1967 -1984 -8141 0
1969 -1986 -8141 0
1971 -1988 -8141 0
1973 -1990 -8141 0
1975 -1992 -8141 0
1977 -1994 -8141 0
1979 -8141 0
1981 -1966 8141 0
1982 -1967 8141 0
1984 -1969 8141 0
1986 -1971 8141 0
1988 -1973 8141 0
1990 -1975 8141 0
1992 -1977 8141 0
1994 -1979 8141 0
c ((max_left_00002_00002_00002<max_left_00002_00002_00003)=tv=SATLiteral(8142))
-1996 -8142 0
1981 -1997 -8142 0
1982 -1999 -8142 0
1984 -2001 -8142 0
1986 -2003 -8142 0
1988 -2005 -8142 0
1990 -2007 -8142 0
1992 -2009 -8142 0
1994 -8142 0
1996 -1981 8142 0
1997 -1982 8142 0
1999 -1984 8142 0
2001 -1986 8142 0
2003 -1988 8142 0
2005 -1990 8142 0
2007 -1992 8142 0
2009 -1994 8142 0
c ((max_left_00002_00002_00003<max_left_00002_00002_00004)=tv=SATLiteral(8143))
-2011 -8143 0
1996 -2012 -8143 0
1997 -2014 -8143 0
1999 -2016 -8143 0
2001 -2018 -8143 0
2003 -2020 -8143 0
2005 -2022 -8143 0
2007 -2024 -8143 0
2009 -8143 0
2011 -1996 8143 0
2012 -1997 8143 0
2014 -1999 8143 0
2016 -2001 8143 0
2018 -2003 8143 0
2020 -2005 8143 0
2022 -2007 8143 0
2024 -2009 8143 0
c ((max_left_00002_00002_00004<max_left_00002_00002_00005)=tv=SATLiteral(8144))
-2026 -8144 0
2011 -2027 -8144 0
2012 -2029 -8144 0
2014 -2031 -8144 0
2016 -2033 -8144 0
2018 -2035 -8144 0
2020 -2037 -8144 0
2022 -2039 -8144 0
2024 -8144 0
2026 -2011 8144 0
2027 -2012 8144 0
2029 -2014 8144 0
2031 -2016 8144 0
2033 -2018 8144 0
2035 -2020 8144 0
2037 -2022 8144 0
2039 -2024 8144 0
c ((max_left_00002_00002_00005<max_left_00002_00002_00006)=tv=SATLiteral(8145))
2037 2041 -8145 0
2039 -8145 0
-2026 8145 0
-2027 8145 0
-2029 8145 0
-2031 8145 0
-2033 8145 0
-2035 8145 0
-2037 8145 0
-2041 -2039 8145 0
c ((max_left_00002_00002_00006<max_left_00002_00002_00007)=tv=SATLiteral(8146))
2042 -8146 0
-2041 -8146 0
-2042 2041 8146 0
c ((max_left_00002_00002_00007<max_left_00002_00002_00008)=tv=SATLiteral(8147))
2043 -8147 0
-2042 -8147 0
-2043 2042 8147 0
c ((max_left_00002_00002_00008<max_left_00002_00002_00009)=tv=SATLiteral(8148))
2044 -8148 0
-2043 -8148 0
-2044 2043 8148 0
c ((max_left_00002_00003_00001<max_left_00002_00003_00002)=tv=SATLiteral(8149))
-2061 -8149 0
2046 -2062 -8149 0
2047 -2064 -8149 0
2049 -2066 -8149 0
2051 -2068 -8149 0
2053 -2070 -8149 0
2055 -2072 -8149 0
2057 -2074 -8149 0
2059 -8149 0
2061 -2046 8149 0
2062 -2047 8149 0
2064 -2049 8149 0
2066 -2051 8149 0
2068 -2053 8149 0
2070 -2055 8149 0
2072 -2057 8149 0
2074 -2059 8149 0
c ((max_left_00002_00003_00002<max_left_00002_00003_00003)=tv=SATLiteral(8150))
-2076 -8150 0
2061 -2077 -8150 0
2062 -2079 -8150 0
2064 -2081 -8150 0
2066 -2083 -8150 0
2068 -2085 -8150 0
2070 -2087 -8150 0
2072 -2089 -8150 0
2074 -8150 0
2076 -2061 8150 0
2077 -2062 8150 0
2079 -2064 8150 0
2081 -2066 8150 0
2083 -2068 8150 0
2085 -2070 8150 0
2087 -2072 8150 0
2089 -2074 8150 0
c ((max_left_00002_00003_00003<max_left_00002_00003_00004)=tv=SATLiteral(8151))
-2091 -8151 0
2076 -2092 -8151 0
2077 -2094 -8151 0
2079 -2096 -8151 0
2081 -2098 -8151 0
2083 -2100 -8151 0
2085 -2102 -8151 0
2087 -2104 -8151 0
2089 -8151 0
2091 -2076 8151 0
2092 -2077 8151 0
2094 -2079 8151 0
2096 -2081 8151 0
2098 -2083 8151 0
2100 -2085 8151 0
2102 -2087 8151 0
2104 -2089 8151 0
c ((max_left_00002_00003_00004<max_left_00002_00003_00005)=tv=SATLiteral(8152))
-2106 -8152 0
2091 -2107 -8152 0
2092 -2109 -8152 0
2094 -2111 -8152 0
2096 -2113 -8152 0
2098 -2115 -8152 0
2100 -2117 -8152 0
2102 -2119 -8152 0
2104 -8152 0
2106 -2091 8152 0
2107 -2092 8152 0
2109 -2094 8152 0
2111 -2096 8152 0
2113 -2098 8152 0
2115 -2100 8152 0
2117 -2102 8152 0
2119 -2104 8152 0
c ((max_left_00002_00003_00005<max_left_00002_00003_00006)=tv=SATLiteral(8153))
-2121 -8153 0
2106 -2122 -8153 0
2107 -2124 -8153 0
2109 -2126 -8153 0
2111 -2128 -8153 0
2113 -2130 -8153 0
2115 -2132 -8153 0
2117 -2134 -8153 0
2119 -8153 0
2121 -2106 8153 0
2122 -2107 8153 0
2124 -2109 8153 0
2126 -2111 8153 0
2128 -2113 8153 0
2130 -2115 8153 0
2132 -2117 8153 0
2134 -2119 8153 0
c ((max_left_00002_00003_00006<max_left_00002_00003_00007)=tv=SATLiteral(8154))
-2136 -8154 0
2121 -2137 -8154 0
2122 -2139 -8154 0
2124 -2141 -8154 0
2126 -2143 -8154 0
2128 -2145 -8154 0
2130 -2147 -8154 0
2132 -2149 -8154 0
2134 -8154 0
2136 -2121 8154 0
2137 -2122 8154 0
2139 -2124 8154 0
2141 -2126 8154 0
2143 -2128 8154 0
2145 -2130 8154 0
2147 -2132 8154 0
2149 -2134 8154 0
c ((max_left_00002_00003_00007<max_left_00002_00003_00008)=tv=SATLiteral(8155))
2147 2151 -8155 0
2149 -8155 0
-2136 8155 0
-2137 8155 0
-2139 8155 0
-2141 8155 0
-2143 8155 0
-2145 8155 0
-2147 8155 0
-2151 -2149 8155 0
c ((max_left_00002_00003_00008<max_left_00002_00003_00009)=tv=SATLiteral(8156))
2152 -8156 0
-2151 -8156 0
-2152 2151 8156 0
c ((max_left_00002_00004_00001<max_left_00002_00004_00002)=tv=SATLiteral(8157))
-2169 -8157 0
2154 -2170 -8157 0
2155 -2172 -8157 0
2157 -2174 -8157 0
2159 -2176 -8157 0
2161 -2178 -8157 0
2163 -2180 -8157 0
2165 -2182 -8157 0
2167 -8157 0
2169 -2154 8157 0
2170 -2155 8157 0
2172 -2157 8157 0
2174 -2159 8157 0
2176 -2161 8157 0
2178 -2163 8157 0
2180 -2165 8157 0
2182 -2167 8157 0
c ((max_left_00002_00004_00002<max_left_00002_00004_00003)=tv=SATLiteral(8158))
-2184 -8158 0
2169 -2185 -8158 0
2170 -2187 -8158 0
2172 -2189 -8158 0
2174 -2191 -8158 0
2176 -2193 -8158 0
2178 -2195 -8158 0
2180 -2197 -8158 0
2182 -8158 0
2184 -2169 8158 0
2185 -2170 8158 0
2187 -2172 8158 0
2189 -2174 8158 0
2191 -2176 8158 0
2193 -2178 8158 0
2195 -2180 8158 0
2197 -2182 8158 0
c ((max_left_00002_00004_00003<max_left_00002_00004_00004)=tv=SATLiteral(8159))
-2199 -8159 0
2184 -2200 -8159 0
2185 -2202 -8159 0
2187 -2204 -8159 0
2189 -2206 -8159 0
2191 -2208 -8159 0
2193 -2210 -8159 0
2195 -2212 -8159 0
2197 -8159 0
2199 -2184 8159 0
2200 -2185 8159 0
2202 -2187 8159 0
2204 -2189 8159 0
2206 -2191 8159 0
2208 -2193 8159 0
2210 -2195 8159 0
2212 -2197 8159 0
c ((max_left_00002_00004_00004<max_left_00002_00004_00005)=tv=SATLiteral(8160))
-2214 -8160 0
2199 -2215 -8160 0
2200 -2217 -8160 0
2202 -2219 -8160 0
2204 -2221 -8160 0
2206 -2223 -8160 0
2208 -2225 -8160 0
2210 -2227 -8160 0
2212 -8160 0
2214 -2199 8160 0
2215 -2200 8160 0
2217 -2202 8160 0
2219 -2204 8160 0
2221 -2206 8160 0
2223 -2208 8160 0
2225 -2210 8160 0
2227 -2212 8160 0
c ((max_left_00002_00004_00005<max_left_00002_00004_00006)=tv=SATLiteral(8161))
-2229 -8161 0
2214 -2230 -8161 0
2215 -2232 -8161 0
2217 -2234 -8161 0
2219 -2236 -8161 0
2221 -2238 -8161 0
2223 -2240 -8161 0
2225 -2242 -8161 0
2227 -8161 0
2229 -2214 8161 0
2230 -2215 8161 0
2232 -2217 8161 0
2234 -2219 8161 0
2236 -2221 8161 0
2238 -2223 8161 0
2240 -2225 8161 0
2242 -2227 8161 0
c ((max_left_00002_00004_00006<max_left_00002_00004_00007)=tv=SATLiteral(8162))
2230 -2244 -8162 0
2232 -2245 -8162 0
2234 -2247 -8162 0
2236 -2249 -8162 0
2238 -2251 -8162 0
2240 -2253 -8162 0
2242 -8162 0
-2229 8162 0
-2230 8162 0
2244 -2232 8162 0
2245 -2234 8162 0
2247 -2236 8162 0
2249 -2238 8162 0
2251 -2240 8162 0
2253 -2242 8162 0
c ((max_left_00002_00004_00007<max_left_00002_00004_00008)=tv=SATLiteral(8163))
-2255 -8163 0
2244 -2256 -8163 0
2245 -2258 -8163 0
2247 -2260 -8163 0
2249 -2262 -8163 0
2251 -2264 -8163 0
2253 -8163 0
2255 -2244 8163 0
2256 -2245 8163 0
2258 -2247 8163 0
2260 -2249 8163 0
2262 -2251 8163 0
2264 -2253 8163 0
c ((max_left_00002_00004_00008<max_left_00002_00004_00009)=tv=SATLiteral(8164))
-2266 -8164 0
2255 -2267 -8164 0
2256 -2269 -8164 0
2258 -2271 -8164 0
2260 -2273 -8164 0
2262 -2275 -8164 0
2264 -8164 0
2266 -2255 8164 0
2267 -2256 8164 0
2269 -2258 8164 0
2271 -2260 8164 0
2273 -2262 8164 0
2275 -2264 8164 0
c ((max_left_00002_00005_00001<max_left_00002_00005_00002)=tv=SATLiteral(8165))
-2293 -8165 0
2278 -2294 -8165 0
2279 -2296 -8165 0
2281 -2298 -8165 0
2283 -2300 -8165 0
2285 -2302 -8165 0
2287 -2304 -8165 0
2289 -2306 -8165 0
2291 -8165 0
2293 -2278 8165 0
2294 -2279 8165 0
2296 -2281 8165 0
2298 -2283 8165 0
2300 -2285 8165 0
2302 -2287 8165 0
2304 -2289 8165 0
2306 -2291 8165 0
c ((max_left_00002_00005_00002<max_left_00002_00005_00003)=tv=SATLiteral(8166))
-2308 -8166 0
2293 -2309 -8166 0
2294 -2311 -8166 0
2296 -2313 -8166 0
2298 -2315 -8166 0
2300 -2317 -8166 0
2302 -2319 -8166 0
2304 -2321 -8166 0
2306 -8166 0
2308 -2293 8166 0
2309 -2294 8166 0
2311 -2296 8166 0
2313 -2298 8166 0
2315 -2300 8166 0
2317 -2302 8166 0
2319 -2304 8166 0
2321 -2306 8166 0
c ((max_left_00002_00005_00003<max_left_00002_00005_00004)=tv=SATLiteral(8167))
-2323 -8167 0
2308 -2324 -8167 0
2309 -2326 -8167 0
2311 -2328 -8167 0
2313 -2330 -8167 0
2315 -2332 -8167 0
2317 -2334 -8167 0
2319 -2336 -8167 0
2321 -8167 0
2323 -2308 8167 0
2324 -2309 8167 0
2326 -2311 8167 0
2328 -2313 8167 0
2330 -2315 8167 0
2332 -2317 8167 0
2334 -2319 8167 0
2336 -2321 8167 0
c ((max_left_00002_00005_00004<max_left_00002_00005_00005)=tv=SATLiteral(8168))
-2338 -8168 0
2323 -2339 -8168 0
2324 -2341 -8168 0
2326 -2343 -8168 0
2328 -2345 -8168 0
2330 -2347 -8168 0
2332 -2349 -8168 0
2334 -2351 -8168 0
2336 -8168 0
2338 -2323 8168 0
2339 -2324 8168 0
2341 -2326 8168 0
2343 -2328 8168 0
2345 -2330 8168 0
2347 -2332 8168 0
2349 -2334 8168 0
2351 -2336 8168 0
c ((max_left_00002_00005_00005<max_left_00002_00005_00006)=tv=SATLiteral(8169))
-2353 -8169 0
2338 -2354 -8169 0
2339 -2356 -8169 0
2341 -2358 -8169 0
2343 -2360 -8169 0
2345 -2362 -8169 0
2347 -2364 -8169 0
2349 -2366 -8169 0
2351 -8169 0
2353 -2338 8169 0
2354 -2339 8169 0
2356 -2341 8169 0
2358 -2343 8169 0
2360 -2345 8169 0
2362 -2347 8169 0
2364 -2349 8169 0
2366 -2351 8169 0
c ((max_left_00002_00005_00006<max_left_00002_00005_00007)=tv=SATLiteral(8170))
-2368 -8170 0
2353 -2369 -8170 0
2354 -2371 -8170 0
2356 -2373 -8170 0
2358 -2375 -8170 0
2360 -2377 -8170 0
2362 -2379 -8170 0
2364 -2381 -8170 0
2366 -8170 0
2368 -2353 8170 0
2369 -2354 8170 0
2371 -2356 8170 0
2373 -2358 8170 0
2375 -2360 8170 0
2377 -2362 8170 0
2379 -2364 8170 0
2381 -2366 8170 0
c ((max_left_00002_00005_00007<max_left_00002_00005_00008)=tv=SATLiteral(8171))
2377 -2383 -8171 0
2379 -2384 -8171 0
2381 -8171 0
-2368 8171 0
-2369 8171 0
-2371 8171 0
-2373 8171 0
-2375 8171 0
-2377 8171 0
2383 -2379 8171 0
2384 -2381 8171 0
c ((max_left_00002_00005_00008<max_left_00002_00005_00009)=tv=SATLiteral(8172))
-2386 -8172 0
2383 -2387 -8172 0
2384 -8172 0
2386 -2383 8172 0
2387 -2384 8172 0
c ((max_left_00002_00006_00001<max_left_00002_00006_00002)=tv=SATLiteral(8173))
-2405 -8173 0
2390 -2406 -8173 0
2391 -2408 -8173 0
2393 -2410 -8173 0
2395 -2412 -8173 0
2397 -2414 -8173 0
2399 -2416 -8173 0
2401 -2418 -8173 0
2403 -8173 0
2405 -2390 8173 0
2406 -2391 8173 0
2408 -2393 8173 0
2410 -2395 8173 0
2412 -2397 8173 0
2414 -2399 8173 0
2416 -2401 8173 0
2418 -2403 8173 0
c ((max_left_00002_00006_00002<max_left_00002_00006_00003)=tv=SATLiteral(8174))
2412 -2420 -8174 0
2414 -2421 -8174 0
2416 -2423 -8174 0
2418 -8174 0
-2405 8174 0
-2406 8174 0
-2408 8174 0
-2410 8174 0
-2412 8174 0
2420 -2414 8174 0
2421 -2416 8174 0
2423 -2418 8174 0
c ((max_left_00002_00006_00003<max_left_00002_00006_00004)=tv=SATLiteral(8175))
-2425 -8175 0
2420 -2426 -8175 0
2421 -2428 -8175 0
2423 -8175 0
2425 -2420 8175 0
2426 -2421 8175 0
2428 -2423 8175 0
c ((max_left_00002_00006_00004<max_left_00002_00006_00005)=tv=SATLiteral(8176))
-2430 -8176 0
2425 -2431 -8176 0
2426 -2433 -8176 0
2428 -8176 0
2430 -2425 8176 0
2431 -2426 8176 0
2433 -2428 8176 0
c ((max_left_00002_00006_00005<max_left_00002_00006_00006)=tv=SATLiteral(8177))
2430 -2435 -8177 0
2431 -2436 -8177 0
2433 -8177 0
-2430 8177 0
2435 -2431 8177 0
2436 -2433 8177 0
c ((max_left_00002_00006_00006<max_left_00002_00006_00007)=tv=SATLiteral(8178))
-2438 -8178 0
2435 -2439 -8178 0
2436 -8178 0
2438 -2435 8178 0
2439 -2436 8178 0
c ((max_left_00002_00006_00007<max_left_00002_00006_00008)=tv=SATLiteral(8179))
-2441 -8179 0
2438 -2442 -8179 0
2439 -8179 0
2441 -2438 8179 0
2442 -2439 8179 0
c ((max_left_00002_00006_00008<max_left_00002_00006_00009)=tv=SATLiteral(8180))
-2444 -8180 0
2441 -2445 -8180 0
2442 -8180 0
2444 -2441 8180 0
2445 -2442 8180 0
c ((max_left_00002_00007_00001<max_left_00002_00007_00002)=tv=SATLiteral(8181))
-2449 -8181 0
2449 8181 0
2450 8181 0
2452 8181 0
2454 8181 0
c ((max_left_00002_00007_00002<max_left_00002_00007_00003)=tv=SATLiteral(8182))
-2456 -8182 0
2449 -2457 -8182 0
2450 -2459 -8182 0
2452 -2461 -8182 0
2454 -8182 0
2456 -2449 8182 0
2457 -2450 8182 0
2459 -2452 8182 0
2461 -2454 8182 0
c ((max_left_00002_00007_00003<max_left_00002_00007_00004)=tv=SATLiteral(8183))
-2463 -8183 0
2456 -2464 -8183 0
2457 -2466 -8183 0
2459 -2468 -8183 0
2461 -8183 0
2463 -2456 8183 0
2464 -2457 8183 0
2466 -2459 8183 0
2468 -2461 8183 0
c ((max_left_00002_00007_00004<max_left_00002_00007_00005)=tv=SATLiteral(8184))
2464 -2470 -8184 0
2466 -2471 -8184 0
2468 -8184 0
-2463 8184 0
-2464 8184 0
2470 -2466 8184 0
2471 -2468 8184 0
c ((max_left_00002_00007_00005<max_left_00002_00007_00006)=tv=SATLiteral(8185))
-2473 -8185 0
2470 -2474 -8185 0
2471 -8185 0
2473 -2470 8185 0
2474 -2471 8185 0
c ((max_left_00002_00007_00006<max_left_00002_00007_00007)=tv=SATLiteral(8186))
-2476 -8186 0
2473 -2477 -8186 0
2474 -8186 0
2476 -2473 8186 0
2477 -2474 8186 0
c ((max_left_00002_00007_00007<max_left_00002_00007_00008)=tv=SATLiteral(8187))
-2479 -8187 0
2476 -2480 -8187 0
2477 -8187 0
2479 -2476 8187 0
2480 -2477 8187 0
c ((max_left_00002_00007_00008<max_left_00002_00007_00009)=tv=SATLiteral(8188))
2479 2482 -8188 0
2480 -8188 0
-2479 8188 0
-2482 -2480 8188 0
c ((max_left_00002_00008_00001<max_left_00002_00008_00002)=tv=SATLiteral(8189))
2493 -2499 -8189 0
2495 -2500 -8189 0
2497 -8189 0
-2484 8189 0
-2485 8189 0
-2487 8189 0
-2489 8189 0
-2491 8189 0
-2493 8189 0
2499 -2495 8189 0
2500 -2497 8189 0
c ((max_left_00002_00008_00002<max_left_00002_00008_00003)=tv=SATLiteral(8190))
-2502 -8190 0
2499 -2503 -8190 0
2500 -8190 0
2502 -2499 8190 0
2503 -2500 8190 0
c ((max_left_00002_00008_00003<max_left_00002_00008_00004)=tv=SATLiteral(8191))
-2505 -8191 0
2502 -2506 -8191 0
2503 -8191 0
2505 -2502 8191 0
2506 -2503 8191 0
c ((max_left_00002_00008_00004<max_left_00002_00008_00005)=tv=SATLiteral(8192))
-2508 -8192 0
2505 -2509 -8192 0
2506 -8192 0
2508 -2505 8192 0
2509 -2506 8192 0
c ((max_left_00002_00008_00005<max_left_00002_00008_00006)=tv=SATLiteral(8193))
-2511 -8193 0
2508 -2512 -8193 0
2509 -8193 0
2511 -2508 8193 0
2512 -2509 8193 0
c ((max_left_00002_00008_00006<max_left_00002_00008_00007)=tv=SATLiteral(8194))
-2514 -8194 0
2511 -2515 -8194 0
2512 -8194 0
2514 -2511 8194 0
2515 -2512 8194 0
c ((max_left_00002_00008_00007<max_left_00002_00008_00008)=tv=SATLiteral(8195))
-2517 -8195 0
2514 -2518 -8195 0
2515 -8195 0
2517 -2514 8195 0
2518 -2515 8195 0
c ((max_left_00002_00008_00008<max_left_00002_00008_00009)=tv=SATLiteral(8196))
-2520 -8196 0
2517 -2521 -8196 0
2518 -8196 0
2520 -2517 8196 0
2521 -2518 8196 0
c ((max_left_00002_00009_00001<max_left_00002_00009_00002)=tv=SATLiteral(8197))
-2539 -8197 0
2524 -2540 -8197 0
2525 -2542 -8197 0
2527 -2544 -8197 0
2529 -2546 -8197 0
2531 -2548 -8197 0
2533 -2550 -8197 0
2535 -2552 -8197 0
2537 -8197 0
2539 -2524 8197 0
2540 -2525 8197 0
2542 -2527 8197 0
2544 -2529 8197 0
2546 -2531 8197 0
2548 -2533 8197 0
2550 -2535 8197 0
2552 -2537 8197 0
c ((max_left_00002_00009_00002<max_left_00002_00009_00003)=tv=SATLiteral(8198))
-2554 -8198 0
2539 -2555 -8198 0
2540 -2557 -8198 0
2542 -2559 -8198 0
2544 -2561 -8198 0
2546 -2563 -8198 0
2548 -2565 -8198 0
2550 -2567 -8198 0
2552 -8198 0
2554 -2539 8198 0
2555 -2540 8198 0
2557 -2542 8198 0
2559 -2544 8198 0
2561 -2546 8198 0
2563 -2548 8198 0
2565 -2550 8198 0
2567 -2552 8198 0
c ((max_left_00002_00009_00003<max_left_00002_00009_00004)=tv=SATLiteral(8199))
-2569 -8199 0
2554 -2570 -8199 0
2555 -2572 -8199 0
2557 -2574 -8199 0
2559 -2576 -8199 0
2561 -2578 -8199 0
2563 -2580 -8199 0
2565 -2582 -8199 0
2567 -8199 0
2569 -2554 8199 0
2570 -2555 8199 0
2572 -2557 8199 0
2574 -2559 8199 0
2576 -2561 8199 0
2578 -2563 8199 0
2580 -2565 8199 0
2582 -2567 8199 0
c ((max_left_00002_00009_00004<max_left_00002_00009_00005)=tv=SATLiteral(8200))
2569 -2584 -8200 0
2570 -2585 -8200 0
2572 -2587 -8200 0
2574 -2589 -8200 0
2576 -2591 -8200 0
2578 -2593 -8200 0
2580 -2595 -8200 0
2582 -8200 0
-2569 8200 0
2584 -2570 8200 0
2585 -2572 8200 0
2587 -2574 8200 0
2589 -2576 8200 0
2591 -2578 8200 0
2593 -2580 8200 0
2595 -2582 8200 0
c ((max_left_00002_00009_00005<max_left_00002_00009_00006)=tv=SATLiteral(8201))
-2597 -8201 0
2584 -2598 -8201 0
2585 -2600 -8201 0
2587 -2602 -8201 0
2589 -2604 -8201 0
2591 -2606 -8201 0
2593 -2608 -8201 0
2595 -8201 0
2597 -2584 8201 0
2598 -2585 8201 0
2600 -2587 8201 0
2602 -2589 8201 0
2604 -2591 8201 0
2606 -2593 8201 0
2608 -2595 8201 0
c ((max_left_00002_00009_00006<max_left_00002_00009_00007)=tv=SATLiteral(8202))
2604 -2610 -8202 0
2606 -2611 -8202 0
2608 -8202 0
-2597 8202 0
-2598 8202 0
-2600 8202 0
-2602 8202 0
-2604 8202 0
2610 -2606 8202 0
2611 -2608 8202 0
c ((max_left_00002_00009_00007<max_left_00002_00009_00008)=tv=SATLiteral(8203))
-2613 -8203 0
2610 -2614 -8203 0
2611 -8203 0
2613 -2610 8203 0
2614 -2611 8203 0
c ((max_left_00002_00009_00008<max_left_00002_00009_00009)=tv=SATLiteral(8204))
-2616 -8204 0
2613 -2617 -8204 0
2614 -8204 0
2616 -2613 8204 0
2617 -2614 8204 0
c ((max_left_00003_00001_00001<max_left_00003_00001_00002)=tv=SATLiteral(8205))
-2635 -8205 0
2620 -2636 -8205 0
2621 -2638 -8205 0
2623 -2640 -8205 0
2625 -2642 -8205 0
2627 -2644 -8205 0
2629 -2646 -8205 0
2631 -2648 -8205 0
2633 -8205 0
2635 -2620 8205 0
2636 -2621 8205 0
2638 -2623 8205 0
2640 -2625 8205 0
2642 -2627 8205 0
2644 -2629 8205 0
2646 -2631 8205 0
2648 -2633 8205 0
c ((max_left_00003_00001_00002<max_left_00003_00001_00003)=tv=SATLiteral(8206))
2640 -2650 -8206 0
2642 -2651 -8206 0
2644 -2653 -8206 0
2646 -2655 -8206 0
2648 -8206 0
-2635 8206 0
-2636 8206 0
-2638 8206 0
-2640 8206 0
2650 -2642 8206 0
2651 -2644 8206 0
2653 -2646 8206 0
2655 -2648 8206 0
c ((max_left_00003_00001_00003<max_left_00003_00001_00004)=tv=SATLiteral(8207))
-2657 -8207 0
2650 -2658 -8207 0
2651 -2660 -8207 0
2653 -2662 -8207 0
2655 -8207 0
2657 -2650 8207 0
2658 -2651 8207 0
2660 -2653 8207 0
2662 -2655 8207 0
c ((max_left_00003_00001_00004<max_left_00003_00001_00005)=tv=SATLiteral(8208))
-2664 -8208 0
2657 -2665 -8208 0
2658 -2667 -8208 0
2660 -2669 -8208 0
2662 -8208 0
2664 -2657 8208 0
2665 -2658 8208 0
2667 -2660 8208 0
2669 -2662 8208 0
c ((max_left_00003_00001_00005<max_left_00003_00001_00006)=tv=SATLiteral(8209))
-2671 -8209 0
2664 -2672 -8209 0
2665 -2674 -8209 0
2667 -2676 -8209 0
2669 -8209 0
2671 -2664 8209 0
2672 -2665 8209 0
2674 -2667 8209 0
2676 -2669 8209 0
c ((max_left_00003_00001_00006<max_left_00003_00001_00007)=tv=SATLiteral(8210))
-2678 -8210 0
2671 -2679 -8210 0
2672 -2681 -8210 0
2674 -2683 -8210 0
2676 -8210 0
2678 -2671 8210 0
2679 -2672 8210 0
2681 -2674 8210 0
2683 -2676 8210 0
c ((max_left_00003_00001_00007<max_left_00003_00001_00008)=tv=SATLiteral(8211))
-2685 -8211 0
2678 -2686 -8211 0
2679 -2688 -8211 0
2681 -2690 -8211 0
2683 -8211 0
2685 -2678 8211 0
2686 -2679 8211 0
2688 -2681 8211 0
2690 -2683 8211 0
c ((max_left_00003_00001_00008<max_left_00003_00001_00009)=tv=SATLiteral(8212))
-2692 -8212 0
2685 -2693 -8212 0
2686 -2695 -8212 0
2688 -2697 -8212 0
2690 -8212 0
2692 -2685 8212 0
2693 -2686 8212 0
2695 -2688 8212 0
2697 -2690 8212 0
c ((max_left_00003_00002_00001<max_left_00003_00002_00002)=tv=SATLiteral(8213))
2709 -2715 -8213 0
2711 -2716 -8213 0
2713 -8213 0
-2700 8213 0
-2701 8213 0
-2703 8213 0
-2705 8213 0
-2707 8213 0
-2709 8213 0
2715 -2711 8213 0
2716 -2713 8213 0
c ((max_left_00003_00002_00002<max_left_00003_00002_00003)=tv=SATLiteral(8214))
-2718 -8214 0
2715 -2719 -8214 0
2716 -8214 0
2718 -2715 8214 0
2719 -2716 8214 0
c ((max_left_00003_00002_00003<max_left_00003_00002_00004)=tv=SATLiteral(8215))
-2721 -8215 0
2718 -2722 -8215 0
2719 -8215 0
2721 -2718 8215 0
2722 -2719 8215 0
c ((max_left_00003_00002_00004<max_left_00003_00002_00005)=tv=SATLiteral(8216))
-2724 -8216 0
2721 -2725 -8216 0
2722 -8216 0
2724 -2721 8216 0
2725 -2722 8216 0
c ((max_left_00003_00002_00005<max_left_00003_00002_00006)=tv=SATLiteral(8217))
-2727 -8217 0
2724 -2728 -8217 0
2725 -8217 0
2727 -2724 8217 0
2728 -2725 8217 0
c ((max_left_00003_00002_00006<max_left_00003_00002_00007)=tv=SATLiteral(8218))
-2730 -8218 0
2727 -2731 -8218 0
2728 -8218 0
2730 -2727 8218 0
2731 -2728 8218 0
c ((max_left_00003_00002_00007<max_left_00003_00002_00008)=tv=SATLiteral(8219))
-2733 -8219 0
2730 -2734 -8219 0
2731 -8219 0
2733 -2730 8219 0
2734 -2731 8219 0
c ((max_left_00003_00002_00008<max_left_00003_00002_00009)=tv=SATLiteral(8220))
-2736 -8220 0
2733 -2737 -8220 0
2734 -8220 0
2736 -2733 8220 0
2737 -2734 8220 0
c ((max_left_00003_00003_00001<max_left_00003_00003_00002)=tv=SATLiteral(8221))
-2755 -8221 0
2740 -2756 -8221 0
2741 -2758 -8221 0
2743 -2760 -8221 0
2745 -2762 -8221 0
2747 -2764 -8221 0
2749 -2766 -8221 0
2751 -2768 -8221 0
2753 -8221 0
2755 -2740 8221 0
2756 -2741 8221 0
2758 -2743 8221 0
2760 -2745 8221 0
2762 -2747 8221 0
2764 -2749 8221 0
2766 -2751 8221 0
2768 -2753 8221 0
c ((max_left_00003_00003_00002<max_left_00003_00003_00003)=tv=SATLiteral(8222))
-2770 -8222 0
2755 -2771 -8222 0
2756 -2773 -8222 0
2758 -2775 -8222 0
2760 -2777 -8222 0
2762 -2779 -8222 0
2764 -2781 -8222 0
2766 -2783 -8222 0
2768 -8222 0
2770 -2755 8222 0
2771 -2756 8222 0
2773 -2758 8222 0
2775 -2760 8222 0
2777 -2762 8222 0
2779 -2764 8222 0
2781 -2766 8222 0
2783 -2768 8222 0
c ((max_left_00003_00003_00003<max_left_00003_00003_00004)=tv=SATLiteral(8223))
2777 -2785 -8223 0
2779 -2786 -8223 0
2781 -2788 -8223 0
2783 -8223 0
-2770 8223 0
-2771 8223 0
-2773 8223 0
-2775 8223 0
-2777 8223 0
2785 -2779 8223 0
2786 -2781 8223 0
2788 -2783 8223 0
c ((max_left_00003_00003_00004<max_left_00003_00003_00005)=tv=SATLiteral(8224))
-2790 -8224 0
2785 -2791 -8224 0
2786 -2793 -8224 0
2788 -8224 0
2790 -2785 8224 0
2791 -2786 8224 0
2793 -2788 8224 0
c ((max_left_00003_00003_00005<max_left_00003_00003_00006)=tv=SATLiteral(8225))
-2795 -8225 0
2790 -2796 -8225 0
2791 -2798 -8225 0
2793 -8225 0
2795 -2790 8225 0
2796 -2791 8225 0
2798 -2793 8225 0
c ((max_left_00003_00003_00006<max_left_00003_00003_00007)=tv=SATLiteral(8226))
-2800 -8226 0
2795 -2801 -8226 0
2796 -2803 -8226 0
2798 -8226 0
2800 -2795 8226 0
2801 -2796 8226 0
2803 -2798 8226 0
c ((max_left_00003_00003_00007<max_left_00003_00003_00008)=tv=SATLiteral(8227))
-2805 -8227 0
2800 -2806 -8227 0
2801 -2808 -8227 0
2803 -8227 0
2805 -2800 8227 0
2806 -2801 8227 0
2808 -2803 8227 0
c ((max_left_00003_00003_00008<max_left_00003_00003_00009)=tv=SATLiteral(8228))
-2810 -8228 0
2805 -2811 -8228 0
2806 -2813 -8228 0
2808 -8228 0
2810 -2805 8228 0
2811 -2806 8228 0
2813 -2808 8228 0
c ((max_left_00003_00004_00001<max_left_00003_00004_00002)=tv=SATLiteral(8229))
2817 -2831 -8229 0
2819 -2832 -8229 0
2821 -2834 -8229 0
2823 -2836 -8229 0
2825 -2838 -8229 0
2827 -2840 -8229 0
2829 -8229 0
-2816 8229 0
-2817 8229 0
2831 -2819 8229 0
2832 -2821 8229 0
2834 -2823 8229 0
2836 -2825 8229 0
2838 -2827 8229 0
2840 -2829 8229 0
c ((max_left_00003_00004_00002<max_left_00003_00004_00003)=tv=SATLiteral(8230))
-2842 -8230 0
2831 -2843 -8230 0
2832 -2845 -8230 0
2834 -2847 -8230 0
2836 -2849 -8230 0
2838 -2851 -8230 0
2840 -8230 0
2842 -2831 8230 0
2843 -2832 8230 0
2845 -2834 8230 0
2847 -2836 8230 0
2849 -2838 8230 0
2851 -2840 8230 0
c ((max_left_00003_00004_00003<max_left_00003_00004_00004)=tv=SATLiteral(8231))
-2853 -8231 0
2842 -2854 -8231 0
2843 -2856 -8231 0
2845 -2858 -8231 0
2847 -2860 -8231 0
2849 -2862 -8231 0
2851 -8231 0
2853 -2842 8231 0
2854 -2843 8231 0
2856 -2845 8231 0
2858 -2847 8231 0
2860 -2849 8231 0
2862 -2851 8231 0
c ((max_left_00003_00004_00004<max_left_00003_00004_00005)=tv=SATLiteral(8232))
-2864 -8232 0
2853 -2865 -8232 0
2854 -2867 -8232 0
2856 -2869 -8232 0
2858 -2871 -8232 0
2860 -2873 -8232 0
2862 -8232 0
2864 -2853 8232 0
2865 -2854 8232 0
2867 -2856 8232 0
2869 -2858 8232 0
2871 -2860 8232 0
2873 -2862 8232 0
c ((max_left_00003_00004_00005<max_left_00003_00004_00006)=tv=SATLiteral(8233))
-2875 -8233 0
2864 -2876 -8233 0
2865 -2878 -8233 0
2867 -2880 -8233 0
2869 -2882 -8233 0
2871 -2884 -8233 0
2873 -8233 0
2875 -2864 8233 0
2876 -2865 8233 0
2878 -2867 8233 0
2880 -2869 8233 0
2882 -2871 8233 0
2884 -2873 8233 0
c ((max_left_00003_00004_00006<max_left_00003_00004_00007)=tv=SATLiteral(8234))
-2886 -8234 0
2875 -2887 -8234 0
2876 -2889 -8234 0
2878 -2891 -8234 0
2880 -2893 -8234 0
2882 -2895 -8234 0
2884 -8234 0
2886 -2875 8234 0
2887 -2876 8234 0
2889 -2878 8234 0
2891 -2880 8234 0
2893 -2882 8234 0
2895 -2884 8234 0
c ((max_left_00003_00004_00007<max_left_00003_00004_00008)=tv=SATLiteral(8235))
-2897 -8235 0
2886 -2898 -8235 0
2887 -2900 -8235 0
2889 -2902 -8235 0
2891 -2904 -8235 0
2893 -2906 -8235 0
2895 -8235 0
2897 -2886 8235 0
2898 -2887 8235 0
2900 -2889 8235 0
2902 -2891 8235 0
2904 -2893 8235 0
2906 -2895 8235 0
c ((max_left_00003_00004_00008<max_left_00003_00004_00009)=tv=SATLiteral(8236))
-2908 -8236 0
2897 -2909 -8236 0
2898 -2911 -8236 0
2900 -2913 -8236 0
2902 -2915 -8236 0
2904 -2917 -8236 0
2906 -8236 0
2908 -2897 8236 0
2909 -2898 8236 0
2911 -2900 8236 0
2913 -2902 8236 0
2915 -2904 8236 0
2917 -2906 8236 0
c ((max_left_00003_00005_00001<max_left_00003_00005_00002)=tv=SATLiteral(8237))
-2921 -8237 0
2921 8237 0
2922 8237 0
2924 8237 0
2926 8237 0
2928 8237 0
2930 8237 0
2932 8237 0
c ((max_left_00003_00005_00002<max_left_00003_00005_00003)=tv=SATLiteral(8238))
2928 -2934 -8238 0
2930 -2935 -8238 0
2932 -8238 0
-2921 8238 0
-2922 8238 0
-2924 8238 0
-2926 8238 0
-2928 8238 0
2934 -2930 8238 0
2935 -2932 8238 0
c ((max_left_00003_00005_00003<max_left_00003_00005_00004)=tv=SATLiteral(8239))
-2937 -8239 0
2934 -2938 -8239 0
2935 -8239 0
2937 -2934 8239 0
2938 -2935 8239 0
c ((max_left_00003_00005_00004<max_left_00003_00005_00005)=tv=SATLiteral(8240))
-2940 -8240 0
2937 -2941 -8240 0
2938 -8240 0
2940 -2937 8240 0
2941 -2938 8240 0
c ((max_left_00003_00005_00005<max_left_00003_00005_00006)=tv=SATLiteral(8241))
-2943 -8241 0
2940 -2944 -8241 0
2941 -8241 0
2943 -2940 8241 0
2944 -2941 8241 0
c ((max_left_00003_00005_00006<max_left_00003_00005_00007)=tv=SATLiteral(8242))
-2946 -8242 0
2943 -2947 -8242 0
2944 -8242 0
2946 -2943 8242 0
2947 -2944 8242 0
c ((max_left_00003_00005_00007<max_left_00003_00005_00008)=tv=SATLiteral(8243))
-2949 -8243 0
2946 -2950 -8243 0
2947 -8243 0
2949 -2946 8243 0
2950 -2947 8243 0
c ((max_left_00003_00005_00008<max_left_00003_00005_00009)=tv=SATLiteral(8244))
-2952 -8244 0
2949 -2953 -8244 0
2950 -8244 0
2952 -2949 8244 0
2953 -2950 8244 0
c ((max_left_00003_00006_00001<max_left_00003_00006_00002)=tv=SATLiteral(8245))
-2971 -8245 0
2956 -2972 -8245 0
2957 -2974 -8245 0
2959 -2976 -8245 0
2961 -2978 -8245 0
2963 -2980 -8245 0
2965 -2982 -8245 0
2967 -2984 -8245 0
2969 -8245 0
2971 -2956 8245 0
2972 -2957 8245 0
2974 -2959 8245 0
2976 -2961 8245 0
2978 -2963 8245 0
2980 -2965 8245 0
2982 -2967 8245 0
2984 -2969 8245 0
c ((max_left_00003_00006_00002<max_left_00003_00006_00003)=tv=SATLiteral(8246))
-2986 -8246 0
2971 -2987 -8246 0
2972 -2989 -8246 0
2974 -2991 -8246 0
2976 -2993 -8246 0
2978 -2995 -8246 0
2980 -2997 -8246 0
2982 -2999 -8246 0
2984 -8246 0
2986 -2971 8246 0
2987 -2972 8246 0
2989 -2974 8246 0
2991 -2976 8246 0
2993 -2978 8246 0
2995 -2980 8246 0
2997 -2982 8246 0
2999 -2984 8246 0
c ((max_left_00003_00006_00003<max_left_00003_00006_00004)=tv=SATLiteral(8247))
2995 -3001 -8247 0
2997 -3002 -8247 0
2999 -8247 0
-2986 8247 0
-2987 8247 0
-2989 8247 0
-2991 8247 0
-2993 8247 0
-2995 8247 0
3001 -2997 8247 0
3002 -2999 8247 0
c ((max_left_00003_00006_00004<max_left_00003_00006_00005)=tv=SATLiteral(8248))
-3004 -8248 0
3001 -3005 -8248 0
3002 -8248 0
3004 -3001 8248 0
3005 -3002 8248 0
c ((max_left_00003_00006_00005<max_left_00003_00006_00006)=tv=SATLiteral(8249))
-3007 -8249 0
3004 -3008 -8249 0
3005 -8249 0
3007 -3004 8249 0
3008 -3005 8249 0
c ((max_left_00003_00006_00006<max_left_00003_00006_00007)=tv=SATLiteral(8250))
-3010 -8250 0
3007 -3011 -8250 0
3008 -8250 0
3010 -3007 8250 0
3011 -3008 8250 0
c ((max_left_00003_00006_00007<max_left_00003_00006_00008)=tv=SATLiteral(8251))
3010 3013 -8251 0
3011 -8251 0
-3010 8251 0
-3013 -3011 8251 0
c ((max_left_00003_00006_00008<max_left_00003_00006_00009)=tv=SATLiteral(8252))
3014 -8252 0
-3013 -8252 0
-3014 3013 8252 0
c ((max_left_00003_00007_00001<max_left_00003_00007_00002)=tv=SATLiteral(8253))
-3017 -8253 0
3017 8253 0
3018 8253 0
c ((max_left_00003_00007_00002<max_left_00003_00007_00003)=tv=SATLiteral(8254))
-3020 -8254 0
3017 -3021 -8254 0
3018 -8254 0
3020 -3017 8254 0
3021 -3018 8254 0
c ((max_left_00003_00007_00003<max_left_00003_00007_00004)=tv=SATLiteral(8255))
-3023 -8255 0
3020 -3024 -8255 0
3021 -8255 0
3023 -3020 8255 0
3024 -3021 8255 0
c ((max_left_00003_00007_00004<max_left_00003_00007_00005)=tv=SATLiteral(8256))
-3026 -8256 0
3023 -3027 -8256 0
3024 -8256 0
3026 -3023 8256 0
3027 -3024 8256 0
c ((max_left_00003_00007_00005<max_left_00003_00007_00006)=tv=SATLiteral(8257))
-3029 -8257 0
3026 -3030 -8257 0
3027 -8257 0
3029 -3026 8257 0
3030 -3027 8257 0
c ((max_left_00003_00007_00006<max_left_00003_00007_00007)=tv=SATLiteral(8258))
-3032 -8258 0
3029 -3033 -8258 0
3030 -8258 0
3032 -3029 8258 0
3033 -3030 8258 0
c ((max_left_00003_00007_00007<max_left_00003_00007_00008)=tv=SATLiteral(8259))
-3035 -8259 0
3032 -3036 -8259 0
3033 -8259 0
3035 -3032 8259 0
3036 -3033 8259 0
c ((max_left_00003_00007_00008<max_left_00003_00007_00009)=tv=SATLiteral(8260))
-3038 -8260 0
3035 -3039 -8260 0
3036 -8260 0
3038 -3035 8260 0
3039 -3036 8260 0
c ((max_left_00003_00008_00001<max_left_00003_00008_00002)=tv=SATLiteral(8261))
-3057 -8261 0
3042 -3058 -8261 0
3043 -3060 -8261 0
3045 -3062 -8261 0
3047 -3064 -8261 0
3049 -3066 -8261 0
3051 -3068 -8261 0
3053 -3070 -8261 0
3055 -8261 0
3057 -3042 8261 0
3058 -3043 8261 0
3060 -3045 8261 0
3062 -3047 8261 0
3064 -3049 8261 0
3066 -3051 8261 0
3068 -3053 8261 0
3070 -3055 8261 0
c ((max_left_00003_00008_00002<max_left_00003_00008_00003)=tv=SATLiteral(8262))
-3072 -8262 0
3057 -3073 -8262 0
3058 -3075 -8262 0
3060 -3077 -8262 0
3062 -3079 -8262 0
3064 -3081 -8262 0
3066 -3083 -8262 0
3068 -3085 -8262 0
3070 -8262 0
3072 -3057 8262 0
3073 -3058 8262 0
3075 -3060 8262 0
3077 -3062 8262 0
3079 -3064 8262 0
3081 -3066 8262 0
3083 -3068 8262 0
3085 -3070 8262 0
c ((max_left_00003_00008_00003<max_left_00003_00008_00004)=tv=SATLiteral(8263))
-3087 -8263 0
3072 -3088 -8263 0
3073 -3090 -8263 0
3075 -3092 -8263 0
3077 -3094 -8263 0
3079 -3096 -8263 0
3081 -3098 -8263 0
3083 -3100 -8263 0
3085 -8263 0
3087 -3072 8263 0
3088 -3073 8263 0
3090 -3075 8263 0
3092 -3077 8263 0
3094 -3079 8263 0
3096 -3081 8263 0
3098 -3083 8263 0
3100 -3085 8263 0
c ((max_left_00003_00008_00004<max_left_00003_00008_00005)=tv=SATLiteral(8264))
3096 -3102 -8264 0
3098 -3103 -8264 0
3100 -8264 0
-3087 8264 0
-3088 8264 0
-3090 8264 0
-3092 8264 0
-3094 8264 0
-3096 8264 0
3102 -3098 8264 0
3103 -3100 8264 0
c ((max_left_00003_00008_00005<max_left_00003_00008_00006)=tv=SATLiteral(8265))
-3105 -8265 0
3102 -3106 -8265 0
3103 -8265 0
3105 -3102 8265 0
3106 -3103 8265 0
c ((max_left_00003_00008_00006<max_left_00003_00008_00007)=tv=SATLiteral(8266))
3105 3108 -8266 0
3106 -8266 0
-3105 8266 0
-3108 -3106 8266 0
c ((max_left_00003_00008_00007<max_left_00003_00008_00008)=tv=SATLiteral(8267))
3109 -8267 0
-3108 -8267 0
-3109 3108 8267 0
c ((max_left_00003_00008_00008<max_left_00003_00008_00009)=tv=SATLiteral(8268))
3110 -8268 0
-3109 -8268 0
-3110 3109 8268 0
c ((max_left_00003_00009_00001<max_left_00003_00009_00002)=tv=SATLiteral(8269))
-3127 -8269 0
3112 -3128 -8269 0
3113 -3130 -8269 0
3115 -3132 -8269 0
3117 -3134 -8269 0
3119 -3136 -8269 0
3121 -3138 -8269 0
3123 -3140 -8269 0
3125 -8269 0
3127 -3112 8269 0
3128 -3113 8269 0
3130 -3115 8269 0
3132 -3117 8269 0
3134 -3119 8269 0
3136 -3121 8269 0
3138 -3123 8269 0
3140 -3125 8269 0
c ((max_left_00003_00009_00002<max_left_00003_00009_00003)=tv=SATLiteral(8270))
3138 3142 -8270 0
3140 -8270 0
-3127 8270 0
-3128 8270 0
-3130 8270 0
-3132 8270 0
-3134 8270 0
-3136 8270 0
-3138 8270 0
-3142 -3140 8270 0
c ((max_left_00003_00009_00003<max_left_00003_00009_00004)=tv=SATLiteral(8271))
3143 -8271 0
-3142 -8271 0
-3143 3142 8271 0
c ((max_left_00003_00009_00004<max_left_00003_00009_00005)=tv=SATLiteral(8272))
3144 -8272 0
-3143 -8272 0
-3144 3143 8272 0
c ((max_left_00003_00009_00005<max_left_00003_00009_00006)=tv=SATLiteral(8273))
3145 -8273 0
-3144 -8273 0
-3145 3144 8273 0
c ((max_left_00003_00009_00006<max_left_00003_00009_00007)=tv=SATLiteral(8274))
3146 -8274 0
-3145 -8274 0
-3146 3145 8274 0
c ((max_left_00003_00009_00007<max_left_00003_00009_00008)=tv=SATLiteral(8275))
3147 -8275 0
-3146 -8275 0
-3147 3146 8275 0
c ((max_left_00003_00009_00008<max_left_00003_00009_00009)=tv=SATLiteral(8276))
3148 -8276 0
-3147 -8276 0
-3148 3147 8276 0
c ((max_left_00004_00001_00001<max_left_00004_00001_00002)=tv=SATLiteral(8277))
-3165 -8277 0
3150 -3166 -8277 0
3151 -3168 -8277 0
3153 -3170 -8277 0
3155 -3172 -8277 0
3157 -3174 -8277 0
3159 -3176 -8277 0
3161 -3178 -8277 0
3163 -8277 0
3165 -3150 8277 0
3166 -3151 8277 0
3168 -3153 8277 0
3170 -3155 8277 0
3172 -3157 8277 0
3174 -3159 8277 0
3176 -3161 8277 0
3178 -3163 8277 0
c ((max_left_00004_00001_00002<max_left_00004_00001_00003)=tv=SATLiteral(8278))
-3180 -8278 0
3165 -3181 -8278 0
3166 -3183 -8278 0
3168 -3185 -8278 0
3170 -3187 -8278 0
3172 -3189 -8278 0
3174 -3191 -8278 0
3176 -3193 -8278 0
3178 -8278 0
3180 -3165 8278 0
3181 -3166 8278 0
3183 -3168 8278 0
3185 -3170 8278 0
3187 -3172 8278 0
3189 -3174 8278 0
3191 -3176 8278 0
3193 -3178 8278 0
c ((max_left_00004_00001_00003<max_left_00004_00001_00004)=tv=SATLiteral(8279))
-3195 -8279 0
3180 -3196 -8279 0
3181 -3198 -8279 0
3183 -3200 -8279 0
3185 -3202 -8279 0
3187 -3204 -8279 0
3189 -3206 -8279 0
3191 -3208 -8279 0
3193 -8279 0
3195 -3180 8279 0
3196 -3181 8279 0
3198 -3183 8279 0
3200 -3185 8279 0
3202 -3187 8279 0
3204 -3189 8279 0
3206 -3191 8279 0
3208 -3193 8279 0
c ((max_left_00004_00001_00004<max_left_00004_00001_00005)=tv=SATLiteral(8280))
-3210 -8280 0
3195 -3211 -8280 0
3196 -3213 -8280 0
3198 -3215 -8280 0
3200 -3217 -8280 0
3202 -3219 -8280 0
3204 -3221 -8280 0
3206 -3223 -8280 0
3208 -8280 0
3210 -3195 8280 0
3211 -3196 8280 0
3213 -3198 8280 0
3215 -3200 8280 0
3217 -3202 8280 0
3219 -3204 8280 0
3221 -3206 8280 0
3223 -3208 8280 0
c ((max_left_00004_00001_00005<max_left_00004_00001_00006)=tv=SATLiteral(8281))
-3225 -8281 0
3210 -3226 -8281 0
3211 -3228 -8281 0
3213 -3230 -8281 0
3215 -3232 -8281 0
3217 -3234 -8281 0
3219 -3236 -8281 0
3221 -3238 -8281 0
3223 -8281 0
3225 -3210 8281 0
3226 -3211 8281 0
3228 -3213 8281 0
3230 -3215 8281 0
3232 -3217 8281 0
3234 -3219 8281 0
3236 -3221 8281 0
3238 -3223 8281 0
c ((max_left_00004_00001_00006<max_left_00004_00001_00007)=tv=SATLiteral(8282))
-3240 -8282 0
3225 -3241 -8282 0
3226 -3243 -8282 0
3228 -3245 -8282 0
3230 -3247 -8282 0
3232 -3249 -8282 0
3234 -3251 -8282 0
3236 -3253 -8282 0
3238 -8282 0
3240 -3225 8282 0
3241 -3226 8282 0
3243 -3228 8282 0
3245 -3230 8282 0
3247 -3232 8282 0
3249 -3234 8282 0
3251 -3236 8282 0
3253 -3238 8282 0
c ((max_left_00004_00001_00007<max_left_00004_00001_00008)=tv=SATLiteral(8283))
-3255 -8283 0
3240 -3256 -8283 0
3241 -3258 -8283 0
3243 -3260 -8283 0
3245 -3262 -8283 0
3247 -3264 -8283 0
3249 -3266 -8283 0
3251 -3268 -8283 0
3253 -8283 0
3255 -3240 8283 0
3256 -3241 8283 0
3258 -3243 8283 0
3260 -3245 8283 0
3262 -3247 8283 0
3264 -3249 8283 0
3266 -3251 8283 0
3268 -3253 8283 0
c ((max_left_00004_00001_00008<max_left_00004_00001_00009)=tv=SATLiteral(8284))
-3270 -8284 0
3255 -3271 -8284 0
3256 -3273 -8284 0
3258 -3275 -8284 0
3260 -3277 -8284 0
3262 -3279 -8284 0
3264 -3281 -8284 0
3266 -3283 -8284 0
3268 -8284 0
3270 -3255 8284 0
3271 -3256 8284 0
3273 -3258 8284 0
3275 -3260 8284 0
3277 -3262 8284 0
3279 -3264 8284 0
3281 -3266 8284 0
3283 -3268 8284 0
c ((max_left_00004_00002_00001<max_left_00004_00002_00002)=tv=SATLiteral(8285))
-3301 -8285 0
3286 -3302 -8285 0
3287 -3304 -8285 0
3289 -3306 -8285 0
3291 -3308 -8285 0
3293 -3310 -8285 0
3295 -3312 -8285 0
3297 -3314 -8285 0
3299 -8285 0
3301 -3286 8285 0
3302 -3287 8285 0
3304 -3289 8285 0
3306 -3291 8285 0
3308 -3293 8285 0
3310 -3295 8285 0
3312 -3297 8285 0
3314 -3299 8285 0
c ((max_left_00004_00002_00002<max_left_00004_00002_00003)=tv=SATLiteral(8286))
-3316 -8286 0
3301 -3317 -8286 0
3302 -3319 -8286 0
3304 -3321 -8286 0
3306 -3323 -8286 0
3308 -3325 -8286 0
3310 -3327 -8286 0
3312 -3329 -8286 0
3314 -8286 0
3316 -3301 8286 0
3317 -3302 8286 0
3319 -3304 8286 0
3321 -3306 8286 0
3323 -3308 8286 0
3325 -3310 8286 0
3327 -3312 8286 0
3329 -3314 8286 0
c ((max_left_00004_00002_00003<max_left_00004_00002_00004)=tv=SATLiteral(8287))
3327 3331 -8287 0
3329 -8287 0
-3316 8287 0
-3317 8287 0
-3319 8287 0
-3321 8287 0
-3323 8287 0
-3325 8287 0
-3327 8287 0
-3331 -3329 8287 0
c ((max_left_00004_00002_00004<max_left_00004_00002_00005)=tv=SATLiteral(8288))
3332 -8288 0
-3331 -8288 0
-3332 3331 8288 0
c ((max_left_00004_00002_00005<max_left_00004_00002_00006)=tv=SATLiteral(8289))
3333 -8289 0
-3332 -8289 0
-3333 3332 8289 0
c ((max_left_00004_00002_00006<max_left_00004_00002_00007)=tv=SATLiteral(8290))
3334 -8290 0
-3333 -8290 0
-3334 3333 8290 0
c ((max_left_00004_00002_00007<max_left_00004_00002_00008)=tv=SATLiteral(8291))
3335 -8291 0
-3334 -8291 0
-3335 3334 8291 0
c ((max_left_00004_00002_00008<max_left_00004_00002_00009)=tv=SATLiteral(8292))
3336 -8292 0
-3335 -8292 0
-3336 3335 8292 0
c ((max_left_00004_00003_00001<max_left_00004_00003_00002)=tv=SATLiteral(8293))
3349 3353 -8293 0
3351 -8293 0
-3338 8293 0
-3339 8293 0
-3341 8293 0
-3343 8293 0
-3345 8293 0
-3347 8293 0
-3349 8293 0
-3353 -3351 8293 0
c ((max_left_00004_00003_00002<max_left_00004_00003_00003)=tv=SATLiteral(8294))
3354 -8294 0
-3353 -8294 0
-3354 3353 8294 0
c ((max_left_00004_00003_00003<max_left_00004_00003_00004)=tv=SATLiteral(8295))
3355 -8295 0
-3354 -8295 0
-3355 3354 8295 0
c ((max_left_00004_00003_00004<max_left_00004_00003_00005)=tv=SATLiteral(8296))
3356 -8296 0
-3355 -8296 0
-3356 3355 8296 0
c ((max_left_00004_00003_00005<max_left_00004_00003_00006)=tv=SATLiteral(8297))
3357 -8297 0
-3356 -8297 0
-3357 3356 8297 0
c ((max_left_00004_00003_00006<max_left_00004_00003_00007)=tv=SATLiteral(8298))
3358 -8298 0
-3357 -8298 0
-3358 3357 8298 0
c ((max_left_00004_00003_00007<max_left_00004_00003_00008)=tv=SATLiteral(8299))
3359 -8299 0
-3358 -8299 0
-3359 3358 8299 0
c ((max_left_00004_00003_00008<max_left_00004_00003_00009)=tv=SATLiteral(8300))
3360 -8300 0
-3359 -8300 0
-3360 3359 8300 0
c ((max_left_00004_00004_00001<max_left_00004_00004_00002)=tv=SATLiteral(8301))
-3377 -8301 0
3362 -3378 -8301 0
3363 -3380 -8301 0
3365 -3382 -8301 0
3367 -3384 -8301 0
3369 -3386 -8301 0
3371 -3388 -8301 0
3373 -3390 -8301 0
3375 -8301 0
3377 -3362 8301 0
3378 -3363 8301 0
3380 -3365 8301 0
3382 -3367 8301 0
3384 -3369 8301 0
3386 -3371 8301 0
3388 -3373 8301 0
3390 -3375 8301 0
c ((max_left_00004_00004_00002<max_left_00004_00004_00003)=tv=SATLiteral(8302))
3378 -3392 -8302 0
3380 -3393 -8302 0
3382 -3395 -8302 0
3384 -3397 -8302 0
3386 -3399 -8302 0
3388 -3401 -8302 0
3390 -8302 0
-3377 8302 0
-3378 8302 0
3392 -3380 8302 0
3393 -3382 8302 0
3395 -3384 8302 0
3397 -3386 8302 0
3399 -3388 8302 0
3401 -3390 8302 0
c ((max_left_00004_00004_00003<max_left_00004_00004_00004)=tv=SATLiteral(8303))
-3403 -8303 0
3392 -3404 -8303 0
3393 -3406 -8303 0
3395 -3408 -8303 0
3397 -3410 -8303 0
3399 -3412 -8303 0
3401 -8303 0
3403 -3392 8303 0
3404 -3393 8303 0
3406 -3395 8303 0
3408 -3397 8303 0
3410 -3399 8303 0
3412 -3401 8303 0
c ((max_left_00004_00004_00004<max_left_00004_00004_00005)=tv=SATLiteral(8304))
-3414 -8304 0
3403 -3415 -8304 0
3404 -3417 -8304 0
3406 -3419 -8304 0
3408 -3421 -8304 0
3410 -3423 -8304 0
3412 -8304 0
3414 -3403 8304 0
3415 -3404 8304 0
3417 -3406 8304 0
3419 -3408 8304 0
3421 -3410 8304 0
3423 -3412 8304 0
c ((max_left_00004_00004_00005<max_left_00004_00004_00006)=tv=SATLiteral(8305))
-3425 -8305 0
3414 -3426 -8305 0
3415 -3428 -8305 0
3417 -3430 -8305 0
3419 -3432 -8305 0
3421 -3434 -8305 0
3423 -8305 0
3425 -3414 8305 0
3426 -3415 8305 0
3428 -3417 8305 0
3430 -3419 8305 0
3432 -3421 8305 0
3434 -3423 8305 0
c ((max_left_00004_00004_00006<max_left_00004_00004_00007)=tv=SATLiteral(8306))
-3436 -8306 0
3425 -3437 -8306 0
3426 -3439 -8306 0
3428 -3441 -8306 0
3430 -3443 -8306 0
3432 -3445 -8306 0
3434 -8306 0
3436 -3425 8306 0
3437 -3426 8306 0
3439 -3428 8306 0
3441 -3430 8306 0
3443 -3432 8306 0
3445 -3434 8306 0
c ((max_left_00004_00004_00007<max_left_00004_00004_00008)=tv=SATLiteral(8307))
-3447 -8307 0
3436 -3448 -8307 0
3437 -3450 -8307 0
3439 -3452 -8307 0
3441 -3454 -8307 0
3443 -3456 -8307 0
3445 -8307 0
3447 -3436 8307 0
3448 -3437 8307 0
3450 -3439 8307 0
3452 -3441 8307 0
3454 -3443 8307 0
3456 -3445 8307 0
c ((max_left_00004_00004_00008<max_left_00004_00004_00009)=tv=SATLiteral(8308))
-3458 -8308 0
3447 -3459 -8308 0
3448 -3461 -8308 0
3450 -3463 -8308 0
3452 -3465 -8308 0
3454 -3467 -8308 0
3456 -8308 0
3458 -3447 8308 0
3459 -3448 8308 0
3461 -3450 8308 0
3463 -3452 8308 0
3465 -3454 8308 0
3467 -3456 8308 0
c ((max_left_00004_00005_00002<max_left_00004_00005_00003)=tv=SATLiteral(8309))
-3472 -8309 0
3472 8309 0
3473 8309 0
c ((max_left_00004_00005_00003<max_left_00004_00005_00004)=tv=SATLiteral(8310))
-3475 -8310 0
3472 -3476 -8310 0
3473 -8310 0
3475 -3472 8310 0
3476 -3473 8310 0
c ((max_left_00004_00005_00004<max_left_00004_00005_00005)=tv=SATLiteral(8311))
-3478 -8311 0
3475 -3479 -8311 0
3476 -8311 0
3478 -3475 8311 0
3479 -3476 8311 0
c ((max_left_00004_00005_00005<max_left_00004_00005_00006)=tv=SATLiteral(8312))
-3481 -8312 0
3478 -3482 -8312 0
3479 -8312 0
3481 -3478 8312 0
3482 -3479 8312 0
c ((max_left_00004_00005_00006<max_left_00004_00005_00007)=tv=SATLiteral(8313))
-3484 -8313 0
3481 -3485 -8313 0
3482 -8313 0
3484 -3481 8313 0
3485 -3482 8313 0
c ((max_left_00004_00005_00007<max_left_00004_00005_00008)=tv=SATLiteral(8314))
-3487 -8314 0
3484 -3488 -8314 0
3485 -8314 0
3487 -3484 8314 0
3488 -3485 8314 0
c ((max_left_00004_00005_00008<max_left_00004_00005_00009)=tv=SATLiteral(8315))
-3490 -8315 0
3487 -3491 -8315 0
3488 -8315 0
3490 -3487 8315 0
3491 -3488 8315 0
c ((max_left_00004_00006_00001<max_left_00004_00006_00002)=tv=SATLiteral(8316))
-3509 -8316 0
3494 -3510 -8316 0
3495 -3512 -8316 0
3497 -3514 -8316 0
3499 -3516 -8316 0
3501 -3518 -8316 0
3503 -3520 -8316 0
3505 -3522 -8316 0
3507 -8316 0
3509 -3494 8316 0
3510 -3495 8316 0
3512 -3497 8316 0
3514 -3499 8316 0
3516 -3501 8316 0
3518 -3503 8316 0
3520 -3505 8316 0
3522 -3507 8316 0
c ((max_left_00004_00006_00002<max_left_00004_00006_00003)=tv=SATLiteral(8317))
-3524 -8317 0
3509 -3525 -8317 0
3510 -3527 -8317 0
3512 -3529 -8317 0
3514 -3531 -8317 0
3516 -3533 -8317 0
3518 -3535 -8317 0
3520 -3537 -8317 0
3522 -8317 0
3524 -3509 8317 0
3525 -3510 8317 0
3527 -3512 8317 0
3529 -3514 8317 0
3531 -3516 8317 0
3533 -3518 8317 0
3535 -3520 8317 0
3537 -3522 8317 0
c ((max_left_00004_00006_00003<max_left_00004_00006_00004)=tv=SATLiteral(8318))
3533 -3539 -8318 0
3535 -3540 -8318 0
3537 -8318 0
-3524 8318 0
-3525 8318 0
-3527 8318 0
-3529 8318 0
-3531 8318 0
-3533 8318 0
3539 -3535 8318 0
3540 -3537 8318 0
c ((max_left_00004_00006_00004<max_left_00004_00006_00005)=tv=SATLiteral(8319))
-3542 -8319 0
3539 -3543 -8319 0
3540 -8319 0
3542 -3539 8319 0
3543 -3540 8319 0
c ((max_left_00004_00006_00005<max_left_00004_00006_00006)=tv=SATLiteral(8320))
-3545 -8320 0
3542 -3546 -8320 0
3543 -8320 0
3545 -3542 8320 0
3546 -3543 8320 0
c ((max_left_00004_00006_00006<max_left_00004_00006_00007)=tv=SATLiteral(8321))
-3548 -8321 0
3545 -3549 -8321 0
3546 -8321 0
3548 -3545 8321 0
3549 -3546 8321 0
c ((max_left_00004_00006_00007<max_left_00004_00006_00008)=tv=SATLiteral(8322))
-3551 -8322 0
3548 -3552 -8322 0
3549 -8322 0
3551 -3548 8322 0
3552 -3549 8322 0
c ((max_left_00004_00006_00008<max_left_00004_00006_00009)=tv=SATLiteral(8323))
-3554 -8323 0
3551 -3555 -8323 0
3552 -8323 0
3554 -3551 8323 0
3555 -3552 8323 0
c ((max_left_00004_00007_00001<max_left_00004_00007_00002)=tv=SATLiteral(8324))
3559 -8324 0
-3559 8324 0
c ((max_left_00004_00007_00002<max_left_00004_00007_00003)=tv=SATLiteral(8325))
3560 -8325 0
-3559 -8325 0
-3560 3559 8325 0
c ((max_left_00004_00007_00003<max_left_00004_00007_00004)=tv=SATLiteral(8326))
3561 -8326 0
-3560 -8326 0
-3561 3560 8326 0
c ((max_left_00004_00007_00004<max_left_00004_00007_00005)=tv=SATLiteral(8327))
3562 -8327 0
-3561 -8327 0
-3562 3561 8327 0
c ((max_left_00004_00007_00005<max_left_00004_00007_00006)=tv=SATLiteral(8328))
3563 -8328 0
-3562 -8328 0
-3563 3562 8328 0
c ((max_left_00004_00007_00006<max_left_00004_00007_00007)=tv=SATLiteral(8329))
3564 -8329 0
-3563 -8329 0
-3564 3563 8329 0
c ((max_left_00004_00007_00007<max_left_00004_00007_00008)=tv=SATLiteral(8330))
3565 -8330 0
-3564 -8330 0
-3565 3564 8330 0
c ((max_left_00004_00007_00008<max_left_00004_00007_00009)=tv=SATLiteral(8331))
3566 -8331 0
-3565 -8331 0
-3566 3565 8331 0
c ((max_left_00004_00008_00001<max_left_00004_00008_00002)=tv=SATLiteral(8332))
-3583 -8332 0
3568 -3584 -8332 0
3569 -3586 -8332 0
3571 -3588 -8332 0
3573 -3590 -8332 0
3575 -3592 -8332 0
3577 -3594 -8332 0
3579 -3596 -8332 0
3581 -8332 0
3583 -3568 8332 0
3584 -3569 8332 0
3586 -3571 8332 0
3588 -3573 8332 0
3590 -3575 8332 0
3592 -3577 8332 0
3594 -3579 8332 0
3596 -3581 8332 0
c ((max_left_00004_00008_00002<max_left_00004_00008_00003)=tv=SATLiteral(8333))
-3598 -8333 0
3583 -3599 -8333 0
3584 -3601 -8333 0
3586 -3603 -8333 0
3588 -3605 -8333 0
3590 -3607 -8333 0
3592 -3609 -8333 0
3594 -3611 -8333 0
3596 -8333 0
3598 -3583 8333 0
3599 -3584 8333 0
3601 -3586 8333 0
3603 -3588 8333 0
3605 -3590 8333 0
3607 -3592 8333 0
3609 -3594 8333 0
3611 -3596 8333 0
c ((max_left_00004_00008_00003<max_left_00004_00008_00004)=tv=SATLiteral(8334))
-3613 -8334 0
3598 -3614 -8334 0
3599 -3616 -8334 0
3601 -3618 -8334 0
3603 -3620 -8334 0
3605 -3622 -8334 0
3607 -3624 -8334 0
3609 -3626 -8334 0
3611 -8334 0
3613 -3598 8334 0
3614 -3599 8334 0
3616 -3601 8334 0
3618 -3603 8334 0
3620 -3605 8334 0
3622 -3607 8334 0
3624 -3609 8334 0
3626 -3611 8334 0
c ((max_left_00004_00008_00004<max_left_00004_00008_00005)=tv=SATLiteral(8335))
-3628 -8335 0
3613 -3629 -8335 0
3614 -3631 -8335 0
3616 -3633 -8335 0
3618 -3635 -8335 0
3620 -3637 -8335 0
3622 -3639 -8335 0
3624 -3641 -8335 0
3626 -8335 0
3628 -3613 8335 0
3629 -3614 8335 0
3631 -3616 8335 0
3633 -3618 8335 0
3635 -3620 8335 0
3637 -3622 8335 0
3639 -3624 8335 0
3641 -3626 8335 0
c ((max_left_00004_00008_00005<max_left_00004_00008_00006)=tv=SATLiteral(8336))
3629 -3643 -8336 0
3631 -3644 -8336 0
3633 -3646 -8336 0
3635 -3648 -8336 0
3637 -3650 -8336 0
3639 -3652 -8336 0
3641 -8336 0
-3628 8336 0
-3629 8336 0
3643 -3631 8336 0
3644 -3633 8336 0
3646 -3635 8336 0
3648 -3637 8336 0
3650 -3639 8336 0
3652 -3641 8336 0
c ((max_left_00004_00008_00006<max_left_00004_00008_00007)=tv=SATLiteral(8337))
-3654 -8337 0
3643 -3655 -8337 0
3644 -3657 -8337 0
3646 -3659 -8337 0
3648 -3661 -8337 0
3650 -3663 -8337 0
3652 -8337 0
3654 -3643 8337 0
3655 -3644 8337 0
3657 -3646 8337 0
3659 -3648 8337 0
3661 -3650 8337 0
3663 -3652 8337 0
c ((max_left_00004_00008_00007<max_left_00004_00008_00008)=tv=SATLiteral(8338))
3659 -3665 -8338 0
3661 -3666 -8338 0
3663 -8338 0
-3654 8338 0
-3655 8338 0
-3657 8338 0
-3659 8338 0
3665 -3661 8338 0
3666 -3663 8338 0
c ((max_left_00004_00008_00008<max_left_00004_00008_00009)=tv=SATLiteral(8339))
-3668 -8339 0
3665 -3669 -8339 0
3666 -8339 0
3668 -3665 8339 0
3669 -3666 8339 0
c ((max_left_00004_00009_00001<max_left_00004_00009_00002)=tv=SATLiteral(8340))
-3687 -8340 0
3672 -3688 -8340 0
3673 -3690 -8340 0
3675 -3692 -8340 0
3677 -3694 -8340 0
3679 -3696 -8340 0
3681 -3698 -8340 0
3683 -3700 -8340 0
3685 -8340 0
3687 -3672 8340 0
3688 -3673 8340 0
3690 -3675 8340 0
3692 -3677 8340 0
3694 -3679 8340 0
3696 -3681 8340 0
3698 -3683 8340 0
3700 -3685 8340 0
c ((max_left_00004_00009_00002<max_left_00004_00009_00003)=tv=SATLiteral(8341))
3696 -3702 -8341 0
3698 -3703 -8341 0
3700 -8341 0
-3687 8341 0
-3688 8341 0
-3690 8341 0
-3692 8341 0
-3694 8341 0
-3696 8341 0
3702 -3698 8341 0
3703 -3700 8341 0
c ((max_left_00004_00009_00003<max_left_00004_00009_00004)=tv=SATLiteral(8342))
-3705 -8342 0
3702 -3706 -8342 0
3703 -8342 0
3705 -3702 8342 0
3706 -3703 8342 0
c ((max_left_00004_00009_00004<max_left_00004_00009_00005)=tv=SATLiteral(8343))
-3708 -8343 0
3705 -3709 -8343 0
3706 -8343 0
3708 -3705 8343 0
3709 -3706 8343 0
c ((max_left_00004_00009_00005<max_left_00004_00009_00006)=tv=SATLiteral(8344))
-3711 -8344 0
3708 -3712 -8344 0
3709 -8344 0
3711 -3708 8344 0
3712 -3709 8344 0
c ((max_left_00004_00009_00006<max_left_00004_00009_00007)=tv=SATLiteral(8345))
-3714 -8345 0
3711 -3715 -8345 0
3712 -8345 0
3714 -3711 8345 0
3715 -3712 8345 0
c ((max_left_00004_00009_00007<max_left_00004_00009_00008)=tv=SATLiteral(8346))
-3717 -8346 0
3714 -3718 -8346 0
3715 -8346 0
3717 -3714 8346 0
3718 -3715 8346 0
c ((max_left_00004_00009_00008<max_left_00004_00009_00009)=tv=SATLiteral(8347))
-3720 -8347 0
3717 -3721 -8347 0
3718 -8347 0
3720 -3717 8347 0
3721 -3718 8347 0
c ((SATLiteral(11887) /\ SATLiteral(11888))=tv=SATLiteral(8348))
8348 -11887 -11888 0
11887 -8348 0
11888 -8348 0
c ((SATLiteral(11889) /\ SATLiteral(11890))=tv=SATLiteral(8349))
8349 -11889 -11890 0
11889 -8349 0
11890 -8349 0
c ((SATLiteral(11891) /\ SATLiteral(11892))=tv=SATLiteral(8350))
8350 -11891 -11892 0
11891 -8350 0
11892 -8350 0
c ((SATLiteral(11893) /\ SATLiteral(11894))=tv=SATLiteral(8351))
8351 -11893 -11894 0
11893 -8351 0
11894 -8351 0
c (((aux470 + aux472 + aux474)<=1)=tv=SATLiteral(8352))
-8352 8599 0
-8352 8593 0
-8352 8594 0
-8352 8589 0
-8352 8589 8593 0
-8352 8589 8594 0
-8352 8590 0
-8352 8590 8593 0
-8352 8590 8594 0
8352 -8589 -8593 -8599 0
c ((SATLiteral(11895) /\ SATLiteral(11896))=tv=SATLiteral(8353))
8353 -11895 -11896 0
11895 -8353 0
11896 -8353 0
c ((SATLiteral(11897) /\ SATLiteral(11898))=tv=SATLiteral(8354))
8354 -11897 -11898 0
11897 -8354 0
11898 -8354 0
c ((SATLiteral(11899) /\ SATLiteral(11900))=tv=SATLiteral(8355))
8355 -11899 -11900 0
11899 -8355 0
11900 -8355 0
c ((SATLiteral(11901) /\ SATLiteral(11902))=tv=SATLiteral(8356))
8356 -11901 -11902 0
11901 -8356 0
11902 -8356 0
c ((SATLiteral(11903) /\ SATLiteral(11904))=tv=SATLiteral(8357))
8357 -11903 -11904 0
11903 -8357 0
11904 -8357 0
c ((SATLiteral(11905) /\ SATLiteral(11906))=tv=SATLiteral(8358))
8358 -11905 -11906 0
11905 -8358 0
11906 -8358 0
c ((SATLiteral(11907) /\ SATLiteral(11908))=tv=SATLiteral(8359))
8359 -11907 -11908 0
11907 -8359 0
11908 -8359 0
c ((SATLiteral(11909) /\ SATLiteral(11910))=tv=SATLiteral(8360))
8360 -11909 -11910 0
11909 -8360 0
11910 -8360 0
c ((SATLiteral(11911) /\ SATLiteral(11912))=tv=SATLiteral(8361))
8361 -11911 -11912 0
11911 -8361 0
11912 -8361 0
c ((SATLiteral(11913) /\ SATLiteral(11914))=tv=SATLiteral(8362))
8362 -11913 -11914 0
11913 -8362 0
11914 -8362 0
c (((aux527 + aux528 + aux530)<=1)=tv=SATLiteral(8363))
-8363 8809 0
-8363 8803 0
-8363 8804 0
-8363 8800 0
-8363 8800 8803 0
-8363 8800 8804 0
-8363 8801 0
-8363 8801 8803 0
-8363 8801 8804 0
8363 -8800 -8803 -8809 0
c ((SATLiteral(11915) /\ SATLiteral(11916))=tv=SATLiteral(8364))
8364 -11915 -11916 0
11915 -8364 0
11916 -8364 0
c ((SATLiteral(11917) /\ SATLiteral(11918))=tv=SATLiteral(8365))
8365 -11917 -11918 0
11917 -8365 0
11918 -8365 0
c ((SATLiteral(11919) /\ SATLiteral(11920))=tv=SATLiteral(8366))
8366 -11919 -11920 0
11919 -8366 0
11920 -8366 0
c ((SATLiteral(11921) /\ SATLiteral(11922))=tv=SATLiteral(8367))
8367 -11921 -11922 0
11921 -8367 0
11922 -8367 0
c ((SATLiteral(11923) /\ SATLiteral(11924))=tv=SATLiteral(8368))
8368 -11923 -11924 0
11923 -8368 0
11924 -8368 0
c ((SATLiteral(11925) /\ SATLiteral(11926))=tv=SATLiteral(8369))
8369 -11925 -11926 0
11925 -8369 0
11926 -8369 0
c ((SATLiteral(11927) /\ SATLiteral(11928))=tv=SATLiteral(8370))
8370 -11927 -11928 0
11927 -8370 0
11928 -8370 0
c (((aux567 + aux568 + aux571)<=1)=tv=SATLiteral(8371))
-8371 8962 0
-8371 8955 0
-8371 8956 0
-8371 8952 0
-8371 8952 8955 0
-8371 8952 8956 0
-8371 8953 0
-8371 8953 8955 0
-8371 8953 8956 0
8371 -8952 -8955 -8962 0
c ((SATLiteral(11929) /\ SATLiteral(11930))=tv=SATLiteral(8372))
8372 -11929 -11930 0
11929 -8372 0
11930 -8372 0
c ((SATLiteral(11931) /\ SATLiteral(11932))=tv=SATLiteral(8373))
8373 -11931 -11932 0
11931 -8373 0
11932 -8373 0
c ((SATLiteral(11933) /\ SATLiteral(11934))=tv=SATLiteral(8374))
8374 -11933 -11934 0
11933 -8374 0
11934 -8374 0
c (((aux587 + aux589 + aux591)<=1)=tv=SATLiteral(8375))
-8375 9036 0
-8375 9032 0
-8375 9033 0
-8375 9026 0
-8375 9026 9032 0
-8375 9026 9033 0
-8375 9027 0
-8375 9027 9032 0
-8375 9027 9033 0
8375 -9026 -9032 -9036 0
c ((SATLiteral(11935) /\ SATLiteral(11936))=tv=SATLiteral(8376))
8376 -11935 -11936 0
11935 -8376 0
11936 -8376 0
c (((aux596 + aux598 + aux600)<=1)=tv=SATLiteral(8377))
-8377 9065 0
-8377 9059 0
-8377 9060 0
-8377 9055 0
-8377 9055 9059 0
-8377 9055 9060 0
-8377 9056 0
-8377 9056 9059 0
-8377 9056 9060 0
8377 -9055 -9059 -9065 0
c ((SATLiteral(11937) /\ SATLiteral(11938))=tv=SATLiteral(8378))
8378 -11937 -11938 0
11937 -8378 0
11938 -8378 0
c ((SATLiteral(11939) /\ SATLiteral(11940))=tv=SATLiteral(8379))
8379 -11939 -11940 0
11939 -8379 0
11940 -8379 0
c ((SATLiteral(11941) /\ SATLiteral(11942))=tv=SATLiteral(8380))
8380 -11941 -11942 0
11941 -8380 0
11942 -8380 0
c ((SATLiteral(11943) /\ SATLiteral(11944))=tv=SATLiteral(8381))
8381 -11943 -11944 0
11943 -8381 0
11944 -8381 0
c ((SATLiteral(11945) /\ SATLiteral(11946))=tv=SATLiteral(8382))
8382 -11945 -11946 0
11945 -8382 0
11946 -8382 0
c ((SATLiteral(11947) /\ SATLiteral(11948))=tv=SATLiteral(8383))
8383 -11947 -11948 0
11947 -8383 0
11948 -8383 0
c (((aux625 + aux626 + aux628)<=1)=tv=SATLiteral(8384))
-8384 9161 0
-8384 9157 0
-8384 9158 0
-8384 9154 0
-8384 9154 9157 0
-8384 9154 9158 0
-8384 9155 0
-8384 9155 9157 0
-8384 9155 9158 0
8384 -9154 -9157 -9161 0
c (((aux630 + aux631 + aux632)<=1)=tv=SATLiteral(8385))
-8385 9171 0
-8385 9168 0
-8385 9169 0
-8385 9165 0
-8385 9165 9168 0
-8385 9165 9169 0
-8385 9166 0
-8385 9166 9168 0
-8385 9166 9169 0
8385 -9165 -9168 -9171 0
c ((SATLiteral(11949) /\ SATLiteral(11950))=tv=SATLiteral(8386))
8386 -11949 -11950 0
11949 -8386 0
11950 -8386 0
c ((SATLiteral(11951) /\ SATLiteral(11952))=tv=SATLiteral(8387))
8387 -11951 -11952 0
11951 -8387 0
11952 -8387 0
c ((SATLiteral(11953) /\ SATLiteral(11954))=tv=SATLiteral(8388))
8388 -11953 -11954 0
11953 -8388 0
11954 -8388 0
c ((SATLiteral(11955) /\ SATLiteral(11956))=tv=SATLiteral(8389))
8389 -11955 -11956 0
11955 -8389 0
11956 -8389 0
c (((aux645 + aux647 + aux648)<=1)=tv=SATLiteral(8390))
-8390 9217 0
-8390 9214 0
-8390 9215 0
-8390 9210 0
-8390 9210 9214 0
-8390 9210 9215 0
-8390 9211 0
-8390 9211 9214 0
-8390 9211 9215 0
8390 -9210 -9214 -9217 0
c ((SATLiteral(11957) /\ SATLiteral(11958))=tv=SATLiteral(8391))
8391 -11957 -11958 0
11957 -8391 0
11958 -8391 0
c ((SATLiteral(11959) /\ SATLiteral(11960))=tv=SATLiteral(8392))
8392 -11959 -11960 0
11959 -8392 0
11960 -8392 0
c ((SATLiteral(11961) /\ SATLiteral(11962))=tv=SATLiteral(8393))
8393 -11961 -11962 0
11961 -8393 0
11962 -8393 0
c ((SATLiteral(11963) /\ SATLiteral(11964))=tv=SATLiteral(8394))
8394 -11963 -11964 0
11963 -8394 0
11964 -8394 0
c ((SATLiteral(11965) /\ SATLiteral(11966))=tv=SATLiteral(8395))
8395 -11965 -11966 0
11965 -8395 0
11966 -8395 0
c ((SATLiteral(11967) /\ SATLiteral(11968))=tv=SATLiteral(8396))
8396 -11967 -11968 0
11967 -8396 0
11968 -8396 0
c ((SATLiteral(11969) /\ SATLiteral(11970))=tv=SATLiteral(8397))
8397 -11969 -11970 0
11969 -8397 0
11970 -8397 0
c ((SATLiteral(11971) /\ SATLiteral(11972))=tv=SATLiteral(8398))
8398 -11971 -11972 0
11971 -8398 0
11972 -8398 0
c (((aux679 + aux681 + aux683)<=1)=tv=SATLiteral(8399))
-8399 9332 0
-8399 9328 0
-8399 9329 0
-8399 9322 0
-8399 9322 9328 0
-8399 9322 9329 0
-8399 9323 0
-8399 9323 9328 0
-8399 9323 9329 0
8399 -9322 -9328 -9332 0
c (((aux684 + aux686 + aux688)<=1)=tv=SATLiteral(8400))
-8400 9347 0
-8400 9341 0
-8400 9342 0
-8400 9337 0
-8400 9337 9341 0
-8400 9337 9342 0
-8400 9338 0
-8400 9338 9341 0
-8400 9338 9342 0
8400 -9337 -9341 -9347 0
c ((SATLiteral(11973) /\ SATLiteral(11974))=tv=SATLiteral(8401))
8401 -11973 -11974 0
11973 -8401 0
11974 -8401 0
c ((SATLiteral(11975) /\ SATLiteral(11976))=tv=SATLiteral(8402))
8402 -11975 -11976 0
11975 -8402 0
11976 -8402 0
c ((SATLiteral(11977) /\ SATLiteral(11978))=tv=SATLiteral(8403))
8403 -11977 -11978 0
11977 -8403 0
11978 -8403 0
c (((aux699 + aux700 + aux702)<=1)=tv=SATLiteral(8404))
-8404 9391 0
-8404 9387 0
-8404 9388 0
-8404 9384 0
-8404 9384 9387 0
-8404 9384 9388 0
-8404 9385 0
-8404 9385 9387 0
-8404 9385 9388 0
8404 -9384 -9387 -9391 0
c ((SATLiteral(11979) /\ SATLiteral(11980))=tv=SATLiteral(8405))
8405 -11979 -11980 0
11979 -8405 0
11980 -8405 0
c ((SATLiteral(11981) /\ SATLiteral(11982))=tv=SATLiteral(8406))
8406 -11981 -11982 0
11981 -8406 0
11982 -8406 0
c (((aux709 + aux711 + aux712)<=1)=tv=SATLiteral(8407))
-8407 9419 0
-8407 9416 0
-8407 9417 0
-8407 9412 0
-8407 9412 9416 0
-8407 9412 9417 0
-8407 9413 0
-8407 9413 9416 0
-8407 9413 9417 0
8407 -9412 -9416 -9419 0
c (((aux714 + aux715 + aux716)<=1)=tv=SATLiteral(8408))
-8408 9429 0
-8408 9426 0
-8408 9427 0
-8408 9423 0
-8408 9423 9426 0
-8408 9423 9427 0
-8408 9424 0
-8408 9424 9426 0
-8408 9424 9427 0
8408 -9423 -9426 -9429 0
c ((SATLiteral(11983) /\ SATLiteral(11984))=tv=SATLiteral(8409))
8409 -11983 -11984 0
11983 -8409 0
11984 -8409 0
c ((SATLiteral(11985) /\ SATLiteral(11986))=tv=SATLiteral(8410))
8410 -11985 -11986 0
11985 -8410 0
11986 -8410 0
c ((SATLiteral(11987) /\ SATLiteral(11988))=tv=SATLiteral(8411))
8411 -11987 -11988 0
11987 -8411 0
11988 -8411 0
c ((SATLiteral(11989) /\ SATLiteral(11990))=tv=SATLiteral(8412))
8412 -11989 -11990 0
11989 -8412 0
11990 -8412 0
c ((SATLiteral(11991) /\ SATLiteral(11992))=tv=SATLiteral(8413))
8413 -11991 -11992 0
11991 -8413 0
11992 -8413 0
c ((SATLiteral(11993) /\ SATLiteral(11994))=tv=SATLiteral(8414))
8414 -11993 -11994 0
11993 -8414 0
11994 -8414 0
c ((SATLiteral(11995) /\ SATLiteral(11996))=tv=SATLiteral(8415))
8415 -11995 -11996 0
11995 -8415 0
11996 -8415 0
c ((SATLiteral(11997) /\ SATLiteral(11998))=tv=SATLiteral(8416))
8416 -11997 -11998 0
11997 -8416 0
11998 -8416 0
c (((aux747 + aux748 + aux751)<=1)=tv=SATLiteral(8417))
-8417 9544 0
-8417 9537 0
-8417 9538 0
-8417 9534 0
-8417 9534 9537 0
-8417 9534 9538 0
-8417 9535 0
-8417 9535 9537 0
-8417 9535 9538 0
8417 -9534 -9537 -9544 0
c (((aux752 + aux754 + aux756)<=1)=tv=SATLiteral(8418))
-8418 9559 0
-8418 9555 0
-8418 9556 0
-8418 9549 0
-8418 9549 9555 0
-8418 9549 9556 0
-8418 9550 0
-8418 9550 9555 0
-8418 9550 9556 0
8418 -9549 -9555 -9559 0
c ((SATLiteral(11999) /\ SATLiteral(12000))=tv=SATLiteral(8419))
8419 -11999 -12000 0
11999 -8419 0
12000 -8419 0
c (((aux761 + aux763 + aux765)<=1)=tv=SATLiteral(8420))
-8420 9588 0
-8420 9584 0
-8420 9585 0
-8420 9578 0
-8420 9578 9584 0
-8420 9578 9585 0
-8420 9579 0
-8420 9579 9584 0
-8420 9579 9585 0
8420 -9578 -9584 -9588 0
c ((SATLiteral(12001) /\ SATLiteral(12002))=tv=SATLiteral(8421))
8421 -12001 -12002 0
12001 -8421 0
12002 -8421 0
c ((SATLiteral(12003) /\ SATLiteral(12004))=tv=SATLiteral(8422))
8422 -12003 -12004 0
12003 -8422 0
12004 -8422 0
c ((SATLiteral(12005) /\ SATLiteral(12006))=tv=SATLiteral(8423))
8423 -12005 -12006 0
12005 -8423 0
12006 -8423 0
c ((SATLiteral(12007) /\ SATLiteral(12008))=tv=SATLiteral(8424))
8424 -12007 -12008 0
12007 -8424 0
12008 -8424 0
c ((SATLiteral(12009) /\ SATLiteral(12010))=tv=SATLiteral(8425))
8425 -12009 -12010 0
12009 -8425 0
12010 -8425 0
c ((SATLiteral(12011) /\ SATLiteral(12012))=tv=SATLiteral(8426))
8426 -12011 -12012 0
12011 -8426 0
12012 -8426 0
c (((aux790 + aux791 + aux794)<=1)=tv=SATLiteral(8427))
-8427 9687 0
-8427 9680 0
-8427 9681 0
-8427 9677 0
-8427 9677 9680 0
-8427 9677 9681 0
-8427 9678 0
-8427 9678 9680 0
-8427 9678 9681 0
8427 -9677 -9680 -9687 0
c ((SATLiteral(12013) /\ SATLiteral(12014))=tv=SATLiteral(8428))
8428 -12013 -12014 0
12013 -8428 0
12014 -8428 0
c ((SATLiteral(12015) /\ SATLiteral(12016))=tv=SATLiteral(8429))
8429 -12015 -12016 0
12015 -8429 0
12016 -8429 0
c ((SATLiteral(12017) /\ SATLiteral(12018))=tv=SATLiteral(8430))
8430 -12017 -12018 0
12017 -8430 0
12018 -8430 0
c ((SATLiteral(12019) /\ SATLiteral(12020))=tv=SATLiteral(8431))
8431 -12019 -12020 0
12019 -8431 0
12020 -8431 0
c ((SATLiteral(12021) /\ SATLiteral(12022))=tv=SATLiteral(8432))
8432 -12021 -12022 0
12021 -8432 0
12022 -8432 0
c ((SATLiteral(12023) /\ SATLiteral(12024))=tv=SATLiteral(8433))
8433 -12023 -12024 0
12023 -8433 0
12024 -8433 0
c ((SATLiteral(12025) /\ SATLiteral(12026))=tv=SATLiteral(8434))
8434 -12025 -12026 0
12025 -8434 0
12026 -8434 0
c ((SATLiteral(12027) /\ SATLiteral(12028))=tv=SATLiteral(8435))
8435 -12027 -12028 0
12027 -8435 0
12028 -8435 0
c ((SATLiteral(12029) /\ SATLiteral(12030))=tv=SATLiteral(8436))
8436 -12029 -12030 0
12029 -8436 0
12030 -8436 0
c ((SATLiteral(12031) /\ SATLiteral(12032))=tv=SATLiteral(8437))
8437 -12031 -12032 0
12031 -8437 0
12032 -8437 0
c ((SATLiteral(12033) /\ SATLiteral(12034))=tv=SATLiteral(8438))
8438 -12033 -12034 0
12033 -8438 0
12034 -8438 0
c ((SATLiteral(12035) /\ SATLiteral(12036))=tv=SATLiteral(8439))
8439 -12035 -12036 0
12035 -8439 0
12036 -8439 0
c ((SATLiteral(12037) /\ SATLiteral(12038))=tv=SATLiteral(8440))
8440 -12037 -12038 0
12037 -8440 0
12038 -8440 0
c ((SATLiteral(12039) /\ SATLiteral(12040))=tv=SATLiteral(8441))
8441 -12039 -12040 0
12039 -8441 0
12040 -8441 0
c ((SATLiteral(12041) /\ SATLiteral(12042))=tv=SATLiteral(8442))
8442 -12041 -12042 0
12041 -8442 0
12042 -8442 0
c ((SATLiteral(12043) /\ SATLiteral(12044))=tv=SATLiteral(8443))
8443 -12043 -12044 0
12043 -8443 0
12044 -8443 0
c ((SATLiteral(12045) /\ SATLiteral(12046))=tv=SATLiteral(8444))
8444 -12045 -12046 0
12045 -8444 0
12046 -8444 0
c (((aux890 + aux891 + aux893)<=1)=tv=SATLiteral(8445))
-8445 10068 0
-8445 10062 0
-8445 10063 0
-8445 10059 0
-8445 10059 10062 0
-8445 10059 10063 0
-8445 10060 0
-8445 10060 10062 0
-8445 10060 10063 0
8445 -10059 -10062 -10068 0
c ((SATLiteral(12047) /\ SATLiteral(12048))=tv=SATLiteral(8446))
8446 -12047 -12048 0
12047 -8446 0
12048 -8446 0
c (((aux900 + aux901 + aux903)<=1)=tv=SATLiteral(8447))
-8447 10104 0
-8447 10098 0
-8447 10099 0
-8447 10095 0
-8447 10095 10098 0
-8447 10095 10099 0
-8447 10096 0
-8447 10096 10098 0
-8447 10096 10099 0
8447 -10095 -10098 -10104 0
c ((SATLiteral(12049) /\ SATLiteral(12050))=tv=SATLiteral(8448))
8448 -12049 -12050 0
12049 -8448 0
12050 -8448 0
c ((SATLiteral(12051) /\ SATLiteral(12052))=tv=SATLiteral(8449))
8449 -12051 -12052 0
12051 -8449 0
12052 -8449 0
c ((SATLiteral(12053) /\ SATLiteral(12054))=tv=SATLiteral(8450))
8450 -12053 -12054 0
12053 -8450 0
12054 -8450 0
c ((SATLiteral(12055) /\ SATLiteral(12056))=tv=SATLiteral(8451))
8451 -12055 -12056 0
12055 -8451 0
12056 -8451 0
c ((SATLiteral(12057) /\ SATLiteral(12058))=tv=SATLiteral(8452))
8452 -12057 -12058 0
12057 -8452 0
12058 -8452 0
c ((SATLiteral(12059) /\ SATLiteral(12060))=tv=SATLiteral(8453))
8453 -12059 -12060 0
12059 -8453 0
12060 -8453 0
c (((aux928 + aux929 + aux932)<=1)=tv=SATLiteral(8454))
-8454 10203 0
-8454 10196 0
-8454 10197 0
-8454 10193 0
-8454 10193 10196 0
-8454 10193 10197 0
-8454 10194 0
-8454 10194 10196 0
-8454 10194 10197 0
8454 -10193 -10196 -10203 0
c ((SATLiteral(12061) /\ SATLiteral(12062))=tv=SATLiteral(8455))
8455 -12061 -12062 0
12061 -8455 0
12062 -8455 0
c (((aux937 + aux938 + aux941)<=1)=tv=SATLiteral(8456))
-8456 10232 0
-8456 10225 0
-8456 10226 0
-8456 10222 0
-8456 10222 10225 0
-8456 10222 10226 0
-8456 10223 0
-8456 10223 10225 0
-8456 10223 10226 0
8456 -10222 -10225 -10232 0
c ((SATLiteral(12063) /\ SATLiteral(12064))=tv=SATLiteral(8457))
8457 -12063 -12064 0
12063 -8457 0
12064 -8457 0
c (((aux946 + aux947 + aux950)<=1)=tv=SATLiteral(8458))
-8458 10261 0
-8458 10254 0
-8458 10255 0
-8458 10251 0
-8458 10251 10254 0
-8458 10251 10255 0
-8458 10252 0
-8458 10252 10254 0
-8458 10252 10255 0
8458 -10251 -10254 -10261 0
c ((SATLiteral(12065) /\ SATLiteral(12066))=tv=SATLiteral(8459))
8459 -12065 -12066 0
12065 -8459 0
12066 -8459 0
c ((SATLiteral(12067) /\ SATLiteral(12068))=tv=SATLiteral(8460))
8460 -12067 -12068 0
12067 -8460 0
12068 -8460 0
c ((SATLiteral(12069) /\ SATLiteral(12070))=tv=SATLiteral(8461))
8461 -12069 -12070 0
12069 -8461 0
12070 -8461 0
c ((SATLiteral(12071) /\ SATLiteral(12072))=tv=SATLiteral(8462))
8462 -12071 -12072 0
12071 -8462 0
12072 -8462 0
c ((SATLiteral(12073) /\ SATLiteral(12074))=tv=SATLiteral(8463))
8463 -12073 -12074 0
12073 -8463 0
12074 -8463 0
c ((SATLiteral(12075) /\ SATLiteral(12076))=tv=SATLiteral(8464))
8464 -12075 -12076 0
12075 -8464 0
12076 -8464 0
c (((aux975 + aux977 + aux979)<=1)=tv=SATLiteral(8465))
-8465 10360 0
-8465 10354 0
-8465 10355 0
-8465 10350 0
-8465 10350 10354 0
-8465 10350 10355 0
-8465 10351 0
-8465 10351 10354 0
-8465 10351 10355 0
8465 -10350 -10354 -10360 0
c ((SATLiteral(12077) /\ SATLiteral(12078))=tv=SATLiteral(8466))
8466 -12077 -12078 0
12077 -8466 0
12078 -8466 0
c ((SATLiteral(12079) /\ SATLiteral(12080))=tv=SATLiteral(8467))
8467 -12079 -12080 0
12079 -8467 0
12080 -8467 0
c ((SATLiteral(12081) /\ SATLiteral(12082))=tv=SATLiteral(8468))
8468 -12081 -12082 0
12081 -8468 0
12082 -8468 0
c ((SATLiteral(12083) /\ SATLiteral(12084))=tv=SATLiteral(8469))
8469 -12083 -12084 0
12083 -8469 0
12084 -8469 0
c ((SATLiteral(12085) /\ SATLiteral(12086))=tv=SATLiteral(8470))
8470 -12085 -12086 0
12085 -8470 0
12086 -8470 0
c (((aux1000 + aux1001 + aux1004)<=1)=tv=SATLiteral(8471))
-8471 10445 0
-8471 10438 0
-8471 10439 0
-8471 10435 0
-8471 10435 10438 0
-8471 10435 10439 0
-8471 10436 0
-8471 10436 10438 0
-8471 10436 10439 0
8471 -10435 -10438 -10445 0
c ((SATLiteral(12087) /\ SATLiteral(12088))=tv=SATLiteral(8472))
8472 -12087 -12088 0
12087 -8472 0
12088 -8472 0
c ((SATLiteral(12089) /\ SATLiteral(12090))=tv=SATLiteral(8473))
8473 -12089 -12090 0
12089 -8473 0
12090 -8473 0
c ((SATLiteral(12091) /\ SATLiteral(12092))=tv=SATLiteral(8474))
8474 -12091 -12092 0
12091 -8474 0
12092 -8474 0
c ((SATLiteral(12093) /\ SATLiteral(12094))=tv=SATLiteral(8475))
8475 -12093 -12094 0
12093 -8475 0
12094 -8475 0
c ((SATLiteral(12095) /\ SATLiteral(12096))=tv=SATLiteral(8476))
8476 -12095 -12096 0
12095 -8476 0
12096 -8476 0
c ((SATLiteral(12097) /\ SATLiteral(12098))=tv=SATLiteral(8477))
8477 -12097 -12098 0
12097 -8477 0
12098 -8477 0
c ((SATLiteral(12099) /\ SATLiteral(12100))=tv=SATLiteral(8478))
8478 -12099 -12100 0
12099 -8478 0
12100 -8478 0
c (((aux1033 + aux1034 + aux1037)<=1)=tv=SATLiteral(8479))
-8479 10558 0
-8479 10551 0
-8479 10552 0
-8479 10548 0
-8479 10548 10551 0
-8479 10548 10552 0
-8479 10549 0
-8479 10549 10551 0
-8479 10549 10552 0
8479 -10548 -10551 -10558 0
c (((aux1039 + aux1040 + aux1042)<=1)=tv=SATLiteral(8480))
-8480 10573 0
-8480 10567 0
-8480 10568 0
-8480 10564 0
-8480 10564 10567 0
-8480 10564 10568 0
-8480 10565 0
-8480 10565 10567 0
-8480 10565 10568 0
8480 -10564 -10567 -10573 0
c ((SATLiteral(12101) /\ SATLiteral(12102))=tv=SATLiteral(8481))
8481 -12101 -12102 0
12101 -8481 0
12102 -8481 0
c ((SATLiteral(12103) /\ SATLiteral(12104))=tv=SATLiteral(8482))
8482 -12103 -12104 0
12103 -8482 0
12104 -8482 0
c ((SATLiteral(12105) /\ SATLiteral(12106))=tv=SATLiteral(8483))
8483 -12105 -12106 0
12105 -8483 0
12106 -8483 0
c ((SATLiteral(12107) /\ SATLiteral(12108))=tv=SATLiteral(8484))
8484 -12107 -12108 0
12107 -8484 0
12108 -8484 0
c ((SATLiteral(12109) /\ SATLiteral(12110))=tv=SATLiteral(8485))
8485 -12109 -12110 0
12109 -8485 0
12110 -8485 0
c ((SATLiteral(12111) /\ SATLiteral(12112))=tv=SATLiteral(8486))
8486 -12111 -12112 0
12111 -8486 0
12112 -8486 0
c (((aux1059 + aux1061 + SATLiteral(324))<=1)=tv=SATLiteral(8487))
-8487 10634 0
-8487 10630 0
-8487 10631 0
-8487 -324 0
-8487 -324 10630 0
-8487 -324 10631 0
8487 324 -10630 -10634 0
c (((aux1062 + aux1063 + aux1064)<=1)=tv=SATLiteral(8488))
-8488 10640 0
-8488 10637 0
-8488 10638 0
-8488 -10643 0
-8488 -10643 10637 0
-8488 -10643 10638 0
8488 10643 -10637 -10640 0
c (((aux1065 + aux1066 + aux1067)<=1)=tv=SATLiteral(8489))
-8489 10647 0
-8489 10644 0
-8489 10645 0
-8489 -10650 0
-8489 -10650 10644 0
-8489 -10650 10645 0
8489 10650 -10644 -10647 0
c (((SATLiteral(220) + aux1068 + aux1070)<=1)=tv=SATLiteral(8490))
-8490 10655 0
-8490 10651 0
-8490 10652 0
-8490 -220 0
-8490 -220 10651 0
-8490 -220 10652 0
8490 220 -10651 -10655 0
c ((SATLiteral(12113) /\ SATLiteral(12114))=tv=SATLiteral(8491))
8491 -12113 -12114 0
12113 -8491 0
12114 -8491 0
c ((SATLiteral(12115) /\ SATLiteral(12116))=tv=SATLiteral(8492))
8492 -12115 -12116 0
12115 -8492 0
12116 -8492 0
c ((SATLiteral(12117) /\ SATLiteral(12118))=tv=SATLiteral(8493))
8493 -12117 -12118 0
12117 -8493 0
12118 -8493 0
c (((aux1082 + aux1083 + aux1085)<=1)=tv=SATLiteral(8494))
-8494 10702 0
-8494 10696 0
-8494 10697 0
-8494 10693 0
-8494 10693 10696 0
-8494 10693 10697 0
-8494 10694 0
-8494 10694 10696 0
-8494 10694 10697 0
8494 -10693 -10696 -10702 0
c ((SATLiteral(12119) /\ SATLiteral(12120))=tv=SATLiteral(8495))
8495 -12119 -12120 0
12119 -8495 0
12120 -8495 0
c ((SATLiteral(12121) /\ SATLiteral(12122))=tv=SATLiteral(8496))
8496 -12121 -12122 0
12121 -8496 0
12122 -8496 0
c ((SATLiteral(12123) /\ SATLiteral(12124))=tv=SATLiteral(8497))
8497 -12123 -12124 0
12123 -8497 0
12124 -8497 0
c (((aux1098 + aux1100 + aux1102)<=1)=tv=SATLiteral(8498))
-8498 10759 0
-8498 10753 0
-8498 10754 0
-8498 10749 0
-8498 10749 10753 0
-8498 10749 10754 0
-8498 10750 0
-8498 10750 10753 0
-8498 10750 10754 0
8498 -10749 -10753 -10759 0
c ((SATLiteral(12125) /\ SATLiteral(12126))=tv=SATLiteral(8499))
8499 -12125 -12126 0
12125 -8499 0
12126 -8499 0
c ((SATLiteral(12127) /\ SATLiteral(12128))=tv=SATLiteral(8500))
8500 -12127 -12128 0
12127 -8500 0
12128 -8500 0
c ((SATLiteral(12129) /\ SATLiteral(12130))=tv=SATLiteral(8501))
8501 -12129 -12130 0
12129 -8501 0
12130 -8501 0
c (((aux1115 + aux1116 + aux1119)<=1)=tv=SATLiteral(8502))
-8502 10816 0
-8502 10809 0
-8502 10810 0
-8502 10806 0
-8502 10806 10809 0
-8502 10806 10810 0
-8502 10807 0
-8502 10807 10809 0
-8502 10807 10810 0
8502 -10806 -10809 -10816 0
c ((SATLiteral(12131) /\ SATLiteral(12132))=tv=SATLiteral(8503))
8503 -12131 -12132 0
12131 -8503 0
12132 -8503 0
c ((SATLiteral(12133) /\ SATLiteral(12134))=tv=SATLiteral(8504))
8504 -12133 -12134 0
12133 -8504 0
12134 -8504 0
c ((SATLiteral(12135) /\ SATLiteral(12136))=tv=SATLiteral(8505))
8505 -12135 -12136 0
12135 -8505 0
12136 -8505 0
c ((SATLiteral(12137) /\ SATLiteral(12138))=tv=SATLiteral(8506))
8506 -12137 -12138 0
12137 -8506 0
12138 -8506 0
c (((aux1136 + aux1137 + aux1140)<=1)=tv=SATLiteral(8507))
-8507 10887 0
-8507 10880 0
-8507 10881 0
-8507 10877 0
-8507 10877 10880 0
-8507 10877 10881 0
-8507 10878 0
-8507 10878 10880 0
-8507 10878 10881 0
8507 -10877 -10880 -10887 0
c ((SATLiteral(12139) /\ SATLiteral(12140))=tv=SATLiteral(8508))
8508 -12139 -12140 0
12139 -8508 0
12140 -8508 0
c ((SATLiteral(12141) /\ SATLiteral(12142))=tv=SATLiteral(8509))
8509 -12141 -12142 0
12141 -8509 0
12142 -8509 0
c SATLiteral(92)
92 0
c SATLiteral(228)
228 0
c SATLiteral(319)
319 0
c SATLiteral(395)
395 0
c SATLiteral(456)
456 0
c SATLiteral(517)
517 0
c SATLiteral(548)
548 0
c SATLiteral(564)
564 0
c SATLiteral(580)
580 0
c SATLiteral(626)
626 0
c SATLiteral(717)
717 0
c SATLiteral(748)
748 0
c SATLiteral(764)
764 0
c SATLiteral(795)
795 0
c SATLiteral(811)
811 0
c SATLiteral(932)
932 0
c SATLiteral(948)
948 0
c (field_00009_00001=variant_fields_00004_00001_00001)
-872 7084 0
-873 7086 0
-874 7088 0
-875 7090 0
-876 7092 0
-877 7094 0
-878 7096 0
-879 7098 0
-880 -7097 0
-7084 872 0
-7086 873 0
-7088 874 0
-7090 875 0
-7092 876 0
-7094 877 0
-7096 878 0
-7098 879 0
7097 880 0
c (variant_fields_00003_00001_00001=field_00001_00009)
-6107 108 0
-6109 109 0
-6111 110 0
-6113 111 0
-6115 112 0
-6117 113 0
-6119 114 0
-6121 115 0
6120 116 0
-108 6107 0
-109 6109 0
-110 6111 0
-111 6113 0
-112 6115 0
-113 6117 0
-114 6119 0
-115 6121 0
-116 -6120 0
c (variant_fields_00001_00001_00001=field_00001_00001)
-4153 2 0
-4155 3 0
-4157 4 0
-4159 5 0
-4161 6 0
-4163 7 0
-4165 8 0
-4167 9 0
4166 10 0
-2 4153 0
-3 4155 0
-4 4157 0
-5 4159 0
-6 4161 0
-7 4163 0
-8 4165 0
-9 4167 0
-10 -4166 0
c (variant_fields_00002_00001_00001=field_00001_00001)
-5130 2 0
-5132 3 0
-5134 4 0
-5136 5 0
-5138 6 0
-5140 7 0
-5142 8 0
-5144 9 0
5143 10 0
-2 5130 0
-3 5132 0
-4 5134 0
-5 5136 0
-6 5138 0
-7 5140 0
-8 5142 0
-9 5144 0
-10 -5143 0
c (field_00008_00001=variant_fields_00004_00001_00002)
-765 7099 0
-766 7101 0
-767 7103 0
-768 7105 0
-769 7107 0
-770 7109 0
-771 7111 0
-772 7113 0
-773 -7112 0
-7099 765 0
-7101 766 0
-7103 767 0
-7105 768 0
-7107 769 0
-7109 770 0
-7111 771 0
-7113 772 0
7112 773 0
c (variant_fields_00003_00001_00002=field_00001_00008)
-6122 93 0
-6124 94 0
-6126 95 0
-6128 96 0
-6130 97 0
-6132 98 0
-6134 99 0
-6136 100 0
6135 101 0
-93 6122 0
-94 6124 0
-95 6126 0
-96 6128 0
-97 6130 0
-98 6132 0
-99 6134 0
-100 6136 0
-101 -6135 0
c (variant_fields_00001_00001_00002=field_00001_00002)
-4168 17 0
-4170 18 0
-4172 19 0
-4174 20 0
-4176 21 0
-4178 22 0
-4180 23 0
-4182 24 0
4181 25 0
-17 4168 0
-18 4170 0
-19 4172 0
-20 4174 0
-21 4176 0
-22 4178 0
-23 4180 0
-24 4182 0
-25 -4181 0
c (variant_fields_00002_00001_00002=field_00002_00001)
-5145 123 0
-5147 124 0
-5149 125 0
-5151 126 0
-5153 127 0
-5155 128 0
-5157 129 0
-5159 130 0
5158 131 0
-123 5145 0
-124 5147 0
-125 5149 0
-126 5151 0
-127 5153 0
-128 5155 0
-129 5157 0
-130 5159 0
-131 -5158 0
c (field_00007_00001=variant_fields_00004_00001_00003)
-672 7114 0
-673 7116 0
-674 7118 0
-675 7120 0
-676 7122 0
-677 7124 0
-678 7126 0
-679 7128 0
-680 -7127 0
-7114 672 0
-7116 673 0
-7118 674 0
-7120 675 0
-7122 676 0
-7124 677 0
-7126 678 0
-7128 679 0
7127 680 0
c (variant_fields_00003_00001_00003=field_00001_00007)
-6137 92 0
-92 6137 0
c (variant_fields_00001_00001_00003=field_00001_00003)
-4183 32 0
-4185 33 0
-4187 34 0
-4189 35 0
-4191 36 0
-4193 37 0
-4195 38 0
-4197 39 0
4196 40 0
-32 4183 0
-33 4185 0
-34 4187 0
-35 4189 0
-36 4191 0
-37 4193 0
-38 4195 0
-39 4197 0
-40 -4196 0
c (variant_fields_00002_00001_00003=field_00003_00001)
-5160 244 0
-5162 245 0
-5164 246 0
-5166 247 0
-5168 248 0
-5170 249 0
-5172 250 0
-5174 251 0
5173 252 0
-244 5160 0
-245 5162 0
-246 5164 0
-247 5166 0
-248 5168 0
-249 5170 0
-250 5172 0
-251 5174 0
-252 -5173 0
c (field_00006_00001=variant_fields_00004_00001_00004)
-565 7129 0
-566 7131 0
-567 7133 0
-568 7135 0
-569 7137 0
-570 7139 0
-571 7141 0
-572 7143 0
-573 -7142 0
-7129 565 0
-7131 566 0
-7133 567 0
-7135 568 0
-7137 569 0
-7139 570 0
-7141 571 0
-7143 572 0
7142 573 0
c (variant_fields_00003_00001_00004=field_00001_00006)
-6138 77 0
-6140 78 0
-6142 79 0
-6144 80 0
-6146 81 0
-6148 82 0
-6150 83 0
-6152 84 0
6151 85 0
-77 6138 0
-78 6140 0
-79 6142 0
-80 6144 0
-81 6146 0
-82 6148 0
-83 6150 0
-84 6152 0
-85 -6151 0
c (variant_fields_00001_00001_00004=field_00001_00004)
-4198 47 0
-4200 48 0
-4202 49 0
-4204 50 0
-4206 51 0
-4208 52 0
-4210 53 0
-4212 54 0
4211 55 0
-47 4198 0
-48 4200 0
-49 4202 0
-50 4204 0
-51 4206 0
-52 4208 0
-53 4210 0
-54 4212 0
-55 -4211 0
c (variant_fields_00002_00001_00004=field_00004_00001)
-5175 365 0
-5177 366 0
-5179 367 0
-5181 368 0
-5183 369 0
-5185 370 0
-5187 371 0
-5189 372 0
5188 373 0
-365 5175 0
-366 5177 0
-367 5179 0
-368 5181 0
-369 5183 0
-370 5185 0
-371 5187 0
-372 5189 0
-373 -5188 0
c (field_00005_00001=variant_fields_00004_00001_00005)
-472 7144 0
-473 7146 0
-474 7148 0
-475 7150 0
-476 7152 0
-477 7154 0
-478 7156 0
-479 7158 0
-480 -7157 0
-7144 472 0
-7146 473 0
-7148 474 0
-7150 475 0
-7152 476 0
-7154 477 0
-7156 478 0
-7158 479 0
7157 480 0
c (variant_fields_00003_00001_00005=field_00001_00005)
-6153 62 0
-6155 63 0
-6157 64 0
-6159 65 0
-6161 66 0
-6163 67 0
-6165 68 0
-6167 69 0
6166 70 0
-62 6153 0
-63 6155 0
-64 6157 0
-65 6159 0
-66 6161 0
-67 6163 0
-68 6165 0
-69 6167 0
-70 -6166 0
c (variant_fields_00001_00001_00005=field_00001_00005)
-4213 62 0
-4215 63 0
-4217 64 0
-4219 65 0
-4221 66 0
-4223 67 0
-4225 68 0
-4227 69 0
4226 70 0
-62 4213 0
-63 4215 0
-64 4217 0
-65 4219 0
-66 4221 0
-67 4223 0
-68 4225 0
-69 4227 0
-70 -4226 0
c (variant_fields_00002_00001_00005=field_00005_00001)
-5190 472 0
-5192 473 0
-5194 474 0
-5196 475 0
-5198 476 0
-5200 477 0
-5202 478 0
-5204 479 0
5203 480 0
-472 5190 0
-473 5192 0
-474 5194 0
-475 5196 0
-476 5198 0
-477 5200 0
-478 5202 0
-479 5204 0
-480 -5203 0
c (field_00004_00001=variant_fields_00004_00001_00006)
-365 7159 0
-366 7161 0
-367 7163 0
-368 7165 0
-369 7167 0
-370 7169 0
-371 7171 0
-372 7173 0
-373 -7172 0
-7159 365 0
-7161 366 0
-7163 367 0
-7165 368 0
-7167 369 0
-7169 370 0
-7171 371 0
-7173 372 0
7172 373 0
c (variant_fields_00003_00001_00006=field_00001_00004)
-6168 47 0
-6170 48 0
-6172 49 0
-6174 50 0
-6176 51 0
-6178 52 0
-6180 53 0
-6182 54 0
6181 55 0
-47 6168 0
-48 6170 0
-49 6172 0
-50 6174 0
-51 6176 0
-52 6178 0
-53 6180 0
-54 6182 0
-55 -6181 0
c (variant_fields_00001_00001_00006=field_00001_00006)
-4228 77 0
-4230 78 0
-4232 79 0
-4234 80 0
-4236 81 0
-4238 82 0
-4240 83 0
-4242 84 0
4241 85 0
-77 4228 0
-78 4230 0
-79 4232 0
-80 4234 0
-81 4236 0
-82 4238 0
-83 4240 0
-84 4242 0
-85 -4241 0
c (variant_fields_00002_00001_00006=field_00006_00001)
-5205 565 0
-5207 566 0
-5209 567 0
-5211 568 0
-5213 569 0
-5215 570 0
-5217 571 0
-5219 572 0
5218 573 0
-565 5205 0
-566 5207 0
-567 5209 0
-568 5211 0
-569 5213 0
-570 5215 0
-571 5217 0
-572 5219 0
-573 -5218 0
c (field_00003_00001=variant_fields_00004_00001_00007)
-244 7174 0
-245 7176 0
-246 7178 0
-247 7180 0
-248 7182 0
-249 7184 0
-250 7186 0
-251 7188 0
-252 -7187 0
-7174 244 0
-7176 245 0
-7178 246 0
-7180 247 0
-7182 248 0
-7184 249 0
-7186 250 0
-7188 251 0
7187 252 0
c (variant_fields_00003_00001_00007=field_00001_00003)
-6183 32 0
-6185 33 0
-6187 34 0
-6189 35 0
-6191 36 0
-6193 37 0
-6195 38 0
-6197 39 0
6196 40 0
-32 6183 0
-33 6185 0
-34 6187 0
-35 6189 0
-36 6191 0
-37 6193 0
-38 6195 0
-39 6197 0
-40 -6196 0
c (variant_fields_00001_00001_00007=field_00001_00007)
-4243 92 0
-92 4243 0
c (variant_fields_00002_00001_00007=field_00007_00001)
-5220 672 0
-5222 673 0
-5224 674 0
-5226 675 0
-5228 676 0
-5230 677 0
-5232 678 0
-5234 679 0
5233 680 0
-672 5220 0
-673 5222 0
-674 5224 0
-675 5226 0
-676 5228 0
-677 5230 0
-678 5232 0
-679 5234 0
-680 -5233 0
c (field_00002_00001=variant_fields_00004_00001_00008)
-123 7189 0
-124 7191 0
-125 7193 0
-126 7195 0
-127 7197 0
-128 7199 0
-129 7201 0
-130 7203 0
-131 -7202 0
-7189 123 0
-7191 124 0
-7193 125 0
-7195 126 0
-7197 127 0
-7199 128 0
-7201 129 0
-7203 130 0
7202 131 0
c (variant_fields_00003_00001_00008=field_00001_00002)
-6198 17 0
-6200 18 0
-6202 19 0
-6204 20 0
-6206 21 0
-6208 22 0
-6210 23 0
-6212 24 0
6211 25 0
-17 6198 0
-18 6200 0
-19 6202 0
-20 6204 0
-21 6206 0
-22 6208 0
-23 6210 0
-24 6212 0
-25 -6211 0
c (variant_fields_00001_00001_00008=field_00001_00008)
-4244 93 0
-4246 94 0
-4248 95 0
-4250 96 0
-4252 97 0
-4254 98 0
-4256 99 0
-4258 100 0
4257 101 0
-93 4244 0
-94 4246 0
-95 4248 0
-96 4250 0
-97 4252 0
-98 4254 0
-99 4256 0
-100 4258 0
-101 -4257 0
c (variant_fields_00002_00001_00008=field_00008_00001)
-5235 765 0
-5237 766 0
-5239 767 0
-5241 768 0
-5243 769 0
-5245 770 0
-5247 771 0
-5249 772 0
5248 773 0
-765 5235 0
-766 5237 0
-767 5239 0
-768 5241 0
-769 5243 0
-770 5245 0
-771 5247 0
-772 5249 0
-773 -5248 0
c (field_00001_00001=variant_fields_00004_00001_00009)
-2 7204 0
-3 7206 0
-4 7208 0
-5 7210 0
-6 7212 0
-7 7214 0
-8 7216 0
-9 7218 0
-10 -7217 0
-7204 2 0
-7206 3 0
-7208 4 0
-7210 5 0
-7212 6 0
-7214 7 0
-7216 8 0
-7218 9 0
7217 10 0
c (variant_fields_00003_00001_00009=field_00001_00001)
-6213 2 0
-6215 3 0
-6217 4 0
-6219 5 0
-6221 6 0
-6223 7 0
-6225 8 0
-6227 9 0
6226 10 0
-2 6213 0
-3 6215 0
-4 6217 0
-5 6219 0
-6 6221 0
-7 6223 0
-8 6225 0
-9 6227 0
-10 -6226 0
c (variant_fields_00001_00001_00009=field_00001_00009)
-4259 108 0
-4261 109 0
-4263 110 0
-4265 111 0
-4267 112 0
-4269 113 0
-4271 114 0
-4273 115 0
4272 116 0
-108 4259 0
-109 4261 0
-110 4263 0
-111 4265 0
-112 4267 0
-113 4269 0
-114 4271 0
-115 4273 0
-116 -4272 0
c (variant_fields_00002_00001_00009=field_00009_00001)
-5250 872 0
-5252 873 0
-5254 874 0
-5256 875 0
-5258 876 0
-5260 877 0
-5262 878 0
-5264 879 0
5263 880 0
-872 5250 0
-873 5252 0
-874 5254 0
-875 5256 0
-876 5258 0
-877 5260 0
-878 5262 0
-879 5264 0
-880 -5263 0
c (variant_fields_00004_00002_00001=field_00009_00002)
-7219 887 0
-7221 888 0
-7223 889 0
-7225 890 0
-7227 891 0
-7229 892 0
-7231 893 0
-7233 894 0
7232 895 0
-887 7219 0
-888 7221 0
-889 7223 0
-890 7225 0
-891 7227 0
-892 7229 0
-893 7231 0
-894 7233 0
-895 -7232 0
c (variant_fields_00003_00002_00001=field_00002_00009)
-6228 229 0
-6230 230 0
-6232 231 0
-6234 232 0
-6236 233 0
-6238 234 0
-6240 235 0
-6242 236 0
6241 237 0
-229 6228 0
-230 6230 0
-231 6232 0
-232 6234 0
-233 6236 0
-234 6238 0
-235 6240 0
-236 6242 0
-237 -6241 0
c (variant_fields_00001_00002_00001=field_00002_00001)
-4274 123 0
-4276 124 0
-4278 125 0
-4280 126 0
-4282 127 0
-4284 128 0
-4286 129 0
-4288 130 0
4287 131 0
-123 4274 0
-124 4276 0
-125 4278 0
-126 4280 0
-127 4282 0
-128 4284 0
-129 4286 0
-130 4288 0
-131 -4287 0
c (variant_fields_00002_00002_00001=field_00001_00002)
-5265 17 0
-5267 18 0
-5269 19 0
-5271 20 0
-5273 21 0
-5275 22 0
-5277 23 0
-5279 24 0
5278 25 0
-17 5265 0
-18 5267 0
-19 5269 0
-20 5271 0
-21 5273 0
-22 5275 0
-23 5277 0
-24 5279 0
-25 -5278 0
c (field_00008_00002=variant_fields_00004_00002_00002)
-780 7234 0
-781 7236 0
-782 7238 0
-783 7240 0
-784 7242 0
-785 7244 0
-786 7246 0
-787 7248 0
-788 -7247 0
-7234 780 0
-7236 781 0
-7238 782 0
-7240 783 0
-7242 784 0
-7244 785 0
-7246 786 0
-7248 787 0
7247 788 0
c (variant_fields_00003_00002_00002=field_00002_00008)
-6243 228 0
-228 6243 0
c (variant_fields_00001_00002_00002=field_00002_00002)
-4289 138 0
-4291 139 0
-4293 140 0
-4295 141 0
-4297 142 0
-4299 143 0
-4301 144 0
-4303 145 0
4302 146 0
-138 4289 0
-139 4291 0
-140 4293 0
-141 4295 0
-142 4297 0
-143 4299 0
-144 4301 0
-145 4303 0
-146 -4302 0
c (variant_fields_00002_00002_00002=field_00002_00002)
-5280 138 0
-5282 139 0
-5284 140 0
-5286 141 0
-5288 142 0
-5290 143 0
-5292 144 0
-5294 145 0
5293 146 0
-138 5280 0
-139 5282 0
-140 5284 0
-141 5286 0
-142 5288 0
-143 5290 0
-144 5292 0
-145 5294 0
-146 -5293 0
c (variant_fields_00004_00002_00003=field_00007_00002)
-7249 687 0
-7251 688 0
-7253 689 0
-7255 690 0
-7257 691 0
-7259 692 0
-7261 693 0
-7263 694 0
7262 695 0
-687 7249 0
-688 7251 0
-689 7253 0
-690 7255 0
-691 7257 0
-692 7259 0
-693 7261 0
-694 7263 0
-695 -7262 0
c (variant_fields_00003_00002_00003=field_00002_00007)
-6244 213 0
-6246 214 0
-6248 215 0
-6250 216 0
-6252 217 0
-6254 218 0
-6256 219 0
-6258 220 0
6257 221 0
-213 6244 0
-214 6246 0
-215 6248 0
-216 6250 0
-217 6252 0
-218 6254 0
-219 6256 0
-220 6258 0
-221 -6257 0
c (variant_fields_00001_00002_00003=field_00002_00003)
-4304 153 0
-4306 154 0
-4308 155 0
-4310 156 0
-4312 157 0
-4314 158 0
-4316 159 0
-4318 160 0
4317 161 0
-153 4304 0
-154 4306 0
-155 4308 0
-156 4310 0
-157 4312 0
-158 4314 0
-159 4316 0
-160 4318 0
-161 -4317 0
c (field_00003_00002=variant_fields_00002_00002_00003)
-259 5295 0
-260 5297 0
-261 5299 0
-262 5301 0
-263 5303 0
-264 5305 0
-265 5307 0
-266 5309 0
-267 -5308 0
-5295 259 0
-5297 260 0
-5299 261 0
-5301 262 0
-5303 263 0
-5305 264 0
-5307 265 0
-5309 266 0
5308 267 0
c (variant_fields_00004_00002_00004=field_00006_00002)
-7264 580 0
-580 7264 0
c (variant_fields_00003_00002_00004=field_00002_00006)
-6259 198 0
-6261 199 0
-6263 200 0
-6265 201 0
-6267 202 0
-6269 203 0
-6271 204 0
-6273 205 0
6272 206 0
-198 6259 0
-199 6261 0
-200 6263 0
-201 6265 0
-202 6267 0
-203 6269 0
-204 6271 0
-205 6273 0
-206 -6272 0
c (variant_fields_00001_00002_00004=field_00002_00004)
-4319 168 0
-4321 169 0
-4323 170 0
-4325 171 0
-4327 172 0
-4329 173 0
-4331 174 0
-4333 175 0
4332 176 0
-168 4319 0
-169 4321 0
-170 4323 0
-171 4325 0
-172 4327 0
-173 4329 0
-174 4331 0
-175 4333 0
-176 -4332 0
c (variant_fields_00002_00002_00004=field_00004_00002)
-5310 380 0
-5312 381 0
-5314 382 0
-5316 383 0
-5318 384 0
-5320 385 0
-5322 386 0
-5324 387 0
5323 388 0
-380 5310 0
-381 5312 0
-382 5314 0
-383 5316 0
-384 5318 0
-385 5320 0
-386 5322 0
-387 5324 0
-388 -5323 0
c (variant_fields_00004_00002_00005=field_00005_00002)
-7265 487 0
-7267 488 0
-7269 489 0
-7271 490 0
-7273 491 0
-7275 492 0
-7277 493 0
-7279 494 0
7278 495 0
-487 7265 0
-488 7267 0
-489 7269 0
-490 7271 0
-491 7273 0
-492 7275 0
-493 7277 0
-494 7279 0
-495 -7278 0
c (variant_fields_00003_00002_00005=field_00002_00005)
-6274 183 0
-6276 184 0
-6278 185 0
-6280 186 0
-6282 187 0
-6284 188 0
-6286 189 0
-6288 190 0
6287 191 0
-183 6274 0
-184 6276 0
-185 6278 0
-186 6280 0
-187 6282 0
-188 6284 0
-189 6286 0
-190 6288 0
-191 -6287 0
c (variant_fields_00001_00002_00005=field_00002_00005)
-4334 183 0
-4336 184 0
-4338 185 0
-4340 186 0
-4342 187 0
-4344 188 0
-4346 189 0
-4348 190 0
4347 191 0
-183 4334 0
-184 4336 0
-185 4338 0
-186 4340 0
-187 4342 0
-188 4344 0
-189 4346 0
-190 4348 0
-191 -4347 0
c (variant_fields_00002_00002_00005=field_00005_00002)
-5325 487 0
-5327 488 0
-5329 489 0
-5331 490 0
-5333 491 0
-5335 492 0
-5337 493 0
-5339 494 0
5338 495 0
-487 5325 0
-488 5327 0
-489 5329 0
-490 5331 0
-491 5333 0
-492 5335 0
-493 5337 0
-494 5339 0
-495 -5338 0
c (variant_fields_00004_00002_00006=field_00004_00002)
-7280 380 0
-7282 381 0
-7284 382 0
-7286 383 0
-7288 384 0
-7290 385 0
-7292 386 0
-7294 387 0
7293 388 0
-380 7280 0
-381 7282 0
-382 7284 0
-383 7286 0
-384 7288 0
-385 7290 0
-386 7292 0
-387 7294 0
-388 -7293 0
c (variant_fields_00003_00002_00006=field_00002_00004)
-6289 168 0
-6291 169 0
-6293 170 0
-6295 171 0
-6297 172 0
-6299 173 0
-6301 174 0
-6303 175 0
6302 176 0
-168 6289 0
-169 6291 0
-170 6293 0
-171 6295 0
-172 6297 0
-173 6299 0
-174 6301 0
-175 6303 0
-176 -6302 0
c (variant_fields_00001_00002_00006=field_00002_00006)
-4349 198 0
-4351 199 0
-4353 200 0
-4355 201 0
-4357 202 0
-4359 203 0
-4361 204 0
-4363 205 0
4362 206 0
-198 4349 0
-199 4351 0
-200 4353 0
-201 4355 0
-202 4357 0
-203 4359 0
-204 4361 0
-205 4363 0
-206 -4362 0
c (variant_fields_00002_00002_00006=field_00006_00002)
-5340 580 0
-580 5340 0
c (field_00003_00002=variant_fields_00004_00002_00007)
-259 7295 0
-260 7297 0
-261 7299 0
-262 7301 0
-263 7303 0
-264 7305 0
-265 7307 0
-266 7309 0
-267 -7308 0
-7295 259 0
-7297 260 0
-7299 261 0
-7301 262 0
-7303 263 0
-7305 264 0
-7307 265 0
-7309 266 0
7308 267 0
c (variant_fields_00003_00002_00007=field_00002_00003)
-6304 153 0
-6306 154 0
-6308 155 0
-6310 156 0
-6312 157 0
-6314 158 0
-6316 159 0
-6318 160 0
6317 161 0
-153 6304 0
-154 6306 0
-155 6308 0
-156 6310 0
-157 6312 0
-158 6314 0
-159 6316 0
-160 6318 0
-161 -6317 0
c (variant_fields_00001_00002_00007=field_00002_00007)
-4364 213 0
-4366 214 0
-4368 215 0
-4370 216 0
-4372 217 0
-4374 218 0
-4376 219 0
-4378 220 0
4377 221 0
-213 4364 0
-214 4366 0
-215 4368 0
-216 4370 0
-217 4372 0
-218 4374 0
-219 4376 0
-220 4378 0
-221 -4377 0
c (variant_fields_00002_00002_00007=field_00007_00002)
-5341 687 0
-5343 688 0
-5345 689 0
-5347 690 0
-5349 691 0
-5351 692 0
-5353 693 0
-5355 694 0
5354 695 0
-687 5341 0
-688 5343 0
-689 5345 0
-690 5347 0
-691 5349 0
-692 5351 0
-693 5353 0
-694 5355 0
-695 -5354 0
c (variant_fields_00004_00002_00008=field_00002_00002)
-7310 138 0
-7312 139 0
-7314 140 0
-7316 141 0
-7318 142 0
-7320 143 0
-7322 144 0
-7324 145 0
7323 146 0
-138 7310 0
-139 7312 0
-140 7314 0
-141 7316 0
-142 7318 0
-143 7320 0
-144 7322 0
-145 7324 0
-146 -7323 0
c (variant_fields_00003_00002_00008=field_00002_00002)
-6319 138 0
-6321 139 0
-6323 140 0
-6325 141 0
-6327 142 0
-6329 143 0
-6331 144 0
-6333 145 0
6332 146 0
-138 6319 0
-139 6321 0
-140 6323 0
-141 6325 0
-142 6327 0
-143 6329 0
-144 6331 0
-145 6333 0
-146 -6332 0
c (variant_fields_00001_00002_00008=field_00002_00008)
-4379 228 0
-228 4379 0
c (field_00008_00002=variant_fields_00002_00002_00008)
-780 5356 0
-781 5358 0
-782 5360 0
-783 5362 0
-784 5364 0
-785 5366 0
-786 5368 0
-787 5370 0
-788 -5369 0
-5356 780 0
-5358 781 0
-5360 782 0
-5362 783 0
-5364 784 0
-5366 785 0
-5368 786 0
-5370 787 0
5369 788 0
c (variant_fields_00004_00002_00009=field_00001_00002)
-7325 17 0
-7327 18 0
-7329 19 0
-7331 20 0
-7333 21 0
-7335 22 0
-7337 23 0
-7339 24 0
7338 25 0
-17 7325 0
-18 7327 0
-19 7329 0
-20 7331 0
-21 7333 0
-22 7335 0
-23 7337 0
-24 7339 0
-25 -7338 0
c (variant_fields_00003_00002_00009=field_00002_00001)
-6334 123 0
-6336 124 0
-6338 125 0
-6340 126 0
-6342 127 0
-6344 128 0
-6346 129 0
-6348 130 0
6347 131 0
-123 6334 0
-124 6336 0
-125 6338 0
-126 6340 0
-127 6342 0
-128 6344 0
-129 6346 0
-130 6348 0
-131 -6347 0
c (variant_fields_00001_00002_00009=field_00002_00009)
-4380 229 0
-4382 230 0
-4384 231 0
-4386 232 0
-4388 233 0
-4390 234 0
-4392 235 0
-4394 236 0
4393 237 0
-229 4380 0
-230 4382 0
-231 4384 0
-232 4386 0
-233 4388 0
-234 4390 0
-235 4392 0
-236 4394 0
-237 -4393 0
c (variant_fields_00002_00002_00009=field_00009_00002)
-5371 887 0
-5373 888 0
-5375 889 0
-5377 890 0
-5379 891 0
-5381 892 0
-5383 893 0
-5385 894 0
5384 895 0
-887 5371 0
-888 5373 0
-889 5375 0
-890 5377 0
-891 5379 0
-892 5381 0
-893 5383 0
-894 5385 0
-895 -5384 0
c (field_00009_00003=variant_fields_00004_00003_00001)
-902 7340 0
-903 7342 0
-904 7344 0
-905 7346 0
-906 7348 0
-907 7350 0
-908 7352 0
-909 7354 0
-910 -7353 0
-7340 902 0
-7342 903 0
-7344 904 0
-7346 905 0
-7348 906 0
-7350 907 0
-7352 908 0
-7354 909 0
7353 910 0
c (field_00003_00009=variant_fields_00003_00003_00001)
-350 6349 0
-351 6351 0
-352 6353 0
-353 6355 0
-354 6357 0
-355 6359 0
-356 6361 0
-357 6363 0
-358 -6362 0
-6349 350 0
-6351 351 0
-6353 352 0
-6355 353 0
-6357 354 0
-6359 355 0
-6361 356 0
-6363 357 0
6362 358 0
c (field_00003_00001=variant_fields_00001_00003_00001)
-244 4395 0
-245 4397 0
-246 4399 0
-247 4401 0
-248 4403 0
-249 4405 0
-250 4407 0
-251 4409 0
-252 -4408 0
-4395 244 0
-4397 245 0
-4399 246 0
-4401 247 0
-4403 248 0
-4405 249 0
-4407 250 0
-4409 251 0
4408 252 0
c (variant_fields_00002_00003_00001=field_00001_00003)
-5386 32 0
-5388 33 0
-5390 34 0
-5392 35 0
-5394 36 0
-5396 37 0
-5398 38 0
-5400 39 0
5399 40 0
-32 5386 0
-33 5388 0
-34 5390 0
-35 5392 0
-36 5394 0
-37 5396 0
-38 5398 0
-39 5400 0
-40 -5399 0
c (field_00008_00003=variant_fields_00004_00003_00002)
-795 7355 0
-7355 795 0
c (field_00003_00008=variant_fields_00003_00003_00002)
-335 6364 0
-336 6366 0
-337 6368 0
-338 6370 0
-339 6372 0
-340 6374 0
-341 6376 0
-342 6378 0
-343 -6377 0
-6364 335 0
-6366 336 0
-6368 337 0
-6370 338 0
-6372 339 0
-6374 340 0
-6376 341 0
-6378 342 0
6377 343 0
c (field_00003_00002=variant_fields_00001_00003_00002)
-259 4410 0
-260 4412 0
-261 4414 0
-262 4416 0
-263 4418 0
-264 4420 0
-265 4422 0
-266 4424 0
-267 -4423 0
-4410 259 0
-4412 260 0
-4414 261 0
-4416 262 0
-4418 263 0
-4420 264 0
-4422 265 0
-4424 266 0
4423 267 0
c (variant_fields_00002_00003_00002=field_00002_00003)
-5401 153 0
-5403 154 0
-5405 155 0
-5407 156 0
-5409 157 0
-5411 158 0
-5413 159 0
-5415 160 0
5414 161 0
-153 5401 0
-154 5403 0
-155 5405 0
-156 5407 0
-157 5409 0
-158 5411 0
-159 5413 0
-160 5415 0
-161 -5414 0
c (variant_fields_00004_00003_00003=field_00007_00003)
-7356 702 0
-7358 703 0
-7360 704 0
-7362 705 0
-7364 706 0
-7366 707 0
-7368 708 0
-7370 709 0
7369 710 0
-702 7356 0
-703 7358 0
-704 7360 0
-705 7362 0
-706 7364 0
-707 7366 0
-708 7368 0
-709 7370 0
-710 -7369 0
c (field_00003_00007=variant_fields_00003_00003_00003)
-320 6379 0
-321 6381 0
-322 6383 0
-323 6385 0
-324 6387 0
-325 6389 0
-326 6391 0
-327 6393 0
-328 -6392 0
-6379 320 0
-6381 321 0
-6383 322 0
-6385 323 0
-6387 324 0
-6389 325 0
-6391 326 0
-6393 327 0
6392 328 0
c (field_00003_00003=variant_fields_00001_00003_00003)
-274 4425 0
-275 4427 0
-276 4429 0
-277 4431 0
-278 4433 0
-279 4435 0
-280 4437 0
-281 4439 0
-282 -4438 0
-4425 274 0
-4427 275 0
-4429 276 0
-4431 277 0
-4433 278 0
-4435 279 0
-4437 280 0
-4439 281 0
4438 282 0
c (field_00003_00003=variant_fields_00002_00003_00003)
-274 5416 0
-275 5418 0
-276 5420 0
-277 5422 0
-278 5424 0
-279 5426 0
-280 5428 0
-281 5430 0
-282 -5429 0
-5416 274 0
-5418 275 0
-5420 276 0
-5422 277 0
-5424 278 0
-5426 279 0
-5428 280 0
-5430 281 0
5429 282 0
c (variant_fields_00004_00003_00004=field_00006_00003)
-7371 581 0
-7373 582 0
-7375 583 0
-7377 584 0
-7379 585 0
-7381 586 0
-7383 587 0
-7385 588 0
7384 589 0
-581 7371 0
-582 7373 0
-583 7375 0
-584 7377 0
-585 7379 0
-586 7381 0
-587 7383 0
-588 7385 0
-589 -7384 0
c (field_00003_00006=variant_fields_00003_00003_00004)
-319 6394 0
-6394 319 0
c (field_00003_00004=variant_fields_00001_00003_00004)
-289 4440 0
-290 4442 0
-291 4444 0
-292 4446 0
-293 4448 0
-294 4450 0
-295 4452 0
-296 4454 0
-297 -4453 0
-4440 289 0
-4442 290 0
-4444 291 0
-4446 292 0
-4448 293 0
-4450 294 0
-4452 295 0
-4454 296 0
4453 297 0
c (field_00004_00003=variant_fields_00002_00003_00004)
-395 5431 0
-5431 395 0
c (variant_fields_00004_00003_00005=field_00005_00003)
-7386 502 0
-7388 503 0
-7390 504 0
-7392 505 0
-7394 506 0
-7396 507 0
-7398 508 0
-7400 509 0
7399 510 0
-502 7386 0
-503 7388 0
-504 7390 0
-505 7392 0
-506 7394 0
-507 7396 0
-508 7398 0
-509 7400 0
-510 -7399 0
c (field_00003_00005=variant_fields_00003_00003_00005)
-304 6395 0
-305 6397 0
-306 6399 0
-307 6401 0
-308 6403 0
-309 6405 0
-310 6407 0
-311 6409 0
-312 -6408 0
-6395 304 0
-6397 305 0
-6399 306 0
-6401 307 0
-6403 308 0
-6405 309 0
-6407 310 0
-6409 311 0
6408 312 0
c (field_00003_00005=variant_fields_00001_00003_00005)
-304 4455 0
-305 4457 0
-306 4459 0
-307 4461 0
-308 4463 0
-309 4465 0
-310 4467 0
-311 4469 0
-312 -4468 0
-4455 304 0
-4457 305 0
-4459 306 0
-4461 307 0
-4463 308 0
-4465 309 0
-4467 310 0
-4469 311 0
4468 312 0
c (variant_fields_00002_00003_00005=field_00005_00003)
-5432 502 0
-5434 503 0
-5436 504 0
-5438 505 0
-5440 506 0
-5442 507 0
-5444 508 0
-5446 509 0
5445 510 0
-502 5432 0
-503 5434 0
-504 5436 0
-505 5438 0
-506 5440 0
-507 5442 0
-508 5444 0
-509 5446 0
-510 -5445 0
c (field_00004_00003=variant_fields_00004_00003_00006)
-395 7401 0
-7401 395 0
c (field_00003_00004=variant_fields_00003_00003_00006)
-289 6410 0
-290 6412 0
-291 6414 0
-292 6416 0
-293 6418 0
-294 6420 0
-295 6422 0
-296 6424 0
-297 -6423 0
-6410 289 0
-6412 290 0
-6414 291 0
-6416 292 0
-6418 293 0
-6420 294 0
-6422 295 0
-6424 296 0
6423 297 0
c (field_00003_00006=variant_fields_00001_00003_00006)
-319 4470 0
-4470 319 0
c (variant_fields_00002_00003_00006=field_00006_00003)
-5447 581 0
-5449 582 0
-5451 583 0
-5453 584 0
-5455 585 0
-5457 586 0
-5459 587 0
-5461 588 0
5460 589 0
-581 5447 0
-582 5449 0
-583 5451 0
-584 5453 0
-585 5455 0
-586 5457 0
-587 5459 0
-588 5461 0
-589 -5460 0
c (field_00003_00003=variant_fields_00004_00003_00007)
-274 7402 0
-275 7404 0
-276 7406 0
-277 7408 0
-278 7410 0
-279 7412 0
-280 7414 0
-281 7416 0
-282 -7415 0
-7402 274 0
-7404 275 0
-7406 276 0
-7408 277 0
-7410 278 0
-7412 279 0
-7414 280 0
-7416 281 0
7415 282 0
c (field_00003_00003=variant_fields_00003_00003_00007)
-274 6425 0
-275 6427 0
-276 6429 0
-277 6431 0
-278 6433 0
-279 6435 0
-280 6437 0
-281 6439 0
-282 -6438 0
-6425 274 0
-6427 275 0
-6429 276 0
-6431 277 0
-6433 278 0
-6435 279 0
-6437 280 0
-6439 281 0
6438 282 0
c (field_00003_00007=variant_fields_00001_00003_00007)
-320 4471 0
-321 4473 0
-322 4475 0
-323 4477 0
-324 4479 0
-325 4481 0
-326 4483 0
-327 4485 0
-328 -4484 0
-4471 320 0
-4473 321 0
-4475 322 0
-4477 323 0
-4479 324 0
-4481 325 0
-4483 326 0
-4485 327 0
4484 328 0
c (variant_fields_00002_00003_00007=field_00007_00003)
-5462 702 0
-5464 703 0
-5466 704 0
-5468 705 0
-5470 706 0
-5472 707 0
-5474 708 0
-5476 709 0
5475 710 0
-702 5462 0
-703 5464 0
-704 5466 0
-705 5468 0
-706 5470 0
-707 5472 0
-708 5474 0
-709 5476 0
-710 -5475 0
c (variant_fields_00004_00003_00008=field_00002_00003)
-7417 153 0
-7419 154 0
-7421 155 0
-7423 156 0
-7425 157 0
-7427 158 0
-7429 159 0
-7431 160 0
7430 161 0
-153 7417 0
-154 7419 0
-155 7421 0
-156 7423 0
-157 7425 0
-158 7427 0
-159 7429 0
-160 7431 0
-161 -7430 0
c (field_00003_00002=variant_fields_00003_00003_00008)
-259 6440 0
-260 6442 0
-261 6444 0
-262 6446 0
-263 6448 0
-264 6450 0
-265 6452 0
-266 6454 0
-267 -6453 0
-6440 259 0
-6442 260 0
-6444 261 0
-6446 262 0
-6448 263 0
-6450 264 0
-6452 265 0
-6454 266 0
6453 267 0
c (field_00003_00008=variant_fields_00001_00003_00008)
-335 4486 0
-336 4488 0
-337 4490 0
-338 4492 0
-339 4494 0
-340 4496 0
-341 4498 0
-342 4500 0
-343 -4499 0
-4486 335 0
-4488 336 0
-4490 337 0
-4492 338 0
-4494 339 0
-4496 340 0
-4498 341 0
-4500 342 0
4499 343 0
c (field_00008_00003=variant_fields_00002_00003_00008)
-795 5477 0
-5477 795 0
c (variant_fields_00004_00003_00009=field_00001_00003)
-7432 32 0
-7434 33 0
-7436 34 0
-7438 35 0
-7440 36 0
-7442 37 0
-7444 38 0
-7446 39 0
7445 40 0
-32 7432 0
-33 7434 0
-34 7436 0
-35 7438 0
-36 7440 0
-37 7442 0
-38 7444 0
-39 7446 0
-40 -7445 0
c (field_00003_00001=variant_fields_00003_00003_00009)
-244 6455 0
-245 6457 0
-246 6459 0
-247 6461 0
-248 6463 0
-249 6465 0
-250 6467 0
-251 6469 0
-252 -6468 0
-6455 244 0
-6457 245 0
-6459 246 0
-6461 247 0
-6463 248 0
-6465 249 0
-6467 250 0
-6469 251 0
6468 252 0
c (field_00003_00009=variant_fields_00001_00003_00009)
-350 4501 0
-351 4503 0
-352 4505 0
-353 4507 0
-354 4509 0
-355 4511 0
-356 4513 0
-357 4515 0
-358 -4514 0
-4501 350 0
-4503 351 0
-4505 352 0
-4507 353 0
-4509 354 0
-4511 355 0
-4513 356 0
-4515 357 0
4514 358 0
c (field_00009_00003=variant_fields_00002_00003_00009)
-902 5478 0
-903 5480 0
-904 5482 0
-905 5484 0
-906 5486 0
-907 5488 0
-908 5490 0
-909 5492 0
-910 -5491 0
-5478 902 0
-5480 903 0
-5482 904 0
-5484 905 0
-5486 906 0
-5488 907 0
-5490 908 0
-5492 909 0
5491 910 0
c (field_00009_00004=variant_fields_00004_00004_00001)
-917 7447 0
-918 7449 0
-919 7451 0
-920 7453 0
-921 7455 0
-922 7457 0
-923 7459 0
-924 7461 0
-925 -7460 0
-7447 917 0
-7449 918 0
-7451 919 0
-7453 920 0
-7455 921 0
-7457 922 0
-7459 923 0
-7461 924 0
7460 925 0
c (field_00004_00009=variant_fields_00003_00004_00001)
-457 6470 0
-458 6472 0
-459 6474 0
-460 6476 0
-461 6478 0
-462 6480 0
-463 6482 0
-464 6484 0
-465 -6483 0
-6470 457 0
-6472 458 0
-6474 459 0
-6476 460 0
-6478 461 0
-6480 462 0
-6482 463 0
-6484 464 0
6483 465 0
c (field_00004_00001=variant_fields_00001_00004_00001)
-365 4516 0
-366 4518 0
-367 4520 0
-368 4522 0
-369 4524 0
-370 4526 0
-371 4528 0
-372 4530 0
-373 -4529 0
-4516 365 0
-4518 366 0
-4520 367 0
-4522 368 0
-4524 369 0
-4526 370 0
-4528 371 0
-4530 372 0
4529 373 0
c (field_00001_00004=variant_fields_00002_00004_00001)
-47 5493 0
-48 5495 0
-49 5497 0
-50 5499 0
-51 5501 0
-52 5503 0
-53 5505 0
-54 5507 0
-55 -5506 0
-5493 47 0
-5495 48 0
-5497 49 0
-5499 50 0
-5501 51 0
-5503 52 0
-5505 53 0
-5507 54 0
5506 55 0
c (field_00008_00004=variant_fields_00004_00004_00002)
-796 7462 0
-797 7464 0
-798 7466 0
-799 7468 0
-800 7470 0
-801 7472 0
-802 7474 0
-803 7476 0
-804 -7475 0
-7462 796 0
-7464 797 0
-7466 798 0
-7468 799 0
-7470 800 0
-7472 801 0
-7474 802 0
-7476 803 0
7475 804 0
c (field_00004_00008=variant_fields_00003_00004_00002)
-456 6485 0
-6485 456 0
c (field_00004_00002=variant_fields_00001_00004_00002)
-380 4531 0
-381 4533 0
-382 4535 0
-383 4537 0
-384 4539 0
-385 4541 0
-386 4543 0
-387 4545 0
-388 -4544 0
-4531 380 0
-4533 381 0
-4535 382 0
-4537 383 0
-4539 384 0
-4541 385 0
-4543 386 0
-4545 387 0
4544 388 0
c (variant_fields_00002_00004_00002=field_00002_00004)
-5508 168 0
-5510 169 0
-5512 170 0
-5514 171 0
-5516 172 0
-5518 173 0
-5520 174 0
-5522 175 0
5521 176 0
-168 5508 0
-169 5510 0
-170 5512 0
-171 5514 0
-172 5516 0
-173 5518 0
-174 5520 0
-175 5522 0
-176 -5521 0
c (variant_fields_00004_00004_00003=field_00007_00004)
-7477 717 0
-717 7477 0
c (field_00004_00007=variant_fields_00003_00004_00003)
-441 6486 0
-442 6488 0
-443 6490 0
-444 6492 0
-445 6494 0
-446 6496 0
-447 6498 0
-448 6500 0
-449 -6499 0
-6486 441 0
-6488 442 0
-6490 443 0
-6492 444 0
-6494 445 0
-6496 446 0
-6498 447 0
-6500 448 0
6499 449 0
c (field_00004_00003=variant_fields_00001_00004_00003)
-395 4546 0
-4546 395 0
c (field_00003_00004=variant_fields_00002_00004_00003)
-289 5523 0
-290 5525 0
-291 5527 0
-292 5529 0
-293 5531 0
-294 5533 0
-295 5535 0
-296 5537 0
-297 -5536 0
-5523 289 0
-5525 290 0
-5527 291 0
-5529 292 0
-5531 293 0
-5533 294 0
-5535 295 0
-5537 296 0
5536 297 0
c (variant_fields_00004_00004_00004=field_00006_00004)
-7478 596 0
-7480 597 0
-7482 598 0
-7484 599 0
-7486 600 0
-7488 601 0
-7490 602 0
-7492 603 0
7491 604 0
-596 7478 0
-597 7480 0
-598 7482 0
-599 7484 0
-600 7486 0
-601 7488 0
-602 7490 0
-603 7492 0
-604 -7491 0
c (field_00004_00006=variant_fields_00003_00004_00004)
-426 6501 0
-427 6503 0
-428 6505 0
-429 6507 0
-430 6509 0
-431 6511 0
-432 6513 0
-433 6515 0
-434 -6514 0
-6501 426 0
-6503 427 0
-6505 428 0
-6507 429 0
-6509 430 0
-6511 431 0
-6513 432 0
-6515 433 0
6514 434 0
c (field_00004_00004=variant_fields_00001_00004_00004)
-396 4547 0
-397 4549 0
-398 4551 0
-399 4553 0
-400 4555 0
-401 4557 0
-402 4559 0
-403 4561 0
-404 -4560 0
-4547 396 0
-4549 397 0
-4551 398 0
-4553 399 0
-4555 400 0
-4557 401 0
-4559 402 0
-4561 403 0
4560 404 0
c (field_00004_00004=variant_fields_00002_00004_00004)
-396 5538 0
-397 5540 0
-398 5542 0
-399 5544 0
-400 5546 0
-401 5548 0
-402 5550 0
-403 5552 0
-404 -5551 0
-5538 396 0
-5540 397 0
-5542 398 0
-5544 399 0
-5546 400 0
-5548 401 0
-5550 402 0
-5552 403 0
5551 404 0
c (field_00005_00004=variant_fields_00004_00004_00005)
-517 7493 0
-7493 517 0
c (field_00004_00005=variant_fields_00003_00004_00005)
-411 6516 0
-412 6518 0
-413 6520 0
-414 6522 0
-415 6524 0
-416 6526 0
-417 6528 0
-418 6530 0
-419 -6529 0
-6516 411 0
-6518 412 0
-6520 413 0
-6522 414 0
-6524 415 0
-6526 416 0
-6528 417 0
-6530 418 0
6529 419 0
c (field_00004_00005=variant_fields_00001_00004_00005)
-411 4562 0
-412 4564 0
-413 4566 0
-414 4568 0
-415 4570 0
-416 4572 0
-417 4574 0
-418 4576 0
-419 -4575 0
-4562 411 0
-4564 412 0
-4566 413 0
-4568 414 0
-4570 415 0
-4572 416 0
-4574 417 0
-4576 418 0
4575 419 0
c (field_00005_00004=variant_fields_00002_00004_00005)
-517 5553 0
-5553 517 0
c (field_00004_00004=variant_fields_00004_00004_00006)
-396 7494 0
-397 7496 0
-398 7498 0
-399 7500 0
-400 7502 0
-401 7504 0
-402 7506 0
-403 7508 0
-404 -7507 0
-7494 396 0
-7496 397 0
-7498 398 0
-7500 399 0
-7502 400 0
-7504 401 0
-7506 402 0
-7508 403 0
7507 404 0
c (field_00004_00004=variant_fields_00003_00004_00006)
-396 6531 0
-397 6533 0
-398 6535 0
-399 6537 0
-400 6539 0
-401 6541 0
-402 6543 0
-403 6545 0
-404 -6544 0
-6531 396 0
-6533 397 0
-6535 398 0
-6537 399 0
-6539 400 0
-6541 401 0
-6543 402 0
-6545 403 0
6544 404 0
c (field_00004_00006=variant_fields_00001_00004_00006)
-426 4577 0
-427 4579 0
-428 4581 0
-429 4583 0
-430 4585 0
-431 4587 0
-432 4589 0
-433 4591 0
-434 -4590 0
-4577 426 0
-4579 427 0
-4581 428 0
-4583 429 0
-4585 430 0
-4587 431 0
-4589 432 0
-4591 433 0
4590 434 0
c (variant_fields_00002_00004_00006=field_00006_00004)
-5554 596 0
-5556 597 0
-5558 598 0
-5560 599 0
-5562 600 0
-5564 601 0
-5566 602 0
-5568 603 0
5567 604 0
-596 5554 0
-597 5556 0
-598 5558 0
-599 5560 0
-600 5562 0
-601 5564 0
-602 5566 0
-603 5568 0
-604 -5567 0
c (field_00003_00004=variant_fields_00004_00004_00007)
-289 7509 0
-290 7511 0
-291 7513 0
-292 7515 0
-293 7517 0
-294 7519 0
-295 7521 0
-296 7523 0
-297 -7522 0
-7509 289 0
-7511 290 0
-7513 291 0
-7515 292 0
-7517 293 0
-7519 294 0
-7521 295 0
-7523 296 0
7522 297 0
c (field_00004_00003=variant_fields_00003_00004_00007)
-395 6546 0
-6546 395 0
c (field_00004_00007=variant_fields_00001_00004_00007)
-441 4592 0
-442 4594 0
-443 4596 0
-444 4598 0
-445 4600 0
-446 4602 0
-447 4604 0
-448 4606 0
-449 -4605 0
-4592 441 0
-4594 442 0
-4596 443 0
-4598 444 0
-4600 445 0
-4602 446 0
-4604 447 0
-4606 448 0
4605 449 0
c (variant_fields_00002_00004_00007=field_00007_00004)
-5569 717 0
-717 5569 0
c (variant_fields_00004_00004_00008=field_00002_00004)
-7524 168 0
-7526 169 0
-7528 170 0
-7530 171 0
-7532 172 0
-7534 173 0
-7536 174 0
-7538 175 0
7537 176 0
-168 7524 0
-169 7526 0
-170 7528 0
-171 7530 0
-172 7532 0
-173 7534 0
-174 7536 0
-175 7538 0
-176 -7537 0
c (field_00004_00002=variant_fields_00003_00004_00008)
-380 6547 0
-381 6549 0
-382 6551 0
-383 6553 0
-384 6555 0
-385 6557 0
-386 6559 0
-387 6561 0
-388 -6560 0
-6547 380 0
-6549 381 0
-6551 382 0
-6553 383 0
-6555 384 0
-6557 385 0
-6559 386 0
-6561 387 0
6560 388 0
c (field_00004_00008=variant_fields_00001_00004_00008)
-456 4607 0
-4607 456 0
c (field_00008_00004=variant_fields_00002_00004_00008)
-796 5570 0
-797 5572 0
-798 5574 0
-799 5576 0
-800 5578 0
-801 5580 0
-802 5582 0
-803 5584 0
-804 -5583 0
-5570 796 0
-5572 797 0
-5574 798 0
-5576 799 0
-5578 800 0
-5580 801 0
-5582 802 0
-5584 803 0
5583 804 0
c (variant_fields_00004_00004_00009=field_00001_00004)
-7539 47 0
-7541 48 0
-7543 49 0
-7545 50 0
-7547 51 0
-7549 52 0
-7551 53 0
-7553 54 0
7552 55 0
-47 7539 0
-48 7541 0
-49 7543 0
-50 7545 0
-51 7547 0
-52 7549 0
-53 7551 0
-54 7553 0
-55 -7552 0
c (field_00004_00001=variant_fields_00003_00004_00009)
-365 6562 0
-366 6564 0
-367 6566 0
-368 6568 0
-369 6570 0
-370 6572 0
-371 6574 0
-372 6576 0
-373 -6575 0
-6562 365 0
-6564 366 0
-6566 367 0
-6568 368 0
-6570 369 0
-6572 370 0
-6574 371 0
-6576 372 0
6575 373 0
c (field_00004_00009=variant_fields_00001_00004_00009)
-457 4608 0
-458 4610 0
-459 4612 0
-460 4614 0
-461 4616 0
-462 4618 0
-463 4620 0
-464 4622 0
-465 -4621 0
-4608 457 0
-4610 458 0
-4612 459 0
-4614 460 0
-4616 461 0
-4618 462 0
-4620 463 0
-4622 464 0
4621 465 0
c (field_00009_00004=variant_fields_00002_00004_00009)
-917 5585 0
-918 5587 0
-919 5589 0
-920 5591 0
-921 5593 0
-922 5595 0
-923 5597 0
-924 5599 0
-925 -5598 0
-5585 917 0
-5587 918 0
-5589 919 0
-5591 920 0
-5593 921 0
-5595 922 0
-5597 923 0
-5599 924 0
5598 925 0
c (field_00009_00005=variant_fields_00004_00005_00001)
-932 7554 0
-7554 932 0
c (field_00005_00009=variant_fields_00003_00005_00001)
-564 6577 0
-6577 564 0
c (field_00005_00001=variant_fields_00001_00005_00001)
-472 4623 0
-473 4625 0
-474 4627 0
-475 4629 0
-476 4631 0
-477 4633 0
-478 4635 0
-479 4637 0
-480 -4636 0
-4623 472 0
-4625 473 0
-4627 474 0
-4629 475 0
-4631 476 0
-4633 477 0
-4635 478 0
-4637 479 0
4636 480 0
c (field_00001_00005=variant_fields_00002_00005_00001)
-62 5600 0
-63 5602 0
-64 5604 0
-65 5606 0
-66 5608 0
-67 5610 0
-68 5612 0
-69 5614 0
-70 -5613 0
-5600 62 0
-5602 63 0
-5604 64 0
-5606 65 0
-5608 66 0
-5610 67 0
-5612 68 0
-5614 69 0
5613 70 0
c (field_00008_00005=variant_fields_00004_00005_00002)
-811 7555 0
-7555 811 0
c (field_00005_00008=variant_fields_00003_00005_00002)
-549 6578 0
-550 6580 0
-551 6582 0
-552 6584 0
-553 6586 0
-554 6588 0
-555 6590 0
-556 6592 0
-557 -6591 0
-6578 549 0
-6580 550 0
-6582 551 0
-6584 552 0
-6586 553 0
-6588 554 0
-6590 555 0
-6592 556 0
6591 557 0
c (field_00005_00002=variant_fields_00001_00005_00002)
-487 4638 0
-488 4640 0
-489 4642 0
-490 4644 0
-491 4646 0
-492 4648 0
-493 4650 0
-494 4652 0
-495 -4651 0
-4638 487 0
-4640 488 0
-4642 489 0
-4644 490 0
-4646 491 0
-4648 492 0
-4650 493 0
-4652 494 0
4651 495 0
c (field_00002_00005=variant_fields_00002_00005_00002)
-183 5615 0
-184 5617 0
-185 5619 0
-186 5621 0
-187 5623 0
-188 5625 0
-189 5627 0
-190 5629 0
-191 -5628 0
-5615 183 0
-5617 184 0
-5619 185 0
-5621 186 0
-5623 187 0
-5625 188 0
-5627 189 0
-5629 190 0
5628 191 0
c (variant_fields_00004_00005_00003=field_00007_00005)
-7556 718 0
-7558 719 0
-7560 720 0
-7562 721 0
-7564 722 0
-7566 723 0
-7568 724 0
-7570 725 0
7569 726 0
-718 7556 0
-719 7558 0
-720 7560 0
-721 7562 0
-722 7564 0
-723 7566 0
-724 7568 0
-725 7570 0
-726 -7569 0
c (field_00005_00007=variant_fields_00003_00005_00003)
-548 6593 0
-6593 548 0
c (field_00005_00003=variant_fields_00001_00005_00003)
-502 4653 0
-503 4655 0
-504 4657 0
-505 4659 0
-506 4661 0
-507 4663 0
-508 4665 0
-509 4667 0
-510 -4666 0
-4653 502 0
-4655 503 0
-4657 504 0
-4659 505 0
-4661 506 0
-4663 507 0
-4665 508 0
-4667 509 0
4666 510 0
c (field_00003_00005=variant_fields_00002_00005_00003)
-304 5630 0
-305 5632 0
-306 5634 0
-307 5636 0
-308 5638 0
-309 5640 0
-310 5642 0
-311 5644 0
-312 -5643 0
-5630 304 0
-5632 305 0
-5634 306 0
-5636 307 0
-5638 308 0
-5640 309 0
-5642 310 0
-5644 311 0
5643 312 0
c (field_00006_00005=variant_fields_00004_00005_00004)
-611 7571 0
-612 7573 0
-613 7575 0
-614 7577 0
-615 7579 0
-616 7581 0
-617 7583 0
-618 7585 0
-619 -7584 0
-7571 611 0
-7573 612 0
-7575 613 0
-7577 614 0
-7579 615 0
-7581 616 0
-7583 617 0
-7585 618 0
7584 619 0
c (field_00005_00006=variant_fields_00003_00005_00004)
-533 6594 0
-534 6596 0
-535 6598 0
-536 6600 0
-537 6602 0
-538 6604 0
-539 6606 0
-540 6608 0
-541 -6607 0
-6594 533 0
-6596 534 0
-6598 535 0
-6600 536 0
-6602 537 0
-6604 538 0
-6606 539 0
-6608 540 0
6607 541 0
c (field_00005_00004=variant_fields_00001_00005_00004)
-517 4668 0
-4668 517 0
c (field_00004_00005=variant_fields_00002_00005_00004)
-411 5645 0
-412 5647 0
-413 5649 0
-414 5651 0
-415 5653 0
-416 5655 0
-417 5657 0
-418 5659 0
-419 -5658 0
-5645 411 0
-5647 412 0
-5649 413 0
-5651 414 0
-5653 415 0
-5655 416 0
-5657 417 0
-5659 418 0
5658 419 0
c (field_00005_00005=variant_fields_00004_00005_00005)
-518 7586 0
-519 7588 0
-520 7590 0
-521 7592 0
-522 7594 0
-523 7596 0
-524 7598 0
-525 7600 0
-526 -7599 0
-7586 518 0
-7588 519 0
-7590 520 0
-7592 521 0
-7594 522 0
-7596 523 0
-7598 524 0
-7600 525 0
7599 526 0
c (field_00005_00005=variant_fields_00003_00005_00005)
-518 6609 0
-519 6611 0
-520 6613 0
-521 6615 0
-522 6617 0
-523 6619 0
-524 6621 0
-525 6623 0
-526 -6622 0
-6609 518 0
-6611 519 0
-6613 520 0
-6615 521 0
-6617 522 0
-6619 523 0
-6621 524 0
-6623 525 0
6622 526 0
c (field_00005_00005=variant_fields_00001_00005_00005)
-518 4669 0
-519 4671 0
-520 4673 0
-521 4675 0
-522 4677 0
-523 4679 0
-524 4681 0
-525 4683 0
-526 -4682 0
-4669 518 0
-4671 519 0
-4673 520 0
-4675 521 0
-4677 522 0
-4679 523 0
-4681 524 0
-4683 525 0
4682 526 0
c (field_00005_00005=variant_fields_00002_00005_00005)
-518 5660 0
-519 5662 0
-520 5664 0
-521 5666 0
-522 5668 0
-523 5670 0
-524 5672 0
-525 5674 0
-526 -5673 0
-5660 518 0
-5662 519 0
-5664 520 0
-5666 521 0
-5668 522 0
-5670 523 0
-5672 524 0
-5674 525 0
5673 526 0
c (field_00004_00005=variant_fields_00004_00005_00006)
-411 7601 0
-412 7603 0
-413 7605 0
-414 7607 0
-415 7609 0
-416 7611 0
-417 7613 0
-418 7615 0
-419 -7614 0
-7601 411 0
-7603 412 0
-7605 413 0
-7607 414 0
-7609 415 0
-7611 416 0
-7613 417 0
-7615 418 0
7614 419 0
c (field_00005_00004=variant_fields_00003_00005_00006)
-517 6624 0
-6624 517 0
c (field_00005_00006=variant_fields_00001_00005_00006)
-533 4684 0
-534 4686 0
-535 4688 0
-536 4690 0
-537 4692 0
-538 4694 0
-539 4696 0
-540 4698 0
-541 -4697 0
-4684 533 0
-4686 534 0
-4688 535 0
-4690 536 0
-4692 537 0
-4694 538 0
-4696 539 0
-4698 540 0
4697 541 0
c (field_00006_00005=variant_fields_00002_00005_00006)
-611 5675 0
-612 5677 0
-613 5679 0
-614 5681 0
-615 5683 0
-616 5685 0
-617 5687 0
-618 5689 0
-619 -5688 0
-5675 611 0
-5677 612 0
-5679 613 0
-5681 614 0
-5683 615 0
-5685 616 0
-5687 617 0
-5689 618 0
5688 619 0
c (field_00003_00005=variant_fields_00004_00005_00007)
-304 7616 0
-305 7618 0
-306 7620 0
-307 7622 0
-308 7624 0
-309 7626 0
-310 7628 0
-311 7630 0
-312 -7629 0
-7616 304 0
-7618 305 0
-7620 306 0
-7622 307 0
-7624 308 0
-7626 309 0
-7628 310 0
-7630 311 0
7629 312 0
c (field_00005_00003=variant_fields_00003_00005_00007)
-502 6625 0
-503 6627 0
-504 6629 0
-505 6631 0
-506 6633 0
-507 6635 0
-508 6637 0
-509 6639 0
-510 -6638 0
-6625 502 0
-6627 503 0
-6629 504 0
-6631 505 0
-6633 506 0
-6635 507 0
-6637 508 0
-6639 509 0
6638 510 0
c (field_00005_00007=variant_fields_00001_00005_00007)
-548 4699 0
-4699 548 0
c (variant_fields_00002_00005_00007=field_00007_00005)
-5690 718 0
-5692 719 0
-5694 720 0
-5696 721 0
-5698 722 0
-5700 723 0
-5702 724 0
-5704 725 0
5703 726 0
-718 5690 0
-719 5692 0
-720 5694 0
-721 5696 0
-722 5698 0
-723 5700 0
-724 5702 0
-725 5704 0
-726 -5703 0
c (variant_fields_00004_00005_00008=field_00002_00005)
-7631 183 0
-7633 184 0
-7635 185 0
-7637 186 0
-7639 187 0
-7641 188 0
-7643 189 0
-7645 190 0
7644 191 0
-183 7631 0
-184 7633 0
-185 7635 0
-186 7637 0
-187 7639 0
-188 7641 0
-189 7643 0
-190 7645 0
-191 -7644 0
c (field_00005_00002=variant_fields_00003_00005_00008)
-487 6640 0
-488 6642 0
-489 6644 0
-490 6646 0
-491 6648 0
-492 6650 0
-493 6652 0
-494 6654 0
-495 -6653 0
-6640 487 0
-6642 488 0
-6644 489 0
-6646 490 0
-6648 491 0
-6650 492 0
-6652 493 0
-6654 494 0
6653 495 0
c (field_00005_00008=variant_fields_00001_00005_00008)
-549 4700 0
-550 4702 0
-551 4704 0
-552 4706 0
-553 4708 0
-554 4710 0
-555 4712 0
-556 4714 0
-557 -4713 0
-4700 549 0
-4702 550 0
-4704 551 0
-4706 552 0
-4708 553 0
-4710 554 0
-4712 555 0
-4714 556 0
4713 557 0
c (field_00008_00005=variant_fields_00002_00005_00008)
-811 5705 0
-5705 811 0
c (field_00001_00005=variant_fields_00004_00005_00009)
-62 7646 0
-63 7648 0
-64 7650 0
-65 7652 0
-66 7654 0
-67 7656 0
-68 7658 0
-69 7660 0
-70 -7659 0
-7646 62 0
-7648 63 0
-7650 64 0
-7652 65 0
-7654 66 0
-7656 67 0
-7658 68 0
-7660 69 0
7659 70 0
c (field_00005_00001=variant_fields_00003_00005_00009)
-472 6655 0
-473 6657 0
-474 6659 0
-475 6661 0
-476 6663 0
-477 6665 0
-478 6667 0
-479 6669 0
-480 -6668 0
-6655 472 0
-6657 473 0
-6659 474 0
-6661 475 0
-6663 476 0
-6665 477 0
-6667 478 0
-6669 479 0
6668 480 0
c (field_00005_00009=variant_fields_00001_00005_00009)
-564 4715 0
-4715 564 0
c (field_00009_00005=variant_fields_00002_00005_00009)
-932 5706 0
-5706 932 0
c (field_00009_00006=variant_fields_00004_00006_00001)
-933 7661 0
-934 7663 0
-935 7665 0
-936 7667 0
-937 7669 0
-938 7671 0
-939 7673 0
-940 7675 0
-941 -7674 0
-7661 933 0
-7663 934 0
-7665 935 0
-7667 936 0
-7669 937 0
-7671 938 0
-7673 939 0
-7675 940 0
7674 941 0
c (variant_fields_00003_00006_00001=field_00006_00009)
-6670 657 0
-6672 658 0
-6674 659 0
-6676 660 0
-6678 661 0
-6680 662 0
-6682 663 0
-6684 664 0
6683 665 0
-657 6670 0
-658 6672 0
-659 6674 0
-660 6676 0
-661 6678 0
-662 6680 0
-663 6682 0
-664 6684 0
-665 -6683 0
c (variant_fields_00001_00006_00001=field_00006_00001)
-4716 565 0
-4718 566 0
-4720 567 0
-4722 568 0
-4724 569 0
-4726 570 0
-4728 571 0
-4730 572 0
4729 573 0
-565 4716 0
-566 4718 0
-567 4720 0
-568 4722 0
-569 4724 0
-570 4726 0
-571 4728 0
-572 4730 0
-573 -4729 0
c (variant_fields_00002_00006_00001=field_00001_00006)
-5707 77 0
-5709 78 0
-5711 79 0
-5713 80 0
-5715 81 0
-5717 82 0
-5719 83 0
-5721 84 0
5720 85 0
-77 5707 0
-78 5709 0
-79 5711 0
-80 5713 0
-81 5715 0
-82 5717 0
-83 5719 0
-84 5721 0
-85 -5720 0
c (field_00008_00006=variant_fields_00004_00006_00002)
-812 7676 0
-813 7678 0
-814 7680 0
-815 7682 0
-816 7684 0
-817 7686 0
-818 7688 0
-819 7690 0
-820 -7689 0
-7676 812 0
-7678 813 0
-7680 814 0
-7682 815 0
-7684 816 0
-7686 817 0
-7688 818 0
-7690 819 0
7689 820 0
c (variant_fields_00003_00006_00002=field_00006_00008)
-6685 642 0
-6687 643 0
-6689 644 0
-6691 645 0
-6693 646 0
-6695 647 0
-6697 648 0
-6699 649 0
6698 650 0
-642 6685 0
-643 6687 0
-644 6689 0
-645 6691 0
-646 6693 0
-647 6695 0
-648 6697 0
-649 6699 0
-650 -6698 0
c (variant_fields_00001_00006_00002=field_00006_00002)
-4731 580 0
-580 4731 0
c (variant_fields_00002_00006_00002=field_00002_00006)
-5722 198 0
-5724 199 0
-5726 200 0
-5728 201 0
-5730 202 0
-5732 203 0
-5734 204 0
-5736 205 0
5735 206 0
-198 5722 0
-199 5724 0
-200 5726 0
-201 5728 0
-202 5730 0
-203 5732 0
-204 5734 0
-205 5736 0
-206 -5735 0
c (field_00007_00006=variant_fields_00004_00006_00003)
-733 7691 0
-734 7693 0
-735 7695 0
-736 7697 0
-737 7699 0
-738 7701 0
-739 7703 0
-740 7705 0
-741 -7704 0
-7691 733 0
-7693 734 0
-7695 735 0
-7697 736 0
-7699 737 0
-7701 738 0
-7703 739 0
-7705 740 0
7704 741 0
c (variant_fields_00003_00006_00003=field_00006_00007)
-6700 627 0
-6702 628 0
-6704 629 0
-6706 630 0
-6708 631 0
-6710 632 0
-6712 633 0
-6714 634 0
6713 635 0
-627 6700 0
-628 6702 0
-629 6704 0
-630 6706 0
-631 6708 0
-632 6710 0
-633 6712 0
-634 6714 0
-635 -6713 0
c (variant_fields_00001_00006_00003=field_00006_00003)
-4732 581 0
-4734 582 0
-4736 583 0
-4738 584 0
-4740 585 0
-4742 586 0
-4744 587 0
-4746 588 0
4745 589 0
-581 4732 0
-582 4734 0
-583 4736 0
-584 4738 0
-585 4740 0
-586 4742 0
-587 4744 0
-588 4746 0
-589 -4745 0
c (field_00003_00006=variant_fields_00002_00006_00003)
-319 5737 0
-5737 319 0
c (field_00006_00006=variant_fields_00004_00006_00004)
-626 7706 0
-7706 626 0
c (variant_fields_00003_00006_00004=field_00006_00006)
-6715 626 0
-626 6715 0
c (variant_fields_00001_00006_00004=field_00006_00004)
-4747 596 0
-4749 597 0
-4751 598 0
-4753 599 0
-4755 600 0
-4757 601 0
-4759 602 0
-4761 603 0
4760 604 0
-596 4747 0
-597 4749 0
-598 4751 0
-599 4753 0
-600 4755 0
-601 4757 0
-602 4759 0
-603 4761 0
-604 -4760 0
c (variant_fields_00002_00006_00004=field_00004_00006)
-5738 426 0
-5740 427 0
-5742 428 0
-5744 429 0
-5746 430 0
-5748 431 0
-5750 432 0
-5752 433 0
5751 434 0
-426 5738 0
-427 5740 0
-428 5742 0
-429 5744 0
-430 5746 0
-431 5748 0
-432 5750 0
-433 5752 0
-434 -5751 0
c (field_00005_00006=variant_fields_00004_00006_00005)
-533 7707 0
-534 7709 0
-535 7711 0
-536 7713 0
-537 7715 0
-538 7717 0
-539 7719 0
-540 7721 0
-541 -7720 0
-7707 533 0
-7709 534 0
-7711 535 0
-7713 536 0
-7715 537 0
-7717 538 0
-7719 539 0
-7721 540 0
7720 541 0
c (variant_fields_00003_00006_00005=field_00006_00005)
-6716 611 0
-6718 612 0
-6720 613 0
-6722 614 0
-6724 615 0
-6726 616 0
-6728 617 0
-6730 618 0
6729 619 0
-611 6716 0
-612 6718 0
-613 6720 0
-614 6722 0
-615 6724 0
-616 6726 0
-617 6728 0
-618 6730 0
-619 -6729 0
c (variant_fields_00001_00006_00005=field_00006_00005)
-4762 611 0
-4764 612 0
-4766 613 0
-4768 614 0
-4770 615 0
-4772 616 0
-4774 617 0
-4776 618 0
4775 619 0
-611 4762 0
-612 4764 0
-613 4766 0
-614 4768 0
-615 4770 0
-616 4772 0
-617 4774 0
-618 4776 0
-619 -4775 0
c (variant_fields_00002_00006_00005=field_00005_00006)
-5753 533 0
-5755 534 0
-5757 535 0
-5759 536 0
-5761 537 0
-5763 538 0
-5765 539 0
-5767 540 0
5766 541 0
-533 5753 0
-534 5755 0
-535 5757 0
-536 5759 0
-537 5761 0
-538 5763 0
-539 5765 0
-540 5767 0
-541 -5766 0
c (field_00004_00006=variant_fields_00004_00006_00006)
-426 7722 0
-427 7724 0
-428 7726 0
-429 7728 0
-430 7730 0
-431 7732 0
-432 7734 0
-433 7736 0
-434 -7735 0
-7722 426 0
-7724 427 0
-7726 428 0
-7728 429 0
-7730 430 0
-7732 431 0
-7734 432 0
-7736 433 0
7735 434 0
c (variant_fields_00003_00006_00006=field_00006_00004)
-6731 596 0
-6733 597 0
-6735 598 0
-6737 599 0
-6739 600 0
-6741 601 0
-6743 602 0
-6745 603 0
6744 604 0
-596 6731 0
-597 6733 0
-598 6735 0
-599 6737 0
-600 6739 0
-601 6741 0
-602 6743 0
-603 6745 0
-604 -6744 0
c (variant_fields_00001_00006_00006=field_00006_00006)
-4777 626 0
-626 4777 0
c (variant_fields_00002_00006_00006=field_00006_00006)
-5768 626 0
-626 5768 0
c (field_00003_00006=variant_fields_00004_00006_00007)
-319 7737 0
-7737 319 0
c (variant_fields_00003_00006_00007=field_00006_00003)
-6746 581 0
-6748 582 0
-6750 583 0
-6752 584 0
-6754 585 0
-6756 586 0
-6758 587 0
-6760 588 0
6759 589 0
-581 6746 0
-582 6748 0
-583 6750 0
-584 6752 0
-585 6754 0
-586 6756 0
-587 6758 0
-588 6760 0
-589 -6759 0
c (variant_fields_00001_00006_00007=field_00006_00007)
-4778 627 0
-4780 628 0
-4782 629 0
-4784 630 0
-4786 631 0
-4788 632 0
-4790 633 0
-4792 634 0
4791 635 0
-627 4778 0
-628 4780 0
-629 4782 0
-630 4784 0
-631 4786 0
-632 4788 0
-633 4790 0
-634 4792 0
-635 -4791 0
c (variant_fields_00002_00006_00007=field_00007_00006)
-5769 733 0
-5771 734 0
-5773 735 0
-5775 736 0
-5777 737 0
-5779 738 0
-5781 739 0
-5783 740 0
5782 741 0
-733 5769 0
-734 5771 0
-735 5773 0
-736 5775 0
-737 5777 0
-738 5779 0
-739 5781 0
-740 5783 0
-741 -5782 0
c (field_00002_00006=variant_fields_00004_00006_00008)
-198 7738 0
-199 7740 0
-200 7742 0
-201 7744 0
-202 7746 0
-203 7748 0
-204 7750 0
-205 7752 0
-206 -7751 0
-7738 198 0
-7740 199 0
-7742 200 0
-7744 201 0
-7746 202 0
-7748 203 0
-7750 204 0
-7752 205 0
7751 206 0
c (variant_fields_00003_00006_00008=field_00006_00002)
-6761 580 0
-580 6761 0
c (variant_fields_00001_00006_00008=field_00006_00008)
-4793 642 0
-4795 643 0
-4797 644 0
-4799 645 0
-4801 646 0
-4803 647 0
-4805 648 0
-4807 649 0
4806 650 0
-642 4793 0
-643 4795 0
-644 4797 0
-645 4799 0
-646 4801 0
-647 4803 0
-648 4805 0
-649 4807 0
-650 -4806 0
c (variant_fields_00002_00006_00008=field_00008_00006)
-5784 812 0
-5786 813 0
-5788 814 0
-5790 815 0
-5792 816 0
-5794 817 0
-5796 818 0
-5798 819 0
5797 820 0
-812 5784 0
-813 5786 0
-814 5788 0
-815 5790 0
-816 5792 0
-817 5794 0
-818 5796 0
-819 5798 0
-820 -5797 0
c (field_00001_00006=variant_fields_00004_00006_00009)
-77 7753 0
-78 7755 0
-79 7757 0
-80 7759 0
-81 7761 0
-82 7763 0
-83 7765 0
-84 7767 0
-85 -7766 0
-7753 77 0
-7755 78 0
-7757 79 0
-7759 80 0
-7761 81 0
-7763 82 0
-7765 83 0
-7767 84 0
7766 85 0
c (variant_fields_00003_00006_00009=field_00006_00001)
-6762 565 0
-6764 566 0
-6766 567 0
-6768 568 0
-6770 569 0
-6772 570 0
-6774 571 0
-6776 572 0
6775 573 0
-565 6762 0
-566 6764 0
-567 6766 0
-568 6768 0
-569 6770 0
-570 6772 0
-571 6774 0
-572 6776 0
-573 -6775 0
c (variant_fields_00001_00006_00009=field_00006_00009)
-4808 657 0
-4810 658 0
-4812 659 0
-4814 660 0
-4816 661 0
-4818 662 0
-4820 663 0
-4822 664 0
4821 665 0
-657 4808 0
-658 4810 0
-659 4812 0
-660 4814 0
-661 4816 0
-662 4818 0
-663 4820 0
-664 4822 0
-665 -4821 0
c (variant_fields_00002_00006_00009=field_00009_00006)
-5799 933 0
-5801 934 0
-5803 935 0
-5805 936 0
-5807 937 0
-5809 938 0
-5811 939 0
-5813 940 0
5812 941 0
-933 5799 0
-934 5801 0
-935 5803 0
-936 5805 0
-937 5807 0
-938 5809 0
-939 5811 0
-940 5813 0
-941 -5812 0
c (variant_fields_00004_00007_00001=field_00009_00007)
-7768 948 0
-948 7768 0
c (variant_fields_00003_00007_00001=field_00007_00009)
-6777 764 0
-764 6777 0
c (variant_fields_00001_00007_00001=field_00007_00001)
-4823 672 0
-4825 673 0
-4827 674 0
-4829 675 0
-4831 676 0
-4833 677 0
-4835 678 0
-4837 679 0
4836 680 0
-672 4823 0
-673 4825 0
-674 4827 0
-675 4829 0
-676 4831 0
-677 4833 0
-678 4835 0
-679 4837 0
-680 -4836 0
c (variant_fields_00002_00007_00001=field_00001_00007)
-5814 92 0
-92 5814 0
c (field_00008_00007=variant_fields_00004_00007_00002)
-827 7769 0
-828 7771 0
-829 7773 0
-830 7775 0
-831 7777 0
-832 7779 0
-833 7781 0
-834 7783 0
-835 -7782 0
-7769 827 0
-7771 828 0
-7773 829 0
-7775 830 0
-7777 831 0
-7779 832 0
-7781 833 0
-7783 834 0
7782 835 0
c (variant_fields_00003_00007_00002=field_00007_00008)
-6778 749 0
-6780 750 0
-6782 751 0
-6784 752 0
-6786 753 0
-6788 754 0
-6790 755 0
-6792 756 0
6791 757 0
-749 6778 0
-750 6780 0
-751 6782 0
-752 6784 0
-753 6786 0
-754 6788 0
-755 6790 0
-756 6792 0
-757 -6791 0
c (variant_fields_00001_00007_00002=field_00007_00002)
-4838 687 0
-4840 688 0
-4842 689 0
-4844 690 0
-4846 691 0
-4848 692 0
-4850 693 0
-4852 694 0
4851 695 0
-687 4838 0
-688 4840 0
-689 4842 0
-690 4844 0
-691 4846 0
-692 4848 0
-693 4850 0
-694 4852 0
-695 -4851 0
c (variant_fields_00002_00007_00002=field_00002_00007)
-5815 213 0
-5817 214 0
-5819 215 0
-5821 216 0
-5823 217 0
-5825 218 0
-5827 219 0
-5829 220 0
5828 221 0
-213 5815 0
-214 5817 0
-215 5819 0
-216 5821 0
-217 5823 0
-218 5825 0
-219 5827 0
-220 5829 0
-221 -5828 0
c (variant_fields_00004_00007_00003=field_00007_00007)
-7784 748 0
-748 7784 0
c (variant_fields_00003_00007_00003=field_00007_00007)
-6793 748 0
-748 6793 0
c (variant_fields_00001_00007_00003=field_00007_00003)
-4853 702 0
-4855 703 0
-4857 704 0
-4859 705 0
-4861 706 0
-4863 707 0
-4865 708 0
-4867 709 0
4866 710 0
-702 4853 0
-703 4855 0
-704 4857 0
-705 4859 0
-706 4861 0
-707 4863 0
-708 4865 0
-709 4867 0
-710 -4866 0
c (field_00003_00007=variant_fields_00002_00007_00003)
-320 5830 0
-321 5832 0
-322 5834 0
-323 5836 0
-324 5838 0
-325 5840 0
-326 5842 0
-327 5844 0
-328 -5843 0
-5830 320 0
-5832 321 0
-5834 322 0
-5836 323 0
-5838 324 0
-5840 325 0
-5842 326 0
-5844 327 0
5843 328 0
c (variant_fields_00004_00007_00004=field_00006_00007)
-7785 627 0
-7787 628 0
-7789 629 0
-7791 630 0
-7793 631 0
-7795 632 0
-7797 633 0
-7799 634 0
7798 635 0
-627 7785 0
-628 7787 0
-629 7789 0
-630 7791 0
-631 7793 0
-632 7795 0
-633 7797 0
-634 7799 0
-635 -7798 0
c (variant_fields_00003_00007_00004=field_00007_00006)
-6794 733 0
-6796 734 0
-6798 735 0
-6800 736 0
-6802 737 0
-6804 738 0
-6806 739 0
-6808 740 0
6807 741 0
-733 6794 0
-734 6796 0
-735 6798 0
-736 6800 0
-737 6802 0
-738 6804 0
-739 6806 0
-740 6808 0
-741 -6807 0
c (variant_fields_00001_00007_00004=field_00007_00004)
-4868 717 0
-717 4868 0
c (field_00004_00007=variant_fields_00002_00007_00004)
-441 5845 0
-442 5847 0
-443 5849 0
-444 5851 0
-445 5853 0
-446 5855 0
-447 5857 0
-448 5859 0
-449 -5858 0
-5845 441 0
-5847 442 0
-5849 443 0
-5851 444 0
-5853 445 0
-5855 446 0
-5857 447 0
-5859 448 0
5858 449 0
c (variant_fields_00004_00007_00005=field_00005_00007)
-7800 548 0
-548 7800 0
c (variant_fields_00003_00007_00005=field_00007_00005)
-6809 718 0
-6811 719 0
-6813 720 0
-6815 721 0
-6817 722 0
-6819 723 0
-6821 724 0
-6823 725 0
6822 726 0
-718 6809 0
-719 6811 0
-720 6813 0
-721 6815 0
-722 6817 0
-723 6819 0
-724 6821 0
-725 6823 0
-726 -6822 0
c (variant_fields_00001_00007_00005=field_00007_00005)
-4869 718 0
-4871 719 0
-4873 720 0
-4875 721 0
-4877 722 0
-4879 723 0
-4881 724 0
-4883 725 0
4882 726 0
-718 4869 0
-719 4871 0
-720 4873 0
-721 4875 0
-722 4877 0
-723 4879 0
-724 4881 0
-725 4883 0
-726 -4882 0
c (variant_fields_00002_00007_00005=field_00005_00007)
-5860 548 0
-548 5860 0
c (variant_fields_00004_00007_00006=field_00004_00007)
-7801 441 0
-7803 442 0
-7805 443 0
-7807 444 0
-7809 445 0
-7811 446 0
-7813 447 0
-7815 448 0
7814 449 0
-441 7801 0
-442 7803 0
-443 7805 0
-444 7807 0
-445 7809 0
-446 7811 0
-447 7813 0
-448 7815 0
-449 -7814 0
c (variant_fields_00003_00007_00006=field_00007_00004)
-6824 717 0
-717 6824 0
c (variant_fields_00001_00007_00006=field_00007_00006)
-4884 733 0
-4886 734 0
-4888 735 0
-4890 736 0
-4892 737 0
-4894 738 0
-4896 739 0
-4898 740 0
4897 741 0
-733 4884 0
-734 4886 0
-735 4888 0
-736 4890 0
-737 4892 0
-738 4894 0
-739 4896 0
-740 4898 0
-741 -4897 0
c (variant_fields_00002_00007_00006=field_00006_00007)
-5861 627 0
-5863 628 0
-5865 629 0
-5867 630 0
-5869 631 0
-5871 632 0
-5873 633 0
-5875 634 0
5874 635 0
-627 5861 0
-628 5863 0
-629 5865 0
-630 5867 0
-631 5869 0
-632 5871 0
-633 5873 0
-634 5875 0
-635 -5874 0
c (field_00003_00007=variant_fields_00004_00007_00007)
-320 7816 0
-321 7818 0
-322 7820 0
-323 7822 0
-324 7824 0
-325 7826 0
-326 7828 0
-327 7830 0
-328 -7829 0
-7816 320 0
-7818 321 0
-7820 322 0
-7822 323 0
-7824 324 0
-7826 325 0
-7828 326 0
-7830 327 0
7829 328 0
c (variant_fields_00003_00007_00007=field_00007_00003)
-6825 702 0
-6827 703 0
-6829 704 0
-6831 705 0
-6833 706 0
-6835 707 0
-6837 708 0
-6839 709 0
6838 710 0
-702 6825 0
-703 6827 0
-704 6829 0
-705 6831 0
-706 6833 0
-707 6835 0
-708 6837 0
-709 6839 0
-710 -6838 0
c (variant_fields_00001_00007_00007=field_00007_00007)
-4899 748 0
-748 4899 0
c (variant_fields_00002_00007_00007=field_00007_00007)
-5876 748 0
-748 5876 0
c (variant_fields_00004_00007_00008=field_00002_00007)
-7831 213 0
-7833 214 0
-7835 215 0
-7837 216 0
-7839 217 0
-7841 218 0
-7843 219 0
-7845 220 0
7844 221 0
-213 7831 0
-214 7833 0
-215 7835 0
-216 7837 0
-217 7839 0
-218 7841 0
-219 7843 0
-220 7845 0
-221 -7844 0
c (variant_fields_00003_00007_00008=field_00007_00002)
-6840 687 0
-6842 688 0
-6844 689 0
-6846 690 0
-6848 691 0
-6850 692 0
-6852 693 0
-6854 694 0
6853 695 0
-687 6840 0
-688 6842 0
-689 6844 0
-690 6846 0
-691 6848 0
-692 6850 0
-693 6852 0
-694 6854 0
-695 -6853 0
c (variant_fields_00001_00007_00008=field_00007_00008)
-4900 749 0
-4902 750 0
-4904 751 0
-4906 752 0
-4908 753 0
-4910 754 0
-4912 755 0
-4914 756 0
4913 757 0
-749 4900 0
-750 4902 0
-751 4904 0
-752 4906 0
-753 4908 0
-754 4910 0
-755 4912 0
-756 4914 0
-757 -4913 0
c (field_00008_00007=variant_fields_00002_00007_00008)
-827 5877 0
-828 5879 0
-829 5881 0
-830 5883 0
-831 5885 0
-832 5887 0
-833 5889 0
-834 5891 0
-835 -5890 0
-5877 827 0
-5879 828 0
-5881 829 0
-5883 830 0
-5885 831 0
-5887 832 0
-5889 833 0
-5891 834 0
5890 835 0
c (variant_fields_00004_00007_00009=field_00001_00007)
-7846 92 0
-92 7846 0
c (variant_fields_00003_00007_00009=field_00007_00001)
-6855 672 0
-6857 673 0
-6859 674 0
-6861 675 0
-6863 676 0
-6865 677 0
-6867 678 0
-6869 679 0
6868 680 0
-672 6855 0
-673 6857 0
-674 6859 0
-675 6861 0
-676 6863 0
-677 6865 0
-678 6867 0
-679 6869 0
-680 -6868 0
c (variant_fields_00001_00007_00009=field_00007_00009)
-4915 764 0
-764 4915 0
c (variant_fields_00002_00007_00009=field_00009_00007)
-5892 948 0
-948 5892 0
c (field_00009_00008=variant_fields_00004_00008_00001)
-949 7847 0
-950 7849 0
-951 7851 0
-952 7853 0
-953 7855 0
-954 7857 0
-955 7859 0
-956 7861 0
-957 -7860 0
-7847 949 0
-7849 950 0
-7851 951 0
-7853 952 0
-7855 953 0
-7857 954 0
-7859 955 0
-7861 956 0
7860 957 0
c (field_00008_00009=variant_fields_00003_00008_00001)
-857 6870 0
-858 6872 0
-859 6874 0
-860 6876 0
-861 6878 0
-862 6880 0
-863 6882 0
-864 6884 0
-865 -6883 0
-6870 857 0
-6872 858 0
-6874 859 0
-6876 860 0
-6878 861 0
-6880 862 0
-6882 863 0
-6884 864 0
6883 865 0
c (field_00008_00001=variant_fields_00001_00008_00001)
-765 4916 0
-766 4918 0
-767 4920 0
-768 4922 0
-769 4924 0
-770 4926 0
-771 4928 0
-772 4930 0
-773 -4929 0
-4916 765 0
-4918 766 0
-4920 767 0
-4922 768 0
-4924 769 0
-4926 770 0
-4928 771 0
-4930 772 0
4929 773 0
c (variant_fields_00002_00008_00001=field_00001_00008)
-5893 93 0
-5895 94 0
-5897 95 0
-5899 96 0
-5901 97 0
-5903 98 0
-5905 99 0
-5907 100 0
5906 101 0
-93 5893 0
-94 5895 0
-95 5897 0
-96 5899 0
-97 5901 0
-98 5903 0
-99 5905 0
-100 5907 0
-101 -5906 0
c (field_00008_00008=variant_fields_00004_00008_00002)
-842 7862 0
-843 7864 0
-844 7866 0
-845 7868 0
-846 7870 0
-847 7872 0
-848 7874 0
-849 7876 0
-850 -7875 0
-7862 842 0
-7864 843 0
-7866 844 0
-7868 845 0
-7870 846 0
-7872 847 0
-7874 848 0
-7876 849 0
7875 850 0
c (field_00008_00008=variant_fields_00003_00008_00002)
-842 6885 0
-843 6887 0
-844 6889 0
-845 6891 0
-846 6893 0
-847 6895 0
-848 6897 0
-849 6899 0
-850 -6898 0
-6885 842 0
-6887 843 0
-6889 844 0
-6891 845 0
-6893 846 0
-6895 847 0
-6897 848 0
-6899 849 0
6898 850 0
c (field_00008_00002=variant_fields_00001_00008_00002)
-780 4931 0
-781 4933 0
-782 4935 0
-783 4937 0
-784 4939 0
-785 4941 0
-786 4943 0
-787 4945 0
-788 -4944 0
-4931 780 0
-4933 781 0
-4935 782 0
-4937 783 0
-4939 784 0
-4941 785 0
-4943 786 0
-4945 787 0
4944 788 0
c (variant_fields_00002_00008_00002=field_00002_00008)
-5908 228 0
-228 5908 0
c (variant_fields_00004_00008_00003=field_00007_00008)
-7877 749 0
-7879 750 0
-7881 751 0
-7883 752 0
-7885 753 0
-7887 754 0
-7889 755 0
-7891 756 0
7890 757 0
-749 7877 0
-750 7879 0
-751 7881 0
-752 7883 0
-753 7885 0
-754 7887 0
-755 7889 0
-756 7891 0
-757 -7890 0
c (field_00008_00007=variant_fields_00003_00008_00003)
-827 6900 0
-828 6902 0
-829 6904 0
-830 6906 0
-831 6908 0
-832 6910 0
-833 6912 0
-834 6914 0
-835 -6913 0
-6900 827 0
-6902 828 0
-6904 829 0
-6906 830 0
-6908 831 0
-6910 832 0
-6912 833 0
-6914 834 0
6913 835 0
c (field_00008_00003=variant_fields_00001_00008_00003)
-795 4946 0
-4946 795 0
c (field_00003_00008=variant_fields_00002_00008_00003)
-335 5909 0
-336 5911 0
-337 5913 0
-338 5915 0
-339 5917 0
-340 5919 0
-341 5921 0
-342 5923 0
-343 -5922 0
-5909 335 0
-5911 336 0
-5913 337 0
-5915 338 0
-5917 339 0
-5919 340 0
-5921 341 0
-5923 342 0
5922 343 0
c (variant_fields_00004_00008_00004=field_00006_00008)
-7892 642 0
-7894 643 0
-7896 644 0
-7898 645 0
-7900 646 0
-7902 647 0
-7904 648 0
-7906 649 0
7905 650 0
-642 7892 0
-643 7894 0
-644 7896 0
-645 7898 0
-646 7900 0
-647 7902 0
-648 7904 0
-649 7906 0
-650 -7905 0
c (field_00008_00006=variant_fields_00003_00008_00004)
-812 6915 0
-813 6917 0
-814 6919 0
-815 6921 0
-816 6923 0
-817 6925 0
-818 6927 0
-819 6929 0
-820 -6928 0
-6915 812 0
-6917 813 0
-6919 814 0
-6921 815 0
-6923 816 0
-6925 817 0
-6927 818 0
-6929 819 0
6928 820 0
c (field_00008_00004=variant_fields_00001_00008_00004)
-796 4947 0
-797 4949 0
-798 4951 0
-799 4953 0
-800 4955 0
-801 4957 0
-802 4959 0
-803 4961 0
-804 -4960 0
-4947 796 0
-4949 797 0
-4951 798 0
-4953 799 0
-4955 800 0
-4957 801 0
-4959 802 0
-4961 803 0
4960 804 0
c (field_00004_00008=variant_fields_00002_00008_00004)
-456 5924 0
-5924 456 0
c (variant_fields_00004_00008_00005=field_00005_00008)
-7907 549 0
-7909 550 0
-7911 551 0
-7913 552 0
-7915 553 0
-7917 554 0
-7919 555 0
-7921 556 0
7920 557 0
-549 7907 0
-550 7909 0
-551 7911 0
-552 7913 0
-553 7915 0
-554 7917 0
-555 7919 0
-556 7921 0
-557 -7920 0
c (field_00008_00005=variant_fields_00003_00008_00005)
-811 6930 0
-6930 811 0
c (field_00008_00005=variant_fields_00001_00008_00005)
-811 4962 0
-4962 811 0
c (field_00005_00008=variant_fields_00002_00008_00005)
-549 5925 0
-550 5927 0
-551 5929 0
-552 5931 0
-553 5933 0
-554 5935 0
-555 5937 0
-556 5939 0
-557 -5938 0
-5925 549 0
-5927 550 0
-5929 551 0
-5931 552 0
-5933 553 0
-5935 554 0
-5937 555 0
-5939 556 0
5938 557 0
c (field_00004_00008=variant_fields_00004_00008_00006)
-456 7922 0
-7922 456 0
c (field_00008_00004=variant_fields_00003_00008_00006)
-796 6931 0
-797 6933 0
-798 6935 0
-799 6937 0
-800 6939 0
-801 6941 0
-802 6943 0
-803 6945 0
-804 -6944 0
-6931 796 0
-6933 797 0
-6935 798 0
-6937 799 0
-6939 800 0
-6941 801 0
-6943 802 0
-6945 803 0
6944 804 0
c (field_00008_00006=variant_fields_00001_00008_00006)
-812 4963 0
-813 4965 0
-814 4967 0
-815 4969 0
-816 4971 0
-817 4973 0
-818 4975 0
-819 4977 0
-820 -4976 0
-4963 812 0
-4965 813 0
-4967 814 0
-4969 815 0
-4971 816 0
-4973 817 0
-4975 818 0
-4977 819 0
4976 820 0
c (variant_fields_00002_00008_00006=field_00006_00008)
-5940 642 0
-5942 643 0
-5944 644 0
-5946 645 0
-5948 646 0
-5950 647 0
-5952 648 0
-5954 649 0
5953 650 0
-642 5940 0
-643 5942 0
-644 5944 0
-645 5946 0
-646 5948 0
-647 5950 0
-648 5952 0
-649 5954 0
-650 -5953 0
c (field_00003_00008=variant_fields_00004_00008_00007)
-335 7923 0
-336 7925 0
-337 7927 0
-338 7929 0
-339 7931 0
-340 7933 0
-341 7935 0
-342 7937 0
-343 -7936 0
-7923 335 0
-7925 336 0
-7927 337 0
-7929 338 0
-7931 339 0
-7933 340 0
-7935 341 0
-7937 342 0
7936 343 0
c (field_00008_00003=variant_fields_00003_00008_00007)
-795 6946 0
-6946 795 0
c (field_00008_00007=variant_fields_00001_00008_00007)
-827 4978 0
-828 4980 0
-829 4982 0
-830 4984 0
-831 4986 0
-832 4988 0
-833 4990 0
-834 4992 0
-835 -4991 0
-4978 827 0
-4980 828 0
-4982 829 0
-4984 830 0
-4986 831 0
-4988 832 0
-4990 833 0
-4992 834 0
4991 835 0
c (variant_fields_00002_00008_00007=field_00007_00008)
-5955 749 0
-5957 750 0
-5959 751 0
-5961 752 0
-5963 753 0
-5965 754 0
-5967 755 0
-5969 756 0
5968 757 0
-749 5955 0
-750 5957 0
-751 5959 0
-752 5961 0
-753 5963 0
-754 5965 0
-755 5967 0
-756 5969 0
-757 -5968 0
c (variant_fields_00004_00008_00008=field_00002_00008)
-7938 228 0
-228 7938 0
c (field_00008_00002=variant_fields_00003_00008_00008)
-780 6947 0
-781 6949 0
-782 6951 0
-783 6953 0
-784 6955 0
-785 6957 0
-786 6959 0
-787 6961 0
-788 -6960 0
-6947 780 0
-6949 781 0
-6951 782 0
-6953 783 0
-6955 784 0
-6957 785 0
-6959 786 0
-6961 787 0
6960 788 0
c (field_00008_00008=variant_fields_00001_00008_00008)
-842 4993 0
-843 4995 0
-844 4997 0
-845 4999 0
-846 5001 0
-847 5003 0
-848 5005 0
-849 5007 0
-850 -5006 0
-4993 842 0
-4995 843 0
-4997 844 0
-4999 845 0
-5001 846 0
-5003 847 0
-5005 848 0
-5007 849 0
5006 850 0
c (field_00008_00008=variant_fields_00002_00008_00008)
-842 5970 0
-843 5972 0
-844 5974 0
-845 5976 0
-846 5978 0
-847 5980 0
-848 5982 0
-849 5984 0
-850 -5983 0
-5970 842 0
-5972 843 0
-5974 844 0
-5976 845 0
-5978 846 0
-5980 847 0
-5982 848 0
-5984 849 0
5983 850 0
c (variant_fields_00004_00008_00009=field_00001_00008)
-7939 93 0
-7941 94 0
-7943 95 0
-7945 96 0
-7947 97 0
-7949 98 0
-7951 99 0
-7953 100 0
7952 101 0
-93 7939 0
-94 7941 0
-95 7943 0
-96 7945 0
-97 7947 0
-98 7949 0
-99 7951 0
-100 7953 0
-101 -7952 0
c (field_00008_00001=variant_fields_00003_00008_00009)
-765 6962 0
-766 6964 0
-767 6966 0
-768 6968 0
-769 6970 0
-770 6972 0
-771 6974 0
-772 6976 0
-773 -6975 0
-6962 765 0
-6964 766 0
-6966 767 0
-6968 768 0
-6970 769 0
-6972 770 0
-6974 771 0
-6976 772 0
6975 773 0
c (field_00008_00009=variant_fields_00001_00008_00009)
-857 5008 0
-858 5010 0
-859 5012 0
-860 5014 0
-861 5016 0
-862 5018 0
-863 5020 0
-864 5022 0
-865 -5021 0
-5008 857 0
-5010 858 0
-5012 859 0
-5014 860 0
-5016 861 0
-5018 862 0
-5020 863 0
-5022 864 0
5021 865 0
c (field_00009_00008=variant_fields_00002_00008_00009)
-949 5985 0
-950 5987 0
-951 5989 0
-952 5991 0
-953 5993 0
-954 5995 0
-955 5997 0
-956 5999 0
-957 -5998 0
-5985 949 0
-5987 950 0
-5989 951 0
-5991 952 0
-5993 953 0
-5995 954 0
-5997 955 0
-5999 956 0
5998 957 0
c (field_00009_00009=variant_fields_00004_00009_00001)
-964 7954 0
-965 7956 0
-966 7958 0
-967 7960 0
-968 7962 0
-969 7964 0
-970 7966 0
-971 7968 0
-972 -7967 0
-7954 964 0
-7956 965 0
-7958 966 0
-7960 967 0
-7962 968 0
-7964 969 0
-7966 970 0
-7968 971 0
7967 972 0
c (field_00009_00009=variant_fields_00003_00009_00001)
-964 6977 0
-965 6979 0
-966 6981 0
-967 6983 0
-968 6985 0
-969 6987 0
-970 6989 0
-971 6991 0
-972 -6990 0
-6977 964 0
-6979 965 0
-6981 966 0
-6983 967 0
-6985 968 0
-6987 969 0
-6989 970 0
-6991 971 0
6990 972 0
c (field_00009_00001=variant_fields_00001_00009_00001)
-872 5023 0
-873 5025 0
-874 5027 0
-875 5029 0
-876 5031 0
-877 5033 0
-878 5035 0
-879 5037 0
-880 -5036 0
-5023 872 0
-5025 873 0
-5027 874 0
-5029 875 0
-5031 876 0
-5033 877 0
-5035 878 0
-5037 879 0
5036 880 0
c (field_00001_00009=variant_fields_00002_00009_00001)
-108 6000 0
-109 6002 0
-110 6004 0
-111 6006 0
-112 6008 0
-113 6010 0
-114 6012 0
-115 6014 0
-116 -6013 0
-6000 108 0
-6002 109 0
-6004 110 0
-6006 111 0
-6008 112 0
-6010 113 0
-6012 114 0
-6014 115 0
6013 116 0
c (field_00008_00009=variant_fields_00004_00009_00002)
-857 7969 0
-858 7971 0
-859 7973 0
-860 7975 0
-861 7977 0
-862 7979 0
-863 7981 0
-864 7983 0
-865 -7982 0
-7969 857 0
-7971 858 0
-7973 859 0
-7975 860 0
-7977 861 0
-7979 862 0
-7981 863 0
-7983 864 0
7982 865 0
c (field_00009_00008=variant_fields_00003_00009_00002)
-949 6992 0
-950 6994 0
-951 6996 0
-952 6998 0
-953 7000 0
-954 7002 0
-955 7004 0
-956 7006 0
-957 -7005 0
-6992 949 0
-6994 950 0
-6996 951 0
-6998 952 0
-7000 953 0
-7002 954 0
-7004 955 0
-7006 956 0
7005 957 0
c (field_00009_00002=variant_fields_00001_00009_00002)
-887 5038 0
-888 5040 0
-889 5042 0
-890 5044 0
-891 5046 0
-892 5048 0
-893 5050 0
-894 5052 0
-895 -5051 0
-5038 887 0
-5040 888 0
-5042 889 0
-5044 890 0
-5046 891 0
-5048 892 0
-5050 893 0
-5052 894 0
5051 895 0
c (variant_fields_00002_00009_00002=field_00002_00009)
-6015 229 0
-6017 230 0
-6019 231 0
-6021 232 0
-6023 233 0
-6025 234 0
-6027 235 0
-6029 236 0
6028 237 0
-229 6015 0
-230 6017 0
-231 6019 0
-232 6021 0
-233 6023 0
-234 6025 0
-235 6027 0
-236 6029 0
-237 -6028 0
c (variant_fields_00004_00009_00003=field_00007_00009)
-7984 764 0
-764 7984 0
c (field_00009_00007=variant_fields_00003_00009_00003)
-948 7007 0
-7007 948 0
c (field_00009_00003=variant_fields_00001_00009_00003)
-902 5053 0
-903 5055 0
-904 5057 0
-905 5059 0
-906 5061 0
-907 5063 0
-908 5065 0
-909 5067 0
-910 -5066 0
-5053 902 0
-5055 903 0
-5057 904 0
-5059 905 0
-5061 906 0
-5063 907 0
-5065 908 0
-5067 909 0
5066 910 0
c (field_00003_00009=variant_fields_00002_00009_00003)
-350 6030 0
-351 6032 0
-352 6034 0
-353 6036 0
-354 6038 0
-355 6040 0
-356 6042 0
-357 6044 0
-358 -6043 0
-6030 350 0
-6032 351 0
-6034 352 0
-6036 353 0
-6038 354 0
-6040 355 0
-6042 356 0
-6044 357 0
6043 358 0
c (variant_fields_00004_00009_00004=field_00006_00009)
-7985 657 0
-7987 658 0
-7989 659 0
-7991 660 0
-7993 661 0
-7995 662 0
-7997 663 0
-7999 664 0
7998 665 0
-657 7985 0
-658 7987 0
-659 7989 0
-660 7991 0
-661 7993 0
-662 7995 0
-663 7997 0
-664 7999 0
-665 -7998 0
c (field_00009_00006=variant_fields_00003_00009_00004)
-933 7008 0
-934 7010 0
-935 7012 0
-936 7014 0
-937 7016 0
-938 7018 0
-939 7020 0
-940 7022 0
-941 -7021 0
-7008 933 0
-7010 934 0
-7012 935 0
-7014 936 0
-7016 937 0
-7018 938 0
-7020 939 0
-7022 940 0
7021 941 0
c (field_00009_00004=variant_fields_00001_00009_00004)
-917 5068 0
-918 5070 0
-919 5072 0
-920 5074 0
-921 5076 0
-922 5078 0
-923 5080 0
-924 5082 0
-925 -5081 0
-5068 917 0
-5070 918 0
-5072 919 0
-5074 920 0
-5076 921 0
-5078 922 0
-5080 923 0
-5082 924 0
5081 925 0
c (field_00004_00009=variant_fields_00002_00009_00004)
-457 6045 0
-458 6047 0
-459 6049 0
-460 6051 0
-461 6053 0
-462 6055 0
-463 6057 0
-464 6059 0
-465 -6058 0
-6045 457 0
-6047 458 0
-6049 459 0
-6051 460 0
-6053 461 0
-6055 462 0
-6057 463 0
-6059 464 0
6058 465 0
c (field_00005_00009=variant_fields_00004_00009_00005)
-564 8000 0
-8000 564 0
c (field_00009_00005=variant_fields_00003_00009_00005)
-932 7023 0
-7023 932 0
c (field_00009_00005=variant_fields_00001_00009_00005)
-932 5083 0
-5083 932 0
c (field_00005_00009=variant_fields_00002_00009_00005)
-564 6060 0
-6060 564 0
c (field_00004_00009=variant_fields_00004_00009_00006)
-457 8001 0
-458 8003 0
-459 8005 0
-460 8007 0
-461 8009 0
-462 8011 0
-463 8013 0
-464 8015 0
-465 -8014 0
-8001 457 0
-8003 458 0
-8005 459 0
-8007 460 0
-8009 461 0
-8011 462 0
-8013 463 0
-8015 464 0
8014 465 0
c (field_00009_00004=variant_fields_00003_00009_00006)
-917 7024 0
-918 7026 0
-919 7028 0
-920 7030 0
-921 7032 0
-922 7034 0
-923 7036 0
-924 7038 0
-925 -7037 0
-7024 917 0
-7026 918 0
-7028 919 0
-7030 920 0
-7032 921 0
-7034 922 0
-7036 923 0
-7038 924 0
7037 925 0
c (field_00009_00006=variant_fields_00001_00009_00006)
-933 5084 0
-934 5086 0
-935 5088 0
-936 5090 0
-937 5092 0
-938 5094 0
-939 5096 0
-940 5098 0
-941 -5097 0
-5084 933 0
-5086 934 0
-5088 935 0
-5090 936 0
-5092 937 0
-5094 938 0
-5096 939 0
-5098 940 0
5097 941 0
c (field_00006_00009=variant_fields_00002_00009_00006)
-657 6061 0
-658 6063 0
-659 6065 0
-660 6067 0
-661 6069 0
-662 6071 0
-663 6073 0
-664 6075 0
-665 -6074 0
-6061 657 0
-6063 658 0
-6065 659 0
-6067 660 0
-6069 661 0
-6071 662 0
-6073 663 0
-6075 664 0
6074 665 0
c (field_00003_00009=variant_fields_00004_00009_00007)
-350 8016 0
-351 8018 0
-352 8020 0
-353 8022 0
-354 8024 0
-355 8026 0
-356 8028 0
-357 8030 0
-358 -8029 0
-8016 350 0
-8018 351 0
-8020 352 0
-8022 353 0
-8024 354 0
-8026 355 0
-8028 356 0
-8030 357 0
8029 358 0
c (field_00009_00003=variant_fields_00003_00009_00007)
-902 7039 0
-903 7041 0
-904 7043 0
-905 7045 0
-906 7047 0
-907 7049 0
-908 7051 0
-909 7053 0
-910 -7052 0
-7039 902 0
-7041 903 0
-7043 904 0
-7045 905 0
-7047 906 0
-7049 907 0
-7051 908 0
-7053 909 0
7052 910 0
c (field_00009_00007=variant_fields_00001_00009_00007)
-948 5099 0
-5099 948 0
c (variant_fields_00002_00009_00007=field_00007_00009)
-6076 764 0
-764 6076 0
c (variant_fields_00004_00009_00008=field_00002_00009)
-8031 229 0
-8033 230 0
-8035 231 0
-8037 232 0
-8039 233 0
-8041 234 0
-8043 235 0
-8045 236 0
8044 237 0
-229 8031 0
-230 8033 0
-231 8035 0
-232 8037 0
-233 8039 0
-234 8041 0
-235 8043 0
-236 8045 0
-237 -8044 0
c (field_00009_00002=variant_fields_00003_00009_00008)
-887 7054 0
-888 7056 0
-889 7058 0
-890 7060 0
-891 7062 0
-892 7064 0
-893 7066 0
-894 7068 0
-895 -7067 0
-7054 887 0
-7056 888 0
-7058 889 0
-7060 890 0
-7062 891 0
-7064 892 0
-7066 893 0
-7068 894 0
7067 895 0
c (field_00009_00008=variant_fields_00001_00009_00008)
-949 5100 0
-950 5102 0
-951 5104 0
-952 5106 0
-953 5108 0
-954 5110 0
-955 5112 0
-956 5114 0
-957 -5113 0
-5100 949 0
-5102 950 0
-5104 951 0
-5106 952 0
-5108 953 0
-5110 954 0
-5112 955 0
-5114 956 0
5113 957 0
c (field_00008_00009=variant_fields_00002_00009_00008)
-857 6077 0
-858 6079 0
-859 6081 0
-860 6083 0
-861 6085 0
-862 6087 0
-863 6089 0
-864 6091 0
-865 -6090 0
-6077 857 0
-6079 858 0
-6081 859 0
-6083 860 0
-6085 861 0
-6087 862 0
-6089 863 0
-6091 864 0
6090 865 0
c (variant_fields_00004_00009_00009=field_00001_00009)
-8046 108 0
-8048 109 0
-8050 110 0
-8052 111 0
-8054 112 0
-8056 113 0
-8058 114 0
-8060 115 0
8059 116 0
-108 8046 0
-109 8048 0
-110 8050 0
-111 8052 0
-112 8054 0
-113 8056 0
-114 8058 0
-115 8060 0
-116 -8059 0
c (field_00009_00001=variant_fields_00003_00009_00009)
-872 7069 0
-873 7071 0
-874 7073 0
-875 7075 0
-876 7077 0
-877 7079 0
-878 7081 0
-879 7083 0
-880 -7082 0
-7069 872 0
-7071 873 0
-7073 874 0
-7075 875 0
-7077 876 0
-7079 877 0
-7081 878 0
-7083 879 0
7082 880 0
c (field_00009_00009=variant_fields_00001_00009_00009)
-964 5115 0
-965 5117 0
-966 5119 0
-967 5121 0
-968 5123 0
-969 5125 0
-970 5127 0
-971 5129 0
-972 -5128 0
-5115 964 0
-5117 965 0
-5119 966 0
-5121 967 0
-5123 968 0
-5125 969 0
-5127 970 0
-5129 971 0
5128 972 0
c (field_00009_00009=variant_fields_00002_00009_00009)
-964 6092 0
-965 6094 0
-966 6096 0
-967 6098 0
-968 6100 0
-969 6102 0
-970 6104 0
-971 6106 0
-972 -6105 0
-6092 964 0
-6094 965 0
-6096 966 0
-6098 967 0
-6100 968 0
-6102 969 0
-6104 970 0
-6106 971 0
6105 972 0
c SATLiteral(1033)
1033 0
c SATLiteral(1145)
1145 0
c SATLiteral(1257)
1257 0
c SATLiteral(1353)
1353 0
c SATLiteral(1481)
1481 0
c SATLiteral(1581)
1581 0
c SATLiteral(1605)
1605 0
c SATLiteral(1697)
1697 0
c SATLiteral(1735)
1735 0
c SATLiteral(1829)
1829 0
c SATLiteral(1965)
1965 0
c SATLiteral(2045)
2045 0
c SATLiteral(2153)
2153 0
c SATLiteral(2277)
2277 0
c SATLiteral(2389)
2389 0
c SATLiteral(2447)
2447 0
c (variant_fields_00002_00007_00001=max_left_00002_00007_00001)
-5814 2448 0
-2448 5814 0
c SATLiteral(2483)
2483 0
c SATLiteral(2523)
2523 0
c SATLiteral(2619)
2619 0
c SATLiteral(2699)
2699 0
c SATLiteral(2739)
2739 0
c SATLiteral(2815)
2815 0
c SATLiteral(2919)
2919 0
c (variant_fields_00003_00005_00001=max_left_00003_00005_00001)
-6577 2920 0
-2920 6577 0
c SATLiteral(2955)
2955 0
c SATLiteral(3015)
3015 0
c (variant_fields_00003_00007_00001=max_left_00003_00007_00001)
-6777 3016 0
-3016 6777 0
c SATLiteral(3041)
3041 0
c SATLiteral(3111)
3111 0
c SATLiteral(3149)
3149 0
c SATLiteral(3285)
3285 0
c SATLiteral(3337)
3337 0
c SATLiteral(3361)
3361 0
c SATLiteral(3469)
3469 0
c (variant_fields_00004_00005_00001=max_left_00004_00005_00001)
-7554 3470 0
-3470 7554 0
c (variant_fields_00004_00005_00002=max_left_00004_00005_00002)
-7555 3471 0
-3471 7555 0
c SATLiteral(3493)
3493 0
c SATLiteral(3557)
3557 0
c (variant_fields_00004_00007_00001=max_left_00004_00007_00001)
-7768 3558 0
-3558 7768 0
c SATLiteral(3567)
3567 0
c SATLiteral(3671)
3671 0
c (SATLiteral(997) -> SATLiteral(3723))
-997 3723 0
c (SATLiteral(998) -> SATLiteral(3744))
-998 3744 0
c (SATLiteral(999) -> SATLiteral(3751))
-999 3751 0
c (SATLiteral(1000) -> SATLiteral(3768))
-1000 3768 0
c (SATLiteral(1001) -> SATLiteral(3777))
-1001 3777 0
c (SATLiteral(1002) -> SATLiteral(3790))
-1002 3790 0
c (SATLiteral(1003) -> SATLiteral(3803))
-1003 3803 0
c (SATLiteral(1004) -> SATLiteral(3814))
-1004 3814 0
c (SATLiteral(1005) -> SATLiteral(3823))
-1005 3823 0
c (SATLiteral(1006) -> SATLiteral(3832))
-1006 3832 0
c (SATLiteral(1007) -> SATLiteral(3855))
-1007 3855 0
c (SATLiteral(1008) -> SATLiteral(3864))
-1008 3864 0
c (SATLiteral(1009) -> SATLiteral(3877))
-1009 3877 0
c (SATLiteral(1010) -> SATLiteral(3888))
-1010 3888 0
c (SATLiteral(1011) -> SATLiteral(3897))
-1011 3897 0
c (SATLiteral(1012) -> SATLiteral(3908))
-1012 3908 0
c (SATLiteral(1013) -> SATLiteral(3923))
-1013 3923 0
c (SATLiteral(1014) -> SATLiteral(3930))
-1014 3930 0
c (SATLiteral(1015) -> SATLiteral(3943))
-1015 3943 0
c (SATLiteral(1016) -> SATLiteral(3958))
-1016 3958 0
c (SATLiteral(1017) -> SATLiteral(3967))
-1017 3967 0
c (SATLiteral(1018) -> SATLiteral(3982))
-1018 3982 0
c (SATLiteral(1019) -> SATLiteral(3995))
-1019 3995 0
c (SATLiteral(1020) -> SATLiteral(4006))
-1020 4006 0
c (SATLiteral(1021) -> SATLiteral(4017))
-1021 4017 0
c (SATLiteral(1022) -> SATLiteral(4032))
-1022 4032 0
c (SATLiteral(1023) -> SATLiteral(4041))
-1023 4041 0
c (SATLiteral(1024) -> SATLiteral(4056))
-1024 4056 0
c (SATLiteral(1025) -> SATLiteral(4063))
-1025 4063 0
c (SATLiteral(1026) -> SATLiteral(4080))
-1026 4080 0
c (SATLiteral(1027) -> SATLiteral(4089))
-1027 4089 0
c (SATLiteral(1028) -> SATLiteral(4102))
-1028 4102 0
c (SATLiteral(1029) -> SATLiteral(4117))
-1029 4117 0
c (SATLiteral(1030) -> SATLiteral(4124))
-1030 4124 0
c (SATLiteral(1031) -> SATLiteral(4133))
-1031 4133 0
c (SATLiteral(1032) -> SATLiteral(4146))
-1032 4146 0
c (SATLiteral(979) -> SATLiteral(8348))
-979 8348 0
c (SATLiteral(979) -> SATLiteral(8349))
-979 8349 0
c (SATLiteral(979) -> SATLiteral(8350))
-979 8350 0
c (SATLiteral(979) -> SATLiteral(8351))
-979 8351 0
c (SATLiteral(979) -> SATLiteral(8352))
-979 8352 0
c (SATLiteral(979) -> SATLiteral(8353))
-979 8353 0
c (SATLiteral(979) -> SATLiteral(8354))
-979 8354 0
c (SATLiteral(979) -> SATLiteral(8355))
-979 8355 0
c (SATLiteral(979) -> SATLiteral(8356))
-979 8356 0
c (SATLiteral(980) -> SATLiteral(8357))
-980 8357 0
c (SATLiteral(980) -> SATLiteral(8358))
-980 8358 0
c (SATLiteral(980) -> SATLiteral(8359))
-980 8359 0
c (SATLiteral(980) -> SATLiteral(8360))
-980 8360 0
c (SATLiteral(980) -> SATLiteral(8361))
-980 8361 0
c (SATLiteral(980) -> SATLiteral(8362))
-980 8362 0
c (SATLiteral(980) -> SATLiteral(8363))
-980 8363 0
c (SATLiteral(980) -> SATLiteral(8364))
-980 8364 0
c (SATLiteral(980) -> SATLiteral(8365))
-980 8365 0
c (SATLiteral(981) -> SATLiteral(8366))
-981 8366 0
c (SATLiteral(981) -> SATLiteral(8367))
-981 8367 0
c (SATLiteral(981) -> SATLiteral(8368))
-981 8368 0
c (SATLiteral(981) -> SATLiteral(8369))
-981 8369 0
c (SATLiteral(981) -> SATLiteral(8370))
-981 8370 0
c (SATLiteral(981) -> SATLiteral(8371))
-981 8371 0
c (SATLiteral(981) -> SATLiteral(8372))
-981 8372 0
c (SATLiteral(981) -> SATLiteral(8373))
-981 8373 0
c (SATLiteral(981) -> SATLiteral(8374))
-981 8374 0
c (SATLiteral(982) -> SATLiteral(8375))
-982 8375 0
c (SATLiteral(982) -> SATLiteral(8376))
-982 8376 0
c (SATLiteral(982) -> SATLiteral(8377))
-982 8377 0
c (SATLiteral(982) -> SATLiteral(8378))
-982 8378 0
c (SATLiteral(982) -> SATLiteral(8379))
-982 8379 0
c (SATLiteral(982) -> SATLiteral(8380))
-982 8380 0
c (SATLiteral(982) -> SATLiteral(8381))
-982 8381 0
c (SATLiteral(982) -> SATLiteral(8382))
-982 8382 0
c (SATLiteral(982) -> SATLiteral(8383))
-982 8383 0
c (SATLiteral(983) -> SATLiteral(8384))
-983 8384 0
c (SATLiteral(983) -> SATLiteral(8385))
-983 8385 0
c (SATLiteral(983) -> SATLiteral(8386))
-983 8386 0
c (SATLiteral(983) -> SATLiteral(8387))
-983 8387 0
c (SATLiteral(983) -> SATLiteral(8388))
-983 8388 0
c (SATLiteral(983) -> SATLiteral(8389))
-983 8389 0
c (SATLiteral(983) -> SATLiteral(8390))
-983 8390 0
c (SATLiteral(983) -> SATLiteral(8391))
-983 8391 0
c (SATLiteral(983) -> SATLiteral(8392))
-983 8392 0
c (SATLiteral(984) -> SATLiteral(8393))
-984 8393 0
c (SATLiteral(984) -> SATLiteral(8394))
-984 8394 0
c (SATLiteral(984) -> SATLiteral(8395))
-984 8395 0
c (SATLiteral(984) -> SATLiteral(8396))
-984 8396 0
c (SATLiteral(984) -> SATLiteral(8397))
-984 8397 0
c (SATLiteral(984) -> SATLiteral(8398))
-984 8398 0
c (SATLiteral(984) -> SATLiteral(8399))
-984 8399 0
c (SATLiteral(984) -> SATLiteral(8400))
-984 8400 0
c (SATLiteral(984) -> SATLiteral(8401))
-984 8401 0
c (SATLiteral(985) -> SATLiteral(8402))
-985 8402 0
c (SATLiteral(985) -> SATLiteral(8403))
-985 8403 0
c (SATLiteral(985) -> SATLiteral(8404))
-985 8404 0
c (SATLiteral(985) -> SATLiteral(8405))
-985 8405 0
c (SATLiteral(985) -> SATLiteral(8406))
-985 8406 0
c (SATLiteral(985) -> SATLiteral(8407))
-985 8407 0
c (SATLiteral(985) -> SATLiteral(8408))
-985 8408 0
c (SATLiteral(985) -> SATLiteral(8409))
-985 8409 0
c (SATLiteral(985) -> SATLiteral(8410))
-985 8410 0
c (SATLiteral(986) -> SATLiteral(8411))
-986 8411 0
c (SATLiteral(986) -> SATLiteral(8412))
-986 8412 0
c (SATLiteral(986) -> SATLiteral(8413))
-986 8413 0
c (SATLiteral(986) -> SATLiteral(8414))
-986 8414 0
c (SATLiteral(986) -> SATLiteral(8415))
-986 8415 0
c (SATLiteral(986) -> SATLiteral(8416))
-986 8416 0
c (SATLiteral(986) -> SATLiteral(8417))
-986 8417 0
c (SATLiteral(986) -> SATLiteral(8418))
-986 8418 0
c (SATLiteral(986) -> SATLiteral(8419))
-986 8419 0
c (SATLiteral(987) -> SATLiteral(8420))
-987 8420 0
c (SATLiteral(987) -> SATLiteral(8421))
-987 8421 0
c (SATLiteral(987) -> SATLiteral(8422))
-987 8422 0
c (SATLiteral(987) -> SATLiteral(8423))
-987 8423 0
c (SATLiteral(987) -> SATLiteral(8424))
-987 8424 0
c (SATLiteral(987) -> SATLiteral(8425))
-987 8425 0
c (SATLiteral(987) -> SATLiteral(8426))
-987 8426 0
c (SATLiteral(987) -> SATLiteral(8427))
-987 8427 0
c (SATLiteral(987) -> SATLiteral(8428))
-987 8428 0
c (SATLiteral(988) -> SATLiteral(8429))
-988 8429 0
c (SATLiteral(988) -> SATLiteral(8430))
-988 8430 0
c (SATLiteral(988) -> SATLiteral(8431))
-988 8431 0
c (SATLiteral(988) -> SATLiteral(8432))
-988 8432 0
c (SATLiteral(988) -> SATLiteral(8433))
-988 8433 0
c (SATLiteral(988) -> SATLiteral(8434))
-988 8434 0
c (SATLiteral(988) -> SATLiteral(8435))
-988 8435 0
c (SATLiteral(988) -> SATLiteral(8436))
-988 8436 0
c (SATLiteral(988) -> SATLiteral(8437))
-988 8437 0
c (SATLiteral(989) -> SATLiteral(8438))
-989 8438 0
c (SATLiteral(989) -> SATLiteral(8439))
-989 8439 0
c (SATLiteral(989) -> SATLiteral(8440))
-989 8440 0
c (SATLiteral(989) -> SATLiteral(8441))
-989 8441 0
c (SATLiteral(989) -> SATLiteral(8442))
-989 8442 0
c (SATLiteral(989) -> SATLiteral(8443))
-989 8443 0
c (SATLiteral(989) -> SATLiteral(8444))
-989 8444 0
c (SATLiteral(989) -> SATLiteral(8445))
-989 8445 0
c (SATLiteral(989) -> SATLiteral(8446))
-989 8446 0
c (SATLiteral(990) -> SATLiteral(8447))
-990 8447 0
c (SATLiteral(990) -> SATLiteral(8448))
-990 8448 0
c (SATLiteral(990) -> SATLiteral(8449))
-990 8449 0
c (SATLiteral(990) -> SATLiteral(8450))
-990 8450 0
c (SATLiteral(990) -> SATLiteral(8451))
-990 8451 0
c (SATLiteral(990) -> SATLiteral(8452))
-990 8452 0
c (SATLiteral(990) -> SATLiteral(8453))
-990 8453 0
c (SATLiteral(990) -> SATLiteral(8454))
-990 8454 0
c (SATLiteral(990) -> SATLiteral(8455))
-990 8455 0
c (SATLiteral(991) -> SATLiteral(8456))
-991 8456 0
c (SATLiteral(991) -> SATLiteral(8457))
-991 8457 0
c (SATLiteral(991) -> SATLiteral(8458))
-991 8458 0
c (SATLiteral(991) -> SATLiteral(8459))
-991 8459 0
c (SATLiteral(991) -> SATLiteral(8460))
-991 8460 0
c (SATLiteral(991) -> SATLiteral(8461))
-991 8461 0
c (SATLiteral(991) -> SATLiteral(8462))
-991 8462 0
c (SATLiteral(991) -> SATLiteral(8463))
-991 8463 0
c (SATLiteral(991) -> SATLiteral(8464))
-991 8464 0
c (SATLiteral(992) -> SATLiteral(8465))
-992 8465 0
c (SATLiteral(992) -> SATLiteral(8466))
-992 8466 0
c (SATLiteral(992) -> SATLiteral(8467))
-992 8467 0
c (SATLiteral(992) -> SATLiteral(8468))
-992 8468 0
c (SATLiteral(992) -> SATLiteral(8469))
-992 8469 0
c (SATLiteral(992) -> SATLiteral(8470))
-992 8470 0
c (SATLiteral(992) -> SATLiteral(8471))
-992 8471 0
c (SATLiteral(992) -> SATLiteral(8472))
-992 8472 0
c (SATLiteral(992) -> SATLiteral(8473))
-992 8473 0
c (SATLiteral(993) -> SATLiteral(8474))
-993 8474 0
c (SATLiteral(993) -> SATLiteral(8475))
-993 8475 0
c (SATLiteral(993) -> SATLiteral(8476))
-993 8476 0
c (SATLiteral(993) -> SATLiteral(8477))
-993 8477 0
c (SATLiteral(993) -> SATLiteral(8478))
-993 8478 0
c (SATLiteral(993) -> SATLiteral(8479))
-993 8479 0
c (SATLiteral(993) -> SATLiteral(8480))
-993 8480 0
c (SATLiteral(993) -> SATLiteral(8481))
-993 8481 0
c (SATLiteral(993) -> SATLiteral(8482))
-993 8482 0
c (SATLiteral(994) -> SATLiteral(8483))
-994 8483 0
c (SATLiteral(994) -> SATLiteral(8484))
-994 8484 0
c (SATLiteral(994) -> SATLiteral(8485))
-994 8485 0
c (SATLiteral(994) -> SATLiteral(8486))
-994 8486 0
c (SATLiteral(994) -> SATLiteral(8487))
-994 8487 0
c (SATLiteral(994) -> SATLiteral(8488))
-994 8488 0
c (SATLiteral(994) -> SATLiteral(8489))
-994 8489 0
c (SATLiteral(994) -> SATLiteral(8490))
-994 8490 0
c (SATLiteral(994) -> SATLiteral(8491))
-994 8491 0
c (SATLiteral(995) -> SATLiteral(8492))
-995 8492 0
c (SATLiteral(995) -> SATLiteral(8493))
-995 8493 0
c (SATLiteral(995) -> SATLiteral(8494))
-995 8494 0
c (SATLiteral(995) -> SATLiteral(8495))
-995 8495 0
c (SATLiteral(995) -> SATLiteral(8496))
-995 8496 0
c (SATLiteral(995) -> SATLiteral(8497))
-995 8497 0
c (SATLiteral(995) -> SATLiteral(8498))
-995 8498 0
c (SATLiteral(995) -> SATLiteral(8499))
-995 8499 0
c (SATLiteral(995) -> SATLiteral(8500))
-995 8500 0
c (SATLiteral(996) -> SATLiteral(8501))
-996 8501 0
c (SATLiteral(996) -> SATLiteral(8502))
-996 8502 0
c (SATLiteral(996) -> SATLiteral(8503))
-996 8503 0
c (SATLiteral(996) -> SATLiteral(8504))
-996 8504 0
c (SATLiteral(996) -> SATLiteral(8505))
-996 8505 0
c (SATLiteral(996) -> SATLiteral(8506))
-996 8506 0
c (SATLiteral(996) -> SATLiteral(8507))
-996 8507 0
c (SATLiteral(996) -> SATLiteral(8508))
-996 8508 0
c (SATLiteral(996) -> SATLiteral(8509))
-996 8509 0
c (variant_fields_00001_00001_00001<=max_left_00001_00001_00001)
4153 -1034 0
4154 -1035 0
4156 -1037 0
4158 -1039 0
4160 -1041 0
4162 -1043 0
4164 -1045 0
4166 -1047 0
c (variant_fields_00001_00001_00001=max_left_00001_00001_00001)
-4153 1034 0
-4155 1036 0
-4157 1038 0
-4159 1040 0
-4161 1042 0
-4163 1044 0
-4165 1046 0
-4167 1048 0
4166 -1047 0
-1034 4153 0
-1036 4155 0
-1038 4157 0
-1040 4159 0
-1042 4161 0
-1044 4163 0
-1046 4165 0
-1048 4167 0
1047 -4166 0
c (max_left_00001_00001_00001<=max_left_00001_00001_00002)
1034 -1049 0
1035 -1050 0
1037 -1052 0
1039 -1054 0
1041 -1056 0
1043 -1058 0
1045 -1060 0
1047 -1062 0
c (variant_fields_00001_00001_00002<=max_left_00001_00001_00002)
4168 -1049 0
4169 -1050 0
4171 -1052 0
4173 -1054 0
4175 -1056 0
4177 -1058 0
4179 -1060 0
4181 -1062 0
c (SATLiteral(12143) \/ SATLiteral(12144))
12143 12144 0
c (max_left_00001_00001_00002<=max_left_00001_00001_00003)
1049 -1064 0
1050 -1065 0
1052 -1067 0
1054 -1069 0
1056 -1071 0
1058 -1073 0
1060 -1075 0
1062 -1077 0
c (variant_fields_00001_00001_00003<=max_left_00001_00001_00003)
4183 -1064 0
4184 -1065 0
4186 -1067 0
4188 -1069 0
4190 -1071 0
4192 -1073 0
4194 -1075 0
4196 -1077 0
c (SATLiteral(12145) \/ SATLiteral(12146))
12145 12146 0
c (max_left_00001_00001_00003<=max_left_00001_00001_00004)
1064 -1079 0
1065 -1080 0
1067 -1082 0
1069 -1084 0
1071 -1086 0
1073 -1088 0
1075 -1090 0
1077 -1092 0
c (variant_fields_00001_00001_00004<=max_left_00001_00001_00004)
4198 -1079 0
4199 -1080 0
4201 -1082 0
4203 -1084 0
4205 -1086 0
4207 -1088 0
4209 -1090 0
4211 -1092 0
c (SATLiteral(12147) \/ SATLiteral(12148))
12147 12148 0
c (max_left_00001_00001_00004<=max_left_00001_00001_00005)
1079 -1094 0
1080 -1095 0
1082 -1097 0
1084 -1099 0
1086 -1101 0
1088 -1103 0
1090 -1105 0
1092 -1107 0
c (variant_fields_00001_00001_00005<=max_left_00001_00001_00005)
4213 -1094 0
4214 -1095 0
4216 -1097 0
4218 -1099 0
4220 -1101 0
4222 -1103 0
4224 -1105 0
4226 -1107 0
c (SATLiteral(12149) \/ SATLiteral(12150))
12149 12150 0
c (max_left_00001_00001_00005<=max_left_00001_00001_00006)
1094 -1109 0
1095 -1110 0
1097 -1112 0
1099 -1114 0
1101 -1116 0
1103 -1118 0
1105 -1120 0
1107 -1122 0
c (variant_fields_00001_00001_00006<=max_left_00001_00001_00006)
4228 -1109 0
4229 -1110 0
4231 -1112 0
4233 -1114 0
4235 -1116 0
4237 -1118 0
4239 -1120 0
4241 -1122 0
c (SATLiteral(12151) \/ SATLiteral(12152))
12151 12152 0
c (max_left_00001_00001_00006<=max_left_00001_00001_00007)
1116 -1124 0
1118 -1125 0
1120 -1127 0
1122 -1129 0
c (SATLiteral(12153) \/ SATLiteral(12154))
12153 12154 0
c (max_left_00001_00001_00007<=max_left_00001_00001_00008)
1124 -1131 0
1125 -1132 0
1127 -1134 0
1129 -1136 0
c (variant_fields_00001_00001_00008<=max_left_00001_00001_00008)
4251 -1131 0
4253 -1132 0
4255 -1134 0
4257 -1136 0
c (SATLiteral(12155) \/ SATLiteral(12156))
12155 12156 0
c (max_left_00001_00001_00008<=max_left_00001_00001_00009)
1131 -1138 0
1132 -1139 0
1134 -1141 0
1136 -1143 0
c (variant_fields_00001_00001_00009<=max_left_00001_00001_00009)
4266 -1138 0
4268 -1139 0
4270 -1141 0
4272 -1143 0
c (SATLiteral(12157) \/ SATLiteral(12158))
12157 12158 0
c (variant_fields_00001_00002_00001<=max_left_00001_00002_00001)
4274 -1146 0
4275 -1147 0
4277 -1149 0
4279 -1151 0
4281 -1153 0
4283 -1155 0
4285 -1157 0
4287 -1159 0
c (variant_fields_00001_00002_00001=max_left_00001_00002_00001)
-4274 1146 0
-4276 1148 0
-4278 1150 0
-4280 1152 0
-4282 1154 0
-4284 1156 0
-4286 1158 0
-4288 1160 0
4287 -1159 0
-1146 4274 0
-1148 4276 0
-1150 4278 0
-1152 4280 0
-1154 4282 0
-1156 4284 0
-1158 4286 0
-1160 4288 0
1159 -4287 0
c (max_left_00001_00002_00001<=max_left_00001_00002_00002)
1146 -1161 0
1147 -1162 0
1149 -1164 0
1151 -1166 0
1153 -1168 0
1155 -1170 0
1157 -1172 0
1159 -1174 0
c (variant_fields_00001_00002_00002<=max_left_00001_00002_00002)
4289 -1161 0
4290 -1162 0
4292 -1164 0
4294 -1166 0
4296 -1168 0
4298 -1170 0
4300 -1172 0
4302 -1174 0
c (SATLiteral(12159) \/ SATLiteral(12160))
12159 12160 0
c (max_left_00001_00002_00002<=max_left_00001_00002_00003)
1161 -1176 0
1162 -1177 0
1164 -1179 0
1166 -1181 0
1168 -1183 0
1170 -1185 0
1172 -1187 0
1174 -1189 0
c (variant_fields_00001_00002_00003<=max_left_00001_00002_00003)
4304 -1176 0
4305 -1177 0
4307 -1179 0
4309 -1181 0
4311 -1183 0
4313 -1185 0
4315 -1187 0
4317 -1189 0
c (SATLiteral(12161) \/ SATLiteral(12162))
12161 12162 0
c (max_left_00001_00002_00003<=max_left_00001_00002_00004)
1176 -1191 0
1177 -1192 0
1179 -1194 0
1181 -1196 0
1183 -1198 0
1185 -1200 0
1187 -1202 0
1189 -1204 0
c (variant_fields_00001_00002_00004<=max_left_00001_00002_00004)
4319 -1191 0
4320 -1192 0
4322 -1194 0
4324 -1196 0
4326 -1198 0
4328 -1200 0
4330 -1202 0
4332 -1204 0
c (SATLiteral(12163) \/ SATLiteral(12164))
12163 12164 0
c (max_left_00001_00002_00004<=max_left_00001_00002_00005)
1191 -1206 0
1192 -1207 0
1194 -1209 0
1196 -1211 0
1198 -1213 0
1200 -1215 0
1202 -1217 0
1204 -1219 0
c (variant_fields_00001_00002_00005<=max_left_00001_00002_00005)
4334 -1206 0
4335 -1207 0
4337 -1209 0
4339 -1211 0
4341 -1213 0
4343 -1215 0
4345 -1217 0
4347 -1219 0
c (SATLiteral(12165) \/ SATLiteral(12166))
12165 12166 0
c (max_left_00001_00002_00005<=max_left_00001_00002_00006)
1206 -1221 0
1207 -1222 0
1209 -1224 0
1211 -1226 0
1213 -1228 0
1215 -1230 0
1217 -1232 0
1219 -1234 0
c (variant_fields_00001_00002_00006<=max_left_00001_00002_00006)
4349 -1221 0
4350 -1222 0
4352 -1224 0
4354 -1226 0
4356 -1228 0
4358 -1230 0
4360 -1232 0
4362 -1234 0
c (SATLiteral(12167) \/ SATLiteral(12168))
12167 12168 0
c (max_left_00001_00002_00006<=max_left_00001_00002_00007)
1221 -1236 0
1222 -1237 0
1224 -1239 0
1226 -1241 0
1228 -1243 0
1230 -1245 0
1232 -1247 0
1234 -1249 0
c (variant_fields_00001_00002_00007<=max_left_00001_00002_00007)
4364 -1236 0
4365 -1237 0
4367 -1239 0
4369 -1241 0
4371 -1243 0
4373 -1245 0
4375 -1247 0
4377 -1249 0
c (SATLiteral(12169) \/ SATLiteral(12170))
12169 12170 0
c (max_left_00001_00002_00007<=max_left_00001_00002_00008)
1247 -1251 0
1249 -1252 0
c (SATLiteral(12171) \/ SATLiteral(12172))
12171 12172 0
c (max_left_00001_00002_00008<=max_left_00001_00002_00009)
1251 -1254 0
1252 -1255 0
c (variant_fields_00001_00002_00009<=max_left_00001_00002_00009)
4391 -1254 0
4393 -1255 0
c (SATLiteral(12173) \/ SATLiteral(12174))
12173 12174 0
c (variant_fields_00001_00003_00001<=max_left_00001_00003_00001)
4395 -1258 0
4396 -1259 0
4398 -1261 0
4400 -1263 0
4402 -1265 0
4404 -1267 0
4406 -1269 0
4408 -1271 0
c (variant_fields_00001_00003_00001=max_left_00001_00003_00001)
-4395 1258 0
-4397 1260 0
-4399 1262 0
-4401 1264 0
-4403 1266 0
-4405 1268 0
-4407 1270 0
-4409 1272 0
4408 -1271 0
-1258 4395 0
-1260 4397 0
-1262 4399 0
-1264 4401 0
-1266 4403 0
-1268 4405 0
-1270 4407 0
-1272 4409 0
1271 -4408 0
c (max_left_00001_00003_00001<=max_left_00001_00003_00002)
1258 -1273 0
1259 -1274 0
1261 -1276 0
1263 -1278 0
1265 -1280 0
1267 -1282 0
1269 -1284 0
1271 -1286 0
c (variant_fields_00001_00003_00002<=max_left_00001_00003_00002)
4410 -1273 0
4411 -1274 0
4413 -1276 0
4415 -1278 0
4417 -1280 0
4419 -1282 0
4421 -1284 0
4423 -1286 0
c (SATLiteral(12175) \/ SATLiteral(12176))
12175 12176 0
c (max_left_00001_00003_00002<=max_left_00001_00003_00003)
1273 -1288 0
1274 -1289 0
1276 -1291 0
1278 -1293 0
1280 -1295 0
1282 -1297 0
1284 -1299 0
1286 -1301 0
c (variant_fields_00001_00003_00003<=max_left_00001_00003_00003)
4425 -1288 0
4426 -1289 0
4428 -1291 0
4430 -1293 0
4432 -1295 0
4434 -1297 0
4436 -1299 0
4438 -1301 0
c (SATLiteral(12177) \/ SATLiteral(12178))
12177 12178 0
c (max_left_00001_00003_00003<=max_left_00001_00003_00004)
1288 -1303 0
1289 -1304 0
1291 -1306 0
1293 -1308 0
1295 -1310 0
1297 -1312 0
1299 -1314 0
1301 -1316 0
c (variant_fields_00001_00003_00004<=max_left_00001_00003_00004)
4440 -1303 0
4441 -1304 0
4443 -1306 0
4445 -1308 0
4447 -1310 0
4449 -1312 0
4451 -1314 0
4453 -1316 0
c (SATLiteral(12179) \/ SATLiteral(12180))
12179 12180 0
c (max_left_00001_00003_00004<=max_left_00001_00003_00005)
1303 -1318 0
1304 -1319 0
1306 -1321 0
1308 -1323 0
1310 -1325 0
1312 -1327 0
1314 -1329 0
1316 -1331 0
c (variant_fields_00001_00003_00005<=max_left_00001_00003_00005)
4455 -1318 0
4456 -1319 0
4458 -1321 0
4460 -1323 0
4462 -1325 0
4464 -1327 0
4466 -1329 0
4468 -1331 0
c (SATLiteral(12181) \/ SATLiteral(12182))
12181 12182 0
c (max_left_00001_00003_00005<=max_left_00001_00003_00006)
1327 -1333 0
1329 -1334 0
1331 -1336 0
c (SATLiteral(12183) \/ SATLiteral(12184))
12183 12184 0
c (max_left_00001_00003_00006<=max_left_00001_00003_00007)
1333 -1338 0
1334 -1339 0
1336 -1341 0
c (variant_fields_00001_00003_00007<=max_left_00001_00003_00007)
4480 -1338 0
4482 -1339 0
4484 -1341 0
c (SATLiteral(12185) \/ SATLiteral(12186))
12185 12186 0
c (max_left_00001_00003_00007<=max_left_00001_00003_00008)
1338 -1343 0
1339 -1344 0
1341 -1346 0
c (variant_fields_00001_00003_00008<=max_left_00001_00003_00008)
4495 -1343 0
4497 -1344 0
4499 -1346 0
c (SATLiteral(12187) \/ SATLiteral(12188))
12187 12188 0
c (max_left_00001_00003_00008<=max_left_00001_00003_00009)
1343 -1348 0
1344 -1349 0
1346 -1351 0
c (variant_fields_00001_00003_00009<=max_left_00001_00003_00009)
4510 -1348 0
4512 -1349 0
4514 -1351 0
c (SATLiteral(12189) \/ SATLiteral(12190))
12189 12190 0
c (variant_fields_00001_00004_00001<=max_left_00001_00004_00001)
4516 -1354 0
4517 -1355 0
4519 -1357 0
4521 -1359 0
4523 -1361 0
4525 -1363 0
4527 -1365 0
4529 -1367 0
c (variant_fields_00001_00004_00001=max_left_00001_00004_00001)
-4516 1354 0
-4518 1356 0
-4520 1358 0
-4522 1360 0
-4524 1362 0
-4526 1364 0
-4528 1366 0
-4530 1368 0
4529 -1367 0
-1354 4516 0
-1356 4518 0
-1358 4520 0
-1360 4522 0
-1362 4524 0
-1364 4526 0
-1366 4528 0
-1368 4530 0
1367 -4529 0
c (max_left_00001_00004_00001<=max_left_00001_00004_00002)
1354 -1369 0
1355 -1370 0
1357 -1372 0
1359 -1374 0
1361 -1376 0
1363 -1378 0
1365 -1380 0
1367 -1382 0
c (variant_fields_00001_00004_00002<=max_left_00001_00004_00002)
4531 -1369 0
4532 -1370 0
4534 -1372 0
4536 -1374 0
4538 -1376 0
4540 -1378 0
4542 -1380 0
4544 -1382 0
c (SATLiteral(12191) \/ SATLiteral(12192))
12191 12192 0
c (max_left_00001_00004_00002<=max_left_00001_00004_00003)
1369 -1384 0
1370 -1385 0
1372 -1387 0
1374 -1389 0
1376 -1391 0
1378 -1393 0
1380 -1395 0
1382 -1397 0
c (SATLiteral(12193) \/ SATLiteral(12194))
12193 12194 0
c (max_left_00001_00004_00003<=max_left_00001_00004_00004)
1384 -1399 0
1385 -1400 0
1387 -1402 0
1389 -1404 0
1391 -1406 0
1393 -1408 0
1395 -1410 0
1397 -1412 0
c (variant_fields_00001_00004_00004<=max_left_00001_00004_00004)
4547 -1399 0
4548 -1400 0
4550 -1402 0
4552 -1404 0
4554 -1406 0
4556 -1408 0
4558 -1410 0
4560 -1412 0
c (SATLiteral(12195) \/ SATLiteral(12196))
12195 12196 0
c (max_left_00001_00004_00004<=max_left_00001_00004_00005)
1399 -1414 0
1400 -1415 0
1402 -1417 0
1404 -1419 0
1406 -1421 0
1408 -1423 0
1410 -1425 0
1412 -1427 0
c (variant_fields_00001_00004_00005<=max_left_00001_00004_00005)
4562 -1414 0
4563 -1415 0
4565 -1417 0
4567 -1419 0
4569 -1421 0
4571 -1423 0
4573 -1425 0
4575 -1427 0
c (SATLiteral(12197) \/ SATLiteral(12198))
12197 12198 0
c (max_left_00001_00004_00005<=max_left_00001_00004_00006)
1414 -1429 0
1415 -1430 0
1417 -1432 0
1419 -1434 0
1421 -1436 0
1423 -1438 0
1425 -1440 0
1427 -1442 0
c (variant_fields_00001_00004_00006<=max_left_00001_00004_00006)
4577 -1429 0
4578 -1430 0
4580 -1432 0
4582 -1434 0
4584 -1436 0
4586 -1438 0
4588 -1440 0
4590 -1442 0
c (SATLiteral(12199) \/ SATLiteral(12200))
12199 12200 0
c (max_left_00001_00004_00006<=max_left_00001_00004_00007)
1429 -1444 0
1430 -1445 0
1432 -1447 0
1434 -1449 0
1436 -1451 0
1438 -1453 0
1440 -1455 0
1442 -1457 0
c (variant_fields_00001_00004_00007<=max_left_00001_00004_00007)
4592 -1444 0
4593 -1445 0
4595 -1447 0
4597 -1449 0
4599 -1451 0
4601 -1453 0
4603 -1455 0
4605 -1457 0
c (SATLiteral(12201) \/ SATLiteral(12202))
12201 12202 0
c (max_left_00001_00004_00007<=max_left_00001_00004_00008)
1447 -1459 0
1449 -1460 0
1451 -1462 0
1453 -1464 0
1455 -1466 0
1457 -1468 0
c (SATLiteral(12203) \/ SATLiteral(12204))
12203 12204 0
c (max_left_00001_00004_00008<=max_left_00001_00004_00009)
1459 -1470 0
1460 -1471 0
1462 -1473 0
1464 -1475 0
1466 -1477 0
1468 -1479 0
c (variant_fields_00001_00004_00009<=max_left_00001_00004_00009)
4611 -1470 0
4613 -1471 0
4615 -1473 0
4617 -1475 0
4619 -1477 0
4621 -1479 0
c (SATLiteral(12205) \/ SATLiteral(12206))
12205 12206 0
c (variant_fields_00001_00005_00001<=max_left_00001_00005_00001)
4623 -1482 0
4624 -1483 0
4626 -1485 0
4628 -1487 0
4630 -1489 0
4632 -1491 0
4634 -1493 0
4636 -1495 0
c (variant_fields_00001_00005_00001=max_left_00001_00005_00001)
-4623 1482 0
-4625 1484 0
-4627 1486 0
-4629 1488 0
-4631 1490 0
-4633 1492 0
-4635 1494 0
-4637 1496 0
4636 -1495 0
-1482 4623 0
-1484 4625 0
-1486 4627 0
-1488 4629 0
-1490 4631 0
-1492 4633 0
-1494 4635 0
-1496 4637 0
1495 -4636 0
c (max_left_00001_00005_00001<=max_left_00001_00005_00002)
1482 -1497 0
1483 -1498 0
1485 -1500 0
1487 -1502 0
1489 -1504 0
1491 -1506 0
1493 -1508 0
1495 -1510 0
c (variant_fields_00001_00005_00002<=max_left_00001_00005_00002)
4638 -1497 0
4639 -1498 0
4641 -1500 0
4643 -1502 0
4645 -1504 0
4647 -1506 0
4649 -1508 0
4651 -1510 0
c (SATLiteral(12207) \/ SATLiteral(12208))
12207 12208 0
c (max_left_00001_00005_00002<=max_left_00001_00005_00003)
1497 -1512 0
1498 -1513 0
1500 -1515 0
1502 -1517 0
1504 -1519 0
1506 -1521 0
1508 -1523 0
1510 -1525 0
c (variant_fields_00001_00005_00003<=max_left_00001_00005_00003)
4653 -1512 0
4654 -1513 0
4656 -1515 0
4658 -1517 0
4660 -1519 0
4662 -1521 0
4664 -1523 0
4666 -1525 0
c (SATLiteral(12209) \/ SATLiteral(12210))
12209 12210 0
c (max_left_00001_00005_00003<=max_left_00001_00005_00004)
1512 -1527 0
1513 -1528 0
1515 -1530 0
1517 -1532 0
1519 -1534 0
1521 -1536 0
1523 -1538 0
1525 -1540 0
c (SATLiteral(12211) \/ SATLiteral(12212))
12211 12212 0
c (max_left_00001_00005_00004<=max_left_00001_00005_00005)
1527 -1542 0
1528 -1543 0
1530 -1545 0
1532 -1547 0
1534 -1549 0
1536 -1551 0
1538 -1553 0
1540 -1555 0
c (variant_fields_00001_00005_00005<=max_left_00001_00005_00005)
4669 -1542 0
4670 -1543 0
4672 -1545 0
4674 -1547 0
4676 -1549 0
4678 -1551 0
4680 -1553 0
4682 -1555 0
c (SATLiteral(12213) \/ SATLiteral(12214))
12213 12214 0
c (max_left_00001_00005_00005<=max_left_00001_00005_00006)
1542 -1557 0
1543 -1558 0
1545 -1560 0
1547 -1562 0
1549 -1564 0
1551 -1566 0
1553 -1568 0
1555 -1570 0
c (variant_fields_00001_00005_00006<=max_left_00001_00005_00006)
4684 -1557 0
4685 -1558 0
4687 -1560 0
4689 -1562 0
4691 -1564 0
4693 -1566 0
4695 -1568 0
4697 -1570 0
c (SATLiteral(12215) \/ SATLiteral(12216))
12215 12216 0
c (max_left_00001_00005_00006<=max_left_00001_00005_00007)
1568 -1572 0
1570 -1573 0
c (SATLiteral(12217) \/ SATLiteral(12218))
12217 12218 0
c (max_left_00001_00005_00007<=max_left_00001_00005_00008)
1572 -1575 0
1573 -1576 0
c (variant_fields_00001_00005_00008<=max_left_00001_00005_00008)
4711 -1575 0
4713 -1576 0
c (SATLiteral(12219) \/ SATLiteral(12220))
12219 12220 0
c (max_left_00001_00005_00008<=max_left_00001_00005_00009)
1575 -1578 0
1576 -1579 0
c (max_left_00001_00005_00008=max_left_00001_00005_00009)
-1575 1578 0
-1577 1580 0
1576 -1579 0
-1578 1575 0
-1580 1577 0
1579 -1576 0
c (variant_fields_00001_00006_00001<=max_left_00001_00006_00001)
4716 -1582 0
4717 -1583 0
4719 -1585 0
4721 -1587 0
4723 -1589 0
4725 -1591 0
4727 -1593 0
4729 -1595 0
c (variant_fields_00001_00006_00001=max_left_00001_00006_00001)
-4716 1582 0
-4718 1584 0
-4720 1586 0
-4722 1588 0
-4724 1590 0
-4726 1592 0
-4728 1594 0
-4730 1596 0
4729 -1595 0
-1582 4716 0
-1584 4718 0
-1586 4720 0
-1588 4722 0
-1590 4724 0
-1592 4726 0
-1594 4728 0
-1596 4730 0
1595 -4729 0
c (max_left_00001_00006_00001<=max_left_00001_00006_00002)
1595 1597 0
c (SATLiteral(12221) \/ SATLiteral(12222))
12221 12222 0
c (max_left_00001_00006_00002<=max_left_00001_00006_00003)
-1597 1598 0
c (variant_fields_00001_00006_00003<=max_left_00001_00006_00003)
4745 1598 0
c (SATLiteral(12223) \/ SATLiteral(12224))
12223 12224 0
c (max_left_00001_00006_00003<=max_left_00001_00006_00004)
-1598 1599 0
c (variant_fields_00001_00006_00004<=max_left_00001_00006_00004)
4760 1599 0
c (SATLiteral(12225) \/ SATLiteral(12226))
12225 12226 0
c (max_left_00001_00006_00004<=max_left_00001_00006_00005)
-1599 1600 0
c (variant_fields_00001_00006_00005<=max_left_00001_00006_00005)
4775 1600 0
c (SATLiteral(12227) \/ SATLiteral(12228))
12227 12228 0
c (max_left_00001_00006_00005<=max_left_00001_00006_00006)
-1600 1601 0
c (max_left_00001_00006_00005=max_left_00001_00006_00006)
1600 -1601 0
-1600 1601 0
1601 -1600 0
-1601 1600 0
c (max_left_00001_00006_00006<=max_left_00001_00006_00007)
-1601 1602 0
c (variant_fields_00001_00006_00007<=max_left_00001_00006_00007)
4791 1602 0
c (SATLiteral(12229) \/ SATLiteral(12230))
12229 12230 0
c (max_left_00001_00006_00007<=max_left_00001_00006_00008)
-1602 1603 0
c (variant_fields_00001_00006_00008<=max_left_00001_00006_00008)
4806 1603 0
c (SATLiteral(12231) \/ SATLiteral(12232))
12231 12232 0
c (max_left_00001_00006_00008<=max_left_00001_00006_00009)
-1603 1604 0
c (variant_fields_00001_00006_00009<=max_left_00001_00006_00009)
4821 1604 0
c (SATLiteral(12233) \/ SATLiteral(12234))
12233 12234 0
c (variant_fields_00001_00007_00001<=max_left_00001_00007_00001)
4823 -1606 0
4824 -1607 0
4826 -1609 0
4828 -1611 0
4830 -1613 0
4832 -1615 0
4834 -1617 0
4836 -1619 0
c (variant_fields_00001_00007_00001=max_left_00001_00007_00001)
-4823 1606 0
-4825 1608 0
-4827 1610 0
-4829 1612 0
-4831 1614 0
-4833 1616 0
-4835 1618 0
-4837 1620 0
4836 -1619 0
-1606 4823 0
-1608 4825 0
-1610 4827 0
-1612 4829 0
-1614 4831 0
-1616 4833 0
-1618 4835 0
-1620 4837 0
1619 -4836 0
c (max_left_00001_00007_00001<=max_left_00001_00007_00002)
1606 -1621 0
1607 -1622 0
1609 -1624 0
1611 -1626 0
1613 -1628 0
1615 -1630 0
1617 -1632 0
1619 -1634 0
c (variant_fields_00001_00007_00002<=max_left_00001_00007_00002)
4838 -1621 0
4839 -1622 0
4841 -1624 0
4843 -1626 0
4845 -1628 0
4847 -1630 0
4849 -1632 0
4851 -1634 0
c (SATLiteral(12235) \/ SATLiteral(12236))
12235 12236 0
c (max_left_00001_00007_00002<=max_left_00001_00007_00003)
1621 -1636 0
1622 -1637 0
1624 -1639 0
1626 -1641 0
1628 -1643 0
1630 -1645 0
1632 -1647 0
1634 -1649 0
c (variant_fields_00001_00007_00003<=max_left_00001_00007_00003)
4853 -1636 0
4854 -1637 0
4856 -1639 0
4858 -1641 0
4860 -1643 0
4862 -1645 0
4864 -1647 0
4866 -1649 0
c (SATLiteral(12237) \/ SATLiteral(12238))
12237 12238 0
c (max_left_00001_00007_00003<=max_left_00001_00007_00004)
1639 -1651 0
1641 -1652 0
1643 -1654 0
1645 -1656 0
1647 -1658 0
1649 -1660 0
c (SATLiteral(12239) \/ SATLiteral(12240))
12239 12240 0
c (max_left_00001_00007_00004<=max_left_00001_00007_00005)
1651 -1662 0
1652 -1663 0
1654 -1665 0
1656 -1667 0
1658 -1669 0
1660 -1671 0
c (variant_fields_00001_00007_00005<=max_left_00001_00007_00005)
4872 -1662 0
4874 -1663 0
4876 -1665 0
4878 -1667 0
4880 -1669 0
4882 -1671 0
c (SATLiteral(12241) \/ SATLiteral(12242))
12241 12242 0
c (max_left_00001_00007_00005<=max_left_00001_00007_00006)
1662 -1673 0
1663 -1674 0
1665 -1676 0
1667 -1678 0
1669 -1680 0
1671 -1682 0
c (variant_fields_00001_00007_00006<=max_left_00001_00007_00006)
4887 -1673 0
4889 -1674 0
4891 -1676 0
4893 -1678 0
4895 -1680 0
4897 -1682 0
c (SATLiteral(12243) \/ SATLiteral(12244))
12243 12244 0
c (max_left_00001_00007_00006<=max_left_00001_00007_00007)
1678 -1684 0
1680 -1685 0
1682 -1687 0
c (SATLiteral(12245) \/ SATLiteral(12246))
12245 12246 0
c (max_left_00001_00007_00007<=max_left_00001_00007_00008)
1684 -1689 0
1685 -1690 0
1687 -1692 0
c (variant_fields_00001_00007_00008<=max_left_00001_00007_00008)
4909 -1689 0
4911 -1690 0
4913 -1692 0
c (SATLiteral(12247) \/ SATLiteral(12248))
12247 12248 0
c (max_left_00001_00007_00008<=max_left_00001_00007_00009)
1690 -1694 0
1692 -1695 0
c (SATLiteral(12249) \/ SATLiteral(12250))
12249 12250 0
c (variant_fields_00001_00008_00001<=max_left_00001_00008_00001)
4916 -1698 0
4917 -1699 0
4919 -1701 0
4921 -1703 0
4923 -1705 0
4925 -1707 0
4927 -1709 0
4929 -1711 0
c (variant_fields_00001_00008_00001=max_left_00001_00008_00001)
-4916 1698 0
-4918 1700 0
-4920 1702 0
-4922 1704 0
-4924 1706 0
-4926 1708 0
-4928 1710 0
-4930 1712 0
4929 -1711 0
-1698 4916 0
-1700 4918 0
-1702 4920 0
-1704 4922 0
-1706 4924 0
-1708 4926 0
-1710 4928 0
-1712 4930 0
1711 -4929 0
c (max_left_00001_00008_00001<=max_left_00001_00008_00002)
1698 -1713 0
1699 -1714 0
1701 -1716 0
1703 -1718 0
1705 -1720 0
1707 -1722 0
1709 -1724 0
1711 -1726 0
c (variant_fields_00001_00008_00002<=max_left_00001_00008_00002)
4931 -1713 0
4932 -1714 0
4934 -1716 0
4936 -1718 0
4938 -1720 0
4940 -1722 0
4942 -1724 0
4944 -1726 0
c (SATLiteral(12251) \/ SATLiteral(12252))
12251 12252 0
c (max_left_00001_00008_00002<=max_left_00001_00008_00003)
1726 1728 0
c (SATLiteral(12253) \/ SATLiteral(12254))
12253 12254 0
c (max_left_00001_00008_00003<=max_left_00001_00008_00004)
-1728 1729 0
c (variant_fields_00001_00008_00004<=max_left_00001_00008_00004)
4960 1729 0
c (SATLiteral(12255) \/ SATLiteral(12256))
12255 12256 0
c (max_left_00001_00008_00004<=max_left_00001_00008_00005)
-1729 1730 0
c (max_left_00001_00008_00004=max_left_00001_00008_00005)
1729 -1730 0
-1729 1730 0
1730 -1729 0
-1730 1729 0
c (max_left_00001_00008_00005<=max_left_00001_00008_00006)
-1730 1731 0
c (variant_fields_00001_00008_00006<=max_left_00001_00008_00006)
4976 1731 0
c (SATLiteral(12257) \/ SATLiteral(12258))
12257 12258 0
c (max_left_00001_00008_00006<=max_left_00001_00008_00007)
-1731 1732 0
c (variant_fields_00001_00008_00007<=max_left_00001_00008_00007)
4991 1732 0
c (SATLiteral(12259) \/ SATLiteral(12260))
12259 12260 0
c (max_left_00001_00008_00007<=max_left_00001_00008_00008)
-1732 1733 0
c (variant_fields_00001_00008_00008<=max_left_00001_00008_00008)
5006 1733 0
c (SATLiteral(12261) \/ SATLiteral(12262))
12261 12262 0
c (max_left_00001_00008_00008<=max_left_00001_00008_00009)
-1733 1734 0
c (variant_fields_00001_00008_00009<=max_left_00001_00008_00009)
5021 1734 0
c (SATLiteral(12263) \/ SATLiteral(12264))
12263 12264 0
c (variant_fields_00001_00009_00001<=max_left_00001_00009_00001)
5023 -1736 0
5024 -1737 0
5026 -1739 0
5028 -1741 0
5030 -1743 0
5032 -1745 0
5034 -1747 0
5036 -1749 0
c (variant_fields_00001_00009_00001=max_left_00001_00009_00001)
-5023 1736 0
-5025 1738 0
-5027 1740 0
-5029 1742 0
-5031 1744 0
-5033 1746 0
-5035 1748 0
-5037 1750 0
5036 -1749 0
-1736 5023 0
-1738 5025 0
-1740 5027 0
-1742 5029 0
-1744 5031 0
-1746 5033 0
-1748 5035 0
-1750 5037 0
1749 -5036 0
c (max_left_00001_00009_00001<=max_left_00001_00009_00002)
1736 -1751 0
1737 -1752 0
1739 -1754 0
1741 -1756 0
1743 -1758 0
1745 -1760 0
1747 -1762 0
1749 -1764 0
c (variant_fields_00001_00009_00002<=max_left_00001_00009_00002)
5038 -1751 0
5039 -1752 0
5041 -1754 0
5043 -1756 0
5045 -1758 0
5047 -1760 0
5049 -1762 0
5051 -1764 0
c (SATLiteral(12265) \/ SATLiteral(12266))
12265 12266 0
c (max_left_00001_00009_00002<=max_left_00001_00009_00003)
1751 -1766 0
1752 -1767 0
1754 -1769 0
1756 -1771 0
1758 -1773 0
1760 -1775 0
1762 -1777 0
1764 -1779 0
c (variant_fields_00001_00009_00003<=max_left_00001_00009_00003)
5053 -1766 0
5054 -1767 0
5056 -1769 0
5058 -1771 0
5060 -1773 0
5062 -1775 0
5064 -1777 0
5066 -1779 0
c (SATLiteral(12267) \/ SATLiteral(12268))
12267 12268 0
c (max_left_00001_00009_00003<=max_left_00001_00009_00004)
1766 -1781 0
1767 -1782 0
1769 -1784 0
1771 -1786 0
1773 -1788 0
1775 -1790 0
1777 -1792 0
1779 -1794 0
c (variant_fields_00001_00009_00004<=max_left_00001_00009_00004)
5068 -1781 0
5069 -1782 0
5071 -1784 0
5073 -1786 0
5075 -1788 0
5077 -1790 0
5079 -1792 0
5081 -1794 0
c (SATLiteral(12269) \/ SATLiteral(12270))
12269 12270 0
c (max_left_00001_00009_00004<=max_left_00001_00009_00005)
1781 -1796 0
1782 -1797 0
1784 -1799 0
1786 -1801 0
1788 -1803 0
1790 -1805 0
1792 -1807 0
1794 -1809 0
c (SATLiteral(12271) \/ SATLiteral(12272))
12271 12272 0
c (max_left_00001_00009_00005<=max_left_00001_00009_00006)
1796 -1811 0
1797 -1812 0
1799 -1814 0
1801 -1816 0
1803 -1818 0
1805 -1820 0
1807 -1822 0
1809 -1824 0
c (variant_fields_00001_00009_00006<=max_left_00001_00009_00006)
5084 -1811 0
5085 -1812 0
5087 -1814 0
5089 -1816 0
5091 -1818 0
5093 -1820 0
5095 -1822 0
5097 -1824 0
c (SATLiteral(12273) \/ SATLiteral(12274))
12273 12274 0
c (max_left_00001_00009_00006<=max_left_00001_00009_00007)
1824 1826 0
c (SATLiteral(12275) \/ SATLiteral(12276))
12275 12276 0
c (max_left_00001_00009_00007<=max_left_00001_00009_00008)
-1826 1827 0
c (variant_fields_00001_00009_00008<=max_left_00001_00009_00008)
5113 1827 0
c (SATLiteral(12277) \/ SATLiteral(12278))
12277 12278 0
c (max_left_00001_00009_00008<=max_left_00001_00009_00009)
-1827 1828 0
c (variant_fields_00001_00009_00009<=max_left_00001_00009_00009)
5128 1828 0
c (SATLiteral(12279) \/ SATLiteral(12280))
12279 12280 0
c (variant_fields_00002_00001_00001<=max_left_00002_00001_00001)
5130 -1830 0
5131 -1831 0
5133 -1833 0
5135 -1835 0
5137 -1837 0
5139 -1839 0
5141 -1841 0
5143 -1843 0
c (variant_fields_00002_00001_00001=max_left_00002_00001_00001)
-5130 1830 0
-5132 1832 0
-5134 1834 0
-5136 1836 0
-5138 1838 0
-5140 1840 0
-5142 1842 0
-5144 1844 0
5143 -1843 0
-1830 5130 0
-1832 5132 0
-1834 5134 0
-1836 5136 0
-1838 5138 0
-1840 5140 0
-1842 5142 0
-1844 5144 0
1843 -5143 0
c (max_left_00002_00001_00001<=max_left_00002_00001_00002)
1830 -1845 0
1831 -1846 0
1833 -1848 0
1835 -1850 0
1837 -1852 0
1839 -1854 0
1841 -1856 0
1843 -1858 0
c (variant_fields_00002_00001_00002<=max_left_00002_00001_00002)
5145 -1845 0
5146 -1846 0
5148 -1848 0
5150 -1850 0
5152 -1852 0
5154 -1854 0
5156 -1856 0
5158 -1858 0
c (SATLiteral(12281) \/ SATLiteral(12282))
12281 12282 0
c (max_left_00002_00001_00002<=max_left_00002_00001_00003)
1845 -1860 0
1846 -1861 0
1848 -1863 0
1850 -1865 0
1852 -1867 0
1854 -1869 0
1856 -1871 0
1858 -1873 0
c (variant_fields_00002_00001_00003<=max_left_00002_00001_00003)
5160 -1860 0
5161 -1861 0
5163 -1863 0
5165 -1865 0
5167 -1867 0
5169 -1869 0
5171 -1871 0
5173 -1873 0
c (SATLiteral(12283) \/ SATLiteral(12284))
12283 12284 0
c (max_left_00002_00001_00003<=max_left_00002_00001_00004)
1860 -1875 0
1861 -1876 0
1863 -1878 0
1865 -1880 0
1867 -1882 0
1869 -1884 0
1871 -1886 0
1873 -1888 0
c (variant_fields_00002_00001_00004<=max_left_00002_00001_00004)
5175 -1875 0
5176 -1876 0
5178 -1878 0
5180 -1880 0
5182 -1882 0
5184 -1884 0
5186 -1886 0
5188 -1888 0
c (SATLiteral(12285) \/ SATLiteral(12286))
12285 12286 0
c (max_left_00002_00001_00004<=max_left_00002_00001_00005)
1875 -1890 0
1876 -1891 0
1878 -1893 0
1880 -1895 0
1882 -1897 0
1884 -1899 0
1886 -1901 0
1888 -1903 0
c (variant_fields_00002_00001_00005<=max_left_00002_00001_00005)
5190 -1890 0
5191 -1891 0
5193 -1893 0
5195 -1895 0
5197 -1897 0
5199 -1899 0
5201 -1901 0
5203 -1903 0
c (SATLiteral(12287) \/ SATLiteral(12288))
12287 12288 0
c (max_left_00002_00001_00005<=max_left_00002_00001_00006)
1890 -1905 0
1891 -1906 0
1893 -1908 0
1895 -1910 0
1897 -1912 0
1899 -1914 0
1901 -1916 0
1903 -1918 0
c (variant_fields_00002_00001_00006<=max_left_00002_00001_00006)
5205 -1905 0
5206 -1906 0
5208 -1908 0
5210 -1910 0
5212 -1912 0
5214 -1914 0
5216 -1916 0
5218 -1918 0
c (SATLiteral(12289) \/ SATLiteral(12290))
12289 12290 0
c (max_left_00002_00001_00006<=max_left_00002_00001_00007)
1905 -1920 0
1906 -1921 0
1908 -1923 0
1910 -1925 0
1912 -1927 0
1914 -1929 0
1916 -1931 0
1918 -1933 0
c (variant_fields_00002_00001_00007<=max_left_00002_00001_00007)
5220 -1920 0
5221 -1921 0
5223 -1923 0
5225 -1925 0
5227 -1927 0
5229 -1929 0
5231 -1931 0
5233 -1933 0
c (SATLiteral(12291) \/ SATLiteral(12292))
12291 12292 0
c (max_left_00002_00001_00007<=max_left_00002_00001_00008)
1920 -1935 0
1921 -1936 0
1923 -1938 0
1925 -1940 0
1927 -1942 0
1929 -1944 0
1931 -1946 0
1933 -1948 0
c (variant_fields_00002_00001_00008<=max_left_00002_00001_00008)
5235 -1935 0
5236 -1936 0
5238 -1938 0
5240 -1940 0
5242 -1942 0
5244 -1944 0
5246 -1946 0
5248 -1948 0
c (SATLiteral(12293) \/ SATLiteral(12294))
12293 12294 0
c (max_left_00002_00001_00008<=max_left_00002_00001_00009)
1935 -1950 0
1936 -1951 0
1938 -1953 0
1940 -1955 0
1942 -1957 0
1944 -1959 0
1946 -1961 0
1948 -1963 0
c (variant_fields_00002_00001_00009<=max_left_00002_00001_00009)
5250 -1950 0
5251 -1951 0
5253 -1953 0
5255 -1955 0
5257 -1957 0
5259 -1959 0
5261 -1961 0
5263 -1963 0
c (SATLiteral(12295) \/ SATLiteral(12296))
12295 12296 0
c (variant_fields_00002_00002_00001<=max_left_00002_00002_00001)
5265 -1966 0
5266 -1967 0
5268 -1969 0
5270 -1971 0
5272 -1973 0
5274 -1975 0
5276 -1977 0
5278 -1979 0
c (variant_fields_00002_00002_00001=max_left_00002_00002_00001)
-5265 1966 0
-5267 1968 0
-5269 1970 0
-5271 1972 0
-5273 1974 0
-5275 1976 0
-5277 1978 0
-5279 1980 0
5278 -1979 0
-1966 5265 0
-1968 5267 0
-1970 5269 0
-1972 5271 0
-1974 5273 0
-1976 5275 0
-1978 5277 0
-1980 5279 0
1979 -5278 0
c (max_left_00002_00002_00001<=max_left_00002_00002_00002)
1966 -1981 0
1967 -1982 0
1969 -1984 0
1971 -1986 0
1973 -1988 0
1975 -1990 0
1977 -1992 0
1979 -1994 0
c (variant_fields_00002_00002_00002<=max_left_00002_00002_00002)
5280 -1981 0
5281 -1982 0
5283 -1984 0
5285 -1986 0
5287 -1988 0
5289 -1990 0
5291 -1992 0
5293 -1994 0
c (SATLiteral(12297) \/ SATLiteral(12298))
12297 12298 0
c (max_left_00002_00002_00002<=max_left_00002_00002_00003)
1981 -1996 0
1982 -1997 0
1984 -1999 0
1986 -2001 0
1988 -2003 0
1990 -2005 0
1992 -2007 0
1994 -2009 0
c (variant_fields_00002_00002_00003<=max_left_00002_00002_00003)
5295 -1996 0
5296 -1997 0
5298 -1999 0
5300 -2001 0
5302 -2003 0
5304 -2005 0
5306 -2007 0
5308 -2009 0
c (SATLiteral(12299) \/ SATLiteral(12300))
12299 12300 0
c (max_left_00002_00002_00003<=max_left_00002_00002_00004)
1996 -2011 0
1997 -2012 0
1999 -2014 0
2001 -2016 0
2003 -2018 0
2005 -2020 0
2007 -2022 0
2009 -2024 0
c (variant_fields_00002_00002_00004<=max_left_00002_00002_00004)
5310 -2011 0
5311 -2012 0
5313 -2014 0
5315 -2016 0
5317 -2018 0
5319 -2020 0
5321 -2022 0
5323 -2024 0
c (SATLiteral(12301) \/ SATLiteral(12302))
12301 12302 0
c (max_left_00002_00002_00004<=max_left_00002_00002_00005)
2011 -2026 0
2012 -2027 0
2014 -2029 0
2016 -2031 0
2018 -2033 0
2020 -2035 0
2022 -2037 0
2024 -2039 0
c (variant_fields_00002_00002_00005<=max_left_00002_00002_00005)
5325 -2026 0
5326 -2027 0
5328 -2029 0
5330 -2031 0
5332 -2033 0
5334 -2035 0
5336 -2037 0
5338 -2039 0
c (SATLiteral(12303) \/ SATLiteral(12304))
12303 12304 0
c (max_left_00002_00002_00005<=max_left_00002_00002_00006)
2039 2041 0
c (SATLiteral(12305) \/ SATLiteral(12306))
12305 12306 0
c (max_left_00002_00002_00006<=max_left_00002_00002_00007)
-2041 2042 0
c (variant_fields_00002_00002_00007<=max_left_00002_00002_00007)
5354 2042 0
c (SATLiteral(12307) \/ SATLiteral(12308))
12307 12308 0
c (max_left_00002_00002_00007<=max_left_00002_00002_00008)
-2042 2043 0
c (variant_fields_00002_00002_00008<=max_left_00002_00002_00008)
5369 2043 0
c (SATLiteral(12309) \/ SATLiteral(12310))
12309 12310 0
c (max_left_00002_00002_00008<=max_left_00002_00002_00009)
-2043 2044 0
c (variant_fields_00002_00002_00009<=max_left_00002_00002_00009)
5384 2044 0
c (SATLiteral(12311) \/ SATLiteral(12312))
12311 12312 0
c (variant_fields_00002_00003_00001<=max_left_00002_00003_00001)
5386 -2046 0
5387 -2047 0
5389 -2049 0
5391 -2051 0
5393 -2053 0
5395 -2055 0
5397 -2057 0
5399 -2059 0
c (variant_fields_00002_00003_00001=max_left_00002_00003_00001)
-5386 2046 0
-5388 2048 0
-5390 2050 0
-5392 2052 0
-5394 2054 0
-5396 2056 0
-5398 2058 0
-5400 2060 0
5399 -2059 0
-2046 5386 0
-2048 5388 0
-2050 5390 0
-2052 5392 0
-2054 5394 0
-2056 5396 0
-2058 5398 0
-2060 5400 0
2059 -5399 0
c (max_left_00002_00003_00001<=max_left_00002_00003_00002)
2046 -2061 0
2047 -2062 0
2049 -2064 0
2051 -2066 0
2053 -2068 0
2055 -2070 0
2057 -2072 0
2059 -2074 0
c (variant_fields_00002_00003_00002<=max_left_00002_00003_00002)
5401 -2061 0
5402 -2062 0
5404 -2064 0
5406 -2066 0
5408 -2068 0
5410 -2070 0
5412 -2072 0
5414 -2074 0
c (SATLiteral(12313) \/ SATLiteral(12314))
12313 12314 0
c (max_left_00002_00003_00002<=max_left_00002_00003_00003)
2061 -2076 0
2062 -2077 0
2064 -2079 0
2066 -2081 0
2068 -2083 0
2070 -2085 0
2072 -2087 0
2074 -2089 0
c (variant_fields_00002_00003_00003<=max_left_00002_00003_00003)
5416 -2076 0
5417 -2077 0
5419 -2079 0
5421 -2081 0
5423 -2083 0
5425 -2085 0
5427 -2087 0
5429 -2089 0
c (SATLiteral(12315) \/ SATLiteral(12316))
12315 12316 0
c (max_left_00002_00003_00003<=max_left_00002_00003_00004)
2076 -2091 0
2077 -2092 0
2079 -2094 0
2081 -2096 0
2083 -2098 0
2085 -2100 0
2087 -2102 0
2089 -2104 0
c (SATLiteral(12317) \/ SATLiteral(12318))
12317 12318 0
c (max_left_00002_00003_00004<=max_left_00002_00003_00005)
2091 -2106 0
2092 -2107 0
2094 -2109 0
2096 -2111 0
2098 -2113 0
2100 -2115 0
2102 -2117 0
2104 -2119 0
c (variant_fields_00002_00003_00005<=max_left_00002_00003_00005)
5432 -2106 0
5433 -2107 0
5435 -2109 0
5437 -2111 0
5439 -2113 0
5441 -2115 0
5443 -2117 0
5445 -2119 0
c (SATLiteral(12319) \/ SATLiteral(12320))
12319 12320 0
c (max_left_00002_00003_00005<=max_left_00002_00003_00006)
2106 -2121 0
2107 -2122 0
2109 -2124 0
2111 -2126 0
2113 -2128 0
2115 -2130 0
2117 -2132 0
2119 -2134 0
c (variant_fields_00002_00003_00006<=max_left_00002_00003_00006)
5447 -2121 0
5448 -2122 0
5450 -2124 0
5452 -2126 0
5454 -2128 0
5456 -2130 0
5458 -2132 0
5460 -2134 0
c (SATLiteral(12321) \/ SATLiteral(12322))
12321 12322 0
c (max_left_00002_00003_00006<=max_left_00002_00003_00007)
2121 -2136 0
2122 -2137 0
2124 -2139 0
2126 -2141 0
2128 -2143 0
2130 -2145 0
2132 -2147 0
2134 -2149 0
c (variant_fields_00002_00003_00007<=max_left_00002_00003_00007)
5462 -2136 0
5463 -2137 0
5465 -2139 0
5467 -2141 0
5469 -2143 0
5471 -2145 0
5473 -2147 0
5475 -2149 0
c (SATLiteral(12323) \/ SATLiteral(12324))
12323 12324 0
c (max_left_00002_00003_00007<=max_left_00002_00003_00008)
2149 2151 0
c (SATLiteral(12325) \/ SATLiteral(12326))
12325 12326 0
c (max_left_00002_00003_00008<=max_left_00002_00003_00009)
-2151 2152 0
c (variant_fields_00002_00003_00009<=max_left_00002_00003_00009)
5491 2152 0
c (SATLiteral(12327) \/ SATLiteral(12328))
12327 12328 0
c (variant_fields_00002_00004_00001<=max_left_00002_00004_00001)
5493 -2154 0
5494 -2155 0
5496 -2157 0
5498 -2159 0
5500 -2161 0
5502 -2163 0
5504 -2165 0
5506 -2167 0
c (variant_fields_00002_00004_00001=max_left_00002_00004_00001)
-5493 2154 0
-5495 2156 0
-5497 2158 0
-5499 2160 0
-5501 2162 0
-5503 2164 0
-5505 2166 0
-5507 2168 0
5506 -2167 0
-2154 5493 0
-2156 5495 0
-2158 5497 0
-2160 5499 0
-2162 5501 0
-2164 5503 0
-2166 5505 0
-2168 5507 0
2167 -5506 0
c (max_left_00002_00004_00001<=max_left_00002_00004_00002)
2154 -2169 0
2155 -2170 0
2157 -2172 0
2159 -2174 0
2161 -2176 0
2163 -2178 0
2165 -2180 0
2167 -2182 0
c (variant_fields_00002_00004_00002<=max_left_00002_00004_00002)
5508 -2169 0
5509 -2170 0
5511 -2172 0
5513 -2174 0
5515 -2176 0
5517 -2178 0
5519 -2180 0
5521 -2182 0
c (SATLiteral(12329) \/ SATLiteral(12330))
12329 12330 0
c (max_left_00002_00004_00002<=max_left_00002_00004_00003)
2169 -2184 0
2170 -2185 0
2172 -2187 0
2174 -2189 0
2176 -2191 0
2178 -2193 0
2180 -2195 0
2182 -2197 0
c (variant_fields_00002_00004_00003<=max_left_00002_00004_00003)
5523 -2184 0
5524 -2185 0
5526 -2187 0
5528 -2189 0
5530 -2191 0
5532 -2193 0
5534 -2195 0
5536 -2197 0
c (SATLiteral(12331) \/ SATLiteral(12332))
12331 12332 0
c (max_left_00002_00004_00003<=max_left_00002_00004_00004)
2184 -2199 0
2185 -2200 0
2187 -2202 0
2189 -2204 0
2191 -2206 0
2193 -2208 0
2195 -2210 0
2197 -2212 0
c (variant_fields_00002_00004_00004<=max_left_00002_00004_00004)
5538 -2199 0
5539 -2200 0
5541 -2202 0
5543 -2204 0
5545 -2206 0
5547 -2208 0
5549 -2210 0
5551 -2212 0
c (SATLiteral(12333) \/ SATLiteral(12334))
12333 12334 0
c (max_left_00002_00004_00004<=max_left_00002_00004_00005)
2199 -2214 0
2200 -2215 0
2202 -2217 0
2204 -2219 0
2206 -2221 0
2208 -2223 0
2210 -2225 0
2212 -2227 0
c (SATLiteral(12335) \/ SATLiteral(12336))
12335 12336 0
c (max_left_00002_00004_00005<=max_left_00002_00004_00006)
2214 -2229 0
2215 -2230 0
2217 -2232 0
2219 -2234 0
2221 -2236 0
2223 -2238 0
2225 -2240 0
2227 -2242 0
c (variant_fields_00002_00004_00006<=max_left_00002_00004_00006)
5554 -2229 0
5555 -2230 0
5557 -2232 0
5559 -2234 0
5561 -2236 0
5563 -2238 0
5565 -2240 0
5567 -2242 0
c (SATLiteral(12337) \/ SATLiteral(12338))
12337 12338 0
c (max_left_00002_00004_00006<=max_left_00002_00004_00007)
2232 -2244 0
2234 -2245 0
2236 -2247 0
2238 -2249 0
2240 -2251 0
2242 -2253 0
c (SATLiteral(12339) \/ SATLiteral(12340))
12339 12340 0
c (max_left_00002_00004_00007<=max_left_00002_00004_00008)
2244 -2255 0
2245 -2256 0
2247 -2258 0
2249 -2260 0
2251 -2262 0
2253 -2264 0
c (variant_fields_00002_00004_00008<=max_left_00002_00004_00008)
5573 -2255 0
5575 -2256 0
5577 -2258 0
5579 -2260 0
5581 -2262 0
5583 -2264 0
c (SATLiteral(12341) \/ SATLiteral(12342))
12341 12342 0
c (max_left_00002_00004_00008<=max_left_00002_00004_00009)
2255 -2266 0
2256 -2267 0
2258 -2269 0
2260 -2271 0
2262 -2273 0
2264 -2275 0
c (variant_fields_00002_00004_00009<=max_left_00002_00004_00009)
5588 -2266 0
5590 -2267 0
5592 -2269 0
5594 -2271 0
5596 -2273 0
5598 -2275 0
c (SATLiteral(12343) \/ SATLiteral(12344))
12343 12344 0
c (variant_fields_00002_00005_00001<=max_left_00002_00005_00001)
5600 -2278 0
5601 -2279 0
5603 -2281 0
5605 -2283 0
5607 -2285 0
5609 -2287 0
5611 -2289 0
5613 -2291 0
c (variant_fields_00002_00005_00001=max_left_00002_00005_00001)
-5600 2278 0
-5602 2280 0
-5604 2282 0
-5606 2284 0
-5608 2286 0
-5610 2288 0
-5612 2290 0
-5614 2292 0
5613 -2291 0
-2278 5600 0
-2280 5602 0
-2282 5604 0
-2284 5606 0
-2286 5608 0
-2288 5610 0
-2290 5612 0
-2292 5614 0
2291 -5613 0
c (max_left_00002_00005_00001<=max_left_00002_00005_00002)
2278 -2293 0
2279 -2294 0
2281 -2296 0
2283 -2298 0
2285 -2300 0
2287 -2302 0
2289 -2304 0
2291 -2306 0
c (variant_fields_00002_00005_00002<=max_left_00002_00005_00002)
5615 -2293 0
5616 -2294 0
5618 -2296 0
5620 -2298 0
5622 -2300 0
5624 -2302 0
5626 -2304 0
5628 -2306 0
c (SATLiteral(12345) \/ SATLiteral(12346))
12345 12346 0
c (max_left_00002_00005_00002<=max_left_00002_00005_00003)
2293 -2308 0
2294 -2309 0
2296 -2311 0
2298 -2313 0
2300 -2315 0
2302 -2317 0
2304 -2319 0
2306 -2321 0
c (variant_fields_00002_00005_00003<=max_left_00002_00005_00003)
5630 -2308 0
5631 -2309 0
5633 -2311 0
5635 -2313 0
5637 -2315 0
5639 -2317 0
5641 -2319 0
5643 -2321 0
c (SATLiteral(12347) \/ SATLiteral(12348))
12347 12348 0
c (max_left_00002_00005_00003<=max_left_00002_00005_00004)
2308 -2323 0
2309 -2324 0
2311 -2326 0
2313 -2328 0
2315 -2330 0
2317 -2332 0
2319 -2334 0
2321 -2336 0
c (variant_fields_00002_00005_00004<=max_left_00002_00005_00004)
5645 -2323 0
5646 -2324 0
5648 -2326 0
5650 -2328 0
5652 -2330 0
5654 -2332 0
5656 -2334 0
5658 -2336 0
c (SATLiteral(12349) \/ SATLiteral(12350))
12349 12350 0
c (max_left_00002_00005_00004<=max_left_00002_00005_00005)
2323 -2338 0
2324 -2339 0
2326 -2341 0
2328 -2343 0
2330 -2345 0
2332 -2347 0
2334 -2349 0
2336 -2351 0
c (variant_fields_00002_00005_00005<=max_left_00002_00005_00005)
5660 -2338 0
5661 -2339 0
5663 -2341 0
5665 -2343 0
5667 -2345 0
5669 -2347 0
5671 -2349 0
5673 -2351 0
c (SATLiteral(12351) \/ SATLiteral(12352))
12351 12352 0
c (max_left_00002_00005_00005<=max_left_00002_00005_00006)
2338 -2353 0
2339 -2354 0
2341 -2356 0
2343 -2358 0
2345 -2360 0
2347 -2362 0
2349 -2364 0
2351 -2366 0
c (variant_fields_00002_00005_00006<=max_left_00002_00005_00006)
5675 -2353 0
5676 -2354 0
5678 -2356 0
5680 -2358 0
5682 -2360 0
5684 -2362 0
5686 -2364 0
5688 -2366 0
c (SATLiteral(12353) \/ SATLiteral(12354))
12353 12354 0
c (max_left_00002_00005_00006<=max_left_00002_00005_00007)
2353 -2368 0
2354 -2369 0
2356 -2371 0
2358 -2373 0
2360 -2375 0
2362 -2377 0
2364 -2379 0
2366 -2381 0
c (variant_fields_00002_00005_00007<=max_left_00002_00005_00007)
5690 -2368 0
5691 -2369 0
5693 -2371 0
5695 -2373 0
5697 -2375 0
5699 -2377 0
5701 -2379 0
5703 -2381 0
c (SATLiteral(12355) \/ SATLiteral(12356))
12355 12356 0
c (max_left_00002_00005_00007<=max_left_00002_00005_00008)
2379 -2383 0
2381 -2384 0
c (SATLiteral(12357) \/ SATLiteral(12358))
12357 12358 0
c (max_left_00002_00005_00008<=max_left_00002_00005_00009)
2383 -2386 0
2384 -2387 0
c (max_left_00002_00005_00008=max_left_00002_00005_00009)
-2383 2386 0
-2385 2388 0
2384 -2387 0
-2386 2383 0
-2388 2385 0
2387 -2384 0
c (variant_fields_00002_00006_00001<=max_left_00002_00006_00001)
5707 -2390 0
5708 -2391 0
5710 -2393 0
5712 -2395 0
5714 -2397 0
5716 -2399 0
5718 -2401 0
5720 -2403 0
c (variant_fields_00002_00006_00001=max_left_00002_00006_00001)
-5707 2390 0
-5709 2392 0
-5711 2394 0
-5713 2396 0
-5715 2398 0
-5717 2400 0
-5719 2402 0
-5721 2404 0
5720 -2403 0
-2390 5707 0
-2392 5709 0
-2394 5711 0
-2396 5713 0
-2398 5715 0
-2400 5717 0
-2402 5719 0
-2404 5721 0
2403 -5720 0
c (max_left_00002_00006_00001<=max_left_00002_00006_00002)
2390 -2405 0
2391 -2406 0
2393 -2408 0
2395 -2410 0
2397 -2412 0
2399 -2414 0
2401 -2416 0
2403 -2418 0
c (variant_fields_00002_00006_00002<=max_left_00002_00006_00002)
5722 -2405 0
5723 -2406 0
5725 -2408 0
5727 -2410 0
5729 -2412 0
5731 -2414 0
5733 -2416 0
5735 -2418 0
c (SATLiteral(12359) \/ SATLiteral(12360))
12359 12360 0
c (max_left_00002_00006_00002<=max_left_00002_00006_00003)
2414 -2420 0
2416 -2421 0
2418 -2423 0
c (SATLiteral(12361) \/ SATLiteral(12362))
12361 12362 0
c (max_left_00002_00006_00003<=max_left_00002_00006_00004)
2420 -2425 0
2421 -2426 0
2423 -2428 0
c (variant_fields_00002_00006_00004<=max_left_00002_00006_00004)
5747 -2425 0
5749 -2426 0
5751 -2428 0
c (SATLiteral(12363) \/ SATLiteral(12364))
12363 12364 0
c (max_left_00002_00006_00004<=max_left_00002_00006_00005)
2425 -2430 0
2426 -2431 0
2428 -2433 0
c (variant_fields_00002_00006_00005<=max_left_00002_00006_00005)
5762 -2430 0
5764 -2431 0
5766 -2433 0
c (SATLiteral(12365) \/ SATLiteral(12366))
12365 12366 0
c (max_left_00002_00006_00005<=max_left_00002_00006_00006)
2431 -2435 0
2433 -2436 0
c (SATLiteral(12367) \/ SATLiteral(12368))
12367 12368 0
c (max_left_00002_00006_00006<=max_left_00002_00006_00007)
2435 -2438 0
2436 -2439 0
c (variant_fields_00002_00006_00007<=max_left_00002_00006_00007)
5780 -2438 0
5782 -2439 0
c (SATLiteral(12369) \/ SATLiteral(12370))
12369 12370 0
c (max_left_00002_00006_00007<=max_left_00002_00006_00008)
2438 -2441 0
2439 -2442 0
c (variant_fields_00002_00006_00008<=max_left_00002_00006_00008)
5795 -2441 0
5797 -2442 0
c (SATLiteral(12371) \/ SATLiteral(12372))
12371 12372 0
c (max_left_00002_00006_00008<=max_left_00002_00006_00009)
2441 -2444 0
2442 -2445 0
c (variant_fields_00002_00006_00009<=max_left_00002_00006_00009)
5810 -2444 0
5812 -2445 0
c (SATLiteral(12373) \/ SATLiteral(12374))
12373 12374 0
c (variant_fields_00002_00007_00002<=max_left_00002_00007_00002)
5822 -2449 0
5824 -2450 0
5826 -2452 0
5828 -2454 0
c (SATLiteral(12375) \/ SATLiteral(12376))
12375 12376 0
c (max_left_00002_00007_00002<=max_left_00002_00007_00003)
2449 -2456 0
2450 -2457 0
2452 -2459 0
2454 -2461 0
c (variant_fields_00002_00007_00003<=max_left_00002_00007_00003)
5837 -2456 0
5839 -2457 0
5841 -2459 0
5843 -2461 0
c (SATLiteral(12377) \/ SATLiteral(12378))
12377 12378 0
c (max_left_00002_00007_00003<=max_left_00002_00007_00004)
2456 -2463 0
2457 -2464 0
2459 -2466 0
2461 -2468 0
c (variant_fields_00002_00007_00004<=max_left_00002_00007_00004)
5852 -2463 0
5854 -2464 0
5856 -2466 0
5858 -2468 0
c (SATLiteral(12379) \/ SATLiteral(12380))
12379 12380 0
c (max_left_00002_00007_00004<=max_left_00002_00007_00005)
2466 -2470 0
2468 -2471 0
c (SATLiteral(12381) \/ SATLiteral(12382))
12381 12382 0
c (max_left_00002_00007_00005<=max_left_00002_00007_00006)
2470 -2473 0
2471 -2474 0
c (variant_fields_00002_00007_00006<=max_left_00002_00007_00006)
5872 -2473 0
5874 -2474 0
c (SATLiteral(12383) \/ SATLiteral(12384))
12383 12384 0
c (max_left_00002_00007_00006<=max_left_00002_00007_00007)
2473 -2476 0
2474 -2477 0
c (max_left_00002_00007_00006=max_left_00002_00007_00007)
-2473 2476 0
-2475 2478 0
2474 -2477 0
-2476 2473 0
-2478 2475 0
2477 -2474 0
c (max_left_00002_00007_00007<=max_left_00002_00007_00008)
2476 -2479 0
2477 -2480 0
c (variant_fields_00002_00007_00008<=max_left_00002_00007_00008)
5888 -2479 0
5890 -2480 0
c (SATLiteral(12385) \/ SATLiteral(12386))
12385 12386 0
c (max_left_00002_00007_00008<=max_left_00002_00007_00009)
2480 2482 0
c (SATLiteral(12387) \/ SATLiteral(12388))
12387 12388 0
c (variant_fields_00002_00008_00001<=max_left_00002_00008_00001)
5893 -2484 0
5894 -2485 0
5896 -2487 0
5898 -2489 0
5900 -2491 0
5902 -2493 0
5904 -2495 0
5906 -2497 0
c (variant_fields_00002_00008_00001=max_left_00002_00008_00001)
-5893 2484 0
-5895 2486 0
-5897 2488 0
-5899 2490 0
-5901 2492 0
-5903 2494 0
-5905 2496 0
-5907 2498 0
5906 -2497 0
-2484 5893 0
-2486 5895 0
-2488 5897 0
-2490 5899 0
-2492 5901 0
-2494 5903 0
-2496 5905 0
-2498 5907 0
2497 -5906 0
c (max_left_00002_00008_00001<=max_left_00002_00008_00002)
2495 -2499 0
2497 -2500 0
c (SATLiteral(12389) \/ SATLiteral(12390))
12389 12390 0
c (max_left_00002_00008_00002<=max_left_00002_00008_00003)
2499 -2502 0
2500 -2503 0
c (variant_fields_00002_00008_00003<=max_left_00002_00008_00003)
5920 -2502 0
5922 -2503 0
c (SATLiteral(12391) \/ SATLiteral(12392))
12391 12392 0
c (max_left_00002_00008_00003<=max_left_00002_00008_00004)
2502 -2505 0
2503 -2506 0
c (max_left_00002_00008_00003=max_left_00002_00008_00004)
-2502 2505 0
-2504 2507 0
2503 -2506 0
-2505 2502 0
-2507 2504 0
2506 -2503 0
c (max_left_00002_00008_00004<=max_left_00002_00008_00005)
2505 -2508 0
2506 -2509 0
c (variant_fields_00002_00008_00005<=max_left_00002_00008_00005)
5936 -2508 0
5938 -2509 0
c (SATLiteral(12393) \/ SATLiteral(12394))
12393 12394 0
c (max_left_00002_00008_00005<=max_left_00002_00008_00006)
2508 -2511 0
2509 -2512 0
c (variant_fields_00002_00008_00006<=max_left_00002_00008_00006)
5951 -2511 0
5953 -2512 0
c (SATLiteral(12395) \/ SATLiteral(12396))
12395 12396 0
c (max_left_00002_00008_00006<=max_left_00002_00008_00007)
2511 -2514 0
2512 -2515 0
c (variant_fields_00002_00008_00007<=max_left_00002_00008_00007)
5966 -2514 0
5968 -2515 0
c (SATLiteral(12397) \/ SATLiteral(12398))
12397 12398 0
c (max_left_00002_00008_00007<=max_left_00002_00008_00008)
2514 -2517 0
2515 -2518 0
c (variant_fields_00002_00008_00008<=max_left_00002_00008_00008)
5981 -2517 0
5983 -2518 0
c (SATLiteral(12399) \/ SATLiteral(12400))
12399 12400 0
c (max_left_00002_00008_00008<=max_left_00002_00008_00009)
2517 -2520 0
2518 -2521 0
c (variant_fields_00002_00008_00009<=max_left_00002_00008_00009)
5996 -2520 0
5998 -2521 0
c (SATLiteral(12401) \/ SATLiteral(12402))
12401 12402 0
c (variant_fields_00002_00009_00001<=max_left_00002_00009_00001)
6000 -2524 0
6001 -2525 0
6003 -2527 0
6005 -2529 0
6007 -2531 0
6009 -2533 0
6011 -2535 0
6013 -2537 0
c (variant_fields_00002_00009_00001=max_left_00002_00009_00001)
-6000 2524 0
-6002 2526 0
-6004 2528 0
-6006 2530 0
-6008 2532 0
-6010 2534 0
-6012 2536 0
-6014 2538 0
6013 -2537 0
-2524 6000 0
-2526 6002 0
-2528 6004 0
-2530 6006 0
-2532 6008 0
-2534 6010 0
-2536 6012 0
-2538 6014 0
2537 -6013 0
c (max_left_00002_00009_00001<=max_left_00002_00009_00002)
2524 -2539 0
2525 -2540 0
2527 -2542 0
2529 -2544 0
2531 -2546 0
2533 -2548 0
2535 -2550 0
2537 -2552 0
c (variant_fields_00002_00009_00002<=max_left_00002_00009_00002)
6015 -2539 0
6016 -2540 0
6018 -2542 0
6020 -2544 0
6022 -2546 0
6024 -2548 0
6026 -2550 0
6028 -2552 0
c (SATLiteral(12403) \/ SATLiteral(12404))
12403 12404 0
c (max_left_00002_00009_00002<=max_left_00002_00009_00003)
2539 -2554 0
2540 -2555 0
2542 -2557 0
2544 -2559 0
2546 -2561 0
2548 -2563 0
2550 -2565 0
2552 -2567 0
c (variant_fields_00002_00009_00003<=max_left_00002_00009_00003)
6030 -2554 0
6031 -2555 0
6033 -2557 0
6035 -2559 0
6037 -2561 0
6039 -2563 0
6041 -2565 0
6043 -2567 0
c (SATLiteral(12405) \/ SATLiteral(12406))
12405 12406 0
c (max_left_00002_00009_00003<=max_left_00002_00009_00004)
2554 -2569 0
2555 -2570 0
2557 -2572 0
2559 -2574 0
2561 -2576 0
2563 -2578 0
2565 -2580 0
2567 -2582 0
c (variant_fields_00002_00009_00004<=max_left_00002_00009_00004)
6045 -2569 0
6046 -2570 0
6048 -2572 0
6050 -2574 0
6052 -2576 0
6054 -2578 0
6056 -2580 0
6058 -2582 0
c (SATLiteral(12407) \/ SATLiteral(12408))
12407 12408 0
c (max_left_00002_00009_00004<=max_left_00002_00009_00005)
2570 -2584 0
2572 -2585 0
2574 -2587 0
2576 -2589 0
2578 -2591 0
2580 -2593 0
2582 -2595 0
c (SATLiteral(12409) \/ SATLiteral(12410))
12409 12410 0
c (max_left_00002_00009_00005<=max_left_00002_00009_00006)
2584 -2597 0
2585 -2598 0
2587 -2600 0
2589 -2602 0
2591 -2604 0
2593 -2606 0
2595 -2608 0
c (variant_fields_00002_00009_00006<=max_left_00002_00009_00006)
6062 -2597 0
6064 -2598 0
6066 -2600 0
6068 -2602 0
6070 -2604 0
6072 -2606 0
6074 -2608 0
c (SATLiteral(12411) \/ SATLiteral(12412))
12411 12412 0
c (max_left_00002_00009_00006<=max_left_00002_00009_00007)
2606 -2610 0
2608 -2611 0
c (SATLiteral(12413) \/ SATLiteral(12414))
12413 12414 0
c (max_left_00002_00009_00007<=max_left_00002_00009_00008)
2610 -2613 0
2611 -2614 0
c (variant_fields_00002_00009_00008<=max_left_00002_00009_00008)
6088 -2613 0
6090 -2614 0
c (SATLiteral(12415) \/ SATLiteral(12416))
12415 12416 0
c (max_left_00002_00009_00008<=max_left_00002_00009_00009)
2613 -2616 0
2614 -2617 0
c (variant_fields_00002_00009_00009<=max_left_00002_00009_00009)
6103 -2616 0
6105 -2617 0
c (SATLiteral(12417) \/ SATLiteral(12418))
12417 12418 0
c (variant_fields_00003_00001_00001<=max_left_00003_00001_00001)
6107 -2620 0
6108 -2621 0
6110 -2623 0
6112 -2625 0
6114 -2627 0
6116 -2629 0
6118 -2631 0
6120 -2633 0
c (variant_fields_00003_00001_00001=max_left_00003_00001_00001)
-6107 2620 0
-6109 2622 0
-6111 2624 0
-6113 2626 0
-6115 2628 0
-6117 2630 0
-6119 2632 0
-6121 2634 0
6120 -2633 0
-2620 6107 0
-2622 6109 0
-2624 6111 0
-2626 6113 0
-2628 6115 0
-2630 6117 0
-2632 6119 0
-2634 6121 0
2633 -6120 0
c (variant_fields_00003_00001_00002<=max_left_00003_00001_00002)
6122 -2635 0
6123 -2636 0
6125 -2638 0
6127 -2640 0
6129 -2642 0
6131 -2644 0
6133 -2646 0
6135 -2648 0
c (max_left_00003_00001_00001<=max_left_00003_00001_00002)
2620 -2635 0
2621 -2636 0
2623 -2638 0
2625 -2640 0
2627 -2642 0
2629 -2644 0
2631 -2646 0
2633 -2648 0
c (SATLiteral(12419) \/ SATLiteral(12420))
12419 12420 0
c (max_left_00003_00001_00002<=max_left_00003_00001_00003)
2642 -2650 0
2644 -2651 0
2646 -2653 0
2648 -2655 0
c (SATLiteral(12421) \/ SATLiteral(12422))
12421 12422 0
c (variant_fields_00003_00001_00004<=max_left_00003_00001_00004)
6145 -2657 0
6147 -2658 0
6149 -2660 0
6151 -2662 0
c (max_left_00003_00001_00003<=max_left_00003_00001_00004)
2650 -2657 0
2651 -2658 0
2653 -2660 0
2655 -2662 0
c (SATLiteral(12423) \/ SATLiteral(12424))
12423 12424 0
c (variant_fields_00003_00001_00005<=max_left_00003_00001_00005)
6160 -2664 0
6162 -2665 0
6164 -2667 0
6166 -2669 0
c (max_left_00003_00001_00004<=max_left_00003_00001_00005)
2657 -2664 0
2658 -2665 0
2660 -2667 0
2662 -2669 0
c (SATLiteral(12425) \/ SATLiteral(12426))
12425 12426 0
c (variant_fields_00003_00001_00006<=max_left_00003_00001_00006)
6175 -2671 0
6177 -2672 0
6179 -2674 0
6181 -2676 0
c (max_left_00003_00001_00005<=max_left_00003_00001_00006)
2664 -2671 0
2665 -2672 0
2667 -2674 0
2669 -2676 0
c (SATLiteral(12427) \/ SATLiteral(12428))
12427 12428 0
c (variant_fields_00003_00001_00007<=max_left_00003_00001_00007)
6190 -2678 0
6192 -2679 0
6194 -2681 0
6196 -2683 0
c (max_left_00003_00001_00006<=max_left_00003_00001_00007)
2671 -2678 0
2672 -2679 0
2674 -2681 0
2676 -2683 0
c (SATLiteral(12429) \/ SATLiteral(12430))
12429 12430 0
c (variant_fields_00003_00001_00008<=max_left_00003_00001_00008)
6205 -2685 0
6207 -2686 0
6209 -2688 0
6211 -2690 0
c (max_left_00003_00001_00007<=max_left_00003_00001_00008)
2678 -2685 0
2679 -2686 0
2681 -2688 0
2683 -2690 0
c (SATLiteral(12431) \/ SATLiteral(12432))
12431 12432 0
c (variant_fields_00003_00001_00009<=max_left_00003_00001_00009)
6220 -2692 0
6222 -2693 0
6224 -2695 0
6226 -2697 0
c (max_left_00003_00001_00008<=max_left_00003_00001_00009)
2685 -2692 0
2686 -2693 0
2688 -2695 0
2690 -2697 0
c (SATLiteral(12433) \/ SATLiteral(12434))
12433 12434 0
c (variant_fields_00003_00002_00001<=max_left_00003_00002_00001)
6228 -2700 0
6229 -2701 0
6231 -2703 0
6233 -2705 0
6235 -2707 0
6237 -2709 0
6239 -2711 0
6241 -2713 0
c (variant_fields_00003_00002_00001=max_left_00003_00002_00001)
-6228 2700 0
-6230 2702 0
-6232 2704 0
-6234 2706 0
-6236 2708 0
-6238 2710 0
-6240 2712 0
-6242 2714 0
6241 -2713 0
-2700 6228 0
-2702 6230 0
-2704 6232 0
-2706 6234 0
-2708 6236 0
-2710 6238 0
-2712 6240 0
-2714 6242 0
2713 -6241 0
c (max_left_00003_00002_00001<=max_left_00003_00002_00002)
2711 -2715 0
2713 -2716 0
c (SATLiteral(12435) \/ SATLiteral(12436))
12435 12436 0
c (max_left_00003_00002_00002<=max_left_00003_00002_00003)
2715 -2718 0
2716 -2719 0
c (variant_fields_00003_00002_00003<=max_left_00003_00002_00003)
6255 -2718 0
6257 -2719 0
c (SATLiteral(12437) \/ SATLiteral(12438))
12437 12438 0
c (max_left_00003_00002_00003<=max_left_00003_00002_00004)
2718 -2721 0
2719 -2722 0
c (variant_fields_00003_00002_00004<=max_left_00003_00002_00004)
6270 -2721 0
6272 -2722 0
c (SATLiteral(12439) \/ SATLiteral(12440))
12439 12440 0
c (max_left_00003_00002_00004<=max_left_00003_00002_00005)
2721 -2724 0
2722 -2725 0
c (variant_fields_00003_00002_00005<=max_left_00003_00002_00005)
6285 -2724 0
6287 -2725 0
c (SATLiteral(12441) \/ SATLiteral(12442))
12441 12442 0
c (max_left_00003_00002_00005<=max_left_00003_00002_00006)
2724 -2727 0
2725 -2728 0
c (variant_fields_00003_00002_00006<=max_left_00003_00002_00006)
6300 -2727 0
6302 -2728 0
c (SATLiteral(12443) \/ SATLiteral(12444))
12443 12444 0
c (max_left_00003_00002_00006<=max_left_00003_00002_00007)
2727 -2730 0
2728 -2731 0
c (variant_fields_00003_00002_00007<=max_left_00003_00002_00007)
6315 -2730 0
6317 -2731 0
c (SATLiteral(12445) \/ SATLiteral(12446))
12445 12446 0
c (max_left_00003_00002_00007<=max_left_00003_00002_00008)
2730 -2733 0
2731 -2734 0
c (variant_fields_00003_00002_00008<=max_left_00003_00002_00008)
6330 -2733 0
6332 -2734 0
c (SATLiteral(12447) \/ SATLiteral(12448))
12447 12448 0
c (max_left_00003_00002_00008<=max_left_00003_00002_00009)
2733 -2736 0
2734 -2737 0
c (variant_fields_00003_00002_00009<=max_left_00003_00002_00009)
6345 -2736 0
6347 -2737 0
c (SATLiteral(12449) \/ SATLiteral(12450))
12449 12450 0
c (variant_fields_00003_00003_00001<=max_left_00003_00003_00001)
6349 -2740 0
6350 -2741 0
6352 -2743 0
6354 -2745 0
6356 -2747 0
6358 -2749 0
6360 -2751 0
6362 -2753 0
c (variant_fields_00003_00003_00001=max_left_00003_00003_00001)
-6349 2740 0
-6351 2742 0
-6353 2744 0
-6355 2746 0
-6357 2748 0
-6359 2750 0
-6361 2752 0
-6363 2754 0
6362 -2753 0
-2740 6349 0
-2742 6351 0
-2744 6353 0
-2746 6355 0
-2748 6357 0
-2750 6359 0
-2752 6361 0
-2754 6363 0
2753 -6362 0
c (max_left_00003_00003_00001<=max_left_00003_00003_00002)
2740 -2755 0
2741 -2756 0
2743 -2758 0
2745 -2760 0
2747 -2762 0
2749 -2764 0
2751 -2766 0
2753 -2768 0
c (variant_fields_00003_00003_00002<=max_left_00003_00003_00002)
6364 -2755 0
6365 -2756 0
6367 -2758 0
6369 -2760 0
6371 -2762 0
6373 -2764 0
6375 -2766 0
6377 -2768 0
c (SATLiteral(12451) \/ SATLiteral(12452))
12451 12452 0
c (max_left_00003_00003_00002<=max_left_00003_00003_00003)
2755 -2770 0
2756 -2771 0
2758 -2773 0
2760 -2775 0
2762 -2777 0
2764 -2779 0
2766 -2781 0
2768 -2783 0
c (variant_fields_00003_00003_00003<=max_left_00003_00003_00003)
6379 -2770 0
6380 -2771 0
6382 -2773 0
6384 -2775 0
6386 -2777 0
6388 -2779 0
6390 -2781 0
6392 -2783 0
c (SATLiteral(12453) \/ SATLiteral(12454))
12453 12454 0
c (max_left_00003_00003_00003<=max_left_00003_00003_00004)
2779 -2785 0
2781 -2786 0
2783 -2788 0
c (SATLiteral(12455) \/ SATLiteral(12456))
12455 12456 0
c (max_left_00003_00003_00004<=max_left_00003_00003_00005)
2785 -2790 0
2786 -2791 0
2788 -2793 0
c (variant_fields_00003_00003_00005<=max_left_00003_00003_00005)
6404 -2790 0
6406 -2791 0
6408 -2793 0
c (SATLiteral(12457) \/ SATLiteral(12458))
12457 12458 0
c (max_left_00003_00003_00005<=max_left_00003_00003_00006)
2790 -2795 0
2791 -2796 0
2793 -2798 0
c (variant_fields_00003_00003_00006<=max_left_00003_00003_00006)
6419 -2795 0
6421 -2796 0
6423 -2798 0
c (SATLiteral(12459) \/ SATLiteral(12460))
12459 12460 0
c (max_left_00003_00003_00006<=max_left_00003_00003_00007)
2795 -2800 0
2796 -2801 0
2798 -2803 0
c (variant_fields_00003_00003_00007<=max_left_00003_00003_00007)
6434 -2800 0
6436 -2801 0
6438 -2803 0
c (SATLiteral(12461) \/ SATLiteral(12462))
12461 12462 0
c (max_left_00003_00003_00007<=max_left_00003_00003_00008)
2800 -2805 0
2801 -2806 0
2803 -2808 0
c (variant_fields_00003_00003_00008<=max_left_00003_00003_00008)
6449 -2805 0
6451 -2806 0
6453 -2808 0
c (SATLiteral(12463) \/ SATLiteral(12464))
12463 12464 0
c (max_left_00003_00003_00008<=max_left_00003_00003_00009)
2805 -2810 0
2806 -2811 0
2808 -2813 0
c (variant_fields_00003_00003_00009<=max_left_00003_00003_00009)
6464 -2810 0
6466 -2811 0
6468 -2813 0
c (SATLiteral(12465) \/ SATLiteral(12466))
12465 12466 0
c (variant_fields_00003_00004_00001<=max_left_00003_00004_00001)
6470 -2816 0
6471 -2817 0
6473 -2819 0
6475 -2821 0
6477 -2823 0
6479 -2825 0
6481 -2827 0
6483 -2829 0
c (variant_fields_00003_00004_00001=max_left_00003_00004_00001)
-6470 2816 0
-6472 2818 0
-6474 2820 0
-6476 2822 0
-6478 2824 0
-6480 2826 0
-6482 2828 0
-6484 2830 0
6483 -2829 0
-2816 6470 0
-2818 6472 0
-2820 6474 0
-2822 6476 0
-2824 6478 0
-2826 6480 0
-2828 6482 0
-2830 6484 0
2829 -6483 0
c (max_left_00003_00004_00001<=max_left_00003_00004_00002)
2819 -2831 0
2821 -2832 0
2823 -2834 0
2825 -2836 0
2827 -2838 0
2829 -2840 0
c (SATLiteral(12467) \/ SATLiteral(12468))
12467 12468 0
c (max_left_00003_00004_00002<=max_left_00003_00004_00003)
2831 -2842 0
2832 -2843 0
2834 -2845 0
2836 -2847 0
2838 -2849 0
2840 -2851 0
c (variant_fields_00003_00004_00003<=max_left_00003_00004_00003)
6489 -2842 0
6491 -2843 0
6493 -2845 0
6495 -2847 0
6497 -2849 0
6499 -2851 0
c (SATLiteral(12469) \/ SATLiteral(12470))
12469 12470 0
c (max_left_00003_00004_00003<=max_left_00003_00004_00004)
2842 -2853 0
2843 -2854 0
2845 -2856 0
2847 -2858 0
2849 -2860 0
2851 -2862 0
c (variant_fields_00003_00004_00004<=max_left_00003_00004_00004)
6504 -2853 0
6506 -2854 0
6508 -2856 0
6510 -2858 0
6512 -2860 0
6514 -2862 0
c (SATLiteral(12471) \/ SATLiteral(12472))
12471 12472 0
c (max_left_00003_00004_00004<=max_left_00003_00004_00005)
2853 -2864 0
2854 -2865 0
2856 -2867 0
2858 -2869 0
2860 -2871 0
2862 -2873 0
c (variant_fields_00003_00004_00005<=max_left_00003_00004_00005)
6519 -2864 0
6521 -2865 0
6523 -2867 0
6525 -2869 0
6527 -2871 0
6529 -2873 0
c (SATLiteral(12473) \/ SATLiteral(12474))
12473 12474 0
c (max_left_00003_00004_00005<=max_left_00003_00004_00006)
2864 -2875 0
2865 -2876 0
2867 -2878 0
2869 -2880 0
2871 -2882 0
2873 -2884 0
c (variant_fields_00003_00004_00006<=max_left_00003_00004_00006)
6534 -2875 0
6536 -2876 0
6538 -2878 0
6540 -2880 0
6542 -2882 0
6544 -2884 0
c (SATLiteral(12475) \/ SATLiteral(12476))
12475 12476 0
c (max_left_00003_00004_00006<=max_left_00003_00004_00007)
2875 -2886 0
2876 -2887 0
2878 -2889 0
2880 -2891 0
2882 -2893 0
2884 -2895 0
c (max_left_00003_00004_00006=max_left_00003_00004_00007)
-2875 2886 0
-2877 2888 0
-2879 2890 0
-2881 2892 0
-2883 2894 0
-2885 2896 0
2884 -2895 0
-2886 2875 0
-2888 2877 0
-2890 2879 0
-2892 2881 0
-2894 2883 0
-2896 2885 0
2895 -2884 0
c (max_left_00003_00004_00007<=max_left_00003_00004_00008)
2886 -2897 0
2887 -2898 0
2889 -2900 0
2891 -2902 0
2893 -2904 0
2895 -2906 0
c (variant_fields_00003_00004_00008<=max_left_00003_00004_00008)
6550 -2897 0
6552 -2898 0
6554 -2900 0
6556 -2902 0
6558 -2904 0
6560 -2906 0
c (SATLiteral(12477) \/ SATLiteral(12478))
12477 12478 0
c (max_left_00003_00004_00008<=max_left_00003_00004_00009)
2897 -2908 0
2898 -2909 0
2900 -2911 0
2902 -2913 0
2904 -2915 0
2906 -2917 0
c (variant_fields_00003_00004_00009<=max_left_00003_00004_00009)
6565 -2908 0
6567 -2909 0
6569 -2911 0
6571 -2913 0
6573 -2915 0
6575 -2917 0
c (SATLiteral(12479) \/ SATLiteral(12480))
12479 12480 0
c (variant_fields_00003_00005_00002<=max_left_00003_00005_00002)
6579 -2921 0
6581 -2922 0
6583 -2924 0
6585 -2926 0
6587 -2928 0
6589 -2930 0
6591 -2932 0
c (SATLiteral(12481) \/ SATLiteral(12482))
12481 12482 0
c (max_left_00003_00005_00002<=max_left_00003_00005_00003)
2930 -2934 0
2932 -2935 0
c (SATLiteral(12483) \/ SATLiteral(12484))
12483 12484 0
c (max_left_00003_00005_00003<=max_left_00003_00005_00004)
2934 -2937 0
2935 -2938 0
c (variant_fields_00003_00005_00004<=max_left_00003_00005_00004)
6605 -2937 0
6607 -2938 0
c (SATLiteral(12485) \/ SATLiteral(12486))
12485 12486 0
c (max_left_00003_00005_00004<=max_left_00003_00005_00005)
2937 -2940 0
2938 -2941 0
c (variant_fields_00003_00005_00005<=max_left_00003_00005_00005)
6620 -2940 0
6622 -2941 0
c (SATLiteral(12487) \/ SATLiteral(12488))
12487 12488 0
c (max_left_00003_00005_00005<=max_left_00003_00005_00006)
2940 -2943 0
2941 -2944 0
c (max_left_00003_00005_00005=max_left_00003_00005_00006)
-2940 2943 0
-2942 2945 0
2941 -2944 0
-2943 2940 0
-2945 2942 0
2944 -2941 0
c (max_left_00003_00005_00006<=max_left_00003_00005_00007)
2943 -2946 0
2944 -2947 0
c (variant_fields_00003_00005_00007<=max_left_00003_00005_00007)
6636 -2946 0
6638 -2947 0
c (SATLiteral(12489) \/ SATLiteral(12490))
12489 12490 0
c (max_left_00003_00005_00007<=max_left_00003_00005_00008)
2946 -2949 0
2947 -2950 0
c (variant_fields_00003_00005_00008<=max_left_00003_00005_00008)
6651 -2949 0
6653 -2950 0
c (SATLiteral(12491) \/ SATLiteral(12492))
12491 12492 0
c (max_left_00003_00005_00008<=max_left_00003_00005_00009)
2949 -2952 0
2950 -2953 0
c (variant_fields_00003_00005_00009<=max_left_00003_00005_00009)
6666 -2952 0
6668 -2953 0
c (SATLiteral(12493) \/ SATLiteral(12494))
12493 12494 0
c (variant_fields_00003_00006_00001<=max_left_00003_00006_00001)
6670 -2956 0
6671 -2957 0
6673 -2959 0
6675 -2961 0
6677 -2963 0
6679 -2965 0
6681 -2967 0
6683 -2969 0
c (variant_fields_00003_00006_00001=max_left_00003_00006_00001)
-6670 2956 0
-6672 2958 0
-6674 2960 0
-6676 2962 0
-6678 2964 0
-6680 2966 0
-6682 2968 0
-6684 2970 0
6683 -2969 0
-2956 6670 0
-2958 6672 0
-2960 6674 0
-2962 6676 0
-2964 6678 0
-2966 6680 0
-2968 6682 0
-2970 6684 0
2969 -6683 0
c (variant_fields_00003_00006_00002<=max_left_00003_00006_00002)
6685 -2971 0
6686 -2972 0
6688 -2974 0
6690 -2976 0
6692 -2978 0
6694 -2980 0
6696 -2982 0
6698 -2984 0
c (max_left_00003_00006_00001<=max_left_00003_00006_00002)
2956 -2971 0
2957 -2972 0
2959 -2974 0
2961 -2976 0
2963 -2978 0
2965 -2980 0
2967 -2982 0
2969 -2984 0
c (SATLiteral(12495) \/ SATLiteral(12496))
12495 12496 0
c (variant_fields_00003_00006_00003<=max_left_00003_00006_00003)
6700 -2986 0
6701 -2987 0
6703 -2989 0
6705 -2991 0
6707 -2993 0
6709 -2995 0
6711 -2997 0
6713 -2999 0
c (max_left_00003_00006_00002<=max_left_00003_00006_00003)
2971 -2986 0
2972 -2987 0
2974 -2989 0
2976 -2991 0
2978 -2993 0
2980 -2995 0
2982 -2997 0
2984 -2999 0
c (SATLiteral(12497) \/ SATLiteral(12498))
12497 12498 0
c (max_left_00003_00006_00003<=max_left_00003_00006_00004)
2997 -3001 0
2999 -3002 0
c (SATLiteral(12499) \/ SATLiteral(12500))
12499 12500 0
c (variant_fields_00003_00006_00005<=max_left_00003_00006_00005)
6727 -3004 0
6729 -3005 0
c (max_left_00003_00006_00004<=max_left_00003_00006_00005)
3001 -3004 0
3002 -3005 0
c (SATLiteral(12501) \/ SATLiteral(12502))
12501 12502 0
c (variant_fields_00003_00006_00006<=max_left_00003_00006_00006)
6742 -3007 0
6744 -3008 0
c (max_left_00003_00006_00005<=max_left_00003_00006_00006)
3004 -3007 0
3005 -3008 0
c (SATLiteral(12503) \/ SATLiteral(12504))
12503 12504 0
c (variant_fields_00003_00006_00007<=max_left_00003_00006_00007)
6757 -3010 0
6759 -3011 0
c (max_left_00003_00006_00006<=max_left_00003_00006_00007)
3007 -3010 0
3008 -3011 0
c (SATLiteral(12505) \/ SATLiteral(12506))
12505 12506 0
c (max_left_00003_00006_00007<=max_left_00003_00006_00008)
3011 3013 0
c (SATLiteral(12507) \/ SATLiteral(12508))
12507 12508 0
c (variant_fields_00003_00006_00009<=max_left_00003_00006_00009)
6775 3014 0
c (max_left_00003_00006_00008<=max_left_00003_00006_00009)
-3013 3014 0
c (SATLiteral(12509) \/ SATLiteral(12510))
12509 12510 0
c (variant_fields_00003_00007_00002<=max_left_00003_00007_00002)
6789 -3017 0
6791 -3018 0
c (SATLiteral(12511) \/ SATLiteral(12512))
12511 12512 0
c (max_left_00003_00007_00002<=max_left_00003_00007_00003)
3017 -3020 0
3018 -3021 0
c (max_left_00003_00007_00002=max_left_00003_00007_00003)
-3017 3020 0
-3019 3022 0
3018 -3021 0
-3020 3017 0
-3022 3019 0
3021 -3018 0
c (max_left_00003_00007_00003<=max_left_00003_00007_00004)
3020 -3023 0
3021 -3024 0
c (variant_fields_00003_00007_00004<=max_left_00003_00007_00004)
6805 -3023 0
6807 -3024 0
c (SATLiteral(12513) \/ SATLiteral(12514))
12513 12514 0
c (max_left_00003_00007_00004<=max_left_00003_00007_00005)
3023 -3026 0
3024 -3027 0
c (variant_fields_00003_00007_00005<=max_left_00003_00007_00005)
6820 -3026 0
6822 -3027 0
c (SATLiteral(12515) \/ SATLiteral(12516))
12515 12516 0
c (max_left_00003_00007_00005<=max_left_00003_00007_00006)
3026 -3029 0
3027 -3030 0
c (max_left_00003_00007_00005=max_left_00003_00007_00006)
-3026 3029 0
-3028 3031 0
3027 -3030 0
-3029 3026 0
-3031 3028 0
3030 -3027 0
c (max_left_00003_00007_00006<=max_left_00003_00007_00007)
3029 -3032 0
3030 -3033 0
c (variant_fields_00003_00007_00007<=max_left_00003_00007_00007)
6836 -3032 0
6838 -3033 0
c (SATLiteral(12517) \/ SATLiteral(12518))
12517 12518 0
c (max_left_00003_00007_00007<=max_left_00003_00007_00008)
3032 -3035 0
3033 -3036 0
c (variant_fields_00003_00007_00008<=max_left_00003_00007_00008)
6851 -3035 0
6853 -3036 0
c (SATLiteral(12519) \/ SATLiteral(12520))
12519 12520 0
c (max_left_00003_00007_00008<=max_left_00003_00007_00009)
3035 -3038 0
3036 -3039 0
c (variant_fields_00003_00007_00009<=max_left_00003_00007_00009)
6866 -3038 0
6868 -3039 0
c (SATLiteral(12521) \/ SATLiteral(12522))
12521 12522 0
c (variant_fields_00003_00008_00001<=max_left_00003_00008_00001)
6870 -3042 0
6871 -3043 0
6873 -3045 0
6875 -3047 0
6877 -3049 0
6879 -3051 0
6881 -3053 0
6883 -3055 0
c (variant_fields_00003_00008_00001=max_left_00003_00008_00001)
-6870 3042 0
-6872 3044 0
-6874 3046 0
-6876 3048 0
-6878 3050 0
-6880 3052 0
-6882 3054 0
-6884 3056 0
6883 -3055 0
-3042 6870 0
-3044 6872 0
-3046 6874 0
-3048 6876 0
-3050 6878 0
-3052 6880 0
-3054 6882 0
-3056 6884 0
3055 -6883 0
c (max_left_00003_00008_00001<=max_left_00003_00008_00002)
3042 -3057 0
3043 -3058 0
3045 -3060 0
3047 -3062 0
3049 -3064 0
3051 -3066 0
3053 -3068 0
3055 -3070 0
c (variant_fields_00003_00008_00002<=max_left_00003_00008_00002)
6885 -3057 0
6886 -3058 0
6888 -3060 0
6890 -3062 0
6892 -3064 0
6894 -3066 0
6896 -3068 0
6898 -3070 0
c (SATLiteral(12523) \/ SATLiteral(12524))
12523 12524 0
c (max_left_00003_00008_00002<=max_left_00003_00008_00003)
3057 -3072 0
3058 -3073 0
3060 -3075 0
3062 -3077 0
3064 -3079 0
3066 -3081 0
3068 -3083 0
3070 -3085 0
c (variant_fields_00003_00008_00003<=max_left_00003_00008_00003)
6900 -3072 0
6901 -3073 0
6903 -3075 0
6905 -3077 0
6907 -3079 0
6909 -3081 0
6911 -3083 0
6913 -3085 0
c (SATLiteral(12525) \/ SATLiteral(12526))
12525 12526 0
c (max_left_00003_00008_00003<=max_left_00003_00008_00004)
3072 -3087 0
3073 -3088 0
3075 -3090 0
3077 -3092 0
3079 -3094 0
3081 -3096 0
3083 -3098 0
3085 -3100 0
c (variant_fields_00003_00008_00004<=max_left_00003_00008_00004)
6915 -3087 0
6916 -3088 0
6918 -3090 0
6920 -3092 0
6922 -3094 0
6924 -3096 0
6926 -3098 0
6928 -3100 0
c (SATLiteral(12527) \/ SATLiteral(12528))
12527 12528 0
c (max_left_00003_00008_00004<=max_left_00003_00008_00005)
3098 -3102 0
3100 -3103 0
c (SATLiteral(12529) \/ SATLiteral(12530))
12529 12530 0
c (max_left_00003_00008_00005<=max_left_00003_00008_00006)
3102 -3105 0
3103 -3106 0
c (variant_fields_00003_00008_00006<=max_left_00003_00008_00006)
6942 -3105 0
6944 -3106 0
c (SATLiteral(12531) \/ SATLiteral(12532))
12531 12532 0
c (max_left_00003_00008_00006<=max_left_00003_00008_00007)
3106 3108 0
c (SATLiteral(12533) \/ SATLiteral(12534))
12533 12534 0
c (max_left_00003_00008_00007<=max_left_00003_00008_00008)
-3108 3109 0
c (variant_fields_00003_00008_00008<=max_left_00003_00008_00008)
6960 3109 0
c (SATLiteral(12535) \/ SATLiteral(12536))
12535 12536 0
c (max_left_00003_00008_00008<=max_left_00003_00008_00009)
-3109 3110 0
c (variant_fields_00003_00008_00009<=max_left_00003_00008_00009)
6975 3110 0
c (SATLiteral(12537) \/ SATLiteral(12538))
12537 12538 0
c (variant_fields_00003_00009_00001<=max_left_00003_00009_00001)
6977 -3112 0
6978 -3113 0
6980 -3115 0
6982 -3117 0
6984 -3119 0
6986 -3121 0
6988 -3123 0
6990 -3125 0
c (variant_fields_00003_00009_00001=max_left_00003_00009_00001)
-6977 3112 0
-6979 3114 0
-6981 3116 0
-6983 3118 0
-6985 3120 0
-6987 3122 0
-6989 3124 0
-6991 3126 0
6990 -3125 0
-3112 6977 0
-3114 6979 0
-3116 6981 0
-3118 6983 0
-3120 6985 0
-3122 6987 0
-3124 6989 0
-3126 6991 0
3125 -6990 0
c (max_left_00003_00009_00001<=max_left_00003_00009_00002)
3112 -3127 0
3113 -3128 0
3115 -3130 0
3117 -3132 0
3119 -3134 0
3121 -3136 0
3123 -3138 0
3125 -3140 0
c (variant_fields_00003_00009_00002<=max_left_00003_00009_00002)
6992 -3127 0
6993 -3128 0
6995 -3130 0
6997 -3132 0
6999 -3134 0
7001 -3136 0
7003 -3138 0
7005 -3140 0
c (SATLiteral(12539) \/ SATLiteral(12540))
12539 12540 0
c (max_left_00003_00009_00002<=max_left_00003_00009_00003)
3140 3142 0
c (SATLiteral(12541) \/ SATLiteral(12542))
12541 12542 0
c (max_left_00003_00009_00003<=max_left_00003_00009_00004)
-3142 3143 0
c (variant_fields_00003_00009_00004<=max_left_00003_00009_00004)
7021 3143 0
c (SATLiteral(12543) \/ SATLiteral(12544))
12543 12544 0
c (max_left_00003_00009_00004<=max_left_00003_00009_00005)
-3143 3144 0
c (max_left_00003_00009_00004=max_left_00003_00009_00005)
3143 -3144 0
-3143 3144 0
3144 -3143 0
-3144 3143 0
c (max_left_00003_00009_00005<=max_left_00003_00009_00006)
-3144 3145 0
c (variant_fields_00003_00009_00006<=max_left_00003_00009_00006)
7037 3145 0
c (SATLiteral(12545) \/ SATLiteral(12546))
12545 12546 0
c (max_left_00003_00009_00006<=max_left_00003_00009_00007)
-3145 3146 0
c (variant_fields_00003_00009_00007<=max_left_00003_00009_00007)
7052 3146 0
c (SATLiteral(12547) \/ SATLiteral(12548))
12547 12548 0
c (max_left_00003_00009_00007<=max_left_00003_00009_00008)
-3146 3147 0
c (variant_fields_00003_00009_00008<=max_left_00003_00009_00008)
7067 3147 0
c (SATLiteral(12549) \/ SATLiteral(12550))
12549 12550 0
c (max_left_00003_00009_00008<=max_left_00003_00009_00009)
-3147 3148 0
c (variant_fields_00003_00009_00009<=max_left_00003_00009_00009)
7082 3148 0
c (SATLiteral(12551) \/ SATLiteral(12552))
12551 12552 0
c (variant_fields_00004_00001_00001<=max_left_00004_00001_00001)
7084 -3150 0
7085 -3151 0
7087 -3153 0
7089 -3155 0
7091 -3157 0
7093 -3159 0
7095 -3161 0
7097 -3163 0
c (variant_fields_00004_00001_00001=max_left_00004_00001_00001)
-7084 3150 0
-7086 3152 0
-7088 3154 0
-7090 3156 0
-7092 3158 0
-7094 3160 0
-7096 3162 0
-7098 3164 0
7097 -3163 0
-3150 7084 0
-3152 7086 0
-3154 7088 0
-3156 7090 0
-3158 7092 0
-3160 7094 0
-3162 7096 0
-3164 7098 0
3163 -7097 0
c (max_left_00004_00001_00001<=max_left_00004_00001_00002)
3150 -3165 0
3151 -3166 0
3153 -3168 0
3155 -3170 0
3157 -3172 0
3159 -3174 0
3161 -3176 0
3163 -3178 0
c (variant_fields_00004_00001_00002<=max_left_00004_00001_00002)
7099 -3165 0
7100 -3166 0
7102 -3168 0
7104 -3170 0
7106 -3172 0
7108 -3174 0
7110 -3176 0
7112 -3178 0
c (SATLiteral(12553) \/ SATLiteral(12554))
12553 12554 0
c (max_left_00004_00001_00002<=max_left_00004_00001_00003)
3165 -3180 0
3166 -3181 0
3168 -3183 0
3170 -3185 0
3172 -3187 0
3174 -3189 0
3176 -3191 0
3178 -3193 0
c (variant_fields_00004_00001_00003<=max_left_00004_00001_00003)
7114 -3180 0
7115 -3181 0
7117 -3183 0
7119 -3185 0
7121 -3187 0
7123 -3189 0
7125 -3191 0
7127 -3193 0
c (SATLiteral(12555) \/ SATLiteral(12556))
12555 12556 0
c (max_left_00004_00001_00003<=max_left_00004_00001_00004)
3180 -3195 0
3181 -3196 0
3183 -3198 0
3185 -3200 0
3187 -3202 0
3189 -3204 0
3191 -3206 0
3193 -3208 0
c (variant_fields_00004_00001_00004<=max_left_00004_00001_00004)
7129 -3195 0
7130 -3196 0
7132 -3198 0
7134 -3200 0
7136 -3202 0
7138 -3204 0
7140 -3206 0
7142 -3208 0
c (SATLiteral(12557) \/ SATLiteral(12558))
12557 12558 0
c (max_left_00004_00001_00004<=max_left_00004_00001_00005)
3195 -3210 0
3196 -3211 0
3198 -3213 0
3200 -3215 0
3202 -3217 0
3204 -3219 0
3206 -3221 0
3208 -3223 0
c (variant_fields_00004_00001_00005<=max_left_00004_00001_00005)
7144 -3210 0
7145 -3211 0
7147 -3213 0
7149 -3215 0
7151 -3217 0
7153 -3219 0
7155 -3221 0
7157 -3223 0
c (SATLiteral(12559) \/ SATLiteral(12560))
12559 12560 0
c (max_left_00004_00001_00005<=max_left_00004_00001_00006)
3210 -3225 0
3211 -3226 0
3213 -3228 0
3215 -3230 0
3217 -3232 0
3219 -3234 0
3221 -3236 0
3223 -3238 0
c (variant_fields_00004_00001_00006<=max_left_00004_00001_00006)
7159 -3225 0
7160 -3226 0
7162 -3228 0
7164 -3230 0
7166 -3232 0
7168 -3234 0
7170 -3236 0
7172 -3238 0
c (SATLiteral(12561) \/ SATLiteral(12562))
12561 12562 0
c (max_left_00004_00001_00006<=max_left_00004_00001_00007)
3225 -3240 0
3226 -3241 0
3228 -3243 0
3230 -3245 0
3232 -3247 0
3234 -3249 0
3236 -3251 0
3238 -3253 0
c (variant_fields_00004_00001_00007<=max_left_00004_00001_00007)
7174 -3240 0
7175 -3241 0
7177 -3243 0
7179 -3245 0
7181 -3247 0
7183 -3249 0
7185 -3251 0
7187 -3253 0
c (SATLiteral(12563) \/ SATLiteral(12564))
12563 12564 0
c (max_left_00004_00001_00007<=max_left_00004_00001_00008)
3240 -3255 0
3241 -3256 0
3243 -3258 0
3245 -3260 0
3247 -3262 0
3249 -3264 0
3251 -3266 0
3253 -3268 0
c (variant_fields_00004_00001_00008<=max_left_00004_00001_00008)
7189 -3255 0
7190 -3256 0
7192 -3258 0
7194 -3260 0
7196 -3262 0
7198 -3264 0
7200 -3266 0
7202 -3268 0
c (SATLiteral(12565) \/ SATLiteral(12566))
12565 12566 0
c (max_left_00004_00001_00008<=max_left_00004_00001_00009)
3255 -3270 0
3256 -3271 0
3258 -3273 0
3260 -3275 0
3262 -3277 0
3264 -3279 0
3266 -3281 0
3268 -3283 0
c (variant_fields_00004_00001_00009<=max_left_00004_00001_00009)
7204 -3270 0
7205 -3271 0
7207 -3273 0
7209 -3275 0
7211 -3277 0
7213 -3279 0
7215 -3281 0
7217 -3283 0
c (SATLiteral(12567) \/ SATLiteral(12568))
12567 12568 0
c (variant_fields_00004_00002_00001<=max_left_00004_00002_00001)
7219 -3286 0
7220 -3287 0
7222 -3289 0
7224 -3291 0
7226 -3293 0
7228 -3295 0
7230 -3297 0
7232 -3299 0
c (variant_fields_00004_00002_00001=max_left_00004_00002_00001)
-7219 3286 0
-7221 3288 0
-7223 3290 0
-7225 3292 0
-7227 3294 0
-7229 3296 0
-7231 3298 0
-7233 3300 0
7232 -3299 0
-3286 7219 0
-3288 7221 0
-3290 7223 0
-3292 7225 0
-3294 7227 0
-3296 7229 0
-3298 7231 0
-3300 7233 0
3299 -7232 0
c (max_left_00004_00002_00001<=max_left_00004_00002_00002)
3286 -3301 0
3287 -3302 0
3289 -3304 0
3291 -3306 0
3293 -3308 0
3295 -3310 0
3297 -3312 0
3299 -3314 0
c (variant_fields_00004_00002_00002<=max_left_00004_00002_00002)
7234 -3301 0
7235 -3302 0
7237 -3304 0
7239 -3306 0
7241 -3308 0
7243 -3310 0
7245 -3312 0
7247 -3314 0
c (SATLiteral(12569) \/ SATLiteral(12570))
12569 12570 0
c (max_left_00004_00002_00002<=max_left_00004_00002_00003)
3301 -3316 0
3302 -3317 0
3304 -3319 0
3306 -3321 0
3308 -3323 0
3310 -3325 0
3312 -3327 0
3314 -3329 0
c (variant_fields_00004_00002_00003<=max_left_00004_00002_00003)
7249 -3316 0
7250 -3317 0
7252 -3319 0
7254 -3321 0
7256 -3323 0
7258 -3325 0
7260 -3327 0
7262 -3329 0
c (SATLiteral(12571) \/ SATLiteral(12572))
12571 12572 0
c (max_left_00004_00002_00003<=max_left_00004_00002_00004)
3329 3331 0
c (SATLiteral(12573) \/ SATLiteral(12574))
12573 12574 0
c (max_left_00004_00002_00004<=max_left_00004_00002_00005)
-3331 3332 0
c (variant_fields_00004_00002_00005<=max_left_00004_00002_00005)
7278 3332 0
c (SATLiteral(12575) \/ SATLiteral(12576))
12575 12576 0
c (max_left_00004_00002_00005<=max_left_00004_00002_00006)
-3332 3333 0
c (variant_fields_00004_00002_00006<=max_left_00004_00002_00006)
7293 3333 0
c (SATLiteral(12577) \/ SATLiteral(12578))
12577 12578 0
c (max_left_00004_00002_00006<=max_left_00004_00002_00007)
-3333 3334 0
c (variant_fields_00004_00002_00007<=max_left_00004_00002_00007)
7308 3334 0
c (SATLiteral(12579) \/ SATLiteral(12580))
12579 12580 0
c (max_left_00004_00002_00007<=max_left_00004_00002_00008)
-3334 3335 0
c (variant_fields_00004_00002_00008<=max_left_00004_00002_00008)
7323 3335 0
c (SATLiteral(12581) \/ SATLiteral(12582))
12581 12582 0
c (max_left_00004_00002_00008<=max_left_00004_00002_00009)
-3335 3336 0
c (variant_fields_00004_00002_00009<=max_left_00004_00002_00009)
7338 3336 0
c (SATLiteral(12583) \/ SATLiteral(12584))
12583 12584 0
c (variant_fields_00004_00003_00001<=max_left_00004_00003_00001)
7340 -3338 0
7341 -3339 0
7343 -3341 0
7345 -3343 0
7347 -3345 0
7349 -3347 0
7351 -3349 0
7353 -3351 0
c (variant_fields_00004_00003_00001=max_left_00004_00003_00001)
-7340 3338 0
-7342 3340 0
-7344 3342 0
-7346 3344 0
-7348 3346 0
-7350 3348 0
-7352 3350 0
-7354 3352 0
7353 -3351 0
-3338 7340 0
-3340 7342 0
-3342 7344 0
-3344 7346 0
-3346 7348 0
-3348 7350 0
-3350 7352 0
-3352 7354 0
3351 -7353 0
c (max_left_00004_00003_00001<=max_left_00004_00003_00002)
3351 3353 0
c (SATLiteral(12585) \/ SATLiteral(12586))
12585 12586 0
c (max_left_00004_00003_00002<=max_left_00004_00003_00003)
-3353 3354 0
c (variant_fields_00004_00003_00003<=max_left_00004_00003_00003)
7369 3354 0
c (SATLiteral(12587) \/ SATLiteral(12588))
12587 12588 0
c (max_left_00004_00003_00003<=max_left_00004_00003_00004)
-3354 3355 0
c (variant_fields_00004_00003_00004<=max_left_00004_00003_00004)
7384 3355 0
c (SATLiteral(12589) \/ SATLiteral(12590))
12589 12590 0
c (max_left_00004_00003_00004<=max_left_00004_00003_00005)
-3355 3356 0
c (variant_fields_00004_00003_00005<=max_left_00004_00003_00005)
7399 3356 0
c (SATLiteral(12591) \/ SATLiteral(12592))
12591 12592 0
c (max_left_00004_00003_00005<=max_left_00004_00003_00006)
-3356 3357 0
c (max_left_00004_00003_00005=max_left_00004_00003_00006)
3356 -3357 0
-3356 3357 0
3357 -3356 0
-3357 3356 0
c (max_left_00004_00003_00006<=max_left_00004_00003_00007)
-3357 3358 0
c (variant_fields_00004_00003_00007<=max_left_00004_00003_00007)
7415 3358 0
c (SATLiteral(12593) \/ SATLiteral(12594))
12593 12594 0
c (max_left_00004_00003_00007<=max_left_00004_00003_00008)
-3358 3359 0
c (variant_fields_00004_00003_00008<=max_left_00004_00003_00008)
7430 3359 0
c (SATLiteral(12595) \/ SATLiteral(12596))
12595 12596 0
c (max_left_00004_00003_00008<=max_left_00004_00003_00009)
-3359 3360 0
c (variant_fields_00004_00003_00009<=max_left_00004_00003_00009)
7445 3360 0
c (SATLiteral(12597) \/ SATLiteral(12598))
12597 12598 0
c (variant_fields_00004_00004_00001<=max_left_00004_00004_00001)
7447 -3362 0
7448 -3363 0
7450 -3365 0
7452 -3367 0
7454 -3369 0
7456 -3371 0
7458 -3373 0
7460 -3375 0
c (variant_fields_00004_00004_00001=max_left_00004_00004_00001)
-7447 3362 0
-7449 3364 0
-7451 3366 0
-7453 3368 0
-7455 3370 0
-7457 3372 0
-7459 3374 0
-7461 3376 0
7460 -3375 0
-3362 7447 0
-3364 7449 0
-3366 7451 0
-3368 7453 0
-3370 7455 0
-3372 7457 0
-3374 7459 0
-3376 7461 0
3375 -7460 0
c (max_left_00004_00004_00001<=max_left_00004_00004_00002)
3362 -3377 0
3363 -3378 0
3365 -3380 0
3367 -3382 0
3369 -3384 0
3371 -3386 0
3373 -3388 0
3375 -3390 0
c (variant_fields_00004_00004_00002<=max_left_00004_00004_00002)
7462 -3377 0
7463 -3378 0
7465 -3380 0
7467 -3382 0
7469 -3384 0
7471 -3386 0
7473 -3388 0
7475 -3390 0
c (SATLiteral(12599) \/ SATLiteral(12600))
12599 12600 0
c (max_left_00004_00004_00002<=max_left_00004_00004_00003)
3380 -3392 0
3382 -3393 0
3384 -3395 0
3386 -3397 0
3388 -3399 0
3390 -3401 0
c (SATLiteral(12601) \/ SATLiteral(12602))
12601 12602 0
c (max_left_00004_00004_00003<=max_left_00004_00004_00004)
3392 -3403 0
3393 -3404 0
3395 -3406 0
3397 -3408 0
3399 -3410 0
3401 -3412 0
c (variant_fields_00004_00004_00004<=max_left_00004_00004_00004)
7481 -3403 0
7483 -3404 0
7485 -3406 0
7487 -3408 0
7489 -3410 0
7491 -3412 0
c (SATLiteral(12603) \/ SATLiteral(12604))
12603 12604 0
c (max_left_00004_00004_00004<=max_left_00004_00004_00005)
3403 -3414 0
3404 -3415 0
3406 -3417 0
3408 -3419 0
3410 -3421 0
3412 -3423 0
c (max_left_00004_00004_00004=max_left_00004_00004_00005)
-3403 3414 0
-3405 3416 0
-3407 3418 0
-3409 3420 0
-3411 3422 0
-3413 3424 0
3412 -3423 0
-3414 3403 0
-3416 3405 0
-3418 3407 0
-3420 3409 0
-3422 3411 0
-3424 3413 0
3423 -3412 0
c (max_left_00004_00004_00005<=max_left_00004_00004_00006)
3414 -3425 0
3415 -3426 0
3417 -3428 0
3419 -3430 0
3421 -3432 0
3423 -3434 0
c (variant_fields_00004_00004_00006<=max_left_00004_00004_00006)
7497 -3425 0
7499 -3426 0
7501 -3428 0
7503 -3430 0
7505 -3432 0
7507 -3434 0
c (SATLiteral(12605) \/ SATLiteral(12606))
12605 12606 0
c (max_left_00004_00004_00006<=max_left_00004_00004_00007)
3425 -3436 0
3426 -3437 0
3428 -3439 0
3430 -3441 0
3432 -3443 0
3434 -3445 0
c (variant_fields_00004_00004_00007<=max_left_00004_00004_00007)
7512 -3436 0
7514 -3437 0
7516 -3439 0
7518 -3441 0
7520 -3443 0
7522 -3445 0
c (SATLiteral(12607) \/ SATLiteral(12608))
12607 12608 0
c (max_left_00004_00004_00007<=max_left_00004_00004_00008)
3436 -3447 0
3437 -3448 0
3439 -3450 0
3441 -3452 0
3443 -3454 0
3445 -3456 0
c (variant_fields_00004_00004_00008<=max_left_00004_00004_00008)
7527 -3447 0
7529 -3448 0
7531 -3450 0
7533 -3452 0
7535 -3454 0
7537 -3456 0
c (SATLiteral(12609) \/ SATLiteral(12610))
12609 12610 0
c (max_left_00004_00004_00008<=max_left_00004_00004_00009)
3447 -3458 0
3448 -3459 0
3450 -3461 0
3452 -3463 0
3454 -3465 0
3456 -3467 0
c (variant_fields_00004_00004_00009<=max_left_00004_00004_00009)
7542 -3458 0
7544 -3459 0
7546 -3461 0
7548 -3463 0
7550 -3465 0
7552 -3467 0
c (SATLiteral(12611) \/ SATLiteral(12612))
12611 12612 0
c (variant_fields_00004_00005_00003<=max_left_00004_00005_00003)
7567 -3472 0
7569 -3473 0
c (SATLiteral(12613) \/ SATLiteral(12614))
12613 12614 0
c (max_left_00004_00005_00003<=max_left_00004_00005_00004)
3472 -3475 0
3473 -3476 0
c (variant_fields_00004_00005_00004<=max_left_00004_00005_00004)
7582 -3475 0
7584 -3476 0
c (SATLiteral(12615) \/ SATLiteral(12616))
12615 12616 0
c (max_left_00004_00005_00004<=max_left_00004_00005_00005)
3475 -3478 0
3476 -3479 0
c (variant_fields_00004_00005_00005<=max_left_00004_00005_00005)
7597 -3478 0
7599 -3479 0
c (SATLiteral(12617) \/ SATLiteral(12618))
12617 12618 0
c (max_left_00004_00005_00005<=max_left_00004_00005_00006)
3478 -3481 0
3479 -3482 0
c (variant_fields_00004_00005_00006<=max_left_00004_00005_00006)
7612 -3481 0
7614 -3482 0
c (SATLiteral(12619) \/ SATLiteral(12620))
12619 12620 0
c (max_left_00004_00005_00006<=max_left_00004_00005_00007)
3481 -3484 0
3482 -3485 0
c (variant_fields_00004_00005_00007<=max_left_00004_00005_00007)
7627 -3484 0
7629 -3485 0
c (SATLiteral(12621) \/ SATLiteral(12622))
12621 12622 0
c (max_left_00004_00005_00007<=max_left_00004_00005_00008)
3484 -3487 0
3485 -3488 0
c (variant_fields_00004_00005_00008<=max_left_00004_00005_00008)
7642 -3487 0
7644 -3488 0
c (SATLiteral(12623) \/ SATLiteral(12624))
12623 12624 0
c (max_left_00004_00005_00008<=max_left_00004_00005_00009)
3487 -3490 0
3488 -3491 0
c (variant_fields_00004_00005_00009<=max_left_00004_00005_00009)
7657 -3490 0
7659 -3491 0
c (SATLiteral(12625) \/ SATLiteral(12626))
12625 12626 0
c (variant_fields_00004_00006_00001<=max_left_00004_00006_00001)
7661 -3494 0
7662 -3495 0
7664 -3497 0
7666 -3499 0
7668 -3501 0
7670 -3503 0
7672 -3505 0
7674 -3507 0
c (variant_fields_00004_00006_00001=max_left_00004_00006_00001)
-7661 3494 0
-7663 3496 0
-7665 3498 0
-7667 3500 0
-7669 3502 0
-7671 3504 0
-7673 3506 0
-7675 3508 0
7674 -3507 0
-3494 7661 0
-3496 7663 0
-3498 7665 0
-3500 7667 0
-3502 7669 0
-3504 7671 0
-3506 7673 0
-3508 7675 0
3507 -7674 0
c (max_left_00004_00006_00001<=max_left_00004_00006_00002)
3494 -3509 0
3495 -3510 0
3497 -3512 0
3499 -3514 0
3501 -3516 0
3503 -3518 0
3505 -3520 0
3507 -3522 0
c (variant_fields_00004_00006_00002<=max_left_00004_00006_00002)
7676 -3509 0
7677 -3510 0
7679 -3512 0
7681 -3514 0
7683 -3516 0
7685 -3518 0
7687 -3520 0
7689 -3522 0
c (SATLiteral(12627) \/ SATLiteral(12628))
12627 12628 0
c (max_left_00004_00006_00002<=max_left_00004_00006_00003)
3509 -3524 0
3510 -3525 0
3512 -3527 0
3514 -3529 0
3516 -3531 0
3518 -3533 0
3520 -3535 0
3522 -3537 0
c (variant_fields_00004_00006_00003<=max_left_00004_00006_00003)
7691 -3524 0
7692 -3525 0
7694 -3527 0
7696 -3529 0
7698 -3531 0
7700 -3533 0
7702 -3535 0
7704 -3537 0
c (SATLiteral(12629) \/ SATLiteral(12630))
12629 12630 0
c (max_left_00004_00006_00003<=max_left_00004_00006_00004)
3535 -3539 0
3537 -3540 0
c (SATLiteral(12631) \/ SATLiteral(12632))
12631 12632 0
c (max_left_00004_00006_00004<=max_left_00004_00006_00005)
3539 -3542 0
3540 -3543 0
c (variant_fields_00004_00006_00005<=max_left_00004_00006_00005)
7718 -3542 0
7720 -3543 0
c (SATLiteral(12633) \/ SATLiteral(12634))
12633 12634 0
c (max_left_00004_00006_00005<=max_left_00004_00006_00006)
3542 -3545 0
3543 -3546 0
c (variant_fields_00004_00006_00006<=max_left_00004_00006_00006)
7733 -3545 0
7735 -3546 0
c (SATLiteral(12635) \/ SATLiteral(12636))
12635 12636 0
c (max_left_00004_00006_00006<=max_left_00004_00006_00007)
3545 -3548 0
3546 -3549 0
c (max_left_00004_00006_00006=max_left_00004_00006_00007)
-3545 3548 0
-3547 3550 0
3546 -3549 0
-3548 3545 0
-3550 3547 0
3549 -3546 0
c (max_left_00004_00006_00007<=max_left_00004_00006_00008)
3548 -3551 0
3549 -3552 0
c (variant_fields_00004_00006_00008<=max_left_00004_00006_00008)
7749 -3551 0
7751 -3552 0
c (SATLiteral(12637) \/ SATLiteral(12638))
12637 12638 0
c (max_left_00004_00006_00008<=max_left_00004_00006_00009)
3551 -3554 0
3552 -3555 0
c (variant_fields_00004_00006_00009<=max_left_00004_00006_00009)
7764 -3554 0
7766 -3555 0
c (SATLiteral(12639) \/ SATLiteral(12640))
12639 12640 0
c (variant_fields_00004_00007_00002<=max_left_00004_00007_00002)
7782 3559 0
c (SATLiteral(12641) \/ SATLiteral(12642))
12641 12642 0
c (max_left_00004_00007_00002<=max_left_00004_00007_00003)
-3559 3560 0
c (max_left_00004_00007_00002=max_left_00004_00007_00003)
3559 -3560 0
-3559 3560 0
3560 -3559 0
-3560 3559 0
c (max_left_00004_00007_00003<=max_left_00004_00007_00004)
-3560 3561 0
c (variant_fields_00004_00007_00004<=max_left_00004_00007_00004)
7798 3561 0
c (SATLiteral(12643) \/ SATLiteral(12644))
12643 12644 0
c (max_left_00004_00007_00004<=max_left_00004_00007_00005)
-3561 3562 0
c (max_left_00004_00007_00004=max_left_00004_00007_00005)
3561 -3562 0
-3561 3562 0
3562 -3561 0
-3562 3561 0
c (max_left_00004_00007_00005<=max_left_00004_00007_00006)
-3562 3563 0
c (variant_fields_00004_00007_00006<=max_left_00004_00007_00006)
7814 3563 0
c (SATLiteral(12645) \/ SATLiteral(12646))
12645 12646 0
c (max_left_00004_00007_00006<=max_left_00004_00007_00007)
-3563 3564 0
c (variant_fields_00004_00007_00007<=max_left_00004_00007_00007)
7829 3564 0
c (SATLiteral(12647) \/ SATLiteral(12648))
12647 12648 0
c (max_left_00004_00007_00007<=max_left_00004_00007_00008)
-3564 3565 0
c (variant_fields_00004_00007_00008<=max_left_00004_00007_00008)
7844 3565 0
c (SATLiteral(12649) \/ SATLiteral(12650))
12649 12650 0
c (max_left_00004_00007_00008<=max_left_00004_00007_00009)
-3565 3566 0
c (max_left_00004_00007_00008=max_left_00004_00007_00009)
3565 -3566 0
-3565 3566 0
3566 -3565 0
-3566 3565 0
c (variant_fields_00004_00008_00001<=max_left_00004_00008_00001)
7847 -3568 0
7848 -3569 0
7850 -3571 0
7852 -3573 0
7854 -3575 0
7856 -3577 0
7858 -3579 0
7860 -3581 0
c (variant_fields_00004_00008_00001=max_left_00004_00008_00001)
-7847 3568 0
-7849 3570 0
-7851 3572 0
-7853 3574 0
-7855 3576 0
-7857 3578 0
-7859 3580 0
-7861 3582 0
7860 -3581 0
-3568 7847 0
-3570 7849 0
-3572 7851 0
-3574 7853 0
-3576 7855 0
-3578 7857 0
-3580 7859 0
-3582 7861 0
3581 -7860 0
c (max_left_00004_00008_00001<=max_left_00004_00008_00002)
3568 -3583 0
3569 -3584 0
3571 -3586 0
3573 -3588 0
3575 -3590 0
3577 -3592 0
3579 -3594 0
3581 -3596 0
c (variant_fields_00004_00008_00002<=max_left_00004_00008_00002)
7862 -3583 0
7863 -3584 0
7865 -3586 0
7867 -3588 0
7869 -3590 0
7871 -3592 0
7873 -3594 0
7875 -3596 0
c (SATLiteral(12651) \/ SATLiteral(12652))
12651 12652 0
c (max_left_00004_00008_00002<=max_left_00004_00008_00003)
3583 -3598 0
3584 -3599 0
3586 -3601 0
3588 -3603 0
3590 -3605 0
3592 -3607 0
3594 -3609 0
3596 -3611 0
c (variant_fields_00004_00008_00003<=max_left_00004_00008_00003)
7877 -3598 0
7878 -3599 0
7880 -3601 0
7882 -3603 0
7884 -3605 0
7886 -3607 0
7888 -3609 0
7890 -3611 0
c (SATLiteral(12653) \/ SATLiteral(12654))
12653 12654 0
c (max_left_00004_00008_00003<=max_left_00004_00008_00004)
3598 -3613 0
3599 -3614 0
3601 -3616 0
3603 -3618 0
3605 -3620 0
3607 -3622 0
3609 -3624 0
3611 -3626 0
c (variant_fields_00004_00008_00004<=max_left_00004_00008_00004)
7892 -3613 0
7893 -3614 0
7895 -3616 0
7897 -3618 0
7899 -3620 0
7901 -3622 0
7903 -3624 0
7905 -3626 0
c (SATLiteral(12655) \/ SATLiteral(12656))
12655 12656 0
c (max_left_00004_00008_00004<=max_left_00004_00008_00005)
3613 -3628 0
3614 -3629 0
3616 -3631 0
3618 -3633 0
3620 -3635 0
3622 -3637 0
3624 -3639 0
3626 -3641 0
c (variant_fields_00004_00008_00005<=max_left_00004_00008_00005)
7907 -3628 0
7908 -3629 0
7910 -3631 0
7912 -3633 0
7914 -3635 0
7916 -3637 0
7918 -3639 0
7920 -3641 0
c (SATLiteral(12657) \/ SATLiteral(12658))
12657 12658 0
c (max_left_00004_00008_00005<=max_left_00004_00008_00006)
3631 -3643 0
3633 -3644 0
3635 -3646 0
3637 -3648 0
3639 -3650 0
3641 -3652 0
c (SATLiteral(12659) \/ SATLiteral(12660))
12659 12660 0
c (max_left_00004_00008_00006<=max_left_00004_00008_00007)
3643 -3654 0
3644 -3655 0
3646 -3657 0
3648 -3659 0
3650 -3661 0
3652 -3663 0
c (variant_fields_00004_00008_00007<=max_left_00004_00008_00007)
7926 -3654 0
7928 -3655 0
7930 -3657 0
7932 -3659 0
7934 -3661 0
7936 -3663 0
c (SATLiteral(12661) \/ SATLiteral(12662))
12661 12662 0
c (max_left_00004_00008_00007<=max_left_00004_00008_00008)
3661 -3665 0
3663 -3666 0
c (SATLiteral(12663) \/ SATLiteral(12664))
12663 12664 0
c (max_left_00004_00008_00008<=max_left_00004_00008_00009)
3665 -3668 0
3666 -3669 0
c (variant_fields_00004_00008_00009<=max_left_00004_00008_00009)
7950 -3668 0
7952 -3669 0
c (SATLiteral(12665) \/ SATLiteral(12666))
12665 12666 0
c (variant_fields_00004_00009_00001<=max_left_00004_00009_00001)
7954 -3672 0
7955 -3673 0
7957 -3675 0
7959 -3677 0
7961 -3679 0
7963 -3681 0
7965 -3683 0
7967 -3685 0
c (variant_fields_00004_00009_00001=max_left_00004_00009_00001)
-7954 3672 0
-7956 3674 0
-7958 3676 0
-7960 3678 0
-7962 3680 0
-7964 3682 0
-7966 3684 0
-7968 3686 0
7967 -3685 0
-3672 7954 0
-3674 7956 0
-3676 7958 0
-3678 7960 0
-3680 7962 0
-3682 7964 0
-3684 7966 0
-3686 7968 0
3685 -7967 0
c (max_left_00004_00009_00001<=max_left_00004_00009_00002)
3672 -3687 0
3673 -3688 0
3675 -3690 0
3677 -3692 0
3679 -3694 0
3681 -3696 0
3683 -3698 0
3685 -3700 0
c (variant_fields_00004_00009_00002<=max_left_00004_00009_00002)
7969 -3687 0
7970 -3688 0
7972 -3690 0
7974 -3692 0
7976 -3694 0
7978 -3696 0
7980 -3698 0
7982 -3700 0
c (SATLiteral(12667) \/ SATLiteral(12668))
12667 12668 0
c (max_left_00004_00009_00002<=max_left_00004_00009_00003)
3698 -3702 0
3700 -3703 0
c (SATLiteral(12669) \/ SATLiteral(12670))
12669 12670 0
c (max_left_00004_00009_00003<=max_left_00004_00009_00004)
3702 -3705 0
3703 -3706 0
c (variant_fields_00004_00009_00004<=max_left_00004_00009_00004)
7996 -3705 0
7998 -3706 0
c (SATLiteral(12671) \/ SATLiteral(12672))
12671 12672 0
c (max_left_00004_00009_00004<=max_left_00004_00009_00005)
3705 -3708 0
3706 -3709 0
c (max_left_00004_00009_00004=max_left_00004_00009_00005)
-3705 3708 0
-3707 3710 0
3706 -3709 0
-3708 3705 0
-3710 3707 0
3709 -3706 0
c (max_left_00004_00009_00005<=max_left_00004_00009_00006)
3708 -3711 0
3709 -3712 0
c (variant_fields_00004_00009_00006<=max_left_00004_00009_00006)
8012 -3711 0
8014 -3712 0
c (SATLiteral(12673) \/ SATLiteral(12674))
12673 12674 0
c (max_left_00004_00009_00006<=max_left_00004_00009_00007)
3711 -3714 0
3712 -3715 0
c (variant_fields_00004_00009_00007<=max_left_00004_00009_00007)
8027 -3714 0
8029 -3715 0
c (SATLiteral(12675) \/ SATLiteral(12676))
12675 12676 0
c (max_left_00004_00009_00007<=max_left_00004_00009_00008)
3714 -3717 0
3715 -3718 0
c (variant_fields_00004_00009_00008<=max_left_00004_00009_00008)
8042 -3717 0
8044 -3718 0
c (SATLiteral(12677) \/ SATLiteral(12678))
12677 12678 0
c (max_left_00004_00009_00008<=max_left_00004_00009_00009)
3717 -3720 0
3718 -3721 0
c (variant_fields_00004_00009_00009<=max_left_00004_00009_00009)
8057 -3720 0
8059 -3721 0
c (SATLiteral(12679) \/ SATLiteral(12680))
12679 12680 0
c (( - aux449 + SATLiteral(2) + SATLiteral(108))<=0)
-108 -8510 0
-2 -8510 0
-2 -108 -8511 0
c (0<=( - aux449 + SATLiteral(2) + SATLiteral(108)))
108 8511 0
2 8511 0
2 108 8510 0
c (( - aux450 + SATLiteral(17) + SATLiteral(93))<=0)
-93 -8513 0
-17 -8513 0
-17 -93 -8514 0
c (0<=( - aux450 + SATLiteral(17) + SATLiteral(93)))
93 8514 0
17 8514 0
17 93 8513 0
c (( - aux451 + SATLiteral(47) + SATLiteral(77))<=0)
-77 -8516 0
-47 -8516 0
-47 -77 -8517 0
c (0<=( - aux451 + SATLiteral(47) + SATLiteral(77)))
77 8517 0
47 8517 0
47 77 8516 0
c (( - aux452 + SATLiteral(32) + SATLiteral(62))<=0)
-62 -8519 0
-32 -8519 0
-32 -62 -8520 0
c (0<=( - aux452 + SATLiteral(32) + SATLiteral(62)))
62 8520 0
32 8520 0
32 62 8519 0
c ((aux449 + aux452 - aux453)<=0)
8519 -8522 0
8520 -8523 0
8510 -8522 0
8510 8519 -8523 0
8510 8520 -8525 0
8511 -8523 0
8511 8519 -8525 0
8511 8520 -8527 0
c (0<=(aux449 + aux452 - aux453))
-8520 8527 0
-8519 8525 0
-8511 8527 0
-8511 -8520 8525 0
-8511 -8519 8523 0
-8510 8525 0
-8510 -8520 8523 0
-8510 -8519 8522 0
c (( - aux454 + SATLiteral(3) + SATLiteral(109))<=0)
-109 -8529 0
-3 -8529 0
-3 -109 -8530 0
c (0<=( - aux454 + SATLiteral(3) + SATLiteral(109)))
109 8530 0
3 8530 0
3 109 8529 0
c (( - aux455 + SATLiteral(18) + SATLiteral(94))<=0)
-94 -8532 0
-18 -8532 0
-18 -94 -8533 0
c (0<=( - aux455 + SATLiteral(18) + SATLiteral(94)))
94 8533 0
18 8533 0
18 94 8532 0
c (( - aux456 + SATLiteral(48) + SATLiteral(78))<=0)
-78 -8535 0
-48 -8535 0
-48 -78 -8536 0
c (0<=( - aux456 + SATLiteral(48) + SATLiteral(78)))
78 8536 0
48 8536 0
48 78 8535 0
c (( - aux457 + SATLiteral(33) + SATLiteral(63))<=0)
-63 -8538 0
-33 -8538 0
-33 -63 -8539 0
c (0<=( - aux457 + SATLiteral(33) + SATLiteral(63)))
63 8539 0
33 8539 0
33 63 8538 0
c ((aux454 + aux457 - aux458)<=0)
8538 -8541 0
8539 -8542 0
8529 -8541 0
8529 8538 -8542 0
8529 8539 -8544 0
8530 -8542 0
8530 8538 -8544 0
8530 8539 -8546 0
c (0<=(aux454 + aux457 - aux458))
-8539 8546 0
-8538 8544 0
-8530 8546 0
-8530 -8539 8544 0
-8530 -8538 8542 0
-8529 8544 0
-8529 -8539 8542 0
-8529 -8538 8541 0
c (( - aux459 + SATLiteral(4) + SATLiteral(110))<=0)
-110 -8548 0
-4 -8548 0
-4 -110 -8549 0
c (0<=( - aux459 + SATLiteral(4) + SATLiteral(110)))
110 8549 0
4 8549 0
4 110 8548 0
c (( - aux460 + SATLiteral(19) + SATLiteral(95))<=0)
-95 -8551 0
-19 -8551 0
-19 -95 -8552 0
c (0<=( - aux460 + SATLiteral(19) + SATLiteral(95)))
95 8552 0
19 8552 0
19 95 8551 0
c (( - aux461 + SATLiteral(49) + SATLiteral(79))<=0)
-79 -8554 0
-49 -8554 0
-49 -79 -8555 0
c (0<=( - aux461 + SATLiteral(49) + SATLiteral(79)))
79 8555 0
49 8555 0
49 79 8554 0
c (( - aux462 + SATLiteral(34) + SATLiteral(64))<=0)
-64 -8557 0
-34 -8557 0
-34 -64 -8558 0
c (0<=( - aux462 + SATLiteral(34) + SATLiteral(64)))
64 8558 0
34 8558 0
34 64 8557 0
c ((aux459 + aux462 - aux463)<=0)
8557 -8560 0
8558 -8561 0
8548 -8560 0
8548 8557 -8561 0
8548 8558 -8563 0
8549 -8561 0
8549 8557 -8563 0
8549 8558 -8565 0
c (0<=(aux459 + aux462 - aux463))
-8558 8565 0
-8557 8563 0
-8549 8565 0
-8549 -8558 8563 0
-8549 -8557 8561 0
-8548 8563 0
-8548 -8558 8561 0
-8548 -8557 8560 0
c (( - aux464 + SATLiteral(5) + SATLiteral(111))<=0)
-111 -8567 0
-5 -8567 0
-5 -111 -8568 0
c (0<=( - aux464 + SATLiteral(5) + SATLiteral(111)))
111 8568 0
5 8568 0
5 111 8567 0
c (( - aux465 + SATLiteral(20) + SATLiteral(96))<=0)
-96 -8570 0
-20 -8570 0
-20 -96 -8571 0
c (0<=( - aux465 + SATLiteral(20) + SATLiteral(96)))
96 8571 0
20 8571 0
20 96 8570 0
c (( - aux466 + SATLiteral(50) + SATLiteral(80))<=0)
-80 -8573 0
-50 -8573 0
-50 -80 -8574 0
c (0<=( - aux466 + SATLiteral(50) + SATLiteral(80)))
80 8574 0
50 8574 0
50 80 8573 0
c (( - aux467 + SATLiteral(35) + SATLiteral(65))<=0)
-65 -8576 0
-35 -8576 0
-35 -65 -8577 0
c (0<=( - aux467 + SATLiteral(35) + SATLiteral(65)))
65 8577 0
35 8577 0
35 65 8576 0
c ((aux464 + aux467 - aux468)<=0)
8576 -8579 0
8577 -8580 0
8567 -8579 0
8567 8576 -8580 0
8567 8577 -8582 0
8568 -8580 0
8568 8576 -8582 0
8568 8577 -8584 0
c (0<=(aux464 + aux467 - aux468))
-8577 8584 0
-8576 8582 0
-8568 8584 0
-8568 -8577 8582 0
-8568 -8576 8580 0
-8567 8582 0
-8567 -8577 8580 0
-8567 -8576 8579 0
c (( - aux469 + SATLiteral(6) + SATLiteral(112))<=0)
-112 -8586 0
-6 -8586 0
-6 -112 -8587 0
c (0<=( - aux469 + SATLiteral(6) + SATLiteral(112)))
112 8587 0
6 8587 0
6 112 8586 0
c (( - aux470 + SATLiteral(21) + SATLiteral(97))<=0)
-97 -8589 0
-21 -8589 0
-21 -97 -8590 0
c (0<=( - aux470 + SATLiteral(21) + SATLiteral(97)))
97 8590 0
21 8590 0
21 97 8589 0
c (( - aux471 + SATLiteral(51) + SATLiteral(92))<=0)
8592 -51 -92 0
c (0<=( - aux471 + SATLiteral(51) + SATLiteral(92)))
51 92 0
-8592 92 0
-8592 51 0
c ((aux471 - aux472 + SATLiteral(81))<=0)
-81 -8593 0
-8592 -8593 0
-8592 -81 -8594 0
c (0<=(aux471 - aux472 + SATLiteral(81)))
81 8594 0
8592 8594 0
8592 81 8593 0
c (( - aux473 + SATLiteral(36) + SATLiteral(66))<=0)
-66 -8596 0
-36 -8596 0
-36 -66 -8597 0
c (0<=( - aux473 + SATLiteral(36) + SATLiteral(66)))
66 8597 0
36 8597 0
36 66 8596 0
c ((aux469 + aux473 - aux474)<=0)
8596 -8599 0
8597 -8600 0
8586 -8599 0
8586 8596 -8600 0
8586 8597 -8602 0
8587 -8600 0
8587 8596 -8602 0
8587 8597 -8604 0
c (0<=(aux469 + aux473 - aux474))
-8597 8604 0
-8596 8602 0
-8587 8604 0
-8587 -8597 8602 0
-8587 -8596 8600 0
-8586 8602 0
-8586 -8597 8600 0
-8586 -8596 8599 0
c (( - aux475 + SATLiteral(7) + SATLiteral(113))<=0)
-113 -8606 0
-7 -8606 0
-7 -113 -8607 0
c (0<=( - aux475 + SATLiteral(7) + SATLiteral(113)))
113 8607 0
7 8607 0
7 113 8606 0
c (( - aux476 + SATLiteral(22) + SATLiteral(98))<=0)
-98 -8609 0
-22 -8609 0
-22 -98 -8610 0
c (0<=( - aux476 + SATLiteral(22) + SATLiteral(98)))
98 8610 0
22 8610 0
22 98 8609 0
c (( - aux477 + SATLiteral(52) + SATLiteral(82))<=0)
-82 -8612 0
-52 -8612 0
-52 -82 -8613 0
c (0<=( - aux477 + SATLiteral(52) + SATLiteral(82)))
82 8613 0
52 8613 0
52 82 8612 0
c (( - aux478 + SATLiteral(37) + SATLiteral(67))<=0)
-67 -8615 0
-37 -8615 0
-37 -67 -8616 0
c (0<=( - aux478 + SATLiteral(37) + SATLiteral(67)))
67 8616 0
37 8616 0
37 67 8615 0
c ((aux475 + aux478 - aux479)<=0)
8615 -8618 0
8616 -8619 0
8606 -8618 0
8606 8615 -8619 0
8606 8616 -8621 0
8607 -8619 0
8607 8615 -8621 0
8607 8616 -8623 0
c (0<=(aux475 + aux478 - aux479))
-8616 8623 0
-8615 8621 0
-8607 8623 0
-8607 -8616 8621 0
-8607 -8615 8619 0
-8606 8621 0
-8606 -8616 8619 0
-8606 -8615 8618 0
c (( - aux480 + SATLiteral(8) + SATLiteral(114))<=0)
-114 -8625 0
-8 -8625 0
-8 -114 -8626 0
c (0<=( - aux480 + SATLiteral(8) + SATLiteral(114)))
114 8626 0
8 8626 0
8 114 8625 0
c (( - aux481 + SATLiteral(23) + SATLiteral(99))<=0)
-99 -8628 0
-23 -8628 0
-23 -99 -8629 0
c (0<=( - aux481 + SATLiteral(23) + SATLiteral(99)))
99 8629 0
23 8629 0
23 99 8628 0
c (( - aux482 + SATLiteral(53) + SATLiteral(83))<=0)
-83 -8631 0
-53 -8631 0
-53 -83 -8632 0
c (0<=( - aux482 + SATLiteral(53) + SATLiteral(83)))
83 8632 0
53 8632 0
53 83 8631 0
c (( - aux483 + SATLiteral(38) + SATLiteral(68))<=0)
-68 -8634 0
-38 -8634 0
-38 -68 -8635 0
c (0<=( - aux483 + SATLiteral(38) + SATLiteral(68)))
68 8635 0
38 8635 0
38 68 8634 0
c ((aux480 + aux483 - aux484)<=0)
8634 -8637 0
8635 -8638 0
8625 -8637 0
8625 8634 -8638 0
8625 8635 -8640 0
8626 -8638 0
8626 8634 -8640 0
8626 8635 -8642 0
c (0<=(aux480 + aux483 - aux484))
-8635 8642 0
-8634 8640 0
-8626 8642 0
-8626 -8635 8640 0
-8626 -8634 8638 0
-8625 8640 0
-8625 -8635 8638 0
-8625 -8634 8637 0
c (( - aux485 + SATLiteral(9) + SATLiteral(115))<=0)
-115 -8644 0
-9 -8644 0
-9 -115 -8645 0
c (0<=( - aux485 + SATLiteral(9) + SATLiteral(115)))
115 8645 0
9 8645 0
9 115 8644 0
c (( - aux486 + SATLiteral(24) + SATLiteral(100))<=0)
-100 -8647 0
-24 -8647 0
-24 -100 -8648 0
c (0<=( - aux486 + SATLiteral(24) + SATLiteral(100)))
100 8648 0
24 8648 0
24 100 8647 0
c (( - aux487 + SATLiteral(54) + SATLiteral(84))<=0)
-84 -8650 0
-54 -8650 0
-54 -84 -8651 0
c (0<=( - aux487 + SATLiteral(54) + SATLiteral(84)))
84 8651 0
54 8651 0
54 84 8650 0
c (( - aux488 + SATLiteral(39) + SATLiteral(69))<=0)
-69 -8653 0
-39 -8653 0
-39 -69 -8654 0
c (0<=( - aux488 + SATLiteral(39) + SATLiteral(69)))
69 8654 0
39 8654 0
39 69 8653 0
c ((aux485 + aux488 - aux489)<=0)
8653 -8656 0
8654 -8657 0
8644 -8656 0
8644 8653 -8657 0
8644 8654 -8659 0
8645 -8657 0
8645 8653 -8659 0
8645 8654 -8661 0
c (0<=(aux485 + aux488 - aux489))
-8654 8661 0
-8653 8659 0
-8645 8661 0
-8645 -8654 8659 0
-8645 -8653 8657 0
-8644 8659 0
-8644 -8654 8657 0
-8644 -8653 8656 0
c (( - aux490 + SATLiteral(10) + SATLiteral(116))<=0)
-116 -8663 0
-10 -8663 0
-10 -116 -8664 0
c (0<=( - aux490 + SATLiteral(10) + SATLiteral(116)))
116 8664 0
10 8664 0
10 116 8663 0
c (( - aux491 + SATLiteral(25) + SATLiteral(101))<=0)
-101 -8666 0
-25 -8666 0
-25 -101 -8667 0
c (0<=( - aux491 + SATLiteral(25) + SATLiteral(101)))
101 8667 0
25 8667 0
25 101 8666 0
c (( - aux492 + SATLiteral(55) + SATLiteral(85))<=0)
-85 -8669 0
-55 -8669 0
-55 -85 -8670 0
c (0<=( - aux492 + SATLiteral(55) + SATLiteral(85)))
85 8670 0
55 8670 0
55 85 8669 0
c (( - aux493 + SATLiteral(40) + SATLiteral(70))<=0)
-70 -8672 0
-40 -8672 0
-40 -70 -8673 0
c (0<=( - aux493 + SATLiteral(40) + SATLiteral(70)))
70 8673 0
40 8673 0
40 70 8672 0
c ((aux490 + aux493 - aux494)<=0)
8672 -8675 0
8673 -8676 0
8663 -8675 0
8663 8672 -8676 0
8663 8673 -8678 0
8664 -8676 0
8664 8672 -8678 0
8664 8673 -8680 0
c (0<=(aux490 + aux493 - aux494))
-8673 8680 0
-8672 8678 0
-8664 8680 0
-8664 -8673 8678 0
-8664 -8672 8676 0
-8663 8678 0
-8663 -8673 8676 0
-8663 -8672 8675 0
c (( - aux495 + SATLiteral(123) + SATLiteral(229))<=0)
-229 -8682 0
-123 -8682 0
-123 -229 -8683 0
c (0<=( - aux495 + SATLiteral(123) + SATLiteral(229)))
229 8683 0
123 8683 0
123 229 8682 0
c (( - aux496 + SATLiteral(138) + SATLiteral(213))<=0)
-213 -8685 0
-138 -8685 0
-138 -213 -8686 0
c (0<=( - aux496 + SATLiteral(138) + SATLiteral(213)))
213 8686 0
138 8686 0
138 213 8685 0
c (( - aux497 + SATLiteral(168) + SATLiteral(198))<=0)
-198 -8688 0
-168 -8688 0
-168 -198 -8689 0
c (0<=( - aux497 + SATLiteral(168) + SATLiteral(198)))
198 8689 0
168 8689 0
168 198 8688 0
c (( - aux498 + SATLiteral(153) + SATLiteral(183))<=0)
-183 -8691 0
-153 -8691 0
-153 -183 -8692 0
c (0<=( - aux498 + SATLiteral(153) + SATLiteral(183)))
183 8692 0
153 8692 0
153 183 8691 0
c ((aux495 + aux498 - aux499)<=0)
8691 -8694 0
8692 -8695 0
8682 -8694 0
8682 8691 -8695 0
8682 8692 -8697 0
8683 -8695 0
8683 8691 -8697 0
8683 8692 -8699 0
c (0<=(aux495 + aux498 - aux499))
-8692 8699 0
-8691 8697 0
-8683 8699 0
-8683 -8692 8697 0
-8683 -8691 8695 0
-8682 8697 0
-8682 -8692 8695 0
-8682 -8691 8694 0
c (( - aux500 + SATLiteral(124) + SATLiteral(230))<=0)
-230 -8701 0
-124 -8701 0
-124 -230 -8702 0
c (0<=( - aux500 + SATLiteral(124) + SATLiteral(230)))
230 8702 0
124 8702 0
124 230 8701 0
c (( - aux501 + SATLiteral(139) + SATLiteral(214))<=0)
-214 -8704 0
-139 -8704 0
-139 -214 -8705 0
c (0<=( - aux501 + SATLiteral(139) + SATLiteral(214)))
214 8705 0
139 8705 0
139 214 8704 0
c (( - aux502 + SATLiteral(169) + SATLiteral(199))<=0)
-199 -8707 0
-169 -8707 0
-169 -199 -8708 0
c (0<=( - aux502 + SATLiteral(169) + SATLiteral(199)))
199 8708 0
169 8708 0
169 199 8707 0
c (( - aux503 + SATLiteral(154) + SATLiteral(184))<=0)
-184 -8710 0
-154 -8710 0
-154 -184 -8711 0
c (0<=( - aux503 + SATLiteral(154) + SATLiteral(184)))
184 8711 0
154 8711 0
154 184 8710 0
c ((aux500 + aux503 - aux504)<=0)
8710 -8713 0
8711 -8714 0
8701 -8713 0
8701 8710 -8714 0
8701 8711 -8716 0
8702 -8714 0
8702 8710 -8716 0
8702 8711 -8718 0
c (0<=(aux500 + aux503 - aux504))
-8711 8718 0
-8710 8716 0
-8702 8718 0
-8702 -8711 8716 0
-8702 -8710 8714 0
-8701 8716 0
-8701 -8711 8714 0
-8701 -8710 8713 0
c (( - aux505 + SATLiteral(125) + SATLiteral(231))<=0)
-231 -8720 0
-125 -8720 0
-125 -231 -8721 0
c (0<=( - aux505 + SATLiteral(125) + SATLiteral(231)))
231 8721 0
125 8721 0
125 231 8720 0
c (( - aux506 + SATLiteral(140) + SATLiteral(215))<=0)
-215 -8723 0
-140 -8723 0
-140 -215 -8724 0
c (0<=( - aux506 + SATLiteral(140) + SATLiteral(215)))
215 8724 0
140 8724 0
140 215 8723 0
c (( - aux507 + SATLiteral(170) + SATLiteral(200))<=0)
-200 -8726 0
-170 -8726 0
-170 -200 -8727 0
c (0<=( - aux507 + SATLiteral(170) + SATLiteral(200)))
200 8727 0
170 8727 0
170 200 8726 0
c (( - aux508 + SATLiteral(155) + SATLiteral(185))<=0)
-185 -8729 0
-155 -8729 0
-155 -185 -8730 0
c (0<=( - aux508 + SATLiteral(155) + SATLiteral(185)))
185 8730 0
155 8730 0
155 185 8729 0
c ((aux505 + aux508 - aux509)<=0)
8729 -8732 0
8730 -8733 0
8720 -8732 0
8720 8729 -8733 0
8720 8730 -8735 0
8721 -8733 0
8721 8729 -8735 0
8721 8730 -8737 0
c (0<=(aux505 + aux508 - aux509))
-8730 8737 0
-8729 8735 0
-8721 8737 0
-8721 -8730 8735 0
-8721 -8729 8733 0
-8720 8735 0
-8720 -8730 8733 0
-8720 -8729 8732 0
c (( - aux510 + SATLiteral(126) + SATLiteral(232))<=0)
-232 -8739 0
-126 -8739 0
-126 -232 -8740 0
c (0<=( - aux510 + SATLiteral(126) + SATLiteral(232)))
232 8740 0
126 8740 0
126 232 8739 0
c (( - aux511 + SATLiteral(141) + SATLiteral(216))<=0)
-216 -8742 0
-141 -8742 0
-141 -216 -8743 0
c (0<=( - aux511 + SATLiteral(141) + SATLiteral(216)))
216 8743 0
141 8743 0
141 216 8742 0
c (( - aux512 + SATLiteral(171) + SATLiteral(201))<=0)
-201 -8745 0
-171 -8745 0
-171 -201 -8746 0
c (0<=( - aux512 + SATLiteral(171) + SATLiteral(201)))
201 8746 0
171 8746 0
171 201 8745 0
c (( - aux513 + SATLiteral(156) + SATLiteral(186))<=0)
-186 -8748 0
-156 -8748 0
-156 -186 -8749 0
c (0<=( - aux513 + SATLiteral(156) + SATLiteral(186)))
186 8749 0
156 8749 0
156 186 8748 0
c ((aux510 + aux513 - aux514)<=0)
8748 -8751 0
8749 -8752 0
8739 -8751 0
8739 8748 -8752 0
8739 8749 -8754 0
8740 -8752 0
8740 8748 -8754 0
8740 8749 -8756 0
c (0<=(aux510 + aux513 - aux514))
-8749 8756 0
-8748 8754 0
-8740 8756 0
-8740 -8749 8754 0
-8740 -8748 8752 0
-8739 8754 0
-8739 -8749 8752 0
-8739 -8748 8751 0
c (( - aux515 + SATLiteral(127) + SATLiteral(233))<=0)
-233 -8758 0
-127 -8758 0
-127 -233 -8759 0
c (0<=( - aux515 + SATLiteral(127) + SATLiteral(233)))
233 8759 0
127 8759 0
127 233 8758 0
c (( - aux516 + SATLiteral(142) + SATLiteral(217))<=0)
-217 -8761 0
-142 -8761 0
-142 -217 -8762 0
c (0<=( - aux516 + SATLiteral(142) + SATLiteral(217)))
217 8762 0
142 8762 0
142 217 8761 0
c (( - aux517 + SATLiteral(172) + SATLiteral(202))<=0)
-202 -8764 0
-172 -8764 0
-172 -202 -8765 0
c (0<=( - aux517 + SATLiteral(172) + SATLiteral(202)))
202 8765 0
172 8765 0
172 202 8764 0
c (( - aux518 + SATLiteral(157) + SATLiteral(187))<=0)
-187 -8767 0
-157 -8767 0
-157 -187 -8768 0
c (0<=( - aux518 + SATLiteral(157) + SATLiteral(187)))
187 8768 0
157 8768 0
157 187 8767 0
c ((aux515 + aux518 - aux519)<=0)
8767 -8770 0
8768 -8771 0
8758 -8770 0
8758 8767 -8771 0
8758 8768 -8773 0
8759 -8771 0
8759 8767 -8773 0
8759 8768 -8775 0
c (0<=(aux515 + aux518 - aux519))
-8768 8775 0
-8767 8773 0
-8759 8775 0
-8759 -8768 8773 0
-8759 -8767 8771 0
-8758 8773 0
-8758 -8768 8771 0
-8758 -8767 8770 0
c (( - aux520 + SATLiteral(128) + SATLiteral(234))<=0)
-234 -8777 0
-128 -8777 0
-128 -234 -8778 0
c (0<=( - aux520 + SATLiteral(128) + SATLiteral(234)))
234 8778 0
128 8778 0
128 234 8777 0
c (( - aux521 + SATLiteral(143) + SATLiteral(218))<=0)
-218 -8780 0
-143 -8780 0
-143 -218 -8781 0
c (0<=( - aux521 + SATLiteral(143) + SATLiteral(218)))
218 8781 0
143 8781 0
143 218 8780 0
c (( - aux522 + SATLiteral(173) + SATLiteral(203))<=0)
-203 -8783 0
-173 -8783 0
-173 -203 -8784 0
c (0<=( - aux522 + SATLiteral(173) + SATLiteral(203)))
203 8784 0
173 8784 0
173 203 8783 0
c (( - aux523 + SATLiteral(158) + SATLiteral(188))<=0)
-188 -8786 0
-158 -8786 0
-158 -188 -8787 0
c (0<=( - aux523 + SATLiteral(158) + SATLiteral(188)))
188 8787 0
158 8787 0
158 188 8786 0
c ((aux520 + aux523 - aux524)<=0)
8786 -8789 0
8787 -8790 0
8777 -8789 0
8777 8786 -8790 0
8777 8787 -8792 0
8778 -8790 0
8778 8786 -8792 0
8778 8787 -8794 0
c (0<=(aux520 + aux523 - aux524))
-8787 8794 0
-8786 8792 0
-8778 8794 0
-8778 -8787 8792 0
-8778 -8786 8790 0
-8777 8792 0
-8777 -8787 8790 0
-8777 -8786 8789 0
c (( - aux525 + SATLiteral(129) + SATLiteral(235))<=0)
-235 -8796 0
-129 -8796 0
-129 -235 -8797 0
c (0<=( - aux525 + SATLiteral(129) + SATLiteral(235)))
235 8797 0
129 8797 0
129 235 8796 0
c (( - aux526 + SATLiteral(144) + SATLiteral(228))<=0)
8799 -144 -228 0
c (0<=( - aux526 + SATLiteral(144) + SATLiteral(228)))
144 228 0
-8799 228 0
-8799 144 0
c ((aux526 - aux527 + SATLiteral(219))<=0)
-219 -8800 0
-8799 -8800 0
-8799 -219 -8801 0
c (0<=(aux526 - aux527 + SATLiteral(219)))
219 8801 0
8799 8801 0
8799 219 8800 0
c (( - aux528 + SATLiteral(174) + SATLiteral(204))<=0)
-204 -8803 0
-174 -8803 0
-174 -204 -8804 0
c (0<=( - aux528 + SATLiteral(174) + SATLiteral(204)))
204 8804 0
174 8804 0
174 204 8803 0
c (( - aux529 + SATLiteral(159) + SATLiteral(189))<=0)
-189 -8806 0
-159 -8806 0
-159 -189 -8807 0
c (0<=( - aux529 + SATLiteral(159) + SATLiteral(189)))
189 8807 0
159 8807 0
159 189 8806 0
c ((aux525 + aux529 - aux530)<=0)
8806 -8809 0
8807 -8810 0
8796 -8809 0
8796 8806 -8810 0
8796 8807 -8812 0
8797 -8810 0
8797 8806 -8812 0
8797 8807 -8814 0
c (0<=(aux525 + aux529 - aux530))
-8807 8814 0
-8806 8812 0
-8797 8814 0
-8797 -8807 8812 0
-8797 -8806 8810 0
-8796 8812 0
-8796 -8807 8810 0
-8796 -8806 8809 0
c (( - aux531 + SATLiteral(130) + SATLiteral(236))<=0)
-236 -8816 0
-130 -8816 0
-130 -236 -8817 0
c (0<=( - aux531 + SATLiteral(130) + SATLiteral(236)))
236 8817 0
130 8817 0
130 236 8816 0
c (( - aux532 + SATLiteral(145) + SATLiteral(220))<=0)
-220 -8819 0
-145 -8819 0
-145 -220 -8820 0
c (0<=( - aux532 + SATLiteral(145) + SATLiteral(220)))
220 8820 0
145 8820 0
145 220 8819 0
c (( - aux533 + SATLiteral(175) + SATLiteral(205))<=0)
-205 -8822 0
-175 -8822 0
-175 -205 -8823 0
c (0<=( - aux533 + SATLiteral(175) + SATLiteral(205)))
205 8823 0
175 8823 0
175 205 8822 0
c (( - aux534 + SATLiteral(160) + SATLiteral(190))<=0)
-190 -8825 0
-160 -8825 0
-160 -190 -8826 0
c (0<=( - aux534 + SATLiteral(160) + SATLiteral(190)))
190 8826 0
160 8826 0
160 190 8825 0
c ((aux531 + aux534 - aux535)<=0)
8825 -8828 0
8826 -8829 0
8816 -8828 0
8816 8825 -8829 0
8816 8826 -8831 0
8817 -8829 0
8817 8825 -8831 0
8817 8826 -8833 0
c (0<=(aux531 + aux534 - aux535))
-8826 8833 0
-8825 8831 0
-8817 8833 0
-8817 -8826 8831 0
-8817 -8825 8829 0
-8816 8831 0
-8816 -8826 8829 0
-8816 -8825 8828 0
c (( - aux536 + SATLiteral(131) + SATLiteral(237))<=0)
-237 -8835 0
-131 -8835 0
-131 -237 -8836 0
c (0<=( - aux536 + SATLiteral(131) + SATLiteral(237)))
237 8836 0
131 8836 0
131 237 8835 0
c (( - aux537 + SATLiteral(146) + SATLiteral(221))<=0)
-221 -8838 0
-146 -8838 0
-146 -221 -8839 0
c (0<=( - aux537 + SATLiteral(146) + SATLiteral(221)))
221 8839 0
146 8839 0
146 221 8838 0
c (( - aux538 + SATLiteral(176) + SATLiteral(206))<=0)
-206 -8841 0
-176 -8841 0
-176 -206 -8842 0
c (0<=( - aux538 + SATLiteral(176) + SATLiteral(206)))
206 8842 0
176 8842 0
176 206 8841 0
c (( - aux539 + SATLiteral(161) + SATLiteral(191))<=0)
-191 -8844 0
-161 -8844 0
-161 -191 -8845 0
c (0<=( - aux539 + SATLiteral(161) + SATLiteral(191)))
191 8845 0
161 8845 0
161 191 8844 0
c ((aux536 + aux539 - aux540)<=0)
8844 -8847 0
8845 -8848 0
8835 -8847 0
8835 8844 -8848 0
8835 8845 -8850 0
8836 -8848 0
8836 8844 -8850 0
8836 8845 -8852 0
c (0<=(aux536 + aux539 - aux540))
-8845 8852 0
-8844 8850 0
-8836 8852 0
-8836 -8845 8850 0
-8836 -8844 8848 0
-8835 8850 0
-8835 -8845 8848 0
-8835 -8844 8847 0
c (( - aux541 + SATLiteral(244) + SATLiteral(350))<=0)
-350 -8854 0
-244 -8854 0
-244 -350 -8855 0
c (0<=( - aux541 + SATLiteral(244) + SATLiteral(350)))
350 8855 0
244 8855 0
244 350 8854 0
c (( - aux542 + SATLiteral(259) + SATLiteral(335))<=0)
-335 -8857 0
-259 -8857 0
-259 -335 -8858 0
c (0<=( - aux542 + SATLiteral(259) + SATLiteral(335)))
335 8858 0
259 8858 0
259 335 8857 0
c (( - aux543 + SATLiteral(289) + SATLiteral(320))<=0)
-320 -8860 0
-289 -8860 0
-289 -320 -8861 0
c (0<=( - aux543 + SATLiteral(289) + SATLiteral(320)))
320 8861 0
289 8861 0
289 320 8860 0
c (( - aux544 + SATLiteral(274) + SATLiteral(304))<=0)
-304 -8863 0
-274 -8863 0
-274 -304 -8864 0
c (0<=( - aux544 + SATLiteral(274) + SATLiteral(304)))
304 8864 0
274 8864 0
274 304 8863 0
c ((aux541 + aux544 - aux545)<=0)
8863 -8866 0
8864 -8867 0
8854 -8866 0
8854 8863 -8867 0
8854 8864 -8869 0
8855 -8867 0
8855 8863 -8869 0
8855 8864 -8871 0
c (0<=(aux541 + aux544 - aux545))
-8864 8871 0
-8863 8869 0
-8855 8871 0
-8855 -8864 8869 0
-8855 -8863 8867 0
-8854 8869 0
-8854 -8864 8867 0
-8854 -8863 8866 0
c (( - aux546 + SATLiteral(245) + SATLiteral(351))<=0)
-351 -8873 0
-245 -8873 0
-245 -351 -8874 0
c (0<=( - aux546 + SATLiteral(245) + SATLiteral(351)))
351 8874 0
245 8874 0
245 351 8873 0
c (( - aux547 + SATLiteral(260) + SATLiteral(336))<=0)
-336 -8876 0
-260 -8876 0
-260 -336 -8877 0
c (0<=( - aux547 + SATLiteral(260) + SATLiteral(336)))
336 8877 0
260 8877 0
260 336 8876 0
c (( - aux548 + SATLiteral(290) + SATLiteral(321))<=0)
-321 -8879 0
-290 -8879 0
-290 -321 -8880 0
c (0<=( - aux548 + SATLiteral(290) + SATLiteral(321)))
321 8880 0
290 8880 0
290 321 8879 0
c (( - aux549 + SATLiteral(275) + SATLiteral(305))<=0)
-305 -8882 0
-275 -8882 0
-275 -305 -8883 0
c (0<=( - aux549 + SATLiteral(275) + SATLiteral(305)))
305 8883 0
275 8883 0
275 305 8882 0
c ((aux546 + aux549 - aux550)<=0)
8882 -8885 0
8883 -8886 0
8873 -8885 0
8873 8882 -8886 0
8873 8883 -8888 0
8874 -8886 0
8874 8882 -8888 0
8874 8883 -8890 0
c (0<=(aux546 + aux549 - aux550))
-8883 8890 0
-8882 8888 0
-8874 8890 0
-8874 -8883 8888 0
-8874 -8882 8886 0
-8873 8888 0
-8873 -8883 8886 0
-8873 -8882 8885 0
c (( - aux551 + SATLiteral(246) + SATLiteral(352))<=0)
-352 -8892 0
-246 -8892 0
-246 -352 -8893 0
c (0<=( - aux551 + SATLiteral(246) + SATLiteral(352)))
352 8893 0
246 8893 0
246 352 8892 0
c (( - aux552 + SATLiteral(261) + SATLiteral(337))<=0)
-337 -8895 0
-261 -8895 0
-261 -337 -8896 0
c (0<=( - aux552 + SATLiteral(261) + SATLiteral(337)))
337 8896 0
261 8896 0
261 337 8895 0
c (( - aux553 + SATLiteral(291) + SATLiteral(322))<=0)
-322 -8898 0
-291 -8898 0
-291 -322 -8899 0
c (0<=( - aux553 + SATLiteral(291) + SATLiteral(322)))
322 8899 0
291 8899 0
291 322 8898 0
c (( - aux554 + SATLiteral(276) + SATLiteral(306))<=0)
-306 -8901 0
-276 -8901 0
-276 -306 -8902 0
c (0<=( - aux554 + SATLiteral(276) + SATLiteral(306)))
306 8902 0
276 8902 0
276 306 8901 0
c ((aux551 + aux554 - aux555)<=0)
8901 -8904 0
8902 -8905 0
8892 -8904 0
8892 8901 -8905 0
8892 8902 -8907 0
8893 -8905 0
8893 8901 -8907 0
8893 8902 -8909 0
c (0<=(aux551 + aux554 - aux555))
-8902 8909 0
-8901 8907 0
-8893 8909 0
-8893 -8902 8907 0
-8893 -8901 8905 0
-8892 8907 0
-8892 -8902 8905 0
-8892 -8901 8904 0
c (( - aux556 + SATLiteral(247) + SATLiteral(353))<=0)
-353 -8911 0
-247 -8911 0
-247 -353 -8912 0
c (0<=( - aux556 + SATLiteral(247) + SATLiteral(353)))
353 8912 0
247 8912 0
247 353 8911 0
c (( - aux557 + SATLiteral(262) + SATLiteral(338))<=0)
-338 -8914 0
-262 -8914 0
-262 -338 -8915 0
c (0<=( - aux557 + SATLiteral(262) + SATLiteral(338)))
338 8915 0
262 8915 0
262 338 8914 0
c (( - aux558 + SATLiteral(292) + SATLiteral(323))<=0)
-323 -8917 0
-292 -8917 0
-292 -323 -8918 0
c (0<=( - aux558 + SATLiteral(292) + SATLiteral(323)))
323 8918 0
292 8918 0
292 323 8917 0
c (( - aux559 + SATLiteral(277) + SATLiteral(307))<=0)
-307 -8920 0
-277 -8920 0
-277 -307 -8921 0
c (0<=( - aux559 + SATLiteral(277) + SATLiteral(307)))
307 8921 0
277 8921 0
277 307 8920 0
c ((aux556 + aux559 - aux560)<=0)
8920 -8923 0
8921 -8924 0
8911 -8923 0
8911 8920 -8924 0
8911 8921 -8926 0
8912 -8924 0
8912 8920 -8926 0
8912 8921 -8928 0
c (0<=(aux556 + aux559 - aux560))
-8921 8928 0
-8920 8926 0
-8912 8928 0
-8912 -8921 8926 0
-8912 -8920 8924 0
-8911 8926 0
-8911 -8921 8924 0
-8911 -8920 8923 0
c (( - aux561 + SATLiteral(248) + SATLiteral(354))<=0)
-354 -8930 0
-248 -8930 0
-248 -354 -8931 0
c (0<=( - aux561 + SATLiteral(248) + SATLiteral(354)))
354 8931 0
248 8931 0
248 354 8930 0
c (( - aux562 + SATLiteral(263) + SATLiteral(339))<=0)
-339 -8933 0
-263 -8933 0
-263 -339 -8934 0
c (0<=( - aux562 + SATLiteral(263) + SATLiteral(339)))
339 8934 0
263 8934 0
263 339 8933 0
c (( - aux563 + SATLiteral(293) + SATLiteral(324))<=0)
-324 -8936 0
-293 -8936 0
-293 -324 -8937 0
c (0<=( - aux563 + SATLiteral(293) + SATLiteral(324)))
324 8937 0
293 8937 0
293 324 8936 0
c (( - aux564 + SATLiteral(278) + SATLiteral(308))<=0)
-308 -8939 0
-278 -8939 0
-278 -308 -8940 0
c (0<=( - aux564 + SATLiteral(278) + SATLiteral(308)))
308 8940 0
278 8940 0
278 308 8939 0
c ((aux561 + aux564 - aux565)<=0)
8939 -8942 0
8940 -8943 0
8930 -8942 0
8930 8939 -8943 0
8930 8940 -8945 0
8931 -8943 0
8931 8939 -8945 0
8931 8940 -8947 0
c (0<=(aux561 + aux564 - aux565))
-8940 8947 0
-8939 8945 0
-8931 8947 0
-8931 -8940 8945 0
-8931 -8939 8943 0
-8930 8945 0
-8930 -8940 8943 0
-8930 -8939 8942 0
c (( - aux566 + SATLiteral(249) + SATLiteral(355))<=0)
-355 -8949 0
-249 -8949 0
-249 -355 -8950 0
c (0<=( - aux566 + SATLiteral(249) + SATLiteral(355)))
355 8950 0
249 8950 0
249 355 8949 0
c (( - aux567 + SATLiteral(264) + SATLiteral(340))<=0)
-340 -8952 0
-264 -8952 0
-264 -340 -8953 0
c (0<=( - aux567 + SATLiteral(264) + SATLiteral(340)))
340 8953 0
264 8953 0
264 340 8952 0
c (( - aux568 + SATLiteral(294) + SATLiteral(325))<=0)
-325 -8955 0
-294 -8955 0
-294 -325 -8956 0
c (0<=( - aux568 + SATLiteral(294) + SATLiteral(325)))
325 8956 0
294 8956 0
294 325 8955 0
c (( - aux569 + SATLiteral(309) + SATLiteral(319))<=0)
8958 -309 -319 0
c (0<=( - aux569 + SATLiteral(309) + SATLiteral(319)))
309 319 0
-8958 319 0
-8958 309 0
c ((aux569 - aux570 + SATLiteral(279))<=0)
-279 -8959 0
-8958 -8959 0
-8958 -279 -8960 0
c (0<=(aux569 - aux570 + SATLiteral(279)))
279 8960 0
8958 8960 0
8958 279 8959 0
c ((aux566 + aux570 - aux571)<=0)
8959 -8962 0
8960 -8963 0
8949 -8962 0
8949 8959 -8963 0
8949 8960 -8965 0
8950 -8963 0
8950 8959 -8965 0
8950 8960 -8967 0
c (0<=(aux566 + aux570 - aux571))
-8960 8967 0
-8959 8965 0
-8950 8967 0
-8950 -8960 8965 0
-8950 -8959 8963 0
-8949 8965 0
-8949 -8960 8963 0
-8949 -8959 8962 0
c (( - aux572 + SATLiteral(250) + SATLiteral(356))<=0)
-356 -8969 0
-250 -8969 0
-250 -356 -8970 0
c (0<=( - aux572 + SATLiteral(250) + SATLiteral(356)))
356 8970 0
250 8970 0
250 356 8969 0
c (( - aux573 + SATLiteral(265) + SATLiteral(341))<=0)
-341 -8972 0
-265 -8972 0
-265 -341 -8973 0
c (0<=( - aux573 + SATLiteral(265) + SATLiteral(341)))
341 8973 0
265 8973 0
265 341 8972 0
c (( - aux574 + SATLiteral(295) + SATLiteral(326))<=0)
-326 -8975 0
-295 -8975 0
-295 -326 -8976 0
c (0<=( - aux574 + SATLiteral(295) + SATLiteral(326)))
326 8976 0
295 8976 0
295 326 8975 0
c (( - aux575 + SATLiteral(280) + SATLiteral(310))<=0)
-310 -8978 0
-280 -8978 0
-280 -310 -8979 0
c (0<=( - aux575 + SATLiteral(280) + SATLiteral(310)))
310 8979 0
280 8979 0
280 310 8978 0
c ((aux572 + aux575 - aux576)<=0)
8978 -8981 0
8979 -8982 0
8969 -8981 0
8969 8978 -8982 0
8969 8979 -8984 0
8970 -8982 0
8970 8978 -8984 0
8970 8979 -8986 0
c (0<=(aux572 + aux575 - aux576))
-8979 8986 0
-8978 8984 0
-8970 8986 0
-8970 -8979 8984 0
-8970 -8978 8982 0
-8969 8984 0
-8969 -8979 8982 0
-8969 -8978 8981 0
c (( - aux577 + SATLiteral(251) + SATLiteral(357))<=0)
-357 -8988 0
-251 -8988 0
-251 -357 -8989 0
c (0<=( - aux577 + SATLiteral(251) + SATLiteral(357)))
357 8989 0
251 8989 0
251 357 8988 0
c (( - aux578 + SATLiteral(266) + SATLiteral(342))<=0)
-342 -8991 0
-266 -8991 0
-266 -342 -8992 0
c (0<=( - aux578 + SATLiteral(266) + SATLiteral(342)))
342 8992 0
266 8992 0
266 342 8991 0
c (( - aux579 + SATLiteral(296) + SATLiteral(327))<=0)
-327 -8994 0
-296 -8994 0
-296 -327 -8995 0
c (0<=( - aux579 + SATLiteral(296) + SATLiteral(327)))
327 8995 0
296 8995 0
296 327 8994 0
c (( - aux580 + SATLiteral(281) + SATLiteral(311))<=0)
-311 -8997 0
-281 -8997 0
-281 -311 -8998 0
c (0<=( - aux580 + SATLiteral(281) + SATLiteral(311)))
311 8998 0
281 8998 0
281 311 8997 0
c ((aux577 + aux580 - aux581)<=0)
8997 -9000 0
8998 -9001 0
8988 -9000 0
8988 8997 -9001 0
8988 8998 -9003 0
8989 -9001 0
8989 8997 -9003 0
8989 8998 -9005 0
c (0<=(aux577 + aux580 - aux581))
-8998 9005 0
-8997 9003 0
-8989 9005 0
-8989 -8998 9003 0
-8989 -8997 9001 0
-8988 9003 0
-8988 -8998 9001 0
-8988 -8997 9000 0
c (( - aux582 + SATLiteral(252) + SATLiteral(358))<=0)
-358 -9007 0
-252 -9007 0
-252 -358 -9008 0
c (0<=( - aux582 + SATLiteral(252) + SATLiteral(358)))
358 9008 0
252 9008 0
252 358 9007 0
c (( - aux583 + SATLiteral(267) + SATLiteral(343))<=0)
-343 -9010 0
-267 -9010 0
-267 -343 -9011 0
c (0<=( - aux583 + SATLiteral(267) + SATLiteral(343)))
343 9011 0
267 9011 0
267 343 9010 0
c (( - aux584 + SATLiteral(297) + SATLiteral(328))<=0)
-328 -9013 0
-297 -9013 0
-297 -328 -9014 0
c (0<=( - aux584 + SATLiteral(297) + SATLiteral(328)))
328 9014 0
297 9014 0
297 328 9013 0
c (( - aux585 + SATLiteral(282) + SATLiteral(312))<=0)
-312 -9016 0
-282 -9016 0
-282 -312 -9017 0
c (0<=( - aux585 + SATLiteral(282) + SATLiteral(312)))
312 9017 0
282 9017 0
282 312 9016 0
c ((aux582 + aux585 - aux586)<=0)
9016 -9019 0
9017 -9020 0
9007 -9019 0
9007 9016 -9020 0
9007 9017 -9022 0
9008 -9020 0
9008 9016 -9022 0
9008 9017 -9024 0
c (0<=(aux582 + aux585 - aux586))
-9017 9024 0
-9016 9022 0
-9008 9024 0
-9008 -9017 9022 0
-9008 -9016 9020 0
-9007 9022 0
-9007 -9017 9020 0
-9007 -9016 9019 0
c ((SATLiteral(365) + SATLiteral(457) - aux587)<=0)
-457 -9026 0
-365 -9026 0
-365 -457 -9027 0
c (0<=(SATLiteral(365) + SATLiteral(457) - aux587))
457 9027 0
365 9027 0
365 457 9026 0
c ((SATLiteral(380) + SATLiteral(441) - aux588)<=0)
-441 -9029 0
-380 -9029 0
-380 -441 -9030 0
c (0<=(SATLiteral(380) + SATLiteral(441) - aux588))
441 9030 0
380 9030 0
380 441 9029 0
c ((SATLiteral(396) + SATLiteral(426) - aux589)<=0)
-426 -9032 0
-396 -9032 0
-396 -426 -9033 0
c (0<=(SATLiteral(396) + SATLiteral(426) - aux589))
426 9033 0
396 9033 0
396 426 9032 0
c ((SATLiteral(395) + SATLiteral(411) - aux590)<=0)
-395 -411 9035 0
c (0<=(SATLiteral(395) + SATLiteral(411) - aux590))
411 -9035 0
395 -9035 0
395 411 0
c ((aux588 + aux590 - aux591)<=0)
9029 -9036 0
9030 -9037 0
-9035 -9036 0
-9035 9029 -9037 0
-9035 9030 -9039 0
c (0<=(aux588 + aux590 - aux591))
-9030 9039 0
-9029 9037 0
9035 9039 0
9035 -9030 9037 0
9035 -9029 9036 0
c ((SATLiteral(366) + SATLiteral(458) - aux592)<=0)
-458 -9041 0
-366 -9041 0
-366 -458 -9042 0
c (0<=(SATLiteral(366) + SATLiteral(458) - aux592))
458 9042 0
366 9042 0
366 458 9041 0
c ((SATLiteral(381) + SATLiteral(442) - aux593)<=0)
-442 -9044 0
-381 -9044 0
-381 -442 -9045 0
c (0<=(SATLiteral(381) + SATLiteral(442) - aux593))
442 9045 0
381 9045 0
381 442 9044 0
c ((SATLiteral(412) + SATLiteral(427) - aux594)<=0)
-427 -9047 0
-412 -9047 0
-412 -427 -9048 0
c (0<=(SATLiteral(412) + SATLiteral(427) - aux594))
427 9048 0
412 9048 0
412 427 9047 0
c ((SATLiteral(397) + aux594 - aux595)<=0)
9047 -9050 0
9048 -9051 0
-397 -9050 0
-397 9047 -9051 0
-397 9048 -9053 0
c (0<=(SATLiteral(397) + aux594 - aux595))
-9048 9053 0
-9047 9051 0
397 9053 0
397 -9048 9051 0
397 -9047 9050 0
c ((SATLiteral(367) + SATLiteral(459) - aux596)<=0)
-459 -9055 0
-367 -9055 0
-367 -459 -9056 0
c (0<=(SATLiteral(367) + SATLiteral(459) - aux596))
459 9056 0
367 9056 0
367 459 9055 0
c ((SATLiteral(382) + SATLiteral(456) - aux597)<=0)
-382 -456 9058 0
c (0<=(SATLiteral(382) + SATLiteral(456) - aux597))
456 -9058 0
382 -9058 0
382 456 0
c ((SATLiteral(443) + aux597 - aux598)<=0)
-9058 -9059 0
-443 -9059 0
-443 -9058 -9060 0
c (0<=(SATLiteral(443) + aux597 - aux598))
9058 9060 0
443 9060 0
443 9058 9059 0
c ((SATLiteral(413) + SATLiteral(428) - aux599)<=0)
-428 -9062 0
-413 -9062 0
-413 -428 -9063 0
c (0<=(SATLiteral(413) + SATLiteral(428) - aux599))
428 9063 0
413 9063 0
413 428 9062 0
c ((SATLiteral(398) + aux599 - aux600)<=0)
9062 -9065 0
9063 -9066 0
-398 -9065 0
-398 9062 -9066 0
-398 9063 -9068 0
c (0<=(SATLiteral(398) + aux599 - aux600))
-9063 9068 0
-9062 9066 0
398 9068 0
398 -9063 9066 0
398 -9062 9065 0
c ((SATLiteral(368) + SATLiteral(460) - aux601)<=0)
-460 -9070 0
-368 -9070 0
-368 -460 -9071 0
c (0<=(SATLiteral(368) + SATLiteral(460) - aux601))
460 9071 0
368 9071 0
368 460 9070 0
c ((SATLiteral(383) + SATLiteral(444) - aux602)<=0)
-444 -9073 0
-383 -9073 0
-383 -444 -9074 0
c (0<=(SATLiteral(383) + SATLiteral(444) - aux602))
444 9074 0
383 9074 0
383 444 9073 0
c ((SATLiteral(414) + SATLiteral(429) - aux603)<=0)
-429 -9076 0
-414 -9076 0
-414 -429 -9077 0
c (0<=(SATLiteral(414) + SATLiteral(429) - aux603))
429 9077 0
414 9077 0
414 429 9076 0
c ((SATLiteral(399) + aux603 - aux604)<=0)
9076 -9079 0
9077 -9080 0
-399 -9079 0
-399 9076 -9080 0
-399 9077 -9082 0
c (0<=(SATLiteral(399) + aux603 - aux604))
-9077 9082 0
-9076 9080 0
399 9082 0
399 -9077 9080 0
399 -9076 9079 0
c ((SATLiteral(369) + SATLiteral(461) - aux605)<=0)
-461 -9084 0
-369 -9084 0
-369 -461 -9085 0
c (0<=(SATLiteral(369) + SATLiteral(461) - aux605))
461 9085 0
369 9085 0
369 461 9084 0
c ((SATLiteral(384) + SATLiteral(445) - aux606)<=0)
-445 -9087 0
-384 -9087 0
-384 -445 -9088 0
c (0<=(SATLiteral(384) + SATLiteral(445) - aux606))
445 9088 0
384 9088 0
384 445 9087 0
c ((SATLiteral(415) + SATLiteral(430) - aux607)<=0)
-430 -9090 0
-415 -9090 0
-415 -430 -9091 0
c (0<=(SATLiteral(415) + SATLiteral(430) - aux607))
430 9091 0
415 9091 0
415 430 9090 0
c ((SATLiteral(400) + aux607 - aux608)<=0)
9090 -9093 0
9091 -9094 0
-400 -9093 0
-400 9090 -9094 0
-400 9091 -9096 0
c (0<=(SATLiteral(400) + aux607 - aux608))
-9091 9096 0
-9090 9094 0
400 9096 0
400 -9091 9094 0
400 -9090 9093 0
c ((SATLiteral(370) + SATLiteral(462) - aux609)<=0)
-462 -9098 0
-370 -9098 0
-370 -462 -9099 0
c (0<=(SATLiteral(370) + SATLiteral(462) - aux609))
462 9099 0
370 9099 0
370 462 9098 0
c ((SATLiteral(385) + SATLiteral(446) - aux610)<=0)
-446 -9101 0
-385 -9101 0
-385 -446 -9102 0
c (0<=(SATLiteral(385) + SATLiteral(446) - aux610))
446 9102 0
385 9102 0
385 446 9101 0
c ((SATLiteral(416) + SATLiteral(431) - aux611)<=0)
-431 -9104 0
-416 -9104 0
-416 -431 -9105 0
c (0<=(SATLiteral(416) + SATLiteral(431) - aux611))
431 9105 0
416 9105 0
416 431 9104 0
c ((SATLiteral(401) + aux611 - aux612)<=0)
9104 -9107 0
9105 -9108 0
-401 -9107 0
-401 9104 -9108 0
-401 9105 -9110 0
c (0<=(SATLiteral(401) + aux611 - aux612))
-9105 9110 0
-9104 9108 0
401 9110 0
401 -9105 9108 0
401 -9104 9107 0
c ((SATLiteral(371) + SATLiteral(463) - aux613)<=0)
-463 -9112 0
-371 -9112 0
-371 -463 -9113 0
c (0<=(SATLiteral(371) + SATLiteral(463) - aux613))
463 9113 0
371 9113 0
371 463 9112 0
c ((SATLiteral(386) + SATLiteral(447) - aux614)<=0)
-447 -9115 0
-386 -9115 0
-386 -447 -9116 0
c (0<=(SATLiteral(386) + SATLiteral(447) - aux614))
447 9116 0
386 9116 0
386 447 9115 0
c ((SATLiteral(417) + SATLiteral(432) - aux615)<=0)
-432 -9118 0
-417 -9118 0
-417 -432 -9119 0
c (0<=(SATLiteral(417) + SATLiteral(432) - aux615))
432 9119 0
417 9119 0
417 432 9118 0
c ((SATLiteral(402) + aux615 - aux616)<=0)
9118 -9121 0
9119 -9122 0
-402 -9121 0
-402 9118 -9122 0
-402 9119 -9124 0
c (0<=(SATLiteral(402) + aux615 - aux616))
-9119 9124 0
-9118 9122 0
402 9124 0
402 -9119 9122 0
402 -9118 9121 0
c ((SATLiteral(372) + SATLiteral(464) - aux617)<=0)
-464 -9126 0
-372 -9126 0
-372 -464 -9127 0
c (0<=(SATLiteral(372) + SATLiteral(464) - aux617))
464 9127 0
372 9127 0
372 464 9126 0
c ((SATLiteral(387) + SATLiteral(448) - aux618)<=0)
-448 -9129 0
-387 -9129 0
-387 -448 -9130 0
c (0<=(SATLiteral(387) + SATLiteral(448) - aux618))
448 9130 0
387 9130 0
387 448 9129 0
c ((SATLiteral(418) + SATLiteral(433) - aux619)<=0)
-433 -9132 0
-418 -9132 0
-418 -433 -9133 0
c (0<=(SATLiteral(418) + SATLiteral(433) - aux619))
433 9133 0
418 9133 0
418 433 9132 0
c ((SATLiteral(403) + aux619 - aux620)<=0)
9132 -9135 0
9133 -9136 0
-403 -9135 0
-403 9132 -9136 0
-403 9133 -9138 0
c (0<=(SATLiteral(403) + aux619 - aux620))
-9133 9138 0
-9132 9136 0
403 9138 0
403 -9133 9136 0
403 -9132 9135 0
c ((SATLiteral(373) + SATLiteral(465) - aux621)<=0)
-465 -9140 0
-373 -9140 0
-373 -465 -9141 0
c (0<=(SATLiteral(373) + SATLiteral(465) - aux621))
465 9141 0
373 9141 0
373 465 9140 0
c ((SATLiteral(388) + SATLiteral(449) - aux622)<=0)
-449 -9143 0
-388 -9143 0
-388 -449 -9144 0
c (0<=(SATLiteral(388) + SATLiteral(449) - aux622))
449 9144 0
388 9144 0
388 449 9143 0
c ((SATLiteral(419) + SATLiteral(434) - aux623)<=0)
-434 -9146 0
-419 -9146 0
-419 -434 -9147 0
c (0<=(SATLiteral(419) + SATLiteral(434) - aux623))
434 9147 0
419 9147 0
419 434 9146 0
c ((SATLiteral(404) + aux623 - aux624)<=0)
9146 -9149 0
9147 -9150 0
-404 -9149 0
-404 9146 -9150 0
-404 9147 -9152 0
c (0<=(SATLiteral(404) + aux623 - aux624))
-9147 9152 0
-9146 9150 0
404 9152 0
404 -9147 9150 0
404 -9146 9149 0
c (( - aux625 + SATLiteral(472) + SATLiteral(549))<=0)
-549 -9154 0
-472 -9154 0
-472 -549 -9155 0
c (0<=( - aux625 + SATLiteral(472) + SATLiteral(549)))
549 9155 0
472 9155 0
472 549 9154 0
c (( - aux626 + SATLiteral(487) + SATLiteral(533))<=0)
-533 -9157 0
-487 -9157 0
-487 -533 -9158 0
c (0<=( - aux626 + SATLiteral(487) + SATLiteral(533)))
533 9158 0
487 9158 0
487 533 9157 0
c (( - aux627 + SATLiteral(517) + SATLiteral(518))<=0)
9160 -517 -518 0
c (0<=( - aux627 + SATLiteral(517) + SATLiteral(518)))
517 518 0
-9160 518 0
-9160 517 0
c ((aux627 - aux628 + SATLiteral(502))<=0)
-502 -9161 0
-9160 -9161 0
-9160 -502 -9162 0
c (0<=(aux627 - aux628 + SATLiteral(502)))
502 9162 0
9160 9162 0
9160 502 9161 0
c (( - aux629 + SATLiteral(473) + SATLiteral(564))<=0)
9164 -473 -564 0
c (0<=( - aux629 + SATLiteral(473) + SATLiteral(564)))
473 564 0
-9164 564 0
-9164 473 0
c ((aux629 - aux630 + SATLiteral(550))<=0)
-550 -9165 0
-9164 -9165 0
-9164 -550 -9166 0
c (0<=(aux629 - aux630 + SATLiteral(550)))
550 9166 0
9164 9166 0
9164 550 9165 0
c (( - aux631 + SATLiteral(488) + SATLiteral(534))<=0)
-534 -9168 0
-488 -9168 0
-488 -534 -9169 0
c (0<=( - aux631 + SATLiteral(488) + SATLiteral(534)))
534 9169 0
488 9169 0
488 534 9168 0
c (( - aux632 + SATLiteral(503) + SATLiteral(519))<=0)
-519 -9171 0
-503 -9171 0
-503 -519 -9172 0
c (0<=( - aux632 + SATLiteral(503) + SATLiteral(519)))
519 9172 0
503 9172 0
503 519 9171 0
c (( - aux633 + SATLiteral(474) + SATLiteral(551))<=0)
-551 -9174 0
-474 -9174 0
-474 -551 -9175 0
c (0<=( - aux633 + SATLiteral(474) + SATLiteral(551)))
551 9175 0
474 9175 0
474 551 9174 0
c (( - aux634 + SATLiteral(489) + SATLiteral(535))<=0)
-535 -9177 0
-489 -9177 0
-489 -535 -9178 0
c (0<=( - aux634 + SATLiteral(489) + SATLiteral(535)))
535 9178 0
489 9178 0
489 535 9177 0
c (( - aux635 + SATLiteral(504) + SATLiteral(520))<=0)
-520 -9180 0
-504 -9180 0
-504 -520 -9181 0
c (0<=( - aux635 + SATLiteral(504) + SATLiteral(520)))
520 9181 0
504 9181 0
504 520 9180 0
c (( - aux636 + SATLiteral(475) + SATLiteral(552))<=0)
-552 -9183 0
-475 -9183 0
-475 -552 -9184 0
c (0<=( - aux636 + SATLiteral(475) + SATLiteral(552)))
552 9184 0
475 9184 0
475 552 9183 0
c (( - aux637 + SATLiteral(490) + SATLiteral(536))<=0)
-536 -9186 0
-490 -9186 0
-490 -536 -9187 0
c (0<=( - aux637 + SATLiteral(490) + SATLiteral(536)))
536 9187 0
490 9187 0
490 536 9186 0
c (( - aux638 + SATLiteral(505) + SATLiteral(521))<=0)
-521 -9189 0
-505 -9189 0
-505 -521 -9190 0
c (0<=( - aux638 + SATLiteral(505) + SATLiteral(521)))
521 9190 0
505 9190 0
505 521 9189 0
c (( - aux639 + SATLiteral(476) + SATLiteral(553))<=0)
-553 -9192 0
-476 -9192 0
-476 -553 -9193 0
c (0<=( - aux639 + SATLiteral(476) + SATLiteral(553)))
553 9193 0
476 9193 0
476 553 9192 0
c (( - aux640 + SATLiteral(491) + SATLiteral(537))<=0)
-537 -9195 0
-491 -9195 0
-491 -537 -9196 0
c (0<=( - aux640 + SATLiteral(491) + SATLiteral(537)))
537 9196 0
491 9196 0
491 537 9195 0
c (( - aux641 + SATLiteral(506) + SATLiteral(522))<=0)
-522 -9198 0
-506 -9198 0
-506 -522 -9199 0
c (0<=( - aux641 + SATLiteral(506) + SATLiteral(522)))
522 9199 0
506 9199 0
506 522 9198 0
c (( - aux642 + SATLiteral(477) + SATLiteral(554))<=0)
-554 -9201 0
-477 -9201 0
-477 -554 -9202 0
c (0<=( - aux642 + SATLiteral(477) + SATLiteral(554)))
554 9202 0
477 9202 0
477 554 9201 0
c (( - aux643 + SATLiteral(492) + SATLiteral(538))<=0)
-538 -9204 0
-492 -9204 0
-492 -538 -9205 0
c (0<=( - aux643 + SATLiteral(492) + SATLiteral(538)))
538 9205 0
492 9205 0
492 538 9204 0
c (( - aux644 + SATLiteral(507) + SATLiteral(523))<=0)
-523 -9207 0
-507 -9207 0
-507 -523 -9208 0
c (0<=( - aux644 + SATLiteral(507) + SATLiteral(523)))
523 9208 0
507 9208 0
507 523 9207 0
c (( - aux645 + SATLiteral(478) + SATLiteral(555))<=0)
-555 -9210 0
-478 -9210 0
-478 -555 -9211 0
c (0<=( - aux645 + SATLiteral(478) + SATLiteral(555)))
555 9211 0
478 9211 0
478 555 9210 0
c (( - aux646 + SATLiteral(493) + SATLiteral(548))<=0)
9213 -493 -548 0
c (0<=( - aux646 + SATLiteral(493) + SATLiteral(548)))
493 548 0
-9213 548 0
-9213 493 0
c ((aux646 - aux647 + SATLiteral(539))<=0)
-539 -9214 0
-9213 -9214 0
-9213 -539 -9215 0
c (0<=(aux646 - aux647 + SATLiteral(539)))
539 9215 0
9213 9215 0
9213 539 9214 0
c (( - aux648 + SATLiteral(508) + SATLiteral(524))<=0)
-524 -9217 0
-508 -9217 0
-508 -524 -9218 0
c (0<=( - aux648 + SATLiteral(508) + SATLiteral(524)))
524 9218 0
508 9218 0
508 524 9217 0
c (( - aux649 + SATLiteral(479) + SATLiteral(556))<=0)
-556 -9220 0
-479 -9220 0
-479 -556 -9221 0
c (0<=( - aux649 + SATLiteral(479) + SATLiteral(556)))
556 9221 0
479 9221 0
479 556 9220 0
c (( - aux650 + SATLiteral(494) + SATLiteral(540))<=0)
-540 -9223 0
-494 -9223 0
-494 -540 -9224 0
c (0<=( - aux650 + SATLiteral(494) + SATLiteral(540)))
540 9224 0
494 9224 0
494 540 9223 0
c (( - aux651 + SATLiteral(509) + SATLiteral(525))<=0)
-525 -9226 0
-509 -9226 0
-509 -525 -9227 0
c (0<=( - aux651 + SATLiteral(509) + SATLiteral(525)))
525 9227 0
509 9227 0
509 525 9226 0
c (( - aux652 + SATLiteral(480) + SATLiteral(557))<=0)
-557 -9229 0
-480 -9229 0
-480 -557 -9230 0
c (0<=( - aux652 + SATLiteral(480) + SATLiteral(557)))
557 9230 0
480 9230 0
480 557 9229 0
c (( - aux653 + SATLiteral(495) + SATLiteral(541))<=0)
-541 -9232 0
-495 -9232 0
-495 -541 -9233 0
c (0<=( - aux653 + SATLiteral(495) + SATLiteral(541)))
541 9233 0
495 9233 0
495 541 9232 0
c (( - aux654 + SATLiteral(510) + SATLiteral(526))<=0)
-526 -9235 0
-510 -9235 0
-510 -526 -9236 0
c (0<=( - aux654 + SATLiteral(510) + SATLiteral(526)))
526 9236 0
510 9236 0
510 526 9235 0
c (( - aux655 + SATLiteral(565) + SATLiteral(657))<=0)
-657 -9238 0
-565 -9238 0
-565 -657 -9239 0
c (0<=( - aux655 + SATLiteral(565) + SATLiteral(657)))
657 9239 0
565 9239 0
565 657 9238 0
c (( - aux656 + SATLiteral(581) + SATLiteral(642))<=0)
-642 -9241 0
-581 -9241 0
-581 -642 -9242 0
c (0<=( - aux656 + SATLiteral(581) + SATLiteral(642)))
642 9242 0
581 9242 0
581 642 9241 0
c (( - aux657 + SATLiteral(611) + SATLiteral(627))<=0)
-627 -9244 0
-611 -9244 0
-611 -627 -9245 0
c (0<=( - aux657 + SATLiteral(611) + SATLiteral(627)))
627 9245 0
611 9245 0
611 627 9244 0
c ((aux657 - aux658 + SATLiteral(596))<=0)
9244 -9247 0
9245 -9248 0
-596 -9247 0
-596 9244 -9248 0
-596 9245 -9250 0
c (0<=(aux657 - aux658 + SATLiteral(596)))
-9245 9250 0
-9244 9248 0
596 9250 0
596 -9245 9248 0
596 -9244 9247 0
c (( - aux659 + SATLiteral(566) + SATLiteral(658))<=0)
-658 -9252 0
-566 -9252 0
-566 -658 -9253 0
c (0<=( - aux659 + SATLiteral(566) + SATLiteral(658)))
658 9253 0
566 9253 0
566 658 9252 0
c (( - aux660 + SATLiteral(582) + SATLiteral(643))<=0)
-643 -9255 0
-582 -9255 0
-582 -643 -9256 0
c (0<=( - aux660 + SATLiteral(582) + SATLiteral(643)))
643 9256 0
582 9256 0
582 643 9255 0
c (( - aux661 + SATLiteral(612) + SATLiteral(628))<=0)
-628 -9258 0
-612 -9258 0
-612 -628 -9259 0
c (0<=( - aux661 + SATLiteral(612) + SATLiteral(628)))
628 9259 0
612 9259 0
612 628 9258 0
c ((aux661 - aux662 + SATLiteral(597))<=0)
9258 -9261 0
9259 -9262 0
-597 -9261 0
-597 9258 -9262 0
-597 9259 -9264 0
c (0<=(aux661 - aux662 + SATLiteral(597)))
-9259 9264 0
-9258 9262 0
597 9264 0
597 -9259 9262 0
597 -9258 9261 0
c (( - aux663 + SATLiteral(567) + SATLiteral(659))<=0)
-659 -9266 0
-567 -9266 0
-567 -659 -9267 0
c (0<=( - aux663 + SATLiteral(567) + SATLiteral(659)))
659 9267 0
567 9267 0
567 659 9266 0
c (( - aux664 + SATLiteral(583) + SATLiteral(644))<=0)
-644 -9269 0
-583 -9269 0
-583 -644 -9270 0
c (0<=( - aux664 + SATLiteral(583) + SATLiteral(644)))
644 9270 0
583 9270 0
583 644 9269 0
c (( - aux665 + SATLiteral(613) + SATLiteral(629))<=0)
-629 -9272 0
-613 -9272 0
-613 -629 -9273 0
c (0<=( - aux665 + SATLiteral(613) + SATLiteral(629)))
629 9273 0
613 9273 0
613 629 9272 0
c ((aux665 - aux666 + SATLiteral(598))<=0)
9272 -9275 0
9273 -9276 0
-598 -9275 0
-598 9272 -9276 0
-598 9273 -9278 0
c (0<=(aux665 - aux666 + SATLiteral(598)))
-9273 9278 0
-9272 9276 0
598 9278 0
598 -9273 9276 0
598 -9272 9275 0
c (( - aux667 + SATLiteral(568) + SATLiteral(660))<=0)
-660 -9280 0
-568 -9280 0
-568 -660 -9281 0
c (0<=( - aux667 + SATLiteral(568) + SATLiteral(660)))
660 9281 0
568 9281 0
568 660 9280 0
c (( - aux668 + SATLiteral(584) + SATLiteral(645))<=0)
-645 -9283 0
-584 -9283 0
-584 -645 -9284 0
c (0<=( - aux668 + SATLiteral(584) + SATLiteral(645)))
645 9284 0
584 9284 0
584 645 9283 0
c (( - aux669 + SATLiteral(614) + SATLiteral(630))<=0)
-630 -9286 0
-614 -9286 0
-614 -630 -9287 0
c (0<=( - aux669 + SATLiteral(614) + SATLiteral(630)))
630 9287 0
614 9287 0
614 630 9286 0
c ((aux669 - aux670 + SATLiteral(599))<=0)
9286 -9289 0
9287 -9290 0
-599 -9289 0
-599 9286 -9290 0
-599 9287 -9292 0
c (0<=(aux669 - aux670 + SATLiteral(599)))
-9287 9292 0
-9286 9290 0
599 9292 0
599 -9287 9290 0
599 -9286 9289 0
c (( - aux671 + SATLiteral(569) + SATLiteral(661))<=0)
-661 -9294 0
-569 -9294 0
-569 -661 -9295 0
c (0<=( - aux671 + SATLiteral(569) + SATLiteral(661)))
661 9295 0
569 9295 0
569 661 9294 0
c (( - aux672 + SATLiteral(585) + SATLiteral(646))<=0)
-646 -9297 0
-585 -9297 0
-585 -646 -9298 0
c (0<=( - aux672 + SATLiteral(585) + SATLiteral(646)))
646 9298 0
585 9298 0
585 646 9297 0
c (( - aux673 + SATLiteral(615) + SATLiteral(631))<=0)
-631 -9300 0
-615 -9300 0
-615 -631 -9301 0
c (0<=( - aux673 + SATLiteral(615) + SATLiteral(631)))
631 9301 0
615 9301 0
615 631 9300 0
c ((aux673 - aux674 + SATLiteral(600))<=0)
9300 -9303 0
9301 -9304 0
-600 -9303 0
-600 9300 -9304 0
-600 9301 -9306 0
c (0<=(aux673 - aux674 + SATLiteral(600)))
-9301 9306 0
-9300 9304 0
600 9306 0
600 -9301 9304 0
600 -9300 9303 0
c (( - aux675 + SATLiteral(570) + SATLiteral(662))<=0)
-662 -9308 0
-570 -9308 0
-570 -662 -9309 0
c (0<=( - aux675 + SATLiteral(570) + SATLiteral(662)))
662 9309 0
570 9309 0
570 662 9308 0
c (( - aux676 + SATLiteral(586) + SATLiteral(647))<=0)
-647 -9311 0
-586 -9311 0
-586 -647 -9312 0
c (0<=( - aux676 + SATLiteral(586) + SATLiteral(647)))
647 9312 0
586 9312 0
586 647 9311 0
c (( - aux677 + SATLiteral(616) + SATLiteral(632))<=0)
-632 -9314 0
-616 -9314 0
-616 -632 -9315 0
c (0<=( - aux677 + SATLiteral(616) + SATLiteral(632)))
632 9315 0
616 9315 0
616 632 9314 0
c ((aux677 - aux678 + SATLiteral(601))<=0)
9314 -9317 0
9315 -9318 0
-601 -9317 0
-601 9314 -9318 0
-601 9315 -9320 0
c (0<=(aux677 - aux678 + SATLiteral(601)))
-9315 9320 0
-9314 9318 0
601 9320 0
601 -9315 9318 0
601 -9314 9317 0
c (( - aux679 + SATLiteral(571) + SATLiteral(663))<=0)
-663 -9322 0
-571 -9322 0
-571 -663 -9323 0
c (0<=( - aux679 + SATLiteral(571) + SATLiteral(663)))
663 9323 0
571 9323 0
571 663 9322 0
c (( - aux680 + SATLiteral(587) + SATLiteral(648))<=0)
-648 -9325 0
-587 -9325 0
-587 -648 -9326 0
c (0<=( - aux680 + SATLiteral(587) + SATLiteral(648)))
648 9326 0
587 9326 0
587 648 9325 0
c (( - aux681 + SATLiteral(617) + SATLiteral(633))<=0)
-633 -9328 0
-617 -9328 0
-617 -633 -9329 0
c (0<=( - aux681 + SATLiteral(617) + SATLiteral(633)))
633 9329 0
617 9329 0
617 633 9328 0
c (( - aux682 + SATLiteral(602) + SATLiteral(626))<=0)
9331 -602 -626 0
c (0<=( - aux682 + SATLiteral(602) + SATLiteral(626)))
602 626 0
-9331 626 0
-9331 602 0
c ((aux680 + aux682 - aux683)<=0)
9325 -9332 0
9326 -9333 0
-9331 -9332 0
-9331 9325 -9333 0
-9331 9326 -9335 0
c (0<=(aux680 + aux682 - aux683))
-9326 9335 0
-9325 9333 0
9331 9335 0
9331 -9326 9333 0
9331 -9325 9332 0
c (( - aux684 + SATLiteral(572) + SATLiteral(664))<=0)
-664 -9337 0
-572 -9337 0
-572 -664 -9338 0
c (0<=( - aux684 + SATLiteral(572) + SATLiteral(664)))
664 9338 0
572 9338 0
572 664 9337 0
c (( - aux685 + SATLiteral(580) + SATLiteral(649))<=0)
9340 -580 -649 0
c (0<=( - aux685 + SATLiteral(580) + SATLiteral(649)))
580 649 0
-9340 649 0
-9340 580 0
c ((aux685 - aux686 + SATLiteral(634))<=0)
-634 -9341 0
-9340 -9341 0
-9340 -634 -9342 0
c (0<=(aux685 - aux686 + SATLiteral(634)))
634 9342 0
9340 9342 0
9340 634 9341 0
c (( - aux687 + SATLiteral(603) + SATLiteral(618))<=0)
-618 -9344 0
-603 -9344 0
-603 -618 -9345 0
c (0<=( - aux687 + SATLiteral(603) + SATLiteral(618)))
618 9345 0
603 9345 0
603 618 9344 0
c ((aux687 - aux688 + SATLiteral(588))<=0)
9344 -9347 0
9345 -9348 0
-588 -9347 0
-588 9344 -9348 0
-588 9345 -9350 0
c (0<=(aux687 - aux688 + SATLiteral(588)))
-9345 9350 0
-9344 9348 0
588 9350 0
588 -9345 9348 0
588 -9344 9347 0
c (( - aux689 + SATLiteral(573) + SATLiteral(665))<=0)
-665 -9352 0
-573 -9352 0
-573 -665 -9353 0
c (0<=( - aux689 + SATLiteral(573) + SATLiteral(665)))
665 9353 0
573 9353 0
573 665 9352 0
c (( - aux690 + SATLiteral(589) + SATLiteral(650))<=0)
-650 -9355 0
-589 -9355 0
-589 -650 -9356 0
c (0<=( - aux690 + SATLiteral(589) + SATLiteral(650)))
650 9356 0
589 9356 0
589 650 9355 0
c (( - aux691 + SATLiteral(619) + SATLiteral(635))<=0)
-635 -9358 0
-619 -9358 0
-619 -635 -9359 0
c (0<=( - aux691 + SATLiteral(619) + SATLiteral(635)))
635 9359 0
619 9359 0
619 635 9358 0
c ((aux691 - aux692 + SATLiteral(604))<=0)
9358 -9361 0
9359 -9362 0
-604 -9361 0
-604 9358 -9362 0
-604 9359 -9364 0
c (0<=(aux691 - aux692 + SATLiteral(604)))
-9359 9364 0
-9358 9362 0
604 9364 0
604 -9359 9362 0
604 -9358 9361 0
c (( - aux693 + SATLiteral(672) + SATLiteral(749))<=0)
-749 -9366 0
-672 -9366 0
-672 -749 -9367 0
c (0<=( - aux693 + SATLiteral(672) + SATLiteral(749)))
749 9367 0
672 9367 0
672 749 9366 0
c (( - aux694 + SATLiteral(687) + SATLiteral(733))<=0)
-733 -9369 0
-687 -9369 0
-687 -733 -9370 0
c (0<=( - aux694 + SATLiteral(687) + SATLiteral(733)))
733 9370 0
687 9370 0
687 733 9369 0
c (( - aux695 + SATLiteral(702) + SATLiteral(718))<=0)
-718 -9372 0
-702 -9372 0
-702 -718 -9373 0
c (0<=( - aux695 + SATLiteral(702) + SATLiteral(718)))
718 9373 0
702 9373 0
702 718 9372 0
c (( - aux696 + SATLiteral(673) + SATLiteral(750))<=0)
-750 -9375 0
-673 -9375 0
-673 -750 -9376 0
c (0<=( - aux696 + SATLiteral(673) + SATLiteral(750)))
750 9376 0
673 9376 0
673 750 9375 0
c (( - aux697 + SATLiteral(688) + SATLiteral(734))<=0)
-734 -9378 0
-688 -9378 0
-688 -734 -9379 0
c (0<=( - aux697 + SATLiteral(688) + SATLiteral(734)))
734 9379 0
688 9379 0
688 734 9378 0
c (( - aux698 + SATLiteral(703) + SATLiteral(719))<=0)
-719 -9381 0
-703 -9381 0
-703 -719 -9382 0
c (0<=( - aux698 + SATLiteral(703) + SATLiteral(719)))
719 9382 0
703 9382 0
703 719 9381 0
c (( - aux699 + SATLiteral(674) + SATLiteral(751))<=0)
-751 -9384 0
-674 -9384 0
-674 -751 -9385 0
c (0<=( - aux699 + SATLiteral(674) + SATLiteral(751)))
751 9385 0
674 9385 0
674 751 9384 0
c (( - aux700 + SATLiteral(689) + SATLiteral(735))<=0)
-735 -9387 0
-689 -9387 0
-689 -735 -9388 0
c (0<=( - aux700 + SATLiteral(689) + SATLiteral(735)))
735 9388 0
689 9388 0
689 735 9387 0
c (( - aux701 + SATLiteral(717) + SATLiteral(720))<=0)
9390 -717 -720 0
c (0<=( - aux701 + SATLiteral(717) + SATLiteral(720)))
717 720 0
-9390 720 0
-9390 717 0
c ((aux701 - aux702 + SATLiteral(704))<=0)
-704 -9391 0
-9390 -9391 0
-9390 -704 -9392 0
c (0<=(aux701 - aux702 + SATLiteral(704)))
704 9392 0
9390 9392 0
9390 704 9391 0
c (( - aux703 + SATLiteral(675) + SATLiteral(752))<=0)
-752 -9394 0
-675 -9394 0
-675 -752 -9395 0
c (0<=( - aux703 + SATLiteral(675) + SATLiteral(752)))
752 9395 0
675 9395 0
675 752 9394 0
c (( - aux704 + SATLiteral(690) + SATLiteral(736))<=0)
-736 -9397 0
-690 -9397 0
-690 -736 -9398 0
c (0<=( - aux704 + SATLiteral(690) + SATLiteral(736)))
736 9398 0
690 9398 0
690 736 9397 0
c (( - aux705 + SATLiteral(705) + SATLiteral(721))<=0)
-721 -9400 0
-705 -9400 0
-705 -721 -9401 0
c (0<=( - aux705 + SATLiteral(705) + SATLiteral(721)))
721 9401 0
705 9401 0
705 721 9400 0
c (( - aux706 + SATLiteral(676) + SATLiteral(753))<=0)
-753 -9403 0
-676 -9403 0
-676 -753 -9404 0
c (0<=( - aux706 + SATLiteral(676) + SATLiteral(753)))
753 9404 0
676 9404 0
676 753 9403 0
c (( - aux707 + SATLiteral(691) + SATLiteral(737))<=0)
-737 -9406 0
-691 -9406 0
-691 -737 -9407 0
c (0<=( - aux707 + SATLiteral(691) + SATLiteral(737)))
737 9407 0
691 9407 0
691 737 9406 0
c (( - aux708 + SATLiteral(706) + SATLiteral(722))<=0)
-722 -9409 0
-706 -9409 0
-706 -722 -9410 0
c (0<=( - aux708 + SATLiteral(706) + SATLiteral(722)))
722 9410 0
706 9410 0
706 722 9409 0
c (( - aux709 + SATLiteral(677) + SATLiteral(754))<=0)
-754 -9412 0
-677 -9412 0
-677 -754 -9413 0
c (0<=( - aux709 + SATLiteral(677) + SATLiteral(754)))
754 9413 0
677 9413 0
677 754 9412 0
c (( - aux710 + SATLiteral(692) + SATLiteral(748))<=0)
9415 -692 -748 0
c (0<=( - aux710 + SATLiteral(692) + SATLiteral(748)))
692 748 0
-9415 748 0
-9415 692 0
c ((aux710 - aux711 + SATLiteral(738))<=0)
-738 -9416 0
-9415 -9416 0
-9415 -738 -9417 0
c (0<=(aux710 - aux711 + SATLiteral(738)))
738 9417 0
9415 9417 0
9415 738 9416 0
c (( - aux712 + SATLiteral(707) + SATLiteral(723))<=0)
-723 -9419 0
-707 -9419 0
-707 -723 -9420 0
c (0<=( - aux712 + SATLiteral(707) + SATLiteral(723)))
723 9420 0
707 9420 0
707 723 9419 0
c (( - aux713 + SATLiteral(678) + SATLiteral(764))<=0)
9422 -678 -764 0
c (0<=( - aux713 + SATLiteral(678) + SATLiteral(764)))
678 764 0
-9422 764 0
-9422 678 0
c ((aux713 - aux714 + SATLiteral(755))<=0)
-755 -9423 0
-9422 -9423 0
-9422 -755 -9424 0
c (0<=(aux713 - aux714 + SATLiteral(755)))
755 9424 0
9422 9424 0
9422 755 9423 0
c (( - aux715 + SATLiteral(693) + SATLiteral(739))<=0)
-739 -9426 0
-693 -9426 0
-693 -739 -9427 0
c (0<=( - aux715 + SATLiteral(693) + SATLiteral(739)))
739 9427 0
693 9427 0
693 739 9426 0
c (( - aux716 + SATLiteral(708) + SATLiteral(724))<=0)
-724 -9429 0
-708 -9429 0
-708 -724 -9430 0
c (0<=( - aux716 + SATLiteral(708) + SATLiteral(724)))
724 9430 0
708 9430 0
708 724 9429 0
c (( - aux717 + SATLiteral(679) + SATLiteral(756))<=0)
-756 -9432 0
-679 -9432 0
-679 -756 -9433 0
c (0<=( - aux717 + SATLiteral(679) + SATLiteral(756)))
756 9433 0
679 9433 0
679 756 9432 0
c (( - aux718 + SATLiteral(694) + SATLiteral(740))<=0)
-740 -9435 0
-694 -9435 0
-694 -740 -9436 0
c (0<=( - aux718 + SATLiteral(694) + SATLiteral(740)))
740 9436 0
694 9436 0
694 740 9435 0
c (( - aux719 + SATLiteral(709) + SATLiteral(725))<=0)
-725 -9438 0
-709 -9438 0
-709 -725 -9439 0
c (0<=( - aux719 + SATLiteral(709) + SATLiteral(725)))
725 9439 0
709 9439 0
709 725 9438 0
c (( - aux720 + SATLiteral(680) + SATLiteral(757))<=0)
-757 -9441 0
-680 -9441 0
-680 -757 -9442 0
c (0<=( - aux720 + SATLiteral(680) + SATLiteral(757)))
757 9442 0
680 9442 0
680 757 9441 0
c (( - aux721 + SATLiteral(695) + SATLiteral(741))<=0)
-741 -9444 0
-695 -9444 0
-695 -741 -9445 0
c (0<=( - aux721 + SATLiteral(695) + SATLiteral(741)))
741 9445 0
695 9445 0
695 741 9444 0
c (( - aux722 + SATLiteral(710) + SATLiteral(726))<=0)
-726 -9447 0
-710 -9447 0
-710 -726 -9448 0
c (0<=( - aux722 + SATLiteral(710) + SATLiteral(726)))
726 9448 0
710 9448 0
710 726 9447 0
c (( - aux723 + SATLiteral(765) + SATLiteral(857))<=0)
-857 -9450 0
-765 -9450 0
-765 -857 -9451 0
c (0<=( - aux723 + SATLiteral(765) + SATLiteral(857)))
857 9451 0
765 9451 0
765 857 9450 0
c (( - aux724 + SATLiteral(780) + SATLiteral(842))<=0)
-842 -9453 0
-780 -9453 0
-780 -842 -9454 0
c (0<=( - aux724 + SATLiteral(780) + SATLiteral(842)))
842 9454 0
780 9454 0
780 842 9453 0
c (( - aux725 + SATLiteral(812) + SATLiteral(827))<=0)
-827 -9456 0
-812 -9456 0
-812 -827 -9457 0
c (0<=( - aux725 + SATLiteral(812) + SATLiteral(827)))
827 9457 0
812 9457 0
812 827 9456 0
c ((aux725 - aux726 + SATLiteral(796))<=0)
9456 -9459 0
9457 -9460 0
-796 -9459 0
-796 9456 -9460 0
-796 9457 -9462 0
c (0<=(aux725 - aux726 + SATLiteral(796)))
-9457 9462 0
-9456 9460 0
796 9462 0
796 -9457 9460 0
796 -9456 9459 0
c (( - aux727 + SATLiteral(766) + SATLiteral(858))<=0)
-858 -9464 0
-766 -9464 0
-766 -858 -9465 0
c (0<=( - aux727 + SATLiteral(766) + SATLiteral(858)))
858 9465 0
766 9465 0
766 858 9464 0
c (( - aux728 + SATLiteral(781) + SATLiteral(843))<=0)
-843 -9467 0
-781 -9467 0
-781 -843 -9468 0
c (0<=( - aux728 + SATLiteral(781) + SATLiteral(843)))
843 9468 0
781 9468 0
781 843 9467 0
c (( - aux729 + SATLiteral(813) + SATLiteral(828))<=0)
-828 -9470 0
-813 -9470 0
-813 -828 -9471 0
c (0<=( - aux729 + SATLiteral(813) + SATLiteral(828)))
828 9471 0
813 9471 0
813 828 9470 0
c ((aux729 - aux730 + SATLiteral(797))<=0)
9470 -9473 0
9471 -9474 0
-797 -9473 0
-797 9470 -9474 0
-797 9471 -9476 0
c (0<=(aux729 - aux730 + SATLiteral(797)))
-9471 9476 0
-9470 9474 0
797 9476 0
797 -9471 9474 0
797 -9470 9473 0
c (( - aux731 + SATLiteral(767) + SATLiteral(859))<=0)
-859 -9478 0
-767 -9478 0
-767 -859 -9479 0
c (0<=( - aux731 + SATLiteral(767) + SATLiteral(859)))
859 9479 0
767 9479 0
767 859 9478 0
c (( - aux732 + SATLiteral(782) + SATLiteral(844))<=0)
-844 -9481 0
-782 -9481 0
-782 -844 -9482 0
c (0<=( - aux732 + SATLiteral(782) + SATLiteral(844)))
844 9482 0
782 9482 0
782 844 9481 0
c (( - aux733 + SATLiteral(814) + SATLiteral(829))<=0)
-829 -9484 0
-814 -9484 0
-814 -829 -9485 0
c (0<=( - aux733 + SATLiteral(814) + SATLiteral(829)))
829 9485 0
814 9485 0
814 829 9484 0
c ((aux733 - aux734 + SATLiteral(798))<=0)
9484 -9487 0
9485 -9488 0
-798 -9487 0
-798 9484 -9488 0
-798 9485 -9490 0
c (0<=(aux733 - aux734 + SATLiteral(798)))
-9485 9490 0
-9484 9488 0
798 9490 0
798 -9485 9488 0
798 -9484 9487 0
c (( - aux735 + SATLiteral(768) + SATLiteral(860))<=0)
-860 -9492 0
-768 -9492 0
-768 -860 -9493 0
c (0<=( - aux735 + SATLiteral(768) + SATLiteral(860)))
860 9493 0
768 9493 0
768 860 9492 0
c (( - aux736 + SATLiteral(783) + SATLiteral(845))<=0)
-845 -9495 0
-783 -9495 0
-783 -845 -9496 0
c (0<=( - aux736 + SATLiteral(783) + SATLiteral(845)))
845 9496 0
783 9496 0
783 845 9495 0
c (( - aux737 + SATLiteral(815) + SATLiteral(830))<=0)
-830 -9498 0
-815 -9498 0
-815 -830 -9499 0
c (0<=( - aux737 + SATLiteral(815) + SATLiteral(830)))
830 9499 0
815 9499 0
815 830 9498 0
c ((aux737 - aux738 + SATLiteral(799))<=0)
9498 -9501 0
9499 -9502 0
-799 -9501 0
-799 9498 -9502 0
-799 9499 -9504 0
c (0<=(aux737 - aux738 + SATLiteral(799)))
-9499 9504 0
-9498 9502 0
799 9504 0
799 -9499 9502 0
799 -9498 9501 0
c (( - aux739 + SATLiteral(769) + SATLiteral(861))<=0)
-861 -9506 0
-769 -9506 0
-769 -861 -9507 0
c (0<=( - aux739 + SATLiteral(769) + SATLiteral(861)))
861 9507 0
769 9507 0
769 861 9506 0
c (( - aux740 + SATLiteral(784) + SATLiteral(846))<=0)
-846 -9509 0
-784 -9509 0
-784 -846 -9510 0
c (0<=( - aux740 + SATLiteral(784) + SATLiteral(846)))
846 9510 0
784 9510 0
784 846 9509 0
c (( - aux741 + SATLiteral(816) + SATLiteral(831))<=0)
-831 -9512 0
-816 -9512 0
-816 -831 -9513 0
c (0<=( - aux741 + SATLiteral(816) + SATLiteral(831)))
831 9513 0
816 9513 0
816 831 9512 0
c ((aux741 - aux742 + SATLiteral(800))<=0)
9512 -9515 0
9513 -9516 0
-800 -9515 0
-800 9512 -9516 0
-800 9513 -9518 0
c (0<=(aux741 - aux742 + SATLiteral(800)))
-9513 9518 0
-9512 9516 0
800 9518 0
800 -9513 9516 0
800 -9512 9515 0
c (( - aux743 + SATLiteral(770) + SATLiteral(862))<=0)
-862 -9520 0
-770 -9520 0
-770 -862 -9521 0
c (0<=( - aux743 + SATLiteral(770) + SATLiteral(862)))
862 9521 0
770 9521 0
770 862 9520 0
c (( - aux744 + SATLiteral(785) + SATLiteral(847))<=0)
-847 -9523 0
-785 -9523 0
-785 -847 -9524 0
c (0<=( - aux744 + SATLiteral(785) + SATLiteral(847)))
847 9524 0
785 9524 0
785 847 9523 0
c (( - aux745 + SATLiteral(817) + SATLiteral(832))<=0)
-832 -9526 0
-817 -9526 0
-817 -832 -9527 0
c (0<=( - aux745 + SATLiteral(817) + SATLiteral(832)))
832 9527 0
817 9527 0
817 832 9526 0
c ((aux745 - aux746 + SATLiteral(801))<=0)
9526 -9529 0
9527 -9530 0
-801 -9529 0
-801 9526 -9530 0
-801 9527 -9532 0
c (0<=(aux745 - aux746 + SATLiteral(801)))
-9527 9532 0
-9526 9530 0
801 9532 0
801 -9527 9530 0
801 -9526 9529 0
c (( - aux747 + SATLiteral(771) + SATLiteral(863))<=0)
-863 -9534 0
-771 -9534 0
-771 -863 -9535 0
c (0<=( - aux747 + SATLiteral(771) + SATLiteral(863)))
863 9535 0
771 9535 0
771 863 9534 0
c (( - aux748 + SATLiteral(786) + SATLiteral(848))<=0)
-848 -9537 0
-786 -9537 0
-786 -848 -9538 0
c (0<=( - aux748 + SATLiteral(786) + SATLiteral(848)))
848 9538 0
786 9538 0
786 848 9537 0
c (( - aux749 + SATLiteral(811) + SATLiteral(833))<=0)
9540 -811 -833 0
c (0<=( - aux749 + SATLiteral(811) + SATLiteral(833)))
811 833 0
-9540 833 0
-9540 811 0
c ((aux749 - aux750 + SATLiteral(818))<=0)
-818 -9541 0
-9540 -9541 0
-9540 -818 -9542 0
c (0<=(aux749 - aux750 + SATLiteral(818)))
818 9542 0
9540 9542 0
9540 818 9541 0
c ((aux750 - aux751 + SATLiteral(802))<=0)
9541 -9544 0
9542 -9545 0
-802 -9544 0
-802 9541 -9545 0
-802 9542 -9547 0
c (0<=(aux750 - aux751 + SATLiteral(802)))
-9542 9547 0
-9541 9545 0
802 9547 0
802 -9542 9545 0
802 -9541 9544 0
c (( - aux752 + SATLiteral(772) + SATLiteral(864))<=0)
-864 -9549 0
-772 -9549 0
-772 -864 -9550 0
c (0<=( - aux752 + SATLiteral(772) + SATLiteral(864)))
864 9550 0
772 9550 0
772 864 9549 0
c (( - aux753 + SATLiteral(787) + SATLiteral(849))<=0)
-849 -9552 0
-787 -9552 0
-787 -849 -9553 0
c (0<=( - aux753 + SATLiteral(787) + SATLiteral(849)))
849 9553 0
787 9553 0
787 849 9552 0
c (( - aux754 + SATLiteral(803) + SATLiteral(834))<=0)
-834 -9555 0
-803 -9555 0
-803 -834 -9556 0
c (0<=( - aux754 + SATLiteral(803) + SATLiteral(834)))
834 9556 0
803 9556 0
803 834 9555 0
c (( - aux755 + SATLiteral(795) + SATLiteral(819))<=0)
9558 -795 -819 0
c (0<=( - aux755 + SATLiteral(795) + SATLiteral(819)))
795 819 0
-9558 819 0
-9558 795 0
c ((aux753 + aux755 - aux756)<=0)
9552 -9559 0
9553 -9560 0
-9558 -9559 0
-9558 9552 -9560 0
-9558 9553 -9562 0
c (0<=(aux753 + aux755 - aux756))
-9553 9562 0
-9552 9560 0
9558 9562 0
9558 -9553 9560 0
9558 -9552 9559 0
c (( - aux757 + SATLiteral(773) + SATLiteral(865))<=0)
-865 -9564 0
-773 -9564 0
-773 -865 -9565 0
c (0<=( - aux757 + SATLiteral(773) + SATLiteral(865)))
865 9565 0
773 9565 0
773 865 9564 0
c (( - aux758 + SATLiteral(788) + SATLiteral(850))<=0)
-850 -9567 0
-788 -9567 0
-788 -850 -9568 0
c (0<=( - aux758 + SATLiteral(788) + SATLiteral(850)))
850 9568 0
788 9568 0
788 850 9567 0
c (( - aux759 + SATLiteral(820) + SATLiteral(835))<=0)
-835 -9570 0
-820 -9570 0
-820 -835 -9571 0
c (0<=( - aux759 + SATLiteral(820) + SATLiteral(835)))
835 9571 0
820 9571 0
820 835 9570 0
c ((aux759 - aux760 + SATLiteral(804))<=0)
9570 -9573 0
9571 -9574 0
-804 -9573 0
-804 9570 -9574 0
-804 9571 -9576 0
c (0<=(aux759 - aux760 + SATLiteral(804)))
-9571 9576 0
-9570 9574 0
804 9576 0
804 -9571 9574 0
804 -9570 9573 0
c ((SATLiteral(872) + SATLiteral(964) - aux761)<=0)
-964 -9578 0
-872 -9578 0
-872 -964 -9579 0
c (0<=(SATLiteral(872) + SATLiteral(964) - aux761))
964 9579 0
872 9579 0
872 964 9578 0
c ((SATLiteral(887) + SATLiteral(949) - aux762)<=0)
-949 -9581 0
-887 -9581 0
-887 -949 -9582 0
c (0<=(SATLiteral(887) + SATLiteral(949) - aux762))
949 9582 0
887 9582 0
887 949 9581 0
c ((SATLiteral(917) + SATLiteral(933) - aux763)<=0)
-933 -9584 0
-917 -9584 0
-917 -933 -9585 0
c (0<=(SATLiteral(917) + SATLiteral(933) - aux763))
933 9585 0
917 9585 0
917 933 9584 0
c ((SATLiteral(902) + SATLiteral(932) - aux764)<=0)
-902 -932 9587 0
c (0<=(SATLiteral(902) + SATLiteral(932) - aux764))
932 -9587 0
902 -9587 0
902 932 0
c ((aux762 + aux764 - aux765)<=0)
9581 -9588 0
9582 -9589 0
-9587 -9588 0
-9587 9581 -9589 0
-9587 9582 -9591 0
c (0<=(aux762 + aux764 - aux765))
-9582 9591 0
-9581 9589 0
9587 9591 0
9587 -9582 9589 0
9587 -9581 9588 0
c ((SATLiteral(873) + SATLiteral(965) - aux766)<=0)
-965 -9593 0
-873 -9593 0
-873 -965 -9594 0
c (0<=(SATLiteral(873) + SATLiteral(965) - aux766))
965 9594 0
873 9594 0
873 965 9593 0
c ((SATLiteral(888) + SATLiteral(950) - aux767)<=0)
-950 -9596 0
-888 -9596 0
-888 -950 -9597 0
c (0<=(SATLiteral(888) + SATLiteral(950) - aux767))
950 9597 0
888 9597 0
888 950 9596 0
c ((SATLiteral(918) + SATLiteral(934) - aux768)<=0)
-934 -9599 0
-918 -9599 0
-918 -934 -9600 0
c (0<=(SATLiteral(918) + SATLiteral(934) - aux768))
934 9600 0
918 9600 0
918 934 9599 0
c ((SATLiteral(903) + aux768 - aux769)<=0)
9599 -9602 0
9600 -9603 0
-903 -9602 0
-903 9599 -9603 0
-903 9600 -9605 0
c (0<=(SATLiteral(903) + aux768 - aux769))
-9600 9605 0
-9599 9603 0
903 9605 0
903 -9600 9603 0
903 -9599 9602 0
c ((SATLiteral(874) + SATLiteral(966) - aux770)<=0)
-966 -9607 0
-874 -9607 0
-874 -966 -9608 0
c (0<=(SATLiteral(874) + SATLiteral(966) - aux770))
966 9608 0
874 9608 0
874 966 9607 0
c ((SATLiteral(889) + SATLiteral(951) - aux771)<=0)
-951 -9610 0
-889 -9610 0
-889 -951 -9611 0
c (0<=(SATLiteral(889) + SATLiteral(951) - aux771))
951 9611 0
889 9611 0
889 951 9610 0
c ((SATLiteral(919) + SATLiteral(935) - aux772)<=0)
-935 -9613 0
-919 -9613 0
-919 -935 -9614 0
c (0<=(SATLiteral(919) + SATLiteral(935) - aux772))
935 9614 0
919 9614 0
919 935 9613 0
c ((SATLiteral(904) + aux772 - aux773)<=0)
9613 -9616 0
9614 -9617 0
-904 -9616 0
-904 9613 -9617 0
-904 9614 -9619 0
c (0<=(SATLiteral(904) + aux772 - aux773))
-9614 9619 0
-9613 9617 0
904 9619 0
904 -9614 9617 0
904 -9613 9616 0
c ((SATLiteral(875) + SATLiteral(967) - aux774)<=0)
-967 -9621 0
-875 -9621 0
-875 -967 -9622 0
c (0<=(SATLiteral(875) + SATLiteral(967) - aux774))
967 9622 0
875 9622 0
875 967 9621 0
c ((SATLiteral(890) + SATLiteral(952) - aux775)<=0)
-952 -9624 0
-890 -9624 0
-890 -952 -9625 0
c (0<=(SATLiteral(890) + SATLiteral(952) - aux775))
952 9625 0
890 9625 0
890 952 9624 0
c ((SATLiteral(920) + SATLiteral(936) - aux776)<=0)
-936 -9627 0
-920 -9627 0
-920 -936 -9628 0
c (0<=(SATLiteral(920) + SATLiteral(936) - aux776))
936 9628 0
920 9628 0
920 936 9627 0
c ((SATLiteral(905) + aux776 - aux777)<=0)
9627 -9630 0
9628 -9631 0
-905 -9630 0
-905 9627 -9631 0
-905 9628 -9633 0
c (0<=(SATLiteral(905) + aux776 - aux777))
-9628 9633 0
-9627 9631 0
905 9633 0
905 -9628 9631 0
905 -9627 9630 0
c ((SATLiteral(876) + SATLiteral(968) - aux778)<=0)
-968 -9635 0
-876 -9635 0
-876 -968 -9636 0
c (0<=(SATLiteral(876) + SATLiteral(968) - aux778))
968 9636 0
876 9636 0
876 968 9635 0
c ((SATLiteral(891) + SATLiteral(953) - aux779)<=0)
-953 -9638 0
-891 -9638 0
-891 -953 -9639 0
c (0<=(SATLiteral(891) + SATLiteral(953) - aux779))
953 9639 0
891 9639 0
891 953 9638 0
c ((SATLiteral(921) + SATLiteral(937) - aux780)<=0)
-937 -9641 0
-921 -9641 0
-921 -937 -9642 0
c (0<=(SATLiteral(921) + SATLiteral(937) - aux780))
937 9642 0
921 9642 0
921 937 9641 0
c ((SATLiteral(906) + aux780 - aux781)<=0)
9641 -9644 0
9642 -9645 0
-906 -9644 0
-906 9641 -9645 0
-906 9642 -9647 0
c (0<=(SATLiteral(906) + aux780 - aux781))
-9642 9647 0
-9641 9645 0
906 9647 0
906 -9642 9645 0
906 -9641 9644 0
c ((SATLiteral(877) + SATLiteral(969) - aux782)<=0)
-969 -9649 0
-877 -9649 0
-877 -969 -9650 0
c (0<=(SATLiteral(877) + SATLiteral(969) - aux782))
969 9650 0
877 9650 0
877 969 9649 0
c ((SATLiteral(892) + SATLiteral(954) - aux783)<=0)
-954 -9652 0
-892 -9652 0
-892 -954 -9653 0
c (0<=(SATLiteral(892) + SATLiteral(954) - aux783))
954 9653 0
892 9653 0
892 954 9652 0
c ((SATLiteral(922) + SATLiteral(938) - aux784)<=0)
-938 -9655 0
-922 -9655 0
-922 -938 -9656 0
c (0<=(SATLiteral(922) + SATLiteral(938) - aux784))
938 9656 0
922 9656 0
922 938 9655 0
c ((SATLiteral(907) + aux784 - aux785)<=0)
9655 -9658 0
9656 -9659 0
-907 -9658 0
-907 9655 -9659 0
-907 9656 -9661 0
c (0<=(SATLiteral(907) + aux784 - aux785))
-9656 9661 0
-9655 9659 0
907 9661 0
907 -9656 9659 0
907 -9655 9658 0
c ((SATLiteral(878) + SATLiteral(970) - aux786)<=0)
-970 -9663 0
-878 -9663 0
-878 -970 -9664 0
c (0<=(SATLiteral(878) + SATLiteral(970) - aux786))
970 9664 0
878 9664 0
878 970 9663 0
c ((SATLiteral(893) + SATLiteral(955) - aux787)<=0)
-955 -9666 0
-893 -9666 0
-893 -955 -9667 0
c (0<=(SATLiteral(893) + SATLiteral(955) - aux787))
955 9667 0
893 9667 0
893 955 9666 0
c ((SATLiteral(923) + SATLiteral(939) - aux788)<=0)
-939 -9669 0
-923 -9669 0
-923 -939 -9670 0
c (0<=(SATLiteral(923) + SATLiteral(939) - aux788))
939 9670 0
923 9670 0
923 939 9669 0
c ((SATLiteral(908) + aux788 - aux789)<=0)
9669 -9672 0
9670 -9673 0
-908 -9672 0
-908 9669 -9673 0
-908 9670 -9675 0
c (0<=(SATLiteral(908) + aux788 - aux789))
-9670 9675 0
-9669 9673 0
908 9675 0
908 -9670 9673 0
908 -9669 9672 0
c ((SATLiteral(879) + SATLiteral(971) - aux790)<=0)
-971 -9677 0
-879 -9677 0
-879 -971 -9678 0
c (0<=(SATLiteral(879) + SATLiteral(971) - aux790))
971 9678 0
879 9678 0
879 971 9677 0
c ((SATLiteral(894) + SATLiteral(956) - aux791)<=0)
-956 -9680 0
-894 -9680 0
-894 -956 -9681 0
c (0<=(SATLiteral(894) + SATLiteral(956) - aux791))
956 9681 0
894 9681 0
894 956 9680 0
c ((SATLiteral(924) + SATLiteral(948) - aux792)<=0)
-924 -948 9683 0
c (0<=(SATLiteral(924) + SATLiteral(948) - aux792))
948 -9683 0
924 -9683 0
924 948 0
c ((SATLiteral(940) + aux792 - aux793)<=0)
-9683 -9684 0
-940 -9684 0
-940 -9683 -9685 0
c (0<=(SATLiteral(940) + aux792 - aux793))
9683 9685 0
940 9685 0
940 9683 9684 0
c ((SATLiteral(909) + aux793 - aux794)<=0)
9684 -9687 0
9685 -9688 0
-909 -9687 0
-909 9684 -9688 0
-909 9685 -9690 0
c (0<=(SATLiteral(909) + aux793 - aux794))
-9685 9690 0
-9684 9688 0
909 9690 0
909 -9685 9688 0
909 -9684 9687 0
c ((SATLiteral(880) + SATLiteral(972) - aux795)<=0)
-972 -9692 0
-880 -9692 0
-880 -972 -9693 0
c (0<=(SATLiteral(880) + SATLiteral(972) - aux795))
972 9693 0
880 9693 0
880 972 9692 0
c ((SATLiteral(895) + SATLiteral(957) - aux796)<=0)
-957 -9695 0
-895 -9695 0
-895 -957 -9696 0
c (0<=(SATLiteral(895) + SATLiteral(957) - aux796))
957 9696 0
895 9696 0
895 957 9695 0
c ((SATLiteral(925) + SATLiteral(941) - aux797)<=0)
-941 -9698 0
-925 -9698 0
-925 -941 -9699 0
c (0<=(SATLiteral(925) + SATLiteral(941) - aux797))
941 9699 0
925 9699 0
925 941 9698 0
c ((SATLiteral(910) + aux797 - aux798)<=0)
9698 -9701 0
9699 -9702 0
-910 -9701 0
-910 9698 -9702 0
-910 9699 -9704 0
c (0<=(SATLiteral(910) + aux797 - aux798))
-9699 9704 0
-9698 9702 0
910 9704 0
910 -9699 9702 0
910 -9698 9701 0
c ((SATLiteral(365) - aux799 + SATLiteral(565))<=0)
-565 -9706 0
-365 -9706 0
-365 -565 -9707 0
c (0<=(SATLiteral(365) - aux799 + SATLiteral(565)))
565 9707 0
365 9707 0
365 565 9706 0
c ((SATLiteral(872) - aux800 + SATLiteral(2))<=0)
-2 -9709 0
-872 -9709 0
-872 -2 -9710 0
c (0<=(SATLiteral(872) - aux800 + SATLiteral(2)))
2 9710 0
872 9710 0
872 2 9709 0
c (( - aux801 + SATLiteral(672) + SATLiteral(765))<=0)
-765 -9712 0
-672 -9712 0
-672 -765 -9713 0
c (0<=( - aux801 + SATLiteral(672) + SATLiteral(765)))
765 9713 0
672 9713 0
672 765 9712 0
c (( - aux802 + SATLiteral(472) + SATLiteral(244))<=0)
-244 -9715 0
-472 -9715 0
-472 -244 -9716 0
c (0<=( - aux802 + SATLiteral(472) + SATLiteral(244)))
244 9716 0
472 9716 0
472 244 9715 0
c ((aux802 - aux803 + SATLiteral(123))<=0)
9715 -9718 0
9716 -9719 0
-123 -9718 0
-123 9715 -9719 0
-123 9716 -9721 0
c (0<=(aux802 - aux803 + SATLiteral(123)))
-9716 9721 0
-9715 9719 0
123 9721 0
123 -9716 9719 0
123 -9715 9718 0
c ((aux799 + aux801 - aux804)<=0)
9712 -9723 0
9713 -9724 0
9706 -9723 0
9706 9712 -9724 0
9706 9713 -9726 0
9707 -9724 0
9707 9712 -9726 0
9707 9713 -9728 0
c (0<=(aux799 + aux801 - aux804))
-9713 9728 0
-9712 9726 0
-9707 9728 0
-9707 -9713 9726 0
-9707 -9712 9724 0
-9706 9726 0
-9706 -9713 9724 0
-9706 -9712 9723 0
c ((SATLiteral(366) - aux805 + SATLiteral(566))<=0)
-566 -9730 0
-366 -9730 0
-366 -566 -9731 0
c (0<=(SATLiteral(366) - aux805 + SATLiteral(566)))
566 9731 0
366 9731 0
366 566 9730 0
c ((SATLiteral(873) - aux806 + SATLiteral(3))<=0)
-3 -9733 0
-873 -9733 0
-873 -3 -9734 0
c (0<=(SATLiteral(873) - aux806 + SATLiteral(3)))
3 9734 0
873 9734 0
873 3 9733 0
c (( - aux807 + SATLiteral(673) + SATLiteral(766))<=0)
-766 -9736 0
-673 -9736 0
-673 -766 -9737 0
c (0<=( - aux807 + SATLiteral(673) + SATLiteral(766)))
766 9737 0
673 9737 0
673 766 9736 0
c (( - aux808 + SATLiteral(473) + SATLiteral(245))<=0)
-245 -9739 0
-473 -9739 0
-473 -245 -9740 0
c (0<=( - aux808 + SATLiteral(473) + SATLiteral(245)))
245 9740 0
473 9740 0
473 245 9739 0
c ((aux808 - aux809 + SATLiteral(124))<=0)
9739 -9742 0
9740 -9743 0
-124 -9742 0
-124 9739 -9743 0
-124 9740 -9745 0
c (0<=(aux808 - aux809 + SATLiteral(124)))
-9740 9745 0
-9739 9743 0
124 9745 0
124 -9740 9743 0
124 -9739 9742 0
c ((aux805 + aux807 - aux810)<=0)
9736 -9747 0
9737 -9748 0
9730 -9747 0
9730 9736 -9748 0
9730 9737 -9750 0
9731 -9748 0
9731 9736 -9750 0
9731 9737 -9752 0
c (0<=(aux805 + aux807 - aux810))
-9737 9752 0
-9736 9750 0
-9731 9752 0
-9731 -9737 9750 0
-9731 -9736 9748 0
-9730 9750 0
-9730 -9737 9748 0
-9730 -9736 9747 0
c ((SATLiteral(367) - aux811 + SATLiteral(567))<=0)
-567 -9754 0
-367 -9754 0
-367 -567 -9755 0
c (0<=(SATLiteral(367) - aux811 + SATLiteral(567)))
567 9755 0
367 9755 0
367 567 9754 0
c ((SATLiteral(874) - aux812 + SATLiteral(4))<=0)
-4 -9757 0
-874 -9757 0
-874 -4 -9758 0
c (0<=(SATLiteral(874) - aux812 + SATLiteral(4)))
4 9758 0
874 9758 0
874 4 9757 0
c (( - aux813 + SATLiteral(674) + SATLiteral(767))<=0)
-767 -9760 0
-674 -9760 0
-674 -767 -9761 0
c (0<=( - aux813 + SATLiteral(674) + SATLiteral(767)))
767 9761 0
674 9761 0
674 767 9760 0
c (( - aux814 + SATLiteral(474) + SATLiteral(246))<=0)
-246 -9763 0
-474 -9763 0
-474 -246 -9764 0
c (0<=( - aux814 + SATLiteral(474) + SATLiteral(246)))
246 9764 0
474 9764 0
474 246 9763 0
c ((aux814 - aux815 + SATLiteral(125))<=0)
9763 -9766 0
9764 -9767 0
-125 -9766 0
-125 9763 -9767 0
-125 9764 -9769 0
c (0<=(aux814 - aux815 + SATLiteral(125)))
-9764 9769 0
-9763 9767 0
125 9769 0
125 -9764 9767 0
125 -9763 9766 0
c ((aux811 + aux813 - aux816)<=0)
9760 -9771 0
9761 -9772 0
9754 -9771 0
9754 9760 -9772 0
9754 9761 -9774 0
9755 -9772 0
9755 9760 -9774 0
9755 9761 -9776 0
c (0<=(aux811 + aux813 - aux816))
-9761 9776 0
-9760 9774 0
-9755 9776 0
-9755 -9761 9774 0
-9755 -9760 9772 0
-9754 9774 0
-9754 -9761 9772 0
-9754 -9760 9771 0
c ((SATLiteral(368) - aux817 + SATLiteral(568))<=0)
-568 -9778 0
-368 -9778 0
-368 -568 -9779 0
c (0<=(SATLiteral(368) - aux817 + SATLiteral(568)))
568 9779 0
368 9779 0
368 568 9778 0
c ((SATLiteral(875) - aux818 + SATLiteral(5))<=0)
-5 -9781 0
-875 -9781 0
-875 -5 -9782 0
c (0<=(SATLiteral(875) - aux818 + SATLiteral(5)))
5 9782 0
875 9782 0
875 5 9781 0
c (( - aux819 + SATLiteral(675) + SATLiteral(768))<=0)
-768 -9784 0
-675 -9784 0
-675 -768 -9785 0
c (0<=( - aux819 + SATLiteral(675) + SATLiteral(768)))
768 9785 0
675 9785 0
675 768 9784 0
c (( - aux820 + SATLiteral(475) + SATLiteral(247))<=0)
-247 -9787 0
-475 -9787 0
-475 -247 -9788 0
c (0<=( - aux820 + SATLiteral(475) + SATLiteral(247)))
247 9788 0
475 9788 0
475 247 9787 0
c ((aux820 - aux821 + SATLiteral(126))<=0)
9787 -9790 0
9788 -9791 0
-126 -9790 0
-126 9787 -9791 0
-126 9788 -9793 0
c (0<=(aux820 - aux821 + SATLiteral(126)))
-9788 9793 0
-9787 9791 0
126 9793 0
126 -9788 9791 0
126 -9787 9790 0
c ((aux817 + aux819 - aux822)<=0)
9784 -9795 0
9785 -9796 0
9778 -9795 0
9778 9784 -9796 0
9778 9785 -9798 0
9779 -9796 0
9779 9784 -9798 0
9779 9785 -9800 0
c (0<=(aux817 + aux819 - aux822))
-9785 9800 0
-9784 9798 0
-9779 9800 0
-9779 -9785 9798 0
-9779 -9784 9796 0
-9778 9798 0
-9778 -9785 9796 0
-9778 -9784 9795 0
c ((SATLiteral(369) - aux823 + SATLiteral(569))<=0)
-569 -9802 0
-369 -9802 0
-369 -569 -9803 0
c (0<=(SATLiteral(369) - aux823 + SATLiteral(569)))
569 9803 0
369 9803 0
369 569 9802 0
c ((SATLiteral(876) - aux824 + SATLiteral(6))<=0)
-6 -9805 0
-876 -9805 0
-876 -6 -9806 0
c (0<=(SATLiteral(876) - aux824 + SATLiteral(6)))
6 9806 0
876 9806 0
876 6 9805 0
c (( - aux825 + SATLiteral(676) + SATLiteral(769))<=0)
-769 -9808 0
-676 -9808 0
-676 -769 -9809 0
c (0<=( - aux825 + SATLiteral(676) + SATLiteral(769)))
769 9809 0
676 9809 0
676 769 9808 0
c (( - aux826 + SATLiteral(476) + SATLiteral(248))<=0)
-248 -9811 0
-476 -9811 0
-476 -248 -9812 0
c (0<=( - aux826 + SATLiteral(476) + SATLiteral(248)))
248 9812 0
476 9812 0
476 248 9811 0
c ((aux826 - aux827 + SATLiteral(127))<=0)
9811 -9814 0
9812 -9815 0
-127 -9814 0
-127 9811 -9815 0
-127 9812 -9817 0
c (0<=(aux826 - aux827 + SATLiteral(127)))
-9812 9817 0
-9811 9815 0
127 9817 0
127 -9812 9815 0
127 -9811 9814 0
c ((aux823 + aux825 - aux828)<=0)
9808 -9819 0
9809 -9820 0
9802 -9819 0
9802 9808 -9820 0
9802 9809 -9822 0
9803 -9820 0
9803 9808 -9822 0
9803 9809 -9824 0
c (0<=(aux823 + aux825 - aux828))
-9809 9824 0
-9808 9822 0
-9803 9824 0
-9803 -9809 9822 0
-9803 -9808 9820 0
-9802 9822 0
-9802 -9809 9820 0
-9802 -9808 9819 0
c ((SATLiteral(370) - aux829 + SATLiteral(570))<=0)
-570 -9826 0
-370 -9826 0
-370 -570 -9827 0
c (0<=(SATLiteral(370) - aux829 + SATLiteral(570)))
570 9827 0
370 9827 0
370 570 9826 0
c ((SATLiteral(877) - aux830 + SATLiteral(7))<=0)
-7 -9829 0
-877 -9829 0
-877 -7 -9830 0
c (0<=(SATLiteral(877) - aux830 + SATLiteral(7)))
7 9830 0
877 9830 0
877 7 9829 0
c (( - aux831 + SATLiteral(677) + SATLiteral(770))<=0)
-770 -9832 0
-677 -9832 0
-677 -770 -9833 0
c (0<=( - aux831 + SATLiteral(677) + SATLiteral(770)))
770 9833 0
677 9833 0
677 770 9832 0
c (( - aux832 + SATLiteral(477) + SATLiteral(249))<=0)
-249 -9835 0
-477 -9835 0
-477 -249 -9836 0
c (0<=( - aux832 + SATLiteral(477) + SATLiteral(249)))
249 9836 0
477 9836 0
477 249 9835 0
c ((aux832 - aux833 + SATLiteral(128))<=0)
9835 -9838 0
9836 -9839 0
-128 -9838 0
-128 9835 -9839 0
-128 9836 -9841 0
c (0<=(aux832 - aux833 + SATLiteral(128)))
-9836 9841 0
-9835 9839 0
128 9841 0
128 -9836 9839 0
128 -9835 9838 0
c ((aux829 + aux831 - aux834)<=0)
9832 -9843 0
9833 -9844 0
9826 -9843 0
9826 9832 -9844 0
9826 9833 -9846 0
9827 -9844 0
9827 9832 -9846 0
9827 9833 -9848 0
c (0<=(aux829 + aux831 - aux834))
-9833 9848 0
-9832 9846 0
-9827 9848 0
-9827 -9833 9846 0
-9827 -9832 9844 0
-9826 9846 0
-9826 -9833 9844 0
-9826 -9832 9843 0
c ((SATLiteral(371) - aux835 + SATLiteral(571))<=0)
-571 -9850 0
-371 -9850 0
-371 -571 -9851 0
c (0<=(SATLiteral(371) - aux835 + SATLiteral(571)))
571 9851 0
371 9851 0
371 571 9850 0
c ((SATLiteral(878) - aux836 + SATLiteral(8))<=0)
-8 -9853 0
-878 -9853 0
-878 -8 -9854 0
c (0<=(SATLiteral(878) - aux836 + SATLiteral(8)))
8 9854 0
878 9854 0
878 8 9853 0
c (( - aux837 + SATLiteral(678) + SATLiteral(771))<=0)
-771 -9856 0
-678 -9856 0
-678 -771 -9857 0
c (0<=( - aux837 + SATLiteral(678) + SATLiteral(771)))
771 9857 0
678 9857 0
678 771 9856 0
c (( - aux838 + SATLiteral(478) + SATLiteral(250))<=0)
-250 -9859 0
-478 -9859 0
-478 -250 -9860 0
c (0<=( - aux838 + SATLiteral(478) + SATLiteral(250)))
250 9860 0
478 9860 0
478 250 9859 0
c ((aux838 - aux839 + SATLiteral(129))<=0)
9859 -9862 0
9860 -9863 0
-129 -9862 0
-129 9859 -9863 0
-129 9860 -9865 0
c (0<=(aux838 - aux839 + SATLiteral(129)))
-9860 9865 0
-9859 9863 0
129 9865 0
129 -9860 9863 0
129 -9859 9862 0
c ((aux835 + aux837 - aux840)<=0)
9856 -9867 0
9857 -9868 0
9850 -9867 0
9850 9856 -9868 0
9850 9857 -9870 0
9851 -9868 0
9851 9856 -9870 0
9851 9857 -9872 0
c (0<=(aux835 + aux837 - aux840))
-9857 9872 0
-9856 9870 0
-9851 9872 0
-9851 -9857 9870 0
-9851 -9856 9868 0
-9850 9870 0
-9850 -9857 9868 0
-9850 -9856 9867 0
c ((SATLiteral(372) - aux841 + SATLiteral(572))<=0)
-572 -9874 0
-372 -9874 0
-372 -572 -9875 0
c (0<=(SATLiteral(372) - aux841 + SATLiteral(572)))
572 9875 0
372 9875 0
372 572 9874 0
c ((SATLiteral(879) - aux842 + SATLiteral(9))<=0)
-9 -9877 0
-879 -9877 0
-879 -9 -9878 0
c (0<=(SATLiteral(879) - aux842 + SATLiteral(9)))
9 9878 0
879 9878 0
879 9 9877 0
c (( - aux843 + SATLiteral(679) + SATLiteral(772))<=0)
-772 -9880 0
-679 -9880 0
-679 -772 -9881 0
c (0<=( - aux843 + SATLiteral(679) + SATLiteral(772)))
772 9881 0
679 9881 0
679 772 9880 0
c (( - aux844 + SATLiteral(479) + SATLiteral(251))<=0)
-251 -9883 0
-479 -9883 0
-479 -251 -9884 0
c (0<=( - aux844 + SATLiteral(479) + SATLiteral(251)))
251 9884 0
479 9884 0
479 251 9883 0
c ((aux844 - aux845 + SATLiteral(130))<=0)
9883 -9886 0
9884 -9887 0
-130 -9886 0
-130 9883 -9887 0
-130 9884 -9889 0
c (0<=(aux844 - aux845 + SATLiteral(130)))
-9884 9889 0
-9883 9887 0
130 9889 0
130 -9884 9887 0
130 -9883 9886 0
c ((aux841 + aux843 - aux846)<=0)
9880 -9891 0
9881 -9892 0
9874 -9891 0
9874 9880 -9892 0
9874 9881 -9894 0
9875 -9892 0
9875 9880 -9894 0
9875 9881 -9896 0
c (0<=(aux841 + aux843 - aux846))
-9881 9896 0
-9880 9894 0
-9875 9896 0
-9875 -9881 9894 0
-9875 -9880 9892 0
-9874 9894 0
-9874 -9881 9892 0
-9874 -9880 9891 0
c ((SATLiteral(373) - aux847 + SATLiteral(573))<=0)
-573 -9898 0
-373 -9898 0
-373 -573 -9899 0
c (0<=(SATLiteral(373) - aux847 + SATLiteral(573)))
573 9899 0
373 9899 0
373 573 9898 0
c ((SATLiteral(880) - aux848 + SATLiteral(10))<=0)
-10 -9901 0
-880 -9901 0
-880 -10 -9902 0
c (0<=(SATLiteral(880) - aux848 + SATLiteral(10)))
10 9902 0
880 9902 0
880 10 9901 0
c (( - aux849 + SATLiteral(680) + SATLiteral(773))<=0)
-773 -9904 0
-680 -9904 0
-680 -773 -9905 0
c (0<=( - aux849 + SATLiteral(680) + SATLiteral(773)))
773 9905 0
680 9905 0
680 773 9904 0
c (( - aux850 + SATLiteral(480) + SATLiteral(252))<=0)
-252 -9907 0
-480 -9907 0
-480 -252 -9908 0
c (0<=( - aux850 + SATLiteral(480) + SATLiteral(252)))
252 9908 0
480 9908 0
480 252 9907 0
c ((aux850 - aux851 + SATLiteral(131))<=0)
9907 -9910 0
9908 -9911 0
-131 -9910 0
-131 9907 -9911 0
-131 9908 -9913 0
c (0<=(aux850 - aux851 + SATLiteral(131)))
-9908 9913 0
-9907 9911 0
131 9913 0
131 -9908 9911 0
131 -9907 9910 0
c ((aux847 + aux849 - aux852)<=0)
9904 -9915 0
9905 -9916 0
9898 -9915 0
9898 9904 -9916 0
9898 9905 -9918 0
9899 -9916 0
9899 9904 -9918 0
9899 9905 -9920 0
c (0<=(aux847 + aux849 - aux852))
-9905 9920 0
-9904 9918 0
-9899 9920 0
-9899 -9905 9918 0
-9899 -9904 9916 0
-9898 9918 0
-9898 -9905 9916 0
-9898 -9904 9915 0
c ((SATLiteral(380) - aux853 + SATLiteral(17))<=0)
-17 -9922 0
-380 -9922 0
-380 -17 -9923 0
c (0<=(SATLiteral(380) - aux853 + SATLiteral(17)))
17 9923 0
380 9923 0
380 17 9922 0
c ((SATLiteral(887) - aux854 + SATLiteral(780))<=0)
-780 -9925 0
-887 -9925 0
-887 -780 -9926 0
c (0<=(SATLiteral(887) - aux854 + SATLiteral(780)))
780 9926 0
887 9926 0
887 780 9925 0
c (( - aux855 + SATLiteral(687) + SATLiteral(259))<=0)
-259 -9928 0
-687 -9928 0
-687 -259 -9929 0
c (0<=( - aux855 + SATLiteral(687) + SATLiteral(259)))
259 9929 0
687 9929 0
687 259 9928 0
c (( - aux856 + SATLiteral(138) + SATLiteral(487))<=0)
-487 -9931 0
-138 -9931 0
-138 -487 -9932 0
c (0<=( - aux856 + SATLiteral(138) + SATLiteral(487)))
487 9932 0
138 9932 0
138 487 9931 0
c ((aux853 + aux856 - aux857)<=0)
9931 -9934 0
9932 -9935 0
9922 -9934 0
9922 9931 -9935 0
9922 9932 -9937 0
9923 -9935 0
9923 9931 -9937 0
9923 9932 -9939 0
c (0<=(aux853 + aux856 - aux857))
-9932 9939 0
-9931 9937 0
-9923 9939 0
-9923 -9932 9937 0
-9923 -9931 9935 0
-9922 9937 0
-9922 -9932 9935 0
-9922 -9931 9934 0
c ((SATLiteral(381) - aux858 + SATLiteral(18))<=0)
-18 -9941 0
-381 -9941 0
-381 -18 -9942 0
c (0<=(SATLiteral(381) - aux858 + SATLiteral(18)))
18 9942 0
381 9942 0
381 18 9941 0
c ((SATLiteral(888) - aux859 + SATLiteral(781))<=0)
-781 -9944 0
-888 -9944 0
-888 -781 -9945 0
c (0<=(SATLiteral(888) - aux859 + SATLiteral(781)))
781 9945 0
888 9945 0
888 781 9944 0
c (( - aux860 + SATLiteral(688) + SATLiteral(260))<=0)
-260 -9947 0
-688 -9947 0
-688 -260 -9948 0
c (0<=( - aux860 + SATLiteral(688) + SATLiteral(260)))
260 9948 0
688 9948 0
688 260 9947 0
c (( - aux861 + SATLiteral(139) + SATLiteral(488))<=0)
-488 -9950 0
-139 -9950 0
-139 -488 -9951 0
c (0<=( - aux861 + SATLiteral(139) + SATLiteral(488)))
488 9951 0
139 9951 0
139 488 9950 0
c ((aux858 + aux861 - aux862)<=0)
9950 -9953 0
9951 -9954 0
9941 -9953 0
9941 9950 -9954 0
9941 9951 -9956 0
9942 -9954 0
9942 9950 -9956 0
9942 9951 -9958 0
c (0<=(aux858 + aux861 - aux862))
-9951 9958 0
-9950 9956 0
-9942 9958 0
-9942 -9951 9956 0
-9942 -9950 9954 0
-9941 9956 0
-9941 -9951 9954 0
-9941 -9950 9953 0
c ((SATLiteral(382) - aux863 + SATLiteral(19))<=0)
-19 -9960 0
-382 -9960 0
-382 -19 -9961 0
c (0<=(SATLiteral(382) - aux863 + SATLiteral(19)))
19 9961 0
382 9961 0
382 19 9960 0
c ((SATLiteral(889) - aux864 + SATLiteral(782))<=0)
-782 -9963 0
-889 -9963 0
-889 -782 -9964 0
c (0<=(SATLiteral(889) - aux864 + SATLiteral(782)))
782 9964 0
889 9964 0
889 782 9963 0
c (( - aux865 + SATLiteral(689) + SATLiteral(261))<=0)
-261 -9966 0
-689 -9966 0
-689 -261 -9967 0
c (0<=( - aux865 + SATLiteral(689) + SATLiteral(261)))
261 9967 0
689 9967 0
689 261 9966 0
c (( - aux866 + SATLiteral(140) + SATLiteral(489))<=0)
-489 -9969 0
-140 -9969 0
-140 -489 -9970 0
c (0<=( - aux866 + SATLiteral(140) + SATLiteral(489)))
489 9970 0
140 9970 0
140 489 9969 0
c ((aux863 + aux866 - aux867)<=0)
9969 -9972 0
9970 -9973 0
9960 -9972 0
9960 9969 -9973 0
9960 9970 -9975 0
9961 -9973 0
9961 9969 -9975 0
9961 9970 -9977 0
c (0<=(aux863 + aux866 - aux867))
-9970 9977 0
-9969 9975 0
-9961 9977 0
-9961 -9970 9975 0
-9961 -9969 9973 0
-9960 9975 0
-9960 -9970 9973 0
-9960 -9969 9972 0
c ((SATLiteral(383) - aux868 + SATLiteral(20))<=0)
-20 -9979 0
-383 -9979 0
-383 -20 -9980 0
c (0<=(SATLiteral(383) - aux868 + SATLiteral(20)))
20 9980 0
383 9980 0
383 20 9979 0
c ((SATLiteral(890) - aux869 + SATLiteral(783))<=0)
-783 -9982 0
-890 -9982 0
-890 -783 -9983 0
c (0<=(SATLiteral(890) - aux869 + SATLiteral(783)))
783 9983 0
890 9983 0
890 783 9982 0
c (( - aux870 + SATLiteral(690) + SATLiteral(262))<=0)
-262 -9985 0
-690 -9985 0
-690 -262 -9986 0
c (0<=( - aux870 + SATLiteral(690) + SATLiteral(262)))
262 9986 0
690 9986 0
690 262 9985 0
c (( - aux871 + SATLiteral(141) + SATLiteral(490))<=0)
-490 -9988 0
-141 -9988 0
-141 -490 -9989 0
c (0<=( - aux871 + SATLiteral(141) + SATLiteral(490)))
490 9989 0
141 9989 0
141 490 9988 0
c ((aux868 + aux871 - aux872)<=0)
9988 -9991 0
9989 -9992 0
9979 -9991 0
9979 9988 -9992 0
9979 9989 -9994 0
9980 -9992 0
9980 9988 -9994 0
9980 9989 -9996 0
c (0<=(aux868 + aux871 - aux872))
-9989 9996 0
-9988 9994 0
-9980 9996 0
-9980 -9989 9994 0
-9980 -9988 9992 0
-9979 9994 0
-9979 -9989 9992 0
-9979 -9988 9991 0
c ((SATLiteral(384) - aux873 + SATLiteral(21))<=0)
-21 -9998 0
-384 -9998 0
-384 -21 -9999 0
c (0<=(SATLiteral(384) - aux873 + SATLiteral(21)))
21 9999 0
384 9999 0
384 21 9998 0
c ((SATLiteral(891) - aux874 + SATLiteral(784))<=0)
-784 -10001 0
-891 -10001 0
-891 -784 -10002 0
c (0<=(SATLiteral(891) - aux874 + SATLiteral(784)))
784 10002 0
891 10002 0
891 784 10001 0
c (( - aux875 + SATLiteral(691) + SATLiteral(263))<=0)
-263 -10004 0
-691 -10004 0
-691 -263 -10005 0
c (0<=( - aux875 + SATLiteral(691) + SATLiteral(263)))
263 10005 0
691 10005 0
691 263 10004 0
c (( - aux876 + SATLiteral(142) + SATLiteral(491))<=0)
-491 -10007 0
-142 -10007 0
-142 -491 -10008 0
c (0<=( - aux876 + SATLiteral(142) + SATLiteral(491)))
491 10008 0
142 10008 0
142 491 10007 0
c ((aux873 + aux876 - aux877)<=0)
10007 -10010 0
10008 -10011 0
9998 -10010 0
9998 10007 -10011 0
9998 10008 -10013 0
9999 -10011 0
9999 10007 -10013 0
9999 10008 -10015 0
c (0<=(aux873 + aux876 - aux877))
-10008 10015 0
-10007 10013 0
-9999 10015 0
-9999 -10008 10013 0
-9999 -10007 10011 0
-9998 10013 0
-9998 -10008 10011 0
-9998 -10007 10010 0
c ((SATLiteral(385) - aux878 + SATLiteral(22))<=0)
-22 -10017 0
-385 -10017 0
-385 -22 -10018 0
c (0<=(SATLiteral(385) - aux878 + SATLiteral(22)))
22 10018 0
385 10018 0
385 22 10017 0
c ((SATLiteral(892) - aux879 + SATLiteral(785))<=0)
-785 -10020 0
-892 -10020 0
-892 -785 -10021 0
c (0<=(SATLiteral(892) - aux879 + SATLiteral(785)))
785 10021 0
892 10021 0
892 785 10020 0
c (( - aux880 + SATLiteral(692) + SATLiteral(264))<=0)
-264 -10023 0
-692 -10023 0
-692 -264 -10024 0
c (0<=( - aux880 + SATLiteral(692) + SATLiteral(264)))
264 10024 0
692 10024 0
692 264 10023 0
c (( - aux881 + SATLiteral(143) + SATLiteral(492))<=0)
-492 -10026 0
-143 -10026 0
-143 -492 -10027 0
c (0<=( - aux881 + SATLiteral(143) + SATLiteral(492)))
492 10027 0
143 10027 0
143 492 10026 0
c ((aux878 + aux881 - aux882)<=0)
10026 -10029 0
10027 -10030 0
10017 -10029 0
10017 10026 -10030 0
10017 10027 -10032 0
10018 -10030 0
10018 10026 -10032 0
10018 10027 -10034 0
c (0<=(aux878 + aux881 - aux882))
-10027 10034 0
-10026 10032 0
-10018 10034 0
-10018 -10027 10032 0
-10018 -10026 10030 0
-10017 10032 0
-10017 -10027 10030 0
-10017 -10026 10029 0
c ((SATLiteral(386) - aux883 + SATLiteral(23))<=0)
-23 -10036 0
-386 -10036 0
-386 -23 -10037 0
c (0<=(SATLiteral(386) - aux883 + SATLiteral(23)))
23 10037 0
386 10037 0
386 23 10036 0
c ((SATLiteral(893) - aux884 + SATLiteral(786))<=0)
-786 -10039 0
-893 -10039 0
-893 -786 -10040 0
c (0<=(SATLiteral(893) - aux884 + SATLiteral(786)))
786 10040 0
893 10040 0
893 786 10039 0
c (( - aux885 + SATLiteral(693) + SATLiteral(265))<=0)
-265 -10042 0
-693 -10042 0
-693 -265 -10043 0
c (0<=( - aux885 + SATLiteral(693) + SATLiteral(265)))
265 10043 0
693 10043 0
693 265 10042 0
c (( - aux886 + SATLiteral(144) + SATLiteral(493))<=0)
-493 -10045 0
-144 -10045 0
-144 -493 -10046 0
c (0<=( - aux886 + SATLiteral(144) + SATLiteral(493)))
493 10046 0
144 10046 0
144 493 10045 0
c ((aux883 + aux886 - aux887)<=0)
10045 -10048 0
10046 -10049 0
10036 -10048 0
10036 10045 -10049 0
10036 10046 -10051 0
10037 -10049 0
10037 10045 -10051 0
10037 10046 -10053 0
c (0<=(aux883 + aux886 - aux887))
-10046 10053 0
-10045 10051 0
-10037 10053 0
-10037 -10046 10051 0
-10037 -10045 10049 0
-10036 10051 0
-10036 -10046 10049 0
-10036 -10045 10048 0
c ((SATLiteral(387) - aux888 + SATLiteral(580))<=0)
-387 10055 -580 0
c (0<=(SATLiteral(387) - aux888 + SATLiteral(580)))
-10055 580 0
387 580 0
387 -10055 0
c ((aux888 - aux889 + SATLiteral(24))<=0)
-24 -10056 0
-10055 -10056 0
-10055 -24 -10057 0
c (0<=(aux888 - aux889 + SATLiteral(24)))
24 10057 0
10055 10057 0
10055 24 10056 0
c ((SATLiteral(894) - aux890 + SATLiteral(787))<=0)
-787 -10059 0
-894 -10059 0
-894 -787 -10060 0
c (0<=(SATLiteral(894) - aux890 + SATLiteral(787)))
787 10060 0
894 10060 0
894 787 10059 0
c (( - aux891 + SATLiteral(694) + SATLiteral(266))<=0)
-266 -10062 0
-694 -10062 0
-694 -266 -10063 0
c (0<=( - aux891 + SATLiteral(694) + SATLiteral(266)))
266 10063 0
694 10063 0
694 266 10062 0
c (( - aux892 + SATLiteral(145) + SATLiteral(494))<=0)
-494 -10065 0
-145 -10065 0
-145 -494 -10066 0
c (0<=( - aux892 + SATLiteral(145) + SATLiteral(494)))
494 10066 0
145 10066 0
145 494 10065 0
c ((aux889 + aux892 - aux893)<=0)
10065 -10068 0
10066 -10069 0
10056 -10068 0
10056 10065 -10069 0
10056 10066 -10071 0
10057 -10069 0
10057 10065 -10071 0
10057 10066 -10073 0
c (0<=(aux889 + aux892 - aux893))
-10066 10073 0
-10065 10071 0
-10057 10073 0
-10057 -10066 10071 0
-10057 -10065 10069 0
-10056 10071 0
-10056 -10066 10069 0
-10056 -10065 10068 0
c ((SATLiteral(388) - aux894 + SATLiteral(25))<=0)
-25 -10075 0
-388 -10075 0
-388 -25 -10076 0
c (0<=(SATLiteral(388) - aux894 + SATLiteral(25)))
25 10076 0
388 10076 0
388 25 10075 0
c ((SATLiteral(895) - aux895 + SATLiteral(788))<=0)
-788 -10078 0
-895 -10078 0
-895 -788 -10079 0
c (0<=(SATLiteral(895) - aux895 + SATLiteral(788)))
788 10079 0
895 10079 0
895 788 10078 0
c (( - aux896 + SATLiteral(695) + SATLiteral(267))<=0)
-267 -10081 0
-695 -10081 0
-695 -267 -10082 0
c (0<=( - aux896 + SATLiteral(695) + SATLiteral(267)))
267 10082 0
695 10082 0
695 267 10081 0
c (( - aux897 + SATLiteral(146) + SATLiteral(495))<=0)
-495 -10084 0
-146 -10084 0
-146 -495 -10085 0
c (0<=( - aux897 + SATLiteral(146) + SATLiteral(495)))
495 10085 0
146 10085 0
146 495 10084 0
c ((aux894 + aux897 - aux898)<=0)
10084 -10087 0
10085 -10088 0
10075 -10087 0
10075 10084 -10088 0
10075 10085 -10090 0
10076 -10088 0
10076 10084 -10090 0
10076 10085 -10092 0
c (0<=(aux894 + aux897 - aux898))
-10085 10092 0
-10084 10090 0
-10076 10092 0
-10076 -10085 10090 0
-10076 -10084 10088 0
-10075 10090 0
-10075 -10085 10088 0
-10075 -10084 10087 0
c ((SATLiteral(395) - aux899 + SATLiteral(581))<=0)
-395 10094 -581 0
c (0<=(SATLiteral(395) - aux899 + SATLiteral(581)))
-10094 581 0
395 581 0
395 -10094 0
c ((aux899 - aux900 + SATLiteral(32))<=0)
-32 -10095 0
-10094 -10095 0
-10094 -32 -10096 0
c (0<=(aux899 - aux900 + SATLiteral(32)))
32 10096 0
10094 10096 0
10094 32 10095 0
c ((SATLiteral(902) - aux901 + SATLiteral(274))<=0)
-274 -10098 0
-902 -10098 0
-902 -274 -10099 0
c (0<=(SATLiteral(902) - aux901 + SATLiteral(274)))
274 10099 0
902 10099 0
902 274 10098 0
c (( - aux902 + SATLiteral(702) + SATLiteral(502))<=0)
-502 -10101 0
-702 -10101 0
-702 -502 -10102 0
c (0<=( - aux902 + SATLiteral(702) + SATLiteral(502)))
502 10102 0
702 10102 0
702 502 10101 0
c ((aux902 - aux903 + SATLiteral(153))<=0)
10101 -10104 0
10102 -10105 0
-153 -10104 0
-153 10101 -10105 0
-153 10102 -10107 0
c (0<=(aux902 - aux903 + SATLiteral(153)))
-10102 10107 0
-10101 10105 0
153 10107 0
153 -10102 10105 0
153 -10101 10104 0
c ((SATLiteral(903) - aux904 + SATLiteral(582))<=0)
-582 -10109 0
-903 -10109 0
-903 -582 -10110 0
c (0<=(SATLiteral(903) - aux904 + SATLiteral(582)))
582 10110 0
903 10110 0
903 582 10109 0
c (( - aux905 + SATLiteral(154) + SATLiteral(33))<=0)
-33 -10112 0
-154 -10112 0
-154 -33 -10113 0
c (0<=( - aux905 + SATLiteral(154) + SATLiteral(33)))
33 10113 0
154 10113 0
154 33 10112 0
c (( - aux906 + SATLiteral(503) + SATLiteral(275))<=0)
-275 -10115 0
-503 -10115 0
-503 -275 -10116 0
c (0<=( - aux906 + SATLiteral(503) + SATLiteral(275)))
275 10116 0
503 10116 0
503 275 10115 0
c ((aux906 - aux907 + SATLiteral(703))<=0)
10115 -10118 0
10116 -10119 0
-703 -10118 0
-703 10115 -10119 0
-703 10116 -10121 0
c (0<=(aux906 - aux907 + SATLiteral(703)))
-10116 10121 0
-10115 10119 0
703 10121 0
703 -10116 10119 0
703 -10115 10118 0
c ((SATLiteral(904) - aux908 + SATLiteral(583))<=0)
-583 -10123 0
-904 -10123 0
-904 -583 -10124 0
c (0<=(SATLiteral(904) - aux908 + SATLiteral(583)))
583 10124 0
904 10124 0
904 583 10123 0
c (( - aux909 + SATLiteral(155) + SATLiteral(34))<=0)
-34 -10126 0
-155 -10126 0
-155 -34 -10127 0
c (0<=( - aux909 + SATLiteral(155) + SATLiteral(34)))
34 10127 0
155 10127 0
155 34 10126 0
c (( - aux910 + SATLiteral(504) + SATLiteral(276))<=0)
-276 -10129 0
-504 -10129 0
-504 -276 -10130 0
c (0<=( - aux910 + SATLiteral(504) + SATLiteral(276)))
276 10130 0
504 10130 0
504 276 10129 0
c ((aux910 - aux911 + SATLiteral(704))<=0)
10129 -10132 0
10130 -10133 0
-704 -10132 0
-704 10129 -10133 0
-704 10130 -10135 0
c (0<=(aux910 - aux911 + SATLiteral(704)))
-10130 10135 0
-10129 10133 0
704 10135 0
704 -10130 10133 0
704 -10129 10132 0
c ((SATLiteral(905) - aux912 + SATLiteral(584))<=0)
-584 -10137 0
-905 -10137 0
-905 -584 -10138 0
c (0<=(SATLiteral(905) - aux912 + SATLiteral(584)))
584 10138 0
905 10138 0
905 584 10137 0
c (( - aux913 + SATLiteral(156) + SATLiteral(35))<=0)
-35 -10140 0
-156 -10140 0
-156 -35 -10141 0
c (0<=( - aux913 + SATLiteral(156) + SATLiteral(35)))
35 10141 0
156 10141 0
156 35 10140 0
c (( - aux914 + SATLiteral(505) + SATLiteral(277))<=0)
-277 -10143 0
-505 -10143 0
-505 -277 -10144 0
c (0<=( - aux914 + SATLiteral(505) + SATLiteral(277)))
277 10144 0
505 10144 0
505 277 10143 0
c ((aux914 - aux915 + SATLiteral(705))<=0)
10143 -10146 0
10144 -10147 0
-705 -10146 0
-705 10143 -10147 0
-705 10144 -10149 0
c (0<=(aux914 - aux915 + SATLiteral(705)))
-10144 10149 0
-10143 10147 0
705 10149 0
705 -10144 10147 0
705 -10143 10146 0
c ((SATLiteral(906) - aux916 + SATLiteral(585))<=0)
-585 -10151 0
-906 -10151 0
-906 -585 -10152 0
c (0<=(SATLiteral(906) - aux916 + SATLiteral(585)))
585 10152 0
906 10152 0
906 585 10151 0
c (( - aux917 + SATLiteral(157) + SATLiteral(36))<=0)
-36 -10154 0
-157 -10154 0
-157 -36 -10155 0
c (0<=( - aux917 + SATLiteral(157) + SATLiteral(36)))
36 10155 0
157 10155 0
157 36 10154 0
c (( - aux918 + SATLiteral(506) + SATLiteral(278))<=0)
-278 -10157 0
-506 -10157 0
-506 -278 -10158 0
c (0<=( - aux918 + SATLiteral(506) + SATLiteral(278)))
278 10158 0
506 10158 0
506 278 10157 0
c ((aux918 - aux919 + SATLiteral(706))<=0)
10157 -10160 0
10158 -10161 0
-706 -10160 0
-706 10157 -10161 0
-706 10158 -10163 0
c (0<=(aux918 - aux919 + SATLiteral(706)))
-10158 10163 0
-10157 10161 0
706 10163 0
706 -10158 10161 0
706 -10157 10160 0
c ((SATLiteral(907) - aux920 + SATLiteral(586))<=0)
-586 -10165 0
-907 -10165 0
-907 -586 -10166 0
c (0<=(SATLiteral(907) - aux920 + SATLiteral(586)))
586 10166 0
907 10166 0
907 586 10165 0
c (( - aux921 + SATLiteral(158) + SATLiteral(37))<=0)
-37 -10168 0
-158 -10168 0
-158 -37 -10169 0
c (0<=( - aux921 + SATLiteral(158) + SATLiteral(37)))
37 10169 0
158 10169 0
158 37 10168 0
c (( - aux922 + SATLiteral(507) + SATLiteral(279))<=0)
-279 -10171 0
-507 -10171 0
-507 -279 -10172 0
c (0<=( - aux922 + SATLiteral(507) + SATLiteral(279)))
279 10172 0
507 10172 0
507 279 10171 0
c ((aux922 - aux923 + SATLiteral(707))<=0)
10171 -10174 0
10172 -10175 0
-707 -10174 0
-707 10171 -10175 0
-707 10172 -10177 0
c (0<=(aux922 - aux923 + SATLiteral(707)))
-10172 10177 0
-10171 10175 0
707 10177 0
707 -10172 10175 0
707 -10171 10174 0
c ((SATLiteral(908) - aux924 + SATLiteral(587))<=0)
-587 -10179 0
-908 -10179 0
-908 -587 -10180 0
c (0<=(SATLiteral(908) - aux924 + SATLiteral(587)))
587 10180 0
908 10180 0
908 587 10179 0
c (( - aux925 + SATLiteral(159) + SATLiteral(38))<=0)
-38 -10182 0
-159 -10182 0
-159 -38 -10183 0
c (0<=( - aux925 + SATLiteral(159) + SATLiteral(38)))
38 10183 0
159 10183 0
159 38 10182 0
c (( - aux926 + SATLiteral(508) + SATLiteral(280))<=0)
-280 -10185 0
-508 -10185 0
-508 -280 -10186 0
c (0<=( - aux926 + SATLiteral(508) + SATLiteral(280)))
280 10186 0
508 10186 0
508 280 10185 0
c ((aux926 - aux927 + SATLiteral(708))<=0)
10185 -10188 0
10186 -10189 0
-708 -10188 0
-708 10185 -10189 0
-708 10186 -10191 0
c (0<=(aux926 - aux927 + SATLiteral(708)))
-10186 10191 0
-10185 10189 0
708 10191 0
708 -10186 10189 0
708 -10185 10188 0
c ((SATLiteral(909) - aux928 + SATLiteral(588))<=0)
-588 -10193 0
-909 -10193 0
-909 -588 -10194 0
c (0<=(SATLiteral(909) - aux928 + SATLiteral(588)))
588 10194 0
909 10194 0
909 588 10193 0
c (( - aux929 + SATLiteral(160) + SATLiteral(39))<=0)
-39 -10196 0
-160 -10196 0
-160 -39 -10197 0
c (0<=( - aux929 + SATLiteral(160) + SATLiteral(39)))
39 10197 0
160 10197 0
160 39 10196 0
c (( - aux930 + SATLiteral(509) + SATLiteral(795))<=0)
10199 -509 -795 0
c (0<=( - aux930 + SATLiteral(509) + SATLiteral(795)))
509 795 0
-10199 795 0
-10199 509 0
c ((aux930 - aux931 + SATLiteral(281))<=0)
-281 -10200 0
-10199 -10200 0
-10199 -281 -10201 0
c (0<=(aux930 - aux931 + SATLiteral(281)))
281 10201 0
10199 10201 0
10199 281 10200 0
c ((aux931 - aux932 + SATLiteral(709))<=0)
10200 -10203 0
10201 -10204 0
-709 -10203 0
-709 10200 -10204 0
-709 10201 -10206 0
c (0<=(aux931 - aux932 + SATLiteral(709)))
-10201 10206 0
-10200 10204 0
709 10206 0
709 -10201 10204 0
709 -10200 10203 0
c ((SATLiteral(910) - aux933 + SATLiteral(589))<=0)
-589 -10208 0
-910 -10208 0
-910 -589 -10209 0
c (0<=(SATLiteral(910) - aux933 + SATLiteral(589)))
589 10209 0
910 10209 0
910 589 10208 0
c (( - aux934 + SATLiteral(161) + SATLiteral(40))<=0)
-40 -10211 0
-161 -10211 0
-161 -40 -10212 0
c (0<=( - aux934 + SATLiteral(161) + SATLiteral(40)))
40 10212 0
161 10212 0
161 40 10211 0
c (( - aux935 + SATLiteral(510) + SATLiteral(282))<=0)
-282 -10214 0
-510 -10214 0
-510 -282 -10215 0
c (0<=( - aux935 + SATLiteral(510) + SATLiteral(282)))
282 10215 0
510 10215 0
510 282 10214 0
c ((aux935 - aux936 + SATLiteral(710))<=0)
10214 -10217 0
10215 -10218 0
-710 -10217 0
-710 10214 -10218 0
-710 10215 -10220 0
c (0<=(aux935 - aux936 + SATLiteral(710)))
-10215 10220 0
-10214 10218 0
710 10220 0
710 -10215 10218 0
710 -10214 10217 0
c ((SATLiteral(396) - aux937 + SATLiteral(596))<=0)
-596 -10222 0
-396 -10222 0
-396 -596 -10223 0
c (0<=(SATLiteral(396) - aux937 + SATLiteral(596)))
596 10223 0
396 10223 0
396 596 10222 0
c ((SATLiteral(917) - aux938 + SATLiteral(47))<=0)
-47 -10225 0
-917 -10225 0
-917 -47 -10226 0
c (0<=(SATLiteral(917) - aux938 + SATLiteral(47)))
47 10226 0
917 10226 0
917 47 10225 0
c (( - aux939 + SATLiteral(517) + SATLiteral(796))<=0)
10228 -517 -796 0
c (0<=( - aux939 + SATLiteral(517) + SATLiteral(796)))
517 796 0
-10228 796 0
-10228 517 0
c ((aux939 - aux940 + SATLiteral(289))<=0)
-289 -10229 0
-10228 -10229 0
-10228 -289 -10230 0
c (0<=(aux939 - aux940 + SATLiteral(289)))
289 10230 0
10228 10230 0
10228 289 10229 0
c ((aux940 - aux941 + SATLiteral(168))<=0)
10229 -10232 0
10230 -10233 0
-168 -10232 0
-168 10229 -10233 0
-168 10230 -10235 0
c (0<=(aux940 - aux941 + SATLiteral(168)))
-10230 10235 0
-10229 10233 0
168 10235 0
168 -10230 10233 0
168 -10229 10232 0
c ((SATLiteral(397) - aux942 + SATLiteral(597))<=0)
-597 -10237 0
-397 -10237 0
-397 -597 -10238 0
c (0<=(SATLiteral(397) - aux942 + SATLiteral(597)))
597 10238 0
397 10238 0
397 597 10237 0
c ((SATLiteral(918) - aux943 + SATLiteral(48))<=0)
-48 -10240 0
-918 -10240 0
-918 -48 -10241 0
c (0<=(SATLiteral(918) - aux943 + SATLiteral(48)))
48 10241 0
918 10241 0
918 48 10240 0
c (( - aux944 + SATLiteral(290) + SATLiteral(797))<=0)
-797 -10243 0
-290 -10243 0
-290 -797 -10244 0
c (0<=( - aux944 + SATLiteral(290) + SATLiteral(797)))
797 10244 0
290 10244 0
290 797 10243 0
c ((aux944 - aux945 + SATLiteral(169))<=0)
10243 -10246 0
10244 -10247 0
-169 -10246 0
-169 10243 -10247 0
-169 10244 -10249 0
c (0<=(aux944 - aux945 + SATLiteral(169)))
-10244 10249 0
-10243 10247 0
169 10249 0
169 -10244 10247 0
169 -10243 10246 0
c ((SATLiteral(398) - aux946 + SATLiteral(598))<=0)
-598 -10251 0
-398 -10251 0
-398 -598 -10252 0
c (0<=(SATLiteral(398) - aux946 + SATLiteral(598)))
598 10252 0
398 10252 0
398 598 10251 0
c ((SATLiteral(919) - aux947 + SATLiteral(49))<=0)
-49 -10254 0
-919 -10254 0
-919 -49 -10255 0
c (0<=(SATLiteral(919) - aux947 + SATLiteral(49)))
49 10255 0
919 10255 0
919 49 10254 0
c (( - aux948 + SATLiteral(717) + SATLiteral(798))<=0)
10257 -717 -798 0
c (0<=( - aux948 + SATLiteral(717) + SATLiteral(798)))
717 798 0
-10257 798 0
-10257 717 0
c ((aux948 - aux949 + SATLiteral(291))<=0)
-291 -10258 0
-10257 -10258 0
-10257 -291 -10259 0
c (0<=(aux948 - aux949 + SATLiteral(291)))
291 10259 0
10257 10259 0
10257 291 10258 0
c ((aux949 - aux950 + SATLiteral(170))<=0)
10258 -10261 0
10259 -10262 0
-170 -10261 0
-170 10258 -10262 0
-170 10259 -10264 0
c (0<=(aux949 - aux950 + SATLiteral(170)))
-10259 10264 0
-10258 10262 0
170 10264 0
170 -10259 10262 0
170 -10258 10261 0
c ((SATLiteral(399) - aux951 + SATLiteral(599))<=0)
-599 -10266 0
-399 -10266 0
-399 -599 -10267 0
c (0<=(SATLiteral(399) - aux951 + SATLiteral(599)))
599 10267 0
399 10267 0
399 599 10266 0
c ((SATLiteral(920) - aux952 + SATLiteral(50))<=0)
-50 -10269 0
-920 -10269 0
-920 -50 -10270 0
c (0<=(SATLiteral(920) - aux952 + SATLiteral(50)))
50 10270 0
920 10270 0
920 50 10269 0
c (( - aux953 + SATLiteral(292) + SATLiteral(799))<=0)
-799 -10272 0
-292 -10272 0
-292 -799 -10273 0
c (0<=( - aux953 + SATLiteral(292) + SATLiteral(799)))
799 10273 0
292 10273 0
292 799 10272 0
c ((aux953 - aux954 + SATLiteral(171))<=0)
10272 -10275 0
10273 -10276 0
-171 -10275 0
-171 10272 -10276 0
-171 10273 -10278 0
c (0<=(aux953 - aux954 + SATLiteral(171)))
-10273 10278 0
-10272 10276 0
171 10278 0
171 -10273 10276 0
171 -10272 10275 0
c ((SATLiteral(400) - aux955 + SATLiteral(600))<=0)
-600 -10280 0
-400 -10280 0
-400 -600 -10281 0
c (0<=(SATLiteral(400) - aux955 + SATLiteral(600)))
600 10281 0
400 10281 0
400 600 10280 0
c ((SATLiteral(921) - aux956 + SATLiteral(51))<=0)
-51 -10283 0
-921 -10283 0
-921 -51 -10284 0
c (0<=(SATLiteral(921) - aux956 + SATLiteral(51)))
51 10284 0
921 10284 0
921 51 10283 0
c (( - aux957 + SATLiteral(293) + SATLiteral(800))<=0)
-800 -10286 0
-293 -10286 0
-293 -800 -10287 0
c (0<=( - aux957 + SATLiteral(293) + SATLiteral(800)))
800 10287 0
293 10287 0
293 800 10286 0
c ((aux957 - aux958 + SATLiteral(172))<=0)
10286 -10289 0
10287 -10290 0
-172 -10289 0
-172 10286 -10290 0
-172 10287 -10292 0
c (0<=(aux957 - aux958 + SATLiteral(172)))
-10287 10292 0
-10286 10290 0
172 10292 0
172 -10287 10290 0
172 -10286 10289 0
c ((SATLiteral(401) - aux959 + SATLiteral(601))<=0)
-601 -10294 0
-401 -10294 0
-401 -601 -10295 0
c (0<=(SATLiteral(401) - aux959 + SATLiteral(601)))
601 10295 0
401 10295 0
401 601 10294 0
c ((SATLiteral(922) - aux960 + SATLiteral(52))<=0)
-52 -10297 0
-922 -10297 0
-922 -52 -10298 0
c (0<=(SATLiteral(922) - aux960 + SATLiteral(52)))
52 10298 0
922 10298 0
922 52 10297 0
c (( - aux961 + SATLiteral(294) + SATLiteral(801))<=0)
-801 -10300 0
-294 -10300 0
-294 -801 -10301 0
c (0<=( - aux961 + SATLiteral(294) + SATLiteral(801)))
801 10301 0
294 10301 0
294 801 10300 0
c ((aux961 - aux962 + SATLiteral(173))<=0)
10300 -10303 0
10301 -10304 0
-173 -10303 0
-173 10300 -10304 0
-173 10301 -10306 0
c (0<=(aux961 - aux962 + SATLiteral(173)))
-10301 10306 0
-10300 10304 0
173 10306 0
173 -10301 10304 0
173 -10300 10303 0
c ((SATLiteral(402) - aux963 + SATLiteral(602))<=0)
-602 -10308 0
-402 -10308 0
-402 -602 -10309 0
c (0<=(SATLiteral(402) - aux963 + SATLiteral(602)))
602 10309 0
402 10309 0
402 602 10308 0
c ((SATLiteral(923) - aux964 + SATLiteral(53))<=0)
-53 -10311 0
-923 -10311 0
-923 -53 -10312 0
c (0<=(SATLiteral(923) - aux964 + SATLiteral(53)))
53 10312 0
923 10312 0
923 53 10311 0
c (( - aux965 + SATLiteral(295) + SATLiteral(802))<=0)
-802 -10314 0
-295 -10314 0
-295 -802 -10315 0
c (0<=( - aux965 + SATLiteral(295) + SATLiteral(802)))
802 10315 0
295 10315 0
295 802 10314 0
c ((aux965 - aux966 + SATLiteral(174))<=0)
10314 -10317 0
10315 -10318 0
-174 -10317 0
-174 10314 -10318 0
-174 10315 -10320 0
c (0<=(aux965 - aux966 + SATLiteral(174)))
-10315 10320 0
-10314 10318 0
174 10320 0
174 -10315 10318 0
174 -10314 10317 0
c ((SATLiteral(403) - aux967 + SATLiteral(603))<=0)
-603 -10322 0
-403 -10322 0
-403 -603 -10323 0
c (0<=(SATLiteral(403) - aux967 + SATLiteral(603)))
603 10323 0
403 10323 0
403 603 10322 0
c ((SATLiteral(924) - aux968 + SATLiteral(54))<=0)
-54 -10325 0
-924 -10325 0
-924 -54 -10326 0
c (0<=(SATLiteral(924) - aux968 + SATLiteral(54)))
54 10326 0
924 10326 0
924 54 10325 0
c (( - aux969 + SATLiteral(296) + SATLiteral(803))<=0)
-803 -10328 0
-296 -10328 0
-296 -803 -10329 0
c (0<=( - aux969 + SATLiteral(296) + SATLiteral(803)))
803 10329 0
296 10329 0
296 803 10328 0
c ((aux969 - aux970 + SATLiteral(175))<=0)
10328 -10331 0
10329 -10332 0
-175 -10331 0
-175 10328 -10332 0
-175 10329 -10334 0
c (0<=(aux969 - aux970 + SATLiteral(175)))
-10329 10334 0
-10328 10332 0
175 10334 0
175 -10329 10332 0
175 -10328 10331 0
c ((SATLiteral(404) - aux971 + SATLiteral(604))<=0)
-604 -10336 0
-404 -10336 0
-404 -604 -10337 0
c (0<=(SATLiteral(404) - aux971 + SATLiteral(604)))
604 10337 0
404 10337 0
404 604 10336 0
c ((SATLiteral(925) - aux972 + SATLiteral(55))<=0)
-55 -10339 0
-925 -10339 0
-925 -55 -10340 0
c (0<=(SATLiteral(925) - aux972 + SATLiteral(55)))
55 10340 0
925 10340 0
925 55 10339 0
c (( - aux973 + SATLiteral(297) + SATLiteral(804))<=0)
-804 -10342 0
-297 -10342 0
-297 -804 -10343 0
c (0<=( - aux973 + SATLiteral(297) + SATLiteral(804)))
804 10343 0
297 10343 0
297 804 10342 0
c ((aux973 - aux974 + SATLiteral(176))<=0)
10342 -10345 0
10343 -10346 0
-176 -10345 0
-176 10342 -10346 0
-176 10343 -10348 0
c (0<=(aux973 - aux974 + SATLiteral(176)))
-10343 10348 0
-10342 10346 0
176 10348 0
176 -10343 10346 0
176 -10342 10345 0
c ((SATLiteral(411) - aux975 + SATLiteral(611))<=0)
-611 -10350 0
-411 -10350 0
-411 -611 -10351 0
c (0<=(SATLiteral(411) - aux975 + SATLiteral(611)))
611 10351 0
411 10351 0
411 611 10350 0
c ((SATLiteral(932) - aux976 + SATLiteral(62))<=0)
-932 10353 -62 0
c (0<=(SATLiteral(932) - aux976 + SATLiteral(62)))
-10353 62 0
932 62 0
932 -10353 0
c ((aux976 - aux977 + SATLiteral(304))<=0)
-304 -10354 0
-10353 -10354 0
-10353 -304 -10355 0
c (0<=(aux976 - aux977 + SATLiteral(304)))
304 10355 0
10353 10355 0
10353 304 10354 0
c (( - aux978 + SATLiteral(718) + SATLiteral(518))<=0)
-518 -10357 0
-718 -10357 0
-718 -518 -10358 0
c (0<=( - aux978 + SATLiteral(718) + SATLiteral(518)))
518 10358 0
718 10358 0
718 518 10357 0
c ((aux978 - aux979 + SATLiteral(183))<=0)
10357 -10360 0
10358 -10361 0
-183 -10360 0
-183 10357 -10361 0
-183 10358 -10363 0
c (0<=(aux978 - aux979 + SATLiteral(183)))
-10358 10363 0
-10357 10361 0
183 10363 0
183 -10358 10361 0
183 -10357 10360 0
c ((SATLiteral(412) - aux980 + SATLiteral(612))<=0)
-612 -10365 0
-412 -10365 0
-412 -612 -10366 0
c (0<=(SATLiteral(412) - aux980 + SATLiteral(612)))
612 10366 0
412 10366 0
412 612 10365 0
c (( - aux981 + SATLiteral(184) + SATLiteral(63))<=0)
-63 -10368 0
-184 -10368 0
-184 -63 -10369 0
c (0<=( - aux981 + SATLiteral(184) + SATLiteral(63)))
63 10369 0
184 10369 0
184 63 10368 0
c (( - aux982 + SATLiteral(519) + SATLiteral(305))<=0)
-305 -10371 0
-519 -10371 0
-519 -305 -10372 0
c (0<=( - aux982 + SATLiteral(519) + SATLiteral(305)))
305 10372 0
519 10372 0
519 305 10371 0
c ((aux982 - aux983 + SATLiteral(719))<=0)
10371 -10374 0
10372 -10375 0
-719 -10374 0
-719 10371 -10375 0
-719 10372 -10377 0
c (0<=(aux982 - aux983 + SATLiteral(719)))
-10372 10377 0
-10371 10375 0
719 10377 0
719 -10372 10375 0
719 -10371 10374 0
c ((SATLiteral(413) - aux984 + SATLiteral(613))<=0)
-613 -10379 0
-413 -10379 0
-413 -613 -10380 0
c (0<=(SATLiteral(413) - aux984 + SATLiteral(613)))
613 10380 0
413 10380 0
413 613 10379 0
c (( - aux985 + SATLiteral(185) + SATLiteral(64))<=0)
-64 -10382 0
-185 -10382 0
-185 -64 -10383 0
c (0<=( - aux985 + SATLiteral(185) + SATLiteral(64)))
64 10383 0
185 10383 0
185 64 10382 0
c (( - aux986 + SATLiteral(520) + SATLiteral(306))<=0)
-306 -10385 0
-520 -10385 0
-520 -306 -10386 0
c (0<=( - aux986 + SATLiteral(520) + SATLiteral(306)))
306 10386 0
520 10386 0
520 306 10385 0
c ((aux986 - aux987 + SATLiteral(720))<=0)
10385 -10388 0
10386 -10389 0
-720 -10388 0
-720 10385 -10389 0
-720 10386 -10391 0
c (0<=(aux986 - aux987 + SATLiteral(720)))
-10386 10391 0
-10385 10389 0
720 10391 0
720 -10386 10389 0
720 -10385 10388 0
c ((SATLiteral(414) - aux988 + SATLiteral(614))<=0)
-614 -10393 0
-414 -10393 0
-414 -614 -10394 0
c (0<=(SATLiteral(414) - aux988 + SATLiteral(614)))
614 10394 0
414 10394 0
414 614 10393 0
c (( - aux989 + SATLiteral(186) + SATLiteral(65))<=0)
-65 -10396 0
-186 -10396 0
-186 -65 -10397 0
c (0<=( - aux989 + SATLiteral(186) + SATLiteral(65)))
65 10397 0
186 10397 0
186 65 10396 0
c (( - aux990 + SATLiteral(521) + SATLiteral(307))<=0)
-307 -10399 0
-521 -10399 0
-521 -307 -10400 0
c (0<=( - aux990 + SATLiteral(521) + SATLiteral(307)))
307 10400 0
521 10400 0
521 307 10399 0
c ((aux990 - aux991 + SATLiteral(721))<=0)
10399 -10402 0
10400 -10403 0
-721 -10402 0
-721 10399 -10403 0
-721 10400 -10405 0
c (0<=(aux990 - aux991 + SATLiteral(721)))
-10400 10405 0
-10399 10403 0
721 10405 0
721 -10400 10403 0
721 -10399 10402 0
c ((SATLiteral(415) - aux992 + SATLiteral(615))<=0)
-615 -10407 0
-415 -10407 0
-415 -615 -10408 0
c (0<=(SATLiteral(415) - aux992 + SATLiteral(615)))
615 10408 0
415 10408 0
415 615 10407 0
c (( - aux993 + SATLiteral(187) + SATLiteral(66))<=0)
-66 -10410 0
-187 -10410 0
-187 -66 -10411 0
c (0<=( - aux993 + SATLiteral(187) + SATLiteral(66)))
66 10411 0
187 10411 0
187 66 10410 0
c (( - aux994 + SATLiteral(522) + SATLiteral(308))<=0)
-308 -10413 0
-522 -10413 0
-522 -308 -10414 0
c (0<=( - aux994 + SATLiteral(522) + SATLiteral(308)))
308 10414 0
522 10414 0
522 308 10413 0
c ((aux994 - aux995 + SATLiteral(722))<=0)
10413 -10416 0
10414 -10417 0
-722 -10416 0
-722 10413 -10417 0
-722 10414 -10419 0
c (0<=(aux994 - aux995 + SATLiteral(722)))
-10414 10419 0
-10413 10417 0
722 10419 0
722 -10414 10417 0
722 -10413 10416 0
c ((SATLiteral(416) - aux996 + SATLiteral(616))<=0)
-616 -10421 0
-416 -10421 0
-416 -616 -10422 0
c (0<=(SATLiteral(416) - aux996 + SATLiteral(616)))
616 10422 0
416 10422 0
416 616 10421 0
c (( - aux997 + SATLiteral(188) + SATLiteral(67))<=0)
-67 -10424 0
-188 -10424 0
-188 -67 -10425 0
c (0<=( - aux997 + SATLiteral(188) + SATLiteral(67)))
67 10425 0
188 10425 0
188 67 10424 0
c (( - aux998 + SATLiteral(523) + SATLiteral(309))<=0)
-309 -10427 0
-523 -10427 0
-523 -309 -10428 0
c (0<=( - aux998 + SATLiteral(523) + SATLiteral(309)))
309 10428 0
523 10428 0
523 309 10427 0
c ((aux998 - aux999 + SATLiteral(723))<=0)
10427 -10430 0
10428 -10431 0
-723 -10430 0
-723 10427 -10431 0
-723 10428 -10433 0
c (0<=(aux998 - aux999 + SATLiteral(723)))
-10428 10433 0
-10427 10431 0
723 10433 0
723 -10428 10431 0
723 -10427 10430 0
c ((SATLiteral(417) - aux1000 + SATLiteral(617))<=0)
-617 -10435 0
-417 -10435 0
-417 -617 -10436 0
c (0<=(SATLiteral(417) - aux1000 + SATLiteral(617)))
617 10436 0
417 10436 0
417 617 10435 0
c ((SATLiteral(189) - aux1001 + SATLiteral(68))<=0)
-68 -10438 0
-189 -10438 0
-189 -68 -10439 0
c (0<=(SATLiteral(189) - aux1001 + SATLiteral(68)))
68 10439 0
189 10439 0
189 68 10438 0
c (( - aux1002 + SATLiteral(524) + SATLiteral(811))<=0)
10441 -524 -811 0
c (0<=( - aux1002 + SATLiteral(524) + SATLiteral(811)))
524 811 0
-10441 811 0
-10441 524 0
c ((aux1002 - aux1003 + SATLiteral(310))<=0)
-310 -10442 0
-10441 -10442 0
-10441 -310 -10443 0
c (0<=(aux1002 - aux1003 + SATLiteral(310)))
310 10443 0
10441 10443 0
10441 310 10442 0
c ((SATLiteral(724) + aux1003 - aux1004)<=0)
10442 -10445 0
10443 -10446 0
-724 -10445 0
-724 10442 -10446 0
-724 10443 -10448 0
c (0<=(SATLiteral(724) + aux1003 - aux1004))
-10443 10448 0
-10442 10446 0
724 10448 0
724 -10443 10446 0
724 -10442 10445 0
c ((SATLiteral(418) - aux1005 + SATLiteral(618))<=0)
-618 -10450 0
-418 -10450 0
-418 -618 -10451 0
c (0<=(SATLiteral(418) - aux1005 + SATLiteral(618)))
618 10451 0
418 10451 0
418 618 10450 0
c ((SATLiteral(190) - aux1006 + SATLiteral(69))<=0)
-69 -10453 0
-190 -10453 0
-190 -69 -10454 0
c (0<=(SATLiteral(190) - aux1006 + SATLiteral(69)))
69 10454 0
190 10454 0
190 69 10453 0
c (( - aux1007 + SATLiteral(525) + SATLiteral(311))<=0)
-311 -10456 0
-525 -10456 0
-525 -311 -10457 0
c (0<=( - aux1007 + SATLiteral(525) + SATLiteral(311)))
311 10457 0
525 10457 0
525 311 10456 0
c ((SATLiteral(725) + aux1007 - aux1008)<=0)
10456 -10459 0
10457 -10460 0
-725 -10459 0
-725 10456 -10460 0
-725 10457 -10462 0
c (0<=(SATLiteral(725) + aux1007 - aux1008))
-10457 10462 0
-10456 10460 0
725 10462 0
725 -10457 10460 0
725 -10456 10459 0
c ((SATLiteral(419) - aux1009 + SATLiteral(619))<=0)
-619 -10464 0
-419 -10464 0
-419 -619 -10465 0
c (0<=(SATLiteral(419) - aux1009 + SATLiteral(619)))
619 10465 0
419 10465 0
419 619 10464 0
c ((SATLiteral(191) - aux1010 + SATLiteral(70))<=0)
-70 -10467 0
-191 -10467 0
-191 -70 -10468 0
c (0<=(SATLiteral(191) - aux1010 + SATLiteral(70)))
70 10468 0
191 10468 0
191 70 10467 0
c (( - aux1011 + SATLiteral(526) + SATLiteral(312))<=0)
-312 -10470 0
-526 -10470 0
-526 -312 -10471 0
c (0<=( - aux1011 + SATLiteral(526) + SATLiteral(312)))
312 10471 0
526 10471 0
526 312 10470 0
c ((SATLiteral(726) + aux1011 - aux1012)<=0)
10470 -10473 0
10471 -10474 0
-726 -10473 0
-726 10470 -10474 0
-726 10471 -10476 0
c (0<=(SATLiteral(726) + aux1011 - aux1012))
-10471 10476 0
-10470 10474 0
726 10476 0
726 -10471 10474 0
726 -10470 10473 0
c ((SATLiteral(426) - aux1013 + SATLiteral(77))<=0)
-77 -10478 0
-426 -10478 0
-426 -77 -10479 0
c (0<=(SATLiteral(426) - aux1013 + SATLiteral(77)))
77 10479 0
426 10479 0
426 77 10478 0
c ((SATLiteral(933) - aux1014 + SATLiteral(812))<=0)
-812 -10481 0
-933 -10481 0
-933 -812 -10482 0
c (0<=(SATLiteral(933) - aux1014 + SATLiteral(812)))
812 10482 0
933 10482 0
933 812 10481 0
c ((SATLiteral(733) - aux1015 + SATLiteral(533))<=0)
-533 -10484 0
-733 -10484 0
-733 -533 -10485 0
c (0<=(SATLiteral(733) - aux1015 + SATLiteral(533)))
533 10485 0
733 10485 0
733 533 10484 0
c ((SATLiteral(198) + aux1015 - aux1016)<=0)
10484 -10487 0
10485 -10488 0
-198 -10487 0
-198 10484 -10488 0
-198 10485 -10490 0
c (0<=(SATLiteral(198) + aux1015 - aux1016))
-10485 10490 0
-10484 10488 0
198 10490 0
198 -10485 10488 0
198 -10484 10487 0
c ((SATLiteral(427) - aux1017 + SATLiteral(78))<=0)
-78 -10492 0
-427 -10492 0
-427 -78 -10493 0
c (0<=(SATLiteral(427) - aux1017 + SATLiteral(78)))
78 10493 0
427 10493 0
427 78 10492 0
c ((SATLiteral(934) - aux1018 + SATLiteral(813))<=0)
-813 -10495 0
-934 -10495 0
-934 -813 -10496 0
c (0<=(SATLiteral(934) - aux1018 + SATLiteral(813)))
813 10496 0
934 10496 0
934 813 10495 0
c ((SATLiteral(734) - aux1019 + SATLiteral(534))<=0)
-534 -10498 0
-734 -10498 0
-734 -534 -10499 0
c (0<=(SATLiteral(734) - aux1019 + SATLiteral(534)))
534 10499 0
734 10499 0
734 534 10498 0
c ((SATLiteral(199) + aux1019 - aux1020)<=0)
10498 -10501 0
10499 -10502 0
-199 -10501 0
-199 10498 -10502 0
-199 10499 -10504 0
c (0<=(SATLiteral(199) + aux1019 - aux1020))
-10499 10504 0
-10498 10502 0
199 10504 0
199 -10499 10502 0
199 -10498 10501 0
c ((SATLiteral(428) - aux1021 + SATLiteral(79))<=0)
-79 -10506 0
-428 -10506 0
-428 -79 -10507 0
c (0<=(SATLiteral(428) - aux1021 + SATLiteral(79)))
79 10507 0
428 10507 0
428 79 10506 0
c ((SATLiteral(935) - aux1022 + SATLiteral(814))<=0)
-814 -10509 0
-935 -10509 0
-935 -814 -10510 0
c (0<=(SATLiteral(935) - aux1022 + SATLiteral(814)))
814 10510 0
935 10510 0
935 814 10509 0
c ((SATLiteral(735) - aux1023 + SATLiteral(535))<=0)
-535 -10512 0
-735 -10512 0
-735 -535 -10513 0
c (0<=(SATLiteral(735) - aux1023 + SATLiteral(535)))
535 10513 0
735 10513 0
735 535 10512 0
c ((SATLiteral(200) + aux1023 - aux1024)<=0)
10512 -10515 0
10513 -10516 0
-200 -10515 0
-200 10512 -10516 0
-200 10513 -10518 0
c (0<=(SATLiteral(200) + aux1023 - aux1024))
-10513 10518 0
-10512 10516 0
200 10518 0
200 -10513 10516 0
200 -10512 10515 0
c ((SATLiteral(429) - aux1025 + SATLiteral(80))<=0)
-80 -10520 0
-429 -10520 0
-429 -80 -10521 0
c (0<=(SATLiteral(429) - aux1025 + SATLiteral(80)))
80 10521 0
429 10521 0
429 80 10520 0
c ((SATLiteral(936) - aux1026 + SATLiteral(815))<=0)
-815 -10523 0
-936 -10523 0
-936 -815 -10524 0
c (0<=(SATLiteral(936) - aux1026 + SATLiteral(815)))
815 10524 0
936 10524 0
936 815 10523 0
c ((SATLiteral(736) - aux1027 + SATLiteral(536))<=0)
-536 -10526 0
-736 -10526 0
-736 -536 -10527 0
c (0<=(SATLiteral(736) - aux1027 + SATLiteral(536)))
536 10527 0
736 10527 0
736 536 10526 0
c ((SATLiteral(201) + aux1027 - aux1028)<=0)
10526 -10529 0
10527 -10530 0
-201 -10529 0
-201 10526 -10530 0
-201 10527 -10532 0
c (0<=(SATLiteral(201) + aux1027 - aux1028))
-10527 10532 0
-10526 10530 0
201 10532 0
201 -10527 10530 0
201 -10526 10529 0
c ((SATLiteral(430) - aux1029 + SATLiteral(81))<=0)
-81 -10534 0
-430 -10534 0
-430 -81 -10535 0
c (0<=(SATLiteral(430) - aux1029 + SATLiteral(81)))
81 10535 0
430 10535 0
430 81 10534 0
c ((SATLiteral(937) - aux1030 + SATLiteral(816))<=0)
-816 -10537 0
-937 -10537 0
-937 -816 -10538 0
c (0<=(SATLiteral(937) - aux1030 + SATLiteral(816)))
816 10538 0
937 10538 0
937 816 10537 0
c ((SATLiteral(737) - aux1031 + SATLiteral(537))<=0)
-537 -10540 0
-737 -10540 0
-737 -537 -10541 0
c (0<=(SATLiteral(737) - aux1031 + SATLiteral(537)))
537 10541 0
737 10541 0
737 537 10540 0
c ((SATLiteral(202) + aux1031 - aux1032)<=0)
10540 -10543 0
10541 -10544 0
-202 -10543 0
-202 10540 -10544 0
-202 10541 -10546 0
c (0<=(SATLiteral(202) + aux1031 - aux1032))
-10541 10546 0
-10540 10544 0
202 10546 0
202 -10541 10544 0
202 -10540 10543 0
c ((SATLiteral(431) - aux1033 + SATLiteral(82))<=0)
-82 -10548 0
-431 -10548 0
-431 -82 -10549 0
c (0<=(SATLiteral(431) - aux1033 + SATLiteral(82)))
82 10549 0
431 10549 0
431 82 10548 0
c ((SATLiteral(938) - aux1034 + SATLiteral(817))<=0)
-817 -10551 0
-938 -10551 0
-938 -817 -10552 0
c (0<=(SATLiteral(938) - aux1034 + SATLiteral(817)))
817 10552 0
938 10552 0
938 817 10551 0
c ((SATLiteral(738) - aux1035 + SATLiteral(319))<=0)
-738 10554 -319 0
c (0<=(SATLiteral(738) - aux1035 + SATLiteral(319)))
-10554 319 0
738 319 0
738 -10554 0
c ((aux1035 - aux1036 + SATLiteral(538))<=0)
-538 -10555 0
-10554 -10555 0
-10554 -538 -10556 0
c (0<=(aux1035 - aux1036 + SATLiteral(538)))
538 10556 0
10554 10556 0
10554 538 10555 0
c ((SATLiteral(203) + aux1036 - aux1037)<=0)
10555 -10558 0
10556 -10559 0
-203 -10558 0
-203 10555 -10559 0
-203 10556 -10561 0
c (0<=(SATLiteral(203) + aux1036 - aux1037))
-10556 10561 0
-10555 10559 0
203 10561 0
203 -10556 10559 0
203 -10555 10558 0
c ((SATLiteral(432) - aux1038 + SATLiteral(626))<=0)
-432 10563 -626 0
c (0<=(SATLiteral(432) - aux1038 + SATLiteral(626)))
-10563 626 0
432 626 0
432 -10563 0
c ((aux1038 - aux1039 + SATLiteral(83))<=0)
-83 -10564 0
-10563 -10564 0
-10563 -83 -10565 0
c (0<=(aux1038 - aux1039 + SATLiteral(83)))
83 10565 0
10563 10565 0
10563 83 10564 0
c ((SATLiteral(939) - aux1040 + SATLiteral(818))<=0)
-818 -10567 0
-939 -10567 0
-939 -818 -10568 0
c (0<=(SATLiteral(939) - aux1040 + SATLiteral(818)))
818 10568 0
939 10568 0
939 818 10567 0
c ((SATLiteral(739) - aux1041 + SATLiteral(539))<=0)
-539 -10570 0
-739 -10570 0
-739 -539 -10571 0
c (0<=(SATLiteral(739) - aux1041 + SATLiteral(539)))
539 10571 0
739 10571 0
739 539 10570 0
c ((SATLiteral(204) + aux1041 - aux1042)<=0)
10570 -10573 0
10571 -10574 0
-204 -10573 0
-204 10570 -10574 0
-204 10571 -10576 0
c (0<=(SATLiteral(204) + aux1041 - aux1042))
-10571 10576 0
-10570 10574 0
204 10576 0
204 -10571 10574 0
204 -10570 10573 0
c ((SATLiteral(433) - aux1043 + SATLiteral(84))<=0)
-84 -10578 0
-433 -10578 0
-433 -84 -10579 0
c (0<=(SATLiteral(433) - aux1043 + SATLiteral(84)))
84 10579 0
433 10579 0
433 84 10578 0
c ((SATLiteral(940) - aux1044 + SATLiteral(819))<=0)
-819 -10581 0
-940 -10581 0
-940 -819 -10582 0
c (0<=(SATLiteral(940) - aux1044 + SATLiteral(819)))
819 10582 0
940 10582 0
940 819 10581 0
c ((SATLiteral(740) - aux1045 + SATLiteral(540))<=0)
-540 -10584 0
-740 -10584 0
-740 -540 -10585 0
c (0<=(SATLiteral(740) - aux1045 + SATLiteral(540)))
540 10585 0
740 10585 0
740 540 10584 0
c ((SATLiteral(205) + aux1045 - aux1046)<=0)
10584 -10587 0
10585 -10588 0
-205 -10587 0
-205 10584 -10588 0
-205 10585 -10590 0
c (0<=(SATLiteral(205) + aux1045 - aux1046))
-10585 10590 0
-10584 10588 0
205 10590 0
205 -10585 10588 0
205 -10584 10587 0
c ((SATLiteral(434) - aux1047 + SATLiteral(85))<=0)
-85 -10592 0
-434 -10592 0
-434 -85 -10593 0
c (0<=(SATLiteral(434) - aux1047 + SATLiteral(85)))
85 10593 0
434 10593 0
434 85 10592 0
c ((SATLiteral(941) - aux1048 + SATLiteral(820))<=0)
-820 -10595 0
-941 -10595 0
-941 -820 -10596 0
c (0<=(SATLiteral(941) - aux1048 + SATLiteral(820)))
820 10596 0
941 10596 0
941 820 10595 0
c ((SATLiteral(741) - aux1049 + SATLiteral(541))<=0)
-541 -10598 0
-741 -10598 0
-741 -541 -10599 0
c (0<=(SATLiteral(741) - aux1049 + SATLiteral(541)))
541 10599 0
741 10599 0
741 541 10598 0
c ((SATLiteral(206) + aux1049 - aux1050)<=0)
10598 -10601 0
10599 -10602 0
-206 -10601 0
-206 10598 -10602 0
-206 10599 -10604 0
c (0<=(SATLiteral(206) + aux1049 - aux1050))
-10599 10604 0
-10598 10602 0
206 10604 0
206 -10599 10602 0
206 -10598 10601 0
c ((SATLiteral(441) - aux1051 + SATLiteral(627))<=0)
-627 -10606 0
-441 -10606 0
-441 -627 -10607 0
c (0<=(SATLiteral(441) - aux1051 + SATLiteral(627)))
627 10607 0
441 10607 0
441 627 10606 0
c ((SATLiteral(213) - aux1052 + SATLiteral(827))<=0)
-827 -10609 0
-213 -10609 0
-213 -827 -10610 0
c (0<=(SATLiteral(213) - aux1052 + SATLiteral(827)))
827 10610 0
213 10610 0
213 827 10609 0
c ((SATLiteral(442) - aux1053 + SATLiteral(628))<=0)
-628 -10612 0
-442 -10612 0
-442 -628 -10613 0
c (0<=(SATLiteral(442) - aux1053 + SATLiteral(628)))
628 10613 0
442 10613 0
442 628 10612 0
c ((SATLiteral(214) - aux1054 + SATLiteral(828))<=0)
-828 -10615 0
-214 -10615 0
-214 -828 -10616 0
c (0<=(SATLiteral(214) - aux1054 + SATLiteral(828)))
828 10616 0
214 10616 0
214 828 10615 0
c ((SATLiteral(443) - aux1055 + SATLiteral(629))<=0)
-629 -10618 0
-443 -10618 0
-443 -629 -10619 0
c (0<=(SATLiteral(443) - aux1055 + SATLiteral(629)))
629 10619 0
443 10619 0
443 629 10618 0
c ((SATLiteral(215) - aux1056 + SATLiteral(829))<=0)
-829 -10621 0
-215 -10621 0
-215 -829 -10622 0
c (0<=(SATLiteral(215) - aux1056 + SATLiteral(829)))
829 10622 0
215 10622 0
215 829 10621 0
c ((SATLiteral(444) - aux1057 + SATLiteral(630))<=0)
-630 -10624 0
-444 -10624 0
-444 -630 -10625 0
c (0<=(SATLiteral(444) - aux1057 + SATLiteral(630)))
630 10625 0
444 10625 0
444 630 10624 0
c ((SATLiteral(216) - aux1058 + SATLiteral(830))<=0)
-830 -10627 0
-216 -10627 0
-216 -830 -10628 0
c (0<=(SATLiteral(216) - aux1058 + SATLiteral(830)))
830 10628 0
216 10628 0
216 830 10627 0
c ((SATLiteral(445) - aux1059 + SATLiteral(631))<=0)
-631 -10630 0
-445 -10630 0
-445 -631 -10631 0
c (0<=(SATLiteral(445) - aux1059 + SATLiteral(631)))
631 10631 0
445 10631 0
445 631 10630 0
c ((SATLiteral(217) - aux1060 + SATLiteral(92))<=0)
-217 10633 -92 0
c (0<=(SATLiteral(217) - aux1060 + SATLiteral(92)))
-10633 92 0
217 92 0
217 -10633 0
c ((aux1060 - aux1061 + SATLiteral(831))<=0)
-831 -10634 0
-10633 -10634 0
-10633 -831 -10635 0
c (0<=(aux1060 - aux1061 + SATLiteral(831)))
831 10635 0
10633 10635 0
10633 831 10634 0
c ((SATLiteral(446) - aux1062 + SATLiteral(632))<=0)
-632 -10637 0
-446 -10637 0
-446 -632 -10638 0
c (0<=(SATLiteral(446) - aux1062 + SATLiteral(632)))
632 10638 0
446 10638 0
446 632 10637 0
c ((SATLiteral(218) - aux1063 + SATLiteral(832))<=0)
-832 -10640 0
-218 -10640 0
-218 -832 -10641 0
c (0<=(SATLiteral(218) - aux1063 + SATLiteral(832)))
832 10641 0
218 10641 0
218 832 10640 0
c ((SATLiteral(748) - aux1064 + SATLiteral(325))<=0)
-748 10643 -325 0
c (0<=(SATLiteral(748) - aux1064 + SATLiteral(325)))
-10643 325 0
748 325 0
748 -10643 0
c ((SATLiteral(447) - aux1065 + SATLiteral(633))<=0)
-633 -10644 0
-447 -10644 0
-447 -633 -10645 0
c (0<=(SATLiteral(447) - aux1065 + SATLiteral(633)))
633 10645 0
447 10645 0
447 633 10644 0
c ((SATLiteral(219) - aux1066 + SATLiteral(833))<=0)
-833 -10647 0
-219 -10647 0
-219 -833 -10648 0
c (0<=(SATLiteral(219) - aux1066 + SATLiteral(833)))
833 10648 0
219 10648 0
219 833 10647 0
c (( - aux1067 + SATLiteral(548) + SATLiteral(326))<=0)
10650 -548 -326 0
c (0<=( - aux1067 + SATLiteral(548) + SATLiteral(326)))
548 326 0
-10650 326 0
-10650 548 0
c ((SATLiteral(448) - aux1068 + SATLiteral(634))<=0)
-634 -10651 0
-448 -10651 0
-448 -634 -10652 0
c (0<=(SATLiteral(448) - aux1068 + SATLiteral(634)))
634 10652 0
448 10652 0
448 634 10651 0
c ((SATLiteral(948) - aux1069 + SATLiteral(834))<=0)
-948 10654 -834 0
c (0<=(SATLiteral(948) - aux1069 + SATLiteral(834)))
-10654 834 0
948 834 0
948 -10654 0
c ((aux1069 - aux1070 + SATLiteral(327))<=0)
-327 -10655 0
-10654 -10655 0
-10654 -327 -10656 0
c (0<=(aux1069 - aux1070 + SATLiteral(327)))
327 10656 0
10654 10656 0
10654 327 10655 0
c ((SATLiteral(449) - aux1071 + SATLiteral(635))<=0)
-635 -10658 0
-449 -10658 0
-449 -635 -10659 0
c (0<=(SATLiteral(449) - aux1071 + SATLiteral(635)))
635 10659 0
449 10659 0
449 635 10658 0
c ((SATLiteral(221) - aux1072 + SATLiteral(835))<=0)
-835 -10661 0
-221 -10661 0
-221 -835 -10662 0
c (0<=(SATLiteral(221) - aux1072 + SATLiteral(835)))
835 10662 0
221 10662 0
221 835 10661 0
c ((SATLiteral(949) - aux1073 + SATLiteral(642))<=0)
-642 -10664 0
-949 -10664 0
-949 -642 -10665 0
c (0<=(SATLiteral(949) - aux1073 + SATLiteral(642)))
642 10665 0
949 10665 0
949 642 10664 0
c ((SATLiteral(749) - aux1074 + SATLiteral(93))<=0)
-93 -10667 0
-749 -10667 0
-749 -93 -10668 0
c (0<=(SATLiteral(749) - aux1074 + SATLiteral(93)))
93 10668 0
749 10668 0
749 93 10667 0
c (( - aux1075 + SATLiteral(335) + SATLiteral(842))<=0)
-842 -10670 0
-335 -10670 0
-335 -842 -10671 0
c (0<=( - aux1075 + SATLiteral(335) + SATLiteral(842)))
842 10671 0
335 10671 0
335 842 10670 0
c ((aux1075 - aux1076 + SATLiteral(549))<=0)
10670 -10673 0
10671 -10674 0
-549 -10673 0
-549 10670 -10674 0
-549 10671 -10676 0
c (0<=(aux1075 - aux1076 + SATLiteral(549)))
-10671 10676 0
-10670 10674 0
549 10676 0
549 -10671 10674 0
549 -10670 10673 0
c ((SATLiteral(950) - aux1077 + SATLiteral(643))<=0)
-643 -10678 0
-950 -10678 0
-950 -643 -10679 0
c (0<=(SATLiteral(950) - aux1077 + SATLiteral(643)))
643 10679 0
950 10679 0
950 643 10678 0
c ((SATLiteral(750) - aux1078 + SATLiteral(94))<=0)
-94 -10681 0
-750 -10681 0
-750 -94 -10682 0
c (0<=(SATLiteral(750) - aux1078 + SATLiteral(94)))
94 10682 0
750 10682 0
750 94 10681 0
c (( - aux1079 + SATLiteral(336) + SATLiteral(843))<=0)
-843 -10684 0
-336 -10684 0
-336 -843 -10685 0
c (0<=( - aux1079 + SATLiteral(336) + SATLiteral(843)))
843 10685 0
336 10685 0
336 843 10684 0
c ((aux1079 - aux1080 + SATLiteral(550))<=0)
10684 -10687 0
10685 -10688 0
-550 -10687 0
-550 10684 -10688 0
-550 10685 -10690 0
c (0<=(aux1079 - aux1080 + SATLiteral(550)))
-10685 10690 0
-10684 10688 0
550 10690 0
550 -10685 10688 0
550 -10684 10687 0
c ((SATLiteral(456) - aux1081 + SATLiteral(644))<=0)
-456 10692 -644 0
c (0<=(SATLiteral(456) - aux1081 + SATLiteral(644)))
-10692 644 0
456 644 0
456 -10692 0
c ((aux1081 - aux1082 + SATLiteral(95))<=0)
-95 -10693 0
-10692 -10693 0
-10692 -95 -10694 0
c (0<=(aux1081 - aux1082 + SATLiteral(95)))
95 10694 0
10692 10694 0
10692 95 10693 0
c ((SATLiteral(951) - aux1083 + SATLiteral(844))<=0)
-844 -10696 0
-951 -10696 0
-951 -844 -10697 0
c (0<=(SATLiteral(951) - aux1083 + SATLiteral(844)))
844 10697 0
951 10697 0
951 844 10696 0
c (( - aux1084 + SATLiteral(551) + SATLiteral(337))<=0)
-337 -10699 0
-551 -10699 0
-551 -337 -10700 0
c (0<=( - aux1084 + SATLiteral(551) + SATLiteral(337)))
337 10700 0
551 10700 0
551 337 10699 0
c ((SATLiteral(751) + aux1084 - aux1085)<=0)
10699 -10702 0
10700 -10703 0
-751 -10702 0
-751 10699 -10703 0
-751 10700 -10705 0
c (0<=(SATLiteral(751) + aux1084 - aux1085))
-10700 10705 0
-10699 10703 0
751 10705 0
751 -10700 10703 0
751 -10699 10702 0
c ((SATLiteral(952) - aux1086 + SATLiteral(645))<=0)
-645 -10707 0
-952 -10707 0
-952 -645 -10708 0
c (0<=(SATLiteral(952) - aux1086 + SATLiteral(645)))
645 10708 0
952 10708 0
952 645 10707 0
c ((SATLiteral(752) - aux1087 + SATLiteral(96))<=0)
-96 -10710 0
-752 -10710 0
-752 -96 -10711 0
c (0<=(SATLiteral(752) - aux1087 + SATLiteral(96)))
96 10711 0
752 10711 0
752 96 10710 0
c (( - aux1088 + SATLiteral(338) + SATLiteral(845))<=0)
-845 -10713 0
-338 -10713 0
-338 -845 -10714 0
c (0<=( - aux1088 + SATLiteral(338) + SATLiteral(845)))
845 10714 0
338 10714 0
338 845 10713 0
c ((aux1088 - aux1089 + SATLiteral(552))<=0)
10713 -10716 0
10714 -10717 0
-552 -10716 0
-552 10713 -10717 0
-552 10714 -10719 0
c (0<=(aux1088 - aux1089 + SATLiteral(552)))
-10714 10719 0
-10713 10717 0
552 10719 0
552 -10714 10717 0
552 -10713 10716 0
c ((SATLiteral(953) - aux1090 + SATLiteral(646))<=0)
-646 -10721 0
-953 -10721 0
-953 -646 -10722 0
c (0<=(SATLiteral(953) - aux1090 + SATLiteral(646)))
646 10722 0
953 10722 0
953 646 10721 0
c ((SATLiteral(753) - aux1091 + SATLiteral(97))<=0)
-97 -10724 0
-753 -10724 0
-753 -97 -10725 0
c (0<=(SATLiteral(753) - aux1091 + SATLiteral(97)))
97 10725 0
753 10725 0
753 97 10724 0
c (( - aux1092 + SATLiteral(339) + SATLiteral(846))<=0)
-846 -10727 0
-339 -10727 0
-339 -846 -10728 0
c (0<=( - aux1092 + SATLiteral(339) + SATLiteral(846)))
846 10728 0
339 10728 0
339 846 10727 0
c ((aux1092 - aux1093 + SATLiteral(553))<=0)
10727 -10730 0
10728 -10731 0
-553 -10730 0
-553 10727 -10731 0
-553 10728 -10733 0
c (0<=(aux1092 - aux1093 + SATLiteral(553)))
-10728 10733 0
-10727 10731 0
553 10733 0
553 -10728 10731 0
553 -10727 10730 0
c ((SATLiteral(954) - aux1094 + SATLiteral(647))<=0)
-647 -10735 0
-954 -10735 0
-954 -647 -10736 0
c (0<=(SATLiteral(954) - aux1094 + SATLiteral(647)))
647 10736 0
954 10736 0
954 647 10735 0
c ((SATLiteral(754) - aux1095 + SATLiteral(98))<=0)
-98 -10738 0
-754 -10738 0
-754 -98 -10739 0
c (0<=(SATLiteral(754) - aux1095 + SATLiteral(98)))
98 10739 0
754 10739 0
754 98 10738 0
c (( - aux1096 + SATLiteral(340) + SATLiteral(847))<=0)
-847 -10741 0
-340 -10741 0
-340 -847 -10742 0
c (0<=( - aux1096 + SATLiteral(340) + SATLiteral(847)))
847 10742 0
340 10742 0
340 847 10741 0
c ((aux1096 - aux1097 + SATLiteral(554))<=0)
10741 -10744 0
10742 -10745 0
-554 -10744 0
-554 10741 -10745 0
-554 10742 -10747 0
c (0<=(aux1096 - aux1097 + SATLiteral(554)))
-10742 10747 0
-10741 10745 0
554 10747 0
554 -10742 10745 0
554 -10741 10744 0
c ((SATLiteral(955) - aux1098 + SATLiteral(648))<=0)
-648 -10749 0
-955 -10749 0
-955 -648 -10750 0
c (0<=(SATLiteral(955) - aux1098 + SATLiteral(648)))
648 10750 0
955 10750 0
955 648 10749 0
c ((SATLiteral(228) - aux1099 + SATLiteral(99))<=0)
-228 10752 -99 0
c (0<=(SATLiteral(228) - aux1099 + SATLiteral(99)))
-10752 99 0
228 99 0
228 -10752 0
c ((aux1099 - aux1100 + SATLiteral(848))<=0)
-848 -10753 0
-10752 -10753 0
-10752 -848 -10754 0
c (0<=(aux1099 - aux1100 + SATLiteral(848)))
848 10754 0
10752 10754 0
10752 848 10753 0
c (( - aux1101 + SATLiteral(555) + SATLiteral(341))<=0)
-341 -10756 0
-555 -10756 0
-555 -341 -10757 0
c (0<=( - aux1101 + SATLiteral(555) + SATLiteral(341)))
341 10757 0
555 10757 0
555 341 10756 0
c ((SATLiteral(755) + aux1101 - aux1102)<=0)
10756 -10759 0
10757 -10760 0
-755 -10759 0
-755 10756 -10760 0
-755 10757 -10762 0
c (0<=(SATLiteral(755) + aux1101 - aux1102))
-10757 10762 0
-10756 10760 0
755 10762 0
755 -10757 10760 0
755 -10756 10759 0
c ((SATLiteral(956) - aux1103 + SATLiteral(649))<=0)
-649 -10764 0
-956 -10764 0
-956 -649 -10765 0
c (0<=(SATLiteral(956) - aux1103 + SATLiteral(649)))
649 10765 0
956 10765 0
956 649 10764 0
c ((SATLiteral(756) - aux1104 + SATLiteral(100))<=0)
-100 -10767 0
-756 -10767 0
-756 -100 -10768 0
c (0<=(SATLiteral(756) - aux1104 + SATLiteral(100)))
100 10768 0
756 10768 0
756 100 10767 0
c (( - aux1105 + SATLiteral(342) + SATLiteral(849))<=0)
-849 -10770 0
-342 -10770 0
-342 -849 -10771 0
c (0<=( - aux1105 + SATLiteral(342) + SATLiteral(849)))
849 10771 0
342 10771 0
342 849 10770 0
c ((aux1105 - aux1106 + SATLiteral(556))<=0)
10770 -10773 0
10771 -10774 0
-556 -10773 0
-556 10770 -10774 0
-556 10771 -10776 0
c (0<=(aux1105 - aux1106 + SATLiteral(556)))
-10771 10776 0
-10770 10774 0
556 10776 0
556 -10771 10774 0
556 -10770 10773 0
c ((SATLiteral(957) - aux1107 + SATLiteral(650))<=0)
-650 -10778 0
-957 -10778 0
-957 -650 -10779 0
c (0<=(SATLiteral(957) - aux1107 + SATLiteral(650)))
650 10779 0
957 10779 0
957 650 10778 0
c ((SATLiteral(757) - aux1108 + SATLiteral(101))<=0)
-101 -10781 0
-757 -10781 0
-757 -101 -10782 0
c (0<=(SATLiteral(757) - aux1108 + SATLiteral(101)))
101 10782 0
757 10782 0
757 101 10781 0
c (( - aux1109 + SATLiteral(343) + SATLiteral(850))<=0)
-850 -10784 0
-343 -10784 0
-343 -850 -10785 0
c (0<=( - aux1109 + SATLiteral(343) + SATLiteral(850)))
850 10785 0
343 10785 0
343 850 10784 0
c ((aux1109 - aux1110 + SATLiteral(557))<=0)
10784 -10787 0
10785 -10788 0
-557 -10787 0
-557 10784 -10788 0
-557 10785 -10790 0
c (0<=(aux1109 - aux1110 + SATLiteral(557)))
-10785 10790 0
-10784 10788 0
557 10790 0
557 -10785 10788 0
557 -10784 10787 0
c ((SATLiteral(457) - aux1111 + SATLiteral(657))<=0)
-657 -10792 0
-457 -10792 0
-457 -657 -10793 0
c (0<=(SATLiteral(457) - aux1111 + SATLiteral(657)))
657 10793 0
457 10793 0
457 657 10792 0
c ((SATLiteral(964) - aux1112 + SATLiteral(108))<=0)
-108 -10795 0
-964 -10795 0
-964 -108 -10796 0
c (0<=(SATLiteral(964) - aux1112 + SATLiteral(108)))
108 10796 0
964 10796 0
964 108 10795 0
c (( - aux1113 + SATLiteral(350) + SATLiteral(857))<=0)
-857 -10798 0
-350 -10798 0
-350 -857 -10799 0
c (0<=( - aux1113 + SATLiteral(350) + SATLiteral(857)))
857 10799 0
350 10799 0
350 857 10798 0
c ((SATLiteral(229) + aux1113 - aux1114)<=0)
10798 -10801 0
10799 -10802 0
-229 -10801 0
-229 10798 -10802 0
-229 10799 -10804 0
c (0<=(SATLiteral(229) + aux1113 - aux1114))
-10799 10804 0
-10798 10802 0
229 10804 0
229 -10799 10802 0
229 -10798 10801 0
c ((SATLiteral(458) - aux1115 + SATLiteral(658))<=0)
-658 -10806 0
-458 -10806 0
-458 -658 -10807 0
c (0<=(SATLiteral(458) - aux1115 + SATLiteral(658)))
658 10807 0
458 10807 0
458 658 10806 0
c ((SATLiteral(965) - aux1116 + SATLiteral(109))<=0)
-109 -10809 0
-965 -10809 0
-965 -109 -10810 0
c (0<=(SATLiteral(965) - aux1116 + SATLiteral(109)))
109 10810 0
965 10810 0
965 109 10809 0
c (( - aux1117 + SATLiteral(564) + SATLiteral(858))<=0)
10812 -564 -858 0
c (0<=( - aux1117 + SATLiteral(564) + SATLiteral(858)))
564 858 0
-10812 858 0
-10812 564 0
c ((aux1117 - aux1118 + SATLiteral(351))<=0)
-351 -10813 0
-10812 -10813 0
-10812 -351 -10814 0
c (0<=(aux1117 - aux1118 + SATLiteral(351)))
351 10814 0
10812 10814 0
10812 351 10813 0
c ((SATLiteral(230) + aux1118 - aux1119)<=0)
10813 -10816 0
10814 -10817 0
-230 -10816 0
-230 10813 -10817 0
-230 10814 -10819 0
c (0<=(SATLiteral(230) + aux1118 - aux1119))
-10814 10819 0
-10813 10817 0
230 10819 0
230 -10814 10817 0
230 -10813 10816 0
c ((SATLiteral(459) - aux1120 + SATLiteral(659))<=0)
-659 -10821 0
-459 -10821 0
-459 -659 -10822 0
c (0<=(SATLiteral(459) - aux1120 + SATLiteral(659)))
659 10822 0
459 10822 0
459 659 10821 0
c ((SATLiteral(966) - aux1121 + SATLiteral(110))<=0)
-110 -10824 0
-966 -10824 0
-966 -110 -10825 0
c (0<=(SATLiteral(966) - aux1121 + SATLiteral(110)))
110 10825 0
966 10825 0
966 110 10824 0
c (( - aux1122 + SATLiteral(352) + SATLiteral(859))<=0)
-859 -10827 0
-352 -10827 0
-352 -859 -10828 0
c (0<=( - aux1122 + SATLiteral(352) + SATLiteral(859)))
859 10828 0
352 10828 0
352 859 10827 0
c ((SATLiteral(231) + aux1122 - aux1123)<=0)
10827 -10830 0
10828 -10831 0
-231 -10830 0
-231 10827 -10831 0
-231 10828 -10833 0
c (0<=(SATLiteral(231) + aux1122 - aux1123))
-10828 10833 0
-10827 10831 0
231 10833 0
231 -10828 10831 0
231 -10827 10830 0
c ((SATLiteral(460) - aux1124 + SATLiteral(660))<=0)
-660 -10835 0
-460 -10835 0
-460 -660 -10836 0
c (0<=(SATLiteral(460) - aux1124 + SATLiteral(660)))
660 10836 0
460 10836 0
460 660 10835 0
c ((SATLiteral(967) - aux1125 + SATLiteral(111))<=0)
-111 -10838 0
-967 -10838 0
-967 -111 -10839 0
c (0<=(SATLiteral(967) - aux1125 + SATLiteral(111)))
111 10839 0
967 10839 0
967 111 10838 0
c (( - aux1126 + SATLiteral(353) + SATLiteral(860))<=0)
-860 -10841 0
-353 -10841 0
-353 -860 -10842 0
c (0<=( - aux1126 + SATLiteral(353) + SATLiteral(860)))
860 10842 0
353 10842 0
353 860 10841 0
c ((SATLiteral(232) + aux1126 - aux1127)<=0)
10841 -10844 0
10842 -10845 0
-232 -10844 0
-232 10841 -10845 0
-232 10842 -10847 0
c (0<=(SATLiteral(232) + aux1126 - aux1127))
-10842 10847 0
-10841 10845 0
232 10847 0
232 -10842 10845 0
232 -10841 10844 0
c ((SATLiteral(461) - aux1128 + SATLiteral(661))<=0)
-661 -10849 0
-461 -10849 0
-461 -661 -10850 0
c (0<=(SATLiteral(461) - aux1128 + SATLiteral(661)))
661 10850 0
461 10850 0
461 661 10849 0
c ((SATLiteral(968) - aux1129 + SATLiteral(112))<=0)
-112 -10852 0
-968 -10852 0
-968 -112 -10853 0
c (0<=(SATLiteral(968) - aux1129 + SATLiteral(112)))
112 10853 0
968 10853 0
968 112 10852 0
c (( - aux1130 + SATLiteral(354) + SATLiteral(861))<=0)
-861 -10855 0
-354 -10855 0
-354 -861 -10856 0
c (0<=( - aux1130 + SATLiteral(354) + SATLiteral(861)))
861 10856 0
354 10856 0
354 861 10855 0
c ((SATLiteral(233) + aux1130 - aux1131)<=0)
10855 -10858 0
10856 -10859 0
-233 -10858 0
-233 10855 -10859 0
-233 10856 -10861 0
c (0<=(SATLiteral(233) + aux1130 - aux1131))
-10856 10861 0
-10855 10859 0
233 10861 0
233 -10856 10859 0
233 -10855 10858 0
c ((SATLiteral(462) - aux1132 + SATLiteral(662))<=0)
-662 -10863 0
-462 -10863 0
-462 -662 -10864 0
c (0<=(SATLiteral(462) - aux1132 + SATLiteral(662)))
662 10864 0
462 10864 0
462 662 10863 0
c ((SATLiteral(969) - aux1133 + SATLiteral(113))<=0)
-113 -10866 0
-969 -10866 0
-969 -113 -10867 0
c (0<=(SATLiteral(969) - aux1133 + SATLiteral(113)))
113 10867 0
969 10867 0
969 113 10866 0
c (( - aux1134 + SATLiteral(355) + SATLiteral(862))<=0)
-862 -10869 0
-355 -10869 0
-355 -862 -10870 0
c (0<=( - aux1134 + SATLiteral(355) + SATLiteral(862)))
862 10870 0
355 10870 0
355 862 10869 0
c ((SATLiteral(234) + aux1134 - aux1135)<=0)
10869 -10872 0
10870 -10873 0
-234 -10872 0
-234 10869 -10873 0
-234 10870 -10875 0
c (0<=(SATLiteral(234) + aux1134 - aux1135))
-10870 10875 0
-10869 10873 0
234 10875 0
234 -10870 10873 0
234 -10869 10872 0
c ((SATLiteral(463) - aux1136 + SATLiteral(663))<=0)
-663 -10877 0
-463 -10877 0
-463 -663 -10878 0
c (0<=(SATLiteral(463) - aux1136 + SATLiteral(663)))
663 10878 0
463 10878 0
463 663 10877 0
c ((SATLiteral(970) - aux1137 + SATLiteral(114))<=0)
-114 -10880 0
-970 -10880 0
-970 -114 -10881 0
c (0<=(SATLiteral(970) - aux1137 + SATLiteral(114)))
114 10881 0
970 10881 0
970 114 10880 0
c ((SATLiteral(764) - aux1138 + SATLiteral(863))<=0)
-764 10883 -863 0
c (0<=(SATLiteral(764) - aux1138 + SATLiteral(863)))
-10883 863 0
764 863 0
764 -10883 0
c ((aux1138 - aux1139 + SATLiteral(356))<=0)
-356 -10884 0
-10883 -10884 0
-10883 -356 -10885 0
c (0<=(aux1138 - aux1139 + SATLiteral(356)))
356 10885 0
10883 10885 0
10883 356 10884 0
c ((SATLiteral(235) + aux1139 - aux1140)<=0)
10884 -10887 0
10885 -10888 0
-235 -10887 0
-235 10884 -10888 0
-235 10885 -10890 0
c (0<=(SATLiteral(235) + aux1139 - aux1140))
-10885 10890 0
-10884 10888 0
235 10890 0
235 -10885 10888 0
235 -10884 10887 0
c ((SATLiteral(464) - aux1141 + SATLiteral(664))<=0)
-664 -10892 0
-464 -10892 0
-464 -664 -10893 0
c (0<=(SATLiteral(464) - aux1141 + SATLiteral(664)))
664 10893 0
464 10893 0
464 664 10892 0
c ((SATLiteral(971) - aux1142 + SATLiteral(115))<=0)
-115 -10895 0
-971 -10895 0
-971 -115 -10896 0
c (0<=(SATLiteral(971) - aux1142 + SATLiteral(115)))
115 10896 0
971 10896 0
971 115 10895 0
c (( - aux1143 + SATLiteral(357) + SATLiteral(864))<=0)
-864 -10898 0
-357 -10898 0
-357 -864 -10899 0
c (0<=( - aux1143 + SATLiteral(357) + SATLiteral(864)))
864 10899 0
357 10899 0
357 864 10898 0
c ((SATLiteral(236) + aux1143 - aux1144)<=0)
10898 -10901 0
10899 -10902 0
-236 -10901 0
-236 10898 -10902 0
-236 10899 -10904 0
c (0<=(SATLiteral(236) + aux1143 - aux1144))
-10899 10904 0
-10898 10902 0
236 10904 0
236 -10899 10902 0
236 -10898 10901 0
c ((SATLiteral(465) - aux1145 + SATLiteral(665))<=0)
-665 -10906 0
-465 -10906 0
-465 -665 -10907 0
c (0<=(SATLiteral(465) - aux1145 + SATLiteral(665)))
665 10907 0
465 10907 0
465 665 10906 0
c ((SATLiteral(972) - aux1146 + SATLiteral(116))<=0)
-116 -10909 0
-972 -10909 0
-972 -116 -10910 0
c (0<=(SATLiteral(972) - aux1146 + SATLiteral(116)))
116 10910 0
972 10910 0
972 116 10909 0
c (( - aux1147 + SATLiteral(358) + SATLiteral(865))<=0)
-865 -10912 0
-358 -10912 0
-358 -865 -10913 0
c (0<=( - aux1147 + SATLiteral(358) + SATLiteral(865)))
865 10913 0
358 10913 0
358 865 10912 0
c ((SATLiteral(237) + aux1147 - aux1148)<=0)
10912 -10915 0
10913 -10916 0
-237 -10915 0
-237 10912 -10916 0
-237 10913 -10918 0
c (0<=(SATLiteral(237) + aux1147 - aux1148))
-10913 10918 0
-10912 10916 0
237 10918 0
237 -10913 10916 0
237 -10912 10915 0
c ((SATLiteral(10920) - aux1150 + SATLiteral(8068))<=0)
-8068 -10921 0
-10920 -10921 0
-10920 -8068 -10922 0
c (0<=(SATLiteral(10920) - aux1150 + SATLiteral(8068)))
8068 10922 0
10920 10922 0
10920 8068 10921 0
c (( - aux1151 + SATLiteral(8063) + SATLiteral(8067))<=0)
-8067 -10924 0
-8063 -10924 0
-8063 -8067 -10925 0
c (0<=( - aux1151 + SATLiteral(8063) + SATLiteral(8067)))
8067 10925 0
8063 10925 0
8063 8067 10924 0
c (( - aux1152 + SATLiteral(8064) + SATLiteral(8066))<=0)
-8066 -10927 0
-8064 -10927 0
-8064 -8066 -10928 0
c (0<=( - aux1152 + SATLiteral(8064) + SATLiteral(8066)))
8066 10928 0
8064 10928 0
8064 8066 10927 0
c (( - aux1153 + SATLiteral(8062) + SATLiteral(8065))<=0)
-8065 -10930 0
-8062 -10930 0
-8062 -8065 -10931 0
c (0<=( - aux1153 + SATLiteral(8062) + SATLiteral(8065)))
8065 10931 0
8062 10931 0
8062 8065 10930 0
c ((aux1151 + aux1153 - aux1154)<=0)
10930 -10933 0
10931 -10934 0
10924 -10933 0
10924 10930 -10934 0
10924 10931 -10936 0
10925 -10934 0
10925 10930 -10936 0
10925 10931 -10938 0
c (0<=(aux1151 + aux1153 - aux1154))
-10931 10938 0
-10930 10936 0
-10925 10938 0
-10925 -10931 10936 0
-10925 -10930 10934 0
-10924 10936 0
-10924 -10931 10934 0
-10924 -10930 10933 0
c ((aux1150 + aux1152 - aux1155)<=0)
10927 -10940 0
10928 -10941 0
10921 -10940 0
10921 10927 -10941 0
10921 10928 -10943 0
10922 -10941 0
10922 10927 -10943 0
10922 10928 -10945 0
c (0<=(aux1150 + aux1152 - aux1155))
-10928 10945 0
-10927 10943 0
-10922 10945 0
-10922 -10928 10943 0
-10922 -10927 10941 0
-10921 10943 0
-10921 -10928 10941 0
-10921 -10927 10940 0
c ((SATLiteral(10947) - aux1157 + SATLiteral(8076))<=0)
-8076 -10948 0
-10947 -10948 0
-10947 -8076 -10949 0
c (0<=(SATLiteral(10947) - aux1157 + SATLiteral(8076)))
8076 10949 0
10947 10949 0
10947 8076 10948 0
c (( - aux1158 + SATLiteral(8071) + SATLiteral(8075))<=0)
-8075 -10951 0
-8071 -10951 0
-8071 -8075 -10952 0
c (0<=( - aux1158 + SATLiteral(8071) + SATLiteral(8075)))
8075 10952 0
8071 10952 0
8071 8075 10951 0
c (( - aux1159 + SATLiteral(8072) + SATLiteral(8074))<=0)
-8074 -10954 0
-8072 -10954 0
-8072 -8074 -10955 0
c (0<=( - aux1159 + SATLiteral(8072) + SATLiteral(8074)))
8074 10955 0
8072 10955 0
8072 8074 10954 0
c (( - aux1160 + SATLiteral(8070) + SATLiteral(8073))<=0)
-8073 -10957 0
-8070 -10957 0
-8070 -8073 -10958 0
c (0<=( - aux1160 + SATLiteral(8070) + SATLiteral(8073)))
8073 10958 0
8070 10958 0
8070 8073 10957 0
c ((aux1158 + aux1160 - aux1161)<=0)
10957 -10960 0
10958 -10961 0
10951 -10960 0
10951 10957 -10961 0
10951 10958 -10963 0
10952 -10961 0
10952 10957 -10963 0
10952 10958 -10965 0
c (0<=(aux1158 + aux1160 - aux1161))
-10958 10965 0
-10957 10963 0
-10952 10965 0
-10952 -10958 10963 0
-10952 -10957 10961 0
-10951 10963 0
-10951 -10958 10961 0
-10951 -10957 10960 0
c ((aux1157 + aux1159 - aux1162)<=0)
10954 -10967 0
10955 -10968 0
10948 -10967 0
10948 10954 -10968 0
10948 10955 -10970 0
10949 -10968 0
10949 10954 -10970 0
10949 10955 -10972 0
c (0<=(aux1157 + aux1159 - aux1162))
-10955 10972 0
-10954 10970 0
-10949 10972 0
-10949 -10955 10970 0
-10949 -10954 10968 0
-10948 10970 0
-10948 -10955 10968 0
-10948 -10954 10967 0
c ((SATLiteral(10974) - aux1164 + SATLiteral(8084))<=0)
-8084 -10975 0
-10974 -10975 0
-10974 -8084 -10976 0
c (0<=(SATLiteral(10974) - aux1164 + SATLiteral(8084)))
8084 10976 0
10974 10976 0
10974 8084 10975 0
c (( - aux1165 + SATLiteral(8079) + SATLiteral(8083))<=0)
-8083 -10978 0
-8079 -10978 0
-8079 -8083 -10979 0
c (0<=( - aux1165 + SATLiteral(8079) + SATLiteral(8083)))
8083 10979 0
8079 10979 0
8079 8083 10978 0
c (( - aux1166 + SATLiteral(8080) + SATLiteral(8082))<=0)
-8082 -10981 0
-8080 -10981 0
-8080 -8082 -10982 0
c (0<=( - aux1166 + SATLiteral(8080) + SATLiteral(8082)))
8082 10982 0
8080 10982 0
8080 8082 10981 0
c (( - aux1167 + SATLiteral(8078) + SATLiteral(8081))<=0)
-8081 -10984 0
-8078 -10984 0
-8078 -8081 -10985 0
c (0<=( - aux1167 + SATLiteral(8078) + SATLiteral(8081)))
8081 10985 0
8078 10985 0
8078 8081 10984 0
c ((aux1165 + aux1167 - aux1168)<=0)
10984 -10987 0
10985 -10988 0
10978 -10987 0
10978 10984 -10988 0
10978 10985 -10990 0
10979 -10988 0
10979 10984 -10990 0
10979 10985 -10992 0
c (0<=(aux1165 + aux1167 - aux1168))
-10985 10992 0
-10984 10990 0
-10979 10992 0
-10979 -10985 10990 0
-10979 -10984 10988 0
-10978 10990 0
-10978 -10985 10988 0
-10978 -10984 10987 0
c ((aux1164 + aux1166 - aux1169)<=0)
10981 -10994 0
10982 -10995 0
10975 -10994 0
10975 10981 -10995 0
10975 10982 -10997 0
10976 -10995 0
10976 10981 -10997 0
10976 10982 -10999 0
c (0<=(aux1164 + aux1166 - aux1169))
-10982 10999 0
-10981 10997 0
-10976 10999 0
-10976 -10982 10997 0
-10976 -10981 10995 0
-10975 10997 0
-10975 -10982 10995 0
-10975 -10981 10994 0
c ((SATLiteral(11001) - aux1171 + SATLiteral(8092))<=0)
-8092 -11002 0
-11001 -11002 0
-11001 -8092 -11003 0
c (0<=(SATLiteral(11001) - aux1171 + SATLiteral(8092)))
8092 11003 0
11001 11003 0
11001 8092 11002 0
c (( - aux1172 + SATLiteral(8087) + SATLiteral(8091))<=0)
-8091 -11005 0
-8087 -11005 0
-8087 -8091 -11006 0
c (0<=( - aux1172 + SATLiteral(8087) + SATLiteral(8091)))
8091 11006 0
8087 11006 0
8087 8091 11005 0
c (( - aux1173 + SATLiteral(8088) + SATLiteral(8090))<=0)
-8090 -11008 0
-8088 -11008 0
-8088 -8090 -11009 0
c (0<=( - aux1173 + SATLiteral(8088) + SATLiteral(8090)))
8090 11009 0
8088 11009 0
8088 8090 11008 0
c (( - aux1174 + SATLiteral(8086) + SATLiteral(8089))<=0)
-8089 -11011 0
-8086 -11011 0
-8086 -8089 -11012 0
c (0<=( - aux1174 + SATLiteral(8086) + SATLiteral(8089)))
8089 11012 0
8086 11012 0
8086 8089 11011 0
c ((aux1172 + aux1174 - aux1175)<=0)
11011 -11014 0
11012 -11015 0
11005 -11014 0
11005 11011 -11015 0
11005 11012 -11017 0
11006 -11015 0
11006 11011 -11017 0
11006 11012 -11019 0
c (0<=(aux1172 + aux1174 - aux1175))
-11012 11019 0
-11011 11017 0
-11006 11019 0
-11006 -11012 11017 0
-11006 -11011 11015 0
-11005 11017 0
-11005 -11012 11015 0
-11005 -11011 11014 0
c ((aux1171 + aux1173 - aux1176)<=0)
11008 -11021 0
11009 -11022 0
11002 -11021 0
11002 11008 -11022 0
11002 11009 -11024 0
11003 -11022 0
11003 11008 -11024 0
11003 11009 -11026 0
c (0<=(aux1171 + aux1173 - aux1176))
-11009 11026 0
-11008 11024 0
-11003 11026 0
-11003 -11009 11024 0
-11003 -11008 11022 0
-11002 11024 0
-11002 -11009 11022 0
-11002 -11008 11021 0
c ((SATLiteral(11028) - aux1178 + SATLiteral(8100))<=0)
-8100 -11029 0
-11028 -11029 0
-11028 -8100 -11030 0
c (0<=(SATLiteral(11028) - aux1178 + SATLiteral(8100)))
8100 11030 0
11028 11030 0
11028 8100 11029 0
c (( - aux1179 + SATLiteral(8095) + SATLiteral(8099))<=0)
-8099 -11032 0
-8095 -11032 0
-8095 -8099 -11033 0
c (0<=( - aux1179 + SATLiteral(8095) + SATLiteral(8099)))
8099 11033 0
8095 11033 0
8095 8099 11032 0
c (( - aux1180 + SATLiteral(8096) + SATLiteral(8098))<=0)
-8098 -11035 0
-8096 -11035 0
-8096 -8098 -11036 0
c (0<=( - aux1180 + SATLiteral(8096) + SATLiteral(8098)))
8098 11036 0
8096 11036 0
8096 8098 11035 0
c (( - aux1181 + SATLiteral(8094) + SATLiteral(8097))<=0)
-8097 -11038 0
-8094 -11038 0
-8094 -8097 -11039 0
c (0<=( - aux1181 + SATLiteral(8094) + SATLiteral(8097)))
8097 11039 0
8094 11039 0
8094 8097 11038 0
c ((aux1179 + aux1181 - aux1182)<=0)
11038 -11041 0
11039 -11042 0
11032 -11041 0
11032 11038 -11042 0
11032 11039 -11044 0
11033 -11042 0
11033 11038 -11044 0
11033 11039 -11046 0
c (0<=(aux1179 + aux1181 - aux1182))
-11039 11046 0
-11038 11044 0
-11033 11046 0
-11033 -11039 11044 0
-11033 -11038 11042 0
-11032 11044 0
-11032 -11039 11042 0
-11032 -11038 11041 0
c ((aux1178 + aux1180 - aux1183)<=0)
11035 -11048 0
11036 -11049 0
11029 -11048 0
11029 11035 -11049 0
11029 11036 -11051 0
11030 -11049 0
11030 11035 -11051 0
11030 11036 -11053 0
c (0<=(aux1178 + aux1180 - aux1183))
-11036 11053 0
-11035 11051 0
-11030 11053 0
-11030 -11036 11051 0
-11030 -11035 11049 0
-11029 11051 0
-11029 -11036 11049 0
-11029 -11035 11048 0
c ((SATLiteral(11055) - aux1185 + SATLiteral(8108))<=0)
-8108 -11056 0
-11055 -11056 0
-11055 -8108 -11057 0
c (0<=(SATLiteral(11055) - aux1185 + SATLiteral(8108)))
8108 11057 0
11055 11057 0
11055 8108 11056 0
c (( - aux1186 + SATLiteral(8103) + SATLiteral(8107))<=0)
-8107 -11059 0
-8103 -11059 0
-8103 -8107 -11060 0
c (0<=( - aux1186 + SATLiteral(8103) + SATLiteral(8107)))
8107 11060 0
8103 11060 0
8103 8107 11059 0
c (( - aux1187 + SATLiteral(8104) + SATLiteral(8106))<=0)
-8106 -11062 0
-8104 -11062 0
-8104 -8106 -11063 0
c (0<=( - aux1187 + SATLiteral(8104) + SATLiteral(8106)))
8106 11063 0
8104 11063 0
8104 8106 11062 0
c (( - aux1188 + SATLiteral(8102) + SATLiteral(8105))<=0)
-8105 -11065 0
-8102 -11065 0
-8102 -8105 -11066 0
c (0<=( - aux1188 + SATLiteral(8102) + SATLiteral(8105)))
8105 11066 0
8102 11066 0
8102 8105 11065 0
c ((aux1186 + aux1188 - aux1189)<=0)
11065 -11068 0
11066 -11069 0
11059 -11068 0
11059 11065 -11069 0
11059 11066 -11071 0
11060 -11069 0
11060 11065 -11071 0
11060 11066 -11073 0
c (0<=(aux1186 + aux1188 - aux1189))
-11066 11073 0
-11065 11071 0
-11060 11073 0
-11060 -11066 11071 0
-11060 -11065 11069 0
-11059 11071 0
-11059 -11066 11069 0
-11059 -11065 11068 0
c ((aux1185 + aux1187 - aux1190)<=0)
11062 -11075 0
11063 -11076 0
11056 -11075 0
11056 11062 -11076 0
11056 11063 -11078 0
11057 -11076 0
11057 11062 -11078 0
11057 11063 -11080 0
c (0<=(aux1185 + aux1187 - aux1190))
-11063 11080 0
-11062 11078 0
-11057 11080 0
-11057 -11063 11078 0
-11057 -11062 11076 0
-11056 11078 0
-11056 -11063 11076 0
-11056 -11062 11075 0
c ((SATLiteral(11082) - aux1192 + SATLiteral(8116))<=0)
-8116 -11083 0
-11082 -11083 0
-11082 -8116 -11084 0
c (0<=(SATLiteral(11082) - aux1192 + SATLiteral(8116)))
8116 11084 0
11082 11084 0
11082 8116 11083 0
c (( - aux1193 + SATLiteral(8111) + SATLiteral(8115))<=0)
-8115 -11086 0
-8111 -11086 0
-8111 -8115 -11087 0
c (0<=( - aux1193 + SATLiteral(8111) + SATLiteral(8115)))
8115 11087 0
8111 11087 0
8111 8115 11086 0
c (( - aux1194 + SATLiteral(8112) + SATLiteral(8114))<=0)
-8114 -11089 0
-8112 -11089 0
-8112 -8114 -11090 0
c (0<=( - aux1194 + SATLiteral(8112) + SATLiteral(8114)))
8114 11090 0
8112 11090 0
8112 8114 11089 0
c (( - aux1195 + SATLiteral(8110) + SATLiteral(8113))<=0)
-8113 -11092 0
-8110 -11092 0
-8110 -8113 -11093 0
c (0<=( - aux1195 + SATLiteral(8110) + SATLiteral(8113)))
8113 11093 0
8110 11093 0
8110 8113 11092 0
c ((aux1193 + aux1195 - aux1196)<=0)
11092 -11095 0
11093 -11096 0
11086 -11095 0
11086 11092 -11096 0
11086 11093 -11098 0
11087 -11096 0
11087 11092 -11098 0
11087 11093 -11100 0
c (0<=(aux1193 + aux1195 - aux1196))
-11093 11100 0
-11092 11098 0
-11087 11100 0
-11087 -11093 11098 0
-11087 -11092 11096 0
-11086 11098 0
-11086 -11093 11096 0
-11086 -11092 11095 0
c ((aux1192 + aux1194 - aux1197)<=0)
11089 -11102 0
11090 -11103 0
11083 -11102 0
11083 11089 -11103 0
11083 11090 -11105 0
11084 -11103 0
11084 11089 -11105 0
11084 11090 -11107 0
c (0<=(aux1192 + aux1194 - aux1197))
-11090 11107 0
-11089 11105 0
-11084 11107 0
-11084 -11090 11105 0
-11084 -11089 11103 0
-11083 11105 0
-11083 -11090 11103 0
-11083 -11089 11102 0
c ((SATLiteral(11109) - aux1199 + SATLiteral(8124))<=0)
-8124 -11110 0
-11109 -11110 0
-11109 -8124 -11111 0
c (0<=(SATLiteral(11109) - aux1199 + SATLiteral(8124)))
8124 11111 0
11109 11111 0
11109 8124 11110 0
c (( - aux1200 + SATLiteral(8119) + SATLiteral(8123))<=0)
-8123 -11113 0
-8119 -11113 0
-8119 -8123 -11114 0
c (0<=( - aux1200 + SATLiteral(8119) + SATLiteral(8123)))
8123 11114 0
8119 11114 0
8119 8123 11113 0
c (( - aux1201 + SATLiteral(8120) + SATLiteral(8122))<=0)
-8122 -11116 0
-8120 -11116 0
-8120 -8122 -11117 0
c (0<=( - aux1201 + SATLiteral(8120) + SATLiteral(8122)))
8122 11117 0
8120 11117 0
8120 8122 11116 0
c (( - aux1202 + SATLiteral(8118) + SATLiteral(8121))<=0)
-8121 -11119 0
-8118 -11119 0
-8118 -8121 -11120 0
c (0<=( - aux1202 + SATLiteral(8118) + SATLiteral(8121)))
8121 11120 0
8118 11120 0
8118 8121 11119 0
c ((aux1200 + aux1202 - aux1203)<=0)
11119 -11122 0
11120 -11123 0
11113 -11122 0
11113 11119 -11123 0
11113 11120 -11125 0
11114 -11123 0
11114 11119 -11125 0
11114 11120 -11127 0
c (0<=(aux1200 + aux1202 - aux1203))
-11120 11127 0
-11119 11125 0
-11114 11127 0
-11114 -11120 11125 0
-11114 -11119 11123 0
-11113 11125 0
-11113 -11120 11123 0
-11113 -11119 11122 0
c ((aux1199 + aux1201 - aux1204)<=0)
11116 -11129 0
11117 -11130 0
11110 -11129 0
11110 11116 -11130 0
11110 11117 -11132 0
11111 -11130 0
11111 11116 -11132 0
11111 11117 -11134 0
c (0<=(aux1199 + aux1201 - aux1204))
-11117 11134 0
-11116 11132 0
-11111 11134 0
-11111 -11117 11132 0
-11111 -11116 11130 0
-11110 11132 0
-11110 -11117 11130 0
-11110 -11116 11129 0
c ((SATLiteral(11136) - aux1206 + SATLiteral(8132))<=0)
-8132 -11137 0
-11136 -11137 0
-11136 -8132 -11138 0
c (0<=(SATLiteral(11136) - aux1206 + SATLiteral(8132)))
8132 11138 0
11136 11138 0
11136 8132 11137 0
c (( - aux1207 + SATLiteral(8127) + SATLiteral(8131))<=0)
-8131 -11140 0
-8127 -11140 0
-8127 -8131 -11141 0
c (0<=( - aux1207 + SATLiteral(8127) + SATLiteral(8131)))
8131 11141 0
8127 11141 0
8127 8131 11140 0
c (( - aux1208 + SATLiteral(8128) + SATLiteral(8130))<=0)
-8130 -11143 0
-8128 -11143 0
-8128 -8130 -11144 0
c (0<=( - aux1208 + SATLiteral(8128) + SATLiteral(8130)))
8130 11144 0
8128 11144 0
8128 8130 11143 0
c (( - aux1209 + SATLiteral(8126) + SATLiteral(8129))<=0)
-8129 -11146 0
-8126 -11146 0
-8126 -8129 -11147 0
c (0<=( - aux1209 + SATLiteral(8126) + SATLiteral(8129)))
8129 11147 0
8126 11147 0
8126 8129 11146 0
c ((aux1207 + aux1209 - aux1210)<=0)
11146 -11149 0
11147 -11150 0
11140 -11149 0
11140 11146 -11150 0
11140 11147 -11152 0
11141 -11150 0
11141 11146 -11152 0
11141 11147 -11154 0
c (0<=(aux1207 + aux1209 - aux1210))
-11147 11154 0
-11146 11152 0
-11141 11154 0
-11141 -11147 11152 0
-11141 -11146 11150 0
-11140 11152 0
-11140 -11147 11150 0
-11140 -11146 11149 0
c ((aux1206 + aux1208 - aux1211)<=0)
11143 -11156 0
11144 -11157 0
11137 -11156 0
11137 11143 -11157 0
11137 11144 -11159 0
11138 -11157 0
11138 11143 -11159 0
11138 11144 -11161 0
c (0<=(aux1206 + aux1208 - aux1211))
-11144 11161 0
-11143 11159 0
-11138 11161 0
-11138 -11144 11159 0
-11138 -11143 11157 0
-11137 11159 0
-11137 -11144 11157 0
-11137 -11143 11156 0
c ((SATLiteral(11163) - aux1213 + SATLiteral(8140))<=0)
-8140 -11164 0
-11163 -11164 0
-11163 -8140 -11165 0
c (0<=(SATLiteral(11163) - aux1213 + SATLiteral(8140)))
8140 11165 0
11163 11165 0
11163 8140 11164 0
c (( - aux1214 + SATLiteral(8135) + SATLiteral(8139))<=0)
-8139 -11167 0
-8135 -11167 0
-8135 -8139 -11168 0
c (0<=( - aux1214 + SATLiteral(8135) + SATLiteral(8139)))
8139 11168 0
8135 11168 0
8135 8139 11167 0
c (( - aux1215 + SATLiteral(8136) + SATLiteral(8138))<=0)
-8138 -11170 0
-8136 -11170 0
-8136 -8138 -11171 0
c (0<=( - aux1215 + SATLiteral(8136) + SATLiteral(8138)))
8138 11171 0
8136 11171 0
8136 8138 11170 0
c (( - aux1216 + SATLiteral(8134) + SATLiteral(8137))<=0)
-8137 -11173 0
-8134 -11173 0
-8134 -8137 -11174 0
c (0<=( - aux1216 + SATLiteral(8134) + SATLiteral(8137)))
8137 11174 0
8134 11174 0
8134 8137 11173 0
c ((aux1214 + aux1216 - aux1217)<=0)
11173 -11176 0
11174 -11177 0
11167 -11176 0
11167 11173 -11177 0
11167 11174 -11179 0
11168 -11177 0
11168 11173 -11179 0
11168 11174 -11181 0
c (0<=(aux1214 + aux1216 - aux1217))
-11174 11181 0
-11173 11179 0
-11168 11181 0
-11168 -11174 11179 0
-11168 -11173 11177 0
-11167 11179 0
-11167 -11174 11177 0
-11167 -11173 11176 0
c ((aux1213 + aux1215 - aux1218)<=0)
11170 -11183 0
11171 -11184 0
11164 -11183 0
11164 11170 -11184 0
11164 11171 -11186 0
11165 -11184 0
11165 11170 -11186 0
11165 11171 -11188 0
c (0<=(aux1213 + aux1215 - aux1218))
-11171 11188 0
-11170 11186 0
-11165 11188 0
-11165 -11171 11186 0
-11165 -11170 11184 0
-11164 11186 0
-11164 -11171 11184 0
-11164 -11170 11183 0
c ((SATLiteral(11190) - aux1220 + SATLiteral(8148))<=0)
-8148 -11191 0
-11190 -11191 0
-11190 -8148 -11192 0
c (0<=(SATLiteral(11190) - aux1220 + SATLiteral(8148)))
8148 11192 0
11190 11192 0
11190 8148 11191 0
c (( - aux1221 + SATLiteral(8143) + SATLiteral(8147))<=0)
-8147 -11194 0
-8143 -11194 0
-8143 -8147 -11195 0
c (0<=( - aux1221 + SATLiteral(8143) + SATLiteral(8147)))
8147 11195 0
8143 11195 0
8143 8147 11194 0
c (( - aux1222 + SATLiteral(8144) + SATLiteral(8146))<=0)
-8146 -11197 0
-8144 -11197 0
-8144 -8146 -11198 0
c (0<=( - aux1222 + SATLiteral(8144) + SATLiteral(8146)))
8146 11198 0
8144 11198 0
8144 8146 11197 0
c (( - aux1223 + SATLiteral(8142) + SATLiteral(8145))<=0)
-8145 -11200 0
-8142 -11200 0
-8142 -8145 -11201 0
c (0<=( - aux1223 + SATLiteral(8142) + SATLiteral(8145)))
8145 11201 0
8142 11201 0
8142 8145 11200 0
c ((aux1221 + aux1223 - aux1224)<=0)
11200 -11203 0
11201 -11204 0
11194 -11203 0
11194 11200 -11204 0
11194 11201 -11206 0
11195 -11204 0
11195 11200 -11206 0
11195 11201 -11208 0
c (0<=(aux1221 + aux1223 - aux1224))
-11201 11208 0
-11200 11206 0
-11195 11208 0
-11195 -11201 11206 0
-11195 -11200 11204 0
-11194 11206 0
-11194 -11201 11204 0
-11194 -11200 11203 0
c ((aux1220 + aux1222 - aux1225)<=0)
11197 -11210 0
11198 -11211 0
11191 -11210 0
11191 11197 -11211 0
11191 11198 -11213 0
11192 -11211 0
11192 11197 -11213 0
11192 11198 -11215 0
c (0<=(aux1220 + aux1222 - aux1225))
-11198 11215 0
-11197 11213 0
-11192 11215 0
-11192 -11198 11213 0
-11192 -11197 11211 0
-11191 11213 0
-11191 -11198 11211 0
-11191 -11197 11210 0
c ((SATLiteral(11217) - aux1227 + SATLiteral(8156))<=0)
-8156 -11218 0
-11217 -11218 0
-11217 -8156 -11219 0
c (0<=(SATLiteral(11217) - aux1227 + SATLiteral(8156)))
8156 11219 0
11217 11219 0
11217 8156 11218 0
c (( - aux1228 + SATLiteral(8151) + SATLiteral(8155))<=0)
-8155 -11221 0
-8151 -11221 0
-8151 -8155 -11222 0
c (0<=( - aux1228 + SATLiteral(8151) + SATLiteral(8155)))
8155 11222 0
8151 11222 0
8151 8155 11221 0
c (( - aux1229 + SATLiteral(8152) + SATLiteral(8154))<=0)
-8154 -11224 0
-8152 -11224 0
-8152 -8154 -11225 0
c (0<=( - aux1229 + SATLiteral(8152) + SATLiteral(8154)))
8154 11225 0
8152 11225 0
8152 8154 11224 0
c (( - aux1230 + SATLiteral(8150) + SATLiteral(8153))<=0)
-8153 -11227 0
-8150 -11227 0
-8150 -8153 -11228 0
c (0<=( - aux1230 + SATLiteral(8150) + SATLiteral(8153)))
8153 11228 0
8150 11228 0
8150 8153 11227 0
c ((aux1228 + aux1230 - aux1231)<=0)
11227 -11230 0
11228 -11231 0
11221 -11230 0
11221 11227 -11231 0
11221 11228 -11233 0
11222 -11231 0
11222 11227 -11233 0
11222 11228 -11235 0
c (0<=(aux1228 + aux1230 - aux1231))
-11228 11235 0
-11227 11233 0
-11222 11235 0
-11222 -11228 11233 0
-11222 -11227 11231 0
-11221 11233 0
-11221 -11228 11231 0
-11221 -11227 11230 0
c ((aux1227 + aux1229 - aux1232)<=0)
11224 -11237 0
11225 -11238 0
11218 -11237 0
11218 11224 -11238 0
11218 11225 -11240 0
11219 -11238 0
11219 11224 -11240 0
11219 11225 -11242 0
c (0<=(aux1227 + aux1229 - aux1232))
-11225 11242 0
-11224 11240 0
-11219 11242 0
-11219 -11225 11240 0
-11219 -11224 11238 0
-11218 11240 0
-11218 -11225 11238 0
-11218 -11224 11237 0
c ((SATLiteral(11244) - aux1234 + SATLiteral(8160))<=0)
-8160 -11245 0
-11244 -11245 0
-11244 -8160 -11246 0
c (0<=(SATLiteral(11244) - aux1234 + SATLiteral(8160)))
8160 11246 0
11244 11246 0
11244 8160 11245 0
c ((SATLiteral(8164) - aux1235 + SATLiteral(8159))<=0)
-8159 -11248 0
-8164 -11248 0
-8164 -8159 -11249 0
c (0<=(SATLiteral(8164) - aux1235 + SATLiteral(8159)))
8159 11249 0
8164 11249 0
8164 8159 11248 0
c ((SATLiteral(8162) - aux1236 + SATLiteral(8158))<=0)
-8158 -11251 0
-8162 -11251 0
-8162 -8158 -11252 0
c (0<=(SATLiteral(8162) - aux1236 + SATLiteral(8158)))
8158 11252 0
8162 11252 0
8162 8158 11251 0
c ((SATLiteral(8163) - aux1237 + SATLiteral(8157))<=0)
-8157 -11254 0
-8163 -11254 0
-8163 -8157 -11255 0
c (0<=(SATLiteral(8163) - aux1237 + SATLiteral(8157)))
8157 11255 0
8163 11255 0
8163 8157 11254 0
c ((aux1235 + aux1237 - aux1238)<=0)
11254 -11257 0
11255 -11258 0
11248 -11257 0
11248 11254 -11258 0
11248 11255 -11260 0
11249 -11258 0
11249 11254 -11260 0
11249 11255 -11262 0
c (0<=(aux1235 + aux1237 - aux1238))
-11255 11262 0
-11254 11260 0
-11249 11262 0
-11249 -11255 11260 0
-11249 -11254 11258 0
-11248 11260 0
-11248 -11255 11258 0
-11248 -11254 11257 0
c ((aux1234 + aux1236 - aux1239)<=0)
11251 -11264 0
11252 -11265 0
11245 -11264 0
11245 11251 -11265 0
11245 11252 -11267 0
11246 -11265 0
11246 11251 -11267 0
11246 11252 -11269 0
c (0<=(aux1234 + aux1236 - aux1239))
-11252 11269 0
-11251 11267 0
-11246 11269 0
-11246 -11252 11267 0
-11246 -11251 11265 0
-11245 11267 0
-11245 -11252 11265 0
-11245 -11251 11264 0
c ((SATLiteral(8168) + SATLiteral(11271) - aux1241)<=0)
-11271 -11272 0
-8168 -11272 0
-8168 -11271 -11273 0
c (0<=(SATLiteral(8168) + SATLiteral(11271) - aux1241))
11271 11273 0
8168 11273 0
8168 11271 11272 0
c ((SATLiteral(8166) + SATLiteral(8172) - aux1242)<=0)
-8172 -11275 0
-8166 -11275 0
-8166 -8172 -11276 0
c (0<=(SATLiteral(8166) + SATLiteral(8172) - aux1242))
8172 11276 0
8166 11276 0
8166 8172 11275 0
c ((SATLiteral(8169) + SATLiteral(8171) - aux1243)<=0)
-8171 -11278 0
-8169 -11278 0
-8169 -8171 -11279 0
c (0<=(SATLiteral(8169) + SATLiteral(8171) - aux1243))
8171 11279 0
8169 11279 0
8169 8171 11278 0
c ((SATLiteral(8167) + SATLiteral(8170) - aux1244)<=0)
-8170 -11281 0
-8167 -11281 0
-8167 -8170 -11282 0
c (0<=(SATLiteral(8167) + SATLiteral(8170) - aux1244))
8170 11282 0
8167 11282 0
8167 8170 11281 0
c ((aux1242 + aux1244 - aux1245)<=0)
11281 -11284 0
11282 -11285 0
11275 -11284 0
11275 11281 -11285 0
11275 11282 -11287 0
11276 -11285 0
11276 11281 -11287 0
11276 11282 -11289 0
c (0<=(aux1242 + aux1244 - aux1245))
-11282 11289 0
-11281 11287 0
-11276 11289 0
-11276 -11282 11287 0
-11276 -11281 11285 0
-11275 11287 0
-11275 -11282 11285 0
-11275 -11281 11284 0
c ((aux1241 + aux1243 - aux1246)<=0)
11278 -11291 0
11279 -11292 0
11272 -11291 0
11272 11278 -11292 0
11272 11279 -11294 0
11273 -11292 0
11273 11278 -11294 0
11273 11279 -11296 0
c (0<=(aux1241 + aux1243 - aux1246))
-11279 11296 0
-11278 11294 0
-11273 11296 0
-11273 -11279 11294 0
-11273 -11278 11292 0
-11272 11294 0
-11272 -11279 11292 0
-11272 -11278 11291 0
c ((SATLiteral(8176) + SATLiteral(11298) - aux1248)<=0)
-11298 -11299 0
-8176 -11299 0
-8176 -11298 -11300 0
c (0<=(SATLiteral(8176) + SATLiteral(11298) - aux1248))
11298 11300 0
8176 11300 0
8176 11298 11299 0
c ((SATLiteral(8174) + SATLiteral(8180) - aux1249)<=0)
-8180 -11302 0
-8174 -11302 0
-8174 -8180 -11303 0
c (0<=(SATLiteral(8174) + SATLiteral(8180) - aux1249))
8180 11303 0
8174 11303 0
8174 8180 11302 0
c ((SATLiteral(8177) + SATLiteral(8179) - aux1250)<=0)
-8179 -11305 0
-8177 -11305 0
-8177 -8179 -11306 0
c (0<=(SATLiteral(8177) + SATLiteral(8179) - aux1250))
8179 11306 0
8177 11306 0
8177 8179 11305 0
c ((SATLiteral(8175) + SATLiteral(8178) - aux1251)<=0)
-8178 -11308 0
-8175 -11308 0
-8175 -8178 -11309 0
c (0<=(SATLiteral(8175) + SATLiteral(8178) - aux1251))
8178 11309 0
8175 11309 0
8175 8178 11308 0
c ((aux1249 + aux1251 - aux1252)<=0)
11308 -11311 0
11309 -11312 0
11302 -11311 0
11302 11308 -11312 0
11302 11309 -11314 0
11303 -11312 0
11303 11308 -11314 0
11303 11309 -11316 0
c (0<=(aux1249 + aux1251 - aux1252))
-11309 11316 0
-11308 11314 0
-11303 11316 0
-11303 -11309 11314 0
-11303 -11308 11312 0
-11302 11314 0
-11302 -11309 11312 0
-11302 -11308 11311 0
c ((aux1248 + aux1250 - aux1253)<=0)
11305 -11318 0
11306 -11319 0
11299 -11318 0
11299 11305 -11319 0
11299 11306 -11321 0
11300 -11319 0
11300 11305 -11321 0
11300 11306 -11323 0
c (0<=(aux1248 + aux1250 - aux1253))
-11306 11323 0
-11305 11321 0
-11300 11323 0
-11300 -11306 11321 0
-11300 -11305 11319 0
-11299 11321 0
-11299 -11306 11319 0
-11299 -11305 11318 0
c ((SATLiteral(8184) + SATLiteral(11325) - aux1255)<=0)
-11325 -11326 0
-8184 -11326 0
-8184 -11325 -11327 0
c (0<=(SATLiteral(8184) + SATLiteral(11325) - aux1255))
11325 11327 0
8184 11327 0
8184 11325 11326 0
c ((SATLiteral(8182) + SATLiteral(8188) - aux1256)<=0)
-8188 -11329 0
-8182 -11329 0
-8182 -8188 -11330 0
c (0<=(SATLiteral(8182) + SATLiteral(8188) - aux1256))
8188 11330 0
8182 11330 0
8182 8188 11329 0
c ((SATLiteral(8185) + SATLiteral(8187) - aux1257)<=0)
-8187 -11332 0
-8185 -11332 0
-8185 -8187 -11333 0
c (0<=(SATLiteral(8185) + SATLiteral(8187) - aux1257))
8187 11333 0
8185 11333 0
8185 8187 11332 0
c ((SATLiteral(8183) + SATLiteral(8186) - aux1258)<=0)
-8186 -11335 0
-8183 -11335 0
-8183 -8186 -11336 0
c (0<=(SATLiteral(8183) + SATLiteral(8186) - aux1258))
8186 11336 0
8183 11336 0
8183 8186 11335 0
c ((aux1256 + aux1258 - aux1259)<=0)
11335 -11338 0
11336 -11339 0
11329 -11338 0
11329 11335 -11339 0
11329 11336 -11341 0
11330 -11339 0
11330 11335 -11341 0
11330 11336 -11343 0
c (0<=(aux1256 + aux1258 - aux1259))
-11336 11343 0
-11335 11341 0
-11330 11343 0
-11330 -11336 11341 0
-11330 -11335 11339 0
-11329 11341 0
-11329 -11336 11339 0
-11329 -11335 11338 0
c ((aux1255 + aux1257 - aux1260)<=0)
11332 -11345 0
11333 -11346 0
11326 -11345 0
11326 11332 -11346 0
11326 11333 -11348 0
11327 -11346 0
11327 11332 -11348 0
11327 11333 -11350 0
c (0<=(aux1255 + aux1257 - aux1260))
-11333 11350 0
-11332 11348 0
-11327 11350 0
-11327 -11333 11348 0
-11327 -11332 11346 0
-11326 11348 0
-11326 -11333 11346 0
-11326 -11332 11345 0
c ((SATLiteral(8192) + SATLiteral(11352) - aux1262)<=0)
-11352 -11353 0
-8192 -11353 0
-8192 -11352 -11354 0
c (0<=(SATLiteral(8192) + SATLiteral(11352) - aux1262))
11352 11354 0
8192 11354 0
8192 11352 11353 0
c ((SATLiteral(8190) + SATLiteral(8196) - aux1263)<=0)
-8196 -11356 0
-8190 -11356 0
-8190 -8196 -11357 0
c (0<=(SATLiteral(8190) + SATLiteral(8196) - aux1263))
8196 11357 0
8190 11357 0
8190 8196 11356 0
c ((SATLiteral(8193) + SATLiteral(8195) - aux1264)<=0)
-8195 -11359 0
-8193 -11359 0
-8193 -8195 -11360 0
c (0<=(SATLiteral(8193) + SATLiteral(8195) - aux1264))
8195 11360 0
8193 11360 0
8193 8195 11359 0
c ((SATLiteral(8191) + SATLiteral(8194) - aux1265)<=0)
-8194 -11362 0
-8191 -11362 0
-8191 -8194 -11363 0
c (0<=(SATLiteral(8191) + SATLiteral(8194) - aux1265))
8194 11363 0
8191 11363 0
8191 8194 11362 0
c ((aux1263 + aux1265 - aux1266)<=0)
11362 -11365 0
11363 -11366 0
11356 -11365 0
11356 11362 -11366 0
11356 11363 -11368 0
11357 -11366 0
11357 11362 -11368 0
11357 11363 -11370 0
c (0<=(aux1263 + aux1265 - aux1266))
-11363 11370 0
-11362 11368 0
-11357 11370 0
-11357 -11363 11368 0
-11357 -11362 11366 0
-11356 11368 0
-11356 -11363 11366 0
-11356 -11362 11365 0
c ((aux1262 + aux1264 - aux1267)<=0)
11359 -11372 0
11360 -11373 0
11353 -11372 0
11353 11359 -11373 0
11353 11360 -11375 0
11354 -11373 0
11354 11359 -11375 0
11354 11360 -11377 0
c (0<=(aux1262 + aux1264 - aux1267))
-11360 11377 0
-11359 11375 0
-11354 11377 0
-11354 -11360 11375 0
-11354 -11359 11373 0
-11353 11375 0
-11353 -11360 11373 0
-11353 -11359 11372 0
c ((SATLiteral(8200) + SATLiteral(11379) - aux1269)<=0)
-11379 -11380 0
-8200 -11380 0
-8200 -11379 -11381 0
c (0<=(SATLiteral(8200) + SATLiteral(11379) - aux1269))
11379 11381 0
8200 11381 0
8200 11379 11380 0
c ((SATLiteral(8198) + SATLiteral(8204) - aux1270)<=0)
-8204 -11383 0
-8198 -11383 0
-8198 -8204 -11384 0
c (0<=(SATLiteral(8198) + SATLiteral(8204) - aux1270))
8204 11384 0
8198 11384 0
8198 8204 11383 0
c ((SATLiteral(8201) + SATLiteral(8203) - aux1271)<=0)
-8203 -11386 0
-8201 -11386 0
-8201 -8203 -11387 0
c (0<=(SATLiteral(8201) + SATLiteral(8203) - aux1271))
8203 11387 0
8201 11387 0
8201 8203 11386 0
c ((SATLiteral(8199) + SATLiteral(8202) - aux1272)<=0)
-8202 -11389 0
-8199 -11389 0
-8199 -8202 -11390 0
c (0<=(SATLiteral(8199) + SATLiteral(8202) - aux1272))
8202 11390 0
8199 11390 0
8199 8202 11389 0
c ((aux1270 + aux1272 - aux1273)<=0)
11389 -11392 0
11390 -11393 0
11383 -11392 0
11383 11389 -11393 0
11383 11390 -11395 0
11384 -11393 0
11384 11389 -11395 0
11384 11390 -11397 0
c (0<=(aux1270 + aux1272 - aux1273))
-11390 11397 0
-11389 11395 0
-11384 11397 0
-11384 -11390 11395 0
-11384 -11389 11393 0
-11383 11395 0
-11383 -11390 11393 0
-11383 -11389 11392 0
c ((aux1269 + aux1271 - aux1274)<=0)
11386 -11399 0
11387 -11400 0
11380 -11399 0
11380 11386 -11400 0
11380 11387 -11402 0
11381 -11400 0
11381 11386 -11402 0
11381 11387 -11404 0
c (0<=(aux1269 + aux1271 - aux1274))
-11387 11404 0
-11386 11402 0
-11381 11404 0
-11381 -11387 11402 0
-11381 -11386 11400 0
-11380 11402 0
-11380 -11387 11400 0
-11380 -11386 11399 0
c ((SATLiteral(8212) + SATLiteral(11406) - aux1276)<=0)
-11406 -11407 0
-8212 -11407 0
-8212 -11406 -11408 0
c (0<=(SATLiteral(8212) + SATLiteral(11406) - aux1276))
11406 11408 0
8212 11408 0
8212 11406 11407 0
c ((SATLiteral(8205) + SATLiteral(8211) - aux1277)<=0)
-8211 -11410 0
-8205 -11410 0
-8205 -8211 -11411 0
c (0<=(SATLiteral(8205) + SATLiteral(8211) - aux1277))
8211 11411 0
8205 11411 0
8205 8211 11410 0
c ((SATLiteral(8207) + SATLiteral(8210) - aux1278)<=0)
-8210 -11413 0
-8207 -11413 0
-8207 -8210 -11414 0
c (0<=(SATLiteral(8207) + SATLiteral(8210) - aux1278))
8210 11414 0
8207 11414 0
8207 8210 11413 0
c ((SATLiteral(8206) + SATLiteral(8209) - aux1279)<=0)
-8209 -11416 0
-8206 -11416 0
-8206 -8209 -11417 0
c (0<=(SATLiteral(8206) + SATLiteral(8209) - aux1279))
8209 11417 0
8206 11417 0
8206 8209 11416 0
c ((aux1277 + aux1279 - aux1280)<=0)
11416 -11419 0
11417 -11420 0
11410 -11419 0
11410 11416 -11420 0
11410 11417 -11422 0
11411 -11420 0
11411 11416 -11422 0
11411 11417 -11424 0
c (0<=(aux1277 + aux1279 - aux1280))
-11417 11424 0
-11416 11422 0
-11411 11424 0
-11411 -11417 11422 0
-11411 -11416 11420 0
-11410 11422 0
-11410 -11417 11420 0
-11410 -11416 11419 0
c ((aux1276 + aux1278 - aux1281)<=0)
11413 -11426 0
11414 -11427 0
11407 -11426 0
11407 11413 -11427 0
11407 11414 -11429 0
11408 -11427 0
11408 11413 -11429 0
11408 11414 -11431 0
c (0<=(aux1276 + aux1278 - aux1281))
-11414 11431 0
-11413 11429 0
-11408 11431 0
-11408 -11414 11429 0
-11408 -11413 11427 0
-11407 11429 0
-11407 -11414 11427 0
-11407 -11413 11426 0
c ((SATLiteral(8220) + SATLiteral(11433) - aux1283)<=0)
-11433 -11434 0
-8220 -11434 0
-8220 -11433 -11435 0
c (0<=(SATLiteral(8220) + SATLiteral(11433) - aux1283))
11433 11435 0
8220 11435 0
8220 11433 11434 0
c ((SATLiteral(8213) + SATLiteral(8219) - aux1284)<=0)
-8219 -11437 0
-8213 -11437 0
-8213 -8219 -11438 0
c (0<=(SATLiteral(8213) + SATLiteral(8219) - aux1284))
8219 11438 0
8213 11438 0
8213 8219 11437 0
c ((SATLiteral(8215) + SATLiteral(8218) - aux1285)<=0)
-8218 -11440 0
-8215 -11440 0
-8215 -8218 -11441 0
c (0<=(SATLiteral(8215) + SATLiteral(8218) - aux1285))
8218 11441 0
8215 11441 0
8215 8218 11440 0
c ((SATLiteral(8214) + SATLiteral(8217) - aux1286)<=0)
-8217 -11443 0
-8214 -11443 0
-8214 -8217 -11444 0
c (0<=(SATLiteral(8214) + SATLiteral(8217) - aux1286))
8217 11444 0
8214 11444 0
8214 8217 11443 0
c ((aux1284 + aux1286 - aux1287)<=0)
11443 -11446 0
11444 -11447 0
11437 -11446 0
11437 11443 -11447 0
11437 11444 -11449 0
11438 -11447 0
11438 11443 -11449 0
11438 11444 -11451 0
c (0<=(aux1284 + aux1286 - aux1287))
-11444 11451 0
-11443 11449 0
-11438 11451 0
-11438 -11444 11449 0
-11438 -11443 11447 0
-11437 11449 0
-11437 -11444 11447 0
-11437 -11443 11446 0
c ((aux1283 + aux1285 - aux1288)<=0)
11440 -11453 0
11441 -11454 0
11434 -11453 0
11434 11440 -11454 0
11434 11441 -11456 0
11435 -11454 0
11435 11440 -11456 0
11435 11441 -11458 0
c (0<=(aux1283 + aux1285 - aux1288))
-11441 11458 0
-11440 11456 0
-11435 11458 0
-11435 -11441 11456 0
-11435 -11440 11454 0
-11434 11456 0
-11434 -11441 11454 0
-11434 -11440 11453 0
c ((SATLiteral(8228) + SATLiteral(11460) - aux1290)<=0)
-11460 -11461 0
-8228 -11461 0
-8228 -11460 -11462 0
c (0<=(SATLiteral(8228) + SATLiteral(11460) - aux1290))
11460 11462 0
8228 11462 0
8228 11460 11461 0
c ((SATLiteral(8221) + SATLiteral(8227) - aux1291)<=0)
-8227 -11464 0
-8221 -11464 0
-8221 -8227 -11465 0
c (0<=(SATLiteral(8221) + SATLiteral(8227) - aux1291))
8227 11465 0
8221 11465 0
8221 8227 11464 0
c ((SATLiteral(8223) + SATLiteral(8226) - aux1292)<=0)
-8226 -11467 0
-8223 -11467 0
-8223 -8226 -11468 0
c (0<=(SATLiteral(8223) + SATLiteral(8226) - aux1292))
8226 11468 0
8223 11468 0
8223 8226 11467 0
c ((SATLiteral(8222) + SATLiteral(8225) - aux1293)<=0)
-8225 -11470 0
-8222 -11470 0
-8222 -8225 -11471 0
c (0<=(SATLiteral(8222) + SATLiteral(8225) - aux1293))
8225 11471 0
8222 11471 0
8222 8225 11470 0
c ((aux1291 + aux1293 - aux1294)<=0)
11470 -11473 0
11471 -11474 0
11464 -11473 0
11464 11470 -11474 0
11464 11471 -11476 0
11465 -11474 0
11465 11470 -11476 0
11465 11471 -11478 0
c (0<=(aux1291 + aux1293 - aux1294))
-11471 11478 0
-11470 11476 0
-11465 11478 0
-11465 -11471 11476 0
-11465 -11470 11474 0
-11464 11476 0
-11464 -11471 11474 0
-11464 -11470 11473 0
c ((aux1290 + aux1292 - aux1295)<=0)
11467 -11480 0
11468 -11481 0
11461 -11480 0
11461 11467 -11481 0
11461 11468 -11483 0
11462 -11481 0
11462 11467 -11483 0
11462 11468 -11485 0
c (0<=(aux1290 + aux1292 - aux1295))
-11468 11485 0
-11467 11483 0
-11462 11485 0
-11462 -11468 11483 0
-11462 -11467 11481 0
-11461 11483 0
-11461 -11468 11481 0
-11461 -11467 11480 0
c ((SATLiteral(8236) + SATLiteral(11487) - aux1297)<=0)
-11487 -11488 0
-8236 -11488 0
-8236 -11487 -11489 0
c (0<=(SATLiteral(8236) + SATLiteral(11487) - aux1297))
11487 11489 0
8236 11489 0
8236 11487 11488 0
c ((SATLiteral(8229) + SATLiteral(8235) - aux1298)<=0)
-8235 -11491 0
-8229 -11491 0
-8229 -8235 -11492 0
c (0<=(SATLiteral(8229) + SATLiteral(8235) - aux1298))
8235 11492 0
8229 11492 0
8229 8235 11491 0
c ((SATLiteral(8231) + SATLiteral(8234) - aux1299)<=0)
-8234 -11494 0
-8231 -11494 0
-8231 -8234 -11495 0
c (0<=(SATLiteral(8231) + SATLiteral(8234) - aux1299))
8234 11495 0
8231 11495 0
8231 8234 11494 0
c ((SATLiteral(8230) + SATLiteral(8233) - aux1300)<=0)
-8233 -11497 0
-8230 -11497 0
-8230 -8233 -11498 0
c (0<=(SATLiteral(8230) + SATLiteral(8233) - aux1300))
8233 11498 0
8230 11498 0
8230 8233 11497 0
c ((aux1298 + aux1300 - aux1301)<=0)
11497 -11500 0
11498 -11501 0
11491 -11500 0
11491 11497 -11501 0
11491 11498 -11503 0
11492 -11501 0
11492 11497 -11503 0
11492 11498 -11505 0
c (0<=(aux1298 + aux1300 - aux1301))
-11498 11505 0
-11497 11503 0
-11492 11505 0
-11492 -11498 11503 0
-11492 -11497 11501 0
-11491 11503 0
-11491 -11498 11501 0
-11491 -11497 11500 0
c ((aux1297 + aux1299 - aux1302)<=0)
11494 -11507 0
11495 -11508 0
11488 -11507 0
11488 11494 -11508 0
11488 11495 -11510 0
11489 -11508 0
11489 11494 -11510 0
11489 11495 -11512 0
c (0<=(aux1297 + aux1299 - aux1302))
-11495 11512 0
-11494 11510 0
-11489 11512 0
-11489 -11495 11510 0
-11489 -11494 11508 0
-11488 11510 0
-11488 -11495 11508 0
-11488 -11494 11507 0
c ((SATLiteral(8244) + SATLiteral(11514) - aux1304)<=0)
-11514 -11515 0
-8244 -11515 0
-8244 -11514 -11516 0
c (0<=(SATLiteral(8244) + SATLiteral(11514) - aux1304))
11514 11516 0
8244 11516 0
8244 11514 11515 0
c ((SATLiteral(8237) + SATLiteral(8243) - aux1305)<=0)
-8243 -11518 0
-8237 -11518 0
-8237 -8243 -11519 0
c (0<=(SATLiteral(8237) + SATLiteral(8243) - aux1305))
8243 11519 0
8237 11519 0
8237 8243 11518 0
c ((SATLiteral(8239) + SATLiteral(8242) - aux1306)<=0)
-8242 -11521 0
-8239 -11521 0
-8239 -8242 -11522 0
c (0<=(SATLiteral(8239) + SATLiteral(8242) - aux1306))
8242 11522 0
8239 11522 0
8239 8242 11521 0
c ((SATLiteral(8238) + SATLiteral(8241) - aux1307)<=0)
-8241 -11524 0
-8238 -11524 0
-8238 -8241 -11525 0
c (0<=(SATLiteral(8238) + SATLiteral(8241) - aux1307))
8241 11525 0
8238 11525 0
8238 8241 11524 0
c ((aux1305 + aux1307 - aux1308)<=0)
11524 -11527 0
11525 -11528 0
11518 -11527 0
11518 11524 -11528 0
11518 11525 -11530 0
11519 -11528 0
11519 11524 -11530 0
11519 11525 -11532 0
c (0<=(aux1305 + aux1307 - aux1308))
-11525 11532 0
-11524 11530 0
-11519 11532 0
-11519 -11525 11530 0
-11519 -11524 11528 0
-11518 11530 0
-11518 -11525 11528 0
-11518 -11524 11527 0
c ((aux1304 + aux1306 - aux1309)<=0)
11521 -11534 0
11522 -11535 0
11515 -11534 0
11515 11521 -11535 0
11515 11522 -11537 0
11516 -11535 0
11516 11521 -11537 0
11516 11522 -11539 0
c (0<=(aux1304 + aux1306 - aux1309))
-11522 11539 0
-11521 11537 0
-11516 11539 0
-11516 -11522 11537 0
-11516 -11521 11535 0
-11515 11537 0
-11515 -11522 11535 0
-11515 -11521 11534 0
c ((SATLiteral(8252) + SATLiteral(11541) - aux1311)<=0)
-11541 -11542 0
-8252 -11542 0
-8252 -11541 -11543 0
c (0<=(SATLiteral(8252) + SATLiteral(11541) - aux1311))
11541 11543 0
8252 11543 0
8252 11541 11542 0
c ((SATLiteral(8245) + SATLiteral(8251) - aux1312)<=0)
-8251 -11545 0
-8245 -11545 0
-8245 -8251 -11546 0
c (0<=(SATLiteral(8245) + SATLiteral(8251) - aux1312))
8251 11546 0
8245 11546 0
8245 8251 11545 0
c ((SATLiteral(8247) + SATLiteral(8250) - aux1313)<=0)
-8250 -11548 0
-8247 -11548 0
-8247 -8250 -11549 0
c (0<=(SATLiteral(8247) + SATLiteral(8250) - aux1313))
8250 11549 0
8247 11549 0
8247 8250 11548 0
c ((SATLiteral(8246) + SATLiteral(8249) - aux1314)<=0)
-8249 -11551 0
-8246 -11551 0
-8246 -8249 -11552 0
c (0<=(SATLiteral(8246) + SATLiteral(8249) - aux1314))
8249 11552 0
8246 11552 0
8246 8249 11551 0
c ((aux1312 + aux1314 - aux1315)<=0)
11551 -11554 0
11552 -11555 0
11545 -11554 0
11545 11551 -11555 0
11545 11552 -11557 0
11546 -11555 0
11546 11551 -11557 0
11546 11552 -11559 0
c (0<=(aux1312 + aux1314 - aux1315))
-11552 11559 0
-11551 11557 0
-11546 11559 0
-11546 -11552 11557 0
-11546 -11551 11555 0
-11545 11557 0
-11545 -11552 11555 0
-11545 -11551 11554 0
c ((aux1311 + aux1313 - aux1316)<=0)
11548 -11561 0
11549 -11562 0
11542 -11561 0
11542 11548 -11562 0
11542 11549 -11564 0
11543 -11562 0
11543 11548 -11564 0
11543 11549 -11566 0
c (0<=(aux1311 + aux1313 - aux1316))
-11549 11566 0
-11548 11564 0
-11543 11566 0
-11543 -11549 11564 0
-11543 -11548 11562 0
-11542 11564 0
-11542 -11549 11562 0
-11542 -11548 11561 0
c ((SATLiteral(8260) + SATLiteral(11568) - aux1318)<=0)
-11568 -11569 0
-8260 -11569 0
-8260 -11568 -11570 0
c (0<=(SATLiteral(8260) + SATLiteral(11568) - aux1318))
11568 11570 0
8260 11570 0
8260 11568 11569 0
c ((SATLiteral(8253) + SATLiteral(8259) - aux1319)<=0)
-8259 -11572 0
-8253 -11572 0
-8253 -8259 -11573 0
c (0<=(SATLiteral(8253) + SATLiteral(8259) - aux1319))
8259 11573 0
8253 11573 0
8253 8259 11572 0
c ((SATLiteral(8255) + SATLiteral(8258) - aux1320)<=0)
-8258 -11575 0
-8255 -11575 0
-8255 -8258 -11576 0
c (0<=(SATLiteral(8255) + SATLiteral(8258) - aux1320))
8258 11576 0
8255 11576 0
8255 8258 11575 0
c ((SATLiteral(8254) + SATLiteral(8257) - aux1321)<=0)
-8257 -11578 0
-8254 -11578 0
-8254 -8257 -11579 0
c (0<=(SATLiteral(8254) + SATLiteral(8257) - aux1321))
8257 11579 0
8254 11579 0
8254 8257 11578 0
c ((aux1319 + aux1321 - aux1322)<=0)
11578 -11581 0
11579 -11582 0
11572 -11581 0
11572 11578 -11582 0
11572 11579 -11584 0
11573 -11582 0
11573 11578 -11584 0
11573 11579 -11586 0
c (0<=(aux1319 + aux1321 - aux1322))
-11579 11586 0
-11578 11584 0
-11573 11586 0
-11573 -11579 11584 0
-11573 -11578 11582 0
-11572 11584 0
-11572 -11579 11582 0
-11572 -11578 11581 0
c ((aux1318 + aux1320 - aux1323)<=0)
11575 -11588 0
11576 -11589 0
11569 -11588 0
11569 11575 -11589 0
11569 11576 -11591 0
11570 -11589 0
11570 11575 -11591 0
11570 11576 -11593 0
c (0<=(aux1318 + aux1320 - aux1323))
-11576 11593 0
-11575 11591 0
-11570 11593 0
-11570 -11576 11591 0
-11570 -11575 11589 0
-11569 11591 0
-11569 -11576 11589 0
-11569 -11575 11588 0
c ((SATLiteral(8268) + SATLiteral(11595) - aux1325)<=0)
-11595 -11596 0
-8268 -11596 0
-8268 -11595 -11597 0
c (0<=(SATLiteral(8268) + SATLiteral(11595) - aux1325))
11595 11597 0
8268 11597 0
8268 11595 11596 0
c ((SATLiteral(8261) + SATLiteral(8267) - aux1326)<=0)
-8267 -11599 0
-8261 -11599 0
-8261 -8267 -11600 0
c (0<=(SATLiteral(8261) + SATLiteral(8267) - aux1326))
8267 11600 0
8261 11600 0
8261 8267 11599 0
c ((SATLiteral(8263) + SATLiteral(8266) - aux1327)<=0)
-8266 -11602 0
-8263 -11602 0
-8263 -8266 -11603 0
c (0<=(SATLiteral(8263) + SATLiteral(8266) - aux1327))
8266 11603 0
8263 11603 0
8263 8266 11602 0
c ((SATLiteral(8262) + SATLiteral(8265) - aux1328)<=0)
-8265 -11605 0
-8262 -11605 0
-8262 -8265 -11606 0
c (0<=(SATLiteral(8262) + SATLiteral(8265) - aux1328))
8265 11606 0
8262 11606 0
8262 8265 11605 0
c ((aux1326 + aux1328 - aux1329)<=0)
11605 -11608 0
11606 -11609 0
11599 -11608 0
11599 11605 -11609 0
11599 11606 -11611 0
11600 -11609 0
11600 11605 -11611 0
11600 11606 -11613 0
c (0<=(aux1326 + aux1328 - aux1329))
-11606 11613 0
-11605 11611 0
-11600 11613 0
-11600 -11606 11611 0
-11600 -11605 11609 0
-11599 11611 0
-11599 -11606 11609 0
-11599 -11605 11608 0
c ((aux1325 + aux1327 - aux1330)<=0)
11602 -11615 0
11603 -11616 0
11596 -11615 0
11596 11602 -11616 0
11596 11603 -11618 0
11597 -11616 0
11597 11602 -11618 0
11597 11603 -11620 0
c (0<=(aux1325 + aux1327 - aux1330))
-11603 11620 0
-11602 11618 0
-11597 11620 0
-11597 -11603 11618 0
-11597 -11602 11616 0
-11596 11618 0
-11596 -11603 11616 0
-11596 -11602 11615 0
c ((SATLiteral(8276) + SATLiteral(11622) - aux1332)<=0)
-11622 -11623 0
-8276 -11623 0
-8276 -11622 -11624 0
c (0<=(SATLiteral(8276) + SATLiteral(11622) - aux1332))
11622 11624 0
8276 11624 0
8276 11622 11623 0
c ((SATLiteral(8269) + SATLiteral(8275) - aux1333)<=0)
-8275 -11626 0
-8269 -11626 0
-8269 -8275 -11627 0
c (0<=(SATLiteral(8269) + SATLiteral(8275) - aux1333))
8275 11627 0
8269 11627 0
8269 8275 11626 0
c ((SATLiteral(8271) + SATLiteral(8274) - aux1334)<=0)
-8274 -11629 0
-8271 -11629 0
-8271 -8274 -11630 0
c (0<=(SATLiteral(8271) + SATLiteral(8274) - aux1334))
8274 11630 0
8271 11630 0
8271 8274 11629 0
c ((SATLiteral(8270) + SATLiteral(8273) - aux1335)<=0)
-8273 -11632 0
-8270 -11632 0
-8270 -8273 -11633 0
c (0<=(SATLiteral(8270) + SATLiteral(8273) - aux1335))
8273 11633 0
8270 11633 0
8270 8273 11632 0
c ((aux1333 + aux1335 - aux1336)<=0)
11632 -11635 0
11633 -11636 0
11626 -11635 0
11626 11632 -11636 0
11626 11633 -11638 0
11627 -11636 0
11627 11632 -11638 0
11627 11633 -11640 0
c (0<=(aux1333 + aux1335 - aux1336))
-11633 11640 0
-11632 11638 0
-11627 11640 0
-11627 -11633 11638 0
-11627 -11632 11636 0
-11626 11638 0
-11626 -11633 11636 0
-11626 -11632 11635 0
c ((aux1332 + aux1334 - aux1337)<=0)
11629 -11642 0
11630 -11643 0
11623 -11642 0
11623 11629 -11643 0
11623 11630 -11645 0
11624 -11643 0
11624 11629 -11645 0
11624 11630 -11647 0
c (0<=(aux1332 + aux1334 - aux1337))
-11630 11647 0
-11629 11645 0
-11624 11647 0
-11624 -11630 11645 0
-11624 -11629 11643 0
-11623 11645 0
-11623 -11630 11643 0
-11623 -11629 11642 0
c ((SATLiteral(8277) + SATLiteral(11649) - aux1339)<=0)
-11649 -11650 0
-8277 -11650 0
-8277 -11649 -11651 0
c (0<=(SATLiteral(8277) + SATLiteral(11649) - aux1339))
11649 11651 0
8277 11651 0
8277 11649 11650 0
c ((SATLiteral(8280) + SATLiteral(8284) - aux1340)<=0)
-8284 -11653 0
-8280 -11653 0
-8280 -8284 -11654 0
c (0<=(SATLiteral(8280) + SATLiteral(8284) - aux1340))
8284 11654 0
8280 11654 0
8280 8284 11653 0
c ((SATLiteral(8278) + SATLiteral(8283) - aux1341)<=0)
-8283 -11656 0
-8278 -11656 0
-8278 -8283 -11657 0
c (0<=(SATLiteral(8278) + SATLiteral(8283) - aux1341))
8283 11657 0
8278 11657 0
8278 8283 11656 0
c ((SATLiteral(8279) + SATLiteral(8282) - aux1342)<=0)
-8282 -11659 0
-8279 -11659 0
-8279 -8282 -11660 0
c (0<=(SATLiteral(8279) + SATLiteral(8282) - aux1342))
8282 11660 0
8279 11660 0
8279 8282 11659 0
c ((aux1340 + aux1342 - aux1343)<=0)
11659 -11662 0
11660 -11663 0
11653 -11662 0
11653 11659 -11663 0
11653 11660 -11665 0
11654 -11663 0
11654 11659 -11665 0
11654 11660 -11667 0
c (0<=(aux1340 + aux1342 - aux1343))
-11660 11667 0
-11659 11665 0
-11654 11667 0
-11654 -11660 11665 0
-11654 -11659 11663 0
-11653 11665 0
-11653 -11660 11663 0
-11653 -11659 11662 0
c ((aux1339 + aux1341 - aux1344)<=0)
11656 -11669 0
11657 -11670 0
11650 -11669 0
11650 11656 -11670 0
11650 11657 -11672 0
11651 -11670 0
11651 11656 -11672 0
11651 11657 -11674 0
c (0<=(aux1339 + aux1341 - aux1344))
-11657 11674 0
-11656 11672 0
-11651 11674 0
-11651 -11657 11672 0
-11651 -11656 11670 0
-11650 11672 0
-11650 -11657 11670 0
-11650 -11656 11669 0
c ((SATLiteral(8285) + SATLiteral(11676) - aux1346)<=0)
-11676 -11677 0
-8285 -11677 0
-8285 -11676 -11678 0
c (0<=(SATLiteral(8285) + SATLiteral(11676) - aux1346))
11676 11678 0
8285 11678 0
8285 11676 11677 0
c ((SATLiteral(8288) + SATLiteral(8292) - aux1347)<=0)
-8292 -11680 0
-8288 -11680 0
-8288 -8292 -11681 0
c (0<=(SATLiteral(8288) + SATLiteral(8292) - aux1347))
8292 11681 0
8288 11681 0
8288 8292 11680 0
c ((SATLiteral(8286) + SATLiteral(8291) - aux1348)<=0)
-8291 -11683 0
-8286 -11683 0
-8286 -8291 -11684 0
c (0<=(SATLiteral(8286) + SATLiteral(8291) - aux1348))
8291 11684 0
8286 11684 0
8286 8291 11683 0
c ((SATLiteral(8287) + SATLiteral(8290) - aux1349)<=0)
-8290 -11686 0
-8287 -11686 0
-8287 -8290 -11687 0
c (0<=(SATLiteral(8287) + SATLiteral(8290) - aux1349))
8290 11687 0
8287 11687 0
8287 8290 11686 0
c ((aux1347 + aux1349 - aux1350)<=0)
11686 -11689 0
11687 -11690 0
11680 -11689 0
11680 11686 -11690 0
11680 11687 -11692 0
11681 -11690 0
11681 11686 -11692 0
11681 11687 -11694 0
c (0<=(aux1347 + aux1349 - aux1350))
-11687 11694 0
-11686 11692 0
-11681 11694 0
-11681 -11687 11692 0
-11681 -11686 11690 0
-11680 11692 0
-11680 -11687 11690 0
-11680 -11686 11689 0
c ((aux1346 + aux1348 - aux1351)<=0)
11683 -11696 0
11684 -11697 0
11677 -11696 0
11677 11683 -11697 0
11677 11684 -11699 0
11678 -11697 0
11678 11683 -11699 0
11678 11684 -11701 0
c (0<=(aux1346 + aux1348 - aux1351))
-11684 11701 0
-11683 11699 0
-11678 11701 0
-11678 -11684 11699 0
-11678 -11683 11697 0
-11677 11699 0
-11677 -11684 11697 0
-11677 -11683 11696 0
c ((SATLiteral(8293) + SATLiteral(11703) - aux1353)<=0)
-11703 -11704 0
-8293 -11704 0
-8293 -11703 -11705 0
c (0<=(SATLiteral(8293) + SATLiteral(11703) - aux1353))
11703 11705 0
8293 11705 0
8293 11703 11704 0
c ((SATLiteral(8296) + SATLiteral(8300) - aux1354)<=0)
-8300 -11707 0
-8296 -11707 0
-8296 -8300 -11708 0
c (0<=(SATLiteral(8296) + SATLiteral(8300) - aux1354))
8300 11708 0
8296 11708 0
8296 8300 11707 0
c ((SATLiteral(8294) + SATLiteral(8299) - aux1355)<=0)
-8299 -11710 0
-8294 -11710 0
-8294 -8299 -11711 0
c (0<=(SATLiteral(8294) + SATLiteral(8299) - aux1355))
8299 11711 0
8294 11711 0
8294 8299 11710 0
c ((SATLiteral(8295) + SATLiteral(8298) - aux1356)<=0)
-8298 -11713 0
-8295 -11713 0
-8295 -8298 -11714 0
c (0<=(SATLiteral(8295) + SATLiteral(8298) - aux1356))
8298 11714 0
8295 11714 0
8295 8298 11713 0
c ((aux1354 + aux1356 - aux1357)<=0)
11713 -11716 0
11714 -11717 0
11707 -11716 0
11707 11713 -11717 0
11707 11714 -11719 0
11708 -11717 0
11708 11713 -11719 0
11708 11714 -11721 0
c (0<=(aux1354 + aux1356 - aux1357))
-11714 11721 0
-11713 11719 0
-11708 11721 0
-11708 -11714 11719 0
-11708 -11713 11717 0
-11707 11719 0
-11707 -11714 11717 0
-11707 -11713 11716 0
c ((aux1353 + aux1355 - aux1358)<=0)
11710 -11723 0
11711 -11724 0
11704 -11723 0
11704 11710 -11724 0
11704 11711 -11726 0
11705 -11724 0
11705 11710 -11726 0
11705 11711 -11728 0
c (0<=(aux1353 + aux1355 - aux1358))
-11711 11728 0
-11710 11726 0
-11705 11728 0
-11705 -11711 11726 0
-11705 -11710 11724 0
-11704 11726 0
-11704 -11711 11724 0
-11704 -11710 11723 0
c ((SATLiteral(8301) + SATLiteral(11730) - aux1360)<=0)
-11730 -11731 0
-8301 -11731 0
-8301 -11730 -11732 0
c (0<=(SATLiteral(8301) + SATLiteral(11730) - aux1360))
11730 11732 0
8301 11732 0
8301 11730 11731 0
c ((SATLiteral(8304) + SATLiteral(8308) - aux1361)<=0)
-8308 -11734 0
-8304 -11734 0
-8304 -8308 -11735 0
c (0<=(SATLiteral(8304) + SATLiteral(8308) - aux1361))
8308 11735 0
8304 11735 0
8304 8308 11734 0
c ((SATLiteral(8302) + SATLiteral(8307) - aux1362)<=0)
-8307 -11737 0
-8302 -11737 0
-8302 -8307 -11738 0
c (0<=(SATLiteral(8302) + SATLiteral(8307) - aux1362))
8307 11738 0
8302 11738 0
8302 8307 11737 0
c ((SATLiteral(8303) + SATLiteral(8306) - aux1363)<=0)
-8306 -11740 0
-8303 -11740 0
-8303 -8306 -11741 0
c (0<=(SATLiteral(8303) + SATLiteral(8306) - aux1363))
8306 11741 0
8303 11741 0
8303 8306 11740 0
c ((aux1361 + aux1363 - aux1364)<=0)
11740 -11743 0
11741 -11744 0
11734 -11743 0
11734 11740 -11744 0
11734 11741 -11746 0
11735 -11744 0
11735 11740 -11746 0
11735 11741 -11748 0
c (0<=(aux1361 + aux1363 - aux1364))
-11741 11748 0
-11740 11746 0
-11735 11748 0
-11735 -11741 11746 0
-11735 -11740 11744 0
-11734 11746 0
-11734 -11741 11744 0
-11734 -11740 11743 0
c ((aux1360 + aux1362 - aux1365)<=0)
11737 -11750 0
11738 -11751 0
11731 -11750 0
11731 11737 -11751 0
11731 11738 -11753 0
11732 -11751 0
11732 11737 -11753 0
11732 11738 -11755 0
c (0<=(aux1360 + aux1362 - aux1365))
-11738 11755 0
-11737 11753 0
-11732 11755 0
-11732 -11738 11753 0
-11732 -11737 11751 0
-11731 11753 0
-11731 -11738 11751 0
-11731 -11737 11750 0
c ((SATLiteral(8309) + SATLiteral(8310) - aux1367)<=0)
-8310 -11758 0
-8309 -11758 0
-8309 -8310 -11759 0
c (0<=(SATLiteral(8309) + SATLiteral(8310) - aux1367))
8310 11759 0
8309 11759 0
8309 8310 11758 0
c ((SATLiteral(8315) + SATLiteral(11757) - aux1368)<=0)
-11757 -11761 0
-8315 -11761 0
-8315 -11757 -11762 0
c (0<=(SATLiteral(8315) + SATLiteral(11757) - aux1368))
11757 11762 0
8315 11762 0
8315 11757 11761 0
c ((SATLiteral(8313) + SATLiteral(8314) - aux1369)<=0)
-8314 -11764 0
-8313 -11764 0
-8313 -8314 -11765 0
c (0<=(SATLiteral(8313) + SATLiteral(8314) - aux1369))
8314 11765 0
8313 11765 0
8313 8314 11764 0
c ((SATLiteral(8311) + aux1369 - aux1370)<=0)
11764 -11767 0
11765 -11768 0
-8311 -11767 0
-8311 11764 -11768 0
-8311 11765 -11770 0
c (0<=(SATLiteral(8311) + aux1369 - aux1370))
-11765 11770 0
-11764 11768 0
8311 11770 0
8311 -11765 11768 0
8311 -11764 11767 0
c ((aux1367 + aux1368 - aux1371)<=0)
11761 -11772 0
11762 -11773 0
11758 -11772 0
11758 11761 -11773 0
11758 11762 -11775 0
11759 -11773 0
11759 11761 -11775 0
11759 11762 -11777 0
c (0<=(aux1367 + aux1368 - aux1371))
-11762 11777 0
-11761 11775 0
-11759 11777 0
-11759 -11762 11775 0
-11759 -11761 11773 0
-11758 11775 0
-11758 -11762 11773 0
-11758 -11761 11772 0
c ((SATLiteral(8316) + SATLiteral(11779) - aux1373)<=0)
-11779 -11780 0
-8316 -11780 0
-8316 -11779 -11781 0
c (0<=(SATLiteral(8316) + SATLiteral(11779) - aux1373))
11779 11781 0
8316 11781 0
8316 11779 11780 0
c ((SATLiteral(8319) + SATLiteral(8323) - aux1374)<=0)
-8323 -11783 0
-8319 -11783 0
-8319 -8323 -11784 0
c (0<=(SATLiteral(8319) + SATLiteral(8323) - aux1374))
8323 11784 0
8319 11784 0
8319 8323 11783 0
c ((SATLiteral(8317) + SATLiteral(8322) - aux1375)<=0)
-8322 -11786 0
-8317 -11786 0
-8317 -8322 -11787 0
c (0<=(SATLiteral(8317) + SATLiteral(8322) - aux1375))
8322 11787 0
8317 11787 0
8317 8322 11786 0
c ((SATLiteral(8318) + SATLiteral(8321) - aux1376)<=0)
-8321 -11789 0
-8318 -11789 0
-8318 -8321 -11790 0
c (0<=(SATLiteral(8318) + SATLiteral(8321) - aux1376))
8321 11790 0
8318 11790 0
8318 8321 11789 0
c ((aux1374 + aux1376 - aux1377)<=0)
11789 -11792 0
11790 -11793 0
11783 -11792 0
11783 11789 -11793 0
11783 11790 -11795 0
11784 -11793 0
11784 11789 -11795 0
11784 11790 -11797 0
c (0<=(aux1374 + aux1376 - aux1377))
-11790 11797 0
-11789 11795 0
-11784 11797 0
-11784 -11790 11795 0
-11784 -11789 11793 0
-11783 11795 0
-11783 -11790 11793 0
-11783 -11789 11792 0
c ((aux1373 + aux1375 - aux1378)<=0)
11786 -11799 0
11787 -11800 0
11780 -11799 0
11780 11786 -11800 0
11780 11787 -11802 0
11781 -11800 0
11781 11786 -11802 0
11781 11787 -11804 0
c (0<=(aux1373 + aux1375 - aux1378))
-11787 11804 0
-11786 11802 0
-11781 11804 0
-11781 -11787 11802 0
-11781 -11786 11800 0
-11780 11802 0
-11780 -11787 11800 0
-11780 -11786 11799 0
c ((SATLiteral(8324) + SATLiteral(11806) - aux1380)<=0)
-11806 -11807 0
-8324 -11807 0
-8324 -11806 -11808 0
c (0<=(SATLiteral(8324) + SATLiteral(11806) - aux1380))
11806 11808 0
8324 11808 0
8324 11806 11807 0
c ((SATLiteral(8327) + SATLiteral(8331) - aux1381)<=0)
-8331 -11810 0
-8327 -11810 0
-8327 -8331 -11811 0
c (0<=(SATLiteral(8327) + SATLiteral(8331) - aux1381))
8331 11811 0
8327 11811 0
8327 8331 11810 0
c ((SATLiteral(8325) + SATLiteral(8330) - aux1382)<=0)
-8330 -11813 0
-8325 -11813 0
-8325 -8330 -11814 0
c (0<=(SATLiteral(8325) + SATLiteral(8330) - aux1382))
8330 11814 0
8325 11814 0
8325 8330 11813 0
c ((SATLiteral(8326) + SATLiteral(8329) - aux1383)<=0)
-8329 -11816 0
-8326 -11816 0
-8326 -8329 -11817 0
c (0<=(SATLiteral(8326) + SATLiteral(8329) - aux1383))
8329 11817 0
8326 11817 0
8326 8329 11816 0
c ((aux1381 + aux1383 - aux1384)<=0)
11816 -11819 0
11817 -11820 0
11810 -11819 0
11810 11816 -11820 0
11810 11817 -11822 0
11811 -11820 0
11811 11816 -11822 0
11811 11817 -11824 0
c (0<=(aux1381 + aux1383 - aux1384))
-11817 11824 0
-11816 11822 0
-11811 11824 0
-11811 -11817 11822 0
-11811 -11816 11820 0
-11810 11822 0
-11810 -11817 11820 0
-11810 -11816 11819 0
c ((aux1380 + aux1382 - aux1385)<=0)
11813 -11826 0
11814 -11827 0
11807 -11826 0
11807 11813 -11827 0
11807 11814 -11829 0
11808 -11827 0
11808 11813 -11829 0
11808 11814 -11831 0
c (0<=(aux1380 + aux1382 - aux1385))
-11814 11831 0
-11813 11829 0
-11808 11831 0
-11808 -11814 11829 0
-11808 -11813 11827 0
-11807 11829 0
-11807 -11814 11827 0
-11807 -11813 11826 0
c ((SATLiteral(8332) + SATLiteral(11833) - aux1387)<=0)
-11833 -11834 0
-8332 -11834 0
-8332 -11833 -11835 0
c (0<=(SATLiteral(8332) + SATLiteral(11833) - aux1387))
11833 11835 0
8332 11835 0
8332 11833 11834 0
c ((SATLiteral(8335) + SATLiteral(8339) - aux1388)<=0)
-8339 -11837 0
-8335 -11837 0
-8335 -8339 -11838 0
c (0<=(SATLiteral(8335) + SATLiteral(8339) - aux1388))
8339 11838 0
8335 11838 0
8335 8339 11837 0
c ((SATLiteral(8333) + SATLiteral(8338) - aux1389)<=0)
-8338 -11840 0
-8333 -11840 0
-8333 -8338 -11841 0
c (0<=(SATLiteral(8333) + SATLiteral(8338) - aux1389))
8338 11841 0
8333 11841 0
8333 8338 11840 0
c ((SATLiteral(8334) + SATLiteral(8337) - aux1390)<=0)
-8337 -11843 0
-8334 -11843 0
-8334 -8337 -11844 0
c (0<=(SATLiteral(8334) + SATLiteral(8337) - aux1390))
8337 11844 0
8334 11844 0
8334 8337 11843 0
c ((aux1388 + aux1390 - aux1391)<=0)
11843 -11846 0
11844 -11847 0
11837 -11846 0
11837 11843 -11847 0
11837 11844 -11849 0
11838 -11847 0
11838 11843 -11849 0
11838 11844 -11851 0
c (0<=(aux1388 + aux1390 - aux1391))
-11844 11851 0
-11843 11849 0
-11838 11851 0
-11838 -11844 11849 0
-11838 -11843 11847 0
-11837 11849 0
-11837 -11844 11847 0
-11837 -11843 11846 0
c ((aux1387 + aux1389 - aux1392)<=0)
11840 -11853 0
11841 -11854 0
11834 -11853 0
11834 11840 -11854 0
11834 11841 -11856 0
11835 -11854 0
11835 11840 -11856 0
11835 11841 -11858 0
c (0<=(aux1387 + aux1389 - aux1392))
-11841 11858 0
-11840 11856 0
-11835 11858 0
-11835 -11841 11856 0
-11835 -11840 11854 0
-11834 11856 0
-11834 -11841 11854 0
-11834 -11840 11853 0
c ((SATLiteral(8340) + SATLiteral(11860) - aux1394)<=0)
-11860 -11861 0
-8340 -11861 0
-8340 -11860 -11862 0
c (0<=(SATLiteral(8340) + SATLiteral(11860) - aux1394))
11860 11862 0
8340 11862 0
8340 11860 11861 0
c ((SATLiteral(8343) + SATLiteral(8347) - aux1395)<=0)
-8347 -11864 0
-8343 -11864 0
-8343 -8347 -11865 0
c (0<=(SATLiteral(8343) + SATLiteral(8347) - aux1395))
8347 11865 0
8343 11865 0
8343 8347 11864 0
c ((SATLiteral(8341) + SATLiteral(8346) - aux1396)<=0)
-8346 -11867 0
-8341 -11867 0
-8341 -8346 -11868 0
c (0<=(SATLiteral(8341) + SATLiteral(8346) - aux1396))
8346 11868 0
8341 11868 0
8341 8346 11867 0
c ((SATLiteral(8342) + SATLiteral(8345) - aux1397)<=0)
-8345 -11870 0
-8342 -11870 0
-8342 -8345 -11871 0
c (0<=(SATLiteral(8342) + SATLiteral(8345) - aux1397))
8345 11871 0
8342 11871 0
8342 8345 11870 0
c ((aux1395 + aux1397 - aux1398)<=0)
11870 -11873 0
11871 -11874 0
11864 -11873 0
11864 11870 -11874 0
11864 11871 -11876 0
11865 -11874 0
11865 11870 -11876 0
11865 11871 -11878 0
c (0<=(aux1395 + aux1397 - aux1398))
-11871 11878 0
-11870 11876 0
-11865 11878 0
-11865 -11871 11876 0
-11865 -11870 11874 0
-11864 11876 0
-11864 -11871 11874 0
-11864 -11870 11873 0
c ((aux1394 + aux1396 - aux1399)<=0)
11867 -11880 0
11868 -11881 0
11861 -11880 0
11861 11867 -11881 0
11861 11868 -11883 0
11862 -11881 0
11862 11867 -11883 0
11862 11868 -11885 0
c (0<=(aux1394 + aux1396 - aux1399))
-11868 11885 0
-11867 11883 0
-11862 11885 0
-11862 -11868 11883 0
-11862 -11867 11881 0
-11861 11883 0
-11861 -11868 11881 0
-11861 -11867 11880 0
c ((aux1154 + aux1155 - shift(sky_left_00001_00001, -8))<=7)
10940 -3723 0
10941 -3724 0
10943 -3726 0
10945 -3728 0
10933 -3723 0
10933 10940 -3724 0
10933 10941 -3726 0
10933 10943 -3728 0
10933 10945 -3730 0
10934 -3724 0
10934 10940 -3726 0
10934 10941 -3728 0
10934 10943 -3730 0
10934 10945 -3732 0
10936 -3726 0
10936 10940 -3728 0
10936 10941 -3730 0
10936 10943 -3732 0
10936 10945 -3734 0
10938 -3728 0
10938 10940 -3730 0
10938 10941 -3732 0
10938 10943 -3734 0
10938 10945 0
c (7<=(aux1154 + aux1155 - shift(sky_left_00001_00001, -8)))
-10943 3734 0
-10941 3732 0
-10940 3730 0
-10938 -10945 3734 0
-10938 -10943 3732 0
-10938 -10941 3730 0
-10938 -10940 3728 0
-10936 3734 0
-10936 -10945 3732 0
-10936 -10943 3730 0
-10936 -10941 3728 0
-10936 -10940 3726 0
-10934 3732 0
-10934 -10945 3730 0
-10934 -10943 3728 0
-10934 -10941 3726 0
-10934 -10940 3724 0
-10933 3730 0
-10933 -10945 3728 0
-10933 -10943 3726 0
-10933 -10941 3724 0
-10933 -10940 3723 0
c ((aux1161 + aux1162 - shift(sky_left_00001_00002, -8))<=7)
10967 -3736 0
10968 -3737 0
10970 -3739 0
10972 -3741 0
10960 -3736 0
10960 10967 -3737 0
10960 10968 -3739 0
10960 10970 -3741 0
10960 10972 -3743 0
10961 -3737 0
10961 10967 -3739 0
10961 10968 -3741 0
10961 10970 -3743 0
10961 10972 -3745 0
10963 -3739 0
10963 10967 -3741 0
10963 10968 -3743 0
10963 10970 -3745 0
10963 10972 -3747 0
10965 -3741 0
10965 10967 -3743 0
10965 10968 -3745 0
10965 10970 -3747 0
10965 10972 0
c (7<=(aux1161 + aux1162 - shift(sky_left_00001_00002, -8)))
-10970 3747 0
-10968 3745 0
-10967 3743 0
-10965 -10972 3747 0
-10965 -10970 3745 0
-10965 -10968 3743 0
-10965 -10967 3741 0
-10963 3747 0
-10963 -10972 3745 0
-10963 -10970 3743 0
-10963 -10968 3741 0
-10963 -10967 3739 0
-10961 3745 0
-10961 -10972 3743 0
-10961 -10970 3741 0
-10961 -10968 3739 0
-10961 -10967 3737 0
-10960 3743 0
-10960 -10972 3741 0
-10960 -10970 3739 0
-10960 -10968 3737 0
-10960 -10967 3736 0
c ((aux1168 + aux1169 - shift(sky_left_00001_00003, -9))<=8)
10994 -3749 0
10995 -3750 0
10997 -3752 0
10999 -3754 0
10987 -3749 0
10987 10994 -3750 0
10987 10995 -3752 0
10987 10997 -3754 0
10987 10999 -3756 0
10988 -3750 0
10988 10994 -3752 0
10988 10995 -3754 0
10988 10997 -3756 0
10988 10999 -3758 0
10990 -3752 0
10990 10994 -3754 0
10990 10995 -3756 0
10990 10997 -3758 0
10990 10999 -3760 0
10992 -3754 0
10992 10994 -3756 0
10992 10995 -3758 0
10992 10997 -3760 0
10992 10999 -3762 0
c (8<=(aux1168 + aux1169 - shift(sky_left_00001_00003, -9)))
-10999 3762 0
-10997 3760 0
-10995 3758 0
-10994 3756 0
-10992 3762 0
-10992 -10999 3760 0
-10992 -10997 3758 0
-10992 -10995 3756 0
-10992 -10994 3754 0
-10990 3760 0
-10990 -10999 3758 0
-10990 -10997 3756 0
-10990 -10995 3754 0
-10990 -10994 3752 0
-10988 3758 0
-10988 -10999 3756 0
-10988 -10997 3754 0
-10988 -10995 3752 0
-10988 -10994 3750 0
-10987 3756 0
-10987 -10999 3754 0
-10987 -10997 3752 0
-10987 -10995 3750 0
-10987 -10994 3749 0
c ((aux1175 + aux1176 - shift(sky_left_00001_00004, -7))<=6)
11021 -3764 0
11022 -3765 0
11024 -3767 0
11026 -3769 0
11014 -3764 0
11014 11021 -3765 0
11014 11022 -3767 0
11014 11024 -3769 0
11014 11026 -3771 0
11015 -3765 0
11015 11021 -3767 0
11015 11022 -3769 0
11015 11024 -3771 0
11015 11026 -3773 0
11017 -3767 0
11017 11021 -3769 0
11017 11022 -3771 0
11017 11024 -3773 0
11017 11026 0
11019 -3769 0
11019 11021 -3771 0
11019 11022 -3773 0
11019 11024 0
11019 11026 0
c (6<=(aux1175 + aux1176 - shift(sky_left_00001_00004, -7)))
-11022 3773 0
-11021 3771 0
-11019 -11024 3773 0
-11019 -11022 3771 0
-11019 -11021 3769 0
-11017 -11026 3773 0
-11017 -11024 3771 0
-11017 -11022 3769 0
-11017 -11021 3767 0
-11015 3773 0
-11015 -11026 3771 0
-11015 -11024 3769 0
-11015 -11022 3767 0
-11015 -11021 3765 0
-11014 3771 0
-11014 -11026 3769 0
-11014 -11024 3767 0
-11014 -11022 3765 0
-11014 -11021 3764 0
c ((aux1182 + aux1183 - shift(sky_left_00001_00005, -7))<=6)
11048 -3775 0
11049 -3776 0
11051 -3778 0
11053 -3780 0
11041 -3775 0
11041 11048 -3776 0
11041 11049 -3778 0
11041 11051 -3780 0
11041 11053 -3782 0
11042 -3776 0
11042 11048 -3778 0
11042 11049 -3780 0
11042 11051 -3782 0
11042 11053 -3784 0
11044 -3778 0
11044 11048 -3780 0
11044 11049 -3782 0
11044 11051 -3784 0
11044 11053 0
11046 -3780 0
11046 11048 -3782 0
11046 11049 -3784 0
11046 11051 0
11046 11053 0
c (6<=(aux1182 + aux1183 - shift(sky_left_00001_00005, -7)))
-11049 3784 0
-11048 3782 0
-11046 -11051 3784 0
-11046 -11049 3782 0
-11046 -11048 3780 0
-11044 -11053 3784 0
-11044 -11051 3782 0
-11044 -11049 3780 0
-11044 -11048 3778 0
-11042 3784 0
-11042 -11053 3782 0
-11042 -11051 3780 0
-11042 -11049 3778 0
-11042 -11048 3776 0
-11041 3782 0
-11041 -11053 3780 0
-11041 -11051 3778 0
-11041 -11049 3776 0
-11041 -11048 3775 0
c ((aux1189 + aux1190 - shift(sky_left_00001_00006, -7))<=6)
11075 -3786 0
11076 -3787 0
11078 -3789 0
11080 -3791 0
11068 -3786 0
11068 11075 -3787 0
11068 11076 -3789 0
11068 11078 -3791 0
11068 11080 -3793 0
11069 -3787 0
11069 11075 -3789 0
11069 11076 -3791 0
11069 11078 -3793 0
11069 11080 -3795 0
11071 -3789 0
11071 11075 -3791 0
11071 11076 -3793 0
11071 11078 -3795 0
11071 11080 0
11073 -3791 0
11073 11075 -3793 0
11073 11076 -3795 0
11073 11078 0
11073 11080 0
c (6<=(aux1189 + aux1190 - shift(sky_left_00001_00006, -7)))
-11076 3795 0
-11075 3793 0
-11073 -11078 3795 0
-11073 -11076 3793 0
-11073 -11075 3791 0
-11071 -11080 3795 0
-11071 -11078 3793 0
-11071 -11076 3791 0
-11071 -11075 3789 0
-11069 3795 0
-11069 -11080 3793 0
-11069 -11078 3791 0
-11069 -11076 3789 0
-11069 -11075 3787 0
-11068 3793 0
-11068 -11080 3791 0
-11068 -11078 3789 0
-11068 -11076 3787 0
-11068 -11075 3786 0
c ((aux1196 + aux1197 - shift(sky_left_00001_00007, -8))<=7)
11102 -3797 0
11103 -3798 0
11105 -3800 0
11107 -3802 0
11095 -3797 0
11095 11102 -3798 0
11095 11103 -3800 0
11095 11105 -3802 0
11095 11107 -3804 0
11096 -3798 0
11096 11102 -3800 0
11096 11103 -3802 0
11096 11105 -3804 0
11096 11107 -3806 0
11098 -3800 0
11098 11102 -3802 0
11098 11103 -3804 0
11098 11105 -3806 0
11098 11107 -3808 0
11100 -3802 0
11100 11102 -3804 0
11100 11103 -3806 0
11100 11105 -3808 0
11100 11107 0
c (7<=(aux1196 + aux1197 - shift(sky_left_00001_00007, -8)))
-11105 3808 0
-11103 3806 0
-11102 3804 0
-11100 -11107 3808 0
-11100 -11105 3806 0
-11100 -11103 3804 0
-11100 -11102 3802 0
-11098 3808 0
-11098 -11107 3806 0
-11098 -11105 3804 0
-11098 -11103 3802 0
-11098 -11102 3800 0
-11096 3806 0
-11096 -11107 3804 0
-11096 -11105 3802 0
-11096 -11103 3800 0
-11096 -11102 3798 0
-11095 3804 0
-11095 -11107 3802 0
-11095 -11105 3800 0
-11095 -11103 3798 0
-11095 -11102 3797 0
c ((aux1203 + aux1204 - shift(sky_left_00001_00008, -7))<=6)
11129 -3810 0
11130 -3811 0
11132 -3813 0
11134 -3815 0
11122 -3810 0
11122 11129 -3811 0
11122 11130 -3813 0
11122 11132 -3815 0
11122 11134 -3817 0
11123 -3811 0
11123 11129 -3813 0
11123 11130 -3815 0
11123 11132 -3817 0
11123 11134 -3819 0
11125 -3813 0
11125 11129 -3815 0
11125 11130 -3817 0
11125 11132 -3819 0
11125 11134 0
11127 -3815 0
11127 11129 -3817 0
11127 11130 -3819 0
11127 11132 0
11127 11134 0
c (6<=(aux1203 + aux1204 - shift(sky_left_00001_00008, -7)))
-11130 3819 0
-11129 3817 0
-11127 -11132 3819 0
-11127 -11130 3817 0
-11127 -11129 3815 0
-11125 -11134 3819 0
-11125 -11132 3817 0
-11125 -11130 3815 0
-11125 -11129 3813 0
-11123 3819 0
-11123 -11134 3817 0
-11123 -11132 3815 0
-11123 -11130 3813 0
-11123 -11129 3811 0
-11122 3817 0
-11122 -11134 3815 0
-11122 -11132 3813 0
-11122 -11130 3811 0
-11122 -11129 3810 0
c ((aux1210 + aux1211 - shift(sky_left_00001_00009, -7))<=6)
11156 -3821 0
11157 -3822 0
11159 -3824 0
11161 -3826 0
11149 -3821 0
11149 11156 -3822 0
11149 11157 -3824 0
11149 11159 -3826 0
11149 11161 -3828 0
11150 -3822 0
11150 11156 -3824 0
11150 11157 -3826 0
11150 11159 -3828 0
11150 11161 -3830 0
11152 -3824 0
11152 11156 -3826 0
11152 11157 -3828 0
11152 11159 -3830 0
11152 11161 0
11154 -3826 0
11154 11156 -3828 0
11154 11157 -3830 0
11154 11159 0
11154 11161 0
c (6<=(aux1210 + aux1211 - shift(sky_left_00001_00009, -7)))
-11157 3830 0
-11156 3828 0
-11154 -11159 3830 0
-11154 -11157 3828 0
-11154 -11156 3826 0
-11152 -11161 3830 0
-11152 -11159 3828 0
-11152 -11157 3826 0
-11152 -11156 3824 0
-11150 3830 0
-11150 -11161 3828 0
-11150 -11159 3826 0
-11150 -11157 3824 0
-11150 -11156 3822 0
-11149 3828 0
-11149 -11161 3826 0
-11149 -11159 3824 0
-11149 -11157 3822 0
-11149 -11156 3821 0
c ((aux1217 + aux1218 - shift(sky_left_00002_00001, -9))<=8)
11183 -3832 0
11184 -3833 0
11186 -3835 0
11188 -3837 0
11176 -3832 0
11176 11183 -3833 0
11176 11184 -3835 0
11176 11186 -3837 0
11176 11188 -3839 0
11177 -3833 0
11177 11183 -3835 0
11177 11184 -3837 0
11177 11186 -3839 0
11177 11188 -3841 0
11179 -3835 0
11179 11183 -3837 0
11179 11184 -3839 0
11179 11186 -3841 0
11179 11188 -3843 0
11181 -3837 0
11181 11183 -3839 0
11181 11184 -3841 0
11181 11186 -3843 0
11181 11188 -3845 0
c (8<=(aux1217 + aux1218 - shift(sky_left_00002_00001, -9)))
-11188 3845 0
-11186 3843 0
-11184 3841 0
-11183 3839 0
-11181 3845 0
-11181 -11188 3843 0
-11181 -11186 3841 0
-11181 -11184 3839 0
-11181 -11183 3837 0
-11179 3843 0
-11179 -11188 3841 0
-11179 -11186 3839 0
-11179 -11184 3837 0
-11179 -11183 3835 0
-11177 3841 0
-11177 -11188 3839 0
-11177 -11186 3837 0
-11177 -11184 3835 0
-11177 -11183 3833 0
-11176 3839 0
-11176 -11188 3837 0
-11176 -11186 3835 0
-11176 -11184 3833 0
-11176 -11183 3832 0
c ((aux1224 + aux1225 - shift(sky_left_00002_00002, -8))<=7)
11210 -3847 0
11211 -3848 0
11213 -3850 0
11215 -3852 0
11203 -3847 0
11203 11210 -3848 0
11203 11211 -3850 0
11203 11213 -3852 0
11203 11215 -3854 0
11204 -3848 0
11204 11210 -3850 0
11204 11211 -3852 0
11204 11213 -3854 0
11204 11215 -3856 0
11206 -3850 0
11206 11210 -3852 0
11206 11211 -3854 0
11206 11213 -3856 0
11206 11215 -3858 0
11208 -3852 0
11208 11210 -3854 0
11208 11211 -3856 0
11208 11213 -3858 0
11208 11215 0
c (7<=(aux1224 + aux1225 - shift(sky_left_00002_00002, -8)))
-11213 3858 0
-11211 3856 0
-11210 3854 0
-11208 -11215 3858 0
-11208 -11213 3856 0
-11208 -11211 3854 0
-11208 -11210 3852 0
-11206 3858 0
-11206 -11215 3856 0
-11206 -11213 3854 0
-11206 -11211 3852 0
-11206 -11210 3850 0
-11204 3856 0
-11204 -11215 3854 0
-11204 -11213 3852 0
-11204 -11211 3850 0
-11204 -11210 3848 0
-11203 3854 0
-11203 -11215 3852 0
-11203 -11213 3850 0
-11203 -11211 3848 0
-11203 -11210 3847 0
c ((aux1231 + aux1232 - shift(sky_left_00002_00003, -8))<=7)
11237 -3860 0
11238 -3861 0
11240 -3863 0
11242 -3865 0
11230 -3860 0
11230 11237 -3861 0
11230 11238 -3863 0
11230 11240 -3865 0
11230 11242 -3867 0
11231 -3861 0
11231 11237 -3863 0
11231 11238 -3865 0
11231 11240 -3867 0
11231 11242 -3869 0
11233 -3863 0
11233 11237 -3865 0
11233 11238 -3867 0
11233 11240 -3869 0
11233 11242 -3871 0
11235 -3865 0
11235 11237 -3867 0
11235 11238 -3869 0
11235 11240 -3871 0
11235 11242 0
c (7<=(aux1231 + aux1232 - shift(sky_left_00002_00003, -8)))
-11240 3871 0
-11238 3869 0
-11237 3867 0
-11235 -11242 3871 0
-11235 -11240 3869 0
-11235 -11238 3867 0
-11235 -11237 3865 0
-11233 3871 0
-11233 -11242 3869 0
-11233 -11240 3867 0
-11233 -11238 3865 0
-11233 -11237 3863 0
-11231 3869 0
-11231 -11242 3867 0
-11231 -11240 3865 0
-11231 -11238 3863 0
-11231 -11237 3861 0
-11230 3867 0
-11230 -11242 3865 0
-11230 -11240 3863 0
-11230 -11238 3861 0
-11230 -11237 3860 0
c ((aux1238 + aux1239 - shift(sky_left_00002_00004, -7))<=6)
11264 -3873 0
11265 -3874 0
11267 -3876 0
11269 -3878 0
11257 -3873 0
11257 11264 -3874 0
11257 11265 -3876 0
11257 11267 -3878 0
11257 11269 -3880 0
11258 -3874 0
11258 11264 -3876 0
11258 11265 -3878 0
11258 11267 -3880 0
11258 11269 -3882 0
11260 -3876 0
11260 11264 -3878 0
11260 11265 -3880 0
11260 11267 -3882 0
11260 11269 0
11262 -3878 0
11262 11264 -3880 0
11262 11265 -3882 0
11262 11267 0
11262 11269 0
c (6<=(aux1238 + aux1239 - shift(sky_left_00002_00004, -7)))
-11265 3882 0
-11264 3880 0
-11262 -11267 3882 0
-11262 -11265 3880 0
-11262 -11264 3878 0
-11260 -11269 3882 0
-11260 -11267 3880 0
-11260 -11265 3878 0
-11260 -11264 3876 0
-11258 3882 0
-11258 -11269 3880 0
-11258 -11267 3878 0
-11258 -11265 3876 0
-11258 -11264 3874 0
-11257 3880 0
-11257 -11269 3878 0
-11257 -11267 3876 0
-11257 -11265 3874 0
-11257 -11264 3873 0
c ((aux1245 + aux1246 - shift(sky_left_00002_00005, -7))<=6)
11291 -3884 0
11292 -3885 0
11294 -3887 0
11296 -3889 0
11284 -3884 0
11284 11291 -3885 0
11284 11292 -3887 0
11284 11294 -3889 0
11284 11296 -3891 0
11285 -3885 0
11285 11291 -3887 0
11285 11292 -3889 0
11285 11294 -3891 0
11285 11296 -3893 0
11287 -3887 0
11287 11291 -3889 0
11287 11292 -3891 0
11287 11294 -3893 0
11287 11296 0
11289 -3889 0
11289 11291 -3891 0
11289 11292 -3893 0
11289 11294 0
11289 11296 0
c (6<=(aux1245 + aux1246 - shift(sky_left_00002_00005, -7)))
-11292 3893 0
-11291 3891 0
-11289 -11294 3893 0
-11289 -11292 3891 0
-11289 -11291 3889 0
-11287 -11296 3893 0
-11287 -11294 3891 0
-11287 -11292 3889 0
-11287 -11291 3887 0
-11285 3893 0
-11285 -11296 3891 0
-11285 -11294 3889 0
-11285 -11292 3887 0
-11285 -11291 3885 0
-11284 3891 0
-11284 -11296 3889 0
-11284 -11294 3887 0
-11284 -11292 3885 0
-11284 -11291 3884 0
c ((aux1252 + aux1253 - shift(sky_left_00002_00006, -8))<=7)
11318 -3895 0
11319 -3896 0
11321 -3898 0
11323 -3900 0
11311 -3895 0
11311 11318 -3896 0
11311 11319 -3898 0
11311 11321 -3900 0
11311 11323 -3902 0
11312 -3896 0
11312 11318 -3898 0
11312 11319 -3900 0
11312 11321 -3902 0
11312 11323 -3904 0
11314 -3898 0
11314 11318 -3900 0
11314 11319 -3902 0
11314 11321 -3904 0
11314 11323 -3906 0
11316 -3900 0
11316 11318 -3902 0
11316 11319 -3904 0
11316 11321 -3906 0
11316 11323 0
c (7<=(aux1252 + aux1253 - shift(sky_left_00002_00006, -8)))
-11321 3906 0
-11319 3904 0
-11318 3902 0
-11316 -11323 3906 0
-11316 -11321 3904 0
-11316 -11319 3902 0
-11316 -11318 3900 0
-11314 3906 0
-11314 -11323 3904 0
-11314 -11321 3902 0
-11314 -11319 3900 0
-11314 -11318 3898 0
-11312 3904 0
-11312 -11323 3902 0
-11312 -11321 3900 0
-11312 -11319 3898 0
-11312 -11318 3896 0
-11311 3902 0
-11311 -11323 3900 0
-11311 -11321 3898 0
-11311 -11319 3896 0
-11311 -11318 3895 0
c ((aux1259 + aux1260 - shift(sky_left_00002_00007, -7))<=6)
11346 -3908 0
11348 -3909 0
11350 -3911 0
11338 11345 -3908 0
11338 11346 -3909 0
11338 11348 -3911 0
11338 11350 -3913 0
11339 -3908 0
11339 11345 -3909 0
11339 11346 -3911 0
11339 11348 -3913 0
11339 11350 -3915 0
11341 -3909 0
11341 11345 -3911 0
11341 11346 -3913 0
11341 11348 -3915 0
11341 11350 0
11343 -3911 0
11343 11345 -3913 0
11343 11346 -3915 0
11343 11348 0
11343 11350 0
c (6<=(aux1259 + aux1260 - shift(sky_left_00002_00007, -7)))
-11346 3915 0
-11345 3913 0
-11343 -11348 3915 0
-11343 -11346 3913 0
-11343 -11345 3911 0
-11341 -11350 3915 0
-11341 -11348 3913 0
-11341 -11346 3911 0
-11341 -11345 3909 0
-11339 3915 0
-11339 -11350 3913 0
-11339 -11348 3911 0
-11339 -11346 3909 0
-11339 -11345 3908 0
-11338 3913 0
-11338 -11350 3911 0
-11338 -11348 3909 0
-11338 -11346 3908 0
-11338 -11345 0
c ((aux1266 + aux1267 - shift(sky_left_00002_00008, -7))<=6)
11372 -3917 0
11373 -3918 0
11375 -3920 0
11377 -3922 0
11365 -3917 0
11365 11372 -3918 0
11365 11373 -3920 0
11365 11375 -3922 0
11365 11377 -3924 0
11366 -3918 0
11366 11372 -3920 0
11366 11373 -3922 0
11366 11375 -3924 0
11366 11377 -3926 0
11368 -3920 0
11368 11372 -3922 0
11368 11373 -3924 0
11368 11375 -3926 0
11368 11377 0
11370 -3922 0
11370 11372 -3924 0
11370 11373 -3926 0
11370 11375 0
11370 11377 0
c (6<=(aux1266 + aux1267 - shift(sky_left_00002_00008, -7)))
-11373 3926 0
-11372 3924 0
-11370 -11375 3926 0
-11370 -11373 3924 0
-11370 -11372 3922 0
-11368 -11377 3926 0
-11368 -11375 3924 0
-11368 -11373 3922 0
-11368 -11372 3920 0
-11366 3926 0
-11366 -11377 3924 0
-11366 -11375 3922 0
-11366 -11373 3920 0
-11366 -11372 3918 0
-11365 3924 0
-11365 -11377 3922 0
-11365 -11375 3920 0
-11365 -11373 3918 0
-11365 -11372 3917 0
c ((aux1273 + aux1274 - shift(sky_left_00002_00009, -8))<=7)
11399 -3928 0
11400 -3929 0
11402 -3931 0
11404 -3933 0
11392 -3928 0
11392 11399 -3929 0
11392 11400 -3931 0
11392 11402 -3933 0
11392 11404 -3935 0
11393 -3929 0
11393 11399 -3931 0
11393 11400 -3933 0
11393 11402 -3935 0
11393 11404 -3937 0
11395 -3931 0
11395 11399 -3933 0
11395 11400 -3935 0
11395 11402 -3937 0
11395 11404 -3939 0
11397 -3933 0
11397 11399 -3935 0
11397 11400 -3937 0
11397 11402 -3939 0
11397 11404 0
c (7<=(aux1273 + aux1274 - shift(sky_left_00002_00009, -8)))
-11402 3939 0
-11400 3937 0
-11399 3935 0
-11397 -11404 3939 0
-11397 -11402 3937 0
-11397 -11400 3935 0
-11397 -11399 3933 0
-11395 3939 0
-11395 -11404 3937 0
-11395 -11402 3935 0
-11395 -11400 3933 0
-11395 -11399 3931 0
-11393 3937 0
-11393 -11404 3935 0
-11393 -11402 3933 0
-11393 -11400 3931 0
-11393 -11399 3929 0
-11392 3935 0
-11392 -11404 3933 0
-11392 -11402 3931 0
-11392 -11400 3929 0
-11392 -11399 3928 0
c (( - shift(sky_left_00003_00001, -8) + aux1280 + aux1281)<=7)
11426 -3941 0
11427 -3942 0
11429 -3944 0
11431 -3946 0
11419 -3941 0
11419 11426 -3942 0
11419 11427 -3944 0
11419 11429 -3946 0
11419 11431 -3948 0
11420 -3942 0
11420 11426 -3944 0
11420 11427 -3946 0
11420 11429 -3948 0
11420 11431 -3950 0
11422 -3944 0
11422 11426 -3946 0
11422 11427 -3948 0
11422 11429 -3950 0
11422 11431 -3952 0
11424 -3946 0
11424 11426 -3948 0
11424 11427 -3950 0
11424 11429 -3952 0
11424 11431 0
c (7<=( - shift(sky_left_00003_00001, -8) + aux1280 + aux1281))
-11429 3952 0
-11427 3950 0
-11426 3948 0
-11424 -11431 3952 0
-11424 -11429 3950 0
-11424 -11427 3948 0
-11424 -11426 3946 0
-11422 3952 0
-11422 -11431 3950 0
-11422 -11429 3948 0
-11422 -11427 3946 0
-11422 -11426 3944 0
-11420 3950 0
-11420 -11431 3948 0
-11420 -11429 3946 0
-11420 -11427 3944 0
-11420 -11426 3942 0
-11419 3948 0
-11419 -11431 3946 0
-11419 -11429 3944 0
-11419 -11427 3942 0
-11419 -11426 3941 0
c (( - shift(sky_left_00003_00002, -8) + aux1287 + aux1288)<=7)
11453 -3954 0
11454 -3955 0
11456 -3957 0
11458 -3959 0
11446 -3954 0
11446 11453 -3955 0
11446 11454 -3957 0
11446 11456 -3959 0
11446 11458 -3961 0
11447 -3955 0
11447 11453 -3957 0
11447 11454 -3959 0
11447 11456 -3961 0
11447 11458 -3963 0
11449 -3957 0
11449 11453 -3959 0
11449 11454 -3961 0
11449 11456 -3963 0
11449 11458 -3965 0
11451 -3959 0
11451 11453 -3961 0
11451 11454 -3963 0
11451 11456 -3965 0
11451 11458 0
c (7<=( - shift(sky_left_00003_00002, -8) + aux1287 + aux1288))
-11456 3965 0
-11454 3963 0
-11453 3961 0
-11451 -11458 3965 0
-11451 -11456 3963 0
-11451 -11454 3961 0
-11451 -11453 3959 0
-11449 3965 0
-11449 -11458 3963 0
-11449 -11456 3961 0
-11449 -11454 3959 0
-11449 -11453 3957 0
-11447 3963 0
-11447 -11458 3961 0
-11447 -11456 3959 0
-11447 -11454 3957 0
-11447 -11453 3955 0
-11446 3961 0
-11446 -11458 3959 0
-11446 -11456 3957 0
-11446 -11454 3955 0
-11446 -11453 3954 0
c (( - shift(sky_left_00003_00003, -8) + aux1294 + aux1295)<=7)
11480 -3967 0
11481 -3968 0
11483 -3970 0
11485 -3972 0
11473 -3967 0
11473 11480 -3968 0
11473 11481 -3970 0
11473 11483 -3972 0
11473 11485 -3974 0
11474 -3968 0
11474 11480 -3970 0
11474 11481 -3972 0
11474 11483 -3974 0
11474 11485 -3976 0
11476 -3970 0
11476 11480 -3972 0
11476 11481 -3974 0
11476 11483 -3976 0
11476 11485 -3978 0
11478 -3972 0
11478 11480 -3974 0
11478 11481 -3976 0
11478 11483 -3978 0
11478 11485 0
c (7<=( - shift(sky_left_00003_00003, -8) + aux1294 + aux1295))
-11483 3978 0
-11481 3976 0
-11480 3974 0
-11478 -11485 3978 0
-11478 -11483 3976 0
-11478 -11481 3974 0
-11478 -11480 3972 0
-11476 3978 0
-11476 -11485 3976 0
-11476 -11483 3974 0
-11476 -11481 3972 0
-11476 -11480 3970 0
-11474 3976 0
-11474 -11485 3974 0
-11474 -11483 3972 0
-11474 -11481 3970 0
-11474 -11480 3968 0
-11473 3974 0
-11473 -11485 3972 0
-11473 -11483 3970 0
-11473 -11481 3968 0
-11473 -11480 3967 0
c (( - shift(sky_left_00003_00004, -8) + aux1301 + aux1302)<=7)
11507 -3980 0
11508 -3981 0
11510 -3983 0
11512 -3985 0
11500 -3980 0
11500 11507 -3981 0
11500 11508 -3983 0
11500 11510 -3985 0
11500 11512 -3987 0
11501 -3981 0
11501 11507 -3983 0
11501 11508 -3985 0
11501 11510 -3987 0
11501 11512 -3989 0
11503 -3983 0
11503 11507 -3985 0
11503 11508 -3987 0
11503 11510 -3989 0
11503 11512 -3991 0
11505 -3985 0
11505 11507 -3987 0
11505 11508 -3989 0
11505 11510 -3991 0
11505 11512 0
c (7<=( - shift(sky_left_00003_00004, -8) + aux1301 + aux1302))
-11510 3991 0
-11508 3989 0
-11507 3987 0
-11505 -11512 3991 0
-11505 -11510 3989 0
-11505 -11508 3987 0
-11505 -11507 3985 0
-11503 3991 0
-11503 -11512 3989 0
-11503 -11510 3987 0
-11503 -11508 3985 0
-11503 -11507 3983 0
-11501 3989 0
-11501 -11512 3987 0
-11501 -11510 3985 0
-11501 -11508 3983 0
-11501 -11507 3981 0
-11500 3987 0
-11500 -11512 3985 0
-11500 -11510 3983 0
-11500 -11508 3981 0
-11500 -11507 3980 0
c (( - shift(sky_left_00003_00005, -7) + aux1308 + aux1309)<=6)
11535 -3993 0
11537 -3994 0
11539 -3996 0
11527 11534 -3993 0
11527 11535 -3994 0
11527 11537 -3996 0
11527 11539 -3998 0
11528 -3993 0
11528 11534 -3994 0
11528 11535 -3996 0
11528 11537 -3998 0
11528 11539 -4000 0
11530 -3994 0
11530 11534 -3996 0
11530 11535 -3998 0
11530 11537 -4000 0
11530 11539 0
11532 -3996 0
11532 11534 -3998 0
11532 11535 -4000 0
11532 11537 0
11532 11539 0
c (6<=( - shift(sky_left_00003_00005, -7) + aux1308 + aux1309))
-11535 4000 0
-11534 3998 0
-11532 -11537 4000 0
-11532 -11535 3998 0
-11532 -11534 3996 0
-11530 -11539 4000 0
-11530 -11537 3998 0
-11530 -11535 3996 0
-11530 -11534 3994 0
-11528 4000 0
-11528 -11539 3998 0
-11528 -11537 3996 0
-11528 -11535 3994 0
-11528 -11534 3993 0
-11527 3998 0
-11527 -11539 3996 0
-11527 -11537 3994 0
-11527 -11535 3993 0
-11527 -11534 0
c (( - shift(sky_left_00003_00006, -8) + aux1315 + aux1316)<=7)
11561 -4002 0
11562 -4003 0
11564 -4005 0
11566 -4007 0
11554 -4002 0
11554 11561 -4003 0
11554 11562 -4005 0
11554 11564 -4007 0
11554 11566 -4009 0
11555 -4003 0
11555 11561 -4005 0
11555 11562 -4007 0
11555 11564 -4009 0
11555 11566 -4011 0
11557 -4005 0
11557 11561 -4007 0
11557 11562 -4009 0
11557 11564 -4011 0
11557 11566 -4013 0
11559 -4007 0
11559 11561 -4009 0
11559 11562 -4011 0
11559 11564 -4013 0
11559 11566 0
c (7<=( - shift(sky_left_00003_00006, -8) + aux1315 + aux1316))
-11564 4013 0
-11562 4011 0
-11561 4009 0
-11559 -11566 4013 0
-11559 -11564 4011 0
-11559 -11562 4009 0
-11559 -11561 4007 0
-11557 4013 0
-11557 -11566 4011 0
-11557 -11564 4009 0
-11557 -11562 4007 0
-11557 -11561 4005 0
-11555 4011 0
-11555 -11566 4009 0
-11555 -11564 4007 0
-11555 -11562 4005 0
-11555 -11561 4003 0
-11554 4009 0
-11554 -11566 4007 0
-11554 -11564 4005 0
-11554 -11562 4003 0
-11554 -11561 4002 0
c (( - shift(sky_left_00003_00007, -6) + aux1322 + aux1323)<=5)
11588 -4015 0
11589 -4016 0
11591 -4018 0
11593 -4020 0
11581 -4015 0
11581 11588 -4016 0
11581 11589 -4018 0
11581 11591 -4020 0
11581 11593 -4022 0
11582 -4016 0
11582 11588 -4018 0
11582 11589 -4020 0
11582 11591 -4022 0
11582 11593 0
11584 -4018 0
11584 11588 -4020 0
11584 11589 -4022 0
11584 11591 0
11584 11593 0
11586 -4020 0
11586 11588 -4022 0
11586 11589 0
11586 11591 0
11586 11593 0
c (5<=( - shift(sky_left_00003_00007, -6) + aux1322 + aux1323))
-11588 4022 0
-11586 -11589 4022 0
-11586 -11588 4020 0
-11584 -11591 4022 0
-11584 -11589 4020 0
-11584 -11588 4018 0
-11582 -11593 4022 0
-11582 -11591 4020 0
-11582 -11589 4018 0
-11582 -11588 4016 0
-11581 4022 0
-11581 -11593 4020 0
-11581 -11591 4018 0
-11581 -11589 4016 0
-11581 -11588 4015 0
c (( - shift(sky_left_00003_00008, -8) + aux1329 + aux1330)<=7)
11615 -4024 0
11616 -4025 0
11618 -4027 0
11620 -4029 0
11608 -4024 0
11608 11615 -4025 0
11608 11616 -4027 0
11608 11618 -4029 0
11608 11620 -4031 0
11609 -4025 0
11609 11615 -4027 0
11609 11616 -4029 0
11609 11618 -4031 0
11609 11620 -4033 0
11611 -4027 0
11611 11615 -4029 0
11611 11616 -4031 0
11611 11618 -4033 0
11611 11620 -4035 0
11613 -4029 0
11613 11615 -4031 0
11613 11616 -4033 0
11613 11618 -4035 0
11613 11620 0
c (7<=( - shift(sky_left_00003_00008, -8) + aux1329 + aux1330))
-11618 4035 0
-11616 4033 0
-11615 4031 0
-11613 -11620 4035 0
-11613 -11618 4033 0
-11613 -11616 4031 0
-11613 -11615 4029 0
-11611 4035 0
-11611 -11620 4033 0
-11611 -11618 4031 0
-11611 -11616 4029 0
-11611 -11615 4027 0
-11609 4033 0
-11609 -11620 4031 0
-11609 -11618 4029 0
-11609 -11616 4027 0
-11609 -11615 4025 0
-11608 4031 0
-11608 -11620 4029 0
-11608 -11618 4027 0
-11608 -11616 4025 0
-11608 -11615 4024 0
c (( - shift(sky_left_00003_00009, -7) + aux1336 + aux1337)<=6)
11642 -4037 0
11643 -4038 0
11645 -4040 0
11647 -4042 0
11635 -4037 0
11635 11642 -4038 0
11635 11643 -4040 0
11635 11645 -4042 0
11635 11647 -4044 0
11636 -4038 0
11636 11642 -4040 0
11636 11643 -4042 0
11636 11645 -4044 0
11636 11647 -4046 0
11638 -4040 0
11638 11642 -4042 0
11638 11643 -4044 0
11638 11645 -4046 0
11638 11647 0
11640 -4042 0
11640 11642 -4044 0
11640 11643 -4046 0
11640 11645 0
11640 11647 0
c (6<=( - shift(sky_left_00003_00009, -7) + aux1336 + aux1337))
-11643 4046 0
-11642 4044 0
-11640 -11645 4046 0
-11640 -11643 4044 0
-11640 -11642 4042 0
-11638 -11647 4046 0
-11638 -11645 4044 0
-11638 -11643 4042 0
-11638 -11642 4040 0
-11636 4046 0
-11636 -11647 4044 0
-11636 -11645 4042 0
-11636 -11643 4040 0
-11636 -11642 4038 0
-11635 4044 0
-11635 -11647 4042 0
-11635 -11645 4040 0
-11635 -11643 4038 0
-11635 -11642 4037 0
c ((aux1343 + aux1344 - shift(sky_left_00004_00001, -9))<=8)
11669 -4048 0
11670 -4049 0
11672 -4051 0
11674 -4053 0
11662 -4048 0
11662 11669 -4049 0
11662 11670 -4051 0
11662 11672 -4053 0
11662 11674 -4055 0
11663 -4049 0
11663 11669 -4051 0
11663 11670 -4053 0
11663 11672 -4055 0
11663 11674 -4057 0
11665 -4051 0
11665 11669 -4053 0
11665 11670 -4055 0
11665 11672 -4057 0
11665 11674 -4059 0
11667 -4053 0
11667 11669 -4055 0
11667 11670 -4057 0
11667 11672 -4059 0
11667 11674 -4061 0
c (8<=(aux1343 + aux1344 - shift(sky_left_00004_00001, -9)))
-11674 4061 0
-11672 4059 0
-11670 4057 0
-11669 4055 0
-11667 4061 0
-11667 -11674 4059 0
-11667 -11672 4057 0
-11667 -11670 4055 0
-11667 -11669 4053 0
-11665 4059 0
-11665 -11674 4057 0
-11665 -11672 4055 0
-11665 -11670 4053 0
-11665 -11669 4051 0
-11663 4057 0
-11663 -11674 4055 0
-11663 -11672 4053 0
-11663 -11670 4051 0
-11663 -11669 4049 0
-11662 4055 0
-11662 -11674 4053 0
-11662 -11672 4051 0
-11662 -11670 4049 0
-11662 -11669 4048 0
c ((aux1350 + aux1351 - shift(sky_left_00004_00002, -8))<=7)
11696 -4063 0
11697 -4064 0
11699 -4066 0
11701 -4068 0
11689 -4063 0
11689 11696 -4064 0
11689 11697 -4066 0
11689 11699 -4068 0
11689 11701 -4070 0
11690 -4064 0
11690 11696 -4066 0
11690 11697 -4068 0
11690 11699 -4070 0
11690 11701 -4072 0
11692 -4066 0
11692 11696 -4068 0
11692 11697 -4070 0
11692 11699 -4072 0
11692 11701 -4074 0
11694 -4068 0
11694 11696 -4070 0
11694 11697 -4072 0
11694 11699 -4074 0
11694 11701 0
c (7<=(aux1350 + aux1351 - shift(sky_left_00004_00002, -8)))
-11699 4074 0
-11697 4072 0
-11696 4070 0
-11694 -11701 4074 0
-11694 -11699 4072 0
-11694 -11697 4070 0
-11694 -11696 4068 0
-11692 4074 0
-11692 -11701 4072 0
-11692 -11699 4070 0
-11692 -11697 4068 0
-11692 -11696 4066 0
-11690 4072 0
-11690 -11701 4070 0
-11690 -11699 4068 0
-11690 -11697 4066 0
-11690 -11696 4064 0
-11689 4070 0
-11689 -11701 4068 0
-11689 -11699 4066 0
-11689 -11697 4064 0
-11689 -11696 4063 0
c ((aux1357 + aux1358 - shift(sky_left_00004_00003, -7))<=6)
11723 -4076 0
11724 -4077 0
11726 -4079 0
11728 -4081 0
11716 -4076 0
11716 11723 -4077 0
11716 11724 -4079 0
11716 11726 -4081 0
11716 11728 -4083 0
11717 -4077 0
11717 11723 -4079 0
11717 11724 -4081 0
11717 11726 -4083 0
11717 11728 -4085 0
11719 -4079 0
11719 11723 -4081 0
11719 11724 -4083 0
11719 11726 -4085 0
11719 11728 0
11721 -4081 0
11721 11723 -4083 0
11721 11724 -4085 0
11721 11726 0
11721 11728 0
c (6<=(aux1357 + aux1358 - shift(sky_left_00004_00003, -7)))
-11724 4085 0
-11723 4083 0
-11721 -11726 4085 0
-11721 -11724 4083 0
-11721 -11723 4081 0
-11719 -11728 4085 0
-11719 -11726 4083 0
-11719 -11724 4081 0
-11719 -11723 4079 0
-11717 4085 0
-11717 -11728 4083 0
-11717 -11726 4081 0
-11717 -11724 4079 0
-11717 -11723 4077 0
-11716 4083 0
-11716 -11728 4081 0
-11716 -11726 4079 0
-11716 -11724 4077 0
-11716 -11723 4076 0
c ((aux1364 + aux1365 - shift(sky_left_00004_00004, -8))<=7)
11750 -4087 0
11751 -4088 0
11753 -4090 0
11755 -4092 0
11743 -4087 0
11743 11750 -4088 0
11743 11751 -4090 0
11743 11753 -4092 0
11743 11755 -4094 0
11744 -4088 0
11744 11750 -4090 0
11744 11751 -4092 0
11744 11753 -4094 0
11744 11755 -4096 0
11746 -4090 0
11746 11750 -4092 0
11746 11751 -4094 0
11746 11753 -4096 0
11746 11755 -4098 0
11748 -4092 0
11748 11750 -4094 0
11748 11751 -4096 0
11748 11753 -4098 0
11748 11755 0
c (7<=(aux1364 + aux1365 - shift(sky_left_00004_00004, -8)))
-11753 4098 0
-11751 4096 0
-11750 4094 0
-11748 -11755 4098 0
-11748 -11753 4096 0
-11748 -11751 4094 0
-11748 -11750 4092 0
-11746 4098 0
-11746 -11755 4096 0
-11746 -11753 4094 0
-11746 -11751 4092 0
-11746 -11750 4090 0
-11744 4096 0
-11744 -11755 4094 0
-11744 -11753 4092 0
-11744 -11751 4090 0
-11744 -11750 4088 0
-11743 4094 0
-11743 -11755 4092 0
-11743 -11753 4090 0
-11743 -11751 4088 0
-11743 -11750 4087 0
c ((aux1370 + aux1371 - shift(sky_left_00004_00005, -8))<=6)
11772 -4100 0
11773 -4101 0
11775 -4103 0
11777 -4105 0
11767 -4100 0
11767 11772 -4101 0
11767 11773 -4103 0
11767 11775 -4105 0
11767 11777 -4107 0
11768 -4101 0
11768 11772 -4103 0
11768 11773 -4105 0
11768 11775 -4107 0
11768 11777 -4109 0
11770 -4103 0
11770 11772 -4105 0
11770 11773 -4107 0
11770 11775 -4109 0
11770 11777 0
c (6<=(aux1370 + aux1371 - shift(sky_left_00004_00005, -8)))
-11775 4109 0
-11773 4107 0
-11772 4105 0
-11770 -11777 4109 0
-11770 -11775 4107 0
-11770 -11773 4105 0
-11770 -11772 4103 0
-11768 4109 0
-11768 -11777 4107 0
-11768 -11775 4105 0
-11768 -11773 4103 0
-11768 -11772 4101 0
-11767 4107 0
-11767 -11777 4105 0
-11767 -11775 4103 0
-11767 -11773 4101 0
-11767 -11772 4100 0
c ((aux1377 + aux1378 - shift(sky_left_00004_00006, -7))<=6)
11799 -4111 0
11800 -4112 0
11802 -4114 0
11804 -4116 0
11792 -4111 0
11792 11799 -4112 0
11792 11800 -4114 0
11792 11802 -4116 0
11792 11804 -4118 0
11793 -4112 0
11793 11799 -4114 0
11793 11800 -4116 0
11793 11802 -4118 0
11793 11804 -4120 0
11795 -4114 0
11795 11799 -4116 0
11795 11800 -4118 0
11795 11802 -4120 0
11795 11804 0
11797 -4116 0
11797 11799 -4118 0
11797 11800 -4120 0
11797 11802 0
11797 11804 0
c (6<=(aux1377 + aux1378 - shift(sky_left_00004_00006, -7)))
-11800 4120 0
-11799 4118 0
-11797 -11802 4120 0
-11797 -11800 4118 0
-11797 -11799 4116 0
-11795 -11804 4120 0
-11795 -11802 4118 0
-11795 -11800 4116 0
-11795 -11799 4114 0
-11793 4120 0
-11793 -11804 4118 0
-11793 -11802 4116 0
-11793 -11800 4114 0
-11793 -11799 4112 0
-11792 4118 0
-11792 -11804 4116 0
-11792 -11802 4114 0
-11792 -11800 4112 0
-11792 -11799 4111 0
c ((aux1384 + aux1385 - shift(sky_left_00004_00007, -5))<=4)
11826 -4122 0
11827 -4123 0
11829 -4125 0
11831 -4127 0
11819 -4122 0
11819 11826 -4123 0
11819 11827 -4125 0
11819 11829 -4127 0
11819 11831 0
11820 -4123 0
11820 11826 -4125 0
11820 11827 -4127 0
11820 11829 0
11820 11831 0
11822 -4125 0
11822 11826 -4127 0
11822 11827 0
11822 11829 0
11822 11831 0
11824 -4127 0
11824 11826 0
11824 11827 0
11824 11829 0
11824 11831 0
c (4<=(aux1384 + aux1385 - shift(sky_left_00004_00007, -5)))
-11824 -11826 4127 0
-11822 -11827 4127 0
-11822 -11826 4125 0
-11820 -11829 4127 0
-11820 -11827 4125 0
-11820 -11826 4123 0
-11819 -11831 4127 0
-11819 -11829 4125 0
-11819 -11827 4123 0
-11819 -11826 4122 0
c ((aux1391 + aux1392 - shift(sky_left_00004_00008, -8))<=7)
11853 -4129 0
11854 -4130 0
11856 -4132 0
11858 -4134 0
11846 -4129 0
11846 11853 -4130 0
11846 11854 -4132 0
11846 11856 -4134 0
11846 11858 -4136 0
11847 -4130 0
11847 11853 -4132 0
11847 11854 -4134 0
11847 11856 -4136 0
11847 11858 -4138 0
11849 -4132 0
11849 11853 -4134 0
11849 11854 -4136 0
11849 11856 -4138 0
11849 11858 -4140 0
11851 -4134 0
11851 11853 -4136 0
11851 11854 -4138 0
11851 11856 -4140 0
11851 11858 0
c (7<=(aux1391 + aux1392 - shift(sky_left_00004_00008, -8)))
-11856 4140 0
-11854 4138 0
-11853 4136 0
-11851 -11858 4140 0
-11851 -11856 4138 0
-11851 -11854 4136 0
-11851 -11853 4134 0
-11849 4140 0
-11849 -11858 4138 0
-11849 -11856 4136 0
-11849 -11854 4134 0
-11849 -11853 4132 0
-11847 4138 0
-11847 -11858 4136 0
-11847 -11856 4134 0
-11847 -11854 4132 0
-11847 -11853 4130 0
-11846 4136 0
-11846 -11858 4134 0
-11846 -11856 4132 0
-11846 -11854 4130 0
-11846 -11853 4129 0
c ((aux1398 + aux1399 - shift(sky_left_00004_00009, -7))<=6)
11880 -4142 0
11881 -4143 0
11883 -4145 0
11885 -4147 0
11873 -4142 0
11873 11880 -4143 0
11873 11881 -4145 0
11873 11883 -4147 0
11873 11885 -4149 0
11874 -4143 0
11874 11880 -4145 0
11874 11881 -4147 0
11874 11883 -4149 0
11874 11885 -4151 0
11876 -4145 0
11876 11880 -4147 0
11876 11881 -4149 0
11876 11883 -4151 0
11876 11885 0
11878 -4147 0
11878 11880 -4149 0
11878 11881 -4151 0
11878 11883 0
11878 11885 0
c (6<=(aux1398 + aux1399 - shift(sky_left_00004_00009, -7)))
-11881 4151 0
-11880 4149 0
-11878 -11883 4151 0
-11878 -11881 4149 0
-11878 -11880 4147 0
-11876 -11885 4151 0
-11876 -11883 4149 0
-11876 -11881 4147 0
-11876 -11880 4145 0
-11874 4151 0
-11874 -11885 4149 0
-11874 -11883 4147 0
-11874 -11881 4145 0
-11874 -11880 4143 0
-11873 4149 0
-11873 -11885 4147 0
-11873 -11883 4145 0
-11873 -11881 4143 0
-11873 -11880 4142 0
