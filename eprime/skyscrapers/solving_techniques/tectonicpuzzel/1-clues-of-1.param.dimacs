p cnf 17776 79642                                                                                   

1 0
c Encoding variable: field_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00001' direct represents '1' with '2'
c Var 'field_00001_00001' direct represents '2' with '3'
c Var 'field_00001_00001' direct represents '3' with '4'
c Var 'field_00001_00001' direct represents '4' with '5'
c Var 'field_00001_00001' direct represents '5' with '6'
c Var 'field_00001_00001' direct represents '6' with '7'
c Var 'field_00001_00001' direct represents '7' with '8'
c Var 'field_00001_00001' direct represents '8' with '9'
c Var 'field_00001_00001' direct represents '9' with '10'
2 3 4 5 6 7 8 9 10 0
-2 11 0
-2 14 0
-3 12 0
-3 14 0
-4 13 0
-4 14 0
-5 11 0
-5 15 0
-6 12 0
-6 15 0
-7 13 0
-7 15 0
-8 11 0
-8 16 0
-9 12 0
-9 16 0
-10 13 0
-10 16 0
-11 -12 0
-11 -13 0
-12 -13 0
-14 -15 0
-14 -16 0
-15 -16 0
c Encoding variable: field_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00002' direct represents '1' with '17'
c Var 'field_00001_00002' direct represents '2' with '18'
c Var 'field_00001_00002' direct represents '3' with '19'
c Var 'field_00001_00002' direct represents '4' with '20'
c Var 'field_00001_00002' direct represents '5' with '21'
c Var 'field_00001_00002' direct represents '6' with '22'
c Var 'field_00001_00002' direct represents '7' with '23'
c Var 'field_00001_00002' direct represents '8' with '24'
c Var 'field_00001_00002' direct represents '9' with '25'
17 18 19 20 21 22 23 24 25 0
-17 26 0
-17 29 0
-18 27 0
-18 29 0
-19 28 0
-19 29 0
-20 26 0
-20 30 0
-21 27 0
-21 30 0
-22 28 0
-22 30 0
-23 26 0
-23 31 0
-24 27 0
-24 31 0
-25 28 0
-25 31 0
-26 -27 0
-26 -28 0
-27 -28 0
-29 -30 0
-29 -31 0
-30 -31 0
c Encoding variable: field_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00003' direct represents '1' with '32'
c Var 'field_00001_00003' direct represents '2' with '33'
c Var 'field_00001_00003' direct represents '3' with '34'
c Var 'field_00001_00003' direct represents '4' with '35'
c Var 'field_00001_00003' direct represents '5' with '36'
c Var 'field_00001_00003' direct represents '6' with '37'
c Var 'field_00001_00003' direct represents '7' with '38'
c Var 'field_00001_00003' direct represents '8' with '39'
c Var 'field_00001_00003' direct represents '9' with '40'
32 33 34 35 36 37 38 39 40 0
-32 41 0
-32 44 0
-33 42 0
-33 44 0
-34 43 0
-34 44 0
-35 41 0
-35 45 0
-36 42 0
-36 45 0
-37 43 0
-37 45 0
-38 41 0
-38 46 0
-39 42 0
-39 46 0
-40 43 0
-40 46 0
-41 -42 0
-41 -43 0
-42 -43 0
-44 -45 0
-44 -46 0
-45 -46 0
c Encoding variable: field_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00004' direct represents '1' with '47'
c Var 'field_00001_00004' direct represents '2' with '48'
c Var 'field_00001_00004' direct represents '3' with '49'
c Var 'field_00001_00004' direct represents '4' with '50'
c Var 'field_00001_00004' direct represents '5' with '51'
c Var 'field_00001_00004' direct represents '6' with '52'
c Var 'field_00001_00004' direct represents '7' with '53'
c Var 'field_00001_00004' direct represents '8' with '54'
c Var 'field_00001_00004' direct represents '9' with '55'
47 48 49 50 51 52 53 54 55 0
-47 56 0
-47 59 0
-48 57 0
-48 59 0
-49 58 0
-49 59 0
-50 56 0
-50 60 0
-51 57 0
-51 60 0
-52 58 0
-52 60 0
-53 56 0
-53 61 0
-54 57 0
-54 61 0
-55 58 0
-55 61 0
-56 -57 0
-56 -58 0
-57 -58 0
-59 -60 0
-59 -61 0
-60 -61 0
c Encoding variable: field_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00005' direct represents '1' with '62'
c Var 'field_00001_00005' direct represents '2' with '63'
c Var 'field_00001_00005' direct represents '3' with '64'
c Var 'field_00001_00005' direct represents '4' with '65'
c Var 'field_00001_00005' direct represents '5' with '66'
c Var 'field_00001_00005' direct represents '6' with '67'
c Var 'field_00001_00005' direct represents '7' with '68'
c Var 'field_00001_00005' direct represents '8' with '69'
c Var 'field_00001_00005' direct represents '9' with '70'
62 63 64 65 66 67 68 69 70 0
-62 71 0
-62 74 0
-63 72 0
-63 74 0
-64 73 0
-64 74 0
-65 71 0
-65 75 0
-66 72 0
-66 75 0
-67 73 0
-67 75 0
-68 71 0
-68 76 0
-69 72 0
-69 76 0
-70 73 0
-70 76 0
-71 -72 0
-71 -73 0
-72 -73 0
-74 -75 0
-74 -76 0
-75 -76 0
c Encoding variable: field_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00006' direct represents '1' with '77'
c Var 'field_00001_00006' direct represents '2' with '78'
c Var 'field_00001_00006' direct represents '3' with '79'
c Var 'field_00001_00006' direct represents '4' with '80'
c Var 'field_00001_00006' direct represents '5' with '81'
c Var 'field_00001_00006' direct represents '6' with '82'
c Var 'field_00001_00006' direct represents '7' with '83'
c Var 'field_00001_00006' direct represents '8' with '84'
c Var 'field_00001_00006' direct represents '9' with '85'
77 78 79 80 81 82 83 84 85 0
-77 86 0
-77 89 0
-78 87 0
-78 89 0
-79 88 0
-79 89 0
-80 86 0
-80 90 0
-81 87 0
-81 90 0
-82 88 0
-82 90 0
-83 86 0
-83 91 0
-84 87 0
-84 91 0
-85 88 0
-85 91 0
-86 -87 0
-86 -88 0
-87 -88 0
-89 -90 0
-89 -91 0
-90 -91 0
c Encoding variable: field_00001_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00007' direct represents '1' with '92'
c Var 'field_00001_00007' direct represents '2' with '93'
c Var 'field_00001_00007' direct represents '3' with '94'
c Var 'field_00001_00007' direct represents '4' with '95'
c Var 'field_00001_00007' direct represents '5' with '96'
c Var 'field_00001_00007' direct represents '6' with '97'
c Var 'field_00001_00007' direct represents '7' with '98'
c Var 'field_00001_00007' direct represents '8' with '99'
c Var 'field_00001_00007' direct represents '9' with '100'
92 93 94 95 96 97 98 99 100 0
-92 101 0
-92 104 0
-93 102 0
-93 104 0
-94 103 0
-94 104 0
-95 101 0
-95 105 0
-96 102 0
-96 105 0
-97 103 0
-97 105 0
-98 101 0
-98 106 0
-99 102 0
-99 106 0
-100 103 0
-100 106 0
-101 -102 0
-101 -103 0
-102 -103 0
-104 -105 0
-104 -106 0
-105 -106 0
c Encoding variable: field_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00008' direct represents '1' with '107'
c Var 'field_00001_00008' direct represents '2' with '108'
c Var 'field_00001_00008' direct represents '3' with '109'
c Var 'field_00001_00008' direct represents '4' with '110'
c Var 'field_00001_00008' direct represents '5' with '111'
c Var 'field_00001_00008' direct represents '6' with '112'
c Var 'field_00001_00008' direct represents '7' with '113'
c Var 'field_00001_00008' direct represents '8' with '114'
c Var 'field_00001_00008' direct represents '9' with '115'
107 108 109 110 111 112 113 114 115 0
-107 116 0
-107 119 0
-108 117 0
-108 119 0
-109 118 0
-109 119 0
-110 116 0
-110 120 0
-111 117 0
-111 120 0
-112 118 0
-112 120 0
-113 116 0
-113 121 0
-114 117 0
-114 121 0
-115 118 0
-115 121 0
-116 -117 0
-116 -118 0
-117 -118 0
-119 -120 0
-119 -121 0
-120 -121 0
c Encoding variable: field_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00009' direct represents '1' with '122'
c Var 'field_00001_00009' direct represents '2' with '123'
c Var 'field_00001_00009' direct represents '3' with '124'
c Var 'field_00001_00009' direct represents '4' with '125'
c Var 'field_00001_00009' direct represents '5' with '126'
c Var 'field_00001_00009' direct represents '6' with '127'
c Var 'field_00001_00009' direct represents '7' with '128'
c Var 'field_00001_00009' direct represents '8' with '129'
c Var 'field_00001_00009' direct represents '9' with '130'
122 123 124 125 126 127 128 129 130 0
-122 131 0
-122 134 0
-123 132 0
-123 134 0
-124 133 0
-124 134 0
-125 131 0
-125 135 0
-126 132 0
-126 135 0
-127 133 0
-127 135 0
-128 131 0
-128 136 0
-129 132 0
-129 136 0
-130 133 0
-130 136 0
-131 -132 0
-131 -133 0
-132 -133 0
-134 -135 0
-134 -136 0
-135 -136 0
c Encoding variable: field_00002_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00001' direct represents '1' with '137'
c Var 'field_00002_00001' direct represents '2' with '138'
c Var 'field_00002_00001' direct represents '3' with '139'
c Var 'field_00002_00001' direct represents '4' with '140'
c Var 'field_00002_00001' direct represents '5' with '141'
c Var 'field_00002_00001' direct represents '6' with '142'
c Var 'field_00002_00001' direct represents '7' with '143'
c Var 'field_00002_00001' direct represents '8' with '144'
c Var 'field_00002_00001' direct represents '9' with '145'
137 138 139 140 141 142 143 144 145 0
-137 146 0
-137 149 0
-138 147 0
-138 149 0
-139 148 0
-139 149 0
-140 146 0
-140 150 0
-141 147 0
-141 150 0
-142 148 0
-142 150 0
-143 146 0
-143 151 0
-144 147 0
-144 151 0
-145 148 0
-145 151 0
-146 -147 0
-146 -148 0
-147 -148 0
-149 -150 0
-149 -151 0
-150 -151 0
c Encoding variable: field_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00002' direct represents '1' with '152'
c Var 'field_00002_00002' direct represents '2' with '153'
c Var 'field_00002_00002' direct represents '3' with '154'
c Var 'field_00002_00002' direct represents '4' with '155'
c Var 'field_00002_00002' direct represents '5' with '156'
c Var 'field_00002_00002' direct represents '6' with '157'
c Var 'field_00002_00002' direct represents '7' with '158'
c Var 'field_00002_00002' direct represents '8' with '159'
c Var 'field_00002_00002' direct represents '9' with '160'
152 153 154 155 156 157 158 159 160 0
-152 161 0
-152 164 0
-153 162 0
-153 164 0
-154 163 0
-154 164 0
-155 161 0
-155 165 0
-156 162 0
-156 165 0
-157 163 0
-157 165 0
-158 161 0
-158 166 0
-159 162 0
-159 166 0
-160 163 0
-160 166 0
-161 -162 0
-161 -163 0
-162 -163 0
-164 -165 0
-164 -166 0
-165 -166 0
c Encoding variable: field_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00003' direct represents '1' with '167'
c Var 'field_00002_00003' direct represents '2' with '168'
c Var 'field_00002_00003' direct represents '3' with '169'
c Var 'field_00002_00003' direct represents '4' with '170'
c Var 'field_00002_00003' direct represents '5' with '171'
c Var 'field_00002_00003' direct represents '6' with '172'
c Var 'field_00002_00003' direct represents '7' with '173'
c Var 'field_00002_00003' direct represents '8' with '174'
c Var 'field_00002_00003' direct represents '9' with '175'
167 168 169 170 171 172 173 174 175 0
-167 176 0
-167 179 0
-168 177 0
-168 179 0
-169 178 0
-169 179 0
-170 176 0
-170 180 0
-171 177 0
-171 180 0
-172 178 0
-172 180 0
-173 176 0
-173 181 0
-174 177 0
-174 181 0
-175 178 0
-175 181 0
-176 -177 0
-176 -178 0
-177 -178 0
-179 -180 0
-179 -181 0
-180 -181 0
c Encoding variable: field_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00004' direct represents '1' with '182'
c Var 'field_00002_00004' direct represents '2' with '183'
c Var 'field_00002_00004' direct represents '3' with '184'
c Var 'field_00002_00004' direct represents '4' with '185'
c Var 'field_00002_00004' direct represents '5' with '186'
c Var 'field_00002_00004' direct represents '6' with '187'
c Var 'field_00002_00004' direct represents '7' with '188'
c Var 'field_00002_00004' direct represents '8' with '189'
c Var 'field_00002_00004' direct represents '9' with '190'
182 183 184 185 186 187 188 189 190 0
-182 191 0
-182 194 0
-183 192 0
-183 194 0
-184 193 0
-184 194 0
-185 191 0
-185 195 0
-186 192 0
-186 195 0
-187 193 0
-187 195 0
-188 191 0
-188 196 0
-189 192 0
-189 196 0
-190 193 0
-190 196 0
-191 -192 0
-191 -193 0
-192 -193 0
-194 -195 0
-194 -196 0
-195 -196 0
c Encoding variable: field_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00005' direct represents '1' with '197'
c Var 'field_00002_00005' direct represents '2' with '198'
c Var 'field_00002_00005' direct represents '3' with '199'
c Var 'field_00002_00005' direct represents '4' with '200'
c Var 'field_00002_00005' direct represents '5' with '201'
c Var 'field_00002_00005' direct represents '6' with '202'
c Var 'field_00002_00005' direct represents '7' with '203'
c Var 'field_00002_00005' direct represents '8' with '204'
c Var 'field_00002_00005' direct represents '9' with '205'
197 198 199 200 201 202 203 204 205 0
-197 206 0
-197 209 0
-198 207 0
-198 209 0
-199 208 0
-199 209 0
-200 206 0
-200 210 0
-201 207 0
-201 210 0
-202 208 0
-202 210 0
-203 206 0
-203 211 0
-204 207 0
-204 211 0
-205 208 0
-205 211 0
-206 -207 0
-206 -208 0
-207 -208 0
-209 -210 0
-209 -211 0
-210 -211 0
c Encoding variable: field_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00006' direct represents '1' with '212'
c Var 'field_00002_00006' direct represents '2' with '213'
c Var 'field_00002_00006' direct represents '3' with '214'
c Var 'field_00002_00006' direct represents '4' with '215'
c Var 'field_00002_00006' direct represents '5' with '216'
c Var 'field_00002_00006' direct represents '6' with '217'
c Var 'field_00002_00006' direct represents '7' with '218'
c Var 'field_00002_00006' direct represents '8' with '219'
c Var 'field_00002_00006' direct represents '9' with '220'
212 213 214 215 216 217 218 219 220 0
-212 221 0
-212 224 0
-213 222 0
-213 224 0
-214 223 0
-214 224 0
-215 221 0
-215 225 0
-216 222 0
-216 225 0
-217 223 0
-217 225 0
-218 221 0
-218 226 0
-219 222 0
-219 226 0
-220 223 0
-220 226 0
-221 -222 0
-221 -223 0
-222 -223 0
-224 -225 0
-224 -226 0
-225 -226 0
c Encoding variable: field_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00007' direct represents '1' with '227'
c Var 'field_00002_00007' direct represents '2' with '228'
c Var 'field_00002_00007' direct represents '3' with '229'
c Var 'field_00002_00007' direct represents '4' with '230'
c Var 'field_00002_00007' direct represents '5' with '231'
c Var 'field_00002_00007' direct represents '6' with '232'
c Var 'field_00002_00007' direct represents '7' with '233'
c Var 'field_00002_00007' direct represents '8' with '234'
c Var 'field_00002_00007' direct represents '9' with '235'
227 228 229 230 231 232 233 234 235 0
-227 236 0
-227 239 0
-228 237 0
-228 239 0
-229 238 0
-229 239 0
-230 236 0
-230 240 0
-231 237 0
-231 240 0
-232 238 0
-232 240 0
-233 236 0
-233 241 0
-234 237 0
-234 241 0
-235 238 0
-235 241 0
-236 -237 0
-236 -238 0
-237 -238 0
-239 -240 0
-239 -241 0
-240 -241 0
c Encoding variable: field_00002_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00008' direct represents '1' with '242'
c Var 'field_00002_00008' direct represents '2' with '243'
c Var 'field_00002_00008' direct represents '3' with '244'
c Var 'field_00002_00008' direct represents '4' with '245'
c Var 'field_00002_00008' direct represents '5' with '246'
c Var 'field_00002_00008' direct represents '6' with '247'
c Var 'field_00002_00008' direct represents '7' with '248'
c Var 'field_00002_00008' direct represents '8' with '249'
c Var 'field_00002_00008' direct represents '9' with '250'
242 243 244 245 246 247 248 249 250 0
-242 251 0
-242 254 0
-243 252 0
-243 254 0
-244 253 0
-244 254 0
-245 251 0
-245 255 0
-246 252 0
-246 255 0
-247 253 0
-247 255 0
-248 251 0
-248 256 0
-249 252 0
-249 256 0
-250 253 0
-250 256 0
-251 -252 0
-251 -253 0
-252 -253 0
-254 -255 0
-254 -256 0
-255 -256 0
c Encoding variable: field_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00009' direct represents '1' with '257'
c Var 'field_00002_00009' direct represents '2' with '258'
c Var 'field_00002_00009' direct represents '3' with '259'
c Var 'field_00002_00009' direct represents '4' with '260'
c Var 'field_00002_00009' direct represents '5' with '261'
c Var 'field_00002_00009' direct represents '6' with '262'
c Var 'field_00002_00009' direct represents '7' with '263'
c Var 'field_00002_00009' direct represents '8' with '264'
c Var 'field_00002_00009' direct represents '9' with '265'
257 258 259 260 261 262 263 264 265 0
-257 266 0
-257 269 0
-258 267 0
-258 269 0
-259 268 0
-259 269 0
-260 266 0
-260 270 0
-261 267 0
-261 270 0
-262 268 0
-262 270 0
-263 266 0
-263 271 0
-264 267 0
-264 271 0
-265 268 0
-265 271 0
-266 -267 0
-266 -268 0
-267 -268 0
-269 -270 0
-269 -271 0
-270 -271 0
c Encoding variable: field_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00001' direct represents '1' with '272'
c Var 'field_00003_00001' direct represents '2' with '273'
c Var 'field_00003_00001' direct represents '3' with '274'
c Var 'field_00003_00001' direct represents '4' with '275'
c Var 'field_00003_00001' direct represents '5' with '276'
c Var 'field_00003_00001' direct represents '6' with '277'
c Var 'field_00003_00001' direct represents '7' with '278'
c Var 'field_00003_00001' direct represents '8' with '279'
c Var 'field_00003_00001' direct represents '9' with '280'
272 273 274 275 276 277 278 279 280 0
-272 281 0
-272 284 0
-273 282 0
-273 284 0
-274 283 0
-274 284 0
-275 281 0
-275 285 0
-276 282 0
-276 285 0
-277 283 0
-277 285 0
-278 281 0
-278 286 0
-279 282 0
-279 286 0
-280 283 0
-280 286 0
-281 -282 0
-281 -283 0
-282 -283 0
-284 -285 0
-284 -286 0
-285 -286 0
c Encoding variable: field_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00002' direct represents '1' with '287'
c Var 'field_00003_00002' direct represents '2' with '288'
c Var 'field_00003_00002' direct represents '3' with '289'
c Var 'field_00003_00002' direct represents '4' with '290'
c Var 'field_00003_00002' direct represents '5' with '291'
c Var 'field_00003_00002' direct represents '6' with '292'
c Var 'field_00003_00002' direct represents '7' with '293'
c Var 'field_00003_00002' direct represents '8' with '294'
c Var 'field_00003_00002' direct represents '9' with '295'
287 288 289 290 291 292 293 294 295 0
-287 296 0
-287 299 0
-288 297 0
-288 299 0
-289 298 0
-289 299 0
-290 296 0
-290 300 0
-291 297 0
-291 300 0
-292 298 0
-292 300 0
-293 296 0
-293 301 0
-294 297 0
-294 301 0
-295 298 0
-295 301 0
-296 -297 0
-296 -298 0
-297 -298 0
-299 -300 0
-299 -301 0
-300 -301 0
c Encoding variable: field_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00003' direct represents '1' with '302'
c Var 'field_00003_00003' direct represents '2' with '303'
c Var 'field_00003_00003' direct represents '3' with '304'
c Var 'field_00003_00003' direct represents '4' with '305'
c Var 'field_00003_00003' direct represents '5' with '306'
c Var 'field_00003_00003' direct represents '6' with '307'
c Var 'field_00003_00003' direct represents '7' with '308'
c Var 'field_00003_00003' direct represents '8' with '309'
c Var 'field_00003_00003' direct represents '9' with '310'
302 303 304 305 306 307 308 309 310 0
-302 311 0
-302 314 0
-303 312 0
-303 314 0
-304 313 0
-304 314 0
-305 311 0
-305 315 0
-306 312 0
-306 315 0
-307 313 0
-307 315 0
-308 311 0
-308 316 0
-309 312 0
-309 316 0
-310 313 0
-310 316 0
-311 -312 0
-311 -313 0
-312 -313 0
-314 -315 0
-314 -316 0
-315 -316 0
c Encoding variable: field_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00004' direct represents '1' with '317'
c Var 'field_00003_00004' direct represents '2' with '318'
c Var 'field_00003_00004' direct represents '3' with '319'
c Var 'field_00003_00004' direct represents '4' with '320'
c Var 'field_00003_00004' direct represents '5' with '321'
c Var 'field_00003_00004' direct represents '6' with '322'
c Var 'field_00003_00004' direct represents '7' with '323'
c Var 'field_00003_00004' direct represents '8' with '324'
c Var 'field_00003_00004' direct represents '9' with '325'
317 318 319 320 321 322 323 324 325 0
-317 326 0
-317 329 0
-318 327 0
-318 329 0
-319 328 0
-319 329 0
-320 326 0
-320 330 0
-321 327 0
-321 330 0
-322 328 0
-322 330 0
-323 326 0
-323 331 0
-324 327 0
-324 331 0
-325 328 0
-325 331 0
-326 -327 0
-326 -328 0
-327 -328 0
-329 -330 0
-329 -331 0
-330 -331 0
c Encoding variable: field_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00005' direct represents '1' with '332'
c Var 'field_00003_00005' direct represents '2' with '333'
c Var 'field_00003_00005' direct represents '3' with '334'
c Var 'field_00003_00005' direct represents '4' with '335'
c Var 'field_00003_00005' direct represents '5' with '336'
c Var 'field_00003_00005' direct represents '6' with '337'
c Var 'field_00003_00005' direct represents '7' with '338'
c Var 'field_00003_00005' direct represents '8' with '339'
c Var 'field_00003_00005' direct represents '9' with '340'
332 333 334 335 336 337 338 339 340 0
-332 341 0
-332 344 0
-333 342 0
-333 344 0
-334 343 0
-334 344 0
-335 341 0
-335 345 0
-336 342 0
-336 345 0
-337 343 0
-337 345 0
-338 341 0
-338 346 0
-339 342 0
-339 346 0
-340 343 0
-340 346 0
-341 -342 0
-341 -343 0
-342 -343 0
-344 -345 0
-344 -346 0
-345 -346 0
c Encoding variable: field_00003_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00006' direct represents '1' with '347'
c Var 'field_00003_00006' direct represents '2' with '348'
c Var 'field_00003_00006' direct represents '3' with '349'
c Var 'field_00003_00006' direct represents '4' with '350'
c Var 'field_00003_00006' direct represents '5' with '351'
c Var 'field_00003_00006' direct represents '6' with '352'
c Var 'field_00003_00006' direct represents '7' with '353'
c Var 'field_00003_00006' direct represents '8' with '354'
c Var 'field_00003_00006' direct represents '9' with '355'
347 348 349 350 351 352 353 354 355 0
-347 356 0
-347 359 0
-348 357 0
-348 359 0
-349 358 0
-349 359 0
-350 356 0
-350 360 0
-351 357 0
-351 360 0
-352 358 0
-352 360 0
-353 356 0
-353 361 0
-354 357 0
-354 361 0
-355 358 0
-355 361 0
-356 -357 0
-356 -358 0
-357 -358 0
-359 -360 0
-359 -361 0
-360 -361 0
c Encoding variable: field_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00007' direct represents '1' with '362'
c Var 'field_00003_00007' direct represents '2' with '363'
c Var 'field_00003_00007' direct represents '3' with '364'
c Var 'field_00003_00007' direct represents '4' with '365'
c Var 'field_00003_00007' direct represents '5' with '366'
c Var 'field_00003_00007' direct represents '6' with '367'
c Var 'field_00003_00007' direct represents '7' with '368'
c Var 'field_00003_00007' direct represents '8' with '369'
c Var 'field_00003_00007' direct represents '9' with '370'
362 363 364 365 366 367 368 369 370 0
-362 371 0
-362 374 0
-363 372 0
-363 374 0
-364 373 0
-364 374 0
-365 371 0
-365 375 0
-366 372 0
-366 375 0
-367 373 0
-367 375 0
-368 371 0
-368 376 0
-369 372 0
-369 376 0
-370 373 0
-370 376 0
-371 -372 0
-371 -373 0
-372 -373 0
-374 -375 0
-374 -376 0
-375 -376 0
c Encoding variable: field_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00008' direct represents '1' with '377'
c Var 'field_00003_00008' direct represents '2' with '378'
c Var 'field_00003_00008' direct represents '3' with '379'
c Var 'field_00003_00008' direct represents '4' with '380'
c Var 'field_00003_00008' direct represents '5' with '381'
c Var 'field_00003_00008' direct represents '6' with '382'
c Var 'field_00003_00008' direct represents '7' with '383'
c Var 'field_00003_00008' direct represents '8' with '384'
c Var 'field_00003_00008' direct represents '9' with '385'
377 378 379 380 381 382 383 384 385 0
-377 386 0
-377 389 0
-378 387 0
-378 389 0
-379 388 0
-379 389 0
-380 386 0
-380 390 0
-381 387 0
-381 390 0
-382 388 0
-382 390 0
-383 386 0
-383 391 0
-384 387 0
-384 391 0
-385 388 0
-385 391 0
-386 -387 0
-386 -388 0
-387 -388 0
-389 -390 0
-389 -391 0
-390 -391 0
c Encoding variable: field_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00009' direct represents '1' with '392'
c Var 'field_00003_00009' direct represents '2' with '393'
c Var 'field_00003_00009' direct represents '3' with '394'
c Var 'field_00003_00009' direct represents '4' with '395'
c Var 'field_00003_00009' direct represents '5' with '396'
c Var 'field_00003_00009' direct represents '6' with '397'
c Var 'field_00003_00009' direct represents '7' with '398'
c Var 'field_00003_00009' direct represents '8' with '399'
c Var 'field_00003_00009' direct represents '9' with '400'
392 393 394 395 396 397 398 399 400 0
-392 401 0
-392 404 0
-393 402 0
-393 404 0
-394 403 0
-394 404 0
-395 401 0
-395 405 0
-396 402 0
-396 405 0
-397 403 0
-397 405 0
-398 401 0
-398 406 0
-399 402 0
-399 406 0
-400 403 0
-400 406 0
-401 -402 0
-401 -403 0
-402 -403 0
-404 -405 0
-404 -406 0
-405 -406 0
c Encoding variable: field_00004_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00001' direct represents '1' with '407'
c Var 'field_00004_00001' direct represents '2' with '408'
c Var 'field_00004_00001' direct represents '3' with '409'
c Var 'field_00004_00001' direct represents '4' with '410'
c Var 'field_00004_00001' direct represents '5' with '411'
c Var 'field_00004_00001' direct represents '6' with '412'
c Var 'field_00004_00001' direct represents '7' with '413'
c Var 'field_00004_00001' direct represents '8' with '414'
c Var 'field_00004_00001' direct represents '9' with '415'
407 408 409 410 411 412 413 414 415 0
-407 416 0
-407 419 0
-408 417 0
-408 419 0
-409 418 0
-409 419 0
-410 416 0
-410 420 0
-411 417 0
-411 420 0
-412 418 0
-412 420 0
-413 416 0
-413 421 0
-414 417 0
-414 421 0
-415 418 0
-415 421 0
-416 -417 0
-416 -418 0
-417 -418 0
-419 -420 0
-419 -421 0
-420 -421 0
c Encoding variable: field_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '422'
c Var 'field_00004_00002' direct represents '2' with '423'
c Var 'field_00004_00002' direct represents '3' with '424'
c Var 'field_00004_00002' direct represents '4' with '425'
c Var 'field_00004_00002' direct represents '5' with '426'
c Var 'field_00004_00002' direct represents '6' with '427'
c Var 'field_00004_00002' direct represents '7' with '428'
c Var 'field_00004_00002' direct represents '8' with '429'
c Var 'field_00004_00002' direct represents '9' with '430'
422 423 424 425 426 427 428 429 430 0
-422 431 0
-422 434 0
-423 432 0
-423 434 0
-424 433 0
-424 434 0
-425 431 0
-425 435 0
-426 432 0
-426 435 0
-427 433 0
-427 435 0
-428 431 0
-428 436 0
-429 432 0
-429 436 0
-430 433 0
-430 436 0
-431 -432 0
-431 -433 0
-432 -433 0
-434 -435 0
-434 -436 0
-435 -436 0
c Encoding variable: field_00004_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00003' direct represents '1' with '437'
c Var 'field_00004_00003' direct represents '2' with '438'
c Var 'field_00004_00003' direct represents '3' with '439'
c Var 'field_00004_00003' direct represents '4' with '440'
c Var 'field_00004_00003' direct represents '5' with '441'
c Var 'field_00004_00003' direct represents '6' with '442'
c Var 'field_00004_00003' direct represents '7' with '443'
c Var 'field_00004_00003' direct represents '8' with '444'
c Var 'field_00004_00003' direct represents '9' with '445'
437 438 439 440 441 442 443 444 445 0
-437 446 0
-437 449 0
-438 447 0
-438 449 0
-439 448 0
-439 449 0
-440 446 0
-440 450 0
-441 447 0
-441 450 0
-442 448 0
-442 450 0
-443 446 0
-443 451 0
-444 447 0
-444 451 0
-445 448 0
-445 451 0
-446 -447 0
-446 -448 0
-447 -448 0
-449 -450 0
-449 -451 0
-450 -451 0
c Encoding variable: field_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00004' direct represents '1' with '452'
c Var 'field_00004_00004' direct represents '2' with '453'
c Var 'field_00004_00004' direct represents '3' with '454'
c Var 'field_00004_00004' direct represents '4' with '455'
c Var 'field_00004_00004' direct represents '5' with '456'
c Var 'field_00004_00004' direct represents '6' with '457'
c Var 'field_00004_00004' direct represents '7' with '458'
c Var 'field_00004_00004' direct represents '8' with '459'
c Var 'field_00004_00004' direct represents '9' with '460'
452 453 454 455 456 457 458 459 460 0
-452 461 0
-452 464 0
-453 462 0
-453 464 0
-454 463 0
-454 464 0
-455 461 0
-455 465 0
-456 462 0
-456 465 0
-457 463 0
-457 465 0
-458 461 0
-458 466 0
-459 462 0
-459 466 0
-460 463 0
-460 466 0
-461 -462 0
-461 -463 0
-462 -463 0
-464 -465 0
-464 -466 0
-465 -466 0
c Encoding variable: field_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00005' direct represents '1' with '467'
c Var 'field_00004_00005' direct represents '2' with '468'
c Var 'field_00004_00005' direct represents '3' with '469'
c Var 'field_00004_00005' direct represents '4' with '470'
c Var 'field_00004_00005' direct represents '5' with '471'
c Var 'field_00004_00005' direct represents '6' with '472'
c Var 'field_00004_00005' direct represents '7' with '473'
c Var 'field_00004_00005' direct represents '8' with '474'
c Var 'field_00004_00005' direct represents '9' with '475'
467 468 469 470 471 472 473 474 475 0
-467 476 0
-467 479 0
-468 477 0
-468 479 0
-469 478 0
-469 479 0
-470 476 0
-470 480 0
-471 477 0
-471 480 0
-472 478 0
-472 480 0
-473 476 0
-473 481 0
-474 477 0
-474 481 0
-475 478 0
-475 481 0
-476 -477 0
-476 -478 0
-477 -478 0
-479 -480 0
-479 -481 0
-480 -481 0
c Encoding variable: field_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00006' direct represents '1' with '482'
c Var 'field_00004_00006' direct represents '2' with '483'
c Var 'field_00004_00006' direct represents '3' with '484'
c Var 'field_00004_00006' direct represents '4' with '485'
c Var 'field_00004_00006' direct represents '5' with '486'
c Var 'field_00004_00006' direct represents '6' with '487'
c Var 'field_00004_00006' direct represents '7' with '488'
c Var 'field_00004_00006' direct represents '8' with '489'
c Var 'field_00004_00006' direct represents '9' with '490'
482 483 484 485 486 487 488 489 490 0
-482 491 0
-482 494 0
-483 492 0
-483 494 0
-484 493 0
-484 494 0
-485 491 0
-485 495 0
-486 492 0
-486 495 0
-487 493 0
-487 495 0
-488 491 0
-488 496 0
-489 492 0
-489 496 0
-490 493 0
-490 496 0
-491 -492 0
-491 -493 0
-492 -493 0
-494 -495 0
-494 -496 0
-495 -496 0
c Encoding variable: field_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00007' direct represents '1' with '497'
c Var 'field_00004_00007' direct represents '2' with '498'
c Var 'field_00004_00007' direct represents '3' with '499'
c Var 'field_00004_00007' direct represents '4' with '500'
c Var 'field_00004_00007' direct represents '5' with '501'
c Var 'field_00004_00007' direct represents '6' with '502'
c Var 'field_00004_00007' direct represents '7' with '503'
c Var 'field_00004_00007' direct represents '8' with '504'
c Var 'field_00004_00007' direct represents '9' with '505'
497 498 499 500 501 502 503 504 505 0
-497 506 0
-497 509 0
-498 507 0
-498 509 0
-499 508 0
-499 509 0
-500 506 0
-500 510 0
-501 507 0
-501 510 0
-502 508 0
-502 510 0
-503 506 0
-503 511 0
-504 507 0
-504 511 0
-505 508 0
-505 511 0
-506 -507 0
-506 -508 0
-507 -508 0
-509 -510 0
-509 -511 0
-510 -511 0
c Encoding variable: field_00004_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00008' direct represents '1' with '512'
c Var 'field_00004_00008' direct represents '2' with '513'
c Var 'field_00004_00008' direct represents '3' with '514'
c Var 'field_00004_00008' direct represents '4' with '515'
c Var 'field_00004_00008' direct represents '5' with '516'
c Var 'field_00004_00008' direct represents '6' with '517'
c Var 'field_00004_00008' direct represents '7' with '518'
c Var 'field_00004_00008' direct represents '8' with '519'
c Var 'field_00004_00008' direct represents '9' with '520'
512 513 514 515 516 517 518 519 520 0
-512 521 0
-512 524 0
-513 522 0
-513 524 0
-514 523 0
-514 524 0
-515 521 0
-515 525 0
-516 522 0
-516 525 0
-517 523 0
-517 525 0
-518 521 0
-518 526 0
-519 522 0
-519 526 0
-520 523 0
-520 526 0
-521 -522 0
-521 -523 0
-522 -523 0
-524 -525 0
-524 -526 0
-525 -526 0
c Encoding variable: field_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00009' direct represents '1' with '527'
c Var 'field_00004_00009' direct represents '2' with '528'
c Var 'field_00004_00009' direct represents '3' with '529'
c Var 'field_00004_00009' direct represents '4' with '530'
c Var 'field_00004_00009' direct represents '5' with '531'
c Var 'field_00004_00009' direct represents '6' with '532'
c Var 'field_00004_00009' direct represents '7' with '533'
c Var 'field_00004_00009' direct represents '8' with '534'
c Var 'field_00004_00009' direct represents '9' with '535'
527 528 529 530 531 532 533 534 535 0
-527 536 0
-527 539 0
-528 537 0
-528 539 0
-529 538 0
-529 539 0
-530 536 0
-530 540 0
-531 537 0
-531 540 0
-532 538 0
-532 540 0
-533 536 0
-533 541 0
-534 537 0
-534 541 0
-535 538 0
-535 541 0
-536 -537 0
-536 -538 0
-537 -538 0
-539 -540 0
-539 -541 0
-540 -541 0
c Encoding variable: field_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00001' direct represents '1' with '542'
c Var 'field_00005_00001' direct represents '2' with '543'
c Var 'field_00005_00001' direct represents '3' with '544'
c Var 'field_00005_00001' direct represents '4' with '545'
c Var 'field_00005_00001' direct represents '5' with '546'
c Var 'field_00005_00001' direct represents '6' with '547'
c Var 'field_00005_00001' direct represents '7' with '548'
c Var 'field_00005_00001' direct represents '8' with '549'
c Var 'field_00005_00001' direct represents '9' with '550'
542 543 544 545 546 547 548 549 550 0
-542 551 0
-542 554 0
-543 552 0
-543 554 0
-544 553 0
-544 554 0
-545 551 0
-545 555 0
-546 552 0
-546 555 0
-547 553 0
-547 555 0
-548 551 0
-548 556 0
-549 552 0
-549 556 0
-550 553 0
-550 556 0
-551 -552 0
-551 -553 0
-552 -553 0
-554 -555 0
-554 -556 0
-555 -556 0
c Encoding variable: field_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00002' direct represents '1' with '557'
c Var 'field_00005_00002' direct represents '2' with '558'
c Var 'field_00005_00002' direct represents '3' with '559'
c Var 'field_00005_00002' direct represents '4' with '560'
c Var 'field_00005_00002' direct represents '5' with '561'
c Var 'field_00005_00002' direct represents '6' with '562'
c Var 'field_00005_00002' direct represents '7' with '563'
c Var 'field_00005_00002' direct represents '8' with '564'
c Var 'field_00005_00002' direct represents '9' with '565'
557 558 559 560 561 562 563 564 565 0
-557 566 0
-557 569 0
-558 567 0
-558 569 0
-559 568 0
-559 569 0
-560 566 0
-560 570 0
-561 567 0
-561 570 0
-562 568 0
-562 570 0
-563 566 0
-563 571 0
-564 567 0
-564 571 0
-565 568 0
-565 571 0
-566 -567 0
-566 -568 0
-567 -568 0
-569 -570 0
-569 -571 0
-570 -571 0
c Encoding variable: field_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00003' direct represents '1' with '572'
c Var 'field_00005_00003' direct represents '2' with '573'
c Var 'field_00005_00003' direct represents '3' with '574'
c Var 'field_00005_00003' direct represents '4' with '575'
c Var 'field_00005_00003' direct represents '5' with '576'
c Var 'field_00005_00003' direct represents '6' with '577'
c Var 'field_00005_00003' direct represents '7' with '578'
c Var 'field_00005_00003' direct represents '8' with '579'
c Var 'field_00005_00003' direct represents '9' with '580'
572 573 574 575 576 577 578 579 580 0
-572 581 0
-572 584 0
-573 582 0
-573 584 0
-574 583 0
-574 584 0
-575 581 0
-575 585 0
-576 582 0
-576 585 0
-577 583 0
-577 585 0
-578 581 0
-578 586 0
-579 582 0
-579 586 0
-580 583 0
-580 586 0
-581 -582 0
-581 -583 0
-582 -583 0
-584 -585 0
-584 -586 0
-585 -586 0
c Encoding variable: field_00005_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00004' direct represents '1' with '587'
c Var 'field_00005_00004' direct represents '2' with '588'
c Var 'field_00005_00004' direct represents '3' with '589'
c Var 'field_00005_00004' direct represents '4' with '590'
c Var 'field_00005_00004' direct represents '5' with '591'
c Var 'field_00005_00004' direct represents '6' with '592'
c Var 'field_00005_00004' direct represents '7' with '593'
c Var 'field_00005_00004' direct represents '8' with '594'
c Var 'field_00005_00004' direct represents '9' with '595'
587 588 589 590 591 592 593 594 595 0
-587 596 0
-587 599 0
-588 597 0
-588 599 0
-589 598 0
-589 599 0
-590 596 0
-590 600 0
-591 597 0
-591 600 0
-592 598 0
-592 600 0
-593 596 0
-593 601 0
-594 597 0
-594 601 0
-595 598 0
-595 601 0
-596 -597 0
-596 -598 0
-597 -598 0
-599 -600 0
-599 -601 0
-600 -601 0
c Encoding variable: field_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00005' direct represents '1' with '602'
c Var 'field_00005_00005' direct represents '2' with '603'
c Var 'field_00005_00005' direct represents '3' with '604'
c Var 'field_00005_00005' direct represents '4' with '605'
c Var 'field_00005_00005' direct represents '5' with '606'
c Var 'field_00005_00005' direct represents '6' with '607'
c Var 'field_00005_00005' direct represents '7' with '608'
c Var 'field_00005_00005' direct represents '8' with '609'
c Var 'field_00005_00005' direct represents '9' with '610'
602 603 604 605 606 607 608 609 610 0
-602 611 0
-602 614 0
-603 612 0
-603 614 0
-604 613 0
-604 614 0
-605 611 0
-605 615 0
-606 612 0
-606 615 0
-607 613 0
-607 615 0
-608 611 0
-608 616 0
-609 612 0
-609 616 0
-610 613 0
-610 616 0
-611 -612 0
-611 -613 0
-612 -613 0
-614 -615 0
-614 -616 0
-615 -616 0
c Encoding variable: field_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00006' direct represents '1' with '617'
c Var 'field_00005_00006' direct represents '2' with '618'
c Var 'field_00005_00006' direct represents '3' with '619'
c Var 'field_00005_00006' direct represents '4' with '620'
c Var 'field_00005_00006' direct represents '5' with '621'
c Var 'field_00005_00006' direct represents '6' with '622'
c Var 'field_00005_00006' direct represents '7' with '623'
c Var 'field_00005_00006' direct represents '8' with '624'
c Var 'field_00005_00006' direct represents '9' with '625'
617 618 619 620 621 622 623 624 625 0
-617 626 0
-617 629 0
-618 627 0
-618 629 0
-619 628 0
-619 629 0
-620 626 0
-620 630 0
-621 627 0
-621 630 0
-622 628 0
-622 630 0
-623 626 0
-623 631 0
-624 627 0
-624 631 0
-625 628 0
-625 631 0
-626 -627 0
-626 -628 0
-627 -628 0
-629 -630 0
-629 -631 0
-630 -631 0
c Encoding variable: field_00005_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00007' direct represents '1' with '632'
c Var 'field_00005_00007' direct represents '2' with '633'
c Var 'field_00005_00007' direct represents '3' with '634'
c Var 'field_00005_00007' direct represents '4' with '635'
c Var 'field_00005_00007' direct represents '5' with '636'
c Var 'field_00005_00007' direct represents '6' with '637'
c Var 'field_00005_00007' direct represents '7' with '638'
c Var 'field_00005_00007' direct represents '8' with '639'
c Var 'field_00005_00007' direct represents '9' with '640'
632 633 634 635 636 637 638 639 640 0
-632 641 0
-632 644 0
-633 642 0
-633 644 0
-634 643 0
-634 644 0
-635 641 0
-635 645 0
-636 642 0
-636 645 0
-637 643 0
-637 645 0
-638 641 0
-638 646 0
-639 642 0
-639 646 0
-640 643 0
-640 646 0
-641 -642 0
-641 -643 0
-642 -643 0
-644 -645 0
-644 -646 0
-645 -646 0
c Encoding variable: field_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00008' direct represents '1' with '647'
c Var 'field_00005_00008' direct represents '2' with '648'
c Var 'field_00005_00008' direct represents '3' with '649'
c Var 'field_00005_00008' direct represents '4' with '650'
c Var 'field_00005_00008' direct represents '5' with '651'
c Var 'field_00005_00008' direct represents '6' with '652'
c Var 'field_00005_00008' direct represents '7' with '653'
c Var 'field_00005_00008' direct represents '8' with '654'
c Var 'field_00005_00008' direct represents '9' with '655'
647 648 649 650 651 652 653 654 655 0
-647 656 0
-647 659 0
-648 657 0
-648 659 0
-649 658 0
-649 659 0
-650 656 0
-650 660 0
-651 657 0
-651 660 0
-652 658 0
-652 660 0
-653 656 0
-653 661 0
-654 657 0
-654 661 0
-655 658 0
-655 661 0
-656 -657 0
-656 -658 0
-657 -658 0
-659 -660 0
-659 -661 0
-660 -661 0
c Encoding variable: field_00005_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00009' direct represents '1' with '662'
c Var 'field_00005_00009' direct represents '2' with '663'
c Var 'field_00005_00009' direct represents '3' with '664'
c Var 'field_00005_00009' direct represents '4' with '665'
c Var 'field_00005_00009' direct represents '5' with '666'
c Var 'field_00005_00009' direct represents '6' with '667'
c Var 'field_00005_00009' direct represents '7' with '668'
c Var 'field_00005_00009' direct represents '8' with '669'
c Var 'field_00005_00009' direct represents '9' with '670'
662 663 664 665 666 667 668 669 670 0
-662 671 0
-662 674 0
-663 672 0
-663 674 0
-664 673 0
-664 674 0
-665 671 0
-665 675 0
-666 672 0
-666 675 0
-667 673 0
-667 675 0
-668 671 0
-668 676 0
-669 672 0
-669 676 0
-670 673 0
-670 676 0
-671 -672 0
-671 -673 0
-672 -673 0
-674 -675 0
-674 -676 0
-675 -676 0
c Encoding variable: field_00006_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00001' direct represents '1' with '677'
c Var 'field_00006_00001' direct represents '2' with '678'
c Var 'field_00006_00001' direct represents '3' with '679'
c Var 'field_00006_00001' direct represents '4' with '680'
c Var 'field_00006_00001' direct represents '5' with '681'
c Var 'field_00006_00001' direct represents '6' with '682'
c Var 'field_00006_00001' direct represents '7' with '683'
c Var 'field_00006_00001' direct represents '8' with '684'
c Var 'field_00006_00001' direct represents '9' with '685'
677 678 679 680 681 682 683 684 685 0
-677 686 0
-677 689 0
-678 687 0
-678 689 0
-679 688 0
-679 689 0
-680 686 0
-680 690 0
-681 687 0
-681 690 0
-682 688 0
-682 690 0
-683 686 0
-683 691 0
-684 687 0
-684 691 0
-685 688 0
-685 691 0
-686 -687 0
-686 -688 0
-687 -688 0
-689 -690 0
-689 -691 0
-690 -691 0
c Encoding variable: field_00006_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00002' direct represents '1' with '692'
c Var 'field_00006_00002' direct represents '2' with '693'
c Var 'field_00006_00002' direct represents '3' with '694'
c Var 'field_00006_00002' direct represents '4' with '695'
c Var 'field_00006_00002' direct represents '5' with '696'
c Var 'field_00006_00002' direct represents '6' with '697'
c Var 'field_00006_00002' direct represents '7' with '698'
c Var 'field_00006_00002' direct represents '8' with '699'
c Var 'field_00006_00002' direct represents '9' with '700'
692 693 694 695 696 697 698 699 700 0
-692 701 0
-692 704 0
-693 702 0
-693 704 0
-694 703 0
-694 704 0
-695 701 0
-695 705 0
-696 702 0
-696 705 0
-697 703 0
-697 705 0
-698 701 0
-698 706 0
-699 702 0
-699 706 0
-700 703 0
-700 706 0
-701 -702 0
-701 -703 0
-702 -703 0
-704 -705 0
-704 -706 0
-705 -706 0
c Encoding variable: field_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00003' direct represents '1' with '707'
c Var 'field_00006_00003' direct represents '2' with '708'
c Var 'field_00006_00003' direct represents '3' with '709'
c Var 'field_00006_00003' direct represents '4' with '710'
c Var 'field_00006_00003' direct represents '5' with '711'
c Var 'field_00006_00003' direct represents '6' with '712'
c Var 'field_00006_00003' direct represents '7' with '713'
c Var 'field_00006_00003' direct represents '8' with '714'
c Var 'field_00006_00003' direct represents '9' with '715'
707 708 709 710 711 712 713 714 715 0
-707 716 0
-707 719 0
-708 717 0
-708 719 0
-709 718 0
-709 719 0
-710 716 0
-710 720 0
-711 717 0
-711 720 0
-712 718 0
-712 720 0
-713 716 0
-713 721 0
-714 717 0
-714 721 0
-715 718 0
-715 721 0
-716 -717 0
-716 -718 0
-717 -718 0
-719 -720 0
-719 -721 0
-720 -721 0
c Encoding variable: field_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00004' direct represents '1' with '722'
c Var 'field_00006_00004' direct represents '2' with '723'
c Var 'field_00006_00004' direct represents '3' with '724'
c Var 'field_00006_00004' direct represents '4' with '725'
c Var 'field_00006_00004' direct represents '5' with '726'
c Var 'field_00006_00004' direct represents '6' with '727'
c Var 'field_00006_00004' direct represents '7' with '728'
c Var 'field_00006_00004' direct represents '8' with '729'
c Var 'field_00006_00004' direct represents '9' with '730'
722 723 724 725 726 727 728 729 730 0
-722 731 0
-722 734 0
-723 732 0
-723 734 0
-724 733 0
-724 734 0
-725 731 0
-725 735 0
-726 732 0
-726 735 0
-727 733 0
-727 735 0
-728 731 0
-728 736 0
-729 732 0
-729 736 0
-730 733 0
-730 736 0
-731 -732 0
-731 -733 0
-732 -733 0
-734 -735 0
-734 -736 0
-735 -736 0
c Encoding variable: field_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00005' direct represents '1' with '737'
c Var 'field_00006_00005' direct represents '2' with '738'
c Var 'field_00006_00005' direct represents '3' with '739'
c Var 'field_00006_00005' direct represents '4' with '740'
c Var 'field_00006_00005' direct represents '5' with '741'
c Var 'field_00006_00005' direct represents '6' with '742'
c Var 'field_00006_00005' direct represents '7' with '743'
c Var 'field_00006_00005' direct represents '8' with '744'
c Var 'field_00006_00005' direct represents '9' with '745'
737 738 739 740 741 742 743 744 745 0
-737 746 0
-737 749 0
-738 747 0
-738 749 0
-739 748 0
-739 749 0
-740 746 0
-740 750 0
-741 747 0
-741 750 0
-742 748 0
-742 750 0
-743 746 0
-743 751 0
-744 747 0
-744 751 0
-745 748 0
-745 751 0
-746 -747 0
-746 -748 0
-747 -748 0
-749 -750 0
-749 -751 0
-750 -751 0
c Encoding variable: field_00006_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00006' direct represents '1' with '752'
c Var 'field_00006_00006' direct represents '2' with '753'
c Var 'field_00006_00006' direct represents '3' with '754'
c Var 'field_00006_00006' direct represents '4' with '755'
c Var 'field_00006_00006' direct represents '5' with '756'
c Var 'field_00006_00006' direct represents '6' with '757'
c Var 'field_00006_00006' direct represents '7' with '758'
c Var 'field_00006_00006' direct represents '8' with '759'
c Var 'field_00006_00006' direct represents '9' with '760'
752 753 754 755 756 757 758 759 760 0
-752 761 0
-752 764 0
-753 762 0
-753 764 0
-754 763 0
-754 764 0
-755 761 0
-755 765 0
-756 762 0
-756 765 0
-757 763 0
-757 765 0
-758 761 0
-758 766 0
-759 762 0
-759 766 0
-760 763 0
-760 766 0
-761 -762 0
-761 -763 0
-762 -763 0
-764 -765 0
-764 -766 0
-765 -766 0
c Encoding variable: field_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00007' direct represents '1' with '767'
c Var 'field_00006_00007' direct represents '2' with '768'
c Var 'field_00006_00007' direct represents '3' with '769'
c Var 'field_00006_00007' direct represents '4' with '770'
c Var 'field_00006_00007' direct represents '5' with '771'
c Var 'field_00006_00007' direct represents '6' with '772'
c Var 'field_00006_00007' direct represents '7' with '773'
c Var 'field_00006_00007' direct represents '8' with '774'
c Var 'field_00006_00007' direct represents '9' with '775'
767 768 769 770 771 772 773 774 775 0
-767 776 0
-767 779 0
-768 777 0
-768 779 0
-769 778 0
-769 779 0
-770 776 0
-770 780 0
-771 777 0
-771 780 0
-772 778 0
-772 780 0
-773 776 0
-773 781 0
-774 777 0
-774 781 0
-775 778 0
-775 781 0
-776 -777 0
-776 -778 0
-777 -778 0
-779 -780 0
-779 -781 0
-780 -781 0
c Encoding variable: field_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00008' direct represents '1' with '782'
c Var 'field_00006_00008' direct represents '2' with '783'
c Var 'field_00006_00008' direct represents '3' with '784'
c Var 'field_00006_00008' direct represents '4' with '785'
c Var 'field_00006_00008' direct represents '5' with '786'
c Var 'field_00006_00008' direct represents '6' with '787'
c Var 'field_00006_00008' direct represents '7' with '788'
c Var 'field_00006_00008' direct represents '8' with '789'
c Var 'field_00006_00008' direct represents '9' with '790'
782 783 784 785 786 787 788 789 790 0
-782 791 0
-782 794 0
-783 792 0
-783 794 0
-784 793 0
-784 794 0
-785 791 0
-785 795 0
-786 792 0
-786 795 0
-787 793 0
-787 795 0
-788 791 0
-788 796 0
-789 792 0
-789 796 0
-790 793 0
-790 796 0
-791 -792 0
-791 -793 0
-792 -793 0
-794 -795 0
-794 -796 0
-795 -796 0
c Encoding variable: field_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00009' direct represents '1' with '797'
c Var 'field_00006_00009' direct represents '2' with '798'
c Var 'field_00006_00009' direct represents '3' with '799'
c Var 'field_00006_00009' direct represents '4' with '800'
c Var 'field_00006_00009' direct represents '5' with '801'
c Var 'field_00006_00009' direct represents '6' with '802'
c Var 'field_00006_00009' direct represents '7' with '803'
c Var 'field_00006_00009' direct represents '8' with '804'
c Var 'field_00006_00009' direct represents '9' with '805'
797 798 799 800 801 802 803 804 805 0
-797 806 0
-797 809 0
-798 807 0
-798 809 0
-799 808 0
-799 809 0
-800 806 0
-800 810 0
-801 807 0
-801 810 0
-802 808 0
-802 810 0
-803 806 0
-803 811 0
-804 807 0
-804 811 0
-805 808 0
-805 811 0
-806 -807 0
-806 -808 0
-807 -808 0
-809 -810 0
-809 -811 0
-810 -811 0
c Encoding variable: field_00007_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00001' direct represents '1' with '812'
c Var 'field_00007_00001' direct represents '2' with '813'
c Var 'field_00007_00001' direct represents '3' with '814'
c Var 'field_00007_00001' direct represents '4' with '815'
c Var 'field_00007_00001' direct represents '5' with '816'
c Var 'field_00007_00001' direct represents '6' with '817'
c Var 'field_00007_00001' direct represents '7' with '818'
c Var 'field_00007_00001' direct represents '8' with '819'
c Var 'field_00007_00001' direct represents '9' with '820'
812 813 814 815 816 817 818 819 820 0
-812 821 0
-812 824 0
-813 822 0
-813 824 0
-814 823 0
-814 824 0
-815 821 0
-815 825 0
-816 822 0
-816 825 0
-817 823 0
-817 825 0
-818 821 0
-818 826 0
-819 822 0
-819 826 0
-820 823 0
-820 826 0
-821 -822 0
-821 -823 0
-822 -823 0
-824 -825 0
-824 -826 0
-825 -826 0
c Encoding variable: field_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00002' direct represents '1' with '827'
c Var 'field_00007_00002' direct represents '2' with '828'
c Var 'field_00007_00002' direct represents '3' with '829'
c Var 'field_00007_00002' direct represents '4' with '830'
c Var 'field_00007_00002' direct represents '5' with '831'
c Var 'field_00007_00002' direct represents '6' with '832'
c Var 'field_00007_00002' direct represents '7' with '833'
c Var 'field_00007_00002' direct represents '8' with '834'
c Var 'field_00007_00002' direct represents '9' with '835'
827 828 829 830 831 832 833 834 835 0
-827 836 0
-827 839 0
-828 837 0
-828 839 0
-829 838 0
-829 839 0
-830 836 0
-830 840 0
-831 837 0
-831 840 0
-832 838 0
-832 840 0
-833 836 0
-833 841 0
-834 837 0
-834 841 0
-835 838 0
-835 841 0
-836 -837 0
-836 -838 0
-837 -838 0
-839 -840 0
-839 -841 0
-840 -841 0
c Encoding variable: field_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00003' direct represents '1' with '842'
c Var 'field_00007_00003' direct represents '2' with '843'
c Var 'field_00007_00003' direct represents '3' with '844'
c Var 'field_00007_00003' direct represents '4' with '845'
c Var 'field_00007_00003' direct represents '5' with '846'
c Var 'field_00007_00003' direct represents '6' with '847'
c Var 'field_00007_00003' direct represents '7' with '848'
c Var 'field_00007_00003' direct represents '8' with '849'
c Var 'field_00007_00003' direct represents '9' with '850'
842 843 844 845 846 847 848 849 850 0
-842 851 0
-842 854 0
-843 852 0
-843 854 0
-844 853 0
-844 854 0
-845 851 0
-845 855 0
-846 852 0
-846 855 0
-847 853 0
-847 855 0
-848 851 0
-848 856 0
-849 852 0
-849 856 0
-850 853 0
-850 856 0
-851 -852 0
-851 -853 0
-852 -853 0
-854 -855 0
-854 -856 0
-855 -856 0
c Encoding variable: field_00007_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00004' direct represents '1' with '857'
c Var 'field_00007_00004' direct represents '2' with '858'
c Var 'field_00007_00004' direct represents '3' with '859'
c Var 'field_00007_00004' direct represents '4' with '860'
c Var 'field_00007_00004' direct represents '5' with '861'
c Var 'field_00007_00004' direct represents '6' with '862'
c Var 'field_00007_00004' direct represents '7' with '863'
c Var 'field_00007_00004' direct represents '8' with '864'
c Var 'field_00007_00004' direct represents '9' with '865'
857 858 859 860 861 862 863 864 865 0
-857 866 0
-857 869 0
-858 867 0
-858 869 0
-859 868 0
-859 869 0
-860 866 0
-860 870 0
-861 867 0
-861 870 0
-862 868 0
-862 870 0
-863 866 0
-863 871 0
-864 867 0
-864 871 0
-865 868 0
-865 871 0
-866 -867 0
-866 -868 0
-867 -868 0
-869 -870 0
-869 -871 0
-870 -871 0
c Encoding variable: field_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00005' direct represents '1' with '872'
c Var 'field_00007_00005' direct represents '2' with '873'
c Var 'field_00007_00005' direct represents '3' with '874'
c Var 'field_00007_00005' direct represents '4' with '875'
c Var 'field_00007_00005' direct represents '5' with '876'
c Var 'field_00007_00005' direct represents '6' with '877'
c Var 'field_00007_00005' direct represents '7' with '878'
c Var 'field_00007_00005' direct represents '8' with '879'
c Var 'field_00007_00005' direct represents '9' with '880'
872 873 874 875 876 877 878 879 880 0
-872 881 0
-872 884 0
-873 882 0
-873 884 0
-874 883 0
-874 884 0
-875 881 0
-875 885 0
-876 882 0
-876 885 0
-877 883 0
-877 885 0
-878 881 0
-878 886 0
-879 882 0
-879 886 0
-880 883 0
-880 886 0
-881 -882 0
-881 -883 0
-882 -883 0
-884 -885 0
-884 -886 0
-885 -886 0
c Encoding variable: field_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00006' direct represents '1' with '887'
c Var 'field_00007_00006' direct represents '2' with '888'
c Var 'field_00007_00006' direct represents '3' with '889'
c Var 'field_00007_00006' direct represents '4' with '890'
c Var 'field_00007_00006' direct represents '5' with '891'
c Var 'field_00007_00006' direct represents '6' with '892'
c Var 'field_00007_00006' direct represents '7' with '893'
c Var 'field_00007_00006' direct represents '8' with '894'
c Var 'field_00007_00006' direct represents '9' with '895'
887 888 889 890 891 892 893 894 895 0
-887 896 0
-887 899 0
-888 897 0
-888 899 0
-889 898 0
-889 899 0
-890 896 0
-890 900 0
-891 897 0
-891 900 0
-892 898 0
-892 900 0
-893 896 0
-893 901 0
-894 897 0
-894 901 0
-895 898 0
-895 901 0
-896 -897 0
-896 -898 0
-897 -898 0
-899 -900 0
-899 -901 0
-900 -901 0
c Encoding variable: field_00007_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00007' direct represents '1' with '902'
c Var 'field_00007_00007' direct represents '2' with '903'
c Var 'field_00007_00007' direct represents '3' with '904'
c Var 'field_00007_00007' direct represents '4' with '905'
c Var 'field_00007_00007' direct represents '5' with '906'
c Var 'field_00007_00007' direct represents '6' with '907'
c Var 'field_00007_00007' direct represents '7' with '908'
c Var 'field_00007_00007' direct represents '8' with '909'
c Var 'field_00007_00007' direct represents '9' with '910'
902 903 904 905 906 907 908 909 910 0
-902 911 0
-902 914 0
-903 912 0
-903 914 0
-904 913 0
-904 914 0
-905 911 0
-905 915 0
-906 912 0
-906 915 0
-907 913 0
-907 915 0
-908 911 0
-908 916 0
-909 912 0
-909 916 0
-910 913 0
-910 916 0
-911 -912 0
-911 -913 0
-912 -913 0
-914 -915 0
-914 -916 0
-915 -916 0
c Encoding variable: field_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00008' direct represents '1' with '917'
c Var 'field_00007_00008' direct represents '2' with '918'
c Var 'field_00007_00008' direct represents '3' with '919'
c Var 'field_00007_00008' direct represents '4' with '920'
c Var 'field_00007_00008' direct represents '5' with '921'
c Var 'field_00007_00008' direct represents '6' with '922'
c Var 'field_00007_00008' direct represents '7' with '923'
c Var 'field_00007_00008' direct represents '8' with '924'
c Var 'field_00007_00008' direct represents '9' with '925'
917 918 919 920 921 922 923 924 925 0
-917 926 0
-917 929 0
-918 927 0
-918 929 0
-919 928 0
-919 929 0
-920 926 0
-920 930 0
-921 927 0
-921 930 0
-922 928 0
-922 930 0
-923 926 0
-923 931 0
-924 927 0
-924 931 0
-925 928 0
-925 931 0
-926 -927 0
-926 -928 0
-927 -928 0
-929 -930 0
-929 -931 0
-930 -931 0
c Encoding variable: field_00007_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00009' direct represents '1' with '932'
c Var 'field_00007_00009' direct represents '2' with '933'
c Var 'field_00007_00009' direct represents '3' with '934'
c Var 'field_00007_00009' direct represents '4' with '935'
c Var 'field_00007_00009' direct represents '5' with '936'
c Var 'field_00007_00009' direct represents '6' with '937'
c Var 'field_00007_00009' direct represents '7' with '938'
c Var 'field_00007_00009' direct represents '8' with '939'
c Var 'field_00007_00009' direct represents '9' with '940'
932 933 934 935 936 937 938 939 940 0
-932 941 0
-932 944 0
-933 942 0
-933 944 0
-934 943 0
-934 944 0
-935 941 0
-935 945 0
-936 942 0
-936 945 0
-937 943 0
-937 945 0
-938 941 0
-938 946 0
-939 942 0
-939 946 0
-940 943 0
-940 946 0
-941 -942 0
-941 -943 0
-942 -943 0
-944 -945 0
-944 -946 0
-945 -946 0
c Encoding variable: field_00008_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00001' direct represents '1' with '947'
c Var 'field_00008_00001' direct represents '2' with '948'
c Var 'field_00008_00001' direct represents '3' with '949'
c Var 'field_00008_00001' direct represents '4' with '950'
c Var 'field_00008_00001' direct represents '5' with '951'
c Var 'field_00008_00001' direct represents '6' with '952'
c Var 'field_00008_00001' direct represents '7' with '953'
c Var 'field_00008_00001' direct represents '8' with '954'
c Var 'field_00008_00001' direct represents '9' with '955'
947 948 949 950 951 952 953 954 955 0
-947 956 0
-947 959 0
-948 957 0
-948 959 0
-949 958 0
-949 959 0
-950 956 0
-950 960 0
-951 957 0
-951 960 0
-952 958 0
-952 960 0
-953 956 0
-953 961 0
-954 957 0
-954 961 0
-955 958 0
-955 961 0
-956 -957 0
-956 -958 0
-957 -958 0
-959 -960 0
-959 -961 0
-960 -961 0
c Encoding variable: field_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00002' direct represents '1' with '962'
c Var 'field_00008_00002' direct represents '2' with '963'
c Var 'field_00008_00002' direct represents '3' with '964'
c Var 'field_00008_00002' direct represents '4' with '965'
c Var 'field_00008_00002' direct represents '5' with '966'
c Var 'field_00008_00002' direct represents '6' with '967'
c Var 'field_00008_00002' direct represents '7' with '968'
c Var 'field_00008_00002' direct represents '8' with '969'
c Var 'field_00008_00002' direct represents '9' with '970'
962 963 964 965 966 967 968 969 970 0
-962 971 0
-962 974 0
-963 972 0
-963 974 0
-964 973 0
-964 974 0
-965 971 0
-965 975 0
-966 972 0
-966 975 0
-967 973 0
-967 975 0
-968 971 0
-968 976 0
-969 972 0
-969 976 0
-970 973 0
-970 976 0
-971 -972 0
-971 -973 0
-972 -973 0
-974 -975 0
-974 -976 0
-975 -976 0
c Encoding variable: field_00008_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00003' direct represents '1' with '977'
c Var 'field_00008_00003' direct represents '2' with '978'
c Var 'field_00008_00003' direct represents '3' with '979'
c Var 'field_00008_00003' direct represents '4' with '980'
c Var 'field_00008_00003' direct represents '5' with '981'
c Var 'field_00008_00003' direct represents '6' with '982'
c Var 'field_00008_00003' direct represents '7' with '983'
c Var 'field_00008_00003' direct represents '8' with '984'
c Var 'field_00008_00003' direct represents '9' with '985'
977 978 979 980 981 982 983 984 985 0
-977 986 0
-977 989 0
-978 987 0
-978 989 0
-979 988 0
-979 989 0
-980 986 0
-980 990 0
-981 987 0
-981 990 0
-982 988 0
-982 990 0
-983 986 0
-983 991 0
-984 987 0
-984 991 0
-985 988 0
-985 991 0
-986 -987 0
-986 -988 0
-987 -988 0
-989 -990 0
-989 -991 0
-990 -991 0
c Encoding variable: field_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00004' direct represents '1' with '992'
c Var 'field_00008_00004' direct represents '2' with '993'
c Var 'field_00008_00004' direct represents '3' with '994'
c Var 'field_00008_00004' direct represents '4' with '995'
c Var 'field_00008_00004' direct represents '5' with '996'
c Var 'field_00008_00004' direct represents '6' with '997'
c Var 'field_00008_00004' direct represents '7' with '998'
c Var 'field_00008_00004' direct represents '8' with '999'
c Var 'field_00008_00004' direct represents '9' with '1000'
992 993 994 995 996 997 998 999 1000 0
-992 1001 0
-992 1004 0
-993 1002 0
-993 1004 0
-994 1003 0
-994 1004 0
-995 1001 0
-995 1005 0
-996 1002 0
-996 1005 0
-997 1003 0
-997 1005 0
-998 1001 0
-998 1006 0
-999 1002 0
-999 1006 0
-1000 1003 0
-1000 1006 0
-1001 -1002 0
-1001 -1003 0
-1002 -1003 0
-1004 -1005 0
-1004 -1006 0
-1005 -1006 0
c Encoding variable: field_00008_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00005' direct represents '1' with '1007'
c Var 'field_00008_00005' direct represents '2' with '1008'
c Var 'field_00008_00005' direct represents '3' with '1009'
c Var 'field_00008_00005' direct represents '4' with '1010'
c Var 'field_00008_00005' direct represents '5' with '1011'
c Var 'field_00008_00005' direct represents '6' with '1012'
c Var 'field_00008_00005' direct represents '7' with '1013'
c Var 'field_00008_00005' direct represents '8' with '1014'
c Var 'field_00008_00005' direct represents '9' with '1015'
1007 1008 1009 1010 1011 1012 1013 1014 1015 0
-1007 1016 0
-1007 1019 0
-1008 1017 0
-1008 1019 0
-1009 1018 0
-1009 1019 0
-1010 1016 0
-1010 1020 0
-1011 1017 0
-1011 1020 0
-1012 1018 0
-1012 1020 0
-1013 1016 0
-1013 1021 0
-1014 1017 0
-1014 1021 0
-1015 1018 0
-1015 1021 0
-1016 -1017 0
-1016 -1018 0
-1017 -1018 0
-1019 -1020 0
-1019 -1021 0
-1020 -1021 0
c Encoding variable: field_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00006' direct represents '1' with '1022'
c Var 'field_00008_00006' direct represents '2' with '1023'
c Var 'field_00008_00006' direct represents '3' with '1024'
c Var 'field_00008_00006' direct represents '4' with '1025'
c Var 'field_00008_00006' direct represents '5' with '1026'
c Var 'field_00008_00006' direct represents '6' with '1027'
c Var 'field_00008_00006' direct represents '7' with '1028'
c Var 'field_00008_00006' direct represents '8' with '1029'
c Var 'field_00008_00006' direct represents '9' with '1030'
1022 1023 1024 1025 1026 1027 1028 1029 1030 0
-1022 1031 0
-1022 1034 0
-1023 1032 0
-1023 1034 0
-1024 1033 0
-1024 1034 0
-1025 1031 0
-1025 1035 0
-1026 1032 0
-1026 1035 0
-1027 1033 0
-1027 1035 0
-1028 1031 0
-1028 1036 0
-1029 1032 0
-1029 1036 0
-1030 1033 0
-1030 1036 0
-1031 -1032 0
-1031 -1033 0
-1032 -1033 0
-1034 -1035 0
-1034 -1036 0
-1035 -1036 0
c Encoding variable: field_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00007' direct represents '1' with '1037'
c Var 'field_00008_00007' direct represents '2' with '1038'
c Var 'field_00008_00007' direct represents '3' with '1039'
c Var 'field_00008_00007' direct represents '4' with '1040'
c Var 'field_00008_00007' direct represents '5' with '1041'
c Var 'field_00008_00007' direct represents '6' with '1042'
c Var 'field_00008_00007' direct represents '7' with '1043'
c Var 'field_00008_00007' direct represents '8' with '1044'
c Var 'field_00008_00007' direct represents '9' with '1045'
1037 1038 1039 1040 1041 1042 1043 1044 1045 0
-1037 1046 0
-1037 1049 0
-1038 1047 0
-1038 1049 0
-1039 1048 0
-1039 1049 0
-1040 1046 0
-1040 1050 0
-1041 1047 0
-1041 1050 0
-1042 1048 0
-1042 1050 0
-1043 1046 0
-1043 1051 0
-1044 1047 0
-1044 1051 0
-1045 1048 0
-1045 1051 0
-1046 -1047 0
-1046 -1048 0
-1047 -1048 0
-1049 -1050 0
-1049 -1051 0
-1050 -1051 0
c Encoding variable: field_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00008' direct represents '1' with '1052'
c Var 'field_00008_00008' direct represents '2' with '1053'
c Var 'field_00008_00008' direct represents '3' with '1054'
c Var 'field_00008_00008' direct represents '4' with '1055'
c Var 'field_00008_00008' direct represents '5' with '1056'
c Var 'field_00008_00008' direct represents '6' with '1057'
c Var 'field_00008_00008' direct represents '7' with '1058'
c Var 'field_00008_00008' direct represents '8' with '1059'
c Var 'field_00008_00008' direct represents '9' with '1060'
1052 1053 1054 1055 1056 1057 1058 1059 1060 0
-1052 1061 0
-1052 1064 0
-1053 1062 0
-1053 1064 0
-1054 1063 0
-1054 1064 0
-1055 1061 0
-1055 1065 0
-1056 1062 0
-1056 1065 0
-1057 1063 0
-1057 1065 0
-1058 1061 0
-1058 1066 0
-1059 1062 0
-1059 1066 0
-1060 1063 0
-1060 1066 0
-1061 -1062 0
-1061 -1063 0
-1062 -1063 0
-1064 -1065 0
-1064 -1066 0
-1065 -1066 0
c Encoding variable: field_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00009' direct represents '1' with '1067'
c Var 'field_00008_00009' direct represents '2' with '1068'
c Var 'field_00008_00009' direct represents '3' with '1069'
c Var 'field_00008_00009' direct represents '4' with '1070'
c Var 'field_00008_00009' direct represents '5' with '1071'
c Var 'field_00008_00009' direct represents '6' with '1072'
c Var 'field_00008_00009' direct represents '7' with '1073'
c Var 'field_00008_00009' direct represents '8' with '1074'
c Var 'field_00008_00009' direct represents '9' with '1075'
1067 1068 1069 1070 1071 1072 1073 1074 1075 0
-1067 1076 0
-1067 1079 0
-1068 1077 0
-1068 1079 0
-1069 1078 0
-1069 1079 0
-1070 1076 0
-1070 1080 0
-1071 1077 0
-1071 1080 0
-1072 1078 0
-1072 1080 0
-1073 1076 0
-1073 1081 0
-1074 1077 0
-1074 1081 0
-1075 1078 0
-1075 1081 0
-1076 -1077 0
-1076 -1078 0
-1077 -1078 0
-1079 -1080 0
-1079 -1081 0
-1080 -1081 0
c Encoding variable: field_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00001' direct represents '1' with '1082'
c Var 'field_00009_00001' direct represents '2' with '1083'
c Var 'field_00009_00001' direct represents '3' with '1084'
c Var 'field_00009_00001' direct represents '4' with '1085'
c Var 'field_00009_00001' direct represents '5' with '1086'
c Var 'field_00009_00001' direct represents '6' with '1087'
c Var 'field_00009_00001' direct represents '7' with '1088'
c Var 'field_00009_00001' direct represents '8' with '1089'
c Var 'field_00009_00001' direct represents '9' with '1090'
1082 1083 1084 1085 1086 1087 1088 1089 1090 0
-1082 1091 0
-1082 1094 0
-1083 1092 0
-1083 1094 0
-1084 1093 0
-1084 1094 0
-1085 1091 0
-1085 1095 0
-1086 1092 0
-1086 1095 0
-1087 1093 0
-1087 1095 0
-1088 1091 0
-1088 1096 0
-1089 1092 0
-1089 1096 0
-1090 1093 0
-1090 1096 0
-1091 -1092 0
-1091 -1093 0
-1092 -1093 0
-1094 -1095 0
-1094 -1096 0
-1095 -1096 0
c Encoding variable: field_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00002' direct represents '1' with '1097'
c Var 'field_00009_00002' direct represents '2' with '1098'
c Var 'field_00009_00002' direct represents '3' with '1099'
c Var 'field_00009_00002' direct represents '4' with '1100'
c Var 'field_00009_00002' direct represents '5' with '1101'
c Var 'field_00009_00002' direct represents '6' with '1102'
c Var 'field_00009_00002' direct represents '7' with '1103'
c Var 'field_00009_00002' direct represents '8' with '1104'
c Var 'field_00009_00002' direct represents '9' with '1105'
1097 1098 1099 1100 1101 1102 1103 1104 1105 0
-1097 1106 0
-1097 1109 0
-1098 1107 0
-1098 1109 0
-1099 1108 0
-1099 1109 0
-1100 1106 0
-1100 1110 0
-1101 1107 0
-1101 1110 0
-1102 1108 0
-1102 1110 0
-1103 1106 0
-1103 1111 0
-1104 1107 0
-1104 1111 0
-1105 1108 0
-1105 1111 0
-1106 -1107 0
-1106 -1108 0
-1107 -1108 0
-1109 -1110 0
-1109 -1111 0
-1110 -1111 0
c Encoding variable: field_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00003' direct represents '1' with '1112'
c Var 'field_00009_00003' direct represents '2' with '1113'
c Var 'field_00009_00003' direct represents '3' with '1114'
c Var 'field_00009_00003' direct represents '4' with '1115'
c Var 'field_00009_00003' direct represents '5' with '1116'
c Var 'field_00009_00003' direct represents '6' with '1117'
c Var 'field_00009_00003' direct represents '7' with '1118'
c Var 'field_00009_00003' direct represents '8' with '1119'
c Var 'field_00009_00003' direct represents '9' with '1120'
1112 1113 1114 1115 1116 1117 1118 1119 1120 0
-1112 1121 0
-1112 1124 0
-1113 1122 0
-1113 1124 0
-1114 1123 0
-1114 1124 0
-1115 1121 0
-1115 1125 0
-1116 1122 0
-1116 1125 0
-1117 1123 0
-1117 1125 0
-1118 1121 0
-1118 1126 0
-1119 1122 0
-1119 1126 0
-1120 1123 0
-1120 1126 0
-1121 -1122 0
-1121 -1123 0
-1122 -1123 0
-1124 -1125 0
-1124 -1126 0
-1125 -1126 0
c Encoding variable: field_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00004' direct represents '1' with '1127'
c Var 'field_00009_00004' direct represents '2' with '1128'
c Var 'field_00009_00004' direct represents '3' with '1129'
c Var 'field_00009_00004' direct represents '4' with '1130'
c Var 'field_00009_00004' direct represents '5' with '1131'
c Var 'field_00009_00004' direct represents '6' with '1132'
c Var 'field_00009_00004' direct represents '7' with '1133'
c Var 'field_00009_00004' direct represents '8' with '1134'
c Var 'field_00009_00004' direct represents '9' with '1135'
1127 1128 1129 1130 1131 1132 1133 1134 1135 0
-1127 1136 0
-1127 1139 0
-1128 1137 0
-1128 1139 0
-1129 1138 0
-1129 1139 0
-1130 1136 0
-1130 1140 0
-1131 1137 0
-1131 1140 0
-1132 1138 0
-1132 1140 0
-1133 1136 0
-1133 1141 0
-1134 1137 0
-1134 1141 0
-1135 1138 0
-1135 1141 0
-1136 -1137 0
-1136 -1138 0
-1137 -1138 0
-1139 -1140 0
-1139 -1141 0
-1140 -1141 0
c Encoding variable: field_00009_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00005' direct represents '1' with '1142'
c Var 'field_00009_00005' direct represents '2' with '1143'
c Var 'field_00009_00005' direct represents '3' with '1144'
c Var 'field_00009_00005' direct represents '4' with '1145'
c Var 'field_00009_00005' direct represents '5' with '1146'
c Var 'field_00009_00005' direct represents '6' with '1147'
c Var 'field_00009_00005' direct represents '7' with '1148'
c Var 'field_00009_00005' direct represents '8' with '1149'
c Var 'field_00009_00005' direct represents '9' with '1150'
1142 1143 1144 1145 1146 1147 1148 1149 1150 0
-1142 1151 0
-1142 1154 0
-1143 1152 0
-1143 1154 0
-1144 1153 0
-1144 1154 0
-1145 1151 0
-1145 1155 0
-1146 1152 0
-1146 1155 0
-1147 1153 0
-1147 1155 0
-1148 1151 0
-1148 1156 0
-1149 1152 0
-1149 1156 0
-1150 1153 0
-1150 1156 0
-1151 -1152 0
-1151 -1153 0
-1152 -1153 0
-1154 -1155 0
-1154 -1156 0
-1155 -1156 0
c Encoding variable: field_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00006' direct represents '1' with '1157'
c Var 'field_00009_00006' direct represents '2' with '1158'
c Var 'field_00009_00006' direct represents '3' with '1159'
c Var 'field_00009_00006' direct represents '4' with '1160'
c Var 'field_00009_00006' direct represents '5' with '1161'
c Var 'field_00009_00006' direct represents '6' with '1162'
c Var 'field_00009_00006' direct represents '7' with '1163'
c Var 'field_00009_00006' direct represents '8' with '1164'
c Var 'field_00009_00006' direct represents '9' with '1165'
1157 1158 1159 1160 1161 1162 1163 1164 1165 0
-1157 1166 0
-1157 1169 0
-1158 1167 0
-1158 1169 0
-1159 1168 0
-1159 1169 0
-1160 1166 0
-1160 1170 0
-1161 1167 0
-1161 1170 0
-1162 1168 0
-1162 1170 0
-1163 1166 0
-1163 1171 0
-1164 1167 0
-1164 1171 0
-1165 1168 0
-1165 1171 0
-1166 -1167 0
-1166 -1168 0
-1167 -1168 0
-1169 -1170 0
-1169 -1171 0
-1170 -1171 0
c Encoding variable: field_00009_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00007' direct represents '1' with '1172'
c Var 'field_00009_00007' direct represents '2' with '1173'
c Var 'field_00009_00007' direct represents '3' with '1174'
c Var 'field_00009_00007' direct represents '4' with '1175'
c Var 'field_00009_00007' direct represents '5' with '1176'
c Var 'field_00009_00007' direct represents '6' with '1177'
c Var 'field_00009_00007' direct represents '7' with '1178'
c Var 'field_00009_00007' direct represents '8' with '1179'
c Var 'field_00009_00007' direct represents '9' with '1180'
1172 1173 1174 1175 1176 1177 1178 1179 1180 0
-1172 1181 0
-1172 1184 0
-1173 1182 0
-1173 1184 0
-1174 1183 0
-1174 1184 0
-1175 1181 0
-1175 1185 0
-1176 1182 0
-1176 1185 0
-1177 1183 0
-1177 1185 0
-1178 1181 0
-1178 1186 0
-1179 1182 0
-1179 1186 0
-1180 1183 0
-1180 1186 0
-1181 -1182 0
-1181 -1183 0
-1182 -1183 0
-1184 -1185 0
-1184 -1186 0
-1185 -1186 0
c Encoding variable: field_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00008' direct represents '1' with '1187'
c Var 'field_00009_00008' direct represents '2' with '1188'
c Var 'field_00009_00008' direct represents '3' with '1189'
c Var 'field_00009_00008' direct represents '4' with '1190'
c Var 'field_00009_00008' direct represents '5' with '1191'
c Var 'field_00009_00008' direct represents '6' with '1192'
c Var 'field_00009_00008' direct represents '7' with '1193'
c Var 'field_00009_00008' direct represents '8' with '1194'
c Var 'field_00009_00008' direct represents '9' with '1195'
1187 1188 1189 1190 1191 1192 1193 1194 1195 0
-1187 1196 0
-1187 1199 0
-1188 1197 0
-1188 1199 0
-1189 1198 0
-1189 1199 0
-1190 1196 0
-1190 1200 0
-1191 1197 0
-1191 1200 0
-1192 1198 0
-1192 1200 0
-1193 1196 0
-1193 1201 0
-1194 1197 0
-1194 1201 0
-1195 1198 0
-1195 1201 0
-1196 -1197 0
-1196 -1198 0
-1197 -1198 0
-1199 -1200 0
-1199 -1201 0
-1200 -1201 0
c Encoding variable: field_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00009' direct represents '1' with '1202'
c Var 'field_00009_00009' direct represents '2' with '1203'
c Var 'field_00009_00009' direct represents '3' with '1204'
c Var 'field_00009_00009' direct represents '4' with '1205'
c Var 'field_00009_00009' direct represents '5' with '1206'
c Var 'field_00009_00009' direct represents '6' with '1207'
c Var 'field_00009_00009' direct represents '7' with '1208'
c Var 'field_00009_00009' direct represents '8' with '1209'
c Var 'field_00009_00009' direct represents '9' with '1210'
1202 1203 1204 1205 1206 1207 1208 1209 1210 0
-1202 1211 0
-1202 1214 0
-1203 1212 0
-1203 1214 0
-1204 1213 0
-1204 1214 0
-1205 1211 0
-1205 1215 0
-1206 1212 0
-1206 1215 0
-1207 1213 0
-1207 1215 0
-1208 1211 0
-1208 1216 0
-1209 1212 0
-1209 1216 0
-1210 1213 0
-1210 1216 0
-1211 -1212 0
-1211 -1213 0
-1212 -1213 0
-1214 -1215 0
-1214 -1216 0
-1215 -1216 0
c Encoding variable: row_alldiff_00001 with domain: bool (representing constraint )
c Var 'row_alldiff_00001' direct represents '0' with '-1217'
c Var 'row_alldiff_00001' direct represents '1' with '1217'
c Var 'row_alldiff_00001' order represents '1' with '1'
c Var 'row_alldiff_00001' order represents '0' with '-1217'
c Encoding variable: row_alldiff_00002 with domain: bool (representing constraint )
c Var 'row_alldiff_00002' direct represents '0' with '-1218'
c Var 'row_alldiff_00002' direct represents '1' with '1218'
c Var 'row_alldiff_00002' order represents '1' with '1'
c Var 'row_alldiff_00002' order represents '0' with '-1218'
c Encoding variable: row_alldiff_00003 with domain: bool (representing constraint )
c Var 'row_alldiff_00003' direct represents '0' with '-1219'
c Var 'row_alldiff_00003' direct represents '1' with '1219'
c Var 'row_alldiff_00003' order represents '1' with '1'
c Var 'row_alldiff_00003' order represents '0' with '-1219'
c Encoding variable: row_alldiff_00004 with domain: bool (representing constraint )
c Var 'row_alldiff_00004' direct represents '0' with '-1220'
c Var 'row_alldiff_00004' direct represents '1' with '1220'
c Var 'row_alldiff_00004' order represents '1' with '1'
c Var 'row_alldiff_00004' order represents '0' with '-1220'
c Encoding variable: row_alldiff_00005 with domain: bool (representing constraint )
c Var 'row_alldiff_00005' direct represents '0' with '-1221'
c Var 'row_alldiff_00005' direct represents '1' with '1221'
c Var 'row_alldiff_00005' order represents '1' with '1'
c Var 'row_alldiff_00005' order represents '0' with '-1221'
c Encoding variable: row_alldiff_00006 with domain: bool (representing constraint )
c Var 'row_alldiff_00006' direct represents '0' with '-1222'
c Var 'row_alldiff_00006' direct represents '1' with '1222'
c Var 'row_alldiff_00006' order represents '1' with '1'
c Var 'row_alldiff_00006' order represents '0' with '-1222'
c Encoding variable: row_alldiff_00007 with domain: bool (representing constraint )
c Var 'row_alldiff_00007' direct represents '0' with '-1223'
c Var 'row_alldiff_00007' direct represents '1' with '1223'
c Var 'row_alldiff_00007' order represents '1' with '1'
c Var 'row_alldiff_00007' order represents '0' with '-1223'
c Encoding variable: row_alldiff_00008 with domain: bool (representing constraint )
c Var 'row_alldiff_00008' direct represents '0' with '-1224'
c Var 'row_alldiff_00008' direct represents '1' with '1224'
c Var 'row_alldiff_00008' order represents '1' with '1'
c Var 'row_alldiff_00008' order represents '0' with '-1224'
c Encoding variable: row_alldiff_00009 with domain: bool (representing constraint )
c Var 'row_alldiff_00009' direct represents '0' with '-1225'
c Var 'row_alldiff_00009' direct represents '1' with '1225'
c Var 'row_alldiff_00009' order represents '1' with '1'
c Var 'row_alldiff_00009' order represents '0' with '-1225'
c Encoding variable: col_alldiff_00001 with domain: bool (representing constraint )
c Var 'col_alldiff_00001' direct represents '0' with '-1226'
c Var 'col_alldiff_00001' direct represents '1' with '1226'
c Var 'col_alldiff_00001' order represents '1' with '1'
c Var 'col_alldiff_00001' order represents '0' with '-1226'
c Encoding variable: col_alldiff_00002 with domain: bool (representing constraint )
c Var 'col_alldiff_00002' direct represents '0' with '-1227'
c Var 'col_alldiff_00002' direct represents '1' with '1227'
c Var 'col_alldiff_00002' order represents '1' with '1'
c Var 'col_alldiff_00002' order represents '0' with '-1227'
c Encoding variable: col_alldiff_00003 with domain: bool (representing constraint )
c Var 'col_alldiff_00003' direct represents '0' with '-1228'
c Var 'col_alldiff_00003' direct represents '1' with '1228'
c Var 'col_alldiff_00003' order represents '1' with '1'
c Var 'col_alldiff_00003' order represents '0' with '-1228'
c Encoding variable: col_alldiff_00004 with domain: bool (representing constraint )
c Var 'col_alldiff_00004' direct represents '0' with '-1229'
c Var 'col_alldiff_00004' direct represents '1' with '1229'
c Var 'col_alldiff_00004' order represents '1' with '1'
c Var 'col_alldiff_00004' order represents '0' with '-1229'
c Encoding variable: col_alldiff_00005 with domain: bool (representing constraint )
c Var 'col_alldiff_00005' direct represents '0' with '-1230'
c Var 'col_alldiff_00005' direct represents '1' with '1230'
c Var 'col_alldiff_00005' order represents '1' with '1'
c Var 'col_alldiff_00005' order represents '0' with '-1230'
c Encoding variable: col_alldiff_00006 with domain: bool (representing constraint )
c Var 'col_alldiff_00006' direct represents '0' with '-1231'
c Var 'col_alldiff_00006' direct represents '1' with '1231'
c Var 'col_alldiff_00006' order represents '1' with '1'
c Var 'col_alldiff_00006' order represents '0' with '-1231'
c Encoding variable: col_alldiff_00007 with domain: bool (representing constraint )
c Var 'col_alldiff_00007' direct represents '0' with '-1232'
c Var 'col_alldiff_00007' direct represents '1' with '1232'
c Var 'col_alldiff_00007' order represents '1' with '1'
c Var 'col_alldiff_00007' order represents '0' with '-1232'
c Encoding variable: col_alldiff_00008 with domain: bool (representing constraint )
c Var 'col_alldiff_00008' direct represents '0' with '-1233'
c Var 'col_alldiff_00008' direct represents '1' with '1233'
c Var 'col_alldiff_00008' order represents '1' with '1'
c Var 'col_alldiff_00008' order represents '0' with '-1233'
c Encoding variable: col_alldiff_00009 with domain: bool (representing constraint )
c Var 'col_alldiff_00009' direct represents '0' with '-1234'
c Var 'col_alldiff_00009' direct represents '1' with '1234'
c Var 'col_alldiff_00009' order represents '1' with '1'
c Var 'col_alldiff_00009' order represents '0' with '-1234'
c Encoding variable: clues_left_on_00001_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00001' direct represents '0' with '-1235'
c Var 'clues_left_on_00001_00001' direct represents '1' with '1235'
c Var 'clues_left_on_00001_00001' order represents '1' with '1'
c Var 'clues_left_on_00001_00001' order represents '0' with '-1235'
c Encoding variable: clues_left_on_00001_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00002' direct represents '0' with '-1236'
c Var 'clues_left_on_00001_00002' direct represents '1' with '1236'
c Var 'clues_left_on_00001_00002' order represents '1' with '1'
c Var 'clues_left_on_00001_00002' order represents '0' with '-1236'
c Encoding variable: clues_left_on_00001_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00003' direct represents '0' with '-1237'
c Var 'clues_left_on_00001_00003' direct represents '1' with '1237'
c Var 'clues_left_on_00001_00003' order represents '1' with '1'
c Var 'clues_left_on_00001_00003' order represents '0' with '-1237'
c Encoding variable: clues_left_on_00001_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00004' direct represents '0' with '-1238'
c Var 'clues_left_on_00001_00004' direct represents '1' with '1238'
c Var 'clues_left_on_00001_00004' order represents '1' with '1'
c Var 'clues_left_on_00001_00004' order represents '0' with '-1238'
c Encoding variable: clues_left_on_00001_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00005' direct represents '0' with '-1239'
c Var 'clues_left_on_00001_00005' direct represents '1' with '1239'
c Var 'clues_left_on_00001_00005' order represents '1' with '1'
c Var 'clues_left_on_00001_00005' order represents '0' with '-1239'
c Encoding variable: clues_left_on_00001_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00006' direct represents '0' with '-1240'
c Var 'clues_left_on_00001_00006' direct represents '1' with '1240'
c Var 'clues_left_on_00001_00006' order represents '1' with '1'
c Var 'clues_left_on_00001_00006' order represents '0' with '-1240'
c Encoding variable: clues_left_on_00001_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00007' direct represents '0' with '-1241'
c Var 'clues_left_on_00001_00007' direct represents '1' with '1241'
c Var 'clues_left_on_00001_00007' order represents '1' with '1'
c Var 'clues_left_on_00001_00007' order represents '0' with '-1241'
c Encoding variable: clues_left_on_00001_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00008' direct represents '0' with '-1242'
c Var 'clues_left_on_00001_00008' direct represents '1' with '1242'
c Var 'clues_left_on_00001_00008' order represents '1' with '1'
c Var 'clues_left_on_00001_00008' order represents '0' with '-1242'
c Encoding variable: clues_left_on_00001_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00009' direct represents '0' with '-1243'
c Var 'clues_left_on_00001_00009' direct represents '1' with '1243'
c Var 'clues_left_on_00001_00009' order represents '1' with '1'
c Var 'clues_left_on_00001_00009' order represents '0' with '-1243'
c Encoding variable: clues_left_on_00002_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00001' direct represents '0' with '-1244'
c Var 'clues_left_on_00002_00001' direct represents '1' with '1244'
c Var 'clues_left_on_00002_00001' order represents '1' with '1'
c Var 'clues_left_on_00002_00001' order represents '0' with '-1244'
c Encoding variable: clues_left_on_00002_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00002' direct represents '0' with '-1245'
c Var 'clues_left_on_00002_00002' direct represents '1' with '1245'
c Var 'clues_left_on_00002_00002' order represents '1' with '1'
c Var 'clues_left_on_00002_00002' order represents '0' with '-1245'
c Encoding variable: clues_left_on_00002_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00003' direct represents '0' with '-1246'
c Var 'clues_left_on_00002_00003' direct represents '1' with '1246'
c Var 'clues_left_on_00002_00003' order represents '1' with '1'
c Var 'clues_left_on_00002_00003' order represents '0' with '-1246'
c Encoding variable: clues_left_on_00002_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00004' direct represents '0' with '-1247'
c Var 'clues_left_on_00002_00004' direct represents '1' with '1247'
c Var 'clues_left_on_00002_00004' order represents '1' with '1'
c Var 'clues_left_on_00002_00004' order represents '0' with '-1247'
c Encoding variable: clues_left_on_00002_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00005' direct represents '0' with '-1248'
c Var 'clues_left_on_00002_00005' direct represents '1' with '1248'
c Var 'clues_left_on_00002_00005' order represents '1' with '1'
c Var 'clues_left_on_00002_00005' order represents '0' with '-1248'
c Encoding variable: clues_left_on_00002_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00006' direct represents '0' with '-1249'
c Var 'clues_left_on_00002_00006' direct represents '1' with '1249'
c Var 'clues_left_on_00002_00006' order represents '1' with '1'
c Var 'clues_left_on_00002_00006' order represents '0' with '-1249'
c Encoding variable: clues_left_on_00002_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00007' direct represents '0' with '-1250'
c Var 'clues_left_on_00002_00007' direct represents '1' with '1250'
c Var 'clues_left_on_00002_00007' order represents '1' with '1'
c Var 'clues_left_on_00002_00007' order represents '0' with '-1250'
c Encoding variable: clues_left_on_00002_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00008' direct represents '0' with '-1251'
c Var 'clues_left_on_00002_00008' direct represents '1' with '1251'
c Var 'clues_left_on_00002_00008' order represents '1' with '1'
c Var 'clues_left_on_00002_00008' order represents '0' with '-1251'
c Encoding variable: clues_left_on_00002_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00009' direct represents '0' with '-1252'
c Var 'clues_left_on_00002_00009' direct represents '1' with '1252'
c Var 'clues_left_on_00002_00009' order represents '1' with '1'
c Var 'clues_left_on_00002_00009' order represents '0' with '-1252'
c Encoding variable: clues_left_on_00003_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00001' direct represents '0' with '-1253'
c Var 'clues_left_on_00003_00001' direct represents '1' with '1253'
c Var 'clues_left_on_00003_00001' order represents '1' with '1'
c Var 'clues_left_on_00003_00001' order represents '0' with '-1253'
c Encoding variable: clues_left_on_00003_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00002' direct represents '0' with '-1254'
c Var 'clues_left_on_00003_00002' direct represents '1' with '1254'
c Var 'clues_left_on_00003_00002' order represents '1' with '1'
c Var 'clues_left_on_00003_00002' order represents '0' with '-1254'
c Encoding variable: clues_left_on_00003_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00003' direct represents '0' with '-1255'
c Var 'clues_left_on_00003_00003' direct represents '1' with '1255'
c Var 'clues_left_on_00003_00003' order represents '1' with '1'
c Var 'clues_left_on_00003_00003' order represents '0' with '-1255'
c Encoding variable: clues_left_on_00003_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00004' direct represents '0' with '-1256'
c Var 'clues_left_on_00003_00004' direct represents '1' with '1256'
c Var 'clues_left_on_00003_00004' order represents '1' with '1'
c Var 'clues_left_on_00003_00004' order represents '0' with '-1256'
c Encoding variable: clues_left_on_00003_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00005' direct represents '0' with '-1257'
c Var 'clues_left_on_00003_00005' direct represents '1' with '1257'
c Var 'clues_left_on_00003_00005' order represents '1' with '1'
c Var 'clues_left_on_00003_00005' order represents '0' with '-1257'
c Encoding variable: clues_left_on_00003_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00006' direct represents '0' with '-1258'
c Var 'clues_left_on_00003_00006' direct represents '1' with '1258'
c Var 'clues_left_on_00003_00006' order represents '1' with '1'
c Var 'clues_left_on_00003_00006' order represents '0' with '-1258'
c Encoding variable: clues_left_on_00003_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00007' direct represents '0' with '-1259'
c Var 'clues_left_on_00003_00007' direct represents '1' with '1259'
c Var 'clues_left_on_00003_00007' order represents '1' with '1'
c Var 'clues_left_on_00003_00007' order represents '0' with '-1259'
c Encoding variable: clues_left_on_00003_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00008' direct represents '0' with '-1260'
c Var 'clues_left_on_00003_00008' direct represents '1' with '1260'
c Var 'clues_left_on_00003_00008' order represents '1' with '1'
c Var 'clues_left_on_00003_00008' order represents '0' with '-1260'
c Encoding variable: clues_left_on_00003_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00009' direct represents '0' with '-1261'
c Var 'clues_left_on_00003_00009' direct represents '1' with '1261'
c Var 'clues_left_on_00003_00009' order represents '1' with '1'
c Var 'clues_left_on_00003_00009' order represents '0' with '-1261'
c Encoding variable: clues_left_on_00004_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00001' direct represents '0' with '-1262'
c Var 'clues_left_on_00004_00001' direct represents '1' with '1262'
c Var 'clues_left_on_00004_00001' order represents '1' with '1'
c Var 'clues_left_on_00004_00001' order represents '0' with '-1262'
c Encoding variable: clues_left_on_00004_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00002' direct represents '0' with '-1263'
c Var 'clues_left_on_00004_00002' direct represents '1' with '1263'
c Var 'clues_left_on_00004_00002' order represents '1' with '1'
c Var 'clues_left_on_00004_00002' order represents '0' with '-1263'
c Encoding variable: clues_left_on_00004_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00003' direct represents '0' with '-1264'
c Var 'clues_left_on_00004_00003' direct represents '1' with '1264'
c Var 'clues_left_on_00004_00003' order represents '1' with '1'
c Var 'clues_left_on_00004_00003' order represents '0' with '-1264'
c Encoding variable: clues_left_on_00004_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00004' direct represents '0' with '-1265'
c Var 'clues_left_on_00004_00004' direct represents '1' with '1265'
c Var 'clues_left_on_00004_00004' order represents '1' with '1'
c Var 'clues_left_on_00004_00004' order represents '0' with '-1265'
c Encoding variable: clues_left_on_00004_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00005' direct represents '0' with '-1266'
c Var 'clues_left_on_00004_00005' direct represents '1' with '1266'
c Var 'clues_left_on_00004_00005' order represents '1' with '1'
c Var 'clues_left_on_00004_00005' order represents '0' with '-1266'
c Encoding variable: clues_left_on_00004_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00006' direct represents '0' with '-1267'
c Var 'clues_left_on_00004_00006' direct represents '1' with '1267'
c Var 'clues_left_on_00004_00006' order represents '1' with '1'
c Var 'clues_left_on_00004_00006' order represents '0' with '-1267'
c Encoding variable: clues_left_on_00004_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00007' direct represents '0' with '-1268'
c Var 'clues_left_on_00004_00007' direct represents '1' with '1268'
c Var 'clues_left_on_00004_00007' order represents '1' with '1'
c Var 'clues_left_on_00004_00007' order represents '0' with '-1268'
c Encoding variable: clues_left_on_00004_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00008' direct represents '0' with '-1269'
c Var 'clues_left_on_00004_00008' direct represents '1' with '1269'
c Var 'clues_left_on_00004_00008' order represents '1' with '1'
c Var 'clues_left_on_00004_00008' order represents '0' with '-1269'
c Encoding variable: clues_left_on_00004_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00009' direct represents '0' with '-1270'
c Var 'clues_left_on_00004_00009' direct represents '1' with '1270'
c Var 'clues_left_on_00004_00009' order represents '1' with '1'
c Var 'clues_left_on_00004_00009' order represents '0' with '-1270'
c Encoding variable: max_left_00001_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00001_00000' direct represents '0' with '1271'
1271 0
c Encoding variable: max_left_00001_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00001' order represents '1' with '1272'
c Var 'max_left_00001_00001_00001' direct represents '1' with '1272'
c Var 'max_left_00001_00001_00001' order represents '2' with '1273'
-1272 1273 0
c Var 'max_left_00001_00001_00001' direct represents '2' with '1274'
1272 -1273 1274 0
-1274 1273 0
-1274 -1272 0
c Var 'max_left_00001_00001_00001' order represents '3' with '1275'
-1273 1275 0
c Var 'max_left_00001_00001_00001' direct represents '3' with '1276'
1273 -1275 1276 0
-1276 1275 0
-1276 -1273 0
c Var 'max_left_00001_00001_00001' order represents '4' with '1277'
-1275 1277 0
c Var 'max_left_00001_00001_00001' direct represents '4' with '1278'
1275 -1277 1278 0
-1278 1277 0
-1278 -1275 0
c Var 'max_left_00001_00001_00001' order represents '5' with '1279'
-1277 1279 0
c Var 'max_left_00001_00001_00001' direct represents '5' with '1280'
1277 -1279 1280 0
-1280 1279 0
-1280 -1277 0
c Var 'max_left_00001_00001_00001' order represents '6' with '1281'
-1279 1281 0
c Var 'max_left_00001_00001_00001' direct represents '6' with '1282'
1279 -1281 1282 0
-1282 1281 0
-1282 -1279 0
c Var 'max_left_00001_00001_00001' order represents '7' with '1283'
-1281 1283 0
c Var 'max_left_00001_00001_00001' direct represents '7' with '1284'
1281 -1283 1284 0
-1284 1283 0
-1284 -1281 0
c Var 'max_left_00001_00001_00001' order represents '8' with '1285'
-1283 1285 0
c Var 'max_left_00001_00001_00001' direct represents '8' with '1286'
1283 -1285 1286 0
-1286 1285 0
-1286 -1283 0
c Var 'max_left_00001_00001_00001' direct represents '9' with '-1285'
1272 1274 1276 1278 1280 1282 1284 1286 -1285 0
c Encoding variable: max_left_00001_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00002' order represents '1' with '1287'
c Var 'max_left_00001_00001_00002' direct represents '1' with '1287'
c Var 'max_left_00001_00001_00002' order represents '2' with '1288'
-1287 1288 0
c Var 'max_left_00001_00001_00002' direct represents '2' with '1289'
1287 -1288 1289 0
-1289 1288 0
-1289 -1287 0
c Var 'max_left_00001_00001_00002' order represents '3' with '1290'
-1288 1290 0
c Var 'max_left_00001_00001_00002' direct represents '3' with '1291'
1288 -1290 1291 0
-1291 1290 0
-1291 -1288 0
c Var 'max_left_00001_00001_00002' order represents '4' with '1292'
-1290 1292 0
c Var 'max_left_00001_00001_00002' direct represents '4' with '1293'
1290 -1292 1293 0
-1293 1292 0
-1293 -1290 0
c Var 'max_left_00001_00001_00002' order represents '5' with '1294'
-1292 1294 0
c Var 'max_left_00001_00001_00002' direct represents '5' with '1295'
1292 -1294 1295 0
-1295 1294 0
-1295 -1292 0
c Var 'max_left_00001_00001_00002' order represents '6' with '1296'
-1294 1296 0
c Var 'max_left_00001_00001_00002' direct represents '6' with '1297'
1294 -1296 1297 0
-1297 1296 0
-1297 -1294 0
c Var 'max_left_00001_00001_00002' order represents '7' with '1298'
-1296 1298 0
c Var 'max_left_00001_00001_00002' direct represents '7' with '1299'
1296 -1298 1299 0
-1299 1298 0
-1299 -1296 0
c Var 'max_left_00001_00001_00002' order represents '8' with '1300'
-1298 1300 0
c Var 'max_left_00001_00001_00002' direct represents '8' with '1301'
1298 -1300 1301 0
-1301 1300 0
-1301 -1298 0
c Var 'max_left_00001_00001_00002' direct represents '9' with '-1300'
1287 1289 1291 1293 1295 1297 1299 1301 -1300 0
c Encoding variable: max_left_00001_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00003' order represents '1' with '1302'
c Var 'max_left_00001_00001_00003' direct represents '1' with '1302'
c Var 'max_left_00001_00001_00003' order represents '2' with '1303'
-1302 1303 0
c Var 'max_left_00001_00001_00003' direct represents '2' with '1304'
1302 -1303 1304 0
-1304 1303 0
-1304 -1302 0
c Var 'max_left_00001_00001_00003' order represents '3' with '1305'
-1303 1305 0
c Var 'max_left_00001_00001_00003' direct represents '3' with '1306'
1303 -1305 1306 0
-1306 1305 0
-1306 -1303 0
c Var 'max_left_00001_00001_00003' order represents '4' with '1307'
-1305 1307 0
c Var 'max_left_00001_00001_00003' direct represents '4' with '1308'
1305 -1307 1308 0
-1308 1307 0
-1308 -1305 0
c Var 'max_left_00001_00001_00003' order represents '5' with '1309'
-1307 1309 0
c Var 'max_left_00001_00001_00003' direct represents '5' with '1310'
1307 -1309 1310 0
-1310 1309 0
-1310 -1307 0
c Var 'max_left_00001_00001_00003' order represents '6' with '1311'
-1309 1311 0
c Var 'max_left_00001_00001_00003' direct represents '6' with '1312'
1309 -1311 1312 0
-1312 1311 0
-1312 -1309 0
c Var 'max_left_00001_00001_00003' order represents '7' with '1313'
-1311 1313 0
c Var 'max_left_00001_00001_00003' direct represents '7' with '1314'
1311 -1313 1314 0
-1314 1313 0
-1314 -1311 0
c Var 'max_left_00001_00001_00003' order represents '8' with '1315'
-1313 1315 0
c Var 'max_left_00001_00001_00003' direct represents '8' with '1316'
1313 -1315 1316 0
-1316 1315 0
-1316 -1313 0
c Var 'max_left_00001_00001_00003' direct represents '9' with '-1315'
1302 1304 1306 1308 1310 1312 1314 1316 -1315 0
c Encoding variable: max_left_00001_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00004' order represents '1' with '1317'
c Var 'max_left_00001_00001_00004' direct represents '1' with '1317'
c Var 'max_left_00001_00001_00004' order represents '2' with '1318'
-1317 1318 0
c Var 'max_left_00001_00001_00004' direct represents '2' with '1319'
1317 -1318 1319 0
-1319 1318 0
-1319 -1317 0
c Var 'max_left_00001_00001_00004' order represents '3' with '1320'
-1318 1320 0
c Var 'max_left_00001_00001_00004' direct represents '3' with '1321'
1318 -1320 1321 0
-1321 1320 0
-1321 -1318 0
c Var 'max_left_00001_00001_00004' order represents '4' with '1322'
-1320 1322 0
c Var 'max_left_00001_00001_00004' direct represents '4' with '1323'
1320 -1322 1323 0
-1323 1322 0
-1323 -1320 0
c Var 'max_left_00001_00001_00004' order represents '5' with '1324'
-1322 1324 0
c Var 'max_left_00001_00001_00004' direct represents '5' with '1325'
1322 -1324 1325 0
-1325 1324 0
-1325 -1322 0
c Var 'max_left_00001_00001_00004' order represents '6' with '1326'
-1324 1326 0
c Var 'max_left_00001_00001_00004' direct represents '6' with '1327'
1324 -1326 1327 0
-1327 1326 0
-1327 -1324 0
c Var 'max_left_00001_00001_00004' order represents '7' with '1328'
-1326 1328 0
c Var 'max_left_00001_00001_00004' direct represents '7' with '1329'
1326 -1328 1329 0
-1329 1328 0
-1329 -1326 0
c Var 'max_left_00001_00001_00004' order represents '8' with '1330'
-1328 1330 0
c Var 'max_left_00001_00001_00004' direct represents '8' with '1331'
1328 -1330 1331 0
-1331 1330 0
-1331 -1328 0
c Var 'max_left_00001_00001_00004' direct represents '9' with '-1330'
1317 1319 1321 1323 1325 1327 1329 1331 -1330 0
c Encoding variable: max_left_00001_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00005' order represents '1' with '1332'
c Var 'max_left_00001_00001_00005' direct represents '1' with '1332'
c Var 'max_left_00001_00001_00005' order represents '2' with '1333'
-1332 1333 0
c Var 'max_left_00001_00001_00005' direct represents '2' with '1334'
1332 -1333 1334 0
-1334 1333 0
-1334 -1332 0
c Var 'max_left_00001_00001_00005' order represents '3' with '1335'
-1333 1335 0
c Var 'max_left_00001_00001_00005' direct represents '3' with '1336'
1333 -1335 1336 0
-1336 1335 0
-1336 -1333 0
c Var 'max_left_00001_00001_00005' order represents '4' with '1337'
-1335 1337 0
c Var 'max_left_00001_00001_00005' direct represents '4' with '1338'
1335 -1337 1338 0
-1338 1337 0
-1338 -1335 0
c Var 'max_left_00001_00001_00005' order represents '5' with '1339'
-1337 1339 0
c Var 'max_left_00001_00001_00005' direct represents '5' with '1340'
1337 -1339 1340 0
-1340 1339 0
-1340 -1337 0
c Var 'max_left_00001_00001_00005' order represents '6' with '1341'
-1339 1341 0
c Var 'max_left_00001_00001_00005' direct represents '6' with '1342'
1339 -1341 1342 0
-1342 1341 0
-1342 -1339 0
c Var 'max_left_00001_00001_00005' order represents '7' with '1343'
-1341 1343 0
c Var 'max_left_00001_00001_00005' direct represents '7' with '1344'
1341 -1343 1344 0
-1344 1343 0
-1344 -1341 0
c Var 'max_left_00001_00001_00005' order represents '8' with '1345'
-1343 1345 0
c Var 'max_left_00001_00001_00005' direct represents '8' with '1346'
1343 -1345 1346 0
-1346 1345 0
-1346 -1343 0
c Var 'max_left_00001_00001_00005' direct represents '9' with '-1345'
1332 1334 1336 1338 1340 1342 1344 1346 -1345 0
c Encoding variable: max_left_00001_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00006' order represents '1' with '1347'
c Var 'max_left_00001_00001_00006' direct represents '1' with '1347'
c Var 'max_left_00001_00001_00006' order represents '2' with '1348'
-1347 1348 0
c Var 'max_left_00001_00001_00006' direct represents '2' with '1349'
1347 -1348 1349 0
-1349 1348 0
-1349 -1347 0
c Var 'max_left_00001_00001_00006' order represents '3' with '1350'
-1348 1350 0
c Var 'max_left_00001_00001_00006' direct represents '3' with '1351'
1348 -1350 1351 0
-1351 1350 0
-1351 -1348 0
c Var 'max_left_00001_00001_00006' order represents '4' with '1352'
-1350 1352 0
c Var 'max_left_00001_00001_00006' direct represents '4' with '1353'
1350 -1352 1353 0
-1353 1352 0
-1353 -1350 0
c Var 'max_left_00001_00001_00006' order represents '5' with '1354'
-1352 1354 0
c Var 'max_left_00001_00001_00006' direct represents '5' with '1355'
1352 -1354 1355 0
-1355 1354 0
-1355 -1352 0
c Var 'max_left_00001_00001_00006' order represents '6' with '1356'
-1354 1356 0
c Var 'max_left_00001_00001_00006' direct represents '6' with '1357'
1354 -1356 1357 0
-1357 1356 0
-1357 -1354 0
c Var 'max_left_00001_00001_00006' order represents '7' with '1358'
-1356 1358 0
c Var 'max_left_00001_00001_00006' direct represents '7' with '1359'
1356 -1358 1359 0
-1359 1358 0
-1359 -1356 0
c Var 'max_left_00001_00001_00006' order represents '8' with '1360'
-1358 1360 0
c Var 'max_left_00001_00001_00006' direct represents '8' with '1361'
1358 -1360 1361 0
-1361 1360 0
-1361 -1358 0
c Var 'max_left_00001_00001_00006' direct represents '9' with '-1360'
1347 1349 1351 1353 1355 1357 1359 1361 -1360 0
c Encoding variable: max_left_00001_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00007' order represents '1' with '1362'
c Var 'max_left_00001_00001_00007' direct represents '1' with '1362'
c Var 'max_left_00001_00001_00007' order represents '2' with '1363'
-1362 1363 0
c Var 'max_left_00001_00001_00007' direct represents '2' with '1364'
1362 -1363 1364 0
-1364 1363 0
-1364 -1362 0
c Var 'max_left_00001_00001_00007' order represents '3' with '1365'
-1363 1365 0
c Var 'max_left_00001_00001_00007' direct represents '3' with '1366'
1363 -1365 1366 0
-1366 1365 0
-1366 -1363 0
c Var 'max_left_00001_00001_00007' order represents '4' with '1367'
-1365 1367 0
c Var 'max_left_00001_00001_00007' direct represents '4' with '1368'
1365 -1367 1368 0
-1368 1367 0
-1368 -1365 0
c Var 'max_left_00001_00001_00007' order represents '5' with '1369'
-1367 1369 0
c Var 'max_left_00001_00001_00007' direct represents '5' with '1370'
1367 -1369 1370 0
-1370 1369 0
-1370 -1367 0
c Var 'max_left_00001_00001_00007' order represents '6' with '1371'
-1369 1371 0
c Var 'max_left_00001_00001_00007' direct represents '6' with '1372'
1369 -1371 1372 0
-1372 1371 0
-1372 -1369 0
c Var 'max_left_00001_00001_00007' order represents '7' with '1373'
-1371 1373 0
c Var 'max_left_00001_00001_00007' direct represents '7' with '1374'
1371 -1373 1374 0
-1374 1373 0
-1374 -1371 0
c Var 'max_left_00001_00001_00007' order represents '8' with '1375'
-1373 1375 0
c Var 'max_left_00001_00001_00007' direct represents '8' with '1376'
1373 -1375 1376 0
-1376 1375 0
-1376 -1373 0
c Var 'max_left_00001_00001_00007' direct represents '9' with '-1375'
1362 1364 1366 1368 1370 1372 1374 1376 -1375 0
c Encoding variable: max_left_00001_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00008' order represents '1' with '1377'
c Var 'max_left_00001_00001_00008' direct represents '1' with '1377'
c Var 'max_left_00001_00001_00008' order represents '2' with '1378'
-1377 1378 0
c Var 'max_left_00001_00001_00008' direct represents '2' with '1379'
1377 -1378 1379 0
-1379 1378 0
-1379 -1377 0
c Var 'max_left_00001_00001_00008' order represents '3' with '1380'
-1378 1380 0
c Var 'max_left_00001_00001_00008' direct represents '3' with '1381'
1378 -1380 1381 0
-1381 1380 0
-1381 -1378 0
c Var 'max_left_00001_00001_00008' order represents '4' with '1382'
-1380 1382 0
c Var 'max_left_00001_00001_00008' direct represents '4' with '1383'
1380 -1382 1383 0
-1383 1382 0
-1383 -1380 0
c Var 'max_left_00001_00001_00008' order represents '5' with '1384'
-1382 1384 0
c Var 'max_left_00001_00001_00008' direct represents '5' with '1385'
1382 -1384 1385 0
-1385 1384 0
-1385 -1382 0
c Var 'max_left_00001_00001_00008' order represents '6' with '1386'
-1384 1386 0
c Var 'max_left_00001_00001_00008' direct represents '6' with '1387'
1384 -1386 1387 0
-1387 1386 0
-1387 -1384 0
c Var 'max_left_00001_00001_00008' order represents '7' with '1388'
-1386 1388 0
c Var 'max_left_00001_00001_00008' direct represents '7' with '1389'
1386 -1388 1389 0
-1389 1388 0
-1389 -1386 0
c Var 'max_left_00001_00001_00008' order represents '8' with '1390'
-1388 1390 0
c Var 'max_left_00001_00001_00008' direct represents '8' with '1391'
1388 -1390 1391 0
-1391 1390 0
-1391 -1388 0
c Var 'max_left_00001_00001_00008' direct represents '9' with '-1390'
1377 1379 1381 1383 1385 1387 1389 1391 -1390 0
c Encoding variable: max_left_00001_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00001_00009' order represents '1' with '1392'
c Var 'max_left_00001_00001_00009' direct represents '1' with '1392'
c Var 'max_left_00001_00001_00009' order represents '2' with '1393'
-1392 1393 0
c Var 'max_left_00001_00001_00009' direct represents '2' with '1394'
1392 -1393 1394 0
-1394 1393 0
-1394 -1392 0
c Var 'max_left_00001_00001_00009' order represents '3' with '1395'
-1393 1395 0
c Var 'max_left_00001_00001_00009' direct represents '3' with '1396'
1393 -1395 1396 0
-1396 1395 0
-1396 -1393 0
c Var 'max_left_00001_00001_00009' order represents '4' with '1397'
-1395 1397 0
c Var 'max_left_00001_00001_00009' direct represents '4' with '1398'
1395 -1397 1398 0
-1398 1397 0
-1398 -1395 0
c Var 'max_left_00001_00001_00009' order represents '5' with '1399'
-1397 1399 0
c Var 'max_left_00001_00001_00009' direct represents '5' with '1400'
1397 -1399 1400 0
-1400 1399 0
-1400 -1397 0
c Var 'max_left_00001_00001_00009' order represents '6' with '1401'
-1399 1401 0
c Var 'max_left_00001_00001_00009' direct represents '6' with '1402'
1399 -1401 1402 0
-1402 1401 0
-1402 -1399 0
c Var 'max_left_00001_00001_00009' order represents '7' with '1403'
-1401 1403 0
c Var 'max_left_00001_00001_00009' direct represents '7' with '1404'
1401 -1403 1404 0
-1404 1403 0
-1404 -1401 0
c Var 'max_left_00001_00001_00009' order represents '8' with '1405'
-1403 1405 0
c Var 'max_left_00001_00001_00009' direct represents '8' with '1406'
1403 -1405 1406 0
-1406 1405 0
-1406 -1403 0
c Var 'max_left_00001_00001_00009' direct represents '9' with '-1405'
1392 1394 1396 1398 1400 1402 1404 1406 -1405 0
c Encoding variable: max_left_00001_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00002_00000' direct represents '0' with '1407'
1407 0
c Encoding variable: max_left_00001_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00001' order represents '1' with '1408'
c Var 'max_left_00001_00002_00001' direct represents '1' with '1408'
c Var 'max_left_00001_00002_00001' order represents '2' with '1409'
-1408 1409 0
c Var 'max_left_00001_00002_00001' direct represents '2' with '1410'
1408 -1409 1410 0
-1410 1409 0
-1410 -1408 0
c Var 'max_left_00001_00002_00001' order represents '3' with '1411'
-1409 1411 0
c Var 'max_left_00001_00002_00001' direct represents '3' with '1412'
1409 -1411 1412 0
-1412 1411 0
-1412 -1409 0
c Var 'max_left_00001_00002_00001' order represents '4' with '1413'
-1411 1413 0
c Var 'max_left_00001_00002_00001' direct represents '4' with '1414'
1411 -1413 1414 0
-1414 1413 0
-1414 -1411 0
c Var 'max_left_00001_00002_00001' order represents '5' with '1415'
-1413 1415 0
c Var 'max_left_00001_00002_00001' direct represents '5' with '1416'
1413 -1415 1416 0
-1416 1415 0
-1416 -1413 0
c Var 'max_left_00001_00002_00001' order represents '6' with '1417'
-1415 1417 0
c Var 'max_left_00001_00002_00001' direct represents '6' with '1418'
1415 -1417 1418 0
-1418 1417 0
-1418 -1415 0
c Var 'max_left_00001_00002_00001' order represents '7' with '1419'
-1417 1419 0
c Var 'max_left_00001_00002_00001' direct represents '7' with '1420'
1417 -1419 1420 0
-1420 1419 0
-1420 -1417 0
c Var 'max_left_00001_00002_00001' order represents '8' with '1421'
-1419 1421 0
c Var 'max_left_00001_00002_00001' direct represents '8' with '1422'
1419 -1421 1422 0
-1422 1421 0
-1422 -1419 0
c Var 'max_left_00001_00002_00001' direct represents '9' with '-1421'
1408 1410 1412 1414 1416 1418 1420 1422 -1421 0
c Encoding variable: max_left_00001_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00002' order represents '1' with '1423'
c Var 'max_left_00001_00002_00002' direct represents '1' with '1423'
c Var 'max_left_00001_00002_00002' order represents '2' with '1424'
-1423 1424 0
c Var 'max_left_00001_00002_00002' direct represents '2' with '1425'
1423 -1424 1425 0
-1425 1424 0
-1425 -1423 0
c Var 'max_left_00001_00002_00002' order represents '3' with '1426'
-1424 1426 0
c Var 'max_left_00001_00002_00002' direct represents '3' with '1427'
1424 -1426 1427 0
-1427 1426 0
-1427 -1424 0
c Var 'max_left_00001_00002_00002' order represents '4' with '1428'
-1426 1428 0
c Var 'max_left_00001_00002_00002' direct represents '4' with '1429'
1426 -1428 1429 0
-1429 1428 0
-1429 -1426 0
c Var 'max_left_00001_00002_00002' order represents '5' with '1430'
-1428 1430 0
c Var 'max_left_00001_00002_00002' direct represents '5' with '1431'
1428 -1430 1431 0
-1431 1430 0
-1431 -1428 0
c Var 'max_left_00001_00002_00002' order represents '6' with '1432'
-1430 1432 0
c Var 'max_left_00001_00002_00002' direct represents '6' with '1433'
1430 -1432 1433 0
-1433 1432 0
-1433 -1430 0
c Var 'max_left_00001_00002_00002' order represents '7' with '1434'
-1432 1434 0
c Var 'max_left_00001_00002_00002' direct represents '7' with '1435'
1432 -1434 1435 0
-1435 1434 0
-1435 -1432 0
c Var 'max_left_00001_00002_00002' order represents '8' with '1436'
-1434 1436 0
c Var 'max_left_00001_00002_00002' direct represents '8' with '1437'
1434 -1436 1437 0
-1437 1436 0
-1437 -1434 0
c Var 'max_left_00001_00002_00002' direct represents '9' with '-1436'
1423 1425 1427 1429 1431 1433 1435 1437 -1436 0
c Encoding variable: max_left_00001_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00003' order represents '1' with '1438'
c Var 'max_left_00001_00002_00003' direct represents '1' with '1438'
c Var 'max_left_00001_00002_00003' order represents '2' with '1439'
-1438 1439 0
c Var 'max_left_00001_00002_00003' direct represents '2' with '1440'
1438 -1439 1440 0
-1440 1439 0
-1440 -1438 0
c Var 'max_left_00001_00002_00003' order represents '3' with '1441'
-1439 1441 0
c Var 'max_left_00001_00002_00003' direct represents '3' with '1442'
1439 -1441 1442 0
-1442 1441 0
-1442 -1439 0
c Var 'max_left_00001_00002_00003' order represents '4' with '1443'
-1441 1443 0
c Var 'max_left_00001_00002_00003' direct represents '4' with '1444'
1441 -1443 1444 0
-1444 1443 0
-1444 -1441 0
c Var 'max_left_00001_00002_00003' order represents '5' with '1445'
-1443 1445 0
c Var 'max_left_00001_00002_00003' direct represents '5' with '1446'
1443 -1445 1446 0
-1446 1445 0
-1446 -1443 0
c Var 'max_left_00001_00002_00003' order represents '6' with '1447'
-1445 1447 0
c Var 'max_left_00001_00002_00003' direct represents '6' with '1448'
1445 -1447 1448 0
-1448 1447 0
-1448 -1445 0
c Var 'max_left_00001_00002_00003' order represents '7' with '1449'
-1447 1449 0
c Var 'max_left_00001_00002_00003' direct represents '7' with '1450'
1447 -1449 1450 0
-1450 1449 0
-1450 -1447 0
c Var 'max_left_00001_00002_00003' order represents '8' with '1451'
-1449 1451 0
c Var 'max_left_00001_00002_00003' direct represents '8' with '1452'
1449 -1451 1452 0
-1452 1451 0
-1452 -1449 0
c Var 'max_left_00001_00002_00003' direct represents '9' with '-1451'
1438 1440 1442 1444 1446 1448 1450 1452 -1451 0
c Encoding variable: max_left_00001_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00004' order represents '1' with '1453'
c Var 'max_left_00001_00002_00004' direct represents '1' with '1453'
c Var 'max_left_00001_00002_00004' order represents '2' with '1454'
-1453 1454 0
c Var 'max_left_00001_00002_00004' direct represents '2' with '1455'
1453 -1454 1455 0
-1455 1454 0
-1455 -1453 0
c Var 'max_left_00001_00002_00004' order represents '3' with '1456'
-1454 1456 0
c Var 'max_left_00001_00002_00004' direct represents '3' with '1457'
1454 -1456 1457 0
-1457 1456 0
-1457 -1454 0
c Var 'max_left_00001_00002_00004' order represents '4' with '1458'
-1456 1458 0
c Var 'max_left_00001_00002_00004' direct represents '4' with '1459'
1456 -1458 1459 0
-1459 1458 0
-1459 -1456 0
c Var 'max_left_00001_00002_00004' order represents '5' with '1460'
-1458 1460 0
c Var 'max_left_00001_00002_00004' direct represents '5' with '1461'
1458 -1460 1461 0
-1461 1460 0
-1461 -1458 0
c Var 'max_left_00001_00002_00004' order represents '6' with '1462'
-1460 1462 0
c Var 'max_left_00001_00002_00004' direct represents '6' with '1463'
1460 -1462 1463 0
-1463 1462 0
-1463 -1460 0
c Var 'max_left_00001_00002_00004' order represents '7' with '1464'
-1462 1464 0
c Var 'max_left_00001_00002_00004' direct represents '7' with '1465'
1462 -1464 1465 0
-1465 1464 0
-1465 -1462 0
c Var 'max_left_00001_00002_00004' order represents '8' with '1466'
-1464 1466 0
c Var 'max_left_00001_00002_00004' direct represents '8' with '1467'
1464 -1466 1467 0
-1467 1466 0
-1467 -1464 0
c Var 'max_left_00001_00002_00004' direct represents '9' with '-1466'
1453 1455 1457 1459 1461 1463 1465 1467 -1466 0
c Encoding variable: max_left_00001_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00005' order represents '1' with '1468'
c Var 'max_left_00001_00002_00005' direct represents '1' with '1468'
c Var 'max_left_00001_00002_00005' order represents '2' with '1469'
-1468 1469 0
c Var 'max_left_00001_00002_00005' direct represents '2' with '1470'
1468 -1469 1470 0
-1470 1469 0
-1470 -1468 0
c Var 'max_left_00001_00002_00005' order represents '3' with '1471'
-1469 1471 0
c Var 'max_left_00001_00002_00005' direct represents '3' with '1472'
1469 -1471 1472 0
-1472 1471 0
-1472 -1469 0
c Var 'max_left_00001_00002_00005' order represents '4' with '1473'
-1471 1473 0
c Var 'max_left_00001_00002_00005' direct represents '4' with '1474'
1471 -1473 1474 0
-1474 1473 0
-1474 -1471 0
c Var 'max_left_00001_00002_00005' order represents '5' with '1475'
-1473 1475 0
c Var 'max_left_00001_00002_00005' direct represents '5' with '1476'
1473 -1475 1476 0
-1476 1475 0
-1476 -1473 0
c Var 'max_left_00001_00002_00005' order represents '6' with '1477'
-1475 1477 0
c Var 'max_left_00001_00002_00005' direct represents '6' with '1478'
1475 -1477 1478 0
-1478 1477 0
-1478 -1475 0
c Var 'max_left_00001_00002_00005' order represents '7' with '1479'
-1477 1479 0
c Var 'max_left_00001_00002_00005' direct represents '7' with '1480'
1477 -1479 1480 0
-1480 1479 0
-1480 -1477 0
c Var 'max_left_00001_00002_00005' order represents '8' with '1481'
-1479 1481 0
c Var 'max_left_00001_00002_00005' direct represents '8' with '1482'
1479 -1481 1482 0
-1482 1481 0
-1482 -1479 0
c Var 'max_left_00001_00002_00005' direct represents '9' with '-1481'
1468 1470 1472 1474 1476 1478 1480 1482 -1481 0
c Encoding variable: max_left_00001_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00006' order represents '1' with '1483'
c Var 'max_left_00001_00002_00006' direct represents '1' with '1483'
c Var 'max_left_00001_00002_00006' order represents '2' with '1484'
-1483 1484 0
c Var 'max_left_00001_00002_00006' direct represents '2' with '1485'
1483 -1484 1485 0
-1485 1484 0
-1485 -1483 0
c Var 'max_left_00001_00002_00006' order represents '3' with '1486'
-1484 1486 0
c Var 'max_left_00001_00002_00006' direct represents '3' with '1487'
1484 -1486 1487 0
-1487 1486 0
-1487 -1484 0
c Var 'max_left_00001_00002_00006' order represents '4' with '1488'
-1486 1488 0
c Var 'max_left_00001_00002_00006' direct represents '4' with '1489'
1486 -1488 1489 0
-1489 1488 0
-1489 -1486 0
c Var 'max_left_00001_00002_00006' order represents '5' with '1490'
-1488 1490 0
c Var 'max_left_00001_00002_00006' direct represents '5' with '1491'
1488 -1490 1491 0
-1491 1490 0
-1491 -1488 0
c Var 'max_left_00001_00002_00006' order represents '6' with '1492'
-1490 1492 0
c Var 'max_left_00001_00002_00006' direct represents '6' with '1493'
1490 -1492 1493 0
-1493 1492 0
-1493 -1490 0
c Var 'max_left_00001_00002_00006' order represents '7' with '1494'
-1492 1494 0
c Var 'max_left_00001_00002_00006' direct represents '7' with '1495'
1492 -1494 1495 0
-1495 1494 0
-1495 -1492 0
c Var 'max_left_00001_00002_00006' order represents '8' with '1496'
-1494 1496 0
c Var 'max_left_00001_00002_00006' direct represents '8' with '1497'
1494 -1496 1497 0
-1497 1496 0
-1497 -1494 0
c Var 'max_left_00001_00002_00006' direct represents '9' with '-1496'
1483 1485 1487 1489 1491 1493 1495 1497 -1496 0
c Encoding variable: max_left_00001_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00007' order represents '1' with '1498'
c Var 'max_left_00001_00002_00007' direct represents '1' with '1498'
c Var 'max_left_00001_00002_00007' order represents '2' with '1499'
-1498 1499 0
c Var 'max_left_00001_00002_00007' direct represents '2' with '1500'
1498 -1499 1500 0
-1500 1499 0
-1500 -1498 0
c Var 'max_left_00001_00002_00007' order represents '3' with '1501'
-1499 1501 0
c Var 'max_left_00001_00002_00007' direct represents '3' with '1502'
1499 -1501 1502 0
-1502 1501 0
-1502 -1499 0
c Var 'max_left_00001_00002_00007' order represents '4' with '1503'
-1501 1503 0
c Var 'max_left_00001_00002_00007' direct represents '4' with '1504'
1501 -1503 1504 0
-1504 1503 0
-1504 -1501 0
c Var 'max_left_00001_00002_00007' order represents '5' with '1505'
-1503 1505 0
c Var 'max_left_00001_00002_00007' direct represents '5' with '1506'
1503 -1505 1506 0
-1506 1505 0
-1506 -1503 0
c Var 'max_left_00001_00002_00007' order represents '6' with '1507'
-1505 1507 0
c Var 'max_left_00001_00002_00007' direct represents '6' with '1508'
1505 -1507 1508 0
-1508 1507 0
-1508 -1505 0
c Var 'max_left_00001_00002_00007' order represents '7' with '1509'
-1507 1509 0
c Var 'max_left_00001_00002_00007' direct represents '7' with '1510'
1507 -1509 1510 0
-1510 1509 0
-1510 -1507 0
c Var 'max_left_00001_00002_00007' order represents '8' with '1511'
-1509 1511 0
c Var 'max_left_00001_00002_00007' direct represents '8' with '1512'
1509 -1511 1512 0
-1512 1511 0
-1512 -1509 0
c Var 'max_left_00001_00002_00007' direct represents '9' with '-1511'
1498 1500 1502 1504 1506 1508 1510 1512 -1511 0
c Encoding variable: max_left_00001_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00008' order represents '1' with '1513'
c Var 'max_left_00001_00002_00008' direct represents '1' with '1513'
c Var 'max_left_00001_00002_00008' order represents '2' with '1514'
-1513 1514 0
c Var 'max_left_00001_00002_00008' direct represents '2' with '1515'
1513 -1514 1515 0
-1515 1514 0
-1515 -1513 0
c Var 'max_left_00001_00002_00008' order represents '3' with '1516'
-1514 1516 0
c Var 'max_left_00001_00002_00008' direct represents '3' with '1517'
1514 -1516 1517 0
-1517 1516 0
-1517 -1514 0
c Var 'max_left_00001_00002_00008' order represents '4' with '1518'
-1516 1518 0
c Var 'max_left_00001_00002_00008' direct represents '4' with '1519'
1516 -1518 1519 0
-1519 1518 0
-1519 -1516 0
c Var 'max_left_00001_00002_00008' order represents '5' with '1520'
-1518 1520 0
c Var 'max_left_00001_00002_00008' direct represents '5' with '1521'
1518 -1520 1521 0
-1521 1520 0
-1521 -1518 0
c Var 'max_left_00001_00002_00008' order represents '6' with '1522'
-1520 1522 0
c Var 'max_left_00001_00002_00008' direct represents '6' with '1523'
1520 -1522 1523 0
-1523 1522 0
-1523 -1520 0
c Var 'max_left_00001_00002_00008' order represents '7' with '1524'
-1522 1524 0
c Var 'max_left_00001_00002_00008' direct represents '7' with '1525'
1522 -1524 1525 0
-1525 1524 0
-1525 -1522 0
c Var 'max_left_00001_00002_00008' order represents '8' with '1526'
-1524 1526 0
c Var 'max_left_00001_00002_00008' direct represents '8' with '1527'
1524 -1526 1527 0
-1527 1526 0
-1527 -1524 0
c Var 'max_left_00001_00002_00008' direct represents '9' with '-1526'
1513 1515 1517 1519 1521 1523 1525 1527 -1526 0
c Encoding variable: max_left_00001_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00002_00009' order represents '1' with '1528'
c Var 'max_left_00001_00002_00009' direct represents '1' with '1528'
c Var 'max_left_00001_00002_00009' order represents '2' with '1529'
-1528 1529 0
c Var 'max_left_00001_00002_00009' direct represents '2' with '1530'
1528 -1529 1530 0
-1530 1529 0
-1530 -1528 0
c Var 'max_left_00001_00002_00009' order represents '3' with '1531'
-1529 1531 0
c Var 'max_left_00001_00002_00009' direct represents '3' with '1532'
1529 -1531 1532 0
-1532 1531 0
-1532 -1529 0
c Var 'max_left_00001_00002_00009' order represents '4' with '1533'
-1531 1533 0
c Var 'max_left_00001_00002_00009' direct represents '4' with '1534'
1531 -1533 1534 0
-1534 1533 0
-1534 -1531 0
c Var 'max_left_00001_00002_00009' order represents '5' with '1535'
-1533 1535 0
c Var 'max_left_00001_00002_00009' direct represents '5' with '1536'
1533 -1535 1536 0
-1536 1535 0
-1536 -1533 0
c Var 'max_left_00001_00002_00009' order represents '6' with '1537'
-1535 1537 0
c Var 'max_left_00001_00002_00009' direct represents '6' with '1538'
1535 -1537 1538 0
-1538 1537 0
-1538 -1535 0
c Var 'max_left_00001_00002_00009' order represents '7' with '1539'
-1537 1539 0
c Var 'max_left_00001_00002_00009' direct represents '7' with '1540'
1537 -1539 1540 0
-1540 1539 0
-1540 -1537 0
c Var 'max_left_00001_00002_00009' order represents '8' with '1541'
-1539 1541 0
c Var 'max_left_00001_00002_00009' direct represents '8' with '1542'
1539 -1541 1542 0
-1542 1541 0
-1542 -1539 0
c Var 'max_left_00001_00002_00009' direct represents '9' with '-1541'
1528 1530 1532 1534 1536 1538 1540 1542 -1541 0
c Encoding variable: max_left_00001_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00003_00000' direct represents '0' with '1543'
1543 0
c Encoding variable: max_left_00001_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00001' order represents '1' with '1544'
c Var 'max_left_00001_00003_00001' direct represents '1' with '1544'
c Var 'max_left_00001_00003_00001' order represents '2' with '1545'
-1544 1545 0
c Var 'max_left_00001_00003_00001' direct represents '2' with '1546'
1544 -1545 1546 0
-1546 1545 0
-1546 -1544 0
c Var 'max_left_00001_00003_00001' order represents '3' with '1547'
-1545 1547 0
c Var 'max_left_00001_00003_00001' direct represents '3' with '1548'
1545 -1547 1548 0
-1548 1547 0
-1548 -1545 0
c Var 'max_left_00001_00003_00001' order represents '4' with '1549'
-1547 1549 0
c Var 'max_left_00001_00003_00001' direct represents '4' with '1550'
1547 -1549 1550 0
-1550 1549 0
-1550 -1547 0
c Var 'max_left_00001_00003_00001' order represents '5' with '1551'
-1549 1551 0
c Var 'max_left_00001_00003_00001' direct represents '5' with '1552'
1549 -1551 1552 0
-1552 1551 0
-1552 -1549 0
c Var 'max_left_00001_00003_00001' order represents '6' with '1553'
-1551 1553 0
c Var 'max_left_00001_00003_00001' direct represents '6' with '1554'
1551 -1553 1554 0
-1554 1553 0
-1554 -1551 0
c Var 'max_left_00001_00003_00001' order represents '7' with '1555'
-1553 1555 0
c Var 'max_left_00001_00003_00001' direct represents '7' with '1556'
1553 -1555 1556 0
-1556 1555 0
-1556 -1553 0
c Var 'max_left_00001_00003_00001' order represents '8' with '1557'
-1555 1557 0
c Var 'max_left_00001_00003_00001' direct represents '8' with '1558'
1555 -1557 1558 0
-1558 1557 0
-1558 -1555 0
c Var 'max_left_00001_00003_00001' direct represents '9' with '-1557'
1544 1546 1548 1550 1552 1554 1556 1558 -1557 0
c Encoding variable: max_left_00001_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00002' order represents '1' with '1559'
c Var 'max_left_00001_00003_00002' direct represents '1' with '1559'
c Var 'max_left_00001_00003_00002' order represents '2' with '1560'
-1559 1560 0
c Var 'max_left_00001_00003_00002' direct represents '2' with '1561'
1559 -1560 1561 0
-1561 1560 0
-1561 -1559 0
c Var 'max_left_00001_00003_00002' order represents '3' with '1562'
-1560 1562 0
c Var 'max_left_00001_00003_00002' direct represents '3' with '1563'
1560 -1562 1563 0
-1563 1562 0
-1563 -1560 0
c Var 'max_left_00001_00003_00002' order represents '4' with '1564'
-1562 1564 0
c Var 'max_left_00001_00003_00002' direct represents '4' with '1565'
1562 -1564 1565 0
-1565 1564 0
-1565 -1562 0
c Var 'max_left_00001_00003_00002' order represents '5' with '1566'
-1564 1566 0
c Var 'max_left_00001_00003_00002' direct represents '5' with '1567'
1564 -1566 1567 0
-1567 1566 0
-1567 -1564 0
c Var 'max_left_00001_00003_00002' order represents '6' with '1568'
-1566 1568 0
c Var 'max_left_00001_00003_00002' direct represents '6' with '1569'
1566 -1568 1569 0
-1569 1568 0
-1569 -1566 0
c Var 'max_left_00001_00003_00002' order represents '7' with '1570'
-1568 1570 0
c Var 'max_left_00001_00003_00002' direct represents '7' with '1571'
1568 -1570 1571 0
-1571 1570 0
-1571 -1568 0
c Var 'max_left_00001_00003_00002' order represents '8' with '1572'
-1570 1572 0
c Var 'max_left_00001_00003_00002' direct represents '8' with '1573'
1570 -1572 1573 0
-1573 1572 0
-1573 -1570 0
c Var 'max_left_00001_00003_00002' direct represents '9' with '-1572'
1559 1561 1563 1565 1567 1569 1571 1573 -1572 0
c Encoding variable: max_left_00001_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00003' order represents '1' with '1574'
c Var 'max_left_00001_00003_00003' direct represents '1' with '1574'
c Var 'max_left_00001_00003_00003' order represents '2' with '1575'
-1574 1575 0
c Var 'max_left_00001_00003_00003' direct represents '2' with '1576'
1574 -1575 1576 0
-1576 1575 0
-1576 -1574 0
c Var 'max_left_00001_00003_00003' order represents '3' with '1577'
-1575 1577 0
c Var 'max_left_00001_00003_00003' direct represents '3' with '1578'
1575 -1577 1578 0
-1578 1577 0
-1578 -1575 0
c Var 'max_left_00001_00003_00003' order represents '4' with '1579'
-1577 1579 0
c Var 'max_left_00001_00003_00003' direct represents '4' with '1580'
1577 -1579 1580 0
-1580 1579 0
-1580 -1577 0
c Var 'max_left_00001_00003_00003' order represents '5' with '1581'
-1579 1581 0
c Var 'max_left_00001_00003_00003' direct represents '5' with '1582'
1579 -1581 1582 0
-1582 1581 0
-1582 -1579 0
c Var 'max_left_00001_00003_00003' order represents '6' with '1583'
-1581 1583 0
c Var 'max_left_00001_00003_00003' direct represents '6' with '1584'
1581 -1583 1584 0
-1584 1583 0
-1584 -1581 0
c Var 'max_left_00001_00003_00003' order represents '7' with '1585'
-1583 1585 0
c Var 'max_left_00001_00003_00003' direct represents '7' with '1586'
1583 -1585 1586 0
-1586 1585 0
-1586 -1583 0
c Var 'max_left_00001_00003_00003' order represents '8' with '1587'
-1585 1587 0
c Var 'max_left_00001_00003_00003' direct represents '8' with '1588'
1585 -1587 1588 0
-1588 1587 0
-1588 -1585 0
c Var 'max_left_00001_00003_00003' direct represents '9' with '-1587'
1574 1576 1578 1580 1582 1584 1586 1588 -1587 0
c Encoding variable: max_left_00001_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00004' order represents '1' with '1589'
c Var 'max_left_00001_00003_00004' direct represents '1' with '1589'
c Var 'max_left_00001_00003_00004' order represents '2' with '1590'
-1589 1590 0
c Var 'max_left_00001_00003_00004' direct represents '2' with '1591'
1589 -1590 1591 0
-1591 1590 0
-1591 -1589 0
c Var 'max_left_00001_00003_00004' order represents '3' with '1592'
-1590 1592 0
c Var 'max_left_00001_00003_00004' direct represents '3' with '1593'
1590 -1592 1593 0
-1593 1592 0
-1593 -1590 0
c Var 'max_left_00001_00003_00004' order represents '4' with '1594'
-1592 1594 0
c Var 'max_left_00001_00003_00004' direct represents '4' with '1595'
1592 -1594 1595 0
-1595 1594 0
-1595 -1592 0
c Var 'max_left_00001_00003_00004' order represents '5' with '1596'
-1594 1596 0
c Var 'max_left_00001_00003_00004' direct represents '5' with '1597'
1594 -1596 1597 0
-1597 1596 0
-1597 -1594 0
c Var 'max_left_00001_00003_00004' order represents '6' with '1598'
-1596 1598 0
c Var 'max_left_00001_00003_00004' direct represents '6' with '1599'
1596 -1598 1599 0
-1599 1598 0
-1599 -1596 0
c Var 'max_left_00001_00003_00004' order represents '7' with '1600'
-1598 1600 0
c Var 'max_left_00001_00003_00004' direct represents '7' with '1601'
1598 -1600 1601 0
-1601 1600 0
-1601 -1598 0
c Var 'max_left_00001_00003_00004' order represents '8' with '1602'
-1600 1602 0
c Var 'max_left_00001_00003_00004' direct represents '8' with '1603'
1600 -1602 1603 0
-1603 1602 0
-1603 -1600 0
c Var 'max_left_00001_00003_00004' direct represents '9' with '-1602'
1589 1591 1593 1595 1597 1599 1601 1603 -1602 0
c Encoding variable: max_left_00001_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00005' order represents '1' with '1604'
c Var 'max_left_00001_00003_00005' direct represents '1' with '1604'
c Var 'max_left_00001_00003_00005' order represents '2' with '1605'
-1604 1605 0
c Var 'max_left_00001_00003_00005' direct represents '2' with '1606'
1604 -1605 1606 0
-1606 1605 0
-1606 -1604 0
c Var 'max_left_00001_00003_00005' order represents '3' with '1607'
-1605 1607 0
c Var 'max_left_00001_00003_00005' direct represents '3' with '1608'
1605 -1607 1608 0
-1608 1607 0
-1608 -1605 0
c Var 'max_left_00001_00003_00005' order represents '4' with '1609'
-1607 1609 0
c Var 'max_left_00001_00003_00005' direct represents '4' with '1610'
1607 -1609 1610 0
-1610 1609 0
-1610 -1607 0
c Var 'max_left_00001_00003_00005' order represents '5' with '1611'
-1609 1611 0
c Var 'max_left_00001_00003_00005' direct represents '5' with '1612'
1609 -1611 1612 0
-1612 1611 0
-1612 -1609 0
c Var 'max_left_00001_00003_00005' order represents '6' with '1613'
-1611 1613 0
c Var 'max_left_00001_00003_00005' direct represents '6' with '1614'
1611 -1613 1614 0
-1614 1613 0
-1614 -1611 0
c Var 'max_left_00001_00003_00005' order represents '7' with '1615'
-1613 1615 0
c Var 'max_left_00001_00003_00005' direct represents '7' with '1616'
1613 -1615 1616 0
-1616 1615 0
-1616 -1613 0
c Var 'max_left_00001_00003_00005' order represents '8' with '1617'
-1615 1617 0
c Var 'max_left_00001_00003_00005' direct represents '8' with '1618'
1615 -1617 1618 0
-1618 1617 0
-1618 -1615 0
c Var 'max_left_00001_00003_00005' direct represents '9' with '-1617'
1604 1606 1608 1610 1612 1614 1616 1618 -1617 0
c Encoding variable: max_left_00001_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00006' order represents '1' with '1619'
c Var 'max_left_00001_00003_00006' direct represents '1' with '1619'
c Var 'max_left_00001_00003_00006' order represents '2' with '1620'
-1619 1620 0
c Var 'max_left_00001_00003_00006' direct represents '2' with '1621'
1619 -1620 1621 0
-1621 1620 0
-1621 -1619 0
c Var 'max_left_00001_00003_00006' order represents '3' with '1622'
-1620 1622 0
c Var 'max_left_00001_00003_00006' direct represents '3' with '1623'
1620 -1622 1623 0
-1623 1622 0
-1623 -1620 0
c Var 'max_left_00001_00003_00006' order represents '4' with '1624'
-1622 1624 0
c Var 'max_left_00001_00003_00006' direct represents '4' with '1625'
1622 -1624 1625 0
-1625 1624 0
-1625 -1622 0
c Var 'max_left_00001_00003_00006' order represents '5' with '1626'
-1624 1626 0
c Var 'max_left_00001_00003_00006' direct represents '5' with '1627'
1624 -1626 1627 0
-1627 1626 0
-1627 -1624 0
c Var 'max_left_00001_00003_00006' order represents '6' with '1628'
-1626 1628 0
c Var 'max_left_00001_00003_00006' direct represents '6' with '1629'
1626 -1628 1629 0
-1629 1628 0
-1629 -1626 0
c Var 'max_left_00001_00003_00006' order represents '7' with '1630'
-1628 1630 0
c Var 'max_left_00001_00003_00006' direct represents '7' with '1631'
1628 -1630 1631 0
-1631 1630 0
-1631 -1628 0
c Var 'max_left_00001_00003_00006' order represents '8' with '1632'
-1630 1632 0
c Var 'max_left_00001_00003_00006' direct represents '8' with '1633'
1630 -1632 1633 0
-1633 1632 0
-1633 -1630 0
c Var 'max_left_00001_00003_00006' direct represents '9' with '-1632'
1619 1621 1623 1625 1627 1629 1631 1633 -1632 0
c Encoding variable: max_left_00001_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00007' order represents '1' with '1634'
c Var 'max_left_00001_00003_00007' direct represents '1' with '1634'
c Var 'max_left_00001_00003_00007' order represents '2' with '1635'
-1634 1635 0
c Var 'max_left_00001_00003_00007' direct represents '2' with '1636'
1634 -1635 1636 0
-1636 1635 0
-1636 -1634 0
c Var 'max_left_00001_00003_00007' order represents '3' with '1637'
-1635 1637 0
c Var 'max_left_00001_00003_00007' direct represents '3' with '1638'
1635 -1637 1638 0
-1638 1637 0
-1638 -1635 0
c Var 'max_left_00001_00003_00007' order represents '4' with '1639'
-1637 1639 0
c Var 'max_left_00001_00003_00007' direct represents '4' with '1640'
1637 -1639 1640 0
-1640 1639 0
-1640 -1637 0
c Var 'max_left_00001_00003_00007' order represents '5' with '1641'
-1639 1641 0
c Var 'max_left_00001_00003_00007' direct represents '5' with '1642'
1639 -1641 1642 0
-1642 1641 0
-1642 -1639 0
c Var 'max_left_00001_00003_00007' order represents '6' with '1643'
-1641 1643 0
c Var 'max_left_00001_00003_00007' direct represents '6' with '1644'
1641 -1643 1644 0
-1644 1643 0
-1644 -1641 0
c Var 'max_left_00001_00003_00007' order represents '7' with '1645'
-1643 1645 0
c Var 'max_left_00001_00003_00007' direct represents '7' with '1646'
1643 -1645 1646 0
-1646 1645 0
-1646 -1643 0
c Var 'max_left_00001_00003_00007' order represents '8' with '1647'
-1645 1647 0
c Var 'max_left_00001_00003_00007' direct represents '8' with '1648'
1645 -1647 1648 0
-1648 1647 0
-1648 -1645 0
c Var 'max_left_00001_00003_00007' direct represents '9' with '-1647'
1634 1636 1638 1640 1642 1644 1646 1648 -1647 0
c Encoding variable: max_left_00001_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00008' order represents '1' with '1649'
c Var 'max_left_00001_00003_00008' direct represents '1' with '1649'
c Var 'max_left_00001_00003_00008' order represents '2' with '1650'
-1649 1650 0
c Var 'max_left_00001_00003_00008' direct represents '2' with '1651'
1649 -1650 1651 0
-1651 1650 0
-1651 -1649 0
c Var 'max_left_00001_00003_00008' order represents '3' with '1652'
-1650 1652 0
c Var 'max_left_00001_00003_00008' direct represents '3' with '1653'
1650 -1652 1653 0
-1653 1652 0
-1653 -1650 0
c Var 'max_left_00001_00003_00008' order represents '4' with '1654'
-1652 1654 0
c Var 'max_left_00001_00003_00008' direct represents '4' with '1655'
1652 -1654 1655 0
-1655 1654 0
-1655 -1652 0
c Var 'max_left_00001_00003_00008' order represents '5' with '1656'
-1654 1656 0
c Var 'max_left_00001_00003_00008' direct represents '5' with '1657'
1654 -1656 1657 0
-1657 1656 0
-1657 -1654 0
c Var 'max_left_00001_00003_00008' order represents '6' with '1658'
-1656 1658 0
c Var 'max_left_00001_00003_00008' direct represents '6' with '1659'
1656 -1658 1659 0
-1659 1658 0
-1659 -1656 0
c Var 'max_left_00001_00003_00008' order represents '7' with '1660'
-1658 1660 0
c Var 'max_left_00001_00003_00008' direct represents '7' with '1661'
1658 -1660 1661 0
-1661 1660 0
-1661 -1658 0
c Var 'max_left_00001_00003_00008' order represents '8' with '1662'
-1660 1662 0
c Var 'max_left_00001_00003_00008' direct represents '8' with '1663'
1660 -1662 1663 0
-1663 1662 0
-1663 -1660 0
c Var 'max_left_00001_00003_00008' direct represents '9' with '-1662'
1649 1651 1653 1655 1657 1659 1661 1663 -1662 0
c Encoding variable: max_left_00001_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00003_00009' order represents '1' with '1664'
c Var 'max_left_00001_00003_00009' direct represents '1' with '1664'
c Var 'max_left_00001_00003_00009' order represents '2' with '1665'
-1664 1665 0
c Var 'max_left_00001_00003_00009' direct represents '2' with '1666'
1664 -1665 1666 0
-1666 1665 0
-1666 -1664 0
c Var 'max_left_00001_00003_00009' order represents '3' with '1667'
-1665 1667 0
c Var 'max_left_00001_00003_00009' direct represents '3' with '1668'
1665 -1667 1668 0
-1668 1667 0
-1668 -1665 0
c Var 'max_left_00001_00003_00009' order represents '4' with '1669'
-1667 1669 0
c Var 'max_left_00001_00003_00009' direct represents '4' with '1670'
1667 -1669 1670 0
-1670 1669 0
-1670 -1667 0
c Var 'max_left_00001_00003_00009' order represents '5' with '1671'
-1669 1671 0
c Var 'max_left_00001_00003_00009' direct represents '5' with '1672'
1669 -1671 1672 0
-1672 1671 0
-1672 -1669 0
c Var 'max_left_00001_00003_00009' order represents '6' with '1673'
-1671 1673 0
c Var 'max_left_00001_00003_00009' direct represents '6' with '1674'
1671 -1673 1674 0
-1674 1673 0
-1674 -1671 0
c Var 'max_left_00001_00003_00009' order represents '7' with '1675'
-1673 1675 0
c Var 'max_left_00001_00003_00009' direct represents '7' with '1676'
1673 -1675 1676 0
-1676 1675 0
-1676 -1673 0
c Var 'max_left_00001_00003_00009' order represents '8' with '1677'
-1675 1677 0
c Var 'max_left_00001_00003_00009' direct represents '8' with '1678'
1675 -1677 1678 0
-1678 1677 0
-1678 -1675 0
c Var 'max_left_00001_00003_00009' direct represents '9' with '-1677'
1664 1666 1668 1670 1672 1674 1676 1678 -1677 0
c Encoding variable: max_left_00001_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00004_00000' direct represents '0' with '1679'
1679 0
c Encoding variable: max_left_00001_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00001' order represents '1' with '1680'
c Var 'max_left_00001_00004_00001' direct represents '1' with '1680'
c Var 'max_left_00001_00004_00001' order represents '2' with '1681'
-1680 1681 0
c Var 'max_left_00001_00004_00001' direct represents '2' with '1682'
1680 -1681 1682 0
-1682 1681 0
-1682 -1680 0
c Var 'max_left_00001_00004_00001' order represents '3' with '1683'
-1681 1683 0
c Var 'max_left_00001_00004_00001' direct represents '3' with '1684'
1681 -1683 1684 0
-1684 1683 0
-1684 -1681 0
c Var 'max_left_00001_00004_00001' order represents '4' with '1685'
-1683 1685 0
c Var 'max_left_00001_00004_00001' direct represents '4' with '1686'
1683 -1685 1686 0
-1686 1685 0
-1686 -1683 0
c Var 'max_left_00001_00004_00001' order represents '5' with '1687'
-1685 1687 0
c Var 'max_left_00001_00004_00001' direct represents '5' with '1688'
1685 -1687 1688 0
-1688 1687 0
-1688 -1685 0
c Var 'max_left_00001_00004_00001' order represents '6' with '1689'
-1687 1689 0
c Var 'max_left_00001_00004_00001' direct represents '6' with '1690'
1687 -1689 1690 0
-1690 1689 0
-1690 -1687 0
c Var 'max_left_00001_00004_00001' order represents '7' with '1691'
-1689 1691 0
c Var 'max_left_00001_00004_00001' direct represents '7' with '1692'
1689 -1691 1692 0
-1692 1691 0
-1692 -1689 0
c Var 'max_left_00001_00004_00001' order represents '8' with '1693'
-1691 1693 0
c Var 'max_left_00001_00004_00001' direct represents '8' with '1694'
1691 -1693 1694 0
-1694 1693 0
-1694 -1691 0
c Var 'max_left_00001_00004_00001' direct represents '9' with '-1693'
1680 1682 1684 1686 1688 1690 1692 1694 -1693 0
c Encoding variable: max_left_00001_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00002' order represents '1' with '1695'
c Var 'max_left_00001_00004_00002' direct represents '1' with '1695'
c Var 'max_left_00001_00004_00002' order represents '2' with '1696'
-1695 1696 0
c Var 'max_left_00001_00004_00002' direct represents '2' with '1697'
1695 -1696 1697 0
-1697 1696 0
-1697 -1695 0
c Var 'max_left_00001_00004_00002' order represents '3' with '1698'
-1696 1698 0
c Var 'max_left_00001_00004_00002' direct represents '3' with '1699'
1696 -1698 1699 0
-1699 1698 0
-1699 -1696 0
c Var 'max_left_00001_00004_00002' order represents '4' with '1700'
-1698 1700 0
c Var 'max_left_00001_00004_00002' direct represents '4' with '1701'
1698 -1700 1701 0
-1701 1700 0
-1701 -1698 0
c Var 'max_left_00001_00004_00002' order represents '5' with '1702'
-1700 1702 0
c Var 'max_left_00001_00004_00002' direct represents '5' with '1703'
1700 -1702 1703 0
-1703 1702 0
-1703 -1700 0
c Var 'max_left_00001_00004_00002' order represents '6' with '1704'
-1702 1704 0
c Var 'max_left_00001_00004_00002' direct represents '6' with '1705'
1702 -1704 1705 0
-1705 1704 0
-1705 -1702 0
c Var 'max_left_00001_00004_00002' order represents '7' with '1706'
-1704 1706 0
c Var 'max_left_00001_00004_00002' direct represents '7' with '1707'
1704 -1706 1707 0
-1707 1706 0
-1707 -1704 0
c Var 'max_left_00001_00004_00002' order represents '8' with '1708'
-1706 1708 0
c Var 'max_left_00001_00004_00002' direct represents '8' with '1709'
1706 -1708 1709 0
-1709 1708 0
-1709 -1706 0
c Var 'max_left_00001_00004_00002' direct represents '9' with '-1708'
1695 1697 1699 1701 1703 1705 1707 1709 -1708 0
c Encoding variable: max_left_00001_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00003' order represents '1' with '1710'
c Var 'max_left_00001_00004_00003' direct represents '1' with '1710'
c Var 'max_left_00001_00004_00003' order represents '2' with '1711'
-1710 1711 0
c Var 'max_left_00001_00004_00003' direct represents '2' with '1712'
1710 -1711 1712 0
-1712 1711 0
-1712 -1710 0
c Var 'max_left_00001_00004_00003' order represents '3' with '1713'
-1711 1713 0
c Var 'max_left_00001_00004_00003' direct represents '3' with '1714'
1711 -1713 1714 0
-1714 1713 0
-1714 -1711 0
c Var 'max_left_00001_00004_00003' order represents '4' with '1715'
-1713 1715 0
c Var 'max_left_00001_00004_00003' direct represents '4' with '1716'
1713 -1715 1716 0
-1716 1715 0
-1716 -1713 0
c Var 'max_left_00001_00004_00003' order represents '5' with '1717'
-1715 1717 0
c Var 'max_left_00001_00004_00003' direct represents '5' with '1718'
1715 -1717 1718 0
-1718 1717 0
-1718 -1715 0
c Var 'max_left_00001_00004_00003' order represents '6' with '1719'
-1717 1719 0
c Var 'max_left_00001_00004_00003' direct represents '6' with '1720'
1717 -1719 1720 0
-1720 1719 0
-1720 -1717 0
c Var 'max_left_00001_00004_00003' order represents '7' with '1721'
-1719 1721 0
c Var 'max_left_00001_00004_00003' direct represents '7' with '1722'
1719 -1721 1722 0
-1722 1721 0
-1722 -1719 0
c Var 'max_left_00001_00004_00003' order represents '8' with '1723'
-1721 1723 0
c Var 'max_left_00001_00004_00003' direct represents '8' with '1724'
1721 -1723 1724 0
-1724 1723 0
-1724 -1721 0
c Var 'max_left_00001_00004_00003' direct represents '9' with '-1723'
1710 1712 1714 1716 1718 1720 1722 1724 -1723 0
c Encoding variable: max_left_00001_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00004' order represents '1' with '1725'
c Var 'max_left_00001_00004_00004' direct represents '1' with '1725'
c Var 'max_left_00001_00004_00004' order represents '2' with '1726'
-1725 1726 0
c Var 'max_left_00001_00004_00004' direct represents '2' with '1727'
1725 -1726 1727 0
-1727 1726 0
-1727 -1725 0
c Var 'max_left_00001_00004_00004' order represents '3' with '1728'
-1726 1728 0
c Var 'max_left_00001_00004_00004' direct represents '3' with '1729'
1726 -1728 1729 0
-1729 1728 0
-1729 -1726 0
c Var 'max_left_00001_00004_00004' order represents '4' with '1730'
-1728 1730 0
c Var 'max_left_00001_00004_00004' direct represents '4' with '1731'
1728 -1730 1731 0
-1731 1730 0
-1731 -1728 0
c Var 'max_left_00001_00004_00004' order represents '5' with '1732'
-1730 1732 0
c Var 'max_left_00001_00004_00004' direct represents '5' with '1733'
1730 -1732 1733 0
-1733 1732 0
-1733 -1730 0
c Var 'max_left_00001_00004_00004' order represents '6' with '1734'
-1732 1734 0
c Var 'max_left_00001_00004_00004' direct represents '6' with '1735'
1732 -1734 1735 0
-1735 1734 0
-1735 -1732 0
c Var 'max_left_00001_00004_00004' order represents '7' with '1736'
-1734 1736 0
c Var 'max_left_00001_00004_00004' direct represents '7' with '1737'
1734 -1736 1737 0
-1737 1736 0
-1737 -1734 0
c Var 'max_left_00001_00004_00004' order represents '8' with '1738'
-1736 1738 0
c Var 'max_left_00001_00004_00004' direct represents '8' with '1739'
1736 -1738 1739 0
-1739 1738 0
-1739 -1736 0
c Var 'max_left_00001_00004_00004' direct represents '9' with '-1738'
1725 1727 1729 1731 1733 1735 1737 1739 -1738 0
c Encoding variable: max_left_00001_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00005' order represents '1' with '1740'
c Var 'max_left_00001_00004_00005' direct represents '1' with '1740'
c Var 'max_left_00001_00004_00005' order represents '2' with '1741'
-1740 1741 0
c Var 'max_left_00001_00004_00005' direct represents '2' with '1742'
1740 -1741 1742 0
-1742 1741 0
-1742 -1740 0
c Var 'max_left_00001_00004_00005' order represents '3' with '1743'
-1741 1743 0
c Var 'max_left_00001_00004_00005' direct represents '3' with '1744'
1741 -1743 1744 0
-1744 1743 0
-1744 -1741 0
c Var 'max_left_00001_00004_00005' order represents '4' with '1745'
-1743 1745 0
c Var 'max_left_00001_00004_00005' direct represents '4' with '1746'
1743 -1745 1746 0
-1746 1745 0
-1746 -1743 0
c Var 'max_left_00001_00004_00005' order represents '5' with '1747'
-1745 1747 0
c Var 'max_left_00001_00004_00005' direct represents '5' with '1748'
1745 -1747 1748 0
-1748 1747 0
-1748 -1745 0
c Var 'max_left_00001_00004_00005' order represents '6' with '1749'
-1747 1749 0
c Var 'max_left_00001_00004_00005' direct represents '6' with '1750'
1747 -1749 1750 0
-1750 1749 0
-1750 -1747 0
c Var 'max_left_00001_00004_00005' order represents '7' with '1751'
-1749 1751 0
c Var 'max_left_00001_00004_00005' direct represents '7' with '1752'
1749 -1751 1752 0
-1752 1751 0
-1752 -1749 0
c Var 'max_left_00001_00004_00005' order represents '8' with '1753'
-1751 1753 0
c Var 'max_left_00001_00004_00005' direct represents '8' with '1754'
1751 -1753 1754 0
-1754 1753 0
-1754 -1751 0
c Var 'max_left_00001_00004_00005' direct represents '9' with '-1753'
1740 1742 1744 1746 1748 1750 1752 1754 -1753 0
c Encoding variable: max_left_00001_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00006' order represents '1' with '1755'
c Var 'max_left_00001_00004_00006' direct represents '1' with '1755'
c Var 'max_left_00001_00004_00006' order represents '2' with '1756'
-1755 1756 0
c Var 'max_left_00001_00004_00006' direct represents '2' with '1757'
1755 -1756 1757 0
-1757 1756 0
-1757 -1755 0
c Var 'max_left_00001_00004_00006' order represents '3' with '1758'
-1756 1758 0
c Var 'max_left_00001_00004_00006' direct represents '3' with '1759'
1756 -1758 1759 0
-1759 1758 0
-1759 -1756 0
c Var 'max_left_00001_00004_00006' order represents '4' with '1760'
-1758 1760 0
c Var 'max_left_00001_00004_00006' direct represents '4' with '1761'
1758 -1760 1761 0
-1761 1760 0
-1761 -1758 0
c Var 'max_left_00001_00004_00006' order represents '5' with '1762'
-1760 1762 0
c Var 'max_left_00001_00004_00006' direct represents '5' with '1763'
1760 -1762 1763 0
-1763 1762 0
-1763 -1760 0
c Var 'max_left_00001_00004_00006' order represents '6' with '1764'
-1762 1764 0
c Var 'max_left_00001_00004_00006' direct represents '6' with '1765'
1762 -1764 1765 0
-1765 1764 0
-1765 -1762 0
c Var 'max_left_00001_00004_00006' order represents '7' with '1766'
-1764 1766 0
c Var 'max_left_00001_00004_00006' direct represents '7' with '1767'
1764 -1766 1767 0
-1767 1766 0
-1767 -1764 0
c Var 'max_left_00001_00004_00006' order represents '8' with '1768'
-1766 1768 0
c Var 'max_left_00001_00004_00006' direct represents '8' with '1769'
1766 -1768 1769 0
-1769 1768 0
-1769 -1766 0
c Var 'max_left_00001_00004_00006' direct represents '9' with '-1768'
1755 1757 1759 1761 1763 1765 1767 1769 -1768 0
c Encoding variable: max_left_00001_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00007' order represents '1' with '1770'
c Var 'max_left_00001_00004_00007' direct represents '1' with '1770'
c Var 'max_left_00001_00004_00007' order represents '2' with '1771'
-1770 1771 0
c Var 'max_left_00001_00004_00007' direct represents '2' with '1772'
1770 -1771 1772 0
-1772 1771 0
-1772 -1770 0
c Var 'max_left_00001_00004_00007' order represents '3' with '1773'
-1771 1773 0
c Var 'max_left_00001_00004_00007' direct represents '3' with '1774'
1771 -1773 1774 0
-1774 1773 0
-1774 -1771 0
c Var 'max_left_00001_00004_00007' order represents '4' with '1775'
-1773 1775 0
c Var 'max_left_00001_00004_00007' direct represents '4' with '1776'
1773 -1775 1776 0
-1776 1775 0
-1776 -1773 0
c Var 'max_left_00001_00004_00007' order represents '5' with '1777'
-1775 1777 0
c Var 'max_left_00001_00004_00007' direct represents '5' with '1778'
1775 -1777 1778 0
-1778 1777 0
-1778 -1775 0
c Var 'max_left_00001_00004_00007' order represents '6' with '1779'
-1777 1779 0
c Var 'max_left_00001_00004_00007' direct represents '6' with '1780'
1777 -1779 1780 0
-1780 1779 0
-1780 -1777 0
c Var 'max_left_00001_00004_00007' order represents '7' with '1781'
-1779 1781 0
c Var 'max_left_00001_00004_00007' direct represents '7' with '1782'
1779 -1781 1782 0
-1782 1781 0
-1782 -1779 0
c Var 'max_left_00001_00004_00007' order represents '8' with '1783'
-1781 1783 0
c Var 'max_left_00001_00004_00007' direct represents '8' with '1784'
1781 -1783 1784 0
-1784 1783 0
-1784 -1781 0
c Var 'max_left_00001_00004_00007' direct represents '9' with '-1783'
1770 1772 1774 1776 1778 1780 1782 1784 -1783 0
c Encoding variable: max_left_00001_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00008' order represents '1' with '1785'
c Var 'max_left_00001_00004_00008' direct represents '1' with '1785'
c Var 'max_left_00001_00004_00008' order represents '2' with '1786'
-1785 1786 0
c Var 'max_left_00001_00004_00008' direct represents '2' with '1787'
1785 -1786 1787 0
-1787 1786 0
-1787 -1785 0
c Var 'max_left_00001_00004_00008' order represents '3' with '1788'
-1786 1788 0
c Var 'max_left_00001_00004_00008' direct represents '3' with '1789'
1786 -1788 1789 0
-1789 1788 0
-1789 -1786 0
c Var 'max_left_00001_00004_00008' order represents '4' with '1790'
-1788 1790 0
c Var 'max_left_00001_00004_00008' direct represents '4' with '1791'
1788 -1790 1791 0
-1791 1790 0
-1791 -1788 0
c Var 'max_left_00001_00004_00008' order represents '5' with '1792'
-1790 1792 0
c Var 'max_left_00001_00004_00008' direct represents '5' with '1793'
1790 -1792 1793 0
-1793 1792 0
-1793 -1790 0
c Var 'max_left_00001_00004_00008' order represents '6' with '1794'
-1792 1794 0
c Var 'max_left_00001_00004_00008' direct represents '6' with '1795'
1792 -1794 1795 0
-1795 1794 0
-1795 -1792 0
c Var 'max_left_00001_00004_00008' order represents '7' with '1796'
-1794 1796 0
c Var 'max_left_00001_00004_00008' direct represents '7' with '1797'
1794 -1796 1797 0
-1797 1796 0
-1797 -1794 0
c Var 'max_left_00001_00004_00008' order represents '8' with '1798'
-1796 1798 0
c Var 'max_left_00001_00004_00008' direct represents '8' with '1799'
1796 -1798 1799 0
-1799 1798 0
-1799 -1796 0
c Var 'max_left_00001_00004_00008' direct represents '9' with '-1798'
1785 1787 1789 1791 1793 1795 1797 1799 -1798 0
c Encoding variable: max_left_00001_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00004_00009' order represents '1' with '1800'
c Var 'max_left_00001_00004_00009' direct represents '1' with '1800'
c Var 'max_left_00001_00004_00009' order represents '2' with '1801'
-1800 1801 0
c Var 'max_left_00001_00004_00009' direct represents '2' with '1802'
1800 -1801 1802 0
-1802 1801 0
-1802 -1800 0
c Var 'max_left_00001_00004_00009' order represents '3' with '1803'
-1801 1803 0
c Var 'max_left_00001_00004_00009' direct represents '3' with '1804'
1801 -1803 1804 0
-1804 1803 0
-1804 -1801 0
c Var 'max_left_00001_00004_00009' order represents '4' with '1805'
-1803 1805 0
c Var 'max_left_00001_00004_00009' direct represents '4' with '1806'
1803 -1805 1806 0
-1806 1805 0
-1806 -1803 0
c Var 'max_left_00001_00004_00009' order represents '5' with '1807'
-1805 1807 0
c Var 'max_left_00001_00004_00009' direct represents '5' with '1808'
1805 -1807 1808 0
-1808 1807 0
-1808 -1805 0
c Var 'max_left_00001_00004_00009' order represents '6' with '1809'
-1807 1809 0
c Var 'max_left_00001_00004_00009' direct represents '6' with '1810'
1807 -1809 1810 0
-1810 1809 0
-1810 -1807 0
c Var 'max_left_00001_00004_00009' order represents '7' with '1811'
-1809 1811 0
c Var 'max_left_00001_00004_00009' direct represents '7' with '1812'
1809 -1811 1812 0
-1812 1811 0
-1812 -1809 0
c Var 'max_left_00001_00004_00009' order represents '8' with '1813'
-1811 1813 0
c Var 'max_left_00001_00004_00009' direct represents '8' with '1814'
1811 -1813 1814 0
-1814 1813 0
-1814 -1811 0
c Var 'max_left_00001_00004_00009' direct represents '9' with '-1813'
1800 1802 1804 1806 1808 1810 1812 1814 -1813 0
c Encoding variable: max_left_00001_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00005_00000' direct represents '0' with '1815'
1815 0
c Encoding variable: max_left_00001_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00001' order represents '1' with '1816'
c Var 'max_left_00001_00005_00001' direct represents '1' with '1816'
c Var 'max_left_00001_00005_00001' order represents '2' with '1817'
-1816 1817 0
c Var 'max_left_00001_00005_00001' direct represents '2' with '1818'
1816 -1817 1818 0
-1818 1817 0
-1818 -1816 0
c Var 'max_left_00001_00005_00001' order represents '3' with '1819'
-1817 1819 0
c Var 'max_left_00001_00005_00001' direct represents '3' with '1820'
1817 -1819 1820 0
-1820 1819 0
-1820 -1817 0
c Var 'max_left_00001_00005_00001' order represents '4' with '1821'
-1819 1821 0
c Var 'max_left_00001_00005_00001' direct represents '4' with '1822'
1819 -1821 1822 0
-1822 1821 0
-1822 -1819 0
c Var 'max_left_00001_00005_00001' order represents '5' with '1823'
-1821 1823 0
c Var 'max_left_00001_00005_00001' direct represents '5' with '1824'
1821 -1823 1824 0
-1824 1823 0
-1824 -1821 0
c Var 'max_left_00001_00005_00001' order represents '6' with '1825'
-1823 1825 0
c Var 'max_left_00001_00005_00001' direct represents '6' with '1826'
1823 -1825 1826 0
-1826 1825 0
-1826 -1823 0
c Var 'max_left_00001_00005_00001' order represents '7' with '1827'
-1825 1827 0
c Var 'max_left_00001_00005_00001' direct represents '7' with '1828'
1825 -1827 1828 0
-1828 1827 0
-1828 -1825 0
c Var 'max_left_00001_00005_00001' order represents '8' with '1829'
-1827 1829 0
c Var 'max_left_00001_00005_00001' direct represents '8' with '1830'
1827 -1829 1830 0
-1830 1829 0
-1830 -1827 0
c Var 'max_left_00001_00005_00001' direct represents '9' with '-1829'
1816 1818 1820 1822 1824 1826 1828 1830 -1829 0
c Encoding variable: max_left_00001_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00002' order represents '1' with '1831'
c Var 'max_left_00001_00005_00002' direct represents '1' with '1831'
c Var 'max_left_00001_00005_00002' order represents '2' with '1832'
-1831 1832 0
c Var 'max_left_00001_00005_00002' direct represents '2' with '1833'
1831 -1832 1833 0
-1833 1832 0
-1833 -1831 0
c Var 'max_left_00001_00005_00002' order represents '3' with '1834'
-1832 1834 0
c Var 'max_left_00001_00005_00002' direct represents '3' with '1835'
1832 -1834 1835 0
-1835 1834 0
-1835 -1832 0
c Var 'max_left_00001_00005_00002' order represents '4' with '1836'
-1834 1836 0
c Var 'max_left_00001_00005_00002' direct represents '4' with '1837'
1834 -1836 1837 0
-1837 1836 0
-1837 -1834 0
c Var 'max_left_00001_00005_00002' order represents '5' with '1838'
-1836 1838 0
c Var 'max_left_00001_00005_00002' direct represents '5' with '1839'
1836 -1838 1839 0
-1839 1838 0
-1839 -1836 0
c Var 'max_left_00001_00005_00002' order represents '6' with '1840'
-1838 1840 0
c Var 'max_left_00001_00005_00002' direct represents '6' with '1841'
1838 -1840 1841 0
-1841 1840 0
-1841 -1838 0
c Var 'max_left_00001_00005_00002' order represents '7' with '1842'
-1840 1842 0
c Var 'max_left_00001_00005_00002' direct represents '7' with '1843'
1840 -1842 1843 0
-1843 1842 0
-1843 -1840 0
c Var 'max_left_00001_00005_00002' order represents '8' with '1844'
-1842 1844 0
c Var 'max_left_00001_00005_00002' direct represents '8' with '1845'
1842 -1844 1845 0
-1845 1844 0
-1845 -1842 0
c Var 'max_left_00001_00005_00002' direct represents '9' with '-1844'
1831 1833 1835 1837 1839 1841 1843 1845 -1844 0
c Encoding variable: max_left_00001_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00003' order represents '1' with '1846'
c Var 'max_left_00001_00005_00003' direct represents '1' with '1846'
c Var 'max_left_00001_00005_00003' order represents '2' with '1847'
-1846 1847 0
c Var 'max_left_00001_00005_00003' direct represents '2' with '1848'
1846 -1847 1848 0
-1848 1847 0
-1848 -1846 0
c Var 'max_left_00001_00005_00003' order represents '3' with '1849'
-1847 1849 0
c Var 'max_left_00001_00005_00003' direct represents '3' with '1850'
1847 -1849 1850 0
-1850 1849 0
-1850 -1847 0
c Var 'max_left_00001_00005_00003' order represents '4' with '1851'
-1849 1851 0
c Var 'max_left_00001_00005_00003' direct represents '4' with '1852'
1849 -1851 1852 0
-1852 1851 0
-1852 -1849 0
c Var 'max_left_00001_00005_00003' order represents '5' with '1853'
-1851 1853 0
c Var 'max_left_00001_00005_00003' direct represents '5' with '1854'
1851 -1853 1854 0
-1854 1853 0
-1854 -1851 0
c Var 'max_left_00001_00005_00003' order represents '6' with '1855'
-1853 1855 0
c Var 'max_left_00001_00005_00003' direct represents '6' with '1856'
1853 -1855 1856 0
-1856 1855 0
-1856 -1853 0
c Var 'max_left_00001_00005_00003' order represents '7' with '1857'
-1855 1857 0
c Var 'max_left_00001_00005_00003' direct represents '7' with '1858'
1855 -1857 1858 0
-1858 1857 0
-1858 -1855 0
c Var 'max_left_00001_00005_00003' order represents '8' with '1859'
-1857 1859 0
c Var 'max_left_00001_00005_00003' direct represents '8' with '1860'
1857 -1859 1860 0
-1860 1859 0
-1860 -1857 0
c Var 'max_left_00001_00005_00003' direct represents '9' with '-1859'
1846 1848 1850 1852 1854 1856 1858 1860 -1859 0
c Encoding variable: max_left_00001_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00004' order represents '1' with '1861'
c Var 'max_left_00001_00005_00004' direct represents '1' with '1861'
c Var 'max_left_00001_00005_00004' order represents '2' with '1862'
-1861 1862 0
c Var 'max_left_00001_00005_00004' direct represents '2' with '1863'
1861 -1862 1863 0
-1863 1862 0
-1863 -1861 0
c Var 'max_left_00001_00005_00004' order represents '3' with '1864'
-1862 1864 0
c Var 'max_left_00001_00005_00004' direct represents '3' with '1865'
1862 -1864 1865 0
-1865 1864 0
-1865 -1862 0
c Var 'max_left_00001_00005_00004' order represents '4' with '1866'
-1864 1866 0
c Var 'max_left_00001_00005_00004' direct represents '4' with '1867'
1864 -1866 1867 0
-1867 1866 0
-1867 -1864 0
c Var 'max_left_00001_00005_00004' order represents '5' with '1868'
-1866 1868 0
c Var 'max_left_00001_00005_00004' direct represents '5' with '1869'
1866 -1868 1869 0
-1869 1868 0
-1869 -1866 0
c Var 'max_left_00001_00005_00004' order represents '6' with '1870'
-1868 1870 0
c Var 'max_left_00001_00005_00004' direct represents '6' with '1871'
1868 -1870 1871 0
-1871 1870 0
-1871 -1868 0
c Var 'max_left_00001_00005_00004' order represents '7' with '1872'
-1870 1872 0
c Var 'max_left_00001_00005_00004' direct represents '7' with '1873'
1870 -1872 1873 0
-1873 1872 0
-1873 -1870 0
c Var 'max_left_00001_00005_00004' order represents '8' with '1874'
-1872 1874 0
c Var 'max_left_00001_00005_00004' direct represents '8' with '1875'
1872 -1874 1875 0
-1875 1874 0
-1875 -1872 0
c Var 'max_left_00001_00005_00004' direct represents '9' with '-1874'
1861 1863 1865 1867 1869 1871 1873 1875 -1874 0
c Encoding variable: max_left_00001_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00005' order represents '1' with '1876'
c Var 'max_left_00001_00005_00005' direct represents '1' with '1876'
c Var 'max_left_00001_00005_00005' order represents '2' with '1877'
-1876 1877 0
c Var 'max_left_00001_00005_00005' direct represents '2' with '1878'
1876 -1877 1878 0
-1878 1877 0
-1878 -1876 0
c Var 'max_left_00001_00005_00005' order represents '3' with '1879'
-1877 1879 0
c Var 'max_left_00001_00005_00005' direct represents '3' with '1880'
1877 -1879 1880 0
-1880 1879 0
-1880 -1877 0
c Var 'max_left_00001_00005_00005' order represents '4' with '1881'
-1879 1881 0
c Var 'max_left_00001_00005_00005' direct represents '4' with '1882'
1879 -1881 1882 0
-1882 1881 0
-1882 -1879 0
c Var 'max_left_00001_00005_00005' order represents '5' with '1883'
-1881 1883 0
c Var 'max_left_00001_00005_00005' direct represents '5' with '1884'
1881 -1883 1884 0
-1884 1883 0
-1884 -1881 0
c Var 'max_left_00001_00005_00005' order represents '6' with '1885'
-1883 1885 0
c Var 'max_left_00001_00005_00005' direct represents '6' with '1886'
1883 -1885 1886 0
-1886 1885 0
-1886 -1883 0
c Var 'max_left_00001_00005_00005' order represents '7' with '1887'
-1885 1887 0
c Var 'max_left_00001_00005_00005' direct represents '7' with '1888'
1885 -1887 1888 0
-1888 1887 0
-1888 -1885 0
c Var 'max_left_00001_00005_00005' order represents '8' with '1889'
-1887 1889 0
c Var 'max_left_00001_00005_00005' direct represents '8' with '1890'
1887 -1889 1890 0
-1890 1889 0
-1890 -1887 0
c Var 'max_left_00001_00005_00005' direct represents '9' with '-1889'
1876 1878 1880 1882 1884 1886 1888 1890 -1889 0
c Encoding variable: max_left_00001_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00006' order represents '1' with '1891'
c Var 'max_left_00001_00005_00006' direct represents '1' with '1891'
c Var 'max_left_00001_00005_00006' order represents '2' with '1892'
-1891 1892 0
c Var 'max_left_00001_00005_00006' direct represents '2' with '1893'
1891 -1892 1893 0
-1893 1892 0
-1893 -1891 0
c Var 'max_left_00001_00005_00006' order represents '3' with '1894'
-1892 1894 0
c Var 'max_left_00001_00005_00006' direct represents '3' with '1895'
1892 -1894 1895 0
-1895 1894 0
-1895 -1892 0
c Var 'max_left_00001_00005_00006' order represents '4' with '1896'
-1894 1896 0
c Var 'max_left_00001_00005_00006' direct represents '4' with '1897'
1894 -1896 1897 0
-1897 1896 0
-1897 -1894 0
c Var 'max_left_00001_00005_00006' order represents '5' with '1898'
-1896 1898 0
c Var 'max_left_00001_00005_00006' direct represents '5' with '1899'
1896 -1898 1899 0
-1899 1898 0
-1899 -1896 0
c Var 'max_left_00001_00005_00006' order represents '6' with '1900'
-1898 1900 0
c Var 'max_left_00001_00005_00006' direct represents '6' with '1901'
1898 -1900 1901 0
-1901 1900 0
-1901 -1898 0
c Var 'max_left_00001_00005_00006' order represents '7' with '1902'
-1900 1902 0
c Var 'max_left_00001_00005_00006' direct represents '7' with '1903'
1900 -1902 1903 0
-1903 1902 0
-1903 -1900 0
c Var 'max_left_00001_00005_00006' order represents '8' with '1904'
-1902 1904 0
c Var 'max_left_00001_00005_00006' direct represents '8' with '1905'
1902 -1904 1905 0
-1905 1904 0
-1905 -1902 0
c Var 'max_left_00001_00005_00006' direct represents '9' with '-1904'
1891 1893 1895 1897 1899 1901 1903 1905 -1904 0
c Encoding variable: max_left_00001_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00007' order represents '1' with '1906'
c Var 'max_left_00001_00005_00007' direct represents '1' with '1906'
c Var 'max_left_00001_00005_00007' order represents '2' with '1907'
-1906 1907 0
c Var 'max_left_00001_00005_00007' direct represents '2' with '1908'
1906 -1907 1908 0
-1908 1907 0
-1908 -1906 0
c Var 'max_left_00001_00005_00007' order represents '3' with '1909'
-1907 1909 0
c Var 'max_left_00001_00005_00007' direct represents '3' with '1910'
1907 -1909 1910 0
-1910 1909 0
-1910 -1907 0
c Var 'max_left_00001_00005_00007' order represents '4' with '1911'
-1909 1911 0
c Var 'max_left_00001_00005_00007' direct represents '4' with '1912'
1909 -1911 1912 0
-1912 1911 0
-1912 -1909 0
c Var 'max_left_00001_00005_00007' order represents '5' with '1913'
-1911 1913 0
c Var 'max_left_00001_00005_00007' direct represents '5' with '1914'
1911 -1913 1914 0
-1914 1913 0
-1914 -1911 0
c Var 'max_left_00001_00005_00007' order represents '6' with '1915'
-1913 1915 0
c Var 'max_left_00001_00005_00007' direct represents '6' with '1916'
1913 -1915 1916 0
-1916 1915 0
-1916 -1913 0
c Var 'max_left_00001_00005_00007' order represents '7' with '1917'
-1915 1917 0
c Var 'max_left_00001_00005_00007' direct represents '7' with '1918'
1915 -1917 1918 0
-1918 1917 0
-1918 -1915 0
c Var 'max_left_00001_00005_00007' order represents '8' with '1919'
-1917 1919 0
c Var 'max_left_00001_00005_00007' direct represents '8' with '1920'
1917 -1919 1920 0
-1920 1919 0
-1920 -1917 0
c Var 'max_left_00001_00005_00007' direct represents '9' with '-1919'
1906 1908 1910 1912 1914 1916 1918 1920 -1919 0
c Encoding variable: max_left_00001_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00008' order represents '1' with '1921'
c Var 'max_left_00001_00005_00008' direct represents '1' with '1921'
c Var 'max_left_00001_00005_00008' order represents '2' with '1922'
-1921 1922 0
c Var 'max_left_00001_00005_00008' direct represents '2' with '1923'
1921 -1922 1923 0
-1923 1922 0
-1923 -1921 0
c Var 'max_left_00001_00005_00008' order represents '3' with '1924'
-1922 1924 0
c Var 'max_left_00001_00005_00008' direct represents '3' with '1925'
1922 -1924 1925 0
-1925 1924 0
-1925 -1922 0
c Var 'max_left_00001_00005_00008' order represents '4' with '1926'
-1924 1926 0
c Var 'max_left_00001_00005_00008' direct represents '4' with '1927'
1924 -1926 1927 0
-1927 1926 0
-1927 -1924 0
c Var 'max_left_00001_00005_00008' order represents '5' with '1928'
-1926 1928 0
c Var 'max_left_00001_00005_00008' direct represents '5' with '1929'
1926 -1928 1929 0
-1929 1928 0
-1929 -1926 0
c Var 'max_left_00001_00005_00008' order represents '6' with '1930'
-1928 1930 0
c Var 'max_left_00001_00005_00008' direct represents '6' with '1931'
1928 -1930 1931 0
-1931 1930 0
-1931 -1928 0
c Var 'max_left_00001_00005_00008' order represents '7' with '1932'
-1930 1932 0
c Var 'max_left_00001_00005_00008' direct represents '7' with '1933'
1930 -1932 1933 0
-1933 1932 0
-1933 -1930 0
c Var 'max_left_00001_00005_00008' order represents '8' with '1934'
-1932 1934 0
c Var 'max_left_00001_00005_00008' direct represents '8' with '1935'
1932 -1934 1935 0
-1935 1934 0
-1935 -1932 0
c Var 'max_left_00001_00005_00008' direct represents '9' with '-1934'
1921 1923 1925 1927 1929 1931 1933 1935 -1934 0
c Encoding variable: max_left_00001_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00005_00009' order represents '1' with '1936'
c Var 'max_left_00001_00005_00009' direct represents '1' with '1936'
c Var 'max_left_00001_00005_00009' order represents '2' with '1937'
-1936 1937 0
c Var 'max_left_00001_00005_00009' direct represents '2' with '1938'
1936 -1937 1938 0
-1938 1937 0
-1938 -1936 0
c Var 'max_left_00001_00005_00009' order represents '3' with '1939'
-1937 1939 0
c Var 'max_left_00001_00005_00009' direct represents '3' with '1940'
1937 -1939 1940 0
-1940 1939 0
-1940 -1937 0
c Var 'max_left_00001_00005_00009' order represents '4' with '1941'
-1939 1941 0
c Var 'max_left_00001_00005_00009' direct represents '4' with '1942'
1939 -1941 1942 0
-1942 1941 0
-1942 -1939 0
c Var 'max_left_00001_00005_00009' order represents '5' with '1943'
-1941 1943 0
c Var 'max_left_00001_00005_00009' direct represents '5' with '1944'
1941 -1943 1944 0
-1944 1943 0
-1944 -1941 0
c Var 'max_left_00001_00005_00009' order represents '6' with '1945'
-1943 1945 0
c Var 'max_left_00001_00005_00009' direct represents '6' with '1946'
1943 -1945 1946 0
-1946 1945 0
-1946 -1943 0
c Var 'max_left_00001_00005_00009' order represents '7' with '1947'
-1945 1947 0
c Var 'max_left_00001_00005_00009' direct represents '7' with '1948'
1945 -1947 1948 0
-1948 1947 0
-1948 -1945 0
c Var 'max_left_00001_00005_00009' order represents '8' with '1949'
-1947 1949 0
c Var 'max_left_00001_00005_00009' direct represents '8' with '1950'
1947 -1949 1950 0
-1950 1949 0
-1950 -1947 0
c Var 'max_left_00001_00005_00009' direct represents '9' with '-1949'
1936 1938 1940 1942 1944 1946 1948 1950 -1949 0
c Encoding variable: max_left_00001_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00006_00000' direct represents '0' with '1951'
1951 0
c Encoding variable: max_left_00001_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00001' order represents '1' with '1952'
c Var 'max_left_00001_00006_00001' direct represents '1' with '1952'
c Var 'max_left_00001_00006_00001' order represents '2' with '1953'
-1952 1953 0
c Var 'max_left_00001_00006_00001' direct represents '2' with '1954'
1952 -1953 1954 0
-1954 1953 0
-1954 -1952 0
c Var 'max_left_00001_00006_00001' order represents '3' with '1955'
-1953 1955 0
c Var 'max_left_00001_00006_00001' direct represents '3' with '1956'
1953 -1955 1956 0
-1956 1955 0
-1956 -1953 0
c Var 'max_left_00001_00006_00001' order represents '4' with '1957'
-1955 1957 0
c Var 'max_left_00001_00006_00001' direct represents '4' with '1958'
1955 -1957 1958 0
-1958 1957 0
-1958 -1955 0
c Var 'max_left_00001_00006_00001' order represents '5' with '1959'
-1957 1959 0
c Var 'max_left_00001_00006_00001' direct represents '5' with '1960'
1957 -1959 1960 0
-1960 1959 0
-1960 -1957 0
c Var 'max_left_00001_00006_00001' order represents '6' with '1961'
-1959 1961 0
c Var 'max_left_00001_00006_00001' direct represents '6' with '1962'
1959 -1961 1962 0
-1962 1961 0
-1962 -1959 0
c Var 'max_left_00001_00006_00001' order represents '7' with '1963'
-1961 1963 0
c Var 'max_left_00001_00006_00001' direct represents '7' with '1964'
1961 -1963 1964 0
-1964 1963 0
-1964 -1961 0
c Var 'max_left_00001_00006_00001' order represents '8' with '1965'
-1963 1965 0
c Var 'max_left_00001_00006_00001' direct represents '8' with '1966'
1963 -1965 1966 0
-1966 1965 0
-1966 -1963 0
c Var 'max_left_00001_00006_00001' direct represents '9' with '-1965'
1952 1954 1956 1958 1960 1962 1964 1966 -1965 0
c Encoding variable: max_left_00001_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00002' order represents '1' with '1967'
c Var 'max_left_00001_00006_00002' direct represents '1' with '1967'
c Var 'max_left_00001_00006_00002' order represents '2' with '1968'
-1967 1968 0
c Var 'max_left_00001_00006_00002' direct represents '2' with '1969'
1967 -1968 1969 0
-1969 1968 0
-1969 -1967 0
c Var 'max_left_00001_00006_00002' order represents '3' with '1970'
-1968 1970 0
c Var 'max_left_00001_00006_00002' direct represents '3' with '1971'
1968 -1970 1971 0
-1971 1970 0
-1971 -1968 0
c Var 'max_left_00001_00006_00002' order represents '4' with '1972'
-1970 1972 0
c Var 'max_left_00001_00006_00002' direct represents '4' with '1973'
1970 -1972 1973 0
-1973 1972 0
-1973 -1970 0
c Var 'max_left_00001_00006_00002' order represents '5' with '1974'
-1972 1974 0
c Var 'max_left_00001_00006_00002' direct represents '5' with '1975'
1972 -1974 1975 0
-1975 1974 0
-1975 -1972 0
c Var 'max_left_00001_00006_00002' order represents '6' with '1976'
-1974 1976 0
c Var 'max_left_00001_00006_00002' direct represents '6' with '1977'
1974 -1976 1977 0
-1977 1976 0
-1977 -1974 0
c Var 'max_left_00001_00006_00002' order represents '7' with '1978'
-1976 1978 0
c Var 'max_left_00001_00006_00002' direct represents '7' with '1979'
1976 -1978 1979 0
-1979 1978 0
-1979 -1976 0
c Var 'max_left_00001_00006_00002' order represents '8' with '1980'
-1978 1980 0
c Var 'max_left_00001_00006_00002' direct represents '8' with '1981'
1978 -1980 1981 0
-1981 1980 0
-1981 -1978 0
c Var 'max_left_00001_00006_00002' direct represents '9' with '-1980'
1967 1969 1971 1973 1975 1977 1979 1981 -1980 0
c Encoding variable: max_left_00001_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00003' order represents '1' with '1982'
c Var 'max_left_00001_00006_00003' direct represents '1' with '1982'
c Var 'max_left_00001_00006_00003' order represents '2' with '1983'
-1982 1983 0
c Var 'max_left_00001_00006_00003' direct represents '2' with '1984'
1982 -1983 1984 0
-1984 1983 0
-1984 -1982 0
c Var 'max_left_00001_00006_00003' order represents '3' with '1985'
-1983 1985 0
c Var 'max_left_00001_00006_00003' direct represents '3' with '1986'
1983 -1985 1986 0
-1986 1985 0
-1986 -1983 0
c Var 'max_left_00001_00006_00003' order represents '4' with '1987'
-1985 1987 0
c Var 'max_left_00001_00006_00003' direct represents '4' with '1988'
1985 -1987 1988 0
-1988 1987 0
-1988 -1985 0
c Var 'max_left_00001_00006_00003' order represents '5' with '1989'
-1987 1989 0
c Var 'max_left_00001_00006_00003' direct represents '5' with '1990'
1987 -1989 1990 0
-1990 1989 0
-1990 -1987 0
c Var 'max_left_00001_00006_00003' order represents '6' with '1991'
-1989 1991 0
c Var 'max_left_00001_00006_00003' direct represents '6' with '1992'
1989 -1991 1992 0
-1992 1991 0
-1992 -1989 0
c Var 'max_left_00001_00006_00003' order represents '7' with '1993'
-1991 1993 0
c Var 'max_left_00001_00006_00003' direct represents '7' with '1994'
1991 -1993 1994 0
-1994 1993 0
-1994 -1991 0
c Var 'max_left_00001_00006_00003' order represents '8' with '1995'
-1993 1995 0
c Var 'max_left_00001_00006_00003' direct represents '8' with '1996'
1993 -1995 1996 0
-1996 1995 0
-1996 -1993 0
c Var 'max_left_00001_00006_00003' direct represents '9' with '-1995'
1982 1984 1986 1988 1990 1992 1994 1996 -1995 0
c Encoding variable: max_left_00001_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00004' order represents '1' with '1997'
c Var 'max_left_00001_00006_00004' direct represents '1' with '1997'
c Var 'max_left_00001_00006_00004' order represents '2' with '1998'
-1997 1998 0
c Var 'max_left_00001_00006_00004' direct represents '2' with '1999'
1997 -1998 1999 0
-1999 1998 0
-1999 -1997 0
c Var 'max_left_00001_00006_00004' order represents '3' with '2000'
-1998 2000 0
c Var 'max_left_00001_00006_00004' direct represents '3' with '2001'
1998 -2000 2001 0
-2001 2000 0
-2001 -1998 0
c Var 'max_left_00001_00006_00004' order represents '4' with '2002'
-2000 2002 0
c Var 'max_left_00001_00006_00004' direct represents '4' with '2003'
2000 -2002 2003 0
-2003 2002 0
-2003 -2000 0
c Var 'max_left_00001_00006_00004' order represents '5' with '2004'
-2002 2004 0
c Var 'max_left_00001_00006_00004' direct represents '5' with '2005'
2002 -2004 2005 0
-2005 2004 0
-2005 -2002 0
c Var 'max_left_00001_00006_00004' order represents '6' with '2006'
-2004 2006 0
c Var 'max_left_00001_00006_00004' direct represents '6' with '2007'
2004 -2006 2007 0
-2007 2006 0
-2007 -2004 0
c Var 'max_left_00001_00006_00004' order represents '7' with '2008'
-2006 2008 0
c Var 'max_left_00001_00006_00004' direct represents '7' with '2009'
2006 -2008 2009 0
-2009 2008 0
-2009 -2006 0
c Var 'max_left_00001_00006_00004' order represents '8' with '2010'
-2008 2010 0
c Var 'max_left_00001_00006_00004' direct represents '8' with '2011'
2008 -2010 2011 0
-2011 2010 0
-2011 -2008 0
c Var 'max_left_00001_00006_00004' direct represents '9' with '-2010'
1997 1999 2001 2003 2005 2007 2009 2011 -2010 0
c Encoding variable: max_left_00001_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00005' order represents '1' with '2012'
c Var 'max_left_00001_00006_00005' direct represents '1' with '2012'
c Var 'max_left_00001_00006_00005' order represents '2' with '2013'
-2012 2013 0
c Var 'max_left_00001_00006_00005' direct represents '2' with '2014'
2012 -2013 2014 0
-2014 2013 0
-2014 -2012 0
c Var 'max_left_00001_00006_00005' order represents '3' with '2015'
-2013 2015 0
c Var 'max_left_00001_00006_00005' direct represents '3' with '2016'
2013 -2015 2016 0
-2016 2015 0
-2016 -2013 0
c Var 'max_left_00001_00006_00005' order represents '4' with '2017'
-2015 2017 0
c Var 'max_left_00001_00006_00005' direct represents '4' with '2018'
2015 -2017 2018 0
-2018 2017 0
-2018 -2015 0
c Var 'max_left_00001_00006_00005' order represents '5' with '2019'
-2017 2019 0
c Var 'max_left_00001_00006_00005' direct represents '5' with '2020'
2017 -2019 2020 0
-2020 2019 0
-2020 -2017 0
c Var 'max_left_00001_00006_00005' order represents '6' with '2021'
-2019 2021 0
c Var 'max_left_00001_00006_00005' direct represents '6' with '2022'
2019 -2021 2022 0
-2022 2021 0
-2022 -2019 0
c Var 'max_left_00001_00006_00005' order represents '7' with '2023'
-2021 2023 0
c Var 'max_left_00001_00006_00005' direct represents '7' with '2024'
2021 -2023 2024 0
-2024 2023 0
-2024 -2021 0
c Var 'max_left_00001_00006_00005' order represents '8' with '2025'
-2023 2025 0
c Var 'max_left_00001_00006_00005' direct represents '8' with '2026'
2023 -2025 2026 0
-2026 2025 0
-2026 -2023 0
c Var 'max_left_00001_00006_00005' direct represents '9' with '-2025'
2012 2014 2016 2018 2020 2022 2024 2026 -2025 0
c Encoding variable: max_left_00001_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00006' order represents '1' with '2027'
c Var 'max_left_00001_00006_00006' direct represents '1' with '2027'
c Var 'max_left_00001_00006_00006' order represents '2' with '2028'
-2027 2028 0
c Var 'max_left_00001_00006_00006' direct represents '2' with '2029'
2027 -2028 2029 0
-2029 2028 0
-2029 -2027 0
c Var 'max_left_00001_00006_00006' order represents '3' with '2030'
-2028 2030 0
c Var 'max_left_00001_00006_00006' direct represents '3' with '2031'
2028 -2030 2031 0
-2031 2030 0
-2031 -2028 0
c Var 'max_left_00001_00006_00006' order represents '4' with '2032'
-2030 2032 0
c Var 'max_left_00001_00006_00006' direct represents '4' with '2033'
2030 -2032 2033 0
-2033 2032 0
-2033 -2030 0
c Var 'max_left_00001_00006_00006' order represents '5' with '2034'
-2032 2034 0
c Var 'max_left_00001_00006_00006' direct represents '5' with '2035'
2032 -2034 2035 0
-2035 2034 0
-2035 -2032 0
c Var 'max_left_00001_00006_00006' order represents '6' with '2036'
-2034 2036 0
c Var 'max_left_00001_00006_00006' direct represents '6' with '2037'
2034 -2036 2037 0
-2037 2036 0
-2037 -2034 0
c Var 'max_left_00001_00006_00006' order represents '7' with '2038'
-2036 2038 0
c Var 'max_left_00001_00006_00006' direct represents '7' with '2039'
2036 -2038 2039 0
-2039 2038 0
-2039 -2036 0
c Var 'max_left_00001_00006_00006' order represents '8' with '2040'
-2038 2040 0
c Var 'max_left_00001_00006_00006' direct represents '8' with '2041'
2038 -2040 2041 0
-2041 2040 0
-2041 -2038 0
c Var 'max_left_00001_00006_00006' direct represents '9' with '-2040'
2027 2029 2031 2033 2035 2037 2039 2041 -2040 0
c Encoding variable: max_left_00001_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00007' order represents '1' with '2042'
c Var 'max_left_00001_00006_00007' direct represents '1' with '2042'
c Var 'max_left_00001_00006_00007' order represents '2' with '2043'
-2042 2043 0
c Var 'max_left_00001_00006_00007' direct represents '2' with '2044'
2042 -2043 2044 0
-2044 2043 0
-2044 -2042 0
c Var 'max_left_00001_00006_00007' order represents '3' with '2045'
-2043 2045 0
c Var 'max_left_00001_00006_00007' direct represents '3' with '2046'
2043 -2045 2046 0
-2046 2045 0
-2046 -2043 0
c Var 'max_left_00001_00006_00007' order represents '4' with '2047'
-2045 2047 0
c Var 'max_left_00001_00006_00007' direct represents '4' with '2048'
2045 -2047 2048 0
-2048 2047 0
-2048 -2045 0
c Var 'max_left_00001_00006_00007' order represents '5' with '2049'
-2047 2049 0
c Var 'max_left_00001_00006_00007' direct represents '5' with '2050'
2047 -2049 2050 0
-2050 2049 0
-2050 -2047 0
c Var 'max_left_00001_00006_00007' order represents '6' with '2051'
-2049 2051 0
c Var 'max_left_00001_00006_00007' direct represents '6' with '2052'
2049 -2051 2052 0
-2052 2051 0
-2052 -2049 0
c Var 'max_left_00001_00006_00007' order represents '7' with '2053'
-2051 2053 0
c Var 'max_left_00001_00006_00007' direct represents '7' with '2054'
2051 -2053 2054 0
-2054 2053 0
-2054 -2051 0
c Var 'max_left_00001_00006_00007' order represents '8' with '2055'
-2053 2055 0
c Var 'max_left_00001_00006_00007' direct represents '8' with '2056'
2053 -2055 2056 0
-2056 2055 0
-2056 -2053 0
c Var 'max_left_00001_00006_00007' direct represents '9' with '-2055'
2042 2044 2046 2048 2050 2052 2054 2056 -2055 0
c Encoding variable: max_left_00001_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00008' order represents '1' with '2057'
c Var 'max_left_00001_00006_00008' direct represents '1' with '2057'
c Var 'max_left_00001_00006_00008' order represents '2' with '2058'
-2057 2058 0
c Var 'max_left_00001_00006_00008' direct represents '2' with '2059'
2057 -2058 2059 0
-2059 2058 0
-2059 -2057 0
c Var 'max_left_00001_00006_00008' order represents '3' with '2060'
-2058 2060 0
c Var 'max_left_00001_00006_00008' direct represents '3' with '2061'
2058 -2060 2061 0
-2061 2060 0
-2061 -2058 0
c Var 'max_left_00001_00006_00008' order represents '4' with '2062'
-2060 2062 0
c Var 'max_left_00001_00006_00008' direct represents '4' with '2063'
2060 -2062 2063 0
-2063 2062 0
-2063 -2060 0
c Var 'max_left_00001_00006_00008' order represents '5' with '2064'
-2062 2064 0
c Var 'max_left_00001_00006_00008' direct represents '5' with '2065'
2062 -2064 2065 0
-2065 2064 0
-2065 -2062 0
c Var 'max_left_00001_00006_00008' order represents '6' with '2066'
-2064 2066 0
c Var 'max_left_00001_00006_00008' direct represents '6' with '2067'
2064 -2066 2067 0
-2067 2066 0
-2067 -2064 0
c Var 'max_left_00001_00006_00008' order represents '7' with '2068'
-2066 2068 0
c Var 'max_left_00001_00006_00008' direct represents '7' with '2069'
2066 -2068 2069 0
-2069 2068 0
-2069 -2066 0
c Var 'max_left_00001_00006_00008' order represents '8' with '2070'
-2068 2070 0
c Var 'max_left_00001_00006_00008' direct represents '8' with '2071'
2068 -2070 2071 0
-2071 2070 0
-2071 -2068 0
c Var 'max_left_00001_00006_00008' direct represents '9' with '-2070'
2057 2059 2061 2063 2065 2067 2069 2071 -2070 0
c Encoding variable: max_left_00001_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00006_00009' order represents '1' with '2072'
c Var 'max_left_00001_00006_00009' direct represents '1' with '2072'
c Var 'max_left_00001_00006_00009' order represents '2' with '2073'
-2072 2073 0
c Var 'max_left_00001_00006_00009' direct represents '2' with '2074'
2072 -2073 2074 0
-2074 2073 0
-2074 -2072 0
c Var 'max_left_00001_00006_00009' order represents '3' with '2075'
-2073 2075 0
c Var 'max_left_00001_00006_00009' direct represents '3' with '2076'
2073 -2075 2076 0
-2076 2075 0
-2076 -2073 0
c Var 'max_left_00001_00006_00009' order represents '4' with '2077'
-2075 2077 0
c Var 'max_left_00001_00006_00009' direct represents '4' with '2078'
2075 -2077 2078 0
-2078 2077 0
-2078 -2075 0
c Var 'max_left_00001_00006_00009' order represents '5' with '2079'
-2077 2079 0
c Var 'max_left_00001_00006_00009' direct represents '5' with '2080'
2077 -2079 2080 0
-2080 2079 0
-2080 -2077 0
c Var 'max_left_00001_00006_00009' order represents '6' with '2081'
-2079 2081 0
c Var 'max_left_00001_00006_00009' direct represents '6' with '2082'
2079 -2081 2082 0
-2082 2081 0
-2082 -2079 0
c Var 'max_left_00001_00006_00009' order represents '7' with '2083'
-2081 2083 0
c Var 'max_left_00001_00006_00009' direct represents '7' with '2084'
2081 -2083 2084 0
-2084 2083 0
-2084 -2081 0
c Var 'max_left_00001_00006_00009' order represents '8' with '2085'
-2083 2085 0
c Var 'max_left_00001_00006_00009' direct represents '8' with '2086'
2083 -2085 2086 0
-2086 2085 0
-2086 -2083 0
c Var 'max_left_00001_00006_00009' direct represents '9' with '-2085'
2072 2074 2076 2078 2080 2082 2084 2086 -2085 0
c Encoding variable: max_left_00001_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00007_00000' direct represents '0' with '2087'
2087 0
c Encoding variable: max_left_00001_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00001' order represents '1' with '2088'
c Var 'max_left_00001_00007_00001' direct represents '1' with '2088'
c Var 'max_left_00001_00007_00001' order represents '2' with '2089'
-2088 2089 0
c Var 'max_left_00001_00007_00001' direct represents '2' with '2090'
2088 -2089 2090 0
-2090 2089 0
-2090 -2088 0
c Var 'max_left_00001_00007_00001' order represents '3' with '2091'
-2089 2091 0
c Var 'max_left_00001_00007_00001' direct represents '3' with '2092'
2089 -2091 2092 0
-2092 2091 0
-2092 -2089 0
c Var 'max_left_00001_00007_00001' order represents '4' with '2093'
-2091 2093 0
c Var 'max_left_00001_00007_00001' direct represents '4' with '2094'
2091 -2093 2094 0
-2094 2093 0
-2094 -2091 0
c Var 'max_left_00001_00007_00001' order represents '5' with '2095'
-2093 2095 0
c Var 'max_left_00001_00007_00001' direct represents '5' with '2096'
2093 -2095 2096 0
-2096 2095 0
-2096 -2093 0
c Var 'max_left_00001_00007_00001' order represents '6' with '2097'
-2095 2097 0
c Var 'max_left_00001_00007_00001' direct represents '6' with '2098'
2095 -2097 2098 0
-2098 2097 0
-2098 -2095 0
c Var 'max_left_00001_00007_00001' order represents '7' with '2099'
-2097 2099 0
c Var 'max_left_00001_00007_00001' direct represents '7' with '2100'
2097 -2099 2100 0
-2100 2099 0
-2100 -2097 0
c Var 'max_left_00001_00007_00001' order represents '8' with '2101'
-2099 2101 0
c Var 'max_left_00001_00007_00001' direct represents '8' with '2102'
2099 -2101 2102 0
-2102 2101 0
-2102 -2099 0
c Var 'max_left_00001_00007_00001' direct represents '9' with '-2101'
2088 2090 2092 2094 2096 2098 2100 2102 -2101 0
c Encoding variable: max_left_00001_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00002' order represents '1' with '2103'
c Var 'max_left_00001_00007_00002' direct represents '1' with '2103'
c Var 'max_left_00001_00007_00002' order represents '2' with '2104'
-2103 2104 0
c Var 'max_left_00001_00007_00002' direct represents '2' with '2105'
2103 -2104 2105 0
-2105 2104 0
-2105 -2103 0
c Var 'max_left_00001_00007_00002' order represents '3' with '2106'
-2104 2106 0
c Var 'max_left_00001_00007_00002' direct represents '3' with '2107'
2104 -2106 2107 0
-2107 2106 0
-2107 -2104 0
c Var 'max_left_00001_00007_00002' order represents '4' with '2108'
-2106 2108 0
c Var 'max_left_00001_00007_00002' direct represents '4' with '2109'
2106 -2108 2109 0
-2109 2108 0
-2109 -2106 0
c Var 'max_left_00001_00007_00002' order represents '5' with '2110'
-2108 2110 0
c Var 'max_left_00001_00007_00002' direct represents '5' with '2111'
2108 -2110 2111 0
-2111 2110 0
-2111 -2108 0
c Var 'max_left_00001_00007_00002' order represents '6' with '2112'
-2110 2112 0
c Var 'max_left_00001_00007_00002' direct represents '6' with '2113'
2110 -2112 2113 0
-2113 2112 0
-2113 -2110 0
c Var 'max_left_00001_00007_00002' order represents '7' with '2114'
-2112 2114 0
c Var 'max_left_00001_00007_00002' direct represents '7' with '2115'
2112 -2114 2115 0
-2115 2114 0
-2115 -2112 0
c Var 'max_left_00001_00007_00002' order represents '8' with '2116'
-2114 2116 0
c Var 'max_left_00001_00007_00002' direct represents '8' with '2117'
2114 -2116 2117 0
-2117 2116 0
-2117 -2114 0
c Var 'max_left_00001_00007_00002' direct represents '9' with '-2116'
2103 2105 2107 2109 2111 2113 2115 2117 -2116 0
c Encoding variable: max_left_00001_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00003' order represents '1' with '2118'
c Var 'max_left_00001_00007_00003' direct represents '1' with '2118'
c Var 'max_left_00001_00007_00003' order represents '2' with '2119'
-2118 2119 0
c Var 'max_left_00001_00007_00003' direct represents '2' with '2120'
2118 -2119 2120 0
-2120 2119 0
-2120 -2118 0
c Var 'max_left_00001_00007_00003' order represents '3' with '2121'
-2119 2121 0
c Var 'max_left_00001_00007_00003' direct represents '3' with '2122'
2119 -2121 2122 0
-2122 2121 0
-2122 -2119 0
c Var 'max_left_00001_00007_00003' order represents '4' with '2123'
-2121 2123 0
c Var 'max_left_00001_00007_00003' direct represents '4' with '2124'
2121 -2123 2124 0
-2124 2123 0
-2124 -2121 0
c Var 'max_left_00001_00007_00003' order represents '5' with '2125'
-2123 2125 0
c Var 'max_left_00001_00007_00003' direct represents '5' with '2126'
2123 -2125 2126 0
-2126 2125 0
-2126 -2123 0
c Var 'max_left_00001_00007_00003' order represents '6' with '2127'
-2125 2127 0
c Var 'max_left_00001_00007_00003' direct represents '6' with '2128'
2125 -2127 2128 0
-2128 2127 0
-2128 -2125 0
c Var 'max_left_00001_00007_00003' order represents '7' with '2129'
-2127 2129 0
c Var 'max_left_00001_00007_00003' direct represents '7' with '2130'
2127 -2129 2130 0
-2130 2129 0
-2130 -2127 0
c Var 'max_left_00001_00007_00003' order represents '8' with '2131'
-2129 2131 0
c Var 'max_left_00001_00007_00003' direct represents '8' with '2132'
2129 -2131 2132 0
-2132 2131 0
-2132 -2129 0
c Var 'max_left_00001_00007_00003' direct represents '9' with '-2131'
2118 2120 2122 2124 2126 2128 2130 2132 -2131 0
c Encoding variable: max_left_00001_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00004' order represents '1' with '2133'
c Var 'max_left_00001_00007_00004' direct represents '1' with '2133'
c Var 'max_left_00001_00007_00004' order represents '2' with '2134'
-2133 2134 0
c Var 'max_left_00001_00007_00004' direct represents '2' with '2135'
2133 -2134 2135 0
-2135 2134 0
-2135 -2133 0
c Var 'max_left_00001_00007_00004' order represents '3' with '2136'
-2134 2136 0
c Var 'max_left_00001_00007_00004' direct represents '3' with '2137'
2134 -2136 2137 0
-2137 2136 0
-2137 -2134 0
c Var 'max_left_00001_00007_00004' order represents '4' with '2138'
-2136 2138 0
c Var 'max_left_00001_00007_00004' direct represents '4' with '2139'
2136 -2138 2139 0
-2139 2138 0
-2139 -2136 0
c Var 'max_left_00001_00007_00004' order represents '5' with '2140'
-2138 2140 0
c Var 'max_left_00001_00007_00004' direct represents '5' with '2141'
2138 -2140 2141 0
-2141 2140 0
-2141 -2138 0
c Var 'max_left_00001_00007_00004' order represents '6' with '2142'
-2140 2142 0
c Var 'max_left_00001_00007_00004' direct represents '6' with '2143'
2140 -2142 2143 0
-2143 2142 0
-2143 -2140 0
c Var 'max_left_00001_00007_00004' order represents '7' with '2144'
-2142 2144 0
c Var 'max_left_00001_00007_00004' direct represents '7' with '2145'
2142 -2144 2145 0
-2145 2144 0
-2145 -2142 0
c Var 'max_left_00001_00007_00004' order represents '8' with '2146'
-2144 2146 0
c Var 'max_left_00001_00007_00004' direct represents '8' with '2147'
2144 -2146 2147 0
-2147 2146 0
-2147 -2144 0
c Var 'max_left_00001_00007_00004' direct represents '9' with '-2146'
2133 2135 2137 2139 2141 2143 2145 2147 -2146 0
c Encoding variable: max_left_00001_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00005' order represents '1' with '2148'
c Var 'max_left_00001_00007_00005' direct represents '1' with '2148'
c Var 'max_left_00001_00007_00005' order represents '2' with '2149'
-2148 2149 0
c Var 'max_left_00001_00007_00005' direct represents '2' with '2150'
2148 -2149 2150 0
-2150 2149 0
-2150 -2148 0
c Var 'max_left_00001_00007_00005' order represents '3' with '2151'
-2149 2151 0
c Var 'max_left_00001_00007_00005' direct represents '3' with '2152'
2149 -2151 2152 0
-2152 2151 0
-2152 -2149 0
c Var 'max_left_00001_00007_00005' order represents '4' with '2153'
-2151 2153 0
c Var 'max_left_00001_00007_00005' direct represents '4' with '2154'
2151 -2153 2154 0
-2154 2153 0
-2154 -2151 0
c Var 'max_left_00001_00007_00005' order represents '5' with '2155'
-2153 2155 0
c Var 'max_left_00001_00007_00005' direct represents '5' with '2156'
2153 -2155 2156 0
-2156 2155 0
-2156 -2153 0
c Var 'max_left_00001_00007_00005' order represents '6' with '2157'
-2155 2157 0
c Var 'max_left_00001_00007_00005' direct represents '6' with '2158'
2155 -2157 2158 0
-2158 2157 0
-2158 -2155 0
c Var 'max_left_00001_00007_00005' order represents '7' with '2159'
-2157 2159 0
c Var 'max_left_00001_00007_00005' direct represents '7' with '2160'
2157 -2159 2160 0
-2160 2159 0
-2160 -2157 0
c Var 'max_left_00001_00007_00005' order represents '8' with '2161'
-2159 2161 0
c Var 'max_left_00001_00007_00005' direct represents '8' with '2162'
2159 -2161 2162 0
-2162 2161 0
-2162 -2159 0
c Var 'max_left_00001_00007_00005' direct represents '9' with '-2161'
2148 2150 2152 2154 2156 2158 2160 2162 -2161 0
c Encoding variable: max_left_00001_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00006' order represents '1' with '2163'
c Var 'max_left_00001_00007_00006' direct represents '1' with '2163'
c Var 'max_left_00001_00007_00006' order represents '2' with '2164'
-2163 2164 0
c Var 'max_left_00001_00007_00006' direct represents '2' with '2165'
2163 -2164 2165 0
-2165 2164 0
-2165 -2163 0
c Var 'max_left_00001_00007_00006' order represents '3' with '2166'
-2164 2166 0
c Var 'max_left_00001_00007_00006' direct represents '3' with '2167'
2164 -2166 2167 0
-2167 2166 0
-2167 -2164 0
c Var 'max_left_00001_00007_00006' order represents '4' with '2168'
-2166 2168 0
c Var 'max_left_00001_00007_00006' direct represents '4' with '2169'
2166 -2168 2169 0
-2169 2168 0
-2169 -2166 0
c Var 'max_left_00001_00007_00006' order represents '5' with '2170'
-2168 2170 0
c Var 'max_left_00001_00007_00006' direct represents '5' with '2171'
2168 -2170 2171 0
-2171 2170 0
-2171 -2168 0
c Var 'max_left_00001_00007_00006' order represents '6' with '2172'
-2170 2172 0
c Var 'max_left_00001_00007_00006' direct represents '6' with '2173'
2170 -2172 2173 0
-2173 2172 0
-2173 -2170 0
c Var 'max_left_00001_00007_00006' order represents '7' with '2174'
-2172 2174 0
c Var 'max_left_00001_00007_00006' direct represents '7' with '2175'
2172 -2174 2175 0
-2175 2174 0
-2175 -2172 0
c Var 'max_left_00001_00007_00006' order represents '8' with '2176'
-2174 2176 0
c Var 'max_left_00001_00007_00006' direct represents '8' with '2177'
2174 -2176 2177 0
-2177 2176 0
-2177 -2174 0
c Var 'max_left_00001_00007_00006' direct represents '9' with '-2176'
2163 2165 2167 2169 2171 2173 2175 2177 -2176 0
c Encoding variable: max_left_00001_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00007' order represents '1' with '2178'
c Var 'max_left_00001_00007_00007' direct represents '1' with '2178'
c Var 'max_left_00001_00007_00007' order represents '2' with '2179'
-2178 2179 0
c Var 'max_left_00001_00007_00007' direct represents '2' with '2180'
2178 -2179 2180 0
-2180 2179 0
-2180 -2178 0
c Var 'max_left_00001_00007_00007' order represents '3' with '2181'
-2179 2181 0
c Var 'max_left_00001_00007_00007' direct represents '3' with '2182'
2179 -2181 2182 0
-2182 2181 0
-2182 -2179 0
c Var 'max_left_00001_00007_00007' order represents '4' with '2183'
-2181 2183 0
c Var 'max_left_00001_00007_00007' direct represents '4' with '2184'
2181 -2183 2184 0
-2184 2183 0
-2184 -2181 0
c Var 'max_left_00001_00007_00007' order represents '5' with '2185'
-2183 2185 0
c Var 'max_left_00001_00007_00007' direct represents '5' with '2186'
2183 -2185 2186 0
-2186 2185 0
-2186 -2183 0
c Var 'max_left_00001_00007_00007' order represents '6' with '2187'
-2185 2187 0
c Var 'max_left_00001_00007_00007' direct represents '6' with '2188'
2185 -2187 2188 0
-2188 2187 0
-2188 -2185 0
c Var 'max_left_00001_00007_00007' order represents '7' with '2189'
-2187 2189 0
c Var 'max_left_00001_00007_00007' direct represents '7' with '2190'
2187 -2189 2190 0
-2190 2189 0
-2190 -2187 0
c Var 'max_left_00001_00007_00007' order represents '8' with '2191'
-2189 2191 0
c Var 'max_left_00001_00007_00007' direct represents '8' with '2192'
2189 -2191 2192 0
-2192 2191 0
-2192 -2189 0
c Var 'max_left_00001_00007_00007' direct represents '9' with '-2191'
2178 2180 2182 2184 2186 2188 2190 2192 -2191 0
c Encoding variable: max_left_00001_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00008' order represents '1' with '2193'
c Var 'max_left_00001_00007_00008' direct represents '1' with '2193'
c Var 'max_left_00001_00007_00008' order represents '2' with '2194'
-2193 2194 0
c Var 'max_left_00001_00007_00008' direct represents '2' with '2195'
2193 -2194 2195 0
-2195 2194 0
-2195 -2193 0
c Var 'max_left_00001_00007_00008' order represents '3' with '2196'
-2194 2196 0
c Var 'max_left_00001_00007_00008' direct represents '3' with '2197'
2194 -2196 2197 0
-2197 2196 0
-2197 -2194 0
c Var 'max_left_00001_00007_00008' order represents '4' with '2198'
-2196 2198 0
c Var 'max_left_00001_00007_00008' direct represents '4' with '2199'
2196 -2198 2199 0
-2199 2198 0
-2199 -2196 0
c Var 'max_left_00001_00007_00008' order represents '5' with '2200'
-2198 2200 0
c Var 'max_left_00001_00007_00008' direct represents '5' with '2201'
2198 -2200 2201 0
-2201 2200 0
-2201 -2198 0
c Var 'max_left_00001_00007_00008' order represents '6' with '2202'
-2200 2202 0
c Var 'max_left_00001_00007_00008' direct represents '6' with '2203'
2200 -2202 2203 0
-2203 2202 0
-2203 -2200 0
c Var 'max_left_00001_00007_00008' order represents '7' with '2204'
-2202 2204 0
c Var 'max_left_00001_00007_00008' direct represents '7' with '2205'
2202 -2204 2205 0
-2205 2204 0
-2205 -2202 0
c Var 'max_left_00001_00007_00008' order represents '8' with '2206'
-2204 2206 0
c Var 'max_left_00001_00007_00008' direct represents '8' with '2207'
2204 -2206 2207 0
-2207 2206 0
-2207 -2204 0
c Var 'max_left_00001_00007_00008' direct represents '9' with '-2206'
2193 2195 2197 2199 2201 2203 2205 2207 -2206 0
c Encoding variable: max_left_00001_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00007_00009' order represents '1' with '2208'
c Var 'max_left_00001_00007_00009' direct represents '1' with '2208'
c Var 'max_left_00001_00007_00009' order represents '2' with '2209'
-2208 2209 0
c Var 'max_left_00001_00007_00009' direct represents '2' with '2210'
2208 -2209 2210 0
-2210 2209 0
-2210 -2208 0
c Var 'max_left_00001_00007_00009' order represents '3' with '2211'
-2209 2211 0
c Var 'max_left_00001_00007_00009' direct represents '3' with '2212'
2209 -2211 2212 0
-2212 2211 0
-2212 -2209 0
c Var 'max_left_00001_00007_00009' order represents '4' with '2213'
-2211 2213 0
c Var 'max_left_00001_00007_00009' direct represents '4' with '2214'
2211 -2213 2214 0
-2214 2213 0
-2214 -2211 0
c Var 'max_left_00001_00007_00009' order represents '5' with '2215'
-2213 2215 0
c Var 'max_left_00001_00007_00009' direct represents '5' with '2216'
2213 -2215 2216 0
-2216 2215 0
-2216 -2213 0
c Var 'max_left_00001_00007_00009' order represents '6' with '2217'
-2215 2217 0
c Var 'max_left_00001_00007_00009' direct represents '6' with '2218'
2215 -2217 2218 0
-2218 2217 0
-2218 -2215 0
c Var 'max_left_00001_00007_00009' order represents '7' with '2219'
-2217 2219 0
c Var 'max_left_00001_00007_00009' direct represents '7' with '2220'
2217 -2219 2220 0
-2220 2219 0
-2220 -2217 0
c Var 'max_left_00001_00007_00009' order represents '8' with '2221'
-2219 2221 0
c Var 'max_left_00001_00007_00009' direct represents '8' with '2222'
2219 -2221 2222 0
-2222 2221 0
-2222 -2219 0
c Var 'max_left_00001_00007_00009' direct represents '9' with '-2221'
2208 2210 2212 2214 2216 2218 2220 2222 -2221 0
c Encoding variable: max_left_00001_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00008_00000' direct represents '0' with '2223'
2223 0
c Encoding variable: max_left_00001_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00001' order represents '1' with '2224'
c Var 'max_left_00001_00008_00001' direct represents '1' with '2224'
c Var 'max_left_00001_00008_00001' order represents '2' with '2225'
-2224 2225 0
c Var 'max_left_00001_00008_00001' direct represents '2' with '2226'
2224 -2225 2226 0
-2226 2225 0
-2226 -2224 0
c Var 'max_left_00001_00008_00001' order represents '3' with '2227'
-2225 2227 0
c Var 'max_left_00001_00008_00001' direct represents '3' with '2228'
2225 -2227 2228 0
-2228 2227 0
-2228 -2225 0
c Var 'max_left_00001_00008_00001' order represents '4' with '2229'
-2227 2229 0
c Var 'max_left_00001_00008_00001' direct represents '4' with '2230'
2227 -2229 2230 0
-2230 2229 0
-2230 -2227 0
c Var 'max_left_00001_00008_00001' order represents '5' with '2231'
-2229 2231 0
c Var 'max_left_00001_00008_00001' direct represents '5' with '2232'
2229 -2231 2232 0
-2232 2231 0
-2232 -2229 0
c Var 'max_left_00001_00008_00001' order represents '6' with '2233'
-2231 2233 0
c Var 'max_left_00001_00008_00001' direct represents '6' with '2234'
2231 -2233 2234 0
-2234 2233 0
-2234 -2231 0
c Var 'max_left_00001_00008_00001' order represents '7' with '2235'
-2233 2235 0
c Var 'max_left_00001_00008_00001' direct represents '7' with '2236'
2233 -2235 2236 0
-2236 2235 0
-2236 -2233 0
c Var 'max_left_00001_00008_00001' order represents '8' with '2237'
-2235 2237 0
c Var 'max_left_00001_00008_00001' direct represents '8' with '2238'
2235 -2237 2238 0
-2238 2237 0
-2238 -2235 0
c Var 'max_left_00001_00008_00001' direct represents '9' with '-2237'
2224 2226 2228 2230 2232 2234 2236 2238 -2237 0
c Encoding variable: max_left_00001_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00002' order represents '1' with '2239'
c Var 'max_left_00001_00008_00002' direct represents '1' with '2239'
c Var 'max_left_00001_00008_00002' order represents '2' with '2240'
-2239 2240 0
c Var 'max_left_00001_00008_00002' direct represents '2' with '2241'
2239 -2240 2241 0
-2241 2240 0
-2241 -2239 0
c Var 'max_left_00001_00008_00002' order represents '3' with '2242'
-2240 2242 0
c Var 'max_left_00001_00008_00002' direct represents '3' with '2243'
2240 -2242 2243 0
-2243 2242 0
-2243 -2240 0
c Var 'max_left_00001_00008_00002' order represents '4' with '2244'
-2242 2244 0
c Var 'max_left_00001_00008_00002' direct represents '4' with '2245'
2242 -2244 2245 0
-2245 2244 0
-2245 -2242 0
c Var 'max_left_00001_00008_00002' order represents '5' with '2246'
-2244 2246 0
c Var 'max_left_00001_00008_00002' direct represents '5' with '2247'
2244 -2246 2247 0
-2247 2246 0
-2247 -2244 0
c Var 'max_left_00001_00008_00002' order represents '6' with '2248'
-2246 2248 0
c Var 'max_left_00001_00008_00002' direct represents '6' with '2249'
2246 -2248 2249 0
-2249 2248 0
-2249 -2246 0
c Var 'max_left_00001_00008_00002' order represents '7' with '2250'
-2248 2250 0
c Var 'max_left_00001_00008_00002' direct represents '7' with '2251'
2248 -2250 2251 0
-2251 2250 0
-2251 -2248 0
c Var 'max_left_00001_00008_00002' order represents '8' with '2252'
-2250 2252 0
c Var 'max_left_00001_00008_00002' direct represents '8' with '2253'
2250 -2252 2253 0
-2253 2252 0
-2253 -2250 0
c Var 'max_left_00001_00008_00002' direct represents '9' with '-2252'
2239 2241 2243 2245 2247 2249 2251 2253 -2252 0
c Encoding variable: max_left_00001_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00003' order represents '1' with '2254'
c Var 'max_left_00001_00008_00003' direct represents '1' with '2254'
c Var 'max_left_00001_00008_00003' order represents '2' with '2255'
-2254 2255 0
c Var 'max_left_00001_00008_00003' direct represents '2' with '2256'
2254 -2255 2256 0
-2256 2255 0
-2256 -2254 0
c Var 'max_left_00001_00008_00003' order represents '3' with '2257'
-2255 2257 0
c Var 'max_left_00001_00008_00003' direct represents '3' with '2258'
2255 -2257 2258 0
-2258 2257 0
-2258 -2255 0
c Var 'max_left_00001_00008_00003' order represents '4' with '2259'
-2257 2259 0
c Var 'max_left_00001_00008_00003' direct represents '4' with '2260'
2257 -2259 2260 0
-2260 2259 0
-2260 -2257 0
c Var 'max_left_00001_00008_00003' order represents '5' with '2261'
-2259 2261 0
c Var 'max_left_00001_00008_00003' direct represents '5' with '2262'
2259 -2261 2262 0
-2262 2261 0
-2262 -2259 0
c Var 'max_left_00001_00008_00003' order represents '6' with '2263'
-2261 2263 0
c Var 'max_left_00001_00008_00003' direct represents '6' with '2264'
2261 -2263 2264 0
-2264 2263 0
-2264 -2261 0
c Var 'max_left_00001_00008_00003' order represents '7' with '2265'
-2263 2265 0
c Var 'max_left_00001_00008_00003' direct represents '7' with '2266'
2263 -2265 2266 0
-2266 2265 0
-2266 -2263 0
c Var 'max_left_00001_00008_00003' order represents '8' with '2267'
-2265 2267 0
c Var 'max_left_00001_00008_00003' direct represents '8' with '2268'
2265 -2267 2268 0
-2268 2267 0
-2268 -2265 0
c Var 'max_left_00001_00008_00003' direct represents '9' with '-2267'
2254 2256 2258 2260 2262 2264 2266 2268 -2267 0
c Encoding variable: max_left_00001_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00004' order represents '1' with '2269'
c Var 'max_left_00001_00008_00004' direct represents '1' with '2269'
c Var 'max_left_00001_00008_00004' order represents '2' with '2270'
-2269 2270 0
c Var 'max_left_00001_00008_00004' direct represents '2' with '2271'
2269 -2270 2271 0
-2271 2270 0
-2271 -2269 0
c Var 'max_left_00001_00008_00004' order represents '3' with '2272'
-2270 2272 0
c Var 'max_left_00001_00008_00004' direct represents '3' with '2273'
2270 -2272 2273 0
-2273 2272 0
-2273 -2270 0
c Var 'max_left_00001_00008_00004' order represents '4' with '2274'
-2272 2274 0
c Var 'max_left_00001_00008_00004' direct represents '4' with '2275'
2272 -2274 2275 0
-2275 2274 0
-2275 -2272 0
c Var 'max_left_00001_00008_00004' order represents '5' with '2276'
-2274 2276 0
c Var 'max_left_00001_00008_00004' direct represents '5' with '2277'
2274 -2276 2277 0
-2277 2276 0
-2277 -2274 0
c Var 'max_left_00001_00008_00004' order represents '6' with '2278'
-2276 2278 0
c Var 'max_left_00001_00008_00004' direct represents '6' with '2279'
2276 -2278 2279 0
-2279 2278 0
-2279 -2276 0
c Var 'max_left_00001_00008_00004' order represents '7' with '2280'
-2278 2280 0
c Var 'max_left_00001_00008_00004' direct represents '7' with '2281'
2278 -2280 2281 0
-2281 2280 0
-2281 -2278 0
c Var 'max_left_00001_00008_00004' order represents '8' with '2282'
-2280 2282 0
c Var 'max_left_00001_00008_00004' direct represents '8' with '2283'
2280 -2282 2283 0
-2283 2282 0
-2283 -2280 0
c Var 'max_left_00001_00008_00004' direct represents '9' with '-2282'
2269 2271 2273 2275 2277 2279 2281 2283 -2282 0
c Encoding variable: max_left_00001_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00005' order represents '1' with '2284'
c Var 'max_left_00001_00008_00005' direct represents '1' with '2284'
c Var 'max_left_00001_00008_00005' order represents '2' with '2285'
-2284 2285 0
c Var 'max_left_00001_00008_00005' direct represents '2' with '2286'
2284 -2285 2286 0
-2286 2285 0
-2286 -2284 0
c Var 'max_left_00001_00008_00005' order represents '3' with '2287'
-2285 2287 0
c Var 'max_left_00001_00008_00005' direct represents '3' with '2288'
2285 -2287 2288 0
-2288 2287 0
-2288 -2285 0
c Var 'max_left_00001_00008_00005' order represents '4' with '2289'
-2287 2289 0
c Var 'max_left_00001_00008_00005' direct represents '4' with '2290'
2287 -2289 2290 0
-2290 2289 0
-2290 -2287 0
c Var 'max_left_00001_00008_00005' order represents '5' with '2291'
-2289 2291 0
c Var 'max_left_00001_00008_00005' direct represents '5' with '2292'
2289 -2291 2292 0
-2292 2291 0
-2292 -2289 0
c Var 'max_left_00001_00008_00005' order represents '6' with '2293'
-2291 2293 0
c Var 'max_left_00001_00008_00005' direct represents '6' with '2294'
2291 -2293 2294 0
-2294 2293 0
-2294 -2291 0
c Var 'max_left_00001_00008_00005' order represents '7' with '2295'
-2293 2295 0
c Var 'max_left_00001_00008_00005' direct represents '7' with '2296'
2293 -2295 2296 0
-2296 2295 0
-2296 -2293 0
c Var 'max_left_00001_00008_00005' order represents '8' with '2297'
-2295 2297 0
c Var 'max_left_00001_00008_00005' direct represents '8' with '2298'
2295 -2297 2298 0
-2298 2297 0
-2298 -2295 0
c Var 'max_left_00001_00008_00005' direct represents '9' with '-2297'
2284 2286 2288 2290 2292 2294 2296 2298 -2297 0
c Encoding variable: max_left_00001_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00006' order represents '1' with '2299'
c Var 'max_left_00001_00008_00006' direct represents '1' with '2299'
c Var 'max_left_00001_00008_00006' order represents '2' with '2300'
-2299 2300 0
c Var 'max_left_00001_00008_00006' direct represents '2' with '2301'
2299 -2300 2301 0
-2301 2300 0
-2301 -2299 0
c Var 'max_left_00001_00008_00006' order represents '3' with '2302'
-2300 2302 0
c Var 'max_left_00001_00008_00006' direct represents '3' with '2303'
2300 -2302 2303 0
-2303 2302 0
-2303 -2300 0
c Var 'max_left_00001_00008_00006' order represents '4' with '2304'
-2302 2304 0
c Var 'max_left_00001_00008_00006' direct represents '4' with '2305'
2302 -2304 2305 0
-2305 2304 0
-2305 -2302 0
c Var 'max_left_00001_00008_00006' order represents '5' with '2306'
-2304 2306 0
c Var 'max_left_00001_00008_00006' direct represents '5' with '2307'
2304 -2306 2307 0
-2307 2306 0
-2307 -2304 0
c Var 'max_left_00001_00008_00006' order represents '6' with '2308'
-2306 2308 0
c Var 'max_left_00001_00008_00006' direct represents '6' with '2309'
2306 -2308 2309 0
-2309 2308 0
-2309 -2306 0
c Var 'max_left_00001_00008_00006' order represents '7' with '2310'
-2308 2310 0
c Var 'max_left_00001_00008_00006' direct represents '7' with '2311'
2308 -2310 2311 0
-2311 2310 0
-2311 -2308 0
c Var 'max_left_00001_00008_00006' order represents '8' with '2312'
-2310 2312 0
c Var 'max_left_00001_00008_00006' direct represents '8' with '2313'
2310 -2312 2313 0
-2313 2312 0
-2313 -2310 0
c Var 'max_left_00001_00008_00006' direct represents '9' with '-2312'
2299 2301 2303 2305 2307 2309 2311 2313 -2312 0
c Encoding variable: max_left_00001_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00007' order represents '1' with '2314'
c Var 'max_left_00001_00008_00007' direct represents '1' with '2314'
c Var 'max_left_00001_00008_00007' order represents '2' with '2315'
-2314 2315 0
c Var 'max_left_00001_00008_00007' direct represents '2' with '2316'
2314 -2315 2316 0
-2316 2315 0
-2316 -2314 0
c Var 'max_left_00001_00008_00007' order represents '3' with '2317'
-2315 2317 0
c Var 'max_left_00001_00008_00007' direct represents '3' with '2318'
2315 -2317 2318 0
-2318 2317 0
-2318 -2315 0
c Var 'max_left_00001_00008_00007' order represents '4' with '2319'
-2317 2319 0
c Var 'max_left_00001_00008_00007' direct represents '4' with '2320'
2317 -2319 2320 0
-2320 2319 0
-2320 -2317 0
c Var 'max_left_00001_00008_00007' order represents '5' with '2321'
-2319 2321 0
c Var 'max_left_00001_00008_00007' direct represents '5' with '2322'
2319 -2321 2322 0
-2322 2321 0
-2322 -2319 0
c Var 'max_left_00001_00008_00007' order represents '6' with '2323'
-2321 2323 0
c Var 'max_left_00001_00008_00007' direct represents '6' with '2324'
2321 -2323 2324 0
-2324 2323 0
-2324 -2321 0
c Var 'max_left_00001_00008_00007' order represents '7' with '2325'
-2323 2325 0
c Var 'max_left_00001_00008_00007' direct represents '7' with '2326'
2323 -2325 2326 0
-2326 2325 0
-2326 -2323 0
c Var 'max_left_00001_00008_00007' order represents '8' with '2327'
-2325 2327 0
c Var 'max_left_00001_00008_00007' direct represents '8' with '2328'
2325 -2327 2328 0
-2328 2327 0
-2328 -2325 0
c Var 'max_left_00001_00008_00007' direct represents '9' with '-2327'
2314 2316 2318 2320 2322 2324 2326 2328 -2327 0
c Encoding variable: max_left_00001_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00008' order represents '1' with '2329'
c Var 'max_left_00001_00008_00008' direct represents '1' with '2329'
c Var 'max_left_00001_00008_00008' order represents '2' with '2330'
-2329 2330 0
c Var 'max_left_00001_00008_00008' direct represents '2' with '2331'
2329 -2330 2331 0
-2331 2330 0
-2331 -2329 0
c Var 'max_left_00001_00008_00008' order represents '3' with '2332'
-2330 2332 0
c Var 'max_left_00001_00008_00008' direct represents '3' with '2333'
2330 -2332 2333 0
-2333 2332 0
-2333 -2330 0
c Var 'max_left_00001_00008_00008' order represents '4' with '2334'
-2332 2334 0
c Var 'max_left_00001_00008_00008' direct represents '4' with '2335'
2332 -2334 2335 0
-2335 2334 0
-2335 -2332 0
c Var 'max_left_00001_00008_00008' order represents '5' with '2336'
-2334 2336 0
c Var 'max_left_00001_00008_00008' direct represents '5' with '2337'
2334 -2336 2337 0
-2337 2336 0
-2337 -2334 0
c Var 'max_left_00001_00008_00008' order represents '6' with '2338'
-2336 2338 0
c Var 'max_left_00001_00008_00008' direct represents '6' with '2339'
2336 -2338 2339 0
-2339 2338 0
-2339 -2336 0
c Var 'max_left_00001_00008_00008' order represents '7' with '2340'
-2338 2340 0
c Var 'max_left_00001_00008_00008' direct represents '7' with '2341'
2338 -2340 2341 0
-2341 2340 0
-2341 -2338 0
c Var 'max_left_00001_00008_00008' order represents '8' with '2342'
-2340 2342 0
c Var 'max_left_00001_00008_00008' direct represents '8' with '2343'
2340 -2342 2343 0
-2343 2342 0
-2343 -2340 0
c Var 'max_left_00001_00008_00008' direct represents '9' with '-2342'
2329 2331 2333 2335 2337 2339 2341 2343 -2342 0
c Encoding variable: max_left_00001_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00008_00009' order represents '1' with '2344'
c Var 'max_left_00001_00008_00009' direct represents '1' with '2344'
c Var 'max_left_00001_00008_00009' order represents '2' with '2345'
-2344 2345 0
c Var 'max_left_00001_00008_00009' direct represents '2' with '2346'
2344 -2345 2346 0
-2346 2345 0
-2346 -2344 0
c Var 'max_left_00001_00008_00009' order represents '3' with '2347'
-2345 2347 0
c Var 'max_left_00001_00008_00009' direct represents '3' with '2348'
2345 -2347 2348 0
-2348 2347 0
-2348 -2345 0
c Var 'max_left_00001_00008_00009' order represents '4' with '2349'
-2347 2349 0
c Var 'max_left_00001_00008_00009' direct represents '4' with '2350'
2347 -2349 2350 0
-2350 2349 0
-2350 -2347 0
c Var 'max_left_00001_00008_00009' order represents '5' with '2351'
-2349 2351 0
c Var 'max_left_00001_00008_00009' direct represents '5' with '2352'
2349 -2351 2352 0
-2352 2351 0
-2352 -2349 0
c Var 'max_left_00001_00008_00009' order represents '6' with '2353'
-2351 2353 0
c Var 'max_left_00001_00008_00009' direct represents '6' with '2354'
2351 -2353 2354 0
-2354 2353 0
-2354 -2351 0
c Var 'max_left_00001_00008_00009' order represents '7' with '2355'
-2353 2355 0
c Var 'max_left_00001_00008_00009' direct represents '7' with '2356'
2353 -2355 2356 0
-2356 2355 0
-2356 -2353 0
c Var 'max_left_00001_00008_00009' order represents '8' with '2357'
-2355 2357 0
c Var 'max_left_00001_00008_00009' direct represents '8' with '2358'
2355 -2357 2358 0
-2358 2357 0
-2358 -2355 0
c Var 'max_left_00001_00008_00009' direct represents '9' with '-2357'
2344 2346 2348 2350 2352 2354 2356 2358 -2357 0
c Encoding variable: max_left_00001_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00001_00009_00000' direct represents '0' with '2359'
2359 0
c Encoding variable: max_left_00001_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00001' order represents '1' with '2360'
c Var 'max_left_00001_00009_00001' direct represents '1' with '2360'
c Var 'max_left_00001_00009_00001' order represents '2' with '2361'
-2360 2361 0
c Var 'max_left_00001_00009_00001' direct represents '2' with '2362'
2360 -2361 2362 0
-2362 2361 0
-2362 -2360 0
c Var 'max_left_00001_00009_00001' order represents '3' with '2363'
-2361 2363 0
c Var 'max_left_00001_00009_00001' direct represents '3' with '2364'
2361 -2363 2364 0
-2364 2363 0
-2364 -2361 0
c Var 'max_left_00001_00009_00001' order represents '4' with '2365'
-2363 2365 0
c Var 'max_left_00001_00009_00001' direct represents '4' with '2366'
2363 -2365 2366 0
-2366 2365 0
-2366 -2363 0
c Var 'max_left_00001_00009_00001' order represents '5' with '2367'
-2365 2367 0
c Var 'max_left_00001_00009_00001' direct represents '5' with '2368'
2365 -2367 2368 0
-2368 2367 0
-2368 -2365 0
c Var 'max_left_00001_00009_00001' order represents '6' with '2369'
-2367 2369 0
c Var 'max_left_00001_00009_00001' direct represents '6' with '2370'
2367 -2369 2370 0
-2370 2369 0
-2370 -2367 0
c Var 'max_left_00001_00009_00001' order represents '7' with '2371'
-2369 2371 0
c Var 'max_left_00001_00009_00001' direct represents '7' with '2372'
2369 -2371 2372 0
-2372 2371 0
-2372 -2369 0
c Var 'max_left_00001_00009_00001' order represents '8' with '2373'
-2371 2373 0
c Var 'max_left_00001_00009_00001' direct represents '8' with '2374'
2371 -2373 2374 0
-2374 2373 0
-2374 -2371 0
c Var 'max_left_00001_00009_00001' direct represents '9' with '-2373'
2360 2362 2364 2366 2368 2370 2372 2374 -2373 0
c Encoding variable: max_left_00001_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00002' order represents '1' with '2375'
c Var 'max_left_00001_00009_00002' direct represents '1' with '2375'
c Var 'max_left_00001_00009_00002' order represents '2' with '2376'
-2375 2376 0
c Var 'max_left_00001_00009_00002' direct represents '2' with '2377'
2375 -2376 2377 0
-2377 2376 0
-2377 -2375 0
c Var 'max_left_00001_00009_00002' order represents '3' with '2378'
-2376 2378 0
c Var 'max_left_00001_00009_00002' direct represents '3' with '2379'
2376 -2378 2379 0
-2379 2378 0
-2379 -2376 0
c Var 'max_left_00001_00009_00002' order represents '4' with '2380'
-2378 2380 0
c Var 'max_left_00001_00009_00002' direct represents '4' with '2381'
2378 -2380 2381 0
-2381 2380 0
-2381 -2378 0
c Var 'max_left_00001_00009_00002' order represents '5' with '2382'
-2380 2382 0
c Var 'max_left_00001_00009_00002' direct represents '5' with '2383'
2380 -2382 2383 0
-2383 2382 0
-2383 -2380 0
c Var 'max_left_00001_00009_00002' order represents '6' with '2384'
-2382 2384 0
c Var 'max_left_00001_00009_00002' direct represents '6' with '2385'
2382 -2384 2385 0
-2385 2384 0
-2385 -2382 0
c Var 'max_left_00001_00009_00002' order represents '7' with '2386'
-2384 2386 0
c Var 'max_left_00001_00009_00002' direct represents '7' with '2387'
2384 -2386 2387 0
-2387 2386 0
-2387 -2384 0
c Var 'max_left_00001_00009_00002' order represents '8' with '2388'
-2386 2388 0
c Var 'max_left_00001_00009_00002' direct represents '8' with '2389'
2386 -2388 2389 0
-2389 2388 0
-2389 -2386 0
c Var 'max_left_00001_00009_00002' direct represents '9' with '-2388'
2375 2377 2379 2381 2383 2385 2387 2389 -2388 0
c Encoding variable: max_left_00001_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00003' order represents '1' with '2390'
c Var 'max_left_00001_00009_00003' direct represents '1' with '2390'
c Var 'max_left_00001_00009_00003' order represents '2' with '2391'
-2390 2391 0
c Var 'max_left_00001_00009_00003' direct represents '2' with '2392'
2390 -2391 2392 0
-2392 2391 0
-2392 -2390 0
c Var 'max_left_00001_00009_00003' order represents '3' with '2393'
-2391 2393 0
c Var 'max_left_00001_00009_00003' direct represents '3' with '2394'
2391 -2393 2394 0
-2394 2393 0
-2394 -2391 0
c Var 'max_left_00001_00009_00003' order represents '4' with '2395'
-2393 2395 0
c Var 'max_left_00001_00009_00003' direct represents '4' with '2396'
2393 -2395 2396 0
-2396 2395 0
-2396 -2393 0
c Var 'max_left_00001_00009_00003' order represents '5' with '2397'
-2395 2397 0
c Var 'max_left_00001_00009_00003' direct represents '5' with '2398'
2395 -2397 2398 0
-2398 2397 0
-2398 -2395 0
c Var 'max_left_00001_00009_00003' order represents '6' with '2399'
-2397 2399 0
c Var 'max_left_00001_00009_00003' direct represents '6' with '2400'
2397 -2399 2400 0
-2400 2399 0
-2400 -2397 0
c Var 'max_left_00001_00009_00003' order represents '7' with '2401'
-2399 2401 0
c Var 'max_left_00001_00009_00003' direct represents '7' with '2402'
2399 -2401 2402 0
-2402 2401 0
-2402 -2399 0
c Var 'max_left_00001_00009_00003' order represents '8' with '2403'
-2401 2403 0
c Var 'max_left_00001_00009_00003' direct represents '8' with '2404'
2401 -2403 2404 0
-2404 2403 0
-2404 -2401 0
c Var 'max_left_00001_00009_00003' direct represents '9' with '-2403'
2390 2392 2394 2396 2398 2400 2402 2404 -2403 0
c Encoding variable: max_left_00001_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00004' order represents '1' with '2405'
c Var 'max_left_00001_00009_00004' direct represents '1' with '2405'
c Var 'max_left_00001_00009_00004' order represents '2' with '2406'
-2405 2406 0
c Var 'max_left_00001_00009_00004' direct represents '2' with '2407'
2405 -2406 2407 0
-2407 2406 0
-2407 -2405 0
c Var 'max_left_00001_00009_00004' order represents '3' with '2408'
-2406 2408 0
c Var 'max_left_00001_00009_00004' direct represents '3' with '2409'
2406 -2408 2409 0
-2409 2408 0
-2409 -2406 0
c Var 'max_left_00001_00009_00004' order represents '4' with '2410'
-2408 2410 0
c Var 'max_left_00001_00009_00004' direct represents '4' with '2411'
2408 -2410 2411 0
-2411 2410 0
-2411 -2408 0
c Var 'max_left_00001_00009_00004' order represents '5' with '2412'
-2410 2412 0
c Var 'max_left_00001_00009_00004' direct represents '5' with '2413'
2410 -2412 2413 0
-2413 2412 0
-2413 -2410 0
c Var 'max_left_00001_00009_00004' order represents '6' with '2414'
-2412 2414 0
c Var 'max_left_00001_00009_00004' direct represents '6' with '2415'
2412 -2414 2415 0
-2415 2414 0
-2415 -2412 0
c Var 'max_left_00001_00009_00004' order represents '7' with '2416'
-2414 2416 0
c Var 'max_left_00001_00009_00004' direct represents '7' with '2417'
2414 -2416 2417 0
-2417 2416 0
-2417 -2414 0
c Var 'max_left_00001_00009_00004' order represents '8' with '2418'
-2416 2418 0
c Var 'max_left_00001_00009_00004' direct represents '8' with '2419'
2416 -2418 2419 0
-2419 2418 0
-2419 -2416 0
c Var 'max_left_00001_00009_00004' direct represents '9' with '-2418'
2405 2407 2409 2411 2413 2415 2417 2419 -2418 0
c Encoding variable: max_left_00001_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00005' order represents '1' with '2420'
c Var 'max_left_00001_00009_00005' direct represents '1' with '2420'
c Var 'max_left_00001_00009_00005' order represents '2' with '2421'
-2420 2421 0
c Var 'max_left_00001_00009_00005' direct represents '2' with '2422'
2420 -2421 2422 0
-2422 2421 0
-2422 -2420 0
c Var 'max_left_00001_00009_00005' order represents '3' with '2423'
-2421 2423 0
c Var 'max_left_00001_00009_00005' direct represents '3' with '2424'
2421 -2423 2424 0
-2424 2423 0
-2424 -2421 0
c Var 'max_left_00001_00009_00005' order represents '4' with '2425'
-2423 2425 0
c Var 'max_left_00001_00009_00005' direct represents '4' with '2426'
2423 -2425 2426 0
-2426 2425 0
-2426 -2423 0
c Var 'max_left_00001_00009_00005' order represents '5' with '2427'
-2425 2427 0
c Var 'max_left_00001_00009_00005' direct represents '5' with '2428'
2425 -2427 2428 0
-2428 2427 0
-2428 -2425 0
c Var 'max_left_00001_00009_00005' order represents '6' with '2429'
-2427 2429 0
c Var 'max_left_00001_00009_00005' direct represents '6' with '2430'
2427 -2429 2430 0
-2430 2429 0
-2430 -2427 0
c Var 'max_left_00001_00009_00005' order represents '7' with '2431'
-2429 2431 0
c Var 'max_left_00001_00009_00005' direct represents '7' with '2432'
2429 -2431 2432 0
-2432 2431 0
-2432 -2429 0
c Var 'max_left_00001_00009_00005' order represents '8' with '2433'
-2431 2433 0
c Var 'max_left_00001_00009_00005' direct represents '8' with '2434'
2431 -2433 2434 0
-2434 2433 0
-2434 -2431 0
c Var 'max_left_00001_00009_00005' direct represents '9' with '-2433'
2420 2422 2424 2426 2428 2430 2432 2434 -2433 0
c Encoding variable: max_left_00001_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00006' order represents '1' with '2435'
c Var 'max_left_00001_00009_00006' direct represents '1' with '2435'
c Var 'max_left_00001_00009_00006' order represents '2' with '2436'
-2435 2436 0
c Var 'max_left_00001_00009_00006' direct represents '2' with '2437'
2435 -2436 2437 0
-2437 2436 0
-2437 -2435 0
c Var 'max_left_00001_00009_00006' order represents '3' with '2438'
-2436 2438 0
c Var 'max_left_00001_00009_00006' direct represents '3' with '2439'
2436 -2438 2439 0
-2439 2438 0
-2439 -2436 0
c Var 'max_left_00001_00009_00006' order represents '4' with '2440'
-2438 2440 0
c Var 'max_left_00001_00009_00006' direct represents '4' with '2441'
2438 -2440 2441 0
-2441 2440 0
-2441 -2438 0
c Var 'max_left_00001_00009_00006' order represents '5' with '2442'
-2440 2442 0
c Var 'max_left_00001_00009_00006' direct represents '5' with '2443'
2440 -2442 2443 0
-2443 2442 0
-2443 -2440 0
c Var 'max_left_00001_00009_00006' order represents '6' with '2444'
-2442 2444 0
c Var 'max_left_00001_00009_00006' direct represents '6' with '2445'
2442 -2444 2445 0
-2445 2444 0
-2445 -2442 0
c Var 'max_left_00001_00009_00006' order represents '7' with '2446'
-2444 2446 0
c Var 'max_left_00001_00009_00006' direct represents '7' with '2447'
2444 -2446 2447 0
-2447 2446 0
-2447 -2444 0
c Var 'max_left_00001_00009_00006' order represents '8' with '2448'
-2446 2448 0
c Var 'max_left_00001_00009_00006' direct represents '8' with '2449'
2446 -2448 2449 0
-2449 2448 0
-2449 -2446 0
c Var 'max_left_00001_00009_00006' direct represents '9' with '-2448'
2435 2437 2439 2441 2443 2445 2447 2449 -2448 0
c Encoding variable: max_left_00001_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00007' order represents '1' with '2450'
c Var 'max_left_00001_00009_00007' direct represents '1' with '2450'
c Var 'max_left_00001_00009_00007' order represents '2' with '2451'
-2450 2451 0
c Var 'max_left_00001_00009_00007' direct represents '2' with '2452'
2450 -2451 2452 0
-2452 2451 0
-2452 -2450 0
c Var 'max_left_00001_00009_00007' order represents '3' with '2453'
-2451 2453 0
c Var 'max_left_00001_00009_00007' direct represents '3' with '2454'
2451 -2453 2454 0
-2454 2453 0
-2454 -2451 0
c Var 'max_left_00001_00009_00007' order represents '4' with '2455'
-2453 2455 0
c Var 'max_left_00001_00009_00007' direct represents '4' with '2456'
2453 -2455 2456 0
-2456 2455 0
-2456 -2453 0
c Var 'max_left_00001_00009_00007' order represents '5' with '2457'
-2455 2457 0
c Var 'max_left_00001_00009_00007' direct represents '5' with '2458'
2455 -2457 2458 0
-2458 2457 0
-2458 -2455 0
c Var 'max_left_00001_00009_00007' order represents '6' with '2459'
-2457 2459 0
c Var 'max_left_00001_00009_00007' direct represents '6' with '2460'
2457 -2459 2460 0
-2460 2459 0
-2460 -2457 0
c Var 'max_left_00001_00009_00007' order represents '7' with '2461'
-2459 2461 0
c Var 'max_left_00001_00009_00007' direct represents '7' with '2462'
2459 -2461 2462 0
-2462 2461 0
-2462 -2459 0
c Var 'max_left_00001_00009_00007' order represents '8' with '2463'
-2461 2463 0
c Var 'max_left_00001_00009_00007' direct represents '8' with '2464'
2461 -2463 2464 0
-2464 2463 0
-2464 -2461 0
c Var 'max_left_00001_00009_00007' direct represents '9' with '-2463'
2450 2452 2454 2456 2458 2460 2462 2464 -2463 0
c Encoding variable: max_left_00001_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00008' order represents '1' with '2465'
c Var 'max_left_00001_00009_00008' direct represents '1' with '2465'
c Var 'max_left_00001_00009_00008' order represents '2' with '2466'
-2465 2466 0
c Var 'max_left_00001_00009_00008' direct represents '2' with '2467'
2465 -2466 2467 0
-2467 2466 0
-2467 -2465 0
c Var 'max_left_00001_00009_00008' order represents '3' with '2468'
-2466 2468 0
c Var 'max_left_00001_00009_00008' direct represents '3' with '2469'
2466 -2468 2469 0
-2469 2468 0
-2469 -2466 0
c Var 'max_left_00001_00009_00008' order represents '4' with '2470'
-2468 2470 0
c Var 'max_left_00001_00009_00008' direct represents '4' with '2471'
2468 -2470 2471 0
-2471 2470 0
-2471 -2468 0
c Var 'max_left_00001_00009_00008' order represents '5' with '2472'
-2470 2472 0
c Var 'max_left_00001_00009_00008' direct represents '5' with '2473'
2470 -2472 2473 0
-2473 2472 0
-2473 -2470 0
c Var 'max_left_00001_00009_00008' order represents '6' with '2474'
-2472 2474 0
c Var 'max_left_00001_00009_00008' direct represents '6' with '2475'
2472 -2474 2475 0
-2475 2474 0
-2475 -2472 0
c Var 'max_left_00001_00009_00008' order represents '7' with '2476'
-2474 2476 0
c Var 'max_left_00001_00009_00008' direct represents '7' with '2477'
2474 -2476 2477 0
-2477 2476 0
-2477 -2474 0
c Var 'max_left_00001_00009_00008' order represents '8' with '2478'
-2476 2478 0
c Var 'max_left_00001_00009_00008' direct represents '8' with '2479'
2476 -2478 2479 0
-2479 2478 0
-2479 -2476 0
c Var 'max_left_00001_00009_00008' direct represents '9' with '-2478'
2465 2467 2469 2471 2473 2475 2477 2479 -2478 0
c Encoding variable: max_left_00001_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00001_00009_00009' order represents '1' with '2480'
c Var 'max_left_00001_00009_00009' direct represents '1' with '2480'
c Var 'max_left_00001_00009_00009' order represents '2' with '2481'
-2480 2481 0
c Var 'max_left_00001_00009_00009' direct represents '2' with '2482'
2480 -2481 2482 0
-2482 2481 0
-2482 -2480 0
c Var 'max_left_00001_00009_00009' order represents '3' with '2483'
-2481 2483 0
c Var 'max_left_00001_00009_00009' direct represents '3' with '2484'
2481 -2483 2484 0
-2484 2483 0
-2484 -2481 0
c Var 'max_left_00001_00009_00009' order represents '4' with '2485'
-2483 2485 0
c Var 'max_left_00001_00009_00009' direct represents '4' with '2486'
2483 -2485 2486 0
-2486 2485 0
-2486 -2483 0
c Var 'max_left_00001_00009_00009' order represents '5' with '2487'
-2485 2487 0
c Var 'max_left_00001_00009_00009' direct represents '5' with '2488'
2485 -2487 2488 0
-2488 2487 0
-2488 -2485 0
c Var 'max_left_00001_00009_00009' order represents '6' with '2489'
-2487 2489 0
c Var 'max_left_00001_00009_00009' direct represents '6' with '2490'
2487 -2489 2490 0
-2490 2489 0
-2490 -2487 0
c Var 'max_left_00001_00009_00009' order represents '7' with '2491'
-2489 2491 0
c Var 'max_left_00001_00009_00009' direct represents '7' with '2492'
2489 -2491 2492 0
-2492 2491 0
-2492 -2489 0
c Var 'max_left_00001_00009_00009' order represents '8' with '2493'
-2491 2493 0
c Var 'max_left_00001_00009_00009' direct represents '8' with '2494'
2491 -2493 2494 0
-2494 2493 0
-2494 -2491 0
c Var 'max_left_00001_00009_00009' direct represents '9' with '-2493'
2480 2482 2484 2486 2488 2490 2492 2494 -2493 0
c Encoding variable: max_left_00002_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00001_00000' direct represents '0' with '2495'
2495 0
c Encoding variable: max_left_00002_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00001' order represents '1' with '2496'
c Var 'max_left_00002_00001_00001' direct represents '1' with '2496'
c Var 'max_left_00002_00001_00001' order represents '2' with '2497'
-2496 2497 0
c Var 'max_left_00002_00001_00001' direct represents '2' with '2498'
2496 -2497 2498 0
-2498 2497 0
-2498 -2496 0
c Var 'max_left_00002_00001_00001' order represents '3' with '2499'
-2497 2499 0
c Var 'max_left_00002_00001_00001' direct represents '3' with '2500'
2497 -2499 2500 0
-2500 2499 0
-2500 -2497 0
c Var 'max_left_00002_00001_00001' order represents '4' with '2501'
-2499 2501 0
c Var 'max_left_00002_00001_00001' direct represents '4' with '2502'
2499 -2501 2502 0
-2502 2501 0
-2502 -2499 0
c Var 'max_left_00002_00001_00001' order represents '5' with '2503'
-2501 2503 0
c Var 'max_left_00002_00001_00001' direct represents '5' with '2504'
2501 -2503 2504 0
-2504 2503 0
-2504 -2501 0
c Var 'max_left_00002_00001_00001' order represents '6' with '2505'
-2503 2505 0
c Var 'max_left_00002_00001_00001' direct represents '6' with '2506'
2503 -2505 2506 0
-2506 2505 0
-2506 -2503 0
c Var 'max_left_00002_00001_00001' order represents '7' with '2507'
-2505 2507 0
c Var 'max_left_00002_00001_00001' direct represents '7' with '2508'
2505 -2507 2508 0
-2508 2507 0
-2508 -2505 0
c Var 'max_left_00002_00001_00001' order represents '8' with '2509'
-2507 2509 0
c Var 'max_left_00002_00001_00001' direct represents '8' with '2510'
2507 -2509 2510 0
-2510 2509 0
-2510 -2507 0
c Var 'max_left_00002_00001_00001' direct represents '9' with '-2509'
2496 2498 2500 2502 2504 2506 2508 2510 -2509 0
c Encoding variable: max_left_00002_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00002' order represents '1' with '2511'
c Var 'max_left_00002_00001_00002' direct represents '1' with '2511'
c Var 'max_left_00002_00001_00002' order represents '2' with '2512'
-2511 2512 0
c Var 'max_left_00002_00001_00002' direct represents '2' with '2513'
2511 -2512 2513 0
-2513 2512 0
-2513 -2511 0
c Var 'max_left_00002_00001_00002' order represents '3' with '2514'
-2512 2514 0
c Var 'max_left_00002_00001_00002' direct represents '3' with '2515'
2512 -2514 2515 0
-2515 2514 0
-2515 -2512 0
c Var 'max_left_00002_00001_00002' order represents '4' with '2516'
-2514 2516 0
c Var 'max_left_00002_00001_00002' direct represents '4' with '2517'
2514 -2516 2517 0
-2517 2516 0
-2517 -2514 0
c Var 'max_left_00002_00001_00002' order represents '5' with '2518'
-2516 2518 0
c Var 'max_left_00002_00001_00002' direct represents '5' with '2519'
2516 -2518 2519 0
-2519 2518 0
-2519 -2516 0
c Var 'max_left_00002_00001_00002' order represents '6' with '2520'
-2518 2520 0
c Var 'max_left_00002_00001_00002' direct represents '6' with '2521'
2518 -2520 2521 0
-2521 2520 0
-2521 -2518 0
c Var 'max_left_00002_00001_00002' order represents '7' with '2522'
-2520 2522 0
c Var 'max_left_00002_00001_00002' direct represents '7' with '2523'
2520 -2522 2523 0
-2523 2522 0
-2523 -2520 0
c Var 'max_left_00002_00001_00002' order represents '8' with '2524'
-2522 2524 0
c Var 'max_left_00002_00001_00002' direct represents '8' with '2525'
2522 -2524 2525 0
-2525 2524 0
-2525 -2522 0
c Var 'max_left_00002_00001_00002' direct represents '9' with '-2524'
2511 2513 2515 2517 2519 2521 2523 2525 -2524 0
c Encoding variable: max_left_00002_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00003' order represents '1' with '2526'
c Var 'max_left_00002_00001_00003' direct represents '1' with '2526'
c Var 'max_left_00002_00001_00003' order represents '2' with '2527'
-2526 2527 0
c Var 'max_left_00002_00001_00003' direct represents '2' with '2528'
2526 -2527 2528 0
-2528 2527 0
-2528 -2526 0
c Var 'max_left_00002_00001_00003' order represents '3' with '2529'
-2527 2529 0
c Var 'max_left_00002_00001_00003' direct represents '3' with '2530'
2527 -2529 2530 0
-2530 2529 0
-2530 -2527 0
c Var 'max_left_00002_00001_00003' order represents '4' with '2531'
-2529 2531 0
c Var 'max_left_00002_00001_00003' direct represents '4' with '2532'
2529 -2531 2532 0
-2532 2531 0
-2532 -2529 0
c Var 'max_left_00002_00001_00003' order represents '5' with '2533'
-2531 2533 0
c Var 'max_left_00002_00001_00003' direct represents '5' with '2534'
2531 -2533 2534 0
-2534 2533 0
-2534 -2531 0
c Var 'max_left_00002_00001_00003' order represents '6' with '2535'
-2533 2535 0
c Var 'max_left_00002_00001_00003' direct represents '6' with '2536'
2533 -2535 2536 0
-2536 2535 0
-2536 -2533 0
c Var 'max_left_00002_00001_00003' order represents '7' with '2537'
-2535 2537 0
c Var 'max_left_00002_00001_00003' direct represents '7' with '2538'
2535 -2537 2538 0
-2538 2537 0
-2538 -2535 0
c Var 'max_left_00002_00001_00003' order represents '8' with '2539'
-2537 2539 0
c Var 'max_left_00002_00001_00003' direct represents '8' with '2540'
2537 -2539 2540 0
-2540 2539 0
-2540 -2537 0
c Var 'max_left_00002_00001_00003' direct represents '9' with '-2539'
2526 2528 2530 2532 2534 2536 2538 2540 -2539 0
c Encoding variable: max_left_00002_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00004' order represents '1' with '2541'
c Var 'max_left_00002_00001_00004' direct represents '1' with '2541'
c Var 'max_left_00002_00001_00004' order represents '2' with '2542'
-2541 2542 0
c Var 'max_left_00002_00001_00004' direct represents '2' with '2543'
2541 -2542 2543 0
-2543 2542 0
-2543 -2541 0
c Var 'max_left_00002_00001_00004' order represents '3' with '2544'
-2542 2544 0
c Var 'max_left_00002_00001_00004' direct represents '3' with '2545'
2542 -2544 2545 0
-2545 2544 0
-2545 -2542 0
c Var 'max_left_00002_00001_00004' order represents '4' with '2546'
-2544 2546 0
c Var 'max_left_00002_00001_00004' direct represents '4' with '2547'
2544 -2546 2547 0
-2547 2546 0
-2547 -2544 0
c Var 'max_left_00002_00001_00004' order represents '5' with '2548'
-2546 2548 0
c Var 'max_left_00002_00001_00004' direct represents '5' with '2549'
2546 -2548 2549 0
-2549 2548 0
-2549 -2546 0
c Var 'max_left_00002_00001_00004' order represents '6' with '2550'
-2548 2550 0
c Var 'max_left_00002_00001_00004' direct represents '6' with '2551'
2548 -2550 2551 0
-2551 2550 0
-2551 -2548 0
c Var 'max_left_00002_00001_00004' order represents '7' with '2552'
-2550 2552 0
c Var 'max_left_00002_00001_00004' direct represents '7' with '2553'
2550 -2552 2553 0
-2553 2552 0
-2553 -2550 0
c Var 'max_left_00002_00001_00004' order represents '8' with '2554'
-2552 2554 0
c Var 'max_left_00002_00001_00004' direct represents '8' with '2555'
2552 -2554 2555 0
-2555 2554 0
-2555 -2552 0
c Var 'max_left_00002_00001_00004' direct represents '9' with '-2554'
2541 2543 2545 2547 2549 2551 2553 2555 -2554 0
c Encoding variable: max_left_00002_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00005' order represents '1' with '2556'
c Var 'max_left_00002_00001_00005' direct represents '1' with '2556'
c Var 'max_left_00002_00001_00005' order represents '2' with '2557'
-2556 2557 0
c Var 'max_left_00002_00001_00005' direct represents '2' with '2558'
2556 -2557 2558 0
-2558 2557 0
-2558 -2556 0
c Var 'max_left_00002_00001_00005' order represents '3' with '2559'
-2557 2559 0
c Var 'max_left_00002_00001_00005' direct represents '3' with '2560'
2557 -2559 2560 0
-2560 2559 0
-2560 -2557 0
c Var 'max_left_00002_00001_00005' order represents '4' with '2561'
-2559 2561 0
c Var 'max_left_00002_00001_00005' direct represents '4' with '2562'
2559 -2561 2562 0
-2562 2561 0
-2562 -2559 0
c Var 'max_left_00002_00001_00005' order represents '5' with '2563'
-2561 2563 0
c Var 'max_left_00002_00001_00005' direct represents '5' with '2564'
2561 -2563 2564 0
-2564 2563 0
-2564 -2561 0
c Var 'max_left_00002_00001_00005' order represents '6' with '2565'
-2563 2565 0
c Var 'max_left_00002_00001_00005' direct represents '6' with '2566'
2563 -2565 2566 0
-2566 2565 0
-2566 -2563 0
c Var 'max_left_00002_00001_00005' order represents '7' with '2567'
-2565 2567 0
c Var 'max_left_00002_00001_00005' direct represents '7' with '2568'
2565 -2567 2568 0
-2568 2567 0
-2568 -2565 0
c Var 'max_left_00002_00001_00005' order represents '8' with '2569'
-2567 2569 0
c Var 'max_left_00002_00001_00005' direct represents '8' with '2570'
2567 -2569 2570 0
-2570 2569 0
-2570 -2567 0
c Var 'max_left_00002_00001_00005' direct represents '9' with '-2569'
2556 2558 2560 2562 2564 2566 2568 2570 -2569 0
c Encoding variable: max_left_00002_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00006' order represents '1' with '2571'
c Var 'max_left_00002_00001_00006' direct represents '1' with '2571'
c Var 'max_left_00002_00001_00006' order represents '2' with '2572'
-2571 2572 0
c Var 'max_left_00002_00001_00006' direct represents '2' with '2573'
2571 -2572 2573 0
-2573 2572 0
-2573 -2571 0
c Var 'max_left_00002_00001_00006' order represents '3' with '2574'
-2572 2574 0
c Var 'max_left_00002_00001_00006' direct represents '3' with '2575'
2572 -2574 2575 0
-2575 2574 0
-2575 -2572 0
c Var 'max_left_00002_00001_00006' order represents '4' with '2576'
-2574 2576 0
c Var 'max_left_00002_00001_00006' direct represents '4' with '2577'
2574 -2576 2577 0
-2577 2576 0
-2577 -2574 0
c Var 'max_left_00002_00001_00006' order represents '5' with '2578'
-2576 2578 0
c Var 'max_left_00002_00001_00006' direct represents '5' with '2579'
2576 -2578 2579 0
-2579 2578 0
-2579 -2576 0
c Var 'max_left_00002_00001_00006' order represents '6' with '2580'
-2578 2580 0
c Var 'max_left_00002_00001_00006' direct represents '6' with '2581'
2578 -2580 2581 0
-2581 2580 0
-2581 -2578 0
c Var 'max_left_00002_00001_00006' order represents '7' with '2582'
-2580 2582 0
c Var 'max_left_00002_00001_00006' direct represents '7' with '2583'
2580 -2582 2583 0
-2583 2582 0
-2583 -2580 0
c Var 'max_left_00002_00001_00006' order represents '8' with '2584'
-2582 2584 0
c Var 'max_left_00002_00001_00006' direct represents '8' with '2585'
2582 -2584 2585 0
-2585 2584 0
-2585 -2582 0
c Var 'max_left_00002_00001_00006' direct represents '9' with '-2584'
2571 2573 2575 2577 2579 2581 2583 2585 -2584 0
c Encoding variable: max_left_00002_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00007' order represents '1' with '2586'
c Var 'max_left_00002_00001_00007' direct represents '1' with '2586'
c Var 'max_left_00002_00001_00007' order represents '2' with '2587'
-2586 2587 0
c Var 'max_left_00002_00001_00007' direct represents '2' with '2588'
2586 -2587 2588 0
-2588 2587 0
-2588 -2586 0
c Var 'max_left_00002_00001_00007' order represents '3' with '2589'
-2587 2589 0
c Var 'max_left_00002_00001_00007' direct represents '3' with '2590'
2587 -2589 2590 0
-2590 2589 0
-2590 -2587 0
c Var 'max_left_00002_00001_00007' order represents '4' with '2591'
-2589 2591 0
c Var 'max_left_00002_00001_00007' direct represents '4' with '2592'
2589 -2591 2592 0
-2592 2591 0
-2592 -2589 0
c Var 'max_left_00002_00001_00007' order represents '5' with '2593'
-2591 2593 0
c Var 'max_left_00002_00001_00007' direct represents '5' with '2594'
2591 -2593 2594 0
-2594 2593 0
-2594 -2591 0
c Var 'max_left_00002_00001_00007' order represents '6' with '2595'
-2593 2595 0
c Var 'max_left_00002_00001_00007' direct represents '6' with '2596'
2593 -2595 2596 0
-2596 2595 0
-2596 -2593 0
c Var 'max_left_00002_00001_00007' order represents '7' with '2597'
-2595 2597 0
c Var 'max_left_00002_00001_00007' direct represents '7' with '2598'
2595 -2597 2598 0
-2598 2597 0
-2598 -2595 0
c Var 'max_left_00002_00001_00007' order represents '8' with '2599'
-2597 2599 0
c Var 'max_left_00002_00001_00007' direct represents '8' with '2600'
2597 -2599 2600 0
-2600 2599 0
-2600 -2597 0
c Var 'max_left_00002_00001_00007' direct represents '9' with '-2599'
2586 2588 2590 2592 2594 2596 2598 2600 -2599 0
c Encoding variable: max_left_00002_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00008' order represents '1' with '2601'
c Var 'max_left_00002_00001_00008' direct represents '1' with '2601'
c Var 'max_left_00002_00001_00008' order represents '2' with '2602'
-2601 2602 0
c Var 'max_left_00002_00001_00008' direct represents '2' with '2603'
2601 -2602 2603 0
-2603 2602 0
-2603 -2601 0
c Var 'max_left_00002_00001_00008' order represents '3' with '2604'
-2602 2604 0
c Var 'max_left_00002_00001_00008' direct represents '3' with '2605'
2602 -2604 2605 0
-2605 2604 0
-2605 -2602 0
c Var 'max_left_00002_00001_00008' order represents '4' with '2606'
-2604 2606 0
c Var 'max_left_00002_00001_00008' direct represents '4' with '2607'
2604 -2606 2607 0
-2607 2606 0
-2607 -2604 0
c Var 'max_left_00002_00001_00008' order represents '5' with '2608'
-2606 2608 0
c Var 'max_left_00002_00001_00008' direct represents '5' with '2609'
2606 -2608 2609 0
-2609 2608 0
-2609 -2606 0
c Var 'max_left_00002_00001_00008' order represents '6' with '2610'
-2608 2610 0
c Var 'max_left_00002_00001_00008' direct represents '6' with '2611'
2608 -2610 2611 0
-2611 2610 0
-2611 -2608 0
c Var 'max_left_00002_00001_00008' order represents '7' with '2612'
-2610 2612 0
c Var 'max_left_00002_00001_00008' direct represents '7' with '2613'
2610 -2612 2613 0
-2613 2612 0
-2613 -2610 0
c Var 'max_left_00002_00001_00008' order represents '8' with '2614'
-2612 2614 0
c Var 'max_left_00002_00001_00008' direct represents '8' with '2615'
2612 -2614 2615 0
-2615 2614 0
-2615 -2612 0
c Var 'max_left_00002_00001_00008' direct represents '9' with '-2614'
2601 2603 2605 2607 2609 2611 2613 2615 -2614 0
c Encoding variable: max_left_00002_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00001_00009' order represents '1' with '2616'
c Var 'max_left_00002_00001_00009' direct represents '1' with '2616'
c Var 'max_left_00002_00001_00009' order represents '2' with '2617'
-2616 2617 0
c Var 'max_left_00002_00001_00009' direct represents '2' with '2618'
2616 -2617 2618 0
-2618 2617 0
-2618 -2616 0
c Var 'max_left_00002_00001_00009' order represents '3' with '2619'
-2617 2619 0
c Var 'max_left_00002_00001_00009' direct represents '3' with '2620'
2617 -2619 2620 0
-2620 2619 0
-2620 -2617 0
c Var 'max_left_00002_00001_00009' order represents '4' with '2621'
-2619 2621 0
c Var 'max_left_00002_00001_00009' direct represents '4' with '2622'
2619 -2621 2622 0
-2622 2621 0
-2622 -2619 0
c Var 'max_left_00002_00001_00009' order represents '5' with '2623'
-2621 2623 0
c Var 'max_left_00002_00001_00009' direct represents '5' with '2624'
2621 -2623 2624 0
-2624 2623 0
-2624 -2621 0
c Var 'max_left_00002_00001_00009' order represents '6' with '2625'
-2623 2625 0
c Var 'max_left_00002_00001_00009' direct represents '6' with '2626'
2623 -2625 2626 0
-2626 2625 0
-2626 -2623 0
c Var 'max_left_00002_00001_00009' order represents '7' with '2627'
-2625 2627 0
c Var 'max_left_00002_00001_00009' direct represents '7' with '2628'
2625 -2627 2628 0
-2628 2627 0
-2628 -2625 0
c Var 'max_left_00002_00001_00009' order represents '8' with '2629'
-2627 2629 0
c Var 'max_left_00002_00001_00009' direct represents '8' with '2630'
2627 -2629 2630 0
-2630 2629 0
-2630 -2627 0
c Var 'max_left_00002_00001_00009' direct represents '9' with '-2629'
2616 2618 2620 2622 2624 2626 2628 2630 -2629 0
c Encoding variable: max_left_00002_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00002_00000' direct represents '0' with '2631'
2631 0
c Encoding variable: max_left_00002_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00001' order represents '1' with '2632'
c Var 'max_left_00002_00002_00001' direct represents '1' with '2632'
c Var 'max_left_00002_00002_00001' order represents '2' with '2633'
-2632 2633 0
c Var 'max_left_00002_00002_00001' direct represents '2' with '2634'
2632 -2633 2634 0
-2634 2633 0
-2634 -2632 0
c Var 'max_left_00002_00002_00001' order represents '3' with '2635'
-2633 2635 0
c Var 'max_left_00002_00002_00001' direct represents '3' with '2636'
2633 -2635 2636 0
-2636 2635 0
-2636 -2633 0
c Var 'max_left_00002_00002_00001' order represents '4' with '2637'
-2635 2637 0
c Var 'max_left_00002_00002_00001' direct represents '4' with '2638'
2635 -2637 2638 0
-2638 2637 0
-2638 -2635 0
c Var 'max_left_00002_00002_00001' order represents '5' with '2639'
-2637 2639 0
c Var 'max_left_00002_00002_00001' direct represents '5' with '2640'
2637 -2639 2640 0
-2640 2639 0
-2640 -2637 0
c Var 'max_left_00002_00002_00001' order represents '6' with '2641'
-2639 2641 0
c Var 'max_left_00002_00002_00001' direct represents '6' with '2642'
2639 -2641 2642 0
-2642 2641 0
-2642 -2639 0
c Var 'max_left_00002_00002_00001' order represents '7' with '2643'
-2641 2643 0
c Var 'max_left_00002_00002_00001' direct represents '7' with '2644'
2641 -2643 2644 0
-2644 2643 0
-2644 -2641 0
c Var 'max_left_00002_00002_00001' order represents '8' with '2645'
-2643 2645 0
c Var 'max_left_00002_00002_00001' direct represents '8' with '2646'
2643 -2645 2646 0
-2646 2645 0
-2646 -2643 0
c Var 'max_left_00002_00002_00001' direct represents '9' with '-2645'
2632 2634 2636 2638 2640 2642 2644 2646 -2645 0
c Encoding variable: max_left_00002_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00002' order represents '1' with '2647'
c Var 'max_left_00002_00002_00002' direct represents '1' with '2647'
c Var 'max_left_00002_00002_00002' order represents '2' with '2648'
-2647 2648 0
c Var 'max_left_00002_00002_00002' direct represents '2' with '2649'
2647 -2648 2649 0
-2649 2648 0
-2649 -2647 0
c Var 'max_left_00002_00002_00002' order represents '3' with '2650'
-2648 2650 0
c Var 'max_left_00002_00002_00002' direct represents '3' with '2651'
2648 -2650 2651 0
-2651 2650 0
-2651 -2648 0
c Var 'max_left_00002_00002_00002' order represents '4' with '2652'
-2650 2652 0
c Var 'max_left_00002_00002_00002' direct represents '4' with '2653'
2650 -2652 2653 0
-2653 2652 0
-2653 -2650 0
c Var 'max_left_00002_00002_00002' order represents '5' with '2654'
-2652 2654 0
c Var 'max_left_00002_00002_00002' direct represents '5' with '2655'
2652 -2654 2655 0
-2655 2654 0
-2655 -2652 0
c Var 'max_left_00002_00002_00002' order represents '6' with '2656'
-2654 2656 0
c Var 'max_left_00002_00002_00002' direct represents '6' with '2657'
2654 -2656 2657 0
-2657 2656 0
-2657 -2654 0
c Var 'max_left_00002_00002_00002' order represents '7' with '2658'
-2656 2658 0
c Var 'max_left_00002_00002_00002' direct represents '7' with '2659'
2656 -2658 2659 0
-2659 2658 0
-2659 -2656 0
c Var 'max_left_00002_00002_00002' order represents '8' with '2660'
-2658 2660 0
c Var 'max_left_00002_00002_00002' direct represents '8' with '2661'
2658 -2660 2661 0
-2661 2660 0
-2661 -2658 0
c Var 'max_left_00002_00002_00002' direct represents '9' with '-2660'
2647 2649 2651 2653 2655 2657 2659 2661 -2660 0
c Encoding variable: max_left_00002_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00003' order represents '1' with '2662'
c Var 'max_left_00002_00002_00003' direct represents '1' with '2662'
c Var 'max_left_00002_00002_00003' order represents '2' with '2663'
-2662 2663 0
c Var 'max_left_00002_00002_00003' direct represents '2' with '2664'
2662 -2663 2664 0
-2664 2663 0
-2664 -2662 0
c Var 'max_left_00002_00002_00003' order represents '3' with '2665'
-2663 2665 0
c Var 'max_left_00002_00002_00003' direct represents '3' with '2666'
2663 -2665 2666 0
-2666 2665 0
-2666 -2663 0
c Var 'max_left_00002_00002_00003' order represents '4' with '2667'
-2665 2667 0
c Var 'max_left_00002_00002_00003' direct represents '4' with '2668'
2665 -2667 2668 0
-2668 2667 0
-2668 -2665 0
c Var 'max_left_00002_00002_00003' order represents '5' with '2669'
-2667 2669 0
c Var 'max_left_00002_00002_00003' direct represents '5' with '2670'
2667 -2669 2670 0
-2670 2669 0
-2670 -2667 0
c Var 'max_left_00002_00002_00003' order represents '6' with '2671'
-2669 2671 0
c Var 'max_left_00002_00002_00003' direct represents '6' with '2672'
2669 -2671 2672 0
-2672 2671 0
-2672 -2669 0
c Var 'max_left_00002_00002_00003' order represents '7' with '2673'
-2671 2673 0
c Var 'max_left_00002_00002_00003' direct represents '7' with '2674'
2671 -2673 2674 0
-2674 2673 0
-2674 -2671 0
c Var 'max_left_00002_00002_00003' order represents '8' with '2675'
-2673 2675 0
c Var 'max_left_00002_00002_00003' direct represents '8' with '2676'
2673 -2675 2676 0
-2676 2675 0
-2676 -2673 0
c Var 'max_left_00002_00002_00003' direct represents '9' with '-2675'
2662 2664 2666 2668 2670 2672 2674 2676 -2675 0
c Encoding variable: max_left_00002_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00004' order represents '1' with '2677'
c Var 'max_left_00002_00002_00004' direct represents '1' with '2677'
c Var 'max_left_00002_00002_00004' order represents '2' with '2678'
-2677 2678 0
c Var 'max_left_00002_00002_00004' direct represents '2' with '2679'
2677 -2678 2679 0
-2679 2678 0
-2679 -2677 0
c Var 'max_left_00002_00002_00004' order represents '3' with '2680'
-2678 2680 0
c Var 'max_left_00002_00002_00004' direct represents '3' with '2681'
2678 -2680 2681 0
-2681 2680 0
-2681 -2678 0
c Var 'max_left_00002_00002_00004' order represents '4' with '2682'
-2680 2682 0
c Var 'max_left_00002_00002_00004' direct represents '4' with '2683'
2680 -2682 2683 0
-2683 2682 0
-2683 -2680 0
c Var 'max_left_00002_00002_00004' order represents '5' with '2684'
-2682 2684 0
c Var 'max_left_00002_00002_00004' direct represents '5' with '2685'
2682 -2684 2685 0
-2685 2684 0
-2685 -2682 0
c Var 'max_left_00002_00002_00004' order represents '6' with '2686'
-2684 2686 0
c Var 'max_left_00002_00002_00004' direct represents '6' with '2687'
2684 -2686 2687 0
-2687 2686 0
-2687 -2684 0
c Var 'max_left_00002_00002_00004' order represents '7' with '2688'
-2686 2688 0
c Var 'max_left_00002_00002_00004' direct represents '7' with '2689'
2686 -2688 2689 0
-2689 2688 0
-2689 -2686 0
c Var 'max_left_00002_00002_00004' order represents '8' with '2690'
-2688 2690 0
c Var 'max_left_00002_00002_00004' direct represents '8' with '2691'
2688 -2690 2691 0
-2691 2690 0
-2691 -2688 0
c Var 'max_left_00002_00002_00004' direct represents '9' with '-2690'
2677 2679 2681 2683 2685 2687 2689 2691 -2690 0
c Encoding variable: max_left_00002_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00005' order represents '1' with '2692'
c Var 'max_left_00002_00002_00005' direct represents '1' with '2692'
c Var 'max_left_00002_00002_00005' order represents '2' with '2693'
-2692 2693 0
c Var 'max_left_00002_00002_00005' direct represents '2' with '2694'
2692 -2693 2694 0
-2694 2693 0
-2694 -2692 0
c Var 'max_left_00002_00002_00005' order represents '3' with '2695'
-2693 2695 0
c Var 'max_left_00002_00002_00005' direct represents '3' with '2696'
2693 -2695 2696 0
-2696 2695 0
-2696 -2693 0
c Var 'max_left_00002_00002_00005' order represents '4' with '2697'
-2695 2697 0
c Var 'max_left_00002_00002_00005' direct represents '4' with '2698'
2695 -2697 2698 0
-2698 2697 0
-2698 -2695 0
c Var 'max_left_00002_00002_00005' order represents '5' with '2699'
-2697 2699 0
c Var 'max_left_00002_00002_00005' direct represents '5' with '2700'
2697 -2699 2700 0
-2700 2699 0
-2700 -2697 0
c Var 'max_left_00002_00002_00005' order represents '6' with '2701'
-2699 2701 0
c Var 'max_left_00002_00002_00005' direct represents '6' with '2702'
2699 -2701 2702 0
-2702 2701 0
-2702 -2699 0
c Var 'max_left_00002_00002_00005' order represents '7' with '2703'
-2701 2703 0
c Var 'max_left_00002_00002_00005' direct represents '7' with '2704'
2701 -2703 2704 0
-2704 2703 0
-2704 -2701 0
c Var 'max_left_00002_00002_00005' order represents '8' with '2705'
-2703 2705 0
c Var 'max_left_00002_00002_00005' direct represents '8' with '2706'
2703 -2705 2706 0
-2706 2705 0
-2706 -2703 0
c Var 'max_left_00002_00002_00005' direct represents '9' with '-2705'
2692 2694 2696 2698 2700 2702 2704 2706 -2705 0
c Encoding variable: max_left_00002_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00006' order represents '1' with '2707'
c Var 'max_left_00002_00002_00006' direct represents '1' with '2707'
c Var 'max_left_00002_00002_00006' order represents '2' with '2708'
-2707 2708 0
c Var 'max_left_00002_00002_00006' direct represents '2' with '2709'
2707 -2708 2709 0
-2709 2708 0
-2709 -2707 0
c Var 'max_left_00002_00002_00006' order represents '3' with '2710'
-2708 2710 0
c Var 'max_left_00002_00002_00006' direct represents '3' with '2711'
2708 -2710 2711 0
-2711 2710 0
-2711 -2708 0
c Var 'max_left_00002_00002_00006' order represents '4' with '2712'
-2710 2712 0
c Var 'max_left_00002_00002_00006' direct represents '4' with '2713'
2710 -2712 2713 0
-2713 2712 0
-2713 -2710 0
c Var 'max_left_00002_00002_00006' order represents '5' with '2714'
-2712 2714 0
c Var 'max_left_00002_00002_00006' direct represents '5' with '2715'
2712 -2714 2715 0
-2715 2714 0
-2715 -2712 0
c Var 'max_left_00002_00002_00006' order represents '6' with '2716'
-2714 2716 0
c Var 'max_left_00002_00002_00006' direct represents '6' with '2717'
2714 -2716 2717 0
-2717 2716 0
-2717 -2714 0
c Var 'max_left_00002_00002_00006' order represents '7' with '2718'
-2716 2718 0
c Var 'max_left_00002_00002_00006' direct represents '7' with '2719'
2716 -2718 2719 0
-2719 2718 0
-2719 -2716 0
c Var 'max_left_00002_00002_00006' order represents '8' with '2720'
-2718 2720 0
c Var 'max_left_00002_00002_00006' direct represents '8' with '2721'
2718 -2720 2721 0
-2721 2720 0
-2721 -2718 0
c Var 'max_left_00002_00002_00006' direct represents '9' with '-2720'
2707 2709 2711 2713 2715 2717 2719 2721 -2720 0
c Encoding variable: max_left_00002_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00007' order represents '1' with '2722'
c Var 'max_left_00002_00002_00007' direct represents '1' with '2722'
c Var 'max_left_00002_00002_00007' order represents '2' with '2723'
-2722 2723 0
c Var 'max_left_00002_00002_00007' direct represents '2' with '2724'
2722 -2723 2724 0
-2724 2723 0
-2724 -2722 0
c Var 'max_left_00002_00002_00007' order represents '3' with '2725'
-2723 2725 0
c Var 'max_left_00002_00002_00007' direct represents '3' with '2726'
2723 -2725 2726 0
-2726 2725 0
-2726 -2723 0
c Var 'max_left_00002_00002_00007' order represents '4' with '2727'
-2725 2727 0
c Var 'max_left_00002_00002_00007' direct represents '4' with '2728'
2725 -2727 2728 0
-2728 2727 0
-2728 -2725 0
c Var 'max_left_00002_00002_00007' order represents '5' with '2729'
-2727 2729 0
c Var 'max_left_00002_00002_00007' direct represents '5' with '2730'
2727 -2729 2730 0
-2730 2729 0
-2730 -2727 0
c Var 'max_left_00002_00002_00007' order represents '6' with '2731'
-2729 2731 0
c Var 'max_left_00002_00002_00007' direct represents '6' with '2732'
2729 -2731 2732 0
-2732 2731 0
-2732 -2729 0
c Var 'max_left_00002_00002_00007' order represents '7' with '2733'
-2731 2733 0
c Var 'max_left_00002_00002_00007' direct represents '7' with '2734'
2731 -2733 2734 0
-2734 2733 0
-2734 -2731 0
c Var 'max_left_00002_00002_00007' order represents '8' with '2735'
-2733 2735 0
c Var 'max_left_00002_00002_00007' direct represents '8' with '2736'
2733 -2735 2736 0
-2736 2735 0
-2736 -2733 0
c Var 'max_left_00002_00002_00007' direct represents '9' with '-2735'
2722 2724 2726 2728 2730 2732 2734 2736 -2735 0
c Encoding variable: max_left_00002_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00008' order represents '1' with '2737'
c Var 'max_left_00002_00002_00008' direct represents '1' with '2737'
c Var 'max_left_00002_00002_00008' order represents '2' with '2738'
-2737 2738 0
c Var 'max_left_00002_00002_00008' direct represents '2' with '2739'
2737 -2738 2739 0
-2739 2738 0
-2739 -2737 0
c Var 'max_left_00002_00002_00008' order represents '3' with '2740'
-2738 2740 0
c Var 'max_left_00002_00002_00008' direct represents '3' with '2741'
2738 -2740 2741 0
-2741 2740 0
-2741 -2738 0
c Var 'max_left_00002_00002_00008' order represents '4' with '2742'
-2740 2742 0
c Var 'max_left_00002_00002_00008' direct represents '4' with '2743'
2740 -2742 2743 0
-2743 2742 0
-2743 -2740 0
c Var 'max_left_00002_00002_00008' order represents '5' with '2744'
-2742 2744 0
c Var 'max_left_00002_00002_00008' direct represents '5' with '2745'
2742 -2744 2745 0
-2745 2744 0
-2745 -2742 0
c Var 'max_left_00002_00002_00008' order represents '6' with '2746'
-2744 2746 0
c Var 'max_left_00002_00002_00008' direct represents '6' with '2747'
2744 -2746 2747 0
-2747 2746 0
-2747 -2744 0
c Var 'max_left_00002_00002_00008' order represents '7' with '2748'
-2746 2748 0
c Var 'max_left_00002_00002_00008' direct represents '7' with '2749'
2746 -2748 2749 0
-2749 2748 0
-2749 -2746 0
c Var 'max_left_00002_00002_00008' order represents '8' with '2750'
-2748 2750 0
c Var 'max_left_00002_00002_00008' direct represents '8' with '2751'
2748 -2750 2751 0
-2751 2750 0
-2751 -2748 0
c Var 'max_left_00002_00002_00008' direct represents '9' with '-2750'
2737 2739 2741 2743 2745 2747 2749 2751 -2750 0
c Encoding variable: max_left_00002_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00002_00009' order represents '1' with '2752'
c Var 'max_left_00002_00002_00009' direct represents '1' with '2752'
c Var 'max_left_00002_00002_00009' order represents '2' with '2753'
-2752 2753 0
c Var 'max_left_00002_00002_00009' direct represents '2' with '2754'
2752 -2753 2754 0
-2754 2753 0
-2754 -2752 0
c Var 'max_left_00002_00002_00009' order represents '3' with '2755'
-2753 2755 0
c Var 'max_left_00002_00002_00009' direct represents '3' with '2756'
2753 -2755 2756 0
-2756 2755 0
-2756 -2753 0
c Var 'max_left_00002_00002_00009' order represents '4' with '2757'
-2755 2757 0
c Var 'max_left_00002_00002_00009' direct represents '4' with '2758'
2755 -2757 2758 0
-2758 2757 0
-2758 -2755 0
c Var 'max_left_00002_00002_00009' order represents '5' with '2759'
-2757 2759 0
c Var 'max_left_00002_00002_00009' direct represents '5' with '2760'
2757 -2759 2760 0
-2760 2759 0
-2760 -2757 0
c Var 'max_left_00002_00002_00009' order represents '6' with '2761'
-2759 2761 0
c Var 'max_left_00002_00002_00009' direct represents '6' with '2762'
2759 -2761 2762 0
-2762 2761 0
-2762 -2759 0
c Var 'max_left_00002_00002_00009' order represents '7' with '2763'
-2761 2763 0
c Var 'max_left_00002_00002_00009' direct represents '7' with '2764'
2761 -2763 2764 0
-2764 2763 0
-2764 -2761 0
c Var 'max_left_00002_00002_00009' order represents '8' with '2765'
-2763 2765 0
c Var 'max_left_00002_00002_00009' direct represents '8' with '2766'
2763 -2765 2766 0
-2766 2765 0
-2766 -2763 0
c Var 'max_left_00002_00002_00009' direct represents '9' with '-2765'
2752 2754 2756 2758 2760 2762 2764 2766 -2765 0
c Encoding variable: max_left_00002_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00003_00000' direct represents '0' with '2767'
2767 0
c Encoding variable: max_left_00002_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00001' order represents '1' with '2768'
c Var 'max_left_00002_00003_00001' direct represents '1' with '2768'
c Var 'max_left_00002_00003_00001' order represents '2' with '2769'
-2768 2769 0
c Var 'max_left_00002_00003_00001' direct represents '2' with '2770'
2768 -2769 2770 0
-2770 2769 0
-2770 -2768 0
c Var 'max_left_00002_00003_00001' order represents '3' with '2771'
-2769 2771 0
c Var 'max_left_00002_00003_00001' direct represents '3' with '2772'
2769 -2771 2772 0
-2772 2771 0
-2772 -2769 0
c Var 'max_left_00002_00003_00001' order represents '4' with '2773'
-2771 2773 0
c Var 'max_left_00002_00003_00001' direct represents '4' with '2774'
2771 -2773 2774 0
-2774 2773 0
-2774 -2771 0
c Var 'max_left_00002_00003_00001' order represents '5' with '2775'
-2773 2775 0
c Var 'max_left_00002_00003_00001' direct represents '5' with '2776'
2773 -2775 2776 0
-2776 2775 0
-2776 -2773 0
c Var 'max_left_00002_00003_00001' order represents '6' with '2777'
-2775 2777 0
c Var 'max_left_00002_00003_00001' direct represents '6' with '2778'
2775 -2777 2778 0
-2778 2777 0
-2778 -2775 0
c Var 'max_left_00002_00003_00001' order represents '7' with '2779'
-2777 2779 0
c Var 'max_left_00002_00003_00001' direct represents '7' with '2780'
2777 -2779 2780 0
-2780 2779 0
-2780 -2777 0
c Var 'max_left_00002_00003_00001' order represents '8' with '2781'
-2779 2781 0
c Var 'max_left_00002_00003_00001' direct represents '8' with '2782'
2779 -2781 2782 0
-2782 2781 0
-2782 -2779 0
c Var 'max_left_00002_00003_00001' direct represents '9' with '-2781'
2768 2770 2772 2774 2776 2778 2780 2782 -2781 0
c Encoding variable: max_left_00002_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00002' order represents '1' with '2783'
c Var 'max_left_00002_00003_00002' direct represents '1' with '2783'
c Var 'max_left_00002_00003_00002' order represents '2' with '2784'
-2783 2784 0
c Var 'max_left_00002_00003_00002' direct represents '2' with '2785'
2783 -2784 2785 0
-2785 2784 0
-2785 -2783 0
c Var 'max_left_00002_00003_00002' order represents '3' with '2786'
-2784 2786 0
c Var 'max_left_00002_00003_00002' direct represents '3' with '2787'
2784 -2786 2787 0
-2787 2786 0
-2787 -2784 0
c Var 'max_left_00002_00003_00002' order represents '4' with '2788'
-2786 2788 0
c Var 'max_left_00002_00003_00002' direct represents '4' with '2789'
2786 -2788 2789 0
-2789 2788 0
-2789 -2786 0
c Var 'max_left_00002_00003_00002' order represents '5' with '2790'
-2788 2790 0
c Var 'max_left_00002_00003_00002' direct represents '5' with '2791'
2788 -2790 2791 0
-2791 2790 0
-2791 -2788 0
c Var 'max_left_00002_00003_00002' order represents '6' with '2792'
-2790 2792 0
c Var 'max_left_00002_00003_00002' direct represents '6' with '2793'
2790 -2792 2793 0
-2793 2792 0
-2793 -2790 0
c Var 'max_left_00002_00003_00002' order represents '7' with '2794'
-2792 2794 0
c Var 'max_left_00002_00003_00002' direct represents '7' with '2795'
2792 -2794 2795 0
-2795 2794 0
-2795 -2792 0
c Var 'max_left_00002_00003_00002' order represents '8' with '2796'
-2794 2796 0
c Var 'max_left_00002_00003_00002' direct represents '8' with '2797'
2794 -2796 2797 0
-2797 2796 0
-2797 -2794 0
c Var 'max_left_00002_00003_00002' direct represents '9' with '-2796'
2783 2785 2787 2789 2791 2793 2795 2797 -2796 0
c Encoding variable: max_left_00002_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00003' order represents '1' with '2798'
c Var 'max_left_00002_00003_00003' direct represents '1' with '2798'
c Var 'max_left_00002_00003_00003' order represents '2' with '2799'
-2798 2799 0
c Var 'max_left_00002_00003_00003' direct represents '2' with '2800'
2798 -2799 2800 0
-2800 2799 0
-2800 -2798 0
c Var 'max_left_00002_00003_00003' order represents '3' with '2801'
-2799 2801 0
c Var 'max_left_00002_00003_00003' direct represents '3' with '2802'
2799 -2801 2802 0
-2802 2801 0
-2802 -2799 0
c Var 'max_left_00002_00003_00003' order represents '4' with '2803'
-2801 2803 0
c Var 'max_left_00002_00003_00003' direct represents '4' with '2804'
2801 -2803 2804 0
-2804 2803 0
-2804 -2801 0
c Var 'max_left_00002_00003_00003' order represents '5' with '2805'
-2803 2805 0
c Var 'max_left_00002_00003_00003' direct represents '5' with '2806'
2803 -2805 2806 0
-2806 2805 0
-2806 -2803 0
c Var 'max_left_00002_00003_00003' order represents '6' with '2807'
-2805 2807 0
c Var 'max_left_00002_00003_00003' direct represents '6' with '2808'
2805 -2807 2808 0
-2808 2807 0
-2808 -2805 0
c Var 'max_left_00002_00003_00003' order represents '7' with '2809'
-2807 2809 0
c Var 'max_left_00002_00003_00003' direct represents '7' with '2810'
2807 -2809 2810 0
-2810 2809 0
-2810 -2807 0
c Var 'max_left_00002_00003_00003' order represents '8' with '2811'
-2809 2811 0
c Var 'max_left_00002_00003_00003' direct represents '8' with '2812'
2809 -2811 2812 0
-2812 2811 0
-2812 -2809 0
c Var 'max_left_00002_00003_00003' direct represents '9' with '-2811'
2798 2800 2802 2804 2806 2808 2810 2812 -2811 0
c Encoding variable: max_left_00002_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00004' order represents '1' with '2813'
c Var 'max_left_00002_00003_00004' direct represents '1' with '2813'
c Var 'max_left_00002_00003_00004' order represents '2' with '2814'
-2813 2814 0
c Var 'max_left_00002_00003_00004' direct represents '2' with '2815'
2813 -2814 2815 0
-2815 2814 0
-2815 -2813 0
c Var 'max_left_00002_00003_00004' order represents '3' with '2816'
-2814 2816 0
c Var 'max_left_00002_00003_00004' direct represents '3' with '2817'
2814 -2816 2817 0
-2817 2816 0
-2817 -2814 0
c Var 'max_left_00002_00003_00004' order represents '4' with '2818'
-2816 2818 0
c Var 'max_left_00002_00003_00004' direct represents '4' with '2819'
2816 -2818 2819 0
-2819 2818 0
-2819 -2816 0
c Var 'max_left_00002_00003_00004' order represents '5' with '2820'
-2818 2820 0
c Var 'max_left_00002_00003_00004' direct represents '5' with '2821'
2818 -2820 2821 0
-2821 2820 0
-2821 -2818 0
c Var 'max_left_00002_00003_00004' order represents '6' with '2822'
-2820 2822 0
c Var 'max_left_00002_00003_00004' direct represents '6' with '2823'
2820 -2822 2823 0
-2823 2822 0
-2823 -2820 0
c Var 'max_left_00002_00003_00004' order represents '7' with '2824'
-2822 2824 0
c Var 'max_left_00002_00003_00004' direct represents '7' with '2825'
2822 -2824 2825 0
-2825 2824 0
-2825 -2822 0
c Var 'max_left_00002_00003_00004' order represents '8' with '2826'
-2824 2826 0
c Var 'max_left_00002_00003_00004' direct represents '8' with '2827'
2824 -2826 2827 0
-2827 2826 0
-2827 -2824 0
c Var 'max_left_00002_00003_00004' direct represents '9' with '-2826'
2813 2815 2817 2819 2821 2823 2825 2827 -2826 0
c Encoding variable: max_left_00002_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00005' order represents '1' with '2828'
c Var 'max_left_00002_00003_00005' direct represents '1' with '2828'
c Var 'max_left_00002_00003_00005' order represents '2' with '2829'
-2828 2829 0
c Var 'max_left_00002_00003_00005' direct represents '2' with '2830'
2828 -2829 2830 0
-2830 2829 0
-2830 -2828 0
c Var 'max_left_00002_00003_00005' order represents '3' with '2831'
-2829 2831 0
c Var 'max_left_00002_00003_00005' direct represents '3' with '2832'
2829 -2831 2832 0
-2832 2831 0
-2832 -2829 0
c Var 'max_left_00002_00003_00005' order represents '4' with '2833'
-2831 2833 0
c Var 'max_left_00002_00003_00005' direct represents '4' with '2834'
2831 -2833 2834 0
-2834 2833 0
-2834 -2831 0
c Var 'max_left_00002_00003_00005' order represents '5' with '2835'
-2833 2835 0
c Var 'max_left_00002_00003_00005' direct represents '5' with '2836'
2833 -2835 2836 0
-2836 2835 0
-2836 -2833 0
c Var 'max_left_00002_00003_00005' order represents '6' with '2837'
-2835 2837 0
c Var 'max_left_00002_00003_00005' direct represents '6' with '2838'
2835 -2837 2838 0
-2838 2837 0
-2838 -2835 0
c Var 'max_left_00002_00003_00005' order represents '7' with '2839'
-2837 2839 0
c Var 'max_left_00002_00003_00005' direct represents '7' with '2840'
2837 -2839 2840 0
-2840 2839 0
-2840 -2837 0
c Var 'max_left_00002_00003_00005' order represents '8' with '2841'
-2839 2841 0
c Var 'max_left_00002_00003_00005' direct represents '8' with '2842'
2839 -2841 2842 0
-2842 2841 0
-2842 -2839 0
c Var 'max_left_00002_00003_00005' direct represents '9' with '-2841'
2828 2830 2832 2834 2836 2838 2840 2842 -2841 0
c Encoding variable: max_left_00002_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00006' order represents '1' with '2843'
c Var 'max_left_00002_00003_00006' direct represents '1' with '2843'
c Var 'max_left_00002_00003_00006' order represents '2' with '2844'
-2843 2844 0
c Var 'max_left_00002_00003_00006' direct represents '2' with '2845'
2843 -2844 2845 0
-2845 2844 0
-2845 -2843 0
c Var 'max_left_00002_00003_00006' order represents '3' with '2846'
-2844 2846 0
c Var 'max_left_00002_00003_00006' direct represents '3' with '2847'
2844 -2846 2847 0
-2847 2846 0
-2847 -2844 0
c Var 'max_left_00002_00003_00006' order represents '4' with '2848'
-2846 2848 0
c Var 'max_left_00002_00003_00006' direct represents '4' with '2849'
2846 -2848 2849 0
-2849 2848 0
-2849 -2846 0
c Var 'max_left_00002_00003_00006' order represents '5' with '2850'
-2848 2850 0
c Var 'max_left_00002_00003_00006' direct represents '5' with '2851'
2848 -2850 2851 0
-2851 2850 0
-2851 -2848 0
c Var 'max_left_00002_00003_00006' order represents '6' with '2852'
-2850 2852 0
c Var 'max_left_00002_00003_00006' direct represents '6' with '2853'
2850 -2852 2853 0
-2853 2852 0
-2853 -2850 0
c Var 'max_left_00002_00003_00006' order represents '7' with '2854'
-2852 2854 0
c Var 'max_left_00002_00003_00006' direct represents '7' with '2855'
2852 -2854 2855 0
-2855 2854 0
-2855 -2852 0
c Var 'max_left_00002_00003_00006' order represents '8' with '2856'
-2854 2856 0
c Var 'max_left_00002_00003_00006' direct represents '8' with '2857'
2854 -2856 2857 0
-2857 2856 0
-2857 -2854 0
c Var 'max_left_00002_00003_00006' direct represents '9' with '-2856'
2843 2845 2847 2849 2851 2853 2855 2857 -2856 0
c Encoding variable: max_left_00002_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00007' order represents '1' with '2858'
c Var 'max_left_00002_00003_00007' direct represents '1' with '2858'
c Var 'max_left_00002_00003_00007' order represents '2' with '2859'
-2858 2859 0
c Var 'max_left_00002_00003_00007' direct represents '2' with '2860'
2858 -2859 2860 0
-2860 2859 0
-2860 -2858 0
c Var 'max_left_00002_00003_00007' order represents '3' with '2861'
-2859 2861 0
c Var 'max_left_00002_00003_00007' direct represents '3' with '2862'
2859 -2861 2862 0
-2862 2861 0
-2862 -2859 0
c Var 'max_left_00002_00003_00007' order represents '4' with '2863'
-2861 2863 0
c Var 'max_left_00002_00003_00007' direct represents '4' with '2864'
2861 -2863 2864 0
-2864 2863 0
-2864 -2861 0
c Var 'max_left_00002_00003_00007' order represents '5' with '2865'
-2863 2865 0
c Var 'max_left_00002_00003_00007' direct represents '5' with '2866'
2863 -2865 2866 0
-2866 2865 0
-2866 -2863 0
c Var 'max_left_00002_00003_00007' order represents '6' with '2867'
-2865 2867 0
c Var 'max_left_00002_00003_00007' direct represents '6' with '2868'
2865 -2867 2868 0
-2868 2867 0
-2868 -2865 0
c Var 'max_left_00002_00003_00007' order represents '7' with '2869'
-2867 2869 0
c Var 'max_left_00002_00003_00007' direct represents '7' with '2870'
2867 -2869 2870 0
-2870 2869 0
-2870 -2867 0
c Var 'max_left_00002_00003_00007' order represents '8' with '2871'
-2869 2871 0
c Var 'max_left_00002_00003_00007' direct represents '8' with '2872'
2869 -2871 2872 0
-2872 2871 0
-2872 -2869 0
c Var 'max_left_00002_00003_00007' direct represents '9' with '-2871'
2858 2860 2862 2864 2866 2868 2870 2872 -2871 0
c Encoding variable: max_left_00002_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00008' order represents '1' with '2873'
c Var 'max_left_00002_00003_00008' direct represents '1' with '2873'
c Var 'max_left_00002_00003_00008' order represents '2' with '2874'
-2873 2874 0
c Var 'max_left_00002_00003_00008' direct represents '2' with '2875'
2873 -2874 2875 0
-2875 2874 0
-2875 -2873 0
c Var 'max_left_00002_00003_00008' order represents '3' with '2876'
-2874 2876 0
c Var 'max_left_00002_00003_00008' direct represents '3' with '2877'
2874 -2876 2877 0
-2877 2876 0
-2877 -2874 0
c Var 'max_left_00002_00003_00008' order represents '4' with '2878'
-2876 2878 0
c Var 'max_left_00002_00003_00008' direct represents '4' with '2879'
2876 -2878 2879 0
-2879 2878 0
-2879 -2876 0
c Var 'max_left_00002_00003_00008' order represents '5' with '2880'
-2878 2880 0
c Var 'max_left_00002_00003_00008' direct represents '5' with '2881'
2878 -2880 2881 0
-2881 2880 0
-2881 -2878 0
c Var 'max_left_00002_00003_00008' order represents '6' with '2882'
-2880 2882 0
c Var 'max_left_00002_00003_00008' direct represents '6' with '2883'
2880 -2882 2883 0
-2883 2882 0
-2883 -2880 0
c Var 'max_left_00002_00003_00008' order represents '7' with '2884'
-2882 2884 0
c Var 'max_left_00002_00003_00008' direct represents '7' with '2885'
2882 -2884 2885 0
-2885 2884 0
-2885 -2882 0
c Var 'max_left_00002_00003_00008' order represents '8' with '2886'
-2884 2886 0
c Var 'max_left_00002_00003_00008' direct represents '8' with '2887'
2884 -2886 2887 0
-2887 2886 0
-2887 -2884 0
c Var 'max_left_00002_00003_00008' direct represents '9' with '-2886'
2873 2875 2877 2879 2881 2883 2885 2887 -2886 0
c Encoding variable: max_left_00002_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00003_00009' order represents '1' with '2888'
c Var 'max_left_00002_00003_00009' direct represents '1' with '2888'
c Var 'max_left_00002_00003_00009' order represents '2' with '2889'
-2888 2889 0
c Var 'max_left_00002_00003_00009' direct represents '2' with '2890'
2888 -2889 2890 0
-2890 2889 0
-2890 -2888 0
c Var 'max_left_00002_00003_00009' order represents '3' with '2891'
-2889 2891 0
c Var 'max_left_00002_00003_00009' direct represents '3' with '2892'
2889 -2891 2892 0
-2892 2891 0
-2892 -2889 0
c Var 'max_left_00002_00003_00009' order represents '4' with '2893'
-2891 2893 0
c Var 'max_left_00002_00003_00009' direct represents '4' with '2894'
2891 -2893 2894 0
-2894 2893 0
-2894 -2891 0
c Var 'max_left_00002_00003_00009' order represents '5' with '2895'
-2893 2895 0
c Var 'max_left_00002_00003_00009' direct represents '5' with '2896'
2893 -2895 2896 0
-2896 2895 0
-2896 -2893 0
c Var 'max_left_00002_00003_00009' order represents '6' with '2897'
-2895 2897 0
c Var 'max_left_00002_00003_00009' direct represents '6' with '2898'
2895 -2897 2898 0
-2898 2897 0
-2898 -2895 0
c Var 'max_left_00002_00003_00009' order represents '7' with '2899'
-2897 2899 0
c Var 'max_left_00002_00003_00009' direct represents '7' with '2900'
2897 -2899 2900 0
-2900 2899 0
-2900 -2897 0
c Var 'max_left_00002_00003_00009' order represents '8' with '2901'
-2899 2901 0
c Var 'max_left_00002_00003_00009' direct represents '8' with '2902'
2899 -2901 2902 0
-2902 2901 0
-2902 -2899 0
c Var 'max_left_00002_00003_00009' direct represents '9' with '-2901'
2888 2890 2892 2894 2896 2898 2900 2902 -2901 0
c Encoding variable: max_left_00002_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00004_00000' direct represents '0' with '2903'
2903 0
c Encoding variable: max_left_00002_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00001' order represents '1' with '2904'
c Var 'max_left_00002_00004_00001' direct represents '1' with '2904'
c Var 'max_left_00002_00004_00001' order represents '2' with '2905'
-2904 2905 0
c Var 'max_left_00002_00004_00001' direct represents '2' with '2906'
2904 -2905 2906 0
-2906 2905 0
-2906 -2904 0
c Var 'max_left_00002_00004_00001' order represents '3' with '2907'
-2905 2907 0
c Var 'max_left_00002_00004_00001' direct represents '3' with '2908'
2905 -2907 2908 0
-2908 2907 0
-2908 -2905 0
c Var 'max_left_00002_00004_00001' order represents '4' with '2909'
-2907 2909 0
c Var 'max_left_00002_00004_00001' direct represents '4' with '2910'
2907 -2909 2910 0
-2910 2909 0
-2910 -2907 0
c Var 'max_left_00002_00004_00001' order represents '5' with '2911'
-2909 2911 0
c Var 'max_left_00002_00004_00001' direct represents '5' with '2912'
2909 -2911 2912 0
-2912 2911 0
-2912 -2909 0
c Var 'max_left_00002_00004_00001' order represents '6' with '2913'
-2911 2913 0
c Var 'max_left_00002_00004_00001' direct represents '6' with '2914'
2911 -2913 2914 0
-2914 2913 0
-2914 -2911 0
c Var 'max_left_00002_00004_00001' order represents '7' with '2915'
-2913 2915 0
c Var 'max_left_00002_00004_00001' direct represents '7' with '2916'
2913 -2915 2916 0
-2916 2915 0
-2916 -2913 0
c Var 'max_left_00002_00004_00001' order represents '8' with '2917'
-2915 2917 0
c Var 'max_left_00002_00004_00001' direct represents '8' with '2918'
2915 -2917 2918 0
-2918 2917 0
-2918 -2915 0
c Var 'max_left_00002_00004_00001' direct represents '9' with '-2917'
2904 2906 2908 2910 2912 2914 2916 2918 -2917 0
c Encoding variable: max_left_00002_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00002' order represents '1' with '2919'
c Var 'max_left_00002_00004_00002' direct represents '1' with '2919'
c Var 'max_left_00002_00004_00002' order represents '2' with '2920'
-2919 2920 0
c Var 'max_left_00002_00004_00002' direct represents '2' with '2921'
2919 -2920 2921 0
-2921 2920 0
-2921 -2919 0
c Var 'max_left_00002_00004_00002' order represents '3' with '2922'
-2920 2922 0
c Var 'max_left_00002_00004_00002' direct represents '3' with '2923'
2920 -2922 2923 0
-2923 2922 0
-2923 -2920 0
c Var 'max_left_00002_00004_00002' order represents '4' with '2924'
-2922 2924 0
c Var 'max_left_00002_00004_00002' direct represents '4' with '2925'
2922 -2924 2925 0
-2925 2924 0
-2925 -2922 0
c Var 'max_left_00002_00004_00002' order represents '5' with '2926'
-2924 2926 0
c Var 'max_left_00002_00004_00002' direct represents '5' with '2927'
2924 -2926 2927 0
-2927 2926 0
-2927 -2924 0
c Var 'max_left_00002_00004_00002' order represents '6' with '2928'
-2926 2928 0
c Var 'max_left_00002_00004_00002' direct represents '6' with '2929'
2926 -2928 2929 0
-2929 2928 0
-2929 -2926 0
c Var 'max_left_00002_00004_00002' order represents '7' with '2930'
-2928 2930 0
c Var 'max_left_00002_00004_00002' direct represents '7' with '2931'
2928 -2930 2931 0
-2931 2930 0
-2931 -2928 0
c Var 'max_left_00002_00004_00002' order represents '8' with '2932'
-2930 2932 0
c Var 'max_left_00002_00004_00002' direct represents '8' with '2933'
2930 -2932 2933 0
-2933 2932 0
-2933 -2930 0
c Var 'max_left_00002_00004_00002' direct represents '9' with '-2932'
2919 2921 2923 2925 2927 2929 2931 2933 -2932 0
c Encoding variable: max_left_00002_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00003' order represents '1' with '2934'
c Var 'max_left_00002_00004_00003' direct represents '1' with '2934'
c Var 'max_left_00002_00004_00003' order represents '2' with '2935'
-2934 2935 0
c Var 'max_left_00002_00004_00003' direct represents '2' with '2936'
2934 -2935 2936 0
-2936 2935 0
-2936 -2934 0
c Var 'max_left_00002_00004_00003' order represents '3' with '2937'
-2935 2937 0
c Var 'max_left_00002_00004_00003' direct represents '3' with '2938'
2935 -2937 2938 0
-2938 2937 0
-2938 -2935 0
c Var 'max_left_00002_00004_00003' order represents '4' with '2939'
-2937 2939 0
c Var 'max_left_00002_00004_00003' direct represents '4' with '2940'
2937 -2939 2940 0
-2940 2939 0
-2940 -2937 0
c Var 'max_left_00002_00004_00003' order represents '5' with '2941'
-2939 2941 0
c Var 'max_left_00002_00004_00003' direct represents '5' with '2942'
2939 -2941 2942 0
-2942 2941 0
-2942 -2939 0
c Var 'max_left_00002_00004_00003' order represents '6' with '2943'
-2941 2943 0
c Var 'max_left_00002_00004_00003' direct represents '6' with '2944'
2941 -2943 2944 0
-2944 2943 0
-2944 -2941 0
c Var 'max_left_00002_00004_00003' order represents '7' with '2945'
-2943 2945 0
c Var 'max_left_00002_00004_00003' direct represents '7' with '2946'
2943 -2945 2946 0
-2946 2945 0
-2946 -2943 0
c Var 'max_left_00002_00004_00003' order represents '8' with '2947'
-2945 2947 0
c Var 'max_left_00002_00004_00003' direct represents '8' with '2948'
2945 -2947 2948 0
-2948 2947 0
-2948 -2945 0
c Var 'max_left_00002_00004_00003' direct represents '9' with '-2947'
2934 2936 2938 2940 2942 2944 2946 2948 -2947 0
c Encoding variable: max_left_00002_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00004' order represents '1' with '2949'
c Var 'max_left_00002_00004_00004' direct represents '1' with '2949'
c Var 'max_left_00002_00004_00004' order represents '2' with '2950'
-2949 2950 0
c Var 'max_left_00002_00004_00004' direct represents '2' with '2951'
2949 -2950 2951 0
-2951 2950 0
-2951 -2949 0
c Var 'max_left_00002_00004_00004' order represents '3' with '2952'
-2950 2952 0
c Var 'max_left_00002_00004_00004' direct represents '3' with '2953'
2950 -2952 2953 0
-2953 2952 0
-2953 -2950 0
c Var 'max_left_00002_00004_00004' order represents '4' with '2954'
-2952 2954 0
c Var 'max_left_00002_00004_00004' direct represents '4' with '2955'
2952 -2954 2955 0
-2955 2954 0
-2955 -2952 0
c Var 'max_left_00002_00004_00004' order represents '5' with '2956'
-2954 2956 0
c Var 'max_left_00002_00004_00004' direct represents '5' with '2957'
2954 -2956 2957 0
-2957 2956 0
-2957 -2954 0
c Var 'max_left_00002_00004_00004' order represents '6' with '2958'
-2956 2958 0
c Var 'max_left_00002_00004_00004' direct represents '6' with '2959'
2956 -2958 2959 0
-2959 2958 0
-2959 -2956 0
c Var 'max_left_00002_00004_00004' order represents '7' with '2960'
-2958 2960 0
c Var 'max_left_00002_00004_00004' direct represents '7' with '2961'
2958 -2960 2961 0
-2961 2960 0
-2961 -2958 0
c Var 'max_left_00002_00004_00004' order represents '8' with '2962'
-2960 2962 0
c Var 'max_left_00002_00004_00004' direct represents '8' with '2963'
2960 -2962 2963 0
-2963 2962 0
-2963 -2960 0
c Var 'max_left_00002_00004_00004' direct represents '9' with '-2962'
2949 2951 2953 2955 2957 2959 2961 2963 -2962 0
c Encoding variable: max_left_00002_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00005' order represents '1' with '2964'
c Var 'max_left_00002_00004_00005' direct represents '1' with '2964'
c Var 'max_left_00002_00004_00005' order represents '2' with '2965'
-2964 2965 0
c Var 'max_left_00002_00004_00005' direct represents '2' with '2966'
2964 -2965 2966 0
-2966 2965 0
-2966 -2964 0
c Var 'max_left_00002_00004_00005' order represents '3' with '2967'
-2965 2967 0
c Var 'max_left_00002_00004_00005' direct represents '3' with '2968'
2965 -2967 2968 0
-2968 2967 0
-2968 -2965 0
c Var 'max_left_00002_00004_00005' order represents '4' with '2969'
-2967 2969 0
c Var 'max_left_00002_00004_00005' direct represents '4' with '2970'
2967 -2969 2970 0
-2970 2969 0
-2970 -2967 0
c Var 'max_left_00002_00004_00005' order represents '5' with '2971'
-2969 2971 0
c Var 'max_left_00002_00004_00005' direct represents '5' with '2972'
2969 -2971 2972 0
-2972 2971 0
-2972 -2969 0
c Var 'max_left_00002_00004_00005' order represents '6' with '2973'
-2971 2973 0
c Var 'max_left_00002_00004_00005' direct represents '6' with '2974'
2971 -2973 2974 0
-2974 2973 0
-2974 -2971 0
c Var 'max_left_00002_00004_00005' order represents '7' with '2975'
-2973 2975 0
c Var 'max_left_00002_00004_00005' direct represents '7' with '2976'
2973 -2975 2976 0
-2976 2975 0
-2976 -2973 0
c Var 'max_left_00002_00004_00005' order represents '8' with '2977'
-2975 2977 0
c Var 'max_left_00002_00004_00005' direct represents '8' with '2978'
2975 -2977 2978 0
-2978 2977 0
-2978 -2975 0
c Var 'max_left_00002_00004_00005' direct represents '9' with '-2977'
2964 2966 2968 2970 2972 2974 2976 2978 -2977 0
c Encoding variable: max_left_00002_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00006' order represents '1' with '2979'
c Var 'max_left_00002_00004_00006' direct represents '1' with '2979'
c Var 'max_left_00002_00004_00006' order represents '2' with '2980'
-2979 2980 0
c Var 'max_left_00002_00004_00006' direct represents '2' with '2981'
2979 -2980 2981 0
-2981 2980 0
-2981 -2979 0
c Var 'max_left_00002_00004_00006' order represents '3' with '2982'
-2980 2982 0
c Var 'max_left_00002_00004_00006' direct represents '3' with '2983'
2980 -2982 2983 0
-2983 2982 0
-2983 -2980 0
c Var 'max_left_00002_00004_00006' order represents '4' with '2984'
-2982 2984 0
c Var 'max_left_00002_00004_00006' direct represents '4' with '2985'
2982 -2984 2985 0
-2985 2984 0
-2985 -2982 0
c Var 'max_left_00002_00004_00006' order represents '5' with '2986'
-2984 2986 0
c Var 'max_left_00002_00004_00006' direct represents '5' with '2987'
2984 -2986 2987 0
-2987 2986 0
-2987 -2984 0
c Var 'max_left_00002_00004_00006' order represents '6' with '2988'
-2986 2988 0
c Var 'max_left_00002_00004_00006' direct represents '6' with '2989'
2986 -2988 2989 0
-2989 2988 0
-2989 -2986 0
c Var 'max_left_00002_00004_00006' order represents '7' with '2990'
-2988 2990 0
c Var 'max_left_00002_00004_00006' direct represents '7' with '2991'
2988 -2990 2991 0
-2991 2990 0
-2991 -2988 0
c Var 'max_left_00002_00004_00006' order represents '8' with '2992'
-2990 2992 0
c Var 'max_left_00002_00004_00006' direct represents '8' with '2993'
2990 -2992 2993 0
-2993 2992 0
-2993 -2990 0
c Var 'max_left_00002_00004_00006' direct represents '9' with '-2992'
2979 2981 2983 2985 2987 2989 2991 2993 -2992 0
c Encoding variable: max_left_00002_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00007' order represents '1' with '2994'
c Var 'max_left_00002_00004_00007' direct represents '1' with '2994'
c Var 'max_left_00002_00004_00007' order represents '2' with '2995'
-2994 2995 0
c Var 'max_left_00002_00004_00007' direct represents '2' with '2996'
2994 -2995 2996 0
-2996 2995 0
-2996 -2994 0
c Var 'max_left_00002_00004_00007' order represents '3' with '2997'
-2995 2997 0
c Var 'max_left_00002_00004_00007' direct represents '3' with '2998'
2995 -2997 2998 0
-2998 2997 0
-2998 -2995 0
c Var 'max_left_00002_00004_00007' order represents '4' with '2999'
-2997 2999 0
c Var 'max_left_00002_00004_00007' direct represents '4' with '3000'
2997 -2999 3000 0
-3000 2999 0
-3000 -2997 0
c Var 'max_left_00002_00004_00007' order represents '5' with '3001'
-2999 3001 0
c Var 'max_left_00002_00004_00007' direct represents '5' with '3002'
2999 -3001 3002 0
-3002 3001 0
-3002 -2999 0
c Var 'max_left_00002_00004_00007' order represents '6' with '3003'
-3001 3003 0
c Var 'max_left_00002_00004_00007' direct represents '6' with '3004'
3001 -3003 3004 0
-3004 3003 0
-3004 -3001 0
c Var 'max_left_00002_00004_00007' order represents '7' with '3005'
-3003 3005 0
c Var 'max_left_00002_00004_00007' direct represents '7' with '3006'
3003 -3005 3006 0
-3006 3005 0
-3006 -3003 0
c Var 'max_left_00002_00004_00007' order represents '8' with '3007'
-3005 3007 0
c Var 'max_left_00002_00004_00007' direct represents '8' with '3008'
3005 -3007 3008 0
-3008 3007 0
-3008 -3005 0
c Var 'max_left_00002_00004_00007' direct represents '9' with '-3007'
2994 2996 2998 3000 3002 3004 3006 3008 -3007 0
c Encoding variable: max_left_00002_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00008' order represents '1' with '3009'
c Var 'max_left_00002_00004_00008' direct represents '1' with '3009'
c Var 'max_left_00002_00004_00008' order represents '2' with '3010'
-3009 3010 0
c Var 'max_left_00002_00004_00008' direct represents '2' with '3011'
3009 -3010 3011 0
-3011 3010 0
-3011 -3009 0
c Var 'max_left_00002_00004_00008' order represents '3' with '3012'
-3010 3012 0
c Var 'max_left_00002_00004_00008' direct represents '3' with '3013'
3010 -3012 3013 0
-3013 3012 0
-3013 -3010 0
c Var 'max_left_00002_00004_00008' order represents '4' with '3014'
-3012 3014 0
c Var 'max_left_00002_00004_00008' direct represents '4' with '3015'
3012 -3014 3015 0
-3015 3014 0
-3015 -3012 0
c Var 'max_left_00002_00004_00008' order represents '5' with '3016'
-3014 3016 0
c Var 'max_left_00002_00004_00008' direct represents '5' with '3017'
3014 -3016 3017 0
-3017 3016 0
-3017 -3014 0
c Var 'max_left_00002_00004_00008' order represents '6' with '3018'
-3016 3018 0
c Var 'max_left_00002_00004_00008' direct represents '6' with '3019'
3016 -3018 3019 0
-3019 3018 0
-3019 -3016 0
c Var 'max_left_00002_00004_00008' order represents '7' with '3020'
-3018 3020 0
c Var 'max_left_00002_00004_00008' direct represents '7' with '3021'
3018 -3020 3021 0
-3021 3020 0
-3021 -3018 0
c Var 'max_left_00002_00004_00008' order represents '8' with '3022'
-3020 3022 0
c Var 'max_left_00002_00004_00008' direct represents '8' with '3023'
3020 -3022 3023 0
-3023 3022 0
-3023 -3020 0
c Var 'max_left_00002_00004_00008' direct represents '9' with '-3022'
3009 3011 3013 3015 3017 3019 3021 3023 -3022 0
c Encoding variable: max_left_00002_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00004_00009' order represents '1' with '3024'
c Var 'max_left_00002_00004_00009' direct represents '1' with '3024'
c Var 'max_left_00002_00004_00009' order represents '2' with '3025'
-3024 3025 0
c Var 'max_left_00002_00004_00009' direct represents '2' with '3026'
3024 -3025 3026 0
-3026 3025 0
-3026 -3024 0
c Var 'max_left_00002_00004_00009' order represents '3' with '3027'
-3025 3027 0
c Var 'max_left_00002_00004_00009' direct represents '3' with '3028'
3025 -3027 3028 0
-3028 3027 0
-3028 -3025 0
c Var 'max_left_00002_00004_00009' order represents '4' with '3029'
-3027 3029 0
c Var 'max_left_00002_00004_00009' direct represents '4' with '3030'
3027 -3029 3030 0
-3030 3029 0
-3030 -3027 0
c Var 'max_left_00002_00004_00009' order represents '5' with '3031'
-3029 3031 0
c Var 'max_left_00002_00004_00009' direct represents '5' with '3032'
3029 -3031 3032 0
-3032 3031 0
-3032 -3029 0
c Var 'max_left_00002_00004_00009' order represents '6' with '3033'
-3031 3033 0
c Var 'max_left_00002_00004_00009' direct represents '6' with '3034'
3031 -3033 3034 0
-3034 3033 0
-3034 -3031 0
c Var 'max_left_00002_00004_00009' order represents '7' with '3035'
-3033 3035 0
c Var 'max_left_00002_00004_00009' direct represents '7' with '3036'
3033 -3035 3036 0
-3036 3035 0
-3036 -3033 0
c Var 'max_left_00002_00004_00009' order represents '8' with '3037'
-3035 3037 0
c Var 'max_left_00002_00004_00009' direct represents '8' with '3038'
3035 -3037 3038 0
-3038 3037 0
-3038 -3035 0
c Var 'max_left_00002_00004_00009' direct represents '9' with '-3037'
3024 3026 3028 3030 3032 3034 3036 3038 -3037 0
c Encoding variable: max_left_00002_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00005_00000' direct represents '0' with '3039'
3039 0
c Encoding variable: max_left_00002_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00001' order represents '1' with '3040'
c Var 'max_left_00002_00005_00001' direct represents '1' with '3040'
c Var 'max_left_00002_00005_00001' order represents '2' with '3041'
-3040 3041 0
c Var 'max_left_00002_00005_00001' direct represents '2' with '3042'
3040 -3041 3042 0
-3042 3041 0
-3042 -3040 0
c Var 'max_left_00002_00005_00001' order represents '3' with '3043'
-3041 3043 0
c Var 'max_left_00002_00005_00001' direct represents '3' with '3044'
3041 -3043 3044 0
-3044 3043 0
-3044 -3041 0
c Var 'max_left_00002_00005_00001' order represents '4' with '3045'
-3043 3045 0
c Var 'max_left_00002_00005_00001' direct represents '4' with '3046'
3043 -3045 3046 0
-3046 3045 0
-3046 -3043 0
c Var 'max_left_00002_00005_00001' order represents '5' with '3047'
-3045 3047 0
c Var 'max_left_00002_00005_00001' direct represents '5' with '3048'
3045 -3047 3048 0
-3048 3047 0
-3048 -3045 0
c Var 'max_left_00002_00005_00001' order represents '6' with '3049'
-3047 3049 0
c Var 'max_left_00002_00005_00001' direct represents '6' with '3050'
3047 -3049 3050 0
-3050 3049 0
-3050 -3047 0
c Var 'max_left_00002_00005_00001' order represents '7' with '3051'
-3049 3051 0
c Var 'max_left_00002_00005_00001' direct represents '7' with '3052'
3049 -3051 3052 0
-3052 3051 0
-3052 -3049 0
c Var 'max_left_00002_00005_00001' order represents '8' with '3053'
-3051 3053 0
c Var 'max_left_00002_00005_00001' direct represents '8' with '3054'
3051 -3053 3054 0
-3054 3053 0
-3054 -3051 0
c Var 'max_left_00002_00005_00001' direct represents '9' with '-3053'
3040 3042 3044 3046 3048 3050 3052 3054 -3053 0
c Encoding variable: max_left_00002_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00002' order represents '1' with '3055'
c Var 'max_left_00002_00005_00002' direct represents '1' with '3055'
c Var 'max_left_00002_00005_00002' order represents '2' with '3056'
-3055 3056 0
c Var 'max_left_00002_00005_00002' direct represents '2' with '3057'
3055 -3056 3057 0
-3057 3056 0
-3057 -3055 0
c Var 'max_left_00002_00005_00002' order represents '3' with '3058'
-3056 3058 0
c Var 'max_left_00002_00005_00002' direct represents '3' with '3059'
3056 -3058 3059 0
-3059 3058 0
-3059 -3056 0
c Var 'max_left_00002_00005_00002' order represents '4' with '3060'
-3058 3060 0
c Var 'max_left_00002_00005_00002' direct represents '4' with '3061'
3058 -3060 3061 0
-3061 3060 0
-3061 -3058 0
c Var 'max_left_00002_00005_00002' order represents '5' with '3062'
-3060 3062 0
c Var 'max_left_00002_00005_00002' direct represents '5' with '3063'
3060 -3062 3063 0
-3063 3062 0
-3063 -3060 0
c Var 'max_left_00002_00005_00002' order represents '6' with '3064'
-3062 3064 0
c Var 'max_left_00002_00005_00002' direct represents '6' with '3065'
3062 -3064 3065 0
-3065 3064 0
-3065 -3062 0
c Var 'max_left_00002_00005_00002' order represents '7' with '3066'
-3064 3066 0
c Var 'max_left_00002_00005_00002' direct represents '7' with '3067'
3064 -3066 3067 0
-3067 3066 0
-3067 -3064 0
c Var 'max_left_00002_00005_00002' order represents '8' with '3068'
-3066 3068 0
c Var 'max_left_00002_00005_00002' direct represents '8' with '3069'
3066 -3068 3069 0
-3069 3068 0
-3069 -3066 0
c Var 'max_left_00002_00005_00002' direct represents '9' with '-3068'
3055 3057 3059 3061 3063 3065 3067 3069 -3068 0
c Encoding variable: max_left_00002_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00003' order represents '1' with '3070'
c Var 'max_left_00002_00005_00003' direct represents '1' with '3070'
c Var 'max_left_00002_00005_00003' order represents '2' with '3071'
-3070 3071 0
c Var 'max_left_00002_00005_00003' direct represents '2' with '3072'
3070 -3071 3072 0
-3072 3071 0
-3072 -3070 0
c Var 'max_left_00002_00005_00003' order represents '3' with '3073'
-3071 3073 0
c Var 'max_left_00002_00005_00003' direct represents '3' with '3074'
3071 -3073 3074 0
-3074 3073 0
-3074 -3071 0
c Var 'max_left_00002_00005_00003' order represents '4' with '3075'
-3073 3075 0
c Var 'max_left_00002_00005_00003' direct represents '4' with '3076'
3073 -3075 3076 0
-3076 3075 0
-3076 -3073 0
c Var 'max_left_00002_00005_00003' order represents '5' with '3077'
-3075 3077 0
c Var 'max_left_00002_00005_00003' direct represents '5' with '3078'
3075 -3077 3078 0
-3078 3077 0
-3078 -3075 0
c Var 'max_left_00002_00005_00003' order represents '6' with '3079'
-3077 3079 0
c Var 'max_left_00002_00005_00003' direct represents '6' with '3080'
3077 -3079 3080 0
-3080 3079 0
-3080 -3077 0
c Var 'max_left_00002_00005_00003' order represents '7' with '3081'
-3079 3081 0
c Var 'max_left_00002_00005_00003' direct represents '7' with '3082'
3079 -3081 3082 0
-3082 3081 0
-3082 -3079 0
c Var 'max_left_00002_00005_00003' order represents '8' with '3083'
-3081 3083 0
c Var 'max_left_00002_00005_00003' direct represents '8' with '3084'
3081 -3083 3084 0
-3084 3083 0
-3084 -3081 0
c Var 'max_left_00002_00005_00003' direct represents '9' with '-3083'
3070 3072 3074 3076 3078 3080 3082 3084 -3083 0
c Encoding variable: max_left_00002_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00004' order represents '1' with '3085'
c Var 'max_left_00002_00005_00004' direct represents '1' with '3085'
c Var 'max_left_00002_00005_00004' order represents '2' with '3086'
-3085 3086 0
c Var 'max_left_00002_00005_00004' direct represents '2' with '3087'
3085 -3086 3087 0
-3087 3086 0
-3087 -3085 0
c Var 'max_left_00002_00005_00004' order represents '3' with '3088'
-3086 3088 0
c Var 'max_left_00002_00005_00004' direct represents '3' with '3089'
3086 -3088 3089 0
-3089 3088 0
-3089 -3086 0
c Var 'max_left_00002_00005_00004' order represents '4' with '3090'
-3088 3090 0
c Var 'max_left_00002_00005_00004' direct represents '4' with '3091'
3088 -3090 3091 0
-3091 3090 0
-3091 -3088 0
c Var 'max_left_00002_00005_00004' order represents '5' with '3092'
-3090 3092 0
c Var 'max_left_00002_00005_00004' direct represents '5' with '3093'
3090 -3092 3093 0
-3093 3092 0
-3093 -3090 0
c Var 'max_left_00002_00005_00004' order represents '6' with '3094'
-3092 3094 0
c Var 'max_left_00002_00005_00004' direct represents '6' with '3095'
3092 -3094 3095 0
-3095 3094 0
-3095 -3092 0
c Var 'max_left_00002_00005_00004' order represents '7' with '3096'
-3094 3096 0
c Var 'max_left_00002_00005_00004' direct represents '7' with '3097'
3094 -3096 3097 0
-3097 3096 0
-3097 -3094 0
c Var 'max_left_00002_00005_00004' order represents '8' with '3098'
-3096 3098 0
c Var 'max_left_00002_00005_00004' direct represents '8' with '3099'
3096 -3098 3099 0
-3099 3098 0
-3099 -3096 0
c Var 'max_left_00002_00005_00004' direct represents '9' with '-3098'
3085 3087 3089 3091 3093 3095 3097 3099 -3098 0
c Encoding variable: max_left_00002_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00005' order represents '1' with '3100'
c Var 'max_left_00002_00005_00005' direct represents '1' with '3100'
c Var 'max_left_00002_00005_00005' order represents '2' with '3101'
-3100 3101 0
c Var 'max_left_00002_00005_00005' direct represents '2' with '3102'
3100 -3101 3102 0
-3102 3101 0
-3102 -3100 0
c Var 'max_left_00002_00005_00005' order represents '3' with '3103'
-3101 3103 0
c Var 'max_left_00002_00005_00005' direct represents '3' with '3104'
3101 -3103 3104 0
-3104 3103 0
-3104 -3101 0
c Var 'max_left_00002_00005_00005' order represents '4' with '3105'
-3103 3105 0
c Var 'max_left_00002_00005_00005' direct represents '4' with '3106'
3103 -3105 3106 0
-3106 3105 0
-3106 -3103 0
c Var 'max_left_00002_00005_00005' order represents '5' with '3107'
-3105 3107 0
c Var 'max_left_00002_00005_00005' direct represents '5' with '3108'
3105 -3107 3108 0
-3108 3107 0
-3108 -3105 0
c Var 'max_left_00002_00005_00005' order represents '6' with '3109'
-3107 3109 0
c Var 'max_left_00002_00005_00005' direct represents '6' with '3110'
3107 -3109 3110 0
-3110 3109 0
-3110 -3107 0
c Var 'max_left_00002_00005_00005' order represents '7' with '3111'
-3109 3111 0
c Var 'max_left_00002_00005_00005' direct represents '7' with '3112'
3109 -3111 3112 0
-3112 3111 0
-3112 -3109 0
c Var 'max_left_00002_00005_00005' order represents '8' with '3113'
-3111 3113 0
c Var 'max_left_00002_00005_00005' direct represents '8' with '3114'
3111 -3113 3114 0
-3114 3113 0
-3114 -3111 0
c Var 'max_left_00002_00005_00005' direct represents '9' with '-3113'
3100 3102 3104 3106 3108 3110 3112 3114 -3113 0
c Encoding variable: max_left_00002_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00006' order represents '1' with '3115'
c Var 'max_left_00002_00005_00006' direct represents '1' with '3115'
c Var 'max_left_00002_00005_00006' order represents '2' with '3116'
-3115 3116 0
c Var 'max_left_00002_00005_00006' direct represents '2' with '3117'
3115 -3116 3117 0
-3117 3116 0
-3117 -3115 0
c Var 'max_left_00002_00005_00006' order represents '3' with '3118'
-3116 3118 0
c Var 'max_left_00002_00005_00006' direct represents '3' with '3119'
3116 -3118 3119 0
-3119 3118 0
-3119 -3116 0
c Var 'max_left_00002_00005_00006' order represents '4' with '3120'
-3118 3120 0
c Var 'max_left_00002_00005_00006' direct represents '4' with '3121'
3118 -3120 3121 0
-3121 3120 0
-3121 -3118 0
c Var 'max_left_00002_00005_00006' order represents '5' with '3122'
-3120 3122 0
c Var 'max_left_00002_00005_00006' direct represents '5' with '3123'
3120 -3122 3123 0
-3123 3122 0
-3123 -3120 0
c Var 'max_left_00002_00005_00006' order represents '6' with '3124'
-3122 3124 0
c Var 'max_left_00002_00005_00006' direct represents '6' with '3125'
3122 -3124 3125 0
-3125 3124 0
-3125 -3122 0
c Var 'max_left_00002_00005_00006' order represents '7' with '3126'
-3124 3126 0
c Var 'max_left_00002_00005_00006' direct represents '7' with '3127'
3124 -3126 3127 0
-3127 3126 0
-3127 -3124 0
c Var 'max_left_00002_00005_00006' order represents '8' with '3128'
-3126 3128 0
c Var 'max_left_00002_00005_00006' direct represents '8' with '3129'
3126 -3128 3129 0
-3129 3128 0
-3129 -3126 0
c Var 'max_left_00002_00005_00006' direct represents '9' with '-3128'
3115 3117 3119 3121 3123 3125 3127 3129 -3128 0
c Encoding variable: max_left_00002_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00007' order represents '1' with '3130'
c Var 'max_left_00002_00005_00007' direct represents '1' with '3130'
c Var 'max_left_00002_00005_00007' order represents '2' with '3131'
-3130 3131 0
c Var 'max_left_00002_00005_00007' direct represents '2' with '3132'
3130 -3131 3132 0
-3132 3131 0
-3132 -3130 0
c Var 'max_left_00002_00005_00007' order represents '3' with '3133'
-3131 3133 0
c Var 'max_left_00002_00005_00007' direct represents '3' with '3134'
3131 -3133 3134 0
-3134 3133 0
-3134 -3131 0
c Var 'max_left_00002_00005_00007' order represents '4' with '3135'
-3133 3135 0
c Var 'max_left_00002_00005_00007' direct represents '4' with '3136'
3133 -3135 3136 0
-3136 3135 0
-3136 -3133 0
c Var 'max_left_00002_00005_00007' order represents '5' with '3137'
-3135 3137 0
c Var 'max_left_00002_00005_00007' direct represents '5' with '3138'
3135 -3137 3138 0
-3138 3137 0
-3138 -3135 0
c Var 'max_left_00002_00005_00007' order represents '6' with '3139'
-3137 3139 0
c Var 'max_left_00002_00005_00007' direct represents '6' with '3140'
3137 -3139 3140 0
-3140 3139 0
-3140 -3137 0
c Var 'max_left_00002_00005_00007' order represents '7' with '3141'
-3139 3141 0
c Var 'max_left_00002_00005_00007' direct represents '7' with '3142'
3139 -3141 3142 0
-3142 3141 0
-3142 -3139 0
c Var 'max_left_00002_00005_00007' order represents '8' with '3143'
-3141 3143 0
c Var 'max_left_00002_00005_00007' direct represents '8' with '3144'
3141 -3143 3144 0
-3144 3143 0
-3144 -3141 0
c Var 'max_left_00002_00005_00007' direct represents '9' with '-3143'
3130 3132 3134 3136 3138 3140 3142 3144 -3143 0
c Encoding variable: max_left_00002_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00008' order represents '1' with '3145'
c Var 'max_left_00002_00005_00008' direct represents '1' with '3145'
c Var 'max_left_00002_00005_00008' order represents '2' with '3146'
-3145 3146 0
c Var 'max_left_00002_00005_00008' direct represents '2' with '3147'
3145 -3146 3147 0
-3147 3146 0
-3147 -3145 0
c Var 'max_left_00002_00005_00008' order represents '3' with '3148'
-3146 3148 0
c Var 'max_left_00002_00005_00008' direct represents '3' with '3149'
3146 -3148 3149 0
-3149 3148 0
-3149 -3146 0
c Var 'max_left_00002_00005_00008' order represents '4' with '3150'
-3148 3150 0
c Var 'max_left_00002_00005_00008' direct represents '4' with '3151'
3148 -3150 3151 0
-3151 3150 0
-3151 -3148 0
c Var 'max_left_00002_00005_00008' order represents '5' with '3152'
-3150 3152 0
c Var 'max_left_00002_00005_00008' direct represents '5' with '3153'
3150 -3152 3153 0
-3153 3152 0
-3153 -3150 0
c Var 'max_left_00002_00005_00008' order represents '6' with '3154'
-3152 3154 0
c Var 'max_left_00002_00005_00008' direct represents '6' with '3155'
3152 -3154 3155 0
-3155 3154 0
-3155 -3152 0
c Var 'max_left_00002_00005_00008' order represents '7' with '3156'
-3154 3156 0
c Var 'max_left_00002_00005_00008' direct represents '7' with '3157'
3154 -3156 3157 0
-3157 3156 0
-3157 -3154 0
c Var 'max_left_00002_00005_00008' order represents '8' with '3158'
-3156 3158 0
c Var 'max_left_00002_00005_00008' direct represents '8' with '3159'
3156 -3158 3159 0
-3159 3158 0
-3159 -3156 0
c Var 'max_left_00002_00005_00008' direct represents '9' with '-3158'
3145 3147 3149 3151 3153 3155 3157 3159 -3158 0
c Encoding variable: max_left_00002_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00005_00009' order represents '1' with '3160'
c Var 'max_left_00002_00005_00009' direct represents '1' with '3160'
c Var 'max_left_00002_00005_00009' order represents '2' with '3161'
-3160 3161 0
c Var 'max_left_00002_00005_00009' direct represents '2' with '3162'
3160 -3161 3162 0
-3162 3161 0
-3162 -3160 0
c Var 'max_left_00002_00005_00009' order represents '3' with '3163'
-3161 3163 0
c Var 'max_left_00002_00005_00009' direct represents '3' with '3164'
3161 -3163 3164 0
-3164 3163 0
-3164 -3161 0
c Var 'max_left_00002_00005_00009' order represents '4' with '3165'
-3163 3165 0
c Var 'max_left_00002_00005_00009' direct represents '4' with '3166'
3163 -3165 3166 0
-3166 3165 0
-3166 -3163 0
c Var 'max_left_00002_00005_00009' order represents '5' with '3167'
-3165 3167 0
c Var 'max_left_00002_00005_00009' direct represents '5' with '3168'
3165 -3167 3168 0
-3168 3167 0
-3168 -3165 0
c Var 'max_left_00002_00005_00009' order represents '6' with '3169'
-3167 3169 0
c Var 'max_left_00002_00005_00009' direct represents '6' with '3170'
3167 -3169 3170 0
-3170 3169 0
-3170 -3167 0
c Var 'max_left_00002_00005_00009' order represents '7' with '3171'
-3169 3171 0
c Var 'max_left_00002_00005_00009' direct represents '7' with '3172'
3169 -3171 3172 0
-3172 3171 0
-3172 -3169 0
c Var 'max_left_00002_00005_00009' order represents '8' with '3173'
-3171 3173 0
c Var 'max_left_00002_00005_00009' direct represents '8' with '3174'
3171 -3173 3174 0
-3174 3173 0
-3174 -3171 0
c Var 'max_left_00002_00005_00009' direct represents '9' with '-3173'
3160 3162 3164 3166 3168 3170 3172 3174 -3173 0
c Encoding variable: max_left_00002_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00006_00000' direct represents '0' with '3175'
3175 0
c Encoding variable: max_left_00002_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00001' order represents '1' with '3176'
c Var 'max_left_00002_00006_00001' direct represents '1' with '3176'
c Var 'max_left_00002_00006_00001' order represents '2' with '3177'
-3176 3177 0
c Var 'max_left_00002_00006_00001' direct represents '2' with '3178'
3176 -3177 3178 0
-3178 3177 0
-3178 -3176 0
c Var 'max_left_00002_00006_00001' order represents '3' with '3179'
-3177 3179 0
c Var 'max_left_00002_00006_00001' direct represents '3' with '3180'
3177 -3179 3180 0
-3180 3179 0
-3180 -3177 0
c Var 'max_left_00002_00006_00001' order represents '4' with '3181'
-3179 3181 0
c Var 'max_left_00002_00006_00001' direct represents '4' with '3182'
3179 -3181 3182 0
-3182 3181 0
-3182 -3179 0
c Var 'max_left_00002_00006_00001' order represents '5' with '3183'
-3181 3183 0
c Var 'max_left_00002_00006_00001' direct represents '5' with '3184'
3181 -3183 3184 0
-3184 3183 0
-3184 -3181 0
c Var 'max_left_00002_00006_00001' order represents '6' with '3185'
-3183 3185 0
c Var 'max_left_00002_00006_00001' direct represents '6' with '3186'
3183 -3185 3186 0
-3186 3185 0
-3186 -3183 0
c Var 'max_left_00002_00006_00001' order represents '7' with '3187'
-3185 3187 0
c Var 'max_left_00002_00006_00001' direct represents '7' with '3188'
3185 -3187 3188 0
-3188 3187 0
-3188 -3185 0
c Var 'max_left_00002_00006_00001' order represents '8' with '3189'
-3187 3189 0
c Var 'max_left_00002_00006_00001' direct represents '8' with '3190'
3187 -3189 3190 0
-3190 3189 0
-3190 -3187 0
c Var 'max_left_00002_00006_00001' direct represents '9' with '-3189'
3176 3178 3180 3182 3184 3186 3188 3190 -3189 0
c Encoding variable: max_left_00002_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00002' order represents '1' with '3191'
c Var 'max_left_00002_00006_00002' direct represents '1' with '3191'
c Var 'max_left_00002_00006_00002' order represents '2' with '3192'
-3191 3192 0
c Var 'max_left_00002_00006_00002' direct represents '2' with '3193'
3191 -3192 3193 0
-3193 3192 0
-3193 -3191 0
c Var 'max_left_00002_00006_00002' order represents '3' with '3194'
-3192 3194 0
c Var 'max_left_00002_00006_00002' direct represents '3' with '3195'
3192 -3194 3195 0
-3195 3194 0
-3195 -3192 0
c Var 'max_left_00002_00006_00002' order represents '4' with '3196'
-3194 3196 0
c Var 'max_left_00002_00006_00002' direct represents '4' with '3197'
3194 -3196 3197 0
-3197 3196 0
-3197 -3194 0
c Var 'max_left_00002_00006_00002' order represents '5' with '3198'
-3196 3198 0
c Var 'max_left_00002_00006_00002' direct represents '5' with '3199'
3196 -3198 3199 0
-3199 3198 0
-3199 -3196 0
c Var 'max_left_00002_00006_00002' order represents '6' with '3200'
-3198 3200 0
c Var 'max_left_00002_00006_00002' direct represents '6' with '3201'
3198 -3200 3201 0
-3201 3200 0
-3201 -3198 0
c Var 'max_left_00002_00006_00002' order represents '7' with '3202'
-3200 3202 0
c Var 'max_left_00002_00006_00002' direct represents '7' with '3203'
3200 -3202 3203 0
-3203 3202 0
-3203 -3200 0
c Var 'max_left_00002_00006_00002' order represents '8' with '3204'
-3202 3204 0
c Var 'max_left_00002_00006_00002' direct represents '8' with '3205'
3202 -3204 3205 0
-3205 3204 0
-3205 -3202 0
c Var 'max_left_00002_00006_00002' direct represents '9' with '-3204'
3191 3193 3195 3197 3199 3201 3203 3205 -3204 0
c Encoding variable: max_left_00002_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00003' order represents '1' with '3206'
c Var 'max_left_00002_00006_00003' direct represents '1' with '3206'
c Var 'max_left_00002_00006_00003' order represents '2' with '3207'
-3206 3207 0
c Var 'max_left_00002_00006_00003' direct represents '2' with '3208'
3206 -3207 3208 0
-3208 3207 0
-3208 -3206 0
c Var 'max_left_00002_00006_00003' order represents '3' with '3209'
-3207 3209 0
c Var 'max_left_00002_00006_00003' direct represents '3' with '3210'
3207 -3209 3210 0
-3210 3209 0
-3210 -3207 0
c Var 'max_left_00002_00006_00003' order represents '4' with '3211'
-3209 3211 0
c Var 'max_left_00002_00006_00003' direct represents '4' with '3212'
3209 -3211 3212 0
-3212 3211 0
-3212 -3209 0
c Var 'max_left_00002_00006_00003' order represents '5' with '3213'
-3211 3213 0
c Var 'max_left_00002_00006_00003' direct represents '5' with '3214'
3211 -3213 3214 0
-3214 3213 0
-3214 -3211 0
c Var 'max_left_00002_00006_00003' order represents '6' with '3215'
-3213 3215 0
c Var 'max_left_00002_00006_00003' direct represents '6' with '3216'
3213 -3215 3216 0
-3216 3215 0
-3216 -3213 0
c Var 'max_left_00002_00006_00003' order represents '7' with '3217'
-3215 3217 0
c Var 'max_left_00002_00006_00003' direct represents '7' with '3218'
3215 -3217 3218 0
-3218 3217 0
-3218 -3215 0
c Var 'max_left_00002_00006_00003' order represents '8' with '3219'
-3217 3219 0
c Var 'max_left_00002_00006_00003' direct represents '8' with '3220'
3217 -3219 3220 0
-3220 3219 0
-3220 -3217 0
c Var 'max_left_00002_00006_00003' direct represents '9' with '-3219'
3206 3208 3210 3212 3214 3216 3218 3220 -3219 0
c Encoding variable: max_left_00002_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00004' order represents '1' with '3221'
c Var 'max_left_00002_00006_00004' direct represents '1' with '3221'
c Var 'max_left_00002_00006_00004' order represents '2' with '3222'
-3221 3222 0
c Var 'max_left_00002_00006_00004' direct represents '2' with '3223'
3221 -3222 3223 0
-3223 3222 0
-3223 -3221 0
c Var 'max_left_00002_00006_00004' order represents '3' with '3224'
-3222 3224 0
c Var 'max_left_00002_00006_00004' direct represents '3' with '3225'
3222 -3224 3225 0
-3225 3224 0
-3225 -3222 0
c Var 'max_left_00002_00006_00004' order represents '4' with '3226'
-3224 3226 0
c Var 'max_left_00002_00006_00004' direct represents '4' with '3227'
3224 -3226 3227 0
-3227 3226 0
-3227 -3224 0
c Var 'max_left_00002_00006_00004' order represents '5' with '3228'
-3226 3228 0
c Var 'max_left_00002_00006_00004' direct represents '5' with '3229'
3226 -3228 3229 0
-3229 3228 0
-3229 -3226 0
c Var 'max_left_00002_00006_00004' order represents '6' with '3230'
-3228 3230 0
c Var 'max_left_00002_00006_00004' direct represents '6' with '3231'
3228 -3230 3231 0
-3231 3230 0
-3231 -3228 0
c Var 'max_left_00002_00006_00004' order represents '7' with '3232'
-3230 3232 0
c Var 'max_left_00002_00006_00004' direct represents '7' with '3233'
3230 -3232 3233 0
-3233 3232 0
-3233 -3230 0
c Var 'max_left_00002_00006_00004' order represents '8' with '3234'
-3232 3234 0
c Var 'max_left_00002_00006_00004' direct represents '8' with '3235'
3232 -3234 3235 0
-3235 3234 0
-3235 -3232 0
c Var 'max_left_00002_00006_00004' direct represents '9' with '-3234'
3221 3223 3225 3227 3229 3231 3233 3235 -3234 0
c Encoding variable: max_left_00002_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00005' order represents '1' with '3236'
c Var 'max_left_00002_00006_00005' direct represents '1' with '3236'
c Var 'max_left_00002_00006_00005' order represents '2' with '3237'
-3236 3237 0
c Var 'max_left_00002_00006_00005' direct represents '2' with '3238'
3236 -3237 3238 0
-3238 3237 0
-3238 -3236 0
c Var 'max_left_00002_00006_00005' order represents '3' with '3239'
-3237 3239 0
c Var 'max_left_00002_00006_00005' direct represents '3' with '3240'
3237 -3239 3240 0
-3240 3239 0
-3240 -3237 0
c Var 'max_left_00002_00006_00005' order represents '4' with '3241'
-3239 3241 0
c Var 'max_left_00002_00006_00005' direct represents '4' with '3242'
3239 -3241 3242 0
-3242 3241 0
-3242 -3239 0
c Var 'max_left_00002_00006_00005' order represents '5' with '3243'
-3241 3243 0
c Var 'max_left_00002_00006_00005' direct represents '5' with '3244'
3241 -3243 3244 0
-3244 3243 0
-3244 -3241 0
c Var 'max_left_00002_00006_00005' order represents '6' with '3245'
-3243 3245 0
c Var 'max_left_00002_00006_00005' direct represents '6' with '3246'
3243 -3245 3246 0
-3246 3245 0
-3246 -3243 0
c Var 'max_left_00002_00006_00005' order represents '7' with '3247'
-3245 3247 0
c Var 'max_left_00002_00006_00005' direct represents '7' with '3248'
3245 -3247 3248 0
-3248 3247 0
-3248 -3245 0
c Var 'max_left_00002_00006_00005' order represents '8' with '3249'
-3247 3249 0
c Var 'max_left_00002_00006_00005' direct represents '8' with '3250'
3247 -3249 3250 0
-3250 3249 0
-3250 -3247 0
c Var 'max_left_00002_00006_00005' direct represents '9' with '-3249'
3236 3238 3240 3242 3244 3246 3248 3250 -3249 0
c Encoding variable: max_left_00002_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00006' order represents '1' with '3251'
c Var 'max_left_00002_00006_00006' direct represents '1' with '3251'
c Var 'max_left_00002_00006_00006' order represents '2' with '3252'
-3251 3252 0
c Var 'max_left_00002_00006_00006' direct represents '2' with '3253'
3251 -3252 3253 0
-3253 3252 0
-3253 -3251 0
c Var 'max_left_00002_00006_00006' order represents '3' with '3254'
-3252 3254 0
c Var 'max_left_00002_00006_00006' direct represents '3' with '3255'
3252 -3254 3255 0
-3255 3254 0
-3255 -3252 0
c Var 'max_left_00002_00006_00006' order represents '4' with '3256'
-3254 3256 0
c Var 'max_left_00002_00006_00006' direct represents '4' with '3257'
3254 -3256 3257 0
-3257 3256 0
-3257 -3254 0
c Var 'max_left_00002_00006_00006' order represents '5' with '3258'
-3256 3258 0
c Var 'max_left_00002_00006_00006' direct represents '5' with '3259'
3256 -3258 3259 0
-3259 3258 0
-3259 -3256 0
c Var 'max_left_00002_00006_00006' order represents '6' with '3260'
-3258 3260 0
c Var 'max_left_00002_00006_00006' direct represents '6' with '3261'
3258 -3260 3261 0
-3261 3260 0
-3261 -3258 0
c Var 'max_left_00002_00006_00006' order represents '7' with '3262'
-3260 3262 0
c Var 'max_left_00002_00006_00006' direct represents '7' with '3263'
3260 -3262 3263 0
-3263 3262 0
-3263 -3260 0
c Var 'max_left_00002_00006_00006' order represents '8' with '3264'
-3262 3264 0
c Var 'max_left_00002_00006_00006' direct represents '8' with '3265'
3262 -3264 3265 0
-3265 3264 0
-3265 -3262 0
c Var 'max_left_00002_00006_00006' direct represents '9' with '-3264'
3251 3253 3255 3257 3259 3261 3263 3265 -3264 0
c Encoding variable: max_left_00002_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00007' order represents '1' with '3266'
c Var 'max_left_00002_00006_00007' direct represents '1' with '3266'
c Var 'max_left_00002_00006_00007' order represents '2' with '3267'
-3266 3267 0
c Var 'max_left_00002_00006_00007' direct represents '2' with '3268'
3266 -3267 3268 0
-3268 3267 0
-3268 -3266 0
c Var 'max_left_00002_00006_00007' order represents '3' with '3269'
-3267 3269 0
c Var 'max_left_00002_00006_00007' direct represents '3' with '3270'
3267 -3269 3270 0
-3270 3269 0
-3270 -3267 0
c Var 'max_left_00002_00006_00007' order represents '4' with '3271'
-3269 3271 0
c Var 'max_left_00002_00006_00007' direct represents '4' with '3272'
3269 -3271 3272 0
-3272 3271 0
-3272 -3269 0
c Var 'max_left_00002_00006_00007' order represents '5' with '3273'
-3271 3273 0
c Var 'max_left_00002_00006_00007' direct represents '5' with '3274'
3271 -3273 3274 0
-3274 3273 0
-3274 -3271 0
c Var 'max_left_00002_00006_00007' order represents '6' with '3275'
-3273 3275 0
c Var 'max_left_00002_00006_00007' direct represents '6' with '3276'
3273 -3275 3276 0
-3276 3275 0
-3276 -3273 0
c Var 'max_left_00002_00006_00007' order represents '7' with '3277'
-3275 3277 0
c Var 'max_left_00002_00006_00007' direct represents '7' with '3278'
3275 -3277 3278 0
-3278 3277 0
-3278 -3275 0
c Var 'max_left_00002_00006_00007' order represents '8' with '3279'
-3277 3279 0
c Var 'max_left_00002_00006_00007' direct represents '8' with '3280'
3277 -3279 3280 0
-3280 3279 0
-3280 -3277 0
c Var 'max_left_00002_00006_00007' direct represents '9' with '-3279'
3266 3268 3270 3272 3274 3276 3278 3280 -3279 0
c Encoding variable: max_left_00002_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00008' order represents '1' with '3281'
c Var 'max_left_00002_00006_00008' direct represents '1' with '3281'
c Var 'max_left_00002_00006_00008' order represents '2' with '3282'
-3281 3282 0
c Var 'max_left_00002_00006_00008' direct represents '2' with '3283'
3281 -3282 3283 0
-3283 3282 0
-3283 -3281 0
c Var 'max_left_00002_00006_00008' order represents '3' with '3284'
-3282 3284 0
c Var 'max_left_00002_00006_00008' direct represents '3' with '3285'
3282 -3284 3285 0
-3285 3284 0
-3285 -3282 0
c Var 'max_left_00002_00006_00008' order represents '4' with '3286'
-3284 3286 0
c Var 'max_left_00002_00006_00008' direct represents '4' with '3287'
3284 -3286 3287 0
-3287 3286 0
-3287 -3284 0
c Var 'max_left_00002_00006_00008' order represents '5' with '3288'
-3286 3288 0
c Var 'max_left_00002_00006_00008' direct represents '5' with '3289'
3286 -3288 3289 0
-3289 3288 0
-3289 -3286 0
c Var 'max_left_00002_00006_00008' order represents '6' with '3290'
-3288 3290 0
c Var 'max_left_00002_00006_00008' direct represents '6' with '3291'
3288 -3290 3291 0
-3291 3290 0
-3291 -3288 0
c Var 'max_left_00002_00006_00008' order represents '7' with '3292'
-3290 3292 0
c Var 'max_left_00002_00006_00008' direct represents '7' with '3293'
3290 -3292 3293 0
-3293 3292 0
-3293 -3290 0
c Var 'max_left_00002_00006_00008' order represents '8' with '3294'
-3292 3294 0
c Var 'max_left_00002_00006_00008' direct represents '8' with '3295'
3292 -3294 3295 0
-3295 3294 0
-3295 -3292 0
c Var 'max_left_00002_00006_00008' direct represents '9' with '-3294'
3281 3283 3285 3287 3289 3291 3293 3295 -3294 0
c Encoding variable: max_left_00002_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00006_00009' order represents '1' with '3296'
c Var 'max_left_00002_00006_00009' direct represents '1' with '3296'
c Var 'max_left_00002_00006_00009' order represents '2' with '3297'
-3296 3297 0
c Var 'max_left_00002_00006_00009' direct represents '2' with '3298'
3296 -3297 3298 0
-3298 3297 0
-3298 -3296 0
c Var 'max_left_00002_00006_00009' order represents '3' with '3299'
-3297 3299 0
c Var 'max_left_00002_00006_00009' direct represents '3' with '3300'
3297 -3299 3300 0
-3300 3299 0
-3300 -3297 0
c Var 'max_left_00002_00006_00009' order represents '4' with '3301'
-3299 3301 0
c Var 'max_left_00002_00006_00009' direct represents '4' with '3302'
3299 -3301 3302 0
-3302 3301 0
-3302 -3299 0
c Var 'max_left_00002_00006_00009' order represents '5' with '3303'
-3301 3303 0
c Var 'max_left_00002_00006_00009' direct represents '5' with '3304'
3301 -3303 3304 0
-3304 3303 0
-3304 -3301 0
c Var 'max_left_00002_00006_00009' order represents '6' with '3305'
-3303 3305 0
c Var 'max_left_00002_00006_00009' direct represents '6' with '3306'
3303 -3305 3306 0
-3306 3305 0
-3306 -3303 0
c Var 'max_left_00002_00006_00009' order represents '7' with '3307'
-3305 3307 0
c Var 'max_left_00002_00006_00009' direct represents '7' with '3308'
3305 -3307 3308 0
-3308 3307 0
-3308 -3305 0
c Var 'max_left_00002_00006_00009' order represents '8' with '3309'
-3307 3309 0
c Var 'max_left_00002_00006_00009' direct represents '8' with '3310'
3307 -3309 3310 0
-3310 3309 0
-3310 -3307 0
c Var 'max_left_00002_00006_00009' direct represents '9' with '-3309'
3296 3298 3300 3302 3304 3306 3308 3310 -3309 0
c Encoding variable: max_left_00002_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00007_00000' direct represents '0' with '3311'
3311 0
c Encoding variable: max_left_00002_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00001' order represents '1' with '3312'
c Var 'max_left_00002_00007_00001' direct represents '1' with '3312'
c Var 'max_left_00002_00007_00001' order represents '2' with '3313'
-3312 3313 0
c Var 'max_left_00002_00007_00001' direct represents '2' with '3314'
3312 -3313 3314 0
-3314 3313 0
-3314 -3312 0
c Var 'max_left_00002_00007_00001' order represents '3' with '3315'
-3313 3315 0
c Var 'max_left_00002_00007_00001' direct represents '3' with '3316'
3313 -3315 3316 0
-3316 3315 0
-3316 -3313 0
c Var 'max_left_00002_00007_00001' order represents '4' with '3317'
-3315 3317 0
c Var 'max_left_00002_00007_00001' direct represents '4' with '3318'
3315 -3317 3318 0
-3318 3317 0
-3318 -3315 0
c Var 'max_left_00002_00007_00001' order represents '5' with '3319'
-3317 3319 0
c Var 'max_left_00002_00007_00001' direct represents '5' with '3320'
3317 -3319 3320 0
-3320 3319 0
-3320 -3317 0
c Var 'max_left_00002_00007_00001' order represents '6' with '3321'
-3319 3321 0
c Var 'max_left_00002_00007_00001' direct represents '6' with '3322'
3319 -3321 3322 0
-3322 3321 0
-3322 -3319 0
c Var 'max_left_00002_00007_00001' order represents '7' with '3323'
-3321 3323 0
c Var 'max_left_00002_00007_00001' direct represents '7' with '3324'
3321 -3323 3324 0
-3324 3323 0
-3324 -3321 0
c Var 'max_left_00002_00007_00001' order represents '8' with '3325'
-3323 3325 0
c Var 'max_left_00002_00007_00001' direct represents '8' with '3326'
3323 -3325 3326 0
-3326 3325 0
-3326 -3323 0
c Var 'max_left_00002_00007_00001' direct represents '9' with '-3325'
3312 3314 3316 3318 3320 3322 3324 3326 -3325 0
c Encoding variable: max_left_00002_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00002' order represents '1' with '3327'
c Var 'max_left_00002_00007_00002' direct represents '1' with '3327'
c Var 'max_left_00002_00007_00002' order represents '2' with '3328'
-3327 3328 0
c Var 'max_left_00002_00007_00002' direct represents '2' with '3329'
3327 -3328 3329 0
-3329 3328 0
-3329 -3327 0
c Var 'max_left_00002_00007_00002' order represents '3' with '3330'
-3328 3330 0
c Var 'max_left_00002_00007_00002' direct represents '3' with '3331'
3328 -3330 3331 0
-3331 3330 0
-3331 -3328 0
c Var 'max_left_00002_00007_00002' order represents '4' with '3332'
-3330 3332 0
c Var 'max_left_00002_00007_00002' direct represents '4' with '3333'
3330 -3332 3333 0
-3333 3332 0
-3333 -3330 0
c Var 'max_left_00002_00007_00002' order represents '5' with '3334'
-3332 3334 0
c Var 'max_left_00002_00007_00002' direct represents '5' with '3335'
3332 -3334 3335 0
-3335 3334 0
-3335 -3332 0
c Var 'max_left_00002_00007_00002' order represents '6' with '3336'
-3334 3336 0
c Var 'max_left_00002_00007_00002' direct represents '6' with '3337'
3334 -3336 3337 0
-3337 3336 0
-3337 -3334 0
c Var 'max_left_00002_00007_00002' order represents '7' with '3338'
-3336 3338 0
c Var 'max_left_00002_00007_00002' direct represents '7' with '3339'
3336 -3338 3339 0
-3339 3338 0
-3339 -3336 0
c Var 'max_left_00002_00007_00002' order represents '8' with '3340'
-3338 3340 0
c Var 'max_left_00002_00007_00002' direct represents '8' with '3341'
3338 -3340 3341 0
-3341 3340 0
-3341 -3338 0
c Var 'max_left_00002_00007_00002' direct represents '9' with '-3340'
3327 3329 3331 3333 3335 3337 3339 3341 -3340 0
c Encoding variable: max_left_00002_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00003' order represents '1' with '3342'
c Var 'max_left_00002_00007_00003' direct represents '1' with '3342'
c Var 'max_left_00002_00007_00003' order represents '2' with '3343'
-3342 3343 0
c Var 'max_left_00002_00007_00003' direct represents '2' with '3344'
3342 -3343 3344 0
-3344 3343 0
-3344 -3342 0
c Var 'max_left_00002_00007_00003' order represents '3' with '3345'
-3343 3345 0
c Var 'max_left_00002_00007_00003' direct represents '3' with '3346'
3343 -3345 3346 0
-3346 3345 0
-3346 -3343 0
c Var 'max_left_00002_00007_00003' order represents '4' with '3347'
-3345 3347 0
c Var 'max_left_00002_00007_00003' direct represents '4' with '3348'
3345 -3347 3348 0
-3348 3347 0
-3348 -3345 0
c Var 'max_left_00002_00007_00003' order represents '5' with '3349'
-3347 3349 0
c Var 'max_left_00002_00007_00003' direct represents '5' with '3350'
3347 -3349 3350 0
-3350 3349 0
-3350 -3347 0
c Var 'max_left_00002_00007_00003' order represents '6' with '3351'
-3349 3351 0
c Var 'max_left_00002_00007_00003' direct represents '6' with '3352'
3349 -3351 3352 0
-3352 3351 0
-3352 -3349 0
c Var 'max_left_00002_00007_00003' order represents '7' with '3353'
-3351 3353 0
c Var 'max_left_00002_00007_00003' direct represents '7' with '3354'
3351 -3353 3354 0
-3354 3353 0
-3354 -3351 0
c Var 'max_left_00002_00007_00003' order represents '8' with '3355'
-3353 3355 0
c Var 'max_left_00002_00007_00003' direct represents '8' with '3356'
3353 -3355 3356 0
-3356 3355 0
-3356 -3353 0
c Var 'max_left_00002_00007_00003' direct represents '9' with '-3355'
3342 3344 3346 3348 3350 3352 3354 3356 -3355 0
c Encoding variable: max_left_00002_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00004' order represents '1' with '3357'
c Var 'max_left_00002_00007_00004' direct represents '1' with '3357'
c Var 'max_left_00002_00007_00004' order represents '2' with '3358'
-3357 3358 0
c Var 'max_left_00002_00007_00004' direct represents '2' with '3359'
3357 -3358 3359 0
-3359 3358 0
-3359 -3357 0
c Var 'max_left_00002_00007_00004' order represents '3' with '3360'
-3358 3360 0
c Var 'max_left_00002_00007_00004' direct represents '3' with '3361'
3358 -3360 3361 0
-3361 3360 0
-3361 -3358 0
c Var 'max_left_00002_00007_00004' order represents '4' with '3362'
-3360 3362 0
c Var 'max_left_00002_00007_00004' direct represents '4' with '3363'
3360 -3362 3363 0
-3363 3362 0
-3363 -3360 0
c Var 'max_left_00002_00007_00004' order represents '5' with '3364'
-3362 3364 0
c Var 'max_left_00002_00007_00004' direct represents '5' with '3365'
3362 -3364 3365 0
-3365 3364 0
-3365 -3362 0
c Var 'max_left_00002_00007_00004' order represents '6' with '3366'
-3364 3366 0
c Var 'max_left_00002_00007_00004' direct represents '6' with '3367'
3364 -3366 3367 0
-3367 3366 0
-3367 -3364 0
c Var 'max_left_00002_00007_00004' order represents '7' with '3368'
-3366 3368 0
c Var 'max_left_00002_00007_00004' direct represents '7' with '3369'
3366 -3368 3369 0
-3369 3368 0
-3369 -3366 0
c Var 'max_left_00002_00007_00004' order represents '8' with '3370'
-3368 3370 0
c Var 'max_left_00002_00007_00004' direct represents '8' with '3371'
3368 -3370 3371 0
-3371 3370 0
-3371 -3368 0
c Var 'max_left_00002_00007_00004' direct represents '9' with '-3370'
3357 3359 3361 3363 3365 3367 3369 3371 -3370 0
c Encoding variable: max_left_00002_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00005' order represents '1' with '3372'
c Var 'max_left_00002_00007_00005' direct represents '1' with '3372'
c Var 'max_left_00002_00007_00005' order represents '2' with '3373'
-3372 3373 0
c Var 'max_left_00002_00007_00005' direct represents '2' with '3374'
3372 -3373 3374 0
-3374 3373 0
-3374 -3372 0
c Var 'max_left_00002_00007_00005' order represents '3' with '3375'
-3373 3375 0
c Var 'max_left_00002_00007_00005' direct represents '3' with '3376'
3373 -3375 3376 0
-3376 3375 0
-3376 -3373 0
c Var 'max_left_00002_00007_00005' order represents '4' with '3377'
-3375 3377 0
c Var 'max_left_00002_00007_00005' direct represents '4' with '3378'
3375 -3377 3378 0
-3378 3377 0
-3378 -3375 0
c Var 'max_left_00002_00007_00005' order represents '5' with '3379'
-3377 3379 0
c Var 'max_left_00002_00007_00005' direct represents '5' with '3380'
3377 -3379 3380 0
-3380 3379 0
-3380 -3377 0
c Var 'max_left_00002_00007_00005' order represents '6' with '3381'
-3379 3381 0
c Var 'max_left_00002_00007_00005' direct represents '6' with '3382'
3379 -3381 3382 0
-3382 3381 0
-3382 -3379 0
c Var 'max_left_00002_00007_00005' order represents '7' with '3383'
-3381 3383 0
c Var 'max_left_00002_00007_00005' direct represents '7' with '3384'
3381 -3383 3384 0
-3384 3383 0
-3384 -3381 0
c Var 'max_left_00002_00007_00005' order represents '8' with '3385'
-3383 3385 0
c Var 'max_left_00002_00007_00005' direct represents '8' with '3386'
3383 -3385 3386 0
-3386 3385 0
-3386 -3383 0
c Var 'max_left_00002_00007_00005' direct represents '9' with '-3385'
3372 3374 3376 3378 3380 3382 3384 3386 -3385 0
c Encoding variable: max_left_00002_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00006' order represents '1' with '3387'
c Var 'max_left_00002_00007_00006' direct represents '1' with '3387'
c Var 'max_left_00002_00007_00006' order represents '2' with '3388'
-3387 3388 0
c Var 'max_left_00002_00007_00006' direct represents '2' with '3389'
3387 -3388 3389 0
-3389 3388 0
-3389 -3387 0
c Var 'max_left_00002_00007_00006' order represents '3' with '3390'
-3388 3390 0
c Var 'max_left_00002_00007_00006' direct represents '3' with '3391'
3388 -3390 3391 0
-3391 3390 0
-3391 -3388 0
c Var 'max_left_00002_00007_00006' order represents '4' with '3392'
-3390 3392 0
c Var 'max_left_00002_00007_00006' direct represents '4' with '3393'
3390 -3392 3393 0
-3393 3392 0
-3393 -3390 0
c Var 'max_left_00002_00007_00006' order represents '5' with '3394'
-3392 3394 0
c Var 'max_left_00002_00007_00006' direct represents '5' with '3395'
3392 -3394 3395 0
-3395 3394 0
-3395 -3392 0
c Var 'max_left_00002_00007_00006' order represents '6' with '3396'
-3394 3396 0
c Var 'max_left_00002_00007_00006' direct represents '6' with '3397'
3394 -3396 3397 0
-3397 3396 0
-3397 -3394 0
c Var 'max_left_00002_00007_00006' order represents '7' with '3398'
-3396 3398 0
c Var 'max_left_00002_00007_00006' direct represents '7' with '3399'
3396 -3398 3399 0
-3399 3398 0
-3399 -3396 0
c Var 'max_left_00002_00007_00006' order represents '8' with '3400'
-3398 3400 0
c Var 'max_left_00002_00007_00006' direct represents '8' with '3401'
3398 -3400 3401 0
-3401 3400 0
-3401 -3398 0
c Var 'max_left_00002_00007_00006' direct represents '9' with '-3400'
3387 3389 3391 3393 3395 3397 3399 3401 -3400 0
c Encoding variable: max_left_00002_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00007' order represents '1' with '3402'
c Var 'max_left_00002_00007_00007' direct represents '1' with '3402'
c Var 'max_left_00002_00007_00007' order represents '2' with '3403'
-3402 3403 0
c Var 'max_left_00002_00007_00007' direct represents '2' with '3404'
3402 -3403 3404 0
-3404 3403 0
-3404 -3402 0
c Var 'max_left_00002_00007_00007' order represents '3' with '3405'
-3403 3405 0
c Var 'max_left_00002_00007_00007' direct represents '3' with '3406'
3403 -3405 3406 0
-3406 3405 0
-3406 -3403 0
c Var 'max_left_00002_00007_00007' order represents '4' with '3407'
-3405 3407 0
c Var 'max_left_00002_00007_00007' direct represents '4' with '3408'
3405 -3407 3408 0
-3408 3407 0
-3408 -3405 0
c Var 'max_left_00002_00007_00007' order represents '5' with '3409'
-3407 3409 0
c Var 'max_left_00002_00007_00007' direct represents '5' with '3410'
3407 -3409 3410 0
-3410 3409 0
-3410 -3407 0
c Var 'max_left_00002_00007_00007' order represents '6' with '3411'
-3409 3411 0
c Var 'max_left_00002_00007_00007' direct represents '6' with '3412'
3409 -3411 3412 0
-3412 3411 0
-3412 -3409 0
c Var 'max_left_00002_00007_00007' order represents '7' with '3413'
-3411 3413 0
c Var 'max_left_00002_00007_00007' direct represents '7' with '3414'
3411 -3413 3414 0
-3414 3413 0
-3414 -3411 0
c Var 'max_left_00002_00007_00007' order represents '8' with '3415'
-3413 3415 0
c Var 'max_left_00002_00007_00007' direct represents '8' with '3416'
3413 -3415 3416 0
-3416 3415 0
-3416 -3413 0
c Var 'max_left_00002_00007_00007' direct represents '9' with '-3415'
3402 3404 3406 3408 3410 3412 3414 3416 -3415 0
c Encoding variable: max_left_00002_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00008' order represents '1' with '3417'
c Var 'max_left_00002_00007_00008' direct represents '1' with '3417'
c Var 'max_left_00002_00007_00008' order represents '2' with '3418'
-3417 3418 0
c Var 'max_left_00002_00007_00008' direct represents '2' with '3419'
3417 -3418 3419 0
-3419 3418 0
-3419 -3417 0
c Var 'max_left_00002_00007_00008' order represents '3' with '3420'
-3418 3420 0
c Var 'max_left_00002_00007_00008' direct represents '3' with '3421'
3418 -3420 3421 0
-3421 3420 0
-3421 -3418 0
c Var 'max_left_00002_00007_00008' order represents '4' with '3422'
-3420 3422 0
c Var 'max_left_00002_00007_00008' direct represents '4' with '3423'
3420 -3422 3423 0
-3423 3422 0
-3423 -3420 0
c Var 'max_left_00002_00007_00008' order represents '5' with '3424'
-3422 3424 0
c Var 'max_left_00002_00007_00008' direct represents '5' with '3425'
3422 -3424 3425 0
-3425 3424 0
-3425 -3422 0
c Var 'max_left_00002_00007_00008' order represents '6' with '3426'
-3424 3426 0
c Var 'max_left_00002_00007_00008' direct represents '6' with '3427'
3424 -3426 3427 0
-3427 3426 0
-3427 -3424 0
c Var 'max_left_00002_00007_00008' order represents '7' with '3428'
-3426 3428 0
c Var 'max_left_00002_00007_00008' direct represents '7' with '3429'
3426 -3428 3429 0
-3429 3428 0
-3429 -3426 0
c Var 'max_left_00002_00007_00008' order represents '8' with '3430'
-3428 3430 0
c Var 'max_left_00002_00007_00008' direct represents '8' with '3431'
3428 -3430 3431 0
-3431 3430 0
-3431 -3428 0
c Var 'max_left_00002_00007_00008' direct represents '9' with '-3430'
3417 3419 3421 3423 3425 3427 3429 3431 -3430 0
c Encoding variable: max_left_00002_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00007_00009' order represents '1' with '3432'
c Var 'max_left_00002_00007_00009' direct represents '1' with '3432'
c Var 'max_left_00002_00007_00009' order represents '2' with '3433'
-3432 3433 0
c Var 'max_left_00002_00007_00009' direct represents '2' with '3434'
3432 -3433 3434 0
-3434 3433 0
-3434 -3432 0
c Var 'max_left_00002_00007_00009' order represents '3' with '3435'
-3433 3435 0
c Var 'max_left_00002_00007_00009' direct represents '3' with '3436'
3433 -3435 3436 0
-3436 3435 0
-3436 -3433 0
c Var 'max_left_00002_00007_00009' order represents '4' with '3437'
-3435 3437 0
c Var 'max_left_00002_00007_00009' direct represents '4' with '3438'
3435 -3437 3438 0
-3438 3437 0
-3438 -3435 0
c Var 'max_left_00002_00007_00009' order represents '5' with '3439'
-3437 3439 0
c Var 'max_left_00002_00007_00009' direct represents '5' with '3440'
3437 -3439 3440 0
-3440 3439 0
-3440 -3437 0
c Var 'max_left_00002_00007_00009' order represents '6' with '3441'
-3439 3441 0
c Var 'max_left_00002_00007_00009' direct represents '6' with '3442'
3439 -3441 3442 0
-3442 3441 0
-3442 -3439 0
c Var 'max_left_00002_00007_00009' order represents '7' with '3443'
-3441 3443 0
c Var 'max_left_00002_00007_00009' direct represents '7' with '3444'
3441 -3443 3444 0
-3444 3443 0
-3444 -3441 0
c Var 'max_left_00002_00007_00009' order represents '8' with '3445'
-3443 3445 0
c Var 'max_left_00002_00007_00009' direct represents '8' with '3446'
3443 -3445 3446 0
-3446 3445 0
-3446 -3443 0
c Var 'max_left_00002_00007_00009' direct represents '9' with '-3445'
3432 3434 3436 3438 3440 3442 3444 3446 -3445 0
c Encoding variable: max_left_00002_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00008_00000' direct represents '0' with '3447'
3447 0
c Encoding variable: max_left_00002_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00001' order represents '1' with '3448'
c Var 'max_left_00002_00008_00001' direct represents '1' with '3448'
c Var 'max_left_00002_00008_00001' order represents '2' with '3449'
-3448 3449 0
c Var 'max_left_00002_00008_00001' direct represents '2' with '3450'
3448 -3449 3450 0
-3450 3449 0
-3450 -3448 0
c Var 'max_left_00002_00008_00001' order represents '3' with '3451'
-3449 3451 0
c Var 'max_left_00002_00008_00001' direct represents '3' with '3452'
3449 -3451 3452 0
-3452 3451 0
-3452 -3449 0
c Var 'max_left_00002_00008_00001' order represents '4' with '3453'
-3451 3453 0
c Var 'max_left_00002_00008_00001' direct represents '4' with '3454'
3451 -3453 3454 0
-3454 3453 0
-3454 -3451 0
c Var 'max_left_00002_00008_00001' order represents '5' with '3455'
-3453 3455 0
c Var 'max_left_00002_00008_00001' direct represents '5' with '3456'
3453 -3455 3456 0
-3456 3455 0
-3456 -3453 0
c Var 'max_left_00002_00008_00001' order represents '6' with '3457'
-3455 3457 0
c Var 'max_left_00002_00008_00001' direct represents '6' with '3458'
3455 -3457 3458 0
-3458 3457 0
-3458 -3455 0
c Var 'max_left_00002_00008_00001' order represents '7' with '3459'
-3457 3459 0
c Var 'max_left_00002_00008_00001' direct represents '7' with '3460'
3457 -3459 3460 0
-3460 3459 0
-3460 -3457 0
c Var 'max_left_00002_00008_00001' order represents '8' with '3461'
-3459 3461 0
c Var 'max_left_00002_00008_00001' direct represents '8' with '3462'
3459 -3461 3462 0
-3462 3461 0
-3462 -3459 0
c Var 'max_left_00002_00008_00001' direct represents '9' with '-3461'
3448 3450 3452 3454 3456 3458 3460 3462 -3461 0
c Encoding variable: max_left_00002_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00002' order represents '1' with '3463'
c Var 'max_left_00002_00008_00002' direct represents '1' with '3463'
c Var 'max_left_00002_00008_00002' order represents '2' with '3464'
-3463 3464 0
c Var 'max_left_00002_00008_00002' direct represents '2' with '3465'
3463 -3464 3465 0
-3465 3464 0
-3465 -3463 0
c Var 'max_left_00002_00008_00002' order represents '3' with '3466'
-3464 3466 0
c Var 'max_left_00002_00008_00002' direct represents '3' with '3467'
3464 -3466 3467 0
-3467 3466 0
-3467 -3464 0
c Var 'max_left_00002_00008_00002' order represents '4' with '3468'
-3466 3468 0
c Var 'max_left_00002_00008_00002' direct represents '4' with '3469'
3466 -3468 3469 0
-3469 3468 0
-3469 -3466 0
c Var 'max_left_00002_00008_00002' order represents '5' with '3470'
-3468 3470 0
c Var 'max_left_00002_00008_00002' direct represents '5' with '3471'
3468 -3470 3471 0
-3471 3470 0
-3471 -3468 0
c Var 'max_left_00002_00008_00002' order represents '6' with '3472'
-3470 3472 0
c Var 'max_left_00002_00008_00002' direct represents '6' with '3473'
3470 -3472 3473 0
-3473 3472 0
-3473 -3470 0
c Var 'max_left_00002_00008_00002' order represents '7' with '3474'
-3472 3474 0
c Var 'max_left_00002_00008_00002' direct represents '7' with '3475'
3472 -3474 3475 0
-3475 3474 0
-3475 -3472 0
c Var 'max_left_00002_00008_00002' order represents '8' with '3476'
-3474 3476 0
c Var 'max_left_00002_00008_00002' direct represents '8' with '3477'
3474 -3476 3477 0
-3477 3476 0
-3477 -3474 0
c Var 'max_left_00002_00008_00002' direct represents '9' with '-3476'
3463 3465 3467 3469 3471 3473 3475 3477 -3476 0
c Encoding variable: max_left_00002_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00003' order represents '1' with '3478'
c Var 'max_left_00002_00008_00003' direct represents '1' with '3478'
c Var 'max_left_00002_00008_00003' order represents '2' with '3479'
-3478 3479 0
c Var 'max_left_00002_00008_00003' direct represents '2' with '3480'
3478 -3479 3480 0
-3480 3479 0
-3480 -3478 0
c Var 'max_left_00002_00008_00003' order represents '3' with '3481'
-3479 3481 0
c Var 'max_left_00002_00008_00003' direct represents '3' with '3482'
3479 -3481 3482 0
-3482 3481 0
-3482 -3479 0
c Var 'max_left_00002_00008_00003' order represents '4' with '3483'
-3481 3483 0
c Var 'max_left_00002_00008_00003' direct represents '4' with '3484'
3481 -3483 3484 0
-3484 3483 0
-3484 -3481 0
c Var 'max_left_00002_00008_00003' order represents '5' with '3485'
-3483 3485 0
c Var 'max_left_00002_00008_00003' direct represents '5' with '3486'
3483 -3485 3486 0
-3486 3485 0
-3486 -3483 0
c Var 'max_left_00002_00008_00003' order represents '6' with '3487'
-3485 3487 0
c Var 'max_left_00002_00008_00003' direct represents '6' with '3488'
3485 -3487 3488 0
-3488 3487 0
-3488 -3485 0
c Var 'max_left_00002_00008_00003' order represents '7' with '3489'
-3487 3489 0
c Var 'max_left_00002_00008_00003' direct represents '7' with '3490'
3487 -3489 3490 0
-3490 3489 0
-3490 -3487 0
c Var 'max_left_00002_00008_00003' order represents '8' with '3491'
-3489 3491 0
c Var 'max_left_00002_00008_00003' direct represents '8' with '3492'
3489 -3491 3492 0
-3492 3491 0
-3492 -3489 0
c Var 'max_left_00002_00008_00003' direct represents '9' with '-3491'
3478 3480 3482 3484 3486 3488 3490 3492 -3491 0
c Encoding variable: max_left_00002_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00004' order represents '1' with '3493'
c Var 'max_left_00002_00008_00004' direct represents '1' with '3493'
c Var 'max_left_00002_00008_00004' order represents '2' with '3494'
-3493 3494 0
c Var 'max_left_00002_00008_00004' direct represents '2' with '3495'
3493 -3494 3495 0
-3495 3494 0
-3495 -3493 0
c Var 'max_left_00002_00008_00004' order represents '3' with '3496'
-3494 3496 0
c Var 'max_left_00002_00008_00004' direct represents '3' with '3497'
3494 -3496 3497 0
-3497 3496 0
-3497 -3494 0
c Var 'max_left_00002_00008_00004' order represents '4' with '3498'
-3496 3498 0
c Var 'max_left_00002_00008_00004' direct represents '4' with '3499'
3496 -3498 3499 0
-3499 3498 0
-3499 -3496 0
c Var 'max_left_00002_00008_00004' order represents '5' with '3500'
-3498 3500 0
c Var 'max_left_00002_00008_00004' direct represents '5' with '3501'
3498 -3500 3501 0
-3501 3500 0
-3501 -3498 0
c Var 'max_left_00002_00008_00004' order represents '6' with '3502'
-3500 3502 0
c Var 'max_left_00002_00008_00004' direct represents '6' with '3503'
3500 -3502 3503 0
-3503 3502 0
-3503 -3500 0
c Var 'max_left_00002_00008_00004' order represents '7' with '3504'
-3502 3504 0
c Var 'max_left_00002_00008_00004' direct represents '7' with '3505'
3502 -3504 3505 0
-3505 3504 0
-3505 -3502 0
c Var 'max_left_00002_00008_00004' order represents '8' with '3506'
-3504 3506 0
c Var 'max_left_00002_00008_00004' direct represents '8' with '3507'
3504 -3506 3507 0
-3507 3506 0
-3507 -3504 0
c Var 'max_left_00002_00008_00004' direct represents '9' with '-3506'
3493 3495 3497 3499 3501 3503 3505 3507 -3506 0
c Encoding variable: max_left_00002_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00005' order represents '1' with '3508'
c Var 'max_left_00002_00008_00005' direct represents '1' with '3508'
c Var 'max_left_00002_00008_00005' order represents '2' with '3509'
-3508 3509 0
c Var 'max_left_00002_00008_00005' direct represents '2' with '3510'
3508 -3509 3510 0
-3510 3509 0
-3510 -3508 0
c Var 'max_left_00002_00008_00005' order represents '3' with '3511'
-3509 3511 0
c Var 'max_left_00002_00008_00005' direct represents '3' with '3512'
3509 -3511 3512 0
-3512 3511 0
-3512 -3509 0
c Var 'max_left_00002_00008_00005' order represents '4' with '3513'
-3511 3513 0
c Var 'max_left_00002_00008_00005' direct represents '4' with '3514'
3511 -3513 3514 0
-3514 3513 0
-3514 -3511 0
c Var 'max_left_00002_00008_00005' order represents '5' with '3515'
-3513 3515 0
c Var 'max_left_00002_00008_00005' direct represents '5' with '3516'
3513 -3515 3516 0
-3516 3515 0
-3516 -3513 0
c Var 'max_left_00002_00008_00005' order represents '6' with '3517'
-3515 3517 0
c Var 'max_left_00002_00008_00005' direct represents '6' with '3518'
3515 -3517 3518 0
-3518 3517 0
-3518 -3515 0
c Var 'max_left_00002_00008_00005' order represents '7' with '3519'
-3517 3519 0
c Var 'max_left_00002_00008_00005' direct represents '7' with '3520'
3517 -3519 3520 0
-3520 3519 0
-3520 -3517 0
c Var 'max_left_00002_00008_00005' order represents '8' with '3521'
-3519 3521 0
c Var 'max_left_00002_00008_00005' direct represents '8' with '3522'
3519 -3521 3522 0
-3522 3521 0
-3522 -3519 0
c Var 'max_left_00002_00008_00005' direct represents '9' with '-3521'
3508 3510 3512 3514 3516 3518 3520 3522 -3521 0
c Encoding variable: max_left_00002_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00006' order represents '1' with '3523'
c Var 'max_left_00002_00008_00006' direct represents '1' with '3523'
c Var 'max_left_00002_00008_00006' order represents '2' with '3524'
-3523 3524 0
c Var 'max_left_00002_00008_00006' direct represents '2' with '3525'
3523 -3524 3525 0
-3525 3524 0
-3525 -3523 0
c Var 'max_left_00002_00008_00006' order represents '3' with '3526'
-3524 3526 0
c Var 'max_left_00002_00008_00006' direct represents '3' with '3527'
3524 -3526 3527 0
-3527 3526 0
-3527 -3524 0
c Var 'max_left_00002_00008_00006' order represents '4' with '3528'
-3526 3528 0
c Var 'max_left_00002_00008_00006' direct represents '4' with '3529'
3526 -3528 3529 0
-3529 3528 0
-3529 -3526 0
c Var 'max_left_00002_00008_00006' order represents '5' with '3530'
-3528 3530 0
c Var 'max_left_00002_00008_00006' direct represents '5' with '3531'
3528 -3530 3531 0
-3531 3530 0
-3531 -3528 0
c Var 'max_left_00002_00008_00006' order represents '6' with '3532'
-3530 3532 0
c Var 'max_left_00002_00008_00006' direct represents '6' with '3533'
3530 -3532 3533 0
-3533 3532 0
-3533 -3530 0
c Var 'max_left_00002_00008_00006' order represents '7' with '3534'
-3532 3534 0
c Var 'max_left_00002_00008_00006' direct represents '7' with '3535'
3532 -3534 3535 0
-3535 3534 0
-3535 -3532 0
c Var 'max_left_00002_00008_00006' order represents '8' with '3536'
-3534 3536 0
c Var 'max_left_00002_00008_00006' direct represents '8' with '3537'
3534 -3536 3537 0
-3537 3536 0
-3537 -3534 0
c Var 'max_left_00002_00008_00006' direct represents '9' with '-3536'
3523 3525 3527 3529 3531 3533 3535 3537 -3536 0
c Encoding variable: max_left_00002_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00007' order represents '1' with '3538'
c Var 'max_left_00002_00008_00007' direct represents '1' with '3538'
c Var 'max_left_00002_00008_00007' order represents '2' with '3539'
-3538 3539 0
c Var 'max_left_00002_00008_00007' direct represents '2' with '3540'
3538 -3539 3540 0
-3540 3539 0
-3540 -3538 0
c Var 'max_left_00002_00008_00007' order represents '3' with '3541'
-3539 3541 0
c Var 'max_left_00002_00008_00007' direct represents '3' with '3542'
3539 -3541 3542 0
-3542 3541 0
-3542 -3539 0
c Var 'max_left_00002_00008_00007' order represents '4' with '3543'
-3541 3543 0
c Var 'max_left_00002_00008_00007' direct represents '4' with '3544'
3541 -3543 3544 0
-3544 3543 0
-3544 -3541 0
c Var 'max_left_00002_00008_00007' order represents '5' with '3545'
-3543 3545 0
c Var 'max_left_00002_00008_00007' direct represents '5' with '3546'
3543 -3545 3546 0
-3546 3545 0
-3546 -3543 0
c Var 'max_left_00002_00008_00007' order represents '6' with '3547'
-3545 3547 0
c Var 'max_left_00002_00008_00007' direct represents '6' with '3548'
3545 -3547 3548 0
-3548 3547 0
-3548 -3545 0
c Var 'max_left_00002_00008_00007' order represents '7' with '3549'
-3547 3549 0
c Var 'max_left_00002_00008_00007' direct represents '7' with '3550'
3547 -3549 3550 0
-3550 3549 0
-3550 -3547 0
c Var 'max_left_00002_00008_00007' order represents '8' with '3551'
-3549 3551 0
c Var 'max_left_00002_00008_00007' direct represents '8' with '3552'
3549 -3551 3552 0
-3552 3551 0
-3552 -3549 0
c Var 'max_left_00002_00008_00007' direct represents '9' with '-3551'
3538 3540 3542 3544 3546 3548 3550 3552 -3551 0
c Encoding variable: max_left_00002_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00008' order represents '1' with '3553'
c Var 'max_left_00002_00008_00008' direct represents '1' with '3553'
c Var 'max_left_00002_00008_00008' order represents '2' with '3554'
-3553 3554 0
c Var 'max_left_00002_00008_00008' direct represents '2' with '3555'
3553 -3554 3555 0
-3555 3554 0
-3555 -3553 0
c Var 'max_left_00002_00008_00008' order represents '3' with '3556'
-3554 3556 0
c Var 'max_left_00002_00008_00008' direct represents '3' with '3557'
3554 -3556 3557 0
-3557 3556 0
-3557 -3554 0
c Var 'max_left_00002_00008_00008' order represents '4' with '3558'
-3556 3558 0
c Var 'max_left_00002_00008_00008' direct represents '4' with '3559'
3556 -3558 3559 0
-3559 3558 0
-3559 -3556 0
c Var 'max_left_00002_00008_00008' order represents '5' with '3560'
-3558 3560 0
c Var 'max_left_00002_00008_00008' direct represents '5' with '3561'
3558 -3560 3561 0
-3561 3560 0
-3561 -3558 0
c Var 'max_left_00002_00008_00008' order represents '6' with '3562'
-3560 3562 0
c Var 'max_left_00002_00008_00008' direct represents '6' with '3563'
3560 -3562 3563 0
-3563 3562 0
-3563 -3560 0
c Var 'max_left_00002_00008_00008' order represents '7' with '3564'
-3562 3564 0
c Var 'max_left_00002_00008_00008' direct represents '7' with '3565'
3562 -3564 3565 0
-3565 3564 0
-3565 -3562 0
c Var 'max_left_00002_00008_00008' order represents '8' with '3566'
-3564 3566 0
c Var 'max_left_00002_00008_00008' direct represents '8' with '3567'
3564 -3566 3567 0
-3567 3566 0
-3567 -3564 0
c Var 'max_left_00002_00008_00008' direct represents '9' with '-3566'
3553 3555 3557 3559 3561 3563 3565 3567 -3566 0
c Encoding variable: max_left_00002_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00008_00009' order represents '1' with '3568'
c Var 'max_left_00002_00008_00009' direct represents '1' with '3568'
c Var 'max_left_00002_00008_00009' order represents '2' with '3569'
-3568 3569 0
c Var 'max_left_00002_00008_00009' direct represents '2' with '3570'
3568 -3569 3570 0
-3570 3569 0
-3570 -3568 0
c Var 'max_left_00002_00008_00009' order represents '3' with '3571'
-3569 3571 0
c Var 'max_left_00002_00008_00009' direct represents '3' with '3572'
3569 -3571 3572 0
-3572 3571 0
-3572 -3569 0
c Var 'max_left_00002_00008_00009' order represents '4' with '3573'
-3571 3573 0
c Var 'max_left_00002_00008_00009' direct represents '4' with '3574'
3571 -3573 3574 0
-3574 3573 0
-3574 -3571 0
c Var 'max_left_00002_00008_00009' order represents '5' with '3575'
-3573 3575 0
c Var 'max_left_00002_00008_00009' direct represents '5' with '3576'
3573 -3575 3576 0
-3576 3575 0
-3576 -3573 0
c Var 'max_left_00002_00008_00009' order represents '6' with '3577'
-3575 3577 0
c Var 'max_left_00002_00008_00009' direct represents '6' with '3578'
3575 -3577 3578 0
-3578 3577 0
-3578 -3575 0
c Var 'max_left_00002_00008_00009' order represents '7' with '3579'
-3577 3579 0
c Var 'max_left_00002_00008_00009' direct represents '7' with '3580'
3577 -3579 3580 0
-3580 3579 0
-3580 -3577 0
c Var 'max_left_00002_00008_00009' order represents '8' with '3581'
-3579 3581 0
c Var 'max_left_00002_00008_00009' direct represents '8' with '3582'
3579 -3581 3582 0
-3582 3581 0
-3582 -3579 0
c Var 'max_left_00002_00008_00009' direct represents '9' with '-3581'
3568 3570 3572 3574 3576 3578 3580 3582 -3581 0
c Encoding variable: max_left_00002_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00002_00009_00000' direct represents '0' with '3583'
3583 0
c Encoding variable: max_left_00002_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00001' order represents '1' with '3584'
c Var 'max_left_00002_00009_00001' direct represents '1' with '3584'
c Var 'max_left_00002_00009_00001' order represents '2' with '3585'
-3584 3585 0
c Var 'max_left_00002_00009_00001' direct represents '2' with '3586'
3584 -3585 3586 0
-3586 3585 0
-3586 -3584 0
c Var 'max_left_00002_00009_00001' order represents '3' with '3587'
-3585 3587 0
c Var 'max_left_00002_00009_00001' direct represents '3' with '3588'
3585 -3587 3588 0
-3588 3587 0
-3588 -3585 0
c Var 'max_left_00002_00009_00001' order represents '4' with '3589'
-3587 3589 0
c Var 'max_left_00002_00009_00001' direct represents '4' with '3590'
3587 -3589 3590 0
-3590 3589 0
-3590 -3587 0
c Var 'max_left_00002_00009_00001' order represents '5' with '3591'
-3589 3591 0
c Var 'max_left_00002_00009_00001' direct represents '5' with '3592'
3589 -3591 3592 0
-3592 3591 0
-3592 -3589 0
c Var 'max_left_00002_00009_00001' order represents '6' with '3593'
-3591 3593 0
c Var 'max_left_00002_00009_00001' direct represents '6' with '3594'
3591 -3593 3594 0
-3594 3593 0
-3594 -3591 0
c Var 'max_left_00002_00009_00001' order represents '7' with '3595'
-3593 3595 0
c Var 'max_left_00002_00009_00001' direct represents '7' with '3596'
3593 -3595 3596 0
-3596 3595 0
-3596 -3593 0
c Var 'max_left_00002_00009_00001' order represents '8' with '3597'
-3595 3597 0
c Var 'max_left_00002_00009_00001' direct represents '8' with '3598'
3595 -3597 3598 0
-3598 3597 0
-3598 -3595 0
c Var 'max_left_00002_00009_00001' direct represents '9' with '-3597'
3584 3586 3588 3590 3592 3594 3596 3598 -3597 0
c Encoding variable: max_left_00002_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00002' order represents '1' with '3599'
c Var 'max_left_00002_00009_00002' direct represents '1' with '3599'
c Var 'max_left_00002_00009_00002' order represents '2' with '3600'
-3599 3600 0
c Var 'max_left_00002_00009_00002' direct represents '2' with '3601'
3599 -3600 3601 0
-3601 3600 0
-3601 -3599 0
c Var 'max_left_00002_00009_00002' order represents '3' with '3602'
-3600 3602 0
c Var 'max_left_00002_00009_00002' direct represents '3' with '3603'
3600 -3602 3603 0
-3603 3602 0
-3603 -3600 0
c Var 'max_left_00002_00009_00002' order represents '4' with '3604'
-3602 3604 0
c Var 'max_left_00002_00009_00002' direct represents '4' with '3605'
3602 -3604 3605 0
-3605 3604 0
-3605 -3602 0
c Var 'max_left_00002_00009_00002' order represents '5' with '3606'
-3604 3606 0
c Var 'max_left_00002_00009_00002' direct represents '5' with '3607'
3604 -3606 3607 0
-3607 3606 0
-3607 -3604 0
c Var 'max_left_00002_00009_00002' order represents '6' with '3608'
-3606 3608 0
c Var 'max_left_00002_00009_00002' direct represents '6' with '3609'
3606 -3608 3609 0
-3609 3608 0
-3609 -3606 0
c Var 'max_left_00002_00009_00002' order represents '7' with '3610'
-3608 3610 0
c Var 'max_left_00002_00009_00002' direct represents '7' with '3611'
3608 -3610 3611 0
-3611 3610 0
-3611 -3608 0
c Var 'max_left_00002_00009_00002' order represents '8' with '3612'
-3610 3612 0
c Var 'max_left_00002_00009_00002' direct represents '8' with '3613'
3610 -3612 3613 0
-3613 3612 0
-3613 -3610 0
c Var 'max_left_00002_00009_00002' direct represents '9' with '-3612'
3599 3601 3603 3605 3607 3609 3611 3613 -3612 0
c Encoding variable: max_left_00002_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00003' order represents '1' with '3614'
c Var 'max_left_00002_00009_00003' direct represents '1' with '3614'
c Var 'max_left_00002_00009_00003' order represents '2' with '3615'
-3614 3615 0
c Var 'max_left_00002_00009_00003' direct represents '2' with '3616'
3614 -3615 3616 0
-3616 3615 0
-3616 -3614 0
c Var 'max_left_00002_00009_00003' order represents '3' with '3617'
-3615 3617 0
c Var 'max_left_00002_00009_00003' direct represents '3' with '3618'
3615 -3617 3618 0
-3618 3617 0
-3618 -3615 0
c Var 'max_left_00002_00009_00003' order represents '4' with '3619'
-3617 3619 0
c Var 'max_left_00002_00009_00003' direct represents '4' with '3620'
3617 -3619 3620 0
-3620 3619 0
-3620 -3617 0
c Var 'max_left_00002_00009_00003' order represents '5' with '3621'
-3619 3621 0
c Var 'max_left_00002_00009_00003' direct represents '5' with '3622'
3619 -3621 3622 0
-3622 3621 0
-3622 -3619 0
c Var 'max_left_00002_00009_00003' order represents '6' with '3623'
-3621 3623 0
c Var 'max_left_00002_00009_00003' direct represents '6' with '3624'
3621 -3623 3624 0
-3624 3623 0
-3624 -3621 0
c Var 'max_left_00002_00009_00003' order represents '7' with '3625'
-3623 3625 0
c Var 'max_left_00002_00009_00003' direct represents '7' with '3626'
3623 -3625 3626 0
-3626 3625 0
-3626 -3623 0
c Var 'max_left_00002_00009_00003' order represents '8' with '3627'
-3625 3627 0
c Var 'max_left_00002_00009_00003' direct represents '8' with '3628'
3625 -3627 3628 0
-3628 3627 0
-3628 -3625 0
c Var 'max_left_00002_00009_00003' direct represents '9' with '-3627'
3614 3616 3618 3620 3622 3624 3626 3628 -3627 0
c Encoding variable: max_left_00002_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00004' order represents '1' with '3629'
c Var 'max_left_00002_00009_00004' direct represents '1' with '3629'
c Var 'max_left_00002_00009_00004' order represents '2' with '3630'
-3629 3630 0
c Var 'max_left_00002_00009_00004' direct represents '2' with '3631'
3629 -3630 3631 0
-3631 3630 0
-3631 -3629 0
c Var 'max_left_00002_00009_00004' order represents '3' with '3632'
-3630 3632 0
c Var 'max_left_00002_00009_00004' direct represents '3' with '3633'
3630 -3632 3633 0
-3633 3632 0
-3633 -3630 0
c Var 'max_left_00002_00009_00004' order represents '4' with '3634'
-3632 3634 0
c Var 'max_left_00002_00009_00004' direct represents '4' with '3635'
3632 -3634 3635 0
-3635 3634 0
-3635 -3632 0
c Var 'max_left_00002_00009_00004' order represents '5' with '3636'
-3634 3636 0
c Var 'max_left_00002_00009_00004' direct represents '5' with '3637'
3634 -3636 3637 0
-3637 3636 0
-3637 -3634 0
c Var 'max_left_00002_00009_00004' order represents '6' with '3638'
-3636 3638 0
c Var 'max_left_00002_00009_00004' direct represents '6' with '3639'
3636 -3638 3639 0
-3639 3638 0
-3639 -3636 0
c Var 'max_left_00002_00009_00004' order represents '7' with '3640'
-3638 3640 0
c Var 'max_left_00002_00009_00004' direct represents '7' with '3641'
3638 -3640 3641 0
-3641 3640 0
-3641 -3638 0
c Var 'max_left_00002_00009_00004' order represents '8' with '3642'
-3640 3642 0
c Var 'max_left_00002_00009_00004' direct represents '8' with '3643'
3640 -3642 3643 0
-3643 3642 0
-3643 -3640 0
c Var 'max_left_00002_00009_00004' direct represents '9' with '-3642'
3629 3631 3633 3635 3637 3639 3641 3643 -3642 0
c Encoding variable: max_left_00002_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00005' order represents '1' with '3644'
c Var 'max_left_00002_00009_00005' direct represents '1' with '3644'
c Var 'max_left_00002_00009_00005' order represents '2' with '3645'
-3644 3645 0
c Var 'max_left_00002_00009_00005' direct represents '2' with '3646'
3644 -3645 3646 0
-3646 3645 0
-3646 -3644 0
c Var 'max_left_00002_00009_00005' order represents '3' with '3647'
-3645 3647 0
c Var 'max_left_00002_00009_00005' direct represents '3' with '3648'
3645 -3647 3648 0
-3648 3647 0
-3648 -3645 0
c Var 'max_left_00002_00009_00005' order represents '4' with '3649'
-3647 3649 0
c Var 'max_left_00002_00009_00005' direct represents '4' with '3650'
3647 -3649 3650 0
-3650 3649 0
-3650 -3647 0
c Var 'max_left_00002_00009_00005' order represents '5' with '3651'
-3649 3651 0
c Var 'max_left_00002_00009_00005' direct represents '5' with '3652'
3649 -3651 3652 0
-3652 3651 0
-3652 -3649 0
c Var 'max_left_00002_00009_00005' order represents '6' with '3653'
-3651 3653 0
c Var 'max_left_00002_00009_00005' direct represents '6' with '3654'
3651 -3653 3654 0
-3654 3653 0
-3654 -3651 0
c Var 'max_left_00002_00009_00005' order represents '7' with '3655'
-3653 3655 0
c Var 'max_left_00002_00009_00005' direct represents '7' with '3656'
3653 -3655 3656 0
-3656 3655 0
-3656 -3653 0
c Var 'max_left_00002_00009_00005' order represents '8' with '3657'
-3655 3657 0
c Var 'max_left_00002_00009_00005' direct represents '8' with '3658'
3655 -3657 3658 0
-3658 3657 0
-3658 -3655 0
c Var 'max_left_00002_00009_00005' direct represents '9' with '-3657'
3644 3646 3648 3650 3652 3654 3656 3658 -3657 0
c Encoding variable: max_left_00002_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00006' order represents '1' with '3659'
c Var 'max_left_00002_00009_00006' direct represents '1' with '3659'
c Var 'max_left_00002_00009_00006' order represents '2' with '3660'
-3659 3660 0
c Var 'max_left_00002_00009_00006' direct represents '2' with '3661'
3659 -3660 3661 0
-3661 3660 0
-3661 -3659 0
c Var 'max_left_00002_00009_00006' order represents '3' with '3662'
-3660 3662 0
c Var 'max_left_00002_00009_00006' direct represents '3' with '3663'
3660 -3662 3663 0
-3663 3662 0
-3663 -3660 0
c Var 'max_left_00002_00009_00006' order represents '4' with '3664'
-3662 3664 0
c Var 'max_left_00002_00009_00006' direct represents '4' with '3665'
3662 -3664 3665 0
-3665 3664 0
-3665 -3662 0
c Var 'max_left_00002_00009_00006' order represents '5' with '3666'
-3664 3666 0
c Var 'max_left_00002_00009_00006' direct represents '5' with '3667'
3664 -3666 3667 0
-3667 3666 0
-3667 -3664 0
c Var 'max_left_00002_00009_00006' order represents '6' with '3668'
-3666 3668 0
c Var 'max_left_00002_00009_00006' direct represents '6' with '3669'
3666 -3668 3669 0
-3669 3668 0
-3669 -3666 0
c Var 'max_left_00002_00009_00006' order represents '7' with '3670'
-3668 3670 0
c Var 'max_left_00002_00009_00006' direct represents '7' with '3671'
3668 -3670 3671 0
-3671 3670 0
-3671 -3668 0
c Var 'max_left_00002_00009_00006' order represents '8' with '3672'
-3670 3672 0
c Var 'max_left_00002_00009_00006' direct represents '8' with '3673'
3670 -3672 3673 0
-3673 3672 0
-3673 -3670 0
c Var 'max_left_00002_00009_00006' direct represents '9' with '-3672'
3659 3661 3663 3665 3667 3669 3671 3673 -3672 0
c Encoding variable: max_left_00002_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00007' order represents '1' with '3674'
c Var 'max_left_00002_00009_00007' direct represents '1' with '3674'
c Var 'max_left_00002_00009_00007' order represents '2' with '3675'
-3674 3675 0
c Var 'max_left_00002_00009_00007' direct represents '2' with '3676'
3674 -3675 3676 0
-3676 3675 0
-3676 -3674 0
c Var 'max_left_00002_00009_00007' order represents '3' with '3677'
-3675 3677 0
c Var 'max_left_00002_00009_00007' direct represents '3' with '3678'
3675 -3677 3678 0
-3678 3677 0
-3678 -3675 0
c Var 'max_left_00002_00009_00007' order represents '4' with '3679'
-3677 3679 0
c Var 'max_left_00002_00009_00007' direct represents '4' with '3680'
3677 -3679 3680 0
-3680 3679 0
-3680 -3677 0
c Var 'max_left_00002_00009_00007' order represents '5' with '3681'
-3679 3681 0
c Var 'max_left_00002_00009_00007' direct represents '5' with '3682'
3679 -3681 3682 0
-3682 3681 0
-3682 -3679 0
c Var 'max_left_00002_00009_00007' order represents '6' with '3683'
-3681 3683 0
c Var 'max_left_00002_00009_00007' direct represents '6' with '3684'
3681 -3683 3684 0
-3684 3683 0
-3684 -3681 0
c Var 'max_left_00002_00009_00007' order represents '7' with '3685'
-3683 3685 0
c Var 'max_left_00002_00009_00007' direct represents '7' with '3686'
3683 -3685 3686 0
-3686 3685 0
-3686 -3683 0
c Var 'max_left_00002_00009_00007' order represents '8' with '3687'
-3685 3687 0
c Var 'max_left_00002_00009_00007' direct represents '8' with '3688'
3685 -3687 3688 0
-3688 3687 0
-3688 -3685 0
c Var 'max_left_00002_00009_00007' direct represents '9' with '-3687'
3674 3676 3678 3680 3682 3684 3686 3688 -3687 0
c Encoding variable: max_left_00002_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00008' order represents '1' with '3689'
c Var 'max_left_00002_00009_00008' direct represents '1' with '3689'
c Var 'max_left_00002_00009_00008' order represents '2' with '3690'
-3689 3690 0
c Var 'max_left_00002_00009_00008' direct represents '2' with '3691'
3689 -3690 3691 0
-3691 3690 0
-3691 -3689 0
c Var 'max_left_00002_00009_00008' order represents '3' with '3692'
-3690 3692 0
c Var 'max_left_00002_00009_00008' direct represents '3' with '3693'
3690 -3692 3693 0
-3693 3692 0
-3693 -3690 0
c Var 'max_left_00002_00009_00008' order represents '4' with '3694'
-3692 3694 0
c Var 'max_left_00002_00009_00008' direct represents '4' with '3695'
3692 -3694 3695 0
-3695 3694 0
-3695 -3692 0
c Var 'max_left_00002_00009_00008' order represents '5' with '3696'
-3694 3696 0
c Var 'max_left_00002_00009_00008' direct represents '5' with '3697'
3694 -3696 3697 0
-3697 3696 0
-3697 -3694 0
c Var 'max_left_00002_00009_00008' order represents '6' with '3698'
-3696 3698 0
c Var 'max_left_00002_00009_00008' direct represents '6' with '3699'
3696 -3698 3699 0
-3699 3698 0
-3699 -3696 0
c Var 'max_left_00002_00009_00008' order represents '7' with '3700'
-3698 3700 0
c Var 'max_left_00002_00009_00008' direct represents '7' with '3701'
3698 -3700 3701 0
-3701 3700 0
-3701 -3698 0
c Var 'max_left_00002_00009_00008' order represents '8' with '3702'
-3700 3702 0
c Var 'max_left_00002_00009_00008' direct represents '8' with '3703'
3700 -3702 3703 0
-3703 3702 0
-3703 -3700 0
c Var 'max_left_00002_00009_00008' direct represents '9' with '-3702'
3689 3691 3693 3695 3697 3699 3701 3703 -3702 0
c Encoding variable: max_left_00002_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00002_00009_00009' order represents '1' with '3704'
c Var 'max_left_00002_00009_00009' direct represents '1' with '3704'
c Var 'max_left_00002_00009_00009' order represents '2' with '3705'
-3704 3705 0
c Var 'max_left_00002_00009_00009' direct represents '2' with '3706'
3704 -3705 3706 0
-3706 3705 0
-3706 -3704 0
c Var 'max_left_00002_00009_00009' order represents '3' with '3707'
-3705 3707 0
c Var 'max_left_00002_00009_00009' direct represents '3' with '3708'
3705 -3707 3708 0
-3708 3707 0
-3708 -3705 0
c Var 'max_left_00002_00009_00009' order represents '4' with '3709'
-3707 3709 0
c Var 'max_left_00002_00009_00009' direct represents '4' with '3710'
3707 -3709 3710 0
-3710 3709 0
-3710 -3707 0
c Var 'max_left_00002_00009_00009' order represents '5' with '3711'
-3709 3711 0
c Var 'max_left_00002_00009_00009' direct represents '5' with '3712'
3709 -3711 3712 0
-3712 3711 0
-3712 -3709 0
c Var 'max_left_00002_00009_00009' order represents '6' with '3713'
-3711 3713 0
c Var 'max_left_00002_00009_00009' direct represents '6' with '3714'
3711 -3713 3714 0
-3714 3713 0
-3714 -3711 0
c Var 'max_left_00002_00009_00009' order represents '7' with '3715'
-3713 3715 0
c Var 'max_left_00002_00009_00009' direct represents '7' with '3716'
3713 -3715 3716 0
-3716 3715 0
-3716 -3713 0
c Var 'max_left_00002_00009_00009' order represents '8' with '3717'
-3715 3717 0
c Var 'max_left_00002_00009_00009' direct represents '8' with '3718'
3715 -3717 3718 0
-3718 3717 0
-3718 -3715 0
c Var 'max_left_00002_00009_00009' direct represents '9' with '-3717'
3704 3706 3708 3710 3712 3714 3716 3718 -3717 0
c Encoding variable: max_left_00003_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00001_00000' direct represents '0' with '3719'
3719 0
c Encoding variable: max_left_00003_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00001' order represents '1' with '3720'
c Var 'max_left_00003_00001_00001' direct represents '1' with '3720'
c Var 'max_left_00003_00001_00001' order represents '2' with '3721'
-3720 3721 0
c Var 'max_left_00003_00001_00001' direct represents '2' with '3722'
3720 -3721 3722 0
-3722 3721 0
-3722 -3720 0
c Var 'max_left_00003_00001_00001' order represents '3' with '3723'
-3721 3723 0
c Var 'max_left_00003_00001_00001' direct represents '3' with '3724'
3721 -3723 3724 0
-3724 3723 0
-3724 -3721 0
c Var 'max_left_00003_00001_00001' order represents '4' with '3725'
-3723 3725 0
c Var 'max_left_00003_00001_00001' direct represents '4' with '3726'
3723 -3725 3726 0
-3726 3725 0
-3726 -3723 0
c Var 'max_left_00003_00001_00001' order represents '5' with '3727'
-3725 3727 0
c Var 'max_left_00003_00001_00001' direct represents '5' with '3728'
3725 -3727 3728 0
-3728 3727 0
-3728 -3725 0
c Var 'max_left_00003_00001_00001' order represents '6' with '3729'
-3727 3729 0
c Var 'max_left_00003_00001_00001' direct represents '6' with '3730'
3727 -3729 3730 0
-3730 3729 0
-3730 -3727 0
c Var 'max_left_00003_00001_00001' order represents '7' with '3731'
-3729 3731 0
c Var 'max_left_00003_00001_00001' direct represents '7' with '3732'
3729 -3731 3732 0
-3732 3731 0
-3732 -3729 0
c Var 'max_left_00003_00001_00001' order represents '8' with '3733'
-3731 3733 0
c Var 'max_left_00003_00001_00001' direct represents '8' with '3734'
3731 -3733 3734 0
-3734 3733 0
-3734 -3731 0
c Var 'max_left_00003_00001_00001' direct represents '9' with '-3733'
3720 3722 3724 3726 3728 3730 3732 3734 -3733 0
c Encoding variable: max_left_00003_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00002' order represents '1' with '3735'
c Var 'max_left_00003_00001_00002' direct represents '1' with '3735'
c Var 'max_left_00003_00001_00002' order represents '2' with '3736'
-3735 3736 0
c Var 'max_left_00003_00001_00002' direct represents '2' with '3737'
3735 -3736 3737 0
-3737 3736 0
-3737 -3735 0
c Var 'max_left_00003_00001_00002' order represents '3' with '3738'
-3736 3738 0
c Var 'max_left_00003_00001_00002' direct represents '3' with '3739'
3736 -3738 3739 0
-3739 3738 0
-3739 -3736 0
c Var 'max_left_00003_00001_00002' order represents '4' with '3740'
-3738 3740 0
c Var 'max_left_00003_00001_00002' direct represents '4' with '3741'
3738 -3740 3741 0
-3741 3740 0
-3741 -3738 0
c Var 'max_left_00003_00001_00002' order represents '5' with '3742'
-3740 3742 0
c Var 'max_left_00003_00001_00002' direct represents '5' with '3743'
3740 -3742 3743 0
-3743 3742 0
-3743 -3740 0
c Var 'max_left_00003_00001_00002' order represents '6' with '3744'
-3742 3744 0
c Var 'max_left_00003_00001_00002' direct represents '6' with '3745'
3742 -3744 3745 0
-3745 3744 0
-3745 -3742 0
c Var 'max_left_00003_00001_00002' order represents '7' with '3746'
-3744 3746 0
c Var 'max_left_00003_00001_00002' direct represents '7' with '3747'
3744 -3746 3747 0
-3747 3746 0
-3747 -3744 0
c Var 'max_left_00003_00001_00002' order represents '8' with '3748'
-3746 3748 0
c Var 'max_left_00003_00001_00002' direct represents '8' with '3749'
3746 -3748 3749 0
-3749 3748 0
-3749 -3746 0
c Var 'max_left_00003_00001_00002' direct represents '9' with '-3748'
3735 3737 3739 3741 3743 3745 3747 3749 -3748 0
c Encoding variable: max_left_00003_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00003' order represents '1' with '3750'
c Var 'max_left_00003_00001_00003' direct represents '1' with '3750'
c Var 'max_left_00003_00001_00003' order represents '2' with '3751'
-3750 3751 0
c Var 'max_left_00003_00001_00003' direct represents '2' with '3752'
3750 -3751 3752 0
-3752 3751 0
-3752 -3750 0
c Var 'max_left_00003_00001_00003' order represents '3' with '3753'
-3751 3753 0
c Var 'max_left_00003_00001_00003' direct represents '3' with '3754'
3751 -3753 3754 0
-3754 3753 0
-3754 -3751 0
c Var 'max_left_00003_00001_00003' order represents '4' with '3755'
-3753 3755 0
c Var 'max_left_00003_00001_00003' direct represents '4' with '3756'
3753 -3755 3756 0
-3756 3755 0
-3756 -3753 0
c Var 'max_left_00003_00001_00003' order represents '5' with '3757'
-3755 3757 0
c Var 'max_left_00003_00001_00003' direct represents '5' with '3758'
3755 -3757 3758 0
-3758 3757 0
-3758 -3755 0
c Var 'max_left_00003_00001_00003' order represents '6' with '3759'
-3757 3759 0
c Var 'max_left_00003_00001_00003' direct represents '6' with '3760'
3757 -3759 3760 0
-3760 3759 0
-3760 -3757 0
c Var 'max_left_00003_00001_00003' order represents '7' with '3761'
-3759 3761 0
c Var 'max_left_00003_00001_00003' direct represents '7' with '3762'
3759 -3761 3762 0
-3762 3761 0
-3762 -3759 0
c Var 'max_left_00003_00001_00003' order represents '8' with '3763'
-3761 3763 0
c Var 'max_left_00003_00001_00003' direct represents '8' with '3764'
3761 -3763 3764 0
-3764 3763 0
-3764 -3761 0
c Var 'max_left_00003_00001_00003' direct represents '9' with '-3763'
3750 3752 3754 3756 3758 3760 3762 3764 -3763 0
c Encoding variable: max_left_00003_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00004' order represents '1' with '3765'
c Var 'max_left_00003_00001_00004' direct represents '1' with '3765'
c Var 'max_left_00003_00001_00004' order represents '2' with '3766'
-3765 3766 0
c Var 'max_left_00003_00001_00004' direct represents '2' with '3767'
3765 -3766 3767 0
-3767 3766 0
-3767 -3765 0
c Var 'max_left_00003_00001_00004' order represents '3' with '3768'
-3766 3768 0
c Var 'max_left_00003_00001_00004' direct represents '3' with '3769'
3766 -3768 3769 0
-3769 3768 0
-3769 -3766 0
c Var 'max_left_00003_00001_00004' order represents '4' with '3770'
-3768 3770 0
c Var 'max_left_00003_00001_00004' direct represents '4' with '3771'
3768 -3770 3771 0
-3771 3770 0
-3771 -3768 0
c Var 'max_left_00003_00001_00004' order represents '5' with '3772'
-3770 3772 0
c Var 'max_left_00003_00001_00004' direct represents '5' with '3773'
3770 -3772 3773 0
-3773 3772 0
-3773 -3770 0
c Var 'max_left_00003_00001_00004' order represents '6' with '3774'
-3772 3774 0
c Var 'max_left_00003_00001_00004' direct represents '6' with '3775'
3772 -3774 3775 0
-3775 3774 0
-3775 -3772 0
c Var 'max_left_00003_00001_00004' order represents '7' with '3776'
-3774 3776 0
c Var 'max_left_00003_00001_00004' direct represents '7' with '3777'
3774 -3776 3777 0
-3777 3776 0
-3777 -3774 0
c Var 'max_left_00003_00001_00004' order represents '8' with '3778'
-3776 3778 0
c Var 'max_left_00003_00001_00004' direct represents '8' with '3779'
3776 -3778 3779 0
-3779 3778 0
-3779 -3776 0
c Var 'max_left_00003_00001_00004' direct represents '9' with '-3778'
3765 3767 3769 3771 3773 3775 3777 3779 -3778 0
c Encoding variable: max_left_00003_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00005' order represents '1' with '3780'
c Var 'max_left_00003_00001_00005' direct represents '1' with '3780'
c Var 'max_left_00003_00001_00005' order represents '2' with '3781'
-3780 3781 0
c Var 'max_left_00003_00001_00005' direct represents '2' with '3782'
3780 -3781 3782 0
-3782 3781 0
-3782 -3780 0
c Var 'max_left_00003_00001_00005' order represents '3' with '3783'
-3781 3783 0
c Var 'max_left_00003_00001_00005' direct represents '3' with '3784'
3781 -3783 3784 0
-3784 3783 0
-3784 -3781 0
c Var 'max_left_00003_00001_00005' order represents '4' with '3785'
-3783 3785 0
c Var 'max_left_00003_00001_00005' direct represents '4' with '3786'
3783 -3785 3786 0
-3786 3785 0
-3786 -3783 0
c Var 'max_left_00003_00001_00005' order represents '5' with '3787'
-3785 3787 0
c Var 'max_left_00003_00001_00005' direct represents '5' with '3788'
3785 -3787 3788 0
-3788 3787 0
-3788 -3785 0
c Var 'max_left_00003_00001_00005' order represents '6' with '3789'
-3787 3789 0
c Var 'max_left_00003_00001_00005' direct represents '6' with '3790'
3787 -3789 3790 0
-3790 3789 0
-3790 -3787 0
c Var 'max_left_00003_00001_00005' order represents '7' with '3791'
-3789 3791 0
c Var 'max_left_00003_00001_00005' direct represents '7' with '3792'
3789 -3791 3792 0
-3792 3791 0
-3792 -3789 0
c Var 'max_left_00003_00001_00005' order represents '8' with '3793'
-3791 3793 0
c Var 'max_left_00003_00001_00005' direct represents '8' with '3794'
3791 -3793 3794 0
-3794 3793 0
-3794 -3791 0
c Var 'max_left_00003_00001_00005' direct represents '9' with '-3793'
3780 3782 3784 3786 3788 3790 3792 3794 -3793 0
c Encoding variable: max_left_00003_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00006' order represents '1' with '3795'
c Var 'max_left_00003_00001_00006' direct represents '1' with '3795'
c Var 'max_left_00003_00001_00006' order represents '2' with '3796'
-3795 3796 0
c Var 'max_left_00003_00001_00006' direct represents '2' with '3797'
3795 -3796 3797 0
-3797 3796 0
-3797 -3795 0
c Var 'max_left_00003_00001_00006' order represents '3' with '3798'
-3796 3798 0
c Var 'max_left_00003_00001_00006' direct represents '3' with '3799'
3796 -3798 3799 0
-3799 3798 0
-3799 -3796 0
c Var 'max_left_00003_00001_00006' order represents '4' with '3800'
-3798 3800 0
c Var 'max_left_00003_00001_00006' direct represents '4' with '3801'
3798 -3800 3801 0
-3801 3800 0
-3801 -3798 0
c Var 'max_left_00003_00001_00006' order represents '5' with '3802'
-3800 3802 0
c Var 'max_left_00003_00001_00006' direct represents '5' with '3803'
3800 -3802 3803 0
-3803 3802 0
-3803 -3800 0
c Var 'max_left_00003_00001_00006' order represents '6' with '3804'
-3802 3804 0
c Var 'max_left_00003_00001_00006' direct represents '6' with '3805'
3802 -3804 3805 0
-3805 3804 0
-3805 -3802 0
c Var 'max_left_00003_00001_00006' order represents '7' with '3806'
-3804 3806 0
c Var 'max_left_00003_00001_00006' direct represents '7' with '3807'
3804 -3806 3807 0
-3807 3806 0
-3807 -3804 0
c Var 'max_left_00003_00001_00006' order represents '8' with '3808'
-3806 3808 0
c Var 'max_left_00003_00001_00006' direct represents '8' with '3809'
3806 -3808 3809 0
-3809 3808 0
-3809 -3806 0
c Var 'max_left_00003_00001_00006' direct represents '9' with '-3808'
3795 3797 3799 3801 3803 3805 3807 3809 -3808 0
c Encoding variable: max_left_00003_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00007' order represents '1' with '3810'
c Var 'max_left_00003_00001_00007' direct represents '1' with '3810'
c Var 'max_left_00003_00001_00007' order represents '2' with '3811'
-3810 3811 0
c Var 'max_left_00003_00001_00007' direct represents '2' with '3812'
3810 -3811 3812 0
-3812 3811 0
-3812 -3810 0
c Var 'max_left_00003_00001_00007' order represents '3' with '3813'
-3811 3813 0
c Var 'max_left_00003_00001_00007' direct represents '3' with '3814'
3811 -3813 3814 0
-3814 3813 0
-3814 -3811 0
c Var 'max_left_00003_00001_00007' order represents '4' with '3815'
-3813 3815 0
c Var 'max_left_00003_00001_00007' direct represents '4' with '3816'
3813 -3815 3816 0
-3816 3815 0
-3816 -3813 0
c Var 'max_left_00003_00001_00007' order represents '5' with '3817'
-3815 3817 0
c Var 'max_left_00003_00001_00007' direct represents '5' with '3818'
3815 -3817 3818 0
-3818 3817 0
-3818 -3815 0
c Var 'max_left_00003_00001_00007' order represents '6' with '3819'
-3817 3819 0
c Var 'max_left_00003_00001_00007' direct represents '6' with '3820'
3817 -3819 3820 0
-3820 3819 0
-3820 -3817 0
c Var 'max_left_00003_00001_00007' order represents '7' with '3821'
-3819 3821 0
c Var 'max_left_00003_00001_00007' direct represents '7' with '3822'
3819 -3821 3822 0
-3822 3821 0
-3822 -3819 0
c Var 'max_left_00003_00001_00007' order represents '8' with '3823'
-3821 3823 0
c Var 'max_left_00003_00001_00007' direct represents '8' with '3824'
3821 -3823 3824 0
-3824 3823 0
-3824 -3821 0
c Var 'max_left_00003_00001_00007' direct represents '9' with '-3823'
3810 3812 3814 3816 3818 3820 3822 3824 -3823 0
c Encoding variable: max_left_00003_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00008' order represents '1' with '3825'
c Var 'max_left_00003_00001_00008' direct represents '1' with '3825'
c Var 'max_left_00003_00001_00008' order represents '2' with '3826'
-3825 3826 0
c Var 'max_left_00003_00001_00008' direct represents '2' with '3827'
3825 -3826 3827 0
-3827 3826 0
-3827 -3825 0
c Var 'max_left_00003_00001_00008' order represents '3' with '3828'
-3826 3828 0
c Var 'max_left_00003_00001_00008' direct represents '3' with '3829'
3826 -3828 3829 0
-3829 3828 0
-3829 -3826 0
c Var 'max_left_00003_00001_00008' order represents '4' with '3830'
-3828 3830 0
c Var 'max_left_00003_00001_00008' direct represents '4' with '3831'
3828 -3830 3831 0
-3831 3830 0
-3831 -3828 0
c Var 'max_left_00003_00001_00008' order represents '5' with '3832'
-3830 3832 0
c Var 'max_left_00003_00001_00008' direct represents '5' with '3833'
3830 -3832 3833 0
-3833 3832 0
-3833 -3830 0
c Var 'max_left_00003_00001_00008' order represents '6' with '3834'
-3832 3834 0
c Var 'max_left_00003_00001_00008' direct represents '6' with '3835'
3832 -3834 3835 0
-3835 3834 0
-3835 -3832 0
c Var 'max_left_00003_00001_00008' order represents '7' with '3836'
-3834 3836 0
c Var 'max_left_00003_00001_00008' direct represents '7' with '3837'
3834 -3836 3837 0
-3837 3836 0
-3837 -3834 0
c Var 'max_left_00003_00001_00008' order represents '8' with '3838'
-3836 3838 0
c Var 'max_left_00003_00001_00008' direct represents '8' with '3839'
3836 -3838 3839 0
-3839 3838 0
-3839 -3836 0
c Var 'max_left_00003_00001_00008' direct represents '9' with '-3838'
3825 3827 3829 3831 3833 3835 3837 3839 -3838 0
c Encoding variable: max_left_00003_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00001_00009' order represents '1' with '3840'
c Var 'max_left_00003_00001_00009' direct represents '1' with '3840'
c Var 'max_left_00003_00001_00009' order represents '2' with '3841'
-3840 3841 0
c Var 'max_left_00003_00001_00009' direct represents '2' with '3842'
3840 -3841 3842 0
-3842 3841 0
-3842 -3840 0
c Var 'max_left_00003_00001_00009' order represents '3' with '3843'
-3841 3843 0
c Var 'max_left_00003_00001_00009' direct represents '3' with '3844'
3841 -3843 3844 0
-3844 3843 0
-3844 -3841 0
c Var 'max_left_00003_00001_00009' order represents '4' with '3845'
-3843 3845 0
c Var 'max_left_00003_00001_00009' direct represents '4' with '3846'
3843 -3845 3846 0
-3846 3845 0
-3846 -3843 0
c Var 'max_left_00003_00001_00009' order represents '5' with '3847'
-3845 3847 0
c Var 'max_left_00003_00001_00009' direct represents '5' with '3848'
3845 -3847 3848 0
-3848 3847 0
-3848 -3845 0
c Var 'max_left_00003_00001_00009' order represents '6' with '3849'
-3847 3849 0
c Var 'max_left_00003_00001_00009' direct represents '6' with '3850'
3847 -3849 3850 0
-3850 3849 0
-3850 -3847 0
c Var 'max_left_00003_00001_00009' order represents '7' with '3851'
-3849 3851 0
c Var 'max_left_00003_00001_00009' direct represents '7' with '3852'
3849 -3851 3852 0
-3852 3851 0
-3852 -3849 0
c Var 'max_left_00003_00001_00009' order represents '8' with '3853'
-3851 3853 0
c Var 'max_left_00003_00001_00009' direct represents '8' with '3854'
3851 -3853 3854 0
-3854 3853 0
-3854 -3851 0
c Var 'max_left_00003_00001_00009' direct represents '9' with '-3853'
3840 3842 3844 3846 3848 3850 3852 3854 -3853 0
c Encoding variable: max_left_00003_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00002_00000' direct represents '0' with '3855'
3855 0
c Encoding variable: max_left_00003_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00001' order represents '1' with '3856'
c Var 'max_left_00003_00002_00001' direct represents '1' with '3856'
c Var 'max_left_00003_00002_00001' order represents '2' with '3857'
-3856 3857 0
c Var 'max_left_00003_00002_00001' direct represents '2' with '3858'
3856 -3857 3858 0
-3858 3857 0
-3858 -3856 0
c Var 'max_left_00003_00002_00001' order represents '3' with '3859'
-3857 3859 0
c Var 'max_left_00003_00002_00001' direct represents '3' with '3860'
3857 -3859 3860 0
-3860 3859 0
-3860 -3857 0
c Var 'max_left_00003_00002_00001' order represents '4' with '3861'
-3859 3861 0
c Var 'max_left_00003_00002_00001' direct represents '4' with '3862'
3859 -3861 3862 0
-3862 3861 0
-3862 -3859 0
c Var 'max_left_00003_00002_00001' order represents '5' with '3863'
-3861 3863 0
c Var 'max_left_00003_00002_00001' direct represents '5' with '3864'
3861 -3863 3864 0
-3864 3863 0
-3864 -3861 0
c Var 'max_left_00003_00002_00001' order represents '6' with '3865'
-3863 3865 0
c Var 'max_left_00003_00002_00001' direct represents '6' with '3866'
3863 -3865 3866 0
-3866 3865 0
-3866 -3863 0
c Var 'max_left_00003_00002_00001' order represents '7' with '3867'
-3865 3867 0
c Var 'max_left_00003_00002_00001' direct represents '7' with '3868'
3865 -3867 3868 0
-3868 3867 0
-3868 -3865 0
c Var 'max_left_00003_00002_00001' order represents '8' with '3869'
-3867 3869 0
c Var 'max_left_00003_00002_00001' direct represents '8' with '3870'
3867 -3869 3870 0
-3870 3869 0
-3870 -3867 0
c Var 'max_left_00003_00002_00001' direct represents '9' with '-3869'
3856 3858 3860 3862 3864 3866 3868 3870 -3869 0
c Encoding variable: max_left_00003_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00002' order represents '1' with '3871'
c Var 'max_left_00003_00002_00002' direct represents '1' with '3871'
c Var 'max_left_00003_00002_00002' order represents '2' with '3872'
-3871 3872 0
c Var 'max_left_00003_00002_00002' direct represents '2' with '3873'
3871 -3872 3873 0
-3873 3872 0
-3873 -3871 0
c Var 'max_left_00003_00002_00002' order represents '3' with '3874'
-3872 3874 0
c Var 'max_left_00003_00002_00002' direct represents '3' with '3875'
3872 -3874 3875 0
-3875 3874 0
-3875 -3872 0
c Var 'max_left_00003_00002_00002' order represents '4' with '3876'
-3874 3876 0
c Var 'max_left_00003_00002_00002' direct represents '4' with '3877'
3874 -3876 3877 0
-3877 3876 0
-3877 -3874 0
c Var 'max_left_00003_00002_00002' order represents '5' with '3878'
-3876 3878 0
c Var 'max_left_00003_00002_00002' direct represents '5' with '3879'
3876 -3878 3879 0
-3879 3878 0
-3879 -3876 0
c Var 'max_left_00003_00002_00002' order represents '6' with '3880'
-3878 3880 0
c Var 'max_left_00003_00002_00002' direct represents '6' with '3881'
3878 -3880 3881 0
-3881 3880 0
-3881 -3878 0
c Var 'max_left_00003_00002_00002' order represents '7' with '3882'
-3880 3882 0
c Var 'max_left_00003_00002_00002' direct represents '7' with '3883'
3880 -3882 3883 0
-3883 3882 0
-3883 -3880 0
c Var 'max_left_00003_00002_00002' order represents '8' with '3884'
-3882 3884 0
c Var 'max_left_00003_00002_00002' direct represents '8' with '3885'
3882 -3884 3885 0
-3885 3884 0
-3885 -3882 0
c Var 'max_left_00003_00002_00002' direct represents '9' with '-3884'
3871 3873 3875 3877 3879 3881 3883 3885 -3884 0
c Encoding variable: max_left_00003_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00003' order represents '1' with '3886'
c Var 'max_left_00003_00002_00003' direct represents '1' with '3886'
c Var 'max_left_00003_00002_00003' order represents '2' with '3887'
-3886 3887 0
c Var 'max_left_00003_00002_00003' direct represents '2' with '3888'
3886 -3887 3888 0
-3888 3887 0
-3888 -3886 0
c Var 'max_left_00003_00002_00003' order represents '3' with '3889'
-3887 3889 0
c Var 'max_left_00003_00002_00003' direct represents '3' with '3890'
3887 -3889 3890 0
-3890 3889 0
-3890 -3887 0
c Var 'max_left_00003_00002_00003' order represents '4' with '3891'
-3889 3891 0
c Var 'max_left_00003_00002_00003' direct represents '4' with '3892'
3889 -3891 3892 0
-3892 3891 0
-3892 -3889 0
c Var 'max_left_00003_00002_00003' order represents '5' with '3893'
-3891 3893 0
c Var 'max_left_00003_00002_00003' direct represents '5' with '3894'
3891 -3893 3894 0
-3894 3893 0
-3894 -3891 0
c Var 'max_left_00003_00002_00003' order represents '6' with '3895'
-3893 3895 0
c Var 'max_left_00003_00002_00003' direct represents '6' with '3896'
3893 -3895 3896 0
-3896 3895 0
-3896 -3893 0
c Var 'max_left_00003_00002_00003' order represents '7' with '3897'
-3895 3897 0
c Var 'max_left_00003_00002_00003' direct represents '7' with '3898'
3895 -3897 3898 0
-3898 3897 0
-3898 -3895 0
c Var 'max_left_00003_00002_00003' order represents '8' with '3899'
-3897 3899 0
c Var 'max_left_00003_00002_00003' direct represents '8' with '3900'
3897 -3899 3900 0
-3900 3899 0
-3900 -3897 0
c Var 'max_left_00003_00002_00003' direct represents '9' with '-3899'
3886 3888 3890 3892 3894 3896 3898 3900 -3899 0
c Encoding variable: max_left_00003_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00004' order represents '1' with '3901'
c Var 'max_left_00003_00002_00004' direct represents '1' with '3901'
c Var 'max_left_00003_00002_00004' order represents '2' with '3902'
-3901 3902 0
c Var 'max_left_00003_00002_00004' direct represents '2' with '3903'
3901 -3902 3903 0
-3903 3902 0
-3903 -3901 0
c Var 'max_left_00003_00002_00004' order represents '3' with '3904'
-3902 3904 0
c Var 'max_left_00003_00002_00004' direct represents '3' with '3905'
3902 -3904 3905 0
-3905 3904 0
-3905 -3902 0
c Var 'max_left_00003_00002_00004' order represents '4' with '3906'
-3904 3906 0
c Var 'max_left_00003_00002_00004' direct represents '4' with '3907'
3904 -3906 3907 0
-3907 3906 0
-3907 -3904 0
c Var 'max_left_00003_00002_00004' order represents '5' with '3908'
-3906 3908 0
c Var 'max_left_00003_00002_00004' direct represents '5' with '3909'
3906 -3908 3909 0
-3909 3908 0
-3909 -3906 0
c Var 'max_left_00003_00002_00004' order represents '6' with '3910'
-3908 3910 0
c Var 'max_left_00003_00002_00004' direct represents '6' with '3911'
3908 -3910 3911 0
-3911 3910 0
-3911 -3908 0
c Var 'max_left_00003_00002_00004' order represents '7' with '3912'
-3910 3912 0
c Var 'max_left_00003_00002_00004' direct represents '7' with '3913'
3910 -3912 3913 0
-3913 3912 0
-3913 -3910 0
c Var 'max_left_00003_00002_00004' order represents '8' with '3914'
-3912 3914 0
c Var 'max_left_00003_00002_00004' direct represents '8' with '3915'
3912 -3914 3915 0
-3915 3914 0
-3915 -3912 0
c Var 'max_left_00003_00002_00004' direct represents '9' with '-3914'
3901 3903 3905 3907 3909 3911 3913 3915 -3914 0
c Encoding variable: max_left_00003_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00005' order represents '1' with '3916'
c Var 'max_left_00003_00002_00005' direct represents '1' with '3916'
c Var 'max_left_00003_00002_00005' order represents '2' with '3917'
-3916 3917 0
c Var 'max_left_00003_00002_00005' direct represents '2' with '3918'
3916 -3917 3918 0
-3918 3917 0
-3918 -3916 0
c Var 'max_left_00003_00002_00005' order represents '3' with '3919'
-3917 3919 0
c Var 'max_left_00003_00002_00005' direct represents '3' with '3920'
3917 -3919 3920 0
-3920 3919 0
-3920 -3917 0
c Var 'max_left_00003_00002_00005' order represents '4' with '3921'
-3919 3921 0
c Var 'max_left_00003_00002_00005' direct represents '4' with '3922'
3919 -3921 3922 0
-3922 3921 0
-3922 -3919 0
c Var 'max_left_00003_00002_00005' order represents '5' with '3923'
-3921 3923 0
c Var 'max_left_00003_00002_00005' direct represents '5' with '3924'
3921 -3923 3924 0
-3924 3923 0
-3924 -3921 0
c Var 'max_left_00003_00002_00005' order represents '6' with '3925'
-3923 3925 0
c Var 'max_left_00003_00002_00005' direct represents '6' with '3926'
3923 -3925 3926 0
-3926 3925 0
-3926 -3923 0
c Var 'max_left_00003_00002_00005' order represents '7' with '3927'
-3925 3927 0
c Var 'max_left_00003_00002_00005' direct represents '7' with '3928'
3925 -3927 3928 0
-3928 3927 0
-3928 -3925 0
c Var 'max_left_00003_00002_00005' order represents '8' with '3929'
-3927 3929 0
c Var 'max_left_00003_00002_00005' direct represents '8' with '3930'
3927 -3929 3930 0
-3930 3929 0
-3930 -3927 0
c Var 'max_left_00003_00002_00005' direct represents '9' with '-3929'
3916 3918 3920 3922 3924 3926 3928 3930 -3929 0
c Encoding variable: max_left_00003_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00006' order represents '1' with '3931'
c Var 'max_left_00003_00002_00006' direct represents '1' with '3931'
c Var 'max_left_00003_00002_00006' order represents '2' with '3932'
-3931 3932 0
c Var 'max_left_00003_00002_00006' direct represents '2' with '3933'
3931 -3932 3933 0
-3933 3932 0
-3933 -3931 0
c Var 'max_left_00003_00002_00006' order represents '3' with '3934'
-3932 3934 0
c Var 'max_left_00003_00002_00006' direct represents '3' with '3935'
3932 -3934 3935 0
-3935 3934 0
-3935 -3932 0
c Var 'max_left_00003_00002_00006' order represents '4' with '3936'
-3934 3936 0
c Var 'max_left_00003_00002_00006' direct represents '4' with '3937'
3934 -3936 3937 0
-3937 3936 0
-3937 -3934 0
c Var 'max_left_00003_00002_00006' order represents '5' with '3938'
-3936 3938 0
c Var 'max_left_00003_00002_00006' direct represents '5' with '3939'
3936 -3938 3939 0
-3939 3938 0
-3939 -3936 0
c Var 'max_left_00003_00002_00006' order represents '6' with '3940'
-3938 3940 0
c Var 'max_left_00003_00002_00006' direct represents '6' with '3941'
3938 -3940 3941 0
-3941 3940 0
-3941 -3938 0
c Var 'max_left_00003_00002_00006' order represents '7' with '3942'
-3940 3942 0
c Var 'max_left_00003_00002_00006' direct represents '7' with '3943'
3940 -3942 3943 0
-3943 3942 0
-3943 -3940 0
c Var 'max_left_00003_00002_00006' order represents '8' with '3944'
-3942 3944 0
c Var 'max_left_00003_00002_00006' direct represents '8' with '3945'
3942 -3944 3945 0
-3945 3944 0
-3945 -3942 0
c Var 'max_left_00003_00002_00006' direct represents '9' with '-3944'
3931 3933 3935 3937 3939 3941 3943 3945 -3944 0
c Encoding variable: max_left_00003_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00007' order represents '1' with '3946'
c Var 'max_left_00003_00002_00007' direct represents '1' with '3946'
c Var 'max_left_00003_00002_00007' order represents '2' with '3947'
-3946 3947 0
c Var 'max_left_00003_00002_00007' direct represents '2' with '3948'
3946 -3947 3948 0
-3948 3947 0
-3948 -3946 0
c Var 'max_left_00003_00002_00007' order represents '3' with '3949'
-3947 3949 0
c Var 'max_left_00003_00002_00007' direct represents '3' with '3950'
3947 -3949 3950 0
-3950 3949 0
-3950 -3947 0
c Var 'max_left_00003_00002_00007' order represents '4' with '3951'
-3949 3951 0
c Var 'max_left_00003_00002_00007' direct represents '4' with '3952'
3949 -3951 3952 0
-3952 3951 0
-3952 -3949 0
c Var 'max_left_00003_00002_00007' order represents '5' with '3953'
-3951 3953 0
c Var 'max_left_00003_00002_00007' direct represents '5' with '3954'
3951 -3953 3954 0
-3954 3953 0
-3954 -3951 0
c Var 'max_left_00003_00002_00007' order represents '6' with '3955'
-3953 3955 0
c Var 'max_left_00003_00002_00007' direct represents '6' with '3956'
3953 -3955 3956 0
-3956 3955 0
-3956 -3953 0
c Var 'max_left_00003_00002_00007' order represents '7' with '3957'
-3955 3957 0
c Var 'max_left_00003_00002_00007' direct represents '7' with '3958'
3955 -3957 3958 0
-3958 3957 0
-3958 -3955 0
c Var 'max_left_00003_00002_00007' order represents '8' with '3959'
-3957 3959 0
c Var 'max_left_00003_00002_00007' direct represents '8' with '3960'
3957 -3959 3960 0
-3960 3959 0
-3960 -3957 0
c Var 'max_left_00003_00002_00007' direct represents '9' with '-3959'
3946 3948 3950 3952 3954 3956 3958 3960 -3959 0
c Encoding variable: max_left_00003_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00008' order represents '1' with '3961'
c Var 'max_left_00003_00002_00008' direct represents '1' with '3961'
c Var 'max_left_00003_00002_00008' order represents '2' with '3962'
-3961 3962 0
c Var 'max_left_00003_00002_00008' direct represents '2' with '3963'
3961 -3962 3963 0
-3963 3962 0
-3963 -3961 0
c Var 'max_left_00003_00002_00008' order represents '3' with '3964'
-3962 3964 0
c Var 'max_left_00003_00002_00008' direct represents '3' with '3965'
3962 -3964 3965 0
-3965 3964 0
-3965 -3962 0
c Var 'max_left_00003_00002_00008' order represents '4' with '3966'
-3964 3966 0
c Var 'max_left_00003_00002_00008' direct represents '4' with '3967'
3964 -3966 3967 0
-3967 3966 0
-3967 -3964 0
c Var 'max_left_00003_00002_00008' order represents '5' with '3968'
-3966 3968 0
c Var 'max_left_00003_00002_00008' direct represents '5' with '3969'
3966 -3968 3969 0
-3969 3968 0
-3969 -3966 0
c Var 'max_left_00003_00002_00008' order represents '6' with '3970'
-3968 3970 0
c Var 'max_left_00003_00002_00008' direct represents '6' with '3971'
3968 -3970 3971 0
-3971 3970 0
-3971 -3968 0
c Var 'max_left_00003_00002_00008' order represents '7' with '3972'
-3970 3972 0
c Var 'max_left_00003_00002_00008' direct represents '7' with '3973'
3970 -3972 3973 0
-3973 3972 0
-3973 -3970 0
c Var 'max_left_00003_00002_00008' order represents '8' with '3974'
-3972 3974 0
c Var 'max_left_00003_00002_00008' direct represents '8' with '3975'
3972 -3974 3975 0
-3975 3974 0
-3975 -3972 0
c Var 'max_left_00003_00002_00008' direct represents '9' with '-3974'
3961 3963 3965 3967 3969 3971 3973 3975 -3974 0
c Encoding variable: max_left_00003_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00002_00009' order represents '1' with '3976'
c Var 'max_left_00003_00002_00009' direct represents '1' with '3976'
c Var 'max_left_00003_00002_00009' order represents '2' with '3977'
-3976 3977 0
c Var 'max_left_00003_00002_00009' direct represents '2' with '3978'
3976 -3977 3978 0
-3978 3977 0
-3978 -3976 0
c Var 'max_left_00003_00002_00009' order represents '3' with '3979'
-3977 3979 0
c Var 'max_left_00003_00002_00009' direct represents '3' with '3980'
3977 -3979 3980 0
-3980 3979 0
-3980 -3977 0
c Var 'max_left_00003_00002_00009' order represents '4' with '3981'
-3979 3981 0
c Var 'max_left_00003_00002_00009' direct represents '4' with '3982'
3979 -3981 3982 0
-3982 3981 0
-3982 -3979 0
c Var 'max_left_00003_00002_00009' order represents '5' with '3983'
-3981 3983 0
c Var 'max_left_00003_00002_00009' direct represents '5' with '3984'
3981 -3983 3984 0
-3984 3983 0
-3984 -3981 0
c Var 'max_left_00003_00002_00009' order represents '6' with '3985'
-3983 3985 0
c Var 'max_left_00003_00002_00009' direct represents '6' with '3986'
3983 -3985 3986 0
-3986 3985 0
-3986 -3983 0
c Var 'max_left_00003_00002_00009' order represents '7' with '3987'
-3985 3987 0
c Var 'max_left_00003_00002_00009' direct represents '7' with '3988'
3985 -3987 3988 0
-3988 3987 0
-3988 -3985 0
c Var 'max_left_00003_00002_00009' order represents '8' with '3989'
-3987 3989 0
c Var 'max_left_00003_00002_00009' direct represents '8' with '3990'
3987 -3989 3990 0
-3990 3989 0
-3990 -3987 0
c Var 'max_left_00003_00002_00009' direct represents '9' with '-3989'
3976 3978 3980 3982 3984 3986 3988 3990 -3989 0
c Encoding variable: max_left_00003_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00003_00000' direct represents '0' with '3991'
3991 0
c Encoding variable: max_left_00003_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00001' order represents '1' with '3992'
c Var 'max_left_00003_00003_00001' direct represents '1' with '3992'
c Var 'max_left_00003_00003_00001' order represents '2' with '3993'
-3992 3993 0
c Var 'max_left_00003_00003_00001' direct represents '2' with '3994'
3992 -3993 3994 0
-3994 3993 0
-3994 -3992 0
c Var 'max_left_00003_00003_00001' order represents '3' with '3995'
-3993 3995 0
c Var 'max_left_00003_00003_00001' direct represents '3' with '3996'
3993 -3995 3996 0
-3996 3995 0
-3996 -3993 0
c Var 'max_left_00003_00003_00001' order represents '4' with '3997'
-3995 3997 0
c Var 'max_left_00003_00003_00001' direct represents '4' with '3998'
3995 -3997 3998 0
-3998 3997 0
-3998 -3995 0
c Var 'max_left_00003_00003_00001' order represents '5' with '3999'
-3997 3999 0
c Var 'max_left_00003_00003_00001' direct represents '5' with '4000'
3997 -3999 4000 0
-4000 3999 0
-4000 -3997 0
c Var 'max_left_00003_00003_00001' order represents '6' with '4001'
-3999 4001 0
c Var 'max_left_00003_00003_00001' direct represents '6' with '4002'
3999 -4001 4002 0
-4002 4001 0
-4002 -3999 0
c Var 'max_left_00003_00003_00001' order represents '7' with '4003'
-4001 4003 0
c Var 'max_left_00003_00003_00001' direct represents '7' with '4004'
4001 -4003 4004 0
-4004 4003 0
-4004 -4001 0
c Var 'max_left_00003_00003_00001' order represents '8' with '4005'
-4003 4005 0
c Var 'max_left_00003_00003_00001' direct represents '8' with '4006'
4003 -4005 4006 0
-4006 4005 0
-4006 -4003 0
c Var 'max_left_00003_00003_00001' direct represents '9' with '-4005'
3992 3994 3996 3998 4000 4002 4004 4006 -4005 0
c Encoding variable: max_left_00003_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00002' order represents '1' with '4007'
c Var 'max_left_00003_00003_00002' direct represents '1' with '4007'
c Var 'max_left_00003_00003_00002' order represents '2' with '4008'
-4007 4008 0
c Var 'max_left_00003_00003_00002' direct represents '2' with '4009'
4007 -4008 4009 0
-4009 4008 0
-4009 -4007 0
c Var 'max_left_00003_00003_00002' order represents '3' with '4010'
-4008 4010 0
c Var 'max_left_00003_00003_00002' direct represents '3' with '4011'
4008 -4010 4011 0
-4011 4010 0
-4011 -4008 0
c Var 'max_left_00003_00003_00002' order represents '4' with '4012'
-4010 4012 0
c Var 'max_left_00003_00003_00002' direct represents '4' with '4013'
4010 -4012 4013 0
-4013 4012 0
-4013 -4010 0
c Var 'max_left_00003_00003_00002' order represents '5' with '4014'
-4012 4014 0
c Var 'max_left_00003_00003_00002' direct represents '5' with '4015'
4012 -4014 4015 0
-4015 4014 0
-4015 -4012 0
c Var 'max_left_00003_00003_00002' order represents '6' with '4016'
-4014 4016 0
c Var 'max_left_00003_00003_00002' direct represents '6' with '4017'
4014 -4016 4017 0
-4017 4016 0
-4017 -4014 0
c Var 'max_left_00003_00003_00002' order represents '7' with '4018'
-4016 4018 0
c Var 'max_left_00003_00003_00002' direct represents '7' with '4019'
4016 -4018 4019 0
-4019 4018 0
-4019 -4016 0
c Var 'max_left_00003_00003_00002' order represents '8' with '4020'
-4018 4020 0
c Var 'max_left_00003_00003_00002' direct represents '8' with '4021'
4018 -4020 4021 0
-4021 4020 0
-4021 -4018 0
c Var 'max_left_00003_00003_00002' direct represents '9' with '-4020'
4007 4009 4011 4013 4015 4017 4019 4021 -4020 0
c Encoding variable: max_left_00003_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00003' order represents '1' with '4022'
c Var 'max_left_00003_00003_00003' direct represents '1' with '4022'
c Var 'max_left_00003_00003_00003' order represents '2' with '4023'
-4022 4023 0
c Var 'max_left_00003_00003_00003' direct represents '2' with '4024'
4022 -4023 4024 0
-4024 4023 0
-4024 -4022 0
c Var 'max_left_00003_00003_00003' order represents '3' with '4025'
-4023 4025 0
c Var 'max_left_00003_00003_00003' direct represents '3' with '4026'
4023 -4025 4026 0
-4026 4025 0
-4026 -4023 0
c Var 'max_left_00003_00003_00003' order represents '4' with '4027'
-4025 4027 0
c Var 'max_left_00003_00003_00003' direct represents '4' with '4028'
4025 -4027 4028 0
-4028 4027 0
-4028 -4025 0
c Var 'max_left_00003_00003_00003' order represents '5' with '4029'
-4027 4029 0
c Var 'max_left_00003_00003_00003' direct represents '5' with '4030'
4027 -4029 4030 0
-4030 4029 0
-4030 -4027 0
c Var 'max_left_00003_00003_00003' order represents '6' with '4031'
-4029 4031 0
c Var 'max_left_00003_00003_00003' direct represents '6' with '4032'
4029 -4031 4032 0
-4032 4031 0
-4032 -4029 0
c Var 'max_left_00003_00003_00003' order represents '7' with '4033'
-4031 4033 0
c Var 'max_left_00003_00003_00003' direct represents '7' with '4034'
4031 -4033 4034 0
-4034 4033 0
-4034 -4031 0
c Var 'max_left_00003_00003_00003' order represents '8' with '4035'
-4033 4035 0
c Var 'max_left_00003_00003_00003' direct represents '8' with '4036'
4033 -4035 4036 0
-4036 4035 0
-4036 -4033 0
c Var 'max_left_00003_00003_00003' direct represents '9' with '-4035'
4022 4024 4026 4028 4030 4032 4034 4036 -4035 0
c Encoding variable: max_left_00003_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00004' order represents '1' with '4037'
c Var 'max_left_00003_00003_00004' direct represents '1' with '4037'
c Var 'max_left_00003_00003_00004' order represents '2' with '4038'
-4037 4038 0
c Var 'max_left_00003_00003_00004' direct represents '2' with '4039'
4037 -4038 4039 0
-4039 4038 0
-4039 -4037 0
c Var 'max_left_00003_00003_00004' order represents '3' with '4040'
-4038 4040 0
c Var 'max_left_00003_00003_00004' direct represents '3' with '4041'
4038 -4040 4041 0
-4041 4040 0
-4041 -4038 0
c Var 'max_left_00003_00003_00004' order represents '4' with '4042'
-4040 4042 0
c Var 'max_left_00003_00003_00004' direct represents '4' with '4043'
4040 -4042 4043 0
-4043 4042 0
-4043 -4040 0
c Var 'max_left_00003_00003_00004' order represents '5' with '4044'
-4042 4044 0
c Var 'max_left_00003_00003_00004' direct represents '5' with '4045'
4042 -4044 4045 0
-4045 4044 0
-4045 -4042 0
c Var 'max_left_00003_00003_00004' order represents '6' with '4046'
-4044 4046 0
c Var 'max_left_00003_00003_00004' direct represents '6' with '4047'
4044 -4046 4047 0
-4047 4046 0
-4047 -4044 0
c Var 'max_left_00003_00003_00004' order represents '7' with '4048'
-4046 4048 0
c Var 'max_left_00003_00003_00004' direct represents '7' with '4049'
4046 -4048 4049 0
-4049 4048 0
-4049 -4046 0
c Var 'max_left_00003_00003_00004' order represents '8' with '4050'
-4048 4050 0
c Var 'max_left_00003_00003_00004' direct represents '8' with '4051'
4048 -4050 4051 0
-4051 4050 0
-4051 -4048 0
c Var 'max_left_00003_00003_00004' direct represents '9' with '-4050'
4037 4039 4041 4043 4045 4047 4049 4051 -4050 0
c Encoding variable: max_left_00003_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00005' order represents '1' with '4052'
c Var 'max_left_00003_00003_00005' direct represents '1' with '4052'
c Var 'max_left_00003_00003_00005' order represents '2' with '4053'
-4052 4053 0
c Var 'max_left_00003_00003_00005' direct represents '2' with '4054'
4052 -4053 4054 0
-4054 4053 0
-4054 -4052 0
c Var 'max_left_00003_00003_00005' order represents '3' with '4055'
-4053 4055 0
c Var 'max_left_00003_00003_00005' direct represents '3' with '4056'
4053 -4055 4056 0
-4056 4055 0
-4056 -4053 0
c Var 'max_left_00003_00003_00005' order represents '4' with '4057'
-4055 4057 0
c Var 'max_left_00003_00003_00005' direct represents '4' with '4058'
4055 -4057 4058 0
-4058 4057 0
-4058 -4055 0
c Var 'max_left_00003_00003_00005' order represents '5' with '4059'
-4057 4059 0
c Var 'max_left_00003_00003_00005' direct represents '5' with '4060'
4057 -4059 4060 0
-4060 4059 0
-4060 -4057 0
c Var 'max_left_00003_00003_00005' order represents '6' with '4061'
-4059 4061 0
c Var 'max_left_00003_00003_00005' direct represents '6' with '4062'
4059 -4061 4062 0
-4062 4061 0
-4062 -4059 0
c Var 'max_left_00003_00003_00005' order represents '7' with '4063'
-4061 4063 0
c Var 'max_left_00003_00003_00005' direct represents '7' with '4064'
4061 -4063 4064 0
-4064 4063 0
-4064 -4061 0
c Var 'max_left_00003_00003_00005' order represents '8' with '4065'
-4063 4065 0
c Var 'max_left_00003_00003_00005' direct represents '8' with '4066'
4063 -4065 4066 0
-4066 4065 0
-4066 -4063 0
c Var 'max_left_00003_00003_00005' direct represents '9' with '-4065'
4052 4054 4056 4058 4060 4062 4064 4066 -4065 0
c Encoding variable: max_left_00003_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00006' order represents '1' with '4067'
c Var 'max_left_00003_00003_00006' direct represents '1' with '4067'
c Var 'max_left_00003_00003_00006' order represents '2' with '4068'
-4067 4068 0
c Var 'max_left_00003_00003_00006' direct represents '2' with '4069'
4067 -4068 4069 0
-4069 4068 0
-4069 -4067 0
c Var 'max_left_00003_00003_00006' order represents '3' with '4070'
-4068 4070 0
c Var 'max_left_00003_00003_00006' direct represents '3' with '4071'
4068 -4070 4071 0
-4071 4070 0
-4071 -4068 0
c Var 'max_left_00003_00003_00006' order represents '4' with '4072'
-4070 4072 0
c Var 'max_left_00003_00003_00006' direct represents '4' with '4073'
4070 -4072 4073 0
-4073 4072 0
-4073 -4070 0
c Var 'max_left_00003_00003_00006' order represents '5' with '4074'
-4072 4074 0
c Var 'max_left_00003_00003_00006' direct represents '5' with '4075'
4072 -4074 4075 0
-4075 4074 0
-4075 -4072 0
c Var 'max_left_00003_00003_00006' order represents '6' with '4076'
-4074 4076 0
c Var 'max_left_00003_00003_00006' direct represents '6' with '4077'
4074 -4076 4077 0
-4077 4076 0
-4077 -4074 0
c Var 'max_left_00003_00003_00006' order represents '7' with '4078'
-4076 4078 0
c Var 'max_left_00003_00003_00006' direct represents '7' with '4079'
4076 -4078 4079 0
-4079 4078 0
-4079 -4076 0
c Var 'max_left_00003_00003_00006' order represents '8' with '4080'
-4078 4080 0
c Var 'max_left_00003_00003_00006' direct represents '8' with '4081'
4078 -4080 4081 0
-4081 4080 0
-4081 -4078 0
c Var 'max_left_00003_00003_00006' direct represents '9' with '-4080'
4067 4069 4071 4073 4075 4077 4079 4081 -4080 0
c Encoding variable: max_left_00003_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00007' order represents '1' with '4082'
c Var 'max_left_00003_00003_00007' direct represents '1' with '4082'
c Var 'max_left_00003_00003_00007' order represents '2' with '4083'
-4082 4083 0
c Var 'max_left_00003_00003_00007' direct represents '2' with '4084'
4082 -4083 4084 0
-4084 4083 0
-4084 -4082 0
c Var 'max_left_00003_00003_00007' order represents '3' with '4085'
-4083 4085 0
c Var 'max_left_00003_00003_00007' direct represents '3' with '4086'
4083 -4085 4086 0
-4086 4085 0
-4086 -4083 0
c Var 'max_left_00003_00003_00007' order represents '4' with '4087'
-4085 4087 0
c Var 'max_left_00003_00003_00007' direct represents '4' with '4088'
4085 -4087 4088 0
-4088 4087 0
-4088 -4085 0
c Var 'max_left_00003_00003_00007' order represents '5' with '4089'
-4087 4089 0
c Var 'max_left_00003_00003_00007' direct represents '5' with '4090'
4087 -4089 4090 0
-4090 4089 0
-4090 -4087 0
c Var 'max_left_00003_00003_00007' order represents '6' with '4091'
-4089 4091 0
c Var 'max_left_00003_00003_00007' direct represents '6' with '4092'
4089 -4091 4092 0
-4092 4091 0
-4092 -4089 0
c Var 'max_left_00003_00003_00007' order represents '7' with '4093'
-4091 4093 0
c Var 'max_left_00003_00003_00007' direct represents '7' with '4094'
4091 -4093 4094 0
-4094 4093 0
-4094 -4091 0
c Var 'max_left_00003_00003_00007' order represents '8' with '4095'
-4093 4095 0
c Var 'max_left_00003_00003_00007' direct represents '8' with '4096'
4093 -4095 4096 0
-4096 4095 0
-4096 -4093 0
c Var 'max_left_00003_00003_00007' direct represents '9' with '-4095'
4082 4084 4086 4088 4090 4092 4094 4096 -4095 0
c Encoding variable: max_left_00003_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00008' order represents '1' with '4097'
c Var 'max_left_00003_00003_00008' direct represents '1' with '4097'
c Var 'max_left_00003_00003_00008' order represents '2' with '4098'
-4097 4098 0
c Var 'max_left_00003_00003_00008' direct represents '2' with '4099'
4097 -4098 4099 0
-4099 4098 0
-4099 -4097 0
c Var 'max_left_00003_00003_00008' order represents '3' with '4100'
-4098 4100 0
c Var 'max_left_00003_00003_00008' direct represents '3' with '4101'
4098 -4100 4101 0
-4101 4100 0
-4101 -4098 0
c Var 'max_left_00003_00003_00008' order represents '4' with '4102'
-4100 4102 0
c Var 'max_left_00003_00003_00008' direct represents '4' with '4103'
4100 -4102 4103 0
-4103 4102 0
-4103 -4100 0
c Var 'max_left_00003_00003_00008' order represents '5' with '4104'
-4102 4104 0
c Var 'max_left_00003_00003_00008' direct represents '5' with '4105'
4102 -4104 4105 0
-4105 4104 0
-4105 -4102 0
c Var 'max_left_00003_00003_00008' order represents '6' with '4106'
-4104 4106 0
c Var 'max_left_00003_00003_00008' direct represents '6' with '4107'
4104 -4106 4107 0
-4107 4106 0
-4107 -4104 0
c Var 'max_left_00003_00003_00008' order represents '7' with '4108'
-4106 4108 0
c Var 'max_left_00003_00003_00008' direct represents '7' with '4109'
4106 -4108 4109 0
-4109 4108 0
-4109 -4106 0
c Var 'max_left_00003_00003_00008' order represents '8' with '4110'
-4108 4110 0
c Var 'max_left_00003_00003_00008' direct represents '8' with '4111'
4108 -4110 4111 0
-4111 4110 0
-4111 -4108 0
c Var 'max_left_00003_00003_00008' direct represents '9' with '-4110'
4097 4099 4101 4103 4105 4107 4109 4111 -4110 0
c Encoding variable: max_left_00003_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00003_00009' order represents '1' with '4112'
c Var 'max_left_00003_00003_00009' direct represents '1' with '4112'
c Var 'max_left_00003_00003_00009' order represents '2' with '4113'
-4112 4113 0
c Var 'max_left_00003_00003_00009' direct represents '2' with '4114'
4112 -4113 4114 0
-4114 4113 0
-4114 -4112 0
c Var 'max_left_00003_00003_00009' order represents '3' with '4115'
-4113 4115 0
c Var 'max_left_00003_00003_00009' direct represents '3' with '4116'
4113 -4115 4116 0
-4116 4115 0
-4116 -4113 0
c Var 'max_left_00003_00003_00009' order represents '4' with '4117'
-4115 4117 0
c Var 'max_left_00003_00003_00009' direct represents '4' with '4118'
4115 -4117 4118 0
-4118 4117 0
-4118 -4115 0
c Var 'max_left_00003_00003_00009' order represents '5' with '4119'
-4117 4119 0
c Var 'max_left_00003_00003_00009' direct represents '5' with '4120'
4117 -4119 4120 0
-4120 4119 0
-4120 -4117 0
c Var 'max_left_00003_00003_00009' order represents '6' with '4121'
-4119 4121 0
c Var 'max_left_00003_00003_00009' direct represents '6' with '4122'
4119 -4121 4122 0
-4122 4121 0
-4122 -4119 0
c Var 'max_left_00003_00003_00009' order represents '7' with '4123'
-4121 4123 0
c Var 'max_left_00003_00003_00009' direct represents '7' with '4124'
4121 -4123 4124 0
-4124 4123 0
-4124 -4121 0
c Var 'max_left_00003_00003_00009' order represents '8' with '4125'
-4123 4125 0
c Var 'max_left_00003_00003_00009' direct represents '8' with '4126'
4123 -4125 4126 0
-4126 4125 0
-4126 -4123 0
c Var 'max_left_00003_00003_00009' direct represents '9' with '-4125'
4112 4114 4116 4118 4120 4122 4124 4126 -4125 0
c Encoding variable: max_left_00003_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00004_00000' direct represents '0' with '4127'
4127 0
c Encoding variable: max_left_00003_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00001' order represents '1' with '4128'
c Var 'max_left_00003_00004_00001' direct represents '1' with '4128'
c Var 'max_left_00003_00004_00001' order represents '2' with '4129'
-4128 4129 0
c Var 'max_left_00003_00004_00001' direct represents '2' with '4130'
4128 -4129 4130 0
-4130 4129 0
-4130 -4128 0
c Var 'max_left_00003_00004_00001' order represents '3' with '4131'
-4129 4131 0
c Var 'max_left_00003_00004_00001' direct represents '3' with '4132'
4129 -4131 4132 0
-4132 4131 0
-4132 -4129 0
c Var 'max_left_00003_00004_00001' order represents '4' with '4133'
-4131 4133 0
c Var 'max_left_00003_00004_00001' direct represents '4' with '4134'
4131 -4133 4134 0
-4134 4133 0
-4134 -4131 0
c Var 'max_left_00003_00004_00001' order represents '5' with '4135'
-4133 4135 0
c Var 'max_left_00003_00004_00001' direct represents '5' with '4136'
4133 -4135 4136 0
-4136 4135 0
-4136 -4133 0
c Var 'max_left_00003_00004_00001' order represents '6' with '4137'
-4135 4137 0
c Var 'max_left_00003_00004_00001' direct represents '6' with '4138'
4135 -4137 4138 0
-4138 4137 0
-4138 -4135 0
c Var 'max_left_00003_00004_00001' order represents '7' with '4139'
-4137 4139 0
c Var 'max_left_00003_00004_00001' direct represents '7' with '4140'
4137 -4139 4140 0
-4140 4139 0
-4140 -4137 0
c Var 'max_left_00003_00004_00001' order represents '8' with '4141'
-4139 4141 0
c Var 'max_left_00003_00004_00001' direct represents '8' with '4142'
4139 -4141 4142 0
-4142 4141 0
-4142 -4139 0
c Var 'max_left_00003_00004_00001' direct represents '9' with '-4141'
4128 4130 4132 4134 4136 4138 4140 4142 -4141 0
c Encoding variable: max_left_00003_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00002' order represents '1' with '4143'
c Var 'max_left_00003_00004_00002' direct represents '1' with '4143'
c Var 'max_left_00003_00004_00002' order represents '2' with '4144'
-4143 4144 0
c Var 'max_left_00003_00004_00002' direct represents '2' with '4145'
4143 -4144 4145 0
-4145 4144 0
-4145 -4143 0
c Var 'max_left_00003_00004_00002' order represents '3' with '4146'
-4144 4146 0
c Var 'max_left_00003_00004_00002' direct represents '3' with '4147'
4144 -4146 4147 0
-4147 4146 0
-4147 -4144 0
c Var 'max_left_00003_00004_00002' order represents '4' with '4148'
-4146 4148 0
c Var 'max_left_00003_00004_00002' direct represents '4' with '4149'
4146 -4148 4149 0
-4149 4148 0
-4149 -4146 0
c Var 'max_left_00003_00004_00002' order represents '5' with '4150'
-4148 4150 0
c Var 'max_left_00003_00004_00002' direct represents '5' with '4151'
4148 -4150 4151 0
-4151 4150 0
-4151 -4148 0
c Var 'max_left_00003_00004_00002' order represents '6' with '4152'
-4150 4152 0
c Var 'max_left_00003_00004_00002' direct represents '6' with '4153'
4150 -4152 4153 0
-4153 4152 0
-4153 -4150 0
c Var 'max_left_00003_00004_00002' order represents '7' with '4154'
-4152 4154 0
c Var 'max_left_00003_00004_00002' direct represents '7' with '4155'
4152 -4154 4155 0
-4155 4154 0
-4155 -4152 0
c Var 'max_left_00003_00004_00002' order represents '8' with '4156'
-4154 4156 0
c Var 'max_left_00003_00004_00002' direct represents '8' with '4157'
4154 -4156 4157 0
-4157 4156 0
-4157 -4154 0
c Var 'max_left_00003_00004_00002' direct represents '9' with '-4156'
4143 4145 4147 4149 4151 4153 4155 4157 -4156 0
c Encoding variable: max_left_00003_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00003' order represents '1' with '4158'
c Var 'max_left_00003_00004_00003' direct represents '1' with '4158'
c Var 'max_left_00003_00004_00003' order represents '2' with '4159'
-4158 4159 0
c Var 'max_left_00003_00004_00003' direct represents '2' with '4160'
4158 -4159 4160 0
-4160 4159 0
-4160 -4158 0
c Var 'max_left_00003_00004_00003' order represents '3' with '4161'
-4159 4161 0
c Var 'max_left_00003_00004_00003' direct represents '3' with '4162'
4159 -4161 4162 0
-4162 4161 0
-4162 -4159 0
c Var 'max_left_00003_00004_00003' order represents '4' with '4163'
-4161 4163 0
c Var 'max_left_00003_00004_00003' direct represents '4' with '4164'
4161 -4163 4164 0
-4164 4163 0
-4164 -4161 0
c Var 'max_left_00003_00004_00003' order represents '5' with '4165'
-4163 4165 0
c Var 'max_left_00003_00004_00003' direct represents '5' with '4166'
4163 -4165 4166 0
-4166 4165 0
-4166 -4163 0
c Var 'max_left_00003_00004_00003' order represents '6' with '4167'
-4165 4167 0
c Var 'max_left_00003_00004_00003' direct represents '6' with '4168'
4165 -4167 4168 0
-4168 4167 0
-4168 -4165 0
c Var 'max_left_00003_00004_00003' order represents '7' with '4169'
-4167 4169 0
c Var 'max_left_00003_00004_00003' direct represents '7' with '4170'
4167 -4169 4170 0
-4170 4169 0
-4170 -4167 0
c Var 'max_left_00003_00004_00003' order represents '8' with '4171'
-4169 4171 0
c Var 'max_left_00003_00004_00003' direct represents '8' with '4172'
4169 -4171 4172 0
-4172 4171 0
-4172 -4169 0
c Var 'max_left_00003_00004_00003' direct represents '9' with '-4171'
4158 4160 4162 4164 4166 4168 4170 4172 -4171 0
c Encoding variable: max_left_00003_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00004' order represents '1' with '4173'
c Var 'max_left_00003_00004_00004' direct represents '1' with '4173'
c Var 'max_left_00003_00004_00004' order represents '2' with '4174'
-4173 4174 0
c Var 'max_left_00003_00004_00004' direct represents '2' with '4175'
4173 -4174 4175 0
-4175 4174 0
-4175 -4173 0
c Var 'max_left_00003_00004_00004' order represents '3' with '4176'
-4174 4176 0
c Var 'max_left_00003_00004_00004' direct represents '3' with '4177'
4174 -4176 4177 0
-4177 4176 0
-4177 -4174 0
c Var 'max_left_00003_00004_00004' order represents '4' with '4178'
-4176 4178 0
c Var 'max_left_00003_00004_00004' direct represents '4' with '4179'
4176 -4178 4179 0
-4179 4178 0
-4179 -4176 0
c Var 'max_left_00003_00004_00004' order represents '5' with '4180'
-4178 4180 0
c Var 'max_left_00003_00004_00004' direct represents '5' with '4181'
4178 -4180 4181 0
-4181 4180 0
-4181 -4178 0
c Var 'max_left_00003_00004_00004' order represents '6' with '4182'
-4180 4182 0
c Var 'max_left_00003_00004_00004' direct represents '6' with '4183'
4180 -4182 4183 0
-4183 4182 0
-4183 -4180 0
c Var 'max_left_00003_00004_00004' order represents '7' with '4184'
-4182 4184 0
c Var 'max_left_00003_00004_00004' direct represents '7' with '4185'
4182 -4184 4185 0
-4185 4184 0
-4185 -4182 0
c Var 'max_left_00003_00004_00004' order represents '8' with '4186'
-4184 4186 0
c Var 'max_left_00003_00004_00004' direct represents '8' with '4187'
4184 -4186 4187 0
-4187 4186 0
-4187 -4184 0
c Var 'max_left_00003_00004_00004' direct represents '9' with '-4186'
4173 4175 4177 4179 4181 4183 4185 4187 -4186 0
c Encoding variable: max_left_00003_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00005' order represents '1' with '4188'
c Var 'max_left_00003_00004_00005' direct represents '1' with '4188'
c Var 'max_left_00003_00004_00005' order represents '2' with '4189'
-4188 4189 0
c Var 'max_left_00003_00004_00005' direct represents '2' with '4190'
4188 -4189 4190 0
-4190 4189 0
-4190 -4188 0
c Var 'max_left_00003_00004_00005' order represents '3' with '4191'
-4189 4191 0
c Var 'max_left_00003_00004_00005' direct represents '3' with '4192'
4189 -4191 4192 0
-4192 4191 0
-4192 -4189 0
c Var 'max_left_00003_00004_00005' order represents '4' with '4193'
-4191 4193 0
c Var 'max_left_00003_00004_00005' direct represents '4' with '4194'
4191 -4193 4194 0
-4194 4193 0
-4194 -4191 0
c Var 'max_left_00003_00004_00005' order represents '5' with '4195'
-4193 4195 0
c Var 'max_left_00003_00004_00005' direct represents '5' with '4196'
4193 -4195 4196 0
-4196 4195 0
-4196 -4193 0
c Var 'max_left_00003_00004_00005' order represents '6' with '4197'
-4195 4197 0
c Var 'max_left_00003_00004_00005' direct represents '6' with '4198'
4195 -4197 4198 0
-4198 4197 0
-4198 -4195 0
c Var 'max_left_00003_00004_00005' order represents '7' with '4199'
-4197 4199 0
c Var 'max_left_00003_00004_00005' direct represents '7' with '4200'
4197 -4199 4200 0
-4200 4199 0
-4200 -4197 0
c Var 'max_left_00003_00004_00005' order represents '8' with '4201'
-4199 4201 0
c Var 'max_left_00003_00004_00005' direct represents '8' with '4202'
4199 -4201 4202 0
-4202 4201 0
-4202 -4199 0
c Var 'max_left_00003_00004_00005' direct represents '9' with '-4201'
4188 4190 4192 4194 4196 4198 4200 4202 -4201 0
c Encoding variable: max_left_00003_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00006' order represents '1' with '4203'
c Var 'max_left_00003_00004_00006' direct represents '1' with '4203'
c Var 'max_left_00003_00004_00006' order represents '2' with '4204'
-4203 4204 0
c Var 'max_left_00003_00004_00006' direct represents '2' with '4205'
4203 -4204 4205 0
-4205 4204 0
-4205 -4203 0
c Var 'max_left_00003_00004_00006' order represents '3' with '4206'
-4204 4206 0
c Var 'max_left_00003_00004_00006' direct represents '3' with '4207'
4204 -4206 4207 0
-4207 4206 0
-4207 -4204 0
c Var 'max_left_00003_00004_00006' order represents '4' with '4208'
-4206 4208 0
c Var 'max_left_00003_00004_00006' direct represents '4' with '4209'
4206 -4208 4209 0
-4209 4208 0
-4209 -4206 0
c Var 'max_left_00003_00004_00006' order represents '5' with '4210'
-4208 4210 0
c Var 'max_left_00003_00004_00006' direct represents '5' with '4211'
4208 -4210 4211 0
-4211 4210 0
-4211 -4208 0
c Var 'max_left_00003_00004_00006' order represents '6' with '4212'
-4210 4212 0
c Var 'max_left_00003_00004_00006' direct represents '6' with '4213'
4210 -4212 4213 0
-4213 4212 0
-4213 -4210 0
c Var 'max_left_00003_00004_00006' order represents '7' with '4214'
-4212 4214 0
c Var 'max_left_00003_00004_00006' direct represents '7' with '4215'
4212 -4214 4215 0
-4215 4214 0
-4215 -4212 0
c Var 'max_left_00003_00004_00006' order represents '8' with '4216'
-4214 4216 0
c Var 'max_left_00003_00004_00006' direct represents '8' with '4217'
4214 -4216 4217 0
-4217 4216 0
-4217 -4214 0
c Var 'max_left_00003_00004_00006' direct represents '9' with '-4216'
4203 4205 4207 4209 4211 4213 4215 4217 -4216 0
c Encoding variable: max_left_00003_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00007' order represents '1' with '4218'
c Var 'max_left_00003_00004_00007' direct represents '1' with '4218'
c Var 'max_left_00003_00004_00007' order represents '2' with '4219'
-4218 4219 0
c Var 'max_left_00003_00004_00007' direct represents '2' with '4220'
4218 -4219 4220 0
-4220 4219 0
-4220 -4218 0
c Var 'max_left_00003_00004_00007' order represents '3' with '4221'
-4219 4221 0
c Var 'max_left_00003_00004_00007' direct represents '3' with '4222'
4219 -4221 4222 0
-4222 4221 0
-4222 -4219 0
c Var 'max_left_00003_00004_00007' order represents '4' with '4223'
-4221 4223 0
c Var 'max_left_00003_00004_00007' direct represents '4' with '4224'
4221 -4223 4224 0
-4224 4223 0
-4224 -4221 0
c Var 'max_left_00003_00004_00007' order represents '5' with '4225'
-4223 4225 0
c Var 'max_left_00003_00004_00007' direct represents '5' with '4226'
4223 -4225 4226 0
-4226 4225 0
-4226 -4223 0
c Var 'max_left_00003_00004_00007' order represents '6' with '4227'
-4225 4227 0
c Var 'max_left_00003_00004_00007' direct represents '6' with '4228'
4225 -4227 4228 0
-4228 4227 0
-4228 -4225 0
c Var 'max_left_00003_00004_00007' order represents '7' with '4229'
-4227 4229 0
c Var 'max_left_00003_00004_00007' direct represents '7' with '4230'
4227 -4229 4230 0
-4230 4229 0
-4230 -4227 0
c Var 'max_left_00003_00004_00007' order represents '8' with '4231'
-4229 4231 0
c Var 'max_left_00003_00004_00007' direct represents '8' with '4232'
4229 -4231 4232 0
-4232 4231 0
-4232 -4229 0
c Var 'max_left_00003_00004_00007' direct represents '9' with '-4231'
4218 4220 4222 4224 4226 4228 4230 4232 -4231 0
c Encoding variable: max_left_00003_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00008' order represents '1' with '4233'
c Var 'max_left_00003_00004_00008' direct represents '1' with '4233'
c Var 'max_left_00003_00004_00008' order represents '2' with '4234'
-4233 4234 0
c Var 'max_left_00003_00004_00008' direct represents '2' with '4235'
4233 -4234 4235 0
-4235 4234 0
-4235 -4233 0
c Var 'max_left_00003_00004_00008' order represents '3' with '4236'
-4234 4236 0
c Var 'max_left_00003_00004_00008' direct represents '3' with '4237'
4234 -4236 4237 0
-4237 4236 0
-4237 -4234 0
c Var 'max_left_00003_00004_00008' order represents '4' with '4238'
-4236 4238 0
c Var 'max_left_00003_00004_00008' direct represents '4' with '4239'
4236 -4238 4239 0
-4239 4238 0
-4239 -4236 0
c Var 'max_left_00003_00004_00008' order represents '5' with '4240'
-4238 4240 0
c Var 'max_left_00003_00004_00008' direct represents '5' with '4241'
4238 -4240 4241 0
-4241 4240 0
-4241 -4238 0
c Var 'max_left_00003_00004_00008' order represents '6' with '4242'
-4240 4242 0
c Var 'max_left_00003_00004_00008' direct represents '6' with '4243'
4240 -4242 4243 0
-4243 4242 0
-4243 -4240 0
c Var 'max_left_00003_00004_00008' order represents '7' with '4244'
-4242 4244 0
c Var 'max_left_00003_00004_00008' direct represents '7' with '4245'
4242 -4244 4245 0
-4245 4244 0
-4245 -4242 0
c Var 'max_left_00003_00004_00008' order represents '8' with '4246'
-4244 4246 0
c Var 'max_left_00003_00004_00008' direct represents '8' with '4247'
4244 -4246 4247 0
-4247 4246 0
-4247 -4244 0
c Var 'max_left_00003_00004_00008' direct represents '9' with '-4246'
4233 4235 4237 4239 4241 4243 4245 4247 -4246 0
c Encoding variable: max_left_00003_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00004_00009' order represents '1' with '4248'
c Var 'max_left_00003_00004_00009' direct represents '1' with '4248'
c Var 'max_left_00003_00004_00009' order represents '2' with '4249'
-4248 4249 0
c Var 'max_left_00003_00004_00009' direct represents '2' with '4250'
4248 -4249 4250 0
-4250 4249 0
-4250 -4248 0
c Var 'max_left_00003_00004_00009' order represents '3' with '4251'
-4249 4251 0
c Var 'max_left_00003_00004_00009' direct represents '3' with '4252'
4249 -4251 4252 0
-4252 4251 0
-4252 -4249 0
c Var 'max_left_00003_00004_00009' order represents '4' with '4253'
-4251 4253 0
c Var 'max_left_00003_00004_00009' direct represents '4' with '4254'
4251 -4253 4254 0
-4254 4253 0
-4254 -4251 0
c Var 'max_left_00003_00004_00009' order represents '5' with '4255'
-4253 4255 0
c Var 'max_left_00003_00004_00009' direct represents '5' with '4256'
4253 -4255 4256 0
-4256 4255 0
-4256 -4253 0
c Var 'max_left_00003_00004_00009' order represents '6' with '4257'
-4255 4257 0
c Var 'max_left_00003_00004_00009' direct represents '6' with '4258'
4255 -4257 4258 0
-4258 4257 0
-4258 -4255 0
c Var 'max_left_00003_00004_00009' order represents '7' with '4259'
-4257 4259 0
c Var 'max_left_00003_00004_00009' direct represents '7' with '4260'
4257 -4259 4260 0
-4260 4259 0
-4260 -4257 0
c Var 'max_left_00003_00004_00009' order represents '8' with '4261'
-4259 4261 0
c Var 'max_left_00003_00004_00009' direct represents '8' with '4262'
4259 -4261 4262 0
-4262 4261 0
-4262 -4259 0
c Var 'max_left_00003_00004_00009' direct represents '9' with '-4261'
4248 4250 4252 4254 4256 4258 4260 4262 -4261 0
c Encoding variable: max_left_00003_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00005_00000' direct represents '0' with '4263'
4263 0
c Encoding variable: max_left_00003_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00001' order represents '1' with '4264'
c Var 'max_left_00003_00005_00001' direct represents '1' with '4264'
c Var 'max_left_00003_00005_00001' order represents '2' with '4265'
-4264 4265 0
c Var 'max_left_00003_00005_00001' direct represents '2' with '4266'
4264 -4265 4266 0
-4266 4265 0
-4266 -4264 0
c Var 'max_left_00003_00005_00001' order represents '3' with '4267'
-4265 4267 0
c Var 'max_left_00003_00005_00001' direct represents '3' with '4268'
4265 -4267 4268 0
-4268 4267 0
-4268 -4265 0
c Var 'max_left_00003_00005_00001' order represents '4' with '4269'
-4267 4269 0
c Var 'max_left_00003_00005_00001' direct represents '4' with '4270'
4267 -4269 4270 0
-4270 4269 0
-4270 -4267 0
c Var 'max_left_00003_00005_00001' order represents '5' with '4271'
-4269 4271 0
c Var 'max_left_00003_00005_00001' direct represents '5' with '4272'
4269 -4271 4272 0
-4272 4271 0
-4272 -4269 0
c Var 'max_left_00003_00005_00001' order represents '6' with '4273'
-4271 4273 0
c Var 'max_left_00003_00005_00001' direct represents '6' with '4274'
4271 -4273 4274 0
-4274 4273 0
-4274 -4271 0
c Var 'max_left_00003_00005_00001' order represents '7' with '4275'
-4273 4275 0
c Var 'max_left_00003_00005_00001' direct represents '7' with '4276'
4273 -4275 4276 0
-4276 4275 0
-4276 -4273 0
c Var 'max_left_00003_00005_00001' order represents '8' with '4277'
-4275 4277 0
c Var 'max_left_00003_00005_00001' direct represents '8' with '4278'
4275 -4277 4278 0
-4278 4277 0
-4278 -4275 0
c Var 'max_left_00003_00005_00001' direct represents '9' with '-4277'
4264 4266 4268 4270 4272 4274 4276 4278 -4277 0
c Encoding variable: max_left_00003_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00002' order represents '1' with '4279'
c Var 'max_left_00003_00005_00002' direct represents '1' with '4279'
c Var 'max_left_00003_00005_00002' order represents '2' with '4280'
-4279 4280 0
c Var 'max_left_00003_00005_00002' direct represents '2' with '4281'
4279 -4280 4281 0
-4281 4280 0
-4281 -4279 0
c Var 'max_left_00003_00005_00002' order represents '3' with '4282'
-4280 4282 0
c Var 'max_left_00003_00005_00002' direct represents '3' with '4283'
4280 -4282 4283 0
-4283 4282 0
-4283 -4280 0
c Var 'max_left_00003_00005_00002' order represents '4' with '4284'
-4282 4284 0
c Var 'max_left_00003_00005_00002' direct represents '4' with '4285'
4282 -4284 4285 0
-4285 4284 0
-4285 -4282 0
c Var 'max_left_00003_00005_00002' order represents '5' with '4286'
-4284 4286 0
c Var 'max_left_00003_00005_00002' direct represents '5' with '4287'
4284 -4286 4287 0
-4287 4286 0
-4287 -4284 0
c Var 'max_left_00003_00005_00002' order represents '6' with '4288'
-4286 4288 0
c Var 'max_left_00003_00005_00002' direct represents '6' with '4289'
4286 -4288 4289 0
-4289 4288 0
-4289 -4286 0
c Var 'max_left_00003_00005_00002' order represents '7' with '4290'
-4288 4290 0
c Var 'max_left_00003_00005_00002' direct represents '7' with '4291'
4288 -4290 4291 0
-4291 4290 0
-4291 -4288 0
c Var 'max_left_00003_00005_00002' order represents '8' with '4292'
-4290 4292 0
c Var 'max_left_00003_00005_00002' direct represents '8' with '4293'
4290 -4292 4293 0
-4293 4292 0
-4293 -4290 0
c Var 'max_left_00003_00005_00002' direct represents '9' with '-4292'
4279 4281 4283 4285 4287 4289 4291 4293 -4292 0
c Encoding variable: max_left_00003_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00003' order represents '1' with '4294'
c Var 'max_left_00003_00005_00003' direct represents '1' with '4294'
c Var 'max_left_00003_00005_00003' order represents '2' with '4295'
-4294 4295 0
c Var 'max_left_00003_00005_00003' direct represents '2' with '4296'
4294 -4295 4296 0
-4296 4295 0
-4296 -4294 0
c Var 'max_left_00003_00005_00003' order represents '3' with '4297'
-4295 4297 0
c Var 'max_left_00003_00005_00003' direct represents '3' with '4298'
4295 -4297 4298 0
-4298 4297 0
-4298 -4295 0
c Var 'max_left_00003_00005_00003' order represents '4' with '4299'
-4297 4299 0
c Var 'max_left_00003_00005_00003' direct represents '4' with '4300'
4297 -4299 4300 0
-4300 4299 0
-4300 -4297 0
c Var 'max_left_00003_00005_00003' order represents '5' with '4301'
-4299 4301 0
c Var 'max_left_00003_00005_00003' direct represents '5' with '4302'
4299 -4301 4302 0
-4302 4301 0
-4302 -4299 0
c Var 'max_left_00003_00005_00003' order represents '6' with '4303'
-4301 4303 0
c Var 'max_left_00003_00005_00003' direct represents '6' with '4304'
4301 -4303 4304 0
-4304 4303 0
-4304 -4301 0
c Var 'max_left_00003_00005_00003' order represents '7' with '4305'
-4303 4305 0
c Var 'max_left_00003_00005_00003' direct represents '7' with '4306'
4303 -4305 4306 0
-4306 4305 0
-4306 -4303 0
c Var 'max_left_00003_00005_00003' order represents '8' with '4307'
-4305 4307 0
c Var 'max_left_00003_00005_00003' direct represents '8' with '4308'
4305 -4307 4308 0
-4308 4307 0
-4308 -4305 0
c Var 'max_left_00003_00005_00003' direct represents '9' with '-4307'
4294 4296 4298 4300 4302 4304 4306 4308 -4307 0
c Encoding variable: max_left_00003_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00004' order represents '1' with '4309'
c Var 'max_left_00003_00005_00004' direct represents '1' with '4309'
c Var 'max_left_00003_00005_00004' order represents '2' with '4310'
-4309 4310 0
c Var 'max_left_00003_00005_00004' direct represents '2' with '4311'
4309 -4310 4311 0
-4311 4310 0
-4311 -4309 0
c Var 'max_left_00003_00005_00004' order represents '3' with '4312'
-4310 4312 0
c Var 'max_left_00003_00005_00004' direct represents '3' with '4313'
4310 -4312 4313 0
-4313 4312 0
-4313 -4310 0
c Var 'max_left_00003_00005_00004' order represents '4' with '4314'
-4312 4314 0
c Var 'max_left_00003_00005_00004' direct represents '4' with '4315'
4312 -4314 4315 0
-4315 4314 0
-4315 -4312 0
c Var 'max_left_00003_00005_00004' order represents '5' with '4316'
-4314 4316 0
c Var 'max_left_00003_00005_00004' direct represents '5' with '4317'
4314 -4316 4317 0
-4317 4316 0
-4317 -4314 0
c Var 'max_left_00003_00005_00004' order represents '6' with '4318'
-4316 4318 0
c Var 'max_left_00003_00005_00004' direct represents '6' with '4319'
4316 -4318 4319 0
-4319 4318 0
-4319 -4316 0
c Var 'max_left_00003_00005_00004' order represents '7' with '4320'
-4318 4320 0
c Var 'max_left_00003_00005_00004' direct represents '7' with '4321'
4318 -4320 4321 0
-4321 4320 0
-4321 -4318 0
c Var 'max_left_00003_00005_00004' order represents '8' with '4322'
-4320 4322 0
c Var 'max_left_00003_00005_00004' direct represents '8' with '4323'
4320 -4322 4323 0
-4323 4322 0
-4323 -4320 0
c Var 'max_left_00003_00005_00004' direct represents '9' with '-4322'
4309 4311 4313 4315 4317 4319 4321 4323 -4322 0
c Encoding variable: max_left_00003_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00005' order represents '1' with '4324'
c Var 'max_left_00003_00005_00005' direct represents '1' with '4324'
c Var 'max_left_00003_00005_00005' order represents '2' with '4325'
-4324 4325 0
c Var 'max_left_00003_00005_00005' direct represents '2' with '4326'
4324 -4325 4326 0
-4326 4325 0
-4326 -4324 0
c Var 'max_left_00003_00005_00005' order represents '3' with '4327'
-4325 4327 0
c Var 'max_left_00003_00005_00005' direct represents '3' with '4328'
4325 -4327 4328 0
-4328 4327 0
-4328 -4325 0
c Var 'max_left_00003_00005_00005' order represents '4' with '4329'
-4327 4329 0
c Var 'max_left_00003_00005_00005' direct represents '4' with '4330'
4327 -4329 4330 0
-4330 4329 0
-4330 -4327 0
c Var 'max_left_00003_00005_00005' order represents '5' with '4331'
-4329 4331 0
c Var 'max_left_00003_00005_00005' direct represents '5' with '4332'
4329 -4331 4332 0
-4332 4331 0
-4332 -4329 0
c Var 'max_left_00003_00005_00005' order represents '6' with '4333'
-4331 4333 0
c Var 'max_left_00003_00005_00005' direct represents '6' with '4334'
4331 -4333 4334 0
-4334 4333 0
-4334 -4331 0
c Var 'max_left_00003_00005_00005' order represents '7' with '4335'
-4333 4335 0
c Var 'max_left_00003_00005_00005' direct represents '7' with '4336'
4333 -4335 4336 0
-4336 4335 0
-4336 -4333 0
c Var 'max_left_00003_00005_00005' order represents '8' with '4337'
-4335 4337 0
c Var 'max_left_00003_00005_00005' direct represents '8' with '4338'
4335 -4337 4338 0
-4338 4337 0
-4338 -4335 0
c Var 'max_left_00003_00005_00005' direct represents '9' with '-4337'
4324 4326 4328 4330 4332 4334 4336 4338 -4337 0
c Encoding variable: max_left_00003_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00006' order represents '1' with '4339'
c Var 'max_left_00003_00005_00006' direct represents '1' with '4339'
c Var 'max_left_00003_00005_00006' order represents '2' with '4340'
-4339 4340 0
c Var 'max_left_00003_00005_00006' direct represents '2' with '4341'
4339 -4340 4341 0
-4341 4340 0
-4341 -4339 0
c Var 'max_left_00003_00005_00006' order represents '3' with '4342'
-4340 4342 0
c Var 'max_left_00003_00005_00006' direct represents '3' with '4343'
4340 -4342 4343 0
-4343 4342 0
-4343 -4340 0
c Var 'max_left_00003_00005_00006' order represents '4' with '4344'
-4342 4344 0
c Var 'max_left_00003_00005_00006' direct represents '4' with '4345'
4342 -4344 4345 0
-4345 4344 0
-4345 -4342 0
c Var 'max_left_00003_00005_00006' order represents '5' with '4346'
-4344 4346 0
c Var 'max_left_00003_00005_00006' direct represents '5' with '4347'
4344 -4346 4347 0
-4347 4346 0
-4347 -4344 0
c Var 'max_left_00003_00005_00006' order represents '6' with '4348'
-4346 4348 0
c Var 'max_left_00003_00005_00006' direct represents '6' with '4349'
4346 -4348 4349 0
-4349 4348 0
-4349 -4346 0
c Var 'max_left_00003_00005_00006' order represents '7' with '4350'
-4348 4350 0
c Var 'max_left_00003_00005_00006' direct represents '7' with '4351'
4348 -4350 4351 0
-4351 4350 0
-4351 -4348 0
c Var 'max_left_00003_00005_00006' order represents '8' with '4352'
-4350 4352 0
c Var 'max_left_00003_00005_00006' direct represents '8' with '4353'
4350 -4352 4353 0
-4353 4352 0
-4353 -4350 0
c Var 'max_left_00003_00005_00006' direct represents '9' with '-4352'
4339 4341 4343 4345 4347 4349 4351 4353 -4352 0
c Encoding variable: max_left_00003_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00007' order represents '1' with '4354'
c Var 'max_left_00003_00005_00007' direct represents '1' with '4354'
c Var 'max_left_00003_00005_00007' order represents '2' with '4355'
-4354 4355 0
c Var 'max_left_00003_00005_00007' direct represents '2' with '4356'
4354 -4355 4356 0
-4356 4355 0
-4356 -4354 0
c Var 'max_left_00003_00005_00007' order represents '3' with '4357'
-4355 4357 0
c Var 'max_left_00003_00005_00007' direct represents '3' with '4358'
4355 -4357 4358 0
-4358 4357 0
-4358 -4355 0
c Var 'max_left_00003_00005_00007' order represents '4' with '4359'
-4357 4359 0
c Var 'max_left_00003_00005_00007' direct represents '4' with '4360'
4357 -4359 4360 0
-4360 4359 0
-4360 -4357 0
c Var 'max_left_00003_00005_00007' order represents '5' with '4361'
-4359 4361 0
c Var 'max_left_00003_00005_00007' direct represents '5' with '4362'
4359 -4361 4362 0
-4362 4361 0
-4362 -4359 0
c Var 'max_left_00003_00005_00007' order represents '6' with '4363'
-4361 4363 0
c Var 'max_left_00003_00005_00007' direct represents '6' with '4364'
4361 -4363 4364 0
-4364 4363 0
-4364 -4361 0
c Var 'max_left_00003_00005_00007' order represents '7' with '4365'
-4363 4365 0
c Var 'max_left_00003_00005_00007' direct represents '7' with '4366'
4363 -4365 4366 0
-4366 4365 0
-4366 -4363 0
c Var 'max_left_00003_00005_00007' order represents '8' with '4367'
-4365 4367 0
c Var 'max_left_00003_00005_00007' direct represents '8' with '4368'
4365 -4367 4368 0
-4368 4367 0
-4368 -4365 0
c Var 'max_left_00003_00005_00007' direct represents '9' with '-4367'
4354 4356 4358 4360 4362 4364 4366 4368 -4367 0
c Encoding variable: max_left_00003_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00008' order represents '1' with '4369'
c Var 'max_left_00003_00005_00008' direct represents '1' with '4369'
c Var 'max_left_00003_00005_00008' order represents '2' with '4370'
-4369 4370 0
c Var 'max_left_00003_00005_00008' direct represents '2' with '4371'
4369 -4370 4371 0
-4371 4370 0
-4371 -4369 0
c Var 'max_left_00003_00005_00008' order represents '3' with '4372'
-4370 4372 0
c Var 'max_left_00003_00005_00008' direct represents '3' with '4373'
4370 -4372 4373 0
-4373 4372 0
-4373 -4370 0
c Var 'max_left_00003_00005_00008' order represents '4' with '4374'
-4372 4374 0
c Var 'max_left_00003_00005_00008' direct represents '4' with '4375'
4372 -4374 4375 0
-4375 4374 0
-4375 -4372 0
c Var 'max_left_00003_00005_00008' order represents '5' with '4376'
-4374 4376 0
c Var 'max_left_00003_00005_00008' direct represents '5' with '4377'
4374 -4376 4377 0
-4377 4376 0
-4377 -4374 0
c Var 'max_left_00003_00005_00008' order represents '6' with '4378'
-4376 4378 0
c Var 'max_left_00003_00005_00008' direct represents '6' with '4379'
4376 -4378 4379 0
-4379 4378 0
-4379 -4376 0
c Var 'max_left_00003_00005_00008' order represents '7' with '4380'
-4378 4380 0
c Var 'max_left_00003_00005_00008' direct represents '7' with '4381'
4378 -4380 4381 0
-4381 4380 0
-4381 -4378 0
c Var 'max_left_00003_00005_00008' order represents '8' with '4382'
-4380 4382 0
c Var 'max_left_00003_00005_00008' direct represents '8' with '4383'
4380 -4382 4383 0
-4383 4382 0
-4383 -4380 0
c Var 'max_left_00003_00005_00008' direct represents '9' with '-4382'
4369 4371 4373 4375 4377 4379 4381 4383 -4382 0
c Encoding variable: max_left_00003_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00005_00009' order represents '1' with '4384'
c Var 'max_left_00003_00005_00009' direct represents '1' with '4384'
c Var 'max_left_00003_00005_00009' order represents '2' with '4385'
-4384 4385 0
c Var 'max_left_00003_00005_00009' direct represents '2' with '4386'
4384 -4385 4386 0
-4386 4385 0
-4386 -4384 0
c Var 'max_left_00003_00005_00009' order represents '3' with '4387'
-4385 4387 0
c Var 'max_left_00003_00005_00009' direct represents '3' with '4388'
4385 -4387 4388 0
-4388 4387 0
-4388 -4385 0
c Var 'max_left_00003_00005_00009' order represents '4' with '4389'
-4387 4389 0
c Var 'max_left_00003_00005_00009' direct represents '4' with '4390'
4387 -4389 4390 0
-4390 4389 0
-4390 -4387 0
c Var 'max_left_00003_00005_00009' order represents '5' with '4391'
-4389 4391 0
c Var 'max_left_00003_00005_00009' direct represents '5' with '4392'
4389 -4391 4392 0
-4392 4391 0
-4392 -4389 0
c Var 'max_left_00003_00005_00009' order represents '6' with '4393'
-4391 4393 0
c Var 'max_left_00003_00005_00009' direct represents '6' with '4394'
4391 -4393 4394 0
-4394 4393 0
-4394 -4391 0
c Var 'max_left_00003_00005_00009' order represents '7' with '4395'
-4393 4395 0
c Var 'max_left_00003_00005_00009' direct represents '7' with '4396'
4393 -4395 4396 0
-4396 4395 0
-4396 -4393 0
c Var 'max_left_00003_00005_00009' order represents '8' with '4397'
-4395 4397 0
c Var 'max_left_00003_00005_00009' direct represents '8' with '4398'
4395 -4397 4398 0
-4398 4397 0
-4398 -4395 0
c Var 'max_left_00003_00005_00009' direct represents '9' with '-4397'
4384 4386 4388 4390 4392 4394 4396 4398 -4397 0
c Encoding variable: max_left_00003_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00006_00000' direct represents '0' with '4399'
4399 0
c Encoding variable: max_left_00003_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00001' order represents '1' with '4400'
c Var 'max_left_00003_00006_00001' direct represents '1' with '4400'
c Var 'max_left_00003_00006_00001' order represents '2' with '4401'
-4400 4401 0
c Var 'max_left_00003_00006_00001' direct represents '2' with '4402'
4400 -4401 4402 0
-4402 4401 0
-4402 -4400 0
c Var 'max_left_00003_00006_00001' order represents '3' with '4403'
-4401 4403 0
c Var 'max_left_00003_00006_00001' direct represents '3' with '4404'
4401 -4403 4404 0
-4404 4403 0
-4404 -4401 0
c Var 'max_left_00003_00006_00001' order represents '4' with '4405'
-4403 4405 0
c Var 'max_left_00003_00006_00001' direct represents '4' with '4406'
4403 -4405 4406 0
-4406 4405 0
-4406 -4403 0
c Var 'max_left_00003_00006_00001' order represents '5' with '4407'
-4405 4407 0
c Var 'max_left_00003_00006_00001' direct represents '5' with '4408'
4405 -4407 4408 0
-4408 4407 0
-4408 -4405 0
c Var 'max_left_00003_00006_00001' order represents '6' with '4409'
-4407 4409 0
c Var 'max_left_00003_00006_00001' direct represents '6' with '4410'
4407 -4409 4410 0
-4410 4409 0
-4410 -4407 0
c Var 'max_left_00003_00006_00001' order represents '7' with '4411'
-4409 4411 0
c Var 'max_left_00003_00006_00001' direct represents '7' with '4412'
4409 -4411 4412 0
-4412 4411 0
-4412 -4409 0
c Var 'max_left_00003_00006_00001' order represents '8' with '4413'
-4411 4413 0
c Var 'max_left_00003_00006_00001' direct represents '8' with '4414'
4411 -4413 4414 0
-4414 4413 0
-4414 -4411 0
c Var 'max_left_00003_00006_00001' direct represents '9' with '-4413'
4400 4402 4404 4406 4408 4410 4412 4414 -4413 0
c Encoding variable: max_left_00003_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00002' order represents '1' with '4415'
c Var 'max_left_00003_00006_00002' direct represents '1' with '4415'
c Var 'max_left_00003_00006_00002' order represents '2' with '4416'
-4415 4416 0
c Var 'max_left_00003_00006_00002' direct represents '2' with '4417'
4415 -4416 4417 0
-4417 4416 0
-4417 -4415 0
c Var 'max_left_00003_00006_00002' order represents '3' with '4418'
-4416 4418 0
c Var 'max_left_00003_00006_00002' direct represents '3' with '4419'
4416 -4418 4419 0
-4419 4418 0
-4419 -4416 0
c Var 'max_left_00003_00006_00002' order represents '4' with '4420'
-4418 4420 0
c Var 'max_left_00003_00006_00002' direct represents '4' with '4421'
4418 -4420 4421 0
-4421 4420 0
-4421 -4418 0
c Var 'max_left_00003_00006_00002' order represents '5' with '4422'
-4420 4422 0
c Var 'max_left_00003_00006_00002' direct represents '5' with '4423'
4420 -4422 4423 0
-4423 4422 0
-4423 -4420 0
c Var 'max_left_00003_00006_00002' order represents '6' with '4424'
-4422 4424 0
c Var 'max_left_00003_00006_00002' direct represents '6' with '4425'
4422 -4424 4425 0
-4425 4424 0
-4425 -4422 0
c Var 'max_left_00003_00006_00002' order represents '7' with '4426'
-4424 4426 0
c Var 'max_left_00003_00006_00002' direct represents '7' with '4427'
4424 -4426 4427 0
-4427 4426 0
-4427 -4424 0
c Var 'max_left_00003_00006_00002' order represents '8' with '4428'
-4426 4428 0
c Var 'max_left_00003_00006_00002' direct represents '8' with '4429'
4426 -4428 4429 0
-4429 4428 0
-4429 -4426 0
c Var 'max_left_00003_00006_00002' direct represents '9' with '-4428'
4415 4417 4419 4421 4423 4425 4427 4429 -4428 0
c Encoding variable: max_left_00003_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00003' order represents '1' with '4430'
c Var 'max_left_00003_00006_00003' direct represents '1' with '4430'
c Var 'max_left_00003_00006_00003' order represents '2' with '4431'
-4430 4431 0
c Var 'max_left_00003_00006_00003' direct represents '2' with '4432'
4430 -4431 4432 0
-4432 4431 0
-4432 -4430 0
c Var 'max_left_00003_00006_00003' order represents '3' with '4433'
-4431 4433 0
c Var 'max_left_00003_00006_00003' direct represents '3' with '4434'
4431 -4433 4434 0
-4434 4433 0
-4434 -4431 0
c Var 'max_left_00003_00006_00003' order represents '4' with '4435'
-4433 4435 0
c Var 'max_left_00003_00006_00003' direct represents '4' with '4436'
4433 -4435 4436 0
-4436 4435 0
-4436 -4433 0
c Var 'max_left_00003_00006_00003' order represents '5' with '4437'
-4435 4437 0
c Var 'max_left_00003_00006_00003' direct represents '5' with '4438'
4435 -4437 4438 0
-4438 4437 0
-4438 -4435 0
c Var 'max_left_00003_00006_00003' order represents '6' with '4439'
-4437 4439 0
c Var 'max_left_00003_00006_00003' direct represents '6' with '4440'
4437 -4439 4440 0
-4440 4439 0
-4440 -4437 0
c Var 'max_left_00003_00006_00003' order represents '7' with '4441'
-4439 4441 0
c Var 'max_left_00003_00006_00003' direct represents '7' with '4442'
4439 -4441 4442 0
-4442 4441 0
-4442 -4439 0
c Var 'max_left_00003_00006_00003' order represents '8' with '4443'
-4441 4443 0
c Var 'max_left_00003_00006_00003' direct represents '8' with '4444'
4441 -4443 4444 0
-4444 4443 0
-4444 -4441 0
c Var 'max_left_00003_00006_00003' direct represents '9' with '-4443'
4430 4432 4434 4436 4438 4440 4442 4444 -4443 0
c Encoding variable: max_left_00003_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00004' order represents '1' with '4445'
c Var 'max_left_00003_00006_00004' direct represents '1' with '4445'
c Var 'max_left_00003_00006_00004' order represents '2' with '4446'
-4445 4446 0
c Var 'max_left_00003_00006_00004' direct represents '2' with '4447'
4445 -4446 4447 0
-4447 4446 0
-4447 -4445 0
c Var 'max_left_00003_00006_00004' order represents '3' with '4448'
-4446 4448 0
c Var 'max_left_00003_00006_00004' direct represents '3' with '4449'
4446 -4448 4449 0
-4449 4448 0
-4449 -4446 0
c Var 'max_left_00003_00006_00004' order represents '4' with '4450'
-4448 4450 0
c Var 'max_left_00003_00006_00004' direct represents '4' with '4451'
4448 -4450 4451 0
-4451 4450 0
-4451 -4448 0
c Var 'max_left_00003_00006_00004' order represents '5' with '4452'
-4450 4452 0
c Var 'max_left_00003_00006_00004' direct represents '5' with '4453'
4450 -4452 4453 0
-4453 4452 0
-4453 -4450 0
c Var 'max_left_00003_00006_00004' order represents '6' with '4454'
-4452 4454 0
c Var 'max_left_00003_00006_00004' direct represents '6' with '4455'
4452 -4454 4455 0
-4455 4454 0
-4455 -4452 0
c Var 'max_left_00003_00006_00004' order represents '7' with '4456'
-4454 4456 0
c Var 'max_left_00003_00006_00004' direct represents '7' with '4457'
4454 -4456 4457 0
-4457 4456 0
-4457 -4454 0
c Var 'max_left_00003_00006_00004' order represents '8' with '4458'
-4456 4458 0
c Var 'max_left_00003_00006_00004' direct represents '8' with '4459'
4456 -4458 4459 0
-4459 4458 0
-4459 -4456 0
c Var 'max_left_00003_00006_00004' direct represents '9' with '-4458'
4445 4447 4449 4451 4453 4455 4457 4459 -4458 0
c Encoding variable: max_left_00003_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00005' order represents '1' with '4460'
c Var 'max_left_00003_00006_00005' direct represents '1' with '4460'
c Var 'max_left_00003_00006_00005' order represents '2' with '4461'
-4460 4461 0
c Var 'max_left_00003_00006_00005' direct represents '2' with '4462'
4460 -4461 4462 0
-4462 4461 0
-4462 -4460 0
c Var 'max_left_00003_00006_00005' order represents '3' with '4463'
-4461 4463 0
c Var 'max_left_00003_00006_00005' direct represents '3' with '4464'
4461 -4463 4464 0
-4464 4463 0
-4464 -4461 0
c Var 'max_left_00003_00006_00005' order represents '4' with '4465'
-4463 4465 0
c Var 'max_left_00003_00006_00005' direct represents '4' with '4466'
4463 -4465 4466 0
-4466 4465 0
-4466 -4463 0
c Var 'max_left_00003_00006_00005' order represents '5' with '4467'
-4465 4467 0
c Var 'max_left_00003_00006_00005' direct represents '5' with '4468'
4465 -4467 4468 0
-4468 4467 0
-4468 -4465 0
c Var 'max_left_00003_00006_00005' order represents '6' with '4469'
-4467 4469 0
c Var 'max_left_00003_00006_00005' direct represents '6' with '4470'
4467 -4469 4470 0
-4470 4469 0
-4470 -4467 0
c Var 'max_left_00003_00006_00005' order represents '7' with '4471'
-4469 4471 0
c Var 'max_left_00003_00006_00005' direct represents '7' with '4472'
4469 -4471 4472 0
-4472 4471 0
-4472 -4469 0
c Var 'max_left_00003_00006_00005' order represents '8' with '4473'
-4471 4473 0
c Var 'max_left_00003_00006_00005' direct represents '8' with '4474'
4471 -4473 4474 0
-4474 4473 0
-4474 -4471 0
c Var 'max_left_00003_00006_00005' direct represents '9' with '-4473'
4460 4462 4464 4466 4468 4470 4472 4474 -4473 0
c Encoding variable: max_left_00003_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00006' order represents '1' with '4475'
c Var 'max_left_00003_00006_00006' direct represents '1' with '4475'
c Var 'max_left_00003_00006_00006' order represents '2' with '4476'
-4475 4476 0
c Var 'max_left_00003_00006_00006' direct represents '2' with '4477'
4475 -4476 4477 0
-4477 4476 0
-4477 -4475 0
c Var 'max_left_00003_00006_00006' order represents '3' with '4478'
-4476 4478 0
c Var 'max_left_00003_00006_00006' direct represents '3' with '4479'
4476 -4478 4479 0
-4479 4478 0
-4479 -4476 0
c Var 'max_left_00003_00006_00006' order represents '4' with '4480'
-4478 4480 0
c Var 'max_left_00003_00006_00006' direct represents '4' with '4481'
4478 -4480 4481 0
-4481 4480 0
-4481 -4478 0
c Var 'max_left_00003_00006_00006' order represents '5' with '4482'
-4480 4482 0
c Var 'max_left_00003_00006_00006' direct represents '5' with '4483'
4480 -4482 4483 0
-4483 4482 0
-4483 -4480 0
c Var 'max_left_00003_00006_00006' order represents '6' with '4484'
-4482 4484 0
c Var 'max_left_00003_00006_00006' direct represents '6' with '4485'
4482 -4484 4485 0
-4485 4484 0
-4485 -4482 0
c Var 'max_left_00003_00006_00006' order represents '7' with '4486'
-4484 4486 0
c Var 'max_left_00003_00006_00006' direct represents '7' with '4487'
4484 -4486 4487 0
-4487 4486 0
-4487 -4484 0
c Var 'max_left_00003_00006_00006' order represents '8' with '4488'
-4486 4488 0
c Var 'max_left_00003_00006_00006' direct represents '8' with '4489'
4486 -4488 4489 0
-4489 4488 0
-4489 -4486 0
c Var 'max_left_00003_00006_00006' direct represents '9' with '-4488'
4475 4477 4479 4481 4483 4485 4487 4489 -4488 0
c Encoding variable: max_left_00003_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00007' order represents '1' with '4490'
c Var 'max_left_00003_00006_00007' direct represents '1' with '4490'
c Var 'max_left_00003_00006_00007' order represents '2' with '4491'
-4490 4491 0
c Var 'max_left_00003_00006_00007' direct represents '2' with '4492'
4490 -4491 4492 0
-4492 4491 0
-4492 -4490 0
c Var 'max_left_00003_00006_00007' order represents '3' with '4493'
-4491 4493 0
c Var 'max_left_00003_00006_00007' direct represents '3' with '4494'
4491 -4493 4494 0
-4494 4493 0
-4494 -4491 0
c Var 'max_left_00003_00006_00007' order represents '4' with '4495'
-4493 4495 0
c Var 'max_left_00003_00006_00007' direct represents '4' with '4496'
4493 -4495 4496 0
-4496 4495 0
-4496 -4493 0
c Var 'max_left_00003_00006_00007' order represents '5' with '4497'
-4495 4497 0
c Var 'max_left_00003_00006_00007' direct represents '5' with '4498'
4495 -4497 4498 0
-4498 4497 0
-4498 -4495 0
c Var 'max_left_00003_00006_00007' order represents '6' with '4499'
-4497 4499 0
c Var 'max_left_00003_00006_00007' direct represents '6' with '4500'
4497 -4499 4500 0
-4500 4499 0
-4500 -4497 0
c Var 'max_left_00003_00006_00007' order represents '7' with '4501'
-4499 4501 0
c Var 'max_left_00003_00006_00007' direct represents '7' with '4502'
4499 -4501 4502 0
-4502 4501 0
-4502 -4499 0
c Var 'max_left_00003_00006_00007' order represents '8' with '4503'
-4501 4503 0
c Var 'max_left_00003_00006_00007' direct represents '8' with '4504'
4501 -4503 4504 0
-4504 4503 0
-4504 -4501 0
c Var 'max_left_00003_00006_00007' direct represents '9' with '-4503'
4490 4492 4494 4496 4498 4500 4502 4504 -4503 0
c Encoding variable: max_left_00003_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00008' order represents '1' with '4505'
c Var 'max_left_00003_00006_00008' direct represents '1' with '4505'
c Var 'max_left_00003_00006_00008' order represents '2' with '4506'
-4505 4506 0
c Var 'max_left_00003_00006_00008' direct represents '2' with '4507'
4505 -4506 4507 0
-4507 4506 0
-4507 -4505 0
c Var 'max_left_00003_00006_00008' order represents '3' with '4508'
-4506 4508 0
c Var 'max_left_00003_00006_00008' direct represents '3' with '4509'
4506 -4508 4509 0
-4509 4508 0
-4509 -4506 0
c Var 'max_left_00003_00006_00008' order represents '4' with '4510'
-4508 4510 0
c Var 'max_left_00003_00006_00008' direct represents '4' with '4511'
4508 -4510 4511 0
-4511 4510 0
-4511 -4508 0
c Var 'max_left_00003_00006_00008' order represents '5' with '4512'
-4510 4512 0
c Var 'max_left_00003_00006_00008' direct represents '5' with '4513'
4510 -4512 4513 0
-4513 4512 0
-4513 -4510 0
c Var 'max_left_00003_00006_00008' order represents '6' with '4514'
-4512 4514 0
c Var 'max_left_00003_00006_00008' direct represents '6' with '4515'
4512 -4514 4515 0
-4515 4514 0
-4515 -4512 0
c Var 'max_left_00003_00006_00008' order represents '7' with '4516'
-4514 4516 0
c Var 'max_left_00003_00006_00008' direct represents '7' with '4517'
4514 -4516 4517 0
-4517 4516 0
-4517 -4514 0
c Var 'max_left_00003_00006_00008' order represents '8' with '4518'
-4516 4518 0
c Var 'max_left_00003_00006_00008' direct represents '8' with '4519'
4516 -4518 4519 0
-4519 4518 0
-4519 -4516 0
c Var 'max_left_00003_00006_00008' direct represents '9' with '-4518'
4505 4507 4509 4511 4513 4515 4517 4519 -4518 0
c Encoding variable: max_left_00003_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00006_00009' order represents '1' with '4520'
c Var 'max_left_00003_00006_00009' direct represents '1' with '4520'
c Var 'max_left_00003_00006_00009' order represents '2' with '4521'
-4520 4521 0
c Var 'max_left_00003_00006_00009' direct represents '2' with '4522'
4520 -4521 4522 0
-4522 4521 0
-4522 -4520 0
c Var 'max_left_00003_00006_00009' order represents '3' with '4523'
-4521 4523 0
c Var 'max_left_00003_00006_00009' direct represents '3' with '4524'
4521 -4523 4524 0
-4524 4523 0
-4524 -4521 0
c Var 'max_left_00003_00006_00009' order represents '4' with '4525'
-4523 4525 0
c Var 'max_left_00003_00006_00009' direct represents '4' with '4526'
4523 -4525 4526 0
-4526 4525 0
-4526 -4523 0
c Var 'max_left_00003_00006_00009' order represents '5' with '4527'
-4525 4527 0
c Var 'max_left_00003_00006_00009' direct represents '5' with '4528'
4525 -4527 4528 0
-4528 4527 0
-4528 -4525 0
c Var 'max_left_00003_00006_00009' order represents '6' with '4529'
-4527 4529 0
c Var 'max_left_00003_00006_00009' direct represents '6' with '4530'
4527 -4529 4530 0
-4530 4529 0
-4530 -4527 0
c Var 'max_left_00003_00006_00009' order represents '7' with '4531'
-4529 4531 0
c Var 'max_left_00003_00006_00009' direct represents '7' with '4532'
4529 -4531 4532 0
-4532 4531 0
-4532 -4529 0
c Var 'max_left_00003_00006_00009' order represents '8' with '4533'
-4531 4533 0
c Var 'max_left_00003_00006_00009' direct represents '8' with '4534'
4531 -4533 4534 0
-4534 4533 0
-4534 -4531 0
c Var 'max_left_00003_00006_00009' direct represents '9' with '-4533'
4520 4522 4524 4526 4528 4530 4532 4534 -4533 0
c Encoding variable: max_left_00003_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00007_00000' direct represents '0' with '4535'
4535 0
c Encoding variable: max_left_00003_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00001' order represents '1' with '4536'
c Var 'max_left_00003_00007_00001' direct represents '1' with '4536'
c Var 'max_left_00003_00007_00001' order represents '2' with '4537'
-4536 4537 0
c Var 'max_left_00003_00007_00001' direct represents '2' with '4538'
4536 -4537 4538 0
-4538 4537 0
-4538 -4536 0
c Var 'max_left_00003_00007_00001' order represents '3' with '4539'
-4537 4539 0
c Var 'max_left_00003_00007_00001' direct represents '3' with '4540'
4537 -4539 4540 0
-4540 4539 0
-4540 -4537 0
c Var 'max_left_00003_00007_00001' order represents '4' with '4541'
-4539 4541 0
c Var 'max_left_00003_00007_00001' direct represents '4' with '4542'
4539 -4541 4542 0
-4542 4541 0
-4542 -4539 0
c Var 'max_left_00003_00007_00001' order represents '5' with '4543'
-4541 4543 0
c Var 'max_left_00003_00007_00001' direct represents '5' with '4544'
4541 -4543 4544 0
-4544 4543 0
-4544 -4541 0
c Var 'max_left_00003_00007_00001' order represents '6' with '4545'
-4543 4545 0
c Var 'max_left_00003_00007_00001' direct represents '6' with '4546'
4543 -4545 4546 0
-4546 4545 0
-4546 -4543 0
c Var 'max_left_00003_00007_00001' order represents '7' with '4547'
-4545 4547 0
c Var 'max_left_00003_00007_00001' direct represents '7' with '4548'
4545 -4547 4548 0
-4548 4547 0
-4548 -4545 0
c Var 'max_left_00003_00007_00001' order represents '8' with '4549'
-4547 4549 0
c Var 'max_left_00003_00007_00001' direct represents '8' with '4550'
4547 -4549 4550 0
-4550 4549 0
-4550 -4547 0
c Var 'max_left_00003_00007_00001' direct represents '9' with '-4549'
4536 4538 4540 4542 4544 4546 4548 4550 -4549 0
c Encoding variable: max_left_00003_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00002' order represents '1' with '4551'
c Var 'max_left_00003_00007_00002' direct represents '1' with '4551'
c Var 'max_left_00003_00007_00002' order represents '2' with '4552'
-4551 4552 0
c Var 'max_left_00003_00007_00002' direct represents '2' with '4553'
4551 -4552 4553 0
-4553 4552 0
-4553 -4551 0
c Var 'max_left_00003_00007_00002' order represents '3' with '4554'
-4552 4554 0
c Var 'max_left_00003_00007_00002' direct represents '3' with '4555'
4552 -4554 4555 0
-4555 4554 0
-4555 -4552 0
c Var 'max_left_00003_00007_00002' order represents '4' with '4556'
-4554 4556 0
c Var 'max_left_00003_00007_00002' direct represents '4' with '4557'
4554 -4556 4557 0
-4557 4556 0
-4557 -4554 0
c Var 'max_left_00003_00007_00002' order represents '5' with '4558'
-4556 4558 0
c Var 'max_left_00003_00007_00002' direct represents '5' with '4559'
4556 -4558 4559 0
-4559 4558 0
-4559 -4556 0
c Var 'max_left_00003_00007_00002' order represents '6' with '4560'
-4558 4560 0
c Var 'max_left_00003_00007_00002' direct represents '6' with '4561'
4558 -4560 4561 0
-4561 4560 0
-4561 -4558 0
c Var 'max_left_00003_00007_00002' order represents '7' with '4562'
-4560 4562 0
c Var 'max_left_00003_00007_00002' direct represents '7' with '4563'
4560 -4562 4563 0
-4563 4562 0
-4563 -4560 0
c Var 'max_left_00003_00007_00002' order represents '8' with '4564'
-4562 4564 0
c Var 'max_left_00003_00007_00002' direct represents '8' with '4565'
4562 -4564 4565 0
-4565 4564 0
-4565 -4562 0
c Var 'max_left_00003_00007_00002' direct represents '9' with '-4564'
4551 4553 4555 4557 4559 4561 4563 4565 -4564 0
c Encoding variable: max_left_00003_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00003' order represents '1' with '4566'
c Var 'max_left_00003_00007_00003' direct represents '1' with '4566'
c Var 'max_left_00003_00007_00003' order represents '2' with '4567'
-4566 4567 0
c Var 'max_left_00003_00007_00003' direct represents '2' with '4568'
4566 -4567 4568 0
-4568 4567 0
-4568 -4566 0
c Var 'max_left_00003_00007_00003' order represents '3' with '4569'
-4567 4569 0
c Var 'max_left_00003_00007_00003' direct represents '3' with '4570'
4567 -4569 4570 0
-4570 4569 0
-4570 -4567 0
c Var 'max_left_00003_00007_00003' order represents '4' with '4571'
-4569 4571 0
c Var 'max_left_00003_00007_00003' direct represents '4' with '4572'
4569 -4571 4572 0
-4572 4571 0
-4572 -4569 0
c Var 'max_left_00003_00007_00003' order represents '5' with '4573'
-4571 4573 0
c Var 'max_left_00003_00007_00003' direct represents '5' with '4574'
4571 -4573 4574 0
-4574 4573 0
-4574 -4571 0
c Var 'max_left_00003_00007_00003' order represents '6' with '4575'
-4573 4575 0
c Var 'max_left_00003_00007_00003' direct represents '6' with '4576'
4573 -4575 4576 0
-4576 4575 0
-4576 -4573 0
c Var 'max_left_00003_00007_00003' order represents '7' with '4577'
-4575 4577 0
c Var 'max_left_00003_00007_00003' direct represents '7' with '4578'
4575 -4577 4578 0
-4578 4577 0
-4578 -4575 0
c Var 'max_left_00003_00007_00003' order represents '8' with '4579'
-4577 4579 0
c Var 'max_left_00003_00007_00003' direct represents '8' with '4580'
4577 -4579 4580 0
-4580 4579 0
-4580 -4577 0
c Var 'max_left_00003_00007_00003' direct represents '9' with '-4579'
4566 4568 4570 4572 4574 4576 4578 4580 -4579 0
c Encoding variable: max_left_00003_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00004' order represents '1' with '4581'
c Var 'max_left_00003_00007_00004' direct represents '1' with '4581'
c Var 'max_left_00003_00007_00004' order represents '2' with '4582'
-4581 4582 0
c Var 'max_left_00003_00007_00004' direct represents '2' with '4583'
4581 -4582 4583 0
-4583 4582 0
-4583 -4581 0
c Var 'max_left_00003_00007_00004' order represents '3' with '4584'
-4582 4584 0
c Var 'max_left_00003_00007_00004' direct represents '3' with '4585'
4582 -4584 4585 0
-4585 4584 0
-4585 -4582 0
c Var 'max_left_00003_00007_00004' order represents '4' with '4586'
-4584 4586 0
c Var 'max_left_00003_00007_00004' direct represents '4' with '4587'
4584 -4586 4587 0
-4587 4586 0
-4587 -4584 0
c Var 'max_left_00003_00007_00004' order represents '5' with '4588'
-4586 4588 0
c Var 'max_left_00003_00007_00004' direct represents '5' with '4589'
4586 -4588 4589 0
-4589 4588 0
-4589 -4586 0
c Var 'max_left_00003_00007_00004' order represents '6' with '4590'
-4588 4590 0
c Var 'max_left_00003_00007_00004' direct represents '6' with '4591'
4588 -4590 4591 0
-4591 4590 0
-4591 -4588 0
c Var 'max_left_00003_00007_00004' order represents '7' with '4592'
-4590 4592 0
c Var 'max_left_00003_00007_00004' direct represents '7' with '4593'
4590 -4592 4593 0
-4593 4592 0
-4593 -4590 0
c Var 'max_left_00003_00007_00004' order represents '8' with '4594'
-4592 4594 0
c Var 'max_left_00003_00007_00004' direct represents '8' with '4595'
4592 -4594 4595 0
-4595 4594 0
-4595 -4592 0
c Var 'max_left_00003_00007_00004' direct represents '9' with '-4594'
4581 4583 4585 4587 4589 4591 4593 4595 -4594 0
c Encoding variable: max_left_00003_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00005' order represents '1' with '4596'
c Var 'max_left_00003_00007_00005' direct represents '1' with '4596'
c Var 'max_left_00003_00007_00005' order represents '2' with '4597'
-4596 4597 0
c Var 'max_left_00003_00007_00005' direct represents '2' with '4598'
4596 -4597 4598 0
-4598 4597 0
-4598 -4596 0
c Var 'max_left_00003_00007_00005' order represents '3' with '4599'
-4597 4599 0
c Var 'max_left_00003_00007_00005' direct represents '3' with '4600'
4597 -4599 4600 0
-4600 4599 0
-4600 -4597 0
c Var 'max_left_00003_00007_00005' order represents '4' with '4601'
-4599 4601 0
c Var 'max_left_00003_00007_00005' direct represents '4' with '4602'
4599 -4601 4602 0
-4602 4601 0
-4602 -4599 0
c Var 'max_left_00003_00007_00005' order represents '5' with '4603'
-4601 4603 0
c Var 'max_left_00003_00007_00005' direct represents '5' with '4604'
4601 -4603 4604 0
-4604 4603 0
-4604 -4601 0
c Var 'max_left_00003_00007_00005' order represents '6' with '4605'
-4603 4605 0
c Var 'max_left_00003_00007_00005' direct represents '6' with '4606'
4603 -4605 4606 0
-4606 4605 0
-4606 -4603 0
c Var 'max_left_00003_00007_00005' order represents '7' with '4607'
-4605 4607 0
c Var 'max_left_00003_00007_00005' direct represents '7' with '4608'
4605 -4607 4608 0
-4608 4607 0
-4608 -4605 0
c Var 'max_left_00003_00007_00005' order represents '8' with '4609'
-4607 4609 0
c Var 'max_left_00003_00007_00005' direct represents '8' with '4610'
4607 -4609 4610 0
-4610 4609 0
-4610 -4607 0
c Var 'max_left_00003_00007_00005' direct represents '9' with '-4609'
4596 4598 4600 4602 4604 4606 4608 4610 -4609 0
c Encoding variable: max_left_00003_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00006' order represents '1' with '4611'
c Var 'max_left_00003_00007_00006' direct represents '1' with '4611'
c Var 'max_left_00003_00007_00006' order represents '2' with '4612'
-4611 4612 0
c Var 'max_left_00003_00007_00006' direct represents '2' with '4613'
4611 -4612 4613 0
-4613 4612 0
-4613 -4611 0
c Var 'max_left_00003_00007_00006' order represents '3' with '4614'
-4612 4614 0
c Var 'max_left_00003_00007_00006' direct represents '3' with '4615'
4612 -4614 4615 0
-4615 4614 0
-4615 -4612 0
c Var 'max_left_00003_00007_00006' order represents '4' with '4616'
-4614 4616 0
c Var 'max_left_00003_00007_00006' direct represents '4' with '4617'
4614 -4616 4617 0
-4617 4616 0
-4617 -4614 0
c Var 'max_left_00003_00007_00006' order represents '5' with '4618'
-4616 4618 0
c Var 'max_left_00003_00007_00006' direct represents '5' with '4619'
4616 -4618 4619 0
-4619 4618 0
-4619 -4616 0
c Var 'max_left_00003_00007_00006' order represents '6' with '4620'
-4618 4620 0
c Var 'max_left_00003_00007_00006' direct represents '6' with '4621'
4618 -4620 4621 0
-4621 4620 0
-4621 -4618 0
c Var 'max_left_00003_00007_00006' order represents '7' with '4622'
-4620 4622 0
c Var 'max_left_00003_00007_00006' direct represents '7' with '4623'
4620 -4622 4623 0
-4623 4622 0
-4623 -4620 0
c Var 'max_left_00003_00007_00006' order represents '8' with '4624'
-4622 4624 0
c Var 'max_left_00003_00007_00006' direct represents '8' with '4625'
4622 -4624 4625 0
-4625 4624 0
-4625 -4622 0
c Var 'max_left_00003_00007_00006' direct represents '9' with '-4624'
4611 4613 4615 4617 4619 4621 4623 4625 -4624 0
c Encoding variable: max_left_00003_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00007' order represents '1' with '4626'
c Var 'max_left_00003_00007_00007' direct represents '1' with '4626'
c Var 'max_left_00003_00007_00007' order represents '2' with '4627'
-4626 4627 0
c Var 'max_left_00003_00007_00007' direct represents '2' with '4628'
4626 -4627 4628 0
-4628 4627 0
-4628 -4626 0
c Var 'max_left_00003_00007_00007' order represents '3' with '4629'
-4627 4629 0
c Var 'max_left_00003_00007_00007' direct represents '3' with '4630'
4627 -4629 4630 0
-4630 4629 0
-4630 -4627 0
c Var 'max_left_00003_00007_00007' order represents '4' with '4631'
-4629 4631 0
c Var 'max_left_00003_00007_00007' direct represents '4' with '4632'
4629 -4631 4632 0
-4632 4631 0
-4632 -4629 0
c Var 'max_left_00003_00007_00007' order represents '5' with '4633'
-4631 4633 0
c Var 'max_left_00003_00007_00007' direct represents '5' with '4634'
4631 -4633 4634 0
-4634 4633 0
-4634 -4631 0
c Var 'max_left_00003_00007_00007' order represents '6' with '4635'
-4633 4635 0
c Var 'max_left_00003_00007_00007' direct represents '6' with '4636'
4633 -4635 4636 0
-4636 4635 0
-4636 -4633 0
c Var 'max_left_00003_00007_00007' order represents '7' with '4637'
-4635 4637 0
c Var 'max_left_00003_00007_00007' direct represents '7' with '4638'
4635 -4637 4638 0
-4638 4637 0
-4638 -4635 0
c Var 'max_left_00003_00007_00007' order represents '8' with '4639'
-4637 4639 0
c Var 'max_left_00003_00007_00007' direct represents '8' with '4640'
4637 -4639 4640 0
-4640 4639 0
-4640 -4637 0
c Var 'max_left_00003_00007_00007' direct represents '9' with '-4639'
4626 4628 4630 4632 4634 4636 4638 4640 -4639 0
c Encoding variable: max_left_00003_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00008' order represents '1' with '4641'
c Var 'max_left_00003_00007_00008' direct represents '1' with '4641'
c Var 'max_left_00003_00007_00008' order represents '2' with '4642'
-4641 4642 0
c Var 'max_left_00003_00007_00008' direct represents '2' with '4643'
4641 -4642 4643 0
-4643 4642 0
-4643 -4641 0
c Var 'max_left_00003_00007_00008' order represents '3' with '4644'
-4642 4644 0
c Var 'max_left_00003_00007_00008' direct represents '3' with '4645'
4642 -4644 4645 0
-4645 4644 0
-4645 -4642 0
c Var 'max_left_00003_00007_00008' order represents '4' with '4646'
-4644 4646 0
c Var 'max_left_00003_00007_00008' direct represents '4' with '4647'
4644 -4646 4647 0
-4647 4646 0
-4647 -4644 0
c Var 'max_left_00003_00007_00008' order represents '5' with '4648'
-4646 4648 0
c Var 'max_left_00003_00007_00008' direct represents '5' with '4649'
4646 -4648 4649 0
-4649 4648 0
-4649 -4646 0
c Var 'max_left_00003_00007_00008' order represents '6' with '4650'
-4648 4650 0
c Var 'max_left_00003_00007_00008' direct represents '6' with '4651'
4648 -4650 4651 0
-4651 4650 0
-4651 -4648 0
c Var 'max_left_00003_00007_00008' order represents '7' with '4652'
-4650 4652 0
c Var 'max_left_00003_00007_00008' direct represents '7' with '4653'
4650 -4652 4653 0
-4653 4652 0
-4653 -4650 0
c Var 'max_left_00003_00007_00008' order represents '8' with '4654'
-4652 4654 0
c Var 'max_left_00003_00007_00008' direct represents '8' with '4655'
4652 -4654 4655 0
-4655 4654 0
-4655 -4652 0
c Var 'max_left_00003_00007_00008' direct represents '9' with '-4654'
4641 4643 4645 4647 4649 4651 4653 4655 -4654 0
c Encoding variable: max_left_00003_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00007_00009' order represents '1' with '4656'
c Var 'max_left_00003_00007_00009' direct represents '1' with '4656'
c Var 'max_left_00003_00007_00009' order represents '2' with '4657'
-4656 4657 0
c Var 'max_left_00003_00007_00009' direct represents '2' with '4658'
4656 -4657 4658 0
-4658 4657 0
-4658 -4656 0
c Var 'max_left_00003_00007_00009' order represents '3' with '4659'
-4657 4659 0
c Var 'max_left_00003_00007_00009' direct represents '3' with '4660'
4657 -4659 4660 0
-4660 4659 0
-4660 -4657 0
c Var 'max_left_00003_00007_00009' order represents '4' with '4661'
-4659 4661 0
c Var 'max_left_00003_00007_00009' direct represents '4' with '4662'
4659 -4661 4662 0
-4662 4661 0
-4662 -4659 0
c Var 'max_left_00003_00007_00009' order represents '5' with '4663'
-4661 4663 0
c Var 'max_left_00003_00007_00009' direct represents '5' with '4664'
4661 -4663 4664 0
-4664 4663 0
-4664 -4661 0
c Var 'max_left_00003_00007_00009' order represents '6' with '4665'
-4663 4665 0
c Var 'max_left_00003_00007_00009' direct represents '6' with '4666'
4663 -4665 4666 0
-4666 4665 0
-4666 -4663 0
c Var 'max_left_00003_00007_00009' order represents '7' with '4667'
-4665 4667 0
c Var 'max_left_00003_00007_00009' direct represents '7' with '4668'
4665 -4667 4668 0
-4668 4667 0
-4668 -4665 0
c Var 'max_left_00003_00007_00009' order represents '8' with '4669'
-4667 4669 0
c Var 'max_left_00003_00007_00009' direct represents '8' with '4670'
4667 -4669 4670 0
-4670 4669 0
-4670 -4667 0
c Var 'max_left_00003_00007_00009' direct represents '9' with '-4669'
4656 4658 4660 4662 4664 4666 4668 4670 -4669 0
c Encoding variable: max_left_00003_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00008_00000' direct represents '0' with '4671'
4671 0
c Encoding variable: max_left_00003_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00001' order represents '1' with '4672'
c Var 'max_left_00003_00008_00001' direct represents '1' with '4672'
c Var 'max_left_00003_00008_00001' order represents '2' with '4673'
-4672 4673 0
c Var 'max_left_00003_00008_00001' direct represents '2' with '4674'
4672 -4673 4674 0
-4674 4673 0
-4674 -4672 0
c Var 'max_left_00003_00008_00001' order represents '3' with '4675'
-4673 4675 0
c Var 'max_left_00003_00008_00001' direct represents '3' with '4676'
4673 -4675 4676 0
-4676 4675 0
-4676 -4673 0
c Var 'max_left_00003_00008_00001' order represents '4' with '4677'
-4675 4677 0
c Var 'max_left_00003_00008_00001' direct represents '4' with '4678'
4675 -4677 4678 0
-4678 4677 0
-4678 -4675 0
c Var 'max_left_00003_00008_00001' order represents '5' with '4679'
-4677 4679 0
c Var 'max_left_00003_00008_00001' direct represents '5' with '4680'
4677 -4679 4680 0
-4680 4679 0
-4680 -4677 0
c Var 'max_left_00003_00008_00001' order represents '6' with '4681'
-4679 4681 0
c Var 'max_left_00003_00008_00001' direct represents '6' with '4682'
4679 -4681 4682 0
-4682 4681 0
-4682 -4679 0
c Var 'max_left_00003_00008_00001' order represents '7' with '4683'
-4681 4683 0
c Var 'max_left_00003_00008_00001' direct represents '7' with '4684'
4681 -4683 4684 0
-4684 4683 0
-4684 -4681 0
c Var 'max_left_00003_00008_00001' order represents '8' with '4685'
-4683 4685 0
c Var 'max_left_00003_00008_00001' direct represents '8' with '4686'
4683 -4685 4686 0
-4686 4685 0
-4686 -4683 0
c Var 'max_left_00003_00008_00001' direct represents '9' with '-4685'
4672 4674 4676 4678 4680 4682 4684 4686 -4685 0
c Encoding variable: max_left_00003_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00002' order represents '1' with '4687'
c Var 'max_left_00003_00008_00002' direct represents '1' with '4687'
c Var 'max_left_00003_00008_00002' order represents '2' with '4688'
-4687 4688 0
c Var 'max_left_00003_00008_00002' direct represents '2' with '4689'
4687 -4688 4689 0
-4689 4688 0
-4689 -4687 0
c Var 'max_left_00003_00008_00002' order represents '3' with '4690'
-4688 4690 0
c Var 'max_left_00003_00008_00002' direct represents '3' with '4691'
4688 -4690 4691 0
-4691 4690 0
-4691 -4688 0
c Var 'max_left_00003_00008_00002' order represents '4' with '4692'
-4690 4692 0
c Var 'max_left_00003_00008_00002' direct represents '4' with '4693'
4690 -4692 4693 0
-4693 4692 0
-4693 -4690 0
c Var 'max_left_00003_00008_00002' order represents '5' with '4694'
-4692 4694 0
c Var 'max_left_00003_00008_00002' direct represents '5' with '4695'
4692 -4694 4695 0
-4695 4694 0
-4695 -4692 0
c Var 'max_left_00003_00008_00002' order represents '6' with '4696'
-4694 4696 0
c Var 'max_left_00003_00008_00002' direct represents '6' with '4697'
4694 -4696 4697 0
-4697 4696 0
-4697 -4694 0
c Var 'max_left_00003_00008_00002' order represents '7' with '4698'
-4696 4698 0
c Var 'max_left_00003_00008_00002' direct represents '7' with '4699'
4696 -4698 4699 0
-4699 4698 0
-4699 -4696 0
c Var 'max_left_00003_00008_00002' order represents '8' with '4700'
-4698 4700 0
c Var 'max_left_00003_00008_00002' direct represents '8' with '4701'
4698 -4700 4701 0
-4701 4700 0
-4701 -4698 0
c Var 'max_left_00003_00008_00002' direct represents '9' with '-4700'
4687 4689 4691 4693 4695 4697 4699 4701 -4700 0
c Encoding variable: max_left_00003_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00003' order represents '1' with '4702'
c Var 'max_left_00003_00008_00003' direct represents '1' with '4702'
c Var 'max_left_00003_00008_00003' order represents '2' with '4703'
-4702 4703 0
c Var 'max_left_00003_00008_00003' direct represents '2' with '4704'
4702 -4703 4704 0
-4704 4703 0
-4704 -4702 0
c Var 'max_left_00003_00008_00003' order represents '3' with '4705'
-4703 4705 0
c Var 'max_left_00003_00008_00003' direct represents '3' with '4706'
4703 -4705 4706 0
-4706 4705 0
-4706 -4703 0
c Var 'max_left_00003_00008_00003' order represents '4' with '4707'
-4705 4707 0
c Var 'max_left_00003_00008_00003' direct represents '4' with '4708'
4705 -4707 4708 0
-4708 4707 0
-4708 -4705 0
c Var 'max_left_00003_00008_00003' order represents '5' with '4709'
-4707 4709 0
c Var 'max_left_00003_00008_00003' direct represents '5' with '4710'
4707 -4709 4710 0
-4710 4709 0
-4710 -4707 0
c Var 'max_left_00003_00008_00003' order represents '6' with '4711'
-4709 4711 0
c Var 'max_left_00003_00008_00003' direct represents '6' with '4712'
4709 -4711 4712 0
-4712 4711 0
-4712 -4709 0
c Var 'max_left_00003_00008_00003' order represents '7' with '4713'
-4711 4713 0
c Var 'max_left_00003_00008_00003' direct represents '7' with '4714'
4711 -4713 4714 0
-4714 4713 0
-4714 -4711 0
c Var 'max_left_00003_00008_00003' order represents '8' with '4715'
-4713 4715 0
c Var 'max_left_00003_00008_00003' direct represents '8' with '4716'
4713 -4715 4716 0
-4716 4715 0
-4716 -4713 0
c Var 'max_left_00003_00008_00003' direct represents '9' with '-4715'
4702 4704 4706 4708 4710 4712 4714 4716 -4715 0
c Encoding variable: max_left_00003_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00004' order represents '1' with '4717'
c Var 'max_left_00003_00008_00004' direct represents '1' with '4717'
c Var 'max_left_00003_00008_00004' order represents '2' with '4718'
-4717 4718 0
c Var 'max_left_00003_00008_00004' direct represents '2' with '4719'
4717 -4718 4719 0
-4719 4718 0
-4719 -4717 0
c Var 'max_left_00003_00008_00004' order represents '3' with '4720'
-4718 4720 0
c Var 'max_left_00003_00008_00004' direct represents '3' with '4721'
4718 -4720 4721 0
-4721 4720 0
-4721 -4718 0
c Var 'max_left_00003_00008_00004' order represents '4' with '4722'
-4720 4722 0
c Var 'max_left_00003_00008_00004' direct represents '4' with '4723'
4720 -4722 4723 0
-4723 4722 0
-4723 -4720 0
c Var 'max_left_00003_00008_00004' order represents '5' with '4724'
-4722 4724 0
c Var 'max_left_00003_00008_00004' direct represents '5' with '4725'
4722 -4724 4725 0
-4725 4724 0
-4725 -4722 0
c Var 'max_left_00003_00008_00004' order represents '6' with '4726'
-4724 4726 0
c Var 'max_left_00003_00008_00004' direct represents '6' with '4727'
4724 -4726 4727 0
-4727 4726 0
-4727 -4724 0
c Var 'max_left_00003_00008_00004' order represents '7' with '4728'
-4726 4728 0
c Var 'max_left_00003_00008_00004' direct represents '7' with '4729'
4726 -4728 4729 0
-4729 4728 0
-4729 -4726 0
c Var 'max_left_00003_00008_00004' order represents '8' with '4730'
-4728 4730 0
c Var 'max_left_00003_00008_00004' direct represents '8' with '4731'
4728 -4730 4731 0
-4731 4730 0
-4731 -4728 0
c Var 'max_left_00003_00008_00004' direct represents '9' with '-4730'
4717 4719 4721 4723 4725 4727 4729 4731 -4730 0
c Encoding variable: max_left_00003_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00005' order represents '1' with '4732'
c Var 'max_left_00003_00008_00005' direct represents '1' with '4732'
c Var 'max_left_00003_00008_00005' order represents '2' with '4733'
-4732 4733 0
c Var 'max_left_00003_00008_00005' direct represents '2' with '4734'
4732 -4733 4734 0
-4734 4733 0
-4734 -4732 0
c Var 'max_left_00003_00008_00005' order represents '3' with '4735'
-4733 4735 0
c Var 'max_left_00003_00008_00005' direct represents '3' with '4736'
4733 -4735 4736 0
-4736 4735 0
-4736 -4733 0
c Var 'max_left_00003_00008_00005' order represents '4' with '4737'
-4735 4737 0
c Var 'max_left_00003_00008_00005' direct represents '4' with '4738'
4735 -4737 4738 0
-4738 4737 0
-4738 -4735 0
c Var 'max_left_00003_00008_00005' order represents '5' with '4739'
-4737 4739 0
c Var 'max_left_00003_00008_00005' direct represents '5' with '4740'
4737 -4739 4740 0
-4740 4739 0
-4740 -4737 0
c Var 'max_left_00003_00008_00005' order represents '6' with '4741'
-4739 4741 0
c Var 'max_left_00003_00008_00005' direct represents '6' with '4742'
4739 -4741 4742 0
-4742 4741 0
-4742 -4739 0
c Var 'max_left_00003_00008_00005' order represents '7' with '4743'
-4741 4743 0
c Var 'max_left_00003_00008_00005' direct represents '7' with '4744'
4741 -4743 4744 0
-4744 4743 0
-4744 -4741 0
c Var 'max_left_00003_00008_00005' order represents '8' with '4745'
-4743 4745 0
c Var 'max_left_00003_00008_00005' direct represents '8' with '4746'
4743 -4745 4746 0
-4746 4745 0
-4746 -4743 0
c Var 'max_left_00003_00008_00005' direct represents '9' with '-4745'
4732 4734 4736 4738 4740 4742 4744 4746 -4745 0
c Encoding variable: max_left_00003_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00006' order represents '1' with '4747'
c Var 'max_left_00003_00008_00006' direct represents '1' with '4747'
c Var 'max_left_00003_00008_00006' order represents '2' with '4748'
-4747 4748 0
c Var 'max_left_00003_00008_00006' direct represents '2' with '4749'
4747 -4748 4749 0
-4749 4748 0
-4749 -4747 0
c Var 'max_left_00003_00008_00006' order represents '3' with '4750'
-4748 4750 0
c Var 'max_left_00003_00008_00006' direct represents '3' with '4751'
4748 -4750 4751 0
-4751 4750 0
-4751 -4748 0
c Var 'max_left_00003_00008_00006' order represents '4' with '4752'
-4750 4752 0
c Var 'max_left_00003_00008_00006' direct represents '4' with '4753'
4750 -4752 4753 0
-4753 4752 0
-4753 -4750 0
c Var 'max_left_00003_00008_00006' order represents '5' with '4754'
-4752 4754 0
c Var 'max_left_00003_00008_00006' direct represents '5' with '4755'
4752 -4754 4755 0
-4755 4754 0
-4755 -4752 0
c Var 'max_left_00003_00008_00006' order represents '6' with '4756'
-4754 4756 0
c Var 'max_left_00003_00008_00006' direct represents '6' with '4757'
4754 -4756 4757 0
-4757 4756 0
-4757 -4754 0
c Var 'max_left_00003_00008_00006' order represents '7' with '4758'
-4756 4758 0
c Var 'max_left_00003_00008_00006' direct represents '7' with '4759'
4756 -4758 4759 0
-4759 4758 0
-4759 -4756 0
c Var 'max_left_00003_00008_00006' order represents '8' with '4760'
-4758 4760 0
c Var 'max_left_00003_00008_00006' direct represents '8' with '4761'
4758 -4760 4761 0
-4761 4760 0
-4761 -4758 0
c Var 'max_left_00003_00008_00006' direct represents '9' with '-4760'
4747 4749 4751 4753 4755 4757 4759 4761 -4760 0
c Encoding variable: max_left_00003_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00007' order represents '1' with '4762'
c Var 'max_left_00003_00008_00007' direct represents '1' with '4762'
c Var 'max_left_00003_00008_00007' order represents '2' with '4763'
-4762 4763 0
c Var 'max_left_00003_00008_00007' direct represents '2' with '4764'
4762 -4763 4764 0
-4764 4763 0
-4764 -4762 0
c Var 'max_left_00003_00008_00007' order represents '3' with '4765'
-4763 4765 0
c Var 'max_left_00003_00008_00007' direct represents '3' with '4766'
4763 -4765 4766 0
-4766 4765 0
-4766 -4763 0
c Var 'max_left_00003_00008_00007' order represents '4' with '4767'
-4765 4767 0
c Var 'max_left_00003_00008_00007' direct represents '4' with '4768'
4765 -4767 4768 0
-4768 4767 0
-4768 -4765 0
c Var 'max_left_00003_00008_00007' order represents '5' with '4769'
-4767 4769 0
c Var 'max_left_00003_00008_00007' direct represents '5' with '4770'
4767 -4769 4770 0
-4770 4769 0
-4770 -4767 0
c Var 'max_left_00003_00008_00007' order represents '6' with '4771'
-4769 4771 0
c Var 'max_left_00003_00008_00007' direct represents '6' with '4772'
4769 -4771 4772 0
-4772 4771 0
-4772 -4769 0
c Var 'max_left_00003_00008_00007' order represents '7' with '4773'
-4771 4773 0
c Var 'max_left_00003_00008_00007' direct represents '7' with '4774'
4771 -4773 4774 0
-4774 4773 0
-4774 -4771 0
c Var 'max_left_00003_00008_00007' order represents '8' with '4775'
-4773 4775 0
c Var 'max_left_00003_00008_00007' direct represents '8' with '4776'
4773 -4775 4776 0
-4776 4775 0
-4776 -4773 0
c Var 'max_left_00003_00008_00007' direct represents '9' with '-4775'
4762 4764 4766 4768 4770 4772 4774 4776 -4775 0
c Encoding variable: max_left_00003_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00008' order represents '1' with '4777'
c Var 'max_left_00003_00008_00008' direct represents '1' with '4777'
c Var 'max_left_00003_00008_00008' order represents '2' with '4778'
-4777 4778 0
c Var 'max_left_00003_00008_00008' direct represents '2' with '4779'
4777 -4778 4779 0
-4779 4778 0
-4779 -4777 0
c Var 'max_left_00003_00008_00008' order represents '3' with '4780'
-4778 4780 0
c Var 'max_left_00003_00008_00008' direct represents '3' with '4781'
4778 -4780 4781 0
-4781 4780 0
-4781 -4778 0
c Var 'max_left_00003_00008_00008' order represents '4' with '4782'
-4780 4782 0
c Var 'max_left_00003_00008_00008' direct represents '4' with '4783'
4780 -4782 4783 0
-4783 4782 0
-4783 -4780 0
c Var 'max_left_00003_00008_00008' order represents '5' with '4784'
-4782 4784 0
c Var 'max_left_00003_00008_00008' direct represents '5' with '4785'
4782 -4784 4785 0
-4785 4784 0
-4785 -4782 0
c Var 'max_left_00003_00008_00008' order represents '6' with '4786'
-4784 4786 0
c Var 'max_left_00003_00008_00008' direct represents '6' with '4787'
4784 -4786 4787 0
-4787 4786 0
-4787 -4784 0
c Var 'max_left_00003_00008_00008' order represents '7' with '4788'
-4786 4788 0
c Var 'max_left_00003_00008_00008' direct represents '7' with '4789'
4786 -4788 4789 0
-4789 4788 0
-4789 -4786 0
c Var 'max_left_00003_00008_00008' order represents '8' with '4790'
-4788 4790 0
c Var 'max_left_00003_00008_00008' direct represents '8' with '4791'
4788 -4790 4791 0
-4791 4790 0
-4791 -4788 0
c Var 'max_left_00003_00008_00008' direct represents '9' with '-4790'
4777 4779 4781 4783 4785 4787 4789 4791 -4790 0
c Encoding variable: max_left_00003_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00008_00009' order represents '1' with '4792'
c Var 'max_left_00003_00008_00009' direct represents '1' with '4792'
c Var 'max_left_00003_00008_00009' order represents '2' with '4793'
-4792 4793 0
c Var 'max_left_00003_00008_00009' direct represents '2' with '4794'
4792 -4793 4794 0
-4794 4793 0
-4794 -4792 0
c Var 'max_left_00003_00008_00009' order represents '3' with '4795'
-4793 4795 0
c Var 'max_left_00003_00008_00009' direct represents '3' with '4796'
4793 -4795 4796 0
-4796 4795 0
-4796 -4793 0
c Var 'max_left_00003_00008_00009' order represents '4' with '4797'
-4795 4797 0
c Var 'max_left_00003_00008_00009' direct represents '4' with '4798'
4795 -4797 4798 0
-4798 4797 0
-4798 -4795 0
c Var 'max_left_00003_00008_00009' order represents '5' with '4799'
-4797 4799 0
c Var 'max_left_00003_00008_00009' direct represents '5' with '4800'
4797 -4799 4800 0
-4800 4799 0
-4800 -4797 0
c Var 'max_left_00003_00008_00009' order represents '6' with '4801'
-4799 4801 0
c Var 'max_left_00003_00008_00009' direct represents '6' with '4802'
4799 -4801 4802 0
-4802 4801 0
-4802 -4799 0
c Var 'max_left_00003_00008_00009' order represents '7' with '4803'
-4801 4803 0
c Var 'max_left_00003_00008_00009' direct represents '7' with '4804'
4801 -4803 4804 0
-4804 4803 0
-4804 -4801 0
c Var 'max_left_00003_00008_00009' order represents '8' with '4805'
-4803 4805 0
c Var 'max_left_00003_00008_00009' direct represents '8' with '4806'
4803 -4805 4806 0
-4806 4805 0
-4806 -4803 0
c Var 'max_left_00003_00008_00009' direct represents '9' with '-4805'
4792 4794 4796 4798 4800 4802 4804 4806 -4805 0
c Encoding variable: max_left_00003_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00003_00009_00000' direct represents '0' with '4807'
4807 0
c Encoding variable: max_left_00003_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00001' order represents '1' with '4808'
c Var 'max_left_00003_00009_00001' direct represents '1' with '4808'
c Var 'max_left_00003_00009_00001' order represents '2' with '4809'
-4808 4809 0
c Var 'max_left_00003_00009_00001' direct represents '2' with '4810'
4808 -4809 4810 0
-4810 4809 0
-4810 -4808 0
c Var 'max_left_00003_00009_00001' order represents '3' with '4811'
-4809 4811 0
c Var 'max_left_00003_00009_00001' direct represents '3' with '4812'
4809 -4811 4812 0
-4812 4811 0
-4812 -4809 0
c Var 'max_left_00003_00009_00001' order represents '4' with '4813'
-4811 4813 0
c Var 'max_left_00003_00009_00001' direct represents '4' with '4814'
4811 -4813 4814 0
-4814 4813 0
-4814 -4811 0
c Var 'max_left_00003_00009_00001' order represents '5' with '4815'
-4813 4815 0
c Var 'max_left_00003_00009_00001' direct represents '5' with '4816'
4813 -4815 4816 0
-4816 4815 0
-4816 -4813 0
c Var 'max_left_00003_00009_00001' order represents '6' with '4817'
-4815 4817 0
c Var 'max_left_00003_00009_00001' direct represents '6' with '4818'
4815 -4817 4818 0
-4818 4817 0
-4818 -4815 0
c Var 'max_left_00003_00009_00001' order represents '7' with '4819'
-4817 4819 0
c Var 'max_left_00003_00009_00001' direct represents '7' with '4820'
4817 -4819 4820 0
-4820 4819 0
-4820 -4817 0
c Var 'max_left_00003_00009_00001' order represents '8' with '4821'
-4819 4821 0
c Var 'max_left_00003_00009_00001' direct represents '8' with '4822'
4819 -4821 4822 0
-4822 4821 0
-4822 -4819 0
c Var 'max_left_00003_00009_00001' direct represents '9' with '-4821'
4808 4810 4812 4814 4816 4818 4820 4822 -4821 0
c Encoding variable: max_left_00003_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00002' order represents '1' with '4823'
c Var 'max_left_00003_00009_00002' direct represents '1' with '4823'
c Var 'max_left_00003_00009_00002' order represents '2' with '4824'
-4823 4824 0
c Var 'max_left_00003_00009_00002' direct represents '2' with '4825'
4823 -4824 4825 0
-4825 4824 0
-4825 -4823 0
c Var 'max_left_00003_00009_00002' order represents '3' with '4826'
-4824 4826 0
c Var 'max_left_00003_00009_00002' direct represents '3' with '4827'
4824 -4826 4827 0
-4827 4826 0
-4827 -4824 0
c Var 'max_left_00003_00009_00002' order represents '4' with '4828'
-4826 4828 0
c Var 'max_left_00003_00009_00002' direct represents '4' with '4829'
4826 -4828 4829 0
-4829 4828 0
-4829 -4826 0
c Var 'max_left_00003_00009_00002' order represents '5' with '4830'
-4828 4830 0
c Var 'max_left_00003_00009_00002' direct represents '5' with '4831'
4828 -4830 4831 0
-4831 4830 0
-4831 -4828 0
c Var 'max_left_00003_00009_00002' order represents '6' with '4832'
-4830 4832 0
c Var 'max_left_00003_00009_00002' direct represents '6' with '4833'
4830 -4832 4833 0
-4833 4832 0
-4833 -4830 0
c Var 'max_left_00003_00009_00002' order represents '7' with '4834'
-4832 4834 0
c Var 'max_left_00003_00009_00002' direct represents '7' with '4835'
4832 -4834 4835 0
-4835 4834 0
-4835 -4832 0
c Var 'max_left_00003_00009_00002' order represents '8' with '4836'
-4834 4836 0
c Var 'max_left_00003_00009_00002' direct represents '8' with '4837'
4834 -4836 4837 0
-4837 4836 0
-4837 -4834 0
c Var 'max_left_00003_00009_00002' direct represents '9' with '-4836'
4823 4825 4827 4829 4831 4833 4835 4837 -4836 0
c Encoding variable: max_left_00003_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00003' order represents '1' with '4838'
c Var 'max_left_00003_00009_00003' direct represents '1' with '4838'
c Var 'max_left_00003_00009_00003' order represents '2' with '4839'
-4838 4839 0
c Var 'max_left_00003_00009_00003' direct represents '2' with '4840'
4838 -4839 4840 0
-4840 4839 0
-4840 -4838 0
c Var 'max_left_00003_00009_00003' order represents '3' with '4841'
-4839 4841 0
c Var 'max_left_00003_00009_00003' direct represents '3' with '4842'
4839 -4841 4842 0
-4842 4841 0
-4842 -4839 0
c Var 'max_left_00003_00009_00003' order represents '4' with '4843'
-4841 4843 0
c Var 'max_left_00003_00009_00003' direct represents '4' with '4844'
4841 -4843 4844 0
-4844 4843 0
-4844 -4841 0
c Var 'max_left_00003_00009_00003' order represents '5' with '4845'
-4843 4845 0
c Var 'max_left_00003_00009_00003' direct represents '5' with '4846'
4843 -4845 4846 0
-4846 4845 0
-4846 -4843 0
c Var 'max_left_00003_00009_00003' order represents '6' with '4847'
-4845 4847 0
c Var 'max_left_00003_00009_00003' direct represents '6' with '4848'
4845 -4847 4848 0
-4848 4847 0
-4848 -4845 0
c Var 'max_left_00003_00009_00003' order represents '7' with '4849'
-4847 4849 0
c Var 'max_left_00003_00009_00003' direct represents '7' with '4850'
4847 -4849 4850 0
-4850 4849 0
-4850 -4847 0
c Var 'max_left_00003_00009_00003' order represents '8' with '4851'
-4849 4851 0
c Var 'max_left_00003_00009_00003' direct represents '8' with '4852'
4849 -4851 4852 0
-4852 4851 0
-4852 -4849 0
c Var 'max_left_00003_00009_00003' direct represents '9' with '-4851'
4838 4840 4842 4844 4846 4848 4850 4852 -4851 0
c Encoding variable: max_left_00003_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00004' order represents '1' with '4853'
c Var 'max_left_00003_00009_00004' direct represents '1' with '4853'
c Var 'max_left_00003_00009_00004' order represents '2' with '4854'
-4853 4854 0
c Var 'max_left_00003_00009_00004' direct represents '2' with '4855'
4853 -4854 4855 0
-4855 4854 0
-4855 -4853 0
c Var 'max_left_00003_00009_00004' order represents '3' with '4856'
-4854 4856 0
c Var 'max_left_00003_00009_00004' direct represents '3' with '4857'
4854 -4856 4857 0
-4857 4856 0
-4857 -4854 0
c Var 'max_left_00003_00009_00004' order represents '4' with '4858'
-4856 4858 0
c Var 'max_left_00003_00009_00004' direct represents '4' with '4859'
4856 -4858 4859 0
-4859 4858 0
-4859 -4856 0
c Var 'max_left_00003_00009_00004' order represents '5' with '4860'
-4858 4860 0
c Var 'max_left_00003_00009_00004' direct represents '5' with '4861'
4858 -4860 4861 0
-4861 4860 0
-4861 -4858 0
c Var 'max_left_00003_00009_00004' order represents '6' with '4862'
-4860 4862 0
c Var 'max_left_00003_00009_00004' direct represents '6' with '4863'
4860 -4862 4863 0
-4863 4862 0
-4863 -4860 0
c Var 'max_left_00003_00009_00004' order represents '7' with '4864'
-4862 4864 0
c Var 'max_left_00003_00009_00004' direct represents '7' with '4865'
4862 -4864 4865 0
-4865 4864 0
-4865 -4862 0
c Var 'max_left_00003_00009_00004' order represents '8' with '4866'
-4864 4866 0
c Var 'max_left_00003_00009_00004' direct represents '8' with '4867'
4864 -4866 4867 0
-4867 4866 0
-4867 -4864 0
c Var 'max_left_00003_00009_00004' direct represents '9' with '-4866'
4853 4855 4857 4859 4861 4863 4865 4867 -4866 0
c Encoding variable: max_left_00003_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00005' order represents '1' with '4868'
c Var 'max_left_00003_00009_00005' direct represents '1' with '4868'
c Var 'max_left_00003_00009_00005' order represents '2' with '4869'
-4868 4869 0
c Var 'max_left_00003_00009_00005' direct represents '2' with '4870'
4868 -4869 4870 0
-4870 4869 0
-4870 -4868 0
c Var 'max_left_00003_00009_00005' order represents '3' with '4871'
-4869 4871 0
c Var 'max_left_00003_00009_00005' direct represents '3' with '4872'
4869 -4871 4872 0
-4872 4871 0
-4872 -4869 0
c Var 'max_left_00003_00009_00005' order represents '4' with '4873'
-4871 4873 0
c Var 'max_left_00003_00009_00005' direct represents '4' with '4874'
4871 -4873 4874 0
-4874 4873 0
-4874 -4871 0
c Var 'max_left_00003_00009_00005' order represents '5' with '4875'
-4873 4875 0
c Var 'max_left_00003_00009_00005' direct represents '5' with '4876'
4873 -4875 4876 0
-4876 4875 0
-4876 -4873 0
c Var 'max_left_00003_00009_00005' order represents '6' with '4877'
-4875 4877 0
c Var 'max_left_00003_00009_00005' direct represents '6' with '4878'
4875 -4877 4878 0
-4878 4877 0
-4878 -4875 0
c Var 'max_left_00003_00009_00005' order represents '7' with '4879'
-4877 4879 0
c Var 'max_left_00003_00009_00005' direct represents '7' with '4880'
4877 -4879 4880 0
-4880 4879 0
-4880 -4877 0
c Var 'max_left_00003_00009_00005' order represents '8' with '4881'
-4879 4881 0
c Var 'max_left_00003_00009_00005' direct represents '8' with '4882'
4879 -4881 4882 0
-4882 4881 0
-4882 -4879 0
c Var 'max_left_00003_00009_00005' direct represents '9' with '-4881'
4868 4870 4872 4874 4876 4878 4880 4882 -4881 0
c Encoding variable: max_left_00003_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00006' order represents '1' with '4883'
c Var 'max_left_00003_00009_00006' direct represents '1' with '4883'
c Var 'max_left_00003_00009_00006' order represents '2' with '4884'
-4883 4884 0
c Var 'max_left_00003_00009_00006' direct represents '2' with '4885'
4883 -4884 4885 0
-4885 4884 0
-4885 -4883 0
c Var 'max_left_00003_00009_00006' order represents '3' with '4886'
-4884 4886 0
c Var 'max_left_00003_00009_00006' direct represents '3' with '4887'
4884 -4886 4887 0
-4887 4886 0
-4887 -4884 0
c Var 'max_left_00003_00009_00006' order represents '4' with '4888'
-4886 4888 0
c Var 'max_left_00003_00009_00006' direct represents '4' with '4889'
4886 -4888 4889 0
-4889 4888 0
-4889 -4886 0
c Var 'max_left_00003_00009_00006' order represents '5' with '4890'
-4888 4890 0
c Var 'max_left_00003_00009_00006' direct represents '5' with '4891'
4888 -4890 4891 0
-4891 4890 0
-4891 -4888 0
c Var 'max_left_00003_00009_00006' order represents '6' with '4892'
-4890 4892 0
c Var 'max_left_00003_00009_00006' direct represents '6' with '4893'
4890 -4892 4893 0
-4893 4892 0
-4893 -4890 0
c Var 'max_left_00003_00009_00006' order represents '7' with '4894'
-4892 4894 0
c Var 'max_left_00003_00009_00006' direct represents '7' with '4895'
4892 -4894 4895 0
-4895 4894 0
-4895 -4892 0
c Var 'max_left_00003_00009_00006' order represents '8' with '4896'
-4894 4896 0
c Var 'max_left_00003_00009_00006' direct represents '8' with '4897'
4894 -4896 4897 0
-4897 4896 0
-4897 -4894 0
c Var 'max_left_00003_00009_00006' direct represents '9' with '-4896'
4883 4885 4887 4889 4891 4893 4895 4897 -4896 0
c Encoding variable: max_left_00003_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00007' order represents '1' with '4898'
c Var 'max_left_00003_00009_00007' direct represents '1' with '4898'
c Var 'max_left_00003_00009_00007' order represents '2' with '4899'
-4898 4899 0
c Var 'max_left_00003_00009_00007' direct represents '2' with '4900'
4898 -4899 4900 0
-4900 4899 0
-4900 -4898 0
c Var 'max_left_00003_00009_00007' order represents '3' with '4901'
-4899 4901 0
c Var 'max_left_00003_00009_00007' direct represents '3' with '4902'
4899 -4901 4902 0
-4902 4901 0
-4902 -4899 0
c Var 'max_left_00003_00009_00007' order represents '4' with '4903'
-4901 4903 0
c Var 'max_left_00003_00009_00007' direct represents '4' with '4904'
4901 -4903 4904 0
-4904 4903 0
-4904 -4901 0
c Var 'max_left_00003_00009_00007' order represents '5' with '4905'
-4903 4905 0
c Var 'max_left_00003_00009_00007' direct represents '5' with '4906'
4903 -4905 4906 0
-4906 4905 0
-4906 -4903 0
c Var 'max_left_00003_00009_00007' order represents '6' with '4907'
-4905 4907 0
c Var 'max_left_00003_00009_00007' direct represents '6' with '4908'
4905 -4907 4908 0
-4908 4907 0
-4908 -4905 0
c Var 'max_left_00003_00009_00007' order represents '7' with '4909'
-4907 4909 0
c Var 'max_left_00003_00009_00007' direct represents '7' with '4910'
4907 -4909 4910 0
-4910 4909 0
-4910 -4907 0
c Var 'max_left_00003_00009_00007' order represents '8' with '4911'
-4909 4911 0
c Var 'max_left_00003_00009_00007' direct represents '8' with '4912'
4909 -4911 4912 0
-4912 4911 0
-4912 -4909 0
c Var 'max_left_00003_00009_00007' direct represents '9' with '-4911'
4898 4900 4902 4904 4906 4908 4910 4912 -4911 0
c Encoding variable: max_left_00003_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00008' order represents '1' with '4913'
c Var 'max_left_00003_00009_00008' direct represents '1' with '4913'
c Var 'max_left_00003_00009_00008' order represents '2' with '4914'
-4913 4914 0
c Var 'max_left_00003_00009_00008' direct represents '2' with '4915'
4913 -4914 4915 0
-4915 4914 0
-4915 -4913 0
c Var 'max_left_00003_00009_00008' order represents '3' with '4916'
-4914 4916 0
c Var 'max_left_00003_00009_00008' direct represents '3' with '4917'
4914 -4916 4917 0
-4917 4916 0
-4917 -4914 0
c Var 'max_left_00003_00009_00008' order represents '4' with '4918'
-4916 4918 0
c Var 'max_left_00003_00009_00008' direct represents '4' with '4919'
4916 -4918 4919 0
-4919 4918 0
-4919 -4916 0
c Var 'max_left_00003_00009_00008' order represents '5' with '4920'
-4918 4920 0
c Var 'max_left_00003_00009_00008' direct represents '5' with '4921'
4918 -4920 4921 0
-4921 4920 0
-4921 -4918 0
c Var 'max_left_00003_00009_00008' order represents '6' with '4922'
-4920 4922 0
c Var 'max_left_00003_00009_00008' direct represents '6' with '4923'
4920 -4922 4923 0
-4923 4922 0
-4923 -4920 0
c Var 'max_left_00003_00009_00008' order represents '7' with '4924'
-4922 4924 0
c Var 'max_left_00003_00009_00008' direct represents '7' with '4925'
4922 -4924 4925 0
-4925 4924 0
-4925 -4922 0
c Var 'max_left_00003_00009_00008' order represents '8' with '4926'
-4924 4926 0
c Var 'max_left_00003_00009_00008' direct represents '8' with '4927'
4924 -4926 4927 0
-4927 4926 0
-4927 -4924 0
c Var 'max_left_00003_00009_00008' direct represents '9' with '-4926'
4913 4915 4917 4919 4921 4923 4925 4927 -4926 0
c Encoding variable: max_left_00003_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00003_00009_00009' order represents '1' with '4928'
c Var 'max_left_00003_00009_00009' direct represents '1' with '4928'
c Var 'max_left_00003_00009_00009' order represents '2' with '4929'
-4928 4929 0
c Var 'max_left_00003_00009_00009' direct represents '2' with '4930'
4928 -4929 4930 0
-4930 4929 0
-4930 -4928 0
c Var 'max_left_00003_00009_00009' order represents '3' with '4931'
-4929 4931 0
c Var 'max_left_00003_00009_00009' direct represents '3' with '4932'
4929 -4931 4932 0
-4932 4931 0
-4932 -4929 0
c Var 'max_left_00003_00009_00009' order represents '4' with '4933'
-4931 4933 0
c Var 'max_left_00003_00009_00009' direct represents '4' with '4934'
4931 -4933 4934 0
-4934 4933 0
-4934 -4931 0
c Var 'max_left_00003_00009_00009' order represents '5' with '4935'
-4933 4935 0
c Var 'max_left_00003_00009_00009' direct represents '5' with '4936'
4933 -4935 4936 0
-4936 4935 0
-4936 -4933 0
c Var 'max_left_00003_00009_00009' order represents '6' with '4937'
-4935 4937 0
c Var 'max_left_00003_00009_00009' direct represents '6' with '4938'
4935 -4937 4938 0
-4938 4937 0
-4938 -4935 0
c Var 'max_left_00003_00009_00009' order represents '7' with '4939'
-4937 4939 0
c Var 'max_left_00003_00009_00009' direct represents '7' with '4940'
4937 -4939 4940 0
-4940 4939 0
-4940 -4937 0
c Var 'max_left_00003_00009_00009' order represents '8' with '4941'
-4939 4941 0
c Var 'max_left_00003_00009_00009' direct represents '8' with '4942'
4939 -4941 4942 0
-4942 4941 0
-4942 -4939 0
c Var 'max_left_00003_00009_00009' direct represents '9' with '-4941'
4928 4930 4932 4934 4936 4938 4940 4942 -4941 0
c Encoding variable: max_left_00004_00001_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00001_00000' direct represents '0' with '4943'
4943 0
c Encoding variable: max_left_00004_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00001' order represents '1' with '4944'
c Var 'max_left_00004_00001_00001' direct represents '1' with '4944'
c Var 'max_left_00004_00001_00001' order represents '2' with '4945'
-4944 4945 0
c Var 'max_left_00004_00001_00001' direct represents '2' with '4946'
4944 -4945 4946 0
-4946 4945 0
-4946 -4944 0
c Var 'max_left_00004_00001_00001' order represents '3' with '4947'
-4945 4947 0
c Var 'max_left_00004_00001_00001' direct represents '3' with '4948'
4945 -4947 4948 0
-4948 4947 0
-4948 -4945 0
c Var 'max_left_00004_00001_00001' order represents '4' with '4949'
-4947 4949 0
c Var 'max_left_00004_00001_00001' direct represents '4' with '4950'
4947 -4949 4950 0
-4950 4949 0
-4950 -4947 0
c Var 'max_left_00004_00001_00001' order represents '5' with '4951'
-4949 4951 0
c Var 'max_left_00004_00001_00001' direct represents '5' with '4952'
4949 -4951 4952 0
-4952 4951 0
-4952 -4949 0
c Var 'max_left_00004_00001_00001' order represents '6' with '4953'
-4951 4953 0
c Var 'max_left_00004_00001_00001' direct represents '6' with '4954'
4951 -4953 4954 0
-4954 4953 0
-4954 -4951 0
c Var 'max_left_00004_00001_00001' order represents '7' with '4955'
-4953 4955 0
c Var 'max_left_00004_00001_00001' direct represents '7' with '4956'
4953 -4955 4956 0
-4956 4955 0
-4956 -4953 0
c Var 'max_left_00004_00001_00001' order represents '8' with '4957'
-4955 4957 0
c Var 'max_left_00004_00001_00001' direct represents '8' with '4958'
4955 -4957 4958 0
-4958 4957 0
-4958 -4955 0
c Var 'max_left_00004_00001_00001' direct represents '9' with '-4957'
4944 4946 4948 4950 4952 4954 4956 4958 -4957 0
c Encoding variable: max_left_00004_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00002' order represents '1' with '4959'
c Var 'max_left_00004_00001_00002' direct represents '1' with '4959'
c Var 'max_left_00004_00001_00002' order represents '2' with '4960'
-4959 4960 0
c Var 'max_left_00004_00001_00002' direct represents '2' with '4961'
4959 -4960 4961 0
-4961 4960 0
-4961 -4959 0
c Var 'max_left_00004_00001_00002' order represents '3' with '4962'
-4960 4962 0
c Var 'max_left_00004_00001_00002' direct represents '3' with '4963'
4960 -4962 4963 0
-4963 4962 0
-4963 -4960 0
c Var 'max_left_00004_00001_00002' order represents '4' with '4964'
-4962 4964 0
c Var 'max_left_00004_00001_00002' direct represents '4' with '4965'
4962 -4964 4965 0
-4965 4964 0
-4965 -4962 0
c Var 'max_left_00004_00001_00002' order represents '5' with '4966'
-4964 4966 0
c Var 'max_left_00004_00001_00002' direct represents '5' with '4967'
4964 -4966 4967 0
-4967 4966 0
-4967 -4964 0
c Var 'max_left_00004_00001_00002' order represents '6' with '4968'
-4966 4968 0
c Var 'max_left_00004_00001_00002' direct represents '6' with '4969'
4966 -4968 4969 0
-4969 4968 0
-4969 -4966 0
c Var 'max_left_00004_00001_00002' order represents '7' with '4970'
-4968 4970 0
c Var 'max_left_00004_00001_00002' direct represents '7' with '4971'
4968 -4970 4971 0
-4971 4970 0
-4971 -4968 0
c Var 'max_left_00004_00001_00002' order represents '8' with '4972'
-4970 4972 0
c Var 'max_left_00004_00001_00002' direct represents '8' with '4973'
4970 -4972 4973 0
-4973 4972 0
-4973 -4970 0
c Var 'max_left_00004_00001_00002' direct represents '9' with '-4972'
4959 4961 4963 4965 4967 4969 4971 4973 -4972 0
c Encoding variable: max_left_00004_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00003' order represents '1' with '4974'
c Var 'max_left_00004_00001_00003' direct represents '1' with '4974'
c Var 'max_left_00004_00001_00003' order represents '2' with '4975'
-4974 4975 0
c Var 'max_left_00004_00001_00003' direct represents '2' with '4976'
4974 -4975 4976 0
-4976 4975 0
-4976 -4974 0
c Var 'max_left_00004_00001_00003' order represents '3' with '4977'
-4975 4977 0
c Var 'max_left_00004_00001_00003' direct represents '3' with '4978'
4975 -4977 4978 0
-4978 4977 0
-4978 -4975 0
c Var 'max_left_00004_00001_00003' order represents '4' with '4979'
-4977 4979 0
c Var 'max_left_00004_00001_00003' direct represents '4' with '4980'
4977 -4979 4980 0
-4980 4979 0
-4980 -4977 0
c Var 'max_left_00004_00001_00003' order represents '5' with '4981'
-4979 4981 0
c Var 'max_left_00004_00001_00003' direct represents '5' with '4982'
4979 -4981 4982 0
-4982 4981 0
-4982 -4979 0
c Var 'max_left_00004_00001_00003' order represents '6' with '4983'
-4981 4983 0
c Var 'max_left_00004_00001_00003' direct represents '6' with '4984'
4981 -4983 4984 0
-4984 4983 0
-4984 -4981 0
c Var 'max_left_00004_00001_00003' order represents '7' with '4985'
-4983 4985 0
c Var 'max_left_00004_00001_00003' direct represents '7' with '4986'
4983 -4985 4986 0
-4986 4985 0
-4986 -4983 0
c Var 'max_left_00004_00001_00003' order represents '8' with '4987'
-4985 4987 0
c Var 'max_left_00004_00001_00003' direct represents '8' with '4988'
4985 -4987 4988 0
-4988 4987 0
-4988 -4985 0
c Var 'max_left_00004_00001_00003' direct represents '9' with '-4987'
4974 4976 4978 4980 4982 4984 4986 4988 -4987 0
c Encoding variable: max_left_00004_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00004' order represents '1' with '4989'
c Var 'max_left_00004_00001_00004' direct represents '1' with '4989'
c Var 'max_left_00004_00001_00004' order represents '2' with '4990'
-4989 4990 0
c Var 'max_left_00004_00001_00004' direct represents '2' with '4991'
4989 -4990 4991 0
-4991 4990 0
-4991 -4989 0
c Var 'max_left_00004_00001_00004' order represents '3' with '4992'
-4990 4992 0
c Var 'max_left_00004_00001_00004' direct represents '3' with '4993'
4990 -4992 4993 0
-4993 4992 0
-4993 -4990 0
c Var 'max_left_00004_00001_00004' order represents '4' with '4994'
-4992 4994 0
c Var 'max_left_00004_00001_00004' direct represents '4' with '4995'
4992 -4994 4995 0
-4995 4994 0
-4995 -4992 0
c Var 'max_left_00004_00001_00004' order represents '5' with '4996'
-4994 4996 0
c Var 'max_left_00004_00001_00004' direct represents '5' with '4997'
4994 -4996 4997 0
-4997 4996 0
-4997 -4994 0
c Var 'max_left_00004_00001_00004' order represents '6' with '4998'
-4996 4998 0
c Var 'max_left_00004_00001_00004' direct represents '6' with '4999'
4996 -4998 4999 0
-4999 4998 0
-4999 -4996 0
c Var 'max_left_00004_00001_00004' order represents '7' with '5000'
-4998 5000 0
c Var 'max_left_00004_00001_00004' direct represents '7' with '5001'
4998 -5000 5001 0
-5001 5000 0
-5001 -4998 0
c Var 'max_left_00004_00001_00004' order represents '8' with '5002'
-5000 5002 0
c Var 'max_left_00004_00001_00004' direct represents '8' with '5003'
5000 -5002 5003 0
-5003 5002 0
-5003 -5000 0
c Var 'max_left_00004_00001_00004' direct represents '9' with '-5002'
4989 4991 4993 4995 4997 4999 5001 5003 -5002 0
c Encoding variable: max_left_00004_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00005' order represents '1' with '5004'
c Var 'max_left_00004_00001_00005' direct represents '1' with '5004'
c Var 'max_left_00004_00001_00005' order represents '2' with '5005'
-5004 5005 0
c Var 'max_left_00004_00001_00005' direct represents '2' with '5006'
5004 -5005 5006 0
-5006 5005 0
-5006 -5004 0
c Var 'max_left_00004_00001_00005' order represents '3' with '5007'
-5005 5007 0
c Var 'max_left_00004_00001_00005' direct represents '3' with '5008'
5005 -5007 5008 0
-5008 5007 0
-5008 -5005 0
c Var 'max_left_00004_00001_00005' order represents '4' with '5009'
-5007 5009 0
c Var 'max_left_00004_00001_00005' direct represents '4' with '5010'
5007 -5009 5010 0
-5010 5009 0
-5010 -5007 0
c Var 'max_left_00004_00001_00005' order represents '5' with '5011'
-5009 5011 0
c Var 'max_left_00004_00001_00005' direct represents '5' with '5012'
5009 -5011 5012 0
-5012 5011 0
-5012 -5009 0
c Var 'max_left_00004_00001_00005' order represents '6' with '5013'
-5011 5013 0
c Var 'max_left_00004_00001_00005' direct represents '6' with '5014'
5011 -5013 5014 0
-5014 5013 0
-5014 -5011 0
c Var 'max_left_00004_00001_00005' order represents '7' with '5015'
-5013 5015 0
c Var 'max_left_00004_00001_00005' direct represents '7' with '5016'
5013 -5015 5016 0
-5016 5015 0
-5016 -5013 0
c Var 'max_left_00004_00001_00005' order represents '8' with '5017'
-5015 5017 0
c Var 'max_left_00004_00001_00005' direct represents '8' with '5018'
5015 -5017 5018 0
-5018 5017 0
-5018 -5015 0
c Var 'max_left_00004_00001_00005' direct represents '9' with '-5017'
5004 5006 5008 5010 5012 5014 5016 5018 -5017 0
c Encoding variable: max_left_00004_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00006' order represents '1' with '5019'
c Var 'max_left_00004_00001_00006' direct represents '1' with '5019'
c Var 'max_left_00004_00001_00006' order represents '2' with '5020'
-5019 5020 0
c Var 'max_left_00004_00001_00006' direct represents '2' with '5021'
5019 -5020 5021 0
-5021 5020 0
-5021 -5019 0
c Var 'max_left_00004_00001_00006' order represents '3' with '5022'
-5020 5022 0
c Var 'max_left_00004_00001_00006' direct represents '3' with '5023'
5020 -5022 5023 0
-5023 5022 0
-5023 -5020 0
c Var 'max_left_00004_00001_00006' order represents '4' with '5024'
-5022 5024 0
c Var 'max_left_00004_00001_00006' direct represents '4' with '5025'
5022 -5024 5025 0
-5025 5024 0
-5025 -5022 0
c Var 'max_left_00004_00001_00006' order represents '5' with '5026'
-5024 5026 0
c Var 'max_left_00004_00001_00006' direct represents '5' with '5027'
5024 -5026 5027 0
-5027 5026 0
-5027 -5024 0
c Var 'max_left_00004_00001_00006' order represents '6' with '5028'
-5026 5028 0
c Var 'max_left_00004_00001_00006' direct represents '6' with '5029'
5026 -5028 5029 0
-5029 5028 0
-5029 -5026 0
c Var 'max_left_00004_00001_00006' order represents '7' with '5030'
-5028 5030 0
c Var 'max_left_00004_00001_00006' direct represents '7' with '5031'
5028 -5030 5031 0
-5031 5030 0
-5031 -5028 0
c Var 'max_left_00004_00001_00006' order represents '8' with '5032'
-5030 5032 0
c Var 'max_left_00004_00001_00006' direct represents '8' with '5033'
5030 -5032 5033 0
-5033 5032 0
-5033 -5030 0
c Var 'max_left_00004_00001_00006' direct represents '9' with '-5032'
5019 5021 5023 5025 5027 5029 5031 5033 -5032 0
c Encoding variable: max_left_00004_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00007' order represents '1' with '5034'
c Var 'max_left_00004_00001_00007' direct represents '1' with '5034'
c Var 'max_left_00004_00001_00007' order represents '2' with '5035'
-5034 5035 0
c Var 'max_left_00004_00001_00007' direct represents '2' with '5036'
5034 -5035 5036 0
-5036 5035 0
-5036 -5034 0
c Var 'max_left_00004_00001_00007' order represents '3' with '5037'
-5035 5037 0
c Var 'max_left_00004_00001_00007' direct represents '3' with '5038'
5035 -5037 5038 0
-5038 5037 0
-5038 -5035 0
c Var 'max_left_00004_00001_00007' order represents '4' with '5039'
-5037 5039 0
c Var 'max_left_00004_00001_00007' direct represents '4' with '5040'
5037 -5039 5040 0
-5040 5039 0
-5040 -5037 0
c Var 'max_left_00004_00001_00007' order represents '5' with '5041'
-5039 5041 0
c Var 'max_left_00004_00001_00007' direct represents '5' with '5042'
5039 -5041 5042 0
-5042 5041 0
-5042 -5039 0
c Var 'max_left_00004_00001_00007' order represents '6' with '5043'
-5041 5043 0
c Var 'max_left_00004_00001_00007' direct represents '6' with '5044'
5041 -5043 5044 0
-5044 5043 0
-5044 -5041 0
c Var 'max_left_00004_00001_00007' order represents '7' with '5045'
-5043 5045 0
c Var 'max_left_00004_00001_00007' direct represents '7' with '5046'
5043 -5045 5046 0
-5046 5045 0
-5046 -5043 0
c Var 'max_left_00004_00001_00007' order represents '8' with '5047'
-5045 5047 0
c Var 'max_left_00004_00001_00007' direct represents '8' with '5048'
5045 -5047 5048 0
-5048 5047 0
-5048 -5045 0
c Var 'max_left_00004_00001_00007' direct represents '9' with '-5047'
5034 5036 5038 5040 5042 5044 5046 5048 -5047 0
c Encoding variable: max_left_00004_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00008' order represents '1' with '5049'
c Var 'max_left_00004_00001_00008' direct represents '1' with '5049'
c Var 'max_left_00004_00001_00008' order represents '2' with '5050'
-5049 5050 0
c Var 'max_left_00004_00001_00008' direct represents '2' with '5051'
5049 -5050 5051 0
-5051 5050 0
-5051 -5049 0
c Var 'max_left_00004_00001_00008' order represents '3' with '5052'
-5050 5052 0
c Var 'max_left_00004_00001_00008' direct represents '3' with '5053'
5050 -5052 5053 0
-5053 5052 0
-5053 -5050 0
c Var 'max_left_00004_00001_00008' order represents '4' with '5054'
-5052 5054 0
c Var 'max_left_00004_00001_00008' direct represents '4' with '5055'
5052 -5054 5055 0
-5055 5054 0
-5055 -5052 0
c Var 'max_left_00004_00001_00008' order represents '5' with '5056'
-5054 5056 0
c Var 'max_left_00004_00001_00008' direct represents '5' with '5057'
5054 -5056 5057 0
-5057 5056 0
-5057 -5054 0
c Var 'max_left_00004_00001_00008' order represents '6' with '5058'
-5056 5058 0
c Var 'max_left_00004_00001_00008' direct represents '6' with '5059'
5056 -5058 5059 0
-5059 5058 0
-5059 -5056 0
c Var 'max_left_00004_00001_00008' order represents '7' with '5060'
-5058 5060 0
c Var 'max_left_00004_00001_00008' direct represents '7' with '5061'
5058 -5060 5061 0
-5061 5060 0
-5061 -5058 0
c Var 'max_left_00004_00001_00008' order represents '8' with '5062'
-5060 5062 0
c Var 'max_left_00004_00001_00008' direct represents '8' with '5063'
5060 -5062 5063 0
-5063 5062 0
-5063 -5060 0
c Var 'max_left_00004_00001_00008' direct represents '9' with '-5062'
5049 5051 5053 5055 5057 5059 5061 5063 -5062 0
c Encoding variable: max_left_00004_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00001_00009' order represents '1' with '5064'
c Var 'max_left_00004_00001_00009' direct represents '1' with '5064'
c Var 'max_left_00004_00001_00009' order represents '2' with '5065'
-5064 5065 0
c Var 'max_left_00004_00001_00009' direct represents '2' with '5066'
5064 -5065 5066 0
-5066 5065 0
-5066 -5064 0
c Var 'max_left_00004_00001_00009' order represents '3' with '5067'
-5065 5067 0
c Var 'max_left_00004_00001_00009' direct represents '3' with '5068'
5065 -5067 5068 0
-5068 5067 0
-5068 -5065 0
c Var 'max_left_00004_00001_00009' order represents '4' with '5069'
-5067 5069 0
c Var 'max_left_00004_00001_00009' direct represents '4' with '5070'
5067 -5069 5070 0
-5070 5069 0
-5070 -5067 0
c Var 'max_left_00004_00001_00009' order represents '5' with '5071'
-5069 5071 0
c Var 'max_left_00004_00001_00009' direct represents '5' with '5072'
5069 -5071 5072 0
-5072 5071 0
-5072 -5069 0
c Var 'max_left_00004_00001_00009' order represents '6' with '5073'
-5071 5073 0
c Var 'max_left_00004_00001_00009' direct represents '6' with '5074'
5071 -5073 5074 0
-5074 5073 0
-5074 -5071 0
c Var 'max_left_00004_00001_00009' order represents '7' with '5075'
-5073 5075 0
c Var 'max_left_00004_00001_00009' direct represents '7' with '5076'
5073 -5075 5076 0
-5076 5075 0
-5076 -5073 0
c Var 'max_left_00004_00001_00009' order represents '8' with '5077'
-5075 5077 0
c Var 'max_left_00004_00001_00009' direct represents '8' with '5078'
5075 -5077 5078 0
-5078 5077 0
-5078 -5075 0
c Var 'max_left_00004_00001_00009' direct represents '9' with '-5077'
5064 5066 5068 5070 5072 5074 5076 5078 -5077 0
c Encoding variable: max_left_00004_00002_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00002_00000' direct represents '0' with '5079'
5079 0
c Encoding variable: max_left_00004_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00001' order represents '1' with '5080'
c Var 'max_left_00004_00002_00001' direct represents '1' with '5080'
c Var 'max_left_00004_00002_00001' order represents '2' with '5081'
-5080 5081 0
c Var 'max_left_00004_00002_00001' direct represents '2' with '5082'
5080 -5081 5082 0
-5082 5081 0
-5082 -5080 0
c Var 'max_left_00004_00002_00001' order represents '3' with '5083'
-5081 5083 0
c Var 'max_left_00004_00002_00001' direct represents '3' with '5084'
5081 -5083 5084 0
-5084 5083 0
-5084 -5081 0
c Var 'max_left_00004_00002_00001' order represents '4' with '5085'
-5083 5085 0
c Var 'max_left_00004_00002_00001' direct represents '4' with '5086'
5083 -5085 5086 0
-5086 5085 0
-5086 -5083 0
c Var 'max_left_00004_00002_00001' order represents '5' with '5087'
-5085 5087 0
c Var 'max_left_00004_00002_00001' direct represents '5' with '5088'
5085 -5087 5088 0
-5088 5087 0
-5088 -5085 0
c Var 'max_left_00004_00002_00001' order represents '6' with '5089'
-5087 5089 0
c Var 'max_left_00004_00002_00001' direct represents '6' with '5090'
5087 -5089 5090 0
-5090 5089 0
-5090 -5087 0
c Var 'max_left_00004_00002_00001' order represents '7' with '5091'
-5089 5091 0
c Var 'max_left_00004_00002_00001' direct represents '7' with '5092'
5089 -5091 5092 0
-5092 5091 0
-5092 -5089 0
c Var 'max_left_00004_00002_00001' order represents '8' with '5093'
-5091 5093 0
c Var 'max_left_00004_00002_00001' direct represents '8' with '5094'
5091 -5093 5094 0
-5094 5093 0
-5094 -5091 0
c Var 'max_left_00004_00002_00001' direct represents '9' with '-5093'
5080 5082 5084 5086 5088 5090 5092 5094 -5093 0
c Encoding variable: max_left_00004_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00002' order represents '1' with '5095'
c Var 'max_left_00004_00002_00002' direct represents '1' with '5095'
c Var 'max_left_00004_00002_00002' order represents '2' with '5096'
-5095 5096 0
c Var 'max_left_00004_00002_00002' direct represents '2' with '5097'
5095 -5096 5097 0
-5097 5096 0
-5097 -5095 0
c Var 'max_left_00004_00002_00002' order represents '3' with '5098'
-5096 5098 0
c Var 'max_left_00004_00002_00002' direct represents '3' with '5099'
5096 -5098 5099 0
-5099 5098 0
-5099 -5096 0
c Var 'max_left_00004_00002_00002' order represents '4' with '5100'
-5098 5100 0
c Var 'max_left_00004_00002_00002' direct represents '4' with '5101'
5098 -5100 5101 0
-5101 5100 0
-5101 -5098 0
c Var 'max_left_00004_00002_00002' order represents '5' with '5102'
-5100 5102 0
c Var 'max_left_00004_00002_00002' direct represents '5' with '5103'
5100 -5102 5103 0
-5103 5102 0
-5103 -5100 0
c Var 'max_left_00004_00002_00002' order represents '6' with '5104'
-5102 5104 0
c Var 'max_left_00004_00002_00002' direct represents '6' with '5105'
5102 -5104 5105 0
-5105 5104 0
-5105 -5102 0
c Var 'max_left_00004_00002_00002' order represents '7' with '5106'
-5104 5106 0
c Var 'max_left_00004_00002_00002' direct represents '7' with '5107'
5104 -5106 5107 0
-5107 5106 0
-5107 -5104 0
c Var 'max_left_00004_00002_00002' order represents '8' with '5108'
-5106 5108 0
c Var 'max_left_00004_00002_00002' direct represents '8' with '5109'
5106 -5108 5109 0
-5109 5108 0
-5109 -5106 0
c Var 'max_left_00004_00002_00002' direct represents '9' with '-5108'
5095 5097 5099 5101 5103 5105 5107 5109 -5108 0
c Encoding variable: max_left_00004_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00003' order represents '1' with '5110'
c Var 'max_left_00004_00002_00003' direct represents '1' with '5110'
c Var 'max_left_00004_00002_00003' order represents '2' with '5111'
-5110 5111 0
c Var 'max_left_00004_00002_00003' direct represents '2' with '5112'
5110 -5111 5112 0
-5112 5111 0
-5112 -5110 0
c Var 'max_left_00004_00002_00003' order represents '3' with '5113'
-5111 5113 0
c Var 'max_left_00004_00002_00003' direct represents '3' with '5114'
5111 -5113 5114 0
-5114 5113 0
-5114 -5111 0
c Var 'max_left_00004_00002_00003' order represents '4' with '5115'
-5113 5115 0
c Var 'max_left_00004_00002_00003' direct represents '4' with '5116'
5113 -5115 5116 0
-5116 5115 0
-5116 -5113 0
c Var 'max_left_00004_00002_00003' order represents '5' with '5117'
-5115 5117 0
c Var 'max_left_00004_00002_00003' direct represents '5' with '5118'
5115 -5117 5118 0
-5118 5117 0
-5118 -5115 0
c Var 'max_left_00004_00002_00003' order represents '6' with '5119'
-5117 5119 0
c Var 'max_left_00004_00002_00003' direct represents '6' with '5120'
5117 -5119 5120 0
-5120 5119 0
-5120 -5117 0
c Var 'max_left_00004_00002_00003' order represents '7' with '5121'
-5119 5121 0
c Var 'max_left_00004_00002_00003' direct represents '7' with '5122'
5119 -5121 5122 0
-5122 5121 0
-5122 -5119 0
c Var 'max_left_00004_00002_00003' order represents '8' with '5123'
-5121 5123 0
c Var 'max_left_00004_00002_00003' direct represents '8' with '5124'
5121 -5123 5124 0
-5124 5123 0
-5124 -5121 0
c Var 'max_left_00004_00002_00003' direct represents '9' with '-5123'
5110 5112 5114 5116 5118 5120 5122 5124 -5123 0
c Encoding variable: max_left_00004_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00004' order represents '1' with '5125'
c Var 'max_left_00004_00002_00004' direct represents '1' with '5125'
c Var 'max_left_00004_00002_00004' order represents '2' with '5126'
-5125 5126 0
c Var 'max_left_00004_00002_00004' direct represents '2' with '5127'
5125 -5126 5127 0
-5127 5126 0
-5127 -5125 0
c Var 'max_left_00004_00002_00004' order represents '3' with '5128'
-5126 5128 0
c Var 'max_left_00004_00002_00004' direct represents '3' with '5129'
5126 -5128 5129 0
-5129 5128 0
-5129 -5126 0
c Var 'max_left_00004_00002_00004' order represents '4' with '5130'
-5128 5130 0
c Var 'max_left_00004_00002_00004' direct represents '4' with '5131'
5128 -5130 5131 0
-5131 5130 0
-5131 -5128 0
c Var 'max_left_00004_00002_00004' order represents '5' with '5132'
-5130 5132 0
c Var 'max_left_00004_00002_00004' direct represents '5' with '5133'
5130 -5132 5133 0
-5133 5132 0
-5133 -5130 0
c Var 'max_left_00004_00002_00004' order represents '6' with '5134'
-5132 5134 0
c Var 'max_left_00004_00002_00004' direct represents '6' with '5135'
5132 -5134 5135 0
-5135 5134 0
-5135 -5132 0
c Var 'max_left_00004_00002_00004' order represents '7' with '5136'
-5134 5136 0
c Var 'max_left_00004_00002_00004' direct represents '7' with '5137'
5134 -5136 5137 0
-5137 5136 0
-5137 -5134 0
c Var 'max_left_00004_00002_00004' order represents '8' with '5138'
-5136 5138 0
c Var 'max_left_00004_00002_00004' direct represents '8' with '5139'
5136 -5138 5139 0
-5139 5138 0
-5139 -5136 0
c Var 'max_left_00004_00002_00004' direct represents '9' with '-5138'
5125 5127 5129 5131 5133 5135 5137 5139 -5138 0
c Encoding variable: max_left_00004_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00005' order represents '1' with '5140'
c Var 'max_left_00004_00002_00005' direct represents '1' with '5140'
c Var 'max_left_00004_00002_00005' order represents '2' with '5141'
-5140 5141 0
c Var 'max_left_00004_00002_00005' direct represents '2' with '5142'
5140 -5141 5142 0
-5142 5141 0
-5142 -5140 0
c Var 'max_left_00004_00002_00005' order represents '3' with '5143'
-5141 5143 0
c Var 'max_left_00004_00002_00005' direct represents '3' with '5144'
5141 -5143 5144 0
-5144 5143 0
-5144 -5141 0
c Var 'max_left_00004_00002_00005' order represents '4' with '5145'
-5143 5145 0
c Var 'max_left_00004_00002_00005' direct represents '4' with '5146'
5143 -5145 5146 0
-5146 5145 0
-5146 -5143 0
c Var 'max_left_00004_00002_00005' order represents '5' with '5147'
-5145 5147 0
c Var 'max_left_00004_00002_00005' direct represents '5' with '5148'
5145 -5147 5148 0
-5148 5147 0
-5148 -5145 0
c Var 'max_left_00004_00002_00005' order represents '6' with '5149'
-5147 5149 0
c Var 'max_left_00004_00002_00005' direct represents '6' with '5150'
5147 -5149 5150 0
-5150 5149 0
-5150 -5147 0
c Var 'max_left_00004_00002_00005' order represents '7' with '5151'
-5149 5151 0
c Var 'max_left_00004_00002_00005' direct represents '7' with '5152'
5149 -5151 5152 0
-5152 5151 0
-5152 -5149 0
c Var 'max_left_00004_00002_00005' order represents '8' with '5153'
-5151 5153 0
c Var 'max_left_00004_00002_00005' direct represents '8' with '5154'
5151 -5153 5154 0
-5154 5153 0
-5154 -5151 0
c Var 'max_left_00004_00002_00005' direct represents '9' with '-5153'
5140 5142 5144 5146 5148 5150 5152 5154 -5153 0
c Encoding variable: max_left_00004_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00006' order represents '1' with '5155'
c Var 'max_left_00004_00002_00006' direct represents '1' with '5155'
c Var 'max_left_00004_00002_00006' order represents '2' with '5156'
-5155 5156 0
c Var 'max_left_00004_00002_00006' direct represents '2' with '5157'
5155 -5156 5157 0
-5157 5156 0
-5157 -5155 0
c Var 'max_left_00004_00002_00006' order represents '3' with '5158'
-5156 5158 0
c Var 'max_left_00004_00002_00006' direct represents '3' with '5159'
5156 -5158 5159 0
-5159 5158 0
-5159 -5156 0
c Var 'max_left_00004_00002_00006' order represents '4' with '5160'
-5158 5160 0
c Var 'max_left_00004_00002_00006' direct represents '4' with '5161'
5158 -5160 5161 0
-5161 5160 0
-5161 -5158 0
c Var 'max_left_00004_00002_00006' order represents '5' with '5162'
-5160 5162 0
c Var 'max_left_00004_00002_00006' direct represents '5' with '5163'
5160 -5162 5163 0
-5163 5162 0
-5163 -5160 0
c Var 'max_left_00004_00002_00006' order represents '6' with '5164'
-5162 5164 0
c Var 'max_left_00004_00002_00006' direct represents '6' with '5165'
5162 -5164 5165 0
-5165 5164 0
-5165 -5162 0
c Var 'max_left_00004_00002_00006' order represents '7' with '5166'
-5164 5166 0
c Var 'max_left_00004_00002_00006' direct represents '7' with '5167'
5164 -5166 5167 0
-5167 5166 0
-5167 -5164 0
c Var 'max_left_00004_00002_00006' order represents '8' with '5168'
-5166 5168 0
c Var 'max_left_00004_00002_00006' direct represents '8' with '5169'
5166 -5168 5169 0
-5169 5168 0
-5169 -5166 0
c Var 'max_left_00004_00002_00006' direct represents '9' with '-5168'
5155 5157 5159 5161 5163 5165 5167 5169 -5168 0
c Encoding variable: max_left_00004_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00007' order represents '1' with '5170'
c Var 'max_left_00004_00002_00007' direct represents '1' with '5170'
c Var 'max_left_00004_00002_00007' order represents '2' with '5171'
-5170 5171 0
c Var 'max_left_00004_00002_00007' direct represents '2' with '5172'
5170 -5171 5172 0
-5172 5171 0
-5172 -5170 0
c Var 'max_left_00004_00002_00007' order represents '3' with '5173'
-5171 5173 0
c Var 'max_left_00004_00002_00007' direct represents '3' with '5174'
5171 -5173 5174 0
-5174 5173 0
-5174 -5171 0
c Var 'max_left_00004_00002_00007' order represents '4' with '5175'
-5173 5175 0
c Var 'max_left_00004_00002_00007' direct represents '4' with '5176'
5173 -5175 5176 0
-5176 5175 0
-5176 -5173 0
c Var 'max_left_00004_00002_00007' order represents '5' with '5177'
-5175 5177 0
c Var 'max_left_00004_00002_00007' direct represents '5' with '5178'
5175 -5177 5178 0
-5178 5177 0
-5178 -5175 0
c Var 'max_left_00004_00002_00007' order represents '6' with '5179'
-5177 5179 0
c Var 'max_left_00004_00002_00007' direct represents '6' with '5180'
5177 -5179 5180 0
-5180 5179 0
-5180 -5177 0
c Var 'max_left_00004_00002_00007' order represents '7' with '5181'
-5179 5181 0
c Var 'max_left_00004_00002_00007' direct represents '7' with '5182'
5179 -5181 5182 0
-5182 5181 0
-5182 -5179 0
c Var 'max_left_00004_00002_00007' order represents '8' with '5183'
-5181 5183 0
c Var 'max_left_00004_00002_00007' direct represents '8' with '5184'
5181 -5183 5184 0
-5184 5183 0
-5184 -5181 0
c Var 'max_left_00004_00002_00007' direct represents '9' with '-5183'
5170 5172 5174 5176 5178 5180 5182 5184 -5183 0
c Encoding variable: max_left_00004_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00008' order represents '1' with '5185'
c Var 'max_left_00004_00002_00008' direct represents '1' with '5185'
c Var 'max_left_00004_00002_00008' order represents '2' with '5186'
-5185 5186 0
c Var 'max_left_00004_00002_00008' direct represents '2' with '5187'
5185 -5186 5187 0
-5187 5186 0
-5187 -5185 0
c Var 'max_left_00004_00002_00008' order represents '3' with '5188'
-5186 5188 0
c Var 'max_left_00004_00002_00008' direct represents '3' with '5189'
5186 -5188 5189 0
-5189 5188 0
-5189 -5186 0
c Var 'max_left_00004_00002_00008' order represents '4' with '5190'
-5188 5190 0
c Var 'max_left_00004_00002_00008' direct represents '4' with '5191'
5188 -5190 5191 0
-5191 5190 0
-5191 -5188 0
c Var 'max_left_00004_00002_00008' order represents '5' with '5192'
-5190 5192 0
c Var 'max_left_00004_00002_00008' direct represents '5' with '5193'
5190 -5192 5193 0
-5193 5192 0
-5193 -5190 0
c Var 'max_left_00004_00002_00008' order represents '6' with '5194'
-5192 5194 0
c Var 'max_left_00004_00002_00008' direct represents '6' with '5195'
5192 -5194 5195 0
-5195 5194 0
-5195 -5192 0
c Var 'max_left_00004_00002_00008' order represents '7' with '5196'
-5194 5196 0
c Var 'max_left_00004_00002_00008' direct represents '7' with '5197'
5194 -5196 5197 0
-5197 5196 0
-5197 -5194 0
c Var 'max_left_00004_00002_00008' order represents '8' with '5198'
-5196 5198 0
c Var 'max_left_00004_00002_00008' direct represents '8' with '5199'
5196 -5198 5199 0
-5199 5198 0
-5199 -5196 0
c Var 'max_left_00004_00002_00008' direct represents '9' with '-5198'
5185 5187 5189 5191 5193 5195 5197 5199 -5198 0
c Encoding variable: max_left_00004_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00002_00009' order represents '1' with '5200'
c Var 'max_left_00004_00002_00009' direct represents '1' with '5200'
c Var 'max_left_00004_00002_00009' order represents '2' with '5201'
-5200 5201 0
c Var 'max_left_00004_00002_00009' direct represents '2' with '5202'
5200 -5201 5202 0
-5202 5201 0
-5202 -5200 0
c Var 'max_left_00004_00002_00009' order represents '3' with '5203'
-5201 5203 0
c Var 'max_left_00004_00002_00009' direct represents '3' with '5204'
5201 -5203 5204 0
-5204 5203 0
-5204 -5201 0
c Var 'max_left_00004_00002_00009' order represents '4' with '5205'
-5203 5205 0
c Var 'max_left_00004_00002_00009' direct represents '4' with '5206'
5203 -5205 5206 0
-5206 5205 0
-5206 -5203 0
c Var 'max_left_00004_00002_00009' order represents '5' with '5207'
-5205 5207 0
c Var 'max_left_00004_00002_00009' direct represents '5' with '5208'
5205 -5207 5208 0
-5208 5207 0
-5208 -5205 0
c Var 'max_left_00004_00002_00009' order represents '6' with '5209'
-5207 5209 0
c Var 'max_left_00004_00002_00009' direct represents '6' with '5210'
5207 -5209 5210 0
-5210 5209 0
-5210 -5207 0
c Var 'max_left_00004_00002_00009' order represents '7' with '5211'
-5209 5211 0
c Var 'max_left_00004_00002_00009' direct represents '7' with '5212'
5209 -5211 5212 0
-5212 5211 0
-5212 -5209 0
c Var 'max_left_00004_00002_00009' order represents '8' with '5213'
-5211 5213 0
c Var 'max_left_00004_00002_00009' direct represents '8' with '5214'
5211 -5213 5214 0
-5214 5213 0
-5214 -5211 0
c Var 'max_left_00004_00002_00009' direct represents '9' with '-5213'
5200 5202 5204 5206 5208 5210 5212 5214 -5213 0
c Encoding variable: max_left_00004_00003_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00003_00000' direct represents '0' with '5215'
5215 0
c Encoding variable: max_left_00004_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00001' order represents '1' with '5216'
c Var 'max_left_00004_00003_00001' direct represents '1' with '5216'
c Var 'max_left_00004_00003_00001' order represents '2' with '5217'
-5216 5217 0
c Var 'max_left_00004_00003_00001' direct represents '2' with '5218'
5216 -5217 5218 0
-5218 5217 0
-5218 -5216 0
c Var 'max_left_00004_00003_00001' order represents '3' with '5219'
-5217 5219 0
c Var 'max_left_00004_00003_00001' direct represents '3' with '5220'
5217 -5219 5220 0
-5220 5219 0
-5220 -5217 0
c Var 'max_left_00004_00003_00001' order represents '4' with '5221'
-5219 5221 0
c Var 'max_left_00004_00003_00001' direct represents '4' with '5222'
5219 -5221 5222 0
-5222 5221 0
-5222 -5219 0
c Var 'max_left_00004_00003_00001' order represents '5' with '5223'
-5221 5223 0
c Var 'max_left_00004_00003_00001' direct represents '5' with '5224'
5221 -5223 5224 0
-5224 5223 0
-5224 -5221 0
c Var 'max_left_00004_00003_00001' order represents '6' with '5225'
-5223 5225 0
c Var 'max_left_00004_00003_00001' direct represents '6' with '5226'
5223 -5225 5226 0
-5226 5225 0
-5226 -5223 0
c Var 'max_left_00004_00003_00001' order represents '7' with '5227'
-5225 5227 0
c Var 'max_left_00004_00003_00001' direct represents '7' with '5228'
5225 -5227 5228 0
-5228 5227 0
-5228 -5225 0
c Var 'max_left_00004_00003_00001' order represents '8' with '5229'
-5227 5229 0
c Var 'max_left_00004_00003_00001' direct represents '8' with '5230'
5227 -5229 5230 0
-5230 5229 0
-5230 -5227 0
c Var 'max_left_00004_00003_00001' direct represents '9' with '-5229'
5216 5218 5220 5222 5224 5226 5228 5230 -5229 0
c Encoding variable: max_left_00004_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00002' order represents '1' with '5231'
c Var 'max_left_00004_00003_00002' direct represents '1' with '5231'
c Var 'max_left_00004_00003_00002' order represents '2' with '5232'
-5231 5232 0
c Var 'max_left_00004_00003_00002' direct represents '2' with '5233'
5231 -5232 5233 0
-5233 5232 0
-5233 -5231 0
c Var 'max_left_00004_00003_00002' order represents '3' with '5234'
-5232 5234 0
c Var 'max_left_00004_00003_00002' direct represents '3' with '5235'
5232 -5234 5235 0
-5235 5234 0
-5235 -5232 0
c Var 'max_left_00004_00003_00002' order represents '4' with '5236'
-5234 5236 0
c Var 'max_left_00004_00003_00002' direct represents '4' with '5237'
5234 -5236 5237 0
-5237 5236 0
-5237 -5234 0
c Var 'max_left_00004_00003_00002' order represents '5' with '5238'
-5236 5238 0
c Var 'max_left_00004_00003_00002' direct represents '5' with '5239'
5236 -5238 5239 0
-5239 5238 0
-5239 -5236 0
c Var 'max_left_00004_00003_00002' order represents '6' with '5240'
-5238 5240 0
c Var 'max_left_00004_00003_00002' direct represents '6' with '5241'
5238 -5240 5241 0
-5241 5240 0
-5241 -5238 0
c Var 'max_left_00004_00003_00002' order represents '7' with '5242'
-5240 5242 0
c Var 'max_left_00004_00003_00002' direct represents '7' with '5243'
5240 -5242 5243 0
-5243 5242 0
-5243 -5240 0
c Var 'max_left_00004_00003_00002' order represents '8' with '5244'
-5242 5244 0
c Var 'max_left_00004_00003_00002' direct represents '8' with '5245'
5242 -5244 5245 0
-5245 5244 0
-5245 -5242 0
c Var 'max_left_00004_00003_00002' direct represents '9' with '-5244'
5231 5233 5235 5237 5239 5241 5243 5245 -5244 0
c Encoding variable: max_left_00004_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00003' order represents '1' with '5246'
c Var 'max_left_00004_00003_00003' direct represents '1' with '5246'
c Var 'max_left_00004_00003_00003' order represents '2' with '5247'
-5246 5247 0
c Var 'max_left_00004_00003_00003' direct represents '2' with '5248'
5246 -5247 5248 0
-5248 5247 0
-5248 -5246 0
c Var 'max_left_00004_00003_00003' order represents '3' with '5249'
-5247 5249 0
c Var 'max_left_00004_00003_00003' direct represents '3' with '5250'
5247 -5249 5250 0
-5250 5249 0
-5250 -5247 0
c Var 'max_left_00004_00003_00003' order represents '4' with '5251'
-5249 5251 0
c Var 'max_left_00004_00003_00003' direct represents '4' with '5252'
5249 -5251 5252 0
-5252 5251 0
-5252 -5249 0
c Var 'max_left_00004_00003_00003' order represents '5' with '5253'
-5251 5253 0
c Var 'max_left_00004_00003_00003' direct represents '5' with '5254'
5251 -5253 5254 0
-5254 5253 0
-5254 -5251 0
c Var 'max_left_00004_00003_00003' order represents '6' with '5255'
-5253 5255 0
c Var 'max_left_00004_00003_00003' direct represents '6' with '5256'
5253 -5255 5256 0
-5256 5255 0
-5256 -5253 0
c Var 'max_left_00004_00003_00003' order represents '7' with '5257'
-5255 5257 0
c Var 'max_left_00004_00003_00003' direct represents '7' with '5258'
5255 -5257 5258 0
-5258 5257 0
-5258 -5255 0
c Var 'max_left_00004_00003_00003' order represents '8' with '5259'
-5257 5259 0
c Var 'max_left_00004_00003_00003' direct represents '8' with '5260'
5257 -5259 5260 0
-5260 5259 0
-5260 -5257 0
c Var 'max_left_00004_00003_00003' direct represents '9' with '-5259'
5246 5248 5250 5252 5254 5256 5258 5260 -5259 0
c Encoding variable: max_left_00004_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00004' order represents '1' with '5261'
c Var 'max_left_00004_00003_00004' direct represents '1' with '5261'
c Var 'max_left_00004_00003_00004' order represents '2' with '5262'
-5261 5262 0
c Var 'max_left_00004_00003_00004' direct represents '2' with '5263'
5261 -5262 5263 0
-5263 5262 0
-5263 -5261 0
c Var 'max_left_00004_00003_00004' order represents '3' with '5264'
-5262 5264 0
c Var 'max_left_00004_00003_00004' direct represents '3' with '5265'
5262 -5264 5265 0
-5265 5264 0
-5265 -5262 0
c Var 'max_left_00004_00003_00004' order represents '4' with '5266'
-5264 5266 0
c Var 'max_left_00004_00003_00004' direct represents '4' with '5267'
5264 -5266 5267 0
-5267 5266 0
-5267 -5264 0
c Var 'max_left_00004_00003_00004' order represents '5' with '5268'
-5266 5268 0
c Var 'max_left_00004_00003_00004' direct represents '5' with '5269'
5266 -5268 5269 0
-5269 5268 0
-5269 -5266 0
c Var 'max_left_00004_00003_00004' order represents '6' with '5270'
-5268 5270 0
c Var 'max_left_00004_00003_00004' direct represents '6' with '5271'
5268 -5270 5271 0
-5271 5270 0
-5271 -5268 0
c Var 'max_left_00004_00003_00004' order represents '7' with '5272'
-5270 5272 0
c Var 'max_left_00004_00003_00004' direct represents '7' with '5273'
5270 -5272 5273 0
-5273 5272 0
-5273 -5270 0
c Var 'max_left_00004_00003_00004' order represents '8' with '5274'
-5272 5274 0
c Var 'max_left_00004_00003_00004' direct represents '8' with '5275'
5272 -5274 5275 0
-5275 5274 0
-5275 -5272 0
c Var 'max_left_00004_00003_00004' direct represents '9' with '-5274'
5261 5263 5265 5267 5269 5271 5273 5275 -5274 0
c Encoding variable: max_left_00004_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00005' order represents '1' with '5276'
c Var 'max_left_00004_00003_00005' direct represents '1' with '5276'
c Var 'max_left_00004_00003_00005' order represents '2' with '5277'
-5276 5277 0
c Var 'max_left_00004_00003_00005' direct represents '2' with '5278'
5276 -5277 5278 0
-5278 5277 0
-5278 -5276 0
c Var 'max_left_00004_00003_00005' order represents '3' with '5279'
-5277 5279 0
c Var 'max_left_00004_00003_00005' direct represents '3' with '5280'
5277 -5279 5280 0
-5280 5279 0
-5280 -5277 0
c Var 'max_left_00004_00003_00005' order represents '4' with '5281'
-5279 5281 0
c Var 'max_left_00004_00003_00005' direct represents '4' with '5282'
5279 -5281 5282 0
-5282 5281 0
-5282 -5279 0
c Var 'max_left_00004_00003_00005' order represents '5' with '5283'
-5281 5283 0
c Var 'max_left_00004_00003_00005' direct represents '5' with '5284'
5281 -5283 5284 0
-5284 5283 0
-5284 -5281 0
c Var 'max_left_00004_00003_00005' order represents '6' with '5285'
-5283 5285 0
c Var 'max_left_00004_00003_00005' direct represents '6' with '5286'
5283 -5285 5286 0
-5286 5285 0
-5286 -5283 0
c Var 'max_left_00004_00003_00005' order represents '7' with '5287'
-5285 5287 0
c Var 'max_left_00004_00003_00005' direct represents '7' with '5288'
5285 -5287 5288 0
-5288 5287 0
-5288 -5285 0
c Var 'max_left_00004_00003_00005' order represents '8' with '5289'
-5287 5289 0
c Var 'max_left_00004_00003_00005' direct represents '8' with '5290'
5287 -5289 5290 0
-5290 5289 0
-5290 -5287 0
c Var 'max_left_00004_00003_00005' direct represents '9' with '-5289'
5276 5278 5280 5282 5284 5286 5288 5290 -5289 0
c Encoding variable: max_left_00004_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00006' order represents '1' with '5291'
c Var 'max_left_00004_00003_00006' direct represents '1' with '5291'
c Var 'max_left_00004_00003_00006' order represents '2' with '5292'
-5291 5292 0
c Var 'max_left_00004_00003_00006' direct represents '2' with '5293'
5291 -5292 5293 0
-5293 5292 0
-5293 -5291 0
c Var 'max_left_00004_00003_00006' order represents '3' with '5294'
-5292 5294 0
c Var 'max_left_00004_00003_00006' direct represents '3' with '5295'
5292 -5294 5295 0
-5295 5294 0
-5295 -5292 0
c Var 'max_left_00004_00003_00006' order represents '4' with '5296'
-5294 5296 0
c Var 'max_left_00004_00003_00006' direct represents '4' with '5297'
5294 -5296 5297 0
-5297 5296 0
-5297 -5294 0
c Var 'max_left_00004_00003_00006' order represents '5' with '5298'
-5296 5298 0
c Var 'max_left_00004_00003_00006' direct represents '5' with '5299'
5296 -5298 5299 0
-5299 5298 0
-5299 -5296 0
c Var 'max_left_00004_00003_00006' order represents '6' with '5300'
-5298 5300 0
c Var 'max_left_00004_00003_00006' direct represents '6' with '5301'
5298 -5300 5301 0
-5301 5300 0
-5301 -5298 0
c Var 'max_left_00004_00003_00006' order represents '7' with '5302'
-5300 5302 0
c Var 'max_left_00004_00003_00006' direct represents '7' with '5303'
5300 -5302 5303 0
-5303 5302 0
-5303 -5300 0
c Var 'max_left_00004_00003_00006' order represents '8' with '5304'
-5302 5304 0
c Var 'max_left_00004_00003_00006' direct represents '8' with '5305'
5302 -5304 5305 0
-5305 5304 0
-5305 -5302 0
c Var 'max_left_00004_00003_00006' direct represents '9' with '-5304'
5291 5293 5295 5297 5299 5301 5303 5305 -5304 0
c Encoding variable: max_left_00004_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00007' order represents '1' with '5306'
c Var 'max_left_00004_00003_00007' direct represents '1' with '5306'
c Var 'max_left_00004_00003_00007' order represents '2' with '5307'
-5306 5307 0
c Var 'max_left_00004_00003_00007' direct represents '2' with '5308'
5306 -5307 5308 0
-5308 5307 0
-5308 -5306 0
c Var 'max_left_00004_00003_00007' order represents '3' with '5309'
-5307 5309 0
c Var 'max_left_00004_00003_00007' direct represents '3' with '5310'
5307 -5309 5310 0
-5310 5309 0
-5310 -5307 0
c Var 'max_left_00004_00003_00007' order represents '4' with '5311'
-5309 5311 0
c Var 'max_left_00004_00003_00007' direct represents '4' with '5312'
5309 -5311 5312 0
-5312 5311 0
-5312 -5309 0
c Var 'max_left_00004_00003_00007' order represents '5' with '5313'
-5311 5313 0
c Var 'max_left_00004_00003_00007' direct represents '5' with '5314'
5311 -5313 5314 0
-5314 5313 0
-5314 -5311 0
c Var 'max_left_00004_00003_00007' order represents '6' with '5315'
-5313 5315 0
c Var 'max_left_00004_00003_00007' direct represents '6' with '5316'
5313 -5315 5316 0
-5316 5315 0
-5316 -5313 0
c Var 'max_left_00004_00003_00007' order represents '7' with '5317'
-5315 5317 0
c Var 'max_left_00004_00003_00007' direct represents '7' with '5318'
5315 -5317 5318 0
-5318 5317 0
-5318 -5315 0
c Var 'max_left_00004_00003_00007' order represents '8' with '5319'
-5317 5319 0
c Var 'max_left_00004_00003_00007' direct represents '8' with '5320'
5317 -5319 5320 0
-5320 5319 0
-5320 -5317 0
c Var 'max_left_00004_00003_00007' direct represents '9' with '-5319'
5306 5308 5310 5312 5314 5316 5318 5320 -5319 0
c Encoding variable: max_left_00004_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00008' order represents '1' with '5321'
c Var 'max_left_00004_00003_00008' direct represents '1' with '5321'
c Var 'max_left_00004_00003_00008' order represents '2' with '5322'
-5321 5322 0
c Var 'max_left_00004_00003_00008' direct represents '2' with '5323'
5321 -5322 5323 0
-5323 5322 0
-5323 -5321 0
c Var 'max_left_00004_00003_00008' order represents '3' with '5324'
-5322 5324 0
c Var 'max_left_00004_00003_00008' direct represents '3' with '5325'
5322 -5324 5325 0
-5325 5324 0
-5325 -5322 0
c Var 'max_left_00004_00003_00008' order represents '4' with '5326'
-5324 5326 0
c Var 'max_left_00004_00003_00008' direct represents '4' with '5327'
5324 -5326 5327 0
-5327 5326 0
-5327 -5324 0
c Var 'max_left_00004_00003_00008' order represents '5' with '5328'
-5326 5328 0
c Var 'max_left_00004_00003_00008' direct represents '5' with '5329'
5326 -5328 5329 0
-5329 5328 0
-5329 -5326 0
c Var 'max_left_00004_00003_00008' order represents '6' with '5330'
-5328 5330 0
c Var 'max_left_00004_00003_00008' direct represents '6' with '5331'
5328 -5330 5331 0
-5331 5330 0
-5331 -5328 0
c Var 'max_left_00004_00003_00008' order represents '7' with '5332'
-5330 5332 0
c Var 'max_left_00004_00003_00008' direct represents '7' with '5333'
5330 -5332 5333 0
-5333 5332 0
-5333 -5330 0
c Var 'max_left_00004_00003_00008' order represents '8' with '5334'
-5332 5334 0
c Var 'max_left_00004_00003_00008' direct represents '8' with '5335'
5332 -5334 5335 0
-5335 5334 0
-5335 -5332 0
c Var 'max_left_00004_00003_00008' direct represents '9' with '-5334'
5321 5323 5325 5327 5329 5331 5333 5335 -5334 0
c Encoding variable: max_left_00004_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00003_00009' order represents '1' with '5336'
c Var 'max_left_00004_00003_00009' direct represents '1' with '5336'
c Var 'max_left_00004_00003_00009' order represents '2' with '5337'
-5336 5337 0
c Var 'max_left_00004_00003_00009' direct represents '2' with '5338'
5336 -5337 5338 0
-5338 5337 0
-5338 -5336 0
c Var 'max_left_00004_00003_00009' order represents '3' with '5339'
-5337 5339 0
c Var 'max_left_00004_00003_00009' direct represents '3' with '5340'
5337 -5339 5340 0
-5340 5339 0
-5340 -5337 0
c Var 'max_left_00004_00003_00009' order represents '4' with '5341'
-5339 5341 0
c Var 'max_left_00004_00003_00009' direct represents '4' with '5342'
5339 -5341 5342 0
-5342 5341 0
-5342 -5339 0
c Var 'max_left_00004_00003_00009' order represents '5' with '5343'
-5341 5343 0
c Var 'max_left_00004_00003_00009' direct represents '5' with '5344'
5341 -5343 5344 0
-5344 5343 0
-5344 -5341 0
c Var 'max_left_00004_00003_00009' order represents '6' with '5345'
-5343 5345 0
c Var 'max_left_00004_00003_00009' direct represents '6' with '5346'
5343 -5345 5346 0
-5346 5345 0
-5346 -5343 0
c Var 'max_left_00004_00003_00009' order represents '7' with '5347'
-5345 5347 0
c Var 'max_left_00004_00003_00009' direct represents '7' with '5348'
5345 -5347 5348 0
-5348 5347 0
-5348 -5345 0
c Var 'max_left_00004_00003_00009' order represents '8' with '5349'
-5347 5349 0
c Var 'max_left_00004_00003_00009' direct represents '8' with '5350'
5347 -5349 5350 0
-5350 5349 0
-5350 -5347 0
c Var 'max_left_00004_00003_00009' direct represents '9' with '-5349'
5336 5338 5340 5342 5344 5346 5348 5350 -5349 0
c Encoding variable: max_left_00004_00004_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00004_00000' direct represents '0' with '5351'
5351 0
c Encoding variable: max_left_00004_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00001' order represents '1' with '5352'
c Var 'max_left_00004_00004_00001' direct represents '1' with '5352'
c Var 'max_left_00004_00004_00001' order represents '2' with '5353'
-5352 5353 0
c Var 'max_left_00004_00004_00001' direct represents '2' with '5354'
5352 -5353 5354 0
-5354 5353 0
-5354 -5352 0
c Var 'max_left_00004_00004_00001' order represents '3' with '5355'
-5353 5355 0
c Var 'max_left_00004_00004_00001' direct represents '3' with '5356'
5353 -5355 5356 0
-5356 5355 0
-5356 -5353 0
c Var 'max_left_00004_00004_00001' order represents '4' with '5357'
-5355 5357 0
c Var 'max_left_00004_00004_00001' direct represents '4' with '5358'
5355 -5357 5358 0
-5358 5357 0
-5358 -5355 0
c Var 'max_left_00004_00004_00001' order represents '5' with '5359'
-5357 5359 0
c Var 'max_left_00004_00004_00001' direct represents '5' with '5360'
5357 -5359 5360 0
-5360 5359 0
-5360 -5357 0
c Var 'max_left_00004_00004_00001' order represents '6' with '5361'
-5359 5361 0
c Var 'max_left_00004_00004_00001' direct represents '6' with '5362'
5359 -5361 5362 0
-5362 5361 0
-5362 -5359 0
c Var 'max_left_00004_00004_00001' order represents '7' with '5363'
-5361 5363 0
c Var 'max_left_00004_00004_00001' direct represents '7' with '5364'
5361 -5363 5364 0
-5364 5363 0
-5364 -5361 0
c Var 'max_left_00004_00004_00001' order represents '8' with '5365'
-5363 5365 0
c Var 'max_left_00004_00004_00001' direct represents '8' with '5366'
5363 -5365 5366 0
-5366 5365 0
-5366 -5363 0
c Var 'max_left_00004_00004_00001' direct represents '9' with '-5365'
5352 5354 5356 5358 5360 5362 5364 5366 -5365 0
c Encoding variable: max_left_00004_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00002' order represents '1' with '5367'
c Var 'max_left_00004_00004_00002' direct represents '1' with '5367'
c Var 'max_left_00004_00004_00002' order represents '2' with '5368'
-5367 5368 0
c Var 'max_left_00004_00004_00002' direct represents '2' with '5369'
5367 -5368 5369 0
-5369 5368 0
-5369 -5367 0
c Var 'max_left_00004_00004_00002' order represents '3' with '5370'
-5368 5370 0
c Var 'max_left_00004_00004_00002' direct represents '3' with '5371'
5368 -5370 5371 0
-5371 5370 0
-5371 -5368 0
c Var 'max_left_00004_00004_00002' order represents '4' with '5372'
-5370 5372 0
c Var 'max_left_00004_00004_00002' direct represents '4' with '5373'
5370 -5372 5373 0
-5373 5372 0
-5373 -5370 0
c Var 'max_left_00004_00004_00002' order represents '5' with '5374'
-5372 5374 0
c Var 'max_left_00004_00004_00002' direct represents '5' with '5375'
5372 -5374 5375 0
-5375 5374 0
-5375 -5372 0
c Var 'max_left_00004_00004_00002' order represents '6' with '5376'
-5374 5376 0
c Var 'max_left_00004_00004_00002' direct represents '6' with '5377'
5374 -5376 5377 0
-5377 5376 0
-5377 -5374 0
c Var 'max_left_00004_00004_00002' order represents '7' with '5378'
-5376 5378 0
c Var 'max_left_00004_00004_00002' direct represents '7' with '5379'
5376 -5378 5379 0
-5379 5378 0
-5379 -5376 0
c Var 'max_left_00004_00004_00002' order represents '8' with '5380'
-5378 5380 0
c Var 'max_left_00004_00004_00002' direct represents '8' with '5381'
5378 -5380 5381 0
-5381 5380 0
-5381 -5378 0
c Var 'max_left_00004_00004_00002' direct represents '9' with '-5380'
5367 5369 5371 5373 5375 5377 5379 5381 -5380 0
c Encoding variable: max_left_00004_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00003' order represents '1' with '5382'
c Var 'max_left_00004_00004_00003' direct represents '1' with '5382'
c Var 'max_left_00004_00004_00003' order represents '2' with '5383'
-5382 5383 0
c Var 'max_left_00004_00004_00003' direct represents '2' with '5384'
5382 -5383 5384 0
-5384 5383 0
-5384 -5382 0
c Var 'max_left_00004_00004_00003' order represents '3' with '5385'
-5383 5385 0
c Var 'max_left_00004_00004_00003' direct represents '3' with '5386'
5383 -5385 5386 0
-5386 5385 0
-5386 -5383 0
c Var 'max_left_00004_00004_00003' order represents '4' with '5387'
-5385 5387 0
c Var 'max_left_00004_00004_00003' direct represents '4' with '5388'
5385 -5387 5388 0
-5388 5387 0
-5388 -5385 0
c Var 'max_left_00004_00004_00003' order represents '5' with '5389'
-5387 5389 0
c Var 'max_left_00004_00004_00003' direct represents '5' with '5390'
5387 -5389 5390 0
-5390 5389 0
-5390 -5387 0
c Var 'max_left_00004_00004_00003' order represents '6' with '5391'
-5389 5391 0
c Var 'max_left_00004_00004_00003' direct represents '6' with '5392'
5389 -5391 5392 0
-5392 5391 0
-5392 -5389 0
c Var 'max_left_00004_00004_00003' order represents '7' with '5393'
-5391 5393 0
c Var 'max_left_00004_00004_00003' direct represents '7' with '5394'
5391 -5393 5394 0
-5394 5393 0
-5394 -5391 0
c Var 'max_left_00004_00004_00003' order represents '8' with '5395'
-5393 5395 0
c Var 'max_left_00004_00004_00003' direct represents '8' with '5396'
5393 -5395 5396 0
-5396 5395 0
-5396 -5393 0
c Var 'max_left_00004_00004_00003' direct represents '9' with '-5395'
5382 5384 5386 5388 5390 5392 5394 5396 -5395 0
c Encoding variable: max_left_00004_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00004' order represents '1' with '5397'
c Var 'max_left_00004_00004_00004' direct represents '1' with '5397'
c Var 'max_left_00004_00004_00004' order represents '2' with '5398'
-5397 5398 0
c Var 'max_left_00004_00004_00004' direct represents '2' with '5399'
5397 -5398 5399 0
-5399 5398 0
-5399 -5397 0
c Var 'max_left_00004_00004_00004' order represents '3' with '5400'
-5398 5400 0
c Var 'max_left_00004_00004_00004' direct represents '3' with '5401'
5398 -5400 5401 0
-5401 5400 0
-5401 -5398 0
c Var 'max_left_00004_00004_00004' order represents '4' with '5402'
-5400 5402 0
c Var 'max_left_00004_00004_00004' direct represents '4' with '5403'
5400 -5402 5403 0
-5403 5402 0
-5403 -5400 0
c Var 'max_left_00004_00004_00004' order represents '5' with '5404'
-5402 5404 0
c Var 'max_left_00004_00004_00004' direct represents '5' with '5405'
5402 -5404 5405 0
-5405 5404 0
-5405 -5402 0
c Var 'max_left_00004_00004_00004' order represents '6' with '5406'
-5404 5406 0
c Var 'max_left_00004_00004_00004' direct represents '6' with '5407'
5404 -5406 5407 0
-5407 5406 0
-5407 -5404 0
c Var 'max_left_00004_00004_00004' order represents '7' with '5408'
-5406 5408 0
c Var 'max_left_00004_00004_00004' direct represents '7' with '5409'
5406 -5408 5409 0
-5409 5408 0
-5409 -5406 0
c Var 'max_left_00004_00004_00004' order represents '8' with '5410'
-5408 5410 0
c Var 'max_left_00004_00004_00004' direct represents '8' with '5411'
5408 -5410 5411 0
-5411 5410 0
-5411 -5408 0
c Var 'max_left_00004_00004_00004' direct represents '9' with '-5410'
5397 5399 5401 5403 5405 5407 5409 5411 -5410 0
c Encoding variable: max_left_00004_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00005' order represents '1' with '5412'
c Var 'max_left_00004_00004_00005' direct represents '1' with '5412'
c Var 'max_left_00004_00004_00005' order represents '2' with '5413'
-5412 5413 0
c Var 'max_left_00004_00004_00005' direct represents '2' with '5414'
5412 -5413 5414 0
-5414 5413 0
-5414 -5412 0
c Var 'max_left_00004_00004_00005' order represents '3' with '5415'
-5413 5415 0
c Var 'max_left_00004_00004_00005' direct represents '3' with '5416'
5413 -5415 5416 0
-5416 5415 0
-5416 -5413 0
c Var 'max_left_00004_00004_00005' order represents '4' with '5417'
-5415 5417 0
c Var 'max_left_00004_00004_00005' direct represents '4' with '5418'
5415 -5417 5418 0
-5418 5417 0
-5418 -5415 0
c Var 'max_left_00004_00004_00005' order represents '5' with '5419'
-5417 5419 0
c Var 'max_left_00004_00004_00005' direct represents '5' with '5420'
5417 -5419 5420 0
-5420 5419 0
-5420 -5417 0
c Var 'max_left_00004_00004_00005' order represents '6' with '5421'
-5419 5421 0
c Var 'max_left_00004_00004_00005' direct represents '6' with '5422'
5419 -5421 5422 0
-5422 5421 0
-5422 -5419 0
c Var 'max_left_00004_00004_00005' order represents '7' with '5423'
-5421 5423 0
c Var 'max_left_00004_00004_00005' direct represents '7' with '5424'
5421 -5423 5424 0
-5424 5423 0
-5424 -5421 0
c Var 'max_left_00004_00004_00005' order represents '8' with '5425'
-5423 5425 0
c Var 'max_left_00004_00004_00005' direct represents '8' with '5426'
5423 -5425 5426 0
-5426 5425 0
-5426 -5423 0
c Var 'max_left_00004_00004_00005' direct represents '9' with '-5425'
5412 5414 5416 5418 5420 5422 5424 5426 -5425 0
c Encoding variable: max_left_00004_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00006' order represents '1' with '5427'
c Var 'max_left_00004_00004_00006' direct represents '1' with '5427'
c Var 'max_left_00004_00004_00006' order represents '2' with '5428'
-5427 5428 0
c Var 'max_left_00004_00004_00006' direct represents '2' with '5429'
5427 -5428 5429 0
-5429 5428 0
-5429 -5427 0
c Var 'max_left_00004_00004_00006' order represents '3' with '5430'
-5428 5430 0
c Var 'max_left_00004_00004_00006' direct represents '3' with '5431'
5428 -5430 5431 0
-5431 5430 0
-5431 -5428 0
c Var 'max_left_00004_00004_00006' order represents '4' with '5432'
-5430 5432 0
c Var 'max_left_00004_00004_00006' direct represents '4' with '5433'
5430 -5432 5433 0
-5433 5432 0
-5433 -5430 0
c Var 'max_left_00004_00004_00006' order represents '5' with '5434'
-5432 5434 0
c Var 'max_left_00004_00004_00006' direct represents '5' with '5435'
5432 -5434 5435 0
-5435 5434 0
-5435 -5432 0
c Var 'max_left_00004_00004_00006' order represents '6' with '5436'
-5434 5436 0
c Var 'max_left_00004_00004_00006' direct represents '6' with '5437'
5434 -5436 5437 0
-5437 5436 0
-5437 -5434 0
c Var 'max_left_00004_00004_00006' order represents '7' with '5438'
-5436 5438 0
c Var 'max_left_00004_00004_00006' direct represents '7' with '5439'
5436 -5438 5439 0
-5439 5438 0
-5439 -5436 0
c Var 'max_left_00004_00004_00006' order represents '8' with '5440'
-5438 5440 0
c Var 'max_left_00004_00004_00006' direct represents '8' with '5441'
5438 -5440 5441 0
-5441 5440 0
-5441 -5438 0
c Var 'max_left_00004_00004_00006' direct represents '9' with '-5440'
5427 5429 5431 5433 5435 5437 5439 5441 -5440 0
c Encoding variable: max_left_00004_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00007' order represents '1' with '5442'
c Var 'max_left_00004_00004_00007' direct represents '1' with '5442'
c Var 'max_left_00004_00004_00007' order represents '2' with '5443'
-5442 5443 0
c Var 'max_left_00004_00004_00007' direct represents '2' with '5444'
5442 -5443 5444 0
-5444 5443 0
-5444 -5442 0
c Var 'max_left_00004_00004_00007' order represents '3' with '5445'
-5443 5445 0
c Var 'max_left_00004_00004_00007' direct represents '3' with '5446'
5443 -5445 5446 0
-5446 5445 0
-5446 -5443 0
c Var 'max_left_00004_00004_00007' order represents '4' with '5447'
-5445 5447 0
c Var 'max_left_00004_00004_00007' direct represents '4' with '5448'
5445 -5447 5448 0
-5448 5447 0
-5448 -5445 0
c Var 'max_left_00004_00004_00007' order represents '5' with '5449'
-5447 5449 0
c Var 'max_left_00004_00004_00007' direct represents '5' with '5450'
5447 -5449 5450 0
-5450 5449 0
-5450 -5447 0
c Var 'max_left_00004_00004_00007' order represents '6' with '5451'
-5449 5451 0
c Var 'max_left_00004_00004_00007' direct represents '6' with '5452'
5449 -5451 5452 0
-5452 5451 0
-5452 -5449 0
c Var 'max_left_00004_00004_00007' order represents '7' with '5453'
-5451 5453 0
c Var 'max_left_00004_00004_00007' direct represents '7' with '5454'
5451 -5453 5454 0
-5454 5453 0
-5454 -5451 0
c Var 'max_left_00004_00004_00007' order represents '8' with '5455'
-5453 5455 0
c Var 'max_left_00004_00004_00007' direct represents '8' with '5456'
5453 -5455 5456 0
-5456 5455 0
-5456 -5453 0
c Var 'max_left_00004_00004_00007' direct represents '9' with '-5455'
5442 5444 5446 5448 5450 5452 5454 5456 -5455 0
c Encoding variable: max_left_00004_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00008' order represents '1' with '5457'
c Var 'max_left_00004_00004_00008' direct represents '1' with '5457'
c Var 'max_left_00004_00004_00008' order represents '2' with '5458'
-5457 5458 0
c Var 'max_left_00004_00004_00008' direct represents '2' with '5459'
5457 -5458 5459 0
-5459 5458 0
-5459 -5457 0
c Var 'max_left_00004_00004_00008' order represents '3' with '5460'
-5458 5460 0
c Var 'max_left_00004_00004_00008' direct represents '3' with '5461'
5458 -5460 5461 0
-5461 5460 0
-5461 -5458 0
c Var 'max_left_00004_00004_00008' order represents '4' with '5462'
-5460 5462 0
c Var 'max_left_00004_00004_00008' direct represents '4' with '5463'
5460 -5462 5463 0
-5463 5462 0
-5463 -5460 0
c Var 'max_left_00004_00004_00008' order represents '5' with '5464'
-5462 5464 0
c Var 'max_left_00004_00004_00008' direct represents '5' with '5465'
5462 -5464 5465 0
-5465 5464 0
-5465 -5462 0
c Var 'max_left_00004_00004_00008' order represents '6' with '5466'
-5464 5466 0
c Var 'max_left_00004_00004_00008' direct represents '6' with '5467'
5464 -5466 5467 0
-5467 5466 0
-5467 -5464 0
c Var 'max_left_00004_00004_00008' order represents '7' with '5468'
-5466 5468 0
c Var 'max_left_00004_00004_00008' direct represents '7' with '5469'
5466 -5468 5469 0
-5469 5468 0
-5469 -5466 0
c Var 'max_left_00004_00004_00008' order represents '8' with '5470'
-5468 5470 0
c Var 'max_left_00004_00004_00008' direct represents '8' with '5471'
5468 -5470 5471 0
-5471 5470 0
-5471 -5468 0
c Var 'max_left_00004_00004_00008' direct represents '9' with '-5470'
5457 5459 5461 5463 5465 5467 5469 5471 -5470 0
c Encoding variable: max_left_00004_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00004_00009' order represents '1' with '5472'
c Var 'max_left_00004_00004_00009' direct represents '1' with '5472'
c Var 'max_left_00004_00004_00009' order represents '2' with '5473'
-5472 5473 0
c Var 'max_left_00004_00004_00009' direct represents '2' with '5474'
5472 -5473 5474 0
-5474 5473 0
-5474 -5472 0
c Var 'max_left_00004_00004_00009' order represents '3' with '5475'
-5473 5475 0
c Var 'max_left_00004_00004_00009' direct represents '3' with '5476'
5473 -5475 5476 0
-5476 5475 0
-5476 -5473 0
c Var 'max_left_00004_00004_00009' order represents '4' with '5477'
-5475 5477 0
c Var 'max_left_00004_00004_00009' direct represents '4' with '5478'
5475 -5477 5478 0
-5478 5477 0
-5478 -5475 0
c Var 'max_left_00004_00004_00009' order represents '5' with '5479'
-5477 5479 0
c Var 'max_left_00004_00004_00009' direct represents '5' with '5480'
5477 -5479 5480 0
-5480 5479 0
-5480 -5477 0
c Var 'max_left_00004_00004_00009' order represents '6' with '5481'
-5479 5481 0
c Var 'max_left_00004_00004_00009' direct represents '6' with '5482'
5479 -5481 5482 0
-5482 5481 0
-5482 -5479 0
c Var 'max_left_00004_00004_00009' order represents '7' with '5483'
-5481 5483 0
c Var 'max_left_00004_00004_00009' direct represents '7' with '5484'
5481 -5483 5484 0
-5484 5483 0
-5484 -5481 0
c Var 'max_left_00004_00004_00009' order represents '8' with '5485'
-5483 5485 0
c Var 'max_left_00004_00004_00009' direct represents '8' with '5486'
5483 -5485 5486 0
-5486 5485 0
-5486 -5483 0
c Var 'max_left_00004_00004_00009' direct represents '9' with '-5485'
5472 5474 5476 5478 5480 5482 5484 5486 -5485 0
c Encoding variable: max_left_00004_00005_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00005_00000' direct represents '0' with '5487'
5487 0
c Encoding variable: max_left_00004_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00001' order represents '1' with '5488'
c Var 'max_left_00004_00005_00001' direct represents '1' with '5488'
c Var 'max_left_00004_00005_00001' order represents '2' with '5489'
-5488 5489 0
c Var 'max_left_00004_00005_00001' direct represents '2' with '5490'
5488 -5489 5490 0
-5490 5489 0
-5490 -5488 0
c Var 'max_left_00004_00005_00001' order represents '3' with '5491'
-5489 5491 0
c Var 'max_left_00004_00005_00001' direct represents '3' with '5492'
5489 -5491 5492 0
-5492 5491 0
-5492 -5489 0
c Var 'max_left_00004_00005_00001' order represents '4' with '5493'
-5491 5493 0
c Var 'max_left_00004_00005_00001' direct represents '4' with '5494'
5491 -5493 5494 0
-5494 5493 0
-5494 -5491 0
c Var 'max_left_00004_00005_00001' order represents '5' with '5495'
-5493 5495 0
c Var 'max_left_00004_00005_00001' direct represents '5' with '5496'
5493 -5495 5496 0
-5496 5495 0
-5496 -5493 0
c Var 'max_left_00004_00005_00001' order represents '6' with '5497'
-5495 5497 0
c Var 'max_left_00004_00005_00001' direct represents '6' with '5498'
5495 -5497 5498 0
-5498 5497 0
-5498 -5495 0
c Var 'max_left_00004_00005_00001' order represents '7' with '5499'
-5497 5499 0
c Var 'max_left_00004_00005_00001' direct represents '7' with '5500'
5497 -5499 5500 0
-5500 5499 0
-5500 -5497 0
c Var 'max_left_00004_00005_00001' order represents '8' with '5501'
-5499 5501 0
c Var 'max_left_00004_00005_00001' direct represents '8' with '5502'
5499 -5501 5502 0
-5502 5501 0
-5502 -5499 0
c Var 'max_left_00004_00005_00001' direct represents '9' with '-5501'
5488 5490 5492 5494 5496 5498 5500 5502 -5501 0
c Encoding variable: max_left_00004_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00002' order represents '1' with '5503'
c Var 'max_left_00004_00005_00002' direct represents '1' with '5503'
c Var 'max_left_00004_00005_00002' order represents '2' with '5504'
-5503 5504 0
c Var 'max_left_00004_00005_00002' direct represents '2' with '5505'
5503 -5504 5505 0
-5505 5504 0
-5505 -5503 0
c Var 'max_left_00004_00005_00002' order represents '3' with '5506'
-5504 5506 0
c Var 'max_left_00004_00005_00002' direct represents '3' with '5507'
5504 -5506 5507 0
-5507 5506 0
-5507 -5504 0
c Var 'max_left_00004_00005_00002' order represents '4' with '5508'
-5506 5508 0
c Var 'max_left_00004_00005_00002' direct represents '4' with '5509'
5506 -5508 5509 0
-5509 5508 0
-5509 -5506 0
c Var 'max_left_00004_00005_00002' order represents '5' with '5510'
-5508 5510 0
c Var 'max_left_00004_00005_00002' direct represents '5' with '5511'
5508 -5510 5511 0
-5511 5510 0
-5511 -5508 0
c Var 'max_left_00004_00005_00002' order represents '6' with '5512'
-5510 5512 0
c Var 'max_left_00004_00005_00002' direct represents '6' with '5513'
5510 -5512 5513 0
-5513 5512 0
-5513 -5510 0
c Var 'max_left_00004_00005_00002' order represents '7' with '5514'
-5512 5514 0
c Var 'max_left_00004_00005_00002' direct represents '7' with '5515'
5512 -5514 5515 0
-5515 5514 0
-5515 -5512 0
c Var 'max_left_00004_00005_00002' order represents '8' with '5516'
-5514 5516 0
c Var 'max_left_00004_00005_00002' direct represents '8' with '5517'
5514 -5516 5517 0
-5517 5516 0
-5517 -5514 0
c Var 'max_left_00004_00005_00002' direct represents '9' with '-5516'
5503 5505 5507 5509 5511 5513 5515 5517 -5516 0
c Encoding variable: max_left_00004_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00003' order represents '1' with '5518'
c Var 'max_left_00004_00005_00003' direct represents '1' with '5518'
c Var 'max_left_00004_00005_00003' order represents '2' with '5519'
-5518 5519 0
c Var 'max_left_00004_00005_00003' direct represents '2' with '5520'
5518 -5519 5520 0
-5520 5519 0
-5520 -5518 0
c Var 'max_left_00004_00005_00003' order represents '3' with '5521'
-5519 5521 0
c Var 'max_left_00004_00005_00003' direct represents '3' with '5522'
5519 -5521 5522 0
-5522 5521 0
-5522 -5519 0
c Var 'max_left_00004_00005_00003' order represents '4' with '5523'
-5521 5523 0
c Var 'max_left_00004_00005_00003' direct represents '4' with '5524'
5521 -5523 5524 0
-5524 5523 0
-5524 -5521 0
c Var 'max_left_00004_00005_00003' order represents '5' with '5525'
-5523 5525 0
c Var 'max_left_00004_00005_00003' direct represents '5' with '5526'
5523 -5525 5526 0
-5526 5525 0
-5526 -5523 0
c Var 'max_left_00004_00005_00003' order represents '6' with '5527'
-5525 5527 0
c Var 'max_left_00004_00005_00003' direct represents '6' with '5528'
5525 -5527 5528 0
-5528 5527 0
-5528 -5525 0
c Var 'max_left_00004_00005_00003' order represents '7' with '5529'
-5527 5529 0
c Var 'max_left_00004_00005_00003' direct represents '7' with '5530'
5527 -5529 5530 0
-5530 5529 0
-5530 -5527 0
c Var 'max_left_00004_00005_00003' order represents '8' with '5531'
-5529 5531 0
c Var 'max_left_00004_00005_00003' direct represents '8' with '5532'
5529 -5531 5532 0
-5532 5531 0
-5532 -5529 0
c Var 'max_left_00004_00005_00003' direct represents '9' with '-5531'
5518 5520 5522 5524 5526 5528 5530 5532 -5531 0
c Encoding variable: max_left_00004_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00004' order represents '1' with '5533'
c Var 'max_left_00004_00005_00004' direct represents '1' with '5533'
c Var 'max_left_00004_00005_00004' order represents '2' with '5534'
-5533 5534 0
c Var 'max_left_00004_00005_00004' direct represents '2' with '5535'
5533 -5534 5535 0
-5535 5534 0
-5535 -5533 0
c Var 'max_left_00004_00005_00004' order represents '3' with '5536'
-5534 5536 0
c Var 'max_left_00004_00005_00004' direct represents '3' with '5537'
5534 -5536 5537 0
-5537 5536 0
-5537 -5534 0
c Var 'max_left_00004_00005_00004' order represents '4' with '5538'
-5536 5538 0
c Var 'max_left_00004_00005_00004' direct represents '4' with '5539'
5536 -5538 5539 0
-5539 5538 0
-5539 -5536 0
c Var 'max_left_00004_00005_00004' order represents '5' with '5540'
-5538 5540 0
c Var 'max_left_00004_00005_00004' direct represents '5' with '5541'
5538 -5540 5541 0
-5541 5540 0
-5541 -5538 0
c Var 'max_left_00004_00005_00004' order represents '6' with '5542'
-5540 5542 0
c Var 'max_left_00004_00005_00004' direct represents '6' with '5543'
5540 -5542 5543 0
-5543 5542 0
-5543 -5540 0
c Var 'max_left_00004_00005_00004' order represents '7' with '5544'
-5542 5544 0
c Var 'max_left_00004_00005_00004' direct represents '7' with '5545'
5542 -5544 5545 0
-5545 5544 0
-5545 -5542 0
c Var 'max_left_00004_00005_00004' order represents '8' with '5546'
-5544 5546 0
c Var 'max_left_00004_00005_00004' direct represents '8' with '5547'
5544 -5546 5547 0
-5547 5546 0
-5547 -5544 0
c Var 'max_left_00004_00005_00004' direct represents '9' with '-5546'
5533 5535 5537 5539 5541 5543 5545 5547 -5546 0
c Encoding variable: max_left_00004_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00005' order represents '1' with '5548'
c Var 'max_left_00004_00005_00005' direct represents '1' with '5548'
c Var 'max_left_00004_00005_00005' order represents '2' with '5549'
-5548 5549 0
c Var 'max_left_00004_00005_00005' direct represents '2' with '5550'
5548 -5549 5550 0
-5550 5549 0
-5550 -5548 0
c Var 'max_left_00004_00005_00005' order represents '3' with '5551'
-5549 5551 0
c Var 'max_left_00004_00005_00005' direct represents '3' with '5552'
5549 -5551 5552 0
-5552 5551 0
-5552 -5549 0
c Var 'max_left_00004_00005_00005' order represents '4' with '5553'
-5551 5553 0
c Var 'max_left_00004_00005_00005' direct represents '4' with '5554'
5551 -5553 5554 0
-5554 5553 0
-5554 -5551 0
c Var 'max_left_00004_00005_00005' order represents '5' with '5555'
-5553 5555 0
c Var 'max_left_00004_00005_00005' direct represents '5' with '5556'
5553 -5555 5556 0
-5556 5555 0
-5556 -5553 0
c Var 'max_left_00004_00005_00005' order represents '6' with '5557'
-5555 5557 0
c Var 'max_left_00004_00005_00005' direct represents '6' with '5558'
5555 -5557 5558 0
-5558 5557 0
-5558 -5555 0
c Var 'max_left_00004_00005_00005' order represents '7' with '5559'
-5557 5559 0
c Var 'max_left_00004_00005_00005' direct represents '7' with '5560'
5557 -5559 5560 0
-5560 5559 0
-5560 -5557 0
c Var 'max_left_00004_00005_00005' order represents '8' with '5561'
-5559 5561 0
c Var 'max_left_00004_00005_00005' direct represents '8' with '5562'
5559 -5561 5562 0
-5562 5561 0
-5562 -5559 0
c Var 'max_left_00004_00005_00005' direct represents '9' with '-5561'
5548 5550 5552 5554 5556 5558 5560 5562 -5561 0
c Encoding variable: max_left_00004_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00006' order represents '1' with '5563'
c Var 'max_left_00004_00005_00006' direct represents '1' with '5563'
c Var 'max_left_00004_00005_00006' order represents '2' with '5564'
-5563 5564 0
c Var 'max_left_00004_00005_00006' direct represents '2' with '5565'
5563 -5564 5565 0
-5565 5564 0
-5565 -5563 0
c Var 'max_left_00004_00005_00006' order represents '3' with '5566'
-5564 5566 0
c Var 'max_left_00004_00005_00006' direct represents '3' with '5567'
5564 -5566 5567 0
-5567 5566 0
-5567 -5564 0
c Var 'max_left_00004_00005_00006' order represents '4' with '5568'
-5566 5568 0
c Var 'max_left_00004_00005_00006' direct represents '4' with '5569'
5566 -5568 5569 0
-5569 5568 0
-5569 -5566 0
c Var 'max_left_00004_00005_00006' order represents '5' with '5570'
-5568 5570 0
c Var 'max_left_00004_00005_00006' direct represents '5' with '5571'
5568 -5570 5571 0
-5571 5570 0
-5571 -5568 0
c Var 'max_left_00004_00005_00006' order represents '6' with '5572'
-5570 5572 0
c Var 'max_left_00004_00005_00006' direct represents '6' with '5573'
5570 -5572 5573 0
-5573 5572 0
-5573 -5570 0
c Var 'max_left_00004_00005_00006' order represents '7' with '5574'
-5572 5574 0
c Var 'max_left_00004_00005_00006' direct represents '7' with '5575'
5572 -5574 5575 0
-5575 5574 0
-5575 -5572 0
c Var 'max_left_00004_00005_00006' order represents '8' with '5576'
-5574 5576 0
c Var 'max_left_00004_00005_00006' direct represents '8' with '5577'
5574 -5576 5577 0
-5577 5576 0
-5577 -5574 0
c Var 'max_left_00004_00005_00006' direct represents '9' with '-5576'
5563 5565 5567 5569 5571 5573 5575 5577 -5576 0
c Encoding variable: max_left_00004_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00007' order represents '1' with '5578'
c Var 'max_left_00004_00005_00007' direct represents '1' with '5578'
c Var 'max_left_00004_00005_00007' order represents '2' with '5579'
-5578 5579 0
c Var 'max_left_00004_00005_00007' direct represents '2' with '5580'
5578 -5579 5580 0
-5580 5579 0
-5580 -5578 0
c Var 'max_left_00004_00005_00007' order represents '3' with '5581'
-5579 5581 0
c Var 'max_left_00004_00005_00007' direct represents '3' with '5582'
5579 -5581 5582 0
-5582 5581 0
-5582 -5579 0
c Var 'max_left_00004_00005_00007' order represents '4' with '5583'
-5581 5583 0
c Var 'max_left_00004_00005_00007' direct represents '4' with '5584'
5581 -5583 5584 0
-5584 5583 0
-5584 -5581 0
c Var 'max_left_00004_00005_00007' order represents '5' with '5585'
-5583 5585 0
c Var 'max_left_00004_00005_00007' direct represents '5' with '5586'
5583 -5585 5586 0
-5586 5585 0
-5586 -5583 0
c Var 'max_left_00004_00005_00007' order represents '6' with '5587'
-5585 5587 0
c Var 'max_left_00004_00005_00007' direct represents '6' with '5588'
5585 -5587 5588 0
-5588 5587 0
-5588 -5585 0
c Var 'max_left_00004_00005_00007' order represents '7' with '5589'
-5587 5589 0
c Var 'max_left_00004_00005_00007' direct represents '7' with '5590'
5587 -5589 5590 0
-5590 5589 0
-5590 -5587 0
c Var 'max_left_00004_00005_00007' order represents '8' with '5591'
-5589 5591 0
c Var 'max_left_00004_00005_00007' direct represents '8' with '5592'
5589 -5591 5592 0
-5592 5591 0
-5592 -5589 0
c Var 'max_left_00004_00005_00007' direct represents '9' with '-5591'
5578 5580 5582 5584 5586 5588 5590 5592 -5591 0
c Encoding variable: max_left_00004_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00008' order represents '1' with '5593'
c Var 'max_left_00004_00005_00008' direct represents '1' with '5593'
c Var 'max_left_00004_00005_00008' order represents '2' with '5594'
-5593 5594 0
c Var 'max_left_00004_00005_00008' direct represents '2' with '5595'
5593 -5594 5595 0
-5595 5594 0
-5595 -5593 0
c Var 'max_left_00004_00005_00008' order represents '3' with '5596'
-5594 5596 0
c Var 'max_left_00004_00005_00008' direct represents '3' with '5597'
5594 -5596 5597 0
-5597 5596 0
-5597 -5594 0
c Var 'max_left_00004_00005_00008' order represents '4' with '5598'
-5596 5598 0
c Var 'max_left_00004_00005_00008' direct represents '4' with '5599'
5596 -5598 5599 0
-5599 5598 0
-5599 -5596 0
c Var 'max_left_00004_00005_00008' order represents '5' with '5600'
-5598 5600 0
c Var 'max_left_00004_00005_00008' direct represents '5' with '5601'
5598 -5600 5601 0
-5601 5600 0
-5601 -5598 0
c Var 'max_left_00004_00005_00008' order represents '6' with '5602'
-5600 5602 0
c Var 'max_left_00004_00005_00008' direct represents '6' with '5603'
5600 -5602 5603 0
-5603 5602 0
-5603 -5600 0
c Var 'max_left_00004_00005_00008' order represents '7' with '5604'
-5602 5604 0
c Var 'max_left_00004_00005_00008' direct represents '7' with '5605'
5602 -5604 5605 0
-5605 5604 0
-5605 -5602 0
c Var 'max_left_00004_00005_00008' order represents '8' with '5606'
-5604 5606 0
c Var 'max_left_00004_00005_00008' direct represents '8' with '5607'
5604 -5606 5607 0
-5607 5606 0
-5607 -5604 0
c Var 'max_left_00004_00005_00008' direct represents '9' with '-5606'
5593 5595 5597 5599 5601 5603 5605 5607 -5606 0
c Encoding variable: max_left_00004_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00005_00009' order represents '1' with '5608'
c Var 'max_left_00004_00005_00009' direct represents '1' with '5608'
c Var 'max_left_00004_00005_00009' order represents '2' with '5609'
-5608 5609 0
c Var 'max_left_00004_00005_00009' direct represents '2' with '5610'
5608 -5609 5610 0
-5610 5609 0
-5610 -5608 0
c Var 'max_left_00004_00005_00009' order represents '3' with '5611'
-5609 5611 0
c Var 'max_left_00004_00005_00009' direct represents '3' with '5612'
5609 -5611 5612 0
-5612 5611 0
-5612 -5609 0
c Var 'max_left_00004_00005_00009' order represents '4' with '5613'
-5611 5613 0
c Var 'max_left_00004_00005_00009' direct represents '4' with '5614'
5611 -5613 5614 0
-5614 5613 0
-5614 -5611 0
c Var 'max_left_00004_00005_00009' order represents '5' with '5615'
-5613 5615 0
c Var 'max_left_00004_00005_00009' direct represents '5' with '5616'
5613 -5615 5616 0
-5616 5615 0
-5616 -5613 0
c Var 'max_left_00004_00005_00009' order represents '6' with '5617'
-5615 5617 0
c Var 'max_left_00004_00005_00009' direct represents '6' with '5618'
5615 -5617 5618 0
-5618 5617 0
-5618 -5615 0
c Var 'max_left_00004_00005_00009' order represents '7' with '5619'
-5617 5619 0
c Var 'max_left_00004_00005_00009' direct represents '7' with '5620'
5617 -5619 5620 0
-5620 5619 0
-5620 -5617 0
c Var 'max_left_00004_00005_00009' order represents '8' with '5621'
-5619 5621 0
c Var 'max_left_00004_00005_00009' direct represents '8' with '5622'
5619 -5621 5622 0
-5622 5621 0
-5622 -5619 0
c Var 'max_left_00004_00005_00009' direct represents '9' with '-5621'
5608 5610 5612 5614 5616 5618 5620 5622 -5621 0
c Encoding variable: max_left_00004_00006_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00006_00000' direct represents '0' with '5623'
5623 0
c Encoding variable: max_left_00004_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00001' order represents '1' with '5624'
c Var 'max_left_00004_00006_00001' direct represents '1' with '5624'
c Var 'max_left_00004_00006_00001' order represents '2' with '5625'
-5624 5625 0
c Var 'max_left_00004_00006_00001' direct represents '2' with '5626'
5624 -5625 5626 0
-5626 5625 0
-5626 -5624 0
c Var 'max_left_00004_00006_00001' order represents '3' with '5627'
-5625 5627 0
c Var 'max_left_00004_00006_00001' direct represents '3' with '5628'
5625 -5627 5628 0
-5628 5627 0
-5628 -5625 0
c Var 'max_left_00004_00006_00001' order represents '4' with '5629'
-5627 5629 0
c Var 'max_left_00004_00006_00001' direct represents '4' with '5630'
5627 -5629 5630 0
-5630 5629 0
-5630 -5627 0
c Var 'max_left_00004_00006_00001' order represents '5' with '5631'
-5629 5631 0
c Var 'max_left_00004_00006_00001' direct represents '5' with '5632'
5629 -5631 5632 0
-5632 5631 0
-5632 -5629 0
c Var 'max_left_00004_00006_00001' order represents '6' with '5633'
-5631 5633 0
c Var 'max_left_00004_00006_00001' direct represents '6' with '5634'
5631 -5633 5634 0
-5634 5633 0
-5634 -5631 0
c Var 'max_left_00004_00006_00001' order represents '7' with '5635'
-5633 5635 0
c Var 'max_left_00004_00006_00001' direct represents '7' with '5636'
5633 -5635 5636 0
-5636 5635 0
-5636 -5633 0
c Var 'max_left_00004_00006_00001' order represents '8' with '5637'
-5635 5637 0
c Var 'max_left_00004_00006_00001' direct represents '8' with '5638'
5635 -5637 5638 0
-5638 5637 0
-5638 -5635 0
c Var 'max_left_00004_00006_00001' direct represents '9' with '-5637'
5624 5626 5628 5630 5632 5634 5636 5638 -5637 0
c Encoding variable: max_left_00004_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00002' order represents '1' with '5639'
c Var 'max_left_00004_00006_00002' direct represents '1' with '5639'
c Var 'max_left_00004_00006_00002' order represents '2' with '5640'
-5639 5640 0
c Var 'max_left_00004_00006_00002' direct represents '2' with '5641'
5639 -5640 5641 0
-5641 5640 0
-5641 -5639 0
c Var 'max_left_00004_00006_00002' order represents '3' with '5642'
-5640 5642 0
c Var 'max_left_00004_00006_00002' direct represents '3' with '5643'
5640 -5642 5643 0
-5643 5642 0
-5643 -5640 0
c Var 'max_left_00004_00006_00002' order represents '4' with '5644'
-5642 5644 0
c Var 'max_left_00004_00006_00002' direct represents '4' with '5645'
5642 -5644 5645 0
-5645 5644 0
-5645 -5642 0
c Var 'max_left_00004_00006_00002' order represents '5' with '5646'
-5644 5646 0
c Var 'max_left_00004_00006_00002' direct represents '5' with '5647'
5644 -5646 5647 0
-5647 5646 0
-5647 -5644 0
c Var 'max_left_00004_00006_00002' order represents '6' with '5648'
-5646 5648 0
c Var 'max_left_00004_00006_00002' direct represents '6' with '5649'
5646 -5648 5649 0
-5649 5648 0
-5649 -5646 0
c Var 'max_left_00004_00006_00002' order represents '7' with '5650'
-5648 5650 0
c Var 'max_left_00004_00006_00002' direct represents '7' with '5651'
5648 -5650 5651 0
-5651 5650 0
-5651 -5648 0
c Var 'max_left_00004_00006_00002' order represents '8' with '5652'
-5650 5652 0
c Var 'max_left_00004_00006_00002' direct represents '8' with '5653'
5650 -5652 5653 0
-5653 5652 0
-5653 -5650 0
c Var 'max_left_00004_00006_00002' direct represents '9' with '-5652'
5639 5641 5643 5645 5647 5649 5651 5653 -5652 0
c Encoding variable: max_left_00004_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00003' order represents '1' with '5654'
c Var 'max_left_00004_00006_00003' direct represents '1' with '5654'
c Var 'max_left_00004_00006_00003' order represents '2' with '5655'
-5654 5655 0
c Var 'max_left_00004_00006_00003' direct represents '2' with '5656'
5654 -5655 5656 0
-5656 5655 0
-5656 -5654 0
c Var 'max_left_00004_00006_00003' order represents '3' with '5657'
-5655 5657 0
c Var 'max_left_00004_00006_00003' direct represents '3' with '5658'
5655 -5657 5658 0
-5658 5657 0
-5658 -5655 0
c Var 'max_left_00004_00006_00003' order represents '4' with '5659'
-5657 5659 0
c Var 'max_left_00004_00006_00003' direct represents '4' with '5660'
5657 -5659 5660 0
-5660 5659 0
-5660 -5657 0
c Var 'max_left_00004_00006_00003' order represents '5' with '5661'
-5659 5661 0
c Var 'max_left_00004_00006_00003' direct represents '5' with '5662'
5659 -5661 5662 0
-5662 5661 0
-5662 -5659 0
c Var 'max_left_00004_00006_00003' order represents '6' with '5663'
-5661 5663 0
c Var 'max_left_00004_00006_00003' direct represents '6' with '5664'
5661 -5663 5664 0
-5664 5663 0
-5664 -5661 0
c Var 'max_left_00004_00006_00003' order represents '7' with '5665'
-5663 5665 0
c Var 'max_left_00004_00006_00003' direct represents '7' with '5666'
5663 -5665 5666 0
-5666 5665 0
-5666 -5663 0
c Var 'max_left_00004_00006_00003' order represents '8' with '5667'
-5665 5667 0
c Var 'max_left_00004_00006_00003' direct represents '8' with '5668'
5665 -5667 5668 0
-5668 5667 0
-5668 -5665 0
c Var 'max_left_00004_00006_00003' direct represents '9' with '-5667'
5654 5656 5658 5660 5662 5664 5666 5668 -5667 0
c Encoding variable: max_left_00004_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00004' order represents '1' with '5669'
c Var 'max_left_00004_00006_00004' direct represents '1' with '5669'
c Var 'max_left_00004_00006_00004' order represents '2' with '5670'
-5669 5670 0
c Var 'max_left_00004_00006_00004' direct represents '2' with '5671'
5669 -5670 5671 0
-5671 5670 0
-5671 -5669 0
c Var 'max_left_00004_00006_00004' order represents '3' with '5672'
-5670 5672 0
c Var 'max_left_00004_00006_00004' direct represents '3' with '5673'
5670 -5672 5673 0
-5673 5672 0
-5673 -5670 0
c Var 'max_left_00004_00006_00004' order represents '4' with '5674'
-5672 5674 0
c Var 'max_left_00004_00006_00004' direct represents '4' with '5675'
5672 -5674 5675 0
-5675 5674 0
-5675 -5672 0
c Var 'max_left_00004_00006_00004' order represents '5' with '5676'
-5674 5676 0
c Var 'max_left_00004_00006_00004' direct represents '5' with '5677'
5674 -5676 5677 0
-5677 5676 0
-5677 -5674 0
c Var 'max_left_00004_00006_00004' order represents '6' with '5678'
-5676 5678 0
c Var 'max_left_00004_00006_00004' direct represents '6' with '5679'
5676 -5678 5679 0
-5679 5678 0
-5679 -5676 0
c Var 'max_left_00004_00006_00004' order represents '7' with '5680'
-5678 5680 0
c Var 'max_left_00004_00006_00004' direct represents '7' with '5681'
5678 -5680 5681 0
-5681 5680 0
-5681 -5678 0
c Var 'max_left_00004_00006_00004' order represents '8' with '5682'
-5680 5682 0
c Var 'max_left_00004_00006_00004' direct represents '8' with '5683'
5680 -5682 5683 0
-5683 5682 0
-5683 -5680 0
c Var 'max_left_00004_00006_00004' direct represents '9' with '-5682'
5669 5671 5673 5675 5677 5679 5681 5683 -5682 0
c Encoding variable: max_left_00004_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00005' order represents '1' with '5684'
c Var 'max_left_00004_00006_00005' direct represents '1' with '5684'
c Var 'max_left_00004_00006_00005' order represents '2' with '5685'
-5684 5685 0
c Var 'max_left_00004_00006_00005' direct represents '2' with '5686'
5684 -5685 5686 0
-5686 5685 0
-5686 -5684 0
c Var 'max_left_00004_00006_00005' order represents '3' with '5687'
-5685 5687 0
c Var 'max_left_00004_00006_00005' direct represents '3' with '5688'
5685 -5687 5688 0
-5688 5687 0
-5688 -5685 0
c Var 'max_left_00004_00006_00005' order represents '4' with '5689'
-5687 5689 0
c Var 'max_left_00004_00006_00005' direct represents '4' with '5690'
5687 -5689 5690 0
-5690 5689 0
-5690 -5687 0
c Var 'max_left_00004_00006_00005' order represents '5' with '5691'
-5689 5691 0
c Var 'max_left_00004_00006_00005' direct represents '5' with '5692'
5689 -5691 5692 0
-5692 5691 0
-5692 -5689 0
c Var 'max_left_00004_00006_00005' order represents '6' with '5693'
-5691 5693 0
c Var 'max_left_00004_00006_00005' direct represents '6' with '5694'
5691 -5693 5694 0
-5694 5693 0
-5694 -5691 0
c Var 'max_left_00004_00006_00005' order represents '7' with '5695'
-5693 5695 0
c Var 'max_left_00004_00006_00005' direct represents '7' with '5696'
5693 -5695 5696 0
-5696 5695 0
-5696 -5693 0
c Var 'max_left_00004_00006_00005' order represents '8' with '5697'
-5695 5697 0
c Var 'max_left_00004_00006_00005' direct represents '8' with '5698'
5695 -5697 5698 0
-5698 5697 0
-5698 -5695 0
c Var 'max_left_00004_00006_00005' direct represents '9' with '-5697'
5684 5686 5688 5690 5692 5694 5696 5698 -5697 0
c Encoding variable: max_left_00004_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00006' order represents '1' with '5699'
c Var 'max_left_00004_00006_00006' direct represents '1' with '5699'
c Var 'max_left_00004_00006_00006' order represents '2' with '5700'
-5699 5700 0
c Var 'max_left_00004_00006_00006' direct represents '2' with '5701'
5699 -5700 5701 0
-5701 5700 0
-5701 -5699 0
c Var 'max_left_00004_00006_00006' order represents '3' with '5702'
-5700 5702 0
c Var 'max_left_00004_00006_00006' direct represents '3' with '5703'
5700 -5702 5703 0
-5703 5702 0
-5703 -5700 0
c Var 'max_left_00004_00006_00006' order represents '4' with '5704'
-5702 5704 0
c Var 'max_left_00004_00006_00006' direct represents '4' with '5705'
5702 -5704 5705 0
-5705 5704 0
-5705 -5702 0
c Var 'max_left_00004_00006_00006' order represents '5' with '5706'
-5704 5706 0
c Var 'max_left_00004_00006_00006' direct represents '5' with '5707'
5704 -5706 5707 0
-5707 5706 0
-5707 -5704 0
c Var 'max_left_00004_00006_00006' order represents '6' with '5708'
-5706 5708 0
c Var 'max_left_00004_00006_00006' direct represents '6' with '5709'
5706 -5708 5709 0
-5709 5708 0
-5709 -5706 0
c Var 'max_left_00004_00006_00006' order represents '7' with '5710'
-5708 5710 0
c Var 'max_left_00004_00006_00006' direct represents '7' with '5711'
5708 -5710 5711 0
-5711 5710 0
-5711 -5708 0
c Var 'max_left_00004_00006_00006' order represents '8' with '5712'
-5710 5712 0
c Var 'max_left_00004_00006_00006' direct represents '8' with '5713'
5710 -5712 5713 0
-5713 5712 0
-5713 -5710 0
c Var 'max_left_00004_00006_00006' direct represents '9' with '-5712'
5699 5701 5703 5705 5707 5709 5711 5713 -5712 0
c Encoding variable: max_left_00004_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00007' order represents '1' with '5714'
c Var 'max_left_00004_00006_00007' direct represents '1' with '5714'
c Var 'max_left_00004_00006_00007' order represents '2' with '5715'
-5714 5715 0
c Var 'max_left_00004_00006_00007' direct represents '2' with '5716'
5714 -5715 5716 0
-5716 5715 0
-5716 -5714 0
c Var 'max_left_00004_00006_00007' order represents '3' with '5717'
-5715 5717 0
c Var 'max_left_00004_00006_00007' direct represents '3' with '5718'
5715 -5717 5718 0
-5718 5717 0
-5718 -5715 0
c Var 'max_left_00004_00006_00007' order represents '4' with '5719'
-5717 5719 0
c Var 'max_left_00004_00006_00007' direct represents '4' with '5720'
5717 -5719 5720 0
-5720 5719 0
-5720 -5717 0
c Var 'max_left_00004_00006_00007' order represents '5' with '5721'
-5719 5721 0
c Var 'max_left_00004_00006_00007' direct represents '5' with '5722'
5719 -5721 5722 0
-5722 5721 0
-5722 -5719 0
c Var 'max_left_00004_00006_00007' order represents '6' with '5723'
-5721 5723 0
c Var 'max_left_00004_00006_00007' direct represents '6' with '5724'
5721 -5723 5724 0
-5724 5723 0
-5724 -5721 0
c Var 'max_left_00004_00006_00007' order represents '7' with '5725'
-5723 5725 0
c Var 'max_left_00004_00006_00007' direct represents '7' with '5726'
5723 -5725 5726 0
-5726 5725 0
-5726 -5723 0
c Var 'max_left_00004_00006_00007' order represents '8' with '5727'
-5725 5727 0
c Var 'max_left_00004_00006_00007' direct represents '8' with '5728'
5725 -5727 5728 0
-5728 5727 0
-5728 -5725 0
c Var 'max_left_00004_00006_00007' direct represents '9' with '-5727'
5714 5716 5718 5720 5722 5724 5726 5728 -5727 0
c Encoding variable: max_left_00004_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00008' order represents '1' with '5729'
c Var 'max_left_00004_00006_00008' direct represents '1' with '5729'
c Var 'max_left_00004_00006_00008' order represents '2' with '5730'
-5729 5730 0
c Var 'max_left_00004_00006_00008' direct represents '2' with '5731'
5729 -5730 5731 0
-5731 5730 0
-5731 -5729 0
c Var 'max_left_00004_00006_00008' order represents '3' with '5732'
-5730 5732 0
c Var 'max_left_00004_00006_00008' direct represents '3' with '5733'
5730 -5732 5733 0
-5733 5732 0
-5733 -5730 0
c Var 'max_left_00004_00006_00008' order represents '4' with '5734'
-5732 5734 0
c Var 'max_left_00004_00006_00008' direct represents '4' with '5735'
5732 -5734 5735 0
-5735 5734 0
-5735 -5732 0
c Var 'max_left_00004_00006_00008' order represents '5' with '5736'
-5734 5736 0
c Var 'max_left_00004_00006_00008' direct represents '5' with '5737'
5734 -5736 5737 0
-5737 5736 0
-5737 -5734 0
c Var 'max_left_00004_00006_00008' order represents '6' with '5738'
-5736 5738 0
c Var 'max_left_00004_00006_00008' direct represents '6' with '5739'
5736 -5738 5739 0
-5739 5738 0
-5739 -5736 0
c Var 'max_left_00004_00006_00008' order represents '7' with '5740'
-5738 5740 0
c Var 'max_left_00004_00006_00008' direct represents '7' with '5741'
5738 -5740 5741 0
-5741 5740 0
-5741 -5738 0
c Var 'max_left_00004_00006_00008' order represents '8' with '5742'
-5740 5742 0
c Var 'max_left_00004_00006_00008' direct represents '8' with '5743'
5740 -5742 5743 0
-5743 5742 0
-5743 -5740 0
c Var 'max_left_00004_00006_00008' direct represents '9' with '-5742'
5729 5731 5733 5735 5737 5739 5741 5743 -5742 0
c Encoding variable: max_left_00004_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00006_00009' order represents '1' with '5744'
c Var 'max_left_00004_00006_00009' direct represents '1' with '5744'
c Var 'max_left_00004_00006_00009' order represents '2' with '5745'
-5744 5745 0
c Var 'max_left_00004_00006_00009' direct represents '2' with '5746'
5744 -5745 5746 0
-5746 5745 0
-5746 -5744 0
c Var 'max_left_00004_00006_00009' order represents '3' with '5747'
-5745 5747 0
c Var 'max_left_00004_00006_00009' direct represents '3' with '5748'
5745 -5747 5748 0
-5748 5747 0
-5748 -5745 0
c Var 'max_left_00004_00006_00009' order represents '4' with '5749'
-5747 5749 0
c Var 'max_left_00004_00006_00009' direct represents '4' with '5750'
5747 -5749 5750 0
-5750 5749 0
-5750 -5747 0
c Var 'max_left_00004_00006_00009' order represents '5' with '5751'
-5749 5751 0
c Var 'max_left_00004_00006_00009' direct represents '5' with '5752'
5749 -5751 5752 0
-5752 5751 0
-5752 -5749 0
c Var 'max_left_00004_00006_00009' order represents '6' with '5753'
-5751 5753 0
c Var 'max_left_00004_00006_00009' direct represents '6' with '5754'
5751 -5753 5754 0
-5754 5753 0
-5754 -5751 0
c Var 'max_left_00004_00006_00009' order represents '7' with '5755'
-5753 5755 0
c Var 'max_left_00004_00006_00009' direct represents '7' with '5756'
5753 -5755 5756 0
-5756 5755 0
-5756 -5753 0
c Var 'max_left_00004_00006_00009' order represents '8' with '5757'
-5755 5757 0
c Var 'max_left_00004_00006_00009' direct represents '8' with '5758'
5755 -5757 5758 0
-5758 5757 0
-5758 -5755 0
c Var 'max_left_00004_00006_00009' direct represents '9' with '-5757'
5744 5746 5748 5750 5752 5754 5756 5758 -5757 0
c Encoding variable: max_left_00004_00007_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00007_00000' direct represents '0' with '5759'
5759 0
c Encoding variable: max_left_00004_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00001' order represents '1' with '5760'
c Var 'max_left_00004_00007_00001' direct represents '1' with '5760'
c Var 'max_left_00004_00007_00001' order represents '2' with '5761'
-5760 5761 0
c Var 'max_left_00004_00007_00001' direct represents '2' with '5762'
5760 -5761 5762 0
-5762 5761 0
-5762 -5760 0
c Var 'max_left_00004_00007_00001' order represents '3' with '5763'
-5761 5763 0
c Var 'max_left_00004_00007_00001' direct represents '3' with '5764'
5761 -5763 5764 0
-5764 5763 0
-5764 -5761 0
c Var 'max_left_00004_00007_00001' order represents '4' with '5765'
-5763 5765 0
c Var 'max_left_00004_00007_00001' direct represents '4' with '5766'
5763 -5765 5766 0
-5766 5765 0
-5766 -5763 0
c Var 'max_left_00004_00007_00001' order represents '5' with '5767'
-5765 5767 0
c Var 'max_left_00004_00007_00001' direct represents '5' with '5768'
5765 -5767 5768 0
-5768 5767 0
-5768 -5765 0
c Var 'max_left_00004_00007_00001' order represents '6' with '5769'
-5767 5769 0
c Var 'max_left_00004_00007_00001' direct represents '6' with '5770'
5767 -5769 5770 0
-5770 5769 0
-5770 -5767 0
c Var 'max_left_00004_00007_00001' order represents '7' with '5771'
-5769 5771 0
c Var 'max_left_00004_00007_00001' direct represents '7' with '5772'
5769 -5771 5772 0
-5772 5771 0
-5772 -5769 0
c Var 'max_left_00004_00007_00001' order represents '8' with '5773'
-5771 5773 0
c Var 'max_left_00004_00007_00001' direct represents '8' with '5774'
5771 -5773 5774 0
-5774 5773 0
-5774 -5771 0
c Var 'max_left_00004_00007_00001' direct represents '9' with '-5773'
5760 5762 5764 5766 5768 5770 5772 5774 -5773 0
c Encoding variable: max_left_00004_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00002' order represents '1' with '5775'
c Var 'max_left_00004_00007_00002' direct represents '1' with '5775'
c Var 'max_left_00004_00007_00002' order represents '2' with '5776'
-5775 5776 0
c Var 'max_left_00004_00007_00002' direct represents '2' with '5777'
5775 -5776 5777 0
-5777 5776 0
-5777 -5775 0
c Var 'max_left_00004_00007_00002' order represents '3' with '5778'
-5776 5778 0
c Var 'max_left_00004_00007_00002' direct represents '3' with '5779'
5776 -5778 5779 0
-5779 5778 0
-5779 -5776 0
c Var 'max_left_00004_00007_00002' order represents '4' with '5780'
-5778 5780 0
c Var 'max_left_00004_00007_00002' direct represents '4' with '5781'
5778 -5780 5781 0
-5781 5780 0
-5781 -5778 0
c Var 'max_left_00004_00007_00002' order represents '5' with '5782'
-5780 5782 0
c Var 'max_left_00004_00007_00002' direct represents '5' with '5783'
5780 -5782 5783 0
-5783 5782 0
-5783 -5780 0
c Var 'max_left_00004_00007_00002' order represents '6' with '5784'
-5782 5784 0
c Var 'max_left_00004_00007_00002' direct represents '6' with '5785'
5782 -5784 5785 0
-5785 5784 0
-5785 -5782 0
c Var 'max_left_00004_00007_00002' order represents '7' with '5786'
-5784 5786 0
c Var 'max_left_00004_00007_00002' direct represents '7' with '5787'
5784 -5786 5787 0
-5787 5786 0
-5787 -5784 0
c Var 'max_left_00004_00007_00002' order represents '8' with '5788'
-5786 5788 0
c Var 'max_left_00004_00007_00002' direct represents '8' with '5789'
5786 -5788 5789 0
-5789 5788 0
-5789 -5786 0
c Var 'max_left_00004_00007_00002' direct represents '9' with '-5788'
5775 5777 5779 5781 5783 5785 5787 5789 -5788 0
c Encoding variable: max_left_00004_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00003' order represents '1' with '5790'
c Var 'max_left_00004_00007_00003' direct represents '1' with '5790'
c Var 'max_left_00004_00007_00003' order represents '2' with '5791'
-5790 5791 0
c Var 'max_left_00004_00007_00003' direct represents '2' with '5792'
5790 -5791 5792 0
-5792 5791 0
-5792 -5790 0
c Var 'max_left_00004_00007_00003' order represents '3' with '5793'
-5791 5793 0
c Var 'max_left_00004_00007_00003' direct represents '3' with '5794'
5791 -5793 5794 0
-5794 5793 0
-5794 -5791 0
c Var 'max_left_00004_00007_00003' order represents '4' with '5795'
-5793 5795 0
c Var 'max_left_00004_00007_00003' direct represents '4' with '5796'
5793 -5795 5796 0
-5796 5795 0
-5796 -5793 0
c Var 'max_left_00004_00007_00003' order represents '5' with '5797'
-5795 5797 0
c Var 'max_left_00004_00007_00003' direct represents '5' with '5798'
5795 -5797 5798 0
-5798 5797 0
-5798 -5795 0
c Var 'max_left_00004_00007_00003' order represents '6' with '5799'
-5797 5799 0
c Var 'max_left_00004_00007_00003' direct represents '6' with '5800'
5797 -5799 5800 0
-5800 5799 0
-5800 -5797 0
c Var 'max_left_00004_00007_00003' order represents '7' with '5801'
-5799 5801 0
c Var 'max_left_00004_00007_00003' direct represents '7' with '5802'
5799 -5801 5802 0
-5802 5801 0
-5802 -5799 0
c Var 'max_left_00004_00007_00003' order represents '8' with '5803'
-5801 5803 0
c Var 'max_left_00004_00007_00003' direct represents '8' with '5804'
5801 -5803 5804 0
-5804 5803 0
-5804 -5801 0
c Var 'max_left_00004_00007_00003' direct represents '9' with '-5803'
5790 5792 5794 5796 5798 5800 5802 5804 -5803 0
c Encoding variable: max_left_00004_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00004' order represents '1' with '5805'
c Var 'max_left_00004_00007_00004' direct represents '1' with '5805'
c Var 'max_left_00004_00007_00004' order represents '2' with '5806'
-5805 5806 0
c Var 'max_left_00004_00007_00004' direct represents '2' with '5807'
5805 -5806 5807 0
-5807 5806 0
-5807 -5805 0
c Var 'max_left_00004_00007_00004' order represents '3' with '5808'
-5806 5808 0
c Var 'max_left_00004_00007_00004' direct represents '3' with '5809'
5806 -5808 5809 0
-5809 5808 0
-5809 -5806 0
c Var 'max_left_00004_00007_00004' order represents '4' with '5810'
-5808 5810 0
c Var 'max_left_00004_00007_00004' direct represents '4' with '5811'
5808 -5810 5811 0
-5811 5810 0
-5811 -5808 0
c Var 'max_left_00004_00007_00004' order represents '5' with '5812'
-5810 5812 0
c Var 'max_left_00004_00007_00004' direct represents '5' with '5813'
5810 -5812 5813 0
-5813 5812 0
-5813 -5810 0
c Var 'max_left_00004_00007_00004' order represents '6' with '5814'
-5812 5814 0
c Var 'max_left_00004_00007_00004' direct represents '6' with '5815'
5812 -5814 5815 0
-5815 5814 0
-5815 -5812 0
c Var 'max_left_00004_00007_00004' order represents '7' with '5816'
-5814 5816 0
c Var 'max_left_00004_00007_00004' direct represents '7' with '5817'
5814 -5816 5817 0
-5817 5816 0
-5817 -5814 0
c Var 'max_left_00004_00007_00004' order represents '8' with '5818'
-5816 5818 0
c Var 'max_left_00004_00007_00004' direct represents '8' with '5819'
5816 -5818 5819 0
-5819 5818 0
-5819 -5816 0
c Var 'max_left_00004_00007_00004' direct represents '9' with '-5818'
5805 5807 5809 5811 5813 5815 5817 5819 -5818 0
c Encoding variable: max_left_00004_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00005' order represents '1' with '5820'
c Var 'max_left_00004_00007_00005' direct represents '1' with '5820'
c Var 'max_left_00004_00007_00005' order represents '2' with '5821'
-5820 5821 0
c Var 'max_left_00004_00007_00005' direct represents '2' with '5822'
5820 -5821 5822 0
-5822 5821 0
-5822 -5820 0
c Var 'max_left_00004_00007_00005' order represents '3' with '5823'
-5821 5823 0
c Var 'max_left_00004_00007_00005' direct represents '3' with '5824'
5821 -5823 5824 0
-5824 5823 0
-5824 -5821 0
c Var 'max_left_00004_00007_00005' order represents '4' with '5825'
-5823 5825 0
c Var 'max_left_00004_00007_00005' direct represents '4' with '5826'
5823 -5825 5826 0
-5826 5825 0
-5826 -5823 0
c Var 'max_left_00004_00007_00005' order represents '5' with '5827'
-5825 5827 0
c Var 'max_left_00004_00007_00005' direct represents '5' with '5828'
5825 -5827 5828 0
-5828 5827 0
-5828 -5825 0
c Var 'max_left_00004_00007_00005' order represents '6' with '5829'
-5827 5829 0
c Var 'max_left_00004_00007_00005' direct represents '6' with '5830'
5827 -5829 5830 0
-5830 5829 0
-5830 -5827 0
c Var 'max_left_00004_00007_00005' order represents '7' with '5831'
-5829 5831 0
c Var 'max_left_00004_00007_00005' direct represents '7' with '5832'
5829 -5831 5832 0
-5832 5831 0
-5832 -5829 0
c Var 'max_left_00004_00007_00005' order represents '8' with '5833'
-5831 5833 0
c Var 'max_left_00004_00007_00005' direct represents '8' with '5834'
5831 -5833 5834 0
-5834 5833 0
-5834 -5831 0
c Var 'max_left_00004_00007_00005' direct represents '9' with '-5833'
5820 5822 5824 5826 5828 5830 5832 5834 -5833 0
c Encoding variable: max_left_00004_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00006' order represents '1' with '5835'
c Var 'max_left_00004_00007_00006' direct represents '1' with '5835'
c Var 'max_left_00004_00007_00006' order represents '2' with '5836'
-5835 5836 0
c Var 'max_left_00004_00007_00006' direct represents '2' with '5837'
5835 -5836 5837 0
-5837 5836 0
-5837 -5835 0
c Var 'max_left_00004_00007_00006' order represents '3' with '5838'
-5836 5838 0
c Var 'max_left_00004_00007_00006' direct represents '3' with '5839'
5836 -5838 5839 0
-5839 5838 0
-5839 -5836 0
c Var 'max_left_00004_00007_00006' order represents '4' with '5840'
-5838 5840 0
c Var 'max_left_00004_00007_00006' direct represents '4' with '5841'
5838 -5840 5841 0
-5841 5840 0
-5841 -5838 0
c Var 'max_left_00004_00007_00006' order represents '5' with '5842'
-5840 5842 0
c Var 'max_left_00004_00007_00006' direct represents '5' with '5843'
5840 -5842 5843 0
-5843 5842 0
-5843 -5840 0
c Var 'max_left_00004_00007_00006' order represents '6' with '5844'
-5842 5844 0
c Var 'max_left_00004_00007_00006' direct represents '6' with '5845'
5842 -5844 5845 0
-5845 5844 0
-5845 -5842 0
c Var 'max_left_00004_00007_00006' order represents '7' with '5846'
-5844 5846 0
c Var 'max_left_00004_00007_00006' direct represents '7' with '5847'
5844 -5846 5847 0
-5847 5846 0
-5847 -5844 0
c Var 'max_left_00004_00007_00006' order represents '8' with '5848'
-5846 5848 0
c Var 'max_left_00004_00007_00006' direct represents '8' with '5849'
5846 -5848 5849 0
-5849 5848 0
-5849 -5846 0
c Var 'max_left_00004_00007_00006' direct represents '9' with '-5848'
5835 5837 5839 5841 5843 5845 5847 5849 -5848 0
c Encoding variable: max_left_00004_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00007' order represents '1' with '5850'
c Var 'max_left_00004_00007_00007' direct represents '1' with '5850'
c Var 'max_left_00004_00007_00007' order represents '2' with '5851'
-5850 5851 0
c Var 'max_left_00004_00007_00007' direct represents '2' with '5852'
5850 -5851 5852 0
-5852 5851 0
-5852 -5850 0
c Var 'max_left_00004_00007_00007' order represents '3' with '5853'
-5851 5853 0
c Var 'max_left_00004_00007_00007' direct represents '3' with '5854'
5851 -5853 5854 0
-5854 5853 0
-5854 -5851 0
c Var 'max_left_00004_00007_00007' order represents '4' with '5855'
-5853 5855 0
c Var 'max_left_00004_00007_00007' direct represents '4' with '5856'
5853 -5855 5856 0
-5856 5855 0
-5856 -5853 0
c Var 'max_left_00004_00007_00007' order represents '5' with '5857'
-5855 5857 0
c Var 'max_left_00004_00007_00007' direct represents '5' with '5858'
5855 -5857 5858 0
-5858 5857 0
-5858 -5855 0
c Var 'max_left_00004_00007_00007' order represents '6' with '5859'
-5857 5859 0
c Var 'max_left_00004_00007_00007' direct represents '6' with '5860'
5857 -5859 5860 0
-5860 5859 0
-5860 -5857 0
c Var 'max_left_00004_00007_00007' order represents '7' with '5861'
-5859 5861 0
c Var 'max_left_00004_00007_00007' direct represents '7' with '5862'
5859 -5861 5862 0
-5862 5861 0
-5862 -5859 0
c Var 'max_left_00004_00007_00007' order represents '8' with '5863'
-5861 5863 0
c Var 'max_left_00004_00007_00007' direct represents '8' with '5864'
5861 -5863 5864 0
-5864 5863 0
-5864 -5861 0
c Var 'max_left_00004_00007_00007' direct represents '9' with '-5863'
5850 5852 5854 5856 5858 5860 5862 5864 -5863 0
c Encoding variable: max_left_00004_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00008' order represents '1' with '5865'
c Var 'max_left_00004_00007_00008' direct represents '1' with '5865'
c Var 'max_left_00004_00007_00008' order represents '2' with '5866'
-5865 5866 0
c Var 'max_left_00004_00007_00008' direct represents '2' with '5867'
5865 -5866 5867 0
-5867 5866 0
-5867 -5865 0
c Var 'max_left_00004_00007_00008' order represents '3' with '5868'
-5866 5868 0
c Var 'max_left_00004_00007_00008' direct represents '3' with '5869'
5866 -5868 5869 0
-5869 5868 0
-5869 -5866 0
c Var 'max_left_00004_00007_00008' order represents '4' with '5870'
-5868 5870 0
c Var 'max_left_00004_00007_00008' direct represents '4' with '5871'
5868 -5870 5871 0
-5871 5870 0
-5871 -5868 0
c Var 'max_left_00004_00007_00008' order represents '5' with '5872'
-5870 5872 0
c Var 'max_left_00004_00007_00008' direct represents '5' with '5873'
5870 -5872 5873 0
-5873 5872 0
-5873 -5870 0
c Var 'max_left_00004_00007_00008' order represents '6' with '5874'
-5872 5874 0
c Var 'max_left_00004_00007_00008' direct represents '6' with '5875'
5872 -5874 5875 0
-5875 5874 0
-5875 -5872 0
c Var 'max_left_00004_00007_00008' order represents '7' with '5876'
-5874 5876 0
c Var 'max_left_00004_00007_00008' direct represents '7' with '5877'
5874 -5876 5877 0
-5877 5876 0
-5877 -5874 0
c Var 'max_left_00004_00007_00008' order represents '8' with '5878'
-5876 5878 0
c Var 'max_left_00004_00007_00008' direct represents '8' with '5879'
5876 -5878 5879 0
-5879 5878 0
-5879 -5876 0
c Var 'max_left_00004_00007_00008' direct represents '9' with '-5878'
5865 5867 5869 5871 5873 5875 5877 5879 -5878 0
c Encoding variable: max_left_00004_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00007_00009' order represents '1' with '5880'
c Var 'max_left_00004_00007_00009' direct represents '1' with '5880'
c Var 'max_left_00004_00007_00009' order represents '2' with '5881'
-5880 5881 0
c Var 'max_left_00004_00007_00009' direct represents '2' with '5882'
5880 -5881 5882 0
-5882 5881 0
-5882 -5880 0
c Var 'max_left_00004_00007_00009' order represents '3' with '5883'
-5881 5883 0
c Var 'max_left_00004_00007_00009' direct represents '3' with '5884'
5881 -5883 5884 0
-5884 5883 0
-5884 -5881 0
c Var 'max_left_00004_00007_00009' order represents '4' with '5885'
-5883 5885 0
c Var 'max_left_00004_00007_00009' direct represents '4' with '5886'
5883 -5885 5886 0
-5886 5885 0
-5886 -5883 0
c Var 'max_left_00004_00007_00009' order represents '5' with '5887'
-5885 5887 0
c Var 'max_left_00004_00007_00009' direct represents '5' with '5888'
5885 -5887 5888 0
-5888 5887 0
-5888 -5885 0
c Var 'max_left_00004_00007_00009' order represents '6' with '5889'
-5887 5889 0
c Var 'max_left_00004_00007_00009' direct represents '6' with '5890'
5887 -5889 5890 0
-5890 5889 0
-5890 -5887 0
c Var 'max_left_00004_00007_00009' order represents '7' with '5891'
-5889 5891 0
c Var 'max_left_00004_00007_00009' direct represents '7' with '5892'
5889 -5891 5892 0
-5892 5891 0
-5892 -5889 0
c Var 'max_left_00004_00007_00009' order represents '8' with '5893'
-5891 5893 0
c Var 'max_left_00004_00007_00009' direct represents '8' with '5894'
5891 -5893 5894 0
-5894 5893 0
-5894 -5891 0
c Var 'max_left_00004_00007_00009' direct represents '9' with '-5893'
5880 5882 5884 5886 5888 5890 5892 5894 -5893 0
c Encoding variable: max_left_00004_00008_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00008_00000' direct represents '0' with '5895'
5895 0
c Encoding variable: max_left_00004_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00001' order represents '1' with '5896'
c Var 'max_left_00004_00008_00001' direct represents '1' with '5896'
c Var 'max_left_00004_00008_00001' order represents '2' with '5897'
-5896 5897 0
c Var 'max_left_00004_00008_00001' direct represents '2' with '5898'
5896 -5897 5898 0
-5898 5897 0
-5898 -5896 0
c Var 'max_left_00004_00008_00001' order represents '3' with '5899'
-5897 5899 0
c Var 'max_left_00004_00008_00001' direct represents '3' with '5900'
5897 -5899 5900 0
-5900 5899 0
-5900 -5897 0
c Var 'max_left_00004_00008_00001' order represents '4' with '5901'
-5899 5901 0
c Var 'max_left_00004_00008_00001' direct represents '4' with '5902'
5899 -5901 5902 0
-5902 5901 0
-5902 -5899 0
c Var 'max_left_00004_00008_00001' order represents '5' with '5903'
-5901 5903 0
c Var 'max_left_00004_00008_00001' direct represents '5' with '5904'
5901 -5903 5904 0
-5904 5903 0
-5904 -5901 0
c Var 'max_left_00004_00008_00001' order represents '6' with '5905'
-5903 5905 0
c Var 'max_left_00004_00008_00001' direct represents '6' with '5906'
5903 -5905 5906 0
-5906 5905 0
-5906 -5903 0
c Var 'max_left_00004_00008_00001' order represents '7' with '5907'
-5905 5907 0
c Var 'max_left_00004_00008_00001' direct represents '7' with '5908'
5905 -5907 5908 0
-5908 5907 0
-5908 -5905 0
c Var 'max_left_00004_00008_00001' order represents '8' with '5909'
-5907 5909 0
c Var 'max_left_00004_00008_00001' direct represents '8' with '5910'
5907 -5909 5910 0
-5910 5909 0
-5910 -5907 0
c Var 'max_left_00004_00008_00001' direct represents '9' with '-5909'
5896 5898 5900 5902 5904 5906 5908 5910 -5909 0
c Encoding variable: max_left_00004_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00002' order represents '1' with '5911'
c Var 'max_left_00004_00008_00002' direct represents '1' with '5911'
c Var 'max_left_00004_00008_00002' order represents '2' with '5912'
-5911 5912 0
c Var 'max_left_00004_00008_00002' direct represents '2' with '5913'
5911 -5912 5913 0
-5913 5912 0
-5913 -5911 0
c Var 'max_left_00004_00008_00002' order represents '3' with '5914'
-5912 5914 0
c Var 'max_left_00004_00008_00002' direct represents '3' with '5915'
5912 -5914 5915 0
-5915 5914 0
-5915 -5912 0
c Var 'max_left_00004_00008_00002' order represents '4' with '5916'
-5914 5916 0
c Var 'max_left_00004_00008_00002' direct represents '4' with '5917'
5914 -5916 5917 0
-5917 5916 0
-5917 -5914 0
c Var 'max_left_00004_00008_00002' order represents '5' with '5918'
-5916 5918 0
c Var 'max_left_00004_00008_00002' direct represents '5' with '5919'
5916 -5918 5919 0
-5919 5918 0
-5919 -5916 0
c Var 'max_left_00004_00008_00002' order represents '6' with '5920'
-5918 5920 0
c Var 'max_left_00004_00008_00002' direct represents '6' with '5921'
5918 -5920 5921 0
-5921 5920 0
-5921 -5918 0
c Var 'max_left_00004_00008_00002' order represents '7' with '5922'
-5920 5922 0
c Var 'max_left_00004_00008_00002' direct represents '7' with '5923'
5920 -5922 5923 0
-5923 5922 0
-5923 -5920 0
c Var 'max_left_00004_00008_00002' order represents '8' with '5924'
-5922 5924 0
c Var 'max_left_00004_00008_00002' direct represents '8' with '5925'
5922 -5924 5925 0
-5925 5924 0
-5925 -5922 0
c Var 'max_left_00004_00008_00002' direct represents '9' with '-5924'
5911 5913 5915 5917 5919 5921 5923 5925 -5924 0
c Encoding variable: max_left_00004_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00003' order represents '1' with '5926'
c Var 'max_left_00004_00008_00003' direct represents '1' with '5926'
c Var 'max_left_00004_00008_00003' order represents '2' with '5927'
-5926 5927 0
c Var 'max_left_00004_00008_00003' direct represents '2' with '5928'
5926 -5927 5928 0
-5928 5927 0
-5928 -5926 0
c Var 'max_left_00004_00008_00003' order represents '3' with '5929'
-5927 5929 0
c Var 'max_left_00004_00008_00003' direct represents '3' with '5930'
5927 -5929 5930 0
-5930 5929 0
-5930 -5927 0
c Var 'max_left_00004_00008_00003' order represents '4' with '5931'
-5929 5931 0
c Var 'max_left_00004_00008_00003' direct represents '4' with '5932'
5929 -5931 5932 0
-5932 5931 0
-5932 -5929 0
c Var 'max_left_00004_00008_00003' order represents '5' with '5933'
-5931 5933 0
c Var 'max_left_00004_00008_00003' direct represents '5' with '5934'
5931 -5933 5934 0
-5934 5933 0
-5934 -5931 0
c Var 'max_left_00004_00008_00003' order represents '6' with '5935'
-5933 5935 0
c Var 'max_left_00004_00008_00003' direct represents '6' with '5936'
5933 -5935 5936 0
-5936 5935 0
-5936 -5933 0
c Var 'max_left_00004_00008_00003' order represents '7' with '5937'
-5935 5937 0
c Var 'max_left_00004_00008_00003' direct represents '7' with '5938'
5935 -5937 5938 0
-5938 5937 0
-5938 -5935 0
c Var 'max_left_00004_00008_00003' order represents '8' with '5939'
-5937 5939 0
c Var 'max_left_00004_00008_00003' direct represents '8' with '5940'
5937 -5939 5940 0
-5940 5939 0
-5940 -5937 0
c Var 'max_left_00004_00008_00003' direct represents '9' with '-5939'
5926 5928 5930 5932 5934 5936 5938 5940 -5939 0
c Encoding variable: max_left_00004_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00004' order represents '1' with '5941'
c Var 'max_left_00004_00008_00004' direct represents '1' with '5941'
c Var 'max_left_00004_00008_00004' order represents '2' with '5942'
-5941 5942 0
c Var 'max_left_00004_00008_00004' direct represents '2' with '5943'
5941 -5942 5943 0
-5943 5942 0
-5943 -5941 0
c Var 'max_left_00004_00008_00004' order represents '3' with '5944'
-5942 5944 0
c Var 'max_left_00004_00008_00004' direct represents '3' with '5945'
5942 -5944 5945 0
-5945 5944 0
-5945 -5942 0
c Var 'max_left_00004_00008_00004' order represents '4' with '5946'
-5944 5946 0
c Var 'max_left_00004_00008_00004' direct represents '4' with '5947'
5944 -5946 5947 0
-5947 5946 0
-5947 -5944 0
c Var 'max_left_00004_00008_00004' order represents '5' with '5948'
-5946 5948 0
c Var 'max_left_00004_00008_00004' direct represents '5' with '5949'
5946 -5948 5949 0
-5949 5948 0
-5949 -5946 0
c Var 'max_left_00004_00008_00004' order represents '6' with '5950'
-5948 5950 0
c Var 'max_left_00004_00008_00004' direct represents '6' with '5951'
5948 -5950 5951 0
-5951 5950 0
-5951 -5948 0
c Var 'max_left_00004_00008_00004' order represents '7' with '5952'
-5950 5952 0
c Var 'max_left_00004_00008_00004' direct represents '7' with '5953'
5950 -5952 5953 0
-5953 5952 0
-5953 -5950 0
c Var 'max_left_00004_00008_00004' order represents '8' with '5954'
-5952 5954 0
c Var 'max_left_00004_00008_00004' direct represents '8' with '5955'
5952 -5954 5955 0
-5955 5954 0
-5955 -5952 0
c Var 'max_left_00004_00008_00004' direct represents '9' with '-5954'
5941 5943 5945 5947 5949 5951 5953 5955 -5954 0
c Encoding variable: max_left_00004_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00005' order represents '1' with '5956'
c Var 'max_left_00004_00008_00005' direct represents '1' with '5956'
c Var 'max_left_00004_00008_00005' order represents '2' with '5957'
-5956 5957 0
c Var 'max_left_00004_00008_00005' direct represents '2' with '5958'
5956 -5957 5958 0
-5958 5957 0
-5958 -5956 0
c Var 'max_left_00004_00008_00005' order represents '3' with '5959'
-5957 5959 0
c Var 'max_left_00004_00008_00005' direct represents '3' with '5960'
5957 -5959 5960 0
-5960 5959 0
-5960 -5957 0
c Var 'max_left_00004_00008_00005' order represents '4' with '5961'
-5959 5961 0
c Var 'max_left_00004_00008_00005' direct represents '4' with '5962'
5959 -5961 5962 0
-5962 5961 0
-5962 -5959 0
c Var 'max_left_00004_00008_00005' order represents '5' with '5963'
-5961 5963 0
c Var 'max_left_00004_00008_00005' direct represents '5' with '5964'
5961 -5963 5964 0
-5964 5963 0
-5964 -5961 0
c Var 'max_left_00004_00008_00005' order represents '6' with '5965'
-5963 5965 0
c Var 'max_left_00004_00008_00005' direct represents '6' with '5966'
5963 -5965 5966 0
-5966 5965 0
-5966 -5963 0
c Var 'max_left_00004_00008_00005' order represents '7' with '5967'
-5965 5967 0
c Var 'max_left_00004_00008_00005' direct represents '7' with '5968'
5965 -5967 5968 0
-5968 5967 0
-5968 -5965 0
c Var 'max_left_00004_00008_00005' order represents '8' with '5969'
-5967 5969 0
c Var 'max_left_00004_00008_00005' direct represents '8' with '5970'
5967 -5969 5970 0
-5970 5969 0
-5970 -5967 0
c Var 'max_left_00004_00008_00005' direct represents '9' with '-5969'
5956 5958 5960 5962 5964 5966 5968 5970 -5969 0
c Encoding variable: max_left_00004_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00006' order represents '1' with '5971'
c Var 'max_left_00004_00008_00006' direct represents '1' with '5971'
c Var 'max_left_00004_00008_00006' order represents '2' with '5972'
-5971 5972 0
c Var 'max_left_00004_00008_00006' direct represents '2' with '5973'
5971 -5972 5973 0
-5973 5972 0
-5973 -5971 0
c Var 'max_left_00004_00008_00006' order represents '3' with '5974'
-5972 5974 0
c Var 'max_left_00004_00008_00006' direct represents '3' with '5975'
5972 -5974 5975 0
-5975 5974 0
-5975 -5972 0
c Var 'max_left_00004_00008_00006' order represents '4' with '5976'
-5974 5976 0
c Var 'max_left_00004_00008_00006' direct represents '4' with '5977'
5974 -5976 5977 0
-5977 5976 0
-5977 -5974 0
c Var 'max_left_00004_00008_00006' order represents '5' with '5978'
-5976 5978 0
c Var 'max_left_00004_00008_00006' direct represents '5' with '5979'
5976 -5978 5979 0
-5979 5978 0
-5979 -5976 0
c Var 'max_left_00004_00008_00006' order represents '6' with '5980'
-5978 5980 0
c Var 'max_left_00004_00008_00006' direct represents '6' with '5981'
5978 -5980 5981 0
-5981 5980 0
-5981 -5978 0
c Var 'max_left_00004_00008_00006' order represents '7' with '5982'
-5980 5982 0
c Var 'max_left_00004_00008_00006' direct represents '7' with '5983'
5980 -5982 5983 0
-5983 5982 0
-5983 -5980 0
c Var 'max_left_00004_00008_00006' order represents '8' with '5984'
-5982 5984 0
c Var 'max_left_00004_00008_00006' direct represents '8' with '5985'
5982 -5984 5985 0
-5985 5984 0
-5985 -5982 0
c Var 'max_left_00004_00008_00006' direct represents '9' with '-5984'
5971 5973 5975 5977 5979 5981 5983 5985 -5984 0
c Encoding variable: max_left_00004_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00007' order represents '1' with '5986'
c Var 'max_left_00004_00008_00007' direct represents '1' with '5986'
c Var 'max_left_00004_00008_00007' order represents '2' with '5987'
-5986 5987 0
c Var 'max_left_00004_00008_00007' direct represents '2' with '5988'
5986 -5987 5988 0
-5988 5987 0
-5988 -5986 0
c Var 'max_left_00004_00008_00007' order represents '3' with '5989'
-5987 5989 0
c Var 'max_left_00004_00008_00007' direct represents '3' with '5990'
5987 -5989 5990 0
-5990 5989 0
-5990 -5987 0
c Var 'max_left_00004_00008_00007' order represents '4' with '5991'
-5989 5991 0
c Var 'max_left_00004_00008_00007' direct represents '4' with '5992'
5989 -5991 5992 0
-5992 5991 0
-5992 -5989 0
c Var 'max_left_00004_00008_00007' order represents '5' with '5993'
-5991 5993 0
c Var 'max_left_00004_00008_00007' direct represents '5' with '5994'
5991 -5993 5994 0
-5994 5993 0
-5994 -5991 0
c Var 'max_left_00004_00008_00007' order represents '6' with '5995'
-5993 5995 0
c Var 'max_left_00004_00008_00007' direct represents '6' with '5996'
5993 -5995 5996 0
-5996 5995 0
-5996 -5993 0
c Var 'max_left_00004_00008_00007' order represents '7' with '5997'
-5995 5997 0
c Var 'max_left_00004_00008_00007' direct represents '7' with '5998'
5995 -5997 5998 0
-5998 5997 0
-5998 -5995 0
c Var 'max_left_00004_00008_00007' order represents '8' with '5999'
-5997 5999 0
c Var 'max_left_00004_00008_00007' direct represents '8' with '6000'
5997 -5999 6000 0
-6000 5999 0
-6000 -5997 0
c Var 'max_left_00004_00008_00007' direct represents '9' with '-5999'
5986 5988 5990 5992 5994 5996 5998 6000 -5999 0
c Encoding variable: max_left_00004_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00008' order represents '1' with '6001'
c Var 'max_left_00004_00008_00008' direct represents '1' with '6001'
c Var 'max_left_00004_00008_00008' order represents '2' with '6002'
-6001 6002 0
c Var 'max_left_00004_00008_00008' direct represents '2' with '6003'
6001 -6002 6003 0
-6003 6002 0
-6003 -6001 0
c Var 'max_left_00004_00008_00008' order represents '3' with '6004'
-6002 6004 0
c Var 'max_left_00004_00008_00008' direct represents '3' with '6005'
6002 -6004 6005 0
-6005 6004 0
-6005 -6002 0
c Var 'max_left_00004_00008_00008' order represents '4' with '6006'
-6004 6006 0
c Var 'max_left_00004_00008_00008' direct represents '4' with '6007'
6004 -6006 6007 0
-6007 6006 0
-6007 -6004 0
c Var 'max_left_00004_00008_00008' order represents '5' with '6008'
-6006 6008 0
c Var 'max_left_00004_00008_00008' direct represents '5' with '6009'
6006 -6008 6009 0
-6009 6008 0
-6009 -6006 0
c Var 'max_left_00004_00008_00008' order represents '6' with '6010'
-6008 6010 0
c Var 'max_left_00004_00008_00008' direct represents '6' with '6011'
6008 -6010 6011 0
-6011 6010 0
-6011 -6008 0
c Var 'max_left_00004_00008_00008' order represents '7' with '6012'
-6010 6012 0
c Var 'max_left_00004_00008_00008' direct represents '7' with '6013'
6010 -6012 6013 0
-6013 6012 0
-6013 -6010 0
c Var 'max_left_00004_00008_00008' order represents '8' with '6014'
-6012 6014 0
c Var 'max_left_00004_00008_00008' direct represents '8' with '6015'
6012 -6014 6015 0
-6015 6014 0
-6015 -6012 0
c Var 'max_left_00004_00008_00008' direct represents '9' with '-6014'
6001 6003 6005 6007 6009 6011 6013 6015 -6014 0
c Encoding variable: max_left_00004_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00008_00009' order represents '1' with '6016'
c Var 'max_left_00004_00008_00009' direct represents '1' with '6016'
c Var 'max_left_00004_00008_00009' order represents '2' with '6017'
-6016 6017 0
c Var 'max_left_00004_00008_00009' direct represents '2' with '6018'
6016 -6017 6018 0
-6018 6017 0
-6018 -6016 0
c Var 'max_left_00004_00008_00009' order represents '3' with '6019'
-6017 6019 0
c Var 'max_left_00004_00008_00009' direct represents '3' with '6020'
6017 -6019 6020 0
-6020 6019 0
-6020 -6017 0
c Var 'max_left_00004_00008_00009' order represents '4' with '6021'
-6019 6021 0
c Var 'max_left_00004_00008_00009' direct represents '4' with '6022'
6019 -6021 6022 0
-6022 6021 0
-6022 -6019 0
c Var 'max_left_00004_00008_00009' order represents '5' with '6023'
-6021 6023 0
c Var 'max_left_00004_00008_00009' direct represents '5' with '6024'
6021 -6023 6024 0
-6024 6023 0
-6024 -6021 0
c Var 'max_left_00004_00008_00009' order represents '6' with '6025'
-6023 6025 0
c Var 'max_left_00004_00008_00009' direct represents '6' with '6026'
6023 -6025 6026 0
-6026 6025 0
-6026 -6023 0
c Var 'max_left_00004_00008_00009' order represents '7' with '6027'
-6025 6027 0
c Var 'max_left_00004_00008_00009' direct represents '7' with '6028'
6025 -6027 6028 0
-6028 6027 0
-6028 -6025 0
c Var 'max_left_00004_00008_00009' order represents '8' with '6029'
-6027 6029 0
c Var 'max_left_00004_00008_00009' direct represents '8' with '6030'
6027 -6029 6030 0
-6030 6029 0
-6030 -6027 0
c Var 'max_left_00004_00008_00009' direct represents '9' with '-6029'
6016 6018 6020 6022 6024 6026 6028 6030 -6029 0
c Encoding variable: max_left_00004_00009_00000 with domain: int(0) (representing constraint )
c Var 'max_left_00004_00009_00000' direct represents '0' with '6031'
6031 0
c Encoding variable: max_left_00004_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00001' order represents '1' with '6032'
c Var 'max_left_00004_00009_00001' direct represents '1' with '6032'
c Var 'max_left_00004_00009_00001' order represents '2' with '6033'
-6032 6033 0
c Var 'max_left_00004_00009_00001' direct represents '2' with '6034'
6032 -6033 6034 0
-6034 6033 0
-6034 -6032 0
c Var 'max_left_00004_00009_00001' order represents '3' with '6035'
-6033 6035 0
c Var 'max_left_00004_00009_00001' direct represents '3' with '6036'
6033 -6035 6036 0
-6036 6035 0
-6036 -6033 0
c Var 'max_left_00004_00009_00001' order represents '4' with '6037'
-6035 6037 0
c Var 'max_left_00004_00009_00001' direct represents '4' with '6038'
6035 -6037 6038 0
-6038 6037 0
-6038 -6035 0
c Var 'max_left_00004_00009_00001' order represents '5' with '6039'
-6037 6039 0
c Var 'max_left_00004_00009_00001' direct represents '5' with '6040'
6037 -6039 6040 0
-6040 6039 0
-6040 -6037 0
c Var 'max_left_00004_00009_00001' order represents '6' with '6041'
-6039 6041 0
c Var 'max_left_00004_00009_00001' direct represents '6' with '6042'
6039 -6041 6042 0
-6042 6041 0
-6042 -6039 0
c Var 'max_left_00004_00009_00001' order represents '7' with '6043'
-6041 6043 0
c Var 'max_left_00004_00009_00001' direct represents '7' with '6044'
6041 -6043 6044 0
-6044 6043 0
-6044 -6041 0
c Var 'max_left_00004_00009_00001' order represents '8' with '6045'
-6043 6045 0
c Var 'max_left_00004_00009_00001' direct represents '8' with '6046'
6043 -6045 6046 0
-6046 6045 0
-6046 -6043 0
c Var 'max_left_00004_00009_00001' direct represents '9' with '-6045'
6032 6034 6036 6038 6040 6042 6044 6046 -6045 0
c Encoding variable: max_left_00004_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00002' order represents '1' with '6047'
c Var 'max_left_00004_00009_00002' direct represents '1' with '6047'
c Var 'max_left_00004_00009_00002' order represents '2' with '6048'
-6047 6048 0
c Var 'max_left_00004_00009_00002' direct represents '2' with '6049'
6047 -6048 6049 0
-6049 6048 0
-6049 -6047 0
c Var 'max_left_00004_00009_00002' order represents '3' with '6050'
-6048 6050 0
c Var 'max_left_00004_00009_00002' direct represents '3' with '6051'
6048 -6050 6051 0
-6051 6050 0
-6051 -6048 0
c Var 'max_left_00004_00009_00002' order represents '4' with '6052'
-6050 6052 0
c Var 'max_left_00004_00009_00002' direct represents '4' with '6053'
6050 -6052 6053 0
-6053 6052 0
-6053 -6050 0
c Var 'max_left_00004_00009_00002' order represents '5' with '6054'
-6052 6054 0
c Var 'max_left_00004_00009_00002' direct represents '5' with '6055'
6052 -6054 6055 0
-6055 6054 0
-6055 -6052 0
c Var 'max_left_00004_00009_00002' order represents '6' with '6056'
-6054 6056 0
c Var 'max_left_00004_00009_00002' direct represents '6' with '6057'
6054 -6056 6057 0
-6057 6056 0
-6057 -6054 0
c Var 'max_left_00004_00009_00002' order represents '7' with '6058'
-6056 6058 0
c Var 'max_left_00004_00009_00002' direct represents '7' with '6059'
6056 -6058 6059 0
-6059 6058 0
-6059 -6056 0
c Var 'max_left_00004_00009_00002' order represents '8' with '6060'
-6058 6060 0
c Var 'max_left_00004_00009_00002' direct represents '8' with '6061'
6058 -6060 6061 0
-6061 6060 0
-6061 -6058 0
c Var 'max_left_00004_00009_00002' direct represents '9' with '-6060'
6047 6049 6051 6053 6055 6057 6059 6061 -6060 0
c Encoding variable: max_left_00004_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00003' order represents '1' with '6062'
c Var 'max_left_00004_00009_00003' direct represents '1' with '6062'
c Var 'max_left_00004_00009_00003' order represents '2' with '6063'
-6062 6063 0
c Var 'max_left_00004_00009_00003' direct represents '2' with '6064'
6062 -6063 6064 0
-6064 6063 0
-6064 -6062 0
c Var 'max_left_00004_00009_00003' order represents '3' with '6065'
-6063 6065 0
c Var 'max_left_00004_00009_00003' direct represents '3' with '6066'
6063 -6065 6066 0
-6066 6065 0
-6066 -6063 0
c Var 'max_left_00004_00009_00003' order represents '4' with '6067'
-6065 6067 0
c Var 'max_left_00004_00009_00003' direct represents '4' with '6068'
6065 -6067 6068 0
-6068 6067 0
-6068 -6065 0
c Var 'max_left_00004_00009_00003' order represents '5' with '6069'
-6067 6069 0
c Var 'max_left_00004_00009_00003' direct represents '5' with '6070'
6067 -6069 6070 0
-6070 6069 0
-6070 -6067 0
c Var 'max_left_00004_00009_00003' order represents '6' with '6071'
-6069 6071 0
c Var 'max_left_00004_00009_00003' direct represents '6' with '6072'
6069 -6071 6072 0
-6072 6071 0
-6072 -6069 0
c Var 'max_left_00004_00009_00003' order represents '7' with '6073'
-6071 6073 0
c Var 'max_left_00004_00009_00003' direct represents '7' with '6074'
6071 -6073 6074 0
-6074 6073 0
-6074 -6071 0
c Var 'max_left_00004_00009_00003' order represents '8' with '6075'
-6073 6075 0
c Var 'max_left_00004_00009_00003' direct represents '8' with '6076'
6073 -6075 6076 0
-6076 6075 0
-6076 -6073 0
c Var 'max_left_00004_00009_00003' direct represents '9' with '-6075'
6062 6064 6066 6068 6070 6072 6074 6076 -6075 0
c Encoding variable: max_left_00004_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00004' order represents '1' with '6077'
c Var 'max_left_00004_00009_00004' direct represents '1' with '6077'
c Var 'max_left_00004_00009_00004' order represents '2' with '6078'
-6077 6078 0
c Var 'max_left_00004_00009_00004' direct represents '2' with '6079'
6077 -6078 6079 0
-6079 6078 0
-6079 -6077 0
c Var 'max_left_00004_00009_00004' order represents '3' with '6080'
-6078 6080 0
c Var 'max_left_00004_00009_00004' direct represents '3' with '6081'
6078 -6080 6081 0
-6081 6080 0
-6081 -6078 0
c Var 'max_left_00004_00009_00004' order represents '4' with '6082'
-6080 6082 0
c Var 'max_left_00004_00009_00004' direct represents '4' with '6083'
6080 -6082 6083 0
-6083 6082 0
-6083 -6080 0
c Var 'max_left_00004_00009_00004' order represents '5' with '6084'
-6082 6084 0
c Var 'max_left_00004_00009_00004' direct represents '5' with '6085'
6082 -6084 6085 0
-6085 6084 0
-6085 -6082 0
c Var 'max_left_00004_00009_00004' order represents '6' with '6086'
-6084 6086 0
c Var 'max_left_00004_00009_00004' direct represents '6' with '6087'
6084 -6086 6087 0
-6087 6086 0
-6087 -6084 0
c Var 'max_left_00004_00009_00004' order represents '7' with '6088'
-6086 6088 0
c Var 'max_left_00004_00009_00004' direct represents '7' with '6089'
6086 -6088 6089 0
-6089 6088 0
-6089 -6086 0
c Var 'max_left_00004_00009_00004' order represents '8' with '6090'
-6088 6090 0
c Var 'max_left_00004_00009_00004' direct represents '8' with '6091'
6088 -6090 6091 0
-6091 6090 0
-6091 -6088 0
c Var 'max_left_00004_00009_00004' direct represents '9' with '-6090'
6077 6079 6081 6083 6085 6087 6089 6091 -6090 0
c Encoding variable: max_left_00004_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00005' order represents '1' with '6092'
c Var 'max_left_00004_00009_00005' direct represents '1' with '6092'
c Var 'max_left_00004_00009_00005' order represents '2' with '6093'
-6092 6093 0
c Var 'max_left_00004_00009_00005' direct represents '2' with '6094'
6092 -6093 6094 0
-6094 6093 0
-6094 -6092 0
c Var 'max_left_00004_00009_00005' order represents '3' with '6095'
-6093 6095 0
c Var 'max_left_00004_00009_00005' direct represents '3' with '6096'
6093 -6095 6096 0
-6096 6095 0
-6096 -6093 0
c Var 'max_left_00004_00009_00005' order represents '4' with '6097'
-6095 6097 0
c Var 'max_left_00004_00009_00005' direct represents '4' with '6098'
6095 -6097 6098 0
-6098 6097 0
-6098 -6095 0
c Var 'max_left_00004_00009_00005' order represents '5' with '6099'
-6097 6099 0
c Var 'max_left_00004_00009_00005' direct represents '5' with '6100'
6097 -6099 6100 0
-6100 6099 0
-6100 -6097 0
c Var 'max_left_00004_00009_00005' order represents '6' with '6101'
-6099 6101 0
c Var 'max_left_00004_00009_00005' direct represents '6' with '6102'
6099 -6101 6102 0
-6102 6101 0
-6102 -6099 0
c Var 'max_left_00004_00009_00005' order represents '7' with '6103'
-6101 6103 0
c Var 'max_left_00004_00009_00005' direct represents '7' with '6104'
6101 -6103 6104 0
-6104 6103 0
-6104 -6101 0
c Var 'max_left_00004_00009_00005' order represents '8' with '6105'
-6103 6105 0
c Var 'max_left_00004_00009_00005' direct represents '8' with '6106'
6103 -6105 6106 0
-6106 6105 0
-6106 -6103 0
c Var 'max_left_00004_00009_00005' direct represents '9' with '-6105'
6092 6094 6096 6098 6100 6102 6104 6106 -6105 0
c Encoding variable: max_left_00004_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00006' order represents '1' with '6107'
c Var 'max_left_00004_00009_00006' direct represents '1' with '6107'
c Var 'max_left_00004_00009_00006' order represents '2' with '6108'
-6107 6108 0
c Var 'max_left_00004_00009_00006' direct represents '2' with '6109'
6107 -6108 6109 0
-6109 6108 0
-6109 -6107 0
c Var 'max_left_00004_00009_00006' order represents '3' with '6110'
-6108 6110 0
c Var 'max_left_00004_00009_00006' direct represents '3' with '6111'
6108 -6110 6111 0
-6111 6110 0
-6111 -6108 0
c Var 'max_left_00004_00009_00006' order represents '4' with '6112'
-6110 6112 0
c Var 'max_left_00004_00009_00006' direct represents '4' with '6113'
6110 -6112 6113 0
-6113 6112 0
-6113 -6110 0
c Var 'max_left_00004_00009_00006' order represents '5' with '6114'
-6112 6114 0
c Var 'max_left_00004_00009_00006' direct represents '5' with '6115'
6112 -6114 6115 0
-6115 6114 0
-6115 -6112 0
c Var 'max_left_00004_00009_00006' order represents '6' with '6116'
-6114 6116 0
c Var 'max_left_00004_00009_00006' direct represents '6' with '6117'
6114 -6116 6117 0
-6117 6116 0
-6117 -6114 0
c Var 'max_left_00004_00009_00006' order represents '7' with '6118'
-6116 6118 0
c Var 'max_left_00004_00009_00006' direct represents '7' with '6119'
6116 -6118 6119 0
-6119 6118 0
-6119 -6116 0
c Var 'max_left_00004_00009_00006' order represents '8' with '6120'
-6118 6120 0
c Var 'max_left_00004_00009_00006' direct represents '8' with '6121'
6118 -6120 6121 0
-6121 6120 0
-6121 -6118 0
c Var 'max_left_00004_00009_00006' direct represents '9' with '-6120'
6107 6109 6111 6113 6115 6117 6119 6121 -6120 0
c Encoding variable: max_left_00004_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00007' order represents '1' with '6122'
c Var 'max_left_00004_00009_00007' direct represents '1' with '6122'
c Var 'max_left_00004_00009_00007' order represents '2' with '6123'
-6122 6123 0
c Var 'max_left_00004_00009_00007' direct represents '2' with '6124'
6122 -6123 6124 0
-6124 6123 0
-6124 -6122 0
c Var 'max_left_00004_00009_00007' order represents '3' with '6125'
-6123 6125 0
c Var 'max_left_00004_00009_00007' direct represents '3' with '6126'
6123 -6125 6126 0
-6126 6125 0
-6126 -6123 0
c Var 'max_left_00004_00009_00007' order represents '4' with '6127'
-6125 6127 0
c Var 'max_left_00004_00009_00007' direct represents '4' with '6128'
6125 -6127 6128 0
-6128 6127 0
-6128 -6125 0
c Var 'max_left_00004_00009_00007' order represents '5' with '6129'
-6127 6129 0
c Var 'max_left_00004_00009_00007' direct represents '5' with '6130'
6127 -6129 6130 0
-6130 6129 0
-6130 -6127 0
c Var 'max_left_00004_00009_00007' order represents '6' with '6131'
-6129 6131 0
c Var 'max_left_00004_00009_00007' direct represents '6' with '6132'
6129 -6131 6132 0
-6132 6131 0
-6132 -6129 0
c Var 'max_left_00004_00009_00007' order represents '7' with '6133'
-6131 6133 0
c Var 'max_left_00004_00009_00007' direct represents '7' with '6134'
6131 -6133 6134 0
-6134 6133 0
-6134 -6131 0
c Var 'max_left_00004_00009_00007' order represents '8' with '6135'
-6133 6135 0
c Var 'max_left_00004_00009_00007' direct represents '8' with '6136'
6133 -6135 6136 0
-6136 6135 0
-6136 -6133 0
c Var 'max_left_00004_00009_00007' direct represents '9' with '-6135'
6122 6124 6126 6128 6130 6132 6134 6136 -6135 0
c Encoding variable: max_left_00004_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00008' order represents '1' with '6137'
c Var 'max_left_00004_00009_00008' direct represents '1' with '6137'
c Var 'max_left_00004_00009_00008' order represents '2' with '6138'
-6137 6138 0
c Var 'max_left_00004_00009_00008' direct represents '2' with '6139'
6137 -6138 6139 0
-6139 6138 0
-6139 -6137 0
c Var 'max_left_00004_00009_00008' order represents '3' with '6140'
-6138 6140 0
c Var 'max_left_00004_00009_00008' direct represents '3' with '6141'
6138 -6140 6141 0
-6141 6140 0
-6141 -6138 0
c Var 'max_left_00004_00009_00008' order represents '4' with '6142'
-6140 6142 0
c Var 'max_left_00004_00009_00008' direct represents '4' with '6143'
6140 -6142 6143 0
-6143 6142 0
-6143 -6140 0
c Var 'max_left_00004_00009_00008' order represents '5' with '6144'
-6142 6144 0
c Var 'max_left_00004_00009_00008' direct represents '5' with '6145'
6142 -6144 6145 0
-6145 6144 0
-6145 -6142 0
c Var 'max_left_00004_00009_00008' order represents '6' with '6146'
-6144 6146 0
c Var 'max_left_00004_00009_00008' direct represents '6' with '6147'
6144 -6146 6147 0
-6147 6146 0
-6147 -6144 0
c Var 'max_left_00004_00009_00008' order represents '7' with '6148'
-6146 6148 0
c Var 'max_left_00004_00009_00008' direct represents '7' with '6149'
6146 -6148 6149 0
-6149 6148 0
-6149 -6146 0
c Var 'max_left_00004_00009_00008' order represents '8' with '6150'
-6148 6150 0
c Var 'max_left_00004_00009_00008' direct represents '8' with '6151'
6148 -6150 6151 0
-6151 6150 0
-6151 -6148 0
c Var 'max_left_00004_00009_00008' direct represents '9' with '-6150'
6137 6139 6141 6143 6145 6147 6149 6151 -6150 0
c Encoding variable: max_left_00004_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'max_left_00004_00009_00009' order represents '1' with '6152'
c Var 'max_left_00004_00009_00009' direct represents '1' with '6152'
c Var 'max_left_00004_00009_00009' order represents '2' with '6153'
-6152 6153 0
c Var 'max_left_00004_00009_00009' direct represents '2' with '6154'
6152 -6153 6154 0
-6154 6153 0
-6154 -6152 0
c Var 'max_left_00004_00009_00009' order represents '3' with '6155'
-6153 6155 0
c Var 'max_left_00004_00009_00009' direct represents '3' with '6156'
6153 -6155 6156 0
-6156 6155 0
-6156 -6153 0
c Var 'max_left_00004_00009_00009' order represents '4' with '6157'
-6155 6157 0
c Var 'max_left_00004_00009_00009' direct represents '4' with '6158'
6155 -6157 6158 0
-6158 6157 0
-6158 -6155 0
c Var 'max_left_00004_00009_00009' order represents '5' with '6159'
-6157 6159 0
c Var 'max_left_00004_00009_00009' direct represents '5' with '6160'
6157 -6159 6160 0
-6160 6159 0
-6160 -6157 0
c Var 'max_left_00004_00009_00009' order represents '6' with '6161'
-6159 6161 0
c Var 'max_left_00004_00009_00009' direct represents '6' with '6162'
6159 -6161 6162 0
-6162 6161 0
-6162 -6159 0
c Var 'max_left_00004_00009_00009' order represents '7' with '6163'
-6161 6163 0
c Var 'max_left_00004_00009_00009' direct represents '7' with '6164'
6161 -6163 6164 0
-6164 6163 0
-6164 -6161 0
c Var 'max_left_00004_00009_00009' order represents '8' with '6165'
-6163 6165 0
c Var 'max_left_00004_00009_00009' direct represents '8' with '6166'
6163 -6165 6166 0
-6166 6165 0
-6166 -6163 0
c Var 'max_left_00004_00009_00009' direct represents '9' with '-6165'
6152 6154 6156 6158 6160 6162 6164 6166 -6165 0
c Encoding variable: sky_left_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00001' order represents '1' with '6167'
c Var 'sky_left_00001_00001' direct represents '1' with '6167'
c Var 'sky_left_00001_00001' order represents '2' with '6168'
-6167 6168 0
c Var 'sky_left_00001_00001' direct represents '2' with '6169'
6167 -6168 6169 0
-6169 6168 0
-6169 -6167 0
c Var 'sky_left_00001_00001' order represents '3' with '6170'
-6168 6170 0
c Var 'sky_left_00001_00001' direct represents '3' with '6171'
6168 -6170 6171 0
-6171 6170 0
-6171 -6168 0
c Var 'sky_left_00001_00001' order represents '4' with '6172'
-6170 6172 0
c Var 'sky_left_00001_00001' direct represents '4' with '6173'
6170 -6172 6173 0
-6173 6172 0
-6173 -6170 0
c Var 'sky_left_00001_00001' order represents '5' with '6174'
-6172 6174 0
c Var 'sky_left_00001_00001' direct represents '5' with '6175'
6172 -6174 6175 0
-6175 6174 0
-6175 -6172 0
c Var 'sky_left_00001_00001' order represents '6' with '6176'
-6174 6176 0
c Var 'sky_left_00001_00001' direct represents '6' with '6177'
6174 -6176 6177 0
-6177 6176 0
-6177 -6174 0
c Var 'sky_left_00001_00001' order represents '7' with '6178'
-6176 6178 0
c Var 'sky_left_00001_00001' direct represents '7' with '6179'
6176 -6178 6179 0
-6179 6178 0
-6179 -6176 0
c Var 'sky_left_00001_00001' order represents '8' with '6180'
-6178 6180 0
c Var 'sky_left_00001_00001' direct represents '8' with '6181'
6178 -6180 6181 0
-6181 6180 0
-6181 -6178 0
c Var 'sky_left_00001_00001' direct represents '9' with '-6180'
6167 6169 6171 6173 6175 6177 6179 6181 -6180 0
c Encoding variable: sky_left_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00002' order represents '1' with '6182'
c Var 'sky_left_00001_00002' direct represents '1' with '6182'
c Var 'sky_left_00001_00002' order represents '2' with '6183'
-6182 6183 0
c Var 'sky_left_00001_00002' direct represents '2' with '6184'
6182 -6183 6184 0
-6184 6183 0
-6184 -6182 0
c Var 'sky_left_00001_00002' order represents '3' with '6185'
-6183 6185 0
c Var 'sky_left_00001_00002' direct represents '3' with '6186'
6183 -6185 6186 0
-6186 6185 0
-6186 -6183 0
c Var 'sky_left_00001_00002' order represents '4' with '6187'
-6185 6187 0
c Var 'sky_left_00001_00002' direct represents '4' with '6188'
6185 -6187 6188 0
-6188 6187 0
-6188 -6185 0
c Var 'sky_left_00001_00002' order represents '5' with '6189'
-6187 6189 0
c Var 'sky_left_00001_00002' direct represents '5' with '6190'
6187 -6189 6190 0
-6190 6189 0
-6190 -6187 0
c Var 'sky_left_00001_00002' order represents '6' with '6191'
-6189 6191 0
c Var 'sky_left_00001_00002' direct represents '6' with '6192'
6189 -6191 6192 0
-6192 6191 0
-6192 -6189 0
c Var 'sky_left_00001_00002' order represents '7' with '6193'
-6191 6193 0
c Var 'sky_left_00001_00002' direct represents '7' with '6194'
6191 -6193 6194 0
-6194 6193 0
-6194 -6191 0
c Var 'sky_left_00001_00002' order represents '8' with '6195'
-6193 6195 0
c Var 'sky_left_00001_00002' direct represents '8' with '6196'
6193 -6195 6196 0
-6196 6195 0
-6196 -6193 0
c Var 'sky_left_00001_00002' direct represents '9' with '-6195'
6182 6184 6186 6188 6190 6192 6194 6196 -6195 0
c Encoding variable: sky_left_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00003' order represents '1' with '6197'
c Var 'sky_left_00001_00003' direct represents '1' with '6197'
c Var 'sky_left_00001_00003' order represents '2' with '6198'
-6197 6198 0
c Var 'sky_left_00001_00003' direct represents '2' with '6199'
6197 -6198 6199 0
-6199 6198 0
-6199 -6197 0
c Var 'sky_left_00001_00003' order represents '3' with '6200'
-6198 6200 0
c Var 'sky_left_00001_00003' direct represents '3' with '6201'
6198 -6200 6201 0
-6201 6200 0
-6201 -6198 0
c Var 'sky_left_00001_00003' order represents '4' with '6202'
-6200 6202 0
c Var 'sky_left_00001_00003' direct represents '4' with '6203'
6200 -6202 6203 0
-6203 6202 0
-6203 -6200 0
c Var 'sky_left_00001_00003' order represents '5' with '6204'
-6202 6204 0
c Var 'sky_left_00001_00003' direct represents '5' with '6205'
6202 -6204 6205 0
-6205 6204 0
-6205 -6202 0
c Var 'sky_left_00001_00003' order represents '6' with '6206'
-6204 6206 0
c Var 'sky_left_00001_00003' direct represents '6' with '6207'
6204 -6206 6207 0
-6207 6206 0
-6207 -6204 0
c Var 'sky_left_00001_00003' order represents '7' with '6208'
-6206 6208 0
c Var 'sky_left_00001_00003' direct represents '7' with '6209'
6206 -6208 6209 0
-6209 6208 0
-6209 -6206 0
c Var 'sky_left_00001_00003' order represents '8' with '6210'
-6208 6210 0
c Var 'sky_left_00001_00003' direct represents '8' with '6211'
6208 -6210 6211 0
-6211 6210 0
-6211 -6208 0
c Var 'sky_left_00001_00003' direct represents '9' with '-6210'
6197 6199 6201 6203 6205 6207 6209 6211 -6210 0
c Encoding variable: sky_left_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00004' order represents '1' with '6212'
c Var 'sky_left_00001_00004' direct represents '1' with '6212'
c Var 'sky_left_00001_00004' order represents '2' with '6213'
-6212 6213 0
c Var 'sky_left_00001_00004' direct represents '2' with '6214'
6212 -6213 6214 0
-6214 6213 0
-6214 -6212 0
c Var 'sky_left_00001_00004' order represents '3' with '6215'
-6213 6215 0
c Var 'sky_left_00001_00004' direct represents '3' with '6216'
6213 -6215 6216 0
-6216 6215 0
-6216 -6213 0
c Var 'sky_left_00001_00004' order represents '4' with '6217'
-6215 6217 0
c Var 'sky_left_00001_00004' direct represents '4' with '6218'
6215 -6217 6218 0
-6218 6217 0
-6218 -6215 0
c Var 'sky_left_00001_00004' order represents '5' with '6219'
-6217 6219 0
c Var 'sky_left_00001_00004' direct represents '5' with '6220'
6217 -6219 6220 0
-6220 6219 0
-6220 -6217 0
c Var 'sky_left_00001_00004' order represents '6' with '6221'
-6219 6221 0
c Var 'sky_left_00001_00004' direct represents '6' with '6222'
6219 -6221 6222 0
-6222 6221 0
-6222 -6219 0
c Var 'sky_left_00001_00004' order represents '7' with '6223'
-6221 6223 0
c Var 'sky_left_00001_00004' direct represents '7' with '6224'
6221 -6223 6224 0
-6224 6223 0
-6224 -6221 0
c Var 'sky_left_00001_00004' order represents '8' with '6225'
-6223 6225 0
c Var 'sky_left_00001_00004' direct represents '8' with '6226'
6223 -6225 6226 0
-6226 6225 0
-6226 -6223 0
c Var 'sky_left_00001_00004' direct represents '9' with '-6225'
6212 6214 6216 6218 6220 6222 6224 6226 -6225 0
c Encoding variable: sky_left_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00005' order represents '1' with '6227'
c Var 'sky_left_00001_00005' direct represents '1' with '6227'
c Var 'sky_left_00001_00005' order represents '2' with '6228'
-6227 6228 0
c Var 'sky_left_00001_00005' direct represents '2' with '6229'
6227 -6228 6229 0
-6229 6228 0
-6229 -6227 0
c Var 'sky_left_00001_00005' order represents '3' with '6230'
-6228 6230 0
c Var 'sky_left_00001_00005' direct represents '3' with '6231'
6228 -6230 6231 0
-6231 6230 0
-6231 -6228 0
c Var 'sky_left_00001_00005' order represents '4' with '6232'
-6230 6232 0
c Var 'sky_left_00001_00005' direct represents '4' with '6233'
6230 -6232 6233 0
-6233 6232 0
-6233 -6230 0
c Var 'sky_left_00001_00005' order represents '5' with '6234'
-6232 6234 0
c Var 'sky_left_00001_00005' direct represents '5' with '6235'
6232 -6234 6235 0
-6235 6234 0
-6235 -6232 0
c Var 'sky_left_00001_00005' order represents '6' with '6236'
-6234 6236 0
c Var 'sky_left_00001_00005' direct represents '6' with '6237'
6234 -6236 6237 0
-6237 6236 0
-6237 -6234 0
c Var 'sky_left_00001_00005' order represents '7' with '6238'
-6236 6238 0
c Var 'sky_left_00001_00005' direct represents '7' with '6239'
6236 -6238 6239 0
-6239 6238 0
-6239 -6236 0
c Var 'sky_left_00001_00005' order represents '8' with '6240'
-6238 6240 0
c Var 'sky_left_00001_00005' direct represents '8' with '6241'
6238 -6240 6241 0
-6241 6240 0
-6241 -6238 0
c Var 'sky_left_00001_00005' direct represents '9' with '-6240'
6227 6229 6231 6233 6235 6237 6239 6241 -6240 0
c Encoding variable: sky_left_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00006' order represents '1' with '6242'
c Var 'sky_left_00001_00006' direct represents '1' with '6242'
c Var 'sky_left_00001_00006' order represents '2' with '6243'
-6242 6243 0
c Var 'sky_left_00001_00006' direct represents '2' with '6244'
6242 -6243 6244 0
-6244 6243 0
-6244 -6242 0
c Var 'sky_left_00001_00006' order represents '3' with '6245'
-6243 6245 0
c Var 'sky_left_00001_00006' direct represents '3' with '6246'
6243 -6245 6246 0
-6246 6245 0
-6246 -6243 0
c Var 'sky_left_00001_00006' order represents '4' with '6247'
-6245 6247 0
c Var 'sky_left_00001_00006' direct represents '4' with '6248'
6245 -6247 6248 0
-6248 6247 0
-6248 -6245 0
c Var 'sky_left_00001_00006' order represents '5' with '6249'
-6247 6249 0
c Var 'sky_left_00001_00006' direct represents '5' with '6250'
6247 -6249 6250 0
-6250 6249 0
-6250 -6247 0
c Var 'sky_left_00001_00006' order represents '6' with '6251'
-6249 6251 0
c Var 'sky_left_00001_00006' direct represents '6' with '6252'
6249 -6251 6252 0
-6252 6251 0
-6252 -6249 0
c Var 'sky_left_00001_00006' order represents '7' with '6253'
-6251 6253 0
c Var 'sky_left_00001_00006' direct represents '7' with '6254'
6251 -6253 6254 0
-6254 6253 0
-6254 -6251 0
c Var 'sky_left_00001_00006' order represents '8' with '6255'
-6253 6255 0
c Var 'sky_left_00001_00006' direct represents '8' with '6256'
6253 -6255 6256 0
-6256 6255 0
-6256 -6253 0
c Var 'sky_left_00001_00006' direct represents '9' with '-6255'
6242 6244 6246 6248 6250 6252 6254 6256 -6255 0
c Encoding variable: sky_left_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00007' order represents '1' with '6257'
c Var 'sky_left_00001_00007' direct represents '1' with '6257'
c Var 'sky_left_00001_00007' order represents '2' with '6258'
-6257 6258 0
c Var 'sky_left_00001_00007' direct represents '2' with '6259'
6257 -6258 6259 0
-6259 6258 0
-6259 -6257 0
c Var 'sky_left_00001_00007' order represents '3' with '6260'
-6258 6260 0
c Var 'sky_left_00001_00007' direct represents '3' with '6261'
6258 -6260 6261 0
-6261 6260 0
-6261 -6258 0
c Var 'sky_left_00001_00007' order represents '4' with '6262'
-6260 6262 0
c Var 'sky_left_00001_00007' direct represents '4' with '6263'
6260 -6262 6263 0
-6263 6262 0
-6263 -6260 0
c Var 'sky_left_00001_00007' order represents '5' with '6264'
-6262 6264 0
c Var 'sky_left_00001_00007' direct represents '5' with '6265'
6262 -6264 6265 0
-6265 6264 0
-6265 -6262 0
c Var 'sky_left_00001_00007' order represents '6' with '6266'
-6264 6266 0
c Var 'sky_left_00001_00007' direct represents '6' with '6267'
6264 -6266 6267 0
-6267 6266 0
-6267 -6264 0
c Var 'sky_left_00001_00007' order represents '7' with '6268'
-6266 6268 0
c Var 'sky_left_00001_00007' direct represents '7' with '6269'
6266 -6268 6269 0
-6269 6268 0
-6269 -6266 0
c Var 'sky_left_00001_00007' order represents '8' with '6270'
-6268 6270 0
c Var 'sky_left_00001_00007' direct represents '8' with '6271'
6268 -6270 6271 0
-6271 6270 0
-6271 -6268 0
c Var 'sky_left_00001_00007' direct represents '9' with '-6270'
6257 6259 6261 6263 6265 6267 6269 6271 -6270 0
c Encoding variable: sky_left_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00008' order represents '1' with '6272'
c Var 'sky_left_00001_00008' direct represents '1' with '6272'
c Var 'sky_left_00001_00008' order represents '2' with '6273'
-6272 6273 0
c Var 'sky_left_00001_00008' direct represents '2' with '6274'
6272 -6273 6274 0
-6274 6273 0
-6274 -6272 0
c Var 'sky_left_00001_00008' order represents '3' with '6275'
-6273 6275 0
c Var 'sky_left_00001_00008' direct represents '3' with '6276'
6273 -6275 6276 0
-6276 6275 0
-6276 -6273 0
c Var 'sky_left_00001_00008' order represents '4' with '6277'
-6275 6277 0
c Var 'sky_left_00001_00008' direct represents '4' with '6278'
6275 -6277 6278 0
-6278 6277 0
-6278 -6275 0
c Var 'sky_left_00001_00008' order represents '5' with '6279'
-6277 6279 0
c Var 'sky_left_00001_00008' direct represents '5' with '6280'
6277 -6279 6280 0
-6280 6279 0
-6280 -6277 0
c Var 'sky_left_00001_00008' order represents '6' with '6281'
-6279 6281 0
c Var 'sky_left_00001_00008' direct represents '6' with '6282'
6279 -6281 6282 0
-6282 6281 0
-6282 -6279 0
c Var 'sky_left_00001_00008' order represents '7' with '6283'
-6281 6283 0
c Var 'sky_left_00001_00008' direct represents '7' with '6284'
6281 -6283 6284 0
-6284 6283 0
-6284 -6281 0
c Var 'sky_left_00001_00008' order represents '8' with '6285'
-6283 6285 0
c Var 'sky_left_00001_00008' direct represents '8' with '6286'
6283 -6285 6286 0
-6286 6285 0
-6286 -6283 0
c Var 'sky_left_00001_00008' direct represents '9' with '-6285'
6272 6274 6276 6278 6280 6282 6284 6286 -6285 0
c Encoding variable: sky_left_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00001_00009' order represents '1' with '6287'
c Var 'sky_left_00001_00009' direct represents '1' with '6287'
c Var 'sky_left_00001_00009' order represents '2' with '6288'
-6287 6288 0
c Var 'sky_left_00001_00009' direct represents '2' with '6289'
6287 -6288 6289 0
-6289 6288 0
-6289 -6287 0
c Var 'sky_left_00001_00009' order represents '3' with '6290'
-6288 6290 0
c Var 'sky_left_00001_00009' direct represents '3' with '6291'
6288 -6290 6291 0
-6291 6290 0
-6291 -6288 0
c Var 'sky_left_00001_00009' order represents '4' with '6292'
-6290 6292 0
c Var 'sky_left_00001_00009' direct represents '4' with '6293'
6290 -6292 6293 0
-6293 6292 0
-6293 -6290 0
c Var 'sky_left_00001_00009' order represents '5' with '6294'
-6292 6294 0
c Var 'sky_left_00001_00009' direct represents '5' with '6295'
6292 -6294 6295 0
-6295 6294 0
-6295 -6292 0
c Var 'sky_left_00001_00009' order represents '6' with '6296'
-6294 6296 0
c Var 'sky_left_00001_00009' direct represents '6' with '6297'
6294 -6296 6297 0
-6297 6296 0
-6297 -6294 0
c Var 'sky_left_00001_00009' order represents '7' with '6298'
-6296 6298 0
c Var 'sky_left_00001_00009' direct represents '7' with '6299'
6296 -6298 6299 0
-6299 6298 0
-6299 -6296 0
c Var 'sky_left_00001_00009' order represents '8' with '6300'
-6298 6300 0
c Var 'sky_left_00001_00009' direct represents '8' with '6301'
6298 -6300 6301 0
-6301 6300 0
-6301 -6298 0
c Var 'sky_left_00001_00009' direct represents '9' with '-6300'
6287 6289 6291 6293 6295 6297 6299 6301 -6300 0
c Encoding variable: sky_left_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00001' order represents '1' with '6302'
c Var 'sky_left_00002_00001' direct represents '1' with '6302'
c Var 'sky_left_00002_00001' order represents '2' with '6303'
-6302 6303 0
c Var 'sky_left_00002_00001' direct represents '2' with '6304'
6302 -6303 6304 0
-6304 6303 0
-6304 -6302 0
c Var 'sky_left_00002_00001' order represents '3' with '6305'
-6303 6305 0
c Var 'sky_left_00002_00001' direct represents '3' with '6306'
6303 -6305 6306 0
-6306 6305 0
-6306 -6303 0
c Var 'sky_left_00002_00001' order represents '4' with '6307'
-6305 6307 0
c Var 'sky_left_00002_00001' direct represents '4' with '6308'
6305 -6307 6308 0
-6308 6307 0
-6308 -6305 0
c Var 'sky_left_00002_00001' order represents '5' with '6309'
-6307 6309 0
c Var 'sky_left_00002_00001' direct represents '5' with '6310'
6307 -6309 6310 0
-6310 6309 0
-6310 -6307 0
c Var 'sky_left_00002_00001' order represents '6' with '6311'
-6309 6311 0
c Var 'sky_left_00002_00001' direct represents '6' with '6312'
6309 -6311 6312 0
-6312 6311 0
-6312 -6309 0
c Var 'sky_left_00002_00001' order represents '7' with '6313'
-6311 6313 0
c Var 'sky_left_00002_00001' direct represents '7' with '6314'
6311 -6313 6314 0
-6314 6313 0
-6314 -6311 0
c Var 'sky_left_00002_00001' order represents '8' with '6315'
-6313 6315 0
c Var 'sky_left_00002_00001' direct represents '8' with '6316'
6313 -6315 6316 0
-6316 6315 0
-6316 -6313 0
c Var 'sky_left_00002_00001' direct represents '9' with '-6315'
6302 6304 6306 6308 6310 6312 6314 6316 -6315 0
c Encoding variable: sky_left_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00002' order represents '1' with '6317'
c Var 'sky_left_00002_00002' direct represents '1' with '6317'
c Var 'sky_left_00002_00002' order represents '2' with '6318'
-6317 6318 0
c Var 'sky_left_00002_00002' direct represents '2' with '6319'
6317 -6318 6319 0
-6319 6318 0
-6319 -6317 0
c Var 'sky_left_00002_00002' order represents '3' with '6320'
-6318 6320 0
c Var 'sky_left_00002_00002' direct represents '3' with '6321'
6318 -6320 6321 0
-6321 6320 0
-6321 -6318 0
c Var 'sky_left_00002_00002' order represents '4' with '6322'
-6320 6322 0
c Var 'sky_left_00002_00002' direct represents '4' with '6323'
6320 -6322 6323 0
-6323 6322 0
-6323 -6320 0
c Var 'sky_left_00002_00002' order represents '5' with '6324'
-6322 6324 0
c Var 'sky_left_00002_00002' direct represents '5' with '6325'
6322 -6324 6325 0
-6325 6324 0
-6325 -6322 0
c Var 'sky_left_00002_00002' order represents '6' with '6326'
-6324 6326 0
c Var 'sky_left_00002_00002' direct represents '6' with '6327'
6324 -6326 6327 0
-6327 6326 0
-6327 -6324 0
c Var 'sky_left_00002_00002' order represents '7' with '6328'
-6326 6328 0
c Var 'sky_left_00002_00002' direct represents '7' with '6329'
6326 -6328 6329 0
-6329 6328 0
-6329 -6326 0
c Var 'sky_left_00002_00002' order represents '8' with '6330'
-6328 6330 0
c Var 'sky_left_00002_00002' direct represents '8' with '6331'
6328 -6330 6331 0
-6331 6330 0
-6331 -6328 0
c Var 'sky_left_00002_00002' direct represents '9' with '-6330'
6317 6319 6321 6323 6325 6327 6329 6331 -6330 0
c Encoding variable: sky_left_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00003' order represents '1' with '6332'
c Var 'sky_left_00002_00003' direct represents '1' with '6332'
c Var 'sky_left_00002_00003' order represents '2' with '6333'
-6332 6333 0
c Var 'sky_left_00002_00003' direct represents '2' with '6334'
6332 -6333 6334 0
-6334 6333 0
-6334 -6332 0
c Var 'sky_left_00002_00003' order represents '3' with '6335'
-6333 6335 0
c Var 'sky_left_00002_00003' direct represents '3' with '6336'
6333 -6335 6336 0
-6336 6335 0
-6336 -6333 0
c Var 'sky_left_00002_00003' order represents '4' with '6337'
-6335 6337 0
c Var 'sky_left_00002_00003' direct represents '4' with '6338'
6335 -6337 6338 0
-6338 6337 0
-6338 -6335 0
c Var 'sky_left_00002_00003' order represents '5' with '6339'
-6337 6339 0
c Var 'sky_left_00002_00003' direct represents '5' with '6340'
6337 -6339 6340 0
-6340 6339 0
-6340 -6337 0
c Var 'sky_left_00002_00003' order represents '6' with '6341'
-6339 6341 0
c Var 'sky_left_00002_00003' direct represents '6' with '6342'
6339 -6341 6342 0
-6342 6341 0
-6342 -6339 0
c Var 'sky_left_00002_00003' order represents '7' with '6343'
-6341 6343 0
c Var 'sky_left_00002_00003' direct represents '7' with '6344'
6341 -6343 6344 0
-6344 6343 0
-6344 -6341 0
c Var 'sky_left_00002_00003' order represents '8' with '6345'
-6343 6345 0
c Var 'sky_left_00002_00003' direct represents '8' with '6346'
6343 -6345 6346 0
-6346 6345 0
-6346 -6343 0
c Var 'sky_left_00002_00003' direct represents '9' with '-6345'
6332 6334 6336 6338 6340 6342 6344 6346 -6345 0
c Encoding variable: sky_left_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00004' order represents '1' with '6347'
c Var 'sky_left_00002_00004' direct represents '1' with '6347'
c Var 'sky_left_00002_00004' order represents '2' with '6348'
-6347 6348 0
c Var 'sky_left_00002_00004' direct represents '2' with '6349'
6347 -6348 6349 0
-6349 6348 0
-6349 -6347 0
c Var 'sky_left_00002_00004' order represents '3' with '6350'
-6348 6350 0
c Var 'sky_left_00002_00004' direct represents '3' with '6351'
6348 -6350 6351 0
-6351 6350 0
-6351 -6348 0
c Var 'sky_left_00002_00004' order represents '4' with '6352'
-6350 6352 0
c Var 'sky_left_00002_00004' direct represents '4' with '6353'
6350 -6352 6353 0
-6353 6352 0
-6353 -6350 0
c Var 'sky_left_00002_00004' order represents '5' with '6354'
-6352 6354 0
c Var 'sky_left_00002_00004' direct represents '5' with '6355'
6352 -6354 6355 0
-6355 6354 0
-6355 -6352 0
c Var 'sky_left_00002_00004' order represents '6' with '6356'
-6354 6356 0
c Var 'sky_left_00002_00004' direct represents '6' with '6357'
6354 -6356 6357 0
-6357 6356 0
-6357 -6354 0
c Var 'sky_left_00002_00004' order represents '7' with '6358'
-6356 6358 0
c Var 'sky_left_00002_00004' direct represents '7' with '6359'
6356 -6358 6359 0
-6359 6358 0
-6359 -6356 0
c Var 'sky_left_00002_00004' order represents '8' with '6360'
-6358 6360 0
c Var 'sky_left_00002_00004' direct represents '8' with '6361'
6358 -6360 6361 0
-6361 6360 0
-6361 -6358 0
c Var 'sky_left_00002_00004' direct represents '9' with '-6360'
6347 6349 6351 6353 6355 6357 6359 6361 -6360 0
c Encoding variable: sky_left_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00005' order represents '1' with '6362'
c Var 'sky_left_00002_00005' direct represents '1' with '6362'
c Var 'sky_left_00002_00005' order represents '2' with '6363'
-6362 6363 0
c Var 'sky_left_00002_00005' direct represents '2' with '6364'
6362 -6363 6364 0
-6364 6363 0
-6364 -6362 0
c Var 'sky_left_00002_00005' order represents '3' with '6365'
-6363 6365 0
c Var 'sky_left_00002_00005' direct represents '3' with '6366'
6363 -6365 6366 0
-6366 6365 0
-6366 -6363 0
c Var 'sky_left_00002_00005' order represents '4' with '6367'
-6365 6367 0
c Var 'sky_left_00002_00005' direct represents '4' with '6368'
6365 -6367 6368 0
-6368 6367 0
-6368 -6365 0
c Var 'sky_left_00002_00005' order represents '5' with '6369'
-6367 6369 0
c Var 'sky_left_00002_00005' direct represents '5' with '6370'
6367 -6369 6370 0
-6370 6369 0
-6370 -6367 0
c Var 'sky_left_00002_00005' order represents '6' with '6371'
-6369 6371 0
c Var 'sky_left_00002_00005' direct represents '6' with '6372'
6369 -6371 6372 0
-6372 6371 0
-6372 -6369 0
c Var 'sky_left_00002_00005' order represents '7' with '6373'
-6371 6373 0
c Var 'sky_left_00002_00005' direct represents '7' with '6374'
6371 -6373 6374 0
-6374 6373 0
-6374 -6371 0
c Var 'sky_left_00002_00005' order represents '8' with '6375'
-6373 6375 0
c Var 'sky_left_00002_00005' direct represents '8' with '6376'
6373 -6375 6376 0
-6376 6375 0
-6376 -6373 0
c Var 'sky_left_00002_00005' direct represents '9' with '-6375'
6362 6364 6366 6368 6370 6372 6374 6376 -6375 0
c Encoding variable: sky_left_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00006' order represents '1' with '6377'
c Var 'sky_left_00002_00006' direct represents '1' with '6377'
c Var 'sky_left_00002_00006' order represents '2' with '6378'
-6377 6378 0
c Var 'sky_left_00002_00006' direct represents '2' with '6379'
6377 -6378 6379 0
-6379 6378 0
-6379 -6377 0
c Var 'sky_left_00002_00006' order represents '3' with '6380'
-6378 6380 0
c Var 'sky_left_00002_00006' direct represents '3' with '6381'
6378 -6380 6381 0
-6381 6380 0
-6381 -6378 0
c Var 'sky_left_00002_00006' order represents '4' with '6382'
-6380 6382 0
c Var 'sky_left_00002_00006' direct represents '4' with '6383'
6380 -6382 6383 0
-6383 6382 0
-6383 -6380 0
c Var 'sky_left_00002_00006' order represents '5' with '6384'
-6382 6384 0
c Var 'sky_left_00002_00006' direct represents '5' with '6385'
6382 -6384 6385 0
-6385 6384 0
-6385 -6382 0
c Var 'sky_left_00002_00006' order represents '6' with '6386'
-6384 6386 0
c Var 'sky_left_00002_00006' direct represents '6' with '6387'
6384 -6386 6387 0
-6387 6386 0
-6387 -6384 0
c Var 'sky_left_00002_00006' order represents '7' with '6388'
-6386 6388 0
c Var 'sky_left_00002_00006' direct represents '7' with '6389'
6386 -6388 6389 0
-6389 6388 0
-6389 -6386 0
c Var 'sky_left_00002_00006' order represents '8' with '6390'
-6388 6390 0
c Var 'sky_left_00002_00006' direct represents '8' with '6391'
6388 -6390 6391 0
-6391 6390 0
-6391 -6388 0
c Var 'sky_left_00002_00006' direct represents '9' with '-6390'
6377 6379 6381 6383 6385 6387 6389 6391 -6390 0
c Encoding variable: sky_left_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00007' order represents '1' with '6392'
c Var 'sky_left_00002_00007' direct represents '1' with '6392'
c Var 'sky_left_00002_00007' order represents '2' with '6393'
-6392 6393 0
c Var 'sky_left_00002_00007' direct represents '2' with '6394'
6392 -6393 6394 0
-6394 6393 0
-6394 -6392 0
c Var 'sky_left_00002_00007' order represents '3' with '6395'
-6393 6395 0
c Var 'sky_left_00002_00007' direct represents '3' with '6396'
6393 -6395 6396 0
-6396 6395 0
-6396 -6393 0
c Var 'sky_left_00002_00007' order represents '4' with '6397'
-6395 6397 0
c Var 'sky_left_00002_00007' direct represents '4' with '6398'
6395 -6397 6398 0
-6398 6397 0
-6398 -6395 0
c Var 'sky_left_00002_00007' order represents '5' with '6399'
-6397 6399 0
c Var 'sky_left_00002_00007' direct represents '5' with '6400'
6397 -6399 6400 0
-6400 6399 0
-6400 -6397 0
c Var 'sky_left_00002_00007' order represents '6' with '6401'
-6399 6401 0
c Var 'sky_left_00002_00007' direct represents '6' with '6402'
6399 -6401 6402 0
-6402 6401 0
-6402 -6399 0
c Var 'sky_left_00002_00007' order represents '7' with '6403'
-6401 6403 0
c Var 'sky_left_00002_00007' direct represents '7' with '6404'
6401 -6403 6404 0
-6404 6403 0
-6404 -6401 0
c Var 'sky_left_00002_00007' order represents '8' with '6405'
-6403 6405 0
c Var 'sky_left_00002_00007' direct represents '8' with '6406'
6403 -6405 6406 0
-6406 6405 0
-6406 -6403 0
c Var 'sky_left_00002_00007' direct represents '9' with '-6405'
6392 6394 6396 6398 6400 6402 6404 6406 -6405 0
c Encoding variable: sky_left_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00008' order represents '1' with '6407'
c Var 'sky_left_00002_00008' direct represents '1' with '6407'
c Var 'sky_left_00002_00008' order represents '2' with '6408'
-6407 6408 0
c Var 'sky_left_00002_00008' direct represents '2' with '6409'
6407 -6408 6409 0
-6409 6408 0
-6409 -6407 0
c Var 'sky_left_00002_00008' order represents '3' with '6410'
-6408 6410 0
c Var 'sky_left_00002_00008' direct represents '3' with '6411'
6408 -6410 6411 0
-6411 6410 0
-6411 -6408 0
c Var 'sky_left_00002_00008' order represents '4' with '6412'
-6410 6412 0
c Var 'sky_left_00002_00008' direct represents '4' with '6413'
6410 -6412 6413 0
-6413 6412 0
-6413 -6410 0
c Var 'sky_left_00002_00008' order represents '5' with '6414'
-6412 6414 0
c Var 'sky_left_00002_00008' direct represents '5' with '6415'
6412 -6414 6415 0
-6415 6414 0
-6415 -6412 0
c Var 'sky_left_00002_00008' order represents '6' with '6416'
-6414 6416 0
c Var 'sky_left_00002_00008' direct represents '6' with '6417'
6414 -6416 6417 0
-6417 6416 0
-6417 -6414 0
c Var 'sky_left_00002_00008' order represents '7' with '6418'
-6416 6418 0
c Var 'sky_left_00002_00008' direct represents '7' with '6419'
6416 -6418 6419 0
-6419 6418 0
-6419 -6416 0
c Var 'sky_left_00002_00008' order represents '8' with '6420'
-6418 6420 0
c Var 'sky_left_00002_00008' direct represents '8' with '6421'
6418 -6420 6421 0
-6421 6420 0
-6421 -6418 0
c Var 'sky_left_00002_00008' direct represents '9' with '-6420'
6407 6409 6411 6413 6415 6417 6419 6421 -6420 0
c Encoding variable: sky_left_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00002_00009' order represents '1' with '6422'
c Var 'sky_left_00002_00009' direct represents '1' with '6422'
c Var 'sky_left_00002_00009' order represents '2' with '6423'
-6422 6423 0
c Var 'sky_left_00002_00009' direct represents '2' with '6424'
6422 -6423 6424 0
-6424 6423 0
-6424 -6422 0
c Var 'sky_left_00002_00009' order represents '3' with '6425'
-6423 6425 0
c Var 'sky_left_00002_00009' direct represents '3' with '6426'
6423 -6425 6426 0
-6426 6425 0
-6426 -6423 0
c Var 'sky_left_00002_00009' order represents '4' with '6427'
-6425 6427 0
c Var 'sky_left_00002_00009' direct represents '4' with '6428'
6425 -6427 6428 0
-6428 6427 0
-6428 -6425 0
c Var 'sky_left_00002_00009' order represents '5' with '6429'
-6427 6429 0
c Var 'sky_left_00002_00009' direct represents '5' with '6430'
6427 -6429 6430 0
-6430 6429 0
-6430 -6427 0
c Var 'sky_left_00002_00009' order represents '6' with '6431'
-6429 6431 0
c Var 'sky_left_00002_00009' direct represents '6' with '6432'
6429 -6431 6432 0
-6432 6431 0
-6432 -6429 0
c Var 'sky_left_00002_00009' order represents '7' with '6433'
-6431 6433 0
c Var 'sky_left_00002_00009' direct represents '7' with '6434'
6431 -6433 6434 0
-6434 6433 0
-6434 -6431 0
c Var 'sky_left_00002_00009' order represents '8' with '6435'
-6433 6435 0
c Var 'sky_left_00002_00009' direct represents '8' with '6436'
6433 -6435 6436 0
-6436 6435 0
-6436 -6433 0
c Var 'sky_left_00002_00009' direct represents '9' with '-6435'
6422 6424 6426 6428 6430 6432 6434 6436 -6435 0
c Encoding variable: sky_left_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00001' order represents '1' with '6437'
c Var 'sky_left_00003_00001' direct represents '1' with '6437'
c Var 'sky_left_00003_00001' order represents '2' with '6438'
-6437 6438 0
c Var 'sky_left_00003_00001' direct represents '2' with '6439'
6437 -6438 6439 0
-6439 6438 0
-6439 -6437 0
c Var 'sky_left_00003_00001' order represents '3' with '6440'
-6438 6440 0
c Var 'sky_left_00003_00001' direct represents '3' with '6441'
6438 -6440 6441 0
-6441 6440 0
-6441 -6438 0
c Var 'sky_left_00003_00001' order represents '4' with '6442'
-6440 6442 0
c Var 'sky_left_00003_00001' direct represents '4' with '6443'
6440 -6442 6443 0
-6443 6442 0
-6443 -6440 0
c Var 'sky_left_00003_00001' order represents '5' with '6444'
-6442 6444 0
c Var 'sky_left_00003_00001' direct represents '5' with '6445'
6442 -6444 6445 0
-6445 6444 0
-6445 -6442 0
c Var 'sky_left_00003_00001' order represents '6' with '6446'
-6444 6446 0
c Var 'sky_left_00003_00001' direct represents '6' with '6447'
6444 -6446 6447 0
-6447 6446 0
-6447 -6444 0
c Var 'sky_left_00003_00001' order represents '7' with '6448'
-6446 6448 0
c Var 'sky_left_00003_00001' direct represents '7' with '6449'
6446 -6448 6449 0
-6449 6448 0
-6449 -6446 0
c Var 'sky_left_00003_00001' order represents '8' with '6450'
-6448 6450 0
c Var 'sky_left_00003_00001' direct represents '8' with '6451'
6448 -6450 6451 0
-6451 6450 0
-6451 -6448 0
c Var 'sky_left_00003_00001' direct represents '9' with '-6450'
6437 6439 6441 6443 6445 6447 6449 6451 -6450 0
c Encoding variable: sky_left_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00002' order represents '1' with '6452'
c Var 'sky_left_00003_00002' direct represents '1' with '6452'
c Var 'sky_left_00003_00002' order represents '2' with '6453'
-6452 6453 0
c Var 'sky_left_00003_00002' direct represents '2' with '6454'
6452 -6453 6454 0
-6454 6453 0
-6454 -6452 0
c Var 'sky_left_00003_00002' order represents '3' with '6455'
-6453 6455 0
c Var 'sky_left_00003_00002' direct represents '3' with '6456'
6453 -6455 6456 0
-6456 6455 0
-6456 -6453 0
c Var 'sky_left_00003_00002' order represents '4' with '6457'
-6455 6457 0
c Var 'sky_left_00003_00002' direct represents '4' with '6458'
6455 -6457 6458 0
-6458 6457 0
-6458 -6455 0
c Var 'sky_left_00003_00002' order represents '5' with '6459'
-6457 6459 0
c Var 'sky_left_00003_00002' direct represents '5' with '6460'
6457 -6459 6460 0
-6460 6459 0
-6460 -6457 0
c Var 'sky_left_00003_00002' order represents '6' with '6461'
-6459 6461 0
c Var 'sky_left_00003_00002' direct represents '6' with '6462'
6459 -6461 6462 0
-6462 6461 0
-6462 -6459 0
c Var 'sky_left_00003_00002' order represents '7' with '6463'
-6461 6463 0
c Var 'sky_left_00003_00002' direct represents '7' with '6464'
6461 -6463 6464 0
-6464 6463 0
-6464 -6461 0
c Var 'sky_left_00003_00002' order represents '8' with '6465'
-6463 6465 0
c Var 'sky_left_00003_00002' direct represents '8' with '6466'
6463 -6465 6466 0
-6466 6465 0
-6466 -6463 0
c Var 'sky_left_00003_00002' direct represents '9' with '-6465'
6452 6454 6456 6458 6460 6462 6464 6466 -6465 0
c Encoding variable: sky_left_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00003' order represents '1' with '6467'
c Var 'sky_left_00003_00003' direct represents '1' with '6467'
c Var 'sky_left_00003_00003' order represents '2' with '6468'
-6467 6468 0
c Var 'sky_left_00003_00003' direct represents '2' with '6469'
6467 -6468 6469 0
-6469 6468 0
-6469 -6467 0
c Var 'sky_left_00003_00003' order represents '3' with '6470'
-6468 6470 0
c Var 'sky_left_00003_00003' direct represents '3' with '6471'
6468 -6470 6471 0
-6471 6470 0
-6471 -6468 0
c Var 'sky_left_00003_00003' order represents '4' with '6472'
-6470 6472 0
c Var 'sky_left_00003_00003' direct represents '4' with '6473'
6470 -6472 6473 0
-6473 6472 0
-6473 -6470 0
c Var 'sky_left_00003_00003' order represents '5' with '6474'
-6472 6474 0
c Var 'sky_left_00003_00003' direct represents '5' with '6475'
6472 -6474 6475 0
-6475 6474 0
-6475 -6472 0
c Var 'sky_left_00003_00003' order represents '6' with '6476'
-6474 6476 0
c Var 'sky_left_00003_00003' direct represents '6' with '6477'
6474 -6476 6477 0
-6477 6476 0
-6477 -6474 0
c Var 'sky_left_00003_00003' order represents '7' with '6478'
-6476 6478 0
c Var 'sky_left_00003_00003' direct represents '7' with '6479'
6476 -6478 6479 0
-6479 6478 0
-6479 -6476 0
c Var 'sky_left_00003_00003' order represents '8' with '6480'
-6478 6480 0
c Var 'sky_left_00003_00003' direct represents '8' with '6481'
6478 -6480 6481 0
-6481 6480 0
-6481 -6478 0
c Var 'sky_left_00003_00003' direct represents '9' with '-6480'
6467 6469 6471 6473 6475 6477 6479 6481 -6480 0
c Encoding variable: sky_left_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00004' order represents '1' with '6482'
c Var 'sky_left_00003_00004' direct represents '1' with '6482'
c Var 'sky_left_00003_00004' order represents '2' with '6483'
-6482 6483 0
c Var 'sky_left_00003_00004' direct represents '2' with '6484'
6482 -6483 6484 0
-6484 6483 0
-6484 -6482 0
c Var 'sky_left_00003_00004' order represents '3' with '6485'
-6483 6485 0
c Var 'sky_left_00003_00004' direct represents '3' with '6486'
6483 -6485 6486 0
-6486 6485 0
-6486 -6483 0
c Var 'sky_left_00003_00004' order represents '4' with '6487'
-6485 6487 0
c Var 'sky_left_00003_00004' direct represents '4' with '6488'
6485 -6487 6488 0
-6488 6487 0
-6488 -6485 0
c Var 'sky_left_00003_00004' order represents '5' with '6489'
-6487 6489 0
c Var 'sky_left_00003_00004' direct represents '5' with '6490'
6487 -6489 6490 0
-6490 6489 0
-6490 -6487 0
c Var 'sky_left_00003_00004' order represents '6' with '6491'
-6489 6491 0
c Var 'sky_left_00003_00004' direct represents '6' with '6492'
6489 -6491 6492 0
-6492 6491 0
-6492 -6489 0
c Var 'sky_left_00003_00004' order represents '7' with '6493'
-6491 6493 0
c Var 'sky_left_00003_00004' direct represents '7' with '6494'
6491 -6493 6494 0
-6494 6493 0
-6494 -6491 0
c Var 'sky_left_00003_00004' order represents '8' with '6495'
-6493 6495 0
c Var 'sky_left_00003_00004' direct represents '8' with '6496'
6493 -6495 6496 0
-6496 6495 0
-6496 -6493 0
c Var 'sky_left_00003_00004' direct represents '9' with '-6495'
6482 6484 6486 6488 6490 6492 6494 6496 -6495 0
c Encoding variable: sky_left_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00005' order represents '1' with '6497'
c Var 'sky_left_00003_00005' direct represents '1' with '6497'
c Var 'sky_left_00003_00005' order represents '2' with '6498'
-6497 6498 0
c Var 'sky_left_00003_00005' direct represents '2' with '6499'
6497 -6498 6499 0
-6499 6498 0
-6499 -6497 0
c Var 'sky_left_00003_00005' order represents '3' with '6500'
-6498 6500 0
c Var 'sky_left_00003_00005' direct represents '3' with '6501'
6498 -6500 6501 0
-6501 6500 0
-6501 -6498 0
c Var 'sky_left_00003_00005' order represents '4' with '6502'
-6500 6502 0
c Var 'sky_left_00003_00005' direct represents '4' with '6503'
6500 -6502 6503 0
-6503 6502 0
-6503 -6500 0
c Var 'sky_left_00003_00005' order represents '5' with '6504'
-6502 6504 0
c Var 'sky_left_00003_00005' direct represents '5' with '6505'
6502 -6504 6505 0
-6505 6504 0
-6505 -6502 0
c Var 'sky_left_00003_00005' order represents '6' with '6506'
-6504 6506 0
c Var 'sky_left_00003_00005' direct represents '6' with '6507'
6504 -6506 6507 0
-6507 6506 0
-6507 -6504 0
c Var 'sky_left_00003_00005' order represents '7' with '6508'
-6506 6508 0
c Var 'sky_left_00003_00005' direct represents '7' with '6509'
6506 -6508 6509 0
-6509 6508 0
-6509 -6506 0
c Var 'sky_left_00003_00005' order represents '8' with '6510'
-6508 6510 0
c Var 'sky_left_00003_00005' direct represents '8' with '6511'
6508 -6510 6511 0
-6511 6510 0
-6511 -6508 0
c Var 'sky_left_00003_00005' direct represents '9' with '-6510'
6497 6499 6501 6503 6505 6507 6509 6511 -6510 0
c Encoding variable: sky_left_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00006' order represents '1' with '6512'
c Var 'sky_left_00003_00006' direct represents '1' with '6512'
c Var 'sky_left_00003_00006' order represents '2' with '6513'
-6512 6513 0
c Var 'sky_left_00003_00006' direct represents '2' with '6514'
6512 -6513 6514 0
-6514 6513 0
-6514 -6512 0
c Var 'sky_left_00003_00006' order represents '3' with '6515'
-6513 6515 0
c Var 'sky_left_00003_00006' direct represents '3' with '6516'
6513 -6515 6516 0
-6516 6515 0
-6516 -6513 0
c Var 'sky_left_00003_00006' order represents '4' with '6517'
-6515 6517 0
c Var 'sky_left_00003_00006' direct represents '4' with '6518'
6515 -6517 6518 0
-6518 6517 0
-6518 -6515 0
c Var 'sky_left_00003_00006' order represents '5' with '6519'
-6517 6519 0
c Var 'sky_left_00003_00006' direct represents '5' with '6520'
6517 -6519 6520 0
-6520 6519 0
-6520 -6517 0
c Var 'sky_left_00003_00006' order represents '6' with '6521'
-6519 6521 0
c Var 'sky_left_00003_00006' direct represents '6' with '6522'
6519 -6521 6522 0
-6522 6521 0
-6522 -6519 0
c Var 'sky_left_00003_00006' order represents '7' with '6523'
-6521 6523 0
c Var 'sky_left_00003_00006' direct represents '7' with '6524'
6521 -6523 6524 0
-6524 6523 0
-6524 -6521 0
c Var 'sky_left_00003_00006' order represents '8' with '6525'
-6523 6525 0
c Var 'sky_left_00003_00006' direct represents '8' with '6526'
6523 -6525 6526 0
-6526 6525 0
-6526 -6523 0
c Var 'sky_left_00003_00006' direct represents '9' with '-6525'
6512 6514 6516 6518 6520 6522 6524 6526 -6525 0
c Encoding variable: sky_left_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00007' order represents '1' with '6527'
c Var 'sky_left_00003_00007' direct represents '1' with '6527'
c Var 'sky_left_00003_00007' order represents '2' with '6528'
-6527 6528 0
c Var 'sky_left_00003_00007' direct represents '2' with '6529'
6527 -6528 6529 0
-6529 6528 0
-6529 -6527 0
c Var 'sky_left_00003_00007' order represents '3' with '6530'
-6528 6530 0
c Var 'sky_left_00003_00007' direct represents '3' with '6531'
6528 -6530 6531 0
-6531 6530 0
-6531 -6528 0
c Var 'sky_left_00003_00007' order represents '4' with '6532'
-6530 6532 0
c Var 'sky_left_00003_00007' direct represents '4' with '6533'
6530 -6532 6533 0
-6533 6532 0
-6533 -6530 0
c Var 'sky_left_00003_00007' order represents '5' with '6534'
-6532 6534 0
c Var 'sky_left_00003_00007' direct represents '5' with '6535'
6532 -6534 6535 0
-6535 6534 0
-6535 -6532 0
c Var 'sky_left_00003_00007' order represents '6' with '6536'
-6534 6536 0
c Var 'sky_left_00003_00007' direct represents '6' with '6537'
6534 -6536 6537 0
-6537 6536 0
-6537 -6534 0
c Var 'sky_left_00003_00007' order represents '7' with '6538'
-6536 6538 0
c Var 'sky_left_00003_00007' direct represents '7' with '6539'
6536 -6538 6539 0
-6539 6538 0
-6539 -6536 0
c Var 'sky_left_00003_00007' order represents '8' with '6540'
-6538 6540 0
c Var 'sky_left_00003_00007' direct represents '8' with '6541'
6538 -6540 6541 0
-6541 6540 0
-6541 -6538 0
c Var 'sky_left_00003_00007' direct represents '9' with '-6540'
6527 6529 6531 6533 6535 6537 6539 6541 -6540 0
c Encoding variable: sky_left_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00008' order represents '1' with '6542'
c Var 'sky_left_00003_00008' direct represents '1' with '6542'
c Var 'sky_left_00003_00008' order represents '2' with '6543'
-6542 6543 0
c Var 'sky_left_00003_00008' direct represents '2' with '6544'
6542 -6543 6544 0
-6544 6543 0
-6544 -6542 0
c Var 'sky_left_00003_00008' order represents '3' with '6545'
-6543 6545 0
c Var 'sky_left_00003_00008' direct represents '3' with '6546'
6543 -6545 6546 0
-6546 6545 0
-6546 -6543 0
c Var 'sky_left_00003_00008' order represents '4' with '6547'
-6545 6547 0
c Var 'sky_left_00003_00008' direct represents '4' with '6548'
6545 -6547 6548 0
-6548 6547 0
-6548 -6545 0
c Var 'sky_left_00003_00008' order represents '5' with '6549'
-6547 6549 0
c Var 'sky_left_00003_00008' direct represents '5' with '6550'
6547 -6549 6550 0
-6550 6549 0
-6550 -6547 0
c Var 'sky_left_00003_00008' order represents '6' with '6551'
-6549 6551 0
c Var 'sky_left_00003_00008' direct represents '6' with '6552'
6549 -6551 6552 0
-6552 6551 0
-6552 -6549 0
c Var 'sky_left_00003_00008' order represents '7' with '6553'
-6551 6553 0
c Var 'sky_left_00003_00008' direct represents '7' with '6554'
6551 -6553 6554 0
-6554 6553 0
-6554 -6551 0
c Var 'sky_left_00003_00008' order represents '8' with '6555'
-6553 6555 0
c Var 'sky_left_00003_00008' direct represents '8' with '6556'
6553 -6555 6556 0
-6556 6555 0
-6556 -6553 0
c Var 'sky_left_00003_00008' direct represents '9' with '-6555'
6542 6544 6546 6548 6550 6552 6554 6556 -6555 0
c Encoding variable: sky_left_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00003_00009' order represents '1' with '6557'
c Var 'sky_left_00003_00009' direct represents '1' with '6557'
c Var 'sky_left_00003_00009' order represents '2' with '6558'
-6557 6558 0
c Var 'sky_left_00003_00009' direct represents '2' with '6559'
6557 -6558 6559 0
-6559 6558 0
-6559 -6557 0
c Var 'sky_left_00003_00009' order represents '3' with '6560'
-6558 6560 0
c Var 'sky_left_00003_00009' direct represents '3' with '6561'
6558 -6560 6561 0
-6561 6560 0
-6561 -6558 0
c Var 'sky_left_00003_00009' order represents '4' with '6562'
-6560 6562 0
c Var 'sky_left_00003_00009' direct represents '4' with '6563'
6560 -6562 6563 0
-6563 6562 0
-6563 -6560 0
c Var 'sky_left_00003_00009' order represents '5' with '6564'
-6562 6564 0
c Var 'sky_left_00003_00009' direct represents '5' with '6565'
6562 -6564 6565 0
-6565 6564 0
-6565 -6562 0
c Var 'sky_left_00003_00009' order represents '6' with '6566'
-6564 6566 0
c Var 'sky_left_00003_00009' direct represents '6' with '6567'
6564 -6566 6567 0
-6567 6566 0
-6567 -6564 0
c Var 'sky_left_00003_00009' order represents '7' with '6568'
-6566 6568 0
c Var 'sky_left_00003_00009' direct represents '7' with '6569'
6566 -6568 6569 0
-6569 6568 0
-6569 -6566 0
c Var 'sky_left_00003_00009' order represents '8' with '6570'
-6568 6570 0
c Var 'sky_left_00003_00009' direct represents '8' with '6571'
6568 -6570 6571 0
-6571 6570 0
-6571 -6568 0
c Var 'sky_left_00003_00009' direct represents '9' with '-6570'
6557 6559 6561 6563 6565 6567 6569 6571 -6570 0
c Encoding variable: sky_left_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00001' order represents '1' with '6572'
c Var 'sky_left_00004_00001' direct represents '1' with '6572'
c Var 'sky_left_00004_00001' order represents '2' with '6573'
-6572 6573 0
c Var 'sky_left_00004_00001' direct represents '2' with '6574'
6572 -6573 6574 0
-6574 6573 0
-6574 -6572 0
c Var 'sky_left_00004_00001' order represents '3' with '6575'
-6573 6575 0
c Var 'sky_left_00004_00001' direct represents '3' with '6576'
6573 -6575 6576 0
-6576 6575 0
-6576 -6573 0
c Var 'sky_left_00004_00001' order represents '4' with '6577'
-6575 6577 0
c Var 'sky_left_00004_00001' direct represents '4' with '6578'
6575 -6577 6578 0
-6578 6577 0
-6578 -6575 0
c Var 'sky_left_00004_00001' order represents '5' with '6579'
-6577 6579 0
c Var 'sky_left_00004_00001' direct represents '5' with '6580'
6577 -6579 6580 0
-6580 6579 0
-6580 -6577 0
c Var 'sky_left_00004_00001' order represents '6' with '6581'
-6579 6581 0
c Var 'sky_left_00004_00001' direct represents '6' with '6582'
6579 -6581 6582 0
-6582 6581 0
-6582 -6579 0
c Var 'sky_left_00004_00001' order represents '7' with '6583'
-6581 6583 0
c Var 'sky_left_00004_00001' direct represents '7' with '6584'
6581 -6583 6584 0
-6584 6583 0
-6584 -6581 0
c Var 'sky_left_00004_00001' order represents '8' with '6585'
-6583 6585 0
c Var 'sky_left_00004_00001' direct represents '8' with '6586'
6583 -6585 6586 0
-6586 6585 0
-6586 -6583 0
c Var 'sky_left_00004_00001' direct represents '9' with '-6585'
6572 6574 6576 6578 6580 6582 6584 6586 -6585 0
c Encoding variable: sky_left_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00002' order represents '1' with '6587'
c Var 'sky_left_00004_00002' direct represents '1' with '6587'
c Var 'sky_left_00004_00002' order represents '2' with '6588'
-6587 6588 0
c Var 'sky_left_00004_00002' direct represents '2' with '6589'
6587 -6588 6589 0
-6589 6588 0
-6589 -6587 0
c Var 'sky_left_00004_00002' order represents '3' with '6590'
-6588 6590 0
c Var 'sky_left_00004_00002' direct represents '3' with '6591'
6588 -6590 6591 0
-6591 6590 0
-6591 -6588 0
c Var 'sky_left_00004_00002' order represents '4' with '6592'
-6590 6592 0
c Var 'sky_left_00004_00002' direct represents '4' with '6593'
6590 -6592 6593 0
-6593 6592 0
-6593 -6590 0
c Var 'sky_left_00004_00002' order represents '5' with '6594'
-6592 6594 0
c Var 'sky_left_00004_00002' direct represents '5' with '6595'
6592 -6594 6595 0
-6595 6594 0
-6595 -6592 0
c Var 'sky_left_00004_00002' order represents '6' with '6596'
-6594 6596 0
c Var 'sky_left_00004_00002' direct represents '6' with '6597'
6594 -6596 6597 0
-6597 6596 0
-6597 -6594 0
c Var 'sky_left_00004_00002' order represents '7' with '6598'
-6596 6598 0
c Var 'sky_left_00004_00002' direct represents '7' with '6599'
6596 -6598 6599 0
-6599 6598 0
-6599 -6596 0
c Var 'sky_left_00004_00002' order represents '8' with '6600'
-6598 6600 0
c Var 'sky_left_00004_00002' direct represents '8' with '6601'
6598 -6600 6601 0
-6601 6600 0
-6601 -6598 0
c Var 'sky_left_00004_00002' direct represents '9' with '-6600'
6587 6589 6591 6593 6595 6597 6599 6601 -6600 0
c Encoding variable: sky_left_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00003' order represents '1' with '6602'
c Var 'sky_left_00004_00003' direct represents '1' with '6602'
c Var 'sky_left_00004_00003' order represents '2' with '6603'
-6602 6603 0
c Var 'sky_left_00004_00003' direct represents '2' with '6604'
6602 -6603 6604 0
-6604 6603 0
-6604 -6602 0
c Var 'sky_left_00004_00003' order represents '3' with '6605'
-6603 6605 0
c Var 'sky_left_00004_00003' direct represents '3' with '6606'
6603 -6605 6606 0
-6606 6605 0
-6606 -6603 0
c Var 'sky_left_00004_00003' order represents '4' with '6607'
-6605 6607 0
c Var 'sky_left_00004_00003' direct represents '4' with '6608'
6605 -6607 6608 0
-6608 6607 0
-6608 -6605 0
c Var 'sky_left_00004_00003' order represents '5' with '6609'
-6607 6609 0
c Var 'sky_left_00004_00003' direct represents '5' with '6610'
6607 -6609 6610 0
-6610 6609 0
-6610 -6607 0
c Var 'sky_left_00004_00003' order represents '6' with '6611'
-6609 6611 0
c Var 'sky_left_00004_00003' direct represents '6' with '6612'
6609 -6611 6612 0
-6612 6611 0
-6612 -6609 0
c Var 'sky_left_00004_00003' order represents '7' with '6613'
-6611 6613 0
c Var 'sky_left_00004_00003' direct represents '7' with '6614'
6611 -6613 6614 0
-6614 6613 0
-6614 -6611 0
c Var 'sky_left_00004_00003' order represents '8' with '6615'
-6613 6615 0
c Var 'sky_left_00004_00003' direct represents '8' with '6616'
6613 -6615 6616 0
-6616 6615 0
-6616 -6613 0
c Var 'sky_left_00004_00003' direct represents '9' with '-6615'
6602 6604 6606 6608 6610 6612 6614 6616 -6615 0
c Encoding variable: sky_left_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00004' order represents '1' with '6617'
c Var 'sky_left_00004_00004' direct represents '1' with '6617'
c Var 'sky_left_00004_00004' order represents '2' with '6618'
-6617 6618 0
c Var 'sky_left_00004_00004' direct represents '2' with '6619'
6617 -6618 6619 0
-6619 6618 0
-6619 -6617 0
c Var 'sky_left_00004_00004' order represents '3' with '6620'
-6618 6620 0
c Var 'sky_left_00004_00004' direct represents '3' with '6621'
6618 -6620 6621 0
-6621 6620 0
-6621 -6618 0
c Var 'sky_left_00004_00004' order represents '4' with '6622'
-6620 6622 0
c Var 'sky_left_00004_00004' direct represents '4' with '6623'
6620 -6622 6623 0
-6623 6622 0
-6623 -6620 0
c Var 'sky_left_00004_00004' order represents '5' with '6624'
-6622 6624 0
c Var 'sky_left_00004_00004' direct represents '5' with '6625'
6622 -6624 6625 0
-6625 6624 0
-6625 -6622 0
c Var 'sky_left_00004_00004' order represents '6' with '6626'
-6624 6626 0
c Var 'sky_left_00004_00004' direct represents '6' with '6627'
6624 -6626 6627 0
-6627 6626 0
-6627 -6624 0
c Var 'sky_left_00004_00004' order represents '7' with '6628'
-6626 6628 0
c Var 'sky_left_00004_00004' direct represents '7' with '6629'
6626 -6628 6629 0
-6629 6628 0
-6629 -6626 0
c Var 'sky_left_00004_00004' order represents '8' with '6630'
-6628 6630 0
c Var 'sky_left_00004_00004' direct represents '8' with '6631'
6628 -6630 6631 0
-6631 6630 0
-6631 -6628 0
c Var 'sky_left_00004_00004' direct represents '9' with '-6630'
6617 6619 6621 6623 6625 6627 6629 6631 -6630 0
c Encoding variable: sky_left_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00005' order represents '1' with '6632'
c Var 'sky_left_00004_00005' direct represents '1' with '6632'
c Var 'sky_left_00004_00005' order represents '2' with '6633'
-6632 6633 0
c Var 'sky_left_00004_00005' direct represents '2' with '6634'
6632 -6633 6634 0
-6634 6633 0
-6634 -6632 0
c Var 'sky_left_00004_00005' order represents '3' with '6635'
-6633 6635 0
c Var 'sky_left_00004_00005' direct represents '3' with '6636'
6633 -6635 6636 0
-6636 6635 0
-6636 -6633 0
c Var 'sky_left_00004_00005' order represents '4' with '6637'
-6635 6637 0
c Var 'sky_left_00004_00005' direct represents '4' with '6638'
6635 -6637 6638 0
-6638 6637 0
-6638 -6635 0
c Var 'sky_left_00004_00005' order represents '5' with '6639'
-6637 6639 0
c Var 'sky_left_00004_00005' direct represents '5' with '6640'
6637 -6639 6640 0
-6640 6639 0
-6640 -6637 0
c Var 'sky_left_00004_00005' order represents '6' with '6641'
-6639 6641 0
c Var 'sky_left_00004_00005' direct represents '6' with '6642'
6639 -6641 6642 0
-6642 6641 0
-6642 -6639 0
c Var 'sky_left_00004_00005' order represents '7' with '6643'
-6641 6643 0
c Var 'sky_left_00004_00005' direct represents '7' with '6644'
6641 -6643 6644 0
-6644 6643 0
-6644 -6641 0
c Var 'sky_left_00004_00005' order represents '8' with '6645'
-6643 6645 0
c Var 'sky_left_00004_00005' direct represents '8' with '6646'
6643 -6645 6646 0
-6646 6645 0
-6646 -6643 0
c Var 'sky_left_00004_00005' direct represents '9' with '-6645'
6632 6634 6636 6638 6640 6642 6644 6646 -6645 0
c Encoding variable: sky_left_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00006' order represents '1' with '6647'
c Var 'sky_left_00004_00006' direct represents '1' with '6647'
c Var 'sky_left_00004_00006' order represents '2' with '6648'
-6647 6648 0
c Var 'sky_left_00004_00006' direct represents '2' with '6649'
6647 -6648 6649 0
-6649 6648 0
-6649 -6647 0
c Var 'sky_left_00004_00006' order represents '3' with '6650'
-6648 6650 0
c Var 'sky_left_00004_00006' direct represents '3' with '6651'
6648 -6650 6651 0
-6651 6650 0
-6651 -6648 0
c Var 'sky_left_00004_00006' order represents '4' with '6652'
-6650 6652 0
c Var 'sky_left_00004_00006' direct represents '4' with '6653'
6650 -6652 6653 0
-6653 6652 0
-6653 -6650 0
c Var 'sky_left_00004_00006' order represents '5' with '6654'
-6652 6654 0
c Var 'sky_left_00004_00006' direct represents '5' with '6655'
6652 -6654 6655 0
-6655 6654 0
-6655 -6652 0
c Var 'sky_left_00004_00006' order represents '6' with '6656'
-6654 6656 0
c Var 'sky_left_00004_00006' direct represents '6' with '6657'
6654 -6656 6657 0
-6657 6656 0
-6657 -6654 0
c Var 'sky_left_00004_00006' order represents '7' with '6658'
-6656 6658 0
c Var 'sky_left_00004_00006' direct represents '7' with '6659'
6656 -6658 6659 0
-6659 6658 0
-6659 -6656 0
c Var 'sky_left_00004_00006' order represents '8' with '6660'
-6658 6660 0
c Var 'sky_left_00004_00006' direct represents '8' with '6661'
6658 -6660 6661 0
-6661 6660 0
-6661 -6658 0
c Var 'sky_left_00004_00006' direct represents '9' with '-6660'
6647 6649 6651 6653 6655 6657 6659 6661 -6660 0
c Encoding variable: sky_left_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00007' order represents '1' with '6662'
c Var 'sky_left_00004_00007' direct represents '1' with '6662'
c Var 'sky_left_00004_00007' order represents '2' with '6663'
-6662 6663 0
c Var 'sky_left_00004_00007' direct represents '2' with '6664'
6662 -6663 6664 0
-6664 6663 0
-6664 -6662 0
c Var 'sky_left_00004_00007' order represents '3' with '6665'
-6663 6665 0
c Var 'sky_left_00004_00007' direct represents '3' with '6666'
6663 -6665 6666 0
-6666 6665 0
-6666 -6663 0
c Var 'sky_left_00004_00007' order represents '4' with '6667'
-6665 6667 0
c Var 'sky_left_00004_00007' direct represents '4' with '6668'
6665 -6667 6668 0
-6668 6667 0
-6668 -6665 0
c Var 'sky_left_00004_00007' order represents '5' with '6669'
-6667 6669 0
c Var 'sky_left_00004_00007' direct represents '5' with '6670'
6667 -6669 6670 0
-6670 6669 0
-6670 -6667 0
c Var 'sky_left_00004_00007' order represents '6' with '6671'
-6669 6671 0
c Var 'sky_left_00004_00007' direct represents '6' with '6672'
6669 -6671 6672 0
-6672 6671 0
-6672 -6669 0
c Var 'sky_left_00004_00007' order represents '7' with '6673'
-6671 6673 0
c Var 'sky_left_00004_00007' direct represents '7' with '6674'
6671 -6673 6674 0
-6674 6673 0
-6674 -6671 0
c Var 'sky_left_00004_00007' order represents '8' with '6675'
-6673 6675 0
c Var 'sky_left_00004_00007' direct represents '8' with '6676'
6673 -6675 6676 0
-6676 6675 0
-6676 -6673 0
c Var 'sky_left_00004_00007' direct represents '9' with '-6675'
6662 6664 6666 6668 6670 6672 6674 6676 -6675 0
c Encoding variable: sky_left_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00008' order represents '1' with '6677'
c Var 'sky_left_00004_00008' direct represents '1' with '6677'
c Var 'sky_left_00004_00008' order represents '2' with '6678'
-6677 6678 0
c Var 'sky_left_00004_00008' direct represents '2' with '6679'
6677 -6678 6679 0
-6679 6678 0
-6679 -6677 0
c Var 'sky_left_00004_00008' order represents '3' with '6680'
-6678 6680 0
c Var 'sky_left_00004_00008' direct represents '3' with '6681'
6678 -6680 6681 0
-6681 6680 0
-6681 -6678 0
c Var 'sky_left_00004_00008' order represents '4' with '6682'
-6680 6682 0
c Var 'sky_left_00004_00008' direct represents '4' with '6683'
6680 -6682 6683 0
-6683 6682 0
-6683 -6680 0
c Var 'sky_left_00004_00008' order represents '5' with '6684'
-6682 6684 0
c Var 'sky_left_00004_00008' direct represents '5' with '6685'
6682 -6684 6685 0
-6685 6684 0
-6685 -6682 0
c Var 'sky_left_00004_00008' order represents '6' with '6686'
-6684 6686 0
c Var 'sky_left_00004_00008' direct represents '6' with '6687'
6684 -6686 6687 0
-6687 6686 0
-6687 -6684 0
c Var 'sky_left_00004_00008' order represents '7' with '6688'
-6686 6688 0
c Var 'sky_left_00004_00008' direct represents '7' with '6689'
6686 -6688 6689 0
-6689 6688 0
-6689 -6686 0
c Var 'sky_left_00004_00008' order represents '8' with '6690'
-6688 6690 0
c Var 'sky_left_00004_00008' direct represents '8' with '6691'
6688 -6690 6691 0
-6691 6690 0
-6691 -6688 0
c Var 'sky_left_00004_00008' direct represents '9' with '-6690'
6677 6679 6681 6683 6685 6687 6689 6691 -6690 0
c Encoding variable: sky_left_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'sky_left_00004_00009' order represents '1' with '6692'
c Var 'sky_left_00004_00009' direct represents '1' with '6692'
c Var 'sky_left_00004_00009' order represents '2' with '6693'
-6692 6693 0
c Var 'sky_left_00004_00009' direct represents '2' with '6694'
6692 -6693 6694 0
-6694 6693 0
-6694 -6692 0
c Var 'sky_left_00004_00009' order represents '3' with '6695'
-6693 6695 0
c Var 'sky_left_00004_00009' direct represents '3' with '6696'
6693 -6695 6696 0
-6696 6695 0
-6696 -6693 0
c Var 'sky_left_00004_00009' order represents '4' with '6697'
-6695 6697 0
c Var 'sky_left_00004_00009' direct represents '4' with '6698'
6695 -6697 6698 0
-6698 6697 0
-6698 -6695 0
c Var 'sky_left_00004_00009' order represents '5' with '6699'
-6697 6699 0
c Var 'sky_left_00004_00009' direct represents '5' with '6700'
6697 -6699 6700 0
-6700 6699 0
-6700 -6697 0
c Var 'sky_left_00004_00009' order represents '6' with '6701'
-6699 6701 0
c Var 'sky_left_00004_00009' direct represents '6' with '6702'
6699 -6701 6702 0
-6702 6701 0
-6702 -6699 0
c Var 'sky_left_00004_00009' order represents '7' with '6703'
-6701 6703 0
c Var 'sky_left_00004_00009' direct represents '7' with '6704'
6701 -6703 6704 0
-6704 6703 0
-6704 -6701 0
c Var 'sky_left_00004_00009' order represents '8' with '6705'
-6703 6705 0
c Var 'sky_left_00004_00009' direct represents '8' with '6706'
6703 -6705 6706 0
-6706 6705 0
-6706 -6703 0
c Var 'sky_left_00004_00009' direct represents '9' with '-6705'
6692 6694 6696 6698 6700 6702 6704 6706 -6705 0
c Encoding variable: variant_fields_00001_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00001' order represents '1' with '6707'
c Var 'variant_fields_00001_00001_00001' direct represents '1' with '6707'
c Var 'variant_fields_00001_00001_00001' order represents '2' with '6708'
-6707 6708 0
c Var 'variant_fields_00001_00001_00001' direct represents '2' with '6709'
6707 -6708 6709 0
-6709 6708 0
-6709 -6707 0
c Var 'variant_fields_00001_00001_00001' order represents '3' with '6710'
-6708 6710 0
c Var 'variant_fields_00001_00001_00001' direct represents '3' with '6711'
6708 -6710 6711 0
-6711 6710 0
-6711 -6708 0
c Var 'variant_fields_00001_00001_00001' order represents '4' with '6712'
-6710 6712 0
c Var 'variant_fields_00001_00001_00001' direct represents '4' with '6713'
6710 -6712 6713 0
-6713 6712 0
-6713 -6710 0
c Var 'variant_fields_00001_00001_00001' order represents '5' with '6714'
-6712 6714 0
c Var 'variant_fields_00001_00001_00001' direct represents '5' with '6715'
6712 -6714 6715 0
-6715 6714 0
-6715 -6712 0
c Var 'variant_fields_00001_00001_00001' order represents '6' with '6716'
-6714 6716 0
c Var 'variant_fields_00001_00001_00001' direct represents '6' with '6717'
6714 -6716 6717 0
-6717 6716 0
-6717 -6714 0
c Var 'variant_fields_00001_00001_00001' order represents '7' with '6718'
-6716 6718 0
c Var 'variant_fields_00001_00001_00001' direct represents '7' with '6719'
6716 -6718 6719 0
-6719 6718 0
-6719 -6716 0
c Var 'variant_fields_00001_00001_00001' order represents '8' with '6720'
-6718 6720 0
c Var 'variant_fields_00001_00001_00001' direct represents '8' with '6721'
6718 -6720 6721 0
-6721 6720 0
-6721 -6718 0
c Var 'variant_fields_00001_00001_00001' direct represents '9' with '-6720'
6707 6709 6711 6713 6715 6717 6719 6721 -6720 0
c Encoding variable: variant_fields_00001_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00002' order represents '1' with '6722'
c Var 'variant_fields_00001_00001_00002' direct represents '1' with '6722'
c Var 'variant_fields_00001_00001_00002' order represents '2' with '6723'
-6722 6723 0
c Var 'variant_fields_00001_00001_00002' direct represents '2' with '6724'
6722 -6723 6724 0
-6724 6723 0
-6724 -6722 0
c Var 'variant_fields_00001_00001_00002' order represents '3' with '6725'
-6723 6725 0
c Var 'variant_fields_00001_00001_00002' direct represents '3' with '6726'
6723 -6725 6726 0
-6726 6725 0
-6726 -6723 0
c Var 'variant_fields_00001_00001_00002' order represents '4' with '6727'
-6725 6727 0
c Var 'variant_fields_00001_00001_00002' direct represents '4' with '6728'
6725 -6727 6728 0
-6728 6727 0
-6728 -6725 0
c Var 'variant_fields_00001_00001_00002' order represents '5' with '6729'
-6727 6729 0
c Var 'variant_fields_00001_00001_00002' direct represents '5' with '6730'
6727 -6729 6730 0
-6730 6729 0
-6730 -6727 0
c Var 'variant_fields_00001_00001_00002' order represents '6' with '6731'
-6729 6731 0
c Var 'variant_fields_00001_00001_00002' direct represents '6' with '6732'
6729 -6731 6732 0
-6732 6731 0
-6732 -6729 0
c Var 'variant_fields_00001_00001_00002' order represents '7' with '6733'
-6731 6733 0
c Var 'variant_fields_00001_00001_00002' direct represents '7' with '6734'
6731 -6733 6734 0
-6734 6733 0
-6734 -6731 0
c Var 'variant_fields_00001_00001_00002' order represents '8' with '6735'
-6733 6735 0
c Var 'variant_fields_00001_00001_00002' direct represents '8' with '6736'
6733 -6735 6736 0
-6736 6735 0
-6736 -6733 0
c Var 'variant_fields_00001_00001_00002' direct represents '9' with '-6735'
6722 6724 6726 6728 6730 6732 6734 6736 -6735 0
c Encoding variable: variant_fields_00001_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00003' order represents '1' with '6737'
c Var 'variant_fields_00001_00001_00003' direct represents '1' with '6737'
c Var 'variant_fields_00001_00001_00003' order represents '2' with '6738'
-6737 6738 0
c Var 'variant_fields_00001_00001_00003' direct represents '2' with '6739'
6737 -6738 6739 0
-6739 6738 0
-6739 -6737 0
c Var 'variant_fields_00001_00001_00003' order represents '3' with '6740'
-6738 6740 0
c Var 'variant_fields_00001_00001_00003' direct represents '3' with '6741'
6738 -6740 6741 0
-6741 6740 0
-6741 -6738 0
c Var 'variant_fields_00001_00001_00003' order represents '4' with '6742'
-6740 6742 0
c Var 'variant_fields_00001_00001_00003' direct represents '4' with '6743'
6740 -6742 6743 0
-6743 6742 0
-6743 -6740 0
c Var 'variant_fields_00001_00001_00003' order represents '5' with '6744'
-6742 6744 0
c Var 'variant_fields_00001_00001_00003' direct represents '5' with '6745'
6742 -6744 6745 0
-6745 6744 0
-6745 -6742 0
c Var 'variant_fields_00001_00001_00003' order represents '6' with '6746'
-6744 6746 0
c Var 'variant_fields_00001_00001_00003' direct represents '6' with '6747'
6744 -6746 6747 0
-6747 6746 0
-6747 -6744 0
c Var 'variant_fields_00001_00001_00003' order represents '7' with '6748'
-6746 6748 0
c Var 'variant_fields_00001_00001_00003' direct represents '7' with '6749'
6746 -6748 6749 0
-6749 6748 0
-6749 -6746 0
c Var 'variant_fields_00001_00001_00003' order represents '8' with '6750'
-6748 6750 0
c Var 'variant_fields_00001_00001_00003' direct represents '8' with '6751'
6748 -6750 6751 0
-6751 6750 0
-6751 -6748 0
c Var 'variant_fields_00001_00001_00003' direct represents '9' with '-6750'
6737 6739 6741 6743 6745 6747 6749 6751 -6750 0
c Encoding variable: variant_fields_00001_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00004' order represents '1' with '6752'
c Var 'variant_fields_00001_00001_00004' direct represents '1' with '6752'
c Var 'variant_fields_00001_00001_00004' order represents '2' with '6753'
-6752 6753 0
c Var 'variant_fields_00001_00001_00004' direct represents '2' with '6754'
6752 -6753 6754 0
-6754 6753 0
-6754 -6752 0
c Var 'variant_fields_00001_00001_00004' order represents '3' with '6755'
-6753 6755 0
c Var 'variant_fields_00001_00001_00004' direct represents '3' with '6756'
6753 -6755 6756 0
-6756 6755 0
-6756 -6753 0
c Var 'variant_fields_00001_00001_00004' order represents '4' with '6757'
-6755 6757 0
c Var 'variant_fields_00001_00001_00004' direct represents '4' with '6758'
6755 -6757 6758 0
-6758 6757 0
-6758 -6755 0
c Var 'variant_fields_00001_00001_00004' order represents '5' with '6759'
-6757 6759 0
c Var 'variant_fields_00001_00001_00004' direct represents '5' with '6760'
6757 -6759 6760 0
-6760 6759 0
-6760 -6757 0
c Var 'variant_fields_00001_00001_00004' order represents '6' with '6761'
-6759 6761 0
c Var 'variant_fields_00001_00001_00004' direct represents '6' with '6762'
6759 -6761 6762 0
-6762 6761 0
-6762 -6759 0
c Var 'variant_fields_00001_00001_00004' order represents '7' with '6763'
-6761 6763 0
c Var 'variant_fields_00001_00001_00004' direct represents '7' with '6764'
6761 -6763 6764 0
-6764 6763 0
-6764 -6761 0
c Var 'variant_fields_00001_00001_00004' order represents '8' with '6765'
-6763 6765 0
c Var 'variant_fields_00001_00001_00004' direct represents '8' with '6766'
6763 -6765 6766 0
-6766 6765 0
-6766 -6763 0
c Var 'variant_fields_00001_00001_00004' direct represents '9' with '-6765'
6752 6754 6756 6758 6760 6762 6764 6766 -6765 0
c Encoding variable: variant_fields_00001_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00005' order represents '1' with '6767'
c Var 'variant_fields_00001_00001_00005' direct represents '1' with '6767'
c Var 'variant_fields_00001_00001_00005' order represents '2' with '6768'
-6767 6768 0
c Var 'variant_fields_00001_00001_00005' direct represents '2' with '6769'
6767 -6768 6769 0
-6769 6768 0
-6769 -6767 0
c Var 'variant_fields_00001_00001_00005' order represents '3' with '6770'
-6768 6770 0
c Var 'variant_fields_00001_00001_00005' direct represents '3' with '6771'
6768 -6770 6771 0
-6771 6770 0
-6771 -6768 0
c Var 'variant_fields_00001_00001_00005' order represents '4' with '6772'
-6770 6772 0
c Var 'variant_fields_00001_00001_00005' direct represents '4' with '6773'
6770 -6772 6773 0
-6773 6772 0
-6773 -6770 0
c Var 'variant_fields_00001_00001_00005' order represents '5' with '6774'
-6772 6774 0
c Var 'variant_fields_00001_00001_00005' direct represents '5' with '6775'
6772 -6774 6775 0
-6775 6774 0
-6775 -6772 0
c Var 'variant_fields_00001_00001_00005' order represents '6' with '6776'
-6774 6776 0
c Var 'variant_fields_00001_00001_00005' direct represents '6' with '6777'
6774 -6776 6777 0
-6777 6776 0
-6777 -6774 0
c Var 'variant_fields_00001_00001_00005' order represents '7' with '6778'
-6776 6778 0
c Var 'variant_fields_00001_00001_00005' direct represents '7' with '6779'
6776 -6778 6779 0
-6779 6778 0
-6779 -6776 0
c Var 'variant_fields_00001_00001_00005' order represents '8' with '6780'
-6778 6780 0
c Var 'variant_fields_00001_00001_00005' direct represents '8' with '6781'
6778 -6780 6781 0
-6781 6780 0
-6781 -6778 0
c Var 'variant_fields_00001_00001_00005' direct represents '9' with '-6780'
6767 6769 6771 6773 6775 6777 6779 6781 -6780 0
c Encoding variable: variant_fields_00001_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00006' order represents '1' with '6782'
c Var 'variant_fields_00001_00001_00006' direct represents '1' with '6782'
c Var 'variant_fields_00001_00001_00006' order represents '2' with '6783'
-6782 6783 0
c Var 'variant_fields_00001_00001_00006' direct represents '2' with '6784'
6782 -6783 6784 0
-6784 6783 0
-6784 -6782 0
c Var 'variant_fields_00001_00001_00006' order represents '3' with '6785'
-6783 6785 0
c Var 'variant_fields_00001_00001_00006' direct represents '3' with '6786'
6783 -6785 6786 0
-6786 6785 0
-6786 -6783 0
c Var 'variant_fields_00001_00001_00006' order represents '4' with '6787'
-6785 6787 0
c Var 'variant_fields_00001_00001_00006' direct represents '4' with '6788'
6785 -6787 6788 0
-6788 6787 0
-6788 -6785 0
c Var 'variant_fields_00001_00001_00006' order represents '5' with '6789'
-6787 6789 0
c Var 'variant_fields_00001_00001_00006' direct represents '5' with '6790'
6787 -6789 6790 0
-6790 6789 0
-6790 -6787 0
c Var 'variant_fields_00001_00001_00006' order represents '6' with '6791'
-6789 6791 0
c Var 'variant_fields_00001_00001_00006' direct represents '6' with '6792'
6789 -6791 6792 0
-6792 6791 0
-6792 -6789 0
c Var 'variant_fields_00001_00001_00006' order represents '7' with '6793'
-6791 6793 0
c Var 'variant_fields_00001_00001_00006' direct represents '7' with '6794'
6791 -6793 6794 0
-6794 6793 0
-6794 -6791 0
c Var 'variant_fields_00001_00001_00006' order represents '8' with '6795'
-6793 6795 0
c Var 'variant_fields_00001_00001_00006' direct represents '8' with '6796'
6793 -6795 6796 0
-6796 6795 0
-6796 -6793 0
c Var 'variant_fields_00001_00001_00006' direct represents '9' with '-6795'
6782 6784 6786 6788 6790 6792 6794 6796 -6795 0
c Encoding variable: variant_fields_00001_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00007' order represents '1' with '6797'
c Var 'variant_fields_00001_00001_00007' direct represents '1' with '6797'
c Var 'variant_fields_00001_00001_00007' order represents '2' with '6798'
-6797 6798 0
c Var 'variant_fields_00001_00001_00007' direct represents '2' with '6799'
6797 -6798 6799 0
-6799 6798 0
-6799 -6797 0
c Var 'variant_fields_00001_00001_00007' order represents '3' with '6800'
-6798 6800 0
c Var 'variant_fields_00001_00001_00007' direct represents '3' with '6801'
6798 -6800 6801 0
-6801 6800 0
-6801 -6798 0
c Var 'variant_fields_00001_00001_00007' order represents '4' with '6802'
-6800 6802 0
c Var 'variant_fields_00001_00001_00007' direct represents '4' with '6803'
6800 -6802 6803 0
-6803 6802 0
-6803 -6800 0
c Var 'variant_fields_00001_00001_00007' order represents '5' with '6804'
-6802 6804 0
c Var 'variant_fields_00001_00001_00007' direct represents '5' with '6805'
6802 -6804 6805 0
-6805 6804 0
-6805 -6802 0
c Var 'variant_fields_00001_00001_00007' order represents '6' with '6806'
-6804 6806 0
c Var 'variant_fields_00001_00001_00007' direct represents '6' with '6807'
6804 -6806 6807 0
-6807 6806 0
-6807 -6804 0
c Var 'variant_fields_00001_00001_00007' order represents '7' with '6808'
-6806 6808 0
c Var 'variant_fields_00001_00001_00007' direct represents '7' with '6809'
6806 -6808 6809 0
-6809 6808 0
-6809 -6806 0
c Var 'variant_fields_00001_00001_00007' order represents '8' with '6810'
-6808 6810 0
c Var 'variant_fields_00001_00001_00007' direct represents '8' with '6811'
6808 -6810 6811 0
-6811 6810 0
-6811 -6808 0
c Var 'variant_fields_00001_00001_00007' direct represents '9' with '-6810'
6797 6799 6801 6803 6805 6807 6809 6811 -6810 0
c Encoding variable: variant_fields_00001_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00008' order represents '1' with '6812'
c Var 'variant_fields_00001_00001_00008' direct represents '1' with '6812'
c Var 'variant_fields_00001_00001_00008' order represents '2' with '6813'
-6812 6813 0
c Var 'variant_fields_00001_00001_00008' direct represents '2' with '6814'
6812 -6813 6814 0
-6814 6813 0
-6814 -6812 0
c Var 'variant_fields_00001_00001_00008' order represents '3' with '6815'
-6813 6815 0
c Var 'variant_fields_00001_00001_00008' direct represents '3' with '6816'
6813 -6815 6816 0
-6816 6815 0
-6816 -6813 0
c Var 'variant_fields_00001_00001_00008' order represents '4' with '6817'
-6815 6817 0
c Var 'variant_fields_00001_00001_00008' direct represents '4' with '6818'
6815 -6817 6818 0
-6818 6817 0
-6818 -6815 0
c Var 'variant_fields_00001_00001_00008' order represents '5' with '6819'
-6817 6819 0
c Var 'variant_fields_00001_00001_00008' direct represents '5' with '6820'
6817 -6819 6820 0
-6820 6819 0
-6820 -6817 0
c Var 'variant_fields_00001_00001_00008' order represents '6' with '6821'
-6819 6821 0
c Var 'variant_fields_00001_00001_00008' direct represents '6' with '6822'
6819 -6821 6822 0
-6822 6821 0
-6822 -6819 0
c Var 'variant_fields_00001_00001_00008' order represents '7' with '6823'
-6821 6823 0
c Var 'variant_fields_00001_00001_00008' direct represents '7' with '6824'
6821 -6823 6824 0
-6824 6823 0
-6824 -6821 0
c Var 'variant_fields_00001_00001_00008' order represents '8' with '6825'
-6823 6825 0
c Var 'variant_fields_00001_00001_00008' direct represents '8' with '6826'
6823 -6825 6826 0
-6826 6825 0
-6826 -6823 0
c Var 'variant_fields_00001_00001_00008' direct represents '9' with '-6825'
6812 6814 6816 6818 6820 6822 6824 6826 -6825 0
c Encoding variable: variant_fields_00001_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00001_00009' order represents '1' with '6827'
c Var 'variant_fields_00001_00001_00009' direct represents '1' with '6827'
c Var 'variant_fields_00001_00001_00009' order represents '2' with '6828'
-6827 6828 0
c Var 'variant_fields_00001_00001_00009' direct represents '2' with '6829'
6827 -6828 6829 0
-6829 6828 0
-6829 -6827 0
c Var 'variant_fields_00001_00001_00009' order represents '3' with '6830'
-6828 6830 0
c Var 'variant_fields_00001_00001_00009' direct represents '3' with '6831'
6828 -6830 6831 0
-6831 6830 0
-6831 -6828 0
c Var 'variant_fields_00001_00001_00009' order represents '4' with '6832'
-6830 6832 0
c Var 'variant_fields_00001_00001_00009' direct represents '4' with '6833'
6830 -6832 6833 0
-6833 6832 0
-6833 -6830 0
c Var 'variant_fields_00001_00001_00009' order represents '5' with '6834'
-6832 6834 0
c Var 'variant_fields_00001_00001_00009' direct represents '5' with '6835'
6832 -6834 6835 0
-6835 6834 0
-6835 -6832 0
c Var 'variant_fields_00001_00001_00009' order represents '6' with '6836'
-6834 6836 0
c Var 'variant_fields_00001_00001_00009' direct represents '6' with '6837'
6834 -6836 6837 0
-6837 6836 0
-6837 -6834 0
c Var 'variant_fields_00001_00001_00009' order represents '7' with '6838'
-6836 6838 0
c Var 'variant_fields_00001_00001_00009' direct represents '7' with '6839'
6836 -6838 6839 0
-6839 6838 0
-6839 -6836 0
c Var 'variant_fields_00001_00001_00009' order represents '8' with '6840'
-6838 6840 0
c Var 'variant_fields_00001_00001_00009' direct represents '8' with '6841'
6838 -6840 6841 0
-6841 6840 0
-6841 -6838 0
c Var 'variant_fields_00001_00001_00009' direct represents '9' with '-6840'
6827 6829 6831 6833 6835 6837 6839 6841 -6840 0
c Encoding variable: variant_fields_00001_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00001' order represents '1' with '6842'
c Var 'variant_fields_00001_00002_00001' direct represents '1' with '6842'
c Var 'variant_fields_00001_00002_00001' order represents '2' with '6843'
-6842 6843 0
c Var 'variant_fields_00001_00002_00001' direct represents '2' with '6844'
6842 -6843 6844 0
-6844 6843 0
-6844 -6842 0
c Var 'variant_fields_00001_00002_00001' order represents '3' with '6845'
-6843 6845 0
c Var 'variant_fields_00001_00002_00001' direct represents '3' with '6846'
6843 -6845 6846 0
-6846 6845 0
-6846 -6843 0
c Var 'variant_fields_00001_00002_00001' order represents '4' with '6847'
-6845 6847 0
c Var 'variant_fields_00001_00002_00001' direct represents '4' with '6848'
6845 -6847 6848 0
-6848 6847 0
-6848 -6845 0
c Var 'variant_fields_00001_00002_00001' order represents '5' with '6849'
-6847 6849 0
c Var 'variant_fields_00001_00002_00001' direct represents '5' with '6850'
6847 -6849 6850 0
-6850 6849 0
-6850 -6847 0
c Var 'variant_fields_00001_00002_00001' order represents '6' with '6851'
-6849 6851 0
c Var 'variant_fields_00001_00002_00001' direct represents '6' with '6852'
6849 -6851 6852 0
-6852 6851 0
-6852 -6849 0
c Var 'variant_fields_00001_00002_00001' order represents '7' with '6853'
-6851 6853 0
c Var 'variant_fields_00001_00002_00001' direct represents '7' with '6854'
6851 -6853 6854 0
-6854 6853 0
-6854 -6851 0
c Var 'variant_fields_00001_00002_00001' order represents '8' with '6855'
-6853 6855 0
c Var 'variant_fields_00001_00002_00001' direct represents '8' with '6856'
6853 -6855 6856 0
-6856 6855 0
-6856 -6853 0
c Var 'variant_fields_00001_00002_00001' direct represents '9' with '-6855'
6842 6844 6846 6848 6850 6852 6854 6856 -6855 0
c Encoding variable: variant_fields_00001_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00002' order represents '1' with '6857'
c Var 'variant_fields_00001_00002_00002' direct represents '1' with '6857'
c Var 'variant_fields_00001_00002_00002' order represents '2' with '6858'
-6857 6858 0
c Var 'variant_fields_00001_00002_00002' direct represents '2' with '6859'
6857 -6858 6859 0
-6859 6858 0
-6859 -6857 0
c Var 'variant_fields_00001_00002_00002' order represents '3' with '6860'
-6858 6860 0
c Var 'variant_fields_00001_00002_00002' direct represents '3' with '6861'
6858 -6860 6861 0
-6861 6860 0
-6861 -6858 0
c Var 'variant_fields_00001_00002_00002' order represents '4' with '6862'
-6860 6862 0
c Var 'variant_fields_00001_00002_00002' direct represents '4' with '6863'
6860 -6862 6863 0
-6863 6862 0
-6863 -6860 0
c Var 'variant_fields_00001_00002_00002' order represents '5' with '6864'
-6862 6864 0
c Var 'variant_fields_00001_00002_00002' direct represents '5' with '6865'
6862 -6864 6865 0
-6865 6864 0
-6865 -6862 0
c Var 'variant_fields_00001_00002_00002' order represents '6' with '6866'
-6864 6866 0
c Var 'variant_fields_00001_00002_00002' direct represents '6' with '6867'
6864 -6866 6867 0
-6867 6866 0
-6867 -6864 0
c Var 'variant_fields_00001_00002_00002' order represents '7' with '6868'
-6866 6868 0
c Var 'variant_fields_00001_00002_00002' direct represents '7' with '6869'
6866 -6868 6869 0
-6869 6868 0
-6869 -6866 0
c Var 'variant_fields_00001_00002_00002' order represents '8' with '6870'
-6868 6870 0
c Var 'variant_fields_00001_00002_00002' direct represents '8' with '6871'
6868 -6870 6871 0
-6871 6870 0
-6871 -6868 0
c Var 'variant_fields_00001_00002_00002' direct represents '9' with '-6870'
6857 6859 6861 6863 6865 6867 6869 6871 -6870 0
c Encoding variable: variant_fields_00001_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00003' order represents '1' with '6872'
c Var 'variant_fields_00001_00002_00003' direct represents '1' with '6872'
c Var 'variant_fields_00001_00002_00003' order represents '2' with '6873'
-6872 6873 0
c Var 'variant_fields_00001_00002_00003' direct represents '2' with '6874'
6872 -6873 6874 0
-6874 6873 0
-6874 -6872 0
c Var 'variant_fields_00001_00002_00003' order represents '3' with '6875'
-6873 6875 0
c Var 'variant_fields_00001_00002_00003' direct represents '3' with '6876'
6873 -6875 6876 0
-6876 6875 0
-6876 -6873 0
c Var 'variant_fields_00001_00002_00003' order represents '4' with '6877'
-6875 6877 0
c Var 'variant_fields_00001_00002_00003' direct represents '4' with '6878'
6875 -6877 6878 0
-6878 6877 0
-6878 -6875 0
c Var 'variant_fields_00001_00002_00003' order represents '5' with '6879'
-6877 6879 0
c Var 'variant_fields_00001_00002_00003' direct represents '5' with '6880'
6877 -6879 6880 0
-6880 6879 0
-6880 -6877 0
c Var 'variant_fields_00001_00002_00003' order represents '6' with '6881'
-6879 6881 0
c Var 'variant_fields_00001_00002_00003' direct represents '6' with '6882'
6879 -6881 6882 0
-6882 6881 0
-6882 -6879 0
c Var 'variant_fields_00001_00002_00003' order represents '7' with '6883'
-6881 6883 0
c Var 'variant_fields_00001_00002_00003' direct represents '7' with '6884'
6881 -6883 6884 0
-6884 6883 0
-6884 -6881 0
c Var 'variant_fields_00001_00002_00003' order represents '8' with '6885'
-6883 6885 0
c Var 'variant_fields_00001_00002_00003' direct represents '8' with '6886'
6883 -6885 6886 0
-6886 6885 0
-6886 -6883 0
c Var 'variant_fields_00001_00002_00003' direct represents '9' with '-6885'
6872 6874 6876 6878 6880 6882 6884 6886 -6885 0
c Encoding variable: variant_fields_00001_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00004' order represents '1' with '6887'
c Var 'variant_fields_00001_00002_00004' direct represents '1' with '6887'
c Var 'variant_fields_00001_00002_00004' order represents '2' with '6888'
-6887 6888 0
c Var 'variant_fields_00001_00002_00004' direct represents '2' with '6889'
6887 -6888 6889 0
-6889 6888 0
-6889 -6887 0
c Var 'variant_fields_00001_00002_00004' order represents '3' with '6890'
-6888 6890 0
c Var 'variant_fields_00001_00002_00004' direct represents '3' with '6891'
6888 -6890 6891 0
-6891 6890 0
-6891 -6888 0
c Var 'variant_fields_00001_00002_00004' order represents '4' with '6892'
-6890 6892 0
c Var 'variant_fields_00001_00002_00004' direct represents '4' with '6893'
6890 -6892 6893 0
-6893 6892 0
-6893 -6890 0
c Var 'variant_fields_00001_00002_00004' order represents '5' with '6894'
-6892 6894 0
c Var 'variant_fields_00001_00002_00004' direct represents '5' with '6895'
6892 -6894 6895 0
-6895 6894 0
-6895 -6892 0
c Var 'variant_fields_00001_00002_00004' order represents '6' with '6896'
-6894 6896 0
c Var 'variant_fields_00001_00002_00004' direct represents '6' with '6897'
6894 -6896 6897 0
-6897 6896 0
-6897 -6894 0
c Var 'variant_fields_00001_00002_00004' order represents '7' with '6898'
-6896 6898 0
c Var 'variant_fields_00001_00002_00004' direct represents '7' with '6899'
6896 -6898 6899 0
-6899 6898 0
-6899 -6896 0
c Var 'variant_fields_00001_00002_00004' order represents '8' with '6900'
-6898 6900 0
c Var 'variant_fields_00001_00002_00004' direct represents '8' with '6901'
6898 -6900 6901 0
-6901 6900 0
-6901 -6898 0
c Var 'variant_fields_00001_00002_00004' direct represents '9' with '-6900'
6887 6889 6891 6893 6895 6897 6899 6901 -6900 0
c Encoding variable: variant_fields_00001_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00005' order represents '1' with '6902'
c Var 'variant_fields_00001_00002_00005' direct represents '1' with '6902'
c Var 'variant_fields_00001_00002_00005' order represents '2' with '6903'
-6902 6903 0
c Var 'variant_fields_00001_00002_00005' direct represents '2' with '6904'
6902 -6903 6904 0
-6904 6903 0
-6904 -6902 0
c Var 'variant_fields_00001_00002_00005' order represents '3' with '6905'
-6903 6905 0
c Var 'variant_fields_00001_00002_00005' direct represents '3' with '6906'
6903 -6905 6906 0
-6906 6905 0
-6906 -6903 0
c Var 'variant_fields_00001_00002_00005' order represents '4' with '6907'
-6905 6907 0
c Var 'variant_fields_00001_00002_00005' direct represents '4' with '6908'
6905 -6907 6908 0
-6908 6907 0
-6908 -6905 0
c Var 'variant_fields_00001_00002_00005' order represents '5' with '6909'
-6907 6909 0
c Var 'variant_fields_00001_00002_00005' direct represents '5' with '6910'
6907 -6909 6910 0
-6910 6909 0
-6910 -6907 0
c Var 'variant_fields_00001_00002_00005' order represents '6' with '6911'
-6909 6911 0
c Var 'variant_fields_00001_00002_00005' direct represents '6' with '6912'
6909 -6911 6912 0
-6912 6911 0
-6912 -6909 0
c Var 'variant_fields_00001_00002_00005' order represents '7' with '6913'
-6911 6913 0
c Var 'variant_fields_00001_00002_00005' direct represents '7' with '6914'
6911 -6913 6914 0
-6914 6913 0
-6914 -6911 0
c Var 'variant_fields_00001_00002_00005' order represents '8' with '6915'
-6913 6915 0
c Var 'variant_fields_00001_00002_00005' direct represents '8' with '6916'
6913 -6915 6916 0
-6916 6915 0
-6916 -6913 0
c Var 'variant_fields_00001_00002_00005' direct represents '9' with '-6915'
6902 6904 6906 6908 6910 6912 6914 6916 -6915 0
c Encoding variable: variant_fields_00001_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00006' order represents '1' with '6917'
c Var 'variant_fields_00001_00002_00006' direct represents '1' with '6917'
c Var 'variant_fields_00001_00002_00006' order represents '2' with '6918'
-6917 6918 0
c Var 'variant_fields_00001_00002_00006' direct represents '2' with '6919'
6917 -6918 6919 0
-6919 6918 0
-6919 -6917 0
c Var 'variant_fields_00001_00002_00006' order represents '3' with '6920'
-6918 6920 0
c Var 'variant_fields_00001_00002_00006' direct represents '3' with '6921'
6918 -6920 6921 0
-6921 6920 0
-6921 -6918 0
c Var 'variant_fields_00001_00002_00006' order represents '4' with '6922'
-6920 6922 0
c Var 'variant_fields_00001_00002_00006' direct represents '4' with '6923'
6920 -6922 6923 0
-6923 6922 0
-6923 -6920 0
c Var 'variant_fields_00001_00002_00006' order represents '5' with '6924'
-6922 6924 0
c Var 'variant_fields_00001_00002_00006' direct represents '5' with '6925'
6922 -6924 6925 0
-6925 6924 0
-6925 -6922 0
c Var 'variant_fields_00001_00002_00006' order represents '6' with '6926'
-6924 6926 0
c Var 'variant_fields_00001_00002_00006' direct represents '6' with '6927'
6924 -6926 6927 0
-6927 6926 0
-6927 -6924 0
c Var 'variant_fields_00001_00002_00006' order represents '7' with '6928'
-6926 6928 0
c Var 'variant_fields_00001_00002_00006' direct represents '7' with '6929'
6926 -6928 6929 0
-6929 6928 0
-6929 -6926 0
c Var 'variant_fields_00001_00002_00006' order represents '8' with '6930'
-6928 6930 0
c Var 'variant_fields_00001_00002_00006' direct represents '8' with '6931'
6928 -6930 6931 0
-6931 6930 0
-6931 -6928 0
c Var 'variant_fields_00001_00002_00006' direct represents '9' with '-6930'
6917 6919 6921 6923 6925 6927 6929 6931 -6930 0
c Encoding variable: variant_fields_00001_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00007' order represents '1' with '6932'
c Var 'variant_fields_00001_00002_00007' direct represents '1' with '6932'
c Var 'variant_fields_00001_00002_00007' order represents '2' with '6933'
-6932 6933 0
c Var 'variant_fields_00001_00002_00007' direct represents '2' with '6934'
6932 -6933 6934 0
-6934 6933 0
-6934 -6932 0
c Var 'variant_fields_00001_00002_00007' order represents '3' with '6935'
-6933 6935 0
c Var 'variant_fields_00001_00002_00007' direct represents '3' with '6936'
6933 -6935 6936 0
-6936 6935 0
-6936 -6933 0
c Var 'variant_fields_00001_00002_00007' order represents '4' with '6937'
-6935 6937 0
c Var 'variant_fields_00001_00002_00007' direct represents '4' with '6938'
6935 -6937 6938 0
-6938 6937 0
-6938 -6935 0
c Var 'variant_fields_00001_00002_00007' order represents '5' with '6939'
-6937 6939 0
c Var 'variant_fields_00001_00002_00007' direct represents '5' with '6940'
6937 -6939 6940 0
-6940 6939 0
-6940 -6937 0
c Var 'variant_fields_00001_00002_00007' order represents '6' with '6941'
-6939 6941 0
c Var 'variant_fields_00001_00002_00007' direct represents '6' with '6942'
6939 -6941 6942 0
-6942 6941 0
-6942 -6939 0
c Var 'variant_fields_00001_00002_00007' order represents '7' with '6943'
-6941 6943 0
c Var 'variant_fields_00001_00002_00007' direct represents '7' with '6944'
6941 -6943 6944 0
-6944 6943 0
-6944 -6941 0
c Var 'variant_fields_00001_00002_00007' order represents '8' with '6945'
-6943 6945 0
c Var 'variant_fields_00001_00002_00007' direct represents '8' with '6946'
6943 -6945 6946 0
-6946 6945 0
-6946 -6943 0
c Var 'variant_fields_00001_00002_00007' direct represents '9' with '-6945'
6932 6934 6936 6938 6940 6942 6944 6946 -6945 0
c Encoding variable: variant_fields_00001_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00008' order represents '1' with '6947'
c Var 'variant_fields_00001_00002_00008' direct represents '1' with '6947'
c Var 'variant_fields_00001_00002_00008' order represents '2' with '6948'
-6947 6948 0
c Var 'variant_fields_00001_00002_00008' direct represents '2' with '6949'
6947 -6948 6949 0
-6949 6948 0
-6949 -6947 0
c Var 'variant_fields_00001_00002_00008' order represents '3' with '6950'
-6948 6950 0
c Var 'variant_fields_00001_00002_00008' direct represents '3' with '6951'
6948 -6950 6951 0
-6951 6950 0
-6951 -6948 0
c Var 'variant_fields_00001_00002_00008' order represents '4' with '6952'
-6950 6952 0
c Var 'variant_fields_00001_00002_00008' direct represents '4' with '6953'
6950 -6952 6953 0
-6953 6952 0
-6953 -6950 0
c Var 'variant_fields_00001_00002_00008' order represents '5' with '6954'
-6952 6954 0
c Var 'variant_fields_00001_00002_00008' direct represents '5' with '6955'
6952 -6954 6955 0
-6955 6954 0
-6955 -6952 0
c Var 'variant_fields_00001_00002_00008' order represents '6' with '6956'
-6954 6956 0
c Var 'variant_fields_00001_00002_00008' direct represents '6' with '6957'
6954 -6956 6957 0
-6957 6956 0
-6957 -6954 0
c Var 'variant_fields_00001_00002_00008' order represents '7' with '6958'
-6956 6958 0
c Var 'variant_fields_00001_00002_00008' direct represents '7' with '6959'
6956 -6958 6959 0
-6959 6958 0
-6959 -6956 0
c Var 'variant_fields_00001_00002_00008' order represents '8' with '6960'
-6958 6960 0
c Var 'variant_fields_00001_00002_00008' direct represents '8' with '6961'
6958 -6960 6961 0
-6961 6960 0
-6961 -6958 0
c Var 'variant_fields_00001_00002_00008' direct represents '9' with '-6960'
6947 6949 6951 6953 6955 6957 6959 6961 -6960 0
c Encoding variable: variant_fields_00001_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00009' order represents '1' with '6962'
c Var 'variant_fields_00001_00002_00009' direct represents '1' with '6962'
c Var 'variant_fields_00001_00002_00009' order represents '2' with '6963'
-6962 6963 0
c Var 'variant_fields_00001_00002_00009' direct represents '2' with '6964'
6962 -6963 6964 0
-6964 6963 0
-6964 -6962 0
c Var 'variant_fields_00001_00002_00009' order represents '3' with '6965'
-6963 6965 0
c Var 'variant_fields_00001_00002_00009' direct represents '3' with '6966'
6963 -6965 6966 0
-6966 6965 0
-6966 -6963 0
c Var 'variant_fields_00001_00002_00009' order represents '4' with '6967'
-6965 6967 0
c Var 'variant_fields_00001_00002_00009' direct represents '4' with '6968'
6965 -6967 6968 0
-6968 6967 0
-6968 -6965 0
c Var 'variant_fields_00001_00002_00009' order represents '5' with '6969'
-6967 6969 0
c Var 'variant_fields_00001_00002_00009' direct represents '5' with '6970'
6967 -6969 6970 0
-6970 6969 0
-6970 -6967 0
c Var 'variant_fields_00001_00002_00009' order represents '6' with '6971'
-6969 6971 0
c Var 'variant_fields_00001_00002_00009' direct represents '6' with '6972'
6969 -6971 6972 0
-6972 6971 0
-6972 -6969 0
c Var 'variant_fields_00001_00002_00009' order represents '7' with '6973'
-6971 6973 0
c Var 'variant_fields_00001_00002_00009' direct represents '7' with '6974'
6971 -6973 6974 0
-6974 6973 0
-6974 -6971 0
c Var 'variant_fields_00001_00002_00009' order represents '8' with '6975'
-6973 6975 0
c Var 'variant_fields_00001_00002_00009' direct represents '8' with '6976'
6973 -6975 6976 0
-6976 6975 0
-6976 -6973 0
c Var 'variant_fields_00001_00002_00009' direct represents '9' with '-6975'
6962 6964 6966 6968 6970 6972 6974 6976 -6975 0
c Encoding variable: variant_fields_00001_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00001' order represents '1' with '6977'
c Var 'variant_fields_00001_00003_00001' direct represents '1' with '6977'
c Var 'variant_fields_00001_00003_00001' order represents '2' with '6978'
-6977 6978 0
c Var 'variant_fields_00001_00003_00001' direct represents '2' with '6979'
6977 -6978 6979 0
-6979 6978 0
-6979 -6977 0
c Var 'variant_fields_00001_00003_00001' order represents '3' with '6980'
-6978 6980 0
c Var 'variant_fields_00001_00003_00001' direct represents '3' with '6981'
6978 -6980 6981 0
-6981 6980 0
-6981 -6978 0
c Var 'variant_fields_00001_00003_00001' order represents '4' with '6982'
-6980 6982 0
c Var 'variant_fields_00001_00003_00001' direct represents '4' with '6983'
6980 -6982 6983 0
-6983 6982 0
-6983 -6980 0
c Var 'variant_fields_00001_00003_00001' order represents '5' with '6984'
-6982 6984 0
c Var 'variant_fields_00001_00003_00001' direct represents '5' with '6985'
6982 -6984 6985 0
-6985 6984 0
-6985 -6982 0
c Var 'variant_fields_00001_00003_00001' order represents '6' with '6986'
-6984 6986 0
c Var 'variant_fields_00001_00003_00001' direct represents '6' with '6987'
6984 -6986 6987 0
-6987 6986 0
-6987 -6984 0
c Var 'variant_fields_00001_00003_00001' order represents '7' with '6988'
-6986 6988 0
c Var 'variant_fields_00001_00003_00001' direct represents '7' with '6989'
6986 -6988 6989 0
-6989 6988 0
-6989 -6986 0
c Var 'variant_fields_00001_00003_00001' order represents '8' with '6990'
-6988 6990 0
c Var 'variant_fields_00001_00003_00001' direct represents '8' with '6991'
6988 -6990 6991 0
-6991 6990 0
-6991 -6988 0
c Var 'variant_fields_00001_00003_00001' direct represents '9' with '-6990'
6977 6979 6981 6983 6985 6987 6989 6991 -6990 0
c Encoding variable: variant_fields_00001_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00002' order represents '1' with '6992'
c Var 'variant_fields_00001_00003_00002' direct represents '1' with '6992'
c Var 'variant_fields_00001_00003_00002' order represents '2' with '6993'
-6992 6993 0
c Var 'variant_fields_00001_00003_00002' direct represents '2' with '6994'
6992 -6993 6994 0
-6994 6993 0
-6994 -6992 0
c Var 'variant_fields_00001_00003_00002' order represents '3' with '6995'
-6993 6995 0
c Var 'variant_fields_00001_00003_00002' direct represents '3' with '6996'
6993 -6995 6996 0
-6996 6995 0
-6996 -6993 0
c Var 'variant_fields_00001_00003_00002' order represents '4' with '6997'
-6995 6997 0
c Var 'variant_fields_00001_00003_00002' direct represents '4' with '6998'
6995 -6997 6998 0
-6998 6997 0
-6998 -6995 0
c Var 'variant_fields_00001_00003_00002' order represents '5' with '6999'
-6997 6999 0
c Var 'variant_fields_00001_00003_00002' direct represents '5' with '7000'
6997 -6999 7000 0
-7000 6999 0
-7000 -6997 0
c Var 'variant_fields_00001_00003_00002' order represents '6' with '7001'
-6999 7001 0
c Var 'variant_fields_00001_00003_00002' direct represents '6' with '7002'
6999 -7001 7002 0
-7002 7001 0
-7002 -6999 0
c Var 'variant_fields_00001_00003_00002' order represents '7' with '7003'
-7001 7003 0
c Var 'variant_fields_00001_00003_00002' direct represents '7' with '7004'
7001 -7003 7004 0
-7004 7003 0
-7004 -7001 0
c Var 'variant_fields_00001_00003_00002' order represents '8' with '7005'
-7003 7005 0
c Var 'variant_fields_00001_00003_00002' direct represents '8' with '7006'
7003 -7005 7006 0
-7006 7005 0
-7006 -7003 0
c Var 'variant_fields_00001_00003_00002' direct represents '9' with '-7005'
6992 6994 6996 6998 7000 7002 7004 7006 -7005 0
c Encoding variable: variant_fields_00001_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00003' order represents '1' with '7007'
c Var 'variant_fields_00001_00003_00003' direct represents '1' with '7007'
c Var 'variant_fields_00001_00003_00003' order represents '2' with '7008'
-7007 7008 0
c Var 'variant_fields_00001_00003_00003' direct represents '2' with '7009'
7007 -7008 7009 0
-7009 7008 0
-7009 -7007 0
c Var 'variant_fields_00001_00003_00003' order represents '3' with '7010'
-7008 7010 0
c Var 'variant_fields_00001_00003_00003' direct represents '3' with '7011'
7008 -7010 7011 0
-7011 7010 0
-7011 -7008 0
c Var 'variant_fields_00001_00003_00003' order represents '4' with '7012'
-7010 7012 0
c Var 'variant_fields_00001_00003_00003' direct represents '4' with '7013'
7010 -7012 7013 0
-7013 7012 0
-7013 -7010 0
c Var 'variant_fields_00001_00003_00003' order represents '5' with '7014'
-7012 7014 0
c Var 'variant_fields_00001_00003_00003' direct represents '5' with '7015'
7012 -7014 7015 0
-7015 7014 0
-7015 -7012 0
c Var 'variant_fields_00001_00003_00003' order represents '6' with '7016'
-7014 7016 0
c Var 'variant_fields_00001_00003_00003' direct represents '6' with '7017'
7014 -7016 7017 0
-7017 7016 0
-7017 -7014 0
c Var 'variant_fields_00001_00003_00003' order represents '7' with '7018'
-7016 7018 0
c Var 'variant_fields_00001_00003_00003' direct represents '7' with '7019'
7016 -7018 7019 0
-7019 7018 0
-7019 -7016 0
c Var 'variant_fields_00001_00003_00003' order represents '8' with '7020'
-7018 7020 0
c Var 'variant_fields_00001_00003_00003' direct represents '8' with '7021'
7018 -7020 7021 0
-7021 7020 0
-7021 -7018 0
c Var 'variant_fields_00001_00003_00003' direct represents '9' with '-7020'
7007 7009 7011 7013 7015 7017 7019 7021 -7020 0
c Encoding variable: variant_fields_00001_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00004' order represents '1' with '7022'
c Var 'variant_fields_00001_00003_00004' direct represents '1' with '7022'
c Var 'variant_fields_00001_00003_00004' order represents '2' with '7023'
-7022 7023 0
c Var 'variant_fields_00001_00003_00004' direct represents '2' with '7024'
7022 -7023 7024 0
-7024 7023 0
-7024 -7022 0
c Var 'variant_fields_00001_00003_00004' order represents '3' with '7025'
-7023 7025 0
c Var 'variant_fields_00001_00003_00004' direct represents '3' with '7026'
7023 -7025 7026 0
-7026 7025 0
-7026 -7023 0
c Var 'variant_fields_00001_00003_00004' order represents '4' with '7027'
-7025 7027 0
c Var 'variant_fields_00001_00003_00004' direct represents '4' with '7028'
7025 -7027 7028 0
-7028 7027 0
-7028 -7025 0
c Var 'variant_fields_00001_00003_00004' order represents '5' with '7029'
-7027 7029 0
c Var 'variant_fields_00001_00003_00004' direct represents '5' with '7030'
7027 -7029 7030 0
-7030 7029 0
-7030 -7027 0
c Var 'variant_fields_00001_00003_00004' order represents '6' with '7031'
-7029 7031 0
c Var 'variant_fields_00001_00003_00004' direct represents '6' with '7032'
7029 -7031 7032 0
-7032 7031 0
-7032 -7029 0
c Var 'variant_fields_00001_00003_00004' order represents '7' with '7033'
-7031 7033 0
c Var 'variant_fields_00001_00003_00004' direct represents '7' with '7034'
7031 -7033 7034 0
-7034 7033 0
-7034 -7031 0
c Var 'variant_fields_00001_00003_00004' order represents '8' with '7035'
-7033 7035 0
c Var 'variant_fields_00001_00003_00004' direct represents '8' with '7036'
7033 -7035 7036 0
-7036 7035 0
-7036 -7033 0
c Var 'variant_fields_00001_00003_00004' direct represents '9' with '-7035'
7022 7024 7026 7028 7030 7032 7034 7036 -7035 0
c Encoding variable: variant_fields_00001_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00005' order represents '1' with '7037'
c Var 'variant_fields_00001_00003_00005' direct represents '1' with '7037'
c Var 'variant_fields_00001_00003_00005' order represents '2' with '7038'
-7037 7038 0
c Var 'variant_fields_00001_00003_00005' direct represents '2' with '7039'
7037 -7038 7039 0
-7039 7038 0
-7039 -7037 0
c Var 'variant_fields_00001_00003_00005' order represents '3' with '7040'
-7038 7040 0
c Var 'variant_fields_00001_00003_00005' direct represents '3' with '7041'
7038 -7040 7041 0
-7041 7040 0
-7041 -7038 0
c Var 'variant_fields_00001_00003_00005' order represents '4' with '7042'
-7040 7042 0
c Var 'variant_fields_00001_00003_00005' direct represents '4' with '7043'
7040 -7042 7043 0
-7043 7042 0
-7043 -7040 0
c Var 'variant_fields_00001_00003_00005' order represents '5' with '7044'
-7042 7044 0
c Var 'variant_fields_00001_00003_00005' direct represents '5' with '7045'
7042 -7044 7045 0
-7045 7044 0
-7045 -7042 0
c Var 'variant_fields_00001_00003_00005' order represents '6' with '7046'
-7044 7046 0
c Var 'variant_fields_00001_00003_00005' direct represents '6' with '7047'
7044 -7046 7047 0
-7047 7046 0
-7047 -7044 0
c Var 'variant_fields_00001_00003_00005' order represents '7' with '7048'
-7046 7048 0
c Var 'variant_fields_00001_00003_00005' direct represents '7' with '7049'
7046 -7048 7049 0
-7049 7048 0
-7049 -7046 0
c Var 'variant_fields_00001_00003_00005' order represents '8' with '7050'
-7048 7050 0
c Var 'variant_fields_00001_00003_00005' direct represents '8' with '7051'
7048 -7050 7051 0
-7051 7050 0
-7051 -7048 0
c Var 'variant_fields_00001_00003_00005' direct represents '9' with '-7050'
7037 7039 7041 7043 7045 7047 7049 7051 -7050 0
c Encoding variable: variant_fields_00001_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00006' order represents '1' with '7052'
c Var 'variant_fields_00001_00003_00006' direct represents '1' with '7052'
c Var 'variant_fields_00001_00003_00006' order represents '2' with '7053'
-7052 7053 0
c Var 'variant_fields_00001_00003_00006' direct represents '2' with '7054'
7052 -7053 7054 0
-7054 7053 0
-7054 -7052 0
c Var 'variant_fields_00001_00003_00006' order represents '3' with '7055'
-7053 7055 0
c Var 'variant_fields_00001_00003_00006' direct represents '3' with '7056'
7053 -7055 7056 0
-7056 7055 0
-7056 -7053 0
c Var 'variant_fields_00001_00003_00006' order represents '4' with '7057'
-7055 7057 0
c Var 'variant_fields_00001_00003_00006' direct represents '4' with '7058'
7055 -7057 7058 0
-7058 7057 0
-7058 -7055 0
c Var 'variant_fields_00001_00003_00006' order represents '5' with '7059'
-7057 7059 0
c Var 'variant_fields_00001_00003_00006' direct represents '5' with '7060'
7057 -7059 7060 0
-7060 7059 0
-7060 -7057 0
c Var 'variant_fields_00001_00003_00006' order represents '6' with '7061'
-7059 7061 0
c Var 'variant_fields_00001_00003_00006' direct represents '6' with '7062'
7059 -7061 7062 0
-7062 7061 0
-7062 -7059 0
c Var 'variant_fields_00001_00003_00006' order represents '7' with '7063'
-7061 7063 0
c Var 'variant_fields_00001_00003_00006' direct represents '7' with '7064'
7061 -7063 7064 0
-7064 7063 0
-7064 -7061 0
c Var 'variant_fields_00001_00003_00006' order represents '8' with '7065'
-7063 7065 0
c Var 'variant_fields_00001_00003_00006' direct represents '8' with '7066'
7063 -7065 7066 0
-7066 7065 0
-7066 -7063 0
c Var 'variant_fields_00001_00003_00006' direct represents '9' with '-7065'
7052 7054 7056 7058 7060 7062 7064 7066 -7065 0
c Encoding variable: variant_fields_00001_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00007' order represents '1' with '7067'
c Var 'variant_fields_00001_00003_00007' direct represents '1' with '7067'
c Var 'variant_fields_00001_00003_00007' order represents '2' with '7068'
-7067 7068 0
c Var 'variant_fields_00001_00003_00007' direct represents '2' with '7069'
7067 -7068 7069 0
-7069 7068 0
-7069 -7067 0
c Var 'variant_fields_00001_00003_00007' order represents '3' with '7070'
-7068 7070 0
c Var 'variant_fields_00001_00003_00007' direct represents '3' with '7071'
7068 -7070 7071 0
-7071 7070 0
-7071 -7068 0
c Var 'variant_fields_00001_00003_00007' order represents '4' with '7072'
-7070 7072 0
c Var 'variant_fields_00001_00003_00007' direct represents '4' with '7073'
7070 -7072 7073 0
-7073 7072 0
-7073 -7070 0
c Var 'variant_fields_00001_00003_00007' order represents '5' with '7074'
-7072 7074 0
c Var 'variant_fields_00001_00003_00007' direct represents '5' with '7075'
7072 -7074 7075 0
-7075 7074 0
-7075 -7072 0
c Var 'variant_fields_00001_00003_00007' order represents '6' with '7076'
-7074 7076 0
c Var 'variant_fields_00001_00003_00007' direct represents '6' with '7077'
7074 -7076 7077 0
-7077 7076 0
-7077 -7074 0
c Var 'variant_fields_00001_00003_00007' order represents '7' with '7078'
-7076 7078 0
c Var 'variant_fields_00001_00003_00007' direct represents '7' with '7079'
7076 -7078 7079 0
-7079 7078 0
-7079 -7076 0
c Var 'variant_fields_00001_00003_00007' order represents '8' with '7080'
-7078 7080 0
c Var 'variant_fields_00001_00003_00007' direct represents '8' with '7081'
7078 -7080 7081 0
-7081 7080 0
-7081 -7078 0
c Var 'variant_fields_00001_00003_00007' direct represents '9' with '-7080'
7067 7069 7071 7073 7075 7077 7079 7081 -7080 0
c Encoding variable: variant_fields_00001_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00008' order represents '1' with '7082'
c Var 'variant_fields_00001_00003_00008' direct represents '1' with '7082'
c Var 'variant_fields_00001_00003_00008' order represents '2' with '7083'
-7082 7083 0
c Var 'variant_fields_00001_00003_00008' direct represents '2' with '7084'
7082 -7083 7084 0
-7084 7083 0
-7084 -7082 0
c Var 'variant_fields_00001_00003_00008' order represents '3' with '7085'
-7083 7085 0
c Var 'variant_fields_00001_00003_00008' direct represents '3' with '7086'
7083 -7085 7086 0
-7086 7085 0
-7086 -7083 0
c Var 'variant_fields_00001_00003_00008' order represents '4' with '7087'
-7085 7087 0
c Var 'variant_fields_00001_00003_00008' direct represents '4' with '7088'
7085 -7087 7088 0
-7088 7087 0
-7088 -7085 0
c Var 'variant_fields_00001_00003_00008' order represents '5' with '7089'
-7087 7089 0
c Var 'variant_fields_00001_00003_00008' direct represents '5' with '7090'
7087 -7089 7090 0
-7090 7089 0
-7090 -7087 0
c Var 'variant_fields_00001_00003_00008' order represents '6' with '7091'
-7089 7091 0
c Var 'variant_fields_00001_00003_00008' direct represents '6' with '7092'
7089 -7091 7092 0
-7092 7091 0
-7092 -7089 0
c Var 'variant_fields_00001_00003_00008' order represents '7' with '7093'
-7091 7093 0
c Var 'variant_fields_00001_00003_00008' direct represents '7' with '7094'
7091 -7093 7094 0
-7094 7093 0
-7094 -7091 0
c Var 'variant_fields_00001_00003_00008' order represents '8' with '7095'
-7093 7095 0
c Var 'variant_fields_00001_00003_00008' direct represents '8' with '7096'
7093 -7095 7096 0
-7096 7095 0
-7096 -7093 0
c Var 'variant_fields_00001_00003_00008' direct represents '9' with '-7095'
7082 7084 7086 7088 7090 7092 7094 7096 -7095 0
c Encoding variable: variant_fields_00001_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00003_00009' order represents '1' with '7097'
c Var 'variant_fields_00001_00003_00009' direct represents '1' with '7097'
c Var 'variant_fields_00001_00003_00009' order represents '2' with '7098'
-7097 7098 0
c Var 'variant_fields_00001_00003_00009' direct represents '2' with '7099'
7097 -7098 7099 0
-7099 7098 0
-7099 -7097 0
c Var 'variant_fields_00001_00003_00009' order represents '3' with '7100'
-7098 7100 0
c Var 'variant_fields_00001_00003_00009' direct represents '3' with '7101'
7098 -7100 7101 0
-7101 7100 0
-7101 -7098 0
c Var 'variant_fields_00001_00003_00009' order represents '4' with '7102'
-7100 7102 0
c Var 'variant_fields_00001_00003_00009' direct represents '4' with '7103'
7100 -7102 7103 0
-7103 7102 0
-7103 -7100 0
c Var 'variant_fields_00001_00003_00009' order represents '5' with '7104'
-7102 7104 0
c Var 'variant_fields_00001_00003_00009' direct represents '5' with '7105'
7102 -7104 7105 0
-7105 7104 0
-7105 -7102 0
c Var 'variant_fields_00001_00003_00009' order represents '6' with '7106'
-7104 7106 0
c Var 'variant_fields_00001_00003_00009' direct represents '6' with '7107'
7104 -7106 7107 0
-7107 7106 0
-7107 -7104 0
c Var 'variant_fields_00001_00003_00009' order represents '7' with '7108'
-7106 7108 0
c Var 'variant_fields_00001_00003_00009' direct represents '7' with '7109'
7106 -7108 7109 0
-7109 7108 0
-7109 -7106 0
c Var 'variant_fields_00001_00003_00009' order represents '8' with '7110'
-7108 7110 0
c Var 'variant_fields_00001_00003_00009' direct represents '8' with '7111'
7108 -7110 7111 0
-7111 7110 0
-7111 -7108 0
c Var 'variant_fields_00001_00003_00009' direct represents '9' with '-7110'
7097 7099 7101 7103 7105 7107 7109 7111 -7110 0
c Encoding variable: variant_fields_00001_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00001' order represents '1' with '7112'
c Var 'variant_fields_00001_00004_00001' direct represents '1' with '7112'
c Var 'variant_fields_00001_00004_00001' order represents '2' with '7113'
-7112 7113 0
c Var 'variant_fields_00001_00004_00001' direct represents '2' with '7114'
7112 -7113 7114 0
-7114 7113 0
-7114 -7112 0
c Var 'variant_fields_00001_00004_00001' order represents '3' with '7115'
-7113 7115 0
c Var 'variant_fields_00001_00004_00001' direct represents '3' with '7116'
7113 -7115 7116 0
-7116 7115 0
-7116 -7113 0
c Var 'variant_fields_00001_00004_00001' order represents '4' with '7117'
-7115 7117 0
c Var 'variant_fields_00001_00004_00001' direct represents '4' with '7118'
7115 -7117 7118 0
-7118 7117 0
-7118 -7115 0
c Var 'variant_fields_00001_00004_00001' order represents '5' with '7119'
-7117 7119 0
c Var 'variant_fields_00001_00004_00001' direct represents '5' with '7120'
7117 -7119 7120 0
-7120 7119 0
-7120 -7117 0
c Var 'variant_fields_00001_00004_00001' order represents '6' with '7121'
-7119 7121 0
c Var 'variant_fields_00001_00004_00001' direct represents '6' with '7122'
7119 -7121 7122 0
-7122 7121 0
-7122 -7119 0
c Var 'variant_fields_00001_00004_00001' order represents '7' with '7123'
-7121 7123 0
c Var 'variant_fields_00001_00004_00001' direct represents '7' with '7124'
7121 -7123 7124 0
-7124 7123 0
-7124 -7121 0
c Var 'variant_fields_00001_00004_00001' order represents '8' with '7125'
-7123 7125 0
c Var 'variant_fields_00001_00004_00001' direct represents '8' with '7126'
7123 -7125 7126 0
-7126 7125 0
-7126 -7123 0
c Var 'variant_fields_00001_00004_00001' direct represents '9' with '-7125'
7112 7114 7116 7118 7120 7122 7124 7126 -7125 0
c Encoding variable: variant_fields_00001_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00002' order represents '1' with '7127'
c Var 'variant_fields_00001_00004_00002' direct represents '1' with '7127'
c Var 'variant_fields_00001_00004_00002' order represents '2' with '7128'
-7127 7128 0
c Var 'variant_fields_00001_00004_00002' direct represents '2' with '7129'
7127 -7128 7129 0
-7129 7128 0
-7129 -7127 0
c Var 'variant_fields_00001_00004_00002' order represents '3' with '7130'
-7128 7130 0
c Var 'variant_fields_00001_00004_00002' direct represents '3' with '7131'
7128 -7130 7131 0
-7131 7130 0
-7131 -7128 0
c Var 'variant_fields_00001_00004_00002' order represents '4' with '7132'
-7130 7132 0
c Var 'variant_fields_00001_00004_00002' direct represents '4' with '7133'
7130 -7132 7133 0
-7133 7132 0
-7133 -7130 0
c Var 'variant_fields_00001_00004_00002' order represents '5' with '7134'
-7132 7134 0
c Var 'variant_fields_00001_00004_00002' direct represents '5' with '7135'
7132 -7134 7135 0
-7135 7134 0
-7135 -7132 0
c Var 'variant_fields_00001_00004_00002' order represents '6' with '7136'
-7134 7136 0
c Var 'variant_fields_00001_00004_00002' direct represents '6' with '7137'
7134 -7136 7137 0
-7137 7136 0
-7137 -7134 0
c Var 'variant_fields_00001_00004_00002' order represents '7' with '7138'
-7136 7138 0
c Var 'variant_fields_00001_00004_00002' direct represents '7' with '7139'
7136 -7138 7139 0
-7139 7138 0
-7139 -7136 0
c Var 'variant_fields_00001_00004_00002' order represents '8' with '7140'
-7138 7140 0
c Var 'variant_fields_00001_00004_00002' direct represents '8' with '7141'
7138 -7140 7141 0
-7141 7140 0
-7141 -7138 0
c Var 'variant_fields_00001_00004_00002' direct represents '9' with '-7140'
7127 7129 7131 7133 7135 7137 7139 7141 -7140 0
c Encoding variable: variant_fields_00001_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00003' order represents '1' with '7142'
c Var 'variant_fields_00001_00004_00003' direct represents '1' with '7142'
c Var 'variant_fields_00001_00004_00003' order represents '2' with '7143'
-7142 7143 0
c Var 'variant_fields_00001_00004_00003' direct represents '2' with '7144'
7142 -7143 7144 0
-7144 7143 0
-7144 -7142 0
c Var 'variant_fields_00001_00004_00003' order represents '3' with '7145'
-7143 7145 0
c Var 'variant_fields_00001_00004_00003' direct represents '3' with '7146'
7143 -7145 7146 0
-7146 7145 0
-7146 -7143 0
c Var 'variant_fields_00001_00004_00003' order represents '4' with '7147'
-7145 7147 0
c Var 'variant_fields_00001_00004_00003' direct represents '4' with '7148'
7145 -7147 7148 0
-7148 7147 0
-7148 -7145 0
c Var 'variant_fields_00001_00004_00003' order represents '5' with '7149'
-7147 7149 0
c Var 'variant_fields_00001_00004_00003' direct represents '5' with '7150'
7147 -7149 7150 0
-7150 7149 0
-7150 -7147 0
c Var 'variant_fields_00001_00004_00003' order represents '6' with '7151'
-7149 7151 0
c Var 'variant_fields_00001_00004_00003' direct represents '6' with '7152'
7149 -7151 7152 0
-7152 7151 0
-7152 -7149 0
c Var 'variant_fields_00001_00004_00003' order represents '7' with '7153'
-7151 7153 0
c Var 'variant_fields_00001_00004_00003' direct represents '7' with '7154'
7151 -7153 7154 0
-7154 7153 0
-7154 -7151 0
c Var 'variant_fields_00001_00004_00003' order represents '8' with '7155'
-7153 7155 0
c Var 'variant_fields_00001_00004_00003' direct represents '8' with '7156'
7153 -7155 7156 0
-7156 7155 0
-7156 -7153 0
c Var 'variant_fields_00001_00004_00003' direct represents '9' with '-7155'
7142 7144 7146 7148 7150 7152 7154 7156 -7155 0
c Encoding variable: variant_fields_00001_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00004' order represents '1' with '7157'
c Var 'variant_fields_00001_00004_00004' direct represents '1' with '7157'
c Var 'variant_fields_00001_00004_00004' order represents '2' with '7158'
-7157 7158 0
c Var 'variant_fields_00001_00004_00004' direct represents '2' with '7159'
7157 -7158 7159 0
-7159 7158 0
-7159 -7157 0
c Var 'variant_fields_00001_00004_00004' order represents '3' with '7160'
-7158 7160 0
c Var 'variant_fields_00001_00004_00004' direct represents '3' with '7161'
7158 -7160 7161 0
-7161 7160 0
-7161 -7158 0
c Var 'variant_fields_00001_00004_00004' order represents '4' with '7162'
-7160 7162 0
c Var 'variant_fields_00001_00004_00004' direct represents '4' with '7163'
7160 -7162 7163 0
-7163 7162 0
-7163 -7160 0
c Var 'variant_fields_00001_00004_00004' order represents '5' with '7164'
-7162 7164 0
c Var 'variant_fields_00001_00004_00004' direct represents '5' with '7165'
7162 -7164 7165 0
-7165 7164 0
-7165 -7162 0
c Var 'variant_fields_00001_00004_00004' order represents '6' with '7166'
-7164 7166 0
c Var 'variant_fields_00001_00004_00004' direct represents '6' with '7167'
7164 -7166 7167 0
-7167 7166 0
-7167 -7164 0
c Var 'variant_fields_00001_00004_00004' order represents '7' with '7168'
-7166 7168 0
c Var 'variant_fields_00001_00004_00004' direct represents '7' with '7169'
7166 -7168 7169 0
-7169 7168 0
-7169 -7166 0
c Var 'variant_fields_00001_00004_00004' order represents '8' with '7170'
-7168 7170 0
c Var 'variant_fields_00001_00004_00004' direct represents '8' with '7171'
7168 -7170 7171 0
-7171 7170 0
-7171 -7168 0
c Var 'variant_fields_00001_00004_00004' direct represents '9' with '-7170'
7157 7159 7161 7163 7165 7167 7169 7171 -7170 0
c Encoding variable: variant_fields_00001_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00005' order represents '1' with '7172'
c Var 'variant_fields_00001_00004_00005' direct represents '1' with '7172'
c Var 'variant_fields_00001_00004_00005' order represents '2' with '7173'
-7172 7173 0
c Var 'variant_fields_00001_00004_00005' direct represents '2' with '7174'
7172 -7173 7174 0
-7174 7173 0
-7174 -7172 0
c Var 'variant_fields_00001_00004_00005' order represents '3' with '7175'
-7173 7175 0
c Var 'variant_fields_00001_00004_00005' direct represents '3' with '7176'
7173 -7175 7176 0
-7176 7175 0
-7176 -7173 0
c Var 'variant_fields_00001_00004_00005' order represents '4' with '7177'
-7175 7177 0
c Var 'variant_fields_00001_00004_00005' direct represents '4' with '7178'
7175 -7177 7178 0
-7178 7177 0
-7178 -7175 0
c Var 'variant_fields_00001_00004_00005' order represents '5' with '7179'
-7177 7179 0
c Var 'variant_fields_00001_00004_00005' direct represents '5' with '7180'
7177 -7179 7180 0
-7180 7179 0
-7180 -7177 0
c Var 'variant_fields_00001_00004_00005' order represents '6' with '7181'
-7179 7181 0
c Var 'variant_fields_00001_00004_00005' direct represents '6' with '7182'
7179 -7181 7182 0
-7182 7181 0
-7182 -7179 0
c Var 'variant_fields_00001_00004_00005' order represents '7' with '7183'
-7181 7183 0
c Var 'variant_fields_00001_00004_00005' direct represents '7' with '7184'
7181 -7183 7184 0
-7184 7183 0
-7184 -7181 0
c Var 'variant_fields_00001_00004_00005' order represents '8' with '7185'
-7183 7185 0
c Var 'variant_fields_00001_00004_00005' direct represents '8' with '7186'
7183 -7185 7186 0
-7186 7185 0
-7186 -7183 0
c Var 'variant_fields_00001_00004_00005' direct represents '9' with '-7185'
7172 7174 7176 7178 7180 7182 7184 7186 -7185 0
c Encoding variable: variant_fields_00001_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00006' order represents '1' with '7187'
c Var 'variant_fields_00001_00004_00006' direct represents '1' with '7187'
c Var 'variant_fields_00001_00004_00006' order represents '2' with '7188'
-7187 7188 0
c Var 'variant_fields_00001_00004_00006' direct represents '2' with '7189'
7187 -7188 7189 0
-7189 7188 0
-7189 -7187 0
c Var 'variant_fields_00001_00004_00006' order represents '3' with '7190'
-7188 7190 0
c Var 'variant_fields_00001_00004_00006' direct represents '3' with '7191'
7188 -7190 7191 0
-7191 7190 0
-7191 -7188 0
c Var 'variant_fields_00001_00004_00006' order represents '4' with '7192'
-7190 7192 0
c Var 'variant_fields_00001_00004_00006' direct represents '4' with '7193'
7190 -7192 7193 0
-7193 7192 0
-7193 -7190 0
c Var 'variant_fields_00001_00004_00006' order represents '5' with '7194'
-7192 7194 0
c Var 'variant_fields_00001_00004_00006' direct represents '5' with '7195'
7192 -7194 7195 0
-7195 7194 0
-7195 -7192 0
c Var 'variant_fields_00001_00004_00006' order represents '6' with '7196'
-7194 7196 0
c Var 'variant_fields_00001_00004_00006' direct represents '6' with '7197'
7194 -7196 7197 0
-7197 7196 0
-7197 -7194 0
c Var 'variant_fields_00001_00004_00006' order represents '7' with '7198'
-7196 7198 0
c Var 'variant_fields_00001_00004_00006' direct represents '7' with '7199'
7196 -7198 7199 0
-7199 7198 0
-7199 -7196 0
c Var 'variant_fields_00001_00004_00006' order represents '8' with '7200'
-7198 7200 0
c Var 'variant_fields_00001_00004_00006' direct represents '8' with '7201'
7198 -7200 7201 0
-7201 7200 0
-7201 -7198 0
c Var 'variant_fields_00001_00004_00006' direct represents '9' with '-7200'
7187 7189 7191 7193 7195 7197 7199 7201 -7200 0
c Encoding variable: variant_fields_00001_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00007' order represents '1' with '7202'
c Var 'variant_fields_00001_00004_00007' direct represents '1' with '7202'
c Var 'variant_fields_00001_00004_00007' order represents '2' with '7203'
-7202 7203 0
c Var 'variant_fields_00001_00004_00007' direct represents '2' with '7204'
7202 -7203 7204 0
-7204 7203 0
-7204 -7202 0
c Var 'variant_fields_00001_00004_00007' order represents '3' with '7205'
-7203 7205 0
c Var 'variant_fields_00001_00004_00007' direct represents '3' with '7206'
7203 -7205 7206 0
-7206 7205 0
-7206 -7203 0
c Var 'variant_fields_00001_00004_00007' order represents '4' with '7207'
-7205 7207 0
c Var 'variant_fields_00001_00004_00007' direct represents '4' with '7208'
7205 -7207 7208 0
-7208 7207 0
-7208 -7205 0
c Var 'variant_fields_00001_00004_00007' order represents '5' with '7209'
-7207 7209 0
c Var 'variant_fields_00001_00004_00007' direct represents '5' with '7210'
7207 -7209 7210 0
-7210 7209 0
-7210 -7207 0
c Var 'variant_fields_00001_00004_00007' order represents '6' with '7211'
-7209 7211 0
c Var 'variant_fields_00001_00004_00007' direct represents '6' with '7212'
7209 -7211 7212 0
-7212 7211 0
-7212 -7209 0
c Var 'variant_fields_00001_00004_00007' order represents '7' with '7213'
-7211 7213 0
c Var 'variant_fields_00001_00004_00007' direct represents '7' with '7214'
7211 -7213 7214 0
-7214 7213 0
-7214 -7211 0
c Var 'variant_fields_00001_00004_00007' order represents '8' with '7215'
-7213 7215 0
c Var 'variant_fields_00001_00004_00007' direct represents '8' with '7216'
7213 -7215 7216 0
-7216 7215 0
-7216 -7213 0
c Var 'variant_fields_00001_00004_00007' direct represents '9' with '-7215'
7202 7204 7206 7208 7210 7212 7214 7216 -7215 0
c Encoding variable: variant_fields_00001_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00008' order represents '1' with '7217'
c Var 'variant_fields_00001_00004_00008' direct represents '1' with '7217'
c Var 'variant_fields_00001_00004_00008' order represents '2' with '7218'
-7217 7218 0
c Var 'variant_fields_00001_00004_00008' direct represents '2' with '7219'
7217 -7218 7219 0
-7219 7218 0
-7219 -7217 0
c Var 'variant_fields_00001_00004_00008' order represents '3' with '7220'
-7218 7220 0
c Var 'variant_fields_00001_00004_00008' direct represents '3' with '7221'
7218 -7220 7221 0
-7221 7220 0
-7221 -7218 0
c Var 'variant_fields_00001_00004_00008' order represents '4' with '7222'
-7220 7222 0
c Var 'variant_fields_00001_00004_00008' direct represents '4' with '7223'
7220 -7222 7223 0
-7223 7222 0
-7223 -7220 0
c Var 'variant_fields_00001_00004_00008' order represents '5' with '7224'
-7222 7224 0
c Var 'variant_fields_00001_00004_00008' direct represents '5' with '7225'
7222 -7224 7225 0
-7225 7224 0
-7225 -7222 0
c Var 'variant_fields_00001_00004_00008' order represents '6' with '7226'
-7224 7226 0
c Var 'variant_fields_00001_00004_00008' direct represents '6' with '7227'
7224 -7226 7227 0
-7227 7226 0
-7227 -7224 0
c Var 'variant_fields_00001_00004_00008' order represents '7' with '7228'
-7226 7228 0
c Var 'variant_fields_00001_00004_00008' direct represents '7' with '7229'
7226 -7228 7229 0
-7229 7228 0
-7229 -7226 0
c Var 'variant_fields_00001_00004_00008' order represents '8' with '7230'
-7228 7230 0
c Var 'variant_fields_00001_00004_00008' direct represents '8' with '7231'
7228 -7230 7231 0
-7231 7230 0
-7231 -7228 0
c Var 'variant_fields_00001_00004_00008' direct represents '9' with '-7230'
7217 7219 7221 7223 7225 7227 7229 7231 -7230 0
c Encoding variable: variant_fields_00001_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00009' order represents '1' with '7232'
c Var 'variant_fields_00001_00004_00009' direct represents '1' with '7232'
c Var 'variant_fields_00001_00004_00009' order represents '2' with '7233'
-7232 7233 0
c Var 'variant_fields_00001_00004_00009' direct represents '2' with '7234'
7232 -7233 7234 0
-7234 7233 0
-7234 -7232 0
c Var 'variant_fields_00001_00004_00009' order represents '3' with '7235'
-7233 7235 0
c Var 'variant_fields_00001_00004_00009' direct represents '3' with '7236'
7233 -7235 7236 0
-7236 7235 0
-7236 -7233 0
c Var 'variant_fields_00001_00004_00009' order represents '4' with '7237'
-7235 7237 0
c Var 'variant_fields_00001_00004_00009' direct represents '4' with '7238'
7235 -7237 7238 0
-7238 7237 0
-7238 -7235 0
c Var 'variant_fields_00001_00004_00009' order represents '5' with '7239'
-7237 7239 0
c Var 'variant_fields_00001_00004_00009' direct represents '5' with '7240'
7237 -7239 7240 0
-7240 7239 0
-7240 -7237 0
c Var 'variant_fields_00001_00004_00009' order represents '6' with '7241'
-7239 7241 0
c Var 'variant_fields_00001_00004_00009' direct represents '6' with '7242'
7239 -7241 7242 0
-7242 7241 0
-7242 -7239 0
c Var 'variant_fields_00001_00004_00009' order represents '7' with '7243'
-7241 7243 0
c Var 'variant_fields_00001_00004_00009' direct represents '7' with '7244'
7241 -7243 7244 0
-7244 7243 0
-7244 -7241 0
c Var 'variant_fields_00001_00004_00009' order represents '8' with '7245'
-7243 7245 0
c Var 'variant_fields_00001_00004_00009' direct represents '8' with '7246'
7243 -7245 7246 0
-7246 7245 0
-7246 -7243 0
c Var 'variant_fields_00001_00004_00009' direct represents '9' with '-7245'
7232 7234 7236 7238 7240 7242 7244 7246 -7245 0
c Encoding variable: variant_fields_00001_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00001' order represents '1' with '7247'
c Var 'variant_fields_00001_00005_00001' direct represents '1' with '7247'
c Var 'variant_fields_00001_00005_00001' order represents '2' with '7248'
-7247 7248 0
c Var 'variant_fields_00001_00005_00001' direct represents '2' with '7249'
7247 -7248 7249 0
-7249 7248 0
-7249 -7247 0
c Var 'variant_fields_00001_00005_00001' order represents '3' with '7250'
-7248 7250 0
c Var 'variant_fields_00001_00005_00001' direct represents '3' with '7251'
7248 -7250 7251 0
-7251 7250 0
-7251 -7248 0
c Var 'variant_fields_00001_00005_00001' order represents '4' with '7252'
-7250 7252 0
c Var 'variant_fields_00001_00005_00001' direct represents '4' with '7253'
7250 -7252 7253 0
-7253 7252 0
-7253 -7250 0
c Var 'variant_fields_00001_00005_00001' order represents '5' with '7254'
-7252 7254 0
c Var 'variant_fields_00001_00005_00001' direct represents '5' with '7255'
7252 -7254 7255 0
-7255 7254 0
-7255 -7252 0
c Var 'variant_fields_00001_00005_00001' order represents '6' with '7256'
-7254 7256 0
c Var 'variant_fields_00001_00005_00001' direct represents '6' with '7257'
7254 -7256 7257 0
-7257 7256 0
-7257 -7254 0
c Var 'variant_fields_00001_00005_00001' order represents '7' with '7258'
-7256 7258 0
c Var 'variant_fields_00001_00005_00001' direct represents '7' with '7259'
7256 -7258 7259 0
-7259 7258 0
-7259 -7256 0
c Var 'variant_fields_00001_00005_00001' order represents '8' with '7260'
-7258 7260 0
c Var 'variant_fields_00001_00005_00001' direct represents '8' with '7261'
7258 -7260 7261 0
-7261 7260 0
-7261 -7258 0
c Var 'variant_fields_00001_00005_00001' direct represents '9' with '-7260'
7247 7249 7251 7253 7255 7257 7259 7261 -7260 0
c Encoding variable: variant_fields_00001_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00002' order represents '1' with '7262'
c Var 'variant_fields_00001_00005_00002' direct represents '1' with '7262'
c Var 'variant_fields_00001_00005_00002' order represents '2' with '7263'
-7262 7263 0
c Var 'variant_fields_00001_00005_00002' direct represents '2' with '7264'
7262 -7263 7264 0
-7264 7263 0
-7264 -7262 0
c Var 'variant_fields_00001_00005_00002' order represents '3' with '7265'
-7263 7265 0
c Var 'variant_fields_00001_00005_00002' direct represents '3' with '7266'
7263 -7265 7266 0
-7266 7265 0
-7266 -7263 0
c Var 'variant_fields_00001_00005_00002' order represents '4' with '7267'
-7265 7267 0
c Var 'variant_fields_00001_00005_00002' direct represents '4' with '7268'
7265 -7267 7268 0
-7268 7267 0
-7268 -7265 0
c Var 'variant_fields_00001_00005_00002' order represents '5' with '7269'
-7267 7269 0
c Var 'variant_fields_00001_00005_00002' direct represents '5' with '7270'
7267 -7269 7270 0
-7270 7269 0
-7270 -7267 0
c Var 'variant_fields_00001_00005_00002' order represents '6' with '7271'
-7269 7271 0
c Var 'variant_fields_00001_00005_00002' direct represents '6' with '7272'
7269 -7271 7272 0
-7272 7271 0
-7272 -7269 0
c Var 'variant_fields_00001_00005_00002' order represents '7' with '7273'
-7271 7273 0
c Var 'variant_fields_00001_00005_00002' direct represents '7' with '7274'
7271 -7273 7274 0
-7274 7273 0
-7274 -7271 0
c Var 'variant_fields_00001_00005_00002' order represents '8' with '7275'
-7273 7275 0
c Var 'variant_fields_00001_00005_00002' direct represents '8' with '7276'
7273 -7275 7276 0
-7276 7275 0
-7276 -7273 0
c Var 'variant_fields_00001_00005_00002' direct represents '9' with '-7275'
7262 7264 7266 7268 7270 7272 7274 7276 -7275 0
c Encoding variable: variant_fields_00001_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00003' order represents '1' with '7277'
c Var 'variant_fields_00001_00005_00003' direct represents '1' with '7277'
c Var 'variant_fields_00001_00005_00003' order represents '2' with '7278'
-7277 7278 0
c Var 'variant_fields_00001_00005_00003' direct represents '2' with '7279'
7277 -7278 7279 0
-7279 7278 0
-7279 -7277 0
c Var 'variant_fields_00001_00005_00003' order represents '3' with '7280'
-7278 7280 0
c Var 'variant_fields_00001_00005_00003' direct represents '3' with '7281'
7278 -7280 7281 0
-7281 7280 0
-7281 -7278 0
c Var 'variant_fields_00001_00005_00003' order represents '4' with '7282'
-7280 7282 0
c Var 'variant_fields_00001_00005_00003' direct represents '4' with '7283'
7280 -7282 7283 0
-7283 7282 0
-7283 -7280 0
c Var 'variant_fields_00001_00005_00003' order represents '5' with '7284'
-7282 7284 0
c Var 'variant_fields_00001_00005_00003' direct represents '5' with '7285'
7282 -7284 7285 0
-7285 7284 0
-7285 -7282 0
c Var 'variant_fields_00001_00005_00003' order represents '6' with '7286'
-7284 7286 0
c Var 'variant_fields_00001_00005_00003' direct represents '6' with '7287'
7284 -7286 7287 0
-7287 7286 0
-7287 -7284 0
c Var 'variant_fields_00001_00005_00003' order represents '7' with '7288'
-7286 7288 0
c Var 'variant_fields_00001_00005_00003' direct represents '7' with '7289'
7286 -7288 7289 0
-7289 7288 0
-7289 -7286 0
c Var 'variant_fields_00001_00005_00003' order represents '8' with '7290'
-7288 7290 0
c Var 'variant_fields_00001_00005_00003' direct represents '8' with '7291'
7288 -7290 7291 0
-7291 7290 0
-7291 -7288 0
c Var 'variant_fields_00001_00005_00003' direct represents '9' with '-7290'
7277 7279 7281 7283 7285 7287 7289 7291 -7290 0
c Encoding variable: variant_fields_00001_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00004' order represents '1' with '7292'
c Var 'variant_fields_00001_00005_00004' direct represents '1' with '7292'
c Var 'variant_fields_00001_00005_00004' order represents '2' with '7293'
-7292 7293 0
c Var 'variant_fields_00001_00005_00004' direct represents '2' with '7294'
7292 -7293 7294 0
-7294 7293 0
-7294 -7292 0
c Var 'variant_fields_00001_00005_00004' order represents '3' with '7295'
-7293 7295 0
c Var 'variant_fields_00001_00005_00004' direct represents '3' with '7296'
7293 -7295 7296 0
-7296 7295 0
-7296 -7293 0
c Var 'variant_fields_00001_00005_00004' order represents '4' with '7297'
-7295 7297 0
c Var 'variant_fields_00001_00005_00004' direct represents '4' with '7298'
7295 -7297 7298 0
-7298 7297 0
-7298 -7295 0
c Var 'variant_fields_00001_00005_00004' order represents '5' with '7299'
-7297 7299 0
c Var 'variant_fields_00001_00005_00004' direct represents '5' with '7300'
7297 -7299 7300 0
-7300 7299 0
-7300 -7297 0
c Var 'variant_fields_00001_00005_00004' order represents '6' with '7301'
-7299 7301 0
c Var 'variant_fields_00001_00005_00004' direct represents '6' with '7302'
7299 -7301 7302 0
-7302 7301 0
-7302 -7299 0
c Var 'variant_fields_00001_00005_00004' order represents '7' with '7303'
-7301 7303 0
c Var 'variant_fields_00001_00005_00004' direct represents '7' with '7304'
7301 -7303 7304 0
-7304 7303 0
-7304 -7301 0
c Var 'variant_fields_00001_00005_00004' order represents '8' with '7305'
-7303 7305 0
c Var 'variant_fields_00001_00005_00004' direct represents '8' with '7306'
7303 -7305 7306 0
-7306 7305 0
-7306 -7303 0
c Var 'variant_fields_00001_00005_00004' direct represents '9' with '-7305'
7292 7294 7296 7298 7300 7302 7304 7306 -7305 0
c Encoding variable: variant_fields_00001_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00005' order represents '1' with '7307'
c Var 'variant_fields_00001_00005_00005' direct represents '1' with '7307'
c Var 'variant_fields_00001_00005_00005' order represents '2' with '7308'
-7307 7308 0
c Var 'variant_fields_00001_00005_00005' direct represents '2' with '7309'
7307 -7308 7309 0
-7309 7308 0
-7309 -7307 0
c Var 'variant_fields_00001_00005_00005' order represents '3' with '7310'
-7308 7310 0
c Var 'variant_fields_00001_00005_00005' direct represents '3' with '7311'
7308 -7310 7311 0
-7311 7310 0
-7311 -7308 0
c Var 'variant_fields_00001_00005_00005' order represents '4' with '7312'
-7310 7312 0
c Var 'variant_fields_00001_00005_00005' direct represents '4' with '7313'
7310 -7312 7313 0
-7313 7312 0
-7313 -7310 0
c Var 'variant_fields_00001_00005_00005' order represents '5' with '7314'
-7312 7314 0
c Var 'variant_fields_00001_00005_00005' direct represents '5' with '7315'
7312 -7314 7315 0
-7315 7314 0
-7315 -7312 0
c Var 'variant_fields_00001_00005_00005' order represents '6' with '7316'
-7314 7316 0
c Var 'variant_fields_00001_00005_00005' direct represents '6' with '7317'
7314 -7316 7317 0
-7317 7316 0
-7317 -7314 0
c Var 'variant_fields_00001_00005_00005' order represents '7' with '7318'
-7316 7318 0
c Var 'variant_fields_00001_00005_00005' direct represents '7' with '7319'
7316 -7318 7319 0
-7319 7318 0
-7319 -7316 0
c Var 'variant_fields_00001_00005_00005' order represents '8' with '7320'
-7318 7320 0
c Var 'variant_fields_00001_00005_00005' direct represents '8' with '7321'
7318 -7320 7321 0
-7321 7320 0
-7321 -7318 0
c Var 'variant_fields_00001_00005_00005' direct represents '9' with '-7320'
7307 7309 7311 7313 7315 7317 7319 7321 -7320 0
c Encoding variable: variant_fields_00001_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00006' order represents '1' with '7322'
c Var 'variant_fields_00001_00005_00006' direct represents '1' with '7322'
c Var 'variant_fields_00001_00005_00006' order represents '2' with '7323'
-7322 7323 0
c Var 'variant_fields_00001_00005_00006' direct represents '2' with '7324'
7322 -7323 7324 0
-7324 7323 0
-7324 -7322 0
c Var 'variant_fields_00001_00005_00006' order represents '3' with '7325'
-7323 7325 0
c Var 'variant_fields_00001_00005_00006' direct represents '3' with '7326'
7323 -7325 7326 0
-7326 7325 0
-7326 -7323 0
c Var 'variant_fields_00001_00005_00006' order represents '4' with '7327'
-7325 7327 0
c Var 'variant_fields_00001_00005_00006' direct represents '4' with '7328'
7325 -7327 7328 0
-7328 7327 0
-7328 -7325 0
c Var 'variant_fields_00001_00005_00006' order represents '5' with '7329'
-7327 7329 0
c Var 'variant_fields_00001_00005_00006' direct represents '5' with '7330'
7327 -7329 7330 0
-7330 7329 0
-7330 -7327 0
c Var 'variant_fields_00001_00005_00006' order represents '6' with '7331'
-7329 7331 0
c Var 'variant_fields_00001_00005_00006' direct represents '6' with '7332'
7329 -7331 7332 0
-7332 7331 0
-7332 -7329 0
c Var 'variant_fields_00001_00005_00006' order represents '7' with '7333'
-7331 7333 0
c Var 'variant_fields_00001_00005_00006' direct represents '7' with '7334'
7331 -7333 7334 0
-7334 7333 0
-7334 -7331 0
c Var 'variant_fields_00001_00005_00006' order represents '8' with '7335'
-7333 7335 0
c Var 'variant_fields_00001_00005_00006' direct represents '8' with '7336'
7333 -7335 7336 0
-7336 7335 0
-7336 -7333 0
c Var 'variant_fields_00001_00005_00006' direct represents '9' with '-7335'
7322 7324 7326 7328 7330 7332 7334 7336 -7335 0
c Encoding variable: variant_fields_00001_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00007' order represents '1' with '7337'
c Var 'variant_fields_00001_00005_00007' direct represents '1' with '7337'
c Var 'variant_fields_00001_00005_00007' order represents '2' with '7338'
-7337 7338 0
c Var 'variant_fields_00001_00005_00007' direct represents '2' with '7339'
7337 -7338 7339 0
-7339 7338 0
-7339 -7337 0
c Var 'variant_fields_00001_00005_00007' order represents '3' with '7340'
-7338 7340 0
c Var 'variant_fields_00001_00005_00007' direct represents '3' with '7341'
7338 -7340 7341 0
-7341 7340 0
-7341 -7338 0
c Var 'variant_fields_00001_00005_00007' order represents '4' with '7342'
-7340 7342 0
c Var 'variant_fields_00001_00005_00007' direct represents '4' with '7343'
7340 -7342 7343 0
-7343 7342 0
-7343 -7340 0
c Var 'variant_fields_00001_00005_00007' order represents '5' with '7344'
-7342 7344 0
c Var 'variant_fields_00001_00005_00007' direct represents '5' with '7345'
7342 -7344 7345 0
-7345 7344 0
-7345 -7342 0
c Var 'variant_fields_00001_00005_00007' order represents '6' with '7346'
-7344 7346 0
c Var 'variant_fields_00001_00005_00007' direct represents '6' with '7347'
7344 -7346 7347 0
-7347 7346 0
-7347 -7344 0
c Var 'variant_fields_00001_00005_00007' order represents '7' with '7348'
-7346 7348 0
c Var 'variant_fields_00001_00005_00007' direct represents '7' with '7349'
7346 -7348 7349 0
-7349 7348 0
-7349 -7346 0
c Var 'variant_fields_00001_00005_00007' order represents '8' with '7350'
-7348 7350 0
c Var 'variant_fields_00001_00005_00007' direct represents '8' with '7351'
7348 -7350 7351 0
-7351 7350 0
-7351 -7348 0
c Var 'variant_fields_00001_00005_00007' direct represents '9' with '-7350'
7337 7339 7341 7343 7345 7347 7349 7351 -7350 0
c Encoding variable: variant_fields_00001_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00008' order represents '1' with '7352'
c Var 'variant_fields_00001_00005_00008' direct represents '1' with '7352'
c Var 'variant_fields_00001_00005_00008' order represents '2' with '7353'
-7352 7353 0
c Var 'variant_fields_00001_00005_00008' direct represents '2' with '7354'
7352 -7353 7354 0
-7354 7353 0
-7354 -7352 0
c Var 'variant_fields_00001_00005_00008' order represents '3' with '7355'
-7353 7355 0
c Var 'variant_fields_00001_00005_00008' direct represents '3' with '7356'
7353 -7355 7356 0
-7356 7355 0
-7356 -7353 0
c Var 'variant_fields_00001_00005_00008' order represents '4' with '7357'
-7355 7357 0
c Var 'variant_fields_00001_00005_00008' direct represents '4' with '7358'
7355 -7357 7358 0
-7358 7357 0
-7358 -7355 0
c Var 'variant_fields_00001_00005_00008' order represents '5' with '7359'
-7357 7359 0
c Var 'variant_fields_00001_00005_00008' direct represents '5' with '7360'
7357 -7359 7360 0
-7360 7359 0
-7360 -7357 0
c Var 'variant_fields_00001_00005_00008' order represents '6' with '7361'
-7359 7361 0
c Var 'variant_fields_00001_00005_00008' direct represents '6' with '7362'
7359 -7361 7362 0
-7362 7361 0
-7362 -7359 0
c Var 'variant_fields_00001_00005_00008' order represents '7' with '7363'
-7361 7363 0
c Var 'variant_fields_00001_00005_00008' direct represents '7' with '7364'
7361 -7363 7364 0
-7364 7363 0
-7364 -7361 0
c Var 'variant_fields_00001_00005_00008' order represents '8' with '7365'
-7363 7365 0
c Var 'variant_fields_00001_00005_00008' direct represents '8' with '7366'
7363 -7365 7366 0
-7366 7365 0
-7366 -7363 0
c Var 'variant_fields_00001_00005_00008' direct represents '9' with '-7365'
7352 7354 7356 7358 7360 7362 7364 7366 -7365 0
c Encoding variable: variant_fields_00001_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00005_00009' order represents '1' with '7367'
c Var 'variant_fields_00001_00005_00009' direct represents '1' with '7367'
c Var 'variant_fields_00001_00005_00009' order represents '2' with '7368'
-7367 7368 0
c Var 'variant_fields_00001_00005_00009' direct represents '2' with '7369'
7367 -7368 7369 0
-7369 7368 0
-7369 -7367 0
c Var 'variant_fields_00001_00005_00009' order represents '3' with '7370'
-7368 7370 0
c Var 'variant_fields_00001_00005_00009' direct represents '3' with '7371'
7368 -7370 7371 0
-7371 7370 0
-7371 -7368 0
c Var 'variant_fields_00001_00005_00009' order represents '4' with '7372'
-7370 7372 0
c Var 'variant_fields_00001_00005_00009' direct represents '4' with '7373'
7370 -7372 7373 0
-7373 7372 0
-7373 -7370 0
c Var 'variant_fields_00001_00005_00009' order represents '5' with '7374'
-7372 7374 0
c Var 'variant_fields_00001_00005_00009' direct represents '5' with '7375'
7372 -7374 7375 0
-7375 7374 0
-7375 -7372 0
c Var 'variant_fields_00001_00005_00009' order represents '6' with '7376'
-7374 7376 0
c Var 'variant_fields_00001_00005_00009' direct represents '6' with '7377'
7374 -7376 7377 0
-7377 7376 0
-7377 -7374 0
c Var 'variant_fields_00001_00005_00009' order represents '7' with '7378'
-7376 7378 0
c Var 'variant_fields_00001_00005_00009' direct represents '7' with '7379'
7376 -7378 7379 0
-7379 7378 0
-7379 -7376 0
c Var 'variant_fields_00001_00005_00009' order represents '8' with '7380'
-7378 7380 0
c Var 'variant_fields_00001_00005_00009' direct represents '8' with '7381'
7378 -7380 7381 0
-7381 7380 0
-7381 -7378 0
c Var 'variant_fields_00001_00005_00009' direct represents '9' with '-7380'
7367 7369 7371 7373 7375 7377 7379 7381 -7380 0
c Encoding variable: variant_fields_00001_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00001' order represents '1' with '7382'
c Var 'variant_fields_00001_00006_00001' direct represents '1' with '7382'
c Var 'variant_fields_00001_00006_00001' order represents '2' with '7383'
-7382 7383 0
c Var 'variant_fields_00001_00006_00001' direct represents '2' with '7384'
7382 -7383 7384 0
-7384 7383 0
-7384 -7382 0
c Var 'variant_fields_00001_00006_00001' order represents '3' with '7385'
-7383 7385 0
c Var 'variant_fields_00001_00006_00001' direct represents '3' with '7386'
7383 -7385 7386 0
-7386 7385 0
-7386 -7383 0
c Var 'variant_fields_00001_00006_00001' order represents '4' with '7387'
-7385 7387 0
c Var 'variant_fields_00001_00006_00001' direct represents '4' with '7388'
7385 -7387 7388 0
-7388 7387 0
-7388 -7385 0
c Var 'variant_fields_00001_00006_00001' order represents '5' with '7389'
-7387 7389 0
c Var 'variant_fields_00001_00006_00001' direct represents '5' with '7390'
7387 -7389 7390 0
-7390 7389 0
-7390 -7387 0
c Var 'variant_fields_00001_00006_00001' order represents '6' with '7391'
-7389 7391 0
c Var 'variant_fields_00001_00006_00001' direct represents '6' with '7392'
7389 -7391 7392 0
-7392 7391 0
-7392 -7389 0
c Var 'variant_fields_00001_00006_00001' order represents '7' with '7393'
-7391 7393 0
c Var 'variant_fields_00001_00006_00001' direct represents '7' with '7394'
7391 -7393 7394 0
-7394 7393 0
-7394 -7391 0
c Var 'variant_fields_00001_00006_00001' order represents '8' with '7395'
-7393 7395 0
c Var 'variant_fields_00001_00006_00001' direct represents '8' with '7396'
7393 -7395 7396 0
-7396 7395 0
-7396 -7393 0
c Var 'variant_fields_00001_00006_00001' direct represents '9' with '-7395'
7382 7384 7386 7388 7390 7392 7394 7396 -7395 0
c Encoding variable: variant_fields_00001_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00002' order represents '1' with '7397'
c Var 'variant_fields_00001_00006_00002' direct represents '1' with '7397'
c Var 'variant_fields_00001_00006_00002' order represents '2' with '7398'
-7397 7398 0
c Var 'variant_fields_00001_00006_00002' direct represents '2' with '7399'
7397 -7398 7399 0
-7399 7398 0
-7399 -7397 0
c Var 'variant_fields_00001_00006_00002' order represents '3' with '7400'
-7398 7400 0
c Var 'variant_fields_00001_00006_00002' direct represents '3' with '7401'
7398 -7400 7401 0
-7401 7400 0
-7401 -7398 0
c Var 'variant_fields_00001_00006_00002' order represents '4' with '7402'
-7400 7402 0
c Var 'variant_fields_00001_00006_00002' direct represents '4' with '7403'
7400 -7402 7403 0
-7403 7402 0
-7403 -7400 0
c Var 'variant_fields_00001_00006_00002' order represents '5' with '7404'
-7402 7404 0
c Var 'variant_fields_00001_00006_00002' direct represents '5' with '7405'
7402 -7404 7405 0
-7405 7404 0
-7405 -7402 0
c Var 'variant_fields_00001_00006_00002' order represents '6' with '7406'
-7404 7406 0
c Var 'variant_fields_00001_00006_00002' direct represents '6' with '7407'
7404 -7406 7407 0
-7407 7406 0
-7407 -7404 0
c Var 'variant_fields_00001_00006_00002' order represents '7' with '7408'
-7406 7408 0
c Var 'variant_fields_00001_00006_00002' direct represents '7' with '7409'
7406 -7408 7409 0
-7409 7408 0
-7409 -7406 0
c Var 'variant_fields_00001_00006_00002' order represents '8' with '7410'
-7408 7410 0
c Var 'variant_fields_00001_00006_00002' direct represents '8' with '7411'
7408 -7410 7411 0
-7411 7410 0
-7411 -7408 0
c Var 'variant_fields_00001_00006_00002' direct represents '9' with '-7410'
7397 7399 7401 7403 7405 7407 7409 7411 -7410 0
c Encoding variable: variant_fields_00001_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00003' order represents '1' with '7412'
c Var 'variant_fields_00001_00006_00003' direct represents '1' with '7412'
c Var 'variant_fields_00001_00006_00003' order represents '2' with '7413'
-7412 7413 0
c Var 'variant_fields_00001_00006_00003' direct represents '2' with '7414'
7412 -7413 7414 0
-7414 7413 0
-7414 -7412 0
c Var 'variant_fields_00001_00006_00003' order represents '3' with '7415'
-7413 7415 0
c Var 'variant_fields_00001_00006_00003' direct represents '3' with '7416'
7413 -7415 7416 0
-7416 7415 0
-7416 -7413 0
c Var 'variant_fields_00001_00006_00003' order represents '4' with '7417'
-7415 7417 0
c Var 'variant_fields_00001_00006_00003' direct represents '4' with '7418'
7415 -7417 7418 0
-7418 7417 0
-7418 -7415 0
c Var 'variant_fields_00001_00006_00003' order represents '5' with '7419'
-7417 7419 0
c Var 'variant_fields_00001_00006_00003' direct represents '5' with '7420'
7417 -7419 7420 0
-7420 7419 0
-7420 -7417 0
c Var 'variant_fields_00001_00006_00003' order represents '6' with '7421'
-7419 7421 0
c Var 'variant_fields_00001_00006_00003' direct represents '6' with '7422'
7419 -7421 7422 0
-7422 7421 0
-7422 -7419 0
c Var 'variant_fields_00001_00006_00003' order represents '7' with '7423'
-7421 7423 0
c Var 'variant_fields_00001_00006_00003' direct represents '7' with '7424'
7421 -7423 7424 0
-7424 7423 0
-7424 -7421 0
c Var 'variant_fields_00001_00006_00003' order represents '8' with '7425'
-7423 7425 0
c Var 'variant_fields_00001_00006_00003' direct represents '8' with '7426'
7423 -7425 7426 0
-7426 7425 0
-7426 -7423 0
c Var 'variant_fields_00001_00006_00003' direct represents '9' with '-7425'
7412 7414 7416 7418 7420 7422 7424 7426 -7425 0
c Encoding variable: variant_fields_00001_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00004' order represents '1' with '7427'
c Var 'variant_fields_00001_00006_00004' direct represents '1' with '7427'
c Var 'variant_fields_00001_00006_00004' order represents '2' with '7428'
-7427 7428 0
c Var 'variant_fields_00001_00006_00004' direct represents '2' with '7429'
7427 -7428 7429 0
-7429 7428 0
-7429 -7427 0
c Var 'variant_fields_00001_00006_00004' order represents '3' with '7430'
-7428 7430 0
c Var 'variant_fields_00001_00006_00004' direct represents '3' with '7431'
7428 -7430 7431 0
-7431 7430 0
-7431 -7428 0
c Var 'variant_fields_00001_00006_00004' order represents '4' with '7432'
-7430 7432 0
c Var 'variant_fields_00001_00006_00004' direct represents '4' with '7433'
7430 -7432 7433 0
-7433 7432 0
-7433 -7430 0
c Var 'variant_fields_00001_00006_00004' order represents '5' with '7434'
-7432 7434 0
c Var 'variant_fields_00001_00006_00004' direct represents '5' with '7435'
7432 -7434 7435 0
-7435 7434 0
-7435 -7432 0
c Var 'variant_fields_00001_00006_00004' order represents '6' with '7436'
-7434 7436 0
c Var 'variant_fields_00001_00006_00004' direct represents '6' with '7437'
7434 -7436 7437 0
-7437 7436 0
-7437 -7434 0
c Var 'variant_fields_00001_00006_00004' order represents '7' with '7438'
-7436 7438 0
c Var 'variant_fields_00001_00006_00004' direct represents '7' with '7439'
7436 -7438 7439 0
-7439 7438 0
-7439 -7436 0
c Var 'variant_fields_00001_00006_00004' order represents '8' with '7440'
-7438 7440 0
c Var 'variant_fields_00001_00006_00004' direct represents '8' with '7441'
7438 -7440 7441 0
-7441 7440 0
-7441 -7438 0
c Var 'variant_fields_00001_00006_00004' direct represents '9' with '-7440'
7427 7429 7431 7433 7435 7437 7439 7441 -7440 0
c Encoding variable: variant_fields_00001_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00005' order represents '1' with '7442'
c Var 'variant_fields_00001_00006_00005' direct represents '1' with '7442'
c Var 'variant_fields_00001_00006_00005' order represents '2' with '7443'
-7442 7443 0
c Var 'variant_fields_00001_00006_00005' direct represents '2' with '7444'
7442 -7443 7444 0
-7444 7443 0
-7444 -7442 0
c Var 'variant_fields_00001_00006_00005' order represents '3' with '7445'
-7443 7445 0
c Var 'variant_fields_00001_00006_00005' direct represents '3' with '7446'
7443 -7445 7446 0
-7446 7445 0
-7446 -7443 0
c Var 'variant_fields_00001_00006_00005' order represents '4' with '7447'
-7445 7447 0
c Var 'variant_fields_00001_00006_00005' direct represents '4' with '7448'
7445 -7447 7448 0
-7448 7447 0
-7448 -7445 0
c Var 'variant_fields_00001_00006_00005' order represents '5' with '7449'
-7447 7449 0
c Var 'variant_fields_00001_00006_00005' direct represents '5' with '7450'
7447 -7449 7450 0
-7450 7449 0
-7450 -7447 0
c Var 'variant_fields_00001_00006_00005' order represents '6' with '7451'
-7449 7451 0
c Var 'variant_fields_00001_00006_00005' direct represents '6' with '7452'
7449 -7451 7452 0
-7452 7451 0
-7452 -7449 0
c Var 'variant_fields_00001_00006_00005' order represents '7' with '7453'
-7451 7453 0
c Var 'variant_fields_00001_00006_00005' direct represents '7' with '7454'
7451 -7453 7454 0
-7454 7453 0
-7454 -7451 0
c Var 'variant_fields_00001_00006_00005' order represents '8' with '7455'
-7453 7455 0
c Var 'variant_fields_00001_00006_00005' direct represents '8' with '7456'
7453 -7455 7456 0
-7456 7455 0
-7456 -7453 0
c Var 'variant_fields_00001_00006_00005' direct represents '9' with '-7455'
7442 7444 7446 7448 7450 7452 7454 7456 -7455 0
c Encoding variable: variant_fields_00001_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00006' order represents '1' with '7457'
c Var 'variant_fields_00001_00006_00006' direct represents '1' with '7457'
c Var 'variant_fields_00001_00006_00006' order represents '2' with '7458'
-7457 7458 0
c Var 'variant_fields_00001_00006_00006' direct represents '2' with '7459'
7457 -7458 7459 0
-7459 7458 0
-7459 -7457 0
c Var 'variant_fields_00001_00006_00006' order represents '3' with '7460'
-7458 7460 0
c Var 'variant_fields_00001_00006_00006' direct represents '3' with '7461'
7458 -7460 7461 0
-7461 7460 0
-7461 -7458 0
c Var 'variant_fields_00001_00006_00006' order represents '4' with '7462'
-7460 7462 0
c Var 'variant_fields_00001_00006_00006' direct represents '4' with '7463'
7460 -7462 7463 0
-7463 7462 0
-7463 -7460 0
c Var 'variant_fields_00001_00006_00006' order represents '5' with '7464'
-7462 7464 0
c Var 'variant_fields_00001_00006_00006' direct represents '5' with '7465'
7462 -7464 7465 0
-7465 7464 0
-7465 -7462 0
c Var 'variant_fields_00001_00006_00006' order represents '6' with '7466'
-7464 7466 0
c Var 'variant_fields_00001_00006_00006' direct represents '6' with '7467'
7464 -7466 7467 0
-7467 7466 0
-7467 -7464 0
c Var 'variant_fields_00001_00006_00006' order represents '7' with '7468'
-7466 7468 0
c Var 'variant_fields_00001_00006_00006' direct represents '7' with '7469'
7466 -7468 7469 0
-7469 7468 0
-7469 -7466 0
c Var 'variant_fields_00001_00006_00006' order represents '8' with '7470'
-7468 7470 0
c Var 'variant_fields_00001_00006_00006' direct represents '8' with '7471'
7468 -7470 7471 0
-7471 7470 0
-7471 -7468 0
c Var 'variant_fields_00001_00006_00006' direct represents '9' with '-7470'
7457 7459 7461 7463 7465 7467 7469 7471 -7470 0
c Encoding variable: variant_fields_00001_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00007' order represents '1' with '7472'
c Var 'variant_fields_00001_00006_00007' direct represents '1' with '7472'
c Var 'variant_fields_00001_00006_00007' order represents '2' with '7473'
-7472 7473 0
c Var 'variant_fields_00001_00006_00007' direct represents '2' with '7474'
7472 -7473 7474 0
-7474 7473 0
-7474 -7472 0
c Var 'variant_fields_00001_00006_00007' order represents '3' with '7475'
-7473 7475 0
c Var 'variant_fields_00001_00006_00007' direct represents '3' with '7476'
7473 -7475 7476 0
-7476 7475 0
-7476 -7473 0
c Var 'variant_fields_00001_00006_00007' order represents '4' with '7477'
-7475 7477 0
c Var 'variant_fields_00001_00006_00007' direct represents '4' with '7478'
7475 -7477 7478 0
-7478 7477 0
-7478 -7475 0
c Var 'variant_fields_00001_00006_00007' order represents '5' with '7479'
-7477 7479 0
c Var 'variant_fields_00001_00006_00007' direct represents '5' with '7480'
7477 -7479 7480 0
-7480 7479 0
-7480 -7477 0
c Var 'variant_fields_00001_00006_00007' order represents '6' with '7481'
-7479 7481 0
c Var 'variant_fields_00001_00006_00007' direct represents '6' with '7482'
7479 -7481 7482 0
-7482 7481 0
-7482 -7479 0
c Var 'variant_fields_00001_00006_00007' order represents '7' with '7483'
-7481 7483 0
c Var 'variant_fields_00001_00006_00007' direct represents '7' with '7484'
7481 -7483 7484 0
-7484 7483 0
-7484 -7481 0
c Var 'variant_fields_00001_00006_00007' order represents '8' with '7485'
-7483 7485 0
c Var 'variant_fields_00001_00006_00007' direct represents '8' with '7486'
7483 -7485 7486 0
-7486 7485 0
-7486 -7483 0
c Var 'variant_fields_00001_00006_00007' direct represents '9' with '-7485'
7472 7474 7476 7478 7480 7482 7484 7486 -7485 0
c Encoding variable: variant_fields_00001_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00008' order represents '1' with '7487'
c Var 'variant_fields_00001_00006_00008' direct represents '1' with '7487'
c Var 'variant_fields_00001_00006_00008' order represents '2' with '7488'
-7487 7488 0
c Var 'variant_fields_00001_00006_00008' direct represents '2' with '7489'
7487 -7488 7489 0
-7489 7488 0
-7489 -7487 0
c Var 'variant_fields_00001_00006_00008' order represents '3' with '7490'
-7488 7490 0
c Var 'variant_fields_00001_00006_00008' direct represents '3' with '7491'
7488 -7490 7491 0
-7491 7490 0
-7491 -7488 0
c Var 'variant_fields_00001_00006_00008' order represents '4' with '7492'
-7490 7492 0
c Var 'variant_fields_00001_00006_00008' direct represents '4' with '7493'
7490 -7492 7493 0
-7493 7492 0
-7493 -7490 0
c Var 'variant_fields_00001_00006_00008' order represents '5' with '7494'
-7492 7494 0
c Var 'variant_fields_00001_00006_00008' direct represents '5' with '7495'
7492 -7494 7495 0
-7495 7494 0
-7495 -7492 0
c Var 'variant_fields_00001_00006_00008' order represents '6' with '7496'
-7494 7496 0
c Var 'variant_fields_00001_00006_00008' direct represents '6' with '7497'
7494 -7496 7497 0
-7497 7496 0
-7497 -7494 0
c Var 'variant_fields_00001_00006_00008' order represents '7' with '7498'
-7496 7498 0
c Var 'variant_fields_00001_00006_00008' direct represents '7' with '7499'
7496 -7498 7499 0
-7499 7498 0
-7499 -7496 0
c Var 'variant_fields_00001_00006_00008' order represents '8' with '7500'
-7498 7500 0
c Var 'variant_fields_00001_00006_00008' direct represents '8' with '7501'
7498 -7500 7501 0
-7501 7500 0
-7501 -7498 0
c Var 'variant_fields_00001_00006_00008' direct represents '9' with '-7500'
7487 7489 7491 7493 7495 7497 7499 7501 -7500 0
c Encoding variable: variant_fields_00001_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00009' order represents '1' with '7502'
c Var 'variant_fields_00001_00006_00009' direct represents '1' with '7502'
c Var 'variant_fields_00001_00006_00009' order represents '2' with '7503'
-7502 7503 0
c Var 'variant_fields_00001_00006_00009' direct represents '2' with '7504'
7502 -7503 7504 0
-7504 7503 0
-7504 -7502 0
c Var 'variant_fields_00001_00006_00009' order represents '3' with '7505'
-7503 7505 0
c Var 'variant_fields_00001_00006_00009' direct represents '3' with '7506'
7503 -7505 7506 0
-7506 7505 0
-7506 -7503 0
c Var 'variant_fields_00001_00006_00009' order represents '4' with '7507'
-7505 7507 0
c Var 'variant_fields_00001_00006_00009' direct represents '4' with '7508'
7505 -7507 7508 0
-7508 7507 0
-7508 -7505 0
c Var 'variant_fields_00001_00006_00009' order represents '5' with '7509'
-7507 7509 0
c Var 'variant_fields_00001_00006_00009' direct represents '5' with '7510'
7507 -7509 7510 0
-7510 7509 0
-7510 -7507 0
c Var 'variant_fields_00001_00006_00009' order represents '6' with '7511'
-7509 7511 0
c Var 'variant_fields_00001_00006_00009' direct represents '6' with '7512'
7509 -7511 7512 0
-7512 7511 0
-7512 -7509 0
c Var 'variant_fields_00001_00006_00009' order represents '7' with '7513'
-7511 7513 0
c Var 'variant_fields_00001_00006_00009' direct represents '7' with '7514'
7511 -7513 7514 0
-7514 7513 0
-7514 -7511 0
c Var 'variant_fields_00001_00006_00009' order represents '8' with '7515'
-7513 7515 0
c Var 'variant_fields_00001_00006_00009' direct represents '8' with '7516'
7513 -7515 7516 0
-7516 7515 0
-7516 -7513 0
c Var 'variant_fields_00001_00006_00009' direct represents '9' with '-7515'
7502 7504 7506 7508 7510 7512 7514 7516 -7515 0
c Encoding variable: variant_fields_00001_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00001' order represents '1' with '7517'
c Var 'variant_fields_00001_00007_00001' direct represents '1' with '7517'
c Var 'variant_fields_00001_00007_00001' order represents '2' with '7518'
-7517 7518 0
c Var 'variant_fields_00001_00007_00001' direct represents '2' with '7519'
7517 -7518 7519 0
-7519 7518 0
-7519 -7517 0
c Var 'variant_fields_00001_00007_00001' order represents '3' with '7520'
-7518 7520 0
c Var 'variant_fields_00001_00007_00001' direct represents '3' with '7521'
7518 -7520 7521 0
-7521 7520 0
-7521 -7518 0
c Var 'variant_fields_00001_00007_00001' order represents '4' with '7522'
-7520 7522 0
c Var 'variant_fields_00001_00007_00001' direct represents '4' with '7523'
7520 -7522 7523 0
-7523 7522 0
-7523 -7520 0
c Var 'variant_fields_00001_00007_00001' order represents '5' with '7524'
-7522 7524 0
c Var 'variant_fields_00001_00007_00001' direct represents '5' with '7525'
7522 -7524 7525 0
-7525 7524 0
-7525 -7522 0
c Var 'variant_fields_00001_00007_00001' order represents '6' with '7526'
-7524 7526 0
c Var 'variant_fields_00001_00007_00001' direct represents '6' with '7527'
7524 -7526 7527 0
-7527 7526 0
-7527 -7524 0
c Var 'variant_fields_00001_00007_00001' order represents '7' with '7528'
-7526 7528 0
c Var 'variant_fields_00001_00007_00001' direct represents '7' with '7529'
7526 -7528 7529 0
-7529 7528 0
-7529 -7526 0
c Var 'variant_fields_00001_00007_00001' order represents '8' with '7530'
-7528 7530 0
c Var 'variant_fields_00001_00007_00001' direct represents '8' with '7531'
7528 -7530 7531 0
-7531 7530 0
-7531 -7528 0
c Var 'variant_fields_00001_00007_00001' direct represents '9' with '-7530'
7517 7519 7521 7523 7525 7527 7529 7531 -7530 0
c Encoding variable: variant_fields_00001_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00002' order represents '1' with '7532'
c Var 'variant_fields_00001_00007_00002' direct represents '1' with '7532'
c Var 'variant_fields_00001_00007_00002' order represents '2' with '7533'
-7532 7533 0
c Var 'variant_fields_00001_00007_00002' direct represents '2' with '7534'
7532 -7533 7534 0
-7534 7533 0
-7534 -7532 0
c Var 'variant_fields_00001_00007_00002' order represents '3' with '7535'
-7533 7535 0
c Var 'variant_fields_00001_00007_00002' direct represents '3' with '7536'
7533 -7535 7536 0
-7536 7535 0
-7536 -7533 0
c Var 'variant_fields_00001_00007_00002' order represents '4' with '7537'
-7535 7537 0
c Var 'variant_fields_00001_00007_00002' direct represents '4' with '7538'
7535 -7537 7538 0
-7538 7537 0
-7538 -7535 0
c Var 'variant_fields_00001_00007_00002' order represents '5' with '7539'
-7537 7539 0
c Var 'variant_fields_00001_00007_00002' direct represents '5' with '7540'
7537 -7539 7540 0
-7540 7539 0
-7540 -7537 0
c Var 'variant_fields_00001_00007_00002' order represents '6' with '7541'
-7539 7541 0
c Var 'variant_fields_00001_00007_00002' direct represents '6' with '7542'
7539 -7541 7542 0
-7542 7541 0
-7542 -7539 0
c Var 'variant_fields_00001_00007_00002' order represents '7' with '7543'
-7541 7543 0
c Var 'variant_fields_00001_00007_00002' direct represents '7' with '7544'
7541 -7543 7544 0
-7544 7543 0
-7544 -7541 0
c Var 'variant_fields_00001_00007_00002' order represents '8' with '7545'
-7543 7545 0
c Var 'variant_fields_00001_00007_00002' direct represents '8' with '7546'
7543 -7545 7546 0
-7546 7545 0
-7546 -7543 0
c Var 'variant_fields_00001_00007_00002' direct represents '9' with '-7545'
7532 7534 7536 7538 7540 7542 7544 7546 -7545 0
c Encoding variable: variant_fields_00001_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00003' order represents '1' with '7547'
c Var 'variant_fields_00001_00007_00003' direct represents '1' with '7547'
c Var 'variant_fields_00001_00007_00003' order represents '2' with '7548'
-7547 7548 0
c Var 'variant_fields_00001_00007_00003' direct represents '2' with '7549'
7547 -7548 7549 0
-7549 7548 0
-7549 -7547 0
c Var 'variant_fields_00001_00007_00003' order represents '3' with '7550'
-7548 7550 0
c Var 'variant_fields_00001_00007_00003' direct represents '3' with '7551'
7548 -7550 7551 0
-7551 7550 0
-7551 -7548 0
c Var 'variant_fields_00001_00007_00003' order represents '4' with '7552'
-7550 7552 0
c Var 'variant_fields_00001_00007_00003' direct represents '4' with '7553'
7550 -7552 7553 0
-7553 7552 0
-7553 -7550 0
c Var 'variant_fields_00001_00007_00003' order represents '5' with '7554'
-7552 7554 0
c Var 'variant_fields_00001_00007_00003' direct represents '5' with '7555'
7552 -7554 7555 0
-7555 7554 0
-7555 -7552 0
c Var 'variant_fields_00001_00007_00003' order represents '6' with '7556'
-7554 7556 0
c Var 'variant_fields_00001_00007_00003' direct represents '6' with '7557'
7554 -7556 7557 0
-7557 7556 0
-7557 -7554 0
c Var 'variant_fields_00001_00007_00003' order represents '7' with '7558'
-7556 7558 0
c Var 'variant_fields_00001_00007_00003' direct represents '7' with '7559'
7556 -7558 7559 0
-7559 7558 0
-7559 -7556 0
c Var 'variant_fields_00001_00007_00003' order represents '8' with '7560'
-7558 7560 0
c Var 'variant_fields_00001_00007_00003' direct represents '8' with '7561'
7558 -7560 7561 0
-7561 7560 0
-7561 -7558 0
c Var 'variant_fields_00001_00007_00003' direct represents '9' with '-7560'
7547 7549 7551 7553 7555 7557 7559 7561 -7560 0
c Encoding variable: variant_fields_00001_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00004' order represents '1' with '7562'
c Var 'variant_fields_00001_00007_00004' direct represents '1' with '7562'
c Var 'variant_fields_00001_00007_00004' order represents '2' with '7563'
-7562 7563 0
c Var 'variant_fields_00001_00007_00004' direct represents '2' with '7564'
7562 -7563 7564 0
-7564 7563 0
-7564 -7562 0
c Var 'variant_fields_00001_00007_00004' order represents '3' with '7565'
-7563 7565 0
c Var 'variant_fields_00001_00007_00004' direct represents '3' with '7566'
7563 -7565 7566 0
-7566 7565 0
-7566 -7563 0
c Var 'variant_fields_00001_00007_00004' order represents '4' with '7567'
-7565 7567 0
c Var 'variant_fields_00001_00007_00004' direct represents '4' with '7568'
7565 -7567 7568 0
-7568 7567 0
-7568 -7565 0
c Var 'variant_fields_00001_00007_00004' order represents '5' with '7569'
-7567 7569 0
c Var 'variant_fields_00001_00007_00004' direct represents '5' with '7570'
7567 -7569 7570 0
-7570 7569 0
-7570 -7567 0
c Var 'variant_fields_00001_00007_00004' order represents '6' with '7571'
-7569 7571 0
c Var 'variant_fields_00001_00007_00004' direct represents '6' with '7572'
7569 -7571 7572 0
-7572 7571 0
-7572 -7569 0
c Var 'variant_fields_00001_00007_00004' order represents '7' with '7573'
-7571 7573 0
c Var 'variant_fields_00001_00007_00004' direct represents '7' with '7574'
7571 -7573 7574 0
-7574 7573 0
-7574 -7571 0
c Var 'variant_fields_00001_00007_00004' order represents '8' with '7575'
-7573 7575 0
c Var 'variant_fields_00001_00007_00004' direct represents '8' with '7576'
7573 -7575 7576 0
-7576 7575 0
-7576 -7573 0
c Var 'variant_fields_00001_00007_00004' direct represents '9' with '-7575'
7562 7564 7566 7568 7570 7572 7574 7576 -7575 0
c Encoding variable: variant_fields_00001_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00005' order represents '1' with '7577'
c Var 'variant_fields_00001_00007_00005' direct represents '1' with '7577'
c Var 'variant_fields_00001_00007_00005' order represents '2' with '7578'
-7577 7578 0
c Var 'variant_fields_00001_00007_00005' direct represents '2' with '7579'
7577 -7578 7579 0
-7579 7578 0
-7579 -7577 0
c Var 'variant_fields_00001_00007_00005' order represents '3' with '7580'
-7578 7580 0
c Var 'variant_fields_00001_00007_00005' direct represents '3' with '7581'
7578 -7580 7581 0
-7581 7580 0
-7581 -7578 0
c Var 'variant_fields_00001_00007_00005' order represents '4' with '7582'
-7580 7582 0
c Var 'variant_fields_00001_00007_00005' direct represents '4' with '7583'
7580 -7582 7583 0
-7583 7582 0
-7583 -7580 0
c Var 'variant_fields_00001_00007_00005' order represents '5' with '7584'
-7582 7584 0
c Var 'variant_fields_00001_00007_00005' direct represents '5' with '7585'
7582 -7584 7585 0
-7585 7584 0
-7585 -7582 0
c Var 'variant_fields_00001_00007_00005' order represents '6' with '7586'
-7584 7586 0
c Var 'variant_fields_00001_00007_00005' direct represents '6' with '7587'
7584 -7586 7587 0
-7587 7586 0
-7587 -7584 0
c Var 'variant_fields_00001_00007_00005' order represents '7' with '7588'
-7586 7588 0
c Var 'variant_fields_00001_00007_00005' direct represents '7' with '7589'
7586 -7588 7589 0
-7589 7588 0
-7589 -7586 0
c Var 'variant_fields_00001_00007_00005' order represents '8' with '7590'
-7588 7590 0
c Var 'variant_fields_00001_00007_00005' direct represents '8' with '7591'
7588 -7590 7591 0
-7591 7590 0
-7591 -7588 0
c Var 'variant_fields_00001_00007_00005' direct represents '9' with '-7590'
7577 7579 7581 7583 7585 7587 7589 7591 -7590 0
c Encoding variable: variant_fields_00001_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00006' order represents '1' with '7592'
c Var 'variant_fields_00001_00007_00006' direct represents '1' with '7592'
c Var 'variant_fields_00001_00007_00006' order represents '2' with '7593'
-7592 7593 0
c Var 'variant_fields_00001_00007_00006' direct represents '2' with '7594'
7592 -7593 7594 0
-7594 7593 0
-7594 -7592 0
c Var 'variant_fields_00001_00007_00006' order represents '3' with '7595'
-7593 7595 0
c Var 'variant_fields_00001_00007_00006' direct represents '3' with '7596'
7593 -7595 7596 0
-7596 7595 0
-7596 -7593 0
c Var 'variant_fields_00001_00007_00006' order represents '4' with '7597'
-7595 7597 0
c Var 'variant_fields_00001_00007_00006' direct represents '4' with '7598'
7595 -7597 7598 0
-7598 7597 0
-7598 -7595 0
c Var 'variant_fields_00001_00007_00006' order represents '5' with '7599'
-7597 7599 0
c Var 'variant_fields_00001_00007_00006' direct represents '5' with '7600'
7597 -7599 7600 0
-7600 7599 0
-7600 -7597 0
c Var 'variant_fields_00001_00007_00006' order represents '6' with '7601'
-7599 7601 0
c Var 'variant_fields_00001_00007_00006' direct represents '6' with '7602'
7599 -7601 7602 0
-7602 7601 0
-7602 -7599 0
c Var 'variant_fields_00001_00007_00006' order represents '7' with '7603'
-7601 7603 0
c Var 'variant_fields_00001_00007_00006' direct represents '7' with '7604'
7601 -7603 7604 0
-7604 7603 0
-7604 -7601 0
c Var 'variant_fields_00001_00007_00006' order represents '8' with '7605'
-7603 7605 0
c Var 'variant_fields_00001_00007_00006' direct represents '8' with '7606'
7603 -7605 7606 0
-7606 7605 0
-7606 -7603 0
c Var 'variant_fields_00001_00007_00006' direct represents '9' with '-7605'
7592 7594 7596 7598 7600 7602 7604 7606 -7605 0
c Encoding variable: variant_fields_00001_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00007' order represents '1' with '7607'
c Var 'variant_fields_00001_00007_00007' direct represents '1' with '7607'
c Var 'variant_fields_00001_00007_00007' order represents '2' with '7608'
-7607 7608 0
c Var 'variant_fields_00001_00007_00007' direct represents '2' with '7609'
7607 -7608 7609 0
-7609 7608 0
-7609 -7607 0
c Var 'variant_fields_00001_00007_00007' order represents '3' with '7610'
-7608 7610 0
c Var 'variant_fields_00001_00007_00007' direct represents '3' with '7611'
7608 -7610 7611 0
-7611 7610 0
-7611 -7608 0
c Var 'variant_fields_00001_00007_00007' order represents '4' with '7612'
-7610 7612 0
c Var 'variant_fields_00001_00007_00007' direct represents '4' with '7613'
7610 -7612 7613 0
-7613 7612 0
-7613 -7610 0
c Var 'variant_fields_00001_00007_00007' order represents '5' with '7614'
-7612 7614 0
c Var 'variant_fields_00001_00007_00007' direct represents '5' with '7615'
7612 -7614 7615 0
-7615 7614 0
-7615 -7612 0
c Var 'variant_fields_00001_00007_00007' order represents '6' with '7616'
-7614 7616 0
c Var 'variant_fields_00001_00007_00007' direct represents '6' with '7617'
7614 -7616 7617 0
-7617 7616 0
-7617 -7614 0
c Var 'variant_fields_00001_00007_00007' order represents '7' with '7618'
-7616 7618 0
c Var 'variant_fields_00001_00007_00007' direct represents '7' with '7619'
7616 -7618 7619 0
-7619 7618 0
-7619 -7616 0
c Var 'variant_fields_00001_00007_00007' order represents '8' with '7620'
-7618 7620 0
c Var 'variant_fields_00001_00007_00007' direct represents '8' with '7621'
7618 -7620 7621 0
-7621 7620 0
-7621 -7618 0
c Var 'variant_fields_00001_00007_00007' direct represents '9' with '-7620'
7607 7609 7611 7613 7615 7617 7619 7621 -7620 0
c Encoding variable: variant_fields_00001_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00008' order represents '1' with '7622'
c Var 'variant_fields_00001_00007_00008' direct represents '1' with '7622'
c Var 'variant_fields_00001_00007_00008' order represents '2' with '7623'
-7622 7623 0
c Var 'variant_fields_00001_00007_00008' direct represents '2' with '7624'
7622 -7623 7624 0
-7624 7623 0
-7624 -7622 0
c Var 'variant_fields_00001_00007_00008' order represents '3' with '7625'
-7623 7625 0
c Var 'variant_fields_00001_00007_00008' direct represents '3' with '7626'
7623 -7625 7626 0
-7626 7625 0
-7626 -7623 0
c Var 'variant_fields_00001_00007_00008' order represents '4' with '7627'
-7625 7627 0
c Var 'variant_fields_00001_00007_00008' direct represents '4' with '7628'
7625 -7627 7628 0
-7628 7627 0
-7628 -7625 0
c Var 'variant_fields_00001_00007_00008' order represents '5' with '7629'
-7627 7629 0
c Var 'variant_fields_00001_00007_00008' direct represents '5' with '7630'
7627 -7629 7630 0
-7630 7629 0
-7630 -7627 0
c Var 'variant_fields_00001_00007_00008' order represents '6' with '7631'
-7629 7631 0
c Var 'variant_fields_00001_00007_00008' direct represents '6' with '7632'
7629 -7631 7632 0
-7632 7631 0
-7632 -7629 0
c Var 'variant_fields_00001_00007_00008' order represents '7' with '7633'
-7631 7633 0
c Var 'variant_fields_00001_00007_00008' direct represents '7' with '7634'
7631 -7633 7634 0
-7634 7633 0
-7634 -7631 0
c Var 'variant_fields_00001_00007_00008' order represents '8' with '7635'
-7633 7635 0
c Var 'variant_fields_00001_00007_00008' direct represents '8' with '7636'
7633 -7635 7636 0
-7636 7635 0
-7636 -7633 0
c Var 'variant_fields_00001_00007_00008' direct represents '9' with '-7635'
7622 7624 7626 7628 7630 7632 7634 7636 -7635 0
c Encoding variable: variant_fields_00001_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00007_00009' order represents '1' with '7637'
c Var 'variant_fields_00001_00007_00009' direct represents '1' with '7637'
c Var 'variant_fields_00001_00007_00009' order represents '2' with '7638'
-7637 7638 0
c Var 'variant_fields_00001_00007_00009' direct represents '2' with '7639'
7637 -7638 7639 0
-7639 7638 0
-7639 -7637 0
c Var 'variant_fields_00001_00007_00009' order represents '3' with '7640'
-7638 7640 0
c Var 'variant_fields_00001_00007_00009' direct represents '3' with '7641'
7638 -7640 7641 0
-7641 7640 0
-7641 -7638 0
c Var 'variant_fields_00001_00007_00009' order represents '4' with '7642'
-7640 7642 0
c Var 'variant_fields_00001_00007_00009' direct represents '4' with '7643'
7640 -7642 7643 0
-7643 7642 0
-7643 -7640 0
c Var 'variant_fields_00001_00007_00009' order represents '5' with '7644'
-7642 7644 0
c Var 'variant_fields_00001_00007_00009' direct represents '5' with '7645'
7642 -7644 7645 0
-7645 7644 0
-7645 -7642 0
c Var 'variant_fields_00001_00007_00009' order represents '6' with '7646'
-7644 7646 0
c Var 'variant_fields_00001_00007_00009' direct represents '6' with '7647'
7644 -7646 7647 0
-7647 7646 0
-7647 -7644 0
c Var 'variant_fields_00001_00007_00009' order represents '7' with '7648'
-7646 7648 0
c Var 'variant_fields_00001_00007_00009' direct represents '7' with '7649'
7646 -7648 7649 0
-7649 7648 0
-7649 -7646 0
c Var 'variant_fields_00001_00007_00009' order represents '8' with '7650'
-7648 7650 0
c Var 'variant_fields_00001_00007_00009' direct represents '8' with '7651'
7648 -7650 7651 0
-7651 7650 0
-7651 -7648 0
c Var 'variant_fields_00001_00007_00009' direct represents '9' with '-7650'
7637 7639 7641 7643 7645 7647 7649 7651 -7650 0
c Encoding variable: variant_fields_00001_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00001' order represents '1' with '7652'
c Var 'variant_fields_00001_00008_00001' direct represents '1' with '7652'
c Var 'variant_fields_00001_00008_00001' order represents '2' with '7653'
-7652 7653 0
c Var 'variant_fields_00001_00008_00001' direct represents '2' with '7654'
7652 -7653 7654 0
-7654 7653 0
-7654 -7652 0
c Var 'variant_fields_00001_00008_00001' order represents '3' with '7655'
-7653 7655 0
c Var 'variant_fields_00001_00008_00001' direct represents '3' with '7656'
7653 -7655 7656 0
-7656 7655 0
-7656 -7653 0
c Var 'variant_fields_00001_00008_00001' order represents '4' with '7657'
-7655 7657 0
c Var 'variant_fields_00001_00008_00001' direct represents '4' with '7658'
7655 -7657 7658 0
-7658 7657 0
-7658 -7655 0
c Var 'variant_fields_00001_00008_00001' order represents '5' with '7659'
-7657 7659 0
c Var 'variant_fields_00001_00008_00001' direct represents '5' with '7660'
7657 -7659 7660 0
-7660 7659 0
-7660 -7657 0
c Var 'variant_fields_00001_00008_00001' order represents '6' with '7661'
-7659 7661 0
c Var 'variant_fields_00001_00008_00001' direct represents '6' with '7662'
7659 -7661 7662 0
-7662 7661 0
-7662 -7659 0
c Var 'variant_fields_00001_00008_00001' order represents '7' with '7663'
-7661 7663 0
c Var 'variant_fields_00001_00008_00001' direct represents '7' with '7664'
7661 -7663 7664 0
-7664 7663 0
-7664 -7661 0
c Var 'variant_fields_00001_00008_00001' order represents '8' with '7665'
-7663 7665 0
c Var 'variant_fields_00001_00008_00001' direct represents '8' with '7666'
7663 -7665 7666 0
-7666 7665 0
-7666 -7663 0
c Var 'variant_fields_00001_00008_00001' direct represents '9' with '-7665'
7652 7654 7656 7658 7660 7662 7664 7666 -7665 0
c Encoding variable: variant_fields_00001_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00002' order represents '1' with '7667'
c Var 'variant_fields_00001_00008_00002' direct represents '1' with '7667'
c Var 'variant_fields_00001_00008_00002' order represents '2' with '7668'
-7667 7668 0
c Var 'variant_fields_00001_00008_00002' direct represents '2' with '7669'
7667 -7668 7669 0
-7669 7668 0
-7669 -7667 0
c Var 'variant_fields_00001_00008_00002' order represents '3' with '7670'
-7668 7670 0
c Var 'variant_fields_00001_00008_00002' direct represents '3' with '7671'
7668 -7670 7671 0
-7671 7670 0
-7671 -7668 0
c Var 'variant_fields_00001_00008_00002' order represents '4' with '7672'
-7670 7672 0
c Var 'variant_fields_00001_00008_00002' direct represents '4' with '7673'
7670 -7672 7673 0
-7673 7672 0
-7673 -7670 0
c Var 'variant_fields_00001_00008_00002' order represents '5' with '7674'
-7672 7674 0
c Var 'variant_fields_00001_00008_00002' direct represents '5' with '7675'
7672 -7674 7675 0
-7675 7674 0
-7675 -7672 0
c Var 'variant_fields_00001_00008_00002' order represents '6' with '7676'
-7674 7676 0
c Var 'variant_fields_00001_00008_00002' direct represents '6' with '7677'
7674 -7676 7677 0
-7677 7676 0
-7677 -7674 0
c Var 'variant_fields_00001_00008_00002' order represents '7' with '7678'
-7676 7678 0
c Var 'variant_fields_00001_00008_00002' direct represents '7' with '7679'
7676 -7678 7679 0
-7679 7678 0
-7679 -7676 0
c Var 'variant_fields_00001_00008_00002' order represents '8' with '7680'
-7678 7680 0
c Var 'variant_fields_00001_00008_00002' direct represents '8' with '7681'
7678 -7680 7681 0
-7681 7680 0
-7681 -7678 0
c Var 'variant_fields_00001_00008_00002' direct represents '9' with '-7680'
7667 7669 7671 7673 7675 7677 7679 7681 -7680 0
c Encoding variable: variant_fields_00001_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00003' order represents '1' with '7682'
c Var 'variant_fields_00001_00008_00003' direct represents '1' with '7682'
c Var 'variant_fields_00001_00008_00003' order represents '2' with '7683'
-7682 7683 0
c Var 'variant_fields_00001_00008_00003' direct represents '2' with '7684'
7682 -7683 7684 0
-7684 7683 0
-7684 -7682 0
c Var 'variant_fields_00001_00008_00003' order represents '3' with '7685'
-7683 7685 0
c Var 'variant_fields_00001_00008_00003' direct represents '3' with '7686'
7683 -7685 7686 0
-7686 7685 0
-7686 -7683 0
c Var 'variant_fields_00001_00008_00003' order represents '4' with '7687'
-7685 7687 0
c Var 'variant_fields_00001_00008_00003' direct represents '4' with '7688'
7685 -7687 7688 0
-7688 7687 0
-7688 -7685 0
c Var 'variant_fields_00001_00008_00003' order represents '5' with '7689'
-7687 7689 0
c Var 'variant_fields_00001_00008_00003' direct represents '5' with '7690'
7687 -7689 7690 0
-7690 7689 0
-7690 -7687 0
c Var 'variant_fields_00001_00008_00003' order represents '6' with '7691'
-7689 7691 0
c Var 'variant_fields_00001_00008_00003' direct represents '6' with '7692'
7689 -7691 7692 0
-7692 7691 0
-7692 -7689 0
c Var 'variant_fields_00001_00008_00003' order represents '7' with '7693'
-7691 7693 0
c Var 'variant_fields_00001_00008_00003' direct represents '7' with '7694'
7691 -7693 7694 0
-7694 7693 0
-7694 -7691 0
c Var 'variant_fields_00001_00008_00003' order represents '8' with '7695'
-7693 7695 0
c Var 'variant_fields_00001_00008_00003' direct represents '8' with '7696'
7693 -7695 7696 0
-7696 7695 0
-7696 -7693 0
c Var 'variant_fields_00001_00008_00003' direct represents '9' with '-7695'
7682 7684 7686 7688 7690 7692 7694 7696 -7695 0
c Encoding variable: variant_fields_00001_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00004' order represents '1' with '7697'
c Var 'variant_fields_00001_00008_00004' direct represents '1' with '7697'
c Var 'variant_fields_00001_00008_00004' order represents '2' with '7698'
-7697 7698 0
c Var 'variant_fields_00001_00008_00004' direct represents '2' with '7699'
7697 -7698 7699 0
-7699 7698 0
-7699 -7697 0
c Var 'variant_fields_00001_00008_00004' order represents '3' with '7700'
-7698 7700 0
c Var 'variant_fields_00001_00008_00004' direct represents '3' with '7701'
7698 -7700 7701 0
-7701 7700 0
-7701 -7698 0
c Var 'variant_fields_00001_00008_00004' order represents '4' with '7702'
-7700 7702 0
c Var 'variant_fields_00001_00008_00004' direct represents '4' with '7703'
7700 -7702 7703 0
-7703 7702 0
-7703 -7700 0
c Var 'variant_fields_00001_00008_00004' order represents '5' with '7704'
-7702 7704 0
c Var 'variant_fields_00001_00008_00004' direct represents '5' with '7705'
7702 -7704 7705 0
-7705 7704 0
-7705 -7702 0
c Var 'variant_fields_00001_00008_00004' order represents '6' with '7706'
-7704 7706 0
c Var 'variant_fields_00001_00008_00004' direct represents '6' with '7707'
7704 -7706 7707 0
-7707 7706 0
-7707 -7704 0
c Var 'variant_fields_00001_00008_00004' order represents '7' with '7708'
-7706 7708 0
c Var 'variant_fields_00001_00008_00004' direct represents '7' with '7709'
7706 -7708 7709 0
-7709 7708 0
-7709 -7706 0
c Var 'variant_fields_00001_00008_00004' order represents '8' with '7710'
-7708 7710 0
c Var 'variant_fields_00001_00008_00004' direct represents '8' with '7711'
7708 -7710 7711 0
-7711 7710 0
-7711 -7708 0
c Var 'variant_fields_00001_00008_00004' direct represents '9' with '-7710'
7697 7699 7701 7703 7705 7707 7709 7711 -7710 0
c Encoding variable: variant_fields_00001_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00005' order represents '1' with '7712'
c Var 'variant_fields_00001_00008_00005' direct represents '1' with '7712'
c Var 'variant_fields_00001_00008_00005' order represents '2' with '7713'
-7712 7713 0
c Var 'variant_fields_00001_00008_00005' direct represents '2' with '7714'
7712 -7713 7714 0
-7714 7713 0
-7714 -7712 0
c Var 'variant_fields_00001_00008_00005' order represents '3' with '7715'
-7713 7715 0
c Var 'variant_fields_00001_00008_00005' direct represents '3' with '7716'
7713 -7715 7716 0
-7716 7715 0
-7716 -7713 0
c Var 'variant_fields_00001_00008_00005' order represents '4' with '7717'
-7715 7717 0
c Var 'variant_fields_00001_00008_00005' direct represents '4' with '7718'
7715 -7717 7718 0
-7718 7717 0
-7718 -7715 0
c Var 'variant_fields_00001_00008_00005' order represents '5' with '7719'
-7717 7719 0
c Var 'variant_fields_00001_00008_00005' direct represents '5' with '7720'
7717 -7719 7720 0
-7720 7719 0
-7720 -7717 0
c Var 'variant_fields_00001_00008_00005' order represents '6' with '7721'
-7719 7721 0
c Var 'variant_fields_00001_00008_00005' direct represents '6' with '7722'
7719 -7721 7722 0
-7722 7721 0
-7722 -7719 0
c Var 'variant_fields_00001_00008_00005' order represents '7' with '7723'
-7721 7723 0
c Var 'variant_fields_00001_00008_00005' direct represents '7' with '7724'
7721 -7723 7724 0
-7724 7723 0
-7724 -7721 0
c Var 'variant_fields_00001_00008_00005' order represents '8' with '7725'
-7723 7725 0
c Var 'variant_fields_00001_00008_00005' direct represents '8' with '7726'
7723 -7725 7726 0
-7726 7725 0
-7726 -7723 0
c Var 'variant_fields_00001_00008_00005' direct represents '9' with '-7725'
7712 7714 7716 7718 7720 7722 7724 7726 -7725 0
c Encoding variable: variant_fields_00001_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00006' order represents '1' with '7727'
c Var 'variant_fields_00001_00008_00006' direct represents '1' with '7727'
c Var 'variant_fields_00001_00008_00006' order represents '2' with '7728'
-7727 7728 0
c Var 'variant_fields_00001_00008_00006' direct represents '2' with '7729'
7727 -7728 7729 0
-7729 7728 0
-7729 -7727 0
c Var 'variant_fields_00001_00008_00006' order represents '3' with '7730'
-7728 7730 0
c Var 'variant_fields_00001_00008_00006' direct represents '3' with '7731'
7728 -7730 7731 0
-7731 7730 0
-7731 -7728 0
c Var 'variant_fields_00001_00008_00006' order represents '4' with '7732'
-7730 7732 0
c Var 'variant_fields_00001_00008_00006' direct represents '4' with '7733'
7730 -7732 7733 0
-7733 7732 0
-7733 -7730 0
c Var 'variant_fields_00001_00008_00006' order represents '5' with '7734'
-7732 7734 0
c Var 'variant_fields_00001_00008_00006' direct represents '5' with '7735'
7732 -7734 7735 0
-7735 7734 0
-7735 -7732 0
c Var 'variant_fields_00001_00008_00006' order represents '6' with '7736'
-7734 7736 0
c Var 'variant_fields_00001_00008_00006' direct represents '6' with '7737'
7734 -7736 7737 0
-7737 7736 0
-7737 -7734 0
c Var 'variant_fields_00001_00008_00006' order represents '7' with '7738'
-7736 7738 0
c Var 'variant_fields_00001_00008_00006' direct represents '7' with '7739'
7736 -7738 7739 0
-7739 7738 0
-7739 -7736 0
c Var 'variant_fields_00001_00008_00006' order represents '8' with '7740'
-7738 7740 0
c Var 'variant_fields_00001_00008_00006' direct represents '8' with '7741'
7738 -7740 7741 0
-7741 7740 0
-7741 -7738 0
c Var 'variant_fields_00001_00008_00006' direct represents '9' with '-7740'
7727 7729 7731 7733 7735 7737 7739 7741 -7740 0
c Encoding variable: variant_fields_00001_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00007' order represents '1' with '7742'
c Var 'variant_fields_00001_00008_00007' direct represents '1' with '7742'
c Var 'variant_fields_00001_00008_00007' order represents '2' with '7743'
-7742 7743 0
c Var 'variant_fields_00001_00008_00007' direct represents '2' with '7744'
7742 -7743 7744 0
-7744 7743 0
-7744 -7742 0
c Var 'variant_fields_00001_00008_00007' order represents '3' with '7745'
-7743 7745 0
c Var 'variant_fields_00001_00008_00007' direct represents '3' with '7746'
7743 -7745 7746 0
-7746 7745 0
-7746 -7743 0
c Var 'variant_fields_00001_00008_00007' order represents '4' with '7747'
-7745 7747 0
c Var 'variant_fields_00001_00008_00007' direct represents '4' with '7748'
7745 -7747 7748 0
-7748 7747 0
-7748 -7745 0
c Var 'variant_fields_00001_00008_00007' order represents '5' with '7749'
-7747 7749 0
c Var 'variant_fields_00001_00008_00007' direct represents '5' with '7750'
7747 -7749 7750 0
-7750 7749 0
-7750 -7747 0
c Var 'variant_fields_00001_00008_00007' order represents '6' with '7751'
-7749 7751 0
c Var 'variant_fields_00001_00008_00007' direct represents '6' with '7752'
7749 -7751 7752 0
-7752 7751 0
-7752 -7749 0
c Var 'variant_fields_00001_00008_00007' order represents '7' with '7753'
-7751 7753 0
c Var 'variant_fields_00001_00008_00007' direct represents '7' with '7754'
7751 -7753 7754 0
-7754 7753 0
-7754 -7751 0
c Var 'variant_fields_00001_00008_00007' order represents '8' with '7755'
-7753 7755 0
c Var 'variant_fields_00001_00008_00007' direct represents '8' with '7756'
7753 -7755 7756 0
-7756 7755 0
-7756 -7753 0
c Var 'variant_fields_00001_00008_00007' direct represents '9' with '-7755'
7742 7744 7746 7748 7750 7752 7754 7756 -7755 0
c Encoding variable: variant_fields_00001_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00008' order represents '1' with '7757'
c Var 'variant_fields_00001_00008_00008' direct represents '1' with '7757'
c Var 'variant_fields_00001_00008_00008' order represents '2' with '7758'
-7757 7758 0
c Var 'variant_fields_00001_00008_00008' direct represents '2' with '7759'
7757 -7758 7759 0
-7759 7758 0
-7759 -7757 0
c Var 'variant_fields_00001_00008_00008' order represents '3' with '7760'
-7758 7760 0
c Var 'variant_fields_00001_00008_00008' direct represents '3' with '7761'
7758 -7760 7761 0
-7761 7760 0
-7761 -7758 0
c Var 'variant_fields_00001_00008_00008' order represents '4' with '7762'
-7760 7762 0
c Var 'variant_fields_00001_00008_00008' direct represents '4' with '7763'
7760 -7762 7763 0
-7763 7762 0
-7763 -7760 0
c Var 'variant_fields_00001_00008_00008' order represents '5' with '7764'
-7762 7764 0
c Var 'variant_fields_00001_00008_00008' direct represents '5' with '7765'
7762 -7764 7765 0
-7765 7764 0
-7765 -7762 0
c Var 'variant_fields_00001_00008_00008' order represents '6' with '7766'
-7764 7766 0
c Var 'variant_fields_00001_00008_00008' direct represents '6' with '7767'
7764 -7766 7767 0
-7767 7766 0
-7767 -7764 0
c Var 'variant_fields_00001_00008_00008' order represents '7' with '7768'
-7766 7768 0
c Var 'variant_fields_00001_00008_00008' direct represents '7' with '7769'
7766 -7768 7769 0
-7769 7768 0
-7769 -7766 0
c Var 'variant_fields_00001_00008_00008' order represents '8' with '7770'
-7768 7770 0
c Var 'variant_fields_00001_00008_00008' direct represents '8' with '7771'
7768 -7770 7771 0
-7771 7770 0
-7771 -7768 0
c Var 'variant_fields_00001_00008_00008' direct represents '9' with '-7770'
7757 7759 7761 7763 7765 7767 7769 7771 -7770 0
c Encoding variable: variant_fields_00001_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00009' order represents '1' with '7772'
c Var 'variant_fields_00001_00008_00009' direct represents '1' with '7772'
c Var 'variant_fields_00001_00008_00009' order represents '2' with '7773'
-7772 7773 0
c Var 'variant_fields_00001_00008_00009' direct represents '2' with '7774'
7772 -7773 7774 0
-7774 7773 0
-7774 -7772 0
c Var 'variant_fields_00001_00008_00009' order represents '3' with '7775'
-7773 7775 0
c Var 'variant_fields_00001_00008_00009' direct represents '3' with '7776'
7773 -7775 7776 0
-7776 7775 0
-7776 -7773 0
c Var 'variant_fields_00001_00008_00009' order represents '4' with '7777'
-7775 7777 0
c Var 'variant_fields_00001_00008_00009' direct represents '4' with '7778'
7775 -7777 7778 0
-7778 7777 0
-7778 -7775 0
c Var 'variant_fields_00001_00008_00009' order represents '5' with '7779'
-7777 7779 0
c Var 'variant_fields_00001_00008_00009' direct represents '5' with '7780'
7777 -7779 7780 0
-7780 7779 0
-7780 -7777 0
c Var 'variant_fields_00001_00008_00009' order represents '6' with '7781'
-7779 7781 0
c Var 'variant_fields_00001_00008_00009' direct represents '6' with '7782'
7779 -7781 7782 0
-7782 7781 0
-7782 -7779 0
c Var 'variant_fields_00001_00008_00009' order represents '7' with '7783'
-7781 7783 0
c Var 'variant_fields_00001_00008_00009' direct represents '7' with '7784'
7781 -7783 7784 0
-7784 7783 0
-7784 -7781 0
c Var 'variant_fields_00001_00008_00009' order represents '8' with '7785'
-7783 7785 0
c Var 'variant_fields_00001_00008_00009' direct represents '8' with '7786'
7783 -7785 7786 0
-7786 7785 0
-7786 -7783 0
c Var 'variant_fields_00001_00008_00009' direct represents '9' with '-7785'
7772 7774 7776 7778 7780 7782 7784 7786 -7785 0
c Encoding variable: variant_fields_00001_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00001' order represents '1' with '7787'
c Var 'variant_fields_00001_00009_00001' direct represents '1' with '7787'
c Var 'variant_fields_00001_00009_00001' order represents '2' with '7788'
-7787 7788 0
c Var 'variant_fields_00001_00009_00001' direct represents '2' with '7789'
7787 -7788 7789 0
-7789 7788 0
-7789 -7787 0
c Var 'variant_fields_00001_00009_00001' order represents '3' with '7790'
-7788 7790 0
c Var 'variant_fields_00001_00009_00001' direct represents '3' with '7791'
7788 -7790 7791 0
-7791 7790 0
-7791 -7788 0
c Var 'variant_fields_00001_00009_00001' order represents '4' with '7792'
-7790 7792 0
c Var 'variant_fields_00001_00009_00001' direct represents '4' with '7793'
7790 -7792 7793 0
-7793 7792 0
-7793 -7790 0
c Var 'variant_fields_00001_00009_00001' order represents '5' with '7794'
-7792 7794 0
c Var 'variant_fields_00001_00009_00001' direct represents '5' with '7795'
7792 -7794 7795 0
-7795 7794 0
-7795 -7792 0
c Var 'variant_fields_00001_00009_00001' order represents '6' with '7796'
-7794 7796 0
c Var 'variant_fields_00001_00009_00001' direct represents '6' with '7797'
7794 -7796 7797 0
-7797 7796 0
-7797 -7794 0
c Var 'variant_fields_00001_00009_00001' order represents '7' with '7798'
-7796 7798 0
c Var 'variant_fields_00001_00009_00001' direct represents '7' with '7799'
7796 -7798 7799 0
-7799 7798 0
-7799 -7796 0
c Var 'variant_fields_00001_00009_00001' order represents '8' with '7800'
-7798 7800 0
c Var 'variant_fields_00001_00009_00001' direct represents '8' with '7801'
7798 -7800 7801 0
-7801 7800 0
-7801 -7798 0
c Var 'variant_fields_00001_00009_00001' direct represents '9' with '-7800'
7787 7789 7791 7793 7795 7797 7799 7801 -7800 0
c Encoding variable: variant_fields_00001_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00002' order represents '1' with '7802'
c Var 'variant_fields_00001_00009_00002' direct represents '1' with '7802'
c Var 'variant_fields_00001_00009_00002' order represents '2' with '7803'
-7802 7803 0
c Var 'variant_fields_00001_00009_00002' direct represents '2' with '7804'
7802 -7803 7804 0
-7804 7803 0
-7804 -7802 0
c Var 'variant_fields_00001_00009_00002' order represents '3' with '7805'
-7803 7805 0
c Var 'variant_fields_00001_00009_00002' direct represents '3' with '7806'
7803 -7805 7806 0
-7806 7805 0
-7806 -7803 0
c Var 'variant_fields_00001_00009_00002' order represents '4' with '7807'
-7805 7807 0
c Var 'variant_fields_00001_00009_00002' direct represents '4' with '7808'
7805 -7807 7808 0
-7808 7807 0
-7808 -7805 0
c Var 'variant_fields_00001_00009_00002' order represents '5' with '7809'
-7807 7809 0
c Var 'variant_fields_00001_00009_00002' direct represents '5' with '7810'
7807 -7809 7810 0
-7810 7809 0
-7810 -7807 0
c Var 'variant_fields_00001_00009_00002' order represents '6' with '7811'
-7809 7811 0
c Var 'variant_fields_00001_00009_00002' direct represents '6' with '7812'
7809 -7811 7812 0
-7812 7811 0
-7812 -7809 0
c Var 'variant_fields_00001_00009_00002' order represents '7' with '7813'
-7811 7813 0
c Var 'variant_fields_00001_00009_00002' direct represents '7' with '7814'
7811 -7813 7814 0
-7814 7813 0
-7814 -7811 0
c Var 'variant_fields_00001_00009_00002' order represents '8' with '7815'
-7813 7815 0
c Var 'variant_fields_00001_00009_00002' direct represents '8' with '7816'
7813 -7815 7816 0
-7816 7815 0
-7816 -7813 0
c Var 'variant_fields_00001_00009_00002' direct represents '9' with '-7815'
7802 7804 7806 7808 7810 7812 7814 7816 -7815 0
c Encoding variable: variant_fields_00001_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00003' order represents '1' with '7817'
c Var 'variant_fields_00001_00009_00003' direct represents '1' with '7817'
c Var 'variant_fields_00001_00009_00003' order represents '2' with '7818'
-7817 7818 0
c Var 'variant_fields_00001_00009_00003' direct represents '2' with '7819'
7817 -7818 7819 0
-7819 7818 0
-7819 -7817 0
c Var 'variant_fields_00001_00009_00003' order represents '3' with '7820'
-7818 7820 0
c Var 'variant_fields_00001_00009_00003' direct represents '3' with '7821'
7818 -7820 7821 0
-7821 7820 0
-7821 -7818 0
c Var 'variant_fields_00001_00009_00003' order represents '4' with '7822'
-7820 7822 0
c Var 'variant_fields_00001_00009_00003' direct represents '4' with '7823'
7820 -7822 7823 0
-7823 7822 0
-7823 -7820 0
c Var 'variant_fields_00001_00009_00003' order represents '5' with '7824'
-7822 7824 0
c Var 'variant_fields_00001_00009_00003' direct represents '5' with '7825'
7822 -7824 7825 0
-7825 7824 0
-7825 -7822 0
c Var 'variant_fields_00001_00009_00003' order represents '6' with '7826'
-7824 7826 0
c Var 'variant_fields_00001_00009_00003' direct represents '6' with '7827'
7824 -7826 7827 0
-7827 7826 0
-7827 -7824 0
c Var 'variant_fields_00001_00009_00003' order represents '7' with '7828'
-7826 7828 0
c Var 'variant_fields_00001_00009_00003' direct represents '7' with '7829'
7826 -7828 7829 0
-7829 7828 0
-7829 -7826 0
c Var 'variant_fields_00001_00009_00003' order represents '8' with '7830'
-7828 7830 0
c Var 'variant_fields_00001_00009_00003' direct represents '8' with '7831'
7828 -7830 7831 0
-7831 7830 0
-7831 -7828 0
c Var 'variant_fields_00001_00009_00003' direct represents '9' with '-7830'
7817 7819 7821 7823 7825 7827 7829 7831 -7830 0
c Encoding variable: variant_fields_00001_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00004' order represents '1' with '7832'
c Var 'variant_fields_00001_00009_00004' direct represents '1' with '7832'
c Var 'variant_fields_00001_00009_00004' order represents '2' with '7833'
-7832 7833 0
c Var 'variant_fields_00001_00009_00004' direct represents '2' with '7834'
7832 -7833 7834 0
-7834 7833 0
-7834 -7832 0
c Var 'variant_fields_00001_00009_00004' order represents '3' with '7835'
-7833 7835 0
c Var 'variant_fields_00001_00009_00004' direct represents '3' with '7836'
7833 -7835 7836 0
-7836 7835 0
-7836 -7833 0
c Var 'variant_fields_00001_00009_00004' order represents '4' with '7837'
-7835 7837 0
c Var 'variant_fields_00001_00009_00004' direct represents '4' with '7838'
7835 -7837 7838 0
-7838 7837 0
-7838 -7835 0
c Var 'variant_fields_00001_00009_00004' order represents '5' with '7839'
-7837 7839 0
c Var 'variant_fields_00001_00009_00004' direct represents '5' with '7840'
7837 -7839 7840 0
-7840 7839 0
-7840 -7837 0
c Var 'variant_fields_00001_00009_00004' order represents '6' with '7841'
-7839 7841 0
c Var 'variant_fields_00001_00009_00004' direct represents '6' with '7842'
7839 -7841 7842 0
-7842 7841 0
-7842 -7839 0
c Var 'variant_fields_00001_00009_00004' order represents '7' with '7843'
-7841 7843 0
c Var 'variant_fields_00001_00009_00004' direct represents '7' with '7844'
7841 -7843 7844 0
-7844 7843 0
-7844 -7841 0
c Var 'variant_fields_00001_00009_00004' order represents '8' with '7845'
-7843 7845 0
c Var 'variant_fields_00001_00009_00004' direct represents '8' with '7846'
7843 -7845 7846 0
-7846 7845 0
-7846 -7843 0
c Var 'variant_fields_00001_00009_00004' direct represents '9' with '-7845'
7832 7834 7836 7838 7840 7842 7844 7846 -7845 0
c Encoding variable: variant_fields_00001_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00005' order represents '1' with '7847'
c Var 'variant_fields_00001_00009_00005' direct represents '1' with '7847'
c Var 'variant_fields_00001_00009_00005' order represents '2' with '7848'
-7847 7848 0
c Var 'variant_fields_00001_00009_00005' direct represents '2' with '7849'
7847 -7848 7849 0
-7849 7848 0
-7849 -7847 0
c Var 'variant_fields_00001_00009_00005' order represents '3' with '7850'
-7848 7850 0
c Var 'variant_fields_00001_00009_00005' direct represents '3' with '7851'
7848 -7850 7851 0
-7851 7850 0
-7851 -7848 0
c Var 'variant_fields_00001_00009_00005' order represents '4' with '7852'
-7850 7852 0
c Var 'variant_fields_00001_00009_00005' direct represents '4' with '7853'
7850 -7852 7853 0
-7853 7852 0
-7853 -7850 0
c Var 'variant_fields_00001_00009_00005' order represents '5' with '7854'
-7852 7854 0
c Var 'variant_fields_00001_00009_00005' direct represents '5' with '7855'
7852 -7854 7855 0
-7855 7854 0
-7855 -7852 0
c Var 'variant_fields_00001_00009_00005' order represents '6' with '7856'
-7854 7856 0
c Var 'variant_fields_00001_00009_00005' direct represents '6' with '7857'
7854 -7856 7857 0
-7857 7856 0
-7857 -7854 0
c Var 'variant_fields_00001_00009_00005' order represents '7' with '7858'
-7856 7858 0
c Var 'variant_fields_00001_00009_00005' direct represents '7' with '7859'
7856 -7858 7859 0
-7859 7858 0
-7859 -7856 0
c Var 'variant_fields_00001_00009_00005' order represents '8' with '7860'
-7858 7860 0
c Var 'variant_fields_00001_00009_00005' direct represents '8' with '7861'
7858 -7860 7861 0
-7861 7860 0
-7861 -7858 0
c Var 'variant_fields_00001_00009_00005' direct represents '9' with '-7860'
7847 7849 7851 7853 7855 7857 7859 7861 -7860 0
c Encoding variable: variant_fields_00001_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00006' order represents '1' with '7862'
c Var 'variant_fields_00001_00009_00006' direct represents '1' with '7862'
c Var 'variant_fields_00001_00009_00006' order represents '2' with '7863'
-7862 7863 0
c Var 'variant_fields_00001_00009_00006' direct represents '2' with '7864'
7862 -7863 7864 0
-7864 7863 0
-7864 -7862 0
c Var 'variant_fields_00001_00009_00006' order represents '3' with '7865'
-7863 7865 0
c Var 'variant_fields_00001_00009_00006' direct represents '3' with '7866'
7863 -7865 7866 0
-7866 7865 0
-7866 -7863 0
c Var 'variant_fields_00001_00009_00006' order represents '4' with '7867'
-7865 7867 0
c Var 'variant_fields_00001_00009_00006' direct represents '4' with '7868'
7865 -7867 7868 0
-7868 7867 0
-7868 -7865 0
c Var 'variant_fields_00001_00009_00006' order represents '5' with '7869'
-7867 7869 0
c Var 'variant_fields_00001_00009_00006' direct represents '5' with '7870'
7867 -7869 7870 0
-7870 7869 0
-7870 -7867 0
c Var 'variant_fields_00001_00009_00006' order represents '6' with '7871'
-7869 7871 0
c Var 'variant_fields_00001_00009_00006' direct represents '6' with '7872'
7869 -7871 7872 0
-7872 7871 0
-7872 -7869 0
c Var 'variant_fields_00001_00009_00006' order represents '7' with '7873'
-7871 7873 0
c Var 'variant_fields_00001_00009_00006' direct represents '7' with '7874'
7871 -7873 7874 0
-7874 7873 0
-7874 -7871 0
c Var 'variant_fields_00001_00009_00006' order represents '8' with '7875'
-7873 7875 0
c Var 'variant_fields_00001_00009_00006' direct represents '8' with '7876'
7873 -7875 7876 0
-7876 7875 0
-7876 -7873 0
c Var 'variant_fields_00001_00009_00006' direct represents '9' with '-7875'
7862 7864 7866 7868 7870 7872 7874 7876 -7875 0
c Encoding variable: variant_fields_00001_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00007' order represents '1' with '7877'
c Var 'variant_fields_00001_00009_00007' direct represents '1' with '7877'
c Var 'variant_fields_00001_00009_00007' order represents '2' with '7878'
-7877 7878 0
c Var 'variant_fields_00001_00009_00007' direct represents '2' with '7879'
7877 -7878 7879 0
-7879 7878 0
-7879 -7877 0
c Var 'variant_fields_00001_00009_00007' order represents '3' with '7880'
-7878 7880 0
c Var 'variant_fields_00001_00009_00007' direct represents '3' with '7881'
7878 -7880 7881 0
-7881 7880 0
-7881 -7878 0
c Var 'variant_fields_00001_00009_00007' order represents '4' with '7882'
-7880 7882 0
c Var 'variant_fields_00001_00009_00007' direct represents '4' with '7883'
7880 -7882 7883 0
-7883 7882 0
-7883 -7880 0
c Var 'variant_fields_00001_00009_00007' order represents '5' with '7884'
-7882 7884 0
c Var 'variant_fields_00001_00009_00007' direct represents '5' with '7885'
7882 -7884 7885 0
-7885 7884 0
-7885 -7882 0
c Var 'variant_fields_00001_00009_00007' order represents '6' with '7886'
-7884 7886 0
c Var 'variant_fields_00001_00009_00007' direct represents '6' with '7887'
7884 -7886 7887 0
-7887 7886 0
-7887 -7884 0
c Var 'variant_fields_00001_00009_00007' order represents '7' with '7888'
-7886 7888 0
c Var 'variant_fields_00001_00009_00007' direct represents '7' with '7889'
7886 -7888 7889 0
-7889 7888 0
-7889 -7886 0
c Var 'variant_fields_00001_00009_00007' order represents '8' with '7890'
-7888 7890 0
c Var 'variant_fields_00001_00009_00007' direct represents '8' with '7891'
7888 -7890 7891 0
-7891 7890 0
-7891 -7888 0
c Var 'variant_fields_00001_00009_00007' direct represents '9' with '-7890'
7877 7879 7881 7883 7885 7887 7889 7891 -7890 0
c Encoding variable: variant_fields_00001_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00008' order represents '1' with '7892'
c Var 'variant_fields_00001_00009_00008' direct represents '1' with '7892'
c Var 'variant_fields_00001_00009_00008' order represents '2' with '7893'
-7892 7893 0
c Var 'variant_fields_00001_00009_00008' direct represents '2' with '7894'
7892 -7893 7894 0
-7894 7893 0
-7894 -7892 0
c Var 'variant_fields_00001_00009_00008' order represents '3' with '7895'
-7893 7895 0
c Var 'variant_fields_00001_00009_00008' direct represents '3' with '7896'
7893 -7895 7896 0
-7896 7895 0
-7896 -7893 0
c Var 'variant_fields_00001_00009_00008' order represents '4' with '7897'
-7895 7897 0
c Var 'variant_fields_00001_00009_00008' direct represents '4' with '7898'
7895 -7897 7898 0
-7898 7897 0
-7898 -7895 0
c Var 'variant_fields_00001_00009_00008' order represents '5' with '7899'
-7897 7899 0
c Var 'variant_fields_00001_00009_00008' direct represents '5' with '7900'
7897 -7899 7900 0
-7900 7899 0
-7900 -7897 0
c Var 'variant_fields_00001_00009_00008' order represents '6' with '7901'
-7899 7901 0
c Var 'variant_fields_00001_00009_00008' direct represents '6' with '7902'
7899 -7901 7902 0
-7902 7901 0
-7902 -7899 0
c Var 'variant_fields_00001_00009_00008' order represents '7' with '7903'
-7901 7903 0
c Var 'variant_fields_00001_00009_00008' direct represents '7' with '7904'
7901 -7903 7904 0
-7904 7903 0
-7904 -7901 0
c Var 'variant_fields_00001_00009_00008' order represents '8' with '7905'
-7903 7905 0
c Var 'variant_fields_00001_00009_00008' direct represents '8' with '7906'
7903 -7905 7906 0
-7906 7905 0
-7906 -7903 0
c Var 'variant_fields_00001_00009_00008' direct represents '9' with '-7905'
7892 7894 7896 7898 7900 7902 7904 7906 -7905 0
c Encoding variable: variant_fields_00001_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00009_00009' order represents '1' with '7907'
c Var 'variant_fields_00001_00009_00009' direct represents '1' with '7907'
c Var 'variant_fields_00001_00009_00009' order represents '2' with '7908'
-7907 7908 0
c Var 'variant_fields_00001_00009_00009' direct represents '2' with '7909'
7907 -7908 7909 0
-7909 7908 0
-7909 -7907 0
c Var 'variant_fields_00001_00009_00009' order represents '3' with '7910'
-7908 7910 0
c Var 'variant_fields_00001_00009_00009' direct represents '3' with '7911'
7908 -7910 7911 0
-7911 7910 0
-7911 -7908 0
c Var 'variant_fields_00001_00009_00009' order represents '4' with '7912'
-7910 7912 0
c Var 'variant_fields_00001_00009_00009' direct represents '4' with '7913'
7910 -7912 7913 0
-7913 7912 0
-7913 -7910 0
c Var 'variant_fields_00001_00009_00009' order represents '5' with '7914'
-7912 7914 0
c Var 'variant_fields_00001_00009_00009' direct represents '5' with '7915'
7912 -7914 7915 0
-7915 7914 0
-7915 -7912 0
c Var 'variant_fields_00001_00009_00009' order represents '6' with '7916'
-7914 7916 0
c Var 'variant_fields_00001_00009_00009' direct represents '6' with '7917'
7914 -7916 7917 0
-7917 7916 0
-7917 -7914 0
c Var 'variant_fields_00001_00009_00009' order represents '7' with '7918'
-7916 7918 0
c Var 'variant_fields_00001_00009_00009' direct represents '7' with '7919'
7916 -7918 7919 0
-7919 7918 0
-7919 -7916 0
c Var 'variant_fields_00001_00009_00009' order represents '8' with '7920'
-7918 7920 0
c Var 'variant_fields_00001_00009_00009' direct represents '8' with '7921'
7918 -7920 7921 0
-7921 7920 0
-7921 -7918 0
c Var 'variant_fields_00001_00009_00009' direct represents '9' with '-7920'
7907 7909 7911 7913 7915 7917 7919 7921 -7920 0
c Encoding variable: variant_fields_00002_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00001' order represents '1' with '7922'
c Var 'variant_fields_00002_00001_00001' direct represents '1' with '7922'
c Var 'variant_fields_00002_00001_00001' order represents '2' with '7923'
-7922 7923 0
c Var 'variant_fields_00002_00001_00001' direct represents '2' with '7924'
7922 -7923 7924 0
-7924 7923 0
-7924 -7922 0
c Var 'variant_fields_00002_00001_00001' order represents '3' with '7925'
-7923 7925 0
c Var 'variant_fields_00002_00001_00001' direct represents '3' with '7926'
7923 -7925 7926 0
-7926 7925 0
-7926 -7923 0
c Var 'variant_fields_00002_00001_00001' order represents '4' with '7927'
-7925 7927 0
c Var 'variant_fields_00002_00001_00001' direct represents '4' with '7928'
7925 -7927 7928 0
-7928 7927 0
-7928 -7925 0
c Var 'variant_fields_00002_00001_00001' order represents '5' with '7929'
-7927 7929 0
c Var 'variant_fields_00002_00001_00001' direct represents '5' with '7930'
7927 -7929 7930 0
-7930 7929 0
-7930 -7927 0
c Var 'variant_fields_00002_00001_00001' order represents '6' with '7931'
-7929 7931 0
c Var 'variant_fields_00002_00001_00001' direct represents '6' with '7932'
7929 -7931 7932 0
-7932 7931 0
-7932 -7929 0
c Var 'variant_fields_00002_00001_00001' order represents '7' with '7933'
-7931 7933 0
c Var 'variant_fields_00002_00001_00001' direct represents '7' with '7934'
7931 -7933 7934 0
-7934 7933 0
-7934 -7931 0
c Var 'variant_fields_00002_00001_00001' order represents '8' with '7935'
-7933 7935 0
c Var 'variant_fields_00002_00001_00001' direct represents '8' with '7936'
7933 -7935 7936 0
-7936 7935 0
-7936 -7933 0
c Var 'variant_fields_00002_00001_00001' direct represents '9' with '-7935'
7922 7924 7926 7928 7930 7932 7934 7936 -7935 0
c Encoding variable: variant_fields_00002_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00002' order represents '1' with '7937'
c Var 'variant_fields_00002_00001_00002' direct represents '1' with '7937'
c Var 'variant_fields_00002_00001_00002' order represents '2' with '7938'
-7937 7938 0
c Var 'variant_fields_00002_00001_00002' direct represents '2' with '7939'
7937 -7938 7939 0
-7939 7938 0
-7939 -7937 0
c Var 'variant_fields_00002_00001_00002' order represents '3' with '7940'
-7938 7940 0
c Var 'variant_fields_00002_00001_00002' direct represents '3' with '7941'
7938 -7940 7941 0
-7941 7940 0
-7941 -7938 0
c Var 'variant_fields_00002_00001_00002' order represents '4' with '7942'
-7940 7942 0
c Var 'variant_fields_00002_00001_00002' direct represents '4' with '7943'
7940 -7942 7943 0
-7943 7942 0
-7943 -7940 0
c Var 'variant_fields_00002_00001_00002' order represents '5' with '7944'
-7942 7944 0
c Var 'variant_fields_00002_00001_00002' direct represents '5' with '7945'
7942 -7944 7945 0
-7945 7944 0
-7945 -7942 0
c Var 'variant_fields_00002_00001_00002' order represents '6' with '7946'
-7944 7946 0
c Var 'variant_fields_00002_00001_00002' direct represents '6' with '7947'
7944 -7946 7947 0
-7947 7946 0
-7947 -7944 0
c Var 'variant_fields_00002_00001_00002' order represents '7' with '7948'
-7946 7948 0
c Var 'variant_fields_00002_00001_00002' direct represents '7' with '7949'
7946 -7948 7949 0
-7949 7948 0
-7949 -7946 0
c Var 'variant_fields_00002_00001_00002' order represents '8' with '7950'
-7948 7950 0
c Var 'variant_fields_00002_00001_00002' direct represents '8' with '7951'
7948 -7950 7951 0
-7951 7950 0
-7951 -7948 0
c Var 'variant_fields_00002_00001_00002' direct represents '9' with '-7950'
7937 7939 7941 7943 7945 7947 7949 7951 -7950 0
c Encoding variable: variant_fields_00002_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00003' order represents '1' with '7952'
c Var 'variant_fields_00002_00001_00003' direct represents '1' with '7952'
c Var 'variant_fields_00002_00001_00003' order represents '2' with '7953'
-7952 7953 0
c Var 'variant_fields_00002_00001_00003' direct represents '2' with '7954'
7952 -7953 7954 0
-7954 7953 0
-7954 -7952 0
c Var 'variant_fields_00002_00001_00003' order represents '3' with '7955'
-7953 7955 0
c Var 'variant_fields_00002_00001_00003' direct represents '3' with '7956'
7953 -7955 7956 0
-7956 7955 0
-7956 -7953 0
c Var 'variant_fields_00002_00001_00003' order represents '4' with '7957'
-7955 7957 0
c Var 'variant_fields_00002_00001_00003' direct represents '4' with '7958'
7955 -7957 7958 0
-7958 7957 0
-7958 -7955 0
c Var 'variant_fields_00002_00001_00003' order represents '5' with '7959'
-7957 7959 0
c Var 'variant_fields_00002_00001_00003' direct represents '5' with '7960'
7957 -7959 7960 0
-7960 7959 0
-7960 -7957 0
c Var 'variant_fields_00002_00001_00003' order represents '6' with '7961'
-7959 7961 0
c Var 'variant_fields_00002_00001_00003' direct represents '6' with '7962'
7959 -7961 7962 0
-7962 7961 0
-7962 -7959 0
c Var 'variant_fields_00002_00001_00003' order represents '7' with '7963'
-7961 7963 0
c Var 'variant_fields_00002_00001_00003' direct represents '7' with '7964'
7961 -7963 7964 0
-7964 7963 0
-7964 -7961 0
c Var 'variant_fields_00002_00001_00003' order represents '8' with '7965'
-7963 7965 0
c Var 'variant_fields_00002_00001_00003' direct represents '8' with '7966'
7963 -7965 7966 0
-7966 7965 0
-7966 -7963 0
c Var 'variant_fields_00002_00001_00003' direct represents '9' with '-7965'
7952 7954 7956 7958 7960 7962 7964 7966 -7965 0
c Encoding variable: variant_fields_00002_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00004' order represents '1' with '7967'
c Var 'variant_fields_00002_00001_00004' direct represents '1' with '7967'
c Var 'variant_fields_00002_00001_00004' order represents '2' with '7968'
-7967 7968 0
c Var 'variant_fields_00002_00001_00004' direct represents '2' with '7969'
7967 -7968 7969 0
-7969 7968 0
-7969 -7967 0
c Var 'variant_fields_00002_00001_00004' order represents '3' with '7970'
-7968 7970 0
c Var 'variant_fields_00002_00001_00004' direct represents '3' with '7971'
7968 -7970 7971 0
-7971 7970 0
-7971 -7968 0
c Var 'variant_fields_00002_00001_00004' order represents '4' with '7972'
-7970 7972 0
c Var 'variant_fields_00002_00001_00004' direct represents '4' with '7973'
7970 -7972 7973 0
-7973 7972 0
-7973 -7970 0
c Var 'variant_fields_00002_00001_00004' order represents '5' with '7974'
-7972 7974 0
c Var 'variant_fields_00002_00001_00004' direct represents '5' with '7975'
7972 -7974 7975 0
-7975 7974 0
-7975 -7972 0
c Var 'variant_fields_00002_00001_00004' order represents '6' with '7976'
-7974 7976 0
c Var 'variant_fields_00002_00001_00004' direct represents '6' with '7977'
7974 -7976 7977 0
-7977 7976 0
-7977 -7974 0
c Var 'variant_fields_00002_00001_00004' order represents '7' with '7978'
-7976 7978 0
c Var 'variant_fields_00002_00001_00004' direct represents '7' with '7979'
7976 -7978 7979 0
-7979 7978 0
-7979 -7976 0
c Var 'variant_fields_00002_00001_00004' order represents '8' with '7980'
-7978 7980 0
c Var 'variant_fields_00002_00001_00004' direct represents '8' with '7981'
7978 -7980 7981 0
-7981 7980 0
-7981 -7978 0
c Var 'variant_fields_00002_00001_00004' direct represents '9' with '-7980'
7967 7969 7971 7973 7975 7977 7979 7981 -7980 0
c Encoding variable: variant_fields_00002_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00005' order represents '1' with '7982'
c Var 'variant_fields_00002_00001_00005' direct represents '1' with '7982'
c Var 'variant_fields_00002_00001_00005' order represents '2' with '7983'
-7982 7983 0
c Var 'variant_fields_00002_00001_00005' direct represents '2' with '7984'
7982 -7983 7984 0
-7984 7983 0
-7984 -7982 0
c Var 'variant_fields_00002_00001_00005' order represents '3' with '7985'
-7983 7985 0
c Var 'variant_fields_00002_00001_00005' direct represents '3' with '7986'
7983 -7985 7986 0
-7986 7985 0
-7986 -7983 0
c Var 'variant_fields_00002_00001_00005' order represents '4' with '7987'
-7985 7987 0
c Var 'variant_fields_00002_00001_00005' direct represents '4' with '7988'
7985 -7987 7988 0
-7988 7987 0
-7988 -7985 0
c Var 'variant_fields_00002_00001_00005' order represents '5' with '7989'
-7987 7989 0
c Var 'variant_fields_00002_00001_00005' direct represents '5' with '7990'
7987 -7989 7990 0
-7990 7989 0
-7990 -7987 0
c Var 'variant_fields_00002_00001_00005' order represents '6' with '7991'
-7989 7991 0
c Var 'variant_fields_00002_00001_00005' direct represents '6' with '7992'
7989 -7991 7992 0
-7992 7991 0
-7992 -7989 0
c Var 'variant_fields_00002_00001_00005' order represents '7' with '7993'
-7991 7993 0
c Var 'variant_fields_00002_00001_00005' direct represents '7' with '7994'
7991 -7993 7994 0
-7994 7993 0
-7994 -7991 0
c Var 'variant_fields_00002_00001_00005' order represents '8' with '7995'
-7993 7995 0
c Var 'variant_fields_00002_00001_00005' direct represents '8' with '7996'
7993 -7995 7996 0
-7996 7995 0
-7996 -7993 0
c Var 'variant_fields_00002_00001_00005' direct represents '9' with '-7995'
7982 7984 7986 7988 7990 7992 7994 7996 -7995 0
c Encoding variable: variant_fields_00002_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00006' order represents '1' with '7997'
c Var 'variant_fields_00002_00001_00006' direct represents '1' with '7997'
c Var 'variant_fields_00002_00001_00006' order represents '2' with '7998'
-7997 7998 0
c Var 'variant_fields_00002_00001_00006' direct represents '2' with '7999'
7997 -7998 7999 0
-7999 7998 0
-7999 -7997 0
c Var 'variant_fields_00002_00001_00006' order represents '3' with '8000'
-7998 8000 0
c Var 'variant_fields_00002_00001_00006' direct represents '3' with '8001'
7998 -8000 8001 0
-8001 8000 0
-8001 -7998 0
c Var 'variant_fields_00002_00001_00006' order represents '4' with '8002'
-8000 8002 0
c Var 'variant_fields_00002_00001_00006' direct represents '4' with '8003'
8000 -8002 8003 0
-8003 8002 0
-8003 -8000 0
c Var 'variant_fields_00002_00001_00006' order represents '5' with '8004'
-8002 8004 0
c Var 'variant_fields_00002_00001_00006' direct represents '5' with '8005'
8002 -8004 8005 0
-8005 8004 0
-8005 -8002 0
c Var 'variant_fields_00002_00001_00006' order represents '6' with '8006'
-8004 8006 0
c Var 'variant_fields_00002_00001_00006' direct represents '6' with '8007'
8004 -8006 8007 0
-8007 8006 0
-8007 -8004 0
c Var 'variant_fields_00002_00001_00006' order represents '7' with '8008'
-8006 8008 0
c Var 'variant_fields_00002_00001_00006' direct represents '7' with '8009'
8006 -8008 8009 0
-8009 8008 0
-8009 -8006 0
c Var 'variant_fields_00002_00001_00006' order represents '8' with '8010'
-8008 8010 0
c Var 'variant_fields_00002_00001_00006' direct represents '8' with '8011'
8008 -8010 8011 0
-8011 8010 0
-8011 -8008 0
c Var 'variant_fields_00002_00001_00006' direct represents '9' with '-8010'
7997 7999 8001 8003 8005 8007 8009 8011 -8010 0
c Encoding variable: variant_fields_00002_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00007' order represents '1' with '8012'
c Var 'variant_fields_00002_00001_00007' direct represents '1' with '8012'
c Var 'variant_fields_00002_00001_00007' order represents '2' with '8013'
-8012 8013 0
c Var 'variant_fields_00002_00001_00007' direct represents '2' with '8014'
8012 -8013 8014 0
-8014 8013 0
-8014 -8012 0
c Var 'variant_fields_00002_00001_00007' order represents '3' with '8015'
-8013 8015 0
c Var 'variant_fields_00002_00001_00007' direct represents '3' with '8016'
8013 -8015 8016 0
-8016 8015 0
-8016 -8013 0
c Var 'variant_fields_00002_00001_00007' order represents '4' with '8017'
-8015 8017 0
c Var 'variant_fields_00002_00001_00007' direct represents '4' with '8018'
8015 -8017 8018 0
-8018 8017 0
-8018 -8015 0
c Var 'variant_fields_00002_00001_00007' order represents '5' with '8019'
-8017 8019 0
c Var 'variant_fields_00002_00001_00007' direct represents '5' with '8020'
8017 -8019 8020 0
-8020 8019 0
-8020 -8017 0
c Var 'variant_fields_00002_00001_00007' order represents '6' with '8021'
-8019 8021 0
c Var 'variant_fields_00002_00001_00007' direct represents '6' with '8022'
8019 -8021 8022 0
-8022 8021 0
-8022 -8019 0
c Var 'variant_fields_00002_00001_00007' order represents '7' with '8023'
-8021 8023 0
c Var 'variant_fields_00002_00001_00007' direct represents '7' with '8024'
8021 -8023 8024 0
-8024 8023 0
-8024 -8021 0
c Var 'variant_fields_00002_00001_00007' order represents '8' with '8025'
-8023 8025 0
c Var 'variant_fields_00002_00001_00007' direct represents '8' with '8026'
8023 -8025 8026 0
-8026 8025 0
-8026 -8023 0
c Var 'variant_fields_00002_00001_00007' direct represents '9' with '-8025'
8012 8014 8016 8018 8020 8022 8024 8026 -8025 0
c Encoding variable: variant_fields_00002_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00008' order represents '1' with '8027'
c Var 'variant_fields_00002_00001_00008' direct represents '1' with '8027'
c Var 'variant_fields_00002_00001_00008' order represents '2' with '8028'
-8027 8028 0
c Var 'variant_fields_00002_00001_00008' direct represents '2' with '8029'
8027 -8028 8029 0
-8029 8028 0
-8029 -8027 0
c Var 'variant_fields_00002_00001_00008' order represents '3' with '8030'
-8028 8030 0
c Var 'variant_fields_00002_00001_00008' direct represents '3' with '8031'
8028 -8030 8031 0
-8031 8030 0
-8031 -8028 0
c Var 'variant_fields_00002_00001_00008' order represents '4' with '8032'
-8030 8032 0
c Var 'variant_fields_00002_00001_00008' direct represents '4' with '8033'
8030 -8032 8033 0
-8033 8032 0
-8033 -8030 0
c Var 'variant_fields_00002_00001_00008' order represents '5' with '8034'
-8032 8034 0
c Var 'variant_fields_00002_00001_00008' direct represents '5' with '8035'
8032 -8034 8035 0
-8035 8034 0
-8035 -8032 0
c Var 'variant_fields_00002_00001_00008' order represents '6' with '8036'
-8034 8036 0
c Var 'variant_fields_00002_00001_00008' direct represents '6' with '8037'
8034 -8036 8037 0
-8037 8036 0
-8037 -8034 0
c Var 'variant_fields_00002_00001_00008' order represents '7' with '8038'
-8036 8038 0
c Var 'variant_fields_00002_00001_00008' direct represents '7' with '8039'
8036 -8038 8039 0
-8039 8038 0
-8039 -8036 0
c Var 'variant_fields_00002_00001_00008' order represents '8' with '8040'
-8038 8040 0
c Var 'variant_fields_00002_00001_00008' direct represents '8' with '8041'
8038 -8040 8041 0
-8041 8040 0
-8041 -8038 0
c Var 'variant_fields_00002_00001_00008' direct represents '9' with '-8040'
8027 8029 8031 8033 8035 8037 8039 8041 -8040 0
c Encoding variable: variant_fields_00002_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00001_00009' order represents '1' with '8042'
c Var 'variant_fields_00002_00001_00009' direct represents '1' with '8042'
c Var 'variant_fields_00002_00001_00009' order represents '2' with '8043'
-8042 8043 0
c Var 'variant_fields_00002_00001_00009' direct represents '2' with '8044'
8042 -8043 8044 0
-8044 8043 0
-8044 -8042 0
c Var 'variant_fields_00002_00001_00009' order represents '3' with '8045'
-8043 8045 0
c Var 'variant_fields_00002_00001_00009' direct represents '3' with '8046'
8043 -8045 8046 0
-8046 8045 0
-8046 -8043 0
c Var 'variant_fields_00002_00001_00009' order represents '4' with '8047'
-8045 8047 0
c Var 'variant_fields_00002_00001_00009' direct represents '4' with '8048'
8045 -8047 8048 0
-8048 8047 0
-8048 -8045 0
c Var 'variant_fields_00002_00001_00009' order represents '5' with '8049'
-8047 8049 0
c Var 'variant_fields_00002_00001_00009' direct represents '5' with '8050'
8047 -8049 8050 0
-8050 8049 0
-8050 -8047 0
c Var 'variant_fields_00002_00001_00009' order represents '6' with '8051'
-8049 8051 0
c Var 'variant_fields_00002_00001_00009' direct represents '6' with '8052'
8049 -8051 8052 0
-8052 8051 0
-8052 -8049 0
c Var 'variant_fields_00002_00001_00009' order represents '7' with '8053'
-8051 8053 0
c Var 'variant_fields_00002_00001_00009' direct represents '7' with '8054'
8051 -8053 8054 0
-8054 8053 0
-8054 -8051 0
c Var 'variant_fields_00002_00001_00009' order represents '8' with '8055'
-8053 8055 0
c Var 'variant_fields_00002_00001_00009' direct represents '8' with '8056'
8053 -8055 8056 0
-8056 8055 0
-8056 -8053 0
c Var 'variant_fields_00002_00001_00009' direct represents '9' with '-8055'
8042 8044 8046 8048 8050 8052 8054 8056 -8055 0
c Encoding variable: variant_fields_00002_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00001' order represents '1' with '8057'
c Var 'variant_fields_00002_00002_00001' direct represents '1' with '8057'
c Var 'variant_fields_00002_00002_00001' order represents '2' with '8058'
-8057 8058 0
c Var 'variant_fields_00002_00002_00001' direct represents '2' with '8059'
8057 -8058 8059 0
-8059 8058 0
-8059 -8057 0
c Var 'variant_fields_00002_00002_00001' order represents '3' with '8060'
-8058 8060 0
c Var 'variant_fields_00002_00002_00001' direct represents '3' with '8061'
8058 -8060 8061 0
-8061 8060 0
-8061 -8058 0
c Var 'variant_fields_00002_00002_00001' order represents '4' with '8062'
-8060 8062 0
c Var 'variant_fields_00002_00002_00001' direct represents '4' with '8063'
8060 -8062 8063 0
-8063 8062 0
-8063 -8060 0
c Var 'variant_fields_00002_00002_00001' order represents '5' with '8064'
-8062 8064 0
c Var 'variant_fields_00002_00002_00001' direct represents '5' with '8065'
8062 -8064 8065 0
-8065 8064 0
-8065 -8062 0
c Var 'variant_fields_00002_00002_00001' order represents '6' with '8066'
-8064 8066 0
c Var 'variant_fields_00002_00002_00001' direct represents '6' with '8067'
8064 -8066 8067 0
-8067 8066 0
-8067 -8064 0
c Var 'variant_fields_00002_00002_00001' order represents '7' with '8068'
-8066 8068 0
c Var 'variant_fields_00002_00002_00001' direct represents '7' with '8069'
8066 -8068 8069 0
-8069 8068 0
-8069 -8066 0
c Var 'variant_fields_00002_00002_00001' order represents '8' with '8070'
-8068 8070 0
c Var 'variant_fields_00002_00002_00001' direct represents '8' with '8071'
8068 -8070 8071 0
-8071 8070 0
-8071 -8068 0
c Var 'variant_fields_00002_00002_00001' direct represents '9' with '-8070'
8057 8059 8061 8063 8065 8067 8069 8071 -8070 0
c Encoding variable: variant_fields_00002_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00002' order represents '1' with '8072'
c Var 'variant_fields_00002_00002_00002' direct represents '1' with '8072'
c Var 'variant_fields_00002_00002_00002' order represents '2' with '8073'
-8072 8073 0
c Var 'variant_fields_00002_00002_00002' direct represents '2' with '8074'
8072 -8073 8074 0
-8074 8073 0
-8074 -8072 0
c Var 'variant_fields_00002_00002_00002' order represents '3' with '8075'
-8073 8075 0
c Var 'variant_fields_00002_00002_00002' direct represents '3' with '8076'
8073 -8075 8076 0
-8076 8075 0
-8076 -8073 0
c Var 'variant_fields_00002_00002_00002' order represents '4' with '8077'
-8075 8077 0
c Var 'variant_fields_00002_00002_00002' direct represents '4' with '8078'
8075 -8077 8078 0
-8078 8077 0
-8078 -8075 0
c Var 'variant_fields_00002_00002_00002' order represents '5' with '8079'
-8077 8079 0
c Var 'variant_fields_00002_00002_00002' direct represents '5' with '8080'
8077 -8079 8080 0
-8080 8079 0
-8080 -8077 0
c Var 'variant_fields_00002_00002_00002' order represents '6' with '8081'
-8079 8081 0
c Var 'variant_fields_00002_00002_00002' direct represents '6' with '8082'
8079 -8081 8082 0
-8082 8081 0
-8082 -8079 0
c Var 'variant_fields_00002_00002_00002' order represents '7' with '8083'
-8081 8083 0
c Var 'variant_fields_00002_00002_00002' direct represents '7' with '8084'
8081 -8083 8084 0
-8084 8083 0
-8084 -8081 0
c Var 'variant_fields_00002_00002_00002' order represents '8' with '8085'
-8083 8085 0
c Var 'variant_fields_00002_00002_00002' direct represents '8' with '8086'
8083 -8085 8086 0
-8086 8085 0
-8086 -8083 0
c Var 'variant_fields_00002_00002_00002' direct represents '9' with '-8085'
8072 8074 8076 8078 8080 8082 8084 8086 -8085 0
c Encoding variable: variant_fields_00002_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00003' order represents '1' with '8087'
c Var 'variant_fields_00002_00002_00003' direct represents '1' with '8087'
c Var 'variant_fields_00002_00002_00003' order represents '2' with '8088'
-8087 8088 0
c Var 'variant_fields_00002_00002_00003' direct represents '2' with '8089'
8087 -8088 8089 0
-8089 8088 0
-8089 -8087 0
c Var 'variant_fields_00002_00002_00003' order represents '3' with '8090'
-8088 8090 0
c Var 'variant_fields_00002_00002_00003' direct represents '3' with '8091'
8088 -8090 8091 0
-8091 8090 0
-8091 -8088 0
c Var 'variant_fields_00002_00002_00003' order represents '4' with '8092'
-8090 8092 0
c Var 'variant_fields_00002_00002_00003' direct represents '4' with '8093'
8090 -8092 8093 0
-8093 8092 0
-8093 -8090 0
c Var 'variant_fields_00002_00002_00003' order represents '5' with '8094'
-8092 8094 0
c Var 'variant_fields_00002_00002_00003' direct represents '5' with '8095'
8092 -8094 8095 0
-8095 8094 0
-8095 -8092 0
c Var 'variant_fields_00002_00002_00003' order represents '6' with '8096'
-8094 8096 0
c Var 'variant_fields_00002_00002_00003' direct represents '6' with '8097'
8094 -8096 8097 0
-8097 8096 0
-8097 -8094 0
c Var 'variant_fields_00002_00002_00003' order represents '7' with '8098'
-8096 8098 0
c Var 'variant_fields_00002_00002_00003' direct represents '7' with '8099'
8096 -8098 8099 0
-8099 8098 0
-8099 -8096 0
c Var 'variant_fields_00002_00002_00003' order represents '8' with '8100'
-8098 8100 0
c Var 'variant_fields_00002_00002_00003' direct represents '8' with '8101'
8098 -8100 8101 0
-8101 8100 0
-8101 -8098 0
c Var 'variant_fields_00002_00002_00003' direct represents '9' with '-8100'
8087 8089 8091 8093 8095 8097 8099 8101 -8100 0
c Encoding variable: variant_fields_00002_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00004' order represents '1' with '8102'
c Var 'variant_fields_00002_00002_00004' direct represents '1' with '8102'
c Var 'variant_fields_00002_00002_00004' order represents '2' with '8103'
-8102 8103 0
c Var 'variant_fields_00002_00002_00004' direct represents '2' with '8104'
8102 -8103 8104 0
-8104 8103 0
-8104 -8102 0
c Var 'variant_fields_00002_00002_00004' order represents '3' with '8105'
-8103 8105 0
c Var 'variant_fields_00002_00002_00004' direct represents '3' with '8106'
8103 -8105 8106 0
-8106 8105 0
-8106 -8103 0
c Var 'variant_fields_00002_00002_00004' order represents '4' with '8107'
-8105 8107 0
c Var 'variant_fields_00002_00002_00004' direct represents '4' with '8108'
8105 -8107 8108 0
-8108 8107 0
-8108 -8105 0
c Var 'variant_fields_00002_00002_00004' order represents '5' with '8109'
-8107 8109 0
c Var 'variant_fields_00002_00002_00004' direct represents '5' with '8110'
8107 -8109 8110 0
-8110 8109 0
-8110 -8107 0
c Var 'variant_fields_00002_00002_00004' order represents '6' with '8111'
-8109 8111 0
c Var 'variant_fields_00002_00002_00004' direct represents '6' with '8112'
8109 -8111 8112 0
-8112 8111 0
-8112 -8109 0
c Var 'variant_fields_00002_00002_00004' order represents '7' with '8113'
-8111 8113 0
c Var 'variant_fields_00002_00002_00004' direct represents '7' with '8114'
8111 -8113 8114 0
-8114 8113 0
-8114 -8111 0
c Var 'variant_fields_00002_00002_00004' order represents '8' with '8115'
-8113 8115 0
c Var 'variant_fields_00002_00002_00004' direct represents '8' with '8116'
8113 -8115 8116 0
-8116 8115 0
-8116 -8113 0
c Var 'variant_fields_00002_00002_00004' direct represents '9' with '-8115'
8102 8104 8106 8108 8110 8112 8114 8116 -8115 0
c Encoding variable: variant_fields_00002_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00005' order represents '1' with '8117'
c Var 'variant_fields_00002_00002_00005' direct represents '1' with '8117'
c Var 'variant_fields_00002_00002_00005' order represents '2' with '8118'
-8117 8118 0
c Var 'variant_fields_00002_00002_00005' direct represents '2' with '8119'
8117 -8118 8119 0
-8119 8118 0
-8119 -8117 0
c Var 'variant_fields_00002_00002_00005' order represents '3' with '8120'
-8118 8120 0
c Var 'variant_fields_00002_00002_00005' direct represents '3' with '8121'
8118 -8120 8121 0
-8121 8120 0
-8121 -8118 0
c Var 'variant_fields_00002_00002_00005' order represents '4' with '8122'
-8120 8122 0
c Var 'variant_fields_00002_00002_00005' direct represents '4' with '8123'
8120 -8122 8123 0
-8123 8122 0
-8123 -8120 0
c Var 'variant_fields_00002_00002_00005' order represents '5' with '8124'
-8122 8124 0
c Var 'variant_fields_00002_00002_00005' direct represents '5' with '8125'
8122 -8124 8125 0
-8125 8124 0
-8125 -8122 0
c Var 'variant_fields_00002_00002_00005' order represents '6' with '8126'
-8124 8126 0
c Var 'variant_fields_00002_00002_00005' direct represents '6' with '8127'
8124 -8126 8127 0
-8127 8126 0
-8127 -8124 0
c Var 'variant_fields_00002_00002_00005' order represents '7' with '8128'
-8126 8128 0
c Var 'variant_fields_00002_00002_00005' direct represents '7' with '8129'
8126 -8128 8129 0
-8129 8128 0
-8129 -8126 0
c Var 'variant_fields_00002_00002_00005' order represents '8' with '8130'
-8128 8130 0
c Var 'variant_fields_00002_00002_00005' direct represents '8' with '8131'
8128 -8130 8131 0
-8131 8130 0
-8131 -8128 0
c Var 'variant_fields_00002_00002_00005' direct represents '9' with '-8130'
8117 8119 8121 8123 8125 8127 8129 8131 -8130 0
c Encoding variable: variant_fields_00002_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00006' order represents '1' with '8132'
c Var 'variant_fields_00002_00002_00006' direct represents '1' with '8132'
c Var 'variant_fields_00002_00002_00006' order represents '2' with '8133'
-8132 8133 0
c Var 'variant_fields_00002_00002_00006' direct represents '2' with '8134'
8132 -8133 8134 0
-8134 8133 0
-8134 -8132 0
c Var 'variant_fields_00002_00002_00006' order represents '3' with '8135'
-8133 8135 0
c Var 'variant_fields_00002_00002_00006' direct represents '3' with '8136'
8133 -8135 8136 0
-8136 8135 0
-8136 -8133 0
c Var 'variant_fields_00002_00002_00006' order represents '4' with '8137'
-8135 8137 0
c Var 'variant_fields_00002_00002_00006' direct represents '4' with '8138'
8135 -8137 8138 0
-8138 8137 0
-8138 -8135 0
c Var 'variant_fields_00002_00002_00006' order represents '5' with '8139'
-8137 8139 0
c Var 'variant_fields_00002_00002_00006' direct represents '5' with '8140'
8137 -8139 8140 0
-8140 8139 0
-8140 -8137 0
c Var 'variant_fields_00002_00002_00006' order represents '6' with '8141'
-8139 8141 0
c Var 'variant_fields_00002_00002_00006' direct represents '6' with '8142'
8139 -8141 8142 0
-8142 8141 0
-8142 -8139 0
c Var 'variant_fields_00002_00002_00006' order represents '7' with '8143'
-8141 8143 0
c Var 'variant_fields_00002_00002_00006' direct represents '7' with '8144'
8141 -8143 8144 0
-8144 8143 0
-8144 -8141 0
c Var 'variant_fields_00002_00002_00006' order represents '8' with '8145'
-8143 8145 0
c Var 'variant_fields_00002_00002_00006' direct represents '8' with '8146'
8143 -8145 8146 0
-8146 8145 0
-8146 -8143 0
c Var 'variant_fields_00002_00002_00006' direct represents '9' with '-8145'
8132 8134 8136 8138 8140 8142 8144 8146 -8145 0
c Encoding variable: variant_fields_00002_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00007' order represents '1' with '8147'
c Var 'variant_fields_00002_00002_00007' direct represents '1' with '8147'
c Var 'variant_fields_00002_00002_00007' order represents '2' with '8148'
-8147 8148 0
c Var 'variant_fields_00002_00002_00007' direct represents '2' with '8149'
8147 -8148 8149 0
-8149 8148 0
-8149 -8147 0
c Var 'variant_fields_00002_00002_00007' order represents '3' with '8150'
-8148 8150 0
c Var 'variant_fields_00002_00002_00007' direct represents '3' with '8151'
8148 -8150 8151 0
-8151 8150 0
-8151 -8148 0
c Var 'variant_fields_00002_00002_00007' order represents '4' with '8152'
-8150 8152 0
c Var 'variant_fields_00002_00002_00007' direct represents '4' with '8153'
8150 -8152 8153 0
-8153 8152 0
-8153 -8150 0
c Var 'variant_fields_00002_00002_00007' order represents '5' with '8154'
-8152 8154 0
c Var 'variant_fields_00002_00002_00007' direct represents '5' with '8155'
8152 -8154 8155 0
-8155 8154 0
-8155 -8152 0
c Var 'variant_fields_00002_00002_00007' order represents '6' with '8156'
-8154 8156 0
c Var 'variant_fields_00002_00002_00007' direct represents '6' with '8157'
8154 -8156 8157 0
-8157 8156 0
-8157 -8154 0
c Var 'variant_fields_00002_00002_00007' order represents '7' with '8158'
-8156 8158 0
c Var 'variant_fields_00002_00002_00007' direct represents '7' with '8159'
8156 -8158 8159 0
-8159 8158 0
-8159 -8156 0
c Var 'variant_fields_00002_00002_00007' order represents '8' with '8160'
-8158 8160 0
c Var 'variant_fields_00002_00002_00007' direct represents '8' with '8161'
8158 -8160 8161 0
-8161 8160 0
-8161 -8158 0
c Var 'variant_fields_00002_00002_00007' direct represents '9' with '-8160'
8147 8149 8151 8153 8155 8157 8159 8161 -8160 0
c Encoding variable: variant_fields_00002_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00008' order represents '1' with '8162'
c Var 'variant_fields_00002_00002_00008' direct represents '1' with '8162'
c Var 'variant_fields_00002_00002_00008' order represents '2' with '8163'
-8162 8163 0
c Var 'variant_fields_00002_00002_00008' direct represents '2' with '8164'
8162 -8163 8164 0
-8164 8163 0
-8164 -8162 0
c Var 'variant_fields_00002_00002_00008' order represents '3' with '8165'
-8163 8165 0
c Var 'variant_fields_00002_00002_00008' direct represents '3' with '8166'
8163 -8165 8166 0
-8166 8165 0
-8166 -8163 0
c Var 'variant_fields_00002_00002_00008' order represents '4' with '8167'
-8165 8167 0
c Var 'variant_fields_00002_00002_00008' direct represents '4' with '8168'
8165 -8167 8168 0
-8168 8167 0
-8168 -8165 0
c Var 'variant_fields_00002_00002_00008' order represents '5' with '8169'
-8167 8169 0
c Var 'variant_fields_00002_00002_00008' direct represents '5' with '8170'
8167 -8169 8170 0
-8170 8169 0
-8170 -8167 0
c Var 'variant_fields_00002_00002_00008' order represents '6' with '8171'
-8169 8171 0
c Var 'variant_fields_00002_00002_00008' direct represents '6' with '8172'
8169 -8171 8172 0
-8172 8171 0
-8172 -8169 0
c Var 'variant_fields_00002_00002_00008' order represents '7' with '8173'
-8171 8173 0
c Var 'variant_fields_00002_00002_00008' direct represents '7' with '8174'
8171 -8173 8174 0
-8174 8173 0
-8174 -8171 0
c Var 'variant_fields_00002_00002_00008' order represents '8' with '8175'
-8173 8175 0
c Var 'variant_fields_00002_00002_00008' direct represents '8' with '8176'
8173 -8175 8176 0
-8176 8175 0
-8176 -8173 0
c Var 'variant_fields_00002_00002_00008' direct represents '9' with '-8175'
8162 8164 8166 8168 8170 8172 8174 8176 -8175 0
c Encoding variable: variant_fields_00002_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00009' order represents '1' with '8177'
c Var 'variant_fields_00002_00002_00009' direct represents '1' with '8177'
c Var 'variant_fields_00002_00002_00009' order represents '2' with '8178'
-8177 8178 0
c Var 'variant_fields_00002_00002_00009' direct represents '2' with '8179'
8177 -8178 8179 0
-8179 8178 0
-8179 -8177 0
c Var 'variant_fields_00002_00002_00009' order represents '3' with '8180'
-8178 8180 0
c Var 'variant_fields_00002_00002_00009' direct represents '3' with '8181'
8178 -8180 8181 0
-8181 8180 0
-8181 -8178 0
c Var 'variant_fields_00002_00002_00009' order represents '4' with '8182'
-8180 8182 0
c Var 'variant_fields_00002_00002_00009' direct represents '4' with '8183'
8180 -8182 8183 0
-8183 8182 0
-8183 -8180 0
c Var 'variant_fields_00002_00002_00009' order represents '5' with '8184'
-8182 8184 0
c Var 'variant_fields_00002_00002_00009' direct represents '5' with '8185'
8182 -8184 8185 0
-8185 8184 0
-8185 -8182 0
c Var 'variant_fields_00002_00002_00009' order represents '6' with '8186'
-8184 8186 0
c Var 'variant_fields_00002_00002_00009' direct represents '6' with '8187'
8184 -8186 8187 0
-8187 8186 0
-8187 -8184 0
c Var 'variant_fields_00002_00002_00009' order represents '7' with '8188'
-8186 8188 0
c Var 'variant_fields_00002_00002_00009' direct represents '7' with '8189'
8186 -8188 8189 0
-8189 8188 0
-8189 -8186 0
c Var 'variant_fields_00002_00002_00009' order represents '8' with '8190'
-8188 8190 0
c Var 'variant_fields_00002_00002_00009' direct represents '8' with '8191'
8188 -8190 8191 0
-8191 8190 0
-8191 -8188 0
c Var 'variant_fields_00002_00002_00009' direct represents '9' with '-8190'
8177 8179 8181 8183 8185 8187 8189 8191 -8190 0
c Encoding variable: variant_fields_00002_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00001' order represents '1' with '8192'
c Var 'variant_fields_00002_00003_00001' direct represents '1' with '8192'
c Var 'variant_fields_00002_00003_00001' order represents '2' with '8193'
-8192 8193 0
c Var 'variant_fields_00002_00003_00001' direct represents '2' with '8194'
8192 -8193 8194 0
-8194 8193 0
-8194 -8192 0
c Var 'variant_fields_00002_00003_00001' order represents '3' with '8195'
-8193 8195 0
c Var 'variant_fields_00002_00003_00001' direct represents '3' with '8196'
8193 -8195 8196 0
-8196 8195 0
-8196 -8193 0
c Var 'variant_fields_00002_00003_00001' order represents '4' with '8197'
-8195 8197 0
c Var 'variant_fields_00002_00003_00001' direct represents '4' with '8198'
8195 -8197 8198 0
-8198 8197 0
-8198 -8195 0
c Var 'variant_fields_00002_00003_00001' order represents '5' with '8199'
-8197 8199 0
c Var 'variant_fields_00002_00003_00001' direct represents '5' with '8200'
8197 -8199 8200 0
-8200 8199 0
-8200 -8197 0
c Var 'variant_fields_00002_00003_00001' order represents '6' with '8201'
-8199 8201 0
c Var 'variant_fields_00002_00003_00001' direct represents '6' with '8202'
8199 -8201 8202 0
-8202 8201 0
-8202 -8199 0
c Var 'variant_fields_00002_00003_00001' order represents '7' with '8203'
-8201 8203 0
c Var 'variant_fields_00002_00003_00001' direct represents '7' with '8204'
8201 -8203 8204 0
-8204 8203 0
-8204 -8201 0
c Var 'variant_fields_00002_00003_00001' order represents '8' with '8205'
-8203 8205 0
c Var 'variant_fields_00002_00003_00001' direct represents '8' with '8206'
8203 -8205 8206 0
-8206 8205 0
-8206 -8203 0
c Var 'variant_fields_00002_00003_00001' direct represents '9' with '-8205'
8192 8194 8196 8198 8200 8202 8204 8206 -8205 0
c Encoding variable: variant_fields_00002_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00002' order represents '1' with '8207'
c Var 'variant_fields_00002_00003_00002' direct represents '1' with '8207'
c Var 'variant_fields_00002_00003_00002' order represents '2' with '8208'
-8207 8208 0
c Var 'variant_fields_00002_00003_00002' direct represents '2' with '8209'
8207 -8208 8209 0
-8209 8208 0
-8209 -8207 0
c Var 'variant_fields_00002_00003_00002' order represents '3' with '8210'
-8208 8210 0
c Var 'variant_fields_00002_00003_00002' direct represents '3' with '8211'
8208 -8210 8211 0
-8211 8210 0
-8211 -8208 0
c Var 'variant_fields_00002_00003_00002' order represents '4' with '8212'
-8210 8212 0
c Var 'variant_fields_00002_00003_00002' direct represents '4' with '8213'
8210 -8212 8213 0
-8213 8212 0
-8213 -8210 0
c Var 'variant_fields_00002_00003_00002' order represents '5' with '8214'
-8212 8214 0
c Var 'variant_fields_00002_00003_00002' direct represents '5' with '8215'
8212 -8214 8215 0
-8215 8214 0
-8215 -8212 0
c Var 'variant_fields_00002_00003_00002' order represents '6' with '8216'
-8214 8216 0
c Var 'variant_fields_00002_00003_00002' direct represents '6' with '8217'
8214 -8216 8217 0
-8217 8216 0
-8217 -8214 0
c Var 'variant_fields_00002_00003_00002' order represents '7' with '8218'
-8216 8218 0
c Var 'variant_fields_00002_00003_00002' direct represents '7' with '8219'
8216 -8218 8219 0
-8219 8218 0
-8219 -8216 0
c Var 'variant_fields_00002_00003_00002' order represents '8' with '8220'
-8218 8220 0
c Var 'variant_fields_00002_00003_00002' direct represents '8' with '8221'
8218 -8220 8221 0
-8221 8220 0
-8221 -8218 0
c Var 'variant_fields_00002_00003_00002' direct represents '9' with '-8220'
8207 8209 8211 8213 8215 8217 8219 8221 -8220 0
c Encoding variable: variant_fields_00002_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00003' order represents '1' with '8222'
c Var 'variant_fields_00002_00003_00003' direct represents '1' with '8222'
c Var 'variant_fields_00002_00003_00003' order represents '2' with '8223'
-8222 8223 0
c Var 'variant_fields_00002_00003_00003' direct represents '2' with '8224'
8222 -8223 8224 0
-8224 8223 0
-8224 -8222 0
c Var 'variant_fields_00002_00003_00003' order represents '3' with '8225'
-8223 8225 0
c Var 'variant_fields_00002_00003_00003' direct represents '3' with '8226'
8223 -8225 8226 0
-8226 8225 0
-8226 -8223 0
c Var 'variant_fields_00002_00003_00003' order represents '4' with '8227'
-8225 8227 0
c Var 'variant_fields_00002_00003_00003' direct represents '4' with '8228'
8225 -8227 8228 0
-8228 8227 0
-8228 -8225 0
c Var 'variant_fields_00002_00003_00003' order represents '5' with '8229'
-8227 8229 0
c Var 'variant_fields_00002_00003_00003' direct represents '5' with '8230'
8227 -8229 8230 0
-8230 8229 0
-8230 -8227 0
c Var 'variant_fields_00002_00003_00003' order represents '6' with '8231'
-8229 8231 0
c Var 'variant_fields_00002_00003_00003' direct represents '6' with '8232'
8229 -8231 8232 0
-8232 8231 0
-8232 -8229 0
c Var 'variant_fields_00002_00003_00003' order represents '7' with '8233'
-8231 8233 0
c Var 'variant_fields_00002_00003_00003' direct represents '7' with '8234'
8231 -8233 8234 0
-8234 8233 0
-8234 -8231 0
c Var 'variant_fields_00002_00003_00003' order represents '8' with '8235'
-8233 8235 0
c Var 'variant_fields_00002_00003_00003' direct represents '8' with '8236'
8233 -8235 8236 0
-8236 8235 0
-8236 -8233 0
c Var 'variant_fields_00002_00003_00003' direct represents '9' with '-8235'
8222 8224 8226 8228 8230 8232 8234 8236 -8235 0
c Encoding variable: variant_fields_00002_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00004' order represents '1' with '8237'
c Var 'variant_fields_00002_00003_00004' direct represents '1' with '8237'
c Var 'variant_fields_00002_00003_00004' order represents '2' with '8238'
-8237 8238 0
c Var 'variant_fields_00002_00003_00004' direct represents '2' with '8239'
8237 -8238 8239 0
-8239 8238 0
-8239 -8237 0
c Var 'variant_fields_00002_00003_00004' order represents '3' with '8240'
-8238 8240 0
c Var 'variant_fields_00002_00003_00004' direct represents '3' with '8241'
8238 -8240 8241 0
-8241 8240 0
-8241 -8238 0
c Var 'variant_fields_00002_00003_00004' order represents '4' with '8242'
-8240 8242 0
c Var 'variant_fields_00002_00003_00004' direct represents '4' with '8243'
8240 -8242 8243 0
-8243 8242 0
-8243 -8240 0
c Var 'variant_fields_00002_00003_00004' order represents '5' with '8244'
-8242 8244 0
c Var 'variant_fields_00002_00003_00004' direct represents '5' with '8245'
8242 -8244 8245 0
-8245 8244 0
-8245 -8242 0
c Var 'variant_fields_00002_00003_00004' order represents '6' with '8246'
-8244 8246 0
c Var 'variant_fields_00002_00003_00004' direct represents '6' with '8247'
8244 -8246 8247 0
-8247 8246 0
-8247 -8244 0
c Var 'variant_fields_00002_00003_00004' order represents '7' with '8248'
-8246 8248 0
c Var 'variant_fields_00002_00003_00004' direct represents '7' with '8249'
8246 -8248 8249 0
-8249 8248 0
-8249 -8246 0
c Var 'variant_fields_00002_00003_00004' order represents '8' with '8250'
-8248 8250 0
c Var 'variant_fields_00002_00003_00004' direct represents '8' with '8251'
8248 -8250 8251 0
-8251 8250 0
-8251 -8248 0
c Var 'variant_fields_00002_00003_00004' direct represents '9' with '-8250'
8237 8239 8241 8243 8245 8247 8249 8251 -8250 0
c Encoding variable: variant_fields_00002_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00005' order represents '1' with '8252'
c Var 'variant_fields_00002_00003_00005' direct represents '1' with '8252'
c Var 'variant_fields_00002_00003_00005' order represents '2' with '8253'
-8252 8253 0
c Var 'variant_fields_00002_00003_00005' direct represents '2' with '8254'
8252 -8253 8254 0
-8254 8253 0
-8254 -8252 0
c Var 'variant_fields_00002_00003_00005' order represents '3' with '8255'
-8253 8255 0
c Var 'variant_fields_00002_00003_00005' direct represents '3' with '8256'
8253 -8255 8256 0
-8256 8255 0
-8256 -8253 0
c Var 'variant_fields_00002_00003_00005' order represents '4' with '8257'
-8255 8257 0
c Var 'variant_fields_00002_00003_00005' direct represents '4' with '8258'
8255 -8257 8258 0
-8258 8257 0
-8258 -8255 0
c Var 'variant_fields_00002_00003_00005' order represents '5' with '8259'
-8257 8259 0
c Var 'variant_fields_00002_00003_00005' direct represents '5' with '8260'
8257 -8259 8260 0
-8260 8259 0
-8260 -8257 0
c Var 'variant_fields_00002_00003_00005' order represents '6' with '8261'
-8259 8261 0
c Var 'variant_fields_00002_00003_00005' direct represents '6' with '8262'
8259 -8261 8262 0
-8262 8261 0
-8262 -8259 0
c Var 'variant_fields_00002_00003_00005' order represents '7' with '8263'
-8261 8263 0
c Var 'variant_fields_00002_00003_00005' direct represents '7' with '8264'
8261 -8263 8264 0
-8264 8263 0
-8264 -8261 0
c Var 'variant_fields_00002_00003_00005' order represents '8' with '8265'
-8263 8265 0
c Var 'variant_fields_00002_00003_00005' direct represents '8' with '8266'
8263 -8265 8266 0
-8266 8265 0
-8266 -8263 0
c Var 'variant_fields_00002_00003_00005' direct represents '9' with '-8265'
8252 8254 8256 8258 8260 8262 8264 8266 -8265 0
c Encoding variable: variant_fields_00002_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00006' order represents '1' with '8267'
c Var 'variant_fields_00002_00003_00006' direct represents '1' with '8267'
c Var 'variant_fields_00002_00003_00006' order represents '2' with '8268'
-8267 8268 0
c Var 'variant_fields_00002_00003_00006' direct represents '2' with '8269'
8267 -8268 8269 0
-8269 8268 0
-8269 -8267 0
c Var 'variant_fields_00002_00003_00006' order represents '3' with '8270'
-8268 8270 0
c Var 'variant_fields_00002_00003_00006' direct represents '3' with '8271'
8268 -8270 8271 0
-8271 8270 0
-8271 -8268 0
c Var 'variant_fields_00002_00003_00006' order represents '4' with '8272'
-8270 8272 0
c Var 'variant_fields_00002_00003_00006' direct represents '4' with '8273'
8270 -8272 8273 0
-8273 8272 0
-8273 -8270 0
c Var 'variant_fields_00002_00003_00006' order represents '5' with '8274'
-8272 8274 0
c Var 'variant_fields_00002_00003_00006' direct represents '5' with '8275'
8272 -8274 8275 0
-8275 8274 0
-8275 -8272 0
c Var 'variant_fields_00002_00003_00006' order represents '6' with '8276'
-8274 8276 0
c Var 'variant_fields_00002_00003_00006' direct represents '6' with '8277'
8274 -8276 8277 0
-8277 8276 0
-8277 -8274 0
c Var 'variant_fields_00002_00003_00006' order represents '7' with '8278'
-8276 8278 0
c Var 'variant_fields_00002_00003_00006' direct represents '7' with '8279'
8276 -8278 8279 0
-8279 8278 0
-8279 -8276 0
c Var 'variant_fields_00002_00003_00006' order represents '8' with '8280'
-8278 8280 0
c Var 'variant_fields_00002_00003_00006' direct represents '8' with '8281'
8278 -8280 8281 0
-8281 8280 0
-8281 -8278 0
c Var 'variant_fields_00002_00003_00006' direct represents '9' with '-8280'
8267 8269 8271 8273 8275 8277 8279 8281 -8280 0
c Encoding variable: variant_fields_00002_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00007' order represents '1' with '8282'
c Var 'variant_fields_00002_00003_00007' direct represents '1' with '8282'
c Var 'variant_fields_00002_00003_00007' order represents '2' with '8283'
-8282 8283 0
c Var 'variant_fields_00002_00003_00007' direct represents '2' with '8284'
8282 -8283 8284 0
-8284 8283 0
-8284 -8282 0
c Var 'variant_fields_00002_00003_00007' order represents '3' with '8285'
-8283 8285 0
c Var 'variant_fields_00002_00003_00007' direct represents '3' with '8286'
8283 -8285 8286 0
-8286 8285 0
-8286 -8283 0
c Var 'variant_fields_00002_00003_00007' order represents '4' with '8287'
-8285 8287 0
c Var 'variant_fields_00002_00003_00007' direct represents '4' with '8288'
8285 -8287 8288 0
-8288 8287 0
-8288 -8285 0
c Var 'variant_fields_00002_00003_00007' order represents '5' with '8289'
-8287 8289 0
c Var 'variant_fields_00002_00003_00007' direct represents '5' with '8290'
8287 -8289 8290 0
-8290 8289 0
-8290 -8287 0
c Var 'variant_fields_00002_00003_00007' order represents '6' with '8291'
-8289 8291 0
c Var 'variant_fields_00002_00003_00007' direct represents '6' with '8292'
8289 -8291 8292 0
-8292 8291 0
-8292 -8289 0
c Var 'variant_fields_00002_00003_00007' order represents '7' with '8293'
-8291 8293 0
c Var 'variant_fields_00002_00003_00007' direct represents '7' with '8294'
8291 -8293 8294 0
-8294 8293 0
-8294 -8291 0
c Var 'variant_fields_00002_00003_00007' order represents '8' with '8295'
-8293 8295 0
c Var 'variant_fields_00002_00003_00007' direct represents '8' with '8296'
8293 -8295 8296 0
-8296 8295 0
-8296 -8293 0
c Var 'variant_fields_00002_00003_00007' direct represents '9' with '-8295'
8282 8284 8286 8288 8290 8292 8294 8296 -8295 0
c Encoding variable: variant_fields_00002_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00008' order represents '1' with '8297'
c Var 'variant_fields_00002_00003_00008' direct represents '1' with '8297'
c Var 'variant_fields_00002_00003_00008' order represents '2' with '8298'
-8297 8298 0
c Var 'variant_fields_00002_00003_00008' direct represents '2' with '8299'
8297 -8298 8299 0
-8299 8298 0
-8299 -8297 0
c Var 'variant_fields_00002_00003_00008' order represents '3' with '8300'
-8298 8300 0
c Var 'variant_fields_00002_00003_00008' direct represents '3' with '8301'
8298 -8300 8301 0
-8301 8300 0
-8301 -8298 0
c Var 'variant_fields_00002_00003_00008' order represents '4' with '8302'
-8300 8302 0
c Var 'variant_fields_00002_00003_00008' direct represents '4' with '8303'
8300 -8302 8303 0
-8303 8302 0
-8303 -8300 0
c Var 'variant_fields_00002_00003_00008' order represents '5' with '8304'
-8302 8304 0
c Var 'variant_fields_00002_00003_00008' direct represents '5' with '8305'
8302 -8304 8305 0
-8305 8304 0
-8305 -8302 0
c Var 'variant_fields_00002_00003_00008' order represents '6' with '8306'
-8304 8306 0
c Var 'variant_fields_00002_00003_00008' direct represents '6' with '8307'
8304 -8306 8307 0
-8307 8306 0
-8307 -8304 0
c Var 'variant_fields_00002_00003_00008' order represents '7' with '8308'
-8306 8308 0
c Var 'variant_fields_00002_00003_00008' direct represents '7' with '8309'
8306 -8308 8309 0
-8309 8308 0
-8309 -8306 0
c Var 'variant_fields_00002_00003_00008' order represents '8' with '8310'
-8308 8310 0
c Var 'variant_fields_00002_00003_00008' direct represents '8' with '8311'
8308 -8310 8311 0
-8311 8310 0
-8311 -8308 0
c Var 'variant_fields_00002_00003_00008' direct represents '9' with '-8310'
8297 8299 8301 8303 8305 8307 8309 8311 -8310 0
c Encoding variable: variant_fields_00002_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00003_00009' order represents '1' with '8312'
c Var 'variant_fields_00002_00003_00009' direct represents '1' with '8312'
c Var 'variant_fields_00002_00003_00009' order represents '2' with '8313'
-8312 8313 0
c Var 'variant_fields_00002_00003_00009' direct represents '2' with '8314'
8312 -8313 8314 0
-8314 8313 0
-8314 -8312 0
c Var 'variant_fields_00002_00003_00009' order represents '3' with '8315'
-8313 8315 0
c Var 'variant_fields_00002_00003_00009' direct represents '3' with '8316'
8313 -8315 8316 0
-8316 8315 0
-8316 -8313 0
c Var 'variant_fields_00002_00003_00009' order represents '4' with '8317'
-8315 8317 0
c Var 'variant_fields_00002_00003_00009' direct represents '4' with '8318'
8315 -8317 8318 0
-8318 8317 0
-8318 -8315 0
c Var 'variant_fields_00002_00003_00009' order represents '5' with '8319'
-8317 8319 0
c Var 'variant_fields_00002_00003_00009' direct represents '5' with '8320'
8317 -8319 8320 0
-8320 8319 0
-8320 -8317 0
c Var 'variant_fields_00002_00003_00009' order represents '6' with '8321'
-8319 8321 0
c Var 'variant_fields_00002_00003_00009' direct represents '6' with '8322'
8319 -8321 8322 0
-8322 8321 0
-8322 -8319 0
c Var 'variant_fields_00002_00003_00009' order represents '7' with '8323'
-8321 8323 0
c Var 'variant_fields_00002_00003_00009' direct represents '7' with '8324'
8321 -8323 8324 0
-8324 8323 0
-8324 -8321 0
c Var 'variant_fields_00002_00003_00009' order represents '8' with '8325'
-8323 8325 0
c Var 'variant_fields_00002_00003_00009' direct represents '8' with '8326'
8323 -8325 8326 0
-8326 8325 0
-8326 -8323 0
c Var 'variant_fields_00002_00003_00009' direct represents '9' with '-8325'
8312 8314 8316 8318 8320 8322 8324 8326 -8325 0
c Encoding variable: variant_fields_00002_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00001' order represents '1' with '8327'
c Var 'variant_fields_00002_00004_00001' direct represents '1' with '8327'
c Var 'variant_fields_00002_00004_00001' order represents '2' with '8328'
-8327 8328 0
c Var 'variant_fields_00002_00004_00001' direct represents '2' with '8329'
8327 -8328 8329 0
-8329 8328 0
-8329 -8327 0
c Var 'variant_fields_00002_00004_00001' order represents '3' with '8330'
-8328 8330 0
c Var 'variant_fields_00002_00004_00001' direct represents '3' with '8331'
8328 -8330 8331 0
-8331 8330 0
-8331 -8328 0
c Var 'variant_fields_00002_00004_00001' order represents '4' with '8332'
-8330 8332 0
c Var 'variant_fields_00002_00004_00001' direct represents '4' with '8333'
8330 -8332 8333 0
-8333 8332 0
-8333 -8330 0
c Var 'variant_fields_00002_00004_00001' order represents '5' with '8334'
-8332 8334 0
c Var 'variant_fields_00002_00004_00001' direct represents '5' with '8335'
8332 -8334 8335 0
-8335 8334 0
-8335 -8332 0
c Var 'variant_fields_00002_00004_00001' order represents '6' with '8336'
-8334 8336 0
c Var 'variant_fields_00002_00004_00001' direct represents '6' with '8337'
8334 -8336 8337 0
-8337 8336 0
-8337 -8334 0
c Var 'variant_fields_00002_00004_00001' order represents '7' with '8338'
-8336 8338 0
c Var 'variant_fields_00002_00004_00001' direct represents '7' with '8339'
8336 -8338 8339 0
-8339 8338 0
-8339 -8336 0
c Var 'variant_fields_00002_00004_00001' order represents '8' with '8340'
-8338 8340 0
c Var 'variant_fields_00002_00004_00001' direct represents '8' with '8341'
8338 -8340 8341 0
-8341 8340 0
-8341 -8338 0
c Var 'variant_fields_00002_00004_00001' direct represents '9' with '-8340'
8327 8329 8331 8333 8335 8337 8339 8341 -8340 0
c Encoding variable: variant_fields_00002_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00002' order represents '1' with '8342'
c Var 'variant_fields_00002_00004_00002' direct represents '1' with '8342'
c Var 'variant_fields_00002_00004_00002' order represents '2' with '8343'
-8342 8343 0
c Var 'variant_fields_00002_00004_00002' direct represents '2' with '8344'
8342 -8343 8344 0
-8344 8343 0
-8344 -8342 0
c Var 'variant_fields_00002_00004_00002' order represents '3' with '8345'
-8343 8345 0
c Var 'variant_fields_00002_00004_00002' direct represents '3' with '8346'
8343 -8345 8346 0
-8346 8345 0
-8346 -8343 0
c Var 'variant_fields_00002_00004_00002' order represents '4' with '8347'
-8345 8347 0
c Var 'variant_fields_00002_00004_00002' direct represents '4' with '8348'
8345 -8347 8348 0
-8348 8347 0
-8348 -8345 0
c Var 'variant_fields_00002_00004_00002' order represents '5' with '8349'
-8347 8349 0
c Var 'variant_fields_00002_00004_00002' direct represents '5' with '8350'
8347 -8349 8350 0
-8350 8349 0
-8350 -8347 0
c Var 'variant_fields_00002_00004_00002' order represents '6' with '8351'
-8349 8351 0
c Var 'variant_fields_00002_00004_00002' direct represents '6' with '8352'
8349 -8351 8352 0
-8352 8351 0
-8352 -8349 0
c Var 'variant_fields_00002_00004_00002' order represents '7' with '8353'
-8351 8353 0
c Var 'variant_fields_00002_00004_00002' direct represents '7' with '8354'
8351 -8353 8354 0
-8354 8353 0
-8354 -8351 0
c Var 'variant_fields_00002_00004_00002' order represents '8' with '8355'
-8353 8355 0
c Var 'variant_fields_00002_00004_00002' direct represents '8' with '8356'
8353 -8355 8356 0
-8356 8355 0
-8356 -8353 0
c Var 'variant_fields_00002_00004_00002' direct represents '9' with '-8355'
8342 8344 8346 8348 8350 8352 8354 8356 -8355 0
c Encoding variable: variant_fields_00002_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00003' order represents '1' with '8357'
c Var 'variant_fields_00002_00004_00003' direct represents '1' with '8357'
c Var 'variant_fields_00002_00004_00003' order represents '2' with '8358'
-8357 8358 0
c Var 'variant_fields_00002_00004_00003' direct represents '2' with '8359'
8357 -8358 8359 0
-8359 8358 0
-8359 -8357 0
c Var 'variant_fields_00002_00004_00003' order represents '3' with '8360'
-8358 8360 0
c Var 'variant_fields_00002_00004_00003' direct represents '3' with '8361'
8358 -8360 8361 0
-8361 8360 0
-8361 -8358 0
c Var 'variant_fields_00002_00004_00003' order represents '4' with '8362'
-8360 8362 0
c Var 'variant_fields_00002_00004_00003' direct represents '4' with '8363'
8360 -8362 8363 0
-8363 8362 0
-8363 -8360 0
c Var 'variant_fields_00002_00004_00003' order represents '5' with '8364'
-8362 8364 0
c Var 'variant_fields_00002_00004_00003' direct represents '5' with '8365'
8362 -8364 8365 0
-8365 8364 0
-8365 -8362 0
c Var 'variant_fields_00002_00004_00003' order represents '6' with '8366'
-8364 8366 0
c Var 'variant_fields_00002_00004_00003' direct represents '6' with '8367'
8364 -8366 8367 0
-8367 8366 0
-8367 -8364 0
c Var 'variant_fields_00002_00004_00003' order represents '7' with '8368'
-8366 8368 0
c Var 'variant_fields_00002_00004_00003' direct represents '7' with '8369'
8366 -8368 8369 0
-8369 8368 0
-8369 -8366 0
c Var 'variant_fields_00002_00004_00003' order represents '8' with '8370'
-8368 8370 0
c Var 'variant_fields_00002_00004_00003' direct represents '8' with '8371'
8368 -8370 8371 0
-8371 8370 0
-8371 -8368 0
c Var 'variant_fields_00002_00004_00003' direct represents '9' with '-8370'
8357 8359 8361 8363 8365 8367 8369 8371 -8370 0
c Encoding variable: variant_fields_00002_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00004' order represents '1' with '8372'
c Var 'variant_fields_00002_00004_00004' direct represents '1' with '8372'
c Var 'variant_fields_00002_00004_00004' order represents '2' with '8373'
-8372 8373 0
c Var 'variant_fields_00002_00004_00004' direct represents '2' with '8374'
8372 -8373 8374 0
-8374 8373 0
-8374 -8372 0
c Var 'variant_fields_00002_00004_00004' order represents '3' with '8375'
-8373 8375 0
c Var 'variant_fields_00002_00004_00004' direct represents '3' with '8376'
8373 -8375 8376 0
-8376 8375 0
-8376 -8373 0
c Var 'variant_fields_00002_00004_00004' order represents '4' with '8377'
-8375 8377 0
c Var 'variant_fields_00002_00004_00004' direct represents '4' with '8378'
8375 -8377 8378 0
-8378 8377 0
-8378 -8375 0
c Var 'variant_fields_00002_00004_00004' order represents '5' with '8379'
-8377 8379 0
c Var 'variant_fields_00002_00004_00004' direct represents '5' with '8380'
8377 -8379 8380 0
-8380 8379 0
-8380 -8377 0
c Var 'variant_fields_00002_00004_00004' order represents '6' with '8381'
-8379 8381 0
c Var 'variant_fields_00002_00004_00004' direct represents '6' with '8382'
8379 -8381 8382 0
-8382 8381 0
-8382 -8379 0
c Var 'variant_fields_00002_00004_00004' order represents '7' with '8383'
-8381 8383 0
c Var 'variant_fields_00002_00004_00004' direct represents '7' with '8384'
8381 -8383 8384 0
-8384 8383 0
-8384 -8381 0
c Var 'variant_fields_00002_00004_00004' order represents '8' with '8385'
-8383 8385 0
c Var 'variant_fields_00002_00004_00004' direct represents '8' with '8386'
8383 -8385 8386 0
-8386 8385 0
-8386 -8383 0
c Var 'variant_fields_00002_00004_00004' direct represents '9' with '-8385'
8372 8374 8376 8378 8380 8382 8384 8386 -8385 0
c Encoding variable: variant_fields_00002_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00005' order represents '1' with '8387'
c Var 'variant_fields_00002_00004_00005' direct represents '1' with '8387'
c Var 'variant_fields_00002_00004_00005' order represents '2' with '8388'
-8387 8388 0
c Var 'variant_fields_00002_00004_00005' direct represents '2' with '8389'
8387 -8388 8389 0
-8389 8388 0
-8389 -8387 0
c Var 'variant_fields_00002_00004_00005' order represents '3' with '8390'
-8388 8390 0
c Var 'variant_fields_00002_00004_00005' direct represents '3' with '8391'
8388 -8390 8391 0
-8391 8390 0
-8391 -8388 0
c Var 'variant_fields_00002_00004_00005' order represents '4' with '8392'
-8390 8392 0
c Var 'variant_fields_00002_00004_00005' direct represents '4' with '8393'
8390 -8392 8393 0
-8393 8392 0
-8393 -8390 0
c Var 'variant_fields_00002_00004_00005' order represents '5' with '8394'
-8392 8394 0
c Var 'variant_fields_00002_00004_00005' direct represents '5' with '8395'
8392 -8394 8395 0
-8395 8394 0
-8395 -8392 0
c Var 'variant_fields_00002_00004_00005' order represents '6' with '8396'
-8394 8396 0
c Var 'variant_fields_00002_00004_00005' direct represents '6' with '8397'
8394 -8396 8397 0
-8397 8396 0
-8397 -8394 0
c Var 'variant_fields_00002_00004_00005' order represents '7' with '8398'
-8396 8398 0
c Var 'variant_fields_00002_00004_00005' direct represents '7' with '8399'
8396 -8398 8399 0
-8399 8398 0
-8399 -8396 0
c Var 'variant_fields_00002_00004_00005' order represents '8' with '8400'
-8398 8400 0
c Var 'variant_fields_00002_00004_00005' direct represents '8' with '8401'
8398 -8400 8401 0
-8401 8400 0
-8401 -8398 0
c Var 'variant_fields_00002_00004_00005' direct represents '9' with '-8400'
8387 8389 8391 8393 8395 8397 8399 8401 -8400 0
c Encoding variable: variant_fields_00002_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00006' order represents '1' with '8402'
c Var 'variant_fields_00002_00004_00006' direct represents '1' with '8402'
c Var 'variant_fields_00002_00004_00006' order represents '2' with '8403'
-8402 8403 0
c Var 'variant_fields_00002_00004_00006' direct represents '2' with '8404'
8402 -8403 8404 0
-8404 8403 0
-8404 -8402 0
c Var 'variant_fields_00002_00004_00006' order represents '3' with '8405'
-8403 8405 0
c Var 'variant_fields_00002_00004_00006' direct represents '3' with '8406'
8403 -8405 8406 0
-8406 8405 0
-8406 -8403 0
c Var 'variant_fields_00002_00004_00006' order represents '4' with '8407'
-8405 8407 0
c Var 'variant_fields_00002_00004_00006' direct represents '4' with '8408'
8405 -8407 8408 0
-8408 8407 0
-8408 -8405 0
c Var 'variant_fields_00002_00004_00006' order represents '5' with '8409'
-8407 8409 0
c Var 'variant_fields_00002_00004_00006' direct represents '5' with '8410'
8407 -8409 8410 0
-8410 8409 0
-8410 -8407 0
c Var 'variant_fields_00002_00004_00006' order represents '6' with '8411'
-8409 8411 0
c Var 'variant_fields_00002_00004_00006' direct represents '6' with '8412'
8409 -8411 8412 0
-8412 8411 0
-8412 -8409 0
c Var 'variant_fields_00002_00004_00006' order represents '7' with '8413'
-8411 8413 0
c Var 'variant_fields_00002_00004_00006' direct represents '7' with '8414'
8411 -8413 8414 0
-8414 8413 0
-8414 -8411 0
c Var 'variant_fields_00002_00004_00006' order represents '8' with '8415'
-8413 8415 0
c Var 'variant_fields_00002_00004_00006' direct represents '8' with '8416'
8413 -8415 8416 0
-8416 8415 0
-8416 -8413 0
c Var 'variant_fields_00002_00004_00006' direct represents '9' with '-8415'
8402 8404 8406 8408 8410 8412 8414 8416 -8415 0
c Encoding variable: variant_fields_00002_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00007' order represents '1' with '8417'
c Var 'variant_fields_00002_00004_00007' direct represents '1' with '8417'
c Var 'variant_fields_00002_00004_00007' order represents '2' with '8418'
-8417 8418 0
c Var 'variant_fields_00002_00004_00007' direct represents '2' with '8419'
8417 -8418 8419 0
-8419 8418 0
-8419 -8417 0
c Var 'variant_fields_00002_00004_00007' order represents '3' with '8420'
-8418 8420 0
c Var 'variant_fields_00002_00004_00007' direct represents '3' with '8421'
8418 -8420 8421 0
-8421 8420 0
-8421 -8418 0
c Var 'variant_fields_00002_00004_00007' order represents '4' with '8422'
-8420 8422 0
c Var 'variant_fields_00002_00004_00007' direct represents '4' with '8423'
8420 -8422 8423 0
-8423 8422 0
-8423 -8420 0
c Var 'variant_fields_00002_00004_00007' order represents '5' with '8424'
-8422 8424 0
c Var 'variant_fields_00002_00004_00007' direct represents '5' with '8425'
8422 -8424 8425 0
-8425 8424 0
-8425 -8422 0
c Var 'variant_fields_00002_00004_00007' order represents '6' with '8426'
-8424 8426 0
c Var 'variant_fields_00002_00004_00007' direct represents '6' with '8427'
8424 -8426 8427 0
-8427 8426 0
-8427 -8424 0
c Var 'variant_fields_00002_00004_00007' order represents '7' with '8428'
-8426 8428 0
c Var 'variant_fields_00002_00004_00007' direct represents '7' with '8429'
8426 -8428 8429 0
-8429 8428 0
-8429 -8426 0
c Var 'variant_fields_00002_00004_00007' order represents '8' with '8430'
-8428 8430 0
c Var 'variant_fields_00002_00004_00007' direct represents '8' with '8431'
8428 -8430 8431 0
-8431 8430 0
-8431 -8428 0
c Var 'variant_fields_00002_00004_00007' direct represents '9' with '-8430'
8417 8419 8421 8423 8425 8427 8429 8431 -8430 0
c Encoding variable: variant_fields_00002_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00008' order represents '1' with '8432'
c Var 'variant_fields_00002_00004_00008' direct represents '1' with '8432'
c Var 'variant_fields_00002_00004_00008' order represents '2' with '8433'
-8432 8433 0
c Var 'variant_fields_00002_00004_00008' direct represents '2' with '8434'
8432 -8433 8434 0
-8434 8433 0
-8434 -8432 0
c Var 'variant_fields_00002_00004_00008' order represents '3' with '8435'
-8433 8435 0
c Var 'variant_fields_00002_00004_00008' direct represents '3' with '8436'
8433 -8435 8436 0
-8436 8435 0
-8436 -8433 0
c Var 'variant_fields_00002_00004_00008' order represents '4' with '8437'
-8435 8437 0
c Var 'variant_fields_00002_00004_00008' direct represents '4' with '8438'
8435 -8437 8438 0
-8438 8437 0
-8438 -8435 0
c Var 'variant_fields_00002_00004_00008' order represents '5' with '8439'
-8437 8439 0
c Var 'variant_fields_00002_00004_00008' direct represents '5' with '8440'
8437 -8439 8440 0
-8440 8439 0
-8440 -8437 0
c Var 'variant_fields_00002_00004_00008' order represents '6' with '8441'
-8439 8441 0
c Var 'variant_fields_00002_00004_00008' direct represents '6' with '8442'
8439 -8441 8442 0
-8442 8441 0
-8442 -8439 0
c Var 'variant_fields_00002_00004_00008' order represents '7' with '8443'
-8441 8443 0
c Var 'variant_fields_00002_00004_00008' direct represents '7' with '8444'
8441 -8443 8444 0
-8444 8443 0
-8444 -8441 0
c Var 'variant_fields_00002_00004_00008' order represents '8' with '8445'
-8443 8445 0
c Var 'variant_fields_00002_00004_00008' direct represents '8' with '8446'
8443 -8445 8446 0
-8446 8445 0
-8446 -8443 0
c Var 'variant_fields_00002_00004_00008' direct represents '9' with '-8445'
8432 8434 8436 8438 8440 8442 8444 8446 -8445 0
c Encoding variable: variant_fields_00002_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00009' order represents '1' with '8447'
c Var 'variant_fields_00002_00004_00009' direct represents '1' with '8447'
c Var 'variant_fields_00002_00004_00009' order represents '2' with '8448'
-8447 8448 0
c Var 'variant_fields_00002_00004_00009' direct represents '2' with '8449'
8447 -8448 8449 0
-8449 8448 0
-8449 -8447 0
c Var 'variant_fields_00002_00004_00009' order represents '3' with '8450'
-8448 8450 0
c Var 'variant_fields_00002_00004_00009' direct represents '3' with '8451'
8448 -8450 8451 0
-8451 8450 0
-8451 -8448 0
c Var 'variant_fields_00002_00004_00009' order represents '4' with '8452'
-8450 8452 0
c Var 'variant_fields_00002_00004_00009' direct represents '4' with '8453'
8450 -8452 8453 0
-8453 8452 0
-8453 -8450 0
c Var 'variant_fields_00002_00004_00009' order represents '5' with '8454'
-8452 8454 0
c Var 'variant_fields_00002_00004_00009' direct represents '5' with '8455'
8452 -8454 8455 0
-8455 8454 0
-8455 -8452 0
c Var 'variant_fields_00002_00004_00009' order represents '6' with '8456'
-8454 8456 0
c Var 'variant_fields_00002_00004_00009' direct represents '6' with '8457'
8454 -8456 8457 0
-8457 8456 0
-8457 -8454 0
c Var 'variant_fields_00002_00004_00009' order represents '7' with '8458'
-8456 8458 0
c Var 'variant_fields_00002_00004_00009' direct represents '7' with '8459'
8456 -8458 8459 0
-8459 8458 0
-8459 -8456 0
c Var 'variant_fields_00002_00004_00009' order represents '8' with '8460'
-8458 8460 0
c Var 'variant_fields_00002_00004_00009' direct represents '8' with '8461'
8458 -8460 8461 0
-8461 8460 0
-8461 -8458 0
c Var 'variant_fields_00002_00004_00009' direct represents '9' with '-8460'
8447 8449 8451 8453 8455 8457 8459 8461 -8460 0
c Encoding variable: variant_fields_00002_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00001' order represents '1' with '8462'
c Var 'variant_fields_00002_00005_00001' direct represents '1' with '8462'
c Var 'variant_fields_00002_00005_00001' order represents '2' with '8463'
-8462 8463 0
c Var 'variant_fields_00002_00005_00001' direct represents '2' with '8464'
8462 -8463 8464 0
-8464 8463 0
-8464 -8462 0
c Var 'variant_fields_00002_00005_00001' order represents '3' with '8465'
-8463 8465 0
c Var 'variant_fields_00002_00005_00001' direct represents '3' with '8466'
8463 -8465 8466 0
-8466 8465 0
-8466 -8463 0
c Var 'variant_fields_00002_00005_00001' order represents '4' with '8467'
-8465 8467 0
c Var 'variant_fields_00002_00005_00001' direct represents '4' with '8468'
8465 -8467 8468 0
-8468 8467 0
-8468 -8465 0
c Var 'variant_fields_00002_00005_00001' order represents '5' with '8469'
-8467 8469 0
c Var 'variant_fields_00002_00005_00001' direct represents '5' with '8470'
8467 -8469 8470 0
-8470 8469 0
-8470 -8467 0
c Var 'variant_fields_00002_00005_00001' order represents '6' with '8471'
-8469 8471 0
c Var 'variant_fields_00002_00005_00001' direct represents '6' with '8472'
8469 -8471 8472 0
-8472 8471 0
-8472 -8469 0
c Var 'variant_fields_00002_00005_00001' order represents '7' with '8473'
-8471 8473 0
c Var 'variant_fields_00002_00005_00001' direct represents '7' with '8474'
8471 -8473 8474 0
-8474 8473 0
-8474 -8471 0
c Var 'variant_fields_00002_00005_00001' order represents '8' with '8475'
-8473 8475 0
c Var 'variant_fields_00002_00005_00001' direct represents '8' with '8476'
8473 -8475 8476 0
-8476 8475 0
-8476 -8473 0
c Var 'variant_fields_00002_00005_00001' direct represents '9' with '-8475'
8462 8464 8466 8468 8470 8472 8474 8476 -8475 0
c Encoding variable: variant_fields_00002_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00002' order represents '1' with '8477'
c Var 'variant_fields_00002_00005_00002' direct represents '1' with '8477'
c Var 'variant_fields_00002_00005_00002' order represents '2' with '8478'
-8477 8478 0
c Var 'variant_fields_00002_00005_00002' direct represents '2' with '8479'
8477 -8478 8479 0
-8479 8478 0
-8479 -8477 0
c Var 'variant_fields_00002_00005_00002' order represents '3' with '8480'
-8478 8480 0
c Var 'variant_fields_00002_00005_00002' direct represents '3' with '8481'
8478 -8480 8481 0
-8481 8480 0
-8481 -8478 0
c Var 'variant_fields_00002_00005_00002' order represents '4' with '8482'
-8480 8482 0
c Var 'variant_fields_00002_00005_00002' direct represents '4' with '8483'
8480 -8482 8483 0
-8483 8482 0
-8483 -8480 0
c Var 'variant_fields_00002_00005_00002' order represents '5' with '8484'
-8482 8484 0
c Var 'variant_fields_00002_00005_00002' direct represents '5' with '8485'
8482 -8484 8485 0
-8485 8484 0
-8485 -8482 0
c Var 'variant_fields_00002_00005_00002' order represents '6' with '8486'
-8484 8486 0
c Var 'variant_fields_00002_00005_00002' direct represents '6' with '8487'
8484 -8486 8487 0
-8487 8486 0
-8487 -8484 0
c Var 'variant_fields_00002_00005_00002' order represents '7' with '8488'
-8486 8488 0
c Var 'variant_fields_00002_00005_00002' direct represents '7' with '8489'
8486 -8488 8489 0
-8489 8488 0
-8489 -8486 0
c Var 'variant_fields_00002_00005_00002' order represents '8' with '8490'
-8488 8490 0
c Var 'variant_fields_00002_00005_00002' direct represents '8' with '8491'
8488 -8490 8491 0
-8491 8490 0
-8491 -8488 0
c Var 'variant_fields_00002_00005_00002' direct represents '9' with '-8490'
8477 8479 8481 8483 8485 8487 8489 8491 -8490 0
c Encoding variable: variant_fields_00002_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00003' order represents '1' with '8492'
c Var 'variant_fields_00002_00005_00003' direct represents '1' with '8492'
c Var 'variant_fields_00002_00005_00003' order represents '2' with '8493'
-8492 8493 0
c Var 'variant_fields_00002_00005_00003' direct represents '2' with '8494'
8492 -8493 8494 0
-8494 8493 0
-8494 -8492 0
c Var 'variant_fields_00002_00005_00003' order represents '3' with '8495'
-8493 8495 0
c Var 'variant_fields_00002_00005_00003' direct represents '3' with '8496'
8493 -8495 8496 0
-8496 8495 0
-8496 -8493 0
c Var 'variant_fields_00002_00005_00003' order represents '4' with '8497'
-8495 8497 0
c Var 'variant_fields_00002_00005_00003' direct represents '4' with '8498'
8495 -8497 8498 0
-8498 8497 0
-8498 -8495 0
c Var 'variant_fields_00002_00005_00003' order represents '5' with '8499'
-8497 8499 0
c Var 'variant_fields_00002_00005_00003' direct represents '5' with '8500'
8497 -8499 8500 0
-8500 8499 0
-8500 -8497 0
c Var 'variant_fields_00002_00005_00003' order represents '6' with '8501'
-8499 8501 0
c Var 'variant_fields_00002_00005_00003' direct represents '6' with '8502'
8499 -8501 8502 0
-8502 8501 0
-8502 -8499 0
c Var 'variant_fields_00002_00005_00003' order represents '7' with '8503'
-8501 8503 0
c Var 'variant_fields_00002_00005_00003' direct represents '7' with '8504'
8501 -8503 8504 0
-8504 8503 0
-8504 -8501 0
c Var 'variant_fields_00002_00005_00003' order represents '8' with '8505'
-8503 8505 0
c Var 'variant_fields_00002_00005_00003' direct represents '8' with '8506'
8503 -8505 8506 0
-8506 8505 0
-8506 -8503 0
c Var 'variant_fields_00002_00005_00003' direct represents '9' with '-8505'
8492 8494 8496 8498 8500 8502 8504 8506 -8505 0
c Encoding variable: variant_fields_00002_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00004' order represents '1' with '8507'
c Var 'variant_fields_00002_00005_00004' direct represents '1' with '8507'
c Var 'variant_fields_00002_00005_00004' order represents '2' with '8508'
-8507 8508 0
c Var 'variant_fields_00002_00005_00004' direct represents '2' with '8509'
8507 -8508 8509 0
-8509 8508 0
-8509 -8507 0
c Var 'variant_fields_00002_00005_00004' order represents '3' with '8510'
-8508 8510 0
c Var 'variant_fields_00002_00005_00004' direct represents '3' with '8511'
8508 -8510 8511 0
-8511 8510 0
-8511 -8508 0
c Var 'variant_fields_00002_00005_00004' order represents '4' with '8512'
-8510 8512 0
c Var 'variant_fields_00002_00005_00004' direct represents '4' with '8513'
8510 -8512 8513 0
-8513 8512 0
-8513 -8510 0
c Var 'variant_fields_00002_00005_00004' order represents '5' with '8514'
-8512 8514 0
c Var 'variant_fields_00002_00005_00004' direct represents '5' with '8515'
8512 -8514 8515 0
-8515 8514 0
-8515 -8512 0
c Var 'variant_fields_00002_00005_00004' order represents '6' with '8516'
-8514 8516 0
c Var 'variant_fields_00002_00005_00004' direct represents '6' with '8517'
8514 -8516 8517 0
-8517 8516 0
-8517 -8514 0
c Var 'variant_fields_00002_00005_00004' order represents '7' with '8518'
-8516 8518 0
c Var 'variant_fields_00002_00005_00004' direct represents '7' with '8519'
8516 -8518 8519 0
-8519 8518 0
-8519 -8516 0
c Var 'variant_fields_00002_00005_00004' order represents '8' with '8520'
-8518 8520 0
c Var 'variant_fields_00002_00005_00004' direct represents '8' with '8521'
8518 -8520 8521 0
-8521 8520 0
-8521 -8518 0
c Var 'variant_fields_00002_00005_00004' direct represents '9' with '-8520'
8507 8509 8511 8513 8515 8517 8519 8521 -8520 0
c Encoding variable: variant_fields_00002_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00005' order represents '1' with '8522'
c Var 'variant_fields_00002_00005_00005' direct represents '1' with '8522'
c Var 'variant_fields_00002_00005_00005' order represents '2' with '8523'
-8522 8523 0
c Var 'variant_fields_00002_00005_00005' direct represents '2' with '8524'
8522 -8523 8524 0
-8524 8523 0
-8524 -8522 0
c Var 'variant_fields_00002_00005_00005' order represents '3' with '8525'
-8523 8525 0
c Var 'variant_fields_00002_00005_00005' direct represents '3' with '8526'
8523 -8525 8526 0
-8526 8525 0
-8526 -8523 0
c Var 'variant_fields_00002_00005_00005' order represents '4' with '8527'
-8525 8527 0
c Var 'variant_fields_00002_00005_00005' direct represents '4' with '8528'
8525 -8527 8528 0
-8528 8527 0
-8528 -8525 0
c Var 'variant_fields_00002_00005_00005' order represents '5' with '8529'
-8527 8529 0
c Var 'variant_fields_00002_00005_00005' direct represents '5' with '8530'
8527 -8529 8530 0
-8530 8529 0
-8530 -8527 0
c Var 'variant_fields_00002_00005_00005' order represents '6' with '8531'
-8529 8531 0
c Var 'variant_fields_00002_00005_00005' direct represents '6' with '8532'
8529 -8531 8532 0
-8532 8531 0
-8532 -8529 0
c Var 'variant_fields_00002_00005_00005' order represents '7' with '8533'
-8531 8533 0
c Var 'variant_fields_00002_00005_00005' direct represents '7' with '8534'
8531 -8533 8534 0
-8534 8533 0
-8534 -8531 0
c Var 'variant_fields_00002_00005_00005' order represents '8' with '8535'
-8533 8535 0
c Var 'variant_fields_00002_00005_00005' direct represents '8' with '8536'
8533 -8535 8536 0
-8536 8535 0
-8536 -8533 0
c Var 'variant_fields_00002_00005_00005' direct represents '9' with '-8535'
8522 8524 8526 8528 8530 8532 8534 8536 -8535 0
c Encoding variable: variant_fields_00002_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00006' order represents '1' with '8537'
c Var 'variant_fields_00002_00005_00006' direct represents '1' with '8537'
c Var 'variant_fields_00002_00005_00006' order represents '2' with '8538'
-8537 8538 0
c Var 'variant_fields_00002_00005_00006' direct represents '2' with '8539'
8537 -8538 8539 0
-8539 8538 0
-8539 -8537 0
c Var 'variant_fields_00002_00005_00006' order represents '3' with '8540'
-8538 8540 0
c Var 'variant_fields_00002_00005_00006' direct represents '3' with '8541'
8538 -8540 8541 0
-8541 8540 0
-8541 -8538 0
c Var 'variant_fields_00002_00005_00006' order represents '4' with '8542'
-8540 8542 0
c Var 'variant_fields_00002_00005_00006' direct represents '4' with '8543'
8540 -8542 8543 0
-8543 8542 0
-8543 -8540 0
c Var 'variant_fields_00002_00005_00006' order represents '5' with '8544'
-8542 8544 0
c Var 'variant_fields_00002_00005_00006' direct represents '5' with '8545'
8542 -8544 8545 0
-8545 8544 0
-8545 -8542 0
c Var 'variant_fields_00002_00005_00006' order represents '6' with '8546'
-8544 8546 0
c Var 'variant_fields_00002_00005_00006' direct represents '6' with '8547'
8544 -8546 8547 0
-8547 8546 0
-8547 -8544 0
c Var 'variant_fields_00002_00005_00006' order represents '7' with '8548'
-8546 8548 0
c Var 'variant_fields_00002_00005_00006' direct represents '7' with '8549'
8546 -8548 8549 0
-8549 8548 0
-8549 -8546 0
c Var 'variant_fields_00002_00005_00006' order represents '8' with '8550'
-8548 8550 0
c Var 'variant_fields_00002_00005_00006' direct represents '8' with '8551'
8548 -8550 8551 0
-8551 8550 0
-8551 -8548 0
c Var 'variant_fields_00002_00005_00006' direct represents '9' with '-8550'
8537 8539 8541 8543 8545 8547 8549 8551 -8550 0
c Encoding variable: variant_fields_00002_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00007' order represents '1' with '8552'
c Var 'variant_fields_00002_00005_00007' direct represents '1' with '8552'
c Var 'variant_fields_00002_00005_00007' order represents '2' with '8553'
-8552 8553 0
c Var 'variant_fields_00002_00005_00007' direct represents '2' with '8554'
8552 -8553 8554 0
-8554 8553 0
-8554 -8552 0
c Var 'variant_fields_00002_00005_00007' order represents '3' with '8555'
-8553 8555 0
c Var 'variant_fields_00002_00005_00007' direct represents '3' with '8556'
8553 -8555 8556 0
-8556 8555 0
-8556 -8553 0
c Var 'variant_fields_00002_00005_00007' order represents '4' with '8557'
-8555 8557 0
c Var 'variant_fields_00002_00005_00007' direct represents '4' with '8558'
8555 -8557 8558 0
-8558 8557 0
-8558 -8555 0
c Var 'variant_fields_00002_00005_00007' order represents '5' with '8559'
-8557 8559 0
c Var 'variant_fields_00002_00005_00007' direct represents '5' with '8560'
8557 -8559 8560 0
-8560 8559 0
-8560 -8557 0
c Var 'variant_fields_00002_00005_00007' order represents '6' with '8561'
-8559 8561 0
c Var 'variant_fields_00002_00005_00007' direct represents '6' with '8562'
8559 -8561 8562 0
-8562 8561 0
-8562 -8559 0
c Var 'variant_fields_00002_00005_00007' order represents '7' with '8563'
-8561 8563 0
c Var 'variant_fields_00002_00005_00007' direct represents '7' with '8564'
8561 -8563 8564 0
-8564 8563 0
-8564 -8561 0
c Var 'variant_fields_00002_00005_00007' order represents '8' with '8565'
-8563 8565 0
c Var 'variant_fields_00002_00005_00007' direct represents '8' with '8566'
8563 -8565 8566 0
-8566 8565 0
-8566 -8563 0
c Var 'variant_fields_00002_00005_00007' direct represents '9' with '-8565'
8552 8554 8556 8558 8560 8562 8564 8566 -8565 0
c Encoding variable: variant_fields_00002_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00008' order represents '1' with '8567'
c Var 'variant_fields_00002_00005_00008' direct represents '1' with '8567'
c Var 'variant_fields_00002_00005_00008' order represents '2' with '8568'
-8567 8568 0
c Var 'variant_fields_00002_00005_00008' direct represents '2' with '8569'
8567 -8568 8569 0
-8569 8568 0
-8569 -8567 0
c Var 'variant_fields_00002_00005_00008' order represents '3' with '8570'
-8568 8570 0
c Var 'variant_fields_00002_00005_00008' direct represents '3' with '8571'
8568 -8570 8571 0
-8571 8570 0
-8571 -8568 0
c Var 'variant_fields_00002_00005_00008' order represents '4' with '8572'
-8570 8572 0
c Var 'variant_fields_00002_00005_00008' direct represents '4' with '8573'
8570 -8572 8573 0
-8573 8572 0
-8573 -8570 0
c Var 'variant_fields_00002_00005_00008' order represents '5' with '8574'
-8572 8574 0
c Var 'variant_fields_00002_00005_00008' direct represents '5' with '8575'
8572 -8574 8575 0
-8575 8574 0
-8575 -8572 0
c Var 'variant_fields_00002_00005_00008' order represents '6' with '8576'
-8574 8576 0
c Var 'variant_fields_00002_00005_00008' direct represents '6' with '8577'
8574 -8576 8577 0
-8577 8576 0
-8577 -8574 0
c Var 'variant_fields_00002_00005_00008' order represents '7' with '8578'
-8576 8578 0
c Var 'variant_fields_00002_00005_00008' direct represents '7' with '8579'
8576 -8578 8579 0
-8579 8578 0
-8579 -8576 0
c Var 'variant_fields_00002_00005_00008' order represents '8' with '8580'
-8578 8580 0
c Var 'variant_fields_00002_00005_00008' direct represents '8' with '8581'
8578 -8580 8581 0
-8581 8580 0
-8581 -8578 0
c Var 'variant_fields_00002_00005_00008' direct represents '9' with '-8580'
8567 8569 8571 8573 8575 8577 8579 8581 -8580 0
c Encoding variable: variant_fields_00002_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00005_00009' order represents '1' with '8582'
c Var 'variant_fields_00002_00005_00009' direct represents '1' with '8582'
c Var 'variant_fields_00002_00005_00009' order represents '2' with '8583'
-8582 8583 0
c Var 'variant_fields_00002_00005_00009' direct represents '2' with '8584'
8582 -8583 8584 0
-8584 8583 0
-8584 -8582 0
c Var 'variant_fields_00002_00005_00009' order represents '3' with '8585'
-8583 8585 0
c Var 'variant_fields_00002_00005_00009' direct represents '3' with '8586'
8583 -8585 8586 0
-8586 8585 0
-8586 -8583 0
c Var 'variant_fields_00002_00005_00009' order represents '4' with '8587'
-8585 8587 0
c Var 'variant_fields_00002_00005_00009' direct represents '4' with '8588'
8585 -8587 8588 0
-8588 8587 0
-8588 -8585 0
c Var 'variant_fields_00002_00005_00009' order represents '5' with '8589'
-8587 8589 0
c Var 'variant_fields_00002_00005_00009' direct represents '5' with '8590'
8587 -8589 8590 0
-8590 8589 0
-8590 -8587 0
c Var 'variant_fields_00002_00005_00009' order represents '6' with '8591'
-8589 8591 0
c Var 'variant_fields_00002_00005_00009' direct represents '6' with '8592'
8589 -8591 8592 0
-8592 8591 0
-8592 -8589 0
c Var 'variant_fields_00002_00005_00009' order represents '7' with '8593'
-8591 8593 0
c Var 'variant_fields_00002_00005_00009' direct represents '7' with '8594'
8591 -8593 8594 0
-8594 8593 0
-8594 -8591 0
c Var 'variant_fields_00002_00005_00009' order represents '8' with '8595'
-8593 8595 0
c Var 'variant_fields_00002_00005_00009' direct represents '8' with '8596'
8593 -8595 8596 0
-8596 8595 0
-8596 -8593 0
c Var 'variant_fields_00002_00005_00009' direct represents '9' with '-8595'
8582 8584 8586 8588 8590 8592 8594 8596 -8595 0
c Encoding variable: variant_fields_00002_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00001' order represents '1' with '8597'
c Var 'variant_fields_00002_00006_00001' direct represents '1' with '8597'
c Var 'variant_fields_00002_00006_00001' order represents '2' with '8598'
-8597 8598 0
c Var 'variant_fields_00002_00006_00001' direct represents '2' with '8599'
8597 -8598 8599 0
-8599 8598 0
-8599 -8597 0
c Var 'variant_fields_00002_00006_00001' order represents '3' with '8600'
-8598 8600 0
c Var 'variant_fields_00002_00006_00001' direct represents '3' with '8601'
8598 -8600 8601 0
-8601 8600 0
-8601 -8598 0
c Var 'variant_fields_00002_00006_00001' order represents '4' with '8602'
-8600 8602 0
c Var 'variant_fields_00002_00006_00001' direct represents '4' with '8603'
8600 -8602 8603 0
-8603 8602 0
-8603 -8600 0
c Var 'variant_fields_00002_00006_00001' order represents '5' with '8604'
-8602 8604 0
c Var 'variant_fields_00002_00006_00001' direct represents '5' with '8605'
8602 -8604 8605 0
-8605 8604 0
-8605 -8602 0
c Var 'variant_fields_00002_00006_00001' order represents '6' with '8606'
-8604 8606 0
c Var 'variant_fields_00002_00006_00001' direct represents '6' with '8607'
8604 -8606 8607 0
-8607 8606 0
-8607 -8604 0
c Var 'variant_fields_00002_00006_00001' order represents '7' with '8608'
-8606 8608 0
c Var 'variant_fields_00002_00006_00001' direct represents '7' with '8609'
8606 -8608 8609 0
-8609 8608 0
-8609 -8606 0
c Var 'variant_fields_00002_00006_00001' order represents '8' with '8610'
-8608 8610 0
c Var 'variant_fields_00002_00006_00001' direct represents '8' with '8611'
8608 -8610 8611 0
-8611 8610 0
-8611 -8608 0
c Var 'variant_fields_00002_00006_00001' direct represents '9' with '-8610'
8597 8599 8601 8603 8605 8607 8609 8611 -8610 0
c Encoding variable: variant_fields_00002_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00002' order represents '1' with '8612'
c Var 'variant_fields_00002_00006_00002' direct represents '1' with '8612'
c Var 'variant_fields_00002_00006_00002' order represents '2' with '8613'
-8612 8613 0
c Var 'variant_fields_00002_00006_00002' direct represents '2' with '8614'
8612 -8613 8614 0
-8614 8613 0
-8614 -8612 0
c Var 'variant_fields_00002_00006_00002' order represents '3' with '8615'
-8613 8615 0
c Var 'variant_fields_00002_00006_00002' direct represents '3' with '8616'
8613 -8615 8616 0
-8616 8615 0
-8616 -8613 0
c Var 'variant_fields_00002_00006_00002' order represents '4' with '8617'
-8615 8617 0
c Var 'variant_fields_00002_00006_00002' direct represents '4' with '8618'
8615 -8617 8618 0
-8618 8617 0
-8618 -8615 0
c Var 'variant_fields_00002_00006_00002' order represents '5' with '8619'
-8617 8619 0
c Var 'variant_fields_00002_00006_00002' direct represents '5' with '8620'
8617 -8619 8620 0
-8620 8619 0
-8620 -8617 0
c Var 'variant_fields_00002_00006_00002' order represents '6' with '8621'
-8619 8621 0
c Var 'variant_fields_00002_00006_00002' direct represents '6' with '8622'
8619 -8621 8622 0
-8622 8621 0
-8622 -8619 0
c Var 'variant_fields_00002_00006_00002' order represents '7' with '8623'
-8621 8623 0
c Var 'variant_fields_00002_00006_00002' direct represents '7' with '8624'
8621 -8623 8624 0
-8624 8623 0
-8624 -8621 0
c Var 'variant_fields_00002_00006_00002' order represents '8' with '8625'
-8623 8625 0
c Var 'variant_fields_00002_00006_00002' direct represents '8' with '8626'
8623 -8625 8626 0
-8626 8625 0
-8626 -8623 0
c Var 'variant_fields_00002_00006_00002' direct represents '9' with '-8625'
8612 8614 8616 8618 8620 8622 8624 8626 -8625 0
c Encoding variable: variant_fields_00002_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00003' order represents '1' with '8627'
c Var 'variant_fields_00002_00006_00003' direct represents '1' with '8627'
c Var 'variant_fields_00002_00006_00003' order represents '2' with '8628'
-8627 8628 0
c Var 'variant_fields_00002_00006_00003' direct represents '2' with '8629'
8627 -8628 8629 0
-8629 8628 0
-8629 -8627 0
c Var 'variant_fields_00002_00006_00003' order represents '3' with '8630'
-8628 8630 0
c Var 'variant_fields_00002_00006_00003' direct represents '3' with '8631'
8628 -8630 8631 0
-8631 8630 0
-8631 -8628 0
c Var 'variant_fields_00002_00006_00003' order represents '4' with '8632'
-8630 8632 0
c Var 'variant_fields_00002_00006_00003' direct represents '4' with '8633'
8630 -8632 8633 0
-8633 8632 0
-8633 -8630 0
c Var 'variant_fields_00002_00006_00003' order represents '5' with '8634'
-8632 8634 0
c Var 'variant_fields_00002_00006_00003' direct represents '5' with '8635'
8632 -8634 8635 0
-8635 8634 0
-8635 -8632 0
c Var 'variant_fields_00002_00006_00003' order represents '6' with '8636'
-8634 8636 0
c Var 'variant_fields_00002_00006_00003' direct represents '6' with '8637'
8634 -8636 8637 0
-8637 8636 0
-8637 -8634 0
c Var 'variant_fields_00002_00006_00003' order represents '7' with '8638'
-8636 8638 0
c Var 'variant_fields_00002_00006_00003' direct represents '7' with '8639'
8636 -8638 8639 0
-8639 8638 0
-8639 -8636 0
c Var 'variant_fields_00002_00006_00003' order represents '8' with '8640'
-8638 8640 0
c Var 'variant_fields_00002_00006_00003' direct represents '8' with '8641'
8638 -8640 8641 0
-8641 8640 0
-8641 -8638 0
c Var 'variant_fields_00002_00006_00003' direct represents '9' with '-8640'
8627 8629 8631 8633 8635 8637 8639 8641 -8640 0
c Encoding variable: variant_fields_00002_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00004' order represents '1' with '8642'
c Var 'variant_fields_00002_00006_00004' direct represents '1' with '8642'
c Var 'variant_fields_00002_00006_00004' order represents '2' with '8643'
-8642 8643 0
c Var 'variant_fields_00002_00006_00004' direct represents '2' with '8644'
8642 -8643 8644 0
-8644 8643 0
-8644 -8642 0
c Var 'variant_fields_00002_00006_00004' order represents '3' with '8645'
-8643 8645 0
c Var 'variant_fields_00002_00006_00004' direct represents '3' with '8646'
8643 -8645 8646 0
-8646 8645 0
-8646 -8643 0
c Var 'variant_fields_00002_00006_00004' order represents '4' with '8647'
-8645 8647 0
c Var 'variant_fields_00002_00006_00004' direct represents '4' with '8648'
8645 -8647 8648 0
-8648 8647 0
-8648 -8645 0
c Var 'variant_fields_00002_00006_00004' order represents '5' with '8649'
-8647 8649 0
c Var 'variant_fields_00002_00006_00004' direct represents '5' with '8650'
8647 -8649 8650 0
-8650 8649 0
-8650 -8647 0
c Var 'variant_fields_00002_00006_00004' order represents '6' with '8651'
-8649 8651 0
c Var 'variant_fields_00002_00006_00004' direct represents '6' with '8652'
8649 -8651 8652 0
-8652 8651 0
-8652 -8649 0
c Var 'variant_fields_00002_00006_00004' order represents '7' with '8653'
-8651 8653 0
c Var 'variant_fields_00002_00006_00004' direct represents '7' with '8654'
8651 -8653 8654 0
-8654 8653 0
-8654 -8651 0
c Var 'variant_fields_00002_00006_00004' order represents '8' with '8655'
-8653 8655 0
c Var 'variant_fields_00002_00006_00004' direct represents '8' with '8656'
8653 -8655 8656 0
-8656 8655 0
-8656 -8653 0
c Var 'variant_fields_00002_00006_00004' direct represents '9' with '-8655'
8642 8644 8646 8648 8650 8652 8654 8656 -8655 0
c Encoding variable: variant_fields_00002_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00005' order represents '1' with '8657'
c Var 'variant_fields_00002_00006_00005' direct represents '1' with '8657'
c Var 'variant_fields_00002_00006_00005' order represents '2' with '8658'
-8657 8658 0
c Var 'variant_fields_00002_00006_00005' direct represents '2' with '8659'
8657 -8658 8659 0
-8659 8658 0
-8659 -8657 0
c Var 'variant_fields_00002_00006_00005' order represents '3' with '8660'
-8658 8660 0
c Var 'variant_fields_00002_00006_00005' direct represents '3' with '8661'
8658 -8660 8661 0
-8661 8660 0
-8661 -8658 0
c Var 'variant_fields_00002_00006_00005' order represents '4' with '8662'
-8660 8662 0
c Var 'variant_fields_00002_00006_00005' direct represents '4' with '8663'
8660 -8662 8663 0
-8663 8662 0
-8663 -8660 0
c Var 'variant_fields_00002_00006_00005' order represents '5' with '8664'
-8662 8664 0
c Var 'variant_fields_00002_00006_00005' direct represents '5' with '8665'
8662 -8664 8665 0
-8665 8664 0
-8665 -8662 0
c Var 'variant_fields_00002_00006_00005' order represents '6' with '8666'
-8664 8666 0
c Var 'variant_fields_00002_00006_00005' direct represents '6' with '8667'
8664 -8666 8667 0
-8667 8666 0
-8667 -8664 0
c Var 'variant_fields_00002_00006_00005' order represents '7' with '8668'
-8666 8668 0
c Var 'variant_fields_00002_00006_00005' direct represents '7' with '8669'
8666 -8668 8669 0
-8669 8668 0
-8669 -8666 0
c Var 'variant_fields_00002_00006_00005' order represents '8' with '8670'
-8668 8670 0
c Var 'variant_fields_00002_00006_00005' direct represents '8' with '8671'
8668 -8670 8671 0
-8671 8670 0
-8671 -8668 0
c Var 'variant_fields_00002_00006_00005' direct represents '9' with '-8670'
8657 8659 8661 8663 8665 8667 8669 8671 -8670 0
c Encoding variable: variant_fields_00002_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00006' order represents '1' with '8672'
c Var 'variant_fields_00002_00006_00006' direct represents '1' with '8672'
c Var 'variant_fields_00002_00006_00006' order represents '2' with '8673'
-8672 8673 0
c Var 'variant_fields_00002_00006_00006' direct represents '2' with '8674'
8672 -8673 8674 0
-8674 8673 0
-8674 -8672 0
c Var 'variant_fields_00002_00006_00006' order represents '3' with '8675'
-8673 8675 0
c Var 'variant_fields_00002_00006_00006' direct represents '3' with '8676'
8673 -8675 8676 0
-8676 8675 0
-8676 -8673 0
c Var 'variant_fields_00002_00006_00006' order represents '4' with '8677'
-8675 8677 0
c Var 'variant_fields_00002_00006_00006' direct represents '4' with '8678'
8675 -8677 8678 0
-8678 8677 0
-8678 -8675 0
c Var 'variant_fields_00002_00006_00006' order represents '5' with '8679'
-8677 8679 0
c Var 'variant_fields_00002_00006_00006' direct represents '5' with '8680'
8677 -8679 8680 0
-8680 8679 0
-8680 -8677 0
c Var 'variant_fields_00002_00006_00006' order represents '6' with '8681'
-8679 8681 0
c Var 'variant_fields_00002_00006_00006' direct represents '6' with '8682'
8679 -8681 8682 0
-8682 8681 0
-8682 -8679 0
c Var 'variant_fields_00002_00006_00006' order represents '7' with '8683'
-8681 8683 0
c Var 'variant_fields_00002_00006_00006' direct represents '7' with '8684'
8681 -8683 8684 0
-8684 8683 0
-8684 -8681 0
c Var 'variant_fields_00002_00006_00006' order represents '8' with '8685'
-8683 8685 0
c Var 'variant_fields_00002_00006_00006' direct represents '8' with '8686'
8683 -8685 8686 0
-8686 8685 0
-8686 -8683 0
c Var 'variant_fields_00002_00006_00006' direct represents '9' with '-8685'
8672 8674 8676 8678 8680 8682 8684 8686 -8685 0
c Encoding variable: variant_fields_00002_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00007' order represents '1' with '8687'
c Var 'variant_fields_00002_00006_00007' direct represents '1' with '8687'
c Var 'variant_fields_00002_00006_00007' order represents '2' with '8688'
-8687 8688 0
c Var 'variant_fields_00002_00006_00007' direct represents '2' with '8689'
8687 -8688 8689 0
-8689 8688 0
-8689 -8687 0
c Var 'variant_fields_00002_00006_00007' order represents '3' with '8690'
-8688 8690 0
c Var 'variant_fields_00002_00006_00007' direct represents '3' with '8691'
8688 -8690 8691 0
-8691 8690 0
-8691 -8688 0
c Var 'variant_fields_00002_00006_00007' order represents '4' with '8692'
-8690 8692 0
c Var 'variant_fields_00002_00006_00007' direct represents '4' with '8693'
8690 -8692 8693 0
-8693 8692 0
-8693 -8690 0
c Var 'variant_fields_00002_00006_00007' order represents '5' with '8694'
-8692 8694 0
c Var 'variant_fields_00002_00006_00007' direct represents '5' with '8695'
8692 -8694 8695 0
-8695 8694 0
-8695 -8692 0
c Var 'variant_fields_00002_00006_00007' order represents '6' with '8696'
-8694 8696 0
c Var 'variant_fields_00002_00006_00007' direct represents '6' with '8697'
8694 -8696 8697 0
-8697 8696 0
-8697 -8694 0
c Var 'variant_fields_00002_00006_00007' order represents '7' with '8698'
-8696 8698 0
c Var 'variant_fields_00002_00006_00007' direct represents '7' with '8699'
8696 -8698 8699 0
-8699 8698 0
-8699 -8696 0
c Var 'variant_fields_00002_00006_00007' order represents '8' with '8700'
-8698 8700 0
c Var 'variant_fields_00002_00006_00007' direct represents '8' with '8701'
8698 -8700 8701 0
-8701 8700 0
-8701 -8698 0
c Var 'variant_fields_00002_00006_00007' direct represents '9' with '-8700'
8687 8689 8691 8693 8695 8697 8699 8701 -8700 0
c Encoding variable: variant_fields_00002_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00008' order represents '1' with '8702'
c Var 'variant_fields_00002_00006_00008' direct represents '1' with '8702'
c Var 'variant_fields_00002_00006_00008' order represents '2' with '8703'
-8702 8703 0
c Var 'variant_fields_00002_00006_00008' direct represents '2' with '8704'
8702 -8703 8704 0
-8704 8703 0
-8704 -8702 0
c Var 'variant_fields_00002_00006_00008' order represents '3' with '8705'
-8703 8705 0
c Var 'variant_fields_00002_00006_00008' direct represents '3' with '8706'
8703 -8705 8706 0
-8706 8705 0
-8706 -8703 0
c Var 'variant_fields_00002_00006_00008' order represents '4' with '8707'
-8705 8707 0
c Var 'variant_fields_00002_00006_00008' direct represents '4' with '8708'
8705 -8707 8708 0
-8708 8707 0
-8708 -8705 0
c Var 'variant_fields_00002_00006_00008' order represents '5' with '8709'
-8707 8709 0
c Var 'variant_fields_00002_00006_00008' direct represents '5' with '8710'
8707 -8709 8710 0
-8710 8709 0
-8710 -8707 0
c Var 'variant_fields_00002_00006_00008' order represents '6' with '8711'
-8709 8711 0
c Var 'variant_fields_00002_00006_00008' direct represents '6' with '8712'
8709 -8711 8712 0
-8712 8711 0
-8712 -8709 0
c Var 'variant_fields_00002_00006_00008' order represents '7' with '8713'
-8711 8713 0
c Var 'variant_fields_00002_00006_00008' direct represents '7' with '8714'
8711 -8713 8714 0
-8714 8713 0
-8714 -8711 0
c Var 'variant_fields_00002_00006_00008' order represents '8' with '8715'
-8713 8715 0
c Var 'variant_fields_00002_00006_00008' direct represents '8' with '8716'
8713 -8715 8716 0
-8716 8715 0
-8716 -8713 0
c Var 'variant_fields_00002_00006_00008' direct represents '9' with '-8715'
8702 8704 8706 8708 8710 8712 8714 8716 -8715 0
c Encoding variable: variant_fields_00002_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00009' order represents '1' with '8717'
c Var 'variant_fields_00002_00006_00009' direct represents '1' with '8717'
c Var 'variant_fields_00002_00006_00009' order represents '2' with '8718'
-8717 8718 0
c Var 'variant_fields_00002_00006_00009' direct represents '2' with '8719'
8717 -8718 8719 0
-8719 8718 0
-8719 -8717 0
c Var 'variant_fields_00002_00006_00009' order represents '3' with '8720'
-8718 8720 0
c Var 'variant_fields_00002_00006_00009' direct represents '3' with '8721'
8718 -8720 8721 0
-8721 8720 0
-8721 -8718 0
c Var 'variant_fields_00002_00006_00009' order represents '4' with '8722'
-8720 8722 0
c Var 'variant_fields_00002_00006_00009' direct represents '4' with '8723'
8720 -8722 8723 0
-8723 8722 0
-8723 -8720 0
c Var 'variant_fields_00002_00006_00009' order represents '5' with '8724'
-8722 8724 0
c Var 'variant_fields_00002_00006_00009' direct represents '5' with '8725'
8722 -8724 8725 0
-8725 8724 0
-8725 -8722 0
c Var 'variant_fields_00002_00006_00009' order represents '6' with '8726'
-8724 8726 0
c Var 'variant_fields_00002_00006_00009' direct represents '6' with '8727'
8724 -8726 8727 0
-8727 8726 0
-8727 -8724 0
c Var 'variant_fields_00002_00006_00009' order represents '7' with '8728'
-8726 8728 0
c Var 'variant_fields_00002_00006_00009' direct represents '7' with '8729'
8726 -8728 8729 0
-8729 8728 0
-8729 -8726 0
c Var 'variant_fields_00002_00006_00009' order represents '8' with '8730'
-8728 8730 0
c Var 'variant_fields_00002_00006_00009' direct represents '8' with '8731'
8728 -8730 8731 0
-8731 8730 0
-8731 -8728 0
c Var 'variant_fields_00002_00006_00009' direct represents '9' with '-8730'
8717 8719 8721 8723 8725 8727 8729 8731 -8730 0
c Encoding variable: variant_fields_00002_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00001' order represents '1' with '8732'
c Var 'variant_fields_00002_00007_00001' direct represents '1' with '8732'
c Var 'variant_fields_00002_00007_00001' order represents '2' with '8733'
-8732 8733 0
c Var 'variant_fields_00002_00007_00001' direct represents '2' with '8734'
8732 -8733 8734 0
-8734 8733 0
-8734 -8732 0
c Var 'variant_fields_00002_00007_00001' order represents '3' with '8735'
-8733 8735 0
c Var 'variant_fields_00002_00007_00001' direct represents '3' with '8736'
8733 -8735 8736 0
-8736 8735 0
-8736 -8733 0
c Var 'variant_fields_00002_00007_00001' order represents '4' with '8737'
-8735 8737 0
c Var 'variant_fields_00002_00007_00001' direct represents '4' with '8738'
8735 -8737 8738 0
-8738 8737 0
-8738 -8735 0
c Var 'variant_fields_00002_00007_00001' order represents '5' with '8739'
-8737 8739 0
c Var 'variant_fields_00002_00007_00001' direct represents '5' with '8740'
8737 -8739 8740 0
-8740 8739 0
-8740 -8737 0
c Var 'variant_fields_00002_00007_00001' order represents '6' with '8741'
-8739 8741 0
c Var 'variant_fields_00002_00007_00001' direct represents '6' with '8742'
8739 -8741 8742 0
-8742 8741 0
-8742 -8739 0
c Var 'variant_fields_00002_00007_00001' order represents '7' with '8743'
-8741 8743 0
c Var 'variant_fields_00002_00007_00001' direct represents '7' with '8744'
8741 -8743 8744 0
-8744 8743 0
-8744 -8741 0
c Var 'variant_fields_00002_00007_00001' order represents '8' with '8745'
-8743 8745 0
c Var 'variant_fields_00002_00007_00001' direct represents '8' with '8746'
8743 -8745 8746 0
-8746 8745 0
-8746 -8743 0
c Var 'variant_fields_00002_00007_00001' direct represents '9' with '-8745'
8732 8734 8736 8738 8740 8742 8744 8746 -8745 0
c Encoding variable: variant_fields_00002_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00002' order represents '1' with '8747'
c Var 'variant_fields_00002_00007_00002' direct represents '1' with '8747'
c Var 'variant_fields_00002_00007_00002' order represents '2' with '8748'
-8747 8748 0
c Var 'variant_fields_00002_00007_00002' direct represents '2' with '8749'
8747 -8748 8749 0
-8749 8748 0
-8749 -8747 0
c Var 'variant_fields_00002_00007_00002' order represents '3' with '8750'
-8748 8750 0
c Var 'variant_fields_00002_00007_00002' direct represents '3' with '8751'
8748 -8750 8751 0
-8751 8750 0
-8751 -8748 0
c Var 'variant_fields_00002_00007_00002' order represents '4' with '8752'
-8750 8752 0
c Var 'variant_fields_00002_00007_00002' direct represents '4' with '8753'
8750 -8752 8753 0
-8753 8752 0
-8753 -8750 0
c Var 'variant_fields_00002_00007_00002' order represents '5' with '8754'
-8752 8754 0
c Var 'variant_fields_00002_00007_00002' direct represents '5' with '8755'
8752 -8754 8755 0
-8755 8754 0
-8755 -8752 0
c Var 'variant_fields_00002_00007_00002' order represents '6' with '8756'
-8754 8756 0
c Var 'variant_fields_00002_00007_00002' direct represents '6' with '8757'
8754 -8756 8757 0
-8757 8756 0
-8757 -8754 0
c Var 'variant_fields_00002_00007_00002' order represents '7' with '8758'
-8756 8758 0
c Var 'variant_fields_00002_00007_00002' direct represents '7' with '8759'
8756 -8758 8759 0
-8759 8758 0
-8759 -8756 0
c Var 'variant_fields_00002_00007_00002' order represents '8' with '8760'
-8758 8760 0
c Var 'variant_fields_00002_00007_00002' direct represents '8' with '8761'
8758 -8760 8761 0
-8761 8760 0
-8761 -8758 0
c Var 'variant_fields_00002_00007_00002' direct represents '9' with '-8760'
8747 8749 8751 8753 8755 8757 8759 8761 -8760 0
c Encoding variable: variant_fields_00002_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00003' order represents '1' with '8762'
c Var 'variant_fields_00002_00007_00003' direct represents '1' with '8762'
c Var 'variant_fields_00002_00007_00003' order represents '2' with '8763'
-8762 8763 0
c Var 'variant_fields_00002_00007_00003' direct represents '2' with '8764'
8762 -8763 8764 0
-8764 8763 0
-8764 -8762 0
c Var 'variant_fields_00002_00007_00003' order represents '3' with '8765'
-8763 8765 0
c Var 'variant_fields_00002_00007_00003' direct represents '3' with '8766'
8763 -8765 8766 0
-8766 8765 0
-8766 -8763 0
c Var 'variant_fields_00002_00007_00003' order represents '4' with '8767'
-8765 8767 0
c Var 'variant_fields_00002_00007_00003' direct represents '4' with '8768'
8765 -8767 8768 0
-8768 8767 0
-8768 -8765 0
c Var 'variant_fields_00002_00007_00003' order represents '5' with '8769'
-8767 8769 0
c Var 'variant_fields_00002_00007_00003' direct represents '5' with '8770'
8767 -8769 8770 0
-8770 8769 0
-8770 -8767 0
c Var 'variant_fields_00002_00007_00003' order represents '6' with '8771'
-8769 8771 0
c Var 'variant_fields_00002_00007_00003' direct represents '6' with '8772'
8769 -8771 8772 0
-8772 8771 0
-8772 -8769 0
c Var 'variant_fields_00002_00007_00003' order represents '7' with '8773'
-8771 8773 0
c Var 'variant_fields_00002_00007_00003' direct represents '7' with '8774'
8771 -8773 8774 0
-8774 8773 0
-8774 -8771 0
c Var 'variant_fields_00002_00007_00003' order represents '8' with '8775'
-8773 8775 0
c Var 'variant_fields_00002_00007_00003' direct represents '8' with '8776'
8773 -8775 8776 0
-8776 8775 0
-8776 -8773 0
c Var 'variant_fields_00002_00007_00003' direct represents '9' with '-8775'
8762 8764 8766 8768 8770 8772 8774 8776 -8775 0
c Encoding variable: variant_fields_00002_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00004' order represents '1' with '8777'
c Var 'variant_fields_00002_00007_00004' direct represents '1' with '8777'
c Var 'variant_fields_00002_00007_00004' order represents '2' with '8778'
-8777 8778 0
c Var 'variant_fields_00002_00007_00004' direct represents '2' with '8779'
8777 -8778 8779 0
-8779 8778 0
-8779 -8777 0
c Var 'variant_fields_00002_00007_00004' order represents '3' with '8780'
-8778 8780 0
c Var 'variant_fields_00002_00007_00004' direct represents '3' with '8781'
8778 -8780 8781 0
-8781 8780 0
-8781 -8778 0
c Var 'variant_fields_00002_00007_00004' order represents '4' with '8782'
-8780 8782 0
c Var 'variant_fields_00002_00007_00004' direct represents '4' with '8783'
8780 -8782 8783 0
-8783 8782 0
-8783 -8780 0
c Var 'variant_fields_00002_00007_00004' order represents '5' with '8784'
-8782 8784 0
c Var 'variant_fields_00002_00007_00004' direct represents '5' with '8785'
8782 -8784 8785 0
-8785 8784 0
-8785 -8782 0
c Var 'variant_fields_00002_00007_00004' order represents '6' with '8786'
-8784 8786 0
c Var 'variant_fields_00002_00007_00004' direct represents '6' with '8787'
8784 -8786 8787 0
-8787 8786 0
-8787 -8784 0
c Var 'variant_fields_00002_00007_00004' order represents '7' with '8788'
-8786 8788 0
c Var 'variant_fields_00002_00007_00004' direct represents '7' with '8789'
8786 -8788 8789 0
-8789 8788 0
-8789 -8786 0
c Var 'variant_fields_00002_00007_00004' order represents '8' with '8790'
-8788 8790 0
c Var 'variant_fields_00002_00007_00004' direct represents '8' with '8791'
8788 -8790 8791 0
-8791 8790 0
-8791 -8788 0
c Var 'variant_fields_00002_00007_00004' direct represents '9' with '-8790'
8777 8779 8781 8783 8785 8787 8789 8791 -8790 0
c Encoding variable: variant_fields_00002_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00005' order represents '1' with '8792'
c Var 'variant_fields_00002_00007_00005' direct represents '1' with '8792'
c Var 'variant_fields_00002_00007_00005' order represents '2' with '8793'
-8792 8793 0
c Var 'variant_fields_00002_00007_00005' direct represents '2' with '8794'
8792 -8793 8794 0
-8794 8793 0
-8794 -8792 0
c Var 'variant_fields_00002_00007_00005' order represents '3' with '8795'
-8793 8795 0
c Var 'variant_fields_00002_00007_00005' direct represents '3' with '8796'
8793 -8795 8796 0
-8796 8795 0
-8796 -8793 0
c Var 'variant_fields_00002_00007_00005' order represents '4' with '8797'
-8795 8797 0
c Var 'variant_fields_00002_00007_00005' direct represents '4' with '8798'
8795 -8797 8798 0
-8798 8797 0
-8798 -8795 0
c Var 'variant_fields_00002_00007_00005' order represents '5' with '8799'
-8797 8799 0
c Var 'variant_fields_00002_00007_00005' direct represents '5' with '8800'
8797 -8799 8800 0
-8800 8799 0
-8800 -8797 0
c Var 'variant_fields_00002_00007_00005' order represents '6' with '8801'
-8799 8801 0
c Var 'variant_fields_00002_00007_00005' direct represents '6' with '8802'
8799 -8801 8802 0
-8802 8801 0
-8802 -8799 0
c Var 'variant_fields_00002_00007_00005' order represents '7' with '8803'
-8801 8803 0
c Var 'variant_fields_00002_00007_00005' direct represents '7' with '8804'
8801 -8803 8804 0
-8804 8803 0
-8804 -8801 0
c Var 'variant_fields_00002_00007_00005' order represents '8' with '8805'
-8803 8805 0
c Var 'variant_fields_00002_00007_00005' direct represents '8' with '8806'
8803 -8805 8806 0
-8806 8805 0
-8806 -8803 0
c Var 'variant_fields_00002_00007_00005' direct represents '9' with '-8805'
8792 8794 8796 8798 8800 8802 8804 8806 -8805 0
c Encoding variable: variant_fields_00002_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00006' order represents '1' with '8807'
c Var 'variant_fields_00002_00007_00006' direct represents '1' with '8807'
c Var 'variant_fields_00002_00007_00006' order represents '2' with '8808'
-8807 8808 0
c Var 'variant_fields_00002_00007_00006' direct represents '2' with '8809'
8807 -8808 8809 0
-8809 8808 0
-8809 -8807 0
c Var 'variant_fields_00002_00007_00006' order represents '3' with '8810'
-8808 8810 0
c Var 'variant_fields_00002_00007_00006' direct represents '3' with '8811'
8808 -8810 8811 0
-8811 8810 0
-8811 -8808 0
c Var 'variant_fields_00002_00007_00006' order represents '4' with '8812'
-8810 8812 0
c Var 'variant_fields_00002_00007_00006' direct represents '4' with '8813'
8810 -8812 8813 0
-8813 8812 0
-8813 -8810 0
c Var 'variant_fields_00002_00007_00006' order represents '5' with '8814'
-8812 8814 0
c Var 'variant_fields_00002_00007_00006' direct represents '5' with '8815'
8812 -8814 8815 0
-8815 8814 0
-8815 -8812 0
c Var 'variant_fields_00002_00007_00006' order represents '6' with '8816'
-8814 8816 0
c Var 'variant_fields_00002_00007_00006' direct represents '6' with '8817'
8814 -8816 8817 0
-8817 8816 0
-8817 -8814 0
c Var 'variant_fields_00002_00007_00006' order represents '7' with '8818'
-8816 8818 0
c Var 'variant_fields_00002_00007_00006' direct represents '7' with '8819'
8816 -8818 8819 0
-8819 8818 0
-8819 -8816 0
c Var 'variant_fields_00002_00007_00006' order represents '8' with '8820'
-8818 8820 0
c Var 'variant_fields_00002_00007_00006' direct represents '8' with '8821'
8818 -8820 8821 0
-8821 8820 0
-8821 -8818 0
c Var 'variant_fields_00002_00007_00006' direct represents '9' with '-8820'
8807 8809 8811 8813 8815 8817 8819 8821 -8820 0
c Encoding variable: variant_fields_00002_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00007' order represents '1' with '8822'
c Var 'variant_fields_00002_00007_00007' direct represents '1' with '8822'
c Var 'variant_fields_00002_00007_00007' order represents '2' with '8823'
-8822 8823 0
c Var 'variant_fields_00002_00007_00007' direct represents '2' with '8824'
8822 -8823 8824 0
-8824 8823 0
-8824 -8822 0
c Var 'variant_fields_00002_00007_00007' order represents '3' with '8825'
-8823 8825 0
c Var 'variant_fields_00002_00007_00007' direct represents '3' with '8826'
8823 -8825 8826 0
-8826 8825 0
-8826 -8823 0
c Var 'variant_fields_00002_00007_00007' order represents '4' with '8827'
-8825 8827 0
c Var 'variant_fields_00002_00007_00007' direct represents '4' with '8828'
8825 -8827 8828 0
-8828 8827 0
-8828 -8825 0
c Var 'variant_fields_00002_00007_00007' order represents '5' with '8829'
-8827 8829 0
c Var 'variant_fields_00002_00007_00007' direct represents '5' with '8830'
8827 -8829 8830 0
-8830 8829 0
-8830 -8827 0
c Var 'variant_fields_00002_00007_00007' order represents '6' with '8831'
-8829 8831 0
c Var 'variant_fields_00002_00007_00007' direct represents '6' with '8832'
8829 -8831 8832 0
-8832 8831 0
-8832 -8829 0
c Var 'variant_fields_00002_00007_00007' order represents '7' with '8833'
-8831 8833 0
c Var 'variant_fields_00002_00007_00007' direct represents '7' with '8834'
8831 -8833 8834 0
-8834 8833 0
-8834 -8831 0
c Var 'variant_fields_00002_00007_00007' order represents '8' with '8835'
-8833 8835 0
c Var 'variant_fields_00002_00007_00007' direct represents '8' with '8836'
8833 -8835 8836 0
-8836 8835 0
-8836 -8833 0
c Var 'variant_fields_00002_00007_00007' direct represents '9' with '-8835'
8822 8824 8826 8828 8830 8832 8834 8836 -8835 0
c Encoding variable: variant_fields_00002_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00008' order represents '1' with '8837'
c Var 'variant_fields_00002_00007_00008' direct represents '1' with '8837'
c Var 'variant_fields_00002_00007_00008' order represents '2' with '8838'
-8837 8838 0
c Var 'variant_fields_00002_00007_00008' direct represents '2' with '8839'
8837 -8838 8839 0
-8839 8838 0
-8839 -8837 0
c Var 'variant_fields_00002_00007_00008' order represents '3' with '8840'
-8838 8840 0
c Var 'variant_fields_00002_00007_00008' direct represents '3' with '8841'
8838 -8840 8841 0
-8841 8840 0
-8841 -8838 0
c Var 'variant_fields_00002_00007_00008' order represents '4' with '8842'
-8840 8842 0
c Var 'variant_fields_00002_00007_00008' direct represents '4' with '8843'
8840 -8842 8843 0
-8843 8842 0
-8843 -8840 0
c Var 'variant_fields_00002_00007_00008' order represents '5' with '8844'
-8842 8844 0
c Var 'variant_fields_00002_00007_00008' direct represents '5' with '8845'
8842 -8844 8845 0
-8845 8844 0
-8845 -8842 0
c Var 'variant_fields_00002_00007_00008' order represents '6' with '8846'
-8844 8846 0
c Var 'variant_fields_00002_00007_00008' direct represents '6' with '8847'
8844 -8846 8847 0
-8847 8846 0
-8847 -8844 0
c Var 'variant_fields_00002_00007_00008' order represents '7' with '8848'
-8846 8848 0
c Var 'variant_fields_00002_00007_00008' direct represents '7' with '8849'
8846 -8848 8849 0
-8849 8848 0
-8849 -8846 0
c Var 'variant_fields_00002_00007_00008' order represents '8' with '8850'
-8848 8850 0
c Var 'variant_fields_00002_00007_00008' direct represents '8' with '8851'
8848 -8850 8851 0
-8851 8850 0
-8851 -8848 0
c Var 'variant_fields_00002_00007_00008' direct represents '9' with '-8850'
8837 8839 8841 8843 8845 8847 8849 8851 -8850 0
c Encoding variable: variant_fields_00002_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00009' order represents '1' with '8852'
c Var 'variant_fields_00002_00007_00009' direct represents '1' with '8852'
c Var 'variant_fields_00002_00007_00009' order represents '2' with '8853'
-8852 8853 0
c Var 'variant_fields_00002_00007_00009' direct represents '2' with '8854'
8852 -8853 8854 0
-8854 8853 0
-8854 -8852 0
c Var 'variant_fields_00002_00007_00009' order represents '3' with '8855'
-8853 8855 0
c Var 'variant_fields_00002_00007_00009' direct represents '3' with '8856'
8853 -8855 8856 0
-8856 8855 0
-8856 -8853 0
c Var 'variant_fields_00002_00007_00009' order represents '4' with '8857'
-8855 8857 0
c Var 'variant_fields_00002_00007_00009' direct represents '4' with '8858'
8855 -8857 8858 0
-8858 8857 0
-8858 -8855 0
c Var 'variant_fields_00002_00007_00009' order represents '5' with '8859'
-8857 8859 0
c Var 'variant_fields_00002_00007_00009' direct represents '5' with '8860'
8857 -8859 8860 0
-8860 8859 0
-8860 -8857 0
c Var 'variant_fields_00002_00007_00009' order represents '6' with '8861'
-8859 8861 0
c Var 'variant_fields_00002_00007_00009' direct represents '6' with '8862'
8859 -8861 8862 0
-8862 8861 0
-8862 -8859 0
c Var 'variant_fields_00002_00007_00009' order represents '7' with '8863'
-8861 8863 0
c Var 'variant_fields_00002_00007_00009' direct represents '7' with '8864'
8861 -8863 8864 0
-8864 8863 0
-8864 -8861 0
c Var 'variant_fields_00002_00007_00009' order represents '8' with '8865'
-8863 8865 0
c Var 'variant_fields_00002_00007_00009' direct represents '8' with '8866'
8863 -8865 8866 0
-8866 8865 0
-8866 -8863 0
c Var 'variant_fields_00002_00007_00009' direct represents '9' with '-8865'
8852 8854 8856 8858 8860 8862 8864 8866 -8865 0
c Encoding variable: variant_fields_00002_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00001' order represents '1' with '8867'
c Var 'variant_fields_00002_00008_00001' direct represents '1' with '8867'
c Var 'variant_fields_00002_00008_00001' order represents '2' with '8868'
-8867 8868 0
c Var 'variant_fields_00002_00008_00001' direct represents '2' with '8869'
8867 -8868 8869 0
-8869 8868 0
-8869 -8867 0
c Var 'variant_fields_00002_00008_00001' order represents '3' with '8870'
-8868 8870 0
c Var 'variant_fields_00002_00008_00001' direct represents '3' with '8871'
8868 -8870 8871 0
-8871 8870 0
-8871 -8868 0
c Var 'variant_fields_00002_00008_00001' order represents '4' with '8872'
-8870 8872 0
c Var 'variant_fields_00002_00008_00001' direct represents '4' with '8873'
8870 -8872 8873 0
-8873 8872 0
-8873 -8870 0
c Var 'variant_fields_00002_00008_00001' order represents '5' with '8874'
-8872 8874 0
c Var 'variant_fields_00002_00008_00001' direct represents '5' with '8875'
8872 -8874 8875 0
-8875 8874 0
-8875 -8872 0
c Var 'variant_fields_00002_00008_00001' order represents '6' with '8876'
-8874 8876 0
c Var 'variant_fields_00002_00008_00001' direct represents '6' with '8877'
8874 -8876 8877 0
-8877 8876 0
-8877 -8874 0
c Var 'variant_fields_00002_00008_00001' order represents '7' with '8878'
-8876 8878 0
c Var 'variant_fields_00002_00008_00001' direct represents '7' with '8879'
8876 -8878 8879 0
-8879 8878 0
-8879 -8876 0
c Var 'variant_fields_00002_00008_00001' order represents '8' with '8880'
-8878 8880 0
c Var 'variant_fields_00002_00008_00001' direct represents '8' with '8881'
8878 -8880 8881 0
-8881 8880 0
-8881 -8878 0
c Var 'variant_fields_00002_00008_00001' direct represents '9' with '-8880'
8867 8869 8871 8873 8875 8877 8879 8881 -8880 0
c Encoding variable: variant_fields_00002_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00002' order represents '1' with '8882'
c Var 'variant_fields_00002_00008_00002' direct represents '1' with '8882'
c Var 'variant_fields_00002_00008_00002' order represents '2' with '8883'
-8882 8883 0
c Var 'variant_fields_00002_00008_00002' direct represents '2' with '8884'
8882 -8883 8884 0
-8884 8883 0
-8884 -8882 0
c Var 'variant_fields_00002_00008_00002' order represents '3' with '8885'
-8883 8885 0
c Var 'variant_fields_00002_00008_00002' direct represents '3' with '8886'
8883 -8885 8886 0
-8886 8885 0
-8886 -8883 0
c Var 'variant_fields_00002_00008_00002' order represents '4' with '8887'
-8885 8887 0
c Var 'variant_fields_00002_00008_00002' direct represents '4' with '8888'
8885 -8887 8888 0
-8888 8887 0
-8888 -8885 0
c Var 'variant_fields_00002_00008_00002' order represents '5' with '8889'
-8887 8889 0
c Var 'variant_fields_00002_00008_00002' direct represents '5' with '8890'
8887 -8889 8890 0
-8890 8889 0
-8890 -8887 0
c Var 'variant_fields_00002_00008_00002' order represents '6' with '8891'
-8889 8891 0
c Var 'variant_fields_00002_00008_00002' direct represents '6' with '8892'
8889 -8891 8892 0
-8892 8891 0
-8892 -8889 0
c Var 'variant_fields_00002_00008_00002' order represents '7' with '8893'
-8891 8893 0
c Var 'variant_fields_00002_00008_00002' direct represents '7' with '8894'
8891 -8893 8894 0
-8894 8893 0
-8894 -8891 0
c Var 'variant_fields_00002_00008_00002' order represents '8' with '8895'
-8893 8895 0
c Var 'variant_fields_00002_00008_00002' direct represents '8' with '8896'
8893 -8895 8896 0
-8896 8895 0
-8896 -8893 0
c Var 'variant_fields_00002_00008_00002' direct represents '9' with '-8895'
8882 8884 8886 8888 8890 8892 8894 8896 -8895 0
c Encoding variable: variant_fields_00002_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00003' order represents '1' with '8897'
c Var 'variant_fields_00002_00008_00003' direct represents '1' with '8897'
c Var 'variant_fields_00002_00008_00003' order represents '2' with '8898'
-8897 8898 0
c Var 'variant_fields_00002_00008_00003' direct represents '2' with '8899'
8897 -8898 8899 0
-8899 8898 0
-8899 -8897 0
c Var 'variant_fields_00002_00008_00003' order represents '3' with '8900'
-8898 8900 0
c Var 'variant_fields_00002_00008_00003' direct represents '3' with '8901'
8898 -8900 8901 0
-8901 8900 0
-8901 -8898 0
c Var 'variant_fields_00002_00008_00003' order represents '4' with '8902'
-8900 8902 0
c Var 'variant_fields_00002_00008_00003' direct represents '4' with '8903'
8900 -8902 8903 0
-8903 8902 0
-8903 -8900 0
c Var 'variant_fields_00002_00008_00003' order represents '5' with '8904'
-8902 8904 0
c Var 'variant_fields_00002_00008_00003' direct represents '5' with '8905'
8902 -8904 8905 0
-8905 8904 0
-8905 -8902 0
c Var 'variant_fields_00002_00008_00003' order represents '6' with '8906'
-8904 8906 0
c Var 'variant_fields_00002_00008_00003' direct represents '6' with '8907'
8904 -8906 8907 0
-8907 8906 0
-8907 -8904 0
c Var 'variant_fields_00002_00008_00003' order represents '7' with '8908'
-8906 8908 0
c Var 'variant_fields_00002_00008_00003' direct represents '7' with '8909'
8906 -8908 8909 0
-8909 8908 0
-8909 -8906 0
c Var 'variant_fields_00002_00008_00003' order represents '8' with '8910'
-8908 8910 0
c Var 'variant_fields_00002_00008_00003' direct represents '8' with '8911'
8908 -8910 8911 0
-8911 8910 0
-8911 -8908 0
c Var 'variant_fields_00002_00008_00003' direct represents '9' with '-8910'
8897 8899 8901 8903 8905 8907 8909 8911 -8910 0
c Encoding variable: variant_fields_00002_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00004' order represents '1' with '8912'
c Var 'variant_fields_00002_00008_00004' direct represents '1' with '8912'
c Var 'variant_fields_00002_00008_00004' order represents '2' with '8913'
-8912 8913 0
c Var 'variant_fields_00002_00008_00004' direct represents '2' with '8914'
8912 -8913 8914 0
-8914 8913 0
-8914 -8912 0
c Var 'variant_fields_00002_00008_00004' order represents '3' with '8915'
-8913 8915 0
c Var 'variant_fields_00002_00008_00004' direct represents '3' with '8916'
8913 -8915 8916 0
-8916 8915 0
-8916 -8913 0
c Var 'variant_fields_00002_00008_00004' order represents '4' with '8917'
-8915 8917 0
c Var 'variant_fields_00002_00008_00004' direct represents '4' with '8918'
8915 -8917 8918 0
-8918 8917 0
-8918 -8915 0
c Var 'variant_fields_00002_00008_00004' order represents '5' with '8919'
-8917 8919 0
c Var 'variant_fields_00002_00008_00004' direct represents '5' with '8920'
8917 -8919 8920 0
-8920 8919 0
-8920 -8917 0
c Var 'variant_fields_00002_00008_00004' order represents '6' with '8921'
-8919 8921 0
c Var 'variant_fields_00002_00008_00004' direct represents '6' with '8922'
8919 -8921 8922 0
-8922 8921 0
-8922 -8919 0
c Var 'variant_fields_00002_00008_00004' order represents '7' with '8923'
-8921 8923 0
c Var 'variant_fields_00002_00008_00004' direct represents '7' with '8924'
8921 -8923 8924 0
-8924 8923 0
-8924 -8921 0
c Var 'variant_fields_00002_00008_00004' order represents '8' with '8925'
-8923 8925 0
c Var 'variant_fields_00002_00008_00004' direct represents '8' with '8926'
8923 -8925 8926 0
-8926 8925 0
-8926 -8923 0
c Var 'variant_fields_00002_00008_00004' direct represents '9' with '-8925'
8912 8914 8916 8918 8920 8922 8924 8926 -8925 0
c Encoding variable: variant_fields_00002_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00005' order represents '1' with '8927'
c Var 'variant_fields_00002_00008_00005' direct represents '1' with '8927'
c Var 'variant_fields_00002_00008_00005' order represents '2' with '8928'
-8927 8928 0
c Var 'variant_fields_00002_00008_00005' direct represents '2' with '8929'
8927 -8928 8929 0
-8929 8928 0
-8929 -8927 0
c Var 'variant_fields_00002_00008_00005' order represents '3' with '8930'
-8928 8930 0
c Var 'variant_fields_00002_00008_00005' direct represents '3' with '8931'
8928 -8930 8931 0
-8931 8930 0
-8931 -8928 0
c Var 'variant_fields_00002_00008_00005' order represents '4' with '8932'
-8930 8932 0
c Var 'variant_fields_00002_00008_00005' direct represents '4' with '8933'
8930 -8932 8933 0
-8933 8932 0
-8933 -8930 0
c Var 'variant_fields_00002_00008_00005' order represents '5' with '8934'
-8932 8934 0
c Var 'variant_fields_00002_00008_00005' direct represents '5' with '8935'
8932 -8934 8935 0
-8935 8934 0
-8935 -8932 0
c Var 'variant_fields_00002_00008_00005' order represents '6' with '8936'
-8934 8936 0
c Var 'variant_fields_00002_00008_00005' direct represents '6' with '8937'
8934 -8936 8937 0
-8937 8936 0
-8937 -8934 0
c Var 'variant_fields_00002_00008_00005' order represents '7' with '8938'
-8936 8938 0
c Var 'variant_fields_00002_00008_00005' direct represents '7' with '8939'
8936 -8938 8939 0
-8939 8938 0
-8939 -8936 0
c Var 'variant_fields_00002_00008_00005' order represents '8' with '8940'
-8938 8940 0
c Var 'variant_fields_00002_00008_00005' direct represents '8' with '8941'
8938 -8940 8941 0
-8941 8940 0
-8941 -8938 0
c Var 'variant_fields_00002_00008_00005' direct represents '9' with '-8940'
8927 8929 8931 8933 8935 8937 8939 8941 -8940 0
c Encoding variable: variant_fields_00002_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00006' order represents '1' with '8942'
c Var 'variant_fields_00002_00008_00006' direct represents '1' with '8942'
c Var 'variant_fields_00002_00008_00006' order represents '2' with '8943'
-8942 8943 0
c Var 'variant_fields_00002_00008_00006' direct represents '2' with '8944'
8942 -8943 8944 0
-8944 8943 0
-8944 -8942 0
c Var 'variant_fields_00002_00008_00006' order represents '3' with '8945'
-8943 8945 0
c Var 'variant_fields_00002_00008_00006' direct represents '3' with '8946'
8943 -8945 8946 0
-8946 8945 0
-8946 -8943 0
c Var 'variant_fields_00002_00008_00006' order represents '4' with '8947'
-8945 8947 0
c Var 'variant_fields_00002_00008_00006' direct represents '4' with '8948'
8945 -8947 8948 0
-8948 8947 0
-8948 -8945 0
c Var 'variant_fields_00002_00008_00006' order represents '5' with '8949'
-8947 8949 0
c Var 'variant_fields_00002_00008_00006' direct represents '5' with '8950'
8947 -8949 8950 0
-8950 8949 0
-8950 -8947 0
c Var 'variant_fields_00002_00008_00006' order represents '6' with '8951'
-8949 8951 0
c Var 'variant_fields_00002_00008_00006' direct represents '6' with '8952'
8949 -8951 8952 0
-8952 8951 0
-8952 -8949 0
c Var 'variant_fields_00002_00008_00006' order represents '7' with '8953'
-8951 8953 0
c Var 'variant_fields_00002_00008_00006' direct represents '7' with '8954'
8951 -8953 8954 0
-8954 8953 0
-8954 -8951 0
c Var 'variant_fields_00002_00008_00006' order represents '8' with '8955'
-8953 8955 0
c Var 'variant_fields_00002_00008_00006' direct represents '8' with '8956'
8953 -8955 8956 0
-8956 8955 0
-8956 -8953 0
c Var 'variant_fields_00002_00008_00006' direct represents '9' with '-8955'
8942 8944 8946 8948 8950 8952 8954 8956 -8955 0
c Encoding variable: variant_fields_00002_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00007' order represents '1' with '8957'
c Var 'variant_fields_00002_00008_00007' direct represents '1' with '8957'
c Var 'variant_fields_00002_00008_00007' order represents '2' with '8958'
-8957 8958 0
c Var 'variant_fields_00002_00008_00007' direct represents '2' with '8959'
8957 -8958 8959 0
-8959 8958 0
-8959 -8957 0
c Var 'variant_fields_00002_00008_00007' order represents '3' with '8960'
-8958 8960 0
c Var 'variant_fields_00002_00008_00007' direct represents '3' with '8961'
8958 -8960 8961 0
-8961 8960 0
-8961 -8958 0
c Var 'variant_fields_00002_00008_00007' order represents '4' with '8962'
-8960 8962 0
c Var 'variant_fields_00002_00008_00007' direct represents '4' with '8963'
8960 -8962 8963 0
-8963 8962 0
-8963 -8960 0
c Var 'variant_fields_00002_00008_00007' order represents '5' with '8964'
-8962 8964 0
c Var 'variant_fields_00002_00008_00007' direct represents '5' with '8965'
8962 -8964 8965 0
-8965 8964 0
-8965 -8962 0
c Var 'variant_fields_00002_00008_00007' order represents '6' with '8966'
-8964 8966 0
c Var 'variant_fields_00002_00008_00007' direct represents '6' with '8967'
8964 -8966 8967 0
-8967 8966 0
-8967 -8964 0
c Var 'variant_fields_00002_00008_00007' order represents '7' with '8968'
-8966 8968 0
c Var 'variant_fields_00002_00008_00007' direct represents '7' with '8969'
8966 -8968 8969 0
-8969 8968 0
-8969 -8966 0
c Var 'variant_fields_00002_00008_00007' order represents '8' with '8970'
-8968 8970 0
c Var 'variant_fields_00002_00008_00007' direct represents '8' with '8971'
8968 -8970 8971 0
-8971 8970 0
-8971 -8968 0
c Var 'variant_fields_00002_00008_00007' direct represents '9' with '-8970'
8957 8959 8961 8963 8965 8967 8969 8971 -8970 0
c Encoding variable: variant_fields_00002_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00008' order represents '1' with '8972'
c Var 'variant_fields_00002_00008_00008' direct represents '1' with '8972'
c Var 'variant_fields_00002_00008_00008' order represents '2' with '8973'
-8972 8973 0
c Var 'variant_fields_00002_00008_00008' direct represents '2' with '8974'
8972 -8973 8974 0
-8974 8973 0
-8974 -8972 0
c Var 'variant_fields_00002_00008_00008' order represents '3' with '8975'
-8973 8975 0
c Var 'variant_fields_00002_00008_00008' direct represents '3' with '8976'
8973 -8975 8976 0
-8976 8975 0
-8976 -8973 0
c Var 'variant_fields_00002_00008_00008' order represents '4' with '8977'
-8975 8977 0
c Var 'variant_fields_00002_00008_00008' direct represents '4' with '8978'
8975 -8977 8978 0
-8978 8977 0
-8978 -8975 0
c Var 'variant_fields_00002_00008_00008' order represents '5' with '8979'
-8977 8979 0
c Var 'variant_fields_00002_00008_00008' direct represents '5' with '8980'
8977 -8979 8980 0
-8980 8979 0
-8980 -8977 0
c Var 'variant_fields_00002_00008_00008' order represents '6' with '8981'
-8979 8981 0
c Var 'variant_fields_00002_00008_00008' direct represents '6' with '8982'
8979 -8981 8982 0
-8982 8981 0
-8982 -8979 0
c Var 'variant_fields_00002_00008_00008' order represents '7' with '8983'
-8981 8983 0
c Var 'variant_fields_00002_00008_00008' direct represents '7' with '8984'
8981 -8983 8984 0
-8984 8983 0
-8984 -8981 0
c Var 'variant_fields_00002_00008_00008' order represents '8' with '8985'
-8983 8985 0
c Var 'variant_fields_00002_00008_00008' direct represents '8' with '8986'
8983 -8985 8986 0
-8986 8985 0
-8986 -8983 0
c Var 'variant_fields_00002_00008_00008' direct represents '9' with '-8985'
8972 8974 8976 8978 8980 8982 8984 8986 -8985 0
c Encoding variable: variant_fields_00002_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00008_00009' order represents '1' with '8987'
c Var 'variant_fields_00002_00008_00009' direct represents '1' with '8987'
c Var 'variant_fields_00002_00008_00009' order represents '2' with '8988'
-8987 8988 0
c Var 'variant_fields_00002_00008_00009' direct represents '2' with '8989'
8987 -8988 8989 0
-8989 8988 0
-8989 -8987 0
c Var 'variant_fields_00002_00008_00009' order represents '3' with '8990'
-8988 8990 0
c Var 'variant_fields_00002_00008_00009' direct represents '3' with '8991'
8988 -8990 8991 0
-8991 8990 0
-8991 -8988 0
c Var 'variant_fields_00002_00008_00009' order represents '4' with '8992'
-8990 8992 0
c Var 'variant_fields_00002_00008_00009' direct represents '4' with '8993'
8990 -8992 8993 0
-8993 8992 0
-8993 -8990 0
c Var 'variant_fields_00002_00008_00009' order represents '5' with '8994'
-8992 8994 0
c Var 'variant_fields_00002_00008_00009' direct represents '5' with '8995'
8992 -8994 8995 0
-8995 8994 0
-8995 -8992 0
c Var 'variant_fields_00002_00008_00009' order represents '6' with '8996'
-8994 8996 0
c Var 'variant_fields_00002_00008_00009' direct represents '6' with '8997'
8994 -8996 8997 0
-8997 8996 0
-8997 -8994 0
c Var 'variant_fields_00002_00008_00009' order represents '7' with '8998'
-8996 8998 0
c Var 'variant_fields_00002_00008_00009' direct represents '7' with '8999'
8996 -8998 8999 0
-8999 8998 0
-8999 -8996 0
c Var 'variant_fields_00002_00008_00009' order represents '8' with '9000'
-8998 9000 0
c Var 'variant_fields_00002_00008_00009' direct represents '8' with '9001'
8998 -9000 9001 0
-9001 9000 0
-9001 -8998 0
c Var 'variant_fields_00002_00008_00009' direct represents '9' with '-9000'
8987 8989 8991 8993 8995 8997 8999 9001 -9000 0
c Encoding variable: variant_fields_00002_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00001' order represents '1' with '9002'
c Var 'variant_fields_00002_00009_00001' direct represents '1' with '9002'
c Var 'variant_fields_00002_00009_00001' order represents '2' with '9003'
-9002 9003 0
c Var 'variant_fields_00002_00009_00001' direct represents '2' with '9004'
9002 -9003 9004 0
-9004 9003 0
-9004 -9002 0
c Var 'variant_fields_00002_00009_00001' order represents '3' with '9005'
-9003 9005 0
c Var 'variant_fields_00002_00009_00001' direct represents '3' with '9006'
9003 -9005 9006 0
-9006 9005 0
-9006 -9003 0
c Var 'variant_fields_00002_00009_00001' order represents '4' with '9007'
-9005 9007 0
c Var 'variant_fields_00002_00009_00001' direct represents '4' with '9008'
9005 -9007 9008 0
-9008 9007 0
-9008 -9005 0
c Var 'variant_fields_00002_00009_00001' order represents '5' with '9009'
-9007 9009 0
c Var 'variant_fields_00002_00009_00001' direct represents '5' with '9010'
9007 -9009 9010 0
-9010 9009 0
-9010 -9007 0
c Var 'variant_fields_00002_00009_00001' order represents '6' with '9011'
-9009 9011 0
c Var 'variant_fields_00002_00009_00001' direct represents '6' with '9012'
9009 -9011 9012 0
-9012 9011 0
-9012 -9009 0
c Var 'variant_fields_00002_00009_00001' order represents '7' with '9013'
-9011 9013 0
c Var 'variant_fields_00002_00009_00001' direct represents '7' with '9014'
9011 -9013 9014 0
-9014 9013 0
-9014 -9011 0
c Var 'variant_fields_00002_00009_00001' order represents '8' with '9015'
-9013 9015 0
c Var 'variant_fields_00002_00009_00001' direct represents '8' with '9016'
9013 -9015 9016 0
-9016 9015 0
-9016 -9013 0
c Var 'variant_fields_00002_00009_00001' direct represents '9' with '-9015'
9002 9004 9006 9008 9010 9012 9014 9016 -9015 0
c Encoding variable: variant_fields_00002_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00002' order represents '1' with '9017'
c Var 'variant_fields_00002_00009_00002' direct represents '1' with '9017'
c Var 'variant_fields_00002_00009_00002' order represents '2' with '9018'
-9017 9018 0
c Var 'variant_fields_00002_00009_00002' direct represents '2' with '9019'
9017 -9018 9019 0
-9019 9018 0
-9019 -9017 0
c Var 'variant_fields_00002_00009_00002' order represents '3' with '9020'
-9018 9020 0
c Var 'variant_fields_00002_00009_00002' direct represents '3' with '9021'
9018 -9020 9021 0
-9021 9020 0
-9021 -9018 0
c Var 'variant_fields_00002_00009_00002' order represents '4' with '9022'
-9020 9022 0
c Var 'variant_fields_00002_00009_00002' direct represents '4' with '9023'
9020 -9022 9023 0
-9023 9022 0
-9023 -9020 0
c Var 'variant_fields_00002_00009_00002' order represents '5' with '9024'
-9022 9024 0
c Var 'variant_fields_00002_00009_00002' direct represents '5' with '9025'
9022 -9024 9025 0
-9025 9024 0
-9025 -9022 0
c Var 'variant_fields_00002_00009_00002' order represents '6' with '9026'
-9024 9026 0
c Var 'variant_fields_00002_00009_00002' direct represents '6' with '9027'
9024 -9026 9027 0
-9027 9026 0
-9027 -9024 0
c Var 'variant_fields_00002_00009_00002' order represents '7' with '9028'
-9026 9028 0
c Var 'variant_fields_00002_00009_00002' direct represents '7' with '9029'
9026 -9028 9029 0
-9029 9028 0
-9029 -9026 0
c Var 'variant_fields_00002_00009_00002' order represents '8' with '9030'
-9028 9030 0
c Var 'variant_fields_00002_00009_00002' direct represents '8' with '9031'
9028 -9030 9031 0
-9031 9030 0
-9031 -9028 0
c Var 'variant_fields_00002_00009_00002' direct represents '9' with '-9030'
9017 9019 9021 9023 9025 9027 9029 9031 -9030 0
c Encoding variable: variant_fields_00002_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00003' order represents '1' with '9032'
c Var 'variant_fields_00002_00009_00003' direct represents '1' with '9032'
c Var 'variant_fields_00002_00009_00003' order represents '2' with '9033'
-9032 9033 0
c Var 'variant_fields_00002_00009_00003' direct represents '2' with '9034'
9032 -9033 9034 0
-9034 9033 0
-9034 -9032 0
c Var 'variant_fields_00002_00009_00003' order represents '3' with '9035'
-9033 9035 0
c Var 'variant_fields_00002_00009_00003' direct represents '3' with '9036'
9033 -9035 9036 0
-9036 9035 0
-9036 -9033 0
c Var 'variant_fields_00002_00009_00003' order represents '4' with '9037'
-9035 9037 0
c Var 'variant_fields_00002_00009_00003' direct represents '4' with '9038'
9035 -9037 9038 0
-9038 9037 0
-9038 -9035 0
c Var 'variant_fields_00002_00009_00003' order represents '5' with '9039'
-9037 9039 0
c Var 'variant_fields_00002_00009_00003' direct represents '5' with '9040'
9037 -9039 9040 0
-9040 9039 0
-9040 -9037 0
c Var 'variant_fields_00002_00009_00003' order represents '6' with '9041'
-9039 9041 0
c Var 'variant_fields_00002_00009_00003' direct represents '6' with '9042'
9039 -9041 9042 0
-9042 9041 0
-9042 -9039 0
c Var 'variant_fields_00002_00009_00003' order represents '7' with '9043'
-9041 9043 0
c Var 'variant_fields_00002_00009_00003' direct represents '7' with '9044'
9041 -9043 9044 0
-9044 9043 0
-9044 -9041 0
c Var 'variant_fields_00002_00009_00003' order represents '8' with '9045'
-9043 9045 0
c Var 'variant_fields_00002_00009_00003' direct represents '8' with '9046'
9043 -9045 9046 0
-9046 9045 0
-9046 -9043 0
c Var 'variant_fields_00002_00009_00003' direct represents '9' with '-9045'
9032 9034 9036 9038 9040 9042 9044 9046 -9045 0
c Encoding variable: variant_fields_00002_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00004' order represents '1' with '9047'
c Var 'variant_fields_00002_00009_00004' direct represents '1' with '9047'
c Var 'variant_fields_00002_00009_00004' order represents '2' with '9048'
-9047 9048 0
c Var 'variant_fields_00002_00009_00004' direct represents '2' with '9049'
9047 -9048 9049 0
-9049 9048 0
-9049 -9047 0
c Var 'variant_fields_00002_00009_00004' order represents '3' with '9050'
-9048 9050 0
c Var 'variant_fields_00002_00009_00004' direct represents '3' with '9051'
9048 -9050 9051 0
-9051 9050 0
-9051 -9048 0
c Var 'variant_fields_00002_00009_00004' order represents '4' with '9052'
-9050 9052 0
c Var 'variant_fields_00002_00009_00004' direct represents '4' with '9053'
9050 -9052 9053 0
-9053 9052 0
-9053 -9050 0
c Var 'variant_fields_00002_00009_00004' order represents '5' with '9054'
-9052 9054 0
c Var 'variant_fields_00002_00009_00004' direct represents '5' with '9055'
9052 -9054 9055 0
-9055 9054 0
-9055 -9052 0
c Var 'variant_fields_00002_00009_00004' order represents '6' with '9056'
-9054 9056 0
c Var 'variant_fields_00002_00009_00004' direct represents '6' with '9057'
9054 -9056 9057 0
-9057 9056 0
-9057 -9054 0
c Var 'variant_fields_00002_00009_00004' order represents '7' with '9058'
-9056 9058 0
c Var 'variant_fields_00002_00009_00004' direct represents '7' with '9059'
9056 -9058 9059 0
-9059 9058 0
-9059 -9056 0
c Var 'variant_fields_00002_00009_00004' order represents '8' with '9060'
-9058 9060 0
c Var 'variant_fields_00002_00009_00004' direct represents '8' with '9061'
9058 -9060 9061 0
-9061 9060 0
-9061 -9058 0
c Var 'variant_fields_00002_00009_00004' direct represents '9' with '-9060'
9047 9049 9051 9053 9055 9057 9059 9061 -9060 0
c Encoding variable: variant_fields_00002_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00005' order represents '1' with '9062'
c Var 'variant_fields_00002_00009_00005' direct represents '1' with '9062'
c Var 'variant_fields_00002_00009_00005' order represents '2' with '9063'
-9062 9063 0
c Var 'variant_fields_00002_00009_00005' direct represents '2' with '9064'
9062 -9063 9064 0
-9064 9063 0
-9064 -9062 0
c Var 'variant_fields_00002_00009_00005' order represents '3' with '9065'
-9063 9065 0
c Var 'variant_fields_00002_00009_00005' direct represents '3' with '9066'
9063 -9065 9066 0
-9066 9065 0
-9066 -9063 0
c Var 'variant_fields_00002_00009_00005' order represents '4' with '9067'
-9065 9067 0
c Var 'variant_fields_00002_00009_00005' direct represents '4' with '9068'
9065 -9067 9068 0
-9068 9067 0
-9068 -9065 0
c Var 'variant_fields_00002_00009_00005' order represents '5' with '9069'
-9067 9069 0
c Var 'variant_fields_00002_00009_00005' direct represents '5' with '9070'
9067 -9069 9070 0
-9070 9069 0
-9070 -9067 0
c Var 'variant_fields_00002_00009_00005' order represents '6' with '9071'
-9069 9071 0
c Var 'variant_fields_00002_00009_00005' direct represents '6' with '9072'
9069 -9071 9072 0
-9072 9071 0
-9072 -9069 0
c Var 'variant_fields_00002_00009_00005' order represents '7' with '9073'
-9071 9073 0
c Var 'variant_fields_00002_00009_00005' direct represents '7' with '9074'
9071 -9073 9074 0
-9074 9073 0
-9074 -9071 0
c Var 'variant_fields_00002_00009_00005' order represents '8' with '9075'
-9073 9075 0
c Var 'variant_fields_00002_00009_00005' direct represents '8' with '9076'
9073 -9075 9076 0
-9076 9075 0
-9076 -9073 0
c Var 'variant_fields_00002_00009_00005' direct represents '9' with '-9075'
9062 9064 9066 9068 9070 9072 9074 9076 -9075 0
c Encoding variable: variant_fields_00002_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00006' order represents '1' with '9077'
c Var 'variant_fields_00002_00009_00006' direct represents '1' with '9077'
c Var 'variant_fields_00002_00009_00006' order represents '2' with '9078'
-9077 9078 0
c Var 'variant_fields_00002_00009_00006' direct represents '2' with '9079'
9077 -9078 9079 0
-9079 9078 0
-9079 -9077 0
c Var 'variant_fields_00002_00009_00006' order represents '3' with '9080'
-9078 9080 0
c Var 'variant_fields_00002_00009_00006' direct represents '3' with '9081'
9078 -9080 9081 0
-9081 9080 0
-9081 -9078 0
c Var 'variant_fields_00002_00009_00006' order represents '4' with '9082'
-9080 9082 0
c Var 'variant_fields_00002_00009_00006' direct represents '4' with '9083'
9080 -9082 9083 0
-9083 9082 0
-9083 -9080 0
c Var 'variant_fields_00002_00009_00006' order represents '5' with '9084'
-9082 9084 0
c Var 'variant_fields_00002_00009_00006' direct represents '5' with '9085'
9082 -9084 9085 0
-9085 9084 0
-9085 -9082 0
c Var 'variant_fields_00002_00009_00006' order represents '6' with '9086'
-9084 9086 0
c Var 'variant_fields_00002_00009_00006' direct represents '6' with '9087'
9084 -9086 9087 0
-9087 9086 0
-9087 -9084 0
c Var 'variant_fields_00002_00009_00006' order represents '7' with '9088'
-9086 9088 0
c Var 'variant_fields_00002_00009_00006' direct represents '7' with '9089'
9086 -9088 9089 0
-9089 9088 0
-9089 -9086 0
c Var 'variant_fields_00002_00009_00006' order represents '8' with '9090'
-9088 9090 0
c Var 'variant_fields_00002_00009_00006' direct represents '8' with '9091'
9088 -9090 9091 0
-9091 9090 0
-9091 -9088 0
c Var 'variant_fields_00002_00009_00006' direct represents '9' with '-9090'
9077 9079 9081 9083 9085 9087 9089 9091 -9090 0
c Encoding variable: variant_fields_00002_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00007' order represents '1' with '9092'
c Var 'variant_fields_00002_00009_00007' direct represents '1' with '9092'
c Var 'variant_fields_00002_00009_00007' order represents '2' with '9093'
-9092 9093 0
c Var 'variant_fields_00002_00009_00007' direct represents '2' with '9094'
9092 -9093 9094 0
-9094 9093 0
-9094 -9092 0
c Var 'variant_fields_00002_00009_00007' order represents '3' with '9095'
-9093 9095 0
c Var 'variant_fields_00002_00009_00007' direct represents '3' with '9096'
9093 -9095 9096 0
-9096 9095 0
-9096 -9093 0
c Var 'variant_fields_00002_00009_00007' order represents '4' with '9097'
-9095 9097 0
c Var 'variant_fields_00002_00009_00007' direct represents '4' with '9098'
9095 -9097 9098 0
-9098 9097 0
-9098 -9095 0
c Var 'variant_fields_00002_00009_00007' order represents '5' with '9099'
-9097 9099 0
c Var 'variant_fields_00002_00009_00007' direct represents '5' with '9100'
9097 -9099 9100 0
-9100 9099 0
-9100 -9097 0
c Var 'variant_fields_00002_00009_00007' order represents '6' with '9101'
-9099 9101 0
c Var 'variant_fields_00002_00009_00007' direct represents '6' with '9102'
9099 -9101 9102 0
-9102 9101 0
-9102 -9099 0
c Var 'variant_fields_00002_00009_00007' order represents '7' with '9103'
-9101 9103 0
c Var 'variant_fields_00002_00009_00007' direct represents '7' with '9104'
9101 -9103 9104 0
-9104 9103 0
-9104 -9101 0
c Var 'variant_fields_00002_00009_00007' order represents '8' with '9105'
-9103 9105 0
c Var 'variant_fields_00002_00009_00007' direct represents '8' with '9106'
9103 -9105 9106 0
-9106 9105 0
-9106 -9103 0
c Var 'variant_fields_00002_00009_00007' direct represents '9' with '-9105'
9092 9094 9096 9098 9100 9102 9104 9106 -9105 0
c Encoding variable: variant_fields_00002_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00008' order represents '1' with '9107'
c Var 'variant_fields_00002_00009_00008' direct represents '1' with '9107'
c Var 'variant_fields_00002_00009_00008' order represents '2' with '9108'
-9107 9108 0
c Var 'variant_fields_00002_00009_00008' direct represents '2' with '9109'
9107 -9108 9109 0
-9109 9108 0
-9109 -9107 0
c Var 'variant_fields_00002_00009_00008' order represents '3' with '9110'
-9108 9110 0
c Var 'variant_fields_00002_00009_00008' direct represents '3' with '9111'
9108 -9110 9111 0
-9111 9110 0
-9111 -9108 0
c Var 'variant_fields_00002_00009_00008' order represents '4' with '9112'
-9110 9112 0
c Var 'variant_fields_00002_00009_00008' direct represents '4' with '9113'
9110 -9112 9113 0
-9113 9112 0
-9113 -9110 0
c Var 'variant_fields_00002_00009_00008' order represents '5' with '9114'
-9112 9114 0
c Var 'variant_fields_00002_00009_00008' direct represents '5' with '9115'
9112 -9114 9115 0
-9115 9114 0
-9115 -9112 0
c Var 'variant_fields_00002_00009_00008' order represents '6' with '9116'
-9114 9116 0
c Var 'variant_fields_00002_00009_00008' direct represents '6' with '9117'
9114 -9116 9117 0
-9117 9116 0
-9117 -9114 0
c Var 'variant_fields_00002_00009_00008' order represents '7' with '9118'
-9116 9118 0
c Var 'variant_fields_00002_00009_00008' direct represents '7' with '9119'
9116 -9118 9119 0
-9119 9118 0
-9119 -9116 0
c Var 'variant_fields_00002_00009_00008' order represents '8' with '9120'
-9118 9120 0
c Var 'variant_fields_00002_00009_00008' direct represents '8' with '9121'
9118 -9120 9121 0
-9121 9120 0
-9121 -9118 0
c Var 'variant_fields_00002_00009_00008' direct represents '9' with '-9120'
9107 9109 9111 9113 9115 9117 9119 9121 -9120 0
c Encoding variable: variant_fields_00002_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00009_00009' order represents '1' with '9122'
c Var 'variant_fields_00002_00009_00009' direct represents '1' with '9122'
c Var 'variant_fields_00002_00009_00009' order represents '2' with '9123'
-9122 9123 0
c Var 'variant_fields_00002_00009_00009' direct represents '2' with '9124'
9122 -9123 9124 0
-9124 9123 0
-9124 -9122 0
c Var 'variant_fields_00002_00009_00009' order represents '3' with '9125'
-9123 9125 0
c Var 'variant_fields_00002_00009_00009' direct represents '3' with '9126'
9123 -9125 9126 0
-9126 9125 0
-9126 -9123 0
c Var 'variant_fields_00002_00009_00009' order represents '4' with '9127'
-9125 9127 0
c Var 'variant_fields_00002_00009_00009' direct represents '4' with '9128'
9125 -9127 9128 0
-9128 9127 0
-9128 -9125 0
c Var 'variant_fields_00002_00009_00009' order represents '5' with '9129'
-9127 9129 0
c Var 'variant_fields_00002_00009_00009' direct represents '5' with '9130'
9127 -9129 9130 0
-9130 9129 0
-9130 -9127 0
c Var 'variant_fields_00002_00009_00009' order represents '6' with '9131'
-9129 9131 0
c Var 'variant_fields_00002_00009_00009' direct represents '6' with '9132'
9129 -9131 9132 0
-9132 9131 0
-9132 -9129 0
c Var 'variant_fields_00002_00009_00009' order represents '7' with '9133'
-9131 9133 0
c Var 'variant_fields_00002_00009_00009' direct represents '7' with '9134'
9131 -9133 9134 0
-9134 9133 0
-9134 -9131 0
c Var 'variant_fields_00002_00009_00009' order represents '8' with '9135'
-9133 9135 0
c Var 'variant_fields_00002_00009_00009' direct represents '8' with '9136'
9133 -9135 9136 0
-9136 9135 0
-9136 -9133 0
c Var 'variant_fields_00002_00009_00009' direct represents '9' with '-9135'
9122 9124 9126 9128 9130 9132 9134 9136 -9135 0
c Encoding variable: variant_fields_00003_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00001' order represents '1' with '9137'
c Var 'variant_fields_00003_00001_00001' direct represents '1' with '9137'
c Var 'variant_fields_00003_00001_00001' order represents '2' with '9138'
-9137 9138 0
c Var 'variant_fields_00003_00001_00001' direct represents '2' with '9139'
9137 -9138 9139 0
-9139 9138 0
-9139 -9137 0
c Var 'variant_fields_00003_00001_00001' order represents '3' with '9140'
-9138 9140 0
c Var 'variant_fields_00003_00001_00001' direct represents '3' with '9141'
9138 -9140 9141 0
-9141 9140 0
-9141 -9138 0
c Var 'variant_fields_00003_00001_00001' order represents '4' with '9142'
-9140 9142 0
c Var 'variant_fields_00003_00001_00001' direct represents '4' with '9143'
9140 -9142 9143 0
-9143 9142 0
-9143 -9140 0
c Var 'variant_fields_00003_00001_00001' order represents '5' with '9144'
-9142 9144 0
c Var 'variant_fields_00003_00001_00001' direct represents '5' with '9145'
9142 -9144 9145 0
-9145 9144 0
-9145 -9142 0
c Var 'variant_fields_00003_00001_00001' order represents '6' with '9146'
-9144 9146 0
c Var 'variant_fields_00003_00001_00001' direct represents '6' with '9147'
9144 -9146 9147 0
-9147 9146 0
-9147 -9144 0
c Var 'variant_fields_00003_00001_00001' order represents '7' with '9148'
-9146 9148 0
c Var 'variant_fields_00003_00001_00001' direct represents '7' with '9149'
9146 -9148 9149 0
-9149 9148 0
-9149 -9146 0
c Var 'variant_fields_00003_00001_00001' order represents '8' with '9150'
-9148 9150 0
c Var 'variant_fields_00003_00001_00001' direct represents '8' with '9151'
9148 -9150 9151 0
-9151 9150 0
-9151 -9148 0
c Var 'variant_fields_00003_00001_00001' direct represents '9' with '-9150'
9137 9139 9141 9143 9145 9147 9149 9151 -9150 0
c Encoding variable: variant_fields_00003_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00002' order represents '1' with '9152'
c Var 'variant_fields_00003_00001_00002' direct represents '1' with '9152'
c Var 'variant_fields_00003_00001_00002' order represents '2' with '9153'
-9152 9153 0
c Var 'variant_fields_00003_00001_00002' direct represents '2' with '9154'
9152 -9153 9154 0
-9154 9153 0
-9154 -9152 0
c Var 'variant_fields_00003_00001_00002' order represents '3' with '9155'
-9153 9155 0
c Var 'variant_fields_00003_00001_00002' direct represents '3' with '9156'
9153 -9155 9156 0
-9156 9155 0
-9156 -9153 0
c Var 'variant_fields_00003_00001_00002' order represents '4' with '9157'
-9155 9157 0
c Var 'variant_fields_00003_00001_00002' direct represents '4' with '9158'
9155 -9157 9158 0
-9158 9157 0
-9158 -9155 0
c Var 'variant_fields_00003_00001_00002' order represents '5' with '9159'
-9157 9159 0
c Var 'variant_fields_00003_00001_00002' direct represents '5' with '9160'
9157 -9159 9160 0
-9160 9159 0
-9160 -9157 0
c Var 'variant_fields_00003_00001_00002' order represents '6' with '9161'
-9159 9161 0
c Var 'variant_fields_00003_00001_00002' direct represents '6' with '9162'
9159 -9161 9162 0
-9162 9161 0
-9162 -9159 0
c Var 'variant_fields_00003_00001_00002' order represents '7' with '9163'
-9161 9163 0
c Var 'variant_fields_00003_00001_00002' direct represents '7' with '9164'
9161 -9163 9164 0
-9164 9163 0
-9164 -9161 0
c Var 'variant_fields_00003_00001_00002' order represents '8' with '9165'
-9163 9165 0
c Var 'variant_fields_00003_00001_00002' direct represents '8' with '9166'
9163 -9165 9166 0
-9166 9165 0
-9166 -9163 0
c Var 'variant_fields_00003_00001_00002' direct represents '9' with '-9165'
9152 9154 9156 9158 9160 9162 9164 9166 -9165 0
c Encoding variable: variant_fields_00003_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00003' order represents '1' with '9167'
c Var 'variant_fields_00003_00001_00003' direct represents '1' with '9167'
c Var 'variant_fields_00003_00001_00003' order represents '2' with '9168'
-9167 9168 0
c Var 'variant_fields_00003_00001_00003' direct represents '2' with '9169'
9167 -9168 9169 0
-9169 9168 0
-9169 -9167 0
c Var 'variant_fields_00003_00001_00003' order represents '3' with '9170'
-9168 9170 0
c Var 'variant_fields_00003_00001_00003' direct represents '3' with '9171'
9168 -9170 9171 0
-9171 9170 0
-9171 -9168 0
c Var 'variant_fields_00003_00001_00003' order represents '4' with '9172'
-9170 9172 0
c Var 'variant_fields_00003_00001_00003' direct represents '4' with '9173'
9170 -9172 9173 0
-9173 9172 0
-9173 -9170 0
c Var 'variant_fields_00003_00001_00003' order represents '5' with '9174'
-9172 9174 0
c Var 'variant_fields_00003_00001_00003' direct represents '5' with '9175'
9172 -9174 9175 0
-9175 9174 0
-9175 -9172 0
c Var 'variant_fields_00003_00001_00003' order represents '6' with '9176'
-9174 9176 0
c Var 'variant_fields_00003_00001_00003' direct represents '6' with '9177'
9174 -9176 9177 0
-9177 9176 0
-9177 -9174 0
c Var 'variant_fields_00003_00001_00003' order represents '7' with '9178'
-9176 9178 0
c Var 'variant_fields_00003_00001_00003' direct represents '7' with '9179'
9176 -9178 9179 0
-9179 9178 0
-9179 -9176 0
c Var 'variant_fields_00003_00001_00003' order represents '8' with '9180'
-9178 9180 0
c Var 'variant_fields_00003_00001_00003' direct represents '8' with '9181'
9178 -9180 9181 0
-9181 9180 0
-9181 -9178 0
c Var 'variant_fields_00003_00001_00003' direct represents '9' with '-9180'
9167 9169 9171 9173 9175 9177 9179 9181 -9180 0
c Encoding variable: variant_fields_00003_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00004' order represents '1' with '9182'
c Var 'variant_fields_00003_00001_00004' direct represents '1' with '9182'
c Var 'variant_fields_00003_00001_00004' order represents '2' with '9183'
-9182 9183 0
c Var 'variant_fields_00003_00001_00004' direct represents '2' with '9184'
9182 -9183 9184 0
-9184 9183 0
-9184 -9182 0
c Var 'variant_fields_00003_00001_00004' order represents '3' with '9185'
-9183 9185 0
c Var 'variant_fields_00003_00001_00004' direct represents '3' with '9186'
9183 -9185 9186 0
-9186 9185 0
-9186 -9183 0
c Var 'variant_fields_00003_00001_00004' order represents '4' with '9187'
-9185 9187 0
c Var 'variant_fields_00003_00001_00004' direct represents '4' with '9188'
9185 -9187 9188 0
-9188 9187 0
-9188 -9185 0
c Var 'variant_fields_00003_00001_00004' order represents '5' with '9189'
-9187 9189 0
c Var 'variant_fields_00003_00001_00004' direct represents '5' with '9190'
9187 -9189 9190 0
-9190 9189 0
-9190 -9187 0
c Var 'variant_fields_00003_00001_00004' order represents '6' with '9191'
-9189 9191 0
c Var 'variant_fields_00003_00001_00004' direct represents '6' with '9192'
9189 -9191 9192 0
-9192 9191 0
-9192 -9189 0
c Var 'variant_fields_00003_00001_00004' order represents '7' with '9193'
-9191 9193 0
c Var 'variant_fields_00003_00001_00004' direct represents '7' with '9194'
9191 -9193 9194 0
-9194 9193 0
-9194 -9191 0
c Var 'variant_fields_00003_00001_00004' order represents '8' with '9195'
-9193 9195 0
c Var 'variant_fields_00003_00001_00004' direct represents '8' with '9196'
9193 -9195 9196 0
-9196 9195 0
-9196 -9193 0
c Var 'variant_fields_00003_00001_00004' direct represents '9' with '-9195'
9182 9184 9186 9188 9190 9192 9194 9196 -9195 0
c Encoding variable: variant_fields_00003_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00005' order represents '1' with '9197'
c Var 'variant_fields_00003_00001_00005' direct represents '1' with '9197'
c Var 'variant_fields_00003_00001_00005' order represents '2' with '9198'
-9197 9198 0
c Var 'variant_fields_00003_00001_00005' direct represents '2' with '9199'
9197 -9198 9199 0
-9199 9198 0
-9199 -9197 0
c Var 'variant_fields_00003_00001_00005' order represents '3' with '9200'
-9198 9200 0
c Var 'variant_fields_00003_00001_00005' direct represents '3' with '9201'
9198 -9200 9201 0
-9201 9200 0
-9201 -9198 0
c Var 'variant_fields_00003_00001_00005' order represents '4' with '9202'
-9200 9202 0
c Var 'variant_fields_00003_00001_00005' direct represents '4' with '9203'
9200 -9202 9203 0
-9203 9202 0
-9203 -9200 0
c Var 'variant_fields_00003_00001_00005' order represents '5' with '9204'
-9202 9204 0
c Var 'variant_fields_00003_00001_00005' direct represents '5' with '9205'
9202 -9204 9205 0
-9205 9204 0
-9205 -9202 0
c Var 'variant_fields_00003_00001_00005' order represents '6' with '9206'
-9204 9206 0
c Var 'variant_fields_00003_00001_00005' direct represents '6' with '9207'
9204 -9206 9207 0
-9207 9206 0
-9207 -9204 0
c Var 'variant_fields_00003_00001_00005' order represents '7' with '9208'
-9206 9208 0
c Var 'variant_fields_00003_00001_00005' direct represents '7' with '9209'
9206 -9208 9209 0
-9209 9208 0
-9209 -9206 0
c Var 'variant_fields_00003_00001_00005' order represents '8' with '9210'
-9208 9210 0
c Var 'variant_fields_00003_00001_00005' direct represents '8' with '9211'
9208 -9210 9211 0
-9211 9210 0
-9211 -9208 0
c Var 'variant_fields_00003_00001_00005' direct represents '9' with '-9210'
9197 9199 9201 9203 9205 9207 9209 9211 -9210 0
c Encoding variable: variant_fields_00003_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00006' order represents '1' with '9212'
c Var 'variant_fields_00003_00001_00006' direct represents '1' with '9212'
c Var 'variant_fields_00003_00001_00006' order represents '2' with '9213'
-9212 9213 0
c Var 'variant_fields_00003_00001_00006' direct represents '2' with '9214'
9212 -9213 9214 0
-9214 9213 0
-9214 -9212 0
c Var 'variant_fields_00003_00001_00006' order represents '3' with '9215'
-9213 9215 0
c Var 'variant_fields_00003_00001_00006' direct represents '3' with '9216'
9213 -9215 9216 0
-9216 9215 0
-9216 -9213 0
c Var 'variant_fields_00003_00001_00006' order represents '4' with '9217'
-9215 9217 0
c Var 'variant_fields_00003_00001_00006' direct represents '4' with '9218'
9215 -9217 9218 0
-9218 9217 0
-9218 -9215 0
c Var 'variant_fields_00003_00001_00006' order represents '5' with '9219'
-9217 9219 0
c Var 'variant_fields_00003_00001_00006' direct represents '5' with '9220'
9217 -9219 9220 0
-9220 9219 0
-9220 -9217 0
c Var 'variant_fields_00003_00001_00006' order represents '6' with '9221'
-9219 9221 0
c Var 'variant_fields_00003_00001_00006' direct represents '6' with '9222'
9219 -9221 9222 0
-9222 9221 0
-9222 -9219 0
c Var 'variant_fields_00003_00001_00006' order represents '7' with '9223'
-9221 9223 0
c Var 'variant_fields_00003_00001_00006' direct represents '7' with '9224'
9221 -9223 9224 0
-9224 9223 0
-9224 -9221 0
c Var 'variant_fields_00003_00001_00006' order represents '8' with '9225'
-9223 9225 0
c Var 'variant_fields_00003_00001_00006' direct represents '8' with '9226'
9223 -9225 9226 0
-9226 9225 0
-9226 -9223 0
c Var 'variant_fields_00003_00001_00006' direct represents '9' with '-9225'
9212 9214 9216 9218 9220 9222 9224 9226 -9225 0
c Encoding variable: variant_fields_00003_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00007' order represents '1' with '9227'
c Var 'variant_fields_00003_00001_00007' direct represents '1' with '9227'
c Var 'variant_fields_00003_00001_00007' order represents '2' with '9228'
-9227 9228 0
c Var 'variant_fields_00003_00001_00007' direct represents '2' with '9229'
9227 -9228 9229 0
-9229 9228 0
-9229 -9227 0
c Var 'variant_fields_00003_00001_00007' order represents '3' with '9230'
-9228 9230 0
c Var 'variant_fields_00003_00001_00007' direct represents '3' with '9231'
9228 -9230 9231 0
-9231 9230 0
-9231 -9228 0
c Var 'variant_fields_00003_00001_00007' order represents '4' with '9232'
-9230 9232 0
c Var 'variant_fields_00003_00001_00007' direct represents '4' with '9233'
9230 -9232 9233 0
-9233 9232 0
-9233 -9230 0
c Var 'variant_fields_00003_00001_00007' order represents '5' with '9234'
-9232 9234 0
c Var 'variant_fields_00003_00001_00007' direct represents '5' with '9235'
9232 -9234 9235 0
-9235 9234 0
-9235 -9232 0
c Var 'variant_fields_00003_00001_00007' order represents '6' with '9236'
-9234 9236 0
c Var 'variant_fields_00003_00001_00007' direct represents '6' with '9237'
9234 -9236 9237 0
-9237 9236 0
-9237 -9234 0
c Var 'variant_fields_00003_00001_00007' order represents '7' with '9238'
-9236 9238 0
c Var 'variant_fields_00003_00001_00007' direct represents '7' with '9239'
9236 -9238 9239 0
-9239 9238 0
-9239 -9236 0
c Var 'variant_fields_00003_00001_00007' order represents '8' with '9240'
-9238 9240 0
c Var 'variant_fields_00003_00001_00007' direct represents '8' with '9241'
9238 -9240 9241 0
-9241 9240 0
-9241 -9238 0
c Var 'variant_fields_00003_00001_00007' direct represents '9' with '-9240'
9227 9229 9231 9233 9235 9237 9239 9241 -9240 0
c Encoding variable: variant_fields_00003_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00008' order represents '1' with '9242'
c Var 'variant_fields_00003_00001_00008' direct represents '1' with '9242'
c Var 'variant_fields_00003_00001_00008' order represents '2' with '9243'
-9242 9243 0
c Var 'variant_fields_00003_00001_00008' direct represents '2' with '9244'
9242 -9243 9244 0
-9244 9243 0
-9244 -9242 0
c Var 'variant_fields_00003_00001_00008' order represents '3' with '9245'
-9243 9245 0
c Var 'variant_fields_00003_00001_00008' direct represents '3' with '9246'
9243 -9245 9246 0
-9246 9245 0
-9246 -9243 0
c Var 'variant_fields_00003_00001_00008' order represents '4' with '9247'
-9245 9247 0
c Var 'variant_fields_00003_00001_00008' direct represents '4' with '9248'
9245 -9247 9248 0
-9248 9247 0
-9248 -9245 0
c Var 'variant_fields_00003_00001_00008' order represents '5' with '9249'
-9247 9249 0
c Var 'variant_fields_00003_00001_00008' direct represents '5' with '9250'
9247 -9249 9250 0
-9250 9249 0
-9250 -9247 0
c Var 'variant_fields_00003_00001_00008' order represents '6' with '9251'
-9249 9251 0
c Var 'variant_fields_00003_00001_00008' direct represents '6' with '9252'
9249 -9251 9252 0
-9252 9251 0
-9252 -9249 0
c Var 'variant_fields_00003_00001_00008' order represents '7' with '9253'
-9251 9253 0
c Var 'variant_fields_00003_00001_00008' direct represents '7' with '9254'
9251 -9253 9254 0
-9254 9253 0
-9254 -9251 0
c Var 'variant_fields_00003_00001_00008' order represents '8' with '9255'
-9253 9255 0
c Var 'variant_fields_00003_00001_00008' direct represents '8' with '9256'
9253 -9255 9256 0
-9256 9255 0
-9256 -9253 0
c Var 'variant_fields_00003_00001_00008' direct represents '9' with '-9255'
9242 9244 9246 9248 9250 9252 9254 9256 -9255 0
c Encoding variable: variant_fields_00003_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00001_00009' order represents '1' with '9257'
c Var 'variant_fields_00003_00001_00009' direct represents '1' with '9257'
c Var 'variant_fields_00003_00001_00009' order represents '2' with '9258'
-9257 9258 0
c Var 'variant_fields_00003_00001_00009' direct represents '2' with '9259'
9257 -9258 9259 0
-9259 9258 0
-9259 -9257 0
c Var 'variant_fields_00003_00001_00009' order represents '3' with '9260'
-9258 9260 0
c Var 'variant_fields_00003_00001_00009' direct represents '3' with '9261'
9258 -9260 9261 0
-9261 9260 0
-9261 -9258 0
c Var 'variant_fields_00003_00001_00009' order represents '4' with '9262'
-9260 9262 0
c Var 'variant_fields_00003_00001_00009' direct represents '4' with '9263'
9260 -9262 9263 0
-9263 9262 0
-9263 -9260 0
c Var 'variant_fields_00003_00001_00009' order represents '5' with '9264'
-9262 9264 0
c Var 'variant_fields_00003_00001_00009' direct represents '5' with '9265'
9262 -9264 9265 0
-9265 9264 0
-9265 -9262 0
c Var 'variant_fields_00003_00001_00009' order represents '6' with '9266'
-9264 9266 0
c Var 'variant_fields_00003_00001_00009' direct represents '6' with '9267'
9264 -9266 9267 0
-9267 9266 0
-9267 -9264 0
c Var 'variant_fields_00003_00001_00009' order represents '7' with '9268'
-9266 9268 0
c Var 'variant_fields_00003_00001_00009' direct represents '7' with '9269'
9266 -9268 9269 0
-9269 9268 0
-9269 -9266 0
c Var 'variant_fields_00003_00001_00009' order represents '8' with '9270'
-9268 9270 0
c Var 'variant_fields_00003_00001_00009' direct represents '8' with '9271'
9268 -9270 9271 0
-9271 9270 0
-9271 -9268 0
c Var 'variant_fields_00003_00001_00009' direct represents '9' with '-9270'
9257 9259 9261 9263 9265 9267 9269 9271 -9270 0
c Encoding variable: variant_fields_00003_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00001' order represents '1' with '9272'
c Var 'variant_fields_00003_00002_00001' direct represents '1' with '9272'
c Var 'variant_fields_00003_00002_00001' order represents '2' with '9273'
-9272 9273 0
c Var 'variant_fields_00003_00002_00001' direct represents '2' with '9274'
9272 -9273 9274 0
-9274 9273 0
-9274 -9272 0
c Var 'variant_fields_00003_00002_00001' order represents '3' with '9275'
-9273 9275 0
c Var 'variant_fields_00003_00002_00001' direct represents '3' with '9276'
9273 -9275 9276 0
-9276 9275 0
-9276 -9273 0
c Var 'variant_fields_00003_00002_00001' order represents '4' with '9277'
-9275 9277 0
c Var 'variant_fields_00003_00002_00001' direct represents '4' with '9278'
9275 -9277 9278 0
-9278 9277 0
-9278 -9275 0
c Var 'variant_fields_00003_00002_00001' order represents '5' with '9279'
-9277 9279 0
c Var 'variant_fields_00003_00002_00001' direct represents '5' with '9280'
9277 -9279 9280 0
-9280 9279 0
-9280 -9277 0
c Var 'variant_fields_00003_00002_00001' order represents '6' with '9281'
-9279 9281 0
c Var 'variant_fields_00003_00002_00001' direct represents '6' with '9282'
9279 -9281 9282 0
-9282 9281 0
-9282 -9279 0
c Var 'variant_fields_00003_00002_00001' order represents '7' with '9283'
-9281 9283 0
c Var 'variant_fields_00003_00002_00001' direct represents '7' with '9284'
9281 -9283 9284 0
-9284 9283 0
-9284 -9281 0
c Var 'variant_fields_00003_00002_00001' order represents '8' with '9285'
-9283 9285 0
c Var 'variant_fields_00003_00002_00001' direct represents '8' with '9286'
9283 -9285 9286 0
-9286 9285 0
-9286 -9283 0
c Var 'variant_fields_00003_00002_00001' direct represents '9' with '-9285'
9272 9274 9276 9278 9280 9282 9284 9286 -9285 0
c Encoding variable: variant_fields_00003_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00002' order represents '1' with '9287'
c Var 'variant_fields_00003_00002_00002' direct represents '1' with '9287'
c Var 'variant_fields_00003_00002_00002' order represents '2' with '9288'
-9287 9288 0
c Var 'variant_fields_00003_00002_00002' direct represents '2' with '9289'
9287 -9288 9289 0
-9289 9288 0
-9289 -9287 0
c Var 'variant_fields_00003_00002_00002' order represents '3' with '9290'
-9288 9290 0
c Var 'variant_fields_00003_00002_00002' direct represents '3' with '9291'
9288 -9290 9291 0
-9291 9290 0
-9291 -9288 0
c Var 'variant_fields_00003_00002_00002' order represents '4' with '9292'
-9290 9292 0
c Var 'variant_fields_00003_00002_00002' direct represents '4' with '9293'
9290 -9292 9293 0
-9293 9292 0
-9293 -9290 0
c Var 'variant_fields_00003_00002_00002' order represents '5' with '9294'
-9292 9294 0
c Var 'variant_fields_00003_00002_00002' direct represents '5' with '9295'
9292 -9294 9295 0
-9295 9294 0
-9295 -9292 0
c Var 'variant_fields_00003_00002_00002' order represents '6' with '9296'
-9294 9296 0
c Var 'variant_fields_00003_00002_00002' direct represents '6' with '9297'
9294 -9296 9297 0
-9297 9296 0
-9297 -9294 0
c Var 'variant_fields_00003_00002_00002' order represents '7' with '9298'
-9296 9298 0
c Var 'variant_fields_00003_00002_00002' direct represents '7' with '9299'
9296 -9298 9299 0
-9299 9298 0
-9299 -9296 0
c Var 'variant_fields_00003_00002_00002' order represents '8' with '9300'
-9298 9300 0
c Var 'variant_fields_00003_00002_00002' direct represents '8' with '9301'
9298 -9300 9301 0
-9301 9300 0
-9301 -9298 0
c Var 'variant_fields_00003_00002_00002' direct represents '9' with '-9300'
9287 9289 9291 9293 9295 9297 9299 9301 -9300 0
c Encoding variable: variant_fields_00003_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00003' order represents '1' with '9302'
c Var 'variant_fields_00003_00002_00003' direct represents '1' with '9302'
c Var 'variant_fields_00003_00002_00003' order represents '2' with '9303'
-9302 9303 0
c Var 'variant_fields_00003_00002_00003' direct represents '2' with '9304'
9302 -9303 9304 0
-9304 9303 0
-9304 -9302 0
c Var 'variant_fields_00003_00002_00003' order represents '3' with '9305'
-9303 9305 0
c Var 'variant_fields_00003_00002_00003' direct represents '3' with '9306'
9303 -9305 9306 0
-9306 9305 0
-9306 -9303 0
c Var 'variant_fields_00003_00002_00003' order represents '4' with '9307'
-9305 9307 0
c Var 'variant_fields_00003_00002_00003' direct represents '4' with '9308'
9305 -9307 9308 0
-9308 9307 0
-9308 -9305 0
c Var 'variant_fields_00003_00002_00003' order represents '5' with '9309'
-9307 9309 0
c Var 'variant_fields_00003_00002_00003' direct represents '5' with '9310'
9307 -9309 9310 0
-9310 9309 0
-9310 -9307 0
c Var 'variant_fields_00003_00002_00003' order represents '6' with '9311'
-9309 9311 0
c Var 'variant_fields_00003_00002_00003' direct represents '6' with '9312'
9309 -9311 9312 0
-9312 9311 0
-9312 -9309 0
c Var 'variant_fields_00003_00002_00003' order represents '7' with '9313'
-9311 9313 0
c Var 'variant_fields_00003_00002_00003' direct represents '7' with '9314'
9311 -9313 9314 0
-9314 9313 0
-9314 -9311 0
c Var 'variant_fields_00003_00002_00003' order represents '8' with '9315'
-9313 9315 0
c Var 'variant_fields_00003_00002_00003' direct represents '8' with '9316'
9313 -9315 9316 0
-9316 9315 0
-9316 -9313 0
c Var 'variant_fields_00003_00002_00003' direct represents '9' with '-9315'
9302 9304 9306 9308 9310 9312 9314 9316 -9315 0
c Encoding variable: variant_fields_00003_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00004' order represents '1' with '9317'
c Var 'variant_fields_00003_00002_00004' direct represents '1' with '9317'
c Var 'variant_fields_00003_00002_00004' order represents '2' with '9318'
-9317 9318 0
c Var 'variant_fields_00003_00002_00004' direct represents '2' with '9319'
9317 -9318 9319 0
-9319 9318 0
-9319 -9317 0
c Var 'variant_fields_00003_00002_00004' order represents '3' with '9320'
-9318 9320 0
c Var 'variant_fields_00003_00002_00004' direct represents '3' with '9321'
9318 -9320 9321 0
-9321 9320 0
-9321 -9318 0
c Var 'variant_fields_00003_00002_00004' order represents '4' with '9322'
-9320 9322 0
c Var 'variant_fields_00003_00002_00004' direct represents '4' with '9323'
9320 -9322 9323 0
-9323 9322 0
-9323 -9320 0
c Var 'variant_fields_00003_00002_00004' order represents '5' with '9324'
-9322 9324 0
c Var 'variant_fields_00003_00002_00004' direct represents '5' with '9325'
9322 -9324 9325 0
-9325 9324 0
-9325 -9322 0
c Var 'variant_fields_00003_00002_00004' order represents '6' with '9326'
-9324 9326 0
c Var 'variant_fields_00003_00002_00004' direct represents '6' with '9327'
9324 -9326 9327 0
-9327 9326 0
-9327 -9324 0
c Var 'variant_fields_00003_00002_00004' order represents '7' with '9328'
-9326 9328 0
c Var 'variant_fields_00003_00002_00004' direct represents '7' with '9329'
9326 -9328 9329 0
-9329 9328 0
-9329 -9326 0
c Var 'variant_fields_00003_00002_00004' order represents '8' with '9330'
-9328 9330 0
c Var 'variant_fields_00003_00002_00004' direct represents '8' with '9331'
9328 -9330 9331 0
-9331 9330 0
-9331 -9328 0
c Var 'variant_fields_00003_00002_00004' direct represents '9' with '-9330'
9317 9319 9321 9323 9325 9327 9329 9331 -9330 0
c Encoding variable: variant_fields_00003_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00005' order represents '1' with '9332'
c Var 'variant_fields_00003_00002_00005' direct represents '1' with '9332'
c Var 'variant_fields_00003_00002_00005' order represents '2' with '9333'
-9332 9333 0
c Var 'variant_fields_00003_00002_00005' direct represents '2' with '9334'
9332 -9333 9334 0
-9334 9333 0
-9334 -9332 0
c Var 'variant_fields_00003_00002_00005' order represents '3' with '9335'
-9333 9335 0
c Var 'variant_fields_00003_00002_00005' direct represents '3' with '9336'
9333 -9335 9336 0
-9336 9335 0
-9336 -9333 0
c Var 'variant_fields_00003_00002_00005' order represents '4' with '9337'
-9335 9337 0
c Var 'variant_fields_00003_00002_00005' direct represents '4' with '9338'
9335 -9337 9338 0
-9338 9337 0
-9338 -9335 0
c Var 'variant_fields_00003_00002_00005' order represents '5' with '9339'
-9337 9339 0
c Var 'variant_fields_00003_00002_00005' direct represents '5' with '9340'
9337 -9339 9340 0
-9340 9339 0
-9340 -9337 0
c Var 'variant_fields_00003_00002_00005' order represents '6' with '9341'
-9339 9341 0
c Var 'variant_fields_00003_00002_00005' direct represents '6' with '9342'
9339 -9341 9342 0
-9342 9341 0
-9342 -9339 0
c Var 'variant_fields_00003_00002_00005' order represents '7' with '9343'
-9341 9343 0
c Var 'variant_fields_00003_00002_00005' direct represents '7' with '9344'
9341 -9343 9344 0
-9344 9343 0
-9344 -9341 0
c Var 'variant_fields_00003_00002_00005' order represents '8' with '9345'
-9343 9345 0
c Var 'variant_fields_00003_00002_00005' direct represents '8' with '9346'
9343 -9345 9346 0
-9346 9345 0
-9346 -9343 0
c Var 'variant_fields_00003_00002_00005' direct represents '9' with '-9345'
9332 9334 9336 9338 9340 9342 9344 9346 -9345 0
c Encoding variable: variant_fields_00003_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00006' order represents '1' with '9347'
c Var 'variant_fields_00003_00002_00006' direct represents '1' with '9347'
c Var 'variant_fields_00003_00002_00006' order represents '2' with '9348'
-9347 9348 0
c Var 'variant_fields_00003_00002_00006' direct represents '2' with '9349'
9347 -9348 9349 0
-9349 9348 0
-9349 -9347 0
c Var 'variant_fields_00003_00002_00006' order represents '3' with '9350'
-9348 9350 0
c Var 'variant_fields_00003_00002_00006' direct represents '3' with '9351'
9348 -9350 9351 0
-9351 9350 0
-9351 -9348 0
c Var 'variant_fields_00003_00002_00006' order represents '4' with '9352'
-9350 9352 0
c Var 'variant_fields_00003_00002_00006' direct represents '4' with '9353'
9350 -9352 9353 0
-9353 9352 0
-9353 -9350 0
c Var 'variant_fields_00003_00002_00006' order represents '5' with '9354'
-9352 9354 0
c Var 'variant_fields_00003_00002_00006' direct represents '5' with '9355'
9352 -9354 9355 0
-9355 9354 0
-9355 -9352 0
c Var 'variant_fields_00003_00002_00006' order represents '6' with '9356'
-9354 9356 0
c Var 'variant_fields_00003_00002_00006' direct represents '6' with '9357'
9354 -9356 9357 0
-9357 9356 0
-9357 -9354 0
c Var 'variant_fields_00003_00002_00006' order represents '7' with '9358'
-9356 9358 0
c Var 'variant_fields_00003_00002_00006' direct represents '7' with '9359'
9356 -9358 9359 0
-9359 9358 0
-9359 -9356 0
c Var 'variant_fields_00003_00002_00006' order represents '8' with '9360'
-9358 9360 0
c Var 'variant_fields_00003_00002_00006' direct represents '8' with '9361'
9358 -9360 9361 0
-9361 9360 0
-9361 -9358 0
c Var 'variant_fields_00003_00002_00006' direct represents '9' with '-9360'
9347 9349 9351 9353 9355 9357 9359 9361 -9360 0
c Encoding variable: variant_fields_00003_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00007' order represents '1' with '9362'
c Var 'variant_fields_00003_00002_00007' direct represents '1' with '9362'
c Var 'variant_fields_00003_00002_00007' order represents '2' with '9363'
-9362 9363 0
c Var 'variant_fields_00003_00002_00007' direct represents '2' with '9364'
9362 -9363 9364 0
-9364 9363 0
-9364 -9362 0
c Var 'variant_fields_00003_00002_00007' order represents '3' with '9365'
-9363 9365 0
c Var 'variant_fields_00003_00002_00007' direct represents '3' with '9366'
9363 -9365 9366 0
-9366 9365 0
-9366 -9363 0
c Var 'variant_fields_00003_00002_00007' order represents '4' with '9367'
-9365 9367 0
c Var 'variant_fields_00003_00002_00007' direct represents '4' with '9368'
9365 -9367 9368 0
-9368 9367 0
-9368 -9365 0
c Var 'variant_fields_00003_00002_00007' order represents '5' with '9369'
-9367 9369 0
c Var 'variant_fields_00003_00002_00007' direct represents '5' with '9370'
9367 -9369 9370 0
-9370 9369 0
-9370 -9367 0
c Var 'variant_fields_00003_00002_00007' order represents '6' with '9371'
-9369 9371 0
c Var 'variant_fields_00003_00002_00007' direct represents '6' with '9372'
9369 -9371 9372 0
-9372 9371 0
-9372 -9369 0
c Var 'variant_fields_00003_00002_00007' order represents '7' with '9373'
-9371 9373 0
c Var 'variant_fields_00003_00002_00007' direct represents '7' with '9374'
9371 -9373 9374 0
-9374 9373 0
-9374 -9371 0
c Var 'variant_fields_00003_00002_00007' order represents '8' with '9375'
-9373 9375 0
c Var 'variant_fields_00003_00002_00007' direct represents '8' with '9376'
9373 -9375 9376 0
-9376 9375 0
-9376 -9373 0
c Var 'variant_fields_00003_00002_00007' direct represents '9' with '-9375'
9362 9364 9366 9368 9370 9372 9374 9376 -9375 0
c Encoding variable: variant_fields_00003_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00008' order represents '1' with '9377'
c Var 'variant_fields_00003_00002_00008' direct represents '1' with '9377'
c Var 'variant_fields_00003_00002_00008' order represents '2' with '9378'
-9377 9378 0
c Var 'variant_fields_00003_00002_00008' direct represents '2' with '9379'
9377 -9378 9379 0
-9379 9378 0
-9379 -9377 0
c Var 'variant_fields_00003_00002_00008' order represents '3' with '9380'
-9378 9380 0
c Var 'variant_fields_00003_00002_00008' direct represents '3' with '9381'
9378 -9380 9381 0
-9381 9380 0
-9381 -9378 0
c Var 'variant_fields_00003_00002_00008' order represents '4' with '9382'
-9380 9382 0
c Var 'variant_fields_00003_00002_00008' direct represents '4' with '9383'
9380 -9382 9383 0
-9383 9382 0
-9383 -9380 0
c Var 'variant_fields_00003_00002_00008' order represents '5' with '9384'
-9382 9384 0
c Var 'variant_fields_00003_00002_00008' direct represents '5' with '9385'
9382 -9384 9385 0
-9385 9384 0
-9385 -9382 0
c Var 'variant_fields_00003_00002_00008' order represents '6' with '9386'
-9384 9386 0
c Var 'variant_fields_00003_00002_00008' direct represents '6' with '9387'
9384 -9386 9387 0
-9387 9386 0
-9387 -9384 0
c Var 'variant_fields_00003_00002_00008' order represents '7' with '9388'
-9386 9388 0
c Var 'variant_fields_00003_00002_00008' direct represents '7' with '9389'
9386 -9388 9389 0
-9389 9388 0
-9389 -9386 0
c Var 'variant_fields_00003_00002_00008' order represents '8' with '9390'
-9388 9390 0
c Var 'variant_fields_00003_00002_00008' direct represents '8' with '9391'
9388 -9390 9391 0
-9391 9390 0
-9391 -9388 0
c Var 'variant_fields_00003_00002_00008' direct represents '9' with '-9390'
9377 9379 9381 9383 9385 9387 9389 9391 -9390 0
c Encoding variable: variant_fields_00003_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00009' order represents '1' with '9392'
c Var 'variant_fields_00003_00002_00009' direct represents '1' with '9392'
c Var 'variant_fields_00003_00002_00009' order represents '2' with '9393'
-9392 9393 0
c Var 'variant_fields_00003_00002_00009' direct represents '2' with '9394'
9392 -9393 9394 0
-9394 9393 0
-9394 -9392 0
c Var 'variant_fields_00003_00002_00009' order represents '3' with '9395'
-9393 9395 0
c Var 'variant_fields_00003_00002_00009' direct represents '3' with '9396'
9393 -9395 9396 0
-9396 9395 0
-9396 -9393 0
c Var 'variant_fields_00003_00002_00009' order represents '4' with '9397'
-9395 9397 0
c Var 'variant_fields_00003_00002_00009' direct represents '4' with '9398'
9395 -9397 9398 0
-9398 9397 0
-9398 -9395 0
c Var 'variant_fields_00003_00002_00009' order represents '5' with '9399'
-9397 9399 0
c Var 'variant_fields_00003_00002_00009' direct represents '5' with '9400'
9397 -9399 9400 0
-9400 9399 0
-9400 -9397 0
c Var 'variant_fields_00003_00002_00009' order represents '6' with '9401'
-9399 9401 0
c Var 'variant_fields_00003_00002_00009' direct represents '6' with '9402'
9399 -9401 9402 0
-9402 9401 0
-9402 -9399 0
c Var 'variant_fields_00003_00002_00009' order represents '7' with '9403'
-9401 9403 0
c Var 'variant_fields_00003_00002_00009' direct represents '7' with '9404'
9401 -9403 9404 0
-9404 9403 0
-9404 -9401 0
c Var 'variant_fields_00003_00002_00009' order represents '8' with '9405'
-9403 9405 0
c Var 'variant_fields_00003_00002_00009' direct represents '8' with '9406'
9403 -9405 9406 0
-9406 9405 0
-9406 -9403 0
c Var 'variant_fields_00003_00002_00009' direct represents '9' with '-9405'
9392 9394 9396 9398 9400 9402 9404 9406 -9405 0
c Encoding variable: variant_fields_00003_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00001' order represents '1' with '9407'
c Var 'variant_fields_00003_00003_00001' direct represents '1' with '9407'
c Var 'variant_fields_00003_00003_00001' order represents '2' with '9408'
-9407 9408 0
c Var 'variant_fields_00003_00003_00001' direct represents '2' with '9409'
9407 -9408 9409 0
-9409 9408 0
-9409 -9407 0
c Var 'variant_fields_00003_00003_00001' order represents '3' with '9410'
-9408 9410 0
c Var 'variant_fields_00003_00003_00001' direct represents '3' with '9411'
9408 -9410 9411 0
-9411 9410 0
-9411 -9408 0
c Var 'variant_fields_00003_00003_00001' order represents '4' with '9412'
-9410 9412 0
c Var 'variant_fields_00003_00003_00001' direct represents '4' with '9413'
9410 -9412 9413 0
-9413 9412 0
-9413 -9410 0
c Var 'variant_fields_00003_00003_00001' order represents '5' with '9414'
-9412 9414 0
c Var 'variant_fields_00003_00003_00001' direct represents '5' with '9415'
9412 -9414 9415 0
-9415 9414 0
-9415 -9412 0
c Var 'variant_fields_00003_00003_00001' order represents '6' with '9416'
-9414 9416 0
c Var 'variant_fields_00003_00003_00001' direct represents '6' with '9417'
9414 -9416 9417 0
-9417 9416 0
-9417 -9414 0
c Var 'variant_fields_00003_00003_00001' order represents '7' with '9418'
-9416 9418 0
c Var 'variant_fields_00003_00003_00001' direct represents '7' with '9419'
9416 -9418 9419 0
-9419 9418 0
-9419 -9416 0
c Var 'variant_fields_00003_00003_00001' order represents '8' with '9420'
-9418 9420 0
c Var 'variant_fields_00003_00003_00001' direct represents '8' with '9421'
9418 -9420 9421 0
-9421 9420 0
-9421 -9418 0
c Var 'variant_fields_00003_00003_00001' direct represents '9' with '-9420'
9407 9409 9411 9413 9415 9417 9419 9421 -9420 0
c Encoding variable: variant_fields_00003_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00002' order represents '1' with '9422'
c Var 'variant_fields_00003_00003_00002' direct represents '1' with '9422'
c Var 'variant_fields_00003_00003_00002' order represents '2' with '9423'
-9422 9423 0
c Var 'variant_fields_00003_00003_00002' direct represents '2' with '9424'
9422 -9423 9424 0
-9424 9423 0
-9424 -9422 0
c Var 'variant_fields_00003_00003_00002' order represents '3' with '9425'
-9423 9425 0
c Var 'variant_fields_00003_00003_00002' direct represents '3' with '9426'
9423 -9425 9426 0
-9426 9425 0
-9426 -9423 0
c Var 'variant_fields_00003_00003_00002' order represents '4' with '9427'
-9425 9427 0
c Var 'variant_fields_00003_00003_00002' direct represents '4' with '9428'
9425 -9427 9428 0
-9428 9427 0
-9428 -9425 0
c Var 'variant_fields_00003_00003_00002' order represents '5' with '9429'
-9427 9429 0
c Var 'variant_fields_00003_00003_00002' direct represents '5' with '9430'
9427 -9429 9430 0
-9430 9429 0
-9430 -9427 0
c Var 'variant_fields_00003_00003_00002' order represents '6' with '9431'
-9429 9431 0
c Var 'variant_fields_00003_00003_00002' direct represents '6' with '9432'
9429 -9431 9432 0
-9432 9431 0
-9432 -9429 0
c Var 'variant_fields_00003_00003_00002' order represents '7' with '9433'
-9431 9433 0
c Var 'variant_fields_00003_00003_00002' direct represents '7' with '9434'
9431 -9433 9434 0
-9434 9433 0
-9434 -9431 0
c Var 'variant_fields_00003_00003_00002' order represents '8' with '9435'
-9433 9435 0
c Var 'variant_fields_00003_00003_00002' direct represents '8' with '9436'
9433 -9435 9436 0
-9436 9435 0
-9436 -9433 0
c Var 'variant_fields_00003_00003_00002' direct represents '9' with '-9435'
9422 9424 9426 9428 9430 9432 9434 9436 -9435 0
c Encoding variable: variant_fields_00003_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00003' order represents '1' with '9437'
c Var 'variant_fields_00003_00003_00003' direct represents '1' with '9437'
c Var 'variant_fields_00003_00003_00003' order represents '2' with '9438'
-9437 9438 0
c Var 'variant_fields_00003_00003_00003' direct represents '2' with '9439'
9437 -9438 9439 0
-9439 9438 0
-9439 -9437 0
c Var 'variant_fields_00003_00003_00003' order represents '3' with '9440'
-9438 9440 0
c Var 'variant_fields_00003_00003_00003' direct represents '3' with '9441'
9438 -9440 9441 0
-9441 9440 0
-9441 -9438 0
c Var 'variant_fields_00003_00003_00003' order represents '4' with '9442'
-9440 9442 0
c Var 'variant_fields_00003_00003_00003' direct represents '4' with '9443'
9440 -9442 9443 0
-9443 9442 0
-9443 -9440 0
c Var 'variant_fields_00003_00003_00003' order represents '5' with '9444'
-9442 9444 0
c Var 'variant_fields_00003_00003_00003' direct represents '5' with '9445'
9442 -9444 9445 0
-9445 9444 0
-9445 -9442 0
c Var 'variant_fields_00003_00003_00003' order represents '6' with '9446'
-9444 9446 0
c Var 'variant_fields_00003_00003_00003' direct represents '6' with '9447'
9444 -9446 9447 0
-9447 9446 0
-9447 -9444 0
c Var 'variant_fields_00003_00003_00003' order represents '7' with '9448'
-9446 9448 0
c Var 'variant_fields_00003_00003_00003' direct represents '7' with '9449'
9446 -9448 9449 0
-9449 9448 0
-9449 -9446 0
c Var 'variant_fields_00003_00003_00003' order represents '8' with '9450'
-9448 9450 0
c Var 'variant_fields_00003_00003_00003' direct represents '8' with '9451'
9448 -9450 9451 0
-9451 9450 0
-9451 -9448 0
c Var 'variant_fields_00003_00003_00003' direct represents '9' with '-9450'
9437 9439 9441 9443 9445 9447 9449 9451 -9450 0
c Encoding variable: variant_fields_00003_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00004' order represents '1' with '9452'
c Var 'variant_fields_00003_00003_00004' direct represents '1' with '9452'
c Var 'variant_fields_00003_00003_00004' order represents '2' with '9453'
-9452 9453 0
c Var 'variant_fields_00003_00003_00004' direct represents '2' with '9454'
9452 -9453 9454 0
-9454 9453 0
-9454 -9452 0
c Var 'variant_fields_00003_00003_00004' order represents '3' with '9455'
-9453 9455 0
c Var 'variant_fields_00003_00003_00004' direct represents '3' with '9456'
9453 -9455 9456 0
-9456 9455 0
-9456 -9453 0
c Var 'variant_fields_00003_00003_00004' order represents '4' with '9457'
-9455 9457 0
c Var 'variant_fields_00003_00003_00004' direct represents '4' with '9458'
9455 -9457 9458 0
-9458 9457 0
-9458 -9455 0
c Var 'variant_fields_00003_00003_00004' order represents '5' with '9459'
-9457 9459 0
c Var 'variant_fields_00003_00003_00004' direct represents '5' with '9460'
9457 -9459 9460 0
-9460 9459 0
-9460 -9457 0
c Var 'variant_fields_00003_00003_00004' order represents '6' with '9461'
-9459 9461 0
c Var 'variant_fields_00003_00003_00004' direct represents '6' with '9462'
9459 -9461 9462 0
-9462 9461 0
-9462 -9459 0
c Var 'variant_fields_00003_00003_00004' order represents '7' with '9463'
-9461 9463 0
c Var 'variant_fields_00003_00003_00004' direct represents '7' with '9464'
9461 -9463 9464 0
-9464 9463 0
-9464 -9461 0
c Var 'variant_fields_00003_00003_00004' order represents '8' with '9465'
-9463 9465 0
c Var 'variant_fields_00003_00003_00004' direct represents '8' with '9466'
9463 -9465 9466 0
-9466 9465 0
-9466 -9463 0
c Var 'variant_fields_00003_00003_00004' direct represents '9' with '-9465'
9452 9454 9456 9458 9460 9462 9464 9466 -9465 0
c Encoding variable: variant_fields_00003_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00005' order represents '1' with '9467'
c Var 'variant_fields_00003_00003_00005' direct represents '1' with '9467'
c Var 'variant_fields_00003_00003_00005' order represents '2' with '9468'
-9467 9468 0
c Var 'variant_fields_00003_00003_00005' direct represents '2' with '9469'
9467 -9468 9469 0
-9469 9468 0
-9469 -9467 0
c Var 'variant_fields_00003_00003_00005' order represents '3' with '9470'
-9468 9470 0
c Var 'variant_fields_00003_00003_00005' direct represents '3' with '9471'
9468 -9470 9471 0
-9471 9470 0
-9471 -9468 0
c Var 'variant_fields_00003_00003_00005' order represents '4' with '9472'
-9470 9472 0
c Var 'variant_fields_00003_00003_00005' direct represents '4' with '9473'
9470 -9472 9473 0
-9473 9472 0
-9473 -9470 0
c Var 'variant_fields_00003_00003_00005' order represents '5' with '9474'
-9472 9474 0
c Var 'variant_fields_00003_00003_00005' direct represents '5' with '9475'
9472 -9474 9475 0
-9475 9474 0
-9475 -9472 0
c Var 'variant_fields_00003_00003_00005' order represents '6' with '9476'
-9474 9476 0
c Var 'variant_fields_00003_00003_00005' direct represents '6' with '9477'
9474 -9476 9477 0
-9477 9476 0
-9477 -9474 0
c Var 'variant_fields_00003_00003_00005' order represents '7' with '9478'
-9476 9478 0
c Var 'variant_fields_00003_00003_00005' direct represents '7' with '9479'
9476 -9478 9479 0
-9479 9478 0
-9479 -9476 0
c Var 'variant_fields_00003_00003_00005' order represents '8' with '9480'
-9478 9480 0
c Var 'variant_fields_00003_00003_00005' direct represents '8' with '9481'
9478 -9480 9481 0
-9481 9480 0
-9481 -9478 0
c Var 'variant_fields_00003_00003_00005' direct represents '9' with '-9480'
9467 9469 9471 9473 9475 9477 9479 9481 -9480 0
c Encoding variable: variant_fields_00003_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00006' order represents '1' with '9482'
c Var 'variant_fields_00003_00003_00006' direct represents '1' with '9482'
c Var 'variant_fields_00003_00003_00006' order represents '2' with '9483'
-9482 9483 0
c Var 'variant_fields_00003_00003_00006' direct represents '2' with '9484'
9482 -9483 9484 0
-9484 9483 0
-9484 -9482 0
c Var 'variant_fields_00003_00003_00006' order represents '3' with '9485'
-9483 9485 0
c Var 'variant_fields_00003_00003_00006' direct represents '3' with '9486'
9483 -9485 9486 0
-9486 9485 0
-9486 -9483 0
c Var 'variant_fields_00003_00003_00006' order represents '4' with '9487'
-9485 9487 0
c Var 'variant_fields_00003_00003_00006' direct represents '4' with '9488'
9485 -9487 9488 0
-9488 9487 0
-9488 -9485 0
c Var 'variant_fields_00003_00003_00006' order represents '5' with '9489'
-9487 9489 0
c Var 'variant_fields_00003_00003_00006' direct represents '5' with '9490'
9487 -9489 9490 0
-9490 9489 0
-9490 -9487 0
c Var 'variant_fields_00003_00003_00006' order represents '6' with '9491'
-9489 9491 0
c Var 'variant_fields_00003_00003_00006' direct represents '6' with '9492'
9489 -9491 9492 0
-9492 9491 0
-9492 -9489 0
c Var 'variant_fields_00003_00003_00006' order represents '7' with '9493'
-9491 9493 0
c Var 'variant_fields_00003_00003_00006' direct represents '7' with '9494'
9491 -9493 9494 0
-9494 9493 0
-9494 -9491 0
c Var 'variant_fields_00003_00003_00006' order represents '8' with '9495'
-9493 9495 0
c Var 'variant_fields_00003_00003_00006' direct represents '8' with '9496'
9493 -9495 9496 0
-9496 9495 0
-9496 -9493 0
c Var 'variant_fields_00003_00003_00006' direct represents '9' with '-9495'
9482 9484 9486 9488 9490 9492 9494 9496 -9495 0
c Encoding variable: variant_fields_00003_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00007' order represents '1' with '9497'
c Var 'variant_fields_00003_00003_00007' direct represents '1' with '9497'
c Var 'variant_fields_00003_00003_00007' order represents '2' with '9498'
-9497 9498 0
c Var 'variant_fields_00003_00003_00007' direct represents '2' with '9499'
9497 -9498 9499 0
-9499 9498 0
-9499 -9497 0
c Var 'variant_fields_00003_00003_00007' order represents '3' with '9500'
-9498 9500 0
c Var 'variant_fields_00003_00003_00007' direct represents '3' with '9501'
9498 -9500 9501 0
-9501 9500 0
-9501 -9498 0
c Var 'variant_fields_00003_00003_00007' order represents '4' with '9502'
-9500 9502 0
c Var 'variant_fields_00003_00003_00007' direct represents '4' with '9503'
9500 -9502 9503 0
-9503 9502 0
-9503 -9500 0
c Var 'variant_fields_00003_00003_00007' order represents '5' with '9504'
-9502 9504 0
c Var 'variant_fields_00003_00003_00007' direct represents '5' with '9505'
9502 -9504 9505 0
-9505 9504 0
-9505 -9502 0
c Var 'variant_fields_00003_00003_00007' order represents '6' with '9506'
-9504 9506 0
c Var 'variant_fields_00003_00003_00007' direct represents '6' with '9507'
9504 -9506 9507 0
-9507 9506 0
-9507 -9504 0
c Var 'variant_fields_00003_00003_00007' order represents '7' with '9508'
-9506 9508 0
c Var 'variant_fields_00003_00003_00007' direct represents '7' with '9509'
9506 -9508 9509 0
-9509 9508 0
-9509 -9506 0
c Var 'variant_fields_00003_00003_00007' order represents '8' with '9510'
-9508 9510 0
c Var 'variant_fields_00003_00003_00007' direct represents '8' with '9511'
9508 -9510 9511 0
-9511 9510 0
-9511 -9508 0
c Var 'variant_fields_00003_00003_00007' direct represents '9' with '-9510'
9497 9499 9501 9503 9505 9507 9509 9511 -9510 0
c Encoding variable: variant_fields_00003_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00008' order represents '1' with '9512'
c Var 'variant_fields_00003_00003_00008' direct represents '1' with '9512'
c Var 'variant_fields_00003_00003_00008' order represents '2' with '9513'
-9512 9513 0
c Var 'variant_fields_00003_00003_00008' direct represents '2' with '9514'
9512 -9513 9514 0
-9514 9513 0
-9514 -9512 0
c Var 'variant_fields_00003_00003_00008' order represents '3' with '9515'
-9513 9515 0
c Var 'variant_fields_00003_00003_00008' direct represents '3' with '9516'
9513 -9515 9516 0
-9516 9515 0
-9516 -9513 0
c Var 'variant_fields_00003_00003_00008' order represents '4' with '9517'
-9515 9517 0
c Var 'variant_fields_00003_00003_00008' direct represents '4' with '9518'
9515 -9517 9518 0
-9518 9517 0
-9518 -9515 0
c Var 'variant_fields_00003_00003_00008' order represents '5' with '9519'
-9517 9519 0
c Var 'variant_fields_00003_00003_00008' direct represents '5' with '9520'
9517 -9519 9520 0
-9520 9519 0
-9520 -9517 0
c Var 'variant_fields_00003_00003_00008' order represents '6' with '9521'
-9519 9521 0
c Var 'variant_fields_00003_00003_00008' direct represents '6' with '9522'
9519 -9521 9522 0
-9522 9521 0
-9522 -9519 0
c Var 'variant_fields_00003_00003_00008' order represents '7' with '9523'
-9521 9523 0
c Var 'variant_fields_00003_00003_00008' direct represents '7' with '9524'
9521 -9523 9524 0
-9524 9523 0
-9524 -9521 0
c Var 'variant_fields_00003_00003_00008' order represents '8' with '9525'
-9523 9525 0
c Var 'variant_fields_00003_00003_00008' direct represents '8' with '9526'
9523 -9525 9526 0
-9526 9525 0
-9526 -9523 0
c Var 'variant_fields_00003_00003_00008' direct represents '9' with '-9525'
9512 9514 9516 9518 9520 9522 9524 9526 -9525 0
c Encoding variable: variant_fields_00003_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00003_00009' order represents '1' with '9527'
c Var 'variant_fields_00003_00003_00009' direct represents '1' with '9527'
c Var 'variant_fields_00003_00003_00009' order represents '2' with '9528'
-9527 9528 0
c Var 'variant_fields_00003_00003_00009' direct represents '2' with '9529'
9527 -9528 9529 0
-9529 9528 0
-9529 -9527 0
c Var 'variant_fields_00003_00003_00009' order represents '3' with '9530'
-9528 9530 0
c Var 'variant_fields_00003_00003_00009' direct represents '3' with '9531'
9528 -9530 9531 0
-9531 9530 0
-9531 -9528 0
c Var 'variant_fields_00003_00003_00009' order represents '4' with '9532'
-9530 9532 0
c Var 'variant_fields_00003_00003_00009' direct represents '4' with '9533'
9530 -9532 9533 0
-9533 9532 0
-9533 -9530 0
c Var 'variant_fields_00003_00003_00009' order represents '5' with '9534'
-9532 9534 0
c Var 'variant_fields_00003_00003_00009' direct represents '5' with '9535'
9532 -9534 9535 0
-9535 9534 0
-9535 -9532 0
c Var 'variant_fields_00003_00003_00009' order represents '6' with '9536'
-9534 9536 0
c Var 'variant_fields_00003_00003_00009' direct represents '6' with '9537'
9534 -9536 9537 0
-9537 9536 0
-9537 -9534 0
c Var 'variant_fields_00003_00003_00009' order represents '7' with '9538'
-9536 9538 0
c Var 'variant_fields_00003_00003_00009' direct represents '7' with '9539'
9536 -9538 9539 0
-9539 9538 0
-9539 -9536 0
c Var 'variant_fields_00003_00003_00009' order represents '8' with '9540'
-9538 9540 0
c Var 'variant_fields_00003_00003_00009' direct represents '8' with '9541'
9538 -9540 9541 0
-9541 9540 0
-9541 -9538 0
c Var 'variant_fields_00003_00003_00009' direct represents '9' with '-9540'
9527 9529 9531 9533 9535 9537 9539 9541 -9540 0
c Encoding variable: variant_fields_00003_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00001' order represents '1' with '9542'
c Var 'variant_fields_00003_00004_00001' direct represents '1' with '9542'
c Var 'variant_fields_00003_00004_00001' order represents '2' with '9543'
-9542 9543 0
c Var 'variant_fields_00003_00004_00001' direct represents '2' with '9544'
9542 -9543 9544 0
-9544 9543 0
-9544 -9542 0
c Var 'variant_fields_00003_00004_00001' order represents '3' with '9545'
-9543 9545 0
c Var 'variant_fields_00003_00004_00001' direct represents '3' with '9546'
9543 -9545 9546 0
-9546 9545 0
-9546 -9543 0
c Var 'variant_fields_00003_00004_00001' order represents '4' with '9547'
-9545 9547 0
c Var 'variant_fields_00003_00004_00001' direct represents '4' with '9548'
9545 -9547 9548 0
-9548 9547 0
-9548 -9545 0
c Var 'variant_fields_00003_00004_00001' order represents '5' with '9549'
-9547 9549 0
c Var 'variant_fields_00003_00004_00001' direct represents '5' with '9550'
9547 -9549 9550 0
-9550 9549 0
-9550 -9547 0
c Var 'variant_fields_00003_00004_00001' order represents '6' with '9551'
-9549 9551 0
c Var 'variant_fields_00003_00004_00001' direct represents '6' with '9552'
9549 -9551 9552 0
-9552 9551 0
-9552 -9549 0
c Var 'variant_fields_00003_00004_00001' order represents '7' with '9553'
-9551 9553 0
c Var 'variant_fields_00003_00004_00001' direct represents '7' with '9554'
9551 -9553 9554 0
-9554 9553 0
-9554 -9551 0
c Var 'variant_fields_00003_00004_00001' order represents '8' with '9555'
-9553 9555 0
c Var 'variant_fields_00003_00004_00001' direct represents '8' with '9556'
9553 -9555 9556 0
-9556 9555 0
-9556 -9553 0
c Var 'variant_fields_00003_00004_00001' direct represents '9' with '-9555'
9542 9544 9546 9548 9550 9552 9554 9556 -9555 0
c Encoding variable: variant_fields_00003_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00002' order represents '1' with '9557'
c Var 'variant_fields_00003_00004_00002' direct represents '1' with '9557'
c Var 'variant_fields_00003_00004_00002' order represents '2' with '9558'
-9557 9558 0
c Var 'variant_fields_00003_00004_00002' direct represents '2' with '9559'
9557 -9558 9559 0
-9559 9558 0
-9559 -9557 0
c Var 'variant_fields_00003_00004_00002' order represents '3' with '9560'
-9558 9560 0
c Var 'variant_fields_00003_00004_00002' direct represents '3' with '9561'
9558 -9560 9561 0
-9561 9560 0
-9561 -9558 0
c Var 'variant_fields_00003_00004_00002' order represents '4' with '9562'
-9560 9562 0
c Var 'variant_fields_00003_00004_00002' direct represents '4' with '9563'
9560 -9562 9563 0
-9563 9562 0
-9563 -9560 0
c Var 'variant_fields_00003_00004_00002' order represents '5' with '9564'
-9562 9564 0
c Var 'variant_fields_00003_00004_00002' direct represents '5' with '9565'
9562 -9564 9565 0
-9565 9564 0
-9565 -9562 0
c Var 'variant_fields_00003_00004_00002' order represents '6' with '9566'
-9564 9566 0
c Var 'variant_fields_00003_00004_00002' direct represents '6' with '9567'
9564 -9566 9567 0
-9567 9566 0
-9567 -9564 0
c Var 'variant_fields_00003_00004_00002' order represents '7' with '9568'
-9566 9568 0
c Var 'variant_fields_00003_00004_00002' direct represents '7' with '9569'
9566 -9568 9569 0
-9569 9568 0
-9569 -9566 0
c Var 'variant_fields_00003_00004_00002' order represents '8' with '9570'
-9568 9570 0
c Var 'variant_fields_00003_00004_00002' direct represents '8' with '9571'
9568 -9570 9571 0
-9571 9570 0
-9571 -9568 0
c Var 'variant_fields_00003_00004_00002' direct represents '9' with '-9570'
9557 9559 9561 9563 9565 9567 9569 9571 -9570 0
c Encoding variable: variant_fields_00003_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00003' order represents '1' with '9572'
c Var 'variant_fields_00003_00004_00003' direct represents '1' with '9572'
c Var 'variant_fields_00003_00004_00003' order represents '2' with '9573'
-9572 9573 0
c Var 'variant_fields_00003_00004_00003' direct represents '2' with '9574'
9572 -9573 9574 0
-9574 9573 0
-9574 -9572 0
c Var 'variant_fields_00003_00004_00003' order represents '3' with '9575'
-9573 9575 0
c Var 'variant_fields_00003_00004_00003' direct represents '3' with '9576'
9573 -9575 9576 0
-9576 9575 0
-9576 -9573 0
c Var 'variant_fields_00003_00004_00003' order represents '4' with '9577'
-9575 9577 0
c Var 'variant_fields_00003_00004_00003' direct represents '4' with '9578'
9575 -9577 9578 0
-9578 9577 0
-9578 -9575 0
c Var 'variant_fields_00003_00004_00003' order represents '5' with '9579'
-9577 9579 0
c Var 'variant_fields_00003_00004_00003' direct represents '5' with '9580'
9577 -9579 9580 0
-9580 9579 0
-9580 -9577 0
c Var 'variant_fields_00003_00004_00003' order represents '6' with '9581'
-9579 9581 0
c Var 'variant_fields_00003_00004_00003' direct represents '6' with '9582'
9579 -9581 9582 0
-9582 9581 0
-9582 -9579 0
c Var 'variant_fields_00003_00004_00003' order represents '7' with '9583'
-9581 9583 0
c Var 'variant_fields_00003_00004_00003' direct represents '7' with '9584'
9581 -9583 9584 0
-9584 9583 0
-9584 -9581 0
c Var 'variant_fields_00003_00004_00003' order represents '8' with '9585'
-9583 9585 0
c Var 'variant_fields_00003_00004_00003' direct represents '8' with '9586'
9583 -9585 9586 0
-9586 9585 0
-9586 -9583 0
c Var 'variant_fields_00003_00004_00003' direct represents '9' with '-9585'
9572 9574 9576 9578 9580 9582 9584 9586 -9585 0
c Encoding variable: variant_fields_00003_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00004' order represents '1' with '9587'
c Var 'variant_fields_00003_00004_00004' direct represents '1' with '9587'
c Var 'variant_fields_00003_00004_00004' order represents '2' with '9588'
-9587 9588 0
c Var 'variant_fields_00003_00004_00004' direct represents '2' with '9589'
9587 -9588 9589 0
-9589 9588 0
-9589 -9587 0
c Var 'variant_fields_00003_00004_00004' order represents '3' with '9590'
-9588 9590 0
c Var 'variant_fields_00003_00004_00004' direct represents '3' with '9591'
9588 -9590 9591 0
-9591 9590 0
-9591 -9588 0
c Var 'variant_fields_00003_00004_00004' order represents '4' with '9592'
-9590 9592 0
c Var 'variant_fields_00003_00004_00004' direct represents '4' with '9593'
9590 -9592 9593 0
-9593 9592 0
-9593 -9590 0
c Var 'variant_fields_00003_00004_00004' order represents '5' with '9594'
-9592 9594 0
c Var 'variant_fields_00003_00004_00004' direct represents '5' with '9595'
9592 -9594 9595 0
-9595 9594 0
-9595 -9592 0
c Var 'variant_fields_00003_00004_00004' order represents '6' with '9596'
-9594 9596 0
c Var 'variant_fields_00003_00004_00004' direct represents '6' with '9597'
9594 -9596 9597 0
-9597 9596 0
-9597 -9594 0
c Var 'variant_fields_00003_00004_00004' order represents '7' with '9598'
-9596 9598 0
c Var 'variant_fields_00003_00004_00004' direct represents '7' with '9599'
9596 -9598 9599 0
-9599 9598 0
-9599 -9596 0
c Var 'variant_fields_00003_00004_00004' order represents '8' with '9600'
-9598 9600 0
c Var 'variant_fields_00003_00004_00004' direct represents '8' with '9601'
9598 -9600 9601 0
-9601 9600 0
-9601 -9598 0
c Var 'variant_fields_00003_00004_00004' direct represents '9' with '-9600'
9587 9589 9591 9593 9595 9597 9599 9601 -9600 0
c Encoding variable: variant_fields_00003_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00005' order represents '1' with '9602'
c Var 'variant_fields_00003_00004_00005' direct represents '1' with '9602'
c Var 'variant_fields_00003_00004_00005' order represents '2' with '9603'
-9602 9603 0
c Var 'variant_fields_00003_00004_00005' direct represents '2' with '9604'
9602 -9603 9604 0
-9604 9603 0
-9604 -9602 0
c Var 'variant_fields_00003_00004_00005' order represents '3' with '9605'
-9603 9605 0
c Var 'variant_fields_00003_00004_00005' direct represents '3' with '9606'
9603 -9605 9606 0
-9606 9605 0
-9606 -9603 0
c Var 'variant_fields_00003_00004_00005' order represents '4' with '9607'
-9605 9607 0
c Var 'variant_fields_00003_00004_00005' direct represents '4' with '9608'
9605 -9607 9608 0
-9608 9607 0
-9608 -9605 0
c Var 'variant_fields_00003_00004_00005' order represents '5' with '9609'
-9607 9609 0
c Var 'variant_fields_00003_00004_00005' direct represents '5' with '9610'
9607 -9609 9610 0
-9610 9609 0
-9610 -9607 0
c Var 'variant_fields_00003_00004_00005' order represents '6' with '9611'
-9609 9611 0
c Var 'variant_fields_00003_00004_00005' direct represents '6' with '9612'
9609 -9611 9612 0
-9612 9611 0
-9612 -9609 0
c Var 'variant_fields_00003_00004_00005' order represents '7' with '9613'
-9611 9613 0
c Var 'variant_fields_00003_00004_00005' direct represents '7' with '9614'
9611 -9613 9614 0
-9614 9613 0
-9614 -9611 0
c Var 'variant_fields_00003_00004_00005' order represents '8' with '9615'
-9613 9615 0
c Var 'variant_fields_00003_00004_00005' direct represents '8' with '9616'
9613 -9615 9616 0
-9616 9615 0
-9616 -9613 0
c Var 'variant_fields_00003_00004_00005' direct represents '9' with '-9615'
9602 9604 9606 9608 9610 9612 9614 9616 -9615 0
c Encoding variable: variant_fields_00003_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00006' order represents '1' with '9617'
c Var 'variant_fields_00003_00004_00006' direct represents '1' with '9617'
c Var 'variant_fields_00003_00004_00006' order represents '2' with '9618'
-9617 9618 0
c Var 'variant_fields_00003_00004_00006' direct represents '2' with '9619'
9617 -9618 9619 0
-9619 9618 0
-9619 -9617 0
c Var 'variant_fields_00003_00004_00006' order represents '3' with '9620'
-9618 9620 0
c Var 'variant_fields_00003_00004_00006' direct represents '3' with '9621'
9618 -9620 9621 0
-9621 9620 0
-9621 -9618 0
c Var 'variant_fields_00003_00004_00006' order represents '4' with '9622'
-9620 9622 0
c Var 'variant_fields_00003_00004_00006' direct represents '4' with '9623'
9620 -9622 9623 0
-9623 9622 0
-9623 -9620 0
c Var 'variant_fields_00003_00004_00006' order represents '5' with '9624'
-9622 9624 0
c Var 'variant_fields_00003_00004_00006' direct represents '5' with '9625'
9622 -9624 9625 0
-9625 9624 0
-9625 -9622 0
c Var 'variant_fields_00003_00004_00006' order represents '6' with '9626'
-9624 9626 0
c Var 'variant_fields_00003_00004_00006' direct represents '6' with '9627'
9624 -9626 9627 0
-9627 9626 0
-9627 -9624 0
c Var 'variant_fields_00003_00004_00006' order represents '7' with '9628'
-9626 9628 0
c Var 'variant_fields_00003_00004_00006' direct represents '7' with '9629'
9626 -9628 9629 0
-9629 9628 0
-9629 -9626 0
c Var 'variant_fields_00003_00004_00006' order represents '8' with '9630'
-9628 9630 0
c Var 'variant_fields_00003_00004_00006' direct represents '8' with '9631'
9628 -9630 9631 0
-9631 9630 0
-9631 -9628 0
c Var 'variant_fields_00003_00004_00006' direct represents '9' with '-9630'
9617 9619 9621 9623 9625 9627 9629 9631 -9630 0
c Encoding variable: variant_fields_00003_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00007' order represents '1' with '9632'
c Var 'variant_fields_00003_00004_00007' direct represents '1' with '9632'
c Var 'variant_fields_00003_00004_00007' order represents '2' with '9633'
-9632 9633 0
c Var 'variant_fields_00003_00004_00007' direct represents '2' with '9634'
9632 -9633 9634 0
-9634 9633 0
-9634 -9632 0
c Var 'variant_fields_00003_00004_00007' order represents '3' with '9635'
-9633 9635 0
c Var 'variant_fields_00003_00004_00007' direct represents '3' with '9636'
9633 -9635 9636 0
-9636 9635 0
-9636 -9633 0
c Var 'variant_fields_00003_00004_00007' order represents '4' with '9637'
-9635 9637 0
c Var 'variant_fields_00003_00004_00007' direct represents '4' with '9638'
9635 -9637 9638 0
-9638 9637 0
-9638 -9635 0
c Var 'variant_fields_00003_00004_00007' order represents '5' with '9639'
-9637 9639 0
c Var 'variant_fields_00003_00004_00007' direct represents '5' with '9640'
9637 -9639 9640 0
-9640 9639 0
-9640 -9637 0
c Var 'variant_fields_00003_00004_00007' order represents '6' with '9641'
-9639 9641 0
c Var 'variant_fields_00003_00004_00007' direct represents '6' with '9642'
9639 -9641 9642 0
-9642 9641 0
-9642 -9639 0
c Var 'variant_fields_00003_00004_00007' order represents '7' with '9643'
-9641 9643 0
c Var 'variant_fields_00003_00004_00007' direct represents '7' with '9644'
9641 -9643 9644 0
-9644 9643 0
-9644 -9641 0
c Var 'variant_fields_00003_00004_00007' order represents '8' with '9645'
-9643 9645 0
c Var 'variant_fields_00003_00004_00007' direct represents '8' with '9646'
9643 -9645 9646 0
-9646 9645 0
-9646 -9643 0
c Var 'variant_fields_00003_00004_00007' direct represents '9' with '-9645'
9632 9634 9636 9638 9640 9642 9644 9646 -9645 0
c Encoding variable: variant_fields_00003_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00008' order represents '1' with '9647'
c Var 'variant_fields_00003_00004_00008' direct represents '1' with '9647'
c Var 'variant_fields_00003_00004_00008' order represents '2' with '9648'
-9647 9648 0
c Var 'variant_fields_00003_00004_00008' direct represents '2' with '9649'
9647 -9648 9649 0
-9649 9648 0
-9649 -9647 0
c Var 'variant_fields_00003_00004_00008' order represents '3' with '9650'
-9648 9650 0
c Var 'variant_fields_00003_00004_00008' direct represents '3' with '9651'
9648 -9650 9651 0
-9651 9650 0
-9651 -9648 0
c Var 'variant_fields_00003_00004_00008' order represents '4' with '9652'
-9650 9652 0
c Var 'variant_fields_00003_00004_00008' direct represents '4' with '9653'
9650 -9652 9653 0
-9653 9652 0
-9653 -9650 0
c Var 'variant_fields_00003_00004_00008' order represents '5' with '9654'
-9652 9654 0
c Var 'variant_fields_00003_00004_00008' direct represents '5' with '9655'
9652 -9654 9655 0
-9655 9654 0
-9655 -9652 0
c Var 'variant_fields_00003_00004_00008' order represents '6' with '9656'
-9654 9656 0
c Var 'variant_fields_00003_00004_00008' direct represents '6' with '9657'
9654 -9656 9657 0
-9657 9656 0
-9657 -9654 0
c Var 'variant_fields_00003_00004_00008' order represents '7' with '9658'
-9656 9658 0
c Var 'variant_fields_00003_00004_00008' direct represents '7' with '9659'
9656 -9658 9659 0
-9659 9658 0
-9659 -9656 0
c Var 'variant_fields_00003_00004_00008' order represents '8' with '9660'
-9658 9660 0
c Var 'variant_fields_00003_00004_00008' direct represents '8' with '9661'
9658 -9660 9661 0
-9661 9660 0
-9661 -9658 0
c Var 'variant_fields_00003_00004_00008' direct represents '9' with '-9660'
9647 9649 9651 9653 9655 9657 9659 9661 -9660 0
c Encoding variable: variant_fields_00003_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00009' order represents '1' with '9662'
c Var 'variant_fields_00003_00004_00009' direct represents '1' with '9662'
c Var 'variant_fields_00003_00004_00009' order represents '2' with '9663'
-9662 9663 0
c Var 'variant_fields_00003_00004_00009' direct represents '2' with '9664'
9662 -9663 9664 0
-9664 9663 0
-9664 -9662 0
c Var 'variant_fields_00003_00004_00009' order represents '3' with '9665'
-9663 9665 0
c Var 'variant_fields_00003_00004_00009' direct represents '3' with '9666'
9663 -9665 9666 0
-9666 9665 0
-9666 -9663 0
c Var 'variant_fields_00003_00004_00009' order represents '4' with '9667'
-9665 9667 0
c Var 'variant_fields_00003_00004_00009' direct represents '4' with '9668'
9665 -9667 9668 0
-9668 9667 0
-9668 -9665 0
c Var 'variant_fields_00003_00004_00009' order represents '5' with '9669'
-9667 9669 0
c Var 'variant_fields_00003_00004_00009' direct represents '5' with '9670'
9667 -9669 9670 0
-9670 9669 0
-9670 -9667 0
c Var 'variant_fields_00003_00004_00009' order represents '6' with '9671'
-9669 9671 0
c Var 'variant_fields_00003_00004_00009' direct represents '6' with '9672'
9669 -9671 9672 0
-9672 9671 0
-9672 -9669 0
c Var 'variant_fields_00003_00004_00009' order represents '7' with '9673'
-9671 9673 0
c Var 'variant_fields_00003_00004_00009' direct represents '7' with '9674'
9671 -9673 9674 0
-9674 9673 0
-9674 -9671 0
c Var 'variant_fields_00003_00004_00009' order represents '8' with '9675'
-9673 9675 0
c Var 'variant_fields_00003_00004_00009' direct represents '8' with '9676'
9673 -9675 9676 0
-9676 9675 0
-9676 -9673 0
c Var 'variant_fields_00003_00004_00009' direct represents '9' with '-9675'
9662 9664 9666 9668 9670 9672 9674 9676 -9675 0
c Encoding variable: variant_fields_00003_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00001' order represents '1' with '9677'
c Var 'variant_fields_00003_00005_00001' direct represents '1' with '9677'
c Var 'variant_fields_00003_00005_00001' order represents '2' with '9678'
-9677 9678 0
c Var 'variant_fields_00003_00005_00001' direct represents '2' with '9679'
9677 -9678 9679 0
-9679 9678 0
-9679 -9677 0
c Var 'variant_fields_00003_00005_00001' order represents '3' with '9680'
-9678 9680 0
c Var 'variant_fields_00003_00005_00001' direct represents '3' with '9681'
9678 -9680 9681 0
-9681 9680 0
-9681 -9678 0
c Var 'variant_fields_00003_00005_00001' order represents '4' with '9682'
-9680 9682 0
c Var 'variant_fields_00003_00005_00001' direct represents '4' with '9683'
9680 -9682 9683 0
-9683 9682 0
-9683 -9680 0
c Var 'variant_fields_00003_00005_00001' order represents '5' with '9684'
-9682 9684 0
c Var 'variant_fields_00003_00005_00001' direct represents '5' with '9685'
9682 -9684 9685 0
-9685 9684 0
-9685 -9682 0
c Var 'variant_fields_00003_00005_00001' order represents '6' with '9686'
-9684 9686 0
c Var 'variant_fields_00003_00005_00001' direct represents '6' with '9687'
9684 -9686 9687 0
-9687 9686 0
-9687 -9684 0
c Var 'variant_fields_00003_00005_00001' order represents '7' with '9688'
-9686 9688 0
c Var 'variant_fields_00003_00005_00001' direct represents '7' with '9689'
9686 -9688 9689 0
-9689 9688 0
-9689 -9686 0
c Var 'variant_fields_00003_00005_00001' order represents '8' with '9690'
-9688 9690 0
c Var 'variant_fields_00003_00005_00001' direct represents '8' with '9691'
9688 -9690 9691 0
-9691 9690 0
-9691 -9688 0
c Var 'variant_fields_00003_00005_00001' direct represents '9' with '-9690'
9677 9679 9681 9683 9685 9687 9689 9691 -9690 0
c Encoding variable: variant_fields_00003_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00002' order represents '1' with '9692'
c Var 'variant_fields_00003_00005_00002' direct represents '1' with '9692'
c Var 'variant_fields_00003_00005_00002' order represents '2' with '9693'
-9692 9693 0
c Var 'variant_fields_00003_00005_00002' direct represents '2' with '9694'
9692 -9693 9694 0
-9694 9693 0
-9694 -9692 0
c Var 'variant_fields_00003_00005_00002' order represents '3' with '9695'
-9693 9695 0
c Var 'variant_fields_00003_00005_00002' direct represents '3' with '9696'
9693 -9695 9696 0
-9696 9695 0
-9696 -9693 0
c Var 'variant_fields_00003_00005_00002' order represents '4' with '9697'
-9695 9697 0
c Var 'variant_fields_00003_00005_00002' direct represents '4' with '9698'
9695 -9697 9698 0
-9698 9697 0
-9698 -9695 0
c Var 'variant_fields_00003_00005_00002' order represents '5' with '9699'
-9697 9699 0
c Var 'variant_fields_00003_00005_00002' direct represents '5' with '9700'
9697 -9699 9700 0
-9700 9699 0
-9700 -9697 0
c Var 'variant_fields_00003_00005_00002' order represents '6' with '9701'
-9699 9701 0
c Var 'variant_fields_00003_00005_00002' direct represents '6' with '9702'
9699 -9701 9702 0
-9702 9701 0
-9702 -9699 0
c Var 'variant_fields_00003_00005_00002' order represents '7' with '9703'
-9701 9703 0
c Var 'variant_fields_00003_00005_00002' direct represents '7' with '9704'
9701 -9703 9704 0
-9704 9703 0
-9704 -9701 0
c Var 'variant_fields_00003_00005_00002' order represents '8' with '9705'
-9703 9705 0
c Var 'variant_fields_00003_00005_00002' direct represents '8' with '9706'
9703 -9705 9706 0
-9706 9705 0
-9706 -9703 0
c Var 'variant_fields_00003_00005_00002' direct represents '9' with '-9705'
9692 9694 9696 9698 9700 9702 9704 9706 -9705 0
c Encoding variable: variant_fields_00003_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00003' order represents '1' with '9707'
c Var 'variant_fields_00003_00005_00003' direct represents '1' with '9707'
c Var 'variant_fields_00003_00005_00003' order represents '2' with '9708'
-9707 9708 0
c Var 'variant_fields_00003_00005_00003' direct represents '2' with '9709'
9707 -9708 9709 0
-9709 9708 0
-9709 -9707 0
c Var 'variant_fields_00003_00005_00003' order represents '3' with '9710'
-9708 9710 0
c Var 'variant_fields_00003_00005_00003' direct represents '3' with '9711'
9708 -9710 9711 0
-9711 9710 0
-9711 -9708 0
c Var 'variant_fields_00003_00005_00003' order represents '4' with '9712'
-9710 9712 0
c Var 'variant_fields_00003_00005_00003' direct represents '4' with '9713'
9710 -9712 9713 0
-9713 9712 0
-9713 -9710 0
c Var 'variant_fields_00003_00005_00003' order represents '5' with '9714'
-9712 9714 0
c Var 'variant_fields_00003_00005_00003' direct represents '5' with '9715'
9712 -9714 9715 0
-9715 9714 0
-9715 -9712 0
c Var 'variant_fields_00003_00005_00003' order represents '6' with '9716'
-9714 9716 0
c Var 'variant_fields_00003_00005_00003' direct represents '6' with '9717'
9714 -9716 9717 0
-9717 9716 0
-9717 -9714 0
c Var 'variant_fields_00003_00005_00003' order represents '7' with '9718'
-9716 9718 0
c Var 'variant_fields_00003_00005_00003' direct represents '7' with '9719'
9716 -9718 9719 0
-9719 9718 0
-9719 -9716 0
c Var 'variant_fields_00003_00005_00003' order represents '8' with '9720'
-9718 9720 0
c Var 'variant_fields_00003_00005_00003' direct represents '8' with '9721'
9718 -9720 9721 0
-9721 9720 0
-9721 -9718 0
c Var 'variant_fields_00003_00005_00003' direct represents '9' with '-9720'
9707 9709 9711 9713 9715 9717 9719 9721 -9720 0
c Encoding variable: variant_fields_00003_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00004' order represents '1' with '9722'
c Var 'variant_fields_00003_00005_00004' direct represents '1' with '9722'
c Var 'variant_fields_00003_00005_00004' order represents '2' with '9723'
-9722 9723 0
c Var 'variant_fields_00003_00005_00004' direct represents '2' with '9724'
9722 -9723 9724 0
-9724 9723 0
-9724 -9722 0
c Var 'variant_fields_00003_00005_00004' order represents '3' with '9725'
-9723 9725 0
c Var 'variant_fields_00003_00005_00004' direct represents '3' with '9726'
9723 -9725 9726 0
-9726 9725 0
-9726 -9723 0
c Var 'variant_fields_00003_00005_00004' order represents '4' with '9727'
-9725 9727 0
c Var 'variant_fields_00003_00005_00004' direct represents '4' with '9728'
9725 -9727 9728 0
-9728 9727 0
-9728 -9725 0
c Var 'variant_fields_00003_00005_00004' order represents '5' with '9729'
-9727 9729 0
c Var 'variant_fields_00003_00005_00004' direct represents '5' with '9730'
9727 -9729 9730 0
-9730 9729 0
-9730 -9727 0
c Var 'variant_fields_00003_00005_00004' order represents '6' with '9731'
-9729 9731 0
c Var 'variant_fields_00003_00005_00004' direct represents '6' with '9732'
9729 -9731 9732 0
-9732 9731 0
-9732 -9729 0
c Var 'variant_fields_00003_00005_00004' order represents '7' with '9733'
-9731 9733 0
c Var 'variant_fields_00003_00005_00004' direct represents '7' with '9734'
9731 -9733 9734 0
-9734 9733 0
-9734 -9731 0
c Var 'variant_fields_00003_00005_00004' order represents '8' with '9735'
-9733 9735 0
c Var 'variant_fields_00003_00005_00004' direct represents '8' with '9736'
9733 -9735 9736 0
-9736 9735 0
-9736 -9733 0
c Var 'variant_fields_00003_00005_00004' direct represents '9' with '-9735'
9722 9724 9726 9728 9730 9732 9734 9736 -9735 0
c Encoding variable: variant_fields_00003_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00005' order represents '1' with '9737'
c Var 'variant_fields_00003_00005_00005' direct represents '1' with '9737'
c Var 'variant_fields_00003_00005_00005' order represents '2' with '9738'
-9737 9738 0
c Var 'variant_fields_00003_00005_00005' direct represents '2' with '9739'
9737 -9738 9739 0
-9739 9738 0
-9739 -9737 0
c Var 'variant_fields_00003_00005_00005' order represents '3' with '9740'
-9738 9740 0
c Var 'variant_fields_00003_00005_00005' direct represents '3' with '9741'
9738 -9740 9741 0
-9741 9740 0
-9741 -9738 0
c Var 'variant_fields_00003_00005_00005' order represents '4' with '9742'
-9740 9742 0
c Var 'variant_fields_00003_00005_00005' direct represents '4' with '9743'
9740 -9742 9743 0
-9743 9742 0
-9743 -9740 0
c Var 'variant_fields_00003_00005_00005' order represents '5' with '9744'
-9742 9744 0
c Var 'variant_fields_00003_00005_00005' direct represents '5' with '9745'
9742 -9744 9745 0
-9745 9744 0
-9745 -9742 0
c Var 'variant_fields_00003_00005_00005' order represents '6' with '9746'
-9744 9746 0
c Var 'variant_fields_00003_00005_00005' direct represents '6' with '9747'
9744 -9746 9747 0
-9747 9746 0
-9747 -9744 0
c Var 'variant_fields_00003_00005_00005' order represents '7' with '9748'
-9746 9748 0
c Var 'variant_fields_00003_00005_00005' direct represents '7' with '9749'
9746 -9748 9749 0
-9749 9748 0
-9749 -9746 0
c Var 'variant_fields_00003_00005_00005' order represents '8' with '9750'
-9748 9750 0
c Var 'variant_fields_00003_00005_00005' direct represents '8' with '9751'
9748 -9750 9751 0
-9751 9750 0
-9751 -9748 0
c Var 'variant_fields_00003_00005_00005' direct represents '9' with '-9750'
9737 9739 9741 9743 9745 9747 9749 9751 -9750 0
c Encoding variable: variant_fields_00003_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00006' order represents '1' with '9752'
c Var 'variant_fields_00003_00005_00006' direct represents '1' with '9752'
c Var 'variant_fields_00003_00005_00006' order represents '2' with '9753'
-9752 9753 0
c Var 'variant_fields_00003_00005_00006' direct represents '2' with '9754'
9752 -9753 9754 0
-9754 9753 0
-9754 -9752 0
c Var 'variant_fields_00003_00005_00006' order represents '3' with '9755'
-9753 9755 0
c Var 'variant_fields_00003_00005_00006' direct represents '3' with '9756'
9753 -9755 9756 0
-9756 9755 0
-9756 -9753 0
c Var 'variant_fields_00003_00005_00006' order represents '4' with '9757'
-9755 9757 0
c Var 'variant_fields_00003_00005_00006' direct represents '4' with '9758'
9755 -9757 9758 0
-9758 9757 0
-9758 -9755 0
c Var 'variant_fields_00003_00005_00006' order represents '5' with '9759'
-9757 9759 0
c Var 'variant_fields_00003_00005_00006' direct represents '5' with '9760'
9757 -9759 9760 0
-9760 9759 0
-9760 -9757 0
c Var 'variant_fields_00003_00005_00006' order represents '6' with '9761'
-9759 9761 0
c Var 'variant_fields_00003_00005_00006' direct represents '6' with '9762'
9759 -9761 9762 0
-9762 9761 0
-9762 -9759 0
c Var 'variant_fields_00003_00005_00006' order represents '7' with '9763'
-9761 9763 0
c Var 'variant_fields_00003_00005_00006' direct represents '7' with '9764'
9761 -9763 9764 0
-9764 9763 0
-9764 -9761 0
c Var 'variant_fields_00003_00005_00006' order represents '8' with '9765'
-9763 9765 0
c Var 'variant_fields_00003_00005_00006' direct represents '8' with '9766'
9763 -9765 9766 0
-9766 9765 0
-9766 -9763 0
c Var 'variant_fields_00003_00005_00006' direct represents '9' with '-9765'
9752 9754 9756 9758 9760 9762 9764 9766 -9765 0
c Encoding variable: variant_fields_00003_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00007' order represents '1' with '9767'
c Var 'variant_fields_00003_00005_00007' direct represents '1' with '9767'
c Var 'variant_fields_00003_00005_00007' order represents '2' with '9768'
-9767 9768 0
c Var 'variant_fields_00003_00005_00007' direct represents '2' with '9769'
9767 -9768 9769 0
-9769 9768 0
-9769 -9767 0
c Var 'variant_fields_00003_00005_00007' order represents '3' with '9770'
-9768 9770 0
c Var 'variant_fields_00003_00005_00007' direct represents '3' with '9771'
9768 -9770 9771 0
-9771 9770 0
-9771 -9768 0
c Var 'variant_fields_00003_00005_00007' order represents '4' with '9772'
-9770 9772 0
c Var 'variant_fields_00003_00005_00007' direct represents '4' with '9773'
9770 -9772 9773 0
-9773 9772 0
-9773 -9770 0
c Var 'variant_fields_00003_00005_00007' order represents '5' with '9774'
-9772 9774 0
c Var 'variant_fields_00003_00005_00007' direct represents '5' with '9775'
9772 -9774 9775 0
-9775 9774 0
-9775 -9772 0
c Var 'variant_fields_00003_00005_00007' order represents '6' with '9776'
-9774 9776 0
c Var 'variant_fields_00003_00005_00007' direct represents '6' with '9777'
9774 -9776 9777 0
-9777 9776 0
-9777 -9774 0
c Var 'variant_fields_00003_00005_00007' order represents '7' with '9778'
-9776 9778 0
c Var 'variant_fields_00003_00005_00007' direct represents '7' with '9779'
9776 -9778 9779 0
-9779 9778 0
-9779 -9776 0
c Var 'variant_fields_00003_00005_00007' order represents '8' with '9780'
-9778 9780 0
c Var 'variant_fields_00003_00005_00007' direct represents '8' with '9781'
9778 -9780 9781 0
-9781 9780 0
-9781 -9778 0
c Var 'variant_fields_00003_00005_00007' direct represents '9' with '-9780'
9767 9769 9771 9773 9775 9777 9779 9781 -9780 0
c Encoding variable: variant_fields_00003_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00008' order represents '1' with '9782'
c Var 'variant_fields_00003_00005_00008' direct represents '1' with '9782'
c Var 'variant_fields_00003_00005_00008' order represents '2' with '9783'
-9782 9783 0
c Var 'variant_fields_00003_00005_00008' direct represents '2' with '9784'
9782 -9783 9784 0
-9784 9783 0
-9784 -9782 0
c Var 'variant_fields_00003_00005_00008' order represents '3' with '9785'
-9783 9785 0
c Var 'variant_fields_00003_00005_00008' direct represents '3' with '9786'
9783 -9785 9786 0
-9786 9785 0
-9786 -9783 0
c Var 'variant_fields_00003_00005_00008' order represents '4' with '9787'
-9785 9787 0
c Var 'variant_fields_00003_00005_00008' direct represents '4' with '9788'
9785 -9787 9788 0
-9788 9787 0
-9788 -9785 0
c Var 'variant_fields_00003_00005_00008' order represents '5' with '9789'
-9787 9789 0
c Var 'variant_fields_00003_00005_00008' direct represents '5' with '9790'
9787 -9789 9790 0
-9790 9789 0
-9790 -9787 0
c Var 'variant_fields_00003_00005_00008' order represents '6' with '9791'
-9789 9791 0
c Var 'variant_fields_00003_00005_00008' direct represents '6' with '9792'
9789 -9791 9792 0
-9792 9791 0
-9792 -9789 0
c Var 'variant_fields_00003_00005_00008' order represents '7' with '9793'
-9791 9793 0
c Var 'variant_fields_00003_00005_00008' direct represents '7' with '9794'
9791 -9793 9794 0
-9794 9793 0
-9794 -9791 0
c Var 'variant_fields_00003_00005_00008' order represents '8' with '9795'
-9793 9795 0
c Var 'variant_fields_00003_00005_00008' direct represents '8' with '9796'
9793 -9795 9796 0
-9796 9795 0
-9796 -9793 0
c Var 'variant_fields_00003_00005_00008' direct represents '9' with '-9795'
9782 9784 9786 9788 9790 9792 9794 9796 -9795 0
c Encoding variable: variant_fields_00003_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00005_00009' order represents '1' with '9797'
c Var 'variant_fields_00003_00005_00009' direct represents '1' with '9797'
c Var 'variant_fields_00003_00005_00009' order represents '2' with '9798'
-9797 9798 0
c Var 'variant_fields_00003_00005_00009' direct represents '2' with '9799'
9797 -9798 9799 0
-9799 9798 0
-9799 -9797 0
c Var 'variant_fields_00003_00005_00009' order represents '3' with '9800'
-9798 9800 0
c Var 'variant_fields_00003_00005_00009' direct represents '3' with '9801'
9798 -9800 9801 0
-9801 9800 0
-9801 -9798 0
c Var 'variant_fields_00003_00005_00009' order represents '4' with '9802'
-9800 9802 0
c Var 'variant_fields_00003_00005_00009' direct represents '4' with '9803'
9800 -9802 9803 0
-9803 9802 0
-9803 -9800 0
c Var 'variant_fields_00003_00005_00009' order represents '5' with '9804'
-9802 9804 0
c Var 'variant_fields_00003_00005_00009' direct represents '5' with '9805'
9802 -9804 9805 0
-9805 9804 0
-9805 -9802 0
c Var 'variant_fields_00003_00005_00009' order represents '6' with '9806'
-9804 9806 0
c Var 'variant_fields_00003_00005_00009' direct represents '6' with '9807'
9804 -9806 9807 0
-9807 9806 0
-9807 -9804 0
c Var 'variant_fields_00003_00005_00009' order represents '7' with '9808'
-9806 9808 0
c Var 'variant_fields_00003_00005_00009' direct represents '7' with '9809'
9806 -9808 9809 0
-9809 9808 0
-9809 -9806 0
c Var 'variant_fields_00003_00005_00009' order represents '8' with '9810'
-9808 9810 0
c Var 'variant_fields_00003_00005_00009' direct represents '8' with '9811'
9808 -9810 9811 0
-9811 9810 0
-9811 -9808 0
c Var 'variant_fields_00003_00005_00009' direct represents '9' with '-9810'
9797 9799 9801 9803 9805 9807 9809 9811 -9810 0
c Encoding variable: variant_fields_00003_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00001' order represents '1' with '9812'
c Var 'variant_fields_00003_00006_00001' direct represents '1' with '9812'
c Var 'variant_fields_00003_00006_00001' order represents '2' with '9813'
-9812 9813 0
c Var 'variant_fields_00003_00006_00001' direct represents '2' with '9814'
9812 -9813 9814 0
-9814 9813 0
-9814 -9812 0
c Var 'variant_fields_00003_00006_00001' order represents '3' with '9815'
-9813 9815 0
c Var 'variant_fields_00003_00006_00001' direct represents '3' with '9816'
9813 -9815 9816 0
-9816 9815 0
-9816 -9813 0
c Var 'variant_fields_00003_00006_00001' order represents '4' with '9817'
-9815 9817 0
c Var 'variant_fields_00003_00006_00001' direct represents '4' with '9818'
9815 -9817 9818 0
-9818 9817 0
-9818 -9815 0
c Var 'variant_fields_00003_00006_00001' order represents '5' with '9819'
-9817 9819 0
c Var 'variant_fields_00003_00006_00001' direct represents '5' with '9820'
9817 -9819 9820 0
-9820 9819 0
-9820 -9817 0
c Var 'variant_fields_00003_00006_00001' order represents '6' with '9821'
-9819 9821 0
c Var 'variant_fields_00003_00006_00001' direct represents '6' with '9822'
9819 -9821 9822 0
-9822 9821 0
-9822 -9819 0
c Var 'variant_fields_00003_00006_00001' order represents '7' with '9823'
-9821 9823 0
c Var 'variant_fields_00003_00006_00001' direct represents '7' with '9824'
9821 -9823 9824 0
-9824 9823 0
-9824 -9821 0
c Var 'variant_fields_00003_00006_00001' order represents '8' with '9825'
-9823 9825 0
c Var 'variant_fields_00003_00006_00001' direct represents '8' with '9826'
9823 -9825 9826 0
-9826 9825 0
-9826 -9823 0
c Var 'variant_fields_00003_00006_00001' direct represents '9' with '-9825'
9812 9814 9816 9818 9820 9822 9824 9826 -9825 0
c Encoding variable: variant_fields_00003_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00002' order represents '1' with '9827'
c Var 'variant_fields_00003_00006_00002' direct represents '1' with '9827'
c Var 'variant_fields_00003_00006_00002' order represents '2' with '9828'
-9827 9828 0
c Var 'variant_fields_00003_00006_00002' direct represents '2' with '9829'
9827 -9828 9829 0
-9829 9828 0
-9829 -9827 0
c Var 'variant_fields_00003_00006_00002' order represents '3' with '9830'
-9828 9830 0
c Var 'variant_fields_00003_00006_00002' direct represents '3' with '9831'
9828 -9830 9831 0
-9831 9830 0
-9831 -9828 0
c Var 'variant_fields_00003_00006_00002' order represents '4' with '9832'
-9830 9832 0
c Var 'variant_fields_00003_00006_00002' direct represents '4' with '9833'
9830 -9832 9833 0
-9833 9832 0
-9833 -9830 0
c Var 'variant_fields_00003_00006_00002' order represents '5' with '9834'
-9832 9834 0
c Var 'variant_fields_00003_00006_00002' direct represents '5' with '9835'
9832 -9834 9835 0
-9835 9834 0
-9835 -9832 0
c Var 'variant_fields_00003_00006_00002' order represents '6' with '9836'
-9834 9836 0
c Var 'variant_fields_00003_00006_00002' direct represents '6' with '9837'
9834 -9836 9837 0
-9837 9836 0
-9837 -9834 0
c Var 'variant_fields_00003_00006_00002' order represents '7' with '9838'
-9836 9838 0
c Var 'variant_fields_00003_00006_00002' direct represents '7' with '9839'
9836 -9838 9839 0
-9839 9838 0
-9839 -9836 0
c Var 'variant_fields_00003_00006_00002' order represents '8' with '9840'
-9838 9840 0
c Var 'variant_fields_00003_00006_00002' direct represents '8' with '9841'
9838 -9840 9841 0
-9841 9840 0
-9841 -9838 0
c Var 'variant_fields_00003_00006_00002' direct represents '9' with '-9840'
9827 9829 9831 9833 9835 9837 9839 9841 -9840 0
c Encoding variable: variant_fields_00003_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00003' order represents '1' with '9842'
c Var 'variant_fields_00003_00006_00003' direct represents '1' with '9842'
c Var 'variant_fields_00003_00006_00003' order represents '2' with '9843'
-9842 9843 0
c Var 'variant_fields_00003_00006_00003' direct represents '2' with '9844'
9842 -9843 9844 0
-9844 9843 0
-9844 -9842 0
c Var 'variant_fields_00003_00006_00003' order represents '3' with '9845'
-9843 9845 0
c Var 'variant_fields_00003_00006_00003' direct represents '3' with '9846'
9843 -9845 9846 0
-9846 9845 0
-9846 -9843 0
c Var 'variant_fields_00003_00006_00003' order represents '4' with '9847'
-9845 9847 0
c Var 'variant_fields_00003_00006_00003' direct represents '4' with '9848'
9845 -9847 9848 0
-9848 9847 0
-9848 -9845 0
c Var 'variant_fields_00003_00006_00003' order represents '5' with '9849'
-9847 9849 0
c Var 'variant_fields_00003_00006_00003' direct represents '5' with '9850'
9847 -9849 9850 0
-9850 9849 0
-9850 -9847 0
c Var 'variant_fields_00003_00006_00003' order represents '6' with '9851'
-9849 9851 0
c Var 'variant_fields_00003_00006_00003' direct represents '6' with '9852'
9849 -9851 9852 0
-9852 9851 0
-9852 -9849 0
c Var 'variant_fields_00003_00006_00003' order represents '7' with '9853'
-9851 9853 0
c Var 'variant_fields_00003_00006_00003' direct represents '7' with '9854'
9851 -9853 9854 0
-9854 9853 0
-9854 -9851 0
c Var 'variant_fields_00003_00006_00003' order represents '8' with '9855'
-9853 9855 0
c Var 'variant_fields_00003_00006_00003' direct represents '8' with '9856'
9853 -9855 9856 0
-9856 9855 0
-9856 -9853 0
c Var 'variant_fields_00003_00006_00003' direct represents '9' with '-9855'
9842 9844 9846 9848 9850 9852 9854 9856 -9855 0
c Encoding variable: variant_fields_00003_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00004' order represents '1' with '9857'
c Var 'variant_fields_00003_00006_00004' direct represents '1' with '9857'
c Var 'variant_fields_00003_00006_00004' order represents '2' with '9858'
-9857 9858 0
c Var 'variant_fields_00003_00006_00004' direct represents '2' with '9859'
9857 -9858 9859 0
-9859 9858 0
-9859 -9857 0
c Var 'variant_fields_00003_00006_00004' order represents '3' with '9860'
-9858 9860 0
c Var 'variant_fields_00003_00006_00004' direct represents '3' with '9861'
9858 -9860 9861 0
-9861 9860 0
-9861 -9858 0
c Var 'variant_fields_00003_00006_00004' order represents '4' with '9862'
-9860 9862 0
c Var 'variant_fields_00003_00006_00004' direct represents '4' with '9863'
9860 -9862 9863 0
-9863 9862 0
-9863 -9860 0
c Var 'variant_fields_00003_00006_00004' order represents '5' with '9864'
-9862 9864 0
c Var 'variant_fields_00003_00006_00004' direct represents '5' with '9865'
9862 -9864 9865 0
-9865 9864 0
-9865 -9862 0
c Var 'variant_fields_00003_00006_00004' order represents '6' with '9866'
-9864 9866 0
c Var 'variant_fields_00003_00006_00004' direct represents '6' with '9867'
9864 -9866 9867 0
-9867 9866 0
-9867 -9864 0
c Var 'variant_fields_00003_00006_00004' order represents '7' with '9868'
-9866 9868 0
c Var 'variant_fields_00003_00006_00004' direct represents '7' with '9869'
9866 -9868 9869 0
-9869 9868 0
-9869 -9866 0
c Var 'variant_fields_00003_00006_00004' order represents '8' with '9870'
-9868 9870 0
c Var 'variant_fields_00003_00006_00004' direct represents '8' with '9871'
9868 -9870 9871 0
-9871 9870 0
-9871 -9868 0
c Var 'variant_fields_00003_00006_00004' direct represents '9' with '-9870'
9857 9859 9861 9863 9865 9867 9869 9871 -9870 0
c Encoding variable: variant_fields_00003_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00005' order represents '1' with '9872'
c Var 'variant_fields_00003_00006_00005' direct represents '1' with '9872'
c Var 'variant_fields_00003_00006_00005' order represents '2' with '9873'
-9872 9873 0
c Var 'variant_fields_00003_00006_00005' direct represents '2' with '9874'
9872 -9873 9874 0
-9874 9873 0
-9874 -9872 0
c Var 'variant_fields_00003_00006_00005' order represents '3' with '9875'
-9873 9875 0
c Var 'variant_fields_00003_00006_00005' direct represents '3' with '9876'
9873 -9875 9876 0
-9876 9875 0
-9876 -9873 0
c Var 'variant_fields_00003_00006_00005' order represents '4' with '9877'
-9875 9877 0
c Var 'variant_fields_00003_00006_00005' direct represents '4' with '9878'
9875 -9877 9878 0
-9878 9877 0
-9878 -9875 0
c Var 'variant_fields_00003_00006_00005' order represents '5' with '9879'
-9877 9879 0
c Var 'variant_fields_00003_00006_00005' direct represents '5' with '9880'
9877 -9879 9880 0
-9880 9879 0
-9880 -9877 0
c Var 'variant_fields_00003_00006_00005' order represents '6' with '9881'
-9879 9881 0
c Var 'variant_fields_00003_00006_00005' direct represents '6' with '9882'
9879 -9881 9882 0
-9882 9881 0
-9882 -9879 0
c Var 'variant_fields_00003_00006_00005' order represents '7' with '9883'
-9881 9883 0
c Var 'variant_fields_00003_00006_00005' direct represents '7' with '9884'
9881 -9883 9884 0
-9884 9883 0
-9884 -9881 0
c Var 'variant_fields_00003_00006_00005' order represents '8' with '9885'
-9883 9885 0
c Var 'variant_fields_00003_00006_00005' direct represents '8' with '9886'
9883 -9885 9886 0
-9886 9885 0
-9886 -9883 0
c Var 'variant_fields_00003_00006_00005' direct represents '9' with '-9885'
9872 9874 9876 9878 9880 9882 9884 9886 -9885 0
c Encoding variable: variant_fields_00003_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00006' order represents '1' with '9887'
c Var 'variant_fields_00003_00006_00006' direct represents '1' with '9887'
c Var 'variant_fields_00003_00006_00006' order represents '2' with '9888'
-9887 9888 0
c Var 'variant_fields_00003_00006_00006' direct represents '2' with '9889'
9887 -9888 9889 0
-9889 9888 0
-9889 -9887 0
c Var 'variant_fields_00003_00006_00006' order represents '3' with '9890'
-9888 9890 0
c Var 'variant_fields_00003_00006_00006' direct represents '3' with '9891'
9888 -9890 9891 0
-9891 9890 0
-9891 -9888 0
c Var 'variant_fields_00003_00006_00006' order represents '4' with '9892'
-9890 9892 0
c Var 'variant_fields_00003_00006_00006' direct represents '4' with '9893'
9890 -9892 9893 0
-9893 9892 0
-9893 -9890 0
c Var 'variant_fields_00003_00006_00006' order represents '5' with '9894'
-9892 9894 0
c Var 'variant_fields_00003_00006_00006' direct represents '5' with '9895'
9892 -9894 9895 0
-9895 9894 0
-9895 -9892 0
c Var 'variant_fields_00003_00006_00006' order represents '6' with '9896'
-9894 9896 0
c Var 'variant_fields_00003_00006_00006' direct represents '6' with '9897'
9894 -9896 9897 0
-9897 9896 0
-9897 -9894 0
c Var 'variant_fields_00003_00006_00006' order represents '7' with '9898'
-9896 9898 0
c Var 'variant_fields_00003_00006_00006' direct represents '7' with '9899'
9896 -9898 9899 0
-9899 9898 0
-9899 -9896 0
c Var 'variant_fields_00003_00006_00006' order represents '8' with '9900'
-9898 9900 0
c Var 'variant_fields_00003_00006_00006' direct represents '8' with '9901'
9898 -9900 9901 0
-9901 9900 0
-9901 -9898 0
c Var 'variant_fields_00003_00006_00006' direct represents '9' with '-9900'
9887 9889 9891 9893 9895 9897 9899 9901 -9900 0
c Encoding variable: variant_fields_00003_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00007' order represents '1' with '9902'
c Var 'variant_fields_00003_00006_00007' direct represents '1' with '9902'
c Var 'variant_fields_00003_00006_00007' order represents '2' with '9903'
-9902 9903 0
c Var 'variant_fields_00003_00006_00007' direct represents '2' with '9904'
9902 -9903 9904 0
-9904 9903 0
-9904 -9902 0
c Var 'variant_fields_00003_00006_00007' order represents '3' with '9905'
-9903 9905 0
c Var 'variant_fields_00003_00006_00007' direct represents '3' with '9906'
9903 -9905 9906 0
-9906 9905 0
-9906 -9903 0
c Var 'variant_fields_00003_00006_00007' order represents '4' with '9907'
-9905 9907 0
c Var 'variant_fields_00003_00006_00007' direct represents '4' with '9908'
9905 -9907 9908 0
-9908 9907 0
-9908 -9905 0
c Var 'variant_fields_00003_00006_00007' order represents '5' with '9909'
-9907 9909 0
c Var 'variant_fields_00003_00006_00007' direct represents '5' with '9910'
9907 -9909 9910 0
-9910 9909 0
-9910 -9907 0
c Var 'variant_fields_00003_00006_00007' order represents '6' with '9911'
-9909 9911 0
c Var 'variant_fields_00003_00006_00007' direct represents '6' with '9912'
9909 -9911 9912 0
-9912 9911 0
-9912 -9909 0
c Var 'variant_fields_00003_00006_00007' order represents '7' with '9913'
-9911 9913 0
c Var 'variant_fields_00003_00006_00007' direct represents '7' with '9914'
9911 -9913 9914 0
-9914 9913 0
-9914 -9911 0
c Var 'variant_fields_00003_00006_00007' order represents '8' with '9915'
-9913 9915 0
c Var 'variant_fields_00003_00006_00007' direct represents '8' with '9916'
9913 -9915 9916 0
-9916 9915 0
-9916 -9913 0
c Var 'variant_fields_00003_00006_00007' direct represents '9' with '-9915'
9902 9904 9906 9908 9910 9912 9914 9916 -9915 0
c Encoding variable: variant_fields_00003_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00008' order represents '1' with '9917'
c Var 'variant_fields_00003_00006_00008' direct represents '1' with '9917'
c Var 'variant_fields_00003_00006_00008' order represents '2' with '9918'
-9917 9918 0
c Var 'variant_fields_00003_00006_00008' direct represents '2' with '9919'
9917 -9918 9919 0
-9919 9918 0
-9919 -9917 0
c Var 'variant_fields_00003_00006_00008' order represents '3' with '9920'
-9918 9920 0
c Var 'variant_fields_00003_00006_00008' direct represents '3' with '9921'
9918 -9920 9921 0
-9921 9920 0
-9921 -9918 0
c Var 'variant_fields_00003_00006_00008' order represents '4' with '9922'
-9920 9922 0
c Var 'variant_fields_00003_00006_00008' direct represents '4' with '9923'
9920 -9922 9923 0
-9923 9922 0
-9923 -9920 0
c Var 'variant_fields_00003_00006_00008' order represents '5' with '9924'
-9922 9924 0
c Var 'variant_fields_00003_00006_00008' direct represents '5' with '9925'
9922 -9924 9925 0
-9925 9924 0
-9925 -9922 0
c Var 'variant_fields_00003_00006_00008' order represents '6' with '9926'
-9924 9926 0
c Var 'variant_fields_00003_00006_00008' direct represents '6' with '9927'
9924 -9926 9927 0
-9927 9926 0
-9927 -9924 0
c Var 'variant_fields_00003_00006_00008' order represents '7' with '9928'
-9926 9928 0
c Var 'variant_fields_00003_00006_00008' direct represents '7' with '9929'
9926 -9928 9929 0
-9929 9928 0
-9929 -9926 0
c Var 'variant_fields_00003_00006_00008' order represents '8' with '9930'
-9928 9930 0
c Var 'variant_fields_00003_00006_00008' direct represents '8' with '9931'
9928 -9930 9931 0
-9931 9930 0
-9931 -9928 0
c Var 'variant_fields_00003_00006_00008' direct represents '9' with '-9930'
9917 9919 9921 9923 9925 9927 9929 9931 -9930 0
c Encoding variable: variant_fields_00003_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00009' order represents '1' with '9932'
c Var 'variant_fields_00003_00006_00009' direct represents '1' with '9932'
c Var 'variant_fields_00003_00006_00009' order represents '2' with '9933'
-9932 9933 0
c Var 'variant_fields_00003_00006_00009' direct represents '2' with '9934'
9932 -9933 9934 0
-9934 9933 0
-9934 -9932 0
c Var 'variant_fields_00003_00006_00009' order represents '3' with '9935'
-9933 9935 0
c Var 'variant_fields_00003_00006_00009' direct represents '3' with '9936'
9933 -9935 9936 0
-9936 9935 0
-9936 -9933 0
c Var 'variant_fields_00003_00006_00009' order represents '4' with '9937'
-9935 9937 0
c Var 'variant_fields_00003_00006_00009' direct represents '4' with '9938'
9935 -9937 9938 0
-9938 9937 0
-9938 -9935 0
c Var 'variant_fields_00003_00006_00009' order represents '5' with '9939'
-9937 9939 0
c Var 'variant_fields_00003_00006_00009' direct represents '5' with '9940'
9937 -9939 9940 0
-9940 9939 0
-9940 -9937 0
c Var 'variant_fields_00003_00006_00009' order represents '6' with '9941'
-9939 9941 0
c Var 'variant_fields_00003_00006_00009' direct represents '6' with '9942'
9939 -9941 9942 0
-9942 9941 0
-9942 -9939 0
c Var 'variant_fields_00003_00006_00009' order represents '7' with '9943'
-9941 9943 0
c Var 'variant_fields_00003_00006_00009' direct represents '7' with '9944'
9941 -9943 9944 0
-9944 9943 0
-9944 -9941 0
c Var 'variant_fields_00003_00006_00009' order represents '8' with '9945'
-9943 9945 0
c Var 'variant_fields_00003_00006_00009' direct represents '8' with '9946'
9943 -9945 9946 0
-9946 9945 0
-9946 -9943 0
c Var 'variant_fields_00003_00006_00009' direct represents '9' with '-9945'
9932 9934 9936 9938 9940 9942 9944 9946 -9945 0
c Encoding variable: variant_fields_00003_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00001' order represents '1' with '9947'
c Var 'variant_fields_00003_00007_00001' direct represents '1' with '9947'
c Var 'variant_fields_00003_00007_00001' order represents '2' with '9948'
-9947 9948 0
c Var 'variant_fields_00003_00007_00001' direct represents '2' with '9949'
9947 -9948 9949 0
-9949 9948 0
-9949 -9947 0
c Var 'variant_fields_00003_00007_00001' order represents '3' with '9950'
-9948 9950 0
c Var 'variant_fields_00003_00007_00001' direct represents '3' with '9951'
9948 -9950 9951 0
-9951 9950 0
-9951 -9948 0
c Var 'variant_fields_00003_00007_00001' order represents '4' with '9952'
-9950 9952 0
c Var 'variant_fields_00003_00007_00001' direct represents '4' with '9953'
9950 -9952 9953 0
-9953 9952 0
-9953 -9950 0
c Var 'variant_fields_00003_00007_00001' order represents '5' with '9954'
-9952 9954 0
c Var 'variant_fields_00003_00007_00001' direct represents '5' with '9955'
9952 -9954 9955 0
-9955 9954 0
-9955 -9952 0
c Var 'variant_fields_00003_00007_00001' order represents '6' with '9956'
-9954 9956 0
c Var 'variant_fields_00003_00007_00001' direct represents '6' with '9957'
9954 -9956 9957 0
-9957 9956 0
-9957 -9954 0
c Var 'variant_fields_00003_00007_00001' order represents '7' with '9958'
-9956 9958 0
c Var 'variant_fields_00003_00007_00001' direct represents '7' with '9959'
9956 -9958 9959 0
-9959 9958 0
-9959 -9956 0
c Var 'variant_fields_00003_00007_00001' order represents '8' with '9960'
-9958 9960 0
c Var 'variant_fields_00003_00007_00001' direct represents '8' with '9961'
9958 -9960 9961 0
-9961 9960 0
-9961 -9958 0
c Var 'variant_fields_00003_00007_00001' direct represents '9' with '-9960'
9947 9949 9951 9953 9955 9957 9959 9961 -9960 0
c Encoding variable: variant_fields_00003_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00002' order represents '1' with '9962'
c Var 'variant_fields_00003_00007_00002' direct represents '1' with '9962'
c Var 'variant_fields_00003_00007_00002' order represents '2' with '9963'
-9962 9963 0
c Var 'variant_fields_00003_00007_00002' direct represents '2' with '9964'
9962 -9963 9964 0
-9964 9963 0
-9964 -9962 0
c Var 'variant_fields_00003_00007_00002' order represents '3' with '9965'
-9963 9965 0
c Var 'variant_fields_00003_00007_00002' direct represents '3' with '9966'
9963 -9965 9966 0
-9966 9965 0
-9966 -9963 0
c Var 'variant_fields_00003_00007_00002' order represents '4' with '9967'
-9965 9967 0
c Var 'variant_fields_00003_00007_00002' direct represents '4' with '9968'
9965 -9967 9968 0
-9968 9967 0
-9968 -9965 0
c Var 'variant_fields_00003_00007_00002' order represents '5' with '9969'
-9967 9969 0
c Var 'variant_fields_00003_00007_00002' direct represents '5' with '9970'
9967 -9969 9970 0
-9970 9969 0
-9970 -9967 0
c Var 'variant_fields_00003_00007_00002' order represents '6' with '9971'
-9969 9971 0
c Var 'variant_fields_00003_00007_00002' direct represents '6' with '9972'
9969 -9971 9972 0
-9972 9971 0
-9972 -9969 0
c Var 'variant_fields_00003_00007_00002' order represents '7' with '9973'
-9971 9973 0
c Var 'variant_fields_00003_00007_00002' direct represents '7' with '9974'
9971 -9973 9974 0
-9974 9973 0
-9974 -9971 0
c Var 'variant_fields_00003_00007_00002' order represents '8' with '9975'
-9973 9975 0
c Var 'variant_fields_00003_00007_00002' direct represents '8' with '9976'
9973 -9975 9976 0
-9976 9975 0
-9976 -9973 0
c Var 'variant_fields_00003_00007_00002' direct represents '9' with '-9975'
9962 9964 9966 9968 9970 9972 9974 9976 -9975 0
c Encoding variable: variant_fields_00003_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00003' order represents '1' with '9977'
c Var 'variant_fields_00003_00007_00003' direct represents '1' with '9977'
c Var 'variant_fields_00003_00007_00003' order represents '2' with '9978'
-9977 9978 0
c Var 'variant_fields_00003_00007_00003' direct represents '2' with '9979'
9977 -9978 9979 0
-9979 9978 0
-9979 -9977 0
c Var 'variant_fields_00003_00007_00003' order represents '3' with '9980'
-9978 9980 0
c Var 'variant_fields_00003_00007_00003' direct represents '3' with '9981'
9978 -9980 9981 0
-9981 9980 0
-9981 -9978 0
c Var 'variant_fields_00003_00007_00003' order represents '4' with '9982'
-9980 9982 0
c Var 'variant_fields_00003_00007_00003' direct represents '4' with '9983'
9980 -9982 9983 0
-9983 9982 0
-9983 -9980 0
c Var 'variant_fields_00003_00007_00003' order represents '5' with '9984'
-9982 9984 0
c Var 'variant_fields_00003_00007_00003' direct represents '5' with '9985'
9982 -9984 9985 0
-9985 9984 0
-9985 -9982 0
c Var 'variant_fields_00003_00007_00003' order represents '6' with '9986'
-9984 9986 0
c Var 'variant_fields_00003_00007_00003' direct represents '6' with '9987'
9984 -9986 9987 0
-9987 9986 0
-9987 -9984 0
c Var 'variant_fields_00003_00007_00003' order represents '7' with '9988'
-9986 9988 0
c Var 'variant_fields_00003_00007_00003' direct represents '7' with '9989'
9986 -9988 9989 0
-9989 9988 0
-9989 -9986 0
c Var 'variant_fields_00003_00007_00003' order represents '8' with '9990'
-9988 9990 0
c Var 'variant_fields_00003_00007_00003' direct represents '8' with '9991'
9988 -9990 9991 0
-9991 9990 0
-9991 -9988 0
c Var 'variant_fields_00003_00007_00003' direct represents '9' with '-9990'
9977 9979 9981 9983 9985 9987 9989 9991 -9990 0
c Encoding variable: variant_fields_00003_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00004' order represents '1' with '9992'
c Var 'variant_fields_00003_00007_00004' direct represents '1' with '9992'
c Var 'variant_fields_00003_00007_00004' order represents '2' with '9993'
-9992 9993 0
c Var 'variant_fields_00003_00007_00004' direct represents '2' with '9994'
9992 -9993 9994 0
-9994 9993 0
-9994 -9992 0
c Var 'variant_fields_00003_00007_00004' order represents '3' with '9995'
-9993 9995 0
c Var 'variant_fields_00003_00007_00004' direct represents '3' with '9996'
9993 -9995 9996 0
-9996 9995 0
-9996 -9993 0
c Var 'variant_fields_00003_00007_00004' order represents '4' with '9997'
-9995 9997 0
c Var 'variant_fields_00003_00007_00004' direct represents '4' with '9998'
9995 -9997 9998 0
-9998 9997 0
-9998 -9995 0
c Var 'variant_fields_00003_00007_00004' order represents '5' with '9999'
-9997 9999 0
c Var 'variant_fields_00003_00007_00004' direct represents '5' with '10000'
9997 -9999 10000 0
-10000 9999 0
-10000 -9997 0
c Var 'variant_fields_00003_00007_00004' order represents '6' with '10001'
-9999 10001 0
c Var 'variant_fields_00003_00007_00004' direct represents '6' with '10002'
9999 -10001 10002 0
-10002 10001 0
-10002 -9999 0
c Var 'variant_fields_00003_00007_00004' order represents '7' with '10003'
-10001 10003 0
c Var 'variant_fields_00003_00007_00004' direct represents '7' with '10004'
10001 -10003 10004 0
-10004 10003 0
-10004 -10001 0
c Var 'variant_fields_00003_00007_00004' order represents '8' with '10005'
-10003 10005 0
c Var 'variant_fields_00003_00007_00004' direct represents '8' with '10006'
10003 -10005 10006 0
-10006 10005 0
-10006 -10003 0
c Var 'variant_fields_00003_00007_00004' direct represents '9' with '-10005'
9992 9994 9996 9998 10000 10002 10004 10006 -10005 0
c Encoding variable: variant_fields_00003_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00005' order represents '1' with '10007'
c Var 'variant_fields_00003_00007_00005' direct represents '1' with '10007'
c Var 'variant_fields_00003_00007_00005' order represents '2' with '10008'
-10007 10008 0
c Var 'variant_fields_00003_00007_00005' direct represents '2' with '10009'
10007 -10008 10009 0
-10009 10008 0
-10009 -10007 0
c Var 'variant_fields_00003_00007_00005' order represents '3' with '10010'
-10008 10010 0
c Var 'variant_fields_00003_00007_00005' direct represents '3' with '10011'
10008 -10010 10011 0
-10011 10010 0
-10011 -10008 0
c Var 'variant_fields_00003_00007_00005' order represents '4' with '10012'
-10010 10012 0
c Var 'variant_fields_00003_00007_00005' direct represents '4' with '10013'
10010 -10012 10013 0
-10013 10012 0
-10013 -10010 0
c Var 'variant_fields_00003_00007_00005' order represents '5' with '10014'
-10012 10014 0
c Var 'variant_fields_00003_00007_00005' direct represents '5' with '10015'
10012 -10014 10015 0
-10015 10014 0
-10015 -10012 0
c Var 'variant_fields_00003_00007_00005' order represents '6' with '10016'
-10014 10016 0
c Var 'variant_fields_00003_00007_00005' direct represents '6' with '10017'
10014 -10016 10017 0
-10017 10016 0
-10017 -10014 0
c Var 'variant_fields_00003_00007_00005' order represents '7' with '10018'
-10016 10018 0
c Var 'variant_fields_00003_00007_00005' direct represents '7' with '10019'
10016 -10018 10019 0
-10019 10018 0
-10019 -10016 0
c Var 'variant_fields_00003_00007_00005' order represents '8' with '10020'
-10018 10020 0
c Var 'variant_fields_00003_00007_00005' direct represents '8' with '10021'
10018 -10020 10021 0
-10021 10020 0
-10021 -10018 0
c Var 'variant_fields_00003_00007_00005' direct represents '9' with '-10020'
10007 10009 10011 10013 10015 10017 10019 10021 -10020 0
c Encoding variable: variant_fields_00003_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00006' order represents '1' with '10022'
c Var 'variant_fields_00003_00007_00006' direct represents '1' with '10022'
c Var 'variant_fields_00003_00007_00006' order represents '2' with '10023'
-10022 10023 0
c Var 'variant_fields_00003_00007_00006' direct represents '2' with '10024'
10022 -10023 10024 0
-10024 10023 0
-10024 -10022 0
c Var 'variant_fields_00003_00007_00006' order represents '3' with '10025'
-10023 10025 0
c Var 'variant_fields_00003_00007_00006' direct represents '3' with '10026'
10023 -10025 10026 0
-10026 10025 0
-10026 -10023 0
c Var 'variant_fields_00003_00007_00006' order represents '4' with '10027'
-10025 10027 0
c Var 'variant_fields_00003_00007_00006' direct represents '4' with '10028'
10025 -10027 10028 0
-10028 10027 0
-10028 -10025 0
c Var 'variant_fields_00003_00007_00006' order represents '5' with '10029'
-10027 10029 0
c Var 'variant_fields_00003_00007_00006' direct represents '5' with '10030'
10027 -10029 10030 0
-10030 10029 0
-10030 -10027 0
c Var 'variant_fields_00003_00007_00006' order represents '6' with '10031'
-10029 10031 0
c Var 'variant_fields_00003_00007_00006' direct represents '6' with '10032'
10029 -10031 10032 0
-10032 10031 0
-10032 -10029 0
c Var 'variant_fields_00003_00007_00006' order represents '7' with '10033'
-10031 10033 0
c Var 'variant_fields_00003_00007_00006' direct represents '7' with '10034'
10031 -10033 10034 0
-10034 10033 0
-10034 -10031 0
c Var 'variant_fields_00003_00007_00006' order represents '8' with '10035'
-10033 10035 0
c Var 'variant_fields_00003_00007_00006' direct represents '8' with '10036'
10033 -10035 10036 0
-10036 10035 0
-10036 -10033 0
c Var 'variant_fields_00003_00007_00006' direct represents '9' with '-10035'
10022 10024 10026 10028 10030 10032 10034 10036 -10035 0
c Encoding variable: variant_fields_00003_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00007' order represents '1' with '10037'
c Var 'variant_fields_00003_00007_00007' direct represents '1' with '10037'
c Var 'variant_fields_00003_00007_00007' order represents '2' with '10038'
-10037 10038 0
c Var 'variant_fields_00003_00007_00007' direct represents '2' with '10039'
10037 -10038 10039 0
-10039 10038 0
-10039 -10037 0
c Var 'variant_fields_00003_00007_00007' order represents '3' with '10040'
-10038 10040 0
c Var 'variant_fields_00003_00007_00007' direct represents '3' with '10041'
10038 -10040 10041 0
-10041 10040 0
-10041 -10038 0
c Var 'variant_fields_00003_00007_00007' order represents '4' with '10042'
-10040 10042 0
c Var 'variant_fields_00003_00007_00007' direct represents '4' with '10043'
10040 -10042 10043 0
-10043 10042 0
-10043 -10040 0
c Var 'variant_fields_00003_00007_00007' order represents '5' with '10044'
-10042 10044 0
c Var 'variant_fields_00003_00007_00007' direct represents '5' with '10045'
10042 -10044 10045 0
-10045 10044 0
-10045 -10042 0
c Var 'variant_fields_00003_00007_00007' order represents '6' with '10046'
-10044 10046 0
c Var 'variant_fields_00003_00007_00007' direct represents '6' with '10047'
10044 -10046 10047 0
-10047 10046 0
-10047 -10044 0
c Var 'variant_fields_00003_00007_00007' order represents '7' with '10048'
-10046 10048 0
c Var 'variant_fields_00003_00007_00007' direct represents '7' with '10049'
10046 -10048 10049 0
-10049 10048 0
-10049 -10046 0
c Var 'variant_fields_00003_00007_00007' order represents '8' with '10050'
-10048 10050 0
c Var 'variant_fields_00003_00007_00007' direct represents '8' with '10051'
10048 -10050 10051 0
-10051 10050 0
-10051 -10048 0
c Var 'variant_fields_00003_00007_00007' direct represents '9' with '-10050'
10037 10039 10041 10043 10045 10047 10049 10051 -10050 0
c Encoding variable: variant_fields_00003_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00008' order represents '1' with '10052'
c Var 'variant_fields_00003_00007_00008' direct represents '1' with '10052'
c Var 'variant_fields_00003_00007_00008' order represents '2' with '10053'
-10052 10053 0
c Var 'variant_fields_00003_00007_00008' direct represents '2' with '10054'
10052 -10053 10054 0
-10054 10053 0
-10054 -10052 0
c Var 'variant_fields_00003_00007_00008' order represents '3' with '10055'
-10053 10055 0
c Var 'variant_fields_00003_00007_00008' direct represents '3' with '10056'
10053 -10055 10056 0
-10056 10055 0
-10056 -10053 0
c Var 'variant_fields_00003_00007_00008' order represents '4' with '10057'
-10055 10057 0
c Var 'variant_fields_00003_00007_00008' direct represents '4' with '10058'
10055 -10057 10058 0
-10058 10057 0
-10058 -10055 0
c Var 'variant_fields_00003_00007_00008' order represents '5' with '10059'
-10057 10059 0
c Var 'variant_fields_00003_00007_00008' direct represents '5' with '10060'
10057 -10059 10060 0
-10060 10059 0
-10060 -10057 0
c Var 'variant_fields_00003_00007_00008' order represents '6' with '10061'
-10059 10061 0
c Var 'variant_fields_00003_00007_00008' direct represents '6' with '10062'
10059 -10061 10062 0
-10062 10061 0
-10062 -10059 0
c Var 'variant_fields_00003_00007_00008' order represents '7' with '10063'
-10061 10063 0
c Var 'variant_fields_00003_00007_00008' direct represents '7' with '10064'
10061 -10063 10064 0
-10064 10063 0
-10064 -10061 0
c Var 'variant_fields_00003_00007_00008' order represents '8' with '10065'
-10063 10065 0
c Var 'variant_fields_00003_00007_00008' direct represents '8' with '10066'
10063 -10065 10066 0
-10066 10065 0
-10066 -10063 0
c Var 'variant_fields_00003_00007_00008' direct represents '9' with '-10065'
10052 10054 10056 10058 10060 10062 10064 10066 -10065 0
c Encoding variable: variant_fields_00003_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00007_00009' order represents '1' with '10067'
c Var 'variant_fields_00003_00007_00009' direct represents '1' with '10067'
c Var 'variant_fields_00003_00007_00009' order represents '2' with '10068'
-10067 10068 0
c Var 'variant_fields_00003_00007_00009' direct represents '2' with '10069'
10067 -10068 10069 0
-10069 10068 0
-10069 -10067 0
c Var 'variant_fields_00003_00007_00009' order represents '3' with '10070'
-10068 10070 0
c Var 'variant_fields_00003_00007_00009' direct represents '3' with '10071'
10068 -10070 10071 0
-10071 10070 0
-10071 -10068 0
c Var 'variant_fields_00003_00007_00009' order represents '4' with '10072'
-10070 10072 0
c Var 'variant_fields_00003_00007_00009' direct represents '4' with '10073'
10070 -10072 10073 0
-10073 10072 0
-10073 -10070 0
c Var 'variant_fields_00003_00007_00009' order represents '5' with '10074'
-10072 10074 0
c Var 'variant_fields_00003_00007_00009' direct represents '5' with '10075'
10072 -10074 10075 0
-10075 10074 0
-10075 -10072 0
c Var 'variant_fields_00003_00007_00009' order represents '6' with '10076'
-10074 10076 0
c Var 'variant_fields_00003_00007_00009' direct represents '6' with '10077'
10074 -10076 10077 0
-10077 10076 0
-10077 -10074 0
c Var 'variant_fields_00003_00007_00009' order represents '7' with '10078'
-10076 10078 0
c Var 'variant_fields_00003_00007_00009' direct represents '7' with '10079'
10076 -10078 10079 0
-10079 10078 0
-10079 -10076 0
c Var 'variant_fields_00003_00007_00009' order represents '8' with '10080'
-10078 10080 0
c Var 'variant_fields_00003_00007_00009' direct represents '8' with '10081'
10078 -10080 10081 0
-10081 10080 0
-10081 -10078 0
c Var 'variant_fields_00003_00007_00009' direct represents '9' with '-10080'
10067 10069 10071 10073 10075 10077 10079 10081 -10080 0
c Encoding variable: variant_fields_00003_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00001' order represents '1' with '10082'
c Var 'variant_fields_00003_00008_00001' direct represents '1' with '10082'
c Var 'variant_fields_00003_00008_00001' order represents '2' with '10083'
-10082 10083 0
c Var 'variant_fields_00003_00008_00001' direct represents '2' with '10084'
10082 -10083 10084 0
-10084 10083 0
-10084 -10082 0
c Var 'variant_fields_00003_00008_00001' order represents '3' with '10085'
-10083 10085 0
c Var 'variant_fields_00003_00008_00001' direct represents '3' with '10086'
10083 -10085 10086 0
-10086 10085 0
-10086 -10083 0
c Var 'variant_fields_00003_00008_00001' order represents '4' with '10087'
-10085 10087 0
c Var 'variant_fields_00003_00008_00001' direct represents '4' with '10088'
10085 -10087 10088 0
-10088 10087 0
-10088 -10085 0
c Var 'variant_fields_00003_00008_00001' order represents '5' with '10089'
-10087 10089 0
c Var 'variant_fields_00003_00008_00001' direct represents '5' with '10090'
10087 -10089 10090 0
-10090 10089 0
-10090 -10087 0
c Var 'variant_fields_00003_00008_00001' order represents '6' with '10091'
-10089 10091 0
c Var 'variant_fields_00003_00008_00001' direct represents '6' with '10092'
10089 -10091 10092 0
-10092 10091 0
-10092 -10089 0
c Var 'variant_fields_00003_00008_00001' order represents '7' with '10093'
-10091 10093 0
c Var 'variant_fields_00003_00008_00001' direct represents '7' with '10094'
10091 -10093 10094 0
-10094 10093 0
-10094 -10091 0
c Var 'variant_fields_00003_00008_00001' order represents '8' with '10095'
-10093 10095 0
c Var 'variant_fields_00003_00008_00001' direct represents '8' with '10096'
10093 -10095 10096 0
-10096 10095 0
-10096 -10093 0
c Var 'variant_fields_00003_00008_00001' direct represents '9' with '-10095'
10082 10084 10086 10088 10090 10092 10094 10096 -10095 0
c Encoding variable: variant_fields_00003_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00002' order represents '1' with '10097'
c Var 'variant_fields_00003_00008_00002' direct represents '1' with '10097'
c Var 'variant_fields_00003_00008_00002' order represents '2' with '10098'
-10097 10098 0
c Var 'variant_fields_00003_00008_00002' direct represents '2' with '10099'
10097 -10098 10099 0
-10099 10098 0
-10099 -10097 0
c Var 'variant_fields_00003_00008_00002' order represents '3' with '10100'
-10098 10100 0
c Var 'variant_fields_00003_00008_00002' direct represents '3' with '10101'
10098 -10100 10101 0
-10101 10100 0
-10101 -10098 0
c Var 'variant_fields_00003_00008_00002' order represents '4' with '10102'
-10100 10102 0
c Var 'variant_fields_00003_00008_00002' direct represents '4' with '10103'
10100 -10102 10103 0
-10103 10102 0
-10103 -10100 0
c Var 'variant_fields_00003_00008_00002' order represents '5' with '10104'
-10102 10104 0
c Var 'variant_fields_00003_00008_00002' direct represents '5' with '10105'
10102 -10104 10105 0
-10105 10104 0
-10105 -10102 0
c Var 'variant_fields_00003_00008_00002' order represents '6' with '10106'
-10104 10106 0
c Var 'variant_fields_00003_00008_00002' direct represents '6' with '10107'
10104 -10106 10107 0
-10107 10106 0
-10107 -10104 0
c Var 'variant_fields_00003_00008_00002' order represents '7' with '10108'
-10106 10108 0
c Var 'variant_fields_00003_00008_00002' direct represents '7' with '10109'
10106 -10108 10109 0
-10109 10108 0
-10109 -10106 0
c Var 'variant_fields_00003_00008_00002' order represents '8' with '10110'
-10108 10110 0
c Var 'variant_fields_00003_00008_00002' direct represents '8' with '10111'
10108 -10110 10111 0
-10111 10110 0
-10111 -10108 0
c Var 'variant_fields_00003_00008_00002' direct represents '9' with '-10110'
10097 10099 10101 10103 10105 10107 10109 10111 -10110 0
c Encoding variable: variant_fields_00003_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00003' order represents '1' with '10112'
c Var 'variant_fields_00003_00008_00003' direct represents '1' with '10112'
c Var 'variant_fields_00003_00008_00003' order represents '2' with '10113'
-10112 10113 0
c Var 'variant_fields_00003_00008_00003' direct represents '2' with '10114'
10112 -10113 10114 0
-10114 10113 0
-10114 -10112 0
c Var 'variant_fields_00003_00008_00003' order represents '3' with '10115'
-10113 10115 0
c Var 'variant_fields_00003_00008_00003' direct represents '3' with '10116'
10113 -10115 10116 0
-10116 10115 0
-10116 -10113 0
c Var 'variant_fields_00003_00008_00003' order represents '4' with '10117'
-10115 10117 0
c Var 'variant_fields_00003_00008_00003' direct represents '4' with '10118'
10115 -10117 10118 0
-10118 10117 0
-10118 -10115 0
c Var 'variant_fields_00003_00008_00003' order represents '5' with '10119'
-10117 10119 0
c Var 'variant_fields_00003_00008_00003' direct represents '5' with '10120'
10117 -10119 10120 0
-10120 10119 0
-10120 -10117 0
c Var 'variant_fields_00003_00008_00003' order represents '6' with '10121'
-10119 10121 0
c Var 'variant_fields_00003_00008_00003' direct represents '6' with '10122'
10119 -10121 10122 0
-10122 10121 0
-10122 -10119 0
c Var 'variant_fields_00003_00008_00003' order represents '7' with '10123'
-10121 10123 0
c Var 'variant_fields_00003_00008_00003' direct represents '7' with '10124'
10121 -10123 10124 0
-10124 10123 0
-10124 -10121 0
c Var 'variant_fields_00003_00008_00003' order represents '8' with '10125'
-10123 10125 0
c Var 'variant_fields_00003_00008_00003' direct represents '8' with '10126'
10123 -10125 10126 0
-10126 10125 0
-10126 -10123 0
c Var 'variant_fields_00003_00008_00003' direct represents '9' with '-10125'
10112 10114 10116 10118 10120 10122 10124 10126 -10125 0
c Encoding variable: variant_fields_00003_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00004' order represents '1' with '10127'
c Var 'variant_fields_00003_00008_00004' direct represents '1' with '10127'
c Var 'variant_fields_00003_00008_00004' order represents '2' with '10128'
-10127 10128 0
c Var 'variant_fields_00003_00008_00004' direct represents '2' with '10129'
10127 -10128 10129 0
-10129 10128 0
-10129 -10127 0
c Var 'variant_fields_00003_00008_00004' order represents '3' with '10130'
-10128 10130 0
c Var 'variant_fields_00003_00008_00004' direct represents '3' with '10131'
10128 -10130 10131 0
-10131 10130 0
-10131 -10128 0
c Var 'variant_fields_00003_00008_00004' order represents '4' with '10132'
-10130 10132 0
c Var 'variant_fields_00003_00008_00004' direct represents '4' with '10133'
10130 -10132 10133 0
-10133 10132 0
-10133 -10130 0
c Var 'variant_fields_00003_00008_00004' order represents '5' with '10134'
-10132 10134 0
c Var 'variant_fields_00003_00008_00004' direct represents '5' with '10135'
10132 -10134 10135 0
-10135 10134 0
-10135 -10132 0
c Var 'variant_fields_00003_00008_00004' order represents '6' with '10136'
-10134 10136 0
c Var 'variant_fields_00003_00008_00004' direct represents '6' with '10137'
10134 -10136 10137 0
-10137 10136 0
-10137 -10134 0
c Var 'variant_fields_00003_00008_00004' order represents '7' with '10138'
-10136 10138 0
c Var 'variant_fields_00003_00008_00004' direct represents '7' with '10139'
10136 -10138 10139 0
-10139 10138 0
-10139 -10136 0
c Var 'variant_fields_00003_00008_00004' order represents '8' with '10140'
-10138 10140 0
c Var 'variant_fields_00003_00008_00004' direct represents '8' with '10141'
10138 -10140 10141 0
-10141 10140 0
-10141 -10138 0
c Var 'variant_fields_00003_00008_00004' direct represents '9' with '-10140'
10127 10129 10131 10133 10135 10137 10139 10141 -10140 0
c Encoding variable: variant_fields_00003_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00005' order represents '1' with '10142'
c Var 'variant_fields_00003_00008_00005' direct represents '1' with '10142'
c Var 'variant_fields_00003_00008_00005' order represents '2' with '10143'
-10142 10143 0
c Var 'variant_fields_00003_00008_00005' direct represents '2' with '10144'
10142 -10143 10144 0
-10144 10143 0
-10144 -10142 0
c Var 'variant_fields_00003_00008_00005' order represents '3' with '10145'
-10143 10145 0
c Var 'variant_fields_00003_00008_00005' direct represents '3' with '10146'
10143 -10145 10146 0
-10146 10145 0
-10146 -10143 0
c Var 'variant_fields_00003_00008_00005' order represents '4' with '10147'
-10145 10147 0
c Var 'variant_fields_00003_00008_00005' direct represents '4' with '10148'
10145 -10147 10148 0
-10148 10147 0
-10148 -10145 0
c Var 'variant_fields_00003_00008_00005' order represents '5' with '10149'
-10147 10149 0
c Var 'variant_fields_00003_00008_00005' direct represents '5' with '10150'
10147 -10149 10150 0
-10150 10149 0
-10150 -10147 0
c Var 'variant_fields_00003_00008_00005' order represents '6' with '10151'
-10149 10151 0
c Var 'variant_fields_00003_00008_00005' direct represents '6' with '10152'
10149 -10151 10152 0
-10152 10151 0
-10152 -10149 0
c Var 'variant_fields_00003_00008_00005' order represents '7' with '10153'
-10151 10153 0
c Var 'variant_fields_00003_00008_00005' direct represents '7' with '10154'
10151 -10153 10154 0
-10154 10153 0
-10154 -10151 0
c Var 'variant_fields_00003_00008_00005' order represents '8' with '10155'
-10153 10155 0
c Var 'variant_fields_00003_00008_00005' direct represents '8' with '10156'
10153 -10155 10156 0
-10156 10155 0
-10156 -10153 0
c Var 'variant_fields_00003_00008_00005' direct represents '9' with '-10155'
10142 10144 10146 10148 10150 10152 10154 10156 -10155 0
c Encoding variable: variant_fields_00003_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00006' order represents '1' with '10157'
c Var 'variant_fields_00003_00008_00006' direct represents '1' with '10157'
c Var 'variant_fields_00003_00008_00006' order represents '2' with '10158'
-10157 10158 0
c Var 'variant_fields_00003_00008_00006' direct represents '2' with '10159'
10157 -10158 10159 0
-10159 10158 0
-10159 -10157 0
c Var 'variant_fields_00003_00008_00006' order represents '3' with '10160'
-10158 10160 0
c Var 'variant_fields_00003_00008_00006' direct represents '3' with '10161'
10158 -10160 10161 0
-10161 10160 0
-10161 -10158 0
c Var 'variant_fields_00003_00008_00006' order represents '4' with '10162'
-10160 10162 0
c Var 'variant_fields_00003_00008_00006' direct represents '4' with '10163'
10160 -10162 10163 0
-10163 10162 0
-10163 -10160 0
c Var 'variant_fields_00003_00008_00006' order represents '5' with '10164'
-10162 10164 0
c Var 'variant_fields_00003_00008_00006' direct represents '5' with '10165'
10162 -10164 10165 0
-10165 10164 0
-10165 -10162 0
c Var 'variant_fields_00003_00008_00006' order represents '6' with '10166'
-10164 10166 0
c Var 'variant_fields_00003_00008_00006' direct represents '6' with '10167'
10164 -10166 10167 0
-10167 10166 0
-10167 -10164 0
c Var 'variant_fields_00003_00008_00006' order represents '7' with '10168'
-10166 10168 0
c Var 'variant_fields_00003_00008_00006' direct represents '7' with '10169'
10166 -10168 10169 0
-10169 10168 0
-10169 -10166 0
c Var 'variant_fields_00003_00008_00006' order represents '8' with '10170'
-10168 10170 0
c Var 'variant_fields_00003_00008_00006' direct represents '8' with '10171'
10168 -10170 10171 0
-10171 10170 0
-10171 -10168 0
c Var 'variant_fields_00003_00008_00006' direct represents '9' with '-10170'
10157 10159 10161 10163 10165 10167 10169 10171 -10170 0
c Encoding variable: variant_fields_00003_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00007' order represents '1' with '10172'
c Var 'variant_fields_00003_00008_00007' direct represents '1' with '10172'
c Var 'variant_fields_00003_00008_00007' order represents '2' with '10173'
-10172 10173 0
c Var 'variant_fields_00003_00008_00007' direct represents '2' with '10174'
10172 -10173 10174 0
-10174 10173 0
-10174 -10172 0
c Var 'variant_fields_00003_00008_00007' order represents '3' with '10175'
-10173 10175 0
c Var 'variant_fields_00003_00008_00007' direct represents '3' with '10176'
10173 -10175 10176 0
-10176 10175 0
-10176 -10173 0
c Var 'variant_fields_00003_00008_00007' order represents '4' with '10177'
-10175 10177 0
c Var 'variant_fields_00003_00008_00007' direct represents '4' with '10178'
10175 -10177 10178 0
-10178 10177 0
-10178 -10175 0
c Var 'variant_fields_00003_00008_00007' order represents '5' with '10179'
-10177 10179 0
c Var 'variant_fields_00003_00008_00007' direct represents '5' with '10180'
10177 -10179 10180 0
-10180 10179 0
-10180 -10177 0
c Var 'variant_fields_00003_00008_00007' order represents '6' with '10181'
-10179 10181 0
c Var 'variant_fields_00003_00008_00007' direct represents '6' with '10182'
10179 -10181 10182 0
-10182 10181 0
-10182 -10179 0
c Var 'variant_fields_00003_00008_00007' order represents '7' with '10183'
-10181 10183 0
c Var 'variant_fields_00003_00008_00007' direct represents '7' with '10184'
10181 -10183 10184 0
-10184 10183 0
-10184 -10181 0
c Var 'variant_fields_00003_00008_00007' order represents '8' with '10185'
-10183 10185 0
c Var 'variant_fields_00003_00008_00007' direct represents '8' with '10186'
10183 -10185 10186 0
-10186 10185 0
-10186 -10183 0
c Var 'variant_fields_00003_00008_00007' direct represents '9' with '-10185'
10172 10174 10176 10178 10180 10182 10184 10186 -10185 0
c Encoding variable: variant_fields_00003_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00008' order represents '1' with '10187'
c Var 'variant_fields_00003_00008_00008' direct represents '1' with '10187'
c Var 'variant_fields_00003_00008_00008' order represents '2' with '10188'
-10187 10188 0
c Var 'variant_fields_00003_00008_00008' direct represents '2' with '10189'
10187 -10188 10189 0
-10189 10188 0
-10189 -10187 0
c Var 'variant_fields_00003_00008_00008' order represents '3' with '10190'
-10188 10190 0
c Var 'variant_fields_00003_00008_00008' direct represents '3' with '10191'
10188 -10190 10191 0
-10191 10190 0
-10191 -10188 0
c Var 'variant_fields_00003_00008_00008' order represents '4' with '10192'
-10190 10192 0
c Var 'variant_fields_00003_00008_00008' direct represents '4' with '10193'
10190 -10192 10193 0
-10193 10192 0
-10193 -10190 0
c Var 'variant_fields_00003_00008_00008' order represents '5' with '10194'
-10192 10194 0
c Var 'variant_fields_00003_00008_00008' direct represents '5' with '10195'
10192 -10194 10195 0
-10195 10194 0
-10195 -10192 0
c Var 'variant_fields_00003_00008_00008' order represents '6' with '10196'
-10194 10196 0
c Var 'variant_fields_00003_00008_00008' direct represents '6' with '10197'
10194 -10196 10197 0
-10197 10196 0
-10197 -10194 0
c Var 'variant_fields_00003_00008_00008' order represents '7' with '10198'
-10196 10198 0
c Var 'variant_fields_00003_00008_00008' direct represents '7' with '10199'
10196 -10198 10199 0
-10199 10198 0
-10199 -10196 0
c Var 'variant_fields_00003_00008_00008' order represents '8' with '10200'
-10198 10200 0
c Var 'variant_fields_00003_00008_00008' direct represents '8' with '10201'
10198 -10200 10201 0
-10201 10200 0
-10201 -10198 0
c Var 'variant_fields_00003_00008_00008' direct represents '9' with '-10200'
10187 10189 10191 10193 10195 10197 10199 10201 -10200 0
c Encoding variable: variant_fields_00003_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00009' order represents '1' with '10202'
c Var 'variant_fields_00003_00008_00009' direct represents '1' with '10202'
c Var 'variant_fields_00003_00008_00009' order represents '2' with '10203'
-10202 10203 0
c Var 'variant_fields_00003_00008_00009' direct represents '2' with '10204'
10202 -10203 10204 0
-10204 10203 0
-10204 -10202 0
c Var 'variant_fields_00003_00008_00009' order represents '3' with '10205'
-10203 10205 0
c Var 'variant_fields_00003_00008_00009' direct represents '3' with '10206'
10203 -10205 10206 0
-10206 10205 0
-10206 -10203 0
c Var 'variant_fields_00003_00008_00009' order represents '4' with '10207'
-10205 10207 0
c Var 'variant_fields_00003_00008_00009' direct represents '4' with '10208'
10205 -10207 10208 0
-10208 10207 0
-10208 -10205 0
c Var 'variant_fields_00003_00008_00009' order represents '5' with '10209'
-10207 10209 0
c Var 'variant_fields_00003_00008_00009' direct represents '5' with '10210'
10207 -10209 10210 0
-10210 10209 0
-10210 -10207 0
c Var 'variant_fields_00003_00008_00009' order represents '6' with '10211'
-10209 10211 0
c Var 'variant_fields_00003_00008_00009' direct represents '6' with '10212'
10209 -10211 10212 0
-10212 10211 0
-10212 -10209 0
c Var 'variant_fields_00003_00008_00009' order represents '7' with '10213'
-10211 10213 0
c Var 'variant_fields_00003_00008_00009' direct represents '7' with '10214'
10211 -10213 10214 0
-10214 10213 0
-10214 -10211 0
c Var 'variant_fields_00003_00008_00009' order represents '8' with '10215'
-10213 10215 0
c Var 'variant_fields_00003_00008_00009' direct represents '8' with '10216'
10213 -10215 10216 0
-10216 10215 0
-10216 -10213 0
c Var 'variant_fields_00003_00008_00009' direct represents '9' with '-10215'
10202 10204 10206 10208 10210 10212 10214 10216 -10215 0
c Encoding variable: variant_fields_00003_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00001' order represents '1' with '10217'
c Var 'variant_fields_00003_00009_00001' direct represents '1' with '10217'
c Var 'variant_fields_00003_00009_00001' order represents '2' with '10218'
-10217 10218 0
c Var 'variant_fields_00003_00009_00001' direct represents '2' with '10219'
10217 -10218 10219 0
-10219 10218 0
-10219 -10217 0
c Var 'variant_fields_00003_00009_00001' order represents '3' with '10220'
-10218 10220 0
c Var 'variant_fields_00003_00009_00001' direct represents '3' with '10221'
10218 -10220 10221 0
-10221 10220 0
-10221 -10218 0
c Var 'variant_fields_00003_00009_00001' order represents '4' with '10222'
-10220 10222 0
c Var 'variant_fields_00003_00009_00001' direct represents '4' with '10223'
10220 -10222 10223 0
-10223 10222 0
-10223 -10220 0
c Var 'variant_fields_00003_00009_00001' order represents '5' with '10224'
-10222 10224 0
c Var 'variant_fields_00003_00009_00001' direct represents '5' with '10225'
10222 -10224 10225 0
-10225 10224 0
-10225 -10222 0
c Var 'variant_fields_00003_00009_00001' order represents '6' with '10226'
-10224 10226 0
c Var 'variant_fields_00003_00009_00001' direct represents '6' with '10227'
10224 -10226 10227 0
-10227 10226 0
-10227 -10224 0
c Var 'variant_fields_00003_00009_00001' order represents '7' with '10228'
-10226 10228 0
c Var 'variant_fields_00003_00009_00001' direct represents '7' with '10229'
10226 -10228 10229 0
-10229 10228 0
-10229 -10226 0
c Var 'variant_fields_00003_00009_00001' order represents '8' with '10230'
-10228 10230 0
c Var 'variant_fields_00003_00009_00001' direct represents '8' with '10231'
10228 -10230 10231 0
-10231 10230 0
-10231 -10228 0
c Var 'variant_fields_00003_00009_00001' direct represents '9' with '-10230'
10217 10219 10221 10223 10225 10227 10229 10231 -10230 0
c Encoding variable: variant_fields_00003_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00002' order represents '1' with '10232'
c Var 'variant_fields_00003_00009_00002' direct represents '1' with '10232'
c Var 'variant_fields_00003_00009_00002' order represents '2' with '10233'
-10232 10233 0
c Var 'variant_fields_00003_00009_00002' direct represents '2' with '10234'
10232 -10233 10234 0
-10234 10233 0
-10234 -10232 0
c Var 'variant_fields_00003_00009_00002' order represents '3' with '10235'
-10233 10235 0
c Var 'variant_fields_00003_00009_00002' direct represents '3' with '10236'
10233 -10235 10236 0
-10236 10235 0
-10236 -10233 0
c Var 'variant_fields_00003_00009_00002' order represents '4' with '10237'
-10235 10237 0
c Var 'variant_fields_00003_00009_00002' direct represents '4' with '10238'
10235 -10237 10238 0
-10238 10237 0
-10238 -10235 0
c Var 'variant_fields_00003_00009_00002' order represents '5' with '10239'
-10237 10239 0
c Var 'variant_fields_00003_00009_00002' direct represents '5' with '10240'
10237 -10239 10240 0
-10240 10239 0
-10240 -10237 0
c Var 'variant_fields_00003_00009_00002' order represents '6' with '10241'
-10239 10241 0
c Var 'variant_fields_00003_00009_00002' direct represents '6' with '10242'
10239 -10241 10242 0
-10242 10241 0
-10242 -10239 0
c Var 'variant_fields_00003_00009_00002' order represents '7' with '10243'
-10241 10243 0
c Var 'variant_fields_00003_00009_00002' direct represents '7' with '10244'
10241 -10243 10244 0
-10244 10243 0
-10244 -10241 0
c Var 'variant_fields_00003_00009_00002' order represents '8' with '10245'
-10243 10245 0
c Var 'variant_fields_00003_00009_00002' direct represents '8' with '10246'
10243 -10245 10246 0
-10246 10245 0
-10246 -10243 0
c Var 'variant_fields_00003_00009_00002' direct represents '9' with '-10245'
10232 10234 10236 10238 10240 10242 10244 10246 -10245 0
c Encoding variable: variant_fields_00003_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00003' order represents '1' with '10247'
c Var 'variant_fields_00003_00009_00003' direct represents '1' with '10247'
c Var 'variant_fields_00003_00009_00003' order represents '2' with '10248'
-10247 10248 0
c Var 'variant_fields_00003_00009_00003' direct represents '2' with '10249'
10247 -10248 10249 0
-10249 10248 0
-10249 -10247 0
c Var 'variant_fields_00003_00009_00003' order represents '3' with '10250'
-10248 10250 0
c Var 'variant_fields_00003_00009_00003' direct represents '3' with '10251'
10248 -10250 10251 0
-10251 10250 0
-10251 -10248 0
c Var 'variant_fields_00003_00009_00003' order represents '4' with '10252'
-10250 10252 0
c Var 'variant_fields_00003_00009_00003' direct represents '4' with '10253'
10250 -10252 10253 0
-10253 10252 0
-10253 -10250 0
c Var 'variant_fields_00003_00009_00003' order represents '5' with '10254'
-10252 10254 0
c Var 'variant_fields_00003_00009_00003' direct represents '5' with '10255'
10252 -10254 10255 0
-10255 10254 0
-10255 -10252 0
c Var 'variant_fields_00003_00009_00003' order represents '6' with '10256'
-10254 10256 0
c Var 'variant_fields_00003_00009_00003' direct represents '6' with '10257'
10254 -10256 10257 0
-10257 10256 0
-10257 -10254 0
c Var 'variant_fields_00003_00009_00003' order represents '7' with '10258'
-10256 10258 0
c Var 'variant_fields_00003_00009_00003' direct represents '7' with '10259'
10256 -10258 10259 0
-10259 10258 0
-10259 -10256 0
c Var 'variant_fields_00003_00009_00003' order represents '8' with '10260'
-10258 10260 0
c Var 'variant_fields_00003_00009_00003' direct represents '8' with '10261'
10258 -10260 10261 0
-10261 10260 0
-10261 -10258 0
c Var 'variant_fields_00003_00009_00003' direct represents '9' with '-10260'
10247 10249 10251 10253 10255 10257 10259 10261 -10260 0
c Encoding variable: variant_fields_00003_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00004' order represents '1' with '10262'
c Var 'variant_fields_00003_00009_00004' direct represents '1' with '10262'
c Var 'variant_fields_00003_00009_00004' order represents '2' with '10263'
-10262 10263 0
c Var 'variant_fields_00003_00009_00004' direct represents '2' with '10264'
10262 -10263 10264 0
-10264 10263 0
-10264 -10262 0
c Var 'variant_fields_00003_00009_00004' order represents '3' with '10265'
-10263 10265 0
c Var 'variant_fields_00003_00009_00004' direct represents '3' with '10266'
10263 -10265 10266 0
-10266 10265 0
-10266 -10263 0
c Var 'variant_fields_00003_00009_00004' order represents '4' with '10267'
-10265 10267 0
c Var 'variant_fields_00003_00009_00004' direct represents '4' with '10268'
10265 -10267 10268 0
-10268 10267 0
-10268 -10265 0
c Var 'variant_fields_00003_00009_00004' order represents '5' with '10269'
-10267 10269 0
c Var 'variant_fields_00003_00009_00004' direct represents '5' with '10270'
10267 -10269 10270 0
-10270 10269 0
-10270 -10267 0
c Var 'variant_fields_00003_00009_00004' order represents '6' with '10271'
-10269 10271 0
c Var 'variant_fields_00003_00009_00004' direct represents '6' with '10272'
10269 -10271 10272 0
-10272 10271 0
-10272 -10269 0
c Var 'variant_fields_00003_00009_00004' order represents '7' with '10273'
-10271 10273 0
c Var 'variant_fields_00003_00009_00004' direct represents '7' with '10274'
10271 -10273 10274 0
-10274 10273 0
-10274 -10271 0
c Var 'variant_fields_00003_00009_00004' order represents '8' with '10275'
-10273 10275 0
c Var 'variant_fields_00003_00009_00004' direct represents '8' with '10276'
10273 -10275 10276 0
-10276 10275 0
-10276 -10273 0
c Var 'variant_fields_00003_00009_00004' direct represents '9' with '-10275'
10262 10264 10266 10268 10270 10272 10274 10276 -10275 0
c Encoding variable: variant_fields_00003_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00005' order represents '1' with '10277'
c Var 'variant_fields_00003_00009_00005' direct represents '1' with '10277'
c Var 'variant_fields_00003_00009_00005' order represents '2' with '10278'
-10277 10278 0
c Var 'variant_fields_00003_00009_00005' direct represents '2' with '10279'
10277 -10278 10279 0
-10279 10278 0
-10279 -10277 0
c Var 'variant_fields_00003_00009_00005' order represents '3' with '10280'
-10278 10280 0
c Var 'variant_fields_00003_00009_00005' direct represents '3' with '10281'
10278 -10280 10281 0
-10281 10280 0
-10281 -10278 0
c Var 'variant_fields_00003_00009_00005' order represents '4' with '10282'
-10280 10282 0
c Var 'variant_fields_00003_00009_00005' direct represents '4' with '10283'
10280 -10282 10283 0
-10283 10282 0
-10283 -10280 0
c Var 'variant_fields_00003_00009_00005' order represents '5' with '10284'
-10282 10284 0
c Var 'variant_fields_00003_00009_00005' direct represents '5' with '10285'
10282 -10284 10285 0
-10285 10284 0
-10285 -10282 0
c Var 'variant_fields_00003_00009_00005' order represents '6' with '10286'
-10284 10286 0
c Var 'variant_fields_00003_00009_00005' direct represents '6' with '10287'
10284 -10286 10287 0
-10287 10286 0
-10287 -10284 0
c Var 'variant_fields_00003_00009_00005' order represents '7' with '10288'
-10286 10288 0
c Var 'variant_fields_00003_00009_00005' direct represents '7' with '10289'
10286 -10288 10289 0
-10289 10288 0
-10289 -10286 0
c Var 'variant_fields_00003_00009_00005' order represents '8' with '10290'
-10288 10290 0
c Var 'variant_fields_00003_00009_00005' direct represents '8' with '10291'
10288 -10290 10291 0
-10291 10290 0
-10291 -10288 0
c Var 'variant_fields_00003_00009_00005' direct represents '9' with '-10290'
10277 10279 10281 10283 10285 10287 10289 10291 -10290 0
c Encoding variable: variant_fields_00003_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00006' order represents '1' with '10292'
c Var 'variant_fields_00003_00009_00006' direct represents '1' with '10292'
c Var 'variant_fields_00003_00009_00006' order represents '2' with '10293'
-10292 10293 0
c Var 'variant_fields_00003_00009_00006' direct represents '2' with '10294'
10292 -10293 10294 0
-10294 10293 0
-10294 -10292 0
c Var 'variant_fields_00003_00009_00006' order represents '3' with '10295'
-10293 10295 0
c Var 'variant_fields_00003_00009_00006' direct represents '3' with '10296'
10293 -10295 10296 0
-10296 10295 0
-10296 -10293 0
c Var 'variant_fields_00003_00009_00006' order represents '4' with '10297'
-10295 10297 0
c Var 'variant_fields_00003_00009_00006' direct represents '4' with '10298'
10295 -10297 10298 0
-10298 10297 0
-10298 -10295 0
c Var 'variant_fields_00003_00009_00006' order represents '5' with '10299'
-10297 10299 0
c Var 'variant_fields_00003_00009_00006' direct represents '5' with '10300'
10297 -10299 10300 0
-10300 10299 0
-10300 -10297 0
c Var 'variant_fields_00003_00009_00006' order represents '6' with '10301'
-10299 10301 0
c Var 'variant_fields_00003_00009_00006' direct represents '6' with '10302'
10299 -10301 10302 0
-10302 10301 0
-10302 -10299 0
c Var 'variant_fields_00003_00009_00006' order represents '7' with '10303'
-10301 10303 0
c Var 'variant_fields_00003_00009_00006' direct represents '7' with '10304'
10301 -10303 10304 0
-10304 10303 0
-10304 -10301 0
c Var 'variant_fields_00003_00009_00006' order represents '8' with '10305'
-10303 10305 0
c Var 'variant_fields_00003_00009_00006' direct represents '8' with '10306'
10303 -10305 10306 0
-10306 10305 0
-10306 -10303 0
c Var 'variant_fields_00003_00009_00006' direct represents '9' with '-10305'
10292 10294 10296 10298 10300 10302 10304 10306 -10305 0
c Encoding variable: variant_fields_00003_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00007' order represents '1' with '10307'
c Var 'variant_fields_00003_00009_00007' direct represents '1' with '10307'
c Var 'variant_fields_00003_00009_00007' order represents '2' with '10308'
-10307 10308 0
c Var 'variant_fields_00003_00009_00007' direct represents '2' with '10309'
10307 -10308 10309 0
-10309 10308 0
-10309 -10307 0
c Var 'variant_fields_00003_00009_00007' order represents '3' with '10310'
-10308 10310 0
c Var 'variant_fields_00003_00009_00007' direct represents '3' with '10311'
10308 -10310 10311 0
-10311 10310 0
-10311 -10308 0
c Var 'variant_fields_00003_00009_00007' order represents '4' with '10312'
-10310 10312 0
c Var 'variant_fields_00003_00009_00007' direct represents '4' with '10313'
10310 -10312 10313 0
-10313 10312 0
-10313 -10310 0
c Var 'variant_fields_00003_00009_00007' order represents '5' with '10314'
-10312 10314 0
c Var 'variant_fields_00003_00009_00007' direct represents '5' with '10315'
10312 -10314 10315 0
-10315 10314 0
-10315 -10312 0
c Var 'variant_fields_00003_00009_00007' order represents '6' with '10316'
-10314 10316 0
c Var 'variant_fields_00003_00009_00007' direct represents '6' with '10317'
10314 -10316 10317 0
-10317 10316 0
-10317 -10314 0
c Var 'variant_fields_00003_00009_00007' order represents '7' with '10318'
-10316 10318 0
c Var 'variant_fields_00003_00009_00007' direct represents '7' with '10319'
10316 -10318 10319 0
-10319 10318 0
-10319 -10316 0
c Var 'variant_fields_00003_00009_00007' order represents '8' with '10320'
-10318 10320 0
c Var 'variant_fields_00003_00009_00007' direct represents '8' with '10321'
10318 -10320 10321 0
-10321 10320 0
-10321 -10318 0
c Var 'variant_fields_00003_00009_00007' direct represents '9' with '-10320'
10307 10309 10311 10313 10315 10317 10319 10321 -10320 0
c Encoding variable: variant_fields_00003_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00008' order represents '1' with '10322'
c Var 'variant_fields_00003_00009_00008' direct represents '1' with '10322'
c Var 'variant_fields_00003_00009_00008' order represents '2' with '10323'
-10322 10323 0
c Var 'variant_fields_00003_00009_00008' direct represents '2' with '10324'
10322 -10323 10324 0
-10324 10323 0
-10324 -10322 0
c Var 'variant_fields_00003_00009_00008' order represents '3' with '10325'
-10323 10325 0
c Var 'variant_fields_00003_00009_00008' direct represents '3' with '10326'
10323 -10325 10326 0
-10326 10325 0
-10326 -10323 0
c Var 'variant_fields_00003_00009_00008' order represents '4' with '10327'
-10325 10327 0
c Var 'variant_fields_00003_00009_00008' direct represents '4' with '10328'
10325 -10327 10328 0
-10328 10327 0
-10328 -10325 0
c Var 'variant_fields_00003_00009_00008' order represents '5' with '10329'
-10327 10329 0
c Var 'variant_fields_00003_00009_00008' direct represents '5' with '10330'
10327 -10329 10330 0
-10330 10329 0
-10330 -10327 0
c Var 'variant_fields_00003_00009_00008' order represents '6' with '10331'
-10329 10331 0
c Var 'variant_fields_00003_00009_00008' direct represents '6' with '10332'
10329 -10331 10332 0
-10332 10331 0
-10332 -10329 0
c Var 'variant_fields_00003_00009_00008' order represents '7' with '10333'
-10331 10333 0
c Var 'variant_fields_00003_00009_00008' direct represents '7' with '10334'
10331 -10333 10334 0
-10334 10333 0
-10334 -10331 0
c Var 'variant_fields_00003_00009_00008' order represents '8' with '10335'
-10333 10335 0
c Var 'variant_fields_00003_00009_00008' direct represents '8' with '10336'
10333 -10335 10336 0
-10336 10335 0
-10336 -10333 0
c Var 'variant_fields_00003_00009_00008' direct represents '9' with '-10335'
10322 10324 10326 10328 10330 10332 10334 10336 -10335 0
c Encoding variable: variant_fields_00003_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00009_00009' order represents '1' with '10337'
c Var 'variant_fields_00003_00009_00009' direct represents '1' with '10337'
c Var 'variant_fields_00003_00009_00009' order represents '2' with '10338'
-10337 10338 0
c Var 'variant_fields_00003_00009_00009' direct represents '2' with '10339'
10337 -10338 10339 0
-10339 10338 0
-10339 -10337 0
c Var 'variant_fields_00003_00009_00009' order represents '3' with '10340'
-10338 10340 0
c Var 'variant_fields_00003_00009_00009' direct represents '3' with '10341'
10338 -10340 10341 0
-10341 10340 0
-10341 -10338 0
c Var 'variant_fields_00003_00009_00009' order represents '4' with '10342'
-10340 10342 0
c Var 'variant_fields_00003_00009_00009' direct represents '4' with '10343'
10340 -10342 10343 0
-10343 10342 0
-10343 -10340 0
c Var 'variant_fields_00003_00009_00009' order represents '5' with '10344'
-10342 10344 0
c Var 'variant_fields_00003_00009_00009' direct represents '5' with '10345'
10342 -10344 10345 0
-10345 10344 0
-10345 -10342 0
c Var 'variant_fields_00003_00009_00009' order represents '6' with '10346'
-10344 10346 0
c Var 'variant_fields_00003_00009_00009' direct represents '6' with '10347'
10344 -10346 10347 0
-10347 10346 0
-10347 -10344 0
c Var 'variant_fields_00003_00009_00009' order represents '7' with '10348'
-10346 10348 0
c Var 'variant_fields_00003_00009_00009' direct represents '7' with '10349'
10346 -10348 10349 0
-10349 10348 0
-10349 -10346 0
c Var 'variant_fields_00003_00009_00009' order represents '8' with '10350'
-10348 10350 0
c Var 'variant_fields_00003_00009_00009' direct represents '8' with '10351'
10348 -10350 10351 0
-10351 10350 0
-10351 -10348 0
c Var 'variant_fields_00003_00009_00009' direct represents '9' with '-10350'
10337 10339 10341 10343 10345 10347 10349 10351 -10350 0
c Encoding variable: variant_fields_00004_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00001' order represents '1' with '10352'
c Var 'variant_fields_00004_00001_00001' direct represents '1' with '10352'
c Var 'variant_fields_00004_00001_00001' order represents '2' with '10353'
-10352 10353 0
c Var 'variant_fields_00004_00001_00001' direct represents '2' with '10354'
10352 -10353 10354 0
-10354 10353 0
-10354 -10352 0
c Var 'variant_fields_00004_00001_00001' order represents '3' with '10355'
-10353 10355 0
c Var 'variant_fields_00004_00001_00001' direct represents '3' with '10356'
10353 -10355 10356 0
-10356 10355 0
-10356 -10353 0
c Var 'variant_fields_00004_00001_00001' order represents '4' with '10357'
-10355 10357 0
c Var 'variant_fields_00004_00001_00001' direct represents '4' with '10358'
10355 -10357 10358 0
-10358 10357 0
-10358 -10355 0
c Var 'variant_fields_00004_00001_00001' order represents '5' with '10359'
-10357 10359 0
c Var 'variant_fields_00004_00001_00001' direct represents '5' with '10360'
10357 -10359 10360 0
-10360 10359 0
-10360 -10357 0
c Var 'variant_fields_00004_00001_00001' order represents '6' with '10361'
-10359 10361 0
c Var 'variant_fields_00004_00001_00001' direct represents '6' with '10362'
10359 -10361 10362 0
-10362 10361 0
-10362 -10359 0
c Var 'variant_fields_00004_00001_00001' order represents '7' with '10363'
-10361 10363 0
c Var 'variant_fields_00004_00001_00001' direct represents '7' with '10364'
10361 -10363 10364 0
-10364 10363 0
-10364 -10361 0
c Var 'variant_fields_00004_00001_00001' order represents '8' with '10365'
-10363 10365 0
c Var 'variant_fields_00004_00001_00001' direct represents '8' with '10366'
10363 -10365 10366 0
-10366 10365 0
-10366 -10363 0
c Var 'variant_fields_00004_00001_00001' direct represents '9' with '-10365'
10352 10354 10356 10358 10360 10362 10364 10366 -10365 0
c Encoding variable: variant_fields_00004_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00002' order represents '1' with '10367'
c Var 'variant_fields_00004_00001_00002' direct represents '1' with '10367'
c Var 'variant_fields_00004_00001_00002' order represents '2' with '10368'
-10367 10368 0
c Var 'variant_fields_00004_00001_00002' direct represents '2' with '10369'
10367 -10368 10369 0
-10369 10368 0
-10369 -10367 0
c Var 'variant_fields_00004_00001_00002' order represents '3' with '10370'
-10368 10370 0
c Var 'variant_fields_00004_00001_00002' direct represents '3' with '10371'
10368 -10370 10371 0
-10371 10370 0
-10371 -10368 0
c Var 'variant_fields_00004_00001_00002' order represents '4' with '10372'
-10370 10372 0
c Var 'variant_fields_00004_00001_00002' direct represents '4' with '10373'
10370 -10372 10373 0
-10373 10372 0
-10373 -10370 0
c Var 'variant_fields_00004_00001_00002' order represents '5' with '10374'
-10372 10374 0
c Var 'variant_fields_00004_00001_00002' direct represents '5' with '10375'
10372 -10374 10375 0
-10375 10374 0
-10375 -10372 0
c Var 'variant_fields_00004_00001_00002' order represents '6' with '10376'
-10374 10376 0
c Var 'variant_fields_00004_00001_00002' direct represents '6' with '10377'
10374 -10376 10377 0
-10377 10376 0
-10377 -10374 0
c Var 'variant_fields_00004_00001_00002' order represents '7' with '10378'
-10376 10378 0
c Var 'variant_fields_00004_00001_00002' direct represents '7' with '10379'
10376 -10378 10379 0
-10379 10378 0
-10379 -10376 0
c Var 'variant_fields_00004_00001_00002' order represents '8' with '10380'
-10378 10380 0
c Var 'variant_fields_00004_00001_00002' direct represents '8' with '10381'
10378 -10380 10381 0
-10381 10380 0
-10381 -10378 0
c Var 'variant_fields_00004_00001_00002' direct represents '9' with '-10380'
10367 10369 10371 10373 10375 10377 10379 10381 -10380 0
c Encoding variable: variant_fields_00004_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00003' order represents '1' with '10382'
c Var 'variant_fields_00004_00001_00003' direct represents '1' with '10382'
c Var 'variant_fields_00004_00001_00003' order represents '2' with '10383'
-10382 10383 0
c Var 'variant_fields_00004_00001_00003' direct represents '2' with '10384'
10382 -10383 10384 0
-10384 10383 0
-10384 -10382 0
c Var 'variant_fields_00004_00001_00003' order represents '3' with '10385'
-10383 10385 0
c Var 'variant_fields_00004_00001_00003' direct represents '3' with '10386'
10383 -10385 10386 0
-10386 10385 0
-10386 -10383 0
c Var 'variant_fields_00004_00001_00003' order represents '4' with '10387'
-10385 10387 0
c Var 'variant_fields_00004_00001_00003' direct represents '4' with '10388'
10385 -10387 10388 0
-10388 10387 0
-10388 -10385 0
c Var 'variant_fields_00004_00001_00003' order represents '5' with '10389'
-10387 10389 0
c Var 'variant_fields_00004_00001_00003' direct represents '5' with '10390'
10387 -10389 10390 0
-10390 10389 0
-10390 -10387 0
c Var 'variant_fields_00004_00001_00003' order represents '6' with '10391'
-10389 10391 0
c Var 'variant_fields_00004_00001_00003' direct represents '6' with '10392'
10389 -10391 10392 0
-10392 10391 0
-10392 -10389 0
c Var 'variant_fields_00004_00001_00003' order represents '7' with '10393'
-10391 10393 0
c Var 'variant_fields_00004_00001_00003' direct represents '7' with '10394'
10391 -10393 10394 0
-10394 10393 0
-10394 -10391 0
c Var 'variant_fields_00004_00001_00003' order represents '8' with '10395'
-10393 10395 0
c Var 'variant_fields_00004_00001_00003' direct represents '8' with '10396'
10393 -10395 10396 0
-10396 10395 0
-10396 -10393 0
c Var 'variant_fields_00004_00001_00003' direct represents '9' with '-10395'
10382 10384 10386 10388 10390 10392 10394 10396 -10395 0
c Encoding variable: variant_fields_00004_00001_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00004' order represents '1' with '10397'
c Var 'variant_fields_00004_00001_00004' direct represents '1' with '10397'
c Var 'variant_fields_00004_00001_00004' order represents '2' with '10398'
-10397 10398 0
c Var 'variant_fields_00004_00001_00004' direct represents '2' with '10399'
10397 -10398 10399 0
-10399 10398 0
-10399 -10397 0
c Var 'variant_fields_00004_00001_00004' order represents '3' with '10400'
-10398 10400 0
c Var 'variant_fields_00004_00001_00004' direct represents '3' with '10401'
10398 -10400 10401 0
-10401 10400 0
-10401 -10398 0
c Var 'variant_fields_00004_00001_00004' order represents '4' with '10402'
-10400 10402 0
c Var 'variant_fields_00004_00001_00004' direct represents '4' with '10403'
10400 -10402 10403 0
-10403 10402 0
-10403 -10400 0
c Var 'variant_fields_00004_00001_00004' order represents '5' with '10404'
-10402 10404 0
c Var 'variant_fields_00004_00001_00004' direct represents '5' with '10405'
10402 -10404 10405 0
-10405 10404 0
-10405 -10402 0
c Var 'variant_fields_00004_00001_00004' order represents '6' with '10406'
-10404 10406 0
c Var 'variant_fields_00004_00001_00004' direct represents '6' with '10407'
10404 -10406 10407 0
-10407 10406 0
-10407 -10404 0
c Var 'variant_fields_00004_00001_00004' order represents '7' with '10408'
-10406 10408 0
c Var 'variant_fields_00004_00001_00004' direct represents '7' with '10409'
10406 -10408 10409 0
-10409 10408 0
-10409 -10406 0
c Var 'variant_fields_00004_00001_00004' order represents '8' with '10410'
-10408 10410 0
c Var 'variant_fields_00004_00001_00004' direct represents '8' with '10411'
10408 -10410 10411 0
-10411 10410 0
-10411 -10408 0
c Var 'variant_fields_00004_00001_00004' direct represents '9' with '-10410'
10397 10399 10401 10403 10405 10407 10409 10411 -10410 0
c Encoding variable: variant_fields_00004_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00005' order represents '1' with '10412'
c Var 'variant_fields_00004_00001_00005' direct represents '1' with '10412'
c Var 'variant_fields_00004_00001_00005' order represents '2' with '10413'
-10412 10413 0
c Var 'variant_fields_00004_00001_00005' direct represents '2' with '10414'
10412 -10413 10414 0
-10414 10413 0
-10414 -10412 0
c Var 'variant_fields_00004_00001_00005' order represents '3' with '10415'
-10413 10415 0
c Var 'variant_fields_00004_00001_00005' direct represents '3' with '10416'
10413 -10415 10416 0
-10416 10415 0
-10416 -10413 0
c Var 'variant_fields_00004_00001_00005' order represents '4' with '10417'
-10415 10417 0
c Var 'variant_fields_00004_00001_00005' direct represents '4' with '10418'
10415 -10417 10418 0
-10418 10417 0
-10418 -10415 0
c Var 'variant_fields_00004_00001_00005' order represents '5' with '10419'
-10417 10419 0
c Var 'variant_fields_00004_00001_00005' direct represents '5' with '10420'
10417 -10419 10420 0
-10420 10419 0
-10420 -10417 0
c Var 'variant_fields_00004_00001_00005' order represents '6' with '10421'
-10419 10421 0
c Var 'variant_fields_00004_00001_00005' direct represents '6' with '10422'
10419 -10421 10422 0
-10422 10421 0
-10422 -10419 0
c Var 'variant_fields_00004_00001_00005' order represents '7' with '10423'
-10421 10423 0
c Var 'variant_fields_00004_00001_00005' direct represents '7' with '10424'
10421 -10423 10424 0
-10424 10423 0
-10424 -10421 0
c Var 'variant_fields_00004_00001_00005' order represents '8' with '10425'
-10423 10425 0
c Var 'variant_fields_00004_00001_00005' direct represents '8' with '10426'
10423 -10425 10426 0
-10426 10425 0
-10426 -10423 0
c Var 'variant_fields_00004_00001_00005' direct represents '9' with '-10425'
10412 10414 10416 10418 10420 10422 10424 10426 -10425 0
c Encoding variable: variant_fields_00004_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00006' order represents '1' with '10427'
c Var 'variant_fields_00004_00001_00006' direct represents '1' with '10427'
c Var 'variant_fields_00004_00001_00006' order represents '2' with '10428'
-10427 10428 0
c Var 'variant_fields_00004_00001_00006' direct represents '2' with '10429'
10427 -10428 10429 0
-10429 10428 0
-10429 -10427 0
c Var 'variant_fields_00004_00001_00006' order represents '3' with '10430'
-10428 10430 0
c Var 'variant_fields_00004_00001_00006' direct represents '3' with '10431'
10428 -10430 10431 0
-10431 10430 0
-10431 -10428 0
c Var 'variant_fields_00004_00001_00006' order represents '4' with '10432'
-10430 10432 0
c Var 'variant_fields_00004_00001_00006' direct represents '4' with '10433'
10430 -10432 10433 0
-10433 10432 0
-10433 -10430 0
c Var 'variant_fields_00004_00001_00006' order represents '5' with '10434'
-10432 10434 0
c Var 'variant_fields_00004_00001_00006' direct represents '5' with '10435'
10432 -10434 10435 0
-10435 10434 0
-10435 -10432 0
c Var 'variant_fields_00004_00001_00006' order represents '6' with '10436'
-10434 10436 0
c Var 'variant_fields_00004_00001_00006' direct represents '6' with '10437'
10434 -10436 10437 0
-10437 10436 0
-10437 -10434 0
c Var 'variant_fields_00004_00001_00006' order represents '7' with '10438'
-10436 10438 0
c Var 'variant_fields_00004_00001_00006' direct represents '7' with '10439'
10436 -10438 10439 0
-10439 10438 0
-10439 -10436 0
c Var 'variant_fields_00004_00001_00006' order represents '8' with '10440'
-10438 10440 0
c Var 'variant_fields_00004_00001_00006' direct represents '8' with '10441'
10438 -10440 10441 0
-10441 10440 0
-10441 -10438 0
c Var 'variant_fields_00004_00001_00006' direct represents '9' with '-10440'
10427 10429 10431 10433 10435 10437 10439 10441 -10440 0
c Encoding variable: variant_fields_00004_00001_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00007' order represents '1' with '10442'
c Var 'variant_fields_00004_00001_00007' direct represents '1' with '10442'
c Var 'variant_fields_00004_00001_00007' order represents '2' with '10443'
-10442 10443 0
c Var 'variant_fields_00004_00001_00007' direct represents '2' with '10444'
10442 -10443 10444 0
-10444 10443 0
-10444 -10442 0
c Var 'variant_fields_00004_00001_00007' order represents '3' with '10445'
-10443 10445 0
c Var 'variant_fields_00004_00001_00007' direct represents '3' with '10446'
10443 -10445 10446 0
-10446 10445 0
-10446 -10443 0
c Var 'variant_fields_00004_00001_00007' order represents '4' with '10447'
-10445 10447 0
c Var 'variant_fields_00004_00001_00007' direct represents '4' with '10448'
10445 -10447 10448 0
-10448 10447 0
-10448 -10445 0
c Var 'variant_fields_00004_00001_00007' order represents '5' with '10449'
-10447 10449 0
c Var 'variant_fields_00004_00001_00007' direct represents '5' with '10450'
10447 -10449 10450 0
-10450 10449 0
-10450 -10447 0
c Var 'variant_fields_00004_00001_00007' order represents '6' with '10451'
-10449 10451 0
c Var 'variant_fields_00004_00001_00007' direct represents '6' with '10452'
10449 -10451 10452 0
-10452 10451 0
-10452 -10449 0
c Var 'variant_fields_00004_00001_00007' order represents '7' with '10453'
-10451 10453 0
c Var 'variant_fields_00004_00001_00007' direct represents '7' with '10454'
10451 -10453 10454 0
-10454 10453 0
-10454 -10451 0
c Var 'variant_fields_00004_00001_00007' order represents '8' with '10455'
-10453 10455 0
c Var 'variant_fields_00004_00001_00007' direct represents '8' with '10456'
10453 -10455 10456 0
-10456 10455 0
-10456 -10453 0
c Var 'variant_fields_00004_00001_00007' direct represents '9' with '-10455'
10442 10444 10446 10448 10450 10452 10454 10456 -10455 0
c Encoding variable: variant_fields_00004_00001_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00008' order represents '1' with '10457'
c Var 'variant_fields_00004_00001_00008' direct represents '1' with '10457'
c Var 'variant_fields_00004_00001_00008' order represents '2' with '10458'
-10457 10458 0
c Var 'variant_fields_00004_00001_00008' direct represents '2' with '10459'
10457 -10458 10459 0
-10459 10458 0
-10459 -10457 0
c Var 'variant_fields_00004_00001_00008' order represents '3' with '10460'
-10458 10460 0
c Var 'variant_fields_00004_00001_00008' direct represents '3' with '10461'
10458 -10460 10461 0
-10461 10460 0
-10461 -10458 0
c Var 'variant_fields_00004_00001_00008' order represents '4' with '10462'
-10460 10462 0
c Var 'variant_fields_00004_00001_00008' direct represents '4' with '10463'
10460 -10462 10463 0
-10463 10462 0
-10463 -10460 0
c Var 'variant_fields_00004_00001_00008' order represents '5' with '10464'
-10462 10464 0
c Var 'variant_fields_00004_00001_00008' direct represents '5' with '10465'
10462 -10464 10465 0
-10465 10464 0
-10465 -10462 0
c Var 'variant_fields_00004_00001_00008' order represents '6' with '10466'
-10464 10466 0
c Var 'variant_fields_00004_00001_00008' direct represents '6' with '10467'
10464 -10466 10467 0
-10467 10466 0
-10467 -10464 0
c Var 'variant_fields_00004_00001_00008' order represents '7' with '10468'
-10466 10468 0
c Var 'variant_fields_00004_00001_00008' direct represents '7' with '10469'
10466 -10468 10469 0
-10469 10468 0
-10469 -10466 0
c Var 'variant_fields_00004_00001_00008' order represents '8' with '10470'
-10468 10470 0
c Var 'variant_fields_00004_00001_00008' direct represents '8' with '10471'
10468 -10470 10471 0
-10471 10470 0
-10471 -10468 0
c Var 'variant_fields_00004_00001_00008' direct represents '9' with '-10470'
10457 10459 10461 10463 10465 10467 10469 10471 -10470 0
c Encoding variable: variant_fields_00004_00001_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00001_00009' order represents '1' with '10472'
c Var 'variant_fields_00004_00001_00009' direct represents '1' with '10472'
c Var 'variant_fields_00004_00001_00009' order represents '2' with '10473'
-10472 10473 0
c Var 'variant_fields_00004_00001_00009' direct represents '2' with '10474'
10472 -10473 10474 0
-10474 10473 0
-10474 -10472 0
c Var 'variant_fields_00004_00001_00009' order represents '3' with '10475'
-10473 10475 0
c Var 'variant_fields_00004_00001_00009' direct represents '3' with '10476'
10473 -10475 10476 0
-10476 10475 0
-10476 -10473 0
c Var 'variant_fields_00004_00001_00009' order represents '4' with '10477'
-10475 10477 0
c Var 'variant_fields_00004_00001_00009' direct represents '4' with '10478'
10475 -10477 10478 0
-10478 10477 0
-10478 -10475 0
c Var 'variant_fields_00004_00001_00009' order represents '5' with '10479'
-10477 10479 0
c Var 'variant_fields_00004_00001_00009' direct represents '5' with '10480'
10477 -10479 10480 0
-10480 10479 0
-10480 -10477 0
c Var 'variant_fields_00004_00001_00009' order represents '6' with '10481'
-10479 10481 0
c Var 'variant_fields_00004_00001_00009' direct represents '6' with '10482'
10479 -10481 10482 0
-10482 10481 0
-10482 -10479 0
c Var 'variant_fields_00004_00001_00009' order represents '7' with '10483'
-10481 10483 0
c Var 'variant_fields_00004_00001_00009' direct represents '7' with '10484'
10481 -10483 10484 0
-10484 10483 0
-10484 -10481 0
c Var 'variant_fields_00004_00001_00009' order represents '8' with '10485'
-10483 10485 0
c Var 'variant_fields_00004_00001_00009' direct represents '8' with '10486'
10483 -10485 10486 0
-10486 10485 0
-10486 -10483 0
c Var 'variant_fields_00004_00001_00009' direct represents '9' with '-10485'
10472 10474 10476 10478 10480 10482 10484 10486 -10485 0
c Encoding variable: variant_fields_00004_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00001' order represents '1' with '10487'
c Var 'variant_fields_00004_00002_00001' direct represents '1' with '10487'
c Var 'variant_fields_00004_00002_00001' order represents '2' with '10488'
-10487 10488 0
c Var 'variant_fields_00004_00002_00001' direct represents '2' with '10489'
10487 -10488 10489 0
-10489 10488 0
-10489 -10487 0
c Var 'variant_fields_00004_00002_00001' order represents '3' with '10490'
-10488 10490 0
c Var 'variant_fields_00004_00002_00001' direct represents '3' with '10491'
10488 -10490 10491 0
-10491 10490 0
-10491 -10488 0
c Var 'variant_fields_00004_00002_00001' order represents '4' with '10492'
-10490 10492 0
c Var 'variant_fields_00004_00002_00001' direct represents '4' with '10493'
10490 -10492 10493 0
-10493 10492 0
-10493 -10490 0
c Var 'variant_fields_00004_00002_00001' order represents '5' with '10494'
-10492 10494 0
c Var 'variant_fields_00004_00002_00001' direct represents '5' with '10495'
10492 -10494 10495 0
-10495 10494 0
-10495 -10492 0
c Var 'variant_fields_00004_00002_00001' order represents '6' with '10496'
-10494 10496 0
c Var 'variant_fields_00004_00002_00001' direct represents '6' with '10497'
10494 -10496 10497 0
-10497 10496 0
-10497 -10494 0
c Var 'variant_fields_00004_00002_00001' order represents '7' with '10498'
-10496 10498 0
c Var 'variant_fields_00004_00002_00001' direct represents '7' with '10499'
10496 -10498 10499 0
-10499 10498 0
-10499 -10496 0
c Var 'variant_fields_00004_00002_00001' order represents '8' with '10500'
-10498 10500 0
c Var 'variant_fields_00004_00002_00001' direct represents '8' with '10501'
10498 -10500 10501 0
-10501 10500 0
-10501 -10498 0
c Var 'variant_fields_00004_00002_00001' direct represents '9' with '-10500'
10487 10489 10491 10493 10495 10497 10499 10501 -10500 0
c Encoding variable: variant_fields_00004_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00002' order represents '1' with '10502'
c Var 'variant_fields_00004_00002_00002' direct represents '1' with '10502'
c Var 'variant_fields_00004_00002_00002' order represents '2' with '10503'
-10502 10503 0
c Var 'variant_fields_00004_00002_00002' direct represents '2' with '10504'
10502 -10503 10504 0
-10504 10503 0
-10504 -10502 0
c Var 'variant_fields_00004_00002_00002' order represents '3' with '10505'
-10503 10505 0
c Var 'variant_fields_00004_00002_00002' direct represents '3' with '10506'
10503 -10505 10506 0
-10506 10505 0
-10506 -10503 0
c Var 'variant_fields_00004_00002_00002' order represents '4' with '10507'
-10505 10507 0
c Var 'variant_fields_00004_00002_00002' direct represents '4' with '10508'
10505 -10507 10508 0
-10508 10507 0
-10508 -10505 0
c Var 'variant_fields_00004_00002_00002' order represents '5' with '10509'
-10507 10509 0
c Var 'variant_fields_00004_00002_00002' direct represents '5' with '10510'
10507 -10509 10510 0
-10510 10509 0
-10510 -10507 0
c Var 'variant_fields_00004_00002_00002' order represents '6' with '10511'
-10509 10511 0
c Var 'variant_fields_00004_00002_00002' direct represents '6' with '10512'
10509 -10511 10512 0
-10512 10511 0
-10512 -10509 0
c Var 'variant_fields_00004_00002_00002' order represents '7' with '10513'
-10511 10513 0
c Var 'variant_fields_00004_00002_00002' direct represents '7' with '10514'
10511 -10513 10514 0
-10514 10513 0
-10514 -10511 0
c Var 'variant_fields_00004_00002_00002' order represents '8' with '10515'
-10513 10515 0
c Var 'variant_fields_00004_00002_00002' direct represents '8' with '10516'
10513 -10515 10516 0
-10516 10515 0
-10516 -10513 0
c Var 'variant_fields_00004_00002_00002' direct represents '9' with '-10515'
10502 10504 10506 10508 10510 10512 10514 10516 -10515 0
c Encoding variable: variant_fields_00004_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00003' order represents '1' with '10517'
c Var 'variant_fields_00004_00002_00003' direct represents '1' with '10517'
c Var 'variant_fields_00004_00002_00003' order represents '2' with '10518'
-10517 10518 0
c Var 'variant_fields_00004_00002_00003' direct represents '2' with '10519'
10517 -10518 10519 0
-10519 10518 0
-10519 -10517 0
c Var 'variant_fields_00004_00002_00003' order represents '3' with '10520'
-10518 10520 0
c Var 'variant_fields_00004_00002_00003' direct represents '3' with '10521'
10518 -10520 10521 0
-10521 10520 0
-10521 -10518 0
c Var 'variant_fields_00004_00002_00003' order represents '4' with '10522'
-10520 10522 0
c Var 'variant_fields_00004_00002_00003' direct represents '4' with '10523'
10520 -10522 10523 0
-10523 10522 0
-10523 -10520 0
c Var 'variant_fields_00004_00002_00003' order represents '5' with '10524'
-10522 10524 0
c Var 'variant_fields_00004_00002_00003' direct represents '5' with '10525'
10522 -10524 10525 0
-10525 10524 0
-10525 -10522 0
c Var 'variant_fields_00004_00002_00003' order represents '6' with '10526'
-10524 10526 0
c Var 'variant_fields_00004_00002_00003' direct represents '6' with '10527'
10524 -10526 10527 0
-10527 10526 0
-10527 -10524 0
c Var 'variant_fields_00004_00002_00003' order represents '7' with '10528'
-10526 10528 0
c Var 'variant_fields_00004_00002_00003' direct represents '7' with '10529'
10526 -10528 10529 0
-10529 10528 0
-10529 -10526 0
c Var 'variant_fields_00004_00002_00003' order represents '8' with '10530'
-10528 10530 0
c Var 'variant_fields_00004_00002_00003' direct represents '8' with '10531'
10528 -10530 10531 0
-10531 10530 0
-10531 -10528 0
c Var 'variant_fields_00004_00002_00003' direct represents '9' with '-10530'
10517 10519 10521 10523 10525 10527 10529 10531 -10530 0
c Encoding variable: variant_fields_00004_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00004' order represents '1' with '10532'
c Var 'variant_fields_00004_00002_00004' direct represents '1' with '10532'
c Var 'variant_fields_00004_00002_00004' order represents '2' with '10533'
-10532 10533 0
c Var 'variant_fields_00004_00002_00004' direct represents '2' with '10534'
10532 -10533 10534 0
-10534 10533 0
-10534 -10532 0
c Var 'variant_fields_00004_00002_00004' order represents '3' with '10535'
-10533 10535 0
c Var 'variant_fields_00004_00002_00004' direct represents '3' with '10536'
10533 -10535 10536 0
-10536 10535 0
-10536 -10533 0
c Var 'variant_fields_00004_00002_00004' order represents '4' with '10537'
-10535 10537 0
c Var 'variant_fields_00004_00002_00004' direct represents '4' with '10538'
10535 -10537 10538 0
-10538 10537 0
-10538 -10535 0
c Var 'variant_fields_00004_00002_00004' order represents '5' with '10539'
-10537 10539 0
c Var 'variant_fields_00004_00002_00004' direct represents '5' with '10540'
10537 -10539 10540 0
-10540 10539 0
-10540 -10537 0
c Var 'variant_fields_00004_00002_00004' order represents '6' with '10541'
-10539 10541 0
c Var 'variant_fields_00004_00002_00004' direct represents '6' with '10542'
10539 -10541 10542 0
-10542 10541 0
-10542 -10539 0
c Var 'variant_fields_00004_00002_00004' order represents '7' with '10543'
-10541 10543 0
c Var 'variant_fields_00004_00002_00004' direct represents '7' with '10544'
10541 -10543 10544 0
-10544 10543 0
-10544 -10541 0
c Var 'variant_fields_00004_00002_00004' order represents '8' with '10545'
-10543 10545 0
c Var 'variant_fields_00004_00002_00004' direct represents '8' with '10546'
10543 -10545 10546 0
-10546 10545 0
-10546 -10543 0
c Var 'variant_fields_00004_00002_00004' direct represents '9' with '-10545'
10532 10534 10536 10538 10540 10542 10544 10546 -10545 0
c Encoding variable: variant_fields_00004_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00005' order represents '1' with '10547'
c Var 'variant_fields_00004_00002_00005' direct represents '1' with '10547'
c Var 'variant_fields_00004_00002_00005' order represents '2' with '10548'
-10547 10548 0
c Var 'variant_fields_00004_00002_00005' direct represents '2' with '10549'
10547 -10548 10549 0
-10549 10548 0
-10549 -10547 0
c Var 'variant_fields_00004_00002_00005' order represents '3' with '10550'
-10548 10550 0
c Var 'variant_fields_00004_00002_00005' direct represents '3' with '10551'
10548 -10550 10551 0
-10551 10550 0
-10551 -10548 0
c Var 'variant_fields_00004_00002_00005' order represents '4' with '10552'
-10550 10552 0
c Var 'variant_fields_00004_00002_00005' direct represents '4' with '10553'
10550 -10552 10553 0
-10553 10552 0
-10553 -10550 0
c Var 'variant_fields_00004_00002_00005' order represents '5' with '10554'
-10552 10554 0
c Var 'variant_fields_00004_00002_00005' direct represents '5' with '10555'
10552 -10554 10555 0
-10555 10554 0
-10555 -10552 0
c Var 'variant_fields_00004_00002_00005' order represents '6' with '10556'
-10554 10556 0
c Var 'variant_fields_00004_00002_00005' direct represents '6' with '10557'
10554 -10556 10557 0
-10557 10556 0
-10557 -10554 0
c Var 'variant_fields_00004_00002_00005' order represents '7' with '10558'
-10556 10558 0
c Var 'variant_fields_00004_00002_00005' direct represents '7' with '10559'
10556 -10558 10559 0
-10559 10558 0
-10559 -10556 0
c Var 'variant_fields_00004_00002_00005' order represents '8' with '10560'
-10558 10560 0
c Var 'variant_fields_00004_00002_00005' direct represents '8' with '10561'
10558 -10560 10561 0
-10561 10560 0
-10561 -10558 0
c Var 'variant_fields_00004_00002_00005' direct represents '9' with '-10560'
10547 10549 10551 10553 10555 10557 10559 10561 -10560 0
c Encoding variable: variant_fields_00004_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00006' order represents '1' with '10562'
c Var 'variant_fields_00004_00002_00006' direct represents '1' with '10562'
c Var 'variant_fields_00004_00002_00006' order represents '2' with '10563'
-10562 10563 0
c Var 'variant_fields_00004_00002_00006' direct represents '2' with '10564'
10562 -10563 10564 0
-10564 10563 0
-10564 -10562 0
c Var 'variant_fields_00004_00002_00006' order represents '3' with '10565'
-10563 10565 0
c Var 'variant_fields_00004_00002_00006' direct represents '3' with '10566'
10563 -10565 10566 0
-10566 10565 0
-10566 -10563 0
c Var 'variant_fields_00004_00002_00006' order represents '4' with '10567'
-10565 10567 0
c Var 'variant_fields_00004_00002_00006' direct represents '4' with '10568'
10565 -10567 10568 0
-10568 10567 0
-10568 -10565 0
c Var 'variant_fields_00004_00002_00006' order represents '5' with '10569'
-10567 10569 0
c Var 'variant_fields_00004_00002_00006' direct represents '5' with '10570'
10567 -10569 10570 0
-10570 10569 0
-10570 -10567 0
c Var 'variant_fields_00004_00002_00006' order represents '6' with '10571'
-10569 10571 0
c Var 'variant_fields_00004_00002_00006' direct represents '6' with '10572'
10569 -10571 10572 0
-10572 10571 0
-10572 -10569 0
c Var 'variant_fields_00004_00002_00006' order represents '7' with '10573'
-10571 10573 0
c Var 'variant_fields_00004_00002_00006' direct represents '7' with '10574'
10571 -10573 10574 0
-10574 10573 0
-10574 -10571 0
c Var 'variant_fields_00004_00002_00006' order represents '8' with '10575'
-10573 10575 0
c Var 'variant_fields_00004_00002_00006' direct represents '8' with '10576'
10573 -10575 10576 0
-10576 10575 0
-10576 -10573 0
c Var 'variant_fields_00004_00002_00006' direct represents '9' with '-10575'
10562 10564 10566 10568 10570 10572 10574 10576 -10575 0
c Encoding variable: variant_fields_00004_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00007' order represents '1' with '10577'
c Var 'variant_fields_00004_00002_00007' direct represents '1' with '10577'
c Var 'variant_fields_00004_00002_00007' order represents '2' with '10578'
-10577 10578 0
c Var 'variant_fields_00004_00002_00007' direct represents '2' with '10579'
10577 -10578 10579 0
-10579 10578 0
-10579 -10577 0
c Var 'variant_fields_00004_00002_00007' order represents '3' with '10580'
-10578 10580 0
c Var 'variant_fields_00004_00002_00007' direct represents '3' with '10581'
10578 -10580 10581 0
-10581 10580 0
-10581 -10578 0
c Var 'variant_fields_00004_00002_00007' order represents '4' with '10582'
-10580 10582 0
c Var 'variant_fields_00004_00002_00007' direct represents '4' with '10583'
10580 -10582 10583 0
-10583 10582 0
-10583 -10580 0
c Var 'variant_fields_00004_00002_00007' order represents '5' with '10584'
-10582 10584 0
c Var 'variant_fields_00004_00002_00007' direct represents '5' with '10585'
10582 -10584 10585 0
-10585 10584 0
-10585 -10582 0
c Var 'variant_fields_00004_00002_00007' order represents '6' with '10586'
-10584 10586 0
c Var 'variant_fields_00004_00002_00007' direct represents '6' with '10587'
10584 -10586 10587 0
-10587 10586 0
-10587 -10584 0
c Var 'variant_fields_00004_00002_00007' order represents '7' with '10588'
-10586 10588 0
c Var 'variant_fields_00004_00002_00007' direct represents '7' with '10589'
10586 -10588 10589 0
-10589 10588 0
-10589 -10586 0
c Var 'variant_fields_00004_00002_00007' order represents '8' with '10590'
-10588 10590 0
c Var 'variant_fields_00004_00002_00007' direct represents '8' with '10591'
10588 -10590 10591 0
-10591 10590 0
-10591 -10588 0
c Var 'variant_fields_00004_00002_00007' direct represents '9' with '-10590'
10577 10579 10581 10583 10585 10587 10589 10591 -10590 0
c Encoding variable: variant_fields_00004_00002_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00008' order represents '1' with '10592'
c Var 'variant_fields_00004_00002_00008' direct represents '1' with '10592'
c Var 'variant_fields_00004_00002_00008' order represents '2' with '10593'
-10592 10593 0
c Var 'variant_fields_00004_00002_00008' direct represents '2' with '10594'
10592 -10593 10594 0
-10594 10593 0
-10594 -10592 0
c Var 'variant_fields_00004_00002_00008' order represents '3' with '10595'
-10593 10595 0
c Var 'variant_fields_00004_00002_00008' direct represents '3' with '10596'
10593 -10595 10596 0
-10596 10595 0
-10596 -10593 0
c Var 'variant_fields_00004_00002_00008' order represents '4' with '10597'
-10595 10597 0
c Var 'variant_fields_00004_00002_00008' direct represents '4' with '10598'
10595 -10597 10598 0
-10598 10597 0
-10598 -10595 0
c Var 'variant_fields_00004_00002_00008' order represents '5' with '10599'
-10597 10599 0
c Var 'variant_fields_00004_00002_00008' direct represents '5' with '10600'
10597 -10599 10600 0
-10600 10599 0
-10600 -10597 0
c Var 'variant_fields_00004_00002_00008' order represents '6' with '10601'
-10599 10601 0
c Var 'variant_fields_00004_00002_00008' direct represents '6' with '10602'
10599 -10601 10602 0
-10602 10601 0
-10602 -10599 0
c Var 'variant_fields_00004_00002_00008' order represents '7' with '10603'
-10601 10603 0
c Var 'variant_fields_00004_00002_00008' direct represents '7' with '10604'
10601 -10603 10604 0
-10604 10603 0
-10604 -10601 0
c Var 'variant_fields_00004_00002_00008' order represents '8' with '10605'
-10603 10605 0
c Var 'variant_fields_00004_00002_00008' direct represents '8' with '10606'
10603 -10605 10606 0
-10606 10605 0
-10606 -10603 0
c Var 'variant_fields_00004_00002_00008' direct represents '9' with '-10605'
10592 10594 10596 10598 10600 10602 10604 10606 -10605 0
c Encoding variable: variant_fields_00004_00002_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00009' order represents '1' with '10607'
c Var 'variant_fields_00004_00002_00009' direct represents '1' with '10607'
c Var 'variant_fields_00004_00002_00009' order represents '2' with '10608'
-10607 10608 0
c Var 'variant_fields_00004_00002_00009' direct represents '2' with '10609'
10607 -10608 10609 0
-10609 10608 0
-10609 -10607 0
c Var 'variant_fields_00004_00002_00009' order represents '3' with '10610'
-10608 10610 0
c Var 'variant_fields_00004_00002_00009' direct represents '3' with '10611'
10608 -10610 10611 0
-10611 10610 0
-10611 -10608 0
c Var 'variant_fields_00004_00002_00009' order represents '4' with '10612'
-10610 10612 0
c Var 'variant_fields_00004_00002_00009' direct represents '4' with '10613'
10610 -10612 10613 0
-10613 10612 0
-10613 -10610 0
c Var 'variant_fields_00004_00002_00009' order represents '5' with '10614'
-10612 10614 0
c Var 'variant_fields_00004_00002_00009' direct represents '5' with '10615'
10612 -10614 10615 0
-10615 10614 0
-10615 -10612 0
c Var 'variant_fields_00004_00002_00009' order represents '6' with '10616'
-10614 10616 0
c Var 'variant_fields_00004_00002_00009' direct represents '6' with '10617'
10614 -10616 10617 0
-10617 10616 0
-10617 -10614 0
c Var 'variant_fields_00004_00002_00009' order represents '7' with '10618'
-10616 10618 0
c Var 'variant_fields_00004_00002_00009' direct represents '7' with '10619'
10616 -10618 10619 0
-10619 10618 0
-10619 -10616 0
c Var 'variant_fields_00004_00002_00009' order represents '8' with '10620'
-10618 10620 0
c Var 'variant_fields_00004_00002_00009' direct represents '8' with '10621'
10618 -10620 10621 0
-10621 10620 0
-10621 -10618 0
c Var 'variant_fields_00004_00002_00009' direct represents '9' with '-10620'
10607 10609 10611 10613 10615 10617 10619 10621 -10620 0
c Encoding variable: variant_fields_00004_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00001' order represents '1' with '10622'
c Var 'variant_fields_00004_00003_00001' direct represents '1' with '10622'
c Var 'variant_fields_00004_00003_00001' order represents '2' with '10623'
-10622 10623 0
c Var 'variant_fields_00004_00003_00001' direct represents '2' with '10624'
10622 -10623 10624 0
-10624 10623 0
-10624 -10622 0
c Var 'variant_fields_00004_00003_00001' order represents '3' with '10625'
-10623 10625 0
c Var 'variant_fields_00004_00003_00001' direct represents '3' with '10626'
10623 -10625 10626 0
-10626 10625 0
-10626 -10623 0
c Var 'variant_fields_00004_00003_00001' order represents '4' with '10627'
-10625 10627 0
c Var 'variant_fields_00004_00003_00001' direct represents '4' with '10628'
10625 -10627 10628 0
-10628 10627 0
-10628 -10625 0
c Var 'variant_fields_00004_00003_00001' order represents '5' with '10629'
-10627 10629 0
c Var 'variant_fields_00004_00003_00001' direct represents '5' with '10630'
10627 -10629 10630 0
-10630 10629 0
-10630 -10627 0
c Var 'variant_fields_00004_00003_00001' order represents '6' with '10631'
-10629 10631 0
c Var 'variant_fields_00004_00003_00001' direct represents '6' with '10632'
10629 -10631 10632 0
-10632 10631 0
-10632 -10629 0
c Var 'variant_fields_00004_00003_00001' order represents '7' with '10633'
-10631 10633 0
c Var 'variant_fields_00004_00003_00001' direct represents '7' with '10634'
10631 -10633 10634 0
-10634 10633 0
-10634 -10631 0
c Var 'variant_fields_00004_00003_00001' order represents '8' with '10635'
-10633 10635 0
c Var 'variant_fields_00004_00003_00001' direct represents '8' with '10636'
10633 -10635 10636 0
-10636 10635 0
-10636 -10633 0
c Var 'variant_fields_00004_00003_00001' direct represents '9' with '-10635'
10622 10624 10626 10628 10630 10632 10634 10636 -10635 0
c Encoding variable: variant_fields_00004_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00002' order represents '1' with '10637'
c Var 'variant_fields_00004_00003_00002' direct represents '1' with '10637'
c Var 'variant_fields_00004_00003_00002' order represents '2' with '10638'
-10637 10638 0
c Var 'variant_fields_00004_00003_00002' direct represents '2' with '10639'
10637 -10638 10639 0
-10639 10638 0
-10639 -10637 0
c Var 'variant_fields_00004_00003_00002' order represents '3' with '10640'
-10638 10640 0
c Var 'variant_fields_00004_00003_00002' direct represents '3' with '10641'
10638 -10640 10641 0
-10641 10640 0
-10641 -10638 0
c Var 'variant_fields_00004_00003_00002' order represents '4' with '10642'
-10640 10642 0
c Var 'variant_fields_00004_00003_00002' direct represents '4' with '10643'
10640 -10642 10643 0
-10643 10642 0
-10643 -10640 0
c Var 'variant_fields_00004_00003_00002' order represents '5' with '10644'
-10642 10644 0
c Var 'variant_fields_00004_00003_00002' direct represents '5' with '10645'
10642 -10644 10645 0
-10645 10644 0
-10645 -10642 0
c Var 'variant_fields_00004_00003_00002' order represents '6' with '10646'
-10644 10646 0
c Var 'variant_fields_00004_00003_00002' direct represents '6' with '10647'
10644 -10646 10647 0
-10647 10646 0
-10647 -10644 0
c Var 'variant_fields_00004_00003_00002' order represents '7' with '10648'
-10646 10648 0
c Var 'variant_fields_00004_00003_00002' direct represents '7' with '10649'
10646 -10648 10649 0
-10649 10648 0
-10649 -10646 0
c Var 'variant_fields_00004_00003_00002' order represents '8' with '10650'
-10648 10650 0
c Var 'variant_fields_00004_00003_00002' direct represents '8' with '10651'
10648 -10650 10651 0
-10651 10650 0
-10651 -10648 0
c Var 'variant_fields_00004_00003_00002' direct represents '9' with '-10650'
10637 10639 10641 10643 10645 10647 10649 10651 -10650 0
c Encoding variable: variant_fields_00004_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00003' order represents '1' with '10652'
c Var 'variant_fields_00004_00003_00003' direct represents '1' with '10652'
c Var 'variant_fields_00004_00003_00003' order represents '2' with '10653'
-10652 10653 0
c Var 'variant_fields_00004_00003_00003' direct represents '2' with '10654'
10652 -10653 10654 0
-10654 10653 0
-10654 -10652 0
c Var 'variant_fields_00004_00003_00003' order represents '3' with '10655'
-10653 10655 0
c Var 'variant_fields_00004_00003_00003' direct represents '3' with '10656'
10653 -10655 10656 0
-10656 10655 0
-10656 -10653 0
c Var 'variant_fields_00004_00003_00003' order represents '4' with '10657'
-10655 10657 0
c Var 'variant_fields_00004_00003_00003' direct represents '4' with '10658'
10655 -10657 10658 0
-10658 10657 0
-10658 -10655 0
c Var 'variant_fields_00004_00003_00003' order represents '5' with '10659'
-10657 10659 0
c Var 'variant_fields_00004_00003_00003' direct represents '5' with '10660'
10657 -10659 10660 0
-10660 10659 0
-10660 -10657 0
c Var 'variant_fields_00004_00003_00003' order represents '6' with '10661'
-10659 10661 0
c Var 'variant_fields_00004_00003_00003' direct represents '6' with '10662'
10659 -10661 10662 0
-10662 10661 0
-10662 -10659 0
c Var 'variant_fields_00004_00003_00003' order represents '7' with '10663'
-10661 10663 0
c Var 'variant_fields_00004_00003_00003' direct represents '7' with '10664'
10661 -10663 10664 0
-10664 10663 0
-10664 -10661 0
c Var 'variant_fields_00004_00003_00003' order represents '8' with '10665'
-10663 10665 0
c Var 'variant_fields_00004_00003_00003' direct represents '8' with '10666'
10663 -10665 10666 0
-10666 10665 0
-10666 -10663 0
c Var 'variant_fields_00004_00003_00003' direct represents '9' with '-10665'
10652 10654 10656 10658 10660 10662 10664 10666 -10665 0
c Encoding variable: variant_fields_00004_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00004' order represents '1' with '10667'
c Var 'variant_fields_00004_00003_00004' direct represents '1' with '10667'
c Var 'variant_fields_00004_00003_00004' order represents '2' with '10668'
-10667 10668 0
c Var 'variant_fields_00004_00003_00004' direct represents '2' with '10669'
10667 -10668 10669 0
-10669 10668 0
-10669 -10667 0
c Var 'variant_fields_00004_00003_00004' order represents '3' with '10670'
-10668 10670 0
c Var 'variant_fields_00004_00003_00004' direct represents '3' with '10671'
10668 -10670 10671 0
-10671 10670 0
-10671 -10668 0
c Var 'variant_fields_00004_00003_00004' order represents '4' with '10672'
-10670 10672 0
c Var 'variant_fields_00004_00003_00004' direct represents '4' with '10673'
10670 -10672 10673 0
-10673 10672 0
-10673 -10670 0
c Var 'variant_fields_00004_00003_00004' order represents '5' with '10674'
-10672 10674 0
c Var 'variant_fields_00004_00003_00004' direct represents '5' with '10675'
10672 -10674 10675 0
-10675 10674 0
-10675 -10672 0
c Var 'variant_fields_00004_00003_00004' order represents '6' with '10676'
-10674 10676 0
c Var 'variant_fields_00004_00003_00004' direct represents '6' with '10677'
10674 -10676 10677 0
-10677 10676 0
-10677 -10674 0
c Var 'variant_fields_00004_00003_00004' order represents '7' with '10678'
-10676 10678 0
c Var 'variant_fields_00004_00003_00004' direct represents '7' with '10679'
10676 -10678 10679 0
-10679 10678 0
-10679 -10676 0
c Var 'variant_fields_00004_00003_00004' order represents '8' with '10680'
-10678 10680 0
c Var 'variant_fields_00004_00003_00004' direct represents '8' with '10681'
10678 -10680 10681 0
-10681 10680 0
-10681 -10678 0
c Var 'variant_fields_00004_00003_00004' direct represents '9' with '-10680'
10667 10669 10671 10673 10675 10677 10679 10681 -10680 0
c Encoding variable: variant_fields_00004_00003_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00005' order represents '1' with '10682'
c Var 'variant_fields_00004_00003_00005' direct represents '1' with '10682'
c Var 'variant_fields_00004_00003_00005' order represents '2' with '10683'
-10682 10683 0
c Var 'variant_fields_00004_00003_00005' direct represents '2' with '10684'
10682 -10683 10684 0
-10684 10683 0
-10684 -10682 0
c Var 'variant_fields_00004_00003_00005' order represents '3' with '10685'
-10683 10685 0
c Var 'variant_fields_00004_00003_00005' direct represents '3' with '10686'
10683 -10685 10686 0
-10686 10685 0
-10686 -10683 0
c Var 'variant_fields_00004_00003_00005' order represents '4' with '10687'
-10685 10687 0
c Var 'variant_fields_00004_00003_00005' direct represents '4' with '10688'
10685 -10687 10688 0
-10688 10687 0
-10688 -10685 0
c Var 'variant_fields_00004_00003_00005' order represents '5' with '10689'
-10687 10689 0
c Var 'variant_fields_00004_00003_00005' direct represents '5' with '10690'
10687 -10689 10690 0
-10690 10689 0
-10690 -10687 0
c Var 'variant_fields_00004_00003_00005' order represents '6' with '10691'
-10689 10691 0
c Var 'variant_fields_00004_00003_00005' direct represents '6' with '10692'
10689 -10691 10692 0
-10692 10691 0
-10692 -10689 0
c Var 'variant_fields_00004_00003_00005' order represents '7' with '10693'
-10691 10693 0
c Var 'variant_fields_00004_00003_00005' direct represents '7' with '10694'
10691 -10693 10694 0
-10694 10693 0
-10694 -10691 0
c Var 'variant_fields_00004_00003_00005' order represents '8' with '10695'
-10693 10695 0
c Var 'variant_fields_00004_00003_00005' direct represents '8' with '10696'
10693 -10695 10696 0
-10696 10695 0
-10696 -10693 0
c Var 'variant_fields_00004_00003_00005' direct represents '9' with '-10695'
10682 10684 10686 10688 10690 10692 10694 10696 -10695 0
c Encoding variable: variant_fields_00004_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00006' order represents '1' with '10697'
c Var 'variant_fields_00004_00003_00006' direct represents '1' with '10697'
c Var 'variant_fields_00004_00003_00006' order represents '2' with '10698'
-10697 10698 0
c Var 'variant_fields_00004_00003_00006' direct represents '2' with '10699'
10697 -10698 10699 0
-10699 10698 0
-10699 -10697 0
c Var 'variant_fields_00004_00003_00006' order represents '3' with '10700'
-10698 10700 0
c Var 'variant_fields_00004_00003_00006' direct represents '3' with '10701'
10698 -10700 10701 0
-10701 10700 0
-10701 -10698 0
c Var 'variant_fields_00004_00003_00006' order represents '4' with '10702'
-10700 10702 0
c Var 'variant_fields_00004_00003_00006' direct represents '4' with '10703'
10700 -10702 10703 0
-10703 10702 0
-10703 -10700 0
c Var 'variant_fields_00004_00003_00006' order represents '5' with '10704'
-10702 10704 0
c Var 'variant_fields_00004_00003_00006' direct represents '5' with '10705'
10702 -10704 10705 0
-10705 10704 0
-10705 -10702 0
c Var 'variant_fields_00004_00003_00006' order represents '6' with '10706'
-10704 10706 0
c Var 'variant_fields_00004_00003_00006' direct represents '6' with '10707'
10704 -10706 10707 0
-10707 10706 0
-10707 -10704 0
c Var 'variant_fields_00004_00003_00006' order represents '7' with '10708'
-10706 10708 0
c Var 'variant_fields_00004_00003_00006' direct represents '7' with '10709'
10706 -10708 10709 0
-10709 10708 0
-10709 -10706 0
c Var 'variant_fields_00004_00003_00006' order represents '8' with '10710'
-10708 10710 0
c Var 'variant_fields_00004_00003_00006' direct represents '8' with '10711'
10708 -10710 10711 0
-10711 10710 0
-10711 -10708 0
c Var 'variant_fields_00004_00003_00006' direct represents '9' with '-10710'
10697 10699 10701 10703 10705 10707 10709 10711 -10710 0
c Encoding variable: variant_fields_00004_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00007' order represents '1' with '10712'
c Var 'variant_fields_00004_00003_00007' direct represents '1' with '10712'
c Var 'variant_fields_00004_00003_00007' order represents '2' with '10713'
-10712 10713 0
c Var 'variant_fields_00004_00003_00007' direct represents '2' with '10714'
10712 -10713 10714 0
-10714 10713 0
-10714 -10712 0
c Var 'variant_fields_00004_00003_00007' order represents '3' with '10715'
-10713 10715 0
c Var 'variant_fields_00004_00003_00007' direct represents '3' with '10716'
10713 -10715 10716 0
-10716 10715 0
-10716 -10713 0
c Var 'variant_fields_00004_00003_00007' order represents '4' with '10717'
-10715 10717 0
c Var 'variant_fields_00004_00003_00007' direct represents '4' with '10718'
10715 -10717 10718 0
-10718 10717 0
-10718 -10715 0
c Var 'variant_fields_00004_00003_00007' order represents '5' with '10719'
-10717 10719 0
c Var 'variant_fields_00004_00003_00007' direct represents '5' with '10720'
10717 -10719 10720 0
-10720 10719 0
-10720 -10717 0
c Var 'variant_fields_00004_00003_00007' order represents '6' with '10721'
-10719 10721 0
c Var 'variant_fields_00004_00003_00007' direct represents '6' with '10722'
10719 -10721 10722 0
-10722 10721 0
-10722 -10719 0
c Var 'variant_fields_00004_00003_00007' order represents '7' with '10723'
-10721 10723 0
c Var 'variant_fields_00004_00003_00007' direct represents '7' with '10724'
10721 -10723 10724 0
-10724 10723 0
-10724 -10721 0
c Var 'variant_fields_00004_00003_00007' order represents '8' with '10725'
-10723 10725 0
c Var 'variant_fields_00004_00003_00007' direct represents '8' with '10726'
10723 -10725 10726 0
-10726 10725 0
-10726 -10723 0
c Var 'variant_fields_00004_00003_00007' direct represents '9' with '-10725'
10712 10714 10716 10718 10720 10722 10724 10726 -10725 0
c Encoding variable: variant_fields_00004_00003_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00008' order represents '1' with '10727'
c Var 'variant_fields_00004_00003_00008' direct represents '1' with '10727'
c Var 'variant_fields_00004_00003_00008' order represents '2' with '10728'
-10727 10728 0
c Var 'variant_fields_00004_00003_00008' direct represents '2' with '10729'
10727 -10728 10729 0
-10729 10728 0
-10729 -10727 0
c Var 'variant_fields_00004_00003_00008' order represents '3' with '10730'
-10728 10730 0
c Var 'variant_fields_00004_00003_00008' direct represents '3' with '10731'
10728 -10730 10731 0
-10731 10730 0
-10731 -10728 0
c Var 'variant_fields_00004_00003_00008' order represents '4' with '10732'
-10730 10732 0
c Var 'variant_fields_00004_00003_00008' direct represents '4' with '10733'
10730 -10732 10733 0
-10733 10732 0
-10733 -10730 0
c Var 'variant_fields_00004_00003_00008' order represents '5' with '10734'
-10732 10734 0
c Var 'variant_fields_00004_00003_00008' direct represents '5' with '10735'
10732 -10734 10735 0
-10735 10734 0
-10735 -10732 0
c Var 'variant_fields_00004_00003_00008' order represents '6' with '10736'
-10734 10736 0
c Var 'variant_fields_00004_00003_00008' direct represents '6' with '10737'
10734 -10736 10737 0
-10737 10736 0
-10737 -10734 0
c Var 'variant_fields_00004_00003_00008' order represents '7' with '10738'
-10736 10738 0
c Var 'variant_fields_00004_00003_00008' direct represents '7' with '10739'
10736 -10738 10739 0
-10739 10738 0
-10739 -10736 0
c Var 'variant_fields_00004_00003_00008' order represents '8' with '10740'
-10738 10740 0
c Var 'variant_fields_00004_00003_00008' direct represents '8' with '10741'
10738 -10740 10741 0
-10741 10740 0
-10741 -10738 0
c Var 'variant_fields_00004_00003_00008' direct represents '9' with '-10740'
10727 10729 10731 10733 10735 10737 10739 10741 -10740 0
c Encoding variable: variant_fields_00004_00003_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00003_00009' order represents '1' with '10742'
c Var 'variant_fields_00004_00003_00009' direct represents '1' with '10742'
c Var 'variant_fields_00004_00003_00009' order represents '2' with '10743'
-10742 10743 0
c Var 'variant_fields_00004_00003_00009' direct represents '2' with '10744'
10742 -10743 10744 0
-10744 10743 0
-10744 -10742 0
c Var 'variant_fields_00004_00003_00009' order represents '3' with '10745'
-10743 10745 0
c Var 'variant_fields_00004_00003_00009' direct represents '3' with '10746'
10743 -10745 10746 0
-10746 10745 0
-10746 -10743 0
c Var 'variant_fields_00004_00003_00009' order represents '4' with '10747'
-10745 10747 0
c Var 'variant_fields_00004_00003_00009' direct represents '4' with '10748'
10745 -10747 10748 0
-10748 10747 0
-10748 -10745 0
c Var 'variant_fields_00004_00003_00009' order represents '5' with '10749'
-10747 10749 0
c Var 'variant_fields_00004_00003_00009' direct represents '5' with '10750'
10747 -10749 10750 0
-10750 10749 0
-10750 -10747 0
c Var 'variant_fields_00004_00003_00009' order represents '6' with '10751'
-10749 10751 0
c Var 'variant_fields_00004_00003_00009' direct represents '6' with '10752'
10749 -10751 10752 0
-10752 10751 0
-10752 -10749 0
c Var 'variant_fields_00004_00003_00009' order represents '7' with '10753'
-10751 10753 0
c Var 'variant_fields_00004_00003_00009' direct represents '7' with '10754'
10751 -10753 10754 0
-10754 10753 0
-10754 -10751 0
c Var 'variant_fields_00004_00003_00009' order represents '8' with '10755'
-10753 10755 0
c Var 'variant_fields_00004_00003_00009' direct represents '8' with '10756'
10753 -10755 10756 0
-10756 10755 0
-10756 -10753 0
c Var 'variant_fields_00004_00003_00009' direct represents '9' with '-10755'
10742 10744 10746 10748 10750 10752 10754 10756 -10755 0
c Encoding variable: variant_fields_00004_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00001' order represents '1' with '10757'
c Var 'variant_fields_00004_00004_00001' direct represents '1' with '10757'
c Var 'variant_fields_00004_00004_00001' order represents '2' with '10758'
-10757 10758 0
c Var 'variant_fields_00004_00004_00001' direct represents '2' with '10759'
10757 -10758 10759 0
-10759 10758 0
-10759 -10757 0
c Var 'variant_fields_00004_00004_00001' order represents '3' with '10760'
-10758 10760 0
c Var 'variant_fields_00004_00004_00001' direct represents '3' with '10761'
10758 -10760 10761 0
-10761 10760 0
-10761 -10758 0
c Var 'variant_fields_00004_00004_00001' order represents '4' with '10762'
-10760 10762 0
c Var 'variant_fields_00004_00004_00001' direct represents '4' with '10763'
10760 -10762 10763 0
-10763 10762 0
-10763 -10760 0
c Var 'variant_fields_00004_00004_00001' order represents '5' with '10764'
-10762 10764 0
c Var 'variant_fields_00004_00004_00001' direct represents '5' with '10765'
10762 -10764 10765 0
-10765 10764 0
-10765 -10762 0
c Var 'variant_fields_00004_00004_00001' order represents '6' with '10766'
-10764 10766 0
c Var 'variant_fields_00004_00004_00001' direct represents '6' with '10767'
10764 -10766 10767 0
-10767 10766 0
-10767 -10764 0
c Var 'variant_fields_00004_00004_00001' order represents '7' with '10768'
-10766 10768 0
c Var 'variant_fields_00004_00004_00001' direct represents '7' with '10769'
10766 -10768 10769 0
-10769 10768 0
-10769 -10766 0
c Var 'variant_fields_00004_00004_00001' order represents '8' with '10770'
-10768 10770 0
c Var 'variant_fields_00004_00004_00001' direct represents '8' with '10771'
10768 -10770 10771 0
-10771 10770 0
-10771 -10768 0
c Var 'variant_fields_00004_00004_00001' direct represents '9' with '-10770'
10757 10759 10761 10763 10765 10767 10769 10771 -10770 0
c Encoding variable: variant_fields_00004_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00002' order represents '1' with '10772'
c Var 'variant_fields_00004_00004_00002' direct represents '1' with '10772'
c Var 'variant_fields_00004_00004_00002' order represents '2' with '10773'
-10772 10773 0
c Var 'variant_fields_00004_00004_00002' direct represents '2' with '10774'
10772 -10773 10774 0
-10774 10773 0
-10774 -10772 0
c Var 'variant_fields_00004_00004_00002' order represents '3' with '10775'
-10773 10775 0
c Var 'variant_fields_00004_00004_00002' direct represents '3' with '10776'
10773 -10775 10776 0
-10776 10775 0
-10776 -10773 0
c Var 'variant_fields_00004_00004_00002' order represents '4' with '10777'
-10775 10777 0
c Var 'variant_fields_00004_00004_00002' direct represents '4' with '10778'
10775 -10777 10778 0
-10778 10777 0
-10778 -10775 0
c Var 'variant_fields_00004_00004_00002' order represents '5' with '10779'
-10777 10779 0
c Var 'variant_fields_00004_00004_00002' direct represents '5' with '10780'
10777 -10779 10780 0
-10780 10779 0
-10780 -10777 0
c Var 'variant_fields_00004_00004_00002' order represents '6' with '10781'
-10779 10781 0
c Var 'variant_fields_00004_00004_00002' direct represents '6' with '10782'
10779 -10781 10782 0
-10782 10781 0
-10782 -10779 0
c Var 'variant_fields_00004_00004_00002' order represents '7' with '10783'
-10781 10783 0
c Var 'variant_fields_00004_00004_00002' direct represents '7' with '10784'
10781 -10783 10784 0
-10784 10783 0
-10784 -10781 0
c Var 'variant_fields_00004_00004_00002' order represents '8' with '10785'
-10783 10785 0
c Var 'variant_fields_00004_00004_00002' direct represents '8' with '10786'
10783 -10785 10786 0
-10786 10785 0
-10786 -10783 0
c Var 'variant_fields_00004_00004_00002' direct represents '9' with '-10785'
10772 10774 10776 10778 10780 10782 10784 10786 -10785 0
c Encoding variable: variant_fields_00004_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00003' order represents '1' with '10787'
c Var 'variant_fields_00004_00004_00003' direct represents '1' with '10787'
c Var 'variant_fields_00004_00004_00003' order represents '2' with '10788'
-10787 10788 0
c Var 'variant_fields_00004_00004_00003' direct represents '2' with '10789'
10787 -10788 10789 0
-10789 10788 0
-10789 -10787 0
c Var 'variant_fields_00004_00004_00003' order represents '3' with '10790'
-10788 10790 0
c Var 'variant_fields_00004_00004_00003' direct represents '3' with '10791'
10788 -10790 10791 0
-10791 10790 0
-10791 -10788 0
c Var 'variant_fields_00004_00004_00003' order represents '4' with '10792'
-10790 10792 0
c Var 'variant_fields_00004_00004_00003' direct represents '4' with '10793'
10790 -10792 10793 0
-10793 10792 0
-10793 -10790 0
c Var 'variant_fields_00004_00004_00003' order represents '5' with '10794'
-10792 10794 0
c Var 'variant_fields_00004_00004_00003' direct represents '5' with '10795'
10792 -10794 10795 0
-10795 10794 0
-10795 -10792 0
c Var 'variant_fields_00004_00004_00003' order represents '6' with '10796'
-10794 10796 0
c Var 'variant_fields_00004_00004_00003' direct represents '6' with '10797'
10794 -10796 10797 0
-10797 10796 0
-10797 -10794 0
c Var 'variant_fields_00004_00004_00003' order represents '7' with '10798'
-10796 10798 0
c Var 'variant_fields_00004_00004_00003' direct represents '7' with '10799'
10796 -10798 10799 0
-10799 10798 0
-10799 -10796 0
c Var 'variant_fields_00004_00004_00003' order represents '8' with '10800'
-10798 10800 0
c Var 'variant_fields_00004_00004_00003' direct represents '8' with '10801'
10798 -10800 10801 0
-10801 10800 0
-10801 -10798 0
c Var 'variant_fields_00004_00004_00003' direct represents '9' with '-10800'
10787 10789 10791 10793 10795 10797 10799 10801 -10800 0
c Encoding variable: variant_fields_00004_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00004' order represents '1' with '10802'
c Var 'variant_fields_00004_00004_00004' direct represents '1' with '10802'
c Var 'variant_fields_00004_00004_00004' order represents '2' with '10803'
-10802 10803 0
c Var 'variant_fields_00004_00004_00004' direct represents '2' with '10804'
10802 -10803 10804 0
-10804 10803 0
-10804 -10802 0
c Var 'variant_fields_00004_00004_00004' order represents '3' with '10805'
-10803 10805 0
c Var 'variant_fields_00004_00004_00004' direct represents '3' with '10806'
10803 -10805 10806 0
-10806 10805 0
-10806 -10803 0
c Var 'variant_fields_00004_00004_00004' order represents '4' with '10807'
-10805 10807 0
c Var 'variant_fields_00004_00004_00004' direct represents '4' with '10808'
10805 -10807 10808 0
-10808 10807 0
-10808 -10805 0
c Var 'variant_fields_00004_00004_00004' order represents '5' with '10809'
-10807 10809 0
c Var 'variant_fields_00004_00004_00004' direct represents '5' with '10810'
10807 -10809 10810 0
-10810 10809 0
-10810 -10807 0
c Var 'variant_fields_00004_00004_00004' order represents '6' with '10811'
-10809 10811 0
c Var 'variant_fields_00004_00004_00004' direct represents '6' with '10812'
10809 -10811 10812 0
-10812 10811 0
-10812 -10809 0
c Var 'variant_fields_00004_00004_00004' order represents '7' with '10813'
-10811 10813 0
c Var 'variant_fields_00004_00004_00004' direct represents '7' with '10814'
10811 -10813 10814 0
-10814 10813 0
-10814 -10811 0
c Var 'variant_fields_00004_00004_00004' order represents '8' with '10815'
-10813 10815 0
c Var 'variant_fields_00004_00004_00004' direct represents '8' with '10816'
10813 -10815 10816 0
-10816 10815 0
-10816 -10813 0
c Var 'variant_fields_00004_00004_00004' direct represents '9' with '-10815'
10802 10804 10806 10808 10810 10812 10814 10816 -10815 0
c Encoding variable: variant_fields_00004_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00005' order represents '1' with '10817'
c Var 'variant_fields_00004_00004_00005' direct represents '1' with '10817'
c Var 'variant_fields_00004_00004_00005' order represents '2' with '10818'
-10817 10818 0
c Var 'variant_fields_00004_00004_00005' direct represents '2' with '10819'
10817 -10818 10819 0
-10819 10818 0
-10819 -10817 0
c Var 'variant_fields_00004_00004_00005' order represents '3' with '10820'
-10818 10820 0
c Var 'variant_fields_00004_00004_00005' direct represents '3' with '10821'
10818 -10820 10821 0
-10821 10820 0
-10821 -10818 0
c Var 'variant_fields_00004_00004_00005' order represents '4' with '10822'
-10820 10822 0
c Var 'variant_fields_00004_00004_00005' direct represents '4' with '10823'
10820 -10822 10823 0
-10823 10822 0
-10823 -10820 0
c Var 'variant_fields_00004_00004_00005' order represents '5' with '10824'
-10822 10824 0
c Var 'variant_fields_00004_00004_00005' direct represents '5' with '10825'
10822 -10824 10825 0
-10825 10824 0
-10825 -10822 0
c Var 'variant_fields_00004_00004_00005' order represents '6' with '10826'
-10824 10826 0
c Var 'variant_fields_00004_00004_00005' direct represents '6' with '10827'
10824 -10826 10827 0
-10827 10826 0
-10827 -10824 0
c Var 'variant_fields_00004_00004_00005' order represents '7' with '10828'
-10826 10828 0
c Var 'variant_fields_00004_00004_00005' direct represents '7' with '10829'
10826 -10828 10829 0
-10829 10828 0
-10829 -10826 0
c Var 'variant_fields_00004_00004_00005' order represents '8' with '10830'
-10828 10830 0
c Var 'variant_fields_00004_00004_00005' direct represents '8' with '10831'
10828 -10830 10831 0
-10831 10830 0
-10831 -10828 0
c Var 'variant_fields_00004_00004_00005' direct represents '9' with '-10830'
10817 10819 10821 10823 10825 10827 10829 10831 -10830 0
c Encoding variable: variant_fields_00004_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00006' order represents '1' with '10832'
c Var 'variant_fields_00004_00004_00006' direct represents '1' with '10832'
c Var 'variant_fields_00004_00004_00006' order represents '2' with '10833'
-10832 10833 0
c Var 'variant_fields_00004_00004_00006' direct represents '2' with '10834'
10832 -10833 10834 0
-10834 10833 0
-10834 -10832 0
c Var 'variant_fields_00004_00004_00006' order represents '3' with '10835'
-10833 10835 0
c Var 'variant_fields_00004_00004_00006' direct represents '3' with '10836'
10833 -10835 10836 0
-10836 10835 0
-10836 -10833 0
c Var 'variant_fields_00004_00004_00006' order represents '4' with '10837'
-10835 10837 0
c Var 'variant_fields_00004_00004_00006' direct represents '4' with '10838'
10835 -10837 10838 0
-10838 10837 0
-10838 -10835 0
c Var 'variant_fields_00004_00004_00006' order represents '5' with '10839'
-10837 10839 0
c Var 'variant_fields_00004_00004_00006' direct represents '5' with '10840'
10837 -10839 10840 0
-10840 10839 0
-10840 -10837 0
c Var 'variant_fields_00004_00004_00006' order represents '6' with '10841'
-10839 10841 0
c Var 'variant_fields_00004_00004_00006' direct represents '6' with '10842'
10839 -10841 10842 0
-10842 10841 0
-10842 -10839 0
c Var 'variant_fields_00004_00004_00006' order represents '7' with '10843'
-10841 10843 0
c Var 'variant_fields_00004_00004_00006' direct represents '7' with '10844'
10841 -10843 10844 0
-10844 10843 0
-10844 -10841 0
c Var 'variant_fields_00004_00004_00006' order represents '8' with '10845'
-10843 10845 0
c Var 'variant_fields_00004_00004_00006' direct represents '8' with '10846'
10843 -10845 10846 0
-10846 10845 0
-10846 -10843 0
c Var 'variant_fields_00004_00004_00006' direct represents '9' with '-10845'
10832 10834 10836 10838 10840 10842 10844 10846 -10845 0
c Encoding variable: variant_fields_00004_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00007' order represents '1' with '10847'
c Var 'variant_fields_00004_00004_00007' direct represents '1' with '10847'
c Var 'variant_fields_00004_00004_00007' order represents '2' with '10848'
-10847 10848 0
c Var 'variant_fields_00004_00004_00007' direct represents '2' with '10849'
10847 -10848 10849 0
-10849 10848 0
-10849 -10847 0
c Var 'variant_fields_00004_00004_00007' order represents '3' with '10850'
-10848 10850 0
c Var 'variant_fields_00004_00004_00007' direct represents '3' with '10851'
10848 -10850 10851 0
-10851 10850 0
-10851 -10848 0
c Var 'variant_fields_00004_00004_00007' order represents '4' with '10852'
-10850 10852 0
c Var 'variant_fields_00004_00004_00007' direct represents '4' with '10853'
10850 -10852 10853 0
-10853 10852 0
-10853 -10850 0
c Var 'variant_fields_00004_00004_00007' order represents '5' with '10854'
-10852 10854 0
c Var 'variant_fields_00004_00004_00007' direct represents '5' with '10855'
10852 -10854 10855 0
-10855 10854 0
-10855 -10852 0
c Var 'variant_fields_00004_00004_00007' order represents '6' with '10856'
-10854 10856 0
c Var 'variant_fields_00004_00004_00007' direct represents '6' with '10857'
10854 -10856 10857 0
-10857 10856 0
-10857 -10854 0
c Var 'variant_fields_00004_00004_00007' order represents '7' with '10858'
-10856 10858 0
c Var 'variant_fields_00004_00004_00007' direct represents '7' with '10859'
10856 -10858 10859 0
-10859 10858 0
-10859 -10856 0
c Var 'variant_fields_00004_00004_00007' order represents '8' with '10860'
-10858 10860 0
c Var 'variant_fields_00004_00004_00007' direct represents '8' with '10861'
10858 -10860 10861 0
-10861 10860 0
-10861 -10858 0
c Var 'variant_fields_00004_00004_00007' direct represents '9' with '-10860'
10847 10849 10851 10853 10855 10857 10859 10861 -10860 0
c Encoding variable: variant_fields_00004_00004_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00008' order represents '1' with '10862'
c Var 'variant_fields_00004_00004_00008' direct represents '1' with '10862'
c Var 'variant_fields_00004_00004_00008' order represents '2' with '10863'
-10862 10863 0
c Var 'variant_fields_00004_00004_00008' direct represents '2' with '10864'
10862 -10863 10864 0
-10864 10863 0
-10864 -10862 0
c Var 'variant_fields_00004_00004_00008' order represents '3' with '10865'
-10863 10865 0
c Var 'variant_fields_00004_00004_00008' direct represents '3' with '10866'
10863 -10865 10866 0
-10866 10865 0
-10866 -10863 0
c Var 'variant_fields_00004_00004_00008' order represents '4' with '10867'
-10865 10867 0
c Var 'variant_fields_00004_00004_00008' direct represents '4' with '10868'
10865 -10867 10868 0
-10868 10867 0
-10868 -10865 0
c Var 'variant_fields_00004_00004_00008' order represents '5' with '10869'
-10867 10869 0
c Var 'variant_fields_00004_00004_00008' direct represents '5' with '10870'
10867 -10869 10870 0
-10870 10869 0
-10870 -10867 0
c Var 'variant_fields_00004_00004_00008' order represents '6' with '10871'
-10869 10871 0
c Var 'variant_fields_00004_00004_00008' direct represents '6' with '10872'
10869 -10871 10872 0
-10872 10871 0
-10872 -10869 0
c Var 'variant_fields_00004_00004_00008' order represents '7' with '10873'
-10871 10873 0
c Var 'variant_fields_00004_00004_00008' direct represents '7' with '10874'
10871 -10873 10874 0
-10874 10873 0
-10874 -10871 0
c Var 'variant_fields_00004_00004_00008' order represents '8' with '10875'
-10873 10875 0
c Var 'variant_fields_00004_00004_00008' direct represents '8' with '10876'
10873 -10875 10876 0
-10876 10875 0
-10876 -10873 0
c Var 'variant_fields_00004_00004_00008' direct represents '9' with '-10875'
10862 10864 10866 10868 10870 10872 10874 10876 -10875 0
c Encoding variable: variant_fields_00004_00004_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00009' order represents '1' with '10877'
c Var 'variant_fields_00004_00004_00009' direct represents '1' with '10877'
c Var 'variant_fields_00004_00004_00009' order represents '2' with '10878'
-10877 10878 0
c Var 'variant_fields_00004_00004_00009' direct represents '2' with '10879'
10877 -10878 10879 0
-10879 10878 0
-10879 -10877 0
c Var 'variant_fields_00004_00004_00009' order represents '3' with '10880'
-10878 10880 0
c Var 'variant_fields_00004_00004_00009' direct represents '3' with '10881'
10878 -10880 10881 0
-10881 10880 0
-10881 -10878 0
c Var 'variant_fields_00004_00004_00009' order represents '4' with '10882'
-10880 10882 0
c Var 'variant_fields_00004_00004_00009' direct represents '4' with '10883'
10880 -10882 10883 0
-10883 10882 0
-10883 -10880 0
c Var 'variant_fields_00004_00004_00009' order represents '5' with '10884'
-10882 10884 0
c Var 'variant_fields_00004_00004_00009' direct represents '5' with '10885'
10882 -10884 10885 0
-10885 10884 0
-10885 -10882 0
c Var 'variant_fields_00004_00004_00009' order represents '6' with '10886'
-10884 10886 0
c Var 'variant_fields_00004_00004_00009' direct represents '6' with '10887'
10884 -10886 10887 0
-10887 10886 0
-10887 -10884 0
c Var 'variant_fields_00004_00004_00009' order represents '7' with '10888'
-10886 10888 0
c Var 'variant_fields_00004_00004_00009' direct represents '7' with '10889'
10886 -10888 10889 0
-10889 10888 0
-10889 -10886 0
c Var 'variant_fields_00004_00004_00009' order represents '8' with '10890'
-10888 10890 0
c Var 'variant_fields_00004_00004_00009' direct represents '8' with '10891'
10888 -10890 10891 0
-10891 10890 0
-10891 -10888 0
c Var 'variant_fields_00004_00004_00009' direct represents '9' with '-10890'
10877 10879 10881 10883 10885 10887 10889 10891 -10890 0
c Encoding variable: variant_fields_00004_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00001' order represents '1' with '10892'
c Var 'variant_fields_00004_00005_00001' direct represents '1' with '10892'
c Var 'variant_fields_00004_00005_00001' order represents '2' with '10893'
-10892 10893 0
c Var 'variant_fields_00004_00005_00001' direct represents '2' with '10894'
10892 -10893 10894 0
-10894 10893 0
-10894 -10892 0
c Var 'variant_fields_00004_00005_00001' order represents '3' with '10895'
-10893 10895 0
c Var 'variant_fields_00004_00005_00001' direct represents '3' with '10896'
10893 -10895 10896 0
-10896 10895 0
-10896 -10893 0
c Var 'variant_fields_00004_00005_00001' order represents '4' with '10897'
-10895 10897 0
c Var 'variant_fields_00004_00005_00001' direct represents '4' with '10898'
10895 -10897 10898 0
-10898 10897 0
-10898 -10895 0
c Var 'variant_fields_00004_00005_00001' order represents '5' with '10899'
-10897 10899 0
c Var 'variant_fields_00004_00005_00001' direct represents '5' with '10900'
10897 -10899 10900 0
-10900 10899 0
-10900 -10897 0
c Var 'variant_fields_00004_00005_00001' order represents '6' with '10901'
-10899 10901 0
c Var 'variant_fields_00004_00005_00001' direct represents '6' with '10902'
10899 -10901 10902 0
-10902 10901 0
-10902 -10899 0
c Var 'variant_fields_00004_00005_00001' order represents '7' with '10903'
-10901 10903 0
c Var 'variant_fields_00004_00005_00001' direct represents '7' with '10904'
10901 -10903 10904 0
-10904 10903 0
-10904 -10901 0
c Var 'variant_fields_00004_00005_00001' order represents '8' with '10905'
-10903 10905 0
c Var 'variant_fields_00004_00005_00001' direct represents '8' with '10906'
10903 -10905 10906 0
-10906 10905 0
-10906 -10903 0
c Var 'variant_fields_00004_00005_00001' direct represents '9' with '-10905'
10892 10894 10896 10898 10900 10902 10904 10906 -10905 0
c Encoding variable: variant_fields_00004_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00002' order represents '1' with '10907'
c Var 'variant_fields_00004_00005_00002' direct represents '1' with '10907'
c Var 'variant_fields_00004_00005_00002' order represents '2' with '10908'
-10907 10908 0
c Var 'variant_fields_00004_00005_00002' direct represents '2' with '10909'
10907 -10908 10909 0
-10909 10908 0
-10909 -10907 0
c Var 'variant_fields_00004_00005_00002' order represents '3' with '10910'
-10908 10910 0
c Var 'variant_fields_00004_00005_00002' direct represents '3' with '10911'
10908 -10910 10911 0
-10911 10910 0
-10911 -10908 0
c Var 'variant_fields_00004_00005_00002' order represents '4' with '10912'
-10910 10912 0
c Var 'variant_fields_00004_00005_00002' direct represents '4' with '10913'
10910 -10912 10913 0
-10913 10912 0
-10913 -10910 0
c Var 'variant_fields_00004_00005_00002' order represents '5' with '10914'
-10912 10914 0
c Var 'variant_fields_00004_00005_00002' direct represents '5' with '10915'
10912 -10914 10915 0
-10915 10914 0
-10915 -10912 0
c Var 'variant_fields_00004_00005_00002' order represents '6' with '10916'
-10914 10916 0
c Var 'variant_fields_00004_00005_00002' direct represents '6' with '10917'
10914 -10916 10917 0
-10917 10916 0
-10917 -10914 0
c Var 'variant_fields_00004_00005_00002' order represents '7' with '10918'
-10916 10918 0
c Var 'variant_fields_00004_00005_00002' direct represents '7' with '10919'
10916 -10918 10919 0
-10919 10918 0
-10919 -10916 0
c Var 'variant_fields_00004_00005_00002' order represents '8' with '10920'
-10918 10920 0
c Var 'variant_fields_00004_00005_00002' direct represents '8' with '10921'
10918 -10920 10921 0
-10921 10920 0
-10921 -10918 0
c Var 'variant_fields_00004_00005_00002' direct represents '9' with '-10920'
10907 10909 10911 10913 10915 10917 10919 10921 -10920 0
c Encoding variable: variant_fields_00004_00005_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00003' order represents '1' with '10922'
c Var 'variant_fields_00004_00005_00003' direct represents '1' with '10922'
c Var 'variant_fields_00004_00005_00003' order represents '2' with '10923'
-10922 10923 0
c Var 'variant_fields_00004_00005_00003' direct represents '2' with '10924'
10922 -10923 10924 0
-10924 10923 0
-10924 -10922 0
c Var 'variant_fields_00004_00005_00003' order represents '3' with '10925'
-10923 10925 0
c Var 'variant_fields_00004_00005_00003' direct represents '3' with '10926'
10923 -10925 10926 0
-10926 10925 0
-10926 -10923 0
c Var 'variant_fields_00004_00005_00003' order represents '4' with '10927'
-10925 10927 0
c Var 'variant_fields_00004_00005_00003' direct represents '4' with '10928'
10925 -10927 10928 0
-10928 10927 0
-10928 -10925 0
c Var 'variant_fields_00004_00005_00003' order represents '5' with '10929'
-10927 10929 0
c Var 'variant_fields_00004_00005_00003' direct represents '5' with '10930'
10927 -10929 10930 0
-10930 10929 0
-10930 -10927 0
c Var 'variant_fields_00004_00005_00003' order represents '6' with '10931'
-10929 10931 0
c Var 'variant_fields_00004_00005_00003' direct represents '6' with '10932'
10929 -10931 10932 0
-10932 10931 0
-10932 -10929 0
c Var 'variant_fields_00004_00005_00003' order represents '7' with '10933'
-10931 10933 0
c Var 'variant_fields_00004_00005_00003' direct represents '7' with '10934'
10931 -10933 10934 0
-10934 10933 0
-10934 -10931 0
c Var 'variant_fields_00004_00005_00003' order represents '8' with '10935'
-10933 10935 0
c Var 'variant_fields_00004_00005_00003' direct represents '8' with '10936'
10933 -10935 10936 0
-10936 10935 0
-10936 -10933 0
c Var 'variant_fields_00004_00005_00003' direct represents '9' with '-10935'
10922 10924 10926 10928 10930 10932 10934 10936 -10935 0
c Encoding variable: variant_fields_00004_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00004' order represents '1' with '10937'
c Var 'variant_fields_00004_00005_00004' direct represents '1' with '10937'
c Var 'variant_fields_00004_00005_00004' order represents '2' with '10938'
-10937 10938 0
c Var 'variant_fields_00004_00005_00004' direct represents '2' with '10939'
10937 -10938 10939 0
-10939 10938 0
-10939 -10937 0
c Var 'variant_fields_00004_00005_00004' order represents '3' with '10940'
-10938 10940 0
c Var 'variant_fields_00004_00005_00004' direct represents '3' with '10941'
10938 -10940 10941 0
-10941 10940 0
-10941 -10938 0
c Var 'variant_fields_00004_00005_00004' order represents '4' with '10942'
-10940 10942 0
c Var 'variant_fields_00004_00005_00004' direct represents '4' with '10943'
10940 -10942 10943 0
-10943 10942 0
-10943 -10940 0
c Var 'variant_fields_00004_00005_00004' order represents '5' with '10944'
-10942 10944 0
c Var 'variant_fields_00004_00005_00004' direct represents '5' with '10945'
10942 -10944 10945 0
-10945 10944 0
-10945 -10942 0
c Var 'variant_fields_00004_00005_00004' order represents '6' with '10946'
-10944 10946 0
c Var 'variant_fields_00004_00005_00004' direct represents '6' with '10947'
10944 -10946 10947 0
-10947 10946 0
-10947 -10944 0
c Var 'variant_fields_00004_00005_00004' order represents '7' with '10948'
-10946 10948 0
c Var 'variant_fields_00004_00005_00004' direct represents '7' with '10949'
10946 -10948 10949 0
-10949 10948 0
-10949 -10946 0
c Var 'variant_fields_00004_00005_00004' order represents '8' with '10950'
-10948 10950 0
c Var 'variant_fields_00004_00005_00004' direct represents '8' with '10951'
10948 -10950 10951 0
-10951 10950 0
-10951 -10948 0
c Var 'variant_fields_00004_00005_00004' direct represents '9' with '-10950'
10937 10939 10941 10943 10945 10947 10949 10951 -10950 0
c Encoding variable: variant_fields_00004_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00005' order represents '1' with '10952'
c Var 'variant_fields_00004_00005_00005' direct represents '1' with '10952'
c Var 'variant_fields_00004_00005_00005' order represents '2' with '10953'
-10952 10953 0
c Var 'variant_fields_00004_00005_00005' direct represents '2' with '10954'
10952 -10953 10954 0
-10954 10953 0
-10954 -10952 0
c Var 'variant_fields_00004_00005_00005' order represents '3' with '10955'
-10953 10955 0
c Var 'variant_fields_00004_00005_00005' direct represents '3' with '10956'
10953 -10955 10956 0
-10956 10955 0
-10956 -10953 0
c Var 'variant_fields_00004_00005_00005' order represents '4' with '10957'
-10955 10957 0
c Var 'variant_fields_00004_00005_00005' direct represents '4' with '10958'
10955 -10957 10958 0
-10958 10957 0
-10958 -10955 0
c Var 'variant_fields_00004_00005_00005' order represents '5' with '10959'
-10957 10959 0
c Var 'variant_fields_00004_00005_00005' direct represents '5' with '10960'
10957 -10959 10960 0
-10960 10959 0
-10960 -10957 0
c Var 'variant_fields_00004_00005_00005' order represents '6' with '10961'
-10959 10961 0
c Var 'variant_fields_00004_00005_00005' direct represents '6' with '10962'
10959 -10961 10962 0
-10962 10961 0
-10962 -10959 0
c Var 'variant_fields_00004_00005_00005' order represents '7' with '10963'
-10961 10963 0
c Var 'variant_fields_00004_00005_00005' direct represents '7' with '10964'
10961 -10963 10964 0
-10964 10963 0
-10964 -10961 0
c Var 'variant_fields_00004_00005_00005' order represents '8' with '10965'
-10963 10965 0
c Var 'variant_fields_00004_00005_00005' direct represents '8' with '10966'
10963 -10965 10966 0
-10966 10965 0
-10966 -10963 0
c Var 'variant_fields_00004_00005_00005' direct represents '9' with '-10965'
10952 10954 10956 10958 10960 10962 10964 10966 -10965 0
c Encoding variable: variant_fields_00004_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00006' order represents '1' with '10967'
c Var 'variant_fields_00004_00005_00006' direct represents '1' with '10967'
c Var 'variant_fields_00004_00005_00006' order represents '2' with '10968'
-10967 10968 0
c Var 'variant_fields_00004_00005_00006' direct represents '2' with '10969'
10967 -10968 10969 0
-10969 10968 0
-10969 -10967 0
c Var 'variant_fields_00004_00005_00006' order represents '3' with '10970'
-10968 10970 0
c Var 'variant_fields_00004_00005_00006' direct represents '3' with '10971'
10968 -10970 10971 0
-10971 10970 0
-10971 -10968 0
c Var 'variant_fields_00004_00005_00006' order represents '4' with '10972'
-10970 10972 0
c Var 'variant_fields_00004_00005_00006' direct represents '4' with '10973'
10970 -10972 10973 0
-10973 10972 0
-10973 -10970 0
c Var 'variant_fields_00004_00005_00006' order represents '5' with '10974'
-10972 10974 0
c Var 'variant_fields_00004_00005_00006' direct represents '5' with '10975'
10972 -10974 10975 0
-10975 10974 0
-10975 -10972 0
c Var 'variant_fields_00004_00005_00006' order represents '6' with '10976'
-10974 10976 0
c Var 'variant_fields_00004_00005_00006' direct represents '6' with '10977'
10974 -10976 10977 0
-10977 10976 0
-10977 -10974 0
c Var 'variant_fields_00004_00005_00006' order represents '7' with '10978'
-10976 10978 0
c Var 'variant_fields_00004_00005_00006' direct represents '7' with '10979'
10976 -10978 10979 0
-10979 10978 0
-10979 -10976 0
c Var 'variant_fields_00004_00005_00006' order represents '8' with '10980'
-10978 10980 0
c Var 'variant_fields_00004_00005_00006' direct represents '8' with '10981'
10978 -10980 10981 0
-10981 10980 0
-10981 -10978 0
c Var 'variant_fields_00004_00005_00006' direct represents '9' with '-10980'
10967 10969 10971 10973 10975 10977 10979 10981 -10980 0
c Encoding variable: variant_fields_00004_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00007' order represents '1' with '10982'
c Var 'variant_fields_00004_00005_00007' direct represents '1' with '10982'
c Var 'variant_fields_00004_00005_00007' order represents '2' with '10983'
-10982 10983 0
c Var 'variant_fields_00004_00005_00007' direct represents '2' with '10984'
10982 -10983 10984 0
-10984 10983 0
-10984 -10982 0
c Var 'variant_fields_00004_00005_00007' order represents '3' with '10985'
-10983 10985 0
c Var 'variant_fields_00004_00005_00007' direct represents '3' with '10986'
10983 -10985 10986 0
-10986 10985 0
-10986 -10983 0
c Var 'variant_fields_00004_00005_00007' order represents '4' with '10987'
-10985 10987 0
c Var 'variant_fields_00004_00005_00007' direct represents '4' with '10988'
10985 -10987 10988 0
-10988 10987 0
-10988 -10985 0
c Var 'variant_fields_00004_00005_00007' order represents '5' with '10989'
-10987 10989 0
c Var 'variant_fields_00004_00005_00007' direct represents '5' with '10990'
10987 -10989 10990 0
-10990 10989 0
-10990 -10987 0
c Var 'variant_fields_00004_00005_00007' order represents '6' with '10991'
-10989 10991 0
c Var 'variant_fields_00004_00005_00007' direct represents '6' with '10992'
10989 -10991 10992 0
-10992 10991 0
-10992 -10989 0
c Var 'variant_fields_00004_00005_00007' order represents '7' with '10993'
-10991 10993 0
c Var 'variant_fields_00004_00005_00007' direct represents '7' with '10994'
10991 -10993 10994 0
-10994 10993 0
-10994 -10991 0
c Var 'variant_fields_00004_00005_00007' order represents '8' with '10995'
-10993 10995 0
c Var 'variant_fields_00004_00005_00007' direct represents '8' with '10996'
10993 -10995 10996 0
-10996 10995 0
-10996 -10993 0
c Var 'variant_fields_00004_00005_00007' direct represents '9' with '-10995'
10982 10984 10986 10988 10990 10992 10994 10996 -10995 0
c Encoding variable: variant_fields_00004_00005_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00008' order represents '1' with '10997'
c Var 'variant_fields_00004_00005_00008' direct represents '1' with '10997'
c Var 'variant_fields_00004_00005_00008' order represents '2' with '10998'
-10997 10998 0
c Var 'variant_fields_00004_00005_00008' direct represents '2' with '10999'
10997 -10998 10999 0
-10999 10998 0
-10999 -10997 0
c Var 'variant_fields_00004_00005_00008' order represents '3' with '11000'
-10998 11000 0
c Var 'variant_fields_00004_00005_00008' direct represents '3' with '11001'
10998 -11000 11001 0
-11001 11000 0
-11001 -10998 0
c Var 'variant_fields_00004_00005_00008' order represents '4' with '11002'
-11000 11002 0
c Var 'variant_fields_00004_00005_00008' direct represents '4' with '11003'
11000 -11002 11003 0
-11003 11002 0
-11003 -11000 0
c Var 'variant_fields_00004_00005_00008' order represents '5' with '11004'
-11002 11004 0
c Var 'variant_fields_00004_00005_00008' direct represents '5' with '11005'
11002 -11004 11005 0
-11005 11004 0
-11005 -11002 0
c Var 'variant_fields_00004_00005_00008' order represents '6' with '11006'
-11004 11006 0
c Var 'variant_fields_00004_00005_00008' direct represents '6' with '11007'
11004 -11006 11007 0
-11007 11006 0
-11007 -11004 0
c Var 'variant_fields_00004_00005_00008' order represents '7' with '11008'
-11006 11008 0
c Var 'variant_fields_00004_00005_00008' direct represents '7' with '11009'
11006 -11008 11009 0
-11009 11008 0
-11009 -11006 0
c Var 'variant_fields_00004_00005_00008' order represents '8' with '11010'
-11008 11010 0
c Var 'variant_fields_00004_00005_00008' direct represents '8' with '11011'
11008 -11010 11011 0
-11011 11010 0
-11011 -11008 0
c Var 'variant_fields_00004_00005_00008' direct represents '9' with '-11010'
10997 10999 11001 11003 11005 11007 11009 11011 -11010 0
c Encoding variable: variant_fields_00004_00005_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00005_00009' order represents '1' with '11012'
c Var 'variant_fields_00004_00005_00009' direct represents '1' with '11012'
c Var 'variant_fields_00004_00005_00009' order represents '2' with '11013'
-11012 11013 0
c Var 'variant_fields_00004_00005_00009' direct represents '2' with '11014'
11012 -11013 11014 0
-11014 11013 0
-11014 -11012 0
c Var 'variant_fields_00004_00005_00009' order represents '3' with '11015'
-11013 11015 0
c Var 'variant_fields_00004_00005_00009' direct represents '3' with '11016'
11013 -11015 11016 0
-11016 11015 0
-11016 -11013 0
c Var 'variant_fields_00004_00005_00009' order represents '4' with '11017'
-11015 11017 0
c Var 'variant_fields_00004_00005_00009' direct represents '4' with '11018'
11015 -11017 11018 0
-11018 11017 0
-11018 -11015 0
c Var 'variant_fields_00004_00005_00009' order represents '5' with '11019'
-11017 11019 0
c Var 'variant_fields_00004_00005_00009' direct represents '5' with '11020'
11017 -11019 11020 0
-11020 11019 0
-11020 -11017 0
c Var 'variant_fields_00004_00005_00009' order represents '6' with '11021'
-11019 11021 0
c Var 'variant_fields_00004_00005_00009' direct represents '6' with '11022'
11019 -11021 11022 0
-11022 11021 0
-11022 -11019 0
c Var 'variant_fields_00004_00005_00009' order represents '7' with '11023'
-11021 11023 0
c Var 'variant_fields_00004_00005_00009' direct represents '7' with '11024'
11021 -11023 11024 0
-11024 11023 0
-11024 -11021 0
c Var 'variant_fields_00004_00005_00009' order represents '8' with '11025'
-11023 11025 0
c Var 'variant_fields_00004_00005_00009' direct represents '8' with '11026'
11023 -11025 11026 0
-11026 11025 0
-11026 -11023 0
c Var 'variant_fields_00004_00005_00009' direct represents '9' with '-11025'
11012 11014 11016 11018 11020 11022 11024 11026 -11025 0
c Encoding variable: variant_fields_00004_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00001' order represents '1' with '11027'
c Var 'variant_fields_00004_00006_00001' direct represents '1' with '11027'
c Var 'variant_fields_00004_00006_00001' order represents '2' with '11028'
-11027 11028 0
c Var 'variant_fields_00004_00006_00001' direct represents '2' with '11029'
11027 -11028 11029 0
-11029 11028 0
-11029 -11027 0
c Var 'variant_fields_00004_00006_00001' order represents '3' with '11030'
-11028 11030 0
c Var 'variant_fields_00004_00006_00001' direct represents '3' with '11031'
11028 -11030 11031 0
-11031 11030 0
-11031 -11028 0
c Var 'variant_fields_00004_00006_00001' order represents '4' with '11032'
-11030 11032 0
c Var 'variant_fields_00004_00006_00001' direct represents '4' with '11033'
11030 -11032 11033 0
-11033 11032 0
-11033 -11030 0
c Var 'variant_fields_00004_00006_00001' order represents '5' with '11034'
-11032 11034 0
c Var 'variant_fields_00004_00006_00001' direct represents '5' with '11035'
11032 -11034 11035 0
-11035 11034 0
-11035 -11032 0
c Var 'variant_fields_00004_00006_00001' order represents '6' with '11036'
-11034 11036 0
c Var 'variant_fields_00004_00006_00001' direct represents '6' with '11037'
11034 -11036 11037 0
-11037 11036 0
-11037 -11034 0
c Var 'variant_fields_00004_00006_00001' order represents '7' with '11038'
-11036 11038 0
c Var 'variant_fields_00004_00006_00001' direct represents '7' with '11039'
11036 -11038 11039 0
-11039 11038 0
-11039 -11036 0
c Var 'variant_fields_00004_00006_00001' order represents '8' with '11040'
-11038 11040 0
c Var 'variant_fields_00004_00006_00001' direct represents '8' with '11041'
11038 -11040 11041 0
-11041 11040 0
-11041 -11038 0
c Var 'variant_fields_00004_00006_00001' direct represents '9' with '-11040'
11027 11029 11031 11033 11035 11037 11039 11041 -11040 0
c Encoding variable: variant_fields_00004_00006_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00002' order represents '1' with '11042'
c Var 'variant_fields_00004_00006_00002' direct represents '1' with '11042'
c Var 'variant_fields_00004_00006_00002' order represents '2' with '11043'
-11042 11043 0
c Var 'variant_fields_00004_00006_00002' direct represents '2' with '11044'
11042 -11043 11044 0
-11044 11043 0
-11044 -11042 0
c Var 'variant_fields_00004_00006_00002' order represents '3' with '11045'
-11043 11045 0
c Var 'variant_fields_00004_00006_00002' direct represents '3' with '11046'
11043 -11045 11046 0
-11046 11045 0
-11046 -11043 0
c Var 'variant_fields_00004_00006_00002' order represents '4' with '11047'
-11045 11047 0
c Var 'variant_fields_00004_00006_00002' direct represents '4' with '11048'
11045 -11047 11048 0
-11048 11047 0
-11048 -11045 0
c Var 'variant_fields_00004_00006_00002' order represents '5' with '11049'
-11047 11049 0
c Var 'variant_fields_00004_00006_00002' direct represents '5' with '11050'
11047 -11049 11050 0
-11050 11049 0
-11050 -11047 0
c Var 'variant_fields_00004_00006_00002' order represents '6' with '11051'
-11049 11051 0
c Var 'variant_fields_00004_00006_00002' direct represents '6' with '11052'
11049 -11051 11052 0
-11052 11051 0
-11052 -11049 0
c Var 'variant_fields_00004_00006_00002' order represents '7' with '11053'
-11051 11053 0
c Var 'variant_fields_00004_00006_00002' direct represents '7' with '11054'
11051 -11053 11054 0
-11054 11053 0
-11054 -11051 0
c Var 'variant_fields_00004_00006_00002' order represents '8' with '11055'
-11053 11055 0
c Var 'variant_fields_00004_00006_00002' direct represents '8' with '11056'
11053 -11055 11056 0
-11056 11055 0
-11056 -11053 0
c Var 'variant_fields_00004_00006_00002' direct represents '9' with '-11055'
11042 11044 11046 11048 11050 11052 11054 11056 -11055 0
c Encoding variable: variant_fields_00004_00006_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00003' order represents '1' with '11057'
c Var 'variant_fields_00004_00006_00003' direct represents '1' with '11057'
c Var 'variant_fields_00004_00006_00003' order represents '2' with '11058'
-11057 11058 0
c Var 'variant_fields_00004_00006_00003' direct represents '2' with '11059'
11057 -11058 11059 0
-11059 11058 0
-11059 -11057 0
c Var 'variant_fields_00004_00006_00003' order represents '3' with '11060'
-11058 11060 0
c Var 'variant_fields_00004_00006_00003' direct represents '3' with '11061'
11058 -11060 11061 0
-11061 11060 0
-11061 -11058 0
c Var 'variant_fields_00004_00006_00003' order represents '4' with '11062'
-11060 11062 0
c Var 'variant_fields_00004_00006_00003' direct represents '4' with '11063'
11060 -11062 11063 0
-11063 11062 0
-11063 -11060 0
c Var 'variant_fields_00004_00006_00003' order represents '5' with '11064'
-11062 11064 0
c Var 'variant_fields_00004_00006_00003' direct represents '5' with '11065'
11062 -11064 11065 0
-11065 11064 0
-11065 -11062 0
c Var 'variant_fields_00004_00006_00003' order represents '6' with '11066'
-11064 11066 0
c Var 'variant_fields_00004_00006_00003' direct represents '6' with '11067'
11064 -11066 11067 0
-11067 11066 0
-11067 -11064 0
c Var 'variant_fields_00004_00006_00003' order represents '7' with '11068'
-11066 11068 0
c Var 'variant_fields_00004_00006_00003' direct represents '7' with '11069'
11066 -11068 11069 0
-11069 11068 0
-11069 -11066 0
c Var 'variant_fields_00004_00006_00003' order represents '8' with '11070'
-11068 11070 0
c Var 'variant_fields_00004_00006_00003' direct represents '8' with '11071'
11068 -11070 11071 0
-11071 11070 0
-11071 -11068 0
c Var 'variant_fields_00004_00006_00003' direct represents '9' with '-11070'
11057 11059 11061 11063 11065 11067 11069 11071 -11070 0
c Encoding variable: variant_fields_00004_00006_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00004' order represents '1' with '11072'
c Var 'variant_fields_00004_00006_00004' direct represents '1' with '11072'
c Var 'variant_fields_00004_00006_00004' order represents '2' with '11073'
-11072 11073 0
c Var 'variant_fields_00004_00006_00004' direct represents '2' with '11074'
11072 -11073 11074 0
-11074 11073 0
-11074 -11072 0
c Var 'variant_fields_00004_00006_00004' order represents '3' with '11075'
-11073 11075 0
c Var 'variant_fields_00004_00006_00004' direct represents '3' with '11076'
11073 -11075 11076 0
-11076 11075 0
-11076 -11073 0
c Var 'variant_fields_00004_00006_00004' order represents '4' with '11077'
-11075 11077 0
c Var 'variant_fields_00004_00006_00004' direct represents '4' with '11078'
11075 -11077 11078 0
-11078 11077 0
-11078 -11075 0
c Var 'variant_fields_00004_00006_00004' order represents '5' with '11079'
-11077 11079 0
c Var 'variant_fields_00004_00006_00004' direct represents '5' with '11080'
11077 -11079 11080 0
-11080 11079 0
-11080 -11077 0
c Var 'variant_fields_00004_00006_00004' order represents '6' with '11081'
-11079 11081 0
c Var 'variant_fields_00004_00006_00004' direct represents '6' with '11082'
11079 -11081 11082 0
-11082 11081 0
-11082 -11079 0
c Var 'variant_fields_00004_00006_00004' order represents '7' with '11083'
-11081 11083 0
c Var 'variant_fields_00004_00006_00004' direct represents '7' with '11084'
11081 -11083 11084 0
-11084 11083 0
-11084 -11081 0
c Var 'variant_fields_00004_00006_00004' order represents '8' with '11085'
-11083 11085 0
c Var 'variant_fields_00004_00006_00004' direct represents '8' with '11086'
11083 -11085 11086 0
-11086 11085 0
-11086 -11083 0
c Var 'variant_fields_00004_00006_00004' direct represents '9' with '-11085'
11072 11074 11076 11078 11080 11082 11084 11086 -11085 0
c Encoding variable: variant_fields_00004_00006_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00005' order represents '1' with '11087'
c Var 'variant_fields_00004_00006_00005' direct represents '1' with '11087'
c Var 'variant_fields_00004_00006_00005' order represents '2' with '11088'
-11087 11088 0
c Var 'variant_fields_00004_00006_00005' direct represents '2' with '11089'
11087 -11088 11089 0
-11089 11088 0
-11089 -11087 0
c Var 'variant_fields_00004_00006_00005' order represents '3' with '11090'
-11088 11090 0
c Var 'variant_fields_00004_00006_00005' direct represents '3' with '11091'
11088 -11090 11091 0
-11091 11090 0
-11091 -11088 0
c Var 'variant_fields_00004_00006_00005' order represents '4' with '11092'
-11090 11092 0
c Var 'variant_fields_00004_00006_00005' direct represents '4' with '11093'
11090 -11092 11093 0
-11093 11092 0
-11093 -11090 0
c Var 'variant_fields_00004_00006_00005' order represents '5' with '11094'
-11092 11094 0
c Var 'variant_fields_00004_00006_00005' direct represents '5' with '11095'
11092 -11094 11095 0
-11095 11094 0
-11095 -11092 0
c Var 'variant_fields_00004_00006_00005' order represents '6' with '11096'
-11094 11096 0
c Var 'variant_fields_00004_00006_00005' direct represents '6' with '11097'
11094 -11096 11097 0
-11097 11096 0
-11097 -11094 0
c Var 'variant_fields_00004_00006_00005' order represents '7' with '11098'
-11096 11098 0
c Var 'variant_fields_00004_00006_00005' direct represents '7' with '11099'
11096 -11098 11099 0
-11099 11098 0
-11099 -11096 0
c Var 'variant_fields_00004_00006_00005' order represents '8' with '11100'
-11098 11100 0
c Var 'variant_fields_00004_00006_00005' direct represents '8' with '11101'
11098 -11100 11101 0
-11101 11100 0
-11101 -11098 0
c Var 'variant_fields_00004_00006_00005' direct represents '9' with '-11100'
11087 11089 11091 11093 11095 11097 11099 11101 -11100 0
c Encoding variable: variant_fields_00004_00006_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00006' order represents '1' with '11102'
c Var 'variant_fields_00004_00006_00006' direct represents '1' with '11102'
c Var 'variant_fields_00004_00006_00006' order represents '2' with '11103'
-11102 11103 0
c Var 'variant_fields_00004_00006_00006' direct represents '2' with '11104'
11102 -11103 11104 0
-11104 11103 0
-11104 -11102 0
c Var 'variant_fields_00004_00006_00006' order represents '3' with '11105'
-11103 11105 0
c Var 'variant_fields_00004_00006_00006' direct represents '3' with '11106'
11103 -11105 11106 0
-11106 11105 0
-11106 -11103 0
c Var 'variant_fields_00004_00006_00006' order represents '4' with '11107'
-11105 11107 0
c Var 'variant_fields_00004_00006_00006' direct represents '4' with '11108'
11105 -11107 11108 0
-11108 11107 0
-11108 -11105 0
c Var 'variant_fields_00004_00006_00006' order represents '5' with '11109'
-11107 11109 0
c Var 'variant_fields_00004_00006_00006' direct represents '5' with '11110'
11107 -11109 11110 0
-11110 11109 0
-11110 -11107 0
c Var 'variant_fields_00004_00006_00006' order represents '6' with '11111'
-11109 11111 0
c Var 'variant_fields_00004_00006_00006' direct represents '6' with '11112'
11109 -11111 11112 0
-11112 11111 0
-11112 -11109 0
c Var 'variant_fields_00004_00006_00006' order represents '7' with '11113'
-11111 11113 0
c Var 'variant_fields_00004_00006_00006' direct represents '7' with '11114'
11111 -11113 11114 0
-11114 11113 0
-11114 -11111 0
c Var 'variant_fields_00004_00006_00006' order represents '8' with '11115'
-11113 11115 0
c Var 'variant_fields_00004_00006_00006' direct represents '8' with '11116'
11113 -11115 11116 0
-11116 11115 0
-11116 -11113 0
c Var 'variant_fields_00004_00006_00006' direct represents '9' with '-11115'
11102 11104 11106 11108 11110 11112 11114 11116 -11115 0
c Encoding variable: variant_fields_00004_00006_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00007' order represents '1' with '11117'
c Var 'variant_fields_00004_00006_00007' direct represents '1' with '11117'
c Var 'variant_fields_00004_00006_00007' order represents '2' with '11118'
-11117 11118 0
c Var 'variant_fields_00004_00006_00007' direct represents '2' with '11119'
11117 -11118 11119 0
-11119 11118 0
-11119 -11117 0
c Var 'variant_fields_00004_00006_00007' order represents '3' with '11120'
-11118 11120 0
c Var 'variant_fields_00004_00006_00007' direct represents '3' with '11121'
11118 -11120 11121 0
-11121 11120 0
-11121 -11118 0
c Var 'variant_fields_00004_00006_00007' order represents '4' with '11122'
-11120 11122 0
c Var 'variant_fields_00004_00006_00007' direct represents '4' with '11123'
11120 -11122 11123 0
-11123 11122 0
-11123 -11120 0
c Var 'variant_fields_00004_00006_00007' order represents '5' with '11124'
-11122 11124 0
c Var 'variant_fields_00004_00006_00007' direct represents '5' with '11125'
11122 -11124 11125 0
-11125 11124 0
-11125 -11122 0
c Var 'variant_fields_00004_00006_00007' order represents '6' with '11126'
-11124 11126 0
c Var 'variant_fields_00004_00006_00007' direct represents '6' with '11127'
11124 -11126 11127 0
-11127 11126 0
-11127 -11124 0
c Var 'variant_fields_00004_00006_00007' order represents '7' with '11128'
-11126 11128 0
c Var 'variant_fields_00004_00006_00007' direct represents '7' with '11129'
11126 -11128 11129 0
-11129 11128 0
-11129 -11126 0
c Var 'variant_fields_00004_00006_00007' order represents '8' with '11130'
-11128 11130 0
c Var 'variant_fields_00004_00006_00007' direct represents '8' with '11131'
11128 -11130 11131 0
-11131 11130 0
-11131 -11128 0
c Var 'variant_fields_00004_00006_00007' direct represents '9' with '-11130'
11117 11119 11121 11123 11125 11127 11129 11131 -11130 0
c Encoding variable: variant_fields_00004_00006_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00008' order represents '1' with '11132'
c Var 'variant_fields_00004_00006_00008' direct represents '1' with '11132'
c Var 'variant_fields_00004_00006_00008' order represents '2' with '11133'
-11132 11133 0
c Var 'variant_fields_00004_00006_00008' direct represents '2' with '11134'
11132 -11133 11134 0
-11134 11133 0
-11134 -11132 0
c Var 'variant_fields_00004_00006_00008' order represents '3' with '11135'
-11133 11135 0
c Var 'variant_fields_00004_00006_00008' direct represents '3' with '11136'
11133 -11135 11136 0
-11136 11135 0
-11136 -11133 0
c Var 'variant_fields_00004_00006_00008' order represents '4' with '11137'
-11135 11137 0
c Var 'variant_fields_00004_00006_00008' direct represents '4' with '11138'
11135 -11137 11138 0
-11138 11137 0
-11138 -11135 0
c Var 'variant_fields_00004_00006_00008' order represents '5' with '11139'
-11137 11139 0
c Var 'variant_fields_00004_00006_00008' direct represents '5' with '11140'
11137 -11139 11140 0
-11140 11139 0
-11140 -11137 0
c Var 'variant_fields_00004_00006_00008' order represents '6' with '11141'
-11139 11141 0
c Var 'variant_fields_00004_00006_00008' direct represents '6' with '11142'
11139 -11141 11142 0
-11142 11141 0
-11142 -11139 0
c Var 'variant_fields_00004_00006_00008' order represents '7' with '11143'
-11141 11143 0
c Var 'variant_fields_00004_00006_00008' direct represents '7' with '11144'
11141 -11143 11144 0
-11144 11143 0
-11144 -11141 0
c Var 'variant_fields_00004_00006_00008' order represents '8' with '11145'
-11143 11145 0
c Var 'variant_fields_00004_00006_00008' direct represents '8' with '11146'
11143 -11145 11146 0
-11146 11145 0
-11146 -11143 0
c Var 'variant_fields_00004_00006_00008' direct represents '9' with '-11145'
11132 11134 11136 11138 11140 11142 11144 11146 -11145 0
c Encoding variable: variant_fields_00004_00006_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00006_00009' order represents '1' with '11147'
c Var 'variant_fields_00004_00006_00009' direct represents '1' with '11147'
c Var 'variant_fields_00004_00006_00009' order represents '2' with '11148'
-11147 11148 0
c Var 'variant_fields_00004_00006_00009' direct represents '2' with '11149'
11147 -11148 11149 0
-11149 11148 0
-11149 -11147 0
c Var 'variant_fields_00004_00006_00009' order represents '3' with '11150'
-11148 11150 0
c Var 'variant_fields_00004_00006_00009' direct represents '3' with '11151'
11148 -11150 11151 0
-11151 11150 0
-11151 -11148 0
c Var 'variant_fields_00004_00006_00009' order represents '4' with '11152'
-11150 11152 0
c Var 'variant_fields_00004_00006_00009' direct represents '4' with '11153'
11150 -11152 11153 0
-11153 11152 0
-11153 -11150 0
c Var 'variant_fields_00004_00006_00009' order represents '5' with '11154'
-11152 11154 0
c Var 'variant_fields_00004_00006_00009' direct represents '5' with '11155'
11152 -11154 11155 0
-11155 11154 0
-11155 -11152 0
c Var 'variant_fields_00004_00006_00009' order represents '6' with '11156'
-11154 11156 0
c Var 'variant_fields_00004_00006_00009' direct represents '6' with '11157'
11154 -11156 11157 0
-11157 11156 0
-11157 -11154 0
c Var 'variant_fields_00004_00006_00009' order represents '7' with '11158'
-11156 11158 0
c Var 'variant_fields_00004_00006_00009' direct represents '7' with '11159'
11156 -11158 11159 0
-11159 11158 0
-11159 -11156 0
c Var 'variant_fields_00004_00006_00009' order represents '8' with '11160'
-11158 11160 0
c Var 'variant_fields_00004_00006_00009' direct represents '8' with '11161'
11158 -11160 11161 0
-11161 11160 0
-11161 -11158 0
c Var 'variant_fields_00004_00006_00009' direct represents '9' with '-11160'
11147 11149 11151 11153 11155 11157 11159 11161 -11160 0
c Encoding variable: variant_fields_00004_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00001' order represents '1' with '11162'
c Var 'variant_fields_00004_00007_00001' direct represents '1' with '11162'
c Var 'variant_fields_00004_00007_00001' order represents '2' with '11163'
-11162 11163 0
c Var 'variant_fields_00004_00007_00001' direct represents '2' with '11164'
11162 -11163 11164 0
-11164 11163 0
-11164 -11162 0
c Var 'variant_fields_00004_00007_00001' order represents '3' with '11165'
-11163 11165 0
c Var 'variant_fields_00004_00007_00001' direct represents '3' with '11166'
11163 -11165 11166 0
-11166 11165 0
-11166 -11163 0
c Var 'variant_fields_00004_00007_00001' order represents '4' with '11167'
-11165 11167 0
c Var 'variant_fields_00004_00007_00001' direct represents '4' with '11168'
11165 -11167 11168 0
-11168 11167 0
-11168 -11165 0
c Var 'variant_fields_00004_00007_00001' order represents '5' with '11169'
-11167 11169 0
c Var 'variant_fields_00004_00007_00001' direct represents '5' with '11170'
11167 -11169 11170 0
-11170 11169 0
-11170 -11167 0
c Var 'variant_fields_00004_00007_00001' order represents '6' with '11171'
-11169 11171 0
c Var 'variant_fields_00004_00007_00001' direct represents '6' with '11172'
11169 -11171 11172 0
-11172 11171 0
-11172 -11169 0
c Var 'variant_fields_00004_00007_00001' order represents '7' with '11173'
-11171 11173 0
c Var 'variant_fields_00004_00007_00001' direct represents '7' with '11174'
11171 -11173 11174 0
-11174 11173 0
-11174 -11171 0
c Var 'variant_fields_00004_00007_00001' order represents '8' with '11175'
-11173 11175 0
c Var 'variant_fields_00004_00007_00001' direct represents '8' with '11176'
11173 -11175 11176 0
-11176 11175 0
-11176 -11173 0
c Var 'variant_fields_00004_00007_00001' direct represents '9' with '-11175'
11162 11164 11166 11168 11170 11172 11174 11176 -11175 0
c Encoding variable: variant_fields_00004_00007_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00002' order represents '1' with '11177'
c Var 'variant_fields_00004_00007_00002' direct represents '1' with '11177'
c Var 'variant_fields_00004_00007_00002' order represents '2' with '11178'
-11177 11178 0
c Var 'variant_fields_00004_00007_00002' direct represents '2' with '11179'
11177 -11178 11179 0
-11179 11178 0
-11179 -11177 0
c Var 'variant_fields_00004_00007_00002' order represents '3' with '11180'
-11178 11180 0
c Var 'variant_fields_00004_00007_00002' direct represents '3' with '11181'
11178 -11180 11181 0
-11181 11180 0
-11181 -11178 0
c Var 'variant_fields_00004_00007_00002' order represents '4' with '11182'
-11180 11182 0
c Var 'variant_fields_00004_00007_00002' direct represents '4' with '11183'
11180 -11182 11183 0
-11183 11182 0
-11183 -11180 0
c Var 'variant_fields_00004_00007_00002' order represents '5' with '11184'
-11182 11184 0
c Var 'variant_fields_00004_00007_00002' direct represents '5' with '11185'
11182 -11184 11185 0
-11185 11184 0
-11185 -11182 0
c Var 'variant_fields_00004_00007_00002' order represents '6' with '11186'
-11184 11186 0
c Var 'variant_fields_00004_00007_00002' direct represents '6' with '11187'
11184 -11186 11187 0
-11187 11186 0
-11187 -11184 0
c Var 'variant_fields_00004_00007_00002' order represents '7' with '11188'
-11186 11188 0
c Var 'variant_fields_00004_00007_00002' direct represents '7' with '11189'
11186 -11188 11189 0
-11189 11188 0
-11189 -11186 0
c Var 'variant_fields_00004_00007_00002' order represents '8' with '11190'
-11188 11190 0
c Var 'variant_fields_00004_00007_00002' direct represents '8' with '11191'
11188 -11190 11191 0
-11191 11190 0
-11191 -11188 0
c Var 'variant_fields_00004_00007_00002' direct represents '9' with '-11190'
11177 11179 11181 11183 11185 11187 11189 11191 -11190 0
c Encoding variable: variant_fields_00004_00007_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00003' order represents '1' with '11192'
c Var 'variant_fields_00004_00007_00003' direct represents '1' with '11192'
c Var 'variant_fields_00004_00007_00003' order represents '2' with '11193'
-11192 11193 0
c Var 'variant_fields_00004_00007_00003' direct represents '2' with '11194'
11192 -11193 11194 0
-11194 11193 0
-11194 -11192 0
c Var 'variant_fields_00004_00007_00003' order represents '3' with '11195'
-11193 11195 0
c Var 'variant_fields_00004_00007_00003' direct represents '3' with '11196'
11193 -11195 11196 0
-11196 11195 0
-11196 -11193 0
c Var 'variant_fields_00004_00007_00003' order represents '4' with '11197'
-11195 11197 0
c Var 'variant_fields_00004_00007_00003' direct represents '4' with '11198'
11195 -11197 11198 0
-11198 11197 0
-11198 -11195 0
c Var 'variant_fields_00004_00007_00003' order represents '5' with '11199'
-11197 11199 0
c Var 'variant_fields_00004_00007_00003' direct represents '5' with '11200'
11197 -11199 11200 0
-11200 11199 0
-11200 -11197 0
c Var 'variant_fields_00004_00007_00003' order represents '6' with '11201'
-11199 11201 0
c Var 'variant_fields_00004_00007_00003' direct represents '6' with '11202'
11199 -11201 11202 0
-11202 11201 0
-11202 -11199 0
c Var 'variant_fields_00004_00007_00003' order represents '7' with '11203'
-11201 11203 0
c Var 'variant_fields_00004_00007_00003' direct represents '7' with '11204'
11201 -11203 11204 0
-11204 11203 0
-11204 -11201 0
c Var 'variant_fields_00004_00007_00003' order represents '8' with '11205'
-11203 11205 0
c Var 'variant_fields_00004_00007_00003' direct represents '8' with '11206'
11203 -11205 11206 0
-11206 11205 0
-11206 -11203 0
c Var 'variant_fields_00004_00007_00003' direct represents '9' with '-11205'
11192 11194 11196 11198 11200 11202 11204 11206 -11205 0
c Encoding variable: variant_fields_00004_00007_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00004' order represents '1' with '11207'
c Var 'variant_fields_00004_00007_00004' direct represents '1' with '11207'
c Var 'variant_fields_00004_00007_00004' order represents '2' with '11208'
-11207 11208 0
c Var 'variant_fields_00004_00007_00004' direct represents '2' with '11209'
11207 -11208 11209 0
-11209 11208 0
-11209 -11207 0
c Var 'variant_fields_00004_00007_00004' order represents '3' with '11210'
-11208 11210 0
c Var 'variant_fields_00004_00007_00004' direct represents '3' with '11211'
11208 -11210 11211 0
-11211 11210 0
-11211 -11208 0
c Var 'variant_fields_00004_00007_00004' order represents '4' with '11212'
-11210 11212 0
c Var 'variant_fields_00004_00007_00004' direct represents '4' with '11213'
11210 -11212 11213 0
-11213 11212 0
-11213 -11210 0
c Var 'variant_fields_00004_00007_00004' order represents '5' with '11214'
-11212 11214 0
c Var 'variant_fields_00004_00007_00004' direct represents '5' with '11215'
11212 -11214 11215 0
-11215 11214 0
-11215 -11212 0
c Var 'variant_fields_00004_00007_00004' order represents '6' with '11216'
-11214 11216 0
c Var 'variant_fields_00004_00007_00004' direct represents '6' with '11217'
11214 -11216 11217 0
-11217 11216 0
-11217 -11214 0
c Var 'variant_fields_00004_00007_00004' order represents '7' with '11218'
-11216 11218 0
c Var 'variant_fields_00004_00007_00004' direct represents '7' with '11219'
11216 -11218 11219 0
-11219 11218 0
-11219 -11216 0
c Var 'variant_fields_00004_00007_00004' order represents '8' with '11220'
-11218 11220 0
c Var 'variant_fields_00004_00007_00004' direct represents '8' with '11221'
11218 -11220 11221 0
-11221 11220 0
-11221 -11218 0
c Var 'variant_fields_00004_00007_00004' direct represents '9' with '-11220'
11207 11209 11211 11213 11215 11217 11219 11221 -11220 0
c Encoding variable: variant_fields_00004_00007_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00005' order represents '1' with '11222'
c Var 'variant_fields_00004_00007_00005' direct represents '1' with '11222'
c Var 'variant_fields_00004_00007_00005' order represents '2' with '11223'
-11222 11223 0
c Var 'variant_fields_00004_00007_00005' direct represents '2' with '11224'
11222 -11223 11224 0
-11224 11223 0
-11224 -11222 0
c Var 'variant_fields_00004_00007_00005' order represents '3' with '11225'
-11223 11225 0
c Var 'variant_fields_00004_00007_00005' direct represents '3' with '11226'
11223 -11225 11226 0
-11226 11225 0
-11226 -11223 0
c Var 'variant_fields_00004_00007_00005' order represents '4' with '11227'
-11225 11227 0
c Var 'variant_fields_00004_00007_00005' direct represents '4' with '11228'
11225 -11227 11228 0
-11228 11227 0
-11228 -11225 0
c Var 'variant_fields_00004_00007_00005' order represents '5' with '11229'
-11227 11229 0
c Var 'variant_fields_00004_00007_00005' direct represents '5' with '11230'
11227 -11229 11230 0
-11230 11229 0
-11230 -11227 0
c Var 'variant_fields_00004_00007_00005' order represents '6' with '11231'
-11229 11231 0
c Var 'variant_fields_00004_00007_00005' direct represents '6' with '11232'
11229 -11231 11232 0
-11232 11231 0
-11232 -11229 0
c Var 'variant_fields_00004_00007_00005' order represents '7' with '11233'
-11231 11233 0
c Var 'variant_fields_00004_00007_00005' direct represents '7' with '11234'
11231 -11233 11234 0
-11234 11233 0
-11234 -11231 0
c Var 'variant_fields_00004_00007_00005' order represents '8' with '11235'
-11233 11235 0
c Var 'variant_fields_00004_00007_00005' direct represents '8' with '11236'
11233 -11235 11236 0
-11236 11235 0
-11236 -11233 0
c Var 'variant_fields_00004_00007_00005' direct represents '9' with '-11235'
11222 11224 11226 11228 11230 11232 11234 11236 -11235 0
c Encoding variable: variant_fields_00004_00007_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00006' order represents '1' with '11237'
c Var 'variant_fields_00004_00007_00006' direct represents '1' with '11237'
c Var 'variant_fields_00004_00007_00006' order represents '2' with '11238'
-11237 11238 0
c Var 'variant_fields_00004_00007_00006' direct represents '2' with '11239'
11237 -11238 11239 0
-11239 11238 0
-11239 -11237 0
c Var 'variant_fields_00004_00007_00006' order represents '3' with '11240'
-11238 11240 0
c Var 'variant_fields_00004_00007_00006' direct represents '3' with '11241'
11238 -11240 11241 0
-11241 11240 0
-11241 -11238 0
c Var 'variant_fields_00004_00007_00006' order represents '4' with '11242'
-11240 11242 0
c Var 'variant_fields_00004_00007_00006' direct represents '4' with '11243'
11240 -11242 11243 0
-11243 11242 0
-11243 -11240 0
c Var 'variant_fields_00004_00007_00006' order represents '5' with '11244'
-11242 11244 0
c Var 'variant_fields_00004_00007_00006' direct represents '5' with '11245'
11242 -11244 11245 0
-11245 11244 0
-11245 -11242 0
c Var 'variant_fields_00004_00007_00006' order represents '6' with '11246'
-11244 11246 0
c Var 'variant_fields_00004_00007_00006' direct represents '6' with '11247'
11244 -11246 11247 0
-11247 11246 0
-11247 -11244 0
c Var 'variant_fields_00004_00007_00006' order represents '7' with '11248'
-11246 11248 0
c Var 'variant_fields_00004_00007_00006' direct represents '7' with '11249'
11246 -11248 11249 0
-11249 11248 0
-11249 -11246 0
c Var 'variant_fields_00004_00007_00006' order represents '8' with '11250'
-11248 11250 0
c Var 'variant_fields_00004_00007_00006' direct represents '8' with '11251'
11248 -11250 11251 0
-11251 11250 0
-11251 -11248 0
c Var 'variant_fields_00004_00007_00006' direct represents '9' with '-11250'
11237 11239 11241 11243 11245 11247 11249 11251 -11250 0
c Encoding variable: variant_fields_00004_00007_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00007' order represents '1' with '11252'
c Var 'variant_fields_00004_00007_00007' direct represents '1' with '11252'
c Var 'variant_fields_00004_00007_00007' order represents '2' with '11253'
-11252 11253 0
c Var 'variant_fields_00004_00007_00007' direct represents '2' with '11254'
11252 -11253 11254 0
-11254 11253 0
-11254 -11252 0
c Var 'variant_fields_00004_00007_00007' order represents '3' with '11255'
-11253 11255 0
c Var 'variant_fields_00004_00007_00007' direct represents '3' with '11256'
11253 -11255 11256 0
-11256 11255 0
-11256 -11253 0
c Var 'variant_fields_00004_00007_00007' order represents '4' with '11257'
-11255 11257 0
c Var 'variant_fields_00004_00007_00007' direct represents '4' with '11258'
11255 -11257 11258 0
-11258 11257 0
-11258 -11255 0
c Var 'variant_fields_00004_00007_00007' order represents '5' with '11259'
-11257 11259 0
c Var 'variant_fields_00004_00007_00007' direct represents '5' with '11260'
11257 -11259 11260 0
-11260 11259 0
-11260 -11257 0
c Var 'variant_fields_00004_00007_00007' order represents '6' with '11261'
-11259 11261 0
c Var 'variant_fields_00004_00007_00007' direct represents '6' with '11262'
11259 -11261 11262 0
-11262 11261 0
-11262 -11259 0
c Var 'variant_fields_00004_00007_00007' order represents '7' with '11263'
-11261 11263 0
c Var 'variant_fields_00004_00007_00007' direct represents '7' with '11264'
11261 -11263 11264 0
-11264 11263 0
-11264 -11261 0
c Var 'variant_fields_00004_00007_00007' order represents '8' with '11265'
-11263 11265 0
c Var 'variant_fields_00004_00007_00007' direct represents '8' with '11266'
11263 -11265 11266 0
-11266 11265 0
-11266 -11263 0
c Var 'variant_fields_00004_00007_00007' direct represents '9' with '-11265'
11252 11254 11256 11258 11260 11262 11264 11266 -11265 0
c Encoding variable: variant_fields_00004_00007_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00008' order represents '1' with '11267'
c Var 'variant_fields_00004_00007_00008' direct represents '1' with '11267'
c Var 'variant_fields_00004_00007_00008' order represents '2' with '11268'
-11267 11268 0
c Var 'variant_fields_00004_00007_00008' direct represents '2' with '11269'
11267 -11268 11269 0
-11269 11268 0
-11269 -11267 0
c Var 'variant_fields_00004_00007_00008' order represents '3' with '11270'
-11268 11270 0
c Var 'variant_fields_00004_00007_00008' direct represents '3' with '11271'
11268 -11270 11271 0
-11271 11270 0
-11271 -11268 0
c Var 'variant_fields_00004_00007_00008' order represents '4' with '11272'
-11270 11272 0
c Var 'variant_fields_00004_00007_00008' direct represents '4' with '11273'
11270 -11272 11273 0
-11273 11272 0
-11273 -11270 0
c Var 'variant_fields_00004_00007_00008' order represents '5' with '11274'
-11272 11274 0
c Var 'variant_fields_00004_00007_00008' direct represents '5' with '11275'
11272 -11274 11275 0
-11275 11274 0
-11275 -11272 0
c Var 'variant_fields_00004_00007_00008' order represents '6' with '11276'
-11274 11276 0
c Var 'variant_fields_00004_00007_00008' direct represents '6' with '11277'
11274 -11276 11277 0
-11277 11276 0
-11277 -11274 0
c Var 'variant_fields_00004_00007_00008' order represents '7' with '11278'
-11276 11278 0
c Var 'variant_fields_00004_00007_00008' direct represents '7' with '11279'
11276 -11278 11279 0
-11279 11278 0
-11279 -11276 0
c Var 'variant_fields_00004_00007_00008' order represents '8' with '11280'
-11278 11280 0
c Var 'variant_fields_00004_00007_00008' direct represents '8' with '11281'
11278 -11280 11281 0
-11281 11280 0
-11281 -11278 0
c Var 'variant_fields_00004_00007_00008' direct represents '9' with '-11280'
11267 11269 11271 11273 11275 11277 11279 11281 -11280 0
c Encoding variable: variant_fields_00004_00007_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00009' order represents '1' with '11282'
c Var 'variant_fields_00004_00007_00009' direct represents '1' with '11282'
c Var 'variant_fields_00004_00007_00009' order represents '2' with '11283'
-11282 11283 0
c Var 'variant_fields_00004_00007_00009' direct represents '2' with '11284'
11282 -11283 11284 0
-11284 11283 0
-11284 -11282 0
c Var 'variant_fields_00004_00007_00009' order represents '3' with '11285'
-11283 11285 0
c Var 'variant_fields_00004_00007_00009' direct represents '3' with '11286'
11283 -11285 11286 0
-11286 11285 0
-11286 -11283 0
c Var 'variant_fields_00004_00007_00009' order represents '4' with '11287'
-11285 11287 0
c Var 'variant_fields_00004_00007_00009' direct represents '4' with '11288'
11285 -11287 11288 0
-11288 11287 0
-11288 -11285 0
c Var 'variant_fields_00004_00007_00009' order represents '5' with '11289'
-11287 11289 0
c Var 'variant_fields_00004_00007_00009' direct represents '5' with '11290'
11287 -11289 11290 0
-11290 11289 0
-11290 -11287 0
c Var 'variant_fields_00004_00007_00009' order represents '6' with '11291'
-11289 11291 0
c Var 'variant_fields_00004_00007_00009' direct represents '6' with '11292'
11289 -11291 11292 0
-11292 11291 0
-11292 -11289 0
c Var 'variant_fields_00004_00007_00009' order represents '7' with '11293'
-11291 11293 0
c Var 'variant_fields_00004_00007_00009' direct represents '7' with '11294'
11291 -11293 11294 0
-11294 11293 0
-11294 -11291 0
c Var 'variant_fields_00004_00007_00009' order represents '8' with '11295'
-11293 11295 0
c Var 'variant_fields_00004_00007_00009' direct represents '8' with '11296'
11293 -11295 11296 0
-11296 11295 0
-11296 -11293 0
c Var 'variant_fields_00004_00007_00009' direct represents '9' with '-11295'
11282 11284 11286 11288 11290 11292 11294 11296 -11295 0
c Encoding variable: variant_fields_00004_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00001' order represents '1' with '11297'
c Var 'variant_fields_00004_00008_00001' direct represents '1' with '11297'
c Var 'variant_fields_00004_00008_00001' order represents '2' with '11298'
-11297 11298 0
c Var 'variant_fields_00004_00008_00001' direct represents '2' with '11299'
11297 -11298 11299 0
-11299 11298 0
-11299 -11297 0
c Var 'variant_fields_00004_00008_00001' order represents '3' with '11300'
-11298 11300 0
c Var 'variant_fields_00004_00008_00001' direct represents '3' with '11301'
11298 -11300 11301 0
-11301 11300 0
-11301 -11298 0
c Var 'variant_fields_00004_00008_00001' order represents '4' with '11302'
-11300 11302 0
c Var 'variant_fields_00004_00008_00001' direct represents '4' with '11303'
11300 -11302 11303 0
-11303 11302 0
-11303 -11300 0
c Var 'variant_fields_00004_00008_00001' order represents '5' with '11304'
-11302 11304 0
c Var 'variant_fields_00004_00008_00001' direct represents '5' with '11305'
11302 -11304 11305 0
-11305 11304 0
-11305 -11302 0
c Var 'variant_fields_00004_00008_00001' order represents '6' with '11306'
-11304 11306 0
c Var 'variant_fields_00004_00008_00001' direct represents '6' with '11307'
11304 -11306 11307 0
-11307 11306 0
-11307 -11304 0
c Var 'variant_fields_00004_00008_00001' order represents '7' with '11308'
-11306 11308 0
c Var 'variant_fields_00004_00008_00001' direct represents '7' with '11309'
11306 -11308 11309 0
-11309 11308 0
-11309 -11306 0
c Var 'variant_fields_00004_00008_00001' order represents '8' with '11310'
-11308 11310 0
c Var 'variant_fields_00004_00008_00001' direct represents '8' with '11311'
11308 -11310 11311 0
-11311 11310 0
-11311 -11308 0
c Var 'variant_fields_00004_00008_00001' direct represents '9' with '-11310'
11297 11299 11301 11303 11305 11307 11309 11311 -11310 0
c Encoding variable: variant_fields_00004_00008_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00002' order represents '1' with '11312'
c Var 'variant_fields_00004_00008_00002' direct represents '1' with '11312'
c Var 'variant_fields_00004_00008_00002' order represents '2' with '11313'
-11312 11313 0
c Var 'variant_fields_00004_00008_00002' direct represents '2' with '11314'
11312 -11313 11314 0
-11314 11313 0
-11314 -11312 0
c Var 'variant_fields_00004_00008_00002' order represents '3' with '11315'
-11313 11315 0
c Var 'variant_fields_00004_00008_00002' direct represents '3' with '11316'
11313 -11315 11316 0
-11316 11315 0
-11316 -11313 0
c Var 'variant_fields_00004_00008_00002' order represents '4' with '11317'
-11315 11317 0
c Var 'variant_fields_00004_00008_00002' direct represents '4' with '11318'
11315 -11317 11318 0
-11318 11317 0
-11318 -11315 0
c Var 'variant_fields_00004_00008_00002' order represents '5' with '11319'
-11317 11319 0
c Var 'variant_fields_00004_00008_00002' direct represents '5' with '11320'
11317 -11319 11320 0
-11320 11319 0
-11320 -11317 0
c Var 'variant_fields_00004_00008_00002' order represents '6' with '11321'
-11319 11321 0
c Var 'variant_fields_00004_00008_00002' direct represents '6' with '11322'
11319 -11321 11322 0
-11322 11321 0
-11322 -11319 0
c Var 'variant_fields_00004_00008_00002' order represents '7' with '11323'
-11321 11323 0
c Var 'variant_fields_00004_00008_00002' direct represents '7' with '11324'
11321 -11323 11324 0
-11324 11323 0
-11324 -11321 0
c Var 'variant_fields_00004_00008_00002' order represents '8' with '11325'
-11323 11325 0
c Var 'variant_fields_00004_00008_00002' direct represents '8' with '11326'
11323 -11325 11326 0
-11326 11325 0
-11326 -11323 0
c Var 'variant_fields_00004_00008_00002' direct represents '9' with '-11325'
11312 11314 11316 11318 11320 11322 11324 11326 -11325 0
c Encoding variable: variant_fields_00004_00008_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00003' order represents '1' with '11327'
c Var 'variant_fields_00004_00008_00003' direct represents '1' with '11327'
c Var 'variant_fields_00004_00008_00003' order represents '2' with '11328'
-11327 11328 0
c Var 'variant_fields_00004_00008_00003' direct represents '2' with '11329'
11327 -11328 11329 0
-11329 11328 0
-11329 -11327 0
c Var 'variant_fields_00004_00008_00003' order represents '3' with '11330'
-11328 11330 0
c Var 'variant_fields_00004_00008_00003' direct represents '3' with '11331'
11328 -11330 11331 0
-11331 11330 0
-11331 -11328 0
c Var 'variant_fields_00004_00008_00003' order represents '4' with '11332'
-11330 11332 0
c Var 'variant_fields_00004_00008_00003' direct represents '4' with '11333'
11330 -11332 11333 0
-11333 11332 0
-11333 -11330 0
c Var 'variant_fields_00004_00008_00003' order represents '5' with '11334'
-11332 11334 0
c Var 'variant_fields_00004_00008_00003' direct represents '5' with '11335'
11332 -11334 11335 0
-11335 11334 0
-11335 -11332 0
c Var 'variant_fields_00004_00008_00003' order represents '6' with '11336'
-11334 11336 0
c Var 'variant_fields_00004_00008_00003' direct represents '6' with '11337'
11334 -11336 11337 0
-11337 11336 0
-11337 -11334 0
c Var 'variant_fields_00004_00008_00003' order represents '7' with '11338'
-11336 11338 0
c Var 'variant_fields_00004_00008_00003' direct represents '7' with '11339'
11336 -11338 11339 0
-11339 11338 0
-11339 -11336 0
c Var 'variant_fields_00004_00008_00003' order represents '8' with '11340'
-11338 11340 0
c Var 'variant_fields_00004_00008_00003' direct represents '8' with '11341'
11338 -11340 11341 0
-11341 11340 0
-11341 -11338 0
c Var 'variant_fields_00004_00008_00003' direct represents '9' with '-11340'
11327 11329 11331 11333 11335 11337 11339 11341 -11340 0
c Encoding variable: variant_fields_00004_00008_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00004' order represents '1' with '11342'
c Var 'variant_fields_00004_00008_00004' direct represents '1' with '11342'
c Var 'variant_fields_00004_00008_00004' order represents '2' with '11343'
-11342 11343 0
c Var 'variant_fields_00004_00008_00004' direct represents '2' with '11344'
11342 -11343 11344 0
-11344 11343 0
-11344 -11342 0
c Var 'variant_fields_00004_00008_00004' order represents '3' with '11345'
-11343 11345 0
c Var 'variant_fields_00004_00008_00004' direct represents '3' with '11346'
11343 -11345 11346 0
-11346 11345 0
-11346 -11343 0
c Var 'variant_fields_00004_00008_00004' order represents '4' with '11347'
-11345 11347 0
c Var 'variant_fields_00004_00008_00004' direct represents '4' with '11348'
11345 -11347 11348 0
-11348 11347 0
-11348 -11345 0
c Var 'variant_fields_00004_00008_00004' order represents '5' with '11349'
-11347 11349 0
c Var 'variant_fields_00004_00008_00004' direct represents '5' with '11350'
11347 -11349 11350 0
-11350 11349 0
-11350 -11347 0
c Var 'variant_fields_00004_00008_00004' order represents '6' with '11351'
-11349 11351 0
c Var 'variant_fields_00004_00008_00004' direct represents '6' with '11352'
11349 -11351 11352 0
-11352 11351 0
-11352 -11349 0
c Var 'variant_fields_00004_00008_00004' order represents '7' with '11353'
-11351 11353 0
c Var 'variant_fields_00004_00008_00004' direct represents '7' with '11354'
11351 -11353 11354 0
-11354 11353 0
-11354 -11351 0
c Var 'variant_fields_00004_00008_00004' order represents '8' with '11355'
-11353 11355 0
c Var 'variant_fields_00004_00008_00004' direct represents '8' with '11356'
11353 -11355 11356 0
-11356 11355 0
-11356 -11353 0
c Var 'variant_fields_00004_00008_00004' direct represents '9' with '-11355'
11342 11344 11346 11348 11350 11352 11354 11356 -11355 0
c Encoding variable: variant_fields_00004_00008_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00005' order represents '1' with '11357'
c Var 'variant_fields_00004_00008_00005' direct represents '1' with '11357'
c Var 'variant_fields_00004_00008_00005' order represents '2' with '11358'
-11357 11358 0
c Var 'variant_fields_00004_00008_00005' direct represents '2' with '11359'
11357 -11358 11359 0
-11359 11358 0
-11359 -11357 0
c Var 'variant_fields_00004_00008_00005' order represents '3' with '11360'
-11358 11360 0
c Var 'variant_fields_00004_00008_00005' direct represents '3' with '11361'
11358 -11360 11361 0
-11361 11360 0
-11361 -11358 0
c Var 'variant_fields_00004_00008_00005' order represents '4' with '11362'
-11360 11362 0
c Var 'variant_fields_00004_00008_00005' direct represents '4' with '11363'
11360 -11362 11363 0
-11363 11362 0
-11363 -11360 0
c Var 'variant_fields_00004_00008_00005' order represents '5' with '11364'
-11362 11364 0
c Var 'variant_fields_00004_00008_00005' direct represents '5' with '11365'
11362 -11364 11365 0
-11365 11364 0
-11365 -11362 0
c Var 'variant_fields_00004_00008_00005' order represents '6' with '11366'
-11364 11366 0
c Var 'variant_fields_00004_00008_00005' direct represents '6' with '11367'
11364 -11366 11367 0
-11367 11366 0
-11367 -11364 0
c Var 'variant_fields_00004_00008_00005' order represents '7' with '11368'
-11366 11368 0
c Var 'variant_fields_00004_00008_00005' direct represents '7' with '11369'
11366 -11368 11369 0
-11369 11368 0
-11369 -11366 0
c Var 'variant_fields_00004_00008_00005' order represents '8' with '11370'
-11368 11370 0
c Var 'variant_fields_00004_00008_00005' direct represents '8' with '11371'
11368 -11370 11371 0
-11371 11370 0
-11371 -11368 0
c Var 'variant_fields_00004_00008_00005' direct represents '9' with '-11370'
11357 11359 11361 11363 11365 11367 11369 11371 -11370 0
c Encoding variable: variant_fields_00004_00008_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00006' order represents '1' with '11372'
c Var 'variant_fields_00004_00008_00006' direct represents '1' with '11372'
c Var 'variant_fields_00004_00008_00006' order represents '2' with '11373'
-11372 11373 0
c Var 'variant_fields_00004_00008_00006' direct represents '2' with '11374'
11372 -11373 11374 0
-11374 11373 0
-11374 -11372 0
c Var 'variant_fields_00004_00008_00006' order represents '3' with '11375'
-11373 11375 0
c Var 'variant_fields_00004_00008_00006' direct represents '3' with '11376'
11373 -11375 11376 0
-11376 11375 0
-11376 -11373 0
c Var 'variant_fields_00004_00008_00006' order represents '4' with '11377'
-11375 11377 0
c Var 'variant_fields_00004_00008_00006' direct represents '4' with '11378'
11375 -11377 11378 0
-11378 11377 0
-11378 -11375 0
c Var 'variant_fields_00004_00008_00006' order represents '5' with '11379'
-11377 11379 0
c Var 'variant_fields_00004_00008_00006' direct represents '5' with '11380'
11377 -11379 11380 0
-11380 11379 0
-11380 -11377 0
c Var 'variant_fields_00004_00008_00006' order represents '6' with '11381'
-11379 11381 0
c Var 'variant_fields_00004_00008_00006' direct represents '6' with '11382'
11379 -11381 11382 0
-11382 11381 0
-11382 -11379 0
c Var 'variant_fields_00004_00008_00006' order represents '7' with '11383'
-11381 11383 0
c Var 'variant_fields_00004_00008_00006' direct represents '7' with '11384'
11381 -11383 11384 0
-11384 11383 0
-11384 -11381 0
c Var 'variant_fields_00004_00008_00006' order represents '8' with '11385'
-11383 11385 0
c Var 'variant_fields_00004_00008_00006' direct represents '8' with '11386'
11383 -11385 11386 0
-11386 11385 0
-11386 -11383 0
c Var 'variant_fields_00004_00008_00006' direct represents '9' with '-11385'
11372 11374 11376 11378 11380 11382 11384 11386 -11385 0
c Encoding variable: variant_fields_00004_00008_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00007' order represents '1' with '11387'
c Var 'variant_fields_00004_00008_00007' direct represents '1' with '11387'
c Var 'variant_fields_00004_00008_00007' order represents '2' with '11388'
-11387 11388 0
c Var 'variant_fields_00004_00008_00007' direct represents '2' with '11389'
11387 -11388 11389 0
-11389 11388 0
-11389 -11387 0
c Var 'variant_fields_00004_00008_00007' order represents '3' with '11390'
-11388 11390 0
c Var 'variant_fields_00004_00008_00007' direct represents '3' with '11391'
11388 -11390 11391 0
-11391 11390 0
-11391 -11388 0
c Var 'variant_fields_00004_00008_00007' order represents '4' with '11392'
-11390 11392 0
c Var 'variant_fields_00004_00008_00007' direct represents '4' with '11393'
11390 -11392 11393 0
-11393 11392 0
-11393 -11390 0
c Var 'variant_fields_00004_00008_00007' order represents '5' with '11394'
-11392 11394 0
c Var 'variant_fields_00004_00008_00007' direct represents '5' with '11395'
11392 -11394 11395 0
-11395 11394 0
-11395 -11392 0
c Var 'variant_fields_00004_00008_00007' order represents '6' with '11396'
-11394 11396 0
c Var 'variant_fields_00004_00008_00007' direct represents '6' with '11397'
11394 -11396 11397 0
-11397 11396 0
-11397 -11394 0
c Var 'variant_fields_00004_00008_00007' order represents '7' with '11398'
-11396 11398 0
c Var 'variant_fields_00004_00008_00007' direct represents '7' with '11399'
11396 -11398 11399 0
-11399 11398 0
-11399 -11396 0
c Var 'variant_fields_00004_00008_00007' order represents '8' with '11400'
-11398 11400 0
c Var 'variant_fields_00004_00008_00007' direct represents '8' with '11401'
11398 -11400 11401 0
-11401 11400 0
-11401 -11398 0
c Var 'variant_fields_00004_00008_00007' direct represents '9' with '-11400'
11387 11389 11391 11393 11395 11397 11399 11401 -11400 0
c Encoding variable: variant_fields_00004_00008_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00008' order represents '1' with '11402'
c Var 'variant_fields_00004_00008_00008' direct represents '1' with '11402'
c Var 'variant_fields_00004_00008_00008' order represents '2' with '11403'
-11402 11403 0
c Var 'variant_fields_00004_00008_00008' direct represents '2' with '11404'
11402 -11403 11404 0
-11404 11403 0
-11404 -11402 0
c Var 'variant_fields_00004_00008_00008' order represents '3' with '11405'
-11403 11405 0
c Var 'variant_fields_00004_00008_00008' direct represents '3' with '11406'
11403 -11405 11406 0
-11406 11405 0
-11406 -11403 0
c Var 'variant_fields_00004_00008_00008' order represents '4' with '11407'
-11405 11407 0
c Var 'variant_fields_00004_00008_00008' direct represents '4' with '11408'
11405 -11407 11408 0
-11408 11407 0
-11408 -11405 0
c Var 'variant_fields_00004_00008_00008' order represents '5' with '11409'
-11407 11409 0
c Var 'variant_fields_00004_00008_00008' direct represents '5' with '11410'
11407 -11409 11410 0
-11410 11409 0
-11410 -11407 0
c Var 'variant_fields_00004_00008_00008' order represents '6' with '11411'
-11409 11411 0
c Var 'variant_fields_00004_00008_00008' direct represents '6' with '11412'
11409 -11411 11412 0
-11412 11411 0
-11412 -11409 0
c Var 'variant_fields_00004_00008_00008' order represents '7' with '11413'
-11411 11413 0
c Var 'variant_fields_00004_00008_00008' direct represents '7' with '11414'
11411 -11413 11414 0
-11414 11413 0
-11414 -11411 0
c Var 'variant_fields_00004_00008_00008' order represents '8' with '11415'
-11413 11415 0
c Var 'variant_fields_00004_00008_00008' direct represents '8' with '11416'
11413 -11415 11416 0
-11416 11415 0
-11416 -11413 0
c Var 'variant_fields_00004_00008_00008' direct represents '9' with '-11415'
11402 11404 11406 11408 11410 11412 11414 11416 -11415 0
c Encoding variable: variant_fields_00004_00008_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00008_00009' order represents '1' with '11417'
c Var 'variant_fields_00004_00008_00009' direct represents '1' with '11417'
c Var 'variant_fields_00004_00008_00009' order represents '2' with '11418'
-11417 11418 0
c Var 'variant_fields_00004_00008_00009' direct represents '2' with '11419'
11417 -11418 11419 0
-11419 11418 0
-11419 -11417 0
c Var 'variant_fields_00004_00008_00009' order represents '3' with '11420'
-11418 11420 0
c Var 'variant_fields_00004_00008_00009' direct represents '3' with '11421'
11418 -11420 11421 0
-11421 11420 0
-11421 -11418 0
c Var 'variant_fields_00004_00008_00009' order represents '4' with '11422'
-11420 11422 0
c Var 'variant_fields_00004_00008_00009' direct represents '4' with '11423'
11420 -11422 11423 0
-11423 11422 0
-11423 -11420 0
c Var 'variant_fields_00004_00008_00009' order represents '5' with '11424'
-11422 11424 0
c Var 'variant_fields_00004_00008_00009' direct represents '5' with '11425'
11422 -11424 11425 0
-11425 11424 0
-11425 -11422 0
c Var 'variant_fields_00004_00008_00009' order represents '6' with '11426'
-11424 11426 0
c Var 'variant_fields_00004_00008_00009' direct represents '6' with '11427'
11424 -11426 11427 0
-11427 11426 0
-11427 -11424 0
c Var 'variant_fields_00004_00008_00009' order represents '7' with '11428'
-11426 11428 0
c Var 'variant_fields_00004_00008_00009' direct represents '7' with '11429'
11426 -11428 11429 0
-11429 11428 0
-11429 -11426 0
c Var 'variant_fields_00004_00008_00009' order represents '8' with '11430'
-11428 11430 0
c Var 'variant_fields_00004_00008_00009' direct represents '8' with '11431'
11428 -11430 11431 0
-11431 11430 0
-11431 -11428 0
c Var 'variant_fields_00004_00008_00009' direct represents '9' with '-11430'
11417 11419 11421 11423 11425 11427 11429 11431 -11430 0
c Encoding variable: variant_fields_00004_00009_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00001' order represents '1' with '11432'
c Var 'variant_fields_00004_00009_00001' direct represents '1' with '11432'
c Var 'variant_fields_00004_00009_00001' order represents '2' with '11433'
-11432 11433 0
c Var 'variant_fields_00004_00009_00001' direct represents '2' with '11434'
11432 -11433 11434 0
-11434 11433 0
-11434 -11432 0
c Var 'variant_fields_00004_00009_00001' order represents '3' with '11435'
-11433 11435 0
c Var 'variant_fields_00004_00009_00001' direct represents '3' with '11436'
11433 -11435 11436 0
-11436 11435 0
-11436 -11433 0
c Var 'variant_fields_00004_00009_00001' order represents '4' with '11437'
-11435 11437 0
c Var 'variant_fields_00004_00009_00001' direct represents '4' with '11438'
11435 -11437 11438 0
-11438 11437 0
-11438 -11435 0
c Var 'variant_fields_00004_00009_00001' order represents '5' with '11439'
-11437 11439 0
c Var 'variant_fields_00004_00009_00001' direct represents '5' with '11440'
11437 -11439 11440 0
-11440 11439 0
-11440 -11437 0
c Var 'variant_fields_00004_00009_00001' order represents '6' with '11441'
-11439 11441 0
c Var 'variant_fields_00004_00009_00001' direct represents '6' with '11442'
11439 -11441 11442 0
-11442 11441 0
-11442 -11439 0
c Var 'variant_fields_00004_00009_00001' order represents '7' with '11443'
-11441 11443 0
c Var 'variant_fields_00004_00009_00001' direct represents '7' with '11444'
11441 -11443 11444 0
-11444 11443 0
-11444 -11441 0
c Var 'variant_fields_00004_00009_00001' order represents '8' with '11445'
-11443 11445 0
c Var 'variant_fields_00004_00009_00001' direct represents '8' with '11446'
11443 -11445 11446 0
-11446 11445 0
-11446 -11443 0
c Var 'variant_fields_00004_00009_00001' direct represents '9' with '-11445'
11432 11434 11436 11438 11440 11442 11444 11446 -11445 0
c Encoding variable: variant_fields_00004_00009_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00002' order represents '1' with '11447'
c Var 'variant_fields_00004_00009_00002' direct represents '1' with '11447'
c Var 'variant_fields_00004_00009_00002' order represents '2' with '11448'
-11447 11448 0
c Var 'variant_fields_00004_00009_00002' direct represents '2' with '11449'
11447 -11448 11449 0
-11449 11448 0
-11449 -11447 0
c Var 'variant_fields_00004_00009_00002' order represents '3' with '11450'
-11448 11450 0
c Var 'variant_fields_00004_00009_00002' direct represents '3' with '11451'
11448 -11450 11451 0
-11451 11450 0
-11451 -11448 0
c Var 'variant_fields_00004_00009_00002' order represents '4' with '11452'
-11450 11452 0
c Var 'variant_fields_00004_00009_00002' direct represents '4' with '11453'
11450 -11452 11453 0
-11453 11452 0
-11453 -11450 0
c Var 'variant_fields_00004_00009_00002' order represents '5' with '11454'
-11452 11454 0
c Var 'variant_fields_00004_00009_00002' direct represents '5' with '11455'
11452 -11454 11455 0
-11455 11454 0
-11455 -11452 0
c Var 'variant_fields_00004_00009_00002' order represents '6' with '11456'
-11454 11456 0
c Var 'variant_fields_00004_00009_00002' direct represents '6' with '11457'
11454 -11456 11457 0
-11457 11456 0
-11457 -11454 0
c Var 'variant_fields_00004_00009_00002' order represents '7' with '11458'
-11456 11458 0
c Var 'variant_fields_00004_00009_00002' direct represents '7' with '11459'
11456 -11458 11459 0
-11459 11458 0
-11459 -11456 0
c Var 'variant_fields_00004_00009_00002' order represents '8' with '11460'
-11458 11460 0
c Var 'variant_fields_00004_00009_00002' direct represents '8' with '11461'
11458 -11460 11461 0
-11461 11460 0
-11461 -11458 0
c Var 'variant_fields_00004_00009_00002' direct represents '9' with '-11460'
11447 11449 11451 11453 11455 11457 11459 11461 -11460 0
c Encoding variable: variant_fields_00004_00009_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00003' order represents '1' with '11462'
c Var 'variant_fields_00004_00009_00003' direct represents '1' with '11462'
c Var 'variant_fields_00004_00009_00003' order represents '2' with '11463'
-11462 11463 0
c Var 'variant_fields_00004_00009_00003' direct represents '2' with '11464'
11462 -11463 11464 0
-11464 11463 0
-11464 -11462 0
c Var 'variant_fields_00004_00009_00003' order represents '3' with '11465'
-11463 11465 0
c Var 'variant_fields_00004_00009_00003' direct represents '3' with '11466'
11463 -11465 11466 0
-11466 11465 0
-11466 -11463 0
c Var 'variant_fields_00004_00009_00003' order represents '4' with '11467'
-11465 11467 0
c Var 'variant_fields_00004_00009_00003' direct represents '4' with '11468'
11465 -11467 11468 0
-11468 11467 0
-11468 -11465 0
c Var 'variant_fields_00004_00009_00003' order represents '5' with '11469'
-11467 11469 0
c Var 'variant_fields_00004_00009_00003' direct represents '5' with '11470'
11467 -11469 11470 0
-11470 11469 0
-11470 -11467 0
c Var 'variant_fields_00004_00009_00003' order represents '6' with '11471'
-11469 11471 0
c Var 'variant_fields_00004_00009_00003' direct represents '6' with '11472'
11469 -11471 11472 0
-11472 11471 0
-11472 -11469 0
c Var 'variant_fields_00004_00009_00003' order represents '7' with '11473'
-11471 11473 0
c Var 'variant_fields_00004_00009_00003' direct represents '7' with '11474'
11471 -11473 11474 0
-11474 11473 0
-11474 -11471 0
c Var 'variant_fields_00004_00009_00003' order represents '8' with '11475'
-11473 11475 0
c Var 'variant_fields_00004_00009_00003' direct represents '8' with '11476'
11473 -11475 11476 0
-11476 11475 0
-11476 -11473 0
c Var 'variant_fields_00004_00009_00003' direct represents '9' with '-11475'
11462 11464 11466 11468 11470 11472 11474 11476 -11475 0
c Encoding variable: variant_fields_00004_00009_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00004' order represents '1' with '11477'
c Var 'variant_fields_00004_00009_00004' direct represents '1' with '11477'
c Var 'variant_fields_00004_00009_00004' order represents '2' with '11478'
-11477 11478 0
c Var 'variant_fields_00004_00009_00004' direct represents '2' with '11479'
11477 -11478 11479 0
-11479 11478 0
-11479 -11477 0
c Var 'variant_fields_00004_00009_00004' order represents '3' with '11480'
-11478 11480 0
c Var 'variant_fields_00004_00009_00004' direct represents '3' with '11481'
11478 -11480 11481 0
-11481 11480 0
-11481 -11478 0
c Var 'variant_fields_00004_00009_00004' order represents '4' with '11482'
-11480 11482 0
c Var 'variant_fields_00004_00009_00004' direct represents '4' with '11483'
11480 -11482 11483 0
-11483 11482 0
-11483 -11480 0
c Var 'variant_fields_00004_00009_00004' order represents '5' with '11484'
-11482 11484 0
c Var 'variant_fields_00004_00009_00004' direct represents '5' with '11485'
11482 -11484 11485 0
-11485 11484 0
-11485 -11482 0
c Var 'variant_fields_00004_00009_00004' order represents '6' with '11486'
-11484 11486 0
c Var 'variant_fields_00004_00009_00004' direct represents '6' with '11487'
11484 -11486 11487 0
-11487 11486 0
-11487 -11484 0
c Var 'variant_fields_00004_00009_00004' order represents '7' with '11488'
-11486 11488 0
c Var 'variant_fields_00004_00009_00004' direct represents '7' with '11489'
11486 -11488 11489 0
-11489 11488 0
-11489 -11486 0
c Var 'variant_fields_00004_00009_00004' order represents '8' with '11490'
-11488 11490 0
c Var 'variant_fields_00004_00009_00004' direct represents '8' with '11491'
11488 -11490 11491 0
-11491 11490 0
-11491 -11488 0
c Var 'variant_fields_00004_00009_00004' direct represents '9' with '-11490'
11477 11479 11481 11483 11485 11487 11489 11491 -11490 0
c Encoding variable: variant_fields_00004_00009_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00005' order represents '1' with '11492'
c Var 'variant_fields_00004_00009_00005' direct represents '1' with '11492'
c Var 'variant_fields_00004_00009_00005' order represents '2' with '11493'
-11492 11493 0
c Var 'variant_fields_00004_00009_00005' direct represents '2' with '11494'
11492 -11493 11494 0
-11494 11493 0
-11494 -11492 0
c Var 'variant_fields_00004_00009_00005' order represents '3' with '11495'
-11493 11495 0
c Var 'variant_fields_00004_00009_00005' direct represents '3' with '11496'
11493 -11495 11496 0
-11496 11495 0
-11496 -11493 0
c Var 'variant_fields_00004_00009_00005' order represents '4' with '11497'
-11495 11497 0
c Var 'variant_fields_00004_00009_00005' direct represents '4' with '11498'
11495 -11497 11498 0
-11498 11497 0
-11498 -11495 0
c Var 'variant_fields_00004_00009_00005' order represents '5' with '11499'
-11497 11499 0
c Var 'variant_fields_00004_00009_00005' direct represents '5' with '11500'
11497 -11499 11500 0
-11500 11499 0
-11500 -11497 0
c Var 'variant_fields_00004_00009_00005' order represents '6' with '11501'
-11499 11501 0
c Var 'variant_fields_00004_00009_00005' direct represents '6' with '11502'
11499 -11501 11502 0
-11502 11501 0
-11502 -11499 0
c Var 'variant_fields_00004_00009_00005' order represents '7' with '11503'
-11501 11503 0
c Var 'variant_fields_00004_00009_00005' direct represents '7' with '11504'
11501 -11503 11504 0
-11504 11503 0
-11504 -11501 0
c Var 'variant_fields_00004_00009_00005' order represents '8' with '11505'
-11503 11505 0
c Var 'variant_fields_00004_00009_00005' direct represents '8' with '11506'
11503 -11505 11506 0
-11506 11505 0
-11506 -11503 0
c Var 'variant_fields_00004_00009_00005' direct represents '9' with '-11505'
11492 11494 11496 11498 11500 11502 11504 11506 -11505 0
c Encoding variable: variant_fields_00004_00009_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00006' order represents '1' with '11507'
c Var 'variant_fields_00004_00009_00006' direct represents '1' with '11507'
c Var 'variant_fields_00004_00009_00006' order represents '2' with '11508'
-11507 11508 0
c Var 'variant_fields_00004_00009_00006' direct represents '2' with '11509'
11507 -11508 11509 0
-11509 11508 0
-11509 -11507 0
c Var 'variant_fields_00004_00009_00006' order represents '3' with '11510'
-11508 11510 0
c Var 'variant_fields_00004_00009_00006' direct represents '3' with '11511'
11508 -11510 11511 0
-11511 11510 0
-11511 -11508 0
c Var 'variant_fields_00004_00009_00006' order represents '4' with '11512'
-11510 11512 0
c Var 'variant_fields_00004_00009_00006' direct represents '4' with '11513'
11510 -11512 11513 0
-11513 11512 0
-11513 -11510 0
c Var 'variant_fields_00004_00009_00006' order represents '5' with '11514'
-11512 11514 0
c Var 'variant_fields_00004_00009_00006' direct represents '5' with '11515'
11512 -11514 11515 0
-11515 11514 0
-11515 -11512 0
c Var 'variant_fields_00004_00009_00006' order represents '6' with '11516'
-11514 11516 0
c Var 'variant_fields_00004_00009_00006' direct represents '6' with '11517'
11514 -11516 11517 0
-11517 11516 0
-11517 -11514 0
c Var 'variant_fields_00004_00009_00006' order represents '7' with '11518'
-11516 11518 0
c Var 'variant_fields_00004_00009_00006' direct represents '7' with '11519'
11516 -11518 11519 0
-11519 11518 0
-11519 -11516 0
c Var 'variant_fields_00004_00009_00006' order represents '8' with '11520'
-11518 11520 0
c Var 'variant_fields_00004_00009_00006' direct represents '8' with '11521'
11518 -11520 11521 0
-11521 11520 0
-11521 -11518 0
c Var 'variant_fields_00004_00009_00006' direct represents '9' with '-11520'
11507 11509 11511 11513 11515 11517 11519 11521 -11520 0
c Encoding variable: variant_fields_00004_00009_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00007' order represents '1' with '11522'
c Var 'variant_fields_00004_00009_00007' direct represents '1' with '11522'
c Var 'variant_fields_00004_00009_00007' order represents '2' with '11523'
-11522 11523 0
c Var 'variant_fields_00004_00009_00007' direct represents '2' with '11524'
11522 -11523 11524 0
-11524 11523 0
-11524 -11522 0
c Var 'variant_fields_00004_00009_00007' order represents '3' with '11525'
-11523 11525 0
c Var 'variant_fields_00004_00009_00007' direct represents '3' with '11526'
11523 -11525 11526 0
-11526 11525 0
-11526 -11523 0
c Var 'variant_fields_00004_00009_00007' order represents '4' with '11527'
-11525 11527 0
c Var 'variant_fields_00004_00009_00007' direct represents '4' with '11528'
11525 -11527 11528 0
-11528 11527 0
-11528 -11525 0
c Var 'variant_fields_00004_00009_00007' order represents '5' with '11529'
-11527 11529 0
c Var 'variant_fields_00004_00009_00007' direct represents '5' with '11530'
11527 -11529 11530 0
-11530 11529 0
-11530 -11527 0
c Var 'variant_fields_00004_00009_00007' order represents '6' with '11531'
-11529 11531 0
c Var 'variant_fields_00004_00009_00007' direct represents '6' with '11532'
11529 -11531 11532 0
-11532 11531 0
-11532 -11529 0
c Var 'variant_fields_00004_00009_00007' order represents '7' with '11533'
-11531 11533 0
c Var 'variant_fields_00004_00009_00007' direct represents '7' with '11534'
11531 -11533 11534 0
-11534 11533 0
-11534 -11531 0
c Var 'variant_fields_00004_00009_00007' order represents '8' with '11535'
-11533 11535 0
c Var 'variant_fields_00004_00009_00007' direct represents '8' with '11536'
11533 -11535 11536 0
-11536 11535 0
-11536 -11533 0
c Var 'variant_fields_00004_00009_00007' direct represents '9' with '-11535'
11522 11524 11526 11528 11530 11532 11534 11536 -11535 0
c Encoding variable: variant_fields_00004_00009_00008 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00008' order represents '1' with '11537'
c Var 'variant_fields_00004_00009_00008' direct represents '1' with '11537'
c Var 'variant_fields_00004_00009_00008' order represents '2' with '11538'
-11537 11538 0
c Var 'variant_fields_00004_00009_00008' direct represents '2' with '11539'
11537 -11538 11539 0
-11539 11538 0
-11539 -11537 0
c Var 'variant_fields_00004_00009_00008' order represents '3' with '11540'
-11538 11540 0
c Var 'variant_fields_00004_00009_00008' direct represents '3' with '11541'
11538 -11540 11541 0
-11541 11540 0
-11541 -11538 0
c Var 'variant_fields_00004_00009_00008' order represents '4' with '11542'
-11540 11542 0
c Var 'variant_fields_00004_00009_00008' direct represents '4' with '11543'
11540 -11542 11543 0
-11543 11542 0
-11543 -11540 0
c Var 'variant_fields_00004_00009_00008' order represents '5' with '11544'
-11542 11544 0
c Var 'variant_fields_00004_00009_00008' direct represents '5' with '11545'
11542 -11544 11545 0
-11545 11544 0
-11545 -11542 0
c Var 'variant_fields_00004_00009_00008' order represents '6' with '11546'
-11544 11546 0
c Var 'variant_fields_00004_00009_00008' direct represents '6' with '11547'
11544 -11546 11547 0
-11547 11546 0
-11547 -11544 0
c Var 'variant_fields_00004_00009_00008' order represents '7' with '11548'
-11546 11548 0
c Var 'variant_fields_00004_00009_00008' direct represents '7' with '11549'
11546 -11548 11549 0
-11549 11548 0
-11549 -11546 0
c Var 'variant_fields_00004_00009_00008' order represents '8' with '11550'
-11548 11550 0
c Var 'variant_fields_00004_00009_00008' direct represents '8' with '11551'
11548 -11550 11551 0
-11551 11550 0
-11551 -11548 0
c Var 'variant_fields_00004_00009_00008' direct represents '9' with '-11550'
11537 11539 11541 11543 11545 11547 11549 11551 -11550 0
c Encoding variable: variant_fields_00004_00009_00009 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00009_00009' order represents '1' with '11552'
c Var 'variant_fields_00004_00009_00009' direct represents '1' with '11552'
c Var 'variant_fields_00004_00009_00009' order represents '2' with '11553'
-11552 11553 0
c Var 'variant_fields_00004_00009_00009' direct represents '2' with '11554'
11552 -11553 11554 0
-11554 11553 0
-11554 -11552 0
c Var 'variant_fields_00004_00009_00009' order represents '3' with '11555'
-11553 11555 0
c Var 'variant_fields_00004_00009_00009' direct represents '3' with '11556'
11553 -11555 11556 0
-11556 11555 0
-11556 -11553 0
c Var 'variant_fields_00004_00009_00009' order represents '4' with '11557'
-11555 11557 0
c Var 'variant_fields_00004_00009_00009' direct represents '4' with '11558'
11555 -11557 11558 0
-11558 11557 0
-11558 -11555 0
c Var 'variant_fields_00004_00009_00009' order represents '5' with '11559'
-11557 11559 0
c Var 'variant_fields_00004_00009_00009' direct represents '5' with '11560'
11557 -11559 11560 0
-11560 11559 0
-11560 -11557 0
c Var 'variant_fields_00004_00009_00009' order represents '6' with '11561'
-11559 11561 0
c Var 'variant_fields_00004_00009_00009' direct represents '6' with '11562'
11559 -11561 11562 0
-11562 11561 0
-11562 -11559 0
c Var 'variant_fields_00004_00009_00009' order represents '7' with '11563'
-11561 11563 0
c Var 'variant_fields_00004_00009_00009' direct represents '7' with '11564'
11561 -11563 11564 0
-11564 11563 0
-11564 -11561 0
c Var 'variant_fields_00004_00009_00009' order represents '8' with '11565'
-11563 11565 0
c Var 'variant_fields_00004_00009_00009' direct represents '8' with '11566'
11563 -11565 11566 0
-11566 11565 0
-11566 -11563 0
c Var 'variant_fields_00004_00009_00009' direct represents '9' with '-11565'
11552 11554 11556 11558 11560 11562 11564 11566 -11565 0
c Encoding variable: aux0 with domain: bool (representing constraint (max_left_00001_00001_00001<max_left_00001_00001_00002))
c Var 'aux0' direct represents '0' with '-11567'
c Var 'aux0' direct represents '1' with '11567'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-11567'
c Encoding variable: aux1 with domain: bool (representing constraint (max_left_00001_00001_00002<max_left_00001_00001_00003))
c Var 'aux1' direct represents '0' with '-11568'
c Var 'aux1' direct represents '1' with '11568'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-11568'
c Encoding variable: aux2 with domain: bool (representing constraint (max_left_00001_00001_00003<max_left_00001_00001_00004))
c Var 'aux2' direct represents '0' with '-11569'
c Var 'aux2' direct represents '1' with '11569'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-11569'
c Encoding variable: aux3 with domain: bool (representing constraint (max_left_00001_00001_00004<max_left_00001_00001_00005))
c Var 'aux3' direct represents '0' with '-11570'
c Var 'aux3' direct represents '1' with '11570'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-11570'
c Encoding variable: aux4 with domain: bool (representing constraint (max_left_00001_00001_00005<max_left_00001_00001_00006))
c Var 'aux4' direct represents '0' with '-11571'
c Var 'aux4' direct represents '1' with '11571'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-11571'
c Encoding variable: aux5 with domain: bool (representing constraint (max_left_00001_00001_00006<max_left_00001_00001_00007))
c Var 'aux5' direct represents '0' with '-11572'
c Var 'aux5' direct represents '1' with '11572'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-11572'
c Encoding variable: aux6 with domain: bool (representing constraint (max_left_00001_00001_00007<max_left_00001_00001_00008))
c Var 'aux6' direct represents '0' with '-11573'
c Var 'aux6' direct represents '1' with '11573'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-11573'
c Encoding variable: aux7 with domain: bool (representing constraint (max_left_00001_00001_00008<max_left_00001_00001_00009))
c Var 'aux7' direct represents '0' with '-11574'
c Var 'aux7' direct represents '1' with '11574'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-11574'
c Encoding variable: aux8 with domain: bool (representing constraint (max_left_00001_00002_00001<max_left_00001_00002_00002))
c Var 'aux8' direct represents '0' with '-11575'
c Var 'aux8' direct represents '1' with '11575'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-11575'
c Encoding variable: aux9 with domain: bool (representing constraint (max_left_00001_00002_00002<max_left_00001_00002_00003))
c Var 'aux9' direct represents '0' with '-11576'
c Var 'aux9' direct represents '1' with '11576'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-11576'
c Encoding variable: aux10 with domain: bool (representing constraint (max_left_00001_00002_00003<max_left_00001_00002_00004))
c Var 'aux10' direct represents '0' with '-11577'
c Var 'aux10' direct represents '1' with '11577'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-11577'
c Encoding variable: aux11 with domain: bool (representing constraint (max_left_00001_00002_00004<max_left_00001_00002_00005))
c Var 'aux11' direct represents '0' with '-11578'
c Var 'aux11' direct represents '1' with '11578'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-11578'
c Encoding variable: aux12 with domain: bool (representing constraint (max_left_00001_00002_00005<max_left_00001_00002_00006))
c Var 'aux12' direct represents '0' with '-11579'
c Var 'aux12' direct represents '1' with '11579'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-11579'
c Encoding variable: aux13 with domain: bool (representing constraint (max_left_00001_00002_00006<max_left_00001_00002_00007))
c Var 'aux13' direct represents '0' with '-11580'
c Var 'aux13' direct represents '1' with '11580'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-11580'
c Encoding variable: aux14 with domain: bool (representing constraint (max_left_00001_00002_00007<max_left_00001_00002_00008))
c Var 'aux14' direct represents '0' with '-11581'
c Var 'aux14' direct represents '1' with '11581'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-11581'
c Encoding variable: aux15 with domain: bool (representing constraint (max_left_00001_00002_00008<max_left_00001_00002_00009))
c Var 'aux15' direct represents '0' with '-11582'
c Var 'aux15' direct represents '1' with '11582'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-11582'
c Encoding variable: aux16 with domain: bool (representing constraint (max_left_00001_00003_00001<max_left_00001_00003_00002))
c Var 'aux16' direct represents '0' with '-11583'
c Var 'aux16' direct represents '1' with '11583'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-11583'
c Encoding variable: aux17 with domain: bool (representing constraint (max_left_00001_00003_00002<max_left_00001_00003_00003))
c Var 'aux17' direct represents '0' with '-11584'
c Var 'aux17' direct represents '1' with '11584'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-11584'
c Encoding variable: aux18 with domain: bool (representing constraint (max_left_00001_00003_00003<max_left_00001_00003_00004))
c Var 'aux18' direct represents '0' with '-11585'
c Var 'aux18' direct represents '1' with '11585'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-11585'
c Encoding variable: aux19 with domain: bool (representing constraint (max_left_00001_00003_00004<max_left_00001_00003_00005))
c Var 'aux19' direct represents '0' with '-11586'
c Var 'aux19' direct represents '1' with '11586'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-11586'
c Encoding variable: aux20 with domain: bool (representing constraint (max_left_00001_00003_00005<max_left_00001_00003_00006))
c Var 'aux20' direct represents '0' with '-11587'
c Var 'aux20' direct represents '1' with '11587'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-11587'
c Encoding variable: aux21 with domain: bool (representing constraint (max_left_00001_00003_00006<max_left_00001_00003_00007))
c Var 'aux21' direct represents '0' with '-11588'
c Var 'aux21' direct represents '1' with '11588'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-11588'
c Encoding variable: aux22 with domain: bool (representing constraint (max_left_00001_00003_00007<max_left_00001_00003_00008))
c Var 'aux22' direct represents '0' with '-11589'
c Var 'aux22' direct represents '1' with '11589'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-11589'
c Encoding variable: aux23 with domain: bool (representing constraint (max_left_00001_00003_00008<max_left_00001_00003_00009))
c Var 'aux23' direct represents '0' with '-11590'
c Var 'aux23' direct represents '1' with '11590'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-11590'
c Encoding variable: aux24 with domain: bool (representing constraint (max_left_00001_00004_00001<max_left_00001_00004_00002))
c Var 'aux24' direct represents '0' with '-11591'
c Var 'aux24' direct represents '1' with '11591'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-11591'
c Encoding variable: aux25 with domain: bool (representing constraint (max_left_00001_00004_00002<max_left_00001_00004_00003))
c Var 'aux25' direct represents '0' with '-11592'
c Var 'aux25' direct represents '1' with '11592'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-11592'
c Encoding variable: aux26 with domain: bool (representing constraint (max_left_00001_00004_00003<max_left_00001_00004_00004))
c Var 'aux26' direct represents '0' with '-11593'
c Var 'aux26' direct represents '1' with '11593'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-11593'
c Encoding variable: aux27 with domain: bool (representing constraint (max_left_00001_00004_00004<max_left_00001_00004_00005))
c Var 'aux27' direct represents '0' with '-11594'
c Var 'aux27' direct represents '1' with '11594'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-11594'
c Encoding variable: aux28 with domain: bool (representing constraint (max_left_00001_00004_00005<max_left_00001_00004_00006))
c Var 'aux28' direct represents '0' with '-11595'
c Var 'aux28' direct represents '1' with '11595'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-11595'
c Encoding variable: aux29 with domain: bool (representing constraint (max_left_00001_00004_00006<max_left_00001_00004_00007))
c Var 'aux29' direct represents '0' with '-11596'
c Var 'aux29' direct represents '1' with '11596'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-11596'
c Encoding variable: aux30 with domain: bool (representing constraint (max_left_00001_00004_00007<max_left_00001_00004_00008))
c Var 'aux30' direct represents '0' with '-11597'
c Var 'aux30' direct represents '1' with '11597'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-11597'
c Encoding variable: aux31 with domain: bool (representing constraint (max_left_00001_00004_00008<max_left_00001_00004_00009))
c Var 'aux31' direct represents '0' with '-11598'
c Var 'aux31' direct represents '1' with '11598'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-11598'
c Encoding variable: aux32 with domain: bool (representing constraint (max_left_00001_00005_00001<max_left_00001_00005_00002))
c Var 'aux32' direct represents '0' with '-11599'
c Var 'aux32' direct represents '1' with '11599'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-11599'
c Encoding variable: aux33 with domain: bool (representing constraint (max_left_00001_00005_00002<max_left_00001_00005_00003))
c Var 'aux33' direct represents '0' with '-11600'
c Var 'aux33' direct represents '1' with '11600'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-11600'
c Encoding variable: aux34 with domain: bool (representing constraint (max_left_00001_00005_00003<max_left_00001_00005_00004))
c Var 'aux34' direct represents '0' with '-11601'
c Var 'aux34' direct represents '1' with '11601'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-11601'
c Encoding variable: aux35 with domain: bool (representing constraint (max_left_00001_00005_00004<max_left_00001_00005_00005))
c Var 'aux35' direct represents '0' with '-11602'
c Var 'aux35' direct represents '1' with '11602'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-11602'
c Encoding variable: aux36 with domain: bool (representing constraint (max_left_00001_00005_00005<max_left_00001_00005_00006))
c Var 'aux36' direct represents '0' with '-11603'
c Var 'aux36' direct represents '1' with '11603'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-11603'
c Encoding variable: aux37 with domain: bool (representing constraint (max_left_00001_00005_00006<max_left_00001_00005_00007))
c Var 'aux37' direct represents '0' with '-11604'
c Var 'aux37' direct represents '1' with '11604'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-11604'
c Encoding variable: aux38 with domain: bool (representing constraint (max_left_00001_00005_00007<max_left_00001_00005_00008))
c Var 'aux38' direct represents '0' with '-11605'
c Var 'aux38' direct represents '1' with '11605'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-11605'
c Encoding variable: aux39 with domain: bool (representing constraint (max_left_00001_00005_00008<max_left_00001_00005_00009))
c Var 'aux39' direct represents '0' with '-11606'
c Var 'aux39' direct represents '1' with '11606'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-11606'
c Encoding variable: aux40 with domain: bool (representing constraint (max_left_00001_00006_00001<max_left_00001_00006_00002))
c Var 'aux40' direct represents '0' with '-11607'
c Var 'aux40' direct represents '1' with '11607'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-11607'
c Encoding variable: aux41 with domain: bool (representing constraint (max_left_00001_00006_00002<max_left_00001_00006_00003))
c Var 'aux41' direct represents '0' with '-11608'
c Var 'aux41' direct represents '1' with '11608'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-11608'
c Encoding variable: aux42 with domain: bool (representing constraint (max_left_00001_00006_00003<max_left_00001_00006_00004))
c Var 'aux42' direct represents '0' with '-11609'
c Var 'aux42' direct represents '1' with '11609'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-11609'
c Encoding variable: aux43 with domain: bool (representing constraint (max_left_00001_00006_00004<max_left_00001_00006_00005))
c Var 'aux43' direct represents '0' with '-11610'
c Var 'aux43' direct represents '1' with '11610'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-11610'
c Encoding variable: aux44 with domain: bool (representing constraint (max_left_00001_00006_00005<max_left_00001_00006_00006))
c Var 'aux44' direct represents '0' with '-11611'
c Var 'aux44' direct represents '1' with '11611'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-11611'
c Encoding variable: aux45 with domain: bool (representing constraint (max_left_00001_00006_00006<max_left_00001_00006_00007))
c Var 'aux45' direct represents '0' with '-11612'
c Var 'aux45' direct represents '1' with '11612'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-11612'
c Encoding variable: aux46 with domain: bool (representing constraint (max_left_00001_00006_00007<max_left_00001_00006_00008))
c Var 'aux46' direct represents '0' with '-11613'
c Var 'aux46' direct represents '1' with '11613'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-11613'
c Encoding variable: aux47 with domain: bool (representing constraint (max_left_00001_00006_00008<max_left_00001_00006_00009))
c Var 'aux47' direct represents '0' with '-11614'
c Var 'aux47' direct represents '1' with '11614'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-11614'
c Encoding variable: aux48 with domain: bool (representing constraint (max_left_00001_00007_00001<max_left_00001_00007_00002))
c Var 'aux48' direct represents '0' with '-11615'
c Var 'aux48' direct represents '1' with '11615'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-11615'
c Encoding variable: aux49 with domain: bool (representing constraint (max_left_00001_00007_00002<max_left_00001_00007_00003))
c Var 'aux49' direct represents '0' with '-11616'
c Var 'aux49' direct represents '1' with '11616'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-11616'
c Encoding variable: aux50 with domain: bool (representing constraint (max_left_00001_00007_00003<max_left_00001_00007_00004))
c Var 'aux50' direct represents '0' with '-11617'
c Var 'aux50' direct represents '1' with '11617'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-11617'
c Encoding variable: aux51 with domain: bool (representing constraint (max_left_00001_00007_00004<max_left_00001_00007_00005))
c Var 'aux51' direct represents '0' with '-11618'
c Var 'aux51' direct represents '1' with '11618'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-11618'
c Encoding variable: aux52 with domain: bool (representing constraint (max_left_00001_00007_00005<max_left_00001_00007_00006))
c Var 'aux52' direct represents '0' with '-11619'
c Var 'aux52' direct represents '1' with '11619'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-11619'
c Encoding variable: aux53 with domain: bool (representing constraint (max_left_00001_00007_00006<max_left_00001_00007_00007))
c Var 'aux53' direct represents '0' with '-11620'
c Var 'aux53' direct represents '1' with '11620'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-11620'
c Encoding variable: aux54 with domain: bool (representing constraint (max_left_00001_00007_00007<max_left_00001_00007_00008))
c Var 'aux54' direct represents '0' with '-11621'
c Var 'aux54' direct represents '1' with '11621'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-11621'
c Encoding variable: aux55 with domain: bool (representing constraint (max_left_00001_00007_00008<max_left_00001_00007_00009))
c Var 'aux55' direct represents '0' with '-11622'
c Var 'aux55' direct represents '1' with '11622'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-11622'
c Encoding variable: aux56 with domain: bool (representing constraint (max_left_00001_00008_00001<max_left_00001_00008_00002))
c Var 'aux56' direct represents '0' with '-11623'
c Var 'aux56' direct represents '1' with '11623'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-11623'
c Encoding variable: aux57 with domain: bool (representing constraint (max_left_00001_00008_00002<max_left_00001_00008_00003))
c Var 'aux57' direct represents '0' with '-11624'
c Var 'aux57' direct represents '1' with '11624'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-11624'
c Encoding variable: aux58 with domain: bool (representing constraint (max_left_00001_00008_00003<max_left_00001_00008_00004))
c Var 'aux58' direct represents '0' with '-11625'
c Var 'aux58' direct represents '1' with '11625'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-11625'
c Encoding variable: aux59 with domain: bool (representing constraint (max_left_00001_00008_00004<max_left_00001_00008_00005))
c Var 'aux59' direct represents '0' with '-11626'
c Var 'aux59' direct represents '1' with '11626'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-11626'
c Encoding variable: aux60 with domain: bool (representing constraint (max_left_00001_00008_00005<max_left_00001_00008_00006))
c Var 'aux60' direct represents '0' with '-11627'
c Var 'aux60' direct represents '1' with '11627'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-11627'
c Encoding variable: aux61 with domain: bool (representing constraint (max_left_00001_00008_00006<max_left_00001_00008_00007))
c Var 'aux61' direct represents '0' with '-11628'
c Var 'aux61' direct represents '1' with '11628'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-11628'
c Encoding variable: aux62 with domain: bool (representing constraint (max_left_00001_00008_00007<max_left_00001_00008_00008))
c Var 'aux62' direct represents '0' with '-11629'
c Var 'aux62' direct represents '1' with '11629'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-11629'
c Encoding variable: aux63 with domain: bool (representing constraint (max_left_00001_00008_00008<max_left_00001_00008_00009))
c Var 'aux63' direct represents '0' with '-11630'
c Var 'aux63' direct represents '1' with '11630'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-11630'
c Encoding variable: aux64 with domain: bool (representing constraint (max_left_00001_00009_00001<max_left_00001_00009_00002))
c Var 'aux64' direct represents '0' with '-11631'
c Var 'aux64' direct represents '1' with '11631'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-11631'
c Encoding variable: aux65 with domain: bool (representing constraint (max_left_00001_00009_00002<max_left_00001_00009_00003))
c Var 'aux65' direct represents '0' with '-11632'
c Var 'aux65' direct represents '1' with '11632'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-11632'
c Encoding variable: aux66 with domain: bool (representing constraint (max_left_00001_00009_00003<max_left_00001_00009_00004))
c Var 'aux66' direct represents '0' with '-11633'
c Var 'aux66' direct represents '1' with '11633'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-11633'
c Encoding variable: aux67 with domain: bool (representing constraint (max_left_00001_00009_00004<max_left_00001_00009_00005))
c Var 'aux67' direct represents '0' with '-11634'
c Var 'aux67' direct represents '1' with '11634'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-11634'
c Encoding variable: aux68 with domain: bool (representing constraint (max_left_00001_00009_00005<max_left_00001_00009_00006))
c Var 'aux68' direct represents '0' with '-11635'
c Var 'aux68' direct represents '1' with '11635'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-11635'
c Encoding variable: aux69 with domain: bool (representing constraint (max_left_00001_00009_00006<max_left_00001_00009_00007))
c Var 'aux69' direct represents '0' with '-11636'
c Var 'aux69' direct represents '1' with '11636'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-11636'
c Encoding variable: aux70 with domain: bool (representing constraint (max_left_00001_00009_00007<max_left_00001_00009_00008))
c Var 'aux70' direct represents '0' with '-11637'
c Var 'aux70' direct represents '1' with '11637'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-11637'
c Encoding variable: aux71 with domain: bool (representing constraint (max_left_00001_00009_00008<max_left_00001_00009_00009))
c Var 'aux71' direct represents '0' with '-11638'
c Var 'aux71' direct represents '1' with '11638'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-11638'
c Encoding variable: aux72 with domain: bool (representing constraint (max_left_00002_00001_00001<max_left_00002_00001_00002))
c Var 'aux72' direct represents '0' with '-11639'
c Var 'aux72' direct represents '1' with '11639'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-11639'
c Encoding variable: aux73 with domain: bool (representing constraint (max_left_00002_00001_00002<max_left_00002_00001_00003))
c Var 'aux73' direct represents '0' with '-11640'
c Var 'aux73' direct represents '1' with '11640'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-11640'
c Encoding variable: aux74 with domain: bool (representing constraint (max_left_00002_00001_00003<max_left_00002_00001_00004))
c Var 'aux74' direct represents '0' with '-11641'
c Var 'aux74' direct represents '1' with '11641'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-11641'
c Encoding variable: aux75 with domain: bool (representing constraint (max_left_00002_00001_00004<max_left_00002_00001_00005))
c Var 'aux75' direct represents '0' with '-11642'
c Var 'aux75' direct represents '1' with '11642'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-11642'
c Encoding variable: aux76 with domain: bool (representing constraint (max_left_00002_00001_00005<max_left_00002_00001_00006))
c Var 'aux76' direct represents '0' with '-11643'
c Var 'aux76' direct represents '1' with '11643'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-11643'
c Encoding variable: aux77 with domain: bool (representing constraint (max_left_00002_00001_00006<max_left_00002_00001_00007))
c Var 'aux77' direct represents '0' with '-11644'
c Var 'aux77' direct represents '1' with '11644'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-11644'
c Encoding variable: aux78 with domain: bool (representing constraint (max_left_00002_00001_00007<max_left_00002_00001_00008))
c Var 'aux78' direct represents '0' with '-11645'
c Var 'aux78' direct represents '1' with '11645'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-11645'
c Encoding variable: aux79 with domain: bool (representing constraint (max_left_00002_00001_00008<max_left_00002_00001_00009))
c Var 'aux79' direct represents '0' with '-11646'
c Var 'aux79' direct represents '1' with '11646'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-11646'
c Encoding variable: aux80 with domain: bool (representing constraint (max_left_00002_00002_00001<max_left_00002_00002_00002))
c Var 'aux80' direct represents '0' with '-11647'
c Var 'aux80' direct represents '1' with '11647'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-11647'
c Encoding variable: aux81 with domain: bool (representing constraint (max_left_00002_00002_00002<max_left_00002_00002_00003))
c Var 'aux81' direct represents '0' with '-11648'
c Var 'aux81' direct represents '1' with '11648'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-11648'
c Encoding variable: aux82 with domain: bool (representing constraint (max_left_00002_00002_00003<max_left_00002_00002_00004))
c Var 'aux82' direct represents '0' with '-11649'
c Var 'aux82' direct represents '1' with '11649'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-11649'
c Encoding variable: aux83 with domain: bool (representing constraint (max_left_00002_00002_00004<max_left_00002_00002_00005))
c Var 'aux83' direct represents '0' with '-11650'
c Var 'aux83' direct represents '1' with '11650'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-11650'
c Encoding variable: aux84 with domain: bool (representing constraint (max_left_00002_00002_00005<max_left_00002_00002_00006))
c Var 'aux84' direct represents '0' with '-11651'
c Var 'aux84' direct represents '1' with '11651'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-11651'
c Encoding variable: aux85 with domain: bool (representing constraint (max_left_00002_00002_00006<max_left_00002_00002_00007))
c Var 'aux85' direct represents '0' with '-11652'
c Var 'aux85' direct represents '1' with '11652'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-11652'
c Encoding variable: aux86 with domain: bool (representing constraint (max_left_00002_00002_00007<max_left_00002_00002_00008))
c Var 'aux86' direct represents '0' with '-11653'
c Var 'aux86' direct represents '1' with '11653'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-11653'
c Encoding variable: aux87 with domain: bool (representing constraint (max_left_00002_00002_00008<max_left_00002_00002_00009))
c Var 'aux87' direct represents '0' with '-11654'
c Var 'aux87' direct represents '1' with '11654'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-11654'
c Encoding variable: aux88 with domain: bool (representing constraint (max_left_00002_00003_00001<max_left_00002_00003_00002))
c Var 'aux88' direct represents '0' with '-11655'
c Var 'aux88' direct represents '1' with '11655'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-11655'
c Encoding variable: aux89 with domain: bool (representing constraint (max_left_00002_00003_00002<max_left_00002_00003_00003))
c Var 'aux89' direct represents '0' with '-11656'
c Var 'aux89' direct represents '1' with '11656'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-11656'
c Encoding variable: aux90 with domain: bool (representing constraint (max_left_00002_00003_00003<max_left_00002_00003_00004))
c Var 'aux90' direct represents '0' with '-11657'
c Var 'aux90' direct represents '1' with '11657'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-11657'
c Encoding variable: aux91 with domain: bool (representing constraint (max_left_00002_00003_00004<max_left_00002_00003_00005))
c Var 'aux91' direct represents '0' with '-11658'
c Var 'aux91' direct represents '1' with '11658'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-11658'
c Encoding variable: aux92 with domain: bool (representing constraint (max_left_00002_00003_00005<max_left_00002_00003_00006))
c Var 'aux92' direct represents '0' with '-11659'
c Var 'aux92' direct represents '1' with '11659'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-11659'
c Encoding variable: aux93 with domain: bool (representing constraint (max_left_00002_00003_00006<max_left_00002_00003_00007))
c Var 'aux93' direct represents '0' with '-11660'
c Var 'aux93' direct represents '1' with '11660'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-11660'
c Encoding variable: aux94 with domain: bool (representing constraint (max_left_00002_00003_00007<max_left_00002_00003_00008))
c Var 'aux94' direct represents '0' with '-11661'
c Var 'aux94' direct represents '1' with '11661'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-11661'
c Encoding variable: aux95 with domain: bool (representing constraint (max_left_00002_00003_00008<max_left_00002_00003_00009))
c Var 'aux95' direct represents '0' with '-11662'
c Var 'aux95' direct represents '1' with '11662'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-11662'
c Encoding variable: aux96 with domain: bool (representing constraint (max_left_00002_00004_00001<max_left_00002_00004_00002))
c Var 'aux96' direct represents '0' with '-11663'
c Var 'aux96' direct represents '1' with '11663'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-11663'
c Encoding variable: aux97 with domain: bool (representing constraint (max_left_00002_00004_00002<max_left_00002_00004_00003))
c Var 'aux97' direct represents '0' with '-11664'
c Var 'aux97' direct represents '1' with '11664'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-11664'
c Encoding variable: aux98 with domain: bool (representing constraint (max_left_00002_00004_00003<max_left_00002_00004_00004))
c Var 'aux98' direct represents '0' with '-11665'
c Var 'aux98' direct represents '1' with '11665'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-11665'
c Encoding variable: aux99 with domain: bool (representing constraint (max_left_00002_00004_00004<max_left_00002_00004_00005))
c Var 'aux99' direct represents '0' with '-11666'
c Var 'aux99' direct represents '1' with '11666'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-11666'
c Encoding variable: aux100 with domain: bool (representing constraint (max_left_00002_00004_00005<max_left_00002_00004_00006))
c Var 'aux100' direct represents '0' with '-11667'
c Var 'aux100' direct represents '1' with '11667'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-11667'
c Encoding variable: aux101 with domain: bool (representing constraint (max_left_00002_00004_00006<max_left_00002_00004_00007))
c Var 'aux101' direct represents '0' with '-11668'
c Var 'aux101' direct represents '1' with '11668'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-11668'
c Encoding variable: aux102 with domain: bool (representing constraint (max_left_00002_00004_00007<max_left_00002_00004_00008))
c Var 'aux102' direct represents '0' with '-11669'
c Var 'aux102' direct represents '1' with '11669'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-11669'
c Encoding variable: aux103 with domain: bool (representing constraint (max_left_00002_00004_00008<max_left_00002_00004_00009))
c Var 'aux103' direct represents '0' with '-11670'
c Var 'aux103' direct represents '1' with '11670'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-11670'
c Encoding variable: aux104 with domain: bool (representing constraint (max_left_00002_00005_00001<max_left_00002_00005_00002))
c Var 'aux104' direct represents '0' with '-11671'
c Var 'aux104' direct represents '1' with '11671'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-11671'
c Encoding variable: aux105 with domain: bool (representing constraint (max_left_00002_00005_00002<max_left_00002_00005_00003))
c Var 'aux105' direct represents '0' with '-11672'
c Var 'aux105' direct represents '1' with '11672'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-11672'
c Encoding variable: aux106 with domain: bool (representing constraint (max_left_00002_00005_00003<max_left_00002_00005_00004))
c Var 'aux106' direct represents '0' with '-11673'
c Var 'aux106' direct represents '1' with '11673'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-11673'
c Encoding variable: aux107 with domain: bool (representing constraint (max_left_00002_00005_00004<max_left_00002_00005_00005))
c Var 'aux107' direct represents '0' with '-11674'
c Var 'aux107' direct represents '1' with '11674'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-11674'
c Encoding variable: aux108 with domain: bool (representing constraint (max_left_00002_00005_00005<max_left_00002_00005_00006))
c Var 'aux108' direct represents '0' with '-11675'
c Var 'aux108' direct represents '1' with '11675'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-11675'
c Encoding variable: aux109 with domain: bool (representing constraint (max_left_00002_00005_00006<max_left_00002_00005_00007))
c Var 'aux109' direct represents '0' with '-11676'
c Var 'aux109' direct represents '1' with '11676'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-11676'
c Encoding variable: aux110 with domain: bool (representing constraint (max_left_00002_00005_00007<max_left_00002_00005_00008))
c Var 'aux110' direct represents '0' with '-11677'
c Var 'aux110' direct represents '1' with '11677'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-11677'
c Encoding variable: aux111 with domain: bool (representing constraint (max_left_00002_00005_00008<max_left_00002_00005_00009))
c Var 'aux111' direct represents '0' with '-11678'
c Var 'aux111' direct represents '1' with '11678'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-11678'
c Encoding variable: aux112 with domain: bool (representing constraint (max_left_00002_00006_00001<max_left_00002_00006_00002))
c Var 'aux112' direct represents '0' with '-11679'
c Var 'aux112' direct represents '1' with '11679'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-11679'
c Encoding variable: aux113 with domain: bool (representing constraint (max_left_00002_00006_00002<max_left_00002_00006_00003))
c Var 'aux113' direct represents '0' with '-11680'
c Var 'aux113' direct represents '1' with '11680'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-11680'
c Encoding variable: aux114 with domain: bool (representing constraint (max_left_00002_00006_00003<max_left_00002_00006_00004))
c Var 'aux114' direct represents '0' with '-11681'
c Var 'aux114' direct represents '1' with '11681'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-11681'
c Encoding variable: aux115 with domain: bool (representing constraint (max_left_00002_00006_00004<max_left_00002_00006_00005))
c Var 'aux115' direct represents '0' with '-11682'
c Var 'aux115' direct represents '1' with '11682'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-11682'
c Encoding variable: aux116 with domain: bool (representing constraint (max_left_00002_00006_00005<max_left_00002_00006_00006))
c Var 'aux116' direct represents '0' with '-11683'
c Var 'aux116' direct represents '1' with '11683'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-11683'
c Encoding variable: aux117 with domain: bool (representing constraint (max_left_00002_00006_00006<max_left_00002_00006_00007))
c Var 'aux117' direct represents '0' with '-11684'
c Var 'aux117' direct represents '1' with '11684'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-11684'
c Encoding variable: aux118 with domain: bool (representing constraint (max_left_00002_00006_00007<max_left_00002_00006_00008))
c Var 'aux118' direct represents '0' with '-11685'
c Var 'aux118' direct represents '1' with '11685'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-11685'
c Encoding variable: aux119 with domain: bool (representing constraint (max_left_00002_00006_00008<max_left_00002_00006_00009))
c Var 'aux119' direct represents '0' with '-11686'
c Var 'aux119' direct represents '1' with '11686'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-11686'
c Encoding variable: aux120 with domain: bool (representing constraint (max_left_00002_00007_00001<max_left_00002_00007_00002))
c Var 'aux120' direct represents '0' with '-11687'
c Var 'aux120' direct represents '1' with '11687'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-11687'
c Encoding variable: aux121 with domain: bool (representing constraint (max_left_00002_00007_00002<max_left_00002_00007_00003))
c Var 'aux121' direct represents '0' with '-11688'
c Var 'aux121' direct represents '1' with '11688'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-11688'
c Encoding variable: aux122 with domain: bool (representing constraint (max_left_00002_00007_00003<max_left_00002_00007_00004))
c Var 'aux122' direct represents '0' with '-11689'
c Var 'aux122' direct represents '1' with '11689'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-11689'
c Encoding variable: aux123 with domain: bool (representing constraint (max_left_00002_00007_00004<max_left_00002_00007_00005))
c Var 'aux123' direct represents '0' with '-11690'
c Var 'aux123' direct represents '1' with '11690'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-11690'
c Encoding variable: aux124 with domain: bool (representing constraint (max_left_00002_00007_00005<max_left_00002_00007_00006))
c Var 'aux124' direct represents '0' with '-11691'
c Var 'aux124' direct represents '1' with '11691'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-11691'
c Encoding variable: aux125 with domain: bool (representing constraint (max_left_00002_00007_00006<max_left_00002_00007_00007))
c Var 'aux125' direct represents '0' with '-11692'
c Var 'aux125' direct represents '1' with '11692'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-11692'
c Encoding variable: aux126 with domain: bool (representing constraint (max_left_00002_00007_00007<max_left_00002_00007_00008))
c Var 'aux126' direct represents '0' with '-11693'
c Var 'aux126' direct represents '1' with '11693'
c Var 'aux126' order represents '1' with '1'
c Var 'aux126' order represents '0' with '-11693'
c Encoding variable: aux127 with domain: bool (representing constraint (max_left_00002_00007_00008<max_left_00002_00007_00009))
c Var 'aux127' direct represents '0' with '-11694'
c Var 'aux127' direct represents '1' with '11694'
c Var 'aux127' order represents '1' with '1'
c Var 'aux127' order represents '0' with '-11694'
c Encoding variable: aux128 with domain: bool (representing constraint (max_left_00002_00008_00001<max_left_00002_00008_00002))
c Var 'aux128' direct represents '0' with '-11695'
c Var 'aux128' direct represents '1' with '11695'
c Var 'aux128' order represents '1' with '1'
c Var 'aux128' order represents '0' with '-11695'
c Encoding variable: aux129 with domain: bool (representing constraint (max_left_00002_00008_00002<max_left_00002_00008_00003))
c Var 'aux129' direct represents '0' with '-11696'
c Var 'aux129' direct represents '1' with '11696'
c Var 'aux129' order represents '1' with '1'
c Var 'aux129' order represents '0' with '-11696'
c Encoding variable: aux130 with domain: bool (representing constraint (max_left_00002_00008_00003<max_left_00002_00008_00004))
c Var 'aux130' direct represents '0' with '-11697'
c Var 'aux130' direct represents '1' with '11697'
c Var 'aux130' order represents '1' with '1'
c Var 'aux130' order represents '0' with '-11697'
c Encoding variable: aux131 with domain: bool (representing constraint (max_left_00002_00008_00004<max_left_00002_00008_00005))
c Var 'aux131' direct represents '0' with '-11698'
c Var 'aux131' direct represents '1' with '11698'
c Var 'aux131' order represents '1' with '1'
c Var 'aux131' order represents '0' with '-11698'
c Encoding variable: aux132 with domain: bool (representing constraint (max_left_00002_00008_00005<max_left_00002_00008_00006))
c Var 'aux132' direct represents '0' with '-11699'
c Var 'aux132' direct represents '1' with '11699'
c Var 'aux132' order represents '1' with '1'
c Var 'aux132' order represents '0' with '-11699'
c Encoding variable: aux133 with domain: bool (representing constraint (max_left_00002_00008_00006<max_left_00002_00008_00007))
c Var 'aux133' direct represents '0' with '-11700'
c Var 'aux133' direct represents '1' with '11700'
c Var 'aux133' order represents '1' with '1'
c Var 'aux133' order represents '0' with '-11700'
c Encoding variable: aux134 with domain: bool (representing constraint (max_left_00002_00008_00007<max_left_00002_00008_00008))
c Var 'aux134' direct represents '0' with '-11701'
c Var 'aux134' direct represents '1' with '11701'
c Var 'aux134' order represents '1' with '1'
c Var 'aux134' order represents '0' with '-11701'
c Encoding variable: aux135 with domain: bool (representing constraint (max_left_00002_00008_00008<max_left_00002_00008_00009))
c Var 'aux135' direct represents '0' with '-11702'
c Var 'aux135' direct represents '1' with '11702'
c Var 'aux135' order represents '1' with '1'
c Var 'aux135' order represents '0' with '-11702'
c Encoding variable: aux136 with domain: bool (representing constraint (max_left_00002_00009_00001<max_left_00002_00009_00002))
c Var 'aux136' direct represents '0' with '-11703'
c Var 'aux136' direct represents '1' with '11703'
c Var 'aux136' order represents '1' with '1'
c Var 'aux136' order represents '0' with '-11703'
c Encoding variable: aux137 with domain: bool (representing constraint (max_left_00002_00009_00002<max_left_00002_00009_00003))
c Var 'aux137' direct represents '0' with '-11704'
c Var 'aux137' direct represents '1' with '11704'
c Var 'aux137' order represents '1' with '1'
c Var 'aux137' order represents '0' with '-11704'
c Encoding variable: aux138 with domain: bool (representing constraint (max_left_00002_00009_00003<max_left_00002_00009_00004))
c Var 'aux138' direct represents '0' with '-11705'
c Var 'aux138' direct represents '1' with '11705'
c Var 'aux138' order represents '1' with '1'
c Var 'aux138' order represents '0' with '-11705'
c Encoding variable: aux139 with domain: bool (representing constraint (max_left_00002_00009_00004<max_left_00002_00009_00005))
c Var 'aux139' direct represents '0' with '-11706'
c Var 'aux139' direct represents '1' with '11706'
c Var 'aux139' order represents '1' with '1'
c Var 'aux139' order represents '0' with '-11706'
c Encoding variable: aux140 with domain: bool (representing constraint (max_left_00002_00009_00005<max_left_00002_00009_00006))
c Var 'aux140' direct represents '0' with '-11707'
c Var 'aux140' direct represents '1' with '11707'
c Var 'aux140' order represents '1' with '1'
c Var 'aux140' order represents '0' with '-11707'
c Encoding variable: aux141 with domain: bool (representing constraint (max_left_00002_00009_00006<max_left_00002_00009_00007))
c Var 'aux141' direct represents '0' with '-11708'
c Var 'aux141' direct represents '1' with '11708'
c Var 'aux141' order represents '1' with '1'
c Var 'aux141' order represents '0' with '-11708'
c Encoding variable: aux142 with domain: bool (representing constraint (max_left_00002_00009_00007<max_left_00002_00009_00008))
c Var 'aux142' direct represents '0' with '-11709'
c Var 'aux142' direct represents '1' with '11709'
c Var 'aux142' order represents '1' with '1'
c Var 'aux142' order represents '0' with '-11709'
c Encoding variable: aux143 with domain: bool (representing constraint (max_left_00002_00009_00008<max_left_00002_00009_00009))
c Var 'aux143' direct represents '0' with '-11710'
c Var 'aux143' direct represents '1' with '11710'
c Var 'aux143' order represents '1' with '1'
c Var 'aux143' order represents '0' with '-11710'
c Encoding variable: aux144 with domain: bool (representing constraint (max_left_00003_00001_00001<max_left_00003_00001_00002))
c Var 'aux144' direct represents '0' with '-11711'
c Var 'aux144' direct represents '1' with '11711'
c Var 'aux144' order represents '1' with '1'
c Var 'aux144' order represents '0' with '-11711'
c Encoding variable: aux145 with domain: bool (representing constraint (max_left_00003_00001_00002<max_left_00003_00001_00003))
c Var 'aux145' direct represents '0' with '-11712'
c Var 'aux145' direct represents '1' with '11712'
c Var 'aux145' order represents '1' with '1'
c Var 'aux145' order represents '0' with '-11712'
c Encoding variable: aux146 with domain: bool (representing constraint (max_left_00003_00001_00003<max_left_00003_00001_00004))
c Var 'aux146' direct represents '0' with '-11713'
c Var 'aux146' direct represents '1' with '11713'
c Var 'aux146' order represents '1' with '1'
c Var 'aux146' order represents '0' with '-11713'
c Encoding variable: aux147 with domain: bool (representing constraint (max_left_00003_00001_00004<max_left_00003_00001_00005))
c Var 'aux147' direct represents '0' with '-11714'
c Var 'aux147' direct represents '1' with '11714'
c Var 'aux147' order represents '1' with '1'
c Var 'aux147' order represents '0' with '-11714'
c Encoding variable: aux148 with domain: bool (representing constraint (max_left_00003_00001_00005<max_left_00003_00001_00006))
c Var 'aux148' direct represents '0' with '-11715'
c Var 'aux148' direct represents '1' with '11715'
c Var 'aux148' order represents '1' with '1'
c Var 'aux148' order represents '0' with '-11715'
c Encoding variable: aux149 with domain: bool (representing constraint (max_left_00003_00001_00006<max_left_00003_00001_00007))
c Var 'aux149' direct represents '0' with '-11716'
c Var 'aux149' direct represents '1' with '11716'
c Var 'aux149' order represents '1' with '1'
c Var 'aux149' order represents '0' with '-11716'
c Encoding variable: aux150 with domain: bool (representing constraint (max_left_00003_00001_00007<max_left_00003_00001_00008))
c Var 'aux150' direct represents '0' with '-11717'
c Var 'aux150' direct represents '1' with '11717'
c Var 'aux150' order represents '1' with '1'
c Var 'aux150' order represents '0' with '-11717'
c Encoding variable: aux151 with domain: bool (representing constraint (max_left_00003_00001_00008<max_left_00003_00001_00009))
c Var 'aux151' direct represents '0' with '-11718'
c Var 'aux151' direct represents '1' with '11718'
c Var 'aux151' order represents '1' with '1'
c Var 'aux151' order represents '0' with '-11718'
c Encoding variable: aux152 with domain: bool (representing constraint (max_left_00003_00002_00001<max_left_00003_00002_00002))
c Var 'aux152' direct represents '0' with '-11719'
c Var 'aux152' direct represents '1' with '11719'
c Var 'aux152' order represents '1' with '1'
c Var 'aux152' order represents '0' with '-11719'
c Encoding variable: aux153 with domain: bool (representing constraint (max_left_00003_00002_00002<max_left_00003_00002_00003))
c Var 'aux153' direct represents '0' with '-11720'
c Var 'aux153' direct represents '1' with '11720'
c Var 'aux153' order represents '1' with '1'
c Var 'aux153' order represents '0' with '-11720'
c Encoding variable: aux154 with domain: bool (representing constraint (max_left_00003_00002_00003<max_left_00003_00002_00004))
c Var 'aux154' direct represents '0' with '-11721'
c Var 'aux154' direct represents '1' with '11721'
c Var 'aux154' order represents '1' with '1'
c Var 'aux154' order represents '0' with '-11721'
c Encoding variable: aux155 with domain: bool (representing constraint (max_left_00003_00002_00004<max_left_00003_00002_00005))
c Var 'aux155' direct represents '0' with '-11722'
c Var 'aux155' direct represents '1' with '11722'
c Var 'aux155' order represents '1' with '1'
c Var 'aux155' order represents '0' with '-11722'
c Encoding variable: aux156 with domain: bool (representing constraint (max_left_00003_00002_00005<max_left_00003_00002_00006))
c Var 'aux156' direct represents '0' with '-11723'
c Var 'aux156' direct represents '1' with '11723'
c Var 'aux156' order represents '1' with '1'
c Var 'aux156' order represents '0' with '-11723'
c Encoding variable: aux157 with domain: bool (representing constraint (max_left_00003_00002_00006<max_left_00003_00002_00007))
c Var 'aux157' direct represents '0' with '-11724'
c Var 'aux157' direct represents '1' with '11724'
c Var 'aux157' order represents '1' with '1'
c Var 'aux157' order represents '0' with '-11724'
c Encoding variable: aux158 with domain: bool (representing constraint (max_left_00003_00002_00007<max_left_00003_00002_00008))
c Var 'aux158' direct represents '0' with '-11725'
c Var 'aux158' direct represents '1' with '11725'
c Var 'aux158' order represents '1' with '1'
c Var 'aux158' order represents '0' with '-11725'
c Encoding variable: aux159 with domain: bool (representing constraint (max_left_00003_00002_00008<max_left_00003_00002_00009))
c Var 'aux159' direct represents '0' with '-11726'
c Var 'aux159' direct represents '1' with '11726'
c Var 'aux159' order represents '1' with '1'
c Var 'aux159' order represents '0' with '-11726'
c Encoding variable: aux160 with domain: bool (representing constraint (max_left_00003_00003_00001<max_left_00003_00003_00002))
c Var 'aux160' direct represents '0' with '-11727'
c Var 'aux160' direct represents '1' with '11727'
c Var 'aux160' order represents '1' with '1'
c Var 'aux160' order represents '0' with '-11727'
c Encoding variable: aux161 with domain: bool (representing constraint (max_left_00003_00003_00002<max_left_00003_00003_00003))
c Var 'aux161' direct represents '0' with '-11728'
c Var 'aux161' direct represents '1' with '11728'
c Var 'aux161' order represents '1' with '1'
c Var 'aux161' order represents '0' with '-11728'
c Encoding variable: aux162 with domain: bool (representing constraint (max_left_00003_00003_00003<max_left_00003_00003_00004))
c Var 'aux162' direct represents '0' with '-11729'
c Var 'aux162' direct represents '1' with '11729'
c Var 'aux162' order represents '1' with '1'
c Var 'aux162' order represents '0' with '-11729'
c Encoding variable: aux163 with domain: bool (representing constraint (max_left_00003_00003_00004<max_left_00003_00003_00005))
c Var 'aux163' direct represents '0' with '-11730'
c Var 'aux163' direct represents '1' with '11730'
c Var 'aux163' order represents '1' with '1'
c Var 'aux163' order represents '0' with '-11730'
c Encoding variable: aux164 with domain: bool (representing constraint (max_left_00003_00003_00005<max_left_00003_00003_00006))
c Var 'aux164' direct represents '0' with '-11731'
c Var 'aux164' direct represents '1' with '11731'
c Var 'aux164' order represents '1' with '1'
c Var 'aux164' order represents '0' with '-11731'
c Encoding variable: aux165 with domain: bool (representing constraint (max_left_00003_00003_00006<max_left_00003_00003_00007))
c Var 'aux165' direct represents '0' with '-11732'
c Var 'aux165' direct represents '1' with '11732'
c Var 'aux165' order represents '1' with '1'
c Var 'aux165' order represents '0' with '-11732'
c Encoding variable: aux166 with domain: bool (representing constraint (max_left_00003_00003_00007<max_left_00003_00003_00008))
c Var 'aux166' direct represents '0' with '-11733'
c Var 'aux166' direct represents '1' with '11733'
c Var 'aux166' order represents '1' with '1'
c Var 'aux166' order represents '0' with '-11733'
c Encoding variable: aux167 with domain: bool (representing constraint (max_left_00003_00003_00008<max_left_00003_00003_00009))
c Var 'aux167' direct represents '0' with '-11734'
c Var 'aux167' direct represents '1' with '11734'
c Var 'aux167' order represents '1' with '1'
c Var 'aux167' order represents '0' with '-11734'
c Encoding variable: aux168 with domain: bool (representing constraint (max_left_00003_00004_00001<max_left_00003_00004_00002))
c Var 'aux168' direct represents '0' with '-11735'
c Var 'aux168' direct represents '1' with '11735'
c Var 'aux168' order represents '1' with '1'
c Var 'aux168' order represents '0' with '-11735'
c Encoding variable: aux169 with domain: bool (representing constraint (max_left_00003_00004_00002<max_left_00003_00004_00003))
c Var 'aux169' direct represents '0' with '-11736'
c Var 'aux169' direct represents '1' with '11736'
c Var 'aux169' order represents '1' with '1'
c Var 'aux169' order represents '0' with '-11736'
c Encoding variable: aux170 with domain: bool (representing constraint (max_left_00003_00004_00003<max_left_00003_00004_00004))
c Var 'aux170' direct represents '0' with '-11737'
c Var 'aux170' direct represents '1' with '11737'
c Var 'aux170' order represents '1' with '1'
c Var 'aux170' order represents '0' with '-11737'
c Encoding variable: aux171 with domain: bool (representing constraint (max_left_00003_00004_00004<max_left_00003_00004_00005))
c Var 'aux171' direct represents '0' with '-11738'
c Var 'aux171' direct represents '1' with '11738'
c Var 'aux171' order represents '1' with '1'
c Var 'aux171' order represents '0' with '-11738'
c Encoding variable: aux172 with domain: bool (representing constraint (max_left_00003_00004_00005<max_left_00003_00004_00006))
c Var 'aux172' direct represents '0' with '-11739'
c Var 'aux172' direct represents '1' with '11739'
c Var 'aux172' order represents '1' with '1'
c Var 'aux172' order represents '0' with '-11739'
c Encoding variable: aux173 with domain: bool (representing constraint (max_left_00003_00004_00006<max_left_00003_00004_00007))
c Var 'aux173' direct represents '0' with '-11740'
c Var 'aux173' direct represents '1' with '11740'
c Var 'aux173' order represents '1' with '1'
c Var 'aux173' order represents '0' with '-11740'
c Encoding variable: aux174 with domain: bool (representing constraint (max_left_00003_00004_00007<max_left_00003_00004_00008))
c Var 'aux174' direct represents '0' with '-11741'
c Var 'aux174' direct represents '1' with '11741'
c Var 'aux174' order represents '1' with '1'
c Var 'aux174' order represents '0' with '-11741'
c Encoding variable: aux175 with domain: bool (representing constraint (max_left_00003_00004_00008<max_left_00003_00004_00009))
c Var 'aux175' direct represents '0' with '-11742'
c Var 'aux175' direct represents '1' with '11742'
c Var 'aux175' order represents '1' with '1'
c Var 'aux175' order represents '0' with '-11742'
c Encoding variable: aux176 with domain: bool (representing constraint (max_left_00003_00005_00001<max_left_00003_00005_00002))
c Var 'aux176' direct represents '0' with '-11743'
c Var 'aux176' direct represents '1' with '11743'
c Var 'aux176' order represents '1' with '1'
c Var 'aux176' order represents '0' with '-11743'
c Encoding variable: aux177 with domain: bool (representing constraint (max_left_00003_00005_00002<max_left_00003_00005_00003))
c Var 'aux177' direct represents '0' with '-11744'
c Var 'aux177' direct represents '1' with '11744'
c Var 'aux177' order represents '1' with '1'
c Var 'aux177' order represents '0' with '-11744'
c Encoding variable: aux178 with domain: bool (representing constraint (max_left_00003_00005_00003<max_left_00003_00005_00004))
c Var 'aux178' direct represents '0' with '-11745'
c Var 'aux178' direct represents '1' with '11745'
c Var 'aux178' order represents '1' with '1'
c Var 'aux178' order represents '0' with '-11745'
c Encoding variable: aux179 with domain: bool (representing constraint (max_left_00003_00005_00004<max_left_00003_00005_00005))
c Var 'aux179' direct represents '0' with '-11746'
c Var 'aux179' direct represents '1' with '11746'
c Var 'aux179' order represents '1' with '1'
c Var 'aux179' order represents '0' with '-11746'
c Encoding variable: aux180 with domain: bool (representing constraint (max_left_00003_00005_00005<max_left_00003_00005_00006))
c Var 'aux180' direct represents '0' with '-11747'
c Var 'aux180' direct represents '1' with '11747'
c Var 'aux180' order represents '1' with '1'
c Var 'aux180' order represents '0' with '-11747'
c Encoding variable: aux181 with domain: bool (representing constraint (max_left_00003_00005_00006<max_left_00003_00005_00007))
c Var 'aux181' direct represents '0' with '-11748'
c Var 'aux181' direct represents '1' with '11748'
c Var 'aux181' order represents '1' with '1'
c Var 'aux181' order represents '0' with '-11748'
c Encoding variable: aux182 with domain: bool (representing constraint (max_left_00003_00005_00007<max_left_00003_00005_00008))
c Var 'aux182' direct represents '0' with '-11749'
c Var 'aux182' direct represents '1' with '11749'
c Var 'aux182' order represents '1' with '1'
c Var 'aux182' order represents '0' with '-11749'
c Encoding variable: aux183 with domain: bool (representing constraint (max_left_00003_00005_00008<max_left_00003_00005_00009))
c Var 'aux183' direct represents '0' with '-11750'
c Var 'aux183' direct represents '1' with '11750'
c Var 'aux183' order represents '1' with '1'
c Var 'aux183' order represents '0' with '-11750'
c Encoding variable: aux184 with domain: bool (representing constraint (max_left_00003_00006_00001<max_left_00003_00006_00002))
c Var 'aux184' direct represents '0' with '-11751'
c Var 'aux184' direct represents '1' with '11751'
c Var 'aux184' order represents '1' with '1'
c Var 'aux184' order represents '0' with '-11751'
c Encoding variable: aux185 with domain: bool (representing constraint (max_left_00003_00006_00002<max_left_00003_00006_00003))
c Var 'aux185' direct represents '0' with '-11752'
c Var 'aux185' direct represents '1' with '11752'
c Var 'aux185' order represents '1' with '1'
c Var 'aux185' order represents '0' with '-11752'
c Encoding variable: aux186 with domain: bool (representing constraint (max_left_00003_00006_00003<max_left_00003_00006_00004))
c Var 'aux186' direct represents '0' with '-11753'
c Var 'aux186' direct represents '1' with '11753'
c Var 'aux186' order represents '1' with '1'
c Var 'aux186' order represents '0' with '-11753'
c Encoding variable: aux187 with domain: bool (representing constraint (max_left_00003_00006_00004<max_left_00003_00006_00005))
c Var 'aux187' direct represents '0' with '-11754'
c Var 'aux187' direct represents '1' with '11754'
c Var 'aux187' order represents '1' with '1'
c Var 'aux187' order represents '0' with '-11754'
c Encoding variable: aux188 with domain: bool (representing constraint (max_left_00003_00006_00005<max_left_00003_00006_00006))
c Var 'aux188' direct represents '0' with '-11755'
c Var 'aux188' direct represents '1' with '11755'
c Var 'aux188' order represents '1' with '1'
c Var 'aux188' order represents '0' with '-11755'
c Encoding variable: aux189 with domain: bool (representing constraint (max_left_00003_00006_00006<max_left_00003_00006_00007))
c Var 'aux189' direct represents '0' with '-11756'
c Var 'aux189' direct represents '1' with '11756'
c Var 'aux189' order represents '1' with '1'
c Var 'aux189' order represents '0' with '-11756'
c Encoding variable: aux190 with domain: bool (representing constraint (max_left_00003_00006_00007<max_left_00003_00006_00008))
c Var 'aux190' direct represents '0' with '-11757'
c Var 'aux190' direct represents '1' with '11757'
c Var 'aux190' order represents '1' with '1'
c Var 'aux190' order represents '0' with '-11757'
c Encoding variable: aux191 with domain: bool (representing constraint (max_left_00003_00006_00008<max_left_00003_00006_00009))
c Var 'aux191' direct represents '0' with '-11758'
c Var 'aux191' direct represents '1' with '11758'
c Var 'aux191' order represents '1' with '1'
c Var 'aux191' order represents '0' with '-11758'
c Encoding variable: aux192 with domain: bool (representing constraint (max_left_00003_00007_00001<max_left_00003_00007_00002))
c Var 'aux192' direct represents '0' with '-11759'
c Var 'aux192' direct represents '1' with '11759'
c Var 'aux192' order represents '1' with '1'
c Var 'aux192' order represents '0' with '-11759'
c Encoding variable: aux193 with domain: bool (representing constraint (max_left_00003_00007_00002<max_left_00003_00007_00003))
c Var 'aux193' direct represents '0' with '-11760'
c Var 'aux193' direct represents '1' with '11760'
c Var 'aux193' order represents '1' with '1'
c Var 'aux193' order represents '0' with '-11760'
c Encoding variable: aux194 with domain: bool (representing constraint (max_left_00003_00007_00003<max_left_00003_00007_00004))
c Var 'aux194' direct represents '0' with '-11761'
c Var 'aux194' direct represents '1' with '11761'
c Var 'aux194' order represents '1' with '1'
c Var 'aux194' order represents '0' with '-11761'
c Encoding variable: aux195 with domain: bool (representing constraint (max_left_00003_00007_00004<max_left_00003_00007_00005))
c Var 'aux195' direct represents '0' with '-11762'
c Var 'aux195' direct represents '1' with '11762'
c Var 'aux195' order represents '1' with '1'
c Var 'aux195' order represents '0' with '-11762'
c Encoding variable: aux196 with domain: bool (representing constraint (max_left_00003_00007_00005<max_left_00003_00007_00006))
c Var 'aux196' direct represents '0' with '-11763'
c Var 'aux196' direct represents '1' with '11763'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-11763'
c Encoding variable: aux197 with domain: bool (representing constraint (max_left_00003_00007_00006<max_left_00003_00007_00007))
c Var 'aux197' direct represents '0' with '-11764'
c Var 'aux197' direct represents '1' with '11764'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-11764'
c Encoding variable: aux198 with domain: bool (representing constraint (max_left_00003_00007_00007<max_left_00003_00007_00008))
c Var 'aux198' direct represents '0' with '-11765'
c Var 'aux198' direct represents '1' with '11765'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-11765'
c Encoding variable: aux199 with domain: bool (representing constraint (max_left_00003_00007_00008<max_left_00003_00007_00009))
c Var 'aux199' direct represents '0' with '-11766'
c Var 'aux199' direct represents '1' with '11766'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-11766'
c Encoding variable: aux200 with domain: bool (representing constraint (max_left_00003_00008_00001<max_left_00003_00008_00002))
c Var 'aux200' direct represents '0' with '-11767'
c Var 'aux200' direct represents '1' with '11767'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-11767'
c Encoding variable: aux201 with domain: bool (representing constraint (max_left_00003_00008_00002<max_left_00003_00008_00003))
c Var 'aux201' direct represents '0' with '-11768'
c Var 'aux201' direct represents '1' with '11768'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-11768'
c Encoding variable: aux202 with domain: bool (representing constraint (max_left_00003_00008_00003<max_left_00003_00008_00004))
c Var 'aux202' direct represents '0' with '-11769'
c Var 'aux202' direct represents '1' with '11769'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-11769'
c Encoding variable: aux203 with domain: bool (representing constraint (max_left_00003_00008_00004<max_left_00003_00008_00005))
c Var 'aux203' direct represents '0' with '-11770'
c Var 'aux203' direct represents '1' with '11770'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-11770'
c Encoding variable: aux204 with domain: bool (representing constraint (max_left_00003_00008_00005<max_left_00003_00008_00006))
c Var 'aux204' direct represents '0' with '-11771'
c Var 'aux204' direct represents '1' with '11771'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-11771'
c Encoding variable: aux205 with domain: bool (representing constraint (max_left_00003_00008_00006<max_left_00003_00008_00007))
c Var 'aux205' direct represents '0' with '-11772'
c Var 'aux205' direct represents '1' with '11772'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-11772'
c Encoding variable: aux206 with domain: bool (representing constraint (max_left_00003_00008_00007<max_left_00003_00008_00008))
c Var 'aux206' direct represents '0' with '-11773'
c Var 'aux206' direct represents '1' with '11773'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-11773'
c Encoding variable: aux207 with domain: bool (representing constraint (max_left_00003_00008_00008<max_left_00003_00008_00009))
c Var 'aux207' direct represents '0' with '-11774'
c Var 'aux207' direct represents '1' with '11774'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-11774'
c Encoding variable: aux208 with domain: bool (representing constraint (max_left_00003_00009_00001<max_left_00003_00009_00002))
c Var 'aux208' direct represents '0' with '-11775'
c Var 'aux208' direct represents '1' with '11775'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-11775'
c Encoding variable: aux209 with domain: bool (representing constraint (max_left_00003_00009_00002<max_left_00003_00009_00003))
c Var 'aux209' direct represents '0' with '-11776'
c Var 'aux209' direct represents '1' with '11776'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-11776'
c Encoding variable: aux210 with domain: bool (representing constraint (max_left_00003_00009_00003<max_left_00003_00009_00004))
c Var 'aux210' direct represents '0' with '-11777'
c Var 'aux210' direct represents '1' with '11777'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-11777'
c Encoding variable: aux211 with domain: bool (representing constraint (max_left_00003_00009_00004<max_left_00003_00009_00005))
c Var 'aux211' direct represents '0' with '-11778'
c Var 'aux211' direct represents '1' with '11778'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-11778'
c Encoding variable: aux212 with domain: bool (representing constraint (max_left_00003_00009_00005<max_left_00003_00009_00006))
c Var 'aux212' direct represents '0' with '-11779'
c Var 'aux212' direct represents '1' with '11779'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-11779'
c Encoding variable: aux213 with domain: bool (representing constraint (max_left_00003_00009_00006<max_left_00003_00009_00007))
c Var 'aux213' direct represents '0' with '-11780'
c Var 'aux213' direct represents '1' with '11780'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-11780'
c Encoding variable: aux214 with domain: bool (representing constraint (max_left_00003_00009_00007<max_left_00003_00009_00008))
c Var 'aux214' direct represents '0' with '-11781'
c Var 'aux214' direct represents '1' with '11781'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-11781'
c Encoding variable: aux215 with domain: bool (representing constraint (max_left_00003_00009_00008<max_left_00003_00009_00009))
c Var 'aux215' direct represents '0' with '-11782'
c Var 'aux215' direct represents '1' with '11782'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-11782'
c Encoding variable: aux216 with domain: bool (representing constraint (max_left_00004_00001_00001<max_left_00004_00001_00002))
c Var 'aux216' direct represents '0' with '-11783'
c Var 'aux216' direct represents '1' with '11783'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-11783'
c Encoding variable: aux217 with domain: bool (representing constraint (max_left_00004_00001_00002<max_left_00004_00001_00003))
c Var 'aux217' direct represents '0' with '-11784'
c Var 'aux217' direct represents '1' with '11784'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-11784'
c Encoding variable: aux218 with domain: bool (representing constraint (max_left_00004_00001_00003<max_left_00004_00001_00004))
c Var 'aux218' direct represents '0' with '-11785'
c Var 'aux218' direct represents '1' with '11785'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-11785'
c Encoding variable: aux219 with domain: bool (representing constraint (max_left_00004_00001_00004<max_left_00004_00001_00005))
c Var 'aux219' direct represents '0' with '-11786'
c Var 'aux219' direct represents '1' with '11786'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-11786'
c Encoding variable: aux220 with domain: bool (representing constraint (max_left_00004_00001_00005<max_left_00004_00001_00006))
c Var 'aux220' direct represents '0' with '-11787'
c Var 'aux220' direct represents '1' with '11787'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-11787'
c Encoding variable: aux221 with domain: bool (representing constraint (max_left_00004_00001_00006<max_left_00004_00001_00007))
c Var 'aux221' direct represents '0' with '-11788'
c Var 'aux221' direct represents '1' with '11788'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-11788'
c Encoding variable: aux222 with domain: bool (representing constraint (max_left_00004_00001_00007<max_left_00004_00001_00008))
c Var 'aux222' direct represents '0' with '-11789'
c Var 'aux222' direct represents '1' with '11789'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-11789'
c Encoding variable: aux223 with domain: bool (representing constraint (max_left_00004_00001_00008<max_left_00004_00001_00009))
c Var 'aux223' direct represents '0' with '-11790'
c Var 'aux223' direct represents '1' with '11790'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-11790'
c Encoding variable: aux224 with domain: bool (representing constraint (max_left_00004_00002_00001<max_left_00004_00002_00002))
c Var 'aux224' direct represents '0' with '-11791'
c Var 'aux224' direct represents '1' with '11791'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-11791'
c Encoding variable: aux225 with domain: bool (representing constraint (max_left_00004_00002_00002<max_left_00004_00002_00003))
c Var 'aux225' direct represents '0' with '-11792'
c Var 'aux225' direct represents '1' with '11792'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-11792'
c Encoding variable: aux226 with domain: bool (representing constraint (max_left_00004_00002_00003<max_left_00004_00002_00004))
c Var 'aux226' direct represents '0' with '-11793'
c Var 'aux226' direct represents '1' with '11793'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-11793'
c Encoding variable: aux227 with domain: bool (representing constraint (max_left_00004_00002_00004<max_left_00004_00002_00005))
c Var 'aux227' direct represents '0' with '-11794'
c Var 'aux227' direct represents '1' with '11794'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-11794'
c Encoding variable: aux228 with domain: bool (representing constraint (max_left_00004_00002_00005<max_left_00004_00002_00006))
c Var 'aux228' direct represents '0' with '-11795'
c Var 'aux228' direct represents '1' with '11795'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-11795'
c Encoding variable: aux229 with domain: bool (representing constraint (max_left_00004_00002_00006<max_left_00004_00002_00007))
c Var 'aux229' direct represents '0' with '-11796'
c Var 'aux229' direct represents '1' with '11796'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-11796'
c Encoding variable: aux230 with domain: bool (representing constraint (max_left_00004_00002_00007<max_left_00004_00002_00008))
c Var 'aux230' direct represents '0' with '-11797'
c Var 'aux230' direct represents '1' with '11797'
c Var 'aux230' order represents '1' with '1'
c Var 'aux230' order represents '0' with '-11797'
c Encoding variable: aux231 with domain: bool (representing constraint (max_left_00004_00002_00008<max_left_00004_00002_00009))
c Var 'aux231' direct represents '0' with '-11798'
c Var 'aux231' direct represents '1' with '11798'
c Var 'aux231' order represents '1' with '1'
c Var 'aux231' order represents '0' with '-11798'
c Encoding variable: aux232 with domain: bool (representing constraint (max_left_00004_00003_00001<max_left_00004_00003_00002))
c Var 'aux232' direct represents '0' with '-11799'
c Var 'aux232' direct represents '1' with '11799'
c Var 'aux232' order represents '1' with '1'
c Var 'aux232' order represents '0' with '-11799'
c Encoding variable: aux233 with domain: bool (representing constraint (max_left_00004_00003_00002<max_left_00004_00003_00003))
c Var 'aux233' direct represents '0' with '-11800'
c Var 'aux233' direct represents '1' with '11800'
c Var 'aux233' order represents '1' with '1'
c Var 'aux233' order represents '0' with '-11800'
c Encoding variable: aux234 with domain: bool (representing constraint (max_left_00004_00003_00003<max_left_00004_00003_00004))
c Var 'aux234' direct represents '0' with '-11801'
c Var 'aux234' direct represents '1' with '11801'
c Var 'aux234' order represents '1' with '1'
c Var 'aux234' order represents '0' with '-11801'
c Encoding variable: aux235 with domain: bool (representing constraint (max_left_00004_00003_00004<max_left_00004_00003_00005))
c Var 'aux235' direct represents '0' with '-11802'
c Var 'aux235' direct represents '1' with '11802'
c Var 'aux235' order represents '1' with '1'
c Var 'aux235' order represents '0' with '-11802'
c Encoding variable: aux236 with domain: bool (representing constraint (max_left_00004_00003_00005<max_left_00004_00003_00006))
c Var 'aux236' direct represents '0' with '-11803'
c Var 'aux236' direct represents '1' with '11803'
c Var 'aux236' order represents '1' with '1'
c Var 'aux236' order represents '0' with '-11803'
c Encoding variable: aux237 with domain: bool (representing constraint (max_left_00004_00003_00006<max_left_00004_00003_00007))
c Var 'aux237' direct represents '0' with '-11804'
c Var 'aux237' direct represents '1' with '11804'
c Var 'aux237' order represents '1' with '1'
c Var 'aux237' order represents '0' with '-11804'
c Encoding variable: aux238 with domain: bool (representing constraint (max_left_00004_00003_00007<max_left_00004_00003_00008))
c Var 'aux238' direct represents '0' with '-11805'
c Var 'aux238' direct represents '1' with '11805'
c Var 'aux238' order represents '1' with '1'
c Var 'aux238' order represents '0' with '-11805'
c Encoding variable: aux239 with domain: bool (representing constraint (max_left_00004_00003_00008<max_left_00004_00003_00009))
c Var 'aux239' direct represents '0' with '-11806'
c Var 'aux239' direct represents '1' with '11806'
c Var 'aux239' order represents '1' with '1'
c Var 'aux239' order represents '0' with '-11806'
c Encoding variable: aux240 with domain: bool (representing constraint (max_left_00004_00004_00001<max_left_00004_00004_00002))
c Var 'aux240' direct represents '0' with '-11807'
c Var 'aux240' direct represents '1' with '11807'
c Var 'aux240' order represents '1' with '1'
c Var 'aux240' order represents '0' with '-11807'
c Encoding variable: aux241 with domain: bool (representing constraint (max_left_00004_00004_00002<max_left_00004_00004_00003))
c Var 'aux241' direct represents '0' with '-11808'
c Var 'aux241' direct represents '1' with '11808'
c Var 'aux241' order represents '1' with '1'
c Var 'aux241' order represents '0' with '-11808'
c Encoding variable: aux242 with domain: bool (representing constraint (max_left_00004_00004_00003<max_left_00004_00004_00004))
c Var 'aux242' direct represents '0' with '-11809'
c Var 'aux242' direct represents '1' with '11809'
c Var 'aux242' order represents '1' with '1'
c Var 'aux242' order represents '0' with '-11809'
c Encoding variable: aux243 with domain: bool (representing constraint (max_left_00004_00004_00004<max_left_00004_00004_00005))
c Var 'aux243' direct represents '0' with '-11810'
c Var 'aux243' direct represents '1' with '11810'
c Var 'aux243' order represents '1' with '1'
c Var 'aux243' order represents '0' with '-11810'
c Encoding variable: aux244 with domain: bool (representing constraint (max_left_00004_00004_00005<max_left_00004_00004_00006))
c Var 'aux244' direct represents '0' with '-11811'
c Var 'aux244' direct represents '1' with '11811'
c Var 'aux244' order represents '1' with '1'
c Var 'aux244' order represents '0' with '-11811'
c Encoding variable: aux245 with domain: bool (representing constraint (max_left_00004_00004_00006<max_left_00004_00004_00007))
c Var 'aux245' direct represents '0' with '-11812'
c Var 'aux245' direct represents '1' with '11812'
c Var 'aux245' order represents '1' with '1'
c Var 'aux245' order represents '0' with '-11812'
c Encoding variable: aux246 with domain: bool (representing constraint (max_left_00004_00004_00007<max_left_00004_00004_00008))
c Var 'aux246' direct represents '0' with '-11813'
c Var 'aux246' direct represents '1' with '11813'
c Var 'aux246' order represents '1' with '1'
c Var 'aux246' order represents '0' with '-11813'
c Encoding variable: aux247 with domain: bool (representing constraint (max_left_00004_00004_00008<max_left_00004_00004_00009))
c Var 'aux247' direct represents '0' with '-11814'
c Var 'aux247' direct represents '1' with '11814'
c Var 'aux247' order represents '1' with '1'
c Var 'aux247' order represents '0' with '-11814'
c Encoding variable: aux248 with domain: bool (representing constraint (max_left_00004_00005_00001<max_left_00004_00005_00002))
c Var 'aux248' direct represents '0' with '-11815'
c Var 'aux248' direct represents '1' with '11815'
c Var 'aux248' order represents '1' with '1'
c Var 'aux248' order represents '0' with '-11815'
c Encoding variable: aux249 with domain: bool (representing constraint (max_left_00004_00005_00002<max_left_00004_00005_00003))
c Var 'aux249' direct represents '0' with '-11816'
c Var 'aux249' direct represents '1' with '11816'
c Var 'aux249' order represents '1' with '1'
c Var 'aux249' order represents '0' with '-11816'
c Encoding variable: aux250 with domain: bool (representing constraint (max_left_00004_00005_00003<max_left_00004_00005_00004))
c Var 'aux250' direct represents '0' with '-11817'
c Var 'aux250' direct represents '1' with '11817'
c Var 'aux250' order represents '1' with '1'
c Var 'aux250' order represents '0' with '-11817'
c Encoding variable: aux251 with domain: bool (representing constraint (max_left_00004_00005_00004<max_left_00004_00005_00005))
c Var 'aux251' direct represents '0' with '-11818'
c Var 'aux251' direct represents '1' with '11818'
c Var 'aux251' order represents '1' with '1'
c Var 'aux251' order represents '0' with '-11818'
c Encoding variable: aux252 with domain: bool (representing constraint (max_left_00004_00005_00005<max_left_00004_00005_00006))
c Var 'aux252' direct represents '0' with '-11819'
c Var 'aux252' direct represents '1' with '11819'
c Var 'aux252' order represents '1' with '1'
c Var 'aux252' order represents '0' with '-11819'
c Encoding variable: aux253 with domain: bool (representing constraint (max_left_00004_00005_00006<max_left_00004_00005_00007))
c Var 'aux253' direct represents '0' with '-11820'
c Var 'aux253' direct represents '1' with '11820'
c Var 'aux253' order represents '1' with '1'
c Var 'aux253' order represents '0' with '-11820'
c Encoding variable: aux254 with domain: bool (representing constraint (max_left_00004_00005_00007<max_left_00004_00005_00008))
c Var 'aux254' direct represents '0' with '-11821'
c Var 'aux254' direct represents '1' with '11821'
c Var 'aux254' order represents '1' with '1'
c Var 'aux254' order represents '0' with '-11821'
c Encoding variable: aux255 with domain: bool (representing constraint (max_left_00004_00005_00008<max_left_00004_00005_00009))
c Var 'aux255' direct represents '0' with '-11822'
c Var 'aux255' direct represents '1' with '11822'
c Var 'aux255' order represents '1' with '1'
c Var 'aux255' order represents '0' with '-11822'
c Encoding variable: aux256 with domain: bool (representing constraint (max_left_00004_00006_00001<max_left_00004_00006_00002))
c Var 'aux256' direct represents '0' with '-11823'
c Var 'aux256' direct represents '1' with '11823'
c Var 'aux256' order represents '1' with '1'
c Var 'aux256' order represents '0' with '-11823'
c Encoding variable: aux257 with domain: bool (representing constraint (max_left_00004_00006_00002<max_left_00004_00006_00003))
c Var 'aux257' direct represents '0' with '-11824'
c Var 'aux257' direct represents '1' with '11824'
c Var 'aux257' order represents '1' with '1'
c Var 'aux257' order represents '0' with '-11824'
c Encoding variable: aux258 with domain: bool (representing constraint (max_left_00004_00006_00003<max_left_00004_00006_00004))
c Var 'aux258' direct represents '0' with '-11825'
c Var 'aux258' direct represents '1' with '11825'
c Var 'aux258' order represents '1' with '1'
c Var 'aux258' order represents '0' with '-11825'
c Encoding variable: aux259 with domain: bool (representing constraint (max_left_00004_00006_00004<max_left_00004_00006_00005))
c Var 'aux259' direct represents '0' with '-11826'
c Var 'aux259' direct represents '1' with '11826'
c Var 'aux259' order represents '1' with '1'
c Var 'aux259' order represents '0' with '-11826'
c Encoding variable: aux260 with domain: bool (representing constraint (max_left_00004_00006_00005<max_left_00004_00006_00006))
c Var 'aux260' direct represents '0' with '-11827'
c Var 'aux260' direct represents '1' with '11827'
c Var 'aux260' order represents '1' with '1'
c Var 'aux260' order represents '0' with '-11827'
c Encoding variable: aux261 with domain: bool (representing constraint (max_left_00004_00006_00006<max_left_00004_00006_00007))
c Var 'aux261' direct represents '0' with '-11828'
c Var 'aux261' direct represents '1' with '11828'
c Var 'aux261' order represents '1' with '1'
c Var 'aux261' order represents '0' with '-11828'
c Encoding variable: aux262 with domain: bool (representing constraint (max_left_00004_00006_00007<max_left_00004_00006_00008))
c Var 'aux262' direct represents '0' with '-11829'
c Var 'aux262' direct represents '1' with '11829'
c Var 'aux262' order represents '1' with '1'
c Var 'aux262' order represents '0' with '-11829'
c Encoding variable: aux263 with domain: bool (representing constraint (max_left_00004_00006_00008<max_left_00004_00006_00009))
c Var 'aux263' direct represents '0' with '-11830'
c Var 'aux263' direct represents '1' with '11830'
c Var 'aux263' order represents '1' with '1'
c Var 'aux263' order represents '0' with '-11830'
c Encoding variable: aux264 with domain: bool (representing constraint (max_left_00004_00007_00001<max_left_00004_00007_00002))
c Var 'aux264' direct represents '0' with '-11831'
c Var 'aux264' direct represents '1' with '11831'
c Var 'aux264' order represents '1' with '1'
c Var 'aux264' order represents '0' with '-11831'
c Encoding variable: aux265 with domain: bool (representing constraint (max_left_00004_00007_00002<max_left_00004_00007_00003))
c Var 'aux265' direct represents '0' with '-11832'
c Var 'aux265' direct represents '1' with '11832'
c Var 'aux265' order represents '1' with '1'
c Var 'aux265' order represents '0' with '-11832'
c Encoding variable: aux266 with domain: bool (representing constraint (max_left_00004_00007_00003<max_left_00004_00007_00004))
c Var 'aux266' direct represents '0' with '-11833'
c Var 'aux266' direct represents '1' with '11833'
c Var 'aux266' order represents '1' with '1'
c Var 'aux266' order represents '0' with '-11833'
c Encoding variable: aux267 with domain: bool (representing constraint (max_left_00004_00007_00004<max_left_00004_00007_00005))
c Var 'aux267' direct represents '0' with '-11834'
c Var 'aux267' direct represents '1' with '11834'
c Var 'aux267' order represents '1' with '1'
c Var 'aux267' order represents '0' with '-11834'
c Encoding variable: aux268 with domain: bool (representing constraint (max_left_00004_00007_00005<max_left_00004_00007_00006))
c Var 'aux268' direct represents '0' with '-11835'
c Var 'aux268' direct represents '1' with '11835'
c Var 'aux268' order represents '1' with '1'
c Var 'aux268' order represents '0' with '-11835'
c Encoding variable: aux269 with domain: bool (representing constraint (max_left_00004_00007_00006<max_left_00004_00007_00007))
c Var 'aux269' direct represents '0' with '-11836'
c Var 'aux269' direct represents '1' with '11836'
c Var 'aux269' order represents '1' with '1'
c Var 'aux269' order represents '0' with '-11836'
c Encoding variable: aux270 with domain: bool (representing constraint (max_left_00004_00007_00007<max_left_00004_00007_00008))
c Var 'aux270' direct represents '0' with '-11837'
c Var 'aux270' direct represents '1' with '11837'
c Var 'aux270' order represents '1' with '1'
c Var 'aux270' order represents '0' with '-11837'
c Encoding variable: aux271 with domain: bool (representing constraint (max_left_00004_00007_00008<max_left_00004_00007_00009))
c Var 'aux271' direct represents '0' with '-11838'
c Var 'aux271' direct represents '1' with '11838'
c Var 'aux271' order represents '1' with '1'
c Var 'aux271' order represents '0' with '-11838'
c Encoding variable: aux272 with domain: bool (representing constraint (max_left_00004_00008_00001<max_left_00004_00008_00002))
c Var 'aux272' direct represents '0' with '-11839'
c Var 'aux272' direct represents '1' with '11839'
c Var 'aux272' order represents '1' with '1'
c Var 'aux272' order represents '0' with '-11839'
c Encoding variable: aux273 with domain: bool (representing constraint (max_left_00004_00008_00002<max_left_00004_00008_00003))
c Var 'aux273' direct represents '0' with '-11840'
c Var 'aux273' direct represents '1' with '11840'
c Var 'aux273' order represents '1' with '1'
c Var 'aux273' order represents '0' with '-11840'
c Encoding variable: aux274 with domain: bool (representing constraint (max_left_00004_00008_00003<max_left_00004_00008_00004))
c Var 'aux274' direct represents '0' with '-11841'
c Var 'aux274' direct represents '1' with '11841'
c Var 'aux274' order represents '1' with '1'
c Var 'aux274' order represents '0' with '-11841'
c Encoding variable: aux275 with domain: bool (representing constraint (max_left_00004_00008_00004<max_left_00004_00008_00005))
c Var 'aux275' direct represents '0' with '-11842'
c Var 'aux275' direct represents '1' with '11842'
c Var 'aux275' order represents '1' with '1'
c Var 'aux275' order represents '0' with '-11842'
c Encoding variable: aux276 with domain: bool (representing constraint (max_left_00004_00008_00005<max_left_00004_00008_00006))
c Var 'aux276' direct represents '0' with '-11843'
c Var 'aux276' direct represents '1' with '11843'
c Var 'aux276' order represents '1' with '1'
c Var 'aux276' order represents '0' with '-11843'
c Encoding variable: aux277 with domain: bool (representing constraint (max_left_00004_00008_00006<max_left_00004_00008_00007))
c Var 'aux277' direct represents '0' with '-11844'
c Var 'aux277' direct represents '1' with '11844'
c Var 'aux277' order represents '1' with '1'
c Var 'aux277' order represents '0' with '-11844'
c Encoding variable: aux278 with domain: bool (representing constraint (max_left_00004_00008_00007<max_left_00004_00008_00008))
c Var 'aux278' direct represents '0' with '-11845'
c Var 'aux278' direct represents '1' with '11845'
c Var 'aux278' order represents '1' with '1'
c Var 'aux278' order represents '0' with '-11845'
c Encoding variable: aux279 with domain: bool (representing constraint (max_left_00004_00008_00008<max_left_00004_00008_00009))
c Var 'aux279' direct represents '0' with '-11846'
c Var 'aux279' direct represents '1' with '11846'
c Var 'aux279' order represents '1' with '1'
c Var 'aux279' order represents '0' with '-11846'
c Encoding variable: aux280 with domain: bool (representing constraint (max_left_00004_00009_00001<max_left_00004_00009_00002))
c Var 'aux280' direct represents '0' with '-11847'
c Var 'aux280' direct represents '1' with '11847'
c Var 'aux280' order represents '1' with '1'
c Var 'aux280' order represents '0' with '-11847'
c Encoding variable: aux281 with domain: bool (representing constraint (max_left_00004_00009_00002<max_left_00004_00009_00003))
c Var 'aux281' direct represents '0' with '-11848'
c Var 'aux281' direct represents '1' with '11848'
c Var 'aux281' order represents '1' with '1'
c Var 'aux281' order represents '0' with '-11848'
c Encoding variable: aux282 with domain: bool (representing constraint (max_left_00004_00009_00003<max_left_00004_00009_00004))
c Var 'aux282' direct represents '0' with '-11849'
c Var 'aux282' direct represents '1' with '11849'
c Var 'aux282' order represents '1' with '1'
c Var 'aux282' order represents '0' with '-11849'
c Encoding variable: aux283 with domain: bool (representing constraint (max_left_00004_00009_00004<max_left_00004_00009_00005))
c Var 'aux283' direct represents '0' with '-11850'
c Var 'aux283' direct represents '1' with '11850'
c Var 'aux283' order represents '1' with '1'
c Var 'aux283' order represents '0' with '-11850'
c Encoding variable: aux284 with domain: bool (representing constraint (max_left_00004_00009_00005<max_left_00004_00009_00006))
c Var 'aux284' direct represents '0' with '-11851'
c Var 'aux284' direct represents '1' with '11851'
c Var 'aux284' order represents '1' with '1'
c Var 'aux284' order represents '0' with '-11851'
c Encoding variable: aux285 with domain: bool (representing constraint (max_left_00004_00009_00006<max_left_00004_00009_00007))
c Var 'aux285' direct represents '0' with '-11852'
c Var 'aux285' direct represents '1' with '11852'
c Var 'aux285' order represents '1' with '1'
c Var 'aux285' order represents '0' with '-11852'
c Encoding variable: aux286 with domain: bool (representing constraint (max_left_00004_00009_00007<max_left_00004_00009_00008))
c Var 'aux286' direct represents '0' with '-11853'
c Var 'aux286' direct represents '1' with '11853'
c Var 'aux286' order represents '1' with '1'
c Var 'aux286' order represents '0' with '-11853'
c Encoding variable: aux287 with domain: bool (representing constraint (max_left_00004_00009_00008<max_left_00004_00009_00009))
c Var 'aux287' direct represents '0' with '-11854'
c Var 'aux287' direct represents '1' with '11854'
c Var 'aux287' order represents '1' with '1'
c Var 'aux287' order represents '0' with '-11854'
c Encoding variable: aux288 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00003=1) + (field_00001_00004=1) + (field_00001_00005=1) + (field_00001_00006=1) + (field_00001_00007=1) + (field_00001_00008=1) + (field_00001_00009=1))=tv=1))
c Var 'aux288' direct represents '0' with '-11855'
c Var 'aux288' direct represents '1' with '11855'
c Var 'aux288' order represents '1' with '1'
c Var 'aux288' order represents '0' with '-11855'
c Encoding variable: aux289 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00003=2) + (field_00001_00004=2) + (field_00001_00005=2) + (field_00001_00006=2) + (field_00001_00007=2) + (field_00001_00008=2) + (field_00001_00009=2))=tv=1))
c Var 'aux289' direct represents '0' with '-11856'
c Var 'aux289' direct represents '1' with '11856'
c Var 'aux289' order represents '1' with '1'
c Var 'aux289' order represents '0' with '-11856'
c Encoding variable: aux290 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00003=3) + (field_00001_00004=3) + (field_00001_00005=3) + (field_00001_00006=3) + (field_00001_00007=3) + (field_00001_00008=3) + (field_00001_00009=3))=tv=1))
c Var 'aux290' direct represents '0' with '-11857'
c Var 'aux290' direct represents '1' with '11857'
c Var 'aux290' order represents '1' with '1'
c Var 'aux290' order represents '0' with '-11857'
c Encoding variable: aux291 with domain: bool (representing constraint (((field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4) + (field_00001_00004=4) + (field_00001_00005=4) + (field_00001_00006=4) + (field_00001_00007=4) + (field_00001_00008=4) + (field_00001_00009=4))=tv=1))
c Var 'aux291' direct represents '0' with '-11858'
c Var 'aux291' direct represents '1' with '11858'
c Var 'aux291' order represents '1' with '1'
c Var 'aux291' order represents '0' with '-11858'
c Encoding variable: aux292 with domain: bool (representing constraint (((field_00001_00001=5) + (field_00001_00002=5) + (field_00001_00003=5) + (field_00001_00004=5) + (field_00001_00005=5) + (field_00001_00006=5) + (field_00001_00007=5) + (field_00001_00008=5) + (field_00001_00009=5))=tv=1))
c Var 'aux292' direct represents '0' with '-11859'
c Var 'aux292' direct represents '1' with '11859'
c Var 'aux292' order represents '1' with '1'
c Var 'aux292' order represents '0' with '-11859'
c Encoding variable: aux293 with domain: bool (representing constraint (((field_00001_00001=6) + (field_00001_00002=6) + (field_00001_00003=6) + (field_00001_00004=6) + (field_00001_00005=6) + (field_00001_00006=6) + (field_00001_00007=6) + (field_00001_00008=6) + (field_00001_00009=6))=tv=1))
c Var 'aux293' direct represents '0' with '-11860'
c Var 'aux293' direct represents '1' with '11860'
c Var 'aux293' order represents '1' with '1'
c Var 'aux293' order represents '0' with '-11860'
c Encoding variable: aux294 with domain: bool (representing constraint (((field_00001_00001=7) + (field_00001_00002=7) + (field_00001_00003=7) + (field_00001_00004=7) + (field_00001_00005=7) + (field_00001_00006=7) + (field_00001_00007=7) + (field_00001_00008=7) + (field_00001_00009=7))=tv=1))
c Var 'aux294' direct represents '0' with '-11861'
c Var 'aux294' direct represents '1' with '11861'
c Var 'aux294' order represents '1' with '1'
c Var 'aux294' order represents '0' with '-11861'
c Encoding variable: aux295 with domain: bool (representing constraint (((field_00001_00001=8) + (field_00001_00002=8) + (field_00001_00003=8) + (field_00001_00004=8) + (field_00001_00005=8) + (field_00001_00006=8) + (field_00001_00007=8) + (field_00001_00008=8) + (field_00001_00009=8))=tv=1))
c Var 'aux295' direct represents '0' with '-11862'
c Var 'aux295' direct represents '1' with '11862'
c Var 'aux295' order represents '1' with '1'
c Var 'aux295' order represents '0' with '-11862'
c Encoding variable: aux296 with domain: bool (representing constraint (((field_00001_00001=9) + (field_00001_00002=9) + (field_00001_00003=9) + (field_00001_00004=9) + (field_00001_00005=9) + (field_00001_00006=9) + (field_00001_00007=9) + (field_00001_00008=9) + (field_00001_00009=9))=tv=1))
c Var 'aux296' direct represents '0' with '-11863'
c Var 'aux296' direct represents '1' with '11863'
c Var 'aux296' order represents '1' with '1'
c Var 'aux296' order represents '0' with '-11863'
c Encoding variable: aux297 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00002=1) + (field_00002_00003=1) + (field_00002_00004=1) + (field_00002_00005=1) + (field_00002_00006=1) + (field_00002_00007=1) + (field_00002_00008=1) + (field_00002_00009=1))=tv=1))
c Var 'aux297' direct represents '0' with '-11864'
c Var 'aux297' direct represents '1' with '11864'
c Var 'aux297' order represents '1' with '1'
c Var 'aux297' order represents '0' with '-11864'
c Encoding variable: aux298 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00002=2) + (field_00002_00003=2) + (field_00002_00004=2) + (field_00002_00005=2) + (field_00002_00006=2) + (field_00002_00007=2) + (field_00002_00008=2) + (field_00002_00009=2))=tv=1))
c Var 'aux298' direct represents '0' with '-11865'
c Var 'aux298' direct represents '1' with '11865'
c Var 'aux298' order represents '1' with '1'
c Var 'aux298' order represents '0' with '-11865'
c Encoding variable: aux299 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00002=3) + (field_00002_00003=3) + (field_00002_00004=3) + (field_00002_00005=3) + (field_00002_00006=3) + (field_00002_00007=3) + (field_00002_00008=3) + (field_00002_00009=3))=tv=1))
c Var 'aux299' direct represents '0' with '-11866'
c Var 'aux299' direct represents '1' with '11866'
c Var 'aux299' order represents '1' with '1'
c Var 'aux299' order represents '0' with '-11866'
c Encoding variable: aux300 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00002_00004=4) + (field_00002_00005=4) + (field_00002_00006=4) + (field_00002_00007=4) + (field_00002_00008=4) + (field_00002_00009=4))=tv=1))
c Var 'aux300' direct represents '0' with '-11867'
c Var 'aux300' direct represents '1' with '11867'
c Var 'aux300' order represents '1' with '1'
c Var 'aux300' order represents '0' with '-11867'
c Encoding variable: aux301 with domain: bool (representing constraint (((field_00002_00001=5) + (field_00002_00002=5) + (field_00002_00003=5) + (field_00002_00004=5) + (field_00002_00005=5) + (field_00002_00006=5) + (field_00002_00007=5) + (field_00002_00008=5) + (field_00002_00009=5))=tv=1))
c Var 'aux301' direct represents '0' with '-11868'
c Var 'aux301' direct represents '1' with '11868'
c Var 'aux301' order represents '1' with '1'
c Var 'aux301' order represents '0' with '-11868'
c Encoding variable: aux302 with domain: bool (representing constraint (((field_00002_00001=6) + (field_00002_00002=6) + (field_00002_00003=6) + (field_00002_00004=6) + (field_00002_00005=6) + (field_00002_00006=6) + (field_00002_00007=6) + (field_00002_00008=6) + (field_00002_00009=6))=tv=1))
c Var 'aux302' direct represents '0' with '-11869'
c Var 'aux302' direct represents '1' with '11869'
c Var 'aux302' order represents '1' with '1'
c Var 'aux302' order represents '0' with '-11869'
c Encoding variable: aux303 with domain: bool (representing constraint (((field_00002_00001=7) + (field_00002_00002=7) + (field_00002_00003=7) + (field_00002_00004=7) + (field_00002_00005=7) + (field_00002_00006=7) + (field_00002_00007=7) + (field_00002_00008=7) + (field_00002_00009=7))=tv=1))
c Var 'aux303' direct represents '0' with '-11870'
c Var 'aux303' direct represents '1' with '11870'
c Var 'aux303' order represents '1' with '1'
c Var 'aux303' order represents '0' with '-11870'
c Encoding variable: aux304 with domain: bool (representing constraint (((field_00002_00001=8) + (field_00002_00002=8) + (field_00002_00003=8) + (field_00002_00004=8) + (field_00002_00005=8) + (field_00002_00006=8) + (field_00002_00007=8) + (field_00002_00008=8) + (field_00002_00009=8))=tv=1))
c Var 'aux304' direct represents '0' with '-11871'
c Var 'aux304' direct represents '1' with '11871'
c Var 'aux304' order represents '1' with '1'
c Var 'aux304' order represents '0' with '-11871'
c Encoding variable: aux305 with domain: bool (representing constraint (((field_00002_00001=9) + (field_00002_00002=9) + (field_00002_00003=9) + (field_00002_00004=9) + (field_00002_00005=9) + (field_00002_00006=9) + (field_00002_00007=9) + (field_00002_00008=9) + (field_00002_00009=9))=tv=1))
c Var 'aux305' direct represents '0' with '-11872'
c Var 'aux305' direct represents '1' with '11872'
c Var 'aux305' order represents '1' with '1'
c Var 'aux305' order represents '0' with '-11872'
c Encoding variable: aux306 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1) + (field_00003_00004=1) + (field_00003_00005=1) + (field_00003_00006=1) + (field_00003_00007=1) + (field_00003_00008=1) + (field_00003_00009=1))=tv=1))
c Var 'aux306' direct represents '0' with '-11873'
c Var 'aux306' direct represents '1' with '11873'
c Var 'aux306' order represents '1' with '1'
c Var 'aux306' order represents '0' with '-11873'
c Encoding variable: aux307 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2) + (field_00003_00005=2) + (field_00003_00006=2) + (field_00003_00007=2) + (field_00003_00008=2) + (field_00003_00009=2))=tv=1))
c Var 'aux307' direct represents '0' with '-11874'
c Var 'aux307' direct represents '1' with '11874'
c Var 'aux307' order represents '1' with '1'
c Var 'aux307' order represents '0' with '-11874'
c Encoding variable: aux308 with domain: bool (representing constraint (((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3) + (field_00003_00005=3) + (field_00003_00006=3) + (field_00003_00007=3) + (field_00003_00008=3) + (field_00003_00009=3))=tv=1))
c Var 'aux308' direct represents '0' with '-11875'
c Var 'aux308' direct represents '1' with '11875'
c Var 'aux308' order represents '1' with '1'
c Var 'aux308' order represents '0' with '-11875'
c Encoding variable: aux309 with domain: bool (representing constraint (((field_00003_00001=4) + (field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4) + (field_00003_00005=4) + (field_00003_00006=4) + (field_00003_00007=4) + (field_00003_00008=4) + (field_00003_00009=4))=tv=1))
c Var 'aux309' direct represents '0' with '-11876'
c Var 'aux309' direct represents '1' with '11876'
c Var 'aux309' order represents '1' with '1'
c Var 'aux309' order represents '0' with '-11876'
c Encoding variable: aux310 with domain: bool (representing constraint (((field_00003_00001=5) + (field_00003_00002=5) + (field_00003_00003=5) + (field_00003_00004=5) + (field_00003_00005=5) + (field_00003_00006=5) + (field_00003_00007=5) + (field_00003_00008=5) + (field_00003_00009=5))=tv=1))
c Var 'aux310' direct represents '0' with '-11877'
c Var 'aux310' direct represents '1' with '11877'
c Var 'aux310' order represents '1' with '1'
c Var 'aux310' order represents '0' with '-11877'
c Encoding variable: aux311 with domain: bool (representing constraint (((field_00003_00001=6) + (field_00003_00002=6) + (field_00003_00003=6) + (field_00003_00004=6) + (field_00003_00005=6) + (field_00003_00006=6) + (field_00003_00007=6) + (field_00003_00008=6) + (field_00003_00009=6))=tv=1))
c Var 'aux311' direct represents '0' with '-11878'
c Var 'aux311' direct represents '1' with '11878'
c Var 'aux311' order represents '1' with '1'
c Var 'aux311' order represents '0' with '-11878'
c Encoding variable: aux312 with domain: bool (representing constraint (((field_00003_00001=7) + (field_00003_00002=7) + (field_00003_00003=7) + (field_00003_00004=7) + (field_00003_00005=7) + (field_00003_00006=7) + (field_00003_00007=7) + (field_00003_00008=7) + (field_00003_00009=7))=tv=1))
c Var 'aux312' direct represents '0' with '-11879'
c Var 'aux312' direct represents '1' with '11879'
c Var 'aux312' order represents '1' with '1'
c Var 'aux312' order represents '0' with '-11879'
c Encoding variable: aux313 with domain: bool (representing constraint (((field_00003_00001=8) + (field_00003_00002=8) + (field_00003_00003=8) + (field_00003_00004=8) + (field_00003_00005=8) + (field_00003_00006=8) + (field_00003_00007=8) + (field_00003_00008=8) + (field_00003_00009=8))=tv=1))
c Var 'aux313' direct represents '0' with '-11880'
c Var 'aux313' direct represents '1' with '11880'
c Var 'aux313' order represents '1' with '1'
c Var 'aux313' order represents '0' with '-11880'
c Encoding variable: aux314 with domain: bool (representing constraint (((field_00003_00001=9) + (field_00003_00002=9) + (field_00003_00003=9) + (field_00003_00004=9) + (field_00003_00005=9) + (field_00003_00006=9) + (field_00003_00007=9) + (field_00003_00008=9) + (field_00003_00009=9))=tv=1))
c Var 'aux314' direct represents '0' with '-11881'
c Var 'aux314' direct represents '1' with '11881'
c Var 'aux314' order represents '1' with '1'
c Var 'aux314' order represents '0' with '-11881'
c Encoding variable: aux315 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1) + (field_00004_00005=1) + (field_00004_00006=1) + (field_00004_00007=1) + (field_00004_00008=1) + (field_00004_00009=1))=tv=1))
c Var 'aux315' direct represents '0' with '-11882'
c Var 'aux315' direct represents '1' with '11882'
c Var 'aux315' order represents '1' with '1'
c Var 'aux315' order represents '0' with '-11882'
c Encoding variable: aux316 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00004=2) + (field_00004_00005=2) + (field_00004_00006=2) + (field_00004_00007=2) + (field_00004_00008=2) + (field_00004_00009=2))=tv=1))
c Var 'aux316' direct represents '0' with '-11883'
c Var 'aux316' direct represents '1' with '11883'
c Var 'aux316' order represents '1' with '1'
c Var 'aux316' order represents '0' with '-11883'
c Encoding variable: aux317 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3) + (field_00004_00005=3) + (field_00004_00006=3) + (field_00004_00007=3) + (field_00004_00008=3) + (field_00004_00009=3))=tv=1))
c Var 'aux317' direct represents '0' with '-11884'
c Var 'aux317' direct represents '1' with '11884'
c Var 'aux317' order represents '1' with '1'
c Var 'aux317' order represents '0' with '-11884'
c Encoding variable: aux318 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4) + (field_00004_00004=4) + (field_00004_00005=4) + (field_00004_00006=4) + (field_00004_00007=4) + (field_00004_00008=4) + (field_00004_00009=4))=tv=1))
c Var 'aux318' direct represents '0' with '-11885'
c Var 'aux318' direct represents '1' with '11885'
c Var 'aux318' order represents '1' with '1'
c Var 'aux318' order represents '0' with '-11885'
c Encoding variable: aux319 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00004_00002=5) + (field_00004_00003=5) + (field_00004_00004=5) + (field_00004_00005=5) + (field_00004_00006=5) + (field_00004_00007=5) + (field_00004_00008=5) + (field_00004_00009=5))=tv=1))
c Var 'aux319' direct represents '0' with '-11886'
c Var 'aux319' direct represents '1' with '11886'
c Var 'aux319' order represents '1' with '1'
c Var 'aux319' order represents '0' with '-11886'
c Encoding variable: aux320 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00004_00002=6) + (field_00004_00003=6) + (field_00004_00004=6) + (field_00004_00005=6) + (field_00004_00006=6) + (field_00004_00007=6) + (field_00004_00008=6) + (field_00004_00009=6))=tv=1))
c Var 'aux320' direct represents '0' with '-11887'
c Var 'aux320' direct represents '1' with '11887'
c Var 'aux320' order represents '1' with '1'
c Var 'aux320' order represents '0' with '-11887'
c Encoding variable: aux321 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00004_00002=7) + (field_00004_00003=7) + (field_00004_00004=7) + (field_00004_00005=7) + (field_00004_00006=7) + (field_00004_00007=7) + (field_00004_00008=7) + (field_00004_00009=7))=tv=1))
c Var 'aux321' direct represents '0' with '-11888'
c Var 'aux321' direct represents '1' with '11888'
c Var 'aux321' order represents '1' with '1'
c Var 'aux321' order represents '0' with '-11888'
c Encoding variable: aux322 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00004_00002=8) + (field_00004_00003=8) + (field_00004_00004=8) + (field_00004_00005=8) + (field_00004_00006=8) + (field_00004_00007=8) + (field_00004_00008=8) + (field_00004_00009=8))=tv=1))
c Var 'aux322' direct represents '0' with '-11889'
c Var 'aux322' direct represents '1' with '11889'
c Var 'aux322' order represents '1' with '1'
c Var 'aux322' order represents '0' with '-11889'
c Encoding variable: aux323 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00004_00002=9) + (field_00004_00003=9) + (field_00004_00004=9) + (field_00004_00005=9) + (field_00004_00006=9) + (field_00004_00007=9) + (field_00004_00008=9) + (field_00004_00009=9))=tv=1))
c Var 'aux323' direct represents '0' with '-11890'
c Var 'aux323' direct represents '1' with '11890'
c Var 'aux323' order represents '1' with '1'
c Var 'aux323' order represents '0' with '-11890'
c Encoding variable: aux324 with domain: bool (representing constraint (((field_00005_00001=1) + (field_00005_00002=1) + (field_00005_00003=1) + (field_00005_00004=1) + (field_00005_00005=1) + (field_00005_00006=1) + (field_00005_00007=1) + (field_00005_00008=1) + (field_00005_00009=1))=tv=1))
c Var 'aux324' direct represents '0' with '-11891'
c Var 'aux324' direct represents '1' with '11891'
c Var 'aux324' order represents '1' with '1'
c Var 'aux324' order represents '0' with '-11891'
c Encoding variable: aux325 with domain: bool (representing constraint (((field_00005_00001=2) + (field_00005_00002=2) + (field_00005_00003=2) + (field_00005_00004=2) + (field_00005_00005=2) + (field_00005_00006=2) + (field_00005_00007=2) + (field_00005_00008=2) + (field_00005_00009=2))=tv=1))
c Var 'aux325' direct represents '0' with '-11892'
c Var 'aux325' direct represents '1' with '11892'
c Var 'aux325' order represents '1' with '1'
c Var 'aux325' order represents '0' with '-11892'
c Encoding variable: aux326 with domain: bool (representing constraint (((field_00005_00001=3) + (field_00005_00002=3) + (field_00005_00003=3) + (field_00005_00004=3) + (field_00005_00005=3) + (field_00005_00006=3) + (field_00005_00007=3) + (field_00005_00008=3) + (field_00005_00009=3))=tv=1))
c Var 'aux326' direct represents '0' with '-11893'
c Var 'aux326' direct represents '1' with '11893'
c Var 'aux326' order represents '1' with '1'
c Var 'aux326' order represents '0' with '-11893'
c Encoding variable: aux327 with domain: bool (representing constraint (((field_00005_00001=4) + (field_00005_00002=4) + (field_00005_00003=4) + (field_00005_00004=4) + (field_00005_00005=4) + (field_00005_00006=4) + (field_00005_00007=4) + (field_00005_00008=4) + (field_00005_00009=4))=tv=1))
c Var 'aux327' direct represents '0' with '-11894'
c Var 'aux327' direct represents '1' with '11894'
c Var 'aux327' order represents '1' with '1'
c Var 'aux327' order represents '0' with '-11894'
c Encoding variable: aux328 with domain: bool (representing constraint (((field_00005_00001=5) + (field_00005_00002=5) + (field_00005_00003=5) + (field_00005_00004=5) + (field_00005_00005=5) + (field_00005_00006=5) + (field_00005_00007=5) + (field_00005_00008=5) + (field_00005_00009=5))=tv=1))
c Var 'aux328' direct represents '0' with '-11895'
c Var 'aux328' direct represents '1' with '11895'
c Var 'aux328' order represents '1' with '1'
c Var 'aux328' order represents '0' with '-11895'
c Encoding variable: aux329 with domain: bool (representing constraint (((field_00005_00001=6) + (field_00005_00002=6) + (field_00005_00003=6) + (field_00005_00004=6) + (field_00005_00005=6) + (field_00005_00006=6) + (field_00005_00007=6) + (field_00005_00008=6) + (field_00005_00009=6))=tv=1))
c Var 'aux329' direct represents '0' with '-11896'
c Var 'aux329' direct represents '1' with '11896'
c Var 'aux329' order represents '1' with '1'
c Var 'aux329' order represents '0' with '-11896'
c Encoding variable: aux330 with domain: bool (representing constraint (((field_00005_00001=7) + (field_00005_00002=7) + (field_00005_00003=7) + (field_00005_00004=7) + (field_00005_00005=7) + (field_00005_00006=7) + (field_00005_00007=7) + (field_00005_00008=7) + (field_00005_00009=7))=tv=1))
c Var 'aux330' direct represents '0' with '-11897'
c Var 'aux330' direct represents '1' with '11897'
c Var 'aux330' order represents '1' with '1'
c Var 'aux330' order represents '0' with '-11897'
c Encoding variable: aux331 with domain: bool (representing constraint (((field_00005_00001=8) + (field_00005_00002=8) + (field_00005_00003=8) + (field_00005_00004=8) + (field_00005_00005=8) + (field_00005_00006=8) + (field_00005_00007=8) + (field_00005_00008=8) + (field_00005_00009=8))=tv=1))
c Var 'aux331' direct represents '0' with '-11898'
c Var 'aux331' direct represents '1' with '11898'
c Var 'aux331' order represents '1' with '1'
c Var 'aux331' order represents '0' with '-11898'
c Encoding variable: aux332 with domain: bool (representing constraint (((field_00005_00001=9) + (field_00005_00002=9) + (field_00005_00003=9) + (field_00005_00004=9) + (field_00005_00005=9) + (field_00005_00006=9) + (field_00005_00007=9) + (field_00005_00008=9) + (field_00005_00009=9))=tv=1))
c Var 'aux332' direct represents '0' with '-11899'
c Var 'aux332' direct represents '1' with '11899'
c Var 'aux332' order represents '1' with '1'
c Var 'aux332' order represents '0' with '-11899'
c Encoding variable: aux333 with domain: bool (representing constraint (((field_00006_00001=1) + (field_00006_00002=1) + (field_00006_00003=1) + (field_00006_00004=1) + (field_00006_00005=1) + (field_00006_00006=1) + (field_00006_00007=1) + (field_00006_00008=1) + (field_00006_00009=1))=tv=1))
c Var 'aux333' direct represents '0' with '-11900'
c Var 'aux333' direct represents '1' with '11900'
c Var 'aux333' order represents '1' with '1'
c Var 'aux333' order represents '0' with '-11900'
c Encoding variable: aux334 with domain: bool (representing constraint (((field_00006_00001=2) + (field_00006_00002=2) + (field_00006_00003=2) + (field_00006_00004=2) + (field_00006_00005=2) + (field_00006_00006=2) + (field_00006_00007=2) + (field_00006_00008=2) + (field_00006_00009=2))=tv=1))
c Var 'aux334' direct represents '0' with '-11901'
c Var 'aux334' direct represents '1' with '11901'
c Var 'aux334' order represents '1' with '1'
c Var 'aux334' order represents '0' with '-11901'
c Encoding variable: aux335 with domain: bool (representing constraint (((field_00006_00001=3) + (field_00006_00002=3) + (field_00006_00003=3) + (field_00006_00004=3) + (field_00006_00005=3) + (field_00006_00006=3) + (field_00006_00007=3) + (field_00006_00008=3) + (field_00006_00009=3))=tv=1))
c Var 'aux335' direct represents '0' with '-11902'
c Var 'aux335' direct represents '1' with '11902'
c Var 'aux335' order represents '1' with '1'
c Var 'aux335' order represents '0' with '-11902'
c Encoding variable: aux336 with domain: bool (representing constraint (((field_00006_00001=4) + (field_00006_00002=4) + (field_00006_00003=4) + (field_00006_00004=4) + (field_00006_00005=4) + (field_00006_00006=4) + (field_00006_00007=4) + (field_00006_00008=4) + (field_00006_00009=4))=tv=1))
c Var 'aux336' direct represents '0' with '-11903'
c Var 'aux336' direct represents '1' with '11903'
c Var 'aux336' order represents '1' with '1'
c Var 'aux336' order represents '0' with '-11903'
c Encoding variable: aux337 with domain: bool (representing constraint (((field_00006_00001=5) + (field_00006_00002=5) + (field_00006_00003=5) + (field_00006_00004=5) + (field_00006_00005=5) + (field_00006_00006=5) + (field_00006_00007=5) + (field_00006_00008=5) + (field_00006_00009=5))=tv=1))
c Var 'aux337' direct represents '0' with '-11904'
c Var 'aux337' direct represents '1' with '11904'
c Var 'aux337' order represents '1' with '1'
c Var 'aux337' order represents '0' with '-11904'
c Encoding variable: aux338 with domain: bool (representing constraint (((field_00006_00001=6) + (field_00006_00002=6) + (field_00006_00003=6) + (field_00006_00004=6) + (field_00006_00005=6) + (field_00006_00006=6) + (field_00006_00007=6) + (field_00006_00008=6) + (field_00006_00009=6))=tv=1))
c Var 'aux338' direct represents '0' with '-11905'
c Var 'aux338' direct represents '1' with '11905'
c Var 'aux338' order represents '1' with '1'
c Var 'aux338' order represents '0' with '-11905'
c Encoding variable: aux339 with domain: bool (representing constraint (((field_00006_00001=7) + (field_00006_00002=7) + (field_00006_00003=7) + (field_00006_00004=7) + (field_00006_00005=7) + (field_00006_00006=7) + (field_00006_00007=7) + (field_00006_00008=7) + (field_00006_00009=7))=tv=1))
c Var 'aux339' direct represents '0' with '-11906'
c Var 'aux339' direct represents '1' with '11906'
c Var 'aux339' order represents '1' with '1'
c Var 'aux339' order represents '0' with '-11906'
c Encoding variable: aux340 with domain: bool (representing constraint (((field_00006_00001=8) + (field_00006_00002=8) + (field_00006_00003=8) + (field_00006_00004=8) + (field_00006_00005=8) + (field_00006_00006=8) + (field_00006_00007=8) + (field_00006_00008=8) + (field_00006_00009=8))=tv=1))
c Var 'aux340' direct represents '0' with '-11907'
c Var 'aux340' direct represents '1' with '11907'
c Var 'aux340' order represents '1' with '1'
c Var 'aux340' order represents '0' with '-11907'
c Encoding variable: aux341 with domain: bool (representing constraint (((field_00006_00001=9) + (field_00006_00002=9) + (field_00006_00003=9) + (field_00006_00004=9) + (field_00006_00005=9) + (field_00006_00006=9) + (field_00006_00007=9) + (field_00006_00008=9) + (field_00006_00009=9))=tv=1))
c Var 'aux341' direct represents '0' with '-11908'
c Var 'aux341' direct represents '1' with '11908'
c Var 'aux341' order represents '1' with '1'
c Var 'aux341' order represents '0' with '-11908'
c Encoding variable: aux342 with domain: bool (representing constraint (((field_00007_00001=1) + (field_00007_00002=1) + (field_00007_00003=1) + (field_00007_00004=1) + (field_00007_00005=1) + (field_00007_00006=1) + (field_00007_00007=1) + (field_00007_00008=1) + (field_00007_00009=1))=tv=1))
c Var 'aux342' direct represents '0' with '-11909'
c Var 'aux342' direct represents '1' with '11909'
c Var 'aux342' order represents '1' with '1'
c Var 'aux342' order represents '0' with '-11909'
c Encoding variable: aux343 with domain: bool (representing constraint (((field_00007_00001=2) + (field_00007_00002=2) + (field_00007_00003=2) + (field_00007_00004=2) + (field_00007_00005=2) + (field_00007_00006=2) + (field_00007_00007=2) + (field_00007_00008=2) + (field_00007_00009=2))=tv=1))
c Var 'aux343' direct represents '0' with '-11910'
c Var 'aux343' direct represents '1' with '11910'
c Var 'aux343' order represents '1' with '1'
c Var 'aux343' order represents '0' with '-11910'
c Encoding variable: aux344 with domain: bool (representing constraint (((field_00007_00001=3) + (field_00007_00002=3) + (field_00007_00003=3) + (field_00007_00004=3) + (field_00007_00005=3) + (field_00007_00006=3) + (field_00007_00007=3) + (field_00007_00008=3) + (field_00007_00009=3))=tv=1))
c Var 'aux344' direct represents '0' with '-11911'
c Var 'aux344' direct represents '1' with '11911'
c Var 'aux344' order represents '1' with '1'
c Var 'aux344' order represents '0' with '-11911'
c Encoding variable: aux345 with domain: bool (representing constraint (((field_00007_00001=4) + (field_00007_00002=4) + (field_00007_00003=4) + (field_00007_00004=4) + (field_00007_00005=4) + (field_00007_00006=4) + (field_00007_00007=4) + (field_00007_00008=4) + (field_00007_00009=4))=tv=1))
c Var 'aux345' direct represents '0' with '-11912'
c Var 'aux345' direct represents '1' with '11912'
c Var 'aux345' order represents '1' with '1'
c Var 'aux345' order represents '0' with '-11912'
c Encoding variable: aux346 with domain: bool (representing constraint (((field_00007_00001=5) + (field_00007_00002=5) + (field_00007_00003=5) + (field_00007_00004=5) + (field_00007_00005=5) + (field_00007_00006=5) + (field_00007_00007=5) + (field_00007_00008=5) + (field_00007_00009=5))=tv=1))
c Var 'aux346' direct represents '0' with '-11913'
c Var 'aux346' direct represents '1' with '11913'
c Var 'aux346' order represents '1' with '1'
c Var 'aux346' order represents '0' with '-11913'
c Encoding variable: aux347 with domain: bool (representing constraint (((field_00007_00001=6) + (field_00007_00002=6) + (field_00007_00003=6) + (field_00007_00004=6) + (field_00007_00005=6) + (field_00007_00006=6) + (field_00007_00007=6) + (field_00007_00008=6) + (field_00007_00009=6))=tv=1))
c Var 'aux347' direct represents '0' with '-11914'
c Var 'aux347' direct represents '1' with '11914'
c Var 'aux347' order represents '1' with '1'
c Var 'aux347' order represents '0' with '-11914'
c Encoding variable: aux348 with domain: bool (representing constraint (((field_00007_00001=7) + (field_00007_00002=7) + (field_00007_00003=7) + (field_00007_00004=7) + (field_00007_00005=7) + (field_00007_00006=7) + (field_00007_00007=7) + (field_00007_00008=7) + (field_00007_00009=7))=tv=1))
c Var 'aux348' direct represents '0' with '-11915'
c Var 'aux348' direct represents '1' with '11915'
c Var 'aux348' order represents '1' with '1'
c Var 'aux348' order represents '0' with '-11915'
c Encoding variable: aux349 with domain: bool (representing constraint (((field_00007_00001=8) + (field_00007_00002=8) + (field_00007_00003=8) + (field_00007_00004=8) + (field_00007_00005=8) + (field_00007_00006=8) + (field_00007_00007=8) + (field_00007_00008=8) + (field_00007_00009=8))=tv=1))
c Var 'aux349' direct represents '0' with '-11916'
c Var 'aux349' direct represents '1' with '11916'
c Var 'aux349' order represents '1' with '1'
c Var 'aux349' order represents '0' with '-11916'
c Encoding variable: aux350 with domain: bool (representing constraint (((field_00007_00001=9) + (field_00007_00002=9) + (field_00007_00003=9) + (field_00007_00004=9) + (field_00007_00005=9) + (field_00007_00006=9) + (field_00007_00007=9) + (field_00007_00008=9) + (field_00007_00009=9))=tv=1))
c Var 'aux350' direct represents '0' with '-11917'
c Var 'aux350' direct represents '1' with '11917'
c Var 'aux350' order represents '1' with '1'
c Var 'aux350' order represents '0' with '-11917'
c Encoding variable: aux351 with domain: bool (representing constraint (((field_00008_00001=1) + (field_00008_00002=1) + (field_00008_00003=1) + (field_00008_00004=1) + (field_00008_00005=1) + (field_00008_00006=1) + (field_00008_00007=1) + (field_00008_00008=1) + (field_00008_00009=1))=tv=1))
c Var 'aux351' direct represents '0' with '-11918'
c Var 'aux351' direct represents '1' with '11918'
c Var 'aux351' order represents '1' with '1'
c Var 'aux351' order represents '0' with '-11918'
c Encoding variable: aux352 with domain: bool (representing constraint (((field_00008_00001=2) + (field_00008_00002=2) + (field_00008_00003=2) + (field_00008_00004=2) + (field_00008_00005=2) + (field_00008_00006=2) + (field_00008_00007=2) + (field_00008_00008=2) + (field_00008_00009=2))=tv=1))
c Var 'aux352' direct represents '0' with '-11919'
c Var 'aux352' direct represents '1' with '11919'
c Var 'aux352' order represents '1' with '1'
c Var 'aux352' order represents '0' with '-11919'
c Encoding variable: aux353 with domain: bool (representing constraint (((field_00008_00001=3) + (field_00008_00002=3) + (field_00008_00003=3) + (field_00008_00004=3) + (field_00008_00005=3) + (field_00008_00006=3) + (field_00008_00007=3) + (field_00008_00008=3) + (field_00008_00009=3))=tv=1))
c Var 'aux353' direct represents '0' with '-11920'
c Var 'aux353' direct represents '1' with '11920'
c Var 'aux353' order represents '1' with '1'
c Var 'aux353' order represents '0' with '-11920'
c Encoding variable: aux354 with domain: bool (representing constraint (((field_00008_00001=4) + (field_00008_00002=4) + (field_00008_00003=4) + (field_00008_00004=4) + (field_00008_00005=4) + (field_00008_00006=4) + (field_00008_00007=4) + (field_00008_00008=4) + (field_00008_00009=4))=tv=1))
c Var 'aux354' direct represents '0' with '-11921'
c Var 'aux354' direct represents '1' with '11921'
c Var 'aux354' order represents '1' with '1'
c Var 'aux354' order represents '0' with '-11921'
c Encoding variable: aux355 with domain: bool (representing constraint (((field_00008_00001=5) + (field_00008_00002=5) + (field_00008_00003=5) + (field_00008_00004=5) + (field_00008_00005=5) + (field_00008_00006=5) + (field_00008_00007=5) + (field_00008_00008=5) + (field_00008_00009=5))=tv=1))
c Var 'aux355' direct represents '0' with '-11922'
c Var 'aux355' direct represents '1' with '11922'
c Var 'aux355' order represents '1' with '1'
c Var 'aux355' order represents '0' with '-11922'
c Encoding variable: aux356 with domain: bool (representing constraint (((field_00008_00001=6) + (field_00008_00002=6) + (field_00008_00003=6) + (field_00008_00004=6) + (field_00008_00005=6) + (field_00008_00006=6) + (field_00008_00007=6) + (field_00008_00008=6) + (field_00008_00009=6))=tv=1))
c Var 'aux356' direct represents '0' with '-11923'
c Var 'aux356' direct represents '1' with '11923'
c Var 'aux356' order represents '1' with '1'
c Var 'aux356' order represents '0' with '-11923'
c Encoding variable: aux357 with domain: bool (representing constraint (((field_00008_00001=7) + (field_00008_00002=7) + (field_00008_00003=7) + (field_00008_00004=7) + (field_00008_00005=7) + (field_00008_00006=7) + (field_00008_00007=7) + (field_00008_00008=7) + (field_00008_00009=7))=tv=1))
c Var 'aux357' direct represents '0' with '-11924'
c Var 'aux357' direct represents '1' with '11924'
c Var 'aux357' order represents '1' with '1'
c Var 'aux357' order represents '0' with '-11924'
c Encoding variable: aux358 with domain: bool (representing constraint (((field_00008_00001=8) + (field_00008_00002=8) + (field_00008_00003=8) + (field_00008_00004=8) + (field_00008_00005=8) + (field_00008_00006=8) + (field_00008_00007=8) + (field_00008_00008=8) + (field_00008_00009=8))=tv=1))
c Var 'aux358' direct represents '0' with '-11925'
c Var 'aux358' direct represents '1' with '11925'
c Var 'aux358' order represents '1' with '1'
c Var 'aux358' order represents '0' with '-11925'
c Encoding variable: aux359 with domain: bool (representing constraint (((field_00008_00001=9) + (field_00008_00002=9) + (field_00008_00003=9) + (field_00008_00004=9) + (field_00008_00005=9) + (field_00008_00006=9) + (field_00008_00007=9) + (field_00008_00008=9) + (field_00008_00009=9))=tv=1))
c Var 'aux359' direct represents '0' with '-11926'
c Var 'aux359' direct represents '1' with '11926'
c Var 'aux359' order represents '1' with '1'
c Var 'aux359' order represents '0' with '-11926'
c Encoding variable: aux360 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00009_00002=1) + (field_00009_00003=1) + (field_00009_00004=1) + (field_00009_00005=1) + (field_00009_00006=1) + (field_00009_00007=1) + (field_00009_00008=1) + (field_00009_00009=1))=tv=1))
c Var 'aux360' direct represents '0' with '-11927'
c Var 'aux360' direct represents '1' with '11927'
c Var 'aux360' order represents '1' with '1'
c Var 'aux360' order represents '0' with '-11927'
c Encoding variable: aux361 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00009_00002=2) + (field_00009_00003=2) + (field_00009_00004=2) + (field_00009_00005=2) + (field_00009_00006=2) + (field_00009_00007=2) + (field_00009_00008=2) + (field_00009_00009=2))=tv=1))
c Var 'aux361' direct represents '0' with '-11928'
c Var 'aux361' direct represents '1' with '11928'
c Var 'aux361' order represents '1' with '1'
c Var 'aux361' order represents '0' with '-11928'
c Encoding variable: aux362 with domain: bool (representing constraint (((field_00009_00001=3) + (field_00009_00002=3) + (field_00009_00003=3) + (field_00009_00004=3) + (field_00009_00005=3) + (field_00009_00006=3) + (field_00009_00007=3) + (field_00009_00008=3) + (field_00009_00009=3))=tv=1))
c Var 'aux362' direct represents '0' with '-11929'
c Var 'aux362' direct represents '1' with '11929'
c Var 'aux362' order represents '1' with '1'
c Var 'aux362' order represents '0' with '-11929'
c Encoding variable: aux363 with domain: bool (representing constraint (((field_00009_00001=4) + (field_00009_00002=4) + (field_00009_00003=4) + (field_00009_00004=4) + (field_00009_00005=4) + (field_00009_00006=4) + (field_00009_00007=4) + (field_00009_00008=4) + (field_00009_00009=4))=tv=1))
c Var 'aux363' direct represents '0' with '-11930'
c Var 'aux363' direct represents '1' with '11930'
c Var 'aux363' order represents '1' with '1'
c Var 'aux363' order represents '0' with '-11930'
c Encoding variable: aux364 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00009_00002=5) + (field_00009_00003=5) + (field_00009_00004=5) + (field_00009_00005=5) + (field_00009_00006=5) + (field_00009_00007=5) + (field_00009_00008=5) + (field_00009_00009=5))=tv=1))
c Var 'aux364' direct represents '0' with '-11931'
c Var 'aux364' direct represents '1' with '11931'
c Var 'aux364' order represents '1' with '1'
c Var 'aux364' order represents '0' with '-11931'
c Encoding variable: aux365 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00009_00002=6) + (field_00009_00003=6) + (field_00009_00004=6) + (field_00009_00005=6) + (field_00009_00006=6) + (field_00009_00007=6) + (field_00009_00008=6) + (field_00009_00009=6))=tv=1))
c Var 'aux365' direct represents '0' with '-11932'
c Var 'aux365' direct represents '1' with '11932'
c Var 'aux365' order represents '1' with '1'
c Var 'aux365' order represents '0' with '-11932'
c Encoding variable: aux366 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00009_00002=7) + (field_00009_00003=7) + (field_00009_00004=7) + (field_00009_00005=7) + (field_00009_00006=7) + (field_00009_00007=7) + (field_00009_00008=7) + (field_00009_00009=7))=tv=1))
c Var 'aux366' direct represents '0' with '-11933'
c Var 'aux366' direct represents '1' with '11933'
c Var 'aux366' order represents '1' with '1'
c Var 'aux366' order represents '0' with '-11933'
c Encoding variable: aux367 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00009_00002=8) + (field_00009_00003=8) + (field_00009_00004=8) + (field_00009_00005=8) + (field_00009_00006=8) + (field_00009_00007=8) + (field_00009_00008=8) + (field_00009_00009=8))=tv=1))
c Var 'aux367' direct represents '0' with '-11934'
c Var 'aux367' direct represents '1' with '11934'
c Var 'aux367' order represents '1' with '1'
c Var 'aux367' order represents '0' with '-11934'
c Encoding variable: aux368 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00009_00002=9) + (field_00009_00003=9) + (field_00009_00004=9) + (field_00009_00005=9) + (field_00009_00006=9) + (field_00009_00007=9) + (field_00009_00008=9) + (field_00009_00009=9))=tv=1))
c Var 'aux368' direct represents '0' with '-11935'
c Var 'aux368' direct represents '1' with '11935'
c Var 'aux368' order represents '1' with '1'
c Var 'aux368' order represents '0' with '-11935'
c Encoding variable: aux369 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00009_00001=1) + (field_00002_00001=1) + (field_00007_00001=1) + (field_00005_00001=1) + (field_00003_00001=1) + (field_00008_00001=1) + (field_00001_00001=1) + (field_00006_00001=1))=tv=1))
c Var 'aux369' direct represents '0' with '-11936'
c Var 'aux369' direct represents '1' with '11936'
c Var 'aux369' order represents '1' with '1'
c Var 'aux369' order represents '0' with '-11936'
c Encoding variable: aux370 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00009_00001=2) + (field_00002_00001=2) + (field_00007_00001=2) + (field_00005_00001=2) + (field_00003_00001=2) + (field_00008_00001=2) + (field_00001_00001=2) + (field_00006_00001=2))=tv=1))
c Var 'aux370' direct represents '0' with '-11937'
c Var 'aux370' direct represents '1' with '11937'
c Var 'aux370' order represents '1' with '1'
c Var 'aux370' order represents '0' with '-11937'
c Encoding variable: aux371 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00009_00001=3) + (field_00002_00001=3) + (field_00007_00001=3) + (field_00005_00001=3) + (field_00003_00001=3) + (field_00008_00001=3) + (field_00001_00001=3) + (field_00006_00001=3))=tv=1))
c Var 'aux371' direct represents '0' with '-11938'
c Var 'aux371' direct represents '1' with '11938'
c Var 'aux371' order represents '1' with '1'
c Var 'aux371' order represents '0' with '-11938'
c Encoding variable: aux372 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00009_00001=4) + (field_00002_00001=4) + (field_00007_00001=4) + (field_00005_00001=4) + (field_00003_00001=4) + (field_00008_00001=4) + (field_00001_00001=4) + (field_00006_00001=4))=tv=1))
c Var 'aux372' direct represents '0' with '-11939'
c Var 'aux372' direct represents '1' with '11939'
c Var 'aux372' order represents '1' with '1'
c Var 'aux372' order represents '0' with '-11939'
c Encoding variable: aux373 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00009_00001=5) + (field_00002_00001=5) + (field_00007_00001=5) + (field_00005_00001=5) + (field_00003_00001=5) + (field_00008_00001=5) + (field_00001_00001=5) + (field_00006_00001=5))=tv=1))
c Var 'aux373' direct represents '0' with '-11940'
c Var 'aux373' direct represents '1' with '11940'
c Var 'aux373' order represents '1' with '1'
c Var 'aux373' order represents '0' with '-11940'
c Encoding variable: aux374 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00009_00001=6) + (field_00002_00001=6) + (field_00007_00001=6) + (field_00005_00001=6) + (field_00003_00001=6) + (field_00008_00001=6) + (field_00001_00001=6) + (field_00006_00001=6))=tv=1))
c Var 'aux374' direct represents '0' with '-11941'
c Var 'aux374' direct represents '1' with '11941'
c Var 'aux374' order represents '1' with '1'
c Var 'aux374' order represents '0' with '-11941'
c Encoding variable: aux375 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00009_00001=7) + (field_00002_00001=7) + (field_00007_00001=7) + (field_00005_00001=7) + (field_00003_00001=7) + (field_00008_00001=7) + (field_00001_00001=7) + (field_00006_00001=7))=tv=1))
c Var 'aux375' direct represents '0' with '-11942'
c Var 'aux375' direct represents '1' with '11942'
c Var 'aux375' order represents '1' with '1'
c Var 'aux375' order represents '0' with '-11942'
c Encoding variable: aux376 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00009_00001=8) + (field_00002_00001=8) + (field_00007_00001=8) + (field_00005_00001=8) + (field_00003_00001=8) + (field_00008_00001=8) + (field_00001_00001=8) + (field_00006_00001=8))=tv=1))
c Var 'aux376' direct represents '0' with '-11943'
c Var 'aux376' direct represents '1' with '11943'
c Var 'aux376' order represents '1' with '1'
c Var 'aux376' order represents '0' with '-11943'
c Encoding variable: aux377 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00009_00001=9) + (field_00002_00001=9) + (field_00007_00001=9) + (field_00005_00001=9) + (field_00003_00001=9) + (field_00008_00001=9) + (field_00001_00001=9) + (field_00006_00001=9))=tv=1))
c Var 'aux377' direct represents '0' with '-11944'
c Var 'aux377' direct represents '1' with '11944'
c Var 'aux377' order represents '1' with '1'
c Var 'aux377' order represents '0' with '-11944'
c Encoding variable: aux378 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00009_00002=1) + (field_00002_00002=1) + (field_00007_00002=1) + (field_00005_00002=1) + (field_00003_00002=1) + (field_00008_00002=1) + (field_00001_00002=1) + (field_00006_00002=1))=tv=1))
c Var 'aux378' direct represents '0' with '-11945'
c Var 'aux378' direct represents '1' with '11945'
c Var 'aux378' order represents '1' with '1'
c Var 'aux378' order represents '0' with '-11945'
c Encoding variable: aux379 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00009_00002=2) + (field_00002_00002=2) + (field_00007_00002=2) + (field_00005_00002=2) + (field_00003_00002=2) + (field_00008_00002=2) + (field_00001_00002=2) + (field_00006_00002=2))=tv=1))
c Var 'aux379' direct represents '0' with '-11946'
c Var 'aux379' direct represents '1' with '11946'
c Var 'aux379' order represents '1' with '1'
c Var 'aux379' order represents '0' with '-11946'
c Encoding variable: aux380 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00009_00002=3) + (field_00002_00002=3) + (field_00007_00002=3) + (field_00005_00002=3) + (field_00003_00002=3) + (field_00008_00002=3) + (field_00001_00002=3) + (field_00006_00002=3))=tv=1))
c Var 'aux380' direct represents '0' with '-11947'
c Var 'aux380' direct represents '1' with '11947'
c Var 'aux380' order represents '1' with '1'
c Var 'aux380' order represents '0' with '-11947'
c Encoding variable: aux381 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00009_00002=4) + (field_00002_00002=4) + (field_00007_00002=4) + (field_00005_00002=4) + (field_00003_00002=4) + (field_00008_00002=4) + (field_00001_00002=4) + (field_00006_00002=4))=tv=1))
c Var 'aux381' direct represents '0' with '-11948'
c Var 'aux381' direct represents '1' with '11948'
c Var 'aux381' order represents '1' with '1'
c Var 'aux381' order represents '0' with '-11948'
c Encoding variable: aux382 with domain: bool (representing constraint (((field_00004_00002=5) + (field_00009_00002=5) + (field_00002_00002=5) + (field_00007_00002=5) + (field_00005_00002=5) + (field_00003_00002=5) + (field_00008_00002=5) + (field_00001_00002=5) + (field_00006_00002=5))=tv=1))
c Var 'aux382' direct represents '0' with '-11949'
c Var 'aux382' direct represents '1' with '11949'
c Var 'aux382' order represents '1' with '1'
c Var 'aux382' order represents '0' with '-11949'
c Encoding variable: aux383 with domain: bool (representing constraint (((field_00004_00002=6) + (field_00009_00002=6) + (field_00002_00002=6) + (field_00007_00002=6) + (field_00005_00002=6) + (field_00003_00002=6) + (field_00008_00002=6) + (field_00001_00002=6) + (field_00006_00002=6))=tv=1))
c Var 'aux383' direct represents '0' with '-11950'
c Var 'aux383' direct represents '1' with '11950'
c Var 'aux383' order represents '1' with '1'
c Var 'aux383' order represents '0' with '-11950'
c Encoding variable: aux384 with domain: bool (representing constraint (((field_00004_00002=7) + (field_00009_00002=7) + (field_00002_00002=7) + (field_00007_00002=7) + (field_00005_00002=7) + (field_00003_00002=7) + (field_00008_00002=7) + (field_00001_00002=7) + (field_00006_00002=7))=tv=1))
c Var 'aux384' direct represents '0' with '-11951'
c Var 'aux384' direct represents '1' with '11951'
c Var 'aux384' order represents '1' with '1'
c Var 'aux384' order represents '0' with '-11951'
c Encoding variable: aux385 with domain: bool (representing constraint (((field_00004_00002=8) + (field_00009_00002=8) + (field_00002_00002=8) + (field_00007_00002=8) + (field_00005_00002=8) + (field_00003_00002=8) + (field_00008_00002=8) + (field_00001_00002=8) + (field_00006_00002=8))=tv=1))
c Var 'aux385' direct represents '0' with '-11952'
c Var 'aux385' direct represents '1' with '11952'
c Var 'aux385' order represents '1' with '1'
c Var 'aux385' order represents '0' with '-11952'
c Encoding variable: aux386 with domain: bool (representing constraint (((field_00004_00002=9) + (field_00009_00002=9) + (field_00002_00002=9) + (field_00007_00002=9) + (field_00005_00002=9) + (field_00003_00002=9) + (field_00008_00002=9) + (field_00001_00002=9) + (field_00006_00002=9))=tv=1))
c Var 'aux386' direct represents '0' with '-11953'
c Var 'aux386' direct represents '1' with '11953'
c Var 'aux386' order represents '1' with '1'
c Var 'aux386' order represents '0' with '-11953'
c Encoding variable: aux387 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00009_00003=1) + (field_00002_00003=1) + (field_00007_00003=1) + (field_00005_00003=1) + (field_00003_00003=1) + (field_00008_00003=1) + (field_00001_00003=1) + (field_00006_00003=1))=tv=1))
c Var 'aux387' direct represents '0' with '-11954'
c Var 'aux387' direct represents '1' with '11954'
c Var 'aux387' order represents '1' with '1'
c Var 'aux387' order represents '0' with '-11954'
c Encoding variable: aux388 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00009_00003=2) + (field_00002_00003=2) + (field_00007_00003=2) + (field_00005_00003=2) + (field_00003_00003=2) + (field_00008_00003=2) + (field_00001_00003=2) + (field_00006_00003=2))=tv=1))
c Var 'aux388' direct represents '0' with '-11955'
c Var 'aux388' direct represents '1' with '11955'
c Var 'aux388' order represents '1' with '1'
c Var 'aux388' order represents '0' with '-11955'
c Encoding variable: aux389 with domain: bool (representing constraint (((field_00004_00003=3) + (field_00009_00003=3) + (field_00002_00003=3) + (field_00007_00003=3) + (field_00005_00003=3) + (field_00003_00003=3) + (field_00008_00003=3) + (field_00001_00003=3) + (field_00006_00003=3))=tv=1))
c Var 'aux389' direct represents '0' with '-11956'
c Var 'aux389' direct represents '1' with '11956'
c Var 'aux389' order represents '1' with '1'
c Var 'aux389' order represents '0' with '-11956'
c Encoding variable: aux390 with domain: bool (representing constraint (((field_00004_00003=4) + (field_00009_00003=4) + (field_00002_00003=4) + (field_00007_00003=4) + (field_00005_00003=4) + (field_00003_00003=4) + (field_00008_00003=4) + (field_00001_00003=4) + (field_00006_00003=4))=tv=1))
c Var 'aux390' direct represents '0' with '-11957'
c Var 'aux390' direct represents '1' with '11957'
c Var 'aux390' order represents '1' with '1'
c Var 'aux390' order represents '0' with '-11957'
c Encoding variable: aux391 with domain: bool (representing constraint (((field_00004_00003=5) + (field_00009_00003=5) + (field_00002_00003=5) + (field_00007_00003=5) + (field_00005_00003=5) + (field_00003_00003=5) + (field_00008_00003=5) + (field_00001_00003=5) + (field_00006_00003=5))=tv=1))
c Var 'aux391' direct represents '0' with '-11958'
c Var 'aux391' direct represents '1' with '11958'
c Var 'aux391' order represents '1' with '1'
c Var 'aux391' order represents '0' with '-11958'
c Encoding variable: aux392 with domain: bool (representing constraint (((field_00004_00003=6) + (field_00009_00003=6) + (field_00002_00003=6) + (field_00007_00003=6) + (field_00005_00003=6) + (field_00003_00003=6) + (field_00008_00003=6) + (field_00001_00003=6) + (field_00006_00003=6))=tv=1))
c Var 'aux392' direct represents '0' with '-11959'
c Var 'aux392' direct represents '1' with '11959'
c Var 'aux392' order represents '1' with '1'
c Var 'aux392' order represents '0' with '-11959'
c Encoding variable: aux393 with domain: bool (representing constraint (((field_00004_00003=7) + (field_00009_00003=7) + (field_00002_00003=7) + (field_00007_00003=7) + (field_00005_00003=7) + (field_00003_00003=7) + (field_00008_00003=7) + (field_00001_00003=7) + (field_00006_00003=7))=tv=1))
c Var 'aux393' direct represents '0' with '-11960'
c Var 'aux393' direct represents '1' with '11960'
c Var 'aux393' order represents '1' with '1'
c Var 'aux393' order represents '0' with '-11960'
c Encoding variable: aux394 with domain: bool (representing constraint (((field_00004_00003=8) + (field_00009_00003=8) + (field_00002_00003=8) + (field_00007_00003=8) + (field_00005_00003=8) + (field_00003_00003=8) + (field_00008_00003=8) + (field_00001_00003=8) + (field_00006_00003=8))=tv=1))
c Var 'aux394' direct represents '0' with '-11961'
c Var 'aux394' direct represents '1' with '11961'
c Var 'aux394' order represents '1' with '1'
c Var 'aux394' order represents '0' with '-11961'
c Encoding variable: aux395 with domain: bool (representing constraint (((field_00004_00003=9) + (field_00009_00003=9) + (field_00002_00003=9) + (field_00007_00003=9) + (field_00005_00003=9) + (field_00003_00003=9) + (field_00008_00003=9) + (field_00001_00003=9) + (field_00006_00003=9))=tv=1))
c Var 'aux395' direct represents '0' with '-11962'
c Var 'aux395' direct represents '1' with '11962'
c Var 'aux395' order represents '1' with '1'
c Var 'aux395' order represents '0' with '-11962'
c Encoding variable: aux396 with domain: bool (representing constraint (((field_00004_00004=1) + (field_00009_00004=1) + (field_00002_00004=1) + (field_00007_00004=1) + (field_00005_00004=1) + (field_00003_00004=1) + (field_00008_00004=1) + (field_00001_00004=1) + (field_00006_00004=1))=tv=1))
c Var 'aux396' direct represents '0' with '-11963'
c Var 'aux396' direct represents '1' with '11963'
c Var 'aux396' order represents '1' with '1'
c Var 'aux396' order represents '0' with '-11963'
c Encoding variable: aux397 with domain: bool (representing constraint (((field_00004_00004=2) + (field_00009_00004=2) + (field_00002_00004=2) + (field_00007_00004=2) + (field_00005_00004=2) + (field_00003_00004=2) + (field_00008_00004=2) + (field_00001_00004=2) + (field_00006_00004=2))=tv=1))
c Var 'aux397' direct represents '0' with '-11964'
c Var 'aux397' direct represents '1' with '11964'
c Var 'aux397' order represents '1' with '1'
c Var 'aux397' order represents '0' with '-11964'
c Encoding variable: aux398 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00009_00004=3) + (field_00002_00004=3) + (field_00007_00004=3) + (field_00005_00004=3) + (field_00003_00004=3) + (field_00008_00004=3) + (field_00001_00004=3) + (field_00006_00004=3))=tv=1))
c Var 'aux398' direct represents '0' with '-11965'
c Var 'aux398' direct represents '1' with '11965'
c Var 'aux398' order represents '1' with '1'
c Var 'aux398' order represents '0' with '-11965'
c Encoding variable: aux399 with domain: bool (representing constraint (((field_00004_00004=4) + (field_00009_00004=4) + (field_00002_00004=4) + (field_00007_00004=4) + (field_00005_00004=4) + (field_00003_00004=4) + (field_00008_00004=4) + (field_00001_00004=4) + (field_00006_00004=4))=tv=1))
c Var 'aux399' direct represents '0' with '-11966'
c Var 'aux399' direct represents '1' with '11966'
c Var 'aux399' order represents '1' with '1'
c Var 'aux399' order represents '0' with '-11966'
c Encoding variable: aux400 with domain: bool (representing constraint (((field_00004_00004=5) + (field_00009_00004=5) + (field_00002_00004=5) + (field_00007_00004=5) + (field_00005_00004=5) + (field_00003_00004=5) + (field_00008_00004=5) + (field_00001_00004=5) + (field_00006_00004=5))=tv=1))
c Var 'aux400' direct represents '0' with '-11967'
c Var 'aux400' direct represents '1' with '11967'
c Var 'aux400' order represents '1' with '1'
c Var 'aux400' order represents '0' with '-11967'
c Encoding variable: aux401 with domain: bool (representing constraint (((field_00004_00004=6) + (field_00009_00004=6) + (field_00002_00004=6) + (field_00007_00004=6) + (field_00005_00004=6) + (field_00003_00004=6) + (field_00008_00004=6) + (field_00001_00004=6) + (field_00006_00004=6))=tv=1))
c Var 'aux401' direct represents '0' with '-11968'
c Var 'aux401' direct represents '1' with '11968'
c Var 'aux401' order represents '1' with '1'
c Var 'aux401' order represents '0' with '-11968'
c Encoding variable: aux402 with domain: bool (representing constraint (((field_00004_00004=7) + (field_00009_00004=7) + (field_00002_00004=7) + (field_00007_00004=7) + (field_00005_00004=7) + (field_00003_00004=7) + (field_00008_00004=7) + (field_00001_00004=7) + (field_00006_00004=7))=tv=1))
c Var 'aux402' direct represents '0' with '-11969'
c Var 'aux402' direct represents '1' with '11969'
c Var 'aux402' order represents '1' with '1'
c Var 'aux402' order represents '0' with '-11969'
c Encoding variable: aux403 with domain: bool (representing constraint (((field_00004_00004=8) + (field_00009_00004=8) + (field_00002_00004=8) + (field_00007_00004=8) + (field_00005_00004=8) + (field_00003_00004=8) + (field_00008_00004=8) + (field_00001_00004=8) + (field_00006_00004=8))=tv=1))
c Var 'aux403' direct represents '0' with '-11970'
c Var 'aux403' direct represents '1' with '11970'
c Var 'aux403' order represents '1' with '1'
c Var 'aux403' order represents '0' with '-11970'
c Encoding variable: aux404 with domain: bool (representing constraint (((field_00004_00004=9) + (field_00009_00004=9) + (field_00002_00004=9) + (field_00007_00004=9) + (field_00005_00004=9) + (field_00003_00004=9) + (field_00008_00004=9) + (field_00001_00004=9) + (field_00006_00004=9))=tv=1))
c Var 'aux404' direct represents '0' with '-11971'
c Var 'aux404' direct represents '1' with '11971'
c Var 'aux404' order represents '1' with '1'
c Var 'aux404' order represents '0' with '-11971'
c Encoding variable: aux405 with domain: bool (representing constraint (((field_00004_00005=1) + (field_00009_00005=1) + (field_00002_00005=1) + (field_00007_00005=1) + (field_00005_00005=1) + (field_00003_00005=1) + (field_00008_00005=1) + (field_00001_00005=1) + (field_00006_00005=1))=tv=1))
c Var 'aux405' direct represents '0' with '-11972'
c Var 'aux405' direct represents '1' with '11972'
c Var 'aux405' order represents '1' with '1'
c Var 'aux405' order represents '0' with '-11972'
c Encoding variable: aux406 with domain: bool (representing constraint (((field_00004_00005=2) + (field_00009_00005=2) + (field_00002_00005=2) + (field_00007_00005=2) + (field_00005_00005=2) + (field_00003_00005=2) + (field_00008_00005=2) + (field_00001_00005=2) + (field_00006_00005=2))=tv=1))
c Var 'aux406' direct represents '0' with '-11973'
c Var 'aux406' direct represents '1' with '11973'
c Var 'aux406' order represents '1' with '1'
c Var 'aux406' order represents '0' with '-11973'
c Encoding variable: aux407 with domain: bool (representing constraint (((field_00004_00005=3) + (field_00009_00005=3) + (field_00002_00005=3) + (field_00007_00005=3) + (field_00005_00005=3) + (field_00003_00005=3) + (field_00008_00005=3) + (field_00001_00005=3) + (field_00006_00005=3))=tv=1))
c Var 'aux407' direct represents '0' with '-11974'
c Var 'aux407' direct represents '1' with '11974'
c Var 'aux407' order represents '1' with '1'
c Var 'aux407' order represents '0' with '-11974'
c Encoding variable: aux408 with domain: bool (representing constraint (((field_00004_00005=4) + (field_00009_00005=4) + (field_00002_00005=4) + (field_00007_00005=4) + (field_00005_00005=4) + (field_00003_00005=4) + (field_00008_00005=4) + (field_00001_00005=4) + (field_00006_00005=4))=tv=1))
c Var 'aux408' direct represents '0' with '-11975'
c Var 'aux408' direct represents '1' with '11975'
c Var 'aux408' order represents '1' with '1'
c Var 'aux408' order represents '0' with '-11975'
c Encoding variable: aux409 with domain: bool (representing constraint (((field_00004_00005=5) + (field_00009_00005=5) + (field_00002_00005=5) + (field_00007_00005=5) + (field_00005_00005=5) + (field_00003_00005=5) + (field_00008_00005=5) + (field_00001_00005=5) + (field_00006_00005=5))=tv=1))
c Var 'aux409' direct represents '0' with '-11976'
c Var 'aux409' direct represents '1' with '11976'
c Var 'aux409' order represents '1' with '1'
c Var 'aux409' order represents '0' with '-11976'
c Encoding variable: aux410 with domain: bool (representing constraint (((field_00004_00005=6) + (field_00009_00005=6) + (field_00002_00005=6) + (field_00007_00005=6) + (field_00005_00005=6) + (field_00003_00005=6) + (field_00008_00005=6) + (field_00001_00005=6) + (field_00006_00005=6))=tv=1))
c Var 'aux410' direct represents '0' with '-11977'
c Var 'aux410' direct represents '1' with '11977'
c Var 'aux410' order represents '1' with '1'
c Var 'aux410' order represents '0' with '-11977'
c Encoding variable: aux411 with domain: bool (representing constraint (((field_00004_00005=7) + (field_00009_00005=7) + (field_00002_00005=7) + (field_00007_00005=7) + (field_00005_00005=7) + (field_00003_00005=7) + (field_00008_00005=7) + (field_00001_00005=7) + (field_00006_00005=7))=tv=1))
c Var 'aux411' direct represents '0' with '-11978'
c Var 'aux411' direct represents '1' with '11978'
c Var 'aux411' order represents '1' with '1'
c Var 'aux411' order represents '0' with '-11978'
c Encoding variable: aux412 with domain: bool (representing constraint (((field_00004_00005=8) + (field_00009_00005=8) + (field_00002_00005=8) + (field_00007_00005=8) + (field_00005_00005=8) + (field_00003_00005=8) + (field_00008_00005=8) + (field_00001_00005=8) + (field_00006_00005=8))=tv=1))
c Var 'aux412' direct represents '0' with '-11979'
c Var 'aux412' direct represents '1' with '11979'
c Var 'aux412' order represents '1' with '1'
c Var 'aux412' order represents '0' with '-11979'
c Encoding variable: aux413 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00009_00005=9) + (field_00002_00005=9) + (field_00007_00005=9) + (field_00005_00005=9) + (field_00003_00005=9) + (field_00008_00005=9) + (field_00001_00005=9) + (field_00006_00005=9))=tv=1))
c Var 'aux413' direct represents '0' with '-11980'
c Var 'aux413' direct represents '1' with '11980'
c Var 'aux413' order represents '1' with '1'
c Var 'aux413' order represents '0' with '-11980'
c Encoding variable: aux414 with domain: bool (representing constraint (((field_00004_00006=1) + (field_00009_00006=1) + (field_00002_00006=1) + (field_00007_00006=1) + (field_00005_00006=1) + (field_00003_00006=1) + (field_00008_00006=1) + (field_00001_00006=1) + (field_00006_00006=1))=tv=1))
c Var 'aux414' direct represents '0' with '-11981'
c Var 'aux414' direct represents '1' with '11981'
c Var 'aux414' order represents '1' with '1'
c Var 'aux414' order represents '0' with '-11981'
c Encoding variable: aux415 with domain: bool (representing constraint (((field_00004_00006=2) + (field_00009_00006=2) + (field_00002_00006=2) + (field_00007_00006=2) + (field_00005_00006=2) + (field_00003_00006=2) + (field_00008_00006=2) + (field_00001_00006=2) + (field_00006_00006=2))=tv=1))
c Var 'aux415' direct represents '0' with '-11982'
c Var 'aux415' direct represents '1' with '11982'
c Var 'aux415' order represents '1' with '1'
c Var 'aux415' order represents '0' with '-11982'
c Encoding variable: aux416 with domain: bool (representing constraint (((field_00004_00006=3) + (field_00009_00006=3) + (field_00002_00006=3) + (field_00007_00006=3) + (field_00005_00006=3) + (field_00003_00006=3) + (field_00008_00006=3) + (field_00001_00006=3) + (field_00006_00006=3))=tv=1))
c Var 'aux416' direct represents '0' with '-11983'
c Var 'aux416' direct represents '1' with '11983'
c Var 'aux416' order represents '1' with '1'
c Var 'aux416' order represents '0' with '-11983'
c Encoding variable: aux417 with domain: bool (representing constraint (((field_00004_00006=4) + (field_00009_00006=4) + (field_00002_00006=4) + (field_00007_00006=4) + (field_00005_00006=4) + (field_00003_00006=4) + (field_00008_00006=4) + (field_00001_00006=4) + (field_00006_00006=4))=tv=1))
c Var 'aux417' direct represents '0' with '-11984'
c Var 'aux417' direct represents '1' with '11984'
c Var 'aux417' order represents '1' with '1'
c Var 'aux417' order represents '0' with '-11984'
c Encoding variable: aux418 with domain: bool (representing constraint (((field_00004_00006=5) + (field_00009_00006=5) + (field_00002_00006=5) + (field_00007_00006=5) + (field_00005_00006=5) + (field_00003_00006=5) + (field_00008_00006=5) + (field_00001_00006=5) + (field_00006_00006=5))=tv=1))
c Var 'aux418' direct represents '0' with '-11985'
c Var 'aux418' direct represents '1' with '11985'
c Var 'aux418' order represents '1' with '1'
c Var 'aux418' order represents '0' with '-11985'
c Encoding variable: aux419 with domain: bool (representing constraint (((field_00004_00006=6) + (field_00009_00006=6) + (field_00002_00006=6) + (field_00007_00006=6) + (field_00005_00006=6) + (field_00003_00006=6) + (field_00008_00006=6) + (field_00001_00006=6) + (field_00006_00006=6))=tv=1))
c Var 'aux419' direct represents '0' with '-11986'
c Var 'aux419' direct represents '1' with '11986'
c Var 'aux419' order represents '1' with '1'
c Var 'aux419' order represents '0' with '-11986'
c Encoding variable: aux420 with domain: bool (representing constraint (((field_00004_00006=7) + (field_00009_00006=7) + (field_00002_00006=7) + (field_00007_00006=7) + (field_00005_00006=7) + (field_00003_00006=7) + (field_00008_00006=7) + (field_00001_00006=7) + (field_00006_00006=7))=tv=1))
c Var 'aux420' direct represents '0' with '-11987'
c Var 'aux420' direct represents '1' with '11987'
c Var 'aux420' order represents '1' with '1'
c Var 'aux420' order represents '0' with '-11987'
c Encoding variable: aux421 with domain: bool (representing constraint (((field_00004_00006=8) + (field_00009_00006=8) + (field_00002_00006=8) + (field_00007_00006=8) + (field_00005_00006=8) + (field_00003_00006=8) + (field_00008_00006=8) + (field_00001_00006=8) + (field_00006_00006=8))=tv=1))
c Var 'aux421' direct represents '0' with '-11988'
c Var 'aux421' direct represents '1' with '11988'
c Var 'aux421' order represents '1' with '1'
c Var 'aux421' order represents '0' with '-11988'
c Encoding variable: aux422 with domain: bool (representing constraint (((field_00004_00006=9) + (field_00009_00006=9) + (field_00002_00006=9) + (field_00007_00006=9) + (field_00005_00006=9) + (field_00003_00006=9) + (field_00008_00006=9) + (field_00001_00006=9) + (field_00006_00006=9))=tv=1))
c Var 'aux422' direct represents '0' with '-11989'
c Var 'aux422' direct represents '1' with '11989'
c Var 'aux422' order represents '1' with '1'
c Var 'aux422' order represents '0' with '-11989'
c Encoding variable: aux423 with domain: bool (representing constraint (((field_00004_00007=1) + (field_00009_00007=1) + (field_00002_00007=1) + (field_00007_00007=1) + (field_00005_00007=1) + (field_00003_00007=1) + (field_00008_00007=1) + (field_00001_00007=1) + (field_00006_00007=1))=tv=1))
c Var 'aux423' direct represents '0' with '-11990'
c Var 'aux423' direct represents '1' with '11990'
c Var 'aux423' order represents '1' with '1'
c Var 'aux423' order represents '0' with '-11990'
c Encoding variable: aux424 with domain: bool (representing constraint (((field_00004_00007=2) + (field_00009_00007=2) + (field_00002_00007=2) + (field_00007_00007=2) + (field_00005_00007=2) + (field_00003_00007=2) + (field_00008_00007=2) + (field_00001_00007=2) + (field_00006_00007=2))=tv=1))
c Var 'aux424' direct represents '0' with '-11991'
c Var 'aux424' direct represents '1' with '11991'
c Var 'aux424' order represents '1' with '1'
c Var 'aux424' order represents '0' with '-11991'
c Encoding variable: aux425 with domain: bool (representing constraint (((field_00004_00007=3) + (field_00009_00007=3) + (field_00002_00007=3) + (field_00007_00007=3) + (field_00005_00007=3) + (field_00003_00007=3) + (field_00008_00007=3) + (field_00001_00007=3) + (field_00006_00007=3))=tv=1))
c Var 'aux425' direct represents '0' with '-11992'
c Var 'aux425' direct represents '1' with '11992'
c Var 'aux425' order represents '1' with '1'
c Var 'aux425' order represents '0' with '-11992'
c Encoding variable: aux426 with domain: bool (representing constraint (((field_00004_00007=4) + (field_00009_00007=4) + (field_00002_00007=4) + (field_00007_00007=4) + (field_00005_00007=4) + (field_00003_00007=4) + (field_00008_00007=4) + (field_00001_00007=4) + (field_00006_00007=4))=tv=1))
c Var 'aux426' direct represents '0' with '-11993'
c Var 'aux426' direct represents '1' with '11993'
c Var 'aux426' order represents '1' with '1'
c Var 'aux426' order represents '0' with '-11993'
c Encoding variable: aux427 with domain: bool (representing constraint (((field_00004_00007=5) + (field_00009_00007=5) + (field_00002_00007=5) + (field_00007_00007=5) + (field_00005_00007=5) + (field_00003_00007=5) + (field_00008_00007=5) + (field_00001_00007=5) + (field_00006_00007=5))=tv=1))
c Var 'aux427' direct represents '0' with '-11994'
c Var 'aux427' direct represents '1' with '11994'
c Var 'aux427' order represents '1' with '1'
c Var 'aux427' order represents '0' with '-11994'
c Encoding variable: aux428 with domain: bool (representing constraint (((field_00004_00007=6) + (field_00009_00007=6) + (field_00002_00007=6) + (field_00007_00007=6) + (field_00005_00007=6) + (field_00003_00007=6) + (field_00008_00007=6) + (field_00001_00007=6) + (field_00006_00007=6))=tv=1))
c Var 'aux428' direct represents '0' with '-11995'
c Var 'aux428' direct represents '1' with '11995'
c Var 'aux428' order represents '1' with '1'
c Var 'aux428' order represents '0' with '-11995'
c Encoding variable: aux429 with domain: bool (representing constraint (((field_00004_00007=7) + (field_00009_00007=7) + (field_00002_00007=7) + (field_00007_00007=7) + (field_00005_00007=7) + (field_00003_00007=7) + (field_00008_00007=7) + (field_00001_00007=7) + (field_00006_00007=7))=tv=1))
c Var 'aux429' direct represents '0' with '-11996'
c Var 'aux429' direct represents '1' with '11996'
c Var 'aux429' order represents '1' with '1'
c Var 'aux429' order represents '0' with '-11996'
c Encoding variable: aux430 with domain: bool (representing constraint (((field_00004_00007=8) + (field_00009_00007=8) + (field_00002_00007=8) + (field_00007_00007=8) + (field_00005_00007=8) + (field_00003_00007=8) + (field_00008_00007=8) + (field_00001_00007=8) + (field_00006_00007=8))=tv=1))
c Var 'aux430' direct represents '0' with '-11997'
c Var 'aux430' direct represents '1' with '11997'
c Var 'aux430' order represents '1' with '1'
c Var 'aux430' order represents '0' with '-11997'
c Encoding variable: aux431 with domain: bool (representing constraint (((field_00004_00007=9) + (field_00009_00007=9) + (field_00002_00007=9) + (field_00007_00007=9) + (field_00005_00007=9) + (field_00003_00007=9) + (field_00008_00007=9) + (field_00001_00007=9) + (field_00006_00007=9))=tv=1))
c Var 'aux431' direct represents '0' with '-11998'
c Var 'aux431' direct represents '1' with '11998'
c Var 'aux431' order represents '1' with '1'
c Var 'aux431' order represents '0' with '-11998'
c Encoding variable: aux432 with domain: bool (representing constraint (((field_00004_00008=1) + (field_00009_00008=1) + (field_00002_00008=1) + (field_00007_00008=1) + (field_00005_00008=1) + (field_00003_00008=1) + (field_00008_00008=1) + (field_00001_00008=1) + (field_00006_00008=1))=tv=1))
c Var 'aux432' direct represents '0' with '-11999'
c Var 'aux432' direct represents '1' with '11999'
c Var 'aux432' order represents '1' with '1'
c Var 'aux432' order represents '0' with '-11999'
c Encoding variable: aux433 with domain: bool (representing constraint (((field_00004_00008=2) + (field_00009_00008=2) + (field_00002_00008=2) + (field_00007_00008=2) + (field_00005_00008=2) + (field_00003_00008=2) + (field_00008_00008=2) + (field_00001_00008=2) + (field_00006_00008=2))=tv=1))
c Var 'aux433' direct represents '0' with '-12000'
c Var 'aux433' direct represents '1' with '12000'
c Var 'aux433' order represents '1' with '1'
c Var 'aux433' order represents '0' with '-12000'
c Encoding variable: aux434 with domain: bool (representing constraint (((field_00004_00008=3) + (field_00009_00008=3) + (field_00002_00008=3) + (field_00007_00008=3) + (field_00005_00008=3) + (field_00003_00008=3) + (field_00008_00008=3) + (field_00001_00008=3) + (field_00006_00008=3))=tv=1))
c Var 'aux434' direct represents '0' with '-12001'
c Var 'aux434' direct represents '1' with '12001'
c Var 'aux434' order represents '1' with '1'
c Var 'aux434' order represents '0' with '-12001'
c Encoding variable: aux435 with domain: bool (representing constraint (((field_00004_00008=4) + (field_00009_00008=4) + (field_00002_00008=4) + (field_00007_00008=4) + (field_00005_00008=4) + (field_00003_00008=4) + (field_00008_00008=4) + (field_00001_00008=4) + (field_00006_00008=4))=tv=1))
c Var 'aux435' direct represents '0' with '-12002'
c Var 'aux435' direct represents '1' with '12002'
c Var 'aux435' order represents '1' with '1'
c Var 'aux435' order represents '0' with '-12002'
c Encoding variable: aux436 with domain: bool (representing constraint (((field_00004_00008=5) + (field_00009_00008=5) + (field_00002_00008=5) + (field_00007_00008=5) + (field_00005_00008=5) + (field_00003_00008=5) + (field_00008_00008=5) + (field_00001_00008=5) + (field_00006_00008=5))=tv=1))
c Var 'aux436' direct represents '0' with '-12003'
c Var 'aux436' direct represents '1' with '12003'
c Var 'aux436' order represents '1' with '1'
c Var 'aux436' order represents '0' with '-12003'
c Encoding variable: aux437 with domain: bool (representing constraint (((field_00004_00008=6) + (field_00009_00008=6) + (field_00002_00008=6) + (field_00007_00008=6) + (field_00005_00008=6) + (field_00003_00008=6) + (field_00008_00008=6) + (field_00001_00008=6) + (field_00006_00008=6))=tv=1))
c Var 'aux437' direct represents '0' with '-12004'
c Var 'aux437' direct represents '1' with '12004'
c Var 'aux437' order represents '1' with '1'
c Var 'aux437' order represents '0' with '-12004'
c Encoding variable: aux438 with domain: bool (representing constraint (((field_00004_00008=7) + (field_00009_00008=7) + (field_00002_00008=7) + (field_00007_00008=7) + (field_00005_00008=7) + (field_00003_00008=7) + (field_00008_00008=7) + (field_00001_00008=7) + (field_00006_00008=7))=tv=1))
c Var 'aux438' direct represents '0' with '-12005'
c Var 'aux438' direct represents '1' with '12005'
c Var 'aux438' order represents '1' with '1'
c Var 'aux438' order represents '0' with '-12005'
c Encoding variable: aux439 with domain: bool (representing constraint (((field_00004_00008=8) + (field_00009_00008=8) + (field_00002_00008=8) + (field_00007_00008=8) + (field_00005_00008=8) + (field_00003_00008=8) + (field_00008_00008=8) + (field_00001_00008=8) + (field_00006_00008=8))=tv=1))
c Var 'aux439' direct represents '0' with '-12006'
c Var 'aux439' direct represents '1' with '12006'
c Var 'aux439' order represents '1' with '1'
c Var 'aux439' order represents '0' with '-12006'
c Encoding variable: aux440 with domain: bool (representing constraint (((field_00004_00008=9) + (field_00009_00008=9) + (field_00002_00008=9) + (field_00007_00008=9) + (field_00005_00008=9) + (field_00003_00008=9) + (field_00008_00008=9) + (field_00001_00008=9) + (field_00006_00008=9))=tv=1))
c Var 'aux440' direct represents '0' with '-12007'
c Var 'aux440' direct represents '1' with '12007'
c Var 'aux440' order represents '1' with '1'
c Var 'aux440' order represents '0' with '-12007'
c Encoding variable: aux441 with domain: bool (representing constraint (((field_00004_00009=1) + (field_00009_00009=1) + (field_00002_00009=1) + (field_00007_00009=1) + (field_00005_00009=1) + (field_00003_00009=1) + (field_00008_00009=1) + (field_00001_00009=1) + (field_00006_00009=1))=tv=1))
c Var 'aux441' direct represents '0' with '-12008'
c Var 'aux441' direct represents '1' with '12008'
c Var 'aux441' order represents '1' with '1'
c Var 'aux441' order represents '0' with '-12008'
c Encoding variable: aux442 with domain: bool (representing constraint (((field_00004_00009=2) + (field_00009_00009=2) + (field_00002_00009=2) + (field_00007_00009=2) + (field_00005_00009=2) + (field_00003_00009=2) + (field_00008_00009=2) + (field_00001_00009=2) + (field_00006_00009=2))=tv=1))
c Var 'aux442' direct represents '0' with '-12009'
c Var 'aux442' direct represents '1' with '12009'
c Var 'aux442' order represents '1' with '1'
c Var 'aux442' order represents '0' with '-12009'
c Encoding variable: aux443 with domain: bool (representing constraint (((field_00004_00009=3) + (field_00009_00009=3) + (field_00002_00009=3) + (field_00007_00009=3) + (field_00005_00009=3) + (field_00003_00009=3) + (field_00008_00009=3) + (field_00001_00009=3) + (field_00006_00009=3))=tv=1))
c Var 'aux443' direct represents '0' with '-12010'
c Var 'aux443' direct represents '1' with '12010'
c Var 'aux443' order represents '1' with '1'
c Var 'aux443' order represents '0' with '-12010'
c Encoding variable: aux444 with domain: bool (representing constraint (((field_00004_00009=4) + (field_00009_00009=4) + (field_00002_00009=4) + (field_00007_00009=4) + (field_00005_00009=4) + (field_00003_00009=4) + (field_00008_00009=4) + (field_00001_00009=4) + (field_00006_00009=4))=tv=1))
c Var 'aux444' direct represents '0' with '-12011'
c Var 'aux444' direct represents '1' with '12011'
c Var 'aux444' order represents '1' with '1'
c Var 'aux444' order represents '0' with '-12011'
c Encoding variable: aux445 with domain: bool (representing constraint (((field_00004_00009=5) + (field_00009_00009=5) + (field_00002_00009=5) + (field_00007_00009=5) + (field_00005_00009=5) + (field_00003_00009=5) + (field_00008_00009=5) + (field_00001_00009=5) + (field_00006_00009=5))=tv=1))
c Var 'aux445' direct represents '0' with '-12012'
c Var 'aux445' direct represents '1' with '12012'
c Var 'aux445' order represents '1' with '1'
c Var 'aux445' order represents '0' with '-12012'
c Encoding variable: aux446 with domain: bool (representing constraint (((field_00004_00009=6) + (field_00009_00009=6) + (field_00002_00009=6) + (field_00007_00009=6) + (field_00005_00009=6) + (field_00003_00009=6) + (field_00008_00009=6) + (field_00001_00009=6) + (field_00006_00009=6))=tv=1))
c Var 'aux446' direct represents '0' with '-12013'
c Var 'aux446' direct represents '1' with '12013'
c Var 'aux446' order represents '1' with '1'
c Var 'aux446' order represents '0' with '-12013'
c Encoding variable: aux447 with domain: bool (representing constraint (((field_00004_00009=7) + (field_00009_00009=7) + (field_00002_00009=7) + (field_00007_00009=7) + (field_00005_00009=7) + (field_00003_00009=7) + (field_00008_00009=7) + (field_00001_00009=7) + (field_00006_00009=7))=tv=1))
c Var 'aux447' direct represents '0' with '-12014'
c Var 'aux447' direct represents '1' with '12014'
c Var 'aux447' order represents '1' with '1'
c Var 'aux447' order represents '0' with '-12014'
c Encoding variable: aux448 with domain: bool (representing constraint (((field_00004_00009=8) + (field_00009_00009=8) + (field_00002_00009=8) + (field_00007_00009=8) + (field_00005_00009=8) + (field_00003_00009=8) + (field_00008_00009=8) + (field_00001_00009=8) + (field_00006_00009=8))=tv=1))
c Var 'aux448' direct represents '0' with '-12015'
c Var 'aux448' direct represents '1' with '12015'
c Var 'aux448' order represents '1' with '1'
c Var 'aux448' order represents '0' with '-12015'
c Encoding variable: aux449 with domain: bool (representing constraint (((field_00004_00009=9) + (field_00009_00009=9) + (field_00002_00009=9) + (field_00007_00009=9) + (field_00005_00009=9) + (field_00003_00009=9) + (field_00008_00009=9) + (field_00001_00009=9) + (field_00006_00009=9))=tv=1))
c Var 'aux449' direct represents '0' with '-12016'
c Var 'aux449' direct represents '1' with '12016'
c Var 'aux449' order represents '1' with '1'
c Var 'aux449' order represents '0' with '-12016'
c Encoding variable: aux450 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00001_00009=1)))
c Both direct and order encoding.
c Var 'aux450' order represents '0' with '12017'
c Var 'aux450' direct represents '0' with '12017'
c Var 'aux450' order represents '1' with '12018'
-12017 12018 0
c Var 'aux450' direct represents '1' with '12019'
12017 -12018 12019 0
-12019 12018 0
-12019 -12017 0
c Var 'aux450' direct represents '2' with '-12018'
12017 12019 -12018 0
c Encoding variable: aux451 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux451' order represents '0' with '12020'
c Var 'aux451' direct represents '0' with '12020'
c Var 'aux451' order represents '1' with '12021'
-12020 12021 0
c Var 'aux451' direct represents '1' with '12022'
12020 -12021 12022 0
-12022 12021 0
-12022 -12020 0
c Var 'aux451' direct represents '2' with '-12021'
12020 12022 -12021 0
c Encoding variable: aux452 with domain: int(0..2) (representing constraint ((field_00001_00007=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux452' order represents '0' with '12023'
c Var 'aux452' direct represents '0' with '12023'
c Var 'aux452' order represents '1' with '12024'
-12023 12024 0
c Var 'aux452' direct represents '1' with '12025'
12023 -12024 12025 0
-12025 12024 0
-12025 -12023 0
c Var 'aux452' direct represents '2' with '-12024'
12023 12025 -12024 0
c Encoding variable: aux453 with domain: int(0..2) (representing constraint ((field_00001_00006=1) + (field_00001_00005=1)))
c Both direct and order encoding.
c Var 'aux453' order represents '0' with '12026'
c Var 'aux453' direct represents '0' with '12026'
c Var 'aux453' order represents '1' with '12027'
-12026 12027 0
c Var 'aux453' direct represents '1' with '12028'
12026 -12027 12028 0
-12028 12027 0
-12028 -12026 0
c Var 'aux453' direct represents '2' with '-12027'
12026 12028 -12027 0
c Encoding variable: aux454 with domain: int(0..3) (representing constraint ((field_00001_00003=1) + aux453))
c Both direct and order encoding.
c Var 'aux454' order represents '0' with '12029'
c Var 'aux454' direct represents '0' with '12029'
c Var 'aux454' order represents '1' with '12030'
-12029 12030 0
c Var 'aux454' direct represents '1' with '12031'
12029 -12030 12031 0
-12031 12030 0
-12031 -12029 0
c Var 'aux454' order represents '2' with '12032'
-12030 12032 0
c Var 'aux454' direct represents '2' with '12033'
12030 -12032 12033 0
-12033 12032 0
-12033 -12030 0
c Var 'aux454' direct represents '3' with '-12032'
12029 12031 12033 -12032 0
c Encoding variable: aux455 with domain: int(0..4) (representing constraint (aux450 + aux452))
c Both direct and order encoding.
c Var 'aux455' order represents '0' with '12034'
c Var 'aux455' direct represents '0' with '12034'
c Var 'aux455' order represents '1' with '12035'
-12034 12035 0
c Var 'aux455' direct represents '1' with '12036'
12034 -12035 12036 0
-12036 12035 0
-12036 -12034 0
c Var 'aux455' order represents '2' with '12037'
-12035 12037 0
c Var 'aux455' direct represents '2' with '12038'
12035 -12037 12038 0
-12038 12037 0
-12038 -12035 0
c Var 'aux455' order represents '3' with '12039'
-12037 12039 0
c Var 'aux455' direct represents '3' with '12040'
12037 -12039 12040 0
-12040 12039 0
-12040 -12037 0
c Var 'aux455' direct represents '4' with '-12039'
12034 12036 12038 12040 -12039 0
c Encoding variable: aux456 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00001_00009=2)))
c Both direct and order encoding.
c Var 'aux456' order represents '0' with '12041'
c Var 'aux456' direct represents '0' with '12041'
c Var 'aux456' order represents '1' with '12042'
-12041 12042 0
c Var 'aux456' direct represents '1' with '12043'
12041 -12042 12043 0
-12043 12042 0
-12043 -12041 0
c Var 'aux456' direct represents '2' with '-12042'
12041 12043 -12042 0
c Encoding variable: aux457 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux457' order represents '0' with '12044'
c Var 'aux457' direct represents '0' with '12044'
c Var 'aux457' order represents '1' with '12045'
-12044 12045 0
c Var 'aux457' direct represents '1' with '12046'
12044 -12045 12046 0
-12046 12045 0
-12046 -12044 0
c Var 'aux457' direct represents '2' with '-12045'
12044 12046 -12045 0
c Encoding variable: aux458 with domain: int(0..2) (representing constraint ((field_00001_00007=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux458' order represents '0' with '12047'
c Var 'aux458' direct represents '0' with '12047'
c Var 'aux458' order represents '1' with '12048'
-12047 12048 0
c Var 'aux458' direct represents '1' with '12049'
12047 -12048 12049 0
-12049 12048 0
-12049 -12047 0
c Var 'aux458' direct represents '2' with '-12048'
12047 12049 -12048 0
c Encoding variable: aux459 with domain: int(0..2) (representing constraint ((field_00001_00006=2) + (field_00001_00005=2)))
c Both direct and order encoding.
c Var 'aux459' order represents '0' with '12050'
c Var 'aux459' direct represents '0' with '12050'
c Var 'aux459' order represents '1' with '12051'
-12050 12051 0
c Var 'aux459' direct represents '1' with '12052'
12050 -12051 12052 0
-12052 12051 0
-12052 -12050 0
c Var 'aux459' direct represents '2' with '-12051'
12050 12052 -12051 0
c Encoding variable: aux460 with domain: int(0..3) (representing constraint ((field_00001_00003=2) + aux459))
c Both direct and order encoding.
c Var 'aux460' order represents '0' with '12053'
c Var 'aux460' direct represents '0' with '12053'
c Var 'aux460' order represents '1' with '12054'
-12053 12054 0
c Var 'aux460' direct represents '1' with '12055'
12053 -12054 12055 0
-12055 12054 0
-12055 -12053 0
c Var 'aux460' order represents '2' with '12056'
-12054 12056 0
c Var 'aux460' direct represents '2' with '12057'
12054 -12056 12057 0
-12057 12056 0
-12057 -12054 0
c Var 'aux460' direct represents '3' with '-12056'
12053 12055 12057 -12056 0
c Encoding variable: aux461 with domain: int(0..4) (representing constraint (aux456 + aux458))
c Both direct and order encoding.
c Var 'aux461' order represents '0' with '12058'
c Var 'aux461' direct represents '0' with '12058'
c Var 'aux461' order represents '1' with '12059'
-12058 12059 0
c Var 'aux461' direct represents '1' with '12060'
12058 -12059 12060 0
-12060 12059 0
-12060 -12058 0
c Var 'aux461' order represents '2' with '12061'
-12059 12061 0
c Var 'aux461' direct represents '2' with '12062'
12059 -12061 12062 0
-12062 12061 0
-12062 -12059 0
c Var 'aux461' order represents '3' with '12063'
-12061 12063 0
c Var 'aux461' direct represents '3' with '12064'
12061 -12063 12064 0
-12064 12063 0
-12064 -12061 0
c Var 'aux461' direct represents '4' with '-12063'
12058 12060 12062 12064 -12063 0
c Encoding variable: aux462 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00001_00009=3)))
c Both direct and order encoding.
c Var 'aux462' order represents '0' with '12065'
c Var 'aux462' direct represents '0' with '12065'
c Var 'aux462' order represents '1' with '12066'
-12065 12066 0
c Var 'aux462' direct represents '1' with '12067'
12065 -12066 12067 0
-12067 12066 0
-12067 -12065 0
c Var 'aux462' direct represents '2' with '-12066'
12065 12067 -12066 0
c Encoding variable: aux463 with domain: int(0..2) (representing constraint ((field_00001_00008=3) + (field_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux463' order represents '0' with '12068'
c Var 'aux463' direct represents '0' with '12068'
c Var 'aux463' order represents '1' with '12069'
-12068 12069 0
c Var 'aux463' direct represents '1' with '12070'
12068 -12069 12070 0
-12070 12069 0
-12070 -12068 0
c Var 'aux463' direct represents '2' with '-12069'
12068 12070 -12069 0
c Encoding variable: aux464 with domain: int(0..2) (representing constraint ((field_00001_00007=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux464' order represents '0' with '12071'
c Var 'aux464' direct represents '0' with '12071'
c Var 'aux464' order represents '1' with '12072'
-12071 12072 0
c Var 'aux464' direct represents '1' with '12073'
12071 -12072 12073 0
-12073 12072 0
-12073 -12071 0
c Var 'aux464' direct represents '2' with '-12072'
12071 12073 -12072 0
c Encoding variable: aux465 with domain: int(0..2) (representing constraint ((field_00001_00006=3) + (field_00001_00005=3)))
c Both direct and order encoding.
c Var 'aux465' order represents '0' with '12074'
c Var 'aux465' direct represents '0' with '12074'
c Var 'aux465' order represents '1' with '12075'
-12074 12075 0
c Var 'aux465' direct represents '1' with '12076'
12074 -12075 12076 0
-12076 12075 0
-12076 -12074 0
c Var 'aux465' direct represents '2' with '-12075'
12074 12076 -12075 0
c Encoding variable: aux466 with domain: int(0..3) (representing constraint ((field_00001_00003=3) + aux465))
c Both direct and order encoding.
c Var 'aux466' order represents '0' with '12077'
c Var 'aux466' direct represents '0' with '12077'
c Var 'aux466' order represents '1' with '12078'
-12077 12078 0
c Var 'aux466' direct represents '1' with '12079'
12077 -12078 12079 0
-12079 12078 0
-12079 -12077 0
c Var 'aux466' order represents '2' with '12080'
-12078 12080 0
c Var 'aux466' direct represents '2' with '12081'
12078 -12080 12081 0
-12081 12080 0
-12081 -12078 0
c Var 'aux466' direct represents '3' with '-12080'
12077 12079 12081 -12080 0
c Encoding variable: aux467 with domain: int(0..4) (representing constraint (aux462 + aux464))
c Both direct and order encoding.
c Var 'aux467' order represents '0' with '12082'
c Var 'aux467' direct represents '0' with '12082'
c Var 'aux467' order represents '1' with '12083'
-12082 12083 0
c Var 'aux467' direct represents '1' with '12084'
12082 -12083 12084 0
-12084 12083 0
-12084 -12082 0
c Var 'aux467' order represents '2' with '12085'
-12083 12085 0
c Var 'aux467' direct represents '2' with '12086'
12083 -12085 12086 0
-12086 12085 0
-12086 -12083 0
c Var 'aux467' order represents '3' with '12087'
-12085 12087 0
c Var 'aux467' direct represents '3' with '12088'
12085 -12087 12088 0
-12088 12087 0
-12088 -12085 0
c Var 'aux467' direct represents '4' with '-12087'
12082 12084 12086 12088 -12087 0
c Encoding variable: aux468 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00001_00009=4)))
c Both direct and order encoding.
c Var 'aux468' order represents '0' with '12089'
c Var 'aux468' direct represents '0' with '12089'
c Var 'aux468' order represents '1' with '12090'
-12089 12090 0
c Var 'aux468' direct represents '1' with '12091'
12089 -12090 12091 0
-12091 12090 0
-12091 -12089 0
c Var 'aux468' direct represents '2' with '-12090'
12089 12091 -12090 0
c Encoding variable: aux469 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux469' order represents '0' with '12092'
c Var 'aux469' direct represents '0' with '12092'
c Var 'aux469' order represents '1' with '12093'
-12092 12093 0
c Var 'aux469' direct represents '1' with '12094'
12092 -12093 12094 0
-12094 12093 0
-12094 -12092 0
c Var 'aux469' direct represents '2' with '-12093'
12092 12094 -12093 0
c Encoding variable: aux470 with domain: int(0..2) (representing constraint ((field_00001_00007=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux470' order represents '0' with '12095'
c Var 'aux470' direct represents '0' with '12095'
c Var 'aux470' order represents '1' with '12096'
-12095 12096 0
c Var 'aux470' direct represents '1' with '12097'
12095 -12096 12097 0
-12097 12096 0
-12097 -12095 0
c Var 'aux470' direct represents '2' with '-12096'
12095 12097 -12096 0
c Encoding variable: aux471 with domain: int(0..2) (representing constraint ((field_00001_00006=4) + (field_00001_00005=4)))
c Both direct and order encoding.
c Var 'aux471' order represents '0' with '12098'
c Var 'aux471' direct represents '0' with '12098'
c Var 'aux471' order represents '1' with '12099'
-12098 12099 0
c Var 'aux471' direct represents '1' with '12100'
12098 -12099 12100 0
-12100 12099 0
-12100 -12098 0
c Var 'aux471' direct represents '2' with '-12099'
12098 12100 -12099 0
c Encoding variable: aux472 with domain: int(0..3) (representing constraint ((field_00001_00003=4) + aux471))
c Both direct and order encoding.
c Var 'aux472' order represents '0' with '12101'
c Var 'aux472' direct represents '0' with '12101'
c Var 'aux472' order represents '1' with '12102'
-12101 12102 0
c Var 'aux472' direct represents '1' with '12103'
12101 -12102 12103 0
-12103 12102 0
-12103 -12101 0
c Var 'aux472' order represents '2' with '12104'
-12102 12104 0
c Var 'aux472' direct represents '2' with '12105'
12102 -12104 12105 0
-12105 12104 0
-12105 -12102 0
c Var 'aux472' direct represents '3' with '-12104'
12101 12103 12105 -12104 0
c Encoding variable: aux473 with domain: int(0..4) (representing constraint (aux468 + aux470))
c Both direct and order encoding.
c Var 'aux473' order represents '0' with '12106'
c Var 'aux473' direct represents '0' with '12106'
c Var 'aux473' order represents '1' with '12107'
-12106 12107 0
c Var 'aux473' direct represents '1' with '12108'
12106 -12107 12108 0
-12108 12107 0
-12108 -12106 0
c Var 'aux473' order represents '2' with '12109'
-12107 12109 0
c Var 'aux473' direct represents '2' with '12110'
12107 -12109 12110 0
-12110 12109 0
-12110 -12107 0
c Var 'aux473' order represents '3' with '12111'
-12109 12111 0
c Var 'aux473' direct represents '3' with '12112'
12109 -12111 12112 0
-12112 12111 0
-12112 -12109 0
c Var 'aux473' direct represents '4' with '-12111'
12106 12108 12110 12112 -12111 0
c Encoding variable: aux474 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00001_00009=5)))
c Both direct and order encoding.
c Var 'aux474' order represents '0' with '12113'
c Var 'aux474' direct represents '0' with '12113'
c Var 'aux474' order represents '1' with '12114'
-12113 12114 0
c Var 'aux474' direct represents '1' with '12115'
12113 -12114 12115 0
-12115 12114 0
-12115 -12113 0
c Var 'aux474' direct represents '2' with '-12114'
12113 12115 -12114 0
c Encoding variable: aux475 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00001_00002=5)))
c Both direct and order encoding.
c Var 'aux475' order represents '0' with '12116'
c Var 'aux475' direct represents '0' with '12116'
c Var 'aux475' order represents '1' with '12117'
-12116 12117 0
c Var 'aux475' direct represents '1' with '12118'
12116 -12117 12118 0
-12118 12117 0
-12118 -12116 0
c Var 'aux475' direct represents '2' with '-12117'
12116 12118 -12117 0
c Encoding variable: aux476 with domain: int(0..2) (representing constraint ((field_00001_00007=5) + (field_00001_00004=5)))
c Both direct and order encoding.
c Var 'aux476' order represents '0' with '12119'
c Var 'aux476' direct represents '0' with '12119'
c Var 'aux476' order represents '1' with '12120'
-12119 12120 0
c Var 'aux476' direct represents '1' with '12121'
12119 -12120 12121 0
-12121 12120 0
-12121 -12119 0
c Var 'aux476' direct represents '2' with '-12120'
12119 12121 -12120 0
c Encoding variable: aux477 with domain: int(0..2) (representing constraint ((field_00001_00006=5) + (field_00001_00005=5)))
c Both direct and order encoding.
c Var 'aux477' order represents '0' with '12122'
c Var 'aux477' direct represents '0' with '12122'
c Var 'aux477' order represents '1' with '12123'
-12122 12123 0
c Var 'aux477' direct represents '1' with '12124'
12122 -12123 12124 0
-12124 12123 0
-12124 -12122 0
c Var 'aux477' direct represents '2' with '-12123'
12122 12124 -12123 0
c Encoding variable: aux478 with domain: int(0..3) (representing constraint ((field_00001_00003=5) + aux477))
c Both direct and order encoding.
c Var 'aux478' order represents '0' with '12125'
c Var 'aux478' direct represents '0' with '12125'
c Var 'aux478' order represents '1' with '12126'
-12125 12126 0
c Var 'aux478' direct represents '1' with '12127'
12125 -12126 12127 0
-12127 12126 0
-12127 -12125 0
c Var 'aux478' order represents '2' with '12128'
-12126 12128 0
c Var 'aux478' direct represents '2' with '12129'
12126 -12128 12129 0
-12129 12128 0
-12129 -12126 0
c Var 'aux478' direct represents '3' with '-12128'
12125 12127 12129 -12128 0
c Encoding variable: aux479 with domain: int(0..4) (representing constraint (aux474 + aux476))
c Both direct and order encoding.
c Var 'aux479' order represents '0' with '12130'
c Var 'aux479' direct represents '0' with '12130'
c Var 'aux479' order represents '1' with '12131'
-12130 12131 0
c Var 'aux479' direct represents '1' with '12132'
12130 -12131 12132 0
-12132 12131 0
-12132 -12130 0
c Var 'aux479' order represents '2' with '12133'
-12131 12133 0
c Var 'aux479' direct represents '2' with '12134'
12131 -12133 12134 0
-12134 12133 0
-12134 -12131 0
c Var 'aux479' order represents '3' with '12135'
-12133 12135 0
c Var 'aux479' direct represents '3' with '12136'
12133 -12135 12136 0
-12136 12135 0
-12136 -12133 0
c Var 'aux479' direct represents '4' with '-12135'
12130 12132 12134 12136 -12135 0
c Encoding variable: aux480 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00001_00009=6)))
c Both direct and order encoding.
c Var 'aux480' order represents '0' with '12137'
c Var 'aux480' direct represents '0' with '12137'
c Var 'aux480' order represents '1' with '12138'
-12137 12138 0
c Var 'aux480' direct represents '1' with '12139'
12137 -12138 12139 0
-12139 12138 0
-12139 -12137 0
c Var 'aux480' direct represents '2' with '-12138'
12137 12139 -12138 0
c Encoding variable: aux481 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00001_00002=6)))
c Both direct and order encoding.
c Var 'aux481' order represents '0' with '12140'
c Var 'aux481' direct represents '0' with '12140'
c Var 'aux481' order represents '1' with '12141'
-12140 12141 0
c Var 'aux481' direct represents '1' with '12142'
12140 -12141 12142 0
-12142 12141 0
-12142 -12140 0
c Var 'aux481' direct represents '2' with '-12141'
12140 12142 -12141 0
c Encoding variable: aux482 with domain: int(0..2) (representing constraint ((field_00001_00007=6) + (field_00001_00004=6)))
c Both direct and order encoding.
c Var 'aux482' order represents '0' with '12143'
c Var 'aux482' direct represents '0' with '12143'
c Var 'aux482' order represents '1' with '12144'
-12143 12144 0
c Var 'aux482' direct represents '1' with '12145'
12143 -12144 12145 0
-12145 12144 0
-12145 -12143 0
c Var 'aux482' direct represents '2' with '-12144'
12143 12145 -12144 0
c Encoding variable: aux483 with domain: int(0..2) (representing constraint ((field_00001_00006=6) + (field_00001_00005=6)))
c Both direct and order encoding.
c Var 'aux483' order represents '0' with '12146'
c Var 'aux483' direct represents '0' with '12146'
c Var 'aux483' order represents '1' with '12147'
-12146 12147 0
c Var 'aux483' direct represents '1' with '12148'
12146 -12147 12148 0
-12148 12147 0
-12148 -12146 0
c Var 'aux483' direct represents '2' with '-12147'
12146 12148 -12147 0
c Encoding variable: aux484 with domain: int(0..3) (representing constraint ((field_00001_00003=6) + aux483))
c Both direct and order encoding.
c Var 'aux484' order represents '0' with '12149'
c Var 'aux484' direct represents '0' with '12149'
c Var 'aux484' order represents '1' with '12150'
-12149 12150 0
c Var 'aux484' direct represents '1' with '12151'
12149 -12150 12151 0
-12151 12150 0
-12151 -12149 0
c Var 'aux484' order represents '2' with '12152'
-12150 12152 0
c Var 'aux484' direct represents '2' with '12153'
12150 -12152 12153 0
-12153 12152 0
-12153 -12150 0
c Var 'aux484' direct represents '3' with '-12152'
12149 12151 12153 -12152 0
c Encoding variable: aux485 with domain: int(0..4) (representing constraint (aux480 + aux482))
c Both direct and order encoding.
c Var 'aux485' order represents '0' with '12154'
c Var 'aux485' direct represents '0' with '12154'
c Var 'aux485' order represents '1' with '12155'
-12154 12155 0
c Var 'aux485' direct represents '1' with '12156'
12154 -12155 12156 0
-12156 12155 0
-12156 -12154 0
c Var 'aux485' order represents '2' with '12157'
-12155 12157 0
c Var 'aux485' direct represents '2' with '12158'
12155 -12157 12158 0
-12158 12157 0
-12158 -12155 0
c Var 'aux485' order represents '3' with '12159'
-12157 12159 0
c Var 'aux485' direct represents '3' with '12160'
12157 -12159 12160 0
-12160 12159 0
-12160 -12157 0
c Var 'aux485' direct represents '4' with '-12159'
12154 12156 12158 12160 -12159 0
c Encoding variable: aux486 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00001_00009=7)))
c Both direct and order encoding.
c Var 'aux486' order represents '0' with '12161'
c Var 'aux486' direct represents '0' with '12161'
c Var 'aux486' order represents '1' with '12162'
-12161 12162 0
c Var 'aux486' direct represents '1' with '12163'
12161 -12162 12163 0
-12163 12162 0
-12163 -12161 0
c Var 'aux486' direct represents '2' with '-12162'
12161 12163 -12162 0
c Encoding variable: aux487 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00001_00002=7)))
c Both direct and order encoding.
c Var 'aux487' order represents '0' with '12164'
c Var 'aux487' direct represents '0' with '12164'
c Var 'aux487' order represents '1' with '12165'
-12164 12165 0
c Var 'aux487' direct represents '1' with '12166'
12164 -12165 12166 0
-12166 12165 0
-12166 -12164 0
c Var 'aux487' direct represents '2' with '-12165'
12164 12166 -12165 0
c Encoding variable: aux488 with domain: int(0..2) (representing constraint ((field_00001_00007=7) + (field_00001_00004=7)))
c Both direct and order encoding.
c Var 'aux488' order represents '0' with '12167'
c Var 'aux488' direct represents '0' with '12167'
c Var 'aux488' order represents '1' with '12168'
-12167 12168 0
c Var 'aux488' direct represents '1' with '12169'
12167 -12168 12169 0
-12169 12168 0
-12169 -12167 0
c Var 'aux488' direct represents '2' with '-12168'
12167 12169 -12168 0
c Encoding variable: aux489 with domain: int(0..2) (representing constraint ((field_00001_00006=7) + (field_00001_00005=7)))
c Both direct and order encoding.
c Var 'aux489' order represents '0' with '12170'
c Var 'aux489' direct represents '0' with '12170'
c Var 'aux489' order represents '1' with '12171'
-12170 12171 0
c Var 'aux489' direct represents '1' with '12172'
12170 -12171 12172 0
-12172 12171 0
-12172 -12170 0
c Var 'aux489' direct represents '2' with '-12171'
12170 12172 -12171 0
c Encoding variable: aux490 with domain: int(0..3) (representing constraint ((field_00001_00003=7) + aux489))
c Both direct and order encoding.
c Var 'aux490' order represents '0' with '12173'
c Var 'aux490' direct represents '0' with '12173'
c Var 'aux490' order represents '1' with '12174'
-12173 12174 0
c Var 'aux490' direct represents '1' with '12175'
12173 -12174 12175 0
-12175 12174 0
-12175 -12173 0
c Var 'aux490' order represents '2' with '12176'
-12174 12176 0
c Var 'aux490' direct represents '2' with '12177'
12174 -12176 12177 0
-12177 12176 0
-12177 -12174 0
c Var 'aux490' direct represents '3' with '-12176'
12173 12175 12177 -12176 0
c Encoding variable: aux491 with domain: int(0..4) (representing constraint (aux486 + aux488))
c Both direct and order encoding.
c Var 'aux491' order represents '0' with '12178'
c Var 'aux491' direct represents '0' with '12178'
c Var 'aux491' order represents '1' with '12179'
-12178 12179 0
c Var 'aux491' direct represents '1' with '12180'
12178 -12179 12180 0
-12180 12179 0
-12180 -12178 0
c Var 'aux491' order represents '2' with '12181'
-12179 12181 0
c Var 'aux491' direct represents '2' with '12182'
12179 -12181 12182 0
-12182 12181 0
-12182 -12179 0
c Var 'aux491' order represents '3' with '12183'
-12181 12183 0
c Var 'aux491' direct represents '3' with '12184'
12181 -12183 12184 0
-12184 12183 0
-12184 -12181 0
c Var 'aux491' direct represents '4' with '-12183'
12178 12180 12182 12184 -12183 0
c Encoding variable: aux492 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux492' order represents '0' with '12185'
c Var 'aux492' direct represents '0' with '12185'
c Var 'aux492' order represents '1' with '12186'
-12185 12186 0
c Var 'aux492' direct represents '1' with '12187'
12185 -12186 12187 0
-12187 12186 0
-12187 -12185 0
c Var 'aux492' direct represents '2' with '-12186'
12185 12187 -12186 0
c Encoding variable: aux493 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00001_00002=8)))
c Both direct and order encoding.
c Var 'aux493' order represents '0' with '12188'
c Var 'aux493' direct represents '0' with '12188'
c Var 'aux493' order represents '1' with '12189'
-12188 12189 0
c Var 'aux493' direct represents '1' with '12190'
12188 -12189 12190 0
-12190 12189 0
-12190 -12188 0
c Var 'aux493' direct represents '2' with '-12189'
12188 12190 -12189 0
c Encoding variable: aux494 with domain: int(0..2) (representing constraint ((field_00001_00007=8) + (field_00001_00004=8)))
c Both direct and order encoding.
c Var 'aux494' order represents '0' with '12191'
c Var 'aux494' direct represents '0' with '12191'
c Var 'aux494' order represents '1' with '12192'
-12191 12192 0
c Var 'aux494' direct represents '1' with '12193'
12191 -12192 12193 0
-12193 12192 0
-12193 -12191 0
c Var 'aux494' direct represents '2' with '-12192'
12191 12193 -12192 0
c Encoding variable: aux495 with domain: int(0..2) (representing constraint ((field_00001_00006=8) + (field_00001_00005=8)))
c Both direct and order encoding.
c Var 'aux495' order represents '0' with '12194'
c Var 'aux495' direct represents '0' with '12194'
c Var 'aux495' order represents '1' with '12195'
-12194 12195 0
c Var 'aux495' direct represents '1' with '12196'
12194 -12195 12196 0
-12196 12195 0
-12196 -12194 0
c Var 'aux495' direct represents '2' with '-12195'
12194 12196 -12195 0
c Encoding variable: aux496 with domain: int(0..3) (representing constraint ((field_00001_00003=8) + aux495))
c Both direct and order encoding.
c Var 'aux496' order represents '0' with '12197'
c Var 'aux496' direct represents '0' with '12197'
c Var 'aux496' order represents '1' with '12198'
-12197 12198 0
c Var 'aux496' direct represents '1' with '12199'
12197 -12198 12199 0
-12199 12198 0
-12199 -12197 0
c Var 'aux496' order represents '2' with '12200'
-12198 12200 0
c Var 'aux496' direct represents '2' with '12201'
12198 -12200 12201 0
-12201 12200 0
-12201 -12198 0
c Var 'aux496' direct represents '3' with '-12200'
12197 12199 12201 -12200 0
c Encoding variable: aux497 with domain: int(0..4) (representing constraint (aux492 + aux494))
c Both direct and order encoding.
c Var 'aux497' order represents '0' with '12202'
c Var 'aux497' direct represents '0' with '12202'
c Var 'aux497' order represents '1' with '12203'
-12202 12203 0
c Var 'aux497' direct represents '1' with '12204'
12202 -12203 12204 0
-12204 12203 0
-12204 -12202 0
c Var 'aux497' order represents '2' with '12205'
-12203 12205 0
c Var 'aux497' direct represents '2' with '12206'
12203 -12205 12206 0
-12206 12205 0
-12206 -12203 0
c Var 'aux497' order represents '3' with '12207'
-12205 12207 0
c Var 'aux497' direct represents '3' with '12208'
12205 -12207 12208 0
-12208 12207 0
-12208 -12205 0
c Var 'aux497' direct represents '4' with '-12207'
12202 12204 12206 12208 -12207 0
c Encoding variable: aux498 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux498' order represents '0' with '12209'
c Var 'aux498' direct represents '0' with '12209'
c Var 'aux498' order represents '1' with '12210'
-12209 12210 0
c Var 'aux498' direct represents '1' with '12211'
12209 -12210 12211 0
-12211 12210 0
-12211 -12209 0
c Var 'aux498' direct represents '2' with '-12210'
12209 12211 -12210 0
c Encoding variable: aux499 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00001_00002=9)))
c Both direct and order encoding.
c Var 'aux499' order represents '0' with '12212'
c Var 'aux499' direct represents '0' with '12212'
c Var 'aux499' order represents '1' with '12213'
-12212 12213 0
c Var 'aux499' direct represents '1' with '12214'
12212 -12213 12214 0
-12214 12213 0
-12214 -12212 0
c Var 'aux499' direct represents '2' with '-12213'
12212 12214 -12213 0
c Encoding variable: aux500 with domain: int(0..2) (representing constraint ((field_00001_00007=9) + (field_00001_00004=9)))
c Both direct and order encoding.
c Var 'aux500' order represents '0' with '12215'
c Var 'aux500' direct represents '0' with '12215'
c Var 'aux500' order represents '1' with '12216'
-12215 12216 0
c Var 'aux500' direct represents '1' with '12217'
12215 -12216 12217 0
-12217 12216 0
-12217 -12215 0
c Var 'aux500' direct represents '2' with '-12216'
12215 12217 -12216 0
c Encoding variable: aux501 with domain: int(0..2) (representing constraint ((field_00001_00006=9) + (field_00001_00005=9)))
c Both direct and order encoding.
c Var 'aux501' order represents '0' with '12218'
c Var 'aux501' direct represents '0' with '12218'
c Var 'aux501' order represents '1' with '12219'
-12218 12219 0
c Var 'aux501' direct represents '1' with '12220'
12218 -12219 12220 0
-12220 12219 0
-12220 -12218 0
c Var 'aux501' direct represents '2' with '-12219'
12218 12220 -12219 0
c Encoding variable: aux502 with domain: int(0..3) (representing constraint ((field_00001_00003=9) + aux501))
c Both direct and order encoding.
c Var 'aux502' order represents '0' with '12221'
c Var 'aux502' direct represents '0' with '12221'
c Var 'aux502' order represents '1' with '12222'
-12221 12222 0
c Var 'aux502' direct represents '1' with '12223'
12221 -12222 12223 0
-12223 12222 0
-12223 -12221 0
c Var 'aux502' order represents '2' with '12224'
-12222 12224 0
c Var 'aux502' direct represents '2' with '12225'
12222 -12224 12225 0
-12225 12224 0
-12225 -12222 0
c Var 'aux502' direct represents '3' with '-12224'
12221 12223 12225 -12224 0
c Encoding variable: aux503 with domain: int(0..4) (representing constraint (aux498 + aux500))
c Both direct and order encoding.
c Var 'aux503' order represents '0' with '12226'
c Var 'aux503' direct represents '0' with '12226'
c Var 'aux503' order represents '1' with '12227'
-12226 12227 0
c Var 'aux503' direct represents '1' with '12228'
12226 -12227 12228 0
-12228 12227 0
-12228 -12226 0
c Var 'aux503' order represents '2' with '12229'
-12227 12229 0
c Var 'aux503' direct represents '2' with '12230'
12227 -12229 12230 0
-12230 12229 0
-12230 -12227 0
c Var 'aux503' order represents '3' with '12231'
-12229 12231 0
c Var 'aux503' direct represents '3' with '12232'
12229 -12231 12232 0
-12232 12231 0
-12232 -12229 0
c Var 'aux503' direct represents '4' with '-12231'
12226 12228 12230 12232 -12231 0
c Encoding variable: aux504 with domain: int(0..2) (representing constraint ((field_00002_00001=1) + (field_00002_00009=1)))
c Both direct and order encoding.
c Var 'aux504' order represents '0' with '12233'
c Var 'aux504' direct represents '0' with '12233'
c Var 'aux504' order represents '1' with '12234'
-12233 12234 0
c Var 'aux504' direct represents '1' with '12235'
12233 -12234 12235 0
-12235 12234 0
-12235 -12233 0
c Var 'aux504' direct represents '2' with '-12234'
12233 12235 -12234 0
c Encoding variable: aux505 with domain: int(0..2) (representing constraint ((field_00002_00008=1) + (field_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux505' order represents '0' with '12236'
c Var 'aux505' direct represents '0' with '12236'
c Var 'aux505' order represents '1' with '12237'
-12236 12237 0
c Var 'aux505' direct represents '1' with '12238'
12236 -12237 12238 0
-12238 12237 0
-12238 -12236 0
c Var 'aux505' direct represents '2' with '-12237'
12236 12238 -12237 0
c Encoding variable: aux506 with domain: int(0..2) (representing constraint ((field_00002_00007=1) + (field_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux506' order represents '0' with '12239'
c Var 'aux506' direct represents '0' with '12239'
c Var 'aux506' order represents '1' with '12240'
-12239 12240 0
c Var 'aux506' direct represents '1' with '12241'
12239 -12240 12241 0
-12241 12240 0
-12241 -12239 0
c Var 'aux506' direct represents '2' with '-12240'
12239 12241 -12240 0
c Encoding variable: aux507 with domain: int(0..2) (representing constraint ((field_00002_00006=1) + (field_00002_00005=1)))
c Both direct and order encoding.
c Var 'aux507' order represents '0' with '12242'
c Var 'aux507' direct represents '0' with '12242'
c Var 'aux507' order represents '1' with '12243'
-12242 12243 0
c Var 'aux507' direct represents '1' with '12244'
12242 -12243 12244 0
-12244 12243 0
-12244 -12242 0
c Var 'aux507' direct represents '2' with '-12243'
12242 12244 -12243 0
c Encoding variable: aux508 with domain: int(0..3) (representing constraint ((field_00002_00003=1) + aux507))
c Both direct and order encoding.
c Var 'aux508' order represents '0' with '12245'
c Var 'aux508' direct represents '0' with '12245'
c Var 'aux508' order represents '1' with '12246'
-12245 12246 0
c Var 'aux508' direct represents '1' with '12247'
12245 -12246 12247 0
-12247 12246 0
-12247 -12245 0
c Var 'aux508' order represents '2' with '12248'
-12246 12248 0
c Var 'aux508' direct represents '2' with '12249'
12246 -12248 12249 0
-12249 12248 0
-12249 -12246 0
c Var 'aux508' direct represents '3' with '-12248'
12245 12247 12249 -12248 0
c Encoding variable: aux509 with domain: int(0..4) (representing constraint (aux504 + aux506))
c Both direct and order encoding.
c Var 'aux509' order represents '0' with '12250'
c Var 'aux509' direct represents '0' with '12250'
c Var 'aux509' order represents '1' with '12251'
-12250 12251 0
c Var 'aux509' direct represents '1' with '12252'
12250 -12251 12252 0
-12252 12251 0
-12252 -12250 0
c Var 'aux509' order represents '2' with '12253'
-12251 12253 0
c Var 'aux509' direct represents '2' with '12254'
12251 -12253 12254 0
-12254 12253 0
-12254 -12251 0
c Var 'aux509' order represents '3' with '12255'
-12253 12255 0
c Var 'aux509' direct represents '3' with '12256'
12253 -12255 12256 0
-12256 12255 0
-12256 -12253 0
c Var 'aux509' direct represents '4' with '-12255'
12250 12252 12254 12256 -12255 0
c Encoding variable: aux510 with domain: int(0..2) (representing constraint ((field_00002_00001=2) + (field_00002_00009=2)))
c Both direct and order encoding.
c Var 'aux510' order represents '0' with '12257'
c Var 'aux510' direct represents '0' with '12257'
c Var 'aux510' order represents '1' with '12258'
-12257 12258 0
c Var 'aux510' direct represents '1' with '12259'
12257 -12258 12259 0
-12259 12258 0
-12259 -12257 0
c Var 'aux510' direct represents '2' with '-12258'
12257 12259 -12258 0
c Encoding variable: aux511 with domain: int(0..2) (representing constraint ((field_00002_00008=2) + (field_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux511' order represents '0' with '12260'
c Var 'aux511' direct represents '0' with '12260'
c Var 'aux511' order represents '1' with '12261'
-12260 12261 0
c Var 'aux511' direct represents '1' with '12262'
12260 -12261 12262 0
-12262 12261 0
-12262 -12260 0
c Var 'aux511' direct represents '2' with '-12261'
12260 12262 -12261 0
c Encoding variable: aux512 with domain: int(0..2) (representing constraint ((field_00002_00007=2) + (field_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux512' order represents '0' with '12263'
c Var 'aux512' direct represents '0' with '12263'
c Var 'aux512' order represents '1' with '12264'
-12263 12264 0
c Var 'aux512' direct represents '1' with '12265'
12263 -12264 12265 0
-12265 12264 0
-12265 -12263 0
c Var 'aux512' direct represents '2' with '-12264'
12263 12265 -12264 0
c Encoding variable: aux513 with domain: int(0..2) (representing constraint ((field_00002_00006=2) + (field_00002_00005=2)))
c Both direct and order encoding.
c Var 'aux513' order represents '0' with '12266'
c Var 'aux513' direct represents '0' with '12266'
c Var 'aux513' order represents '1' with '12267'
-12266 12267 0
c Var 'aux513' direct represents '1' with '12268'
12266 -12267 12268 0
-12268 12267 0
-12268 -12266 0
c Var 'aux513' direct represents '2' with '-12267'
12266 12268 -12267 0
c Encoding variable: aux514 with domain: int(0..3) (representing constraint ((field_00002_00003=2) + aux513))
c Both direct and order encoding.
c Var 'aux514' order represents '0' with '12269'
c Var 'aux514' direct represents '0' with '12269'
c Var 'aux514' order represents '1' with '12270'
-12269 12270 0
c Var 'aux514' direct represents '1' with '12271'
12269 -12270 12271 0
-12271 12270 0
-12271 -12269 0
c Var 'aux514' order represents '2' with '12272'
-12270 12272 0
c Var 'aux514' direct represents '2' with '12273'
12270 -12272 12273 0
-12273 12272 0
-12273 -12270 0
c Var 'aux514' direct represents '3' with '-12272'
12269 12271 12273 -12272 0
c Encoding variable: aux515 with domain: int(0..4) (representing constraint (aux510 + aux512))
c Both direct and order encoding.
c Var 'aux515' order represents '0' with '12274'
c Var 'aux515' direct represents '0' with '12274'
c Var 'aux515' order represents '1' with '12275'
-12274 12275 0
c Var 'aux515' direct represents '1' with '12276'
12274 -12275 12276 0
-12276 12275 0
-12276 -12274 0
c Var 'aux515' order represents '2' with '12277'
-12275 12277 0
c Var 'aux515' direct represents '2' with '12278'
12275 -12277 12278 0
-12278 12277 0
-12278 -12275 0
c Var 'aux515' order represents '3' with '12279'
-12277 12279 0
c Var 'aux515' direct represents '3' with '12280'
12277 -12279 12280 0
-12280 12279 0
-12280 -12277 0
c Var 'aux515' direct represents '4' with '-12279'
12274 12276 12278 12280 -12279 0
c Encoding variable: aux516 with domain: int(0..2) (representing constraint ((field_00002_00001=3) + (field_00002_00009=3)))
c Both direct and order encoding.
c Var 'aux516' order represents '0' with '12281'
c Var 'aux516' direct represents '0' with '12281'
c Var 'aux516' order represents '1' with '12282'
-12281 12282 0
c Var 'aux516' direct represents '1' with '12283'
12281 -12282 12283 0
-12283 12282 0
-12283 -12281 0
c Var 'aux516' direct represents '2' with '-12282'
12281 12283 -12282 0
c Encoding variable: aux517 with domain: int(0..2) (representing constraint ((field_00002_00008=3) + (field_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux517' order represents '0' with '12284'
c Var 'aux517' direct represents '0' with '12284'
c Var 'aux517' order represents '1' with '12285'
-12284 12285 0
c Var 'aux517' direct represents '1' with '12286'
12284 -12285 12286 0
-12286 12285 0
-12286 -12284 0
c Var 'aux517' direct represents '2' with '-12285'
12284 12286 -12285 0
c Encoding variable: aux518 with domain: int(0..2) (representing constraint ((field_00002_00007=3) + (field_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux518' order represents '0' with '12287'
c Var 'aux518' direct represents '0' with '12287'
c Var 'aux518' order represents '1' with '12288'
-12287 12288 0
c Var 'aux518' direct represents '1' with '12289'
12287 -12288 12289 0
-12289 12288 0
-12289 -12287 0
c Var 'aux518' direct represents '2' with '-12288'
12287 12289 -12288 0
c Encoding variable: aux519 with domain: int(0..2) (representing constraint ((field_00002_00006=3) + (field_00002_00005=3)))
c Both direct and order encoding.
c Var 'aux519' order represents '0' with '12290'
c Var 'aux519' direct represents '0' with '12290'
c Var 'aux519' order represents '1' with '12291'
-12290 12291 0
c Var 'aux519' direct represents '1' with '12292'
12290 -12291 12292 0
-12292 12291 0
-12292 -12290 0
c Var 'aux519' direct represents '2' with '-12291'
12290 12292 -12291 0
c Encoding variable: aux520 with domain: int(0..3) (representing constraint ((field_00002_00003=3) + aux519))
c Both direct and order encoding.
c Var 'aux520' order represents '0' with '12293'
c Var 'aux520' direct represents '0' with '12293'
c Var 'aux520' order represents '1' with '12294'
-12293 12294 0
c Var 'aux520' direct represents '1' with '12295'
12293 -12294 12295 0
-12295 12294 0
-12295 -12293 0
c Var 'aux520' order represents '2' with '12296'
-12294 12296 0
c Var 'aux520' direct represents '2' with '12297'
12294 -12296 12297 0
-12297 12296 0
-12297 -12294 0
c Var 'aux520' direct represents '3' with '-12296'
12293 12295 12297 -12296 0
c Encoding variable: aux521 with domain: int(0..4) (representing constraint (aux516 + aux518))
c Both direct and order encoding.
c Var 'aux521' order represents '0' with '12298'
c Var 'aux521' direct represents '0' with '12298'
c Var 'aux521' order represents '1' with '12299'
-12298 12299 0
c Var 'aux521' direct represents '1' with '12300'
12298 -12299 12300 0
-12300 12299 0
-12300 -12298 0
c Var 'aux521' order represents '2' with '12301'
-12299 12301 0
c Var 'aux521' direct represents '2' with '12302'
12299 -12301 12302 0
-12302 12301 0
-12302 -12299 0
c Var 'aux521' order represents '3' with '12303'
-12301 12303 0
c Var 'aux521' direct represents '3' with '12304'
12301 -12303 12304 0
-12304 12303 0
-12304 -12301 0
c Var 'aux521' direct represents '4' with '-12303'
12298 12300 12302 12304 -12303 0
c Encoding variable: aux522 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00002_00009=4)))
c Both direct and order encoding.
c Var 'aux522' order represents '0' with '12305'
c Var 'aux522' direct represents '0' with '12305'
c Var 'aux522' order represents '1' with '12306'
-12305 12306 0
c Var 'aux522' direct represents '1' with '12307'
12305 -12306 12307 0
-12307 12306 0
-12307 -12305 0
c Var 'aux522' direct represents '2' with '-12306'
12305 12307 -12306 0
c Encoding variable: aux523 with domain: int(0..2) (representing constraint ((field_00002_00008=4) + (field_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux523' order represents '0' with '12308'
c Var 'aux523' direct represents '0' with '12308'
c Var 'aux523' order represents '1' with '12309'
-12308 12309 0
c Var 'aux523' direct represents '1' with '12310'
12308 -12309 12310 0
-12310 12309 0
-12310 -12308 0
c Var 'aux523' direct represents '2' with '-12309'
12308 12310 -12309 0
c Encoding variable: aux524 with domain: int(0..2) (representing constraint ((field_00002_00007=4) + (field_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux524' order represents '0' with '12311'
c Var 'aux524' direct represents '0' with '12311'
c Var 'aux524' order represents '1' with '12312'
-12311 12312 0
c Var 'aux524' direct represents '1' with '12313'
12311 -12312 12313 0
-12313 12312 0
-12313 -12311 0
c Var 'aux524' direct represents '2' with '-12312'
12311 12313 -12312 0
c Encoding variable: aux525 with domain: int(0..2) (representing constraint ((field_00002_00006=4) + (field_00002_00005=4)))
c Both direct and order encoding.
c Var 'aux525' order represents '0' with '12314'
c Var 'aux525' direct represents '0' with '12314'
c Var 'aux525' order represents '1' with '12315'
-12314 12315 0
c Var 'aux525' direct represents '1' with '12316'
12314 -12315 12316 0
-12316 12315 0
-12316 -12314 0
c Var 'aux525' direct represents '2' with '-12315'
12314 12316 -12315 0
c Encoding variable: aux526 with domain: int(0..3) (representing constraint ((field_00002_00003=4) + aux525))
c Both direct and order encoding.
c Var 'aux526' order represents '0' with '12317'
c Var 'aux526' direct represents '0' with '12317'
c Var 'aux526' order represents '1' with '12318'
-12317 12318 0
c Var 'aux526' direct represents '1' with '12319'
12317 -12318 12319 0
-12319 12318 0
-12319 -12317 0
c Var 'aux526' order represents '2' with '12320'
-12318 12320 0
c Var 'aux526' direct represents '2' with '12321'
12318 -12320 12321 0
-12321 12320 0
-12321 -12318 0
c Var 'aux526' direct represents '3' with '-12320'
12317 12319 12321 -12320 0
c Encoding variable: aux527 with domain: int(0..4) (representing constraint (aux522 + aux524))
c Both direct and order encoding.
c Var 'aux527' order represents '0' with '12322'
c Var 'aux527' direct represents '0' with '12322'
c Var 'aux527' order represents '1' with '12323'
-12322 12323 0
c Var 'aux527' direct represents '1' with '12324'
12322 -12323 12324 0
-12324 12323 0
-12324 -12322 0
c Var 'aux527' order represents '2' with '12325'
-12323 12325 0
c Var 'aux527' direct represents '2' with '12326'
12323 -12325 12326 0
-12326 12325 0
-12326 -12323 0
c Var 'aux527' order represents '3' with '12327'
-12325 12327 0
c Var 'aux527' direct represents '3' with '12328'
12325 -12327 12328 0
-12328 12327 0
-12328 -12325 0
c Var 'aux527' direct represents '4' with '-12327'
12322 12324 12326 12328 -12327 0
c Encoding variable: aux528 with domain: int(0..2) (representing constraint ((field_00002_00001=5) + (field_00002_00009=5)))
c Both direct and order encoding.
c Var 'aux528' order represents '0' with '12329'
c Var 'aux528' direct represents '0' with '12329'
c Var 'aux528' order represents '1' with '12330'
-12329 12330 0
c Var 'aux528' direct represents '1' with '12331'
12329 -12330 12331 0
-12331 12330 0
-12331 -12329 0
c Var 'aux528' direct represents '2' with '-12330'
12329 12331 -12330 0
c Encoding variable: aux529 with domain: int(0..2) (representing constraint ((field_00002_00008=5) + (field_00002_00002=5)))
c Both direct and order encoding.
c Var 'aux529' order represents '0' with '12332'
c Var 'aux529' direct represents '0' with '12332'
c Var 'aux529' order represents '1' with '12333'
-12332 12333 0
c Var 'aux529' direct represents '1' with '12334'
12332 -12333 12334 0
-12334 12333 0
-12334 -12332 0
c Var 'aux529' direct represents '2' with '-12333'
12332 12334 -12333 0
c Encoding variable: aux530 with domain: int(0..2) (representing constraint ((field_00002_00007=5) + (field_00002_00004=5)))
c Both direct and order encoding.
c Var 'aux530' order represents '0' with '12335'
c Var 'aux530' direct represents '0' with '12335'
c Var 'aux530' order represents '1' with '12336'
-12335 12336 0
c Var 'aux530' direct represents '1' with '12337'
12335 -12336 12337 0
-12337 12336 0
-12337 -12335 0
c Var 'aux530' direct represents '2' with '-12336'
12335 12337 -12336 0
c Encoding variable: aux531 with domain: int(0..2) (representing constraint ((field_00002_00006=5) + (field_00002_00005=5)))
c Both direct and order encoding.
c Var 'aux531' order represents '0' with '12338'
c Var 'aux531' direct represents '0' with '12338'
c Var 'aux531' order represents '1' with '12339'
-12338 12339 0
c Var 'aux531' direct represents '1' with '12340'
12338 -12339 12340 0
-12340 12339 0
-12340 -12338 0
c Var 'aux531' direct represents '2' with '-12339'
12338 12340 -12339 0
c Encoding variable: aux532 with domain: int(0..3) (representing constraint ((field_00002_00003=5) + aux531))
c Both direct and order encoding.
c Var 'aux532' order represents '0' with '12341'
c Var 'aux532' direct represents '0' with '12341'
c Var 'aux532' order represents '1' with '12342'
-12341 12342 0
c Var 'aux532' direct represents '1' with '12343'
12341 -12342 12343 0
-12343 12342 0
-12343 -12341 0
c Var 'aux532' order represents '2' with '12344'
-12342 12344 0
c Var 'aux532' direct represents '2' with '12345'
12342 -12344 12345 0
-12345 12344 0
-12345 -12342 0
c Var 'aux532' direct represents '3' with '-12344'
12341 12343 12345 -12344 0
c Encoding variable: aux533 with domain: int(0..4) (representing constraint (aux528 + aux530))
c Both direct and order encoding.
c Var 'aux533' order represents '0' with '12346'
c Var 'aux533' direct represents '0' with '12346'
c Var 'aux533' order represents '1' with '12347'
-12346 12347 0
c Var 'aux533' direct represents '1' with '12348'
12346 -12347 12348 0
-12348 12347 0
-12348 -12346 0
c Var 'aux533' order represents '2' with '12349'
-12347 12349 0
c Var 'aux533' direct represents '2' with '12350'
12347 -12349 12350 0
-12350 12349 0
-12350 -12347 0
c Var 'aux533' order represents '3' with '12351'
-12349 12351 0
c Var 'aux533' direct represents '3' with '12352'
12349 -12351 12352 0
-12352 12351 0
-12352 -12349 0
c Var 'aux533' direct represents '4' with '-12351'
12346 12348 12350 12352 -12351 0
c Encoding variable: aux534 with domain: int(0..2) (representing constraint ((field_00002_00001=6) + (field_00002_00009=6)))
c Both direct and order encoding.
c Var 'aux534' order represents '0' with '12353'
c Var 'aux534' direct represents '0' with '12353'
c Var 'aux534' order represents '1' with '12354'
-12353 12354 0
c Var 'aux534' direct represents '1' with '12355'
12353 -12354 12355 0
-12355 12354 0
-12355 -12353 0
c Var 'aux534' direct represents '2' with '-12354'
12353 12355 -12354 0
c Encoding variable: aux535 with domain: int(0..2) (representing constraint ((field_00002_00008=6) + (field_00002_00002=6)))
c Both direct and order encoding.
c Var 'aux535' order represents '0' with '12356'
c Var 'aux535' direct represents '0' with '12356'
c Var 'aux535' order represents '1' with '12357'
-12356 12357 0
c Var 'aux535' direct represents '1' with '12358'
12356 -12357 12358 0
-12358 12357 0
-12358 -12356 0
c Var 'aux535' direct represents '2' with '-12357'
12356 12358 -12357 0
c Encoding variable: aux536 with domain: int(0..2) (representing constraint ((field_00002_00007=6) + (field_00002_00004=6)))
c Both direct and order encoding.
c Var 'aux536' order represents '0' with '12359'
c Var 'aux536' direct represents '0' with '12359'
c Var 'aux536' order represents '1' with '12360'
-12359 12360 0
c Var 'aux536' direct represents '1' with '12361'
12359 -12360 12361 0
-12361 12360 0
-12361 -12359 0
c Var 'aux536' direct represents '2' with '-12360'
12359 12361 -12360 0
c Encoding variable: aux537 with domain: int(0..2) (representing constraint ((field_00002_00006=6) + (field_00002_00005=6)))
c Both direct and order encoding.
c Var 'aux537' order represents '0' with '12362'
c Var 'aux537' direct represents '0' with '12362'
c Var 'aux537' order represents '1' with '12363'
-12362 12363 0
c Var 'aux537' direct represents '1' with '12364'
12362 -12363 12364 0
-12364 12363 0
-12364 -12362 0
c Var 'aux537' direct represents '2' with '-12363'
12362 12364 -12363 0
c Encoding variable: aux538 with domain: int(0..3) (representing constraint ((field_00002_00003=6) + aux537))
c Both direct and order encoding.
c Var 'aux538' order represents '0' with '12365'
c Var 'aux538' direct represents '0' with '12365'
c Var 'aux538' order represents '1' with '12366'
-12365 12366 0
c Var 'aux538' direct represents '1' with '12367'
12365 -12366 12367 0
-12367 12366 0
-12367 -12365 0
c Var 'aux538' order represents '2' with '12368'
-12366 12368 0
c Var 'aux538' direct represents '2' with '12369'
12366 -12368 12369 0
-12369 12368 0
-12369 -12366 0
c Var 'aux538' direct represents '3' with '-12368'
12365 12367 12369 -12368 0
c Encoding variable: aux539 with domain: int(0..4) (representing constraint (aux534 + aux536))
c Both direct and order encoding.
c Var 'aux539' order represents '0' with '12370'
c Var 'aux539' direct represents '0' with '12370'
c Var 'aux539' order represents '1' with '12371'
-12370 12371 0
c Var 'aux539' direct represents '1' with '12372'
12370 -12371 12372 0
-12372 12371 0
-12372 -12370 0
c Var 'aux539' order represents '2' with '12373'
-12371 12373 0
c Var 'aux539' direct represents '2' with '12374'
12371 -12373 12374 0
-12374 12373 0
-12374 -12371 0
c Var 'aux539' order represents '3' with '12375'
-12373 12375 0
c Var 'aux539' direct represents '3' with '12376'
12373 -12375 12376 0
-12376 12375 0
-12376 -12373 0
c Var 'aux539' direct represents '4' with '-12375'
12370 12372 12374 12376 -12375 0
c Encoding variable: aux540 with domain: int(0..2) (representing constraint ((field_00002_00001=7) + (field_00002_00009=7)))
c Both direct and order encoding.
c Var 'aux540' order represents '0' with '12377'
c Var 'aux540' direct represents '0' with '12377'
c Var 'aux540' order represents '1' with '12378'
-12377 12378 0
c Var 'aux540' direct represents '1' with '12379'
12377 -12378 12379 0
-12379 12378 0
-12379 -12377 0
c Var 'aux540' direct represents '2' with '-12378'
12377 12379 -12378 0
c Encoding variable: aux541 with domain: int(0..2) (representing constraint ((field_00002_00008=7) + (field_00002_00002=7)))
c Both direct and order encoding.
c Var 'aux541' order represents '0' with '12380'
c Var 'aux541' direct represents '0' with '12380'
c Var 'aux541' order represents '1' with '12381'
-12380 12381 0
c Var 'aux541' direct represents '1' with '12382'
12380 -12381 12382 0
-12382 12381 0
-12382 -12380 0
c Var 'aux541' direct represents '2' with '-12381'
12380 12382 -12381 0
c Encoding variable: aux542 with domain: int(0..2) (representing constraint ((field_00002_00007=7) + (field_00002_00004=7)))
c Both direct and order encoding.
c Var 'aux542' order represents '0' with '12383'
c Var 'aux542' direct represents '0' with '12383'
c Var 'aux542' order represents '1' with '12384'
-12383 12384 0
c Var 'aux542' direct represents '1' with '12385'
12383 -12384 12385 0
-12385 12384 0
-12385 -12383 0
c Var 'aux542' direct represents '2' with '-12384'
12383 12385 -12384 0
c Encoding variable: aux543 with domain: int(0..2) (representing constraint ((field_00002_00006=7) + (field_00002_00005=7)))
c Both direct and order encoding.
c Var 'aux543' order represents '0' with '12386'
c Var 'aux543' direct represents '0' with '12386'
c Var 'aux543' order represents '1' with '12387'
-12386 12387 0
c Var 'aux543' direct represents '1' with '12388'
12386 -12387 12388 0
-12388 12387 0
-12388 -12386 0
c Var 'aux543' direct represents '2' with '-12387'
12386 12388 -12387 0
c Encoding variable: aux544 with domain: int(0..3) (representing constraint ((field_00002_00003=7) + aux543))
c Both direct and order encoding.
c Var 'aux544' order represents '0' with '12389'
c Var 'aux544' direct represents '0' with '12389'
c Var 'aux544' order represents '1' with '12390'
-12389 12390 0
c Var 'aux544' direct represents '1' with '12391'
12389 -12390 12391 0
-12391 12390 0
-12391 -12389 0
c Var 'aux544' order represents '2' with '12392'
-12390 12392 0
c Var 'aux544' direct represents '2' with '12393'
12390 -12392 12393 0
-12393 12392 0
-12393 -12390 0
c Var 'aux544' direct represents '3' with '-12392'
12389 12391 12393 -12392 0
c Encoding variable: aux545 with domain: int(0..4) (representing constraint (aux540 + aux542))
c Both direct and order encoding.
c Var 'aux545' order represents '0' with '12394'
c Var 'aux545' direct represents '0' with '12394'
c Var 'aux545' order represents '1' with '12395'
-12394 12395 0
c Var 'aux545' direct represents '1' with '12396'
12394 -12395 12396 0
-12396 12395 0
-12396 -12394 0
c Var 'aux545' order represents '2' with '12397'
-12395 12397 0
c Var 'aux545' direct represents '2' with '12398'
12395 -12397 12398 0
-12398 12397 0
-12398 -12395 0
c Var 'aux545' order represents '3' with '12399'
-12397 12399 0
c Var 'aux545' direct represents '3' with '12400'
12397 -12399 12400 0
-12400 12399 0
-12400 -12397 0
c Var 'aux545' direct represents '4' with '-12399'
12394 12396 12398 12400 -12399 0
c Encoding variable: aux546 with domain: int(0..2) (representing constraint ((field_00002_00001=8) + (field_00002_00009=8)))
c Both direct and order encoding.
c Var 'aux546' order represents '0' with '12401'
c Var 'aux546' direct represents '0' with '12401'
c Var 'aux546' order represents '1' with '12402'
-12401 12402 0
c Var 'aux546' direct represents '1' with '12403'
12401 -12402 12403 0
-12403 12402 0
-12403 -12401 0
c Var 'aux546' direct represents '2' with '-12402'
12401 12403 -12402 0
c Encoding variable: aux547 with domain: int(0..2) (representing constraint ((field_00002_00008=8) + (field_00002_00002=8)))
c Both direct and order encoding.
c Var 'aux547' order represents '0' with '12404'
c Var 'aux547' direct represents '0' with '12404'
c Var 'aux547' order represents '1' with '12405'
-12404 12405 0
c Var 'aux547' direct represents '1' with '12406'
12404 -12405 12406 0
-12406 12405 0
-12406 -12404 0
c Var 'aux547' direct represents '2' with '-12405'
12404 12406 -12405 0
c Encoding variable: aux548 with domain: int(0..2) (representing constraint ((field_00002_00007=8) + (field_00002_00004=8)))
c Both direct and order encoding.
c Var 'aux548' order represents '0' with '12407'
c Var 'aux548' direct represents '0' with '12407'
c Var 'aux548' order represents '1' with '12408'
-12407 12408 0
c Var 'aux548' direct represents '1' with '12409'
12407 -12408 12409 0
-12409 12408 0
-12409 -12407 0
c Var 'aux548' direct represents '2' with '-12408'
12407 12409 -12408 0
c Encoding variable: aux549 with domain: int(0..2) (representing constraint ((field_00002_00006=8) + (field_00002_00005=8)))
c Both direct and order encoding.
c Var 'aux549' order represents '0' with '12410'
c Var 'aux549' direct represents '0' with '12410'
c Var 'aux549' order represents '1' with '12411'
-12410 12411 0
c Var 'aux549' direct represents '1' with '12412'
12410 -12411 12412 0
-12412 12411 0
-12412 -12410 0
c Var 'aux549' direct represents '2' with '-12411'
12410 12412 -12411 0
c Encoding variable: aux550 with domain: int(0..3) (representing constraint ((field_00002_00003=8) + aux549))
c Both direct and order encoding.
c Var 'aux550' order represents '0' with '12413'
c Var 'aux550' direct represents '0' with '12413'
c Var 'aux550' order represents '1' with '12414'
-12413 12414 0
c Var 'aux550' direct represents '1' with '12415'
12413 -12414 12415 0
-12415 12414 0
-12415 -12413 0
c Var 'aux550' order represents '2' with '12416'
-12414 12416 0
c Var 'aux550' direct represents '2' with '12417'
12414 -12416 12417 0
-12417 12416 0
-12417 -12414 0
c Var 'aux550' direct represents '3' with '-12416'
12413 12415 12417 -12416 0
c Encoding variable: aux551 with domain: int(0..4) (representing constraint (aux546 + aux548))
c Both direct and order encoding.
c Var 'aux551' order represents '0' with '12418'
c Var 'aux551' direct represents '0' with '12418'
c Var 'aux551' order represents '1' with '12419'
-12418 12419 0
c Var 'aux551' direct represents '1' with '12420'
12418 -12419 12420 0
-12420 12419 0
-12420 -12418 0
c Var 'aux551' order represents '2' with '12421'
-12419 12421 0
c Var 'aux551' direct represents '2' with '12422'
12419 -12421 12422 0
-12422 12421 0
-12422 -12419 0
c Var 'aux551' order represents '3' with '12423'
-12421 12423 0
c Var 'aux551' direct represents '3' with '12424'
12421 -12423 12424 0
-12424 12423 0
-12424 -12421 0
c Var 'aux551' direct represents '4' with '-12423'
12418 12420 12422 12424 -12423 0
c Encoding variable: aux552 with domain: int(0..2) (representing constraint ((field_00002_00001=9) + (field_00002_00009=9)))
c Both direct and order encoding.
c Var 'aux552' order represents '0' with '12425'
c Var 'aux552' direct represents '0' with '12425'
c Var 'aux552' order represents '1' with '12426'
-12425 12426 0
c Var 'aux552' direct represents '1' with '12427'
12425 -12426 12427 0
-12427 12426 0
-12427 -12425 0
c Var 'aux552' direct represents '2' with '-12426'
12425 12427 -12426 0
c Encoding variable: aux553 with domain: int(0..2) (representing constraint ((field_00002_00008=9) + (field_00002_00002=9)))
c Both direct and order encoding.
c Var 'aux553' order represents '0' with '12428'
c Var 'aux553' direct represents '0' with '12428'
c Var 'aux553' order represents '1' with '12429'
-12428 12429 0
c Var 'aux553' direct represents '1' with '12430'
12428 -12429 12430 0
-12430 12429 0
-12430 -12428 0
c Var 'aux553' direct represents '2' with '-12429'
12428 12430 -12429 0
c Encoding variable: aux554 with domain: int(0..2) (representing constraint ((field_00002_00007=9) + (field_00002_00004=9)))
c Both direct and order encoding.
c Var 'aux554' order represents '0' with '12431'
c Var 'aux554' direct represents '0' with '12431'
c Var 'aux554' order represents '1' with '12432'
-12431 12432 0
c Var 'aux554' direct represents '1' with '12433'
12431 -12432 12433 0
-12433 12432 0
-12433 -12431 0
c Var 'aux554' direct represents '2' with '-12432'
12431 12433 -12432 0
c Encoding variable: aux555 with domain: int(0..2) (representing constraint ((field_00002_00006=9) + (field_00002_00005=9)))
c Both direct and order encoding.
c Var 'aux555' order represents '0' with '12434'
c Var 'aux555' direct represents '0' with '12434'
c Var 'aux555' order represents '1' with '12435'
-12434 12435 0
c Var 'aux555' direct represents '1' with '12436'
12434 -12435 12436 0
-12436 12435 0
-12436 -12434 0
c Var 'aux555' direct represents '2' with '-12435'
12434 12436 -12435 0
c Encoding variable: aux556 with domain: int(0..3) (representing constraint ((field_00002_00003=9) + aux555))
c Both direct and order encoding.
c Var 'aux556' order represents '0' with '12437'
c Var 'aux556' direct represents '0' with '12437'
c Var 'aux556' order represents '1' with '12438'
-12437 12438 0
c Var 'aux556' direct represents '1' with '12439'
12437 -12438 12439 0
-12439 12438 0
-12439 -12437 0
c Var 'aux556' order represents '2' with '12440'
-12438 12440 0
c Var 'aux556' direct represents '2' with '12441'
12438 -12440 12441 0
-12441 12440 0
-12441 -12438 0
c Var 'aux556' direct represents '3' with '-12440'
12437 12439 12441 -12440 0
c Encoding variable: aux557 with domain: int(0..4) (representing constraint (aux552 + aux554))
c Both direct and order encoding.
c Var 'aux557' order represents '0' with '12442'
c Var 'aux557' direct represents '0' with '12442'
c Var 'aux557' order represents '1' with '12443'
-12442 12443 0
c Var 'aux557' direct represents '1' with '12444'
12442 -12443 12444 0
-12444 12443 0
-12444 -12442 0
c Var 'aux557' order represents '2' with '12445'
-12443 12445 0
c Var 'aux557' direct represents '2' with '12446'
12443 -12445 12446 0
-12446 12445 0
-12446 -12443 0
c Var 'aux557' order represents '3' with '12447'
-12445 12447 0
c Var 'aux557' direct represents '3' with '12448'
12445 -12447 12448 0
-12448 12447 0
-12448 -12445 0
c Var 'aux557' direct represents '4' with '-12447'
12442 12444 12446 12448 -12447 0
c Encoding variable: aux558 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00003_00009=1)))
c Both direct and order encoding.
c Var 'aux558' order represents '0' with '12449'
c Var 'aux558' direct represents '0' with '12449'
c Var 'aux558' order represents '1' with '12450'
-12449 12450 0
c Var 'aux558' direct represents '1' with '12451'
12449 -12450 12451 0
-12451 12450 0
-12451 -12449 0
c Var 'aux558' direct represents '2' with '-12450'
12449 12451 -12450 0
c Encoding variable: aux559 with domain: int(0..2) (representing constraint ((field_00003_00008=1) + (field_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux559' order represents '0' with '12452'
c Var 'aux559' direct represents '0' with '12452'
c Var 'aux559' order represents '1' with '12453'
-12452 12453 0
c Var 'aux559' direct represents '1' with '12454'
12452 -12453 12454 0
-12454 12453 0
-12454 -12452 0
c Var 'aux559' direct represents '2' with '-12453'
12452 12454 -12453 0
c Encoding variable: aux560 with domain: int(0..2) (representing constraint ((field_00003_00007=1) + (field_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux560' order represents '0' with '12455'
c Var 'aux560' direct represents '0' with '12455'
c Var 'aux560' order represents '1' with '12456'
-12455 12456 0
c Var 'aux560' direct represents '1' with '12457'
12455 -12456 12457 0
-12457 12456 0
-12457 -12455 0
c Var 'aux560' direct represents '2' with '-12456'
12455 12457 -12456 0
c Encoding variable: aux561 with domain: int(0..2) (representing constraint ((field_00003_00006=1) + (field_00003_00005=1)))
c Both direct and order encoding.
c Var 'aux561' order represents '0' with '12458'
c Var 'aux561' direct represents '0' with '12458'
c Var 'aux561' order represents '1' with '12459'
-12458 12459 0
c Var 'aux561' direct represents '1' with '12460'
12458 -12459 12460 0
-12460 12459 0
-12460 -12458 0
c Var 'aux561' direct represents '2' with '-12459'
12458 12460 -12459 0
c Encoding variable: aux562 with domain: int(0..3) (representing constraint ((field_00003_00003=1) + aux561))
c Both direct and order encoding.
c Var 'aux562' order represents '0' with '12461'
c Var 'aux562' direct represents '0' with '12461'
c Var 'aux562' order represents '1' with '12462'
-12461 12462 0
c Var 'aux562' direct represents '1' with '12463'
12461 -12462 12463 0
-12463 12462 0
-12463 -12461 0
c Var 'aux562' order represents '2' with '12464'
-12462 12464 0
c Var 'aux562' direct represents '2' with '12465'
12462 -12464 12465 0
-12465 12464 0
-12465 -12462 0
c Var 'aux562' direct represents '3' with '-12464'
12461 12463 12465 -12464 0
c Encoding variable: aux563 with domain: int(0..4) (representing constraint (aux558 + aux560))
c Both direct and order encoding.
c Var 'aux563' order represents '0' with '12466'
c Var 'aux563' direct represents '0' with '12466'
c Var 'aux563' order represents '1' with '12467'
-12466 12467 0
c Var 'aux563' direct represents '1' with '12468'
12466 -12467 12468 0
-12468 12467 0
-12468 -12466 0
c Var 'aux563' order represents '2' with '12469'
-12467 12469 0
c Var 'aux563' direct represents '2' with '12470'
12467 -12469 12470 0
-12470 12469 0
-12470 -12467 0
c Var 'aux563' order represents '3' with '12471'
-12469 12471 0
c Var 'aux563' direct represents '3' with '12472'
12469 -12471 12472 0
-12472 12471 0
-12472 -12469 0
c Var 'aux563' direct represents '4' with '-12471'
12466 12468 12470 12472 -12471 0
c Encoding variable: aux564 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00003_00009=2)))
c Both direct and order encoding.
c Var 'aux564' order represents '0' with '12473'
c Var 'aux564' direct represents '0' with '12473'
c Var 'aux564' order represents '1' with '12474'
-12473 12474 0
c Var 'aux564' direct represents '1' with '12475'
12473 -12474 12475 0
-12475 12474 0
-12475 -12473 0
c Var 'aux564' direct represents '2' with '-12474'
12473 12475 -12474 0
c Encoding variable: aux565 with domain: int(0..2) (representing constraint ((field_00003_00008=2) + (field_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux565' order represents '0' with '12476'
c Var 'aux565' direct represents '0' with '12476'
c Var 'aux565' order represents '1' with '12477'
-12476 12477 0
c Var 'aux565' direct represents '1' with '12478'
12476 -12477 12478 0
-12478 12477 0
-12478 -12476 0
c Var 'aux565' direct represents '2' with '-12477'
12476 12478 -12477 0
c Encoding variable: aux566 with domain: int(0..2) (representing constraint ((field_00003_00007=2) + (field_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux566' order represents '0' with '12479'
c Var 'aux566' direct represents '0' with '12479'
c Var 'aux566' order represents '1' with '12480'
-12479 12480 0
c Var 'aux566' direct represents '1' with '12481'
12479 -12480 12481 0
-12481 12480 0
-12481 -12479 0
c Var 'aux566' direct represents '2' with '-12480'
12479 12481 -12480 0
c Encoding variable: aux567 with domain: int(0..2) (representing constraint ((field_00003_00006=2) + (field_00003_00005=2)))
c Both direct and order encoding.
c Var 'aux567' order represents '0' with '12482'
c Var 'aux567' direct represents '0' with '12482'
c Var 'aux567' order represents '1' with '12483'
-12482 12483 0
c Var 'aux567' direct represents '1' with '12484'
12482 -12483 12484 0
-12484 12483 0
-12484 -12482 0
c Var 'aux567' direct represents '2' with '-12483'
12482 12484 -12483 0
c Encoding variable: aux568 with domain: int(0..3) (representing constraint ((field_00003_00003=2) + aux567))
c Both direct and order encoding.
c Var 'aux568' order represents '0' with '12485'
c Var 'aux568' direct represents '0' with '12485'
c Var 'aux568' order represents '1' with '12486'
-12485 12486 0
c Var 'aux568' direct represents '1' with '12487'
12485 -12486 12487 0
-12487 12486 0
-12487 -12485 0
c Var 'aux568' order represents '2' with '12488'
-12486 12488 0
c Var 'aux568' direct represents '2' with '12489'
12486 -12488 12489 0
-12489 12488 0
-12489 -12486 0
c Var 'aux568' direct represents '3' with '-12488'
12485 12487 12489 -12488 0
c Encoding variable: aux569 with domain: int(0..4) (representing constraint (aux564 + aux566))
c Both direct and order encoding.
c Var 'aux569' order represents '0' with '12490'
c Var 'aux569' direct represents '0' with '12490'
c Var 'aux569' order represents '1' with '12491'
-12490 12491 0
c Var 'aux569' direct represents '1' with '12492'
12490 -12491 12492 0
-12492 12491 0
-12492 -12490 0
c Var 'aux569' order represents '2' with '12493'
-12491 12493 0
c Var 'aux569' direct represents '2' with '12494'
12491 -12493 12494 0
-12494 12493 0
-12494 -12491 0
c Var 'aux569' order represents '3' with '12495'
-12493 12495 0
c Var 'aux569' direct represents '3' with '12496'
12493 -12495 12496 0
-12496 12495 0
-12496 -12493 0
c Var 'aux569' direct represents '4' with '-12495'
12490 12492 12494 12496 -12495 0
c Encoding variable: aux570 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00003_00009=3)))
c Both direct and order encoding.
c Var 'aux570' order represents '0' with '12497'
c Var 'aux570' direct represents '0' with '12497'
c Var 'aux570' order represents '1' with '12498'
-12497 12498 0
c Var 'aux570' direct represents '1' with '12499'
12497 -12498 12499 0
-12499 12498 0
-12499 -12497 0
c Var 'aux570' direct represents '2' with '-12498'
12497 12499 -12498 0
c Encoding variable: aux571 with domain: int(0..2) (representing constraint ((field_00003_00008=3) + (field_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux571' order represents '0' with '12500'
c Var 'aux571' direct represents '0' with '12500'
c Var 'aux571' order represents '1' with '12501'
-12500 12501 0
c Var 'aux571' direct represents '1' with '12502'
12500 -12501 12502 0
-12502 12501 0
-12502 -12500 0
c Var 'aux571' direct represents '2' with '-12501'
12500 12502 -12501 0
c Encoding variable: aux572 with domain: int(0..2) (representing constraint ((field_00003_00007=3) + (field_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux572' order represents '0' with '12503'
c Var 'aux572' direct represents '0' with '12503'
c Var 'aux572' order represents '1' with '12504'
-12503 12504 0
c Var 'aux572' direct represents '1' with '12505'
12503 -12504 12505 0
-12505 12504 0
-12505 -12503 0
c Var 'aux572' direct represents '2' with '-12504'
12503 12505 -12504 0
c Encoding variable: aux573 with domain: int(0..2) (representing constraint ((field_00003_00006=3) + (field_00003_00005=3)))
c Both direct and order encoding.
c Var 'aux573' order represents '0' with '12506'
c Var 'aux573' direct represents '0' with '12506'
c Var 'aux573' order represents '1' with '12507'
-12506 12507 0
c Var 'aux573' direct represents '1' with '12508'
12506 -12507 12508 0
-12508 12507 0
-12508 -12506 0
c Var 'aux573' direct represents '2' with '-12507'
12506 12508 -12507 0
c Encoding variable: aux574 with domain: int(0..3) (representing constraint ((field_00003_00003=3) + aux573))
c Both direct and order encoding.
c Var 'aux574' order represents '0' with '12509'
c Var 'aux574' direct represents '0' with '12509'
c Var 'aux574' order represents '1' with '12510'
-12509 12510 0
c Var 'aux574' direct represents '1' with '12511'
12509 -12510 12511 0
-12511 12510 0
-12511 -12509 0
c Var 'aux574' order represents '2' with '12512'
-12510 12512 0
c Var 'aux574' direct represents '2' with '12513'
12510 -12512 12513 0
-12513 12512 0
-12513 -12510 0
c Var 'aux574' direct represents '3' with '-12512'
12509 12511 12513 -12512 0
c Encoding variable: aux575 with domain: int(0..4) (representing constraint (aux570 + aux572))
c Both direct and order encoding.
c Var 'aux575' order represents '0' with '12514'
c Var 'aux575' direct represents '0' with '12514'
c Var 'aux575' order represents '1' with '12515'
-12514 12515 0
c Var 'aux575' direct represents '1' with '12516'
12514 -12515 12516 0
-12516 12515 0
-12516 -12514 0
c Var 'aux575' order represents '2' with '12517'
-12515 12517 0
c Var 'aux575' direct represents '2' with '12518'
12515 -12517 12518 0
-12518 12517 0
-12518 -12515 0
c Var 'aux575' order represents '3' with '12519'
-12517 12519 0
c Var 'aux575' direct represents '3' with '12520'
12517 -12519 12520 0
-12520 12519 0
-12520 -12517 0
c Var 'aux575' direct represents '4' with '-12519'
12514 12516 12518 12520 -12519 0
c Encoding variable: aux576 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00003_00009=4)))
c Both direct and order encoding.
c Var 'aux576' order represents '0' with '12521'
c Var 'aux576' direct represents '0' with '12521'
c Var 'aux576' order represents '1' with '12522'
-12521 12522 0
c Var 'aux576' direct represents '1' with '12523'
12521 -12522 12523 0
-12523 12522 0
-12523 -12521 0
c Var 'aux576' direct represents '2' with '-12522'
12521 12523 -12522 0
c Encoding variable: aux577 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux577' order represents '0' with '12524'
c Var 'aux577' direct represents '0' with '12524'
c Var 'aux577' order represents '1' with '12525'
-12524 12525 0
c Var 'aux577' direct represents '1' with '12526'
12524 -12525 12526 0
-12526 12525 0
-12526 -12524 0
c Var 'aux577' direct represents '2' with '-12525'
12524 12526 -12525 0
c Encoding variable: aux578 with domain: int(0..2) (representing constraint ((field_00003_00007=4) + (field_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux578' order represents '0' with '12527'
c Var 'aux578' direct represents '0' with '12527'
c Var 'aux578' order represents '1' with '12528'
-12527 12528 0
c Var 'aux578' direct represents '1' with '12529'
12527 -12528 12529 0
-12529 12528 0
-12529 -12527 0
c Var 'aux578' direct represents '2' with '-12528'
12527 12529 -12528 0
c Encoding variable: aux579 with domain: int(0..2) (representing constraint ((field_00003_00006=4) + (field_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux579' order represents '0' with '12530'
c Var 'aux579' direct represents '0' with '12530'
c Var 'aux579' order represents '1' with '12531'
-12530 12531 0
c Var 'aux579' direct represents '1' with '12532'
12530 -12531 12532 0
-12532 12531 0
-12532 -12530 0
c Var 'aux579' direct represents '2' with '-12531'
12530 12532 -12531 0
c Encoding variable: aux580 with domain: int(0..3) (representing constraint ((field_00003_00003=4) + aux579))
c Both direct and order encoding.
c Var 'aux580' order represents '0' with '12533'
c Var 'aux580' direct represents '0' with '12533'
c Var 'aux580' order represents '1' with '12534'
-12533 12534 0
c Var 'aux580' direct represents '1' with '12535'
12533 -12534 12535 0
-12535 12534 0
-12535 -12533 0
c Var 'aux580' order represents '2' with '12536'
-12534 12536 0
c Var 'aux580' direct represents '2' with '12537'
12534 -12536 12537 0
-12537 12536 0
-12537 -12534 0
c Var 'aux580' direct represents '3' with '-12536'
12533 12535 12537 -12536 0
c Encoding variable: aux581 with domain: int(0..4) (representing constraint (aux576 + aux578))
c Both direct and order encoding.
c Var 'aux581' order represents '0' with '12538'
c Var 'aux581' direct represents '0' with '12538'
c Var 'aux581' order represents '1' with '12539'
-12538 12539 0
c Var 'aux581' direct represents '1' with '12540'
12538 -12539 12540 0
-12540 12539 0
-12540 -12538 0
c Var 'aux581' order represents '2' with '12541'
-12539 12541 0
c Var 'aux581' direct represents '2' with '12542'
12539 -12541 12542 0
-12542 12541 0
-12542 -12539 0
c Var 'aux581' order represents '3' with '12543'
-12541 12543 0
c Var 'aux581' direct represents '3' with '12544'
12541 -12543 12544 0
-12544 12543 0
-12544 -12541 0
c Var 'aux581' direct represents '4' with '-12543'
12538 12540 12542 12544 -12543 0
c Encoding variable: aux582 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00003_00009=5)))
c Both direct and order encoding.
c Var 'aux582' order represents '0' with '12545'
c Var 'aux582' direct represents '0' with '12545'
c Var 'aux582' order represents '1' with '12546'
-12545 12546 0
c Var 'aux582' direct represents '1' with '12547'
12545 -12546 12547 0
-12547 12546 0
-12547 -12545 0
c Var 'aux582' direct represents '2' with '-12546'
12545 12547 -12546 0
c Encoding variable: aux583 with domain: int(0..2) (representing constraint ((field_00003_00008=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux583' order represents '0' with '12548'
c Var 'aux583' direct represents '0' with '12548'
c Var 'aux583' order represents '1' with '12549'
-12548 12549 0
c Var 'aux583' direct represents '1' with '12550'
12548 -12549 12550 0
-12550 12549 0
-12550 -12548 0
c Var 'aux583' direct represents '2' with '-12549'
12548 12550 -12549 0
c Encoding variable: aux584 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux584' order represents '0' with '12551'
c Var 'aux584' direct represents '0' with '12551'
c Var 'aux584' order represents '1' with '12552'
-12551 12552 0
c Var 'aux584' direct represents '1' with '12553'
12551 -12552 12553 0
-12553 12552 0
-12553 -12551 0
c Var 'aux584' direct represents '2' with '-12552'
12551 12553 -12552 0
c Encoding variable: aux585 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00003_00005=5)))
c Both direct and order encoding.
c Var 'aux585' order represents '0' with '12554'
c Var 'aux585' direct represents '0' with '12554'
c Var 'aux585' order represents '1' with '12555'
-12554 12555 0
c Var 'aux585' direct represents '1' with '12556'
12554 -12555 12556 0
-12556 12555 0
-12556 -12554 0
c Var 'aux585' direct represents '2' with '-12555'
12554 12556 -12555 0
c Encoding variable: aux586 with domain: int(0..3) (representing constraint ((field_00003_00003=5) + aux585))
c Both direct and order encoding.
c Var 'aux586' order represents '0' with '12557'
c Var 'aux586' direct represents '0' with '12557'
c Var 'aux586' order represents '1' with '12558'
-12557 12558 0
c Var 'aux586' direct represents '1' with '12559'
12557 -12558 12559 0
-12559 12558 0
-12559 -12557 0
c Var 'aux586' order represents '2' with '12560'
-12558 12560 0
c Var 'aux586' direct represents '2' with '12561'
12558 -12560 12561 0
-12561 12560 0
-12561 -12558 0
c Var 'aux586' direct represents '3' with '-12560'
12557 12559 12561 -12560 0
c Encoding variable: aux587 with domain: int(0..4) (representing constraint (aux582 + aux584))
c Both direct and order encoding.
c Var 'aux587' order represents '0' with '12562'
c Var 'aux587' direct represents '0' with '12562'
c Var 'aux587' order represents '1' with '12563'
-12562 12563 0
c Var 'aux587' direct represents '1' with '12564'
12562 -12563 12564 0
-12564 12563 0
-12564 -12562 0
c Var 'aux587' order represents '2' with '12565'
-12563 12565 0
c Var 'aux587' direct represents '2' with '12566'
12563 -12565 12566 0
-12566 12565 0
-12566 -12563 0
c Var 'aux587' order represents '3' with '12567'
-12565 12567 0
c Var 'aux587' direct represents '3' with '12568'
12565 -12567 12568 0
-12568 12567 0
-12568 -12565 0
c Var 'aux587' direct represents '4' with '-12567'
12562 12564 12566 12568 -12567 0
c Encoding variable: aux588 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00003_00009=6)))
c Both direct and order encoding.
c Var 'aux588' order represents '0' with '12569'
c Var 'aux588' direct represents '0' with '12569'
c Var 'aux588' order represents '1' with '12570'
-12569 12570 0
c Var 'aux588' direct represents '1' with '12571'
12569 -12570 12571 0
-12571 12570 0
-12571 -12569 0
c Var 'aux588' direct represents '2' with '-12570'
12569 12571 -12570 0
c Encoding variable: aux589 with domain: int(0..2) (representing constraint ((field_00003_00008=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux589' order represents '0' with '12572'
c Var 'aux589' direct represents '0' with '12572'
c Var 'aux589' order represents '1' with '12573'
-12572 12573 0
c Var 'aux589' direct represents '1' with '12574'
12572 -12573 12574 0
-12574 12573 0
-12574 -12572 0
c Var 'aux589' direct represents '2' with '-12573'
12572 12574 -12573 0
c Encoding variable: aux590 with domain: int(0..2) (representing constraint ((field_00003_00007=6) + (field_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux590' order represents '0' with '12575'
c Var 'aux590' direct represents '0' with '12575'
c Var 'aux590' order represents '1' with '12576'
-12575 12576 0
c Var 'aux590' direct represents '1' with '12577'
12575 -12576 12577 0
-12577 12576 0
-12577 -12575 0
c Var 'aux590' direct represents '2' with '-12576'
12575 12577 -12576 0
c Encoding variable: aux591 with domain: int(0..2) (representing constraint ((field_00003_00006=6) + (field_00003_00005=6)))
c Both direct and order encoding.
c Var 'aux591' order represents '0' with '12578'
c Var 'aux591' direct represents '0' with '12578'
c Var 'aux591' order represents '1' with '12579'
-12578 12579 0
c Var 'aux591' direct represents '1' with '12580'
12578 -12579 12580 0
-12580 12579 0
-12580 -12578 0
c Var 'aux591' direct represents '2' with '-12579'
12578 12580 -12579 0
c Encoding variable: aux592 with domain: int(0..3) (representing constraint ((field_00003_00003=6) + aux591))
c Both direct and order encoding.
c Var 'aux592' order represents '0' with '12581'
c Var 'aux592' direct represents '0' with '12581'
c Var 'aux592' order represents '1' with '12582'
-12581 12582 0
c Var 'aux592' direct represents '1' with '12583'
12581 -12582 12583 0
-12583 12582 0
-12583 -12581 0
c Var 'aux592' order represents '2' with '12584'
-12582 12584 0
c Var 'aux592' direct represents '2' with '12585'
12582 -12584 12585 0
-12585 12584 0
-12585 -12582 0
c Var 'aux592' direct represents '3' with '-12584'
12581 12583 12585 -12584 0
c Encoding variable: aux593 with domain: int(0..4) (representing constraint (aux588 + aux590))
c Both direct and order encoding.
c Var 'aux593' order represents '0' with '12586'
c Var 'aux593' direct represents '0' with '12586'
c Var 'aux593' order represents '1' with '12587'
-12586 12587 0
c Var 'aux593' direct represents '1' with '12588'
12586 -12587 12588 0
-12588 12587 0
-12588 -12586 0
c Var 'aux593' order represents '2' with '12589'
-12587 12589 0
c Var 'aux593' direct represents '2' with '12590'
12587 -12589 12590 0
-12590 12589 0
-12590 -12587 0
c Var 'aux593' order represents '3' with '12591'
-12589 12591 0
c Var 'aux593' direct represents '3' with '12592'
12589 -12591 12592 0
-12592 12591 0
-12592 -12589 0
c Var 'aux593' direct represents '4' with '-12591'
12586 12588 12590 12592 -12591 0
c Encoding variable: aux594 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00003_00009=7)))
c Both direct and order encoding.
c Var 'aux594' order represents '0' with '12593'
c Var 'aux594' direct represents '0' with '12593'
c Var 'aux594' order represents '1' with '12594'
-12593 12594 0
c Var 'aux594' direct represents '1' with '12595'
12593 -12594 12595 0
-12595 12594 0
-12595 -12593 0
c Var 'aux594' direct represents '2' with '-12594'
12593 12595 -12594 0
c Encoding variable: aux595 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux595' order represents '0' with '12596'
c Var 'aux595' direct represents '0' with '12596'
c Var 'aux595' order represents '1' with '12597'
-12596 12597 0
c Var 'aux595' direct represents '1' with '12598'
12596 -12597 12598 0
-12598 12597 0
-12598 -12596 0
c Var 'aux595' direct represents '2' with '-12597'
12596 12598 -12597 0
c Encoding variable: aux596 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux596' order represents '0' with '12599'
c Var 'aux596' direct represents '0' with '12599'
c Var 'aux596' order represents '1' with '12600'
-12599 12600 0
c Var 'aux596' direct represents '1' with '12601'
12599 -12600 12601 0
-12601 12600 0
-12601 -12599 0
c Var 'aux596' direct represents '2' with '-12600'
12599 12601 -12600 0
c Encoding variable: aux597 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00003_00005=7)))
c Both direct and order encoding.
c Var 'aux597' order represents '0' with '12602'
c Var 'aux597' direct represents '0' with '12602'
c Var 'aux597' order represents '1' with '12603'
-12602 12603 0
c Var 'aux597' direct represents '1' with '12604'
12602 -12603 12604 0
-12604 12603 0
-12604 -12602 0
c Var 'aux597' direct represents '2' with '-12603'
12602 12604 -12603 0
c Encoding variable: aux598 with domain: int(0..3) (representing constraint ((field_00003_00003=7) + aux597))
c Both direct and order encoding.
c Var 'aux598' order represents '0' with '12605'
c Var 'aux598' direct represents '0' with '12605'
c Var 'aux598' order represents '1' with '12606'
-12605 12606 0
c Var 'aux598' direct represents '1' with '12607'
12605 -12606 12607 0
-12607 12606 0
-12607 -12605 0
c Var 'aux598' order represents '2' with '12608'
-12606 12608 0
c Var 'aux598' direct represents '2' with '12609'
12606 -12608 12609 0
-12609 12608 0
-12609 -12606 0
c Var 'aux598' direct represents '3' with '-12608'
12605 12607 12609 -12608 0
c Encoding variable: aux599 with domain: int(0..4) (representing constraint (aux594 + aux596))
c Both direct and order encoding.
c Var 'aux599' order represents '0' with '12610'
c Var 'aux599' direct represents '0' with '12610'
c Var 'aux599' order represents '1' with '12611'
-12610 12611 0
c Var 'aux599' direct represents '1' with '12612'
12610 -12611 12612 0
-12612 12611 0
-12612 -12610 0
c Var 'aux599' order represents '2' with '12613'
-12611 12613 0
c Var 'aux599' direct represents '2' with '12614'
12611 -12613 12614 0
-12614 12613 0
-12614 -12611 0
c Var 'aux599' order represents '3' with '12615'
-12613 12615 0
c Var 'aux599' direct represents '3' with '12616'
12613 -12615 12616 0
-12616 12615 0
-12616 -12613 0
c Var 'aux599' direct represents '4' with '-12615'
12610 12612 12614 12616 -12615 0
c Encoding variable: aux600 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00003_00009=8)))
c Both direct and order encoding.
c Var 'aux600' order represents '0' with '12617'
c Var 'aux600' direct represents '0' with '12617'
c Var 'aux600' order represents '1' with '12618'
-12617 12618 0
c Var 'aux600' direct represents '1' with '12619'
12617 -12618 12619 0
-12619 12618 0
-12619 -12617 0
c Var 'aux600' direct represents '2' with '-12618'
12617 12619 -12618 0
c Encoding variable: aux601 with domain: int(0..2) (representing constraint ((field_00003_00008=8) + (field_00003_00002=8)))
c Both direct and order encoding.
c Var 'aux601' order represents '0' with '12620'
c Var 'aux601' direct represents '0' with '12620'
c Var 'aux601' order represents '1' with '12621'
-12620 12621 0
c Var 'aux601' direct represents '1' with '12622'
12620 -12621 12622 0
-12622 12621 0
-12622 -12620 0
c Var 'aux601' direct represents '2' with '-12621'
12620 12622 -12621 0
c Encoding variable: aux602 with domain: int(0..2) (representing constraint ((field_00003_00007=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux602' order represents '0' with '12623'
c Var 'aux602' direct represents '0' with '12623'
c Var 'aux602' order represents '1' with '12624'
-12623 12624 0
c Var 'aux602' direct represents '1' with '12625'
12623 -12624 12625 0
-12625 12624 0
-12625 -12623 0
c Var 'aux602' direct represents '2' with '-12624'
12623 12625 -12624 0
c Encoding variable: aux603 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00003_00005=8)))
c Both direct and order encoding.
c Var 'aux603' order represents '0' with '12626'
c Var 'aux603' direct represents '0' with '12626'
c Var 'aux603' order represents '1' with '12627'
-12626 12627 0
c Var 'aux603' direct represents '1' with '12628'
12626 -12627 12628 0
-12628 12627 0
-12628 -12626 0
c Var 'aux603' direct represents '2' with '-12627'
12626 12628 -12627 0
c Encoding variable: aux604 with domain: int(0..3) (representing constraint ((field_00003_00003=8) + aux603))
c Both direct and order encoding.
c Var 'aux604' order represents '0' with '12629'
c Var 'aux604' direct represents '0' with '12629'
c Var 'aux604' order represents '1' with '12630'
-12629 12630 0
c Var 'aux604' direct represents '1' with '12631'
12629 -12630 12631 0
-12631 12630 0
-12631 -12629 0
c Var 'aux604' order represents '2' with '12632'
-12630 12632 0
c Var 'aux604' direct represents '2' with '12633'
12630 -12632 12633 0
-12633 12632 0
-12633 -12630 0
c Var 'aux604' direct represents '3' with '-12632'
12629 12631 12633 -12632 0
c Encoding variable: aux605 with domain: int(0..4) (representing constraint (aux600 + aux602))
c Both direct and order encoding.
c Var 'aux605' order represents '0' with '12634'
c Var 'aux605' direct represents '0' with '12634'
c Var 'aux605' order represents '1' with '12635'
-12634 12635 0
c Var 'aux605' direct represents '1' with '12636'
12634 -12635 12636 0
-12636 12635 0
-12636 -12634 0
c Var 'aux605' order represents '2' with '12637'
-12635 12637 0
c Var 'aux605' direct represents '2' with '12638'
12635 -12637 12638 0
-12638 12637 0
-12638 -12635 0
c Var 'aux605' order represents '3' with '12639'
-12637 12639 0
c Var 'aux605' direct represents '3' with '12640'
12637 -12639 12640 0
-12640 12639 0
-12640 -12637 0
c Var 'aux605' direct represents '4' with '-12639'
12634 12636 12638 12640 -12639 0
c Encoding variable: aux606 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00003_00009=9)))
c Both direct and order encoding.
c Var 'aux606' order represents '0' with '12641'
c Var 'aux606' direct represents '0' with '12641'
c Var 'aux606' order represents '1' with '12642'
-12641 12642 0
c Var 'aux606' direct represents '1' with '12643'
12641 -12642 12643 0
-12643 12642 0
-12643 -12641 0
c Var 'aux606' direct represents '2' with '-12642'
12641 12643 -12642 0
c Encoding variable: aux607 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00003_00002=9)))
c Both direct and order encoding.
c Var 'aux607' order represents '0' with '12644'
c Var 'aux607' direct represents '0' with '12644'
c Var 'aux607' order represents '1' with '12645'
-12644 12645 0
c Var 'aux607' direct represents '1' with '12646'
12644 -12645 12646 0
-12646 12645 0
-12646 -12644 0
c Var 'aux607' direct represents '2' with '-12645'
12644 12646 -12645 0
c Encoding variable: aux608 with domain: int(0..2) (representing constraint ((field_00003_00007=9) + (field_00003_00004=9)))
c Both direct and order encoding.
c Var 'aux608' order represents '0' with '12647'
c Var 'aux608' direct represents '0' with '12647'
c Var 'aux608' order represents '1' with '12648'
-12647 12648 0
c Var 'aux608' direct represents '1' with '12649'
12647 -12648 12649 0
-12649 12648 0
-12649 -12647 0
c Var 'aux608' direct represents '2' with '-12648'
12647 12649 -12648 0
c Encoding variable: aux609 with domain: int(0..2) (representing constraint ((field_00003_00006=9) + (field_00003_00005=9)))
c Both direct and order encoding.
c Var 'aux609' order represents '0' with '12650'
c Var 'aux609' direct represents '0' with '12650'
c Var 'aux609' order represents '1' with '12651'
-12650 12651 0
c Var 'aux609' direct represents '1' with '12652'
12650 -12651 12652 0
-12652 12651 0
-12652 -12650 0
c Var 'aux609' direct represents '2' with '-12651'
12650 12652 -12651 0
c Encoding variable: aux610 with domain: int(0..3) (representing constraint ((field_00003_00003=9) + aux609))
c Both direct and order encoding.
c Var 'aux610' order represents '0' with '12653'
c Var 'aux610' direct represents '0' with '12653'
c Var 'aux610' order represents '1' with '12654'
-12653 12654 0
c Var 'aux610' direct represents '1' with '12655'
12653 -12654 12655 0
-12655 12654 0
-12655 -12653 0
c Var 'aux610' order represents '2' with '12656'
-12654 12656 0
c Var 'aux610' direct represents '2' with '12657'
12654 -12656 12657 0
-12657 12656 0
-12657 -12654 0
c Var 'aux610' direct represents '3' with '-12656'
12653 12655 12657 -12656 0
c Encoding variable: aux611 with domain: int(0..4) (representing constraint (aux606 + aux608))
c Both direct and order encoding.
c Var 'aux611' order represents '0' with '12658'
c Var 'aux611' direct represents '0' with '12658'
c Var 'aux611' order represents '1' with '12659'
-12658 12659 0
c Var 'aux611' direct represents '1' with '12660'
12658 -12659 12660 0
-12660 12659 0
-12660 -12658 0
c Var 'aux611' order represents '2' with '12661'
-12659 12661 0
c Var 'aux611' direct represents '2' with '12662'
12659 -12661 12662 0
-12662 12661 0
-12662 -12659 0
c Var 'aux611' order represents '3' with '12663'
-12661 12663 0
c Var 'aux611' direct represents '3' with '12664'
12661 -12663 12664 0
-12664 12663 0
-12664 -12661 0
c Var 'aux611' direct represents '4' with '-12663'
12658 12660 12662 12664 -12663 0
c Encoding variable: aux612 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00004_00009=1)))
c Both direct and order encoding.
c Var 'aux612' order represents '0' with '12665'
c Var 'aux612' direct represents '0' with '12665'
c Var 'aux612' order represents '1' with '12666'
-12665 12666 0
c Var 'aux612' direct represents '1' with '12667'
12665 -12666 12667 0
-12667 12666 0
-12667 -12665 0
c Var 'aux612' direct represents '2' with '-12666'
12665 12667 -12666 0
c Encoding variable: aux613 with domain: int(0..2) (representing constraint ((field_00004_00008=1) + (field_00004_00002=1)))
c Both direct and order encoding.
c Var 'aux613' order represents '0' with '12668'
c Var 'aux613' direct represents '0' with '12668'
c Var 'aux613' order represents '1' with '12669'
-12668 12669 0
c Var 'aux613' direct represents '1' with '12670'
12668 -12669 12670 0
-12670 12669 0
-12670 -12668 0
c Var 'aux613' direct represents '2' with '-12669'
12668 12670 -12669 0
c Encoding variable: aux614 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00004_00004=1)))
c Both direct and order encoding.
c Var 'aux614' order represents '0' with '12671'
c Var 'aux614' direct represents '0' with '12671'
c Var 'aux614' order represents '1' with '12672'
-12671 12672 0
c Var 'aux614' direct represents '1' with '12673'
12671 -12672 12673 0
-12673 12672 0
-12673 -12671 0
c Var 'aux614' direct represents '2' with '-12672'
12671 12673 -12672 0
c Encoding variable: aux615 with domain: int(0..2) (representing constraint ((field_00004_00006=1) + (field_00004_00005=1)))
c Both direct and order encoding.
c Var 'aux615' order represents '0' with '12674'
c Var 'aux615' direct represents '0' with '12674'
c Var 'aux615' order represents '1' with '12675'
-12674 12675 0
c Var 'aux615' direct represents '1' with '12676'
12674 -12675 12676 0
-12676 12675 0
-12676 -12674 0
c Var 'aux615' direct represents '2' with '-12675'
12674 12676 -12675 0
c Encoding variable: aux616 with domain: int(0..3) (representing constraint ((field_00004_00003=1) + aux615))
c Both direct and order encoding.
c Var 'aux616' order represents '0' with '12677'
c Var 'aux616' direct represents '0' with '12677'
c Var 'aux616' order represents '1' with '12678'
-12677 12678 0
c Var 'aux616' direct represents '1' with '12679'
12677 -12678 12679 0
-12679 12678 0
-12679 -12677 0
c Var 'aux616' order represents '2' with '12680'
-12678 12680 0
c Var 'aux616' direct represents '2' with '12681'
12678 -12680 12681 0
-12681 12680 0
-12681 -12678 0
c Var 'aux616' direct represents '3' with '-12680'
12677 12679 12681 -12680 0
c Encoding variable: aux617 with domain: int(0..4) (representing constraint (aux612 + aux614))
c Both direct and order encoding.
c Var 'aux617' order represents '0' with '12682'
c Var 'aux617' direct represents '0' with '12682'
c Var 'aux617' order represents '1' with '12683'
-12682 12683 0
c Var 'aux617' direct represents '1' with '12684'
12682 -12683 12684 0
-12684 12683 0
-12684 -12682 0
c Var 'aux617' order represents '2' with '12685'
-12683 12685 0
c Var 'aux617' direct represents '2' with '12686'
12683 -12685 12686 0
-12686 12685 0
-12686 -12683 0
c Var 'aux617' order represents '3' with '12687'
-12685 12687 0
c Var 'aux617' direct represents '3' with '12688'
12685 -12687 12688 0
-12688 12687 0
-12688 -12685 0
c Var 'aux617' direct represents '4' with '-12687'
12682 12684 12686 12688 -12687 0
c Encoding variable: aux618 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00004_00009=2)))
c Both direct and order encoding.
c Var 'aux618' order represents '0' with '12689'
c Var 'aux618' direct represents '0' with '12689'
c Var 'aux618' order represents '1' with '12690'
-12689 12690 0
c Var 'aux618' direct represents '1' with '12691'
12689 -12690 12691 0
-12691 12690 0
-12691 -12689 0
c Var 'aux618' direct represents '2' with '-12690'
12689 12691 -12690 0
c Encoding variable: aux619 with domain: int(0..2) (representing constraint ((field_00004_00008=2) + (field_00004_00002=2)))
c Both direct and order encoding.
c Var 'aux619' order represents '0' with '12692'
c Var 'aux619' direct represents '0' with '12692'
c Var 'aux619' order represents '1' with '12693'
-12692 12693 0
c Var 'aux619' direct represents '1' with '12694'
12692 -12693 12694 0
-12694 12693 0
-12694 -12692 0
c Var 'aux619' direct represents '2' with '-12693'
12692 12694 -12693 0
c Encoding variable: aux620 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00004_00004=2)))
c Both direct and order encoding.
c Var 'aux620' order represents '0' with '12695'
c Var 'aux620' direct represents '0' with '12695'
c Var 'aux620' order represents '1' with '12696'
-12695 12696 0
c Var 'aux620' direct represents '1' with '12697'
12695 -12696 12697 0
-12697 12696 0
-12697 -12695 0
c Var 'aux620' direct represents '2' with '-12696'
12695 12697 -12696 0
c Encoding variable: aux621 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00004_00005=2)))
c Both direct and order encoding.
c Var 'aux621' order represents '0' with '12698'
c Var 'aux621' direct represents '0' with '12698'
c Var 'aux621' order represents '1' with '12699'
-12698 12699 0
c Var 'aux621' direct represents '1' with '12700'
12698 -12699 12700 0
-12700 12699 0
-12700 -12698 0
c Var 'aux621' direct represents '2' with '-12699'
12698 12700 -12699 0
c Encoding variable: aux622 with domain: int(0..3) (representing constraint ((field_00004_00003=2) + aux621))
c Both direct and order encoding.
c Var 'aux622' order represents '0' with '12701'
c Var 'aux622' direct represents '0' with '12701'
c Var 'aux622' order represents '1' with '12702'
-12701 12702 0
c Var 'aux622' direct represents '1' with '12703'
12701 -12702 12703 0
-12703 12702 0
-12703 -12701 0
c Var 'aux622' order represents '2' with '12704'
-12702 12704 0
c Var 'aux622' direct represents '2' with '12705'
12702 -12704 12705 0
-12705 12704 0
-12705 -12702 0
c Var 'aux622' direct represents '3' with '-12704'
12701 12703 12705 -12704 0
c Encoding variable: aux623 with domain: int(0..4) (representing constraint (aux618 + aux620))
c Both direct and order encoding.
c Var 'aux623' order represents '0' with '12706'
c Var 'aux623' direct represents '0' with '12706'
c Var 'aux623' order represents '1' with '12707'
-12706 12707 0
c Var 'aux623' direct represents '1' with '12708'
12706 -12707 12708 0
-12708 12707 0
-12708 -12706 0
c Var 'aux623' order represents '2' with '12709'
-12707 12709 0
c Var 'aux623' direct represents '2' with '12710'
12707 -12709 12710 0
-12710 12709 0
-12710 -12707 0
c Var 'aux623' order represents '3' with '12711'
-12709 12711 0
c Var 'aux623' direct represents '3' with '12712'
12709 -12711 12712 0
-12712 12711 0
-12712 -12709 0
c Var 'aux623' direct represents '4' with '-12711'
12706 12708 12710 12712 -12711 0
c Encoding variable: aux624 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00004_00009=3)))
c Both direct and order encoding.
c Var 'aux624' order represents '0' with '12713'
c Var 'aux624' direct represents '0' with '12713'
c Var 'aux624' order represents '1' with '12714'
-12713 12714 0
c Var 'aux624' direct represents '1' with '12715'
12713 -12714 12715 0
-12715 12714 0
-12715 -12713 0
c Var 'aux624' direct represents '2' with '-12714'
12713 12715 -12714 0
c Encoding variable: aux625 with domain: int(0..2) (representing constraint ((field_00004_00008=3) + (field_00004_00002=3)))
c Both direct and order encoding.
c Var 'aux625' order represents '0' with '12716'
c Var 'aux625' direct represents '0' with '12716'
c Var 'aux625' order represents '1' with '12717'
-12716 12717 0
c Var 'aux625' direct represents '1' with '12718'
12716 -12717 12718 0
-12718 12717 0
-12718 -12716 0
c Var 'aux625' direct represents '2' with '-12717'
12716 12718 -12717 0
c Encoding variable: aux626 with domain: int(0..2) (representing constraint ((field_00004_00007=3) + (field_00004_00004=3)))
c Both direct and order encoding.
c Var 'aux626' order represents '0' with '12719'
c Var 'aux626' direct represents '0' with '12719'
c Var 'aux626' order represents '1' with '12720'
-12719 12720 0
c Var 'aux626' direct represents '1' with '12721'
12719 -12720 12721 0
-12721 12720 0
-12721 -12719 0
c Var 'aux626' direct represents '2' with '-12720'
12719 12721 -12720 0
c Encoding variable: aux627 with domain: int(0..2) (representing constraint ((field_00004_00006=3) + (field_00004_00005=3)))
c Both direct and order encoding.
c Var 'aux627' order represents '0' with '12722'
c Var 'aux627' direct represents '0' with '12722'
c Var 'aux627' order represents '1' with '12723'
-12722 12723 0
c Var 'aux627' direct represents '1' with '12724'
12722 -12723 12724 0
-12724 12723 0
-12724 -12722 0
c Var 'aux627' direct represents '2' with '-12723'
12722 12724 -12723 0
c Encoding variable: aux628 with domain: int(0..3) (representing constraint ((field_00004_00003=3) + aux627))
c Both direct and order encoding.
c Var 'aux628' order represents '0' with '12725'
c Var 'aux628' direct represents '0' with '12725'
c Var 'aux628' order represents '1' with '12726'
-12725 12726 0
c Var 'aux628' direct represents '1' with '12727'
12725 -12726 12727 0
-12727 12726 0
-12727 -12725 0
c Var 'aux628' order represents '2' with '12728'
-12726 12728 0
c Var 'aux628' direct represents '2' with '12729'
12726 -12728 12729 0
-12729 12728 0
-12729 -12726 0
c Var 'aux628' direct represents '3' with '-12728'
12725 12727 12729 -12728 0
c Encoding variable: aux629 with domain: int(0..4) (representing constraint (aux624 + aux626))
c Both direct and order encoding.
c Var 'aux629' order represents '0' with '12730'
c Var 'aux629' direct represents '0' with '12730'
c Var 'aux629' order represents '1' with '12731'
-12730 12731 0
c Var 'aux629' direct represents '1' with '12732'
12730 -12731 12732 0
-12732 12731 0
-12732 -12730 0
c Var 'aux629' order represents '2' with '12733'
-12731 12733 0
c Var 'aux629' direct represents '2' with '12734'
12731 -12733 12734 0
-12734 12733 0
-12734 -12731 0
c Var 'aux629' order represents '3' with '12735'
-12733 12735 0
c Var 'aux629' direct represents '3' with '12736'
12733 -12735 12736 0
-12736 12735 0
-12736 -12733 0
c Var 'aux629' direct represents '4' with '-12735'
12730 12732 12734 12736 -12735 0
c Encoding variable: aux630 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00004_00009=4)))
c Both direct and order encoding.
c Var 'aux630' order represents '0' with '12737'
c Var 'aux630' direct represents '0' with '12737'
c Var 'aux630' order represents '1' with '12738'
-12737 12738 0
c Var 'aux630' direct represents '1' with '12739'
12737 -12738 12739 0
-12739 12738 0
-12739 -12737 0
c Var 'aux630' direct represents '2' with '-12738'
12737 12739 -12738 0
c Encoding variable: aux631 with domain: int(0..2) (representing constraint ((field_00004_00008=4) + (field_00004_00002=4)))
c Both direct and order encoding.
c Var 'aux631' order represents '0' with '12740'
c Var 'aux631' direct represents '0' with '12740'
c Var 'aux631' order represents '1' with '12741'
-12740 12741 0
c Var 'aux631' direct represents '1' with '12742'
12740 -12741 12742 0
-12742 12741 0
-12742 -12740 0
c Var 'aux631' direct represents '2' with '-12741'
12740 12742 -12741 0
c Encoding variable: aux632 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00004_00004=4)))
c Both direct and order encoding.
c Var 'aux632' order represents '0' with '12743'
c Var 'aux632' direct represents '0' with '12743'
c Var 'aux632' order represents '1' with '12744'
-12743 12744 0
c Var 'aux632' direct represents '1' with '12745'
12743 -12744 12745 0
-12745 12744 0
-12745 -12743 0
c Var 'aux632' direct represents '2' with '-12744'
12743 12745 -12744 0
c Encoding variable: aux633 with domain: int(0..2) (representing constraint ((field_00004_00006=4) + (field_00004_00005=4)))
c Both direct and order encoding.
c Var 'aux633' order represents '0' with '12746'
c Var 'aux633' direct represents '0' with '12746'
c Var 'aux633' order represents '1' with '12747'
-12746 12747 0
c Var 'aux633' direct represents '1' with '12748'
12746 -12747 12748 0
-12748 12747 0
-12748 -12746 0
c Var 'aux633' direct represents '2' with '-12747'
12746 12748 -12747 0
c Encoding variable: aux634 with domain: int(0..3) (representing constraint ((field_00004_00003=4) + aux633))
c Both direct and order encoding.
c Var 'aux634' order represents '0' with '12749'
c Var 'aux634' direct represents '0' with '12749'
c Var 'aux634' order represents '1' with '12750'
-12749 12750 0
c Var 'aux634' direct represents '1' with '12751'
12749 -12750 12751 0
-12751 12750 0
-12751 -12749 0
c Var 'aux634' order represents '2' with '12752'
-12750 12752 0
c Var 'aux634' direct represents '2' with '12753'
12750 -12752 12753 0
-12753 12752 0
-12753 -12750 0
c Var 'aux634' direct represents '3' with '-12752'
12749 12751 12753 -12752 0
c Encoding variable: aux635 with domain: int(0..4) (representing constraint (aux630 + aux632))
c Both direct and order encoding.
c Var 'aux635' order represents '0' with '12754'
c Var 'aux635' direct represents '0' with '12754'
c Var 'aux635' order represents '1' with '12755'
-12754 12755 0
c Var 'aux635' direct represents '1' with '12756'
12754 -12755 12756 0
-12756 12755 0
-12756 -12754 0
c Var 'aux635' order represents '2' with '12757'
-12755 12757 0
c Var 'aux635' direct represents '2' with '12758'
12755 -12757 12758 0
-12758 12757 0
-12758 -12755 0
c Var 'aux635' order represents '3' with '12759'
-12757 12759 0
c Var 'aux635' direct represents '3' with '12760'
12757 -12759 12760 0
-12760 12759 0
-12760 -12757 0
c Var 'aux635' direct represents '4' with '-12759'
12754 12756 12758 12760 -12759 0
c Encoding variable: aux636 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00004_00009=5)))
c Both direct and order encoding.
c Var 'aux636' order represents '0' with '12761'
c Var 'aux636' direct represents '0' with '12761'
c Var 'aux636' order represents '1' with '12762'
-12761 12762 0
c Var 'aux636' direct represents '1' with '12763'
12761 -12762 12763 0
-12763 12762 0
-12763 -12761 0
c Var 'aux636' direct represents '2' with '-12762'
12761 12763 -12762 0
c Encoding variable: aux637 with domain: int(0..2) (representing constraint ((field_00004_00008=5) + (field_00004_00002=5)))
c Both direct and order encoding.
c Var 'aux637' order represents '0' with '12764'
c Var 'aux637' direct represents '0' with '12764'
c Var 'aux637' order represents '1' with '12765'
-12764 12765 0
c Var 'aux637' direct represents '1' with '12766'
12764 -12765 12766 0
-12766 12765 0
-12766 -12764 0
c Var 'aux637' direct represents '2' with '-12765'
12764 12766 -12765 0
c Encoding variable: aux638 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00004_00004=5)))
c Both direct and order encoding.
c Var 'aux638' order represents '0' with '12767'
c Var 'aux638' direct represents '0' with '12767'
c Var 'aux638' order represents '1' with '12768'
-12767 12768 0
c Var 'aux638' direct represents '1' with '12769'
12767 -12768 12769 0
-12769 12768 0
-12769 -12767 0
c Var 'aux638' direct represents '2' with '-12768'
12767 12769 -12768 0
c Encoding variable: aux639 with domain: int(0..2) (representing constraint ((field_00004_00006=5) + (field_00004_00005=5)))
c Both direct and order encoding.
c Var 'aux639' order represents '0' with '12770'
c Var 'aux639' direct represents '0' with '12770'
c Var 'aux639' order represents '1' with '12771'
-12770 12771 0
c Var 'aux639' direct represents '1' with '12772'
12770 -12771 12772 0
-12772 12771 0
-12772 -12770 0
c Var 'aux639' direct represents '2' with '-12771'
12770 12772 -12771 0
c Encoding variable: aux640 with domain: int(0..3) (representing constraint ((field_00004_00003=5) + aux639))
c Both direct and order encoding.
c Var 'aux640' order represents '0' with '12773'
c Var 'aux640' direct represents '0' with '12773'
c Var 'aux640' order represents '1' with '12774'
-12773 12774 0
c Var 'aux640' direct represents '1' with '12775'
12773 -12774 12775 0
-12775 12774 0
-12775 -12773 0
c Var 'aux640' order represents '2' with '12776'
-12774 12776 0
c Var 'aux640' direct represents '2' with '12777'
12774 -12776 12777 0
-12777 12776 0
-12777 -12774 0
c Var 'aux640' direct represents '3' with '-12776'
12773 12775 12777 -12776 0
c Encoding variable: aux641 with domain: int(0..4) (representing constraint (aux636 + aux638))
c Both direct and order encoding.
c Var 'aux641' order represents '0' with '12778'
c Var 'aux641' direct represents '0' with '12778'
c Var 'aux641' order represents '1' with '12779'
-12778 12779 0
c Var 'aux641' direct represents '1' with '12780'
12778 -12779 12780 0
-12780 12779 0
-12780 -12778 0
c Var 'aux641' order represents '2' with '12781'
-12779 12781 0
c Var 'aux641' direct represents '2' with '12782'
12779 -12781 12782 0
-12782 12781 0
-12782 -12779 0
c Var 'aux641' order represents '3' with '12783'
-12781 12783 0
c Var 'aux641' direct represents '3' with '12784'
12781 -12783 12784 0
-12784 12783 0
-12784 -12781 0
c Var 'aux641' direct represents '4' with '-12783'
12778 12780 12782 12784 -12783 0
c Encoding variable: aux642 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00004_00009=6)))
c Both direct and order encoding.
c Var 'aux642' order represents '0' with '12785'
c Var 'aux642' direct represents '0' with '12785'
c Var 'aux642' order represents '1' with '12786'
-12785 12786 0
c Var 'aux642' direct represents '1' with '12787'
12785 -12786 12787 0
-12787 12786 0
-12787 -12785 0
c Var 'aux642' direct represents '2' with '-12786'
12785 12787 -12786 0
c Encoding variable: aux643 with domain: int(0..2) (representing constraint ((field_00004_00008=6) + (field_00004_00002=6)))
c Both direct and order encoding.
c Var 'aux643' order represents '0' with '12788'
c Var 'aux643' direct represents '0' with '12788'
c Var 'aux643' order represents '1' with '12789'
-12788 12789 0
c Var 'aux643' direct represents '1' with '12790'
12788 -12789 12790 0
-12790 12789 0
-12790 -12788 0
c Var 'aux643' direct represents '2' with '-12789'
12788 12790 -12789 0
c Encoding variable: aux644 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00004_00004=6)))
c Both direct and order encoding.
c Var 'aux644' order represents '0' with '12791'
c Var 'aux644' direct represents '0' with '12791'
c Var 'aux644' order represents '1' with '12792'
-12791 12792 0
c Var 'aux644' direct represents '1' with '12793'
12791 -12792 12793 0
-12793 12792 0
-12793 -12791 0
c Var 'aux644' direct represents '2' with '-12792'
12791 12793 -12792 0
c Encoding variable: aux645 with domain: int(0..2) (representing constraint ((field_00004_00006=6) + (field_00004_00005=6)))
c Both direct and order encoding.
c Var 'aux645' order represents '0' with '12794'
c Var 'aux645' direct represents '0' with '12794'
c Var 'aux645' order represents '1' with '12795'
-12794 12795 0
c Var 'aux645' direct represents '1' with '12796'
12794 -12795 12796 0
-12796 12795 0
-12796 -12794 0
c Var 'aux645' direct represents '2' with '-12795'
12794 12796 -12795 0
c Encoding variable: aux646 with domain: int(0..3) (representing constraint ((field_00004_00003=6) + aux645))
c Both direct and order encoding.
c Var 'aux646' order represents '0' with '12797'
c Var 'aux646' direct represents '0' with '12797'
c Var 'aux646' order represents '1' with '12798'
-12797 12798 0
c Var 'aux646' direct represents '1' with '12799'
12797 -12798 12799 0
-12799 12798 0
-12799 -12797 0
c Var 'aux646' order represents '2' with '12800'
-12798 12800 0
c Var 'aux646' direct represents '2' with '12801'
12798 -12800 12801 0
-12801 12800 0
-12801 -12798 0
c Var 'aux646' direct represents '3' with '-12800'
12797 12799 12801 -12800 0
c Encoding variable: aux647 with domain: int(0..4) (representing constraint (aux642 + aux644))
c Both direct and order encoding.
c Var 'aux647' order represents '0' with '12802'
c Var 'aux647' direct represents '0' with '12802'
c Var 'aux647' order represents '1' with '12803'
-12802 12803 0
c Var 'aux647' direct represents '1' with '12804'
12802 -12803 12804 0
-12804 12803 0
-12804 -12802 0
c Var 'aux647' order represents '2' with '12805'
-12803 12805 0
c Var 'aux647' direct represents '2' with '12806'
12803 -12805 12806 0
-12806 12805 0
-12806 -12803 0
c Var 'aux647' order represents '3' with '12807'
-12805 12807 0
c Var 'aux647' direct represents '3' with '12808'
12805 -12807 12808 0
-12808 12807 0
-12808 -12805 0
c Var 'aux647' direct represents '4' with '-12807'
12802 12804 12806 12808 -12807 0
c Encoding variable: aux648 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00004_00009=7)))
c Both direct and order encoding.
c Var 'aux648' order represents '0' with '12809'
c Var 'aux648' direct represents '0' with '12809'
c Var 'aux648' order represents '1' with '12810'
-12809 12810 0
c Var 'aux648' direct represents '1' with '12811'
12809 -12810 12811 0
-12811 12810 0
-12811 -12809 0
c Var 'aux648' direct represents '2' with '-12810'
12809 12811 -12810 0
c Encoding variable: aux649 with domain: int(0..2) (representing constraint ((field_00004_00008=7) + (field_00004_00002=7)))
c Both direct and order encoding.
c Var 'aux649' order represents '0' with '12812'
c Var 'aux649' direct represents '0' with '12812'
c Var 'aux649' order represents '1' with '12813'
-12812 12813 0
c Var 'aux649' direct represents '1' with '12814'
12812 -12813 12814 0
-12814 12813 0
-12814 -12812 0
c Var 'aux649' direct represents '2' with '-12813'
12812 12814 -12813 0
c Encoding variable: aux650 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00004_00004=7)))
c Both direct and order encoding.
c Var 'aux650' order represents '0' with '12815'
c Var 'aux650' direct represents '0' with '12815'
c Var 'aux650' order represents '1' with '12816'
-12815 12816 0
c Var 'aux650' direct represents '1' with '12817'
12815 -12816 12817 0
-12817 12816 0
-12817 -12815 0
c Var 'aux650' direct represents '2' with '-12816'
12815 12817 -12816 0
c Encoding variable: aux651 with domain: int(0..2) (representing constraint ((field_00004_00006=7) + (field_00004_00005=7)))
c Both direct and order encoding.
c Var 'aux651' order represents '0' with '12818'
c Var 'aux651' direct represents '0' with '12818'
c Var 'aux651' order represents '1' with '12819'
-12818 12819 0
c Var 'aux651' direct represents '1' with '12820'
12818 -12819 12820 0
-12820 12819 0
-12820 -12818 0
c Var 'aux651' direct represents '2' with '-12819'
12818 12820 -12819 0
c Encoding variable: aux652 with domain: int(0..3) (representing constraint ((field_00004_00003=7) + aux651))
c Both direct and order encoding.
c Var 'aux652' order represents '0' with '12821'
c Var 'aux652' direct represents '0' with '12821'
c Var 'aux652' order represents '1' with '12822'
-12821 12822 0
c Var 'aux652' direct represents '1' with '12823'
12821 -12822 12823 0
-12823 12822 0
-12823 -12821 0
c Var 'aux652' order represents '2' with '12824'
-12822 12824 0
c Var 'aux652' direct represents '2' with '12825'
12822 -12824 12825 0
-12825 12824 0
-12825 -12822 0
c Var 'aux652' direct represents '3' with '-12824'
12821 12823 12825 -12824 0
c Encoding variable: aux653 with domain: int(0..4) (representing constraint (aux648 + aux650))
c Both direct and order encoding.
c Var 'aux653' order represents '0' with '12826'
c Var 'aux653' direct represents '0' with '12826'
c Var 'aux653' order represents '1' with '12827'
-12826 12827 0
c Var 'aux653' direct represents '1' with '12828'
12826 -12827 12828 0
-12828 12827 0
-12828 -12826 0
c Var 'aux653' order represents '2' with '12829'
-12827 12829 0
c Var 'aux653' direct represents '2' with '12830'
12827 -12829 12830 0
-12830 12829 0
-12830 -12827 0
c Var 'aux653' order represents '3' with '12831'
-12829 12831 0
c Var 'aux653' direct represents '3' with '12832'
12829 -12831 12832 0
-12832 12831 0
-12832 -12829 0
c Var 'aux653' direct represents '4' with '-12831'
12826 12828 12830 12832 -12831 0
c Encoding variable: aux654 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00004_00009=8)))
c Both direct and order encoding.
c Var 'aux654' order represents '0' with '12833'
c Var 'aux654' direct represents '0' with '12833'
c Var 'aux654' order represents '1' with '12834'
-12833 12834 0
c Var 'aux654' direct represents '1' with '12835'
12833 -12834 12835 0
-12835 12834 0
-12835 -12833 0
c Var 'aux654' direct represents '2' with '-12834'
12833 12835 -12834 0
c Encoding variable: aux655 with domain: int(0..2) (representing constraint ((field_00004_00008=8) + (field_00004_00002=8)))
c Both direct and order encoding.
c Var 'aux655' order represents '0' with '12836'
c Var 'aux655' direct represents '0' with '12836'
c Var 'aux655' order represents '1' with '12837'
-12836 12837 0
c Var 'aux655' direct represents '1' with '12838'
12836 -12837 12838 0
-12838 12837 0
-12838 -12836 0
c Var 'aux655' direct represents '2' with '-12837'
12836 12838 -12837 0
c Encoding variable: aux656 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00004_00004=8)))
c Both direct and order encoding.
c Var 'aux656' order represents '0' with '12839'
c Var 'aux656' direct represents '0' with '12839'
c Var 'aux656' order represents '1' with '12840'
-12839 12840 0
c Var 'aux656' direct represents '1' with '12841'
12839 -12840 12841 0
-12841 12840 0
-12841 -12839 0
c Var 'aux656' direct represents '2' with '-12840'
12839 12841 -12840 0
c Encoding variable: aux657 with domain: int(0..2) (representing constraint ((field_00004_00006=8) + (field_00004_00005=8)))
c Both direct and order encoding.
c Var 'aux657' order represents '0' with '12842'
c Var 'aux657' direct represents '0' with '12842'
c Var 'aux657' order represents '1' with '12843'
-12842 12843 0
c Var 'aux657' direct represents '1' with '12844'
12842 -12843 12844 0
-12844 12843 0
-12844 -12842 0
c Var 'aux657' direct represents '2' with '-12843'
12842 12844 -12843 0
c Encoding variable: aux658 with domain: int(0..3) (representing constraint ((field_00004_00003=8) + aux657))
c Both direct and order encoding.
c Var 'aux658' order represents '0' with '12845'
c Var 'aux658' direct represents '0' with '12845'
c Var 'aux658' order represents '1' with '12846'
-12845 12846 0
c Var 'aux658' direct represents '1' with '12847'
12845 -12846 12847 0
-12847 12846 0
-12847 -12845 0
c Var 'aux658' order represents '2' with '12848'
-12846 12848 0
c Var 'aux658' direct represents '2' with '12849'
12846 -12848 12849 0
-12849 12848 0
-12849 -12846 0
c Var 'aux658' direct represents '3' with '-12848'
12845 12847 12849 -12848 0
c Encoding variable: aux659 with domain: int(0..4) (representing constraint (aux654 + aux656))
c Both direct and order encoding.
c Var 'aux659' order represents '0' with '12850'
c Var 'aux659' direct represents '0' with '12850'
c Var 'aux659' order represents '1' with '12851'
-12850 12851 0
c Var 'aux659' direct represents '1' with '12852'
12850 -12851 12852 0
-12852 12851 0
-12852 -12850 0
c Var 'aux659' order represents '2' with '12853'
-12851 12853 0
c Var 'aux659' direct represents '2' with '12854'
12851 -12853 12854 0
-12854 12853 0
-12854 -12851 0
c Var 'aux659' order represents '3' with '12855'
-12853 12855 0
c Var 'aux659' direct represents '3' with '12856'
12853 -12855 12856 0
-12856 12855 0
-12856 -12853 0
c Var 'aux659' direct represents '4' with '-12855'
12850 12852 12854 12856 -12855 0
c Encoding variable: aux660 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00004_00009=9)))
c Both direct and order encoding.
c Var 'aux660' order represents '0' with '12857'
c Var 'aux660' direct represents '0' with '12857'
c Var 'aux660' order represents '1' with '12858'
-12857 12858 0
c Var 'aux660' direct represents '1' with '12859'
12857 -12858 12859 0
-12859 12858 0
-12859 -12857 0
c Var 'aux660' direct represents '2' with '-12858'
12857 12859 -12858 0
c Encoding variable: aux661 with domain: int(0..2) (representing constraint ((field_00004_00008=9) + (field_00004_00002=9)))
c Both direct and order encoding.
c Var 'aux661' order represents '0' with '12860'
c Var 'aux661' direct represents '0' with '12860'
c Var 'aux661' order represents '1' with '12861'
-12860 12861 0
c Var 'aux661' direct represents '1' with '12862'
12860 -12861 12862 0
-12862 12861 0
-12862 -12860 0
c Var 'aux661' direct represents '2' with '-12861'
12860 12862 -12861 0
c Encoding variable: aux662 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00004_00004=9)))
c Both direct and order encoding.
c Var 'aux662' order represents '0' with '12863'
c Var 'aux662' direct represents '0' with '12863'
c Var 'aux662' order represents '1' with '12864'
-12863 12864 0
c Var 'aux662' direct represents '1' with '12865'
12863 -12864 12865 0
-12865 12864 0
-12865 -12863 0
c Var 'aux662' direct represents '2' with '-12864'
12863 12865 -12864 0
c Encoding variable: aux663 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00004_00005=9)))
c Both direct and order encoding.
c Var 'aux663' order represents '0' with '12866'
c Var 'aux663' direct represents '0' with '12866'
c Var 'aux663' order represents '1' with '12867'
-12866 12867 0
c Var 'aux663' direct represents '1' with '12868'
12866 -12867 12868 0
-12868 12867 0
-12868 -12866 0
c Var 'aux663' direct represents '2' with '-12867'
12866 12868 -12867 0
c Encoding variable: aux664 with domain: int(0..3) (representing constraint ((field_00004_00003=9) + aux663))
c Both direct and order encoding.
c Var 'aux664' order represents '0' with '12869'
c Var 'aux664' direct represents '0' with '12869'
c Var 'aux664' order represents '1' with '12870'
-12869 12870 0
c Var 'aux664' direct represents '1' with '12871'
12869 -12870 12871 0
-12871 12870 0
-12871 -12869 0
c Var 'aux664' order represents '2' with '12872'
-12870 12872 0
c Var 'aux664' direct represents '2' with '12873'
12870 -12872 12873 0
-12873 12872 0
-12873 -12870 0
c Var 'aux664' direct represents '3' with '-12872'
12869 12871 12873 -12872 0
c Encoding variable: aux665 with domain: int(0..4) (representing constraint (aux660 + aux662))
c Both direct and order encoding.
c Var 'aux665' order represents '0' with '12874'
c Var 'aux665' direct represents '0' with '12874'
c Var 'aux665' order represents '1' with '12875'
-12874 12875 0
c Var 'aux665' direct represents '1' with '12876'
12874 -12875 12876 0
-12876 12875 0
-12876 -12874 0
c Var 'aux665' order represents '2' with '12877'
-12875 12877 0
c Var 'aux665' direct represents '2' with '12878'
12875 -12877 12878 0
-12878 12877 0
-12878 -12875 0
c Var 'aux665' order represents '3' with '12879'
-12877 12879 0
c Var 'aux665' direct represents '3' with '12880'
12877 -12879 12880 0
-12880 12879 0
-12880 -12877 0
c Var 'aux665' direct represents '4' with '-12879'
12874 12876 12878 12880 -12879 0
c Encoding variable: aux666 with domain: int(0..2) (representing constraint ((field_00005_00001=1) + (field_00005_00009=1)))
c Both direct and order encoding.
c Var 'aux666' order represents '0' with '12881'
c Var 'aux666' direct represents '0' with '12881'
c Var 'aux666' order represents '1' with '12882'
-12881 12882 0
c Var 'aux666' direct represents '1' with '12883'
12881 -12882 12883 0
-12883 12882 0
-12883 -12881 0
c Var 'aux666' direct represents '2' with '-12882'
12881 12883 -12882 0
c Encoding variable: aux667 with domain: int(0..2) (representing constraint ((field_00005_00008=1) + (field_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux667' order represents '0' with '12884'
c Var 'aux667' direct represents '0' with '12884'
c Var 'aux667' order represents '1' with '12885'
-12884 12885 0
c Var 'aux667' direct represents '1' with '12886'
12884 -12885 12886 0
-12886 12885 0
-12886 -12884 0
c Var 'aux667' direct represents '2' with '-12885'
12884 12886 -12885 0
c Encoding variable: aux668 with domain: int(0..2) (representing constraint ((field_00005_00007=1) + (field_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux668' order represents '0' with '12887'
c Var 'aux668' direct represents '0' with '12887'
c Var 'aux668' order represents '1' with '12888'
-12887 12888 0
c Var 'aux668' direct represents '1' with '12889'
12887 -12888 12889 0
-12889 12888 0
-12889 -12887 0
c Var 'aux668' direct represents '2' with '-12888'
12887 12889 -12888 0
c Encoding variable: aux669 with domain: int(0..2) (representing constraint ((field_00005_00006=1) + (field_00005_00005=1)))
c Both direct and order encoding.
c Var 'aux669' order represents '0' with '12890'
c Var 'aux669' direct represents '0' with '12890'
c Var 'aux669' order represents '1' with '12891'
-12890 12891 0
c Var 'aux669' direct represents '1' with '12892'
12890 -12891 12892 0
-12892 12891 0
-12892 -12890 0
c Var 'aux669' direct represents '2' with '-12891'
12890 12892 -12891 0
c Encoding variable: aux670 with domain: int(0..3) (representing constraint ((field_00005_00003=1) + aux669))
c Both direct and order encoding.
c Var 'aux670' order represents '0' with '12893'
c Var 'aux670' direct represents '0' with '12893'
c Var 'aux670' order represents '1' with '12894'
-12893 12894 0
c Var 'aux670' direct represents '1' with '12895'
12893 -12894 12895 0
-12895 12894 0
-12895 -12893 0
c Var 'aux670' order represents '2' with '12896'
-12894 12896 0
c Var 'aux670' direct represents '2' with '12897'
12894 -12896 12897 0
-12897 12896 0
-12897 -12894 0
c Var 'aux670' direct represents '3' with '-12896'
12893 12895 12897 -12896 0
c Encoding variable: aux671 with domain: int(0..4) (representing constraint (aux666 + aux668))
c Both direct and order encoding.
c Var 'aux671' order represents '0' with '12898'
c Var 'aux671' direct represents '0' with '12898'
c Var 'aux671' order represents '1' with '12899'
-12898 12899 0
c Var 'aux671' direct represents '1' with '12900'
12898 -12899 12900 0
-12900 12899 0
-12900 -12898 0
c Var 'aux671' order represents '2' with '12901'
-12899 12901 0
c Var 'aux671' direct represents '2' with '12902'
12899 -12901 12902 0
-12902 12901 0
-12902 -12899 0
c Var 'aux671' order represents '3' with '12903'
-12901 12903 0
c Var 'aux671' direct represents '3' with '12904'
12901 -12903 12904 0
-12904 12903 0
-12904 -12901 0
c Var 'aux671' direct represents '4' with '-12903'
12898 12900 12902 12904 -12903 0
c Encoding variable: aux672 with domain: int(0..2) (representing constraint ((field_00005_00001=2) + (field_00005_00009=2)))
c Both direct and order encoding.
c Var 'aux672' order represents '0' with '12905'
c Var 'aux672' direct represents '0' with '12905'
c Var 'aux672' order represents '1' with '12906'
-12905 12906 0
c Var 'aux672' direct represents '1' with '12907'
12905 -12906 12907 0
-12907 12906 0
-12907 -12905 0
c Var 'aux672' direct represents '2' with '-12906'
12905 12907 -12906 0
c Encoding variable: aux673 with domain: int(0..2) (representing constraint ((field_00005_00008=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux673' order represents '0' with '12908'
c Var 'aux673' direct represents '0' with '12908'
c Var 'aux673' order represents '1' with '12909'
-12908 12909 0
c Var 'aux673' direct represents '1' with '12910'
12908 -12909 12910 0
-12910 12909 0
-12910 -12908 0
c Var 'aux673' direct represents '2' with '-12909'
12908 12910 -12909 0
c Encoding variable: aux674 with domain: int(0..2) (representing constraint ((field_00005_00007=2) + (field_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux674' order represents '0' with '12911'
c Var 'aux674' direct represents '0' with '12911'
c Var 'aux674' order represents '1' with '12912'
-12911 12912 0
c Var 'aux674' direct represents '1' with '12913'
12911 -12912 12913 0
-12913 12912 0
-12913 -12911 0
c Var 'aux674' direct represents '2' with '-12912'
12911 12913 -12912 0
c Encoding variable: aux675 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux675' order represents '0' with '12914'
c Var 'aux675' direct represents '0' with '12914'
c Var 'aux675' order represents '1' with '12915'
-12914 12915 0
c Var 'aux675' direct represents '1' with '12916'
12914 -12915 12916 0
-12916 12915 0
-12916 -12914 0
c Var 'aux675' direct represents '2' with '-12915'
12914 12916 -12915 0
c Encoding variable: aux676 with domain: int(0..3) (representing constraint ((field_00005_00003=2) + aux675))
c Both direct and order encoding.
c Var 'aux676' order represents '0' with '12917'
c Var 'aux676' direct represents '0' with '12917'
c Var 'aux676' order represents '1' with '12918'
-12917 12918 0
c Var 'aux676' direct represents '1' with '12919'
12917 -12918 12919 0
-12919 12918 0
-12919 -12917 0
c Var 'aux676' order represents '2' with '12920'
-12918 12920 0
c Var 'aux676' direct represents '2' with '12921'
12918 -12920 12921 0
-12921 12920 0
-12921 -12918 0
c Var 'aux676' direct represents '3' with '-12920'
12917 12919 12921 -12920 0
c Encoding variable: aux677 with domain: int(0..4) (representing constraint (aux672 + aux674))
c Both direct and order encoding.
c Var 'aux677' order represents '0' with '12922'
c Var 'aux677' direct represents '0' with '12922'
c Var 'aux677' order represents '1' with '12923'
-12922 12923 0
c Var 'aux677' direct represents '1' with '12924'
12922 -12923 12924 0
-12924 12923 0
-12924 -12922 0
c Var 'aux677' order represents '2' with '12925'
-12923 12925 0
c Var 'aux677' direct represents '2' with '12926'
12923 -12925 12926 0
-12926 12925 0
-12926 -12923 0
c Var 'aux677' order represents '3' with '12927'
-12925 12927 0
c Var 'aux677' direct represents '3' with '12928'
12925 -12927 12928 0
-12928 12927 0
-12928 -12925 0
c Var 'aux677' direct represents '4' with '-12927'
12922 12924 12926 12928 -12927 0
c Encoding variable: aux678 with domain: int(0..2) (representing constraint ((field_00005_00001=3) + (field_00005_00009=3)))
c Both direct and order encoding.
c Var 'aux678' order represents '0' with '12929'
c Var 'aux678' direct represents '0' with '12929'
c Var 'aux678' order represents '1' with '12930'
-12929 12930 0
c Var 'aux678' direct represents '1' with '12931'
12929 -12930 12931 0
-12931 12930 0
-12931 -12929 0
c Var 'aux678' direct represents '2' with '-12930'
12929 12931 -12930 0
c Encoding variable: aux679 with domain: int(0..2) (representing constraint ((field_00005_00008=3) + (field_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux679' order represents '0' with '12932'
c Var 'aux679' direct represents '0' with '12932'
c Var 'aux679' order represents '1' with '12933'
-12932 12933 0
c Var 'aux679' direct represents '1' with '12934'
12932 -12933 12934 0
-12934 12933 0
-12934 -12932 0
c Var 'aux679' direct represents '2' with '-12933'
12932 12934 -12933 0
c Encoding variable: aux680 with domain: int(0..2) (representing constraint ((field_00005_00007=3) + (field_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux680' order represents '0' with '12935'
c Var 'aux680' direct represents '0' with '12935'
c Var 'aux680' order represents '1' with '12936'
-12935 12936 0
c Var 'aux680' direct represents '1' with '12937'
12935 -12936 12937 0
-12937 12936 0
-12937 -12935 0
c Var 'aux680' direct represents '2' with '-12936'
12935 12937 -12936 0
c Encoding variable: aux681 with domain: int(0..2) (representing constraint ((field_00005_00006=3) + (field_00005_00005=3)))
c Both direct and order encoding.
c Var 'aux681' order represents '0' with '12938'
c Var 'aux681' direct represents '0' with '12938'
c Var 'aux681' order represents '1' with '12939'
-12938 12939 0
c Var 'aux681' direct represents '1' with '12940'
12938 -12939 12940 0
-12940 12939 0
-12940 -12938 0
c Var 'aux681' direct represents '2' with '-12939'
12938 12940 -12939 0
c Encoding variable: aux682 with domain: int(0..3) (representing constraint ((field_00005_00003=3) + aux681))
c Both direct and order encoding.
c Var 'aux682' order represents '0' with '12941'
c Var 'aux682' direct represents '0' with '12941'
c Var 'aux682' order represents '1' with '12942'
-12941 12942 0
c Var 'aux682' direct represents '1' with '12943'
12941 -12942 12943 0
-12943 12942 0
-12943 -12941 0
c Var 'aux682' order represents '2' with '12944'
-12942 12944 0
c Var 'aux682' direct represents '2' with '12945'
12942 -12944 12945 0
-12945 12944 0
-12945 -12942 0
c Var 'aux682' direct represents '3' with '-12944'
12941 12943 12945 -12944 0
c Encoding variable: aux683 with domain: int(0..4) (representing constraint (aux678 + aux680))
c Both direct and order encoding.
c Var 'aux683' order represents '0' with '12946'
c Var 'aux683' direct represents '0' with '12946'
c Var 'aux683' order represents '1' with '12947'
-12946 12947 0
c Var 'aux683' direct represents '1' with '12948'
12946 -12947 12948 0
-12948 12947 0
-12948 -12946 0
c Var 'aux683' order represents '2' with '12949'
-12947 12949 0
c Var 'aux683' direct represents '2' with '12950'
12947 -12949 12950 0
-12950 12949 0
-12950 -12947 0
c Var 'aux683' order represents '3' with '12951'
-12949 12951 0
c Var 'aux683' direct represents '3' with '12952'
12949 -12951 12952 0
-12952 12951 0
-12952 -12949 0
c Var 'aux683' direct represents '4' with '-12951'
12946 12948 12950 12952 -12951 0
c Encoding variable: aux684 with domain: int(0..2) (representing constraint ((field_00005_00001=4) + (field_00005_00009=4)))
c Both direct and order encoding.
c Var 'aux684' order represents '0' with '12953'
c Var 'aux684' direct represents '0' with '12953'
c Var 'aux684' order represents '1' with '12954'
-12953 12954 0
c Var 'aux684' direct represents '1' with '12955'
12953 -12954 12955 0
-12955 12954 0
-12955 -12953 0
c Var 'aux684' direct represents '2' with '-12954'
12953 12955 -12954 0
c Encoding variable: aux685 with domain: int(0..2) (representing constraint ((field_00005_00008=4) + (field_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux685' order represents '0' with '12956'
c Var 'aux685' direct represents '0' with '12956'
c Var 'aux685' order represents '1' with '12957'
-12956 12957 0
c Var 'aux685' direct represents '1' with '12958'
12956 -12957 12958 0
-12958 12957 0
-12958 -12956 0
c Var 'aux685' direct represents '2' with '-12957'
12956 12958 -12957 0
c Encoding variable: aux686 with domain: int(0..2) (representing constraint ((field_00005_00007=4) + (field_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux686' order represents '0' with '12959'
c Var 'aux686' direct represents '0' with '12959'
c Var 'aux686' order represents '1' with '12960'
-12959 12960 0
c Var 'aux686' direct represents '1' with '12961'
12959 -12960 12961 0
-12961 12960 0
-12961 -12959 0
c Var 'aux686' direct represents '2' with '-12960'
12959 12961 -12960 0
c Encoding variable: aux687 with domain: int(0..2) (representing constraint ((field_00005_00006=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux687' order represents '0' with '12962'
c Var 'aux687' direct represents '0' with '12962'
c Var 'aux687' order represents '1' with '12963'
-12962 12963 0
c Var 'aux687' direct represents '1' with '12964'
12962 -12963 12964 0
-12964 12963 0
-12964 -12962 0
c Var 'aux687' direct represents '2' with '-12963'
12962 12964 -12963 0
c Encoding variable: aux688 with domain: int(0..3) (representing constraint ((field_00005_00003=4) + aux687))
c Both direct and order encoding.
c Var 'aux688' order represents '0' with '12965'
c Var 'aux688' direct represents '0' with '12965'
c Var 'aux688' order represents '1' with '12966'
-12965 12966 0
c Var 'aux688' direct represents '1' with '12967'
12965 -12966 12967 0
-12967 12966 0
-12967 -12965 0
c Var 'aux688' order represents '2' with '12968'
-12966 12968 0
c Var 'aux688' direct represents '2' with '12969'
12966 -12968 12969 0
-12969 12968 0
-12969 -12966 0
c Var 'aux688' direct represents '3' with '-12968'
12965 12967 12969 -12968 0
c Encoding variable: aux689 with domain: int(0..4) (representing constraint (aux684 + aux686))
c Both direct and order encoding.
c Var 'aux689' order represents '0' with '12970'
c Var 'aux689' direct represents '0' with '12970'
c Var 'aux689' order represents '1' with '12971'
-12970 12971 0
c Var 'aux689' direct represents '1' with '12972'
12970 -12971 12972 0
-12972 12971 0
-12972 -12970 0
c Var 'aux689' order represents '2' with '12973'
-12971 12973 0
c Var 'aux689' direct represents '2' with '12974'
12971 -12973 12974 0
-12974 12973 0
-12974 -12971 0
c Var 'aux689' order represents '3' with '12975'
-12973 12975 0
c Var 'aux689' direct represents '3' with '12976'
12973 -12975 12976 0
-12976 12975 0
-12976 -12973 0
c Var 'aux689' direct represents '4' with '-12975'
12970 12972 12974 12976 -12975 0
c Encoding variable: aux690 with domain: int(0..2) (representing constraint ((field_00005_00001=5) + (field_00005_00009=5)))
c Both direct and order encoding.
c Var 'aux690' order represents '0' with '12977'
c Var 'aux690' direct represents '0' with '12977'
c Var 'aux690' order represents '1' with '12978'
-12977 12978 0
c Var 'aux690' direct represents '1' with '12979'
12977 -12978 12979 0
-12979 12978 0
-12979 -12977 0
c Var 'aux690' direct represents '2' with '-12978'
12977 12979 -12978 0
c Encoding variable: aux691 with domain: int(0..2) (representing constraint ((field_00005_00008=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux691' order represents '0' with '12980'
c Var 'aux691' direct represents '0' with '12980'
c Var 'aux691' order represents '1' with '12981'
-12980 12981 0
c Var 'aux691' direct represents '1' with '12982'
12980 -12981 12982 0
-12982 12981 0
-12982 -12980 0
c Var 'aux691' direct represents '2' with '-12981'
12980 12982 -12981 0
c Encoding variable: aux692 with domain: int(0..2) (representing constraint ((field_00005_00007=5) + (field_00005_00004=5)))
c Both direct and order encoding.
c Var 'aux692' order represents '0' with '12983'
c Var 'aux692' direct represents '0' with '12983'
c Var 'aux692' order represents '1' with '12984'
-12983 12984 0
c Var 'aux692' direct represents '1' with '12985'
12983 -12984 12985 0
-12985 12984 0
-12985 -12983 0
c Var 'aux692' direct represents '2' with '-12984'
12983 12985 -12984 0
c Encoding variable: aux693 with domain: int(0..2) (representing constraint ((field_00005_00006=5) + (field_00005_00005=5)))
c Both direct and order encoding.
c Var 'aux693' order represents '0' with '12986'
c Var 'aux693' direct represents '0' with '12986'
c Var 'aux693' order represents '1' with '12987'
-12986 12987 0
c Var 'aux693' direct represents '1' with '12988'
12986 -12987 12988 0
-12988 12987 0
-12988 -12986 0
c Var 'aux693' direct represents '2' with '-12987'
12986 12988 -12987 0
c Encoding variable: aux694 with domain: int(0..3) (representing constraint ((field_00005_00003=5) + aux693))
c Both direct and order encoding.
c Var 'aux694' order represents '0' with '12989'
c Var 'aux694' direct represents '0' with '12989'
c Var 'aux694' order represents '1' with '12990'
-12989 12990 0
c Var 'aux694' direct represents '1' with '12991'
12989 -12990 12991 0
-12991 12990 0
-12991 -12989 0
c Var 'aux694' order represents '2' with '12992'
-12990 12992 0
c Var 'aux694' direct represents '2' with '12993'
12990 -12992 12993 0
-12993 12992 0
-12993 -12990 0
c Var 'aux694' direct represents '3' with '-12992'
12989 12991 12993 -12992 0
c Encoding variable: aux695 with domain: int(0..4) (representing constraint (aux690 + aux692))
c Both direct and order encoding.
c Var 'aux695' order represents '0' with '12994'
c Var 'aux695' direct represents '0' with '12994'
c Var 'aux695' order represents '1' with '12995'
-12994 12995 0
c Var 'aux695' direct represents '1' with '12996'
12994 -12995 12996 0
-12996 12995 0
-12996 -12994 0
c Var 'aux695' order represents '2' with '12997'
-12995 12997 0
c Var 'aux695' direct represents '2' with '12998'
12995 -12997 12998 0
-12998 12997 0
-12998 -12995 0
c Var 'aux695' order represents '3' with '12999'
-12997 12999 0
c Var 'aux695' direct represents '3' with '13000'
12997 -12999 13000 0
-13000 12999 0
-13000 -12997 0
c Var 'aux695' direct represents '4' with '-12999'
12994 12996 12998 13000 -12999 0
c Encoding variable: aux696 with domain: int(0..2) (representing constraint ((field_00005_00001=6) + (field_00005_00009=6)))
c Both direct and order encoding.
c Var 'aux696' order represents '0' with '13001'
c Var 'aux696' direct represents '0' with '13001'
c Var 'aux696' order represents '1' with '13002'
-13001 13002 0
c Var 'aux696' direct represents '1' with '13003'
13001 -13002 13003 0
-13003 13002 0
-13003 -13001 0
c Var 'aux696' direct represents '2' with '-13002'
13001 13003 -13002 0
c Encoding variable: aux697 with domain: int(0..2) (representing constraint ((field_00005_00008=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux697' order represents '0' with '13004'
c Var 'aux697' direct represents '0' with '13004'
c Var 'aux697' order represents '1' with '13005'
-13004 13005 0
c Var 'aux697' direct represents '1' with '13006'
13004 -13005 13006 0
-13006 13005 0
-13006 -13004 0
c Var 'aux697' direct represents '2' with '-13005'
13004 13006 -13005 0
c Encoding variable: aux698 with domain: int(0..2) (representing constraint ((field_00005_00007=6) + (field_00005_00004=6)))
c Both direct and order encoding.
c Var 'aux698' order represents '0' with '13007'
c Var 'aux698' direct represents '0' with '13007'
c Var 'aux698' order represents '1' with '13008'
-13007 13008 0
c Var 'aux698' direct represents '1' with '13009'
13007 -13008 13009 0
-13009 13008 0
-13009 -13007 0
c Var 'aux698' direct represents '2' with '-13008'
13007 13009 -13008 0
c Encoding variable: aux699 with domain: int(0..2) (representing constraint ((field_00005_00006=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux699' order represents '0' with '13010'
c Var 'aux699' direct represents '0' with '13010'
c Var 'aux699' order represents '1' with '13011'
-13010 13011 0
c Var 'aux699' direct represents '1' with '13012'
13010 -13011 13012 0
-13012 13011 0
-13012 -13010 0
c Var 'aux699' direct represents '2' with '-13011'
13010 13012 -13011 0
c Encoding variable: aux700 with domain: int(0..3) (representing constraint ((field_00005_00003=6) + aux699))
c Both direct and order encoding.
c Var 'aux700' order represents '0' with '13013'
c Var 'aux700' direct represents '0' with '13013'
c Var 'aux700' order represents '1' with '13014'
-13013 13014 0
c Var 'aux700' direct represents '1' with '13015'
13013 -13014 13015 0
-13015 13014 0
-13015 -13013 0
c Var 'aux700' order represents '2' with '13016'
-13014 13016 0
c Var 'aux700' direct represents '2' with '13017'
13014 -13016 13017 0
-13017 13016 0
-13017 -13014 0
c Var 'aux700' direct represents '3' with '-13016'
13013 13015 13017 -13016 0
c Encoding variable: aux701 with domain: int(0..4) (representing constraint (aux696 + aux698))
c Both direct and order encoding.
c Var 'aux701' order represents '0' with '13018'
c Var 'aux701' direct represents '0' with '13018'
c Var 'aux701' order represents '1' with '13019'
-13018 13019 0
c Var 'aux701' direct represents '1' with '13020'
13018 -13019 13020 0
-13020 13019 0
-13020 -13018 0
c Var 'aux701' order represents '2' with '13021'
-13019 13021 0
c Var 'aux701' direct represents '2' with '13022'
13019 -13021 13022 0
-13022 13021 0
-13022 -13019 0
c Var 'aux701' order represents '3' with '13023'
-13021 13023 0
c Var 'aux701' direct represents '3' with '13024'
13021 -13023 13024 0
-13024 13023 0
-13024 -13021 0
c Var 'aux701' direct represents '4' with '-13023'
13018 13020 13022 13024 -13023 0
c Encoding variable: aux702 with domain: int(0..2) (representing constraint ((field_00005_00001=7) + (field_00005_00009=7)))
c Both direct and order encoding.
c Var 'aux702' order represents '0' with '13025'
c Var 'aux702' direct represents '0' with '13025'
c Var 'aux702' order represents '1' with '13026'
-13025 13026 0
c Var 'aux702' direct represents '1' with '13027'
13025 -13026 13027 0
-13027 13026 0
-13027 -13025 0
c Var 'aux702' direct represents '2' with '-13026'
13025 13027 -13026 0
c Encoding variable: aux703 with domain: int(0..2) (representing constraint ((field_00005_00008=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux703' order represents '0' with '13028'
c Var 'aux703' direct represents '0' with '13028'
c Var 'aux703' order represents '1' with '13029'
-13028 13029 0
c Var 'aux703' direct represents '1' with '13030'
13028 -13029 13030 0
-13030 13029 0
-13030 -13028 0
c Var 'aux703' direct represents '2' with '-13029'
13028 13030 -13029 0
c Encoding variable: aux704 with domain: int(0..2) (representing constraint ((field_00005_00007=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux704' order represents '0' with '13031'
c Var 'aux704' direct represents '0' with '13031'
c Var 'aux704' order represents '1' with '13032'
-13031 13032 0
c Var 'aux704' direct represents '1' with '13033'
13031 -13032 13033 0
-13033 13032 0
-13033 -13031 0
c Var 'aux704' direct represents '2' with '-13032'
13031 13033 -13032 0
c Encoding variable: aux705 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux705' order represents '0' with '13034'
c Var 'aux705' direct represents '0' with '13034'
c Var 'aux705' order represents '1' with '13035'
-13034 13035 0
c Var 'aux705' direct represents '1' with '13036'
13034 -13035 13036 0
-13036 13035 0
-13036 -13034 0
c Var 'aux705' direct represents '2' with '-13035'
13034 13036 -13035 0
c Encoding variable: aux706 with domain: int(0..3) (representing constraint ((field_00005_00003=7) + aux705))
c Both direct and order encoding.
c Var 'aux706' order represents '0' with '13037'
c Var 'aux706' direct represents '0' with '13037'
c Var 'aux706' order represents '1' with '13038'
-13037 13038 0
c Var 'aux706' direct represents '1' with '13039'
13037 -13038 13039 0
-13039 13038 0
-13039 -13037 0
c Var 'aux706' order represents '2' with '13040'
-13038 13040 0
c Var 'aux706' direct represents '2' with '13041'
13038 -13040 13041 0
-13041 13040 0
-13041 -13038 0
c Var 'aux706' direct represents '3' with '-13040'
13037 13039 13041 -13040 0
c Encoding variable: aux707 with domain: int(0..4) (representing constraint (aux702 + aux704))
c Both direct and order encoding.
c Var 'aux707' order represents '0' with '13042'
c Var 'aux707' direct represents '0' with '13042'
c Var 'aux707' order represents '1' with '13043'
-13042 13043 0
c Var 'aux707' direct represents '1' with '13044'
13042 -13043 13044 0
-13044 13043 0
-13044 -13042 0
c Var 'aux707' order represents '2' with '13045'
-13043 13045 0
c Var 'aux707' direct represents '2' with '13046'
13043 -13045 13046 0
-13046 13045 0
-13046 -13043 0
c Var 'aux707' order represents '3' with '13047'
-13045 13047 0
c Var 'aux707' direct represents '3' with '13048'
13045 -13047 13048 0
-13048 13047 0
-13048 -13045 0
c Var 'aux707' direct represents '4' with '-13047'
13042 13044 13046 13048 -13047 0
c Encoding variable: aux708 with domain: int(0..2) (representing constraint ((field_00005_00001=8) + (field_00005_00009=8)))
c Both direct and order encoding.
c Var 'aux708' order represents '0' with '13049'
c Var 'aux708' direct represents '0' with '13049'
c Var 'aux708' order represents '1' with '13050'
-13049 13050 0
c Var 'aux708' direct represents '1' with '13051'
13049 -13050 13051 0
-13051 13050 0
-13051 -13049 0
c Var 'aux708' direct represents '2' with '-13050'
13049 13051 -13050 0
c Encoding variable: aux709 with domain: int(0..2) (representing constraint ((field_00005_00008=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux709' order represents '0' with '13052'
c Var 'aux709' direct represents '0' with '13052'
c Var 'aux709' order represents '1' with '13053'
-13052 13053 0
c Var 'aux709' direct represents '1' with '13054'
13052 -13053 13054 0
-13054 13053 0
-13054 -13052 0
c Var 'aux709' direct represents '2' with '-13053'
13052 13054 -13053 0
c Encoding variable: aux710 with domain: int(0..2) (representing constraint ((field_00005_00007=8) + (field_00005_00004=8)))
c Both direct and order encoding.
c Var 'aux710' order represents '0' with '13055'
c Var 'aux710' direct represents '0' with '13055'
c Var 'aux710' order represents '1' with '13056'
-13055 13056 0
c Var 'aux710' direct represents '1' with '13057'
13055 -13056 13057 0
-13057 13056 0
-13057 -13055 0
c Var 'aux710' direct represents '2' with '-13056'
13055 13057 -13056 0
c Encoding variable: aux711 with domain: int(0..2) (representing constraint ((field_00005_00006=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux711' order represents '0' with '13058'
c Var 'aux711' direct represents '0' with '13058'
c Var 'aux711' order represents '1' with '13059'
-13058 13059 0
c Var 'aux711' direct represents '1' with '13060'
13058 -13059 13060 0
-13060 13059 0
-13060 -13058 0
c Var 'aux711' direct represents '2' with '-13059'
13058 13060 -13059 0
c Encoding variable: aux712 with domain: int(0..3) (representing constraint ((field_00005_00003=8) + aux711))
c Both direct and order encoding.
c Var 'aux712' order represents '0' with '13061'
c Var 'aux712' direct represents '0' with '13061'
c Var 'aux712' order represents '1' with '13062'
-13061 13062 0
c Var 'aux712' direct represents '1' with '13063'
13061 -13062 13063 0
-13063 13062 0
-13063 -13061 0
c Var 'aux712' order represents '2' with '13064'
-13062 13064 0
c Var 'aux712' direct represents '2' with '13065'
13062 -13064 13065 0
-13065 13064 0
-13065 -13062 0
c Var 'aux712' direct represents '3' with '-13064'
13061 13063 13065 -13064 0
c Encoding variable: aux713 with domain: int(0..4) (representing constraint (aux708 + aux710))
c Both direct and order encoding.
c Var 'aux713' order represents '0' with '13066'
c Var 'aux713' direct represents '0' with '13066'
c Var 'aux713' order represents '1' with '13067'
-13066 13067 0
c Var 'aux713' direct represents '1' with '13068'
13066 -13067 13068 0
-13068 13067 0
-13068 -13066 0
c Var 'aux713' order represents '2' with '13069'
-13067 13069 0
c Var 'aux713' direct represents '2' with '13070'
13067 -13069 13070 0
-13070 13069 0
-13070 -13067 0
c Var 'aux713' order represents '3' with '13071'
-13069 13071 0
c Var 'aux713' direct represents '3' with '13072'
13069 -13071 13072 0
-13072 13071 0
-13072 -13069 0
c Var 'aux713' direct represents '4' with '-13071'
13066 13068 13070 13072 -13071 0
c Encoding variable: aux714 with domain: int(0..2) (representing constraint ((field_00005_00001=9) + (field_00005_00009=9)))
c Both direct and order encoding.
c Var 'aux714' order represents '0' with '13073'
c Var 'aux714' direct represents '0' with '13073'
c Var 'aux714' order represents '1' with '13074'
-13073 13074 0
c Var 'aux714' direct represents '1' with '13075'
13073 -13074 13075 0
-13075 13074 0
-13075 -13073 0
c Var 'aux714' direct represents '2' with '-13074'
13073 13075 -13074 0
c Encoding variable: aux715 with domain: int(0..2) (representing constraint ((field_00005_00008=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux715' order represents '0' with '13076'
c Var 'aux715' direct represents '0' with '13076'
c Var 'aux715' order represents '1' with '13077'
-13076 13077 0
c Var 'aux715' direct represents '1' with '13078'
13076 -13077 13078 0
-13078 13077 0
-13078 -13076 0
c Var 'aux715' direct represents '2' with '-13077'
13076 13078 -13077 0
c Encoding variable: aux716 with domain: int(0..2) (representing constraint ((field_00005_00007=9) + (field_00005_00004=9)))
c Both direct and order encoding.
c Var 'aux716' order represents '0' with '13079'
c Var 'aux716' direct represents '0' with '13079'
c Var 'aux716' order represents '1' with '13080'
-13079 13080 0
c Var 'aux716' direct represents '1' with '13081'
13079 -13080 13081 0
-13081 13080 0
-13081 -13079 0
c Var 'aux716' direct represents '2' with '-13080'
13079 13081 -13080 0
c Encoding variable: aux717 with domain: int(0..2) (representing constraint ((field_00005_00006=9) + (field_00005_00005=9)))
c Both direct and order encoding.
c Var 'aux717' order represents '0' with '13082'
c Var 'aux717' direct represents '0' with '13082'
c Var 'aux717' order represents '1' with '13083'
-13082 13083 0
c Var 'aux717' direct represents '1' with '13084'
13082 -13083 13084 0
-13084 13083 0
-13084 -13082 0
c Var 'aux717' direct represents '2' with '-13083'
13082 13084 -13083 0
c Encoding variable: aux718 with domain: int(0..3) (representing constraint ((field_00005_00003=9) + aux717))
c Both direct and order encoding.
c Var 'aux718' order represents '0' with '13085'
c Var 'aux718' direct represents '0' with '13085'
c Var 'aux718' order represents '1' with '13086'
-13085 13086 0
c Var 'aux718' direct represents '1' with '13087'
13085 -13086 13087 0
-13087 13086 0
-13087 -13085 0
c Var 'aux718' order represents '2' with '13088'
-13086 13088 0
c Var 'aux718' direct represents '2' with '13089'
13086 -13088 13089 0
-13089 13088 0
-13089 -13086 0
c Var 'aux718' direct represents '3' with '-13088'
13085 13087 13089 -13088 0
c Encoding variable: aux719 with domain: int(0..4) (representing constraint (aux714 + aux716))
c Both direct and order encoding.
c Var 'aux719' order represents '0' with '13090'
c Var 'aux719' direct represents '0' with '13090'
c Var 'aux719' order represents '1' with '13091'
-13090 13091 0
c Var 'aux719' direct represents '1' with '13092'
13090 -13091 13092 0
-13092 13091 0
-13092 -13090 0
c Var 'aux719' order represents '2' with '13093'
-13091 13093 0
c Var 'aux719' direct represents '2' with '13094'
13091 -13093 13094 0
-13094 13093 0
-13094 -13091 0
c Var 'aux719' order represents '3' with '13095'
-13093 13095 0
c Var 'aux719' direct represents '3' with '13096'
13093 -13095 13096 0
-13096 13095 0
-13096 -13093 0
c Var 'aux719' direct represents '4' with '-13095'
13090 13092 13094 13096 -13095 0
c Encoding variable: aux720 with domain: int(0..2) (representing constraint ((field_00006_00001=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux720' order represents '0' with '13097'
c Var 'aux720' direct represents '0' with '13097'
c Var 'aux720' order represents '1' with '13098'
-13097 13098 0
c Var 'aux720' direct represents '1' with '13099'
13097 -13098 13099 0
-13099 13098 0
-13099 -13097 0
c Var 'aux720' direct represents '2' with '-13098'
13097 13099 -13098 0
c Encoding variable: aux721 with domain: int(0..2) (representing constraint ((field_00006_00008=1) + (field_00006_00002=1)))
c Both direct and order encoding.
c Var 'aux721' order represents '0' with '13100'
c Var 'aux721' direct represents '0' with '13100'
c Var 'aux721' order represents '1' with '13101'
-13100 13101 0
c Var 'aux721' direct represents '1' with '13102'
13100 -13101 13102 0
-13102 13101 0
-13102 -13100 0
c Var 'aux721' direct represents '2' with '-13101'
13100 13102 -13101 0
c Encoding variable: aux722 with domain: int(0..2) (representing constraint ((field_00006_00007=1) + (field_00006_00004=1)))
c Both direct and order encoding.
c Var 'aux722' order represents '0' with '13103'
c Var 'aux722' direct represents '0' with '13103'
c Var 'aux722' order represents '1' with '13104'
-13103 13104 0
c Var 'aux722' direct represents '1' with '13105'
13103 -13104 13105 0
-13105 13104 0
-13105 -13103 0
c Var 'aux722' direct represents '2' with '-13104'
13103 13105 -13104 0
c Encoding variable: aux723 with domain: int(0..2) (representing constraint ((field_00006_00006=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux723' order represents '0' with '13106'
c Var 'aux723' direct represents '0' with '13106'
c Var 'aux723' order represents '1' with '13107'
-13106 13107 0
c Var 'aux723' direct represents '1' with '13108'
13106 -13107 13108 0
-13108 13107 0
-13108 -13106 0
c Var 'aux723' direct represents '2' with '-13107'
13106 13108 -13107 0
c Encoding variable: aux724 with domain: int(0..3) (representing constraint ((field_00006_00003=1) + aux723))
c Both direct and order encoding.
c Var 'aux724' order represents '0' with '13109'
c Var 'aux724' direct represents '0' with '13109'
c Var 'aux724' order represents '1' with '13110'
-13109 13110 0
c Var 'aux724' direct represents '1' with '13111'
13109 -13110 13111 0
-13111 13110 0
-13111 -13109 0
c Var 'aux724' order represents '2' with '13112'
-13110 13112 0
c Var 'aux724' direct represents '2' with '13113'
13110 -13112 13113 0
-13113 13112 0
-13113 -13110 0
c Var 'aux724' direct represents '3' with '-13112'
13109 13111 13113 -13112 0
c Encoding variable: aux725 with domain: int(0..4) (representing constraint (aux720 + aux722))
c Both direct and order encoding.
c Var 'aux725' order represents '0' with '13114'
c Var 'aux725' direct represents '0' with '13114'
c Var 'aux725' order represents '1' with '13115'
-13114 13115 0
c Var 'aux725' direct represents '1' with '13116'
13114 -13115 13116 0
-13116 13115 0
-13116 -13114 0
c Var 'aux725' order represents '2' with '13117'
-13115 13117 0
c Var 'aux725' direct represents '2' with '13118'
13115 -13117 13118 0
-13118 13117 0
-13118 -13115 0
c Var 'aux725' order represents '3' with '13119'
-13117 13119 0
c Var 'aux725' direct represents '3' with '13120'
13117 -13119 13120 0
-13120 13119 0
-13120 -13117 0
c Var 'aux725' direct represents '4' with '-13119'
13114 13116 13118 13120 -13119 0
c Encoding variable: aux726 with domain: int(0..2) (representing constraint ((field_00006_00001=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux726' order represents '0' with '13121'
c Var 'aux726' direct represents '0' with '13121'
c Var 'aux726' order represents '1' with '13122'
-13121 13122 0
c Var 'aux726' direct represents '1' with '13123'
13121 -13122 13123 0
-13123 13122 0
-13123 -13121 0
c Var 'aux726' direct represents '2' with '-13122'
13121 13123 -13122 0
c Encoding variable: aux727 with domain: int(0..2) (representing constraint ((field_00006_00008=2) + (field_00006_00002=2)))
c Both direct and order encoding.
c Var 'aux727' order represents '0' with '13124'
c Var 'aux727' direct represents '0' with '13124'
c Var 'aux727' order represents '1' with '13125'
-13124 13125 0
c Var 'aux727' direct represents '1' with '13126'
13124 -13125 13126 0
-13126 13125 0
-13126 -13124 0
c Var 'aux727' direct represents '2' with '-13125'
13124 13126 -13125 0
c Encoding variable: aux728 with domain: int(0..2) (representing constraint ((field_00006_00007=2) + (field_00006_00004=2)))
c Both direct and order encoding.
c Var 'aux728' order represents '0' with '13127'
c Var 'aux728' direct represents '0' with '13127'
c Var 'aux728' order represents '1' with '13128'
-13127 13128 0
c Var 'aux728' direct represents '1' with '13129'
13127 -13128 13129 0
-13129 13128 0
-13129 -13127 0
c Var 'aux728' direct represents '2' with '-13128'
13127 13129 -13128 0
c Encoding variable: aux729 with domain: int(0..2) (representing constraint ((field_00006_00006=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux729' order represents '0' with '13130'
c Var 'aux729' direct represents '0' with '13130'
c Var 'aux729' order represents '1' with '13131'
-13130 13131 0
c Var 'aux729' direct represents '1' with '13132'
13130 -13131 13132 0
-13132 13131 0
-13132 -13130 0
c Var 'aux729' direct represents '2' with '-13131'
13130 13132 -13131 0
c Encoding variable: aux730 with domain: int(0..3) (representing constraint ((field_00006_00003=2) + aux729))
c Both direct and order encoding.
c Var 'aux730' order represents '0' with '13133'
c Var 'aux730' direct represents '0' with '13133'
c Var 'aux730' order represents '1' with '13134'
-13133 13134 0
c Var 'aux730' direct represents '1' with '13135'
13133 -13134 13135 0
-13135 13134 0
-13135 -13133 0
c Var 'aux730' order represents '2' with '13136'
-13134 13136 0
c Var 'aux730' direct represents '2' with '13137'
13134 -13136 13137 0
-13137 13136 0
-13137 -13134 0
c Var 'aux730' direct represents '3' with '-13136'
13133 13135 13137 -13136 0
c Encoding variable: aux731 with domain: int(0..4) (representing constraint (aux726 + aux728))
c Both direct and order encoding.
c Var 'aux731' order represents '0' with '13138'
c Var 'aux731' direct represents '0' with '13138'
c Var 'aux731' order represents '1' with '13139'
-13138 13139 0
c Var 'aux731' direct represents '1' with '13140'
13138 -13139 13140 0
-13140 13139 0
-13140 -13138 0
c Var 'aux731' order represents '2' with '13141'
-13139 13141 0
c Var 'aux731' direct represents '2' with '13142'
13139 -13141 13142 0
-13142 13141 0
-13142 -13139 0
c Var 'aux731' order represents '3' with '13143'
-13141 13143 0
c Var 'aux731' direct represents '3' with '13144'
13141 -13143 13144 0
-13144 13143 0
-13144 -13141 0
c Var 'aux731' direct represents '4' with '-13143'
13138 13140 13142 13144 -13143 0
c Encoding variable: aux732 with domain: int(0..2) (representing constraint ((field_00006_00001=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux732' order represents '0' with '13145'
c Var 'aux732' direct represents '0' with '13145'
c Var 'aux732' order represents '1' with '13146'
-13145 13146 0
c Var 'aux732' direct represents '1' with '13147'
13145 -13146 13147 0
-13147 13146 0
-13147 -13145 0
c Var 'aux732' direct represents '2' with '-13146'
13145 13147 -13146 0
c Encoding variable: aux733 with domain: int(0..2) (representing constraint ((field_00006_00008=3) + (field_00006_00002=3)))
c Both direct and order encoding.
c Var 'aux733' order represents '0' with '13148'
c Var 'aux733' direct represents '0' with '13148'
c Var 'aux733' order represents '1' with '13149'
-13148 13149 0
c Var 'aux733' direct represents '1' with '13150'
13148 -13149 13150 0
-13150 13149 0
-13150 -13148 0
c Var 'aux733' direct represents '2' with '-13149'
13148 13150 -13149 0
c Encoding variable: aux734 with domain: int(0..2) (representing constraint ((field_00006_00007=3) + (field_00006_00004=3)))
c Both direct and order encoding.
c Var 'aux734' order represents '0' with '13151'
c Var 'aux734' direct represents '0' with '13151'
c Var 'aux734' order represents '1' with '13152'
-13151 13152 0
c Var 'aux734' direct represents '1' with '13153'
13151 -13152 13153 0
-13153 13152 0
-13153 -13151 0
c Var 'aux734' direct represents '2' with '-13152'
13151 13153 -13152 0
c Encoding variable: aux735 with domain: int(0..2) (representing constraint ((field_00006_00006=3) + (field_00006_00005=3)))
c Both direct and order encoding.
c Var 'aux735' order represents '0' with '13154'
c Var 'aux735' direct represents '0' with '13154'
c Var 'aux735' order represents '1' with '13155'
-13154 13155 0
c Var 'aux735' direct represents '1' with '13156'
13154 -13155 13156 0
-13156 13155 0
-13156 -13154 0
c Var 'aux735' direct represents '2' with '-13155'
13154 13156 -13155 0
c Encoding variable: aux736 with domain: int(0..3) (representing constraint ((field_00006_00003=3) + aux735))
c Both direct and order encoding.
c Var 'aux736' order represents '0' with '13157'
c Var 'aux736' direct represents '0' with '13157'
c Var 'aux736' order represents '1' with '13158'
-13157 13158 0
c Var 'aux736' direct represents '1' with '13159'
13157 -13158 13159 0
-13159 13158 0
-13159 -13157 0
c Var 'aux736' order represents '2' with '13160'
-13158 13160 0
c Var 'aux736' direct represents '2' with '13161'
13158 -13160 13161 0
-13161 13160 0
-13161 -13158 0
c Var 'aux736' direct represents '3' with '-13160'
13157 13159 13161 -13160 0
c Encoding variable: aux737 with domain: int(0..4) (representing constraint (aux732 + aux734))
c Both direct and order encoding.
c Var 'aux737' order represents '0' with '13162'
c Var 'aux737' direct represents '0' with '13162'
c Var 'aux737' order represents '1' with '13163'
-13162 13163 0
c Var 'aux737' direct represents '1' with '13164'
13162 -13163 13164 0
-13164 13163 0
-13164 -13162 0
c Var 'aux737' order represents '2' with '13165'
-13163 13165 0
c Var 'aux737' direct represents '2' with '13166'
13163 -13165 13166 0
-13166 13165 0
-13166 -13163 0
c Var 'aux737' order represents '3' with '13167'
-13165 13167 0
c Var 'aux737' direct represents '3' with '13168'
13165 -13167 13168 0
-13168 13167 0
-13168 -13165 0
c Var 'aux737' direct represents '4' with '-13167'
13162 13164 13166 13168 -13167 0
c Encoding variable: aux738 with domain: int(0..2) (representing constraint ((field_00006_00001=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux738' order represents '0' with '13169'
c Var 'aux738' direct represents '0' with '13169'
c Var 'aux738' order represents '1' with '13170'
-13169 13170 0
c Var 'aux738' direct represents '1' with '13171'
13169 -13170 13171 0
-13171 13170 0
-13171 -13169 0
c Var 'aux738' direct represents '2' with '-13170'
13169 13171 -13170 0
c Encoding variable: aux739 with domain: int(0..2) (representing constraint ((field_00006_00008=4) + (field_00006_00002=4)))
c Both direct and order encoding.
c Var 'aux739' order represents '0' with '13172'
c Var 'aux739' direct represents '0' with '13172'
c Var 'aux739' order represents '1' with '13173'
-13172 13173 0
c Var 'aux739' direct represents '1' with '13174'
13172 -13173 13174 0
-13174 13173 0
-13174 -13172 0
c Var 'aux739' direct represents '2' with '-13173'
13172 13174 -13173 0
c Encoding variable: aux740 with domain: int(0..2) (representing constraint ((field_00006_00007=4) + (field_00006_00004=4)))
c Both direct and order encoding.
c Var 'aux740' order represents '0' with '13175'
c Var 'aux740' direct represents '0' with '13175'
c Var 'aux740' order represents '1' with '13176'
-13175 13176 0
c Var 'aux740' direct represents '1' with '13177'
13175 -13176 13177 0
-13177 13176 0
-13177 -13175 0
c Var 'aux740' direct represents '2' with '-13176'
13175 13177 -13176 0
c Encoding variable: aux741 with domain: int(0..2) (representing constraint ((field_00006_00006=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux741' order represents '0' with '13178'
c Var 'aux741' direct represents '0' with '13178'
c Var 'aux741' order represents '1' with '13179'
-13178 13179 0
c Var 'aux741' direct represents '1' with '13180'
13178 -13179 13180 0
-13180 13179 0
-13180 -13178 0
c Var 'aux741' direct represents '2' with '-13179'
13178 13180 -13179 0
c Encoding variable: aux742 with domain: int(0..3) (representing constraint ((field_00006_00003=4) + aux741))
c Both direct and order encoding.
c Var 'aux742' order represents '0' with '13181'
c Var 'aux742' direct represents '0' with '13181'
c Var 'aux742' order represents '1' with '13182'
-13181 13182 0
c Var 'aux742' direct represents '1' with '13183'
13181 -13182 13183 0
-13183 13182 0
-13183 -13181 0
c Var 'aux742' order represents '2' with '13184'
-13182 13184 0
c Var 'aux742' direct represents '2' with '13185'
13182 -13184 13185 0
-13185 13184 0
-13185 -13182 0
c Var 'aux742' direct represents '3' with '-13184'
13181 13183 13185 -13184 0
c Encoding variable: aux743 with domain: int(0..4) (representing constraint (aux738 + aux740))
c Both direct and order encoding.
c Var 'aux743' order represents '0' with '13186'
c Var 'aux743' direct represents '0' with '13186'
c Var 'aux743' order represents '1' with '13187'
-13186 13187 0
c Var 'aux743' direct represents '1' with '13188'
13186 -13187 13188 0
-13188 13187 0
-13188 -13186 0
c Var 'aux743' order represents '2' with '13189'
-13187 13189 0
c Var 'aux743' direct represents '2' with '13190'
13187 -13189 13190 0
-13190 13189 0
-13190 -13187 0
c Var 'aux743' order represents '3' with '13191'
-13189 13191 0
c Var 'aux743' direct represents '3' with '13192'
13189 -13191 13192 0
-13192 13191 0
-13192 -13189 0
c Var 'aux743' direct represents '4' with '-13191'
13186 13188 13190 13192 -13191 0
c Encoding variable: aux744 with domain: int(0..2) (representing constraint ((field_00006_00001=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux744' order represents '0' with '13193'
c Var 'aux744' direct represents '0' with '13193'
c Var 'aux744' order represents '1' with '13194'
-13193 13194 0
c Var 'aux744' direct represents '1' with '13195'
13193 -13194 13195 0
-13195 13194 0
-13195 -13193 0
c Var 'aux744' direct represents '2' with '-13194'
13193 13195 -13194 0
c Encoding variable: aux745 with domain: int(0..2) (representing constraint ((field_00006_00008=5) + (field_00006_00002=5)))
c Both direct and order encoding.
c Var 'aux745' order represents '0' with '13196'
c Var 'aux745' direct represents '0' with '13196'
c Var 'aux745' order represents '1' with '13197'
-13196 13197 0
c Var 'aux745' direct represents '1' with '13198'
13196 -13197 13198 0
-13198 13197 0
-13198 -13196 0
c Var 'aux745' direct represents '2' with '-13197'
13196 13198 -13197 0
c Encoding variable: aux746 with domain: int(0..2) (representing constraint ((field_00006_00007=5) + (field_00006_00004=5)))
c Both direct and order encoding.
c Var 'aux746' order represents '0' with '13199'
c Var 'aux746' direct represents '0' with '13199'
c Var 'aux746' order represents '1' with '13200'
-13199 13200 0
c Var 'aux746' direct represents '1' with '13201'
13199 -13200 13201 0
-13201 13200 0
-13201 -13199 0
c Var 'aux746' direct represents '2' with '-13200'
13199 13201 -13200 0
c Encoding variable: aux747 with domain: int(0..2) (representing constraint ((field_00006_00006=5) + (field_00006_00005=5)))
c Both direct and order encoding.
c Var 'aux747' order represents '0' with '13202'
c Var 'aux747' direct represents '0' with '13202'
c Var 'aux747' order represents '1' with '13203'
-13202 13203 0
c Var 'aux747' direct represents '1' with '13204'
13202 -13203 13204 0
-13204 13203 0
-13204 -13202 0
c Var 'aux747' direct represents '2' with '-13203'
13202 13204 -13203 0
c Encoding variable: aux748 with domain: int(0..3) (representing constraint ((field_00006_00003=5) + aux747))
c Both direct and order encoding.
c Var 'aux748' order represents '0' with '13205'
c Var 'aux748' direct represents '0' with '13205'
c Var 'aux748' order represents '1' with '13206'
-13205 13206 0
c Var 'aux748' direct represents '1' with '13207'
13205 -13206 13207 0
-13207 13206 0
-13207 -13205 0
c Var 'aux748' order represents '2' with '13208'
-13206 13208 0
c Var 'aux748' direct represents '2' with '13209'
13206 -13208 13209 0
-13209 13208 0
-13209 -13206 0
c Var 'aux748' direct represents '3' with '-13208'
13205 13207 13209 -13208 0
c Encoding variable: aux749 with domain: int(0..4) (representing constraint (aux744 + aux746))
c Both direct and order encoding.
c Var 'aux749' order represents '0' with '13210'
c Var 'aux749' direct represents '0' with '13210'
c Var 'aux749' order represents '1' with '13211'
-13210 13211 0
c Var 'aux749' direct represents '1' with '13212'
13210 -13211 13212 0
-13212 13211 0
-13212 -13210 0
c Var 'aux749' order represents '2' with '13213'
-13211 13213 0
c Var 'aux749' direct represents '2' with '13214'
13211 -13213 13214 0
-13214 13213 0
-13214 -13211 0
c Var 'aux749' order represents '3' with '13215'
-13213 13215 0
c Var 'aux749' direct represents '3' with '13216'
13213 -13215 13216 0
-13216 13215 0
-13216 -13213 0
c Var 'aux749' direct represents '4' with '-13215'
13210 13212 13214 13216 -13215 0
c Encoding variable: aux750 with domain: int(0..2) (representing constraint ((field_00006_00001=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux750' order represents '0' with '13217'
c Var 'aux750' direct represents '0' with '13217'
c Var 'aux750' order represents '1' with '13218'
-13217 13218 0
c Var 'aux750' direct represents '1' with '13219'
13217 -13218 13219 0
-13219 13218 0
-13219 -13217 0
c Var 'aux750' direct represents '2' with '-13218'
13217 13219 -13218 0
c Encoding variable: aux751 with domain: int(0..2) (representing constraint ((field_00006_00008=6) + (field_00006_00002=6)))
c Both direct and order encoding.
c Var 'aux751' order represents '0' with '13220'
c Var 'aux751' direct represents '0' with '13220'
c Var 'aux751' order represents '1' with '13221'
-13220 13221 0
c Var 'aux751' direct represents '1' with '13222'
13220 -13221 13222 0
-13222 13221 0
-13222 -13220 0
c Var 'aux751' direct represents '2' with '-13221'
13220 13222 -13221 0
c Encoding variable: aux752 with domain: int(0..2) (representing constraint ((field_00006_00007=6) + (field_00006_00004=6)))
c Both direct and order encoding.
c Var 'aux752' order represents '0' with '13223'
c Var 'aux752' direct represents '0' with '13223'
c Var 'aux752' order represents '1' with '13224'
-13223 13224 0
c Var 'aux752' direct represents '1' with '13225'
13223 -13224 13225 0
-13225 13224 0
-13225 -13223 0
c Var 'aux752' direct represents '2' with '-13224'
13223 13225 -13224 0
c Encoding variable: aux753 with domain: int(0..2) (representing constraint ((field_00006_00006=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux753' order represents '0' with '13226'
c Var 'aux753' direct represents '0' with '13226'
c Var 'aux753' order represents '1' with '13227'
-13226 13227 0
c Var 'aux753' direct represents '1' with '13228'
13226 -13227 13228 0
-13228 13227 0
-13228 -13226 0
c Var 'aux753' direct represents '2' with '-13227'
13226 13228 -13227 0
c Encoding variable: aux754 with domain: int(0..3) (representing constraint ((field_00006_00003=6) + aux753))
c Both direct and order encoding.
c Var 'aux754' order represents '0' with '13229'
c Var 'aux754' direct represents '0' with '13229'
c Var 'aux754' order represents '1' with '13230'
-13229 13230 0
c Var 'aux754' direct represents '1' with '13231'
13229 -13230 13231 0
-13231 13230 0
-13231 -13229 0
c Var 'aux754' order represents '2' with '13232'
-13230 13232 0
c Var 'aux754' direct represents '2' with '13233'
13230 -13232 13233 0
-13233 13232 0
-13233 -13230 0
c Var 'aux754' direct represents '3' with '-13232'
13229 13231 13233 -13232 0
c Encoding variable: aux755 with domain: int(0..4) (representing constraint (aux750 + aux752))
c Both direct and order encoding.
c Var 'aux755' order represents '0' with '13234'
c Var 'aux755' direct represents '0' with '13234'
c Var 'aux755' order represents '1' with '13235'
-13234 13235 0
c Var 'aux755' direct represents '1' with '13236'
13234 -13235 13236 0
-13236 13235 0
-13236 -13234 0
c Var 'aux755' order represents '2' with '13237'
-13235 13237 0
c Var 'aux755' direct represents '2' with '13238'
13235 -13237 13238 0
-13238 13237 0
-13238 -13235 0
c Var 'aux755' order represents '3' with '13239'
-13237 13239 0
c Var 'aux755' direct represents '3' with '13240'
13237 -13239 13240 0
-13240 13239 0
-13240 -13237 0
c Var 'aux755' direct represents '4' with '-13239'
13234 13236 13238 13240 -13239 0
c Encoding variable: aux756 with domain: int(0..2) (representing constraint ((field_00006_00001=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux756' order represents '0' with '13241'
c Var 'aux756' direct represents '0' with '13241'
c Var 'aux756' order represents '1' with '13242'
-13241 13242 0
c Var 'aux756' direct represents '1' with '13243'
13241 -13242 13243 0
-13243 13242 0
-13243 -13241 0
c Var 'aux756' direct represents '2' with '-13242'
13241 13243 -13242 0
c Encoding variable: aux757 with domain: int(0..2) (representing constraint ((field_00006_00008=7) + (field_00006_00002=7)))
c Both direct and order encoding.
c Var 'aux757' order represents '0' with '13244'
c Var 'aux757' direct represents '0' with '13244'
c Var 'aux757' order represents '1' with '13245'
-13244 13245 0
c Var 'aux757' direct represents '1' with '13246'
13244 -13245 13246 0
-13246 13245 0
-13246 -13244 0
c Var 'aux757' direct represents '2' with '-13245'
13244 13246 -13245 0
c Encoding variable: aux758 with domain: int(0..2) (representing constraint ((field_00006_00007=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux758' order represents '0' with '13247'
c Var 'aux758' direct represents '0' with '13247'
c Var 'aux758' order represents '1' with '13248'
-13247 13248 0
c Var 'aux758' direct represents '1' with '13249'
13247 -13248 13249 0
-13249 13248 0
-13249 -13247 0
c Var 'aux758' direct represents '2' with '-13248'
13247 13249 -13248 0
c Encoding variable: aux759 with domain: int(0..2) (representing constraint ((field_00006_00006=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux759' order represents '0' with '13250'
c Var 'aux759' direct represents '0' with '13250'
c Var 'aux759' order represents '1' with '13251'
-13250 13251 0
c Var 'aux759' direct represents '1' with '13252'
13250 -13251 13252 0
-13252 13251 0
-13252 -13250 0
c Var 'aux759' direct represents '2' with '-13251'
13250 13252 -13251 0
c Encoding variable: aux760 with domain: int(0..3) (representing constraint ((field_00006_00003=7) + aux759))
c Both direct and order encoding.
c Var 'aux760' order represents '0' with '13253'
c Var 'aux760' direct represents '0' with '13253'
c Var 'aux760' order represents '1' with '13254'
-13253 13254 0
c Var 'aux760' direct represents '1' with '13255'
13253 -13254 13255 0
-13255 13254 0
-13255 -13253 0
c Var 'aux760' order represents '2' with '13256'
-13254 13256 0
c Var 'aux760' direct represents '2' with '13257'
13254 -13256 13257 0
-13257 13256 0
-13257 -13254 0
c Var 'aux760' direct represents '3' with '-13256'
13253 13255 13257 -13256 0
c Encoding variable: aux761 with domain: int(0..4) (representing constraint (aux756 + aux758))
c Both direct and order encoding.
c Var 'aux761' order represents '0' with '13258'
c Var 'aux761' direct represents '0' with '13258'
c Var 'aux761' order represents '1' with '13259'
-13258 13259 0
c Var 'aux761' direct represents '1' with '13260'
13258 -13259 13260 0
-13260 13259 0
-13260 -13258 0
c Var 'aux761' order represents '2' with '13261'
-13259 13261 0
c Var 'aux761' direct represents '2' with '13262'
13259 -13261 13262 0
-13262 13261 0
-13262 -13259 0
c Var 'aux761' order represents '3' with '13263'
-13261 13263 0
c Var 'aux761' direct represents '3' with '13264'
13261 -13263 13264 0
-13264 13263 0
-13264 -13261 0
c Var 'aux761' direct represents '4' with '-13263'
13258 13260 13262 13264 -13263 0
c Encoding variable: aux762 with domain: int(0..2) (representing constraint ((field_00006_00001=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux762' order represents '0' with '13265'
c Var 'aux762' direct represents '0' with '13265'
c Var 'aux762' order represents '1' with '13266'
-13265 13266 0
c Var 'aux762' direct represents '1' with '13267'
13265 -13266 13267 0
-13267 13266 0
-13267 -13265 0
c Var 'aux762' direct represents '2' with '-13266'
13265 13267 -13266 0
c Encoding variable: aux763 with domain: int(0..2) (representing constraint ((field_00006_00008=8) + (field_00006_00002=8)))
c Both direct and order encoding.
c Var 'aux763' order represents '0' with '13268'
c Var 'aux763' direct represents '0' with '13268'
c Var 'aux763' order represents '1' with '13269'
-13268 13269 0
c Var 'aux763' direct represents '1' with '13270'
13268 -13269 13270 0
-13270 13269 0
-13270 -13268 0
c Var 'aux763' direct represents '2' with '-13269'
13268 13270 -13269 0
c Encoding variable: aux764 with domain: int(0..2) (representing constraint ((field_00006_00007=8) + (field_00006_00004=8)))
c Both direct and order encoding.
c Var 'aux764' order represents '0' with '13271'
c Var 'aux764' direct represents '0' with '13271'
c Var 'aux764' order represents '1' with '13272'
-13271 13272 0
c Var 'aux764' direct represents '1' with '13273'
13271 -13272 13273 0
-13273 13272 0
-13273 -13271 0
c Var 'aux764' direct represents '2' with '-13272'
13271 13273 -13272 0
c Encoding variable: aux765 with domain: int(0..2) (representing constraint ((field_00006_00006=8) + (field_00006_00005=8)))
c Both direct and order encoding.
c Var 'aux765' order represents '0' with '13274'
c Var 'aux765' direct represents '0' with '13274'
c Var 'aux765' order represents '1' with '13275'
-13274 13275 0
c Var 'aux765' direct represents '1' with '13276'
13274 -13275 13276 0
-13276 13275 0
-13276 -13274 0
c Var 'aux765' direct represents '2' with '-13275'
13274 13276 -13275 0
c Encoding variable: aux766 with domain: int(0..3) (representing constraint ((field_00006_00003=8) + aux765))
c Both direct and order encoding.
c Var 'aux766' order represents '0' with '13277'
c Var 'aux766' direct represents '0' with '13277'
c Var 'aux766' order represents '1' with '13278'
-13277 13278 0
c Var 'aux766' direct represents '1' with '13279'
13277 -13278 13279 0
-13279 13278 0
-13279 -13277 0
c Var 'aux766' order represents '2' with '13280'
-13278 13280 0
c Var 'aux766' direct represents '2' with '13281'
13278 -13280 13281 0
-13281 13280 0
-13281 -13278 0
c Var 'aux766' direct represents '3' with '-13280'
13277 13279 13281 -13280 0
c Encoding variable: aux767 with domain: int(0..4) (representing constraint (aux762 + aux764))
c Both direct and order encoding.
c Var 'aux767' order represents '0' with '13282'
c Var 'aux767' direct represents '0' with '13282'
c Var 'aux767' order represents '1' with '13283'
-13282 13283 0
c Var 'aux767' direct represents '1' with '13284'
13282 -13283 13284 0
-13284 13283 0
-13284 -13282 0
c Var 'aux767' order represents '2' with '13285'
-13283 13285 0
c Var 'aux767' direct represents '2' with '13286'
13283 -13285 13286 0
-13286 13285 0
-13286 -13283 0
c Var 'aux767' order represents '3' with '13287'
-13285 13287 0
c Var 'aux767' direct represents '3' with '13288'
13285 -13287 13288 0
-13288 13287 0
-13288 -13285 0
c Var 'aux767' direct represents '4' with '-13287'
13282 13284 13286 13288 -13287 0
c Encoding variable: aux768 with domain: int(0..2) (representing constraint ((field_00006_00001=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux768' order represents '0' with '13289'
c Var 'aux768' direct represents '0' with '13289'
c Var 'aux768' order represents '1' with '13290'
-13289 13290 0
c Var 'aux768' direct represents '1' with '13291'
13289 -13290 13291 0
-13291 13290 0
-13291 -13289 0
c Var 'aux768' direct represents '2' with '-13290'
13289 13291 -13290 0
c Encoding variable: aux769 with domain: int(0..2) (representing constraint ((field_00006_00008=9) + (field_00006_00002=9)))
c Both direct and order encoding.
c Var 'aux769' order represents '0' with '13292'
c Var 'aux769' direct represents '0' with '13292'
c Var 'aux769' order represents '1' with '13293'
-13292 13293 0
c Var 'aux769' direct represents '1' with '13294'
13292 -13293 13294 0
-13294 13293 0
-13294 -13292 0
c Var 'aux769' direct represents '2' with '-13293'
13292 13294 -13293 0
c Encoding variable: aux770 with domain: int(0..2) (representing constraint ((field_00006_00007=9) + (field_00006_00004=9)))
c Both direct and order encoding.
c Var 'aux770' order represents '0' with '13295'
c Var 'aux770' direct represents '0' with '13295'
c Var 'aux770' order represents '1' with '13296'
-13295 13296 0
c Var 'aux770' direct represents '1' with '13297'
13295 -13296 13297 0
-13297 13296 0
-13297 -13295 0
c Var 'aux770' direct represents '2' with '-13296'
13295 13297 -13296 0
c Encoding variable: aux771 with domain: int(0..2) (representing constraint ((field_00006_00006=9) + (field_00006_00005=9)))
c Both direct and order encoding.
c Var 'aux771' order represents '0' with '13298'
c Var 'aux771' direct represents '0' with '13298'
c Var 'aux771' order represents '1' with '13299'
-13298 13299 0
c Var 'aux771' direct represents '1' with '13300'
13298 -13299 13300 0
-13300 13299 0
-13300 -13298 0
c Var 'aux771' direct represents '2' with '-13299'
13298 13300 -13299 0
c Encoding variable: aux772 with domain: int(0..3) (representing constraint ((field_00006_00003=9) + aux771))
c Both direct and order encoding.
c Var 'aux772' order represents '0' with '13301'
c Var 'aux772' direct represents '0' with '13301'
c Var 'aux772' order represents '1' with '13302'
-13301 13302 0
c Var 'aux772' direct represents '1' with '13303'
13301 -13302 13303 0
-13303 13302 0
-13303 -13301 0
c Var 'aux772' order represents '2' with '13304'
-13302 13304 0
c Var 'aux772' direct represents '2' with '13305'
13302 -13304 13305 0
-13305 13304 0
-13305 -13302 0
c Var 'aux772' direct represents '3' with '-13304'
13301 13303 13305 -13304 0
c Encoding variable: aux773 with domain: int(0..4) (representing constraint (aux768 + aux770))
c Both direct and order encoding.
c Var 'aux773' order represents '0' with '13306'
c Var 'aux773' direct represents '0' with '13306'
c Var 'aux773' order represents '1' with '13307'
-13306 13307 0
c Var 'aux773' direct represents '1' with '13308'
13306 -13307 13308 0
-13308 13307 0
-13308 -13306 0
c Var 'aux773' order represents '2' with '13309'
-13307 13309 0
c Var 'aux773' direct represents '2' with '13310'
13307 -13309 13310 0
-13310 13309 0
-13310 -13307 0
c Var 'aux773' order represents '3' with '13311'
-13309 13311 0
c Var 'aux773' direct represents '3' with '13312'
13309 -13311 13312 0
-13312 13311 0
-13312 -13309 0
c Var 'aux773' direct represents '4' with '-13311'
13306 13308 13310 13312 -13311 0
c Encoding variable: aux774 with domain: int(0..2) (representing constraint ((field_00007_00001=1) + (field_00007_00009=1)))
c Both direct and order encoding.
c Var 'aux774' order represents '0' with '13313'
c Var 'aux774' direct represents '0' with '13313'
c Var 'aux774' order represents '1' with '13314'
-13313 13314 0
c Var 'aux774' direct represents '1' with '13315'
13313 -13314 13315 0
-13315 13314 0
-13315 -13313 0
c Var 'aux774' direct represents '2' with '-13314'
13313 13315 -13314 0
c Encoding variable: aux775 with domain: int(0..2) (representing constraint ((field_00007_00008=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux775' order represents '0' with '13316'
c Var 'aux775' direct represents '0' with '13316'
c Var 'aux775' order represents '1' with '13317'
-13316 13317 0
c Var 'aux775' direct represents '1' with '13318'
13316 -13317 13318 0
-13318 13317 0
-13318 -13316 0
c Var 'aux775' direct represents '2' with '-13317'
13316 13318 -13317 0
c Encoding variable: aux776 with domain: int(0..2) (representing constraint ((field_00007_00007=1) + (field_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux776' order represents '0' with '13319'
c Var 'aux776' direct represents '0' with '13319'
c Var 'aux776' order represents '1' with '13320'
-13319 13320 0
c Var 'aux776' direct represents '1' with '13321'
13319 -13320 13321 0
-13321 13320 0
-13321 -13319 0
c Var 'aux776' direct represents '2' with '-13320'
13319 13321 -13320 0
c Encoding variable: aux777 with domain: int(0..2) (representing constraint ((field_00007_00006=1) + (field_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux777' order represents '0' with '13322'
c Var 'aux777' direct represents '0' with '13322'
c Var 'aux777' order represents '1' with '13323'
-13322 13323 0
c Var 'aux777' direct represents '1' with '13324'
13322 -13323 13324 0
-13324 13323 0
-13324 -13322 0
c Var 'aux777' direct represents '2' with '-13323'
13322 13324 -13323 0
c Encoding variable: aux778 with domain: int(0..3) (representing constraint ((field_00007_00003=1) + aux777))
c Both direct and order encoding.
c Var 'aux778' order represents '0' with '13325'
c Var 'aux778' direct represents '0' with '13325'
c Var 'aux778' order represents '1' with '13326'
-13325 13326 0
c Var 'aux778' direct represents '1' with '13327'
13325 -13326 13327 0
-13327 13326 0
-13327 -13325 0
c Var 'aux778' order represents '2' with '13328'
-13326 13328 0
c Var 'aux778' direct represents '2' with '13329'
13326 -13328 13329 0
-13329 13328 0
-13329 -13326 0
c Var 'aux778' direct represents '3' with '-13328'
13325 13327 13329 -13328 0
c Encoding variable: aux779 with domain: int(0..4) (representing constraint (aux774 + aux776))
c Both direct and order encoding.
c Var 'aux779' order represents '0' with '13330'
c Var 'aux779' direct represents '0' with '13330'
c Var 'aux779' order represents '1' with '13331'
-13330 13331 0
c Var 'aux779' direct represents '1' with '13332'
13330 -13331 13332 0
-13332 13331 0
-13332 -13330 0
c Var 'aux779' order represents '2' with '13333'
-13331 13333 0
c Var 'aux779' direct represents '2' with '13334'
13331 -13333 13334 0
-13334 13333 0
-13334 -13331 0
c Var 'aux779' order represents '3' with '13335'
-13333 13335 0
c Var 'aux779' direct represents '3' with '13336'
13333 -13335 13336 0
-13336 13335 0
-13336 -13333 0
c Var 'aux779' direct represents '4' with '-13335'
13330 13332 13334 13336 -13335 0
c Encoding variable: aux780 with domain: int(0..2) (representing constraint ((field_00007_00001=2) + (field_00007_00009=2)))
c Both direct and order encoding.
c Var 'aux780' order represents '0' with '13337'
c Var 'aux780' direct represents '0' with '13337'
c Var 'aux780' order represents '1' with '13338'
-13337 13338 0
c Var 'aux780' direct represents '1' with '13339'
13337 -13338 13339 0
-13339 13338 0
-13339 -13337 0
c Var 'aux780' direct represents '2' with '-13338'
13337 13339 -13338 0
c Encoding variable: aux781 with domain: int(0..2) (representing constraint ((field_00007_00008=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux781' order represents '0' with '13340'
c Var 'aux781' direct represents '0' with '13340'
c Var 'aux781' order represents '1' with '13341'
-13340 13341 0
c Var 'aux781' direct represents '1' with '13342'
13340 -13341 13342 0
-13342 13341 0
-13342 -13340 0
c Var 'aux781' direct represents '2' with '-13341'
13340 13342 -13341 0
c Encoding variable: aux782 with domain: int(0..2) (representing constraint ((field_00007_00007=2) + (field_00007_00004=2)))
c Both direct and order encoding.
c Var 'aux782' order represents '0' with '13343'
c Var 'aux782' direct represents '0' with '13343'
c Var 'aux782' order represents '1' with '13344'
-13343 13344 0
c Var 'aux782' direct represents '1' with '13345'
13343 -13344 13345 0
-13345 13344 0
-13345 -13343 0
c Var 'aux782' direct represents '2' with '-13344'
13343 13345 -13344 0
c Encoding variable: aux783 with domain: int(0..2) (representing constraint ((field_00007_00006=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux783' order represents '0' with '13346'
c Var 'aux783' direct represents '0' with '13346'
c Var 'aux783' order represents '1' with '13347'
-13346 13347 0
c Var 'aux783' direct represents '1' with '13348'
13346 -13347 13348 0
-13348 13347 0
-13348 -13346 0
c Var 'aux783' direct represents '2' with '-13347'
13346 13348 -13347 0
c Encoding variable: aux784 with domain: int(0..3) (representing constraint ((field_00007_00003=2) + aux783))
c Both direct and order encoding.
c Var 'aux784' order represents '0' with '13349'
c Var 'aux784' direct represents '0' with '13349'
c Var 'aux784' order represents '1' with '13350'
-13349 13350 0
c Var 'aux784' direct represents '1' with '13351'
13349 -13350 13351 0
-13351 13350 0
-13351 -13349 0
c Var 'aux784' order represents '2' with '13352'
-13350 13352 0
c Var 'aux784' direct represents '2' with '13353'
13350 -13352 13353 0
-13353 13352 0
-13353 -13350 0
c Var 'aux784' direct represents '3' with '-13352'
13349 13351 13353 -13352 0
c Encoding variable: aux785 with domain: int(0..4) (representing constraint (aux780 + aux782))
c Both direct and order encoding.
c Var 'aux785' order represents '0' with '13354'
c Var 'aux785' direct represents '0' with '13354'
c Var 'aux785' order represents '1' with '13355'
-13354 13355 0
c Var 'aux785' direct represents '1' with '13356'
13354 -13355 13356 0
-13356 13355 0
-13356 -13354 0
c Var 'aux785' order represents '2' with '13357'
-13355 13357 0
c Var 'aux785' direct represents '2' with '13358'
13355 -13357 13358 0
-13358 13357 0
-13358 -13355 0
c Var 'aux785' order represents '3' with '13359'
-13357 13359 0
c Var 'aux785' direct represents '3' with '13360'
13357 -13359 13360 0
-13360 13359 0
-13360 -13357 0
c Var 'aux785' direct represents '4' with '-13359'
13354 13356 13358 13360 -13359 0
c Encoding variable: aux786 with domain: int(0..2) (representing constraint ((field_00007_00001=3) + (field_00007_00009=3)))
c Both direct and order encoding.
c Var 'aux786' order represents '0' with '13361'
c Var 'aux786' direct represents '0' with '13361'
c Var 'aux786' order represents '1' with '13362'
-13361 13362 0
c Var 'aux786' direct represents '1' with '13363'
13361 -13362 13363 0
-13363 13362 0
-13363 -13361 0
c Var 'aux786' direct represents '2' with '-13362'
13361 13363 -13362 0
c Encoding variable: aux787 with domain: int(0..2) (representing constraint ((field_00007_00008=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux787' order represents '0' with '13364'
c Var 'aux787' direct represents '0' with '13364'
c Var 'aux787' order represents '1' with '13365'
-13364 13365 0
c Var 'aux787' direct represents '1' with '13366'
13364 -13365 13366 0
-13366 13365 0
-13366 -13364 0
c Var 'aux787' direct represents '2' with '-13365'
13364 13366 -13365 0
c Encoding variable: aux788 with domain: int(0..2) (representing constraint ((field_00007_00007=3) + (field_00007_00004=3)))
c Both direct and order encoding.
c Var 'aux788' order represents '0' with '13367'
c Var 'aux788' direct represents '0' with '13367'
c Var 'aux788' order represents '1' with '13368'
-13367 13368 0
c Var 'aux788' direct represents '1' with '13369'
13367 -13368 13369 0
-13369 13368 0
-13369 -13367 0
c Var 'aux788' direct represents '2' with '-13368'
13367 13369 -13368 0
c Encoding variable: aux789 with domain: int(0..2) (representing constraint ((field_00007_00006=3) + (field_00007_00005=3)))
c Both direct and order encoding.
c Var 'aux789' order represents '0' with '13370'
c Var 'aux789' direct represents '0' with '13370'
c Var 'aux789' order represents '1' with '13371'
-13370 13371 0
c Var 'aux789' direct represents '1' with '13372'
13370 -13371 13372 0
-13372 13371 0
-13372 -13370 0
c Var 'aux789' direct represents '2' with '-13371'
13370 13372 -13371 0
c Encoding variable: aux790 with domain: int(0..3) (representing constraint ((field_00007_00003=3) + aux789))
c Both direct and order encoding.
c Var 'aux790' order represents '0' with '13373'
c Var 'aux790' direct represents '0' with '13373'
c Var 'aux790' order represents '1' with '13374'
-13373 13374 0
c Var 'aux790' direct represents '1' with '13375'
13373 -13374 13375 0
-13375 13374 0
-13375 -13373 0
c Var 'aux790' order represents '2' with '13376'
-13374 13376 0
c Var 'aux790' direct represents '2' with '13377'
13374 -13376 13377 0
-13377 13376 0
-13377 -13374 0
c Var 'aux790' direct represents '3' with '-13376'
13373 13375 13377 -13376 0
c Encoding variable: aux791 with domain: int(0..4) (representing constraint (aux786 + aux788))
c Both direct and order encoding.
c Var 'aux791' order represents '0' with '13378'
c Var 'aux791' direct represents '0' with '13378'
c Var 'aux791' order represents '1' with '13379'
-13378 13379 0
c Var 'aux791' direct represents '1' with '13380'
13378 -13379 13380 0
-13380 13379 0
-13380 -13378 0
c Var 'aux791' order represents '2' with '13381'
-13379 13381 0
c Var 'aux791' direct represents '2' with '13382'
13379 -13381 13382 0
-13382 13381 0
-13382 -13379 0
c Var 'aux791' order represents '3' with '13383'
-13381 13383 0
c Var 'aux791' direct represents '3' with '13384'
13381 -13383 13384 0
-13384 13383 0
-13384 -13381 0
c Var 'aux791' direct represents '4' with '-13383'
13378 13380 13382 13384 -13383 0
c Encoding variable: aux792 with domain: int(0..2) (representing constraint ((field_00007_00001=4) + (field_00007_00009=4)))
c Both direct and order encoding.
c Var 'aux792' order represents '0' with '13385'
c Var 'aux792' direct represents '0' with '13385'
c Var 'aux792' order represents '1' with '13386'
-13385 13386 0
c Var 'aux792' direct represents '1' with '13387'
13385 -13386 13387 0
-13387 13386 0
-13387 -13385 0
c Var 'aux792' direct represents '2' with '-13386'
13385 13387 -13386 0
c Encoding variable: aux793 with domain: int(0..2) (representing constraint ((field_00007_00008=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux793' order represents '0' with '13388'
c Var 'aux793' direct represents '0' with '13388'
c Var 'aux793' order represents '1' with '13389'
-13388 13389 0
c Var 'aux793' direct represents '1' with '13390'
13388 -13389 13390 0
-13390 13389 0
-13390 -13388 0
c Var 'aux793' direct represents '2' with '-13389'
13388 13390 -13389 0
c Encoding variable: aux794 with domain: int(0..2) (representing constraint ((field_00007_00007=4) + (field_00007_00004=4)))
c Both direct and order encoding.
c Var 'aux794' order represents '0' with '13391'
c Var 'aux794' direct represents '0' with '13391'
c Var 'aux794' order represents '1' with '13392'
-13391 13392 0
c Var 'aux794' direct represents '1' with '13393'
13391 -13392 13393 0
-13393 13392 0
-13393 -13391 0
c Var 'aux794' direct represents '2' with '-13392'
13391 13393 -13392 0
c Encoding variable: aux795 with domain: int(0..2) (representing constraint ((field_00007_00006=4) + (field_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux795' order represents '0' with '13394'
c Var 'aux795' direct represents '0' with '13394'
c Var 'aux795' order represents '1' with '13395'
-13394 13395 0
c Var 'aux795' direct represents '1' with '13396'
13394 -13395 13396 0
-13396 13395 0
-13396 -13394 0
c Var 'aux795' direct represents '2' with '-13395'
13394 13396 -13395 0
c Encoding variable: aux796 with domain: int(0..3) (representing constraint ((field_00007_00003=4) + aux795))
c Both direct and order encoding.
c Var 'aux796' order represents '0' with '13397'
c Var 'aux796' direct represents '0' with '13397'
c Var 'aux796' order represents '1' with '13398'
-13397 13398 0
c Var 'aux796' direct represents '1' with '13399'
13397 -13398 13399 0
-13399 13398 0
-13399 -13397 0
c Var 'aux796' order represents '2' with '13400'
-13398 13400 0
c Var 'aux796' direct represents '2' with '13401'
13398 -13400 13401 0
-13401 13400 0
-13401 -13398 0
c Var 'aux796' direct represents '3' with '-13400'
13397 13399 13401 -13400 0
c Encoding variable: aux797 with domain: int(0..4) (representing constraint (aux792 + aux794))
c Both direct and order encoding.
c Var 'aux797' order represents '0' with '13402'
c Var 'aux797' direct represents '0' with '13402'
c Var 'aux797' order represents '1' with '13403'
-13402 13403 0
c Var 'aux797' direct represents '1' with '13404'
13402 -13403 13404 0
-13404 13403 0
-13404 -13402 0
c Var 'aux797' order represents '2' with '13405'
-13403 13405 0
c Var 'aux797' direct represents '2' with '13406'
13403 -13405 13406 0
-13406 13405 0
-13406 -13403 0
c Var 'aux797' order represents '3' with '13407'
-13405 13407 0
c Var 'aux797' direct represents '3' with '13408'
13405 -13407 13408 0
-13408 13407 0
-13408 -13405 0
c Var 'aux797' direct represents '4' with '-13407'
13402 13404 13406 13408 -13407 0
c Encoding variable: aux798 with domain: int(0..2) (representing constraint ((field_00007_00001=5) + (field_00007_00009=5)))
c Both direct and order encoding.
c Var 'aux798' order represents '0' with '13409'
c Var 'aux798' direct represents '0' with '13409'
c Var 'aux798' order represents '1' with '13410'
-13409 13410 0
c Var 'aux798' direct represents '1' with '13411'
13409 -13410 13411 0
-13411 13410 0
-13411 -13409 0
c Var 'aux798' direct represents '2' with '-13410'
13409 13411 -13410 0
c Encoding variable: aux799 with domain: int(0..2) (representing constraint ((field_00007_00008=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux799' order represents '0' with '13412'
c Var 'aux799' direct represents '0' with '13412'
c Var 'aux799' order represents '1' with '13413'
-13412 13413 0
c Var 'aux799' direct represents '1' with '13414'
13412 -13413 13414 0
-13414 13413 0
-13414 -13412 0
c Var 'aux799' direct represents '2' with '-13413'
13412 13414 -13413 0
c Encoding variable: aux800 with domain: int(0..2) (representing constraint ((field_00007_00007=5) + (field_00007_00004=5)))
c Both direct and order encoding.
c Var 'aux800' order represents '0' with '13415'
c Var 'aux800' direct represents '0' with '13415'
c Var 'aux800' order represents '1' with '13416'
-13415 13416 0
c Var 'aux800' direct represents '1' with '13417'
13415 -13416 13417 0
-13417 13416 0
-13417 -13415 0
c Var 'aux800' direct represents '2' with '-13416'
13415 13417 -13416 0
c Encoding variable: aux801 with domain: int(0..2) (representing constraint ((field_00007_00006=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux801' order represents '0' with '13418'
c Var 'aux801' direct represents '0' with '13418'
c Var 'aux801' order represents '1' with '13419'
-13418 13419 0
c Var 'aux801' direct represents '1' with '13420'
13418 -13419 13420 0
-13420 13419 0
-13420 -13418 0
c Var 'aux801' direct represents '2' with '-13419'
13418 13420 -13419 0
c Encoding variable: aux802 with domain: int(0..3) (representing constraint ((field_00007_00003=5) + aux801))
c Both direct and order encoding.
c Var 'aux802' order represents '0' with '13421'
c Var 'aux802' direct represents '0' with '13421'
c Var 'aux802' order represents '1' with '13422'
-13421 13422 0
c Var 'aux802' direct represents '1' with '13423'
13421 -13422 13423 0
-13423 13422 0
-13423 -13421 0
c Var 'aux802' order represents '2' with '13424'
-13422 13424 0
c Var 'aux802' direct represents '2' with '13425'
13422 -13424 13425 0
-13425 13424 0
-13425 -13422 0
c Var 'aux802' direct represents '3' with '-13424'
13421 13423 13425 -13424 0
c Encoding variable: aux803 with domain: int(0..4) (representing constraint (aux798 + aux800))
c Both direct and order encoding.
c Var 'aux803' order represents '0' with '13426'
c Var 'aux803' direct represents '0' with '13426'
c Var 'aux803' order represents '1' with '13427'
-13426 13427 0
c Var 'aux803' direct represents '1' with '13428'
13426 -13427 13428 0
-13428 13427 0
-13428 -13426 0
c Var 'aux803' order represents '2' with '13429'
-13427 13429 0
c Var 'aux803' direct represents '2' with '13430'
13427 -13429 13430 0
-13430 13429 0
-13430 -13427 0
c Var 'aux803' order represents '3' with '13431'
-13429 13431 0
c Var 'aux803' direct represents '3' with '13432'
13429 -13431 13432 0
-13432 13431 0
-13432 -13429 0
c Var 'aux803' direct represents '4' with '-13431'
13426 13428 13430 13432 -13431 0
c Encoding variable: aux804 with domain: int(0..2) (representing constraint ((field_00007_00001=6) + (field_00007_00009=6)))
c Both direct and order encoding.
c Var 'aux804' order represents '0' with '13433'
c Var 'aux804' direct represents '0' with '13433'
c Var 'aux804' order represents '1' with '13434'
-13433 13434 0
c Var 'aux804' direct represents '1' with '13435'
13433 -13434 13435 0
-13435 13434 0
-13435 -13433 0
c Var 'aux804' direct represents '2' with '-13434'
13433 13435 -13434 0
c Encoding variable: aux805 with domain: int(0..2) (representing constraint ((field_00007_00008=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux805' order represents '0' with '13436'
c Var 'aux805' direct represents '0' with '13436'
c Var 'aux805' order represents '1' with '13437'
-13436 13437 0
c Var 'aux805' direct represents '1' with '13438'
13436 -13437 13438 0
-13438 13437 0
-13438 -13436 0
c Var 'aux805' direct represents '2' with '-13437'
13436 13438 -13437 0
c Encoding variable: aux806 with domain: int(0..2) (representing constraint ((field_00007_00007=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux806' order represents '0' with '13439'
c Var 'aux806' direct represents '0' with '13439'
c Var 'aux806' order represents '1' with '13440'
-13439 13440 0
c Var 'aux806' direct represents '1' with '13441'
13439 -13440 13441 0
-13441 13440 0
-13441 -13439 0
c Var 'aux806' direct represents '2' with '-13440'
13439 13441 -13440 0
c Encoding variable: aux807 with domain: int(0..2) (representing constraint ((field_00007_00006=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux807' order represents '0' with '13442'
c Var 'aux807' direct represents '0' with '13442'
c Var 'aux807' order represents '1' with '13443'
-13442 13443 0
c Var 'aux807' direct represents '1' with '13444'
13442 -13443 13444 0
-13444 13443 0
-13444 -13442 0
c Var 'aux807' direct represents '2' with '-13443'
13442 13444 -13443 0
c Encoding variable: aux808 with domain: int(0..3) (representing constraint ((field_00007_00003=6) + aux807))
c Both direct and order encoding.
c Var 'aux808' order represents '0' with '13445'
c Var 'aux808' direct represents '0' with '13445'
c Var 'aux808' order represents '1' with '13446'
-13445 13446 0
c Var 'aux808' direct represents '1' with '13447'
13445 -13446 13447 0
-13447 13446 0
-13447 -13445 0
c Var 'aux808' order represents '2' with '13448'
-13446 13448 0
c Var 'aux808' direct represents '2' with '13449'
13446 -13448 13449 0
-13449 13448 0
-13449 -13446 0
c Var 'aux808' direct represents '3' with '-13448'
13445 13447 13449 -13448 0
c Encoding variable: aux809 with domain: int(0..4) (representing constraint (aux804 + aux806))
c Both direct and order encoding.
c Var 'aux809' order represents '0' with '13450'
c Var 'aux809' direct represents '0' with '13450'
c Var 'aux809' order represents '1' with '13451'
-13450 13451 0
c Var 'aux809' direct represents '1' with '13452'
13450 -13451 13452 0
-13452 13451 0
-13452 -13450 0
c Var 'aux809' order represents '2' with '13453'
-13451 13453 0
c Var 'aux809' direct represents '2' with '13454'
13451 -13453 13454 0
-13454 13453 0
-13454 -13451 0
c Var 'aux809' order represents '3' with '13455'
-13453 13455 0
c Var 'aux809' direct represents '3' with '13456'
13453 -13455 13456 0
-13456 13455 0
-13456 -13453 0
c Var 'aux809' direct represents '4' with '-13455'
13450 13452 13454 13456 -13455 0
c Encoding variable: aux810 with domain: int(0..2) (representing constraint ((field_00007_00001=7) + (field_00007_00009=7)))
c Both direct and order encoding.
c Var 'aux810' order represents '0' with '13457'
c Var 'aux810' direct represents '0' with '13457'
c Var 'aux810' order represents '1' with '13458'
-13457 13458 0
c Var 'aux810' direct represents '1' with '13459'
13457 -13458 13459 0
-13459 13458 0
-13459 -13457 0
c Var 'aux810' direct represents '2' with '-13458'
13457 13459 -13458 0
c Encoding variable: aux811 with domain: int(0..2) (representing constraint ((field_00007_00008=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux811' order represents '0' with '13460'
c Var 'aux811' direct represents '0' with '13460'
c Var 'aux811' order represents '1' with '13461'
-13460 13461 0
c Var 'aux811' direct represents '1' with '13462'
13460 -13461 13462 0
-13462 13461 0
-13462 -13460 0
c Var 'aux811' direct represents '2' with '-13461'
13460 13462 -13461 0
c Encoding variable: aux812 with domain: int(0..2) (representing constraint ((field_00007_00007=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux812' order represents '0' with '13463'
c Var 'aux812' direct represents '0' with '13463'
c Var 'aux812' order represents '1' with '13464'
-13463 13464 0
c Var 'aux812' direct represents '1' with '13465'
13463 -13464 13465 0
-13465 13464 0
-13465 -13463 0
c Var 'aux812' direct represents '2' with '-13464'
13463 13465 -13464 0
c Encoding variable: aux813 with domain: int(0..2) (representing constraint ((field_00007_00006=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux813' order represents '0' with '13466'
c Var 'aux813' direct represents '0' with '13466'
c Var 'aux813' order represents '1' with '13467'
-13466 13467 0
c Var 'aux813' direct represents '1' with '13468'
13466 -13467 13468 0
-13468 13467 0
-13468 -13466 0
c Var 'aux813' direct represents '2' with '-13467'
13466 13468 -13467 0
c Encoding variable: aux814 with domain: int(0..3) (representing constraint ((field_00007_00003=7) + aux813))
c Both direct and order encoding.
c Var 'aux814' order represents '0' with '13469'
c Var 'aux814' direct represents '0' with '13469'
c Var 'aux814' order represents '1' with '13470'
-13469 13470 0
c Var 'aux814' direct represents '1' with '13471'
13469 -13470 13471 0
-13471 13470 0
-13471 -13469 0
c Var 'aux814' order represents '2' with '13472'
-13470 13472 0
c Var 'aux814' direct represents '2' with '13473'
13470 -13472 13473 0
-13473 13472 0
-13473 -13470 0
c Var 'aux814' direct represents '3' with '-13472'
13469 13471 13473 -13472 0
c Encoding variable: aux815 with domain: int(0..4) (representing constraint (aux810 + aux812))
c Both direct and order encoding.
c Var 'aux815' order represents '0' with '13474'
c Var 'aux815' direct represents '0' with '13474'
c Var 'aux815' order represents '1' with '13475'
-13474 13475 0
c Var 'aux815' direct represents '1' with '13476'
13474 -13475 13476 0
-13476 13475 0
-13476 -13474 0
c Var 'aux815' order represents '2' with '13477'
-13475 13477 0
c Var 'aux815' direct represents '2' with '13478'
13475 -13477 13478 0
-13478 13477 0
-13478 -13475 0
c Var 'aux815' order represents '3' with '13479'
-13477 13479 0
c Var 'aux815' direct represents '3' with '13480'
13477 -13479 13480 0
-13480 13479 0
-13480 -13477 0
c Var 'aux815' direct represents '4' with '-13479'
13474 13476 13478 13480 -13479 0
c Encoding variable: aux816 with domain: int(0..2) (representing constraint ((field_00007_00001=8) + (field_00007_00009=8)))
c Both direct and order encoding.
c Var 'aux816' order represents '0' with '13481'
c Var 'aux816' direct represents '0' with '13481'
c Var 'aux816' order represents '1' with '13482'
-13481 13482 0
c Var 'aux816' direct represents '1' with '13483'
13481 -13482 13483 0
-13483 13482 0
-13483 -13481 0
c Var 'aux816' direct represents '2' with '-13482'
13481 13483 -13482 0
c Encoding variable: aux817 with domain: int(0..2) (representing constraint ((field_00007_00008=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux817' order represents '0' with '13484'
c Var 'aux817' direct represents '0' with '13484'
c Var 'aux817' order represents '1' with '13485'
-13484 13485 0
c Var 'aux817' direct represents '1' with '13486'
13484 -13485 13486 0
-13486 13485 0
-13486 -13484 0
c Var 'aux817' direct represents '2' with '-13485'
13484 13486 -13485 0
c Encoding variable: aux818 with domain: int(0..2) (representing constraint ((field_00007_00007=8) + (field_00007_00004=8)))
c Both direct and order encoding.
c Var 'aux818' order represents '0' with '13487'
c Var 'aux818' direct represents '0' with '13487'
c Var 'aux818' order represents '1' with '13488'
-13487 13488 0
c Var 'aux818' direct represents '1' with '13489'
13487 -13488 13489 0
-13489 13488 0
-13489 -13487 0
c Var 'aux818' direct represents '2' with '-13488'
13487 13489 -13488 0
c Encoding variable: aux819 with domain: int(0..2) (representing constraint ((field_00007_00006=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux819' order represents '0' with '13490'
c Var 'aux819' direct represents '0' with '13490'
c Var 'aux819' order represents '1' with '13491'
-13490 13491 0
c Var 'aux819' direct represents '1' with '13492'
13490 -13491 13492 0
-13492 13491 0
-13492 -13490 0
c Var 'aux819' direct represents '2' with '-13491'
13490 13492 -13491 0
c Encoding variable: aux820 with domain: int(0..3) (representing constraint ((field_00007_00003=8) + aux819))
c Both direct and order encoding.
c Var 'aux820' order represents '0' with '13493'
c Var 'aux820' direct represents '0' with '13493'
c Var 'aux820' order represents '1' with '13494'
-13493 13494 0
c Var 'aux820' direct represents '1' with '13495'
13493 -13494 13495 0
-13495 13494 0
-13495 -13493 0
c Var 'aux820' order represents '2' with '13496'
-13494 13496 0
c Var 'aux820' direct represents '2' with '13497'
13494 -13496 13497 0
-13497 13496 0
-13497 -13494 0
c Var 'aux820' direct represents '3' with '-13496'
13493 13495 13497 -13496 0
c Encoding variable: aux821 with domain: int(0..4) (representing constraint (aux816 + aux818))
c Both direct and order encoding.
c Var 'aux821' order represents '0' with '13498'
c Var 'aux821' direct represents '0' with '13498'
c Var 'aux821' order represents '1' with '13499'
-13498 13499 0
c Var 'aux821' direct represents '1' with '13500'
13498 -13499 13500 0
-13500 13499 0
-13500 -13498 0
c Var 'aux821' order represents '2' with '13501'
-13499 13501 0
c Var 'aux821' direct represents '2' with '13502'
13499 -13501 13502 0
-13502 13501 0
-13502 -13499 0
c Var 'aux821' order represents '3' with '13503'
-13501 13503 0
c Var 'aux821' direct represents '3' with '13504'
13501 -13503 13504 0
-13504 13503 0
-13504 -13501 0
c Var 'aux821' direct represents '4' with '-13503'
13498 13500 13502 13504 -13503 0
c Encoding variable: aux822 with domain: int(0..2) (representing constraint ((field_00007_00001=9) + (field_00007_00009=9)))
c Both direct and order encoding.
c Var 'aux822' order represents '0' with '13505'
c Var 'aux822' direct represents '0' with '13505'
c Var 'aux822' order represents '1' with '13506'
-13505 13506 0
c Var 'aux822' direct represents '1' with '13507'
13505 -13506 13507 0
-13507 13506 0
-13507 -13505 0
c Var 'aux822' direct represents '2' with '-13506'
13505 13507 -13506 0
c Encoding variable: aux823 with domain: int(0..2) (representing constraint ((field_00007_00008=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux823' order represents '0' with '13508'
c Var 'aux823' direct represents '0' with '13508'
c Var 'aux823' order represents '1' with '13509'
-13508 13509 0
c Var 'aux823' direct represents '1' with '13510'
13508 -13509 13510 0
-13510 13509 0
-13510 -13508 0
c Var 'aux823' direct represents '2' with '-13509'
13508 13510 -13509 0
c Encoding variable: aux824 with domain: int(0..2) (representing constraint ((field_00007_00007=9) + (field_00007_00004=9)))
c Both direct and order encoding.
c Var 'aux824' order represents '0' with '13511'
c Var 'aux824' direct represents '0' with '13511'
c Var 'aux824' order represents '1' with '13512'
-13511 13512 0
c Var 'aux824' direct represents '1' with '13513'
13511 -13512 13513 0
-13513 13512 0
-13513 -13511 0
c Var 'aux824' direct represents '2' with '-13512'
13511 13513 -13512 0
c Encoding variable: aux825 with domain: int(0..2) (representing constraint ((field_00007_00006=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux825' order represents '0' with '13514'
c Var 'aux825' direct represents '0' with '13514'
c Var 'aux825' order represents '1' with '13515'
-13514 13515 0
c Var 'aux825' direct represents '1' with '13516'
13514 -13515 13516 0
-13516 13515 0
-13516 -13514 0
c Var 'aux825' direct represents '2' with '-13515'
13514 13516 -13515 0
c Encoding variable: aux826 with domain: int(0..3) (representing constraint ((field_00007_00003=9) + aux825))
c Both direct and order encoding.
c Var 'aux826' order represents '0' with '13517'
c Var 'aux826' direct represents '0' with '13517'
c Var 'aux826' order represents '1' with '13518'
-13517 13518 0
c Var 'aux826' direct represents '1' with '13519'
13517 -13518 13519 0
-13519 13518 0
-13519 -13517 0
c Var 'aux826' order represents '2' with '13520'
-13518 13520 0
c Var 'aux826' direct represents '2' with '13521'
13518 -13520 13521 0
-13521 13520 0
-13521 -13518 0
c Var 'aux826' direct represents '3' with '-13520'
13517 13519 13521 -13520 0
c Encoding variable: aux827 with domain: int(0..4) (representing constraint (aux822 + aux824))
c Both direct and order encoding.
c Var 'aux827' order represents '0' with '13522'
c Var 'aux827' direct represents '0' with '13522'
c Var 'aux827' order represents '1' with '13523'
-13522 13523 0
c Var 'aux827' direct represents '1' with '13524'
13522 -13523 13524 0
-13524 13523 0
-13524 -13522 0
c Var 'aux827' order represents '2' with '13525'
-13523 13525 0
c Var 'aux827' direct represents '2' with '13526'
13523 -13525 13526 0
-13526 13525 0
-13526 -13523 0
c Var 'aux827' order represents '3' with '13527'
-13525 13527 0
c Var 'aux827' direct represents '3' with '13528'
13525 -13527 13528 0
-13528 13527 0
-13528 -13525 0
c Var 'aux827' direct represents '4' with '-13527'
13522 13524 13526 13528 -13527 0
c Encoding variable: aux828 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00008_00009=1)))
c Both direct and order encoding.
c Var 'aux828' order represents '0' with '13529'
c Var 'aux828' direct represents '0' with '13529'
c Var 'aux828' order represents '1' with '13530'
-13529 13530 0
c Var 'aux828' direct represents '1' with '13531'
13529 -13530 13531 0
-13531 13530 0
-13531 -13529 0
c Var 'aux828' direct represents '2' with '-13530'
13529 13531 -13530 0
c Encoding variable: aux829 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00008_00002=1)))
c Both direct and order encoding.
c Var 'aux829' order represents '0' with '13532'
c Var 'aux829' direct represents '0' with '13532'
c Var 'aux829' order represents '1' with '13533'
-13532 13533 0
c Var 'aux829' direct represents '1' with '13534'
13532 -13533 13534 0
-13534 13533 0
-13534 -13532 0
c Var 'aux829' direct represents '2' with '-13533'
13532 13534 -13533 0
c Encoding variable: aux830 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00008_00004=1)))
c Both direct and order encoding.
c Var 'aux830' order represents '0' with '13535'
c Var 'aux830' direct represents '0' with '13535'
c Var 'aux830' order represents '1' with '13536'
-13535 13536 0
c Var 'aux830' direct represents '1' with '13537'
13535 -13536 13537 0
-13537 13536 0
-13537 -13535 0
c Var 'aux830' direct represents '2' with '-13536'
13535 13537 -13536 0
c Encoding variable: aux831 with domain: int(0..2) (representing constraint ((field_00008_00006=1) + (field_00008_00005=1)))
c Both direct and order encoding.
c Var 'aux831' order represents '0' with '13538'
c Var 'aux831' direct represents '0' with '13538'
c Var 'aux831' order represents '1' with '13539'
-13538 13539 0
c Var 'aux831' direct represents '1' with '13540'
13538 -13539 13540 0
-13540 13539 0
-13540 -13538 0
c Var 'aux831' direct represents '2' with '-13539'
13538 13540 -13539 0
c Encoding variable: aux832 with domain: int(0..3) (representing constraint ((field_00008_00003=1) + aux831))
c Both direct and order encoding.
c Var 'aux832' order represents '0' with '13541'
c Var 'aux832' direct represents '0' with '13541'
c Var 'aux832' order represents '1' with '13542'
-13541 13542 0
c Var 'aux832' direct represents '1' with '13543'
13541 -13542 13543 0
-13543 13542 0
-13543 -13541 0
c Var 'aux832' order represents '2' with '13544'
-13542 13544 0
c Var 'aux832' direct represents '2' with '13545'
13542 -13544 13545 0
-13545 13544 0
-13545 -13542 0
c Var 'aux832' direct represents '3' with '-13544'
13541 13543 13545 -13544 0
c Encoding variable: aux833 with domain: int(0..4) (representing constraint (aux828 + aux830))
c Both direct and order encoding.
c Var 'aux833' order represents '0' with '13546'
c Var 'aux833' direct represents '0' with '13546'
c Var 'aux833' order represents '1' with '13547'
-13546 13547 0
c Var 'aux833' direct represents '1' with '13548'
13546 -13547 13548 0
-13548 13547 0
-13548 -13546 0
c Var 'aux833' order represents '2' with '13549'
-13547 13549 0
c Var 'aux833' direct represents '2' with '13550'
13547 -13549 13550 0
-13550 13549 0
-13550 -13547 0
c Var 'aux833' order represents '3' with '13551'
-13549 13551 0
c Var 'aux833' direct represents '3' with '13552'
13549 -13551 13552 0
-13552 13551 0
-13552 -13549 0
c Var 'aux833' direct represents '4' with '-13551'
13546 13548 13550 13552 -13551 0
c Encoding variable: aux834 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00008_00009=2)))
c Both direct and order encoding.
c Var 'aux834' order represents '0' with '13553'
c Var 'aux834' direct represents '0' with '13553'
c Var 'aux834' order represents '1' with '13554'
-13553 13554 0
c Var 'aux834' direct represents '1' with '13555'
13553 -13554 13555 0
-13555 13554 0
-13555 -13553 0
c Var 'aux834' direct represents '2' with '-13554'
13553 13555 -13554 0
c Encoding variable: aux835 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00008_00002=2)))
c Both direct and order encoding.
c Var 'aux835' order represents '0' with '13556'
c Var 'aux835' direct represents '0' with '13556'
c Var 'aux835' order represents '1' with '13557'
-13556 13557 0
c Var 'aux835' direct represents '1' with '13558'
13556 -13557 13558 0
-13558 13557 0
-13558 -13556 0
c Var 'aux835' direct represents '2' with '-13557'
13556 13558 -13557 0
c Encoding variable: aux836 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00008_00004=2)))
c Both direct and order encoding.
c Var 'aux836' order represents '0' with '13559'
c Var 'aux836' direct represents '0' with '13559'
c Var 'aux836' order represents '1' with '13560'
-13559 13560 0
c Var 'aux836' direct represents '1' with '13561'
13559 -13560 13561 0
-13561 13560 0
-13561 -13559 0
c Var 'aux836' direct represents '2' with '-13560'
13559 13561 -13560 0
c Encoding variable: aux837 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00008_00005=2)))
c Both direct and order encoding.
c Var 'aux837' order represents '0' with '13562'
c Var 'aux837' direct represents '0' with '13562'
c Var 'aux837' order represents '1' with '13563'
-13562 13563 0
c Var 'aux837' direct represents '1' with '13564'
13562 -13563 13564 0
-13564 13563 0
-13564 -13562 0
c Var 'aux837' direct represents '2' with '-13563'
13562 13564 -13563 0
c Encoding variable: aux838 with domain: int(0..3) (representing constraint ((field_00008_00003=2) + aux837))
c Both direct and order encoding.
c Var 'aux838' order represents '0' with '13565'
c Var 'aux838' direct represents '0' with '13565'
c Var 'aux838' order represents '1' with '13566'
-13565 13566 0
c Var 'aux838' direct represents '1' with '13567'
13565 -13566 13567 0
-13567 13566 0
-13567 -13565 0
c Var 'aux838' order represents '2' with '13568'
-13566 13568 0
c Var 'aux838' direct represents '2' with '13569'
13566 -13568 13569 0
-13569 13568 0
-13569 -13566 0
c Var 'aux838' direct represents '3' with '-13568'
13565 13567 13569 -13568 0
c Encoding variable: aux839 with domain: int(0..4) (representing constraint (aux834 + aux836))
c Both direct and order encoding.
c Var 'aux839' order represents '0' with '13570'
c Var 'aux839' direct represents '0' with '13570'
c Var 'aux839' order represents '1' with '13571'
-13570 13571 0
c Var 'aux839' direct represents '1' with '13572'
13570 -13571 13572 0
-13572 13571 0
-13572 -13570 0
c Var 'aux839' order represents '2' with '13573'
-13571 13573 0
c Var 'aux839' direct represents '2' with '13574'
13571 -13573 13574 0
-13574 13573 0
-13574 -13571 0
c Var 'aux839' order represents '3' with '13575'
-13573 13575 0
c Var 'aux839' direct represents '3' with '13576'
13573 -13575 13576 0
-13576 13575 0
-13576 -13573 0
c Var 'aux839' direct represents '4' with '-13575'
13570 13572 13574 13576 -13575 0
c Encoding variable: aux840 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00008_00009=3)))
c Both direct and order encoding.
c Var 'aux840' order represents '0' with '13577'
c Var 'aux840' direct represents '0' with '13577'
c Var 'aux840' order represents '1' with '13578'
-13577 13578 0
c Var 'aux840' direct represents '1' with '13579'
13577 -13578 13579 0
-13579 13578 0
-13579 -13577 0
c Var 'aux840' direct represents '2' with '-13578'
13577 13579 -13578 0
c Encoding variable: aux841 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00008_00002=3)))
c Both direct and order encoding.
c Var 'aux841' order represents '0' with '13580'
c Var 'aux841' direct represents '0' with '13580'
c Var 'aux841' order represents '1' with '13581'
-13580 13581 0
c Var 'aux841' direct represents '1' with '13582'
13580 -13581 13582 0
-13582 13581 0
-13582 -13580 0
c Var 'aux841' direct represents '2' with '-13581'
13580 13582 -13581 0
c Encoding variable: aux842 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00008_00004=3)))
c Both direct and order encoding.
c Var 'aux842' order represents '0' with '13583'
c Var 'aux842' direct represents '0' with '13583'
c Var 'aux842' order represents '1' with '13584'
-13583 13584 0
c Var 'aux842' direct represents '1' with '13585'
13583 -13584 13585 0
-13585 13584 0
-13585 -13583 0
c Var 'aux842' direct represents '2' with '-13584'
13583 13585 -13584 0
c Encoding variable: aux843 with domain: int(0..2) (representing constraint ((field_00008_00006=3) + (field_00008_00005=3)))
c Both direct and order encoding.
c Var 'aux843' order represents '0' with '13586'
c Var 'aux843' direct represents '0' with '13586'
c Var 'aux843' order represents '1' with '13587'
-13586 13587 0
c Var 'aux843' direct represents '1' with '13588'
13586 -13587 13588 0
-13588 13587 0
-13588 -13586 0
c Var 'aux843' direct represents '2' with '-13587'
13586 13588 -13587 0
c Encoding variable: aux844 with domain: int(0..3) (representing constraint ((field_00008_00003=3) + aux843))
c Both direct and order encoding.
c Var 'aux844' order represents '0' with '13589'
c Var 'aux844' direct represents '0' with '13589'
c Var 'aux844' order represents '1' with '13590'
-13589 13590 0
c Var 'aux844' direct represents '1' with '13591'
13589 -13590 13591 0
-13591 13590 0
-13591 -13589 0
c Var 'aux844' order represents '2' with '13592'
-13590 13592 0
c Var 'aux844' direct represents '2' with '13593'
13590 -13592 13593 0
-13593 13592 0
-13593 -13590 0
c Var 'aux844' direct represents '3' with '-13592'
13589 13591 13593 -13592 0
c Encoding variable: aux845 with domain: int(0..4) (representing constraint (aux840 + aux842))
c Both direct and order encoding.
c Var 'aux845' order represents '0' with '13594'
c Var 'aux845' direct represents '0' with '13594'
c Var 'aux845' order represents '1' with '13595'
-13594 13595 0
c Var 'aux845' direct represents '1' with '13596'
13594 -13595 13596 0
-13596 13595 0
-13596 -13594 0
c Var 'aux845' order represents '2' with '13597'
-13595 13597 0
c Var 'aux845' direct represents '2' with '13598'
13595 -13597 13598 0
-13598 13597 0
-13598 -13595 0
c Var 'aux845' order represents '3' with '13599'
-13597 13599 0
c Var 'aux845' direct represents '3' with '13600'
13597 -13599 13600 0
-13600 13599 0
-13600 -13597 0
c Var 'aux845' direct represents '4' with '-13599'
13594 13596 13598 13600 -13599 0
c Encoding variable: aux846 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00008_00009=4)))
c Both direct and order encoding.
c Var 'aux846' order represents '0' with '13601'
c Var 'aux846' direct represents '0' with '13601'
c Var 'aux846' order represents '1' with '13602'
-13601 13602 0
c Var 'aux846' direct represents '1' with '13603'
13601 -13602 13603 0
-13603 13602 0
-13603 -13601 0
c Var 'aux846' direct represents '2' with '-13602'
13601 13603 -13602 0
c Encoding variable: aux847 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00008_00002=4)))
c Both direct and order encoding.
c Var 'aux847' order represents '0' with '13604'
c Var 'aux847' direct represents '0' with '13604'
c Var 'aux847' order represents '1' with '13605'
-13604 13605 0
c Var 'aux847' direct represents '1' with '13606'
13604 -13605 13606 0
-13606 13605 0
-13606 -13604 0
c Var 'aux847' direct represents '2' with '-13605'
13604 13606 -13605 0
c Encoding variable: aux848 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00008_00004=4)))
c Both direct and order encoding.
c Var 'aux848' order represents '0' with '13607'
c Var 'aux848' direct represents '0' with '13607'
c Var 'aux848' order represents '1' with '13608'
-13607 13608 0
c Var 'aux848' direct represents '1' with '13609'
13607 -13608 13609 0
-13609 13608 0
-13609 -13607 0
c Var 'aux848' direct represents '2' with '-13608'
13607 13609 -13608 0
c Encoding variable: aux849 with domain: int(0..2) (representing constraint ((field_00008_00006=4) + (field_00008_00005=4)))
c Both direct and order encoding.
c Var 'aux849' order represents '0' with '13610'
c Var 'aux849' direct represents '0' with '13610'
c Var 'aux849' order represents '1' with '13611'
-13610 13611 0
c Var 'aux849' direct represents '1' with '13612'
13610 -13611 13612 0
-13612 13611 0
-13612 -13610 0
c Var 'aux849' direct represents '2' with '-13611'
13610 13612 -13611 0
c Encoding variable: aux850 with domain: int(0..3) (representing constraint ((field_00008_00003=4) + aux849))
c Both direct and order encoding.
c Var 'aux850' order represents '0' with '13613'
c Var 'aux850' direct represents '0' with '13613'
c Var 'aux850' order represents '1' with '13614'
-13613 13614 0
c Var 'aux850' direct represents '1' with '13615'
13613 -13614 13615 0
-13615 13614 0
-13615 -13613 0
c Var 'aux850' order represents '2' with '13616'
-13614 13616 0
c Var 'aux850' direct represents '2' with '13617'
13614 -13616 13617 0
-13617 13616 0
-13617 -13614 0
c Var 'aux850' direct represents '3' with '-13616'
13613 13615 13617 -13616 0
c Encoding variable: aux851 with domain: int(0..4) (representing constraint (aux846 + aux848))
c Both direct and order encoding.
c Var 'aux851' order represents '0' with '13618'
c Var 'aux851' direct represents '0' with '13618'
c Var 'aux851' order represents '1' with '13619'
-13618 13619 0
c Var 'aux851' direct represents '1' with '13620'
13618 -13619 13620 0
-13620 13619 0
-13620 -13618 0
c Var 'aux851' order represents '2' with '13621'
-13619 13621 0
c Var 'aux851' direct represents '2' with '13622'
13619 -13621 13622 0
-13622 13621 0
-13622 -13619 0
c Var 'aux851' order represents '3' with '13623'
-13621 13623 0
c Var 'aux851' direct represents '3' with '13624'
13621 -13623 13624 0
-13624 13623 0
-13624 -13621 0
c Var 'aux851' direct represents '4' with '-13623'
13618 13620 13622 13624 -13623 0
c Encoding variable: aux852 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00008_00009=5)))
c Both direct and order encoding.
c Var 'aux852' order represents '0' with '13625'
c Var 'aux852' direct represents '0' with '13625'
c Var 'aux852' order represents '1' with '13626'
-13625 13626 0
c Var 'aux852' direct represents '1' with '13627'
13625 -13626 13627 0
-13627 13626 0
-13627 -13625 0
c Var 'aux852' direct represents '2' with '-13626'
13625 13627 -13626 0
c Encoding variable: aux853 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00008_00002=5)))
c Both direct and order encoding.
c Var 'aux853' order represents '0' with '13628'
c Var 'aux853' direct represents '0' with '13628'
c Var 'aux853' order represents '1' with '13629'
-13628 13629 0
c Var 'aux853' direct represents '1' with '13630'
13628 -13629 13630 0
-13630 13629 0
-13630 -13628 0
c Var 'aux853' direct represents '2' with '-13629'
13628 13630 -13629 0
c Encoding variable: aux854 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00008_00004=5)))
c Both direct and order encoding.
c Var 'aux854' order represents '0' with '13631'
c Var 'aux854' direct represents '0' with '13631'
c Var 'aux854' order represents '1' with '13632'
-13631 13632 0
c Var 'aux854' direct represents '1' with '13633'
13631 -13632 13633 0
-13633 13632 0
-13633 -13631 0
c Var 'aux854' direct represents '2' with '-13632'
13631 13633 -13632 0
c Encoding variable: aux855 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00008_00005=5)))
c Both direct and order encoding.
c Var 'aux855' order represents '0' with '13634'
c Var 'aux855' direct represents '0' with '13634'
c Var 'aux855' order represents '1' with '13635'
-13634 13635 0
c Var 'aux855' direct represents '1' with '13636'
13634 -13635 13636 0
-13636 13635 0
-13636 -13634 0
c Var 'aux855' direct represents '2' with '-13635'
13634 13636 -13635 0
c Encoding variable: aux856 with domain: int(0..3) (representing constraint ((field_00008_00003=5) + aux855))
c Both direct and order encoding.
c Var 'aux856' order represents '0' with '13637'
c Var 'aux856' direct represents '0' with '13637'
c Var 'aux856' order represents '1' with '13638'
-13637 13638 0
c Var 'aux856' direct represents '1' with '13639'
13637 -13638 13639 0
-13639 13638 0
-13639 -13637 0
c Var 'aux856' order represents '2' with '13640'
-13638 13640 0
c Var 'aux856' direct represents '2' with '13641'
13638 -13640 13641 0
-13641 13640 0
-13641 -13638 0
c Var 'aux856' direct represents '3' with '-13640'
13637 13639 13641 -13640 0
c Encoding variable: aux857 with domain: int(0..4) (representing constraint (aux852 + aux854))
c Both direct and order encoding.
c Var 'aux857' order represents '0' with '13642'
c Var 'aux857' direct represents '0' with '13642'
c Var 'aux857' order represents '1' with '13643'
-13642 13643 0
c Var 'aux857' direct represents '1' with '13644'
13642 -13643 13644 0
-13644 13643 0
-13644 -13642 0
c Var 'aux857' order represents '2' with '13645'
-13643 13645 0
c Var 'aux857' direct represents '2' with '13646'
13643 -13645 13646 0
-13646 13645 0
-13646 -13643 0
c Var 'aux857' order represents '3' with '13647'
-13645 13647 0
c Var 'aux857' direct represents '3' with '13648'
13645 -13647 13648 0
-13648 13647 0
-13648 -13645 0
c Var 'aux857' direct represents '4' with '-13647'
13642 13644 13646 13648 -13647 0
c Encoding variable: aux858 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00008_00009=6)))
c Both direct and order encoding.
c Var 'aux858' order represents '0' with '13649'
c Var 'aux858' direct represents '0' with '13649'
c Var 'aux858' order represents '1' with '13650'
-13649 13650 0
c Var 'aux858' direct represents '1' with '13651'
13649 -13650 13651 0
-13651 13650 0
-13651 -13649 0
c Var 'aux858' direct represents '2' with '-13650'
13649 13651 -13650 0
c Encoding variable: aux859 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00008_00002=6)))
c Both direct and order encoding.
c Var 'aux859' order represents '0' with '13652'
c Var 'aux859' direct represents '0' with '13652'
c Var 'aux859' order represents '1' with '13653'
-13652 13653 0
c Var 'aux859' direct represents '1' with '13654'
13652 -13653 13654 0
-13654 13653 0
-13654 -13652 0
c Var 'aux859' direct represents '2' with '-13653'
13652 13654 -13653 0
c Encoding variable: aux860 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00008_00004=6)))
c Both direct and order encoding.
c Var 'aux860' order represents '0' with '13655'
c Var 'aux860' direct represents '0' with '13655'
c Var 'aux860' order represents '1' with '13656'
-13655 13656 0
c Var 'aux860' direct represents '1' with '13657'
13655 -13656 13657 0
-13657 13656 0
-13657 -13655 0
c Var 'aux860' direct represents '2' with '-13656'
13655 13657 -13656 0
c Encoding variable: aux861 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00008_00005=6)))
c Both direct and order encoding.
c Var 'aux861' order represents '0' with '13658'
c Var 'aux861' direct represents '0' with '13658'
c Var 'aux861' order represents '1' with '13659'
-13658 13659 0
c Var 'aux861' direct represents '1' with '13660'
13658 -13659 13660 0
-13660 13659 0
-13660 -13658 0
c Var 'aux861' direct represents '2' with '-13659'
13658 13660 -13659 0
c Encoding variable: aux862 with domain: int(0..3) (representing constraint ((field_00008_00003=6) + aux861))
c Both direct and order encoding.
c Var 'aux862' order represents '0' with '13661'
c Var 'aux862' direct represents '0' with '13661'
c Var 'aux862' order represents '1' with '13662'
-13661 13662 0
c Var 'aux862' direct represents '1' with '13663'
13661 -13662 13663 0
-13663 13662 0
-13663 -13661 0
c Var 'aux862' order represents '2' with '13664'
-13662 13664 0
c Var 'aux862' direct represents '2' with '13665'
13662 -13664 13665 0
-13665 13664 0
-13665 -13662 0
c Var 'aux862' direct represents '3' with '-13664'
13661 13663 13665 -13664 0
c Encoding variable: aux863 with domain: int(0..4) (representing constraint (aux858 + aux860))
c Both direct and order encoding.
c Var 'aux863' order represents '0' with '13666'
c Var 'aux863' direct represents '0' with '13666'
c Var 'aux863' order represents '1' with '13667'
-13666 13667 0
c Var 'aux863' direct represents '1' with '13668'
13666 -13667 13668 0
-13668 13667 0
-13668 -13666 0
c Var 'aux863' order represents '2' with '13669'
-13667 13669 0
c Var 'aux863' direct represents '2' with '13670'
13667 -13669 13670 0
-13670 13669 0
-13670 -13667 0
c Var 'aux863' order represents '3' with '13671'
-13669 13671 0
c Var 'aux863' direct represents '3' with '13672'
13669 -13671 13672 0
-13672 13671 0
-13672 -13669 0
c Var 'aux863' direct represents '4' with '-13671'
13666 13668 13670 13672 -13671 0
c Encoding variable: aux864 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00008_00009=7)))
c Both direct and order encoding.
c Var 'aux864' order represents '0' with '13673'
c Var 'aux864' direct represents '0' with '13673'
c Var 'aux864' order represents '1' with '13674'
-13673 13674 0
c Var 'aux864' direct represents '1' with '13675'
13673 -13674 13675 0
-13675 13674 0
-13675 -13673 0
c Var 'aux864' direct represents '2' with '-13674'
13673 13675 -13674 0
c Encoding variable: aux865 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00008_00002=7)))
c Both direct and order encoding.
c Var 'aux865' order represents '0' with '13676'
c Var 'aux865' direct represents '0' with '13676'
c Var 'aux865' order represents '1' with '13677'
-13676 13677 0
c Var 'aux865' direct represents '1' with '13678'
13676 -13677 13678 0
-13678 13677 0
-13678 -13676 0
c Var 'aux865' direct represents '2' with '-13677'
13676 13678 -13677 0
c Encoding variable: aux866 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00008_00004=7)))
c Both direct and order encoding.
c Var 'aux866' order represents '0' with '13679'
c Var 'aux866' direct represents '0' with '13679'
c Var 'aux866' order represents '1' with '13680'
-13679 13680 0
c Var 'aux866' direct represents '1' with '13681'
13679 -13680 13681 0
-13681 13680 0
-13681 -13679 0
c Var 'aux866' direct represents '2' with '-13680'
13679 13681 -13680 0
c Encoding variable: aux867 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00008_00005=7)))
c Both direct and order encoding.
c Var 'aux867' order represents '0' with '13682'
c Var 'aux867' direct represents '0' with '13682'
c Var 'aux867' order represents '1' with '13683'
-13682 13683 0
c Var 'aux867' direct represents '1' with '13684'
13682 -13683 13684 0
-13684 13683 0
-13684 -13682 0
c Var 'aux867' direct represents '2' with '-13683'
13682 13684 -13683 0
c Encoding variable: aux868 with domain: int(0..3) (representing constraint ((field_00008_00003=7) + aux867))
c Both direct and order encoding.
c Var 'aux868' order represents '0' with '13685'
c Var 'aux868' direct represents '0' with '13685'
c Var 'aux868' order represents '1' with '13686'
-13685 13686 0
c Var 'aux868' direct represents '1' with '13687'
13685 -13686 13687 0
-13687 13686 0
-13687 -13685 0
c Var 'aux868' order represents '2' with '13688'
-13686 13688 0
c Var 'aux868' direct represents '2' with '13689'
13686 -13688 13689 0
-13689 13688 0
-13689 -13686 0
c Var 'aux868' direct represents '3' with '-13688'
13685 13687 13689 -13688 0
c Encoding variable: aux869 with domain: int(0..4) (representing constraint (aux864 + aux866))
c Both direct and order encoding.
c Var 'aux869' order represents '0' with '13690'
c Var 'aux869' direct represents '0' with '13690'
c Var 'aux869' order represents '1' with '13691'
-13690 13691 0
c Var 'aux869' direct represents '1' with '13692'
13690 -13691 13692 0
-13692 13691 0
-13692 -13690 0
c Var 'aux869' order represents '2' with '13693'
-13691 13693 0
c Var 'aux869' direct represents '2' with '13694'
13691 -13693 13694 0
-13694 13693 0
-13694 -13691 0
c Var 'aux869' order represents '3' with '13695'
-13693 13695 0
c Var 'aux869' direct represents '3' with '13696'
13693 -13695 13696 0
-13696 13695 0
-13696 -13693 0
c Var 'aux869' direct represents '4' with '-13695'
13690 13692 13694 13696 -13695 0
c Encoding variable: aux870 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00008_00009=8)))
c Both direct and order encoding.
c Var 'aux870' order represents '0' with '13697'
c Var 'aux870' direct represents '0' with '13697'
c Var 'aux870' order represents '1' with '13698'
-13697 13698 0
c Var 'aux870' direct represents '1' with '13699'
13697 -13698 13699 0
-13699 13698 0
-13699 -13697 0
c Var 'aux870' direct represents '2' with '-13698'
13697 13699 -13698 0
c Encoding variable: aux871 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00008_00002=8)))
c Both direct and order encoding.
c Var 'aux871' order represents '0' with '13700'
c Var 'aux871' direct represents '0' with '13700'
c Var 'aux871' order represents '1' with '13701'
-13700 13701 0
c Var 'aux871' direct represents '1' with '13702'
13700 -13701 13702 0
-13702 13701 0
-13702 -13700 0
c Var 'aux871' direct represents '2' with '-13701'
13700 13702 -13701 0
c Encoding variable: aux872 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00008_00004=8)))
c Both direct and order encoding.
c Var 'aux872' order represents '0' with '13703'
c Var 'aux872' direct represents '0' with '13703'
c Var 'aux872' order represents '1' with '13704'
-13703 13704 0
c Var 'aux872' direct represents '1' with '13705'
13703 -13704 13705 0
-13705 13704 0
-13705 -13703 0
c Var 'aux872' direct represents '2' with '-13704'
13703 13705 -13704 0
c Encoding variable: aux873 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00008_00005=8)))
c Both direct and order encoding.
c Var 'aux873' order represents '0' with '13706'
c Var 'aux873' direct represents '0' with '13706'
c Var 'aux873' order represents '1' with '13707'
-13706 13707 0
c Var 'aux873' direct represents '1' with '13708'
13706 -13707 13708 0
-13708 13707 0
-13708 -13706 0
c Var 'aux873' direct represents '2' with '-13707'
13706 13708 -13707 0
c Encoding variable: aux874 with domain: int(0..3) (representing constraint ((field_00008_00003=8) + aux873))
c Both direct and order encoding.
c Var 'aux874' order represents '0' with '13709'
c Var 'aux874' direct represents '0' with '13709'
c Var 'aux874' order represents '1' with '13710'
-13709 13710 0
c Var 'aux874' direct represents '1' with '13711'
13709 -13710 13711 0
-13711 13710 0
-13711 -13709 0
c Var 'aux874' order represents '2' with '13712'
-13710 13712 0
c Var 'aux874' direct represents '2' with '13713'
13710 -13712 13713 0
-13713 13712 0
-13713 -13710 0
c Var 'aux874' direct represents '3' with '-13712'
13709 13711 13713 -13712 0
c Encoding variable: aux875 with domain: int(0..4) (representing constraint (aux870 + aux872))
c Both direct and order encoding.
c Var 'aux875' order represents '0' with '13714'
c Var 'aux875' direct represents '0' with '13714'
c Var 'aux875' order represents '1' with '13715'
-13714 13715 0
c Var 'aux875' direct represents '1' with '13716'
13714 -13715 13716 0
-13716 13715 0
-13716 -13714 0
c Var 'aux875' order represents '2' with '13717'
-13715 13717 0
c Var 'aux875' direct represents '2' with '13718'
13715 -13717 13718 0
-13718 13717 0
-13718 -13715 0
c Var 'aux875' order represents '3' with '13719'
-13717 13719 0
c Var 'aux875' direct represents '3' with '13720'
13717 -13719 13720 0
-13720 13719 0
-13720 -13717 0
c Var 'aux875' direct represents '4' with '-13719'
13714 13716 13718 13720 -13719 0
c Encoding variable: aux876 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00008_00009=9)))
c Both direct and order encoding.
c Var 'aux876' order represents '0' with '13721'
c Var 'aux876' direct represents '0' with '13721'
c Var 'aux876' order represents '1' with '13722'
-13721 13722 0
c Var 'aux876' direct represents '1' with '13723'
13721 -13722 13723 0
-13723 13722 0
-13723 -13721 0
c Var 'aux876' direct represents '2' with '-13722'
13721 13723 -13722 0
c Encoding variable: aux877 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00008_00002=9)))
c Both direct and order encoding.
c Var 'aux877' order represents '0' with '13724'
c Var 'aux877' direct represents '0' with '13724'
c Var 'aux877' order represents '1' with '13725'
-13724 13725 0
c Var 'aux877' direct represents '1' with '13726'
13724 -13725 13726 0
-13726 13725 0
-13726 -13724 0
c Var 'aux877' direct represents '2' with '-13725'
13724 13726 -13725 0
c Encoding variable: aux878 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00008_00004=9)))
c Both direct and order encoding.
c Var 'aux878' order represents '0' with '13727'
c Var 'aux878' direct represents '0' with '13727'
c Var 'aux878' order represents '1' with '13728'
-13727 13728 0
c Var 'aux878' direct represents '1' with '13729'
13727 -13728 13729 0
-13729 13728 0
-13729 -13727 0
c Var 'aux878' direct represents '2' with '-13728'
13727 13729 -13728 0
c Encoding variable: aux879 with domain: int(0..2) (representing constraint ((field_00008_00006=9) + (field_00008_00005=9)))
c Both direct and order encoding.
c Var 'aux879' order represents '0' with '13730'
c Var 'aux879' direct represents '0' with '13730'
c Var 'aux879' order represents '1' with '13731'
-13730 13731 0
c Var 'aux879' direct represents '1' with '13732'
13730 -13731 13732 0
-13732 13731 0
-13732 -13730 0
c Var 'aux879' direct represents '2' with '-13731'
13730 13732 -13731 0
c Encoding variable: aux880 with domain: int(0..3) (representing constraint ((field_00008_00003=9) + aux879))
c Both direct and order encoding.
c Var 'aux880' order represents '0' with '13733'
c Var 'aux880' direct represents '0' with '13733'
c Var 'aux880' order represents '1' with '13734'
-13733 13734 0
c Var 'aux880' direct represents '1' with '13735'
13733 -13734 13735 0
-13735 13734 0
-13735 -13733 0
c Var 'aux880' order represents '2' with '13736'
-13734 13736 0
c Var 'aux880' direct represents '2' with '13737'
13734 -13736 13737 0
-13737 13736 0
-13737 -13734 0
c Var 'aux880' direct represents '3' with '-13736'
13733 13735 13737 -13736 0
c Encoding variable: aux881 with domain: int(0..4) (representing constraint (aux876 + aux878))
c Both direct and order encoding.
c Var 'aux881' order represents '0' with '13738'
c Var 'aux881' direct represents '0' with '13738'
c Var 'aux881' order represents '1' with '13739'
-13738 13739 0
c Var 'aux881' direct represents '1' with '13740'
13738 -13739 13740 0
-13740 13739 0
-13740 -13738 0
c Var 'aux881' order represents '2' with '13741'
-13739 13741 0
c Var 'aux881' direct represents '2' with '13742'
13739 -13741 13742 0
-13742 13741 0
-13742 -13739 0
c Var 'aux881' order represents '3' with '13743'
-13741 13743 0
c Var 'aux881' direct represents '3' with '13744'
13741 -13743 13744 0
-13744 13743 0
-13744 -13741 0
c Var 'aux881' direct represents '4' with '-13743'
13738 13740 13742 13744 -13743 0
c Encoding variable: aux882 with domain: int(0..2) (representing constraint ((field_00009_00001=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux882' order represents '0' with '13745'
c Var 'aux882' direct represents '0' with '13745'
c Var 'aux882' order represents '1' with '13746'
-13745 13746 0
c Var 'aux882' direct represents '1' with '13747'
13745 -13746 13747 0
-13747 13746 0
-13747 -13745 0
c Var 'aux882' direct represents '2' with '-13746'
13745 13747 -13746 0
c Encoding variable: aux883 with domain: int(0..2) (representing constraint ((field_00009_00008=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux883' order represents '0' with '13748'
c Var 'aux883' direct represents '0' with '13748'
c Var 'aux883' order represents '1' with '13749'
-13748 13749 0
c Var 'aux883' direct represents '1' with '13750'
13748 -13749 13750 0
-13750 13749 0
-13750 -13748 0
c Var 'aux883' direct represents '2' with '-13749'
13748 13750 -13749 0
c Encoding variable: aux884 with domain: int(0..2) (representing constraint ((field_00009_00007=1) + (field_00009_00004=1)))
c Both direct and order encoding.
c Var 'aux884' order represents '0' with '13751'
c Var 'aux884' direct represents '0' with '13751'
c Var 'aux884' order represents '1' with '13752'
-13751 13752 0
c Var 'aux884' direct represents '1' with '13753'
13751 -13752 13753 0
-13753 13752 0
-13753 -13751 0
c Var 'aux884' direct represents '2' with '-13752'
13751 13753 -13752 0
c Encoding variable: aux885 with domain: int(0..2) (representing constraint ((field_00009_00006=1) + (field_00009_00005=1)))
c Both direct and order encoding.
c Var 'aux885' order represents '0' with '13754'
c Var 'aux885' direct represents '0' with '13754'
c Var 'aux885' order represents '1' with '13755'
-13754 13755 0
c Var 'aux885' direct represents '1' with '13756'
13754 -13755 13756 0
-13756 13755 0
-13756 -13754 0
c Var 'aux885' direct represents '2' with '-13755'
13754 13756 -13755 0
c Encoding variable: aux886 with domain: int(0..3) (representing constraint ((field_00009_00003=1) + aux885))
c Both direct and order encoding.
c Var 'aux886' order represents '0' with '13757'
c Var 'aux886' direct represents '0' with '13757'
c Var 'aux886' order represents '1' with '13758'
-13757 13758 0
c Var 'aux886' direct represents '1' with '13759'
13757 -13758 13759 0
-13759 13758 0
-13759 -13757 0
c Var 'aux886' order represents '2' with '13760'
-13758 13760 0
c Var 'aux886' direct represents '2' with '13761'
13758 -13760 13761 0
-13761 13760 0
-13761 -13758 0
c Var 'aux886' direct represents '3' with '-13760'
13757 13759 13761 -13760 0
c Encoding variable: aux887 with domain: int(0..4) (representing constraint (aux882 + aux884))
c Both direct and order encoding.
c Var 'aux887' order represents '0' with '13762'
c Var 'aux887' direct represents '0' with '13762'
c Var 'aux887' order represents '1' with '13763'
-13762 13763 0
c Var 'aux887' direct represents '1' with '13764'
13762 -13763 13764 0
-13764 13763 0
-13764 -13762 0
c Var 'aux887' order represents '2' with '13765'
-13763 13765 0
c Var 'aux887' direct represents '2' with '13766'
13763 -13765 13766 0
-13766 13765 0
-13766 -13763 0
c Var 'aux887' order represents '3' with '13767'
-13765 13767 0
c Var 'aux887' direct represents '3' with '13768'
13765 -13767 13768 0
-13768 13767 0
-13768 -13765 0
c Var 'aux887' direct represents '4' with '-13767'
13762 13764 13766 13768 -13767 0
c Encoding variable: aux888 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00009_00009=2)))
c Both direct and order encoding.
c Var 'aux888' order represents '0' with '13769'
c Var 'aux888' direct represents '0' with '13769'
c Var 'aux888' order represents '1' with '13770'
-13769 13770 0
c Var 'aux888' direct represents '1' with '13771'
13769 -13770 13771 0
-13771 13770 0
-13771 -13769 0
c Var 'aux888' direct represents '2' with '-13770'
13769 13771 -13770 0
c Encoding variable: aux889 with domain: int(0..2) (representing constraint ((field_00009_00008=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux889' order represents '0' with '13772'
c Var 'aux889' direct represents '0' with '13772'
c Var 'aux889' order represents '1' with '13773'
-13772 13773 0
c Var 'aux889' direct represents '1' with '13774'
13772 -13773 13774 0
-13774 13773 0
-13774 -13772 0
c Var 'aux889' direct represents '2' with '-13773'
13772 13774 -13773 0
c Encoding variable: aux890 with domain: int(0..2) (representing constraint ((field_00009_00007=2) + (field_00009_00004=2)))
c Both direct and order encoding.
c Var 'aux890' order represents '0' with '13775'
c Var 'aux890' direct represents '0' with '13775'
c Var 'aux890' order represents '1' with '13776'
-13775 13776 0
c Var 'aux890' direct represents '1' with '13777'
13775 -13776 13777 0
-13777 13776 0
-13777 -13775 0
c Var 'aux890' direct represents '2' with '-13776'
13775 13777 -13776 0
c Encoding variable: aux891 with domain: int(0..2) (representing constraint ((field_00009_00006=2) + (field_00009_00005=2)))
c Both direct and order encoding.
c Var 'aux891' order represents '0' with '13778'
c Var 'aux891' direct represents '0' with '13778'
c Var 'aux891' order represents '1' with '13779'
-13778 13779 0
c Var 'aux891' direct represents '1' with '13780'
13778 -13779 13780 0
-13780 13779 0
-13780 -13778 0
c Var 'aux891' direct represents '2' with '-13779'
13778 13780 -13779 0
c Encoding variable: aux892 with domain: int(0..3) (representing constraint ((field_00009_00003=2) + aux891))
c Both direct and order encoding.
c Var 'aux892' order represents '0' with '13781'
c Var 'aux892' direct represents '0' with '13781'
c Var 'aux892' order represents '1' with '13782'
-13781 13782 0
c Var 'aux892' direct represents '1' with '13783'
13781 -13782 13783 0
-13783 13782 0
-13783 -13781 0
c Var 'aux892' order represents '2' with '13784'
-13782 13784 0
c Var 'aux892' direct represents '2' with '13785'
13782 -13784 13785 0
-13785 13784 0
-13785 -13782 0
c Var 'aux892' direct represents '3' with '-13784'
13781 13783 13785 -13784 0
c Encoding variable: aux893 with domain: int(0..4) (representing constraint (aux888 + aux890))
c Both direct and order encoding.
c Var 'aux893' order represents '0' with '13786'
c Var 'aux893' direct represents '0' with '13786'
c Var 'aux893' order represents '1' with '13787'
-13786 13787 0
c Var 'aux893' direct represents '1' with '13788'
13786 -13787 13788 0
-13788 13787 0
-13788 -13786 0
c Var 'aux893' order represents '2' with '13789'
-13787 13789 0
c Var 'aux893' direct represents '2' with '13790'
13787 -13789 13790 0
-13790 13789 0
-13790 -13787 0
c Var 'aux893' order represents '3' with '13791'
-13789 13791 0
c Var 'aux893' direct represents '3' with '13792'
13789 -13791 13792 0
-13792 13791 0
-13792 -13789 0
c Var 'aux893' direct represents '4' with '-13791'
13786 13788 13790 13792 -13791 0
c Encoding variable: aux894 with domain: int(0..2) (representing constraint ((field_00009_00001=3) + (field_00009_00009=3)))
c Both direct and order encoding.
c Var 'aux894' order represents '0' with '13793'
c Var 'aux894' direct represents '0' with '13793'
c Var 'aux894' order represents '1' with '13794'
-13793 13794 0
c Var 'aux894' direct represents '1' with '13795'
13793 -13794 13795 0
-13795 13794 0
-13795 -13793 0
c Var 'aux894' direct represents '2' with '-13794'
13793 13795 -13794 0
c Encoding variable: aux895 with domain: int(0..2) (representing constraint ((field_00009_00008=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux895' order represents '0' with '13796'
c Var 'aux895' direct represents '0' with '13796'
c Var 'aux895' order represents '1' with '13797'
-13796 13797 0
c Var 'aux895' direct represents '1' with '13798'
13796 -13797 13798 0
-13798 13797 0
-13798 -13796 0
c Var 'aux895' direct represents '2' with '-13797'
13796 13798 -13797 0
c Encoding variable: aux896 with domain: int(0..2) (representing constraint ((field_00009_00007=3) + (field_00009_00004=3)))
c Both direct and order encoding.
c Var 'aux896' order represents '0' with '13799'
c Var 'aux896' direct represents '0' with '13799'
c Var 'aux896' order represents '1' with '13800'
-13799 13800 0
c Var 'aux896' direct represents '1' with '13801'
13799 -13800 13801 0
-13801 13800 0
-13801 -13799 0
c Var 'aux896' direct represents '2' with '-13800'
13799 13801 -13800 0
c Encoding variable: aux897 with domain: int(0..2) (representing constraint ((field_00009_00006=3) + (field_00009_00005=3)))
c Both direct and order encoding.
c Var 'aux897' order represents '0' with '13802'
c Var 'aux897' direct represents '0' with '13802'
c Var 'aux897' order represents '1' with '13803'
-13802 13803 0
c Var 'aux897' direct represents '1' with '13804'
13802 -13803 13804 0
-13804 13803 0
-13804 -13802 0
c Var 'aux897' direct represents '2' with '-13803'
13802 13804 -13803 0
c Encoding variable: aux898 with domain: int(0..3) (representing constraint ((field_00009_00003=3) + aux897))
c Both direct and order encoding.
c Var 'aux898' order represents '0' with '13805'
c Var 'aux898' direct represents '0' with '13805'
c Var 'aux898' order represents '1' with '13806'
-13805 13806 0
c Var 'aux898' direct represents '1' with '13807'
13805 -13806 13807 0
-13807 13806 0
-13807 -13805 0
c Var 'aux898' order represents '2' with '13808'
-13806 13808 0
c Var 'aux898' direct represents '2' with '13809'
13806 -13808 13809 0
-13809 13808 0
-13809 -13806 0
c Var 'aux898' direct represents '3' with '-13808'
13805 13807 13809 -13808 0
c Encoding variable: aux899 with domain: int(0..4) (representing constraint (aux894 + aux896))
c Both direct and order encoding.
c Var 'aux899' order represents '0' with '13810'
c Var 'aux899' direct represents '0' with '13810'
c Var 'aux899' order represents '1' with '13811'
-13810 13811 0
c Var 'aux899' direct represents '1' with '13812'
13810 -13811 13812 0
-13812 13811 0
-13812 -13810 0
c Var 'aux899' order represents '2' with '13813'
-13811 13813 0
c Var 'aux899' direct represents '2' with '13814'
13811 -13813 13814 0
-13814 13813 0
-13814 -13811 0
c Var 'aux899' order represents '3' with '13815'
-13813 13815 0
c Var 'aux899' direct represents '3' with '13816'
13813 -13815 13816 0
-13816 13815 0
-13816 -13813 0
c Var 'aux899' direct represents '4' with '-13815'
13810 13812 13814 13816 -13815 0
c Encoding variable: aux900 with domain: int(0..2) (representing constraint ((field_00009_00001=4) + (field_00009_00009=4)))
c Both direct and order encoding.
c Var 'aux900' order represents '0' with '13817'
c Var 'aux900' direct represents '0' with '13817'
c Var 'aux900' order represents '1' with '13818'
-13817 13818 0
c Var 'aux900' direct represents '1' with '13819'
13817 -13818 13819 0
-13819 13818 0
-13819 -13817 0
c Var 'aux900' direct represents '2' with '-13818'
13817 13819 -13818 0
c Encoding variable: aux901 with domain: int(0..2) (representing constraint ((field_00009_00008=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux901' order represents '0' with '13820'
c Var 'aux901' direct represents '0' with '13820'
c Var 'aux901' order represents '1' with '13821'
-13820 13821 0
c Var 'aux901' direct represents '1' with '13822'
13820 -13821 13822 0
-13822 13821 0
-13822 -13820 0
c Var 'aux901' direct represents '2' with '-13821'
13820 13822 -13821 0
c Encoding variable: aux902 with domain: int(0..2) (representing constraint ((field_00009_00007=4) + (field_00009_00004=4)))
c Both direct and order encoding.
c Var 'aux902' order represents '0' with '13823'
c Var 'aux902' direct represents '0' with '13823'
c Var 'aux902' order represents '1' with '13824'
-13823 13824 0
c Var 'aux902' direct represents '1' with '13825'
13823 -13824 13825 0
-13825 13824 0
-13825 -13823 0
c Var 'aux902' direct represents '2' with '-13824'
13823 13825 -13824 0
c Encoding variable: aux903 with domain: int(0..2) (representing constraint ((field_00009_00006=4) + (field_00009_00005=4)))
c Both direct and order encoding.
c Var 'aux903' order represents '0' with '13826'
c Var 'aux903' direct represents '0' with '13826'
c Var 'aux903' order represents '1' with '13827'
-13826 13827 0
c Var 'aux903' direct represents '1' with '13828'
13826 -13827 13828 0
-13828 13827 0
-13828 -13826 0
c Var 'aux903' direct represents '2' with '-13827'
13826 13828 -13827 0
c Encoding variable: aux904 with domain: int(0..3) (representing constraint ((field_00009_00003=4) + aux903))
c Both direct and order encoding.
c Var 'aux904' order represents '0' with '13829'
c Var 'aux904' direct represents '0' with '13829'
c Var 'aux904' order represents '1' with '13830'
-13829 13830 0
c Var 'aux904' direct represents '1' with '13831'
13829 -13830 13831 0
-13831 13830 0
-13831 -13829 0
c Var 'aux904' order represents '2' with '13832'
-13830 13832 0
c Var 'aux904' direct represents '2' with '13833'
13830 -13832 13833 0
-13833 13832 0
-13833 -13830 0
c Var 'aux904' direct represents '3' with '-13832'
13829 13831 13833 -13832 0
c Encoding variable: aux905 with domain: int(0..4) (representing constraint (aux900 + aux902))
c Both direct and order encoding.
c Var 'aux905' order represents '0' with '13834'
c Var 'aux905' direct represents '0' with '13834'
c Var 'aux905' order represents '1' with '13835'
-13834 13835 0
c Var 'aux905' direct represents '1' with '13836'
13834 -13835 13836 0
-13836 13835 0
-13836 -13834 0
c Var 'aux905' order represents '2' with '13837'
-13835 13837 0
c Var 'aux905' direct represents '2' with '13838'
13835 -13837 13838 0
-13838 13837 0
-13838 -13835 0
c Var 'aux905' order represents '3' with '13839'
-13837 13839 0
c Var 'aux905' direct represents '3' with '13840'
13837 -13839 13840 0
-13840 13839 0
-13840 -13837 0
c Var 'aux905' direct represents '4' with '-13839'
13834 13836 13838 13840 -13839 0
c Encoding variable: aux906 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux906' order represents '0' with '13841'
c Var 'aux906' direct represents '0' with '13841'
c Var 'aux906' order represents '1' with '13842'
-13841 13842 0
c Var 'aux906' direct represents '1' with '13843'
13841 -13842 13843 0
-13843 13842 0
-13843 -13841 0
c Var 'aux906' direct represents '2' with '-13842'
13841 13843 -13842 0
c Encoding variable: aux907 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux907' order represents '0' with '13844'
c Var 'aux907' direct represents '0' with '13844'
c Var 'aux907' order represents '1' with '13845'
-13844 13845 0
c Var 'aux907' direct represents '1' with '13846'
13844 -13845 13846 0
-13846 13845 0
-13846 -13844 0
c Var 'aux907' direct represents '2' with '-13845'
13844 13846 -13845 0
c Encoding variable: aux908 with domain: int(0..2) (representing constraint ((field_00009_00007=5) + (field_00009_00004=5)))
c Both direct and order encoding.
c Var 'aux908' order represents '0' with '13847'
c Var 'aux908' direct represents '0' with '13847'
c Var 'aux908' order represents '1' with '13848'
-13847 13848 0
c Var 'aux908' direct represents '1' with '13849'
13847 -13848 13849 0
-13849 13848 0
-13849 -13847 0
c Var 'aux908' direct represents '2' with '-13848'
13847 13849 -13848 0
c Encoding variable: aux909 with domain: int(0..2) (representing constraint ((field_00009_00006=5) + (field_00009_00005=5)))
c Both direct and order encoding.
c Var 'aux909' order represents '0' with '13850'
c Var 'aux909' direct represents '0' with '13850'
c Var 'aux909' order represents '1' with '13851'
-13850 13851 0
c Var 'aux909' direct represents '1' with '13852'
13850 -13851 13852 0
-13852 13851 0
-13852 -13850 0
c Var 'aux909' direct represents '2' with '-13851'
13850 13852 -13851 0
c Encoding variable: aux910 with domain: int(0..3) (representing constraint ((field_00009_00003=5) + aux909))
c Both direct and order encoding.
c Var 'aux910' order represents '0' with '13853'
c Var 'aux910' direct represents '0' with '13853'
c Var 'aux910' order represents '1' with '13854'
-13853 13854 0
c Var 'aux910' direct represents '1' with '13855'
13853 -13854 13855 0
-13855 13854 0
-13855 -13853 0
c Var 'aux910' order represents '2' with '13856'
-13854 13856 0
c Var 'aux910' direct represents '2' with '13857'
13854 -13856 13857 0
-13857 13856 0
-13857 -13854 0
c Var 'aux910' direct represents '3' with '-13856'
13853 13855 13857 -13856 0
c Encoding variable: aux911 with domain: int(0..4) (representing constraint (aux906 + aux908))
c Both direct and order encoding.
c Var 'aux911' order represents '0' with '13858'
c Var 'aux911' direct represents '0' with '13858'
c Var 'aux911' order represents '1' with '13859'
-13858 13859 0
c Var 'aux911' direct represents '1' with '13860'
13858 -13859 13860 0
-13860 13859 0
-13860 -13858 0
c Var 'aux911' order represents '2' with '13861'
-13859 13861 0
c Var 'aux911' direct represents '2' with '13862'
13859 -13861 13862 0
-13862 13861 0
-13862 -13859 0
c Var 'aux911' order represents '3' with '13863'
-13861 13863 0
c Var 'aux911' direct represents '3' with '13864'
13861 -13863 13864 0
-13864 13863 0
-13864 -13861 0
c Var 'aux911' direct represents '4' with '-13863'
13858 13860 13862 13864 -13863 0
c Encoding variable: aux912 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux912' order represents '0' with '13865'
c Var 'aux912' direct represents '0' with '13865'
c Var 'aux912' order represents '1' with '13866'
-13865 13866 0
c Var 'aux912' direct represents '1' with '13867'
13865 -13866 13867 0
-13867 13866 0
-13867 -13865 0
c Var 'aux912' direct represents '2' with '-13866'
13865 13867 -13866 0
c Encoding variable: aux913 with domain: int(0..2) (representing constraint ((field_00009_00008=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux913' order represents '0' with '13868'
c Var 'aux913' direct represents '0' with '13868'
c Var 'aux913' order represents '1' with '13869'
-13868 13869 0
c Var 'aux913' direct represents '1' with '13870'
13868 -13869 13870 0
-13870 13869 0
-13870 -13868 0
c Var 'aux913' direct represents '2' with '-13869'
13868 13870 -13869 0
c Encoding variable: aux914 with domain: int(0..2) (representing constraint ((field_00009_00007=6) + (field_00009_00004=6)))
c Both direct and order encoding.
c Var 'aux914' order represents '0' with '13871'
c Var 'aux914' direct represents '0' with '13871'
c Var 'aux914' order represents '1' with '13872'
-13871 13872 0
c Var 'aux914' direct represents '1' with '13873'
13871 -13872 13873 0
-13873 13872 0
-13873 -13871 0
c Var 'aux914' direct represents '2' with '-13872'
13871 13873 -13872 0
c Encoding variable: aux915 with domain: int(0..2) (representing constraint ((field_00009_00006=6) + (field_00009_00005=6)))
c Both direct and order encoding.
c Var 'aux915' order represents '0' with '13874'
c Var 'aux915' direct represents '0' with '13874'
c Var 'aux915' order represents '1' with '13875'
-13874 13875 0
c Var 'aux915' direct represents '1' with '13876'
13874 -13875 13876 0
-13876 13875 0
-13876 -13874 0
c Var 'aux915' direct represents '2' with '-13875'
13874 13876 -13875 0
c Encoding variable: aux916 with domain: int(0..3) (representing constraint ((field_00009_00003=6) + aux915))
c Both direct and order encoding.
c Var 'aux916' order represents '0' with '13877'
c Var 'aux916' direct represents '0' with '13877'
c Var 'aux916' order represents '1' with '13878'
-13877 13878 0
c Var 'aux916' direct represents '1' with '13879'
13877 -13878 13879 0
-13879 13878 0
-13879 -13877 0
c Var 'aux916' order represents '2' with '13880'
-13878 13880 0
c Var 'aux916' direct represents '2' with '13881'
13878 -13880 13881 0
-13881 13880 0
-13881 -13878 0
c Var 'aux916' direct represents '3' with '-13880'
13877 13879 13881 -13880 0
c Encoding variable: aux917 with domain: int(0..4) (representing constraint (aux912 + aux914))
c Both direct and order encoding.
c Var 'aux917' order represents '0' with '13882'
c Var 'aux917' direct represents '0' with '13882'
c Var 'aux917' order represents '1' with '13883'
-13882 13883 0
c Var 'aux917' direct represents '1' with '13884'
13882 -13883 13884 0
-13884 13883 0
-13884 -13882 0
c Var 'aux917' order represents '2' with '13885'
-13883 13885 0
c Var 'aux917' direct represents '2' with '13886'
13883 -13885 13886 0
-13886 13885 0
-13886 -13883 0
c Var 'aux917' order represents '3' with '13887'
-13885 13887 0
c Var 'aux917' direct represents '3' with '13888'
13885 -13887 13888 0
-13888 13887 0
-13888 -13885 0
c Var 'aux917' direct represents '4' with '-13887'
13882 13884 13886 13888 -13887 0
c Encoding variable: aux918 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux918' order represents '0' with '13889'
c Var 'aux918' direct represents '0' with '13889'
c Var 'aux918' order represents '1' with '13890'
-13889 13890 0
c Var 'aux918' direct represents '1' with '13891'
13889 -13890 13891 0
-13891 13890 0
-13891 -13889 0
c Var 'aux918' direct represents '2' with '-13890'
13889 13891 -13890 0
c Encoding variable: aux919 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux919' order represents '0' with '13892'
c Var 'aux919' direct represents '0' with '13892'
c Var 'aux919' order represents '1' with '13893'
-13892 13893 0
c Var 'aux919' direct represents '1' with '13894'
13892 -13893 13894 0
-13894 13893 0
-13894 -13892 0
c Var 'aux919' direct represents '2' with '-13893'
13892 13894 -13893 0
c Encoding variable: aux920 with domain: int(0..2) (representing constraint ((field_00009_00007=7) + (field_00009_00004=7)))
c Both direct and order encoding.
c Var 'aux920' order represents '0' with '13895'
c Var 'aux920' direct represents '0' with '13895'
c Var 'aux920' order represents '1' with '13896'
-13895 13896 0
c Var 'aux920' direct represents '1' with '13897'
13895 -13896 13897 0
-13897 13896 0
-13897 -13895 0
c Var 'aux920' direct represents '2' with '-13896'
13895 13897 -13896 0
c Encoding variable: aux921 with domain: int(0..2) (representing constraint ((field_00009_00006=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux921' order represents '0' with '13898'
c Var 'aux921' direct represents '0' with '13898'
c Var 'aux921' order represents '1' with '13899'
-13898 13899 0
c Var 'aux921' direct represents '1' with '13900'
13898 -13899 13900 0
-13900 13899 0
-13900 -13898 0
c Var 'aux921' direct represents '2' with '-13899'
13898 13900 -13899 0
c Encoding variable: aux922 with domain: int(0..3) (representing constraint ((field_00009_00003=7) + aux921))
c Both direct and order encoding.
c Var 'aux922' order represents '0' with '13901'
c Var 'aux922' direct represents '0' with '13901'
c Var 'aux922' order represents '1' with '13902'
-13901 13902 0
c Var 'aux922' direct represents '1' with '13903'
13901 -13902 13903 0
-13903 13902 0
-13903 -13901 0
c Var 'aux922' order represents '2' with '13904'
-13902 13904 0
c Var 'aux922' direct represents '2' with '13905'
13902 -13904 13905 0
-13905 13904 0
-13905 -13902 0
c Var 'aux922' direct represents '3' with '-13904'
13901 13903 13905 -13904 0
c Encoding variable: aux923 with domain: int(0..4) (representing constraint (aux918 + aux920))
c Both direct and order encoding.
c Var 'aux923' order represents '0' with '13906'
c Var 'aux923' direct represents '0' with '13906'
c Var 'aux923' order represents '1' with '13907'
-13906 13907 0
c Var 'aux923' direct represents '1' with '13908'
13906 -13907 13908 0
-13908 13907 0
-13908 -13906 0
c Var 'aux923' order represents '2' with '13909'
-13907 13909 0
c Var 'aux923' direct represents '2' with '13910'
13907 -13909 13910 0
-13910 13909 0
-13910 -13907 0
c Var 'aux923' order represents '3' with '13911'
-13909 13911 0
c Var 'aux923' direct represents '3' with '13912'
13909 -13911 13912 0
-13912 13911 0
-13912 -13909 0
c Var 'aux923' direct represents '4' with '-13911'
13906 13908 13910 13912 -13911 0
c Encoding variable: aux924 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux924' order represents '0' with '13913'
c Var 'aux924' direct represents '0' with '13913'
c Var 'aux924' order represents '1' with '13914'
-13913 13914 0
c Var 'aux924' direct represents '1' with '13915'
13913 -13914 13915 0
-13915 13914 0
-13915 -13913 0
c Var 'aux924' direct represents '2' with '-13914'
13913 13915 -13914 0
c Encoding variable: aux925 with domain: int(0..2) (representing constraint ((field_00009_00008=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux925' order represents '0' with '13916'
c Var 'aux925' direct represents '0' with '13916'
c Var 'aux925' order represents '1' with '13917'
-13916 13917 0
c Var 'aux925' direct represents '1' with '13918'
13916 -13917 13918 0
-13918 13917 0
-13918 -13916 0
c Var 'aux925' direct represents '2' with '-13917'
13916 13918 -13917 0
c Encoding variable: aux926 with domain: int(0..2) (representing constraint ((field_00009_00007=8) + (field_00009_00004=8)))
c Both direct and order encoding.
c Var 'aux926' order represents '0' with '13919'
c Var 'aux926' direct represents '0' with '13919'
c Var 'aux926' order represents '1' with '13920'
-13919 13920 0
c Var 'aux926' direct represents '1' with '13921'
13919 -13920 13921 0
-13921 13920 0
-13921 -13919 0
c Var 'aux926' direct represents '2' with '-13920'
13919 13921 -13920 0
c Encoding variable: aux927 with domain: int(0..2) (representing constraint ((field_00009_00006=8) + (field_00009_00005=8)))
c Both direct and order encoding.
c Var 'aux927' order represents '0' with '13922'
c Var 'aux927' direct represents '0' with '13922'
c Var 'aux927' order represents '1' with '13923'
-13922 13923 0
c Var 'aux927' direct represents '1' with '13924'
13922 -13923 13924 0
-13924 13923 0
-13924 -13922 0
c Var 'aux927' direct represents '2' with '-13923'
13922 13924 -13923 0
c Encoding variable: aux928 with domain: int(0..3) (representing constraint ((field_00009_00003=8) + aux927))
c Both direct and order encoding.
c Var 'aux928' order represents '0' with '13925'
c Var 'aux928' direct represents '0' with '13925'
c Var 'aux928' order represents '1' with '13926'
-13925 13926 0
c Var 'aux928' direct represents '1' with '13927'
13925 -13926 13927 0
-13927 13926 0
-13927 -13925 0
c Var 'aux928' order represents '2' with '13928'
-13926 13928 0
c Var 'aux928' direct represents '2' with '13929'
13926 -13928 13929 0
-13929 13928 0
-13929 -13926 0
c Var 'aux928' direct represents '3' with '-13928'
13925 13927 13929 -13928 0
c Encoding variable: aux929 with domain: int(0..4) (representing constraint (aux924 + aux926))
c Both direct and order encoding.
c Var 'aux929' order represents '0' with '13930'
c Var 'aux929' direct represents '0' with '13930'
c Var 'aux929' order represents '1' with '13931'
-13930 13931 0
c Var 'aux929' direct represents '1' with '13932'
13930 -13931 13932 0
-13932 13931 0
-13932 -13930 0
c Var 'aux929' order represents '2' with '13933'
-13931 13933 0
c Var 'aux929' direct represents '2' with '13934'
13931 -13933 13934 0
-13934 13933 0
-13934 -13931 0
c Var 'aux929' order represents '3' with '13935'
-13933 13935 0
c Var 'aux929' direct represents '3' with '13936'
13933 -13935 13936 0
-13936 13935 0
-13936 -13933 0
c Var 'aux929' direct represents '4' with '-13935'
13930 13932 13934 13936 -13935 0
c Encoding variable: aux930 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux930' order represents '0' with '13937'
c Var 'aux930' direct represents '0' with '13937'
c Var 'aux930' order represents '1' with '13938'
-13937 13938 0
c Var 'aux930' direct represents '1' with '13939'
13937 -13938 13939 0
-13939 13938 0
-13939 -13937 0
c Var 'aux930' direct represents '2' with '-13938'
13937 13939 -13938 0
c Encoding variable: aux931 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux931' order represents '0' with '13940'
c Var 'aux931' direct represents '0' with '13940'
c Var 'aux931' order represents '1' with '13941'
-13940 13941 0
c Var 'aux931' direct represents '1' with '13942'
13940 -13941 13942 0
-13942 13941 0
-13942 -13940 0
c Var 'aux931' direct represents '2' with '-13941'
13940 13942 -13941 0
c Encoding variable: aux932 with domain: int(0..2) (representing constraint ((field_00009_00007=9) + (field_00009_00004=9)))
c Both direct and order encoding.
c Var 'aux932' order represents '0' with '13943'
c Var 'aux932' direct represents '0' with '13943'
c Var 'aux932' order represents '1' with '13944'
-13943 13944 0
c Var 'aux932' direct represents '1' with '13945'
13943 -13944 13945 0
-13945 13944 0
-13945 -13943 0
c Var 'aux932' direct represents '2' with '-13944'
13943 13945 -13944 0
c Encoding variable: aux933 with domain: int(0..2) (representing constraint ((field_00009_00006=9) + (field_00009_00005=9)))
c Both direct and order encoding.
c Var 'aux933' order represents '0' with '13946'
c Var 'aux933' direct represents '0' with '13946'
c Var 'aux933' order represents '1' with '13947'
-13946 13947 0
c Var 'aux933' direct represents '1' with '13948'
13946 -13947 13948 0
-13948 13947 0
-13948 -13946 0
c Var 'aux933' direct represents '2' with '-13947'
13946 13948 -13947 0
c Encoding variable: aux934 with domain: int(0..3) (representing constraint ((field_00009_00003=9) + aux933))
c Both direct and order encoding.
c Var 'aux934' order represents '0' with '13949'
c Var 'aux934' direct represents '0' with '13949'
c Var 'aux934' order represents '1' with '13950'
-13949 13950 0
c Var 'aux934' direct represents '1' with '13951'
13949 -13950 13951 0
-13951 13950 0
-13951 -13949 0
c Var 'aux934' order represents '2' with '13952'
-13950 13952 0
c Var 'aux934' direct represents '2' with '13953'
13950 -13952 13953 0
-13953 13952 0
-13953 -13950 0
c Var 'aux934' direct represents '3' with '-13952'
13949 13951 13953 -13952 0
c Encoding variable: aux935 with domain: int(0..4) (representing constraint (aux930 + aux932))
c Both direct and order encoding.
c Var 'aux935' order represents '0' with '13954'
c Var 'aux935' direct represents '0' with '13954'
c Var 'aux935' order represents '1' with '13955'
-13954 13955 0
c Var 'aux935' direct represents '1' with '13956'
13954 -13955 13956 0
-13956 13955 0
-13956 -13954 0
c Var 'aux935' order represents '2' with '13957'
-13955 13957 0
c Var 'aux935' direct represents '2' with '13958'
13955 -13957 13958 0
-13958 13957 0
-13958 -13955 0
c Var 'aux935' order represents '3' with '13959'
-13957 13959 0
c Var 'aux935' direct represents '3' with '13960'
13957 -13959 13960 0
-13960 13959 0
-13960 -13957 0
c Var 'aux935' direct represents '4' with '-13959'
13954 13956 13958 13960 -13959 0
c Encoding variable: aux936 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00006_00001=1)))
c Both direct and order encoding.
c Var 'aux936' order represents '0' with '13961'
c Var 'aux936' direct represents '0' with '13961'
c Var 'aux936' order represents '1' with '13962'
-13961 13962 0
c Var 'aux936' direct represents '1' with '13963'
13961 -13962 13963 0
-13963 13962 0
-13963 -13961 0
c Var 'aux936' direct represents '2' with '-13962'
13961 13963 -13962 0
c Encoding variable: aux937 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00009_00001=1)))
c Both direct and order encoding.
c Var 'aux937' order represents '0' with '13964'
c Var 'aux937' direct represents '0' with '13964'
c Var 'aux937' order represents '1' with '13965'
-13964 13965 0
c Var 'aux937' direct represents '1' with '13966'
13964 -13965 13966 0
-13966 13965 0
-13966 -13964 0
c Var 'aux937' direct represents '2' with '-13965'
13964 13966 -13965 0
c Encoding variable: aux938 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00007_00001=1)))
c Both direct and order encoding.
c Var 'aux938' order represents '0' with '13967'
c Var 'aux938' direct represents '0' with '13967'
c Var 'aux938' order represents '1' with '13968'
-13967 13968 0
c Var 'aux938' direct represents '1' with '13969'
13967 -13968 13969 0
-13969 13968 0
-13969 -13967 0
c Var 'aux938' direct represents '2' with '-13968'
13967 13969 -13968 0
c Encoding variable: aux939 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00005_00001=1)))
c Both direct and order encoding.
c Var 'aux939' order represents '0' with '13970'
c Var 'aux939' direct represents '0' with '13970'
c Var 'aux939' order represents '1' with '13971'
-13970 13971 0
c Var 'aux939' direct represents '1' with '13972'
13970 -13971 13972 0
-13972 13971 0
-13972 -13970 0
c Var 'aux939' direct represents '2' with '-13971'
13970 13972 -13971 0
c Encoding variable: aux940 with domain: int(0..3) (representing constraint ((field_00002_00001=1) + aux939))
c Both direct and order encoding.
c Var 'aux940' order represents '0' with '13973'
c Var 'aux940' direct represents '0' with '13973'
c Var 'aux940' order represents '1' with '13974'
-13973 13974 0
c Var 'aux940' direct represents '1' with '13975'
13973 -13974 13975 0
-13975 13974 0
-13975 -13973 0
c Var 'aux940' order represents '2' with '13976'
-13974 13976 0
c Var 'aux940' direct represents '2' with '13977'
13974 -13976 13977 0
-13977 13976 0
-13977 -13974 0
c Var 'aux940' direct represents '3' with '-13976'
13973 13975 13977 -13976 0
c Encoding variable: aux941 with domain: int(0..4) (representing constraint (aux936 + aux938))
c Both direct and order encoding.
c Var 'aux941' order represents '0' with '13978'
c Var 'aux941' direct represents '0' with '13978'
c Var 'aux941' order represents '1' with '13979'
-13978 13979 0
c Var 'aux941' direct represents '1' with '13980'
13978 -13979 13980 0
-13980 13979 0
-13980 -13978 0
c Var 'aux941' order represents '2' with '13981'
-13979 13981 0
c Var 'aux941' direct represents '2' with '13982'
13979 -13981 13982 0
-13982 13981 0
-13982 -13979 0
c Var 'aux941' order represents '3' with '13983'
-13981 13983 0
c Var 'aux941' direct represents '3' with '13984'
13981 -13983 13984 0
-13984 13983 0
-13984 -13981 0
c Var 'aux941' direct represents '4' with '-13983'
13978 13980 13982 13984 -13983 0
c Encoding variable: aux942 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00006_00001=2)))
c Both direct and order encoding.
c Var 'aux942' order represents '0' with '13985'
c Var 'aux942' direct represents '0' with '13985'
c Var 'aux942' order represents '1' with '13986'
-13985 13986 0
c Var 'aux942' direct represents '1' with '13987'
13985 -13986 13987 0
-13987 13986 0
-13987 -13985 0
c Var 'aux942' direct represents '2' with '-13986'
13985 13987 -13986 0
c Encoding variable: aux943 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00009_00001=2)))
c Both direct and order encoding.
c Var 'aux943' order represents '0' with '13988'
c Var 'aux943' direct represents '0' with '13988'
c Var 'aux943' order represents '1' with '13989'
-13988 13989 0
c Var 'aux943' direct represents '1' with '13990'
13988 -13989 13990 0
-13990 13989 0
-13990 -13988 0
c Var 'aux943' direct represents '2' with '-13989'
13988 13990 -13989 0
c Encoding variable: aux944 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00007_00001=2)))
c Both direct and order encoding.
c Var 'aux944' order represents '0' with '13991'
c Var 'aux944' direct represents '0' with '13991'
c Var 'aux944' order represents '1' with '13992'
-13991 13992 0
c Var 'aux944' direct represents '1' with '13993'
13991 -13992 13993 0
-13993 13992 0
-13993 -13991 0
c Var 'aux944' direct represents '2' with '-13992'
13991 13993 -13992 0
c Encoding variable: aux945 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00005_00001=2)))
c Both direct and order encoding.
c Var 'aux945' order represents '0' with '13994'
c Var 'aux945' direct represents '0' with '13994'
c Var 'aux945' order represents '1' with '13995'
-13994 13995 0
c Var 'aux945' direct represents '1' with '13996'
13994 -13995 13996 0
-13996 13995 0
-13996 -13994 0
c Var 'aux945' direct represents '2' with '-13995'
13994 13996 -13995 0
c Encoding variable: aux946 with domain: int(0..3) (representing constraint ((field_00002_00001=2) + aux945))
c Both direct and order encoding.
c Var 'aux946' order represents '0' with '13997'
c Var 'aux946' direct represents '0' with '13997'
c Var 'aux946' order represents '1' with '13998'
-13997 13998 0
c Var 'aux946' direct represents '1' with '13999'
13997 -13998 13999 0
-13999 13998 0
-13999 -13997 0
c Var 'aux946' order represents '2' with '14000'
-13998 14000 0
c Var 'aux946' direct represents '2' with '14001'
13998 -14000 14001 0
-14001 14000 0
-14001 -13998 0
c Var 'aux946' direct represents '3' with '-14000'
13997 13999 14001 -14000 0
c Encoding variable: aux947 with domain: int(0..4) (representing constraint (aux942 + aux944))
c Both direct and order encoding.
c Var 'aux947' order represents '0' with '14002'
c Var 'aux947' direct represents '0' with '14002'
c Var 'aux947' order represents '1' with '14003'
-14002 14003 0
c Var 'aux947' direct represents '1' with '14004'
14002 -14003 14004 0
-14004 14003 0
-14004 -14002 0
c Var 'aux947' order represents '2' with '14005'
-14003 14005 0
c Var 'aux947' direct represents '2' with '14006'
14003 -14005 14006 0
-14006 14005 0
-14006 -14003 0
c Var 'aux947' order represents '3' with '14007'
-14005 14007 0
c Var 'aux947' direct represents '3' with '14008'
14005 -14007 14008 0
-14008 14007 0
-14008 -14005 0
c Var 'aux947' direct represents '4' with '-14007'
14002 14004 14006 14008 -14007 0
c Encoding variable: aux948 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00006_00001=3)))
c Both direct and order encoding.
c Var 'aux948' order represents '0' with '14009'
c Var 'aux948' direct represents '0' with '14009'
c Var 'aux948' order represents '1' with '14010'
-14009 14010 0
c Var 'aux948' direct represents '1' with '14011'
14009 -14010 14011 0
-14011 14010 0
-14011 -14009 0
c Var 'aux948' direct represents '2' with '-14010'
14009 14011 -14010 0
c Encoding variable: aux949 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00009_00001=3)))
c Both direct and order encoding.
c Var 'aux949' order represents '0' with '14012'
c Var 'aux949' direct represents '0' with '14012'
c Var 'aux949' order represents '1' with '14013'
-14012 14013 0
c Var 'aux949' direct represents '1' with '14014'
14012 -14013 14014 0
-14014 14013 0
-14014 -14012 0
c Var 'aux949' direct represents '2' with '-14013'
14012 14014 -14013 0
c Encoding variable: aux950 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00007_00001=3)))
c Both direct and order encoding.
c Var 'aux950' order represents '0' with '14015'
c Var 'aux950' direct represents '0' with '14015'
c Var 'aux950' order represents '1' with '14016'
-14015 14016 0
c Var 'aux950' direct represents '1' with '14017'
14015 -14016 14017 0
-14017 14016 0
-14017 -14015 0
c Var 'aux950' direct represents '2' with '-14016'
14015 14017 -14016 0
c Encoding variable: aux951 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00005_00001=3)))
c Both direct and order encoding.
c Var 'aux951' order represents '0' with '14018'
c Var 'aux951' direct represents '0' with '14018'
c Var 'aux951' order represents '1' with '14019'
-14018 14019 0
c Var 'aux951' direct represents '1' with '14020'
14018 -14019 14020 0
-14020 14019 0
-14020 -14018 0
c Var 'aux951' direct represents '2' with '-14019'
14018 14020 -14019 0
c Encoding variable: aux952 with domain: int(0..3) (representing constraint ((field_00002_00001=3) + aux951))
c Both direct and order encoding.
c Var 'aux952' order represents '0' with '14021'
c Var 'aux952' direct represents '0' with '14021'
c Var 'aux952' order represents '1' with '14022'
-14021 14022 0
c Var 'aux952' direct represents '1' with '14023'
14021 -14022 14023 0
-14023 14022 0
-14023 -14021 0
c Var 'aux952' order represents '2' with '14024'
-14022 14024 0
c Var 'aux952' direct represents '2' with '14025'
14022 -14024 14025 0
-14025 14024 0
-14025 -14022 0
c Var 'aux952' direct represents '3' with '-14024'
14021 14023 14025 -14024 0
c Encoding variable: aux953 with domain: int(0..4) (representing constraint (aux948 + aux950))
c Both direct and order encoding.
c Var 'aux953' order represents '0' with '14026'
c Var 'aux953' direct represents '0' with '14026'
c Var 'aux953' order represents '1' with '14027'
-14026 14027 0
c Var 'aux953' direct represents '1' with '14028'
14026 -14027 14028 0
-14028 14027 0
-14028 -14026 0
c Var 'aux953' order represents '2' with '14029'
-14027 14029 0
c Var 'aux953' direct represents '2' with '14030'
14027 -14029 14030 0
-14030 14029 0
-14030 -14027 0
c Var 'aux953' order represents '3' with '14031'
-14029 14031 0
c Var 'aux953' direct represents '3' with '14032'
14029 -14031 14032 0
-14032 14031 0
-14032 -14029 0
c Var 'aux953' direct represents '4' with '-14031'
14026 14028 14030 14032 -14031 0
c Encoding variable: aux954 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00006_00001=4)))
c Both direct and order encoding.
c Var 'aux954' order represents '0' with '14033'
c Var 'aux954' direct represents '0' with '14033'
c Var 'aux954' order represents '1' with '14034'
-14033 14034 0
c Var 'aux954' direct represents '1' with '14035'
14033 -14034 14035 0
-14035 14034 0
-14035 -14033 0
c Var 'aux954' direct represents '2' with '-14034'
14033 14035 -14034 0
c Encoding variable: aux955 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00009_00001=4)))
c Both direct and order encoding.
c Var 'aux955' order represents '0' with '14036'
c Var 'aux955' direct represents '0' with '14036'
c Var 'aux955' order represents '1' with '14037'
-14036 14037 0
c Var 'aux955' direct represents '1' with '14038'
14036 -14037 14038 0
-14038 14037 0
-14038 -14036 0
c Var 'aux955' direct represents '2' with '-14037'
14036 14038 -14037 0
c Encoding variable: aux956 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00007_00001=4)))
c Both direct and order encoding.
c Var 'aux956' order represents '0' with '14039'
c Var 'aux956' direct represents '0' with '14039'
c Var 'aux956' order represents '1' with '14040'
-14039 14040 0
c Var 'aux956' direct represents '1' with '14041'
14039 -14040 14041 0
-14041 14040 0
-14041 -14039 0
c Var 'aux956' direct represents '2' with '-14040'
14039 14041 -14040 0
c Encoding variable: aux957 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00005_00001=4)))
c Both direct and order encoding.
c Var 'aux957' order represents '0' with '14042'
c Var 'aux957' direct represents '0' with '14042'
c Var 'aux957' order represents '1' with '14043'
-14042 14043 0
c Var 'aux957' direct represents '1' with '14044'
14042 -14043 14044 0
-14044 14043 0
-14044 -14042 0
c Var 'aux957' direct represents '2' with '-14043'
14042 14044 -14043 0
c Encoding variable: aux958 with domain: int(0..3) (representing constraint ((field_00002_00001=4) + aux957))
c Both direct and order encoding.
c Var 'aux958' order represents '0' with '14045'
c Var 'aux958' direct represents '0' with '14045'
c Var 'aux958' order represents '1' with '14046'
-14045 14046 0
c Var 'aux958' direct represents '1' with '14047'
14045 -14046 14047 0
-14047 14046 0
-14047 -14045 0
c Var 'aux958' order represents '2' with '14048'
-14046 14048 0
c Var 'aux958' direct represents '2' with '14049'
14046 -14048 14049 0
-14049 14048 0
-14049 -14046 0
c Var 'aux958' direct represents '3' with '-14048'
14045 14047 14049 -14048 0
c Encoding variable: aux959 with domain: int(0..4) (representing constraint (aux954 + aux956))
c Both direct and order encoding.
c Var 'aux959' order represents '0' with '14050'
c Var 'aux959' direct represents '0' with '14050'
c Var 'aux959' order represents '1' with '14051'
-14050 14051 0
c Var 'aux959' direct represents '1' with '14052'
14050 -14051 14052 0
-14052 14051 0
-14052 -14050 0
c Var 'aux959' order represents '2' with '14053'
-14051 14053 0
c Var 'aux959' direct represents '2' with '14054'
14051 -14053 14054 0
-14054 14053 0
-14054 -14051 0
c Var 'aux959' order represents '3' with '14055'
-14053 14055 0
c Var 'aux959' direct represents '3' with '14056'
14053 -14055 14056 0
-14056 14055 0
-14056 -14053 0
c Var 'aux959' direct represents '4' with '-14055'
14050 14052 14054 14056 -14055 0
c Encoding variable: aux960 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00006_00001=5)))
c Both direct and order encoding.
c Var 'aux960' order represents '0' with '14057'
c Var 'aux960' direct represents '0' with '14057'
c Var 'aux960' order represents '1' with '14058'
-14057 14058 0
c Var 'aux960' direct represents '1' with '14059'
14057 -14058 14059 0
-14059 14058 0
-14059 -14057 0
c Var 'aux960' direct represents '2' with '-14058'
14057 14059 -14058 0
c Encoding variable: aux961 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00009_00001=5)))
c Both direct and order encoding.
c Var 'aux961' order represents '0' with '14060'
c Var 'aux961' direct represents '0' with '14060'
c Var 'aux961' order represents '1' with '14061'
-14060 14061 0
c Var 'aux961' direct represents '1' with '14062'
14060 -14061 14062 0
-14062 14061 0
-14062 -14060 0
c Var 'aux961' direct represents '2' with '-14061'
14060 14062 -14061 0
c Encoding variable: aux962 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00007_00001=5)))
c Both direct and order encoding.
c Var 'aux962' order represents '0' with '14063'
c Var 'aux962' direct represents '0' with '14063'
c Var 'aux962' order represents '1' with '14064'
-14063 14064 0
c Var 'aux962' direct represents '1' with '14065'
14063 -14064 14065 0
-14065 14064 0
-14065 -14063 0
c Var 'aux962' direct represents '2' with '-14064'
14063 14065 -14064 0
c Encoding variable: aux963 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00005_00001=5)))
c Both direct and order encoding.
c Var 'aux963' order represents '0' with '14066'
c Var 'aux963' direct represents '0' with '14066'
c Var 'aux963' order represents '1' with '14067'
-14066 14067 0
c Var 'aux963' direct represents '1' with '14068'
14066 -14067 14068 0
-14068 14067 0
-14068 -14066 0
c Var 'aux963' direct represents '2' with '-14067'
14066 14068 -14067 0
c Encoding variable: aux964 with domain: int(0..3) (representing constraint ((field_00002_00001=5) + aux963))
c Both direct and order encoding.
c Var 'aux964' order represents '0' with '14069'
c Var 'aux964' direct represents '0' with '14069'
c Var 'aux964' order represents '1' with '14070'
-14069 14070 0
c Var 'aux964' direct represents '1' with '14071'
14069 -14070 14071 0
-14071 14070 0
-14071 -14069 0
c Var 'aux964' order represents '2' with '14072'
-14070 14072 0
c Var 'aux964' direct represents '2' with '14073'
14070 -14072 14073 0
-14073 14072 0
-14073 -14070 0
c Var 'aux964' direct represents '3' with '-14072'
14069 14071 14073 -14072 0
c Encoding variable: aux965 with domain: int(0..4) (representing constraint (aux960 + aux962))
c Both direct and order encoding.
c Var 'aux965' order represents '0' with '14074'
c Var 'aux965' direct represents '0' with '14074'
c Var 'aux965' order represents '1' with '14075'
-14074 14075 0
c Var 'aux965' direct represents '1' with '14076'
14074 -14075 14076 0
-14076 14075 0
-14076 -14074 0
c Var 'aux965' order represents '2' with '14077'
-14075 14077 0
c Var 'aux965' direct represents '2' with '14078'
14075 -14077 14078 0
-14078 14077 0
-14078 -14075 0
c Var 'aux965' order represents '3' with '14079'
-14077 14079 0
c Var 'aux965' direct represents '3' with '14080'
14077 -14079 14080 0
-14080 14079 0
-14080 -14077 0
c Var 'aux965' direct represents '4' with '-14079'
14074 14076 14078 14080 -14079 0
c Encoding variable: aux966 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00006_00001=6)))
c Both direct and order encoding.
c Var 'aux966' order represents '0' with '14081'
c Var 'aux966' direct represents '0' with '14081'
c Var 'aux966' order represents '1' with '14082'
-14081 14082 0
c Var 'aux966' direct represents '1' with '14083'
14081 -14082 14083 0
-14083 14082 0
-14083 -14081 0
c Var 'aux966' direct represents '2' with '-14082'
14081 14083 -14082 0
c Encoding variable: aux967 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00009_00001=6)))
c Both direct and order encoding.
c Var 'aux967' order represents '0' with '14084'
c Var 'aux967' direct represents '0' with '14084'
c Var 'aux967' order represents '1' with '14085'
-14084 14085 0
c Var 'aux967' direct represents '1' with '14086'
14084 -14085 14086 0
-14086 14085 0
-14086 -14084 0
c Var 'aux967' direct represents '2' with '-14085'
14084 14086 -14085 0
c Encoding variable: aux968 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00007_00001=6)))
c Both direct and order encoding.
c Var 'aux968' order represents '0' with '14087'
c Var 'aux968' direct represents '0' with '14087'
c Var 'aux968' order represents '1' with '14088'
-14087 14088 0
c Var 'aux968' direct represents '1' with '14089'
14087 -14088 14089 0
-14089 14088 0
-14089 -14087 0
c Var 'aux968' direct represents '2' with '-14088'
14087 14089 -14088 0
c Encoding variable: aux969 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00005_00001=6)))
c Both direct and order encoding.
c Var 'aux969' order represents '0' with '14090'
c Var 'aux969' direct represents '0' with '14090'
c Var 'aux969' order represents '1' with '14091'
-14090 14091 0
c Var 'aux969' direct represents '1' with '14092'
14090 -14091 14092 0
-14092 14091 0
-14092 -14090 0
c Var 'aux969' direct represents '2' with '-14091'
14090 14092 -14091 0
c Encoding variable: aux970 with domain: int(0..3) (representing constraint ((field_00002_00001=6) + aux969))
c Both direct and order encoding.
c Var 'aux970' order represents '0' with '14093'
c Var 'aux970' direct represents '0' with '14093'
c Var 'aux970' order represents '1' with '14094'
-14093 14094 0
c Var 'aux970' direct represents '1' with '14095'
14093 -14094 14095 0
-14095 14094 0
-14095 -14093 0
c Var 'aux970' order represents '2' with '14096'
-14094 14096 0
c Var 'aux970' direct represents '2' with '14097'
14094 -14096 14097 0
-14097 14096 0
-14097 -14094 0
c Var 'aux970' direct represents '3' with '-14096'
14093 14095 14097 -14096 0
c Encoding variable: aux971 with domain: int(0..4) (representing constraint (aux966 + aux968))
c Both direct and order encoding.
c Var 'aux971' order represents '0' with '14098'
c Var 'aux971' direct represents '0' with '14098'
c Var 'aux971' order represents '1' with '14099'
-14098 14099 0
c Var 'aux971' direct represents '1' with '14100'
14098 -14099 14100 0
-14100 14099 0
-14100 -14098 0
c Var 'aux971' order represents '2' with '14101'
-14099 14101 0
c Var 'aux971' direct represents '2' with '14102'
14099 -14101 14102 0
-14102 14101 0
-14102 -14099 0
c Var 'aux971' order represents '3' with '14103'
-14101 14103 0
c Var 'aux971' direct represents '3' with '14104'
14101 -14103 14104 0
-14104 14103 0
-14104 -14101 0
c Var 'aux971' direct represents '4' with '-14103'
14098 14100 14102 14104 -14103 0
c Encoding variable: aux972 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00006_00001=7)))
c Both direct and order encoding.
c Var 'aux972' order represents '0' with '14105'
c Var 'aux972' direct represents '0' with '14105'
c Var 'aux972' order represents '1' with '14106'
-14105 14106 0
c Var 'aux972' direct represents '1' with '14107'
14105 -14106 14107 0
-14107 14106 0
-14107 -14105 0
c Var 'aux972' direct represents '2' with '-14106'
14105 14107 -14106 0
c Encoding variable: aux973 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00009_00001=7)))
c Both direct and order encoding.
c Var 'aux973' order represents '0' with '14108'
c Var 'aux973' direct represents '0' with '14108'
c Var 'aux973' order represents '1' with '14109'
-14108 14109 0
c Var 'aux973' direct represents '1' with '14110'
14108 -14109 14110 0
-14110 14109 0
-14110 -14108 0
c Var 'aux973' direct represents '2' with '-14109'
14108 14110 -14109 0
c Encoding variable: aux974 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00007_00001=7)))
c Both direct and order encoding.
c Var 'aux974' order represents '0' with '14111'
c Var 'aux974' direct represents '0' with '14111'
c Var 'aux974' order represents '1' with '14112'
-14111 14112 0
c Var 'aux974' direct represents '1' with '14113'
14111 -14112 14113 0
-14113 14112 0
-14113 -14111 0
c Var 'aux974' direct represents '2' with '-14112'
14111 14113 -14112 0
c Encoding variable: aux975 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00005_00001=7)))
c Both direct and order encoding.
c Var 'aux975' order represents '0' with '14114'
c Var 'aux975' direct represents '0' with '14114'
c Var 'aux975' order represents '1' with '14115'
-14114 14115 0
c Var 'aux975' direct represents '1' with '14116'
14114 -14115 14116 0
-14116 14115 0
-14116 -14114 0
c Var 'aux975' direct represents '2' with '-14115'
14114 14116 -14115 0
c Encoding variable: aux976 with domain: int(0..3) (representing constraint ((field_00002_00001=7) + aux975))
c Both direct and order encoding.
c Var 'aux976' order represents '0' with '14117'
c Var 'aux976' direct represents '0' with '14117'
c Var 'aux976' order represents '1' with '14118'
-14117 14118 0
c Var 'aux976' direct represents '1' with '14119'
14117 -14118 14119 0
-14119 14118 0
-14119 -14117 0
c Var 'aux976' order represents '2' with '14120'
-14118 14120 0
c Var 'aux976' direct represents '2' with '14121'
14118 -14120 14121 0
-14121 14120 0
-14121 -14118 0
c Var 'aux976' direct represents '3' with '-14120'
14117 14119 14121 -14120 0
c Encoding variable: aux977 with domain: int(0..4) (representing constraint (aux972 + aux974))
c Both direct and order encoding.
c Var 'aux977' order represents '0' with '14122'
c Var 'aux977' direct represents '0' with '14122'
c Var 'aux977' order represents '1' with '14123'
-14122 14123 0
c Var 'aux977' direct represents '1' with '14124'
14122 -14123 14124 0
-14124 14123 0
-14124 -14122 0
c Var 'aux977' order represents '2' with '14125'
-14123 14125 0
c Var 'aux977' direct represents '2' with '14126'
14123 -14125 14126 0
-14126 14125 0
-14126 -14123 0
c Var 'aux977' order represents '3' with '14127'
-14125 14127 0
c Var 'aux977' direct represents '3' with '14128'
14125 -14127 14128 0
-14128 14127 0
-14128 -14125 0
c Var 'aux977' direct represents '4' with '-14127'
14122 14124 14126 14128 -14127 0
c Encoding variable: aux978 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00006_00001=8)))
c Both direct and order encoding.
c Var 'aux978' order represents '0' with '14129'
c Var 'aux978' direct represents '0' with '14129'
c Var 'aux978' order represents '1' with '14130'
-14129 14130 0
c Var 'aux978' direct represents '1' with '14131'
14129 -14130 14131 0
-14131 14130 0
-14131 -14129 0
c Var 'aux978' direct represents '2' with '-14130'
14129 14131 -14130 0
c Encoding variable: aux979 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00009_00001=8)))
c Both direct and order encoding.
c Var 'aux979' order represents '0' with '14132'
c Var 'aux979' direct represents '0' with '14132'
c Var 'aux979' order represents '1' with '14133'
-14132 14133 0
c Var 'aux979' direct represents '1' with '14134'
14132 -14133 14134 0
-14134 14133 0
-14134 -14132 0
c Var 'aux979' direct represents '2' with '-14133'
14132 14134 -14133 0
c Encoding variable: aux980 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00007_00001=8)))
c Both direct and order encoding.
c Var 'aux980' order represents '0' with '14135'
c Var 'aux980' direct represents '0' with '14135'
c Var 'aux980' order represents '1' with '14136'
-14135 14136 0
c Var 'aux980' direct represents '1' with '14137'
14135 -14136 14137 0
-14137 14136 0
-14137 -14135 0
c Var 'aux980' direct represents '2' with '-14136'
14135 14137 -14136 0
c Encoding variable: aux981 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00005_00001=8)))
c Both direct and order encoding.
c Var 'aux981' order represents '0' with '14138'
c Var 'aux981' direct represents '0' with '14138'
c Var 'aux981' order represents '1' with '14139'
-14138 14139 0
c Var 'aux981' direct represents '1' with '14140'
14138 -14139 14140 0
-14140 14139 0
-14140 -14138 0
c Var 'aux981' direct represents '2' with '-14139'
14138 14140 -14139 0
c Encoding variable: aux982 with domain: int(0..3) (representing constraint ((field_00002_00001=8) + aux981))
c Both direct and order encoding.
c Var 'aux982' order represents '0' with '14141'
c Var 'aux982' direct represents '0' with '14141'
c Var 'aux982' order represents '1' with '14142'
-14141 14142 0
c Var 'aux982' direct represents '1' with '14143'
14141 -14142 14143 0
-14143 14142 0
-14143 -14141 0
c Var 'aux982' order represents '2' with '14144'
-14142 14144 0
c Var 'aux982' direct represents '2' with '14145'
14142 -14144 14145 0
-14145 14144 0
-14145 -14142 0
c Var 'aux982' direct represents '3' with '-14144'
14141 14143 14145 -14144 0
c Encoding variable: aux983 with domain: int(0..4) (representing constraint (aux978 + aux980))
c Both direct and order encoding.
c Var 'aux983' order represents '0' with '14146'
c Var 'aux983' direct represents '0' with '14146'
c Var 'aux983' order represents '1' with '14147'
-14146 14147 0
c Var 'aux983' direct represents '1' with '14148'
14146 -14147 14148 0
-14148 14147 0
-14148 -14146 0
c Var 'aux983' order represents '2' with '14149'
-14147 14149 0
c Var 'aux983' direct represents '2' with '14150'
14147 -14149 14150 0
-14150 14149 0
-14150 -14147 0
c Var 'aux983' order represents '3' with '14151'
-14149 14151 0
c Var 'aux983' direct represents '3' with '14152'
14149 -14151 14152 0
-14152 14151 0
-14152 -14149 0
c Var 'aux983' direct represents '4' with '-14151'
14146 14148 14150 14152 -14151 0
c Encoding variable: aux984 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00006_00001=9)))
c Both direct and order encoding.
c Var 'aux984' order represents '0' with '14153'
c Var 'aux984' direct represents '0' with '14153'
c Var 'aux984' order represents '1' with '14154'
-14153 14154 0
c Var 'aux984' direct represents '1' with '14155'
14153 -14154 14155 0
-14155 14154 0
-14155 -14153 0
c Var 'aux984' direct represents '2' with '-14154'
14153 14155 -14154 0
c Encoding variable: aux985 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00009_00001=9)))
c Both direct and order encoding.
c Var 'aux985' order represents '0' with '14156'
c Var 'aux985' direct represents '0' with '14156'
c Var 'aux985' order represents '1' with '14157'
-14156 14157 0
c Var 'aux985' direct represents '1' with '14158'
14156 -14157 14158 0
-14158 14157 0
-14158 -14156 0
c Var 'aux985' direct represents '2' with '-14157'
14156 14158 -14157 0
c Encoding variable: aux986 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00007_00001=9)))
c Both direct and order encoding.
c Var 'aux986' order represents '0' with '14159'
c Var 'aux986' direct represents '0' with '14159'
c Var 'aux986' order represents '1' with '14160'
-14159 14160 0
c Var 'aux986' direct represents '1' with '14161'
14159 -14160 14161 0
-14161 14160 0
-14161 -14159 0
c Var 'aux986' direct represents '2' with '-14160'
14159 14161 -14160 0
c Encoding variable: aux987 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00005_00001=9)))
c Both direct and order encoding.
c Var 'aux987' order represents '0' with '14162'
c Var 'aux987' direct represents '0' with '14162'
c Var 'aux987' order represents '1' with '14163'
-14162 14163 0
c Var 'aux987' direct represents '1' with '14164'
14162 -14163 14164 0
-14164 14163 0
-14164 -14162 0
c Var 'aux987' direct represents '2' with '-14163'
14162 14164 -14163 0
c Encoding variable: aux988 with domain: int(0..3) (representing constraint ((field_00002_00001=9) + aux987))
c Both direct and order encoding.
c Var 'aux988' order represents '0' with '14165'
c Var 'aux988' direct represents '0' with '14165'
c Var 'aux988' order represents '1' with '14166'
-14165 14166 0
c Var 'aux988' direct represents '1' with '14167'
14165 -14166 14167 0
-14167 14166 0
-14167 -14165 0
c Var 'aux988' order represents '2' with '14168'
-14166 14168 0
c Var 'aux988' direct represents '2' with '14169'
14166 -14168 14169 0
-14169 14168 0
-14169 -14166 0
c Var 'aux988' direct represents '3' with '-14168'
14165 14167 14169 -14168 0
c Encoding variable: aux989 with domain: int(0..4) (representing constraint (aux984 + aux986))
c Both direct and order encoding.
c Var 'aux989' order represents '0' with '14170'
c Var 'aux989' direct represents '0' with '14170'
c Var 'aux989' order represents '1' with '14171'
-14170 14171 0
c Var 'aux989' direct represents '1' with '14172'
14170 -14171 14172 0
-14172 14171 0
-14172 -14170 0
c Var 'aux989' order represents '2' with '14173'
-14171 14173 0
c Var 'aux989' direct represents '2' with '14174'
14171 -14173 14174 0
-14174 14173 0
-14174 -14171 0
c Var 'aux989' order represents '3' with '14175'
-14173 14175 0
c Var 'aux989' direct represents '3' with '14176'
14173 -14175 14176 0
-14176 14175 0
-14176 -14173 0
c Var 'aux989' direct represents '4' with '-14175'
14170 14172 14174 14176 -14175 0
c Encoding variable: aux990 with domain: int(0..2) (representing constraint ((field_00004_00002=1) + (field_00006_00002=1)))
c Both direct and order encoding.
c Var 'aux990' order represents '0' with '14177'
c Var 'aux990' direct represents '0' with '14177'
c Var 'aux990' order represents '1' with '14178'
-14177 14178 0
c Var 'aux990' direct represents '1' with '14179'
14177 -14178 14179 0
-14179 14178 0
-14179 -14177 0
c Var 'aux990' direct represents '2' with '-14178'
14177 14179 -14178 0
c Encoding variable: aux991 with domain: int(0..2) (representing constraint ((field_00001_00002=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux991' order represents '0' with '14180'
c Var 'aux991' direct represents '0' with '14180'
c Var 'aux991' order represents '1' with '14181'
-14180 14181 0
c Var 'aux991' direct represents '1' with '14182'
14180 -14181 14182 0
-14182 14181 0
-14182 -14180 0
c Var 'aux991' direct represents '2' with '-14181'
14180 14182 -14181 0
c Encoding variable: aux992 with domain: int(0..2) (representing constraint ((field_00008_00002=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux992' order represents '0' with '14183'
c Var 'aux992' direct represents '0' with '14183'
c Var 'aux992' order represents '1' with '14184'
-14183 14184 0
c Var 'aux992' direct represents '1' with '14185'
14183 -14184 14185 0
-14185 14184 0
-14185 -14183 0
c Var 'aux992' direct represents '2' with '-14184'
14183 14185 -14184 0
c Encoding variable: aux993 with domain: int(0..2) (representing constraint ((field_00003_00002=1) + (field_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux993' order represents '0' with '14186'
c Var 'aux993' direct represents '0' with '14186'
c Var 'aux993' order represents '1' with '14187'
-14186 14187 0
c Var 'aux993' direct represents '1' with '14188'
14186 -14187 14188 0
-14188 14187 0
-14188 -14186 0
c Var 'aux993' direct represents '2' with '-14187'
14186 14188 -14187 0
c Encoding variable: aux994 with domain: int(0..3) (representing constraint ((field_00002_00002=1) + aux993))
c Both direct and order encoding.
c Var 'aux994' order represents '0' with '14189'
c Var 'aux994' direct represents '0' with '14189'
c Var 'aux994' order represents '1' with '14190'
-14189 14190 0
c Var 'aux994' direct represents '1' with '14191'
14189 -14190 14191 0
-14191 14190 0
-14191 -14189 0
c Var 'aux994' order represents '2' with '14192'
-14190 14192 0
c Var 'aux994' direct represents '2' with '14193'
14190 -14192 14193 0
-14193 14192 0
-14193 -14190 0
c Var 'aux994' direct represents '3' with '-14192'
14189 14191 14193 -14192 0
c Encoding variable: aux995 with domain: int(0..4) (representing constraint (aux990 + aux992))
c Both direct and order encoding.
c Var 'aux995' order represents '0' with '14194'
c Var 'aux995' direct represents '0' with '14194'
c Var 'aux995' order represents '1' with '14195'
-14194 14195 0
c Var 'aux995' direct represents '1' with '14196'
14194 -14195 14196 0
-14196 14195 0
-14196 -14194 0
c Var 'aux995' order represents '2' with '14197'
-14195 14197 0
c Var 'aux995' direct represents '2' with '14198'
14195 -14197 14198 0
-14198 14197 0
-14198 -14195 0
c Var 'aux995' order represents '3' with '14199'
-14197 14199 0
c Var 'aux995' direct represents '3' with '14200'
14197 -14199 14200 0
-14200 14199 0
-14200 -14197 0
c Var 'aux995' direct represents '4' with '-14199'
14194 14196 14198 14200 -14199 0
c Encoding variable: aux996 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00006_00002=2)))
c Both direct and order encoding.
c Var 'aux996' order represents '0' with '14201'
c Var 'aux996' direct represents '0' with '14201'
c Var 'aux996' order represents '1' with '14202'
-14201 14202 0
c Var 'aux996' direct represents '1' with '14203'
14201 -14202 14203 0
-14203 14202 0
-14203 -14201 0
c Var 'aux996' direct represents '2' with '-14202'
14201 14203 -14202 0
c Encoding variable: aux997 with domain: int(0..2) (representing constraint ((field_00001_00002=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux997' order represents '0' with '14204'
c Var 'aux997' direct represents '0' with '14204'
c Var 'aux997' order represents '1' with '14205'
-14204 14205 0
c Var 'aux997' direct represents '1' with '14206'
14204 -14205 14206 0
-14206 14205 0
-14206 -14204 0
c Var 'aux997' direct represents '2' with '-14205'
14204 14206 -14205 0
c Encoding variable: aux998 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux998' order represents '0' with '14207'
c Var 'aux998' direct represents '0' with '14207'
c Var 'aux998' order represents '1' with '14208'
-14207 14208 0
c Var 'aux998' direct represents '1' with '14209'
14207 -14208 14209 0
-14209 14208 0
-14209 -14207 0
c Var 'aux998' direct represents '2' with '-14208'
14207 14209 -14208 0
c Encoding variable: aux999 with domain: int(0..2) (representing constraint ((field_00003_00002=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux999' order represents '0' with '14210'
c Var 'aux999' direct represents '0' with '14210'
c Var 'aux999' order represents '1' with '14211'
-14210 14211 0
c Var 'aux999' direct represents '1' with '14212'
14210 -14211 14212 0
-14212 14211 0
-14212 -14210 0
c Var 'aux999' direct represents '2' with '-14211'
14210 14212 -14211 0
c Encoding variable: aux1000 with domain: int(0..3) (representing constraint ((field_00002_00002=2) + aux999))
c Both direct and order encoding.
c Var 'aux1000' order represents '0' with '14213'
c Var 'aux1000' direct represents '0' with '14213'
c Var 'aux1000' order represents '1' with '14214'
-14213 14214 0
c Var 'aux1000' direct represents '1' with '14215'
14213 -14214 14215 0
-14215 14214 0
-14215 -14213 0
c Var 'aux1000' order represents '2' with '14216'
-14214 14216 0
c Var 'aux1000' direct represents '2' with '14217'
14214 -14216 14217 0
-14217 14216 0
-14217 -14214 0
c Var 'aux1000' direct represents '3' with '-14216'
14213 14215 14217 -14216 0
c Encoding variable: aux1001 with domain: int(0..4) (representing constraint (aux996 + aux998))
c Both direct and order encoding.
c Var 'aux1001' order represents '0' with '14218'
c Var 'aux1001' direct represents '0' with '14218'
c Var 'aux1001' order represents '1' with '14219'
-14218 14219 0
c Var 'aux1001' direct represents '1' with '14220'
14218 -14219 14220 0
-14220 14219 0
-14220 -14218 0
c Var 'aux1001' order represents '2' with '14221'
-14219 14221 0
c Var 'aux1001' direct represents '2' with '14222'
14219 -14221 14222 0
-14222 14221 0
-14222 -14219 0
c Var 'aux1001' order represents '3' with '14223'
-14221 14223 0
c Var 'aux1001' direct represents '3' with '14224'
14221 -14223 14224 0
-14224 14223 0
-14224 -14221 0
c Var 'aux1001' direct represents '4' with '-14223'
14218 14220 14222 14224 -14223 0
c Encoding variable: aux1002 with domain: int(0..2) (representing constraint ((field_00004_00002=3) + (field_00006_00002=3)))
c Both direct and order encoding.
c Var 'aux1002' order represents '0' with '14225'
c Var 'aux1002' direct represents '0' with '14225'
c Var 'aux1002' order represents '1' with '14226'
-14225 14226 0
c Var 'aux1002' direct represents '1' with '14227'
14225 -14226 14227 0
-14227 14226 0
-14227 -14225 0
c Var 'aux1002' direct represents '2' with '-14226'
14225 14227 -14226 0
c Encoding variable: aux1003 with domain: int(0..2) (representing constraint ((field_00001_00002=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux1003' order represents '0' with '14228'
c Var 'aux1003' direct represents '0' with '14228'
c Var 'aux1003' order represents '1' with '14229'
-14228 14229 0
c Var 'aux1003' direct represents '1' with '14230'
14228 -14229 14230 0
-14230 14229 0
-14230 -14228 0
c Var 'aux1003' direct represents '2' with '-14229'
14228 14230 -14229 0
c Encoding variable: aux1004 with domain: int(0..2) (representing constraint ((field_00008_00002=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux1004' order represents '0' with '14231'
c Var 'aux1004' direct represents '0' with '14231'
c Var 'aux1004' order represents '1' with '14232'
-14231 14232 0
c Var 'aux1004' direct represents '1' with '14233'
14231 -14232 14233 0
-14233 14232 0
-14233 -14231 0
c Var 'aux1004' direct represents '2' with '-14232'
14231 14233 -14232 0
c Encoding variable: aux1005 with domain: int(0..2) (representing constraint ((field_00003_00002=3) + (field_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux1005' order represents '0' with '14234'
c Var 'aux1005' direct represents '0' with '14234'
c Var 'aux1005' order represents '1' with '14235'
-14234 14235 0
c Var 'aux1005' direct represents '1' with '14236'
14234 -14235 14236 0
-14236 14235 0
-14236 -14234 0
c Var 'aux1005' direct represents '2' with '-14235'
14234 14236 -14235 0
c Encoding variable: aux1006 with domain: int(0..3) (representing constraint ((field_00002_00002=3) + aux1005))
c Both direct and order encoding.
c Var 'aux1006' order represents '0' with '14237'
c Var 'aux1006' direct represents '0' with '14237'
c Var 'aux1006' order represents '1' with '14238'
-14237 14238 0
c Var 'aux1006' direct represents '1' with '14239'
14237 -14238 14239 0
-14239 14238 0
-14239 -14237 0
c Var 'aux1006' order represents '2' with '14240'
-14238 14240 0
c Var 'aux1006' direct represents '2' with '14241'
14238 -14240 14241 0
-14241 14240 0
-14241 -14238 0
c Var 'aux1006' direct represents '3' with '-14240'
14237 14239 14241 -14240 0
c Encoding variable: aux1007 with domain: int(0..4) (representing constraint (aux1002 + aux1004))
c Both direct and order encoding.
c Var 'aux1007' order represents '0' with '14242'
c Var 'aux1007' direct represents '0' with '14242'
c Var 'aux1007' order represents '1' with '14243'
-14242 14243 0
c Var 'aux1007' direct represents '1' with '14244'
14242 -14243 14244 0
-14244 14243 0
-14244 -14242 0
c Var 'aux1007' order represents '2' with '14245'
-14243 14245 0
c Var 'aux1007' direct represents '2' with '14246'
14243 -14245 14246 0
-14246 14245 0
-14246 -14243 0
c Var 'aux1007' order represents '3' with '14247'
-14245 14247 0
c Var 'aux1007' direct represents '3' with '14248'
14245 -14247 14248 0
-14248 14247 0
-14248 -14245 0
c Var 'aux1007' direct represents '4' with '-14247'
14242 14244 14246 14248 -14247 0
c Encoding variable: aux1008 with domain: int(0..2) (representing constraint ((field_00004_00002=4) + (field_00006_00002=4)))
c Both direct and order encoding.
c Var 'aux1008' order represents '0' with '14249'
c Var 'aux1008' direct represents '0' with '14249'
c Var 'aux1008' order represents '1' with '14250'
-14249 14250 0
c Var 'aux1008' direct represents '1' with '14251'
14249 -14250 14251 0
-14251 14250 0
-14251 -14249 0
c Var 'aux1008' direct represents '2' with '-14250'
14249 14251 -14250 0
c Encoding variable: aux1009 with domain: int(0..2) (representing constraint ((field_00001_00002=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux1009' order represents '0' with '14252'
c Var 'aux1009' direct represents '0' with '14252'
c Var 'aux1009' order represents '1' with '14253'
-14252 14253 0
c Var 'aux1009' direct represents '1' with '14254'
14252 -14253 14254 0
-14254 14253 0
-14254 -14252 0
c Var 'aux1009' direct represents '2' with '-14253'
14252 14254 -14253 0
c Encoding variable: aux1010 with domain: int(0..2) (representing constraint ((field_00008_00002=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux1010' order represents '0' with '14255'
c Var 'aux1010' direct represents '0' with '14255'
c Var 'aux1010' order represents '1' with '14256'
-14255 14256 0
c Var 'aux1010' direct represents '1' with '14257'
14255 -14256 14257 0
-14257 14256 0
-14257 -14255 0
c Var 'aux1010' direct represents '2' with '-14256'
14255 14257 -14256 0
c Encoding variable: aux1011 with domain: int(0..2) (representing constraint ((field_00003_00002=4) + (field_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux1011' order represents '0' with '14258'
c Var 'aux1011' direct represents '0' with '14258'
c Var 'aux1011' order represents '1' with '14259'
-14258 14259 0
c Var 'aux1011' direct represents '1' with '14260'
14258 -14259 14260 0
-14260 14259 0
-14260 -14258 0
c Var 'aux1011' direct represents '2' with '-14259'
14258 14260 -14259 0
c Encoding variable: aux1012 with domain: int(0..3) (representing constraint ((field_00002_00002=4) + aux1011))
c Both direct and order encoding.
c Var 'aux1012' order represents '0' with '14261'
c Var 'aux1012' direct represents '0' with '14261'
c Var 'aux1012' order represents '1' with '14262'
-14261 14262 0
c Var 'aux1012' direct represents '1' with '14263'
14261 -14262 14263 0
-14263 14262 0
-14263 -14261 0
c Var 'aux1012' order represents '2' with '14264'
-14262 14264 0
c Var 'aux1012' direct represents '2' with '14265'
14262 -14264 14265 0
-14265 14264 0
-14265 -14262 0
c Var 'aux1012' direct represents '3' with '-14264'
14261 14263 14265 -14264 0
c Encoding variable: aux1013 with domain: int(0..4) (representing constraint (aux1008 + aux1010))
c Both direct and order encoding.
c Var 'aux1013' order represents '0' with '14266'
c Var 'aux1013' direct represents '0' with '14266'
c Var 'aux1013' order represents '1' with '14267'
-14266 14267 0
c Var 'aux1013' direct represents '1' with '14268'
14266 -14267 14268 0
-14268 14267 0
-14268 -14266 0
c Var 'aux1013' order represents '2' with '14269'
-14267 14269 0
c Var 'aux1013' direct represents '2' with '14270'
14267 -14269 14270 0
-14270 14269 0
-14270 -14267 0
c Var 'aux1013' order represents '3' with '14271'
-14269 14271 0
c Var 'aux1013' direct represents '3' with '14272'
14269 -14271 14272 0
-14272 14271 0
-14272 -14269 0
c Var 'aux1013' direct represents '4' with '-14271'
14266 14268 14270 14272 -14271 0
c Encoding variable: aux1014 with domain: int(0..2) (representing constraint ((field_00004_00002=5) + (field_00006_00002=5)))
c Both direct and order encoding.
c Var 'aux1014' order represents '0' with '14273'
c Var 'aux1014' direct represents '0' with '14273'
c Var 'aux1014' order represents '1' with '14274'
-14273 14274 0
c Var 'aux1014' direct represents '1' with '14275'
14273 -14274 14275 0
-14275 14274 0
-14275 -14273 0
c Var 'aux1014' direct represents '2' with '-14274'
14273 14275 -14274 0
c Encoding variable: aux1015 with domain: int(0..2) (representing constraint ((field_00001_00002=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux1015' order represents '0' with '14276'
c Var 'aux1015' direct represents '0' with '14276'
c Var 'aux1015' order represents '1' with '14277'
-14276 14277 0
c Var 'aux1015' direct represents '1' with '14278'
14276 -14277 14278 0
-14278 14277 0
-14278 -14276 0
c Var 'aux1015' direct represents '2' with '-14277'
14276 14278 -14277 0
c Encoding variable: aux1016 with domain: int(0..2) (representing constraint ((field_00008_00002=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux1016' order represents '0' with '14279'
c Var 'aux1016' direct represents '0' with '14279'
c Var 'aux1016' order represents '1' with '14280'
-14279 14280 0
c Var 'aux1016' direct represents '1' with '14281'
14279 -14280 14281 0
-14281 14280 0
-14281 -14279 0
c Var 'aux1016' direct represents '2' with '-14280'
14279 14281 -14280 0
c Encoding variable: aux1017 with domain: int(0..2) (representing constraint ((field_00003_00002=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux1017' order represents '0' with '14282'
c Var 'aux1017' direct represents '0' with '14282'
c Var 'aux1017' order represents '1' with '14283'
-14282 14283 0
c Var 'aux1017' direct represents '1' with '14284'
14282 -14283 14284 0
-14284 14283 0
-14284 -14282 0
c Var 'aux1017' direct represents '2' with '-14283'
14282 14284 -14283 0
c Encoding variable: aux1018 with domain: int(0..3) (representing constraint ((field_00002_00002=5) + aux1017))
c Both direct and order encoding.
c Var 'aux1018' order represents '0' with '14285'
c Var 'aux1018' direct represents '0' with '14285'
c Var 'aux1018' order represents '1' with '14286'
-14285 14286 0
c Var 'aux1018' direct represents '1' with '14287'
14285 -14286 14287 0
-14287 14286 0
-14287 -14285 0
c Var 'aux1018' order represents '2' with '14288'
-14286 14288 0
c Var 'aux1018' direct represents '2' with '14289'
14286 -14288 14289 0
-14289 14288 0
-14289 -14286 0
c Var 'aux1018' direct represents '3' with '-14288'
14285 14287 14289 -14288 0
c Encoding variable: aux1019 with domain: int(0..4) (representing constraint (aux1014 + aux1016))
c Both direct and order encoding.
c Var 'aux1019' order represents '0' with '14290'
c Var 'aux1019' direct represents '0' with '14290'
c Var 'aux1019' order represents '1' with '14291'
-14290 14291 0
c Var 'aux1019' direct represents '1' with '14292'
14290 -14291 14292 0
-14292 14291 0
-14292 -14290 0
c Var 'aux1019' order represents '2' with '14293'
-14291 14293 0
c Var 'aux1019' direct represents '2' with '14294'
14291 -14293 14294 0
-14294 14293 0
-14294 -14291 0
c Var 'aux1019' order represents '3' with '14295'
-14293 14295 0
c Var 'aux1019' direct represents '3' with '14296'
14293 -14295 14296 0
-14296 14295 0
-14296 -14293 0
c Var 'aux1019' direct represents '4' with '-14295'
14290 14292 14294 14296 -14295 0
c Encoding variable: aux1020 with domain: int(0..2) (representing constraint ((field_00004_00002=6) + (field_00006_00002=6)))
c Both direct and order encoding.
c Var 'aux1020' order represents '0' with '14297'
c Var 'aux1020' direct represents '0' with '14297'
c Var 'aux1020' order represents '1' with '14298'
-14297 14298 0
c Var 'aux1020' direct represents '1' with '14299'
14297 -14298 14299 0
-14299 14298 0
-14299 -14297 0
c Var 'aux1020' direct represents '2' with '-14298'
14297 14299 -14298 0
c Encoding variable: aux1021 with domain: int(0..2) (representing constraint ((field_00001_00002=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux1021' order represents '0' with '14300'
c Var 'aux1021' direct represents '0' with '14300'
c Var 'aux1021' order represents '1' with '14301'
-14300 14301 0
c Var 'aux1021' direct represents '1' with '14302'
14300 -14301 14302 0
-14302 14301 0
-14302 -14300 0
c Var 'aux1021' direct represents '2' with '-14301'
14300 14302 -14301 0
c Encoding variable: aux1022 with domain: int(0..2) (representing constraint ((field_00008_00002=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux1022' order represents '0' with '14303'
c Var 'aux1022' direct represents '0' with '14303'
c Var 'aux1022' order represents '1' with '14304'
-14303 14304 0
c Var 'aux1022' direct represents '1' with '14305'
14303 -14304 14305 0
-14305 14304 0
-14305 -14303 0
c Var 'aux1022' direct represents '2' with '-14304'
14303 14305 -14304 0
c Encoding variable: aux1023 with domain: int(0..2) (representing constraint ((field_00003_00002=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux1023' order represents '0' with '14306'
c Var 'aux1023' direct represents '0' with '14306'
c Var 'aux1023' order represents '1' with '14307'
-14306 14307 0
c Var 'aux1023' direct represents '1' with '14308'
14306 -14307 14308 0
-14308 14307 0
-14308 -14306 0
c Var 'aux1023' direct represents '2' with '-14307'
14306 14308 -14307 0
c Encoding variable: aux1024 with domain: int(0..3) (representing constraint ((field_00002_00002=6) + aux1023))
c Both direct and order encoding.
c Var 'aux1024' order represents '0' with '14309'
c Var 'aux1024' direct represents '0' with '14309'
c Var 'aux1024' order represents '1' with '14310'
-14309 14310 0
c Var 'aux1024' direct represents '1' with '14311'
14309 -14310 14311 0
-14311 14310 0
-14311 -14309 0
c Var 'aux1024' order represents '2' with '14312'
-14310 14312 0
c Var 'aux1024' direct represents '2' with '14313'
14310 -14312 14313 0
-14313 14312 0
-14313 -14310 0
c Var 'aux1024' direct represents '3' with '-14312'
14309 14311 14313 -14312 0
c Encoding variable: aux1025 with domain: int(0..4) (representing constraint (aux1020 + aux1022))
c Both direct and order encoding.
c Var 'aux1025' order represents '0' with '14314'
c Var 'aux1025' direct represents '0' with '14314'
c Var 'aux1025' order represents '1' with '14315'
-14314 14315 0
c Var 'aux1025' direct represents '1' with '14316'
14314 -14315 14316 0
-14316 14315 0
-14316 -14314 0
c Var 'aux1025' order represents '2' with '14317'
-14315 14317 0
c Var 'aux1025' direct represents '2' with '14318'
14315 -14317 14318 0
-14318 14317 0
-14318 -14315 0
c Var 'aux1025' order represents '3' with '14319'
-14317 14319 0
c Var 'aux1025' direct represents '3' with '14320'
14317 -14319 14320 0
-14320 14319 0
-14320 -14317 0
c Var 'aux1025' direct represents '4' with '-14319'
14314 14316 14318 14320 -14319 0
c Encoding variable: aux1026 with domain: int(0..2) (representing constraint ((field_00004_00002=7) + (field_00006_00002=7)))
c Both direct and order encoding.
c Var 'aux1026' order represents '0' with '14321'
c Var 'aux1026' direct represents '0' with '14321'
c Var 'aux1026' order represents '1' with '14322'
-14321 14322 0
c Var 'aux1026' direct represents '1' with '14323'
14321 -14322 14323 0
-14323 14322 0
-14323 -14321 0
c Var 'aux1026' direct represents '2' with '-14322'
14321 14323 -14322 0
c Encoding variable: aux1027 with domain: int(0..2) (representing constraint ((field_00001_00002=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux1027' order represents '0' with '14324'
c Var 'aux1027' direct represents '0' with '14324'
c Var 'aux1027' order represents '1' with '14325'
-14324 14325 0
c Var 'aux1027' direct represents '1' with '14326'
14324 -14325 14326 0
-14326 14325 0
-14326 -14324 0
c Var 'aux1027' direct represents '2' with '-14325'
14324 14326 -14325 0
c Encoding variable: aux1028 with domain: int(0..2) (representing constraint ((field_00008_00002=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux1028' order represents '0' with '14327'
c Var 'aux1028' direct represents '0' with '14327'
c Var 'aux1028' order represents '1' with '14328'
-14327 14328 0
c Var 'aux1028' direct represents '1' with '14329'
14327 -14328 14329 0
-14329 14328 0
-14329 -14327 0
c Var 'aux1028' direct represents '2' with '-14328'
14327 14329 -14328 0
c Encoding variable: aux1029 with domain: int(0..2) (representing constraint ((field_00003_00002=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux1029' order represents '0' with '14330'
c Var 'aux1029' direct represents '0' with '14330'
c Var 'aux1029' order represents '1' with '14331'
-14330 14331 0
c Var 'aux1029' direct represents '1' with '14332'
14330 -14331 14332 0
-14332 14331 0
-14332 -14330 0
c Var 'aux1029' direct represents '2' with '-14331'
14330 14332 -14331 0
c Encoding variable: aux1030 with domain: int(0..3) (representing constraint ((field_00002_00002=7) + aux1029))
c Both direct and order encoding.
c Var 'aux1030' order represents '0' with '14333'
c Var 'aux1030' direct represents '0' with '14333'
c Var 'aux1030' order represents '1' with '14334'
-14333 14334 0
c Var 'aux1030' direct represents '1' with '14335'
14333 -14334 14335 0
-14335 14334 0
-14335 -14333 0
c Var 'aux1030' order represents '2' with '14336'
-14334 14336 0
c Var 'aux1030' direct represents '2' with '14337'
14334 -14336 14337 0
-14337 14336 0
-14337 -14334 0
c Var 'aux1030' direct represents '3' with '-14336'
14333 14335 14337 -14336 0
c Encoding variable: aux1031 with domain: int(0..4) (representing constraint (aux1026 + aux1028))
c Both direct and order encoding.
c Var 'aux1031' order represents '0' with '14338'
c Var 'aux1031' direct represents '0' with '14338'
c Var 'aux1031' order represents '1' with '14339'
-14338 14339 0
c Var 'aux1031' direct represents '1' with '14340'
14338 -14339 14340 0
-14340 14339 0
-14340 -14338 0
c Var 'aux1031' order represents '2' with '14341'
-14339 14341 0
c Var 'aux1031' direct represents '2' with '14342'
14339 -14341 14342 0
-14342 14341 0
-14342 -14339 0
c Var 'aux1031' order represents '3' with '14343'
-14341 14343 0
c Var 'aux1031' direct represents '3' with '14344'
14341 -14343 14344 0
-14344 14343 0
-14344 -14341 0
c Var 'aux1031' direct represents '4' with '-14343'
14338 14340 14342 14344 -14343 0
c Encoding variable: aux1032 with domain: int(0..2) (representing constraint ((field_00004_00002=8) + (field_00006_00002=8)))
c Both direct and order encoding.
c Var 'aux1032' order represents '0' with '14345'
c Var 'aux1032' direct represents '0' with '14345'
c Var 'aux1032' order represents '1' with '14346'
-14345 14346 0
c Var 'aux1032' direct represents '1' with '14347'
14345 -14346 14347 0
-14347 14346 0
-14347 -14345 0
c Var 'aux1032' direct represents '2' with '-14346'
14345 14347 -14346 0
c Encoding variable: aux1033 with domain: int(0..2) (representing constraint ((field_00001_00002=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux1033' order represents '0' with '14348'
c Var 'aux1033' direct represents '0' with '14348'
c Var 'aux1033' order represents '1' with '14349'
-14348 14349 0
c Var 'aux1033' direct represents '1' with '14350'
14348 -14349 14350 0
-14350 14349 0
-14350 -14348 0
c Var 'aux1033' direct represents '2' with '-14349'
14348 14350 -14349 0
c Encoding variable: aux1034 with domain: int(0..2) (representing constraint ((field_00008_00002=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux1034' order represents '0' with '14351'
c Var 'aux1034' direct represents '0' with '14351'
c Var 'aux1034' order represents '1' with '14352'
-14351 14352 0
c Var 'aux1034' direct represents '1' with '14353'
14351 -14352 14353 0
-14353 14352 0
-14353 -14351 0
c Var 'aux1034' direct represents '2' with '-14352'
14351 14353 -14352 0
c Encoding variable: aux1035 with domain: int(0..2) (representing constraint ((field_00003_00002=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux1035' order represents '0' with '14354'
c Var 'aux1035' direct represents '0' with '14354'
c Var 'aux1035' order represents '1' with '14355'
-14354 14355 0
c Var 'aux1035' direct represents '1' with '14356'
14354 -14355 14356 0
-14356 14355 0
-14356 -14354 0
c Var 'aux1035' direct represents '2' with '-14355'
14354 14356 -14355 0
c Encoding variable: aux1036 with domain: int(0..3) (representing constraint ((field_00002_00002=8) + aux1035))
c Both direct and order encoding.
c Var 'aux1036' order represents '0' with '14357'
c Var 'aux1036' direct represents '0' with '14357'
c Var 'aux1036' order represents '1' with '14358'
-14357 14358 0
c Var 'aux1036' direct represents '1' with '14359'
14357 -14358 14359 0
-14359 14358 0
-14359 -14357 0
c Var 'aux1036' order represents '2' with '14360'
-14358 14360 0
c Var 'aux1036' direct represents '2' with '14361'
14358 -14360 14361 0
-14361 14360 0
-14361 -14358 0
c Var 'aux1036' direct represents '3' with '-14360'
14357 14359 14361 -14360 0
c Encoding variable: aux1037 with domain: int(0..4) (representing constraint (aux1032 + aux1034))
c Both direct and order encoding.
c Var 'aux1037' order represents '0' with '14362'
c Var 'aux1037' direct represents '0' with '14362'
c Var 'aux1037' order represents '1' with '14363'
-14362 14363 0
c Var 'aux1037' direct represents '1' with '14364'
14362 -14363 14364 0
-14364 14363 0
-14364 -14362 0
c Var 'aux1037' order represents '2' with '14365'
-14363 14365 0
c Var 'aux1037' direct represents '2' with '14366'
14363 -14365 14366 0
-14366 14365 0
-14366 -14363 0
c Var 'aux1037' order represents '3' with '14367'
-14365 14367 0
c Var 'aux1037' direct represents '3' with '14368'
14365 -14367 14368 0
-14368 14367 0
-14368 -14365 0
c Var 'aux1037' direct represents '4' with '-14367'
14362 14364 14366 14368 -14367 0
c Encoding variable: aux1038 with domain: int(0..2) (representing constraint ((field_00004_00002=9) + (field_00006_00002=9)))
c Both direct and order encoding.
c Var 'aux1038' order represents '0' with '14369'
c Var 'aux1038' direct represents '0' with '14369'
c Var 'aux1038' order represents '1' with '14370'
-14369 14370 0
c Var 'aux1038' direct represents '1' with '14371'
14369 -14370 14371 0
-14371 14370 0
-14371 -14369 0
c Var 'aux1038' direct represents '2' with '-14370'
14369 14371 -14370 0
c Encoding variable: aux1039 with domain: int(0..2) (representing constraint ((field_00001_00002=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux1039' order represents '0' with '14372'
c Var 'aux1039' direct represents '0' with '14372'
c Var 'aux1039' order represents '1' with '14373'
-14372 14373 0
c Var 'aux1039' direct represents '1' with '14374'
14372 -14373 14374 0
-14374 14373 0
-14374 -14372 0
c Var 'aux1039' direct represents '2' with '-14373'
14372 14374 -14373 0
c Encoding variable: aux1040 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux1040' order represents '0' with '14375'
c Var 'aux1040' direct represents '0' with '14375'
c Var 'aux1040' order represents '1' with '14376'
-14375 14376 0
c Var 'aux1040' direct represents '1' with '14377'
14375 -14376 14377 0
-14377 14376 0
-14377 -14375 0
c Var 'aux1040' direct represents '2' with '-14376'
14375 14377 -14376 0
c Encoding variable: aux1041 with domain: int(0..2) (representing constraint ((field_00003_00002=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux1041' order represents '0' with '14378'
c Var 'aux1041' direct represents '0' with '14378'
c Var 'aux1041' order represents '1' with '14379'
-14378 14379 0
c Var 'aux1041' direct represents '1' with '14380'
14378 -14379 14380 0
-14380 14379 0
-14380 -14378 0
c Var 'aux1041' direct represents '2' with '-14379'
14378 14380 -14379 0
c Encoding variable: aux1042 with domain: int(0..3) (representing constraint ((field_00002_00002=9) + aux1041))
c Both direct and order encoding.
c Var 'aux1042' order represents '0' with '14381'
c Var 'aux1042' direct represents '0' with '14381'
c Var 'aux1042' order represents '1' with '14382'
-14381 14382 0
c Var 'aux1042' direct represents '1' with '14383'
14381 -14382 14383 0
-14383 14382 0
-14383 -14381 0
c Var 'aux1042' order represents '2' with '14384'
-14382 14384 0
c Var 'aux1042' direct represents '2' with '14385'
14382 -14384 14385 0
-14385 14384 0
-14385 -14382 0
c Var 'aux1042' direct represents '3' with '-14384'
14381 14383 14385 -14384 0
c Encoding variable: aux1043 with domain: int(0..4) (representing constraint (aux1038 + aux1040))
c Both direct and order encoding.
c Var 'aux1043' order represents '0' with '14386'
c Var 'aux1043' direct represents '0' with '14386'
c Var 'aux1043' order represents '1' with '14387'
-14386 14387 0
c Var 'aux1043' direct represents '1' with '14388'
14386 -14387 14388 0
-14388 14387 0
-14388 -14386 0
c Var 'aux1043' order represents '2' with '14389'
-14387 14389 0
c Var 'aux1043' direct represents '2' with '14390'
14387 -14389 14390 0
-14390 14389 0
-14390 -14387 0
c Var 'aux1043' order represents '3' with '14391'
-14389 14391 0
c Var 'aux1043' direct represents '3' with '14392'
14389 -14391 14392 0
-14392 14391 0
-14392 -14389 0
c Var 'aux1043' direct represents '4' with '-14391'
14386 14388 14390 14392 -14391 0
c Encoding variable: aux1044 with domain: int(0..2) (representing constraint ((field_00004_00003=1) + (field_00006_00003=1)))
c Both direct and order encoding.
c Var 'aux1044' order represents '0' with '14393'
c Var 'aux1044' direct represents '0' with '14393'
c Var 'aux1044' order represents '1' with '14394'
-14393 14394 0
c Var 'aux1044' direct represents '1' with '14395'
14393 -14394 14395 0
-14395 14394 0
-14395 -14393 0
c Var 'aux1044' direct represents '2' with '-14394'
14393 14395 -14394 0
c Encoding variable: aux1045 with domain: int(0..2) (representing constraint ((field_00001_00003=1) + (field_00009_00003=1)))
c Both direct and order encoding.
c Var 'aux1045' order represents '0' with '14396'
c Var 'aux1045' direct represents '0' with '14396'
c Var 'aux1045' order represents '1' with '14397'
-14396 14397 0
c Var 'aux1045' direct represents '1' with '14398'
14396 -14397 14398 0
-14398 14397 0
-14398 -14396 0
c Var 'aux1045' direct represents '2' with '-14397'
14396 14398 -14397 0
c Encoding variable: aux1046 with domain: int(0..2) (representing constraint ((field_00008_00003=1) + (field_00007_00003=1)))
c Both direct and order encoding.
c Var 'aux1046' order represents '0' with '14399'
c Var 'aux1046' direct represents '0' with '14399'
c Var 'aux1046' order represents '1' with '14400'
-14399 14400 0
c Var 'aux1046' direct represents '1' with '14401'
14399 -14400 14401 0
-14401 14400 0
-14401 -14399 0
c Var 'aux1046' direct represents '2' with '-14400'
14399 14401 -14400 0
c Encoding variable: aux1047 with domain: int(0..2) (representing constraint ((field_00003_00003=1) + (field_00005_00003=1)))
c Both direct and order encoding.
c Var 'aux1047' order represents '0' with '14402'
c Var 'aux1047' direct represents '0' with '14402'
c Var 'aux1047' order represents '1' with '14403'
-14402 14403 0
c Var 'aux1047' direct represents '1' with '14404'
14402 -14403 14404 0
-14404 14403 0
-14404 -14402 0
c Var 'aux1047' direct represents '2' with '-14403'
14402 14404 -14403 0
c Encoding variable: aux1048 with domain: int(0..3) (representing constraint ((field_00002_00003=1) + aux1047))
c Both direct and order encoding.
c Var 'aux1048' order represents '0' with '14405'
c Var 'aux1048' direct represents '0' with '14405'
c Var 'aux1048' order represents '1' with '14406'
-14405 14406 0
c Var 'aux1048' direct represents '1' with '14407'
14405 -14406 14407 0
-14407 14406 0
-14407 -14405 0
c Var 'aux1048' order represents '2' with '14408'
-14406 14408 0
c Var 'aux1048' direct represents '2' with '14409'
14406 -14408 14409 0
-14409 14408 0
-14409 -14406 0
c Var 'aux1048' direct represents '3' with '-14408'
14405 14407 14409 -14408 0
c Encoding variable: aux1049 with domain: int(0..4) (representing constraint (aux1044 + aux1046))
c Both direct and order encoding.
c Var 'aux1049' order represents '0' with '14410'
c Var 'aux1049' direct represents '0' with '14410'
c Var 'aux1049' order represents '1' with '14411'
-14410 14411 0
c Var 'aux1049' direct represents '1' with '14412'
14410 -14411 14412 0
-14412 14411 0
-14412 -14410 0
c Var 'aux1049' order represents '2' with '14413'
-14411 14413 0
c Var 'aux1049' direct represents '2' with '14414'
14411 -14413 14414 0
-14414 14413 0
-14414 -14411 0
c Var 'aux1049' order represents '3' with '14415'
-14413 14415 0
c Var 'aux1049' direct represents '3' with '14416'
14413 -14415 14416 0
-14416 14415 0
-14416 -14413 0
c Var 'aux1049' direct represents '4' with '-14415'
14410 14412 14414 14416 -14415 0
c Encoding variable: aux1050 with domain: int(0..2) (representing constraint ((field_00004_00003=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux1050' order represents '0' with '14417'
c Var 'aux1050' direct represents '0' with '14417'
c Var 'aux1050' order represents '1' with '14418'
-14417 14418 0
c Var 'aux1050' direct represents '1' with '14419'
14417 -14418 14419 0
-14419 14418 0
-14419 -14417 0
c Var 'aux1050' direct represents '2' with '-14418'
14417 14419 -14418 0
c Encoding variable: aux1051 with domain: int(0..2) (representing constraint ((field_00001_00003=2) + (field_00009_00003=2)))
c Both direct and order encoding.
c Var 'aux1051' order represents '0' with '14420'
c Var 'aux1051' direct represents '0' with '14420'
c Var 'aux1051' order represents '1' with '14421'
-14420 14421 0
c Var 'aux1051' direct represents '1' with '14422'
14420 -14421 14422 0
-14422 14421 0
-14422 -14420 0
c Var 'aux1051' direct represents '2' with '-14421'
14420 14422 -14421 0
c Encoding variable: aux1052 with domain: int(0..2) (representing constraint ((field_00008_00003=2) + (field_00007_00003=2)))
c Both direct and order encoding.
c Var 'aux1052' order represents '0' with '14423'
c Var 'aux1052' direct represents '0' with '14423'
c Var 'aux1052' order represents '1' with '14424'
-14423 14424 0
c Var 'aux1052' direct represents '1' with '14425'
14423 -14424 14425 0
-14425 14424 0
-14425 -14423 0
c Var 'aux1052' direct represents '2' with '-14424'
14423 14425 -14424 0
c Encoding variable: aux1053 with domain: int(0..2) (representing constraint ((field_00003_00003=2) + (field_00005_00003=2)))
c Both direct and order encoding.
c Var 'aux1053' order represents '0' with '14426'
c Var 'aux1053' direct represents '0' with '14426'
c Var 'aux1053' order represents '1' with '14427'
-14426 14427 0
c Var 'aux1053' direct represents '1' with '14428'
14426 -14427 14428 0
-14428 14427 0
-14428 -14426 0
c Var 'aux1053' direct represents '2' with '-14427'
14426 14428 -14427 0
c Encoding variable: aux1054 with domain: int(0..3) (representing constraint ((field_00002_00003=2) + aux1053))
c Both direct and order encoding.
c Var 'aux1054' order represents '0' with '14429'
c Var 'aux1054' direct represents '0' with '14429'
c Var 'aux1054' order represents '1' with '14430'
-14429 14430 0
c Var 'aux1054' direct represents '1' with '14431'
14429 -14430 14431 0
-14431 14430 0
-14431 -14429 0
c Var 'aux1054' order represents '2' with '14432'
-14430 14432 0
c Var 'aux1054' direct represents '2' with '14433'
14430 -14432 14433 0
-14433 14432 0
-14433 -14430 0
c Var 'aux1054' direct represents '3' with '-14432'
14429 14431 14433 -14432 0
c Encoding variable: aux1055 with domain: int(0..4) (representing constraint (aux1050 + aux1052))
c Both direct and order encoding.
c Var 'aux1055' order represents '0' with '14434'
c Var 'aux1055' direct represents '0' with '14434'
c Var 'aux1055' order represents '1' with '14435'
-14434 14435 0
c Var 'aux1055' direct represents '1' with '14436'
14434 -14435 14436 0
-14436 14435 0
-14436 -14434 0
c Var 'aux1055' order represents '2' with '14437'
-14435 14437 0
c Var 'aux1055' direct represents '2' with '14438'
14435 -14437 14438 0
-14438 14437 0
-14438 -14435 0
c Var 'aux1055' order represents '3' with '14439'
-14437 14439 0
c Var 'aux1055' direct represents '3' with '14440'
14437 -14439 14440 0
-14440 14439 0
-14440 -14437 0
c Var 'aux1055' direct represents '4' with '-14439'
14434 14436 14438 14440 -14439 0
c Encoding variable: aux1056 with domain: int(0..2) (representing constraint ((field_00004_00003=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux1056' order represents '0' with '14441'
c Var 'aux1056' direct represents '0' with '14441'
c Var 'aux1056' order represents '1' with '14442'
-14441 14442 0
c Var 'aux1056' direct represents '1' with '14443'
14441 -14442 14443 0
-14443 14442 0
-14443 -14441 0
c Var 'aux1056' direct represents '2' with '-14442'
14441 14443 -14442 0
c Encoding variable: aux1057 with domain: int(0..2) (representing constraint ((field_00001_00003=3) + (field_00009_00003=3)))
c Both direct and order encoding.
c Var 'aux1057' order represents '0' with '14444'
c Var 'aux1057' direct represents '0' with '14444'
c Var 'aux1057' order represents '1' with '14445'
-14444 14445 0
c Var 'aux1057' direct represents '1' with '14446'
14444 -14445 14446 0
-14446 14445 0
-14446 -14444 0
c Var 'aux1057' direct represents '2' with '-14445'
14444 14446 -14445 0
c Encoding variable: aux1058 with domain: int(0..2) (representing constraint ((field_00008_00003=3) + (field_00007_00003=3)))
c Both direct and order encoding.
c Var 'aux1058' order represents '0' with '14447'
c Var 'aux1058' direct represents '0' with '14447'
c Var 'aux1058' order represents '1' with '14448'
-14447 14448 0
c Var 'aux1058' direct represents '1' with '14449'
14447 -14448 14449 0
-14449 14448 0
-14449 -14447 0
c Var 'aux1058' direct represents '2' with '-14448'
14447 14449 -14448 0
c Encoding variable: aux1059 with domain: int(0..2) (representing constraint ((field_00003_00003=3) + (field_00005_00003=3)))
c Both direct and order encoding.
c Var 'aux1059' order represents '0' with '14450'
c Var 'aux1059' direct represents '0' with '14450'
c Var 'aux1059' order represents '1' with '14451'
-14450 14451 0
c Var 'aux1059' direct represents '1' with '14452'
14450 -14451 14452 0
-14452 14451 0
-14452 -14450 0
c Var 'aux1059' direct represents '2' with '-14451'
14450 14452 -14451 0
c Encoding variable: aux1060 with domain: int(0..3) (representing constraint ((field_00002_00003=3) + aux1059))
c Both direct and order encoding.
c Var 'aux1060' order represents '0' with '14453'
c Var 'aux1060' direct represents '0' with '14453'
c Var 'aux1060' order represents '1' with '14454'
-14453 14454 0
c Var 'aux1060' direct represents '1' with '14455'
14453 -14454 14455 0
-14455 14454 0
-14455 -14453 0
c Var 'aux1060' order represents '2' with '14456'
-14454 14456 0
c Var 'aux1060' direct represents '2' with '14457'
14454 -14456 14457 0
-14457 14456 0
-14457 -14454 0
c Var 'aux1060' direct represents '3' with '-14456'
14453 14455 14457 -14456 0
c Encoding variable: aux1061 with domain: int(0..4) (representing constraint (aux1056 + aux1058))
c Both direct and order encoding.
c Var 'aux1061' order represents '0' with '14458'
c Var 'aux1061' direct represents '0' with '14458'
c Var 'aux1061' order represents '1' with '14459'
-14458 14459 0
c Var 'aux1061' direct represents '1' with '14460'
14458 -14459 14460 0
-14460 14459 0
-14460 -14458 0
c Var 'aux1061' order represents '2' with '14461'
-14459 14461 0
c Var 'aux1061' direct represents '2' with '14462'
14459 -14461 14462 0
-14462 14461 0
-14462 -14459 0
c Var 'aux1061' order represents '3' with '14463'
-14461 14463 0
c Var 'aux1061' direct represents '3' with '14464'
14461 -14463 14464 0
-14464 14463 0
-14464 -14461 0
c Var 'aux1061' direct represents '4' with '-14463'
14458 14460 14462 14464 -14463 0
c Encoding variable: aux1062 with domain: int(0..2) (representing constraint ((field_00004_00003=4) + (field_00006_00003=4)))
c Both direct and order encoding.
c Var 'aux1062' order represents '0' with '14465'
c Var 'aux1062' direct represents '0' with '14465'
c Var 'aux1062' order represents '1' with '14466'
-14465 14466 0
c Var 'aux1062' direct represents '1' with '14467'
14465 -14466 14467 0
-14467 14466 0
-14467 -14465 0
c Var 'aux1062' direct represents '2' with '-14466'
14465 14467 -14466 0
c Encoding variable: aux1063 with domain: int(0..2) (representing constraint ((field_00001_00003=4) + (field_00009_00003=4)))
c Both direct and order encoding.
c Var 'aux1063' order represents '0' with '14468'
c Var 'aux1063' direct represents '0' with '14468'
c Var 'aux1063' order represents '1' with '14469'
-14468 14469 0
c Var 'aux1063' direct represents '1' with '14470'
14468 -14469 14470 0
-14470 14469 0
-14470 -14468 0
c Var 'aux1063' direct represents '2' with '-14469'
14468 14470 -14469 0
c Encoding variable: aux1064 with domain: int(0..2) (representing constraint ((field_00008_00003=4) + (field_00007_00003=4)))
c Both direct and order encoding.
c Var 'aux1064' order represents '0' with '14471'
c Var 'aux1064' direct represents '0' with '14471'
c Var 'aux1064' order represents '1' with '14472'
-14471 14472 0
c Var 'aux1064' direct represents '1' with '14473'
14471 -14472 14473 0
-14473 14472 0
-14473 -14471 0
c Var 'aux1064' direct represents '2' with '-14472'
14471 14473 -14472 0
c Encoding variable: aux1065 with domain: int(0..2) (representing constraint ((field_00003_00003=4) + (field_00005_00003=4)))
c Both direct and order encoding.
c Var 'aux1065' order represents '0' with '14474'
c Var 'aux1065' direct represents '0' with '14474'
c Var 'aux1065' order represents '1' with '14475'
-14474 14475 0
c Var 'aux1065' direct represents '1' with '14476'
14474 -14475 14476 0
-14476 14475 0
-14476 -14474 0
c Var 'aux1065' direct represents '2' with '-14475'
14474 14476 -14475 0
c Encoding variable: aux1066 with domain: int(0..3) (representing constraint ((field_00002_00003=4) + aux1065))
c Both direct and order encoding.
c Var 'aux1066' order represents '0' with '14477'
c Var 'aux1066' direct represents '0' with '14477'
c Var 'aux1066' order represents '1' with '14478'
-14477 14478 0
c Var 'aux1066' direct represents '1' with '14479'
14477 -14478 14479 0
-14479 14478 0
-14479 -14477 0
c Var 'aux1066' order represents '2' with '14480'
-14478 14480 0
c Var 'aux1066' direct represents '2' with '14481'
14478 -14480 14481 0
-14481 14480 0
-14481 -14478 0
c Var 'aux1066' direct represents '3' with '-14480'
14477 14479 14481 -14480 0
c Encoding variable: aux1067 with domain: int(0..4) (representing constraint (aux1062 + aux1064))
c Both direct and order encoding.
c Var 'aux1067' order represents '0' with '14482'
c Var 'aux1067' direct represents '0' with '14482'
c Var 'aux1067' order represents '1' with '14483'
-14482 14483 0
c Var 'aux1067' direct represents '1' with '14484'
14482 -14483 14484 0
-14484 14483 0
-14484 -14482 0
c Var 'aux1067' order represents '2' with '14485'
-14483 14485 0
c Var 'aux1067' direct represents '2' with '14486'
14483 -14485 14486 0
-14486 14485 0
-14486 -14483 0
c Var 'aux1067' order represents '3' with '14487'
-14485 14487 0
c Var 'aux1067' direct represents '3' with '14488'
14485 -14487 14488 0
-14488 14487 0
-14488 -14485 0
c Var 'aux1067' direct represents '4' with '-14487'
14482 14484 14486 14488 -14487 0
c Encoding variable: aux1068 with domain: int(0..2) (representing constraint ((field_00004_00003=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux1068' order represents '0' with '14489'
c Var 'aux1068' direct represents '0' with '14489'
c Var 'aux1068' order represents '1' with '14490'
-14489 14490 0
c Var 'aux1068' direct represents '1' with '14491'
14489 -14490 14491 0
-14491 14490 0
-14491 -14489 0
c Var 'aux1068' direct represents '2' with '-14490'
14489 14491 -14490 0
c Encoding variable: aux1069 with domain: int(0..2) (representing constraint ((field_00001_00003=5) + (field_00009_00003=5)))
c Both direct and order encoding.
c Var 'aux1069' order represents '0' with '14492'
c Var 'aux1069' direct represents '0' with '14492'
c Var 'aux1069' order represents '1' with '14493'
-14492 14493 0
c Var 'aux1069' direct represents '1' with '14494'
14492 -14493 14494 0
-14494 14493 0
-14494 -14492 0
c Var 'aux1069' direct represents '2' with '-14493'
14492 14494 -14493 0
c Encoding variable: aux1070 with domain: int(0..2) (representing constraint ((field_00008_00003=5) + (field_00007_00003=5)))
c Both direct and order encoding.
c Var 'aux1070' order represents '0' with '14495'
c Var 'aux1070' direct represents '0' with '14495'
c Var 'aux1070' order represents '1' with '14496'
-14495 14496 0
c Var 'aux1070' direct represents '1' with '14497'
14495 -14496 14497 0
-14497 14496 0
-14497 -14495 0
c Var 'aux1070' direct represents '2' with '-14496'
14495 14497 -14496 0
c Encoding variable: aux1071 with domain: int(0..2) (representing constraint ((field_00003_00003=5) + (field_00005_00003=5)))
c Both direct and order encoding.
c Var 'aux1071' order represents '0' with '14498'
c Var 'aux1071' direct represents '0' with '14498'
c Var 'aux1071' order represents '1' with '14499'
-14498 14499 0
c Var 'aux1071' direct represents '1' with '14500'
14498 -14499 14500 0
-14500 14499 0
-14500 -14498 0
c Var 'aux1071' direct represents '2' with '-14499'
14498 14500 -14499 0
c Encoding variable: aux1072 with domain: int(0..3) (representing constraint ((field_00002_00003=5) + aux1071))
c Both direct and order encoding.
c Var 'aux1072' order represents '0' with '14501'
c Var 'aux1072' direct represents '0' with '14501'
c Var 'aux1072' order represents '1' with '14502'
-14501 14502 0
c Var 'aux1072' direct represents '1' with '14503'
14501 -14502 14503 0
-14503 14502 0
-14503 -14501 0
c Var 'aux1072' order represents '2' with '14504'
-14502 14504 0
c Var 'aux1072' direct represents '2' with '14505'
14502 -14504 14505 0
-14505 14504 0
-14505 -14502 0
c Var 'aux1072' direct represents '3' with '-14504'
14501 14503 14505 -14504 0
c Encoding variable: aux1073 with domain: int(0..4) (representing constraint (aux1068 + aux1070))
c Both direct and order encoding.
c Var 'aux1073' order represents '0' with '14506'
c Var 'aux1073' direct represents '0' with '14506'
c Var 'aux1073' order represents '1' with '14507'
-14506 14507 0
c Var 'aux1073' direct represents '1' with '14508'
14506 -14507 14508 0
-14508 14507 0
-14508 -14506 0
c Var 'aux1073' order represents '2' with '14509'
-14507 14509 0
c Var 'aux1073' direct represents '2' with '14510'
14507 -14509 14510 0
-14510 14509 0
-14510 -14507 0
c Var 'aux1073' order represents '3' with '14511'
-14509 14511 0
c Var 'aux1073' direct represents '3' with '14512'
14509 -14511 14512 0
-14512 14511 0
-14512 -14509 0
c Var 'aux1073' direct represents '4' with '-14511'
14506 14508 14510 14512 -14511 0
c Encoding variable: aux1074 with domain: int(0..2) (representing constraint ((field_00004_00003=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux1074' order represents '0' with '14513'
c Var 'aux1074' direct represents '0' with '14513'
c Var 'aux1074' order represents '1' with '14514'
-14513 14514 0
c Var 'aux1074' direct represents '1' with '14515'
14513 -14514 14515 0
-14515 14514 0
-14515 -14513 0
c Var 'aux1074' direct represents '2' with '-14514'
14513 14515 -14514 0
c Encoding variable: aux1075 with domain: int(0..2) (representing constraint ((field_00001_00003=6) + (field_00009_00003=6)))
c Both direct and order encoding.
c Var 'aux1075' order represents '0' with '14516'
c Var 'aux1075' direct represents '0' with '14516'
c Var 'aux1075' order represents '1' with '14517'
-14516 14517 0
c Var 'aux1075' direct represents '1' with '14518'
14516 -14517 14518 0
-14518 14517 0
-14518 -14516 0
c Var 'aux1075' direct represents '2' with '-14517'
14516 14518 -14517 0
c Encoding variable: aux1076 with domain: int(0..2) (representing constraint ((field_00008_00003=6) + (field_00007_00003=6)))
c Both direct and order encoding.
c Var 'aux1076' order represents '0' with '14519'
c Var 'aux1076' direct represents '0' with '14519'
c Var 'aux1076' order represents '1' with '14520'
-14519 14520 0
c Var 'aux1076' direct represents '1' with '14521'
14519 -14520 14521 0
-14521 14520 0
-14521 -14519 0
c Var 'aux1076' direct represents '2' with '-14520'
14519 14521 -14520 0
c Encoding variable: aux1077 with domain: int(0..2) (representing constraint ((field_00003_00003=6) + (field_00005_00003=6)))
c Both direct and order encoding.
c Var 'aux1077' order represents '0' with '14522'
c Var 'aux1077' direct represents '0' with '14522'
c Var 'aux1077' order represents '1' with '14523'
-14522 14523 0
c Var 'aux1077' direct represents '1' with '14524'
14522 -14523 14524 0
-14524 14523 0
-14524 -14522 0
c Var 'aux1077' direct represents '2' with '-14523'
14522 14524 -14523 0
c Encoding variable: aux1078 with domain: int(0..3) (representing constraint ((field_00002_00003=6) + aux1077))
c Both direct and order encoding.
c Var 'aux1078' order represents '0' with '14525'
c Var 'aux1078' direct represents '0' with '14525'
c Var 'aux1078' order represents '1' with '14526'
-14525 14526 0
c Var 'aux1078' direct represents '1' with '14527'
14525 -14526 14527 0
-14527 14526 0
-14527 -14525 0
c Var 'aux1078' order represents '2' with '14528'
-14526 14528 0
c Var 'aux1078' direct represents '2' with '14529'
14526 -14528 14529 0
-14529 14528 0
-14529 -14526 0
c Var 'aux1078' direct represents '3' with '-14528'
14525 14527 14529 -14528 0
c Encoding variable: aux1079 with domain: int(0..4) (representing constraint (aux1074 + aux1076))
c Both direct and order encoding.
c Var 'aux1079' order represents '0' with '14530'
c Var 'aux1079' direct represents '0' with '14530'
c Var 'aux1079' order represents '1' with '14531'
-14530 14531 0
c Var 'aux1079' direct represents '1' with '14532'
14530 -14531 14532 0
-14532 14531 0
-14532 -14530 0
c Var 'aux1079' order represents '2' with '14533'
-14531 14533 0
c Var 'aux1079' direct represents '2' with '14534'
14531 -14533 14534 0
-14534 14533 0
-14534 -14531 0
c Var 'aux1079' order represents '3' with '14535'
-14533 14535 0
c Var 'aux1079' direct represents '3' with '14536'
14533 -14535 14536 0
-14536 14535 0
-14536 -14533 0
c Var 'aux1079' direct represents '4' with '-14535'
14530 14532 14534 14536 -14535 0
c Encoding variable: aux1080 with domain: int(0..2) (representing constraint ((field_00004_00003=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux1080' order represents '0' with '14537'
c Var 'aux1080' direct represents '0' with '14537'
c Var 'aux1080' order represents '1' with '14538'
-14537 14538 0
c Var 'aux1080' direct represents '1' with '14539'
14537 -14538 14539 0
-14539 14538 0
-14539 -14537 0
c Var 'aux1080' direct represents '2' with '-14538'
14537 14539 -14538 0
c Encoding variable: aux1081 with domain: int(0..2) (representing constraint ((field_00001_00003=7) + (field_00009_00003=7)))
c Both direct and order encoding.
c Var 'aux1081' order represents '0' with '14540'
c Var 'aux1081' direct represents '0' with '14540'
c Var 'aux1081' order represents '1' with '14541'
-14540 14541 0
c Var 'aux1081' direct represents '1' with '14542'
14540 -14541 14542 0
-14542 14541 0
-14542 -14540 0
c Var 'aux1081' direct represents '2' with '-14541'
14540 14542 -14541 0
c Encoding variable: aux1082 with domain: int(0..2) (representing constraint ((field_00008_00003=7) + (field_00007_00003=7)))
c Both direct and order encoding.
c Var 'aux1082' order represents '0' with '14543'
c Var 'aux1082' direct represents '0' with '14543'
c Var 'aux1082' order represents '1' with '14544'
-14543 14544 0
c Var 'aux1082' direct represents '1' with '14545'
14543 -14544 14545 0
-14545 14544 0
-14545 -14543 0
c Var 'aux1082' direct represents '2' with '-14544'
14543 14545 -14544 0
c Encoding variable: aux1083 with domain: int(0..2) (representing constraint ((field_00003_00003=7) + (field_00005_00003=7)))
c Both direct and order encoding.
c Var 'aux1083' order represents '0' with '14546'
c Var 'aux1083' direct represents '0' with '14546'
c Var 'aux1083' order represents '1' with '14547'
-14546 14547 0
c Var 'aux1083' direct represents '1' with '14548'
14546 -14547 14548 0
-14548 14547 0
-14548 -14546 0
c Var 'aux1083' direct represents '2' with '-14547'
14546 14548 -14547 0
c Encoding variable: aux1084 with domain: int(0..3) (representing constraint ((field_00002_00003=7) + aux1083))
c Both direct and order encoding.
c Var 'aux1084' order represents '0' with '14549'
c Var 'aux1084' direct represents '0' with '14549'
c Var 'aux1084' order represents '1' with '14550'
-14549 14550 0
c Var 'aux1084' direct represents '1' with '14551'
14549 -14550 14551 0
-14551 14550 0
-14551 -14549 0
c Var 'aux1084' order represents '2' with '14552'
-14550 14552 0
c Var 'aux1084' direct represents '2' with '14553'
14550 -14552 14553 0
-14553 14552 0
-14553 -14550 0
c Var 'aux1084' direct represents '3' with '-14552'
14549 14551 14553 -14552 0
c Encoding variable: aux1085 with domain: int(0..4) (representing constraint (aux1080 + aux1082))
c Both direct and order encoding.
c Var 'aux1085' order represents '0' with '14554'
c Var 'aux1085' direct represents '0' with '14554'
c Var 'aux1085' order represents '1' with '14555'
-14554 14555 0
c Var 'aux1085' direct represents '1' with '14556'
14554 -14555 14556 0
-14556 14555 0
-14556 -14554 0
c Var 'aux1085' order represents '2' with '14557'
-14555 14557 0
c Var 'aux1085' direct represents '2' with '14558'
14555 -14557 14558 0
-14558 14557 0
-14558 -14555 0
c Var 'aux1085' order represents '3' with '14559'
-14557 14559 0
c Var 'aux1085' direct represents '3' with '14560'
14557 -14559 14560 0
-14560 14559 0
-14560 -14557 0
c Var 'aux1085' direct represents '4' with '-14559'
14554 14556 14558 14560 -14559 0
c Encoding variable: aux1086 with domain: int(0..2) (representing constraint ((field_00004_00003=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux1086' order represents '0' with '14561'
c Var 'aux1086' direct represents '0' with '14561'
c Var 'aux1086' order represents '1' with '14562'
-14561 14562 0
c Var 'aux1086' direct represents '1' with '14563'
14561 -14562 14563 0
-14563 14562 0
-14563 -14561 0
c Var 'aux1086' direct represents '2' with '-14562'
14561 14563 -14562 0
c Encoding variable: aux1087 with domain: int(0..2) (representing constraint ((field_00001_00003=8) + (field_00009_00003=8)))
c Both direct and order encoding.
c Var 'aux1087' order represents '0' with '14564'
c Var 'aux1087' direct represents '0' with '14564'
c Var 'aux1087' order represents '1' with '14565'
-14564 14565 0
c Var 'aux1087' direct represents '1' with '14566'
14564 -14565 14566 0
-14566 14565 0
-14566 -14564 0
c Var 'aux1087' direct represents '2' with '-14565'
14564 14566 -14565 0
c Encoding variable: aux1088 with domain: int(0..2) (representing constraint ((field_00008_00003=8) + (field_00007_00003=8)))
c Both direct and order encoding.
c Var 'aux1088' order represents '0' with '14567'
c Var 'aux1088' direct represents '0' with '14567'
c Var 'aux1088' order represents '1' with '14568'
-14567 14568 0
c Var 'aux1088' direct represents '1' with '14569'
14567 -14568 14569 0
-14569 14568 0
-14569 -14567 0
c Var 'aux1088' direct represents '2' with '-14568'
14567 14569 -14568 0
c Encoding variable: aux1089 with domain: int(0..2) (representing constraint ((field_00003_00003=8) + (field_00005_00003=8)))
c Both direct and order encoding.
c Var 'aux1089' order represents '0' with '14570'
c Var 'aux1089' direct represents '0' with '14570'
c Var 'aux1089' order represents '1' with '14571'
-14570 14571 0
c Var 'aux1089' direct represents '1' with '14572'
14570 -14571 14572 0
-14572 14571 0
-14572 -14570 0
c Var 'aux1089' direct represents '2' with '-14571'
14570 14572 -14571 0
c Encoding variable: aux1090 with domain: int(0..3) (representing constraint ((field_00002_00003=8) + aux1089))
c Both direct and order encoding.
c Var 'aux1090' order represents '0' with '14573'
c Var 'aux1090' direct represents '0' with '14573'
c Var 'aux1090' order represents '1' with '14574'
-14573 14574 0
c Var 'aux1090' direct represents '1' with '14575'
14573 -14574 14575 0
-14575 14574 0
-14575 -14573 0
c Var 'aux1090' order represents '2' with '14576'
-14574 14576 0
c Var 'aux1090' direct represents '2' with '14577'
14574 -14576 14577 0
-14577 14576 0
-14577 -14574 0
c Var 'aux1090' direct represents '3' with '-14576'
14573 14575 14577 -14576 0
c Encoding variable: aux1091 with domain: int(0..4) (representing constraint (aux1086 + aux1088))
c Both direct and order encoding.
c Var 'aux1091' order represents '0' with '14578'
c Var 'aux1091' direct represents '0' with '14578'
c Var 'aux1091' order represents '1' with '14579'
-14578 14579 0
c Var 'aux1091' direct represents '1' with '14580'
14578 -14579 14580 0
-14580 14579 0
-14580 -14578 0
c Var 'aux1091' order represents '2' with '14581'
-14579 14581 0
c Var 'aux1091' direct represents '2' with '14582'
14579 -14581 14582 0
-14582 14581 0
-14582 -14579 0
c Var 'aux1091' order represents '3' with '14583'
-14581 14583 0
c Var 'aux1091' direct represents '3' with '14584'
14581 -14583 14584 0
-14584 14583 0
-14584 -14581 0
c Var 'aux1091' direct represents '4' with '-14583'
14578 14580 14582 14584 -14583 0
c Encoding variable: aux1092 with domain: int(0..2) (representing constraint ((field_00004_00003=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux1092' order represents '0' with '14585'
c Var 'aux1092' direct represents '0' with '14585'
c Var 'aux1092' order represents '1' with '14586'
-14585 14586 0
c Var 'aux1092' direct represents '1' with '14587'
14585 -14586 14587 0
-14587 14586 0
-14587 -14585 0
c Var 'aux1092' direct represents '2' with '-14586'
14585 14587 -14586 0
c Encoding variable: aux1093 with domain: int(0..2) (representing constraint ((field_00001_00003=9) + (field_00009_00003=9)))
c Both direct and order encoding.
c Var 'aux1093' order represents '0' with '14588'
c Var 'aux1093' direct represents '0' with '14588'
c Var 'aux1093' order represents '1' with '14589'
-14588 14589 0
c Var 'aux1093' direct represents '1' with '14590'
14588 -14589 14590 0
-14590 14589 0
-14590 -14588 0
c Var 'aux1093' direct represents '2' with '-14589'
14588 14590 -14589 0
c Encoding variable: aux1094 with domain: int(0..2) (representing constraint ((field_00008_00003=9) + (field_00007_00003=9)))
c Both direct and order encoding.
c Var 'aux1094' order represents '0' with '14591'
c Var 'aux1094' direct represents '0' with '14591'
c Var 'aux1094' order represents '1' with '14592'
-14591 14592 0
c Var 'aux1094' direct represents '1' with '14593'
14591 -14592 14593 0
-14593 14592 0
-14593 -14591 0
c Var 'aux1094' direct represents '2' with '-14592'
14591 14593 -14592 0
c Encoding variable: aux1095 with domain: int(0..2) (representing constraint ((field_00003_00003=9) + (field_00005_00003=9)))
c Both direct and order encoding.
c Var 'aux1095' order represents '0' with '14594'
c Var 'aux1095' direct represents '0' with '14594'
c Var 'aux1095' order represents '1' with '14595'
-14594 14595 0
c Var 'aux1095' direct represents '1' with '14596'
14594 -14595 14596 0
-14596 14595 0
-14596 -14594 0
c Var 'aux1095' direct represents '2' with '-14595'
14594 14596 -14595 0
c Encoding variable: aux1096 with domain: int(0..3) (representing constraint ((field_00002_00003=9) + aux1095))
c Both direct and order encoding.
c Var 'aux1096' order represents '0' with '14597'
c Var 'aux1096' direct represents '0' with '14597'
c Var 'aux1096' order represents '1' with '14598'
-14597 14598 0
c Var 'aux1096' direct represents '1' with '14599'
14597 -14598 14599 0
-14599 14598 0
-14599 -14597 0
c Var 'aux1096' order represents '2' with '14600'
-14598 14600 0
c Var 'aux1096' direct represents '2' with '14601'
14598 -14600 14601 0
-14601 14600 0
-14601 -14598 0
c Var 'aux1096' direct represents '3' with '-14600'
14597 14599 14601 -14600 0
c Encoding variable: aux1097 with domain: int(0..4) (representing constraint (aux1092 + aux1094))
c Both direct and order encoding.
c Var 'aux1097' order represents '0' with '14602'
c Var 'aux1097' direct represents '0' with '14602'
c Var 'aux1097' order represents '1' with '14603'
-14602 14603 0
c Var 'aux1097' direct represents '1' with '14604'
14602 -14603 14604 0
-14604 14603 0
-14604 -14602 0
c Var 'aux1097' order represents '2' with '14605'
-14603 14605 0
c Var 'aux1097' direct represents '2' with '14606'
14603 -14605 14606 0
-14606 14605 0
-14606 -14603 0
c Var 'aux1097' order represents '3' with '14607'
-14605 14607 0
c Var 'aux1097' direct represents '3' with '14608'
14605 -14607 14608 0
-14608 14607 0
-14608 -14605 0
c Var 'aux1097' direct represents '4' with '-14607'
14602 14604 14606 14608 -14607 0
c Encoding variable: aux1098 with domain: int(0..2) (representing constraint ((field_00004_00004=1) + (field_00006_00004=1)))
c Both direct and order encoding.
c Var 'aux1098' order represents '0' with '14609'
c Var 'aux1098' direct represents '0' with '14609'
c Var 'aux1098' order represents '1' with '14610'
-14609 14610 0
c Var 'aux1098' direct represents '1' with '14611'
14609 -14610 14611 0
-14611 14610 0
-14611 -14609 0
c Var 'aux1098' direct represents '2' with '-14610'
14609 14611 -14610 0
c Encoding variable: aux1099 with domain: int(0..2) (representing constraint ((field_00001_00004=1) + (field_00009_00004=1)))
c Both direct and order encoding.
c Var 'aux1099' order represents '0' with '14612'
c Var 'aux1099' direct represents '0' with '14612'
c Var 'aux1099' order represents '1' with '14613'
-14612 14613 0
c Var 'aux1099' direct represents '1' with '14614'
14612 -14613 14614 0
-14614 14613 0
-14614 -14612 0
c Var 'aux1099' direct represents '2' with '-14613'
14612 14614 -14613 0
c Encoding variable: aux1100 with domain: int(0..2) (representing constraint ((field_00008_00004=1) + (field_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux1100' order represents '0' with '14615'
c Var 'aux1100' direct represents '0' with '14615'
c Var 'aux1100' order represents '1' with '14616'
-14615 14616 0
c Var 'aux1100' direct represents '1' with '14617'
14615 -14616 14617 0
-14617 14616 0
-14617 -14615 0
c Var 'aux1100' direct represents '2' with '-14616'
14615 14617 -14616 0
c Encoding variable: aux1101 with domain: int(0..2) (representing constraint ((field_00003_00004=1) + (field_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux1101' order represents '0' with '14618'
c Var 'aux1101' direct represents '0' with '14618'
c Var 'aux1101' order represents '1' with '14619'
-14618 14619 0
c Var 'aux1101' direct represents '1' with '14620'
14618 -14619 14620 0
-14620 14619 0
-14620 -14618 0
c Var 'aux1101' direct represents '2' with '-14619'
14618 14620 -14619 0
c Encoding variable: aux1102 with domain: int(0..3) (representing constraint ((field_00002_00004=1) + aux1101))
c Both direct and order encoding.
c Var 'aux1102' order represents '0' with '14621'
c Var 'aux1102' direct represents '0' with '14621'
c Var 'aux1102' order represents '1' with '14622'
-14621 14622 0
c Var 'aux1102' direct represents '1' with '14623'
14621 -14622 14623 0
-14623 14622 0
-14623 -14621 0
c Var 'aux1102' order represents '2' with '14624'
-14622 14624 0
c Var 'aux1102' direct represents '2' with '14625'
14622 -14624 14625 0
-14625 14624 0
-14625 -14622 0
c Var 'aux1102' direct represents '3' with '-14624'
14621 14623 14625 -14624 0
c Encoding variable: aux1103 with domain: int(0..4) (representing constraint (aux1098 + aux1100))
c Both direct and order encoding.
c Var 'aux1103' order represents '0' with '14626'
c Var 'aux1103' direct represents '0' with '14626'
c Var 'aux1103' order represents '1' with '14627'
-14626 14627 0
c Var 'aux1103' direct represents '1' with '14628'
14626 -14627 14628 0
-14628 14627 0
-14628 -14626 0
c Var 'aux1103' order represents '2' with '14629'
-14627 14629 0
c Var 'aux1103' direct represents '2' with '14630'
14627 -14629 14630 0
-14630 14629 0
-14630 -14627 0
c Var 'aux1103' order represents '3' with '14631'
-14629 14631 0
c Var 'aux1103' direct represents '3' with '14632'
14629 -14631 14632 0
-14632 14631 0
-14632 -14629 0
c Var 'aux1103' direct represents '4' with '-14631'
14626 14628 14630 14632 -14631 0
c Encoding variable: aux1104 with domain: int(0..2) (representing constraint ((field_00004_00004=2) + (field_00006_00004=2)))
c Both direct and order encoding.
c Var 'aux1104' order represents '0' with '14633'
c Var 'aux1104' direct represents '0' with '14633'
c Var 'aux1104' order represents '1' with '14634'
-14633 14634 0
c Var 'aux1104' direct represents '1' with '14635'
14633 -14634 14635 0
-14635 14634 0
-14635 -14633 0
c Var 'aux1104' direct represents '2' with '-14634'
14633 14635 -14634 0
c Encoding variable: aux1105 with domain: int(0..2) (representing constraint ((field_00001_00004=2) + (field_00009_00004=2)))
c Both direct and order encoding.
c Var 'aux1105' order represents '0' with '14636'
c Var 'aux1105' direct represents '0' with '14636'
c Var 'aux1105' order represents '1' with '14637'
-14636 14637 0
c Var 'aux1105' direct represents '1' with '14638'
14636 -14637 14638 0
-14638 14637 0
-14638 -14636 0
c Var 'aux1105' direct represents '2' with '-14637'
14636 14638 -14637 0
c Encoding variable: aux1106 with domain: int(0..2) (representing constraint ((field_00008_00004=2) + (field_00007_00004=2)))
c Both direct and order encoding.
c Var 'aux1106' order represents '0' with '14639'
c Var 'aux1106' direct represents '0' with '14639'
c Var 'aux1106' order represents '1' with '14640'
-14639 14640 0
c Var 'aux1106' direct represents '1' with '14641'
14639 -14640 14641 0
-14641 14640 0
-14641 -14639 0
c Var 'aux1106' direct represents '2' with '-14640'
14639 14641 -14640 0
c Encoding variable: aux1107 with domain: int(0..2) (representing constraint ((field_00003_00004=2) + (field_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux1107' order represents '0' with '14642'
c Var 'aux1107' direct represents '0' with '14642'
c Var 'aux1107' order represents '1' with '14643'
-14642 14643 0
c Var 'aux1107' direct represents '1' with '14644'
14642 -14643 14644 0
-14644 14643 0
-14644 -14642 0
c Var 'aux1107' direct represents '2' with '-14643'
14642 14644 -14643 0
c Encoding variable: aux1108 with domain: int(0..3) (representing constraint ((field_00002_00004=2) + aux1107))
c Both direct and order encoding.
c Var 'aux1108' order represents '0' with '14645'
c Var 'aux1108' direct represents '0' with '14645'
c Var 'aux1108' order represents '1' with '14646'
-14645 14646 0
c Var 'aux1108' direct represents '1' with '14647'
14645 -14646 14647 0
-14647 14646 0
-14647 -14645 0
c Var 'aux1108' order represents '2' with '14648'
-14646 14648 0
c Var 'aux1108' direct represents '2' with '14649'
14646 -14648 14649 0
-14649 14648 0
-14649 -14646 0
c Var 'aux1108' direct represents '3' with '-14648'
14645 14647 14649 -14648 0
c Encoding variable: aux1109 with domain: int(0..4) (representing constraint (aux1104 + aux1106))
c Both direct and order encoding.
c Var 'aux1109' order represents '0' with '14650'
c Var 'aux1109' direct represents '0' with '14650'
c Var 'aux1109' order represents '1' with '14651'
-14650 14651 0
c Var 'aux1109' direct represents '1' with '14652'
14650 -14651 14652 0
-14652 14651 0
-14652 -14650 0
c Var 'aux1109' order represents '2' with '14653'
-14651 14653 0
c Var 'aux1109' direct represents '2' with '14654'
14651 -14653 14654 0
-14654 14653 0
-14654 -14651 0
c Var 'aux1109' order represents '3' with '14655'
-14653 14655 0
c Var 'aux1109' direct represents '3' with '14656'
14653 -14655 14656 0
-14656 14655 0
-14656 -14653 0
c Var 'aux1109' direct represents '4' with '-14655'
14650 14652 14654 14656 -14655 0
c Encoding variable: aux1110 with domain: int(0..2) (representing constraint ((field_00004_00004=3) + (field_00006_00004=3)))
c Both direct and order encoding.
c Var 'aux1110' order represents '0' with '14657'
c Var 'aux1110' direct represents '0' with '14657'
c Var 'aux1110' order represents '1' with '14658'
-14657 14658 0
c Var 'aux1110' direct represents '1' with '14659'
14657 -14658 14659 0
-14659 14658 0
-14659 -14657 0
c Var 'aux1110' direct represents '2' with '-14658'
14657 14659 -14658 0
c Encoding variable: aux1111 with domain: int(0..2) (representing constraint ((field_00001_00004=3) + (field_00009_00004=3)))
c Both direct and order encoding.
c Var 'aux1111' order represents '0' with '14660'
c Var 'aux1111' direct represents '0' with '14660'
c Var 'aux1111' order represents '1' with '14661'
-14660 14661 0
c Var 'aux1111' direct represents '1' with '14662'
14660 -14661 14662 0
-14662 14661 0
-14662 -14660 0
c Var 'aux1111' direct represents '2' with '-14661'
14660 14662 -14661 0
c Encoding variable: aux1112 with domain: int(0..2) (representing constraint ((field_00008_00004=3) + (field_00007_00004=3)))
c Both direct and order encoding.
c Var 'aux1112' order represents '0' with '14663'
c Var 'aux1112' direct represents '0' with '14663'
c Var 'aux1112' order represents '1' with '14664'
-14663 14664 0
c Var 'aux1112' direct represents '1' with '14665'
14663 -14664 14665 0
-14665 14664 0
-14665 -14663 0
c Var 'aux1112' direct represents '2' with '-14664'
14663 14665 -14664 0
c Encoding variable: aux1113 with domain: int(0..2) (representing constraint ((field_00003_00004=3) + (field_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux1113' order represents '0' with '14666'
c Var 'aux1113' direct represents '0' with '14666'
c Var 'aux1113' order represents '1' with '14667'
-14666 14667 0
c Var 'aux1113' direct represents '1' with '14668'
14666 -14667 14668 0
-14668 14667 0
-14668 -14666 0
c Var 'aux1113' direct represents '2' with '-14667'
14666 14668 -14667 0
c Encoding variable: aux1114 with domain: int(0..3) (representing constraint ((field_00002_00004=3) + aux1113))
c Both direct and order encoding.
c Var 'aux1114' order represents '0' with '14669'
c Var 'aux1114' direct represents '0' with '14669'
c Var 'aux1114' order represents '1' with '14670'
-14669 14670 0
c Var 'aux1114' direct represents '1' with '14671'
14669 -14670 14671 0
-14671 14670 0
-14671 -14669 0
c Var 'aux1114' order represents '2' with '14672'
-14670 14672 0
c Var 'aux1114' direct represents '2' with '14673'
14670 -14672 14673 0
-14673 14672 0
-14673 -14670 0
c Var 'aux1114' direct represents '3' with '-14672'
14669 14671 14673 -14672 0
c Encoding variable: aux1115 with domain: int(0..4) (representing constraint (aux1110 + aux1112))
c Both direct and order encoding.
c Var 'aux1115' order represents '0' with '14674'
c Var 'aux1115' direct represents '0' with '14674'
c Var 'aux1115' order represents '1' with '14675'
-14674 14675 0
c Var 'aux1115' direct represents '1' with '14676'
14674 -14675 14676 0
-14676 14675 0
-14676 -14674 0
c Var 'aux1115' order represents '2' with '14677'
-14675 14677 0
c Var 'aux1115' direct represents '2' with '14678'
14675 -14677 14678 0
-14678 14677 0
-14678 -14675 0
c Var 'aux1115' order represents '3' with '14679'
-14677 14679 0
c Var 'aux1115' direct represents '3' with '14680'
14677 -14679 14680 0
-14680 14679 0
-14680 -14677 0
c Var 'aux1115' direct represents '4' with '-14679'
14674 14676 14678 14680 -14679 0
c Encoding variable: aux1116 with domain: int(0..2) (representing constraint ((field_00004_00004=4) + (field_00006_00004=4)))
c Both direct and order encoding.
c Var 'aux1116' order represents '0' with '14681'
c Var 'aux1116' direct represents '0' with '14681'
c Var 'aux1116' order represents '1' with '14682'
-14681 14682 0
c Var 'aux1116' direct represents '1' with '14683'
14681 -14682 14683 0
-14683 14682 0
-14683 -14681 0
c Var 'aux1116' direct represents '2' with '-14682'
14681 14683 -14682 0
c Encoding variable: aux1117 with domain: int(0..2) (representing constraint ((field_00001_00004=4) + (field_00009_00004=4)))
c Both direct and order encoding.
c Var 'aux1117' order represents '0' with '14684'
c Var 'aux1117' direct represents '0' with '14684'
c Var 'aux1117' order represents '1' with '14685'
-14684 14685 0
c Var 'aux1117' direct represents '1' with '14686'
14684 -14685 14686 0
-14686 14685 0
-14686 -14684 0
c Var 'aux1117' direct represents '2' with '-14685'
14684 14686 -14685 0
c Encoding variable: aux1118 with domain: int(0..2) (representing constraint ((field_00008_00004=4) + (field_00007_00004=4)))
c Both direct and order encoding.
c Var 'aux1118' order represents '0' with '14687'
c Var 'aux1118' direct represents '0' with '14687'
c Var 'aux1118' order represents '1' with '14688'
-14687 14688 0
c Var 'aux1118' direct represents '1' with '14689'
14687 -14688 14689 0
-14689 14688 0
-14689 -14687 0
c Var 'aux1118' direct represents '2' with '-14688'
14687 14689 -14688 0
c Encoding variable: aux1119 with domain: int(0..2) (representing constraint ((field_00003_00004=4) + (field_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux1119' order represents '0' with '14690'
c Var 'aux1119' direct represents '0' with '14690'
c Var 'aux1119' order represents '1' with '14691'
-14690 14691 0
c Var 'aux1119' direct represents '1' with '14692'
14690 -14691 14692 0
-14692 14691 0
-14692 -14690 0
c Var 'aux1119' direct represents '2' with '-14691'
14690 14692 -14691 0
c Encoding variable: aux1120 with domain: int(0..3) (representing constraint ((field_00002_00004=4) + aux1119))
c Both direct and order encoding.
c Var 'aux1120' order represents '0' with '14693'
c Var 'aux1120' direct represents '0' with '14693'
c Var 'aux1120' order represents '1' with '14694'
-14693 14694 0
c Var 'aux1120' direct represents '1' with '14695'
14693 -14694 14695 0
-14695 14694 0
-14695 -14693 0
c Var 'aux1120' order represents '2' with '14696'
-14694 14696 0
c Var 'aux1120' direct represents '2' with '14697'
14694 -14696 14697 0
-14697 14696 0
-14697 -14694 0
c Var 'aux1120' direct represents '3' with '-14696'
14693 14695 14697 -14696 0
c Encoding variable: aux1121 with domain: int(0..4) (representing constraint (aux1116 + aux1118))
c Both direct and order encoding.
c Var 'aux1121' order represents '0' with '14698'
c Var 'aux1121' direct represents '0' with '14698'
c Var 'aux1121' order represents '1' with '14699'
-14698 14699 0
c Var 'aux1121' direct represents '1' with '14700'
14698 -14699 14700 0
-14700 14699 0
-14700 -14698 0
c Var 'aux1121' order represents '2' with '14701'
-14699 14701 0
c Var 'aux1121' direct represents '2' with '14702'
14699 -14701 14702 0
-14702 14701 0
-14702 -14699 0
c Var 'aux1121' order represents '3' with '14703'
-14701 14703 0
c Var 'aux1121' direct represents '3' with '14704'
14701 -14703 14704 0
-14704 14703 0
-14704 -14701 0
c Var 'aux1121' direct represents '4' with '-14703'
14698 14700 14702 14704 -14703 0
c Encoding variable: aux1122 with domain: int(0..2) (representing constraint ((field_00004_00004=5) + (field_00006_00004=5)))
c Both direct and order encoding.
c Var 'aux1122' order represents '0' with '14705'
c Var 'aux1122' direct represents '0' with '14705'
c Var 'aux1122' order represents '1' with '14706'
-14705 14706 0
c Var 'aux1122' direct represents '1' with '14707'
14705 -14706 14707 0
-14707 14706 0
-14707 -14705 0
c Var 'aux1122' direct represents '2' with '-14706'
14705 14707 -14706 0
c Encoding variable: aux1123 with domain: int(0..2) (representing constraint ((field_00001_00004=5) + (field_00009_00004=5)))
c Both direct and order encoding.
c Var 'aux1123' order represents '0' with '14708'
c Var 'aux1123' direct represents '0' with '14708'
c Var 'aux1123' order represents '1' with '14709'
-14708 14709 0
c Var 'aux1123' direct represents '1' with '14710'
14708 -14709 14710 0
-14710 14709 0
-14710 -14708 0
c Var 'aux1123' direct represents '2' with '-14709'
14708 14710 -14709 0
c Encoding variable: aux1124 with domain: int(0..2) (representing constraint ((field_00008_00004=5) + (field_00007_00004=5)))
c Both direct and order encoding.
c Var 'aux1124' order represents '0' with '14711'
c Var 'aux1124' direct represents '0' with '14711'
c Var 'aux1124' order represents '1' with '14712'
-14711 14712 0
c Var 'aux1124' direct represents '1' with '14713'
14711 -14712 14713 0
-14713 14712 0
-14713 -14711 0
c Var 'aux1124' direct represents '2' with '-14712'
14711 14713 -14712 0
c Encoding variable: aux1125 with domain: int(0..2) (representing constraint ((field_00003_00004=5) + (field_00005_00004=5)))
c Both direct and order encoding.
c Var 'aux1125' order represents '0' with '14714'
c Var 'aux1125' direct represents '0' with '14714'
c Var 'aux1125' order represents '1' with '14715'
-14714 14715 0
c Var 'aux1125' direct represents '1' with '14716'
14714 -14715 14716 0
-14716 14715 0
-14716 -14714 0
c Var 'aux1125' direct represents '2' with '-14715'
14714 14716 -14715 0
c Encoding variable: aux1126 with domain: int(0..3) (representing constraint ((field_00002_00004=5) + aux1125))
c Both direct and order encoding.
c Var 'aux1126' order represents '0' with '14717'
c Var 'aux1126' direct represents '0' with '14717'
c Var 'aux1126' order represents '1' with '14718'
-14717 14718 0
c Var 'aux1126' direct represents '1' with '14719'
14717 -14718 14719 0
-14719 14718 0
-14719 -14717 0
c Var 'aux1126' order represents '2' with '14720'
-14718 14720 0
c Var 'aux1126' direct represents '2' with '14721'
14718 -14720 14721 0
-14721 14720 0
-14721 -14718 0
c Var 'aux1126' direct represents '3' with '-14720'
14717 14719 14721 -14720 0
c Encoding variable: aux1127 with domain: int(0..4) (representing constraint (aux1122 + aux1124))
c Both direct and order encoding.
c Var 'aux1127' order represents '0' with '14722'
c Var 'aux1127' direct represents '0' with '14722'
c Var 'aux1127' order represents '1' with '14723'
-14722 14723 0
c Var 'aux1127' direct represents '1' with '14724'
14722 -14723 14724 0
-14724 14723 0
-14724 -14722 0
c Var 'aux1127' order represents '2' with '14725'
-14723 14725 0
c Var 'aux1127' direct represents '2' with '14726'
14723 -14725 14726 0
-14726 14725 0
-14726 -14723 0
c Var 'aux1127' order represents '3' with '14727'
-14725 14727 0
c Var 'aux1127' direct represents '3' with '14728'
14725 -14727 14728 0
-14728 14727 0
-14728 -14725 0
c Var 'aux1127' direct represents '4' with '-14727'
14722 14724 14726 14728 -14727 0
c Encoding variable: aux1128 with domain: int(0..2) (representing constraint ((field_00004_00004=6) + (field_00006_00004=6)))
c Both direct and order encoding.
c Var 'aux1128' order represents '0' with '14729'
c Var 'aux1128' direct represents '0' with '14729'
c Var 'aux1128' order represents '1' with '14730'
-14729 14730 0
c Var 'aux1128' direct represents '1' with '14731'
14729 -14730 14731 0
-14731 14730 0
-14731 -14729 0
c Var 'aux1128' direct represents '2' with '-14730'
14729 14731 -14730 0
c Encoding variable: aux1129 with domain: int(0..2) (representing constraint ((field_00001_00004=6) + (field_00009_00004=6)))
c Both direct and order encoding.
c Var 'aux1129' order represents '0' with '14732'
c Var 'aux1129' direct represents '0' with '14732'
c Var 'aux1129' order represents '1' with '14733'
-14732 14733 0
c Var 'aux1129' direct represents '1' with '14734'
14732 -14733 14734 0
-14734 14733 0
-14734 -14732 0
c Var 'aux1129' direct represents '2' with '-14733'
14732 14734 -14733 0
c Encoding variable: aux1130 with domain: int(0..2) (representing constraint ((field_00008_00004=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux1130' order represents '0' with '14735'
c Var 'aux1130' direct represents '0' with '14735'
c Var 'aux1130' order represents '1' with '14736'
-14735 14736 0
c Var 'aux1130' direct represents '1' with '14737'
14735 -14736 14737 0
-14737 14736 0
-14737 -14735 0
c Var 'aux1130' direct represents '2' with '-14736'
14735 14737 -14736 0
c Encoding variable: aux1131 with domain: int(0..2) (representing constraint ((field_00003_00004=6) + (field_00005_00004=6)))
c Both direct and order encoding.
c Var 'aux1131' order represents '0' with '14738'
c Var 'aux1131' direct represents '0' with '14738'
c Var 'aux1131' order represents '1' with '14739'
-14738 14739 0
c Var 'aux1131' direct represents '1' with '14740'
14738 -14739 14740 0
-14740 14739 0
-14740 -14738 0
c Var 'aux1131' direct represents '2' with '-14739'
14738 14740 -14739 0
c Encoding variable: aux1132 with domain: int(0..3) (representing constraint ((field_00002_00004=6) + aux1131))
c Both direct and order encoding.
c Var 'aux1132' order represents '0' with '14741'
c Var 'aux1132' direct represents '0' with '14741'
c Var 'aux1132' order represents '1' with '14742'
-14741 14742 0
c Var 'aux1132' direct represents '1' with '14743'
14741 -14742 14743 0
-14743 14742 0
-14743 -14741 0
c Var 'aux1132' order represents '2' with '14744'
-14742 14744 0
c Var 'aux1132' direct represents '2' with '14745'
14742 -14744 14745 0
-14745 14744 0
-14745 -14742 0
c Var 'aux1132' direct represents '3' with '-14744'
14741 14743 14745 -14744 0
c Encoding variable: aux1133 with domain: int(0..4) (representing constraint (aux1128 + aux1130))
c Both direct and order encoding.
c Var 'aux1133' order represents '0' with '14746'
c Var 'aux1133' direct represents '0' with '14746'
c Var 'aux1133' order represents '1' with '14747'
-14746 14747 0
c Var 'aux1133' direct represents '1' with '14748'
14746 -14747 14748 0
-14748 14747 0
-14748 -14746 0
c Var 'aux1133' order represents '2' with '14749'
-14747 14749 0
c Var 'aux1133' direct represents '2' with '14750'
14747 -14749 14750 0
-14750 14749 0
-14750 -14747 0
c Var 'aux1133' order represents '3' with '14751'
-14749 14751 0
c Var 'aux1133' direct represents '3' with '14752'
14749 -14751 14752 0
-14752 14751 0
-14752 -14749 0
c Var 'aux1133' direct represents '4' with '-14751'
14746 14748 14750 14752 -14751 0
c Encoding variable: aux1134 with domain: int(0..2) (representing constraint ((field_00004_00004=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux1134' order represents '0' with '14753'
c Var 'aux1134' direct represents '0' with '14753'
c Var 'aux1134' order represents '1' with '14754'
-14753 14754 0
c Var 'aux1134' direct represents '1' with '14755'
14753 -14754 14755 0
-14755 14754 0
-14755 -14753 0
c Var 'aux1134' direct represents '2' with '-14754'
14753 14755 -14754 0
c Encoding variable: aux1135 with domain: int(0..2) (representing constraint ((field_00001_00004=7) + (field_00009_00004=7)))
c Both direct and order encoding.
c Var 'aux1135' order represents '0' with '14756'
c Var 'aux1135' direct represents '0' with '14756'
c Var 'aux1135' order represents '1' with '14757'
-14756 14757 0
c Var 'aux1135' direct represents '1' with '14758'
14756 -14757 14758 0
-14758 14757 0
-14758 -14756 0
c Var 'aux1135' direct represents '2' with '-14757'
14756 14758 -14757 0
c Encoding variable: aux1136 with domain: int(0..2) (representing constraint ((field_00008_00004=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux1136' order represents '0' with '14759'
c Var 'aux1136' direct represents '0' with '14759'
c Var 'aux1136' order represents '1' with '14760'
-14759 14760 0
c Var 'aux1136' direct represents '1' with '14761'
14759 -14760 14761 0
-14761 14760 0
-14761 -14759 0
c Var 'aux1136' direct represents '2' with '-14760'
14759 14761 -14760 0
c Encoding variable: aux1137 with domain: int(0..2) (representing constraint ((field_00003_00004=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux1137' order represents '0' with '14762'
c Var 'aux1137' direct represents '0' with '14762'
c Var 'aux1137' order represents '1' with '14763'
-14762 14763 0
c Var 'aux1137' direct represents '1' with '14764'
14762 -14763 14764 0
-14764 14763 0
-14764 -14762 0
c Var 'aux1137' direct represents '2' with '-14763'
14762 14764 -14763 0
c Encoding variable: aux1138 with domain: int(0..3) (representing constraint ((field_00002_00004=7) + aux1137))
c Both direct and order encoding.
c Var 'aux1138' order represents '0' with '14765'
c Var 'aux1138' direct represents '0' with '14765'
c Var 'aux1138' order represents '1' with '14766'
-14765 14766 0
c Var 'aux1138' direct represents '1' with '14767'
14765 -14766 14767 0
-14767 14766 0
-14767 -14765 0
c Var 'aux1138' order represents '2' with '14768'
-14766 14768 0
c Var 'aux1138' direct represents '2' with '14769'
14766 -14768 14769 0
-14769 14768 0
-14769 -14766 0
c Var 'aux1138' direct represents '3' with '-14768'
14765 14767 14769 -14768 0
c Encoding variable: aux1139 with domain: int(0..4) (representing constraint (aux1134 + aux1136))
c Both direct and order encoding.
c Var 'aux1139' order represents '0' with '14770'
c Var 'aux1139' direct represents '0' with '14770'
c Var 'aux1139' order represents '1' with '14771'
-14770 14771 0
c Var 'aux1139' direct represents '1' with '14772'
14770 -14771 14772 0
-14772 14771 0
-14772 -14770 0
c Var 'aux1139' order represents '2' with '14773'
-14771 14773 0
c Var 'aux1139' direct represents '2' with '14774'
14771 -14773 14774 0
-14774 14773 0
-14774 -14771 0
c Var 'aux1139' order represents '3' with '14775'
-14773 14775 0
c Var 'aux1139' direct represents '3' with '14776'
14773 -14775 14776 0
-14776 14775 0
-14776 -14773 0
c Var 'aux1139' direct represents '4' with '-14775'
14770 14772 14774 14776 -14775 0
c Encoding variable: aux1140 with domain: int(0..2) (representing constraint ((field_00004_00004=8) + (field_00006_00004=8)))
c Both direct and order encoding.
c Var 'aux1140' order represents '0' with '14777'
c Var 'aux1140' direct represents '0' with '14777'
c Var 'aux1140' order represents '1' with '14778'
-14777 14778 0
c Var 'aux1140' direct represents '1' with '14779'
14777 -14778 14779 0
-14779 14778 0
-14779 -14777 0
c Var 'aux1140' direct represents '2' with '-14778'
14777 14779 -14778 0
c Encoding variable: aux1141 with domain: int(0..2) (representing constraint ((field_00001_00004=8) + (field_00009_00004=8)))
c Both direct and order encoding.
c Var 'aux1141' order represents '0' with '14780'
c Var 'aux1141' direct represents '0' with '14780'
c Var 'aux1141' order represents '1' with '14781'
-14780 14781 0
c Var 'aux1141' direct represents '1' with '14782'
14780 -14781 14782 0
-14782 14781 0
-14782 -14780 0
c Var 'aux1141' direct represents '2' with '-14781'
14780 14782 -14781 0
c Encoding variable: aux1142 with domain: int(0..2) (representing constraint ((field_00008_00004=8) + (field_00007_00004=8)))
c Both direct and order encoding.
c Var 'aux1142' order represents '0' with '14783'
c Var 'aux1142' direct represents '0' with '14783'
c Var 'aux1142' order represents '1' with '14784'
-14783 14784 0
c Var 'aux1142' direct represents '1' with '14785'
14783 -14784 14785 0
-14785 14784 0
-14785 -14783 0
c Var 'aux1142' direct represents '2' with '-14784'
14783 14785 -14784 0
c Encoding variable: aux1143 with domain: int(0..2) (representing constraint ((field_00003_00004=8) + (field_00005_00004=8)))
c Both direct and order encoding.
c Var 'aux1143' order represents '0' with '14786'
c Var 'aux1143' direct represents '0' with '14786'
c Var 'aux1143' order represents '1' with '14787'
-14786 14787 0
c Var 'aux1143' direct represents '1' with '14788'
14786 -14787 14788 0
-14788 14787 0
-14788 -14786 0
c Var 'aux1143' direct represents '2' with '-14787'
14786 14788 -14787 0
c Encoding variable: aux1144 with domain: int(0..3) (representing constraint ((field_00002_00004=8) + aux1143))
c Both direct and order encoding.
c Var 'aux1144' order represents '0' with '14789'
c Var 'aux1144' direct represents '0' with '14789'
c Var 'aux1144' order represents '1' with '14790'
-14789 14790 0
c Var 'aux1144' direct represents '1' with '14791'
14789 -14790 14791 0
-14791 14790 0
-14791 -14789 0
c Var 'aux1144' order represents '2' with '14792'
-14790 14792 0
c Var 'aux1144' direct represents '2' with '14793'
14790 -14792 14793 0
-14793 14792 0
-14793 -14790 0
c Var 'aux1144' direct represents '3' with '-14792'
14789 14791 14793 -14792 0
c Encoding variable: aux1145 with domain: int(0..4) (representing constraint (aux1140 + aux1142))
c Both direct and order encoding.
c Var 'aux1145' order represents '0' with '14794'
c Var 'aux1145' direct represents '0' with '14794'
c Var 'aux1145' order represents '1' with '14795'
-14794 14795 0
c Var 'aux1145' direct represents '1' with '14796'
14794 -14795 14796 0
-14796 14795 0
-14796 -14794 0
c Var 'aux1145' order represents '2' with '14797'
-14795 14797 0
c Var 'aux1145' direct represents '2' with '14798'
14795 -14797 14798 0
-14798 14797 0
-14798 -14795 0
c Var 'aux1145' order represents '3' with '14799'
-14797 14799 0
c Var 'aux1145' direct represents '3' with '14800'
14797 -14799 14800 0
-14800 14799 0
-14800 -14797 0
c Var 'aux1145' direct represents '4' with '-14799'
14794 14796 14798 14800 -14799 0
c Encoding variable: aux1146 with domain: int(0..2) (representing constraint ((field_00004_00004=9) + (field_00006_00004=9)))
c Both direct and order encoding.
c Var 'aux1146' order represents '0' with '14801'
c Var 'aux1146' direct represents '0' with '14801'
c Var 'aux1146' order represents '1' with '14802'
-14801 14802 0
c Var 'aux1146' direct represents '1' with '14803'
14801 -14802 14803 0
-14803 14802 0
-14803 -14801 0
c Var 'aux1146' direct represents '2' with '-14802'
14801 14803 -14802 0
c Encoding variable: aux1147 with domain: int(0..2) (representing constraint ((field_00001_00004=9) + (field_00009_00004=9)))
c Both direct and order encoding.
c Var 'aux1147' order represents '0' with '14804'
c Var 'aux1147' direct represents '0' with '14804'
c Var 'aux1147' order represents '1' with '14805'
-14804 14805 0
c Var 'aux1147' direct represents '1' with '14806'
14804 -14805 14806 0
-14806 14805 0
-14806 -14804 0
c Var 'aux1147' direct represents '2' with '-14805'
14804 14806 -14805 0
c Encoding variable: aux1148 with domain: int(0..2) (representing constraint ((field_00008_00004=9) + (field_00007_00004=9)))
c Both direct and order encoding.
c Var 'aux1148' order represents '0' with '14807'
c Var 'aux1148' direct represents '0' with '14807'
c Var 'aux1148' order represents '1' with '14808'
-14807 14808 0
c Var 'aux1148' direct represents '1' with '14809'
14807 -14808 14809 0
-14809 14808 0
-14809 -14807 0
c Var 'aux1148' direct represents '2' with '-14808'
14807 14809 -14808 0
c Encoding variable: aux1149 with domain: int(0..2) (representing constraint ((field_00003_00004=9) + (field_00005_00004=9)))
c Both direct and order encoding.
c Var 'aux1149' order represents '0' with '14810'
c Var 'aux1149' direct represents '0' with '14810'
c Var 'aux1149' order represents '1' with '14811'
-14810 14811 0
c Var 'aux1149' direct represents '1' with '14812'
14810 -14811 14812 0
-14812 14811 0
-14812 -14810 0
c Var 'aux1149' direct represents '2' with '-14811'
14810 14812 -14811 0
c Encoding variable: aux1150 with domain: int(0..3) (representing constraint ((field_00002_00004=9) + aux1149))
c Both direct and order encoding.
c Var 'aux1150' order represents '0' with '14813'
c Var 'aux1150' direct represents '0' with '14813'
c Var 'aux1150' order represents '1' with '14814'
-14813 14814 0
c Var 'aux1150' direct represents '1' with '14815'
14813 -14814 14815 0
-14815 14814 0
-14815 -14813 0
c Var 'aux1150' order represents '2' with '14816'
-14814 14816 0
c Var 'aux1150' direct represents '2' with '14817'
14814 -14816 14817 0
-14817 14816 0
-14817 -14814 0
c Var 'aux1150' direct represents '3' with '-14816'
14813 14815 14817 -14816 0
c Encoding variable: aux1151 with domain: int(0..4) (representing constraint (aux1146 + aux1148))
c Both direct and order encoding.
c Var 'aux1151' order represents '0' with '14818'
c Var 'aux1151' direct represents '0' with '14818'
c Var 'aux1151' order represents '1' with '14819'
-14818 14819 0
c Var 'aux1151' direct represents '1' with '14820'
14818 -14819 14820 0
-14820 14819 0
-14820 -14818 0
c Var 'aux1151' order represents '2' with '14821'
-14819 14821 0
c Var 'aux1151' direct represents '2' with '14822'
14819 -14821 14822 0
-14822 14821 0
-14822 -14819 0
c Var 'aux1151' order represents '3' with '14823'
-14821 14823 0
c Var 'aux1151' direct represents '3' with '14824'
14821 -14823 14824 0
-14824 14823 0
-14824 -14821 0
c Var 'aux1151' direct represents '4' with '-14823'
14818 14820 14822 14824 -14823 0
c Encoding variable: aux1152 with domain: int(0..2) (representing constraint ((field_00004_00005=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux1152' order represents '0' with '14825'
c Var 'aux1152' direct represents '0' with '14825'
c Var 'aux1152' order represents '1' with '14826'
-14825 14826 0
c Var 'aux1152' direct represents '1' with '14827'
14825 -14826 14827 0
-14827 14826 0
-14827 -14825 0
c Var 'aux1152' direct represents '2' with '-14826'
14825 14827 -14826 0
c Encoding variable: aux1153 with domain: int(0..2) (representing constraint ((field_00001_00005=1) + (field_00009_00005=1)))
c Both direct and order encoding.
c Var 'aux1153' order represents '0' with '14828'
c Var 'aux1153' direct represents '0' with '14828'
c Var 'aux1153' order represents '1' with '14829'
-14828 14829 0
c Var 'aux1153' direct represents '1' with '14830'
14828 -14829 14830 0
-14830 14829 0
-14830 -14828 0
c Var 'aux1153' direct represents '2' with '-14829'
14828 14830 -14829 0
c Encoding variable: aux1154 with domain: int(0..2) (representing constraint ((field_00008_00005=1) + (field_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux1154' order represents '0' with '14831'
c Var 'aux1154' direct represents '0' with '14831'
c Var 'aux1154' order represents '1' with '14832'
-14831 14832 0
c Var 'aux1154' direct represents '1' with '14833'
14831 -14832 14833 0
-14833 14832 0
-14833 -14831 0
c Var 'aux1154' direct represents '2' with '-14832'
14831 14833 -14832 0
c Encoding variable: aux1155 with domain: int(0..2) (representing constraint ((field_00003_00005=1) + (field_00005_00005=1)))
c Both direct and order encoding.
c Var 'aux1155' order represents '0' with '14834'
c Var 'aux1155' direct represents '0' with '14834'
c Var 'aux1155' order represents '1' with '14835'
-14834 14835 0
c Var 'aux1155' direct represents '1' with '14836'
14834 -14835 14836 0
-14836 14835 0
-14836 -14834 0
c Var 'aux1155' direct represents '2' with '-14835'
14834 14836 -14835 0
c Encoding variable: aux1156 with domain: int(0..3) (representing constraint ((field_00002_00005=1) + aux1155))
c Both direct and order encoding.
c Var 'aux1156' order represents '0' with '14837'
c Var 'aux1156' direct represents '0' with '14837'
c Var 'aux1156' order represents '1' with '14838'
-14837 14838 0
c Var 'aux1156' direct represents '1' with '14839'
14837 -14838 14839 0
-14839 14838 0
-14839 -14837 0
c Var 'aux1156' order represents '2' with '14840'
-14838 14840 0
c Var 'aux1156' direct represents '2' with '14841'
14838 -14840 14841 0
-14841 14840 0
-14841 -14838 0
c Var 'aux1156' direct represents '3' with '-14840'
14837 14839 14841 -14840 0
c Encoding variable: aux1157 with domain: int(0..4) (representing constraint (aux1152 + aux1154))
c Both direct and order encoding.
c Var 'aux1157' order represents '0' with '14842'
c Var 'aux1157' direct represents '0' with '14842'
c Var 'aux1157' order represents '1' with '14843'
-14842 14843 0
c Var 'aux1157' direct represents '1' with '14844'
14842 -14843 14844 0
-14844 14843 0
-14844 -14842 0
c Var 'aux1157' order represents '2' with '14845'
-14843 14845 0
c Var 'aux1157' direct represents '2' with '14846'
14843 -14845 14846 0
-14846 14845 0
-14846 -14843 0
c Var 'aux1157' order represents '3' with '14847'
-14845 14847 0
c Var 'aux1157' direct represents '3' with '14848'
14845 -14847 14848 0
-14848 14847 0
-14848 -14845 0
c Var 'aux1157' direct represents '4' with '-14847'
14842 14844 14846 14848 -14847 0
c Encoding variable: aux1158 with domain: int(0..2) (representing constraint ((field_00004_00005=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux1158' order represents '0' with '14849'
c Var 'aux1158' direct represents '0' with '14849'
c Var 'aux1158' order represents '1' with '14850'
-14849 14850 0
c Var 'aux1158' direct represents '1' with '14851'
14849 -14850 14851 0
-14851 14850 0
-14851 -14849 0
c Var 'aux1158' direct represents '2' with '-14850'
14849 14851 -14850 0
c Encoding variable: aux1159 with domain: int(0..2) (representing constraint ((field_00001_00005=2) + (field_00009_00005=2)))
c Both direct and order encoding.
c Var 'aux1159' order represents '0' with '14852'
c Var 'aux1159' direct represents '0' with '14852'
c Var 'aux1159' order represents '1' with '14853'
-14852 14853 0
c Var 'aux1159' direct represents '1' with '14854'
14852 -14853 14854 0
-14854 14853 0
-14854 -14852 0
c Var 'aux1159' direct represents '2' with '-14853'
14852 14854 -14853 0
c Encoding variable: aux1160 with domain: int(0..2) (representing constraint ((field_00008_00005=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux1160' order represents '0' with '14855'
c Var 'aux1160' direct represents '0' with '14855'
c Var 'aux1160' order represents '1' with '14856'
-14855 14856 0
c Var 'aux1160' direct represents '1' with '14857'
14855 -14856 14857 0
-14857 14856 0
-14857 -14855 0
c Var 'aux1160' direct represents '2' with '-14856'
14855 14857 -14856 0
c Encoding variable: aux1161 with domain: int(0..2) (representing constraint ((field_00003_00005=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux1161' order represents '0' with '14858'
c Var 'aux1161' direct represents '0' with '14858'
c Var 'aux1161' order represents '1' with '14859'
-14858 14859 0
c Var 'aux1161' direct represents '1' with '14860'
14858 -14859 14860 0
-14860 14859 0
-14860 -14858 0
c Var 'aux1161' direct represents '2' with '-14859'
14858 14860 -14859 0
c Encoding variable: aux1162 with domain: int(0..3) (representing constraint ((field_00002_00005=2) + aux1161))
c Both direct and order encoding.
c Var 'aux1162' order represents '0' with '14861'
c Var 'aux1162' direct represents '0' with '14861'
c Var 'aux1162' order represents '1' with '14862'
-14861 14862 0
c Var 'aux1162' direct represents '1' with '14863'
14861 -14862 14863 0
-14863 14862 0
-14863 -14861 0
c Var 'aux1162' order represents '2' with '14864'
-14862 14864 0
c Var 'aux1162' direct represents '2' with '14865'
14862 -14864 14865 0
-14865 14864 0
-14865 -14862 0
c Var 'aux1162' direct represents '3' with '-14864'
14861 14863 14865 -14864 0
c Encoding variable: aux1163 with domain: int(0..4) (representing constraint (aux1158 + aux1160))
c Both direct and order encoding.
c Var 'aux1163' order represents '0' with '14866'
c Var 'aux1163' direct represents '0' with '14866'
c Var 'aux1163' order represents '1' with '14867'
-14866 14867 0
c Var 'aux1163' direct represents '1' with '14868'
14866 -14867 14868 0
-14868 14867 0
-14868 -14866 0
c Var 'aux1163' order represents '2' with '14869'
-14867 14869 0
c Var 'aux1163' direct represents '2' with '14870'
14867 -14869 14870 0
-14870 14869 0
-14870 -14867 0
c Var 'aux1163' order represents '3' with '14871'
-14869 14871 0
c Var 'aux1163' direct represents '3' with '14872'
14869 -14871 14872 0
-14872 14871 0
-14872 -14869 0
c Var 'aux1163' direct represents '4' with '-14871'
14866 14868 14870 14872 -14871 0
c Encoding variable: aux1164 with domain: int(0..2) (representing constraint ((field_00004_00005=3) + (field_00006_00005=3)))
c Both direct and order encoding.
c Var 'aux1164' order represents '0' with '14873'
c Var 'aux1164' direct represents '0' with '14873'
c Var 'aux1164' order represents '1' with '14874'
-14873 14874 0
c Var 'aux1164' direct represents '1' with '14875'
14873 -14874 14875 0
-14875 14874 0
-14875 -14873 0
c Var 'aux1164' direct represents '2' with '-14874'
14873 14875 -14874 0
c Encoding variable: aux1165 with domain: int(0..2) (representing constraint ((field_00001_00005=3) + (field_00009_00005=3)))
c Both direct and order encoding.
c Var 'aux1165' order represents '0' with '14876'
c Var 'aux1165' direct represents '0' with '14876'
c Var 'aux1165' order represents '1' with '14877'
-14876 14877 0
c Var 'aux1165' direct represents '1' with '14878'
14876 -14877 14878 0
-14878 14877 0
-14878 -14876 0
c Var 'aux1165' direct represents '2' with '-14877'
14876 14878 -14877 0
c Encoding variable: aux1166 with domain: int(0..2) (representing constraint ((field_00008_00005=3) + (field_00007_00005=3)))
c Both direct and order encoding.
c Var 'aux1166' order represents '0' with '14879'
c Var 'aux1166' direct represents '0' with '14879'
c Var 'aux1166' order represents '1' with '14880'
-14879 14880 0
c Var 'aux1166' direct represents '1' with '14881'
14879 -14880 14881 0
-14881 14880 0
-14881 -14879 0
c Var 'aux1166' direct represents '2' with '-14880'
14879 14881 -14880 0
c Encoding variable: aux1167 with domain: int(0..2) (representing constraint ((field_00003_00005=3) + (field_00005_00005=3)))
c Both direct and order encoding.
c Var 'aux1167' order represents '0' with '14882'
c Var 'aux1167' direct represents '0' with '14882'
c Var 'aux1167' order represents '1' with '14883'
-14882 14883 0
c Var 'aux1167' direct represents '1' with '14884'
14882 -14883 14884 0
-14884 14883 0
-14884 -14882 0
c Var 'aux1167' direct represents '2' with '-14883'
14882 14884 -14883 0
c Encoding variable: aux1168 with domain: int(0..3) (representing constraint ((field_00002_00005=3) + aux1167))
c Both direct and order encoding.
c Var 'aux1168' order represents '0' with '14885'
c Var 'aux1168' direct represents '0' with '14885'
c Var 'aux1168' order represents '1' with '14886'
-14885 14886 0
c Var 'aux1168' direct represents '1' with '14887'
14885 -14886 14887 0
-14887 14886 0
-14887 -14885 0
c Var 'aux1168' order represents '2' with '14888'
-14886 14888 0
c Var 'aux1168' direct represents '2' with '14889'
14886 -14888 14889 0
-14889 14888 0
-14889 -14886 0
c Var 'aux1168' direct represents '3' with '-14888'
14885 14887 14889 -14888 0
c Encoding variable: aux1169 with domain: int(0..4) (representing constraint (aux1164 + aux1166))
c Both direct and order encoding.
c Var 'aux1169' order represents '0' with '14890'
c Var 'aux1169' direct represents '0' with '14890'
c Var 'aux1169' order represents '1' with '14891'
-14890 14891 0
c Var 'aux1169' direct represents '1' with '14892'
14890 -14891 14892 0
-14892 14891 0
-14892 -14890 0
c Var 'aux1169' order represents '2' with '14893'
-14891 14893 0
c Var 'aux1169' direct represents '2' with '14894'
14891 -14893 14894 0
-14894 14893 0
-14894 -14891 0
c Var 'aux1169' order represents '3' with '14895'
-14893 14895 0
c Var 'aux1169' direct represents '3' with '14896'
14893 -14895 14896 0
-14896 14895 0
-14896 -14893 0
c Var 'aux1169' direct represents '4' with '-14895'
14890 14892 14894 14896 -14895 0
c Encoding variable: aux1170 with domain: int(0..2) (representing constraint ((field_00004_00005=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux1170' order represents '0' with '14897'
c Var 'aux1170' direct represents '0' with '14897'
c Var 'aux1170' order represents '1' with '14898'
-14897 14898 0
c Var 'aux1170' direct represents '1' with '14899'
14897 -14898 14899 0
-14899 14898 0
-14899 -14897 0
c Var 'aux1170' direct represents '2' with '-14898'
14897 14899 -14898 0
c Encoding variable: aux1171 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00009_00005=4)))
c Both direct and order encoding.
c Var 'aux1171' order represents '0' with '14900'
c Var 'aux1171' direct represents '0' with '14900'
c Var 'aux1171' order represents '1' with '14901'
-14900 14901 0
c Var 'aux1171' direct represents '1' with '14902'
14900 -14901 14902 0
-14902 14901 0
-14902 -14900 0
c Var 'aux1171' direct represents '2' with '-14901'
14900 14902 -14901 0
c Encoding variable: aux1172 with domain: int(0..2) (representing constraint ((field_00008_00005=4) + (field_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux1172' order represents '0' with '14903'
c Var 'aux1172' direct represents '0' with '14903'
c Var 'aux1172' order represents '1' with '14904'
-14903 14904 0
c Var 'aux1172' direct represents '1' with '14905'
14903 -14904 14905 0
-14905 14904 0
-14905 -14903 0
c Var 'aux1172' direct represents '2' with '-14904'
14903 14905 -14904 0
c Encoding variable: aux1173 with domain: int(0..2) (representing constraint ((field_00003_00005=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux1173' order represents '0' with '14906'
c Var 'aux1173' direct represents '0' with '14906'
c Var 'aux1173' order represents '1' with '14907'
-14906 14907 0
c Var 'aux1173' direct represents '1' with '14908'
14906 -14907 14908 0
-14908 14907 0
-14908 -14906 0
c Var 'aux1173' direct represents '2' with '-14907'
14906 14908 -14907 0
c Encoding variable: aux1174 with domain: int(0..3) (representing constraint ((field_00002_00005=4) + aux1173))
c Both direct and order encoding.
c Var 'aux1174' order represents '0' with '14909'
c Var 'aux1174' direct represents '0' with '14909'
c Var 'aux1174' order represents '1' with '14910'
-14909 14910 0
c Var 'aux1174' direct represents '1' with '14911'
14909 -14910 14911 0
-14911 14910 0
-14911 -14909 0
c Var 'aux1174' order represents '2' with '14912'
-14910 14912 0
c Var 'aux1174' direct represents '2' with '14913'
14910 -14912 14913 0
-14913 14912 0
-14913 -14910 0
c Var 'aux1174' direct represents '3' with '-14912'
14909 14911 14913 -14912 0
c Encoding variable: aux1175 with domain: int(0..4) (representing constraint (aux1170 + aux1172))
c Both direct and order encoding.
c Var 'aux1175' order represents '0' with '14914'
c Var 'aux1175' direct represents '0' with '14914'
c Var 'aux1175' order represents '1' with '14915'
-14914 14915 0
c Var 'aux1175' direct represents '1' with '14916'
14914 -14915 14916 0
-14916 14915 0
-14916 -14914 0
c Var 'aux1175' order represents '2' with '14917'
-14915 14917 0
c Var 'aux1175' direct represents '2' with '14918'
14915 -14917 14918 0
-14918 14917 0
-14918 -14915 0
c Var 'aux1175' order represents '3' with '14919'
-14917 14919 0
c Var 'aux1175' direct represents '3' with '14920'
14917 -14919 14920 0
-14920 14919 0
-14920 -14917 0
c Var 'aux1175' direct represents '4' with '-14919'
14914 14916 14918 14920 -14919 0
c Encoding variable: aux1176 with domain: int(0..2) (representing constraint ((field_00004_00005=5) + (field_00006_00005=5)))
c Both direct and order encoding.
c Var 'aux1176' order represents '0' with '14921'
c Var 'aux1176' direct represents '0' with '14921'
c Var 'aux1176' order represents '1' with '14922'
-14921 14922 0
c Var 'aux1176' direct represents '1' with '14923'
14921 -14922 14923 0
-14923 14922 0
-14923 -14921 0
c Var 'aux1176' direct represents '2' with '-14922'
14921 14923 -14922 0
c Encoding variable: aux1177 with domain: int(0..2) (representing constraint ((field_00001_00005=5) + (field_00009_00005=5)))
c Both direct and order encoding.
c Var 'aux1177' order represents '0' with '14924'
c Var 'aux1177' direct represents '0' with '14924'
c Var 'aux1177' order represents '1' with '14925'
-14924 14925 0
c Var 'aux1177' direct represents '1' with '14926'
14924 -14925 14926 0
-14926 14925 0
-14926 -14924 0
c Var 'aux1177' direct represents '2' with '-14925'
14924 14926 -14925 0
c Encoding variable: aux1178 with domain: int(0..2) (representing constraint ((field_00008_00005=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux1178' order represents '0' with '14927'
c Var 'aux1178' direct represents '0' with '14927'
c Var 'aux1178' order represents '1' with '14928'
-14927 14928 0
c Var 'aux1178' direct represents '1' with '14929'
14927 -14928 14929 0
-14929 14928 0
-14929 -14927 0
c Var 'aux1178' direct represents '2' with '-14928'
14927 14929 -14928 0
c Encoding variable: aux1179 with domain: int(0..2) (representing constraint ((field_00003_00005=5) + (field_00005_00005=5)))
c Both direct and order encoding.
c Var 'aux1179' order represents '0' with '14930'
c Var 'aux1179' direct represents '0' with '14930'
c Var 'aux1179' order represents '1' with '14931'
-14930 14931 0
c Var 'aux1179' direct represents '1' with '14932'
14930 -14931 14932 0
-14932 14931 0
-14932 -14930 0
c Var 'aux1179' direct represents '2' with '-14931'
14930 14932 -14931 0
c Encoding variable: aux1180 with domain: int(0..3) (representing constraint ((field_00002_00005=5) + aux1179))
c Both direct and order encoding.
c Var 'aux1180' order represents '0' with '14933'
c Var 'aux1180' direct represents '0' with '14933'
c Var 'aux1180' order represents '1' with '14934'
-14933 14934 0
c Var 'aux1180' direct represents '1' with '14935'
14933 -14934 14935 0
-14935 14934 0
-14935 -14933 0
c Var 'aux1180' order represents '2' with '14936'
-14934 14936 0
c Var 'aux1180' direct represents '2' with '14937'
14934 -14936 14937 0
-14937 14936 0
-14937 -14934 0
c Var 'aux1180' direct represents '3' with '-14936'
14933 14935 14937 -14936 0
c Encoding variable: aux1181 with domain: int(0..4) (representing constraint (aux1176 + aux1178))
c Both direct and order encoding.
c Var 'aux1181' order represents '0' with '14938'
c Var 'aux1181' direct represents '0' with '14938'
c Var 'aux1181' order represents '1' with '14939'
-14938 14939 0
c Var 'aux1181' direct represents '1' with '14940'
14938 -14939 14940 0
-14940 14939 0
-14940 -14938 0
c Var 'aux1181' order represents '2' with '14941'
-14939 14941 0
c Var 'aux1181' direct represents '2' with '14942'
14939 -14941 14942 0
-14942 14941 0
-14942 -14939 0
c Var 'aux1181' order represents '3' with '14943'
-14941 14943 0
c Var 'aux1181' direct represents '3' with '14944'
14941 -14943 14944 0
-14944 14943 0
-14944 -14941 0
c Var 'aux1181' direct represents '4' with '-14943'
14938 14940 14942 14944 -14943 0
c Encoding variable: aux1182 with domain: int(0..2) (representing constraint ((field_00004_00005=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux1182' order represents '0' with '14945'
c Var 'aux1182' direct represents '0' with '14945'
c Var 'aux1182' order represents '1' with '14946'
-14945 14946 0
c Var 'aux1182' direct represents '1' with '14947'
14945 -14946 14947 0
-14947 14946 0
-14947 -14945 0
c Var 'aux1182' direct represents '2' with '-14946'
14945 14947 -14946 0
c Encoding variable: aux1183 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00009_00005=6)))
c Both direct and order encoding.
c Var 'aux1183' order represents '0' with '14948'
c Var 'aux1183' direct represents '0' with '14948'
c Var 'aux1183' order represents '1' with '14949'
-14948 14949 0
c Var 'aux1183' direct represents '1' with '14950'
14948 -14949 14950 0
-14950 14949 0
-14950 -14948 0
c Var 'aux1183' direct represents '2' with '-14949'
14948 14950 -14949 0
c Encoding variable: aux1184 with domain: int(0..2) (representing constraint ((field_00008_00005=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux1184' order represents '0' with '14951'
c Var 'aux1184' direct represents '0' with '14951'
c Var 'aux1184' order represents '1' with '14952'
-14951 14952 0
c Var 'aux1184' direct represents '1' with '14953'
14951 -14952 14953 0
-14953 14952 0
-14953 -14951 0
c Var 'aux1184' direct represents '2' with '-14952'
14951 14953 -14952 0
c Encoding variable: aux1185 with domain: int(0..2) (representing constraint ((field_00003_00005=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux1185' order represents '0' with '14954'
c Var 'aux1185' direct represents '0' with '14954'
c Var 'aux1185' order represents '1' with '14955'
-14954 14955 0
c Var 'aux1185' direct represents '1' with '14956'
14954 -14955 14956 0
-14956 14955 0
-14956 -14954 0
c Var 'aux1185' direct represents '2' with '-14955'
14954 14956 -14955 0
c Encoding variable: aux1186 with domain: int(0..3) (representing constraint ((field_00002_00005=6) + aux1185))
c Both direct and order encoding.
c Var 'aux1186' order represents '0' with '14957'
c Var 'aux1186' direct represents '0' with '14957'
c Var 'aux1186' order represents '1' with '14958'
-14957 14958 0
c Var 'aux1186' direct represents '1' with '14959'
14957 -14958 14959 0
-14959 14958 0
-14959 -14957 0
c Var 'aux1186' order represents '2' with '14960'
-14958 14960 0
c Var 'aux1186' direct represents '2' with '14961'
14958 -14960 14961 0
-14961 14960 0
-14961 -14958 0
c Var 'aux1186' direct represents '3' with '-14960'
14957 14959 14961 -14960 0
c Encoding variable: aux1187 with domain: int(0..4) (representing constraint (aux1182 + aux1184))
c Both direct and order encoding.
c Var 'aux1187' order represents '0' with '14962'
c Var 'aux1187' direct represents '0' with '14962'
c Var 'aux1187' order represents '1' with '14963'
-14962 14963 0
c Var 'aux1187' direct represents '1' with '14964'
14962 -14963 14964 0
-14964 14963 0
-14964 -14962 0
c Var 'aux1187' order represents '2' with '14965'
-14963 14965 0
c Var 'aux1187' direct represents '2' with '14966'
14963 -14965 14966 0
-14966 14965 0
-14966 -14963 0
c Var 'aux1187' order represents '3' with '14967'
-14965 14967 0
c Var 'aux1187' direct represents '3' with '14968'
14965 -14967 14968 0
-14968 14967 0
-14968 -14965 0
c Var 'aux1187' direct represents '4' with '-14967'
14962 14964 14966 14968 -14967 0
c Encoding variable: aux1188 with domain: int(0..2) (representing constraint ((field_00004_00005=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux1188' order represents '0' with '14969'
c Var 'aux1188' direct represents '0' with '14969'
c Var 'aux1188' order represents '1' with '14970'
-14969 14970 0
c Var 'aux1188' direct represents '1' with '14971'
14969 -14970 14971 0
-14971 14970 0
-14971 -14969 0
c Var 'aux1188' direct represents '2' with '-14970'
14969 14971 -14970 0
c Encoding variable: aux1189 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux1189' order represents '0' with '14972'
c Var 'aux1189' direct represents '0' with '14972'
c Var 'aux1189' order represents '1' with '14973'
-14972 14973 0
c Var 'aux1189' direct represents '1' with '14974'
14972 -14973 14974 0
-14974 14973 0
-14974 -14972 0
c Var 'aux1189' direct represents '2' with '-14973'
14972 14974 -14973 0
c Encoding variable: aux1190 with domain: int(0..2) (representing constraint ((field_00008_00005=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux1190' order represents '0' with '14975'
c Var 'aux1190' direct represents '0' with '14975'
c Var 'aux1190' order represents '1' with '14976'
-14975 14976 0
c Var 'aux1190' direct represents '1' with '14977'
14975 -14976 14977 0
-14977 14976 0
-14977 -14975 0
c Var 'aux1190' direct represents '2' with '-14976'
14975 14977 -14976 0
c Encoding variable: aux1191 with domain: int(0..2) (representing constraint ((field_00003_00005=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux1191' order represents '0' with '14978'
c Var 'aux1191' direct represents '0' with '14978'
c Var 'aux1191' order represents '1' with '14979'
-14978 14979 0
c Var 'aux1191' direct represents '1' with '14980'
14978 -14979 14980 0
-14980 14979 0
-14980 -14978 0
c Var 'aux1191' direct represents '2' with '-14979'
14978 14980 -14979 0
c Encoding variable: aux1192 with domain: int(0..3) (representing constraint ((field_00002_00005=7) + aux1191))
c Both direct and order encoding.
c Var 'aux1192' order represents '0' with '14981'
c Var 'aux1192' direct represents '0' with '14981'
c Var 'aux1192' order represents '1' with '14982'
-14981 14982 0
c Var 'aux1192' direct represents '1' with '14983'
14981 -14982 14983 0
-14983 14982 0
-14983 -14981 0
c Var 'aux1192' order represents '2' with '14984'
-14982 14984 0
c Var 'aux1192' direct represents '2' with '14985'
14982 -14984 14985 0
-14985 14984 0
-14985 -14982 0
c Var 'aux1192' direct represents '3' with '-14984'
14981 14983 14985 -14984 0
c Encoding variable: aux1193 with domain: int(0..4) (representing constraint (aux1188 + aux1190))
c Both direct and order encoding.
c Var 'aux1193' order represents '0' with '14986'
c Var 'aux1193' direct represents '0' with '14986'
c Var 'aux1193' order represents '1' with '14987'
-14986 14987 0
c Var 'aux1193' direct represents '1' with '14988'
14986 -14987 14988 0
-14988 14987 0
-14988 -14986 0
c Var 'aux1193' order represents '2' with '14989'
-14987 14989 0
c Var 'aux1193' direct represents '2' with '14990'
14987 -14989 14990 0
-14990 14989 0
-14990 -14987 0
c Var 'aux1193' order represents '3' with '14991'
-14989 14991 0
c Var 'aux1193' direct represents '3' with '14992'
14989 -14991 14992 0
-14992 14991 0
-14992 -14989 0
c Var 'aux1193' direct represents '4' with '-14991'
14986 14988 14990 14992 -14991 0
c Encoding variable: aux1194 with domain: int(0..2) (representing constraint ((field_00004_00005=8) + (field_00006_00005=8)))
c Both direct and order encoding.
c Var 'aux1194' order represents '0' with '14993'
c Var 'aux1194' direct represents '0' with '14993'
c Var 'aux1194' order represents '1' with '14994'
-14993 14994 0
c Var 'aux1194' direct represents '1' with '14995'
14993 -14994 14995 0
-14995 14994 0
-14995 -14993 0
c Var 'aux1194' direct represents '2' with '-14994'
14993 14995 -14994 0
c Encoding variable: aux1195 with domain: int(0..2) (representing constraint ((field_00001_00005=8) + (field_00009_00005=8)))
c Both direct and order encoding.
c Var 'aux1195' order represents '0' with '14996'
c Var 'aux1195' direct represents '0' with '14996'
c Var 'aux1195' order represents '1' with '14997'
-14996 14997 0
c Var 'aux1195' direct represents '1' with '14998'
14996 -14997 14998 0
-14998 14997 0
-14998 -14996 0
c Var 'aux1195' direct represents '2' with '-14997'
14996 14998 -14997 0
c Encoding variable: aux1196 with domain: int(0..2) (representing constraint ((field_00008_00005=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux1196' order represents '0' with '14999'
c Var 'aux1196' direct represents '0' with '14999'
c Var 'aux1196' order represents '1' with '15000'
-14999 15000 0
c Var 'aux1196' direct represents '1' with '15001'
14999 -15000 15001 0
-15001 15000 0
-15001 -14999 0
c Var 'aux1196' direct represents '2' with '-15000'
14999 15001 -15000 0
c Encoding variable: aux1197 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux1197' order represents '0' with '15002'
c Var 'aux1197' direct represents '0' with '15002'
c Var 'aux1197' order represents '1' with '15003'
-15002 15003 0
c Var 'aux1197' direct represents '1' with '15004'
15002 -15003 15004 0
-15004 15003 0
-15004 -15002 0
c Var 'aux1197' direct represents '2' with '-15003'
15002 15004 -15003 0
c Encoding variable: aux1198 with domain: int(0..3) (representing constraint ((field_00002_00005=8) + aux1197))
c Both direct and order encoding.
c Var 'aux1198' order represents '0' with '15005'
c Var 'aux1198' direct represents '0' with '15005'
c Var 'aux1198' order represents '1' with '15006'
-15005 15006 0
c Var 'aux1198' direct represents '1' with '15007'
15005 -15006 15007 0
-15007 15006 0
-15007 -15005 0
c Var 'aux1198' order represents '2' with '15008'
-15006 15008 0
c Var 'aux1198' direct represents '2' with '15009'
15006 -15008 15009 0
-15009 15008 0
-15009 -15006 0
c Var 'aux1198' direct represents '3' with '-15008'
15005 15007 15009 -15008 0
c Encoding variable: aux1199 with domain: int(0..4) (representing constraint (aux1194 + aux1196))
c Both direct and order encoding.
c Var 'aux1199' order represents '0' with '15010'
c Var 'aux1199' direct represents '0' with '15010'
c Var 'aux1199' order represents '1' with '15011'
-15010 15011 0
c Var 'aux1199' direct represents '1' with '15012'
15010 -15011 15012 0
-15012 15011 0
-15012 -15010 0
c Var 'aux1199' order represents '2' with '15013'
-15011 15013 0
c Var 'aux1199' direct represents '2' with '15014'
15011 -15013 15014 0
-15014 15013 0
-15014 -15011 0
c Var 'aux1199' order represents '3' with '15015'
-15013 15015 0
c Var 'aux1199' direct represents '3' with '15016'
15013 -15015 15016 0
-15016 15015 0
-15016 -15013 0
c Var 'aux1199' direct represents '4' with '-15015'
15010 15012 15014 15016 -15015 0
c Encoding variable: aux1200 with domain: int(0..2) (representing constraint ((field_00004_00005=9) + (field_00006_00005=9)))
c Both direct and order encoding.
c Var 'aux1200' order represents '0' with '15017'
c Var 'aux1200' direct represents '0' with '15017'
c Var 'aux1200' order represents '1' with '15018'
-15017 15018 0
c Var 'aux1200' direct represents '1' with '15019'
15017 -15018 15019 0
-15019 15018 0
-15019 -15017 0
c Var 'aux1200' direct represents '2' with '-15018'
15017 15019 -15018 0
c Encoding variable: aux1201 with domain: int(0..2) (representing constraint ((field_00001_00005=9) + (field_00009_00005=9)))
c Both direct and order encoding.
c Var 'aux1201' order represents '0' with '15020'
c Var 'aux1201' direct represents '0' with '15020'
c Var 'aux1201' order represents '1' with '15021'
-15020 15021 0
c Var 'aux1201' direct represents '1' with '15022'
15020 -15021 15022 0
-15022 15021 0
-15022 -15020 0
c Var 'aux1201' direct represents '2' with '-15021'
15020 15022 -15021 0
c Encoding variable: aux1202 with domain: int(0..2) (representing constraint ((field_00008_00005=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux1202' order represents '0' with '15023'
c Var 'aux1202' direct represents '0' with '15023'
c Var 'aux1202' order represents '1' with '15024'
-15023 15024 0
c Var 'aux1202' direct represents '1' with '15025'
15023 -15024 15025 0
-15025 15024 0
-15025 -15023 0
c Var 'aux1202' direct represents '2' with '-15024'
15023 15025 -15024 0
c Encoding variable: aux1203 with domain: int(0..2) (representing constraint ((field_00003_00005=9) + (field_00005_00005=9)))
c Both direct and order encoding.
c Var 'aux1203' order represents '0' with '15026'
c Var 'aux1203' direct represents '0' with '15026'
c Var 'aux1203' order represents '1' with '15027'
-15026 15027 0
c Var 'aux1203' direct represents '1' with '15028'
15026 -15027 15028 0
-15028 15027 0
-15028 -15026 0
c Var 'aux1203' direct represents '2' with '-15027'
15026 15028 -15027 0
c Encoding variable: aux1204 with domain: int(0..3) (representing constraint ((field_00002_00005=9) + aux1203))
c Both direct and order encoding.
c Var 'aux1204' order represents '0' with '15029'
c Var 'aux1204' direct represents '0' with '15029'
c Var 'aux1204' order represents '1' with '15030'
-15029 15030 0
c Var 'aux1204' direct represents '1' with '15031'
15029 -15030 15031 0
-15031 15030 0
-15031 -15029 0
c Var 'aux1204' order represents '2' with '15032'
-15030 15032 0
c Var 'aux1204' direct represents '2' with '15033'
15030 -15032 15033 0
-15033 15032 0
-15033 -15030 0
c Var 'aux1204' direct represents '3' with '-15032'
15029 15031 15033 -15032 0
c Encoding variable: aux1205 with domain: int(0..4) (representing constraint (aux1200 + aux1202))
c Both direct and order encoding.
c Var 'aux1205' order represents '0' with '15034'
c Var 'aux1205' direct represents '0' with '15034'
c Var 'aux1205' order represents '1' with '15035'
-15034 15035 0
c Var 'aux1205' direct represents '1' with '15036'
15034 -15035 15036 0
-15036 15035 0
-15036 -15034 0
c Var 'aux1205' order represents '2' with '15037'
-15035 15037 0
c Var 'aux1205' direct represents '2' with '15038'
15035 -15037 15038 0
-15038 15037 0
-15038 -15035 0
c Var 'aux1205' order represents '3' with '15039'
-15037 15039 0
c Var 'aux1205' direct represents '3' with '15040'
15037 -15039 15040 0
-15040 15039 0
-15040 -15037 0
c Var 'aux1205' direct represents '4' with '-15039'
15034 15036 15038 15040 -15039 0
c Encoding variable: aux1206 with domain: int(0..2) (representing constraint ((field_00004_00006=1) + (field_00006_00006=1)))
c Both direct and order encoding.
c Var 'aux1206' order represents '0' with '15041'
c Var 'aux1206' direct represents '0' with '15041'
c Var 'aux1206' order represents '1' with '15042'
-15041 15042 0
c Var 'aux1206' direct represents '1' with '15043'
15041 -15042 15043 0
-15043 15042 0
-15043 -15041 0
c Var 'aux1206' direct represents '2' with '-15042'
15041 15043 -15042 0
c Encoding variable: aux1207 with domain: int(0..2) (representing constraint ((field_00001_00006=1) + (field_00009_00006=1)))
c Both direct and order encoding.
c Var 'aux1207' order represents '0' with '15044'
c Var 'aux1207' direct represents '0' with '15044'
c Var 'aux1207' order represents '1' with '15045'
-15044 15045 0
c Var 'aux1207' direct represents '1' with '15046'
15044 -15045 15046 0
-15046 15045 0
-15046 -15044 0
c Var 'aux1207' direct represents '2' with '-15045'
15044 15046 -15045 0
c Encoding variable: aux1208 with domain: int(0..2) (representing constraint ((field_00008_00006=1) + (field_00007_00006=1)))
c Both direct and order encoding.
c Var 'aux1208' order represents '0' with '15047'
c Var 'aux1208' direct represents '0' with '15047'
c Var 'aux1208' order represents '1' with '15048'
-15047 15048 0
c Var 'aux1208' direct represents '1' with '15049'
15047 -15048 15049 0
-15049 15048 0
-15049 -15047 0
c Var 'aux1208' direct represents '2' with '-15048'
15047 15049 -15048 0
c Encoding variable: aux1209 with domain: int(0..2) (representing constraint ((field_00003_00006=1) + (field_00005_00006=1)))
c Both direct and order encoding.
c Var 'aux1209' order represents '0' with '15050'
c Var 'aux1209' direct represents '0' with '15050'
c Var 'aux1209' order represents '1' with '15051'
-15050 15051 0
c Var 'aux1209' direct represents '1' with '15052'
15050 -15051 15052 0
-15052 15051 0
-15052 -15050 0
c Var 'aux1209' direct represents '2' with '-15051'
15050 15052 -15051 0
c Encoding variable: aux1210 with domain: int(0..3) (representing constraint ((field_00002_00006=1) + aux1209))
c Both direct and order encoding.
c Var 'aux1210' order represents '0' with '15053'
c Var 'aux1210' direct represents '0' with '15053'
c Var 'aux1210' order represents '1' with '15054'
-15053 15054 0
c Var 'aux1210' direct represents '1' with '15055'
15053 -15054 15055 0
-15055 15054 0
-15055 -15053 0
c Var 'aux1210' order represents '2' with '15056'
-15054 15056 0
c Var 'aux1210' direct represents '2' with '15057'
15054 -15056 15057 0
-15057 15056 0
-15057 -15054 0
c Var 'aux1210' direct represents '3' with '-15056'
15053 15055 15057 -15056 0
c Encoding variable: aux1211 with domain: int(0..4) (representing constraint (aux1206 + aux1208))
c Both direct and order encoding.
c Var 'aux1211' order represents '0' with '15058'
c Var 'aux1211' direct represents '0' with '15058'
c Var 'aux1211' order represents '1' with '15059'
-15058 15059 0
c Var 'aux1211' direct represents '1' with '15060'
15058 -15059 15060 0
-15060 15059 0
-15060 -15058 0
c Var 'aux1211' order represents '2' with '15061'
-15059 15061 0
c Var 'aux1211' direct represents '2' with '15062'
15059 -15061 15062 0
-15062 15061 0
-15062 -15059 0
c Var 'aux1211' order represents '3' with '15063'
-15061 15063 0
c Var 'aux1211' direct represents '3' with '15064'
15061 -15063 15064 0
-15064 15063 0
-15064 -15061 0
c Var 'aux1211' direct represents '4' with '-15063'
15058 15060 15062 15064 -15063 0
c Encoding variable: aux1212 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00006_00006=2)))
c Both direct and order encoding.
c Var 'aux1212' order represents '0' with '15065'
c Var 'aux1212' direct represents '0' with '15065'
c Var 'aux1212' order represents '1' with '15066'
-15065 15066 0
c Var 'aux1212' direct represents '1' with '15067'
15065 -15066 15067 0
-15067 15066 0
-15067 -15065 0
c Var 'aux1212' direct represents '2' with '-15066'
15065 15067 -15066 0
c Encoding variable: aux1213 with domain: int(0..2) (representing constraint ((field_00001_00006=2) + (field_00009_00006=2)))
c Both direct and order encoding.
c Var 'aux1213' order represents '0' with '15068'
c Var 'aux1213' direct represents '0' with '15068'
c Var 'aux1213' order represents '1' with '15069'
-15068 15069 0
c Var 'aux1213' direct represents '1' with '15070'
15068 -15069 15070 0
-15070 15069 0
-15070 -15068 0
c Var 'aux1213' direct represents '2' with '-15069'
15068 15070 -15069 0
c Encoding variable: aux1214 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00007_00006=2)))
c Both direct and order encoding.
c Var 'aux1214' order represents '0' with '15071'
c Var 'aux1214' direct represents '0' with '15071'
c Var 'aux1214' order represents '1' with '15072'
-15071 15072 0
c Var 'aux1214' direct represents '1' with '15073'
15071 -15072 15073 0
-15073 15072 0
-15073 -15071 0
c Var 'aux1214' direct represents '2' with '-15072'
15071 15073 -15072 0
c Encoding variable: aux1215 with domain: int(0..2) (representing constraint ((field_00003_00006=2) + (field_00005_00006=2)))
c Both direct and order encoding.
c Var 'aux1215' order represents '0' with '15074'
c Var 'aux1215' direct represents '0' with '15074'
c Var 'aux1215' order represents '1' with '15075'
-15074 15075 0
c Var 'aux1215' direct represents '1' with '15076'
15074 -15075 15076 0
-15076 15075 0
-15076 -15074 0
c Var 'aux1215' direct represents '2' with '-15075'
15074 15076 -15075 0
c Encoding variable: aux1216 with domain: int(0..3) (representing constraint ((field_00002_00006=2) + aux1215))
c Both direct and order encoding.
c Var 'aux1216' order represents '0' with '15077'
c Var 'aux1216' direct represents '0' with '15077'
c Var 'aux1216' order represents '1' with '15078'
-15077 15078 0
c Var 'aux1216' direct represents '1' with '15079'
15077 -15078 15079 0
-15079 15078 0
-15079 -15077 0
c Var 'aux1216' order represents '2' with '15080'
-15078 15080 0
c Var 'aux1216' direct represents '2' with '15081'
15078 -15080 15081 0
-15081 15080 0
-15081 -15078 0
c Var 'aux1216' direct represents '3' with '-15080'
15077 15079 15081 -15080 0
c Encoding variable: aux1217 with domain: int(0..4) (representing constraint (aux1212 + aux1214))
c Both direct and order encoding.
c Var 'aux1217' order represents '0' with '15082'
c Var 'aux1217' direct represents '0' with '15082'
c Var 'aux1217' order represents '1' with '15083'
-15082 15083 0
c Var 'aux1217' direct represents '1' with '15084'
15082 -15083 15084 0
-15084 15083 0
-15084 -15082 0
c Var 'aux1217' order represents '2' with '15085'
-15083 15085 0
c Var 'aux1217' direct represents '2' with '15086'
15083 -15085 15086 0
-15086 15085 0
-15086 -15083 0
c Var 'aux1217' order represents '3' with '15087'
-15085 15087 0
c Var 'aux1217' direct represents '3' with '15088'
15085 -15087 15088 0
-15088 15087 0
-15088 -15085 0
c Var 'aux1217' direct represents '4' with '-15087'
15082 15084 15086 15088 -15087 0
c Encoding variable: aux1218 with domain: int(0..2) (representing constraint ((field_00004_00006=3) + (field_00006_00006=3)))
c Both direct and order encoding.
c Var 'aux1218' order represents '0' with '15089'
c Var 'aux1218' direct represents '0' with '15089'
c Var 'aux1218' order represents '1' with '15090'
-15089 15090 0
c Var 'aux1218' direct represents '1' with '15091'
15089 -15090 15091 0
-15091 15090 0
-15091 -15089 0
c Var 'aux1218' direct represents '2' with '-15090'
15089 15091 -15090 0
c Encoding variable: aux1219 with domain: int(0..2) (representing constraint ((field_00001_00006=3) + (field_00009_00006=3)))
c Both direct and order encoding.
c Var 'aux1219' order represents '0' with '15092'
c Var 'aux1219' direct represents '0' with '15092'
c Var 'aux1219' order represents '1' with '15093'
-15092 15093 0
c Var 'aux1219' direct represents '1' with '15094'
15092 -15093 15094 0
-15094 15093 0
-15094 -15092 0
c Var 'aux1219' direct represents '2' with '-15093'
15092 15094 -15093 0
c Encoding variable: aux1220 with domain: int(0..2) (representing constraint ((field_00008_00006=3) + (field_00007_00006=3)))
c Both direct and order encoding.
c Var 'aux1220' order represents '0' with '15095'
c Var 'aux1220' direct represents '0' with '15095'
c Var 'aux1220' order represents '1' with '15096'
-15095 15096 0
c Var 'aux1220' direct represents '1' with '15097'
15095 -15096 15097 0
-15097 15096 0
-15097 -15095 0
c Var 'aux1220' direct represents '2' with '-15096'
15095 15097 -15096 0
c Encoding variable: aux1221 with domain: int(0..2) (representing constraint ((field_00003_00006=3) + (field_00005_00006=3)))
c Both direct and order encoding.
c Var 'aux1221' order represents '0' with '15098'
c Var 'aux1221' direct represents '0' with '15098'
c Var 'aux1221' order represents '1' with '15099'
-15098 15099 0
c Var 'aux1221' direct represents '1' with '15100'
15098 -15099 15100 0
-15100 15099 0
-15100 -15098 0
c Var 'aux1221' direct represents '2' with '-15099'
15098 15100 -15099 0
c Encoding variable: aux1222 with domain: int(0..3) (representing constraint ((field_00002_00006=3) + aux1221))
c Both direct and order encoding.
c Var 'aux1222' order represents '0' with '15101'
c Var 'aux1222' direct represents '0' with '15101'
c Var 'aux1222' order represents '1' with '15102'
-15101 15102 0
c Var 'aux1222' direct represents '1' with '15103'
15101 -15102 15103 0
-15103 15102 0
-15103 -15101 0
c Var 'aux1222' order represents '2' with '15104'
-15102 15104 0
c Var 'aux1222' direct represents '2' with '15105'
15102 -15104 15105 0
-15105 15104 0
-15105 -15102 0
c Var 'aux1222' direct represents '3' with '-15104'
15101 15103 15105 -15104 0
c Encoding variable: aux1223 with domain: int(0..4) (representing constraint (aux1218 + aux1220))
c Both direct and order encoding.
c Var 'aux1223' order represents '0' with '15106'
c Var 'aux1223' direct represents '0' with '15106'
c Var 'aux1223' order represents '1' with '15107'
-15106 15107 0
c Var 'aux1223' direct represents '1' with '15108'
15106 -15107 15108 0
-15108 15107 0
-15108 -15106 0
c Var 'aux1223' order represents '2' with '15109'
-15107 15109 0
c Var 'aux1223' direct represents '2' with '15110'
15107 -15109 15110 0
-15110 15109 0
-15110 -15107 0
c Var 'aux1223' order represents '3' with '15111'
-15109 15111 0
c Var 'aux1223' direct represents '3' with '15112'
15109 -15111 15112 0
-15112 15111 0
-15112 -15109 0
c Var 'aux1223' direct represents '4' with '-15111'
15106 15108 15110 15112 -15111 0
c Encoding variable: aux1224 with domain: int(0..2) (representing constraint ((field_00004_00006=4) + (field_00006_00006=4)))
c Both direct and order encoding.
c Var 'aux1224' order represents '0' with '15113'
c Var 'aux1224' direct represents '0' with '15113'
c Var 'aux1224' order represents '1' with '15114'
-15113 15114 0
c Var 'aux1224' direct represents '1' with '15115'
15113 -15114 15115 0
-15115 15114 0
-15115 -15113 0
c Var 'aux1224' direct represents '2' with '-15114'
15113 15115 -15114 0
c Encoding variable: aux1225 with domain: int(0..2) (representing constraint ((field_00001_00006=4) + (field_00009_00006=4)))
c Both direct and order encoding.
c Var 'aux1225' order represents '0' with '15116'
c Var 'aux1225' direct represents '0' with '15116'
c Var 'aux1225' order represents '1' with '15117'
-15116 15117 0
c Var 'aux1225' direct represents '1' with '15118'
15116 -15117 15118 0
-15118 15117 0
-15118 -15116 0
c Var 'aux1225' direct represents '2' with '-15117'
15116 15118 -15117 0
c Encoding variable: aux1226 with domain: int(0..2) (representing constraint ((field_00008_00006=4) + (field_00007_00006=4)))
c Both direct and order encoding.
c Var 'aux1226' order represents '0' with '15119'
c Var 'aux1226' direct represents '0' with '15119'
c Var 'aux1226' order represents '1' with '15120'
-15119 15120 0
c Var 'aux1226' direct represents '1' with '15121'
15119 -15120 15121 0
-15121 15120 0
-15121 -15119 0
c Var 'aux1226' direct represents '2' with '-15120'
15119 15121 -15120 0
c Encoding variable: aux1227 with domain: int(0..2) (representing constraint ((field_00003_00006=4) + (field_00005_00006=4)))
c Both direct and order encoding.
c Var 'aux1227' order represents '0' with '15122'
c Var 'aux1227' direct represents '0' with '15122'
c Var 'aux1227' order represents '1' with '15123'
-15122 15123 0
c Var 'aux1227' direct represents '1' with '15124'
15122 -15123 15124 0
-15124 15123 0
-15124 -15122 0
c Var 'aux1227' direct represents '2' with '-15123'
15122 15124 -15123 0
c Encoding variable: aux1228 with domain: int(0..3) (representing constraint ((field_00002_00006=4) + aux1227))
c Both direct and order encoding.
c Var 'aux1228' order represents '0' with '15125'
c Var 'aux1228' direct represents '0' with '15125'
c Var 'aux1228' order represents '1' with '15126'
-15125 15126 0
c Var 'aux1228' direct represents '1' with '15127'
15125 -15126 15127 0
-15127 15126 0
-15127 -15125 0
c Var 'aux1228' order represents '2' with '15128'
-15126 15128 0
c Var 'aux1228' direct represents '2' with '15129'
15126 -15128 15129 0
-15129 15128 0
-15129 -15126 0
c Var 'aux1228' direct represents '3' with '-15128'
15125 15127 15129 -15128 0
c Encoding variable: aux1229 with domain: int(0..4) (representing constraint (aux1224 + aux1226))
c Both direct and order encoding.
c Var 'aux1229' order represents '0' with '15130'
c Var 'aux1229' direct represents '0' with '15130'
c Var 'aux1229' order represents '1' with '15131'
-15130 15131 0
c Var 'aux1229' direct represents '1' with '15132'
15130 -15131 15132 0
-15132 15131 0
-15132 -15130 0
c Var 'aux1229' order represents '2' with '15133'
-15131 15133 0
c Var 'aux1229' direct represents '2' with '15134'
15131 -15133 15134 0
-15134 15133 0
-15134 -15131 0
c Var 'aux1229' order represents '3' with '15135'
-15133 15135 0
c Var 'aux1229' direct represents '3' with '15136'
15133 -15135 15136 0
-15136 15135 0
-15136 -15133 0
c Var 'aux1229' direct represents '4' with '-15135'
15130 15132 15134 15136 -15135 0
c Encoding variable: aux1230 with domain: int(0..2) (representing constraint ((field_00004_00006=5) + (field_00006_00006=5)))
c Both direct and order encoding.
c Var 'aux1230' order represents '0' with '15137'
c Var 'aux1230' direct represents '0' with '15137'
c Var 'aux1230' order represents '1' with '15138'
-15137 15138 0
c Var 'aux1230' direct represents '1' with '15139'
15137 -15138 15139 0
-15139 15138 0
-15139 -15137 0
c Var 'aux1230' direct represents '2' with '-15138'
15137 15139 -15138 0
c Encoding variable: aux1231 with domain: int(0..2) (representing constraint ((field_00001_00006=5) + (field_00009_00006=5)))
c Both direct and order encoding.
c Var 'aux1231' order represents '0' with '15140'
c Var 'aux1231' direct represents '0' with '15140'
c Var 'aux1231' order represents '1' with '15141'
-15140 15141 0
c Var 'aux1231' direct represents '1' with '15142'
15140 -15141 15142 0
-15142 15141 0
-15142 -15140 0
c Var 'aux1231' direct represents '2' with '-15141'
15140 15142 -15141 0
c Encoding variable: aux1232 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00007_00006=5)))
c Both direct and order encoding.
c Var 'aux1232' order represents '0' with '15143'
c Var 'aux1232' direct represents '0' with '15143'
c Var 'aux1232' order represents '1' with '15144'
-15143 15144 0
c Var 'aux1232' direct represents '1' with '15145'
15143 -15144 15145 0
-15145 15144 0
-15145 -15143 0
c Var 'aux1232' direct represents '2' with '-15144'
15143 15145 -15144 0
c Encoding variable: aux1233 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00005_00006=5)))
c Both direct and order encoding.
c Var 'aux1233' order represents '0' with '15146'
c Var 'aux1233' direct represents '0' with '15146'
c Var 'aux1233' order represents '1' with '15147'
-15146 15147 0
c Var 'aux1233' direct represents '1' with '15148'
15146 -15147 15148 0
-15148 15147 0
-15148 -15146 0
c Var 'aux1233' direct represents '2' with '-15147'
15146 15148 -15147 0
c Encoding variable: aux1234 with domain: int(0..3) (representing constraint ((field_00002_00006=5) + aux1233))
c Both direct and order encoding.
c Var 'aux1234' order represents '0' with '15149'
c Var 'aux1234' direct represents '0' with '15149'
c Var 'aux1234' order represents '1' with '15150'
-15149 15150 0
c Var 'aux1234' direct represents '1' with '15151'
15149 -15150 15151 0
-15151 15150 0
-15151 -15149 0
c Var 'aux1234' order represents '2' with '15152'
-15150 15152 0
c Var 'aux1234' direct represents '2' with '15153'
15150 -15152 15153 0
-15153 15152 0
-15153 -15150 0
c Var 'aux1234' direct represents '3' with '-15152'
15149 15151 15153 -15152 0
c Encoding variable: aux1235 with domain: int(0..4) (representing constraint (aux1230 + aux1232))
c Both direct and order encoding.
c Var 'aux1235' order represents '0' with '15154'
c Var 'aux1235' direct represents '0' with '15154'
c Var 'aux1235' order represents '1' with '15155'
-15154 15155 0
c Var 'aux1235' direct represents '1' with '15156'
15154 -15155 15156 0
-15156 15155 0
-15156 -15154 0
c Var 'aux1235' order represents '2' with '15157'
-15155 15157 0
c Var 'aux1235' direct represents '2' with '15158'
15155 -15157 15158 0
-15158 15157 0
-15158 -15155 0
c Var 'aux1235' order represents '3' with '15159'
-15157 15159 0
c Var 'aux1235' direct represents '3' with '15160'
15157 -15159 15160 0
-15160 15159 0
-15160 -15157 0
c Var 'aux1235' direct represents '4' with '-15159'
15154 15156 15158 15160 -15159 0
c Encoding variable: aux1236 with domain: int(0..2) (representing constraint ((field_00004_00006=6) + (field_00006_00006=6)))
c Both direct and order encoding.
c Var 'aux1236' order represents '0' with '15161'
c Var 'aux1236' direct represents '0' with '15161'
c Var 'aux1236' order represents '1' with '15162'
-15161 15162 0
c Var 'aux1236' direct represents '1' with '15163'
15161 -15162 15163 0
-15163 15162 0
-15163 -15161 0
c Var 'aux1236' direct represents '2' with '-15162'
15161 15163 -15162 0
c Encoding variable: aux1237 with domain: int(0..2) (representing constraint ((field_00001_00006=6) + (field_00009_00006=6)))
c Both direct and order encoding.
c Var 'aux1237' order represents '0' with '15164'
c Var 'aux1237' direct represents '0' with '15164'
c Var 'aux1237' order represents '1' with '15165'
-15164 15165 0
c Var 'aux1237' direct represents '1' with '15166'
15164 -15165 15166 0
-15166 15165 0
-15166 -15164 0
c Var 'aux1237' direct represents '2' with '-15165'
15164 15166 -15165 0
c Encoding variable: aux1238 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00007_00006=6)))
c Both direct and order encoding.
c Var 'aux1238' order represents '0' with '15167'
c Var 'aux1238' direct represents '0' with '15167'
c Var 'aux1238' order represents '1' with '15168'
-15167 15168 0
c Var 'aux1238' direct represents '1' with '15169'
15167 -15168 15169 0
-15169 15168 0
-15169 -15167 0
c Var 'aux1238' direct represents '2' with '-15168'
15167 15169 -15168 0
c Encoding variable: aux1239 with domain: int(0..2) (representing constraint ((field_00003_00006=6) + (field_00005_00006=6)))
c Both direct and order encoding.
c Var 'aux1239' order represents '0' with '15170'
c Var 'aux1239' direct represents '0' with '15170'
c Var 'aux1239' order represents '1' with '15171'
-15170 15171 0
c Var 'aux1239' direct represents '1' with '15172'
15170 -15171 15172 0
-15172 15171 0
-15172 -15170 0
c Var 'aux1239' direct represents '2' with '-15171'
15170 15172 -15171 0
c Encoding variable: aux1240 with domain: int(0..3) (representing constraint ((field_00002_00006=6) + aux1239))
c Both direct and order encoding.
c Var 'aux1240' order represents '0' with '15173'
c Var 'aux1240' direct represents '0' with '15173'
c Var 'aux1240' order represents '1' with '15174'
-15173 15174 0
c Var 'aux1240' direct represents '1' with '15175'
15173 -15174 15175 0
-15175 15174 0
-15175 -15173 0
c Var 'aux1240' order represents '2' with '15176'
-15174 15176 0
c Var 'aux1240' direct represents '2' with '15177'
15174 -15176 15177 0
-15177 15176 0
-15177 -15174 0
c Var 'aux1240' direct represents '3' with '-15176'
15173 15175 15177 -15176 0
c Encoding variable: aux1241 with domain: int(0..4) (representing constraint (aux1236 + aux1238))
c Both direct and order encoding.
c Var 'aux1241' order represents '0' with '15178'
c Var 'aux1241' direct represents '0' with '15178'
c Var 'aux1241' order represents '1' with '15179'
-15178 15179 0
c Var 'aux1241' direct represents '1' with '15180'
15178 -15179 15180 0
-15180 15179 0
-15180 -15178 0
c Var 'aux1241' order represents '2' with '15181'
-15179 15181 0
c Var 'aux1241' direct represents '2' with '15182'
15179 -15181 15182 0
-15182 15181 0
-15182 -15179 0
c Var 'aux1241' order represents '3' with '15183'
-15181 15183 0
c Var 'aux1241' direct represents '3' with '15184'
15181 -15183 15184 0
-15184 15183 0
-15184 -15181 0
c Var 'aux1241' direct represents '4' with '-15183'
15178 15180 15182 15184 -15183 0
c Encoding variable: aux1242 with domain: int(0..2) (representing constraint ((field_00004_00006=7) + (field_00006_00006=7)))
c Both direct and order encoding.
c Var 'aux1242' order represents '0' with '15185'
c Var 'aux1242' direct represents '0' with '15185'
c Var 'aux1242' order represents '1' with '15186'
-15185 15186 0
c Var 'aux1242' direct represents '1' with '15187'
15185 -15186 15187 0
-15187 15186 0
-15187 -15185 0
c Var 'aux1242' direct represents '2' with '-15186'
15185 15187 -15186 0
c Encoding variable: aux1243 with domain: int(0..2) (representing constraint ((field_00001_00006=7) + (field_00009_00006=7)))
c Both direct and order encoding.
c Var 'aux1243' order represents '0' with '15188'
c Var 'aux1243' direct represents '0' with '15188'
c Var 'aux1243' order represents '1' with '15189'
-15188 15189 0
c Var 'aux1243' direct represents '1' with '15190'
15188 -15189 15190 0
-15190 15189 0
-15190 -15188 0
c Var 'aux1243' direct represents '2' with '-15189'
15188 15190 -15189 0
c Encoding variable: aux1244 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00007_00006=7)))
c Both direct and order encoding.
c Var 'aux1244' order represents '0' with '15191'
c Var 'aux1244' direct represents '0' with '15191'
c Var 'aux1244' order represents '1' with '15192'
-15191 15192 0
c Var 'aux1244' direct represents '1' with '15193'
15191 -15192 15193 0
-15193 15192 0
-15193 -15191 0
c Var 'aux1244' direct represents '2' with '-15192'
15191 15193 -15192 0
c Encoding variable: aux1245 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00005_00006=7)))
c Both direct and order encoding.
c Var 'aux1245' order represents '0' with '15194'
c Var 'aux1245' direct represents '0' with '15194'
c Var 'aux1245' order represents '1' with '15195'
-15194 15195 0
c Var 'aux1245' direct represents '1' with '15196'
15194 -15195 15196 0
-15196 15195 0
-15196 -15194 0
c Var 'aux1245' direct represents '2' with '-15195'
15194 15196 -15195 0
c Encoding variable: aux1246 with domain: int(0..3) (representing constraint ((field_00002_00006=7) + aux1245))
c Both direct and order encoding.
c Var 'aux1246' order represents '0' with '15197'
c Var 'aux1246' direct represents '0' with '15197'
c Var 'aux1246' order represents '1' with '15198'
-15197 15198 0
c Var 'aux1246' direct represents '1' with '15199'
15197 -15198 15199 0
-15199 15198 0
-15199 -15197 0
c Var 'aux1246' order represents '2' with '15200'
-15198 15200 0
c Var 'aux1246' direct represents '2' with '15201'
15198 -15200 15201 0
-15201 15200 0
-15201 -15198 0
c Var 'aux1246' direct represents '3' with '-15200'
15197 15199 15201 -15200 0
c Encoding variable: aux1247 with domain: int(0..4) (representing constraint (aux1242 + aux1244))
c Both direct and order encoding.
c Var 'aux1247' order represents '0' with '15202'
c Var 'aux1247' direct represents '0' with '15202'
c Var 'aux1247' order represents '1' with '15203'
-15202 15203 0
c Var 'aux1247' direct represents '1' with '15204'
15202 -15203 15204 0
-15204 15203 0
-15204 -15202 0
c Var 'aux1247' order represents '2' with '15205'
-15203 15205 0
c Var 'aux1247' direct represents '2' with '15206'
15203 -15205 15206 0
-15206 15205 0
-15206 -15203 0
c Var 'aux1247' order represents '3' with '15207'
-15205 15207 0
c Var 'aux1247' direct represents '3' with '15208'
15205 -15207 15208 0
-15208 15207 0
-15208 -15205 0
c Var 'aux1247' direct represents '4' with '-15207'
15202 15204 15206 15208 -15207 0
c Encoding variable: aux1248 with domain: int(0..2) (representing constraint ((field_00004_00006=8) + (field_00006_00006=8)))
c Both direct and order encoding.
c Var 'aux1248' order represents '0' with '15209'
c Var 'aux1248' direct represents '0' with '15209'
c Var 'aux1248' order represents '1' with '15210'
-15209 15210 0
c Var 'aux1248' direct represents '1' with '15211'
15209 -15210 15211 0
-15211 15210 0
-15211 -15209 0
c Var 'aux1248' direct represents '2' with '-15210'
15209 15211 -15210 0
c Encoding variable: aux1249 with domain: int(0..2) (representing constraint ((field_00001_00006=8) + (field_00009_00006=8)))
c Both direct and order encoding.
c Var 'aux1249' order represents '0' with '15212'
c Var 'aux1249' direct represents '0' with '15212'
c Var 'aux1249' order represents '1' with '15213'
-15212 15213 0
c Var 'aux1249' direct represents '1' with '15214'
15212 -15213 15214 0
-15214 15213 0
-15214 -15212 0
c Var 'aux1249' direct represents '2' with '-15213'
15212 15214 -15213 0
c Encoding variable: aux1250 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00007_00006=8)))
c Both direct and order encoding.
c Var 'aux1250' order represents '0' with '15215'
c Var 'aux1250' direct represents '0' with '15215'
c Var 'aux1250' order represents '1' with '15216'
-15215 15216 0
c Var 'aux1250' direct represents '1' with '15217'
15215 -15216 15217 0
-15217 15216 0
-15217 -15215 0
c Var 'aux1250' direct represents '2' with '-15216'
15215 15217 -15216 0
c Encoding variable: aux1251 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00005_00006=8)))
c Both direct and order encoding.
c Var 'aux1251' order represents '0' with '15218'
c Var 'aux1251' direct represents '0' with '15218'
c Var 'aux1251' order represents '1' with '15219'
-15218 15219 0
c Var 'aux1251' direct represents '1' with '15220'
15218 -15219 15220 0
-15220 15219 0
-15220 -15218 0
c Var 'aux1251' direct represents '2' with '-15219'
15218 15220 -15219 0
c Encoding variable: aux1252 with domain: int(0..3) (representing constraint ((field_00002_00006=8) + aux1251))
c Both direct and order encoding.
c Var 'aux1252' order represents '0' with '15221'
c Var 'aux1252' direct represents '0' with '15221'
c Var 'aux1252' order represents '1' with '15222'
-15221 15222 0
c Var 'aux1252' direct represents '1' with '15223'
15221 -15222 15223 0
-15223 15222 0
-15223 -15221 0
c Var 'aux1252' order represents '2' with '15224'
-15222 15224 0
c Var 'aux1252' direct represents '2' with '15225'
15222 -15224 15225 0
-15225 15224 0
-15225 -15222 0
c Var 'aux1252' direct represents '3' with '-15224'
15221 15223 15225 -15224 0
c Encoding variable: aux1253 with domain: int(0..4) (representing constraint (aux1248 + aux1250))
c Both direct and order encoding.
c Var 'aux1253' order represents '0' with '15226'
c Var 'aux1253' direct represents '0' with '15226'
c Var 'aux1253' order represents '1' with '15227'
-15226 15227 0
c Var 'aux1253' direct represents '1' with '15228'
15226 -15227 15228 0
-15228 15227 0
-15228 -15226 0
c Var 'aux1253' order represents '2' with '15229'
-15227 15229 0
c Var 'aux1253' direct represents '2' with '15230'
15227 -15229 15230 0
-15230 15229 0
-15230 -15227 0
c Var 'aux1253' order represents '3' with '15231'
-15229 15231 0
c Var 'aux1253' direct represents '3' with '15232'
15229 -15231 15232 0
-15232 15231 0
-15232 -15229 0
c Var 'aux1253' direct represents '4' with '-15231'
15226 15228 15230 15232 -15231 0
c Encoding variable: aux1254 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00006_00006=9)))
c Both direct and order encoding.
c Var 'aux1254' order represents '0' with '15233'
c Var 'aux1254' direct represents '0' with '15233'
c Var 'aux1254' order represents '1' with '15234'
-15233 15234 0
c Var 'aux1254' direct represents '1' with '15235'
15233 -15234 15235 0
-15235 15234 0
-15235 -15233 0
c Var 'aux1254' direct represents '2' with '-15234'
15233 15235 -15234 0
c Encoding variable: aux1255 with domain: int(0..2) (representing constraint ((field_00001_00006=9) + (field_00009_00006=9)))
c Both direct and order encoding.
c Var 'aux1255' order represents '0' with '15236'
c Var 'aux1255' direct represents '0' with '15236'
c Var 'aux1255' order represents '1' with '15237'
-15236 15237 0
c Var 'aux1255' direct represents '1' with '15238'
15236 -15237 15238 0
-15238 15237 0
-15238 -15236 0
c Var 'aux1255' direct represents '2' with '-15237'
15236 15238 -15237 0
c Encoding variable: aux1256 with domain: int(0..2) (representing constraint ((field_00008_00006=9) + (field_00007_00006=9)))
c Both direct and order encoding.
c Var 'aux1256' order represents '0' with '15239'
c Var 'aux1256' direct represents '0' with '15239'
c Var 'aux1256' order represents '1' with '15240'
-15239 15240 0
c Var 'aux1256' direct represents '1' with '15241'
15239 -15240 15241 0
-15241 15240 0
-15241 -15239 0
c Var 'aux1256' direct represents '2' with '-15240'
15239 15241 -15240 0
c Encoding variable: aux1257 with domain: int(0..2) (representing constraint ((field_00003_00006=9) + (field_00005_00006=9)))
c Both direct and order encoding.
c Var 'aux1257' order represents '0' with '15242'
c Var 'aux1257' direct represents '0' with '15242'
c Var 'aux1257' order represents '1' with '15243'
-15242 15243 0
c Var 'aux1257' direct represents '1' with '15244'
15242 -15243 15244 0
-15244 15243 0
-15244 -15242 0
c Var 'aux1257' direct represents '2' with '-15243'
15242 15244 -15243 0
c Encoding variable: aux1258 with domain: int(0..3) (representing constraint ((field_00002_00006=9) + aux1257))
c Both direct and order encoding.
c Var 'aux1258' order represents '0' with '15245'
c Var 'aux1258' direct represents '0' with '15245'
c Var 'aux1258' order represents '1' with '15246'
-15245 15246 0
c Var 'aux1258' direct represents '1' with '15247'
15245 -15246 15247 0
-15247 15246 0
-15247 -15245 0
c Var 'aux1258' order represents '2' with '15248'
-15246 15248 0
c Var 'aux1258' direct represents '2' with '15249'
15246 -15248 15249 0
-15249 15248 0
-15249 -15246 0
c Var 'aux1258' direct represents '3' with '-15248'
15245 15247 15249 -15248 0
c Encoding variable: aux1259 with domain: int(0..4) (representing constraint (aux1254 + aux1256))
c Both direct and order encoding.
c Var 'aux1259' order represents '0' with '15250'
c Var 'aux1259' direct represents '0' with '15250'
c Var 'aux1259' order represents '1' with '15251'
-15250 15251 0
c Var 'aux1259' direct represents '1' with '15252'
15250 -15251 15252 0
-15252 15251 0
-15252 -15250 0
c Var 'aux1259' order represents '2' with '15253'
-15251 15253 0
c Var 'aux1259' direct represents '2' with '15254'
15251 -15253 15254 0
-15254 15253 0
-15254 -15251 0
c Var 'aux1259' order represents '3' with '15255'
-15253 15255 0
c Var 'aux1259' direct represents '3' with '15256'
15253 -15255 15256 0
-15256 15255 0
-15256 -15253 0
c Var 'aux1259' direct represents '4' with '-15255'
15250 15252 15254 15256 -15255 0
c Encoding variable: aux1260 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00006_00007=1)))
c Both direct and order encoding.
c Var 'aux1260' order represents '0' with '15257'
c Var 'aux1260' direct represents '0' with '15257'
c Var 'aux1260' order represents '1' with '15258'
-15257 15258 0
c Var 'aux1260' direct represents '1' with '15259'
15257 -15258 15259 0
-15259 15258 0
-15259 -15257 0
c Var 'aux1260' direct represents '2' with '-15258'
15257 15259 -15258 0
c Encoding variable: aux1261 with domain: int(0..2) (representing constraint ((field_00001_00007=1) + (field_00009_00007=1)))
c Both direct and order encoding.
c Var 'aux1261' order represents '0' with '15260'
c Var 'aux1261' direct represents '0' with '15260'
c Var 'aux1261' order represents '1' with '15261'
-15260 15261 0
c Var 'aux1261' direct represents '1' with '15262'
15260 -15261 15262 0
-15262 15261 0
-15262 -15260 0
c Var 'aux1261' direct represents '2' with '-15261'
15260 15262 -15261 0
c Encoding variable: aux1262 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00007_00007=1)))
c Both direct and order encoding.
c Var 'aux1262' order represents '0' with '15263'
c Var 'aux1262' direct represents '0' with '15263'
c Var 'aux1262' order represents '1' with '15264'
-15263 15264 0
c Var 'aux1262' direct represents '1' with '15265'
15263 -15264 15265 0
-15265 15264 0
-15265 -15263 0
c Var 'aux1262' direct represents '2' with '-15264'
15263 15265 -15264 0
c Encoding variable: aux1263 with domain: int(0..2) (representing constraint ((field_00003_00007=1) + (field_00005_00007=1)))
c Both direct and order encoding.
c Var 'aux1263' order represents '0' with '15266'
c Var 'aux1263' direct represents '0' with '15266'
c Var 'aux1263' order represents '1' with '15267'
-15266 15267 0
c Var 'aux1263' direct represents '1' with '15268'
15266 -15267 15268 0
-15268 15267 0
-15268 -15266 0
c Var 'aux1263' direct represents '2' with '-15267'
15266 15268 -15267 0
c Encoding variable: aux1264 with domain: int(0..3) (representing constraint ((field_00002_00007=1) + aux1263))
c Both direct and order encoding.
c Var 'aux1264' order represents '0' with '15269'
c Var 'aux1264' direct represents '0' with '15269'
c Var 'aux1264' order represents '1' with '15270'
-15269 15270 0
c Var 'aux1264' direct represents '1' with '15271'
15269 -15270 15271 0
-15271 15270 0
-15271 -15269 0
c Var 'aux1264' order represents '2' with '15272'
-15270 15272 0
c Var 'aux1264' direct represents '2' with '15273'
15270 -15272 15273 0
-15273 15272 0
-15273 -15270 0
c Var 'aux1264' direct represents '3' with '-15272'
15269 15271 15273 -15272 0
c Encoding variable: aux1265 with domain: int(0..4) (representing constraint (aux1260 + aux1262))
c Both direct and order encoding.
c Var 'aux1265' order represents '0' with '15274'
c Var 'aux1265' direct represents '0' with '15274'
c Var 'aux1265' order represents '1' with '15275'
-15274 15275 0
c Var 'aux1265' direct represents '1' with '15276'
15274 -15275 15276 0
-15276 15275 0
-15276 -15274 0
c Var 'aux1265' order represents '2' with '15277'
-15275 15277 0
c Var 'aux1265' direct represents '2' with '15278'
15275 -15277 15278 0
-15278 15277 0
-15278 -15275 0
c Var 'aux1265' order represents '3' with '15279'
-15277 15279 0
c Var 'aux1265' direct represents '3' with '15280'
15277 -15279 15280 0
-15280 15279 0
-15280 -15277 0
c Var 'aux1265' direct represents '4' with '-15279'
15274 15276 15278 15280 -15279 0
c Encoding variable: aux1266 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00006_00007=2)))
c Both direct and order encoding.
c Var 'aux1266' order represents '0' with '15281'
c Var 'aux1266' direct represents '0' with '15281'
c Var 'aux1266' order represents '1' with '15282'
-15281 15282 0
c Var 'aux1266' direct represents '1' with '15283'
15281 -15282 15283 0
-15283 15282 0
-15283 -15281 0
c Var 'aux1266' direct represents '2' with '-15282'
15281 15283 -15282 0
c Encoding variable: aux1267 with domain: int(0..2) (representing constraint ((field_00001_00007=2) + (field_00009_00007=2)))
c Both direct and order encoding.
c Var 'aux1267' order represents '0' with '15284'
c Var 'aux1267' direct represents '0' with '15284'
c Var 'aux1267' order represents '1' with '15285'
-15284 15285 0
c Var 'aux1267' direct represents '1' with '15286'
15284 -15285 15286 0
-15286 15285 0
-15286 -15284 0
c Var 'aux1267' direct represents '2' with '-15285'
15284 15286 -15285 0
c Encoding variable: aux1268 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00007_00007=2)))
c Both direct and order encoding.
c Var 'aux1268' order represents '0' with '15287'
c Var 'aux1268' direct represents '0' with '15287'
c Var 'aux1268' order represents '1' with '15288'
-15287 15288 0
c Var 'aux1268' direct represents '1' with '15289'
15287 -15288 15289 0
-15289 15288 0
-15289 -15287 0
c Var 'aux1268' direct represents '2' with '-15288'
15287 15289 -15288 0
c Encoding variable: aux1269 with domain: int(0..2) (representing constraint ((field_00003_00007=2) + (field_00005_00007=2)))
c Both direct and order encoding.
c Var 'aux1269' order represents '0' with '15290'
c Var 'aux1269' direct represents '0' with '15290'
c Var 'aux1269' order represents '1' with '15291'
-15290 15291 0
c Var 'aux1269' direct represents '1' with '15292'
15290 -15291 15292 0
-15292 15291 0
-15292 -15290 0
c Var 'aux1269' direct represents '2' with '-15291'
15290 15292 -15291 0
c Encoding variable: aux1270 with domain: int(0..3) (representing constraint ((field_00002_00007=2) + aux1269))
c Both direct and order encoding.
c Var 'aux1270' order represents '0' with '15293'
c Var 'aux1270' direct represents '0' with '15293'
c Var 'aux1270' order represents '1' with '15294'
-15293 15294 0
c Var 'aux1270' direct represents '1' with '15295'
15293 -15294 15295 0
-15295 15294 0
-15295 -15293 0
c Var 'aux1270' order represents '2' with '15296'
-15294 15296 0
c Var 'aux1270' direct represents '2' with '15297'
15294 -15296 15297 0
-15297 15296 0
-15297 -15294 0
c Var 'aux1270' direct represents '3' with '-15296'
15293 15295 15297 -15296 0
c Encoding variable: aux1271 with domain: int(0..4) (representing constraint (aux1266 + aux1268))
c Both direct and order encoding.
c Var 'aux1271' order represents '0' with '15298'
c Var 'aux1271' direct represents '0' with '15298'
c Var 'aux1271' order represents '1' with '15299'
-15298 15299 0
c Var 'aux1271' direct represents '1' with '15300'
15298 -15299 15300 0
-15300 15299 0
-15300 -15298 0
c Var 'aux1271' order represents '2' with '15301'
-15299 15301 0
c Var 'aux1271' direct represents '2' with '15302'
15299 -15301 15302 0
-15302 15301 0
-15302 -15299 0
c Var 'aux1271' order represents '3' with '15303'
-15301 15303 0
c Var 'aux1271' direct represents '3' with '15304'
15301 -15303 15304 0
-15304 15303 0
-15304 -15301 0
c Var 'aux1271' direct represents '4' with '-15303'
15298 15300 15302 15304 -15303 0
c Encoding variable: aux1272 with domain: int(0..2) (representing constraint ((field_00004_00007=3) + (field_00006_00007=3)))
c Both direct and order encoding.
c Var 'aux1272' order represents '0' with '15305'
c Var 'aux1272' direct represents '0' with '15305'
c Var 'aux1272' order represents '1' with '15306'
-15305 15306 0
c Var 'aux1272' direct represents '1' with '15307'
15305 -15306 15307 0
-15307 15306 0
-15307 -15305 0
c Var 'aux1272' direct represents '2' with '-15306'
15305 15307 -15306 0
c Encoding variable: aux1273 with domain: int(0..2) (representing constraint ((field_00001_00007=3) + (field_00009_00007=3)))
c Both direct and order encoding.
c Var 'aux1273' order represents '0' with '15308'
c Var 'aux1273' direct represents '0' with '15308'
c Var 'aux1273' order represents '1' with '15309'
-15308 15309 0
c Var 'aux1273' direct represents '1' with '15310'
15308 -15309 15310 0
-15310 15309 0
-15310 -15308 0
c Var 'aux1273' direct represents '2' with '-15309'
15308 15310 -15309 0
c Encoding variable: aux1274 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00007_00007=3)))
c Both direct and order encoding.
c Var 'aux1274' order represents '0' with '15311'
c Var 'aux1274' direct represents '0' with '15311'
c Var 'aux1274' order represents '1' with '15312'
-15311 15312 0
c Var 'aux1274' direct represents '1' with '15313'
15311 -15312 15313 0
-15313 15312 0
-15313 -15311 0
c Var 'aux1274' direct represents '2' with '-15312'
15311 15313 -15312 0
c Encoding variable: aux1275 with domain: int(0..2) (representing constraint ((field_00003_00007=3) + (field_00005_00007=3)))
c Both direct and order encoding.
c Var 'aux1275' order represents '0' with '15314'
c Var 'aux1275' direct represents '0' with '15314'
c Var 'aux1275' order represents '1' with '15315'
-15314 15315 0
c Var 'aux1275' direct represents '1' with '15316'
15314 -15315 15316 0
-15316 15315 0
-15316 -15314 0
c Var 'aux1275' direct represents '2' with '-15315'
15314 15316 -15315 0
c Encoding variable: aux1276 with domain: int(0..3) (representing constraint ((field_00002_00007=3) + aux1275))
c Both direct and order encoding.
c Var 'aux1276' order represents '0' with '15317'
c Var 'aux1276' direct represents '0' with '15317'
c Var 'aux1276' order represents '1' with '15318'
-15317 15318 0
c Var 'aux1276' direct represents '1' with '15319'
15317 -15318 15319 0
-15319 15318 0
-15319 -15317 0
c Var 'aux1276' order represents '2' with '15320'
-15318 15320 0
c Var 'aux1276' direct represents '2' with '15321'
15318 -15320 15321 0
-15321 15320 0
-15321 -15318 0
c Var 'aux1276' direct represents '3' with '-15320'
15317 15319 15321 -15320 0
c Encoding variable: aux1277 with domain: int(0..4) (representing constraint (aux1272 + aux1274))
c Both direct and order encoding.
c Var 'aux1277' order represents '0' with '15322'
c Var 'aux1277' direct represents '0' with '15322'
c Var 'aux1277' order represents '1' with '15323'
-15322 15323 0
c Var 'aux1277' direct represents '1' with '15324'
15322 -15323 15324 0
-15324 15323 0
-15324 -15322 0
c Var 'aux1277' order represents '2' with '15325'
-15323 15325 0
c Var 'aux1277' direct represents '2' with '15326'
15323 -15325 15326 0
-15326 15325 0
-15326 -15323 0
c Var 'aux1277' order represents '3' with '15327'
-15325 15327 0
c Var 'aux1277' direct represents '3' with '15328'
15325 -15327 15328 0
-15328 15327 0
-15328 -15325 0
c Var 'aux1277' direct represents '4' with '-15327'
15322 15324 15326 15328 -15327 0
c Encoding variable: aux1278 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00006_00007=4)))
c Both direct and order encoding.
c Var 'aux1278' order represents '0' with '15329'
c Var 'aux1278' direct represents '0' with '15329'
c Var 'aux1278' order represents '1' with '15330'
-15329 15330 0
c Var 'aux1278' direct represents '1' with '15331'
15329 -15330 15331 0
-15331 15330 0
-15331 -15329 0
c Var 'aux1278' direct represents '2' with '-15330'
15329 15331 -15330 0
c Encoding variable: aux1279 with domain: int(0..2) (representing constraint ((field_00001_00007=4) + (field_00009_00007=4)))
c Both direct and order encoding.
c Var 'aux1279' order represents '0' with '15332'
c Var 'aux1279' direct represents '0' with '15332'
c Var 'aux1279' order represents '1' with '15333'
-15332 15333 0
c Var 'aux1279' direct represents '1' with '15334'
15332 -15333 15334 0
-15334 15333 0
-15334 -15332 0
c Var 'aux1279' direct represents '2' with '-15333'
15332 15334 -15333 0
c Encoding variable: aux1280 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00007_00007=4)))
c Both direct and order encoding.
c Var 'aux1280' order represents '0' with '15335'
c Var 'aux1280' direct represents '0' with '15335'
c Var 'aux1280' order represents '1' with '15336'
-15335 15336 0
c Var 'aux1280' direct represents '1' with '15337'
15335 -15336 15337 0
-15337 15336 0
-15337 -15335 0
c Var 'aux1280' direct represents '2' with '-15336'
15335 15337 -15336 0
c Encoding variable: aux1281 with domain: int(0..2) (representing constraint ((field_00003_00007=4) + (field_00005_00007=4)))
c Both direct and order encoding.
c Var 'aux1281' order represents '0' with '15338'
c Var 'aux1281' direct represents '0' with '15338'
c Var 'aux1281' order represents '1' with '15339'
-15338 15339 0
c Var 'aux1281' direct represents '1' with '15340'
15338 -15339 15340 0
-15340 15339 0
-15340 -15338 0
c Var 'aux1281' direct represents '2' with '-15339'
15338 15340 -15339 0
c Encoding variable: aux1282 with domain: int(0..3) (representing constraint ((field_00002_00007=4) + aux1281))
c Both direct and order encoding.
c Var 'aux1282' order represents '0' with '15341'
c Var 'aux1282' direct represents '0' with '15341'
c Var 'aux1282' order represents '1' with '15342'
-15341 15342 0
c Var 'aux1282' direct represents '1' with '15343'
15341 -15342 15343 0
-15343 15342 0
-15343 -15341 0
c Var 'aux1282' order represents '2' with '15344'
-15342 15344 0
c Var 'aux1282' direct represents '2' with '15345'
15342 -15344 15345 0
-15345 15344 0
-15345 -15342 0
c Var 'aux1282' direct represents '3' with '-15344'
15341 15343 15345 -15344 0
c Encoding variable: aux1283 with domain: int(0..4) (representing constraint (aux1278 + aux1280))
c Both direct and order encoding.
c Var 'aux1283' order represents '0' with '15346'
c Var 'aux1283' direct represents '0' with '15346'
c Var 'aux1283' order represents '1' with '15347'
-15346 15347 0
c Var 'aux1283' direct represents '1' with '15348'
15346 -15347 15348 0
-15348 15347 0
-15348 -15346 0
c Var 'aux1283' order represents '2' with '15349'
-15347 15349 0
c Var 'aux1283' direct represents '2' with '15350'
15347 -15349 15350 0
-15350 15349 0
-15350 -15347 0
c Var 'aux1283' order represents '3' with '15351'
-15349 15351 0
c Var 'aux1283' direct represents '3' with '15352'
15349 -15351 15352 0
-15352 15351 0
-15352 -15349 0
c Var 'aux1283' direct represents '4' with '-15351'
15346 15348 15350 15352 -15351 0
c Encoding variable: aux1284 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00006_00007=5)))
c Both direct and order encoding.
c Var 'aux1284' order represents '0' with '15353'
c Var 'aux1284' direct represents '0' with '15353'
c Var 'aux1284' order represents '1' with '15354'
-15353 15354 0
c Var 'aux1284' direct represents '1' with '15355'
15353 -15354 15355 0
-15355 15354 0
-15355 -15353 0
c Var 'aux1284' direct represents '2' with '-15354'
15353 15355 -15354 0
c Encoding variable: aux1285 with domain: int(0..2) (representing constraint ((field_00001_00007=5) + (field_00009_00007=5)))
c Both direct and order encoding.
c Var 'aux1285' order represents '0' with '15356'
c Var 'aux1285' direct represents '0' with '15356'
c Var 'aux1285' order represents '1' with '15357'
-15356 15357 0
c Var 'aux1285' direct represents '1' with '15358'
15356 -15357 15358 0
-15358 15357 0
-15358 -15356 0
c Var 'aux1285' direct represents '2' with '-15357'
15356 15358 -15357 0
c Encoding variable: aux1286 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00007_00007=5)))
c Both direct and order encoding.
c Var 'aux1286' order represents '0' with '15359'
c Var 'aux1286' direct represents '0' with '15359'
c Var 'aux1286' order represents '1' with '15360'
-15359 15360 0
c Var 'aux1286' direct represents '1' with '15361'
15359 -15360 15361 0
-15361 15360 0
-15361 -15359 0
c Var 'aux1286' direct represents '2' with '-15360'
15359 15361 -15360 0
c Encoding variable: aux1287 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00005_00007=5)))
c Both direct and order encoding.
c Var 'aux1287' order represents '0' with '15362'
c Var 'aux1287' direct represents '0' with '15362'
c Var 'aux1287' order represents '1' with '15363'
-15362 15363 0
c Var 'aux1287' direct represents '1' with '15364'
15362 -15363 15364 0
-15364 15363 0
-15364 -15362 0
c Var 'aux1287' direct represents '2' with '-15363'
15362 15364 -15363 0
c Encoding variable: aux1288 with domain: int(0..3) (representing constraint ((field_00002_00007=5) + aux1287))
c Both direct and order encoding.
c Var 'aux1288' order represents '0' with '15365'
c Var 'aux1288' direct represents '0' with '15365'
c Var 'aux1288' order represents '1' with '15366'
-15365 15366 0
c Var 'aux1288' direct represents '1' with '15367'
15365 -15366 15367 0
-15367 15366 0
-15367 -15365 0
c Var 'aux1288' order represents '2' with '15368'
-15366 15368 0
c Var 'aux1288' direct represents '2' with '15369'
15366 -15368 15369 0
-15369 15368 0
-15369 -15366 0
c Var 'aux1288' direct represents '3' with '-15368'
15365 15367 15369 -15368 0
c Encoding variable: aux1289 with domain: int(0..4) (representing constraint (aux1284 + aux1286))
c Both direct and order encoding.
c Var 'aux1289' order represents '0' with '15370'
c Var 'aux1289' direct represents '0' with '15370'
c Var 'aux1289' order represents '1' with '15371'
-15370 15371 0
c Var 'aux1289' direct represents '1' with '15372'
15370 -15371 15372 0
-15372 15371 0
-15372 -15370 0
c Var 'aux1289' order represents '2' with '15373'
-15371 15373 0
c Var 'aux1289' direct represents '2' with '15374'
15371 -15373 15374 0
-15374 15373 0
-15374 -15371 0
c Var 'aux1289' order represents '3' with '15375'
-15373 15375 0
c Var 'aux1289' direct represents '3' with '15376'
15373 -15375 15376 0
-15376 15375 0
-15376 -15373 0
c Var 'aux1289' direct represents '4' with '-15375'
15370 15372 15374 15376 -15375 0
c Encoding variable: aux1290 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00006_00007=6)))
c Both direct and order encoding.
c Var 'aux1290' order represents '0' with '15377'
c Var 'aux1290' direct represents '0' with '15377'
c Var 'aux1290' order represents '1' with '15378'
-15377 15378 0
c Var 'aux1290' direct represents '1' with '15379'
15377 -15378 15379 0
-15379 15378 0
-15379 -15377 0
c Var 'aux1290' direct represents '2' with '-15378'
15377 15379 -15378 0
c Encoding variable: aux1291 with domain: int(0..2) (representing constraint ((field_00001_00007=6) + (field_00009_00007=6)))
c Both direct and order encoding.
c Var 'aux1291' order represents '0' with '15380'
c Var 'aux1291' direct represents '0' with '15380'
c Var 'aux1291' order represents '1' with '15381'
-15380 15381 0
c Var 'aux1291' direct represents '1' with '15382'
15380 -15381 15382 0
-15382 15381 0
-15382 -15380 0
c Var 'aux1291' direct represents '2' with '-15381'
15380 15382 -15381 0
c Encoding variable: aux1292 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00007_00007=6)))
c Both direct and order encoding.
c Var 'aux1292' order represents '0' with '15383'
c Var 'aux1292' direct represents '0' with '15383'
c Var 'aux1292' order represents '1' with '15384'
-15383 15384 0
c Var 'aux1292' direct represents '1' with '15385'
15383 -15384 15385 0
-15385 15384 0
-15385 -15383 0
c Var 'aux1292' direct represents '2' with '-15384'
15383 15385 -15384 0
c Encoding variable: aux1293 with domain: int(0..2) (representing constraint ((field_00003_00007=6) + (field_00005_00007=6)))
c Both direct and order encoding.
c Var 'aux1293' order represents '0' with '15386'
c Var 'aux1293' direct represents '0' with '15386'
c Var 'aux1293' order represents '1' with '15387'
-15386 15387 0
c Var 'aux1293' direct represents '1' with '15388'
15386 -15387 15388 0
-15388 15387 0
-15388 -15386 0
c Var 'aux1293' direct represents '2' with '-15387'
15386 15388 -15387 0
c Encoding variable: aux1294 with domain: int(0..3) (representing constraint ((field_00002_00007=6) + aux1293))
c Both direct and order encoding.
c Var 'aux1294' order represents '0' with '15389'
c Var 'aux1294' direct represents '0' with '15389'
c Var 'aux1294' order represents '1' with '15390'
-15389 15390 0
c Var 'aux1294' direct represents '1' with '15391'
15389 -15390 15391 0
-15391 15390 0
-15391 -15389 0
c Var 'aux1294' order represents '2' with '15392'
-15390 15392 0
c Var 'aux1294' direct represents '2' with '15393'
15390 -15392 15393 0
-15393 15392 0
-15393 -15390 0
c Var 'aux1294' direct represents '3' with '-15392'
15389 15391 15393 -15392 0
c Encoding variable: aux1295 with domain: int(0..4) (representing constraint (aux1290 + aux1292))
c Both direct and order encoding.
c Var 'aux1295' order represents '0' with '15394'
c Var 'aux1295' direct represents '0' with '15394'
c Var 'aux1295' order represents '1' with '15395'
-15394 15395 0
c Var 'aux1295' direct represents '1' with '15396'
15394 -15395 15396 0
-15396 15395 0
-15396 -15394 0
c Var 'aux1295' order represents '2' with '15397'
-15395 15397 0
c Var 'aux1295' direct represents '2' with '15398'
15395 -15397 15398 0
-15398 15397 0
-15398 -15395 0
c Var 'aux1295' order represents '3' with '15399'
-15397 15399 0
c Var 'aux1295' direct represents '3' with '15400'
15397 -15399 15400 0
-15400 15399 0
-15400 -15397 0
c Var 'aux1295' direct represents '4' with '-15399'
15394 15396 15398 15400 -15399 0
c Encoding variable: aux1296 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00006_00007=7)))
c Both direct and order encoding.
c Var 'aux1296' order represents '0' with '15401'
c Var 'aux1296' direct represents '0' with '15401'
c Var 'aux1296' order represents '1' with '15402'
-15401 15402 0
c Var 'aux1296' direct represents '1' with '15403'
15401 -15402 15403 0
-15403 15402 0
-15403 -15401 0
c Var 'aux1296' direct represents '2' with '-15402'
15401 15403 -15402 0
c Encoding variable: aux1297 with domain: int(0..2) (representing constraint ((field_00001_00007=7) + (field_00009_00007=7)))
c Both direct and order encoding.
c Var 'aux1297' order represents '0' with '15404'
c Var 'aux1297' direct represents '0' with '15404'
c Var 'aux1297' order represents '1' with '15405'
-15404 15405 0
c Var 'aux1297' direct represents '1' with '15406'
15404 -15405 15406 0
-15406 15405 0
-15406 -15404 0
c Var 'aux1297' direct represents '2' with '-15405'
15404 15406 -15405 0
c Encoding variable: aux1298 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00007_00007=7)))
c Both direct and order encoding.
c Var 'aux1298' order represents '0' with '15407'
c Var 'aux1298' direct represents '0' with '15407'
c Var 'aux1298' order represents '1' with '15408'
-15407 15408 0
c Var 'aux1298' direct represents '1' with '15409'
15407 -15408 15409 0
-15409 15408 0
-15409 -15407 0
c Var 'aux1298' direct represents '2' with '-15408'
15407 15409 -15408 0
c Encoding variable: aux1299 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00005_00007=7)))
c Both direct and order encoding.
c Var 'aux1299' order represents '0' with '15410'
c Var 'aux1299' direct represents '0' with '15410'
c Var 'aux1299' order represents '1' with '15411'
-15410 15411 0
c Var 'aux1299' direct represents '1' with '15412'
15410 -15411 15412 0
-15412 15411 0
-15412 -15410 0
c Var 'aux1299' direct represents '2' with '-15411'
15410 15412 -15411 0
c Encoding variable: aux1300 with domain: int(0..3) (representing constraint ((field_00002_00007=7) + aux1299))
c Both direct and order encoding.
c Var 'aux1300' order represents '0' with '15413'
c Var 'aux1300' direct represents '0' with '15413'
c Var 'aux1300' order represents '1' with '15414'
-15413 15414 0
c Var 'aux1300' direct represents '1' with '15415'
15413 -15414 15415 0
-15415 15414 0
-15415 -15413 0
c Var 'aux1300' order represents '2' with '15416'
-15414 15416 0
c Var 'aux1300' direct represents '2' with '15417'
15414 -15416 15417 0
-15417 15416 0
-15417 -15414 0
c Var 'aux1300' direct represents '3' with '-15416'
15413 15415 15417 -15416 0
c Encoding variable: aux1301 with domain: int(0..4) (representing constraint (aux1296 + aux1298))
c Both direct and order encoding.
c Var 'aux1301' order represents '0' with '15418'
c Var 'aux1301' direct represents '0' with '15418'
c Var 'aux1301' order represents '1' with '15419'
-15418 15419 0
c Var 'aux1301' direct represents '1' with '15420'
15418 -15419 15420 0
-15420 15419 0
-15420 -15418 0
c Var 'aux1301' order represents '2' with '15421'
-15419 15421 0
c Var 'aux1301' direct represents '2' with '15422'
15419 -15421 15422 0
-15422 15421 0
-15422 -15419 0
c Var 'aux1301' order represents '3' with '15423'
-15421 15423 0
c Var 'aux1301' direct represents '3' with '15424'
15421 -15423 15424 0
-15424 15423 0
-15424 -15421 0
c Var 'aux1301' direct represents '4' with '-15423'
15418 15420 15422 15424 -15423 0
c Encoding variable: aux1302 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00006_00007=8)))
c Both direct and order encoding.
c Var 'aux1302' order represents '0' with '15425'
c Var 'aux1302' direct represents '0' with '15425'
c Var 'aux1302' order represents '1' with '15426'
-15425 15426 0
c Var 'aux1302' direct represents '1' with '15427'
15425 -15426 15427 0
-15427 15426 0
-15427 -15425 0
c Var 'aux1302' direct represents '2' with '-15426'
15425 15427 -15426 0
c Encoding variable: aux1303 with domain: int(0..2) (representing constraint ((field_00001_00007=8) + (field_00009_00007=8)))
c Both direct and order encoding.
c Var 'aux1303' order represents '0' with '15428'
c Var 'aux1303' direct represents '0' with '15428'
c Var 'aux1303' order represents '1' with '15429'
-15428 15429 0
c Var 'aux1303' direct represents '1' with '15430'
15428 -15429 15430 0
-15430 15429 0
-15430 -15428 0
c Var 'aux1303' direct represents '2' with '-15429'
15428 15430 -15429 0
c Encoding variable: aux1304 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00007_00007=8)))
c Both direct and order encoding.
c Var 'aux1304' order represents '0' with '15431'
c Var 'aux1304' direct represents '0' with '15431'
c Var 'aux1304' order represents '1' with '15432'
-15431 15432 0
c Var 'aux1304' direct represents '1' with '15433'
15431 -15432 15433 0
-15433 15432 0
-15433 -15431 0
c Var 'aux1304' direct represents '2' with '-15432'
15431 15433 -15432 0
c Encoding variable: aux1305 with domain: int(0..2) (representing constraint ((field_00003_00007=8) + (field_00005_00007=8)))
c Both direct and order encoding.
c Var 'aux1305' order represents '0' with '15434'
c Var 'aux1305' direct represents '0' with '15434'
c Var 'aux1305' order represents '1' with '15435'
-15434 15435 0
c Var 'aux1305' direct represents '1' with '15436'
15434 -15435 15436 0
-15436 15435 0
-15436 -15434 0
c Var 'aux1305' direct represents '2' with '-15435'
15434 15436 -15435 0
c Encoding variable: aux1306 with domain: int(0..3) (representing constraint ((field_00002_00007=8) + aux1305))
c Both direct and order encoding.
c Var 'aux1306' order represents '0' with '15437'
c Var 'aux1306' direct represents '0' with '15437'
c Var 'aux1306' order represents '1' with '15438'
-15437 15438 0
c Var 'aux1306' direct represents '1' with '15439'
15437 -15438 15439 0
-15439 15438 0
-15439 -15437 0
c Var 'aux1306' order represents '2' with '15440'
-15438 15440 0
c Var 'aux1306' direct represents '2' with '15441'
15438 -15440 15441 0
-15441 15440 0
-15441 -15438 0
c Var 'aux1306' direct represents '3' with '-15440'
15437 15439 15441 -15440 0
c Encoding variable: aux1307 with domain: int(0..4) (representing constraint (aux1302 + aux1304))
c Both direct and order encoding.
c Var 'aux1307' order represents '0' with '15442'
c Var 'aux1307' direct represents '0' with '15442'
c Var 'aux1307' order represents '1' with '15443'
-15442 15443 0
c Var 'aux1307' direct represents '1' with '15444'
15442 -15443 15444 0
-15444 15443 0
-15444 -15442 0
c Var 'aux1307' order represents '2' with '15445'
-15443 15445 0
c Var 'aux1307' direct represents '2' with '15446'
15443 -15445 15446 0
-15446 15445 0
-15446 -15443 0
c Var 'aux1307' order represents '3' with '15447'
-15445 15447 0
c Var 'aux1307' direct represents '3' with '15448'
15445 -15447 15448 0
-15448 15447 0
-15448 -15445 0
c Var 'aux1307' direct represents '4' with '-15447'
15442 15444 15446 15448 -15447 0
c Encoding variable: aux1308 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00006_00007=9)))
c Both direct and order encoding.
c Var 'aux1308' order represents '0' with '15449'
c Var 'aux1308' direct represents '0' with '15449'
c Var 'aux1308' order represents '1' with '15450'
-15449 15450 0
c Var 'aux1308' direct represents '1' with '15451'
15449 -15450 15451 0
-15451 15450 0
-15451 -15449 0
c Var 'aux1308' direct represents '2' with '-15450'
15449 15451 -15450 0
c Encoding variable: aux1309 with domain: int(0..2) (representing constraint ((field_00001_00007=9) + (field_00009_00007=9)))
c Both direct and order encoding.
c Var 'aux1309' order represents '0' with '15452'
c Var 'aux1309' direct represents '0' with '15452'
c Var 'aux1309' order represents '1' with '15453'
-15452 15453 0
c Var 'aux1309' direct represents '1' with '15454'
15452 -15453 15454 0
-15454 15453 0
-15454 -15452 0
c Var 'aux1309' direct represents '2' with '-15453'
15452 15454 -15453 0
c Encoding variable: aux1310 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00007_00007=9)))
c Both direct and order encoding.
c Var 'aux1310' order represents '0' with '15455'
c Var 'aux1310' direct represents '0' with '15455'
c Var 'aux1310' order represents '1' with '15456'
-15455 15456 0
c Var 'aux1310' direct represents '1' with '15457'
15455 -15456 15457 0
-15457 15456 0
-15457 -15455 0
c Var 'aux1310' direct represents '2' with '-15456'
15455 15457 -15456 0
c Encoding variable: aux1311 with domain: int(0..2) (representing constraint ((field_00003_00007=9) + (field_00005_00007=9)))
c Both direct and order encoding.
c Var 'aux1311' order represents '0' with '15458'
c Var 'aux1311' direct represents '0' with '15458'
c Var 'aux1311' order represents '1' with '15459'
-15458 15459 0
c Var 'aux1311' direct represents '1' with '15460'
15458 -15459 15460 0
-15460 15459 0
-15460 -15458 0
c Var 'aux1311' direct represents '2' with '-15459'
15458 15460 -15459 0
c Encoding variable: aux1312 with domain: int(0..3) (representing constraint ((field_00002_00007=9) + aux1311))
c Both direct and order encoding.
c Var 'aux1312' order represents '0' with '15461'
c Var 'aux1312' direct represents '0' with '15461'
c Var 'aux1312' order represents '1' with '15462'
-15461 15462 0
c Var 'aux1312' direct represents '1' with '15463'
15461 -15462 15463 0
-15463 15462 0
-15463 -15461 0
c Var 'aux1312' order represents '2' with '15464'
-15462 15464 0
c Var 'aux1312' direct represents '2' with '15465'
15462 -15464 15465 0
-15465 15464 0
-15465 -15462 0
c Var 'aux1312' direct represents '3' with '-15464'
15461 15463 15465 -15464 0
c Encoding variable: aux1313 with domain: int(0..4) (representing constraint (aux1308 + aux1310))
c Both direct and order encoding.
c Var 'aux1313' order represents '0' with '15466'
c Var 'aux1313' direct represents '0' with '15466'
c Var 'aux1313' order represents '1' with '15467'
-15466 15467 0
c Var 'aux1313' direct represents '1' with '15468'
15466 -15467 15468 0
-15468 15467 0
-15468 -15466 0
c Var 'aux1313' order represents '2' with '15469'
-15467 15469 0
c Var 'aux1313' direct represents '2' with '15470'
15467 -15469 15470 0
-15470 15469 0
-15470 -15467 0
c Var 'aux1313' order represents '3' with '15471'
-15469 15471 0
c Var 'aux1313' direct represents '3' with '15472'
15469 -15471 15472 0
-15472 15471 0
-15472 -15469 0
c Var 'aux1313' direct represents '4' with '-15471'
15466 15468 15470 15472 -15471 0
c Encoding variable: aux1314 with domain: int(0..2) (representing constraint ((field_00004_00008=1) + (field_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux1314' order represents '0' with '15473'
c Var 'aux1314' direct represents '0' with '15473'
c Var 'aux1314' order represents '1' with '15474'
-15473 15474 0
c Var 'aux1314' direct represents '1' with '15475'
15473 -15474 15475 0
-15475 15474 0
-15475 -15473 0
c Var 'aux1314' direct represents '2' with '-15474'
15473 15475 -15474 0
c Encoding variable: aux1315 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00009_00008=1)))
c Both direct and order encoding.
c Var 'aux1315' order represents '0' with '15476'
c Var 'aux1315' direct represents '0' with '15476'
c Var 'aux1315' order represents '1' with '15477'
-15476 15477 0
c Var 'aux1315' direct represents '1' with '15478'
15476 -15477 15478 0
-15478 15477 0
-15478 -15476 0
c Var 'aux1315' direct represents '2' with '-15477'
15476 15478 -15477 0
c Encoding variable: aux1316 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux1316' order represents '0' with '15479'
c Var 'aux1316' direct represents '0' with '15479'
c Var 'aux1316' order represents '1' with '15480'
-15479 15480 0
c Var 'aux1316' direct represents '1' with '15481'
15479 -15480 15481 0
-15481 15480 0
-15481 -15479 0
c Var 'aux1316' direct represents '2' with '-15480'
15479 15481 -15480 0
c Encoding variable: aux1317 with domain: int(0..2) (representing constraint ((field_00003_00008=1) + (field_00005_00008=1)))
c Both direct and order encoding.
c Var 'aux1317' order represents '0' with '15482'
c Var 'aux1317' direct represents '0' with '15482'
c Var 'aux1317' order represents '1' with '15483'
-15482 15483 0
c Var 'aux1317' direct represents '1' with '15484'
15482 -15483 15484 0
-15484 15483 0
-15484 -15482 0
c Var 'aux1317' direct represents '2' with '-15483'
15482 15484 -15483 0
c Encoding variable: aux1318 with domain: int(0..3) (representing constraint ((field_00002_00008=1) + aux1317))
c Both direct and order encoding.
c Var 'aux1318' order represents '0' with '15485'
c Var 'aux1318' direct represents '0' with '15485'
c Var 'aux1318' order represents '1' with '15486'
-15485 15486 0
c Var 'aux1318' direct represents '1' with '15487'
15485 -15486 15487 0
-15487 15486 0
-15487 -15485 0
c Var 'aux1318' order represents '2' with '15488'
-15486 15488 0
c Var 'aux1318' direct represents '2' with '15489'
15486 -15488 15489 0
-15489 15488 0
-15489 -15486 0
c Var 'aux1318' direct represents '3' with '-15488'
15485 15487 15489 -15488 0
c Encoding variable: aux1319 with domain: int(0..4) (representing constraint (aux1314 + aux1316))
c Both direct and order encoding.
c Var 'aux1319' order represents '0' with '15490'
c Var 'aux1319' direct represents '0' with '15490'
c Var 'aux1319' order represents '1' with '15491'
-15490 15491 0
c Var 'aux1319' direct represents '1' with '15492'
15490 -15491 15492 0
-15492 15491 0
-15492 -15490 0
c Var 'aux1319' order represents '2' with '15493'
-15491 15493 0
c Var 'aux1319' direct represents '2' with '15494'
15491 -15493 15494 0
-15494 15493 0
-15494 -15491 0
c Var 'aux1319' order represents '3' with '15495'
-15493 15495 0
c Var 'aux1319' direct represents '3' with '15496'
15493 -15495 15496 0
-15496 15495 0
-15496 -15493 0
c Var 'aux1319' direct represents '4' with '-15495'
15490 15492 15494 15496 -15495 0
c Encoding variable: aux1320 with domain: int(0..2) (representing constraint ((field_00004_00008=2) + (field_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux1320' order represents '0' with '15497'
c Var 'aux1320' direct represents '0' with '15497'
c Var 'aux1320' order represents '1' with '15498'
-15497 15498 0
c Var 'aux1320' direct represents '1' with '15499'
15497 -15498 15499 0
-15499 15498 0
-15499 -15497 0
c Var 'aux1320' direct represents '2' with '-15498'
15497 15499 -15498 0
c Encoding variable: aux1321 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00009_00008=2)))
c Both direct and order encoding.
c Var 'aux1321' order represents '0' with '15500'
c Var 'aux1321' direct represents '0' with '15500'
c Var 'aux1321' order represents '1' with '15501'
-15500 15501 0
c Var 'aux1321' direct represents '1' with '15502'
15500 -15501 15502 0
-15502 15501 0
-15502 -15500 0
c Var 'aux1321' direct represents '2' with '-15501'
15500 15502 -15501 0
c Encoding variable: aux1322 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux1322' order represents '0' with '15503'
c Var 'aux1322' direct represents '0' with '15503'
c Var 'aux1322' order represents '1' with '15504'
-15503 15504 0
c Var 'aux1322' direct represents '1' with '15505'
15503 -15504 15505 0
-15505 15504 0
-15505 -15503 0
c Var 'aux1322' direct represents '2' with '-15504'
15503 15505 -15504 0
c Encoding variable: aux1323 with domain: int(0..2) (representing constraint ((field_00003_00008=2) + (field_00005_00008=2)))
c Both direct and order encoding.
c Var 'aux1323' order represents '0' with '15506'
c Var 'aux1323' direct represents '0' with '15506'
c Var 'aux1323' order represents '1' with '15507'
-15506 15507 0
c Var 'aux1323' direct represents '1' with '15508'
15506 -15507 15508 0
-15508 15507 0
-15508 -15506 0
c Var 'aux1323' direct represents '2' with '-15507'
15506 15508 -15507 0
c Encoding variable: aux1324 with domain: int(0..3) (representing constraint ((field_00002_00008=2) + aux1323))
c Both direct and order encoding.
c Var 'aux1324' order represents '0' with '15509'
c Var 'aux1324' direct represents '0' with '15509'
c Var 'aux1324' order represents '1' with '15510'
-15509 15510 0
c Var 'aux1324' direct represents '1' with '15511'
15509 -15510 15511 0
-15511 15510 0
-15511 -15509 0
c Var 'aux1324' order represents '2' with '15512'
-15510 15512 0
c Var 'aux1324' direct represents '2' with '15513'
15510 -15512 15513 0
-15513 15512 0
-15513 -15510 0
c Var 'aux1324' direct represents '3' with '-15512'
15509 15511 15513 -15512 0
c Encoding variable: aux1325 with domain: int(0..4) (representing constraint (aux1320 + aux1322))
c Both direct and order encoding.
c Var 'aux1325' order represents '0' with '15514'
c Var 'aux1325' direct represents '0' with '15514'
c Var 'aux1325' order represents '1' with '15515'
-15514 15515 0
c Var 'aux1325' direct represents '1' with '15516'
15514 -15515 15516 0
-15516 15515 0
-15516 -15514 0
c Var 'aux1325' order represents '2' with '15517'
-15515 15517 0
c Var 'aux1325' direct represents '2' with '15518'
15515 -15517 15518 0
-15518 15517 0
-15518 -15515 0
c Var 'aux1325' order represents '3' with '15519'
-15517 15519 0
c Var 'aux1325' direct represents '3' with '15520'
15517 -15519 15520 0
-15520 15519 0
-15520 -15517 0
c Var 'aux1325' direct represents '4' with '-15519'
15514 15516 15518 15520 -15519 0
c Encoding variable: aux1326 with domain: int(0..2) (representing constraint ((field_00004_00008=3) + (field_00006_00008=3)))
c Both direct and order encoding.
c Var 'aux1326' order represents '0' with '15521'
c Var 'aux1326' direct represents '0' with '15521'
c Var 'aux1326' order represents '1' with '15522'
-15521 15522 0
c Var 'aux1326' direct represents '1' with '15523'
15521 -15522 15523 0
-15523 15522 0
-15523 -15521 0
c Var 'aux1326' direct represents '2' with '-15522'
15521 15523 -15522 0
c Encoding variable: aux1327 with domain: int(0..2) (representing constraint ((field_00001_00008=3) + (field_00009_00008=3)))
c Both direct and order encoding.
c Var 'aux1327' order represents '0' with '15524'
c Var 'aux1327' direct represents '0' with '15524'
c Var 'aux1327' order represents '1' with '15525'
-15524 15525 0
c Var 'aux1327' direct represents '1' with '15526'
15524 -15525 15526 0
-15526 15525 0
-15526 -15524 0
c Var 'aux1327' direct represents '2' with '-15525'
15524 15526 -15525 0
c Encoding variable: aux1328 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00007_00008=3)))
c Both direct and order encoding.
c Var 'aux1328' order represents '0' with '15527'
c Var 'aux1328' direct represents '0' with '15527'
c Var 'aux1328' order represents '1' with '15528'
-15527 15528 0
c Var 'aux1328' direct represents '1' with '15529'
15527 -15528 15529 0
-15529 15528 0
-15529 -15527 0
c Var 'aux1328' direct represents '2' with '-15528'
15527 15529 -15528 0
c Encoding variable: aux1329 with domain: int(0..2) (representing constraint ((field_00003_00008=3) + (field_00005_00008=3)))
c Both direct and order encoding.
c Var 'aux1329' order represents '0' with '15530'
c Var 'aux1329' direct represents '0' with '15530'
c Var 'aux1329' order represents '1' with '15531'
-15530 15531 0
c Var 'aux1329' direct represents '1' with '15532'
15530 -15531 15532 0
-15532 15531 0
-15532 -15530 0
c Var 'aux1329' direct represents '2' with '-15531'
15530 15532 -15531 0
c Encoding variable: aux1330 with domain: int(0..3) (representing constraint ((field_00002_00008=3) + aux1329))
c Both direct and order encoding.
c Var 'aux1330' order represents '0' with '15533'
c Var 'aux1330' direct represents '0' with '15533'
c Var 'aux1330' order represents '1' with '15534'
-15533 15534 0
c Var 'aux1330' direct represents '1' with '15535'
15533 -15534 15535 0
-15535 15534 0
-15535 -15533 0
c Var 'aux1330' order represents '2' with '15536'
-15534 15536 0
c Var 'aux1330' direct represents '2' with '15537'
15534 -15536 15537 0
-15537 15536 0
-15537 -15534 0
c Var 'aux1330' direct represents '3' with '-15536'
15533 15535 15537 -15536 0
c Encoding variable: aux1331 with domain: int(0..4) (representing constraint (aux1326 + aux1328))
c Both direct and order encoding.
c Var 'aux1331' order represents '0' with '15538'
c Var 'aux1331' direct represents '0' with '15538'
c Var 'aux1331' order represents '1' with '15539'
-15538 15539 0
c Var 'aux1331' direct represents '1' with '15540'
15538 -15539 15540 0
-15540 15539 0
-15540 -15538 0
c Var 'aux1331' order represents '2' with '15541'
-15539 15541 0
c Var 'aux1331' direct represents '2' with '15542'
15539 -15541 15542 0
-15542 15541 0
-15542 -15539 0
c Var 'aux1331' order represents '3' with '15543'
-15541 15543 0
c Var 'aux1331' direct represents '3' with '15544'
15541 -15543 15544 0
-15544 15543 0
-15544 -15541 0
c Var 'aux1331' direct represents '4' with '-15543'
15538 15540 15542 15544 -15543 0
c Encoding variable: aux1332 with domain: int(0..2) (representing constraint ((field_00004_00008=4) + (field_00006_00008=4)))
c Both direct and order encoding.
c Var 'aux1332' order represents '0' with '15545'
c Var 'aux1332' direct represents '0' with '15545'
c Var 'aux1332' order represents '1' with '15546'
-15545 15546 0
c Var 'aux1332' direct represents '1' with '15547'
15545 -15546 15547 0
-15547 15546 0
-15547 -15545 0
c Var 'aux1332' direct represents '2' with '-15546'
15545 15547 -15546 0
c Encoding variable: aux1333 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00009_00008=4)))
c Both direct and order encoding.
c Var 'aux1333' order represents '0' with '15548'
c Var 'aux1333' direct represents '0' with '15548'
c Var 'aux1333' order represents '1' with '15549'
-15548 15549 0
c Var 'aux1333' direct represents '1' with '15550'
15548 -15549 15550 0
-15550 15549 0
-15550 -15548 0
c Var 'aux1333' direct represents '2' with '-15549'
15548 15550 -15549 0
c Encoding variable: aux1334 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00007_00008=4)))
c Both direct and order encoding.
c Var 'aux1334' order represents '0' with '15551'
c Var 'aux1334' direct represents '0' with '15551'
c Var 'aux1334' order represents '1' with '15552'
-15551 15552 0
c Var 'aux1334' direct represents '1' with '15553'
15551 -15552 15553 0
-15553 15552 0
-15553 -15551 0
c Var 'aux1334' direct represents '2' with '-15552'
15551 15553 -15552 0
c Encoding variable: aux1335 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00005_00008=4)))
c Both direct and order encoding.
c Var 'aux1335' order represents '0' with '15554'
c Var 'aux1335' direct represents '0' with '15554'
c Var 'aux1335' order represents '1' with '15555'
-15554 15555 0
c Var 'aux1335' direct represents '1' with '15556'
15554 -15555 15556 0
-15556 15555 0
-15556 -15554 0
c Var 'aux1335' direct represents '2' with '-15555'
15554 15556 -15555 0
c Encoding variable: aux1336 with domain: int(0..3) (representing constraint ((field_00002_00008=4) + aux1335))
c Both direct and order encoding.
c Var 'aux1336' order represents '0' with '15557'
c Var 'aux1336' direct represents '0' with '15557'
c Var 'aux1336' order represents '1' with '15558'
-15557 15558 0
c Var 'aux1336' direct represents '1' with '15559'
15557 -15558 15559 0
-15559 15558 0
-15559 -15557 0
c Var 'aux1336' order represents '2' with '15560'
-15558 15560 0
c Var 'aux1336' direct represents '2' with '15561'
15558 -15560 15561 0
-15561 15560 0
-15561 -15558 0
c Var 'aux1336' direct represents '3' with '-15560'
15557 15559 15561 -15560 0
c Encoding variable: aux1337 with domain: int(0..4) (representing constraint (aux1332 + aux1334))
c Both direct and order encoding.
c Var 'aux1337' order represents '0' with '15562'
c Var 'aux1337' direct represents '0' with '15562'
c Var 'aux1337' order represents '1' with '15563'
-15562 15563 0
c Var 'aux1337' direct represents '1' with '15564'
15562 -15563 15564 0
-15564 15563 0
-15564 -15562 0
c Var 'aux1337' order represents '2' with '15565'
-15563 15565 0
c Var 'aux1337' direct represents '2' with '15566'
15563 -15565 15566 0
-15566 15565 0
-15566 -15563 0
c Var 'aux1337' order represents '3' with '15567'
-15565 15567 0
c Var 'aux1337' direct represents '3' with '15568'
15565 -15567 15568 0
-15568 15567 0
-15568 -15565 0
c Var 'aux1337' direct represents '4' with '-15567'
15562 15564 15566 15568 -15567 0
c Encoding variable: aux1338 with domain: int(0..2) (representing constraint ((field_00004_00008=5) + (field_00006_00008=5)))
c Both direct and order encoding.
c Var 'aux1338' order represents '0' with '15569'
c Var 'aux1338' direct represents '0' with '15569'
c Var 'aux1338' order represents '1' with '15570'
-15569 15570 0
c Var 'aux1338' direct represents '1' with '15571'
15569 -15570 15571 0
-15571 15570 0
-15571 -15569 0
c Var 'aux1338' direct represents '2' with '-15570'
15569 15571 -15570 0
c Encoding variable: aux1339 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00009_00008=5)))
c Both direct and order encoding.
c Var 'aux1339' order represents '0' with '15572'
c Var 'aux1339' direct represents '0' with '15572'
c Var 'aux1339' order represents '1' with '15573'
-15572 15573 0
c Var 'aux1339' direct represents '1' with '15574'
15572 -15573 15574 0
-15574 15573 0
-15574 -15572 0
c Var 'aux1339' direct represents '2' with '-15573'
15572 15574 -15573 0
c Encoding variable: aux1340 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux1340' order represents '0' with '15575'
c Var 'aux1340' direct represents '0' with '15575'
c Var 'aux1340' order represents '1' with '15576'
-15575 15576 0
c Var 'aux1340' direct represents '1' with '15577'
15575 -15576 15577 0
-15577 15576 0
-15577 -15575 0
c Var 'aux1340' direct represents '2' with '-15576'
15575 15577 -15576 0
c Encoding variable: aux1341 with domain: int(0..2) (representing constraint ((field_00003_00008=5) + (field_00005_00008=5)))
c Both direct and order encoding.
c Var 'aux1341' order represents '0' with '15578'
c Var 'aux1341' direct represents '0' with '15578'
c Var 'aux1341' order represents '1' with '15579'
-15578 15579 0
c Var 'aux1341' direct represents '1' with '15580'
15578 -15579 15580 0
-15580 15579 0
-15580 -15578 0
c Var 'aux1341' direct represents '2' with '-15579'
15578 15580 -15579 0
c Encoding variable: aux1342 with domain: int(0..3) (representing constraint ((field_00002_00008=5) + aux1341))
c Both direct and order encoding.
c Var 'aux1342' order represents '0' with '15581'
c Var 'aux1342' direct represents '0' with '15581'
c Var 'aux1342' order represents '1' with '15582'
-15581 15582 0
c Var 'aux1342' direct represents '1' with '15583'
15581 -15582 15583 0
-15583 15582 0
-15583 -15581 0
c Var 'aux1342' order represents '2' with '15584'
-15582 15584 0
c Var 'aux1342' direct represents '2' with '15585'
15582 -15584 15585 0
-15585 15584 0
-15585 -15582 0
c Var 'aux1342' direct represents '3' with '-15584'
15581 15583 15585 -15584 0
c Encoding variable: aux1343 with domain: int(0..4) (representing constraint (aux1338 + aux1340))
c Both direct and order encoding.
c Var 'aux1343' order represents '0' with '15586'
c Var 'aux1343' direct represents '0' with '15586'
c Var 'aux1343' order represents '1' with '15587'
-15586 15587 0
c Var 'aux1343' direct represents '1' with '15588'
15586 -15587 15588 0
-15588 15587 0
-15588 -15586 0
c Var 'aux1343' order represents '2' with '15589'
-15587 15589 0
c Var 'aux1343' direct represents '2' with '15590'
15587 -15589 15590 0
-15590 15589 0
-15590 -15587 0
c Var 'aux1343' order represents '3' with '15591'
-15589 15591 0
c Var 'aux1343' direct represents '3' with '15592'
15589 -15591 15592 0
-15592 15591 0
-15592 -15589 0
c Var 'aux1343' direct represents '4' with '-15591'
15586 15588 15590 15592 -15591 0
c Encoding variable: aux1344 with domain: int(0..2) (representing constraint ((field_00004_00008=6) + (field_00006_00008=6)))
c Both direct and order encoding.
c Var 'aux1344' order represents '0' with '15593'
c Var 'aux1344' direct represents '0' with '15593'
c Var 'aux1344' order represents '1' with '15594'
-15593 15594 0
c Var 'aux1344' direct represents '1' with '15595'
15593 -15594 15595 0
-15595 15594 0
-15595 -15593 0
c Var 'aux1344' direct represents '2' with '-15594'
15593 15595 -15594 0
c Encoding variable: aux1345 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00009_00008=6)))
c Both direct and order encoding.
c Var 'aux1345' order represents '0' with '15596'
c Var 'aux1345' direct represents '0' with '15596'
c Var 'aux1345' order represents '1' with '15597'
-15596 15597 0
c Var 'aux1345' direct represents '1' with '15598'
15596 -15597 15598 0
-15598 15597 0
-15598 -15596 0
c Var 'aux1345' direct represents '2' with '-15597'
15596 15598 -15597 0
c Encoding variable: aux1346 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00007_00008=6)))
c Both direct and order encoding.
c Var 'aux1346' order represents '0' with '15599'
c Var 'aux1346' direct represents '0' with '15599'
c Var 'aux1346' order represents '1' with '15600'
-15599 15600 0
c Var 'aux1346' direct represents '1' with '15601'
15599 -15600 15601 0
-15601 15600 0
-15601 -15599 0
c Var 'aux1346' direct represents '2' with '-15600'
15599 15601 -15600 0
c Encoding variable: aux1347 with domain: int(0..2) (representing constraint ((field_00003_00008=6) + (field_00005_00008=6)))
c Both direct and order encoding.
c Var 'aux1347' order represents '0' with '15602'
c Var 'aux1347' direct represents '0' with '15602'
c Var 'aux1347' order represents '1' with '15603'
-15602 15603 0
c Var 'aux1347' direct represents '1' with '15604'
15602 -15603 15604 0
-15604 15603 0
-15604 -15602 0
c Var 'aux1347' direct represents '2' with '-15603'
15602 15604 -15603 0
c Encoding variable: aux1348 with domain: int(0..3) (representing constraint ((field_00002_00008=6) + aux1347))
c Both direct and order encoding.
c Var 'aux1348' order represents '0' with '15605'
c Var 'aux1348' direct represents '0' with '15605'
c Var 'aux1348' order represents '1' with '15606'
-15605 15606 0
c Var 'aux1348' direct represents '1' with '15607'
15605 -15606 15607 0
-15607 15606 0
-15607 -15605 0
c Var 'aux1348' order represents '2' with '15608'
-15606 15608 0
c Var 'aux1348' direct represents '2' with '15609'
15606 -15608 15609 0
-15609 15608 0
-15609 -15606 0
c Var 'aux1348' direct represents '3' with '-15608'
15605 15607 15609 -15608 0
c Encoding variable: aux1349 with domain: int(0..4) (representing constraint (aux1344 + aux1346))
c Both direct and order encoding.
c Var 'aux1349' order represents '0' with '15610'
c Var 'aux1349' direct represents '0' with '15610'
c Var 'aux1349' order represents '1' with '15611'
-15610 15611 0
c Var 'aux1349' direct represents '1' with '15612'
15610 -15611 15612 0
-15612 15611 0
-15612 -15610 0
c Var 'aux1349' order represents '2' with '15613'
-15611 15613 0
c Var 'aux1349' direct represents '2' with '15614'
15611 -15613 15614 0
-15614 15613 0
-15614 -15611 0
c Var 'aux1349' order represents '3' with '15615'
-15613 15615 0
c Var 'aux1349' direct represents '3' with '15616'
15613 -15615 15616 0
-15616 15615 0
-15616 -15613 0
c Var 'aux1349' direct represents '4' with '-15615'
15610 15612 15614 15616 -15615 0
c Encoding variable: aux1350 with domain: int(0..2) (representing constraint ((field_00004_00008=7) + (field_00006_00008=7)))
c Both direct and order encoding.
c Var 'aux1350' order represents '0' with '15617'
c Var 'aux1350' direct represents '0' with '15617'
c Var 'aux1350' order represents '1' with '15618'
-15617 15618 0
c Var 'aux1350' direct represents '1' with '15619'
15617 -15618 15619 0
-15619 15618 0
-15619 -15617 0
c Var 'aux1350' direct represents '2' with '-15618'
15617 15619 -15618 0
c Encoding variable: aux1351 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00009_00008=7)))
c Both direct and order encoding.
c Var 'aux1351' order represents '0' with '15620'
c Var 'aux1351' direct represents '0' with '15620'
c Var 'aux1351' order represents '1' with '15621'
-15620 15621 0
c Var 'aux1351' direct represents '1' with '15622'
15620 -15621 15622 0
-15622 15621 0
-15622 -15620 0
c Var 'aux1351' direct represents '2' with '-15621'
15620 15622 -15621 0
c Encoding variable: aux1352 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00007_00008=7)))
c Both direct and order encoding.
c Var 'aux1352' order represents '0' with '15623'
c Var 'aux1352' direct represents '0' with '15623'
c Var 'aux1352' order represents '1' with '15624'
-15623 15624 0
c Var 'aux1352' direct represents '1' with '15625'
15623 -15624 15625 0
-15625 15624 0
-15625 -15623 0
c Var 'aux1352' direct represents '2' with '-15624'
15623 15625 -15624 0
c Encoding variable: aux1353 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00005_00008=7)))
c Both direct and order encoding.
c Var 'aux1353' order represents '0' with '15626'
c Var 'aux1353' direct represents '0' with '15626'
c Var 'aux1353' order represents '1' with '15627'
-15626 15627 0
c Var 'aux1353' direct represents '1' with '15628'
15626 -15627 15628 0
-15628 15627 0
-15628 -15626 0
c Var 'aux1353' direct represents '2' with '-15627'
15626 15628 -15627 0
c Encoding variable: aux1354 with domain: int(0..3) (representing constraint ((field_00002_00008=7) + aux1353))
c Both direct and order encoding.
c Var 'aux1354' order represents '0' with '15629'
c Var 'aux1354' direct represents '0' with '15629'
c Var 'aux1354' order represents '1' with '15630'
-15629 15630 0
c Var 'aux1354' direct represents '1' with '15631'
15629 -15630 15631 0
-15631 15630 0
-15631 -15629 0
c Var 'aux1354' order represents '2' with '15632'
-15630 15632 0
c Var 'aux1354' direct represents '2' with '15633'
15630 -15632 15633 0
-15633 15632 0
-15633 -15630 0
c Var 'aux1354' direct represents '3' with '-15632'
15629 15631 15633 -15632 0
c Encoding variable: aux1355 with domain: int(0..4) (representing constraint (aux1350 + aux1352))
c Both direct and order encoding.
c Var 'aux1355' order represents '0' with '15634'
c Var 'aux1355' direct represents '0' with '15634'
c Var 'aux1355' order represents '1' with '15635'
-15634 15635 0
c Var 'aux1355' direct represents '1' with '15636'
15634 -15635 15636 0
-15636 15635 0
-15636 -15634 0
c Var 'aux1355' order represents '2' with '15637'
-15635 15637 0
c Var 'aux1355' direct represents '2' with '15638'
15635 -15637 15638 0
-15638 15637 0
-15638 -15635 0
c Var 'aux1355' order represents '3' with '15639'
-15637 15639 0
c Var 'aux1355' direct represents '3' with '15640'
15637 -15639 15640 0
-15640 15639 0
-15640 -15637 0
c Var 'aux1355' direct represents '4' with '-15639'
15634 15636 15638 15640 -15639 0
c Encoding variable: aux1356 with domain: int(0..2) (representing constraint ((field_00004_00008=8) + (field_00006_00008=8)))
c Both direct and order encoding.
c Var 'aux1356' order represents '0' with '15641'
c Var 'aux1356' direct represents '0' with '15641'
c Var 'aux1356' order represents '1' with '15642'
-15641 15642 0
c Var 'aux1356' direct represents '1' with '15643'
15641 -15642 15643 0
-15643 15642 0
-15643 -15641 0
c Var 'aux1356' direct represents '2' with '-15642'
15641 15643 -15642 0
c Encoding variable: aux1357 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00009_00008=8)))
c Both direct and order encoding.
c Var 'aux1357' order represents '0' with '15644'
c Var 'aux1357' direct represents '0' with '15644'
c Var 'aux1357' order represents '1' with '15645'
-15644 15645 0
c Var 'aux1357' direct represents '1' with '15646'
15644 -15645 15646 0
-15646 15645 0
-15646 -15644 0
c Var 'aux1357' direct represents '2' with '-15645'
15644 15646 -15645 0
c Encoding variable: aux1358 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00007_00008=8)))
c Both direct and order encoding.
c Var 'aux1358' order represents '0' with '15647'
c Var 'aux1358' direct represents '0' with '15647'
c Var 'aux1358' order represents '1' with '15648'
-15647 15648 0
c Var 'aux1358' direct represents '1' with '15649'
15647 -15648 15649 0
-15649 15648 0
-15649 -15647 0
c Var 'aux1358' direct represents '2' with '-15648'
15647 15649 -15648 0
c Encoding variable: aux1359 with domain: int(0..2) (representing constraint ((field_00003_00008=8) + (field_00005_00008=8)))
c Both direct and order encoding.
c Var 'aux1359' order represents '0' with '15650'
c Var 'aux1359' direct represents '0' with '15650'
c Var 'aux1359' order represents '1' with '15651'
-15650 15651 0
c Var 'aux1359' direct represents '1' with '15652'
15650 -15651 15652 0
-15652 15651 0
-15652 -15650 0
c Var 'aux1359' direct represents '2' with '-15651'
15650 15652 -15651 0
c Encoding variable: aux1360 with domain: int(0..3) (representing constraint ((field_00002_00008=8) + aux1359))
c Both direct and order encoding.
c Var 'aux1360' order represents '0' with '15653'
c Var 'aux1360' direct represents '0' with '15653'
c Var 'aux1360' order represents '1' with '15654'
-15653 15654 0
c Var 'aux1360' direct represents '1' with '15655'
15653 -15654 15655 0
-15655 15654 0
-15655 -15653 0
c Var 'aux1360' order represents '2' with '15656'
-15654 15656 0
c Var 'aux1360' direct represents '2' with '15657'
15654 -15656 15657 0
-15657 15656 0
-15657 -15654 0
c Var 'aux1360' direct represents '3' with '-15656'
15653 15655 15657 -15656 0
c Encoding variable: aux1361 with domain: int(0..4) (representing constraint (aux1356 + aux1358))
c Both direct and order encoding.
c Var 'aux1361' order represents '0' with '15658'
c Var 'aux1361' direct represents '0' with '15658'
c Var 'aux1361' order represents '1' with '15659'
-15658 15659 0
c Var 'aux1361' direct represents '1' with '15660'
15658 -15659 15660 0
-15660 15659 0
-15660 -15658 0
c Var 'aux1361' order represents '2' with '15661'
-15659 15661 0
c Var 'aux1361' direct represents '2' with '15662'
15659 -15661 15662 0
-15662 15661 0
-15662 -15659 0
c Var 'aux1361' order represents '3' with '15663'
-15661 15663 0
c Var 'aux1361' direct represents '3' with '15664'
15661 -15663 15664 0
-15664 15663 0
-15664 -15661 0
c Var 'aux1361' direct represents '4' with '-15663'
15658 15660 15662 15664 -15663 0
c Encoding variable: aux1362 with domain: int(0..2) (representing constraint ((field_00004_00008=9) + (field_00006_00008=9)))
c Both direct and order encoding.
c Var 'aux1362' order represents '0' with '15665'
c Var 'aux1362' direct represents '0' with '15665'
c Var 'aux1362' order represents '1' with '15666'
-15665 15666 0
c Var 'aux1362' direct represents '1' with '15667'
15665 -15666 15667 0
-15667 15666 0
-15667 -15665 0
c Var 'aux1362' direct represents '2' with '-15666'
15665 15667 -15666 0
c Encoding variable: aux1363 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00009_00008=9)))
c Both direct and order encoding.
c Var 'aux1363' order represents '0' with '15668'
c Var 'aux1363' direct represents '0' with '15668'
c Var 'aux1363' order represents '1' with '15669'
-15668 15669 0
c Var 'aux1363' direct represents '1' with '15670'
15668 -15669 15670 0
-15670 15669 0
-15670 -15668 0
c Var 'aux1363' direct represents '2' with '-15669'
15668 15670 -15669 0
c Encoding variable: aux1364 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux1364' order represents '0' with '15671'
c Var 'aux1364' direct represents '0' with '15671'
c Var 'aux1364' order represents '1' with '15672'
-15671 15672 0
c Var 'aux1364' direct represents '1' with '15673'
15671 -15672 15673 0
-15673 15672 0
-15673 -15671 0
c Var 'aux1364' direct represents '2' with '-15672'
15671 15673 -15672 0
c Encoding variable: aux1365 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00005_00008=9)))
c Both direct and order encoding.
c Var 'aux1365' order represents '0' with '15674'
c Var 'aux1365' direct represents '0' with '15674'
c Var 'aux1365' order represents '1' with '15675'
-15674 15675 0
c Var 'aux1365' direct represents '1' with '15676'
15674 -15675 15676 0
-15676 15675 0
-15676 -15674 0
c Var 'aux1365' direct represents '2' with '-15675'
15674 15676 -15675 0
c Encoding variable: aux1366 with domain: int(0..3) (representing constraint ((field_00002_00008=9) + aux1365))
c Both direct and order encoding.
c Var 'aux1366' order represents '0' with '15677'
c Var 'aux1366' direct represents '0' with '15677'
c Var 'aux1366' order represents '1' with '15678'
-15677 15678 0
c Var 'aux1366' direct represents '1' with '15679'
15677 -15678 15679 0
-15679 15678 0
-15679 -15677 0
c Var 'aux1366' order represents '2' with '15680'
-15678 15680 0
c Var 'aux1366' direct represents '2' with '15681'
15678 -15680 15681 0
-15681 15680 0
-15681 -15678 0
c Var 'aux1366' direct represents '3' with '-15680'
15677 15679 15681 -15680 0
c Encoding variable: aux1367 with domain: int(0..4) (representing constraint (aux1362 + aux1364))
c Both direct and order encoding.
c Var 'aux1367' order represents '0' with '15682'
c Var 'aux1367' direct represents '0' with '15682'
c Var 'aux1367' order represents '1' with '15683'
-15682 15683 0
c Var 'aux1367' direct represents '1' with '15684'
15682 -15683 15684 0
-15684 15683 0
-15684 -15682 0
c Var 'aux1367' order represents '2' with '15685'
-15683 15685 0
c Var 'aux1367' direct represents '2' with '15686'
15683 -15685 15686 0
-15686 15685 0
-15686 -15683 0
c Var 'aux1367' order represents '3' with '15687'
-15685 15687 0
c Var 'aux1367' direct represents '3' with '15688'
15685 -15687 15688 0
-15688 15687 0
-15688 -15685 0
c Var 'aux1367' direct represents '4' with '-15687'
15682 15684 15686 15688 -15687 0
c Encoding variable: aux1368 with domain: int(0..2) (representing constraint ((field_00004_00009=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux1368' order represents '0' with '15689'
c Var 'aux1368' direct represents '0' with '15689'
c Var 'aux1368' order represents '1' with '15690'
-15689 15690 0
c Var 'aux1368' direct represents '1' with '15691'
15689 -15690 15691 0
-15691 15690 0
-15691 -15689 0
c Var 'aux1368' direct represents '2' with '-15690'
15689 15691 -15690 0
c Encoding variable: aux1369 with domain: int(0..2) (representing constraint ((field_00001_00009=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux1369' order represents '0' with '15692'
c Var 'aux1369' direct represents '0' with '15692'
c Var 'aux1369' order represents '1' with '15693'
-15692 15693 0
c Var 'aux1369' direct represents '1' with '15694'
15692 -15693 15694 0
-15694 15693 0
-15694 -15692 0
c Var 'aux1369' direct represents '2' with '-15693'
15692 15694 -15693 0
c Encoding variable: aux1370 with domain: int(0..2) (representing constraint ((field_00008_00009=1) + (field_00007_00009=1)))
c Both direct and order encoding.
c Var 'aux1370' order represents '0' with '15695'
c Var 'aux1370' direct represents '0' with '15695'
c Var 'aux1370' order represents '1' with '15696'
-15695 15696 0
c Var 'aux1370' direct represents '1' with '15697'
15695 -15696 15697 0
-15697 15696 0
-15697 -15695 0
c Var 'aux1370' direct represents '2' with '-15696'
15695 15697 -15696 0
c Encoding variable: aux1371 with domain: int(0..2) (representing constraint ((field_00003_00009=1) + (field_00005_00009=1)))
c Both direct and order encoding.
c Var 'aux1371' order represents '0' with '15698'
c Var 'aux1371' direct represents '0' with '15698'
c Var 'aux1371' order represents '1' with '15699'
-15698 15699 0
c Var 'aux1371' direct represents '1' with '15700'
15698 -15699 15700 0
-15700 15699 0
-15700 -15698 0
c Var 'aux1371' direct represents '2' with '-15699'
15698 15700 -15699 0
c Encoding variable: aux1372 with domain: int(0..3) (representing constraint ((field_00002_00009=1) + aux1371))
c Both direct and order encoding.
c Var 'aux1372' order represents '0' with '15701'
c Var 'aux1372' direct represents '0' with '15701'
c Var 'aux1372' order represents '1' with '15702'
-15701 15702 0
c Var 'aux1372' direct represents '1' with '15703'
15701 -15702 15703 0
-15703 15702 0
-15703 -15701 0
c Var 'aux1372' order represents '2' with '15704'
-15702 15704 0
c Var 'aux1372' direct represents '2' with '15705'
15702 -15704 15705 0
-15705 15704 0
-15705 -15702 0
c Var 'aux1372' direct represents '3' with '-15704'
15701 15703 15705 -15704 0
c Encoding variable: aux1373 with domain: int(0..4) (representing constraint (aux1368 + aux1370))
c Both direct and order encoding.
c Var 'aux1373' order represents '0' with '15706'
c Var 'aux1373' direct represents '0' with '15706'
c Var 'aux1373' order represents '1' with '15707'
-15706 15707 0
c Var 'aux1373' direct represents '1' with '15708'
15706 -15707 15708 0
-15708 15707 0
-15708 -15706 0
c Var 'aux1373' order represents '2' with '15709'
-15707 15709 0
c Var 'aux1373' direct represents '2' with '15710'
15707 -15709 15710 0
-15710 15709 0
-15710 -15707 0
c Var 'aux1373' order represents '3' with '15711'
-15709 15711 0
c Var 'aux1373' direct represents '3' with '15712'
15709 -15711 15712 0
-15712 15711 0
-15712 -15709 0
c Var 'aux1373' direct represents '4' with '-15711'
15706 15708 15710 15712 -15711 0
c Encoding variable: aux1374 with domain: int(0..2) (representing constraint ((field_00004_00009=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux1374' order represents '0' with '15713'
c Var 'aux1374' direct represents '0' with '15713'
c Var 'aux1374' order represents '1' with '15714'
-15713 15714 0
c Var 'aux1374' direct represents '1' with '15715'
15713 -15714 15715 0
-15715 15714 0
-15715 -15713 0
c Var 'aux1374' direct represents '2' with '-15714'
15713 15715 -15714 0
c Encoding variable: aux1375 with domain: int(0..2) (representing constraint ((field_00001_00009=2) + (field_00009_00009=2)))
c Both direct and order encoding.
c Var 'aux1375' order represents '0' with '15716'
c Var 'aux1375' direct represents '0' with '15716'
c Var 'aux1375' order represents '1' with '15717'
-15716 15717 0
c Var 'aux1375' direct represents '1' with '15718'
15716 -15717 15718 0
-15718 15717 0
-15718 -15716 0
c Var 'aux1375' direct represents '2' with '-15717'
15716 15718 -15717 0
c Encoding variable: aux1376 with domain: int(0..2) (representing constraint ((field_00008_00009=2) + (field_00007_00009=2)))
c Both direct and order encoding.
c Var 'aux1376' order represents '0' with '15719'
c Var 'aux1376' direct represents '0' with '15719'
c Var 'aux1376' order represents '1' with '15720'
-15719 15720 0
c Var 'aux1376' direct represents '1' with '15721'
15719 -15720 15721 0
-15721 15720 0
-15721 -15719 0
c Var 'aux1376' direct represents '2' with '-15720'
15719 15721 -15720 0
c Encoding variable: aux1377 with domain: int(0..2) (representing constraint ((field_00003_00009=2) + (field_00005_00009=2)))
c Both direct and order encoding.
c Var 'aux1377' order represents '0' with '15722'
c Var 'aux1377' direct represents '0' with '15722'
c Var 'aux1377' order represents '1' with '15723'
-15722 15723 0
c Var 'aux1377' direct represents '1' with '15724'
15722 -15723 15724 0
-15724 15723 0
-15724 -15722 0
c Var 'aux1377' direct represents '2' with '-15723'
15722 15724 -15723 0
c Encoding variable: aux1378 with domain: int(0..3) (representing constraint ((field_00002_00009=2) + aux1377))
c Both direct and order encoding.
c Var 'aux1378' order represents '0' with '15725'
c Var 'aux1378' direct represents '0' with '15725'
c Var 'aux1378' order represents '1' with '15726'
-15725 15726 0
c Var 'aux1378' direct represents '1' with '15727'
15725 -15726 15727 0
-15727 15726 0
-15727 -15725 0
c Var 'aux1378' order represents '2' with '15728'
-15726 15728 0
c Var 'aux1378' direct represents '2' with '15729'
15726 -15728 15729 0
-15729 15728 0
-15729 -15726 0
c Var 'aux1378' direct represents '3' with '-15728'
15725 15727 15729 -15728 0
c Encoding variable: aux1379 with domain: int(0..4) (representing constraint (aux1374 + aux1376))
c Both direct and order encoding.
c Var 'aux1379' order represents '0' with '15730'
c Var 'aux1379' direct represents '0' with '15730'
c Var 'aux1379' order represents '1' with '15731'
-15730 15731 0
c Var 'aux1379' direct represents '1' with '15732'
15730 -15731 15732 0
-15732 15731 0
-15732 -15730 0
c Var 'aux1379' order represents '2' with '15733'
-15731 15733 0
c Var 'aux1379' direct represents '2' with '15734'
15731 -15733 15734 0
-15734 15733 0
-15734 -15731 0
c Var 'aux1379' order represents '3' with '15735'
-15733 15735 0
c Var 'aux1379' direct represents '3' with '15736'
15733 -15735 15736 0
-15736 15735 0
-15736 -15733 0
c Var 'aux1379' direct represents '4' with '-15735'
15730 15732 15734 15736 -15735 0
c Encoding variable: aux1380 with domain: int(0..2) (representing constraint ((field_00004_00009=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux1380' order represents '0' with '15737'
c Var 'aux1380' direct represents '0' with '15737'
c Var 'aux1380' order represents '1' with '15738'
-15737 15738 0
c Var 'aux1380' direct represents '1' with '15739'
15737 -15738 15739 0
-15739 15738 0
-15739 -15737 0
c Var 'aux1380' direct represents '2' with '-15738'
15737 15739 -15738 0
c Encoding variable: aux1381 with domain: int(0..2) (representing constraint ((field_00001_00009=3) + (field_00009_00009=3)))
c Both direct and order encoding.
c Var 'aux1381' order represents '0' with '15740'
c Var 'aux1381' direct represents '0' with '15740'
c Var 'aux1381' order represents '1' with '15741'
-15740 15741 0
c Var 'aux1381' direct represents '1' with '15742'
15740 -15741 15742 0
-15742 15741 0
-15742 -15740 0
c Var 'aux1381' direct represents '2' with '-15741'
15740 15742 -15741 0
c Encoding variable: aux1382 with domain: int(0..2) (representing constraint ((field_00008_00009=3) + (field_00007_00009=3)))
c Both direct and order encoding.
c Var 'aux1382' order represents '0' with '15743'
c Var 'aux1382' direct represents '0' with '15743'
c Var 'aux1382' order represents '1' with '15744'
-15743 15744 0
c Var 'aux1382' direct represents '1' with '15745'
15743 -15744 15745 0
-15745 15744 0
-15745 -15743 0
c Var 'aux1382' direct represents '2' with '-15744'
15743 15745 -15744 0
c Encoding variable: aux1383 with domain: int(0..2) (representing constraint ((field_00003_00009=3) + (field_00005_00009=3)))
c Both direct and order encoding.
c Var 'aux1383' order represents '0' with '15746'
c Var 'aux1383' direct represents '0' with '15746'
c Var 'aux1383' order represents '1' with '15747'
-15746 15747 0
c Var 'aux1383' direct represents '1' with '15748'
15746 -15747 15748 0
-15748 15747 0
-15748 -15746 0
c Var 'aux1383' direct represents '2' with '-15747'
15746 15748 -15747 0
c Encoding variable: aux1384 with domain: int(0..3) (representing constraint ((field_00002_00009=3) + aux1383))
c Both direct and order encoding.
c Var 'aux1384' order represents '0' with '15749'
c Var 'aux1384' direct represents '0' with '15749'
c Var 'aux1384' order represents '1' with '15750'
-15749 15750 0
c Var 'aux1384' direct represents '1' with '15751'
15749 -15750 15751 0
-15751 15750 0
-15751 -15749 0
c Var 'aux1384' order represents '2' with '15752'
-15750 15752 0
c Var 'aux1384' direct represents '2' with '15753'
15750 -15752 15753 0
-15753 15752 0
-15753 -15750 0
c Var 'aux1384' direct represents '3' with '-15752'
15749 15751 15753 -15752 0
c Encoding variable: aux1385 with domain: int(0..4) (representing constraint (aux1380 + aux1382))
c Both direct and order encoding.
c Var 'aux1385' order represents '0' with '15754'
c Var 'aux1385' direct represents '0' with '15754'
c Var 'aux1385' order represents '1' with '15755'
-15754 15755 0
c Var 'aux1385' direct represents '1' with '15756'
15754 -15755 15756 0
-15756 15755 0
-15756 -15754 0
c Var 'aux1385' order represents '2' with '15757'
-15755 15757 0
c Var 'aux1385' direct represents '2' with '15758'
15755 -15757 15758 0
-15758 15757 0
-15758 -15755 0
c Var 'aux1385' order represents '3' with '15759'
-15757 15759 0
c Var 'aux1385' direct represents '3' with '15760'
15757 -15759 15760 0
-15760 15759 0
-15760 -15757 0
c Var 'aux1385' direct represents '4' with '-15759'
15754 15756 15758 15760 -15759 0
c Encoding variable: aux1386 with domain: int(0..2) (representing constraint ((field_00004_00009=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux1386' order represents '0' with '15761'
c Var 'aux1386' direct represents '0' with '15761'
c Var 'aux1386' order represents '1' with '15762'
-15761 15762 0
c Var 'aux1386' direct represents '1' with '15763'
15761 -15762 15763 0
-15763 15762 0
-15763 -15761 0
c Var 'aux1386' direct represents '2' with '-15762'
15761 15763 -15762 0
c Encoding variable: aux1387 with domain: int(0..2) (representing constraint ((field_00001_00009=4) + (field_00009_00009=4)))
c Both direct and order encoding.
c Var 'aux1387' order represents '0' with '15764'
c Var 'aux1387' direct represents '0' with '15764'
c Var 'aux1387' order represents '1' with '15765'
-15764 15765 0
c Var 'aux1387' direct represents '1' with '15766'
15764 -15765 15766 0
-15766 15765 0
-15766 -15764 0
c Var 'aux1387' direct represents '2' with '-15765'
15764 15766 -15765 0
c Encoding variable: aux1388 with domain: int(0..2) (representing constraint ((field_00008_00009=4) + (field_00007_00009=4)))
c Both direct and order encoding.
c Var 'aux1388' order represents '0' with '15767'
c Var 'aux1388' direct represents '0' with '15767'
c Var 'aux1388' order represents '1' with '15768'
-15767 15768 0
c Var 'aux1388' direct represents '1' with '15769'
15767 -15768 15769 0
-15769 15768 0
-15769 -15767 0
c Var 'aux1388' direct represents '2' with '-15768'
15767 15769 -15768 0
c Encoding variable: aux1389 with domain: int(0..2) (representing constraint ((field_00003_00009=4) + (field_00005_00009=4)))
c Both direct and order encoding.
c Var 'aux1389' order represents '0' with '15770'
c Var 'aux1389' direct represents '0' with '15770'
c Var 'aux1389' order represents '1' with '15771'
-15770 15771 0
c Var 'aux1389' direct represents '1' with '15772'
15770 -15771 15772 0
-15772 15771 0
-15772 -15770 0
c Var 'aux1389' direct represents '2' with '-15771'
15770 15772 -15771 0
c Encoding variable: aux1390 with domain: int(0..3) (representing constraint ((field_00002_00009=4) + aux1389))
c Both direct and order encoding.
c Var 'aux1390' order represents '0' with '15773'
c Var 'aux1390' direct represents '0' with '15773'
c Var 'aux1390' order represents '1' with '15774'
-15773 15774 0
c Var 'aux1390' direct represents '1' with '15775'
15773 -15774 15775 0
-15775 15774 0
-15775 -15773 0
c Var 'aux1390' order represents '2' with '15776'
-15774 15776 0
c Var 'aux1390' direct represents '2' with '15777'
15774 -15776 15777 0
-15777 15776 0
-15777 -15774 0
c Var 'aux1390' direct represents '3' with '-15776'
15773 15775 15777 -15776 0
c Encoding variable: aux1391 with domain: int(0..4) (representing constraint (aux1386 + aux1388))
c Both direct and order encoding.
c Var 'aux1391' order represents '0' with '15778'
c Var 'aux1391' direct represents '0' with '15778'
c Var 'aux1391' order represents '1' with '15779'
-15778 15779 0
c Var 'aux1391' direct represents '1' with '15780'
15778 -15779 15780 0
-15780 15779 0
-15780 -15778 0
c Var 'aux1391' order represents '2' with '15781'
-15779 15781 0
c Var 'aux1391' direct represents '2' with '15782'
15779 -15781 15782 0
-15782 15781 0
-15782 -15779 0
c Var 'aux1391' order represents '3' with '15783'
-15781 15783 0
c Var 'aux1391' direct represents '3' with '15784'
15781 -15783 15784 0
-15784 15783 0
-15784 -15781 0
c Var 'aux1391' direct represents '4' with '-15783'
15778 15780 15782 15784 -15783 0
c Encoding variable: aux1392 with domain: int(0..2) (representing constraint ((field_00004_00009=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux1392' order represents '0' with '15785'
c Var 'aux1392' direct represents '0' with '15785'
c Var 'aux1392' order represents '1' with '15786'
-15785 15786 0
c Var 'aux1392' direct represents '1' with '15787'
15785 -15786 15787 0
-15787 15786 0
-15787 -15785 0
c Var 'aux1392' direct represents '2' with '-15786'
15785 15787 -15786 0
c Encoding variable: aux1393 with domain: int(0..2) (representing constraint ((field_00001_00009=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux1393' order represents '0' with '15788'
c Var 'aux1393' direct represents '0' with '15788'
c Var 'aux1393' order represents '1' with '15789'
-15788 15789 0
c Var 'aux1393' direct represents '1' with '15790'
15788 -15789 15790 0
-15790 15789 0
-15790 -15788 0
c Var 'aux1393' direct represents '2' with '-15789'
15788 15790 -15789 0
c Encoding variable: aux1394 with domain: int(0..2) (representing constraint ((field_00008_00009=5) + (field_00007_00009=5)))
c Both direct and order encoding.
c Var 'aux1394' order represents '0' with '15791'
c Var 'aux1394' direct represents '0' with '15791'
c Var 'aux1394' order represents '1' with '15792'
-15791 15792 0
c Var 'aux1394' direct represents '1' with '15793'
15791 -15792 15793 0
-15793 15792 0
-15793 -15791 0
c Var 'aux1394' direct represents '2' with '-15792'
15791 15793 -15792 0
c Encoding variable: aux1395 with domain: int(0..2) (representing constraint ((field_00003_00009=5) + (field_00005_00009=5)))
c Both direct and order encoding.
c Var 'aux1395' order represents '0' with '15794'
c Var 'aux1395' direct represents '0' with '15794'
c Var 'aux1395' order represents '1' with '15795'
-15794 15795 0
c Var 'aux1395' direct represents '1' with '15796'
15794 -15795 15796 0
-15796 15795 0
-15796 -15794 0
c Var 'aux1395' direct represents '2' with '-15795'
15794 15796 -15795 0
c Encoding variable: aux1396 with domain: int(0..3) (representing constraint ((field_00002_00009=5) + aux1395))
c Both direct and order encoding.
c Var 'aux1396' order represents '0' with '15797'
c Var 'aux1396' direct represents '0' with '15797'
c Var 'aux1396' order represents '1' with '15798'
-15797 15798 0
c Var 'aux1396' direct represents '1' with '15799'
15797 -15798 15799 0
-15799 15798 0
-15799 -15797 0
c Var 'aux1396' order represents '2' with '15800'
-15798 15800 0
c Var 'aux1396' direct represents '2' with '15801'
15798 -15800 15801 0
-15801 15800 0
-15801 -15798 0
c Var 'aux1396' direct represents '3' with '-15800'
15797 15799 15801 -15800 0
c Encoding variable: aux1397 with domain: int(0..4) (representing constraint (aux1392 + aux1394))
c Both direct and order encoding.
c Var 'aux1397' order represents '0' with '15802'
c Var 'aux1397' direct represents '0' with '15802'
c Var 'aux1397' order represents '1' with '15803'
-15802 15803 0
c Var 'aux1397' direct represents '1' with '15804'
15802 -15803 15804 0
-15804 15803 0
-15804 -15802 0
c Var 'aux1397' order represents '2' with '15805'
-15803 15805 0
c Var 'aux1397' direct represents '2' with '15806'
15803 -15805 15806 0
-15806 15805 0
-15806 -15803 0
c Var 'aux1397' order represents '3' with '15807'
-15805 15807 0
c Var 'aux1397' direct represents '3' with '15808'
15805 -15807 15808 0
-15808 15807 0
-15808 -15805 0
c Var 'aux1397' direct represents '4' with '-15807'
15802 15804 15806 15808 -15807 0
c Encoding variable: aux1398 with domain: int(0..2) (representing constraint ((field_00004_00009=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux1398' order represents '0' with '15809'
c Var 'aux1398' direct represents '0' with '15809'
c Var 'aux1398' order represents '1' with '15810'
-15809 15810 0
c Var 'aux1398' direct represents '1' with '15811'
15809 -15810 15811 0
-15811 15810 0
-15811 -15809 0
c Var 'aux1398' direct represents '2' with '-15810'
15809 15811 -15810 0
c Encoding variable: aux1399 with domain: int(0..2) (representing constraint ((field_00001_00009=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux1399' order represents '0' with '15812'
c Var 'aux1399' direct represents '0' with '15812'
c Var 'aux1399' order represents '1' with '15813'
-15812 15813 0
c Var 'aux1399' direct represents '1' with '15814'
15812 -15813 15814 0
-15814 15813 0
-15814 -15812 0
c Var 'aux1399' direct represents '2' with '-15813'
15812 15814 -15813 0
c Encoding variable: aux1400 with domain: int(0..2) (representing constraint ((field_00008_00009=6) + (field_00007_00009=6)))
c Both direct and order encoding.
c Var 'aux1400' order represents '0' with '15815'
c Var 'aux1400' direct represents '0' with '15815'
c Var 'aux1400' order represents '1' with '15816'
-15815 15816 0
c Var 'aux1400' direct represents '1' with '15817'
15815 -15816 15817 0
-15817 15816 0
-15817 -15815 0
c Var 'aux1400' direct represents '2' with '-15816'
15815 15817 -15816 0
c Encoding variable: aux1401 with domain: int(0..2) (representing constraint ((field_00003_00009=6) + (field_00005_00009=6)))
c Both direct and order encoding.
c Var 'aux1401' order represents '0' with '15818'
c Var 'aux1401' direct represents '0' with '15818'
c Var 'aux1401' order represents '1' with '15819'
-15818 15819 0
c Var 'aux1401' direct represents '1' with '15820'
15818 -15819 15820 0
-15820 15819 0
-15820 -15818 0
c Var 'aux1401' direct represents '2' with '-15819'
15818 15820 -15819 0
c Encoding variable: aux1402 with domain: int(0..3) (representing constraint ((field_00002_00009=6) + aux1401))
c Both direct and order encoding.
c Var 'aux1402' order represents '0' with '15821'
c Var 'aux1402' direct represents '0' with '15821'
c Var 'aux1402' order represents '1' with '15822'
-15821 15822 0
c Var 'aux1402' direct represents '1' with '15823'
15821 -15822 15823 0
-15823 15822 0
-15823 -15821 0
c Var 'aux1402' order represents '2' with '15824'
-15822 15824 0
c Var 'aux1402' direct represents '2' with '15825'
15822 -15824 15825 0
-15825 15824 0
-15825 -15822 0
c Var 'aux1402' direct represents '3' with '-15824'
15821 15823 15825 -15824 0
c Encoding variable: aux1403 with domain: int(0..4) (representing constraint (aux1398 + aux1400))
c Both direct and order encoding.
c Var 'aux1403' order represents '0' with '15826'
c Var 'aux1403' direct represents '0' with '15826'
c Var 'aux1403' order represents '1' with '15827'
-15826 15827 0
c Var 'aux1403' direct represents '1' with '15828'
15826 -15827 15828 0
-15828 15827 0
-15828 -15826 0
c Var 'aux1403' order represents '2' with '15829'
-15827 15829 0
c Var 'aux1403' direct represents '2' with '15830'
15827 -15829 15830 0
-15830 15829 0
-15830 -15827 0
c Var 'aux1403' order represents '3' with '15831'
-15829 15831 0
c Var 'aux1403' direct represents '3' with '15832'
15829 -15831 15832 0
-15832 15831 0
-15832 -15829 0
c Var 'aux1403' direct represents '4' with '-15831'
15826 15828 15830 15832 -15831 0
c Encoding variable: aux1404 with domain: int(0..2) (representing constraint ((field_00004_00009=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux1404' order represents '0' with '15833'
c Var 'aux1404' direct represents '0' with '15833'
c Var 'aux1404' order represents '1' with '15834'
-15833 15834 0
c Var 'aux1404' direct represents '1' with '15835'
15833 -15834 15835 0
-15835 15834 0
-15835 -15833 0
c Var 'aux1404' direct represents '2' with '-15834'
15833 15835 -15834 0
c Encoding variable: aux1405 with domain: int(0..2) (representing constraint ((field_00001_00009=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux1405' order represents '0' with '15836'
c Var 'aux1405' direct represents '0' with '15836'
c Var 'aux1405' order represents '1' with '15837'
-15836 15837 0
c Var 'aux1405' direct represents '1' with '15838'
15836 -15837 15838 0
-15838 15837 0
-15838 -15836 0
c Var 'aux1405' direct represents '2' with '-15837'
15836 15838 -15837 0
c Encoding variable: aux1406 with domain: int(0..2) (representing constraint ((field_00008_00009=7) + (field_00007_00009=7)))
c Both direct and order encoding.
c Var 'aux1406' order represents '0' with '15839'
c Var 'aux1406' direct represents '0' with '15839'
c Var 'aux1406' order represents '1' with '15840'
-15839 15840 0
c Var 'aux1406' direct represents '1' with '15841'
15839 -15840 15841 0
-15841 15840 0
-15841 -15839 0
c Var 'aux1406' direct represents '2' with '-15840'
15839 15841 -15840 0
c Encoding variable: aux1407 with domain: int(0..2) (representing constraint ((field_00003_00009=7) + (field_00005_00009=7)))
c Both direct and order encoding.
c Var 'aux1407' order represents '0' with '15842'
c Var 'aux1407' direct represents '0' with '15842'
c Var 'aux1407' order represents '1' with '15843'
-15842 15843 0
c Var 'aux1407' direct represents '1' with '15844'
15842 -15843 15844 0
-15844 15843 0
-15844 -15842 0
c Var 'aux1407' direct represents '2' with '-15843'
15842 15844 -15843 0
c Encoding variable: aux1408 with domain: int(0..3) (representing constraint ((field_00002_00009=7) + aux1407))
c Both direct and order encoding.
c Var 'aux1408' order represents '0' with '15845'
c Var 'aux1408' direct represents '0' with '15845'
c Var 'aux1408' order represents '1' with '15846'
-15845 15846 0
c Var 'aux1408' direct represents '1' with '15847'
15845 -15846 15847 0
-15847 15846 0
-15847 -15845 0
c Var 'aux1408' order represents '2' with '15848'
-15846 15848 0
c Var 'aux1408' direct represents '2' with '15849'
15846 -15848 15849 0
-15849 15848 0
-15849 -15846 0
c Var 'aux1408' direct represents '3' with '-15848'
15845 15847 15849 -15848 0
c Encoding variable: aux1409 with domain: int(0..4) (representing constraint (aux1404 + aux1406))
c Both direct and order encoding.
c Var 'aux1409' order represents '0' with '15850'
c Var 'aux1409' direct represents '0' with '15850'
c Var 'aux1409' order represents '1' with '15851'
-15850 15851 0
c Var 'aux1409' direct represents '1' with '15852'
15850 -15851 15852 0
-15852 15851 0
-15852 -15850 0
c Var 'aux1409' order represents '2' with '15853'
-15851 15853 0
c Var 'aux1409' direct represents '2' with '15854'
15851 -15853 15854 0
-15854 15853 0
-15854 -15851 0
c Var 'aux1409' order represents '3' with '15855'
-15853 15855 0
c Var 'aux1409' direct represents '3' with '15856'
15853 -15855 15856 0
-15856 15855 0
-15856 -15853 0
c Var 'aux1409' direct represents '4' with '-15855'
15850 15852 15854 15856 -15855 0
c Encoding variable: aux1410 with domain: int(0..2) (representing constraint ((field_00004_00009=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux1410' order represents '0' with '15857'
c Var 'aux1410' direct represents '0' with '15857'
c Var 'aux1410' order represents '1' with '15858'
-15857 15858 0
c Var 'aux1410' direct represents '1' with '15859'
15857 -15858 15859 0
-15859 15858 0
-15859 -15857 0
c Var 'aux1410' direct represents '2' with '-15858'
15857 15859 -15858 0
c Encoding variable: aux1411 with domain: int(0..2) (representing constraint ((field_00001_00009=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux1411' order represents '0' with '15860'
c Var 'aux1411' direct represents '0' with '15860'
c Var 'aux1411' order represents '1' with '15861'
-15860 15861 0
c Var 'aux1411' direct represents '1' with '15862'
15860 -15861 15862 0
-15862 15861 0
-15862 -15860 0
c Var 'aux1411' direct represents '2' with '-15861'
15860 15862 -15861 0
c Encoding variable: aux1412 with domain: int(0..2) (representing constraint ((field_00008_00009=8) + (field_00007_00009=8)))
c Both direct and order encoding.
c Var 'aux1412' order represents '0' with '15863'
c Var 'aux1412' direct represents '0' with '15863'
c Var 'aux1412' order represents '1' with '15864'
-15863 15864 0
c Var 'aux1412' direct represents '1' with '15865'
15863 -15864 15865 0
-15865 15864 0
-15865 -15863 0
c Var 'aux1412' direct represents '2' with '-15864'
15863 15865 -15864 0
c Encoding variable: aux1413 with domain: int(0..2) (representing constraint ((field_00003_00009=8) + (field_00005_00009=8)))
c Both direct and order encoding.
c Var 'aux1413' order represents '0' with '15866'
c Var 'aux1413' direct represents '0' with '15866'
c Var 'aux1413' order represents '1' with '15867'
-15866 15867 0
c Var 'aux1413' direct represents '1' with '15868'
15866 -15867 15868 0
-15868 15867 0
-15868 -15866 0
c Var 'aux1413' direct represents '2' with '-15867'
15866 15868 -15867 0
c Encoding variable: aux1414 with domain: int(0..3) (representing constraint ((field_00002_00009=8) + aux1413))
c Both direct and order encoding.
c Var 'aux1414' order represents '0' with '15869'
c Var 'aux1414' direct represents '0' with '15869'
c Var 'aux1414' order represents '1' with '15870'
-15869 15870 0
c Var 'aux1414' direct represents '1' with '15871'
15869 -15870 15871 0
-15871 15870 0
-15871 -15869 0
c Var 'aux1414' order represents '2' with '15872'
-15870 15872 0
c Var 'aux1414' direct represents '2' with '15873'
15870 -15872 15873 0
-15873 15872 0
-15873 -15870 0
c Var 'aux1414' direct represents '3' with '-15872'
15869 15871 15873 -15872 0
c Encoding variable: aux1415 with domain: int(0..4) (representing constraint (aux1410 + aux1412))
c Both direct and order encoding.
c Var 'aux1415' order represents '0' with '15874'
c Var 'aux1415' direct represents '0' with '15874'
c Var 'aux1415' order represents '1' with '15875'
-15874 15875 0
c Var 'aux1415' direct represents '1' with '15876'
15874 -15875 15876 0
-15876 15875 0
-15876 -15874 0
c Var 'aux1415' order represents '2' with '15877'
-15875 15877 0
c Var 'aux1415' direct represents '2' with '15878'
15875 -15877 15878 0
-15878 15877 0
-15878 -15875 0
c Var 'aux1415' order represents '3' with '15879'
-15877 15879 0
c Var 'aux1415' direct represents '3' with '15880'
15877 -15879 15880 0
-15880 15879 0
-15880 -15877 0
c Var 'aux1415' direct represents '4' with '-15879'
15874 15876 15878 15880 -15879 0
c Encoding variable: aux1416 with domain: int(0..2) (representing constraint ((field_00004_00009=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux1416' order represents '0' with '15881'
c Var 'aux1416' direct represents '0' with '15881'
c Var 'aux1416' order represents '1' with '15882'
-15881 15882 0
c Var 'aux1416' direct represents '1' with '15883'
15881 -15882 15883 0
-15883 15882 0
-15883 -15881 0
c Var 'aux1416' direct represents '2' with '-15882'
15881 15883 -15882 0
c Encoding variable: aux1417 with domain: int(0..2) (representing constraint ((field_00001_00009=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux1417' order represents '0' with '15884'
c Var 'aux1417' direct represents '0' with '15884'
c Var 'aux1417' order represents '1' with '15885'
-15884 15885 0
c Var 'aux1417' direct represents '1' with '15886'
15884 -15885 15886 0
-15886 15885 0
-15886 -15884 0
c Var 'aux1417' direct represents '2' with '-15885'
15884 15886 -15885 0
c Encoding variable: aux1418 with domain: int(0..2) (representing constraint ((field_00008_00009=9) + (field_00007_00009=9)))
c Both direct and order encoding.
c Var 'aux1418' order represents '0' with '15887'
c Var 'aux1418' direct represents '0' with '15887'
c Var 'aux1418' order represents '1' with '15888'
-15887 15888 0
c Var 'aux1418' direct represents '1' with '15889'
15887 -15888 15889 0
-15889 15888 0
-15889 -15887 0
c Var 'aux1418' direct represents '2' with '-15888'
15887 15889 -15888 0
c Encoding variable: aux1419 with domain: int(0..2) (representing constraint ((field_00003_00009=9) + (field_00005_00009=9)))
c Both direct and order encoding.
c Var 'aux1419' order represents '0' with '15890'
c Var 'aux1419' direct represents '0' with '15890'
c Var 'aux1419' order represents '1' with '15891'
-15890 15891 0
c Var 'aux1419' direct represents '1' with '15892'
15890 -15891 15892 0
-15892 15891 0
-15892 -15890 0
c Var 'aux1419' direct represents '2' with '-15891'
15890 15892 -15891 0
c Encoding variable: aux1420 with domain: int(0..3) (representing constraint ((field_00002_00009=9) + aux1419))
c Both direct and order encoding.
c Var 'aux1420' order represents '0' with '15893'
c Var 'aux1420' direct represents '0' with '15893'
c Var 'aux1420' order represents '1' with '15894'
-15893 15894 0
c Var 'aux1420' direct represents '1' with '15895'
15893 -15894 15895 0
-15895 15894 0
-15895 -15893 0
c Var 'aux1420' order represents '2' with '15896'
-15894 15896 0
c Var 'aux1420' direct represents '2' with '15897'
15894 -15896 15897 0
-15897 15896 0
-15897 -15894 0
c Var 'aux1420' direct represents '3' with '-15896'
15893 15895 15897 -15896 0
c Encoding variable: aux1421 with domain: int(0..4) (representing constraint (aux1416 + aux1418))
c Both direct and order encoding.
c Var 'aux1421' order represents '0' with '15898'
c Var 'aux1421' direct represents '0' with '15898'
c Var 'aux1421' order represents '1' with '15899'
-15898 15899 0
c Var 'aux1421' direct represents '1' with '15900'
15898 -15899 15900 0
-15900 15899 0
-15900 -15898 0
c Var 'aux1421' order represents '2' with '15901'
-15899 15901 0
c Var 'aux1421' direct represents '2' with '15902'
15899 -15901 15902 0
-15902 15901 0
-15902 -15899 0
c Var 'aux1421' order represents '3' with '15903'
-15901 15903 0
c Var 'aux1421' direct represents '3' with '15904'
15901 -15903 15904 0
-15904 15903 0
-15904 -15901 0
c Var 'aux1421' direct represents '4' with '-15903'
15898 15900 15902 15904 -15903 0
c Encoding variable: aux1422 with domain: bool (representing constraint (shift(true, -1) + aux0))
c Var 'aux1422' direct represents '0' with '-15905'
c Var 'aux1422' direct represents '1' with '15905'
c Var 'aux1422' order represents '1' with '1'
c Var 'aux1422' order represents '0' with '-15905'
c Encoding variable: aux1423 with domain: int(0..2) (representing constraint (aux7 + aux1422))
c Both direct and order encoding.
c Var 'aux1423' order represents '0' with '15906'
c Var 'aux1423' direct represents '0' with '15906'
c Var 'aux1423' order represents '1' with '15907'
-15906 15907 0
c Var 'aux1423' direct represents '1' with '15908'
15906 -15907 15908 0
-15908 15907 0
-15908 -15906 0
c Var 'aux1423' direct represents '2' with '-15907'
15906 15908 -15907 0
c Encoding variable: aux1424 with domain: int(0..2) (representing constraint (aux2 + aux6))
c Both direct and order encoding.
c Var 'aux1424' order represents '0' with '15909'
c Var 'aux1424' direct represents '0' with '15909'
c Var 'aux1424' order represents '1' with '15910'
-15909 15910 0
c Var 'aux1424' direct represents '1' with '15911'
15909 -15910 15911 0
-15911 15910 0
-15911 -15909 0
c Var 'aux1424' direct represents '2' with '-15910'
15909 15911 -15910 0
c Encoding variable: aux1425 with domain: int(0..2) (representing constraint (aux5 + aux3))
c Both direct and order encoding.
c Var 'aux1425' order represents '0' with '15912'
c Var 'aux1425' direct represents '0' with '15912'
c Var 'aux1425' order represents '1' with '15913'
-15912 15913 0
c Var 'aux1425' direct represents '1' with '15914'
15912 -15913 15914 0
-15914 15913 0
-15914 -15912 0
c Var 'aux1425' direct represents '2' with '-15913'
15912 15914 -15913 0
c Encoding variable: aux1426 with domain: int(0..2) (representing constraint (aux4 + aux1))
c Both direct and order encoding.
c Var 'aux1426' order represents '0' with '15915'
c Var 'aux1426' direct represents '0' with '15915'
c Var 'aux1426' order represents '1' with '15916'
-15915 15916 0
c Var 'aux1426' direct represents '1' with '15917'
15915 -15916 15917 0
-15917 15916 0
-15917 -15915 0
c Var 'aux1426' direct represents '2' with '-15916'
15915 15917 -15916 0
c Encoding variable: aux1427 with domain: int(0..4) (representing constraint (aux1424 + aux1426))
c Both direct and order encoding.
c Var 'aux1427' order represents '0' with '15918'
c Var 'aux1427' direct represents '0' with '15918'
c Var 'aux1427' order represents '1' with '15919'
-15918 15919 0
c Var 'aux1427' direct represents '1' with '15920'
15918 -15919 15920 0
-15920 15919 0
-15920 -15918 0
c Var 'aux1427' order represents '2' with '15921'
-15919 15921 0
c Var 'aux1427' direct represents '2' with '15922'
15919 -15921 15922 0
-15922 15921 0
-15922 -15919 0
c Var 'aux1427' order represents '3' with '15923'
-15921 15923 0
c Var 'aux1427' direct represents '3' with '15924'
15921 -15923 15924 0
-15924 15923 0
-15924 -15921 0
c Var 'aux1427' direct represents '4' with '-15923'
15918 15920 15922 15924 -15923 0
c Encoding variable: aux1428 with domain: int(0..4) (representing constraint (aux1423 + aux1425))
c Both direct and order encoding.
c Var 'aux1428' order represents '0' with '15925'
c Var 'aux1428' direct represents '0' with '15925'
c Var 'aux1428' order represents '1' with '15926'
-15925 15926 0
c Var 'aux1428' direct represents '1' with '15927'
15925 -15926 15927 0
-15927 15926 0
-15927 -15925 0
c Var 'aux1428' order represents '2' with '15928'
-15926 15928 0
c Var 'aux1428' direct represents '2' with '15929'
15926 -15928 15929 0
-15929 15928 0
-15929 -15926 0
c Var 'aux1428' order represents '3' with '15930'
-15928 15930 0
c Var 'aux1428' direct represents '3' with '15931'
15928 -15930 15931 0
-15931 15930 0
-15931 -15928 0
c Var 'aux1428' direct represents '4' with '-15930'
15925 15927 15929 15931 -15930 0
c Encoding variable: aux1429 with domain: bool (representing constraint (shift(true, -1) + aux8))
c Var 'aux1429' direct represents '0' with '-15932'
c Var 'aux1429' direct represents '1' with '15932'
c Var 'aux1429' order represents '1' with '1'
c Var 'aux1429' order represents '0' with '-15932'
c Encoding variable: aux1430 with domain: int(0..2) (representing constraint (aux15 + aux1429))
c Both direct and order encoding.
c Var 'aux1430' order represents '0' with '15933'
c Var 'aux1430' direct represents '0' with '15933'
c Var 'aux1430' order represents '1' with '15934'
-15933 15934 0
c Var 'aux1430' direct represents '1' with '15935'
15933 -15934 15935 0
-15935 15934 0
-15935 -15933 0
c Var 'aux1430' direct represents '2' with '-15934'
15933 15935 -15934 0
c Encoding variable: aux1431 with domain: int(0..2) (representing constraint (aux10 + aux14))
c Both direct and order encoding.
c Var 'aux1431' order represents '0' with '15936'
c Var 'aux1431' direct represents '0' with '15936'
c Var 'aux1431' order represents '1' with '15937'
-15936 15937 0
c Var 'aux1431' direct represents '1' with '15938'
15936 -15937 15938 0
-15938 15937 0
-15938 -15936 0
c Var 'aux1431' direct represents '2' with '-15937'
15936 15938 -15937 0
c Encoding variable: aux1432 with domain: int(0..2) (representing constraint (aux13 + aux11))
c Both direct and order encoding.
c Var 'aux1432' order represents '0' with '15939'
c Var 'aux1432' direct represents '0' with '15939'
c Var 'aux1432' order represents '1' with '15940'
-15939 15940 0
c Var 'aux1432' direct represents '1' with '15941'
15939 -15940 15941 0
-15941 15940 0
-15941 -15939 0
c Var 'aux1432' direct represents '2' with '-15940'
15939 15941 -15940 0
c Encoding variable: aux1433 with domain: int(0..2) (representing constraint (aux12 + aux9))
c Both direct and order encoding.
c Var 'aux1433' order represents '0' with '15942'
c Var 'aux1433' direct represents '0' with '15942'
c Var 'aux1433' order represents '1' with '15943'
-15942 15943 0
c Var 'aux1433' direct represents '1' with '15944'
15942 -15943 15944 0
-15944 15943 0
-15944 -15942 0
c Var 'aux1433' direct represents '2' with '-15943'
15942 15944 -15943 0
c Encoding variable: aux1434 with domain: int(0..4) (representing constraint (aux1431 + aux1433))
c Both direct and order encoding.
c Var 'aux1434' order represents '0' with '15945'
c Var 'aux1434' direct represents '0' with '15945'
c Var 'aux1434' order represents '1' with '15946'
-15945 15946 0
c Var 'aux1434' direct represents '1' with '15947'
15945 -15946 15947 0
-15947 15946 0
-15947 -15945 0
c Var 'aux1434' order represents '2' with '15948'
-15946 15948 0
c Var 'aux1434' direct represents '2' with '15949'
15946 -15948 15949 0
-15949 15948 0
-15949 -15946 0
c Var 'aux1434' order represents '3' with '15950'
-15948 15950 0
c Var 'aux1434' direct represents '3' with '15951'
15948 -15950 15951 0
-15951 15950 0
-15951 -15948 0
c Var 'aux1434' direct represents '4' with '-15950'
15945 15947 15949 15951 -15950 0
c Encoding variable: aux1435 with domain: int(0..4) (representing constraint (aux1430 + aux1432))
c Both direct and order encoding.
c Var 'aux1435' order represents '0' with '15952'
c Var 'aux1435' direct represents '0' with '15952'
c Var 'aux1435' order represents '1' with '15953'
-15952 15953 0
c Var 'aux1435' direct represents '1' with '15954'
15952 -15953 15954 0
-15954 15953 0
-15954 -15952 0
c Var 'aux1435' order represents '2' with '15955'
-15953 15955 0
c Var 'aux1435' direct represents '2' with '15956'
15953 -15955 15956 0
-15956 15955 0
-15956 -15953 0
c Var 'aux1435' order represents '3' with '15957'
-15955 15957 0
c Var 'aux1435' direct represents '3' with '15958'
15955 -15957 15958 0
-15958 15957 0
-15958 -15955 0
c Var 'aux1435' direct represents '4' with '-15957'
15952 15954 15956 15958 -15957 0
c Encoding variable: aux1436 with domain: bool (representing constraint (shift(true, -1) + aux16))
c Var 'aux1436' direct represents '0' with '-15959'
c Var 'aux1436' direct represents '1' with '15959'
c Var 'aux1436' order represents '1' with '1'
c Var 'aux1436' order represents '0' with '-15959'
c Encoding variable: aux1437 with domain: int(0..2) (representing constraint (aux23 + aux1436))
c Both direct and order encoding.
c Var 'aux1437' order represents '0' with '15960'
c Var 'aux1437' direct represents '0' with '15960'
c Var 'aux1437' order represents '1' with '15961'
-15960 15961 0
c Var 'aux1437' direct represents '1' with '15962'
15960 -15961 15962 0
-15962 15961 0
-15962 -15960 0
c Var 'aux1437' direct represents '2' with '-15961'
15960 15962 -15961 0
c Encoding variable: aux1438 with domain: int(0..2) (representing constraint (aux18 + aux22))
c Both direct and order encoding.
c Var 'aux1438' order represents '0' with '15963'
c Var 'aux1438' direct represents '0' with '15963'
c Var 'aux1438' order represents '1' with '15964'
-15963 15964 0
c Var 'aux1438' direct represents '1' with '15965'
15963 -15964 15965 0
-15965 15964 0
-15965 -15963 0
c Var 'aux1438' direct represents '2' with '-15964'
15963 15965 -15964 0
c Encoding variable: aux1439 with domain: int(0..2) (representing constraint (aux21 + aux19))
c Both direct and order encoding.
c Var 'aux1439' order represents '0' with '15966'
c Var 'aux1439' direct represents '0' with '15966'
c Var 'aux1439' order represents '1' with '15967'
-15966 15967 0
c Var 'aux1439' direct represents '1' with '15968'
15966 -15967 15968 0
-15968 15967 0
-15968 -15966 0
c Var 'aux1439' direct represents '2' with '-15967'
15966 15968 -15967 0
c Encoding variable: aux1440 with domain: int(0..2) (representing constraint (aux20 + aux17))
c Both direct and order encoding.
c Var 'aux1440' order represents '0' with '15969'
c Var 'aux1440' direct represents '0' with '15969'
c Var 'aux1440' order represents '1' with '15970'
-15969 15970 0
c Var 'aux1440' direct represents '1' with '15971'
15969 -15970 15971 0
-15971 15970 0
-15971 -15969 0
c Var 'aux1440' direct represents '2' with '-15970'
15969 15971 -15970 0
c Encoding variable: aux1441 with domain: int(0..4) (representing constraint (aux1438 + aux1440))
c Both direct and order encoding.
c Var 'aux1441' order represents '0' with '15972'
c Var 'aux1441' direct represents '0' with '15972'
c Var 'aux1441' order represents '1' with '15973'
-15972 15973 0
c Var 'aux1441' direct represents '1' with '15974'
15972 -15973 15974 0
-15974 15973 0
-15974 -15972 0
c Var 'aux1441' order represents '2' with '15975'
-15973 15975 0
c Var 'aux1441' direct represents '2' with '15976'
15973 -15975 15976 0
-15976 15975 0
-15976 -15973 0
c Var 'aux1441' order represents '3' with '15977'
-15975 15977 0
c Var 'aux1441' direct represents '3' with '15978'
15975 -15977 15978 0
-15978 15977 0
-15978 -15975 0
c Var 'aux1441' direct represents '4' with '-15977'
15972 15974 15976 15978 -15977 0
c Encoding variable: aux1442 with domain: int(0..4) (representing constraint (aux1437 + aux1439))
c Both direct and order encoding.
c Var 'aux1442' order represents '0' with '15979'
c Var 'aux1442' direct represents '0' with '15979'
c Var 'aux1442' order represents '1' with '15980'
-15979 15980 0
c Var 'aux1442' direct represents '1' with '15981'
15979 -15980 15981 0
-15981 15980 0
-15981 -15979 0
c Var 'aux1442' order represents '2' with '15982'
-15980 15982 0
c Var 'aux1442' direct represents '2' with '15983'
15980 -15982 15983 0
-15983 15982 0
-15983 -15980 0
c Var 'aux1442' order represents '3' with '15984'
-15982 15984 0
c Var 'aux1442' direct represents '3' with '15985'
15982 -15984 15985 0
-15985 15984 0
-15985 -15982 0
c Var 'aux1442' direct represents '4' with '-15984'
15979 15981 15983 15985 -15984 0
c Encoding variable: aux1443 with domain: bool (representing constraint (shift(true, -1) + aux24))
c Var 'aux1443' direct represents '0' with '-15986'
c Var 'aux1443' direct represents '1' with '15986'
c Var 'aux1443' order represents '1' with '1'
c Var 'aux1443' order represents '0' with '-15986'
c Encoding variable: aux1444 with domain: int(0..2) (representing constraint (aux31 + aux1443))
c Both direct and order encoding.
c Var 'aux1444' order represents '0' with '15987'
c Var 'aux1444' direct represents '0' with '15987'
c Var 'aux1444' order represents '1' with '15988'
-15987 15988 0
c Var 'aux1444' direct represents '1' with '15989'
15987 -15988 15989 0
-15989 15988 0
-15989 -15987 0
c Var 'aux1444' direct represents '2' with '-15988'
15987 15989 -15988 0
c Encoding variable: aux1445 with domain: int(0..2) (representing constraint (aux26 + aux30))
c Both direct and order encoding.
c Var 'aux1445' order represents '0' with '15990'
c Var 'aux1445' direct represents '0' with '15990'
c Var 'aux1445' order represents '1' with '15991'
-15990 15991 0
c Var 'aux1445' direct represents '1' with '15992'
15990 -15991 15992 0
-15992 15991 0
-15992 -15990 0
c Var 'aux1445' direct represents '2' with '-15991'
15990 15992 -15991 0
c Encoding variable: aux1446 with domain: int(0..2) (representing constraint (aux29 + aux27))
c Both direct and order encoding.
c Var 'aux1446' order represents '0' with '15993'
c Var 'aux1446' direct represents '0' with '15993'
c Var 'aux1446' order represents '1' with '15994'
-15993 15994 0
c Var 'aux1446' direct represents '1' with '15995'
15993 -15994 15995 0
-15995 15994 0
-15995 -15993 0
c Var 'aux1446' direct represents '2' with '-15994'
15993 15995 -15994 0
c Encoding variable: aux1447 with domain: int(0..2) (representing constraint (aux28 + aux25))
c Both direct and order encoding.
c Var 'aux1447' order represents '0' with '15996'
c Var 'aux1447' direct represents '0' with '15996'
c Var 'aux1447' order represents '1' with '15997'
-15996 15997 0
c Var 'aux1447' direct represents '1' with '15998'
15996 -15997 15998 0
-15998 15997 0
-15998 -15996 0
c Var 'aux1447' direct represents '2' with '-15997'
15996 15998 -15997 0
c Encoding variable: aux1448 with domain: int(0..4) (representing constraint (aux1445 + aux1447))
c Both direct and order encoding.
c Var 'aux1448' order represents '0' with '15999'
c Var 'aux1448' direct represents '0' with '15999'
c Var 'aux1448' order represents '1' with '16000'
-15999 16000 0
c Var 'aux1448' direct represents '1' with '16001'
15999 -16000 16001 0
-16001 16000 0
-16001 -15999 0
c Var 'aux1448' order represents '2' with '16002'
-16000 16002 0
c Var 'aux1448' direct represents '2' with '16003'
16000 -16002 16003 0
-16003 16002 0
-16003 -16000 0
c Var 'aux1448' order represents '3' with '16004'
-16002 16004 0
c Var 'aux1448' direct represents '3' with '16005'
16002 -16004 16005 0
-16005 16004 0
-16005 -16002 0
c Var 'aux1448' direct represents '4' with '-16004'
15999 16001 16003 16005 -16004 0
c Encoding variable: aux1449 with domain: int(0..4) (representing constraint (aux1444 + aux1446))
c Both direct and order encoding.
c Var 'aux1449' order represents '0' with '16006'
c Var 'aux1449' direct represents '0' with '16006'
c Var 'aux1449' order represents '1' with '16007'
-16006 16007 0
c Var 'aux1449' direct represents '1' with '16008'
16006 -16007 16008 0
-16008 16007 0
-16008 -16006 0
c Var 'aux1449' order represents '2' with '16009'
-16007 16009 0
c Var 'aux1449' direct represents '2' with '16010'
16007 -16009 16010 0
-16010 16009 0
-16010 -16007 0
c Var 'aux1449' order represents '3' with '16011'
-16009 16011 0
c Var 'aux1449' direct represents '3' with '16012'
16009 -16011 16012 0
-16012 16011 0
-16012 -16009 0
c Var 'aux1449' direct represents '4' with '-16011'
16006 16008 16010 16012 -16011 0
c Encoding variable: aux1450 with domain: bool (representing constraint (shift(true, -1) + aux32))
c Var 'aux1450' direct represents '0' with '-16013'
c Var 'aux1450' direct represents '1' with '16013'
c Var 'aux1450' order represents '1' with '1'
c Var 'aux1450' order represents '0' with '-16013'
c Encoding variable: aux1451 with domain: int(0..2) (representing constraint (aux39 + aux1450))
c Both direct and order encoding.
c Var 'aux1451' order represents '0' with '16014'
c Var 'aux1451' direct represents '0' with '16014'
c Var 'aux1451' order represents '1' with '16015'
-16014 16015 0
c Var 'aux1451' direct represents '1' with '16016'
16014 -16015 16016 0
-16016 16015 0
-16016 -16014 0
c Var 'aux1451' direct represents '2' with '-16015'
16014 16016 -16015 0
c Encoding variable: aux1452 with domain: int(0..2) (representing constraint (aux34 + aux38))
c Both direct and order encoding.
c Var 'aux1452' order represents '0' with '16017'
c Var 'aux1452' direct represents '0' with '16017'
c Var 'aux1452' order represents '1' with '16018'
-16017 16018 0
c Var 'aux1452' direct represents '1' with '16019'
16017 -16018 16019 0
-16019 16018 0
-16019 -16017 0
c Var 'aux1452' direct represents '2' with '-16018'
16017 16019 -16018 0
c Encoding variable: aux1453 with domain: int(0..2) (representing constraint (aux37 + aux35))
c Both direct and order encoding.
c Var 'aux1453' order represents '0' with '16020'
c Var 'aux1453' direct represents '0' with '16020'
c Var 'aux1453' order represents '1' with '16021'
-16020 16021 0
c Var 'aux1453' direct represents '1' with '16022'
16020 -16021 16022 0
-16022 16021 0
-16022 -16020 0
c Var 'aux1453' direct represents '2' with '-16021'
16020 16022 -16021 0
c Encoding variable: aux1454 with domain: int(0..2) (representing constraint (aux36 + aux33))
c Both direct and order encoding.
c Var 'aux1454' order represents '0' with '16023'
c Var 'aux1454' direct represents '0' with '16023'
c Var 'aux1454' order represents '1' with '16024'
-16023 16024 0
c Var 'aux1454' direct represents '1' with '16025'
16023 -16024 16025 0
-16025 16024 0
-16025 -16023 0
c Var 'aux1454' direct represents '2' with '-16024'
16023 16025 -16024 0
c Encoding variable: aux1455 with domain: int(0..4) (representing constraint (aux1452 + aux1454))
c Both direct and order encoding.
c Var 'aux1455' order represents '0' with '16026'
c Var 'aux1455' direct represents '0' with '16026'
c Var 'aux1455' order represents '1' with '16027'
-16026 16027 0
c Var 'aux1455' direct represents '1' with '16028'
16026 -16027 16028 0
-16028 16027 0
-16028 -16026 0
c Var 'aux1455' order represents '2' with '16029'
-16027 16029 0
c Var 'aux1455' direct represents '2' with '16030'
16027 -16029 16030 0
-16030 16029 0
-16030 -16027 0
c Var 'aux1455' order represents '3' with '16031'
-16029 16031 0
c Var 'aux1455' direct represents '3' with '16032'
16029 -16031 16032 0
-16032 16031 0
-16032 -16029 0
c Var 'aux1455' direct represents '4' with '-16031'
16026 16028 16030 16032 -16031 0
c Encoding variable: aux1456 with domain: int(0..4) (representing constraint (aux1451 + aux1453))
c Both direct and order encoding.
c Var 'aux1456' order represents '0' with '16033'
c Var 'aux1456' direct represents '0' with '16033'
c Var 'aux1456' order represents '1' with '16034'
-16033 16034 0
c Var 'aux1456' direct represents '1' with '16035'
16033 -16034 16035 0
-16035 16034 0
-16035 -16033 0
c Var 'aux1456' order represents '2' with '16036'
-16034 16036 0
c Var 'aux1456' direct represents '2' with '16037'
16034 -16036 16037 0
-16037 16036 0
-16037 -16034 0
c Var 'aux1456' order represents '3' with '16038'
-16036 16038 0
c Var 'aux1456' direct represents '3' with '16039'
16036 -16038 16039 0
-16039 16038 0
-16039 -16036 0
c Var 'aux1456' direct represents '4' with '-16038'
16033 16035 16037 16039 -16038 0
c Encoding variable: aux1457 with domain: bool (representing constraint (shift(true, -1) + aux40))
c Var 'aux1457' direct represents '0' with '-16040'
c Var 'aux1457' direct represents '1' with '16040'
c Var 'aux1457' order represents '1' with '1'
c Var 'aux1457' order represents '0' with '-16040'
c Encoding variable: aux1458 with domain: int(0..2) (representing constraint (aux47 + aux1457))
c Both direct and order encoding.
c Var 'aux1458' order represents '0' with '16041'
c Var 'aux1458' direct represents '0' with '16041'
c Var 'aux1458' order represents '1' with '16042'
-16041 16042 0
c Var 'aux1458' direct represents '1' with '16043'
16041 -16042 16043 0
-16043 16042 0
-16043 -16041 0
c Var 'aux1458' direct represents '2' with '-16042'
16041 16043 -16042 0
c Encoding variable: aux1459 with domain: int(0..2) (representing constraint (aux42 + aux46))
c Both direct and order encoding.
c Var 'aux1459' order represents '0' with '16044'
c Var 'aux1459' direct represents '0' with '16044'
c Var 'aux1459' order represents '1' with '16045'
-16044 16045 0
c Var 'aux1459' direct represents '1' with '16046'
16044 -16045 16046 0
-16046 16045 0
-16046 -16044 0
c Var 'aux1459' direct represents '2' with '-16045'
16044 16046 -16045 0
c Encoding variable: aux1460 with domain: int(0..2) (representing constraint (aux45 + aux43))
c Both direct and order encoding.
c Var 'aux1460' order represents '0' with '16047'
c Var 'aux1460' direct represents '0' with '16047'
c Var 'aux1460' order represents '1' with '16048'
-16047 16048 0
c Var 'aux1460' direct represents '1' with '16049'
16047 -16048 16049 0
-16049 16048 0
-16049 -16047 0
c Var 'aux1460' direct represents '2' with '-16048'
16047 16049 -16048 0
c Encoding variable: aux1461 with domain: int(0..2) (representing constraint (aux44 + aux41))
c Both direct and order encoding.
c Var 'aux1461' order represents '0' with '16050'
c Var 'aux1461' direct represents '0' with '16050'
c Var 'aux1461' order represents '1' with '16051'
-16050 16051 0
c Var 'aux1461' direct represents '1' with '16052'
16050 -16051 16052 0
-16052 16051 0
-16052 -16050 0
c Var 'aux1461' direct represents '2' with '-16051'
16050 16052 -16051 0
c Encoding variable: aux1462 with domain: int(0..4) (representing constraint (aux1459 + aux1461))
c Both direct and order encoding.
c Var 'aux1462' order represents '0' with '16053'
c Var 'aux1462' direct represents '0' with '16053'
c Var 'aux1462' order represents '1' with '16054'
-16053 16054 0
c Var 'aux1462' direct represents '1' with '16055'
16053 -16054 16055 0
-16055 16054 0
-16055 -16053 0
c Var 'aux1462' order represents '2' with '16056'
-16054 16056 0
c Var 'aux1462' direct represents '2' with '16057'
16054 -16056 16057 0
-16057 16056 0
-16057 -16054 0
c Var 'aux1462' order represents '3' with '16058'
-16056 16058 0
c Var 'aux1462' direct represents '3' with '16059'
16056 -16058 16059 0
-16059 16058 0
-16059 -16056 0
c Var 'aux1462' direct represents '4' with '-16058'
16053 16055 16057 16059 -16058 0
c Encoding variable: aux1463 with domain: int(0..4) (representing constraint (aux1458 + aux1460))
c Both direct and order encoding.
c Var 'aux1463' order represents '0' with '16060'
c Var 'aux1463' direct represents '0' with '16060'
c Var 'aux1463' order represents '1' with '16061'
-16060 16061 0
c Var 'aux1463' direct represents '1' with '16062'
16060 -16061 16062 0
-16062 16061 0
-16062 -16060 0
c Var 'aux1463' order represents '2' with '16063'
-16061 16063 0
c Var 'aux1463' direct represents '2' with '16064'
16061 -16063 16064 0
-16064 16063 0
-16064 -16061 0
c Var 'aux1463' order represents '3' with '16065'
-16063 16065 0
c Var 'aux1463' direct represents '3' with '16066'
16063 -16065 16066 0
-16066 16065 0
-16066 -16063 0
c Var 'aux1463' direct represents '4' with '-16065'
16060 16062 16064 16066 -16065 0
c Encoding variable: aux1464 with domain: bool (representing constraint (shift(true, -1) + aux48))
c Var 'aux1464' direct represents '0' with '-16067'
c Var 'aux1464' direct represents '1' with '16067'
c Var 'aux1464' order represents '1' with '1'
c Var 'aux1464' order represents '0' with '-16067'
c Encoding variable: aux1465 with domain: int(0..2) (representing constraint (aux55 + aux1464))
c Both direct and order encoding.
c Var 'aux1465' order represents '0' with '16068'
c Var 'aux1465' direct represents '0' with '16068'
c Var 'aux1465' order represents '1' with '16069'
-16068 16069 0
c Var 'aux1465' direct represents '1' with '16070'
16068 -16069 16070 0
-16070 16069 0
-16070 -16068 0
c Var 'aux1465' direct represents '2' with '-16069'
16068 16070 -16069 0
c Encoding variable: aux1466 with domain: int(0..2) (representing constraint (aux50 + aux54))
c Both direct and order encoding.
c Var 'aux1466' order represents '0' with '16071'
c Var 'aux1466' direct represents '0' with '16071'
c Var 'aux1466' order represents '1' with '16072'
-16071 16072 0
c Var 'aux1466' direct represents '1' with '16073'
16071 -16072 16073 0
-16073 16072 0
-16073 -16071 0
c Var 'aux1466' direct represents '2' with '-16072'
16071 16073 -16072 0
c Encoding variable: aux1467 with domain: int(0..2) (representing constraint (aux53 + aux51))
c Both direct and order encoding.
c Var 'aux1467' order represents '0' with '16074'
c Var 'aux1467' direct represents '0' with '16074'
c Var 'aux1467' order represents '1' with '16075'
-16074 16075 0
c Var 'aux1467' direct represents '1' with '16076'
16074 -16075 16076 0
-16076 16075 0
-16076 -16074 0
c Var 'aux1467' direct represents '2' with '-16075'
16074 16076 -16075 0
c Encoding variable: aux1468 with domain: int(0..2) (representing constraint (aux52 + aux49))
c Both direct and order encoding.
c Var 'aux1468' order represents '0' with '16077'
c Var 'aux1468' direct represents '0' with '16077'
c Var 'aux1468' order represents '1' with '16078'
-16077 16078 0
c Var 'aux1468' direct represents '1' with '16079'
16077 -16078 16079 0
-16079 16078 0
-16079 -16077 0
c Var 'aux1468' direct represents '2' with '-16078'
16077 16079 -16078 0
c Encoding variable: aux1469 with domain: int(0..4) (representing constraint (aux1466 + aux1468))
c Both direct and order encoding.
c Var 'aux1469' order represents '0' with '16080'
c Var 'aux1469' direct represents '0' with '16080'
c Var 'aux1469' order represents '1' with '16081'
-16080 16081 0
c Var 'aux1469' direct represents '1' with '16082'
16080 -16081 16082 0
-16082 16081 0
-16082 -16080 0
c Var 'aux1469' order represents '2' with '16083'
-16081 16083 0
c Var 'aux1469' direct represents '2' with '16084'
16081 -16083 16084 0
-16084 16083 0
-16084 -16081 0
c Var 'aux1469' order represents '3' with '16085'
-16083 16085 0
c Var 'aux1469' direct represents '3' with '16086'
16083 -16085 16086 0
-16086 16085 0
-16086 -16083 0
c Var 'aux1469' direct represents '4' with '-16085'
16080 16082 16084 16086 -16085 0
c Encoding variable: aux1470 with domain: int(0..4) (representing constraint (aux1465 + aux1467))
c Both direct and order encoding.
c Var 'aux1470' order represents '0' with '16087'
c Var 'aux1470' direct represents '0' with '16087'
c Var 'aux1470' order represents '1' with '16088'
-16087 16088 0
c Var 'aux1470' direct represents '1' with '16089'
16087 -16088 16089 0
-16089 16088 0
-16089 -16087 0
c Var 'aux1470' order represents '2' with '16090'
-16088 16090 0
c Var 'aux1470' direct represents '2' with '16091'
16088 -16090 16091 0
-16091 16090 0
-16091 -16088 0
c Var 'aux1470' order represents '3' with '16092'
-16090 16092 0
c Var 'aux1470' direct represents '3' with '16093'
16090 -16092 16093 0
-16093 16092 0
-16093 -16090 0
c Var 'aux1470' direct represents '4' with '-16092'
16087 16089 16091 16093 -16092 0
c Encoding variable: aux1471 with domain: bool (representing constraint (shift(true, -1) + aux56))
c Var 'aux1471' direct represents '0' with '-16094'
c Var 'aux1471' direct represents '1' with '16094'
c Var 'aux1471' order represents '1' with '1'
c Var 'aux1471' order represents '0' with '-16094'
c Encoding variable: aux1472 with domain: int(0..2) (representing constraint (aux63 + aux1471))
c Both direct and order encoding.
c Var 'aux1472' order represents '0' with '16095'
c Var 'aux1472' direct represents '0' with '16095'
c Var 'aux1472' order represents '1' with '16096'
-16095 16096 0
c Var 'aux1472' direct represents '1' with '16097'
16095 -16096 16097 0
-16097 16096 0
-16097 -16095 0
c Var 'aux1472' direct represents '2' with '-16096'
16095 16097 -16096 0
c Encoding variable: aux1473 with domain: int(0..2) (representing constraint (aux58 + aux62))
c Both direct and order encoding.
c Var 'aux1473' order represents '0' with '16098'
c Var 'aux1473' direct represents '0' with '16098'
c Var 'aux1473' order represents '1' with '16099'
-16098 16099 0
c Var 'aux1473' direct represents '1' with '16100'
16098 -16099 16100 0
-16100 16099 0
-16100 -16098 0
c Var 'aux1473' direct represents '2' with '-16099'
16098 16100 -16099 0
c Encoding variable: aux1474 with domain: int(0..2) (representing constraint (aux61 + aux59))
c Both direct and order encoding.
c Var 'aux1474' order represents '0' with '16101'
c Var 'aux1474' direct represents '0' with '16101'
c Var 'aux1474' order represents '1' with '16102'
-16101 16102 0
c Var 'aux1474' direct represents '1' with '16103'
16101 -16102 16103 0
-16103 16102 0
-16103 -16101 0
c Var 'aux1474' direct represents '2' with '-16102'
16101 16103 -16102 0
c Encoding variable: aux1475 with domain: int(0..2) (representing constraint (aux60 + aux57))
c Both direct and order encoding.
c Var 'aux1475' order represents '0' with '16104'
c Var 'aux1475' direct represents '0' with '16104'
c Var 'aux1475' order represents '1' with '16105'
-16104 16105 0
c Var 'aux1475' direct represents '1' with '16106'
16104 -16105 16106 0
-16106 16105 0
-16106 -16104 0
c Var 'aux1475' direct represents '2' with '-16105'
16104 16106 -16105 0
c Encoding variable: aux1476 with domain: int(0..4) (representing constraint (aux1473 + aux1475))
c Both direct and order encoding.
c Var 'aux1476' order represents '0' with '16107'
c Var 'aux1476' direct represents '0' with '16107'
c Var 'aux1476' order represents '1' with '16108'
-16107 16108 0
c Var 'aux1476' direct represents '1' with '16109'
16107 -16108 16109 0
-16109 16108 0
-16109 -16107 0
c Var 'aux1476' order represents '2' with '16110'
-16108 16110 0
c Var 'aux1476' direct represents '2' with '16111'
16108 -16110 16111 0
-16111 16110 0
-16111 -16108 0
c Var 'aux1476' order represents '3' with '16112'
-16110 16112 0
c Var 'aux1476' direct represents '3' with '16113'
16110 -16112 16113 0
-16113 16112 0
-16113 -16110 0
c Var 'aux1476' direct represents '4' with '-16112'
16107 16109 16111 16113 -16112 0
c Encoding variable: aux1477 with domain: int(0..4) (representing constraint (aux1472 + aux1474))
c Both direct and order encoding.
c Var 'aux1477' order represents '0' with '16114'
c Var 'aux1477' direct represents '0' with '16114'
c Var 'aux1477' order represents '1' with '16115'
-16114 16115 0
c Var 'aux1477' direct represents '1' with '16116'
16114 -16115 16116 0
-16116 16115 0
-16116 -16114 0
c Var 'aux1477' order represents '2' with '16117'
-16115 16117 0
c Var 'aux1477' direct represents '2' with '16118'
16115 -16117 16118 0
-16118 16117 0
-16118 -16115 0
c Var 'aux1477' order represents '3' with '16119'
-16117 16119 0
c Var 'aux1477' direct represents '3' with '16120'
16117 -16119 16120 0
-16120 16119 0
-16120 -16117 0
c Var 'aux1477' direct represents '4' with '-16119'
16114 16116 16118 16120 -16119 0
c Encoding variable: aux1478 with domain: bool (representing constraint (shift(true, -1) + aux64))
c Var 'aux1478' direct represents '0' with '-16121'
c Var 'aux1478' direct represents '1' with '16121'
c Var 'aux1478' order represents '1' with '1'
c Var 'aux1478' order represents '0' with '-16121'
c Encoding variable: aux1479 with domain: int(0..2) (representing constraint (aux71 + aux1478))
c Both direct and order encoding.
c Var 'aux1479' order represents '0' with '16122'
c Var 'aux1479' direct represents '0' with '16122'
c Var 'aux1479' order represents '1' with '16123'
-16122 16123 0
c Var 'aux1479' direct represents '1' with '16124'
16122 -16123 16124 0
-16124 16123 0
-16124 -16122 0
c Var 'aux1479' direct represents '2' with '-16123'
16122 16124 -16123 0
c Encoding variable: aux1480 with domain: int(0..2) (representing constraint (aux66 + aux70))
c Both direct and order encoding.
c Var 'aux1480' order represents '0' with '16125'
c Var 'aux1480' direct represents '0' with '16125'
c Var 'aux1480' order represents '1' with '16126'
-16125 16126 0
c Var 'aux1480' direct represents '1' with '16127'
16125 -16126 16127 0
-16127 16126 0
-16127 -16125 0
c Var 'aux1480' direct represents '2' with '-16126'
16125 16127 -16126 0
c Encoding variable: aux1481 with domain: int(0..2) (representing constraint (aux69 + aux67))
c Both direct and order encoding.
c Var 'aux1481' order represents '0' with '16128'
c Var 'aux1481' direct represents '0' with '16128'
c Var 'aux1481' order represents '1' with '16129'
-16128 16129 0
c Var 'aux1481' direct represents '1' with '16130'
16128 -16129 16130 0
-16130 16129 0
-16130 -16128 0
c Var 'aux1481' direct represents '2' with '-16129'
16128 16130 -16129 0
c Encoding variable: aux1482 with domain: int(0..2) (representing constraint (aux68 + aux65))
c Both direct and order encoding.
c Var 'aux1482' order represents '0' with '16131'
c Var 'aux1482' direct represents '0' with '16131'
c Var 'aux1482' order represents '1' with '16132'
-16131 16132 0
c Var 'aux1482' direct represents '1' with '16133'
16131 -16132 16133 0
-16133 16132 0
-16133 -16131 0
c Var 'aux1482' direct represents '2' with '-16132'
16131 16133 -16132 0
c Encoding variable: aux1483 with domain: int(0..4) (representing constraint (aux1480 + aux1482))
c Both direct and order encoding.
c Var 'aux1483' order represents '0' with '16134'
c Var 'aux1483' direct represents '0' with '16134'
c Var 'aux1483' order represents '1' with '16135'
-16134 16135 0
c Var 'aux1483' direct represents '1' with '16136'
16134 -16135 16136 0
-16136 16135 0
-16136 -16134 0
c Var 'aux1483' order represents '2' with '16137'
-16135 16137 0
c Var 'aux1483' direct represents '2' with '16138'
16135 -16137 16138 0
-16138 16137 0
-16138 -16135 0
c Var 'aux1483' order represents '3' with '16139'
-16137 16139 0
c Var 'aux1483' direct represents '3' with '16140'
16137 -16139 16140 0
-16140 16139 0
-16140 -16137 0
c Var 'aux1483' direct represents '4' with '-16139'
16134 16136 16138 16140 -16139 0
c Encoding variable: aux1484 with domain: int(0..4) (representing constraint (aux1479 + aux1481))
c Both direct and order encoding.
c Var 'aux1484' order represents '0' with '16141'
c Var 'aux1484' direct represents '0' with '16141'
c Var 'aux1484' order represents '1' with '16142'
-16141 16142 0
c Var 'aux1484' direct represents '1' with '16143'
16141 -16142 16143 0
-16143 16142 0
-16143 -16141 0
c Var 'aux1484' order represents '2' with '16144'
-16142 16144 0
c Var 'aux1484' direct represents '2' with '16145'
16142 -16144 16145 0
-16145 16144 0
-16145 -16142 0
c Var 'aux1484' order represents '3' with '16146'
-16144 16146 0
c Var 'aux1484' direct represents '3' with '16147'
16144 -16146 16147 0
-16147 16146 0
-16147 -16144 0
c Var 'aux1484' direct represents '4' with '-16146'
16141 16143 16145 16147 -16146 0
c Encoding variable: aux1485 with domain: bool (representing constraint (shift(true, -1) + aux72))
c Var 'aux1485' direct represents '0' with '-16148'
c Var 'aux1485' direct represents '1' with '16148'
c Var 'aux1485' order represents '1' with '1'
c Var 'aux1485' order represents '0' with '-16148'
c Encoding variable: aux1486 with domain: int(0..2) (representing constraint (aux79 + aux1485))
c Both direct and order encoding.
c Var 'aux1486' order represents '0' with '16149'
c Var 'aux1486' direct represents '0' with '16149'
c Var 'aux1486' order represents '1' with '16150'
-16149 16150 0
c Var 'aux1486' direct represents '1' with '16151'
16149 -16150 16151 0
-16151 16150 0
-16151 -16149 0
c Var 'aux1486' direct represents '2' with '-16150'
16149 16151 -16150 0
c Encoding variable: aux1487 with domain: int(0..2) (representing constraint (aux74 + aux78))
c Both direct and order encoding.
c Var 'aux1487' order represents '0' with '16152'
c Var 'aux1487' direct represents '0' with '16152'
c Var 'aux1487' order represents '1' with '16153'
-16152 16153 0
c Var 'aux1487' direct represents '1' with '16154'
16152 -16153 16154 0
-16154 16153 0
-16154 -16152 0
c Var 'aux1487' direct represents '2' with '-16153'
16152 16154 -16153 0
c Encoding variable: aux1488 with domain: int(0..2) (representing constraint (aux77 + aux75))
c Both direct and order encoding.
c Var 'aux1488' order represents '0' with '16155'
c Var 'aux1488' direct represents '0' with '16155'
c Var 'aux1488' order represents '1' with '16156'
-16155 16156 0
c Var 'aux1488' direct represents '1' with '16157'
16155 -16156 16157 0
-16157 16156 0
-16157 -16155 0
c Var 'aux1488' direct represents '2' with '-16156'
16155 16157 -16156 0
c Encoding variable: aux1489 with domain: int(0..2) (representing constraint (aux76 + aux73))
c Both direct and order encoding.
c Var 'aux1489' order represents '0' with '16158'
c Var 'aux1489' direct represents '0' with '16158'
c Var 'aux1489' order represents '1' with '16159'
-16158 16159 0
c Var 'aux1489' direct represents '1' with '16160'
16158 -16159 16160 0
-16160 16159 0
-16160 -16158 0
c Var 'aux1489' direct represents '2' with '-16159'
16158 16160 -16159 0
c Encoding variable: aux1490 with domain: int(0..4) (representing constraint (aux1487 + aux1489))
c Both direct and order encoding.
c Var 'aux1490' order represents '0' with '16161'
c Var 'aux1490' direct represents '0' with '16161'
c Var 'aux1490' order represents '1' with '16162'
-16161 16162 0
c Var 'aux1490' direct represents '1' with '16163'
16161 -16162 16163 0
-16163 16162 0
-16163 -16161 0
c Var 'aux1490' order represents '2' with '16164'
-16162 16164 0
c Var 'aux1490' direct represents '2' with '16165'
16162 -16164 16165 0
-16165 16164 0
-16165 -16162 0
c Var 'aux1490' order represents '3' with '16166'
-16164 16166 0
c Var 'aux1490' direct represents '3' with '16167'
16164 -16166 16167 0
-16167 16166 0
-16167 -16164 0
c Var 'aux1490' direct represents '4' with '-16166'
16161 16163 16165 16167 -16166 0
c Encoding variable: aux1491 with domain: int(0..4) (representing constraint (aux1486 + aux1488))
c Both direct and order encoding.
c Var 'aux1491' order represents '0' with '16168'
c Var 'aux1491' direct represents '0' with '16168'
c Var 'aux1491' order represents '1' with '16169'
-16168 16169 0
c Var 'aux1491' direct represents '1' with '16170'
16168 -16169 16170 0
-16170 16169 0
-16170 -16168 0
c Var 'aux1491' order represents '2' with '16171'
-16169 16171 0
c Var 'aux1491' direct represents '2' with '16172'
16169 -16171 16172 0
-16172 16171 0
-16172 -16169 0
c Var 'aux1491' order represents '3' with '16173'
-16171 16173 0
c Var 'aux1491' direct represents '3' with '16174'
16171 -16173 16174 0
-16174 16173 0
-16174 -16171 0
c Var 'aux1491' direct represents '4' with '-16173'
16168 16170 16172 16174 -16173 0
c Encoding variable: aux1492 with domain: bool (representing constraint (shift(true, -1) + aux80))
c Var 'aux1492' direct represents '0' with '-16175'
c Var 'aux1492' direct represents '1' with '16175'
c Var 'aux1492' order represents '1' with '1'
c Var 'aux1492' order represents '0' with '-16175'
c Encoding variable: aux1493 with domain: int(0..2) (representing constraint (aux87 + aux1492))
c Both direct and order encoding.
c Var 'aux1493' order represents '0' with '16176'
c Var 'aux1493' direct represents '0' with '16176'
c Var 'aux1493' order represents '1' with '16177'
-16176 16177 0
c Var 'aux1493' direct represents '1' with '16178'
16176 -16177 16178 0
-16178 16177 0
-16178 -16176 0
c Var 'aux1493' direct represents '2' with '-16177'
16176 16178 -16177 0
c Encoding variable: aux1494 with domain: int(0..2) (representing constraint (aux82 + aux86))
c Both direct and order encoding.
c Var 'aux1494' order represents '0' with '16179'
c Var 'aux1494' direct represents '0' with '16179'
c Var 'aux1494' order represents '1' with '16180'
-16179 16180 0
c Var 'aux1494' direct represents '1' with '16181'
16179 -16180 16181 0
-16181 16180 0
-16181 -16179 0
c Var 'aux1494' direct represents '2' with '-16180'
16179 16181 -16180 0
c Encoding variable: aux1495 with domain: int(0..2) (representing constraint (aux85 + aux83))
c Both direct and order encoding.
c Var 'aux1495' order represents '0' with '16182'
c Var 'aux1495' direct represents '0' with '16182'
c Var 'aux1495' order represents '1' with '16183'
-16182 16183 0
c Var 'aux1495' direct represents '1' with '16184'
16182 -16183 16184 0
-16184 16183 0
-16184 -16182 0
c Var 'aux1495' direct represents '2' with '-16183'
16182 16184 -16183 0
c Encoding variable: aux1496 with domain: int(0..2) (representing constraint (aux84 + aux81))
c Both direct and order encoding.
c Var 'aux1496' order represents '0' with '16185'
c Var 'aux1496' direct represents '0' with '16185'
c Var 'aux1496' order represents '1' with '16186'
-16185 16186 0
c Var 'aux1496' direct represents '1' with '16187'
16185 -16186 16187 0
-16187 16186 0
-16187 -16185 0
c Var 'aux1496' direct represents '2' with '-16186'
16185 16187 -16186 0
c Encoding variable: aux1497 with domain: int(0..4) (representing constraint (aux1494 + aux1496))
c Both direct and order encoding.
c Var 'aux1497' order represents '0' with '16188'
c Var 'aux1497' direct represents '0' with '16188'
c Var 'aux1497' order represents '1' with '16189'
-16188 16189 0
c Var 'aux1497' direct represents '1' with '16190'
16188 -16189 16190 0
-16190 16189 0
-16190 -16188 0
c Var 'aux1497' order represents '2' with '16191'
-16189 16191 0
c Var 'aux1497' direct represents '2' with '16192'
16189 -16191 16192 0
-16192 16191 0
-16192 -16189 0
c Var 'aux1497' order represents '3' with '16193'
-16191 16193 0
c Var 'aux1497' direct represents '3' with '16194'
16191 -16193 16194 0
-16194 16193 0
-16194 -16191 0
c Var 'aux1497' direct represents '4' with '-16193'
16188 16190 16192 16194 -16193 0
c Encoding variable: aux1498 with domain: int(0..4) (representing constraint (aux1493 + aux1495))
c Both direct and order encoding.
c Var 'aux1498' order represents '0' with '16195'
c Var 'aux1498' direct represents '0' with '16195'
c Var 'aux1498' order represents '1' with '16196'
-16195 16196 0
c Var 'aux1498' direct represents '1' with '16197'
16195 -16196 16197 0
-16197 16196 0
-16197 -16195 0
c Var 'aux1498' order represents '2' with '16198'
-16196 16198 0
c Var 'aux1498' direct represents '2' with '16199'
16196 -16198 16199 0
-16199 16198 0
-16199 -16196 0
c Var 'aux1498' order represents '3' with '16200'
-16198 16200 0
c Var 'aux1498' direct represents '3' with '16201'
16198 -16200 16201 0
-16201 16200 0
-16201 -16198 0
c Var 'aux1498' direct represents '4' with '-16200'
16195 16197 16199 16201 -16200 0
c Encoding variable: aux1499 with domain: bool (representing constraint (shift(true, -1) + aux88))
c Var 'aux1499' direct represents '0' with '-16202'
c Var 'aux1499' direct represents '1' with '16202'
c Var 'aux1499' order represents '1' with '1'
c Var 'aux1499' order represents '0' with '-16202'
c Encoding variable: aux1500 with domain: int(0..2) (representing constraint (aux95 + aux1499))
c Both direct and order encoding.
c Var 'aux1500' order represents '0' with '16203'
c Var 'aux1500' direct represents '0' with '16203'
c Var 'aux1500' order represents '1' with '16204'
-16203 16204 0
c Var 'aux1500' direct represents '1' with '16205'
16203 -16204 16205 0
-16205 16204 0
-16205 -16203 0
c Var 'aux1500' direct represents '2' with '-16204'
16203 16205 -16204 0
c Encoding variable: aux1501 with domain: int(0..2) (representing constraint (aux90 + aux94))
c Both direct and order encoding.
c Var 'aux1501' order represents '0' with '16206'
c Var 'aux1501' direct represents '0' with '16206'
c Var 'aux1501' order represents '1' with '16207'
-16206 16207 0
c Var 'aux1501' direct represents '1' with '16208'
16206 -16207 16208 0
-16208 16207 0
-16208 -16206 0
c Var 'aux1501' direct represents '2' with '-16207'
16206 16208 -16207 0
c Encoding variable: aux1502 with domain: int(0..2) (representing constraint (aux93 + aux91))
c Both direct and order encoding.
c Var 'aux1502' order represents '0' with '16209'
c Var 'aux1502' direct represents '0' with '16209'
c Var 'aux1502' order represents '1' with '16210'
-16209 16210 0
c Var 'aux1502' direct represents '1' with '16211'
16209 -16210 16211 0
-16211 16210 0
-16211 -16209 0
c Var 'aux1502' direct represents '2' with '-16210'
16209 16211 -16210 0
c Encoding variable: aux1503 with domain: int(0..2) (representing constraint (aux92 + aux89))
c Both direct and order encoding.
c Var 'aux1503' order represents '0' with '16212'
c Var 'aux1503' direct represents '0' with '16212'
c Var 'aux1503' order represents '1' with '16213'
-16212 16213 0
c Var 'aux1503' direct represents '1' with '16214'
16212 -16213 16214 0
-16214 16213 0
-16214 -16212 0
c Var 'aux1503' direct represents '2' with '-16213'
16212 16214 -16213 0
c Encoding variable: aux1504 with domain: int(0..4) (representing constraint (aux1501 + aux1503))
c Both direct and order encoding.
c Var 'aux1504' order represents '0' with '16215'
c Var 'aux1504' direct represents '0' with '16215'
c Var 'aux1504' order represents '1' with '16216'
-16215 16216 0
c Var 'aux1504' direct represents '1' with '16217'
16215 -16216 16217 0
-16217 16216 0
-16217 -16215 0
c Var 'aux1504' order represents '2' with '16218'
-16216 16218 0
c Var 'aux1504' direct represents '2' with '16219'
16216 -16218 16219 0
-16219 16218 0
-16219 -16216 0
c Var 'aux1504' order represents '3' with '16220'
-16218 16220 0
c Var 'aux1504' direct represents '3' with '16221'
16218 -16220 16221 0
-16221 16220 0
-16221 -16218 0
c Var 'aux1504' direct represents '4' with '-16220'
16215 16217 16219 16221 -16220 0
c Encoding variable: aux1505 with domain: int(0..4) (representing constraint (aux1500 + aux1502))
c Both direct and order encoding.
c Var 'aux1505' order represents '0' with '16222'
c Var 'aux1505' direct represents '0' with '16222'
c Var 'aux1505' order represents '1' with '16223'
-16222 16223 0
c Var 'aux1505' direct represents '1' with '16224'
16222 -16223 16224 0
-16224 16223 0
-16224 -16222 0
c Var 'aux1505' order represents '2' with '16225'
-16223 16225 0
c Var 'aux1505' direct represents '2' with '16226'
16223 -16225 16226 0
-16226 16225 0
-16226 -16223 0
c Var 'aux1505' order represents '3' with '16227'
-16225 16227 0
c Var 'aux1505' direct represents '3' with '16228'
16225 -16227 16228 0
-16228 16227 0
-16228 -16225 0
c Var 'aux1505' direct represents '4' with '-16227'
16222 16224 16226 16228 -16227 0
c Encoding variable: aux1506 with domain: bool (representing constraint (shift(true, -1) + aux100))
c Var 'aux1506' direct represents '0' with '-16229'
c Var 'aux1506' direct represents '1' with '16229'
c Var 'aux1506' order represents '1' with '1'
c Var 'aux1506' order represents '0' with '-16229'
c Encoding variable: aux1507 with domain: int(0..2) (representing constraint (aux99 + aux1506))
c Both direct and order encoding.
c Var 'aux1507' order represents '0' with '16230'
c Var 'aux1507' direct represents '0' with '16230'
c Var 'aux1507' order represents '1' with '16231'
-16230 16231 0
c Var 'aux1507' direct represents '1' with '16232'
16230 -16231 16232 0
-16232 16231 0
-16232 -16230 0
c Var 'aux1507' direct represents '2' with '-16231'
16230 16232 -16231 0
c Encoding variable: aux1508 with domain: int(0..2) (representing constraint (aux103 + aux98))
c Both direct and order encoding.
c Var 'aux1508' order represents '0' with '16233'
c Var 'aux1508' direct represents '0' with '16233'
c Var 'aux1508' order represents '1' with '16234'
-16233 16234 0
c Var 'aux1508' direct represents '1' with '16235'
16233 -16234 16235 0
-16235 16234 0
-16235 -16233 0
c Var 'aux1508' direct represents '2' with '-16234'
16233 16235 -16234 0
c Encoding variable: aux1509 with domain: int(0..2) (representing constraint (aux97 + aux101))
c Both direct and order encoding.
c Var 'aux1509' order represents '0' with '16236'
c Var 'aux1509' direct represents '0' with '16236'
c Var 'aux1509' order represents '1' with '16237'
-16236 16237 0
c Var 'aux1509' direct represents '1' with '16238'
16236 -16237 16238 0
-16238 16237 0
-16238 -16236 0
c Var 'aux1509' direct represents '2' with '-16237'
16236 16238 -16237 0
c Encoding variable: aux1510 with domain: int(0..2) (representing constraint (aux96 + aux102))
c Both direct and order encoding.
c Var 'aux1510' order represents '0' with '16239'
c Var 'aux1510' direct represents '0' with '16239'
c Var 'aux1510' order represents '1' with '16240'
-16239 16240 0
c Var 'aux1510' direct represents '1' with '16241'
16239 -16240 16241 0
-16241 16240 0
-16241 -16239 0
c Var 'aux1510' direct represents '2' with '-16240'
16239 16241 -16240 0
c Encoding variable: aux1511 with domain: int(0..4) (representing constraint (aux1508 + aux1510))
c Both direct and order encoding.
c Var 'aux1511' order represents '0' with '16242'
c Var 'aux1511' direct represents '0' with '16242'
c Var 'aux1511' order represents '1' with '16243'
-16242 16243 0
c Var 'aux1511' direct represents '1' with '16244'
16242 -16243 16244 0
-16244 16243 0
-16244 -16242 0
c Var 'aux1511' order represents '2' with '16245'
-16243 16245 0
c Var 'aux1511' direct represents '2' with '16246'
16243 -16245 16246 0
-16246 16245 0
-16246 -16243 0
c Var 'aux1511' order represents '3' with '16247'
-16245 16247 0
c Var 'aux1511' direct represents '3' with '16248'
16245 -16247 16248 0
-16248 16247 0
-16248 -16245 0
c Var 'aux1511' direct represents '4' with '-16247'
16242 16244 16246 16248 -16247 0
c Encoding variable: aux1512 with domain: int(0..4) (representing constraint (aux1507 + aux1509))
c Both direct and order encoding.
c Var 'aux1512' order represents '0' with '16249'
c Var 'aux1512' direct represents '0' with '16249'
c Var 'aux1512' order represents '1' with '16250'
-16249 16250 0
c Var 'aux1512' direct represents '1' with '16251'
16249 -16250 16251 0
-16251 16250 0
-16251 -16249 0
c Var 'aux1512' order represents '2' with '16252'
-16250 16252 0
c Var 'aux1512' direct represents '2' with '16253'
16250 -16252 16253 0
-16253 16252 0
-16253 -16250 0
c Var 'aux1512' order represents '3' with '16254'
-16252 16254 0
c Var 'aux1512' direct represents '3' with '16255'
16252 -16254 16255 0
-16255 16254 0
-16255 -16252 0
c Var 'aux1512' direct represents '4' with '-16254'
16249 16251 16253 16255 -16254 0
c Encoding variable: aux1513 with domain: bool (representing constraint (shift(true, -1) + aux104))
c Var 'aux1513' direct represents '0' with '-16256'
c Var 'aux1513' direct represents '1' with '16256'
c Var 'aux1513' order represents '1' with '1'
c Var 'aux1513' order represents '0' with '-16256'
c Encoding variable: aux1514 with domain: int(0..2) (representing constraint (aux107 + aux1513))
c Both direct and order encoding.
c Var 'aux1514' order represents '0' with '16257'
c Var 'aux1514' direct represents '0' with '16257'
c Var 'aux1514' order represents '1' with '16258'
-16257 16258 0
c Var 'aux1514' direct represents '1' with '16259'
16257 -16258 16259 0
-16259 16258 0
-16259 -16257 0
c Var 'aux1514' direct represents '2' with '-16258'
16257 16259 -16258 0
c Encoding variable: aux1515 with domain: int(0..2) (representing constraint (aux105 + aux111))
c Both direct and order encoding.
c Var 'aux1515' order represents '0' with '16260'
c Var 'aux1515' direct represents '0' with '16260'
c Var 'aux1515' order represents '1' with '16261'
-16260 16261 0
c Var 'aux1515' direct represents '1' with '16262'
16260 -16261 16262 0
-16262 16261 0
-16262 -16260 0
c Var 'aux1515' direct represents '2' with '-16261'
16260 16262 -16261 0
c Encoding variable: aux1516 with domain: int(0..2) (representing constraint (aux110 + aux108))
c Both direct and order encoding.
c Var 'aux1516' order represents '0' with '16263'
c Var 'aux1516' direct represents '0' with '16263'
c Var 'aux1516' order represents '1' with '16264'
-16263 16264 0
c Var 'aux1516' direct represents '1' with '16265'
16263 -16264 16265 0
-16265 16264 0
-16265 -16263 0
c Var 'aux1516' direct represents '2' with '-16264'
16263 16265 -16264 0
c Encoding variable: aux1517 with domain: int(0..2) (representing constraint (aux109 + aux106))
c Both direct and order encoding.
c Var 'aux1517' order represents '0' with '16266'
c Var 'aux1517' direct represents '0' with '16266'
c Var 'aux1517' order represents '1' with '16267'
-16266 16267 0
c Var 'aux1517' direct represents '1' with '16268'
16266 -16267 16268 0
-16268 16267 0
-16268 -16266 0
c Var 'aux1517' direct represents '2' with '-16267'
16266 16268 -16267 0
c Encoding variable: aux1518 with domain: int(0..4) (representing constraint (aux1515 + aux1517))
c Both direct and order encoding.
c Var 'aux1518' order represents '0' with '16269'
c Var 'aux1518' direct represents '0' with '16269'
c Var 'aux1518' order represents '1' with '16270'
-16269 16270 0
c Var 'aux1518' direct represents '1' with '16271'
16269 -16270 16271 0
-16271 16270 0
-16271 -16269 0
c Var 'aux1518' order represents '2' with '16272'
-16270 16272 0
c Var 'aux1518' direct represents '2' with '16273'
16270 -16272 16273 0
-16273 16272 0
-16273 -16270 0
c Var 'aux1518' order represents '3' with '16274'
-16272 16274 0
c Var 'aux1518' direct represents '3' with '16275'
16272 -16274 16275 0
-16275 16274 0
-16275 -16272 0
c Var 'aux1518' direct represents '4' with '-16274'
16269 16271 16273 16275 -16274 0
c Encoding variable: aux1519 with domain: int(0..4) (representing constraint (aux1514 + aux1516))
c Both direct and order encoding.
c Var 'aux1519' order represents '0' with '16276'
c Var 'aux1519' direct represents '0' with '16276'
c Var 'aux1519' order represents '1' with '16277'
-16276 16277 0
c Var 'aux1519' direct represents '1' with '16278'
16276 -16277 16278 0
-16278 16277 0
-16278 -16276 0
c Var 'aux1519' order represents '2' with '16279'
-16277 16279 0
c Var 'aux1519' direct represents '2' with '16280'
16277 -16279 16280 0
-16280 16279 0
-16280 -16277 0
c Var 'aux1519' order represents '3' with '16281'
-16279 16281 0
c Var 'aux1519' direct represents '3' with '16282'
16279 -16281 16282 0
-16282 16281 0
-16282 -16279 0
c Var 'aux1519' direct represents '4' with '-16281'
16276 16278 16280 16282 -16281 0
c Encoding variable: aux1520 with domain: bool (representing constraint (shift(true, -1) + aux112))
c Var 'aux1520' direct represents '0' with '-16283'
c Var 'aux1520' direct represents '1' with '16283'
c Var 'aux1520' order represents '1' with '1'
c Var 'aux1520' order represents '0' with '-16283'
c Encoding variable: aux1521 with domain: int(0..2) (representing constraint (aux115 + aux1520))
c Both direct and order encoding.
c Var 'aux1521' order represents '0' with '16284'
c Var 'aux1521' direct represents '0' with '16284'
c Var 'aux1521' order represents '1' with '16285'
-16284 16285 0
c Var 'aux1521' direct represents '1' with '16286'
16284 -16285 16286 0
-16286 16285 0
-16286 -16284 0
c Var 'aux1521' direct represents '2' with '-16285'
16284 16286 -16285 0
c Encoding variable: aux1522 with domain: int(0..2) (representing constraint (aux113 + aux119))
c Both direct and order encoding.
c Var 'aux1522' order represents '0' with '16287'
c Var 'aux1522' direct represents '0' with '16287'
c Var 'aux1522' order represents '1' with '16288'
-16287 16288 0
c Var 'aux1522' direct represents '1' with '16289'
16287 -16288 16289 0
-16289 16288 0
-16289 -16287 0
c Var 'aux1522' direct represents '2' with '-16288'
16287 16289 -16288 0
c Encoding variable: aux1523 with domain: int(0..2) (representing constraint (aux118 + aux116))
c Both direct and order encoding.
c Var 'aux1523' order represents '0' with '16290'
c Var 'aux1523' direct represents '0' with '16290'
c Var 'aux1523' order represents '1' with '16291'
-16290 16291 0
c Var 'aux1523' direct represents '1' with '16292'
16290 -16291 16292 0
-16292 16291 0
-16292 -16290 0
c Var 'aux1523' direct represents '2' with '-16291'
16290 16292 -16291 0
c Encoding variable: aux1524 with domain: int(0..2) (representing constraint (aux117 + aux114))
c Both direct and order encoding.
c Var 'aux1524' order represents '0' with '16293'
c Var 'aux1524' direct represents '0' with '16293'
c Var 'aux1524' order represents '1' with '16294'
-16293 16294 0
c Var 'aux1524' direct represents '1' with '16295'
16293 -16294 16295 0
-16295 16294 0
-16295 -16293 0
c Var 'aux1524' direct represents '2' with '-16294'
16293 16295 -16294 0
c Encoding variable: aux1525 with domain: int(0..4) (representing constraint (aux1522 + aux1524))
c Both direct and order encoding.
c Var 'aux1525' order represents '0' with '16296'
c Var 'aux1525' direct represents '0' with '16296'
c Var 'aux1525' order represents '1' with '16297'
-16296 16297 0
c Var 'aux1525' direct represents '1' with '16298'
16296 -16297 16298 0
-16298 16297 0
-16298 -16296 0
c Var 'aux1525' order represents '2' with '16299'
-16297 16299 0
c Var 'aux1525' direct represents '2' with '16300'
16297 -16299 16300 0
-16300 16299 0
-16300 -16297 0
c Var 'aux1525' order represents '3' with '16301'
-16299 16301 0
c Var 'aux1525' direct represents '3' with '16302'
16299 -16301 16302 0
-16302 16301 0
-16302 -16299 0
c Var 'aux1525' direct represents '4' with '-16301'
16296 16298 16300 16302 -16301 0
c Encoding variable: aux1526 with domain: int(0..4) (representing constraint (aux1521 + aux1523))
c Both direct and order encoding.
c Var 'aux1526' order represents '0' with '16303'
c Var 'aux1526' direct represents '0' with '16303'
c Var 'aux1526' order represents '1' with '16304'
-16303 16304 0
c Var 'aux1526' direct represents '1' with '16305'
16303 -16304 16305 0
-16305 16304 0
-16305 -16303 0
c Var 'aux1526' order represents '2' with '16306'
-16304 16306 0
c Var 'aux1526' direct represents '2' with '16307'
16304 -16306 16307 0
-16307 16306 0
-16307 -16304 0
c Var 'aux1526' order represents '3' with '16308'
-16306 16308 0
c Var 'aux1526' direct represents '3' with '16309'
16306 -16308 16309 0
-16309 16308 0
-16309 -16306 0
c Var 'aux1526' direct represents '4' with '-16308'
16303 16305 16307 16309 -16308 0
c Encoding variable: aux1527 with domain: bool (representing constraint (shift(true, -1) + aux120))
c Var 'aux1527' direct represents '0' with '-16310'
c Var 'aux1527' direct represents '1' with '16310'
c Var 'aux1527' order represents '1' with '1'
c Var 'aux1527' order represents '0' with '-16310'
c Encoding variable: aux1528 with domain: int(0..2) (representing constraint (aux123 + aux1527))
c Both direct and order encoding.
c Var 'aux1528' order represents '0' with '16311'
c Var 'aux1528' direct represents '0' with '16311'
c Var 'aux1528' order represents '1' with '16312'
-16311 16312 0
c Var 'aux1528' direct represents '1' with '16313'
16311 -16312 16313 0
-16313 16312 0
-16313 -16311 0
c Var 'aux1528' direct represents '2' with '-16312'
16311 16313 -16312 0
c Encoding variable: aux1529 with domain: int(0..2) (representing constraint (aux121 + aux127))
c Both direct and order encoding.
c Var 'aux1529' order represents '0' with '16314'
c Var 'aux1529' direct represents '0' with '16314'
c Var 'aux1529' order represents '1' with '16315'
-16314 16315 0
c Var 'aux1529' direct represents '1' with '16316'
16314 -16315 16316 0
-16316 16315 0
-16316 -16314 0
c Var 'aux1529' direct represents '2' with '-16315'
16314 16316 -16315 0
c Encoding variable: aux1530 with domain: int(0..2) (representing constraint (aux126 + aux124))
c Both direct and order encoding.
c Var 'aux1530' order represents '0' with '16317'
c Var 'aux1530' direct represents '0' with '16317'
c Var 'aux1530' order represents '1' with '16318'
-16317 16318 0
c Var 'aux1530' direct represents '1' with '16319'
16317 -16318 16319 0
-16319 16318 0
-16319 -16317 0
c Var 'aux1530' direct represents '2' with '-16318'
16317 16319 -16318 0
c Encoding variable: aux1531 with domain: int(0..2) (representing constraint (aux125 + aux122))
c Both direct and order encoding.
c Var 'aux1531' order represents '0' with '16320'
c Var 'aux1531' direct represents '0' with '16320'
c Var 'aux1531' order represents '1' with '16321'
-16320 16321 0
c Var 'aux1531' direct represents '1' with '16322'
16320 -16321 16322 0
-16322 16321 0
-16322 -16320 0
c Var 'aux1531' direct represents '2' with '-16321'
16320 16322 -16321 0
c Encoding variable: aux1532 with domain: int(0..4) (representing constraint (aux1529 + aux1531))
c Both direct and order encoding.
c Var 'aux1532' order represents '0' with '16323'
c Var 'aux1532' direct represents '0' with '16323'
c Var 'aux1532' order represents '1' with '16324'
-16323 16324 0
c Var 'aux1532' direct represents '1' with '16325'
16323 -16324 16325 0
-16325 16324 0
-16325 -16323 0
c Var 'aux1532' order represents '2' with '16326'
-16324 16326 0
c Var 'aux1532' direct represents '2' with '16327'
16324 -16326 16327 0
-16327 16326 0
-16327 -16324 0
c Var 'aux1532' order represents '3' with '16328'
-16326 16328 0
c Var 'aux1532' direct represents '3' with '16329'
16326 -16328 16329 0
-16329 16328 0
-16329 -16326 0
c Var 'aux1532' direct represents '4' with '-16328'
16323 16325 16327 16329 -16328 0
c Encoding variable: aux1533 with domain: int(0..4) (representing constraint (aux1528 + aux1530))
c Both direct and order encoding.
c Var 'aux1533' order represents '0' with '16330'
c Var 'aux1533' direct represents '0' with '16330'
c Var 'aux1533' order represents '1' with '16331'
-16330 16331 0
c Var 'aux1533' direct represents '1' with '16332'
16330 -16331 16332 0
-16332 16331 0
-16332 -16330 0
c Var 'aux1533' order represents '2' with '16333'
-16331 16333 0
c Var 'aux1533' direct represents '2' with '16334'
16331 -16333 16334 0
-16334 16333 0
-16334 -16331 0
c Var 'aux1533' order represents '3' with '16335'
-16333 16335 0
c Var 'aux1533' direct represents '3' with '16336'
16333 -16335 16336 0
-16336 16335 0
-16336 -16333 0
c Var 'aux1533' direct represents '4' with '-16335'
16330 16332 16334 16336 -16335 0
c Encoding variable: aux1534 with domain: bool (representing constraint (shift(true, -1) + aux128))
c Var 'aux1534' direct represents '0' with '-16337'
c Var 'aux1534' direct represents '1' with '16337'
c Var 'aux1534' order represents '1' with '1'
c Var 'aux1534' order represents '0' with '-16337'
c Encoding variable: aux1535 with domain: int(0..2) (representing constraint (aux131 + aux1534))
c Both direct and order encoding.
c Var 'aux1535' order represents '0' with '16338'
c Var 'aux1535' direct represents '0' with '16338'
c Var 'aux1535' order represents '1' with '16339'
-16338 16339 0
c Var 'aux1535' direct represents '1' with '16340'
16338 -16339 16340 0
-16340 16339 0
-16340 -16338 0
c Var 'aux1535' direct represents '2' with '-16339'
16338 16340 -16339 0
c Encoding variable: aux1536 with domain: int(0..2) (representing constraint (aux129 + aux135))
c Both direct and order encoding.
c Var 'aux1536' order represents '0' with '16341'
c Var 'aux1536' direct represents '0' with '16341'
c Var 'aux1536' order represents '1' with '16342'
-16341 16342 0
c Var 'aux1536' direct represents '1' with '16343'
16341 -16342 16343 0
-16343 16342 0
-16343 -16341 0
c Var 'aux1536' direct represents '2' with '-16342'
16341 16343 -16342 0
c Encoding variable: aux1537 with domain: int(0..2) (representing constraint (aux134 + aux132))
c Both direct and order encoding.
c Var 'aux1537' order represents '0' with '16344'
c Var 'aux1537' direct represents '0' with '16344'
c Var 'aux1537' order represents '1' with '16345'
-16344 16345 0
c Var 'aux1537' direct represents '1' with '16346'
16344 -16345 16346 0
-16346 16345 0
-16346 -16344 0
c Var 'aux1537' direct represents '2' with '-16345'
16344 16346 -16345 0
c Encoding variable: aux1538 with domain: int(0..2) (representing constraint (aux133 + aux130))
c Both direct and order encoding.
c Var 'aux1538' order represents '0' with '16347'
c Var 'aux1538' direct represents '0' with '16347'
c Var 'aux1538' order represents '1' with '16348'
-16347 16348 0
c Var 'aux1538' direct represents '1' with '16349'
16347 -16348 16349 0
-16349 16348 0
-16349 -16347 0
c Var 'aux1538' direct represents '2' with '-16348'
16347 16349 -16348 0
c Encoding variable: aux1539 with domain: int(0..4) (representing constraint (aux1536 + aux1538))
c Both direct and order encoding.
c Var 'aux1539' order represents '0' with '16350'
c Var 'aux1539' direct represents '0' with '16350'
c Var 'aux1539' order represents '1' with '16351'
-16350 16351 0
c Var 'aux1539' direct represents '1' with '16352'
16350 -16351 16352 0
-16352 16351 0
-16352 -16350 0
c Var 'aux1539' order represents '2' with '16353'
-16351 16353 0
c Var 'aux1539' direct represents '2' with '16354'
16351 -16353 16354 0
-16354 16353 0
-16354 -16351 0
c Var 'aux1539' order represents '3' with '16355'
-16353 16355 0
c Var 'aux1539' direct represents '3' with '16356'
16353 -16355 16356 0
-16356 16355 0
-16356 -16353 0
c Var 'aux1539' direct represents '4' with '-16355'
16350 16352 16354 16356 -16355 0
c Encoding variable: aux1540 with domain: int(0..4) (representing constraint (aux1535 + aux1537))
c Both direct and order encoding.
c Var 'aux1540' order represents '0' with '16357'
c Var 'aux1540' direct represents '0' with '16357'
c Var 'aux1540' order represents '1' with '16358'
-16357 16358 0
c Var 'aux1540' direct represents '1' with '16359'
16357 -16358 16359 0
-16359 16358 0
-16359 -16357 0
c Var 'aux1540' order represents '2' with '16360'
-16358 16360 0
c Var 'aux1540' direct represents '2' with '16361'
16358 -16360 16361 0
-16361 16360 0
-16361 -16358 0
c Var 'aux1540' order represents '3' with '16362'
-16360 16362 0
c Var 'aux1540' direct represents '3' with '16363'
16360 -16362 16363 0
-16363 16362 0
-16363 -16360 0
c Var 'aux1540' direct represents '4' with '-16362'
16357 16359 16361 16363 -16362 0
c Encoding variable: aux1541 with domain: bool (representing constraint (shift(true, -1) + aux136))
c Var 'aux1541' direct represents '0' with '-16364'
c Var 'aux1541' direct represents '1' with '16364'
c Var 'aux1541' order represents '1' with '1'
c Var 'aux1541' order represents '0' with '-16364'
c Encoding variable: aux1542 with domain: int(0..2) (representing constraint (aux139 + aux1541))
c Both direct and order encoding.
c Var 'aux1542' order represents '0' with '16365'
c Var 'aux1542' direct represents '0' with '16365'
c Var 'aux1542' order represents '1' with '16366'
-16365 16366 0
c Var 'aux1542' direct represents '1' with '16367'
16365 -16366 16367 0
-16367 16366 0
-16367 -16365 0
c Var 'aux1542' direct represents '2' with '-16366'
16365 16367 -16366 0
c Encoding variable: aux1543 with domain: int(0..2) (representing constraint (aux137 + aux143))
c Both direct and order encoding.
c Var 'aux1543' order represents '0' with '16368'
c Var 'aux1543' direct represents '0' with '16368'
c Var 'aux1543' order represents '1' with '16369'
-16368 16369 0
c Var 'aux1543' direct represents '1' with '16370'
16368 -16369 16370 0
-16370 16369 0
-16370 -16368 0
c Var 'aux1543' direct represents '2' with '-16369'
16368 16370 -16369 0
c Encoding variable: aux1544 with domain: int(0..2) (representing constraint (aux142 + aux140))
c Both direct and order encoding.
c Var 'aux1544' order represents '0' with '16371'
c Var 'aux1544' direct represents '0' with '16371'
c Var 'aux1544' order represents '1' with '16372'
-16371 16372 0
c Var 'aux1544' direct represents '1' with '16373'
16371 -16372 16373 0
-16373 16372 0
-16373 -16371 0
c Var 'aux1544' direct represents '2' with '-16372'
16371 16373 -16372 0
c Encoding variable: aux1545 with domain: int(0..2) (representing constraint (aux141 + aux138))
c Both direct and order encoding.
c Var 'aux1545' order represents '0' with '16374'
c Var 'aux1545' direct represents '0' with '16374'
c Var 'aux1545' order represents '1' with '16375'
-16374 16375 0
c Var 'aux1545' direct represents '1' with '16376'
16374 -16375 16376 0
-16376 16375 0
-16376 -16374 0
c Var 'aux1545' direct represents '2' with '-16375'
16374 16376 -16375 0
c Encoding variable: aux1546 with domain: int(0..4) (representing constraint (aux1543 + aux1545))
c Both direct and order encoding.
c Var 'aux1546' order represents '0' with '16377'
c Var 'aux1546' direct represents '0' with '16377'
c Var 'aux1546' order represents '1' with '16378'
-16377 16378 0
c Var 'aux1546' direct represents '1' with '16379'
16377 -16378 16379 0
-16379 16378 0
-16379 -16377 0
c Var 'aux1546' order represents '2' with '16380'
-16378 16380 0
c Var 'aux1546' direct represents '2' with '16381'
16378 -16380 16381 0
-16381 16380 0
-16381 -16378 0
c Var 'aux1546' order represents '3' with '16382'
-16380 16382 0
c Var 'aux1546' direct represents '3' with '16383'
16380 -16382 16383 0
-16383 16382 0
-16383 -16380 0
c Var 'aux1546' direct represents '4' with '-16382'
16377 16379 16381 16383 -16382 0
c Encoding variable: aux1547 with domain: int(0..4) (representing constraint (aux1542 + aux1544))
c Both direct and order encoding.
c Var 'aux1547' order represents '0' with '16384'
c Var 'aux1547' direct represents '0' with '16384'
c Var 'aux1547' order represents '1' with '16385'
-16384 16385 0
c Var 'aux1547' direct represents '1' with '16386'
16384 -16385 16386 0
-16386 16385 0
-16386 -16384 0
c Var 'aux1547' order represents '2' with '16387'
-16385 16387 0
c Var 'aux1547' direct represents '2' with '16388'
16385 -16387 16388 0
-16388 16387 0
-16388 -16385 0
c Var 'aux1547' order represents '3' with '16389'
-16387 16389 0
c Var 'aux1547' direct represents '3' with '16390'
16387 -16389 16390 0
-16390 16389 0
-16390 -16387 0
c Var 'aux1547' direct represents '4' with '-16389'
16384 16386 16388 16390 -16389 0
c Encoding variable: aux1548 with domain: bool (representing constraint (shift(true, -1) + aux147))
c Var 'aux1548' direct represents '0' with '-16391'
c Var 'aux1548' direct represents '1' with '16391'
c Var 'aux1548' order represents '1' with '1'
c Var 'aux1548' order represents '0' with '-16391'
c Encoding variable: aux1549 with domain: int(0..2) (representing constraint (aux151 + aux1548))
c Both direct and order encoding.
c Var 'aux1549' order represents '0' with '16392'
c Var 'aux1549' direct represents '0' with '16392'
c Var 'aux1549' order represents '1' with '16393'
-16392 16393 0
c Var 'aux1549' direct represents '1' with '16394'
16392 -16393 16394 0
-16394 16393 0
-16394 -16392 0
c Var 'aux1549' direct represents '2' with '-16393'
16392 16394 -16393 0
c Encoding variable: aux1550 with domain: int(0..2) (representing constraint (aux144 + aux150))
c Both direct and order encoding.
c Var 'aux1550' order represents '0' with '16395'
c Var 'aux1550' direct represents '0' with '16395'
c Var 'aux1550' order represents '1' with '16396'
-16395 16396 0
c Var 'aux1550' direct represents '1' with '16397'
16395 -16396 16397 0
-16397 16396 0
-16397 -16395 0
c Var 'aux1550' direct represents '2' with '-16396'
16395 16397 -16396 0
c Encoding variable: aux1551 with domain: int(0..2) (representing constraint (aux149 + aux146))
c Both direct and order encoding.
c Var 'aux1551' order represents '0' with '16398'
c Var 'aux1551' direct represents '0' with '16398'
c Var 'aux1551' order represents '1' with '16399'
-16398 16399 0
c Var 'aux1551' direct represents '1' with '16400'
16398 -16399 16400 0
-16400 16399 0
-16400 -16398 0
c Var 'aux1551' direct represents '2' with '-16399'
16398 16400 -16399 0
c Encoding variable: aux1552 with domain: int(0..2) (representing constraint (aux148 + aux145))
c Both direct and order encoding.
c Var 'aux1552' order represents '0' with '16401'
c Var 'aux1552' direct represents '0' with '16401'
c Var 'aux1552' order represents '1' with '16402'
-16401 16402 0
c Var 'aux1552' direct represents '1' with '16403'
16401 -16402 16403 0
-16403 16402 0
-16403 -16401 0
c Var 'aux1552' direct represents '2' with '-16402'
16401 16403 -16402 0
c Encoding variable: aux1553 with domain: int(0..4) (representing constraint (aux1550 + aux1552))
c Both direct and order encoding.
c Var 'aux1553' order represents '0' with '16404'
c Var 'aux1553' direct represents '0' with '16404'
c Var 'aux1553' order represents '1' with '16405'
-16404 16405 0
c Var 'aux1553' direct represents '1' with '16406'
16404 -16405 16406 0
-16406 16405 0
-16406 -16404 0
c Var 'aux1553' order represents '2' with '16407'
-16405 16407 0
c Var 'aux1553' direct represents '2' with '16408'
16405 -16407 16408 0
-16408 16407 0
-16408 -16405 0
c Var 'aux1553' order represents '3' with '16409'
-16407 16409 0
c Var 'aux1553' direct represents '3' with '16410'
16407 -16409 16410 0
-16410 16409 0
-16410 -16407 0
c Var 'aux1553' direct represents '4' with '-16409'
16404 16406 16408 16410 -16409 0
c Encoding variable: aux1554 with domain: int(0..4) (representing constraint (aux1549 + aux1551))
c Both direct and order encoding.
c Var 'aux1554' order represents '0' with '16411'
c Var 'aux1554' direct represents '0' with '16411'
c Var 'aux1554' order represents '1' with '16412'
-16411 16412 0
c Var 'aux1554' direct represents '1' with '16413'
16411 -16412 16413 0
-16413 16412 0
-16413 -16411 0
c Var 'aux1554' order represents '2' with '16414'
-16412 16414 0
c Var 'aux1554' direct represents '2' with '16415'
16412 -16414 16415 0
-16415 16414 0
-16415 -16412 0
c Var 'aux1554' order represents '3' with '16416'
-16414 16416 0
c Var 'aux1554' direct represents '3' with '16417'
16414 -16416 16417 0
-16417 16416 0
-16417 -16414 0
c Var 'aux1554' direct represents '4' with '-16416'
16411 16413 16415 16417 -16416 0
c Encoding variable: aux1555 with domain: bool (representing constraint (shift(true, -1) + aux155))
c Var 'aux1555' direct represents '0' with '-16418'
c Var 'aux1555' direct represents '1' with '16418'
c Var 'aux1555' order represents '1' with '1'
c Var 'aux1555' order represents '0' with '-16418'
c Encoding variable: aux1556 with domain: int(0..2) (representing constraint (aux159 + aux1555))
c Both direct and order encoding.
c Var 'aux1556' order represents '0' with '16419'
c Var 'aux1556' direct represents '0' with '16419'
c Var 'aux1556' order represents '1' with '16420'
-16419 16420 0
c Var 'aux1556' direct represents '1' with '16421'
16419 -16420 16421 0
-16421 16420 0
-16421 -16419 0
c Var 'aux1556' direct represents '2' with '-16420'
16419 16421 -16420 0
c Encoding variable: aux1557 with domain: int(0..2) (representing constraint (aux152 + aux158))
c Both direct and order encoding.
c Var 'aux1557' order represents '0' with '16422'
c Var 'aux1557' direct represents '0' with '16422'
c Var 'aux1557' order represents '1' with '16423'
-16422 16423 0
c Var 'aux1557' direct represents '1' with '16424'
16422 -16423 16424 0
-16424 16423 0
-16424 -16422 0
c Var 'aux1557' direct represents '2' with '-16423'
16422 16424 -16423 0
c Encoding variable: aux1558 with domain: int(0..2) (representing constraint (aux157 + aux154))
c Both direct and order encoding.
c Var 'aux1558' order represents '0' with '16425'
c Var 'aux1558' direct represents '0' with '16425'
c Var 'aux1558' order represents '1' with '16426'
-16425 16426 0
c Var 'aux1558' direct represents '1' with '16427'
16425 -16426 16427 0
-16427 16426 0
-16427 -16425 0
c Var 'aux1558' direct represents '2' with '-16426'
16425 16427 -16426 0
c Encoding variable: aux1559 with domain: int(0..2) (representing constraint (aux156 + aux153))
c Both direct and order encoding.
c Var 'aux1559' order represents '0' with '16428'
c Var 'aux1559' direct represents '0' with '16428'
c Var 'aux1559' order represents '1' with '16429'
-16428 16429 0
c Var 'aux1559' direct represents '1' with '16430'
16428 -16429 16430 0
-16430 16429 0
-16430 -16428 0
c Var 'aux1559' direct represents '2' with '-16429'
16428 16430 -16429 0
c Encoding variable: aux1560 with domain: int(0..4) (representing constraint (aux1557 + aux1559))
c Both direct and order encoding.
c Var 'aux1560' order represents '0' with '16431'
c Var 'aux1560' direct represents '0' with '16431'
c Var 'aux1560' order represents '1' with '16432'
-16431 16432 0
c Var 'aux1560' direct represents '1' with '16433'
16431 -16432 16433 0
-16433 16432 0
-16433 -16431 0
c Var 'aux1560' order represents '2' with '16434'
-16432 16434 0
c Var 'aux1560' direct represents '2' with '16435'
16432 -16434 16435 0
-16435 16434 0
-16435 -16432 0
c Var 'aux1560' order represents '3' with '16436'
-16434 16436 0
c Var 'aux1560' direct represents '3' with '16437'
16434 -16436 16437 0
-16437 16436 0
-16437 -16434 0
c Var 'aux1560' direct represents '4' with '-16436'
16431 16433 16435 16437 -16436 0
c Encoding variable: aux1561 with domain: int(0..4) (representing constraint (aux1556 + aux1558))
c Both direct and order encoding.
c Var 'aux1561' order represents '0' with '16438'
c Var 'aux1561' direct represents '0' with '16438'
c Var 'aux1561' order represents '1' with '16439'
-16438 16439 0
c Var 'aux1561' direct represents '1' with '16440'
16438 -16439 16440 0
-16440 16439 0
-16440 -16438 0
c Var 'aux1561' order represents '2' with '16441'
-16439 16441 0
c Var 'aux1561' direct represents '2' with '16442'
16439 -16441 16442 0
-16442 16441 0
-16442 -16439 0
c Var 'aux1561' order represents '3' with '16443'
-16441 16443 0
c Var 'aux1561' direct represents '3' with '16444'
16441 -16443 16444 0
-16444 16443 0
-16444 -16441 0
c Var 'aux1561' direct represents '4' with '-16443'
16438 16440 16442 16444 -16443 0
c Encoding variable: aux1562 with domain: bool (representing constraint (shift(true, -1) + aux163))
c Var 'aux1562' direct represents '0' with '-16445'
c Var 'aux1562' direct represents '1' with '16445'
c Var 'aux1562' order represents '1' with '1'
c Var 'aux1562' order represents '0' with '-16445'
c Encoding variable: aux1563 with domain: int(0..2) (representing constraint (aux167 + aux1562))
c Both direct and order encoding.
c Var 'aux1563' order represents '0' with '16446'
c Var 'aux1563' direct represents '0' with '16446'
c Var 'aux1563' order represents '1' with '16447'
-16446 16447 0
c Var 'aux1563' direct represents '1' with '16448'
16446 -16447 16448 0
-16448 16447 0
-16448 -16446 0
c Var 'aux1563' direct represents '2' with '-16447'
16446 16448 -16447 0
c Encoding variable: aux1564 with domain: int(0..2) (representing constraint (aux160 + aux166))
c Both direct and order encoding.
c Var 'aux1564' order represents '0' with '16449'
c Var 'aux1564' direct represents '0' with '16449'
c Var 'aux1564' order represents '1' with '16450'
-16449 16450 0
c Var 'aux1564' direct represents '1' with '16451'
16449 -16450 16451 0
-16451 16450 0
-16451 -16449 0
c Var 'aux1564' direct represents '2' with '-16450'
16449 16451 -16450 0
c Encoding variable: aux1565 with domain: int(0..2) (representing constraint (aux165 + aux162))
c Both direct and order encoding.
c Var 'aux1565' order represents '0' with '16452'
c Var 'aux1565' direct represents '0' with '16452'
c Var 'aux1565' order represents '1' with '16453'
-16452 16453 0
c Var 'aux1565' direct represents '1' with '16454'
16452 -16453 16454 0
-16454 16453 0
-16454 -16452 0
c Var 'aux1565' direct represents '2' with '-16453'
16452 16454 -16453 0
c Encoding variable: aux1566 with domain: int(0..2) (representing constraint (aux164 + aux161))
c Both direct and order encoding.
c Var 'aux1566' order represents '0' with '16455'
c Var 'aux1566' direct represents '0' with '16455'
c Var 'aux1566' order represents '1' with '16456'
-16455 16456 0
c Var 'aux1566' direct represents '1' with '16457'
16455 -16456 16457 0
-16457 16456 0
-16457 -16455 0
c Var 'aux1566' direct represents '2' with '-16456'
16455 16457 -16456 0
c Encoding variable: aux1567 with domain: int(0..4) (representing constraint (aux1564 + aux1566))
c Both direct and order encoding.
c Var 'aux1567' order represents '0' with '16458'
c Var 'aux1567' direct represents '0' with '16458'
c Var 'aux1567' order represents '1' with '16459'
-16458 16459 0
c Var 'aux1567' direct represents '1' with '16460'
16458 -16459 16460 0
-16460 16459 0
-16460 -16458 0
c Var 'aux1567' order represents '2' with '16461'
-16459 16461 0
c Var 'aux1567' direct represents '2' with '16462'
16459 -16461 16462 0
-16462 16461 0
-16462 -16459 0
c Var 'aux1567' order represents '3' with '16463'
-16461 16463 0
c Var 'aux1567' direct represents '3' with '16464'
16461 -16463 16464 0
-16464 16463 0
-16464 -16461 0
c Var 'aux1567' direct represents '4' with '-16463'
16458 16460 16462 16464 -16463 0
c Encoding variable: aux1568 with domain: int(0..4) (representing constraint (aux1563 + aux1565))
c Both direct and order encoding.
c Var 'aux1568' order represents '0' with '16465'
c Var 'aux1568' direct represents '0' with '16465'
c Var 'aux1568' order represents '1' with '16466'
-16465 16466 0
c Var 'aux1568' direct represents '1' with '16467'
16465 -16466 16467 0
-16467 16466 0
-16467 -16465 0
c Var 'aux1568' order represents '2' with '16468'
-16466 16468 0
c Var 'aux1568' direct represents '2' with '16469'
16466 -16468 16469 0
-16469 16468 0
-16469 -16466 0
c Var 'aux1568' order represents '3' with '16470'
-16468 16470 0
c Var 'aux1568' direct represents '3' with '16471'
16468 -16470 16471 0
-16471 16470 0
-16471 -16468 0
c Var 'aux1568' direct represents '4' with '-16470'
16465 16467 16469 16471 -16470 0
c Encoding variable: aux1569 with domain: bool (representing constraint (shift(true, -1) + aux171))
c Var 'aux1569' direct represents '0' with '-16472'
c Var 'aux1569' direct represents '1' with '16472'
c Var 'aux1569' order represents '1' with '1'
c Var 'aux1569' order represents '0' with '-16472'
c Encoding variable: aux1570 with domain: int(0..2) (representing constraint (aux175 + aux1569))
c Both direct and order encoding.
c Var 'aux1570' order represents '0' with '16473'
c Var 'aux1570' direct represents '0' with '16473'
c Var 'aux1570' order represents '1' with '16474'
-16473 16474 0
c Var 'aux1570' direct represents '1' with '16475'
16473 -16474 16475 0
-16475 16474 0
-16475 -16473 0
c Var 'aux1570' direct represents '2' with '-16474'
16473 16475 -16474 0
c Encoding variable: aux1571 with domain: int(0..2) (representing constraint (aux168 + aux174))
c Both direct and order encoding.
c Var 'aux1571' order represents '0' with '16476'
c Var 'aux1571' direct represents '0' with '16476'
c Var 'aux1571' order represents '1' with '16477'
-16476 16477 0
c Var 'aux1571' direct represents '1' with '16478'
16476 -16477 16478 0
-16478 16477 0
-16478 -16476 0
c Var 'aux1571' direct represents '2' with '-16477'
16476 16478 -16477 0
c Encoding variable: aux1572 with domain: int(0..2) (representing constraint (aux173 + aux170))
c Both direct and order encoding.
c Var 'aux1572' order represents '0' with '16479'
c Var 'aux1572' direct represents '0' with '16479'
c Var 'aux1572' order represents '1' with '16480'
-16479 16480 0
c Var 'aux1572' direct represents '1' with '16481'
16479 -16480 16481 0
-16481 16480 0
-16481 -16479 0
c Var 'aux1572' direct represents '2' with '-16480'
16479 16481 -16480 0
c Encoding variable: aux1573 with domain: int(0..2) (representing constraint (aux172 + aux169))
c Both direct and order encoding.
c Var 'aux1573' order represents '0' with '16482'
c Var 'aux1573' direct represents '0' with '16482'
c Var 'aux1573' order represents '1' with '16483'
-16482 16483 0
c Var 'aux1573' direct represents '1' with '16484'
16482 -16483 16484 0
-16484 16483 0
-16484 -16482 0
c Var 'aux1573' direct represents '2' with '-16483'
16482 16484 -16483 0
c Encoding variable: aux1574 with domain: int(0..4) (representing constraint (aux1571 + aux1573))
c Both direct and order encoding.
c Var 'aux1574' order represents '0' with '16485'
c Var 'aux1574' direct represents '0' with '16485'
c Var 'aux1574' order represents '1' with '16486'
-16485 16486 0
c Var 'aux1574' direct represents '1' with '16487'
16485 -16486 16487 0
-16487 16486 0
-16487 -16485 0
c Var 'aux1574' order represents '2' with '16488'
-16486 16488 0
c Var 'aux1574' direct represents '2' with '16489'
16486 -16488 16489 0
-16489 16488 0
-16489 -16486 0
c Var 'aux1574' order represents '3' with '16490'
-16488 16490 0
c Var 'aux1574' direct represents '3' with '16491'
16488 -16490 16491 0
-16491 16490 0
-16491 -16488 0
c Var 'aux1574' direct represents '4' with '-16490'
16485 16487 16489 16491 -16490 0
c Encoding variable: aux1575 with domain: int(0..4) (representing constraint (aux1570 + aux1572))
c Both direct and order encoding.
c Var 'aux1575' order represents '0' with '16492'
c Var 'aux1575' direct represents '0' with '16492'
c Var 'aux1575' order represents '1' with '16493'
-16492 16493 0
c Var 'aux1575' direct represents '1' with '16494'
16492 -16493 16494 0
-16494 16493 0
-16494 -16492 0
c Var 'aux1575' order represents '2' with '16495'
-16493 16495 0
c Var 'aux1575' direct represents '2' with '16496'
16493 -16495 16496 0
-16496 16495 0
-16496 -16493 0
c Var 'aux1575' order represents '3' with '16497'
-16495 16497 0
c Var 'aux1575' direct represents '3' with '16498'
16495 -16497 16498 0
-16498 16497 0
-16498 -16495 0
c Var 'aux1575' direct represents '4' with '-16497'
16492 16494 16496 16498 -16497 0
c Encoding variable: aux1576 with domain: bool (representing constraint (shift(true, -1) + aux179))
c Var 'aux1576' direct represents '0' with '-16499'
c Var 'aux1576' direct represents '1' with '16499'
c Var 'aux1576' order represents '1' with '1'
c Var 'aux1576' order represents '0' with '-16499'
c Encoding variable: aux1577 with domain: int(0..2) (representing constraint (aux183 + aux1576))
c Both direct and order encoding.
c Var 'aux1577' order represents '0' with '16500'
c Var 'aux1577' direct represents '0' with '16500'
c Var 'aux1577' order represents '1' with '16501'
-16500 16501 0
c Var 'aux1577' direct represents '1' with '16502'
16500 -16501 16502 0
-16502 16501 0
-16502 -16500 0
c Var 'aux1577' direct represents '2' with '-16501'
16500 16502 -16501 0
c Encoding variable: aux1578 with domain: int(0..2) (representing constraint (aux176 + aux182))
c Both direct and order encoding.
c Var 'aux1578' order represents '0' with '16503'
c Var 'aux1578' direct represents '0' with '16503'
c Var 'aux1578' order represents '1' with '16504'
-16503 16504 0
c Var 'aux1578' direct represents '1' with '16505'
16503 -16504 16505 0
-16505 16504 0
-16505 -16503 0
c Var 'aux1578' direct represents '2' with '-16504'
16503 16505 -16504 0
c Encoding variable: aux1579 with domain: int(0..2) (representing constraint (aux181 + aux178))
c Both direct and order encoding.
c Var 'aux1579' order represents '0' with '16506'
c Var 'aux1579' direct represents '0' with '16506'
c Var 'aux1579' order represents '1' with '16507'
-16506 16507 0
c Var 'aux1579' direct represents '1' with '16508'
16506 -16507 16508 0
-16508 16507 0
-16508 -16506 0
c Var 'aux1579' direct represents '2' with '-16507'
16506 16508 -16507 0
c Encoding variable: aux1580 with domain: int(0..2) (representing constraint (aux180 + aux177))
c Both direct and order encoding.
c Var 'aux1580' order represents '0' with '16509'
c Var 'aux1580' direct represents '0' with '16509'
c Var 'aux1580' order represents '1' with '16510'
-16509 16510 0
c Var 'aux1580' direct represents '1' with '16511'
16509 -16510 16511 0
-16511 16510 0
-16511 -16509 0
c Var 'aux1580' direct represents '2' with '-16510'
16509 16511 -16510 0
c Encoding variable: aux1581 with domain: int(0..4) (representing constraint (aux1578 + aux1580))
c Both direct and order encoding.
c Var 'aux1581' order represents '0' with '16512'
c Var 'aux1581' direct represents '0' with '16512'
c Var 'aux1581' order represents '1' with '16513'
-16512 16513 0
c Var 'aux1581' direct represents '1' with '16514'
16512 -16513 16514 0
-16514 16513 0
-16514 -16512 0
c Var 'aux1581' order represents '2' with '16515'
-16513 16515 0
c Var 'aux1581' direct represents '2' with '16516'
16513 -16515 16516 0
-16516 16515 0
-16516 -16513 0
c Var 'aux1581' order represents '3' with '16517'
-16515 16517 0
c Var 'aux1581' direct represents '3' with '16518'
16515 -16517 16518 0
-16518 16517 0
-16518 -16515 0
c Var 'aux1581' direct represents '4' with '-16517'
16512 16514 16516 16518 -16517 0
c Encoding variable: aux1582 with domain: int(0..4) (representing constraint (aux1577 + aux1579))
c Both direct and order encoding.
c Var 'aux1582' order represents '0' with '16519'
c Var 'aux1582' direct represents '0' with '16519'
c Var 'aux1582' order represents '1' with '16520'
-16519 16520 0
c Var 'aux1582' direct represents '1' with '16521'
16519 -16520 16521 0
-16521 16520 0
-16521 -16519 0
c Var 'aux1582' order represents '2' with '16522'
-16520 16522 0
c Var 'aux1582' direct represents '2' with '16523'
16520 -16522 16523 0
-16523 16522 0
-16523 -16520 0
c Var 'aux1582' order represents '3' with '16524'
-16522 16524 0
c Var 'aux1582' direct represents '3' with '16525'
16522 -16524 16525 0
-16525 16524 0
-16525 -16522 0
c Var 'aux1582' direct represents '4' with '-16524'
16519 16521 16523 16525 -16524 0
c Encoding variable: aux1583 with domain: bool (representing constraint (shift(true, -1) + aux187))
c Var 'aux1583' direct represents '0' with '-16526'
c Var 'aux1583' direct represents '1' with '16526'
c Var 'aux1583' order represents '1' with '1'
c Var 'aux1583' order represents '0' with '-16526'
c Encoding variable: aux1584 with domain: int(0..2) (representing constraint (aux191 + aux1583))
c Both direct and order encoding.
c Var 'aux1584' order represents '0' with '16527'
c Var 'aux1584' direct represents '0' with '16527'
c Var 'aux1584' order represents '1' with '16528'
-16527 16528 0
c Var 'aux1584' direct represents '1' with '16529'
16527 -16528 16529 0
-16529 16528 0
-16529 -16527 0
c Var 'aux1584' direct represents '2' with '-16528'
16527 16529 -16528 0
c Encoding variable: aux1585 with domain: int(0..2) (representing constraint (aux184 + aux190))
c Both direct and order encoding.
c Var 'aux1585' order represents '0' with '16530'
c Var 'aux1585' direct represents '0' with '16530'
c Var 'aux1585' order represents '1' with '16531'
-16530 16531 0
c Var 'aux1585' direct represents '1' with '16532'
16530 -16531 16532 0
-16532 16531 0
-16532 -16530 0
c Var 'aux1585' direct represents '2' with '-16531'
16530 16532 -16531 0
c Encoding variable: aux1586 with domain: int(0..2) (representing constraint (aux189 + aux186))
c Both direct and order encoding.
c Var 'aux1586' order represents '0' with '16533'
c Var 'aux1586' direct represents '0' with '16533'
c Var 'aux1586' order represents '1' with '16534'
-16533 16534 0
c Var 'aux1586' direct represents '1' with '16535'
16533 -16534 16535 0
-16535 16534 0
-16535 -16533 0
c Var 'aux1586' direct represents '2' with '-16534'
16533 16535 -16534 0
c Encoding variable: aux1587 with domain: int(0..2) (representing constraint (aux188 + aux185))
c Both direct and order encoding.
c Var 'aux1587' order represents '0' with '16536'
c Var 'aux1587' direct represents '0' with '16536'
c Var 'aux1587' order represents '1' with '16537'
-16536 16537 0
c Var 'aux1587' direct represents '1' with '16538'
16536 -16537 16538 0
-16538 16537 0
-16538 -16536 0
c Var 'aux1587' direct represents '2' with '-16537'
16536 16538 -16537 0
c Encoding variable: aux1588 with domain: int(0..4) (representing constraint (aux1585 + aux1587))
c Both direct and order encoding.
c Var 'aux1588' order represents '0' with '16539'
c Var 'aux1588' direct represents '0' with '16539'
c Var 'aux1588' order represents '1' with '16540'
-16539 16540 0
c Var 'aux1588' direct represents '1' with '16541'
16539 -16540 16541 0
-16541 16540 0
-16541 -16539 0
c Var 'aux1588' order represents '2' with '16542'
-16540 16542 0
c Var 'aux1588' direct represents '2' with '16543'
16540 -16542 16543 0
-16543 16542 0
-16543 -16540 0
c Var 'aux1588' order represents '3' with '16544'
-16542 16544 0
c Var 'aux1588' direct represents '3' with '16545'
16542 -16544 16545 0
-16545 16544 0
-16545 -16542 0
c Var 'aux1588' direct represents '4' with '-16544'
16539 16541 16543 16545 -16544 0
c Encoding variable: aux1589 with domain: int(0..4) (representing constraint (aux1584 + aux1586))
c Both direct and order encoding.
c Var 'aux1589' order represents '0' with '16546'
c Var 'aux1589' direct represents '0' with '16546'
c Var 'aux1589' order represents '1' with '16547'
-16546 16547 0
c Var 'aux1589' direct represents '1' with '16548'
16546 -16547 16548 0
-16548 16547 0
-16548 -16546 0
c Var 'aux1589' order represents '2' with '16549'
-16547 16549 0
c Var 'aux1589' direct represents '2' with '16550'
16547 -16549 16550 0
-16550 16549 0
-16550 -16547 0
c Var 'aux1589' order represents '3' with '16551'
-16549 16551 0
c Var 'aux1589' direct represents '3' with '16552'
16549 -16551 16552 0
-16552 16551 0
-16552 -16549 0
c Var 'aux1589' direct represents '4' with '-16551'
16546 16548 16550 16552 -16551 0
c Encoding variable: aux1590 with domain: bool (representing constraint (shift(true, -1) + aux195))
c Var 'aux1590' direct represents '0' with '-16553'
c Var 'aux1590' direct represents '1' with '16553'
c Var 'aux1590' order represents '1' with '1'
c Var 'aux1590' order represents '0' with '-16553'
c Encoding variable: aux1591 with domain: int(0..2) (representing constraint (aux199 + aux1590))
c Both direct and order encoding.
c Var 'aux1591' order represents '0' with '16554'
c Var 'aux1591' direct represents '0' with '16554'
c Var 'aux1591' order represents '1' with '16555'
-16554 16555 0
c Var 'aux1591' direct represents '1' with '16556'
16554 -16555 16556 0
-16556 16555 0
-16556 -16554 0
c Var 'aux1591' direct represents '2' with '-16555'
16554 16556 -16555 0
c Encoding variable: aux1592 with domain: int(0..2) (representing constraint (aux192 + aux198))
c Both direct and order encoding.
c Var 'aux1592' order represents '0' with '16557'
c Var 'aux1592' direct represents '0' with '16557'
c Var 'aux1592' order represents '1' with '16558'
-16557 16558 0
c Var 'aux1592' direct represents '1' with '16559'
16557 -16558 16559 0
-16559 16558 0
-16559 -16557 0
c Var 'aux1592' direct represents '2' with '-16558'
16557 16559 -16558 0
c Encoding variable: aux1593 with domain: int(0..2) (representing constraint (aux197 + aux194))
c Both direct and order encoding.
c Var 'aux1593' order represents '0' with '16560'
c Var 'aux1593' direct represents '0' with '16560'
c Var 'aux1593' order represents '1' with '16561'
-16560 16561 0
c Var 'aux1593' direct represents '1' with '16562'
16560 -16561 16562 0
-16562 16561 0
-16562 -16560 0
c Var 'aux1593' direct represents '2' with '-16561'
16560 16562 -16561 0
c Encoding variable: aux1594 with domain: int(0..2) (representing constraint (aux196 + aux193))
c Both direct and order encoding.
c Var 'aux1594' order represents '0' with '16563'
c Var 'aux1594' direct represents '0' with '16563'
c Var 'aux1594' order represents '1' with '16564'
-16563 16564 0
c Var 'aux1594' direct represents '1' with '16565'
16563 -16564 16565 0
-16565 16564 0
-16565 -16563 0
c Var 'aux1594' direct represents '2' with '-16564'
16563 16565 -16564 0
c Encoding variable: aux1595 with domain: int(0..4) (representing constraint (aux1592 + aux1594))
c Both direct and order encoding.
c Var 'aux1595' order represents '0' with '16566'
c Var 'aux1595' direct represents '0' with '16566'
c Var 'aux1595' order represents '1' with '16567'
-16566 16567 0
c Var 'aux1595' direct represents '1' with '16568'
16566 -16567 16568 0
-16568 16567 0
-16568 -16566 0
c Var 'aux1595' order represents '2' with '16569'
-16567 16569 0
c Var 'aux1595' direct represents '2' with '16570'
16567 -16569 16570 0
-16570 16569 0
-16570 -16567 0
c Var 'aux1595' order represents '3' with '16571'
-16569 16571 0
c Var 'aux1595' direct represents '3' with '16572'
16569 -16571 16572 0
-16572 16571 0
-16572 -16569 0
c Var 'aux1595' direct represents '4' with '-16571'
16566 16568 16570 16572 -16571 0
c Encoding variable: aux1596 with domain: int(0..4) (representing constraint (aux1591 + aux1593))
c Both direct and order encoding.
c Var 'aux1596' order represents '0' with '16573'
c Var 'aux1596' direct represents '0' with '16573'
c Var 'aux1596' order represents '1' with '16574'
-16573 16574 0
c Var 'aux1596' direct represents '1' with '16575'
16573 -16574 16575 0
-16575 16574 0
-16575 -16573 0
c Var 'aux1596' order represents '2' with '16576'
-16574 16576 0
c Var 'aux1596' direct represents '2' with '16577'
16574 -16576 16577 0
-16577 16576 0
-16577 -16574 0
c Var 'aux1596' order represents '3' with '16578'
-16576 16578 0
c Var 'aux1596' direct represents '3' with '16579'
16576 -16578 16579 0
-16579 16578 0
-16579 -16576 0
c Var 'aux1596' direct represents '4' with '-16578'
16573 16575 16577 16579 -16578 0
c Encoding variable: aux1597 with domain: bool (representing constraint (shift(true, -1) + aux203))
c Var 'aux1597' direct represents '0' with '-16580'
c Var 'aux1597' direct represents '1' with '16580'
c Var 'aux1597' order represents '1' with '1'
c Var 'aux1597' order represents '0' with '-16580'
c Encoding variable: aux1598 with domain: int(0..2) (representing constraint (aux207 + aux1597))
c Both direct and order encoding.
c Var 'aux1598' order represents '0' with '16581'
c Var 'aux1598' direct represents '0' with '16581'
c Var 'aux1598' order represents '1' with '16582'
-16581 16582 0
c Var 'aux1598' direct represents '1' with '16583'
16581 -16582 16583 0
-16583 16582 0
-16583 -16581 0
c Var 'aux1598' direct represents '2' with '-16582'
16581 16583 -16582 0
c Encoding variable: aux1599 with domain: int(0..2) (representing constraint (aux200 + aux206))
c Both direct and order encoding.
c Var 'aux1599' order represents '0' with '16584'
c Var 'aux1599' direct represents '0' with '16584'
c Var 'aux1599' order represents '1' with '16585'
-16584 16585 0
c Var 'aux1599' direct represents '1' with '16586'
16584 -16585 16586 0
-16586 16585 0
-16586 -16584 0
c Var 'aux1599' direct represents '2' with '-16585'
16584 16586 -16585 0
c Encoding variable: aux1600 with domain: int(0..2) (representing constraint (aux205 + aux202))
c Both direct and order encoding.
c Var 'aux1600' order represents '0' with '16587'
c Var 'aux1600' direct represents '0' with '16587'
c Var 'aux1600' order represents '1' with '16588'
-16587 16588 0
c Var 'aux1600' direct represents '1' with '16589'
16587 -16588 16589 0
-16589 16588 0
-16589 -16587 0
c Var 'aux1600' direct represents '2' with '-16588'
16587 16589 -16588 0
c Encoding variable: aux1601 with domain: int(0..2) (representing constraint (aux204 + aux201))
c Both direct and order encoding.
c Var 'aux1601' order represents '0' with '16590'
c Var 'aux1601' direct represents '0' with '16590'
c Var 'aux1601' order represents '1' with '16591'
-16590 16591 0
c Var 'aux1601' direct represents '1' with '16592'
16590 -16591 16592 0
-16592 16591 0
-16592 -16590 0
c Var 'aux1601' direct represents '2' with '-16591'
16590 16592 -16591 0
c Encoding variable: aux1602 with domain: int(0..4) (representing constraint (aux1599 + aux1601))
c Both direct and order encoding.
c Var 'aux1602' order represents '0' with '16593'
c Var 'aux1602' direct represents '0' with '16593'
c Var 'aux1602' order represents '1' with '16594'
-16593 16594 0
c Var 'aux1602' direct represents '1' with '16595'
16593 -16594 16595 0
-16595 16594 0
-16595 -16593 0
c Var 'aux1602' order represents '2' with '16596'
-16594 16596 0
c Var 'aux1602' direct represents '2' with '16597'
16594 -16596 16597 0
-16597 16596 0
-16597 -16594 0
c Var 'aux1602' order represents '3' with '16598'
-16596 16598 0
c Var 'aux1602' direct represents '3' with '16599'
16596 -16598 16599 0
-16599 16598 0
-16599 -16596 0
c Var 'aux1602' direct represents '4' with '-16598'
16593 16595 16597 16599 -16598 0
c Encoding variable: aux1603 with domain: int(0..4) (representing constraint (aux1598 + aux1600))
c Both direct and order encoding.
c Var 'aux1603' order represents '0' with '16600'
c Var 'aux1603' direct represents '0' with '16600'
c Var 'aux1603' order represents '1' with '16601'
-16600 16601 0
c Var 'aux1603' direct represents '1' with '16602'
16600 -16601 16602 0
-16602 16601 0
-16602 -16600 0
c Var 'aux1603' order represents '2' with '16603'
-16601 16603 0
c Var 'aux1603' direct represents '2' with '16604'
16601 -16603 16604 0
-16604 16603 0
-16604 -16601 0
c Var 'aux1603' order represents '3' with '16605'
-16603 16605 0
c Var 'aux1603' direct represents '3' with '16606'
16603 -16605 16606 0
-16606 16605 0
-16606 -16603 0
c Var 'aux1603' direct represents '4' with '-16605'
16600 16602 16604 16606 -16605 0
c Encoding variable: aux1604 with domain: bool (representing constraint (shift(true, -1) + aux211))
c Var 'aux1604' direct represents '0' with '-16607'
c Var 'aux1604' direct represents '1' with '16607'
c Var 'aux1604' order represents '1' with '1'
c Var 'aux1604' order represents '0' with '-16607'
c Encoding variable: aux1605 with domain: int(0..2) (representing constraint (aux215 + aux1604))
c Both direct and order encoding.
c Var 'aux1605' order represents '0' with '16608'
c Var 'aux1605' direct represents '0' with '16608'
c Var 'aux1605' order represents '1' with '16609'
-16608 16609 0
c Var 'aux1605' direct represents '1' with '16610'
16608 -16609 16610 0
-16610 16609 0
-16610 -16608 0
c Var 'aux1605' direct represents '2' with '-16609'
16608 16610 -16609 0
c Encoding variable: aux1606 with domain: int(0..2) (representing constraint (aux208 + aux214))
c Both direct and order encoding.
c Var 'aux1606' order represents '0' with '16611'
c Var 'aux1606' direct represents '0' with '16611'
c Var 'aux1606' order represents '1' with '16612'
-16611 16612 0
c Var 'aux1606' direct represents '1' with '16613'
16611 -16612 16613 0
-16613 16612 0
-16613 -16611 0
c Var 'aux1606' direct represents '2' with '-16612'
16611 16613 -16612 0
c Encoding variable: aux1607 with domain: int(0..2) (representing constraint (aux213 + aux210))
c Both direct and order encoding.
c Var 'aux1607' order represents '0' with '16614'
c Var 'aux1607' direct represents '0' with '16614'
c Var 'aux1607' order represents '1' with '16615'
-16614 16615 0
c Var 'aux1607' direct represents '1' with '16616'
16614 -16615 16616 0
-16616 16615 0
-16616 -16614 0
c Var 'aux1607' direct represents '2' with '-16615'
16614 16616 -16615 0
c Encoding variable: aux1608 with domain: int(0..2) (representing constraint (aux212 + aux209))
c Both direct and order encoding.
c Var 'aux1608' order represents '0' with '16617'
c Var 'aux1608' direct represents '0' with '16617'
c Var 'aux1608' order represents '1' with '16618'
-16617 16618 0
c Var 'aux1608' direct represents '1' with '16619'
16617 -16618 16619 0
-16619 16618 0
-16619 -16617 0
c Var 'aux1608' direct represents '2' with '-16618'
16617 16619 -16618 0
c Encoding variable: aux1609 with domain: int(0..4) (representing constraint (aux1606 + aux1608))
c Both direct and order encoding.
c Var 'aux1609' order represents '0' with '16620'
c Var 'aux1609' direct represents '0' with '16620'
c Var 'aux1609' order represents '1' with '16621'
-16620 16621 0
c Var 'aux1609' direct represents '1' with '16622'
16620 -16621 16622 0
-16622 16621 0
-16622 -16620 0
c Var 'aux1609' order represents '2' with '16623'
-16621 16623 0
c Var 'aux1609' direct represents '2' with '16624'
16621 -16623 16624 0
-16624 16623 0
-16624 -16621 0
c Var 'aux1609' order represents '3' with '16625'
-16623 16625 0
c Var 'aux1609' direct represents '3' with '16626'
16623 -16625 16626 0
-16626 16625 0
-16626 -16623 0
c Var 'aux1609' direct represents '4' with '-16625'
16620 16622 16624 16626 -16625 0
c Encoding variable: aux1610 with domain: int(0..4) (representing constraint (aux1605 + aux1607))
c Both direct and order encoding.
c Var 'aux1610' order represents '0' with '16627'
c Var 'aux1610' direct represents '0' with '16627'
c Var 'aux1610' order represents '1' with '16628'
-16627 16628 0
c Var 'aux1610' direct represents '1' with '16629'
16627 -16628 16629 0
-16629 16628 0
-16629 -16627 0
c Var 'aux1610' order represents '2' with '16630'
-16628 16630 0
c Var 'aux1610' direct represents '2' with '16631'
16628 -16630 16631 0
-16631 16630 0
-16631 -16628 0
c Var 'aux1610' order represents '3' with '16632'
-16630 16632 0
c Var 'aux1610' direct represents '3' with '16633'
16630 -16632 16633 0
-16633 16632 0
-16633 -16630 0
c Var 'aux1610' direct represents '4' with '-16632'
16627 16629 16631 16633 -16632 0
c Encoding variable: aux1611 with domain: bool (representing constraint (shift(true, -1) + aux220))
c Var 'aux1611' direct represents '0' with '-16634'
c Var 'aux1611' direct represents '1' with '16634'
c Var 'aux1611' order represents '1' with '1'
c Var 'aux1611' order represents '0' with '-16634'
c Encoding variable: aux1612 with domain: int(0..2) (representing constraint (aux216 + aux1611))
c Both direct and order encoding.
c Var 'aux1612' order represents '0' with '16635'
c Var 'aux1612' direct represents '0' with '16635'
c Var 'aux1612' order represents '1' with '16636'
-16635 16636 0
c Var 'aux1612' direct represents '1' with '16637'
16635 -16636 16637 0
-16637 16636 0
-16637 -16635 0
c Var 'aux1612' direct represents '2' with '-16636'
16635 16637 -16636 0
c Encoding variable: aux1613 with domain: int(0..2) (representing constraint (aux219 + aux223))
c Both direct and order encoding.
c Var 'aux1613' order represents '0' with '16638'
c Var 'aux1613' direct represents '0' with '16638'
c Var 'aux1613' order represents '1' with '16639'
-16638 16639 0
c Var 'aux1613' direct represents '1' with '16640'
16638 -16639 16640 0
-16640 16639 0
-16640 -16638 0
c Var 'aux1613' direct represents '2' with '-16639'
16638 16640 -16639 0
c Encoding variable: aux1614 with domain: int(0..2) (representing constraint (aux222 + aux217))
c Both direct and order encoding.
c Var 'aux1614' order represents '0' with '16641'
c Var 'aux1614' direct represents '0' with '16641'
c Var 'aux1614' order represents '1' with '16642'
-16641 16642 0
c Var 'aux1614' direct represents '1' with '16643'
16641 -16642 16643 0
-16643 16642 0
-16643 -16641 0
c Var 'aux1614' direct represents '2' with '-16642'
16641 16643 -16642 0
c Encoding variable: aux1615 with domain: int(0..2) (representing constraint (aux221 + aux218))
c Both direct and order encoding.
c Var 'aux1615' order represents '0' with '16644'
c Var 'aux1615' direct represents '0' with '16644'
c Var 'aux1615' order represents '1' with '16645'
-16644 16645 0
c Var 'aux1615' direct represents '1' with '16646'
16644 -16645 16646 0
-16646 16645 0
-16646 -16644 0
c Var 'aux1615' direct represents '2' with '-16645'
16644 16646 -16645 0
c Encoding variable: aux1616 with domain: int(0..4) (representing constraint (aux1613 + aux1615))
c Both direct and order encoding.
c Var 'aux1616' order represents '0' with '16647'
c Var 'aux1616' direct represents '0' with '16647'
c Var 'aux1616' order represents '1' with '16648'
-16647 16648 0
c Var 'aux1616' direct represents '1' with '16649'
16647 -16648 16649 0
-16649 16648 0
-16649 -16647 0
c Var 'aux1616' order represents '2' with '16650'
-16648 16650 0
c Var 'aux1616' direct represents '2' with '16651'
16648 -16650 16651 0
-16651 16650 0
-16651 -16648 0
c Var 'aux1616' order represents '3' with '16652'
-16650 16652 0
c Var 'aux1616' direct represents '3' with '16653'
16650 -16652 16653 0
-16653 16652 0
-16653 -16650 0
c Var 'aux1616' direct represents '4' with '-16652'
16647 16649 16651 16653 -16652 0
c Encoding variable: aux1617 with domain: int(0..4) (representing constraint (aux1612 + aux1614))
c Both direct and order encoding.
c Var 'aux1617' order represents '0' with '16654'
c Var 'aux1617' direct represents '0' with '16654'
c Var 'aux1617' order represents '1' with '16655'
-16654 16655 0
c Var 'aux1617' direct represents '1' with '16656'
16654 -16655 16656 0
-16656 16655 0
-16656 -16654 0
c Var 'aux1617' order represents '2' with '16657'
-16655 16657 0
c Var 'aux1617' direct represents '2' with '16658'
16655 -16657 16658 0
-16658 16657 0
-16658 -16655 0
c Var 'aux1617' order represents '3' with '16659'
-16657 16659 0
c Var 'aux1617' direct represents '3' with '16660'
16657 -16659 16660 0
-16660 16659 0
-16660 -16657 0
c Var 'aux1617' direct represents '4' with '-16659'
16654 16656 16658 16660 -16659 0
c Encoding variable: aux1618 with domain: bool (representing constraint (shift(true, -1) + aux228))
c Var 'aux1618' direct represents '0' with '-16661'
c Var 'aux1618' direct represents '1' with '16661'
c Var 'aux1618' order represents '1' with '1'
c Var 'aux1618' order represents '0' with '-16661'
c Encoding variable: aux1619 with domain: int(0..2) (representing constraint (aux224 + aux1618))
c Both direct and order encoding.
c Var 'aux1619' order represents '0' with '16662'
c Var 'aux1619' direct represents '0' with '16662'
c Var 'aux1619' order represents '1' with '16663'
-16662 16663 0
c Var 'aux1619' direct represents '1' with '16664'
16662 -16663 16664 0
-16664 16663 0
-16664 -16662 0
c Var 'aux1619' direct represents '2' with '-16663'
16662 16664 -16663 0
c Encoding variable: aux1620 with domain: int(0..2) (representing constraint (aux227 + aux231))
c Both direct and order encoding.
c Var 'aux1620' order represents '0' with '16665'
c Var 'aux1620' direct represents '0' with '16665'
c Var 'aux1620' order represents '1' with '16666'
-16665 16666 0
c Var 'aux1620' direct represents '1' with '16667'
16665 -16666 16667 0
-16667 16666 0
-16667 -16665 0
c Var 'aux1620' direct represents '2' with '-16666'
16665 16667 -16666 0
c Encoding variable: aux1621 with domain: int(0..2) (representing constraint (aux230 + aux225))
c Both direct and order encoding.
c Var 'aux1621' order represents '0' with '16668'
c Var 'aux1621' direct represents '0' with '16668'
c Var 'aux1621' order represents '1' with '16669'
-16668 16669 0
c Var 'aux1621' direct represents '1' with '16670'
16668 -16669 16670 0
-16670 16669 0
-16670 -16668 0
c Var 'aux1621' direct represents '2' with '-16669'
16668 16670 -16669 0
c Encoding variable: aux1622 with domain: int(0..2) (representing constraint (aux229 + aux226))
c Both direct and order encoding.
c Var 'aux1622' order represents '0' with '16671'
c Var 'aux1622' direct represents '0' with '16671'
c Var 'aux1622' order represents '1' with '16672'
-16671 16672 0
c Var 'aux1622' direct represents '1' with '16673'
16671 -16672 16673 0
-16673 16672 0
-16673 -16671 0
c Var 'aux1622' direct represents '2' with '-16672'
16671 16673 -16672 0
c Encoding variable: aux1623 with domain: int(0..4) (representing constraint (aux1620 + aux1622))
c Both direct and order encoding.
c Var 'aux1623' order represents '0' with '16674'
c Var 'aux1623' direct represents '0' with '16674'
c Var 'aux1623' order represents '1' with '16675'
-16674 16675 0
c Var 'aux1623' direct represents '1' with '16676'
16674 -16675 16676 0
-16676 16675 0
-16676 -16674 0
c Var 'aux1623' order represents '2' with '16677'
-16675 16677 0
c Var 'aux1623' direct represents '2' with '16678'
16675 -16677 16678 0
-16678 16677 0
-16678 -16675 0
c Var 'aux1623' order represents '3' with '16679'
-16677 16679 0
c Var 'aux1623' direct represents '3' with '16680'
16677 -16679 16680 0
-16680 16679 0
-16680 -16677 0
c Var 'aux1623' direct represents '4' with '-16679'
16674 16676 16678 16680 -16679 0
c Encoding variable: aux1624 with domain: int(0..4) (representing constraint (aux1619 + aux1621))
c Both direct and order encoding.
c Var 'aux1624' order represents '0' with '16681'
c Var 'aux1624' direct represents '0' with '16681'
c Var 'aux1624' order represents '1' with '16682'
-16681 16682 0
c Var 'aux1624' direct represents '1' with '16683'
16681 -16682 16683 0
-16683 16682 0
-16683 -16681 0
c Var 'aux1624' order represents '2' with '16684'
-16682 16684 0
c Var 'aux1624' direct represents '2' with '16685'
16682 -16684 16685 0
-16685 16684 0
-16685 -16682 0
c Var 'aux1624' order represents '3' with '16686'
-16684 16686 0
c Var 'aux1624' direct represents '3' with '16687'
16684 -16686 16687 0
-16687 16686 0
-16687 -16684 0
c Var 'aux1624' direct represents '4' with '-16686'
16681 16683 16685 16687 -16686 0
c Encoding variable: aux1625 with domain: bool (representing constraint (shift(true, -1) + aux236))
c Var 'aux1625' direct represents '0' with '-16688'
c Var 'aux1625' direct represents '1' with '16688'
c Var 'aux1625' order represents '1' with '1'
c Var 'aux1625' order represents '0' with '-16688'
c Encoding variable: aux1626 with domain: int(0..2) (representing constraint (aux232 + aux1625))
c Both direct and order encoding.
c Var 'aux1626' order represents '0' with '16689'
c Var 'aux1626' direct represents '0' with '16689'
c Var 'aux1626' order represents '1' with '16690'
-16689 16690 0
c Var 'aux1626' direct represents '1' with '16691'
16689 -16690 16691 0
-16691 16690 0
-16691 -16689 0
c Var 'aux1626' direct represents '2' with '-16690'
16689 16691 -16690 0
c Encoding variable: aux1627 with domain: int(0..2) (representing constraint (aux235 + aux239))
c Both direct and order encoding.
c Var 'aux1627' order represents '0' with '16692'
c Var 'aux1627' direct represents '0' with '16692'
c Var 'aux1627' order represents '1' with '16693'
-16692 16693 0
c Var 'aux1627' direct represents '1' with '16694'
16692 -16693 16694 0
-16694 16693 0
-16694 -16692 0
c Var 'aux1627' direct represents '2' with '-16693'
16692 16694 -16693 0
c Encoding variable: aux1628 with domain: int(0..2) (representing constraint (aux238 + aux233))
c Both direct and order encoding.
c Var 'aux1628' order represents '0' with '16695'
c Var 'aux1628' direct represents '0' with '16695'
c Var 'aux1628' order represents '1' with '16696'
-16695 16696 0
c Var 'aux1628' direct represents '1' with '16697'
16695 -16696 16697 0
-16697 16696 0
-16697 -16695 0
c Var 'aux1628' direct represents '2' with '-16696'
16695 16697 -16696 0
c Encoding variable: aux1629 with domain: int(0..2) (representing constraint (aux237 + aux234))
c Both direct and order encoding.
c Var 'aux1629' order represents '0' with '16698'
c Var 'aux1629' direct represents '0' with '16698'
c Var 'aux1629' order represents '1' with '16699'
-16698 16699 0
c Var 'aux1629' direct represents '1' with '16700'
16698 -16699 16700 0
-16700 16699 0
-16700 -16698 0
c Var 'aux1629' direct represents '2' with '-16699'
16698 16700 -16699 0
c Encoding variable: aux1630 with domain: int(0..4) (representing constraint (aux1627 + aux1629))
c Both direct and order encoding.
c Var 'aux1630' order represents '0' with '16701'
c Var 'aux1630' direct represents '0' with '16701'
c Var 'aux1630' order represents '1' with '16702'
-16701 16702 0
c Var 'aux1630' direct represents '1' with '16703'
16701 -16702 16703 0
-16703 16702 0
-16703 -16701 0
c Var 'aux1630' order represents '2' with '16704'
-16702 16704 0
c Var 'aux1630' direct represents '2' with '16705'
16702 -16704 16705 0
-16705 16704 0
-16705 -16702 0
c Var 'aux1630' order represents '3' with '16706'
-16704 16706 0
c Var 'aux1630' direct represents '3' with '16707'
16704 -16706 16707 0
-16707 16706 0
-16707 -16704 0
c Var 'aux1630' direct represents '4' with '-16706'
16701 16703 16705 16707 -16706 0
c Encoding variable: aux1631 with domain: int(0..4) (representing constraint (aux1626 + aux1628))
c Both direct and order encoding.
c Var 'aux1631' order represents '0' with '16708'
c Var 'aux1631' direct represents '0' with '16708'
c Var 'aux1631' order represents '1' with '16709'
-16708 16709 0
c Var 'aux1631' direct represents '1' with '16710'
16708 -16709 16710 0
-16710 16709 0
-16710 -16708 0
c Var 'aux1631' order represents '2' with '16711'
-16709 16711 0
c Var 'aux1631' direct represents '2' with '16712'
16709 -16711 16712 0
-16712 16711 0
-16712 -16709 0
c Var 'aux1631' order represents '3' with '16713'
-16711 16713 0
c Var 'aux1631' direct represents '3' with '16714'
16711 -16713 16714 0
-16714 16713 0
-16714 -16711 0
c Var 'aux1631' direct represents '4' with '-16713'
16708 16710 16712 16714 -16713 0
c Encoding variable: aux1632 with domain: bool (representing constraint (shift(true, -1) + aux244))
c Var 'aux1632' direct represents '0' with '-16715'
c Var 'aux1632' direct represents '1' with '16715'
c Var 'aux1632' order represents '1' with '1'
c Var 'aux1632' order represents '0' with '-16715'
c Encoding variable: aux1633 with domain: int(0..2) (representing constraint (aux240 + aux1632))
c Both direct and order encoding.
c Var 'aux1633' order represents '0' with '16716'
c Var 'aux1633' direct represents '0' with '16716'
c Var 'aux1633' order represents '1' with '16717'
-16716 16717 0
c Var 'aux1633' direct represents '1' with '16718'
16716 -16717 16718 0
-16718 16717 0
-16718 -16716 0
c Var 'aux1633' direct represents '2' with '-16717'
16716 16718 -16717 0
c Encoding variable: aux1634 with domain: int(0..2) (representing constraint (aux243 + aux247))
c Both direct and order encoding.
c Var 'aux1634' order represents '0' with '16719'
c Var 'aux1634' direct represents '0' with '16719'
c Var 'aux1634' order represents '1' with '16720'
-16719 16720 0
c Var 'aux1634' direct represents '1' with '16721'
16719 -16720 16721 0
-16721 16720 0
-16721 -16719 0
c Var 'aux1634' direct represents '2' with '-16720'
16719 16721 -16720 0
c Encoding variable: aux1635 with domain: int(0..2) (representing constraint (aux246 + aux241))
c Both direct and order encoding.
c Var 'aux1635' order represents '0' with '16722'
c Var 'aux1635' direct represents '0' with '16722'
c Var 'aux1635' order represents '1' with '16723'
-16722 16723 0
c Var 'aux1635' direct represents '1' with '16724'
16722 -16723 16724 0
-16724 16723 0
-16724 -16722 0
c Var 'aux1635' direct represents '2' with '-16723'
16722 16724 -16723 0
c Encoding variable: aux1636 with domain: int(0..2) (representing constraint (aux245 + aux242))
c Both direct and order encoding.
c Var 'aux1636' order represents '0' with '16725'
c Var 'aux1636' direct represents '0' with '16725'
c Var 'aux1636' order represents '1' with '16726'
-16725 16726 0
c Var 'aux1636' direct represents '1' with '16727'
16725 -16726 16727 0
-16727 16726 0
-16727 -16725 0
c Var 'aux1636' direct represents '2' with '-16726'
16725 16727 -16726 0
c Encoding variable: aux1637 with domain: int(0..4) (representing constraint (aux1634 + aux1636))
c Both direct and order encoding.
c Var 'aux1637' order represents '0' with '16728'
c Var 'aux1637' direct represents '0' with '16728'
c Var 'aux1637' order represents '1' with '16729'
-16728 16729 0
c Var 'aux1637' direct represents '1' with '16730'
16728 -16729 16730 0
-16730 16729 0
-16730 -16728 0
c Var 'aux1637' order represents '2' with '16731'
-16729 16731 0
c Var 'aux1637' direct represents '2' with '16732'
16729 -16731 16732 0
-16732 16731 0
-16732 -16729 0
c Var 'aux1637' order represents '3' with '16733'
-16731 16733 0
c Var 'aux1637' direct represents '3' with '16734'
16731 -16733 16734 0
-16734 16733 0
-16734 -16731 0
c Var 'aux1637' direct represents '4' with '-16733'
16728 16730 16732 16734 -16733 0
c Encoding variable: aux1638 with domain: int(0..4) (representing constraint (aux1633 + aux1635))
c Both direct and order encoding.
c Var 'aux1638' order represents '0' with '16735'
c Var 'aux1638' direct represents '0' with '16735'
c Var 'aux1638' order represents '1' with '16736'
-16735 16736 0
c Var 'aux1638' direct represents '1' with '16737'
16735 -16736 16737 0
-16737 16736 0
-16737 -16735 0
c Var 'aux1638' order represents '2' with '16738'
-16736 16738 0
c Var 'aux1638' direct represents '2' with '16739'
16736 -16738 16739 0
-16739 16738 0
-16739 -16736 0
c Var 'aux1638' order represents '3' with '16740'
-16738 16740 0
c Var 'aux1638' direct represents '3' with '16741'
16738 -16740 16741 0
-16741 16740 0
-16741 -16738 0
c Var 'aux1638' direct represents '4' with '-16740'
16735 16737 16739 16741 -16740 0
c Encoding variable: aux1639 with domain: bool (representing constraint (shift(true, -1) + aux252))
c Var 'aux1639' direct represents '0' with '-16742'
c Var 'aux1639' direct represents '1' with '16742'
c Var 'aux1639' order represents '1' with '1'
c Var 'aux1639' order represents '0' with '-16742'
c Encoding variable: aux1640 with domain: int(0..2) (representing constraint (aux248 + aux1639))
c Both direct and order encoding.
c Var 'aux1640' order represents '0' with '16743'
c Var 'aux1640' direct represents '0' with '16743'
c Var 'aux1640' order represents '1' with '16744'
-16743 16744 0
c Var 'aux1640' direct represents '1' with '16745'
16743 -16744 16745 0
-16745 16744 0
-16745 -16743 0
c Var 'aux1640' direct represents '2' with '-16744'
16743 16745 -16744 0
c Encoding variable: aux1641 with domain: int(0..2) (representing constraint (aux251 + aux255))
c Both direct and order encoding.
c Var 'aux1641' order represents '0' with '16746'
c Var 'aux1641' direct represents '0' with '16746'
c Var 'aux1641' order represents '1' with '16747'
-16746 16747 0
c Var 'aux1641' direct represents '1' with '16748'
16746 -16747 16748 0
-16748 16747 0
-16748 -16746 0
c Var 'aux1641' direct represents '2' with '-16747'
16746 16748 -16747 0
c Encoding variable: aux1642 with domain: int(0..2) (representing constraint (aux254 + aux249))
c Both direct and order encoding.
c Var 'aux1642' order represents '0' with '16749'
c Var 'aux1642' direct represents '0' with '16749'
c Var 'aux1642' order represents '1' with '16750'
-16749 16750 0
c Var 'aux1642' direct represents '1' with '16751'
16749 -16750 16751 0
-16751 16750 0
-16751 -16749 0
c Var 'aux1642' direct represents '2' with '-16750'
16749 16751 -16750 0
c Encoding variable: aux1643 with domain: int(0..2) (representing constraint (aux253 + aux250))
c Both direct and order encoding.
c Var 'aux1643' order represents '0' with '16752'
c Var 'aux1643' direct represents '0' with '16752'
c Var 'aux1643' order represents '1' with '16753'
-16752 16753 0
c Var 'aux1643' direct represents '1' with '16754'
16752 -16753 16754 0
-16754 16753 0
-16754 -16752 0
c Var 'aux1643' direct represents '2' with '-16753'
16752 16754 -16753 0
c Encoding variable: aux1644 with domain: int(0..4) (representing constraint (aux1641 + aux1643))
c Both direct and order encoding.
c Var 'aux1644' order represents '0' with '16755'
c Var 'aux1644' direct represents '0' with '16755'
c Var 'aux1644' order represents '1' with '16756'
-16755 16756 0
c Var 'aux1644' direct represents '1' with '16757'
16755 -16756 16757 0
-16757 16756 0
-16757 -16755 0
c Var 'aux1644' order represents '2' with '16758'
-16756 16758 0
c Var 'aux1644' direct represents '2' with '16759'
16756 -16758 16759 0
-16759 16758 0
-16759 -16756 0
c Var 'aux1644' order represents '3' with '16760'
-16758 16760 0
c Var 'aux1644' direct represents '3' with '16761'
16758 -16760 16761 0
-16761 16760 0
-16761 -16758 0
c Var 'aux1644' direct represents '4' with '-16760'
16755 16757 16759 16761 -16760 0
c Encoding variable: aux1645 with domain: int(0..4) (representing constraint (aux1640 + aux1642))
c Both direct and order encoding.
c Var 'aux1645' order represents '0' with '16762'
c Var 'aux1645' direct represents '0' with '16762'
c Var 'aux1645' order represents '1' with '16763'
-16762 16763 0
c Var 'aux1645' direct represents '1' with '16764'
16762 -16763 16764 0
-16764 16763 0
-16764 -16762 0
c Var 'aux1645' order represents '2' with '16765'
-16763 16765 0
c Var 'aux1645' direct represents '2' with '16766'
16763 -16765 16766 0
-16766 16765 0
-16766 -16763 0
c Var 'aux1645' order represents '3' with '16767'
-16765 16767 0
c Var 'aux1645' direct represents '3' with '16768'
16765 -16767 16768 0
-16768 16767 0
-16768 -16765 0
c Var 'aux1645' direct represents '4' with '-16767'
16762 16764 16766 16768 -16767 0
c Encoding variable: aux1646 with domain: bool (representing constraint (shift(true, -1) + aux260))
c Var 'aux1646' direct represents '0' with '-16769'
c Var 'aux1646' direct represents '1' with '16769'
c Var 'aux1646' order represents '1' with '1'
c Var 'aux1646' order represents '0' with '-16769'
c Encoding variable: aux1647 with domain: int(0..2) (representing constraint (aux256 + aux1646))
c Both direct and order encoding.
c Var 'aux1647' order represents '0' with '16770'
c Var 'aux1647' direct represents '0' with '16770'
c Var 'aux1647' order represents '1' with '16771'
-16770 16771 0
c Var 'aux1647' direct represents '1' with '16772'
16770 -16771 16772 0
-16772 16771 0
-16772 -16770 0
c Var 'aux1647' direct represents '2' with '-16771'
16770 16772 -16771 0
c Encoding variable: aux1648 with domain: int(0..2) (representing constraint (aux259 + aux263))
c Both direct and order encoding.
c Var 'aux1648' order represents '0' with '16773'
c Var 'aux1648' direct represents '0' with '16773'
c Var 'aux1648' order represents '1' with '16774'
-16773 16774 0
c Var 'aux1648' direct represents '1' with '16775'
16773 -16774 16775 0
-16775 16774 0
-16775 -16773 0
c Var 'aux1648' direct represents '2' with '-16774'
16773 16775 -16774 0
c Encoding variable: aux1649 with domain: int(0..2) (representing constraint (aux262 + aux257))
c Both direct and order encoding.
c Var 'aux1649' order represents '0' with '16776'
c Var 'aux1649' direct represents '0' with '16776'
c Var 'aux1649' order represents '1' with '16777'
-16776 16777 0
c Var 'aux1649' direct represents '1' with '16778'
16776 -16777 16778 0
-16778 16777 0
-16778 -16776 0
c Var 'aux1649' direct represents '2' with '-16777'
16776 16778 -16777 0
c Encoding variable: aux1650 with domain: int(0..2) (representing constraint (aux261 + aux258))
c Both direct and order encoding.
c Var 'aux1650' order represents '0' with '16779'
c Var 'aux1650' direct represents '0' with '16779'
c Var 'aux1650' order represents '1' with '16780'
-16779 16780 0
c Var 'aux1650' direct represents '1' with '16781'
16779 -16780 16781 0
-16781 16780 0
-16781 -16779 0
c Var 'aux1650' direct represents '2' with '-16780'
16779 16781 -16780 0
c Encoding variable: aux1651 with domain: int(0..4) (representing constraint (aux1648 + aux1650))
c Both direct and order encoding.
c Var 'aux1651' order represents '0' with '16782'
c Var 'aux1651' direct represents '0' with '16782'
c Var 'aux1651' order represents '1' with '16783'
-16782 16783 0
c Var 'aux1651' direct represents '1' with '16784'
16782 -16783 16784 0
-16784 16783 0
-16784 -16782 0
c Var 'aux1651' order represents '2' with '16785'
-16783 16785 0
c Var 'aux1651' direct represents '2' with '16786'
16783 -16785 16786 0
-16786 16785 0
-16786 -16783 0
c Var 'aux1651' order represents '3' with '16787'
-16785 16787 0
c Var 'aux1651' direct represents '3' with '16788'
16785 -16787 16788 0
-16788 16787 0
-16788 -16785 0
c Var 'aux1651' direct represents '4' with '-16787'
16782 16784 16786 16788 -16787 0
c Encoding variable: aux1652 with domain: int(0..4) (representing constraint (aux1647 + aux1649))
c Both direct and order encoding.
c Var 'aux1652' order represents '0' with '16789'
c Var 'aux1652' direct represents '0' with '16789'
c Var 'aux1652' order represents '1' with '16790'
-16789 16790 0
c Var 'aux1652' direct represents '1' with '16791'
16789 -16790 16791 0
-16791 16790 0
-16791 -16789 0
c Var 'aux1652' order represents '2' with '16792'
-16790 16792 0
c Var 'aux1652' direct represents '2' with '16793'
16790 -16792 16793 0
-16793 16792 0
-16793 -16790 0
c Var 'aux1652' order represents '3' with '16794'
-16792 16794 0
c Var 'aux1652' direct represents '3' with '16795'
16792 -16794 16795 0
-16795 16794 0
-16795 -16792 0
c Var 'aux1652' direct represents '4' with '-16794'
16789 16791 16793 16795 -16794 0
c Encoding variable: aux1653 with domain: bool (representing constraint (shift(true, -1) + aux268))
c Var 'aux1653' direct represents '0' with '-16796'
c Var 'aux1653' direct represents '1' with '16796'
c Var 'aux1653' order represents '1' with '1'
c Var 'aux1653' order represents '0' with '-16796'
c Encoding variable: aux1654 with domain: int(0..2) (representing constraint (aux264 + aux1653))
c Both direct and order encoding.
c Var 'aux1654' order represents '0' with '16797'
c Var 'aux1654' direct represents '0' with '16797'
c Var 'aux1654' order represents '1' with '16798'
-16797 16798 0
c Var 'aux1654' direct represents '1' with '16799'
16797 -16798 16799 0
-16799 16798 0
-16799 -16797 0
c Var 'aux1654' direct represents '2' with '-16798'
16797 16799 -16798 0
c Encoding variable: aux1655 with domain: int(0..2) (representing constraint (aux267 + aux271))
c Both direct and order encoding.
c Var 'aux1655' order represents '0' with '16800'
c Var 'aux1655' direct represents '0' with '16800'
c Var 'aux1655' order represents '1' with '16801'
-16800 16801 0
c Var 'aux1655' direct represents '1' with '16802'
16800 -16801 16802 0
-16802 16801 0
-16802 -16800 0
c Var 'aux1655' direct represents '2' with '-16801'
16800 16802 -16801 0
c Encoding variable: aux1656 with domain: int(0..2) (representing constraint (aux270 + aux265))
c Both direct and order encoding.
c Var 'aux1656' order represents '0' with '16803'
c Var 'aux1656' direct represents '0' with '16803'
c Var 'aux1656' order represents '1' with '16804'
-16803 16804 0
c Var 'aux1656' direct represents '1' with '16805'
16803 -16804 16805 0
-16805 16804 0
-16805 -16803 0
c Var 'aux1656' direct represents '2' with '-16804'
16803 16805 -16804 0
c Encoding variable: aux1657 with domain: int(0..2) (representing constraint (aux269 + aux266))
c Both direct and order encoding.
c Var 'aux1657' order represents '0' with '16806'
c Var 'aux1657' direct represents '0' with '16806'
c Var 'aux1657' order represents '1' with '16807'
-16806 16807 0
c Var 'aux1657' direct represents '1' with '16808'
16806 -16807 16808 0
-16808 16807 0
-16808 -16806 0
c Var 'aux1657' direct represents '2' with '-16807'
16806 16808 -16807 0
c Encoding variable: aux1658 with domain: int(0..4) (representing constraint (aux1655 + aux1657))
c Both direct and order encoding.
c Var 'aux1658' order represents '0' with '16809'
c Var 'aux1658' direct represents '0' with '16809'
c Var 'aux1658' order represents '1' with '16810'
-16809 16810 0
c Var 'aux1658' direct represents '1' with '16811'
16809 -16810 16811 0
-16811 16810 0
-16811 -16809 0
c Var 'aux1658' order represents '2' with '16812'
-16810 16812 0
c Var 'aux1658' direct represents '2' with '16813'
16810 -16812 16813 0
-16813 16812 0
-16813 -16810 0
c Var 'aux1658' order represents '3' with '16814'
-16812 16814 0
c Var 'aux1658' direct represents '3' with '16815'
16812 -16814 16815 0
-16815 16814 0
-16815 -16812 0
c Var 'aux1658' direct represents '4' with '-16814'
16809 16811 16813 16815 -16814 0
c Encoding variable: aux1659 with domain: int(0..4) (representing constraint (aux1654 + aux1656))
c Both direct and order encoding.
c Var 'aux1659' order represents '0' with '16816'
c Var 'aux1659' direct represents '0' with '16816'
c Var 'aux1659' order represents '1' with '16817'
-16816 16817 0
c Var 'aux1659' direct represents '1' with '16818'
16816 -16817 16818 0
-16818 16817 0
-16818 -16816 0
c Var 'aux1659' order represents '2' with '16819'
-16817 16819 0
c Var 'aux1659' direct represents '2' with '16820'
16817 -16819 16820 0
-16820 16819 0
-16820 -16817 0
c Var 'aux1659' order represents '3' with '16821'
-16819 16821 0
c Var 'aux1659' direct represents '3' with '16822'
16819 -16821 16822 0
-16822 16821 0
-16822 -16819 0
c Var 'aux1659' direct represents '4' with '-16821'
16816 16818 16820 16822 -16821 0
c Encoding variable: aux1660 with domain: bool (representing constraint (shift(true, -1) + aux276))
c Var 'aux1660' direct represents '0' with '-16823'
c Var 'aux1660' direct represents '1' with '16823'
c Var 'aux1660' order represents '1' with '1'
c Var 'aux1660' order represents '0' with '-16823'
c Encoding variable: aux1661 with domain: int(0..2) (representing constraint (aux272 + aux1660))
c Both direct and order encoding.
c Var 'aux1661' order represents '0' with '16824'
c Var 'aux1661' direct represents '0' with '16824'
c Var 'aux1661' order represents '1' with '16825'
-16824 16825 0
c Var 'aux1661' direct represents '1' with '16826'
16824 -16825 16826 0
-16826 16825 0
-16826 -16824 0
c Var 'aux1661' direct represents '2' with '-16825'
16824 16826 -16825 0
c Encoding variable: aux1662 with domain: int(0..2) (representing constraint (aux275 + aux279))
c Both direct and order encoding.
c Var 'aux1662' order represents '0' with '16827'
c Var 'aux1662' direct represents '0' with '16827'
c Var 'aux1662' order represents '1' with '16828'
-16827 16828 0
c Var 'aux1662' direct represents '1' with '16829'
16827 -16828 16829 0
-16829 16828 0
-16829 -16827 0
c Var 'aux1662' direct represents '2' with '-16828'
16827 16829 -16828 0
c Encoding variable: aux1663 with domain: int(0..2) (representing constraint (aux278 + aux273))
c Both direct and order encoding.
c Var 'aux1663' order represents '0' with '16830'
c Var 'aux1663' direct represents '0' with '16830'
c Var 'aux1663' order represents '1' with '16831'
-16830 16831 0
c Var 'aux1663' direct represents '1' with '16832'
16830 -16831 16832 0
-16832 16831 0
-16832 -16830 0
c Var 'aux1663' direct represents '2' with '-16831'
16830 16832 -16831 0
c Encoding variable: aux1664 with domain: int(0..2) (representing constraint (aux277 + aux274))
c Both direct and order encoding.
c Var 'aux1664' order represents '0' with '16833'
c Var 'aux1664' direct represents '0' with '16833'
c Var 'aux1664' order represents '1' with '16834'
-16833 16834 0
c Var 'aux1664' direct represents '1' with '16835'
16833 -16834 16835 0
-16835 16834 0
-16835 -16833 0
c Var 'aux1664' direct represents '2' with '-16834'
16833 16835 -16834 0
c Encoding variable: aux1665 with domain: int(0..4) (representing constraint (aux1662 + aux1664))
c Both direct and order encoding.
c Var 'aux1665' order represents '0' with '16836'
c Var 'aux1665' direct represents '0' with '16836'
c Var 'aux1665' order represents '1' with '16837'
-16836 16837 0
c Var 'aux1665' direct represents '1' with '16838'
16836 -16837 16838 0
-16838 16837 0
-16838 -16836 0
c Var 'aux1665' order represents '2' with '16839'
-16837 16839 0
c Var 'aux1665' direct represents '2' with '16840'
16837 -16839 16840 0
-16840 16839 0
-16840 -16837 0
c Var 'aux1665' order represents '3' with '16841'
-16839 16841 0
c Var 'aux1665' direct represents '3' with '16842'
16839 -16841 16842 0
-16842 16841 0
-16842 -16839 0
c Var 'aux1665' direct represents '4' with '-16841'
16836 16838 16840 16842 -16841 0
c Encoding variable: aux1666 with domain: int(0..4) (representing constraint (aux1661 + aux1663))
c Both direct and order encoding.
c Var 'aux1666' order represents '0' with '16843'
c Var 'aux1666' direct represents '0' with '16843'
c Var 'aux1666' order represents '1' with '16844'
-16843 16844 0
c Var 'aux1666' direct represents '1' with '16845'
16843 -16844 16845 0
-16845 16844 0
-16845 -16843 0
c Var 'aux1666' order represents '2' with '16846'
-16844 16846 0
c Var 'aux1666' direct represents '2' with '16847'
16844 -16846 16847 0
-16847 16846 0
-16847 -16844 0
c Var 'aux1666' order represents '3' with '16848'
-16846 16848 0
c Var 'aux1666' direct represents '3' with '16849'
16846 -16848 16849 0
-16849 16848 0
-16849 -16846 0
c Var 'aux1666' direct represents '4' with '-16848'
16843 16845 16847 16849 -16848 0
c Encoding variable: aux1667 with domain: bool (representing constraint (shift(true, -1) + aux284))
c Var 'aux1667' direct represents '0' with '-16850'
c Var 'aux1667' direct represents '1' with '16850'
c Var 'aux1667' order represents '1' with '1'
c Var 'aux1667' order represents '0' with '-16850'
c Encoding variable: aux1668 with domain: int(0..2) (representing constraint (aux280 + aux1667))
c Both direct and order encoding.
c Var 'aux1668' order represents '0' with '16851'
c Var 'aux1668' direct represents '0' with '16851'
c Var 'aux1668' order represents '1' with '16852'
-16851 16852 0
c Var 'aux1668' direct represents '1' with '16853'
16851 -16852 16853 0
-16853 16852 0
-16853 -16851 0
c Var 'aux1668' direct represents '2' with '-16852'
16851 16853 -16852 0
c Encoding variable: aux1669 with domain: int(0..2) (representing constraint (aux283 + aux287))
c Both direct and order encoding.
c Var 'aux1669' order represents '0' with '16854'
c Var 'aux1669' direct represents '0' with '16854'
c Var 'aux1669' order represents '1' with '16855'
-16854 16855 0
c Var 'aux1669' direct represents '1' with '16856'
16854 -16855 16856 0
-16856 16855 0
-16856 -16854 0
c Var 'aux1669' direct represents '2' with '-16855'
16854 16856 -16855 0
c Encoding variable: aux1670 with domain: int(0..2) (representing constraint (aux286 + aux281))
c Both direct and order encoding.
c Var 'aux1670' order represents '0' with '16857'
c Var 'aux1670' direct represents '0' with '16857'
c Var 'aux1670' order represents '1' with '16858'
-16857 16858 0
c Var 'aux1670' direct represents '1' with '16859'
16857 -16858 16859 0
-16859 16858 0
-16859 -16857 0
c Var 'aux1670' direct represents '2' with '-16858'
16857 16859 -16858 0
c Encoding variable: aux1671 with domain: int(0..2) (representing constraint (aux285 + aux282))
c Both direct and order encoding.
c Var 'aux1671' order represents '0' with '16860'
c Var 'aux1671' direct represents '0' with '16860'
c Var 'aux1671' order represents '1' with '16861'
-16860 16861 0
c Var 'aux1671' direct represents '1' with '16862'
16860 -16861 16862 0
-16862 16861 0
-16862 -16860 0
c Var 'aux1671' direct represents '2' with '-16861'
16860 16862 -16861 0
c Encoding variable: aux1672 with domain: int(0..4) (representing constraint (aux1669 + aux1671))
c Both direct and order encoding.
c Var 'aux1672' order represents '0' with '16863'
c Var 'aux1672' direct represents '0' with '16863'
c Var 'aux1672' order represents '1' with '16864'
-16863 16864 0
c Var 'aux1672' direct represents '1' with '16865'
16863 -16864 16865 0
-16865 16864 0
-16865 -16863 0
c Var 'aux1672' order represents '2' with '16866'
-16864 16866 0
c Var 'aux1672' direct represents '2' with '16867'
16864 -16866 16867 0
-16867 16866 0
-16867 -16864 0
c Var 'aux1672' order represents '3' with '16868'
-16866 16868 0
c Var 'aux1672' direct represents '3' with '16869'
16866 -16868 16869 0
-16869 16868 0
-16869 -16866 0
c Var 'aux1672' direct represents '4' with '-16868'
16863 16865 16867 16869 -16868 0
c Encoding variable: aux1673 with domain: int(0..4) (representing constraint (aux1668 + aux1670))
c Both direct and order encoding.
c Var 'aux1673' order represents '0' with '16870'
c Var 'aux1673' direct represents '0' with '16870'
c Var 'aux1673' order represents '1' with '16871'
-16870 16871 0
c Var 'aux1673' direct represents '1' with '16872'
16870 -16871 16872 0
-16872 16871 0
-16872 -16870 0
c Var 'aux1673' order represents '2' with '16873'
-16871 16873 0
c Var 'aux1673' direct represents '2' with '16874'
16871 -16873 16874 0
-16874 16873 0
-16874 -16871 0
c Var 'aux1673' order represents '3' with '16875'
-16873 16875 0
c Var 'aux1673' direct represents '3' with '16876'
16873 -16875 16876 0
-16876 16875 0
-16876 -16873 0
c Var 'aux1673' direct represents '4' with '-16875'
16870 16872 16874 16876 -16875 0
c Encoding variable: aux1674 with domain: bool (representing constraint ((aux451 + aux454 + aux455)<=1))
c Var 'aux1674' direct represents '0' with '-16877'
c Var 'aux1674' direct represents '1' with '16877'
c Var 'aux1674' order represents '1' with '1'
c Var 'aux1674' order represents '0' with '-16877'
c Encoding variable: aux1675 with domain: bool (representing constraint (1<=(aux451 + aux454 + aux455)))
c Var 'aux1675' direct represents '0' with '-16878'
c Var 'aux1675' direct represents '1' with '16878'
c Var 'aux1675' order represents '1' with '1'
c Var 'aux1675' order represents '0' with '-16878'
c Encoding variable: aux1676 with domain: bool (representing constraint ((aux457 + aux460 + aux461)<=1))
c Var 'aux1676' direct represents '0' with '-16879'
c Var 'aux1676' direct represents '1' with '16879'
c Var 'aux1676' order represents '1' with '1'
c Var 'aux1676' order represents '0' with '-16879'
c Encoding variable: aux1677 with domain: bool (representing constraint (1<=(aux457 + aux460 + aux461)))
c Var 'aux1677' direct represents '0' with '-16880'
c Var 'aux1677' direct represents '1' with '16880'
c Var 'aux1677' order represents '1' with '1'
c Var 'aux1677' order represents '0' with '-16880'
c Encoding variable: aux1678 with domain: bool (representing constraint ((aux463 + aux466 + aux467)<=1))
c Var 'aux1678' direct represents '0' with '-16881'
c Var 'aux1678' direct represents '1' with '16881'
c Var 'aux1678' order represents '1' with '1'
c Var 'aux1678' order represents '0' with '-16881'
c Encoding variable: aux1679 with domain: bool (representing constraint (1<=(aux463 + aux466 + aux467)))
c Var 'aux1679' direct represents '0' with '-16882'
c Var 'aux1679' direct represents '1' with '16882'
c Var 'aux1679' order represents '1' with '1'
c Var 'aux1679' order represents '0' with '-16882'
c Encoding variable: aux1680 with domain: bool (representing constraint ((aux469 + aux472 + aux473)<=1))
c Var 'aux1680' direct represents '0' with '-16883'
c Var 'aux1680' direct represents '1' with '16883'
c Var 'aux1680' order represents '1' with '1'
c Var 'aux1680' order represents '0' with '-16883'
c Encoding variable: aux1681 with domain: bool (representing constraint (1<=(aux469 + aux472 + aux473)))
c Var 'aux1681' direct represents '0' with '-16884'
c Var 'aux1681' direct represents '1' with '16884'
c Var 'aux1681' order represents '1' with '1'
c Var 'aux1681' order represents '0' with '-16884'
c Encoding variable: aux1682 with domain: bool (representing constraint ((aux475 + aux478 + aux479)<=1))
c Var 'aux1682' direct represents '0' with '-16885'
c Var 'aux1682' direct represents '1' with '16885'
c Var 'aux1682' order represents '1' with '1'
c Var 'aux1682' order represents '0' with '-16885'
c Encoding variable: aux1683 with domain: bool (representing constraint (1<=(aux475 + aux478 + aux479)))
c Var 'aux1683' direct represents '0' with '-16886'
c Var 'aux1683' direct represents '1' with '16886'
c Var 'aux1683' order represents '1' with '1'
c Var 'aux1683' order represents '0' with '-16886'
c Encoding variable: aux1684 with domain: bool (representing constraint ((aux481 + aux484 + aux485)<=1))
c Var 'aux1684' direct represents '0' with '-16887'
c Var 'aux1684' direct represents '1' with '16887'
c Var 'aux1684' order represents '1' with '1'
c Var 'aux1684' order represents '0' with '-16887'
c Encoding variable: aux1685 with domain: bool (representing constraint (1<=(aux481 + aux484 + aux485)))
c Var 'aux1685' direct represents '0' with '-16888'
c Var 'aux1685' direct represents '1' with '16888'
c Var 'aux1685' order represents '1' with '1'
c Var 'aux1685' order represents '0' with '-16888'
c Encoding variable: aux1686 with domain: bool (representing constraint ((aux487 + aux490 + aux491)<=1))
c Var 'aux1686' direct represents '0' with '-16889'
c Var 'aux1686' direct represents '1' with '16889'
c Var 'aux1686' order represents '1' with '1'
c Var 'aux1686' order represents '0' with '-16889'
c Encoding variable: aux1687 with domain: bool (representing constraint (1<=(aux487 + aux490 + aux491)))
c Var 'aux1687' direct represents '0' with '-16890'
c Var 'aux1687' direct represents '1' with '16890'
c Var 'aux1687' order represents '1' with '1'
c Var 'aux1687' order represents '0' with '-16890'
c Encoding variable: aux1688 with domain: bool (representing constraint ((aux493 + aux496 + aux497)<=1))
c Var 'aux1688' direct represents '0' with '-16891'
c Var 'aux1688' direct represents '1' with '16891'
c Var 'aux1688' order represents '1' with '1'
c Var 'aux1688' order represents '0' with '-16891'
c Encoding variable: aux1689 with domain: bool (representing constraint (1<=(aux493 + aux496 + aux497)))
c Var 'aux1689' direct represents '0' with '-16892'
c Var 'aux1689' direct represents '1' with '16892'
c Var 'aux1689' order represents '1' with '1'
c Var 'aux1689' order represents '0' with '-16892'
c Encoding variable: aux1690 with domain: bool (representing constraint ((aux499 + aux502 + aux503)<=1))
c Var 'aux1690' direct represents '0' with '-16893'
c Var 'aux1690' direct represents '1' with '16893'
c Var 'aux1690' order represents '1' with '1'
c Var 'aux1690' order represents '0' with '-16893'
c Encoding variable: aux1691 with domain: bool (representing constraint (1<=(aux499 + aux502 + aux503)))
c Var 'aux1691' direct represents '0' with '-16894'
c Var 'aux1691' direct represents '1' with '16894'
c Var 'aux1691' order represents '1' with '1'
c Var 'aux1691' order represents '0' with '-16894'
c Encoding variable: aux1692 with domain: bool (representing constraint ((aux505 + aux508 + aux509)<=1))
c Var 'aux1692' direct represents '0' with '-16895'
c Var 'aux1692' direct represents '1' with '16895'
c Var 'aux1692' order represents '1' with '1'
c Var 'aux1692' order represents '0' with '-16895'
c Encoding variable: aux1693 with domain: bool (representing constraint (1<=(aux505 + aux508 + aux509)))
c Var 'aux1693' direct represents '0' with '-16896'
c Var 'aux1693' direct represents '1' with '16896'
c Var 'aux1693' order represents '1' with '1'
c Var 'aux1693' order represents '0' with '-16896'
c Encoding variable: aux1694 with domain: bool (representing constraint ((aux511 + aux514 + aux515)<=1))
c Var 'aux1694' direct represents '0' with '-16897'
c Var 'aux1694' direct represents '1' with '16897'
c Var 'aux1694' order represents '1' with '1'
c Var 'aux1694' order represents '0' with '-16897'
c Encoding variable: aux1695 with domain: bool (representing constraint (1<=(aux511 + aux514 + aux515)))
c Var 'aux1695' direct represents '0' with '-16898'
c Var 'aux1695' direct represents '1' with '16898'
c Var 'aux1695' order represents '1' with '1'
c Var 'aux1695' order represents '0' with '-16898'
c Encoding variable: aux1696 with domain: bool (representing constraint ((aux517 + aux520 + aux521)<=1))
c Var 'aux1696' direct represents '0' with '-16899'
c Var 'aux1696' direct represents '1' with '16899'
c Var 'aux1696' order represents '1' with '1'
c Var 'aux1696' order represents '0' with '-16899'
c Encoding variable: aux1697 with domain: bool (representing constraint (1<=(aux517 + aux520 + aux521)))
c Var 'aux1697' direct represents '0' with '-16900'
c Var 'aux1697' direct represents '1' with '16900'
c Var 'aux1697' order represents '1' with '1'
c Var 'aux1697' order represents '0' with '-16900'
c Encoding variable: aux1698 with domain: bool (representing constraint ((aux523 + aux526 + aux527)<=1))
c Var 'aux1698' direct represents '0' with '-16901'
c Var 'aux1698' direct represents '1' with '16901'
c Var 'aux1698' order represents '1' with '1'
c Var 'aux1698' order represents '0' with '-16901'
c Encoding variable: aux1699 with domain: bool (representing constraint (1<=(aux523 + aux526 + aux527)))
c Var 'aux1699' direct represents '0' with '-16902'
c Var 'aux1699' direct represents '1' with '16902'
c Var 'aux1699' order represents '1' with '1'
c Var 'aux1699' order represents '0' with '-16902'
c Encoding variable: aux1700 with domain: bool (representing constraint ((aux529 + aux532 + aux533)<=1))
c Var 'aux1700' direct represents '0' with '-16903'
c Var 'aux1700' direct represents '1' with '16903'
c Var 'aux1700' order represents '1' with '1'
c Var 'aux1700' order represents '0' with '-16903'
c Encoding variable: aux1701 with domain: bool (representing constraint (1<=(aux529 + aux532 + aux533)))
c Var 'aux1701' direct represents '0' with '-16904'
c Var 'aux1701' direct represents '1' with '16904'
c Var 'aux1701' order represents '1' with '1'
c Var 'aux1701' order represents '0' with '-16904'
c Encoding variable: aux1702 with domain: bool (representing constraint ((aux535 + aux538 + aux539)<=1))
c Var 'aux1702' direct represents '0' with '-16905'
c Var 'aux1702' direct represents '1' with '16905'
c Var 'aux1702' order represents '1' with '1'
c Var 'aux1702' order represents '0' with '-16905'
c Encoding variable: aux1703 with domain: bool (representing constraint (1<=(aux535 + aux538 + aux539)))
c Var 'aux1703' direct represents '0' with '-16906'
c Var 'aux1703' direct represents '1' with '16906'
c Var 'aux1703' order represents '1' with '1'
c Var 'aux1703' order represents '0' with '-16906'
c Encoding variable: aux1704 with domain: bool (representing constraint ((aux541 + aux544 + aux545)<=1))
c Var 'aux1704' direct represents '0' with '-16907'
c Var 'aux1704' direct represents '1' with '16907'
c Var 'aux1704' order represents '1' with '1'
c Var 'aux1704' order represents '0' with '-16907'
c Encoding variable: aux1705 with domain: bool (representing constraint (1<=(aux541 + aux544 + aux545)))
c Var 'aux1705' direct represents '0' with '-16908'
c Var 'aux1705' direct represents '1' with '16908'
c Var 'aux1705' order represents '1' with '1'
c Var 'aux1705' order represents '0' with '-16908'
c Encoding variable: aux1706 with domain: bool (representing constraint ((aux547 + aux550 + aux551)<=1))
c Var 'aux1706' direct represents '0' with '-16909'
c Var 'aux1706' direct represents '1' with '16909'
c Var 'aux1706' order represents '1' with '1'
c Var 'aux1706' order represents '0' with '-16909'
c Encoding variable: aux1707 with domain: bool (representing constraint (1<=(aux547 + aux550 + aux551)))
c Var 'aux1707' direct represents '0' with '-16910'
c Var 'aux1707' direct represents '1' with '16910'
c Var 'aux1707' order represents '1' with '1'
c Var 'aux1707' order represents '0' with '-16910'
c Encoding variable: aux1708 with domain: bool (representing constraint ((aux553 + aux556 + aux557)<=1))
c Var 'aux1708' direct represents '0' with '-16911'
c Var 'aux1708' direct represents '1' with '16911'
c Var 'aux1708' order represents '1' with '1'
c Var 'aux1708' order represents '0' with '-16911'
c Encoding variable: aux1709 with domain: bool (representing constraint (1<=(aux553 + aux556 + aux557)))
c Var 'aux1709' direct represents '0' with '-16912'
c Var 'aux1709' direct represents '1' with '16912'
c Var 'aux1709' order represents '1' with '1'
c Var 'aux1709' order represents '0' with '-16912'
c Encoding variable: aux1710 with domain: bool (representing constraint ((aux559 + aux562 + aux563)<=1))
c Var 'aux1710' direct represents '0' with '-16913'
c Var 'aux1710' direct represents '1' with '16913'
c Var 'aux1710' order represents '1' with '1'
c Var 'aux1710' order represents '0' with '-16913'
c Encoding variable: aux1711 with domain: bool (representing constraint (1<=(aux559 + aux562 + aux563)))
c Var 'aux1711' direct represents '0' with '-16914'
c Var 'aux1711' direct represents '1' with '16914'
c Var 'aux1711' order represents '1' with '1'
c Var 'aux1711' order represents '0' with '-16914'
c Encoding variable: aux1712 with domain: bool (representing constraint ((aux565 + aux568 + aux569)<=1))
c Var 'aux1712' direct represents '0' with '-16915'
c Var 'aux1712' direct represents '1' with '16915'
c Var 'aux1712' order represents '1' with '1'
c Var 'aux1712' order represents '0' with '-16915'
c Encoding variable: aux1713 with domain: bool (representing constraint (1<=(aux565 + aux568 + aux569)))
c Var 'aux1713' direct represents '0' with '-16916'
c Var 'aux1713' direct represents '1' with '16916'
c Var 'aux1713' order represents '1' with '1'
c Var 'aux1713' order represents '0' with '-16916'
c Encoding variable: aux1714 with domain: bool (representing constraint ((aux571 + aux574 + aux575)<=1))
c Var 'aux1714' direct represents '0' with '-16917'
c Var 'aux1714' direct represents '1' with '16917'
c Var 'aux1714' order represents '1' with '1'
c Var 'aux1714' order represents '0' with '-16917'
c Encoding variable: aux1715 with domain: bool (representing constraint (1<=(aux571 + aux574 + aux575)))
c Var 'aux1715' direct represents '0' with '-16918'
c Var 'aux1715' direct represents '1' with '16918'
c Var 'aux1715' order represents '1' with '1'
c Var 'aux1715' order represents '0' with '-16918'
c Encoding variable: aux1716 with domain: bool (representing constraint ((aux577 + aux580 + aux581)<=1))
c Var 'aux1716' direct represents '0' with '-16919'
c Var 'aux1716' direct represents '1' with '16919'
c Var 'aux1716' order represents '1' with '1'
c Var 'aux1716' order represents '0' with '-16919'
c Encoding variable: aux1717 with domain: bool (representing constraint (1<=(aux577 + aux580 + aux581)))
c Var 'aux1717' direct represents '0' with '-16920'
c Var 'aux1717' direct represents '1' with '16920'
c Var 'aux1717' order represents '1' with '1'
c Var 'aux1717' order represents '0' with '-16920'
c Encoding variable: aux1718 with domain: bool (representing constraint ((aux583 + aux586 + aux587)<=1))
c Var 'aux1718' direct represents '0' with '-16921'
c Var 'aux1718' direct represents '1' with '16921'
c Var 'aux1718' order represents '1' with '1'
c Var 'aux1718' order represents '0' with '-16921'
c Encoding variable: aux1719 with domain: bool (representing constraint (1<=(aux583 + aux586 + aux587)))
c Var 'aux1719' direct represents '0' with '-16922'
c Var 'aux1719' direct represents '1' with '16922'
c Var 'aux1719' order represents '1' with '1'
c Var 'aux1719' order represents '0' with '-16922'
c Encoding variable: aux1720 with domain: bool (representing constraint ((aux589 + aux592 + aux593)<=1))
c Var 'aux1720' direct represents '0' with '-16923'
c Var 'aux1720' direct represents '1' with '16923'
c Var 'aux1720' order represents '1' with '1'
c Var 'aux1720' order represents '0' with '-16923'
c Encoding variable: aux1721 with domain: bool (representing constraint (1<=(aux589 + aux592 + aux593)))
c Var 'aux1721' direct represents '0' with '-16924'
c Var 'aux1721' direct represents '1' with '16924'
c Var 'aux1721' order represents '1' with '1'
c Var 'aux1721' order represents '0' with '-16924'
c Encoding variable: aux1722 with domain: bool (representing constraint ((aux595 + aux598 + aux599)<=1))
c Var 'aux1722' direct represents '0' with '-16925'
c Var 'aux1722' direct represents '1' with '16925'
c Var 'aux1722' order represents '1' with '1'
c Var 'aux1722' order represents '0' with '-16925'
c Encoding variable: aux1723 with domain: bool (representing constraint (1<=(aux595 + aux598 + aux599)))
c Var 'aux1723' direct represents '0' with '-16926'
c Var 'aux1723' direct represents '1' with '16926'
c Var 'aux1723' order represents '1' with '1'
c Var 'aux1723' order represents '0' with '-16926'
c Encoding variable: aux1724 with domain: bool (representing constraint ((aux601 + aux604 + aux605)<=1))
c Var 'aux1724' direct represents '0' with '-16927'
c Var 'aux1724' direct represents '1' with '16927'
c Var 'aux1724' order represents '1' with '1'
c Var 'aux1724' order represents '0' with '-16927'
c Encoding variable: aux1725 with domain: bool (representing constraint (1<=(aux601 + aux604 + aux605)))
c Var 'aux1725' direct represents '0' with '-16928'
c Var 'aux1725' direct represents '1' with '16928'
c Var 'aux1725' order represents '1' with '1'
c Var 'aux1725' order represents '0' with '-16928'
c Encoding variable: aux1726 with domain: bool (representing constraint ((aux607 + aux610 + aux611)<=1))
c Var 'aux1726' direct represents '0' with '-16929'
c Var 'aux1726' direct represents '1' with '16929'
c Var 'aux1726' order represents '1' with '1'
c Var 'aux1726' order represents '0' with '-16929'
c Encoding variable: aux1727 with domain: bool (representing constraint (1<=(aux607 + aux610 + aux611)))
c Var 'aux1727' direct represents '0' with '-16930'
c Var 'aux1727' direct represents '1' with '16930'
c Var 'aux1727' order represents '1' with '1'
c Var 'aux1727' order represents '0' with '-16930'
c Encoding variable: aux1728 with domain: bool (representing constraint ((aux613 + aux616 + aux617)<=1))
c Var 'aux1728' direct represents '0' with '-16931'
c Var 'aux1728' direct represents '1' with '16931'
c Var 'aux1728' order represents '1' with '1'
c Var 'aux1728' order represents '0' with '-16931'
c Encoding variable: aux1729 with domain: bool (representing constraint (1<=(aux613 + aux616 + aux617)))
c Var 'aux1729' direct represents '0' with '-16932'
c Var 'aux1729' direct represents '1' with '16932'
c Var 'aux1729' order represents '1' with '1'
c Var 'aux1729' order represents '0' with '-16932'
c Encoding variable: aux1730 with domain: bool (representing constraint ((aux619 + aux622 + aux623)<=1))
c Var 'aux1730' direct represents '0' with '-16933'
c Var 'aux1730' direct represents '1' with '16933'
c Var 'aux1730' order represents '1' with '1'
c Var 'aux1730' order represents '0' with '-16933'
c Encoding variable: aux1731 with domain: bool (representing constraint (1<=(aux619 + aux622 + aux623)))
c Var 'aux1731' direct represents '0' with '-16934'
c Var 'aux1731' direct represents '1' with '16934'
c Var 'aux1731' order represents '1' with '1'
c Var 'aux1731' order represents '0' with '-16934'
c Encoding variable: aux1732 with domain: bool (representing constraint ((aux625 + aux628 + aux629)<=1))
c Var 'aux1732' direct represents '0' with '-16935'
c Var 'aux1732' direct represents '1' with '16935'
c Var 'aux1732' order represents '1' with '1'
c Var 'aux1732' order represents '0' with '-16935'
c Encoding variable: aux1733 with domain: bool (representing constraint (1<=(aux625 + aux628 + aux629)))
c Var 'aux1733' direct represents '0' with '-16936'
c Var 'aux1733' direct represents '1' with '16936'
c Var 'aux1733' order represents '1' with '1'
c Var 'aux1733' order represents '0' with '-16936'
c Encoding variable: aux1734 with domain: bool (representing constraint ((aux631 + aux634 + aux635)<=1))
c Var 'aux1734' direct represents '0' with '-16937'
c Var 'aux1734' direct represents '1' with '16937'
c Var 'aux1734' order represents '1' with '1'
c Var 'aux1734' order represents '0' with '-16937'
c Encoding variable: aux1735 with domain: bool (representing constraint (1<=(aux631 + aux634 + aux635)))
c Var 'aux1735' direct represents '0' with '-16938'
c Var 'aux1735' direct represents '1' with '16938'
c Var 'aux1735' order represents '1' with '1'
c Var 'aux1735' order represents '0' with '-16938'
c Encoding variable: aux1736 with domain: bool (representing constraint ((aux637 + aux640 + aux641)<=1))
c Var 'aux1736' direct represents '0' with '-16939'
c Var 'aux1736' direct represents '1' with '16939'
c Var 'aux1736' order represents '1' with '1'
c Var 'aux1736' order represents '0' with '-16939'
c Encoding variable: aux1737 with domain: bool (representing constraint (1<=(aux637 + aux640 + aux641)))
c Var 'aux1737' direct represents '0' with '-16940'
c Var 'aux1737' direct represents '1' with '16940'
c Var 'aux1737' order represents '1' with '1'
c Var 'aux1737' order represents '0' with '-16940'
c Encoding variable: aux1738 with domain: bool (representing constraint ((aux643 + aux646 + aux647)<=1))
c Var 'aux1738' direct represents '0' with '-16941'
c Var 'aux1738' direct represents '1' with '16941'
c Var 'aux1738' order represents '1' with '1'
c Var 'aux1738' order represents '0' with '-16941'
c Encoding variable: aux1739 with domain: bool (representing constraint (1<=(aux643 + aux646 + aux647)))
c Var 'aux1739' direct represents '0' with '-16942'
c Var 'aux1739' direct represents '1' with '16942'
c Var 'aux1739' order represents '1' with '1'
c Var 'aux1739' order represents '0' with '-16942'
c Encoding variable: aux1740 with domain: bool (representing constraint ((aux649 + aux652 + aux653)<=1))
c Var 'aux1740' direct represents '0' with '-16943'
c Var 'aux1740' direct represents '1' with '16943'
c Var 'aux1740' order represents '1' with '1'
c Var 'aux1740' order represents '0' with '-16943'
c Encoding variable: aux1741 with domain: bool (representing constraint (1<=(aux649 + aux652 + aux653)))
c Var 'aux1741' direct represents '0' with '-16944'
c Var 'aux1741' direct represents '1' with '16944'
c Var 'aux1741' order represents '1' with '1'
c Var 'aux1741' order represents '0' with '-16944'
c Encoding variable: aux1742 with domain: bool (representing constraint ((aux655 + aux658 + aux659)<=1))
c Var 'aux1742' direct represents '0' with '-16945'
c Var 'aux1742' direct represents '1' with '16945'
c Var 'aux1742' order represents '1' with '1'
c Var 'aux1742' order represents '0' with '-16945'
c Encoding variable: aux1743 with domain: bool (representing constraint (1<=(aux655 + aux658 + aux659)))
c Var 'aux1743' direct represents '0' with '-16946'
c Var 'aux1743' direct represents '1' with '16946'
c Var 'aux1743' order represents '1' with '1'
c Var 'aux1743' order represents '0' with '-16946'
c Encoding variable: aux1744 with domain: bool (representing constraint ((aux661 + aux664 + aux665)<=1))
c Var 'aux1744' direct represents '0' with '-16947'
c Var 'aux1744' direct represents '1' with '16947'
c Var 'aux1744' order represents '1' with '1'
c Var 'aux1744' order represents '0' with '-16947'
c Encoding variable: aux1745 with domain: bool (representing constraint (1<=(aux661 + aux664 + aux665)))
c Var 'aux1745' direct represents '0' with '-16948'
c Var 'aux1745' direct represents '1' with '16948'
c Var 'aux1745' order represents '1' with '1'
c Var 'aux1745' order represents '0' with '-16948'
c Encoding variable: aux1746 with domain: bool (representing constraint ((aux667 + aux670 + aux671)<=1))
c Var 'aux1746' direct represents '0' with '-16949'
c Var 'aux1746' direct represents '1' with '16949'
c Var 'aux1746' order represents '1' with '1'
c Var 'aux1746' order represents '0' with '-16949'
c Encoding variable: aux1747 with domain: bool (representing constraint (1<=(aux667 + aux670 + aux671)))
c Var 'aux1747' direct represents '0' with '-16950'
c Var 'aux1747' direct represents '1' with '16950'
c Var 'aux1747' order represents '1' with '1'
c Var 'aux1747' order represents '0' with '-16950'
c Encoding variable: aux1748 with domain: bool (representing constraint ((aux673 + aux676 + aux677)<=1))
c Var 'aux1748' direct represents '0' with '-16951'
c Var 'aux1748' direct represents '1' with '16951'
c Var 'aux1748' order represents '1' with '1'
c Var 'aux1748' order represents '0' with '-16951'
c Encoding variable: aux1749 with domain: bool (representing constraint (1<=(aux673 + aux676 + aux677)))
c Var 'aux1749' direct represents '0' with '-16952'
c Var 'aux1749' direct represents '1' with '16952'
c Var 'aux1749' order represents '1' with '1'
c Var 'aux1749' order represents '0' with '-16952'
c Encoding variable: aux1750 with domain: bool (representing constraint ((aux679 + aux682 + aux683)<=1))
c Var 'aux1750' direct represents '0' with '-16953'
c Var 'aux1750' direct represents '1' with '16953'
c Var 'aux1750' order represents '1' with '1'
c Var 'aux1750' order represents '0' with '-16953'
c Encoding variable: aux1751 with domain: bool (representing constraint (1<=(aux679 + aux682 + aux683)))
c Var 'aux1751' direct represents '0' with '-16954'
c Var 'aux1751' direct represents '1' with '16954'
c Var 'aux1751' order represents '1' with '1'
c Var 'aux1751' order represents '0' with '-16954'
c Encoding variable: aux1752 with domain: bool (representing constraint ((aux685 + aux688 + aux689)<=1))
c Var 'aux1752' direct represents '0' with '-16955'
c Var 'aux1752' direct represents '1' with '16955'
c Var 'aux1752' order represents '1' with '1'
c Var 'aux1752' order represents '0' with '-16955'
c Encoding variable: aux1753 with domain: bool (representing constraint (1<=(aux685 + aux688 + aux689)))
c Var 'aux1753' direct represents '0' with '-16956'
c Var 'aux1753' direct represents '1' with '16956'
c Var 'aux1753' order represents '1' with '1'
c Var 'aux1753' order represents '0' with '-16956'
c Encoding variable: aux1754 with domain: bool (representing constraint ((aux691 + aux694 + aux695)<=1))
c Var 'aux1754' direct represents '0' with '-16957'
c Var 'aux1754' direct represents '1' with '16957'
c Var 'aux1754' order represents '1' with '1'
c Var 'aux1754' order represents '0' with '-16957'
c Encoding variable: aux1755 with domain: bool (representing constraint (1<=(aux691 + aux694 + aux695)))
c Var 'aux1755' direct represents '0' with '-16958'
c Var 'aux1755' direct represents '1' with '16958'
c Var 'aux1755' order represents '1' with '1'
c Var 'aux1755' order represents '0' with '-16958'
c Encoding variable: aux1756 with domain: bool (representing constraint ((aux697 + aux700 + aux701)<=1))
c Var 'aux1756' direct represents '0' with '-16959'
c Var 'aux1756' direct represents '1' with '16959'
c Var 'aux1756' order represents '1' with '1'
c Var 'aux1756' order represents '0' with '-16959'
c Encoding variable: aux1757 with domain: bool (representing constraint (1<=(aux697 + aux700 + aux701)))
c Var 'aux1757' direct represents '0' with '-16960'
c Var 'aux1757' direct represents '1' with '16960'
c Var 'aux1757' order represents '1' with '1'
c Var 'aux1757' order represents '0' with '-16960'
c Encoding variable: aux1758 with domain: bool (representing constraint ((aux703 + aux706 + aux707)<=1))
c Var 'aux1758' direct represents '0' with '-16961'
c Var 'aux1758' direct represents '1' with '16961'
c Var 'aux1758' order represents '1' with '1'
c Var 'aux1758' order represents '0' with '-16961'
c Encoding variable: aux1759 with domain: bool (representing constraint (1<=(aux703 + aux706 + aux707)))
c Var 'aux1759' direct represents '0' with '-16962'
c Var 'aux1759' direct represents '1' with '16962'
c Var 'aux1759' order represents '1' with '1'
c Var 'aux1759' order represents '0' with '-16962'
c Encoding variable: aux1760 with domain: bool (representing constraint ((aux709 + aux712 + aux713)<=1))
c Var 'aux1760' direct represents '0' with '-16963'
c Var 'aux1760' direct represents '1' with '16963'
c Var 'aux1760' order represents '1' with '1'
c Var 'aux1760' order represents '0' with '-16963'
c Encoding variable: aux1761 with domain: bool (representing constraint (1<=(aux709 + aux712 + aux713)))
c Var 'aux1761' direct represents '0' with '-16964'
c Var 'aux1761' direct represents '1' with '16964'
c Var 'aux1761' order represents '1' with '1'
c Var 'aux1761' order represents '0' with '-16964'
c Encoding variable: aux1762 with domain: bool (representing constraint ((aux715 + aux718 + aux719)<=1))
c Var 'aux1762' direct represents '0' with '-16965'
c Var 'aux1762' direct represents '1' with '16965'
c Var 'aux1762' order represents '1' with '1'
c Var 'aux1762' order represents '0' with '-16965'
c Encoding variable: aux1763 with domain: bool (representing constraint (1<=(aux715 + aux718 + aux719)))
c Var 'aux1763' direct represents '0' with '-16966'
c Var 'aux1763' direct represents '1' with '16966'
c Var 'aux1763' order represents '1' with '1'
c Var 'aux1763' order represents '0' with '-16966'
c Encoding variable: aux1764 with domain: bool (representing constraint ((aux721 + aux724 + aux725)<=1))
c Var 'aux1764' direct represents '0' with '-16967'
c Var 'aux1764' direct represents '1' with '16967'
c Var 'aux1764' order represents '1' with '1'
c Var 'aux1764' order represents '0' with '-16967'
c Encoding variable: aux1765 with domain: bool (representing constraint (1<=(aux721 + aux724 + aux725)))
c Var 'aux1765' direct represents '0' with '-16968'
c Var 'aux1765' direct represents '1' with '16968'
c Var 'aux1765' order represents '1' with '1'
c Var 'aux1765' order represents '0' with '-16968'
c Encoding variable: aux1766 with domain: bool (representing constraint ((aux727 + aux730 + aux731)<=1))
c Var 'aux1766' direct represents '0' with '-16969'
c Var 'aux1766' direct represents '1' with '16969'
c Var 'aux1766' order represents '1' with '1'
c Var 'aux1766' order represents '0' with '-16969'
c Encoding variable: aux1767 with domain: bool (representing constraint (1<=(aux727 + aux730 + aux731)))
c Var 'aux1767' direct represents '0' with '-16970'
c Var 'aux1767' direct represents '1' with '16970'
c Var 'aux1767' order represents '1' with '1'
c Var 'aux1767' order represents '0' with '-16970'
c Encoding variable: aux1768 with domain: bool (representing constraint ((aux733 + aux736 + aux737)<=1))
c Var 'aux1768' direct represents '0' with '-16971'
c Var 'aux1768' direct represents '1' with '16971'
c Var 'aux1768' order represents '1' with '1'
c Var 'aux1768' order represents '0' with '-16971'
c Encoding variable: aux1769 with domain: bool (representing constraint (1<=(aux733 + aux736 + aux737)))
c Var 'aux1769' direct represents '0' with '-16972'
c Var 'aux1769' direct represents '1' with '16972'
c Var 'aux1769' order represents '1' with '1'
c Var 'aux1769' order represents '0' with '-16972'
c Encoding variable: aux1770 with domain: bool (representing constraint ((aux739 + aux742 + aux743)<=1))
c Var 'aux1770' direct represents '0' with '-16973'
c Var 'aux1770' direct represents '1' with '16973'
c Var 'aux1770' order represents '1' with '1'
c Var 'aux1770' order represents '0' with '-16973'
c Encoding variable: aux1771 with domain: bool (representing constraint (1<=(aux739 + aux742 + aux743)))
c Var 'aux1771' direct represents '0' with '-16974'
c Var 'aux1771' direct represents '1' with '16974'
c Var 'aux1771' order represents '1' with '1'
c Var 'aux1771' order represents '0' with '-16974'
c Encoding variable: aux1772 with domain: bool (representing constraint ((aux745 + aux748 + aux749)<=1))
c Var 'aux1772' direct represents '0' with '-16975'
c Var 'aux1772' direct represents '1' with '16975'
c Var 'aux1772' order represents '1' with '1'
c Var 'aux1772' order represents '0' with '-16975'
c Encoding variable: aux1773 with domain: bool (representing constraint (1<=(aux745 + aux748 + aux749)))
c Var 'aux1773' direct represents '0' with '-16976'
c Var 'aux1773' direct represents '1' with '16976'
c Var 'aux1773' order represents '1' with '1'
c Var 'aux1773' order represents '0' with '-16976'
c Encoding variable: aux1774 with domain: bool (representing constraint ((aux751 + aux754 + aux755)<=1))
c Var 'aux1774' direct represents '0' with '-16977'
c Var 'aux1774' direct represents '1' with '16977'
c Var 'aux1774' order represents '1' with '1'
c Var 'aux1774' order represents '0' with '-16977'
c Encoding variable: aux1775 with domain: bool (representing constraint (1<=(aux751 + aux754 + aux755)))
c Var 'aux1775' direct represents '0' with '-16978'
c Var 'aux1775' direct represents '1' with '16978'
c Var 'aux1775' order represents '1' with '1'
c Var 'aux1775' order represents '0' with '-16978'
c Encoding variable: aux1776 with domain: bool (representing constraint ((aux757 + aux760 + aux761)<=1))
c Var 'aux1776' direct represents '0' with '-16979'
c Var 'aux1776' direct represents '1' with '16979'
c Var 'aux1776' order represents '1' with '1'
c Var 'aux1776' order represents '0' with '-16979'
c Encoding variable: aux1777 with domain: bool (representing constraint (1<=(aux757 + aux760 + aux761)))
c Var 'aux1777' direct represents '0' with '-16980'
c Var 'aux1777' direct represents '1' with '16980'
c Var 'aux1777' order represents '1' with '1'
c Var 'aux1777' order represents '0' with '-16980'
c Encoding variable: aux1778 with domain: bool (representing constraint ((aux763 + aux766 + aux767)<=1))
c Var 'aux1778' direct represents '0' with '-16981'
c Var 'aux1778' direct represents '1' with '16981'
c Var 'aux1778' order represents '1' with '1'
c Var 'aux1778' order represents '0' with '-16981'
c Encoding variable: aux1779 with domain: bool (representing constraint (1<=(aux763 + aux766 + aux767)))
c Var 'aux1779' direct represents '0' with '-16982'
c Var 'aux1779' direct represents '1' with '16982'
c Var 'aux1779' order represents '1' with '1'
c Var 'aux1779' order represents '0' with '-16982'
c Encoding variable: aux1780 with domain: bool (representing constraint ((aux769 + aux772 + aux773)<=1))
c Var 'aux1780' direct represents '0' with '-16983'
c Var 'aux1780' direct represents '1' with '16983'
c Var 'aux1780' order represents '1' with '1'
c Var 'aux1780' order represents '0' with '-16983'
c Encoding variable: aux1781 with domain: bool (representing constraint (1<=(aux769 + aux772 + aux773)))
c Var 'aux1781' direct represents '0' with '-16984'
c Var 'aux1781' direct represents '1' with '16984'
c Var 'aux1781' order represents '1' with '1'
c Var 'aux1781' order represents '0' with '-16984'
c Encoding variable: aux1782 with domain: bool (representing constraint ((aux775 + aux778 + aux779)<=1))
c Var 'aux1782' direct represents '0' with '-16985'
c Var 'aux1782' direct represents '1' with '16985'
c Var 'aux1782' order represents '1' with '1'
c Var 'aux1782' order represents '0' with '-16985'
c Encoding variable: aux1783 with domain: bool (representing constraint (1<=(aux775 + aux778 + aux779)))
c Var 'aux1783' direct represents '0' with '-16986'
c Var 'aux1783' direct represents '1' with '16986'
c Var 'aux1783' order represents '1' with '1'
c Var 'aux1783' order represents '0' with '-16986'
c Encoding variable: aux1784 with domain: bool (representing constraint ((aux781 + aux784 + aux785)<=1))
c Var 'aux1784' direct represents '0' with '-16987'
c Var 'aux1784' direct represents '1' with '16987'
c Var 'aux1784' order represents '1' with '1'
c Var 'aux1784' order represents '0' with '-16987'
c Encoding variable: aux1785 with domain: bool (representing constraint (1<=(aux781 + aux784 + aux785)))
c Var 'aux1785' direct represents '0' with '-16988'
c Var 'aux1785' direct represents '1' with '16988'
c Var 'aux1785' order represents '1' with '1'
c Var 'aux1785' order represents '0' with '-16988'
c Encoding variable: aux1786 with domain: bool (representing constraint ((aux787 + aux790 + aux791)<=1))
c Var 'aux1786' direct represents '0' with '-16989'
c Var 'aux1786' direct represents '1' with '16989'
c Var 'aux1786' order represents '1' with '1'
c Var 'aux1786' order represents '0' with '-16989'
c Encoding variable: aux1787 with domain: bool (representing constraint (1<=(aux787 + aux790 + aux791)))
c Var 'aux1787' direct represents '0' with '-16990'
c Var 'aux1787' direct represents '1' with '16990'
c Var 'aux1787' order represents '1' with '1'
c Var 'aux1787' order represents '0' with '-16990'
c Encoding variable: aux1788 with domain: bool (representing constraint ((aux793 + aux796 + aux797)<=1))
c Var 'aux1788' direct represents '0' with '-16991'
c Var 'aux1788' direct represents '1' with '16991'
c Var 'aux1788' order represents '1' with '1'
c Var 'aux1788' order represents '0' with '-16991'
c Encoding variable: aux1789 with domain: bool (representing constraint (1<=(aux793 + aux796 + aux797)))
c Var 'aux1789' direct represents '0' with '-16992'
c Var 'aux1789' direct represents '1' with '16992'
c Var 'aux1789' order represents '1' with '1'
c Var 'aux1789' order represents '0' with '-16992'
c Encoding variable: aux1790 with domain: bool (representing constraint ((aux799 + aux802 + aux803)<=1))
c Var 'aux1790' direct represents '0' with '-16993'
c Var 'aux1790' direct represents '1' with '16993'
c Var 'aux1790' order represents '1' with '1'
c Var 'aux1790' order represents '0' with '-16993'
c Encoding variable: aux1791 with domain: bool (representing constraint (1<=(aux799 + aux802 + aux803)))
c Var 'aux1791' direct represents '0' with '-16994'
c Var 'aux1791' direct represents '1' with '16994'
c Var 'aux1791' order represents '1' with '1'
c Var 'aux1791' order represents '0' with '-16994'
c Encoding variable: aux1792 with domain: bool (representing constraint ((aux805 + aux808 + aux809)<=1))
c Var 'aux1792' direct represents '0' with '-16995'
c Var 'aux1792' direct represents '1' with '16995'
c Var 'aux1792' order represents '1' with '1'
c Var 'aux1792' order represents '0' with '-16995'
c Encoding variable: aux1793 with domain: bool (representing constraint (1<=(aux805 + aux808 + aux809)))
c Var 'aux1793' direct represents '0' with '-16996'
c Var 'aux1793' direct represents '1' with '16996'
c Var 'aux1793' order represents '1' with '1'
c Var 'aux1793' order represents '0' with '-16996'
c Encoding variable: aux1794 with domain: bool (representing constraint ((aux811 + aux814 + aux815)<=1))
c Var 'aux1794' direct represents '0' with '-16997'
c Var 'aux1794' direct represents '1' with '16997'
c Var 'aux1794' order represents '1' with '1'
c Var 'aux1794' order represents '0' with '-16997'
c Encoding variable: aux1795 with domain: bool (representing constraint (1<=(aux811 + aux814 + aux815)))
c Var 'aux1795' direct represents '0' with '-16998'
c Var 'aux1795' direct represents '1' with '16998'
c Var 'aux1795' order represents '1' with '1'
c Var 'aux1795' order represents '0' with '-16998'
c Encoding variable: aux1796 with domain: bool (representing constraint ((aux817 + aux820 + aux821)<=1))
c Var 'aux1796' direct represents '0' with '-16999'
c Var 'aux1796' direct represents '1' with '16999'
c Var 'aux1796' order represents '1' with '1'
c Var 'aux1796' order represents '0' with '-16999'
c Encoding variable: aux1797 with domain: bool (representing constraint (1<=(aux817 + aux820 + aux821)))
c Var 'aux1797' direct represents '0' with '-17000'
c Var 'aux1797' direct represents '1' with '17000'
c Var 'aux1797' order represents '1' with '1'
c Var 'aux1797' order represents '0' with '-17000'
c Encoding variable: aux1798 with domain: bool (representing constraint ((aux823 + aux826 + aux827)<=1))
c Var 'aux1798' direct represents '0' with '-17001'
c Var 'aux1798' direct represents '1' with '17001'
c Var 'aux1798' order represents '1' with '1'
c Var 'aux1798' order represents '0' with '-17001'
c Encoding variable: aux1799 with domain: bool (representing constraint (1<=(aux823 + aux826 + aux827)))
c Var 'aux1799' direct represents '0' with '-17002'
c Var 'aux1799' direct represents '1' with '17002'
c Var 'aux1799' order represents '1' with '1'
c Var 'aux1799' order represents '0' with '-17002'
c Encoding variable: aux1800 with domain: bool (representing constraint ((aux829 + aux832 + aux833)<=1))
c Var 'aux1800' direct represents '0' with '-17003'
c Var 'aux1800' direct represents '1' with '17003'
c Var 'aux1800' order represents '1' with '1'
c Var 'aux1800' order represents '0' with '-17003'
c Encoding variable: aux1801 with domain: bool (representing constraint (1<=(aux829 + aux832 + aux833)))
c Var 'aux1801' direct represents '0' with '-17004'
c Var 'aux1801' direct represents '1' with '17004'
c Var 'aux1801' order represents '1' with '1'
c Var 'aux1801' order represents '0' with '-17004'
c Encoding variable: aux1802 with domain: bool (representing constraint ((aux835 + aux838 + aux839)<=1))
c Var 'aux1802' direct represents '0' with '-17005'
c Var 'aux1802' direct represents '1' with '17005'
c Var 'aux1802' order represents '1' with '1'
c Var 'aux1802' order represents '0' with '-17005'
c Encoding variable: aux1803 with domain: bool (representing constraint (1<=(aux835 + aux838 + aux839)))
c Var 'aux1803' direct represents '0' with '-17006'
c Var 'aux1803' direct represents '1' with '17006'
c Var 'aux1803' order represents '1' with '1'
c Var 'aux1803' order represents '0' with '-17006'
c Encoding variable: aux1804 with domain: bool (representing constraint ((aux841 + aux844 + aux845)<=1))
c Var 'aux1804' direct represents '0' with '-17007'
c Var 'aux1804' direct represents '1' with '17007'
c Var 'aux1804' order represents '1' with '1'
c Var 'aux1804' order represents '0' with '-17007'
c Encoding variable: aux1805 with domain: bool (representing constraint (1<=(aux841 + aux844 + aux845)))
c Var 'aux1805' direct represents '0' with '-17008'
c Var 'aux1805' direct represents '1' with '17008'
c Var 'aux1805' order represents '1' with '1'
c Var 'aux1805' order represents '0' with '-17008'
c Encoding variable: aux1806 with domain: bool (representing constraint ((aux847 + aux850 + aux851)<=1))
c Var 'aux1806' direct represents '0' with '-17009'
c Var 'aux1806' direct represents '1' with '17009'
c Var 'aux1806' order represents '1' with '1'
c Var 'aux1806' order represents '0' with '-17009'
c Encoding variable: aux1807 with domain: bool (representing constraint (1<=(aux847 + aux850 + aux851)))
c Var 'aux1807' direct represents '0' with '-17010'
c Var 'aux1807' direct represents '1' with '17010'
c Var 'aux1807' order represents '1' with '1'
c Var 'aux1807' order represents '0' with '-17010'
c Encoding variable: aux1808 with domain: bool (representing constraint ((aux853 + aux856 + aux857)<=1))
c Var 'aux1808' direct represents '0' with '-17011'
c Var 'aux1808' direct represents '1' with '17011'
c Var 'aux1808' order represents '1' with '1'
c Var 'aux1808' order represents '0' with '-17011'
c Encoding variable: aux1809 with domain: bool (representing constraint (1<=(aux853 + aux856 + aux857)))
c Var 'aux1809' direct represents '0' with '-17012'
c Var 'aux1809' direct represents '1' with '17012'
c Var 'aux1809' order represents '1' with '1'
c Var 'aux1809' order represents '0' with '-17012'
c Encoding variable: aux1810 with domain: bool (representing constraint ((aux859 + aux862 + aux863)<=1))
c Var 'aux1810' direct represents '0' with '-17013'
c Var 'aux1810' direct represents '1' with '17013'
c Var 'aux1810' order represents '1' with '1'
c Var 'aux1810' order represents '0' with '-17013'
c Encoding variable: aux1811 with domain: bool (representing constraint (1<=(aux859 + aux862 + aux863)))
c Var 'aux1811' direct represents '0' with '-17014'
c Var 'aux1811' direct represents '1' with '17014'
c Var 'aux1811' order represents '1' with '1'
c Var 'aux1811' order represents '0' with '-17014'
c Encoding variable: aux1812 with domain: bool (representing constraint ((aux865 + aux868 + aux869)<=1))
c Var 'aux1812' direct represents '0' with '-17015'
c Var 'aux1812' direct represents '1' with '17015'
c Var 'aux1812' order represents '1' with '1'
c Var 'aux1812' order represents '0' with '-17015'
c Encoding variable: aux1813 with domain: bool (representing constraint (1<=(aux865 + aux868 + aux869)))
c Var 'aux1813' direct represents '0' with '-17016'
c Var 'aux1813' direct represents '1' with '17016'
c Var 'aux1813' order represents '1' with '1'
c Var 'aux1813' order represents '0' with '-17016'
c Encoding variable: aux1814 with domain: bool (representing constraint ((aux871 + aux874 + aux875)<=1))
c Var 'aux1814' direct represents '0' with '-17017'
c Var 'aux1814' direct represents '1' with '17017'
c Var 'aux1814' order represents '1' with '1'
c Var 'aux1814' order represents '0' with '-17017'
c Encoding variable: aux1815 with domain: bool (representing constraint (1<=(aux871 + aux874 + aux875)))
c Var 'aux1815' direct represents '0' with '-17018'
c Var 'aux1815' direct represents '1' with '17018'
c Var 'aux1815' order represents '1' with '1'
c Var 'aux1815' order represents '0' with '-17018'
c Encoding variable: aux1816 with domain: bool (representing constraint ((aux877 + aux880 + aux881)<=1))
c Var 'aux1816' direct represents '0' with '-17019'
c Var 'aux1816' direct represents '1' with '17019'
c Var 'aux1816' order represents '1' with '1'
c Var 'aux1816' order represents '0' with '-17019'
c Encoding variable: aux1817 with domain: bool (representing constraint (1<=(aux877 + aux880 + aux881)))
c Var 'aux1817' direct represents '0' with '-17020'
c Var 'aux1817' direct represents '1' with '17020'
c Var 'aux1817' order represents '1' with '1'
c Var 'aux1817' order represents '0' with '-17020'
c Encoding variable: aux1818 with domain: bool (representing constraint ((aux883 + aux886 + aux887)<=1))
c Var 'aux1818' direct represents '0' with '-17021'
c Var 'aux1818' direct represents '1' with '17021'
c Var 'aux1818' order represents '1' with '1'
c Var 'aux1818' order represents '0' with '-17021'
c Encoding variable: aux1819 with domain: bool (representing constraint (1<=(aux883 + aux886 + aux887)))
c Var 'aux1819' direct represents '0' with '-17022'
c Var 'aux1819' direct represents '1' with '17022'
c Var 'aux1819' order represents '1' with '1'
c Var 'aux1819' order represents '0' with '-17022'
c Encoding variable: aux1820 with domain: bool (representing constraint ((aux889 + aux892 + aux893)<=1))
c Var 'aux1820' direct represents '0' with '-17023'
c Var 'aux1820' direct represents '1' with '17023'
c Var 'aux1820' order represents '1' with '1'
c Var 'aux1820' order represents '0' with '-17023'
c Encoding variable: aux1821 with domain: bool (representing constraint (1<=(aux889 + aux892 + aux893)))
c Var 'aux1821' direct represents '0' with '-17024'
c Var 'aux1821' direct represents '1' with '17024'
c Var 'aux1821' order represents '1' with '1'
c Var 'aux1821' order represents '0' with '-17024'
c Encoding variable: aux1822 with domain: bool (representing constraint ((aux895 + aux898 + aux899)<=1))
c Var 'aux1822' direct represents '0' with '-17025'
c Var 'aux1822' direct represents '1' with '17025'
c Var 'aux1822' order represents '1' with '1'
c Var 'aux1822' order represents '0' with '-17025'
c Encoding variable: aux1823 with domain: bool (representing constraint (1<=(aux895 + aux898 + aux899)))
c Var 'aux1823' direct represents '0' with '-17026'
c Var 'aux1823' direct represents '1' with '17026'
c Var 'aux1823' order represents '1' with '1'
c Var 'aux1823' order represents '0' with '-17026'
c Encoding variable: aux1824 with domain: bool (representing constraint ((aux901 + aux904 + aux905)<=1))
c Var 'aux1824' direct represents '0' with '-17027'
c Var 'aux1824' direct represents '1' with '17027'
c Var 'aux1824' order represents '1' with '1'
c Var 'aux1824' order represents '0' with '-17027'
c Encoding variable: aux1825 with domain: bool (representing constraint (1<=(aux901 + aux904 + aux905)))
c Var 'aux1825' direct represents '0' with '-17028'
c Var 'aux1825' direct represents '1' with '17028'
c Var 'aux1825' order represents '1' with '1'
c Var 'aux1825' order represents '0' with '-17028'
c Encoding variable: aux1826 with domain: bool (representing constraint ((aux907 + aux910 + aux911)<=1))
c Var 'aux1826' direct represents '0' with '-17029'
c Var 'aux1826' direct represents '1' with '17029'
c Var 'aux1826' order represents '1' with '1'
c Var 'aux1826' order represents '0' with '-17029'
c Encoding variable: aux1827 with domain: bool (representing constraint (1<=(aux907 + aux910 + aux911)))
c Var 'aux1827' direct represents '0' with '-17030'
c Var 'aux1827' direct represents '1' with '17030'
c Var 'aux1827' order represents '1' with '1'
c Var 'aux1827' order represents '0' with '-17030'
c Encoding variable: aux1828 with domain: bool (representing constraint ((aux913 + aux916 + aux917)<=1))
c Var 'aux1828' direct represents '0' with '-17031'
c Var 'aux1828' direct represents '1' with '17031'
c Var 'aux1828' order represents '1' with '1'
c Var 'aux1828' order represents '0' with '-17031'
c Encoding variable: aux1829 with domain: bool (representing constraint (1<=(aux913 + aux916 + aux917)))
c Var 'aux1829' direct represents '0' with '-17032'
c Var 'aux1829' direct represents '1' with '17032'
c Var 'aux1829' order represents '1' with '1'
c Var 'aux1829' order represents '0' with '-17032'
c Encoding variable: aux1830 with domain: bool (representing constraint ((aux919 + aux922 + aux923)<=1))
c Var 'aux1830' direct represents '0' with '-17033'
c Var 'aux1830' direct represents '1' with '17033'
c Var 'aux1830' order represents '1' with '1'
c Var 'aux1830' order represents '0' with '-17033'
c Encoding variable: aux1831 with domain: bool (representing constraint (1<=(aux919 + aux922 + aux923)))
c Var 'aux1831' direct represents '0' with '-17034'
c Var 'aux1831' direct represents '1' with '17034'
c Var 'aux1831' order represents '1' with '1'
c Var 'aux1831' order represents '0' with '-17034'
c Encoding variable: aux1832 with domain: bool (representing constraint ((aux925 + aux928 + aux929)<=1))
c Var 'aux1832' direct represents '0' with '-17035'
c Var 'aux1832' direct represents '1' with '17035'
c Var 'aux1832' order represents '1' with '1'
c Var 'aux1832' order represents '0' with '-17035'
c Encoding variable: aux1833 with domain: bool (representing constraint (1<=(aux925 + aux928 + aux929)))
c Var 'aux1833' direct represents '0' with '-17036'
c Var 'aux1833' direct represents '1' with '17036'
c Var 'aux1833' order represents '1' with '1'
c Var 'aux1833' order represents '0' with '-17036'
c Encoding variable: aux1834 with domain: bool (representing constraint ((aux931 + aux934 + aux935)<=1))
c Var 'aux1834' direct represents '0' with '-17037'
c Var 'aux1834' direct represents '1' with '17037'
c Var 'aux1834' order represents '1' with '1'
c Var 'aux1834' order represents '0' with '-17037'
c Encoding variable: aux1835 with domain: bool (representing constraint (1<=(aux931 + aux934 + aux935)))
c Var 'aux1835' direct represents '0' with '-17038'
c Var 'aux1835' direct represents '1' with '17038'
c Var 'aux1835' order represents '1' with '1'
c Var 'aux1835' order represents '0' with '-17038'
c Encoding variable: aux1836 with domain: bool (representing constraint ((aux937 + aux940 + aux941)<=1))
c Var 'aux1836' direct represents '0' with '-17039'
c Var 'aux1836' direct represents '1' with '17039'
c Var 'aux1836' order represents '1' with '1'
c Var 'aux1836' order represents '0' with '-17039'
c Encoding variable: aux1837 with domain: bool (representing constraint (1<=(aux937 + aux940 + aux941)))
c Var 'aux1837' direct represents '0' with '-17040'
c Var 'aux1837' direct represents '1' with '17040'
c Var 'aux1837' order represents '1' with '1'
c Var 'aux1837' order represents '0' with '-17040'
c Encoding variable: aux1838 with domain: bool (representing constraint ((aux943 + aux946 + aux947)<=1))
c Var 'aux1838' direct represents '0' with '-17041'
c Var 'aux1838' direct represents '1' with '17041'
c Var 'aux1838' order represents '1' with '1'
c Var 'aux1838' order represents '0' with '-17041'
c Encoding variable: aux1839 with domain: bool (representing constraint (1<=(aux943 + aux946 + aux947)))
c Var 'aux1839' direct represents '0' with '-17042'
c Var 'aux1839' direct represents '1' with '17042'
c Var 'aux1839' order represents '1' with '1'
c Var 'aux1839' order represents '0' with '-17042'
c Encoding variable: aux1840 with domain: bool (representing constraint ((aux949 + aux952 + aux953)<=1))
c Var 'aux1840' direct represents '0' with '-17043'
c Var 'aux1840' direct represents '1' with '17043'
c Var 'aux1840' order represents '1' with '1'
c Var 'aux1840' order represents '0' with '-17043'
c Encoding variable: aux1841 with domain: bool (representing constraint (1<=(aux949 + aux952 + aux953)))
c Var 'aux1841' direct represents '0' with '-17044'
c Var 'aux1841' direct represents '1' with '17044'
c Var 'aux1841' order represents '1' with '1'
c Var 'aux1841' order represents '0' with '-17044'
c Encoding variable: aux1842 with domain: bool (representing constraint ((aux955 + aux958 + aux959)<=1))
c Var 'aux1842' direct represents '0' with '-17045'
c Var 'aux1842' direct represents '1' with '17045'
c Var 'aux1842' order represents '1' with '1'
c Var 'aux1842' order represents '0' with '-17045'
c Encoding variable: aux1843 with domain: bool (representing constraint (1<=(aux955 + aux958 + aux959)))
c Var 'aux1843' direct represents '0' with '-17046'
c Var 'aux1843' direct represents '1' with '17046'
c Var 'aux1843' order represents '1' with '1'
c Var 'aux1843' order represents '0' with '-17046'
c Encoding variable: aux1844 with domain: bool (representing constraint ((aux961 + aux964 + aux965)<=1))
c Var 'aux1844' direct represents '0' with '-17047'
c Var 'aux1844' direct represents '1' with '17047'
c Var 'aux1844' order represents '1' with '1'
c Var 'aux1844' order represents '0' with '-17047'
c Encoding variable: aux1845 with domain: bool (representing constraint (1<=(aux961 + aux964 + aux965)))
c Var 'aux1845' direct represents '0' with '-17048'
c Var 'aux1845' direct represents '1' with '17048'
c Var 'aux1845' order represents '1' with '1'
c Var 'aux1845' order represents '0' with '-17048'
c Encoding variable: aux1846 with domain: bool (representing constraint ((aux967 + aux970 + aux971)<=1))
c Var 'aux1846' direct represents '0' with '-17049'
c Var 'aux1846' direct represents '1' with '17049'
c Var 'aux1846' order represents '1' with '1'
c Var 'aux1846' order represents '0' with '-17049'
c Encoding variable: aux1847 with domain: bool (representing constraint (1<=(aux967 + aux970 + aux971)))
c Var 'aux1847' direct represents '0' with '-17050'
c Var 'aux1847' direct represents '1' with '17050'
c Var 'aux1847' order represents '1' with '1'
c Var 'aux1847' order represents '0' with '-17050'
c Encoding variable: aux1848 with domain: bool (representing constraint ((aux973 + aux976 + aux977)<=1))
c Var 'aux1848' direct represents '0' with '-17051'
c Var 'aux1848' direct represents '1' with '17051'
c Var 'aux1848' order represents '1' with '1'
c Var 'aux1848' order represents '0' with '-17051'
c Encoding variable: aux1849 with domain: bool (representing constraint (1<=(aux973 + aux976 + aux977)))
c Var 'aux1849' direct represents '0' with '-17052'
c Var 'aux1849' direct represents '1' with '17052'
c Var 'aux1849' order represents '1' with '1'
c Var 'aux1849' order represents '0' with '-17052'
c Encoding variable: aux1850 with domain: bool (representing constraint ((aux979 + aux982 + aux983)<=1))
c Var 'aux1850' direct represents '0' with '-17053'
c Var 'aux1850' direct represents '1' with '17053'
c Var 'aux1850' order represents '1' with '1'
c Var 'aux1850' order represents '0' with '-17053'
c Encoding variable: aux1851 with domain: bool (representing constraint (1<=(aux979 + aux982 + aux983)))
c Var 'aux1851' direct represents '0' with '-17054'
c Var 'aux1851' direct represents '1' with '17054'
c Var 'aux1851' order represents '1' with '1'
c Var 'aux1851' order represents '0' with '-17054'
c Encoding variable: aux1852 with domain: bool (representing constraint ((aux985 + aux988 + aux989)<=1))
c Var 'aux1852' direct represents '0' with '-17055'
c Var 'aux1852' direct represents '1' with '17055'
c Var 'aux1852' order represents '1' with '1'
c Var 'aux1852' order represents '0' with '-17055'
c Encoding variable: aux1853 with domain: bool (representing constraint (1<=(aux985 + aux988 + aux989)))
c Var 'aux1853' direct represents '0' with '-17056'
c Var 'aux1853' direct represents '1' with '17056'
c Var 'aux1853' order represents '1' with '1'
c Var 'aux1853' order represents '0' with '-17056'
c Encoding variable: aux1854 with domain: bool (representing constraint ((aux991 + aux994 + aux995)<=1))
c Var 'aux1854' direct represents '0' with '-17057'
c Var 'aux1854' direct represents '1' with '17057'
c Var 'aux1854' order represents '1' with '1'
c Var 'aux1854' order represents '0' with '-17057'
c Encoding variable: aux1855 with domain: bool (representing constraint (1<=(aux991 + aux994 + aux995)))
c Var 'aux1855' direct represents '0' with '-17058'
c Var 'aux1855' direct represents '1' with '17058'
c Var 'aux1855' order represents '1' with '1'
c Var 'aux1855' order represents '0' with '-17058'
c Encoding variable: aux1856 with domain: bool (representing constraint ((aux997 + aux1000 + aux1001)<=1))
c Var 'aux1856' direct represents '0' with '-17059'
c Var 'aux1856' direct represents '1' with '17059'
c Var 'aux1856' order represents '1' with '1'
c Var 'aux1856' order represents '0' with '-17059'
c Encoding variable: aux1857 with domain: bool (representing constraint (1<=(aux997 + aux1000 + aux1001)))
c Var 'aux1857' direct represents '0' with '-17060'
c Var 'aux1857' direct represents '1' with '17060'
c Var 'aux1857' order represents '1' with '1'
c Var 'aux1857' order represents '0' with '-17060'
c Encoding variable: aux1858 with domain: bool (representing constraint ((aux1003 + aux1006 + aux1007)<=1))
c Var 'aux1858' direct represents '0' with '-17061'
c Var 'aux1858' direct represents '1' with '17061'
c Var 'aux1858' order represents '1' with '1'
c Var 'aux1858' order represents '0' with '-17061'
c Encoding variable: aux1859 with domain: bool (representing constraint (1<=(aux1003 + aux1006 + aux1007)))
c Var 'aux1859' direct represents '0' with '-17062'
c Var 'aux1859' direct represents '1' with '17062'
c Var 'aux1859' order represents '1' with '1'
c Var 'aux1859' order represents '0' with '-17062'
c Encoding variable: aux1860 with domain: bool (representing constraint ((aux1009 + aux1012 + aux1013)<=1))
c Var 'aux1860' direct represents '0' with '-17063'
c Var 'aux1860' direct represents '1' with '17063'
c Var 'aux1860' order represents '1' with '1'
c Var 'aux1860' order represents '0' with '-17063'
c Encoding variable: aux1861 with domain: bool (representing constraint (1<=(aux1009 + aux1012 + aux1013)))
c Var 'aux1861' direct represents '0' with '-17064'
c Var 'aux1861' direct represents '1' with '17064'
c Var 'aux1861' order represents '1' with '1'
c Var 'aux1861' order represents '0' with '-17064'
c Encoding variable: aux1862 with domain: bool (representing constraint ((aux1015 + aux1018 + aux1019)<=1))
c Var 'aux1862' direct represents '0' with '-17065'
c Var 'aux1862' direct represents '1' with '17065'
c Var 'aux1862' order represents '1' with '1'
c Var 'aux1862' order represents '0' with '-17065'
c Encoding variable: aux1863 with domain: bool (representing constraint (1<=(aux1015 + aux1018 + aux1019)))
c Var 'aux1863' direct represents '0' with '-17066'
c Var 'aux1863' direct represents '1' with '17066'
c Var 'aux1863' order represents '1' with '1'
c Var 'aux1863' order represents '0' with '-17066'
c Encoding variable: aux1864 with domain: bool (representing constraint ((aux1021 + aux1024 + aux1025)<=1))
c Var 'aux1864' direct represents '0' with '-17067'
c Var 'aux1864' direct represents '1' with '17067'
c Var 'aux1864' order represents '1' with '1'
c Var 'aux1864' order represents '0' with '-17067'
c Encoding variable: aux1865 with domain: bool (representing constraint (1<=(aux1021 + aux1024 + aux1025)))
c Var 'aux1865' direct represents '0' with '-17068'
c Var 'aux1865' direct represents '1' with '17068'
c Var 'aux1865' order represents '1' with '1'
c Var 'aux1865' order represents '0' with '-17068'
c Encoding variable: aux1866 with domain: bool (representing constraint ((aux1027 + aux1030 + aux1031)<=1))
c Var 'aux1866' direct represents '0' with '-17069'
c Var 'aux1866' direct represents '1' with '17069'
c Var 'aux1866' order represents '1' with '1'
c Var 'aux1866' order represents '0' with '-17069'
c Encoding variable: aux1867 with domain: bool (representing constraint (1<=(aux1027 + aux1030 + aux1031)))
c Var 'aux1867' direct represents '0' with '-17070'
c Var 'aux1867' direct represents '1' with '17070'
c Var 'aux1867' order represents '1' with '1'
c Var 'aux1867' order represents '0' with '-17070'
c Encoding variable: aux1868 with domain: bool (representing constraint ((aux1033 + aux1036 + aux1037)<=1))
c Var 'aux1868' direct represents '0' with '-17071'
c Var 'aux1868' direct represents '1' with '17071'
c Var 'aux1868' order represents '1' with '1'
c Var 'aux1868' order represents '0' with '-17071'
c Encoding variable: aux1869 with domain: bool (representing constraint (1<=(aux1033 + aux1036 + aux1037)))
c Var 'aux1869' direct represents '0' with '-17072'
c Var 'aux1869' direct represents '1' with '17072'
c Var 'aux1869' order represents '1' with '1'
c Var 'aux1869' order represents '0' with '-17072'
c Encoding variable: aux1870 with domain: bool (representing constraint ((aux1039 + aux1042 + aux1043)<=1))
c Var 'aux1870' direct represents '0' with '-17073'
c Var 'aux1870' direct represents '1' with '17073'
c Var 'aux1870' order represents '1' with '1'
c Var 'aux1870' order represents '0' with '-17073'
c Encoding variable: aux1871 with domain: bool (representing constraint (1<=(aux1039 + aux1042 + aux1043)))
c Var 'aux1871' direct represents '0' with '-17074'
c Var 'aux1871' direct represents '1' with '17074'
c Var 'aux1871' order represents '1' with '1'
c Var 'aux1871' order represents '0' with '-17074'
c Encoding variable: aux1872 with domain: bool (representing constraint ((aux1045 + aux1048 + aux1049)<=1))
c Var 'aux1872' direct represents '0' with '-17075'
c Var 'aux1872' direct represents '1' with '17075'
c Var 'aux1872' order represents '1' with '1'
c Var 'aux1872' order represents '0' with '-17075'
c Encoding variable: aux1873 with domain: bool (representing constraint (1<=(aux1045 + aux1048 + aux1049)))
c Var 'aux1873' direct represents '0' with '-17076'
c Var 'aux1873' direct represents '1' with '17076'
c Var 'aux1873' order represents '1' with '1'
c Var 'aux1873' order represents '0' with '-17076'
c Encoding variable: aux1874 with domain: bool (representing constraint ((aux1051 + aux1054 + aux1055)<=1))
c Var 'aux1874' direct represents '0' with '-17077'
c Var 'aux1874' direct represents '1' with '17077'
c Var 'aux1874' order represents '1' with '1'
c Var 'aux1874' order represents '0' with '-17077'
c Encoding variable: aux1875 with domain: bool (representing constraint (1<=(aux1051 + aux1054 + aux1055)))
c Var 'aux1875' direct represents '0' with '-17078'
c Var 'aux1875' direct represents '1' with '17078'
c Var 'aux1875' order represents '1' with '1'
c Var 'aux1875' order represents '0' with '-17078'
c Encoding variable: aux1876 with domain: bool (representing constraint ((aux1057 + aux1060 + aux1061)<=1))
c Var 'aux1876' direct represents '0' with '-17079'
c Var 'aux1876' direct represents '1' with '17079'
c Var 'aux1876' order represents '1' with '1'
c Var 'aux1876' order represents '0' with '-17079'
c Encoding variable: aux1877 with domain: bool (representing constraint (1<=(aux1057 + aux1060 + aux1061)))
c Var 'aux1877' direct represents '0' with '-17080'
c Var 'aux1877' direct represents '1' with '17080'
c Var 'aux1877' order represents '1' with '1'
c Var 'aux1877' order represents '0' with '-17080'
c Encoding variable: aux1878 with domain: bool (representing constraint ((aux1063 + aux1066 + aux1067)<=1))
c Var 'aux1878' direct represents '0' with '-17081'
c Var 'aux1878' direct represents '1' with '17081'
c Var 'aux1878' order represents '1' with '1'
c Var 'aux1878' order represents '0' with '-17081'
c Encoding variable: aux1879 with domain: bool (representing constraint (1<=(aux1063 + aux1066 + aux1067)))
c Var 'aux1879' direct represents '0' with '-17082'
c Var 'aux1879' direct represents '1' with '17082'
c Var 'aux1879' order represents '1' with '1'
c Var 'aux1879' order represents '0' with '-17082'
c Encoding variable: aux1880 with domain: bool (representing constraint ((aux1069 + aux1072 + aux1073)<=1))
c Var 'aux1880' direct represents '0' with '-17083'
c Var 'aux1880' direct represents '1' with '17083'
c Var 'aux1880' order represents '1' with '1'
c Var 'aux1880' order represents '0' with '-17083'
c Encoding variable: aux1881 with domain: bool (representing constraint (1<=(aux1069 + aux1072 + aux1073)))
c Var 'aux1881' direct represents '0' with '-17084'
c Var 'aux1881' direct represents '1' with '17084'
c Var 'aux1881' order represents '1' with '1'
c Var 'aux1881' order represents '0' with '-17084'
c Encoding variable: aux1882 with domain: bool (representing constraint ((aux1075 + aux1078 + aux1079)<=1))
c Var 'aux1882' direct represents '0' with '-17085'
c Var 'aux1882' direct represents '1' with '17085'
c Var 'aux1882' order represents '1' with '1'
c Var 'aux1882' order represents '0' with '-17085'
c Encoding variable: aux1883 with domain: bool (representing constraint (1<=(aux1075 + aux1078 + aux1079)))
c Var 'aux1883' direct represents '0' with '-17086'
c Var 'aux1883' direct represents '1' with '17086'
c Var 'aux1883' order represents '1' with '1'
c Var 'aux1883' order represents '0' with '-17086'
c Encoding variable: aux1884 with domain: bool (representing constraint ((aux1081 + aux1084 + aux1085)<=1))
c Var 'aux1884' direct represents '0' with '-17087'
c Var 'aux1884' direct represents '1' with '17087'
c Var 'aux1884' order represents '1' with '1'
c Var 'aux1884' order represents '0' with '-17087'
c Encoding variable: aux1885 with domain: bool (representing constraint (1<=(aux1081 + aux1084 + aux1085)))
c Var 'aux1885' direct represents '0' with '-17088'
c Var 'aux1885' direct represents '1' with '17088'
c Var 'aux1885' order represents '1' with '1'
c Var 'aux1885' order represents '0' with '-17088'
c Encoding variable: aux1886 with domain: bool (representing constraint ((aux1087 + aux1090 + aux1091)<=1))
c Var 'aux1886' direct represents '0' with '-17089'
c Var 'aux1886' direct represents '1' with '17089'
c Var 'aux1886' order represents '1' with '1'
c Var 'aux1886' order represents '0' with '-17089'
c Encoding variable: aux1887 with domain: bool (representing constraint (1<=(aux1087 + aux1090 + aux1091)))
c Var 'aux1887' direct represents '0' with '-17090'
c Var 'aux1887' direct represents '1' with '17090'
c Var 'aux1887' order represents '1' with '1'
c Var 'aux1887' order represents '0' with '-17090'
c Encoding variable: aux1888 with domain: bool (representing constraint ((aux1093 + aux1096 + aux1097)<=1))
c Var 'aux1888' direct represents '0' with '-17091'
c Var 'aux1888' direct represents '1' with '17091'
c Var 'aux1888' order represents '1' with '1'
c Var 'aux1888' order represents '0' with '-17091'
c Encoding variable: aux1889 with domain: bool (representing constraint (1<=(aux1093 + aux1096 + aux1097)))
c Var 'aux1889' direct represents '0' with '-17092'
c Var 'aux1889' direct represents '1' with '17092'
c Var 'aux1889' order represents '1' with '1'
c Var 'aux1889' order represents '0' with '-17092'
c Encoding variable: aux1890 with domain: bool (representing constraint ((aux1099 + aux1102 + aux1103)<=1))
c Var 'aux1890' direct represents '0' with '-17093'
c Var 'aux1890' direct represents '1' with '17093'
c Var 'aux1890' order represents '1' with '1'
c Var 'aux1890' order represents '0' with '-17093'
c Encoding variable: aux1891 with domain: bool (representing constraint (1<=(aux1099 + aux1102 + aux1103)))
c Var 'aux1891' direct represents '0' with '-17094'
c Var 'aux1891' direct represents '1' with '17094'
c Var 'aux1891' order represents '1' with '1'
c Var 'aux1891' order represents '0' with '-17094'
c Encoding variable: aux1892 with domain: bool (representing constraint ((aux1105 + aux1108 + aux1109)<=1))
c Var 'aux1892' direct represents '0' with '-17095'
c Var 'aux1892' direct represents '1' with '17095'
c Var 'aux1892' order represents '1' with '1'
c Var 'aux1892' order represents '0' with '-17095'
c Encoding variable: aux1893 with domain: bool (representing constraint (1<=(aux1105 + aux1108 + aux1109)))
c Var 'aux1893' direct represents '0' with '-17096'
c Var 'aux1893' direct represents '1' with '17096'
c Var 'aux1893' order represents '1' with '1'
c Var 'aux1893' order represents '0' with '-17096'
c Encoding variable: aux1894 with domain: bool (representing constraint ((aux1111 + aux1114 + aux1115)<=1))
c Var 'aux1894' direct represents '0' with '-17097'
c Var 'aux1894' direct represents '1' with '17097'
c Var 'aux1894' order represents '1' with '1'
c Var 'aux1894' order represents '0' with '-17097'
c Encoding variable: aux1895 with domain: bool (representing constraint (1<=(aux1111 + aux1114 + aux1115)))
c Var 'aux1895' direct represents '0' with '-17098'
c Var 'aux1895' direct represents '1' with '17098'
c Var 'aux1895' order represents '1' with '1'
c Var 'aux1895' order represents '0' with '-17098'
c Encoding variable: aux1896 with domain: bool (representing constraint ((aux1117 + aux1120 + aux1121)<=1))
c Var 'aux1896' direct represents '0' with '-17099'
c Var 'aux1896' direct represents '1' with '17099'
c Var 'aux1896' order represents '1' with '1'
c Var 'aux1896' order represents '0' with '-17099'
c Encoding variable: aux1897 with domain: bool (representing constraint (1<=(aux1117 + aux1120 + aux1121)))
c Var 'aux1897' direct represents '0' with '-17100'
c Var 'aux1897' direct represents '1' with '17100'
c Var 'aux1897' order represents '1' with '1'
c Var 'aux1897' order represents '0' with '-17100'
c Encoding variable: aux1898 with domain: bool (representing constraint ((aux1123 + aux1126 + aux1127)<=1))
c Var 'aux1898' direct represents '0' with '-17101'
c Var 'aux1898' direct represents '1' with '17101'
c Var 'aux1898' order represents '1' with '1'
c Var 'aux1898' order represents '0' with '-17101'
c Encoding variable: aux1899 with domain: bool (representing constraint (1<=(aux1123 + aux1126 + aux1127)))
c Var 'aux1899' direct represents '0' with '-17102'
c Var 'aux1899' direct represents '1' with '17102'
c Var 'aux1899' order represents '1' with '1'
c Var 'aux1899' order represents '0' with '-17102'
c Encoding variable: aux1900 with domain: bool (representing constraint ((aux1129 + aux1132 + aux1133)<=1))
c Var 'aux1900' direct represents '0' with '-17103'
c Var 'aux1900' direct represents '1' with '17103'
c Var 'aux1900' order represents '1' with '1'
c Var 'aux1900' order represents '0' with '-17103'
c Encoding variable: aux1901 with domain: bool (representing constraint (1<=(aux1129 + aux1132 + aux1133)))
c Var 'aux1901' direct represents '0' with '-17104'
c Var 'aux1901' direct represents '1' with '17104'
c Var 'aux1901' order represents '1' with '1'
c Var 'aux1901' order represents '0' with '-17104'
c Encoding variable: aux1902 with domain: bool (representing constraint ((aux1135 + aux1138 + aux1139)<=1))
c Var 'aux1902' direct represents '0' with '-17105'
c Var 'aux1902' direct represents '1' with '17105'
c Var 'aux1902' order represents '1' with '1'
c Var 'aux1902' order represents '0' with '-17105'
c Encoding variable: aux1903 with domain: bool (representing constraint (1<=(aux1135 + aux1138 + aux1139)))
c Var 'aux1903' direct represents '0' with '-17106'
c Var 'aux1903' direct represents '1' with '17106'
c Var 'aux1903' order represents '1' with '1'
c Var 'aux1903' order represents '0' with '-17106'
c Encoding variable: aux1904 with domain: bool (representing constraint ((aux1141 + aux1144 + aux1145)<=1))
c Var 'aux1904' direct represents '0' with '-17107'
c Var 'aux1904' direct represents '1' with '17107'
c Var 'aux1904' order represents '1' with '1'
c Var 'aux1904' order represents '0' with '-17107'
c Encoding variable: aux1905 with domain: bool (representing constraint (1<=(aux1141 + aux1144 + aux1145)))
c Var 'aux1905' direct represents '0' with '-17108'
c Var 'aux1905' direct represents '1' with '17108'
c Var 'aux1905' order represents '1' with '1'
c Var 'aux1905' order represents '0' with '-17108'
c Encoding variable: aux1906 with domain: bool (representing constraint ((aux1147 + aux1150 + aux1151)<=1))
c Var 'aux1906' direct represents '0' with '-17109'
c Var 'aux1906' direct represents '1' with '17109'
c Var 'aux1906' order represents '1' with '1'
c Var 'aux1906' order represents '0' with '-17109'
c Encoding variable: aux1907 with domain: bool (representing constraint (1<=(aux1147 + aux1150 + aux1151)))
c Var 'aux1907' direct represents '0' with '-17110'
c Var 'aux1907' direct represents '1' with '17110'
c Var 'aux1907' order represents '1' with '1'
c Var 'aux1907' order represents '0' with '-17110'
c Encoding variable: aux1908 with domain: bool (representing constraint ((aux1153 + aux1156 + aux1157)<=1))
c Var 'aux1908' direct represents '0' with '-17111'
c Var 'aux1908' direct represents '1' with '17111'
c Var 'aux1908' order represents '1' with '1'
c Var 'aux1908' order represents '0' with '-17111'
c Encoding variable: aux1909 with domain: bool (representing constraint (1<=(aux1153 + aux1156 + aux1157)))
c Var 'aux1909' direct represents '0' with '-17112'
c Var 'aux1909' direct represents '1' with '17112'
c Var 'aux1909' order represents '1' with '1'
c Var 'aux1909' order represents '0' with '-17112'
c Encoding variable: aux1910 with domain: bool (representing constraint ((aux1159 + aux1162 + aux1163)<=1))
c Var 'aux1910' direct represents '0' with '-17113'
c Var 'aux1910' direct represents '1' with '17113'
c Var 'aux1910' order represents '1' with '1'
c Var 'aux1910' order represents '0' with '-17113'
c Encoding variable: aux1911 with domain: bool (representing constraint (1<=(aux1159 + aux1162 + aux1163)))
c Var 'aux1911' direct represents '0' with '-17114'
c Var 'aux1911' direct represents '1' with '17114'
c Var 'aux1911' order represents '1' with '1'
c Var 'aux1911' order represents '0' with '-17114'
c Encoding variable: aux1912 with domain: bool (representing constraint ((aux1165 + aux1168 + aux1169)<=1))
c Var 'aux1912' direct represents '0' with '-17115'
c Var 'aux1912' direct represents '1' with '17115'
c Var 'aux1912' order represents '1' with '1'
c Var 'aux1912' order represents '0' with '-17115'
c Encoding variable: aux1913 with domain: bool (representing constraint (1<=(aux1165 + aux1168 + aux1169)))
c Var 'aux1913' direct represents '0' with '-17116'
c Var 'aux1913' direct represents '1' with '17116'
c Var 'aux1913' order represents '1' with '1'
c Var 'aux1913' order represents '0' with '-17116'
c Encoding variable: aux1914 with domain: bool (representing constraint ((aux1171 + aux1174 + aux1175)<=1))
c Var 'aux1914' direct represents '0' with '-17117'
c Var 'aux1914' direct represents '1' with '17117'
c Var 'aux1914' order represents '1' with '1'
c Var 'aux1914' order represents '0' with '-17117'
c Encoding variable: aux1915 with domain: bool (representing constraint (1<=(aux1171 + aux1174 + aux1175)))
c Var 'aux1915' direct represents '0' with '-17118'
c Var 'aux1915' direct represents '1' with '17118'
c Var 'aux1915' order represents '1' with '1'
c Var 'aux1915' order represents '0' with '-17118'
c Encoding variable: aux1916 with domain: bool (representing constraint ((aux1177 + aux1180 + aux1181)<=1))
c Var 'aux1916' direct represents '0' with '-17119'
c Var 'aux1916' direct represents '1' with '17119'
c Var 'aux1916' order represents '1' with '1'
c Var 'aux1916' order represents '0' with '-17119'
c Encoding variable: aux1917 with domain: bool (representing constraint (1<=(aux1177 + aux1180 + aux1181)))
c Var 'aux1917' direct represents '0' with '-17120'
c Var 'aux1917' direct represents '1' with '17120'
c Var 'aux1917' order represents '1' with '1'
c Var 'aux1917' order represents '0' with '-17120'
c Encoding variable: aux1918 with domain: bool (representing constraint ((aux1183 + aux1186 + aux1187)<=1))
c Var 'aux1918' direct represents '0' with '-17121'
c Var 'aux1918' direct represents '1' with '17121'
c Var 'aux1918' order represents '1' with '1'
c Var 'aux1918' order represents '0' with '-17121'
c Encoding variable: aux1919 with domain: bool (representing constraint (1<=(aux1183 + aux1186 + aux1187)))
c Var 'aux1919' direct represents '0' with '-17122'
c Var 'aux1919' direct represents '1' with '17122'
c Var 'aux1919' order represents '1' with '1'
c Var 'aux1919' order represents '0' with '-17122'
c Encoding variable: aux1920 with domain: bool (representing constraint ((aux1189 + aux1192 + aux1193)<=1))
c Var 'aux1920' direct represents '0' with '-17123'
c Var 'aux1920' direct represents '1' with '17123'
c Var 'aux1920' order represents '1' with '1'
c Var 'aux1920' order represents '0' with '-17123'
c Encoding variable: aux1921 with domain: bool (representing constraint (1<=(aux1189 + aux1192 + aux1193)))
c Var 'aux1921' direct represents '0' with '-17124'
c Var 'aux1921' direct represents '1' with '17124'
c Var 'aux1921' order represents '1' with '1'
c Var 'aux1921' order represents '0' with '-17124'
c Encoding variable: aux1922 with domain: bool (representing constraint ((aux1195 + aux1198 + aux1199)<=1))
c Var 'aux1922' direct represents '0' with '-17125'
c Var 'aux1922' direct represents '1' with '17125'
c Var 'aux1922' order represents '1' with '1'
c Var 'aux1922' order represents '0' with '-17125'
c Encoding variable: aux1923 with domain: bool (representing constraint (1<=(aux1195 + aux1198 + aux1199)))
c Var 'aux1923' direct represents '0' with '-17126'
c Var 'aux1923' direct represents '1' with '17126'
c Var 'aux1923' order represents '1' with '1'
c Var 'aux1923' order represents '0' with '-17126'
c Encoding variable: aux1924 with domain: bool (representing constraint ((aux1201 + aux1204 + aux1205)<=1))
c Var 'aux1924' direct represents '0' with '-17127'
c Var 'aux1924' direct represents '1' with '17127'
c Var 'aux1924' order represents '1' with '1'
c Var 'aux1924' order represents '0' with '-17127'
c Encoding variable: aux1925 with domain: bool (representing constraint (1<=(aux1201 + aux1204 + aux1205)))
c Var 'aux1925' direct represents '0' with '-17128'
c Var 'aux1925' direct represents '1' with '17128'
c Var 'aux1925' order represents '1' with '1'
c Var 'aux1925' order represents '0' with '-17128'
c Encoding variable: aux1926 with domain: bool (representing constraint ((aux1207 + aux1210 + aux1211)<=1))
c Var 'aux1926' direct represents '0' with '-17129'
c Var 'aux1926' direct represents '1' with '17129'
c Var 'aux1926' order represents '1' with '1'
c Var 'aux1926' order represents '0' with '-17129'
c Encoding variable: aux1927 with domain: bool (representing constraint (1<=(aux1207 + aux1210 + aux1211)))
c Var 'aux1927' direct represents '0' with '-17130'
c Var 'aux1927' direct represents '1' with '17130'
c Var 'aux1927' order represents '1' with '1'
c Var 'aux1927' order represents '0' with '-17130'
c Encoding variable: aux1928 with domain: bool (representing constraint ((aux1213 + aux1216 + aux1217)<=1))
c Var 'aux1928' direct represents '0' with '-17131'
c Var 'aux1928' direct represents '1' with '17131'
c Var 'aux1928' order represents '1' with '1'
c Var 'aux1928' order represents '0' with '-17131'
c Encoding variable: aux1929 with domain: bool (representing constraint (1<=(aux1213 + aux1216 + aux1217)))
c Var 'aux1929' direct represents '0' with '-17132'
c Var 'aux1929' direct represents '1' with '17132'
c Var 'aux1929' order represents '1' with '1'
c Var 'aux1929' order represents '0' with '-17132'
c Encoding variable: aux1930 with domain: bool (representing constraint ((aux1219 + aux1222 + aux1223)<=1))
c Var 'aux1930' direct represents '0' with '-17133'
c Var 'aux1930' direct represents '1' with '17133'
c Var 'aux1930' order represents '1' with '1'
c Var 'aux1930' order represents '0' with '-17133'
c Encoding variable: aux1931 with domain: bool (representing constraint (1<=(aux1219 + aux1222 + aux1223)))
c Var 'aux1931' direct represents '0' with '-17134'
c Var 'aux1931' direct represents '1' with '17134'
c Var 'aux1931' order represents '1' with '1'
c Var 'aux1931' order represents '0' with '-17134'
c Encoding variable: aux1932 with domain: bool (representing constraint ((aux1225 + aux1228 + aux1229)<=1))
c Var 'aux1932' direct represents '0' with '-17135'
c Var 'aux1932' direct represents '1' with '17135'
c Var 'aux1932' order represents '1' with '1'
c Var 'aux1932' order represents '0' with '-17135'
c Encoding variable: aux1933 with domain: bool (representing constraint (1<=(aux1225 + aux1228 + aux1229)))
c Var 'aux1933' direct represents '0' with '-17136'
c Var 'aux1933' direct represents '1' with '17136'
c Var 'aux1933' order represents '1' with '1'
c Var 'aux1933' order represents '0' with '-17136'
c Encoding variable: aux1934 with domain: bool (representing constraint ((aux1231 + aux1234 + aux1235)<=1))
c Var 'aux1934' direct represents '0' with '-17137'
c Var 'aux1934' direct represents '1' with '17137'
c Var 'aux1934' order represents '1' with '1'
c Var 'aux1934' order represents '0' with '-17137'
c Encoding variable: aux1935 with domain: bool (representing constraint (1<=(aux1231 + aux1234 + aux1235)))
c Var 'aux1935' direct represents '0' with '-17138'
c Var 'aux1935' direct represents '1' with '17138'
c Var 'aux1935' order represents '1' with '1'
c Var 'aux1935' order represents '0' with '-17138'
c Encoding variable: aux1936 with domain: bool (representing constraint ((aux1237 + aux1240 + aux1241)<=1))
c Var 'aux1936' direct represents '0' with '-17139'
c Var 'aux1936' direct represents '1' with '17139'
c Var 'aux1936' order represents '1' with '1'
c Var 'aux1936' order represents '0' with '-17139'
c Encoding variable: aux1937 with domain: bool (representing constraint (1<=(aux1237 + aux1240 + aux1241)))
c Var 'aux1937' direct represents '0' with '-17140'
c Var 'aux1937' direct represents '1' with '17140'
c Var 'aux1937' order represents '1' with '1'
c Var 'aux1937' order represents '0' with '-17140'
c Encoding variable: aux1938 with domain: bool (representing constraint ((aux1243 + aux1246 + aux1247)<=1))
c Var 'aux1938' direct represents '0' with '-17141'
c Var 'aux1938' direct represents '1' with '17141'
c Var 'aux1938' order represents '1' with '1'
c Var 'aux1938' order represents '0' with '-17141'
c Encoding variable: aux1939 with domain: bool (representing constraint (1<=(aux1243 + aux1246 + aux1247)))
c Var 'aux1939' direct represents '0' with '-17142'
c Var 'aux1939' direct represents '1' with '17142'
c Var 'aux1939' order represents '1' with '1'
c Var 'aux1939' order represents '0' with '-17142'
c Encoding variable: aux1940 with domain: bool (representing constraint ((aux1249 + aux1252 + aux1253)<=1))
c Var 'aux1940' direct represents '0' with '-17143'
c Var 'aux1940' direct represents '1' with '17143'
c Var 'aux1940' order represents '1' with '1'
c Var 'aux1940' order represents '0' with '-17143'
c Encoding variable: aux1941 with domain: bool (representing constraint (1<=(aux1249 + aux1252 + aux1253)))
c Var 'aux1941' direct represents '0' with '-17144'
c Var 'aux1941' direct represents '1' with '17144'
c Var 'aux1941' order represents '1' with '1'
c Var 'aux1941' order represents '0' with '-17144'
c Encoding variable: aux1942 with domain: bool (representing constraint ((aux1255 + aux1258 + aux1259)<=1))
c Var 'aux1942' direct represents '0' with '-17145'
c Var 'aux1942' direct represents '1' with '17145'
c Var 'aux1942' order represents '1' with '1'
c Var 'aux1942' order represents '0' with '-17145'
c Encoding variable: aux1943 with domain: bool (representing constraint (1<=(aux1255 + aux1258 + aux1259)))
c Var 'aux1943' direct represents '0' with '-17146'
c Var 'aux1943' direct represents '1' with '17146'
c Var 'aux1943' order represents '1' with '1'
c Var 'aux1943' order represents '0' with '-17146'
c Encoding variable: aux1944 with domain: bool (representing constraint ((aux1261 + aux1264 + aux1265)<=1))
c Var 'aux1944' direct represents '0' with '-17147'
c Var 'aux1944' direct represents '1' with '17147'
c Var 'aux1944' order represents '1' with '1'
c Var 'aux1944' order represents '0' with '-17147'
c Encoding variable: aux1945 with domain: bool (representing constraint (1<=(aux1261 + aux1264 + aux1265)))
c Var 'aux1945' direct represents '0' with '-17148'
c Var 'aux1945' direct represents '1' with '17148'
c Var 'aux1945' order represents '1' with '1'
c Var 'aux1945' order represents '0' with '-17148'
c Encoding variable: aux1946 with domain: bool (representing constraint ((aux1267 + aux1270 + aux1271)<=1))
c Var 'aux1946' direct represents '0' with '-17149'
c Var 'aux1946' direct represents '1' with '17149'
c Var 'aux1946' order represents '1' with '1'
c Var 'aux1946' order represents '0' with '-17149'
c Encoding variable: aux1947 with domain: bool (representing constraint (1<=(aux1267 + aux1270 + aux1271)))
c Var 'aux1947' direct represents '0' with '-17150'
c Var 'aux1947' direct represents '1' with '17150'
c Var 'aux1947' order represents '1' with '1'
c Var 'aux1947' order represents '0' with '-17150'
c Encoding variable: aux1948 with domain: bool (representing constraint ((aux1273 + aux1276 + aux1277)<=1))
c Var 'aux1948' direct represents '0' with '-17151'
c Var 'aux1948' direct represents '1' with '17151'
c Var 'aux1948' order represents '1' with '1'
c Var 'aux1948' order represents '0' with '-17151'
c Encoding variable: aux1949 with domain: bool (representing constraint (1<=(aux1273 + aux1276 + aux1277)))
c Var 'aux1949' direct represents '0' with '-17152'
c Var 'aux1949' direct represents '1' with '17152'
c Var 'aux1949' order represents '1' with '1'
c Var 'aux1949' order represents '0' with '-17152'
c Encoding variable: aux1950 with domain: bool (representing constraint ((aux1279 + aux1282 + aux1283)<=1))
c Var 'aux1950' direct represents '0' with '-17153'
c Var 'aux1950' direct represents '1' with '17153'
c Var 'aux1950' order represents '1' with '1'
c Var 'aux1950' order represents '0' with '-17153'
c Encoding variable: aux1951 with domain: bool (representing constraint (1<=(aux1279 + aux1282 + aux1283)))
c Var 'aux1951' direct represents '0' with '-17154'
c Var 'aux1951' direct represents '1' with '17154'
c Var 'aux1951' order represents '1' with '1'
c Var 'aux1951' order represents '0' with '-17154'
c Encoding variable: aux1952 with domain: bool (representing constraint ((aux1285 + aux1288 + aux1289)<=1))
c Var 'aux1952' direct represents '0' with '-17155'
c Var 'aux1952' direct represents '1' with '17155'
c Var 'aux1952' order represents '1' with '1'
c Var 'aux1952' order represents '0' with '-17155'
c Encoding variable: aux1953 with domain: bool (representing constraint (1<=(aux1285 + aux1288 + aux1289)))
c Var 'aux1953' direct represents '0' with '-17156'
c Var 'aux1953' direct represents '1' with '17156'
c Var 'aux1953' order represents '1' with '1'
c Var 'aux1953' order represents '0' with '-17156'
c Encoding variable: aux1954 with domain: bool (representing constraint ((aux1291 + aux1294 + aux1295)<=1))
c Var 'aux1954' direct represents '0' with '-17157'
c Var 'aux1954' direct represents '1' with '17157'
c Var 'aux1954' order represents '1' with '1'
c Var 'aux1954' order represents '0' with '-17157'
c Encoding variable: aux1955 with domain: bool (representing constraint (1<=(aux1291 + aux1294 + aux1295)))
c Var 'aux1955' direct represents '0' with '-17158'
c Var 'aux1955' direct represents '1' with '17158'
c Var 'aux1955' order represents '1' with '1'
c Var 'aux1955' order represents '0' with '-17158'
c Encoding variable: aux1956 with domain: bool (representing constraint ((aux1297 + aux1300 + aux1301)<=1))
c Var 'aux1956' direct represents '0' with '-17159'
c Var 'aux1956' direct represents '1' with '17159'
c Var 'aux1956' order represents '1' with '1'
c Var 'aux1956' order represents '0' with '-17159'
c Encoding variable: aux1957 with domain: bool (representing constraint (1<=(aux1297 + aux1300 + aux1301)))
c Var 'aux1957' direct represents '0' with '-17160'
c Var 'aux1957' direct represents '1' with '17160'
c Var 'aux1957' order represents '1' with '1'
c Var 'aux1957' order represents '0' with '-17160'
c Encoding variable: aux1958 with domain: bool (representing constraint ((aux1303 + aux1306 + aux1307)<=1))
c Var 'aux1958' direct represents '0' with '-17161'
c Var 'aux1958' direct represents '1' with '17161'
c Var 'aux1958' order represents '1' with '1'
c Var 'aux1958' order represents '0' with '-17161'
c Encoding variable: aux1959 with domain: bool (representing constraint (1<=(aux1303 + aux1306 + aux1307)))
c Var 'aux1959' direct represents '0' with '-17162'
c Var 'aux1959' direct represents '1' with '17162'
c Var 'aux1959' order represents '1' with '1'
c Var 'aux1959' order represents '0' with '-17162'
c Encoding variable: aux1960 with domain: bool (representing constraint ((aux1309 + aux1312 + aux1313)<=1))
c Var 'aux1960' direct represents '0' with '-17163'
c Var 'aux1960' direct represents '1' with '17163'
c Var 'aux1960' order represents '1' with '1'
c Var 'aux1960' order represents '0' with '-17163'
c Encoding variable: aux1961 with domain: bool (representing constraint (1<=(aux1309 + aux1312 + aux1313)))
c Var 'aux1961' direct represents '0' with '-17164'
c Var 'aux1961' direct represents '1' with '17164'
c Var 'aux1961' order represents '1' with '1'
c Var 'aux1961' order represents '0' with '-17164'
c Encoding variable: aux1962 with domain: bool (representing constraint ((aux1315 + aux1318 + aux1319)<=1))
c Var 'aux1962' direct represents '0' with '-17165'
c Var 'aux1962' direct represents '1' with '17165'
c Var 'aux1962' order represents '1' with '1'
c Var 'aux1962' order represents '0' with '-17165'
c Encoding variable: aux1963 with domain: bool (representing constraint (1<=(aux1315 + aux1318 + aux1319)))
c Var 'aux1963' direct represents '0' with '-17166'
c Var 'aux1963' direct represents '1' with '17166'
c Var 'aux1963' order represents '1' with '1'
c Var 'aux1963' order represents '0' with '-17166'
c Encoding variable: aux1964 with domain: bool (representing constraint ((aux1321 + aux1324 + aux1325)<=1))
c Var 'aux1964' direct represents '0' with '-17167'
c Var 'aux1964' direct represents '1' with '17167'
c Var 'aux1964' order represents '1' with '1'
c Var 'aux1964' order represents '0' with '-17167'
c Encoding variable: aux1965 with domain: bool (representing constraint (1<=(aux1321 + aux1324 + aux1325)))
c Var 'aux1965' direct represents '0' with '-17168'
c Var 'aux1965' direct represents '1' with '17168'
c Var 'aux1965' order represents '1' with '1'
c Var 'aux1965' order represents '0' with '-17168'
c Encoding variable: aux1966 with domain: bool (representing constraint ((aux1327 + aux1330 + aux1331)<=1))
c Var 'aux1966' direct represents '0' with '-17169'
c Var 'aux1966' direct represents '1' with '17169'
c Var 'aux1966' order represents '1' with '1'
c Var 'aux1966' order represents '0' with '-17169'
c Encoding variable: aux1967 with domain: bool (representing constraint (1<=(aux1327 + aux1330 + aux1331)))
c Var 'aux1967' direct represents '0' with '-17170'
c Var 'aux1967' direct represents '1' with '17170'
c Var 'aux1967' order represents '1' with '1'
c Var 'aux1967' order represents '0' with '-17170'
c Encoding variable: aux1968 with domain: bool (representing constraint ((aux1333 + aux1336 + aux1337)<=1))
c Var 'aux1968' direct represents '0' with '-17171'
c Var 'aux1968' direct represents '1' with '17171'
c Var 'aux1968' order represents '1' with '1'
c Var 'aux1968' order represents '0' with '-17171'
c Encoding variable: aux1969 with domain: bool (representing constraint (1<=(aux1333 + aux1336 + aux1337)))
c Var 'aux1969' direct represents '0' with '-17172'
c Var 'aux1969' direct represents '1' with '17172'
c Var 'aux1969' order represents '1' with '1'
c Var 'aux1969' order represents '0' with '-17172'
c Encoding variable: aux1970 with domain: bool (representing constraint ((aux1339 + aux1342 + aux1343)<=1))
c Var 'aux1970' direct represents '0' with '-17173'
c Var 'aux1970' direct represents '1' with '17173'
c Var 'aux1970' order represents '1' with '1'
c Var 'aux1970' order represents '0' with '-17173'
c Encoding variable: aux1971 with domain: bool (representing constraint (1<=(aux1339 + aux1342 + aux1343)))
c Var 'aux1971' direct represents '0' with '-17174'
c Var 'aux1971' direct represents '1' with '17174'
c Var 'aux1971' order represents '1' with '1'
c Var 'aux1971' order represents '0' with '-17174'
c Encoding variable: aux1972 with domain: bool (representing constraint ((aux1345 + aux1348 + aux1349)<=1))
c Var 'aux1972' direct represents '0' with '-17175'
c Var 'aux1972' direct represents '1' with '17175'
c Var 'aux1972' order represents '1' with '1'
c Var 'aux1972' order represents '0' with '-17175'
c Encoding variable: aux1973 with domain: bool (representing constraint (1<=(aux1345 + aux1348 + aux1349)))
c Var 'aux1973' direct represents '0' with '-17176'
c Var 'aux1973' direct represents '1' with '17176'
c Var 'aux1973' order represents '1' with '1'
c Var 'aux1973' order represents '0' with '-17176'
c Encoding variable: aux1974 with domain: bool (representing constraint ((aux1351 + aux1354 + aux1355)<=1))
c Var 'aux1974' direct represents '0' with '-17177'
c Var 'aux1974' direct represents '1' with '17177'
c Var 'aux1974' order represents '1' with '1'
c Var 'aux1974' order represents '0' with '-17177'
c Encoding variable: aux1975 with domain: bool (representing constraint (1<=(aux1351 + aux1354 + aux1355)))
c Var 'aux1975' direct represents '0' with '-17178'
c Var 'aux1975' direct represents '1' with '17178'
c Var 'aux1975' order represents '1' with '1'
c Var 'aux1975' order represents '0' with '-17178'
c Encoding variable: aux1976 with domain: bool (representing constraint ((aux1357 + aux1360 + aux1361)<=1))
c Var 'aux1976' direct represents '0' with '-17179'
c Var 'aux1976' direct represents '1' with '17179'
c Var 'aux1976' order represents '1' with '1'
c Var 'aux1976' order represents '0' with '-17179'
c Encoding variable: aux1977 with domain: bool (representing constraint (1<=(aux1357 + aux1360 + aux1361)))
c Var 'aux1977' direct represents '0' with '-17180'
c Var 'aux1977' direct represents '1' with '17180'
c Var 'aux1977' order represents '1' with '1'
c Var 'aux1977' order represents '0' with '-17180'
c Encoding variable: aux1978 with domain: bool (representing constraint ((aux1363 + aux1366 + aux1367)<=1))
c Var 'aux1978' direct represents '0' with '-17181'
c Var 'aux1978' direct represents '1' with '17181'
c Var 'aux1978' order represents '1' with '1'
c Var 'aux1978' order represents '0' with '-17181'
c Encoding variable: aux1979 with domain: bool (representing constraint (1<=(aux1363 + aux1366 + aux1367)))
c Var 'aux1979' direct represents '0' with '-17182'
c Var 'aux1979' direct represents '1' with '17182'
c Var 'aux1979' order represents '1' with '1'
c Var 'aux1979' order represents '0' with '-17182'
c Encoding variable: aux1980 with domain: bool (representing constraint ((aux1369 + aux1372 + aux1373)<=1))
c Var 'aux1980' direct represents '0' with '-17183'
c Var 'aux1980' direct represents '1' with '17183'
c Var 'aux1980' order represents '1' with '1'
c Var 'aux1980' order represents '0' with '-17183'
c Encoding variable: aux1981 with domain: bool (representing constraint (1<=(aux1369 + aux1372 + aux1373)))
c Var 'aux1981' direct represents '0' with '-17184'
c Var 'aux1981' direct represents '1' with '17184'
c Var 'aux1981' order represents '1' with '1'
c Var 'aux1981' order represents '0' with '-17184'
c Encoding variable: aux1982 with domain: bool (representing constraint ((aux1375 + aux1378 + aux1379)<=1))
c Var 'aux1982' direct represents '0' with '-17185'
c Var 'aux1982' direct represents '1' with '17185'
c Var 'aux1982' order represents '1' with '1'
c Var 'aux1982' order represents '0' with '-17185'
c Encoding variable: aux1983 with domain: bool (representing constraint (1<=(aux1375 + aux1378 + aux1379)))
c Var 'aux1983' direct represents '0' with '-17186'
c Var 'aux1983' direct represents '1' with '17186'
c Var 'aux1983' order represents '1' with '1'
c Var 'aux1983' order represents '0' with '-17186'
c Encoding variable: aux1984 with domain: bool (representing constraint ((aux1381 + aux1384 + aux1385)<=1))
c Var 'aux1984' direct represents '0' with '-17187'
c Var 'aux1984' direct represents '1' with '17187'
c Var 'aux1984' order represents '1' with '1'
c Var 'aux1984' order represents '0' with '-17187'
c Encoding variable: aux1985 with domain: bool (representing constraint (1<=(aux1381 + aux1384 + aux1385)))
c Var 'aux1985' direct represents '0' with '-17188'
c Var 'aux1985' direct represents '1' with '17188'
c Var 'aux1985' order represents '1' with '1'
c Var 'aux1985' order represents '0' with '-17188'
c Encoding variable: aux1986 with domain: bool (representing constraint ((aux1387 + aux1390 + aux1391)<=1))
c Var 'aux1986' direct represents '0' with '-17189'
c Var 'aux1986' direct represents '1' with '17189'
c Var 'aux1986' order represents '1' with '1'
c Var 'aux1986' order represents '0' with '-17189'
c Encoding variable: aux1987 with domain: bool (representing constraint (1<=(aux1387 + aux1390 + aux1391)))
c Var 'aux1987' direct represents '0' with '-17190'
c Var 'aux1987' direct represents '1' with '17190'
c Var 'aux1987' order represents '1' with '1'
c Var 'aux1987' order represents '0' with '-17190'
c Encoding variable: aux1988 with domain: bool (representing constraint ((aux1393 + aux1396 + aux1397)<=1))
c Var 'aux1988' direct represents '0' with '-17191'
c Var 'aux1988' direct represents '1' with '17191'
c Var 'aux1988' order represents '1' with '1'
c Var 'aux1988' order represents '0' with '-17191'
c Encoding variable: aux1989 with domain: bool (representing constraint (1<=(aux1393 + aux1396 + aux1397)))
c Var 'aux1989' direct represents '0' with '-17192'
c Var 'aux1989' direct represents '1' with '17192'
c Var 'aux1989' order represents '1' with '1'
c Var 'aux1989' order represents '0' with '-17192'
c Encoding variable: aux1990 with domain: bool (representing constraint ((aux1399 + aux1402 + aux1403)<=1))
c Var 'aux1990' direct represents '0' with '-17193'
c Var 'aux1990' direct represents '1' with '17193'
c Var 'aux1990' order represents '1' with '1'
c Var 'aux1990' order represents '0' with '-17193'
c Encoding variable: aux1991 with domain: bool (representing constraint (1<=(aux1399 + aux1402 + aux1403)))
c Var 'aux1991' direct represents '0' with '-17194'
c Var 'aux1991' direct represents '1' with '17194'
c Var 'aux1991' order represents '1' with '1'
c Var 'aux1991' order represents '0' with '-17194'
c Encoding variable: aux1992 with domain: bool (representing constraint ((aux1405 + aux1408 + aux1409)<=1))
c Var 'aux1992' direct represents '0' with '-17195'
c Var 'aux1992' direct represents '1' with '17195'
c Var 'aux1992' order represents '1' with '1'
c Var 'aux1992' order represents '0' with '-17195'
c Encoding variable: aux1993 with domain: bool (representing constraint (1<=(aux1405 + aux1408 + aux1409)))
c Var 'aux1993' direct represents '0' with '-17196'
c Var 'aux1993' direct represents '1' with '17196'
c Var 'aux1993' order represents '1' with '1'
c Var 'aux1993' order represents '0' with '-17196'
c Encoding variable: aux1994 with domain: bool (representing constraint ((aux1411 + aux1414 + aux1415)<=1))
c Var 'aux1994' direct represents '0' with '-17197'
c Var 'aux1994' direct represents '1' with '17197'
c Var 'aux1994' order represents '1' with '1'
c Var 'aux1994' order represents '0' with '-17197'
c Encoding variable: aux1995 with domain: bool (representing constraint (1<=(aux1411 + aux1414 + aux1415)))
c Var 'aux1995' direct represents '0' with '-17198'
c Var 'aux1995' direct represents '1' with '17198'
c Var 'aux1995' order represents '1' with '1'
c Var 'aux1995' order represents '0' with '-17198'
c Encoding variable: aux1996 with domain: bool (representing constraint ((aux1417 + aux1420 + aux1421)<=1))
c Var 'aux1996' direct represents '0' with '-17199'
c Var 'aux1996' direct represents '1' with '17199'
c Var 'aux1996' order represents '1' with '1'
c Var 'aux1996' order represents '0' with '-17199'
c Encoding variable: aux1997 with domain: bool (representing constraint (1<=(aux1417 + aux1420 + aux1421)))
c Var 'aux1997' direct represents '0' with '-17200'
c Var 'aux1997' direct represents '1' with '17200'
c Var 'aux1997' order represents '1' with '1'
c Var 'aux1997' order represents '0' with '-17200'
c Encoding variable: aux1998 with domain: bool (representing constraint (max_left_00001_00001_00001=max_left_00001_00001_00002))
c Var 'aux1998' direct represents '0' with '-17201'
c Var 'aux1998' direct represents '1' with '17201'
c Var 'aux1998' order represents '1' with '1'
c Var 'aux1998' order represents '0' with '-17201'
c Encoding variable: aux1999 with domain: bool (representing constraint (variant_fields_00001_00001_00002=max_left_00001_00001_00002))
c Var 'aux1999' direct represents '0' with '-17202'
c Var 'aux1999' direct represents '1' with '17202'
c Var 'aux1999' order represents '1' with '1'
c Var 'aux1999' order represents '0' with '-17202'
c Encoding variable: aux2000 with domain: bool (representing constraint (max_left_00001_00001_00002=max_left_00001_00001_00003))
c Var 'aux2000' direct represents '0' with '-17203'
c Var 'aux2000' direct represents '1' with '17203'
c Var 'aux2000' order represents '1' with '1'
c Var 'aux2000' order represents '0' with '-17203'
c Encoding variable: aux2001 with domain: bool (representing constraint (variant_fields_00001_00001_00003=max_left_00001_00001_00003))
c Var 'aux2001' direct represents '0' with '-17204'
c Var 'aux2001' direct represents '1' with '17204'
c Var 'aux2001' order represents '1' with '1'
c Var 'aux2001' order represents '0' with '-17204'
c Encoding variable: aux2002 with domain: bool (representing constraint (max_left_00001_00001_00003=max_left_00001_00001_00004))
c Var 'aux2002' direct represents '0' with '-17205'
c Var 'aux2002' direct represents '1' with '17205'
c Var 'aux2002' order represents '1' with '1'
c Var 'aux2002' order represents '0' with '-17205'
c Encoding variable: aux2003 with domain: bool (representing constraint (variant_fields_00001_00001_00004=max_left_00001_00001_00004))
c Var 'aux2003' direct represents '0' with '-17206'
c Var 'aux2003' direct represents '1' with '17206'
c Var 'aux2003' order represents '1' with '1'
c Var 'aux2003' order represents '0' with '-17206'
c Encoding variable: aux2004 with domain: bool (representing constraint (max_left_00001_00001_00004=max_left_00001_00001_00005))
c Var 'aux2004' direct represents '0' with '-17207'
c Var 'aux2004' direct represents '1' with '17207'
c Var 'aux2004' order represents '1' with '1'
c Var 'aux2004' order represents '0' with '-17207'
c Encoding variable: aux2005 with domain: bool (representing constraint (variant_fields_00001_00001_00005=max_left_00001_00001_00005))
c Var 'aux2005' direct represents '0' with '-17208'
c Var 'aux2005' direct represents '1' with '17208'
c Var 'aux2005' order represents '1' with '1'
c Var 'aux2005' order represents '0' with '-17208'
c Encoding variable: aux2006 with domain: bool (representing constraint (max_left_00001_00001_00005=max_left_00001_00001_00006))
c Var 'aux2006' direct represents '0' with '-17209'
c Var 'aux2006' direct represents '1' with '17209'
c Var 'aux2006' order represents '1' with '1'
c Var 'aux2006' order represents '0' with '-17209'
c Encoding variable: aux2007 with domain: bool (representing constraint (variant_fields_00001_00001_00006=max_left_00001_00001_00006))
c Var 'aux2007' direct represents '0' with '-17210'
c Var 'aux2007' direct represents '1' with '17210'
c Var 'aux2007' order represents '1' with '1'
c Var 'aux2007' order represents '0' with '-17210'
c Encoding variable: aux2008 with domain: bool (representing constraint (max_left_00001_00001_00006=max_left_00001_00001_00007))
c Var 'aux2008' direct represents '0' with '-17211'
c Var 'aux2008' direct represents '1' with '17211'
c Var 'aux2008' order represents '1' with '1'
c Var 'aux2008' order represents '0' with '-17211'
c Encoding variable: aux2009 with domain: bool (representing constraint (variant_fields_00001_00001_00007=max_left_00001_00001_00007))
c Var 'aux2009' direct represents '0' with '-17212'
c Var 'aux2009' direct represents '1' with '17212'
c Var 'aux2009' order represents '1' with '1'
c Var 'aux2009' order represents '0' with '-17212'
c Encoding variable: aux2010 with domain: bool (representing constraint (max_left_00001_00001_00007=max_left_00001_00001_00008))
c Var 'aux2010' direct represents '0' with '-17213'
c Var 'aux2010' direct represents '1' with '17213'
c Var 'aux2010' order represents '1' with '1'
c Var 'aux2010' order represents '0' with '-17213'
c Encoding variable: aux2011 with domain: bool (representing constraint (variant_fields_00001_00001_00008=max_left_00001_00001_00008))
c Var 'aux2011' direct represents '0' with '-17214'
c Var 'aux2011' direct represents '1' with '17214'
c Var 'aux2011' order represents '1' with '1'
c Var 'aux2011' order represents '0' with '-17214'
c Encoding variable: aux2012 with domain: bool (representing constraint (max_left_00001_00001_00008=max_left_00001_00001_00009))
c Var 'aux2012' direct represents '0' with '-17215'
c Var 'aux2012' direct represents '1' with '17215'
c Var 'aux2012' order represents '1' with '1'
c Var 'aux2012' order represents '0' with '-17215'
c Encoding variable: aux2013 with domain: bool (representing constraint (variant_fields_00001_00001_00009=max_left_00001_00001_00009))
c Var 'aux2013' direct represents '0' with '-17216'
c Var 'aux2013' direct represents '1' with '17216'
c Var 'aux2013' order represents '1' with '1'
c Var 'aux2013' order represents '0' with '-17216'
c Encoding variable: aux2014 with domain: bool (representing constraint (max_left_00001_00002_00001=max_left_00001_00002_00002))
c Var 'aux2014' direct represents '0' with '-17217'
c Var 'aux2014' direct represents '1' with '17217'
c Var 'aux2014' order represents '1' with '1'
c Var 'aux2014' order represents '0' with '-17217'
c Encoding variable: aux2015 with domain: bool (representing constraint (variant_fields_00001_00002_00002=max_left_00001_00002_00002))
c Var 'aux2015' direct represents '0' with '-17218'
c Var 'aux2015' direct represents '1' with '17218'
c Var 'aux2015' order represents '1' with '1'
c Var 'aux2015' order represents '0' with '-17218'
c Encoding variable: aux2016 with domain: bool (representing constraint (max_left_00001_00002_00002=max_left_00001_00002_00003))
c Var 'aux2016' direct represents '0' with '-17219'
c Var 'aux2016' direct represents '1' with '17219'
c Var 'aux2016' order represents '1' with '1'
c Var 'aux2016' order represents '0' with '-17219'
c Encoding variable: aux2017 with domain: bool (representing constraint (variant_fields_00001_00002_00003=max_left_00001_00002_00003))
c Var 'aux2017' direct represents '0' with '-17220'
c Var 'aux2017' direct represents '1' with '17220'
c Var 'aux2017' order represents '1' with '1'
c Var 'aux2017' order represents '0' with '-17220'
c Encoding variable: aux2018 with domain: bool (representing constraint (max_left_00001_00002_00003=max_left_00001_00002_00004))
c Var 'aux2018' direct represents '0' with '-17221'
c Var 'aux2018' direct represents '1' with '17221'
c Var 'aux2018' order represents '1' with '1'
c Var 'aux2018' order represents '0' with '-17221'
c Encoding variable: aux2019 with domain: bool (representing constraint (variant_fields_00001_00002_00004=max_left_00001_00002_00004))
c Var 'aux2019' direct represents '0' with '-17222'
c Var 'aux2019' direct represents '1' with '17222'
c Var 'aux2019' order represents '1' with '1'
c Var 'aux2019' order represents '0' with '-17222'
c Encoding variable: aux2020 with domain: bool (representing constraint (max_left_00001_00002_00004=max_left_00001_00002_00005))
c Var 'aux2020' direct represents '0' with '-17223'
c Var 'aux2020' direct represents '1' with '17223'
c Var 'aux2020' order represents '1' with '1'
c Var 'aux2020' order represents '0' with '-17223'
c Encoding variable: aux2021 with domain: bool (representing constraint (variant_fields_00001_00002_00005=max_left_00001_00002_00005))
c Var 'aux2021' direct represents '0' with '-17224'
c Var 'aux2021' direct represents '1' with '17224'
c Var 'aux2021' order represents '1' with '1'
c Var 'aux2021' order represents '0' with '-17224'
c Encoding variable: aux2022 with domain: bool (representing constraint (max_left_00001_00002_00005=max_left_00001_00002_00006))
c Var 'aux2022' direct represents '0' with '-17225'
c Var 'aux2022' direct represents '1' with '17225'
c Var 'aux2022' order represents '1' with '1'
c Var 'aux2022' order represents '0' with '-17225'
c Encoding variable: aux2023 with domain: bool (representing constraint (variant_fields_00001_00002_00006=max_left_00001_00002_00006))
c Var 'aux2023' direct represents '0' with '-17226'
c Var 'aux2023' direct represents '1' with '17226'
c Var 'aux2023' order represents '1' with '1'
c Var 'aux2023' order represents '0' with '-17226'
c Encoding variable: aux2024 with domain: bool (representing constraint (max_left_00001_00002_00006=max_left_00001_00002_00007))
c Var 'aux2024' direct represents '0' with '-17227'
c Var 'aux2024' direct represents '1' with '17227'
c Var 'aux2024' order represents '1' with '1'
c Var 'aux2024' order represents '0' with '-17227'
c Encoding variable: aux2025 with domain: bool (representing constraint (variant_fields_00001_00002_00007=max_left_00001_00002_00007))
c Var 'aux2025' direct represents '0' with '-17228'
c Var 'aux2025' direct represents '1' with '17228'
c Var 'aux2025' order represents '1' with '1'
c Var 'aux2025' order represents '0' with '-17228'
c Encoding variable: aux2026 with domain: bool (representing constraint (max_left_00001_00002_00007=max_left_00001_00002_00008))
c Var 'aux2026' direct represents '0' with '-17229'
c Var 'aux2026' direct represents '1' with '17229'
c Var 'aux2026' order represents '1' with '1'
c Var 'aux2026' order represents '0' with '-17229'
c Encoding variable: aux2027 with domain: bool (representing constraint (variant_fields_00001_00002_00008=max_left_00001_00002_00008))
c Var 'aux2027' direct represents '0' with '-17230'
c Var 'aux2027' direct represents '1' with '17230'
c Var 'aux2027' order represents '1' with '1'
c Var 'aux2027' order represents '0' with '-17230'
c Encoding variable: aux2028 with domain: bool (representing constraint (max_left_00001_00002_00008=max_left_00001_00002_00009))
c Var 'aux2028' direct represents '0' with '-17231'
c Var 'aux2028' direct represents '1' with '17231'
c Var 'aux2028' order represents '1' with '1'
c Var 'aux2028' order represents '0' with '-17231'
c Encoding variable: aux2029 with domain: bool (representing constraint (variant_fields_00001_00002_00009=max_left_00001_00002_00009))
c Var 'aux2029' direct represents '0' with '-17232'
c Var 'aux2029' direct represents '1' with '17232'
c Var 'aux2029' order represents '1' with '1'
c Var 'aux2029' order represents '0' with '-17232'
c Encoding variable: aux2030 with domain: bool (representing constraint (max_left_00001_00003_00001=max_left_00001_00003_00002))
c Var 'aux2030' direct represents '0' with '-17233'
c Var 'aux2030' direct represents '1' with '17233'
c Var 'aux2030' order represents '1' with '1'
c Var 'aux2030' order represents '0' with '-17233'
c Encoding variable: aux2031 with domain: bool (representing constraint (variant_fields_00001_00003_00002=max_left_00001_00003_00002))
c Var 'aux2031' direct represents '0' with '-17234'
c Var 'aux2031' direct represents '1' with '17234'
c Var 'aux2031' order represents '1' with '1'
c Var 'aux2031' order represents '0' with '-17234'
c Encoding variable: aux2032 with domain: bool (representing constraint (max_left_00001_00003_00002=max_left_00001_00003_00003))
c Var 'aux2032' direct represents '0' with '-17235'
c Var 'aux2032' direct represents '1' with '17235'
c Var 'aux2032' order represents '1' with '1'
c Var 'aux2032' order represents '0' with '-17235'
c Encoding variable: aux2033 with domain: bool (representing constraint (variant_fields_00001_00003_00003=max_left_00001_00003_00003))
c Var 'aux2033' direct represents '0' with '-17236'
c Var 'aux2033' direct represents '1' with '17236'
c Var 'aux2033' order represents '1' with '1'
c Var 'aux2033' order represents '0' with '-17236'
c Encoding variable: aux2034 with domain: bool (representing constraint (max_left_00001_00003_00003=max_left_00001_00003_00004))
c Var 'aux2034' direct represents '0' with '-17237'
c Var 'aux2034' direct represents '1' with '17237'
c Var 'aux2034' order represents '1' with '1'
c Var 'aux2034' order represents '0' with '-17237'
c Encoding variable: aux2035 with domain: bool (representing constraint (variant_fields_00001_00003_00004=max_left_00001_00003_00004))
c Var 'aux2035' direct represents '0' with '-17238'
c Var 'aux2035' direct represents '1' with '17238'
c Var 'aux2035' order represents '1' with '1'
c Var 'aux2035' order represents '0' with '-17238'
c Encoding variable: aux2036 with domain: bool (representing constraint (max_left_00001_00003_00004=max_left_00001_00003_00005))
c Var 'aux2036' direct represents '0' with '-17239'
c Var 'aux2036' direct represents '1' with '17239'
c Var 'aux2036' order represents '1' with '1'
c Var 'aux2036' order represents '0' with '-17239'
c Encoding variable: aux2037 with domain: bool (representing constraint (variant_fields_00001_00003_00005=max_left_00001_00003_00005))
c Var 'aux2037' direct represents '0' with '-17240'
c Var 'aux2037' direct represents '1' with '17240'
c Var 'aux2037' order represents '1' with '1'
c Var 'aux2037' order represents '0' with '-17240'
c Encoding variable: aux2038 with domain: bool (representing constraint (max_left_00001_00003_00005=max_left_00001_00003_00006))
c Var 'aux2038' direct represents '0' with '-17241'
c Var 'aux2038' direct represents '1' with '17241'
c Var 'aux2038' order represents '1' with '1'
c Var 'aux2038' order represents '0' with '-17241'
c Encoding variable: aux2039 with domain: bool (representing constraint (variant_fields_00001_00003_00006=max_left_00001_00003_00006))
c Var 'aux2039' direct represents '0' with '-17242'
c Var 'aux2039' direct represents '1' with '17242'
c Var 'aux2039' order represents '1' with '1'
c Var 'aux2039' order represents '0' with '-17242'
c Encoding variable: aux2040 with domain: bool (representing constraint (max_left_00001_00003_00006=max_left_00001_00003_00007))
c Var 'aux2040' direct represents '0' with '-17243'
c Var 'aux2040' direct represents '1' with '17243'
c Var 'aux2040' order represents '1' with '1'
c Var 'aux2040' order represents '0' with '-17243'
c Encoding variable: aux2041 with domain: bool (representing constraint (variant_fields_00001_00003_00007=max_left_00001_00003_00007))
c Var 'aux2041' direct represents '0' with '-17244'
c Var 'aux2041' direct represents '1' with '17244'
c Var 'aux2041' order represents '1' with '1'
c Var 'aux2041' order represents '0' with '-17244'
c Encoding variable: aux2042 with domain: bool (representing constraint (max_left_00001_00003_00007=max_left_00001_00003_00008))
c Var 'aux2042' direct represents '0' with '-17245'
c Var 'aux2042' direct represents '1' with '17245'
c Var 'aux2042' order represents '1' with '1'
c Var 'aux2042' order represents '0' with '-17245'
c Encoding variable: aux2043 with domain: bool (representing constraint (variant_fields_00001_00003_00008=max_left_00001_00003_00008))
c Var 'aux2043' direct represents '0' with '-17246'
c Var 'aux2043' direct represents '1' with '17246'
c Var 'aux2043' order represents '1' with '1'
c Var 'aux2043' order represents '0' with '-17246'
c Encoding variable: aux2044 with domain: bool (representing constraint (max_left_00001_00003_00008=max_left_00001_00003_00009))
c Var 'aux2044' direct represents '0' with '-17247'
c Var 'aux2044' direct represents '1' with '17247'
c Var 'aux2044' order represents '1' with '1'
c Var 'aux2044' order represents '0' with '-17247'
c Encoding variable: aux2045 with domain: bool (representing constraint (variant_fields_00001_00003_00009=max_left_00001_00003_00009))
c Var 'aux2045' direct represents '0' with '-17248'
c Var 'aux2045' direct represents '1' with '17248'
c Var 'aux2045' order represents '1' with '1'
c Var 'aux2045' order represents '0' with '-17248'
c Encoding variable: aux2046 with domain: bool (representing constraint (max_left_00001_00004_00001=max_left_00001_00004_00002))
c Var 'aux2046' direct represents '0' with '-17249'
c Var 'aux2046' direct represents '1' with '17249'
c Var 'aux2046' order represents '1' with '1'
c Var 'aux2046' order represents '0' with '-17249'
c Encoding variable: aux2047 with domain: bool (representing constraint (variant_fields_00001_00004_00002=max_left_00001_00004_00002))
c Var 'aux2047' direct represents '0' with '-17250'
c Var 'aux2047' direct represents '1' with '17250'
c Var 'aux2047' order represents '1' with '1'
c Var 'aux2047' order represents '0' with '-17250'
c Encoding variable: aux2048 with domain: bool (representing constraint (max_left_00001_00004_00002=max_left_00001_00004_00003))
c Var 'aux2048' direct represents '0' with '-17251'
c Var 'aux2048' direct represents '1' with '17251'
c Var 'aux2048' order represents '1' with '1'
c Var 'aux2048' order represents '0' with '-17251'
c Encoding variable: aux2049 with domain: bool (representing constraint (variant_fields_00001_00004_00003=max_left_00001_00004_00003))
c Var 'aux2049' direct represents '0' with '-17252'
c Var 'aux2049' direct represents '1' with '17252'
c Var 'aux2049' order represents '1' with '1'
c Var 'aux2049' order represents '0' with '-17252'
c Encoding variable: aux2050 with domain: bool (representing constraint (max_left_00001_00004_00003=max_left_00001_00004_00004))
c Var 'aux2050' direct represents '0' with '-17253'
c Var 'aux2050' direct represents '1' with '17253'
c Var 'aux2050' order represents '1' with '1'
c Var 'aux2050' order represents '0' with '-17253'
c Encoding variable: aux2051 with domain: bool (representing constraint (variant_fields_00001_00004_00004=max_left_00001_00004_00004))
c Var 'aux2051' direct represents '0' with '-17254'
c Var 'aux2051' direct represents '1' with '17254'
c Var 'aux2051' order represents '1' with '1'
c Var 'aux2051' order represents '0' with '-17254'
c Encoding variable: aux2052 with domain: bool (representing constraint (max_left_00001_00004_00004=max_left_00001_00004_00005))
c Var 'aux2052' direct represents '0' with '-17255'
c Var 'aux2052' direct represents '1' with '17255'
c Var 'aux2052' order represents '1' with '1'
c Var 'aux2052' order represents '0' with '-17255'
c Encoding variable: aux2053 with domain: bool (representing constraint (variant_fields_00001_00004_00005=max_left_00001_00004_00005))
c Var 'aux2053' direct represents '0' with '-17256'
c Var 'aux2053' direct represents '1' with '17256'
c Var 'aux2053' order represents '1' with '1'
c Var 'aux2053' order represents '0' with '-17256'
c Encoding variable: aux2054 with domain: bool (representing constraint (max_left_00001_00004_00005=max_left_00001_00004_00006))
c Var 'aux2054' direct represents '0' with '-17257'
c Var 'aux2054' direct represents '1' with '17257'
c Var 'aux2054' order represents '1' with '1'
c Var 'aux2054' order represents '0' with '-17257'
c Encoding variable: aux2055 with domain: bool (representing constraint (variant_fields_00001_00004_00006=max_left_00001_00004_00006))
c Var 'aux2055' direct represents '0' with '-17258'
c Var 'aux2055' direct represents '1' with '17258'
c Var 'aux2055' order represents '1' with '1'
c Var 'aux2055' order represents '0' with '-17258'
c Encoding variable: aux2056 with domain: bool (representing constraint (max_left_00001_00004_00006=max_left_00001_00004_00007))
c Var 'aux2056' direct represents '0' with '-17259'
c Var 'aux2056' direct represents '1' with '17259'
c Var 'aux2056' order represents '1' with '1'
c Var 'aux2056' order represents '0' with '-17259'
c Encoding variable: aux2057 with domain: bool (representing constraint (variant_fields_00001_00004_00007=max_left_00001_00004_00007))
c Var 'aux2057' direct represents '0' with '-17260'
c Var 'aux2057' direct represents '1' with '17260'
c Var 'aux2057' order represents '1' with '1'
c Var 'aux2057' order represents '0' with '-17260'
c Encoding variable: aux2058 with domain: bool (representing constraint (max_left_00001_00004_00007=max_left_00001_00004_00008))
c Var 'aux2058' direct represents '0' with '-17261'
c Var 'aux2058' direct represents '1' with '17261'
c Var 'aux2058' order represents '1' with '1'
c Var 'aux2058' order represents '0' with '-17261'
c Encoding variable: aux2059 with domain: bool (representing constraint (variant_fields_00001_00004_00008=max_left_00001_00004_00008))
c Var 'aux2059' direct represents '0' with '-17262'
c Var 'aux2059' direct represents '1' with '17262'
c Var 'aux2059' order represents '1' with '1'
c Var 'aux2059' order represents '0' with '-17262'
c Encoding variable: aux2060 with domain: bool (representing constraint (max_left_00001_00004_00008=max_left_00001_00004_00009))
c Var 'aux2060' direct represents '0' with '-17263'
c Var 'aux2060' direct represents '1' with '17263'
c Var 'aux2060' order represents '1' with '1'
c Var 'aux2060' order represents '0' with '-17263'
c Encoding variable: aux2061 with domain: bool (representing constraint (variant_fields_00001_00004_00009=max_left_00001_00004_00009))
c Var 'aux2061' direct represents '0' with '-17264'
c Var 'aux2061' direct represents '1' with '17264'
c Var 'aux2061' order represents '1' with '1'
c Var 'aux2061' order represents '0' with '-17264'
c Encoding variable: aux2062 with domain: bool (representing constraint (max_left_00001_00005_00001=max_left_00001_00005_00002))
c Var 'aux2062' direct represents '0' with '-17265'
c Var 'aux2062' direct represents '1' with '17265'
c Var 'aux2062' order represents '1' with '1'
c Var 'aux2062' order represents '0' with '-17265'
c Encoding variable: aux2063 with domain: bool (representing constraint (variant_fields_00001_00005_00002=max_left_00001_00005_00002))
c Var 'aux2063' direct represents '0' with '-17266'
c Var 'aux2063' direct represents '1' with '17266'
c Var 'aux2063' order represents '1' with '1'
c Var 'aux2063' order represents '0' with '-17266'
c Encoding variable: aux2064 with domain: bool (representing constraint (max_left_00001_00005_00002=max_left_00001_00005_00003))
c Var 'aux2064' direct represents '0' with '-17267'
c Var 'aux2064' direct represents '1' with '17267'
c Var 'aux2064' order represents '1' with '1'
c Var 'aux2064' order represents '0' with '-17267'
c Encoding variable: aux2065 with domain: bool (representing constraint (variant_fields_00001_00005_00003=max_left_00001_00005_00003))
c Var 'aux2065' direct represents '0' with '-17268'
c Var 'aux2065' direct represents '1' with '17268'
c Var 'aux2065' order represents '1' with '1'
c Var 'aux2065' order represents '0' with '-17268'
c Encoding variable: aux2066 with domain: bool (representing constraint (max_left_00001_00005_00003=max_left_00001_00005_00004))
c Var 'aux2066' direct represents '0' with '-17269'
c Var 'aux2066' direct represents '1' with '17269'
c Var 'aux2066' order represents '1' with '1'
c Var 'aux2066' order represents '0' with '-17269'
c Encoding variable: aux2067 with domain: bool (representing constraint (variant_fields_00001_00005_00004=max_left_00001_00005_00004))
c Var 'aux2067' direct represents '0' with '-17270'
c Var 'aux2067' direct represents '1' with '17270'
c Var 'aux2067' order represents '1' with '1'
c Var 'aux2067' order represents '0' with '-17270'
c Encoding variable: aux2068 with domain: bool (representing constraint (max_left_00001_00005_00004=max_left_00001_00005_00005))
c Var 'aux2068' direct represents '0' with '-17271'
c Var 'aux2068' direct represents '1' with '17271'
c Var 'aux2068' order represents '1' with '1'
c Var 'aux2068' order represents '0' with '-17271'
c Encoding variable: aux2069 with domain: bool (representing constraint (variant_fields_00001_00005_00005=max_left_00001_00005_00005))
c Var 'aux2069' direct represents '0' with '-17272'
c Var 'aux2069' direct represents '1' with '17272'
c Var 'aux2069' order represents '1' with '1'
c Var 'aux2069' order represents '0' with '-17272'
c Encoding variable: aux2070 with domain: bool (representing constraint (max_left_00001_00005_00005=max_left_00001_00005_00006))
c Var 'aux2070' direct represents '0' with '-17273'
c Var 'aux2070' direct represents '1' with '17273'
c Var 'aux2070' order represents '1' with '1'
c Var 'aux2070' order represents '0' with '-17273'
c Encoding variable: aux2071 with domain: bool (representing constraint (variant_fields_00001_00005_00006=max_left_00001_00005_00006))
c Var 'aux2071' direct represents '0' with '-17274'
c Var 'aux2071' direct represents '1' with '17274'
c Var 'aux2071' order represents '1' with '1'
c Var 'aux2071' order represents '0' with '-17274'
c Encoding variable: aux2072 with domain: bool (representing constraint (max_left_00001_00005_00006=max_left_00001_00005_00007))
c Var 'aux2072' direct represents '0' with '-17275'
c Var 'aux2072' direct represents '1' with '17275'
c Var 'aux2072' order represents '1' with '1'
c Var 'aux2072' order represents '0' with '-17275'
c Encoding variable: aux2073 with domain: bool (representing constraint (variant_fields_00001_00005_00007=max_left_00001_00005_00007))
c Var 'aux2073' direct represents '0' with '-17276'
c Var 'aux2073' direct represents '1' with '17276'
c Var 'aux2073' order represents '1' with '1'
c Var 'aux2073' order represents '0' with '-17276'
c Encoding variable: aux2074 with domain: bool (representing constraint (max_left_00001_00005_00007=max_left_00001_00005_00008))
c Var 'aux2074' direct represents '0' with '-17277'
c Var 'aux2074' direct represents '1' with '17277'
c Var 'aux2074' order represents '1' with '1'
c Var 'aux2074' order represents '0' with '-17277'
c Encoding variable: aux2075 with domain: bool (representing constraint (variant_fields_00001_00005_00008=max_left_00001_00005_00008))
c Var 'aux2075' direct represents '0' with '-17278'
c Var 'aux2075' direct represents '1' with '17278'
c Var 'aux2075' order represents '1' with '1'
c Var 'aux2075' order represents '0' with '-17278'
c Encoding variable: aux2076 with domain: bool (representing constraint (max_left_00001_00005_00008=max_left_00001_00005_00009))
c Var 'aux2076' direct represents '0' with '-17279'
c Var 'aux2076' direct represents '1' with '17279'
c Var 'aux2076' order represents '1' with '1'
c Var 'aux2076' order represents '0' with '-17279'
c Encoding variable: aux2077 with domain: bool (representing constraint (variant_fields_00001_00005_00009=max_left_00001_00005_00009))
c Var 'aux2077' direct represents '0' with '-17280'
c Var 'aux2077' direct represents '1' with '17280'
c Var 'aux2077' order represents '1' with '1'
c Var 'aux2077' order represents '0' with '-17280'
c Encoding variable: aux2078 with domain: bool (representing constraint (max_left_00001_00006_00001=max_left_00001_00006_00002))
c Var 'aux2078' direct represents '0' with '-17281'
c Var 'aux2078' direct represents '1' with '17281'
c Var 'aux2078' order represents '1' with '1'
c Var 'aux2078' order represents '0' with '-17281'
c Encoding variable: aux2079 with domain: bool (representing constraint (variant_fields_00001_00006_00002=max_left_00001_00006_00002))
c Var 'aux2079' direct represents '0' with '-17282'
c Var 'aux2079' direct represents '1' with '17282'
c Var 'aux2079' order represents '1' with '1'
c Var 'aux2079' order represents '0' with '-17282'
c Encoding variable: aux2080 with domain: bool (representing constraint (max_left_00001_00006_00002=max_left_00001_00006_00003))
c Var 'aux2080' direct represents '0' with '-17283'
c Var 'aux2080' direct represents '1' with '17283'
c Var 'aux2080' order represents '1' with '1'
c Var 'aux2080' order represents '0' with '-17283'
c Encoding variable: aux2081 with domain: bool (representing constraint (variant_fields_00001_00006_00003=max_left_00001_00006_00003))
c Var 'aux2081' direct represents '0' with '-17284'
c Var 'aux2081' direct represents '1' with '17284'
c Var 'aux2081' order represents '1' with '1'
c Var 'aux2081' order represents '0' with '-17284'
c Encoding variable: aux2082 with domain: bool (representing constraint (max_left_00001_00006_00003=max_left_00001_00006_00004))
c Var 'aux2082' direct represents '0' with '-17285'
c Var 'aux2082' direct represents '1' with '17285'
c Var 'aux2082' order represents '1' with '1'
c Var 'aux2082' order represents '0' with '-17285'
c Encoding variable: aux2083 with domain: bool (representing constraint (variant_fields_00001_00006_00004=max_left_00001_00006_00004))
c Var 'aux2083' direct represents '0' with '-17286'
c Var 'aux2083' direct represents '1' with '17286'
c Var 'aux2083' order represents '1' with '1'
c Var 'aux2083' order represents '0' with '-17286'
c Encoding variable: aux2084 with domain: bool (representing constraint (max_left_00001_00006_00004=max_left_00001_00006_00005))
c Var 'aux2084' direct represents '0' with '-17287'
c Var 'aux2084' direct represents '1' with '17287'
c Var 'aux2084' order represents '1' with '1'
c Var 'aux2084' order represents '0' with '-17287'
c Encoding variable: aux2085 with domain: bool (representing constraint (variant_fields_00001_00006_00005=max_left_00001_00006_00005))
c Var 'aux2085' direct represents '0' with '-17288'
c Var 'aux2085' direct represents '1' with '17288'
c Var 'aux2085' order represents '1' with '1'
c Var 'aux2085' order represents '0' with '-17288'
c Encoding variable: aux2086 with domain: bool (representing constraint (max_left_00001_00006_00005=max_left_00001_00006_00006))
c Var 'aux2086' direct represents '0' with '-17289'
c Var 'aux2086' direct represents '1' with '17289'
c Var 'aux2086' order represents '1' with '1'
c Var 'aux2086' order represents '0' with '-17289'
c Encoding variable: aux2087 with domain: bool (representing constraint (variant_fields_00001_00006_00006=max_left_00001_00006_00006))
c Var 'aux2087' direct represents '0' with '-17290'
c Var 'aux2087' direct represents '1' with '17290'
c Var 'aux2087' order represents '1' with '1'
c Var 'aux2087' order represents '0' with '-17290'
c Encoding variable: aux2088 with domain: bool (representing constraint (max_left_00001_00006_00006=max_left_00001_00006_00007))
c Var 'aux2088' direct represents '0' with '-17291'
c Var 'aux2088' direct represents '1' with '17291'
c Var 'aux2088' order represents '1' with '1'
c Var 'aux2088' order represents '0' with '-17291'
c Encoding variable: aux2089 with domain: bool (representing constraint (variant_fields_00001_00006_00007=max_left_00001_00006_00007))
c Var 'aux2089' direct represents '0' with '-17292'
c Var 'aux2089' direct represents '1' with '17292'
c Var 'aux2089' order represents '1' with '1'
c Var 'aux2089' order represents '0' with '-17292'
c Encoding variable: aux2090 with domain: bool (representing constraint (max_left_00001_00006_00007=max_left_00001_00006_00008))
c Var 'aux2090' direct represents '0' with '-17293'
c Var 'aux2090' direct represents '1' with '17293'
c Var 'aux2090' order represents '1' with '1'
c Var 'aux2090' order represents '0' with '-17293'
c Encoding variable: aux2091 with domain: bool (representing constraint (variant_fields_00001_00006_00008=max_left_00001_00006_00008))
c Var 'aux2091' direct represents '0' with '-17294'
c Var 'aux2091' direct represents '1' with '17294'
c Var 'aux2091' order represents '1' with '1'
c Var 'aux2091' order represents '0' with '-17294'
c Encoding variable: aux2092 with domain: bool (representing constraint (max_left_00001_00006_00008=max_left_00001_00006_00009))
c Var 'aux2092' direct represents '0' with '-17295'
c Var 'aux2092' direct represents '1' with '17295'
c Var 'aux2092' order represents '1' with '1'
c Var 'aux2092' order represents '0' with '-17295'
c Encoding variable: aux2093 with domain: bool (representing constraint (variant_fields_00001_00006_00009=max_left_00001_00006_00009))
c Var 'aux2093' direct represents '0' with '-17296'
c Var 'aux2093' direct represents '1' with '17296'
c Var 'aux2093' order represents '1' with '1'
c Var 'aux2093' order represents '0' with '-17296'
c Encoding variable: aux2094 with domain: bool (representing constraint (max_left_00001_00007_00001=max_left_00001_00007_00002))
c Var 'aux2094' direct represents '0' with '-17297'
c Var 'aux2094' direct represents '1' with '17297'
c Var 'aux2094' order represents '1' with '1'
c Var 'aux2094' order represents '0' with '-17297'
c Encoding variable: aux2095 with domain: bool (representing constraint (variant_fields_00001_00007_00002=max_left_00001_00007_00002))
c Var 'aux2095' direct represents '0' with '-17298'
c Var 'aux2095' direct represents '1' with '17298'
c Var 'aux2095' order represents '1' with '1'
c Var 'aux2095' order represents '0' with '-17298'
c Encoding variable: aux2096 with domain: bool (representing constraint (max_left_00001_00007_00002=max_left_00001_00007_00003))
c Var 'aux2096' direct represents '0' with '-17299'
c Var 'aux2096' direct represents '1' with '17299'
c Var 'aux2096' order represents '1' with '1'
c Var 'aux2096' order represents '0' with '-17299'
c Encoding variable: aux2097 with domain: bool (representing constraint (variant_fields_00001_00007_00003=max_left_00001_00007_00003))
c Var 'aux2097' direct represents '0' with '-17300'
c Var 'aux2097' direct represents '1' with '17300'
c Var 'aux2097' order represents '1' with '1'
c Var 'aux2097' order represents '0' with '-17300'
c Encoding variable: aux2098 with domain: bool (representing constraint (max_left_00001_00007_00003=max_left_00001_00007_00004))
c Var 'aux2098' direct represents '0' with '-17301'
c Var 'aux2098' direct represents '1' with '17301'
c Var 'aux2098' order represents '1' with '1'
c Var 'aux2098' order represents '0' with '-17301'
c Encoding variable: aux2099 with domain: bool (representing constraint (variant_fields_00001_00007_00004=max_left_00001_00007_00004))
c Var 'aux2099' direct represents '0' with '-17302'
c Var 'aux2099' direct represents '1' with '17302'
c Var 'aux2099' order represents '1' with '1'
c Var 'aux2099' order represents '0' with '-17302'
c Encoding variable: aux2100 with domain: bool (representing constraint (max_left_00001_00007_00004=max_left_00001_00007_00005))
c Var 'aux2100' direct represents '0' with '-17303'
c Var 'aux2100' direct represents '1' with '17303'
c Var 'aux2100' order represents '1' with '1'
c Var 'aux2100' order represents '0' with '-17303'
c Encoding variable: aux2101 with domain: bool (representing constraint (variant_fields_00001_00007_00005=max_left_00001_00007_00005))
c Var 'aux2101' direct represents '0' with '-17304'
c Var 'aux2101' direct represents '1' with '17304'
c Var 'aux2101' order represents '1' with '1'
c Var 'aux2101' order represents '0' with '-17304'
c Encoding variable: aux2102 with domain: bool (representing constraint (max_left_00001_00007_00005=max_left_00001_00007_00006))
c Var 'aux2102' direct represents '0' with '-17305'
c Var 'aux2102' direct represents '1' with '17305'
c Var 'aux2102' order represents '1' with '1'
c Var 'aux2102' order represents '0' with '-17305'
c Encoding variable: aux2103 with domain: bool (representing constraint (variant_fields_00001_00007_00006=max_left_00001_00007_00006))
c Var 'aux2103' direct represents '0' with '-17306'
c Var 'aux2103' direct represents '1' with '17306'
c Var 'aux2103' order represents '1' with '1'
c Var 'aux2103' order represents '0' with '-17306'
c Encoding variable: aux2104 with domain: bool (representing constraint (max_left_00001_00007_00006=max_left_00001_00007_00007))
c Var 'aux2104' direct represents '0' with '-17307'
c Var 'aux2104' direct represents '1' with '17307'
c Var 'aux2104' order represents '1' with '1'
c Var 'aux2104' order represents '0' with '-17307'
c Encoding variable: aux2105 with domain: bool (representing constraint (variant_fields_00001_00007_00007=max_left_00001_00007_00007))
c Var 'aux2105' direct represents '0' with '-17308'
c Var 'aux2105' direct represents '1' with '17308'
c Var 'aux2105' order represents '1' with '1'
c Var 'aux2105' order represents '0' with '-17308'
c Encoding variable: aux2106 with domain: bool (representing constraint (max_left_00001_00007_00007=max_left_00001_00007_00008))
c Var 'aux2106' direct represents '0' with '-17309'
c Var 'aux2106' direct represents '1' with '17309'
c Var 'aux2106' order represents '1' with '1'
c Var 'aux2106' order represents '0' with '-17309'
c Encoding variable: aux2107 with domain: bool (representing constraint (variant_fields_00001_00007_00008=max_left_00001_00007_00008))
c Var 'aux2107' direct represents '0' with '-17310'
c Var 'aux2107' direct represents '1' with '17310'
c Var 'aux2107' order represents '1' with '1'
c Var 'aux2107' order represents '0' with '-17310'
c Encoding variable: aux2108 with domain: bool (representing constraint (max_left_00001_00007_00008=max_left_00001_00007_00009))
c Var 'aux2108' direct represents '0' with '-17311'
c Var 'aux2108' direct represents '1' with '17311'
c Var 'aux2108' order represents '1' with '1'
c Var 'aux2108' order represents '0' with '-17311'
c Encoding variable: aux2109 with domain: bool (representing constraint (variant_fields_00001_00007_00009=max_left_00001_00007_00009))
c Var 'aux2109' direct represents '0' with '-17312'
c Var 'aux2109' direct represents '1' with '17312'
c Var 'aux2109' order represents '1' with '1'
c Var 'aux2109' order represents '0' with '-17312'
c Encoding variable: aux2110 with domain: bool (representing constraint (max_left_00001_00008_00001=max_left_00001_00008_00002))
c Var 'aux2110' direct represents '0' with '-17313'
c Var 'aux2110' direct represents '1' with '17313'
c Var 'aux2110' order represents '1' with '1'
c Var 'aux2110' order represents '0' with '-17313'
c Encoding variable: aux2111 with domain: bool (representing constraint (variant_fields_00001_00008_00002=max_left_00001_00008_00002))
c Var 'aux2111' direct represents '0' with '-17314'
c Var 'aux2111' direct represents '1' with '17314'
c Var 'aux2111' order represents '1' with '1'
c Var 'aux2111' order represents '0' with '-17314'
c Encoding variable: aux2112 with domain: bool (representing constraint (max_left_00001_00008_00002=max_left_00001_00008_00003))
c Var 'aux2112' direct represents '0' with '-17315'
c Var 'aux2112' direct represents '1' with '17315'
c Var 'aux2112' order represents '1' with '1'
c Var 'aux2112' order represents '0' with '-17315'
c Encoding variable: aux2113 with domain: bool (representing constraint (variant_fields_00001_00008_00003=max_left_00001_00008_00003))
c Var 'aux2113' direct represents '0' with '-17316'
c Var 'aux2113' direct represents '1' with '17316'
c Var 'aux2113' order represents '1' with '1'
c Var 'aux2113' order represents '0' with '-17316'
c Encoding variable: aux2114 with domain: bool (representing constraint (max_left_00001_00008_00003=max_left_00001_00008_00004))
c Var 'aux2114' direct represents '0' with '-17317'
c Var 'aux2114' direct represents '1' with '17317'
c Var 'aux2114' order represents '1' with '1'
c Var 'aux2114' order represents '0' with '-17317'
c Encoding variable: aux2115 with domain: bool (representing constraint (variant_fields_00001_00008_00004=max_left_00001_00008_00004))
c Var 'aux2115' direct represents '0' with '-17318'
c Var 'aux2115' direct represents '1' with '17318'
c Var 'aux2115' order represents '1' with '1'
c Var 'aux2115' order represents '0' with '-17318'
c Encoding variable: aux2116 with domain: bool (representing constraint (max_left_00001_00008_00004=max_left_00001_00008_00005))
c Var 'aux2116' direct represents '0' with '-17319'
c Var 'aux2116' direct represents '1' with '17319'
c Var 'aux2116' order represents '1' with '1'
c Var 'aux2116' order represents '0' with '-17319'
c Encoding variable: aux2117 with domain: bool (representing constraint (variant_fields_00001_00008_00005=max_left_00001_00008_00005))
c Var 'aux2117' direct represents '0' with '-17320'
c Var 'aux2117' direct represents '1' with '17320'
c Var 'aux2117' order represents '1' with '1'
c Var 'aux2117' order represents '0' with '-17320'
c Encoding variable: aux2118 with domain: bool (representing constraint (max_left_00001_00008_00005=max_left_00001_00008_00006))
c Var 'aux2118' direct represents '0' with '-17321'
c Var 'aux2118' direct represents '1' with '17321'
c Var 'aux2118' order represents '1' with '1'
c Var 'aux2118' order represents '0' with '-17321'
c Encoding variable: aux2119 with domain: bool (representing constraint (variant_fields_00001_00008_00006=max_left_00001_00008_00006))
c Var 'aux2119' direct represents '0' with '-17322'
c Var 'aux2119' direct represents '1' with '17322'
c Var 'aux2119' order represents '1' with '1'
c Var 'aux2119' order represents '0' with '-17322'
c Encoding variable: aux2120 with domain: bool (representing constraint (max_left_00001_00008_00006=max_left_00001_00008_00007))
c Var 'aux2120' direct represents '0' with '-17323'
c Var 'aux2120' direct represents '1' with '17323'
c Var 'aux2120' order represents '1' with '1'
c Var 'aux2120' order represents '0' with '-17323'
c Encoding variable: aux2121 with domain: bool (representing constraint (variant_fields_00001_00008_00007=max_left_00001_00008_00007))
c Var 'aux2121' direct represents '0' with '-17324'
c Var 'aux2121' direct represents '1' with '17324'
c Var 'aux2121' order represents '1' with '1'
c Var 'aux2121' order represents '0' with '-17324'
c Encoding variable: aux2122 with domain: bool (representing constraint (max_left_00001_00008_00007=max_left_00001_00008_00008))
c Var 'aux2122' direct represents '0' with '-17325'
c Var 'aux2122' direct represents '1' with '17325'
c Var 'aux2122' order represents '1' with '1'
c Var 'aux2122' order represents '0' with '-17325'
c Encoding variable: aux2123 with domain: bool (representing constraint (variant_fields_00001_00008_00008=max_left_00001_00008_00008))
c Var 'aux2123' direct represents '0' with '-17326'
c Var 'aux2123' direct represents '1' with '17326'
c Var 'aux2123' order represents '1' with '1'
c Var 'aux2123' order represents '0' with '-17326'
c Encoding variable: aux2124 with domain: bool (representing constraint (max_left_00001_00008_00008=max_left_00001_00008_00009))
c Var 'aux2124' direct represents '0' with '-17327'
c Var 'aux2124' direct represents '1' with '17327'
c Var 'aux2124' order represents '1' with '1'
c Var 'aux2124' order represents '0' with '-17327'
c Encoding variable: aux2125 with domain: bool (representing constraint (variant_fields_00001_00008_00009=max_left_00001_00008_00009))
c Var 'aux2125' direct represents '0' with '-17328'
c Var 'aux2125' direct represents '1' with '17328'
c Var 'aux2125' order represents '1' with '1'
c Var 'aux2125' order represents '0' with '-17328'
c Encoding variable: aux2126 with domain: bool (representing constraint (max_left_00001_00009_00001=max_left_00001_00009_00002))
c Var 'aux2126' direct represents '0' with '-17329'
c Var 'aux2126' direct represents '1' with '17329'
c Var 'aux2126' order represents '1' with '1'
c Var 'aux2126' order represents '0' with '-17329'
c Encoding variable: aux2127 with domain: bool (representing constraint (variant_fields_00001_00009_00002=max_left_00001_00009_00002))
c Var 'aux2127' direct represents '0' with '-17330'
c Var 'aux2127' direct represents '1' with '17330'
c Var 'aux2127' order represents '1' with '1'
c Var 'aux2127' order represents '0' with '-17330'
c Encoding variable: aux2128 with domain: bool (representing constraint (max_left_00001_00009_00002=max_left_00001_00009_00003))
c Var 'aux2128' direct represents '0' with '-17331'
c Var 'aux2128' direct represents '1' with '17331'
c Var 'aux2128' order represents '1' with '1'
c Var 'aux2128' order represents '0' with '-17331'
c Encoding variable: aux2129 with domain: bool (representing constraint (variant_fields_00001_00009_00003=max_left_00001_00009_00003))
c Var 'aux2129' direct represents '0' with '-17332'
c Var 'aux2129' direct represents '1' with '17332'
c Var 'aux2129' order represents '1' with '1'
c Var 'aux2129' order represents '0' with '-17332'
c Encoding variable: aux2130 with domain: bool (representing constraint (max_left_00001_00009_00003=max_left_00001_00009_00004))
c Var 'aux2130' direct represents '0' with '-17333'
c Var 'aux2130' direct represents '1' with '17333'
c Var 'aux2130' order represents '1' with '1'
c Var 'aux2130' order represents '0' with '-17333'
c Encoding variable: aux2131 with domain: bool (representing constraint (variant_fields_00001_00009_00004=max_left_00001_00009_00004))
c Var 'aux2131' direct represents '0' with '-17334'
c Var 'aux2131' direct represents '1' with '17334'
c Var 'aux2131' order represents '1' with '1'
c Var 'aux2131' order represents '0' with '-17334'
c Encoding variable: aux2132 with domain: bool (representing constraint (max_left_00001_00009_00004=max_left_00001_00009_00005))
c Var 'aux2132' direct represents '0' with '-17335'
c Var 'aux2132' direct represents '1' with '17335'
c Var 'aux2132' order represents '1' with '1'
c Var 'aux2132' order represents '0' with '-17335'
c Encoding variable: aux2133 with domain: bool (representing constraint (variant_fields_00001_00009_00005=max_left_00001_00009_00005))
c Var 'aux2133' direct represents '0' with '-17336'
c Var 'aux2133' direct represents '1' with '17336'
c Var 'aux2133' order represents '1' with '1'
c Var 'aux2133' order represents '0' with '-17336'
c Encoding variable: aux2134 with domain: bool (representing constraint (max_left_00001_00009_00005=max_left_00001_00009_00006))
c Var 'aux2134' direct represents '0' with '-17337'
c Var 'aux2134' direct represents '1' with '17337'
c Var 'aux2134' order represents '1' with '1'
c Var 'aux2134' order represents '0' with '-17337'
c Encoding variable: aux2135 with domain: bool (representing constraint (variant_fields_00001_00009_00006=max_left_00001_00009_00006))
c Var 'aux2135' direct represents '0' with '-17338'
c Var 'aux2135' direct represents '1' with '17338'
c Var 'aux2135' order represents '1' with '1'
c Var 'aux2135' order represents '0' with '-17338'
c Encoding variable: aux2136 with domain: bool (representing constraint (max_left_00001_00009_00006=max_left_00001_00009_00007))
c Var 'aux2136' direct represents '0' with '-17339'
c Var 'aux2136' direct represents '1' with '17339'
c Var 'aux2136' order represents '1' with '1'
c Var 'aux2136' order represents '0' with '-17339'
c Encoding variable: aux2137 with domain: bool (representing constraint (variant_fields_00001_00009_00007=max_left_00001_00009_00007))
c Var 'aux2137' direct represents '0' with '-17340'
c Var 'aux2137' direct represents '1' with '17340'
c Var 'aux2137' order represents '1' with '1'
c Var 'aux2137' order represents '0' with '-17340'
c Encoding variable: aux2138 with domain: bool (representing constraint (max_left_00001_00009_00007=max_left_00001_00009_00008))
c Var 'aux2138' direct represents '0' with '-17341'
c Var 'aux2138' direct represents '1' with '17341'
c Var 'aux2138' order represents '1' with '1'
c Var 'aux2138' order represents '0' with '-17341'
c Encoding variable: aux2139 with domain: bool (representing constraint (variant_fields_00001_00009_00008=max_left_00001_00009_00008))
c Var 'aux2139' direct represents '0' with '-17342'
c Var 'aux2139' direct represents '1' with '17342'
c Var 'aux2139' order represents '1' with '1'
c Var 'aux2139' order represents '0' with '-17342'
c Encoding variable: aux2140 with domain: bool (representing constraint (max_left_00001_00009_00008=max_left_00001_00009_00009))
c Var 'aux2140' direct represents '0' with '-17343'
c Var 'aux2140' direct represents '1' with '17343'
c Var 'aux2140' order represents '1' with '1'
c Var 'aux2140' order represents '0' with '-17343'
c Encoding variable: aux2141 with domain: bool (representing constraint (variant_fields_00001_00009_00009=max_left_00001_00009_00009))
c Var 'aux2141' direct represents '0' with '-17344'
c Var 'aux2141' direct represents '1' with '17344'
c Var 'aux2141' order represents '1' with '1'
c Var 'aux2141' order represents '0' with '-17344'
c Encoding variable: aux2142 with domain: bool (representing constraint (max_left_00002_00001_00001=max_left_00002_00001_00002))
c Var 'aux2142' direct represents '0' with '-17345'
c Var 'aux2142' direct represents '1' with '17345'
c Var 'aux2142' order represents '1' with '1'
c Var 'aux2142' order represents '0' with '-17345'
c Encoding variable: aux2143 with domain: bool (representing constraint (variant_fields_00002_00001_00002=max_left_00002_00001_00002))
c Var 'aux2143' direct represents '0' with '-17346'
c Var 'aux2143' direct represents '1' with '17346'
c Var 'aux2143' order represents '1' with '1'
c Var 'aux2143' order represents '0' with '-17346'
c Encoding variable: aux2144 with domain: bool (representing constraint (max_left_00002_00001_00002=max_left_00002_00001_00003))
c Var 'aux2144' direct represents '0' with '-17347'
c Var 'aux2144' direct represents '1' with '17347'
c Var 'aux2144' order represents '1' with '1'
c Var 'aux2144' order represents '0' with '-17347'
c Encoding variable: aux2145 with domain: bool (representing constraint (variant_fields_00002_00001_00003=max_left_00002_00001_00003))
c Var 'aux2145' direct represents '0' with '-17348'
c Var 'aux2145' direct represents '1' with '17348'
c Var 'aux2145' order represents '1' with '1'
c Var 'aux2145' order represents '0' with '-17348'
c Encoding variable: aux2146 with domain: bool (representing constraint (max_left_00002_00001_00003=max_left_00002_00001_00004))
c Var 'aux2146' direct represents '0' with '-17349'
c Var 'aux2146' direct represents '1' with '17349'
c Var 'aux2146' order represents '1' with '1'
c Var 'aux2146' order represents '0' with '-17349'
c Encoding variable: aux2147 with domain: bool (representing constraint (variant_fields_00002_00001_00004=max_left_00002_00001_00004))
c Var 'aux2147' direct represents '0' with '-17350'
c Var 'aux2147' direct represents '1' with '17350'
c Var 'aux2147' order represents '1' with '1'
c Var 'aux2147' order represents '0' with '-17350'
c Encoding variable: aux2148 with domain: bool (representing constraint (max_left_00002_00001_00004=max_left_00002_00001_00005))
c Var 'aux2148' direct represents '0' with '-17351'
c Var 'aux2148' direct represents '1' with '17351'
c Var 'aux2148' order represents '1' with '1'
c Var 'aux2148' order represents '0' with '-17351'
c Encoding variable: aux2149 with domain: bool (representing constraint (variant_fields_00002_00001_00005=max_left_00002_00001_00005))
c Var 'aux2149' direct represents '0' with '-17352'
c Var 'aux2149' direct represents '1' with '17352'
c Var 'aux2149' order represents '1' with '1'
c Var 'aux2149' order represents '0' with '-17352'
c Encoding variable: aux2150 with domain: bool (representing constraint (max_left_00002_00001_00005=max_left_00002_00001_00006))
c Var 'aux2150' direct represents '0' with '-17353'
c Var 'aux2150' direct represents '1' with '17353'
c Var 'aux2150' order represents '1' with '1'
c Var 'aux2150' order represents '0' with '-17353'
c Encoding variable: aux2151 with domain: bool (representing constraint (variant_fields_00002_00001_00006=max_left_00002_00001_00006))
c Var 'aux2151' direct represents '0' with '-17354'
c Var 'aux2151' direct represents '1' with '17354'
c Var 'aux2151' order represents '1' with '1'
c Var 'aux2151' order represents '0' with '-17354'
c Encoding variable: aux2152 with domain: bool (representing constraint (max_left_00002_00001_00006=max_left_00002_00001_00007))
c Var 'aux2152' direct represents '0' with '-17355'
c Var 'aux2152' direct represents '1' with '17355'
c Var 'aux2152' order represents '1' with '1'
c Var 'aux2152' order represents '0' with '-17355'
c Encoding variable: aux2153 with domain: bool (representing constraint (variant_fields_00002_00001_00007=max_left_00002_00001_00007))
c Var 'aux2153' direct represents '0' with '-17356'
c Var 'aux2153' direct represents '1' with '17356'
c Var 'aux2153' order represents '1' with '1'
c Var 'aux2153' order represents '0' with '-17356'
c Encoding variable: aux2154 with domain: bool (representing constraint (max_left_00002_00001_00007=max_left_00002_00001_00008))
c Var 'aux2154' direct represents '0' with '-17357'
c Var 'aux2154' direct represents '1' with '17357'
c Var 'aux2154' order represents '1' with '1'
c Var 'aux2154' order represents '0' with '-17357'
c Encoding variable: aux2155 with domain: bool (representing constraint (variant_fields_00002_00001_00008=max_left_00002_00001_00008))
c Var 'aux2155' direct represents '0' with '-17358'
c Var 'aux2155' direct represents '1' with '17358'
c Var 'aux2155' order represents '1' with '1'
c Var 'aux2155' order represents '0' with '-17358'
c Encoding variable: aux2156 with domain: bool (representing constraint (max_left_00002_00001_00008=max_left_00002_00001_00009))
c Var 'aux2156' direct represents '0' with '-17359'
c Var 'aux2156' direct represents '1' with '17359'
c Var 'aux2156' order represents '1' with '1'
c Var 'aux2156' order represents '0' with '-17359'
c Encoding variable: aux2157 with domain: bool (representing constraint (variant_fields_00002_00001_00009=max_left_00002_00001_00009))
c Var 'aux2157' direct represents '0' with '-17360'
c Var 'aux2157' direct represents '1' with '17360'
c Var 'aux2157' order represents '1' with '1'
c Var 'aux2157' order represents '0' with '-17360'
c Encoding variable: aux2158 with domain: bool (representing constraint (max_left_00002_00002_00001=max_left_00002_00002_00002))
c Var 'aux2158' direct represents '0' with '-17361'
c Var 'aux2158' direct represents '1' with '17361'
c Var 'aux2158' order represents '1' with '1'
c Var 'aux2158' order represents '0' with '-17361'
c Encoding variable: aux2159 with domain: bool (representing constraint (variant_fields_00002_00002_00002=max_left_00002_00002_00002))
c Var 'aux2159' direct represents '0' with '-17362'
c Var 'aux2159' direct represents '1' with '17362'
c Var 'aux2159' order represents '1' with '1'
c Var 'aux2159' order represents '0' with '-17362'
c Encoding variable: aux2160 with domain: bool (representing constraint (max_left_00002_00002_00002=max_left_00002_00002_00003))
c Var 'aux2160' direct represents '0' with '-17363'
c Var 'aux2160' direct represents '1' with '17363'
c Var 'aux2160' order represents '1' with '1'
c Var 'aux2160' order represents '0' with '-17363'
c Encoding variable: aux2161 with domain: bool (representing constraint (variant_fields_00002_00002_00003=max_left_00002_00002_00003))
c Var 'aux2161' direct represents '0' with '-17364'
c Var 'aux2161' direct represents '1' with '17364'
c Var 'aux2161' order represents '1' with '1'
c Var 'aux2161' order represents '0' with '-17364'
c Encoding variable: aux2162 with domain: bool (representing constraint (max_left_00002_00002_00003=max_left_00002_00002_00004))
c Var 'aux2162' direct represents '0' with '-17365'
c Var 'aux2162' direct represents '1' with '17365'
c Var 'aux2162' order represents '1' with '1'
c Var 'aux2162' order represents '0' with '-17365'
c Encoding variable: aux2163 with domain: bool (representing constraint (variant_fields_00002_00002_00004=max_left_00002_00002_00004))
c Var 'aux2163' direct represents '0' with '-17366'
c Var 'aux2163' direct represents '1' with '17366'
c Var 'aux2163' order represents '1' with '1'
c Var 'aux2163' order represents '0' with '-17366'
c Encoding variable: aux2164 with domain: bool (representing constraint (max_left_00002_00002_00004=max_left_00002_00002_00005))
c Var 'aux2164' direct represents '0' with '-17367'
c Var 'aux2164' direct represents '1' with '17367'
c Var 'aux2164' order represents '1' with '1'
c Var 'aux2164' order represents '0' with '-17367'
c Encoding variable: aux2165 with domain: bool (representing constraint (variant_fields_00002_00002_00005=max_left_00002_00002_00005))
c Var 'aux2165' direct represents '0' with '-17368'
c Var 'aux2165' direct represents '1' with '17368'
c Var 'aux2165' order represents '1' with '1'
c Var 'aux2165' order represents '0' with '-17368'
c Encoding variable: aux2166 with domain: bool (representing constraint (max_left_00002_00002_00005=max_left_00002_00002_00006))
c Var 'aux2166' direct represents '0' with '-17369'
c Var 'aux2166' direct represents '1' with '17369'
c Var 'aux2166' order represents '1' with '1'
c Var 'aux2166' order represents '0' with '-17369'
c Encoding variable: aux2167 with domain: bool (representing constraint (variant_fields_00002_00002_00006=max_left_00002_00002_00006))
c Var 'aux2167' direct represents '0' with '-17370'
c Var 'aux2167' direct represents '1' with '17370'
c Var 'aux2167' order represents '1' with '1'
c Var 'aux2167' order represents '0' with '-17370'
c Encoding variable: aux2168 with domain: bool (representing constraint (max_left_00002_00002_00006=max_left_00002_00002_00007))
c Var 'aux2168' direct represents '0' with '-17371'
c Var 'aux2168' direct represents '1' with '17371'
c Var 'aux2168' order represents '1' with '1'
c Var 'aux2168' order represents '0' with '-17371'
c Encoding variable: aux2169 with domain: bool (representing constraint (variant_fields_00002_00002_00007=max_left_00002_00002_00007))
c Var 'aux2169' direct represents '0' with '-17372'
c Var 'aux2169' direct represents '1' with '17372'
c Var 'aux2169' order represents '1' with '1'
c Var 'aux2169' order represents '0' with '-17372'
c Encoding variable: aux2170 with domain: bool (representing constraint (max_left_00002_00002_00007=max_left_00002_00002_00008))
c Var 'aux2170' direct represents '0' with '-17373'
c Var 'aux2170' direct represents '1' with '17373'
c Var 'aux2170' order represents '1' with '1'
c Var 'aux2170' order represents '0' with '-17373'
c Encoding variable: aux2171 with domain: bool (representing constraint (variant_fields_00002_00002_00008=max_left_00002_00002_00008))
c Var 'aux2171' direct represents '0' with '-17374'
c Var 'aux2171' direct represents '1' with '17374'
c Var 'aux2171' order represents '1' with '1'
c Var 'aux2171' order represents '0' with '-17374'
c Encoding variable: aux2172 with domain: bool (representing constraint (max_left_00002_00002_00008=max_left_00002_00002_00009))
c Var 'aux2172' direct represents '0' with '-17375'
c Var 'aux2172' direct represents '1' with '17375'
c Var 'aux2172' order represents '1' with '1'
c Var 'aux2172' order represents '0' with '-17375'
c Encoding variable: aux2173 with domain: bool (representing constraint (variant_fields_00002_00002_00009=max_left_00002_00002_00009))
c Var 'aux2173' direct represents '0' with '-17376'
c Var 'aux2173' direct represents '1' with '17376'
c Var 'aux2173' order represents '1' with '1'
c Var 'aux2173' order represents '0' with '-17376'
c Encoding variable: aux2174 with domain: bool (representing constraint (max_left_00002_00003_00001=max_left_00002_00003_00002))
c Var 'aux2174' direct represents '0' with '-17377'
c Var 'aux2174' direct represents '1' with '17377'
c Var 'aux2174' order represents '1' with '1'
c Var 'aux2174' order represents '0' with '-17377'
c Encoding variable: aux2175 with domain: bool (representing constraint (variant_fields_00002_00003_00002=max_left_00002_00003_00002))
c Var 'aux2175' direct represents '0' with '-17378'
c Var 'aux2175' direct represents '1' with '17378'
c Var 'aux2175' order represents '1' with '1'
c Var 'aux2175' order represents '0' with '-17378'
c Encoding variable: aux2176 with domain: bool (representing constraint (max_left_00002_00003_00002=max_left_00002_00003_00003))
c Var 'aux2176' direct represents '0' with '-17379'
c Var 'aux2176' direct represents '1' with '17379'
c Var 'aux2176' order represents '1' with '1'
c Var 'aux2176' order represents '0' with '-17379'
c Encoding variable: aux2177 with domain: bool (representing constraint (variant_fields_00002_00003_00003=max_left_00002_00003_00003))
c Var 'aux2177' direct represents '0' with '-17380'
c Var 'aux2177' direct represents '1' with '17380'
c Var 'aux2177' order represents '1' with '1'
c Var 'aux2177' order represents '0' with '-17380'
c Encoding variable: aux2178 with domain: bool (representing constraint (max_left_00002_00003_00003=max_left_00002_00003_00004))
c Var 'aux2178' direct represents '0' with '-17381'
c Var 'aux2178' direct represents '1' with '17381'
c Var 'aux2178' order represents '1' with '1'
c Var 'aux2178' order represents '0' with '-17381'
c Encoding variable: aux2179 with domain: bool (representing constraint (variant_fields_00002_00003_00004=max_left_00002_00003_00004))
c Var 'aux2179' direct represents '0' with '-17382'
c Var 'aux2179' direct represents '1' with '17382'
c Var 'aux2179' order represents '1' with '1'
c Var 'aux2179' order represents '0' with '-17382'
c Encoding variable: aux2180 with domain: bool (representing constraint (max_left_00002_00003_00004=max_left_00002_00003_00005))
c Var 'aux2180' direct represents '0' with '-17383'
c Var 'aux2180' direct represents '1' with '17383'
c Var 'aux2180' order represents '1' with '1'
c Var 'aux2180' order represents '0' with '-17383'
c Encoding variable: aux2181 with domain: bool (representing constraint (variant_fields_00002_00003_00005=max_left_00002_00003_00005))
c Var 'aux2181' direct represents '0' with '-17384'
c Var 'aux2181' direct represents '1' with '17384'
c Var 'aux2181' order represents '1' with '1'
c Var 'aux2181' order represents '0' with '-17384'
c Encoding variable: aux2182 with domain: bool (representing constraint (max_left_00002_00003_00005=max_left_00002_00003_00006))
c Var 'aux2182' direct represents '0' with '-17385'
c Var 'aux2182' direct represents '1' with '17385'
c Var 'aux2182' order represents '1' with '1'
c Var 'aux2182' order represents '0' with '-17385'
c Encoding variable: aux2183 with domain: bool (representing constraint (variant_fields_00002_00003_00006=max_left_00002_00003_00006))
c Var 'aux2183' direct represents '0' with '-17386'
c Var 'aux2183' direct represents '1' with '17386'
c Var 'aux2183' order represents '1' with '1'
c Var 'aux2183' order represents '0' with '-17386'
c Encoding variable: aux2184 with domain: bool (representing constraint (max_left_00002_00003_00006=max_left_00002_00003_00007))
c Var 'aux2184' direct represents '0' with '-17387'
c Var 'aux2184' direct represents '1' with '17387'
c Var 'aux2184' order represents '1' with '1'
c Var 'aux2184' order represents '0' with '-17387'
c Encoding variable: aux2185 with domain: bool (representing constraint (variant_fields_00002_00003_00007=max_left_00002_00003_00007))
c Var 'aux2185' direct represents '0' with '-17388'
c Var 'aux2185' direct represents '1' with '17388'
c Var 'aux2185' order represents '1' with '1'
c Var 'aux2185' order represents '0' with '-17388'
c Encoding variable: aux2186 with domain: bool (representing constraint (max_left_00002_00003_00007=max_left_00002_00003_00008))
c Var 'aux2186' direct represents '0' with '-17389'
c Var 'aux2186' direct represents '1' with '17389'
c Var 'aux2186' order represents '1' with '1'
c Var 'aux2186' order represents '0' with '-17389'
c Encoding variable: aux2187 with domain: bool (representing constraint (variant_fields_00002_00003_00008=max_left_00002_00003_00008))
c Var 'aux2187' direct represents '0' with '-17390'
c Var 'aux2187' direct represents '1' with '17390'
c Var 'aux2187' order represents '1' with '1'
c Var 'aux2187' order represents '0' with '-17390'
c Encoding variable: aux2188 with domain: bool (representing constraint (max_left_00002_00003_00008=max_left_00002_00003_00009))
c Var 'aux2188' direct represents '0' with '-17391'
c Var 'aux2188' direct represents '1' with '17391'
c Var 'aux2188' order represents '1' with '1'
c Var 'aux2188' order represents '0' with '-17391'
c Encoding variable: aux2189 with domain: bool (representing constraint (variant_fields_00002_00003_00009=max_left_00002_00003_00009))
c Var 'aux2189' direct represents '0' with '-17392'
c Var 'aux2189' direct represents '1' with '17392'
c Var 'aux2189' order represents '1' with '1'
c Var 'aux2189' order represents '0' with '-17392'
c Encoding variable: aux2190 with domain: bool (representing constraint (max_left_00002_00004_00001=max_left_00002_00004_00002))
c Var 'aux2190' direct represents '0' with '-17393'
c Var 'aux2190' direct represents '1' with '17393'
c Var 'aux2190' order represents '1' with '1'
c Var 'aux2190' order represents '0' with '-17393'
c Encoding variable: aux2191 with domain: bool (representing constraint (variant_fields_00002_00004_00002=max_left_00002_00004_00002))
c Var 'aux2191' direct represents '0' with '-17394'
c Var 'aux2191' direct represents '1' with '17394'
c Var 'aux2191' order represents '1' with '1'
c Var 'aux2191' order represents '0' with '-17394'
c Encoding variable: aux2192 with domain: bool (representing constraint (max_left_00002_00004_00002=max_left_00002_00004_00003))
c Var 'aux2192' direct represents '0' with '-17395'
c Var 'aux2192' direct represents '1' with '17395'
c Var 'aux2192' order represents '1' with '1'
c Var 'aux2192' order represents '0' with '-17395'
c Encoding variable: aux2193 with domain: bool (representing constraint (variant_fields_00002_00004_00003=max_left_00002_00004_00003))
c Var 'aux2193' direct represents '0' with '-17396'
c Var 'aux2193' direct represents '1' with '17396'
c Var 'aux2193' order represents '1' with '1'
c Var 'aux2193' order represents '0' with '-17396'
c Encoding variable: aux2194 with domain: bool (representing constraint (max_left_00002_00004_00003=max_left_00002_00004_00004))
c Var 'aux2194' direct represents '0' with '-17397'
c Var 'aux2194' direct represents '1' with '17397'
c Var 'aux2194' order represents '1' with '1'
c Var 'aux2194' order represents '0' with '-17397'
c Encoding variable: aux2195 with domain: bool (representing constraint (variant_fields_00002_00004_00004=max_left_00002_00004_00004))
c Var 'aux2195' direct represents '0' with '-17398'
c Var 'aux2195' direct represents '1' with '17398'
c Var 'aux2195' order represents '1' with '1'
c Var 'aux2195' order represents '0' with '-17398'
c Encoding variable: aux2196 with domain: bool (representing constraint (max_left_00002_00004_00004=max_left_00002_00004_00005))
c Var 'aux2196' direct represents '0' with '-17399'
c Var 'aux2196' direct represents '1' with '17399'
c Var 'aux2196' order represents '1' with '1'
c Var 'aux2196' order represents '0' with '-17399'
c Encoding variable: aux2197 with domain: bool (representing constraint (variant_fields_00002_00004_00005=max_left_00002_00004_00005))
c Var 'aux2197' direct represents '0' with '-17400'
c Var 'aux2197' direct represents '1' with '17400'
c Var 'aux2197' order represents '1' with '1'
c Var 'aux2197' order represents '0' with '-17400'
c Encoding variable: aux2198 with domain: bool (representing constraint (max_left_00002_00004_00005=max_left_00002_00004_00006))
c Var 'aux2198' direct represents '0' with '-17401'
c Var 'aux2198' direct represents '1' with '17401'
c Var 'aux2198' order represents '1' with '1'
c Var 'aux2198' order represents '0' with '-17401'
c Encoding variable: aux2199 with domain: bool (representing constraint (variant_fields_00002_00004_00006=max_left_00002_00004_00006))
c Var 'aux2199' direct represents '0' with '-17402'
c Var 'aux2199' direct represents '1' with '17402'
c Var 'aux2199' order represents '1' with '1'
c Var 'aux2199' order represents '0' with '-17402'
c Encoding variable: aux2200 with domain: bool (representing constraint (max_left_00002_00004_00006=max_left_00002_00004_00007))
c Var 'aux2200' direct represents '0' with '-17403'
c Var 'aux2200' direct represents '1' with '17403'
c Var 'aux2200' order represents '1' with '1'
c Var 'aux2200' order represents '0' with '-17403'
c Encoding variable: aux2201 with domain: bool (representing constraint (variant_fields_00002_00004_00007=max_left_00002_00004_00007))
c Var 'aux2201' direct represents '0' with '-17404'
c Var 'aux2201' direct represents '1' with '17404'
c Var 'aux2201' order represents '1' with '1'
c Var 'aux2201' order represents '0' with '-17404'
c Encoding variable: aux2202 with domain: bool (representing constraint (max_left_00002_00004_00007=max_left_00002_00004_00008))
c Var 'aux2202' direct represents '0' with '-17405'
c Var 'aux2202' direct represents '1' with '17405'
c Var 'aux2202' order represents '1' with '1'
c Var 'aux2202' order represents '0' with '-17405'
c Encoding variable: aux2203 with domain: bool (representing constraint (variant_fields_00002_00004_00008=max_left_00002_00004_00008))
c Var 'aux2203' direct represents '0' with '-17406'
c Var 'aux2203' direct represents '1' with '17406'
c Var 'aux2203' order represents '1' with '1'
c Var 'aux2203' order represents '0' with '-17406'
c Encoding variable: aux2204 with domain: bool (representing constraint (max_left_00002_00004_00008=max_left_00002_00004_00009))
c Var 'aux2204' direct represents '0' with '-17407'
c Var 'aux2204' direct represents '1' with '17407'
c Var 'aux2204' order represents '1' with '1'
c Var 'aux2204' order represents '0' with '-17407'
c Encoding variable: aux2205 with domain: bool (representing constraint (variant_fields_00002_00004_00009=max_left_00002_00004_00009))
c Var 'aux2205' direct represents '0' with '-17408'
c Var 'aux2205' direct represents '1' with '17408'
c Var 'aux2205' order represents '1' with '1'
c Var 'aux2205' order represents '0' with '-17408'
c Encoding variable: aux2206 with domain: bool (representing constraint (max_left_00002_00005_00001=max_left_00002_00005_00002))
c Var 'aux2206' direct represents '0' with '-17409'
c Var 'aux2206' direct represents '1' with '17409'
c Var 'aux2206' order represents '1' with '1'
c Var 'aux2206' order represents '0' with '-17409'
c Encoding variable: aux2207 with domain: bool (representing constraint (variant_fields_00002_00005_00002=max_left_00002_00005_00002))
c Var 'aux2207' direct represents '0' with '-17410'
c Var 'aux2207' direct represents '1' with '17410'
c Var 'aux2207' order represents '1' with '1'
c Var 'aux2207' order represents '0' with '-17410'
c Encoding variable: aux2208 with domain: bool (representing constraint (max_left_00002_00005_00002=max_left_00002_00005_00003))
c Var 'aux2208' direct represents '0' with '-17411'
c Var 'aux2208' direct represents '1' with '17411'
c Var 'aux2208' order represents '1' with '1'
c Var 'aux2208' order represents '0' with '-17411'
c Encoding variable: aux2209 with domain: bool (representing constraint (variant_fields_00002_00005_00003=max_left_00002_00005_00003))
c Var 'aux2209' direct represents '0' with '-17412'
c Var 'aux2209' direct represents '1' with '17412'
c Var 'aux2209' order represents '1' with '1'
c Var 'aux2209' order represents '0' with '-17412'
c Encoding variable: aux2210 with domain: bool (representing constraint (max_left_00002_00005_00003=max_left_00002_00005_00004))
c Var 'aux2210' direct represents '0' with '-17413'
c Var 'aux2210' direct represents '1' with '17413'
c Var 'aux2210' order represents '1' with '1'
c Var 'aux2210' order represents '0' with '-17413'
c Encoding variable: aux2211 with domain: bool (representing constraint (variant_fields_00002_00005_00004=max_left_00002_00005_00004))
c Var 'aux2211' direct represents '0' with '-17414'
c Var 'aux2211' direct represents '1' with '17414'
c Var 'aux2211' order represents '1' with '1'
c Var 'aux2211' order represents '0' with '-17414'
c Encoding variable: aux2212 with domain: bool (representing constraint (max_left_00002_00005_00004=max_left_00002_00005_00005))
c Var 'aux2212' direct represents '0' with '-17415'
c Var 'aux2212' direct represents '1' with '17415'
c Var 'aux2212' order represents '1' with '1'
c Var 'aux2212' order represents '0' with '-17415'
c Encoding variable: aux2213 with domain: bool (representing constraint (variant_fields_00002_00005_00005=max_left_00002_00005_00005))
c Var 'aux2213' direct represents '0' with '-17416'
c Var 'aux2213' direct represents '1' with '17416'
c Var 'aux2213' order represents '1' with '1'
c Var 'aux2213' order represents '0' with '-17416'
c Encoding variable: aux2214 with domain: bool (representing constraint (max_left_00002_00005_00005=max_left_00002_00005_00006))
c Var 'aux2214' direct represents '0' with '-17417'
c Var 'aux2214' direct represents '1' with '17417'
c Var 'aux2214' order represents '1' with '1'
c Var 'aux2214' order represents '0' with '-17417'
c Encoding variable: aux2215 with domain: bool (representing constraint (variant_fields_00002_00005_00006=max_left_00002_00005_00006))
c Var 'aux2215' direct represents '0' with '-17418'
c Var 'aux2215' direct represents '1' with '17418'
c Var 'aux2215' order represents '1' with '1'
c Var 'aux2215' order represents '0' with '-17418'
c Encoding variable: aux2216 with domain: bool (representing constraint (max_left_00002_00005_00006=max_left_00002_00005_00007))
c Var 'aux2216' direct represents '0' with '-17419'
c Var 'aux2216' direct represents '1' with '17419'
c Var 'aux2216' order represents '1' with '1'
c Var 'aux2216' order represents '0' with '-17419'
c Encoding variable: aux2217 with domain: bool (representing constraint (variant_fields_00002_00005_00007=max_left_00002_00005_00007))
c Var 'aux2217' direct represents '0' with '-17420'
c Var 'aux2217' direct represents '1' with '17420'
c Var 'aux2217' order represents '1' with '1'
c Var 'aux2217' order represents '0' with '-17420'
c Encoding variable: aux2218 with domain: bool (representing constraint (max_left_00002_00005_00007=max_left_00002_00005_00008))
c Var 'aux2218' direct represents '0' with '-17421'
c Var 'aux2218' direct represents '1' with '17421'
c Var 'aux2218' order represents '1' with '1'
c Var 'aux2218' order represents '0' with '-17421'
c Encoding variable: aux2219 with domain: bool (representing constraint (variant_fields_00002_00005_00008=max_left_00002_00005_00008))
c Var 'aux2219' direct represents '0' with '-17422'
c Var 'aux2219' direct represents '1' with '17422'
c Var 'aux2219' order represents '1' with '1'
c Var 'aux2219' order represents '0' with '-17422'
c Encoding variable: aux2220 with domain: bool (representing constraint (max_left_00002_00005_00008=max_left_00002_00005_00009))
c Var 'aux2220' direct represents '0' with '-17423'
c Var 'aux2220' direct represents '1' with '17423'
c Var 'aux2220' order represents '1' with '1'
c Var 'aux2220' order represents '0' with '-17423'
c Encoding variable: aux2221 with domain: bool (representing constraint (variant_fields_00002_00005_00009=max_left_00002_00005_00009))
c Var 'aux2221' direct represents '0' with '-17424'
c Var 'aux2221' direct represents '1' with '17424'
c Var 'aux2221' order represents '1' with '1'
c Var 'aux2221' order represents '0' with '-17424'
c Encoding variable: aux2222 with domain: bool (representing constraint (max_left_00002_00006_00001=max_left_00002_00006_00002))
c Var 'aux2222' direct represents '0' with '-17425'
c Var 'aux2222' direct represents '1' with '17425'
c Var 'aux2222' order represents '1' with '1'
c Var 'aux2222' order represents '0' with '-17425'
c Encoding variable: aux2223 with domain: bool (representing constraint (variant_fields_00002_00006_00002=max_left_00002_00006_00002))
c Var 'aux2223' direct represents '0' with '-17426'
c Var 'aux2223' direct represents '1' with '17426'
c Var 'aux2223' order represents '1' with '1'
c Var 'aux2223' order represents '0' with '-17426'
c Encoding variable: aux2224 with domain: bool (representing constraint (max_left_00002_00006_00002=max_left_00002_00006_00003))
c Var 'aux2224' direct represents '0' with '-17427'
c Var 'aux2224' direct represents '1' with '17427'
c Var 'aux2224' order represents '1' with '1'
c Var 'aux2224' order represents '0' with '-17427'
c Encoding variable: aux2225 with domain: bool (representing constraint (variant_fields_00002_00006_00003=max_left_00002_00006_00003))
c Var 'aux2225' direct represents '0' with '-17428'
c Var 'aux2225' direct represents '1' with '17428'
c Var 'aux2225' order represents '1' with '1'
c Var 'aux2225' order represents '0' with '-17428'
c Encoding variable: aux2226 with domain: bool (representing constraint (max_left_00002_00006_00003=max_left_00002_00006_00004))
c Var 'aux2226' direct represents '0' with '-17429'
c Var 'aux2226' direct represents '1' with '17429'
c Var 'aux2226' order represents '1' with '1'
c Var 'aux2226' order represents '0' with '-17429'
c Encoding variable: aux2227 with domain: bool (representing constraint (variant_fields_00002_00006_00004=max_left_00002_00006_00004))
c Var 'aux2227' direct represents '0' with '-17430'
c Var 'aux2227' direct represents '1' with '17430'
c Var 'aux2227' order represents '1' with '1'
c Var 'aux2227' order represents '0' with '-17430'
c Encoding variable: aux2228 with domain: bool (representing constraint (max_left_00002_00006_00004=max_left_00002_00006_00005))
c Var 'aux2228' direct represents '0' with '-17431'
c Var 'aux2228' direct represents '1' with '17431'
c Var 'aux2228' order represents '1' with '1'
c Var 'aux2228' order represents '0' with '-17431'
c Encoding variable: aux2229 with domain: bool (representing constraint (variant_fields_00002_00006_00005=max_left_00002_00006_00005))
c Var 'aux2229' direct represents '0' with '-17432'
c Var 'aux2229' direct represents '1' with '17432'
c Var 'aux2229' order represents '1' with '1'
c Var 'aux2229' order represents '0' with '-17432'
c Encoding variable: aux2230 with domain: bool (representing constraint (max_left_00002_00006_00005=max_left_00002_00006_00006))
c Var 'aux2230' direct represents '0' with '-17433'
c Var 'aux2230' direct represents '1' with '17433'
c Var 'aux2230' order represents '1' with '1'
c Var 'aux2230' order represents '0' with '-17433'
c Encoding variable: aux2231 with domain: bool (representing constraint (variant_fields_00002_00006_00006=max_left_00002_00006_00006))
c Var 'aux2231' direct represents '0' with '-17434'
c Var 'aux2231' direct represents '1' with '17434'
c Var 'aux2231' order represents '1' with '1'
c Var 'aux2231' order represents '0' with '-17434'
c Encoding variable: aux2232 with domain: bool (representing constraint (max_left_00002_00006_00006=max_left_00002_00006_00007))
c Var 'aux2232' direct represents '0' with '-17435'
c Var 'aux2232' direct represents '1' with '17435'
c Var 'aux2232' order represents '1' with '1'
c Var 'aux2232' order represents '0' with '-17435'
c Encoding variable: aux2233 with domain: bool (representing constraint (variant_fields_00002_00006_00007=max_left_00002_00006_00007))
c Var 'aux2233' direct represents '0' with '-17436'
c Var 'aux2233' direct represents '1' with '17436'
c Var 'aux2233' order represents '1' with '1'
c Var 'aux2233' order represents '0' with '-17436'
c Encoding variable: aux2234 with domain: bool (representing constraint (max_left_00002_00006_00007=max_left_00002_00006_00008))
c Var 'aux2234' direct represents '0' with '-17437'
c Var 'aux2234' direct represents '1' with '17437'
c Var 'aux2234' order represents '1' with '1'
c Var 'aux2234' order represents '0' with '-17437'
c Encoding variable: aux2235 with domain: bool (representing constraint (variant_fields_00002_00006_00008=max_left_00002_00006_00008))
c Var 'aux2235' direct represents '0' with '-17438'
c Var 'aux2235' direct represents '1' with '17438'
c Var 'aux2235' order represents '1' with '1'
c Var 'aux2235' order represents '0' with '-17438'
c Encoding variable: aux2236 with domain: bool (representing constraint (max_left_00002_00006_00008=max_left_00002_00006_00009))
c Var 'aux2236' direct represents '0' with '-17439'
c Var 'aux2236' direct represents '1' with '17439'
c Var 'aux2236' order represents '1' with '1'
c Var 'aux2236' order represents '0' with '-17439'
c Encoding variable: aux2237 with domain: bool (representing constraint (variant_fields_00002_00006_00009=max_left_00002_00006_00009))
c Var 'aux2237' direct represents '0' with '-17440'
c Var 'aux2237' direct represents '1' with '17440'
c Var 'aux2237' order represents '1' with '1'
c Var 'aux2237' order represents '0' with '-17440'
c Encoding variable: aux2238 with domain: bool (representing constraint (max_left_00002_00007_00001=max_left_00002_00007_00002))
c Var 'aux2238' direct represents '0' with '-17441'
c Var 'aux2238' direct represents '1' with '17441'
c Var 'aux2238' order represents '1' with '1'
c Var 'aux2238' order represents '0' with '-17441'
c Encoding variable: aux2239 with domain: bool (representing constraint (variant_fields_00002_00007_00002=max_left_00002_00007_00002))
c Var 'aux2239' direct represents '0' with '-17442'
c Var 'aux2239' direct represents '1' with '17442'
c Var 'aux2239' order represents '1' with '1'
c Var 'aux2239' order represents '0' with '-17442'
c Encoding variable: aux2240 with domain: bool (representing constraint (max_left_00002_00007_00002=max_left_00002_00007_00003))
c Var 'aux2240' direct represents '0' with '-17443'
c Var 'aux2240' direct represents '1' with '17443'
c Var 'aux2240' order represents '1' with '1'
c Var 'aux2240' order represents '0' with '-17443'
c Encoding variable: aux2241 with domain: bool (representing constraint (variant_fields_00002_00007_00003=max_left_00002_00007_00003))
c Var 'aux2241' direct represents '0' with '-17444'
c Var 'aux2241' direct represents '1' with '17444'
c Var 'aux2241' order represents '1' with '1'
c Var 'aux2241' order represents '0' with '-17444'
c Encoding variable: aux2242 with domain: bool (representing constraint (max_left_00002_00007_00003=max_left_00002_00007_00004))
c Var 'aux2242' direct represents '0' with '-17445'
c Var 'aux2242' direct represents '1' with '17445'
c Var 'aux2242' order represents '1' with '1'
c Var 'aux2242' order represents '0' with '-17445'
c Encoding variable: aux2243 with domain: bool (representing constraint (variant_fields_00002_00007_00004=max_left_00002_00007_00004))
c Var 'aux2243' direct represents '0' with '-17446'
c Var 'aux2243' direct represents '1' with '17446'
c Var 'aux2243' order represents '1' with '1'
c Var 'aux2243' order represents '0' with '-17446'
c Encoding variable: aux2244 with domain: bool (representing constraint (max_left_00002_00007_00004=max_left_00002_00007_00005))
c Var 'aux2244' direct represents '0' with '-17447'
c Var 'aux2244' direct represents '1' with '17447'
c Var 'aux2244' order represents '1' with '1'
c Var 'aux2244' order represents '0' with '-17447'
c Encoding variable: aux2245 with domain: bool (representing constraint (variant_fields_00002_00007_00005=max_left_00002_00007_00005))
c Var 'aux2245' direct represents '0' with '-17448'
c Var 'aux2245' direct represents '1' with '17448'
c Var 'aux2245' order represents '1' with '1'
c Var 'aux2245' order represents '0' with '-17448'
c Encoding variable: aux2246 with domain: bool (representing constraint (max_left_00002_00007_00005=max_left_00002_00007_00006))
c Var 'aux2246' direct represents '0' with '-17449'
c Var 'aux2246' direct represents '1' with '17449'
c Var 'aux2246' order represents '1' with '1'
c Var 'aux2246' order represents '0' with '-17449'
c Encoding variable: aux2247 with domain: bool (representing constraint (variant_fields_00002_00007_00006=max_left_00002_00007_00006))
c Var 'aux2247' direct represents '0' with '-17450'
c Var 'aux2247' direct represents '1' with '17450'
c Var 'aux2247' order represents '1' with '1'
c Var 'aux2247' order represents '0' with '-17450'
c Encoding variable: aux2248 with domain: bool (representing constraint (max_left_00002_00007_00006=max_left_00002_00007_00007))
c Var 'aux2248' direct represents '0' with '-17451'
c Var 'aux2248' direct represents '1' with '17451'
c Var 'aux2248' order represents '1' with '1'
c Var 'aux2248' order represents '0' with '-17451'
c Encoding variable: aux2249 with domain: bool (representing constraint (variant_fields_00002_00007_00007=max_left_00002_00007_00007))
c Var 'aux2249' direct represents '0' with '-17452'
c Var 'aux2249' direct represents '1' with '17452'
c Var 'aux2249' order represents '1' with '1'
c Var 'aux2249' order represents '0' with '-17452'
c Encoding variable: aux2250 with domain: bool (representing constraint (max_left_00002_00007_00007=max_left_00002_00007_00008))
c Var 'aux2250' direct represents '0' with '-17453'
c Var 'aux2250' direct represents '1' with '17453'
c Var 'aux2250' order represents '1' with '1'
c Var 'aux2250' order represents '0' with '-17453'
c Encoding variable: aux2251 with domain: bool (representing constraint (variant_fields_00002_00007_00008=max_left_00002_00007_00008))
c Var 'aux2251' direct represents '0' with '-17454'
c Var 'aux2251' direct represents '1' with '17454'
c Var 'aux2251' order represents '1' with '1'
c Var 'aux2251' order represents '0' with '-17454'
c Encoding variable: aux2252 with domain: bool (representing constraint (max_left_00002_00007_00008=max_left_00002_00007_00009))
c Var 'aux2252' direct represents '0' with '-17455'
c Var 'aux2252' direct represents '1' with '17455'
c Var 'aux2252' order represents '1' with '1'
c Var 'aux2252' order represents '0' with '-17455'
c Encoding variable: aux2253 with domain: bool (representing constraint (variant_fields_00002_00007_00009=max_left_00002_00007_00009))
c Var 'aux2253' direct represents '0' with '-17456'
c Var 'aux2253' direct represents '1' with '17456'
c Var 'aux2253' order represents '1' with '1'
c Var 'aux2253' order represents '0' with '-17456'
c Encoding variable: aux2254 with domain: bool (representing constraint (max_left_00002_00008_00001=max_left_00002_00008_00002))
c Var 'aux2254' direct represents '0' with '-17457'
c Var 'aux2254' direct represents '1' with '17457'
c Var 'aux2254' order represents '1' with '1'
c Var 'aux2254' order represents '0' with '-17457'
c Encoding variable: aux2255 with domain: bool (representing constraint (variant_fields_00002_00008_00002=max_left_00002_00008_00002))
c Var 'aux2255' direct represents '0' with '-17458'
c Var 'aux2255' direct represents '1' with '17458'
c Var 'aux2255' order represents '1' with '1'
c Var 'aux2255' order represents '0' with '-17458'
c Encoding variable: aux2256 with domain: bool (representing constraint (max_left_00002_00008_00002=max_left_00002_00008_00003))
c Var 'aux2256' direct represents '0' with '-17459'
c Var 'aux2256' direct represents '1' with '17459'
c Var 'aux2256' order represents '1' with '1'
c Var 'aux2256' order represents '0' with '-17459'
c Encoding variable: aux2257 with domain: bool (representing constraint (variant_fields_00002_00008_00003=max_left_00002_00008_00003))
c Var 'aux2257' direct represents '0' with '-17460'
c Var 'aux2257' direct represents '1' with '17460'
c Var 'aux2257' order represents '1' with '1'
c Var 'aux2257' order represents '0' with '-17460'
c Encoding variable: aux2258 with domain: bool (representing constraint (max_left_00002_00008_00003=max_left_00002_00008_00004))
c Var 'aux2258' direct represents '0' with '-17461'
c Var 'aux2258' direct represents '1' with '17461'
c Var 'aux2258' order represents '1' with '1'
c Var 'aux2258' order represents '0' with '-17461'
c Encoding variable: aux2259 with domain: bool (representing constraint (variant_fields_00002_00008_00004=max_left_00002_00008_00004))
c Var 'aux2259' direct represents '0' with '-17462'
c Var 'aux2259' direct represents '1' with '17462'
c Var 'aux2259' order represents '1' with '1'
c Var 'aux2259' order represents '0' with '-17462'
c Encoding variable: aux2260 with domain: bool (representing constraint (max_left_00002_00008_00004=max_left_00002_00008_00005))
c Var 'aux2260' direct represents '0' with '-17463'
c Var 'aux2260' direct represents '1' with '17463'
c Var 'aux2260' order represents '1' with '1'
c Var 'aux2260' order represents '0' with '-17463'
c Encoding variable: aux2261 with domain: bool (representing constraint (variant_fields_00002_00008_00005=max_left_00002_00008_00005))
c Var 'aux2261' direct represents '0' with '-17464'
c Var 'aux2261' direct represents '1' with '17464'
c Var 'aux2261' order represents '1' with '1'
c Var 'aux2261' order represents '0' with '-17464'
c Encoding variable: aux2262 with domain: bool (representing constraint (max_left_00002_00008_00005=max_left_00002_00008_00006))
c Var 'aux2262' direct represents '0' with '-17465'
c Var 'aux2262' direct represents '1' with '17465'
c Var 'aux2262' order represents '1' with '1'
c Var 'aux2262' order represents '0' with '-17465'
c Encoding variable: aux2263 with domain: bool (representing constraint (variant_fields_00002_00008_00006=max_left_00002_00008_00006))
c Var 'aux2263' direct represents '0' with '-17466'
c Var 'aux2263' direct represents '1' with '17466'
c Var 'aux2263' order represents '1' with '1'
c Var 'aux2263' order represents '0' with '-17466'
c Encoding variable: aux2264 with domain: bool (representing constraint (max_left_00002_00008_00006=max_left_00002_00008_00007))
c Var 'aux2264' direct represents '0' with '-17467'
c Var 'aux2264' direct represents '1' with '17467'
c Var 'aux2264' order represents '1' with '1'
c Var 'aux2264' order represents '0' with '-17467'
c Encoding variable: aux2265 with domain: bool (representing constraint (variant_fields_00002_00008_00007=max_left_00002_00008_00007))
c Var 'aux2265' direct represents '0' with '-17468'
c Var 'aux2265' direct represents '1' with '17468'
c Var 'aux2265' order represents '1' with '1'
c Var 'aux2265' order represents '0' with '-17468'
c Encoding variable: aux2266 with domain: bool (representing constraint (max_left_00002_00008_00007=max_left_00002_00008_00008))
c Var 'aux2266' direct represents '0' with '-17469'
c Var 'aux2266' direct represents '1' with '17469'
c Var 'aux2266' order represents '1' with '1'
c Var 'aux2266' order represents '0' with '-17469'
c Encoding variable: aux2267 with domain: bool (representing constraint (variant_fields_00002_00008_00008=max_left_00002_00008_00008))
c Var 'aux2267' direct represents '0' with '-17470'
c Var 'aux2267' direct represents '1' with '17470'
c Var 'aux2267' order represents '1' with '1'
c Var 'aux2267' order represents '0' with '-17470'
c Encoding variable: aux2268 with domain: bool (representing constraint (max_left_00002_00008_00008=max_left_00002_00008_00009))
c Var 'aux2268' direct represents '0' with '-17471'
c Var 'aux2268' direct represents '1' with '17471'
c Var 'aux2268' order represents '1' with '1'
c Var 'aux2268' order represents '0' with '-17471'
c Encoding variable: aux2269 with domain: bool (representing constraint (variant_fields_00002_00008_00009=max_left_00002_00008_00009))
c Var 'aux2269' direct represents '0' with '-17472'
c Var 'aux2269' direct represents '1' with '17472'
c Var 'aux2269' order represents '1' with '1'
c Var 'aux2269' order represents '0' with '-17472'
c Encoding variable: aux2270 with domain: bool (representing constraint (max_left_00002_00009_00001=max_left_00002_00009_00002))
c Var 'aux2270' direct represents '0' with '-17473'
c Var 'aux2270' direct represents '1' with '17473'
c Var 'aux2270' order represents '1' with '1'
c Var 'aux2270' order represents '0' with '-17473'
c Encoding variable: aux2271 with domain: bool (representing constraint (variant_fields_00002_00009_00002=max_left_00002_00009_00002))
c Var 'aux2271' direct represents '0' with '-17474'
c Var 'aux2271' direct represents '1' with '17474'
c Var 'aux2271' order represents '1' with '1'
c Var 'aux2271' order represents '0' with '-17474'
c Encoding variable: aux2272 with domain: bool (representing constraint (max_left_00002_00009_00002=max_left_00002_00009_00003))
c Var 'aux2272' direct represents '0' with '-17475'
c Var 'aux2272' direct represents '1' with '17475'
c Var 'aux2272' order represents '1' with '1'
c Var 'aux2272' order represents '0' with '-17475'
c Encoding variable: aux2273 with domain: bool (representing constraint (variant_fields_00002_00009_00003=max_left_00002_00009_00003))
c Var 'aux2273' direct represents '0' with '-17476'
c Var 'aux2273' direct represents '1' with '17476'
c Var 'aux2273' order represents '1' with '1'
c Var 'aux2273' order represents '0' with '-17476'
c Encoding variable: aux2274 with domain: bool (representing constraint (max_left_00002_00009_00003=max_left_00002_00009_00004))
c Var 'aux2274' direct represents '0' with '-17477'
c Var 'aux2274' direct represents '1' with '17477'
c Var 'aux2274' order represents '1' with '1'
c Var 'aux2274' order represents '0' with '-17477'
c Encoding variable: aux2275 with domain: bool (representing constraint (variant_fields_00002_00009_00004=max_left_00002_00009_00004))
c Var 'aux2275' direct represents '0' with '-17478'
c Var 'aux2275' direct represents '1' with '17478'
c Var 'aux2275' order represents '1' with '1'
c Var 'aux2275' order represents '0' with '-17478'
c Encoding variable: aux2276 with domain: bool (representing constraint (max_left_00002_00009_00004=max_left_00002_00009_00005))
c Var 'aux2276' direct represents '0' with '-17479'
c Var 'aux2276' direct represents '1' with '17479'
c Var 'aux2276' order represents '1' with '1'
c Var 'aux2276' order represents '0' with '-17479'
c Encoding variable: aux2277 with domain: bool (representing constraint (variant_fields_00002_00009_00005=max_left_00002_00009_00005))
c Var 'aux2277' direct represents '0' with '-17480'
c Var 'aux2277' direct represents '1' with '17480'
c Var 'aux2277' order represents '1' with '1'
c Var 'aux2277' order represents '0' with '-17480'
c Encoding variable: aux2278 with domain: bool (representing constraint (max_left_00002_00009_00005=max_left_00002_00009_00006))
c Var 'aux2278' direct represents '0' with '-17481'
c Var 'aux2278' direct represents '1' with '17481'
c Var 'aux2278' order represents '1' with '1'
c Var 'aux2278' order represents '0' with '-17481'
c Encoding variable: aux2279 with domain: bool (representing constraint (variant_fields_00002_00009_00006=max_left_00002_00009_00006))
c Var 'aux2279' direct represents '0' with '-17482'
c Var 'aux2279' direct represents '1' with '17482'
c Var 'aux2279' order represents '1' with '1'
c Var 'aux2279' order represents '0' with '-17482'
c Encoding variable: aux2280 with domain: bool (representing constraint (max_left_00002_00009_00006=max_left_00002_00009_00007))
c Var 'aux2280' direct represents '0' with '-17483'
c Var 'aux2280' direct represents '1' with '17483'
c Var 'aux2280' order represents '1' with '1'
c Var 'aux2280' order represents '0' with '-17483'
c Encoding variable: aux2281 with domain: bool (representing constraint (variant_fields_00002_00009_00007=max_left_00002_00009_00007))
c Var 'aux2281' direct represents '0' with '-17484'
c Var 'aux2281' direct represents '1' with '17484'
c Var 'aux2281' order represents '1' with '1'
c Var 'aux2281' order represents '0' with '-17484'
c Encoding variable: aux2282 with domain: bool (representing constraint (max_left_00002_00009_00007=max_left_00002_00009_00008))
c Var 'aux2282' direct represents '0' with '-17485'
c Var 'aux2282' direct represents '1' with '17485'
c Var 'aux2282' order represents '1' with '1'
c Var 'aux2282' order represents '0' with '-17485'
c Encoding variable: aux2283 with domain: bool (representing constraint (variant_fields_00002_00009_00008=max_left_00002_00009_00008))
c Var 'aux2283' direct represents '0' with '-17486'
c Var 'aux2283' direct represents '1' with '17486'
c Var 'aux2283' order represents '1' with '1'
c Var 'aux2283' order represents '0' with '-17486'
c Encoding variable: aux2284 with domain: bool (representing constraint (max_left_00002_00009_00008=max_left_00002_00009_00009))
c Var 'aux2284' direct represents '0' with '-17487'
c Var 'aux2284' direct represents '1' with '17487'
c Var 'aux2284' order represents '1' with '1'
c Var 'aux2284' order represents '0' with '-17487'
c Encoding variable: aux2285 with domain: bool (representing constraint (variant_fields_00002_00009_00009=max_left_00002_00009_00009))
c Var 'aux2285' direct represents '0' with '-17488'
c Var 'aux2285' direct represents '1' with '17488'
c Var 'aux2285' order represents '1' with '1'
c Var 'aux2285' order represents '0' with '-17488'
c Encoding variable: aux2286 with domain: bool (representing constraint (variant_fields_00003_00001_00002=max_left_00003_00001_00002))
c Var 'aux2286' direct represents '0' with '-17489'
c Var 'aux2286' direct represents '1' with '17489'
c Var 'aux2286' order represents '1' with '1'
c Var 'aux2286' order represents '0' with '-17489'
c Encoding variable: aux2287 with domain: bool (representing constraint (max_left_00003_00001_00001=max_left_00003_00001_00002))
c Var 'aux2287' direct represents '0' with '-17490'
c Var 'aux2287' direct represents '1' with '17490'
c Var 'aux2287' order represents '1' with '1'
c Var 'aux2287' order represents '0' with '-17490'
c Encoding variable: aux2288 with domain: bool (representing constraint (variant_fields_00003_00001_00003=max_left_00003_00001_00003))
c Var 'aux2288' direct represents '0' with '-17491'
c Var 'aux2288' direct represents '1' with '17491'
c Var 'aux2288' order represents '1' with '1'
c Var 'aux2288' order represents '0' with '-17491'
c Encoding variable: aux2289 with domain: bool (representing constraint (max_left_00003_00001_00002=max_left_00003_00001_00003))
c Var 'aux2289' direct represents '0' with '-17492'
c Var 'aux2289' direct represents '1' with '17492'
c Var 'aux2289' order represents '1' with '1'
c Var 'aux2289' order represents '0' with '-17492'
c Encoding variable: aux2290 with domain: bool (representing constraint (variant_fields_00003_00001_00004=max_left_00003_00001_00004))
c Var 'aux2290' direct represents '0' with '-17493'
c Var 'aux2290' direct represents '1' with '17493'
c Var 'aux2290' order represents '1' with '1'
c Var 'aux2290' order represents '0' with '-17493'
c Encoding variable: aux2291 with domain: bool (representing constraint (max_left_00003_00001_00003=max_left_00003_00001_00004))
c Var 'aux2291' direct represents '0' with '-17494'
c Var 'aux2291' direct represents '1' with '17494'
c Var 'aux2291' order represents '1' with '1'
c Var 'aux2291' order represents '0' with '-17494'
c Encoding variable: aux2292 with domain: bool (representing constraint (variant_fields_00003_00001_00005=max_left_00003_00001_00005))
c Var 'aux2292' direct represents '0' with '-17495'
c Var 'aux2292' direct represents '1' with '17495'
c Var 'aux2292' order represents '1' with '1'
c Var 'aux2292' order represents '0' with '-17495'
c Encoding variable: aux2293 with domain: bool (representing constraint (max_left_00003_00001_00004=max_left_00003_00001_00005))
c Var 'aux2293' direct represents '0' with '-17496'
c Var 'aux2293' direct represents '1' with '17496'
c Var 'aux2293' order represents '1' with '1'
c Var 'aux2293' order represents '0' with '-17496'
c Encoding variable: aux2294 with domain: bool (representing constraint (variant_fields_00003_00001_00006=max_left_00003_00001_00006))
c Var 'aux2294' direct represents '0' with '-17497'
c Var 'aux2294' direct represents '1' with '17497'
c Var 'aux2294' order represents '1' with '1'
c Var 'aux2294' order represents '0' with '-17497'
c Encoding variable: aux2295 with domain: bool (representing constraint (max_left_00003_00001_00005=max_left_00003_00001_00006))
c Var 'aux2295' direct represents '0' with '-17498'
c Var 'aux2295' direct represents '1' with '17498'
c Var 'aux2295' order represents '1' with '1'
c Var 'aux2295' order represents '0' with '-17498'
c Encoding variable: aux2296 with domain: bool (representing constraint (variant_fields_00003_00001_00007=max_left_00003_00001_00007))
c Var 'aux2296' direct represents '0' with '-17499'
c Var 'aux2296' direct represents '1' with '17499'
c Var 'aux2296' order represents '1' with '1'
c Var 'aux2296' order represents '0' with '-17499'
c Encoding variable: aux2297 with domain: bool (representing constraint (max_left_00003_00001_00006=max_left_00003_00001_00007))
c Var 'aux2297' direct represents '0' with '-17500'
c Var 'aux2297' direct represents '1' with '17500'
c Var 'aux2297' order represents '1' with '1'
c Var 'aux2297' order represents '0' with '-17500'
c Encoding variable: aux2298 with domain: bool (representing constraint (variant_fields_00003_00001_00008=max_left_00003_00001_00008))
c Var 'aux2298' direct represents '0' with '-17501'
c Var 'aux2298' direct represents '1' with '17501'
c Var 'aux2298' order represents '1' with '1'
c Var 'aux2298' order represents '0' with '-17501'
c Encoding variable: aux2299 with domain: bool (representing constraint (max_left_00003_00001_00007=max_left_00003_00001_00008))
c Var 'aux2299' direct represents '0' with '-17502'
c Var 'aux2299' direct represents '1' with '17502'
c Var 'aux2299' order represents '1' with '1'
c Var 'aux2299' order represents '0' with '-17502'
c Encoding variable: aux2300 with domain: bool (representing constraint (variant_fields_00003_00001_00009=max_left_00003_00001_00009))
c Var 'aux2300' direct represents '0' with '-17503'
c Var 'aux2300' direct represents '1' with '17503'
c Var 'aux2300' order represents '1' with '1'
c Var 'aux2300' order represents '0' with '-17503'
c Encoding variable: aux2301 with domain: bool (representing constraint (max_left_00003_00001_00008=max_left_00003_00001_00009))
c Var 'aux2301' direct represents '0' with '-17504'
c Var 'aux2301' direct represents '1' with '17504'
c Var 'aux2301' order represents '1' with '1'
c Var 'aux2301' order represents '0' with '-17504'
c Encoding variable: aux2302 with domain: bool (representing constraint (max_left_00003_00002_00001=max_left_00003_00002_00002))
c Var 'aux2302' direct represents '0' with '-17505'
c Var 'aux2302' direct represents '1' with '17505'
c Var 'aux2302' order represents '1' with '1'
c Var 'aux2302' order represents '0' with '-17505'
c Encoding variable: aux2303 with domain: bool (representing constraint (variant_fields_00003_00002_00002=max_left_00003_00002_00002))
c Var 'aux2303' direct represents '0' with '-17506'
c Var 'aux2303' direct represents '1' with '17506'
c Var 'aux2303' order represents '1' with '1'
c Var 'aux2303' order represents '0' with '-17506'
c Encoding variable: aux2304 with domain: bool (representing constraint (max_left_00003_00002_00002=max_left_00003_00002_00003))
c Var 'aux2304' direct represents '0' with '-17507'
c Var 'aux2304' direct represents '1' with '17507'
c Var 'aux2304' order represents '1' with '1'
c Var 'aux2304' order represents '0' with '-17507'
c Encoding variable: aux2305 with domain: bool (representing constraint (variant_fields_00003_00002_00003=max_left_00003_00002_00003))
c Var 'aux2305' direct represents '0' with '-17508'
c Var 'aux2305' direct represents '1' with '17508'
c Var 'aux2305' order represents '1' with '1'
c Var 'aux2305' order represents '0' with '-17508'
c Encoding variable: aux2306 with domain: bool (representing constraint (max_left_00003_00002_00003=max_left_00003_00002_00004))
c Var 'aux2306' direct represents '0' with '-17509'
c Var 'aux2306' direct represents '1' with '17509'
c Var 'aux2306' order represents '1' with '1'
c Var 'aux2306' order represents '0' with '-17509'
c Encoding variable: aux2307 with domain: bool (representing constraint (variant_fields_00003_00002_00004=max_left_00003_00002_00004))
c Var 'aux2307' direct represents '0' with '-17510'
c Var 'aux2307' direct represents '1' with '17510'
c Var 'aux2307' order represents '1' with '1'
c Var 'aux2307' order represents '0' with '-17510'
c Encoding variable: aux2308 with domain: bool (representing constraint (max_left_00003_00002_00004=max_left_00003_00002_00005))
c Var 'aux2308' direct represents '0' with '-17511'
c Var 'aux2308' direct represents '1' with '17511'
c Var 'aux2308' order represents '1' with '1'
c Var 'aux2308' order represents '0' with '-17511'
c Encoding variable: aux2309 with domain: bool (representing constraint (variant_fields_00003_00002_00005=max_left_00003_00002_00005))
c Var 'aux2309' direct represents '0' with '-17512'
c Var 'aux2309' direct represents '1' with '17512'
c Var 'aux2309' order represents '1' with '1'
c Var 'aux2309' order represents '0' with '-17512'
c Encoding variable: aux2310 with domain: bool (representing constraint (max_left_00003_00002_00005=max_left_00003_00002_00006))
c Var 'aux2310' direct represents '0' with '-17513'
c Var 'aux2310' direct represents '1' with '17513'
c Var 'aux2310' order represents '1' with '1'
c Var 'aux2310' order represents '0' with '-17513'
c Encoding variable: aux2311 with domain: bool (representing constraint (variant_fields_00003_00002_00006=max_left_00003_00002_00006))
c Var 'aux2311' direct represents '0' with '-17514'
c Var 'aux2311' direct represents '1' with '17514'
c Var 'aux2311' order represents '1' with '1'
c Var 'aux2311' order represents '0' with '-17514'
c Encoding variable: aux2312 with domain: bool (representing constraint (max_left_00003_00002_00006=max_left_00003_00002_00007))
c Var 'aux2312' direct represents '0' with '-17515'
c Var 'aux2312' direct represents '1' with '17515'
c Var 'aux2312' order represents '1' with '1'
c Var 'aux2312' order represents '0' with '-17515'
c Encoding variable: aux2313 with domain: bool (representing constraint (variant_fields_00003_00002_00007=max_left_00003_00002_00007))
c Var 'aux2313' direct represents '0' with '-17516'
c Var 'aux2313' direct represents '1' with '17516'
c Var 'aux2313' order represents '1' with '1'
c Var 'aux2313' order represents '0' with '-17516'
c Encoding variable: aux2314 with domain: bool (representing constraint (max_left_00003_00002_00007=max_left_00003_00002_00008))
c Var 'aux2314' direct represents '0' with '-17517'
c Var 'aux2314' direct represents '1' with '17517'
c Var 'aux2314' order represents '1' with '1'
c Var 'aux2314' order represents '0' with '-17517'
c Encoding variable: aux2315 with domain: bool (representing constraint (variant_fields_00003_00002_00008=max_left_00003_00002_00008))
c Var 'aux2315' direct represents '0' with '-17518'
c Var 'aux2315' direct represents '1' with '17518'
c Var 'aux2315' order represents '1' with '1'
c Var 'aux2315' order represents '0' with '-17518'
c Encoding variable: aux2316 with domain: bool (representing constraint (max_left_00003_00002_00008=max_left_00003_00002_00009))
c Var 'aux2316' direct represents '0' with '-17519'
c Var 'aux2316' direct represents '1' with '17519'
c Var 'aux2316' order represents '1' with '1'
c Var 'aux2316' order represents '0' with '-17519'
c Encoding variable: aux2317 with domain: bool (representing constraint (variant_fields_00003_00002_00009=max_left_00003_00002_00009))
c Var 'aux2317' direct represents '0' with '-17520'
c Var 'aux2317' direct represents '1' with '17520'
c Var 'aux2317' order represents '1' with '1'
c Var 'aux2317' order represents '0' with '-17520'
c Encoding variable: aux2318 with domain: bool (representing constraint (max_left_00003_00003_00001=max_left_00003_00003_00002))
c Var 'aux2318' direct represents '0' with '-17521'
c Var 'aux2318' direct represents '1' with '17521'
c Var 'aux2318' order represents '1' with '1'
c Var 'aux2318' order represents '0' with '-17521'
c Encoding variable: aux2319 with domain: bool (representing constraint (variant_fields_00003_00003_00002=max_left_00003_00003_00002))
c Var 'aux2319' direct represents '0' with '-17522'
c Var 'aux2319' direct represents '1' with '17522'
c Var 'aux2319' order represents '1' with '1'
c Var 'aux2319' order represents '0' with '-17522'
c Encoding variable: aux2320 with domain: bool (representing constraint (max_left_00003_00003_00002=max_left_00003_00003_00003))
c Var 'aux2320' direct represents '0' with '-17523'
c Var 'aux2320' direct represents '1' with '17523'
c Var 'aux2320' order represents '1' with '1'
c Var 'aux2320' order represents '0' with '-17523'
c Encoding variable: aux2321 with domain: bool (representing constraint (variant_fields_00003_00003_00003=max_left_00003_00003_00003))
c Var 'aux2321' direct represents '0' with '-17524'
c Var 'aux2321' direct represents '1' with '17524'
c Var 'aux2321' order represents '1' with '1'
c Var 'aux2321' order represents '0' with '-17524'
c Encoding variable: aux2322 with domain: bool (representing constraint (max_left_00003_00003_00003=max_left_00003_00003_00004))
c Var 'aux2322' direct represents '0' with '-17525'
c Var 'aux2322' direct represents '1' with '17525'
c Var 'aux2322' order represents '1' with '1'
c Var 'aux2322' order represents '0' with '-17525'
c Encoding variable: aux2323 with domain: bool (representing constraint (variant_fields_00003_00003_00004=max_left_00003_00003_00004))
c Var 'aux2323' direct represents '0' with '-17526'
c Var 'aux2323' direct represents '1' with '17526'
c Var 'aux2323' order represents '1' with '1'
c Var 'aux2323' order represents '0' with '-17526'
c Encoding variable: aux2324 with domain: bool (representing constraint (max_left_00003_00003_00004=max_left_00003_00003_00005))
c Var 'aux2324' direct represents '0' with '-17527'
c Var 'aux2324' direct represents '1' with '17527'
c Var 'aux2324' order represents '1' with '1'
c Var 'aux2324' order represents '0' with '-17527'
c Encoding variable: aux2325 with domain: bool (representing constraint (variant_fields_00003_00003_00005=max_left_00003_00003_00005))
c Var 'aux2325' direct represents '0' with '-17528'
c Var 'aux2325' direct represents '1' with '17528'
c Var 'aux2325' order represents '1' with '1'
c Var 'aux2325' order represents '0' with '-17528'
c Encoding variable: aux2326 with domain: bool (representing constraint (max_left_00003_00003_00005=max_left_00003_00003_00006))
c Var 'aux2326' direct represents '0' with '-17529'
c Var 'aux2326' direct represents '1' with '17529'
c Var 'aux2326' order represents '1' with '1'
c Var 'aux2326' order represents '0' with '-17529'
c Encoding variable: aux2327 with domain: bool (representing constraint (variant_fields_00003_00003_00006=max_left_00003_00003_00006))
c Var 'aux2327' direct represents '0' with '-17530'
c Var 'aux2327' direct represents '1' with '17530'
c Var 'aux2327' order represents '1' with '1'
c Var 'aux2327' order represents '0' with '-17530'
c Encoding variable: aux2328 with domain: bool (representing constraint (max_left_00003_00003_00006=max_left_00003_00003_00007))
c Var 'aux2328' direct represents '0' with '-17531'
c Var 'aux2328' direct represents '1' with '17531'
c Var 'aux2328' order represents '1' with '1'
c Var 'aux2328' order represents '0' with '-17531'
c Encoding variable: aux2329 with domain: bool (representing constraint (variant_fields_00003_00003_00007=max_left_00003_00003_00007))
c Var 'aux2329' direct represents '0' with '-17532'
c Var 'aux2329' direct represents '1' with '17532'
c Var 'aux2329' order represents '1' with '1'
c Var 'aux2329' order represents '0' with '-17532'
c Encoding variable: aux2330 with domain: bool (representing constraint (max_left_00003_00003_00007=max_left_00003_00003_00008))
c Var 'aux2330' direct represents '0' with '-17533'
c Var 'aux2330' direct represents '1' with '17533'
c Var 'aux2330' order represents '1' with '1'
c Var 'aux2330' order represents '0' with '-17533'
c Encoding variable: aux2331 with domain: bool (representing constraint (variant_fields_00003_00003_00008=max_left_00003_00003_00008))
c Var 'aux2331' direct represents '0' with '-17534'
c Var 'aux2331' direct represents '1' with '17534'
c Var 'aux2331' order represents '1' with '1'
c Var 'aux2331' order represents '0' with '-17534'
c Encoding variable: aux2332 with domain: bool (representing constraint (max_left_00003_00003_00008=max_left_00003_00003_00009))
c Var 'aux2332' direct represents '0' with '-17535'
c Var 'aux2332' direct represents '1' with '17535'
c Var 'aux2332' order represents '1' with '1'
c Var 'aux2332' order represents '0' with '-17535'
c Encoding variable: aux2333 with domain: bool (representing constraint (variant_fields_00003_00003_00009=max_left_00003_00003_00009))
c Var 'aux2333' direct represents '0' with '-17536'
c Var 'aux2333' direct represents '1' with '17536'
c Var 'aux2333' order represents '1' with '1'
c Var 'aux2333' order represents '0' with '-17536'
c Encoding variable: aux2334 with domain: bool (representing constraint (max_left_00003_00004_00001=max_left_00003_00004_00002))
c Var 'aux2334' direct represents '0' with '-17537'
c Var 'aux2334' direct represents '1' with '17537'
c Var 'aux2334' order represents '1' with '1'
c Var 'aux2334' order represents '0' with '-17537'
c Encoding variable: aux2335 with domain: bool (representing constraint (variant_fields_00003_00004_00002=max_left_00003_00004_00002))
c Var 'aux2335' direct represents '0' with '-17538'
c Var 'aux2335' direct represents '1' with '17538'
c Var 'aux2335' order represents '1' with '1'
c Var 'aux2335' order represents '0' with '-17538'
c Encoding variable: aux2336 with domain: bool (representing constraint (max_left_00003_00004_00002=max_left_00003_00004_00003))
c Var 'aux2336' direct represents '0' with '-17539'
c Var 'aux2336' direct represents '1' with '17539'
c Var 'aux2336' order represents '1' with '1'
c Var 'aux2336' order represents '0' with '-17539'
c Encoding variable: aux2337 with domain: bool (representing constraint (variant_fields_00003_00004_00003=max_left_00003_00004_00003))
c Var 'aux2337' direct represents '0' with '-17540'
c Var 'aux2337' direct represents '1' with '17540'
c Var 'aux2337' order represents '1' with '1'
c Var 'aux2337' order represents '0' with '-17540'
c Encoding variable: aux2338 with domain: bool (representing constraint (max_left_00003_00004_00003=max_left_00003_00004_00004))
c Var 'aux2338' direct represents '0' with '-17541'
c Var 'aux2338' direct represents '1' with '17541'
c Var 'aux2338' order represents '1' with '1'
c Var 'aux2338' order represents '0' with '-17541'
c Encoding variable: aux2339 with domain: bool (representing constraint (variant_fields_00003_00004_00004=max_left_00003_00004_00004))
c Var 'aux2339' direct represents '0' with '-17542'
c Var 'aux2339' direct represents '1' with '17542'
c Var 'aux2339' order represents '1' with '1'
c Var 'aux2339' order represents '0' with '-17542'
c Encoding variable: aux2340 with domain: bool (representing constraint (max_left_00003_00004_00004=max_left_00003_00004_00005))
c Var 'aux2340' direct represents '0' with '-17543'
c Var 'aux2340' direct represents '1' with '17543'
c Var 'aux2340' order represents '1' with '1'
c Var 'aux2340' order represents '0' with '-17543'
c Encoding variable: aux2341 with domain: bool (representing constraint (variant_fields_00003_00004_00005=max_left_00003_00004_00005))
c Var 'aux2341' direct represents '0' with '-17544'
c Var 'aux2341' direct represents '1' with '17544'
c Var 'aux2341' order represents '1' with '1'
c Var 'aux2341' order represents '0' with '-17544'
c Encoding variable: aux2342 with domain: bool (representing constraint (max_left_00003_00004_00005=max_left_00003_00004_00006))
c Var 'aux2342' direct represents '0' with '-17545'
c Var 'aux2342' direct represents '1' with '17545'
c Var 'aux2342' order represents '1' with '1'
c Var 'aux2342' order represents '0' with '-17545'
c Encoding variable: aux2343 with domain: bool (representing constraint (variant_fields_00003_00004_00006=max_left_00003_00004_00006))
c Var 'aux2343' direct represents '0' with '-17546'
c Var 'aux2343' direct represents '1' with '17546'
c Var 'aux2343' order represents '1' with '1'
c Var 'aux2343' order represents '0' with '-17546'
c Encoding variable: aux2344 with domain: bool (representing constraint (max_left_00003_00004_00006=max_left_00003_00004_00007))
c Var 'aux2344' direct represents '0' with '-17547'
c Var 'aux2344' direct represents '1' with '17547'
c Var 'aux2344' order represents '1' with '1'
c Var 'aux2344' order represents '0' with '-17547'
c Encoding variable: aux2345 with domain: bool (representing constraint (variant_fields_00003_00004_00007=max_left_00003_00004_00007))
c Var 'aux2345' direct represents '0' with '-17548'
c Var 'aux2345' direct represents '1' with '17548'
c Var 'aux2345' order represents '1' with '1'
c Var 'aux2345' order represents '0' with '-17548'
c Encoding variable: aux2346 with domain: bool (representing constraint (max_left_00003_00004_00007=max_left_00003_00004_00008))
c Var 'aux2346' direct represents '0' with '-17549'
c Var 'aux2346' direct represents '1' with '17549'
c Var 'aux2346' order represents '1' with '1'
c Var 'aux2346' order represents '0' with '-17549'
c Encoding variable: aux2347 with domain: bool (representing constraint (variant_fields_00003_00004_00008=max_left_00003_00004_00008))
c Var 'aux2347' direct represents '0' with '-17550'
c Var 'aux2347' direct represents '1' with '17550'
c Var 'aux2347' order represents '1' with '1'
c Var 'aux2347' order represents '0' with '-17550'
c Encoding variable: aux2348 with domain: bool (representing constraint (max_left_00003_00004_00008=max_left_00003_00004_00009))
c Var 'aux2348' direct represents '0' with '-17551'
c Var 'aux2348' direct represents '1' with '17551'
c Var 'aux2348' order represents '1' with '1'
c Var 'aux2348' order represents '0' with '-17551'
c Encoding variable: aux2349 with domain: bool (representing constraint (variant_fields_00003_00004_00009=max_left_00003_00004_00009))
c Var 'aux2349' direct represents '0' with '-17552'
c Var 'aux2349' direct represents '1' with '17552'
c Var 'aux2349' order represents '1' with '1'
c Var 'aux2349' order represents '0' with '-17552'
c Encoding variable: aux2350 with domain: bool (representing constraint (max_left_00003_00005_00001=max_left_00003_00005_00002))
c Var 'aux2350' direct represents '0' with '-17553'
c Var 'aux2350' direct represents '1' with '17553'
c Var 'aux2350' order represents '1' with '1'
c Var 'aux2350' order represents '0' with '-17553'
c Encoding variable: aux2351 with domain: bool (representing constraint (variant_fields_00003_00005_00002=max_left_00003_00005_00002))
c Var 'aux2351' direct represents '0' with '-17554'
c Var 'aux2351' direct represents '1' with '17554'
c Var 'aux2351' order represents '1' with '1'
c Var 'aux2351' order represents '0' with '-17554'
c Encoding variable: aux2352 with domain: bool (representing constraint (max_left_00003_00005_00002=max_left_00003_00005_00003))
c Var 'aux2352' direct represents '0' with '-17555'
c Var 'aux2352' direct represents '1' with '17555'
c Var 'aux2352' order represents '1' with '1'
c Var 'aux2352' order represents '0' with '-17555'
c Encoding variable: aux2353 with domain: bool (representing constraint (variant_fields_00003_00005_00003=max_left_00003_00005_00003))
c Var 'aux2353' direct represents '0' with '-17556'
c Var 'aux2353' direct represents '1' with '17556'
c Var 'aux2353' order represents '1' with '1'
c Var 'aux2353' order represents '0' with '-17556'
c Encoding variable: aux2354 with domain: bool (representing constraint (max_left_00003_00005_00003=max_left_00003_00005_00004))
c Var 'aux2354' direct represents '0' with '-17557'
c Var 'aux2354' direct represents '1' with '17557'
c Var 'aux2354' order represents '1' with '1'
c Var 'aux2354' order represents '0' with '-17557'
c Encoding variable: aux2355 with domain: bool (representing constraint (variant_fields_00003_00005_00004=max_left_00003_00005_00004))
c Var 'aux2355' direct represents '0' with '-17558'
c Var 'aux2355' direct represents '1' with '17558'
c Var 'aux2355' order represents '1' with '1'
c Var 'aux2355' order represents '0' with '-17558'
c Encoding variable: aux2356 with domain: bool (representing constraint (max_left_00003_00005_00004=max_left_00003_00005_00005))
c Var 'aux2356' direct represents '0' with '-17559'
c Var 'aux2356' direct represents '1' with '17559'
c Var 'aux2356' order represents '1' with '1'
c Var 'aux2356' order represents '0' with '-17559'
c Encoding variable: aux2357 with domain: bool (representing constraint (variant_fields_00003_00005_00005=max_left_00003_00005_00005))
c Var 'aux2357' direct represents '0' with '-17560'
c Var 'aux2357' direct represents '1' with '17560'
c Var 'aux2357' order represents '1' with '1'
c Var 'aux2357' order represents '0' with '-17560'
c Encoding variable: aux2358 with domain: bool (representing constraint (max_left_00003_00005_00005=max_left_00003_00005_00006))
c Var 'aux2358' direct represents '0' with '-17561'
c Var 'aux2358' direct represents '1' with '17561'
c Var 'aux2358' order represents '1' with '1'
c Var 'aux2358' order represents '0' with '-17561'
c Encoding variable: aux2359 with domain: bool (representing constraint (variant_fields_00003_00005_00006=max_left_00003_00005_00006))
c Var 'aux2359' direct represents '0' with '-17562'
c Var 'aux2359' direct represents '1' with '17562'
c Var 'aux2359' order represents '1' with '1'
c Var 'aux2359' order represents '0' with '-17562'
c Encoding variable: aux2360 with domain: bool (representing constraint (max_left_00003_00005_00006=max_left_00003_00005_00007))
c Var 'aux2360' direct represents '0' with '-17563'
c Var 'aux2360' direct represents '1' with '17563'
c Var 'aux2360' order represents '1' with '1'
c Var 'aux2360' order represents '0' with '-17563'
c Encoding variable: aux2361 with domain: bool (representing constraint (variant_fields_00003_00005_00007=max_left_00003_00005_00007))
c Var 'aux2361' direct represents '0' with '-17564'
c Var 'aux2361' direct represents '1' with '17564'
c Var 'aux2361' order represents '1' with '1'
c Var 'aux2361' order represents '0' with '-17564'
c Encoding variable: aux2362 with domain: bool (representing constraint (max_left_00003_00005_00007=max_left_00003_00005_00008))
c Var 'aux2362' direct represents '0' with '-17565'
c Var 'aux2362' direct represents '1' with '17565'
c Var 'aux2362' order represents '1' with '1'
c Var 'aux2362' order represents '0' with '-17565'
c Encoding variable: aux2363 with domain: bool (representing constraint (variant_fields_00003_00005_00008=max_left_00003_00005_00008))
c Var 'aux2363' direct represents '0' with '-17566'
c Var 'aux2363' direct represents '1' with '17566'
c Var 'aux2363' order represents '1' with '1'
c Var 'aux2363' order represents '0' with '-17566'
c Encoding variable: aux2364 with domain: bool (representing constraint (max_left_00003_00005_00008=max_left_00003_00005_00009))
c Var 'aux2364' direct represents '0' with '-17567'
c Var 'aux2364' direct represents '1' with '17567'
c Var 'aux2364' order represents '1' with '1'
c Var 'aux2364' order represents '0' with '-17567'
c Encoding variable: aux2365 with domain: bool (representing constraint (variant_fields_00003_00005_00009=max_left_00003_00005_00009))
c Var 'aux2365' direct represents '0' with '-17568'
c Var 'aux2365' direct represents '1' with '17568'
c Var 'aux2365' order represents '1' with '1'
c Var 'aux2365' order represents '0' with '-17568'
c Encoding variable: aux2366 with domain: bool (representing constraint (variant_fields_00003_00006_00002=max_left_00003_00006_00002))
c Var 'aux2366' direct represents '0' with '-17569'
c Var 'aux2366' direct represents '1' with '17569'
c Var 'aux2366' order represents '1' with '1'
c Var 'aux2366' order represents '0' with '-17569'
c Encoding variable: aux2367 with domain: bool (representing constraint (max_left_00003_00006_00001=max_left_00003_00006_00002))
c Var 'aux2367' direct represents '0' with '-17570'
c Var 'aux2367' direct represents '1' with '17570'
c Var 'aux2367' order represents '1' with '1'
c Var 'aux2367' order represents '0' with '-17570'
c Encoding variable: aux2368 with domain: bool (representing constraint (variant_fields_00003_00006_00003=max_left_00003_00006_00003))
c Var 'aux2368' direct represents '0' with '-17571'
c Var 'aux2368' direct represents '1' with '17571'
c Var 'aux2368' order represents '1' with '1'
c Var 'aux2368' order represents '0' with '-17571'
c Encoding variable: aux2369 with domain: bool (representing constraint (max_left_00003_00006_00002=max_left_00003_00006_00003))
c Var 'aux2369' direct represents '0' with '-17572'
c Var 'aux2369' direct represents '1' with '17572'
c Var 'aux2369' order represents '1' with '1'
c Var 'aux2369' order represents '0' with '-17572'
c Encoding variable: aux2370 with domain: bool (representing constraint (variant_fields_00003_00006_00004=max_left_00003_00006_00004))
c Var 'aux2370' direct represents '0' with '-17573'
c Var 'aux2370' direct represents '1' with '17573'
c Var 'aux2370' order represents '1' with '1'
c Var 'aux2370' order represents '0' with '-17573'
c Encoding variable: aux2371 with domain: bool (representing constraint (max_left_00003_00006_00003=max_left_00003_00006_00004))
c Var 'aux2371' direct represents '0' with '-17574'
c Var 'aux2371' direct represents '1' with '17574'
c Var 'aux2371' order represents '1' with '1'
c Var 'aux2371' order represents '0' with '-17574'
c Encoding variable: aux2372 with domain: bool (representing constraint (variant_fields_00003_00006_00005=max_left_00003_00006_00005))
c Var 'aux2372' direct represents '0' with '-17575'
c Var 'aux2372' direct represents '1' with '17575'
c Var 'aux2372' order represents '1' with '1'
c Var 'aux2372' order represents '0' with '-17575'
c Encoding variable: aux2373 with domain: bool (representing constraint (max_left_00003_00006_00004=max_left_00003_00006_00005))
c Var 'aux2373' direct represents '0' with '-17576'
c Var 'aux2373' direct represents '1' with '17576'
c Var 'aux2373' order represents '1' with '1'
c Var 'aux2373' order represents '0' with '-17576'
c Encoding variable: aux2374 with domain: bool (representing constraint (variant_fields_00003_00006_00006=max_left_00003_00006_00006))
c Var 'aux2374' direct represents '0' with '-17577'
c Var 'aux2374' direct represents '1' with '17577'
c Var 'aux2374' order represents '1' with '1'
c Var 'aux2374' order represents '0' with '-17577'
c Encoding variable: aux2375 with domain: bool (representing constraint (max_left_00003_00006_00005=max_left_00003_00006_00006))
c Var 'aux2375' direct represents '0' with '-17578'
c Var 'aux2375' direct represents '1' with '17578'
c Var 'aux2375' order represents '1' with '1'
c Var 'aux2375' order represents '0' with '-17578'
c Encoding variable: aux2376 with domain: bool (representing constraint (variant_fields_00003_00006_00007=max_left_00003_00006_00007))
c Var 'aux2376' direct represents '0' with '-17579'
c Var 'aux2376' direct represents '1' with '17579'
c Var 'aux2376' order represents '1' with '1'
c Var 'aux2376' order represents '0' with '-17579'
c Encoding variable: aux2377 with domain: bool (representing constraint (max_left_00003_00006_00006=max_left_00003_00006_00007))
c Var 'aux2377' direct represents '0' with '-17580'
c Var 'aux2377' direct represents '1' with '17580'
c Var 'aux2377' order represents '1' with '1'
c Var 'aux2377' order represents '0' with '-17580'
c Encoding variable: aux2378 with domain: bool (representing constraint (variant_fields_00003_00006_00008=max_left_00003_00006_00008))
c Var 'aux2378' direct represents '0' with '-17581'
c Var 'aux2378' direct represents '1' with '17581'
c Var 'aux2378' order represents '1' with '1'
c Var 'aux2378' order represents '0' with '-17581'
c Encoding variable: aux2379 with domain: bool (representing constraint (max_left_00003_00006_00007=max_left_00003_00006_00008))
c Var 'aux2379' direct represents '0' with '-17582'
c Var 'aux2379' direct represents '1' with '17582'
c Var 'aux2379' order represents '1' with '1'
c Var 'aux2379' order represents '0' with '-17582'
c Encoding variable: aux2380 with domain: bool (representing constraint (variant_fields_00003_00006_00009=max_left_00003_00006_00009))
c Var 'aux2380' direct represents '0' with '-17583'
c Var 'aux2380' direct represents '1' with '17583'
c Var 'aux2380' order represents '1' with '1'
c Var 'aux2380' order represents '0' with '-17583'
c Encoding variable: aux2381 with domain: bool (representing constraint (max_left_00003_00006_00008=max_left_00003_00006_00009))
c Var 'aux2381' direct represents '0' with '-17584'
c Var 'aux2381' direct represents '1' with '17584'
c Var 'aux2381' order represents '1' with '1'
c Var 'aux2381' order represents '0' with '-17584'
c Encoding variable: aux2382 with domain: bool (representing constraint (max_left_00003_00007_00001=max_left_00003_00007_00002))
c Var 'aux2382' direct represents '0' with '-17585'
c Var 'aux2382' direct represents '1' with '17585'
c Var 'aux2382' order represents '1' with '1'
c Var 'aux2382' order represents '0' with '-17585'
c Encoding variable: aux2383 with domain: bool (representing constraint (variant_fields_00003_00007_00002=max_left_00003_00007_00002))
c Var 'aux2383' direct represents '0' with '-17586'
c Var 'aux2383' direct represents '1' with '17586'
c Var 'aux2383' order represents '1' with '1'
c Var 'aux2383' order represents '0' with '-17586'
c Encoding variable: aux2384 with domain: bool (representing constraint (max_left_00003_00007_00002=max_left_00003_00007_00003))
c Var 'aux2384' direct represents '0' with '-17587'
c Var 'aux2384' direct represents '1' with '17587'
c Var 'aux2384' order represents '1' with '1'
c Var 'aux2384' order represents '0' with '-17587'
c Encoding variable: aux2385 with domain: bool (representing constraint (variant_fields_00003_00007_00003=max_left_00003_00007_00003))
c Var 'aux2385' direct represents '0' with '-17588'
c Var 'aux2385' direct represents '1' with '17588'
c Var 'aux2385' order represents '1' with '1'
c Var 'aux2385' order represents '0' with '-17588'
c Encoding variable: aux2386 with domain: bool (representing constraint (max_left_00003_00007_00003=max_left_00003_00007_00004))
c Var 'aux2386' direct represents '0' with '-17589'
c Var 'aux2386' direct represents '1' with '17589'
c Var 'aux2386' order represents '1' with '1'
c Var 'aux2386' order represents '0' with '-17589'
c Encoding variable: aux2387 with domain: bool (representing constraint (variant_fields_00003_00007_00004=max_left_00003_00007_00004))
c Var 'aux2387' direct represents '0' with '-17590'
c Var 'aux2387' direct represents '1' with '17590'
c Var 'aux2387' order represents '1' with '1'
c Var 'aux2387' order represents '0' with '-17590'
c Encoding variable: aux2388 with domain: bool (representing constraint (max_left_00003_00007_00004=max_left_00003_00007_00005))
c Var 'aux2388' direct represents '0' with '-17591'
c Var 'aux2388' direct represents '1' with '17591'
c Var 'aux2388' order represents '1' with '1'
c Var 'aux2388' order represents '0' with '-17591'
c Encoding variable: aux2389 with domain: bool (representing constraint (variant_fields_00003_00007_00005=max_left_00003_00007_00005))
c Var 'aux2389' direct represents '0' with '-17592'
c Var 'aux2389' direct represents '1' with '17592'
c Var 'aux2389' order represents '1' with '1'
c Var 'aux2389' order represents '0' with '-17592'
c Encoding variable: aux2390 with domain: bool (representing constraint (max_left_00003_00007_00005=max_left_00003_00007_00006))
c Var 'aux2390' direct represents '0' with '-17593'
c Var 'aux2390' direct represents '1' with '17593'
c Var 'aux2390' order represents '1' with '1'
c Var 'aux2390' order represents '0' with '-17593'
c Encoding variable: aux2391 with domain: bool (representing constraint (variant_fields_00003_00007_00006=max_left_00003_00007_00006))
c Var 'aux2391' direct represents '0' with '-17594'
c Var 'aux2391' direct represents '1' with '17594'
c Var 'aux2391' order represents '1' with '1'
c Var 'aux2391' order represents '0' with '-17594'
c Encoding variable: aux2392 with domain: bool (representing constraint (max_left_00003_00007_00006=max_left_00003_00007_00007))
c Var 'aux2392' direct represents '0' with '-17595'
c Var 'aux2392' direct represents '1' with '17595'
c Var 'aux2392' order represents '1' with '1'
c Var 'aux2392' order represents '0' with '-17595'
c Encoding variable: aux2393 with domain: bool (representing constraint (variant_fields_00003_00007_00007=max_left_00003_00007_00007))
c Var 'aux2393' direct represents '0' with '-17596'
c Var 'aux2393' direct represents '1' with '17596'
c Var 'aux2393' order represents '1' with '1'
c Var 'aux2393' order represents '0' with '-17596'
c Encoding variable: aux2394 with domain: bool (representing constraint (max_left_00003_00007_00007=max_left_00003_00007_00008))
c Var 'aux2394' direct represents '0' with '-17597'
c Var 'aux2394' direct represents '1' with '17597'
c Var 'aux2394' order represents '1' with '1'
c Var 'aux2394' order represents '0' with '-17597'
c Encoding variable: aux2395 with domain: bool (representing constraint (variant_fields_00003_00007_00008=max_left_00003_00007_00008))
c Var 'aux2395' direct represents '0' with '-17598'
c Var 'aux2395' direct represents '1' with '17598'
c Var 'aux2395' order represents '1' with '1'
c Var 'aux2395' order represents '0' with '-17598'
c Encoding variable: aux2396 with domain: bool (representing constraint (max_left_00003_00007_00008=max_left_00003_00007_00009))
c Var 'aux2396' direct represents '0' with '-17599'
c Var 'aux2396' direct represents '1' with '17599'
c Var 'aux2396' order represents '1' with '1'
c Var 'aux2396' order represents '0' with '-17599'
c Encoding variable: aux2397 with domain: bool (representing constraint (variant_fields_00003_00007_00009=max_left_00003_00007_00009))
c Var 'aux2397' direct represents '0' with '-17600'
c Var 'aux2397' direct represents '1' with '17600'
c Var 'aux2397' order represents '1' with '1'
c Var 'aux2397' order represents '0' with '-17600'
c Encoding variable: aux2398 with domain: bool (representing constraint (max_left_00003_00008_00001=max_left_00003_00008_00002))
c Var 'aux2398' direct represents '0' with '-17601'
c Var 'aux2398' direct represents '1' with '17601'
c Var 'aux2398' order represents '1' with '1'
c Var 'aux2398' order represents '0' with '-17601'
c Encoding variable: aux2399 with domain: bool (representing constraint (variant_fields_00003_00008_00002=max_left_00003_00008_00002))
c Var 'aux2399' direct represents '0' with '-17602'
c Var 'aux2399' direct represents '1' with '17602'
c Var 'aux2399' order represents '1' with '1'
c Var 'aux2399' order represents '0' with '-17602'
c Encoding variable: aux2400 with domain: bool (representing constraint (max_left_00003_00008_00002=max_left_00003_00008_00003))
c Var 'aux2400' direct represents '0' with '-17603'
c Var 'aux2400' direct represents '1' with '17603'
c Var 'aux2400' order represents '1' with '1'
c Var 'aux2400' order represents '0' with '-17603'
c Encoding variable: aux2401 with domain: bool (representing constraint (variant_fields_00003_00008_00003=max_left_00003_00008_00003))
c Var 'aux2401' direct represents '0' with '-17604'
c Var 'aux2401' direct represents '1' with '17604'
c Var 'aux2401' order represents '1' with '1'
c Var 'aux2401' order represents '0' with '-17604'
c Encoding variable: aux2402 with domain: bool (representing constraint (max_left_00003_00008_00003=max_left_00003_00008_00004))
c Var 'aux2402' direct represents '0' with '-17605'
c Var 'aux2402' direct represents '1' with '17605'
c Var 'aux2402' order represents '1' with '1'
c Var 'aux2402' order represents '0' with '-17605'
c Encoding variable: aux2403 with domain: bool (representing constraint (variant_fields_00003_00008_00004=max_left_00003_00008_00004))
c Var 'aux2403' direct represents '0' with '-17606'
c Var 'aux2403' direct represents '1' with '17606'
c Var 'aux2403' order represents '1' with '1'
c Var 'aux2403' order represents '0' with '-17606'
c Encoding variable: aux2404 with domain: bool (representing constraint (max_left_00003_00008_00004=max_left_00003_00008_00005))
c Var 'aux2404' direct represents '0' with '-17607'
c Var 'aux2404' direct represents '1' with '17607'
c Var 'aux2404' order represents '1' with '1'
c Var 'aux2404' order represents '0' with '-17607'
c Encoding variable: aux2405 with domain: bool (representing constraint (variant_fields_00003_00008_00005=max_left_00003_00008_00005))
c Var 'aux2405' direct represents '0' with '-17608'
c Var 'aux2405' direct represents '1' with '17608'
c Var 'aux2405' order represents '1' with '1'
c Var 'aux2405' order represents '0' with '-17608'
c Encoding variable: aux2406 with domain: bool (representing constraint (max_left_00003_00008_00005=max_left_00003_00008_00006))
c Var 'aux2406' direct represents '0' with '-17609'
c Var 'aux2406' direct represents '1' with '17609'
c Var 'aux2406' order represents '1' with '1'
c Var 'aux2406' order represents '0' with '-17609'
c Encoding variable: aux2407 with domain: bool (representing constraint (variant_fields_00003_00008_00006=max_left_00003_00008_00006))
c Var 'aux2407' direct represents '0' with '-17610'
c Var 'aux2407' direct represents '1' with '17610'
c Var 'aux2407' order represents '1' with '1'
c Var 'aux2407' order represents '0' with '-17610'
c Encoding variable: aux2408 with domain: bool (representing constraint (max_left_00003_00008_00006=max_left_00003_00008_00007))
c Var 'aux2408' direct represents '0' with '-17611'
c Var 'aux2408' direct represents '1' with '17611'
c Var 'aux2408' order represents '1' with '1'
c Var 'aux2408' order represents '0' with '-17611'
c Encoding variable: aux2409 with domain: bool (representing constraint (variant_fields_00003_00008_00007=max_left_00003_00008_00007))
c Var 'aux2409' direct represents '0' with '-17612'
c Var 'aux2409' direct represents '1' with '17612'
c Var 'aux2409' order represents '1' with '1'
c Var 'aux2409' order represents '0' with '-17612'
c Encoding variable: aux2410 with domain: bool (representing constraint (max_left_00003_00008_00007=max_left_00003_00008_00008))
c Var 'aux2410' direct represents '0' with '-17613'
c Var 'aux2410' direct represents '1' with '17613'
c Var 'aux2410' order represents '1' with '1'
c Var 'aux2410' order represents '0' with '-17613'
c Encoding variable: aux2411 with domain: bool (representing constraint (variant_fields_00003_00008_00008=max_left_00003_00008_00008))
c Var 'aux2411' direct represents '0' with '-17614'
c Var 'aux2411' direct represents '1' with '17614'
c Var 'aux2411' order represents '1' with '1'
c Var 'aux2411' order represents '0' with '-17614'
c Encoding variable: aux2412 with domain: bool (representing constraint (max_left_00003_00008_00008=max_left_00003_00008_00009))
c Var 'aux2412' direct represents '0' with '-17615'
c Var 'aux2412' direct represents '1' with '17615'
c Var 'aux2412' order represents '1' with '1'
c Var 'aux2412' order represents '0' with '-17615'
c Encoding variable: aux2413 with domain: bool (representing constraint (variant_fields_00003_00008_00009=max_left_00003_00008_00009))
c Var 'aux2413' direct represents '0' with '-17616'
c Var 'aux2413' direct represents '1' with '17616'
c Var 'aux2413' order represents '1' with '1'
c Var 'aux2413' order represents '0' with '-17616'
c Encoding variable: aux2414 with domain: bool (representing constraint (max_left_00003_00009_00001=max_left_00003_00009_00002))
c Var 'aux2414' direct represents '0' with '-17617'
c Var 'aux2414' direct represents '1' with '17617'
c Var 'aux2414' order represents '1' with '1'
c Var 'aux2414' order represents '0' with '-17617'
c Encoding variable: aux2415 with domain: bool (representing constraint (variant_fields_00003_00009_00002=max_left_00003_00009_00002))
c Var 'aux2415' direct represents '0' with '-17618'
c Var 'aux2415' direct represents '1' with '17618'
c Var 'aux2415' order represents '1' with '1'
c Var 'aux2415' order represents '0' with '-17618'
c Encoding variable: aux2416 with domain: bool (representing constraint (max_left_00003_00009_00002=max_left_00003_00009_00003))
c Var 'aux2416' direct represents '0' with '-17619'
c Var 'aux2416' direct represents '1' with '17619'
c Var 'aux2416' order represents '1' with '1'
c Var 'aux2416' order represents '0' with '-17619'
c Encoding variable: aux2417 with domain: bool (representing constraint (variant_fields_00003_00009_00003=max_left_00003_00009_00003))
c Var 'aux2417' direct represents '0' with '-17620'
c Var 'aux2417' direct represents '1' with '17620'
c Var 'aux2417' order represents '1' with '1'
c Var 'aux2417' order represents '0' with '-17620'
c Encoding variable: aux2418 with domain: bool (representing constraint (max_left_00003_00009_00003=max_left_00003_00009_00004))
c Var 'aux2418' direct represents '0' with '-17621'
c Var 'aux2418' direct represents '1' with '17621'
c Var 'aux2418' order represents '1' with '1'
c Var 'aux2418' order represents '0' with '-17621'
c Encoding variable: aux2419 with domain: bool (representing constraint (variant_fields_00003_00009_00004=max_left_00003_00009_00004))
c Var 'aux2419' direct represents '0' with '-17622'
c Var 'aux2419' direct represents '1' with '17622'
c Var 'aux2419' order represents '1' with '1'
c Var 'aux2419' order represents '0' with '-17622'
c Encoding variable: aux2420 with domain: bool (representing constraint (max_left_00003_00009_00004=max_left_00003_00009_00005))
c Var 'aux2420' direct represents '0' with '-17623'
c Var 'aux2420' direct represents '1' with '17623'
c Var 'aux2420' order represents '1' with '1'
c Var 'aux2420' order represents '0' with '-17623'
c Encoding variable: aux2421 with domain: bool (representing constraint (variant_fields_00003_00009_00005=max_left_00003_00009_00005))
c Var 'aux2421' direct represents '0' with '-17624'
c Var 'aux2421' direct represents '1' with '17624'
c Var 'aux2421' order represents '1' with '1'
c Var 'aux2421' order represents '0' with '-17624'
c Encoding variable: aux2422 with domain: bool (representing constraint (max_left_00003_00009_00005=max_left_00003_00009_00006))
c Var 'aux2422' direct represents '0' with '-17625'
c Var 'aux2422' direct represents '1' with '17625'
c Var 'aux2422' order represents '1' with '1'
c Var 'aux2422' order represents '0' with '-17625'
c Encoding variable: aux2423 with domain: bool (representing constraint (variant_fields_00003_00009_00006=max_left_00003_00009_00006))
c Var 'aux2423' direct represents '0' with '-17626'
c Var 'aux2423' direct represents '1' with '17626'
c Var 'aux2423' order represents '1' with '1'
c Var 'aux2423' order represents '0' with '-17626'
c Encoding variable: aux2424 with domain: bool (representing constraint (max_left_00003_00009_00006=max_left_00003_00009_00007))
c Var 'aux2424' direct represents '0' with '-17627'
c Var 'aux2424' direct represents '1' with '17627'
c Var 'aux2424' order represents '1' with '1'
c Var 'aux2424' order represents '0' with '-17627'
c Encoding variable: aux2425 with domain: bool (representing constraint (variant_fields_00003_00009_00007=max_left_00003_00009_00007))
c Var 'aux2425' direct represents '0' with '-17628'
c Var 'aux2425' direct represents '1' with '17628'
c Var 'aux2425' order represents '1' with '1'
c Var 'aux2425' order represents '0' with '-17628'
c Encoding variable: aux2426 with domain: bool (representing constraint (max_left_00003_00009_00007=max_left_00003_00009_00008))
c Var 'aux2426' direct represents '0' with '-17629'
c Var 'aux2426' direct represents '1' with '17629'
c Var 'aux2426' order represents '1' with '1'
c Var 'aux2426' order represents '0' with '-17629'
c Encoding variable: aux2427 with domain: bool (representing constraint (variant_fields_00003_00009_00008=max_left_00003_00009_00008))
c Var 'aux2427' direct represents '0' with '-17630'
c Var 'aux2427' direct represents '1' with '17630'
c Var 'aux2427' order represents '1' with '1'
c Var 'aux2427' order represents '0' with '-17630'
c Encoding variable: aux2428 with domain: bool (representing constraint (max_left_00003_00009_00008=max_left_00003_00009_00009))
c Var 'aux2428' direct represents '0' with '-17631'
c Var 'aux2428' direct represents '1' with '17631'
c Var 'aux2428' order represents '1' with '1'
c Var 'aux2428' order represents '0' with '-17631'
c Encoding variable: aux2429 with domain: bool (representing constraint (variant_fields_00003_00009_00009=max_left_00003_00009_00009))
c Var 'aux2429' direct represents '0' with '-17632'
c Var 'aux2429' direct represents '1' with '17632'
c Var 'aux2429' order represents '1' with '1'
c Var 'aux2429' order represents '0' with '-17632'
c Encoding variable: aux2430 with domain: bool (representing constraint (max_left_00004_00001_00001=max_left_00004_00001_00002))
c Var 'aux2430' direct represents '0' with '-17633'
c Var 'aux2430' direct represents '1' with '17633'
c Var 'aux2430' order represents '1' with '1'
c Var 'aux2430' order represents '0' with '-17633'
c Encoding variable: aux2431 with domain: bool (representing constraint (variant_fields_00004_00001_00002=max_left_00004_00001_00002))
c Var 'aux2431' direct represents '0' with '-17634'
c Var 'aux2431' direct represents '1' with '17634'
c Var 'aux2431' order represents '1' with '1'
c Var 'aux2431' order represents '0' with '-17634'
c Encoding variable: aux2432 with domain: bool (representing constraint (max_left_00004_00001_00002=max_left_00004_00001_00003))
c Var 'aux2432' direct represents '0' with '-17635'
c Var 'aux2432' direct represents '1' with '17635'
c Var 'aux2432' order represents '1' with '1'
c Var 'aux2432' order represents '0' with '-17635'
c Encoding variable: aux2433 with domain: bool (representing constraint (variant_fields_00004_00001_00003=max_left_00004_00001_00003))
c Var 'aux2433' direct represents '0' with '-17636'
c Var 'aux2433' direct represents '1' with '17636'
c Var 'aux2433' order represents '1' with '1'
c Var 'aux2433' order represents '0' with '-17636'
c Encoding variable: aux2434 with domain: bool (representing constraint (max_left_00004_00001_00003=max_left_00004_00001_00004))
c Var 'aux2434' direct represents '0' with '-17637'
c Var 'aux2434' direct represents '1' with '17637'
c Var 'aux2434' order represents '1' with '1'
c Var 'aux2434' order represents '0' with '-17637'
c Encoding variable: aux2435 with domain: bool (representing constraint (variant_fields_00004_00001_00004=max_left_00004_00001_00004))
c Var 'aux2435' direct represents '0' with '-17638'
c Var 'aux2435' direct represents '1' with '17638'
c Var 'aux2435' order represents '1' with '1'
c Var 'aux2435' order represents '0' with '-17638'
c Encoding variable: aux2436 with domain: bool (representing constraint (max_left_00004_00001_00004=max_left_00004_00001_00005))
c Var 'aux2436' direct represents '0' with '-17639'
c Var 'aux2436' direct represents '1' with '17639'
c Var 'aux2436' order represents '1' with '1'
c Var 'aux2436' order represents '0' with '-17639'
c Encoding variable: aux2437 with domain: bool (representing constraint (variant_fields_00004_00001_00005=max_left_00004_00001_00005))
c Var 'aux2437' direct represents '0' with '-17640'
c Var 'aux2437' direct represents '1' with '17640'
c Var 'aux2437' order represents '1' with '1'
c Var 'aux2437' order represents '0' with '-17640'
c Encoding variable: aux2438 with domain: bool (representing constraint (max_left_00004_00001_00005=max_left_00004_00001_00006))
c Var 'aux2438' direct represents '0' with '-17641'
c Var 'aux2438' direct represents '1' with '17641'
c Var 'aux2438' order represents '1' with '1'
c Var 'aux2438' order represents '0' with '-17641'
c Encoding variable: aux2439 with domain: bool (representing constraint (variant_fields_00004_00001_00006=max_left_00004_00001_00006))
c Var 'aux2439' direct represents '0' with '-17642'
c Var 'aux2439' direct represents '1' with '17642'
c Var 'aux2439' order represents '1' with '1'
c Var 'aux2439' order represents '0' with '-17642'
c Encoding variable: aux2440 with domain: bool (representing constraint (max_left_00004_00001_00006=max_left_00004_00001_00007))
c Var 'aux2440' direct represents '0' with '-17643'
c Var 'aux2440' direct represents '1' with '17643'
c Var 'aux2440' order represents '1' with '1'
c Var 'aux2440' order represents '0' with '-17643'
c Encoding variable: aux2441 with domain: bool (representing constraint (variant_fields_00004_00001_00007=max_left_00004_00001_00007))
c Var 'aux2441' direct represents '0' with '-17644'
c Var 'aux2441' direct represents '1' with '17644'
c Var 'aux2441' order represents '1' with '1'
c Var 'aux2441' order represents '0' with '-17644'
c Encoding variable: aux2442 with domain: bool (representing constraint (max_left_00004_00001_00007=max_left_00004_00001_00008))
c Var 'aux2442' direct represents '0' with '-17645'
c Var 'aux2442' direct represents '1' with '17645'
c Var 'aux2442' order represents '1' with '1'
c Var 'aux2442' order represents '0' with '-17645'
c Encoding variable: aux2443 with domain: bool (representing constraint (variant_fields_00004_00001_00008=max_left_00004_00001_00008))
c Var 'aux2443' direct represents '0' with '-17646'
c Var 'aux2443' direct represents '1' with '17646'
c Var 'aux2443' order represents '1' with '1'
c Var 'aux2443' order represents '0' with '-17646'
c Encoding variable: aux2444 with domain: bool (representing constraint (max_left_00004_00001_00008=max_left_00004_00001_00009))
c Var 'aux2444' direct represents '0' with '-17647'
c Var 'aux2444' direct represents '1' with '17647'
c Var 'aux2444' order represents '1' with '1'
c Var 'aux2444' order represents '0' with '-17647'
c Encoding variable: aux2445 with domain: bool (representing constraint (variant_fields_00004_00001_00009=max_left_00004_00001_00009))
c Var 'aux2445' direct represents '0' with '-17648'
c Var 'aux2445' direct represents '1' with '17648'
c Var 'aux2445' order represents '1' with '1'
c Var 'aux2445' order represents '0' with '-17648'
c Encoding variable: aux2446 with domain: bool (representing constraint (max_left_00004_00002_00001=max_left_00004_00002_00002))
c Var 'aux2446' direct represents '0' with '-17649'
c Var 'aux2446' direct represents '1' with '17649'
c Var 'aux2446' order represents '1' with '1'
c Var 'aux2446' order represents '0' with '-17649'
c Encoding variable: aux2447 with domain: bool (representing constraint (variant_fields_00004_00002_00002=max_left_00004_00002_00002))
c Var 'aux2447' direct represents '0' with '-17650'
c Var 'aux2447' direct represents '1' with '17650'
c Var 'aux2447' order represents '1' with '1'
c Var 'aux2447' order represents '0' with '-17650'
c Encoding variable: aux2448 with domain: bool (representing constraint (max_left_00004_00002_00002=max_left_00004_00002_00003))
c Var 'aux2448' direct represents '0' with '-17651'
c Var 'aux2448' direct represents '1' with '17651'
c Var 'aux2448' order represents '1' with '1'
c Var 'aux2448' order represents '0' with '-17651'
c Encoding variable: aux2449 with domain: bool (representing constraint (variant_fields_00004_00002_00003=max_left_00004_00002_00003))
c Var 'aux2449' direct represents '0' with '-17652'
c Var 'aux2449' direct represents '1' with '17652'
c Var 'aux2449' order represents '1' with '1'
c Var 'aux2449' order represents '0' with '-17652'
c Encoding variable: aux2450 with domain: bool (representing constraint (max_left_00004_00002_00003=max_left_00004_00002_00004))
c Var 'aux2450' direct represents '0' with '-17653'
c Var 'aux2450' direct represents '1' with '17653'
c Var 'aux2450' order represents '1' with '1'
c Var 'aux2450' order represents '0' with '-17653'
c Encoding variable: aux2451 with domain: bool (representing constraint (variant_fields_00004_00002_00004=max_left_00004_00002_00004))
c Var 'aux2451' direct represents '0' with '-17654'
c Var 'aux2451' direct represents '1' with '17654'
c Var 'aux2451' order represents '1' with '1'
c Var 'aux2451' order represents '0' with '-17654'
c Encoding variable: aux2452 with domain: bool (representing constraint (max_left_00004_00002_00004=max_left_00004_00002_00005))
c Var 'aux2452' direct represents '0' with '-17655'
c Var 'aux2452' direct represents '1' with '17655'
c Var 'aux2452' order represents '1' with '1'
c Var 'aux2452' order represents '0' with '-17655'
c Encoding variable: aux2453 with domain: bool (representing constraint (variant_fields_00004_00002_00005=max_left_00004_00002_00005))
c Var 'aux2453' direct represents '0' with '-17656'
c Var 'aux2453' direct represents '1' with '17656'
c Var 'aux2453' order represents '1' with '1'
c Var 'aux2453' order represents '0' with '-17656'
c Encoding variable: aux2454 with domain: bool (representing constraint (max_left_00004_00002_00005=max_left_00004_00002_00006))
c Var 'aux2454' direct represents '0' with '-17657'
c Var 'aux2454' direct represents '1' with '17657'
c Var 'aux2454' order represents '1' with '1'
c Var 'aux2454' order represents '0' with '-17657'
c Encoding variable: aux2455 with domain: bool (representing constraint (variant_fields_00004_00002_00006=max_left_00004_00002_00006))
c Var 'aux2455' direct represents '0' with '-17658'
c Var 'aux2455' direct represents '1' with '17658'
c Var 'aux2455' order represents '1' with '1'
c Var 'aux2455' order represents '0' with '-17658'
c Encoding variable: aux2456 with domain: bool (representing constraint (max_left_00004_00002_00006=max_left_00004_00002_00007))
c Var 'aux2456' direct represents '0' with '-17659'
c Var 'aux2456' direct represents '1' with '17659'
c Var 'aux2456' order represents '1' with '1'
c Var 'aux2456' order represents '0' with '-17659'
c Encoding variable: aux2457 with domain: bool (representing constraint (variant_fields_00004_00002_00007=max_left_00004_00002_00007))
c Var 'aux2457' direct represents '0' with '-17660'
c Var 'aux2457' direct represents '1' with '17660'
c Var 'aux2457' order represents '1' with '1'
c Var 'aux2457' order represents '0' with '-17660'
c Encoding variable: aux2458 with domain: bool (representing constraint (max_left_00004_00002_00007=max_left_00004_00002_00008))
c Var 'aux2458' direct represents '0' with '-17661'
c Var 'aux2458' direct represents '1' with '17661'
c Var 'aux2458' order represents '1' with '1'
c Var 'aux2458' order represents '0' with '-17661'
c Encoding variable: aux2459 with domain: bool (representing constraint (variant_fields_00004_00002_00008=max_left_00004_00002_00008))
c Var 'aux2459' direct represents '0' with '-17662'
c Var 'aux2459' direct represents '1' with '17662'
c Var 'aux2459' order represents '1' with '1'
c Var 'aux2459' order represents '0' with '-17662'
c Encoding variable: aux2460 with domain: bool (representing constraint (max_left_00004_00002_00008=max_left_00004_00002_00009))
c Var 'aux2460' direct represents '0' with '-17663'
c Var 'aux2460' direct represents '1' with '17663'
c Var 'aux2460' order represents '1' with '1'
c Var 'aux2460' order represents '0' with '-17663'
c Encoding variable: aux2461 with domain: bool (representing constraint (variant_fields_00004_00002_00009=max_left_00004_00002_00009))
c Var 'aux2461' direct represents '0' with '-17664'
c Var 'aux2461' direct represents '1' with '17664'
c Var 'aux2461' order represents '1' with '1'
c Var 'aux2461' order represents '0' with '-17664'
c Encoding variable: aux2462 with domain: bool (representing constraint (max_left_00004_00003_00001=max_left_00004_00003_00002))
c Var 'aux2462' direct represents '0' with '-17665'
c Var 'aux2462' direct represents '1' with '17665'
c Var 'aux2462' order represents '1' with '1'
c Var 'aux2462' order represents '0' with '-17665'
c Encoding variable: aux2463 with domain: bool (representing constraint (variant_fields_00004_00003_00002=max_left_00004_00003_00002))
c Var 'aux2463' direct represents '0' with '-17666'
c Var 'aux2463' direct represents '1' with '17666'
c Var 'aux2463' order represents '1' with '1'
c Var 'aux2463' order represents '0' with '-17666'
c Encoding variable: aux2464 with domain: bool (representing constraint (max_left_00004_00003_00002=max_left_00004_00003_00003))
c Var 'aux2464' direct represents '0' with '-17667'
c Var 'aux2464' direct represents '1' with '17667'
c Var 'aux2464' order represents '1' with '1'
c Var 'aux2464' order represents '0' with '-17667'
c Encoding variable: aux2465 with domain: bool (representing constraint (variant_fields_00004_00003_00003=max_left_00004_00003_00003))
c Var 'aux2465' direct represents '0' with '-17668'
c Var 'aux2465' direct represents '1' with '17668'
c Var 'aux2465' order represents '1' with '1'
c Var 'aux2465' order represents '0' with '-17668'
c Encoding variable: aux2466 with domain: bool (representing constraint (max_left_00004_00003_00003=max_left_00004_00003_00004))
c Var 'aux2466' direct represents '0' with '-17669'
c Var 'aux2466' direct represents '1' with '17669'
c Var 'aux2466' order represents '1' with '1'
c Var 'aux2466' order represents '0' with '-17669'
c Encoding variable: aux2467 with domain: bool (representing constraint (variant_fields_00004_00003_00004=max_left_00004_00003_00004))
c Var 'aux2467' direct represents '0' with '-17670'
c Var 'aux2467' direct represents '1' with '17670'
c Var 'aux2467' order represents '1' with '1'
c Var 'aux2467' order represents '0' with '-17670'
c Encoding variable: aux2468 with domain: bool (representing constraint (max_left_00004_00003_00004=max_left_00004_00003_00005))
c Var 'aux2468' direct represents '0' with '-17671'
c Var 'aux2468' direct represents '1' with '17671'
c Var 'aux2468' order represents '1' with '1'
c Var 'aux2468' order represents '0' with '-17671'
c Encoding variable: aux2469 with domain: bool (representing constraint (variant_fields_00004_00003_00005=max_left_00004_00003_00005))
c Var 'aux2469' direct represents '0' with '-17672'
c Var 'aux2469' direct represents '1' with '17672'
c Var 'aux2469' order represents '1' with '1'
c Var 'aux2469' order represents '0' with '-17672'
c Encoding variable: aux2470 with domain: bool (representing constraint (max_left_00004_00003_00005=max_left_00004_00003_00006))
c Var 'aux2470' direct represents '0' with '-17673'
c Var 'aux2470' direct represents '1' with '17673'
c Var 'aux2470' order represents '1' with '1'
c Var 'aux2470' order represents '0' with '-17673'
c Encoding variable: aux2471 with domain: bool (representing constraint (variant_fields_00004_00003_00006=max_left_00004_00003_00006))
c Var 'aux2471' direct represents '0' with '-17674'
c Var 'aux2471' direct represents '1' with '17674'
c Var 'aux2471' order represents '1' with '1'
c Var 'aux2471' order represents '0' with '-17674'
c Encoding variable: aux2472 with domain: bool (representing constraint (max_left_00004_00003_00006=max_left_00004_00003_00007))
c Var 'aux2472' direct represents '0' with '-17675'
c Var 'aux2472' direct represents '1' with '17675'
c Var 'aux2472' order represents '1' with '1'
c Var 'aux2472' order represents '0' with '-17675'
c Encoding variable: aux2473 with domain: bool (representing constraint (variant_fields_00004_00003_00007=max_left_00004_00003_00007))
c Var 'aux2473' direct represents '0' with '-17676'
c Var 'aux2473' direct represents '1' with '17676'
c Var 'aux2473' order represents '1' with '1'
c Var 'aux2473' order represents '0' with '-17676'
c Encoding variable: aux2474 with domain: bool (representing constraint (max_left_00004_00003_00007=max_left_00004_00003_00008))
c Var 'aux2474' direct represents '0' with '-17677'
c Var 'aux2474' direct represents '1' with '17677'
c Var 'aux2474' order represents '1' with '1'
c Var 'aux2474' order represents '0' with '-17677'
c Encoding variable: aux2475 with domain: bool (representing constraint (variant_fields_00004_00003_00008=max_left_00004_00003_00008))
c Var 'aux2475' direct represents '0' with '-17678'
c Var 'aux2475' direct represents '1' with '17678'
c Var 'aux2475' order represents '1' with '1'
c Var 'aux2475' order represents '0' with '-17678'
c Encoding variable: aux2476 with domain: bool (representing constraint (max_left_00004_00003_00008=max_left_00004_00003_00009))
c Var 'aux2476' direct represents '0' with '-17679'
c Var 'aux2476' direct represents '1' with '17679'
c Var 'aux2476' order represents '1' with '1'
c Var 'aux2476' order represents '0' with '-17679'
c Encoding variable: aux2477 with domain: bool (representing constraint (variant_fields_00004_00003_00009=max_left_00004_00003_00009))
c Var 'aux2477' direct represents '0' with '-17680'
c Var 'aux2477' direct represents '1' with '17680'
c Var 'aux2477' order represents '1' with '1'
c Var 'aux2477' order represents '0' with '-17680'
c Encoding variable: aux2478 with domain: bool (representing constraint (max_left_00004_00004_00001=max_left_00004_00004_00002))
c Var 'aux2478' direct represents '0' with '-17681'
c Var 'aux2478' direct represents '1' with '17681'
c Var 'aux2478' order represents '1' with '1'
c Var 'aux2478' order represents '0' with '-17681'
c Encoding variable: aux2479 with domain: bool (representing constraint (variant_fields_00004_00004_00002=max_left_00004_00004_00002))
c Var 'aux2479' direct represents '0' with '-17682'
c Var 'aux2479' direct represents '1' with '17682'
c Var 'aux2479' order represents '1' with '1'
c Var 'aux2479' order represents '0' with '-17682'
c Encoding variable: aux2480 with domain: bool (representing constraint (max_left_00004_00004_00002=max_left_00004_00004_00003))
c Var 'aux2480' direct represents '0' with '-17683'
c Var 'aux2480' direct represents '1' with '17683'
c Var 'aux2480' order represents '1' with '1'
c Var 'aux2480' order represents '0' with '-17683'
c Encoding variable: aux2481 with domain: bool (representing constraint (variant_fields_00004_00004_00003=max_left_00004_00004_00003))
c Var 'aux2481' direct represents '0' with '-17684'
c Var 'aux2481' direct represents '1' with '17684'
c Var 'aux2481' order represents '1' with '1'
c Var 'aux2481' order represents '0' with '-17684'
c Encoding variable: aux2482 with domain: bool (representing constraint (max_left_00004_00004_00003=max_left_00004_00004_00004))
c Var 'aux2482' direct represents '0' with '-17685'
c Var 'aux2482' direct represents '1' with '17685'
c Var 'aux2482' order represents '1' with '1'
c Var 'aux2482' order represents '0' with '-17685'
c Encoding variable: aux2483 with domain: bool (representing constraint (variant_fields_00004_00004_00004=max_left_00004_00004_00004))
c Var 'aux2483' direct represents '0' with '-17686'
c Var 'aux2483' direct represents '1' with '17686'
c Var 'aux2483' order represents '1' with '1'
c Var 'aux2483' order represents '0' with '-17686'
c Encoding variable: aux2484 with domain: bool (representing constraint (max_left_00004_00004_00004=max_left_00004_00004_00005))
c Var 'aux2484' direct represents '0' with '-17687'
c Var 'aux2484' direct represents '1' with '17687'
c Var 'aux2484' order represents '1' with '1'
c Var 'aux2484' order represents '0' with '-17687'
c Encoding variable: aux2485 with domain: bool (representing constraint (variant_fields_00004_00004_00005=max_left_00004_00004_00005))
c Var 'aux2485' direct represents '0' with '-17688'
c Var 'aux2485' direct represents '1' with '17688'
c Var 'aux2485' order represents '1' with '1'
c Var 'aux2485' order represents '0' with '-17688'
c Encoding variable: aux2486 with domain: bool (representing constraint (max_left_00004_00004_00005=max_left_00004_00004_00006))
c Var 'aux2486' direct represents '0' with '-17689'
c Var 'aux2486' direct represents '1' with '17689'
c Var 'aux2486' order represents '1' with '1'
c Var 'aux2486' order represents '0' with '-17689'
c Encoding variable: aux2487 with domain: bool (representing constraint (variant_fields_00004_00004_00006=max_left_00004_00004_00006))
c Var 'aux2487' direct represents '0' with '-17690'
c Var 'aux2487' direct represents '1' with '17690'
c Var 'aux2487' order represents '1' with '1'
c Var 'aux2487' order represents '0' with '-17690'
c Encoding variable: aux2488 with domain: bool (representing constraint (max_left_00004_00004_00006=max_left_00004_00004_00007))
c Var 'aux2488' direct represents '0' with '-17691'
c Var 'aux2488' direct represents '1' with '17691'
c Var 'aux2488' order represents '1' with '1'
c Var 'aux2488' order represents '0' with '-17691'
c Encoding variable: aux2489 with domain: bool (representing constraint (variant_fields_00004_00004_00007=max_left_00004_00004_00007))
c Var 'aux2489' direct represents '0' with '-17692'
c Var 'aux2489' direct represents '1' with '17692'
c Var 'aux2489' order represents '1' with '1'
c Var 'aux2489' order represents '0' with '-17692'
c Encoding variable: aux2490 with domain: bool (representing constraint (max_left_00004_00004_00007=max_left_00004_00004_00008))
c Var 'aux2490' direct represents '0' with '-17693'
c Var 'aux2490' direct represents '1' with '17693'
c Var 'aux2490' order represents '1' with '1'
c Var 'aux2490' order represents '0' with '-17693'
c Encoding variable: aux2491 with domain: bool (representing constraint (variant_fields_00004_00004_00008=max_left_00004_00004_00008))
c Var 'aux2491' direct represents '0' with '-17694'
c Var 'aux2491' direct represents '1' with '17694'
c Var 'aux2491' order represents '1' with '1'
c Var 'aux2491' order represents '0' with '-17694'
c Encoding variable: aux2492 with domain: bool (representing constraint (max_left_00004_00004_00008=max_left_00004_00004_00009))
c Var 'aux2492' direct represents '0' with '-17695'
c Var 'aux2492' direct represents '1' with '17695'
c Var 'aux2492' order represents '1' with '1'
c Var 'aux2492' order represents '0' with '-17695'
c Encoding variable: aux2493 with domain: bool (representing constraint (variant_fields_00004_00004_00009=max_left_00004_00004_00009))
c Var 'aux2493' direct represents '0' with '-17696'
c Var 'aux2493' direct represents '1' with '17696'
c Var 'aux2493' order represents '1' with '1'
c Var 'aux2493' order represents '0' with '-17696'
c Encoding variable: aux2494 with domain: bool (representing constraint (max_left_00004_00005_00001=max_left_00004_00005_00002))
c Var 'aux2494' direct represents '0' with '-17697'
c Var 'aux2494' direct represents '1' with '17697'
c Var 'aux2494' order represents '1' with '1'
c Var 'aux2494' order represents '0' with '-17697'
c Encoding variable: aux2495 with domain: bool (representing constraint (variant_fields_00004_00005_00002=max_left_00004_00005_00002))
c Var 'aux2495' direct represents '0' with '-17698'
c Var 'aux2495' direct represents '1' with '17698'
c Var 'aux2495' order represents '1' with '1'
c Var 'aux2495' order represents '0' with '-17698'
c Encoding variable: aux2496 with domain: bool (representing constraint (max_left_00004_00005_00002=max_left_00004_00005_00003))
c Var 'aux2496' direct represents '0' with '-17699'
c Var 'aux2496' direct represents '1' with '17699'
c Var 'aux2496' order represents '1' with '1'
c Var 'aux2496' order represents '0' with '-17699'
c Encoding variable: aux2497 with domain: bool (representing constraint (variant_fields_00004_00005_00003=max_left_00004_00005_00003))
c Var 'aux2497' direct represents '0' with '-17700'
c Var 'aux2497' direct represents '1' with '17700'
c Var 'aux2497' order represents '1' with '1'
c Var 'aux2497' order represents '0' with '-17700'
c Encoding variable: aux2498 with domain: bool (representing constraint (max_left_00004_00005_00003=max_left_00004_00005_00004))
c Var 'aux2498' direct represents '0' with '-17701'
c Var 'aux2498' direct represents '1' with '17701'
c Var 'aux2498' order represents '1' with '1'
c Var 'aux2498' order represents '0' with '-17701'
c Encoding variable: aux2499 with domain: bool (representing constraint (variant_fields_00004_00005_00004=max_left_00004_00005_00004))
c Var 'aux2499' direct represents '0' with '-17702'
c Var 'aux2499' direct represents '1' with '17702'
c Var 'aux2499' order represents '1' with '1'
c Var 'aux2499' order represents '0' with '-17702'
c Encoding variable: aux2500 with domain: bool (representing constraint (max_left_00004_00005_00004=max_left_00004_00005_00005))
c Var 'aux2500' direct represents '0' with '-17703'
c Var 'aux2500' direct represents '1' with '17703'
c Var 'aux2500' order represents '1' with '1'
c Var 'aux2500' order represents '0' with '-17703'
c Encoding variable: aux2501 with domain: bool (representing constraint (variant_fields_00004_00005_00005=max_left_00004_00005_00005))
c Var 'aux2501' direct represents '0' with '-17704'
c Var 'aux2501' direct represents '1' with '17704'
c Var 'aux2501' order represents '1' with '1'
c Var 'aux2501' order represents '0' with '-17704'
c Encoding variable: aux2502 with domain: bool (representing constraint (max_left_00004_00005_00005=max_left_00004_00005_00006))
c Var 'aux2502' direct represents '0' with '-17705'
c Var 'aux2502' direct represents '1' with '17705'
c Var 'aux2502' order represents '1' with '1'
c Var 'aux2502' order represents '0' with '-17705'
c Encoding variable: aux2503 with domain: bool (representing constraint (variant_fields_00004_00005_00006=max_left_00004_00005_00006))
c Var 'aux2503' direct represents '0' with '-17706'
c Var 'aux2503' direct represents '1' with '17706'
c Var 'aux2503' order represents '1' with '1'
c Var 'aux2503' order represents '0' with '-17706'
c Encoding variable: aux2504 with domain: bool (representing constraint (max_left_00004_00005_00006=max_left_00004_00005_00007))
c Var 'aux2504' direct represents '0' with '-17707'
c Var 'aux2504' direct represents '1' with '17707'
c Var 'aux2504' order represents '1' with '1'
c Var 'aux2504' order represents '0' with '-17707'
c Encoding variable: aux2505 with domain: bool (representing constraint (variant_fields_00004_00005_00007=max_left_00004_00005_00007))
c Var 'aux2505' direct represents '0' with '-17708'
c Var 'aux2505' direct represents '1' with '17708'
c Var 'aux2505' order represents '1' with '1'
c Var 'aux2505' order represents '0' with '-17708'
c Encoding variable: aux2506 with domain: bool (representing constraint (max_left_00004_00005_00007=max_left_00004_00005_00008))
c Var 'aux2506' direct represents '0' with '-17709'
c Var 'aux2506' direct represents '1' with '17709'
c Var 'aux2506' order represents '1' with '1'
c Var 'aux2506' order represents '0' with '-17709'
c Encoding variable: aux2507 with domain: bool (representing constraint (variant_fields_00004_00005_00008=max_left_00004_00005_00008))
c Var 'aux2507' direct represents '0' with '-17710'
c Var 'aux2507' direct represents '1' with '17710'
c Var 'aux2507' order represents '1' with '1'
c Var 'aux2507' order represents '0' with '-17710'
c Encoding variable: aux2508 with domain: bool (representing constraint (max_left_00004_00005_00008=max_left_00004_00005_00009))
c Var 'aux2508' direct represents '0' with '-17711'
c Var 'aux2508' direct represents '1' with '17711'
c Var 'aux2508' order represents '1' with '1'
c Var 'aux2508' order represents '0' with '-17711'
c Encoding variable: aux2509 with domain: bool (representing constraint (variant_fields_00004_00005_00009=max_left_00004_00005_00009))
c Var 'aux2509' direct represents '0' with '-17712'
c Var 'aux2509' direct represents '1' with '17712'
c Var 'aux2509' order represents '1' with '1'
c Var 'aux2509' order represents '0' with '-17712'
c Encoding variable: aux2510 with domain: bool (representing constraint (max_left_00004_00006_00001=max_left_00004_00006_00002))
c Var 'aux2510' direct represents '0' with '-17713'
c Var 'aux2510' direct represents '1' with '17713'
c Var 'aux2510' order represents '1' with '1'
c Var 'aux2510' order represents '0' with '-17713'
c Encoding variable: aux2511 with domain: bool (representing constraint (variant_fields_00004_00006_00002=max_left_00004_00006_00002))
c Var 'aux2511' direct represents '0' with '-17714'
c Var 'aux2511' direct represents '1' with '17714'
c Var 'aux2511' order represents '1' with '1'
c Var 'aux2511' order represents '0' with '-17714'
c Encoding variable: aux2512 with domain: bool (representing constraint (max_left_00004_00006_00002=max_left_00004_00006_00003))
c Var 'aux2512' direct represents '0' with '-17715'
c Var 'aux2512' direct represents '1' with '17715'
c Var 'aux2512' order represents '1' with '1'
c Var 'aux2512' order represents '0' with '-17715'
c Encoding variable: aux2513 with domain: bool (representing constraint (variant_fields_00004_00006_00003=max_left_00004_00006_00003))
c Var 'aux2513' direct represents '0' with '-17716'
c Var 'aux2513' direct represents '1' with '17716'
c Var 'aux2513' order represents '1' with '1'
c Var 'aux2513' order represents '0' with '-17716'
c Encoding variable: aux2514 with domain: bool (representing constraint (max_left_00004_00006_00003=max_left_00004_00006_00004))
c Var 'aux2514' direct represents '0' with '-17717'
c Var 'aux2514' direct represents '1' with '17717'
c Var 'aux2514' order represents '1' with '1'
c Var 'aux2514' order represents '0' with '-17717'
c Encoding variable: aux2515 with domain: bool (representing constraint (variant_fields_00004_00006_00004=max_left_00004_00006_00004))
c Var 'aux2515' direct represents '0' with '-17718'
c Var 'aux2515' direct represents '1' with '17718'
c Var 'aux2515' order represents '1' with '1'
c Var 'aux2515' order represents '0' with '-17718'
c Encoding variable: aux2516 with domain: bool (representing constraint (max_left_00004_00006_00004=max_left_00004_00006_00005))
c Var 'aux2516' direct represents '0' with '-17719'
c Var 'aux2516' direct represents '1' with '17719'
c Var 'aux2516' order represents '1' with '1'
c Var 'aux2516' order represents '0' with '-17719'
c Encoding variable: aux2517 with domain: bool (representing constraint (variant_fields_00004_00006_00005=max_left_00004_00006_00005))
c Var 'aux2517' direct represents '0' with '-17720'
c Var 'aux2517' direct represents '1' with '17720'
c Var 'aux2517' order represents '1' with '1'
c Var 'aux2517' order represents '0' with '-17720'
c Encoding variable: aux2518 with domain: bool (representing constraint (max_left_00004_00006_00005=max_left_00004_00006_00006))
c Var 'aux2518' direct represents '0' with '-17721'
c Var 'aux2518' direct represents '1' with '17721'
c Var 'aux2518' order represents '1' with '1'
c Var 'aux2518' order represents '0' with '-17721'
c Encoding variable: aux2519 with domain: bool (representing constraint (variant_fields_00004_00006_00006=max_left_00004_00006_00006))
c Var 'aux2519' direct represents '0' with '-17722'
c Var 'aux2519' direct represents '1' with '17722'
c Var 'aux2519' order represents '1' with '1'
c Var 'aux2519' order represents '0' with '-17722'
c Encoding variable: aux2520 with domain: bool (representing constraint (max_left_00004_00006_00006=max_left_00004_00006_00007))
c Var 'aux2520' direct represents '0' with '-17723'
c Var 'aux2520' direct represents '1' with '17723'
c Var 'aux2520' order represents '1' with '1'
c Var 'aux2520' order represents '0' with '-17723'
c Encoding variable: aux2521 with domain: bool (representing constraint (variant_fields_00004_00006_00007=max_left_00004_00006_00007))
c Var 'aux2521' direct represents '0' with '-17724'
c Var 'aux2521' direct represents '1' with '17724'
c Var 'aux2521' order represents '1' with '1'
c Var 'aux2521' order represents '0' with '-17724'
c Encoding variable: aux2522 with domain: bool (representing constraint (max_left_00004_00006_00007=max_left_00004_00006_00008))
c Var 'aux2522' direct represents '0' with '-17725'
c Var 'aux2522' direct represents '1' with '17725'
c Var 'aux2522' order represents '1' with '1'
c Var 'aux2522' order represents '0' with '-17725'
c Encoding variable: aux2523 with domain: bool (representing constraint (variant_fields_00004_00006_00008=max_left_00004_00006_00008))
c Var 'aux2523' direct represents '0' with '-17726'
c Var 'aux2523' direct represents '1' with '17726'
c Var 'aux2523' order represents '1' with '1'
c Var 'aux2523' order represents '0' with '-17726'
c Encoding variable: aux2524 with domain: bool (representing constraint (max_left_00004_00006_00008=max_left_00004_00006_00009))
c Var 'aux2524' direct represents '0' with '-17727'
c Var 'aux2524' direct represents '1' with '17727'
c Var 'aux2524' order represents '1' with '1'
c Var 'aux2524' order represents '0' with '-17727'
c Encoding variable: aux2525 with domain: bool (representing constraint (variant_fields_00004_00006_00009=max_left_00004_00006_00009))
c Var 'aux2525' direct represents '0' with '-17728'
c Var 'aux2525' direct represents '1' with '17728'
c Var 'aux2525' order represents '1' with '1'
c Var 'aux2525' order represents '0' with '-17728'
c Encoding variable: aux2526 with domain: bool (representing constraint (max_left_00004_00007_00001=max_left_00004_00007_00002))
c Var 'aux2526' direct represents '0' with '-17729'
c Var 'aux2526' direct represents '1' with '17729'
c Var 'aux2526' order represents '1' with '1'
c Var 'aux2526' order represents '0' with '-17729'
c Encoding variable: aux2527 with domain: bool (representing constraint (variant_fields_00004_00007_00002=max_left_00004_00007_00002))
c Var 'aux2527' direct represents '0' with '-17730'
c Var 'aux2527' direct represents '1' with '17730'
c Var 'aux2527' order represents '1' with '1'
c Var 'aux2527' order represents '0' with '-17730'
c Encoding variable: aux2528 with domain: bool (representing constraint (max_left_00004_00007_00002=max_left_00004_00007_00003))
c Var 'aux2528' direct represents '0' with '-17731'
c Var 'aux2528' direct represents '1' with '17731'
c Var 'aux2528' order represents '1' with '1'
c Var 'aux2528' order represents '0' with '-17731'
c Encoding variable: aux2529 with domain: bool (representing constraint (variant_fields_00004_00007_00003=max_left_00004_00007_00003))
c Var 'aux2529' direct represents '0' with '-17732'
c Var 'aux2529' direct represents '1' with '17732'
c Var 'aux2529' order represents '1' with '1'
c Var 'aux2529' order represents '0' with '-17732'
c Encoding variable: aux2530 with domain: bool (representing constraint (max_left_00004_00007_00003=max_left_00004_00007_00004))
c Var 'aux2530' direct represents '0' with '-17733'
c Var 'aux2530' direct represents '1' with '17733'
c Var 'aux2530' order represents '1' with '1'
c Var 'aux2530' order represents '0' with '-17733'
c Encoding variable: aux2531 with domain: bool (representing constraint (variant_fields_00004_00007_00004=max_left_00004_00007_00004))
c Var 'aux2531' direct represents '0' with '-17734'
c Var 'aux2531' direct represents '1' with '17734'
c Var 'aux2531' order represents '1' with '1'
c Var 'aux2531' order represents '0' with '-17734'
c Encoding variable: aux2532 with domain: bool (representing constraint (max_left_00004_00007_00004=max_left_00004_00007_00005))
c Var 'aux2532' direct represents '0' with '-17735'
c Var 'aux2532' direct represents '1' with '17735'
c Var 'aux2532' order represents '1' with '1'
c Var 'aux2532' order represents '0' with '-17735'
c Encoding variable: aux2533 with domain: bool (representing constraint (variant_fields_00004_00007_00005=max_left_00004_00007_00005))
c Var 'aux2533' direct represents '0' with '-17736'
c Var 'aux2533' direct represents '1' with '17736'
c Var 'aux2533' order represents '1' with '1'
c Var 'aux2533' order represents '0' with '-17736'
c Encoding variable: aux2534 with domain: bool (representing constraint (max_left_00004_00007_00005=max_left_00004_00007_00006))
c Var 'aux2534' direct represents '0' with '-17737'
c Var 'aux2534' direct represents '1' with '17737'
c Var 'aux2534' order represents '1' with '1'
c Var 'aux2534' order represents '0' with '-17737'
c Encoding variable: aux2535 with domain: bool (representing constraint (variant_fields_00004_00007_00006=max_left_00004_00007_00006))
c Var 'aux2535' direct represents '0' with '-17738'
c Var 'aux2535' direct represents '1' with '17738'
c Var 'aux2535' order represents '1' with '1'
c Var 'aux2535' order represents '0' with '-17738'
c Encoding variable: aux2536 with domain: bool (representing constraint (max_left_00004_00007_00006=max_left_00004_00007_00007))
c Var 'aux2536' direct represents '0' with '-17739'
c Var 'aux2536' direct represents '1' with '17739'
c Var 'aux2536' order represents '1' with '1'
c Var 'aux2536' order represents '0' with '-17739'
c Encoding variable: aux2537 with domain: bool (representing constraint (variant_fields_00004_00007_00007=max_left_00004_00007_00007))
c Var 'aux2537' direct represents '0' with '-17740'
c Var 'aux2537' direct represents '1' with '17740'
c Var 'aux2537' order represents '1' with '1'
c Var 'aux2537' order represents '0' with '-17740'
c Encoding variable: aux2538 with domain: bool (representing constraint (max_left_00004_00007_00007=max_left_00004_00007_00008))
c Var 'aux2538' direct represents '0' with '-17741'
c Var 'aux2538' direct represents '1' with '17741'
c Var 'aux2538' order represents '1' with '1'
c Var 'aux2538' order represents '0' with '-17741'
c Encoding variable: aux2539 with domain: bool (representing constraint (variant_fields_00004_00007_00008=max_left_00004_00007_00008))
c Var 'aux2539' direct represents '0' with '-17742'
c Var 'aux2539' direct represents '1' with '17742'
c Var 'aux2539' order represents '1' with '1'
c Var 'aux2539' order represents '0' with '-17742'
c Encoding variable: aux2540 with domain: bool (representing constraint (max_left_00004_00007_00008=max_left_00004_00007_00009))
c Var 'aux2540' direct represents '0' with '-17743'
c Var 'aux2540' direct represents '1' with '17743'
c Var 'aux2540' order represents '1' with '1'
c Var 'aux2540' order represents '0' with '-17743'
c Encoding variable: aux2541 with domain: bool (representing constraint (variant_fields_00004_00007_00009=max_left_00004_00007_00009))
c Var 'aux2541' direct represents '0' with '-17744'
c Var 'aux2541' direct represents '1' with '17744'
c Var 'aux2541' order represents '1' with '1'
c Var 'aux2541' order represents '0' with '-17744'
c Encoding variable: aux2542 with domain: bool (representing constraint (max_left_00004_00008_00001=max_left_00004_00008_00002))
c Var 'aux2542' direct represents '0' with '-17745'
c Var 'aux2542' direct represents '1' with '17745'
c Var 'aux2542' order represents '1' with '1'
c Var 'aux2542' order represents '0' with '-17745'
c Encoding variable: aux2543 with domain: bool (representing constraint (variant_fields_00004_00008_00002=max_left_00004_00008_00002))
c Var 'aux2543' direct represents '0' with '-17746'
c Var 'aux2543' direct represents '1' with '17746'
c Var 'aux2543' order represents '1' with '1'
c Var 'aux2543' order represents '0' with '-17746'
c Encoding variable: aux2544 with domain: bool (representing constraint (max_left_00004_00008_00002=max_left_00004_00008_00003))
c Var 'aux2544' direct represents '0' with '-17747'
c Var 'aux2544' direct represents '1' with '17747'
c Var 'aux2544' order represents '1' with '1'
c Var 'aux2544' order represents '0' with '-17747'
c Encoding variable: aux2545 with domain: bool (representing constraint (variant_fields_00004_00008_00003=max_left_00004_00008_00003))
c Var 'aux2545' direct represents '0' with '-17748'
c Var 'aux2545' direct represents '1' with '17748'
c Var 'aux2545' order represents '1' with '1'
c Var 'aux2545' order represents '0' with '-17748'
c Encoding variable: aux2546 with domain: bool (representing constraint (max_left_00004_00008_00003=max_left_00004_00008_00004))
c Var 'aux2546' direct represents '0' with '-17749'
c Var 'aux2546' direct represents '1' with '17749'
c Var 'aux2546' order represents '1' with '1'
c Var 'aux2546' order represents '0' with '-17749'
c Encoding variable: aux2547 with domain: bool (representing constraint (variant_fields_00004_00008_00004=max_left_00004_00008_00004))
c Var 'aux2547' direct represents '0' with '-17750'
c Var 'aux2547' direct represents '1' with '17750'
c Var 'aux2547' order represents '1' with '1'
c Var 'aux2547' order represents '0' with '-17750'
c Encoding variable: aux2548 with domain: bool (representing constraint (max_left_00004_00008_00004=max_left_00004_00008_00005))
c Var 'aux2548' direct represents '0' with '-17751'
c Var 'aux2548' direct represents '1' with '17751'
c Var 'aux2548' order represents '1' with '1'
c Var 'aux2548' order represents '0' with '-17751'
c Encoding variable: aux2549 with domain: bool (representing constraint (variant_fields_00004_00008_00005=max_left_00004_00008_00005))
c Var 'aux2549' direct represents '0' with '-17752'
c Var 'aux2549' direct represents '1' with '17752'
c Var 'aux2549' order represents '1' with '1'
c Var 'aux2549' order represents '0' with '-17752'
c Encoding variable: aux2550 with domain: bool (representing constraint (max_left_00004_00008_00005=max_left_00004_00008_00006))
c Var 'aux2550' direct represents '0' with '-17753'
c Var 'aux2550' direct represents '1' with '17753'
c Var 'aux2550' order represents '1' with '1'
c Var 'aux2550' order represents '0' with '-17753'
c Encoding variable: aux2551 with domain: bool (representing constraint (variant_fields_00004_00008_00006=max_left_00004_00008_00006))
c Var 'aux2551' direct represents '0' with '-17754'
c Var 'aux2551' direct represents '1' with '17754'
c Var 'aux2551' order represents '1' with '1'
c Var 'aux2551' order represents '0' with '-17754'
c Encoding variable: aux2552 with domain: bool (representing constraint (max_left_00004_00008_00006=max_left_00004_00008_00007))
c Var 'aux2552' direct represents '0' with '-17755'
c Var 'aux2552' direct represents '1' with '17755'
c Var 'aux2552' order represents '1' with '1'
c Var 'aux2552' order represents '0' with '-17755'
c Encoding variable: aux2553 with domain: bool (representing constraint (variant_fields_00004_00008_00007=max_left_00004_00008_00007))
c Var 'aux2553' direct represents '0' with '-17756'
c Var 'aux2553' direct represents '1' with '17756'
c Var 'aux2553' order represents '1' with '1'
c Var 'aux2553' order represents '0' with '-17756'
c Encoding variable: aux2554 with domain: bool (representing constraint (max_left_00004_00008_00007=max_left_00004_00008_00008))
c Var 'aux2554' direct represents '0' with '-17757'
c Var 'aux2554' direct represents '1' with '17757'
c Var 'aux2554' order represents '1' with '1'
c Var 'aux2554' order represents '0' with '-17757'
c Encoding variable: aux2555 with domain: bool (representing constraint (variant_fields_00004_00008_00008=max_left_00004_00008_00008))
c Var 'aux2555' direct represents '0' with '-17758'
c Var 'aux2555' direct represents '1' with '17758'
c Var 'aux2555' order represents '1' with '1'
c Var 'aux2555' order represents '0' with '-17758'
c Encoding variable: aux2556 with domain: bool (representing constraint (max_left_00004_00008_00008=max_left_00004_00008_00009))
c Var 'aux2556' direct represents '0' with '-17759'
c Var 'aux2556' direct represents '1' with '17759'
c Var 'aux2556' order represents '1' with '1'
c Var 'aux2556' order represents '0' with '-17759'
c Encoding variable: aux2557 with domain: bool (representing constraint (variant_fields_00004_00008_00009=max_left_00004_00008_00009))
c Var 'aux2557' direct represents '0' with '-17760'
c Var 'aux2557' direct represents '1' with '17760'
c Var 'aux2557' order represents '1' with '1'
c Var 'aux2557' order represents '0' with '-17760'
c Encoding variable: aux2558 with domain: bool (representing constraint (max_left_00004_00009_00001=max_left_00004_00009_00002))
c Var 'aux2558' direct represents '0' with '-17761'
c Var 'aux2558' direct represents '1' with '17761'
c Var 'aux2558' order represents '1' with '1'
c Var 'aux2558' order represents '0' with '-17761'
c Encoding variable: aux2559 with domain: bool (representing constraint (variant_fields_00004_00009_00002=max_left_00004_00009_00002))
c Var 'aux2559' direct represents '0' with '-17762'
c Var 'aux2559' direct represents '1' with '17762'
c Var 'aux2559' order represents '1' with '1'
c Var 'aux2559' order represents '0' with '-17762'
c Encoding variable: aux2560 with domain: bool (representing constraint (max_left_00004_00009_00002=max_left_00004_00009_00003))
c Var 'aux2560' direct represents '0' with '-17763'
c Var 'aux2560' direct represents '1' with '17763'
c Var 'aux2560' order represents '1' with '1'
c Var 'aux2560' order represents '0' with '-17763'
c Encoding variable: aux2561 with domain: bool (representing constraint (variant_fields_00004_00009_00003=max_left_00004_00009_00003))
c Var 'aux2561' direct represents '0' with '-17764'
c Var 'aux2561' direct represents '1' with '17764'
c Var 'aux2561' order represents '1' with '1'
c Var 'aux2561' order represents '0' with '-17764'
c Encoding variable: aux2562 with domain: bool (representing constraint (max_left_00004_00009_00003=max_left_00004_00009_00004))
c Var 'aux2562' direct represents '0' with '-17765'
c Var 'aux2562' direct represents '1' with '17765'
c Var 'aux2562' order represents '1' with '1'
c Var 'aux2562' order represents '0' with '-17765'
c Encoding variable: aux2563 with domain: bool (representing constraint (variant_fields_00004_00009_00004=max_left_00004_00009_00004))
c Var 'aux2563' direct represents '0' with '-17766'
c Var 'aux2563' direct represents '1' with '17766'
c Var 'aux2563' order represents '1' with '1'
c Var 'aux2563' order represents '0' with '-17766'
c Encoding variable: aux2564 with domain: bool (representing constraint (max_left_00004_00009_00004=max_left_00004_00009_00005))
c Var 'aux2564' direct represents '0' with '-17767'
c Var 'aux2564' direct represents '1' with '17767'
c Var 'aux2564' order represents '1' with '1'
c Var 'aux2564' order represents '0' with '-17767'
c Encoding variable: aux2565 with domain: bool (representing constraint (variant_fields_00004_00009_00005=max_left_00004_00009_00005))
c Var 'aux2565' direct represents '0' with '-17768'
c Var 'aux2565' direct represents '1' with '17768'
c Var 'aux2565' order represents '1' with '1'
c Var 'aux2565' order represents '0' with '-17768'
c Encoding variable: aux2566 with domain: bool (representing constraint (max_left_00004_00009_00005=max_left_00004_00009_00006))
c Var 'aux2566' direct represents '0' with '-17769'
c Var 'aux2566' direct represents '1' with '17769'
c Var 'aux2566' order represents '1' with '1'
c Var 'aux2566' order represents '0' with '-17769'
c Encoding variable: aux2567 with domain: bool (representing constraint (variant_fields_00004_00009_00006=max_left_00004_00009_00006))
c Var 'aux2567' direct represents '0' with '-17770'
c Var 'aux2567' direct represents '1' with '17770'
c Var 'aux2567' order represents '1' with '1'
c Var 'aux2567' order represents '0' with '-17770'
c Encoding variable: aux2568 with domain: bool (representing constraint (max_left_00004_00009_00006=max_left_00004_00009_00007))
c Var 'aux2568' direct represents '0' with '-17771'
c Var 'aux2568' direct represents '1' with '17771'
c Var 'aux2568' order represents '1' with '1'
c Var 'aux2568' order represents '0' with '-17771'
c Encoding variable: aux2569 with domain: bool (representing constraint (variant_fields_00004_00009_00007=max_left_00004_00009_00007))
c Var 'aux2569' direct represents '0' with '-17772'
c Var 'aux2569' direct represents '1' with '17772'
c Var 'aux2569' order represents '1' with '1'
c Var 'aux2569' order represents '0' with '-17772'
c Encoding variable: aux2570 with domain: bool (representing constraint (max_left_00004_00009_00007=max_left_00004_00009_00008))
c Var 'aux2570' direct represents '0' with '-17773'
c Var 'aux2570' direct represents '1' with '17773'
c Var 'aux2570' order represents '1' with '1'
c Var 'aux2570' order represents '0' with '-17773'
c Encoding variable: aux2571 with domain: bool (representing constraint (variant_fields_00004_00009_00008=max_left_00004_00009_00008))
c Var 'aux2571' direct represents '0' with '-17774'
c Var 'aux2571' direct represents '1' with '17774'
c Var 'aux2571' order represents '1' with '1'
c Var 'aux2571' order represents '0' with '-17774'
c Encoding variable: aux2572 with domain: bool (representing constraint (max_left_00004_00009_00008=max_left_00004_00009_00009))
c Var 'aux2572' direct represents '0' with '-17775'
c Var 'aux2572' direct represents '1' with '17775'
c Var 'aux2572' order represents '1' with '1'
c Var 'aux2572' order represents '0' with '-17775'
c Encoding variable: aux2573 with domain: bool (representing constraint (variant_fields_00004_00009_00009=max_left_00004_00009_00009))
c Var 'aux2573' direct represents '0' with '-17776'
c Var 'aux2573' direct represents '1' with '17776'
c Var 'aux2573' order represents '1' with '1'
c Var 'aux2573' order represents '0' with '-17776'
c (((aux451 + aux454 + aux455)<=1)=tv=SATLiteral(16877))
-16877 12035 0
-16877 12029 12034 0
-16877 12030 0
-16877 12032 0
-16877 12020 12034 0
-16877 12020 12029 0
-16877 12020 12030 0
-16877 12020 12032 0
-16877 12021 0
-16877 12021 12029 0
-16877 12021 12030 0
-16877 12021 12032 0
16877 -12021 -12029 -12034 0
16877 -12020 -12030 -12034 0
16877 -12020 -12029 -12035 0
c ((1<=(aux451 + aux454 + aux455))=tv=SATLiteral(16878))
-16878 -12020 -12029 -12034 0
16878 12034 0
16878 12029 0
16878 12030 0
16878 12032 0
16878 12020 0
16878 12020 12029 0
16878 12020 12030 0
16878 12020 12032 0
16878 12021 0
16878 12021 12029 0
16878 12021 12030 0
16878 12021 12032 0
c (((aux457 + aux460 + aux461)<=1)=tv=SATLiteral(16879))
-16879 12059 0
-16879 12053 12058 0
-16879 12054 0
-16879 12056 0
-16879 12044 12058 0
-16879 12044 12053 0
-16879 12044 12054 0
-16879 12044 12056 0
-16879 12045 0
-16879 12045 12053 0
-16879 12045 12054 0
-16879 12045 12056 0
16879 -12045 -12053 -12058 0
16879 -12044 -12054 -12058 0
16879 -12044 -12053 -12059 0
c ((1<=(aux457 + aux460 + aux461))=tv=SATLiteral(16880))
-16880 -12044 -12053 -12058 0
16880 12058 0
16880 12053 0
16880 12054 0
16880 12056 0
16880 12044 0
16880 12044 12053 0
16880 12044 12054 0
16880 12044 12056 0
16880 12045 0
16880 12045 12053 0
16880 12045 12054 0
16880 12045 12056 0
c (((aux463 + aux466 + aux467)<=1)=tv=SATLiteral(16881))
-16881 12083 0
-16881 12077 12082 0
-16881 12078 0
-16881 12080 0
-16881 12068 12082 0
-16881 12068 12077 0
-16881 12068 12078 0
-16881 12068 12080 0
-16881 12069 0
-16881 12069 12077 0
-16881 12069 12078 0
-16881 12069 12080 0
16881 -12069 -12077 -12082 0
16881 -12068 -12078 -12082 0
16881 -12068 -12077 -12083 0
c ((1<=(aux463 + aux466 + aux467))=tv=SATLiteral(16882))
-16882 -12068 -12077 -12082 0
16882 12082 0
16882 12077 0
16882 12078 0
16882 12080 0
16882 12068 0
16882 12068 12077 0
16882 12068 12078 0
16882 12068 12080 0
16882 12069 0
16882 12069 12077 0
16882 12069 12078 0
16882 12069 12080 0
c (((aux469 + aux472 + aux473)<=1)=tv=SATLiteral(16883))
-16883 12107 0
-16883 12101 12106 0
-16883 12102 0
-16883 12104 0
-16883 12092 12106 0
-16883 12092 12101 0
-16883 12092 12102 0
-16883 12092 12104 0
-16883 12093 0
-16883 12093 12101 0
-16883 12093 12102 0
-16883 12093 12104 0
16883 -12093 -12101 -12106 0
16883 -12092 -12102 -12106 0
16883 -12092 -12101 -12107 0
c ((1<=(aux469 + aux472 + aux473))=tv=SATLiteral(16884))
-16884 -12092 -12101 -12106 0
16884 12106 0
16884 12101 0
16884 12102 0
16884 12104 0
16884 12092 0
16884 12092 12101 0
16884 12092 12102 0
16884 12092 12104 0
16884 12093 0
16884 12093 12101 0
16884 12093 12102 0
16884 12093 12104 0
c (((aux475 + aux478 + aux479)<=1)=tv=SATLiteral(16885))
-16885 12131 0
-16885 12125 12130 0
-16885 12126 0
-16885 12128 0
-16885 12116 12130 0
-16885 12116 12125 0
-16885 12116 12126 0
-16885 12116 12128 0
-16885 12117 0
-16885 12117 12125 0
-16885 12117 12126 0
-16885 12117 12128 0
16885 -12117 -12125 -12130 0
16885 -12116 -12126 -12130 0
16885 -12116 -12125 -12131 0
c ((1<=(aux475 + aux478 + aux479))=tv=SATLiteral(16886))
-16886 -12116 -12125 -12130 0
16886 12130 0
16886 12125 0
16886 12126 0
16886 12128 0
16886 12116 0
16886 12116 12125 0
16886 12116 12126 0
16886 12116 12128 0
16886 12117 0
16886 12117 12125 0
16886 12117 12126 0
16886 12117 12128 0
c (((aux481 + aux484 + aux485)<=1)=tv=SATLiteral(16887))
-16887 12155 0
-16887 12149 12154 0
-16887 12150 0
-16887 12152 0
-16887 12140 12154 0
-16887 12140 12149 0
-16887 12140 12150 0
-16887 12140 12152 0
-16887 12141 0
-16887 12141 12149 0
-16887 12141 12150 0
-16887 12141 12152 0
16887 -12141 -12149 -12154 0
16887 -12140 -12150 -12154 0
16887 -12140 -12149 -12155 0
c ((1<=(aux481 + aux484 + aux485))=tv=SATLiteral(16888))
-16888 -12140 -12149 -12154 0
16888 12154 0
16888 12149 0
16888 12150 0
16888 12152 0
16888 12140 0
16888 12140 12149 0
16888 12140 12150 0
16888 12140 12152 0
16888 12141 0
16888 12141 12149 0
16888 12141 12150 0
16888 12141 12152 0
c (((aux487 + aux490 + aux491)<=1)=tv=SATLiteral(16889))
-16889 12179 0
-16889 12173 12178 0
-16889 12174 0
-16889 12176 0
-16889 12164 12178 0
-16889 12164 12173 0
-16889 12164 12174 0
-16889 12164 12176 0
-16889 12165 0
-16889 12165 12173 0
-16889 12165 12174 0
-16889 12165 12176 0
16889 -12165 -12173 -12178 0
16889 -12164 -12174 -12178 0
16889 -12164 -12173 -12179 0
c ((1<=(aux487 + aux490 + aux491))=tv=SATLiteral(16890))
-16890 -12164 -12173 -12178 0
16890 12178 0
16890 12173 0
16890 12174 0
16890 12176 0
16890 12164 0
16890 12164 12173 0
16890 12164 12174 0
16890 12164 12176 0
16890 12165 0
16890 12165 12173 0
16890 12165 12174 0
16890 12165 12176 0
c (((aux493 + aux496 + aux497)<=1)=tv=SATLiteral(16891))
-16891 12203 0
-16891 12197 12202 0
-16891 12198 0
-16891 12200 0
-16891 12188 12202 0
-16891 12188 12197 0
-16891 12188 12198 0
-16891 12188 12200 0
-16891 12189 0
-16891 12189 12197 0
-16891 12189 12198 0
-16891 12189 12200 0
16891 -12189 -12197 -12202 0
16891 -12188 -12198 -12202 0
16891 -12188 -12197 -12203 0
c ((1<=(aux493 + aux496 + aux497))=tv=SATLiteral(16892))
-16892 -12188 -12197 -12202 0
16892 12202 0
16892 12197 0
16892 12198 0
16892 12200 0
16892 12188 0
16892 12188 12197 0
16892 12188 12198 0
16892 12188 12200 0
16892 12189 0
16892 12189 12197 0
16892 12189 12198 0
16892 12189 12200 0
c (((aux499 + aux502 + aux503)<=1)=tv=SATLiteral(16893))
-16893 12227 0
-16893 12221 12226 0
-16893 12222 0
-16893 12224 0
-16893 12212 12226 0
-16893 12212 12221 0
-16893 12212 12222 0
-16893 12212 12224 0
-16893 12213 0
-16893 12213 12221 0
-16893 12213 12222 0
-16893 12213 12224 0
16893 -12213 -12221 -12226 0
16893 -12212 -12222 -12226 0
16893 -12212 -12221 -12227 0
c ((1<=(aux499 + aux502 + aux503))=tv=SATLiteral(16894))
-16894 -12212 -12221 -12226 0
16894 12226 0
16894 12221 0
16894 12222 0
16894 12224 0
16894 12212 0
16894 12212 12221 0
16894 12212 12222 0
16894 12212 12224 0
16894 12213 0
16894 12213 12221 0
16894 12213 12222 0
16894 12213 12224 0
c (((aux505 + aux508 + aux509)<=1)=tv=SATLiteral(16895))
-16895 12251 0
-16895 12245 12250 0
-16895 12246 0
-16895 12248 0
-16895 12236 12250 0
-16895 12236 12245 0
-16895 12236 12246 0
-16895 12236 12248 0
-16895 12237 0
-16895 12237 12245 0
-16895 12237 12246 0
-16895 12237 12248 0
16895 -12237 -12245 -12250 0
16895 -12236 -12246 -12250 0
16895 -12236 -12245 -12251 0
c ((1<=(aux505 + aux508 + aux509))=tv=SATLiteral(16896))
-16896 -12236 -12245 -12250 0
16896 12250 0
16896 12245 0
16896 12246 0
16896 12248 0
16896 12236 0
16896 12236 12245 0
16896 12236 12246 0
16896 12236 12248 0
16896 12237 0
16896 12237 12245 0
16896 12237 12246 0
16896 12237 12248 0
c (((aux511 + aux514 + aux515)<=1)=tv=SATLiteral(16897))
-16897 12275 0
-16897 12269 12274 0
-16897 12270 0
-16897 12272 0
-16897 12260 12274 0
-16897 12260 12269 0
-16897 12260 12270 0
-16897 12260 12272 0
-16897 12261 0
-16897 12261 12269 0
-16897 12261 12270 0
-16897 12261 12272 0
16897 -12261 -12269 -12274 0
16897 -12260 -12270 -12274 0
16897 -12260 -12269 -12275 0
c ((1<=(aux511 + aux514 + aux515))=tv=SATLiteral(16898))
-16898 -12260 -12269 -12274 0
16898 12274 0
16898 12269 0
16898 12270 0
16898 12272 0
16898 12260 0
16898 12260 12269 0
16898 12260 12270 0
16898 12260 12272 0
16898 12261 0
16898 12261 12269 0
16898 12261 12270 0
16898 12261 12272 0
c (((aux517 + aux520 + aux521)<=1)=tv=SATLiteral(16899))
-16899 12299 0
-16899 12293 12298 0
-16899 12294 0
-16899 12296 0
-16899 12284 12298 0
-16899 12284 12293 0
-16899 12284 12294 0
-16899 12284 12296 0
-16899 12285 0
-16899 12285 12293 0
-16899 12285 12294 0
-16899 12285 12296 0
16899 -12285 -12293 -12298 0
16899 -12284 -12294 -12298 0
16899 -12284 -12293 -12299 0
c ((1<=(aux517 + aux520 + aux521))=tv=SATLiteral(16900))
-16900 -12284 -12293 -12298 0
16900 12298 0
16900 12293 0
16900 12294 0
16900 12296 0
16900 12284 0
16900 12284 12293 0
16900 12284 12294 0
16900 12284 12296 0
16900 12285 0
16900 12285 12293 0
16900 12285 12294 0
16900 12285 12296 0
c (((aux523 + aux526 + aux527)<=1)=tv=SATLiteral(16901))
-16901 12323 0
-16901 12317 12322 0
-16901 12318 0
-16901 12320 0
-16901 12308 12322 0
-16901 12308 12317 0
-16901 12308 12318 0
-16901 12308 12320 0
-16901 12309 0
-16901 12309 12317 0
-16901 12309 12318 0
-16901 12309 12320 0
16901 -12309 -12317 -12322 0
16901 -12308 -12318 -12322 0
16901 -12308 -12317 -12323 0
c ((1<=(aux523 + aux526 + aux527))=tv=SATLiteral(16902))
-16902 -12308 -12317 -12322 0
16902 12322 0
16902 12317 0
16902 12318 0
16902 12320 0
16902 12308 0
16902 12308 12317 0
16902 12308 12318 0
16902 12308 12320 0
16902 12309 0
16902 12309 12317 0
16902 12309 12318 0
16902 12309 12320 0
c (((aux529 + aux532 + aux533)<=1)=tv=SATLiteral(16903))
-16903 12347 0
-16903 12341 12346 0
-16903 12342 0
-16903 12344 0
-16903 12332 12346 0
-16903 12332 12341 0
-16903 12332 12342 0
-16903 12332 12344 0
-16903 12333 0
-16903 12333 12341 0
-16903 12333 12342 0
-16903 12333 12344 0
16903 -12333 -12341 -12346 0
16903 -12332 -12342 -12346 0
16903 -12332 -12341 -12347 0
c ((1<=(aux529 + aux532 + aux533))=tv=SATLiteral(16904))
-16904 -12332 -12341 -12346 0
16904 12346 0
16904 12341 0
16904 12342 0
16904 12344 0
16904 12332 0
16904 12332 12341 0
16904 12332 12342 0
16904 12332 12344 0
16904 12333 0
16904 12333 12341 0
16904 12333 12342 0
16904 12333 12344 0
c (((aux535 + aux538 + aux539)<=1)=tv=SATLiteral(16905))
-16905 12371 0
-16905 12365 12370 0
-16905 12366 0
-16905 12368 0
-16905 12356 12370 0
-16905 12356 12365 0
-16905 12356 12366 0
-16905 12356 12368 0
-16905 12357 0
-16905 12357 12365 0
-16905 12357 12366 0
-16905 12357 12368 0
16905 -12357 -12365 -12370 0
16905 -12356 -12366 -12370 0
16905 -12356 -12365 -12371 0
c ((1<=(aux535 + aux538 + aux539))=tv=SATLiteral(16906))
-16906 -12356 -12365 -12370 0
16906 12370 0
16906 12365 0
16906 12366 0
16906 12368 0
16906 12356 0
16906 12356 12365 0
16906 12356 12366 0
16906 12356 12368 0
16906 12357 0
16906 12357 12365 0
16906 12357 12366 0
16906 12357 12368 0
c (((aux541 + aux544 + aux545)<=1)=tv=SATLiteral(16907))
-16907 12395 0
-16907 12389 12394 0
-16907 12390 0
-16907 12392 0
-16907 12380 12394 0
-16907 12380 12389 0
-16907 12380 12390 0
-16907 12380 12392 0
-16907 12381 0
-16907 12381 12389 0
-16907 12381 12390 0
-16907 12381 12392 0
16907 -12381 -12389 -12394 0
16907 -12380 -12390 -12394 0
16907 -12380 -12389 -12395 0
c ((1<=(aux541 + aux544 + aux545))=tv=SATLiteral(16908))
-16908 -12380 -12389 -12394 0
16908 12394 0
16908 12389 0
16908 12390 0
16908 12392 0
16908 12380 0
16908 12380 12389 0
16908 12380 12390 0
16908 12380 12392 0
16908 12381 0
16908 12381 12389 0
16908 12381 12390 0
16908 12381 12392 0
c (((aux547 + aux550 + aux551)<=1)=tv=SATLiteral(16909))
-16909 12419 0
-16909 12413 12418 0
-16909 12414 0
-16909 12416 0
-16909 12404 12418 0
-16909 12404 12413 0
-16909 12404 12414 0
-16909 12404 12416 0
-16909 12405 0
-16909 12405 12413 0
-16909 12405 12414 0
-16909 12405 12416 0
16909 -12405 -12413 -12418 0
16909 -12404 -12414 -12418 0
16909 -12404 -12413 -12419 0
c ((1<=(aux547 + aux550 + aux551))=tv=SATLiteral(16910))
-16910 -12404 -12413 -12418 0
16910 12418 0
16910 12413 0
16910 12414 0
16910 12416 0
16910 12404 0
16910 12404 12413 0
16910 12404 12414 0
16910 12404 12416 0
16910 12405 0
16910 12405 12413 0
16910 12405 12414 0
16910 12405 12416 0
c (((aux553 + aux556 + aux557)<=1)=tv=SATLiteral(16911))
-16911 12443 0
-16911 12437 12442 0
-16911 12438 0
-16911 12440 0
-16911 12428 12442 0
-16911 12428 12437 0
-16911 12428 12438 0
-16911 12428 12440 0
-16911 12429 0
-16911 12429 12437 0
-16911 12429 12438 0
-16911 12429 12440 0
16911 -12429 -12437 -12442 0
16911 -12428 -12438 -12442 0
16911 -12428 -12437 -12443 0
c ((1<=(aux553 + aux556 + aux557))=tv=SATLiteral(16912))
-16912 -12428 -12437 -12442 0
16912 12442 0
16912 12437 0
16912 12438 0
16912 12440 0
16912 12428 0
16912 12428 12437 0
16912 12428 12438 0
16912 12428 12440 0
16912 12429 0
16912 12429 12437 0
16912 12429 12438 0
16912 12429 12440 0
c (((aux559 + aux562 + aux563)<=1)=tv=SATLiteral(16913))
-16913 12467 0
-16913 12461 12466 0
-16913 12462 0
-16913 12464 0
-16913 12452 12466 0
-16913 12452 12461 0
-16913 12452 12462 0
-16913 12452 12464 0
-16913 12453 0
-16913 12453 12461 0
-16913 12453 12462 0
-16913 12453 12464 0
16913 -12453 -12461 -12466 0
16913 -12452 -12462 -12466 0
16913 -12452 -12461 -12467 0
c ((1<=(aux559 + aux562 + aux563))=tv=SATLiteral(16914))
-16914 -12452 -12461 -12466 0
16914 12466 0
16914 12461 0
16914 12462 0
16914 12464 0
16914 12452 0
16914 12452 12461 0
16914 12452 12462 0
16914 12452 12464 0
16914 12453 0
16914 12453 12461 0
16914 12453 12462 0
16914 12453 12464 0
c (((aux565 + aux568 + aux569)<=1)=tv=SATLiteral(16915))
-16915 12491 0
-16915 12485 12490 0
-16915 12486 0
-16915 12488 0
-16915 12476 12490 0
-16915 12476 12485 0
-16915 12476 12486 0
-16915 12476 12488 0
-16915 12477 0
-16915 12477 12485 0
-16915 12477 12486 0
-16915 12477 12488 0
16915 -12477 -12485 -12490 0
16915 -12476 -12486 -12490 0
16915 -12476 -12485 -12491 0
c ((1<=(aux565 + aux568 + aux569))=tv=SATLiteral(16916))
-16916 -12476 -12485 -12490 0
16916 12490 0
16916 12485 0
16916 12486 0
16916 12488 0
16916 12476 0
16916 12476 12485 0
16916 12476 12486 0
16916 12476 12488 0
16916 12477 0
16916 12477 12485 0
16916 12477 12486 0
16916 12477 12488 0
c (((aux571 + aux574 + aux575)<=1)=tv=SATLiteral(16917))
-16917 12515 0
-16917 12509 12514 0
-16917 12510 0
-16917 12512 0
-16917 12500 12514 0
-16917 12500 12509 0
-16917 12500 12510 0
-16917 12500 12512 0
-16917 12501 0
-16917 12501 12509 0
-16917 12501 12510 0
-16917 12501 12512 0
16917 -12501 -12509 -12514 0
16917 -12500 -12510 -12514 0
16917 -12500 -12509 -12515 0
c ((1<=(aux571 + aux574 + aux575))=tv=SATLiteral(16918))
-16918 -12500 -12509 -12514 0
16918 12514 0
16918 12509 0
16918 12510 0
16918 12512 0
16918 12500 0
16918 12500 12509 0
16918 12500 12510 0
16918 12500 12512 0
16918 12501 0
16918 12501 12509 0
16918 12501 12510 0
16918 12501 12512 0
c (((aux577 + aux580 + aux581)<=1)=tv=SATLiteral(16919))
-16919 12539 0
-16919 12533 12538 0
-16919 12534 0
-16919 12536 0
-16919 12524 12538 0
-16919 12524 12533 0
-16919 12524 12534 0
-16919 12524 12536 0
-16919 12525 0
-16919 12525 12533 0
-16919 12525 12534 0
-16919 12525 12536 0
16919 -12525 -12533 -12538 0
16919 -12524 -12534 -12538 0
16919 -12524 -12533 -12539 0
c ((1<=(aux577 + aux580 + aux581))=tv=SATLiteral(16920))
-16920 -12524 -12533 -12538 0
16920 12538 0
16920 12533 0
16920 12534 0
16920 12536 0
16920 12524 0
16920 12524 12533 0
16920 12524 12534 0
16920 12524 12536 0
16920 12525 0
16920 12525 12533 0
16920 12525 12534 0
16920 12525 12536 0
c (((aux583 + aux586 + aux587)<=1)=tv=SATLiteral(16921))
-16921 12563 0
-16921 12557 12562 0
-16921 12558 0
-16921 12560 0
-16921 12548 12562 0
-16921 12548 12557 0
-16921 12548 12558 0
-16921 12548 12560 0
-16921 12549 0
-16921 12549 12557 0
-16921 12549 12558 0
-16921 12549 12560 0
16921 -12549 -12557 -12562 0
16921 -12548 -12558 -12562 0
16921 -12548 -12557 -12563 0
c ((1<=(aux583 + aux586 + aux587))=tv=SATLiteral(16922))
-16922 -12548 -12557 -12562 0
16922 12562 0
16922 12557 0
16922 12558 0
16922 12560 0
16922 12548 0
16922 12548 12557 0
16922 12548 12558 0
16922 12548 12560 0
16922 12549 0
16922 12549 12557 0
16922 12549 12558 0
16922 12549 12560 0
c (((aux589 + aux592 + aux593)<=1)=tv=SATLiteral(16923))
-16923 12587 0
-16923 12581 12586 0
-16923 12582 0
-16923 12584 0
-16923 12572 12586 0
-16923 12572 12581 0
-16923 12572 12582 0
-16923 12572 12584 0
-16923 12573 0
-16923 12573 12581 0
-16923 12573 12582 0
-16923 12573 12584 0
16923 -12573 -12581 -12586 0
16923 -12572 -12582 -12586 0
16923 -12572 -12581 -12587 0
c ((1<=(aux589 + aux592 + aux593))=tv=SATLiteral(16924))
-16924 -12572 -12581 -12586 0
16924 12586 0
16924 12581 0
16924 12582 0
16924 12584 0
16924 12572 0
16924 12572 12581 0
16924 12572 12582 0
16924 12572 12584 0
16924 12573 0
16924 12573 12581 0
16924 12573 12582 0
16924 12573 12584 0
c (((aux595 + aux598 + aux599)<=1)=tv=SATLiteral(16925))
-16925 12611 0
-16925 12605 12610 0
-16925 12606 0
-16925 12608 0
-16925 12596 12610 0
-16925 12596 12605 0
-16925 12596 12606 0
-16925 12596 12608 0
-16925 12597 0
-16925 12597 12605 0
-16925 12597 12606 0
-16925 12597 12608 0
16925 -12597 -12605 -12610 0
16925 -12596 -12606 -12610 0
16925 -12596 -12605 -12611 0
c ((1<=(aux595 + aux598 + aux599))=tv=SATLiteral(16926))
-16926 -12596 -12605 -12610 0
16926 12610 0
16926 12605 0
16926 12606 0
16926 12608 0
16926 12596 0
16926 12596 12605 0
16926 12596 12606 0
16926 12596 12608 0
16926 12597 0
16926 12597 12605 0
16926 12597 12606 0
16926 12597 12608 0
c (((aux601 + aux604 + aux605)<=1)=tv=SATLiteral(16927))
-16927 12635 0
-16927 12629 12634 0
-16927 12630 0
-16927 12632 0
-16927 12620 12634 0
-16927 12620 12629 0
-16927 12620 12630 0
-16927 12620 12632 0
-16927 12621 0
-16927 12621 12629 0
-16927 12621 12630 0
-16927 12621 12632 0
16927 -12621 -12629 -12634 0
16927 -12620 -12630 -12634 0
16927 -12620 -12629 -12635 0
c ((1<=(aux601 + aux604 + aux605))=tv=SATLiteral(16928))
-16928 -12620 -12629 -12634 0
16928 12634 0
16928 12629 0
16928 12630 0
16928 12632 0
16928 12620 0
16928 12620 12629 0
16928 12620 12630 0
16928 12620 12632 0
16928 12621 0
16928 12621 12629 0
16928 12621 12630 0
16928 12621 12632 0
c (((aux607 + aux610 + aux611)<=1)=tv=SATLiteral(16929))
-16929 12659 0
-16929 12653 12658 0
-16929 12654 0
-16929 12656 0
-16929 12644 12658 0
-16929 12644 12653 0
-16929 12644 12654 0
-16929 12644 12656 0
-16929 12645 0
-16929 12645 12653 0
-16929 12645 12654 0
-16929 12645 12656 0
16929 -12645 -12653 -12658 0
16929 -12644 -12654 -12658 0
16929 -12644 -12653 -12659 0
c ((1<=(aux607 + aux610 + aux611))=tv=SATLiteral(16930))
-16930 -12644 -12653 -12658 0
16930 12658 0
16930 12653 0
16930 12654 0
16930 12656 0
16930 12644 0
16930 12644 12653 0
16930 12644 12654 0
16930 12644 12656 0
16930 12645 0
16930 12645 12653 0
16930 12645 12654 0
16930 12645 12656 0
c (((aux613 + aux616 + aux617)<=1)=tv=SATLiteral(16931))
-16931 12683 0
-16931 12677 12682 0
-16931 12678 0
-16931 12680 0
-16931 12668 12682 0
-16931 12668 12677 0
-16931 12668 12678 0
-16931 12668 12680 0
-16931 12669 0
-16931 12669 12677 0
-16931 12669 12678 0
-16931 12669 12680 0
16931 -12669 -12677 -12682 0
16931 -12668 -12678 -12682 0
16931 -12668 -12677 -12683 0
c ((1<=(aux613 + aux616 + aux617))=tv=SATLiteral(16932))
-16932 -12668 -12677 -12682 0
16932 12682 0
16932 12677 0
16932 12678 0
16932 12680 0
16932 12668 0
16932 12668 12677 0
16932 12668 12678 0
16932 12668 12680 0
16932 12669 0
16932 12669 12677 0
16932 12669 12678 0
16932 12669 12680 0
c (((aux619 + aux622 + aux623)<=1)=tv=SATLiteral(16933))
-16933 12707 0
-16933 12701 12706 0
-16933 12702 0
-16933 12704 0
-16933 12692 12706 0
-16933 12692 12701 0
-16933 12692 12702 0
-16933 12692 12704 0
-16933 12693 0
-16933 12693 12701 0
-16933 12693 12702 0
-16933 12693 12704 0
16933 -12693 -12701 -12706 0
16933 -12692 -12702 -12706 0
16933 -12692 -12701 -12707 0
c ((1<=(aux619 + aux622 + aux623))=tv=SATLiteral(16934))
-16934 -12692 -12701 -12706 0
16934 12706 0
16934 12701 0
16934 12702 0
16934 12704 0
16934 12692 0
16934 12692 12701 0
16934 12692 12702 0
16934 12692 12704 0
16934 12693 0
16934 12693 12701 0
16934 12693 12702 0
16934 12693 12704 0
c (((aux625 + aux628 + aux629)<=1)=tv=SATLiteral(16935))
-16935 12731 0
-16935 12725 12730 0
-16935 12726 0
-16935 12728 0
-16935 12716 12730 0
-16935 12716 12725 0
-16935 12716 12726 0
-16935 12716 12728 0
-16935 12717 0
-16935 12717 12725 0
-16935 12717 12726 0
-16935 12717 12728 0
16935 -12717 -12725 -12730 0
16935 -12716 -12726 -12730 0
16935 -12716 -12725 -12731 0
c ((1<=(aux625 + aux628 + aux629))=tv=SATLiteral(16936))
-16936 -12716 -12725 -12730 0
16936 12730 0
16936 12725 0
16936 12726 0
16936 12728 0
16936 12716 0
16936 12716 12725 0
16936 12716 12726 0
16936 12716 12728 0
16936 12717 0
16936 12717 12725 0
16936 12717 12726 0
16936 12717 12728 0
c (((aux631 + aux634 + aux635)<=1)=tv=SATLiteral(16937))
-16937 12755 0
-16937 12749 12754 0
-16937 12750 0
-16937 12752 0
-16937 12740 12754 0
-16937 12740 12749 0
-16937 12740 12750 0
-16937 12740 12752 0
-16937 12741 0
-16937 12741 12749 0
-16937 12741 12750 0
-16937 12741 12752 0
16937 -12741 -12749 -12754 0
16937 -12740 -12750 -12754 0
16937 -12740 -12749 -12755 0
c ((1<=(aux631 + aux634 + aux635))=tv=SATLiteral(16938))
-16938 -12740 -12749 -12754 0
16938 12754 0
16938 12749 0
16938 12750 0
16938 12752 0
16938 12740 0
16938 12740 12749 0
16938 12740 12750 0
16938 12740 12752 0
16938 12741 0
16938 12741 12749 0
16938 12741 12750 0
16938 12741 12752 0
c (((aux637 + aux640 + aux641)<=1)=tv=SATLiteral(16939))
-16939 12779 0
-16939 12773 12778 0
-16939 12774 0
-16939 12776 0
-16939 12764 12778 0
-16939 12764 12773 0
-16939 12764 12774 0
-16939 12764 12776 0
-16939 12765 0
-16939 12765 12773 0
-16939 12765 12774 0
-16939 12765 12776 0
16939 -12765 -12773 -12778 0
16939 -12764 -12774 -12778 0
16939 -12764 -12773 -12779 0
c ((1<=(aux637 + aux640 + aux641))=tv=SATLiteral(16940))
-16940 -12764 -12773 -12778 0
16940 12778 0
16940 12773 0
16940 12774 0
16940 12776 0
16940 12764 0
16940 12764 12773 0
16940 12764 12774 0
16940 12764 12776 0
16940 12765 0
16940 12765 12773 0
16940 12765 12774 0
16940 12765 12776 0
c (((aux643 + aux646 + aux647)<=1)=tv=SATLiteral(16941))
-16941 12803 0
-16941 12797 12802 0
-16941 12798 0
-16941 12800 0
-16941 12788 12802 0
-16941 12788 12797 0
-16941 12788 12798 0
-16941 12788 12800 0
-16941 12789 0
-16941 12789 12797 0
-16941 12789 12798 0
-16941 12789 12800 0
16941 -12789 -12797 -12802 0
16941 -12788 -12798 -12802 0
16941 -12788 -12797 -12803 0
c ((1<=(aux643 + aux646 + aux647))=tv=SATLiteral(16942))
-16942 -12788 -12797 -12802 0
16942 12802 0
16942 12797 0
16942 12798 0
16942 12800 0
16942 12788 0
16942 12788 12797 0
16942 12788 12798 0
16942 12788 12800 0
16942 12789 0
16942 12789 12797 0
16942 12789 12798 0
16942 12789 12800 0
c (((aux649 + aux652 + aux653)<=1)=tv=SATLiteral(16943))
-16943 12827 0
-16943 12821 12826 0
-16943 12822 0
-16943 12824 0
-16943 12812 12826 0
-16943 12812 12821 0
-16943 12812 12822 0
-16943 12812 12824 0
-16943 12813 0
-16943 12813 12821 0
-16943 12813 12822 0
-16943 12813 12824 0
16943 -12813 -12821 -12826 0
16943 -12812 -12822 -12826 0
16943 -12812 -12821 -12827 0
c ((1<=(aux649 + aux652 + aux653))=tv=SATLiteral(16944))
-16944 -12812 -12821 -12826 0
16944 12826 0
16944 12821 0
16944 12822 0
16944 12824 0
16944 12812 0
16944 12812 12821 0
16944 12812 12822 0
16944 12812 12824 0
16944 12813 0
16944 12813 12821 0
16944 12813 12822 0
16944 12813 12824 0
c (((aux655 + aux658 + aux659)<=1)=tv=SATLiteral(16945))
-16945 12851 0
-16945 12845 12850 0
-16945 12846 0
-16945 12848 0
-16945 12836 12850 0
-16945 12836 12845 0
-16945 12836 12846 0
-16945 12836 12848 0
-16945 12837 0
-16945 12837 12845 0
-16945 12837 12846 0
-16945 12837 12848 0
16945 -12837 -12845 -12850 0
16945 -12836 -12846 -12850 0
16945 -12836 -12845 -12851 0
c ((1<=(aux655 + aux658 + aux659))=tv=SATLiteral(16946))
-16946 -12836 -12845 -12850 0
16946 12850 0
16946 12845 0
16946 12846 0
16946 12848 0
16946 12836 0
16946 12836 12845 0
16946 12836 12846 0
16946 12836 12848 0
16946 12837 0
16946 12837 12845 0
16946 12837 12846 0
16946 12837 12848 0
c (((aux661 + aux664 + aux665)<=1)=tv=SATLiteral(16947))
-16947 12875 0
-16947 12869 12874 0
-16947 12870 0
-16947 12872 0
-16947 12860 12874 0
-16947 12860 12869 0
-16947 12860 12870 0
-16947 12860 12872 0
-16947 12861 0
-16947 12861 12869 0
-16947 12861 12870 0
-16947 12861 12872 0
16947 -12861 -12869 -12874 0
16947 -12860 -12870 -12874 0
16947 -12860 -12869 -12875 0
c ((1<=(aux661 + aux664 + aux665))=tv=SATLiteral(16948))
-16948 -12860 -12869 -12874 0
16948 12874 0
16948 12869 0
16948 12870 0
16948 12872 0
16948 12860 0
16948 12860 12869 0
16948 12860 12870 0
16948 12860 12872 0
16948 12861 0
16948 12861 12869 0
16948 12861 12870 0
16948 12861 12872 0
c (((aux667 + aux670 + aux671)<=1)=tv=SATLiteral(16949))
-16949 12899 0
-16949 12893 12898 0
-16949 12894 0
-16949 12896 0
-16949 12884 12898 0
-16949 12884 12893 0
-16949 12884 12894 0
-16949 12884 12896 0
-16949 12885 0
-16949 12885 12893 0
-16949 12885 12894 0
-16949 12885 12896 0
16949 -12885 -12893 -12898 0
16949 -12884 -12894 -12898 0
16949 -12884 -12893 -12899 0
c ((1<=(aux667 + aux670 + aux671))=tv=SATLiteral(16950))
-16950 -12884 -12893 -12898 0
16950 12898 0
16950 12893 0
16950 12894 0
16950 12896 0
16950 12884 0
16950 12884 12893 0
16950 12884 12894 0
16950 12884 12896 0
16950 12885 0
16950 12885 12893 0
16950 12885 12894 0
16950 12885 12896 0
c (((aux673 + aux676 + aux677)<=1)=tv=SATLiteral(16951))
-16951 12923 0
-16951 12917 12922 0
-16951 12918 0
-16951 12920 0
-16951 12908 12922 0
-16951 12908 12917 0
-16951 12908 12918 0
-16951 12908 12920 0
-16951 12909 0
-16951 12909 12917 0
-16951 12909 12918 0
-16951 12909 12920 0
16951 -12909 -12917 -12922 0
16951 -12908 -12918 -12922 0
16951 -12908 -12917 -12923 0
c ((1<=(aux673 + aux676 + aux677))=tv=SATLiteral(16952))
-16952 -12908 -12917 -12922 0
16952 12922 0
16952 12917 0
16952 12918 0
16952 12920 0
16952 12908 0
16952 12908 12917 0
16952 12908 12918 0
16952 12908 12920 0
16952 12909 0
16952 12909 12917 0
16952 12909 12918 0
16952 12909 12920 0
c (((aux679 + aux682 + aux683)<=1)=tv=SATLiteral(16953))
-16953 12947 0
-16953 12941 12946 0
-16953 12942 0
-16953 12944 0
-16953 12932 12946 0
-16953 12932 12941 0
-16953 12932 12942 0
-16953 12932 12944 0
-16953 12933 0
-16953 12933 12941 0
-16953 12933 12942 0
-16953 12933 12944 0
16953 -12933 -12941 -12946 0
16953 -12932 -12942 -12946 0
16953 -12932 -12941 -12947 0
c ((1<=(aux679 + aux682 + aux683))=tv=SATLiteral(16954))
-16954 -12932 -12941 -12946 0
16954 12946 0
16954 12941 0
16954 12942 0
16954 12944 0
16954 12932 0
16954 12932 12941 0
16954 12932 12942 0
16954 12932 12944 0
16954 12933 0
16954 12933 12941 0
16954 12933 12942 0
16954 12933 12944 0
c (((aux685 + aux688 + aux689)<=1)=tv=SATLiteral(16955))
-16955 12971 0
-16955 12965 12970 0
-16955 12966 0
-16955 12968 0
-16955 12956 12970 0
-16955 12956 12965 0
-16955 12956 12966 0
-16955 12956 12968 0
-16955 12957 0
-16955 12957 12965 0
-16955 12957 12966 0
-16955 12957 12968 0
16955 -12957 -12965 -12970 0
16955 -12956 -12966 -12970 0
16955 -12956 -12965 -12971 0
c ((1<=(aux685 + aux688 + aux689))=tv=SATLiteral(16956))
-16956 -12956 -12965 -12970 0
16956 12970 0
16956 12965 0
16956 12966 0
16956 12968 0
16956 12956 0
16956 12956 12965 0
16956 12956 12966 0
16956 12956 12968 0
16956 12957 0
16956 12957 12965 0
16956 12957 12966 0
16956 12957 12968 0
c (((aux691 + aux694 + aux695)<=1)=tv=SATLiteral(16957))
-16957 12995 0
-16957 12989 12994 0
-16957 12990 0
-16957 12992 0
-16957 12980 12994 0
-16957 12980 12989 0
-16957 12980 12990 0
-16957 12980 12992 0
-16957 12981 0
-16957 12981 12989 0
-16957 12981 12990 0
-16957 12981 12992 0
16957 -12981 -12989 -12994 0
16957 -12980 -12990 -12994 0
16957 -12980 -12989 -12995 0
c ((1<=(aux691 + aux694 + aux695))=tv=SATLiteral(16958))
-16958 -12980 -12989 -12994 0
16958 12994 0
16958 12989 0
16958 12990 0
16958 12992 0
16958 12980 0
16958 12980 12989 0
16958 12980 12990 0
16958 12980 12992 0
16958 12981 0
16958 12981 12989 0
16958 12981 12990 0
16958 12981 12992 0
c (((aux697 + aux700 + aux701)<=1)=tv=SATLiteral(16959))
-16959 13019 0
-16959 13013 13018 0
-16959 13014 0
-16959 13016 0
-16959 13004 13018 0
-16959 13004 13013 0
-16959 13004 13014 0
-16959 13004 13016 0
-16959 13005 0
-16959 13005 13013 0
-16959 13005 13014 0
-16959 13005 13016 0
16959 -13005 -13013 -13018 0
16959 -13004 -13014 -13018 0
16959 -13004 -13013 -13019 0
c ((1<=(aux697 + aux700 + aux701))=tv=SATLiteral(16960))
-16960 -13004 -13013 -13018 0
16960 13018 0
16960 13013 0
16960 13014 0
16960 13016 0
16960 13004 0
16960 13004 13013 0
16960 13004 13014 0
16960 13004 13016 0
16960 13005 0
16960 13005 13013 0
16960 13005 13014 0
16960 13005 13016 0
c (((aux703 + aux706 + aux707)<=1)=tv=SATLiteral(16961))
-16961 13043 0
-16961 13037 13042 0
-16961 13038 0
-16961 13040 0
-16961 13028 13042 0
-16961 13028 13037 0
-16961 13028 13038 0
-16961 13028 13040 0
-16961 13029 0
-16961 13029 13037 0
-16961 13029 13038 0
-16961 13029 13040 0
16961 -13029 -13037 -13042 0
16961 -13028 -13038 -13042 0
16961 -13028 -13037 -13043 0
c ((1<=(aux703 + aux706 + aux707))=tv=SATLiteral(16962))
-16962 -13028 -13037 -13042 0
16962 13042 0
16962 13037 0
16962 13038 0
16962 13040 0
16962 13028 0
16962 13028 13037 0
16962 13028 13038 0
16962 13028 13040 0
16962 13029 0
16962 13029 13037 0
16962 13029 13038 0
16962 13029 13040 0
c (((aux709 + aux712 + aux713)<=1)=tv=SATLiteral(16963))
-16963 13067 0
-16963 13061 13066 0
-16963 13062 0
-16963 13064 0
-16963 13052 13066 0
-16963 13052 13061 0
-16963 13052 13062 0
-16963 13052 13064 0
-16963 13053 0
-16963 13053 13061 0
-16963 13053 13062 0
-16963 13053 13064 0
16963 -13053 -13061 -13066 0
16963 -13052 -13062 -13066 0
16963 -13052 -13061 -13067 0
c ((1<=(aux709 + aux712 + aux713))=tv=SATLiteral(16964))
-16964 -13052 -13061 -13066 0
16964 13066 0
16964 13061 0
16964 13062 0
16964 13064 0
16964 13052 0
16964 13052 13061 0
16964 13052 13062 0
16964 13052 13064 0
16964 13053 0
16964 13053 13061 0
16964 13053 13062 0
16964 13053 13064 0
c (((aux715 + aux718 + aux719)<=1)=tv=SATLiteral(16965))
-16965 13091 0
-16965 13085 13090 0
-16965 13086 0
-16965 13088 0
-16965 13076 13090 0
-16965 13076 13085 0
-16965 13076 13086 0
-16965 13076 13088 0
-16965 13077 0
-16965 13077 13085 0
-16965 13077 13086 0
-16965 13077 13088 0
16965 -13077 -13085 -13090 0
16965 -13076 -13086 -13090 0
16965 -13076 -13085 -13091 0
c ((1<=(aux715 + aux718 + aux719))=tv=SATLiteral(16966))
-16966 -13076 -13085 -13090 0
16966 13090 0
16966 13085 0
16966 13086 0
16966 13088 0
16966 13076 0
16966 13076 13085 0
16966 13076 13086 0
16966 13076 13088 0
16966 13077 0
16966 13077 13085 0
16966 13077 13086 0
16966 13077 13088 0
c (((aux721 + aux724 + aux725)<=1)=tv=SATLiteral(16967))
-16967 13115 0
-16967 13109 13114 0
-16967 13110 0
-16967 13112 0
-16967 13100 13114 0
-16967 13100 13109 0
-16967 13100 13110 0
-16967 13100 13112 0
-16967 13101 0
-16967 13101 13109 0
-16967 13101 13110 0
-16967 13101 13112 0
16967 -13101 -13109 -13114 0
16967 -13100 -13110 -13114 0
16967 -13100 -13109 -13115 0
c ((1<=(aux721 + aux724 + aux725))=tv=SATLiteral(16968))
-16968 -13100 -13109 -13114 0
16968 13114 0
16968 13109 0
16968 13110 0
16968 13112 0
16968 13100 0
16968 13100 13109 0
16968 13100 13110 0
16968 13100 13112 0
16968 13101 0
16968 13101 13109 0
16968 13101 13110 0
16968 13101 13112 0
c (((aux727 + aux730 + aux731)<=1)=tv=SATLiteral(16969))
-16969 13139 0
-16969 13133 13138 0
-16969 13134 0
-16969 13136 0
-16969 13124 13138 0
-16969 13124 13133 0
-16969 13124 13134 0
-16969 13124 13136 0
-16969 13125 0
-16969 13125 13133 0
-16969 13125 13134 0
-16969 13125 13136 0
16969 -13125 -13133 -13138 0
16969 -13124 -13134 -13138 0
16969 -13124 -13133 -13139 0
c ((1<=(aux727 + aux730 + aux731))=tv=SATLiteral(16970))
-16970 -13124 -13133 -13138 0
16970 13138 0
16970 13133 0
16970 13134 0
16970 13136 0
16970 13124 0
16970 13124 13133 0
16970 13124 13134 0
16970 13124 13136 0
16970 13125 0
16970 13125 13133 0
16970 13125 13134 0
16970 13125 13136 0
c (((aux733 + aux736 + aux737)<=1)=tv=SATLiteral(16971))
-16971 13163 0
-16971 13157 13162 0
-16971 13158 0
-16971 13160 0
-16971 13148 13162 0
-16971 13148 13157 0
-16971 13148 13158 0
-16971 13148 13160 0
-16971 13149 0
-16971 13149 13157 0
-16971 13149 13158 0
-16971 13149 13160 0
16971 -13149 -13157 -13162 0
16971 -13148 -13158 -13162 0
16971 -13148 -13157 -13163 0
c ((1<=(aux733 + aux736 + aux737))=tv=SATLiteral(16972))
-16972 -13148 -13157 -13162 0
16972 13162 0
16972 13157 0
16972 13158 0
16972 13160 0
16972 13148 0
16972 13148 13157 0
16972 13148 13158 0
16972 13148 13160 0
16972 13149 0
16972 13149 13157 0
16972 13149 13158 0
16972 13149 13160 0
c (((aux739 + aux742 + aux743)<=1)=tv=SATLiteral(16973))
-16973 13187 0
-16973 13181 13186 0
-16973 13182 0
-16973 13184 0
-16973 13172 13186 0
-16973 13172 13181 0
-16973 13172 13182 0
-16973 13172 13184 0
-16973 13173 0
-16973 13173 13181 0
-16973 13173 13182 0
-16973 13173 13184 0
16973 -13173 -13181 -13186 0
16973 -13172 -13182 -13186 0
16973 -13172 -13181 -13187 0
c ((1<=(aux739 + aux742 + aux743))=tv=SATLiteral(16974))
-16974 -13172 -13181 -13186 0
16974 13186 0
16974 13181 0
16974 13182 0
16974 13184 0
16974 13172 0
16974 13172 13181 0
16974 13172 13182 0
16974 13172 13184 0
16974 13173 0
16974 13173 13181 0
16974 13173 13182 0
16974 13173 13184 0
c (((aux745 + aux748 + aux749)<=1)=tv=SATLiteral(16975))
-16975 13211 0
-16975 13205 13210 0
-16975 13206 0
-16975 13208 0
-16975 13196 13210 0
-16975 13196 13205 0
-16975 13196 13206 0
-16975 13196 13208 0
-16975 13197 0
-16975 13197 13205 0
-16975 13197 13206 0
-16975 13197 13208 0
16975 -13197 -13205 -13210 0
16975 -13196 -13206 -13210 0
16975 -13196 -13205 -13211 0
c ((1<=(aux745 + aux748 + aux749))=tv=SATLiteral(16976))
-16976 -13196 -13205 -13210 0
16976 13210 0
16976 13205 0
16976 13206 0
16976 13208 0
16976 13196 0
16976 13196 13205 0
16976 13196 13206 0
16976 13196 13208 0
16976 13197 0
16976 13197 13205 0
16976 13197 13206 0
16976 13197 13208 0
c (((aux751 + aux754 + aux755)<=1)=tv=SATLiteral(16977))
-16977 13235 0
-16977 13229 13234 0
-16977 13230 0
-16977 13232 0
-16977 13220 13234 0
-16977 13220 13229 0
-16977 13220 13230 0
-16977 13220 13232 0
-16977 13221 0
-16977 13221 13229 0
-16977 13221 13230 0
-16977 13221 13232 0
16977 -13221 -13229 -13234 0
16977 -13220 -13230 -13234 0
16977 -13220 -13229 -13235 0
c ((1<=(aux751 + aux754 + aux755))=tv=SATLiteral(16978))
-16978 -13220 -13229 -13234 0
16978 13234 0
16978 13229 0
16978 13230 0
16978 13232 0
16978 13220 0
16978 13220 13229 0
16978 13220 13230 0
16978 13220 13232 0
16978 13221 0
16978 13221 13229 0
16978 13221 13230 0
16978 13221 13232 0
c (((aux757 + aux760 + aux761)<=1)=tv=SATLiteral(16979))
-16979 13259 0
-16979 13253 13258 0
-16979 13254 0
-16979 13256 0
-16979 13244 13258 0
-16979 13244 13253 0
-16979 13244 13254 0
-16979 13244 13256 0
-16979 13245 0
-16979 13245 13253 0
-16979 13245 13254 0
-16979 13245 13256 0
16979 -13245 -13253 -13258 0
16979 -13244 -13254 -13258 0
16979 -13244 -13253 -13259 0
c ((1<=(aux757 + aux760 + aux761))=tv=SATLiteral(16980))
-16980 -13244 -13253 -13258 0
16980 13258 0
16980 13253 0
16980 13254 0
16980 13256 0
16980 13244 0
16980 13244 13253 0
16980 13244 13254 0
16980 13244 13256 0
16980 13245 0
16980 13245 13253 0
16980 13245 13254 0
16980 13245 13256 0
c (((aux763 + aux766 + aux767)<=1)=tv=SATLiteral(16981))
-16981 13283 0
-16981 13277 13282 0
-16981 13278 0
-16981 13280 0
-16981 13268 13282 0
-16981 13268 13277 0
-16981 13268 13278 0
-16981 13268 13280 0
-16981 13269 0
-16981 13269 13277 0
-16981 13269 13278 0
-16981 13269 13280 0
16981 -13269 -13277 -13282 0
16981 -13268 -13278 -13282 0
16981 -13268 -13277 -13283 0
c ((1<=(aux763 + aux766 + aux767))=tv=SATLiteral(16982))
-16982 -13268 -13277 -13282 0
16982 13282 0
16982 13277 0
16982 13278 0
16982 13280 0
16982 13268 0
16982 13268 13277 0
16982 13268 13278 0
16982 13268 13280 0
16982 13269 0
16982 13269 13277 0
16982 13269 13278 0
16982 13269 13280 0
c (((aux769 + aux772 + aux773)<=1)=tv=SATLiteral(16983))
-16983 13307 0
-16983 13301 13306 0
-16983 13302 0
-16983 13304 0
-16983 13292 13306 0
-16983 13292 13301 0
-16983 13292 13302 0
-16983 13292 13304 0
-16983 13293 0
-16983 13293 13301 0
-16983 13293 13302 0
-16983 13293 13304 0
16983 -13293 -13301 -13306 0
16983 -13292 -13302 -13306 0
16983 -13292 -13301 -13307 0
c ((1<=(aux769 + aux772 + aux773))=tv=SATLiteral(16984))
-16984 -13292 -13301 -13306 0
16984 13306 0
16984 13301 0
16984 13302 0
16984 13304 0
16984 13292 0
16984 13292 13301 0
16984 13292 13302 0
16984 13292 13304 0
16984 13293 0
16984 13293 13301 0
16984 13293 13302 0
16984 13293 13304 0
c (((aux775 + aux778 + aux779)<=1)=tv=SATLiteral(16985))
-16985 13331 0
-16985 13325 13330 0
-16985 13326 0
-16985 13328 0
-16985 13316 13330 0
-16985 13316 13325 0
-16985 13316 13326 0
-16985 13316 13328 0
-16985 13317 0
-16985 13317 13325 0
-16985 13317 13326 0
-16985 13317 13328 0
16985 -13317 -13325 -13330 0
16985 -13316 -13326 -13330 0
16985 -13316 -13325 -13331 0
c ((1<=(aux775 + aux778 + aux779))=tv=SATLiteral(16986))
-16986 -13316 -13325 -13330 0
16986 13330 0
16986 13325 0
16986 13326 0
16986 13328 0
16986 13316 0
16986 13316 13325 0
16986 13316 13326 0
16986 13316 13328 0
16986 13317 0
16986 13317 13325 0
16986 13317 13326 0
16986 13317 13328 0
c (((aux781 + aux784 + aux785)<=1)=tv=SATLiteral(16987))
-16987 13355 0
-16987 13349 13354 0
-16987 13350 0
-16987 13352 0
-16987 13340 13354 0
-16987 13340 13349 0
-16987 13340 13350 0
-16987 13340 13352 0
-16987 13341 0
-16987 13341 13349 0
-16987 13341 13350 0
-16987 13341 13352 0
16987 -13341 -13349 -13354 0
16987 -13340 -13350 -13354 0
16987 -13340 -13349 -13355 0
c ((1<=(aux781 + aux784 + aux785))=tv=SATLiteral(16988))
-16988 -13340 -13349 -13354 0
16988 13354 0
16988 13349 0
16988 13350 0
16988 13352 0
16988 13340 0
16988 13340 13349 0
16988 13340 13350 0
16988 13340 13352 0
16988 13341 0
16988 13341 13349 0
16988 13341 13350 0
16988 13341 13352 0
c (((aux787 + aux790 + aux791)<=1)=tv=SATLiteral(16989))
-16989 13379 0
-16989 13373 13378 0
-16989 13374 0
-16989 13376 0
-16989 13364 13378 0
-16989 13364 13373 0
-16989 13364 13374 0
-16989 13364 13376 0
-16989 13365 0
-16989 13365 13373 0
-16989 13365 13374 0
-16989 13365 13376 0
16989 -13365 -13373 -13378 0
16989 -13364 -13374 -13378 0
16989 -13364 -13373 -13379 0
c ((1<=(aux787 + aux790 + aux791))=tv=SATLiteral(16990))
-16990 -13364 -13373 -13378 0
16990 13378 0
16990 13373 0
16990 13374 0
16990 13376 0
16990 13364 0
16990 13364 13373 0
16990 13364 13374 0
16990 13364 13376 0
16990 13365 0
16990 13365 13373 0
16990 13365 13374 0
16990 13365 13376 0
c (((aux793 + aux796 + aux797)<=1)=tv=SATLiteral(16991))
-16991 13403 0
-16991 13397 13402 0
-16991 13398 0
-16991 13400 0
-16991 13388 13402 0
-16991 13388 13397 0
-16991 13388 13398 0
-16991 13388 13400 0
-16991 13389 0
-16991 13389 13397 0
-16991 13389 13398 0
-16991 13389 13400 0
16991 -13389 -13397 -13402 0
16991 -13388 -13398 -13402 0
16991 -13388 -13397 -13403 0
c ((1<=(aux793 + aux796 + aux797))=tv=SATLiteral(16992))
-16992 -13388 -13397 -13402 0
16992 13402 0
16992 13397 0
16992 13398 0
16992 13400 0
16992 13388 0
16992 13388 13397 0
16992 13388 13398 0
16992 13388 13400 0
16992 13389 0
16992 13389 13397 0
16992 13389 13398 0
16992 13389 13400 0
c (((aux799 + aux802 + aux803)<=1)=tv=SATLiteral(16993))
-16993 13427 0
-16993 13421 13426 0
-16993 13422 0
-16993 13424 0
-16993 13412 13426 0
-16993 13412 13421 0
-16993 13412 13422 0
-16993 13412 13424 0
-16993 13413 0
-16993 13413 13421 0
-16993 13413 13422 0
-16993 13413 13424 0
16993 -13413 -13421 -13426 0
16993 -13412 -13422 -13426 0
16993 -13412 -13421 -13427 0
c ((1<=(aux799 + aux802 + aux803))=tv=SATLiteral(16994))
-16994 -13412 -13421 -13426 0
16994 13426 0
16994 13421 0
16994 13422 0
16994 13424 0
16994 13412 0
16994 13412 13421 0
16994 13412 13422 0
16994 13412 13424 0
16994 13413 0
16994 13413 13421 0
16994 13413 13422 0
16994 13413 13424 0
c (((aux805 + aux808 + aux809)<=1)=tv=SATLiteral(16995))
-16995 13451 0
-16995 13445 13450 0
-16995 13446 0
-16995 13448 0
-16995 13436 13450 0
-16995 13436 13445 0
-16995 13436 13446 0
-16995 13436 13448 0
-16995 13437 0
-16995 13437 13445 0
-16995 13437 13446 0
-16995 13437 13448 0
16995 -13437 -13445 -13450 0
16995 -13436 -13446 -13450 0
16995 -13436 -13445 -13451 0
c ((1<=(aux805 + aux808 + aux809))=tv=SATLiteral(16996))
-16996 -13436 -13445 -13450 0
16996 13450 0
16996 13445 0
16996 13446 0
16996 13448 0
16996 13436 0
16996 13436 13445 0
16996 13436 13446 0
16996 13436 13448 0
16996 13437 0
16996 13437 13445 0
16996 13437 13446 0
16996 13437 13448 0
c (((aux811 + aux814 + aux815)<=1)=tv=SATLiteral(16997))
-16997 13475 0
-16997 13469 13474 0
-16997 13470 0
-16997 13472 0
-16997 13460 13474 0
-16997 13460 13469 0
-16997 13460 13470 0
-16997 13460 13472 0
-16997 13461 0
-16997 13461 13469 0
-16997 13461 13470 0
-16997 13461 13472 0
16997 -13461 -13469 -13474 0
16997 -13460 -13470 -13474 0
16997 -13460 -13469 -13475 0
c ((1<=(aux811 + aux814 + aux815))=tv=SATLiteral(16998))
-16998 -13460 -13469 -13474 0
16998 13474 0
16998 13469 0
16998 13470 0
16998 13472 0
16998 13460 0
16998 13460 13469 0
16998 13460 13470 0
16998 13460 13472 0
16998 13461 0
16998 13461 13469 0
16998 13461 13470 0
16998 13461 13472 0
c (((aux817 + aux820 + aux821)<=1)=tv=SATLiteral(16999))
-16999 13499 0
-16999 13493 13498 0
-16999 13494 0
-16999 13496 0
-16999 13484 13498 0
-16999 13484 13493 0
-16999 13484 13494 0
-16999 13484 13496 0
-16999 13485 0
-16999 13485 13493 0
-16999 13485 13494 0
-16999 13485 13496 0
16999 -13485 -13493 -13498 0
16999 -13484 -13494 -13498 0
16999 -13484 -13493 -13499 0
c ((1<=(aux817 + aux820 + aux821))=tv=SATLiteral(17000))
-17000 -13484 -13493 -13498 0
17000 13498 0
17000 13493 0
17000 13494 0
17000 13496 0
17000 13484 0
17000 13484 13493 0
17000 13484 13494 0
17000 13484 13496 0
17000 13485 0
17000 13485 13493 0
17000 13485 13494 0
17000 13485 13496 0
c (((aux823 + aux826 + aux827)<=1)=tv=SATLiteral(17001))
-17001 13523 0
-17001 13517 13522 0
-17001 13518 0
-17001 13520 0
-17001 13508 13522 0
-17001 13508 13517 0
-17001 13508 13518 0
-17001 13508 13520 0
-17001 13509 0
-17001 13509 13517 0
-17001 13509 13518 0
-17001 13509 13520 0
17001 -13509 -13517 -13522 0
17001 -13508 -13518 -13522 0
17001 -13508 -13517 -13523 0
c ((1<=(aux823 + aux826 + aux827))=tv=SATLiteral(17002))
-17002 -13508 -13517 -13522 0
17002 13522 0
17002 13517 0
17002 13518 0
17002 13520 0
17002 13508 0
17002 13508 13517 0
17002 13508 13518 0
17002 13508 13520 0
17002 13509 0
17002 13509 13517 0
17002 13509 13518 0
17002 13509 13520 0
c (((aux829 + aux832 + aux833)<=1)=tv=SATLiteral(17003))
-17003 13547 0
-17003 13541 13546 0
-17003 13542 0
-17003 13544 0
-17003 13532 13546 0
-17003 13532 13541 0
-17003 13532 13542 0
-17003 13532 13544 0
-17003 13533 0
-17003 13533 13541 0
-17003 13533 13542 0
-17003 13533 13544 0
17003 -13533 -13541 -13546 0
17003 -13532 -13542 -13546 0
17003 -13532 -13541 -13547 0
c ((1<=(aux829 + aux832 + aux833))=tv=SATLiteral(17004))
-17004 -13532 -13541 -13546 0
17004 13546 0
17004 13541 0
17004 13542 0
17004 13544 0
17004 13532 0
17004 13532 13541 0
17004 13532 13542 0
17004 13532 13544 0
17004 13533 0
17004 13533 13541 0
17004 13533 13542 0
17004 13533 13544 0
c (((aux835 + aux838 + aux839)<=1)=tv=SATLiteral(17005))
-17005 13571 0
-17005 13565 13570 0
-17005 13566 0
-17005 13568 0
-17005 13556 13570 0
-17005 13556 13565 0
-17005 13556 13566 0
-17005 13556 13568 0
-17005 13557 0
-17005 13557 13565 0
-17005 13557 13566 0
-17005 13557 13568 0
17005 -13557 -13565 -13570 0
17005 -13556 -13566 -13570 0
17005 -13556 -13565 -13571 0
c ((1<=(aux835 + aux838 + aux839))=tv=SATLiteral(17006))
-17006 -13556 -13565 -13570 0
17006 13570 0
17006 13565 0
17006 13566 0
17006 13568 0
17006 13556 0
17006 13556 13565 0
17006 13556 13566 0
17006 13556 13568 0
17006 13557 0
17006 13557 13565 0
17006 13557 13566 0
17006 13557 13568 0
c (((aux841 + aux844 + aux845)<=1)=tv=SATLiteral(17007))
-17007 13595 0
-17007 13589 13594 0
-17007 13590 0
-17007 13592 0
-17007 13580 13594 0
-17007 13580 13589 0
-17007 13580 13590 0
-17007 13580 13592 0
-17007 13581 0
-17007 13581 13589 0
-17007 13581 13590 0
-17007 13581 13592 0
17007 -13581 -13589 -13594 0
17007 -13580 -13590 -13594 0
17007 -13580 -13589 -13595 0
c ((1<=(aux841 + aux844 + aux845))=tv=SATLiteral(17008))
-17008 -13580 -13589 -13594 0
17008 13594 0
17008 13589 0
17008 13590 0
17008 13592 0
17008 13580 0
17008 13580 13589 0
17008 13580 13590 0
17008 13580 13592 0
17008 13581 0
17008 13581 13589 0
17008 13581 13590 0
17008 13581 13592 0
c (((aux847 + aux850 + aux851)<=1)=tv=SATLiteral(17009))
-17009 13619 0
-17009 13613 13618 0
-17009 13614 0
-17009 13616 0
-17009 13604 13618 0
-17009 13604 13613 0
-17009 13604 13614 0
-17009 13604 13616 0
-17009 13605 0
-17009 13605 13613 0
-17009 13605 13614 0
-17009 13605 13616 0
17009 -13605 -13613 -13618 0
17009 -13604 -13614 -13618 0
17009 -13604 -13613 -13619 0
c ((1<=(aux847 + aux850 + aux851))=tv=SATLiteral(17010))
-17010 -13604 -13613 -13618 0
17010 13618 0
17010 13613 0
17010 13614 0
17010 13616 0
17010 13604 0
17010 13604 13613 0
17010 13604 13614 0
17010 13604 13616 0
17010 13605 0
17010 13605 13613 0
17010 13605 13614 0
17010 13605 13616 0
c (((aux853 + aux856 + aux857)<=1)=tv=SATLiteral(17011))
-17011 13643 0
-17011 13637 13642 0
-17011 13638 0
-17011 13640 0
-17011 13628 13642 0
-17011 13628 13637 0
-17011 13628 13638 0
-17011 13628 13640 0
-17011 13629 0
-17011 13629 13637 0
-17011 13629 13638 0
-17011 13629 13640 0
17011 -13629 -13637 -13642 0
17011 -13628 -13638 -13642 0
17011 -13628 -13637 -13643 0
c ((1<=(aux853 + aux856 + aux857))=tv=SATLiteral(17012))
-17012 -13628 -13637 -13642 0
17012 13642 0
17012 13637 0
17012 13638 0
17012 13640 0
17012 13628 0
17012 13628 13637 0
17012 13628 13638 0
17012 13628 13640 0
17012 13629 0
17012 13629 13637 0
17012 13629 13638 0
17012 13629 13640 0
c (((aux859 + aux862 + aux863)<=1)=tv=SATLiteral(17013))
-17013 13667 0
-17013 13661 13666 0
-17013 13662 0
-17013 13664 0
-17013 13652 13666 0
-17013 13652 13661 0
-17013 13652 13662 0
-17013 13652 13664 0
-17013 13653 0
-17013 13653 13661 0
-17013 13653 13662 0
-17013 13653 13664 0
17013 -13653 -13661 -13666 0
17013 -13652 -13662 -13666 0
17013 -13652 -13661 -13667 0
c ((1<=(aux859 + aux862 + aux863))=tv=SATLiteral(17014))
-17014 -13652 -13661 -13666 0
17014 13666 0
17014 13661 0
17014 13662 0
17014 13664 0
17014 13652 0
17014 13652 13661 0
17014 13652 13662 0
17014 13652 13664 0
17014 13653 0
17014 13653 13661 0
17014 13653 13662 0
17014 13653 13664 0
c (((aux865 + aux868 + aux869)<=1)=tv=SATLiteral(17015))
-17015 13691 0
-17015 13685 13690 0
-17015 13686 0
-17015 13688 0
-17015 13676 13690 0
-17015 13676 13685 0
-17015 13676 13686 0
-17015 13676 13688 0
-17015 13677 0
-17015 13677 13685 0
-17015 13677 13686 0
-17015 13677 13688 0
17015 -13677 -13685 -13690 0
17015 -13676 -13686 -13690 0
17015 -13676 -13685 -13691 0
c ((1<=(aux865 + aux868 + aux869))=tv=SATLiteral(17016))
-17016 -13676 -13685 -13690 0
17016 13690 0
17016 13685 0
17016 13686 0
17016 13688 0
17016 13676 0
17016 13676 13685 0
17016 13676 13686 0
17016 13676 13688 0
17016 13677 0
17016 13677 13685 0
17016 13677 13686 0
17016 13677 13688 0
c (((aux871 + aux874 + aux875)<=1)=tv=SATLiteral(17017))
-17017 13715 0
-17017 13709 13714 0
-17017 13710 0
-17017 13712 0
-17017 13700 13714 0
-17017 13700 13709 0
-17017 13700 13710 0
-17017 13700 13712 0
-17017 13701 0
-17017 13701 13709 0
-17017 13701 13710 0
-17017 13701 13712 0
17017 -13701 -13709 -13714 0
17017 -13700 -13710 -13714 0
17017 -13700 -13709 -13715 0
c ((1<=(aux871 + aux874 + aux875))=tv=SATLiteral(17018))
-17018 -13700 -13709 -13714 0
17018 13714 0
17018 13709 0
17018 13710 0
17018 13712 0
17018 13700 0
17018 13700 13709 0
17018 13700 13710 0
17018 13700 13712 0
17018 13701 0
17018 13701 13709 0
17018 13701 13710 0
17018 13701 13712 0
c (((aux877 + aux880 + aux881)<=1)=tv=SATLiteral(17019))
-17019 13739 0
-17019 13733 13738 0
-17019 13734 0
-17019 13736 0
-17019 13724 13738 0
-17019 13724 13733 0
-17019 13724 13734 0
-17019 13724 13736 0
-17019 13725 0
-17019 13725 13733 0
-17019 13725 13734 0
-17019 13725 13736 0
17019 -13725 -13733 -13738 0
17019 -13724 -13734 -13738 0
17019 -13724 -13733 -13739 0
c ((1<=(aux877 + aux880 + aux881))=tv=SATLiteral(17020))
-17020 -13724 -13733 -13738 0
17020 13738 0
17020 13733 0
17020 13734 0
17020 13736 0
17020 13724 0
17020 13724 13733 0
17020 13724 13734 0
17020 13724 13736 0
17020 13725 0
17020 13725 13733 0
17020 13725 13734 0
17020 13725 13736 0
c (((aux883 + aux886 + aux887)<=1)=tv=SATLiteral(17021))
-17021 13763 0
-17021 13757 13762 0
-17021 13758 0
-17021 13760 0
-17021 13748 13762 0
-17021 13748 13757 0
-17021 13748 13758 0
-17021 13748 13760 0
-17021 13749 0
-17021 13749 13757 0
-17021 13749 13758 0
-17021 13749 13760 0
17021 -13749 -13757 -13762 0
17021 -13748 -13758 -13762 0
17021 -13748 -13757 -13763 0
c ((1<=(aux883 + aux886 + aux887))=tv=SATLiteral(17022))
-17022 -13748 -13757 -13762 0
17022 13762 0
17022 13757 0
17022 13758 0
17022 13760 0
17022 13748 0
17022 13748 13757 0
17022 13748 13758 0
17022 13748 13760 0
17022 13749 0
17022 13749 13757 0
17022 13749 13758 0
17022 13749 13760 0
c (((aux889 + aux892 + aux893)<=1)=tv=SATLiteral(17023))
-17023 13787 0
-17023 13781 13786 0
-17023 13782 0
-17023 13784 0
-17023 13772 13786 0
-17023 13772 13781 0
-17023 13772 13782 0
-17023 13772 13784 0
-17023 13773 0
-17023 13773 13781 0
-17023 13773 13782 0
-17023 13773 13784 0
17023 -13773 -13781 -13786 0
17023 -13772 -13782 -13786 0
17023 -13772 -13781 -13787 0
c ((1<=(aux889 + aux892 + aux893))=tv=SATLiteral(17024))
-17024 -13772 -13781 -13786 0
17024 13786 0
17024 13781 0
17024 13782 0
17024 13784 0
17024 13772 0
17024 13772 13781 0
17024 13772 13782 0
17024 13772 13784 0
17024 13773 0
17024 13773 13781 0
17024 13773 13782 0
17024 13773 13784 0
c (((aux895 + aux898 + aux899)<=1)=tv=SATLiteral(17025))
-17025 13811 0
-17025 13805 13810 0
-17025 13806 0
-17025 13808 0
-17025 13796 13810 0
-17025 13796 13805 0
-17025 13796 13806 0
-17025 13796 13808 0
-17025 13797 0
-17025 13797 13805 0
-17025 13797 13806 0
-17025 13797 13808 0
17025 -13797 -13805 -13810 0
17025 -13796 -13806 -13810 0
17025 -13796 -13805 -13811 0
c ((1<=(aux895 + aux898 + aux899))=tv=SATLiteral(17026))
-17026 -13796 -13805 -13810 0
17026 13810 0
17026 13805 0
17026 13806 0
17026 13808 0
17026 13796 0
17026 13796 13805 0
17026 13796 13806 0
17026 13796 13808 0
17026 13797 0
17026 13797 13805 0
17026 13797 13806 0
17026 13797 13808 0
c (((aux901 + aux904 + aux905)<=1)=tv=SATLiteral(17027))
-17027 13835 0
-17027 13829 13834 0
-17027 13830 0
-17027 13832 0
-17027 13820 13834 0
-17027 13820 13829 0
-17027 13820 13830 0
-17027 13820 13832 0
-17027 13821 0
-17027 13821 13829 0
-17027 13821 13830 0
-17027 13821 13832 0
17027 -13821 -13829 -13834 0
17027 -13820 -13830 -13834 0
17027 -13820 -13829 -13835 0
c ((1<=(aux901 + aux904 + aux905))=tv=SATLiteral(17028))
-17028 -13820 -13829 -13834 0
17028 13834 0
17028 13829 0
17028 13830 0
17028 13832 0
17028 13820 0
17028 13820 13829 0
17028 13820 13830 0
17028 13820 13832 0
17028 13821 0
17028 13821 13829 0
17028 13821 13830 0
17028 13821 13832 0
c (((aux907 + aux910 + aux911)<=1)=tv=SATLiteral(17029))
-17029 13859 0
-17029 13853 13858 0
-17029 13854 0
-17029 13856 0
-17029 13844 13858 0
-17029 13844 13853 0
-17029 13844 13854 0
-17029 13844 13856 0
-17029 13845 0
-17029 13845 13853 0
-17029 13845 13854 0
-17029 13845 13856 0
17029 -13845 -13853 -13858 0
17029 -13844 -13854 -13858 0
17029 -13844 -13853 -13859 0
c ((1<=(aux907 + aux910 + aux911))=tv=SATLiteral(17030))
-17030 -13844 -13853 -13858 0
17030 13858 0
17030 13853 0
17030 13854 0
17030 13856 0
17030 13844 0
17030 13844 13853 0
17030 13844 13854 0
17030 13844 13856 0
17030 13845 0
17030 13845 13853 0
17030 13845 13854 0
17030 13845 13856 0
c (((aux913 + aux916 + aux917)<=1)=tv=SATLiteral(17031))
-17031 13883 0
-17031 13877 13882 0
-17031 13878 0
-17031 13880 0
-17031 13868 13882 0
-17031 13868 13877 0
-17031 13868 13878 0
-17031 13868 13880 0
-17031 13869 0
-17031 13869 13877 0
-17031 13869 13878 0
-17031 13869 13880 0
17031 -13869 -13877 -13882 0
17031 -13868 -13878 -13882 0
17031 -13868 -13877 -13883 0
c ((1<=(aux913 + aux916 + aux917))=tv=SATLiteral(17032))
-17032 -13868 -13877 -13882 0
17032 13882 0
17032 13877 0
17032 13878 0
17032 13880 0
17032 13868 0
17032 13868 13877 0
17032 13868 13878 0
17032 13868 13880 0
17032 13869 0
17032 13869 13877 0
17032 13869 13878 0
17032 13869 13880 0
c (((aux919 + aux922 + aux923)<=1)=tv=SATLiteral(17033))
-17033 13907 0
-17033 13901 13906 0
-17033 13902 0
-17033 13904 0
-17033 13892 13906 0
-17033 13892 13901 0
-17033 13892 13902 0
-17033 13892 13904 0
-17033 13893 0
-17033 13893 13901 0
-17033 13893 13902 0
-17033 13893 13904 0
17033 -13893 -13901 -13906 0
17033 -13892 -13902 -13906 0
17033 -13892 -13901 -13907 0
c ((1<=(aux919 + aux922 + aux923))=tv=SATLiteral(17034))
-17034 -13892 -13901 -13906 0
17034 13906 0
17034 13901 0
17034 13902 0
17034 13904 0
17034 13892 0
17034 13892 13901 0
17034 13892 13902 0
17034 13892 13904 0
17034 13893 0
17034 13893 13901 0
17034 13893 13902 0
17034 13893 13904 0
c (((aux925 + aux928 + aux929)<=1)=tv=SATLiteral(17035))
-17035 13931 0
-17035 13925 13930 0
-17035 13926 0
-17035 13928 0
-17035 13916 13930 0
-17035 13916 13925 0
-17035 13916 13926 0
-17035 13916 13928 0
-17035 13917 0
-17035 13917 13925 0
-17035 13917 13926 0
-17035 13917 13928 0
17035 -13917 -13925 -13930 0
17035 -13916 -13926 -13930 0
17035 -13916 -13925 -13931 0
c ((1<=(aux925 + aux928 + aux929))=tv=SATLiteral(17036))
-17036 -13916 -13925 -13930 0
17036 13930 0
17036 13925 0
17036 13926 0
17036 13928 0
17036 13916 0
17036 13916 13925 0
17036 13916 13926 0
17036 13916 13928 0
17036 13917 0
17036 13917 13925 0
17036 13917 13926 0
17036 13917 13928 0
c (((aux931 + aux934 + aux935)<=1)=tv=SATLiteral(17037))
-17037 13955 0
-17037 13949 13954 0
-17037 13950 0
-17037 13952 0
-17037 13940 13954 0
-17037 13940 13949 0
-17037 13940 13950 0
-17037 13940 13952 0
-17037 13941 0
-17037 13941 13949 0
-17037 13941 13950 0
-17037 13941 13952 0
17037 -13941 -13949 -13954 0
17037 -13940 -13950 -13954 0
17037 -13940 -13949 -13955 0
c ((1<=(aux931 + aux934 + aux935))=tv=SATLiteral(17038))
-17038 -13940 -13949 -13954 0
17038 13954 0
17038 13949 0
17038 13950 0
17038 13952 0
17038 13940 0
17038 13940 13949 0
17038 13940 13950 0
17038 13940 13952 0
17038 13941 0
17038 13941 13949 0
17038 13941 13950 0
17038 13941 13952 0
c (((aux937 + aux940 + aux941)<=1)=tv=SATLiteral(17039))
-17039 13979 0
-17039 13973 13978 0
-17039 13974 0
-17039 13976 0
-17039 13964 13978 0
-17039 13964 13973 0
-17039 13964 13974 0
-17039 13964 13976 0
-17039 13965 0
-17039 13965 13973 0
-17039 13965 13974 0
-17039 13965 13976 0
17039 -13965 -13973 -13978 0
17039 -13964 -13974 -13978 0
17039 -13964 -13973 -13979 0
c ((1<=(aux937 + aux940 + aux941))=tv=SATLiteral(17040))
-17040 -13964 -13973 -13978 0
17040 13978 0
17040 13973 0
17040 13974 0
17040 13976 0
17040 13964 0
17040 13964 13973 0
17040 13964 13974 0
17040 13964 13976 0
17040 13965 0
17040 13965 13973 0
17040 13965 13974 0
17040 13965 13976 0
c (((aux943 + aux946 + aux947)<=1)=tv=SATLiteral(17041))
-17041 14003 0
-17041 13997 14002 0
-17041 13998 0
-17041 14000 0
-17041 13988 14002 0
-17041 13988 13997 0
-17041 13988 13998 0
-17041 13988 14000 0
-17041 13989 0
-17041 13989 13997 0
-17041 13989 13998 0
-17041 13989 14000 0
17041 -13989 -13997 -14002 0
17041 -13988 -13998 -14002 0
17041 -13988 -13997 -14003 0
c ((1<=(aux943 + aux946 + aux947))=tv=SATLiteral(17042))
-17042 -13988 -13997 -14002 0
17042 14002 0
17042 13997 0
17042 13998 0
17042 14000 0
17042 13988 0
17042 13988 13997 0
17042 13988 13998 0
17042 13988 14000 0
17042 13989 0
17042 13989 13997 0
17042 13989 13998 0
17042 13989 14000 0
c (((aux949 + aux952 + aux953)<=1)=tv=SATLiteral(17043))
-17043 14027 0
-17043 14021 14026 0
-17043 14022 0
-17043 14024 0
-17043 14012 14026 0
-17043 14012 14021 0
-17043 14012 14022 0
-17043 14012 14024 0
-17043 14013 0
-17043 14013 14021 0
-17043 14013 14022 0
-17043 14013 14024 0
17043 -14013 -14021 -14026 0
17043 -14012 -14022 -14026 0
17043 -14012 -14021 -14027 0
c ((1<=(aux949 + aux952 + aux953))=tv=SATLiteral(17044))
-17044 -14012 -14021 -14026 0
17044 14026 0
17044 14021 0
17044 14022 0
17044 14024 0
17044 14012 0
17044 14012 14021 0
17044 14012 14022 0
17044 14012 14024 0
17044 14013 0
17044 14013 14021 0
17044 14013 14022 0
17044 14013 14024 0
c (((aux955 + aux958 + aux959)<=1)=tv=SATLiteral(17045))
-17045 14051 0
-17045 14045 14050 0
-17045 14046 0
-17045 14048 0
-17045 14036 14050 0
-17045 14036 14045 0
-17045 14036 14046 0
-17045 14036 14048 0
-17045 14037 0
-17045 14037 14045 0
-17045 14037 14046 0
-17045 14037 14048 0
17045 -14037 -14045 -14050 0
17045 -14036 -14046 -14050 0
17045 -14036 -14045 -14051 0
c ((1<=(aux955 + aux958 + aux959))=tv=SATLiteral(17046))
-17046 -14036 -14045 -14050 0
17046 14050 0
17046 14045 0
17046 14046 0
17046 14048 0
17046 14036 0
17046 14036 14045 0
17046 14036 14046 0
17046 14036 14048 0
17046 14037 0
17046 14037 14045 0
17046 14037 14046 0
17046 14037 14048 0
c (((aux961 + aux964 + aux965)<=1)=tv=SATLiteral(17047))
-17047 14075 0
-17047 14069 14074 0
-17047 14070 0
-17047 14072 0
-17047 14060 14074 0
-17047 14060 14069 0
-17047 14060 14070 0
-17047 14060 14072 0
-17047 14061 0
-17047 14061 14069 0
-17047 14061 14070 0
-17047 14061 14072 0
17047 -14061 -14069 -14074 0
17047 -14060 -14070 -14074 0
17047 -14060 -14069 -14075 0
c ((1<=(aux961 + aux964 + aux965))=tv=SATLiteral(17048))
-17048 -14060 -14069 -14074 0
17048 14074 0
17048 14069 0
17048 14070 0
17048 14072 0
17048 14060 0
17048 14060 14069 0
17048 14060 14070 0
17048 14060 14072 0
17048 14061 0
17048 14061 14069 0
17048 14061 14070 0
17048 14061 14072 0
c (((aux967 + aux970 + aux971)<=1)=tv=SATLiteral(17049))
-17049 14099 0
-17049 14093 14098 0
-17049 14094 0
-17049 14096 0
-17049 14084 14098 0
-17049 14084 14093 0
-17049 14084 14094 0
-17049 14084 14096 0
-17049 14085 0
-17049 14085 14093 0
-17049 14085 14094 0
-17049 14085 14096 0
17049 -14085 -14093 -14098 0
17049 -14084 -14094 -14098 0
17049 -14084 -14093 -14099 0
c ((1<=(aux967 + aux970 + aux971))=tv=SATLiteral(17050))
-17050 -14084 -14093 -14098 0
17050 14098 0
17050 14093 0
17050 14094 0
17050 14096 0
17050 14084 0
17050 14084 14093 0
17050 14084 14094 0
17050 14084 14096 0
17050 14085 0
17050 14085 14093 0
17050 14085 14094 0
17050 14085 14096 0
c (((aux973 + aux976 + aux977)<=1)=tv=SATLiteral(17051))
-17051 14123 0
-17051 14117 14122 0
-17051 14118 0
-17051 14120 0
-17051 14108 14122 0
-17051 14108 14117 0
-17051 14108 14118 0
-17051 14108 14120 0
-17051 14109 0
-17051 14109 14117 0
-17051 14109 14118 0
-17051 14109 14120 0
17051 -14109 -14117 -14122 0
17051 -14108 -14118 -14122 0
17051 -14108 -14117 -14123 0
c ((1<=(aux973 + aux976 + aux977))=tv=SATLiteral(17052))
-17052 -14108 -14117 -14122 0
17052 14122 0
17052 14117 0
17052 14118 0
17052 14120 0
17052 14108 0
17052 14108 14117 0
17052 14108 14118 0
17052 14108 14120 0
17052 14109 0
17052 14109 14117 0
17052 14109 14118 0
17052 14109 14120 0
c (((aux979 + aux982 + aux983)<=1)=tv=SATLiteral(17053))
-17053 14147 0
-17053 14141 14146 0
-17053 14142 0
-17053 14144 0
-17053 14132 14146 0
-17053 14132 14141 0
-17053 14132 14142 0
-17053 14132 14144 0
-17053 14133 0
-17053 14133 14141 0
-17053 14133 14142 0
-17053 14133 14144 0
17053 -14133 -14141 -14146 0
17053 -14132 -14142 -14146 0
17053 -14132 -14141 -14147 0
c ((1<=(aux979 + aux982 + aux983))=tv=SATLiteral(17054))
-17054 -14132 -14141 -14146 0
17054 14146 0
17054 14141 0
17054 14142 0
17054 14144 0
17054 14132 0
17054 14132 14141 0
17054 14132 14142 0
17054 14132 14144 0
17054 14133 0
17054 14133 14141 0
17054 14133 14142 0
17054 14133 14144 0
c (((aux985 + aux988 + aux989)<=1)=tv=SATLiteral(17055))
-17055 14171 0
-17055 14165 14170 0
-17055 14166 0
-17055 14168 0
-17055 14156 14170 0
-17055 14156 14165 0
-17055 14156 14166 0
-17055 14156 14168 0
-17055 14157 0
-17055 14157 14165 0
-17055 14157 14166 0
-17055 14157 14168 0
17055 -14157 -14165 -14170 0
17055 -14156 -14166 -14170 0
17055 -14156 -14165 -14171 0
c ((1<=(aux985 + aux988 + aux989))=tv=SATLiteral(17056))
-17056 -14156 -14165 -14170 0
17056 14170 0
17056 14165 0
17056 14166 0
17056 14168 0
17056 14156 0
17056 14156 14165 0
17056 14156 14166 0
17056 14156 14168 0
17056 14157 0
17056 14157 14165 0
17056 14157 14166 0
17056 14157 14168 0
c (((aux991 + aux994 + aux995)<=1)=tv=SATLiteral(17057))
-17057 14195 0
-17057 14189 14194 0
-17057 14190 0
-17057 14192 0
-17057 14180 14194 0
-17057 14180 14189 0
-17057 14180 14190 0
-17057 14180 14192 0
-17057 14181 0
-17057 14181 14189 0
-17057 14181 14190 0
-17057 14181 14192 0
17057 -14181 -14189 -14194 0
17057 -14180 -14190 -14194 0
17057 -14180 -14189 -14195 0
c ((1<=(aux991 + aux994 + aux995))=tv=SATLiteral(17058))
-17058 -14180 -14189 -14194 0
17058 14194 0
17058 14189 0
17058 14190 0
17058 14192 0
17058 14180 0
17058 14180 14189 0
17058 14180 14190 0
17058 14180 14192 0
17058 14181 0
17058 14181 14189 0
17058 14181 14190 0
17058 14181 14192 0
c (((aux997 + aux1000 + aux1001)<=1)=tv=SATLiteral(17059))
-17059 14219 0
-17059 14213 14218 0
-17059 14214 0
-17059 14216 0
-17059 14204 14218 0
-17059 14204 14213 0
-17059 14204 14214 0
-17059 14204 14216 0
-17059 14205 0
-17059 14205 14213 0
-17059 14205 14214 0
-17059 14205 14216 0
17059 -14205 -14213 -14218 0
17059 -14204 -14214 -14218 0
17059 -14204 -14213 -14219 0
c ((1<=(aux997 + aux1000 + aux1001))=tv=SATLiteral(17060))
-17060 -14204 -14213 -14218 0
17060 14218 0
17060 14213 0
17060 14214 0
17060 14216 0
17060 14204 0
17060 14204 14213 0
17060 14204 14214 0
17060 14204 14216 0
17060 14205 0
17060 14205 14213 0
17060 14205 14214 0
17060 14205 14216 0
c (((aux1003 + aux1006 + aux1007)<=1)=tv=SATLiteral(17061))
-17061 14243 0
-17061 14237 14242 0
-17061 14238 0
-17061 14240 0
-17061 14228 14242 0
-17061 14228 14237 0
-17061 14228 14238 0
-17061 14228 14240 0
-17061 14229 0
-17061 14229 14237 0
-17061 14229 14238 0
-17061 14229 14240 0
17061 -14229 -14237 -14242 0
17061 -14228 -14238 -14242 0
17061 -14228 -14237 -14243 0
c ((1<=(aux1003 + aux1006 + aux1007))=tv=SATLiteral(17062))
-17062 -14228 -14237 -14242 0
17062 14242 0
17062 14237 0
17062 14238 0
17062 14240 0
17062 14228 0
17062 14228 14237 0
17062 14228 14238 0
17062 14228 14240 0
17062 14229 0
17062 14229 14237 0
17062 14229 14238 0
17062 14229 14240 0
c (((aux1009 + aux1012 + aux1013)<=1)=tv=SATLiteral(17063))
-17063 14267 0
-17063 14261 14266 0
-17063 14262 0
-17063 14264 0
-17063 14252 14266 0
-17063 14252 14261 0
-17063 14252 14262 0
-17063 14252 14264 0
-17063 14253 0
-17063 14253 14261 0
-17063 14253 14262 0
-17063 14253 14264 0
17063 -14253 -14261 -14266 0
17063 -14252 -14262 -14266 0
17063 -14252 -14261 -14267 0
c ((1<=(aux1009 + aux1012 + aux1013))=tv=SATLiteral(17064))
-17064 -14252 -14261 -14266 0
17064 14266 0
17064 14261 0
17064 14262 0
17064 14264 0
17064 14252 0
17064 14252 14261 0
17064 14252 14262 0
17064 14252 14264 0
17064 14253 0
17064 14253 14261 0
17064 14253 14262 0
17064 14253 14264 0
c (((aux1015 + aux1018 + aux1019)<=1)=tv=SATLiteral(17065))
-17065 14291 0
-17065 14285 14290 0
-17065 14286 0
-17065 14288 0
-17065 14276 14290 0
-17065 14276 14285 0
-17065 14276 14286 0
-17065 14276 14288 0
-17065 14277 0
-17065 14277 14285 0
-17065 14277 14286 0
-17065 14277 14288 0
17065 -14277 -14285 -14290 0
17065 -14276 -14286 -14290 0
17065 -14276 -14285 -14291 0
c ((1<=(aux1015 + aux1018 + aux1019))=tv=SATLiteral(17066))
-17066 -14276 -14285 -14290 0
17066 14290 0
17066 14285 0
17066 14286 0
17066 14288 0
17066 14276 0
17066 14276 14285 0
17066 14276 14286 0
17066 14276 14288 0
17066 14277 0
17066 14277 14285 0
17066 14277 14286 0
17066 14277 14288 0
c (((aux1021 + aux1024 + aux1025)<=1)=tv=SATLiteral(17067))
-17067 14315 0
-17067 14309 14314 0
-17067 14310 0
-17067 14312 0
-17067 14300 14314 0
-17067 14300 14309 0
-17067 14300 14310 0
-17067 14300 14312 0
-17067 14301 0
-17067 14301 14309 0
-17067 14301 14310 0
-17067 14301 14312 0
17067 -14301 -14309 -14314 0
17067 -14300 -14310 -14314 0
17067 -14300 -14309 -14315 0
c ((1<=(aux1021 + aux1024 + aux1025))=tv=SATLiteral(17068))
-17068 -14300 -14309 -14314 0
17068 14314 0
17068 14309 0
17068 14310 0
17068 14312 0
17068 14300 0
17068 14300 14309 0
17068 14300 14310 0
17068 14300 14312 0
17068 14301 0
17068 14301 14309 0
17068 14301 14310 0
17068 14301 14312 0
c (((aux1027 + aux1030 + aux1031)<=1)=tv=SATLiteral(17069))
-17069 14339 0
-17069 14333 14338 0
-17069 14334 0
-17069 14336 0
-17069 14324 14338 0
-17069 14324 14333 0
-17069 14324 14334 0
-17069 14324 14336 0
-17069 14325 0
-17069 14325 14333 0
-17069 14325 14334 0
-17069 14325 14336 0
17069 -14325 -14333 -14338 0
17069 -14324 -14334 -14338 0
17069 -14324 -14333 -14339 0
c ((1<=(aux1027 + aux1030 + aux1031))=tv=SATLiteral(17070))
-17070 -14324 -14333 -14338 0
17070 14338 0
17070 14333 0
17070 14334 0
17070 14336 0
17070 14324 0
17070 14324 14333 0
17070 14324 14334 0
17070 14324 14336 0
17070 14325 0
17070 14325 14333 0
17070 14325 14334 0
17070 14325 14336 0
c (((aux1033 + aux1036 + aux1037)<=1)=tv=SATLiteral(17071))
-17071 14363 0
-17071 14357 14362 0
-17071 14358 0
-17071 14360 0
-17071 14348 14362 0
-17071 14348 14357 0
-17071 14348 14358 0
-17071 14348 14360 0
-17071 14349 0
-17071 14349 14357 0
-17071 14349 14358 0
-17071 14349 14360 0
17071 -14349 -14357 -14362 0
17071 -14348 -14358 -14362 0
17071 -14348 -14357 -14363 0
c ((1<=(aux1033 + aux1036 + aux1037))=tv=SATLiteral(17072))
-17072 -14348 -14357 -14362 0
17072 14362 0
17072 14357 0
17072 14358 0
17072 14360 0
17072 14348 0
17072 14348 14357 0
17072 14348 14358 0
17072 14348 14360 0
17072 14349 0
17072 14349 14357 0
17072 14349 14358 0
17072 14349 14360 0
c (((aux1039 + aux1042 + aux1043)<=1)=tv=SATLiteral(17073))
-17073 14387 0
-17073 14381 14386 0
-17073 14382 0
-17073 14384 0
-17073 14372 14386 0
-17073 14372 14381 0
-17073 14372 14382 0
-17073 14372 14384 0
-17073 14373 0
-17073 14373 14381 0
-17073 14373 14382 0
-17073 14373 14384 0
17073 -14373 -14381 -14386 0
17073 -14372 -14382 -14386 0
17073 -14372 -14381 -14387 0
c ((1<=(aux1039 + aux1042 + aux1043))=tv=SATLiteral(17074))
-17074 -14372 -14381 -14386 0
17074 14386 0
17074 14381 0
17074 14382 0
17074 14384 0
17074 14372 0
17074 14372 14381 0
17074 14372 14382 0
17074 14372 14384 0
17074 14373 0
17074 14373 14381 0
17074 14373 14382 0
17074 14373 14384 0
c (((aux1045 + aux1048 + aux1049)<=1)=tv=SATLiteral(17075))
-17075 14411 0
-17075 14405 14410 0
-17075 14406 0
-17075 14408 0
-17075 14396 14410 0
-17075 14396 14405 0
-17075 14396 14406 0
-17075 14396 14408 0
-17075 14397 0
-17075 14397 14405 0
-17075 14397 14406 0
-17075 14397 14408 0
17075 -14397 -14405 -14410 0
17075 -14396 -14406 -14410 0
17075 -14396 -14405 -14411 0
c ((1<=(aux1045 + aux1048 + aux1049))=tv=SATLiteral(17076))
-17076 -14396 -14405 -14410 0
17076 14410 0
17076 14405 0
17076 14406 0
17076 14408 0
17076 14396 0
17076 14396 14405 0
17076 14396 14406 0
17076 14396 14408 0
17076 14397 0
17076 14397 14405 0
17076 14397 14406 0
17076 14397 14408 0
c (((aux1051 + aux1054 + aux1055)<=1)=tv=SATLiteral(17077))
-17077 14435 0
-17077 14429 14434 0
-17077 14430 0
-17077 14432 0
-17077 14420 14434 0
-17077 14420 14429 0
-17077 14420 14430 0
-17077 14420 14432 0
-17077 14421 0
-17077 14421 14429 0
-17077 14421 14430 0
-17077 14421 14432 0
17077 -14421 -14429 -14434 0
17077 -14420 -14430 -14434 0
17077 -14420 -14429 -14435 0
c ((1<=(aux1051 + aux1054 + aux1055))=tv=SATLiteral(17078))
-17078 -14420 -14429 -14434 0
17078 14434 0
17078 14429 0
17078 14430 0
17078 14432 0
17078 14420 0
17078 14420 14429 0
17078 14420 14430 0
17078 14420 14432 0
17078 14421 0
17078 14421 14429 0
17078 14421 14430 0
17078 14421 14432 0
c (((aux1057 + aux1060 + aux1061)<=1)=tv=SATLiteral(17079))
-17079 14459 0
-17079 14453 14458 0
-17079 14454 0
-17079 14456 0
-17079 14444 14458 0
-17079 14444 14453 0
-17079 14444 14454 0
-17079 14444 14456 0
-17079 14445 0
-17079 14445 14453 0
-17079 14445 14454 0
-17079 14445 14456 0
17079 -14445 -14453 -14458 0
17079 -14444 -14454 -14458 0
17079 -14444 -14453 -14459 0
c ((1<=(aux1057 + aux1060 + aux1061))=tv=SATLiteral(17080))
-17080 -14444 -14453 -14458 0
17080 14458 0
17080 14453 0
17080 14454 0
17080 14456 0
17080 14444 0
17080 14444 14453 0
17080 14444 14454 0
17080 14444 14456 0
17080 14445 0
17080 14445 14453 0
17080 14445 14454 0
17080 14445 14456 0
c (((aux1063 + aux1066 + aux1067)<=1)=tv=SATLiteral(17081))
-17081 14483 0
-17081 14477 14482 0
-17081 14478 0
-17081 14480 0
-17081 14468 14482 0
-17081 14468 14477 0
-17081 14468 14478 0
-17081 14468 14480 0
-17081 14469 0
-17081 14469 14477 0
-17081 14469 14478 0
-17081 14469 14480 0
17081 -14469 -14477 -14482 0
17081 -14468 -14478 -14482 0
17081 -14468 -14477 -14483 0
c ((1<=(aux1063 + aux1066 + aux1067))=tv=SATLiteral(17082))
-17082 -14468 -14477 -14482 0
17082 14482 0
17082 14477 0
17082 14478 0
17082 14480 0
17082 14468 0
17082 14468 14477 0
17082 14468 14478 0
17082 14468 14480 0
17082 14469 0
17082 14469 14477 0
17082 14469 14478 0
17082 14469 14480 0
c (((aux1069 + aux1072 + aux1073)<=1)=tv=SATLiteral(17083))
-17083 14507 0
-17083 14501 14506 0
-17083 14502 0
-17083 14504 0
-17083 14492 14506 0
-17083 14492 14501 0
-17083 14492 14502 0
-17083 14492 14504 0
-17083 14493 0
-17083 14493 14501 0
-17083 14493 14502 0
-17083 14493 14504 0
17083 -14493 -14501 -14506 0
17083 -14492 -14502 -14506 0
17083 -14492 -14501 -14507 0
c ((1<=(aux1069 + aux1072 + aux1073))=tv=SATLiteral(17084))
-17084 -14492 -14501 -14506 0
17084 14506 0
17084 14501 0
17084 14502 0
17084 14504 0
17084 14492 0
17084 14492 14501 0
17084 14492 14502 0
17084 14492 14504 0
17084 14493 0
17084 14493 14501 0
17084 14493 14502 0
17084 14493 14504 0
c (((aux1075 + aux1078 + aux1079)<=1)=tv=SATLiteral(17085))
-17085 14531 0
-17085 14525 14530 0
-17085 14526 0
-17085 14528 0
-17085 14516 14530 0
-17085 14516 14525 0
-17085 14516 14526 0
-17085 14516 14528 0
-17085 14517 0
-17085 14517 14525 0
-17085 14517 14526 0
-17085 14517 14528 0
17085 -14517 -14525 -14530 0
17085 -14516 -14526 -14530 0
17085 -14516 -14525 -14531 0
c ((1<=(aux1075 + aux1078 + aux1079))=tv=SATLiteral(17086))
-17086 -14516 -14525 -14530 0
17086 14530 0
17086 14525 0
17086 14526 0
17086 14528 0
17086 14516 0
17086 14516 14525 0
17086 14516 14526 0
17086 14516 14528 0
17086 14517 0
17086 14517 14525 0
17086 14517 14526 0
17086 14517 14528 0
c (((aux1081 + aux1084 + aux1085)<=1)=tv=SATLiteral(17087))
-17087 14555 0
-17087 14549 14554 0
-17087 14550 0
-17087 14552 0
-17087 14540 14554 0
-17087 14540 14549 0
-17087 14540 14550 0
-17087 14540 14552 0
-17087 14541 0
-17087 14541 14549 0
-17087 14541 14550 0
-17087 14541 14552 0
17087 -14541 -14549 -14554 0
17087 -14540 -14550 -14554 0
17087 -14540 -14549 -14555 0
c ((1<=(aux1081 + aux1084 + aux1085))=tv=SATLiteral(17088))
-17088 -14540 -14549 -14554 0
17088 14554 0
17088 14549 0
17088 14550 0
17088 14552 0
17088 14540 0
17088 14540 14549 0
17088 14540 14550 0
17088 14540 14552 0
17088 14541 0
17088 14541 14549 0
17088 14541 14550 0
17088 14541 14552 0
c (((aux1087 + aux1090 + aux1091)<=1)=tv=SATLiteral(17089))
-17089 14579 0
-17089 14573 14578 0
-17089 14574 0
-17089 14576 0
-17089 14564 14578 0
-17089 14564 14573 0
-17089 14564 14574 0
-17089 14564 14576 0
-17089 14565 0
-17089 14565 14573 0
-17089 14565 14574 0
-17089 14565 14576 0
17089 -14565 -14573 -14578 0
17089 -14564 -14574 -14578 0
17089 -14564 -14573 -14579 0
c ((1<=(aux1087 + aux1090 + aux1091))=tv=SATLiteral(17090))
-17090 -14564 -14573 -14578 0
17090 14578 0
17090 14573 0
17090 14574 0
17090 14576 0
17090 14564 0
17090 14564 14573 0
17090 14564 14574 0
17090 14564 14576 0
17090 14565 0
17090 14565 14573 0
17090 14565 14574 0
17090 14565 14576 0
c (((aux1093 + aux1096 + aux1097)<=1)=tv=SATLiteral(17091))
-17091 14603 0
-17091 14597 14602 0
-17091 14598 0
-17091 14600 0
-17091 14588 14602 0
-17091 14588 14597 0
-17091 14588 14598 0
-17091 14588 14600 0
-17091 14589 0
-17091 14589 14597 0
-17091 14589 14598 0
-17091 14589 14600 0
17091 -14589 -14597 -14602 0
17091 -14588 -14598 -14602 0
17091 -14588 -14597 -14603 0
c ((1<=(aux1093 + aux1096 + aux1097))=tv=SATLiteral(17092))
-17092 -14588 -14597 -14602 0
17092 14602 0
17092 14597 0
17092 14598 0
17092 14600 0
17092 14588 0
17092 14588 14597 0
17092 14588 14598 0
17092 14588 14600 0
17092 14589 0
17092 14589 14597 0
17092 14589 14598 0
17092 14589 14600 0
c (((aux1099 + aux1102 + aux1103)<=1)=tv=SATLiteral(17093))
-17093 14627 0
-17093 14621 14626 0
-17093 14622 0
-17093 14624 0
-17093 14612 14626 0
-17093 14612 14621 0
-17093 14612 14622 0
-17093 14612 14624 0
-17093 14613 0
-17093 14613 14621 0
-17093 14613 14622 0
-17093 14613 14624 0
17093 -14613 -14621 -14626 0
17093 -14612 -14622 -14626 0
17093 -14612 -14621 -14627 0
c ((1<=(aux1099 + aux1102 + aux1103))=tv=SATLiteral(17094))
-17094 -14612 -14621 -14626 0
17094 14626 0
17094 14621 0
17094 14622 0
17094 14624 0
17094 14612 0
17094 14612 14621 0
17094 14612 14622 0
17094 14612 14624 0
17094 14613 0
17094 14613 14621 0
17094 14613 14622 0
17094 14613 14624 0
c (((aux1105 + aux1108 + aux1109)<=1)=tv=SATLiteral(17095))
-17095 14651 0
-17095 14645 14650 0
-17095 14646 0
-17095 14648 0
-17095 14636 14650 0
-17095 14636 14645 0
-17095 14636 14646 0
-17095 14636 14648 0
-17095 14637 0
-17095 14637 14645 0
-17095 14637 14646 0
-17095 14637 14648 0
17095 -14637 -14645 -14650 0
17095 -14636 -14646 -14650 0
17095 -14636 -14645 -14651 0
c ((1<=(aux1105 + aux1108 + aux1109))=tv=SATLiteral(17096))
-17096 -14636 -14645 -14650 0
17096 14650 0
17096 14645 0
17096 14646 0
17096 14648 0
17096 14636 0
17096 14636 14645 0
17096 14636 14646 0
17096 14636 14648 0
17096 14637 0
17096 14637 14645 0
17096 14637 14646 0
17096 14637 14648 0
c (((aux1111 + aux1114 + aux1115)<=1)=tv=SATLiteral(17097))
-17097 14675 0
-17097 14669 14674 0
-17097 14670 0
-17097 14672 0
-17097 14660 14674 0
-17097 14660 14669 0
-17097 14660 14670 0
-17097 14660 14672 0
-17097 14661 0
-17097 14661 14669 0
-17097 14661 14670 0
-17097 14661 14672 0
17097 -14661 -14669 -14674 0
17097 -14660 -14670 -14674 0
17097 -14660 -14669 -14675 0
c ((1<=(aux1111 + aux1114 + aux1115))=tv=SATLiteral(17098))
-17098 -14660 -14669 -14674 0
17098 14674 0
17098 14669 0
17098 14670 0
17098 14672 0
17098 14660 0
17098 14660 14669 0
17098 14660 14670 0
17098 14660 14672 0
17098 14661 0
17098 14661 14669 0
17098 14661 14670 0
17098 14661 14672 0
c (((aux1117 + aux1120 + aux1121)<=1)=tv=SATLiteral(17099))
-17099 14699 0
-17099 14693 14698 0
-17099 14694 0
-17099 14696 0
-17099 14684 14698 0
-17099 14684 14693 0
-17099 14684 14694 0
-17099 14684 14696 0
-17099 14685 0
-17099 14685 14693 0
-17099 14685 14694 0
-17099 14685 14696 0
17099 -14685 -14693 -14698 0
17099 -14684 -14694 -14698 0
17099 -14684 -14693 -14699 0
c ((1<=(aux1117 + aux1120 + aux1121))=tv=SATLiteral(17100))
-17100 -14684 -14693 -14698 0
17100 14698 0
17100 14693 0
17100 14694 0
17100 14696 0
17100 14684 0
17100 14684 14693 0
17100 14684 14694 0
17100 14684 14696 0
17100 14685 0
17100 14685 14693 0
17100 14685 14694 0
17100 14685 14696 0
c (((aux1123 + aux1126 + aux1127)<=1)=tv=SATLiteral(17101))
-17101 14723 0
-17101 14717 14722 0
-17101 14718 0
-17101 14720 0
-17101 14708 14722 0
-17101 14708 14717 0
-17101 14708 14718 0
-17101 14708 14720 0
-17101 14709 0
-17101 14709 14717 0
-17101 14709 14718 0
-17101 14709 14720 0
17101 -14709 -14717 -14722 0
17101 -14708 -14718 -14722 0
17101 -14708 -14717 -14723 0
c ((1<=(aux1123 + aux1126 + aux1127))=tv=SATLiteral(17102))
-17102 -14708 -14717 -14722 0
17102 14722 0
17102 14717 0
17102 14718 0
17102 14720 0
17102 14708 0
17102 14708 14717 0
17102 14708 14718 0
17102 14708 14720 0
17102 14709 0
17102 14709 14717 0
17102 14709 14718 0
17102 14709 14720 0
c (((aux1129 + aux1132 + aux1133)<=1)=tv=SATLiteral(17103))
-17103 14747 0
-17103 14741 14746 0
-17103 14742 0
-17103 14744 0
-17103 14732 14746 0
-17103 14732 14741 0
-17103 14732 14742 0
-17103 14732 14744 0
-17103 14733 0
-17103 14733 14741 0
-17103 14733 14742 0
-17103 14733 14744 0
17103 -14733 -14741 -14746 0
17103 -14732 -14742 -14746 0
17103 -14732 -14741 -14747 0
c ((1<=(aux1129 + aux1132 + aux1133))=tv=SATLiteral(17104))
-17104 -14732 -14741 -14746 0
17104 14746 0
17104 14741 0
17104 14742 0
17104 14744 0
17104 14732 0
17104 14732 14741 0
17104 14732 14742 0
17104 14732 14744 0
17104 14733 0
17104 14733 14741 0
17104 14733 14742 0
17104 14733 14744 0
c (((aux1135 + aux1138 + aux1139)<=1)=tv=SATLiteral(17105))
-17105 14771 0
-17105 14765 14770 0
-17105 14766 0
-17105 14768 0
-17105 14756 14770 0
-17105 14756 14765 0
-17105 14756 14766 0
-17105 14756 14768 0
-17105 14757 0
-17105 14757 14765 0
-17105 14757 14766 0
-17105 14757 14768 0
17105 -14757 -14765 -14770 0
17105 -14756 -14766 -14770 0
17105 -14756 -14765 -14771 0
c ((1<=(aux1135 + aux1138 + aux1139))=tv=SATLiteral(17106))
-17106 -14756 -14765 -14770 0
17106 14770 0
17106 14765 0
17106 14766 0
17106 14768 0
17106 14756 0
17106 14756 14765 0
17106 14756 14766 0
17106 14756 14768 0
17106 14757 0
17106 14757 14765 0
17106 14757 14766 0
17106 14757 14768 0
c (((aux1141 + aux1144 + aux1145)<=1)=tv=SATLiteral(17107))
-17107 14795 0
-17107 14789 14794 0
-17107 14790 0
-17107 14792 0
-17107 14780 14794 0
-17107 14780 14789 0
-17107 14780 14790 0
-17107 14780 14792 0
-17107 14781 0
-17107 14781 14789 0
-17107 14781 14790 0
-17107 14781 14792 0
17107 -14781 -14789 -14794 0
17107 -14780 -14790 -14794 0
17107 -14780 -14789 -14795 0
c ((1<=(aux1141 + aux1144 + aux1145))=tv=SATLiteral(17108))
-17108 -14780 -14789 -14794 0
17108 14794 0
17108 14789 0
17108 14790 0
17108 14792 0
17108 14780 0
17108 14780 14789 0
17108 14780 14790 0
17108 14780 14792 0
17108 14781 0
17108 14781 14789 0
17108 14781 14790 0
17108 14781 14792 0
c (((aux1147 + aux1150 + aux1151)<=1)=tv=SATLiteral(17109))
-17109 14819 0
-17109 14813 14818 0
-17109 14814 0
-17109 14816 0
-17109 14804 14818 0
-17109 14804 14813 0
-17109 14804 14814 0
-17109 14804 14816 0
-17109 14805 0
-17109 14805 14813 0
-17109 14805 14814 0
-17109 14805 14816 0
17109 -14805 -14813 -14818 0
17109 -14804 -14814 -14818 0
17109 -14804 -14813 -14819 0
c ((1<=(aux1147 + aux1150 + aux1151))=tv=SATLiteral(17110))
-17110 -14804 -14813 -14818 0
17110 14818 0
17110 14813 0
17110 14814 0
17110 14816 0
17110 14804 0
17110 14804 14813 0
17110 14804 14814 0
17110 14804 14816 0
17110 14805 0
17110 14805 14813 0
17110 14805 14814 0
17110 14805 14816 0
c (((aux1153 + aux1156 + aux1157)<=1)=tv=SATLiteral(17111))
-17111 14843 0
-17111 14837 14842 0
-17111 14838 0
-17111 14840 0
-17111 14828 14842 0
-17111 14828 14837 0
-17111 14828 14838 0
-17111 14828 14840 0
-17111 14829 0
-17111 14829 14837 0
-17111 14829 14838 0
-17111 14829 14840 0
17111 -14829 -14837 -14842 0
17111 -14828 -14838 -14842 0
17111 -14828 -14837 -14843 0
c ((1<=(aux1153 + aux1156 + aux1157))=tv=SATLiteral(17112))
-17112 -14828 -14837 -14842 0
17112 14842 0
17112 14837 0
17112 14838 0
17112 14840 0
17112 14828 0
17112 14828 14837 0
17112 14828 14838 0
17112 14828 14840 0
17112 14829 0
17112 14829 14837 0
17112 14829 14838 0
17112 14829 14840 0
c (((aux1159 + aux1162 + aux1163)<=1)=tv=SATLiteral(17113))
-17113 14867 0
-17113 14861 14866 0
-17113 14862 0
-17113 14864 0
-17113 14852 14866 0
-17113 14852 14861 0
-17113 14852 14862 0
-17113 14852 14864 0
-17113 14853 0
-17113 14853 14861 0
-17113 14853 14862 0
-17113 14853 14864 0
17113 -14853 -14861 -14866 0
17113 -14852 -14862 -14866 0
17113 -14852 -14861 -14867 0
c ((1<=(aux1159 + aux1162 + aux1163))=tv=SATLiteral(17114))
-17114 -14852 -14861 -14866 0
17114 14866 0
17114 14861 0
17114 14862 0
17114 14864 0
17114 14852 0
17114 14852 14861 0
17114 14852 14862 0
17114 14852 14864 0
17114 14853 0
17114 14853 14861 0
17114 14853 14862 0
17114 14853 14864 0
c (((aux1165 + aux1168 + aux1169)<=1)=tv=SATLiteral(17115))
-17115 14891 0
-17115 14885 14890 0
-17115 14886 0
-17115 14888 0
-17115 14876 14890 0
-17115 14876 14885 0
-17115 14876 14886 0
-17115 14876 14888 0
-17115 14877 0
-17115 14877 14885 0
-17115 14877 14886 0
-17115 14877 14888 0
17115 -14877 -14885 -14890 0
17115 -14876 -14886 -14890 0
17115 -14876 -14885 -14891 0
c ((1<=(aux1165 + aux1168 + aux1169))=tv=SATLiteral(17116))
-17116 -14876 -14885 -14890 0
17116 14890 0
17116 14885 0
17116 14886 0
17116 14888 0
17116 14876 0
17116 14876 14885 0
17116 14876 14886 0
17116 14876 14888 0
17116 14877 0
17116 14877 14885 0
17116 14877 14886 0
17116 14877 14888 0
c (((aux1171 + aux1174 + aux1175)<=1)=tv=SATLiteral(17117))
-17117 14915 0
-17117 14909 14914 0
-17117 14910 0
-17117 14912 0
-17117 14900 14914 0
-17117 14900 14909 0
-17117 14900 14910 0
-17117 14900 14912 0
-17117 14901 0
-17117 14901 14909 0
-17117 14901 14910 0
-17117 14901 14912 0
17117 -14901 -14909 -14914 0
17117 -14900 -14910 -14914 0
17117 -14900 -14909 -14915 0
c ((1<=(aux1171 + aux1174 + aux1175))=tv=SATLiteral(17118))
-17118 -14900 -14909 -14914 0
17118 14914 0
17118 14909 0
17118 14910 0
17118 14912 0
17118 14900 0
17118 14900 14909 0
17118 14900 14910 0
17118 14900 14912 0
17118 14901 0
17118 14901 14909 0
17118 14901 14910 0
17118 14901 14912 0
c (((aux1177 + aux1180 + aux1181)<=1)=tv=SATLiteral(17119))
-17119 14939 0
-17119 14933 14938 0
-17119 14934 0
-17119 14936 0
-17119 14924 14938 0
-17119 14924 14933 0
-17119 14924 14934 0
-17119 14924 14936 0
-17119 14925 0
-17119 14925 14933 0
-17119 14925 14934 0
-17119 14925 14936 0
17119 -14925 -14933 -14938 0
17119 -14924 -14934 -14938 0
17119 -14924 -14933 -14939 0
c ((1<=(aux1177 + aux1180 + aux1181))=tv=SATLiteral(17120))
-17120 -14924 -14933 -14938 0
17120 14938 0
17120 14933 0
17120 14934 0
17120 14936 0
17120 14924 0
17120 14924 14933 0
17120 14924 14934 0
17120 14924 14936 0
17120 14925 0
17120 14925 14933 0
17120 14925 14934 0
17120 14925 14936 0
c (((aux1183 + aux1186 + aux1187)<=1)=tv=SATLiteral(17121))
-17121 14963 0
-17121 14957 14962 0
-17121 14958 0
-17121 14960 0
-17121 14948 14962 0
-17121 14948 14957 0
-17121 14948 14958 0
-17121 14948 14960 0
-17121 14949 0
-17121 14949 14957 0
-17121 14949 14958 0
-17121 14949 14960 0
17121 -14949 -14957 -14962 0
17121 -14948 -14958 -14962 0
17121 -14948 -14957 -14963 0
c ((1<=(aux1183 + aux1186 + aux1187))=tv=SATLiteral(17122))
-17122 -14948 -14957 -14962 0
17122 14962 0
17122 14957 0
17122 14958 0
17122 14960 0
17122 14948 0
17122 14948 14957 0
17122 14948 14958 0
17122 14948 14960 0
17122 14949 0
17122 14949 14957 0
17122 14949 14958 0
17122 14949 14960 0
c (((aux1189 + aux1192 + aux1193)<=1)=tv=SATLiteral(17123))
-17123 14987 0
-17123 14981 14986 0
-17123 14982 0
-17123 14984 0
-17123 14972 14986 0
-17123 14972 14981 0
-17123 14972 14982 0
-17123 14972 14984 0
-17123 14973 0
-17123 14973 14981 0
-17123 14973 14982 0
-17123 14973 14984 0
17123 -14973 -14981 -14986 0
17123 -14972 -14982 -14986 0
17123 -14972 -14981 -14987 0
c ((1<=(aux1189 + aux1192 + aux1193))=tv=SATLiteral(17124))
-17124 -14972 -14981 -14986 0
17124 14986 0
17124 14981 0
17124 14982 0
17124 14984 0
17124 14972 0
17124 14972 14981 0
17124 14972 14982 0
17124 14972 14984 0
17124 14973 0
17124 14973 14981 0
17124 14973 14982 0
17124 14973 14984 0
c (((aux1195 + aux1198 + aux1199)<=1)=tv=SATLiteral(17125))
-17125 15011 0
-17125 15005 15010 0
-17125 15006 0
-17125 15008 0
-17125 14996 15010 0
-17125 14996 15005 0
-17125 14996 15006 0
-17125 14996 15008 0
-17125 14997 0
-17125 14997 15005 0
-17125 14997 15006 0
-17125 14997 15008 0
17125 -14997 -15005 -15010 0
17125 -14996 -15006 -15010 0
17125 -14996 -15005 -15011 0
c ((1<=(aux1195 + aux1198 + aux1199))=tv=SATLiteral(17126))
-17126 -14996 -15005 -15010 0
17126 15010 0
17126 15005 0
17126 15006 0
17126 15008 0
17126 14996 0
17126 14996 15005 0
17126 14996 15006 0
17126 14996 15008 0
17126 14997 0
17126 14997 15005 0
17126 14997 15006 0
17126 14997 15008 0
c (((aux1201 + aux1204 + aux1205)<=1)=tv=SATLiteral(17127))
-17127 15035 0
-17127 15029 15034 0
-17127 15030 0
-17127 15032 0
-17127 15020 15034 0
-17127 15020 15029 0
-17127 15020 15030 0
-17127 15020 15032 0
-17127 15021 0
-17127 15021 15029 0
-17127 15021 15030 0
-17127 15021 15032 0
17127 -15021 -15029 -15034 0
17127 -15020 -15030 -15034 0
17127 -15020 -15029 -15035 0
c ((1<=(aux1201 + aux1204 + aux1205))=tv=SATLiteral(17128))
-17128 -15020 -15029 -15034 0
17128 15034 0
17128 15029 0
17128 15030 0
17128 15032 0
17128 15020 0
17128 15020 15029 0
17128 15020 15030 0
17128 15020 15032 0
17128 15021 0
17128 15021 15029 0
17128 15021 15030 0
17128 15021 15032 0
c (((aux1207 + aux1210 + aux1211)<=1)=tv=SATLiteral(17129))
-17129 15059 0
-17129 15053 15058 0
-17129 15054 0
-17129 15056 0
-17129 15044 15058 0
-17129 15044 15053 0
-17129 15044 15054 0
-17129 15044 15056 0
-17129 15045 0
-17129 15045 15053 0
-17129 15045 15054 0
-17129 15045 15056 0
17129 -15045 -15053 -15058 0
17129 -15044 -15054 -15058 0
17129 -15044 -15053 -15059 0
c ((1<=(aux1207 + aux1210 + aux1211))=tv=SATLiteral(17130))
-17130 -15044 -15053 -15058 0
17130 15058 0
17130 15053 0
17130 15054 0
17130 15056 0
17130 15044 0
17130 15044 15053 0
17130 15044 15054 0
17130 15044 15056 0
17130 15045 0
17130 15045 15053 0
17130 15045 15054 0
17130 15045 15056 0
c (((aux1213 + aux1216 + aux1217)<=1)=tv=SATLiteral(17131))
-17131 15083 0
-17131 15077 15082 0
-17131 15078 0
-17131 15080 0
-17131 15068 15082 0
-17131 15068 15077 0
-17131 15068 15078 0
-17131 15068 15080 0
-17131 15069 0
-17131 15069 15077 0
-17131 15069 15078 0
-17131 15069 15080 0
17131 -15069 -15077 -15082 0
17131 -15068 -15078 -15082 0
17131 -15068 -15077 -15083 0
c ((1<=(aux1213 + aux1216 + aux1217))=tv=SATLiteral(17132))
-17132 -15068 -15077 -15082 0
17132 15082 0
17132 15077 0
17132 15078 0
17132 15080 0
17132 15068 0
17132 15068 15077 0
17132 15068 15078 0
17132 15068 15080 0
17132 15069 0
17132 15069 15077 0
17132 15069 15078 0
17132 15069 15080 0
c (((aux1219 + aux1222 + aux1223)<=1)=tv=SATLiteral(17133))
-17133 15107 0
-17133 15101 15106 0
-17133 15102 0
-17133 15104 0
-17133 15092 15106 0
-17133 15092 15101 0
-17133 15092 15102 0
-17133 15092 15104 0
-17133 15093 0
-17133 15093 15101 0
-17133 15093 15102 0
-17133 15093 15104 0
17133 -15093 -15101 -15106 0
17133 -15092 -15102 -15106 0
17133 -15092 -15101 -15107 0
c ((1<=(aux1219 + aux1222 + aux1223))=tv=SATLiteral(17134))
-17134 -15092 -15101 -15106 0
17134 15106 0
17134 15101 0
17134 15102 0
17134 15104 0
17134 15092 0
17134 15092 15101 0
17134 15092 15102 0
17134 15092 15104 0
17134 15093 0
17134 15093 15101 0
17134 15093 15102 0
17134 15093 15104 0
c (((aux1225 + aux1228 + aux1229)<=1)=tv=SATLiteral(17135))
-17135 15131 0
-17135 15125 15130 0
-17135 15126 0
-17135 15128 0
-17135 15116 15130 0
-17135 15116 15125 0
-17135 15116 15126 0
-17135 15116 15128 0
-17135 15117 0
-17135 15117 15125 0
-17135 15117 15126 0
-17135 15117 15128 0
17135 -15117 -15125 -15130 0
17135 -15116 -15126 -15130 0
17135 -15116 -15125 -15131 0
c ((1<=(aux1225 + aux1228 + aux1229))=tv=SATLiteral(17136))
-17136 -15116 -15125 -15130 0
17136 15130 0
17136 15125 0
17136 15126 0
17136 15128 0
17136 15116 0
17136 15116 15125 0
17136 15116 15126 0
17136 15116 15128 0
17136 15117 0
17136 15117 15125 0
17136 15117 15126 0
17136 15117 15128 0
c (((aux1231 + aux1234 + aux1235)<=1)=tv=SATLiteral(17137))
-17137 15155 0
-17137 15149 15154 0
-17137 15150 0
-17137 15152 0
-17137 15140 15154 0
-17137 15140 15149 0
-17137 15140 15150 0
-17137 15140 15152 0
-17137 15141 0
-17137 15141 15149 0
-17137 15141 15150 0
-17137 15141 15152 0
17137 -15141 -15149 -15154 0
17137 -15140 -15150 -15154 0
17137 -15140 -15149 -15155 0
c ((1<=(aux1231 + aux1234 + aux1235))=tv=SATLiteral(17138))
-17138 -15140 -15149 -15154 0
17138 15154 0
17138 15149 0
17138 15150 0
17138 15152 0
17138 15140 0
17138 15140 15149 0
17138 15140 15150 0
17138 15140 15152 0
17138 15141 0
17138 15141 15149 0
17138 15141 15150 0
17138 15141 15152 0
c (((aux1237 + aux1240 + aux1241)<=1)=tv=SATLiteral(17139))
-17139 15179 0
-17139 15173 15178 0
-17139 15174 0
-17139 15176 0
-17139 15164 15178 0
-17139 15164 15173 0
-17139 15164 15174 0
-17139 15164 15176 0
-17139 15165 0
-17139 15165 15173 0
-17139 15165 15174 0
-17139 15165 15176 0
17139 -15165 -15173 -15178 0
17139 -15164 -15174 -15178 0
17139 -15164 -15173 -15179 0
c ((1<=(aux1237 + aux1240 + aux1241))=tv=SATLiteral(17140))
-17140 -15164 -15173 -15178 0
17140 15178 0
17140 15173 0
17140 15174 0
17140 15176 0
17140 15164 0
17140 15164 15173 0
17140 15164 15174 0
17140 15164 15176 0
17140 15165 0
17140 15165 15173 0
17140 15165 15174 0
17140 15165 15176 0
c (((aux1243 + aux1246 + aux1247)<=1)=tv=SATLiteral(17141))
-17141 15203 0
-17141 15197 15202 0
-17141 15198 0
-17141 15200 0
-17141 15188 15202 0
-17141 15188 15197 0
-17141 15188 15198 0
-17141 15188 15200 0
-17141 15189 0
-17141 15189 15197 0
-17141 15189 15198 0
-17141 15189 15200 0
17141 -15189 -15197 -15202 0
17141 -15188 -15198 -15202 0
17141 -15188 -15197 -15203 0
c ((1<=(aux1243 + aux1246 + aux1247))=tv=SATLiteral(17142))
-17142 -15188 -15197 -15202 0
17142 15202 0
17142 15197 0
17142 15198 0
17142 15200 0
17142 15188 0
17142 15188 15197 0
17142 15188 15198 0
17142 15188 15200 0
17142 15189 0
17142 15189 15197 0
17142 15189 15198 0
17142 15189 15200 0
c (((aux1249 + aux1252 + aux1253)<=1)=tv=SATLiteral(17143))
-17143 15227 0
-17143 15221 15226 0
-17143 15222 0
-17143 15224 0
-17143 15212 15226 0
-17143 15212 15221 0
-17143 15212 15222 0
-17143 15212 15224 0
-17143 15213 0
-17143 15213 15221 0
-17143 15213 15222 0
-17143 15213 15224 0
17143 -15213 -15221 -15226 0
17143 -15212 -15222 -15226 0
17143 -15212 -15221 -15227 0
c ((1<=(aux1249 + aux1252 + aux1253))=tv=SATLiteral(17144))
-17144 -15212 -15221 -15226 0
17144 15226 0
17144 15221 0
17144 15222 0
17144 15224 0
17144 15212 0
17144 15212 15221 0
17144 15212 15222 0
17144 15212 15224 0
17144 15213 0
17144 15213 15221 0
17144 15213 15222 0
17144 15213 15224 0
c (((aux1255 + aux1258 + aux1259)<=1)=tv=SATLiteral(17145))
-17145 15251 0
-17145 15245 15250 0
-17145 15246 0
-17145 15248 0
-17145 15236 15250 0
-17145 15236 15245 0
-17145 15236 15246 0
-17145 15236 15248 0
-17145 15237 0
-17145 15237 15245 0
-17145 15237 15246 0
-17145 15237 15248 0
17145 -15237 -15245 -15250 0
17145 -15236 -15246 -15250 0
17145 -15236 -15245 -15251 0
c ((1<=(aux1255 + aux1258 + aux1259))=tv=SATLiteral(17146))
-17146 -15236 -15245 -15250 0
17146 15250 0
17146 15245 0
17146 15246 0
17146 15248 0
17146 15236 0
17146 15236 15245 0
17146 15236 15246 0
17146 15236 15248 0
17146 15237 0
17146 15237 15245 0
17146 15237 15246 0
17146 15237 15248 0
c (((aux1261 + aux1264 + aux1265)<=1)=tv=SATLiteral(17147))
-17147 15275 0
-17147 15269 15274 0
-17147 15270 0
-17147 15272 0
-17147 15260 15274 0
-17147 15260 15269 0
-17147 15260 15270 0
-17147 15260 15272 0
-17147 15261 0
-17147 15261 15269 0
-17147 15261 15270 0
-17147 15261 15272 0
17147 -15261 -15269 -15274 0
17147 -15260 -15270 -15274 0
17147 -15260 -15269 -15275 0
c ((1<=(aux1261 + aux1264 + aux1265))=tv=SATLiteral(17148))
-17148 -15260 -15269 -15274 0
17148 15274 0
17148 15269 0
17148 15270 0
17148 15272 0
17148 15260 0
17148 15260 15269 0
17148 15260 15270 0
17148 15260 15272 0
17148 15261 0
17148 15261 15269 0
17148 15261 15270 0
17148 15261 15272 0
c (((aux1267 + aux1270 + aux1271)<=1)=tv=SATLiteral(17149))
-17149 15299 0
-17149 15293 15298 0
-17149 15294 0
-17149 15296 0
-17149 15284 15298 0
-17149 15284 15293 0
-17149 15284 15294 0
-17149 15284 15296 0
-17149 15285 0
-17149 15285 15293 0
-17149 15285 15294 0
-17149 15285 15296 0
17149 -15285 -15293 -15298 0
17149 -15284 -15294 -15298 0
17149 -15284 -15293 -15299 0
c ((1<=(aux1267 + aux1270 + aux1271))=tv=SATLiteral(17150))
-17150 -15284 -15293 -15298 0
17150 15298 0
17150 15293 0
17150 15294 0
17150 15296 0
17150 15284 0
17150 15284 15293 0
17150 15284 15294 0
17150 15284 15296 0
17150 15285 0
17150 15285 15293 0
17150 15285 15294 0
17150 15285 15296 0
c (((aux1273 + aux1276 + aux1277)<=1)=tv=SATLiteral(17151))
-17151 15323 0
-17151 15317 15322 0
-17151 15318 0
-17151 15320 0
-17151 15308 15322 0
-17151 15308 15317 0
-17151 15308 15318 0
-17151 15308 15320 0
-17151 15309 0
-17151 15309 15317 0
-17151 15309 15318 0
-17151 15309 15320 0
17151 -15309 -15317 -15322 0
17151 -15308 -15318 -15322 0
17151 -15308 -15317 -15323 0
c ((1<=(aux1273 + aux1276 + aux1277))=tv=SATLiteral(17152))
-17152 -15308 -15317 -15322 0
17152 15322 0
17152 15317 0
17152 15318 0
17152 15320 0
17152 15308 0
17152 15308 15317 0
17152 15308 15318 0
17152 15308 15320 0
17152 15309 0
17152 15309 15317 0
17152 15309 15318 0
17152 15309 15320 0
c (((aux1279 + aux1282 + aux1283)<=1)=tv=SATLiteral(17153))
-17153 15347 0
-17153 15341 15346 0
-17153 15342 0
-17153 15344 0
-17153 15332 15346 0
-17153 15332 15341 0
-17153 15332 15342 0
-17153 15332 15344 0
-17153 15333 0
-17153 15333 15341 0
-17153 15333 15342 0
-17153 15333 15344 0
17153 -15333 -15341 -15346 0
17153 -15332 -15342 -15346 0
17153 -15332 -15341 -15347 0
c ((1<=(aux1279 + aux1282 + aux1283))=tv=SATLiteral(17154))
-17154 -15332 -15341 -15346 0
17154 15346 0
17154 15341 0
17154 15342 0
17154 15344 0
17154 15332 0
17154 15332 15341 0
17154 15332 15342 0
17154 15332 15344 0
17154 15333 0
17154 15333 15341 0
17154 15333 15342 0
17154 15333 15344 0
c (((aux1285 + aux1288 + aux1289)<=1)=tv=SATLiteral(17155))
-17155 15371 0
-17155 15365 15370 0
-17155 15366 0
-17155 15368 0
-17155 15356 15370 0
-17155 15356 15365 0
-17155 15356 15366 0
-17155 15356 15368 0
-17155 15357 0
-17155 15357 15365 0
-17155 15357 15366 0
-17155 15357 15368 0
17155 -15357 -15365 -15370 0
17155 -15356 -15366 -15370 0
17155 -15356 -15365 -15371 0
c ((1<=(aux1285 + aux1288 + aux1289))=tv=SATLiteral(17156))
-17156 -15356 -15365 -15370 0
17156 15370 0
17156 15365 0
17156 15366 0
17156 15368 0
17156 15356 0
17156 15356 15365 0
17156 15356 15366 0
17156 15356 15368 0
17156 15357 0
17156 15357 15365 0
17156 15357 15366 0
17156 15357 15368 0
c (((aux1291 + aux1294 + aux1295)<=1)=tv=SATLiteral(17157))
-17157 15395 0
-17157 15389 15394 0
-17157 15390 0
-17157 15392 0
-17157 15380 15394 0
-17157 15380 15389 0
-17157 15380 15390 0
-17157 15380 15392 0
-17157 15381 0
-17157 15381 15389 0
-17157 15381 15390 0
-17157 15381 15392 0
17157 -15381 -15389 -15394 0
17157 -15380 -15390 -15394 0
17157 -15380 -15389 -15395 0
c ((1<=(aux1291 + aux1294 + aux1295))=tv=SATLiteral(17158))
-17158 -15380 -15389 -15394 0
17158 15394 0
17158 15389 0
17158 15390 0
17158 15392 0
17158 15380 0
17158 15380 15389 0
17158 15380 15390 0
17158 15380 15392 0
17158 15381 0
17158 15381 15389 0
17158 15381 15390 0
17158 15381 15392 0
c (((aux1297 + aux1300 + aux1301)<=1)=tv=SATLiteral(17159))
-17159 15419 0
-17159 15413 15418 0
-17159 15414 0
-17159 15416 0
-17159 15404 15418 0
-17159 15404 15413 0
-17159 15404 15414 0
-17159 15404 15416 0
-17159 15405 0
-17159 15405 15413 0
-17159 15405 15414 0
-17159 15405 15416 0
17159 -15405 -15413 -15418 0
17159 -15404 -15414 -15418 0
17159 -15404 -15413 -15419 0
c ((1<=(aux1297 + aux1300 + aux1301))=tv=SATLiteral(17160))
-17160 -15404 -15413 -15418 0
17160 15418 0
17160 15413 0
17160 15414 0
17160 15416 0
17160 15404 0
17160 15404 15413 0
17160 15404 15414 0
17160 15404 15416 0
17160 15405 0
17160 15405 15413 0
17160 15405 15414 0
17160 15405 15416 0
c (((aux1303 + aux1306 + aux1307)<=1)=tv=SATLiteral(17161))
-17161 15443 0
-17161 15437 15442 0
-17161 15438 0
-17161 15440 0
-17161 15428 15442 0
-17161 15428 15437 0
-17161 15428 15438 0
-17161 15428 15440 0
-17161 15429 0
-17161 15429 15437 0
-17161 15429 15438 0
-17161 15429 15440 0
17161 -15429 -15437 -15442 0
17161 -15428 -15438 -15442 0
17161 -15428 -15437 -15443 0
c ((1<=(aux1303 + aux1306 + aux1307))=tv=SATLiteral(17162))
-17162 -15428 -15437 -15442 0
17162 15442 0
17162 15437 0
17162 15438 0
17162 15440 0
17162 15428 0
17162 15428 15437 0
17162 15428 15438 0
17162 15428 15440 0
17162 15429 0
17162 15429 15437 0
17162 15429 15438 0
17162 15429 15440 0
c (((aux1309 + aux1312 + aux1313)<=1)=tv=SATLiteral(17163))
-17163 15467 0
-17163 15461 15466 0
-17163 15462 0
-17163 15464 0
-17163 15452 15466 0
-17163 15452 15461 0
-17163 15452 15462 0
-17163 15452 15464 0
-17163 15453 0
-17163 15453 15461 0
-17163 15453 15462 0
-17163 15453 15464 0
17163 -15453 -15461 -15466 0
17163 -15452 -15462 -15466 0
17163 -15452 -15461 -15467 0
c ((1<=(aux1309 + aux1312 + aux1313))=tv=SATLiteral(17164))
-17164 -15452 -15461 -15466 0
17164 15466 0
17164 15461 0
17164 15462 0
17164 15464 0
17164 15452 0
17164 15452 15461 0
17164 15452 15462 0
17164 15452 15464 0
17164 15453 0
17164 15453 15461 0
17164 15453 15462 0
17164 15453 15464 0
c (((aux1315 + aux1318 + aux1319)<=1)=tv=SATLiteral(17165))
-17165 15491 0
-17165 15485 15490 0
-17165 15486 0
-17165 15488 0
-17165 15476 15490 0
-17165 15476 15485 0
-17165 15476 15486 0
-17165 15476 15488 0
-17165 15477 0
-17165 15477 15485 0
-17165 15477 15486 0
-17165 15477 15488 0
17165 -15477 -15485 -15490 0
17165 -15476 -15486 -15490 0
17165 -15476 -15485 -15491 0
c ((1<=(aux1315 + aux1318 + aux1319))=tv=SATLiteral(17166))
-17166 -15476 -15485 -15490 0
17166 15490 0
17166 15485 0
17166 15486 0
17166 15488 0
17166 15476 0
17166 15476 15485 0
17166 15476 15486 0
17166 15476 15488 0
17166 15477 0
17166 15477 15485 0
17166 15477 15486 0
17166 15477 15488 0
c (((aux1321 + aux1324 + aux1325)<=1)=tv=SATLiteral(17167))
-17167 15515 0
-17167 15509 15514 0
-17167 15510 0
-17167 15512 0
-17167 15500 15514 0
-17167 15500 15509 0
-17167 15500 15510 0
-17167 15500 15512 0
-17167 15501 0
-17167 15501 15509 0
-17167 15501 15510 0
-17167 15501 15512 0
17167 -15501 -15509 -15514 0
17167 -15500 -15510 -15514 0
17167 -15500 -15509 -15515 0
c ((1<=(aux1321 + aux1324 + aux1325))=tv=SATLiteral(17168))
-17168 -15500 -15509 -15514 0
17168 15514 0
17168 15509 0
17168 15510 0
17168 15512 0
17168 15500 0
17168 15500 15509 0
17168 15500 15510 0
17168 15500 15512 0
17168 15501 0
17168 15501 15509 0
17168 15501 15510 0
17168 15501 15512 0
c (((aux1327 + aux1330 + aux1331)<=1)=tv=SATLiteral(17169))
-17169 15539 0
-17169 15533 15538 0
-17169 15534 0
-17169 15536 0
-17169 15524 15538 0
-17169 15524 15533 0
-17169 15524 15534 0
-17169 15524 15536 0
-17169 15525 0
-17169 15525 15533 0
-17169 15525 15534 0
-17169 15525 15536 0
17169 -15525 -15533 -15538 0
17169 -15524 -15534 -15538 0
17169 -15524 -15533 -15539 0
c ((1<=(aux1327 + aux1330 + aux1331))=tv=SATLiteral(17170))
-17170 -15524 -15533 -15538 0
17170 15538 0
17170 15533 0
17170 15534 0
17170 15536 0
17170 15524 0
17170 15524 15533 0
17170 15524 15534 0
17170 15524 15536 0
17170 15525 0
17170 15525 15533 0
17170 15525 15534 0
17170 15525 15536 0
c (((aux1333 + aux1336 + aux1337)<=1)=tv=SATLiteral(17171))
-17171 15563 0
-17171 15557 15562 0
-17171 15558 0
-17171 15560 0
-17171 15548 15562 0
-17171 15548 15557 0
-17171 15548 15558 0
-17171 15548 15560 0
-17171 15549 0
-17171 15549 15557 0
-17171 15549 15558 0
-17171 15549 15560 0
17171 -15549 -15557 -15562 0
17171 -15548 -15558 -15562 0
17171 -15548 -15557 -15563 0
c ((1<=(aux1333 + aux1336 + aux1337))=tv=SATLiteral(17172))
-17172 -15548 -15557 -15562 0
17172 15562 0
17172 15557 0
17172 15558 0
17172 15560 0
17172 15548 0
17172 15548 15557 0
17172 15548 15558 0
17172 15548 15560 0
17172 15549 0
17172 15549 15557 0
17172 15549 15558 0
17172 15549 15560 0
c (((aux1339 + aux1342 + aux1343)<=1)=tv=SATLiteral(17173))
-17173 15587 0
-17173 15581 15586 0
-17173 15582 0
-17173 15584 0
-17173 15572 15586 0
-17173 15572 15581 0
-17173 15572 15582 0
-17173 15572 15584 0
-17173 15573 0
-17173 15573 15581 0
-17173 15573 15582 0
-17173 15573 15584 0
17173 -15573 -15581 -15586 0
17173 -15572 -15582 -15586 0
17173 -15572 -15581 -15587 0
c ((1<=(aux1339 + aux1342 + aux1343))=tv=SATLiteral(17174))
-17174 -15572 -15581 -15586 0
17174 15586 0
17174 15581 0
17174 15582 0
17174 15584 0
17174 15572 0
17174 15572 15581 0
17174 15572 15582 0
17174 15572 15584 0
17174 15573 0
17174 15573 15581 0
17174 15573 15582 0
17174 15573 15584 0
c (((aux1345 + aux1348 + aux1349)<=1)=tv=SATLiteral(17175))
-17175 15611 0
-17175 15605 15610 0
-17175 15606 0
-17175 15608 0
-17175 15596 15610 0
-17175 15596 15605 0
-17175 15596 15606 0
-17175 15596 15608 0
-17175 15597 0
-17175 15597 15605 0
-17175 15597 15606 0
-17175 15597 15608 0
17175 -15597 -15605 -15610 0
17175 -15596 -15606 -15610 0
17175 -15596 -15605 -15611 0
c ((1<=(aux1345 + aux1348 + aux1349))=tv=SATLiteral(17176))
-17176 -15596 -15605 -15610 0
17176 15610 0
17176 15605 0
17176 15606 0
17176 15608 0
17176 15596 0
17176 15596 15605 0
17176 15596 15606 0
17176 15596 15608 0
17176 15597 0
17176 15597 15605 0
17176 15597 15606 0
17176 15597 15608 0
c (((aux1351 + aux1354 + aux1355)<=1)=tv=SATLiteral(17177))
-17177 15635 0
-17177 15629 15634 0
-17177 15630 0
-17177 15632 0
-17177 15620 15634 0
-17177 15620 15629 0
-17177 15620 15630 0
-17177 15620 15632 0
-17177 15621 0
-17177 15621 15629 0
-17177 15621 15630 0
-17177 15621 15632 0
17177 -15621 -15629 -15634 0
17177 -15620 -15630 -15634 0
17177 -15620 -15629 -15635 0
c ((1<=(aux1351 + aux1354 + aux1355))=tv=SATLiteral(17178))
-17178 -15620 -15629 -15634 0
17178 15634 0
17178 15629 0
17178 15630 0
17178 15632 0
17178 15620 0
17178 15620 15629 0
17178 15620 15630 0
17178 15620 15632 0
17178 15621 0
17178 15621 15629 0
17178 15621 15630 0
17178 15621 15632 0
c (((aux1357 + aux1360 + aux1361)<=1)=tv=SATLiteral(17179))
-17179 15659 0
-17179 15653 15658 0
-17179 15654 0
-17179 15656 0
-17179 15644 15658 0
-17179 15644 15653 0
-17179 15644 15654 0
-17179 15644 15656 0
-17179 15645 0
-17179 15645 15653 0
-17179 15645 15654 0
-17179 15645 15656 0
17179 -15645 -15653 -15658 0
17179 -15644 -15654 -15658 0
17179 -15644 -15653 -15659 0
c ((1<=(aux1357 + aux1360 + aux1361))=tv=SATLiteral(17180))
-17180 -15644 -15653 -15658 0
17180 15658 0
17180 15653 0
17180 15654 0
17180 15656 0
17180 15644 0
17180 15644 15653 0
17180 15644 15654 0
17180 15644 15656 0
17180 15645 0
17180 15645 15653 0
17180 15645 15654 0
17180 15645 15656 0
c (((aux1363 + aux1366 + aux1367)<=1)=tv=SATLiteral(17181))
-17181 15683 0
-17181 15677 15682 0
-17181 15678 0
-17181 15680 0
-17181 15668 15682 0
-17181 15668 15677 0
-17181 15668 15678 0
-17181 15668 15680 0
-17181 15669 0
-17181 15669 15677 0
-17181 15669 15678 0
-17181 15669 15680 0
17181 -15669 -15677 -15682 0
17181 -15668 -15678 -15682 0
17181 -15668 -15677 -15683 0
c ((1<=(aux1363 + aux1366 + aux1367))=tv=SATLiteral(17182))
-17182 -15668 -15677 -15682 0
17182 15682 0
17182 15677 0
17182 15678 0
17182 15680 0
17182 15668 0
17182 15668 15677 0
17182 15668 15678 0
17182 15668 15680 0
17182 15669 0
17182 15669 15677 0
17182 15669 15678 0
17182 15669 15680 0
c (((aux1369 + aux1372 + aux1373)<=1)=tv=SATLiteral(17183))
-17183 15707 0
-17183 15701 15706 0
-17183 15702 0
-17183 15704 0
-17183 15692 15706 0
-17183 15692 15701 0
-17183 15692 15702 0
-17183 15692 15704 0
-17183 15693 0
-17183 15693 15701 0
-17183 15693 15702 0
-17183 15693 15704 0
17183 -15693 -15701 -15706 0
17183 -15692 -15702 -15706 0
17183 -15692 -15701 -15707 0
c ((1<=(aux1369 + aux1372 + aux1373))=tv=SATLiteral(17184))
-17184 -15692 -15701 -15706 0
17184 15706 0
17184 15701 0
17184 15702 0
17184 15704 0
17184 15692 0
17184 15692 15701 0
17184 15692 15702 0
17184 15692 15704 0
17184 15693 0
17184 15693 15701 0
17184 15693 15702 0
17184 15693 15704 0
c (((aux1375 + aux1378 + aux1379)<=1)=tv=SATLiteral(17185))
-17185 15731 0
-17185 15725 15730 0
-17185 15726 0
-17185 15728 0
-17185 15716 15730 0
-17185 15716 15725 0
-17185 15716 15726 0
-17185 15716 15728 0
-17185 15717 0
-17185 15717 15725 0
-17185 15717 15726 0
-17185 15717 15728 0
17185 -15717 -15725 -15730 0
17185 -15716 -15726 -15730 0
17185 -15716 -15725 -15731 0
c ((1<=(aux1375 + aux1378 + aux1379))=tv=SATLiteral(17186))
-17186 -15716 -15725 -15730 0
17186 15730 0
17186 15725 0
17186 15726 0
17186 15728 0
17186 15716 0
17186 15716 15725 0
17186 15716 15726 0
17186 15716 15728 0
17186 15717 0
17186 15717 15725 0
17186 15717 15726 0
17186 15717 15728 0
c (((aux1381 + aux1384 + aux1385)<=1)=tv=SATLiteral(17187))
-17187 15755 0
-17187 15749 15754 0
-17187 15750 0
-17187 15752 0
-17187 15740 15754 0
-17187 15740 15749 0
-17187 15740 15750 0
-17187 15740 15752 0
-17187 15741 0
-17187 15741 15749 0
-17187 15741 15750 0
-17187 15741 15752 0
17187 -15741 -15749 -15754 0
17187 -15740 -15750 -15754 0
17187 -15740 -15749 -15755 0
c ((1<=(aux1381 + aux1384 + aux1385))=tv=SATLiteral(17188))
-17188 -15740 -15749 -15754 0
17188 15754 0
17188 15749 0
17188 15750 0
17188 15752 0
17188 15740 0
17188 15740 15749 0
17188 15740 15750 0
17188 15740 15752 0
17188 15741 0
17188 15741 15749 0
17188 15741 15750 0
17188 15741 15752 0
c (((aux1387 + aux1390 + aux1391)<=1)=tv=SATLiteral(17189))
-17189 15779 0
-17189 15773 15778 0
-17189 15774 0
-17189 15776 0
-17189 15764 15778 0
-17189 15764 15773 0
-17189 15764 15774 0
-17189 15764 15776 0
-17189 15765 0
-17189 15765 15773 0
-17189 15765 15774 0
-17189 15765 15776 0
17189 -15765 -15773 -15778 0
17189 -15764 -15774 -15778 0
17189 -15764 -15773 -15779 0
c ((1<=(aux1387 + aux1390 + aux1391))=tv=SATLiteral(17190))
-17190 -15764 -15773 -15778 0
17190 15778 0
17190 15773 0
17190 15774 0
17190 15776 0
17190 15764 0
17190 15764 15773 0
17190 15764 15774 0
17190 15764 15776 0
17190 15765 0
17190 15765 15773 0
17190 15765 15774 0
17190 15765 15776 0
c (((aux1393 + aux1396 + aux1397)<=1)=tv=SATLiteral(17191))
-17191 15803 0
-17191 15797 15802 0
-17191 15798 0
-17191 15800 0
-17191 15788 15802 0
-17191 15788 15797 0
-17191 15788 15798 0
-17191 15788 15800 0
-17191 15789 0
-17191 15789 15797 0
-17191 15789 15798 0
-17191 15789 15800 0
17191 -15789 -15797 -15802 0
17191 -15788 -15798 -15802 0
17191 -15788 -15797 -15803 0
c ((1<=(aux1393 + aux1396 + aux1397))=tv=SATLiteral(17192))
-17192 -15788 -15797 -15802 0
17192 15802 0
17192 15797 0
17192 15798 0
17192 15800 0
17192 15788 0
17192 15788 15797 0
17192 15788 15798 0
17192 15788 15800 0
17192 15789 0
17192 15789 15797 0
17192 15789 15798 0
17192 15789 15800 0
c (((aux1399 + aux1402 + aux1403)<=1)=tv=SATLiteral(17193))
-17193 15827 0
-17193 15821 15826 0
-17193 15822 0
-17193 15824 0
-17193 15812 15826 0
-17193 15812 15821 0
-17193 15812 15822 0
-17193 15812 15824 0
-17193 15813 0
-17193 15813 15821 0
-17193 15813 15822 0
-17193 15813 15824 0
17193 -15813 -15821 -15826 0
17193 -15812 -15822 -15826 0
17193 -15812 -15821 -15827 0
c ((1<=(aux1399 + aux1402 + aux1403))=tv=SATLiteral(17194))
-17194 -15812 -15821 -15826 0
17194 15826 0
17194 15821 0
17194 15822 0
17194 15824 0
17194 15812 0
17194 15812 15821 0
17194 15812 15822 0
17194 15812 15824 0
17194 15813 0
17194 15813 15821 0
17194 15813 15822 0
17194 15813 15824 0
c (((aux1405 + aux1408 + aux1409)<=1)=tv=SATLiteral(17195))
-17195 15851 0
-17195 15845 15850 0
-17195 15846 0
-17195 15848 0
-17195 15836 15850 0
-17195 15836 15845 0
-17195 15836 15846 0
-17195 15836 15848 0
-17195 15837 0
-17195 15837 15845 0
-17195 15837 15846 0
-17195 15837 15848 0
17195 -15837 -15845 -15850 0
17195 -15836 -15846 -15850 0
17195 -15836 -15845 -15851 0
c ((1<=(aux1405 + aux1408 + aux1409))=tv=SATLiteral(17196))
-17196 -15836 -15845 -15850 0
17196 15850 0
17196 15845 0
17196 15846 0
17196 15848 0
17196 15836 0
17196 15836 15845 0
17196 15836 15846 0
17196 15836 15848 0
17196 15837 0
17196 15837 15845 0
17196 15837 15846 0
17196 15837 15848 0
c (((aux1411 + aux1414 + aux1415)<=1)=tv=SATLiteral(17197))
-17197 15875 0
-17197 15869 15874 0
-17197 15870 0
-17197 15872 0
-17197 15860 15874 0
-17197 15860 15869 0
-17197 15860 15870 0
-17197 15860 15872 0
-17197 15861 0
-17197 15861 15869 0
-17197 15861 15870 0
-17197 15861 15872 0
17197 -15861 -15869 -15874 0
17197 -15860 -15870 -15874 0
17197 -15860 -15869 -15875 0
c ((1<=(aux1411 + aux1414 + aux1415))=tv=SATLiteral(17198))
-17198 -15860 -15869 -15874 0
17198 15874 0
17198 15869 0
17198 15870 0
17198 15872 0
17198 15860 0
17198 15860 15869 0
17198 15860 15870 0
17198 15860 15872 0
17198 15861 0
17198 15861 15869 0
17198 15861 15870 0
17198 15861 15872 0
c (((aux1417 + aux1420 + aux1421)<=1)=tv=SATLiteral(17199))
-17199 15899 0
-17199 15893 15898 0
-17199 15894 0
-17199 15896 0
-17199 15884 15898 0
-17199 15884 15893 0
-17199 15884 15894 0
-17199 15884 15896 0
-17199 15885 0
-17199 15885 15893 0
-17199 15885 15894 0
-17199 15885 15896 0
17199 -15885 -15893 -15898 0
17199 -15884 -15894 -15898 0
17199 -15884 -15893 -15899 0
c ((1<=(aux1417 + aux1420 + aux1421))=tv=SATLiteral(17200))
-17200 -15884 -15893 -15898 0
17200 15898 0
17200 15893 0
17200 15894 0
17200 15896 0
17200 15884 0
17200 15884 15893 0
17200 15884 15894 0
17200 15884 15896 0
17200 15885 0
17200 15885 15893 0
17200 15885 15894 0
17200 15885 15896 0
c ((max_left_00001_00001_00001=max_left_00001_00001_00002)=tv=SATLiteral(17201))
-1272 1287 -17201 0
-1274 1289 -17201 0
-1276 1291 -17201 0
-1278 1293 -17201 0
-1280 1295 -17201 0
-1282 1297 -17201 0
-1284 1299 -17201 0
-1286 1301 -17201 0
1285 -1300 -17201 0
-1287 1272 -17201 0
-1289 1274 -17201 0
-1291 1276 -17201 0
-1293 1278 -17201 0
-1295 1280 -17201 0
-1297 1282 -17201 0
-1299 1284 -17201 0
-1301 1286 -17201 0
1300 -1285 -17201 0
-1272 -1287 17201 0
-1274 -1289 17201 0
-1276 -1291 17201 0
-1278 -1293 17201 0
-1280 -1295 17201 0
-1282 -1297 17201 0
-1284 -1299 17201 0
-1286 -1301 17201 0
1285 1300 17201 0
c ((variant_fields_00001_00001_00002=max_left_00001_00001_00002)=tv=SATLiteral(17202))
-6722 1287 -17202 0
-6724 1289 -17202 0
-6726 1291 -17202 0
-6728 1293 -17202 0
-6730 1295 -17202 0
-6732 1297 -17202 0
-6734 1299 -17202 0
-6736 1301 -17202 0
6735 -1300 -17202 0
-1287 6722 -17202 0
-1289 6724 -17202 0
-1291 6726 -17202 0
-1293 6728 -17202 0
-1295 6730 -17202 0
-1297 6732 -17202 0
-1299 6734 -17202 0
-1301 6736 -17202 0
1300 -6735 -17202 0
-6722 -1287 17202 0
-6724 -1289 17202 0
-6726 -1291 17202 0
-6728 -1293 17202 0
-6730 -1295 17202 0
-6732 -1297 17202 0
-6734 -1299 17202 0
-6736 -1301 17202 0
6735 1300 17202 0
c ((max_left_00001_00001_00002=max_left_00001_00001_00003)=tv=SATLiteral(17203))
-1287 1302 -17203 0
-1289 1304 -17203 0
-1291 1306 -17203 0
-1293 1308 -17203 0
-1295 1310 -17203 0
-1297 1312 -17203 0
-1299 1314 -17203 0
-1301 1316 -17203 0
1300 -1315 -17203 0
-1302 1287 -17203 0
-1304 1289 -17203 0
-1306 1291 -17203 0
-1308 1293 -17203 0
-1310 1295 -17203 0
-1312 1297 -17203 0
-1314 1299 -17203 0
-1316 1301 -17203 0
1315 -1300 -17203 0
-1287 -1302 17203 0
-1289 -1304 17203 0
-1291 -1306 17203 0
-1293 -1308 17203 0
-1295 -1310 17203 0
-1297 -1312 17203 0
-1299 -1314 17203 0
-1301 -1316 17203 0
1300 1315 17203 0
c ((variant_fields_00001_00001_00003=max_left_00001_00001_00003)=tv=SATLiteral(17204))
-6737 1302 -17204 0
-6739 1304 -17204 0
-6741 1306 -17204 0
-6743 1308 -17204 0
-6745 1310 -17204 0
-6747 1312 -17204 0
-6749 1314 -17204 0
-6751 1316 -17204 0
6750 -1315 -17204 0
-1302 6737 -17204 0
-1304 6739 -17204 0
-1306 6741 -17204 0
-1308 6743 -17204 0
-1310 6745 -17204 0
-1312 6747 -17204 0
-1314 6749 -17204 0
-1316 6751 -17204 0
1315 -6750 -17204 0
-6737 -1302 17204 0
-6739 -1304 17204 0
-6741 -1306 17204 0
-6743 -1308 17204 0
-6745 -1310 17204 0
-6747 -1312 17204 0
-6749 -1314 17204 0
-6751 -1316 17204 0
6750 1315 17204 0
c ((max_left_00001_00001_00003=max_left_00001_00001_00004)=tv=SATLiteral(17205))
-1302 1317 -17205 0
-1304 1319 -17205 0
-1306 1321 -17205 0
-1308 1323 -17205 0
-1310 1325 -17205 0
-1312 1327 -17205 0
-1314 1329 -17205 0
-1316 1331 -17205 0
1315 -1330 -17205 0
-1317 1302 -17205 0
-1319 1304 -17205 0
-1321 1306 -17205 0
-1323 1308 -17205 0
-1325 1310 -17205 0
-1327 1312 -17205 0
-1329 1314 -17205 0
-1331 1316 -17205 0
1330 -1315 -17205 0
-1302 -1317 17205 0
-1304 -1319 17205 0
-1306 -1321 17205 0
-1308 -1323 17205 0
-1310 -1325 17205 0
-1312 -1327 17205 0
-1314 -1329 17205 0
-1316 -1331 17205 0
1315 1330 17205 0
c ((variant_fields_00001_00001_00004=max_left_00001_00001_00004)=tv=SATLiteral(17206))
-6752 1317 -17206 0
-6754 1319 -17206 0
-6756 1321 -17206 0
-6758 1323 -17206 0
-6760 1325 -17206 0
-6762 1327 -17206 0
-6764 1329 -17206 0
-6766 1331 -17206 0
6765 -1330 -17206 0
-1317 6752 -17206 0
-1319 6754 -17206 0
-1321 6756 -17206 0
-1323 6758 -17206 0
-1325 6760 -17206 0
-1327 6762 -17206 0
-1329 6764 -17206 0
-1331 6766 -17206 0
1330 -6765 -17206 0
-6752 -1317 17206 0
-6754 -1319 17206 0
-6756 -1321 17206 0
-6758 -1323 17206 0
-6760 -1325 17206 0
-6762 -1327 17206 0
-6764 -1329 17206 0
-6766 -1331 17206 0
6765 1330 17206 0
c ((max_left_00001_00001_00004=max_left_00001_00001_00005)=tv=SATLiteral(17207))
-1317 1332 -17207 0
-1319 1334 -17207 0
-1321 1336 -17207 0
-1323 1338 -17207 0
-1325 1340 -17207 0
-1327 1342 -17207 0
-1329 1344 -17207 0
-1331 1346 -17207 0
1330 -1345 -17207 0
-1332 1317 -17207 0
-1334 1319 -17207 0
-1336 1321 -17207 0
-1338 1323 -17207 0
-1340 1325 -17207 0
-1342 1327 -17207 0
-1344 1329 -17207 0
-1346 1331 -17207 0
1345 -1330 -17207 0
-1317 -1332 17207 0
-1319 -1334 17207 0
-1321 -1336 17207 0
-1323 -1338 17207 0
-1325 -1340 17207 0
-1327 -1342 17207 0
-1329 -1344 17207 0
-1331 -1346 17207 0
1330 1345 17207 0
c ((variant_fields_00001_00001_00005=max_left_00001_00001_00005)=tv=SATLiteral(17208))
-6767 1332 -17208 0
-6769 1334 -17208 0
-6771 1336 -17208 0
-6773 1338 -17208 0
-6775 1340 -17208 0
-6777 1342 -17208 0
-6779 1344 -17208 0
-6781 1346 -17208 0
6780 -1345 -17208 0
-1332 6767 -17208 0
-1334 6769 -17208 0
-1336 6771 -17208 0
-1338 6773 -17208 0
-1340 6775 -17208 0
-1342 6777 -17208 0
-1344 6779 -17208 0
-1346 6781 -17208 0
1345 -6780 -17208 0
-6767 -1332 17208 0
-6769 -1334 17208 0
-6771 -1336 17208 0
-6773 -1338 17208 0
-6775 -1340 17208 0
-6777 -1342 17208 0
-6779 -1344 17208 0
-6781 -1346 17208 0
6780 1345 17208 0
c ((max_left_00001_00001_00005=max_left_00001_00001_00006)=tv=SATLiteral(17209))
-1332 1347 -17209 0
-1334 1349 -17209 0
-1336 1351 -17209 0
-1338 1353 -17209 0
-1340 1355 -17209 0
-1342 1357 -17209 0
-1344 1359 -17209 0
-1346 1361 -17209 0
1345 -1360 -17209 0
-1347 1332 -17209 0
-1349 1334 -17209 0
-1351 1336 -17209 0
-1353 1338 -17209 0
-1355 1340 -17209 0
-1357 1342 -17209 0
-1359 1344 -17209 0
-1361 1346 -17209 0
1360 -1345 -17209 0
-1332 -1347 17209 0
-1334 -1349 17209 0
-1336 -1351 17209 0
-1338 -1353 17209 0
-1340 -1355 17209 0
-1342 -1357 17209 0
-1344 -1359 17209 0
-1346 -1361 17209 0
1345 1360 17209 0
c ((variant_fields_00001_00001_00006=max_left_00001_00001_00006)=tv=SATLiteral(17210))
-6782 1347 -17210 0
-6784 1349 -17210 0
-6786 1351 -17210 0
-6788 1353 -17210 0
-6790 1355 -17210 0
-6792 1357 -17210 0
-6794 1359 -17210 0
-6796 1361 -17210 0
6795 -1360 -17210 0
-1347 6782 -17210 0
-1349 6784 -17210 0
-1351 6786 -17210 0
-1353 6788 -17210 0
-1355 6790 -17210 0
-1357 6792 -17210 0
-1359 6794 -17210 0
-1361 6796 -17210 0
1360 -6795 -17210 0
-6782 -1347 17210 0
-6784 -1349 17210 0
-6786 -1351 17210 0
-6788 -1353 17210 0
-6790 -1355 17210 0
-6792 -1357 17210 0
-6794 -1359 17210 0
-6796 -1361 17210 0
6795 1360 17210 0
c ((max_left_00001_00001_00006=max_left_00001_00001_00007)=tv=SATLiteral(17211))
-1347 1362 -17211 0
-1349 1364 -17211 0
-1351 1366 -17211 0
-1353 1368 -17211 0
-1355 1370 -17211 0
-1357 1372 -17211 0
-1359 1374 -17211 0
-1361 1376 -17211 0
1360 -1375 -17211 0
-1362 1347 -17211 0
-1364 1349 -17211 0
-1366 1351 -17211 0
-1368 1353 -17211 0
-1370 1355 -17211 0
-1372 1357 -17211 0
-1374 1359 -17211 0
-1376 1361 -17211 0
1375 -1360 -17211 0
-1347 -1362 17211 0
-1349 -1364 17211 0
-1351 -1366 17211 0
-1353 -1368 17211 0
-1355 -1370 17211 0
-1357 -1372 17211 0
-1359 -1374 17211 0
-1361 -1376 17211 0
1360 1375 17211 0
c ((variant_fields_00001_00001_00007=max_left_00001_00001_00007)=tv=SATLiteral(17212))
-6797 1362 -17212 0
-6799 1364 -17212 0
-6801 1366 -17212 0
-6803 1368 -17212 0
-6805 1370 -17212 0
-6807 1372 -17212 0
-6809 1374 -17212 0
-6811 1376 -17212 0
6810 -1375 -17212 0
-1362 6797 -17212 0
-1364 6799 -17212 0
-1366 6801 -17212 0
-1368 6803 -17212 0
-1370 6805 -17212 0
-1372 6807 -17212 0
-1374 6809 -17212 0
-1376 6811 -17212 0
1375 -6810 -17212 0
-6797 -1362 17212 0
-6799 -1364 17212 0
-6801 -1366 17212 0
-6803 -1368 17212 0
-6805 -1370 17212 0
-6807 -1372 17212 0
-6809 -1374 17212 0
-6811 -1376 17212 0
6810 1375 17212 0
c ((max_left_00001_00001_00007=max_left_00001_00001_00008)=tv=SATLiteral(17213))
-1362 1377 -17213 0
-1364 1379 -17213 0
-1366 1381 -17213 0
-1368 1383 -17213 0
-1370 1385 -17213 0
-1372 1387 -17213 0
-1374 1389 -17213 0
-1376 1391 -17213 0
1375 -1390 -17213 0
-1377 1362 -17213 0
-1379 1364 -17213 0
-1381 1366 -17213 0
-1383 1368 -17213 0
-1385 1370 -17213 0
-1387 1372 -17213 0
-1389 1374 -17213 0
-1391 1376 -17213 0
1390 -1375 -17213 0
-1362 -1377 17213 0
-1364 -1379 17213 0
-1366 -1381 17213 0
-1368 -1383 17213 0
-1370 -1385 17213 0
-1372 -1387 17213 0
-1374 -1389 17213 0
-1376 -1391 17213 0
1375 1390 17213 0
c ((variant_fields_00001_00001_00008=max_left_00001_00001_00008)=tv=SATLiteral(17214))
-6812 1377 -17214 0
-6814 1379 -17214 0
-6816 1381 -17214 0
-6818 1383 -17214 0
-6820 1385 -17214 0
-6822 1387 -17214 0
-6824 1389 -17214 0
-6826 1391 -17214 0
6825 -1390 -17214 0
-1377 6812 -17214 0
-1379 6814 -17214 0
-1381 6816 -17214 0
-1383 6818 -17214 0
-1385 6820 -17214 0
-1387 6822 -17214 0
-1389 6824 -17214 0
-1391 6826 -17214 0
1390 -6825 -17214 0
-6812 -1377 17214 0
-6814 -1379 17214 0
-6816 -1381 17214 0
-6818 -1383 17214 0
-6820 -1385 17214 0
-6822 -1387 17214 0
-6824 -1389 17214 0
-6826 -1391 17214 0
6825 1390 17214 0
c ((max_left_00001_00001_00008=max_left_00001_00001_00009)=tv=SATLiteral(17215))
-1377 1392 -17215 0
-1379 1394 -17215 0
-1381 1396 -17215 0
-1383 1398 -17215 0
-1385 1400 -17215 0
-1387 1402 -17215 0
-1389 1404 -17215 0
-1391 1406 -17215 0
1390 -1405 -17215 0
-1392 1377 -17215 0
-1394 1379 -17215 0
-1396 1381 -17215 0
-1398 1383 -17215 0
-1400 1385 -17215 0
-1402 1387 -17215 0
-1404 1389 -17215 0
-1406 1391 -17215 0
1405 -1390 -17215 0
-1377 -1392 17215 0
-1379 -1394 17215 0
-1381 -1396 17215 0
-1383 -1398 17215 0
-1385 -1400 17215 0
-1387 -1402 17215 0
-1389 -1404 17215 0
-1391 -1406 17215 0
1390 1405 17215 0
c ((variant_fields_00001_00001_00009=max_left_00001_00001_00009)=tv=SATLiteral(17216))
-6827 1392 -17216 0
-6829 1394 -17216 0
-6831 1396 -17216 0
-6833 1398 -17216 0
-6835 1400 -17216 0
-6837 1402 -17216 0
-6839 1404 -17216 0
-6841 1406 -17216 0
6840 -1405 -17216 0
-1392 6827 -17216 0
-1394 6829 -17216 0
-1396 6831 -17216 0
-1398 6833 -17216 0
-1400 6835 -17216 0
-1402 6837 -17216 0
-1404 6839 -17216 0
-1406 6841 -17216 0
1405 -6840 -17216 0
-6827 -1392 17216 0
-6829 -1394 17216 0
-6831 -1396 17216 0
-6833 -1398 17216 0
-6835 -1400 17216 0
-6837 -1402 17216 0
-6839 -1404 17216 0
-6841 -1406 17216 0
6840 1405 17216 0
c ((max_left_00001_00002_00001=max_left_00001_00002_00002)=tv=SATLiteral(17217))
-1408 1423 -17217 0
-1410 1425 -17217 0
-1412 1427 -17217 0
-1414 1429 -17217 0
-1416 1431 -17217 0
-1418 1433 -17217 0
-1420 1435 -17217 0
-1422 1437 -17217 0
1421 -1436 -17217 0
-1423 1408 -17217 0
-1425 1410 -17217 0
-1427 1412 -17217 0
-1429 1414 -17217 0
-1431 1416 -17217 0
-1433 1418 -17217 0
-1435 1420 -17217 0
-1437 1422 -17217 0
1436 -1421 -17217 0
-1408 -1423 17217 0
-1410 -1425 17217 0
-1412 -1427 17217 0
-1414 -1429 17217 0
-1416 -1431 17217 0
-1418 -1433 17217 0
-1420 -1435 17217 0
-1422 -1437 17217 0
1421 1436 17217 0
c ((variant_fields_00001_00002_00002=max_left_00001_00002_00002)=tv=SATLiteral(17218))
-6857 1423 -17218 0
-6859 1425 -17218 0
-6861 1427 -17218 0
-6863 1429 -17218 0
-6865 1431 -17218 0
-6867 1433 -17218 0
-6869 1435 -17218 0
-6871 1437 -17218 0
6870 -1436 -17218 0
-1423 6857 -17218 0
-1425 6859 -17218 0
-1427 6861 -17218 0
-1429 6863 -17218 0
-1431 6865 -17218 0
-1433 6867 -17218 0
-1435 6869 -17218 0
-1437 6871 -17218 0
1436 -6870 -17218 0
-6857 -1423 17218 0
-6859 -1425 17218 0
-6861 -1427 17218 0
-6863 -1429 17218 0
-6865 -1431 17218 0
-6867 -1433 17218 0
-6869 -1435 17218 0
-6871 -1437 17218 0
6870 1436 17218 0
c ((max_left_00001_00002_00002=max_left_00001_00002_00003)=tv=SATLiteral(17219))
-1423 1438 -17219 0
-1425 1440 -17219 0
-1427 1442 -17219 0
-1429 1444 -17219 0
-1431 1446 -17219 0
-1433 1448 -17219 0
-1435 1450 -17219 0
-1437 1452 -17219 0
1436 -1451 -17219 0
-1438 1423 -17219 0
-1440 1425 -17219 0
-1442 1427 -17219 0
-1444 1429 -17219 0
-1446 1431 -17219 0
-1448 1433 -17219 0
-1450 1435 -17219 0
-1452 1437 -17219 0
1451 -1436 -17219 0
-1423 -1438 17219 0
-1425 -1440 17219 0
-1427 -1442 17219 0
-1429 -1444 17219 0
-1431 -1446 17219 0
-1433 -1448 17219 0
-1435 -1450 17219 0
-1437 -1452 17219 0
1436 1451 17219 0
c ((variant_fields_00001_00002_00003=max_left_00001_00002_00003)=tv=SATLiteral(17220))
-6872 1438 -17220 0
-6874 1440 -17220 0
-6876 1442 -17220 0
-6878 1444 -17220 0
-6880 1446 -17220 0
-6882 1448 -17220 0
-6884 1450 -17220 0
-6886 1452 -17220 0
6885 -1451 -17220 0
-1438 6872 -17220 0
-1440 6874 -17220 0
-1442 6876 -17220 0
-1444 6878 -17220 0
-1446 6880 -17220 0
-1448 6882 -17220 0
-1450 6884 -17220 0
-1452 6886 -17220 0
1451 -6885 -17220 0
-6872 -1438 17220 0
-6874 -1440 17220 0
-6876 -1442 17220 0
-6878 -1444 17220 0
-6880 -1446 17220 0
-6882 -1448 17220 0
-6884 -1450 17220 0
-6886 -1452 17220 0
6885 1451 17220 0
c ((max_left_00001_00002_00003=max_left_00001_00002_00004)=tv=SATLiteral(17221))
-1438 1453 -17221 0
-1440 1455 -17221 0
-1442 1457 -17221 0
-1444 1459 -17221 0
-1446 1461 -17221 0
-1448 1463 -17221 0
-1450 1465 -17221 0
-1452 1467 -17221 0
1451 -1466 -17221 0
-1453 1438 -17221 0
-1455 1440 -17221 0
-1457 1442 -17221 0
-1459 1444 -17221 0
-1461 1446 -17221 0
-1463 1448 -17221 0
-1465 1450 -17221 0
-1467 1452 -17221 0
1466 -1451 -17221 0
-1438 -1453 17221 0
-1440 -1455 17221 0
-1442 -1457 17221 0
-1444 -1459 17221 0
-1446 -1461 17221 0
-1448 -1463 17221 0
-1450 -1465 17221 0
-1452 -1467 17221 0
1451 1466 17221 0
c ((variant_fields_00001_00002_00004=max_left_00001_00002_00004)=tv=SATLiteral(17222))
-6887 1453 -17222 0
-6889 1455 -17222 0
-6891 1457 -17222 0
-6893 1459 -17222 0
-6895 1461 -17222 0
-6897 1463 -17222 0
-6899 1465 -17222 0
-6901 1467 -17222 0
6900 -1466 -17222 0
-1453 6887 -17222 0
-1455 6889 -17222 0
-1457 6891 -17222 0
-1459 6893 -17222 0
-1461 6895 -17222 0
-1463 6897 -17222 0
-1465 6899 -17222 0
-1467 6901 -17222 0
1466 -6900 -17222 0
-6887 -1453 17222 0
-6889 -1455 17222 0
-6891 -1457 17222 0
-6893 -1459 17222 0
-6895 -1461 17222 0
-6897 -1463 17222 0
-6899 -1465 17222 0
-6901 -1467 17222 0
6900 1466 17222 0
c ((max_left_00001_00002_00004=max_left_00001_00002_00005)=tv=SATLiteral(17223))
-1453 1468 -17223 0
-1455 1470 -17223 0
-1457 1472 -17223 0
-1459 1474 -17223 0
-1461 1476 -17223 0
-1463 1478 -17223 0
-1465 1480 -17223 0
-1467 1482 -17223 0
1466 -1481 -17223 0
-1468 1453 -17223 0
-1470 1455 -17223 0
-1472 1457 -17223 0
-1474 1459 -17223 0
-1476 1461 -17223 0
-1478 1463 -17223 0
-1480 1465 -17223 0
-1482 1467 -17223 0
1481 -1466 -17223 0
-1453 -1468 17223 0
-1455 -1470 17223 0
-1457 -1472 17223 0
-1459 -1474 17223 0
-1461 -1476 17223 0
-1463 -1478 17223 0
-1465 -1480 17223 0
-1467 -1482 17223 0
1466 1481 17223 0
c ((variant_fields_00001_00002_00005=max_left_00001_00002_00005)=tv=SATLiteral(17224))
-6902 1468 -17224 0
-6904 1470 -17224 0
-6906 1472 -17224 0
-6908 1474 -17224 0
-6910 1476 -17224 0
-6912 1478 -17224 0
-6914 1480 -17224 0
-6916 1482 -17224 0
6915 -1481 -17224 0
-1468 6902 -17224 0
-1470 6904 -17224 0
-1472 6906 -17224 0
-1474 6908 -17224 0
-1476 6910 -17224 0
-1478 6912 -17224 0
-1480 6914 -17224 0
-1482 6916 -17224 0
1481 -6915 -17224 0
-6902 -1468 17224 0
-6904 -1470 17224 0
-6906 -1472 17224 0
-6908 -1474 17224 0
-6910 -1476 17224 0
-6912 -1478 17224 0
-6914 -1480 17224 0
-6916 -1482 17224 0
6915 1481 17224 0
c ((max_left_00001_00002_00005=max_left_00001_00002_00006)=tv=SATLiteral(17225))
-1468 1483 -17225 0
-1470 1485 -17225 0
-1472 1487 -17225 0
-1474 1489 -17225 0
-1476 1491 -17225 0
-1478 1493 -17225 0
-1480 1495 -17225 0
-1482 1497 -17225 0
1481 -1496 -17225 0
-1483 1468 -17225 0
-1485 1470 -17225 0
-1487 1472 -17225 0
-1489 1474 -17225 0
-1491 1476 -17225 0
-1493 1478 -17225 0
-1495 1480 -17225 0
-1497 1482 -17225 0
1496 -1481 -17225 0
-1468 -1483 17225 0
-1470 -1485 17225 0
-1472 -1487 17225 0
-1474 -1489 17225 0
-1476 -1491 17225 0
-1478 -1493 17225 0
-1480 -1495 17225 0
-1482 -1497 17225 0
1481 1496 17225 0
c ((variant_fields_00001_00002_00006=max_left_00001_00002_00006)=tv=SATLiteral(17226))
-6917 1483 -17226 0
-6919 1485 -17226 0
-6921 1487 -17226 0
-6923 1489 -17226 0
-6925 1491 -17226 0
-6927 1493 -17226 0
-6929 1495 -17226 0
-6931 1497 -17226 0
6930 -1496 -17226 0
-1483 6917 -17226 0
-1485 6919 -17226 0
-1487 6921 -17226 0
-1489 6923 -17226 0
-1491 6925 -17226 0
-1493 6927 -17226 0
-1495 6929 -17226 0
-1497 6931 -17226 0
1496 -6930 -17226 0
-6917 -1483 17226 0
-6919 -1485 17226 0
-6921 -1487 17226 0
-6923 -1489 17226 0
-6925 -1491 17226 0
-6927 -1493 17226 0
-6929 -1495 17226 0
-6931 -1497 17226 0
6930 1496 17226 0
c ((max_left_00001_00002_00006=max_left_00001_00002_00007)=tv=SATLiteral(17227))
-1483 1498 -17227 0
-1485 1500 -17227 0
-1487 1502 -17227 0
-1489 1504 -17227 0
-1491 1506 -17227 0
-1493 1508 -17227 0
-1495 1510 -17227 0
-1497 1512 -17227 0
1496 -1511 -17227 0
-1498 1483 -17227 0
-1500 1485 -17227 0
-1502 1487 -17227 0
-1504 1489 -17227 0
-1506 1491 -17227 0
-1508 1493 -17227 0
-1510 1495 -17227 0
-1512 1497 -17227 0
1511 -1496 -17227 0
-1483 -1498 17227 0
-1485 -1500 17227 0
-1487 -1502 17227 0
-1489 -1504 17227 0
-1491 -1506 17227 0
-1493 -1508 17227 0
-1495 -1510 17227 0
-1497 -1512 17227 0
1496 1511 17227 0
c ((variant_fields_00001_00002_00007=max_left_00001_00002_00007)=tv=SATLiteral(17228))
-6932 1498 -17228 0
-6934 1500 -17228 0
-6936 1502 -17228 0
-6938 1504 -17228 0
-6940 1506 -17228 0
-6942 1508 -17228 0
-6944 1510 -17228 0
-6946 1512 -17228 0
6945 -1511 -17228 0
-1498 6932 -17228 0
-1500 6934 -17228 0
-1502 6936 -17228 0
-1504 6938 -17228 0
-1506 6940 -17228 0
-1508 6942 -17228 0
-1510 6944 -17228 0
-1512 6946 -17228 0
1511 -6945 -17228 0
-6932 -1498 17228 0
-6934 -1500 17228 0
-6936 -1502 17228 0
-6938 -1504 17228 0
-6940 -1506 17228 0
-6942 -1508 17228 0
-6944 -1510 17228 0
-6946 -1512 17228 0
6945 1511 17228 0
c ((max_left_00001_00002_00007=max_left_00001_00002_00008)=tv=SATLiteral(17229))
-1498 1513 -17229 0
-1500 1515 -17229 0
-1502 1517 -17229 0
-1504 1519 -17229 0
-1506 1521 -17229 0
-1508 1523 -17229 0
-1510 1525 -17229 0
-1512 1527 -17229 0
1511 -1526 -17229 0
-1513 1498 -17229 0
-1515 1500 -17229 0
-1517 1502 -17229 0
-1519 1504 -17229 0
-1521 1506 -17229 0
-1523 1508 -17229 0
-1525 1510 -17229 0
-1527 1512 -17229 0
1526 -1511 -17229 0
-1498 -1513 17229 0
-1500 -1515 17229 0
-1502 -1517 17229 0
-1504 -1519 17229 0
-1506 -1521 17229 0
-1508 -1523 17229 0
-1510 -1525 17229 0
-1512 -1527 17229 0
1511 1526 17229 0
c ((variant_fields_00001_00002_00008=max_left_00001_00002_00008)=tv=SATLiteral(17230))
-6947 1513 -17230 0
-6949 1515 -17230 0
-6951 1517 -17230 0
-6953 1519 -17230 0
-6955 1521 -17230 0
-6957 1523 -17230 0
-6959 1525 -17230 0
-6961 1527 -17230 0
6960 -1526 -17230 0
-1513 6947 -17230 0
-1515 6949 -17230 0
-1517 6951 -17230 0
-1519 6953 -17230 0
-1521 6955 -17230 0
-1523 6957 -17230 0
-1525 6959 -17230 0
-1527 6961 -17230 0
1526 -6960 -17230 0
-6947 -1513 17230 0
-6949 -1515 17230 0
-6951 -1517 17230 0
-6953 -1519 17230 0
-6955 -1521 17230 0
-6957 -1523 17230 0
-6959 -1525 17230 0
-6961 -1527 17230 0
6960 1526 17230 0
c ((max_left_00001_00002_00008=max_left_00001_00002_00009)=tv=SATLiteral(17231))
-1513 1528 -17231 0
-1515 1530 -17231 0
-1517 1532 -17231 0
-1519 1534 -17231 0
-1521 1536 -17231 0
-1523 1538 -17231 0
-1525 1540 -17231 0
-1527 1542 -17231 0
1526 -1541 -17231 0
-1528 1513 -17231 0
-1530 1515 -17231 0
-1532 1517 -17231 0
-1534 1519 -17231 0
-1536 1521 -17231 0
-1538 1523 -17231 0
-1540 1525 -17231 0
-1542 1527 -17231 0
1541 -1526 -17231 0
-1513 -1528 17231 0
-1515 -1530 17231 0
-1517 -1532 17231 0
-1519 -1534 17231 0
-1521 -1536 17231 0
-1523 -1538 17231 0
-1525 -1540 17231 0
-1527 -1542 17231 0
1526 1541 17231 0
c ((variant_fields_00001_00002_00009=max_left_00001_00002_00009)=tv=SATLiteral(17232))
-6962 1528 -17232 0
-6964 1530 -17232 0
-6966 1532 -17232 0
-6968 1534 -17232 0
-6970 1536 -17232 0
-6972 1538 -17232 0
-6974 1540 -17232 0
-6976 1542 -17232 0
6975 -1541 -17232 0
-1528 6962 -17232 0
-1530 6964 -17232 0
-1532 6966 -17232 0
-1534 6968 -17232 0
-1536 6970 -17232 0
-1538 6972 -17232 0
-1540 6974 -17232 0
-1542 6976 -17232 0
1541 -6975 -17232 0
-6962 -1528 17232 0
-6964 -1530 17232 0
-6966 -1532 17232 0
-6968 -1534 17232 0
-6970 -1536 17232 0
-6972 -1538 17232 0
-6974 -1540 17232 0
-6976 -1542 17232 0
6975 1541 17232 0
c ((max_left_00001_00003_00001=max_left_00001_00003_00002)=tv=SATLiteral(17233))
-1544 1559 -17233 0
-1546 1561 -17233 0
-1548 1563 -17233 0
-1550 1565 -17233 0
-1552 1567 -17233 0
-1554 1569 -17233 0
-1556 1571 -17233 0
-1558 1573 -17233 0
1557 -1572 -17233 0
-1559 1544 -17233 0
-1561 1546 -17233 0
-1563 1548 -17233 0
-1565 1550 -17233 0
-1567 1552 -17233 0
-1569 1554 -17233 0
-1571 1556 -17233 0
-1573 1558 -17233 0
1572 -1557 -17233 0
-1544 -1559 17233 0
-1546 -1561 17233 0
-1548 -1563 17233 0
-1550 -1565 17233 0
-1552 -1567 17233 0
-1554 -1569 17233 0
-1556 -1571 17233 0
-1558 -1573 17233 0
1557 1572 17233 0
c ((variant_fields_00001_00003_00002=max_left_00001_00003_00002)=tv=SATLiteral(17234))
-6992 1559 -17234 0
-6994 1561 -17234 0
-6996 1563 -17234 0
-6998 1565 -17234 0
-7000 1567 -17234 0
-7002 1569 -17234 0
-7004 1571 -17234 0
-7006 1573 -17234 0
7005 -1572 -17234 0
-1559 6992 -17234 0
-1561 6994 -17234 0
-1563 6996 -17234 0
-1565 6998 -17234 0
-1567 7000 -17234 0
-1569 7002 -17234 0
-1571 7004 -17234 0
-1573 7006 -17234 0
1572 -7005 -17234 0
-6992 -1559 17234 0
-6994 -1561 17234 0
-6996 -1563 17234 0
-6998 -1565 17234 0
-7000 -1567 17234 0
-7002 -1569 17234 0
-7004 -1571 17234 0
-7006 -1573 17234 0
7005 1572 17234 0
c ((max_left_00001_00003_00002=max_left_00001_00003_00003)=tv=SATLiteral(17235))
-1559 1574 -17235 0
-1561 1576 -17235 0
-1563 1578 -17235 0
-1565 1580 -17235 0
-1567 1582 -17235 0
-1569 1584 -17235 0
-1571 1586 -17235 0
-1573 1588 -17235 0
1572 -1587 -17235 0
-1574 1559 -17235 0
-1576 1561 -17235 0
-1578 1563 -17235 0
-1580 1565 -17235 0
-1582 1567 -17235 0
-1584 1569 -17235 0
-1586 1571 -17235 0
-1588 1573 -17235 0
1587 -1572 -17235 0
-1559 -1574 17235 0
-1561 -1576 17235 0
-1563 -1578 17235 0
-1565 -1580 17235 0
-1567 -1582 17235 0
-1569 -1584 17235 0
-1571 -1586 17235 0
-1573 -1588 17235 0
1572 1587 17235 0
c ((variant_fields_00001_00003_00003=max_left_00001_00003_00003)=tv=SATLiteral(17236))
-7007 1574 -17236 0
-7009 1576 -17236 0
-7011 1578 -17236 0
-7013 1580 -17236 0
-7015 1582 -17236 0
-7017 1584 -17236 0
-7019 1586 -17236 0
-7021 1588 -17236 0
7020 -1587 -17236 0
-1574 7007 -17236 0
-1576 7009 -17236 0
-1578 7011 -17236 0
-1580 7013 -17236 0
-1582 7015 -17236 0
-1584 7017 -17236 0
-1586 7019 -17236 0
-1588 7021 -17236 0
1587 -7020 -17236 0
-7007 -1574 17236 0
-7009 -1576 17236 0
-7011 -1578 17236 0
-7013 -1580 17236 0
-7015 -1582 17236 0
-7017 -1584 17236 0
-7019 -1586 17236 0
-7021 -1588 17236 0
7020 1587 17236 0
c ((max_left_00001_00003_00003=max_left_00001_00003_00004)=tv=SATLiteral(17237))
-1574 1589 -17237 0
-1576 1591 -17237 0
-1578 1593 -17237 0
-1580 1595 -17237 0
-1582 1597 -17237 0
-1584 1599 -17237 0
-1586 1601 -17237 0
-1588 1603 -17237 0
1587 -1602 -17237 0
-1589 1574 -17237 0
-1591 1576 -17237 0
-1593 1578 -17237 0
-1595 1580 -17237 0
-1597 1582 -17237 0
-1599 1584 -17237 0
-1601 1586 -17237 0
-1603 1588 -17237 0
1602 -1587 -17237 0
-1574 -1589 17237 0
-1576 -1591 17237 0
-1578 -1593 17237 0
-1580 -1595 17237 0
-1582 -1597 17237 0
-1584 -1599 17237 0
-1586 -1601 17237 0
-1588 -1603 17237 0
1587 1602 17237 0
c ((variant_fields_00001_00003_00004=max_left_00001_00003_00004)=tv=SATLiteral(17238))
-7022 1589 -17238 0
-7024 1591 -17238 0
-7026 1593 -17238 0
-7028 1595 -17238 0
-7030 1597 -17238 0
-7032 1599 -17238 0
-7034 1601 -17238 0
-7036 1603 -17238 0
7035 -1602 -17238 0
-1589 7022 -17238 0
-1591 7024 -17238 0
-1593 7026 -17238 0
-1595 7028 -17238 0
-1597 7030 -17238 0
-1599 7032 -17238 0
-1601 7034 -17238 0
-1603 7036 -17238 0
1602 -7035 -17238 0
-7022 -1589 17238 0
-7024 -1591 17238 0
-7026 -1593 17238 0
-7028 -1595 17238 0
-7030 -1597 17238 0
-7032 -1599 17238 0
-7034 -1601 17238 0
-7036 -1603 17238 0
7035 1602 17238 0
c ((max_left_00001_00003_00004=max_left_00001_00003_00005)=tv=SATLiteral(17239))
-1589 1604 -17239 0
-1591 1606 -17239 0
-1593 1608 -17239 0
-1595 1610 -17239 0
-1597 1612 -17239 0
-1599 1614 -17239 0
-1601 1616 -17239 0
-1603 1618 -17239 0
1602 -1617 -17239 0
-1604 1589 -17239 0
-1606 1591 -17239 0
-1608 1593 -17239 0
-1610 1595 -17239 0
-1612 1597 -17239 0
-1614 1599 -17239 0
-1616 1601 -17239 0
-1618 1603 -17239 0
1617 -1602 -17239 0
-1589 -1604 17239 0
-1591 -1606 17239 0
-1593 -1608 17239 0
-1595 -1610 17239 0
-1597 -1612 17239 0
-1599 -1614 17239 0
-1601 -1616 17239 0
-1603 -1618 17239 0
1602 1617 17239 0
c ((variant_fields_00001_00003_00005=max_left_00001_00003_00005)=tv=SATLiteral(17240))
-7037 1604 -17240 0
-7039 1606 -17240 0
-7041 1608 -17240 0
-7043 1610 -17240 0
-7045 1612 -17240 0
-7047 1614 -17240 0
-7049 1616 -17240 0
-7051 1618 -17240 0
7050 -1617 -17240 0
-1604 7037 -17240 0
-1606 7039 -17240 0
-1608 7041 -17240 0
-1610 7043 -17240 0
-1612 7045 -17240 0
-1614 7047 -17240 0
-1616 7049 -17240 0
-1618 7051 -17240 0
1617 -7050 -17240 0
-7037 -1604 17240 0
-7039 -1606 17240 0
-7041 -1608 17240 0
-7043 -1610 17240 0
-7045 -1612 17240 0
-7047 -1614 17240 0
-7049 -1616 17240 0
-7051 -1618 17240 0
7050 1617 17240 0
c ((max_left_00001_00003_00005=max_left_00001_00003_00006)=tv=SATLiteral(17241))
-1604 1619 -17241 0
-1606 1621 -17241 0
-1608 1623 -17241 0
-1610 1625 -17241 0
-1612 1627 -17241 0
-1614 1629 -17241 0
-1616 1631 -17241 0
-1618 1633 -17241 0
1617 -1632 -17241 0
-1619 1604 -17241 0
-1621 1606 -17241 0
-1623 1608 -17241 0
-1625 1610 -17241 0
-1627 1612 -17241 0
-1629 1614 -17241 0
-1631 1616 -17241 0
-1633 1618 -17241 0
1632 -1617 -17241 0
-1604 -1619 17241 0
-1606 -1621 17241 0
-1608 -1623 17241 0
-1610 -1625 17241 0
-1612 -1627 17241 0
-1614 -1629 17241 0
-1616 -1631 17241 0
-1618 -1633 17241 0
1617 1632 17241 0
c ((variant_fields_00001_00003_00006=max_left_00001_00003_00006)=tv=SATLiteral(17242))
-7052 1619 -17242 0
-7054 1621 -17242 0
-7056 1623 -17242 0
-7058 1625 -17242 0
-7060 1627 -17242 0
-7062 1629 -17242 0
-7064 1631 -17242 0
-7066 1633 -17242 0
7065 -1632 -17242 0
-1619 7052 -17242 0
-1621 7054 -17242 0
-1623 7056 -17242 0
-1625 7058 -17242 0
-1627 7060 -17242 0
-1629 7062 -17242 0
-1631 7064 -17242 0
-1633 7066 -17242 0
1632 -7065 -17242 0
-7052 -1619 17242 0
-7054 -1621 17242 0
-7056 -1623 17242 0
-7058 -1625 17242 0
-7060 -1627 17242 0
-7062 -1629 17242 0
-7064 -1631 17242 0
-7066 -1633 17242 0
7065 1632 17242 0
c ((max_left_00001_00003_00006=max_left_00001_00003_00007)=tv=SATLiteral(17243))
-1619 1634 -17243 0
-1621 1636 -17243 0
-1623 1638 -17243 0
-1625 1640 -17243 0
-1627 1642 -17243 0
-1629 1644 -17243 0
-1631 1646 -17243 0
-1633 1648 -17243 0
1632 -1647 -17243 0
-1634 1619 -17243 0
-1636 1621 -17243 0
-1638 1623 -17243 0
-1640 1625 -17243 0
-1642 1627 -17243 0
-1644 1629 -17243 0
-1646 1631 -17243 0
-1648 1633 -17243 0
1647 -1632 -17243 0
-1619 -1634 17243 0
-1621 -1636 17243 0
-1623 -1638 17243 0
-1625 -1640 17243 0
-1627 -1642 17243 0
-1629 -1644 17243 0
-1631 -1646 17243 0
-1633 -1648 17243 0
1632 1647 17243 0
c ((variant_fields_00001_00003_00007=max_left_00001_00003_00007)=tv=SATLiteral(17244))
-7067 1634 -17244 0
-7069 1636 -17244 0
-7071 1638 -17244 0
-7073 1640 -17244 0
-7075 1642 -17244 0
-7077 1644 -17244 0
-7079 1646 -17244 0
-7081 1648 -17244 0
7080 -1647 -17244 0
-1634 7067 -17244 0
-1636 7069 -17244 0
-1638 7071 -17244 0
-1640 7073 -17244 0
-1642 7075 -17244 0
-1644 7077 -17244 0
-1646 7079 -17244 0
-1648 7081 -17244 0
1647 -7080 -17244 0
-7067 -1634 17244 0
-7069 -1636 17244 0
-7071 -1638 17244 0
-7073 -1640 17244 0
-7075 -1642 17244 0
-7077 -1644 17244 0
-7079 -1646 17244 0
-7081 -1648 17244 0
7080 1647 17244 0
c ((max_left_00001_00003_00007=max_left_00001_00003_00008)=tv=SATLiteral(17245))
-1634 1649 -17245 0
-1636 1651 -17245 0
-1638 1653 -17245 0
-1640 1655 -17245 0
-1642 1657 -17245 0
-1644 1659 -17245 0
-1646 1661 -17245 0
-1648 1663 -17245 0
1647 -1662 -17245 0
-1649 1634 -17245 0
-1651 1636 -17245 0
-1653 1638 -17245 0
-1655 1640 -17245 0
-1657 1642 -17245 0
-1659 1644 -17245 0
-1661 1646 -17245 0
-1663 1648 -17245 0
1662 -1647 -17245 0
-1634 -1649 17245 0
-1636 -1651 17245 0
-1638 -1653 17245 0
-1640 -1655 17245 0
-1642 -1657 17245 0
-1644 -1659 17245 0
-1646 -1661 17245 0
-1648 -1663 17245 0
1647 1662 17245 0
c ((variant_fields_00001_00003_00008=max_left_00001_00003_00008)=tv=SATLiteral(17246))
-7082 1649 -17246 0
-7084 1651 -17246 0
-7086 1653 -17246 0
-7088 1655 -17246 0
-7090 1657 -17246 0
-7092 1659 -17246 0
-7094 1661 -17246 0
-7096 1663 -17246 0
7095 -1662 -17246 0
-1649 7082 -17246 0
-1651 7084 -17246 0
-1653 7086 -17246 0
-1655 7088 -17246 0
-1657 7090 -17246 0
-1659 7092 -17246 0
-1661 7094 -17246 0
-1663 7096 -17246 0
1662 -7095 -17246 0
-7082 -1649 17246 0
-7084 -1651 17246 0
-7086 -1653 17246 0
-7088 -1655 17246 0
-7090 -1657 17246 0
-7092 -1659 17246 0
-7094 -1661 17246 0
-7096 -1663 17246 0
7095 1662 17246 0
c ((max_left_00001_00003_00008=max_left_00001_00003_00009)=tv=SATLiteral(17247))
-1649 1664 -17247 0
-1651 1666 -17247 0
-1653 1668 -17247 0
-1655 1670 -17247 0
-1657 1672 -17247 0
-1659 1674 -17247 0
-1661 1676 -17247 0
-1663 1678 -17247 0
1662 -1677 -17247 0
-1664 1649 -17247 0
-1666 1651 -17247 0
-1668 1653 -17247 0
-1670 1655 -17247 0
-1672 1657 -17247 0
-1674 1659 -17247 0
-1676 1661 -17247 0
-1678 1663 -17247 0
1677 -1662 -17247 0
-1649 -1664 17247 0
-1651 -1666 17247 0
-1653 -1668 17247 0
-1655 -1670 17247 0
-1657 -1672 17247 0
-1659 -1674 17247 0
-1661 -1676 17247 0
-1663 -1678 17247 0
1662 1677 17247 0
c ((variant_fields_00001_00003_00009=max_left_00001_00003_00009)=tv=SATLiteral(17248))
-7097 1664 -17248 0
-7099 1666 -17248 0
-7101 1668 -17248 0
-7103 1670 -17248 0
-7105 1672 -17248 0
-7107 1674 -17248 0
-7109 1676 -17248 0
-7111 1678 -17248 0
7110 -1677 -17248 0
-1664 7097 -17248 0
-1666 7099 -17248 0
-1668 7101 -17248 0
-1670 7103 -17248 0
-1672 7105 -17248 0
-1674 7107 -17248 0
-1676 7109 -17248 0
-1678 7111 -17248 0
1677 -7110 -17248 0
-7097 -1664 17248 0
-7099 -1666 17248 0
-7101 -1668 17248 0
-7103 -1670 17248 0
-7105 -1672 17248 0
-7107 -1674 17248 0
-7109 -1676 17248 0
-7111 -1678 17248 0
7110 1677 17248 0
c ((max_left_00001_00004_00001=max_left_00001_00004_00002)=tv=SATLiteral(17249))
-1680 1695 -17249 0
-1682 1697 -17249 0
-1684 1699 -17249 0
-1686 1701 -17249 0
-1688 1703 -17249 0
-1690 1705 -17249 0
-1692 1707 -17249 0
-1694 1709 -17249 0
1693 -1708 -17249 0
-1695 1680 -17249 0
-1697 1682 -17249 0
-1699 1684 -17249 0
-1701 1686 -17249 0
-1703 1688 -17249 0
-1705 1690 -17249 0
-1707 1692 -17249 0
-1709 1694 -17249 0
1708 -1693 -17249 0
-1680 -1695 17249 0
-1682 -1697 17249 0
-1684 -1699 17249 0
-1686 -1701 17249 0
-1688 -1703 17249 0
-1690 -1705 17249 0
-1692 -1707 17249 0
-1694 -1709 17249 0
1693 1708 17249 0
c ((variant_fields_00001_00004_00002=max_left_00001_00004_00002)=tv=SATLiteral(17250))
-7127 1695 -17250 0
-7129 1697 -17250 0
-7131 1699 -17250 0
-7133 1701 -17250 0
-7135 1703 -17250 0
-7137 1705 -17250 0
-7139 1707 -17250 0
-7141 1709 -17250 0
7140 -1708 -17250 0
-1695 7127 -17250 0
-1697 7129 -17250 0
-1699 7131 -17250 0
-1701 7133 -17250 0
-1703 7135 -17250 0
-1705 7137 -17250 0
-1707 7139 -17250 0
-1709 7141 -17250 0
1708 -7140 -17250 0
-7127 -1695 17250 0
-7129 -1697 17250 0
-7131 -1699 17250 0
-7133 -1701 17250 0
-7135 -1703 17250 0
-7137 -1705 17250 0
-7139 -1707 17250 0
-7141 -1709 17250 0
7140 1708 17250 0
c ((max_left_00001_00004_00002=max_left_00001_00004_00003)=tv=SATLiteral(17251))
-1695 1710 -17251 0
-1697 1712 -17251 0
-1699 1714 -17251 0
-1701 1716 -17251 0
-1703 1718 -17251 0
-1705 1720 -17251 0
-1707 1722 -17251 0
-1709 1724 -17251 0
1708 -1723 -17251 0
-1710 1695 -17251 0
-1712 1697 -17251 0
-1714 1699 -17251 0
-1716 1701 -17251 0
-1718 1703 -17251 0
-1720 1705 -17251 0
-1722 1707 -17251 0
-1724 1709 -17251 0
1723 -1708 -17251 0
-1695 -1710 17251 0
-1697 -1712 17251 0
-1699 -1714 17251 0
-1701 -1716 17251 0
-1703 -1718 17251 0
-1705 -1720 17251 0
-1707 -1722 17251 0
-1709 -1724 17251 0
1708 1723 17251 0
c ((variant_fields_00001_00004_00003=max_left_00001_00004_00003)=tv=SATLiteral(17252))
-7142 1710 -17252 0
-7144 1712 -17252 0
-7146 1714 -17252 0
-7148 1716 -17252 0
-7150 1718 -17252 0
-7152 1720 -17252 0
-7154 1722 -17252 0
-7156 1724 -17252 0
7155 -1723 -17252 0
-1710 7142 -17252 0
-1712 7144 -17252 0
-1714 7146 -17252 0
-1716 7148 -17252 0
-1718 7150 -17252 0
-1720 7152 -17252 0
-1722 7154 -17252 0
-1724 7156 -17252 0
1723 -7155 -17252 0
-7142 -1710 17252 0
-7144 -1712 17252 0
-7146 -1714 17252 0
-7148 -1716 17252 0
-7150 -1718 17252 0
-7152 -1720 17252 0
-7154 -1722 17252 0
-7156 -1724 17252 0
7155 1723 17252 0
c ((max_left_00001_00004_00003=max_left_00001_00004_00004)=tv=SATLiteral(17253))
-1710 1725 -17253 0
-1712 1727 -17253 0
-1714 1729 -17253 0
-1716 1731 -17253 0
-1718 1733 -17253 0
-1720 1735 -17253 0
-1722 1737 -17253 0
-1724 1739 -17253 0
1723 -1738 -17253 0
-1725 1710 -17253 0
-1727 1712 -17253 0
-1729 1714 -17253 0
-1731 1716 -17253 0
-1733 1718 -17253 0
-1735 1720 -17253 0
-1737 1722 -17253 0
-1739 1724 -17253 0
1738 -1723 -17253 0
-1710 -1725 17253 0
-1712 -1727 17253 0
-1714 -1729 17253 0
-1716 -1731 17253 0
-1718 -1733 17253 0
-1720 -1735 17253 0
-1722 -1737 17253 0
-1724 -1739 17253 0
1723 1738 17253 0
c ((variant_fields_00001_00004_00004=max_left_00001_00004_00004)=tv=SATLiteral(17254))
-7157 1725 -17254 0
-7159 1727 -17254 0
-7161 1729 -17254 0
-7163 1731 -17254 0
-7165 1733 -17254 0
-7167 1735 -17254 0
-7169 1737 -17254 0
-7171 1739 -17254 0
7170 -1738 -17254 0
-1725 7157 -17254 0
-1727 7159 -17254 0
-1729 7161 -17254 0
-1731 7163 -17254 0
-1733 7165 -17254 0
-1735 7167 -17254 0
-1737 7169 -17254 0
-1739 7171 -17254 0
1738 -7170 -17254 0
-7157 -1725 17254 0
-7159 -1727 17254 0
-7161 -1729 17254 0
-7163 -1731 17254 0
-7165 -1733 17254 0
-7167 -1735 17254 0
-7169 -1737 17254 0
-7171 -1739 17254 0
7170 1738 17254 0
c ((max_left_00001_00004_00004=max_left_00001_00004_00005)=tv=SATLiteral(17255))
-1725 1740 -17255 0
-1727 1742 -17255 0
-1729 1744 -17255 0
-1731 1746 -17255 0
-1733 1748 -17255 0
-1735 1750 -17255 0
-1737 1752 -17255 0
-1739 1754 -17255 0
1738 -1753 -17255 0
-1740 1725 -17255 0
-1742 1727 -17255 0
-1744 1729 -17255 0
-1746 1731 -17255 0
-1748 1733 -17255 0
-1750 1735 -17255 0
-1752 1737 -17255 0
-1754 1739 -17255 0
1753 -1738 -17255 0
-1725 -1740 17255 0
-1727 -1742 17255 0
-1729 -1744 17255 0
-1731 -1746 17255 0
-1733 -1748 17255 0
-1735 -1750 17255 0
-1737 -1752 17255 0
-1739 -1754 17255 0
1738 1753 17255 0
c ((variant_fields_00001_00004_00005=max_left_00001_00004_00005)=tv=SATLiteral(17256))
-7172 1740 -17256 0
-7174 1742 -17256 0
-7176 1744 -17256 0
-7178 1746 -17256 0
-7180 1748 -17256 0
-7182 1750 -17256 0
-7184 1752 -17256 0
-7186 1754 -17256 0
7185 -1753 -17256 0
-1740 7172 -17256 0
-1742 7174 -17256 0
-1744 7176 -17256 0
-1746 7178 -17256 0
-1748 7180 -17256 0
-1750 7182 -17256 0
-1752 7184 -17256 0
-1754 7186 -17256 0
1753 -7185 -17256 0
-7172 -1740 17256 0
-7174 -1742 17256 0
-7176 -1744 17256 0
-7178 -1746 17256 0
-7180 -1748 17256 0
-7182 -1750 17256 0
-7184 -1752 17256 0
-7186 -1754 17256 0
7185 1753 17256 0
c ((max_left_00001_00004_00005=max_left_00001_00004_00006)=tv=SATLiteral(17257))
-1740 1755 -17257 0
-1742 1757 -17257 0
-1744 1759 -17257 0
-1746 1761 -17257 0
-1748 1763 -17257 0
-1750 1765 -17257 0
-1752 1767 -17257 0
-1754 1769 -17257 0
1753 -1768 -17257 0
-1755 1740 -17257 0
-1757 1742 -17257 0
-1759 1744 -17257 0
-1761 1746 -17257 0
-1763 1748 -17257 0
-1765 1750 -17257 0
-1767 1752 -17257 0
-1769 1754 -17257 0
1768 -1753 -17257 0
-1740 -1755 17257 0
-1742 -1757 17257 0
-1744 -1759 17257 0
-1746 -1761 17257 0
-1748 -1763 17257 0
-1750 -1765 17257 0
-1752 -1767 17257 0
-1754 -1769 17257 0
1753 1768 17257 0
c ((variant_fields_00001_00004_00006=max_left_00001_00004_00006)=tv=SATLiteral(17258))
-7187 1755 -17258 0
-7189 1757 -17258 0
-7191 1759 -17258 0
-7193 1761 -17258 0
-7195 1763 -17258 0
-7197 1765 -17258 0
-7199 1767 -17258 0
-7201 1769 -17258 0
7200 -1768 -17258 0
-1755 7187 -17258 0
-1757 7189 -17258 0
-1759 7191 -17258 0
-1761 7193 -17258 0
-1763 7195 -17258 0
-1765 7197 -17258 0
-1767 7199 -17258 0
-1769 7201 -17258 0
1768 -7200 -17258 0
-7187 -1755 17258 0
-7189 -1757 17258 0
-7191 -1759 17258 0
-7193 -1761 17258 0
-7195 -1763 17258 0
-7197 -1765 17258 0
-7199 -1767 17258 0
-7201 -1769 17258 0
7200 1768 17258 0
c ((max_left_00001_00004_00006=max_left_00001_00004_00007)=tv=SATLiteral(17259))
-1755 1770 -17259 0
-1757 1772 -17259 0
-1759 1774 -17259 0
-1761 1776 -17259 0
-1763 1778 -17259 0
-1765 1780 -17259 0
-1767 1782 -17259 0
-1769 1784 -17259 0
1768 -1783 -17259 0
-1770 1755 -17259 0
-1772 1757 -17259 0
-1774 1759 -17259 0
-1776 1761 -17259 0
-1778 1763 -17259 0
-1780 1765 -17259 0
-1782 1767 -17259 0
-1784 1769 -17259 0
1783 -1768 -17259 0
-1755 -1770 17259 0
-1757 -1772 17259 0
-1759 -1774 17259 0
-1761 -1776 17259 0
-1763 -1778 17259 0
-1765 -1780 17259 0
-1767 -1782 17259 0
-1769 -1784 17259 0
1768 1783 17259 0
c ((variant_fields_00001_00004_00007=max_left_00001_00004_00007)=tv=SATLiteral(17260))
-7202 1770 -17260 0
-7204 1772 -17260 0
-7206 1774 -17260 0
-7208 1776 -17260 0
-7210 1778 -17260 0
-7212 1780 -17260 0
-7214 1782 -17260 0
-7216 1784 -17260 0
7215 -1783 -17260 0
-1770 7202 -17260 0
-1772 7204 -17260 0
-1774 7206 -17260 0
-1776 7208 -17260 0
-1778 7210 -17260 0
-1780 7212 -17260 0
-1782 7214 -17260 0
-1784 7216 -17260 0
1783 -7215 -17260 0
-7202 -1770 17260 0
-7204 -1772 17260 0
-7206 -1774 17260 0
-7208 -1776 17260 0
-7210 -1778 17260 0
-7212 -1780 17260 0
-7214 -1782 17260 0
-7216 -1784 17260 0
7215 1783 17260 0
c ((max_left_00001_00004_00007=max_left_00001_00004_00008)=tv=SATLiteral(17261))
-1770 1785 -17261 0
-1772 1787 -17261 0
-1774 1789 -17261 0
-1776 1791 -17261 0
-1778 1793 -17261 0
-1780 1795 -17261 0
-1782 1797 -17261 0
-1784 1799 -17261 0
1783 -1798 -17261 0
-1785 1770 -17261 0
-1787 1772 -17261 0
-1789 1774 -17261 0
-1791 1776 -17261 0
-1793 1778 -17261 0
-1795 1780 -17261 0
-1797 1782 -17261 0
-1799 1784 -17261 0
1798 -1783 -17261 0
-1770 -1785 17261 0
-1772 -1787 17261 0
-1774 -1789 17261 0
-1776 -1791 17261 0
-1778 -1793 17261 0
-1780 -1795 17261 0
-1782 -1797 17261 0
-1784 -1799 17261 0
1783 1798 17261 0
c ((variant_fields_00001_00004_00008=max_left_00001_00004_00008)=tv=SATLiteral(17262))
-7217 1785 -17262 0
-7219 1787 -17262 0
-7221 1789 -17262 0
-7223 1791 -17262 0
-7225 1793 -17262 0
-7227 1795 -17262 0
-7229 1797 -17262 0
-7231 1799 -17262 0
7230 -1798 -17262 0
-1785 7217 -17262 0
-1787 7219 -17262 0
-1789 7221 -17262 0
-1791 7223 -17262 0
-1793 7225 -17262 0
-1795 7227 -17262 0
-1797 7229 -17262 0
-1799 7231 -17262 0
1798 -7230 -17262 0
-7217 -1785 17262 0
-7219 -1787 17262 0
-7221 -1789 17262 0
-7223 -1791 17262 0
-7225 -1793 17262 0
-7227 -1795 17262 0
-7229 -1797 17262 0
-7231 -1799 17262 0
7230 1798 17262 0
c ((max_left_00001_00004_00008=max_left_00001_00004_00009)=tv=SATLiteral(17263))
-1785 1800 -17263 0
-1787 1802 -17263 0
-1789 1804 -17263 0
-1791 1806 -17263 0
-1793 1808 -17263 0
-1795 1810 -17263 0
-1797 1812 -17263 0
-1799 1814 -17263 0
1798 -1813 -17263 0
-1800 1785 -17263 0
-1802 1787 -17263 0
-1804 1789 -17263 0
-1806 1791 -17263 0
-1808 1793 -17263 0
-1810 1795 -17263 0
-1812 1797 -17263 0
-1814 1799 -17263 0
1813 -1798 -17263 0
-1785 -1800 17263 0
-1787 -1802 17263 0
-1789 -1804 17263 0
-1791 -1806 17263 0
-1793 -1808 17263 0
-1795 -1810 17263 0
-1797 -1812 17263 0
-1799 -1814 17263 0
1798 1813 17263 0
c ((variant_fields_00001_00004_00009=max_left_00001_00004_00009)=tv=SATLiteral(17264))
-7232 1800 -17264 0
-7234 1802 -17264 0
-7236 1804 -17264 0
-7238 1806 -17264 0
-7240 1808 -17264 0
-7242 1810 -17264 0
-7244 1812 -17264 0
-7246 1814 -17264 0
7245 -1813 -17264 0
-1800 7232 -17264 0
-1802 7234 -17264 0
-1804 7236 -17264 0
-1806 7238 -17264 0
-1808 7240 -17264 0
-1810 7242 -17264 0
-1812 7244 -17264 0
-1814 7246 -17264 0
1813 -7245 -17264 0
-7232 -1800 17264 0
-7234 -1802 17264 0
-7236 -1804 17264 0
-7238 -1806 17264 0
-7240 -1808 17264 0
-7242 -1810 17264 0
-7244 -1812 17264 0
-7246 -1814 17264 0
7245 1813 17264 0
c ((max_left_00001_00005_00001=max_left_00001_00005_00002)=tv=SATLiteral(17265))
-1816 1831 -17265 0
-1818 1833 -17265 0
-1820 1835 -17265 0
-1822 1837 -17265 0
-1824 1839 -17265 0
-1826 1841 -17265 0
-1828 1843 -17265 0
-1830 1845 -17265 0
1829 -1844 -17265 0
-1831 1816 -17265 0
-1833 1818 -17265 0
-1835 1820 -17265 0
-1837 1822 -17265 0
-1839 1824 -17265 0
-1841 1826 -17265 0
-1843 1828 -17265 0
-1845 1830 -17265 0
1844 -1829 -17265 0
-1816 -1831 17265 0
-1818 -1833 17265 0
-1820 -1835 17265 0
-1822 -1837 17265 0
-1824 -1839 17265 0
-1826 -1841 17265 0
-1828 -1843 17265 0
-1830 -1845 17265 0
1829 1844 17265 0
c ((variant_fields_00001_00005_00002=max_left_00001_00005_00002)=tv=SATLiteral(17266))
-7262 1831 -17266 0
-7264 1833 -17266 0
-7266 1835 -17266 0
-7268 1837 -17266 0
-7270 1839 -17266 0
-7272 1841 -17266 0
-7274 1843 -17266 0
-7276 1845 -17266 0
7275 -1844 -17266 0
-1831 7262 -17266 0
-1833 7264 -17266 0
-1835 7266 -17266 0
-1837 7268 -17266 0
-1839 7270 -17266 0
-1841 7272 -17266 0
-1843 7274 -17266 0
-1845 7276 -17266 0
1844 -7275 -17266 0
-7262 -1831 17266 0
-7264 -1833 17266 0
-7266 -1835 17266 0
-7268 -1837 17266 0
-7270 -1839 17266 0
-7272 -1841 17266 0
-7274 -1843 17266 0
-7276 -1845 17266 0
7275 1844 17266 0
c ((max_left_00001_00005_00002=max_left_00001_00005_00003)=tv=SATLiteral(17267))
-1831 1846 -17267 0
-1833 1848 -17267 0
-1835 1850 -17267 0
-1837 1852 -17267 0
-1839 1854 -17267 0
-1841 1856 -17267 0
-1843 1858 -17267 0
-1845 1860 -17267 0
1844 -1859 -17267 0
-1846 1831 -17267 0
-1848 1833 -17267 0
-1850 1835 -17267 0
-1852 1837 -17267 0
-1854 1839 -17267 0
-1856 1841 -17267 0
-1858 1843 -17267 0
-1860 1845 -17267 0
1859 -1844 -17267 0
-1831 -1846 17267 0
-1833 -1848 17267 0
-1835 -1850 17267 0
-1837 -1852 17267 0
-1839 -1854 17267 0
-1841 -1856 17267 0
-1843 -1858 17267 0
-1845 -1860 17267 0
1844 1859 17267 0
c ((variant_fields_00001_00005_00003=max_left_00001_00005_00003)=tv=SATLiteral(17268))
-7277 1846 -17268 0
-7279 1848 -17268 0
-7281 1850 -17268 0
-7283 1852 -17268 0
-7285 1854 -17268 0
-7287 1856 -17268 0
-7289 1858 -17268 0
-7291 1860 -17268 0
7290 -1859 -17268 0
-1846 7277 -17268 0
-1848 7279 -17268 0
-1850 7281 -17268 0
-1852 7283 -17268 0
-1854 7285 -17268 0
-1856 7287 -17268 0
-1858 7289 -17268 0
-1860 7291 -17268 0
1859 -7290 -17268 0
-7277 -1846 17268 0
-7279 -1848 17268 0
-7281 -1850 17268 0
-7283 -1852 17268 0
-7285 -1854 17268 0
-7287 -1856 17268 0
-7289 -1858 17268 0
-7291 -1860 17268 0
7290 1859 17268 0
c ((max_left_00001_00005_00003=max_left_00001_00005_00004)=tv=SATLiteral(17269))
-1846 1861 -17269 0
-1848 1863 -17269 0
-1850 1865 -17269 0
-1852 1867 -17269 0
-1854 1869 -17269 0
-1856 1871 -17269 0
-1858 1873 -17269 0
-1860 1875 -17269 0
1859 -1874 -17269 0
-1861 1846 -17269 0
-1863 1848 -17269 0
-1865 1850 -17269 0
-1867 1852 -17269 0
-1869 1854 -17269 0
-1871 1856 -17269 0
-1873 1858 -17269 0
-1875 1860 -17269 0
1874 -1859 -17269 0
-1846 -1861 17269 0
-1848 -1863 17269 0
-1850 -1865 17269 0
-1852 -1867 17269 0
-1854 -1869 17269 0
-1856 -1871 17269 0
-1858 -1873 17269 0
-1860 -1875 17269 0
1859 1874 17269 0
c ((variant_fields_00001_00005_00004=max_left_00001_00005_00004)=tv=SATLiteral(17270))
-7292 1861 -17270 0
-7294 1863 -17270 0
-7296 1865 -17270 0
-7298 1867 -17270 0
-7300 1869 -17270 0
-7302 1871 -17270 0
-7304 1873 -17270 0
-7306 1875 -17270 0
7305 -1874 -17270 0
-1861 7292 -17270 0
-1863 7294 -17270 0
-1865 7296 -17270 0
-1867 7298 -17270 0
-1869 7300 -17270 0
-1871 7302 -17270 0
-1873 7304 -17270 0
-1875 7306 -17270 0
1874 -7305 -17270 0
-7292 -1861 17270 0
-7294 -1863 17270 0
-7296 -1865 17270 0
-7298 -1867 17270 0
-7300 -1869 17270 0
-7302 -1871 17270 0
-7304 -1873 17270 0
-7306 -1875 17270 0
7305 1874 17270 0
c ((max_left_00001_00005_00004=max_left_00001_00005_00005)=tv=SATLiteral(17271))
-1861 1876 -17271 0
-1863 1878 -17271 0
-1865 1880 -17271 0
-1867 1882 -17271 0
-1869 1884 -17271 0
-1871 1886 -17271 0
-1873 1888 -17271 0
-1875 1890 -17271 0
1874 -1889 -17271 0
-1876 1861 -17271 0
-1878 1863 -17271 0
-1880 1865 -17271 0
-1882 1867 -17271 0
-1884 1869 -17271 0
-1886 1871 -17271 0
-1888 1873 -17271 0
-1890 1875 -17271 0
1889 -1874 -17271 0
-1861 -1876 17271 0
-1863 -1878 17271 0
-1865 -1880 17271 0
-1867 -1882 17271 0
-1869 -1884 17271 0
-1871 -1886 17271 0
-1873 -1888 17271 0
-1875 -1890 17271 0
1874 1889 17271 0
c ((variant_fields_00001_00005_00005=max_left_00001_00005_00005)=tv=SATLiteral(17272))
-7307 1876 -17272 0
-7309 1878 -17272 0
-7311 1880 -17272 0
-7313 1882 -17272 0
-7315 1884 -17272 0
-7317 1886 -17272 0
-7319 1888 -17272 0
-7321 1890 -17272 0
7320 -1889 -17272 0
-1876 7307 -17272 0
-1878 7309 -17272 0
-1880 7311 -17272 0
-1882 7313 -17272 0
-1884 7315 -17272 0
-1886 7317 -17272 0
-1888 7319 -17272 0
-1890 7321 -17272 0
1889 -7320 -17272 0
-7307 -1876 17272 0
-7309 -1878 17272 0
-7311 -1880 17272 0
-7313 -1882 17272 0
-7315 -1884 17272 0
-7317 -1886 17272 0
-7319 -1888 17272 0
-7321 -1890 17272 0
7320 1889 17272 0
c ((max_left_00001_00005_00005=max_left_00001_00005_00006)=tv=SATLiteral(17273))
-1876 1891 -17273 0
-1878 1893 -17273 0
-1880 1895 -17273 0
-1882 1897 -17273 0
-1884 1899 -17273 0
-1886 1901 -17273 0
-1888 1903 -17273 0
-1890 1905 -17273 0
1889 -1904 -17273 0
-1891 1876 -17273 0
-1893 1878 -17273 0
-1895 1880 -17273 0
-1897 1882 -17273 0
-1899 1884 -17273 0
-1901 1886 -17273 0
-1903 1888 -17273 0
-1905 1890 -17273 0
1904 -1889 -17273 0
-1876 -1891 17273 0
-1878 -1893 17273 0
-1880 -1895 17273 0
-1882 -1897 17273 0
-1884 -1899 17273 0
-1886 -1901 17273 0
-1888 -1903 17273 0
-1890 -1905 17273 0
1889 1904 17273 0
c ((variant_fields_00001_00005_00006=max_left_00001_00005_00006)=tv=SATLiteral(17274))
-7322 1891 -17274 0
-7324 1893 -17274 0
-7326 1895 -17274 0
-7328 1897 -17274 0
-7330 1899 -17274 0
-7332 1901 -17274 0
-7334 1903 -17274 0
-7336 1905 -17274 0
7335 -1904 -17274 0
-1891 7322 -17274 0
-1893 7324 -17274 0
-1895 7326 -17274 0
-1897 7328 -17274 0
-1899 7330 -17274 0
-1901 7332 -17274 0
-1903 7334 -17274 0
-1905 7336 -17274 0
1904 -7335 -17274 0
-7322 -1891 17274 0
-7324 -1893 17274 0
-7326 -1895 17274 0
-7328 -1897 17274 0
-7330 -1899 17274 0
-7332 -1901 17274 0
-7334 -1903 17274 0
-7336 -1905 17274 0
7335 1904 17274 0
c ((max_left_00001_00005_00006=max_left_00001_00005_00007)=tv=SATLiteral(17275))
-1891 1906 -17275 0
-1893 1908 -17275 0
-1895 1910 -17275 0
-1897 1912 -17275 0
-1899 1914 -17275 0
-1901 1916 -17275 0
-1903 1918 -17275 0
-1905 1920 -17275 0
1904 -1919 -17275 0
-1906 1891 -17275 0
-1908 1893 -17275 0
-1910 1895 -17275 0
-1912 1897 -17275 0
-1914 1899 -17275 0
-1916 1901 -17275 0
-1918 1903 -17275 0
-1920 1905 -17275 0
1919 -1904 -17275 0
-1891 -1906 17275 0
-1893 -1908 17275 0
-1895 -1910 17275 0
-1897 -1912 17275 0
-1899 -1914 17275 0
-1901 -1916 17275 0
-1903 -1918 17275 0
-1905 -1920 17275 0
1904 1919 17275 0
c ((variant_fields_00001_00005_00007=max_left_00001_00005_00007)=tv=SATLiteral(17276))
-7337 1906 -17276 0
-7339 1908 -17276 0
-7341 1910 -17276 0
-7343 1912 -17276 0
-7345 1914 -17276 0
-7347 1916 -17276 0
-7349 1918 -17276 0
-7351 1920 -17276 0
7350 -1919 -17276 0
-1906 7337 -17276 0
-1908 7339 -17276 0
-1910 7341 -17276 0
-1912 7343 -17276 0
-1914 7345 -17276 0
-1916 7347 -17276 0
-1918 7349 -17276 0
-1920 7351 -17276 0
1919 -7350 -17276 0
-7337 -1906 17276 0
-7339 -1908 17276 0
-7341 -1910 17276 0
-7343 -1912 17276 0
-7345 -1914 17276 0
-7347 -1916 17276 0
-7349 -1918 17276 0
-7351 -1920 17276 0
7350 1919 17276 0
c ((max_left_00001_00005_00007=max_left_00001_00005_00008)=tv=SATLiteral(17277))
-1906 1921 -17277 0
-1908 1923 -17277 0
-1910 1925 -17277 0
-1912 1927 -17277 0
-1914 1929 -17277 0
-1916 1931 -17277 0
-1918 1933 -17277 0
-1920 1935 -17277 0
1919 -1934 -17277 0
-1921 1906 -17277 0
-1923 1908 -17277 0
-1925 1910 -17277 0
-1927 1912 -17277 0
-1929 1914 -17277 0
-1931 1916 -17277 0
-1933 1918 -17277 0
-1935 1920 -17277 0
1934 -1919 -17277 0
-1906 -1921 17277 0
-1908 -1923 17277 0
-1910 -1925 17277 0
-1912 -1927 17277 0
-1914 -1929 17277 0
-1916 -1931 17277 0
-1918 -1933 17277 0
-1920 -1935 17277 0
1919 1934 17277 0
c ((variant_fields_00001_00005_00008=max_left_00001_00005_00008)=tv=SATLiteral(17278))
-7352 1921 -17278 0
-7354 1923 -17278 0
-7356 1925 -17278 0
-7358 1927 -17278 0
-7360 1929 -17278 0
-7362 1931 -17278 0
-7364 1933 -17278 0
-7366 1935 -17278 0
7365 -1934 -17278 0
-1921 7352 -17278 0
-1923 7354 -17278 0
-1925 7356 -17278 0
-1927 7358 -17278 0
-1929 7360 -17278 0
-1931 7362 -17278 0
-1933 7364 -17278 0
-1935 7366 -17278 0
1934 -7365 -17278 0
-7352 -1921 17278 0
-7354 -1923 17278 0
-7356 -1925 17278 0
-7358 -1927 17278 0
-7360 -1929 17278 0
-7362 -1931 17278 0
-7364 -1933 17278 0
-7366 -1935 17278 0
7365 1934 17278 0
c ((max_left_00001_00005_00008=max_left_00001_00005_00009)=tv=SATLiteral(17279))
-1921 1936 -17279 0
-1923 1938 -17279 0
-1925 1940 -17279 0
-1927 1942 -17279 0
-1929 1944 -17279 0
-1931 1946 -17279 0
-1933 1948 -17279 0
-1935 1950 -17279 0
1934 -1949 -17279 0
-1936 1921 -17279 0
-1938 1923 -17279 0
-1940 1925 -17279 0
-1942 1927 -17279 0
-1944 1929 -17279 0
-1946 1931 -17279 0
-1948 1933 -17279 0
-1950 1935 -17279 0
1949 -1934 -17279 0
-1921 -1936 17279 0
-1923 -1938 17279 0
-1925 -1940 17279 0
-1927 -1942 17279 0
-1929 -1944 17279 0
-1931 -1946 17279 0
-1933 -1948 17279 0
-1935 -1950 17279 0
1934 1949 17279 0
c ((variant_fields_00001_00005_00009=max_left_00001_00005_00009)=tv=SATLiteral(17280))
-7367 1936 -17280 0
-7369 1938 -17280 0
-7371 1940 -17280 0
-7373 1942 -17280 0
-7375 1944 -17280 0
-7377 1946 -17280 0
-7379 1948 -17280 0
-7381 1950 -17280 0
7380 -1949 -17280 0
-1936 7367 -17280 0
-1938 7369 -17280 0
-1940 7371 -17280 0
-1942 7373 -17280 0
-1944 7375 -17280 0
-1946 7377 -17280 0
-1948 7379 -17280 0
-1950 7381 -17280 0
1949 -7380 -17280 0
-7367 -1936 17280 0
-7369 -1938 17280 0
-7371 -1940 17280 0
-7373 -1942 17280 0
-7375 -1944 17280 0
-7377 -1946 17280 0
-7379 -1948 17280 0
-7381 -1950 17280 0
7380 1949 17280 0
c ((max_left_00001_00006_00001=max_left_00001_00006_00002)=tv=SATLiteral(17281))
-1952 1967 -17281 0
-1954 1969 -17281 0
-1956 1971 -17281 0
-1958 1973 -17281 0
-1960 1975 -17281 0
-1962 1977 -17281 0
-1964 1979 -17281 0
-1966 1981 -17281 0
1965 -1980 -17281 0
-1967 1952 -17281 0
-1969 1954 -17281 0
-1971 1956 -17281 0
-1973 1958 -17281 0
-1975 1960 -17281 0
-1977 1962 -17281 0
-1979 1964 -17281 0
-1981 1966 -17281 0
1980 -1965 -17281 0
-1952 -1967 17281 0
-1954 -1969 17281 0
-1956 -1971 17281 0
-1958 -1973 17281 0
-1960 -1975 17281 0
-1962 -1977 17281 0
-1964 -1979 17281 0
-1966 -1981 17281 0
1965 1980 17281 0
c ((variant_fields_00001_00006_00002=max_left_00001_00006_00002)=tv=SATLiteral(17282))
-7397 1967 -17282 0
-7399 1969 -17282 0
-7401 1971 -17282 0
-7403 1973 -17282 0
-7405 1975 -17282 0
-7407 1977 -17282 0
-7409 1979 -17282 0
-7411 1981 -17282 0
7410 -1980 -17282 0
-1967 7397 -17282 0
-1969 7399 -17282 0
-1971 7401 -17282 0
-1973 7403 -17282 0
-1975 7405 -17282 0
-1977 7407 -17282 0
-1979 7409 -17282 0
-1981 7411 -17282 0
1980 -7410 -17282 0
-7397 -1967 17282 0
-7399 -1969 17282 0
-7401 -1971 17282 0
-7403 -1973 17282 0
-7405 -1975 17282 0
-7407 -1977 17282 0
-7409 -1979 17282 0
-7411 -1981 17282 0
7410 1980 17282 0
c ((max_left_00001_00006_00002=max_left_00001_00006_00003)=tv=SATLiteral(17283))
-1967 1982 -17283 0
-1969 1984 -17283 0
-1971 1986 -17283 0
-1973 1988 -17283 0
-1975 1990 -17283 0
-1977 1992 -17283 0
-1979 1994 -17283 0
-1981 1996 -17283 0
1980 -1995 -17283 0
-1982 1967 -17283 0
-1984 1969 -17283 0
-1986 1971 -17283 0
-1988 1973 -17283 0
-1990 1975 -17283 0
-1992 1977 -17283 0
-1994 1979 -17283 0
-1996 1981 -17283 0
1995 -1980 -17283 0
-1967 -1982 17283 0
-1969 -1984 17283 0
-1971 -1986 17283 0
-1973 -1988 17283 0
-1975 -1990 17283 0
-1977 -1992 17283 0
-1979 -1994 17283 0
-1981 -1996 17283 0
1980 1995 17283 0
c ((variant_fields_00001_00006_00003=max_left_00001_00006_00003)=tv=SATLiteral(17284))
-7412 1982 -17284 0
-7414 1984 -17284 0
-7416 1986 -17284 0
-7418 1988 -17284 0
-7420 1990 -17284 0
-7422 1992 -17284 0
-7424 1994 -17284 0
-7426 1996 -17284 0
7425 -1995 -17284 0
-1982 7412 -17284 0
-1984 7414 -17284 0
-1986 7416 -17284 0
-1988 7418 -17284 0
-1990 7420 -17284 0
-1992 7422 -17284 0
-1994 7424 -17284 0
-1996 7426 -17284 0
1995 -7425 -17284 0
-7412 -1982 17284 0
-7414 -1984 17284 0
-7416 -1986 17284 0
-7418 -1988 17284 0
-7420 -1990 17284 0
-7422 -1992 17284 0
-7424 -1994 17284 0
-7426 -1996 17284 0
7425 1995 17284 0
c ((max_left_00001_00006_00003=max_left_00001_00006_00004)=tv=SATLiteral(17285))
-1982 1997 -17285 0
-1984 1999 -17285 0
-1986 2001 -17285 0
-1988 2003 -17285 0
-1990 2005 -17285 0
-1992 2007 -17285 0
-1994 2009 -17285 0
-1996 2011 -17285 0
1995 -2010 -17285 0
-1997 1982 -17285 0
-1999 1984 -17285 0
-2001 1986 -17285 0
-2003 1988 -17285 0
-2005 1990 -17285 0
-2007 1992 -17285 0
-2009 1994 -17285 0
-2011 1996 -17285 0
2010 -1995 -17285 0
-1982 -1997 17285 0
-1984 -1999 17285 0
-1986 -2001 17285 0
-1988 -2003 17285 0
-1990 -2005 17285 0
-1992 -2007 17285 0
-1994 -2009 17285 0
-1996 -2011 17285 0
1995 2010 17285 0
c ((variant_fields_00001_00006_00004=max_left_00001_00006_00004)=tv=SATLiteral(17286))
-7427 1997 -17286 0
-7429 1999 -17286 0
-7431 2001 -17286 0
-7433 2003 -17286 0
-7435 2005 -17286 0
-7437 2007 -17286 0
-7439 2009 -17286 0
-7441 2011 -17286 0
7440 -2010 -17286 0
-1997 7427 -17286 0
-1999 7429 -17286 0
-2001 7431 -17286 0
-2003 7433 -17286 0
-2005 7435 -17286 0
-2007 7437 -17286 0
-2009 7439 -17286 0
-2011 7441 -17286 0
2010 -7440 -17286 0
-7427 -1997 17286 0
-7429 -1999 17286 0
-7431 -2001 17286 0
-7433 -2003 17286 0
-7435 -2005 17286 0
-7437 -2007 17286 0
-7439 -2009 17286 0
-7441 -2011 17286 0
7440 2010 17286 0
c ((max_left_00001_00006_00004=max_left_00001_00006_00005)=tv=SATLiteral(17287))
-1997 2012 -17287 0
-1999 2014 -17287 0
-2001 2016 -17287 0
-2003 2018 -17287 0
-2005 2020 -17287 0
-2007 2022 -17287 0
-2009 2024 -17287 0
-2011 2026 -17287 0
2010 -2025 -17287 0
-2012 1997 -17287 0
-2014 1999 -17287 0
-2016 2001 -17287 0
-2018 2003 -17287 0
-2020 2005 -17287 0
-2022 2007 -17287 0
-2024 2009 -17287 0
-2026 2011 -17287 0
2025 -2010 -17287 0
-1997 -2012 17287 0
-1999 -2014 17287 0
-2001 -2016 17287 0
-2003 -2018 17287 0
-2005 -2020 17287 0
-2007 -2022 17287 0
-2009 -2024 17287 0
-2011 -2026 17287 0
2010 2025 17287 0
c ((variant_fields_00001_00006_00005=max_left_00001_00006_00005)=tv=SATLiteral(17288))
-7442 2012 -17288 0
-7444 2014 -17288 0
-7446 2016 -17288 0
-7448 2018 -17288 0
-7450 2020 -17288 0
-7452 2022 -17288 0
-7454 2024 -17288 0
-7456 2026 -17288 0
7455 -2025 -17288 0
-2012 7442 -17288 0
-2014 7444 -17288 0
-2016 7446 -17288 0
-2018 7448 -17288 0
-2020 7450 -17288 0
-2022 7452 -17288 0
-2024 7454 -17288 0
-2026 7456 -17288 0
2025 -7455 -17288 0
-7442 -2012 17288 0
-7444 -2014 17288 0
-7446 -2016 17288 0
-7448 -2018 17288 0
-7450 -2020 17288 0
-7452 -2022 17288 0
-7454 -2024 17288 0
-7456 -2026 17288 0
7455 2025 17288 0
c ((max_left_00001_00006_00005=max_left_00001_00006_00006)=tv=SATLiteral(17289))
-2012 2027 -17289 0
-2014 2029 -17289 0
-2016 2031 -17289 0
-2018 2033 -17289 0
-2020 2035 -17289 0
-2022 2037 -17289 0
-2024 2039 -17289 0
-2026 2041 -17289 0
2025 -2040 -17289 0
-2027 2012 -17289 0
-2029 2014 -17289 0
-2031 2016 -17289 0
-2033 2018 -17289 0
-2035 2020 -17289 0
-2037 2022 -17289 0
-2039 2024 -17289 0
-2041 2026 -17289 0
2040 -2025 -17289 0
-2012 -2027 17289 0
-2014 -2029 17289 0
-2016 -2031 17289 0
-2018 -2033 17289 0
-2020 -2035 17289 0
-2022 -2037 17289 0
-2024 -2039 17289 0
-2026 -2041 17289 0
2025 2040 17289 0
c ((variant_fields_00001_00006_00006=max_left_00001_00006_00006)=tv=SATLiteral(17290))
-7457 2027 -17290 0
-7459 2029 -17290 0
-7461 2031 -17290 0
-7463 2033 -17290 0
-7465 2035 -17290 0
-7467 2037 -17290 0
-7469 2039 -17290 0
-7471 2041 -17290 0
7470 -2040 -17290 0
-2027 7457 -17290 0
-2029 7459 -17290 0
-2031 7461 -17290 0
-2033 7463 -17290 0
-2035 7465 -17290 0
-2037 7467 -17290 0
-2039 7469 -17290 0
-2041 7471 -17290 0
2040 -7470 -17290 0
-7457 -2027 17290 0
-7459 -2029 17290 0
-7461 -2031 17290 0
-7463 -2033 17290 0
-7465 -2035 17290 0
-7467 -2037 17290 0
-7469 -2039 17290 0
-7471 -2041 17290 0
7470 2040 17290 0
c ((max_left_00001_00006_00006=max_left_00001_00006_00007)=tv=SATLiteral(17291))
-2027 2042 -17291 0
-2029 2044 -17291 0
-2031 2046 -17291 0
-2033 2048 -17291 0
-2035 2050 -17291 0
-2037 2052 -17291 0
-2039 2054 -17291 0
-2041 2056 -17291 0
2040 -2055 -17291 0
-2042 2027 -17291 0
-2044 2029 -17291 0
-2046 2031 -17291 0
-2048 2033 -17291 0
-2050 2035 -17291 0
-2052 2037 -17291 0
-2054 2039 -17291 0
-2056 2041 -17291 0
2055 -2040 -17291 0
-2027 -2042 17291 0
-2029 -2044 17291 0
-2031 -2046 17291 0
-2033 -2048 17291 0
-2035 -2050 17291 0
-2037 -2052 17291 0
-2039 -2054 17291 0
-2041 -2056 17291 0
2040 2055 17291 0
c ((variant_fields_00001_00006_00007=max_left_00001_00006_00007)=tv=SATLiteral(17292))
-7472 2042 -17292 0
-7474 2044 -17292 0
-7476 2046 -17292 0
-7478 2048 -17292 0
-7480 2050 -17292 0
-7482 2052 -17292 0
-7484 2054 -17292 0
-7486 2056 -17292 0
7485 -2055 -17292 0
-2042 7472 -17292 0
-2044 7474 -17292 0
-2046 7476 -17292 0
-2048 7478 -17292 0
-2050 7480 -17292 0
-2052 7482 -17292 0
-2054 7484 -17292 0
-2056 7486 -17292 0
2055 -7485 -17292 0
-7472 -2042 17292 0
-7474 -2044 17292 0
-7476 -2046 17292 0
-7478 -2048 17292 0
-7480 -2050 17292 0
-7482 -2052 17292 0
-7484 -2054 17292 0
-7486 -2056 17292 0
7485 2055 17292 0
c ((max_left_00001_00006_00007=max_left_00001_00006_00008)=tv=SATLiteral(17293))
-2042 2057 -17293 0
-2044 2059 -17293 0
-2046 2061 -17293 0
-2048 2063 -17293 0
-2050 2065 -17293 0
-2052 2067 -17293 0
-2054 2069 -17293 0
-2056 2071 -17293 0
2055 -2070 -17293 0
-2057 2042 -17293 0
-2059 2044 -17293 0
-2061 2046 -17293 0
-2063 2048 -17293 0
-2065 2050 -17293 0
-2067 2052 -17293 0
-2069 2054 -17293 0
-2071 2056 -17293 0
2070 -2055 -17293 0
-2042 -2057 17293 0
-2044 -2059 17293 0
-2046 -2061 17293 0
-2048 -2063 17293 0
-2050 -2065 17293 0
-2052 -2067 17293 0
-2054 -2069 17293 0
-2056 -2071 17293 0
2055 2070 17293 0
c ((variant_fields_00001_00006_00008=max_left_00001_00006_00008)=tv=SATLiteral(17294))
-7487 2057 -17294 0
-7489 2059 -17294 0
-7491 2061 -17294 0
-7493 2063 -17294 0
-7495 2065 -17294 0
-7497 2067 -17294 0
-7499 2069 -17294 0
-7501 2071 -17294 0
7500 -2070 -17294 0
-2057 7487 -17294 0
-2059 7489 -17294 0
-2061 7491 -17294 0
-2063 7493 -17294 0
-2065 7495 -17294 0
-2067 7497 -17294 0
-2069 7499 -17294 0
-2071 7501 -17294 0
2070 -7500 -17294 0
-7487 -2057 17294 0
-7489 -2059 17294 0
-7491 -2061 17294 0
-7493 -2063 17294 0
-7495 -2065 17294 0
-7497 -2067 17294 0
-7499 -2069 17294 0
-7501 -2071 17294 0
7500 2070 17294 0
c ((max_left_00001_00006_00008=max_left_00001_00006_00009)=tv=SATLiteral(17295))
-2057 2072 -17295 0
-2059 2074 -17295 0
-2061 2076 -17295 0
-2063 2078 -17295 0
-2065 2080 -17295 0
-2067 2082 -17295 0
-2069 2084 -17295 0
-2071 2086 -17295 0
2070 -2085 -17295 0
-2072 2057 -17295 0
-2074 2059 -17295 0
-2076 2061 -17295 0
-2078 2063 -17295 0
-2080 2065 -17295 0
-2082 2067 -17295 0
-2084 2069 -17295 0
-2086 2071 -17295 0
2085 -2070 -17295 0
-2057 -2072 17295 0
-2059 -2074 17295 0
-2061 -2076 17295 0
-2063 -2078 17295 0
-2065 -2080 17295 0
-2067 -2082 17295 0
-2069 -2084 17295 0
-2071 -2086 17295 0
2070 2085 17295 0
c ((variant_fields_00001_00006_00009=max_left_00001_00006_00009)=tv=SATLiteral(17296))
-7502 2072 -17296 0
-7504 2074 -17296 0
-7506 2076 -17296 0
-7508 2078 -17296 0
-7510 2080 -17296 0
-7512 2082 -17296 0
-7514 2084 -17296 0
-7516 2086 -17296 0
7515 -2085 -17296 0
-2072 7502 -17296 0
-2074 7504 -17296 0
-2076 7506 -17296 0
-2078 7508 -17296 0
-2080 7510 -17296 0
-2082 7512 -17296 0
-2084 7514 -17296 0
-2086 7516 -17296 0
2085 -7515 -17296 0
-7502 -2072 17296 0
-7504 -2074 17296 0
-7506 -2076 17296 0
-7508 -2078 17296 0
-7510 -2080 17296 0
-7512 -2082 17296 0
-7514 -2084 17296 0
-7516 -2086 17296 0
7515 2085 17296 0
c ((max_left_00001_00007_00001=max_left_00001_00007_00002)=tv=SATLiteral(17297))
-2088 2103 -17297 0
-2090 2105 -17297 0
-2092 2107 -17297 0
-2094 2109 -17297 0
-2096 2111 -17297 0
-2098 2113 -17297 0
-2100 2115 -17297 0
-2102 2117 -17297 0
2101 -2116 -17297 0
-2103 2088 -17297 0
-2105 2090 -17297 0
-2107 2092 -17297 0
-2109 2094 -17297 0
-2111 2096 -17297 0
-2113 2098 -17297 0
-2115 2100 -17297 0
-2117 2102 -17297 0
2116 -2101 -17297 0
-2088 -2103 17297 0
-2090 -2105 17297 0
-2092 -2107 17297 0
-2094 -2109 17297 0
-2096 -2111 17297 0
-2098 -2113 17297 0
-2100 -2115 17297 0
-2102 -2117 17297 0
2101 2116 17297 0
c ((variant_fields_00001_00007_00002=max_left_00001_00007_00002)=tv=SATLiteral(17298))
-7532 2103 -17298 0
-7534 2105 -17298 0
-7536 2107 -17298 0
-7538 2109 -17298 0
-7540 2111 -17298 0
-7542 2113 -17298 0
-7544 2115 -17298 0
-7546 2117 -17298 0
7545 -2116 -17298 0
-2103 7532 -17298 0
-2105 7534 -17298 0
-2107 7536 -17298 0
-2109 7538 -17298 0
-2111 7540 -17298 0
-2113 7542 -17298 0
-2115 7544 -17298 0
-2117 7546 -17298 0
2116 -7545 -17298 0
-7532 -2103 17298 0
-7534 -2105 17298 0
-7536 -2107 17298 0
-7538 -2109 17298 0
-7540 -2111 17298 0
-7542 -2113 17298 0
-7544 -2115 17298 0
-7546 -2117 17298 0
7545 2116 17298 0
c ((max_left_00001_00007_00002=max_left_00001_00007_00003)=tv=SATLiteral(17299))
-2103 2118 -17299 0
-2105 2120 -17299 0
-2107 2122 -17299 0
-2109 2124 -17299 0
-2111 2126 -17299 0
-2113 2128 -17299 0
-2115 2130 -17299 0
-2117 2132 -17299 0
2116 -2131 -17299 0
-2118 2103 -17299 0
-2120 2105 -17299 0
-2122 2107 -17299 0
-2124 2109 -17299 0
-2126 2111 -17299 0
-2128 2113 -17299 0
-2130 2115 -17299 0
-2132 2117 -17299 0
2131 -2116 -17299 0
-2103 -2118 17299 0
-2105 -2120 17299 0
-2107 -2122 17299 0
-2109 -2124 17299 0
-2111 -2126 17299 0
-2113 -2128 17299 0
-2115 -2130 17299 0
-2117 -2132 17299 0
2116 2131 17299 0
c ((variant_fields_00001_00007_00003=max_left_00001_00007_00003)=tv=SATLiteral(17300))
-7547 2118 -17300 0
-7549 2120 -17300 0
-7551 2122 -17300 0
-7553 2124 -17300 0
-7555 2126 -17300 0
-7557 2128 -17300 0
-7559 2130 -17300 0
-7561 2132 -17300 0
7560 -2131 -17300 0
-2118 7547 -17300 0
-2120 7549 -17300 0
-2122 7551 -17300 0
-2124 7553 -17300 0
-2126 7555 -17300 0
-2128 7557 -17300 0
-2130 7559 -17300 0
-2132 7561 -17300 0
2131 -7560 -17300 0
-7547 -2118 17300 0
-7549 -2120 17300 0
-7551 -2122 17300 0
-7553 -2124 17300 0
-7555 -2126 17300 0
-7557 -2128 17300 0
-7559 -2130 17300 0
-7561 -2132 17300 0
7560 2131 17300 0
c ((max_left_00001_00007_00003=max_left_00001_00007_00004)=tv=SATLiteral(17301))
-2118 2133 -17301 0
-2120 2135 -17301 0
-2122 2137 -17301 0
-2124 2139 -17301 0
-2126 2141 -17301 0
-2128 2143 -17301 0
-2130 2145 -17301 0
-2132 2147 -17301 0
2131 -2146 -17301 0
-2133 2118 -17301 0
-2135 2120 -17301 0
-2137 2122 -17301 0
-2139 2124 -17301 0
-2141 2126 -17301 0
-2143 2128 -17301 0
-2145 2130 -17301 0
-2147 2132 -17301 0
2146 -2131 -17301 0
-2118 -2133 17301 0
-2120 -2135 17301 0
-2122 -2137 17301 0
-2124 -2139 17301 0
-2126 -2141 17301 0
-2128 -2143 17301 0
-2130 -2145 17301 0
-2132 -2147 17301 0
2131 2146 17301 0
c ((variant_fields_00001_00007_00004=max_left_00001_00007_00004)=tv=SATLiteral(17302))
-7562 2133 -17302 0
-7564 2135 -17302 0
-7566 2137 -17302 0
-7568 2139 -17302 0
-7570 2141 -17302 0
-7572 2143 -17302 0
-7574 2145 -17302 0
-7576 2147 -17302 0
7575 -2146 -17302 0
-2133 7562 -17302 0
-2135 7564 -17302 0
-2137 7566 -17302 0
-2139 7568 -17302 0
-2141 7570 -17302 0
-2143 7572 -17302 0
-2145 7574 -17302 0
-2147 7576 -17302 0
2146 -7575 -17302 0
-7562 -2133 17302 0
-7564 -2135 17302 0
-7566 -2137 17302 0
-7568 -2139 17302 0
-7570 -2141 17302 0
-7572 -2143 17302 0
-7574 -2145 17302 0
-7576 -2147 17302 0
7575 2146 17302 0
c ((max_left_00001_00007_00004=max_left_00001_00007_00005)=tv=SATLiteral(17303))
-2133 2148 -17303 0
-2135 2150 -17303 0
-2137 2152 -17303 0
-2139 2154 -17303 0
-2141 2156 -17303 0
-2143 2158 -17303 0
-2145 2160 -17303 0
-2147 2162 -17303 0
2146 -2161 -17303 0
-2148 2133 -17303 0
-2150 2135 -17303 0
-2152 2137 -17303 0
-2154 2139 -17303 0
-2156 2141 -17303 0
-2158 2143 -17303 0
-2160 2145 -17303 0
-2162 2147 -17303 0
2161 -2146 -17303 0
-2133 -2148 17303 0
-2135 -2150 17303 0
-2137 -2152 17303 0
-2139 -2154 17303 0
-2141 -2156 17303 0
-2143 -2158 17303 0
-2145 -2160 17303 0
-2147 -2162 17303 0
2146 2161 17303 0
c ((variant_fields_00001_00007_00005=max_left_00001_00007_00005)=tv=SATLiteral(17304))
-7577 2148 -17304 0
-7579 2150 -17304 0
-7581 2152 -17304 0
-7583 2154 -17304 0
-7585 2156 -17304 0
-7587 2158 -17304 0
-7589 2160 -17304 0
-7591 2162 -17304 0
7590 -2161 -17304 0
-2148 7577 -17304 0
-2150 7579 -17304 0
-2152 7581 -17304 0
-2154 7583 -17304 0
-2156 7585 -17304 0
-2158 7587 -17304 0
-2160 7589 -17304 0
-2162 7591 -17304 0
2161 -7590 -17304 0
-7577 -2148 17304 0
-7579 -2150 17304 0
-7581 -2152 17304 0
-7583 -2154 17304 0
-7585 -2156 17304 0
-7587 -2158 17304 0
-7589 -2160 17304 0
-7591 -2162 17304 0
7590 2161 17304 0
c ((max_left_00001_00007_00005=max_left_00001_00007_00006)=tv=SATLiteral(17305))
-2148 2163 -17305 0
-2150 2165 -17305 0
-2152 2167 -17305 0
-2154 2169 -17305 0
-2156 2171 -17305 0
-2158 2173 -17305 0
-2160 2175 -17305 0
-2162 2177 -17305 0
2161 -2176 -17305 0
-2163 2148 -17305 0
-2165 2150 -17305 0
-2167 2152 -17305 0
-2169 2154 -17305 0
-2171 2156 -17305 0
-2173 2158 -17305 0
-2175 2160 -17305 0
-2177 2162 -17305 0
2176 -2161 -17305 0
-2148 -2163 17305 0
-2150 -2165 17305 0
-2152 -2167 17305 0
-2154 -2169 17305 0
-2156 -2171 17305 0
-2158 -2173 17305 0
-2160 -2175 17305 0
-2162 -2177 17305 0
2161 2176 17305 0
c ((variant_fields_00001_00007_00006=max_left_00001_00007_00006)=tv=SATLiteral(17306))
-7592 2163 -17306 0
-7594 2165 -17306 0
-7596 2167 -17306 0
-7598 2169 -17306 0
-7600 2171 -17306 0
-7602 2173 -17306 0
-7604 2175 -17306 0
-7606 2177 -17306 0
7605 -2176 -17306 0
-2163 7592 -17306 0
-2165 7594 -17306 0
-2167 7596 -17306 0
-2169 7598 -17306 0
-2171 7600 -17306 0
-2173 7602 -17306 0
-2175 7604 -17306 0
-2177 7606 -17306 0
2176 -7605 -17306 0
-7592 -2163 17306 0
-7594 -2165 17306 0
-7596 -2167 17306 0
-7598 -2169 17306 0
-7600 -2171 17306 0
-7602 -2173 17306 0
-7604 -2175 17306 0
-7606 -2177 17306 0
7605 2176 17306 0
c ((max_left_00001_00007_00006=max_left_00001_00007_00007)=tv=SATLiteral(17307))
-2163 2178 -17307 0
-2165 2180 -17307 0
-2167 2182 -17307 0
-2169 2184 -17307 0
-2171 2186 -17307 0
-2173 2188 -17307 0
-2175 2190 -17307 0
-2177 2192 -17307 0
2176 -2191 -17307 0
-2178 2163 -17307 0
-2180 2165 -17307 0
-2182 2167 -17307 0
-2184 2169 -17307 0
-2186 2171 -17307 0
-2188 2173 -17307 0
-2190 2175 -17307 0
-2192 2177 -17307 0
2191 -2176 -17307 0
-2163 -2178 17307 0
-2165 -2180 17307 0
-2167 -2182 17307 0
-2169 -2184 17307 0
-2171 -2186 17307 0
-2173 -2188 17307 0
-2175 -2190 17307 0
-2177 -2192 17307 0
2176 2191 17307 0
c ((variant_fields_00001_00007_00007=max_left_00001_00007_00007)=tv=SATLiteral(17308))
-7607 2178 -17308 0
-7609 2180 -17308 0
-7611 2182 -17308 0
-7613 2184 -17308 0
-7615 2186 -17308 0
-7617 2188 -17308 0
-7619 2190 -17308 0
-7621 2192 -17308 0
7620 -2191 -17308 0
-2178 7607 -17308 0
-2180 7609 -17308 0
-2182 7611 -17308 0
-2184 7613 -17308 0
-2186 7615 -17308 0
-2188 7617 -17308 0
-2190 7619 -17308 0
-2192 7621 -17308 0
2191 -7620 -17308 0
-7607 -2178 17308 0
-7609 -2180 17308 0
-7611 -2182 17308 0
-7613 -2184 17308 0
-7615 -2186 17308 0
-7617 -2188 17308 0
-7619 -2190 17308 0
-7621 -2192 17308 0
7620 2191 17308 0
c ((max_left_00001_00007_00007=max_left_00001_00007_00008)=tv=SATLiteral(17309))
-2178 2193 -17309 0
-2180 2195 -17309 0
-2182 2197 -17309 0
-2184 2199 -17309 0
-2186 2201 -17309 0
-2188 2203 -17309 0
-2190 2205 -17309 0
-2192 2207 -17309 0
2191 -2206 -17309 0
-2193 2178 -17309 0
-2195 2180 -17309 0
-2197 2182 -17309 0
-2199 2184 -17309 0
-2201 2186 -17309 0
-2203 2188 -17309 0
-2205 2190 -17309 0
-2207 2192 -17309 0
2206 -2191 -17309 0
-2178 -2193 17309 0
-2180 -2195 17309 0
-2182 -2197 17309 0
-2184 -2199 17309 0
-2186 -2201 17309 0
-2188 -2203 17309 0
-2190 -2205 17309 0
-2192 -2207 17309 0
2191 2206 17309 0
c ((variant_fields_00001_00007_00008=max_left_00001_00007_00008)=tv=SATLiteral(17310))
-7622 2193 -17310 0
-7624 2195 -17310 0
-7626 2197 -17310 0
-7628 2199 -17310 0
-7630 2201 -17310 0
-7632 2203 -17310 0
-7634 2205 -17310 0
-7636 2207 -17310 0
7635 -2206 -17310 0
-2193 7622 -17310 0
-2195 7624 -17310 0
-2197 7626 -17310 0
-2199 7628 -17310 0
-2201 7630 -17310 0
-2203 7632 -17310 0
-2205 7634 -17310 0
-2207 7636 -17310 0
2206 -7635 -17310 0
-7622 -2193 17310 0
-7624 -2195 17310 0
-7626 -2197 17310 0
-7628 -2199 17310 0
-7630 -2201 17310 0
-7632 -2203 17310 0
-7634 -2205 17310 0
-7636 -2207 17310 0
7635 2206 17310 0
c ((max_left_00001_00007_00008=max_left_00001_00007_00009)=tv=SATLiteral(17311))
-2193 2208 -17311 0
-2195 2210 -17311 0
-2197 2212 -17311 0
-2199 2214 -17311 0
-2201 2216 -17311 0
-2203 2218 -17311 0
-2205 2220 -17311 0
-2207 2222 -17311 0
2206 -2221 -17311 0
-2208 2193 -17311 0
-2210 2195 -17311 0
-2212 2197 -17311 0
-2214 2199 -17311 0
-2216 2201 -17311 0
-2218 2203 -17311 0
-2220 2205 -17311 0
-2222 2207 -17311 0
2221 -2206 -17311 0
-2193 -2208 17311 0
-2195 -2210 17311 0
-2197 -2212 17311 0
-2199 -2214 17311 0
-2201 -2216 17311 0
-2203 -2218 17311 0
-2205 -2220 17311 0
-2207 -2222 17311 0
2206 2221 17311 0
c ((variant_fields_00001_00007_00009=max_left_00001_00007_00009)=tv=SATLiteral(17312))
-7637 2208 -17312 0
-7639 2210 -17312 0
-7641 2212 -17312 0
-7643 2214 -17312 0
-7645 2216 -17312 0
-7647 2218 -17312 0
-7649 2220 -17312 0
-7651 2222 -17312 0
7650 -2221 -17312 0
-2208 7637 -17312 0
-2210 7639 -17312 0
-2212 7641 -17312 0
-2214 7643 -17312 0
-2216 7645 -17312 0
-2218 7647 -17312 0
-2220 7649 -17312 0
-2222 7651 -17312 0
2221 -7650 -17312 0
-7637 -2208 17312 0
-7639 -2210 17312 0
-7641 -2212 17312 0
-7643 -2214 17312 0
-7645 -2216 17312 0
-7647 -2218 17312 0
-7649 -2220 17312 0
-7651 -2222 17312 0
7650 2221 17312 0
c ((max_left_00001_00008_00001=max_left_00001_00008_00002)=tv=SATLiteral(17313))
-2224 2239 -17313 0
-2226 2241 -17313 0
-2228 2243 -17313 0
-2230 2245 -17313 0
-2232 2247 -17313 0
-2234 2249 -17313 0
-2236 2251 -17313 0
-2238 2253 -17313 0
2237 -2252 -17313 0
-2239 2224 -17313 0
-2241 2226 -17313 0
-2243 2228 -17313 0
-2245 2230 -17313 0
-2247 2232 -17313 0
-2249 2234 -17313 0
-2251 2236 -17313 0
-2253 2238 -17313 0
2252 -2237 -17313 0
-2224 -2239 17313 0
-2226 -2241 17313 0
-2228 -2243 17313 0
-2230 -2245 17313 0
-2232 -2247 17313 0
-2234 -2249 17313 0
-2236 -2251 17313 0
-2238 -2253 17313 0
2237 2252 17313 0
c ((variant_fields_00001_00008_00002=max_left_00001_00008_00002)=tv=SATLiteral(17314))
-7667 2239 -17314 0
-7669 2241 -17314 0
-7671 2243 -17314 0
-7673 2245 -17314 0
-7675 2247 -17314 0
-7677 2249 -17314 0
-7679 2251 -17314 0
-7681 2253 -17314 0
7680 -2252 -17314 0
-2239 7667 -17314 0
-2241 7669 -17314 0
-2243 7671 -17314 0
-2245 7673 -17314 0
-2247 7675 -17314 0
-2249 7677 -17314 0
-2251 7679 -17314 0
-2253 7681 -17314 0
2252 -7680 -17314 0
-7667 -2239 17314 0
-7669 -2241 17314 0
-7671 -2243 17314 0
-7673 -2245 17314 0
-7675 -2247 17314 0
-7677 -2249 17314 0
-7679 -2251 17314 0
-7681 -2253 17314 0
7680 2252 17314 0
c ((max_left_00001_00008_00002=max_left_00001_00008_00003)=tv=SATLiteral(17315))
-2239 2254 -17315 0
-2241 2256 -17315 0
-2243 2258 -17315 0
-2245 2260 -17315 0
-2247 2262 -17315 0
-2249 2264 -17315 0
-2251 2266 -17315 0
-2253 2268 -17315 0
2252 -2267 -17315 0
-2254 2239 -17315 0
-2256 2241 -17315 0
-2258 2243 -17315 0
-2260 2245 -17315 0
-2262 2247 -17315 0
-2264 2249 -17315 0
-2266 2251 -17315 0
-2268 2253 -17315 0
2267 -2252 -17315 0
-2239 -2254 17315 0
-2241 -2256 17315 0
-2243 -2258 17315 0
-2245 -2260 17315 0
-2247 -2262 17315 0
-2249 -2264 17315 0
-2251 -2266 17315 0
-2253 -2268 17315 0
2252 2267 17315 0
c ((variant_fields_00001_00008_00003=max_left_00001_00008_00003)=tv=SATLiteral(17316))
-7682 2254 -17316 0
-7684 2256 -17316 0
-7686 2258 -17316 0
-7688 2260 -17316 0
-7690 2262 -17316 0
-7692 2264 -17316 0
-7694 2266 -17316 0
-7696 2268 -17316 0
7695 -2267 -17316 0
-2254 7682 -17316 0
-2256 7684 -17316 0
-2258 7686 -17316 0
-2260 7688 -17316 0
-2262 7690 -17316 0
-2264 7692 -17316 0
-2266 7694 -17316 0
-2268 7696 -17316 0
2267 -7695 -17316 0
-7682 -2254 17316 0
-7684 -2256 17316 0
-7686 -2258 17316 0
-7688 -2260 17316 0
-7690 -2262 17316 0
-7692 -2264 17316 0
-7694 -2266 17316 0
-7696 -2268 17316 0
7695 2267 17316 0
c ((max_left_00001_00008_00003=max_left_00001_00008_00004)=tv=SATLiteral(17317))
-2254 2269 -17317 0
-2256 2271 -17317 0
-2258 2273 -17317 0
-2260 2275 -17317 0
-2262 2277 -17317 0
-2264 2279 -17317 0
-2266 2281 -17317 0
-2268 2283 -17317 0
2267 -2282 -17317 0
-2269 2254 -17317 0
-2271 2256 -17317 0
-2273 2258 -17317 0
-2275 2260 -17317 0
-2277 2262 -17317 0
-2279 2264 -17317 0
-2281 2266 -17317 0
-2283 2268 -17317 0
2282 -2267 -17317 0
-2254 -2269 17317 0
-2256 -2271 17317 0
-2258 -2273 17317 0
-2260 -2275 17317 0
-2262 -2277 17317 0
-2264 -2279 17317 0
-2266 -2281 17317 0
-2268 -2283 17317 0
2267 2282 17317 0
c ((variant_fields_00001_00008_00004=max_left_00001_00008_00004)=tv=SATLiteral(17318))
-7697 2269 -17318 0
-7699 2271 -17318 0
-7701 2273 -17318 0
-7703 2275 -17318 0
-7705 2277 -17318 0
-7707 2279 -17318 0
-7709 2281 -17318 0
-7711 2283 -17318 0
7710 -2282 -17318 0
-2269 7697 -17318 0
-2271 7699 -17318 0
-2273 7701 -17318 0
-2275 7703 -17318 0
-2277 7705 -17318 0
-2279 7707 -17318 0
-2281 7709 -17318 0
-2283 7711 -17318 0
2282 -7710 -17318 0
-7697 -2269 17318 0
-7699 -2271 17318 0
-7701 -2273 17318 0
-7703 -2275 17318 0
-7705 -2277 17318 0
-7707 -2279 17318 0
-7709 -2281 17318 0
-7711 -2283 17318 0
7710 2282 17318 0
c ((max_left_00001_00008_00004=max_left_00001_00008_00005)=tv=SATLiteral(17319))
-2269 2284 -17319 0
-2271 2286 -17319 0
-2273 2288 -17319 0
-2275 2290 -17319 0
-2277 2292 -17319 0
-2279 2294 -17319 0
-2281 2296 -17319 0
-2283 2298 -17319 0
2282 -2297 -17319 0
-2284 2269 -17319 0
-2286 2271 -17319 0
-2288 2273 -17319 0
-2290 2275 -17319 0
-2292 2277 -17319 0
-2294 2279 -17319 0
-2296 2281 -17319 0
-2298 2283 -17319 0
2297 -2282 -17319 0
-2269 -2284 17319 0
-2271 -2286 17319 0
-2273 -2288 17319 0
-2275 -2290 17319 0
-2277 -2292 17319 0
-2279 -2294 17319 0
-2281 -2296 17319 0
-2283 -2298 17319 0
2282 2297 17319 0
c ((variant_fields_00001_00008_00005=max_left_00001_00008_00005)=tv=SATLiteral(17320))
-7712 2284 -17320 0
-7714 2286 -17320 0
-7716 2288 -17320 0
-7718 2290 -17320 0
-7720 2292 -17320 0
-7722 2294 -17320 0
-7724 2296 -17320 0
-7726 2298 -17320 0
7725 -2297 -17320 0
-2284 7712 -17320 0
-2286 7714 -17320 0
-2288 7716 -17320 0
-2290 7718 -17320 0
-2292 7720 -17320 0
-2294 7722 -17320 0
-2296 7724 -17320 0
-2298 7726 -17320 0
2297 -7725 -17320 0
-7712 -2284 17320 0
-7714 -2286 17320 0
-7716 -2288 17320 0
-7718 -2290 17320 0
-7720 -2292 17320 0
-7722 -2294 17320 0
-7724 -2296 17320 0
-7726 -2298 17320 0
7725 2297 17320 0
c ((max_left_00001_00008_00005=max_left_00001_00008_00006)=tv=SATLiteral(17321))
-2284 2299 -17321 0
-2286 2301 -17321 0
-2288 2303 -17321 0
-2290 2305 -17321 0
-2292 2307 -17321 0
-2294 2309 -17321 0
-2296 2311 -17321 0
-2298 2313 -17321 0
2297 -2312 -17321 0
-2299 2284 -17321 0
-2301 2286 -17321 0
-2303 2288 -17321 0
-2305 2290 -17321 0
-2307 2292 -17321 0
-2309 2294 -17321 0
-2311 2296 -17321 0
-2313 2298 -17321 0
2312 -2297 -17321 0
-2284 -2299 17321 0
-2286 -2301 17321 0
-2288 -2303 17321 0
-2290 -2305 17321 0
-2292 -2307 17321 0
-2294 -2309 17321 0
-2296 -2311 17321 0
-2298 -2313 17321 0
2297 2312 17321 0
c ((variant_fields_00001_00008_00006=max_left_00001_00008_00006)=tv=SATLiteral(17322))
-7727 2299 -17322 0
-7729 2301 -17322 0
-7731 2303 -17322 0
-7733 2305 -17322 0
-7735 2307 -17322 0
-7737 2309 -17322 0
-7739 2311 -17322 0
-7741 2313 -17322 0
7740 -2312 -17322 0
-2299 7727 -17322 0
-2301 7729 -17322 0
-2303 7731 -17322 0
-2305 7733 -17322 0
-2307 7735 -17322 0
-2309 7737 -17322 0
-2311 7739 -17322 0
-2313 7741 -17322 0
2312 -7740 -17322 0
-7727 -2299 17322 0
-7729 -2301 17322 0
-7731 -2303 17322 0
-7733 -2305 17322 0
-7735 -2307 17322 0
-7737 -2309 17322 0
-7739 -2311 17322 0
-7741 -2313 17322 0
7740 2312 17322 0
c ((max_left_00001_00008_00006=max_left_00001_00008_00007)=tv=SATLiteral(17323))
-2299 2314 -17323 0
-2301 2316 -17323 0
-2303 2318 -17323 0
-2305 2320 -17323 0
-2307 2322 -17323 0
-2309 2324 -17323 0
-2311 2326 -17323 0
-2313 2328 -17323 0
2312 -2327 -17323 0
-2314 2299 -17323 0
-2316 2301 -17323 0
-2318 2303 -17323 0
-2320 2305 -17323 0
-2322 2307 -17323 0
-2324 2309 -17323 0
-2326 2311 -17323 0
-2328 2313 -17323 0
2327 -2312 -17323 0
-2299 -2314 17323 0
-2301 -2316 17323 0
-2303 -2318 17323 0
-2305 -2320 17323 0
-2307 -2322 17323 0
-2309 -2324 17323 0
-2311 -2326 17323 0
-2313 -2328 17323 0
2312 2327 17323 0
c ((variant_fields_00001_00008_00007=max_left_00001_00008_00007)=tv=SATLiteral(17324))
-7742 2314 -17324 0
-7744 2316 -17324 0
-7746 2318 -17324 0
-7748 2320 -17324 0
-7750 2322 -17324 0
-7752 2324 -17324 0
-7754 2326 -17324 0
-7756 2328 -17324 0
7755 -2327 -17324 0
-2314 7742 -17324 0
-2316 7744 -17324 0
-2318 7746 -17324 0
-2320 7748 -17324 0
-2322 7750 -17324 0
-2324 7752 -17324 0
-2326 7754 -17324 0
-2328 7756 -17324 0
2327 -7755 -17324 0
-7742 -2314 17324 0
-7744 -2316 17324 0
-7746 -2318 17324 0
-7748 -2320 17324 0
-7750 -2322 17324 0
-7752 -2324 17324 0
-7754 -2326 17324 0
-7756 -2328 17324 0
7755 2327 17324 0
c ((max_left_00001_00008_00007=max_left_00001_00008_00008)=tv=SATLiteral(17325))
-2314 2329 -17325 0
-2316 2331 -17325 0
-2318 2333 -17325 0
-2320 2335 -17325 0
-2322 2337 -17325 0
-2324 2339 -17325 0
-2326 2341 -17325 0
-2328 2343 -17325 0
2327 -2342 -17325 0
-2329 2314 -17325 0
-2331 2316 -17325 0
-2333 2318 -17325 0
-2335 2320 -17325 0
-2337 2322 -17325 0
-2339 2324 -17325 0
-2341 2326 -17325 0
-2343 2328 -17325 0
2342 -2327 -17325 0
-2314 -2329 17325 0
-2316 -2331 17325 0
-2318 -2333 17325 0
-2320 -2335 17325 0
-2322 -2337 17325 0
-2324 -2339 17325 0
-2326 -2341 17325 0
-2328 -2343 17325 0
2327 2342 17325 0
c ((variant_fields_00001_00008_00008=max_left_00001_00008_00008)=tv=SATLiteral(17326))
-7757 2329 -17326 0
-7759 2331 -17326 0
-7761 2333 -17326 0
-7763 2335 -17326 0
-7765 2337 -17326 0
-7767 2339 -17326 0
-7769 2341 -17326 0
-7771 2343 -17326 0
7770 -2342 -17326 0
-2329 7757 -17326 0
-2331 7759 -17326 0
-2333 7761 -17326 0
-2335 7763 -17326 0
-2337 7765 -17326 0
-2339 7767 -17326 0
-2341 7769 -17326 0
-2343 7771 -17326 0
2342 -7770 -17326 0
-7757 -2329 17326 0
-7759 -2331 17326 0
-7761 -2333 17326 0
-7763 -2335 17326 0
-7765 -2337 17326 0
-7767 -2339 17326 0
-7769 -2341 17326 0
-7771 -2343 17326 0
7770 2342 17326 0
c ((max_left_00001_00008_00008=max_left_00001_00008_00009)=tv=SATLiteral(17327))
-2329 2344 -17327 0
-2331 2346 -17327 0
-2333 2348 -17327 0
-2335 2350 -17327 0
-2337 2352 -17327 0
-2339 2354 -17327 0
-2341 2356 -17327 0
-2343 2358 -17327 0
2342 -2357 -17327 0
-2344 2329 -17327 0
-2346 2331 -17327 0
-2348 2333 -17327 0
-2350 2335 -17327 0
-2352 2337 -17327 0
-2354 2339 -17327 0
-2356 2341 -17327 0
-2358 2343 -17327 0
2357 -2342 -17327 0
-2329 -2344 17327 0
-2331 -2346 17327 0
-2333 -2348 17327 0
-2335 -2350 17327 0
-2337 -2352 17327 0
-2339 -2354 17327 0
-2341 -2356 17327 0
-2343 -2358 17327 0
2342 2357 17327 0
c ((variant_fields_00001_00008_00009=max_left_00001_00008_00009)=tv=SATLiteral(17328))
-7772 2344 -17328 0
-7774 2346 -17328 0
-7776 2348 -17328 0
-7778 2350 -17328 0
-7780 2352 -17328 0
-7782 2354 -17328 0
-7784 2356 -17328 0
-7786 2358 -17328 0
7785 -2357 -17328 0
-2344 7772 -17328 0
-2346 7774 -17328 0
-2348 7776 -17328 0
-2350 7778 -17328 0
-2352 7780 -17328 0
-2354 7782 -17328 0
-2356 7784 -17328 0
-2358 7786 -17328 0
2357 -7785 -17328 0
-7772 -2344 17328 0
-7774 -2346 17328 0
-7776 -2348 17328 0
-7778 -2350 17328 0
-7780 -2352 17328 0
-7782 -2354 17328 0
-7784 -2356 17328 0
-7786 -2358 17328 0
7785 2357 17328 0
c ((max_left_00001_00009_00001=max_left_00001_00009_00002)=tv=SATLiteral(17329))
-2360 2375 -17329 0
-2362 2377 -17329 0
-2364 2379 -17329 0
-2366 2381 -17329 0
-2368 2383 -17329 0
-2370 2385 -17329 0
-2372 2387 -17329 0
-2374 2389 -17329 0
2373 -2388 -17329 0
-2375 2360 -17329 0
-2377 2362 -17329 0
-2379 2364 -17329 0
-2381 2366 -17329 0
-2383 2368 -17329 0
-2385 2370 -17329 0
-2387 2372 -17329 0
-2389 2374 -17329 0
2388 -2373 -17329 0
-2360 -2375 17329 0
-2362 -2377 17329 0
-2364 -2379 17329 0
-2366 -2381 17329 0
-2368 -2383 17329 0
-2370 -2385 17329 0
-2372 -2387 17329 0
-2374 -2389 17329 0
2373 2388 17329 0
c ((variant_fields_00001_00009_00002=max_left_00001_00009_00002)=tv=SATLiteral(17330))
-7802 2375 -17330 0
-7804 2377 -17330 0
-7806 2379 -17330 0
-7808 2381 -17330 0
-7810 2383 -17330 0
-7812 2385 -17330 0
-7814 2387 -17330 0
-7816 2389 -17330 0
7815 -2388 -17330 0
-2375 7802 -17330 0
-2377 7804 -17330 0
-2379 7806 -17330 0
-2381 7808 -17330 0
-2383 7810 -17330 0
-2385 7812 -17330 0
-2387 7814 -17330 0
-2389 7816 -17330 0
2388 -7815 -17330 0
-7802 -2375 17330 0
-7804 -2377 17330 0
-7806 -2379 17330 0
-7808 -2381 17330 0
-7810 -2383 17330 0
-7812 -2385 17330 0
-7814 -2387 17330 0
-7816 -2389 17330 0
7815 2388 17330 0
c ((max_left_00001_00009_00002=max_left_00001_00009_00003)=tv=SATLiteral(17331))
-2375 2390 -17331 0
-2377 2392 -17331 0
-2379 2394 -17331 0
-2381 2396 -17331 0
-2383 2398 -17331 0
-2385 2400 -17331 0
-2387 2402 -17331 0
-2389 2404 -17331 0
2388 -2403 -17331 0
-2390 2375 -17331 0
-2392 2377 -17331 0
-2394 2379 -17331 0
-2396 2381 -17331 0
-2398 2383 -17331 0
-2400 2385 -17331 0
-2402 2387 -17331 0
-2404 2389 -17331 0
2403 -2388 -17331 0
-2375 -2390 17331 0
-2377 -2392 17331 0
-2379 -2394 17331 0
-2381 -2396 17331 0
-2383 -2398 17331 0
-2385 -2400 17331 0
-2387 -2402 17331 0
-2389 -2404 17331 0
2388 2403 17331 0
c ((variant_fields_00001_00009_00003=max_left_00001_00009_00003)=tv=SATLiteral(17332))
-7817 2390 -17332 0
-7819 2392 -17332 0
-7821 2394 -17332 0
-7823 2396 -17332 0
-7825 2398 -17332 0
-7827 2400 -17332 0
-7829 2402 -17332 0
-7831 2404 -17332 0
7830 -2403 -17332 0
-2390 7817 -17332 0
-2392 7819 -17332 0
-2394 7821 -17332 0
-2396 7823 -17332 0
-2398 7825 -17332 0
-2400 7827 -17332 0
-2402 7829 -17332 0
-2404 7831 -17332 0
2403 -7830 -17332 0
-7817 -2390 17332 0
-7819 -2392 17332 0
-7821 -2394 17332 0
-7823 -2396 17332 0
-7825 -2398 17332 0
-7827 -2400 17332 0
-7829 -2402 17332 0
-7831 -2404 17332 0
7830 2403 17332 0
c ((max_left_00001_00009_00003=max_left_00001_00009_00004)=tv=SATLiteral(17333))
-2390 2405 -17333 0
-2392 2407 -17333 0
-2394 2409 -17333 0
-2396 2411 -17333 0
-2398 2413 -17333 0
-2400 2415 -17333 0
-2402 2417 -17333 0
-2404 2419 -17333 0
2403 -2418 -17333 0
-2405 2390 -17333 0
-2407 2392 -17333 0
-2409 2394 -17333 0
-2411 2396 -17333 0
-2413 2398 -17333 0
-2415 2400 -17333 0
-2417 2402 -17333 0
-2419 2404 -17333 0
2418 -2403 -17333 0
-2390 -2405 17333 0
-2392 -2407 17333 0
-2394 -2409 17333 0
-2396 -2411 17333 0
-2398 -2413 17333 0
-2400 -2415 17333 0
-2402 -2417 17333 0
-2404 -2419 17333 0
2403 2418 17333 0
c ((variant_fields_00001_00009_00004=max_left_00001_00009_00004)=tv=SATLiteral(17334))
-7832 2405 -17334 0
-7834 2407 -17334 0
-7836 2409 -17334 0
-7838 2411 -17334 0
-7840 2413 -17334 0
-7842 2415 -17334 0
-7844 2417 -17334 0
-7846 2419 -17334 0
7845 -2418 -17334 0
-2405 7832 -17334 0
-2407 7834 -17334 0
-2409 7836 -17334 0
-2411 7838 -17334 0
-2413 7840 -17334 0
-2415 7842 -17334 0
-2417 7844 -17334 0
-2419 7846 -17334 0
2418 -7845 -17334 0
-7832 -2405 17334 0
-7834 -2407 17334 0
-7836 -2409 17334 0
-7838 -2411 17334 0
-7840 -2413 17334 0
-7842 -2415 17334 0
-7844 -2417 17334 0
-7846 -2419 17334 0
7845 2418 17334 0
c ((max_left_00001_00009_00004=max_left_00001_00009_00005)=tv=SATLiteral(17335))
-2405 2420 -17335 0
-2407 2422 -17335 0
-2409 2424 -17335 0
-2411 2426 -17335 0
-2413 2428 -17335 0
-2415 2430 -17335 0
-2417 2432 -17335 0
-2419 2434 -17335 0
2418 -2433 -17335 0
-2420 2405 -17335 0
-2422 2407 -17335 0
-2424 2409 -17335 0
-2426 2411 -17335 0
-2428 2413 -17335 0
-2430 2415 -17335 0
-2432 2417 -17335 0
-2434 2419 -17335 0
2433 -2418 -17335 0
-2405 -2420 17335 0
-2407 -2422 17335 0
-2409 -2424 17335 0
-2411 -2426 17335 0
-2413 -2428 17335 0
-2415 -2430 17335 0
-2417 -2432 17335 0
-2419 -2434 17335 0
2418 2433 17335 0
c ((variant_fields_00001_00009_00005=max_left_00001_00009_00005)=tv=SATLiteral(17336))
-7847 2420 -17336 0
-7849 2422 -17336 0
-7851 2424 -17336 0
-7853 2426 -17336 0
-7855 2428 -17336 0
-7857 2430 -17336 0
-7859 2432 -17336 0
-7861 2434 -17336 0
7860 -2433 -17336 0
-2420 7847 -17336 0
-2422 7849 -17336 0
-2424 7851 -17336 0
-2426 7853 -17336 0
-2428 7855 -17336 0
-2430 7857 -17336 0
-2432 7859 -17336 0
-2434 7861 -17336 0
2433 -7860 -17336 0
-7847 -2420 17336 0
-7849 -2422 17336 0
-7851 -2424 17336 0
-7853 -2426 17336 0
-7855 -2428 17336 0
-7857 -2430 17336 0
-7859 -2432 17336 0
-7861 -2434 17336 0
7860 2433 17336 0
c ((max_left_00001_00009_00005=max_left_00001_00009_00006)=tv=SATLiteral(17337))
-2420 2435 -17337 0
-2422 2437 -17337 0
-2424 2439 -17337 0
-2426 2441 -17337 0
-2428 2443 -17337 0
-2430 2445 -17337 0
-2432 2447 -17337 0
-2434 2449 -17337 0
2433 -2448 -17337 0
-2435 2420 -17337 0
-2437 2422 -17337 0
-2439 2424 -17337 0
-2441 2426 -17337 0
-2443 2428 -17337 0
-2445 2430 -17337 0
-2447 2432 -17337 0
-2449 2434 -17337 0
2448 -2433 -17337 0
-2420 -2435 17337 0
-2422 -2437 17337 0
-2424 -2439 17337 0
-2426 -2441 17337 0
-2428 -2443 17337 0
-2430 -2445 17337 0
-2432 -2447 17337 0
-2434 -2449 17337 0
2433 2448 17337 0
c ((variant_fields_00001_00009_00006=max_left_00001_00009_00006)=tv=SATLiteral(17338))
-7862 2435 -17338 0
-7864 2437 -17338 0
-7866 2439 -17338 0
-7868 2441 -17338 0
-7870 2443 -17338 0
-7872 2445 -17338 0
-7874 2447 -17338 0
-7876 2449 -17338 0
7875 -2448 -17338 0
-2435 7862 -17338 0
-2437 7864 -17338 0
-2439 7866 -17338 0
-2441 7868 -17338 0
-2443 7870 -17338 0
-2445 7872 -17338 0
-2447 7874 -17338 0
-2449 7876 -17338 0
2448 -7875 -17338 0
-7862 -2435 17338 0
-7864 -2437 17338 0
-7866 -2439 17338 0
-7868 -2441 17338 0
-7870 -2443 17338 0
-7872 -2445 17338 0
-7874 -2447 17338 0
-7876 -2449 17338 0
7875 2448 17338 0
c ((max_left_00001_00009_00006=max_left_00001_00009_00007)=tv=SATLiteral(17339))
-2435 2450 -17339 0
-2437 2452 -17339 0
-2439 2454 -17339 0
-2441 2456 -17339 0
-2443 2458 -17339 0
-2445 2460 -17339 0
-2447 2462 -17339 0
-2449 2464 -17339 0
2448 -2463 -17339 0
-2450 2435 -17339 0
-2452 2437 -17339 0
-2454 2439 -17339 0
-2456 2441 -17339 0
-2458 2443 -17339 0
-2460 2445 -17339 0
-2462 2447 -17339 0
-2464 2449 -17339 0
2463 -2448 -17339 0
-2435 -2450 17339 0
-2437 -2452 17339 0
-2439 -2454 17339 0
-2441 -2456 17339 0
-2443 -2458 17339 0
-2445 -2460 17339 0
-2447 -2462 17339 0
-2449 -2464 17339 0
2448 2463 17339 0
c ((variant_fields_00001_00009_00007=max_left_00001_00009_00007)=tv=SATLiteral(17340))
-7877 2450 -17340 0
-7879 2452 -17340 0
-7881 2454 -17340 0
-7883 2456 -17340 0
-7885 2458 -17340 0
-7887 2460 -17340 0
-7889 2462 -17340 0
-7891 2464 -17340 0
7890 -2463 -17340 0
-2450 7877 -17340 0
-2452 7879 -17340 0
-2454 7881 -17340 0
-2456 7883 -17340 0
-2458 7885 -17340 0
-2460 7887 -17340 0
-2462 7889 -17340 0
-2464 7891 -17340 0
2463 -7890 -17340 0
-7877 -2450 17340 0
-7879 -2452 17340 0
-7881 -2454 17340 0
-7883 -2456 17340 0
-7885 -2458 17340 0
-7887 -2460 17340 0
-7889 -2462 17340 0
-7891 -2464 17340 0
7890 2463 17340 0
c ((max_left_00001_00009_00007=max_left_00001_00009_00008)=tv=SATLiteral(17341))
-2450 2465 -17341 0
-2452 2467 -17341 0
-2454 2469 -17341 0
-2456 2471 -17341 0
-2458 2473 -17341 0
-2460 2475 -17341 0
-2462 2477 -17341 0
-2464 2479 -17341 0
2463 -2478 -17341 0
-2465 2450 -17341 0
-2467 2452 -17341 0
-2469 2454 -17341 0
-2471 2456 -17341 0
-2473 2458 -17341 0
-2475 2460 -17341 0
-2477 2462 -17341 0
-2479 2464 -17341 0
2478 -2463 -17341 0
-2450 -2465 17341 0
-2452 -2467 17341 0
-2454 -2469 17341 0
-2456 -2471 17341 0
-2458 -2473 17341 0
-2460 -2475 17341 0
-2462 -2477 17341 0
-2464 -2479 17341 0
2463 2478 17341 0
c ((variant_fields_00001_00009_00008=max_left_00001_00009_00008)=tv=SATLiteral(17342))
-7892 2465 -17342 0
-7894 2467 -17342 0
-7896 2469 -17342 0
-7898 2471 -17342 0
-7900 2473 -17342 0
-7902 2475 -17342 0
-7904 2477 -17342 0
-7906 2479 -17342 0
7905 -2478 -17342 0
-2465 7892 -17342 0
-2467 7894 -17342 0
-2469 7896 -17342 0
-2471 7898 -17342 0
-2473 7900 -17342 0
-2475 7902 -17342 0
-2477 7904 -17342 0
-2479 7906 -17342 0
2478 -7905 -17342 0
-7892 -2465 17342 0
-7894 -2467 17342 0
-7896 -2469 17342 0
-7898 -2471 17342 0
-7900 -2473 17342 0
-7902 -2475 17342 0
-7904 -2477 17342 0
-7906 -2479 17342 0
7905 2478 17342 0
c ((max_left_00001_00009_00008=max_left_00001_00009_00009)=tv=SATLiteral(17343))
-2465 2480 -17343 0
-2467 2482 -17343 0
-2469 2484 -17343 0
-2471 2486 -17343 0
-2473 2488 -17343 0
-2475 2490 -17343 0
-2477 2492 -17343 0
-2479 2494 -17343 0
2478 -2493 -17343 0
-2480 2465 -17343 0
-2482 2467 -17343 0
-2484 2469 -17343 0
-2486 2471 -17343 0
-2488 2473 -17343 0
-2490 2475 -17343 0
-2492 2477 -17343 0
-2494 2479 -17343 0
2493 -2478 -17343 0
-2465 -2480 17343 0
-2467 -2482 17343 0
-2469 -2484 17343 0
-2471 -2486 17343 0
-2473 -2488 17343 0
-2475 -2490 17343 0
-2477 -2492 17343 0
-2479 -2494 17343 0
2478 2493 17343 0
c ((variant_fields_00001_00009_00009=max_left_00001_00009_00009)=tv=SATLiteral(17344))
-7907 2480 -17344 0
-7909 2482 -17344 0
-7911 2484 -17344 0
-7913 2486 -17344 0
-7915 2488 -17344 0
-7917 2490 -17344 0
-7919 2492 -17344 0
-7921 2494 -17344 0
7920 -2493 -17344 0
-2480 7907 -17344 0
-2482 7909 -17344 0
-2484 7911 -17344 0
-2486 7913 -17344 0
-2488 7915 -17344 0
-2490 7917 -17344 0
-2492 7919 -17344 0
-2494 7921 -17344 0
2493 -7920 -17344 0
-7907 -2480 17344 0
-7909 -2482 17344 0
-7911 -2484 17344 0
-7913 -2486 17344 0
-7915 -2488 17344 0
-7917 -2490 17344 0
-7919 -2492 17344 0
-7921 -2494 17344 0
7920 2493 17344 0
c ((max_left_00002_00001_00001=max_left_00002_00001_00002)=tv=SATLiteral(17345))
-2496 2511 -17345 0
-2498 2513 -17345 0
-2500 2515 -17345 0
-2502 2517 -17345 0
-2504 2519 -17345 0
-2506 2521 -17345 0
-2508 2523 -17345 0
-2510 2525 -17345 0
2509 -2524 -17345 0
-2511 2496 -17345 0
-2513 2498 -17345 0
-2515 2500 -17345 0
-2517 2502 -17345 0
-2519 2504 -17345 0
-2521 2506 -17345 0
-2523 2508 -17345 0
-2525 2510 -17345 0
2524 -2509 -17345 0
-2496 -2511 17345 0
-2498 -2513 17345 0
-2500 -2515 17345 0
-2502 -2517 17345 0
-2504 -2519 17345 0
-2506 -2521 17345 0
-2508 -2523 17345 0
-2510 -2525 17345 0
2509 2524 17345 0
c ((variant_fields_00002_00001_00002=max_left_00002_00001_00002)=tv=SATLiteral(17346))
-7937 2511 -17346 0
-7939 2513 -17346 0
-7941 2515 -17346 0
-7943 2517 -17346 0
-7945 2519 -17346 0
-7947 2521 -17346 0
-7949 2523 -17346 0
-7951 2525 -17346 0
7950 -2524 -17346 0
-2511 7937 -17346 0
-2513 7939 -17346 0
-2515 7941 -17346 0
-2517 7943 -17346 0
-2519 7945 -17346 0
-2521 7947 -17346 0
-2523 7949 -17346 0
-2525 7951 -17346 0
2524 -7950 -17346 0
-7937 -2511 17346 0
-7939 -2513 17346 0
-7941 -2515 17346 0
-7943 -2517 17346 0
-7945 -2519 17346 0
-7947 -2521 17346 0
-7949 -2523 17346 0
-7951 -2525 17346 0
7950 2524 17346 0
c ((max_left_00002_00001_00002=max_left_00002_00001_00003)=tv=SATLiteral(17347))
-2511 2526 -17347 0
-2513 2528 -17347 0
-2515 2530 -17347 0
-2517 2532 -17347 0
-2519 2534 -17347 0
-2521 2536 -17347 0
-2523 2538 -17347 0
-2525 2540 -17347 0
2524 -2539 -17347 0
-2526 2511 -17347 0
-2528 2513 -17347 0
-2530 2515 -17347 0
-2532 2517 -17347 0
-2534 2519 -17347 0
-2536 2521 -17347 0
-2538 2523 -17347 0
-2540 2525 -17347 0
2539 -2524 -17347 0
-2511 -2526 17347 0
-2513 -2528 17347 0
-2515 -2530 17347 0
-2517 -2532 17347 0
-2519 -2534 17347 0
-2521 -2536 17347 0
-2523 -2538 17347 0
-2525 -2540 17347 0
2524 2539 17347 0
c ((variant_fields_00002_00001_00003=max_left_00002_00001_00003)=tv=SATLiteral(17348))
-7952 2526 -17348 0
-7954 2528 -17348 0
-7956 2530 -17348 0
-7958 2532 -17348 0
-7960 2534 -17348 0
-7962 2536 -17348 0
-7964 2538 -17348 0
-7966 2540 -17348 0
7965 -2539 -17348 0
-2526 7952 -17348 0
-2528 7954 -17348 0
-2530 7956 -17348 0
-2532 7958 -17348 0
-2534 7960 -17348 0
-2536 7962 -17348 0
-2538 7964 -17348 0
-2540 7966 -17348 0
2539 -7965 -17348 0
-7952 -2526 17348 0
-7954 -2528 17348 0
-7956 -2530 17348 0
-7958 -2532 17348 0
-7960 -2534 17348 0
-7962 -2536 17348 0
-7964 -2538 17348 0
-7966 -2540 17348 0
7965 2539 17348 0
c ((max_left_00002_00001_00003=max_left_00002_00001_00004)=tv=SATLiteral(17349))
-2526 2541 -17349 0
-2528 2543 -17349 0
-2530 2545 -17349 0
-2532 2547 -17349 0
-2534 2549 -17349 0
-2536 2551 -17349 0
-2538 2553 -17349 0
-2540 2555 -17349 0
2539 -2554 -17349 0
-2541 2526 -17349 0
-2543 2528 -17349 0
-2545 2530 -17349 0
-2547 2532 -17349 0
-2549 2534 -17349 0
-2551 2536 -17349 0
-2553 2538 -17349 0
-2555 2540 -17349 0
2554 -2539 -17349 0
-2526 -2541 17349 0
-2528 -2543 17349 0
-2530 -2545 17349 0
-2532 -2547 17349 0
-2534 -2549 17349 0
-2536 -2551 17349 0
-2538 -2553 17349 0
-2540 -2555 17349 0
2539 2554 17349 0
c ((variant_fields_00002_00001_00004=max_left_00002_00001_00004)=tv=SATLiteral(17350))
-7967 2541 -17350 0
-7969 2543 -17350 0
-7971 2545 -17350 0
-7973 2547 -17350 0
-7975 2549 -17350 0
-7977 2551 -17350 0
-7979 2553 -17350 0
-7981 2555 -17350 0
7980 -2554 -17350 0
-2541 7967 -17350 0
-2543 7969 -17350 0
-2545 7971 -17350 0
-2547 7973 -17350 0
-2549 7975 -17350 0
-2551 7977 -17350 0
-2553 7979 -17350 0
-2555 7981 -17350 0
2554 -7980 -17350 0
-7967 -2541 17350 0
-7969 -2543 17350 0
-7971 -2545 17350 0
-7973 -2547 17350 0
-7975 -2549 17350 0
-7977 -2551 17350 0
-7979 -2553 17350 0
-7981 -2555 17350 0
7980 2554 17350 0
c ((max_left_00002_00001_00004=max_left_00002_00001_00005)=tv=SATLiteral(17351))
-2541 2556 -17351 0
-2543 2558 -17351 0
-2545 2560 -17351 0
-2547 2562 -17351 0
-2549 2564 -17351 0
-2551 2566 -17351 0
-2553 2568 -17351 0
-2555 2570 -17351 0
2554 -2569 -17351 0
-2556 2541 -17351 0
-2558 2543 -17351 0
-2560 2545 -17351 0
-2562 2547 -17351 0
-2564 2549 -17351 0
-2566 2551 -17351 0
-2568 2553 -17351 0
-2570 2555 -17351 0
2569 -2554 -17351 0
-2541 -2556 17351 0
-2543 -2558 17351 0
-2545 -2560 17351 0
-2547 -2562 17351 0
-2549 -2564 17351 0
-2551 -2566 17351 0
-2553 -2568 17351 0
-2555 -2570 17351 0
2554 2569 17351 0
c ((variant_fields_00002_00001_00005=max_left_00002_00001_00005)=tv=SATLiteral(17352))
-7982 2556 -17352 0
-7984 2558 -17352 0
-7986 2560 -17352 0
-7988 2562 -17352 0
-7990 2564 -17352 0
-7992 2566 -17352 0
-7994 2568 -17352 0
-7996 2570 -17352 0
7995 -2569 -17352 0
-2556 7982 -17352 0
-2558 7984 -17352 0
-2560 7986 -17352 0
-2562 7988 -17352 0
-2564 7990 -17352 0
-2566 7992 -17352 0
-2568 7994 -17352 0
-2570 7996 -17352 0
2569 -7995 -17352 0
-7982 -2556 17352 0
-7984 -2558 17352 0
-7986 -2560 17352 0
-7988 -2562 17352 0
-7990 -2564 17352 0
-7992 -2566 17352 0
-7994 -2568 17352 0
-7996 -2570 17352 0
7995 2569 17352 0
c ((max_left_00002_00001_00005=max_left_00002_00001_00006)=tv=SATLiteral(17353))
-2556 2571 -17353 0
-2558 2573 -17353 0
-2560 2575 -17353 0
-2562 2577 -17353 0
-2564 2579 -17353 0
-2566 2581 -17353 0
-2568 2583 -17353 0
-2570 2585 -17353 0
2569 -2584 -17353 0
-2571 2556 -17353 0
-2573 2558 -17353 0
-2575 2560 -17353 0
-2577 2562 -17353 0
-2579 2564 -17353 0
-2581 2566 -17353 0
-2583 2568 -17353 0
-2585 2570 -17353 0
2584 -2569 -17353 0
-2556 -2571 17353 0
-2558 -2573 17353 0
-2560 -2575 17353 0
-2562 -2577 17353 0
-2564 -2579 17353 0
-2566 -2581 17353 0
-2568 -2583 17353 0
-2570 -2585 17353 0
2569 2584 17353 0
c ((variant_fields_00002_00001_00006=max_left_00002_00001_00006)=tv=SATLiteral(17354))
-7997 2571 -17354 0
-7999 2573 -17354 0
-8001 2575 -17354 0
-8003 2577 -17354 0
-8005 2579 -17354 0
-8007 2581 -17354 0
-8009 2583 -17354 0
-8011 2585 -17354 0
8010 -2584 -17354 0
-2571 7997 -17354 0
-2573 7999 -17354 0
-2575 8001 -17354 0
-2577 8003 -17354 0
-2579 8005 -17354 0
-2581 8007 -17354 0
-2583 8009 -17354 0
-2585 8011 -17354 0
2584 -8010 -17354 0
-7997 -2571 17354 0
-7999 -2573 17354 0
-8001 -2575 17354 0
-8003 -2577 17354 0
-8005 -2579 17354 0
-8007 -2581 17354 0
-8009 -2583 17354 0
-8011 -2585 17354 0
8010 2584 17354 0
c ((max_left_00002_00001_00006=max_left_00002_00001_00007)=tv=SATLiteral(17355))
-2571 2586 -17355 0
-2573 2588 -17355 0
-2575 2590 -17355 0
-2577 2592 -17355 0
-2579 2594 -17355 0
-2581 2596 -17355 0
-2583 2598 -17355 0
-2585 2600 -17355 0
2584 -2599 -17355 0
-2586 2571 -17355 0
-2588 2573 -17355 0
-2590 2575 -17355 0
-2592 2577 -17355 0
-2594 2579 -17355 0
-2596 2581 -17355 0
-2598 2583 -17355 0
-2600 2585 -17355 0
2599 -2584 -17355 0
-2571 -2586 17355 0
-2573 -2588 17355 0
-2575 -2590 17355 0
-2577 -2592 17355 0
-2579 -2594 17355 0
-2581 -2596 17355 0
-2583 -2598 17355 0
-2585 -2600 17355 0
2584 2599 17355 0
c ((variant_fields_00002_00001_00007=max_left_00002_00001_00007)=tv=SATLiteral(17356))
-8012 2586 -17356 0
-8014 2588 -17356 0
-8016 2590 -17356 0
-8018 2592 -17356 0
-8020 2594 -17356 0
-8022 2596 -17356 0
-8024 2598 -17356 0
-8026 2600 -17356 0
8025 -2599 -17356 0
-2586 8012 -17356 0
-2588 8014 -17356 0
-2590 8016 -17356 0
-2592 8018 -17356 0
-2594 8020 -17356 0
-2596 8022 -17356 0
-2598 8024 -17356 0
-2600 8026 -17356 0
2599 -8025 -17356 0
-8012 -2586 17356 0
-8014 -2588 17356 0
-8016 -2590 17356 0
-8018 -2592 17356 0
-8020 -2594 17356 0
-8022 -2596 17356 0
-8024 -2598 17356 0
-8026 -2600 17356 0
8025 2599 17356 0
c ((max_left_00002_00001_00007=max_left_00002_00001_00008)=tv=SATLiteral(17357))
-2586 2601 -17357 0
-2588 2603 -17357 0
-2590 2605 -17357 0
-2592 2607 -17357 0
-2594 2609 -17357 0
-2596 2611 -17357 0
-2598 2613 -17357 0
-2600 2615 -17357 0
2599 -2614 -17357 0
-2601 2586 -17357 0
-2603 2588 -17357 0
-2605 2590 -17357 0
-2607 2592 -17357 0
-2609 2594 -17357 0
-2611 2596 -17357 0
-2613 2598 -17357 0
-2615 2600 -17357 0
2614 -2599 -17357 0
-2586 -2601 17357 0
-2588 -2603 17357 0
-2590 -2605 17357 0
-2592 -2607 17357 0
-2594 -2609 17357 0
-2596 -2611 17357 0
-2598 -2613 17357 0
-2600 -2615 17357 0
2599 2614 17357 0
c ((variant_fields_00002_00001_00008=max_left_00002_00001_00008)=tv=SATLiteral(17358))
-8027 2601 -17358 0
-8029 2603 -17358 0
-8031 2605 -17358 0
-8033 2607 -17358 0
-8035 2609 -17358 0
-8037 2611 -17358 0
-8039 2613 -17358 0
-8041 2615 -17358 0
8040 -2614 -17358 0
-2601 8027 -17358 0
-2603 8029 -17358 0
-2605 8031 -17358 0
-2607 8033 -17358 0
-2609 8035 -17358 0
-2611 8037 -17358 0
-2613 8039 -17358 0
-2615 8041 -17358 0
2614 -8040 -17358 0
-8027 -2601 17358 0
-8029 -2603 17358 0
-8031 -2605 17358 0
-8033 -2607 17358 0
-8035 -2609 17358 0
-8037 -2611 17358 0
-8039 -2613 17358 0
-8041 -2615 17358 0
8040 2614 17358 0
c ((max_left_00002_00001_00008=max_left_00002_00001_00009)=tv=SATLiteral(17359))
-2601 2616 -17359 0
-2603 2618 -17359 0
-2605 2620 -17359 0
-2607 2622 -17359 0
-2609 2624 -17359 0
-2611 2626 -17359 0
-2613 2628 -17359 0
-2615 2630 -17359 0
2614 -2629 -17359 0
-2616 2601 -17359 0
-2618 2603 -17359 0
-2620 2605 -17359 0
-2622 2607 -17359 0
-2624 2609 -17359 0
-2626 2611 -17359 0
-2628 2613 -17359 0
-2630 2615 -17359 0
2629 -2614 -17359 0
-2601 -2616 17359 0
-2603 -2618 17359 0
-2605 -2620 17359 0
-2607 -2622 17359 0
-2609 -2624 17359 0
-2611 -2626 17359 0
-2613 -2628 17359 0
-2615 -2630 17359 0
2614 2629 17359 0
c ((variant_fields_00002_00001_00009=max_left_00002_00001_00009)=tv=SATLiteral(17360))
-8042 2616 -17360 0
-8044 2618 -17360 0
-8046 2620 -17360 0
-8048 2622 -17360 0
-8050 2624 -17360 0
-8052 2626 -17360 0
-8054 2628 -17360 0
-8056 2630 -17360 0
8055 -2629 -17360 0
-2616 8042 -17360 0
-2618 8044 -17360 0
-2620 8046 -17360 0
-2622 8048 -17360 0
-2624 8050 -17360 0
-2626 8052 -17360 0
-2628 8054 -17360 0
-2630 8056 -17360 0
2629 -8055 -17360 0
-8042 -2616 17360 0
-8044 -2618 17360 0
-8046 -2620 17360 0
-8048 -2622 17360 0
-8050 -2624 17360 0
-8052 -2626 17360 0
-8054 -2628 17360 0
-8056 -2630 17360 0
8055 2629 17360 0
c ((max_left_00002_00002_00001=max_left_00002_00002_00002)=tv=SATLiteral(17361))
-2632 2647 -17361 0
-2634 2649 -17361 0
-2636 2651 -17361 0
-2638 2653 -17361 0
-2640 2655 -17361 0
-2642 2657 -17361 0
-2644 2659 -17361 0
-2646 2661 -17361 0
2645 -2660 -17361 0
-2647 2632 -17361 0
-2649 2634 -17361 0
-2651 2636 -17361 0
-2653 2638 -17361 0
-2655 2640 -17361 0
-2657 2642 -17361 0
-2659 2644 -17361 0
-2661 2646 -17361 0
2660 -2645 -17361 0
-2632 -2647 17361 0
-2634 -2649 17361 0
-2636 -2651 17361 0
-2638 -2653 17361 0
-2640 -2655 17361 0
-2642 -2657 17361 0
-2644 -2659 17361 0
-2646 -2661 17361 0
2645 2660 17361 0
c ((variant_fields_00002_00002_00002=max_left_00002_00002_00002)=tv=SATLiteral(17362))
-8072 2647 -17362 0
-8074 2649 -17362 0
-8076 2651 -17362 0
-8078 2653 -17362 0
-8080 2655 -17362 0
-8082 2657 -17362 0
-8084 2659 -17362 0
-8086 2661 -17362 0
8085 -2660 -17362 0
-2647 8072 -17362 0
-2649 8074 -17362 0
-2651 8076 -17362 0
-2653 8078 -17362 0
-2655 8080 -17362 0
-2657 8082 -17362 0
-2659 8084 -17362 0
-2661 8086 -17362 0
2660 -8085 -17362 0
-8072 -2647 17362 0
-8074 -2649 17362 0
-8076 -2651 17362 0
-8078 -2653 17362 0
-8080 -2655 17362 0
-8082 -2657 17362 0
-8084 -2659 17362 0
-8086 -2661 17362 0
8085 2660 17362 0
c ((max_left_00002_00002_00002=max_left_00002_00002_00003)=tv=SATLiteral(17363))
-2647 2662 -17363 0
-2649 2664 -17363 0
-2651 2666 -17363 0
-2653 2668 -17363 0
-2655 2670 -17363 0
-2657 2672 -17363 0
-2659 2674 -17363 0
-2661 2676 -17363 0
2660 -2675 -17363 0
-2662 2647 -17363 0
-2664 2649 -17363 0
-2666 2651 -17363 0
-2668 2653 -17363 0
-2670 2655 -17363 0
-2672 2657 -17363 0
-2674 2659 -17363 0
-2676 2661 -17363 0
2675 -2660 -17363 0
-2647 -2662 17363 0
-2649 -2664 17363 0
-2651 -2666 17363 0
-2653 -2668 17363 0
-2655 -2670 17363 0
-2657 -2672 17363 0
-2659 -2674 17363 0
-2661 -2676 17363 0
2660 2675 17363 0
c ((variant_fields_00002_00002_00003=max_left_00002_00002_00003)=tv=SATLiteral(17364))
-8087 2662 -17364 0
-8089 2664 -17364 0
-8091 2666 -17364 0
-8093 2668 -17364 0
-8095 2670 -17364 0
-8097 2672 -17364 0
-8099 2674 -17364 0
-8101 2676 -17364 0
8100 -2675 -17364 0
-2662 8087 -17364 0
-2664 8089 -17364 0
-2666 8091 -17364 0
-2668 8093 -17364 0
-2670 8095 -17364 0
-2672 8097 -17364 0
-2674 8099 -17364 0
-2676 8101 -17364 0
2675 -8100 -17364 0
-8087 -2662 17364 0
-8089 -2664 17364 0
-8091 -2666 17364 0
-8093 -2668 17364 0
-8095 -2670 17364 0
-8097 -2672 17364 0
-8099 -2674 17364 0
-8101 -2676 17364 0
8100 2675 17364 0
c ((max_left_00002_00002_00003=max_left_00002_00002_00004)=tv=SATLiteral(17365))
-2662 2677 -17365 0
-2664 2679 -17365 0
-2666 2681 -17365 0
-2668 2683 -17365 0
-2670 2685 -17365 0
-2672 2687 -17365 0
-2674 2689 -17365 0
-2676 2691 -17365 0
2675 -2690 -17365 0
-2677 2662 -17365 0
-2679 2664 -17365 0
-2681 2666 -17365 0
-2683 2668 -17365 0
-2685 2670 -17365 0
-2687 2672 -17365 0
-2689 2674 -17365 0
-2691 2676 -17365 0
2690 -2675 -17365 0
-2662 -2677 17365 0
-2664 -2679 17365 0
-2666 -2681 17365 0
-2668 -2683 17365 0
-2670 -2685 17365 0
-2672 -2687 17365 0
-2674 -2689 17365 0
-2676 -2691 17365 0
2675 2690 17365 0
c ((variant_fields_00002_00002_00004=max_left_00002_00002_00004)=tv=SATLiteral(17366))
-8102 2677 -17366 0
-8104 2679 -17366 0
-8106 2681 -17366 0
-8108 2683 -17366 0
-8110 2685 -17366 0
-8112 2687 -17366 0
-8114 2689 -17366 0
-8116 2691 -17366 0
8115 -2690 -17366 0
-2677 8102 -17366 0
-2679 8104 -17366 0
-2681 8106 -17366 0
-2683 8108 -17366 0
-2685 8110 -17366 0
-2687 8112 -17366 0
-2689 8114 -17366 0
-2691 8116 -17366 0
2690 -8115 -17366 0
-8102 -2677 17366 0
-8104 -2679 17366 0
-8106 -2681 17366 0
-8108 -2683 17366 0
-8110 -2685 17366 0
-8112 -2687 17366 0
-8114 -2689 17366 0
-8116 -2691 17366 0
8115 2690 17366 0
c ((max_left_00002_00002_00004=max_left_00002_00002_00005)=tv=SATLiteral(17367))
-2677 2692 -17367 0
-2679 2694 -17367 0
-2681 2696 -17367 0
-2683 2698 -17367 0
-2685 2700 -17367 0
-2687 2702 -17367 0
-2689 2704 -17367 0
-2691 2706 -17367 0
2690 -2705 -17367 0
-2692 2677 -17367 0
-2694 2679 -17367 0
-2696 2681 -17367 0
-2698 2683 -17367 0
-2700 2685 -17367 0
-2702 2687 -17367 0
-2704 2689 -17367 0
-2706 2691 -17367 0
2705 -2690 -17367 0
-2677 -2692 17367 0
-2679 -2694 17367 0
-2681 -2696 17367 0
-2683 -2698 17367 0
-2685 -2700 17367 0
-2687 -2702 17367 0
-2689 -2704 17367 0
-2691 -2706 17367 0
2690 2705 17367 0
c ((variant_fields_00002_00002_00005=max_left_00002_00002_00005)=tv=SATLiteral(17368))
-8117 2692 -17368 0
-8119 2694 -17368 0
-8121 2696 -17368 0
-8123 2698 -17368 0
-8125 2700 -17368 0
-8127 2702 -17368 0
-8129 2704 -17368 0
-8131 2706 -17368 0
8130 -2705 -17368 0
-2692 8117 -17368 0
-2694 8119 -17368 0
-2696 8121 -17368 0
-2698 8123 -17368 0
-2700 8125 -17368 0
-2702 8127 -17368 0
-2704 8129 -17368 0
-2706 8131 -17368 0
2705 -8130 -17368 0
-8117 -2692 17368 0
-8119 -2694 17368 0
-8121 -2696 17368 0
-8123 -2698 17368 0
-8125 -2700 17368 0
-8127 -2702 17368 0
-8129 -2704 17368 0
-8131 -2706 17368 0
8130 2705 17368 0
c ((max_left_00002_00002_00005=max_left_00002_00002_00006)=tv=SATLiteral(17369))
-2692 2707 -17369 0
-2694 2709 -17369 0
-2696 2711 -17369 0
-2698 2713 -17369 0
-2700 2715 -17369 0
-2702 2717 -17369 0
-2704 2719 -17369 0
-2706 2721 -17369 0
2705 -2720 -17369 0
-2707 2692 -17369 0
-2709 2694 -17369 0
-2711 2696 -17369 0
-2713 2698 -17369 0
-2715 2700 -17369 0
-2717 2702 -17369 0
-2719 2704 -17369 0
-2721 2706 -17369 0
2720 -2705 -17369 0
-2692 -2707 17369 0
-2694 -2709 17369 0
-2696 -2711 17369 0
-2698 -2713 17369 0
-2700 -2715 17369 0
-2702 -2717 17369 0
-2704 -2719 17369 0
-2706 -2721 17369 0
2705 2720 17369 0
c ((variant_fields_00002_00002_00006=max_left_00002_00002_00006)=tv=SATLiteral(17370))
-8132 2707 -17370 0
-8134 2709 -17370 0
-8136 2711 -17370 0
-8138 2713 -17370 0
-8140 2715 -17370 0
-8142 2717 -17370 0
-8144 2719 -17370 0
-8146 2721 -17370 0
8145 -2720 -17370 0
-2707 8132 -17370 0
-2709 8134 -17370 0
-2711 8136 -17370 0
-2713 8138 -17370 0
-2715 8140 -17370 0
-2717 8142 -17370 0
-2719 8144 -17370 0
-2721 8146 -17370 0
2720 -8145 -17370 0
-8132 -2707 17370 0
-8134 -2709 17370 0
-8136 -2711 17370 0
-8138 -2713 17370 0
-8140 -2715 17370 0
-8142 -2717 17370 0
-8144 -2719 17370 0
-8146 -2721 17370 0
8145 2720 17370 0
c ((max_left_00002_00002_00006=max_left_00002_00002_00007)=tv=SATLiteral(17371))
-2707 2722 -17371 0
-2709 2724 -17371 0
-2711 2726 -17371 0
-2713 2728 -17371 0
-2715 2730 -17371 0
-2717 2732 -17371 0
-2719 2734 -17371 0
-2721 2736 -17371 0
2720 -2735 -17371 0
-2722 2707 -17371 0
-2724 2709 -17371 0
-2726 2711 -17371 0
-2728 2713 -17371 0
-2730 2715 -17371 0
-2732 2717 -17371 0
-2734 2719 -17371 0
-2736 2721 -17371 0
2735 -2720 -17371 0
-2707 -2722 17371 0
-2709 -2724 17371 0
-2711 -2726 17371 0
-2713 -2728 17371 0
-2715 -2730 17371 0
-2717 -2732 17371 0
-2719 -2734 17371 0
-2721 -2736 17371 0
2720 2735 17371 0
c ((variant_fields_00002_00002_00007=max_left_00002_00002_00007)=tv=SATLiteral(17372))
-8147 2722 -17372 0
-8149 2724 -17372 0
-8151 2726 -17372 0
-8153 2728 -17372 0
-8155 2730 -17372 0
-8157 2732 -17372 0
-8159 2734 -17372 0
-8161 2736 -17372 0
8160 -2735 -17372 0
-2722 8147 -17372 0
-2724 8149 -17372 0
-2726 8151 -17372 0
-2728 8153 -17372 0
-2730 8155 -17372 0
-2732 8157 -17372 0
-2734 8159 -17372 0
-2736 8161 -17372 0
2735 -8160 -17372 0
-8147 -2722 17372 0
-8149 -2724 17372 0
-8151 -2726 17372 0
-8153 -2728 17372 0
-8155 -2730 17372 0
-8157 -2732 17372 0
-8159 -2734 17372 0
-8161 -2736 17372 0
8160 2735 17372 0
c ((max_left_00002_00002_00007=max_left_00002_00002_00008)=tv=SATLiteral(17373))
-2722 2737 -17373 0
-2724 2739 -17373 0
-2726 2741 -17373 0
-2728 2743 -17373 0
-2730 2745 -17373 0
-2732 2747 -17373 0
-2734 2749 -17373 0
-2736 2751 -17373 0
2735 -2750 -17373 0
-2737 2722 -17373 0
-2739 2724 -17373 0
-2741 2726 -17373 0
-2743 2728 -17373 0
-2745 2730 -17373 0
-2747 2732 -17373 0
-2749 2734 -17373 0
-2751 2736 -17373 0
2750 -2735 -17373 0
-2722 -2737 17373 0
-2724 -2739 17373 0
-2726 -2741 17373 0
-2728 -2743 17373 0
-2730 -2745 17373 0
-2732 -2747 17373 0
-2734 -2749 17373 0
-2736 -2751 17373 0
2735 2750 17373 0
c ((variant_fields_00002_00002_00008=max_left_00002_00002_00008)=tv=SATLiteral(17374))
-8162 2737 -17374 0
-8164 2739 -17374 0
-8166 2741 -17374 0
-8168 2743 -17374 0
-8170 2745 -17374 0
-8172 2747 -17374 0
-8174 2749 -17374 0
-8176 2751 -17374 0
8175 -2750 -17374 0
-2737 8162 -17374 0
-2739 8164 -17374 0
-2741 8166 -17374 0
-2743 8168 -17374 0
-2745 8170 -17374 0
-2747 8172 -17374 0
-2749 8174 -17374 0
-2751 8176 -17374 0
2750 -8175 -17374 0
-8162 -2737 17374 0
-8164 -2739 17374 0
-8166 -2741 17374 0
-8168 -2743 17374 0
-8170 -2745 17374 0
-8172 -2747 17374 0
-8174 -2749 17374 0
-8176 -2751 17374 0
8175 2750 17374 0
c ((max_left_00002_00002_00008=max_left_00002_00002_00009)=tv=SATLiteral(17375))
-2737 2752 -17375 0
-2739 2754 -17375 0
-2741 2756 -17375 0
-2743 2758 -17375 0
-2745 2760 -17375 0
-2747 2762 -17375 0
-2749 2764 -17375 0
-2751 2766 -17375 0
2750 -2765 -17375 0
-2752 2737 -17375 0
-2754 2739 -17375 0
-2756 2741 -17375 0
-2758 2743 -17375 0
-2760 2745 -17375 0
-2762 2747 -17375 0
-2764 2749 -17375 0
-2766 2751 -17375 0
2765 -2750 -17375 0
-2737 -2752 17375 0
-2739 -2754 17375 0
-2741 -2756 17375 0
-2743 -2758 17375 0
-2745 -2760 17375 0
-2747 -2762 17375 0
-2749 -2764 17375 0
-2751 -2766 17375 0
2750 2765 17375 0
c ((variant_fields_00002_00002_00009=max_left_00002_00002_00009)=tv=SATLiteral(17376))
-8177 2752 -17376 0
-8179 2754 -17376 0
-8181 2756 -17376 0
-8183 2758 -17376 0
-8185 2760 -17376 0
-8187 2762 -17376 0
-8189 2764 -17376 0
-8191 2766 -17376 0
8190 -2765 -17376 0
-2752 8177 -17376 0
-2754 8179 -17376 0
-2756 8181 -17376 0
-2758 8183 -17376 0
-2760 8185 -17376 0
-2762 8187 -17376 0
-2764 8189 -17376 0
-2766 8191 -17376 0
2765 -8190 -17376 0
-8177 -2752 17376 0
-8179 -2754 17376 0
-8181 -2756 17376 0
-8183 -2758 17376 0
-8185 -2760 17376 0
-8187 -2762 17376 0
-8189 -2764 17376 0
-8191 -2766 17376 0
8190 2765 17376 0
c ((max_left_00002_00003_00001=max_left_00002_00003_00002)=tv=SATLiteral(17377))
-2768 2783 -17377 0
-2770 2785 -17377 0
-2772 2787 -17377 0
-2774 2789 -17377 0
-2776 2791 -17377 0
-2778 2793 -17377 0
-2780 2795 -17377 0
-2782 2797 -17377 0
2781 -2796 -17377 0
-2783 2768 -17377 0
-2785 2770 -17377 0
-2787 2772 -17377 0
-2789 2774 -17377 0
-2791 2776 -17377 0
-2793 2778 -17377 0
-2795 2780 -17377 0
-2797 2782 -17377 0
2796 -2781 -17377 0
-2768 -2783 17377 0
-2770 -2785 17377 0
-2772 -2787 17377 0
-2774 -2789 17377 0
-2776 -2791 17377 0
-2778 -2793 17377 0
-2780 -2795 17377 0
-2782 -2797 17377 0
2781 2796 17377 0
c ((variant_fields_00002_00003_00002=max_left_00002_00003_00002)=tv=SATLiteral(17378))
-8207 2783 -17378 0
-8209 2785 -17378 0
-8211 2787 -17378 0
-8213 2789 -17378 0
-8215 2791 -17378 0
-8217 2793 -17378 0
-8219 2795 -17378 0
-8221 2797 -17378 0
8220 -2796 -17378 0
-2783 8207 -17378 0
-2785 8209 -17378 0
-2787 8211 -17378 0
-2789 8213 -17378 0
-2791 8215 -17378 0
-2793 8217 -17378 0
-2795 8219 -17378 0
-2797 8221 -17378 0
2796 -8220 -17378 0
-8207 -2783 17378 0
-8209 -2785 17378 0
-8211 -2787 17378 0
-8213 -2789 17378 0
-8215 -2791 17378 0
-8217 -2793 17378 0
-8219 -2795 17378 0
-8221 -2797 17378 0
8220 2796 17378 0
c ((max_left_00002_00003_00002=max_left_00002_00003_00003)=tv=SATLiteral(17379))
-2783 2798 -17379 0
-2785 2800 -17379 0
-2787 2802 -17379 0
-2789 2804 -17379 0
-2791 2806 -17379 0
-2793 2808 -17379 0
-2795 2810 -17379 0
-2797 2812 -17379 0
2796 -2811 -17379 0
-2798 2783 -17379 0
-2800 2785 -17379 0
-2802 2787 -17379 0
-2804 2789 -17379 0
-2806 2791 -17379 0
-2808 2793 -17379 0
-2810 2795 -17379 0
-2812 2797 -17379 0
2811 -2796 -17379 0
-2783 -2798 17379 0
-2785 -2800 17379 0
-2787 -2802 17379 0
-2789 -2804 17379 0
-2791 -2806 17379 0
-2793 -2808 17379 0
-2795 -2810 17379 0
-2797 -2812 17379 0
2796 2811 17379 0
c ((variant_fields_00002_00003_00003=max_left_00002_00003_00003)=tv=SATLiteral(17380))
-8222 2798 -17380 0
-8224 2800 -17380 0
-8226 2802 -17380 0
-8228 2804 -17380 0
-8230 2806 -17380 0
-8232 2808 -17380 0
-8234 2810 -17380 0
-8236 2812 -17380 0
8235 -2811 -17380 0
-2798 8222 -17380 0
-2800 8224 -17380 0
-2802 8226 -17380 0
-2804 8228 -17380 0
-2806 8230 -17380 0
-2808 8232 -17380 0
-2810 8234 -17380 0
-2812 8236 -17380 0
2811 -8235 -17380 0
-8222 -2798 17380 0
-8224 -2800 17380 0
-8226 -2802 17380 0
-8228 -2804 17380 0
-8230 -2806 17380 0
-8232 -2808 17380 0
-8234 -2810 17380 0
-8236 -2812 17380 0
8235 2811 17380 0
c ((max_left_00002_00003_00003=max_left_00002_00003_00004)=tv=SATLiteral(17381))
-2798 2813 -17381 0
-2800 2815 -17381 0
-2802 2817 -17381 0
-2804 2819 -17381 0
-2806 2821 -17381 0
-2808 2823 -17381 0
-2810 2825 -17381 0
-2812 2827 -17381 0
2811 -2826 -17381 0
-2813 2798 -17381 0
-2815 2800 -17381 0
-2817 2802 -17381 0
-2819 2804 -17381 0
-2821 2806 -17381 0
-2823 2808 -17381 0
-2825 2810 -17381 0
-2827 2812 -17381 0
2826 -2811 -17381 0
-2798 -2813 17381 0
-2800 -2815 17381 0
-2802 -2817 17381 0
-2804 -2819 17381 0
-2806 -2821 17381 0
-2808 -2823 17381 0
-2810 -2825 17381 0
-2812 -2827 17381 0
2811 2826 17381 0
c ((variant_fields_00002_00003_00004=max_left_00002_00003_00004)=tv=SATLiteral(17382))
-8237 2813 -17382 0
-8239 2815 -17382 0
-8241 2817 -17382 0
-8243 2819 -17382 0
-8245 2821 -17382 0
-8247 2823 -17382 0
-8249 2825 -17382 0
-8251 2827 -17382 0
8250 -2826 -17382 0
-2813 8237 -17382 0
-2815 8239 -17382 0
-2817 8241 -17382 0
-2819 8243 -17382 0
-2821 8245 -17382 0
-2823 8247 -17382 0
-2825 8249 -17382 0
-2827 8251 -17382 0
2826 -8250 -17382 0
-8237 -2813 17382 0
-8239 -2815 17382 0
-8241 -2817 17382 0
-8243 -2819 17382 0
-8245 -2821 17382 0
-8247 -2823 17382 0
-8249 -2825 17382 0
-8251 -2827 17382 0
8250 2826 17382 0
c ((max_left_00002_00003_00004=max_left_00002_00003_00005)=tv=SATLiteral(17383))
-2813 2828 -17383 0
-2815 2830 -17383 0
-2817 2832 -17383 0
-2819 2834 -17383 0
-2821 2836 -17383 0
-2823 2838 -17383 0
-2825 2840 -17383 0
-2827 2842 -17383 0
2826 -2841 -17383 0
-2828 2813 -17383 0
-2830 2815 -17383 0
-2832 2817 -17383 0
-2834 2819 -17383 0
-2836 2821 -17383 0
-2838 2823 -17383 0
-2840 2825 -17383 0
-2842 2827 -17383 0
2841 -2826 -17383 0
-2813 -2828 17383 0
-2815 -2830 17383 0
-2817 -2832 17383 0
-2819 -2834 17383 0
-2821 -2836 17383 0
-2823 -2838 17383 0
-2825 -2840 17383 0
-2827 -2842 17383 0
2826 2841 17383 0
c ((variant_fields_00002_00003_00005=max_left_00002_00003_00005)=tv=SATLiteral(17384))
-8252 2828 -17384 0
-8254 2830 -17384 0
-8256 2832 -17384 0
-8258 2834 -17384 0
-8260 2836 -17384 0
-8262 2838 -17384 0
-8264 2840 -17384 0
-8266 2842 -17384 0
8265 -2841 -17384 0
-2828 8252 -17384 0
-2830 8254 -17384 0
-2832 8256 -17384 0
-2834 8258 -17384 0
-2836 8260 -17384 0
-2838 8262 -17384 0
-2840 8264 -17384 0
-2842 8266 -17384 0
2841 -8265 -17384 0
-8252 -2828 17384 0
-8254 -2830 17384 0
-8256 -2832 17384 0
-8258 -2834 17384 0
-8260 -2836 17384 0
-8262 -2838 17384 0
-8264 -2840 17384 0
-8266 -2842 17384 0
8265 2841 17384 0
c ((max_left_00002_00003_00005=max_left_00002_00003_00006)=tv=SATLiteral(17385))
-2828 2843 -17385 0
-2830 2845 -17385 0
-2832 2847 -17385 0
-2834 2849 -17385 0
-2836 2851 -17385 0
-2838 2853 -17385 0
-2840 2855 -17385 0
-2842 2857 -17385 0
2841 -2856 -17385 0
-2843 2828 -17385 0
-2845 2830 -17385 0
-2847 2832 -17385 0
-2849 2834 -17385 0
-2851 2836 -17385 0
-2853 2838 -17385 0
-2855 2840 -17385 0
-2857 2842 -17385 0
2856 -2841 -17385 0
-2828 -2843 17385 0
-2830 -2845 17385 0
-2832 -2847 17385 0
-2834 -2849 17385 0
-2836 -2851 17385 0
-2838 -2853 17385 0
-2840 -2855 17385 0
-2842 -2857 17385 0
2841 2856 17385 0
c ((variant_fields_00002_00003_00006=max_left_00002_00003_00006)=tv=SATLiteral(17386))
-8267 2843 -17386 0
-8269 2845 -17386 0
-8271 2847 -17386 0
-8273 2849 -17386 0
-8275 2851 -17386 0
-8277 2853 -17386 0
-8279 2855 -17386 0
-8281 2857 -17386 0
8280 -2856 -17386 0
-2843 8267 -17386 0
-2845 8269 -17386 0
-2847 8271 -17386 0
-2849 8273 -17386 0
-2851 8275 -17386 0
-2853 8277 -17386 0
-2855 8279 -17386 0
-2857 8281 -17386 0
2856 -8280 -17386 0
-8267 -2843 17386 0
-8269 -2845 17386 0
-8271 -2847 17386 0
-8273 -2849 17386 0
-8275 -2851 17386 0
-8277 -2853 17386 0
-8279 -2855 17386 0
-8281 -2857 17386 0
8280 2856 17386 0
c ((max_left_00002_00003_00006=max_left_00002_00003_00007)=tv=SATLiteral(17387))
-2843 2858 -17387 0
-2845 2860 -17387 0
-2847 2862 -17387 0
-2849 2864 -17387 0
-2851 2866 -17387 0
-2853 2868 -17387 0
-2855 2870 -17387 0
-2857 2872 -17387 0
2856 -2871 -17387 0
-2858 2843 -17387 0
-2860 2845 -17387 0
-2862 2847 -17387 0
-2864 2849 -17387 0
-2866 2851 -17387 0
-2868 2853 -17387 0
-2870 2855 -17387 0
-2872 2857 -17387 0
2871 -2856 -17387 0
-2843 -2858 17387 0
-2845 -2860 17387 0
-2847 -2862 17387 0
-2849 -2864 17387 0
-2851 -2866 17387 0
-2853 -2868 17387 0
-2855 -2870 17387 0
-2857 -2872 17387 0
2856 2871 17387 0
c ((variant_fields_00002_00003_00007=max_left_00002_00003_00007)=tv=SATLiteral(17388))
-8282 2858 -17388 0
-8284 2860 -17388 0
-8286 2862 -17388 0
-8288 2864 -17388 0
-8290 2866 -17388 0
-8292 2868 -17388 0
-8294 2870 -17388 0
-8296 2872 -17388 0
8295 -2871 -17388 0
-2858 8282 -17388 0
-2860 8284 -17388 0
-2862 8286 -17388 0
-2864 8288 -17388 0
-2866 8290 -17388 0
-2868 8292 -17388 0
-2870 8294 -17388 0
-2872 8296 -17388 0
2871 -8295 -17388 0
-8282 -2858 17388 0
-8284 -2860 17388 0
-8286 -2862 17388 0
-8288 -2864 17388 0
-8290 -2866 17388 0
-8292 -2868 17388 0
-8294 -2870 17388 0
-8296 -2872 17388 0
8295 2871 17388 0
c ((max_left_00002_00003_00007=max_left_00002_00003_00008)=tv=SATLiteral(17389))
-2858 2873 -17389 0
-2860 2875 -17389 0
-2862 2877 -17389 0
-2864 2879 -17389 0
-2866 2881 -17389 0
-2868 2883 -17389 0
-2870 2885 -17389 0
-2872 2887 -17389 0
2871 -2886 -17389 0
-2873 2858 -17389 0
-2875 2860 -17389 0
-2877 2862 -17389 0
-2879 2864 -17389 0
-2881 2866 -17389 0
-2883 2868 -17389 0
-2885 2870 -17389 0
-2887 2872 -17389 0
2886 -2871 -17389 0
-2858 -2873 17389 0
-2860 -2875 17389 0
-2862 -2877 17389 0
-2864 -2879 17389 0
-2866 -2881 17389 0
-2868 -2883 17389 0
-2870 -2885 17389 0
-2872 -2887 17389 0
2871 2886 17389 0
c ((variant_fields_00002_00003_00008=max_left_00002_00003_00008)=tv=SATLiteral(17390))
-8297 2873 -17390 0
-8299 2875 -17390 0
-8301 2877 -17390 0
-8303 2879 -17390 0
-8305 2881 -17390 0
-8307 2883 -17390 0
-8309 2885 -17390 0
-8311 2887 -17390 0
8310 -2886 -17390 0
-2873 8297 -17390 0
-2875 8299 -17390 0
-2877 8301 -17390 0
-2879 8303 -17390 0
-2881 8305 -17390 0
-2883 8307 -17390 0
-2885 8309 -17390 0
-2887 8311 -17390 0
2886 -8310 -17390 0
-8297 -2873 17390 0
-8299 -2875 17390 0
-8301 -2877 17390 0
-8303 -2879 17390 0
-8305 -2881 17390 0
-8307 -2883 17390 0
-8309 -2885 17390 0
-8311 -2887 17390 0
8310 2886 17390 0
c ((max_left_00002_00003_00008=max_left_00002_00003_00009)=tv=SATLiteral(17391))
-2873 2888 -17391 0
-2875 2890 -17391 0
-2877 2892 -17391 0
-2879 2894 -17391 0
-2881 2896 -17391 0
-2883 2898 -17391 0
-2885 2900 -17391 0
-2887 2902 -17391 0
2886 -2901 -17391 0
-2888 2873 -17391 0
-2890 2875 -17391 0
-2892 2877 -17391 0
-2894 2879 -17391 0
-2896 2881 -17391 0
-2898 2883 -17391 0
-2900 2885 -17391 0
-2902 2887 -17391 0
2901 -2886 -17391 0
-2873 -2888 17391 0
-2875 -2890 17391 0
-2877 -2892 17391 0
-2879 -2894 17391 0
-2881 -2896 17391 0
-2883 -2898 17391 0
-2885 -2900 17391 0
-2887 -2902 17391 0
2886 2901 17391 0
c ((variant_fields_00002_00003_00009=max_left_00002_00003_00009)=tv=SATLiteral(17392))
-8312 2888 -17392 0
-8314 2890 -17392 0
-8316 2892 -17392 0
-8318 2894 -17392 0
-8320 2896 -17392 0
-8322 2898 -17392 0
-8324 2900 -17392 0
-8326 2902 -17392 0
8325 -2901 -17392 0
-2888 8312 -17392 0
-2890 8314 -17392 0
-2892 8316 -17392 0
-2894 8318 -17392 0
-2896 8320 -17392 0
-2898 8322 -17392 0
-2900 8324 -17392 0
-2902 8326 -17392 0
2901 -8325 -17392 0
-8312 -2888 17392 0
-8314 -2890 17392 0
-8316 -2892 17392 0
-8318 -2894 17392 0
-8320 -2896 17392 0
-8322 -2898 17392 0
-8324 -2900 17392 0
-8326 -2902 17392 0
8325 2901 17392 0
c ((max_left_00002_00004_00001=max_left_00002_00004_00002)=tv=SATLiteral(17393))
-2904 2919 -17393 0
-2906 2921 -17393 0
-2908 2923 -17393 0
-2910 2925 -17393 0
-2912 2927 -17393 0
-2914 2929 -17393 0
-2916 2931 -17393 0
-2918 2933 -17393 0
2917 -2932 -17393 0
-2919 2904 -17393 0
-2921 2906 -17393 0
-2923 2908 -17393 0
-2925 2910 -17393 0
-2927 2912 -17393 0
-2929 2914 -17393 0
-2931 2916 -17393 0
-2933 2918 -17393 0
2932 -2917 -17393 0
-2904 -2919 17393 0
-2906 -2921 17393 0
-2908 -2923 17393 0
-2910 -2925 17393 0
-2912 -2927 17393 0
-2914 -2929 17393 0
-2916 -2931 17393 0
-2918 -2933 17393 0
2917 2932 17393 0
c ((variant_fields_00002_00004_00002=max_left_00002_00004_00002)=tv=SATLiteral(17394))
-8342 2919 -17394 0
-8344 2921 -17394 0
-8346 2923 -17394 0
-8348 2925 -17394 0
-8350 2927 -17394 0
-8352 2929 -17394 0
-8354 2931 -17394 0
-8356 2933 -17394 0
8355 -2932 -17394 0
-2919 8342 -17394 0
-2921 8344 -17394 0
-2923 8346 -17394 0
-2925 8348 -17394 0
-2927 8350 -17394 0
-2929 8352 -17394 0
-2931 8354 -17394 0
-2933 8356 -17394 0
2932 -8355 -17394 0
-8342 -2919 17394 0
-8344 -2921 17394 0
-8346 -2923 17394 0
-8348 -2925 17394 0
-8350 -2927 17394 0
-8352 -2929 17394 0
-8354 -2931 17394 0
-8356 -2933 17394 0
8355 2932 17394 0
c ((max_left_00002_00004_00002=max_left_00002_00004_00003)=tv=SATLiteral(17395))
-2919 2934 -17395 0
-2921 2936 -17395 0
-2923 2938 -17395 0
-2925 2940 -17395 0
-2927 2942 -17395 0
-2929 2944 -17395 0
-2931 2946 -17395 0
-2933 2948 -17395 0
2932 -2947 -17395 0
-2934 2919 -17395 0
-2936 2921 -17395 0
-2938 2923 -17395 0
-2940 2925 -17395 0
-2942 2927 -17395 0
-2944 2929 -17395 0
-2946 2931 -17395 0
-2948 2933 -17395 0
2947 -2932 -17395 0
-2919 -2934 17395 0
-2921 -2936 17395 0
-2923 -2938 17395 0
-2925 -2940 17395 0
-2927 -2942 17395 0
-2929 -2944 17395 0
-2931 -2946 17395 0
-2933 -2948 17395 0
2932 2947 17395 0
c ((variant_fields_00002_00004_00003=max_left_00002_00004_00003)=tv=SATLiteral(17396))
-8357 2934 -17396 0
-8359 2936 -17396 0
-8361 2938 -17396 0
-8363 2940 -17396 0
-8365 2942 -17396 0
-8367 2944 -17396 0
-8369 2946 -17396 0
-8371 2948 -17396 0
8370 -2947 -17396 0
-2934 8357 -17396 0
-2936 8359 -17396 0
-2938 8361 -17396 0
-2940 8363 -17396 0
-2942 8365 -17396 0
-2944 8367 -17396 0
-2946 8369 -17396 0
-2948 8371 -17396 0
2947 -8370 -17396 0
-8357 -2934 17396 0
-8359 -2936 17396 0
-8361 -2938 17396 0
-8363 -2940 17396 0
-8365 -2942 17396 0
-8367 -2944 17396 0
-8369 -2946 17396 0
-8371 -2948 17396 0
8370 2947 17396 0
c ((max_left_00002_00004_00003=max_left_00002_00004_00004)=tv=SATLiteral(17397))
-2934 2949 -17397 0
-2936 2951 -17397 0
-2938 2953 -17397 0
-2940 2955 -17397 0
-2942 2957 -17397 0
-2944 2959 -17397 0
-2946 2961 -17397 0
-2948 2963 -17397 0
2947 -2962 -17397 0
-2949 2934 -17397 0
-2951 2936 -17397 0
-2953 2938 -17397 0
-2955 2940 -17397 0
-2957 2942 -17397 0
-2959 2944 -17397 0
-2961 2946 -17397 0
-2963 2948 -17397 0
2962 -2947 -17397 0
-2934 -2949 17397 0
-2936 -2951 17397 0
-2938 -2953 17397 0
-2940 -2955 17397 0
-2942 -2957 17397 0
-2944 -2959 17397 0
-2946 -2961 17397 0
-2948 -2963 17397 0
2947 2962 17397 0
c ((variant_fields_00002_00004_00004=max_left_00002_00004_00004)=tv=SATLiteral(17398))
-8372 2949 -17398 0
-8374 2951 -17398 0
-8376 2953 -17398 0
-8378 2955 -17398 0
-8380 2957 -17398 0
-8382 2959 -17398 0
-8384 2961 -17398 0
-8386 2963 -17398 0
8385 -2962 -17398 0
-2949 8372 -17398 0
-2951 8374 -17398 0
-2953 8376 -17398 0
-2955 8378 -17398 0
-2957 8380 -17398 0
-2959 8382 -17398 0
-2961 8384 -17398 0
-2963 8386 -17398 0
2962 -8385 -17398 0
-8372 -2949 17398 0
-8374 -2951 17398 0
-8376 -2953 17398 0
-8378 -2955 17398 0
-8380 -2957 17398 0
-8382 -2959 17398 0
-8384 -2961 17398 0
-8386 -2963 17398 0
8385 2962 17398 0
c ((max_left_00002_00004_00004=max_left_00002_00004_00005)=tv=SATLiteral(17399))
-2949 2964 -17399 0
-2951 2966 -17399 0
-2953 2968 -17399 0
-2955 2970 -17399 0
-2957 2972 -17399 0
-2959 2974 -17399 0
-2961 2976 -17399 0
-2963 2978 -17399 0
2962 -2977 -17399 0
-2964 2949 -17399 0
-2966 2951 -17399 0
-2968 2953 -17399 0
-2970 2955 -17399 0
-2972 2957 -17399 0
-2974 2959 -17399 0
-2976 2961 -17399 0
-2978 2963 -17399 0
2977 -2962 -17399 0
-2949 -2964 17399 0
-2951 -2966 17399 0
-2953 -2968 17399 0
-2955 -2970 17399 0
-2957 -2972 17399 0
-2959 -2974 17399 0
-2961 -2976 17399 0
-2963 -2978 17399 0
2962 2977 17399 0
c ((variant_fields_00002_00004_00005=max_left_00002_00004_00005)=tv=SATLiteral(17400))
-8387 2964 -17400 0
-8389 2966 -17400 0
-8391 2968 -17400 0
-8393 2970 -17400 0
-8395 2972 -17400 0
-8397 2974 -17400 0
-8399 2976 -17400 0
-8401 2978 -17400 0
8400 -2977 -17400 0
-2964 8387 -17400 0
-2966 8389 -17400 0
-2968 8391 -17400 0
-2970 8393 -17400 0
-2972 8395 -17400 0
-2974 8397 -17400 0
-2976 8399 -17400 0
-2978 8401 -17400 0
2977 -8400 -17400 0
-8387 -2964 17400 0
-8389 -2966 17400 0
-8391 -2968 17400 0
-8393 -2970 17400 0
-8395 -2972 17400 0
-8397 -2974 17400 0
-8399 -2976 17400 0
-8401 -2978 17400 0
8400 2977 17400 0
c ((max_left_00002_00004_00005=max_left_00002_00004_00006)=tv=SATLiteral(17401))
-2964 2979 -17401 0
-2966 2981 -17401 0
-2968 2983 -17401 0
-2970 2985 -17401 0
-2972 2987 -17401 0
-2974 2989 -17401 0
-2976 2991 -17401 0
-2978 2993 -17401 0
2977 -2992 -17401 0
-2979 2964 -17401 0
-2981 2966 -17401 0
-2983 2968 -17401 0
-2985 2970 -17401 0
-2987 2972 -17401 0
-2989 2974 -17401 0
-2991 2976 -17401 0
-2993 2978 -17401 0
2992 -2977 -17401 0
-2964 -2979 17401 0
-2966 -2981 17401 0
-2968 -2983 17401 0
-2970 -2985 17401 0
-2972 -2987 17401 0
-2974 -2989 17401 0
-2976 -2991 17401 0
-2978 -2993 17401 0
2977 2992 17401 0
c ((variant_fields_00002_00004_00006=max_left_00002_00004_00006)=tv=SATLiteral(17402))
-8402 2979 -17402 0
-8404 2981 -17402 0
-8406 2983 -17402 0
-8408 2985 -17402 0
-8410 2987 -17402 0
-8412 2989 -17402 0
-8414 2991 -17402 0
-8416 2993 -17402 0
8415 -2992 -17402 0
-2979 8402 -17402 0
-2981 8404 -17402 0
-2983 8406 -17402 0
-2985 8408 -17402 0
-2987 8410 -17402 0
-2989 8412 -17402 0
-2991 8414 -17402 0
-2993 8416 -17402 0
2992 -8415 -17402 0
-8402 -2979 17402 0
-8404 -2981 17402 0
-8406 -2983 17402 0
-8408 -2985 17402 0
-8410 -2987 17402 0
-8412 -2989 17402 0
-8414 -2991 17402 0
-8416 -2993 17402 0
8415 2992 17402 0
c ((max_left_00002_00004_00006=max_left_00002_00004_00007)=tv=SATLiteral(17403))
-2979 2994 -17403 0
-2981 2996 -17403 0
-2983 2998 -17403 0
-2985 3000 -17403 0
-2987 3002 -17403 0
-2989 3004 -17403 0
-2991 3006 -17403 0
-2993 3008 -17403 0
2992 -3007 -17403 0
-2994 2979 -17403 0
-2996 2981 -17403 0
-2998 2983 -17403 0
-3000 2985 -17403 0
-3002 2987 -17403 0
-3004 2989 -17403 0
-3006 2991 -17403 0
-3008 2993 -17403 0
3007 -2992 -17403 0
-2979 -2994 17403 0
-2981 -2996 17403 0
-2983 -2998 17403 0
-2985 -3000 17403 0
-2987 -3002 17403 0
-2989 -3004 17403 0
-2991 -3006 17403 0
-2993 -3008 17403 0
2992 3007 17403 0
c ((variant_fields_00002_00004_00007=max_left_00002_00004_00007)=tv=SATLiteral(17404))
-8417 2994 -17404 0
-8419 2996 -17404 0
-8421 2998 -17404 0
-8423 3000 -17404 0
-8425 3002 -17404 0
-8427 3004 -17404 0
-8429 3006 -17404 0
-8431 3008 -17404 0
8430 -3007 -17404 0
-2994 8417 -17404 0
-2996 8419 -17404 0
-2998 8421 -17404 0
-3000 8423 -17404 0
-3002 8425 -17404 0
-3004 8427 -17404 0
-3006 8429 -17404 0
-3008 8431 -17404 0
3007 -8430 -17404 0
-8417 -2994 17404 0
-8419 -2996 17404 0
-8421 -2998 17404 0
-8423 -3000 17404 0
-8425 -3002 17404 0
-8427 -3004 17404 0
-8429 -3006 17404 0
-8431 -3008 17404 0
8430 3007 17404 0
c ((max_left_00002_00004_00007=max_left_00002_00004_00008)=tv=SATLiteral(17405))
-2994 3009 -17405 0
-2996 3011 -17405 0
-2998 3013 -17405 0
-3000 3015 -17405 0
-3002 3017 -17405 0
-3004 3019 -17405 0
-3006 3021 -17405 0
-3008 3023 -17405 0
3007 -3022 -17405 0
-3009 2994 -17405 0
-3011 2996 -17405 0
-3013 2998 -17405 0
-3015 3000 -17405 0
-3017 3002 -17405 0
-3019 3004 -17405 0
-3021 3006 -17405 0
-3023 3008 -17405 0
3022 -3007 -17405 0
-2994 -3009 17405 0
-2996 -3011 17405 0
-2998 -3013 17405 0
-3000 -3015 17405 0
-3002 -3017 17405 0
-3004 -3019 17405 0
-3006 -3021 17405 0
-3008 -3023 17405 0
3007 3022 17405 0
c ((variant_fields_00002_00004_00008=max_left_00002_00004_00008)=tv=SATLiteral(17406))
-8432 3009 -17406 0
-8434 3011 -17406 0
-8436 3013 -17406 0
-8438 3015 -17406 0
-8440 3017 -17406 0
-8442 3019 -17406 0
-8444 3021 -17406 0
-8446 3023 -17406 0
8445 -3022 -17406 0
-3009 8432 -17406 0
-3011 8434 -17406 0
-3013 8436 -17406 0
-3015 8438 -17406 0
-3017 8440 -17406 0
-3019 8442 -17406 0
-3021 8444 -17406 0
-3023 8446 -17406 0
3022 -8445 -17406 0
-8432 -3009 17406 0
-8434 -3011 17406 0
-8436 -3013 17406 0
-8438 -3015 17406 0
-8440 -3017 17406 0
-8442 -3019 17406 0
-8444 -3021 17406 0
-8446 -3023 17406 0
8445 3022 17406 0
c ((max_left_00002_00004_00008=max_left_00002_00004_00009)=tv=SATLiteral(17407))
-3009 3024 -17407 0
-3011 3026 -17407 0
-3013 3028 -17407 0
-3015 3030 -17407 0
-3017 3032 -17407 0
-3019 3034 -17407 0
-3021 3036 -17407 0
-3023 3038 -17407 0
3022 -3037 -17407 0
-3024 3009 -17407 0
-3026 3011 -17407 0
-3028 3013 -17407 0
-3030 3015 -17407 0
-3032 3017 -17407 0
-3034 3019 -17407 0
-3036 3021 -17407 0
-3038 3023 -17407 0
3037 -3022 -17407 0
-3009 -3024 17407 0
-3011 -3026 17407 0
-3013 -3028 17407 0
-3015 -3030 17407 0
-3017 -3032 17407 0
-3019 -3034 17407 0
-3021 -3036 17407 0
-3023 -3038 17407 0
3022 3037 17407 0
c ((variant_fields_00002_00004_00009=max_left_00002_00004_00009)=tv=SATLiteral(17408))
-8447 3024 -17408 0
-8449 3026 -17408 0
-8451 3028 -17408 0
-8453 3030 -17408 0
-8455 3032 -17408 0
-8457 3034 -17408 0
-8459 3036 -17408 0
-8461 3038 -17408 0
8460 -3037 -17408 0
-3024 8447 -17408 0
-3026 8449 -17408 0
-3028 8451 -17408 0
-3030 8453 -17408 0
-3032 8455 -17408 0
-3034 8457 -17408 0
-3036 8459 -17408 0
-3038 8461 -17408 0
3037 -8460 -17408 0
-8447 -3024 17408 0
-8449 -3026 17408 0
-8451 -3028 17408 0
-8453 -3030 17408 0
-8455 -3032 17408 0
-8457 -3034 17408 0
-8459 -3036 17408 0
-8461 -3038 17408 0
8460 3037 17408 0
c ((max_left_00002_00005_00001=max_left_00002_00005_00002)=tv=SATLiteral(17409))
-3040 3055 -17409 0
-3042 3057 -17409 0
-3044 3059 -17409 0
-3046 3061 -17409 0
-3048 3063 -17409 0
-3050 3065 -17409 0
-3052 3067 -17409 0
-3054 3069 -17409 0
3053 -3068 -17409 0
-3055 3040 -17409 0
-3057 3042 -17409 0
-3059 3044 -17409 0
-3061 3046 -17409 0
-3063 3048 -17409 0
-3065 3050 -17409 0
-3067 3052 -17409 0
-3069 3054 -17409 0
3068 -3053 -17409 0
-3040 -3055 17409 0
-3042 -3057 17409 0
-3044 -3059 17409 0
-3046 -3061 17409 0
-3048 -3063 17409 0
-3050 -3065 17409 0
-3052 -3067 17409 0
-3054 -3069 17409 0
3053 3068 17409 0
c ((variant_fields_00002_00005_00002=max_left_00002_00005_00002)=tv=SATLiteral(17410))
-8477 3055 -17410 0
-8479 3057 -17410 0
-8481 3059 -17410 0
-8483 3061 -17410 0
-8485 3063 -17410 0
-8487 3065 -17410 0
-8489 3067 -17410 0
-8491 3069 -17410 0
8490 -3068 -17410 0
-3055 8477 -17410 0
-3057 8479 -17410 0
-3059 8481 -17410 0
-3061 8483 -17410 0
-3063 8485 -17410 0
-3065 8487 -17410 0
-3067 8489 -17410 0
-3069 8491 -17410 0
3068 -8490 -17410 0
-8477 -3055 17410 0
-8479 -3057 17410 0
-8481 -3059 17410 0
-8483 -3061 17410 0
-8485 -3063 17410 0
-8487 -3065 17410 0
-8489 -3067 17410 0
-8491 -3069 17410 0
8490 3068 17410 0
c ((max_left_00002_00005_00002=max_left_00002_00005_00003)=tv=SATLiteral(17411))
-3055 3070 -17411 0
-3057 3072 -17411 0
-3059 3074 -17411 0
-3061 3076 -17411 0
-3063 3078 -17411 0
-3065 3080 -17411 0
-3067 3082 -17411 0
-3069 3084 -17411 0
3068 -3083 -17411 0
-3070 3055 -17411 0
-3072 3057 -17411 0
-3074 3059 -17411 0
-3076 3061 -17411 0
-3078 3063 -17411 0
-3080 3065 -17411 0
-3082 3067 -17411 0
-3084 3069 -17411 0
3083 -3068 -17411 0
-3055 -3070 17411 0
-3057 -3072 17411 0
-3059 -3074 17411 0
-3061 -3076 17411 0
-3063 -3078 17411 0
-3065 -3080 17411 0
-3067 -3082 17411 0
-3069 -3084 17411 0
3068 3083 17411 0
c ((variant_fields_00002_00005_00003=max_left_00002_00005_00003)=tv=SATLiteral(17412))
-8492 3070 -17412 0
-8494 3072 -17412 0
-8496 3074 -17412 0
-8498 3076 -17412 0
-8500 3078 -17412 0
-8502 3080 -17412 0
-8504 3082 -17412 0
-8506 3084 -17412 0
8505 -3083 -17412 0
-3070 8492 -17412 0
-3072 8494 -17412 0
-3074 8496 -17412 0
-3076 8498 -17412 0
-3078 8500 -17412 0
-3080 8502 -17412 0
-3082 8504 -17412 0
-3084 8506 -17412 0
3083 -8505 -17412 0
-8492 -3070 17412 0
-8494 -3072 17412 0
-8496 -3074 17412 0
-8498 -3076 17412 0
-8500 -3078 17412 0
-8502 -3080 17412 0
-8504 -3082 17412 0
-8506 -3084 17412 0
8505 3083 17412 0
c ((max_left_00002_00005_00003=max_left_00002_00005_00004)=tv=SATLiteral(17413))
-3070 3085 -17413 0
-3072 3087 -17413 0
-3074 3089 -17413 0
-3076 3091 -17413 0
-3078 3093 -17413 0
-3080 3095 -17413 0
-3082 3097 -17413 0
-3084 3099 -17413 0
3083 -3098 -17413 0
-3085 3070 -17413 0
-3087 3072 -17413 0
-3089 3074 -17413 0
-3091 3076 -17413 0
-3093 3078 -17413 0
-3095 3080 -17413 0
-3097 3082 -17413 0
-3099 3084 -17413 0
3098 -3083 -17413 0
-3070 -3085 17413 0
-3072 -3087 17413 0
-3074 -3089 17413 0
-3076 -3091 17413 0
-3078 -3093 17413 0
-3080 -3095 17413 0
-3082 -3097 17413 0
-3084 -3099 17413 0
3083 3098 17413 0
c ((variant_fields_00002_00005_00004=max_left_00002_00005_00004)=tv=SATLiteral(17414))
-8507 3085 -17414 0
-8509 3087 -17414 0
-8511 3089 -17414 0
-8513 3091 -17414 0
-8515 3093 -17414 0
-8517 3095 -17414 0
-8519 3097 -17414 0
-8521 3099 -17414 0
8520 -3098 -17414 0
-3085 8507 -17414 0
-3087 8509 -17414 0
-3089 8511 -17414 0
-3091 8513 -17414 0
-3093 8515 -17414 0
-3095 8517 -17414 0
-3097 8519 -17414 0
-3099 8521 -17414 0
3098 -8520 -17414 0
-8507 -3085 17414 0
-8509 -3087 17414 0
-8511 -3089 17414 0
-8513 -3091 17414 0
-8515 -3093 17414 0
-8517 -3095 17414 0
-8519 -3097 17414 0
-8521 -3099 17414 0
8520 3098 17414 0
c ((max_left_00002_00005_00004=max_left_00002_00005_00005)=tv=SATLiteral(17415))
-3085 3100 -17415 0
-3087 3102 -17415 0
-3089 3104 -17415 0
-3091 3106 -17415 0
-3093 3108 -17415 0
-3095 3110 -17415 0
-3097 3112 -17415 0
-3099 3114 -17415 0
3098 -3113 -17415 0
-3100 3085 -17415 0
-3102 3087 -17415 0
-3104 3089 -17415 0
-3106 3091 -17415 0
-3108 3093 -17415 0
-3110 3095 -17415 0
-3112 3097 -17415 0
-3114 3099 -17415 0
3113 -3098 -17415 0
-3085 -3100 17415 0
-3087 -3102 17415 0
-3089 -3104 17415 0
-3091 -3106 17415 0
-3093 -3108 17415 0
-3095 -3110 17415 0
-3097 -3112 17415 0
-3099 -3114 17415 0
3098 3113 17415 0
c ((variant_fields_00002_00005_00005=max_left_00002_00005_00005)=tv=SATLiteral(17416))
-8522 3100 -17416 0
-8524 3102 -17416 0
-8526 3104 -17416 0
-8528 3106 -17416 0
-8530 3108 -17416 0
-8532 3110 -17416 0
-8534 3112 -17416 0
-8536 3114 -17416 0
8535 -3113 -17416 0
-3100 8522 -17416 0
-3102 8524 -17416 0
-3104 8526 -17416 0
-3106 8528 -17416 0
-3108 8530 -17416 0
-3110 8532 -17416 0
-3112 8534 -17416 0
-3114 8536 -17416 0
3113 -8535 -17416 0
-8522 -3100 17416 0
-8524 -3102 17416 0
-8526 -3104 17416 0
-8528 -3106 17416 0
-8530 -3108 17416 0
-8532 -3110 17416 0
-8534 -3112 17416 0
-8536 -3114 17416 0
8535 3113 17416 0
c ((max_left_00002_00005_00005=max_left_00002_00005_00006)=tv=SATLiteral(17417))
-3100 3115 -17417 0
-3102 3117 -17417 0
-3104 3119 -17417 0
-3106 3121 -17417 0
-3108 3123 -17417 0
-3110 3125 -17417 0
-3112 3127 -17417 0
-3114 3129 -17417 0
3113 -3128 -17417 0
-3115 3100 -17417 0
-3117 3102 -17417 0
-3119 3104 -17417 0
-3121 3106 -17417 0
-3123 3108 -17417 0
-3125 3110 -17417 0
-3127 3112 -17417 0
-3129 3114 -17417 0
3128 -3113 -17417 0
-3100 -3115 17417 0
-3102 -3117 17417 0
-3104 -3119 17417 0
-3106 -3121 17417 0
-3108 -3123 17417 0
-3110 -3125 17417 0
-3112 -3127 17417 0
-3114 -3129 17417 0
3113 3128 17417 0
c ((variant_fields_00002_00005_00006=max_left_00002_00005_00006)=tv=SATLiteral(17418))
-8537 3115 -17418 0
-8539 3117 -17418 0
-8541 3119 -17418 0
-8543 3121 -17418 0
-8545 3123 -17418 0
-8547 3125 -17418 0
-8549 3127 -17418 0
-8551 3129 -17418 0
8550 -3128 -17418 0
-3115 8537 -17418 0
-3117 8539 -17418 0
-3119 8541 -17418 0
-3121 8543 -17418 0
-3123 8545 -17418 0
-3125 8547 -17418 0
-3127 8549 -17418 0
-3129 8551 -17418 0
3128 -8550 -17418 0
-8537 -3115 17418 0
-8539 -3117 17418 0
-8541 -3119 17418 0
-8543 -3121 17418 0
-8545 -3123 17418 0
-8547 -3125 17418 0
-8549 -3127 17418 0
-8551 -3129 17418 0
8550 3128 17418 0
c ((max_left_00002_00005_00006=max_left_00002_00005_00007)=tv=SATLiteral(17419))
-3115 3130 -17419 0
-3117 3132 -17419 0
-3119 3134 -17419 0
-3121 3136 -17419 0
-3123 3138 -17419 0
-3125 3140 -17419 0
-3127 3142 -17419 0
-3129 3144 -17419 0
3128 -3143 -17419 0
-3130 3115 -17419 0
-3132 3117 -17419 0
-3134 3119 -17419 0
-3136 3121 -17419 0
-3138 3123 -17419 0
-3140 3125 -17419 0
-3142 3127 -17419 0
-3144 3129 -17419 0
3143 -3128 -17419 0
-3115 -3130 17419 0
-3117 -3132 17419 0
-3119 -3134 17419 0
-3121 -3136 17419 0
-3123 -3138 17419 0
-3125 -3140 17419 0
-3127 -3142 17419 0
-3129 -3144 17419 0
3128 3143 17419 0
c ((variant_fields_00002_00005_00007=max_left_00002_00005_00007)=tv=SATLiteral(17420))
-8552 3130 -17420 0
-8554 3132 -17420 0
-8556 3134 -17420 0
-8558 3136 -17420 0
-8560 3138 -17420 0
-8562 3140 -17420 0
-8564 3142 -17420 0
-8566 3144 -17420 0
8565 -3143 -17420 0
-3130 8552 -17420 0
-3132 8554 -17420 0
-3134 8556 -17420 0
-3136 8558 -17420 0
-3138 8560 -17420 0
-3140 8562 -17420 0
-3142 8564 -17420 0
-3144 8566 -17420 0
3143 -8565 -17420 0
-8552 -3130 17420 0
-8554 -3132 17420 0
-8556 -3134 17420 0
-8558 -3136 17420 0
-8560 -3138 17420 0
-8562 -3140 17420 0
-8564 -3142 17420 0
-8566 -3144 17420 0
8565 3143 17420 0
c ((max_left_00002_00005_00007=max_left_00002_00005_00008)=tv=SATLiteral(17421))
-3130 3145 -17421 0
-3132 3147 -17421 0
-3134 3149 -17421 0
-3136 3151 -17421 0
-3138 3153 -17421 0
-3140 3155 -17421 0
-3142 3157 -17421 0
-3144 3159 -17421 0
3143 -3158 -17421 0
-3145 3130 -17421 0
-3147 3132 -17421 0
-3149 3134 -17421 0
-3151 3136 -17421 0
-3153 3138 -17421 0
-3155 3140 -17421 0
-3157 3142 -17421 0
-3159 3144 -17421 0
3158 -3143 -17421 0
-3130 -3145 17421 0
-3132 -3147 17421 0
-3134 -3149 17421 0
-3136 -3151 17421 0
-3138 -3153 17421 0
-3140 -3155 17421 0
-3142 -3157 17421 0
-3144 -3159 17421 0
3143 3158 17421 0
c ((variant_fields_00002_00005_00008=max_left_00002_00005_00008)=tv=SATLiteral(17422))
-8567 3145 -17422 0
-8569 3147 -17422 0
-8571 3149 -17422 0
-8573 3151 -17422 0
-8575 3153 -17422 0
-8577 3155 -17422 0
-8579 3157 -17422 0
-8581 3159 -17422 0
8580 -3158 -17422 0
-3145 8567 -17422 0
-3147 8569 -17422 0
-3149 8571 -17422 0
-3151 8573 -17422 0
-3153 8575 -17422 0
-3155 8577 -17422 0
-3157 8579 -17422 0
-3159 8581 -17422 0
3158 -8580 -17422 0
-8567 -3145 17422 0
-8569 -3147 17422 0
-8571 -3149 17422 0
-8573 -3151 17422 0
-8575 -3153 17422 0
-8577 -3155 17422 0
-8579 -3157 17422 0
-8581 -3159 17422 0
8580 3158 17422 0
c ((max_left_00002_00005_00008=max_left_00002_00005_00009)=tv=SATLiteral(17423))
-3145 3160 -17423 0
-3147 3162 -17423 0
-3149 3164 -17423 0
-3151 3166 -17423 0
-3153 3168 -17423 0
-3155 3170 -17423 0
-3157 3172 -17423 0
-3159 3174 -17423 0
3158 -3173 -17423 0
-3160 3145 -17423 0
-3162 3147 -17423 0
-3164 3149 -17423 0
-3166 3151 -17423 0
-3168 3153 -17423 0
-3170 3155 -17423 0
-3172 3157 -17423 0
-3174 3159 -17423 0
3173 -3158 -17423 0
-3145 -3160 17423 0
-3147 -3162 17423 0
-3149 -3164 17423 0
-3151 -3166 17423 0
-3153 -3168 17423 0
-3155 -3170 17423 0
-3157 -3172 17423 0
-3159 -3174 17423 0
3158 3173 17423 0
c ((variant_fields_00002_00005_00009=max_left_00002_00005_00009)=tv=SATLiteral(17424))
-8582 3160 -17424 0
-8584 3162 -17424 0
-8586 3164 -17424 0
-8588 3166 -17424 0
-8590 3168 -17424 0
-8592 3170 -17424 0
-8594 3172 -17424 0
-8596 3174 -17424 0
8595 -3173 -17424 0
-3160 8582 -17424 0
-3162 8584 -17424 0
-3164 8586 -17424 0
-3166 8588 -17424 0
-3168 8590 -17424 0
-3170 8592 -17424 0
-3172 8594 -17424 0
-3174 8596 -17424 0
3173 -8595 -17424 0
-8582 -3160 17424 0
-8584 -3162 17424 0
-8586 -3164 17424 0
-8588 -3166 17424 0
-8590 -3168 17424 0
-8592 -3170 17424 0
-8594 -3172 17424 0
-8596 -3174 17424 0
8595 3173 17424 0
c ((max_left_00002_00006_00001=max_left_00002_00006_00002)=tv=SATLiteral(17425))
-3176 3191 -17425 0
-3178 3193 -17425 0
-3180 3195 -17425 0
-3182 3197 -17425 0
-3184 3199 -17425 0
-3186 3201 -17425 0
-3188 3203 -17425 0
-3190 3205 -17425 0
3189 -3204 -17425 0
-3191 3176 -17425 0
-3193 3178 -17425 0
-3195 3180 -17425 0
-3197 3182 -17425 0
-3199 3184 -17425 0
-3201 3186 -17425 0
-3203 3188 -17425 0
-3205 3190 -17425 0
3204 -3189 -17425 0
-3176 -3191 17425 0
-3178 -3193 17425 0
-3180 -3195 17425 0
-3182 -3197 17425 0
-3184 -3199 17425 0
-3186 -3201 17425 0
-3188 -3203 17425 0
-3190 -3205 17425 0
3189 3204 17425 0
c ((variant_fields_00002_00006_00002=max_left_00002_00006_00002)=tv=SATLiteral(17426))
-8612 3191 -17426 0
-8614 3193 -17426 0
-8616 3195 -17426 0
-8618 3197 -17426 0
-8620 3199 -17426 0
-8622 3201 -17426 0
-8624 3203 -17426 0
-8626 3205 -17426 0
8625 -3204 -17426 0
-3191 8612 -17426 0
-3193 8614 -17426 0
-3195 8616 -17426 0
-3197 8618 -17426 0
-3199 8620 -17426 0
-3201 8622 -17426 0
-3203 8624 -17426 0
-3205 8626 -17426 0
3204 -8625 -17426 0
-8612 -3191 17426 0
-8614 -3193 17426 0
-8616 -3195 17426 0
-8618 -3197 17426 0
-8620 -3199 17426 0
-8622 -3201 17426 0
-8624 -3203 17426 0
-8626 -3205 17426 0
8625 3204 17426 0
c ((max_left_00002_00006_00002=max_left_00002_00006_00003)=tv=SATLiteral(17427))
-3191 3206 -17427 0
-3193 3208 -17427 0
-3195 3210 -17427 0
-3197 3212 -17427 0
-3199 3214 -17427 0
-3201 3216 -17427 0
-3203 3218 -17427 0
-3205 3220 -17427 0
3204 -3219 -17427 0
-3206 3191 -17427 0
-3208 3193 -17427 0
-3210 3195 -17427 0
-3212 3197 -17427 0
-3214 3199 -17427 0
-3216 3201 -17427 0
-3218 3203 -17427 0
-3220 3205 -17427 0
3219 -3204 -17427 0
-3191 -3206 17427 0
-3193 -3208 17427 0
-3195 -3210 17427 0
-3197 -3212 17427 0
-3199 -3214 17427 0
-3201 -3216 17427 0
-3203 -3218 17427 0
-3205 -3220 17427 0
3204 3219 17427 0
c ((variant_fields_00002_00006_00003=max_left_00002_00006_00003)=tv=SATLiteral(17428))
-8627 3206 -17428 0
-8629 3208 -17428 0
-8631 3210 -17428 0
-8633 3212 -17428 0
-8635 3214 -17428 0
-8637 3216 -17428 0
-8639 3218 -17428 0
-8641 3220 -17428 0
8640 -3219 -17428 0
-3206 8627 -17428 0
-3208 8629 -17428 0
-3210 8631 -17428 0
-3212 8633 -17428 0
-3214 8635 -17428 0
-3216 8637 -17428 0
-3218 8639 -17428 0
-3220 8641 -17428 0
3219 -8640 -17428 0
-8627 -3206 17428 0
-8629 -3208 17428 0
-8631 -3210 17428 0
-8633 -3212 17428 0
-8635 -3214 17428 0
-8637 -3216 17428 0
-8639 -3218 17428 0
-8641 -3220 17428 0
8640 3219 17428 0
c ((max_left_00002_00006_00003=max_left_00002_00006_00004)=tv=SATLiteral(17429))
-3206 3221 -17429 0
-3208 3223 -17429 0
-3210 3225 -17429 0
-3212 3227 -17429 0
-3214 3229 -17429 0
-3216 3231 -17429 0
-3218 3233 -17429 0
-3220 3235 -17429 0
3219 -3234 -17429 0
-3221 3206 -17429 0
-3223 3208 -17429 0
-3225 3210 -17429 0
-3227 3212 -17429 0
-3229 3214 -17429 0
-3231 3216 -17429 0
-3233 3218 -17429 0
-3235 3220 -17429 0
3234 -3219 -17429 0
-3206 -3221 17429 0
-3208 -3223 17429 0
-3210 -3225 17429 0
-3212 -3227 17429 0
-3214 -3229 17429 0
-3216 -3231 17429 0
-3218 -3233 17429 0
-3220 -3235 17429 0
3219 3234 17429 0
c ((variant_fields_00002_00006_00004=max_left_00002_00006_00004)=tv=SATLiteral(17430))
-8642 3221 -17430 0
-8644 3223 -17430 0
-8646 3225 -17430 0
-8648 3227 -17430 0
-8650 3229 -17430 0
-8652 3231 -17430 0
-8654 3233 -17430 0
-8656 3235 -17430 0
8655 -3234 -17430 0
-3221 8642 -17430 0
-3223 8644 -17430 0
-3225 8646 -17430 0
-3227 8648 -17430 0
-3229 8650 -17430 0
-3231 8652 -17430 0
-3233 8654 -17430 0
-3235 8656 -17430 0
3234 -8655 -17430 0
-8642 -3221 17430 0
-8644 -3223 17430 0
-8646 -3225 17430 0
-8648 -3227 17430 0
-8650 -3229 17430 0
-8652 -3231 17430 0
-8654 -3233 17430 0
-8656 -3235 17430 0
8655 3234 17430 0
c ((max_left_00002_00006_00004=max_left_00002_00006_00005)=tv=SATLiteral(17431))
-3221 3236 -17431 0
-3223 3238 -17431 0
-3225 3240 -17431 0
-3227 3242 -17431 0
-3229 3244 -17431 0
-3231 3246 -17431 0
-3233 3248 -17431 0
-3235 3250 -17431 0
3234 -3249 -17431 0
-3236 3221 -17431 0
-3238 3223 -17431 0
-3240 3225 -17431 0
-3242 3227 -17431 0
-3244 3229 -17431 0
-3246 3231 -17431 0
-3248 3233 -17431 0
-3250 3235 -17431 0
3249 -3234 -17431 0
-3221 -3236 17431 0
-3223 -3238 17431 0
-3225 -3240 17431 0
-3227 -3242 17431 0
-3229 -3244 17431 0
-3231 -3246 17431 0
-3233 -3248 17431 0
-3235 -3250 17431 0
3234 3249 17431 0
c ((variant_fields_00002_00006_00005=max_left_00002_00006_00005)=tv=SATLiteral(17432))
-8657 3236 -17432 0
-8659 3238 -17432 0
-8661 3240 -17432 0
-8663 3242 -17432 0
-8665 3244 -17432 0
-8667 3246 -17432 0
-8669 3248 -17432 0
-8671 3250 -17432 0
8670 -3249 -17432 0
-3236 8657 -17432 0
-3238 8659 -17432 0
-3240 8661 -17432 0
-3242 8663 -17432 0
-3244 8665 -17432 0
-3246 8667 -17432 0
-3248 8669 -17432 0
-3250 8671 -17432 0
3249 -8670 -17432 0
-8657 -3236 17432 0
-8659 -3238 17432 0
-8661 -3240 17432 0
-8663 -3242 17432 0
-8665 -3244 17432 0
-8667 -3246 17432 0
-8669 -3248 17432 0
-8671 -3250 17432 0
8670 3249 17432 0
c ((max_left_00002_00006_00005=max_left_00002_00006_00006)=tv=SATLiteral(17433))
-3236 3251 -17433 0
-3238 3253 -17433 0
-3240 3255 -17433 0
-3242 3257 -17433 0
-3244 3259 -17433 0
-3246 3261 -17433 0
-3248 3263 -17433 0
-3250 3265 -17433 0
3249 -3264 -17433 0
-3251 3236 -17433 0
-3253 3238 -17433 0
-3255 3240 -17433 0
-3257 3242 -17433 0
-3259 3244 -17433 0
-3261 3246 -17433 0
-3263 3248 -17433 0
-3265 3250 -17433 0
3264 -3249 -17433 0
-3236 -3251 17433 0
-3238 -3253 17433 0
-3240 -3255 17433 0
-3242 -3257 17433 0
-3244 -3259 17433 0
-3246 -3261 17433 0
-3248 -3263 17433 0
-3250 -3265 17433 0
3249 3264 17433 0
c ((variant_fields_00002_00006_00006=max_left_00002_00006_00006)=tv=SATLiteral(17434))
-8672 3251 -17434 0
-8674 3253 -17434 0
-8676 3255 -17434 0
-8678 3257 -17434 0
-8680 3259 -17434 0
-8682 3261 -17434 0
-8684 3263 -17434 0
-8686 3265 -17434 0
8685 -3264 -17434 0
-3251 8672 -17434 0
-3253 8674 -17434 0
-3255 8676 -17434 0
-3257 8678 -17434 0
-3259 8680 -17434 0
-3261 8682 -17434 0
-3263 8684 -17434 0
-3265 8686 -17434 0
3264 -8685 -17434 0
-8672 -3251 17434 0
-8674 -3253 17434 0
-8676 -3255 17434 0
-8678 -3257 17434 0
-8680 -3259 17434 0
-8682 -3261 17434 0
-8684 -3263 17434 0
-8686 -3265 17434 0
8685 3264 17434 0
c ((max_left_00002_00006_00006=max_left_00002_00006_00007)=tv=SATLiteral(17435))
-3251 3266 -17435 0
-3253 3268 -17435 0
-3255 3270 -17435 0
-3257 3272 -17435 0
-3259 3274 -17435 0
-3261 3276 -17435 0
-3263 3278 -17435 0
-3265 3280 -17435 0
3264 -3279 -17435 0
-3266 3251 -17435 0
-3268 3253 -17435 0
-3270 3255 -17435 0
-3272 3257 -17435 0
-3274 3259 -17435 0
-3276 3261 -17435 0
-3278 3263 -17435 0
-3280 3265 -17435 0
3279 -3264 -17435 0
-3251 -3266 17435 0
-3253 -3268 17435 0
-3255 -3270 17435 0
-3257 -3272 17435 0
-3259 -3274 17435 0
-3261 -3276 17435 0
-3263 -3278 17435 0
-3265 -3280 17435 0
3264 3279 17435 0
c ((variant_fields_00002_00006_00007=max_left_00002_00006_00007)=tv=SATLiteral(17436))
-8687 3266 -17436 0
-8689 3268 -17436 0
-8691 3270 -17436 0
-8693 3272 -17436 0
-8695 3274 -17436 0
-8697 3276 -17436 0
-8699 3278 -17436 0
-8701 3280 -17436 0
8700 -3279 -17436 0
-3266 8687 -17436 0
-3268 8689 -17436 0
-3270 8691 -17436 0
-3272 8693 -17436 0
-3274 8695 -17436 0
-3276 8697 -17436 0
-3278 8699 -17436 0
-3280 8701 -17436 0
3279 -8700 -17436 0
-8687 -3266 17436 0
-8689 -3268 17436 0
-8691 -3270 17436 0
-8693 -3272 17436 0
-8695 -3274 17436 0
-8697 -3276 17436 0
-8699 -3278 17436 0
-8701 -3280 17436 0
8700 3279 17436 0
c ((max_left_00002_00006_00007=max_left_00002_00006_00008)=tv=SATLiteral(17437))
-3266 3281 -17437 0
-3268 3283 -17437 0
-3270 3285 -17437 0
-3272 3287 -17437 0
-3274 3289 -17437 0
-3276 3291 -17437 0
-3278 3293 -17437 0
-3280 3295 -17437 0
3279 -3294 -17437 0
-3281 3266 -17437 0
-3283 3268 -17437 0
-3285 3270 -17437 0
-3287 3272 -17437 0
-3289 3274 -17437 0
-3291 3276 -17437 0
-3293 3278 -17437 0
-3295 3280 -17437 0
3294 -3279 -17437 0
-3266 -3281 17437 0
-3268 -3283 17437 0
-3270 -3285 17437 0
-3272 -3287 17437 0
-3274 -3289 17437 0
-3276 -3291 17437 0
-3278 -3293 17437 0
-3280 -3295 17437 0
3279 3294 17437 0
c ((variant_fields_00002_00006_00008=max_left_00002_00006_00008)=tv=SATLiteral(17438))
-8702 3281 -17438 0
-8704 3283 -17438 0
-8706 3285 -17438 0
-8708 3287 -17438 0
-8710 3289 -17438 0
-8712 3291 -17438 0
-8714 3293 -17438 0
-8716 3295 -17438 0
8715 -3294 -17438 0
-3281 8702 -17438 0
-3283 8704 -17438 0
-3285 8706 -17438 0
-3287 8708 -17438 0
-3289 8710 -17438 0
-3291 8712 -17438 0
-3293 8714 -17438 0
-3295 8716 -17438 0
3294 -8715 -17438 0
-8702 -3281 17438 0
-8704 -3283 17438 0
-8706 -3285 17438 0
-8708 -3287 17438 0
-8710 -3289 17438 0
-8712 -3291 17438 0
-8714 -3293 17438 0
-8716 -3295 17438 0
8715 3294 17438 0
c ((max_left_00002_00006_00008=max_left_00002_00006_00009)=tv=SATLiteral(17439))
-3281 3296 -17439 0
-3283 3298 -17439 0
-3285 3300 -17439 0
-3287 3302 -17439 0
-3289 3304 -17439 0
-3291 3306 -17439 0
-3293 3308 -17439 0
-3295 3310 -17439 0
3294 -3309 -17439 0
-3296 3281 -17439 0
-3298 3283 -17439 0
-3300 3285 -17439 0
-3302 3287 -17439 0
-3304 3289 -17439 0
-3306 3291 -17439 0
-3308 3293 -17439 0
-3310 3295 -17439 0
3309 -3294 -17439 0
-3281 -3296 17439 0
-3283 -3298 17439 0
-3285 -3300 17439 0
-3287 -3302 17439 0
-3289 -3304 17439 0
-3291 -3306 17439 0
-3293 -3308 17439 0
-3295 -3310 17439 0
3294 3309 17439 0
c ((variant_fields_00002_00006_00009=max_left_00002_00006_00009)=tv=SATLiteral(17440))
-8717 3296 -17440 0
-8719 3298 -17440 0
-8721 3300 -17440 0
-8723 3302 -17440 0
-8725 3304 -17440 0
-8727 3306 -17440 0
-8729 3308 -17440 0
-8731 3310 -17440 0
8730 -3309 -17440 0
-3296 8717 -17440 0
-3298 8719 -17440 0
-3300 8721 -17440 0
-3302 8723 -17440 0
-3304 8725 -17440 0
-3306 8727 -17440 0
-3308 8729 -17440 0
-3310 8731 -17440 0
3309 -8730 -17440 0
-8717 -3296 17440 0
-8719 -3298 17440 0
-8721 -3300 17440 0
-8723 -3302 17440 0
-8725 -3304 17440 0
-8727 -3306 17440 0
-8729 -3308 17440 0
-8731 -3310 17440 0
8730 3309 17440 0
c ((max_left_00002_00007_00001=max_left_00002_00007_00002)=tv=SATLiteral(17441))
-3312 3327 -17441 0
-3314 3329 -17441 0
-3316 3331 -17441 0
-3318 3333 -17441 0
-3320 3335 -17441 0
-3322 3337 -17441 0
-3324 3339 -17441 0
-3326 3341 -17441 0
3325 -3340 -17441 0
-3327 3312 -17441 0
-3329 3314 -17441 0
-3331 3316 -17441 0
-3333 3318 -17441 0
-3335 3320 -17441 0
-3337 3322 -17441 0
-3339 3324 -17441 0
-3341 3326 -17441 0
3340 -3325 -17441 0
-3312 -3327 17441 0
-3314 -3329 17441 0
-3316 -3331 17441 0
-3318 -3333 17441 0
-3320 -3335 17441 0
-3322 -3337 17441 0
-3324 -3339 17441 0
-3326 -3341 17441 0
3325 3340 17441 0
c ((variant_fields_00002_00007_00002=max_left_00002_00007_00002)=tv=SATLiteral(17442))
-8747 3327 -17442 0
-8749 3329 -17442 0
-8751 3331 -17442 0
-8753 3333 -17442 0
-8755 3335 -17442 0
-8757 3337 -17442 0
-8759 3339 -17442 0
-8761 3341 -17442 0
8760 -3340 -17442 0
-3327 8747 -17442 0
-3329 8749 -17442 0
-3331 8751 -17442 0
-3333 8753 -17442 0
-3335 8755 -17442 0
-3337 8757 -17442 0
-3339 8759 -17442 0
-3341 8761 -17442 0
3340 -8760 -17442 0
-8747 -3327 17442 0
-8749 -3329 17442 0
-8751 -3331 17442 0
-8753 -3333 17442 0
-8755 -3335 17442 0
-8757 -3337 17442 0
-8759 -3339 17442 0
-8761 -3341 17442 0
8760 3340 17442 0
c ((max_left_00002_00007_00002=max_left_00002_00007_00003)=tv=SATLiteral(17443))
-3327 3342 -17443 0
-3329 3344 -17443 0
-3331 3346 -17443 0
-3333 3348 -17443 0
-3335 3350 -17443 0
-3337 3352 -17443 0
-3339 3354 -17443 0
-3341 3356 -17443 0
3340 -3355 -17443 0
-3342 3327 -17443 0
-3344 3329 -17443 0
-3346 3331 -17443 0
-3348 3333 -17443 0
-3350 3335 -17443 0
-3352 3337 -17443 0
-3354 3339 -17443 0
-3356 3341 -17443 0
3355 -3340 -17443 0
-3327 -3342 17443 0
-3329 -3344 17443 0
-3331 -3346 17443 0
-3333 -3348 17443 0
-3335 -3350 17443 0
-3337 -3352 17443 0
-3339 -3354 17443 0
-3341 -3356 17443 0
3340 3355 17443 0
c ((variant_fields_00002_00007_00003=max_left_00002_00007_00003)=tv=SATLiteral(17444))
-8762 3342 -17444 0
-8764 3344 -17444 0
-8766 3346 -17444 0
-8768 3348 -17444 0
-8770 3350 -17444 0
-8772 3352 -17444 0
-8774 3354 -17444 0
-8776 3356 -17444 0
8775 -3355 -17444 0
-3342 8762 -17444 0
-3344 8764 -17444 0
-3346 8766 -17444 0
-3348 8768 -17444 0
-3350 8770 -17444 0
-3352 8772 -17444 0
-3354 8774 -17444 0
-3356 8776 -17444 0
3355 -8775 -17444 0
-8762 -3342 17444 0
-8764 -3344 17444 0
-8766 -3346 17444 0
-8768 -3348 17444 0
-8770 -3350 17444 0
-8772 -3352 17444 0
-8774 -3354 17444 0
-8776 -3356 17444 0
8775 3355 17444 0
c ((max_left_00002_00007_00003=max_left_00002_00007_00004)=tv=SATLiteral(17445))
-3342 3357 -17445 0
-3344 3359 -17445 0
-3346 3361 -17445 0
-3348 3363 -17445 0
-3350 3365 -17445 0
-3352 3367 -17445 0
-3354 3369 -17445 0
-3356 3371 -17445 0
3355 -3370 -17445 0
-3357 3342 -17445 0
-3359 3344 -17445 0
-3361 3346 -17445 0
-3363 3348 -17445 0
-3365 3350 -17445 0
-3367 3352 -17445 0
-3369 3354 -17445 0
-3371 3356 -17445 0
3370 -3355 -17445 0
-3342 -3357 17445 0
-3344 -3359 17445 0
-3346 -3361 17445 0
-3348 -3363 17445 0
-3350 -3365 17445 0
-3352 -3367 17445 0
-3354 -3369 17445 0
-3356 -3371 17445 0
3355 3370 17445 0
c ((variant_fields_00002_00007_00004=max_left_00002_00007_00004)=tv=SATLiteral(17446))
-8777 3357 -17446 0
-8779 3359 -17446 0
-8781 3361 -17446 0
-8783 3363 -17446 0
-8785 3365 -17446 0
-8787 3367 -17446 0
-8789 3369 -17446 0
-8791 3371 -17446 0
8790 -3370 -17446 0
-3357 8777 -17446 0
-3359 8779 -17446 0
-3361 8781 -17446 0
-3363 8783 -17446 0
-3365 8785 -17446 0
-3367 8787 -17446 0
-3369 8789 -17446 0
-3371 8791 -17446 0
3370 -8790 -17446 0
-8777 -3357 17446 0
-8779 -3359 17446 0
-8781 -3361 17446 0
-8783 -3363 17446 0
-8785 -3365 17446 0
-8787 -3367 17446 0
-8789 -3369 17446 0
-8791 -3371 17446 0
8790 3370 17446 0
c ((max_left_00002_00007_00004=max_left_00002_00007_00005)=tv=SATLiteral(17447))
-3357 3372 -17447 0
-3359 3374 -17447 0
-3361 3376 -17447 0
-3363 3378 -17447 0
-3365 3380 -17447 0
-3367 3382 -17447 0
-3369 3384 -17447 0
-3371 3386 -17447 0
3370 -3385 -17447 0
-3372 3357 -17447 0
-3374 3359 -17447 0
-3376 3361 -17447 0
-3378 3363 -17447 0
-3380 3365 -17447 0
-3382 3367 -17447 0
-3384 3369 -17447 0
-3386 3371 -17447 0
3385 -3370 -17447 0
-3357 -3372 17447 0
-3359 -3374 17447 0
-3361 -3376 17447 0
-3363 -3378 17447 0
-3365 -3380 17447 0
-3367 -3382 17447 0
-3369 -3384 17447 0
-3371 -3386 17447 0
3370 3385 17447 0
c ((variant_fields_00002_00007_00005=max_left_00002_00007_00005)=tv=SATLiteral(17448))
-8792 3372 -17448 0
-8794 3374 -17448 0
-8796 3376 -17448 0
-8798 3378 -17448 0
-8800 3380 -17448 0
-8802 3382 -17448 0
-8804 3384 -17448 0
-8806 3386 -17448 0
8805 -3385 -17448 0
-3372 8792 -17448 0
-3374 8794 -17448 0
-3376 8796 -17448 0
-3378 8798 -17448 0
-3380 8800 -17448 0
-3382 8802 -17448 0
-3384 8804 -17448 0
-3386 8806 -17448 0
3385 -8805 -17448 0
-8792 -3372 17448 0
-8794 -3374 17448 0
-8796 -3376 17448 0
-8798 -3378 17448 0
-8800 -3380 17448 0
-8802 -3382 17448 0
-8804 -3384 17448 0
-8806 -3386 17448 0
8805 3385 17448 0
c ((max_left_00002_00007_00005=max_left_00002_00007_00006)=tv=SATLiteral(17449))
-3372 3387 -17449 0
-3374 3389 -17449 0
-3376 3391 -17449 0
-3378 3393 -17449 0
-3380 3395 -17449 0
-3382 3397 -17449 0
-3384 3399 -17449 0
-3386 3401 -17449 0
3385 -3400 -17449 0
-3387 3372 -17449 0
-3389 3374 -17449 0
-3391 3376 -17449 0
-3393 3378 -17449 0
-3395 3380 -17449 0
-3397 3382 -17449 0
-3399 3384 -17449 0
-3401 3386 -17449 0
3400 -3385 -17449 0
-3372 -3387 17449 0
-3374 -3389 17449 0
-3376 -3391 17449 0
-3378 -3393 17449 0
-3380 -3395 17449 0
-3382 -3397 17449 0
-3384 -3399 17449 0
-3386 -3401 17449 0
3385 3400 17449 0
c ((variant_fields_00002_00007_00006=max_left_00002_00007_00006)=tv=SATLiteral(17450))
-8807 3387 -17450 0
-8809 3389 -17450 0
-8811 3391 -17450 0
-8813 3393 -17450 0
-8815 3395 -17450 0
-8817 3397 -17450 0
-8819 3399 -17450 0
-8821 3401 -17450 0
8820 -3400 -17450 0
-3387 8807 -17450 0
-3389 8809 -17450 0
-3391 8811 -17450 0
-3393 8813 -17450 0
-3395 8815 -17450 0
-3397 8817 -17450 0
-3399 8819 -17450 0
-3401 8821 -17450 0
3400 -8820 -17450 0
-8807 -3387 17450 0
-8809 -3389 17450 0
-8811 -3391 17450 0
-8813 -3393 17450 0
-8815 -3395 17450 0
-8817 -3397 17450 0
-8819 -3399 17450 0
-8821 -3401 17450 0
8820 3400 17450 0
c ((max_left_00002_00007_00006=max_left_00002_00007_00007)=tv=SATLiteral(17451))
-3387 3402 -17451 0
-3389 3404 -17451 0
-3391 3406 -17451 0
-3393 3408 -17451 0
-3395 3410 -17451 0
-3397 3412 -17451 0
-3399 3414 -17451 0
-3401 3416 -17451 0
3400 -3415 -17451 0
-3402 3387 -17451 0
-3404 3389 -17451 0
-3406 3391 -17451 0
-3408 3393 -17451 0
-3410 3395 -17451 0
-3412 3397 -17451 0
-3414 3399 -17451 0
-3416 3401 -17451 0
3415 -3400 -17451 0
-3387 -3402 17451 0
-3389 -3404 17451 0
-3391 -3406 17451 0
-3393 -3408 17451 0
-3395 -3410 17451 0
-3397 -3412 17451 0
-3399 -3414 17451 0
-3401 -3416 17451 0
3400 3415 17451 0
c ((variant_fields_00002_00007_00007=max_left_00002_00007_00007)=tv=SATLiteral(17452))
-8822 3402 -17452 0
-8824 3404 -17452 0
-8826 3406 -17452 0
-8828 3408 -17452 0
-8830 3410 -17452 0
-8832 3412 -17452 0
-8834 3414 -17452 0
-8836 3416 -17452 0
8835 -3415 -17452 0
-3402 8822 -17452 0
-3404 8824 -17452 0
-3406 8826 -17452 0
-3408 8828 -17452 0
-3410 8830 -17452 0
-3412 8832 -17452 0
-3414 8834 -17452 0
-3416 8836 -17452 0
3415 -8835 -17452 0
-8822 -3402 17452 0
-8824 -3404 17452 0
-8826 -3406 17452 0
-8828 -3408 17452 0
-8830 -3410 17452 0
-8832 -3412 17452 0
-8834 -3414 17452 0
-8836 -3416 17452 0
8835 3415 17452 0
c ((max_left_00002_00007_00007=max_left_00002_00007_00008)=tv=SATLiteral(17453))
-3402 3417 -17453 0
-3404 3419 -17453 0
-3406 3421 -17453 0
-3408 3423 -17453 0
-3410 3425 -17453 0
-3412 3427 -17453 0
-3414 3429 -17453 0
-3416 3431 -17453 0
3415 -3430 -17453 0
-3417 3402 -17453 0
-3419 3404 -17453 0
-3421 3406 -17453 0
-3423 3408 -17453 0
-3425 3410 -17453 0
-3427 3412 -17453 0
-3429 3414 -17453 0
-3431 3416 -17453 0
3430 -3415 -17453 0
-3402 -3417 17453 0
-3404 -3419 17453 0
-3406 -3421 17453 0
-3408 -3423 17453 0
-3410 -3425 17453 0
-3412 -3427 17453 0
-3414 -3429 17453 0
-3416 -3431 17453 0
3415 3430 17453 0
c ((variant_fields_00002_00007_00008=max_left_00002_00007_00008)=tv=SATLiteral(17454))
-8837 3417 -17454 0
-8839 3419 -17454 0
-8841 3421 -17454 0
-8843 3423 -17454 0
-8845 3425 -17454 0
-8847 3427 -17454 0
-8849 3429 -17454 0
-8851 3431 -17454 0
8850 -3430 -17454 0
-3417 8837 -17454 0
-3419 8839 -17454 0
-3421 8841 -17454 0
-3423 8843 -17454 0
-3425 8845 -17454 0
-3427 8847 -17454 0
-3429 8849 -17454 0
-3431 8851 -17454 0
3430 -8850 -17454 0
-8837 -3417 17454 0
-8839 -3419 17454 0
-8841 -3421 17454 0
-8843 -3423 17454 0
-8845 -3425 17454 0
-8847 -3427 17454 0
-8849 -3429 17454 0
-8851 -3431 17454 0
8850 3430 17454 0
c ((max_left_00002_00007_00008=max_left_00002_00007_00009)=tv=SATLiteral(17455))
-3417 3432 -17455 0
-3419 3434 -17455 0
-3421 3436 -17455 0
-3423 3438 -17455 0
-3425 3440 -17455 0
-3427 3442 -17455 0
-3429 3444 -17455 0
-3431 3446 -17455 0
3430 -3445 -17455 0
-3432 3417 -17455 0
-3434 3419 -17455 0
-3436 3421 -17455 0
-3438 3423 -17455 0
-3440 3425 -17455 0
-3442 3427 -17455 0
-3444 3429 -17455 0
-3446 3431 -17455 0
3445 -3430 -17455 0
-3417 -3432 17455 0
-3419 -3434 17455 0
-3421 -3436 17455 0
-3423 -3438 17455 0
-3425 -3440 17455 0
-3427 -3442 17455 0
-3429 -3444 17455 0
-3431 -3446 17455 0
3430 3445 17455 0
c ((variant_fields_00002_00007_00009=max_left_00002_00007_00009)=tv=SATLiteral(17456))
-8852 3432 -17456 0
-8854 3434 -17456 0
-8856 3436 -17456 0
-8858 3438 -17456 0
-8860 3440 -17456 0
-8862 3442 -17456 0
-8864 3444 -17456 0
-8866 3446 -17456 0
8865 -3445 -17456 0
-3432 8852 -17456 0
-3434 8854 -17456 0
-3436 8856 -17456 0
-3438 8858 -17456 0
-3440 8860 -17456 0
-3442 8862 -17456 0
-3444 8864 -17456 0
-3446 8866 -17456 0
3445 -8865 -17456 0
-8852 -3432 17456 0
-8854 -3434 17456 0
-8856 -3436 17456 0
-8858 -3438 17456 0
-8860 -3440 17456 0
-8862 -3442 17456 0
-8864 -3444 17456 0
-8866 -3446 17456 0
8865 3445 17456 0
c ((max_left_00002_00008_00001=max_left_00002_00008_00002)=tv=SATLiteral(17457))
-3448 3463 -17457 0
-3450 3465 -17457 0
-3452 3467 -17457 0
-3454 3469 -17457 0
-3456 3471 -17457 0
-3458 3473 -17457 0
-3460 3475 -17457 0
-3462 3477 -17457 0
3461 -3476 -17457 0
-3463 3448 -17457 0
-3465 3450 -17457 0
-3467 3452 -17457 0
-3469 3454 -17457 0
-3471 3456 -17457 0
-3473 3458 -17457 0
-3475 3460 -17457 0
-3477 3462 -17457 0
3476 -3461 -17457 0
-3448 -3463 17457 0
-3450 -3465 17457 0
-3452 -3467 17457 0
-3454 -3469 17457 0
-3456 -3471 17457 0
-3458 -3473 17457 0
-3460 -3475 17457 0
-3462 -3477 17457 0
3461 3476 17457 0
c ((variant_fields_00002_00008_00002=max_left_00002_00008_00002)=tv=SATLiteral(17458))
-8882 3463 -17458 0
-8884 3465 -17458 0
-8886 3467 -17458 0
-8888 3469 -17458 0
-8890 3471 -17458 0
-8892 3473 -17458 0
-8894 3475 -17458 0
-8896 3477 -17458 0
8895 -3476 -17458 0
-3463 8882 -17458 0
-3465 8884 -17458 0
-3467 8886 -17458 0
-3469 8888 -17458 0
-3471 8890 -17458 0
-3473 8892 -17458 0
-3475 8894 -17458 0
-3477 8896 -17458 0
3476 -8895 -17458 0
-8882 -3463 17458 0
-8884 -3465 17458 0
-8886 -3467 17458 0
-8888 -3469 17458 0
-8890 -3471 17458 0
-8892 -3473 17458 0
-8894 -3475 17458 0
-8896 -3477 17458 0
8895 3476 17458 0
c ((max_left_00002_00008_00002=max_left_00002_00008_00003)=tv=SATLiteral(17459))
-3463 3478 -17459 0
-3465 3480 -17459 0
-3467 3482 -17459 0
-3469 3484 -17459 0
-3471 3486 -17459 0
-3473 3488 -17459 0
-3475 3490 -17459 0
-3477 3492 -17459 0
3476 -3491 -17459 0
-3478 3463 -17459 0
-3480 3465 -17459 0
-3482 3467 -17459 0
-3484 3469 -17459 0
-3486 3471 -17459 0
-3488 3473 -17459 0
-3490 3475 -17459 0
-3492 3477 -17459 0
3491 -3476 -17459 0
-3463 -3478 17459 0
-3465 -3480 17459 0
-3467 -3482 17459 0
-3469 -3484 17459 0
-3471 -3486 17459 0
-3473 -3488 17459 0
-3475 -3490 17459 0
-3477 -3492 17459 0
3476 3491 17459 0
c ((variant_fields_00002_00008_00003=max_left_00002_00008_00003)=tv=SATLiteral(17460))
-8897 3478 -17460 0
-8899 3480 -17460 0
-8901 3482 -17460 0
-8903 3484 -17460 0
-8905 3486 -17460 0
-8907 3488 -17460 0
-8909 3490 -17460 0
-8911 3492 -17460 0
8910 -3491 -17460 0
-3478 8897 -17460 0
-3480 8899 -17460 0
-3482 8901 -17460 0
-3484 8903 -17460 0
-3486 8905 -17460 0
-3488 8907 -17460 0
-3490 8909 -17460 0
-3492 8911 -17460 0
3491 -8910 -17460 0
-8897 -3478 17460 0
-8899 -3480 17460 0
-8901 -3482 17460 0
-8903 -3484 17460 0
-8905 -3486 17460 0
-8907 -3488 17460 0
-8909 -3490 17460 0
-8911 -3492 17460 0
8910 3491 17460 0
c ((max_left_00002_00008_00003=max_left_00002_00008_00004)=tv=SATLiteral(17461))
-3478 3493 -17461 0
-3480 3495 -17461 0
-3482 3497 -17461 0
-3484 3499 -17461 0
-3486 3501 -17461 0
-3488 3503 -17461 0
-3490 3505 -17461 0
-3492 3507 -17461 0
3491 -3506 -17461 0
-3493 3478 -17461 0
-3495 3480 -17461 0
-3497 3482 -17461 0
-3499 3484 -17461 0
-3501 3486 -17461 0
-3503 3488 -17461 0
-3505 3490 -17461 0
-3507 3492 -17461 0
3506 -3491 -17461 0
-3478 -3493 17461 0
-3480 -3495 17461 0
-3482 -3497 17461 0
-3484 -3499 17461 0
-3486 -3501 17461 0
-3488 -3503 17461 0
-3490 -3505 17461 0
-3492 -3507 17461 0
3491 3506 17461 0
c ((variant_fields_00002_00008_00004=max_left_00002_00008_00004)=tv=SATLiteral(17462))
-8912 3493 -17462 0
-8914 3495 -17462 0
-8916 3497 -17462 0
-8918 3499 -17462 0
-8920 3501 -17462 0
-8922 3503 -17462 0
-8924 3505 -17462 0
-8926 3507 -17462 0
8925 -3506 -17462 0
-3493 8912 -17462 0
-3495 8914 -17462 0
-3497 8916 -17462 0
-3499 8918 -17462 0
-3501 8920 -17462 0
-3503 8922 -17462 0
-3505 8924 -17462 0
-3507 8926 -17462 0
3506 -8925 -17462 0
-8912 -3493 17462 0
-8914 -3495 17462 0
-8916 -3497 17462 0
-8918 -3499 17462 0
-8920 -3501 17462 0
-8922 -3503 17462 0
-8924 -3505 17462 0
-8926 -3507 17462 0
8925 3506 17462 0
c ((max_left_00002_00008_00004=max_left_00002_00008_00005)=tv=SATLiteral(17463))
-3493 3508 -17463 0
-3495 3510 -17463 0
-3497 3512 -17463 0
-3499 3514 -17463 0
-3501 3516 -17463 0
-3503 3518 -17463 0
-3505 3520 -17463 0
-3507 3522 -17463 0
3506 -3521 -17463 0
-3508 3493 -17463 0
-3510 3495 -17463 0
-3512 3497 -17463 0
-3514 3499 -17463 0
-3516 3501 -17463 0
-3518 3503 -17463 0
-3520 3505 -17463 0
-3522 3507 -17463 0
3521 -3506 -17463 0
-3493 -3508 17463 0
-3495 -3510 17463 0
-3497 -3512 17463 0
-3499 -3514 17463 0
-3501 -3516 17463 0
-3503 -3518 17463 0
-3505 -3520 17463 0
-3507 -3522 17463 0
3506 3521 17463 0
c ((variant_fields_00002_00008_00005=max_left_00002_00008_00005)=tv=SATLiteral(17464))
-8927 3508 -17464 0
-8929 3510 -17464 0
-8931 3512 -17464 0
-8933 3514 -17464 0
-8935 3516 -17464 0
-8937 3518 -17464 0
-8939 3520 -17464 0
-8941 3522 -17464 0
8940 -3521 -17464 0
-3508 8927 -17464 0
-3510 8929 -17464 0
-3512 8931 -17464 0
-3514 8933 -17464 0
-3516 8935 -17464 0
-3518 8937 -17464 0
-3520 8939 -17464 0
-3522 8941 -17464 0
3521 -8940 -17464 0
-8927 -3508 17464 0
-8929 -3510 17464 0
-8931 -3512 17464 0
-8933 -3514 17464 0
-8935 -3516 17464 0
-8937 -3518 17464 0
-8939 -3520 17464 0
-8941 -3522 17464 0
8940 3521 17464 0
c ((max_left_00002_00008_00005=max_left_00002_00008_00006)=tv=SATLiteral(17465))
-3508 3523 -17465 0
-3510 3525 -17465 0
-3512 3527 -17465 0
-3514 3529 -17465 0
-3516 3531 -17465 0
-3518 3533 -17465 0
-3520 3535 -17465 0
-3522 3537 -17465 0
3521 -3536 -17465 0
-3523 3508 -17465 0
-3525 3510 -17465 0
-3527 3512 -17465 0
-3529 3514 -17465 0
-3531 3516 -17465 0
-3533 3518 -17465 0
-3535 3520 -17465 0
-3537 3522 -17465 0
3536 -3521 -17465 0
-3508 -3523 17465 0
-3510 -3525 17465 0
-3512 -3527 17465 0
-3514 -3529 17465 0
-3516 -3531 17465 0
-3518 -3533 17465 0
-3520 -3535 17465 0
-3522 -3537 17465 0
3521 3536 17465 0
c ((variant_fields_00002_00008_00006=max_left_00002_00008_00006)=tv=SATLiteral(17466))
-8942 3523 -17466 0
-8944 3525 -17466 0
-8946 3527 -17466 0
-8948 3529 -17466 0
-8950 3531 -17466 0
-8952 3533 -17466 0
-8954 3535 -17466 0
-8956 3537 -17466 0
8955 -3536 -17466 0
-3523 8942 -17466 0
-3525 8944 -17466 0
-3527 8946 -17466 0
-3529 8948 -17466 0
-3531 8950 -17466 0
-3533 8952 -17466 0
-3535 8954 -17466 0
-3537 8956 -17466 0
3536 -8955 -17466 0
-8942 -3523 17466 0
-8944 -3525 17466 0
-8946 -3527 17466 0
-8948 -3529 17466 0
-8950 -3531 17466 0
-8952 -3533 17466 0
-8954 -3535 17466 0
-8956 -3537 17466 0
8955 3536 17466 0
c ((max_left_00002_00008_00006=max_left_00002_00008_00007)=tv=SATLiteral(17467))
-3523 3538 -17467 0
-3525 3540 -17467 0
-3527 3542 -17467 0
-3529 3544 -17467 0
-3531 3546 -17467 0
-3533 3548 -17467 0
-3535 3550 -17467 0
-3537 3552 -17467 0
3536 -3551 -17467 0
-3538 3523 -17467 0
-3540 3525 -17467 0
-3542 3527 -17467 0
-3544 3529 -17467 0
-3546 3531 -17467 0
-3548 3533 -17467 0
-3550 3535 -17467 0
-3552 3537 -17467 0
3551 -3536 -17467 0
-3523 -3538 17467 0
-3525 -3540 17467 0
-3527 -3542 17467 0
-3529 -3544 17467 0
-3531 -3546 17467 0
-3533 -3548 17467 0
-3535 -3550 17467 0
-3537 -3552 17467 0
3536 3551 17467 0
c ((variant_fields_00002_00008_00007=max_left_00002_00008_00007)=tv=SATLiteral(17468))
-8957 3538 -17468 0
-8959 3540 -17468 0
-8961 3542 -17468 0
-8963 3544 -17468 0
-8965 3546 -17468 0
-8967 3548 -17468 0
-8969 3550 -17468 0
-8971 3552 -17468 0
8970 -3551 -17468 0
-3538 8957 -17468 0
-3540 8959 -17468 0
-3542 8961 -17468 0
-3544 8963 -17468 0
-3546 8965 -17468 0
-3548 8967 -17468 0
-3550 8969 -17468 0
-3552 8971 -17468 0
3551 -8970 -17468 0
-8957 -3538 17468 0
-8959 -3540 17468 0
-8961 -3542 17468 0
-8963 -3544 17468 0
-8965 -3546 17468 0
-8967 -3548 17468 0
-8969 -3550 17468 0
-8971 -3552 17468 0
8970 3551 17468 0
c ((max_left_00002_00008_00007=max_left_00002_00008_00008)=tv=SATLiteral(17469))
-3538 3553 -17469 0
-3540 3555 -17469 0
-3542 3557 -17469 0
-3544 3559 -17469 0
-3546 3561 -17469 0
-3548 3563 -17469 0
-3550 3565 -17469 0
-3552 3567 -17469 0
3551 -3566 -17469 0
-3553 3538 -17469 0
-3555 3540 -17469 0
-3557 3542 -17469 0
-3559 3544 -17469 0
-3561 3546 -17469 0
-3563 3548 -17469 0
-3565 3550 -17469 0
-3567 3552 -17469 0
3566 -3551 -17469 0
-3538 -3553 17469 0
-3540 -3555 17469 0
-3542 -3557 17469 0
-3544 -3559 17469 0
-3546 -3561 17469 0
-3548 -3563 17469 0
-3550 -3565 17469 0
-3552 -3567 17469 0
3551 3566 17469 0
c ((variant_fields_00002_00008_00008=max_left_00002_00008_00008)=tv=SATLiteral(17470))
-8972 3553 -17470 0
-8974 3555 -17470 0
-8976 3557 -17470 0
-8978 3559 -17470 0
-8980 3561 -17470 0
-8982 3563 -17470 0
-8984 3565 -17470 0
-8986 3567 -17470 0
8985 -3566 -17470 0
-3553 8972 -17470 0
-3555 8974 -17470 0
-3557 8976 -17470 0
-3559 8978 -17470 0
-3561 8980 -17470 0
-3563 8982 -17470 0
-3565 8984 -17470 0
-3567 8986 -17470 0
3566 -8985 -17470 0
-8972 -3553 17470 0
-8974 -3555 17470 0
-8976 -3557 17470 0
-8978 -3559 17470 0
-8980 -3561 17470 0
-8982 -3563 17470 0
-8984 -3565 17470 0
-8986 -3567 17470 0
8985 3566 17470 0
c ((max_left_00002_00008_00008=max_left_00002_00008_00009)=tv=SATLiteral(17471))
-3553 3568 -17471 0
-3555 3570 -17471 0
-3557 3572 -17471 0
-3559 3574 -17471 0
-3561 3576 -17471 0
-3563 3578 -17471 0
-3565 3580 -17471 0
-3567 3582 -17471 0
3566 -3581 -17471 0
-3568 3553 -17471 0
-3570 3555 -17471 0
-3572 3557 -17471 0
-3574 3559 -17471 0
-3576 3561 -17471 0
-3578 3563 -17471 0
-3580 3565 -17471 0
-3582 3567 -17471 0
3581 -3566 -17471 0
-3553 -3568 17471 0
-3555 -3570 17471 0
-3557 -3572 17471 0
-3559 -3574 17471 0
-3561 -3576 17471 0
-3563 -3578 17471 0
-3565 -3580 17471 0
-3567 -3582 17471 0
3566 3581 17471 0
c ((variant_fields_00002_00008_00009=max_left_00002_00008_00009)=tv=SATLiteral(17472))
-8987 3568 -17472 0
-8989 3570 -17472 0
-8991 3572 -17472 0
-8993 3574 -17472 0
-8995 3576 -17472 0
-8997 3578 -17472 0
-8999 3580 -17472 0
-9001 3582 -17472 0
9000 -3581 -17472 0
-3568 8987 -17472 0
-3570 8989 -17472 0
-3572 8991 -17472 0
-3574 8993 -17472 0
-3576 8995 -17472 0
-3578 8997 -17472 0
-3580 8999 -17472 0
-3582 9001 -17472 0
3581 -9000 -17472 0
-8987 -3568 17472 0
-8989 -3570 17472 0
-8991 -3572 17472 0
-8993 -3574 17472 0
-8995 -3576 17472 0
-8997 -3578 17472 0
-8999 -3580 17472 0
-9001 -3582 17472 0
9000 3581 17472 0
c ((max_left_00002_00009_00001=max_left_00002_00009_00002)=tv=SATLiteral(17473))
-3584 3599 -17473 0
-3586 3601 -17473 0
-3588 3603 -17473 0
-3590 3605 -17473 0
-3592 3607 -17473 0
-3594 3609 -17473 0
-3596 3611 -17473 0
-3598 3613 -17473 0
3597 -3612 -17473 0
-3599 3584 -17473 0
-3601 3586 -17473 0
-3603 3588 -17473 0
-3605 3590 -17473 0
-3607 3592 -17473 0
-3609 3594 -17473 0
-3611 3596 -17473 0
-3613 3598 -17473 0
3612 -3597 -17473 0
-3584 -3599 17473 0
-3586 -3601 17473 0
-3588 -3603 17473 0
-3590 -3605 17473 0
-3592 -3607 17473 0
-3594 -3609 17473 0
-3596 -3611 17473 0
-3598 -3613 17473 0
3597 3612 17473 0
c ((variant_fields_00002_00009_00002=max_left_00002_00009_00002)=tv=SATLiteral(17474))
-9017 3599 -17474 0
-9019 3601 -17474 0
-9021 3603 -17474 0
-9023 3605 -17474 0
-9025 3607 -17474 0
-9027 3609 -17474 0
-9029 3611 -17474 0
-9031 3613 -17474 0
9030 -3612 -17474 0
-3599 9017 -17474 0
-3601 9019 -17474 0
-3603 9021 -17474 0
-3605 9023 -17474 0
-3607 9025 -17474 0
-3609 9027 -17474 0
-3611 9029 -17474 0
-3613 9031 -17474 0
3612 -9030 -17474 0
-9017 -3599 17474 0
-9019 -3601 17474 0
-9021 -3603 17474 0
-9023 -3605 17474 0
-9025 -3607 17474 0
-9027 -3609 17474 0
-9029 -3611 17474 0
-9031 -3613 17474 0
9030 3612 17474 0
c ((max_left_00002_00009_00002=max_left_00002_00009_00003)=tv=SATLiteral(17475))
-3599 3614 -17475 0
-3601 3616 -17475 0
-3603 3618 -17475 0
-3605 3620 -17475 0
-3607 3622 -17475 0
-3609 3624 -17475 0
-3611 3626 -17475 0
-3613 3628 -17475 0
3612 -3627 -17475 0
-3614 3599 -17475 0
-3616 3601 -17475 0
-3618 3603 -17475 0
-3620 3605 -17475 0
-3622 3607 -17475 0
-3624 3609 -17475 0
-3626 3611 -17475 0
-3628 3613 -17475 0
3627 -3612 -17475 0
-3599 -3614 17475 0
-3601 -3616 17475 0
-3603 -3618 17475 0
-3605 -3620 17475 0
-3607 -3622 17475 0
-3609 -3624 17475 0
-3611 -3626 17475 0
-3613 -3628 17475 0
3612 3627 17475 0
c ((variant_fields_00002_00009_00003=max_left_00002_00009_00003)=tv=SATLiteral(17476))
-9032 3614 -17476 0
-9034 3616 -17476 0
-9036 3618 -17476 0
-9038 3620 -17476 0
-9040 3622 -17476 0
-9042 3624 -17476 0
-9044 3626 -17476 0
-9046 3628 -17476 0
9045 -3627 -17476 0
-3614 9032 -17476 0
-3616 9034 -17476 0
-3618 9036 -17476 0
-3620 9038 -17476 0
-3622 9040 -17476 0
-3624 9042 -17476 0
-3626 9044 -17476 0
-3628 9046 -17476 0
3627 -9045 -17476 0
-9032 -3614 17476 0
-9034 -3616 17476 0
-9036 -3618 17476 0
-9038 -3620 17476 0
-9040 -3622 17476 0
-9042 -3624 17476 0
-9044 -3626 17476 0
-9046 -3628 17476 0
9045 3627 17476 0
c ((max_left_00002_00009_00003=max_left_00002_00009_00004)=tv=SATLiteral(17477))
-3614 3629 -17477 0
-3616 3631 -17477 0
-3618 3633 -17477 0
-3620 3635 -17477 0
-3622 3637 -17477 0
-3624 3639 -17477 0
-3626 3641 -17477 0
-3628 3643 -17477 0
3627 -3642 -17477 0
-3629 3614 -17477 0
-3631 3616 -17477 0
-3633 3618 -17477 0
-3635 3620 -17477 0
-3637 3622 -17477 0
-3639 3624 -17477 0
-3641 3626 -17477 0
-3643 3628 -17477 0
3642 -3627 -17477 0
-3614 -3629 17477 0
-3616 -3631 17477 0
-3618 -3633 17477 0
-3620 -3635 17477 0
-3622 -3637 17477 0
-3624 -3639 17477 0
-3626 -3641 17477 0
-3628 -3643 17477 0
3627 3642 17477 0
c ((variant_fields_00002_00009_00004=max_left_00002_00009_00004)=tv=SATLiteral(17478))
-9047 3629 -17478 0
-9049 3631 -17478 0
-9051 3633 -17478 0
-9053 3635 -17478 0
-9055 3637 -17478 0
-9057 3639 -17478 0
-9059 3641 -17478 0
-9061 3643 -17478 0
9060 -3642 -17478 0
-3629 9047 -17478 0
-3631 9049 -17478 0
-3633 9051 -17478 0
-3635 9053 -17478 0
-3637 9055 -17478 0
-3639 9057 -17478 0
-3641 9059 -17478 0
-3643 9061 -17478 0
3642 -9060 -17478 0
-9047 -3629 17478 0
-9049 -3631 17478 0
-9051 -3633 17478 0
-9053 -3635 17478 0
-9055 -3637 17478 0
-9057 -3639 17478 0
-9059 -3641 17478 0
-9061 -3643 17478 0
9060 3642 17478 0
c ((max_left_00002_00009_00004=max_left_00002_00009_00005)=tv=SATLiteral(17479))
-3629 3644 -17479 0
-3631 3646 -17479 0
-3633 3648 -17479 0
-3635 3650 -17479 0
-3637 3652 -17479 0
-3639 3654 -17479 0
-3641 3656 -17479 0
-3643 3658 -17479 0
3642 -3657 -17479 0
-3644 3629 -17479 0
-3646 3631 -17479 0
-3648 3633 -17479 0
-3650 3635 -17479 0
-3652 3637 -17479 0
-3654 3639 -17479 0
-3656 3641 -17479 0
-3658 3643 -17479 0
3657 -3642 -17479 0
-3629 -3644 17479 0
-3631 -3646 17479 0
-3633 -3648 17479 0
-3635 -3650 17479 0
-3637 -3652 17479 0
-3639 -3654 17479 0
-3641 -3656 17479 0
-3643 -3658 17479 0
3642 3657 17479 0
c ((variant_fields_00002_00009_00005=max_left_00002_00009_00005)=tv=SATLiteral(17480))
-9062 3644 -17480 0
-9064 3646 -17480 0
-9066 3648 -17480 0
-9068 3650 -17480 0
-9070 3652 -17480 0
-9072 3654 -17480 0
-9074 3656 -17480 0
-9076 3658 -17480 0
9075 -3657 -17480 0
-3644 9062 -17480 0
-3646 9064 -17480 0
-3648 9066 -17480 0
-3650 9068 -17480 0
-3652 9070 -17480 0
-3654 9072 -17480 0
-3656 9074 -17480 0
-3658 9076 -17480 0
3657 -9075 -17480 0
-9062 -3644 17480 0
-9064 -3646 17480 0
-9066 -3648 17480 0
-9068 -3650 17480 0
-9070 -3652 17480 0
-9072 -3654 17480 0
-9074 -3656 17480 0
-9076 -3658 17480 0
9075 3657 17480 0
c ((max_left_00002_00009_00005=max_left_00002_00009_00006)=tv=SATLiteral(17481))
-3644 3659 -17481 0
-3646 3661 -17481 0
-3648 3663 -17481 0
-3650 3665 -17481 0
-3652 3667 -17481 0
-3654 3669 -17481 0
-3656 3671 -17481 0
-3658 3673 -17481 0
3657 -3672 -17481 0
-3659 3644 -17481 0
-3661 3646 -17481 0
-3663 3648 -17481 0
-3665 3650 -17481 0
-3667 3652 -17481 0
-3669 3654 -17481 0
-3671 3656 -17481 0
-3673 3658 -17481 0
3672 -3657 -17481 0
-3644 -3659 17481 0
-3646 -3661 17481 0
-3648 -3663 17481 0
-3650 -3665 17481 0
-3652 -3667 17481 0
-3654 -3669 17481 0
-3656 -3671 17481 0
-3658 -3673 17481 0
3657 3672 17481 0
c ((variant_fields_00002_00009_00006=max_left_00002_00009_00006)=tv=SATLiteral(17482))
-9077 3659 -17482 0
-9079 3661 -17482 0
-9081 3663 -17482 0
-9083 3665 -17482 0
-9085 3667 -17482 0
-9087 3669 -17482 0
-9089 3671 -17482 0
-9091 3673 -17482 0
9090 -3672 -17482 0
-3659 9077 -17482 0
-3661 9079 -17482 0
-3663 9081 -17482 0
-3665 9083 -17482 0
-3667 9085 -17482 0
-3669 9087 -17482 0
-3671 9089 -17482 0
-3673 9091 -17482 0
3672 -9090 -17482 0
-9077 -3659 17482 0
-9079 -3661 17482 0
-9081 -3663 17482 0
-9083 -3665 17482 0
-9085 -3667 17482 0
-9087 -3669 17482 0
-9089 -3671 17482 0
-9091 -3673 17482 0
9090 3672 17482 0
c ((max_left_00002_00009_00006=max_left_00002_00009_00007)=tv=SATLiteral(17483))
-3659 3674 -17483 0
-3661 3676 -17483 0
-3663 3678 -17483 0
-3665 3680 -17483 0
-3667 3682 -17483 0
-3669 3684 -17483 0
-3671 3686 -17483 0
-3673 3688 -17483 0
3672 -3687 -17483 0
-3674 3659 -17483 0
-3676 3661 -17483 0
-3678 3663 -17483 0
-3680 3665 -17483 0
-3682 3667 -17483 0
-3684 3669 -17483 0
-3686 3671 -17483 0
-3688 3673 -17483 0
3687 -3672 -17483 0
-3659 -3674 17483 0
-3661 -3676 17483 0
-3663 -3678 17483 0
-3665 -3680 17483 0
-3667 -3682 17483 0
-3669 -3684 17483 0
-3671 -3686 17483 0
-3673 -3688 17483 0
3672 3687 17483 0
c ((variant_fields_00002_00009_00007=max_left_00002_00009_00007)=tv=SATLiteral(17484))
-9092 3674 -17484 0
-9094 3676 -17484 0
-9096 3678 -17484 0
-9098 3680 -17484 0
-9100 3682 -17484 0
-9102 3684 -17484 0
-9104 3686 -17484 0
-9106 3688 -17484 0
9105 -3687 -17484 0
-3674 9092 -17484 0
-3676 9094 -17484 0
-3678 9096 -17484 0
-3680 9098 -17484 0
-3682 9100 -17484 0
-3684 9102 -17484 0
-3686 9104 -17484 0
-3688 9106 -17484 0
3687 -9105 -17484 0
-9092 -3674 17484 0
-9094 -3676 17484 0
-9096 -3678 17484 0
-9098 -3680 17484 0
-9100 -3682 17484 0
-9102 -3684 17484 0
-9104 -3686 17484 0
-9106 -3688 17484 0
9105 3687 17484 0
c ((max_left_00002_00009_00007=max_left_00002_00009_00008)=tv=SATLiteral(17485))
-3674 3689 -17485 0
-3676 3691 -17485 0
-3678 3693 -17485 0
-3680 3695 -17485 0
-3682 3697 -17485 0
-3684 3699 -17485 0
-3686 3701 -17485 0
-3688 3703 -17485 0
3687 -3702 -17485 0
-3689 3674 -17485 0
-3691 3676 -17485 0
-3693 3678 -17485 0
-3695 3680 -17485 0
-3697 3682 -17485 0
-3699 3684 -17485 0
-3701 3686 -17485 0
-3703 3688 -17485 0
3702 -3687 -17485 0
-3674 -3689 17485 0
-3676 -3691 17485 0
-3678 -3693 17485 0
-3680 -3695 17485 0
-3682 -3697 17485 0
-3684 -3699 17485 0
-3686 -3701 17485 0
-3688 -3703 17485 0
3687 3702 17485 0
c ((variant_fields_00002_00009_00008=max_left_00002_00009_00008)=tv=SATLiteral(17486))
-9107 3689 -17486 0
-9109 3691 -17486 0
-9111 3693 -17486 0
-9113 3695 -17486 0
-9115 3697 -17486 0
-9117 3699 -17486 0
-9119 3701 -17486 0
-9121 3703 -17486 0
9120 -3702 -17486 0
-3689 9107 -17486 0
-3691 9109 -17486 0
-3693 9111 -17486 0
-3695 9113 -17486 0
-3697 9115 -17486 0
-3699 9117 -17486 0
-3701 9119 -17486 0
-3703 9121 -17486 0
3702 -9120 -17486 0
-9107 -3689 17486 0
-9109 -3691 17486 0
-9111 -3693 17486 0
-9113 -3695 17486 0
-9115 -3697 17486 0
-9117 -3699 17486 0
-9119 -3701 17486 0
-9121 -3703 17486 0
9120 3702 17486 0
c ((max_left_00002_00009_00008=max_left_00002_00009_00009)=tv=SATLiteral(17487))
-3689 3704 -17487 0
-3691 3706 -17487 0
-3693 3708 -17487 0
-3695 3710 -17487 0
-3697 3712 -17487 0
-3699 3714 -17487 0
-3701 3716 -17487 0
-3703 3718 -17487 0
3702 -3717 -17487 0
-3704 3689 -17487 0
-3706 3691 -17487 0
-3708 3693 -17487 0
-3710 3695 -17487 0
-3712 3697 -17487 0
-3714 3699 -17487 0
-3716 3701 -17487 0
-3718 3703 -17487 0
3717 -3702 -17487 0
-3689 -3704 17487 0
-3691 -3706 17487 0
-3693 -3708 17487 0
-3695 -3710 17487 0
-3697 -3712 17487 0
-3699 -3714 17487 0
-3701 -3716 17487 0
-3703 -3718 17487 0
3702 3717 17487 0
c ((variant_fields_00002_00009_00009=max_left_00002_00009_00009)=tv=SATLiteral(17488))
-9122 3704 -17488 0
-9124 3706 -17488 0
-9126 3708 -17488 0
-9128 3710 -17488 0
-9130 3712 -17488 0
-9132 3714 -17488 0
-9134 3716 -17488 0
-9136 3718 -17488 0
9135 -3717 -17488 0
-3704 9122 -17488 0
-3706 9124 -17488 0
-3708 9126 -17488 0
-3710 9128 -17488 0
-3712 9130 -17488 0
-3714 9132 -17488 0
-3716 9134 -17488 0
-3718 9136 -17488 0
3717 -9135 -17488 0
-9122 -3704 17488 0
-9124 -3706 17488 0
-9126 -3708 17488 0
-9128 -3710 17488 0
-9130 -3712 17488 0
-9132 -3714 17488 0
-9134 -3716 17488 0
-9136 -3718 17488 0
9135 3717 17488 0
c ((variant_fields_00003_00001_00002=max_left_00003_00001_00002)=tv=SATLiteral(17489))
-9152 3735 -17489 0
-9154 3737 -17489 0
-9156 3739 -17489 0
-9158 3741 -17489 0
-9160 3743 -17489 0
-9162 3745 -17489 0
-9164 3747 -17489 0
-9166 3749 -17489 0
9165 -3748 -17489 0
-3735 9152 -17489 0
-3737 9154 -17489 0
-3739 9156 -17489 0
-3741 9158 -17489 0
-3743 9160 -17489 0
-3745 9162 -17489 0
-3747 9164 -17489 0
-3749 9166 -17489 0
3748 -9165 -17489 0
-9152 -3735 17489 0
-9154 -3737 17489 0
-9156 -3739 17489 0
-9158 -3741 17489 0
-9160 -3743 17489 0
-9162 -3745 17489 0
-9164 -3747 17489 0
-9166 -3749 17489 0
9165 3748 17489 0
c ((max_left_00003_00001_00001=max_left_00003_00001_00002)=tv=SATLiteral(17490))
-3720 3735 -17490 0
-3722 3737 -17490 0
-3724 3739 -17490 0
-3726 3741 -17490 0
-3728 3743 -17490 0
-3730 3745 -17490 0
-3732 3747 -17490 0
-3734 3749 -17490 0
3733 -3748 -17490 0
-3735 3720 -17490 0
-3737 3722 -17490 0
-3739 3724 -17490 0
-3741 3726 -17490 0
-3743 3728 -17490 0
-3745 3730 -17490 0
-3747 3732 -17490 0
-3749 3734 -17490 0
3748 -3733 -17490 0
-3720 -3735 17490 0
-3722 -3737 17490 0
-3724 -3739 17490 0
-3726 -3741 17490 0
-3728 -3743 17490 0
-3730 -3745 17490 0
-3732 -3747 17490 0
-3734 -3749 17490 0
3733 3748 17490 0
c ((variant_fields_00003_00001_00003=max_left_00003_00001_00003)=tv=SATLiteral(17491))
-9167 3750 -17491 0
-9169 3752 -17491 0
-9171 3754 -17491 0
-9173 3756 -17491 0
-9175 3758 -17491 0
-9177 3760 -17491 0
-9179 3762 -17491 0
-9181 3764 -17491 0
9180 -3763 -17491 0
-3750 9167 -17491 0
-3752 9169 -17491 0
-3754 9171 -17491 0
-3756 9173 -17491 0
-3758 9175 -17491 0
-3760 9177 -17491 0
-3762 9179 -17491 0
-3764 9181 -17491 0
3763 -9180 -17491 0
-9167 -3750 17491 0
-9169 -3752 17491 0
-9171 -3754 17491 0
-9173 -3756 17491 0
-9175 -3758 17491 0
-9177 -3760 17491 0
-9179 -3762 17491 0
-9181 -3764 17491 0
9180 3763 17491 0
c ((max_left_00003_00001_00002=max_left_00003_00001_00003)=tv=SATLiteral(17492))
-3735 3750 -17492 0
-3737 3752 -17492 0
-3739 3754 -17492 0
-3741 3756 -17492 0
-3743 3758 -17492 0
-3745 3760 -17492 0
-3747 3762 -17492 0
-3749 3764 -17492 0
3748 -3763 -17492 0
-3750 3735 -17492 0
-3752 3737 -17492 0
-3754 3739 -17492 0
-3756 3741 -17492 0
-3758 3743 -17492 0
-3760 3745 -17492 0
-3762 3747 -17492 0
-3764 3749 -17492 0
3763 -3748 -17492 0
-3735 -3750 17492 0
-3737 -3752 17492 0
-3739 -3754 17492 0
-3741 -3756 17492 0
-3743 -3758 17492 0
-3745 -3760 17492 0
-3747 -3762 17492 0
-3749 -3764 17492 0
3748 3763 17492 0
c ((variant_fields_00003_00001_00004=max_left_00003_00001_00004)=tv=SATLiteral(17493))
-9182 3765 -17493 0
-9184 3767 -17493 0
-9186 3769 -17493 0
-9188 3771 -17493 0
-9190 3773 -17493 0
-9192 3775 -17493 0
-9194 3777 -17493 0
-9196 3779 -17493 0
9195 -3778 -17493 0
-3765 9182 -17493 0
-3767 9184 -17493 0
-3769 9186 -17493 0
-3771 9188 -17493 0
-3773 9190 -17493 0
-3775 9192 -17493 0
-3777 9194 -17493 0
-3779 9196 -17493 0
3778 -9195 -17493 0
-9182 -3765 17493 0
-9184 -3767 17493 0
-9186 -3769 17493 0
-9188 -3771 17493 0
-9190 -3773 17493 0
-9192 -3775 17493 0
-9194 -3777 17493 0
-9196 -3779 17493 0
9195 3778 17493 0
c ((max_left_00003_00001_00003=max_left_00003_00001_00004)=tv=SATLiteral(17494))
-3750 3765 -17494 0
-3752 3767 -17494 0
-3754 3769 -17494 0
-3756 3771 -17494 0
-3758 3773 -17494 0
-3760 3775 -17494 0
-3762 3777 -17494 0
-3764 3779 -17494 0
3763 -3778 -17494 0
-3765 3750 -17494 0
-3767 3752 -17494 0
-3769 3754 -17494 0
-3771 3756 -17494 0
-3773 3758 -17494 0
-3775 3760 -17494 0
-3777 3762 -17494 0
-3779 3764 -17494 0
3778 -3763 -17494 0
-3750 -3765 17494 0
-3752 -3767 17494 0
-3754 -3769 17494 0
-3756 -3771 17494 0
-3758 -3773 17494 0
-3760 -3775 17494 0
-3762 -3777 17494 0
-3764 -3779 17494 0
3763 3778 17494 0
c ((variant_fields_00003_00001_00005=max_left_00003_00001_00005)=tv=SATLiteral(17495))
-9197 3780 -17495 0
-9199 3782 -17495 0
-9201 3784 -17495 0
-9203 3786 -17495 0
-9205 3788 -17495 0
-9207 3790 -17495 0
-9209 3792 -17495 0
-9211 3794 -17495 0
9210 -3793 -17495 0
-3780 9197 -17495 0
-3782 9199 -17495 0
-3784 9201 -17495 0
-3786 9203 -17495 0
-3788 9205 -17495 0
-3790 9207 -17495 0
-3792 9209 -17495 0
-3794 9211 -17495 0
3793 -9210 -17495 0
-9197 -3780 17495 0
-9199 -3782 17495 0
-9201 -3784 17495 0
-9203 -3786 17495 0
-9205 -3788 17495 0
-9207 -3790 17495 0
-9209 -3792 17495 0
-9211 -3794 17495 0
9210 3793 17495 0
c ((max_left_00003_00001_00004=max_left_00003_00001_00005)=tv=SATLiteral(17496))
-3765 3780 -17496 0
-3767 3782 -17496 0
-3769 3784 -17496 0
-3771 3786 -17496 0
-3773 3788 -17496 0
-3775 3790 -17496 0
-3777 3792 -17496 0
-3779 3794 -17496 0
3778 -3793 -17496 0
-3780 3765 -17496 0
-3782 3767 -17496 0
-3784 3769 -17496 0
-3786 3771 -17496 0
-3788 3773 -17496 0
-3790 3775 -17496 0
-3792 3777 -17496 0
-3794 3779 -17496 0
3793 -3778 -17496 0
-3765 -3780 17496 0
-3767 -3782 17496 0
-3769 -3784 17496 0
-3771 -3786 17496 0
-3773 -3788 17496 0
-3775 -3790 17496 0
-3777 -3792 17496 0
-3779 -3794 17496 0
3778 3793 17496 0
c ((variant_fields_00003_00001_00006=max_left_00003_00001_00006)=tv=SATLiteral(17497))
-9212 3795 -17497 0
-9214 3797 -17497 0
-9216 3799 -17497 0
-9218 3801 -17497 0
-9220 3803 -17497 0
-9222 3805 -17497 0
-9224 3807 -17497 0
-9226 3809 -17497 0
9225 -3808 -17497 0
-3795 9212 -17497 0
-3797 9214 -17497 0
-3799 9216 -17497 0
-3801 9218 -17497 0
-3803 9220 -17497 0
-3805 9222 -17497 0
-3807 9224 -17497 0
-3809 9226 -17497 0
3808 -9225 -17497 0
-9212 -3795 17497 0
-9214 -3797 17497 0
-9216 -3799 17497 0
-9218 -3801 17497 0
-9220 -3803 17497 0
-9222 -3805 17497 0
-9224 -3807 17497 0
-9226 -3809 17497 0
9225 3808 17497 0
c ((max_left_00003_00001_00005=max_left_00003_00001_00006)=tv=SATLiteral(17498))
-3780 3795 -17498 0
-3782 3797 -17498 0
-3784 3799 -17498 0
-3786 3801 -17498 0
-3788 3803 -17498 0
-3790 3805 -17498 0
-3792 3807 -17498 0
-3794 3809 -17498 0
3793 -3808 -17498 0
-3795 3780 -17498 0
-3797 3782 -17498 0
-3799 3784 -17498 0
-3801 3786 -17498 0
-3803 3788 -17498 0
-3805 3790 -17498 0
-3807 3792 -17498 0
-3809 3794 -17498 0
3808 -3793 -17498 0
-3780 -3795 17498 0
-3782 -3797 17498 0
-3784 -3799 17498 0
-3786 -3801 17498 0
-3788 -3803 17498 0
-3790 -3805 17498 0
-3792 -3807 17498 0
-3794 -3809 17498 0
3793 3808 17498 0
c ((variant_fields_00003_00001_00007=max_left_00003_00001_00007)=tv=SATLiteral(17499))
-9227 3810 -17499 0
-9229 3812 -17499 0
-9231 3814 -17499 0
-9233 3816 -17499 0
-9235 3818 -17499 0
-9237 3820 -17499 0
-9239 3822 -17499 0
-9241 3824 -17499 0
9240 -3823 -17499 0
-3810 9227 -17499 0
-3812 9229 -17499 0
-3814 9231 -17499 0
-3816 9233 -17499 0
-3818 9235 -17499 0
-3820 9237 -17499 0
-3822 9239 -17499 0
-3824 9241 -17499 0
3823 -9240 -17499 0
-9227 -3810 17499 0
-9229 -3812 17499 0
-9231 -3814 17499 0
-9233 -3816 17499 0
-9235 -3818 17499 0
-9237 -3820 17499 0
-9239 -3822 17499 0
-9241 -3824 17499 0
9240 3823 17499 0
c ((max_left_00003_00001_00006=max_left_00003_00001_00007)=tv=SATLiteral(17500))
-3795 3810 -17500 0
-3797 3812 -17500 0
-3799 3814 -17500 0
-3801 3816 -17500 0
-3803 3818 -17500 0
-3805 3820 -17500 0
-3807 3822 -17500 0
-3809 3824 -17500 0
3808 -3823 -17500 0
-3810 3795 -17500 0
-3812 3797 -17500 0
-3814 3799 -17500 0
-3816 3801 -17500 0
-3818 3803 -17500 0
-3820 3805 -17500 0
-3822 3807 -17500 0
-3824 3809 -17500 0
3823 -3808 -17500 0
-3795 -3810 17500 0
-3797 -3812 17500 0
-3799 -3814 17500 0
-3801 -3816 17500 0
-3803 -3818 17500 0
-3805 -3820 17500 0
-3807 -3822 17500 0
-3809 -3824 17500 0
3808 3823 17500 0
c ((variant_fields_00003_00001_00008=max_left_00003_00001_00008)=tv=SATLiteral(17501))
-9242 3825 -17501 0
-9244 3827 -17501 0
-9246 3829 -17501 0
-9248 3831 -17501 0
-9250 3833 -17501 0
-9252 3835 -17501 0
-9254 3837 -17501 0
-9256 3839 -17501 0
9255 -3838 -17501 0
-3825 9242 -17501 0
-3827 9244 -17501 0
-3829 9246 -17501 0
-3831 9248 -17501 0
-3833 9250 -17501 0
-3835 9252 -17501 0
-3837 9254 -17501 0
-3839 9256 -17501 0
3838 -9255 -17501 0
-9242 -3825 17501 0
-9244 -3827 17501 0
-9246 -3829 17501 0
-9248 -3831 17501 0
-9250 -3833 17501 0
-9252 -3835 17501 0
-9254 -3837 17501 0
-9256 -3839 17501 0
9255 3838 17501 0
c ((max_left_00003_00001_00007=max_left_00003_00001_00008)=tv=SATLiteral(17502))
-3810 3825 -17502 0
-3812 3827 -17502 0
-3814 3829 -17502 0
-3816 3831 -17502 0
-3818 3833 -17502 0
-3820 3835 -17502 0
-3822 3837 -17502 0
-3824 3839 -17502 0
3823 -3838 -17502 0
-3825 3810 -17502 0
-3827 3812 -17502 0
-3829 3814 -17502 0
-3831 3816 -17502 0
-3833 3818 -17502 0
-3835 3820 -17502 0
-3837 3822 -17502 0
-3839 3824 -17502 0
3838 -3823 -17502 0
-3810 -3825 17502 0
-3812 -3827 17502 0
-3814 -3829 17502 0
-3816 -3831 17502 0
-3818 -3833 17502 0
-3820 -3835 17502 0
-3822 -3837 17502 0
-3824 -3839 17502 0
3823 3838 17502 0
c ((variant_fields_00003_00001_00009=max_left_00003_00001_00009)=tv=SATLiteral(17503))
-9257 3840 -17503 0
-9259 3842 -17503 0
-9261 3844 -17503 0
-9263 3846 -17503 0
-9265 3848 -17503 0
-9267 3850 -17503 0
-9269 3852 -17503 0
-9271 3854 -17503 0
9270 -3853 -17503 0
-3840 9257 -17503 0
-3842 9259 -17503 0
-3844 9261 -17503 0
-3846 9263 -17503 0
-3848 9265 -17503 0
-3850 9267 -17503 0
-3852 9269 -17503 0
-3854 9271 -17503 0
3853 -9270 -17503 0
-9257 -3840 17503 0
-9259 -3842 17503 0
-9261 -3844 17503 0
-9263 -3846 17503 0
-9265 -3848 17503 0
-9267 -3850 17503 0
-9269 -3852 17503 0
-9271 -3854 17503 0
9270 3853 17503 0
c ((max_left_00003_00001_00008=max_left_00003_00001_00009)=tv=SATLiteral(17504))
-3825 3840 -17504 0
-3827 3842 -17504 0
-3829 3844 -17504 0
-3831 3846 -17504 0
-3833 3848 -17504 0
-3835 3850 -17504 0
-3837 3852 -17504 0
-3839 3854 -17504 0
3838 -3853 -17504 0
-3840 3825 -17504 0
-3842 3827 -17504 0
-3844 3829 -17504 0
-3846 3831 -17504 0
-3848 3833 -17504 0
-3850 3835 -17504 0
-3852 3837 -17504 0
-3854 3839 -17504 0
3853 -3838 -17504 0
-3825 -3840 17504 0
-3827 -3842 17504 0
-3829 -3844 17504 0
-3831 -3846 17504 0
-3833 -3848 17504 0
-3835 -3850 17504 0
-3837 -3852 17504 0
-3839 -3854 17504 0
3838 3853 17504 0
c ((max_left_00003_00002_00001=max_left_00003_00002_00002)=tv=SATLiteral(17505))
-3856 3871 -17505 0
-3858 3873 -17505 0
-3860 3875 -17505 0
-3862 3877 -17505 0
-3864 3879 -17505 0
-3866 3881 -17505 0
-3868 3883 -17505 0
-3870 3885 -17505 0
3869 -3884 -17505 0
-3871 3856 -17505 0
-3873 3858 -17505 0
-3875 3860 -17505 0
-3877 3862 -17505 0
-3879 3864 -17505 0
-3881 3866 -17505 0
-3883 3868 -17505 0
-3885 3870 -17505 0
3884 -3869 -17505 0
-3856 -3871 17505 0
-3858 -3873 17505 0
-3860 -3875 17505 0
-3862 -3877 17505 0
-3864 -3879 17505 0
-3866 -3881 17505 0
-3868 -3883 17505 0
-3870 -3885 17505 0
3869 3884 17505 0
c ((variant_fields_00003_00002_00002=max_left_00003_00002_00002)=tv=SATLiteral(17506))
-9287 3871 -17506 0
-9289 3873 -17506 0
-9291 3875 -17506 0
-9293 3877 -17506 0
-9295 3879 -17506 0
-9297 3881 -17506 0
-9299 3883 -17506 0
-9301 3885 -17506 0
9300 -3884 -17506 0
-3871 9287 -17506 0
-3873 9289 -17506 0
-3875 9291 -17506 0
-3877 9293 -17506 0
-3879 9295 -17506 0
-3881 9297 -17506 0
-3883 9299 -17506 0
-3885 9301 -17506 0
3884 -9300 -17506 0
-9287 -3871 17506 0
-9289 -3873 17506 0
-9291 -3875 17506 0
-9293 -3877 17506 0
-9295 -3879 17506 0
-9297 -3881 17506 0
-9299 -3883 17506 0
-9301 -3885 17506 0
9300 3884 17506 0
c ((max_left_00003_00002_00002=max_left_00003_00002_00003)=tv=SATLiteral(17507))
-3871 3886 -17507 0
-3873 3888 -17507 0
-3875 3890 -17507 0
-3877 3892 -17507 0
-3879 3894 -17507 0
-3881 3896 -17507 0
-3883 3898 -17507 0
-3885 3900 -17507 0
3884 -3899 -17507 0
-3886 3871 -17507 0
-3888 3873 -17507 0
-3890 3875 -17507 0
-3892 3877 -17507 0
-3894 3879 -17507 0
-3896 3881 -17507 0
-3898 3883 -17507 0
-3900 3885 -17507 0
3899 -3884 -17507 0
-3871 -3886 17507 0
-3873 -3888 17507 0
-3875 -3890 17507 0
-3877 -3892 17507 0
-3879 -3894 17507 0
-3881 -3896 17507 0
-3883 -3898 17507 0
-3885 -3900 17507 0
3884 3899 17507 0
c ((variant_fields_00003_00002_00003=max_left_00003_00002_00003)=tv=SATLiteral(17508))
-9302 3886 -17508 0
-9304 3888 -17508 0
-9306 3890 -17508 0
-9308 3892 -17508 0
-9310 3894 -17508 0
-9312 3896 -17508 0
-9314 3898 -17508 0
-9316 3900 -17508 0
9315 -3899 -17508 0
-3886 9302 -17508 0
-3888 9304 -17508 0
-3890 9306 -17508 0
-3892 9308 -17508 0
-3894 9310 -17508 0
-3896 9312 -17508 0
-3898 9314 -17508 0
-3900 9316 -17508 0
3899 -9315 -17508 0
-9302 -3886 17508 0
-9304 -3888 17508 0
-9306 -3890 17508 0
-9308 -3892 17508 0
-9310 -3894 17508 0
-9312 -3896 17508 0
-9314 -3898 17508 0
-9316 -3900 17508 0
9315 3899 17508 0
c ((max_left_00003_00002_00003=max_left_00003_00002_00004)=tv=SATLiteral(17509))
-3886 3901 -17509 0
-3888 3903 -17509 0
-3890 3905 -17509 0
-3892 3907 -17509 0
-3894 3909 -17509 0
-3896 3911 -17509 0
-3898 3913 -17509 0
-3900 3915 -17509 0
3899 -3914 -17509 0
-3901 3886 -17509 0
-3903 3888 -17509 0
-3905 3890 -17509 0
-3907 3892 -17509 0
-3909 3894 -17509 0
-3911 3896 -17509 0
-3913 3898 -17509 0
-3915 3900 -17509 0
3914 -3899 -17509 0
-3886 -3901 17509 0
-3888 -3903 17509 0
-3890 -3905 17509 0
-3892 -3907 17509 0
-3894 -3909 17509 0
-3896 -3911 17509 0
-3898 -3913 17509 0
-3900 -3915 17509 0
3899 3914 17509 0
c ((variant_fields_00003_00002_00004=max_left_00003_00002_00004)=tv=SATLiteral(17510))
-9317 3901 -17510 0
-9319 3903 -17510 0
-9321 3905 -17510 0
-9323 3907 -17510 0
-9325 3909 -17510 0
-9327 3911 -17510 0
-9329 3913 -17510 0
-9331 3915 -17510 0
9330 -3914 -17510 0
-3901 9317 -17510 0
-3903 9319 -17510 0
-3905 9321 -17510 0
-3907 9323 -17510 0
-3909 9325 -17510 0
-3911 9327 -17510 0
-3913 9329 -17510 0
-3915 9331 -17510 0
3914 -9330 -17510 0
-9317 -3901 17510 0
-9319 -3903 17510 0
-9321 -3905 17510 0
-9323 -3907 17510 0
-9325 -3909 17510 0
-9327 -3911 17510 0
-9329 -3913 17510 0
-9331 -3915 17510 0
9330 3914 17510 0
c ((max_left_00003_00002_00004=max_left_00003_00002_00005)=tv=SATLiteral(17511))
-3901 3916 -17511 0
-3903 3918 -17511 0
-3905 3920 -17511 0
-3907 3922 -17511 0
-3909 3924 -17511 0
-3911 3926 -17511 0
-3913 3928 -17511 0
-3915 3930 -17511 0
3914 -3929 -17511 0
-3916 3901 -17511 0
-3918 3903 -17511 0
-3920 3905 -17511 0
-3922 3907 -17511 0
-3924 3909 -17511 0
-3926 3911 -17511 0
-3928 3913 -17511 0
-3930 3915 -17511 0
3929 -3914 -17511 0
-3901 -3916 17511 0
-3903 -3918 17511 0
-3905 -3920 17511 0
-3907 -3922 17511 0
-3909 -3924 17511 0
-3911 -3926 17511 0
-3913 -3928 17511 0
-3915 -3930 17511 0
3914 3929 17511 0
c ((variant_fields_00003_00002_00005=max_left_00003_00002_00005)=tv=SATLiteral(17512))
-9332 3916 -17512 0
-9334 3918 -17512 0
-9336 3920 -17512 0
-9338 3922 -17512 0
-9340 3924 -17512 0
-9342 3926 -17512 0
-9344 3928 -17512 0
-9346 3930 -17512 0
9345 -3929 -17512 0
-3916 9332 -17512 0
-3918 9334 -17512 0
-3920 9336 -17512 0
-3922 9338 -17512 0
-3924 9340 -17512 0
-3926 9342 -17512 0
-3928 9344 -17512 0
-3930 9346 -17512 0
3929 -9345 -17512 0
-9332 -3916 17512 0
-9334 -3918 17512 0
-9336 -3920 17512 0
-9338 -3922 17512 0
-9340 -3924 17512 0
-9342 -3926 17512 0
-9344 -3928 17512 0
-9346 -3930 17512 0
9345 3929 17512 0
c ((max_left_00003_00002_00005=max_left_00003_00002_00006)=tv=SATLiteral(17513))
-3916 3931 -17513 0
-3918 3933 -17513 0
-3920 3935 -17513 0
-3922 3937 -17513 0
-3924 3939 -17513 0
-3926 3941 -17513 0
-3928 3943 -17513 0
-3930 3945 -17513 0
3929 -3944 -17513 0
-3931 3916 -17513 0
-3933 3918 -17513 0
-3935 3920 -17513 0
-3937 3922 -17513 0
-3939 3924 -17513 0
-3941 3926 -17513 0
-3943 3928 -17513 0
-3945 3930 -17513 0
3944 -3929 -17513 0
-3916 -3931 17513 0
-3918 -3933 17513 0
-3920 -3935 17513 0
-3922 -3937 17513 0
-3924 -3939 17513 0
-3926 -3941 17513 0
-3928 -3943 17513 0
-3930 -3945 17513 0
3929 3944 17513 0
c ((variant_fields_00003_00002_00006=max_left_00003_00002_00006)=tv=SATLiteral(17514))
-9347 3931 -17514 0
-9349 3933 -17514 0
-9351 3935 -17514 0
-9353 3937 -17514 0
-9355 3939 -17514 0
-9357 3941 -17514 0
-9359 3943 -17514 0
-9361 3945 -17514 0
9360 -3944 -17514 0
-3931 9347 -17514 0
-3933 9349 -17514 0
-3935 9351 -17514 0
-3937 9353 -17514 0
-3939 9355 -17514 0
-3941 9357 -17514 0
-3943 9359 -17514 0
-3945 9361 -17514 0
3944 -9360 -17514 0
-9347 -3931 17514 0
-9349 -3933 17514 0
-9351 -3935 17514 0
-9353 -3937 17514 0
-9355 -3939 17514 0
-9357 -3941 17514 0
-9359 -3943 17514 0
-9361 -3945 17514 0
9360 3944 17514 0
c ((max_left_00003_00002_00006=max_left_00003_00002_00007)=tv=SATLiteral(17515))
-3931 3946 -17515 0
-3933 3948 -17515 0
-3935 3950 -17515 0
-3937 3952 -17515 0
-3939 3954 -17515 0
-3941 3956 -17515 0
-3943 3958 -17515 0
-3945 3960 -17515 0
3944 -3959 -17515 0
-3946 3931 -17515 0
-3948 3933 -17515 0
-3950 3935 -17515 0
-3952 3937 -17515 0
-3954 3939 -17515 0
-3956 3941 -17515 0
-3958 3943 -17515 0
-3960 3945 -17515 0
3959 -3944 -17515 0
-3931 -3946 17515 0
-3933 -3948 17515 0
-3935 -3950 17515 0
-3937 -3952 17515 0
-3939 -3954 17515 0
-3941 -3956 17515 0
-3943 -3958 17515 0
-3945 -3960 17515 0
3944 3959 17515 0
c ((variant_fields_00003_00002_00007=max_left_00003_00002_00007)=tv=SATLiteral(17516))
-9362 3946 -17516 0
-9364 3948 -17516 0
-9366 3950 -17516 0
-9368 3952 -17516 0
-9370 3954 -17516 0
-9372 3956 -17516 0
-9374 3958 -17516 0
-9376 3960 -17516 0
9375 -3959 -17516 0
-3946 9362 -17516 0
-3948 9364 -17516 0
-3950 9366 -17516 0
-3952 9368 -17516 0
-3954 9370 -17516 0
-3956 9372 -17516 0
-3958 9374 -17516 0
-3960 9376 -17516 0
3959 -9375 -17516 0
-9362 -3946 17516 0
-9364 -3948 17516 0
-9366 -3950 17516 0
-9368 -3952 17516 0
-9370 -3954 17516 0
-9372 -3956 17516 0
-9374 -3958 17516 0
-9376 -3960 17516 0
9375 3959 17516 0
c ((max_left_00003_00002_00007=max_left_00003_00002_00008)=tv=SATLiteral(17517))
-3946 3961 -17517 0
-3948 3963 -17517 0
-3950 3965 -17517 0
-3952 3967 -17517 0
-3954 3969 -17517 0
-3956 3971 -17517 0
-3958 3973 -17517 0
-3960 3975 -17517 0
3959 -3974 -17517 0
-3961 3946 -17517 0
-3963 3948 -17517 0
-3965 3950 -17517 0
-3967 3952 -17517 0
-3969 3954 -17517 0
-3971 3956 -17517 0
-3973 3958 -17517 0
-3975 3960 -17517 0
3974 -3959 -17517 0
-3946 -3961 17517 0
-3948 -3963 17517 0
-3950 -3965 17517 0
-3952 -3967 17517 0
-3954 -3969 17517 0
-3956 -3971 17517 0
-3958 -3973 17517 0
-3960 -3975 17517 0
3959 3974 17517 0
c ((variant_fields_00003_00002_00008=max_left_00003_00002_00008)=tv=SATLiteral(17518))
-9377 3961 -17518 0
-9379 3963 -17518 0
-9381 3965 -17518 0
-9383 3967 -17518 0
-9385 3969 -17518 0
-9387 3971 -17518 0
-9389 3973 -17518 0
-9391 3975 -17518 0
9390 -3974 -17518 0
-3961 9377 -17518 0
-3963 9379 -17518 0
-3965 9381 -17518 0
-3967 9383 -17518 0
-3969 9385 -17518 0
-3971 9387 -17518 0
-3973 9389 -17518 0
-3975 9391 -17518 0
3974 -9390 -17518 0
-9377 -3961 17518 0
-9379 -3963 17518 0
-9381 -3965 17518 0
-9383 -3967 17518 0
-9385 -3969 17518 0
-9387 -3971 17518 0
-9389 -3973 17518 0
-9391 -3975 17518 0
9390 3974 17518 0
c ((max_left_00003_00002_00008=max_left_00003_00002_00009)=tv=SATLiteral(17519))
-3961 3976 -17519 0
-3963 3978 -17519 0
-3965 3980 -17519 0
-3967 3982 -17519 0
-3969 3984 -17519 0
-3971 3986 -17519 0
-3973 3988 -17519 0
-3975 3990 -17519 0
3974 -3989 -17519 0
-3976 3961 -17519 0
-3978 3963 -17519 0
-3980 3965 -17519 0
-3982 3967 -17519 0
-3984 3969 -17519 0
-3986 3971 -17519 0
-3988 3973 -17519 0
-3990 3975 -17519 0
3989 -3974 -17519 0
-3961 -3976 17519 0
-3963 -3978 17519 0
-3965 -3980 17519 0
-3967 -3982 17519 0
-3969 -3984 17519 0
-3971 -3986 17519 0
-3973 -3988 17519 0
-3975 -3990 17519 0
3974 3989 17519 0
c ((variant_fields_00003_00002_00009=max_left_00003_00002_00009)=tv=SATLiteral(17520))
-9392 3976 -17520 0
-9394 3978 -17520 0
-9396 3980 -17520 0
-9398 3982 -17520 0
-9400 3984 -17520 0
-9402 3986 -17520 0
-9404 3988 -17520 0
-9406 3990 -17520 0
9405 -3989 -17520 0
-3976 9392 -17520 0
-3978 9394 -17520 0
-3980 9396 -17520 0
-3982 9398 -17520 0
-3984 9400 -17520 0
-3986 9402 -17520 0
-3988 9404 -17520 0
-3990 9406 -17520 0
3989 -9405 -17520 0
-9392 -3976 17520 0
-9394 -3978 17520 0
-9396 -3980 17520 0
-9398 -3982 17520 0
-9400 -3984 17520 0
-9402 -3986 17520 0
-9404 -3988 17520 0
-9406 -3990 17520 0
9405 3989 17520 0
c ((max_left_00003_00003_00001=max_left_00003_00003_00002)=tv=SATLiteral(17521))
-3992 4007 -17521 0
-3994 4009 -17521 0
-3996 4011 -17521 0
-3998 4013 -17521 0
-4000 4015 -17521 0
-4002 4017 -17521 0
-4004 4019 -17521 0
-4006 4021 -17521 0
4005 -4020 -17521 0
-4007 3992 -17521 0
-4009 3994 -17521 0
-4011 3996 -17521 0
-4013 3998 -17521 0
-4015 4000 -17521 0
-4017 4002 -17521 0
-4019 4004 -17521 0
-4021 4006 -17521 0
4020 -4005 -17521 0
-3992 -4007 17521 0
-3994 -4009 17521 0
-3996 -4011 17521 0
-3998 -4013 17521 0
-4000 -4015 17521 0
-4002 -4017 17521 0
-4004 -4019 17521 0
-4006 -4021 17521 0
4005 4020 17521 0
c ((variant_fields_00003_00003_00002=max_left_00003_00003_00002)=tv=SATLiteral(17522))
-9422 4007 -17522 0
-9424 4009 -17522 0
-9426 4011 -17522 0
-9428 4013 -17522 0
-9430 4015 -17522 0
-9432 4017 -17522 0
-9434 4019 -17522 0
-9436 4021 -17522 0
9435 -4020 -17522 0
-4007 9422 -17522 0
-4009 9424 -17522 0
-4011 9426 -17522 0
-4013 9428 -17522 0
-4015 9430 -17522 0
-4017 9432 -17522 0
-4019 9434 -17522 0
-4021 9436 -17522 0
4020 -9435 -17522 0
-9422 -4007 17522 0
-9424 -4009 17522 0
-9426 -4011 17522 0
-9428 -4013 17522 0
-9430 -4015 17522 0
-9432 -4017 17522 0
-9434 -4019 17522 0
-9436 -4021 17522 0
9435 4020 17522 0
c ((max_left_00003_00003_00002=max_left_00003_00003_00003)=tv=SATLiteral(17523))
-4007 4022 -17523 0
-4009 4024 -17523 0
-4011 4026 -17523 0
-4013 4028 -17523 0
-4015 4030 -17523 0
-4017 4032 -17523 0
-4019 4034 -17523 0
-4021 4036 -17523 0
4020 -4035 -17523 0
-4022 4007 -17523 0
-4024 4009 -17523 0
-4026 4011 -17523 0
-4028 4013 -17523 0
-4030 4015 -17523 0
-4032 4017 -17523 0
-4034 4019 -17523 0
-4036 4021 -17523 0
4035 -4020 -17523 0
-4007 -4022 17523 0
-4009 -4024 17523 0
-4011 -4026 17523 0
-4013 -4028 17523 0
-4015 -4030 17523 0
-4017 -4032 17523 0
-4019 -4034 17523 0
-4021 -4036 17523 0
4020 4035 17523 0
c ((variant_fields_00003_00003_00003=max_left_00003_00003_00003)=tv=SATLiteral(17524))
-9437 4022 -17524 0
-9439 4024 -17524 0
-9441 4026 -17524 0
-9443 4028 -17524 0
-9445 4030 -17524 0
-9447 4032 -17524 0
-9449 4034 -17524 0
-9451 4036 -17524 0
9450 -4035 -17524 0
-4022 9437 -17524 0
-4024 9439 -17524 0
-4026 9441 -17524 0
-4028 9443 -17524 0
-4030 9445 -17524 0
-4032 9447 -17524 0
-4034 9449 -17524 0
-4036 9451 -17524 0
4035 -9450 -17524 0
-9437 -4022 17524 0
-9439 -4024 17524 0
-9441 -4026 17524 0
-9443 -4028 17524 0
-9445 -4030 17524 0
-9447 -4032 17524 0
-9449 -4034 17524 0
-9451 -4036 17524 0
9450 4035 17524 0
c ((max_left_00003_00003_00003=max_left_00003_00003_00004)=tv=SATLiteral(17525))
-4022 4037 -17525 0
-4024 4039 -17525 0
-4026 4041 -17525 0
-4028 4043 -17525 0
-4030 4045 -17525 0
-4032 4047 -17525 0
-4034 4049 -17525 0
-4036 4051 -17525 0
4035 -4050 -17525 0
-4037 4022 -17525 0
-4039 4024 -17525 0
-4041 4026 -17525 0
-4043 4028 -17525 0
-4045 4030 -17525 0
-4047 4032 -17525 0
-4049 4034 -17525 0
-4051 4036 -17525 0
4050 -4035 -17525 0
-4022 -4037 17525 0
-4024 -4039 17525 0
-4026 -4041 17525 0
-4028 -4043 17525 0
-4030 -4045 17525 0
-4032 -4047 17525 0
-4034 -4049 17525 0
-4036 -4051 17525 0
4035 4050 17525 0
c ((variant_fields_00003_00003_00004=max_left_00003_00003_00004)=tv=SATLiteral(17526))
-9452 4037 -17526 0
-9454 4039 -17526 0
-9456 4041 -17526 0
-9458 4043 -17526 0
-9460 4045 -17526 0
-9462 4047 -17526 0
-9464 4049 -17526 0
-9466 4051 -17526 0
9465 -4050 -17526 0
-4037 9452 -17526 0
-4039 9454 -17526 0
-4041 9456 -17526 0
-4043 9458 -17526 0
-4045 9460 -17526 0
-4047 9462 -17526 0
-4049 9464 -17526 0
-4051 9466 -17526 0
4050 -9465 -17526 0
-9452 -4037 17526 0
-9454 -4039 17526 0
-9456 -4041 17526 0
-9458 -4043 17526 0
-9460 -4045 17526 0
-9462 -4047 17526 0
-9464 -4049 17526 0
-9466 -4051 17526 0
9465 4050 17526 0
c ((max_left_00003_00003_00004=max_left_00003_00003_00005)=tv=SATLiteral(17527))
-4037 4052 -17527 0
-4039 4054 -17527 0
-4041 4056 -17527 0
-4043 4058 -17527 0
-4045 4060 -17527 0
-4047 4062 -17527 0
-4049 4064 -17527 0
-4051 4066 -17527 0
4050 -4065 -17527 0
-4052 4037 -17527 0
-4054 4039 -17527 0
-4056 4041 -17527 0
-4058 4043 -17527 0
-4060 4045 -17527 0
-4062 4047 -17527 0
-4064 4049 -17527 0
-4066 4051 -17527 0
4065 -4050 -17527 0
-4037 -4052 17527 0
-4039 -4054 17527 0
-4041 -4056 17527 0
-4043 -4058 17527 0
-4045 -4060 17527 0
-4047 -4062 17527 0
-4049 -4064 17527 0
-4051 -4066 17527 0
4050 4065 17527 0
c ((variant_fields_00003_00003_00005=max_left_00003_00003_00005)=tv=SATLiteral(17528))
-9467 4052 -17528 0
-9469 4054 -17528 0
-9471 4056 -17528 0
-9473 4058 -17528 0
-9475 4060 -17528 0
-9477 4062 -17528 0
-9479 4064 -17528 0
-9481 4066 -17528 0
9480 -4065 -17528 0
-4052 9467 -17528 0
-4054 9469 -17528 0
-4056 9471 -17528 0
-4058 9473 -17528 0
-4060 9475 -17528 0
-4062 9477 -17528 0
-4064 9479 -17528 0
-4066 9481 -17528 0
4065 -9480 -17528 0
-9467 -4052 17528 0
-9469 -4054 17528 0
-9471 -4056 17528 0
-9473 -4058 17528 0
-9475 -4060 17528 0
-9477 -4062 17528 0
-9479 -4064 17528 0
-9481 -4066 17528 0
9480 4065 17528 0
c ((max_left_00003_00003_00005=max_left_00003_00003_00006)=tv=SATLiteral(17529))
-4052 4067 -17529 0
-4054 4069 -17529 0
-4056 4071 -17529 0
-4058 4073 -17529 0
-4060 4075 -17529 0
-4062 4077 -17529 0
-4064 4079 -17529 0
-4066 4081 -17529 0
4065 -4080 -17529 0
-4067 4052 -17529 0
-4069 4054 -17529 0
-4071 4056 -17529 0
-4073 4058 -17529 0
-4075 4060 -17529 0
-4077 4062 -17529 0
-4079 4064 -17529 0
-4081 4066 -17529 0
4080 -4065 -17529 0
-4052 -4067 17529 0
-4054 -4069 17529 0
-4056 -4071 17529 0
-4058 -4073 17529 0
-4060 -4075 17529 0
-4062 -4077 17529 0
-4064 -4079 17529 0
-4066 -4081 17529 0
4065 4080 17529 0
c ((variant_fields_00003_00003_00006=max_left_00003_00003_00006)=tv=SATLiteral(17530))
-9482 4067 -17530 0
-9484 4069 -17530 0
-9486 4071 -17530 0
-9488 4073 -17530 0
-9490 4075 -17530 0
-9492 4077 -17530 0
-9494 4079 -17530 0
-9496 4081 -17530 0
9495 -4080 -17530 0
-4067 9482 -17530 0
-4069 9484 -17530 0
-4071 9486 -17530 0
-4073 9488 -17530 0
-4075 9490 -17530 0
-4077 9492 -17530 0
-4079 9494 -17530 0
-4081 9496 -17530 0
4080 -9495 -17530 0
-9482 -4067 17530 0
-9484 -4069 17530 0
-9486 -4071 17530 0
-9488 -4073 17530 0
-9490 -4075 17530 0
-9492 -4077 17530 0
-9494 -4079 17530 0
-9496 -4081 17530 0
9495 4080 17530 0
c ((max_left_00003_00003_00006=max_left_00003_00003_00007)=tv=SATLiteral(17531))
-4067 4082 -17531 0
-4069 4084 -17531 0
-4071 4086 -17531 0
-4073 4088 -17531 0
-4075 4090 -17531 0
-4077 4092 -17531 0
-4079 4094 -17531 0
-4081 4096 -17531 0
4080 -4095 -17531 0
-4082 4067 -17531 0
-4084 4069 -17531 0
-4086 4071 -17531 0
-4088 4073 -17531 0
-4090 4075 -17531 0
-4092 4077 -17531 0
-4094 4079 -17531 0
-4096 4081 -17531 0
4095 -4080 -17531 0
-4067 -4082 17531 0
-4069 -4084 17531 0
-4071 -4086 17531 0
-4073 -4088 17531 0
-4075 -4090 17531 0
-4077 -4092 17531 0
-4079 -4094 17531 0
-4081 -4096 17531 0
4080 4095 17531 0
c ((variant_fields_00003_00003_00007=max_left_00003_00003_00007)=tv=SATLiteral(17532))
-9497 4082 -17532 0
-9499 4084 -17532 0
-9501 4086 -17532 0
-9503 4088 -17532 0
-9505 4090 -17532 0
-9507 4092 -17532 0
-9509 4094 -17532 0
-9511 4096 -17532 0
9510 -4095 -17532 0
-4082 9497 -17532 0
-4084 9499 -17532 0
-4086 9501 -17532 0
-4088 9503 -17532 0
-4090 9505 -17532 0
-4092 9507 -17532 0
-4094 9509 -17532 0
-4096 9511 -17532 0
4095 -9510 -17532 0
-9497 -4082 17532 0
-9499 -4084 17532 0
-9501 -4086 17532 0
-9503 -4088 17532 0
-9505 -4090 17532 0
-9507 -4092 17532 0
-9509 -4094 17532 0
-9511 -4096 17532 0
9510 4095 17532 0
c ((max_left_00003_00003_00007=max_left_00003_00003_00008)=tv=SATLiteral(17533))
-4082 4097 -17533 0
-4084 4099 -17533 0
-4086 4101 -17533 0
-4088 4103 -17533 0
-4090 4105 -17533 0
-4092 4107 -17533 0
-4094 4109 -17533 0
-4096 4111 -17533 0
4095 -4110 -17533 0
-4097 4082 -17533 0
-4099 4084 -17533 0
-4101 4086 -17533 0
-4103 4088 -17533 0
-4105 4090 -17533 0
-4107 4092 -17533 0
-4109 4094 -17533 0
-4111 4096 -17533 0
4110 -4095 -17533 0
-4082 -4097 17533 0
-4084 -4099 17533 0
-4086 -4101 17533 0
-4088 -4103 17533 0
-4090 -4105 17533 0
-4092 -4107 17533 0
-4094 -4109 17533 0
-4096 -4111 17533 0
4095 4110 17533 0
c ((variant_fields_00003_00003_00008=max_left_00003_00003_00008)=tv=SATLiteral(17534))
-9512 4097 -17534 0
-9514 4099 -17534 0
-9516 4101 -17534 0
-9518 4103 -17534 0
-9520 4105 -17534 0
-9522 4107 -17534 0
-9524 4109 -17534 0
-9526 4111 -17534 0
9525 -4110 -17534 0
-4097 9512 -17534 0
-4099 9514 -17534 0
-4101 9516 -17534 0
-4103 9518 -17534 0
-4105 9520 -17534 0
-4107 9522 -17534 0
-4109 9524 -17534 0
-4111 9526 -17534 0
4110 -9525 -17534 0
-9512 -4097 17534 0
-9514 -4099 17534 0
-9516 -4101 17534 0
-9518 -4103 17534 0
-9520 -4105 17534 0
-9522 -4107 17534 0
-9524 -4109 17534 0
-9526 -4111 17534 0
9525 4110 17534 0
c ((max_left_00003_00003_00008=max_left_00003_00003_00009)=tv=SATLiteral(17535))
-4097 4112 -17535 0
-4099 4114 -17535 0
-4101 4116 -17535 0
-4103 4118 -17535 0
-4105 4120 -17535 0
-4107 4122 -17535 0
-4109 4124 -17535 0
-4111 4126 -17535 0
4110 -4125 -17535 0
-4112 4097 -17535 0
-4114 4099 -17535 0
-4116 4101 -17535 0
-4118 4103 -17535 0
-4120 4105 -17535 0
-4122 4107 -17535 0
-4124 4109 -17535 0
-4126 4111 -17535 0
4125 -4110 -17535 0
-4097 -4112 17535 0
-4099 -4114 17535 0
-4101 -4116 17535 0
-4103 -4118 17535 0
-4105 -4120 17535 0
-4107 -4122 17535 0
-4109 -4124 17535 0
-4111 -4126 17535 0
4110 4125 17535 0
c ((variant_fields_00003_00003_00009=max_left_00003_00003_00009)=tv=SATLiteral(17536))
-9527 4112 -17536 0
-9529 4114 -17536 0
-9531 4116 -17536 0
-9533 4118 -17536 0
-9535 4120 -17536 0
-9537 4122 -17536 0
-9539 4124 -17536 0
-9541 4126 -17536 0
9540 -4125 -17536 0
-4112 9527 -17536 0
-4114 9529 -17536 0
-4116 9531 -17536 0
-4118 9533 -17536 0
-4120 9535 -17536 0
-4122 9537 -17536 0
-4124 9539 -17536 0
-4126 9541 -17536 0
4125 -9540 -17536 0
-9527 -4112 17536 0
-9529 -4114 17536 0
-9531 -4116 17536 0
-9533 -4118 17536 0
-9535 -4120 17536 0
-9537 -4122 17536 0
-9539 -4124 17536 0
-9541 -4126 17536 0
9540 4125 17536 0
c ((max_left_00003_00004_00001=max_left_00003_00004_00002)=tv=SATLiteral(17537))
-4128 4143 -17537 0
-4130 4145 -17537 0
-4132 4147 -17537 0
-4134 4149 -17537 0
-4136 4151 -17537 0
-4138 4153 -17537 0
-4140 4155 -17537 0
-4142 4157 -17537 0
4141 -4156 -17537 0
-4143 4128 -17537 0
-4145 4130 -17537 0
-4147 4132 -17537 0
-4149 4134 -17537 0
-4151 4136 -17537 0
-4153 4138 -17537 0
-4155 4140 -17537 0
-4157 4142 -17537 0
4156 -4141 -17537 0
-4128 -4143 17537 0
-4130 -4145 17537 0
-4132 -4147 17537 0
-4134 -4149 17537 0
-4136 -4151 17537 0
-4138 -4153 17537 0
-4140 -4155 17537 0
-4142 -4157 17537 0
4141 4156 17537 0
c ((variant_fields_00003_00004_00002=max_left_00003_00004_00002)=tv=SATLiteral(17538))
-9557 4143 -17538 0
-9559 4145 -17538 0
-9561 4147 -17538 0
-9563 4149 -17538 0
-9565 4151 -17538 0
-9567 4153 -17538 0
-9569 4155 -17538 0
-9571 4157 -17538 0
9570 -4156 -17538 0
-4143 9557 -17538 0
-4145 9559 -17538 0
-4147 9561 -17538 0
-4149 9563 -17538 0
-4151 9565 -17538 0
-4153 9567 -17538 0
-4155 9569 -17538 0
-4157 9571 -17538 0
4156 -9570 -17538 0
-9557 -4143 17538 0
-9559 -4145 17538 0
-9561 -4147 17538 0
-9563 -4149 17538 0
-9565 -4151 17538 0
-9567 -4153 17538 0
-9569 -4155 17538 0
-9571 -4157 17538 0
9570 4156 17538 0
c ((max_left_00003_00004_00002=max_left_00003_00004_00003)=tv=SATLiteral(17539))
-4143 4158 -17539 0
-4145 4160 -17539 0
-4147 4162 -17539 0
-4149 4164 -17539 0
-4151 4166 -17539 0
-4153 4168 -17539 0
-4155 4170 -17539 0
-4157 4172 -17539 0
4156 -4171 -17539 0
-4158 4143 -17539 0
-4160 4145 -17539 0
-4162 4147 -17539 0
-4164 4149 -17539 0
-4166 4151 -17539 0
-4168 4153 -17539 0
-4170 4155 -17539 0
-4172 4157 -17539 0
4171 -4156 -17539 0
-4143 -4158 17539 0
-4145 -4160 17539 0
-4147 -4162 17539 0
-4149 -4164 17539 0
-4151 -4166 17539 0
-4153 -4168 17539 0
-4155 -4170 17539 0
-4157 -4172 17539 0
4156 4171 17539 0
c ((variant_fields_00003_00004_00003=max_left_00003_00004_00003)=tv=SATLiteral(17540))
-9572 4158 -17540 0
-9574 4160 -17540 0
-9576 4162 -17540 0
-9578 4164 -17540 0
-9580 4166 -17540 0
-9582 4168 -17540 0
-9584 4170 -17540 0
-9586 4172 -17540 0
9585 -4171 -17540 0
-4158 9572 -17540 0
-4160 9574 -17540 0
-4162 9576 -17540 0
-4164 9578 -17540 0
-4166 9580 -17540 0
-4168 9582 -17540 0
-4170 9584 -17540 0
-4172 9586 -17540 0
4171 -9585 -17540 0
-9572 -4158 17540 0
-9574 -4160 17540 0
-9576 -4162 17540 0
-9578 -4164 17540 0
-9580 -4166 17540 0
-9582 -4168 17540 0
-9584 -4170 17540 0
-9586 -4172 17540 0
9585 4171 17540 0
c ((max_left_00003_00004_00003=max_left_00003_00004_00004)=tv=SATLiteral(17541))
-4158 4173 -17541 0
-4160 4175 -17541 0
-4162 4177 -17541 0
-4164 4179 -17541 0
-4166 4181 -17541 0
-4168 4183 -17541 0
-4170 4185 -17541 0
-4172 4187 -17541 0
4171 -4186 -17541 0
-4173 4158 -17541 0
-4175 4160 -17541 0
-4177 4162 -17541 0
-4179 4164 -17541 0
-4181 4166 -17541 0
-4183 4168 -17541 0
-4185 4170 -17541 0
-4187 4172 -17541 0
4186 -4171 -17541 0
-4158 -4173 17541 0
-4160 -4175 17541 0
-4162 -4177 17541 0
-4164 -4179 17541 0
-4166 -4181 17541 0
-4168 -4183 17541 0
-4170 -4185 17541 0
-4172 -4187 17541 0
4171 4186 17541 0
c ((variant_fields_00003_00004_00004=max_left_00003_00004_00004)=tv=SATLiteral(17542))
-9587 4173 -17542 0
-9589 4175 -17542 0
-9591 4177 -17542 0
-9593 4179 -17542 0
-9595 4181 -17542 0
-9597 4183 -17542 0
-9599 4185 -17542 0
-9601 4187 -17542 0
9600 -4186 -17542 0
-4173 9587 -17542 0
-4175 9589 -17542 0
-4177 9591 -17542 0
-4179 9593 -17542 0
-4181 9595 -17542 0
-4183 9597 -17542 0
-4185 9599 -17542 0
-4187 9601 -17542 0
4186 -9600 -17542 0
-9587 -4173 17542 0
-9589 -4175 17542 0
-9591 -4177 17542 0
-9593 -4179 17542 0
-9595 -4181 17542 0
-9597 -4183 17542 0
-9599 -4185 17542 0
-9601 -4187 17542 0
9600 4186 17542 0
c ((max_left_00003_00004_00004=max_left_00003_00004_00005)=tv=SATLiteral(17543))
-4173 4188 -17543 0
-4175 4190 -17543 0
-4177 4192 -17543 0
-4179 4194 -17543 0
-4181 4196 -17543 0
-4183 4198 -17543 0
-4185 4200 -17543 0
-4187 4202 -17543 0
4186 -4201 -17543 0
-4188 4173 -17543 0
-4190 4175 -17543 0
-4192 4177 -17543 0
-4194 4179 -17543 0
-4196 4181 -17543 0
-4198 4183 -17543 0
-4200 4185 -17543 0
-4202 4187 -17543 0
4201 -4186 -17543 0
-4173 -4188 17543 0
-4175 -4190 17543 0
-4177 -4192 17543 0
-4179 -4194 17543 0
-4181 -4196 17543 0
-4183 -4198 17543 0
-4185 -4200 17543 0
-4187 -4202 17543 0
4186 4201 17543 0
c ((variant_fields_00003_00004_00005=max_left_00003_00004_00005)=tv=SATLiteral(17544))
-9602 4188 -17544 0
-9604 4190 -17544 0
-9606 4192 -17544 0
-9608 4194 -17544 0
-9610 4196 -17544 0
-9612 4198 -17544 0
-9614 4200 -17544 0
-9616 4202 -17544 0
9615 -4201 -17544 0
-4188 9602 -17544 0
-4190 9604 -17544 0
-4192 9606 -17544 0
-4194 9608 -17544 0
-4196 9610 -17544 0
-4198 9612 -17544 0
-4200 9614 -17544 0
-4202 9616 -17544 0
4201 -9615 -17544 0
-9602 -4188 17544 0
-9604 -4190 17544 0
-9606 -4192 17544 0
-9608 -4194 17544 0
-9610 -4196 17544 0
-9612 -4198 17544 0
-9614 -4200 17544 0
-9616 -4202 17544 0
9615 4201 17544 0
c ((max_left_00003_00004_00005=max_left_00003_00004_00006)=tv=SATLiteral(17545))
-4188 4203 -17545 0
-4190 4205 -17545 0
-4192 4207 -17545 0
-4194 4209 -17545 0
-4196 4211 -17545 0
-4198 4213 -17545 0
-4200 4215 -17545 0
-4202 4217 -17545 0
4201 -4216 -17545 0
-4203 4188 -17545 0
-4205 4190 -17545 0
-4207 4192 -17545 0
-4209 4194 -17545 0
-4211 4196 -17545 0
-4213 4198 -17545 0
-4215 4200 -17545 0
-4217 4202 -17545 0
4216 -4201 -17545 0
-4188 -4203 17545 0
-4190 -4205 17545 0
-4192 -4207 17545 0
-4194 -4209 17545 0
-4196 -4211 17545 0
-4198 -4213 17545 0
-4200 -4215 17545 0
-4202 -4217 17545 0
4201 4216 17545 0
c ((variant_fields_00003_00004_00006=max_left_00003_00004_00006)=tv=SATLiteral(17546))
-9617 4203 -17546 0
-9619 4205 -17546 0
-9621 4207 -17546 0
-9623 4209 -17546 0
-9625 4211 -17546 0
-9627 4213 -17546 0
-9629 4215 -17546 0
-9631 4217 -17546 0
9630 -4216 -17546 0
-4203 9617 -17546 0
-4205 9619 -17546 0
-4207 9621 -17546 0
-4209 9623 -17546 0
-4211 9625 -17546 0
-4213 9627 -17546 0
-4215 9629 -17546 0
-4217 9631 -17546 0
4216 -9630 -17546 0
-9617 -4203 17546 0
-9619 -4205 17546 0
-9621 -4207 17546 0
-9623 -4209 17546 0
-9625 -4211 17546 0
-9627 -4213 17546 0
-9629 -4215 17546 0
-9631 -4217 17546 0
9630 4216 17546 0
c ((max_left_00003_00004_00006=max_left_00003_00004_00007)=tv=SATLiteral(17547))
-4203 4218 -17547 0
-4205 4220 -17547 0
-4207 4222 -17547 0
-4209 4224 -17547 0
-4211 4226 -17547 0
-4213 4228 -17547 0
-4215 4230 -17547 0
-4217 4232 -17547 0
4216 -4231 -17547 0
-4218 4203 -17547 0
-4220 4205 -17547 0
-4222 4207 -17547 0
-4224 4209 -17547 0
-4226 4211 -17547 0
-4228 4213 -17547 0
-4230 4215 -17547 0
-4232 4217 -17547 0
4231 -4216 -17547 0
-4203 -4218 17547 0
-4205 -4220 17547 0
-4207 -4222 17547 0
-4209 -4224 17547 0
-4211 -4226 17547 0
-4213 -4228 17547 0
-4215 -4230 17547 0
-4217 -4232 17547 0
4216 4231 17547 0
c ((variant_fields_00003_00004_00007=max_left_00003_00004_00007)=tv=SATLiteral(17548))
-9632 4218 -17548 0
-9634 4220 -17548 0
-9636 4222 -17548 0
-9638 4224 -17548 0
-9640 4226 -17548 0
-9642 4228 -17548 0
-9644 4230 -17548 0
-9646 4232 -17548 0
9645 -4231 -17548 0
-4218 9632 -17548 0
-4220 9634 -17548 0
-4222 9636 -17548 0
-4224 9638 -17548 0
-4226 9640 -17548 0
-4228 9642 -17548 0
-4230 9644 -17548 0
-4232 9646 -17548 0
4231 -9645 -17548 0
-9632 -4218 17548 0
-9634 -4220 17548 0
-9636 -4222 17548 0
-9638 -4224 17548 0
-9640 -4226 17548 0
-9642 -4228 17548 0
-9644 -4230 17548 0
-9646 -4232 17548 0
9645 4231 17548 0
c ((max_left_00003_00004_00007=max_left_00003_00004_00008)=tv=SATLiteral(17549))
-4218 4233 -17549 0
-4220 4235 -17549 0
-4222 4237 -17549 0
-4224 4239 -17549 0
-4226 4241 -17549 0
-4228 4243 -17549 0
-4230 4245 -17549 0
-4232 4247 -17549 0
4231 -4246 -17549 0
-4233 4218 -17549 0
-4235 4220 -17549 0
-4237 4222 -17549 0
-4239 4224 -17549 0
-4241 4226 -17549 0
-4243 4228 -17549 0
-4245 4230 -17549 0
-4247 4232 -17549 0
4246 -4231 -17549 0
-4218 -4233 17549 0
-4220 -4235 17549 0
-4222 -4237 17549 0
-4224 -4239 17549 0
-4226 -4241 17549 0
-4228 -4243 17549 0
-4230 -4245 17549 0
-4232 -4247 17549 0
4231 4246 17549 0
c ((variant_fields_00003_00004_00008=max_left_00003_00004_00008)=tv=SATLiteral(17550))
-9647 4233 -17550 0
-9649 4235 -17550 0
-9651 4237 -17550 0
-9653 4239 -17550 0
-9655 4241 -17550 0
-9657 4243 -17550 0
-9659 4245 -17550 0
-9661 4247 -17550 0
9660 -4246 -17550 0
-4233 9647 -17550 0
-4235 9649 -17550 0
-4237 9651 -17550 0
-4239 9653 -17550 0
-4241 9655 -17550 0
-4243 9657 -17550 0
-4245 9659 -17550 0
-4247 9661 -17550 0
4246 -9660 -17550 0
-9647 -4233 17550 0
-9649 -4235 17550 0
-9651 -4237 17550 0
-9653 -4239 17550 0
-9655 -4241 17550 0
-9657 -4243 17550 0
-9659 -4245 17550 0
-9661 -4247 17550 0
9660 4246 17550 0
c ((max_left_00003_00004_00008=max_left_00003_00004_00009)=tv=SATLiteral(17551))
-4233 4248 -17551 0
-4235 4250 -17551 0
-4237 4252 -17551 0
-4239 4254 -17551 0
-4241 4256 -17551 0
-4243 4258 -17551 0
-4245 4260 -17551 0
-4247 4262 -17551 0
4246 -4261 -17551 0
-4248 4233 -17551 0
-4250 4235 -17551 0
-4252 4237 -17551 0
-4254 4239 -17551 0
-4256 4241 -17551 0
-4258 4243 -17551 0
-4260 4245 -17551 0
-4262 4247 -17551 0
4261 -4246 -17551 0
-4233 -4248 17551 0
-4235 -4250 17551 0
-4237 -4252 17551 0
-4239 -4254 17551 0
-4241 -4256 17551 0
-4243 -4258 17551 0
-4245 -4260 17551 0
-4247 -4262 17551 0
4246 4261 17551 0
c ((variant_fields_00003_00004_00009=max_left_00003_00004_00009)=tv=SATLiteral(17552))
-9662 4248 -17552 0
-9664 4250 -17552 0
-9666 4252 -17552 0
-9668 4254 -17552 0
-9670 4256 -17552 0
-9672 4258 -17552 0
-9674 4260 -17552 0
-9676 4262 -17552 0
9675 -4261 -17552 0
-4248 9662 -17552 0
-4250 9664 -17552 0
-4252 9666 -17552 0
-4254 9668 -17552 0
-4256 9670 -17552 0
-4258 9672 -17552 0
-4260 9674 -17552 0
-4262 9676 -17552 0
4261 -9675 -17552 0
-9662 -4248 17552 0
-9664 -4250 17552 0
-9666 -4252 17552 0
-9668 -4254 17552 0
-9670 -4256 17552 0
-9672 -4258 17552 0
-9674 -4260 17552 0
-9676 -4262 17552 0
9675 4261 17552 0
c ((max_left_00003_00005_00001=max_left_00003_00005_00002)=tv=SATLiteral(17553))
-4264 4279 -17553 0
-4266 4281 -17553 0
-4268 4283 -17553 0
-4270 4285 -17553 0
-4272 4287 -17553 0
-4274 4289 -17553 0
-4276 4291 -17553 0
-4278 4293 -17553 0
4277 -4292 -17553 0
-4279 4264 -17553 0
-4281 4266 -17553 0
-4283 4268 -17553 0
-4285 4270 -17553 0
-4287 4272 -17553 0
-4289 4274 -17553 0
-4291 4276 -17553 0
-4293 4278 -17553 0
4292 -4277 -17553 0
-4264 -4279 17553 0
-4266 -4281 17553 0
-4268 -4283 17553 0
-4270 -4285 17553 0
-4272 -4287 17553 0
-4274 -4289 17553 0
-4276 -4291 17553 0
-4278 -4293 17553 0
4277 4292 17553 0
c ((variant_fields_00003_00005_00002=max_left_00003_00005_00002)=tv=SATLiteral(17554))
-9692 4279 -17554 0
-9694 4281 -17554 0
-9696 4283 -17554 0
-9698 4285 -17554 0
-9700 4287 -17554 0
-9702 4289 -17554 0
-9704 4291 -17554 0
-9706 4293 -17554 0
9705 -4292 -17554 0
-4279 9692 -17554 0
-4281 9694 -17554 0
-4283 9696 -17554 0
-4285 9698 -17554 0
-4287 9700 -17554 0
-4289 9702 -17554 0
-4291 9704 -17554 0
-4293 9706 -17554 0
4292 -9705 -17554 0
-9692 -4279 17554 0
-9694 -4281 17554 0
-9696 -4283 17554 0
-9698 -4285 17554 0
-9700 -4287 17554 0
-9702 -4289 17554 0
-9704 -4291 17554 0
-9706 -4293 17554 0
9705 4292 17554 0
c ((max_left_00003_00005_00002=max_left_00003_00005_00003)=tv=SATLiteral(17555))
-4279 4294 -17555 0
-4281 4296 -17555 0
-4283 4298 -17555 0
-4285 4300 -17555 0
-4287 4302 -17555 0
-4289 4304 -17555 0
-4291 4306 -17555 0
-4293 4308 -17555 0
4292 -4307 -17555 0
-4294 4279 -17555 0
-4296 4281 -17555 0
-4298 4283 -17555 0
-4300 4285 -17555 0
-4302 4287 -17555 0
-4304 4289 -17555 0
-4306 4291 -17555 0
-4308 4293 -17555 0
4307 -4292 -17555 0
-4279 -4294 17555 0
-4281 -4296 17555 0
-4283 -4298 17555 0
-4285 -4300 17555 0
-4287 -4302 17555 0
-4289 -4304 17555 0
-4291 -4306 17555 0
-4293 -4308 17555 0
4292 4307 17555 0
c ((variant_fields_00003_00005_00003=max_left_00003_00005_00003)=tv=SATLiteral(17556))
-9707 4294 -17556 0
-9709 4296 -17556 0
-9711 4298 -17556 0
-9713 4300 -17556 0
-9715 4302 -17556 0
-9717 4304 -17556 0
-9719 4306 -17556 0
-9721 4308 -17556 0
9720 -4307 -17556 0
-4294 9707 -17556 0
-4296 9709 -17556 0
-4298 9711 -17556 0
-4300 9713 -17556 0
-4302 9715 -17556 0
-4304 9717 -17556 0
-4306 9719 -17556 0
-4308 9721 -17556 0
4307 -9720 -17556 0
-9707 -4294 17556 0
-9709 -4296 17556 0
-9711 -4298 17556 0
-9713 -4300 17556 0
-9715 -4302 17556 0
-9717 -4304 17556 0
-9719 -4306 17556 0
-9721 -4308 17556 0
9720 4307 17556 0
c ((max_left_00003_00005_00003=max_left_00003_00005_00004)=tv=SATLiteral(17557))
-4294 4309 -17557 0
-4296 4311 -17557 0
-4298 4313 -17557 0
-4300 4315 -17557 0
-4302 4317 -17557 0
-4304 4319 -17557 0
-4306 4321 -17557 0
-4308 4323 -17557 0
4307 -4322 -17557 0
-4309 4294 -17557 0
-4311 4296 -17557 0
-4313 4298 -17557 0
-4315 4300 -17557 0
-4317 4302 -17557 0
-4319 4304 -17557 0
-4321 4306 -17557 0
-4323 4308 -17557 0
4322 -4307 -17557 0
-4294 -4309 17557 0
-4296 -4311 17557 0
-4298 -4313 17557 0
-4300 -4315 17557 0
-4302 -4317 17557 0
-4304 -4319 17557 0
-4306 -4321 17557 0
-4308 -4323 17557 0
4307 4322 17557 0
c ((variant_fields_00003_00005_00004=max_left_00003_00005_00004)=tv=SATLiteral(17558))
-9722 4309 -17558 0
-9724 4311 -17558 0
-9726 4313 -17558 0
-9728 4315 -17558 0
-9730 4317 -17558 0
-9732 4319 -17558 0
-9734 4321 -17558 0
-9736 4323 -17558 0
9735 -4322 -17558 0
-4309 9722 -17558 0
-4311 9724 -17558 0
-4313 9726 -17558 0
-4315 9728 -17558 0
-4317 9730 -17558 0
-4319 9732 -17558 0
-4321 9734 -17558 0
-4323 9736 -17558 0
4322 -9735 -17558 0
-9722 -4309 17558 0
-9724 -4311 17558 0
-9726 -4313 17558 0
-9728 -4315 17558 0
-9730 -4317 17558 0
-9732 -4319 17558 0
-9734 -4321 17558 0
-9736 -4323 17558 0
9735 4322 17558 0
c ((max_left_00003_00005_00004=max_left_00003_00005_00005)=tv=SATLiteral(17559))
-4309 4324 -17559 0
-4311 4326 -17559 0
-4313 4328 -17559 0
-4315 4330 -17559 0
-4317 4332 -17559 0
-4319 4334 -17559 0
-4321 4336 -17559 0
-4323 4338 -17559 0
4322 -4337 -17559 0
-4324 4309 -17559 0
-4326 4311 -17559 0
-4328 4313 -17559 0
-4330 4315 -17559 0
-4332 4317 -17559 0
-4334 4319 -17559 0
-4336 4321 -17559 0
-4338 4323 -17559 0
4337 -4322 -17559 0
-4309 -4324 17559 0
-4311 -4326 17559 0
-4313 -4328 17559 0
-4315 -4330 17559 0
-4317 -4332 17559 0
-4319 -4334 17559 0
-4321 -4336 17559 0
-4323 -4338 17559 0
4322 4337 17559 0
c ((variant_fields_00003_00005_00005=max_left_00003_00005_00005)=tv=SATLiteral(17560))
-9737 4324 -17560 0
-9739 4326 -17560 0
-9741 4328 -17560 0
-9743 4330 -17560 0
-9745 4332 -17560 0
-9747 4334 -17560 0
-9749 4336 -17560 0
-9751 4338 -17560 0
9750 -4337 -17560 0
-4324 9737 -17560 0
-4326 9739 -17560 0
-4328 9741 -17560 0
-4330 9743 -17560 0
-4332 9745 -17560 0
-4334 9747 -17560 0
-4336 9749 -17560 0
-4338 9751 -17560 0
4337 -9750 -17560 0
-9737 -4324 17560 0
-9739 -4326 17560 0
-9741 -4328 17560 0
-9743 -4330 17560 0
-9745 -4332 17560 0
-9747 -4334 17560 0
-9749 -4336 17560 0
-9751 -4338 17560 0
9750 4337 17560 0
c ((max_left_00003_00005_00005=max_left_00003_00005_00006)=tv=SATLiteral(17561))
-4324 4339 -17561 0
-4326 4341 -17561 0
-4328 4343 -17561 0
-4330 4345 -17561 0
-4332 4347 -17561 0
-4334 4349 -17561 0
-4336 4351 -17561 0
-4338 4353 -17561 0
4337 -4352 -17561 0
-4339 4324 -17561 0
-4341 4326 -17561 0
-4343 4328 -17561 0
-4345 4330 -17561 0
-4347 4332 -17561 0
-4349 4334 -17561 0
-4351 4336 -17561 0
-4353 4338 -17561 0
4352 -4337 -17561 0
-4324 -4339 17561 0
-4326 -4341 17561 0
-4328 -4343 17561 0
-4330 -4345 17561 0
-4332 -4347 17561 0
-4334 -4349 17561 0
-4336 -4351 17561 0
-4338 -4353 17561 0
4337 4352 17561 0
c ((variant_fields_00003_00005_00006=max_left_00003_00005_00006)=tv=SATLiteral(17562))
-9752 4339 -17562 0
-9754 4341 -17562 0
-9756 4343 -17562 0
-9758 4345 -17562 0
-9760 4347 -17562 0
-9762 4349 -17562 0
-9764 4351 -17562 0
-9766 4353 -17562 0
9765 -4352 -17562 0
-4339 9752 -17562 0
-4341 9754 -17562 0
-4343 9756 -17562 0
-4345 9758 -17562 0
-4347 9760 -17562 0
-4349 9762 -17562 0
-4351 9764 -17562 0
-4353 9766 -17562 0
4352 -9765 -17562 0
-9752 -4339 17562 0
-9754 -4341 17562 0
-9756 -4343 17562 0
-9758 -4345 17562 0
-9760 -4347 17562 0
-9762 -4349 17562 0
-9764 -4351 17562 0
-9766 -4353 17562 0
9765 4352 17562 0
c ((max_left_00003_00005_00006=max_left_00003_00005_00007)=tv=SATLiteral(17563))
-4339 4354 -17563 0
-4341 4356 -17563 0
-4343 4358 -17563 0
-4345 4360 -17563 0
-4347 4362 -17563 0
-4349 4364 -17563 0
-4351 4366 -17563 0
-4353 4368 -17563 0
4352 -4367 -17563 0
-4354 4339 -17563 0
-4356 4341 -17563 0
-4358 4343 -17563 0
-4360 4345 -17563 0
-4362 4347 -17563 0
-4364 4349 -17563 0
-4366 4351 -17563 0
-4368 4353 -17563 0
4367 -4352 -17563 0
-4339 -4354 17563 0
-4341 -4356 17563 0
-4343 -4358 17563 0
-4345 -4360 17563 0
-4347 -4362 17563 0
-4349 -4364 17563 0
-4351 -4366 17563 0
-4353 -4368 17563 0
4352 4367 17563 0
c ((variant_fields_00003_00005_00007=max_left_00003_00005_00007)=tv=SATLiteral(17564))
-9767 4354 -17564 0
-9769 4356 -17564 0
-9771 4358 -17564 0
-9773 4360 -17564 0
-9775 4362 -17564 0
-9777 4364 -17564 0
-9779 4366 -17564 0
-9781 4368 -17564 0
9780 -4367 -17564 0
-4354 9767 -17564 0
-4356 9769 -17564 0
-4358 9771 -17564 0
-4360 9773 -17564 0
-4362 9775 -17564 0
-4364 9777 -17564 0
-4366 9779 -17564 0
-4368 9781 -17564 0
4367 -9780 -17564 0
-9767 -4354 17564 0
-9769 -4356 17564 0
-9771 -4358 17564 0
-9773 -4360 17564 0
-9775 -4362 17564 0
-9777 -4364 17564 0
-9779 -4366 17564 0
-9781 -4368 17564 0
9780 4367 17564 0
c ((max_left_00003_00005_00007=max_left_00003_00005_00008)=tv=SATLiteral(17565))
-4354 4369 -17565 0
-4356 4371 -17565 0
-4358 4373 -17565 0
-4360 4375 -17565 0
-4362 4377 -17565 0
-4364 4379 -17565 0
-4366 4381 -17565 0
-4368 4383 -17565 0
4367 -4382 -17565 0
-4369 4354 -17565 0
-4371 4356 -17565 0
-4373 4358 -17565 0
-4375 4360 -17565 0
-4377 4362 -17565 0
-4379 4364 -17565 0
-4381 4366 -17565 0
-4383 4368 -17565 0
4382 -4367 -17565 0
-4354 -4369 17565 0
-4356 -4371 17565 0
-4358 -4373 17565 0
-4360 -4375 17565 0
-4362 -4377 17565 0
-4364 -4379 17565 0
-4366 -4381 17565 0
-4368 -4383 17565 0
4367 4382 17565 0
c ((variant_fields_00003_00005_00008=max_left_00003_00005_00008)=tv=SATLiteral(17566))
-9782 4369 -17566 0
-9784 4371 -17566 0
-9786 4373 -17566 0
-9788 4375 -17566 0
-9790 4377 -17566 0
-9792 4379 -17566 0
-9794 4381 -17566 0
-9796 4383 -17566 0
9795 -4382 -17566 0
-4369 9782 -17566 0
-4371 9784 -17566 0
-4373 9786 -17566 0
-4375 9788 -17566 0
-4377 9790 -17566 0
-4379 9792 -17566 0
-4381 9794 -17566 0
-4383 9796 -17566 0
4382 -9795 -17566 0
-9782 -4369 17566 0
-9784 -4371 17566 0
-9786 -4373 17566 0
-9788 -4375 17566 0
-9790 -4377 17566 0
-9792 -4379 17566 0
-9794 -4381 17566 0
-9796 -4383 17566 0
9795 4382 17566 0
c ((max_left_00003_00005_00008=max_left_00003_00005_00009)=tv=SATLiteral(17567))
-4369 4384 -17567 0
-4371 4386 -17567 0
-4373 4388 -17567 0
-4375 4390 -17567 0
-4377 4392 -17567 0
-4379 4394 -17567 0
-4381 4396 -17567 0
-4383 4398 -17567 0
4382 -4397 -17567 0
-4384 4369 -17567 0
-4386 4371 -17567 0
-4388 4373 -17567 0
-4390 4375 -17567 0
-4392 4377 -17567 0
-4394 4379 -17567 0
-4396 4381 -17567 0
-4398 4383 -17567 0
4397 -4382 -17567 0
-4369 -4384 17567 0
-4371 -4386 17567 0
-4373 -4388 17567 0
-4375 -4390 17567 0
-4377 -4392 17567 0
-4379 -4394 17567 0
-4381 -4396 17567 0
-4383 -4398 17567 0
4382 4397 17567 0
c ((variant_fields_00003_00005_00009=max_left_00003_00005_00009)=tv=SATLiteral(17568))
-9797 4384 -17568 0
-9799 4386 -17568 0
-9801 4388 -17568 0
-9803 4390 -17568 0
-9805 4392 -17568 0
-9807 4394 -17568 0
-9809 4396 -17568 0
-9811 4398 -17568 0
9810 -4397 -17568 0
-4384 9797 -17568 0
-4386 9799 -17568 0
-4388 9801 -17568 0
-4390 9803 -17568 0
-4392 9805 -17568 0
-4394 9807 -17568 0
-4396 9809 -17568 0
-4398 9811 -17568 0
4397 -9810 -17568 0
-9797 -4384 17568 0
-9799 -4386 17568 0
-9801 -4388 17568 0
-9803 -4390 17568 0
-9805 -4392 17568 0
-9807 -4394 17568 0
-9809 -4396 17568 0
-9811 -4398 17568 0
9810 4397 17568 0
c ((variant_fields_00003_00006_00002=max_left_00003_00006_00002)=tv=SATLiteral(17569))
-9827 4415 -17569 0
-9829 4417 -17569 0
-9831 4419 -17569 0
-9833 4421 -17569 0
-9835 4423 -17569 0
-9837 4425 -17569 0
-9839 4427 -17569 0
-9841 4429 -17569 0
9840 -4428 -17569 0
-4415 9827 -17569 0
-4417 9829 -17569 0
-4419 9831 -17569 0
-4421 9833 -17569 0
-4423 9835 -17569 0
-4425 9837 -17569 0
-4427 9839 -17569 0
-4429 9841 -17569 0
4428 -9840 -17569 0
-9827 -4415 17569 0
-9829 -4417 17569 0
-9831 -4419 17569 0
-9833 -4421 17569 0
-9835 -4423 17569 0
-9837 -4425 17569 0
-9839 -4427 17569 0
-9841 -4429 17569 0
9840 4428 17569 0
c ((max_left_00003_00006_00001=max_left_00003_00006_00002)=tv=SATLiteral(17570))
-4400 4415 -17570 0
-4402 4417 -17570 0
-4404 4419 -17570 0
-4406 4421 -17570 0
-4408 4423 -17570 0
-4410 4425 -17570 0
-4412 4427 -17570 0
-4414 4429 -17570 0
4413 -4428 -17570 0
-4415 4400 -17570 0
-4417 4402 -17570 0
-4419 4404 -17570 0
-4421 4406 -17570 0
-4423 4408 -17570 0
-4425 4410 -17570 0
-4427 4412 -17570 0
-4429 4414 -17570 0
4428 -4413 -17570 0
-4400 -4415 17570 0
-4402 -4417 17570 0
-4404 -4419 17570 0
-4406 -4421 17570 0
-4408 -4423 17570 0
-4410 -4425 17570 0
-4412 -4427 17570 0
-4414 -4429 17570 0
4413 4428 17570 0
c ((variant_fields_00003_00006_00003=max_left_00003_00006_00003)=tv=SATLiteral(17571))
-9842 4430 -17571 0
-9844 4432 -17571 0
-9846 4434 -17571 0
-9848 4436 -17571 0
-9850 4438 -17571 0
-9852 4440 -17571 0
-9854 4442 -17571 0
-9856 4444 -17571 0
9855 -4443 -17571 0
-4430 9842 -17571 0
-4432 9844 -17571 0
-4434 9846 -17571 0
-4436 9848 -17571 0
-4438 9850 -17571 0
-4440 9852 -17571 0
-4442 9854 -17571 0
-4444 9856 -17571 0
4443 -9855 -17571 0
-9842 -4430 17571 0
-9844 -4432 17571 0
-9846 -4434 17571 0
-9848 -4436 17571 0
-9850 -4438 17571 0
-9852 -4440 17571 0
-9854 -4442 17571 0
-9856 -4444 17571 0
9855 4443 17571 0
c ((max_left_00003_00006_00002=max_left_00003_00006_00003)=tv=SATLiteral(17572))
-4415 4430 -17572 0
-4417 4432 -17572 0
-4419 4434 -17572 0
-4421 4436 -17572 0
-4423 4438 -17572 0
-4425 4440 -17572 0
-4427 4442 -17572 0
-4429 4444 -17572 0
4428 -4443 -17572 0
-4430 4415 -17572 0
-4432 4417 -17572 0
-4434 4419 -17572 0
-4436 4421 -17572 0
-4438 4423 -17572 0
-4440 4425 -17572 0
-4442 4427 -17572 0
-4444 4429 -17572 0
4443 -4428 -17572 0
-4415 -4430 17572 0
-4417 -4432 17572 0
-4419 -4434 17572 0
-4421 -4436 17572 0
-4423 -4438 17572 0
-4425 -4440 17572 0
-4427 -4442 17572 0
-4429 -4444 17572 0
4428 4443 17572 0
c ((variant_fields_00003_00006_00004=max_left_00003_00006_00004)=tv=SATLiteral(17573))
-9857 4445 -17573 0
-9859 4447 -17573 0
-9861 4449 -17573 0
-9863 4451 -17573 0
-9865 4453 -17573 0
-9867 4455 -17573 0
-9869 4457 -17573 0
-9871 4459 -17573 0
9870 -4458 -17573 0
-4445 9857 -17573 0
-4447 9859 -17573 0
-4449 9861 -17573 0
-4451 9863 -17573 0
-4453 9865 -17573 0
-4455 9867 -17573 0
-4457 9869 -17573 0
-4459 9871 -17573 0
4458 -9870 -17573 0
-9857 -4445 17573 0
-9859 -4447 17573 0
-9861 -4449 17573 0
-9863 -4451 17573 0
-9865 -4453 17573 0
-9867 -4455 17573 0
-9869 -4457 17573 0
-9871 -4459 17573 0
9870 4458 17573 0
c ((max_left_00003_00006_00003=max_left_00003_00006_00004)=tv=SATLiteral(17574))
-4430 4445 -17574 0
-4432 4447 -17574 0
-4434 4449 -17574 0
-4436 4451 -17574 0
-4438 4453 -17574 0
-4440 4455 -17574 0
-4442 4457 -17574 0
-4444 4459 -17574 0
4443 -4458 -17574 0
-4445 4430 -17574 0
-4447 4432 -17574 0
-4449 4434 -17574 0
-4451 4436 -17574 0
-4453 4438 -17574 0
-4455 4440 -17574 0
-4457 4442 -17574 0
-4459 4444 -17574 0
4458 -4443 -17574 0
-4430 -4445 17574 0
-4432 -4447 17574 0
-4434 -4449 17574 0
-4436 -4451 17574 0
-4438 -4453 17574 0
-4440 -4455 17574 0
-4442 -4457 17574 0
-4444 -4459 17574 0
4443 4458 17574 0
c ((variant_fields_00003_00006_00005=max_left_00003_00006_00005)=tv=SATLiteral(17575))
-9872 4460 -17575 0
-9874 4462 -17575 0
-9876 4464 -17575 0
-9878 4466 -17575 0
-9880 4468 -17575 0
-9882 4470 -17575 0
-9884 4472 -17575 0
-9886 4474 -17575 0
9885 -4473 -17575 0
-4460 9872 -17575 0
-4462 9874 -17575 0
-4464 9876 -17575 0
-4466 9878 -17575 0
-4468 9880 -17575 0
-4470 9882 -17575 0
-4472 9884 -17575 0
-4474 9886 -17575 0
4473 -9885 -17575 0
-9872 -4460 17575 0
-9874 -4462 17575 0
-9876 -4464 17575 0
-9878 -4466 17575 0
-9880 -4468 17575 0
-9882 -4470 17575 0
-9884 -4472 17575 0
-9886 -4474 17575 0
9885 4473 17575 0
c ((max_left_00003_00006_00004=max_left_00003_00006_00005)=tv=SATLiteral(17576))
-4445 4460 -17576 0
-4447 4462 -17576 0
-4449 4464 -17576 0
-4451 4466 -17576 0
-4453 4468 -17576 0
-4455 4470 -17576 0
-4457 4472 -17576 0
-4459 4474 -17576 0
4458 -4473 -17576 0
-4460 4445 -17576 0
-4462 4447 -17576 0
-4464 4449 -17576 0
-4466 4451 -17576 0
-4468 4453 -17576 0
-4470 4455 -17576 0
-4472 4457 -17576 0
-4474 4459 -17576 0
4473 -4458 -17576 0
-4445 -4460 17576 0
-4447 -4462 17576 0
-4449 -4464 17576 0
-4451 -4466 17576 0
-4453 -4468 17576 0
-4455 -4470 17576 0
-4457 -4472 17576 0
-4459 -4474 17576 0
4458 4473 17576 0
c ((variant_fields_00003_00006_00006=max_left_00003_00006_00006)=tv=SATLiteral(17577))
-9887 4475 -17577 0
-9889 4477 -17577 0
-9891 4479 -17577 0
-9893 4481 -17577 0
-9895 4483 -17577 0
-9897 4485 -17577 0
-9899 4487 -17577 0
-9901 4489 -17577 0
9900 -4488 -17577 0
-4475 9887 -17577 0
-4477 9889 -17577 0
-4479 9891 -17577 0
-4481 9893 -17577 0
-4483 9895 -17577 0
-4485 9897 -17577 0
-4487 9899 -17577 0
-4489 9901 -17577 0
4488 -9900 -17577 0
-9887 -4475 17577 0
-9889 -4477 17577 0
-9891 -4479 17577 0
-9893 -4481 17577 0
-9895 -4483 17577 0
-9897 -4485 17577 0
-9899 -4487 17577 0
-9901 -4489 17577 0
9900 4488 17577 0
c ((max_left_00003_00006_00005=max_left_00003_00006_00006)=tv=SATLiteral(17578))
-4460 4475 -17578 0
-4462 4477 -17578 0
-4464 4479 -17578 0
-4466 4481 -17578 0
-4468 4483 -17578 0
-4470 4485 -17578 0
-4472 4487 -17578 0
-4474 4489 -17578 0
4473 -4488 -17578 0
-4475 4460 -17578 0
-4477 4462 -17578 0
-4479 4464 -17578 0
-4481 4466 -17578 0
-4483 4468 -17578 0
-4485 4470 -17578 0
-4487 4472 -17578 0
-4489 4474 -17578 0
4488 -4473 -17578 0
-4460 -4475 17578 0
-4462 -4477 17578 0
-4464 -4479 17578 0
-4466 -4481 17578 0
-4468 -4483 17578 0
-4470 -4485 17578 0
-4472 -4487 17578 0
-4474 -4489 17578 0
4473 4488 17578 0
c ((variant_fields_00003_00006_00007=max_left_00003_00006_00007)=tv=SATLiteral(17579))
-9902 4490 -17579 0
-9904 4492 -17579 0
-9906 4494 -17579 0
-9908 4496 -17579 0
-9910 4498 -17579 0
-9912 4500 -17579 0
-9914 4502 -17579 0
-9916 4504 -17579 0
9915 -4503 -17579 0
-4490 9902 -17579 0
-4492 9904 -17579 0
-4494 9906 -17579 0
-4496 9908 -17579 0
-4498 9910 -17579 0
-4500 9912 -17579 0
-4502 9914 -17579 0
-4504 9916 -17579 0
4503 -9915 -17579 0
-9902 -4490 17579 0
-9904 -4492 17579 0
-9906 -4494 17579 0
-9908 -4496 17579 0
-9910 -4498 17579 0
-9912 -4500 17579 0
-9914 -4502 17579 0
-9916 -4504 17579 0
9915 4503 17579 0
c ((max_left_00003_00006_00006=max_left_00003_00006_00007)=tv=SATLiteral(17580))
-4475 4490 -17580 0
-4477 4492 -17580 0
-4479 4494 -17580 0
-4481 4496 -17580 0
-4483 4498 -17580 0
-4485 4500 -17580 0
-4487 4502 -17580 0
-4489 4504 -17580 0
4488 -4503 -17580 0
-4490 4475 -17580 0
-4492 4477 -17580 0
-4494 4479 -17580 0
-4496 4481 -17580 0
-4498 4483 -17580 0
-4500 4485 -17580 0
-4502 4487 -17580 0
-4504 4489 -17580 0
4503 -4488 -17580 0
-4475 -4490 17580 0
-4477 -4492 17580 0
-4479 -4494 17580 0
-4481 -4496 17580 0
-4483 -4498 17580 0
-4485 -4500 17580 0
-4487 -4502 17580 0
-4489 -4504 17580 0
4488 4503 17580 0
c ((variant_fields_00003_00006_00008=max_left_00003_00006_00008)=tv=SATLiteral(17581))
-9917 4505 -17581 0
-9919 4507 -17581 0
-9921 4509 -17581 0
-9923 4511 -17581 0
-9925 4513 -17581 0
-9927 4515 -17581 0
-9929 4517 -17581 0
-9931 4519 -17581 0
9930 -4518 -17581 0
-4505 9917 -17581 0
-4507 9919 -17581 0
-4509 9921 -17581 0
-4511 9923 -17581 0
-4513 9925 -17581 0
-4515 9927 -17581 0
-4517 9929 -17581 0
-4519 9931 -17581 0
4518 -9930 -17581 0
-9917 -4505 17581 0
-9919 -4507 17581 0
-9921 -4509 17581 0
-9923 -4511 17581 0
-9925 -4513 17581 0
-9927 -4515 17581 0
-9929 -4517 17581 0
-9931 -4519 17581 0
9930 4518 17581 0
c ((max_left_00003_00006_00007=max_left_00003_00006_00008)=tv=SATLiteral(17582))
-4490 4505 -17582 0
-4492 4507 -17582 0
-4494 4509 -17582 0
-4496 4511 -17582 0
-4498 4513 -17582 0
-4500 4515 -17582 0
-4502 4517 -17582 0
-4504 4519 -17582 0
4503 -4518 -17582 0
-4505 4490 -17582 0
-4507 4492 -17582 0
-4509 4494 -17582 0
-4511 4496 -17582 0
-4513 4498 -17582 0
-4515 4500 -17582 0
-4517 4502 -17582 0
-4519 4504 -17582 0
4518 -4503 -17582 0
-4490 -4505 17582 0
-4492 -4507 17582 0
-4494 -4509 17582 0
-4496 -4511 17582 0
-4498 -4513 17582 0
-4500 -4515 17582 0
-4502 -4517 17582 0
-4504 -4519 17582 0
4503 4518 17582 0
c ((variant_fields_00003_00006_00009=max_left_00003_00006_00009)=tv=SATLiteral(17583))
-9932 4520 -17583 0
-9934 4522 -17583 0
-9936 4524 -17583 0
-9938 4526 -17583 0
-9940 4528 -17583 0
-9942 4530 -17583 0
-9944 4532 -17583 0
-9946 4534 -17583 0
9945 -4533 -17583 0
-4520 9932 -17583 0
-4522 9934 -17583 0
-4524 9936 -17583 0
-4526 9938 -17583 0
-4528 9940 -17583 0
-4530 9942 -17583 0
-4532 9944 -17583 0
-4534 9946 -17583 0
4533 -9945 -17583 0
-9932 -4520 17583 0
-9934 -4522 17583 0
-9936 -4524 17583 0
-9938 -4526 17583 0
-9940 -4528 17583 0
-9942 -4530 17583 0
-9944 -4532 17583 0
-9946 -4534 17583 0
9945 4533 17583 0
c ((max_left_00003_00006_00008=max_left_00003_00006_00009)=tv=SATLiteral(17584))
-4505 4520 -17584 0
-4507 4522 -17584 0
-4509 4524 -17584 0
-4511 4526 -17584 0
-4513 4528 -17584 0
-4515 4530 -17584 0
-4517 4532 -17584 0
-4519 4534 -17584 0
4518 -4533 -17584 0
-4520 4505 -17584 0
-4522 4507 -17584 0
-4524 4509 -17584 0
-4526 4511 -17584 0
-4528 4513 -17584 0
-4530 4515 -17584 0
-4532 4517 -17584 0
-4534 4519 -17584 0
4533 -4518 -17584 0
-4505 -4520 17584 0
-4507 -4522 17584 0
-4509 -4524 17584 0
-4511 -4526 17584 0
-4513 -4528 17584 0
-4515 -4530 17584 0
-4517 -4532 17584 0
-4519 -4534 17584 0
4518 4533 17584 0
c ((max_left_00003_00007_00001=max_left_00003_00007_00002)=tv=SATLiteral(17585))
-4536 4551 -17585 0
-4538 4553 -17585 0
-4540 4555 -17585 0
-4542 4557 -17585 0
-4544 4559 -17585 0
-4546 4561 -17585 0
-4548 4563 -17585 0
-4550 4565 -17585 0
4549 -4564 -17585 0
-4551 4536 -17585 0
-4553 4538 -17585 0
-4555 4540 -17585 0
-4557 4542 -17585 0
-4559 4544 -17585 0
-4561 4546 -17585 0
-4563 4548 -17585 0
-4565 4550 -17585 0
4564 -4549 -17585 0
-4536 -4551 17585 0
-4538 -4553 17585 0
-4540 -4555 17585 0
-4542 -4557 17585 0
-4544 -4559 17585 0
-4546 -4561 17585 0
-4548 -4563 17585 0
-4550 -4565 17585 0
4549 4564 17585 0
c ((variant_fields_00003_00007_00002=max_left_00003_00007_00002)=tv=SATLiteral(17586))
-9962 4551 -17586 0
-9964 4553 -17586 0
-9966 4555 -17586 0
-9968 4557 -17586 0
-9970 4559 -17586 0
-9972 4561 -17586 0
-9974 4563 -17586 0
-9976 4565 -17586 0
9975 -4564 -17586 0
-4551 9962 -17586 0
-4553 9964 -17586 0
-4555 9966 -17586 0
-4557 9968 -17586 0
-4559 9970 -17586 0
-4561 9972 -17586 0
-4563 9974 -17586 0
-4565 9976 -17586 0
4564 -9975 -17586 0
-9962 -4551 17586 0
-9964 -4553 17586 0
-9966 -4555 17586 0
-9968 -4557 17586 0
-9970 -4559 17586 0
-9972 -4561 17586 0
-9974 -4563 17586 0
-9976 -4565 17586 0
9975 4564 17586 0
c ((max_left_00003_00007_00002=max_left_00003_00007_00003)=tv=SATLiteral(17587))
-4551 4566 -17587 0
-4553 4568 -17587 0
-4555 4570 -17587 0
-4557 4572 -17587 0
-4559 4574 -17587 0
-4561 4576 -17587 0
-4563 4578 -17587 0
-4565 4580 -17587 0
4564 -4579 -17587 0
-4566 4551 -17587 0
-4568 4553 -17587 0
-4570 4555 -17587 0
-4572 4557 -17587 0
-4574 4559 -17587 0
-4576 4561 -17587 0
-4578 4563 -17587 0
-4580 4565 -17587 0
4579 -4564 -17587 0
-4551 -4566 17587 0
-4553 -4568 17587 0
-4555 -4570 17587 0
-4557 -4572 17587 0
-4559 -4574 17587 0
-4561 -4576 17587 0
-4563 -4578 17587 0
-4565 -4580 17587 0
4564 4579 17587 0
c ((variant_fields_00003_00007_00003=max_left_00003_00007_00003)=tv=SATLiteral(17588))
-9977 4566 -17588 0
-9979 4568 -17588 0
-9981 4570 -17588 0
-9983 4572 -17588 0
-9985 4574 -17588 0
-9987 4576 -17588 0
-9989 4578 -17588 0
-9991 4580 -17588 0
9990 -4579 -17588 0
-4566 9977 -17588 0
-4568 9979 -17588 0
-4570 9981 -17588 0
-4572 9983 -17588 0
-4574 9985 -17588 0
-4576 9987 -17588 0
-4578 9989 -17588 0
-4580 9991 -17588 0
4579 -9990 -17588 0
-9977 -4566 17588 0
-9979 -4568 17588 0
-9981 -4570 17588 0
-9983 -4572 17588 0
-9985 -4574 17588 0
-9987 -4576 17588 0
-9989 -4578 17588 0
-9991 -4580 17588 0
9990 4579 17588 0
c ((max_left_00003_00007_00003=max_left_00003_00007_00004)=tv=SATLiteral(17589))
-4566 4581 -17589 0
-4568 4583 -17589 0
-4570 4585 -17589 0
-4572 4587 -17589 0
-4574 4589 -17589 0
-4576 4591 -17589 0
-4578 4593 -17589 0
-4580 4595 -17589 0
4579 -4594 -17589 0
-4581 4566 -17589 0
-4583 4568 -17589 0
-4585 4570 -17589 0
-4587 4572 -17589 0
-4589 4574 -17589 0
-4591 4576 -17589 0
-4593 4578 -17589 0
-4595 4580 -17589 0
4594 -4579 -17589 0
-4566 -4581 17589 0
-4568 -4583 17589 0
-4570 -4585 17589 0
-4572 -4587 17589 0
-4574 -4589 17589 0
-4576 -4591 17589 0
-4578 -4593 17589 0
-4580 -4595 17589 0
4579 4594 17589 0
c ((variant_fields_00003_00007_00004=max_left_00003_00007_00004)=tv=SATLiteral(17590))
-9992 4581 -17590 0
-9994 4583 -17590 0
-9996 4585 -17590 0
-9998 4587 -17590 0
-10000 4589 -17590 0
-10002 4591 -17590 0
-10004 4593 -17590 0
-10006 4595 -17590 0
10005 -4594 -17590 0
-4581 9992 -17590 0
-4583 9994 -17590 0
-4585 9996 -17590 0
-4587 9998 -17590 0
-4589 10000 -17590 0
-4591 10002 -17590 0
-4593 10004 -17590 0
-4595 10006 -17590 0
4594 -10005 -17590 0
-9992 -4581 17590 0
-9994 -4583 17590 0
-9996 -4585 17590 0
-9998 -4587 17590 0
-10000 -4589 17590 0
-10002 -4591 17590 0
-10004 -4593 17590 0
-10006 -4595 17590 0
10005 4594 17590 0
c ((max_left_00003_00007_00004=max_left_00003_00007_00005)=tv=SATLiteral(17591))
-4581 4596 -17591 0
-4583 4598 -17591 0
-4585 4600 -17591 0
-4587 4602 -17591 0
-4589 4604 -17591 0
-4591 4606 -17591 0
-4593 4608 -17591 0
-4595 4610 -17591 0
4594 -4609 -17591 0
-4596 4581 -17591 0
-4598 4583 -17591 0
-4600 4585 -17591 0
-4602 4587 -17591 0
-4604 4589 -17591 0
-4606 4591 -17591 0
-4608 4593 -17591 0
-4610 4595 -17591 0
4609 -4594 -17591 0
-4581 -4596 17591 0
-4583 -4598 17591 0
-4585 -4600 17591 0
-4587 -4602 17591 0
-4589 -4604 17591 0
-4591 -4606 17591 0
-4593 -4608 17591 0
-4595 -4610 17591 0
4594 4609 17591 0
c ((variant_fields_00003_00007_00005=max_left_00003_00007_00005)=tv=SATLiteral(17592))
-10007 4596 -17592 0
-10009 4598 -17592 0
-10011 4600 -17592 0
-10013 4602 -17592 0
-10015 4604 -17592 0
-10017 4606 -17592 0
-10019 4608 -17592 0
-10021 4610 -17592 0
10020 -4609 -17592 0
-4596 10007 -17592 0
-4598 10009 -17592 0
-4600 10011 -17592 0
-4602 10013 -17592 0
-4604 10015 -17592 0
-4606 10017 -17592 0
-4608 10019 -17592 0
-4610 10021 -17592 0
4609 -10020 -17592 0
-10007 -4596 17592 0
-10009 -4598 17592 0
-10011 -4600 17592 0
-10013 -4602 17592 0
-10015 -4604 17592 0
-10017 -4606 17592 0
-10019 -4608 17592 0
-10021 -4610 17592 0
10020 4609 17592 0
c ((max_left_00003_00007_00005=max_left_00003_00007_00006)=tv=SATLiteral(17593))
-4596 4611 -17593 0
-4598 4613 -17593 0
-4600 4615 -17593 0
-4602 4617 -17593 0
-4604 4619 -17593 0
-4606 4621 -17593 0
-4608 4623 -17593 0
-4610 4625 -17593 0
4609 -4624 -17593 0
-4611 4596 -17593 0
-4613 4598 -17593 0
-4615 4600 -17593 0
-4617 4602 -17593 0
-4619 4604 -17593 0
-4621 4606 -17593 0
-4623 4608 -17593 0
-4625 4610 -17593 0
4624 -4609 -17593 0
-4596 -4611 17593 0
-4598 -4613 17593 0
-4600 -4615 17593 0
-4602 -4617 17593 0
-4604 -4619 17593 0
-4606 -4621 17593 0
-4608 -4623 17593 0
-4610 -4625 17593 0
4609 4624 17593 0
c ((variant_fields_00003_00007_00006=max_left_00003_00007_00006)=tv=SATLiteral(17594))
-10022 4611 -17594 0
-10024 4613 -17594 0
-10026 4615 -17594 0
-10028 4617 -17594 0
-10030 4619 -17594 0
-10032 4621 -17594 0
-10034 4623 -17594 0
-10036 4625 -17594 0
10035 -4624 -17594 0
-4611 10022 -17594 0
-4613 10024 -17594 0
-4615 10026 -17594 0
-4617 10028 -17594 0
-4619 10030 -17594 0
-4621 10032 -17594 0
-4623 10034 -17594 0
-4625 10036 -17594 0
4624 -10035 -17594 0
-10022 -4611 17594 0
-10024 -4613 17594 0
-10026 -4615 17594 0
-10028 -4617 17594 0
-10030 -4619 17594 0
-10032 -4621 17594 0
-10034 -4623 17594 0
-10036 -4625 17594 0
10035 4624 17594 0
c ((max_left_00003_00007_00006=max_left_00003_00007_00007)=tv=SATLiteral(17595))
-4611 4626 -17595 0
-4613 4628 -17595 0
-4615 4630 -17595 0
-4617 4632 -17595 0
-4619 4634 -17595 0
-4621 4636 -17595 0
-4623 4638 -17595 0
-4625 4640 -17595 0
4624 -4639 -17595 0
-4626 4611 -17595 0
-4628 4613 -17595 0
-4630 4615 -17595 0
-4632 4617 -17595 0
-4634 4619 -17595 0
-4636 4621 -17595 0
-4638 4623 -17595 0
-4640 4625 -17595 0
4639 -4624 -17595 0
-4611 -4626 17595 0
-4613 -4628 17595 0
-4615 -4630 17595 0
-4617 -4632 17595 0
-4619 -4634 17595 0
-4621 -4636 17595 0
-4623 -4638 17595 0
-4625 -4640 17595 0
4624 4639 17595 0
c ((variant_fields_00003_00007_00007=max_left_00003_00007_00007)=tv=SATLiteral(17596))
-10037 4626 -17596 0
-10039 4628 -17596 0
-10041 4630 -17596 0
-10043 4632 -17596 0
-10045 4634 -17596 0
-10047 4636 -17596 0
-10049 4638 -17596 0
-10051 4640 -17596 0
10050 -4639 -17596 0
-4626 10037 -17596 0
-4628 10039 -17596 0
-4630 10041 -17596 0
-4632 10043 -17596 0
-4634 10045 -17596 0
-4636 10047 -17596 0
-4638 10049 -17596 0
-4640 10051 -17596 0
4639 -10050 -17596 0
-10037 -4626 17596 0
-10039 -4628 17596 0
-10041 -4630 17596 0
-10043 -4632 17596 0
-10045 -4634 17596 0
-10047 -4636 17596 0
-10049 -4638 17596 0
-10051 -4640 17596 0
10050 4639 17596 0
c ((max_left_00003_00007_00007=max_left_00003_00007_00008)=tv=SATLiteral(17597))
-4626 4641 -17597 0
-4628 4643 -17597 0
-4630 4645 -17597 0
-4632 4647 -17597 0
-4634 4649 -17597 0
-4636 4651 -17597 0
-4638 4653 -17597 0
-4640 4655 -17597 0
4639 -4654 -17597 0
-4641 4626 -17597 0
-4643 4628 -17597 0
-4645 4630 -17597 0
-4647 4632 -17597 0
-4649 4634 -17597 0
-4651 4636 -17597 0
-4653 4638 -17597 0
-4655 4640 -17597 0
4654 -4639 -17597 0
-4626 -4641 17597 0
-4628 -4643 17597 0
-4630 -4645 17597 0
-4632 -4647 17597 0
-4634 -4649 17597 0
-4636 -4651 17597 0
-4638 -4653 17597 0
-4640 -4655 17597 0
4639 4654 17597 0
c ((variant_fields_00003_00007_00008=max_left_00003_00007_00008)=tv=SATLiteral(17598))
-10052 4641 -17598 0
-10054 4643 -17598 0
-10056 4645 -17598 0
-10058 4647 -17598 0
-10060 4649 -17598 0
-10062 4651 -17598 0
-10064 4653 -17598 0
-10066 4655 -17598 0
10065 -4654 -17598 0
-4641 10052 -17598 0
-4643 10054 -17598 0
-4645 10056 -17598 0
-4647 10058 -17598 0
-4649 10060 -17598 0
-4651 10062 -17598 0
-4653 10064 -17598 0
-4655 10066 -17598 0
4654 -10065 -17598 0
-10052 -4641 17598 0
-10054 -4643 17598 0
-10056 -4645 17598 0
-10058 -4647 17598 0
-10060 -4649 17598 0
-10062 -4651 17598 0
-10064 -4653 17598 0
-10066 -4655 17598 0
10065 4654 17598 0
c ((max_left_00003_00007_00008=max_left_00003_00007_00009)=tv=SATLiteral(17599))
-4641 4656 -17599 0
-4643 4658 -17599 0
-4645 4660 -17599 0
-4647 4662 -17599 0
-4649 4664 -17599 0
-4651 4666 -17599 0
-4653 4668 -17599 0
-4655 4670 -17599 0
4654 -4669 -17599 0
-4656 4641 -17599 0
-4658 4643 -17599 0
-4660 4645 -17599 0
-4662 4647 -17599 0
-4664 4649 -17599 0
-4666 4651 -17599 0
-4668 4653 -17599 0
-4670 4655 -17599 0
4669 -4654 -17599 0
-4641 -4656 17599 0
-4643 -4658 17599 0
-4645 -4660 17599 0
-4647 -4662 17599 0
-4649 -4664 17599 0
-4651 -4666 17599 0
-4653 -4668 17599 0
-4655 -4670 17599 0
4654 4669 17599 0
c ((variant_fields_00003_00007_00009=max_left_00003_00007_00009)=tv=SATLiteral(17600))
-10067 4656 -17600 0
-10069 4658 -17600 0
-10071 4660 -17600 0
-10073 4662 -17600 0
-10075 4664 -17600 0
-10077 4666 -17600 0
-10079 4668 -17600 0
-10081 4670 -17600 0
10080 -4669 -17600 0
-4656 10067 -17600 0
-4658 10069 -17600 0
-4660 10071 -17600 0
-4662 10073 -17600 0
-4664 10075 -17600 0
-4666 10077 -17600 0
-4668 10079 -17600 0
-4670 10081 -17600 0
4669 -10080 -17600 0
-10067 -4656 17600 0
-10069 -4658 17600 0
-10071 -4660 17600 0
-10073 -4662 17600 0
-10075 -4664 17600 0
-10077 -4666 17600 0
-10079 -4668 17600 0
-10081 -4670 17600 0
10080 4669 17600 0
c ((max_left_00003_00008_00001=max_left_00003_00008_00002)=tv=SATLiteral(17601))
-4672 4687 -17601 0
-4674 4689 -17601 0
-4676 4691 -17601 0
-4678 4693 -17601 0
-4680 4695 -17601 0
-4682 4697 -17601 0
-4684 4699 -17601 0
-4686 4701 -17601 0
4685 -4700 -17601 0
-4687 4672 -17601 0
-4689 4674 -17601 0
-4691 4676 -17601 0
-4693 4678 -17601 0
-4695 4680 -17601 0
-4697 4682 -17601 0
-4699 4684 -17601 0
-4701 4686 -17601 0
4700 -4685 -17601 0
-4672 -4687 17601 0
-4674 -4689 17601 0
-4676 -4691 17601 0
-4678 -4693 17601 0
-4680 -4695 17601 0
-4682 -4697 17601 0
-4684 -4699 17601 0
-4686 -4701 17601 0
4685 4700 17601 0
c ((variant_fields_00003_00008_00002=max_left_00003_00008_00002)=tv=SATLiteral(17602))
-10097 4687 -17602 0
-10099 4689 -17602 0
-10101 4691 -17602 0
-10103 4693 -17602 0
-10105 4695 -17602 0
-10107 4697 -17602 0
-10109 4699 -17602 0
-10111 4701 -17602 0
10110 -4700 -17602 0
-4687 10097 -17602 0
-4689 10099 -17602 0
-4691 10101 -17602 0
-4693 10103 -17602 0
-4695 10105 -17602 0
-4697 10107 -17602 0
-4699 10109 -17602 0
-4701 10111 -17602 0
4700 -10110 -17602 0
-10097 -4687 17602 0
-10099 -4689 17602 0
-10101 -4691 17602 0
-10103 -4693 17602 0
-10105 -4695 17602 0
-10107 -4697 17602 0
-10109 -4699 17602 0
-10111 -4701 17602 0
10110 4700 17602 0
c ((max_left_00003_00008_00002=max_left_00003_00008_00003)=tv=SATLiteral(17603))
-4687 4702 -17603 0
-4689 4704 -17603 0
-4691 4706 -17603 0
-4693 4708 -17603 0
-4695 4710 -17603 0
-4697 4712 -17603 0
-4699 4714 -17603 0
-4701 4716 -17603 0
4700 -4715 -17603 0
-4702 4687 -17603 0
-4704 4689 -17603 0
-4706 4691 -17603 0
-4708 4693 -17603 0
-4710 4695 -17603 0
-4712 4697 -17603 0
-4714 4699 -17603 0
-4716 4701 -17603 0
4715 -4700 -17603 0
-4687 -4702 17603 0
-4689 -4704 17603 0
-4691 -4706 17603 0
-4693 -4708 17603 0
-4695 -4710 17603 0
-4697 -4712 17603 0
-4699 -4714 17603 0
-4701 -4716 17603 0
4700 4715 17603 0
c ((variant_fields_00003_00008_00003=max_left_00003_00008_00003)=tv=SATLiteral(17604))
-10112 4702 -17604 0
-10114 4704 -17604 0
-10116 4706 -17604 0
-10118 4708 -17604 0
-10120 4710 -17604 0
-10122 4712 -17604 0
-10124 4714 -17604 0
-10126 4716 -17604 0
10125 -4715 -17604 0
-4702 10112 -17604 0
-4704 10114 -17604 0
-4706 10116 -17604 0
-4708 10118 -17604 0
-4710 10120 -17604 0
-4712 10122 -17604 0
-4714 10124 -17604 0
-4716 10126 -17604 0
4715 -10125 -17604 0
-10112 -4702 17604 0
-10114 -4704 17604 0
-10116 -4706 17604 0
-10118 -4708 17604 0
-10120 -4710 17604 0
-10122 -4712 17604 0
-10124 -4714 17604 0
-10126 -4716 17604 0
10125 4715 17604 0
c ((max_left_00003_00008_00003=max_left_00003_00008_00004)=tv=SATLiteral(17605))
-4702 4717 -17605 0
-4704 4719 -17605 0
-4706 4721 -17605 0
-4708 4723 -17605 0
-4710 4725 -17605 0
-4712 4727 -17605 0
-4714 4729 -17605 0
-4716 4731 -17605 0
4715 -4730 -17605 0
-4717 4702 -17605 0
-4719 4704 -17605 0
-4721 4706 -17605 0
-4723 4708 -17605 0
-4725 4710 -17605 0
-4727 4712 -17605 0
-4729 4714 -17605 0
-4731 4716 -17605 0
4730 -4715 -17605 0
-4702 -4717 17605 0
-4704 -4719 17605 0
-4706 -4721 17605 0
-4708 -4723 17605 0
-4710 -4725 17605 0
-4712 -4727 17605 0
-4714 -4729 17605 0
-4716 -4731 17605 0
4715 4730 17605 0
c ((variant_fields_00003_00008_00004=max_left_00003_00008_00004)=tv=SATLiteral(17606))
-10127 4717 -17606 0
-10129 4719 -17606 0
-10131 4721 -17606 0
-10133 4723 -17606 0
-10135 4725 -17606 0
-10137 4727 -17606 0
-10139 4729 -17606 0
-10141 4731 -17606 0
10140 -4730 -17606 0
-4717 10127 -17606 0
-4719 10129 -17606 0
-4721 10131 -17606 0
-4723 10133 -17606 0
-4725 10135 -17606 0
-4727 10137 -17606 0
-4729 10139 -17606 0
-4731 10141 -17606 0
4730 -10140 -17606 0
-10127 -4717 17606 0
-10129 -4719 17606 0
-10131 -4721 17606 0
-10133 -4723 17606 0
-10135 -4725 17606 0
-10137 -4727 17606 0
-10139 -4729 17606 0
-10141 -4731 17606 0
10140 4730 17606 0
c ((max_left_00003_00008_00004=max_left_00003_00008_00005)=tv=SATLiteral(17607))
-4717 4732 -17607 0
-4719 4734 -17607 0
-4721 4736 -17607 0
-4723 4738 -17607 0
-4725 4740 -17607 0
-4727 4742 -17607 0
-4729 4744 -17607 0
-4731 4746 -17607 0
4730 -4745 -17607 0
-4732 4717 -17607 0
-4734 4719 -17607 0
-4736 4721 -17607 0
-4738 4723 -17607 0
-4740 4725 -17607 0
-4742 4727 -17607 0
-4744 4729 -17607 0
-4746 4731 -17607 0
4745 -4730 -17607 0
-4717 -4732 17607 0
-4719 -4734 17607 0
-4721 -4736 17607 0
-4723 -4738 17607 0
-4725 -4740 17607 0
-4727 -4742 17607 0
-4729 -4744 17607 0
-4731 -4746 17607 0
4730 4745 17607 0
c ((variant_fields_00003_00008_00005=max_left_00003_00008_00005)=tv=SATLiteral(17608))
-10142 4732 -17608 0
-10144 4734 -17608 0
-10146 4736 -17608 0
-10148 4738 -17608 0
-10150 4740 -17608 0
-10152 4742 -17608 0
-10154 4744 -17608 0
-10156 4746 -17608 0
10155 -4745 -17608 0
-4732 10142 -17608 0
-4734 10144 -17608 0
-4736 10146 -17608 0
-4738 10148 -17608 0
-4740 10150 -17608 0
-4742 10152 -17608 0
-4744 10154 -17608 0
-4746 10156 -17608 0
4745 -10155 -17608 0
-10142 -4732 17608 0
-10144 -4734 17608 0
-10146 -4736 17608 0
-10148 -4738 17608 0
-10150 -4740 17608 0
-10152 -4742 17608 0
-10154 -4744 17608 0
-10156 -4746 17608 0
10155 4745 17608 0
c ((max_left_00003_00008_00005=max_left_00003_00008_00006)=tv=SATLiteral(17609))
-4732 4747 -17609 0
-4734 4749 -17609 0
-4736 4751 -17609 0
-4738 4753 -17609 0
-4740 4755 -17609 0
-4742 4757 -17609 0
-4744 4759 -17609 0
-4746 4761 -17609 0
4745 -4760 -17609 0
-4747 4732 -17609 0
-4749 4734 -17609 0
-4751 4736 -17609 0
-4753 4738 -17609 0
-4755 4740 -17609 0
-4757 4742 -17609 0
-4759 4744 -17609 0
-4761 4746 -17609 0
4760 -4745 -17609 0
-4732 -4747 17609 0
-4734 -4749 17609 0
-4736 -4751 17609 0
-4738 -4753 17609 0
-4740 -4755 17609 0
-4742 -4757 17609 0
-4744 -4759 17609 0
-4746 -4761 17609 0
4745 4760 17609 0
c ((variant_fields_00003_00008_00006=max_left_00003_00008_00006)=tv=SATLiteral(17610))
-10157 4747 -17610 0
-10159 4749 -17610 0
-10161 4751 -17610 0
-10163 4753 -17610 0
-10165 4755 -17610 0
-10167 4757 -17610 0
-10169 4759 -17610 0
-10171 4761 -17610 0
10170 -4760 -17610 0
-4747 10157 -17610 0
-4749 10159 -17610 0
-4751 10161 -17610 0
-4753 10163 -17610 0
-4755 10165 -17610 0
-4757 10167 -17610 0
-4759 10169 -17610 0
-4761 10171 -17610 0
4760 -10170 -17610 0
-10157 -4747 17610 0
-10159 -4749 17610 0
-10161 -4751 17610 0
-10163 -4753 17610 0
-10165 -4755 17610 0
-10167 -4757 17610 0
-10169 -4759 17610 0
-10171 -4761 17610 0
10170 4760 17610 0
c ((max_left_00003_00008_00006=max_left_00003_00008_00007)=tv=SATLiteral(17611))
-4747 4762 -17611 0
-4749 4764 -17611 0
-4751 4766 -17611 0
-4753 4768 -17611 0
-4755 4770 -17611 0
-4757 4772 -17611 0
-4759 4774 -17611 0
-4761 4776 -17611 0
4760 -4775 -17611 0
-4762 4747 -17611 0
-4764 4749 -17611 0
-4766 4751 -17611 0
-4768 4753 -17611 0
-4770 4755 -17611 0
-4772 4757 -17611 0
-4774 4759 -17611 0
-4776 4761 -17611 0
4775 -4760 -17611 0
-4747 -4762 17611 0
-4749 -4764 17611 0
-4751 -4766 17611 0
-4753 -4768 17611 0
-4755 -4770 17611 0
-4757 -4772 17611 0
-4759 -4774 17611 0
-4761 -4776 17611 0
4760 4775 17611 0
c ((variant_fields_00003_00008_00007=max_left_00003_00008_00007)=tv=SATLiteral(17612))
-10172 4762 -17612 0
-10174 4764 -17612 0
-10176 4766 -17612 0
-10178 4768 -17612 0
-10180 4770 -17612 0
-10182 4772 -17612 0
-10184 4774 -17612 0
-10186 4776 -17612 0
10185 -4775 -17612 0
-4762 10172 -17612 0
-4764 10174 -17612 0
-4766 10176 -17612 0
-4768 10178 -17612 0
-4770 10180 -17612 0
-4772 10182 -17612 0
-4774 10184 -17612 0
-4776 10186 -17612 0
4775 -10185 -17612 0
-10172 -4762 17612 0
-10174 -4764 17612 0
-10176 -4766 17612 0
-10178 -4768 17612 0
-10180 -4770 17612 0
-10182 -4772 17612 0
-10184 -4774 17612 0
-10186 -4776 17612 0
10185 4775 17612 0
c ((max_left_00003_00008_00007=max_left_00003_00008_00008)=tv=SATLiteral(17613))
-4762 4777 -17613 0
-4764 4779 -17613 0
-4766 4781 -17613 0
-4768 4783 -17613 0
-4770 4785 -17613 0
-4772 4787 -17613 0
-4774 4789 -17613 0
-4776 4791 -17613 0
4775 -4790 -17613 0
-4777 4762 -17613 0
-4779 4764 -17613 0
-4781 4766 -17613 0
-4783 4768 -17613 0
-4785 4770 -17613 0
-4787 4772 -17613 0
-4789 4774 -17613 0
-4791 4776 -17613 0
4790 -4775 -17613 0
-4762 -4777 17613 0
-4764 -4779 17613 0
-4766 -4781 17613 0
-4768 -4783 17613 0
-4770 -4785 17613 0
-4772 -4787 17613 0
-4774 -4789 17613 0
-4776 -4791 17613 0
4775 4790 17613 0
c ((variant_fields_00003_00008_00008=max_left_00003_00008_00008)=tv=SATLiteral(17614))
-10187 4777 -17614 0
-10189 4779 -17614 0
-10191 4781 -17614 0
-10193 4783 -17614 0
-10195 4785 -17614 0
-10197 4787 -17614 0
-10199 4789 -17614 0
-10201 4791 -17614 0
10200 -4790 -17614 0
-4777 10187 -17614 0
-4779 10189 -17614 0
-4781 10191 -17614 0
-4783 10193 -17614 0
-4785 10195 -17614 0
-4787 10197 -17614 0
-4789 10199 -17614 0
-4791 10201 -17614 0
4790 -10200 -17614 0
-10187 -4777 17614 0
-10189 -4779 17614 0
-10191 -4781 17614 0
-10193 -4783 17614 0
-10195 -4785 17614 0
-10197 -4787 17614 0
-10199 -4789 17614 0
-10201 -4791 17614 0
10200 4790 17614 0
c ((max_left_00003_00008_00008=max_left_00003_00008_00009)=tv=SATLiteral(17615))
-4777 4792 -17615 0
-4779 4794 -17615 0
-4781 4796 -17615 0
-4783 4798 -17615 0
-4785 4800 -17615 0
-4787 4802 -17615 0
-4789 4804 -17615 0
-4791 4806 -17615 0
4790 -4805 -17615 0
-4792 4777 -17615 0
-4794 4779 -17615 0
-4796 4781 -17615 0
-4798 4783 -17615 0
-4800 4785 -17615 0
-4802 4787 -17615 0
-4804 4789 -17615 0
-4806 4791 -17615 0
4805 -4790 -17615 0
-4777 -4792 17615 0
-4779 -4794 17615 0
-4781 -4796 17615 0
-4783 -4798 17615 0
-4785 -4800 17615 0
-4787 -4802 17615 0
-4789 -4804 17615 0
-4791 -4806 17615 0
4790 4805 17615 0
c ((variant_fields_00003_00008_00009=max_left_00003_00008_00009)=tv=SATLiteral(17616))
-10202 4792 -17616 0
-10204 4794 -17616 0
-10206 4796 -17616 0
-10208 4798 -17616 0
-10210 4800 -17616 0
-10212 4802 -17616 0
-10214 4804 -17616 0
-10216 4806 -17616 0
10215 -4805 -17616 0
-4792 10202 -17616 0
-4794 10204 -17616 0
-4796 10206 -17616 0
-4798 10208 -17616 0
-4800 10210 -17616 0
-4802 10212 -17616 0
-4804 10214 -17616 0
-4806 10216 -17616 0
4805 -10215 -17616 0
-10202 -4792 17616 0
-10204 -4794 17616 0
-10206 -4796 17616 0
-10208 -4798 17616 0
-10210 -4800 17616 0
-10212 -4802 17616 0
-10214 -4804 17616 0
-10216 -4806 17616 0
10215 4805 17616 0
c ((max_left_00003_00009_00001=max_left_00003_00009_00002)=tv=SATLiteral(17617))
-4808 4823 -17617 0
-4810 4825 -17617 0
-4812 4827 -17617 0
-4814 4829 -17617 0
-4816 4831 -17617 0
-4818 4833 -17617 0
-4820 4835 -17617 0
-4822 4837 -17617 0
4821 -4836 -17617 0
-4823 4808 -17617 0
-4825 4810 -17617 0
-4827 4812 -17617 0
-4829 4814 -17617 0
-4831 4816 -17617 0
-4833 4818 -17617 0
-4835 4820 -17617 0
-4837 4822 -17617 0
4836 -4821 -17617 0
-4808 -4823 17617 0
-4810 -4825 17617 0
-4812 -4827 17617 0
-4814 -4829 17617 0
-4816 -4831 17617 0
-4818 -4833 17617 0
-4820 -4835 17617 0
-4822 -4837 17617 0
4821 4836 17617 0
c ((variant_fields_00003_00009_00002=max_left_00003_00009_00002)=tv=SATLiteral(17618))
-10232 4823 -17618 0
-10234 4825 -17618 0
-10236 4827 -17618 0
-10238 4829 -17618 0
-10240 4831 -17618 0
-10242 4833 -17618 0
-10244 4835 -17618 0
-10246 4837 -17618 0
10245 -4836 -17618 0
-4823 10232 -17618 0
-4825 10234 -17618 0
-4827 10236 -17618 0
-4829 10238 -17618 0
-4831 10240 -17618 0
-4833 10242 -17618 0
-4835 10244 -17618 0
-4837 10246 -17618 0
4836 -10245 -17618 0
-10232 -4823 17618 0
-10234 -4825 17618 0
-10236 -4827 17618 0
-10238 -4829 17618 0
-10240 -4831 17618 0
-10242 -4833 17618 0
-10244 -4835 17618 0
-10246 -4837 17618 0
10245 4836 17618 0
c ((max_left_00003_00009_00002=max_left_00003_00009_00003)=tv=SATLiteral(17619))
-4823 4838 -17619 0
-4825 4840 -17619 0
-4827 4842 -17619 0
-4829 4844 -17619 0
-4831 4846 -17619 0
-4833 4848 -17619 0
-4835 4850 -17619 0
-4837 4852 -17619 0
4836 -4851 -17619 0
-4838 4823 -17619 0
-4840 4825 -17619 0
-4842 4827 -17619 0
-4844 4829 -17619 0
-4846 4831 -17619 0
-4848 4833 -17619 0
-4850 4835 -17619 0
-4852 4837 -17619 0
4851 -4836 -17619 0
-4823 -4838 17619 0
-4825 -4840 17619 0
-4827 -4842 17619 0
-4829 -4844 17619 0
-4831 -4846 17619 0
-4833 -4848 17619 0
-4835 -4850 17619 0
-4837 -4852 17619 0
4836 4851 17619 0
c ((variant_fields_00003_00009_00003=max_left_00003_00009_00003)=tv=SATLiteral(17620))
-10247 4838 -17620 0
-10249 4840 -17620 0
-10251 4842 -17620 0
-10253 4844 -17620 0
-10255 4846 -17620 0
-10257 4848 -17620 0
-10259 4850 -17620 0
-10261 4852 -17620 0
10260 -4851 -17620 0
-4838 10247 -17620 0
-4840 10249 -17620 0
-4842 10251 -17620 0
-4844 10253 -17620 0
-4846 10255 -17620 0
-4848 10257 -17620 0
-4850 10259 -17620 0
-4852 10261 -17620 0
4851 -10260 -17620 0
-10247 -4838 17620 0
-10249 -4840 17620 0
-10251 -4842 17620 0
-10253 -4844 17620 0
-10255 -4846 17620 0
-10257 -4848 17620 0
-10259 -4850 17620 0
-10261 -4852 17620 0
10260 4851 17620 0
c ((max_left_00003_00009_00003=max_left_00003_00009_00004)=tv=SATLiteral(17621))
-4838 4853 -17621 0
-4840 4855 -17621 0
-4842 4857 -17621 0
-4844 4859 -17621 0
-4846 4861 -17621 0
-4848 4863 -17621 0
-4850 4865 -17621 0
-4852 4867 -17621 0
4851 -4866 -17621 0
-4853 4838 -17621 0
-4855 4840 -17621 0
-4857 4842 -17621 0
-4859 4844 -17621 0
-4861 4846 -17621 0
-4863 4848 -17621 0
-4865 4850 -17621 0
-4867 4852 -17621 0
4866 -4851 -17621 0
-4838 -4853 17621 0
-4840 -4855 17621 0
-4842 -4857 17621 0
-4844 -4859 17621 0
-4846 -4861 17621 0
-4848 -4863 17621 0
-4850 -4865 17621 0
-4852 -4867 17621 0
4851 4866 17621 0
c ((variant_fields_00003_00009_00004=max_left_00003_00009_00004)=tv=SATLiteral(17622))
-10262 4853 -17622 0
-10264 4855 -17622 0
-10266 4857 -17622 0
-10268 4859 -17622 0
-10270 4861 -17622 0
-10272 4863 -17622 0
-10274 4865 -17622 0
-10276 4867 -17622 0
10275 -4866 -17622 0
-4853 10262 -17622 0
-4855 10264 -17622 0
-4857 10266 -17622 0
-4859 10268 -17622 0
-4861 10270 -17622 0
-4863 10272 -17622 0
-4865 10274 -17622 0
-4867 10276 -17622 0
4866 -10275 -17622 0
-10262 -4853 17622 0
-10264 -4855 17622 0
-10266 -4857 17622 0
-10268 -4859 17622 0
-10270 -4861 17622 0
-10272 -4863 17622 0
-10274 -4865 17622 0
-10276 -4867 17622 0
10275 4866 17622 0
c ((max_left_00003_00009_00004=max_left_00003_00009_00005)=tv=SATLiteral(17623))
-4853 4868 -17623 0
-4855 4870 -17623 0
-4857 4872 -17623 0
-4859 4874 -17623 0
-4861 4876 -17623 0
-4863 4878 -17623 0
-4865 4880 -17623 0
-4867 4882 -17623 0
4866 -4881 -17623 0
-4868 4853 -17623 0
-4870 4855 -17623 0
-4872 4857 -17623 0
-4874 4859 -17623 0
-4876 4861 -17623 0
-4878 4863 -17623 0
-4880 4865 -17623 0
-4882 4867 -17623 0
4881 -4866 -17623 0
-4853 -4868 17623 0
-4855 -4870 17623 0
-4857 -4872 17623 0
-4859 -4874 17623 0
-4861 -4876 17623 0
-4863 -4878 17623 0
-4865 -4880 17623 0
-4867 -4882 17623 0
4866 4881 17623 0
c ((variant_fields_00003_00009_00005=max_left_00003_00009_00005)=tv=SATLiteral(17624))
-10277 4868 -17624 0
-10279 4870 -17624 0
-10281 4872 -17624 0
-10283 4874 -17624 0
-10285 4876 -17624 0
-10287 4878 -17624 0
-10289 4880 -17624 0
-10291 4882 -17624 0
10290 -4881 -17624 0
-4868 10277 -17624 0
-4870 10279 -17624 0
-4872 10281 -17624 0
-4874 10283 -17624 0
-4876 10285 -17624 0
-4878 10287 -17624 0
-4880 10289 -17624 0
-4882 10291 -17624 0
4881 -10290 -17624 0
-10277 -4868 17624 0
-10279 -4870 17624 0
-10281 -4872 17624 0
-10283 -4874 17624 0
-10285 -4876 17624 0
-10287 -4878 17624 0
-10289 -4880 17624 0
-10291 -4882 17624 0
10290 4881 17624 0
c ((max_left_00003_00009_00005=max_left_00003_00009_00006)=tv=SATLiteral(17625))
-4868 4883 -17625 0
-4870 4885 -17625 0
-4872 4887 -17625 0
-4874 4889 -17625 0
-4876 4891 -17625 0
-4878 4893 -17625 0
-4880 4895 -17625 0
-4882 4897 -17625 0
4881 -4896 -17625 0
-4883 4868 -17625 0
-4885 4870 -17625 0
-4887 4872 -17625 0
-4889 4874 -17625 0
-4891 4876 -17625 0
-4893 4878 -17625 0
-4895 4880 -17625 0
-4897 4882 -17625 0
4896 -4881 -17625 0
-4868 -4883 17625 0
-4870 -4885 17625 0
-4872 -4887 17625 0
-4874 -4889 17625 0
-4876 -4891 17625 0
-4878 -4893 17625 0
-4880 -4895 17625 0
-4882 -4897 17625 0
4881 4896 17625 0
c ((variant_fields_00003_00009_00006=max_left_00003_00009_00006)=tv=SATLiteral(17626))
-10292 4883 -17626 0
-10294 4885 -17626 0
-10296 4887 -17626 0
-10298 4889 -17626 0
-10300 4891 -17626 0
-10302 4893 -17626 0
-10304 4895 -17626 0
-10306 4897 -17626 0
10305 -4896 -17626 0
-4883 10292 -17626 0
-4885 10294 -17626 0
-4887 10296 -17626 0
-4889 10298 -17626 0
-4891 10300 -17626 0
-4893 10302 -17626 0
-4895 10304 -17626 0
-4897 10306 -17626 0
4896 -10305 -17626 0
-10292 -4883 17626 0
-10294 -4885 17626 0
-10296 -4887 17626 0
-10298 -4889 17626 0
-10300 -4891 17626 0
-10302 -4893 17626 0
-10304 -4895 17626 0
-10306 -4897 17626 0
10305 4896 17626 0
c ((max_left_00003_00009_00006=max_left_00003_00009_00007)=tv=SATLiteral(17627))
-4883 4898 -17627 0
-4885 4900 -17627 0
-4887 4902 -17627 0
-4889 4904 -17627 0
-4891 4906 -17627 0
-4893 4908 -17627 0
-4895 4910 -17627 0
-4897 4912 -17627 0
4896 -4911 -17627 0
-4898 4883 -17627 0
-4900 4885 -17627 0
-4902 4887 -17627 0
-4904 4889 -17627 0
-4906 4891 -17627 0
-4908 4893 -17627 0
-4910 4895 -17627 0
-4912 4897 -17627 0
4911 -4896 -17627 0
-4883 -4898 17627 0
-4885 -4900 17627 0
-4887 -4902 17627 0
-4889 -4904 17627 0
-4891 -4906 17627 0
-4893 -4908 17627 0
-4895 -4910 17627 0
-4897 -4912 17627 0
4896 4911 17627 0
c ((variant_fields_00003_00009_00007=max_left_00003_00009_00007)=tv=SATLiteral(17628))
-10307 4898 -17628 0
-10309 4900 -17628 0
-10311 4902 -17628 0
-10313 4904 -17628 0
-10315 4906 -17628 0
-10317 4908 -17628 0
-10319 4910 -17628 0
-10321 4912 -17628 0
10320 -4911 -17628 0
-4898 10307 -17628 0
-4900 10309 -17628 0
-4902 10311 -17628 0
-4904 10313 -17628 0
-4906 10315 -17628 0
-4908 10317 -17628 0
-4910 10319 -17628 0
-4912 10321 -17628 0
4911 -10320 -17628 0
-10307 -4898 17628 0
-10309 -4900 17628 0
-10311 -4902 17628 0
-10313 -4904 17628 0
-10315 -4906 17628 0
-10317 -4908 17628 0
-10319 -4910 17628 0
-10321 -4912 17628 0
10320 4911 17628 0
c ((max_left_00003_00009_00007=max_left_00003_00009_00008)=tv=SATLiteral(17629))
-4898 4913 -17629 0
-4900 4915 -17629 0
-4902 4917 -17629 0
-4904 4919 -17629 0
-4906 4921 -17629 0
-4908 4923 -17629 0
-4910 4925 -17629 0
-4912 4927 -17629 0
4911 -4926 -17629 0
-4913 4898 -17629 0
-4915 4900 -17629 0
-4917 4902 -17629 0
-4919 4904 -17629 0
-4921 4906 -17629 0
-4923 4908 -17629 0
-4925 4910 -17629 0
-4927 4912 -17629 0
4926 -4911 -17629 0
-4898 -4913 17629 0
-4900 -4915 17629 0
-4902 -4917 17629 0
-4904 -4919 17629 0
-4906 -4921 17629 0
-4908 -4923 17629 0
-4910 -4925 17629 0
-4912 -4927 17629 0
4911 4926 17629 0
c ((variant_fields_00003_00009_00008=max_left_00003_00009_00008)=tv=SATLiteral(17630))
-10322 4913 -17630 0
-10324 4915 -17630 0
-10326 4917 -17630 0
-10328 4919 -17630 0
-10330 4921 -17630 0
-10332 4923 -17630 0
-10334 4925 -17630 0
-10336 4927 -17630 0
10335 -4926 -17630 0
-4913 10322 -17630 0
-4915 10324 -17630 0
-4917 10326 -17630 0
-4919 10328 -17630 0
-4921 10330 -17630 0
-4923 10332 -17630 0
-4925 10334 -17630 0
-4927 10336 -17630 0
4926 -10335 -17630 0
-10322 -4913 17630 0
-10324 -4915 17630 0
-10326 -4917 17630 0
-10328 -4919 17630 0
-10330 -4921 17630 0
-10332 -4923 17630 0
-10334 -4925 17630 0
-10336 -4927 17630 0
10335 4926 17630 0
c ((max_left_00003_00009_00008=max_left_00003_00009_00009)=tv=SATLiteral(17631))
-4913 4928 -17631 0
-4915 4930 -17631 0
-4917 4932 -17631 0
-4919 4934 -17631 0
-4921 4936 -17631 0
-4923 4938 -17631 0
-4925 4940 -17631 0
-4927 4942 -17631 0
4926 -4941 -17631 0
-4928 4913 -17631 0
-4930 4915 -17631 0
-4932 4917 -17631 0
-4934 4919 -17631 0
-4936 4921 -17631 0
-4938 4923 -17631 0
-4940 4925 -17631 0
-4942 4927 -17631 0
4941 -4926 -17631 0
-4913 -4928 17631 0
-4915 -4930 17631 0
-4917 -4932 17631 0
-4919 -4934 17631 0
-4921 -4936 17631 0
-4923 -4938 17631 0
-4925 -4940 17631 0
-4927 -4942 17631 0
4926 4941 17631 0
c ((variant_fields_00003_00009_00009=max_left_00003_00009_00009)=tv=SATLiteral(17632))
-10337 4928 -17632 0
-10339 4930 -17632 0
-10341 4932 -17632 0
-10343 4934 -17632 0
-10345 4936 -17632 0
-10347 4938 -17632 0
-10349 4940 -17632 0
-10351 4942 -17632 0
10350 -4941 -17632 0
-4928 10337 -17632 0
-4930 10339 -17632 0
-4932 10341 -17632 0
-4934 10343 -17632 0
-4936 10345 -17632 0
-4938 10347 -17632 0
-4940 10349 -17632 0
-4942 10351 -17632 0
4941 -10350 -17632 0
-10337 -4928 17632 0
-10339 -4930 17632 0
-10341 -4932 17632 0
-10343 -4934 17632 0
-10345 -4936 17632 0
-10347 -4938 17632 0
-10349 -4940 17632 0
-10351 -4942 17632 0
10350 4941 17632 0
c ((max_left_00004_00001_00001=max_left_00004_00001_00002)=tv=SATLiteral(17633))
-4944 4959 -17633 0
-4946 4961 -17633 0
-4948 4963 -17633 0
-4950 4965 -17633 0
-4952 4967 -17633 0
-4954 4969 -17633 0
-4956 4971 -17633 0
-4958 4973 -17633 0
4957 -4972 -17633 0
-4959 4944 -17633 0
-4961 4946 -17633 0
-4963 4948 -17633 0
-4965 4950 -17633 0
-4967 4952 -17633 0
-4969 4954 -17633 0
-4971 4956 -17633 0
-4973 4958 -17633 0
4972 -4957 -17633 0
-4944 -4959 17633 0
-4946 -4961 17633 0
-4948 -4963 17633 0
-4950 -4965 17633 0
-4952 -4967 17633 0
-4954 -4969 17633 0
-4956 -4971 17633 0
-4958 -4973 17633 0
4957 4972 17633 0
c ((variant_fields_00004_00001_00002=max_left_00004_00001_00002)=tv=SATLiteral(17634))
-10367 4959 -17634 0
-10369 4961 -17634 0
-10371 4963 -17634 0
-10373 4965 -17634 0
-10375 4967 -17634 0
-10377 4969 -17634 0
-10379 4971 -17634 0
-10381 4973 -17634 0
10380 -4972 -17634 0
-4959 10367 -17634 0
-4961 10369 -17634 0
-4963 10371 -17634 0
-4965 10373 -17634 0
-4967 10375 -17634 0
-4969 10377 -17634 0
-4971 10379 -17634 0
-4973 10381 -17634 0
4972 -10380 -17634 0
-10367 -4959 17634 0
-10369 -4961 17634 0
-10371 -4963 17634 0
-10373 -4965 17634 0
-10375 -4967 17634 0
-10377 -4969 17634 0
-10379 -4971 17634 0
-10381 -4973 17634 0
10380 4972 17634 0
c ((max_left_00004_00001_00002=max_left_00004_00001_00003)=tv=SATLiteral(17635))
-4959 4974 -17635 0
-4961 4976 -17635 0
-4963 4978 -17635 0
-4965 4980 -17635 0
-4967 4982 -17635 0
-4969 4984 -17635 0
-4971 4986 -17635 0
-4973 4988 -17635 0
4972 -4987 -17635 0
-4974 4959 -17635 0
-4976 4961 -17635 0
-4978 4963 -17635 0
-4980 4965 -17635 0
-4982 4967 -17635 0
-4984 4969 -17635 0
-4986 4971 -17635 0
-4988 4973 -17635 0
4987 -4972 -17635 0
-4959 -4974 17635 0
-4961 -4976 17635 0
-4963 -4978 17635 0
-4965 -4980 17635 0
-4967 -4982 17635 0
-4969 -4984 17635 0
-4971 -4986 17635 0
-4973 -4988 17635 0
4972 4987 17635 0
c ((variant_fields_00004_00001_00003=max_left_00004_00001_00003)=tv=SATLiteral(17636))
-10382 4974 -17636 0
-10384 4976 -17636 0
-10386 4978 -17636 0
-10388 4980 -17636 0
-10390 4982 -17636 0
-10392 4984 -17636 0
-10394 4986 -17636 0
-10396 4988 -17636 0
10395 -4987 -17636 0
-4974 10382 -17636 0
-4976 10384 -17636 0
-4978 10386 -17636 0
-4980 10388 -17636 0
-4982 10390 -17636 0
-4984 10392 -17636 0
-4986 10394 -17636 0
-4988 10396 -17636 0
4987 -10395 -17636 0
-10382 -4974 17636 0
-10384 -4976 17636 0
-10386 -4978 17636 0
-10388 -4980 17636 0
-10390 -4982 17636 0
-10392 -4984 17636 0
-10394 -4986 17636 0
-10396 -4988 17636 0
10395 4987 17636 0
c ((max_left_00004_00001_00003=max_left_00004_00001_00004)=tv=SATLiteral(17637))
-4974 4989 -17637 0
-4976 4991 -17637 0
-4978 4993 -17637 0
-4980 4995 -17637 0
-4982 4997 -17637 0
-4984 4999 -17637 0
-4986 5001 -17637 0
-4988 5003 -17637 0
4987 -5002 -17637 0
-4989 4974 -17637 0
-4991 4976 -17637 0
-4993 4978 -17637 0
-4995 4980 -17637 0
-4997 4982 -17637 0
-4999 4984 -17637 0
-5001 4986 -17637 0
-5003 4988 -17637 0
5002 -4987 -17637 0
-4974 -4989 17637 0
-4976 -4991 17637 0
-4978 -4993 17637 0
-4980 -4995 17637 0
-4982 -4997 17637 0
-4984 -4999 17637 0
-4986 -5001 17637 0
-4988 -5003 17637 0
4987 5002 17637 0
c ((variant_fields_00004_00001_00004=max_left_00004_00001_00004)=tv=SATLiteral(17638))
-10397 4989 -17638 0
-10399 4991 -17638 0
-10401 4993 -17638 0
-10403 4995 -17638 0
-10405 4997 -17638 0
-10407 4999 -17638 0
-10409 5001 -17638 0
-10411 5003 -17638 0
10410 -5002 -17638 0
-4989 10397 -17638 0
-4991 10399 -17638 0
-4993 10401 -17638 0
-4995 10403 -17638 0
-4997 10405 -17638 0
-4999 10407 -17638 0
-5001 10409 -17638 0
-5003 10411 -17638 0
5002 -10410 -17638 0
-10397 -4989 17638 0
-10399 -4991 17638 0
-10401 -4993 17638 0
-10403 -4995 17638 0
-10405 -4997 17638 0
-10407 -4999 17638 0
-10409 -5001 17638 0
-10411 -5003 17638 0
10410 5002 17638 0
c ((max_left_00004_00001_00004=max_left_00004_00001_00005)=tv=SATLiteral(17639))
-4989 5004 -17639 0
-4991 5006 -17639 0
-4993 5008 -17639 0
-4995 5010 -17639 0
-4997 5012 -17639 0
-4999 5014 -17639 0
-5001 5016 -17639 0
-5003 5018 -17639 0
5002 -5017 -17639 0
-5004 4989 -17639 0
-5006 4991 -17639 0
-5008 4993 -17639 0
-5010 4995 -17639 0
-5012 4997 -17639 0
-5014 4999 -17639 0
-5016 5001 -17639 0
-5018 5003 -17639 0
5017 -5002 -17639 0
-4989 -5004 17639 0
-4991 -5006 17639 0
-4993 -5008 17639 0
-4995 -5010 17639 0
-4997 -5012 17639 0
-4999 -5014 17639 0
-5001 -5016 17639 0
-5003 -5018 17639 0
5002 5017 17639 0
c ((variant_fields_00004_00001_00005=max_left_00004_00001_00005)=tv=SATLiteral(17640))
-10412 5004 -17640 0
-10414 5006 -17640 0
-10416 5008 -17640 0
-10418 5010 -17640 0
-10420 5012 -17640 0
-10422 5014 -17640 0
-10424 5016 -17640 0
-10426 5018 -17640 0
10425 -5017 -17640 0
-5004 10412 -17640 0
-5006 10414 -17640 0
-5008 10416 -17640 0
-5010 10418 -17640 0
-5012 10420 -17640 0
-5014 10422 -17640 0
-5016 10424 -17640 0
-5018 10426 -17640 0
5017 -10425 -17640 0
-10412 -5004 17640 0
-10414 -5006 17640 0
-10416 -5008 17640 0
-10418 -5010 17640 0
-10420 -5012 17640 0
-10422 -5014 17640 0
-10424 -5016 17640 0
-10426 -5018 17640 0
10425 5017 17640 0
c ((max_left_00004_00001_00005=max_left_00004_00001_00006)=tv=SATLiteral(17641))
-5004 5019 -17641 0
-5006 5021 -17641 0
-5008 5023 -17641 0
-5010 5025 -17641 0
-5012 5027 -17641 0
-5014 5029 -17641 0
-5016 5031 -17641 0
-5018 5033 -17641 0
5017 -5032 -17641 0
-5019 5004 -17641 0
-5021 5006 -17641 0
-5023 5008 -17641 0
-5025 5010 -17641 0
-5027 5012 -17641 0
-5029 5014 -17641 0
-5031 5016 -17641 0
-5033 5018 -17641 0
5032 -5017 -17641 0
-5004 -5019 17641 0
-5006 -5021 17641 0
-5008 -5023 17641 0
-5010 -5025 17641 0
-5012 -5027 17641 0
-5014 -5029 17641 0
-5016 -5031 17641 0
-5018 -5033 17641 0
5017 5032 17641 0
c ((variant_fields_00004_00001_00006=max_left_00004_00001_00006)=tv=SATLiteral(17642))
-10427 5019 -17642 0
-10429 5021 -17642 0
-10431 5023 -17642 0
-10433 5025 -17642 0
-10435 5027 -17642 0
-10437 5029 -17642 0
-10439 5031 -17642 0
-10441 5033 -17642 0
10440 -5032 -17642 0
-5019 10427 -17642 0
-5021 10429 -17642 0
-5023 10431 -17642 0
-5025 10433 -17642 0
-5027 10435 -17642 0
-5029 10437 -17642 0
-5031 10439 -17642 0
-5033 10441 -17642 0
5032 -10440 -17642 0
-10427 -5019 17642 0
-10429 -5021 17642 0
-10431 -5023 17642 0
-10433 -5025 17642 0
-10435 -5027 17642 0
-10437 -5029 17642 0
-10439 -5031 17642 0
-10441 -5033 17642 0
10440 5032 17642 0
c ((max_left_00004_00001_00006=max_left_00004_00001_00007)=tv=SATLiteral(17643))
-5019 5034 -17643 0
-5021 5036 -17643 0
-5023 5038 -17643 0
-5025 5040 -17643 0
-5027 5042 -17643 0
-5029 5044 -17643 0
-5031 5046 -17643 0
-5033 5048 -17643 0
5032 -5047 -17643 0
-5034 5019 -17643 0
-5036 5021 -17643 0
-5038 5023 -17643 0
-5040 5025 -17643 0
-5042 5027 -17643 0
-5044 5029 -17643 0
-5046 5031 -17643 0
-5048 5033 -17643 0
5047 -5032 -17643 0
-5019 -5034 17643 0
-5021 -5036 17643 0
-5023 -5038 17643 0
-5025 -5040 17643 0
-5027 -5042 17643 0
-5029 -5044 17643 0
-5031 -5046 17643 0
-5033 -5048 17643 0
5032 5047 17643 0
c ((variant_fields_00004_00001_00007=max_left_00004_00001_00007)=tv=SATLiteral(17644))
-10442 5034 -17644 0
-10444 5036 -17644 0
-10446 5038 -17644 0
-10448 5040 -17644 0
-10450 5042 -17644 0
-10452 5044 -17644 0
-10454 5046 -17644 0
-10456 5048 -17644 0
10455 -5047 -17644 0
-5034 10442 -17644 0
-5036 10444 -17644 0
-5038 10446 -17644 0
-5040 10448 -17644 0
-5042 10450 -17644 0
-5044 10452 -17644 0
-5046 10454 -17644 0
-5048 10456 -17644 0
5047 -10455 -17644 0
-10442 -5034 17644 0
-10444 -5036 17644 0
-10446 -5038 17644 0
-10448 -5040 17644 0
-10450 -5042 17644 0
-10452 -5044 17644 0
-10454 -5046 17644 0
-10456 -5048 17644 0
10455 5047 17644 0
c ((max_left_00004_00001_00007=max_left_00004_00001_00008)=tv=SATLiteral(17645))
-5034 5049 -17645 0
-5036 5051 -17645 0
-5038 5053 -17645 0
-5040 5055 -17645 0
-5042 5057 -17645 0
-5044 5059 -17645 0
-5046 5061 -17645 0
-5048 5063 -17645 0
5047 -5062 -17645 0
-5049 5034 -17645 0
-5051 5036 -17645 0
-5053 5038 -17645 0
-5055 5040 -17645 0
-5057 5042 -17645 0
-5059 5044 -17645 0
-5061 5046 -17645 0
-5063 5048 -17645 0
5062 -5047 -17645 0
-5034 -5049 17645 0
-5036 -5051 17645 0
-5038 -5053 17645 0
-5040 -5055 17645 0
-5042 -5057 17645 0
-5044 -5059 17645 0
-5046 -5061 17645 0
-5048 -5063 17645 0
5047 5062 17645 0
c ((variant_fields_00004_00001_00008=max_left_00004_00001_00008)=tv=SATLiteral(17646))
-10457 5049 -17646 0
-10459 5051 -17646 0
-10461 5053 -17646 0
-10463 5055 -17646 0
-10465 5057 -17646 0
-10467 5059 -17646 0
-10469 5061 -17646 0
-10471 5063 -17646 0
10470 -5062 -17646 0
-5049 10457 -17646 0
-5051 10459 -17646 0
-5053 10461 -17646 0
-5055 10463 -17646 0
-5057 10465 -17646 0
-5059 10467 -17646 0
-5061 10469 -17646 0
-5063 10471 -17646 0
5062 -10470 -17646 0
-10457 -5049 17646 0
-10459 -5051 17646 0
-10461 -5053 17646 0
-10463 -5055 17646 0
-10465 -5057 17646 0
-10467 -5059 17646 0
-10469 -5061 17646 0
-10471 -5063 17646 0
10470 5062 17646 0
c ((max_left_00004_00001_00008=max_left_00004_00001_00009)=tv=SATLiteral(17647))
-5049 5064 -17647 0
-5051 5066 -17647 0
-5053 5068 -17647 0
-5055 5070 -17647 0
-5057 5072 -17647 0
-5059 5074 -17647 0
-5061 5076 -17647 0
-5063 5078 -17647 0
5062 -5077 -17647 0
-5064 5049 -17647 0
-5066 5051 -17647 0
-5068 5053 -17647 0
-5070 5055 -17647 0
-5072 5057 -17647 0
-5074 5059 -17647 0
-5076 5061 -17647 0
-5078 5063 -17647 0
5077 -5062 -17647 0
-5049 -5064 17647 0
-5051 -5066 17647 0
-5053 -5068 17647 0
-5055 -5070 17647 0
-5057 -5072 17647 0
-5059 -5074 17647 0
-5061 -5076 17647 0
-5063 -5078 17647 0
5062 5077 17647 0
c ((variant_fields_00004_00001_00009=max_left_00004_00001_00009)=tv=SATLiteral(17648))
-10472 5064 -17648 0
-10474 5066 -17648 0
-10476 5068 -17648 0
-10478 5070 -17648 0
-10480 5072 -17648 0
-10482 5074 -17648 0
-10484 5076 -17648 0
-10486 5078 -17648 0
10485 -5077 -17648 0
-5064 10472 -17648 0
-5066 10474 -17648 0
-5068 10476 -17648 0
-5070 10478 -17648 0
-5072 10480 -17648 0
-5074 10482 -17648 0
-5076 10484 -17648 0
-5078 10486 -17648 0
5077 -10485 -17648 0
-10472 -5064 17648 0
-10474 -5066 17648 0
-10476 -5068 17648 0
-10478 -5070 17648 0
-10480 -5072 17648 0
-10482 -5074 17648 0
-10484 -5076 17648 0
-10486 -5078 17648 0
10485 5077 17648 0
c ((max_left_00004_00002_00001=max_left_00004_00002_00002)=tv=SATLiteral(17649))
-5080 5095 -17649 0
-5082 5097 -17649 0
-5084 5099 -17649 0
-5086 5101 -17649 0
-5088 5103 -17649 0
-5090 5105 -17649 0
-5092 5107 -17649 0
-5094 5109 -17649 0
5093 -5108 -17649 0
-5095 5080 -17649 0
-5097 5082 -17649 0
-5099 5084 -17649 0
-5101 5086 -17649 0
-5103 5088 -17649 0
-5105 5090 -17649 0
-5107 5092 -17649 0
-5109 5094 -17649 0
5108 -5093 -17649 0
-5080 -5095 17649 0
-5082 -5097 17649 0
-5084 -5099 17649 0
-5086 -5101 17649 0
-5088 -5103 17649 0
-5090 -5105 17649 0
-5092 -5107 17649 0
-5094 -5109 17649 0
5093 5108 17649 0
c ((variant_fields_00004_00002_00002=max_left_00004_00002_00002)=tv=SATLiteral(17650))
-10502 5095 -17650 0
-10504 5097 -17650 0
-10506 5099 -17650 0
-10508 5101 -17650 0
-10510 5103 -17650 0
-10512 5105 -17650 0
-10514 5107 -17650 0
-10516 5109 -17650 0
10515 -5108 -17650 0
-5095 10502 -17650 0
-5097 10504 -17650 0
-5099 10506 -17650 0
-5101 10508 -17650 0
-5103 10510 -17650 0
-5105 10512 -17650 0
-5107 10514 -17650 0
-5109 10516 -17650 0
5108 -10515 -17650 0
-10502 -5095 17650 0
-10504 -5097 17650 0
-10506 -5099 17650 0
-10508 -5101 17650 0
-10510 -5103 17650 0
-10512 -5105 17650 0
-10514 -5107 17650 0
-10516 -5109 17650 0
10515 5108 17650 0
c ((max_left_00004_00002_00002=max_left_00004_00002_00003)=tv=SATLiteral(17651))
-5095 5110 -17651 0
-5097 5112 -17651 0
-5099 5114 -17651 0
-5101 5116 -17651 0
-5103 5118 -17651 0
-5105 5120 -17651 0
-5107 5122 -17651 0
-5109 5124 -17651 0
5108 -5123 -17651 0
-5110 5095 -17651 0
-5112 5097 -17651 0
-5114 5099 -17651 0
-5116 5101 -17651 0
-5118 5103 -17651 0
-5120 5105 -17651 0
-5122 5107 -17651 0
-5124 5109 -17651 0
5123 -5108 -17651 0
-5095 -5110 17651 0
-5097 -5112 17651 0
-5099 -5114 17651 0
-5101 -5116 17651 0
-5103 -5118 17651 0
-5105 -5120 17651 0
-5107 -5122 17651 0
-5109 -5124 17651 0
5108 5123 17651 0
c ((variant_fields_00004_00002_00003=max_left_00004_00002_00003)=tv=SATLiteral(17652))
-10517 5110 -17652 0
-10519 5112 -17652 0
-10521 5114 -17652 0
-10523 5116 -17652 0
-10525 5118 -17652 0
-10527 5120 -17652 0
-10529 5122 -17652 0
-10531 5124 -17652 0
10530 -5123 -17652 0
-5110 10517 -17652 0
-5112 10519 -17652 0
-5114 10521 -17652 0
-5116 10523 -17652 0
-5118 10525 -17652 0
-5120 10527 -17652 0
-5122 10529 -17652 0
-5124 10531 -17652 0
5123 -10530 -17652 0
-10517 -5110 17652 0
-10519 -5112 17652 0
-10521 -5114 17652 0
-10523 -5116 17652 0
-10525 -5118 17652 0
-10527 -5120 17652 0
-10529 -5122 17652 0
-10531 -5124 17652 0
10530 5123 17652 0
c ((max_left_00004_00002_00003=max_left_00004_00002_00004)=tv=SATLiteral(17653))
-5110 5125 -17653 0
-5112 5127 -17653 0
-5114 5129 -17653 0
-5116 5131 -17653 0
-5118 5133 -17653 0
-5120 5135 -17653 0
-5122 5137 -17653 0
-5124 5139 -17653 0
5123 -5138 -17653 0
-5125 5110 -17653 0
-5127 5112 -17653 0
-5129 5114 -17653 0
-5131 5116 -17653 0
-5133 5118 -17653 0
-5135 5120 -17653 0
-5137 5122 -17653 0
-5139 5124 -17653 0
5138 -5123 -17653 0
-5110 -5125 17653 0
-5112 -5127 17653 0
-5114 -5129 17653 0
-5116 -5131 17653 0
-5118 -5133 17653 0
-5120 -5135 17653 0
-5122 -5137 17653 0
-5124 -5139 17653 0
5123 5138 17653 0
c ((variant_fields_00004_00002_00004=max_left_00004_00002_00004)=tv=SATLiteral(17654))
-10532 5125 -17654 0
-10534 5127 -17654 0
-10536 5129 -17654 0
-10538 5131 -17654 0
-10540 5133 -17654 0
-10542 5135 -17654 0
-10544 5137 -17654 0
-10546 5139 -17654 0
10545 -5138 -17654 0
-5125 10532 -17654 0
-5127 10534 -17654 0
-5129 10536 -17654 0
-5131 10538 -17654 0
-5133 10540 -17654 0
-5135 10542 -17654 0
-5137 10544 -17654 0
-5139 10546 -17654 0
5138 -10545 -17654 0
-10532 -5125 17654 0
-10534 -5127 17654 0
-10536 -5129 17654 0
-10538 -5131 17654 0
-10540 -5133 17654 0
-10542 -5135 17654 0
-10544 -5137 17654 0
-10546 -5139 17654 0
10545 5138 17654 0
c ((max_left_00004_00002_00004=max_left_00004_00002_00005)=tv=SATLiteral(17655))
-5125 5140 -17655 0
-5127 5142 -17655 0
-5129 5144 -17655 0
-5131 5146 -17655 0
-5133 5148 -17655 0
-5135 5150 -17655 0
-5137 5152 -17655 0
-5139 5154 -17655 0
5138 -5153 -17655 0
-5140 5125 -17655 0
-5142 5127 -17655 0
-5144 5129 -17655 0
-5146 5131 -17655 0
-5148 5133 -17655 0
-5150 5135 -17655 0
-5152 5137 -17655 0
-5154 5139 -17655 0
5153 -5138 -17655 0
-5125 -5140 17655 0
-5127 -5142 17655 0
-5129 -5144 17655 0
-5131 -5146 17655 0
-5133 -5148 17655 0
-5135 -5150 17655 0
-5137 -5152 17655 0
-5139 -5154 17655 0
5138 5153 17655 0
c ((variant_fields_00004_00002_00005=max_left_00004_00002_00005)=tv=SATLiteral(17656))
-10547 5140 -17656 0
-10549 5142 -17656 0
-10551 5144 -17656 0
-10553 5146 -17656 0
-10555 5148 -17656 0
-10557 5150 -17656 0
-10559 5152 -17656 0
-10561 5154 -17656 0
10560 -5153 -17656 0
-5140 10547 -17656 0
-5142 10549 -17656 0
-5144 10551 -17656 0
-5146 10553 -17656 0
-5148 10555 -17656 0
-5150 10557 -17656 0
-5152 10559 -17656 0
-5154 10561 -17656 0
5153 -10560 -17656 0
-10547 -5140 17656 0
-10549 -5142 17656 0
-10551 -5144 17656 0
-10553 -5146 17656 0
-10555 -5148 17656 0
-10557 -5150 17656 0
-10559 -5152 17656 0
-10561 -5154 17656 0
10560 5153 17656 0
c ((max_left_00004_00002_00005=max_left_00004_00002_00006)=tv=SATLiteral(17657))
-5140 5155 -17657 0
-5142 5157 -17657 0
-5144 5159 -17657 0
-5146 5161 -17657 0
-5148 5163 -17657 0
-5150 5165 -17657 0
-5152 5167 -17657 0
-5154 5169 -17657 0
5153 -5168 -17657 0
-5155 5140 -17657 0
-5157 5142 -17657 0
-5159 5144 -17657 0
-5161 5146 -17657 0
-5163 5148 -17657 0
-5165 5150 -17657 0
-5167 5152 -17657 0
-5169 5154 -17657 0
5168 -5153 -17657 0
-5140 -5155 17657 0
-5142 -5157 17657 0
-5144 -5159 17657 0
-5146 -5161 17657 0
-5148 -5163 17657 0
-5150 -5165 17657 0
-5152 -5167 17657 0
-5154 -5169 17657 0
5153 5168 17657 0
c ((variant_fields_00004_00002_00006=max_left_00004_00002_00006)=tv=SATLiteral(17658))
-10562 5155 -17658 0
-10564 5157 -17658 0
-10566 5159 -17658 0
-10568 5161 -17658 0
-10570 5163 -17658 0
-10572 5165 -17658 0
-10574 5167 -17658 0
-10576 5169 -17658 0
10575 -5168 -17658 0
-5155 10562 -17658 0
-5157 10564 -17658 0
-5159 10566 -17658 0
-5161 10568 -17658 0
-5163 10570 -17658 0
-5165 10572 -17658 0
-5167 10574 -17658 0
-5169 10576 -17658 0
5168 -10575 -17658 0
-10562 -5155 17658 0
-10564 -5157 17658 0
-10566 -5159 17658 0
-10568 -5161 17658 0
-10570 -5163 17658 0
-10572 -5165 17658 0
-10574 -5167 17658 0
-10576 -5169 17658 0
10575 5168 17658 0
c ((max_left_00004_00002_00006=max_left_00004_00002_00007)=tv=SATLiteral(17659))
-5155 5170 -17659 0
-5157 5172 -17659 0
-5159 5174 -17659 0
-5161 5176 -17659 0
-5163 5178 -17659 0
-5165 5180 -17659 0
-5167 5182 -17659 0
-5169 5184 -17659 0
5168 -5183 -17659 0
-5170 5155 -17659 0
-5172 5157 -17659 0
-5174 5159 -17659 0
-5176 5161 -17659 0
-5178 5163 -17659 0
-5180 5165 -17659 0
-5182 5167 -17659 0
-5184 5169 -17659 0
5183 -5168 -17659 0
-5155 -5170 17659 0
-5157 -5172 17659 0
-5159 -5174 17659 0
-5161 -5176 17659 0
-5163 -5178 17659 0
-5165 -5180 17659 0
-5167 -5182 17659 0
-5169 -5184 17659 0
5168 5183 17659 0
c ((variant_fields_00004_00002_00007=max_left_00004_00002_00007)=tv=SATLiteral(17660))
-10577 5170 -17660 0
-10579 5172 -17660 0
-10581 5174 -17660 0
-10583 5176 -17660 0
-10585 5178 -17660 0
-10587 5180 -17660 0
-10589 5182 -17660 0
-10591 5184 -17660 0
10590 -5183 -17660 0
-5170 10577 -17660 0
-5172 10579 -17660 0
-5174 10581 -17660 0
-5176 10583 -17660 0
-5178 10585 -17660 0
-5180 10587 -17660 0
-5182 10589 -17660 0
-5184 10591 -17660 0
5183 -10590 -17660 0
-10577 -5170 17660 0
-10579 -5172 17660 0
-10581 -5174 17660 0
-10583 -5176 17660 0
-10585 -5178 17660 0
-10587 -5180 17660 0
-10589 -5182 17660 0
-10591 -5184 17660 0
10590 5183 17660 0
c ((max_left_00004_00002_00007=max_left_00004_00002_00008)=tv=SATLiteral(17661))
-5170 5185 -17661 0
-5172 5187 -17661 0
-5174 5189 -17661 0
-5176 5191 -17661 0
-5178 5193 -17661 0
-5180 5195 -17661 0
-5182 5197 -17661 0
-5184 5199 -17661 0
5183 -5198 -17661 0
-5185 5170 -17661 0
-5187 5172 -17661 0
-5189 5174 -17661 0
-5191 5176 -17661 0
-5193 5178 -17661 0
-5195 5180 -17661 0
-5197 5182 -17661 0
-5199 5184 -17661 0
5198 -5183 -17661 0
-5170 -5185 17661 0
-5172 -5187 17661 0
-5174 -5189 17661 0
-5176 -5191 17661 0
-5178 -5193 17661 0
-5180 -5195 17661 0
-5182 -5197 17661 0
-5184 -5199 17661 0
5183 5198 17661 0
c ((variant_fields_00004_00002_00008=max_left_00004_00002_00008)=tv=SATLiteral(17662))
-10592 5185 -17662 0
-10594 5187 -17662 0
-10596 5189 -17662 0
-10598 5191 -17662 0
-10600 5193 -17662 0
-10602 5195 -17662 0
-10604 5197 -17662 0
-10606 5199 -17662 0
10605 -5198 -17662 0
-5185 10592 -17662 0
-5187 10594 -17662 0
-5189 10596 -17662 0
-5191 10598 -17662 0
-5193 10600 -17662 0
-5195 10602 -17662 0
-5197 10604 -17662 0
-5199 10606 -17662 0
5198 -10605 -17662 0
-10592 -5185 17662 0
-10594 -5187 17662 0
-10596 -5189 17662 0
-10598 -5191 17662 0
-10600 -5193 17662 0
-10602 -5195 17662 0
-10604 -5197 17662 0
-10606 -5199 17662 0
10605 5198 17662 0
c ((max_left_00004_00002_00008=max_left_00004_00002_00009)=tv=SATLiteral(17663))
-5185 5200 -17663 0
-5187 5202 -17663 0
-5189 5204 -17663 0
-5191 5206 -17663 0
-5193 5208 -17663 0
-5195 5210 -17663 0
-5197 5212 -17663 0
-5199 5214 -17663 0
5198 -5213 -17663 0
-5200 5185 -17663 0
-5202 5187 -17663 0
-5204 5189 -17663 0
-5206 5191 -17663 0
-5208 5193 -17663 0
-5210 5195 -17663 0
-5212 5197 -17663 0
-5214 5199 -17663 0
5213 -5198 -17663 0
-5185 -5200 17663 0
-5187 -5202 17663 0
-5189 -5204 17663 0
-5191 -5206 17663 0
-5193 -5208 17663 0
-5195 -5210 17663 0
-5197 -5212 17663 0
-5199 -5214 17663 0
5198 5213 17663 0
c ((variant_fields_00004_00002_00009=max_left_00004_00002_00009)=tv=SATLiteral(17664))
-10607 5200 -17664 0
-10609 5202 -17664 0
-10611 5204 -17664 0
-10613 5206 -17664 0
-10615 5208 -17664 0
-10617 5210 -17664 0
-10619 5212 -17664 0
-10621 5214 -17664 0
10620 -5213 -17664 0
-5200 10607 -17664 0
-5202 10609 -17664 0
-5204 10611 -17664 0
-5206 10613 -17664 0
-5208 10615 -17664 0
-5210 10617 -17664 0
-5212 10619 -17664 0
-5214 10621 -17664 0
5213 -10620 -17664 0
-10607 -5200 17664 0
-10609 -5202 17664 0
-10611 -5204 17664 0
-10613 -5206 17664 0
-10615 -5208 17664 0
-10617 -5210 17664 0
-10619 -5212 17664 0
-10621 -5214 17664 0
10620 5213 17664 0
c ((max_left_00004_00003_00001=max_left_00004_00003_00002)=tv=SATLiteral(17665))
-5216 5231 -17665 0
-5218 5233 -17665 0
-5220 5235 -17665 0
-5222 5237 -17665 0
-5224 5239 -17665 0
-5226 5241 -17665 0
-5228 5243 -17665 0
-5230 5245 -17665 0
5229 -5244 -17665 0
-5231 5216 -17665 0
-5233 5218 -17665 0
-5235 5220 -17665 0
-5237 5222 -17665 0
-5239 5224 -17665 0
-5241 5226 -17665 0
-5243 5228 -17665 0
-5245 5230 -17665 0
5244 -5229 -17665 0
-5216 -5231 17665 0
-5218 -5233 17665 0
-5220 -5235 17665 0
-5222 -5237 17665 0
-5224 -5239 17665 0
-5226 -5241 17665 0
-5228 -5243 17665 0
-5230 -5245 17665 0
5229 5244 17665 0
c ((variant_fields_00004_00003_00002=max_left_00004_00003_00002)=tv=SATLiteral(17666))
-10637 5231 -17666 0
-10639 5233 -17666 0
-10641 5235 -17666 0
-10643 5237 -17666 0
-10645 5239 -17666 0
-10647 5241 -17666 0
-10649 5243 -17666 0
-10651 5245 -17666 0
10650 -5244 -17666 0
-5231 10637 -17666 0
-5233 10639 -17666 0
-5235 10641 -17666 0
-5237 10643 -17666 0
-5239 10645 -17666 0
-5241 10647 -17666 0
-5243 10649 -17666 0
-5245 10651 -17666 0
5244 -10650 -17666 0
-10637 -5231 17666 0
-10639 -5233 17666 0
-10641 -5235 17666 0
-10643 -5237 17666 0
-10645 -5239 17666 0
-10647 -5241 17666 0
-10649 -5243 17666 0
-10651 -5245 17666 0
10650 5244 17666 0
c ((max_left_00004_00003_00002=max_left_00004_00003_00003)=tv=SATLiteral(17667))
-5231 5246 -17667 0
-5233 5248 -17667 0
-5235 5250 -17667 0
-5237 5252 -17667 0
-5239 5254 -17667 0
-5241 5256 -17667 0
-5243 5258 -17667 0
-5245 5260 -17667 0
5244 -5259 -17667 0
-5246 5231 -17667 0
-5248 5233 -17667 0
-5250 5235 -17667 0
-5252 5237 -17667 0
-5254 5239 -17667 0
-5256 5241 -17667 0
-5258 5243 -17667 0
-5260 5245 -17667 0
5259 -5244 -17667 0
-5231 -5246 17667 0
-5233 -5248 17667 0
-5235 -5250 17667 0
-5237 -5252 17667 0
-5239 -5254 17667 0
-5241 -5256 17667 0
-5243 -5258 17667 0
-5245 -5260 17667 0
5244 5259 17667 0
c ((variant_fields_00004_00003_00003=max_left_00004_00003_00003)=tv=SATLiteral(17668))
-10652 5246 -17668 0
-10654 5248 -17668 0
-10656 5250 -17668 0
-10658 5252 -17668 0
-10660 5254 -17668 0
-10662 5256 -17668 0
-10664 5258 -17668 0
-10666 5260 -17668 0
10665 -5259 -17668 0
-5246 10652 -17668 0
-5248 10654 -17668 0
-5250 10656 -17668 0
-5252 10658 -17668 0
-5254 10660 -17668 0
-5256 10662 -17668 0
-5258 10664 -17668 0
-5260 10666 -17668 0
5259 -10665 -17668 0
-10652 -5246 17668 0
-10654 -5248 17668 0
-10656 -5250 17668 0
-10658 -5252 17668 0
-10660 -5254 17668 0
-10662 -5256 17668 0
-10664 -5258 17668 0
-10666 -5260 17668 0
10665 5259 17668 0
c ((max_left_00004_00003_00003=max_left_00004_00003_00004)=tv=SATLiteral(17669))
-5246 5261 -17669 0
-5248 5263 -17669 0
-5250 5265 -17669 0
-5252 5267 -17669 0
-5254 5269 -17669 0
-5256 5271 -17669 0
-5258 5273 -17669 0
-5260 5275 -17669 0
5259 -5274 -17669 0
-5261 5246 -17669 0
-5263 5248 -17669 0
-5265 5250 -17669 0
-5267 5252 -17669 0
-5269 5254 -17669 0
-5271 5256 -17669 0
-5273 5258 -17669 0
-5275 5260 -17669 0
5274 -5259 -17669 0
-5246 -5261 17669 0
-5248 -5263 17669 0
-5250 -5265 17669 0
-5252 -5267 17669 0
-5254 -5269 17669 0
-5256 -5271 17669 0
-5258 -5273 17669 0
-5260 -5275 17669 0
5259 5274 17669 0
c ((variant_fields_00004_00003_00004=max_left_00004_00003_00004)=tv=SATLiteral(17670))
-10667 5261 -17670 0
-10669 5263 -17670 0
-10671 5265 -17670 0
-10673 5267 -17670 0
-10675 5269 -17670 0
-10677 5271 -17670 0
-10679 5273 -17670 0
-10681 5275 -17670 0
10680 -5274 -17670 0
-5261 10667 -17670 0
-5263 10669 -17670 0
-5265 10671 -17670 0
-5267 10673 -17670 0
-5269 10675 -17670 0
-5271 10677 -17670 0
-5273 10679 -17670 0
-5275 10681 -17670 0
5274 -10680 -17670 0
-10667 -5261 17670 0
-10669 -5263 17670 0
-10671 -5265 17670 0
-10673 -5267 17670 0
-10675 -5269 17670 0
-10677 -5271 17670 0
-10679 -5273 17670 0
-10681 -5275 17670 0
10680 5274 17670 0
c ((max_left_00004_00003_00004=max_left_00004_00003_00005)=tv=SATLiteral(17671))
-5261 5276 -17671 0
-5263 5278 -17671 0
-5265 5280 -17671 0
-5267 5282 -17671 0
-5269 5284 -17671 0
-5271 5286 -17671 0
-5273 5288 -17671 0
-5275 5290 -17671 0
5274 -5289 -17671 0
-5276 5261 -17671 0
-5278 5263 -17671 0
-5280 5265 -17671 0
-5282 5267 -17671 0
-5284 5269 -17671 0
-5286 5271 -17671 0
-5288 5273 -17671 0
-5290 5275 -17671 0
5289 -5274 -17671 0
-5261 -5276 17671 0
-5263 -5278 17671 0
-5265 -5280 17671 0
-5267 -5282 17671 0
-5269 -5284 17671 0
-5271 -5286 17671 0
-5273 -5288 17671 0
-5275 -5290 17671 0
5274 5289 17671 0
c ((variant_fields_00004_00003_00005=max_left_00004_00003_00005)=tv=SATLiteral(17672))
-10682 5276 -17672 0
-10684 5278 -17672 0
-10686 5280 -17672 0
-10688 5282 -17672 0
-10690 5284 -17672 0
-10692 5286 -17672 0
-10694 5288 -17672 0
-10696 5290 -17672 0
10695 -5289 -17672 0
-5276 10682 -17672 0
-5278 10684 -17672 0
-5280 10686 -17672 0
-5282 10688 -17672 0
-5284 10690 -17672 0
-5286 10692 -17672 0
-5288 10694 -17672 0
-5290 10696 -17672 0
5289 -10695 -17672 0
-10682 -5276 17672 0
-10684 -5278 17672 0
-10686 -5280 17672 0
-10688 -5282 17672 0
-10690 -5284 17672 0
-10692 -5286 17672 0
-10694 -5288 17672 0
-10696 -5290 17672 0
10695 5289 17672 0
c ((max_left_00004_00003_00005=max_left_00004_00003_00006)=tv=SATLiteral(17673))
-5276 5291 -17673 0
-5278 5293 -17673 0
-5280 5295 -17673 0
-5282 5297 -17673 0
-5284 5299 -17673 0
-5286 5301 -17673 0
-5288 5303 -17673 0
-5290 5305 -17673 0
5289 -5304 -17673 0
-5291 5276 -17673 0
-5293 5278 -17673 0
-5295 5280 -17673 0
-5297 5282 -17673 0
-5299 5284 -17673 0
-5301 5286 -17673 0
-5303 5288 -17673 0
-5305 5290 -17673 0
5304 -5289 -17673 0
-5276 -5291 17673 0
-5278 -5293 17673 0
-5280 -5295 17673 0
-5282 -5297 17673 0
-5284 -5299 17673 0
-5286 -5301 17673 0
-5288 -5303 17673 0
-5290 -5305 17673 0
5289 5304 17673 0
c ((variant_fields_00004_00003_00006=max_left_00004_00003_00006)=tv=SATLiteral(17674))
-10697 5291 -17674 0
-10699 5293 -17674 0
-10701 5295 -17674 0
-10703 5297 -17674 0
-10705 5299 -17674 0
-10707 5301 -17674 0
-10709 5303 -17674 0
-10711 5305 -17674 0
10710 -5304 -17674 0
-5291 10697 -17674 0
-5293 10699 -17674 0
-5295 10701 -17674 0
-5297 10703 -17674 0
-5299 10705 -17674 0
-5301 10707 -17674 0
-5303 10709 -17674 0
-5305 10711 -17674 0
5304 -10710 -17674 0
-10697 -5291 17674 0
-10699 -5293 17674 0
-10701 -5295 17674 0
-10703 -5297 17674 0
-10705 -5299 17674 0
-10707 -5301 17674 0
-10709 -5303 17674 0
-10711 -5305 17674 0
10710 5304 17674 0
c ((max_left_00004_00003_00006=max_left_00004_00003_00007)=tv=SATLiteral(17675))
-5291 5306 -17675 0
-5293 5308 -17675 0
-5295 5310 -17675 0
-5297 5312 -17675 0
-5299 5314 -17675 0
-5301 5316 -17675 0
-5303 5318 -17675 0
-5305 5320 -17675 0
5304 -5319 -17675 0
-5306 5291 -17675 0
-5308 5293 -17675 0
-5310 5295 -17675 0
-5312 5297 -17675 0
-5314 5299 -17675 0
-5316 5301 -17675 0
-5318 5303 -17675 0
-5320 5305 -17675 0
5319 -5304 -17675 0
-5291 -5306 17675 0
-5293 -5308 17675 0
-5295 -5310 17675 0
-5297 -5312 17675 0
-5299 -5314 17675 0
-5301 -5316 17675 0
-5303 -5318 17675 0
-5305 -5320 17675 0
5304 5319 17675 0
c ((variant_fields_00004_00003_00007=max_left_00004_00003_00007)=tv=SATLiteral(17676))
-10712 5306 -17676 0
-10714 5308 -17676 0
-10716 5310 -17676 0
-10718 5312 -17676 0
-10720 5314 -17676 0
-10722 5316 -17676 0
-10724 5318 -17676 0
-10726 5320 -17676 0
10725 -5319 -17676 0
-5306 10712 -17676 0
-5308 10714 -17676 0
-5310 10716 -17676 0
-5312 10718 -17676 0
-5314 10720 -17676 0
-5316 10722 -17676 0
-5318 10724 -17676 0
-5320 10726 -17676 0
5319 -10725 -17676 0
-10712 -5306 17676 0
-10714 -5308 17676 0
-10716 -5310 17676 0
-10718 -5312 17676 0
-10720 -5314 17676 0
-10722 -5316 17676 0
-10724 -5318 17676 0
-10726 -5320 17676 0
10725 5319 17676 0
c ((max_left_00004_00003_00007=max_left_00004_00003_00008)=tv=SATLiteral(17677))
-5306 5321 -17677 0
-5308 5323 -17677 0
-5310 5325 -17677 0
-5312 5327 -17677 0
-5314 5329 -17677 0
-5316 5331 -17677 0
-5318 5333 -17677 0
-5320 5335 -17677 0
5319 -5334 -17677 0
-5321 5306 -17677 0
-5323 5308 -17677 0
-5325 5310 -17677 0
-5327 5312 -17677 0
-5329 5314 -17677 0
-5331 5316 -17677 0
-5333 5318 -17677 0
-5335 5320 -17677 0
5334 -5319 -17677 0
-5306 -5321 17677 0
-5308 -5323 17677 0
-5310 -5325 17677 0
-5312 -5327 17677 0
-5314 -5329 17677 0
-5316 -5331 17677 0
-5318 -5333 17677 0
-5320 -5335 17677 0
5319 5334 17677 0
c ((variant_fields_00004_00003_00008=max_left_00004_00003_00008)=tv=SATLiteral(17678))
-10727 5321 -17678 0
-10729 5323 -17678 0
-10731 5325 -17678 0
-10733 5327 -17678 0
-10735 5329 -17678 0
-10737 5331 -17678 0
-10739 5333 -17678 0
-10741 5335 -17678 0
10740 -5334 -17678 0
-5321 10727 -17678 0
-5323 10729 -17678 0
-5325 10731 -17678 0
-5327 10733 -17678 0
-5329 10735 -17678 0
-5331 10737 -17678 0
-5333 10739 -17678 0
-5335 10741 -17678 0
5334 -10740 -17678 0
-10727 -5321 17678 0
-10729 -5323 17678 0
-10731 -5325 17678 0
-10733 -5327 17678 0
-10735 -5329 17678 0
-10737 -5331 17678 0
-10739 -5333 17678 0
-10741 -5335 17678 0
10740 5334 17678 0
c ((max_left_00004_00003_00008=max_left_00004_00003_00009)=tv=SATLiteral(17679))
-5321 5336 -17679 0
-5323 5338 -17679 0
-5325 5340 -17679 0
-5327 5342 -17679 0
-5329 5344 -17679 0
-5331 5346 -17679 0
-5333 5348 -17679 0
-5335 5350 -17679 0
5334 -5349 -17679 0
-5336 5321 -17679 0
-5338 5323 -17679 0
-5340 5325 -17679 0
-5342 5327 -17679 0
-5344 5329 -17679 0
-5346 5331 -17679 0
-5348 5333 -17679 0
-5350 5335 -17679 0
5349 -5334 -17679 0
-5321 -5336 17679 0
-5323 -5338 17679 0
-5325 -5340 17679 0
-5327 -5342 17679 0
-5329 -5344 17679 0
-5331 -5346 17679 0
-5333 -5348 17679 0
-5335 -5350 17679 0
5334 5349 17679 0
c ((variant_fields_00004_00003_00009=max_left_00004_00003_00009)=tv=SATLiteral(17680))
-10742 5336 -17680 0
-10744 5338 -17680 0
-10746 5340 -17680 0
-10748 5342 -17680 0
-10750 5344 -17680 0
-10752 5346 -17680 0
-10754 5348 -17680 0
-10756 5350 -17680 0
10755 -5349 -17680 0
-5336 10742 -17680 0
-5338 10744 -17680 0
-5340 10746 -17680 0
-5342 10748 -17680 0
-5344 10750 -17680 0
-5346 10752 -17680 0
-5348 10754 -17680 0
-5350 10756 -17680 0
5349 -10755 -17680 0
-10742 -5336 17680 0
-10744 -5338 17680 0
-10746 -5340 17680 0
-10748 -5342 17680 0
-10750 -5344 17680 0
-10752 -5346 17680 0
-10754 -5348 17680 0
-10756 -5350 17680 0
10755 5349 17680 0
c ((max_left_00004_00004_00001=max_left_00004_00004_00002)=tv=SATLiteral(17681))
-5352 5367 -17681 0
-5354 5369 -17681 0
-5356 5371 -17681 0
-5358 5373 -17681 0
-5360 5375 -17681 0
-5362 5377 -17681 0
-5364 5379 -17681 0
-5366 5381 -17681 0
5365 -5380 -17681 0
-5367 5352 -17681 0
-5369 5354 -17681 0
-5371 5356 -17681 0
-5373 5358 -17681 0
-5375 5360 -17681 0
-5377 5362 -17681 0
-5379 5364 -17681 0
-5381 5366 -17681 0
5380 -5365 -17681 0
-5352 -5367 17681 0
-5354 -5369 17681 0
-5356 -5371 17681 0
-5358 -5373 17681 0
-5360 -5375 17681 0
-5362 -5377 17681 0
-5364 -5379 17681 0
-5366 -5381 17681 0
5365 5380 17681 0
c ((variant_fields_00004_00004_00002=max_left_00004_00004_00002)=tv=SATLiteral(17682))
-10772 5367 -17682 0
-10774 5369 -17682 0
-10776 5371 -17682 0
-10778 5373 -17682 0
-10780 5375 -17682 0
-10782 5377 -17682 0
-10784 5379 -17682 0
-10786 5381 -17682 0
10785 -5380 -17682 0
-5367 10772 -17682 0
-5369 10774 -17682 0
-5371 10776 -17682 0
-5373 10778 -17682 0
-5375 10780 -17682 0
-5377 10782 -17682 0
-5379 10784 -17682 0
-5381 10786 -17682 0
5380 -10785 -17682 0
-10772 -5367 17682 0
-10774 -5369 17682 0
-10776 -5371 17682 0
-10778 -5373 17682 0
-10780 -5375 17682 0
-10782 -5377 17682 0
-10784 -5379 17682 0
-10786 -5381 17682 0
10785 5380 17682 0
c ((max_left_00004_00004_00002=max_left_00004_00004_00003)=tv=SATLiteral(17683))
-5367 5382 -17683 0
-5369 5384 -17683 0
-5371 5386 -17683 0
-5373 5388 -17683 0
-5375 5390 -17683 0
-5377 5392 -17683 0
-5379 5394 -17683 0
-5381 5396 -17683 0
5380 -5395 -17683 0
-5382 5367 -17683 0
-5384 5369 -17683 0
-5386 5371 -17683 0
-5388 5373 -17683 0
-5390 5375 -17683 0
-5392 5377 -17683 0
-5394 5379 -17683 0
-5396 5381 -17683 0
5395 -5380 -17683 0
-5367 -5382 17683 0
-5369 -5384 17683 0
-5371 -5386 17683 0
-5373 -5388 17683 0
-5375 -5390 17683 0
-5377 -5392 17683 0
-5379 -5394 17683 0
-5381 -5396 17683 0
5380 5395 17683 0
c ((variant_fields_00004_00004_00003=max_left_00004_00004_00003)=tv=SATLiteral(17684))
-10787 5382 -17684 0
-10789 5384 -17684 0
-10791 5386 -17684 0
-10793 5388 -17684 0
-10795 5390 -17684 0
-10797 5392 -17684 0
-10799 5394 -17684 0
-10801 5396 -17684 0
10800 -5395 -17684 0
-5382 10787 -17684 0
-5384 10789 -17684 0
-5386 10791 -17684 0
-5388 10793 -17684 0
-5390 10795 -17684 0
-5392 10797 -17684 0
-5394 10799 -17684 0
-5396 10801 -17684 0
5395 -10800 -17684 0
-10787 -5382 17684 0
-10789 -5384 17684 0
-10791 -5386 17684 0
-10793 -5388 17684 0
-10795 -5390 17684 0
-10797 -5392 17684 0
-10799 -5394 17684 0
-10801 -5396 17684 0
10800 5395 17684 0
c ((max_left_00004_00004_00003=max_left_00004_00004_00004)=tv=SATLiteral(17685))
-5382 5397 -17685 0
-5384 5399 -17685 0
-5386 5401 -17685 0
-5388 5403 -17685 0
-5390 5405 -17685 0
-5392 5407 -17685 0
-5394 5409 -17685 0
-5396 5411 -17685 0
5395 -5410 -17685 0
-5397 5382 -17685 0
-5399 5384 -17685 0
-5401 5386 -17685 0
-5403 5388 -17685 0
-5405 5390 -17685 0
-5407 5392 -17685 0
-5409 5394 -17685 0
-5411 5396 -17685 0
5410 -5395 -17685 0
-5382 -5397 17685 0
-5384 -5399 17685 0
-5386 -5401 17685 0
-5388 -5403 17685 0
-5390 -5405 17685 0
-5392 -5407 17685 0
-5394 -5409 17685 0
-5396 -5411 17685 0
5395 5410 17685 0
c ((variant_fields_00004_00004_00004=max_left_00004_00004_00004)=tv=SATLiteral(17686))
-10802 5397 -17686 0
-10804 5399 -17686 0
-10806 5401 -17686 0
-10808 5403 -17686 0
-10810 5405 -17686 0
-10812 5407 -17686 0
-10814 5409 -17686 0
-10816 5411 -17686 0
10815 -5410 -17686 0
-5397 10802 -17686 0
-5399 10804 -17686 0
-5401 10806 -17686 0
-5403 10808 -17686 0
-5405 10810 -17686 0
-5407 10812 -17686 0
-5409 10814 -17686 0
-5411 10816 -17686 0
5410 -10815 -17686 0
-10802 -5397 17686 0
-10804 -5399 17686 0
-10806 -5401 17686 0
-10808 -5403 17686 0
-10810 -5405 17686 0
-10812 -5407 17686 0
-10814 -5409 17686 0
-10816 -5411 17686 0
10815 5410 17686 0
c ((max_left_00004_00004_00004=max_left_00004_00004_00005)=tv=SATLiteral(17687))
-5397 5412 -17687 0
-5399 5414 -17687 0
-5401 5416 -17687 0
-5403 5418 -17687 0
-5405 5420 -17687 0
-5407 5422 -17687 0
-5409 5424 -17687 0
-5411 5426 -17687 0
5410 -5425 -17687 0
-5412 5397 -17687 0
-5414 5399 -17687 0
-5416 5401 -17687 0
-5418 5403 -17687 0
-5420 5405 -17687 0
-5422 5407 -17687 0
-5424 5409 -17687 0
-5426 5411 -17687 0
5425 -5410 -17687 0
-5397 -5412 17687 0
-5399 -5414 17687 0
-5401 -5416 17687 0
-5403 -5418 17687 0
-5405 -5420 17687 0
-5407 -5422 17687 0
-5409 -5424 17687 0
-5411 -5426 17687 0
5410 5425 17687 0
c ((variant_fields_00004_00004_00005=max_left_00004_00004_00005)=tv=SATLiteral(17688))
-10817 5412 -17688 0
-10819 5414 -17688 0
-10821 5416 -17688 0
-10823 5418 -17688 0
-10825 5420 -17688 0
-10827 5422 -17688 0
-10829 5424 -17688 0
-10831 5426 -17688 0
10830 -5425 -17688 0
-5412 10817 -17688 0
-5414 10819 -17688 0
-5416 10821 -17688 0
-5418 10823 -17688 0
-5420 10825 -17688 0
-5422 10827 -17688 0
-5424 10829 -17688 0
-5426 10831 -17688 0
5425 -10830 -17688 0
-10817 -5412 17688 0
-10819 -5414 17688 0
-10821 -5416 17688 0
-10823 -5418 17688 0
-10825 -5420 17688 0
-10827 -5422 17688 0
-10829 -5424 17688 0
-10831 -5426 17688 0
10830 5425 17688 0
c ((max_left_00004_00004_00005=max_left_00004_00004_00006)=tv=SATLiteral(17689))
-5412 5427 -17689 0
-5414 5429 -17689 0
-5416 5431 -17689 0
-5418 5433 -17689 0
-5420 5435 -17689 0
-5422 5437 -17689 0
-5424 5439 -17689 0
-5426 5441 -17689 0
5425 -5440 -17689 0
-5427 5412 -17689 0
-5429 5414 -17689 0
-5431 5416 -17689 0
-5433 5418 -17689 0
-5435 5420 -17689 0
-5437 5422 -17689 0
-5439 5424 -17689 0
-5441 5426 -17689 0
5440 -5425 -17689 0
-5412 -5427 17689 0
-5414 -5429 17689 0
-5416 -5431 17689 0
-5418 -5433 17689 0
-5420 -5435 17689 0
-5422 -5437 17689 0
-5424 -5439 17689 0
-5426 -5441 17689 0
5425 5440 17689 0
c ((variant_fields_00004_00004_00006=max_left_00004_00004_00006)=tv=SATLiteral(17690))
-10832 5427 -17690 0
-10834 5429 -17690 0
-10836 5431 -17690 0
-10838 5433 -17690 0
-10840 5435 -17690 0
-10842 5437 -17690 0
-10844 5439 -17690 0
-10846 5441 -17690 0
10845 -5440 -17690 0
-5427 10832 -17690 0
-5429 10834 -17690 0
-5431 10836 -17690 0
-5433 10838 -17690 0
-5435 10840 -17690 0
-5437 10842 -17690 0
-5439 10844 -17690 0
-5441 10846 -17690 0
5440 -10845 -17690 0
-10832 -5427 17690 0
-10834 -5429 17690 0
-10836 -5431 17690 0
-10838 -5433 17690 0
-10840 -5435 17690 0
-10842 -5437 17690 0
-10844 -5439 17690 0
-10846 -5441 17690 0
10845 5440 17690 0
c ((max_left_00004_00004_00006=max_left_00004_00004_00007)=tv=SATLiteral(17691))
-5427 5442 -17691 0
-5429 5444 -17691 0
-5431 5446 -17691 0
-5433 5448 -17691 0
-5435 5450 -17691 0
-5437 5452 -17691 0
-5439 5454 -17691 0
-5441 5456 -17691 0
5440 -5455 -17691 0
-5442 5427 -17691 0
-5444 5429 -17691 0
-5446 5431 -17691 0
-5448 5433 -17691 0
-5450 5435 -17691 0
-5452 5437 -17691 0
-5454 5439 -17691 0
-5456 5441 -17691 0
5455 -5440 -17691 0
-5427 -5442 17691 0
-5429 -5444 17691 0
-5431 -5446 17691 0
-5433 -5448 17691 0
-5435 -5450 17691 0
-5437 -5452 17691 0
-5439 -5454 17691 0
-5441 -5456 17691 0
5440 5455 17691 0
c ((variant_fields_00004_00004_00007=max_left_00004_00004_00007)=tv=SATLiteral(17692))
-10847 5442 -17692 0
-10849 5444 -17692 0
-10851 5446 -17692 0
-10853 5448 -17692 0
-10855 5450 -17692 0
-10857 5452 -17692 0
-10859 5454 -17692 0
-10861 5456 -17692 0
10860 -5455 -17692 0
-5442 10847 -17692 0
-5444 10849 -17692 0
-5446 10851 -17692 0
-5448 10853 -17692 0
-5450 10855 -17692 0
-5452 10857 -17692 0
-5454 10859 -17692 0
-5456 10861 -17692 0
5455 -10860 -17692 0
-10847 -5442 17692 0
-10849 -5444 17692 0
-10851 -5446 17692 0
-10853 -5448 17692 0
-10855 -5450 17692 0
-10857 -5452 17692 0
-10859 -5454 17692 0
-10861 -5456 17692 0
10860 5455 17692 0
c ((max_left_00004_00004_00007=max_left_00004_00004_00008)=tv=SATLiteral(17693))
-5442 5457 -17693 0
-5444 5459 -17693 0
-5446 5461 -17693 0
-5448 5463 -17693 0
-5450 5465 -17693 0
-5452 5467 -17693 0
-5454 5469 -17693 0
-5456 5471 -17693 0
5455 -5470 -17693 0
-5457 5442 -17693 0
-5459 5444 -17693 0
-5461 5446 -17693 0
-5463 5448 -17693 0
-5465 5450 -17693 0
-5467 5452 -17693 0
-5469 5454 -17693 0
-5471 5456 -17693 0
5470 -5455 -17693 0
-5442 -5457 17693 0
-5444 -5459 17693 0
-5446 -5461 17693 0
-5448 -5463 17693 0
-5450 -5465 17693 0
-5452 -5467 17693 0
-5454 -5469 17693 0
-5456 -5471 17693 0
5455 5470 17693 0
c ((variant_fields_00004_00004_00008=max_left_00004_00004_00008)=tv=SATLiteral(17694))
-10862 5457 -17694 0
-10864 5459 -17694 0
-10866 5461 -17694 0
-10868 5463 -17694 0
-10870 5465 -17694 0
-10872 5467 -17694 0
-10874 5469 -17694 0
-10876 5471 -17694 0
10875 -5470 -17694 0
-5457 10862 -17694 0
-5459 10864 -17694 0
-5461 10866 -17694 0
-5463 10868 -17694 0
-5465 10870 -17694 0
-5467 10872 -17694 0
-5469 10874 -17694 0
-5471 10876 -17694 0
5470 -10875 -17694 0
-10862 -5457 17694 0
-10864 -5459 17694 0
-10866 -5461 17694 0
-10868 -5463 17694 0
-10870 -5465 17694 0
-10872 -5467 17694 0
-10874 -5469 17694 0
-10876 -5471 17694 0
10875 5470 17694 0
c ((max_left_00004_00004_00008=max_left_00004_00004_00009)=tv=SATLiteral(17695))
-5457 5472 -17695 0
-5459 5474 -17695 0
-5461 5476 -17695 0
-5463 5478 -17695 0
-5465 5480 -17695 0
-5467 5482 -17695 0
-5469 5484 -17695 0
-5471 5486 -17695 0
5470 -5485 -17695 0
-5472 5457 -17695 0
-5474 5459 -17695 0
-5476 5461 -17695 0
-5478 5463 -17695 0
-5480 5465 -17695 0
-5482 5467 -17695 0
-5484 5469 -17695 0
-5486 5471 -17695 0
5485 -5470 -17695 0
-5457 -5472 17695 0
-5459 -5474 17695 0
-5461 -5476 17695 0
-5463 -5478 17695 0
-5465 -5480 17695 0
-5467 -5482 17695 0
-5469 -5484 17695 0
-5471 -5486 17695 0
5470 5485 17695 0
c ((variant_fields_00004_00004_00009=max_left_00004_00004_00009)=tv=SATLiteral(17696))
-10877 5472 -17696 0
-10879 5474 -17696 0
-10881 5476 -17696 0
-10883 5478 -17696 0
-10885 5480 -17696 0
-10887 5482 -17696 0
-10889 5484 -17696 0
-10891 5486 -17696 0
10890 -5485 -17696 0
-5472 10877 -17696 0
-5474 10879 -17696 0
-5476 10881 -17696 0
-5478 10883 -17696 0
-5480 10885 -17696 0
-5482 10887 -17696 0
-5484 10889 -17696 0
-5486 10891 -17696 0
5485 -10890 -17696 0
-10877 -5472 17696 0
-10879 -5474 17696 0
-10881 -5476 17696 0
-10883 -5478 17696 0
-10885 -5480 17696 0
-10887 -5482 17696 0
-10889 -5484 17696 0
-10891 -5486 17696 0
10890 5485 17696 0
c ((max_left_00004_00005_00001=max_left_00004_00005_00002)=tv=SATLiteral(17697))
-5488 5503 -17697 0
-5490 5505 -17697 0
-5492 5507 -17697 0
-5494 5509 -17697 0
-5496 5511 -17697 0
-5498 5513 -17697 0
-5500 5515 -17697 0
-5502 5517 -17697 0
5501 -5516 -17697 0
-5503 5488 -17697 0
-5505 5490 -17697 0
-5507 5492 -17697 0
-5509 5494 -17697 0
-5511 5496 -17697 0
-5513 5498 -17697 0
-5515 5500 -17697 0
-5517 5502 -17697 0
5516 -5501 -17697 0
-5488 -5503 17697 0
-5490 -5505 17697 0
-5492 -5507 17697 0
-5494 -5509 17697 0
-5496 -5511 17697 0
-5498 -5513 17697 0
-5500 -5515 17697 0
-5502 -5517 17697 0
5501 5516 17697 0
c ((variant_fields_00004_00005_00002=max_left_00004_00005_00002)=tv=SATLiteral(17698))
-10907 5503 -17698 0
-10909 5505 -17698 0
-10911 5507 -17698 0
-10913 5509 -17698 0
-10915 5511 -17698 0
-10917 5513 -17698 0
-10919 5515 -17698 0
-10921 5517 -17698 0
10920 -5516 -17698 0
-5503 10907 -17698 0
-5505 10909 -17698 0
-5507 10911 -17698 0
-5509 10913 -17698 0
-5511 10915 -17698 0
-5513 10917 -17698 0
-5515 10919 -17698 0
-5517 10921 -17698 0
5516 -10920 -17698 0
-10907 -5503 17698 0
-10909 -5505 17698 0
-10911 -5507 17698 0
-10913 -5509 17698 0
-10915 -5511 17698 0
-10917 -5513 17698 0
-10919 -5515 17698 0
-10921 -5517 17698 0
10920 5516 17698 0
c ((max_left_00004_00005_00002=max_left_00004_00005_00003)=tv=SATLiteral(17699))
-5503 5518 -17699 0
-5505 5520 -17699 0
-5507 5522 -17699 0
-5509 5524 -17699 0
-5511 5526 -17699 0
-5513 5528 -17699 0
-5515 5530 -17699 0
-5517 5532 -17699 0
5516 -5531 -17699 0
-5518 5503 -17699 0
-5520 5505 -17699 0
-5522 5507 -17699 0
-5524 5509 -17699 0
-5526 5511 -17699 0
-5528 5513 -17699 0
-5530 5515 -17699 0
-5532 5517 -17699 0
5531 -5516 -17699 0
-5503 -5518 17699 0
-5505 -5520 17699 0
-5507 -5522 17699 0
-5509 -5524 17699 0
-5511 -5526 17699 0
-5513 -5528 17699 0
-5515 -5530 17699 0
-5517 -5532 17699 0
5516 5531 17699 0
c ((variant_fields_00004_00005_00003=max_left_00004_00005_00003)=tv=SATLiteral(17700))
-10922 5518 -17700 0
-10924 5520 -17700 0
-10926 5522 -17700 0
-10928 5524 -17700 0
-10930 5526 -17700 0
-10932 5528 -17700 0
-10934 5530 -17700 0
-10936 5532 -17700 0
10935 -5531 -17700 0
-5518 10922 -17700 0
-5520 10924 -17700 0
-5522 10926 -17700 0
-5524 10928 -17700 0
-5526 10930 -17700 0
-5528 10932 -17700 0
-5530 10934 -17700 0
-5532 10936 -17700 0
5531 -10935 -17700 0
-10922 -5518 17700 0
-10924 -5520 17700 0
-10926 -5522 17700 0
-10928 -5524 17700 0
-10930 -5526 17700 0
-10932 -5528 17700 0
-10934 -5530 17700 0
-10936 -5532 17700 0
10935 5531 17700 0
c ((max_left_00004_00005_00003=max_left_00004_00005_00004)=tv=SATLiteral(17701))
-5518 5533 -17701 0
-5520 5535 -17701 0
-5522 5537 -17701 0
-5524 5539 -17701 0
-5526 5541 -17701 0
-5528 5543 -17701 0
-5530 5545 -17701 0
-5532 5547 -17701 0
5531 -5546 -17701 0
-5533 5518 -17701 0
-5535 5520 -17701 0
-5537 5522 -17701 0
-5539 5524 -17701 0
-5541 5526 -17701 0
-5543 5528 -17701 0
-5545 5530 -17701 0
-5547 5532 -17701 0
5546 -5531 -17701 0
-5518 -5533 17701 0
-5520 -5535 17701 0
-5522 -5537 17701 0
-5524 -5539 17701 0
-5526 -5541 17701 0
-5528 -5543 17701 0
-5530 -5545 17701 0
-5532 -5547 17701 0
5531 5546 17701 0
c ((variant_fields_00004_00005_00004=max_left_00004_00005_00004)=tv=SATLiteral(17702))
-10937 5533 -17702 0
-10939 5535 -17702 0
-10941 5537 -17702 0
-10943 5539 -17702 0
-10945 5541 -17702 0
-10947 5543 -17702 0
-10949 5545 -17702 0
-10951 5547 -17702 0
10950 -5546 -17702 0
-5533 10937 -17702 0
-5535 10939 -17702 0
-5537 10941 -17702 0
-5539 10943 -17702 0
-5541 10945 -17702 0
-5543 10947 -17702 0
-5545 10949 -17702 0
-5547 10951 -17702 0
5546 -10950 -17702 0
-10937 -5533 17702 0
-10939 -5535 17702 0
-10941 -5537 17702 0
-10943 -5539 17702 0
-10945 -5541 17702 0
-10947 -5543 17702 0
-10949 -5545 17702 0
-10951 -5547 17702 0
10950 5546 17702 0
c ((max_left_00004_00005_00004=max_left_00004_00005_00005)=tv=SATLiteral(17703))
-5533 5548 -17703 0
-5535 5550 -17703 0
-5537 5552 -17703 0
-5539 5554 -17703 0
-5541 5556 -17703 0
-5543 5558 -17703 0
-5545 5560 -17703 0
-5547 5562 -17703 0
5546 -5561 -17703 0
-5548 5533 -17703 0
-5550 5535 -17703 0
-5552 5537 -17703 0
-5554 5539 -17703 0
-5556 5541 -17703 0
-5558 5543 -17703 0
-5560 5545 -17703 0
-5562 5547 -17703 0
5561 -5546 -17703 0
-5533 -5548 17703 0
-5535 -5550 17703 0
-5537 -5552 17703 0
-5539 -5554 17703 0
-5541 -5556 17703 0
-5543 -5558 17703 0
-5545 -5560 17703 0
-5547 -5562 17703 0
5546 5561 17703 0
c ((variant_fields_00004_00005_00005=max_left_00004_00005_00005)=tv=SATLiteral(17704))
-10952 5548 -17704 0
-10954 5550 -17704 0
-10956 5552 -17704 0
-10958 5554 -17704 0
-10960 5556 -17704 0
-10962 5558 -17704 0
-10964 5560 -17704 0
-10966 5562 -17704 0
10965 -5561 -17704 0
-5548 10952 -17704 0
-5550 10954 -17704 0
-5552 10956 -17704 0
-5554 10958 -17704 0
-5556 10960 -17704 0
-5558 10962 -17704 0
-5560 10964 -17704 0
-5562 10966 -17704 0
5561 -10965 -17704 0
-10952 -5548 17704 0
-10954 -5550 17704 0
-10956 -5552 17704 0
-10958 -5554 17704 0
-10960 -5556 17704 0
-10962 -5558 17704 0
-10964 -5560 17704 0
-10966 -5562 17704 0
10965 5561 17704 0
c ((max_left_00004_00005_00005=max_left_00004_00005_00006)=tv=SATLiteral(17705))
-5548 5563 -17705 0
-5550 5565 -17705 0
-5552 5567 -17705 0
-5554 5569 -17705 0
-5556 5571 -17705 0
-5558 5573 -17705 0
-5560 5575 -17705 0
-5562 5577 -17705 0
5561 -5576 -17705 0
-5563 5548 -17705 0
-5565 5550 -17705 0
-5567 5552 -17705 0
-5569 5554 -17705 0
-5571 5556 -17705 0
-5573 5558 -17705 0
-5575 5560 -17705 0
-5577 5562 -17705 0
5576 -5561 -17705 0
-5548 -5563 17705 0
-5550 -5565 17705 0
-5552 -5567 17705 0
-5554 -5569 17705 0
-5556 -5571 17705 0
-5558 -5573 17705 0
-5560 -5575 17705 0
-5562 -5577 17705 0
5561 5576 17705 0
c ((variant_fields_00004_00005_00006=max_left_00004_00005_00006)=tv=SATLiteral(17706))
-10967 5563 -17706 0
-10969 5565 -17706 0
-10971 5567 -17706 0
-10973 5569 -17706 0
-10975 5571 -17706 0
-10977 5573 -17706 0
-10979 5575 -17706 0
-10981 5577 -17706 0
10980 -5576 -17706 0
-5563 10967 -17706 0
-5565 10969 -17706 0
-5567 10971 -17706 0
-5569 10973 -17706 0
-5571 10975 -17706 0
-5573 10977 -17706 0
-5575 10979 -17706 0
-5577 10981 -17706 0
5576 -10980 -17706 0
-10967 -5563 17706 0
-10969 -5565 17706 0
-10971 -5567 17706 0
-10973 -5569 17706 0
-10975 -5571 17706 0
-10977 -5573 17706 0
-10979 -5575 17706 0
-10981 -5577 17706 0
10980 5576 17706 0
c ((max_left_00004_00005_00006=max_left_00004_00005_00007)=tv=SATLiteral(17707))
-5563 5578 -17707 0
-5565 5580 -17707 0
-5567 5582 -17707 0
-5569 5584 -17707 0
-5571 5586 -17707 0
-5573 5588 -17707 0
-5575 5590 -17707 0
-5577 5592 -17707 0
5576 -5591 -17707 0
-5578 5563 -17707 0
-5580 5565 -17707 0
-5582 5567 -17707 0
-5584 5569 -17707 0
-5586 5571 -17707 0
-5588 5573 -17707 0
-5590 5575 -17707 0
-5592 5577 -17707 0
5591 -5576 -17707 0
-5563 -5578 17707 0
-5565 -5580 17707 0
-5567 -5582 17707 0
-5569 -5584 17707 0
-5571 -5586 17707 0
-5573 -5588 17707 0
-5575 -5590 17707 0
-5577 -5592 17707 0
5576 5591 17707 0
c ((variant_fields_00004_00005_00007=max_left_00004_00005_00007)=tv=SATLiteral(17708))
-10982 5578 -17708 0
-10984 5580 -17708 0
-10986 5582 -17708 0
-10988 5584 -17708 0
-10990 5586 -17708 0
-10992 5588 -17708 0
-10994 5590 -17708 0
-10996 5592 -17708 0
10995 -5591 -17708 0
-5578 10982 -17708 0
-5580 10984 -17708 0
-5582 10986 -17708 0
-5584 10988 -17708 0
-5586 10990 -17708 0
-5588 10992 -17708 0
-5590 10994 -17708 0
-5592 10996 -17708 0
5591 -10995 -17708 0
-10982 -5578 17708 0
-10984 -5580 17708 0
-10986 -5582 17708 0
-10988 -5584 17708 0
-10990 -5586 17708 0
-10992 -5588 17708 0
-10994 -5590 17708 0
-10996 -5592 17708 0
10995 5591 17708 0
c ((max_left_00004_00005_00007=max_left_00004_00005_00008)=tv=SATLiteral(17709))
-5578 5593 -17709 0
-5580 5595 -17709 0
-5582 5597 -17709 0
-5584 5599 -17709 0
-5586 5601 -17709 0
-5588 5603 -17709 0
-5590 5605 -17709 0
-5592 5607 -17709 0
5591 -5606 -17709 0
-5593 5578 -17709 0
-5595 5580 -17709 0
-5597 5582 -17709 0
-5599 5584 -17709 0
-5601 5586 -17709 0
-5603 5588 -17709 0
-5605 5590 -17709 0
-5607 5592 -17709 0
5606 -5591 -17709 0
-5578 -5593 17709 0
-5580 -5595 17709 0
-5582 -5597 17709 0
-5584 -5599 17709 0
-5586 -5601 17709 0
-5588 -5603 17709 0
-5590 -5605 17709 0
-5592 -5607 17709 0
5591 5606 17709 0
c ((variant_fields_00004_00005_00008=max_left_00004_00005_00008)=tv=SATLiteral(17710))
-10997 5593 -17710 0
-10999 5595 -17710 0
-11001 5597 -17710 0
-11003 5599 -17710 0
-11005 5601 -17710 0
-11007 5603 -17710 0
-11009 5605 -17710 0
-11011 5607 -17710 0
11010 -5606 -17710 0
-5593 10997 -17710 0
-5595 10999 -17710 0
-5597 11001 -17710 0
-5599 11003 -17710 0
-5601 11005 -17710 0
-5603 11007 -17710 0
-5605 11009 -17710 0
-5607 11011 -17710 0
5606 -11010 -17710 0
-10997 -5593 17710 0
-10999 -5595 17710 0
-11001 -5597 17710 0
-11003 -5599 17710 0
-11005 -5601 17710 0
-11007 -5603 17710 0
-11009 -5605 17710 0
-11011 -5607 17710 0
11010 5606 17710 0
c ((max_left_00004_00005_00008=max_left_00004_00005_00009)=tv=SATLiteral(17711))
-5593 5608 -17711 0
-5595 5610 -17711 0
-5597 5612 -17711 0
-5599 5614 -17711 0
-5601 5616 -17711 0
-5603 5618 -17711 0
-5605 5620 -17711 0
-5607 5622 -17711 0
5606 -5621 -17711 0
-5608 5593 -17711 0
-5610 5595 -17711 0
-5612 5597 -17711 0
-5614 5599 -17711 0
-5616 5601 -17711 0
-5618 5603 -17711 0
-5620 5605 -17711 0
-5622 5607 -17711 0
5621 -5606 -17711 0
-5593 -5608 17711 0
-5595 -5610 17711 0
-5597 -5612 17711 0
-5599 -5614 17711 0
-5601 -5616 17711 0
-5603 -5618 17711 0
-5605 -5620 17711 0
-5607 -5622 17711 0
5606 5621 17711 0
c ((variant_fields_00004_00005_00009=max_left_00004_00005_00009)=tv=SATLiteral(17712))
-11012 5608 -17712 0
-11014 5610 -17712 0
-11016 5612 -17712 0
-11018 5614 -17712 0
-11020 5616 -17712 0
-11022 5618 -17712 0
-11024 5620 -17712 0
-11026 5622 -17712 0
11025 -5621 -17712 0
-5608 11012 -17712 0
-5610 11014 -17712 0
-5612 11016 -17712 0
-5614 11018 -17712 0
-5616 11020 -17712 0
-5618 11022 -17712 0
-5620 11024 -17712 0
-5622 11026 -17712 0
5621 -11025 -17712 0
-11012 -5608 17712 0
-11014 -5610 17712 0
-11016 -5612 17712 0
-11018 -5614 17712 0
-11020 -5616 17712 0
-11022 -5618 17712 0
-11024 -5620 17712 0
-11026 -5622 17712 0
11025 5621 17712 0
c ((max_left_00004_00006_00001=max_left_00004_00006_00002)=tv=SATLiteral(17713))
-5624 5639 -17713 0
-5626 5641 -17713 0
-5628 5643 -17713 0
-5630 5645 -17713 0
-5632 5647 -17713 0
-5634 5649 -17713 0
-5636 5651 -17713 0
-5638 5653 -17713 0
5637 -5652 -17713 0
-5639 5624 -17713 0
-5641 5626 -17713 0
-5643 5628 -17713 0
-5645 5630 -17713 0
-5647 5632 -17713 0
-5649 5634 -17713 0
-5651 5636 -17713 0
-5653 5638 -17713 0
5652 -5637 -17713 0
-5624 -5639 17713 0
-5626 -5641 17713 0
-5628 -5643 17713 0
-5630 -5645 17713 0
-5632 -5647 17713 0
-5634 -5649 17713 0
-5636 -5651 17713 0
-5638 -5653 17713 0
5637 5652 17713 0
c ((variant_fields_00004_00006_00002=max_left_00004_00006_00002)=tv=SATLiteral(17714))
-11042 5639 -17714 0
-11044 5641 -17714 0
-11046 5643 -17714 0
-11048 5645 -17714 0
-11050 5647 -17714 0
-11052 5649 -17714 0
-11054 5651 -17714 0
-11056 5653 -17714 0
11055 -5652 -17714 0
-5639 11042 -17714 0
-5641 11044 -17714 0
-5643 11046 -17714 0
-5645 11048 -17714 0
-5647 11050 -17714 0
-5649 11052 -17714 0
-5651 11054 -17714 0
-5653 11056 -17714 0
5652 -11055 -17714 0
-11042 -5639 17714 0
-11044 -5641 17714 0
-11046 -5643 17714 0
-11048 -5645 17714 0
-11050 -5647 17714 0
-11052 -5649 17714 0
-11054 -5651 17714 0
-11056 -5653 17714 0
11055 5652 17714 0
c ((max_left_00004_00006_00002=max_left_00004_00006_00003)=tv=SATLiteral(17715))
-5639 5654 -17715 0
-5641 5656 -17715 0
-5643 5658 -17715 0
-5645 5660 -17715 0
-5647 5662 -17715 0
-5649 5664 -17715 0
-5651 5666 -17715 0
-5653 5668 -17715 0
5652 -5667 -17715 0
-5654 5639 -17715 0
-5656 5641 -17715 0
-5658 5643 -17715 0
-5660 5645 -17715 0
-5662 5647 -17715 0
-5664 5649 -17715 0
-5666 5651 -17715 0
-5668 5653 -17715 0
5667 -5652 -17715 0
-5639 -5654 17715 0
-5641 -5656 17715 0
-5643 -5658 17715 0
-5645 -5660 17715 0
-5647 -5662 17715 0
-5649 -5664 17715 0
-5651 -5666 17715 0
-5653 -5668 17715 0
5652 5667 17715 0
c ((variant_fields_00004_00006_00003=max_left_00004_00006_00003)=tv=SATLiteral(17716))
-11057 5654 -17716 0
-11059 5656 -17716 0
-11061 5658 -17716 0
-11063 5660 -17716 0
-11065 5662 -17716 0
-11067 5664 -17716 0
-11069 5666 -17716 0
-11071 5668 -17716 0
11070 -5667 -17716 0
-5654 11057 -17716 0
-5656 11059 -17716 0
-5658 11061 -17716 0
-5660 11063 -17716 0
-5662 11065 -17716 0
-5664 11067 -17716 0
-5666 11069 -17716 0
-5668 11071 -17716 0
5667 -11070 -17716 0
-11057 -5654 17716 0
-11059 -5656 17716 0
-11061 -5658 17716 0
-11063 -5660 17716 0
-11065 -5662 17716 0
-11067 -5664 17716 0
-11069 -5666 17716 0
-11071 -5668 17716 0
11070 5667 17716 0
c ((max_left_00004_00006_00003=max_left_00004_00006_00004)=tv=SATLiteral(17717))
-5654 5669 -17717 0
-5656 5671 -17717 0
-5658 5673 -17717 0
-5660 5675 -17717 0
-5662 5677 -17717 0
-5664 5679 -17717 0
-5666 5681 -17717 0
-5668 5683 -17717 0
5667 -5682 -17717 0
-5669 5654 -17717 0
-5671 5656 -17717 0
-5673 5658 -17717 0
-5675 5660 -17717 0
-5677 5662 -17717 0
-5679 5664 -17717 0
-5681 5666 -17717 0
-5683 5668 -17717 0
5682 -5667 -17717 0
-5654 -5669 17717 0
-5656 -5671 17717 0
-5658 -5673 17717 0
-5660 -5675 17717 0
-5662 -5677 17717 0
-5664 -5679 17717 0
-5666 -5681 17717 0
-5668 -5683 17717 0
5667 5682 17717 0
c ((variant_fields_00004_00006_00004=max_left_00004_00006_00004)=tv=SATLiteral(17718))
-11072 5669 -17718 0
-11074 5671 -17718 0
-11076 5673 -17718 0
-11078 5675 -17718 0
-11080 5677 -17718 0
-11082 5679 -17718 0
-11084 5681 -17718 0
-11086 5683 -17718 0
11085 -5682 -17718 0
-5669 11072 -17718 0
-5671 11074 -17718 0
-5673 11076 -17718 0
-5675 11078 -17718 0
-5677 11080 -17718 0
-5679 11082 -17718 0
-5681 11084 -17718 0
-5683 11086 -17718 0
5682 -11085 -17718 0
-11072 -5669 17718 0
-11074 -5671 17718 0
-11076 -5673 17718 0
-11078 -5675 17718 0
-11080 -5677 17718 0
-11082 -5679 17718 0
-11084 -5681 17718 0
-11086 -5683 17718 0
11085 5682 17718 0
c ((max_left_00004_00006_00004=max_left_00004_00006_00005)=tv=SATLiteral(17719))
-5669 5684 -17719 0
-5671 5686 -17719 0
-5673 5688 -17719 0
-5675 5690 -17719 0
-5677 5692 -17719 0
-5679 5694 -17719 0
-5681 5696 -17719 0
-5683 5698 -17719 0
5682 -5697 -17719 0
-5684 5669 -17719 0
-5686 5671 -17719 0
-5688 5673 -17719 0
-5690 5675 -17719 0
-5692 5677 -17719 0
-5694 5679 -17719 0
-5696 5681 -17719 0
-5698 5683 -17719 0
5697 -5682 -17719 0
-5669 -5684 17719 0
-5671 -5686 17719 0
-5673 -5688 17719 0
-5675 -5690 17719 0
-5677 -5692 17719 0
-5679 -5694 17719 0
-5681 -5696 17719 0
-5683 -5698 17719 0
5682 5697 17719 0
c ((variant_fields_00004_00006_00005=max_left_00004_00006_00005)=tv=SATLiteral(17720))
-11087 5684 -17720 0
-11089 5686 -17720 0
-11091 5688 -17720 0
-11093 5690 -17720 0
-11095 5692 -17720 0
-11097 5694 -17720 0
-11099 5696 -17720 0
-11101 5698 -17720 0
11100 -5697 -17720 0
-5684 11087 -17720 0
-5686 11089 -17720 0
-5688 11091 -17720 0
-5690 11093 -17720 0
-5692 11095 -17720 0
-5694 11097 -17720 0
-5696 11099 -17720 0
-5698 11101 -17720 0
5697 -11100 -17720 0
-11087 -5684 17720 0
-11089 -5686 17720 0
-11091 -5688 17720 0
-11093 -5690 17720 0
-11095 -5692 17720 0
-11097 -5694 17720 0
-11099 -5696 17720 0
-11101 -5698 17720 0
11100 5697 17720 0
c ((max_left_00004_00006_00005=max_left_00004_00006_00006)=tv=SATLiteral(17721))
-5684 5699 -17721 0
-5686 5701 -17721 0
-5688 5703 -17721 0
-5690 5705 -17721 0
-5692 5707 -17721 0
-5694 5709 -17721 0
-5696 5711 -17721 0
-5698 5713 -17721 0
5697 -5712 -17721 0
-5699 5684 -17721 0
-5701 5686 -17721 0
-5703 5688 -17721 0
-5705 5690 -17721 0
-5707 5692 -17721 0
-5709 5694 -17721 0
-5711 5696 -17721 0
-5713 5698 -17721 0
5712 -5697 -17721 0
-5684 -5699 17721 0
-5686 -5701 17721 0
-5688 -5703 17721 0
-5690 -5705 17721 0
-5692 -5707 17721 0
-5694 -5709 17721 0
-5696 -5711 17721 0
-5698 -5713 17721 0
5697 5712 17721 0
c ((variant_fields_00004_00006_00006=max_left_00004_00006_00006)=tv=SATLiteral(17722))
-11102 5699 -17722 0
-11104 5701 -17722 0
-11106 5703 -17722 0
-11108 5705 -17722 0
-11110 5707 -17722 0
-11112 5709 -17722 0
-11114 5711 -17722 0
-11116 5713 -17722 0
11115 -5712 -17722 0
-5699 11102 -17722 0
-5701 11104 -17722 0
-5703 11106 -17722 0
-5705 11108 -17722 0
-5707 11110 -17722 0
-5709 11112 -17722 0
-5711 11114 -17722 0
-5713 11116 -17722 0
5712 -11115 -17722 0
-11102 -5699 17722 0
-11104 -5701 17722 0
-11106 -5703 17722 0
-11108 -5705 17722 0
-11110 -5707 17722 0
-11112 -5709 17722 0
-11114 -5711 17722 0
-11116 -5713 17722 0
11115 5712 17722 0
c ((max_left_00004_00006_00006=max_left_00004_00006_00007)=tv=SATLiteral(17723))
-5699 5714 -17723 0
-5701 5716 -17723 0
-5703 5718 -17723 0
-5705 5720 -17723 0
-5707 5722 -17723 0
-5709 5724 -17723 0
-5711 5726 -17723 0
-5713 5728 -17723 0
5712 -5727 -17723 0
-5714 5699 -17723 0
-5716 5701 -17723 0
-5718 5703 -17723 0
-5720 5705 -17723 0
-5722 5707 -17723 0
-5724 5709 -17723 0
-5726 5711 -17723 0
-5728 5713 -17723 0
5727 -5712 -17723 0
-5699 -5714 17723 0
-5701 -5716 17723 0
-5703 -5718 17723 0
-5705 -5720 17723 0
-5707 -5722 17723 0
-5709 -5724 17723 0
-5711 -5726 17723 0
-5713 -5728 17723 0
5712 5727 17723 0
c ((variant_fields_00004_00006_00007=max_left_00004_00006_00007)=tv=SATLiteral(17724))
-11117 5714 -17724 0
-11119 5716 -17724 0
-11121 5718 -17724 0
-11123 5720 -17724 0
-11125 5722 -17724 0
-11127 5724 -17724 0
-11129 5726 -17724 0
-11131 5728 -17724 0
11130 -5727 -17724 0
-5714 11117 -17724 0
-5716 11119 -17724 0
-5718 11121 -17724 0
-5720 11123 -17724 0
-5722 11125 -17724 0
-5724 11127 -17724 0
-5726 11129 -17724 0
-5728 11131 -17724 0
5727 -11130 -17724 0
-11117 -5714 17724 0
-11119 -5716 17724 0
-11121 -5718 17724 0
-11123 -5720 17724 0
-11125 -5722 17724 0
-11127 -5724 17724 0
-11129 -5726 17724 0
-11131 -5728 17724 0
11130 5727 17724 0
c ((max_left_00004_00006_00007=max_left_00004_00006_00008)=tv=SATLiteral(17725))
-5714 5729 -17725 0
-5716 5731 -17725 0
-5718 5733 -17725 0
-5720 5735 -17725 0
-5722 5737 -17725 0
-5724 5739 -17725 0
-5726 5741 -17725 0
-5728 5743 -17725 0
5727 -5742 -17725 0
-5729 5714 -17725 0
-5731 5716 -17725 0
-5733 5718 -17725 0
-5735 5720 -17725 0
-5737 5722 -17725 0
-5739 5724 -17725 0
-5741 5726 -17725 0
-5743 5728 -17725 0
5742 -5727 -17725 0
-5714 -5729 17725 0
-5716 -5731 17725 0
-5718 -5733 17725 0
-5720 -5735 17725 0
-5722 -5737 17725 0
-5724 -5739 17725 0
-5726 -5741 17725 0
-5728 -5743 17725 0
5727 5742 17725 0
c ((variant_fields_00004_00006_00008=max_left_00004_00006_00008)=tv=SATLiteral(17726))
-11132 5729 -17726 0
-11134 5731 -17726 0
-11136 5733 -17726 0
-11138 5735 -17726 0
-11140 5737 -17726 0
-11142 5739 -17726 0
-11144 5741 -17726 0
-11146 5743 -17726 0
11145 -5742 -17726 0
-5729 11132 -17726 0
-5731 11134 -17726 0
-5733 11136 -17726 0
-5735 11138 -17726 0
-5737 11140 -17726 0
-5739 11142 -17726 0
-5741 11144 -17726 0
-5743 11146 -17726 0
5742 -11145 -17726 0
-11132 -5729 17726 0
-11134 -5731 17726 0
-11136 -5733 17726 0
-11138 -5735 17726 0
-11140 -5737 17726 0
-11142 -5739 17726 0
-11144 -5741 17726 0
-11146 -5743 17726 0
11145 5742 17726 0
c ((max_left_00004_00006_00008=max_left_00004_00006_00009)=tv=SATLiteral(17727))
-5729 5744 -17727 0
-5731 5746 -17727 0
-5733 5748 -17727 0
-5735 5750 -17727 0
-5737 5752 -17727 0
-5739 5754 -17727 0
-5741 5756 -17727 0
-5743 5758 -17727 0
5742 -5757 -17727 0
-5744 5729 -17727 0
-5746 5731 -17727 0
-5748 5733 -17727 0
-5750 5735 -17727 0
-5752 5737 -17727 0
-5754 5739 -17727 0
-5756 5741 -17727 0
-5758 5743 -17727 0
5757 -5742 -17727 0
-5729 -5744 17727 0
-5731 -5746 17727 0
-5733 -5748 17727 0
-5735 -5750 17727 0
-5737 -5752 17727 0
-5739 -5754 17727 0
-5741 -5756 17727 0
-5743 -5758 17727 0
5742 5757 17727 0
c ((variant_fields_00004_00006_00009=max_left_00004_00006_00009)=tv=SATLiteral(17728))
-11147 5744 -17728 0
-11149 5746 -17728 0
-11151 5748 -17728 0
-11153 5750 -17728 0
-11155 5752 -17728 0
-11157 5754 -17728 0
-11159 5756 -17728 0
-11161 5758 -17728 0
11160 -5757 -17728 0
-5744 11147 -17728 0
-5746 11149 -17728 0
-5748 11151 -17728 0
-5750 11153 -17728 0
-5752 11155 -17728 0
-5754 11157 -17728 0
-5756 11159 -17728 0
-5758 11161 -17728 0
5757 -11160 -17728 0
-11147 -5744 17728 0
-11149 -5746 17728 0
-11151 -5748 17728 0
-11153 -5750 17728 0
-11155 -5752 17728 0
-11157 -5754 17728 0
-11159 -5756 17728 0
-11161 -5758 17728 0
11160 5757 17728 0
c ((max_left_00004_00007_00001=max_left_00004_00007_00002)=tv=SATLiteral(17729))
-5760 5775 -17729 0
-5762 5777 -17729 0
-5764 5779 -17729 0
-5766 5781 -17729 0
-5768 5783 -17729 0
-5770 5785 -17729 0
-5772 5787 -17729 0
-5774 5789 -17729 0
5773 -5788 -17729 0
-5775 5760 -17729 0
-5777 5762 -17729 0
-5779 5764 -17729 0
-5781 5766 -17729 0
-5783 5768 -17729 0
-5785 5770 -17729 0
-5787 5772 -17729 0
-5789 5774 -17729 0
5788 -5773 -17729 0
-5760 -5775 17729 0
-5762 -5777 17729 0
-5764 -5779 17729 0
-5766 -5781 17729 0
-5768 -5783 17729 0
-5770 -5785 17729 0
-5772 -5787 17729 0
-5774 -5789 17729 0
5773 5788 17729 0
c ((variant_fields_00004_00007_00002=max_left_00004_00007_00002)=tv=SATLiteral(17730))
-11177 5775 -17730 0
-11179 5777 -17730 0
-11181 5779 -17730 0
-11183 5781 -17730 0
-11185 5783 -17730 0
-11187 5785 -17730 0
-11189 5787 -17730 0
-11191 5789 -17730 0
11190 -5788 -17730 0
-5775 11177 -17730 0
-5777 11179 -17730 0
-5779 11181 -17730 0
-5781 11183 -17730 0
-5783 11185 -17730 0
-5785 11187 -17730 0
-5787 11189 -17730 0
-5789 11191 -17730 0
5788 -11190 -17730 0
-11177 -5775 17730 0
-11179 -5777 17730 0
-11181 -5779 17730 0
-11183 -5781 17730 0
-11185 -5783 17730 0
-11187 -5785 17730 0
-11189 -5787 17730 0
-11191 -5789 17730 0
11190 5788 17730 0
c ((max_left_00004_00007_00002=max_left_00004_00007_00003)=tv=SATLiteral(17731))
-5775 5790 -17731 0
-5777 5792 -17731 0
-5779 5794 -17731 0
-5781 5796 -17731 0
-5783 5798 -17731 0
-5785 5800 -17731 0
-5787 5802 -17731 0
-5789 5804 -17731 0
5788 -5803 -17731 0
-5790 5775 -17731 0
-5792 5777 -17731 0
-5794 5779 -17731 0
-5796 5781 -17731 0
-5798 5783 -17731 0
-5800 5785 -17731 0
-5802 5787 -17731 0
-5804 5789 -17731 0
5803 -5788 -17731 0
-5775 -5790 17731 0
-5777 -5792 17731 0
-5779 -5794 17731 0
-5781 -5796 17731 0
-5783 -5798 17731 0
-5785 -5800 17731 0
-5787 -5802 17731 0
-5789 -5804 17731 0
5788 5803 17731 0
c ((variant_fields_00004_00007_00003=max_left_00004_00007_00003)=tv=SATLiteral(17732))
-11192 5790 -17732 0
-11194 5792 -17732 0
-11196 5794 -17732 0
-11198 5796 -17732 0
-11200 5798 -17732 0
-11202 5800 -17732 0
-11204 5802 -17732 0
-11206 5804 -17732 0
11205 -5803 -17732 0
-5790 11192 -17732 0
-5792 11194 -17732 0
-5794 11196 -17732 0
-5796 11198 -17732 0
-5798 11200 -17732 0
-5800 11202 -17732 0
-5802 11204 -17732 0
-5804 11206 -17732 0
5803 -11205 -17732 0
-11192 -5790 17732 0
-11194 -5792 17732 0
-11196 -5794 17732 0
-11198 -5796 17732 0
-11200 -5798 17732 0
-11202 -5800 17732 0
-11204 -5802 17732 0
-11206 -5804 17732 0
11205 5803 17732 0
c ((max_left_00004_00007_00003=max_left_00004_00007_00004)=tv=SATLiteral(17733))
-5790 5805 -17733 0
-5792 5807 -17733 0
-5794 5809 -17733 0
-5796 5811 -17733 0
-5798 5813 -17733 0
-5800 5815 -17733 0
-5802 5817 -17733 0
-5804 5819 -17733 0
5803 -5818 -17733 0
-5805 5790 -17733 0
-5807 5792 -17733 0
-5809 5794 -17733 0
-5811 5796 -17733 0
-5813 5798 -17733 0
-5815 5800 -17733 0
-5817 5802 -17733 0
-5819 5804 -17733 0
5818 -5803 -17733 0
-5790 -5805 17733 0
-5792 -5807 17733 0
-5794 -5809 17733 0
-5796 -5811 17733 0
-5798 -5813 17733 0
-5800 -5815 17733 0
-5802 -5817 17733 0
-5804 -5819 17733 0
5803 5818 17733 0
c ((variant_fields_00004_00007_00004=max_left_00004_00007_00004)=tv=SATLiteral(17734))
-11207 5805 -17734 0
-11209 5807 -17734 0
-11211 5809 -17734 0
-11213 5811 -17734 0
-11215 5813 -17734 0
-11217 5815 -17734 0
-11219 5817 -17734 0
-11221 5819 -17734 0
11220 -5818 -17734 0
-5805 11207 -17734 0
-5807 11209 -17734 0
-5809 11211 -17734 0
-5811 11213 -17734 0
-5813 11215 -17734 0
-5815 11217 -17734 0
-5817 11219 -17734 0
-5819 11221 -17734 0
5818 -11220 -17734 0
-11207 -5805 17734 0
-11209 -5807 17734 0
-11211 -5809 17734 0
-11213 -5811 17734 0
-11215 -5813 17734 0
-11217 -5815 17734 0
-11219 -5817 17734 0
-11221 -5819 17734 0
11220 5818 17734 0
c ((max_left_00004_00007_00004=max_left_00004_00007_00005)=tv=SATLiteral(17735))
-5805 5820 -17735 0
-5807 5822 -17735 0
-5809 5824 -17735 0
-5811 5826 -17735 0
-5813 5828 -17735 0
-5815 5830 -17735 0
-5817 5832 -17735 0
-5819 5834 -17735 0
5818 -5833 -17735 0
-5820 5805 -17735 0
-5822 5807 -17735 0
-5824 5809 -17735 0
-5826 5811 -17735 0
-5828 5813 -17735 0
-5830 5815 -17735 0
-5832 5817 -17735 0
-5834 5819 -17735 0
5833 -5818 -17735 0
-5805 -5820 17735 0
-5807 -5822 17735 0
-5809 -5824 17735 0
-5811 -5826 17735 0
-5813 -5828 17735 0
-5815 -5830 17735 0
-5817 -5832 17735 0
-5819 -5834 17735 0
5818 5833 17735 0
c ((variant_fields_00004_00007_00005=max_left_00004_00007_00005)=tv=SATLiteral(17736))
-11222 5820 -17736 0
-11224 5822 -17736 0
-11226 5824 -17736 0
-11228 5826 -17736 0
-11230 5828 -17736 0
-11232 5830 -17736 0
-11234 5832 -17736 0
-11236 5834 -17736 0
11235 -5833 -17736 0
-5820 11222 -17736 0
-5822 11224 -17736 0
-5824 11226 -17736 0
-5826 11228 -17736 0
-5828 11230 -17736 0
-5830 11232 -17736 0
-5832 11234 -17736 0
-5834 11236 -17736 0
5833 -11235 -17736 0
-11222 -5820 17736 0
-11224 -5822 17736 0
-11226 -5824 17736 0
-11228 -5826 17736 0
-11230 -5828 17736 0
-11232 -5830 17736 0
-11234 -5832 17736 0
-11236 -5834 17736 0
11235 5833 17736 0
c ((max_left_00004_00007_00005=max_left_00004_00007_00006)=tv=SATLiteral(17737))
-5820 5835 -17737 0
-5822 5837 -17737 0
-5824 5839 -17737 0
-5826 5841 -17737 0
-5828 5843 -17737 0
-5830 5845 -17737 0
-5832 5847 -17737 0
-5834 5849 -17737 0
5833 -5848 -17737 0
-5835 5820 -17737 0
-5837 5822 -17737 0
-5839 5824 -17737 0
-5841 5826 -17737 0
-5843 5828 -17737 0
-5845 5830 -17737 0
-5847 5832 -17737 0
-5849 5834 -17737 0
5848 -5833 -17737 0
-5820 -5835 17737 0
-5822 -5837 17737 0
-5824 -5839 17737 0
-5826 -5841 17737 0
-5828 -5843 17737 0
-5830 -5845 17737 0
-5832 -5847 17737 0
-5834 -5849 17737 0
5833 5848 17737 0
c ((variant_fields_00004_00007_00006=max_left_00004_00007_00006)=tv=SATLiteral(17738))
-11237 5835 -17738 0
-11239 5837 -17738 0
-11241 5839 -17738 0
-11243 5841 -17738 0
-11245 5843 -17738 0
-11247 5845 -17738 0
-11249 5847 -17738 0
-11251 5849 -17738 0
11250 -5848 -17738 0
-5835 11237 -17738 0
-5837 11239 -17738 0
-5839 11241 -17738 0
-5841 11243 -17738 0
-5843 11245 -17738 0
-5845 11247 -17738 0
-5847 11249 -17738 0
-5849 11251 -17738 0
5848 -11250 -17738 0
-11237 -5835 17738 0
-11239 -5837 17738 0
-11241 -5839 17738 0
-11243 -5841 17738 0
-11245 -5843 17738 0
-11247 -5845 17738 0
-11249 -5847 17738 0
-11251 -5849 17738 0
11250 5848 17738 0
c ((max_left_00004_00007_00006=max_left_00004_00007_00007)=tv=SATLiteral(17739))
-5835 5850 -17739 0
-5837 5852 -17739 0
-5839 5854 -17739 0
-5841 5856 -17739 0
-5843 5858 -17739 0
-5845 5860 -17739 0
-5847 5862 -17739 0
-5849 5864 -17739 0
5848 -5863 -17739 0
-5850 5835 -17739 0
-5852 5837 -17739 0
-5854 5839 -17739 0
-5856 5841 -17739 0
-5858 5843 -17739 0
-5860 5845 -17739 0
-5862 5847 -17739 0
-5864 5849 -17739 0
5863 -5848 -17739 0
-5835 -5850 17739 0
-5837 -5852 17739 0
-5839 -5854 17739 0
-5841 -5856 17739 0
-5843 -5858 17739 0
-5845 -5860 17739 0
-5847 -5862 17739 0
-5849 -5864 17739 0
5848 5863 17739 0
c ((variant_fields_00004_00007_00007=max_left_00004_00007_00007)=tv=SATLiteral(17740))
-11252 5850 -17740 0
-11254 5852 -17740 0
-11256 5854 -17740 0
-11258 5856 -17740 0
-11260 5858 -17740 0
-11262 5860 -17740 0
-11264 5862 -17740 0
-11266 5864 -17740 0
11265 -5863 -17740 0
-5850 11252 -17740 0
-5852 11254 -17740 0
-5854 11256 -17740 0
-5856 11258 -17740 0
-5858 11260 -17740 0
-5860 11262 -17740 0
-5862 11264 -17740 0
-5864 11266 -17740 0
5863 -11265 -17740 0
-11252 -5850 17740 0
-11254 -5852 17740 0
-11256 -5854 17740 0
-11258 -5856 17740 0
-11260 -5858 17740 0
-11262 -5860 17740 0
-11264 -5862 17740 0
-11266 -5864 17740 0
11265 5863 17740 0
c ((max_left_00004_00007_00007=max_left_00004_00007_00008)=tv=SATLiteral(17741))
-5850 5865 -17741 0
-5852 5867 -17741 0
-5854 5869 -17741 0
-5856 5871 -17741 0
-5858 5873 -17741 0
-5860 5875 -17741 0
-5862 5877 -17741 0
-5864 5879 -17741 0
5863 -5878 -17741 0
-5865 5850 -17741 0
-5867 5852 -17741 0
-5869 5854 -17741 0
-5871 5856 -17741 0
-5873 5858 -17741 0
-5875 5860 -17741 0
-5877 5862 -17741 0
-5879 5864 -17741 0
5878 -5863 -17741 0
-5850 -5865 17741 0
-5852 -5867 17741 0
-5854 -5869 17741 0
-5856 -5871 17741 0
-5858 -5873 17741 0
-5860 -5875 17741 0
-5862 -5877 17741 0
-5864 -5879 17741 0
5863 5878 17741 0
c ((variant_fields_00004_00007_00008=max_left_00004_00007_00008)=tv=SATLiteral(17742))
-11267 5865 -17742 0
-11269 5867 -17742 0
-11271 5869 -17742 0
-11273 5871 -17742 0
-11275 5873 -17742 0
-11277 5875 -17742 0
-11279 5877 -17742 0
-11281 5879 -17742 0
11280 -5878 -17742 0
-5865 11267 -17742 0
-5867 11269 -17742 0
-5869 11271 -17742 0
-5871 11273 -17742 0
-5873 11275 -17742 0
-5875 11277 -17742 0
-5877 11279 -17742 0
-5879 11281 -17742 0
5878 -11280 -17742 0
-11267 -5865 17742 0
-11269 -5867 17742 0
-11271 -5869 17742 0
-11273 -5871 17742 0
-11275 -5873 17742 0
-11277 -5875 17742 0
-11279 -5877 17742 0
-11281 -5879 17742 0
11280 5878 17742 0
c ((max_left_00004_00007_00008=max_left_00004_00007_00009)=tv=SATLiteral(17743))
-5865 5880 -17743 0
-5867 5882 -17743 0
-5869 5884 -17743 0
-5871 5886 -17743 0
-5873 5888 -17743 0
-5875 5890 -17743 0
-5877 5892 -17743 0
-5879 5894 -17743 0
5878 -5893 -17743 0
-5880 5865 -17743 0
-5882 5867 -17743 0
-5884 5869 -17743 0
-5886 5871 -17743 0
-5888 5873 -17743 0
-5890 5875 -17743 0
-5892 5877 -17743 0
-5894 5879 -17743 0
5893 -5878 -17743 0
-5865 -5880 17743 0
-5867 -5882 17743 0
-5869 -5884 17743 0
-5871 -5886 17743 0
-5873 -5888 17743 0
-5875 -5890 17743 0
-5877 -5892 17743 0
-5879 -5894 17743 0
5878 5893 17743 0
c ((variant_fields_00004_00007_00009=max_left_00004_00007_00009)=tv=SATLiteral(17744))
-11282 5880 -17744 0
-11284 5882 -17744 0
-11286 5884 -17744 0
-11288 5886 -17744 0
-11290 5888 -17744 0
-11292 5890 -17744 0
-11294 5892 -17744 0
-11296 5894 -17744 0
11295 -5893 -17744 0
-5880 11282 -17744 0
-5882 11284 -17744 0
-5884 11286 -17744 0
-5886 11288 -17744 0
-5888 11290 -17744 0
-5890 11292 -17744 0
-5892 11294 -17744 0
-5894 11296 -17744 0
5893 -11295 -17744 0
-11282 -5880 17744 0
-11284 -5882 17744 0
-11286 -5884 17744 0
-11288 -5886 17744 0
-11290 -5888 17744 0
-11292 -5890 17744 0
-11294 -5892 17744 0
-11296 -5894 17744 0
11295 5893 17744 0
c ((max_left_00004_00008_00001=max_left_00004_00008_00002)=tv=SATLiteral(17745))
-5896 5911 -17745 0
-5898 5913 -17745 0
-5900 5915 -17745 0
-5902 5917 -17745 0
-5904 5919 -17745 0
-5906 5921 -17745 0
-5908 5923 -17745 0
-5910 5925 -17745 0
5909 -5924 -17745 0
-5911 5896 -17745 0
-5913 5898 -17745 0
-5915 5900 -17745 0
-5917 5902 -17745 0
-5919 5904 -17745 0
-5921 5906 -17745 0
-5923 5908 -17745 0
-5925 5910 -17745 0
5924 -5909 -17745 0
-5896 -5911 17745 0
-5898 -5913 17745 0
-5900 -5915 17745 0
-5902 -5917 17745 0
-5904 -5919 17745 0
-5906 -5921 17745 0
-5908 -5923 17745 0
-5910 -5925 17745 0
5909 5924 17745 0
c ((variant_fields_00004_00008_00002=max_left_00004_00008_00002)=tv=SATLiteral(17746))
-11312 5911 -17746 0
-11314 5913 -17746 0
-11316 5915 -17746 0
-11318 5917 -17746 0
-11320 5919 -17746 0
-11322 5921 -17746 0
-11324 5923 -17746 0
-11326 5925 -17746 0
11325 -5924 -17746 0
-5911 11312 -17746 0
-5913 11314 -17746 0
-5915 11316 -17746 0
-5917 11318 -17746 0
-5919 11320 -17746 0
-5921 11322 -17746 0
-5923 11324 -17746 0
-5925 11326 -17746 0
5924 -11325 -17746 0
-11312 -5911 17746 0
-11314 -5913 17746 0
-11316 -5915 17746 0
-11318 -5917 17746 0
-11320 -5919 17746 0
-11322 -5921 17746 0
-11324 -5923 17746 0
-11326 -5925 17746 0
11325 5924 17746 0
c ((max_left_00004_00008_00002=max_left_00004_00008_00003)=tv=SATLiteral(17747))
-5911 5926 -17747 0
-5913 5928 -17747 0
-5915 5930 -17747 0
-5917 5932 -17747 0
-5919 5934 -17747 0
-5921 5936 -17747 0
-5923 5938 -17747 0
-5925 5940 -17747 0
5924 -5939 -17747 0
-5926 5911 -17747 0
-5928 5913 -17747 0
-5930 5915 -17747 0
-5932 5917 -17747 0
-5934 5919 -17747 0
-5936 5921 -17747 0
-5938 5923 -17747 0
-5940 5925 -17747 0
5939 -5924 -17747 0
-5911 -5926 17747 0
-5913 -5928 17747 0
-5915 -5930 17747 0
-5917 -5932 17747 0
-5919 -5934 17747 0
-5921 -5936 17747 0
-5923 -5938 17747 0
-5925 -5940 17747 0
5924 5939 17747 0
c ((variant_fields_00004_00008_00003=max_left_00004_00008_00003)=tv=SATLiteral(17748))
-11327 5926 -17748 0
-11329 5928 -17748 0
-11331 5930 -17748 0
-11333 5932 -17748 0
-11335 5934 -17748 0
-11337 5936 -17748 0
-11339 5938 -17748 0
-11341 5940 -17748 0
11340 -5939 -17748 0
-5926 11327 -17748 0
-5928 11329 -17748 0
-5930 11331 -17748 0
-5932 11333 -17748 0
-5934 11335 -17748 0
-5936 11337 -17748 0
-5938 11339 -17748 0
-5940 11341 -17748 0
5939 -11340 -17748 0
-11327 -5926 17748 0
-11329 -5928 17748 0
-11331 -5930 17748 0
-11333 -5932 17748 0
-11335 -5934 17748 0
-11337 -5936 17748 0
-11339 -5938 17748 0
-11341 -5940 17748 0
11340 5939 17748 0
c ((max_left_00004_00008_00003=max_left_00004_00008_00004)=tv=SATLiteral(17749))
-5926 5941 -17749 0
-5928 5943 -17749 0
-5930 5945 -17749 0
-5932 5947 -17749 0
-5934 5949 -17749 0
-5936 5951 -17749 0
-5938 5953 -17749 0
-5940 5955 -17749 0
5939 -5954 -17749 0
-5941 5926 -17749 0
-5943 5928 -17749 0
-5945 5930 -17749 0
-5947 5932 -17749 0
-5949 5934 -17749 0
-5951 5936 -17749 0
-5953 5938 -17749 0
-5955 5940 -17749 0
5954 -5939 -17749 0
-5926 -5941 17749 0
-5928 -5943 17749 0
-5930 -5945 17749 0
-5932 -5947 17749 0
-5934 -5949 17749 0
-5936 -5951 17749 0
-5938 -5953 17749 0
-5940 -5955 17749 0
5939 5954 17749 0
c ((variant_fields_00004_00008_00004=max_left_00004_00008_00004)=tv=SATLiteral(17750))
-11342 5941 -17750 0
-11344 5943 -17750 0
-11346 5945 -17750 0
-11348 5947 -17750 0
-11350 5949 -17750 0
-11352 5951 -17750 0
-11354 5953 -17750 0
-11356 5955 -17750 0
11355 -5954 -17750 0
-5941 11342 -17750 0
-5943 11344 -17750 0
-5945 11346 -17750 0
-5947 11348 -17750 0
-5949 11350 -17750 0
-5951 11352 -17750 0
-5953 11354 -17750 0
-5955 11356 -17750 0
5954 -11355 -17750 0
-11342 -5941 17750 0
-11344 -5943 17750 0
-11346 -5945 17750 0
-11348 -5947 17750 0
-11350 -5949 17750 0
-11352 -5951 17750 0
-11354 -5953 17750 0
-11356 -5955 17750 0
11355 5954 17750 0
c ((max_left_00004_00008_00004=max_left_00004_00008_00005)=tv=SATLiteral(17751))
-5941 5956 -17751 0
-5943 5958 -17751 0
-5945 5960 -17751 0
-5947 5962 -17751 0
-5949 5964 -17751 0
-5951 5966 -17751 0
-5953 5968 -17751 0
-5955 5970 -17751 0
5954 -5969 -17751 0
-5956 5941 -17751 0
-5958 5943 -17751 0
-5960 5945 -17751 0
-5962 5947 -17751 0
-5964 5949 -17751 0
-5966 5951 -17751 0
-5968 5953 -17751 0
-5970 5955 -17751 0
5969 -5954 -17751 0
-5941 -5956 17751 0
-5943 -5958 17751 0
-5945 -5960 17751 0
-5947 -5962 17751 0
-5949 -5964 17751 0
-5951 -5966 17751 0
-5953 -5968 17751 0
-5955 -5970 17751 0
5954 5969 17751 0
c ((variant_fields_00004_00008_00005=max_left_00004_00008_00005)=tv=SATLiteral(17752))
-11357 5956 -17752 0
-11359 5958 -17752 0
-11361 5960 -17752 0
-11363 5962 -17752 0
-11365 5964 -17752 0
-11367 5966 -17752 0
-11369 5968 -17752 0
-11371 5970 -17752 0
11370 -5969 -17752 0
-5956 11357 -17752 0
-5958 11359 -17752 0
-5960 11361 -17752 0
-5962 11363 -17752 0
-5964 11365 -17752 0
-5966 11367 -17752 0
-5968 11369 -17752 0
-5970 11371 -17752 0
5969 -11370 -17752 0
-11357 -5956 17752 0
-11359 -5958 17752 0
-11361 -5960 17752 0
-11363 -5962 17752 0
-11365 -5964 17752 0
-11367 -5966 17752 0
-11369 -5968 17752 0
-11371 -5970 17752 0
11370 5969 17752 0
c ((max_left_00004_00008_00005=max_left_00004_00008_00006)=tv=SATLiteral(17753))
-5956 5971 -17753 0
-5958 5973 -17753 0
-5960 5975 -17753 0
-5962 5977 -17753 0
-5964 5979 -17753 0
-5966 5981 -17753 0
-5968 5983 -17753 0
-5970 5985 -17753 0
5969 -5984 -17753 0
-5971 5956 -17753 0
-5973 5958 -17753 0
-5975 5960 -17753 0
-5977 5962 -17753 0
-5979 5964 -17753 0
-5981 5966 -17753 0
-5983 5968 -17753 0
-5985 5970 -17753 0
5984 -5969 -17753 0
-5956 -5971 17753 0
-5958 -5973 17753 0
-5960 -5975 17753 0
-5962 -5977 17753 0
-5964 -5979 17753 0
-5966 -5981 17753 0
-5968 -5983 17753 0
-5970 -5985 17753 0
5969 5984 17753 0
c ((variant_fields_00004_00008_00006=max_left_00004_00008_00006)=tv=SATLiteral(17754))
-11372 5971 -17754 0
-11374 5973 -17754 0
-11376 5975 -17754 0
-11378 5977 -17754 0
-11380 5979 -17754 0
-11382 5981 -17754 0
-11384 5983 -17754 0
-11386 5985 -17754 0
11385 -5984 -17754 0
-5971 11372 -17754 0
-5973 11374 -17754 0
-5975 11376 -17754 0
-5977 11378 -17754 0
-5979 11380 -17754 0
-5981 11382 -17754 0
-5983 11384 -17754 0
-5985 11386 -17754 0
5984 -11385 -17754 0
-11372 -5971 17754 0
-11374 -5973 17754 0
-11376 -5975 17754 0
-11378 -5977 17754 0
-11380 -5979 17754 0
-11382 -5981 17754 0
-11384 -5983 17754 0
-11386 -5985 17754 0
11385 5984 17754 0
c ((max_left_00004_00008_00006=max_left_00004_00008_00007)=tv=SATLiteral(17755))
-5971 5986 -17755 0
-5973 5988 -17755 0
-5975 5990 -17755 0
-5977 5992 -17755 0
-5979 5994 -17755 0
-5981 5996 -17755 0
-5983 5998 -17755 0
-5985 6000 -17755 0
5984 -5999 -17755 0
-5986 5971 -17755 0
-5988 5973 -17755 0
-5990 5975 -17755 0
-5992 5977 -17755 0
-5994 5979 -17755 0
-5996 5981 -17755 0
-5998 5983 -17755 0
-6000 5985 -17755 0
5999 -5984 -17755 0
-5971 -5986 17755 0
-5973 -5988 17755 0
-5975 -5990 17755 0
-5977 -5992 17755 0
-5979 -5994 17755 0
-5981 -5996 17755 0
-5983 -5998 17755 0
-5985 -6000 17755 0
5984 5999 17755 0
c ((variant_fields_00004_00008_00007=max_left_00004_00008_00007)=tv=SATLiteral(17756))
-11387 5986 -17756 0
-11389 5988 -17756 0
-11391 5990 -17756 0
-11393 5992 -17756 0
-11395 5994 -17756 0
-11397 5996 -17756 0
-11399 5998 -17756 0
-11401 6000 -17756 0
11400 -5999 -17756 0
-5986 11387 -17756 0
-5988 11389 -17756 0
-5990 11391 -17756 0
-5992 11393 -17756 0
-5994 11395 -17756 0
-5996 11397 -17756 0
-5998 11399 -17756 0
-6000 11401 -17756 0
5999 -11400 -17756 0
-11387 -5986 17756 0
-11389 -5988 17756 0
-11391 -5990 17756 0
-11393 -5992 17756 0
-11395 -5994 17756 0
-11397 -5996 17756 0
-11399 -5998 17756 0
-11401 -6000 17756 0
11400 5999 17756 0
c ((max_left_00004_00008_00007=max_left_00004_00008_00008)=tv=SATLiteral(17757))
-5986 6001 -17757 0
-5988 6003 -17757 0
-5990 6005 -17757 0
-5992 6007 -17757 0
-5994 6009 -17757 0
-5996 6011 -17757 0
-5998 6013 -17757 0
-6000 6015 -17757 0
5999 -6014 -17757 0
-6001 5986 -17757 0
-6003 5988 -17757 0
-6005 5990 -17757 0
-6007 5992 -17757 0
-6009 5994 -17757 0
-6011 5996 -17757 0
-6013 5998 -17757 0
-6015 6000 -17757 0
6014 -5999 -17757 0
-5986 -6001 17757 0
-5988 -6003 17757 0
-5990 -6005 17757 0
-5992 -6007 17757 0
-5994 -6009 17757 0
-5996 -6011 17757 0
-5998 -6013 17757 0
-6000 -6015 17757 0
5999 6014 17757 0
c ((variant_fields_00004_00008_00008=max_left_00004_00008_00008)=tv=SATLiteral(17758))
-11402 6001 -17758 0
-11404 6003 -17758 0
-11406 6005 -17758 0
-11408 6007 -17758 0
-11410 6009 -17758 0
-11412 6011 -17758 0
-11414 6013 -17758 0
-11416 6015 -17758 0
11415 -6014 -17758 0
-6001 11402 -17758 0
-6003 11404 -17758 0
-6005 11406 -17758 0
-6007 11408 -17758 0
-6009 11410 -17758 0
-6011 11412 -17758 0
-6013 11414 -17758 0
-6015 11416 -17758 0
6014 -11415 -17758 0
-11402 -6001 17758 0
-11404 -6003 17758 0
-11406 -6005 17758 0
-11408 -6007 17758 0
-11410 -6009 17758 0
-11412 -6011 17758 0
-11414 -6013 17758 0
-11416 -6015 17758 0
11415 6014 17758 0
c ((max_left_00004_00008_00008=max_left_00004_00008_00009)=tv=SATLiteral(17759))
-6001 6016 -17759 0
-6003 6018 -17759 0
-6005 6020 -17759 0
-6007 6022 -17759 0
-6009 6024 -17759 0
-6011 6026 -17759 0
-6013 6028 -17759 0
-6015 6030 -17759 0
6014 -6029 -17759 0
-6016 6001 -17759 0
-6018 6003 -17759 0
-6020 6005 -17759 0
-6022 6007 -17759 0
-6024 6009 -17759 0
-6026 6011 -17759 0
-6028 6013 -17759 0
-6030 6015 -17759 0
6029 -6014 -17759 0
-6001 -6016 17759 0
-6003 -6018 17759 0
-6005 -6020 17759 0
-6007 -6022 17759 0
-6009 -6024 17759 0
-6011 -6026 17759 0
-6013 -6028 17759 0
-6015 -6030 17759 0
6014 6029 17759 0
c ((variant_fields_00004_00008_00009=max_left_00004_00008_00009)=tv=SATLiteral(17760))
-11417 6016 -17760 0
-11419 6018 -17760 0
-11421 6020 -17760 0
-11423 6022 -17760 0
-11425 6024 -17760 0
-11427 6026 -17760 0
-11429 6028 -17760 0
-11431 6030 -17760 0
11430 -6029 -17760 0
-6016 11417 -17760 0
-6018 11419 -17760 0
-6020 11421 -17760 0
-6022 11423 -17760 0
-6024 11425 -17760 0
-6026 11427 -17760 0
-6028 11429 -17760 0
-6030 11431 -17760 0
6029 -11430 -17760 0
-11417 -6016 17760 0
-11419 -6018 17760 0
-11421 -6020 17760 0
-11423 -6022 17760 0
-11425 -6024 17760 0
-11427 -6026 17760 0
-11429 -6028 17760 0
-11431 -6030 17760 0
11430 6029 17760 0
c ((max_left_00004_00009_00001=max_left_00004_00009_00002)=tv=SATLiteral(17761))
-6032 6047 -17761 0
-6034 6049 -17761 0
-6036 6051 -17761 0
-6038 6053 -17761 0
-6040 6055 -17761 0
-6042 6057 -17761 0
-6044 6059 -17761 0
-6046 6061 -17761 0
6045 -6060 -17761 0
-6047 6032 -17761 0
-6049 6034 -17761 0
-6051 6036 -17761 0
-6053 6038 -17761 0
-6055 6040 -17761 0
-6057 6042 -17761 0
-6059 6044 -17761 0
-6061 6046 -17761 0
6060 -6045 -17761 0
-6032 -6047 17761 0
-6034 -6049 17761 0
-6036 -6051 17761 0
-6038 -6053 17761 0
-6040 -6055 17761 0
-6042 -6057 17761 0
-6044 -6059 17761 0
-6046 -6061 17761 0
6045 6060 17761 0
c ((variant_fields_00004_00009_00002=max_left_00004_00009_00002)=tv=SATLiteral(17762))
-11447 6047 -17762 0
-11449 6049 -17762 0
-11451 6051 -17762 0
-11453 6053 -17762 0
-11455 6055 -17762 0
-11457 6057 -17762 0
-11459 6059 -17762 0
-11461 6061 -17762 0
11460 -6060 -17762 0
-6047 11447 -17762 0
-6049 11449 -17762 0
-6051 11451 -17762 0
-6053 11453 -17762 0
-6055 11455 -17762 0
-6057 11457 -17762 0
-6059 11459 -17762 0
-6061 11461 -17762 0
6060 -11460 -17762 0
-11447 -6047 17762 0
-11449 -6049 17762 0
-11451 -6051 17762 0
-11453 -6053 17762 0
-11455 -6055 17762 0
-11457 -6057 17762 0
-11459 -6059 17762 0
-11461 -6061 17762 0
11460 6060 17762 0
c ((max_left_00004_00009_00002=max_left_00004_00009_00003)=tv=SATLiteral(17763))
-6047 6062 -17763 0
-6049 6064 -17763 0
-6051 6066 -17763 0
-6053 6068 -17763 0
-6055 6070 -17763 0
-6057 6072 -17763 0
-6059 6074 -17763 0
-6061 6076 -17763 0
6060 -6075 -17763 0
-6062 6047 -17763 0
-6064 6049 -17763 0
-6066 6051 -17763 0
-6068 6053 -17763 0
-6070 6055 -17763 0
-6072 6057 -17763 0
-6074 6059 -17763 0
-6076 6061 -17763 0
6075 -6060 -17763 0
-6047 -6062 17763 0
-6049 -6064 17763 0
-6051 -6066 17763 0
-6053 -6068 17763 0
-6055 -6070 17763 0
-6057 -6072 17763 0
-6059 -6074 17763 0
-6061 -6076 17763 0
6060 6075 17763 0
c ((variant_fields_00004_00009_00003=max_left_00004_00009_00003)=tv=SATLiteral(17764))
-11462 6062 -17764 0
-11464 6064 -17764 0
-11466 6066 -17764 0
-11468 6068 -17764 0
-11470 6070 -17764 0
-11472 6072 -17764 0
-11474 6074 -17764 0
-11476 6076 -17764 0
11475 -6075 -17764 0
-6062 11462 -17764 0
-6064 11464 -17764 0
-6066 11466 -17764 0
-6068 11468 -17764 0
-6070 11470 -17764 0
-6072 11472 -17764 0
-6074 11474 -17764 0
-6076 11476 -17764 0
6075 -11475 -17764 0
-11462 -6062 17764 0
-11464 -6064 17764 0
-11466 -6066 17764 0
-11468 -6068 17764 0
-11470 -6070 17764 0
-11472 -6072 17764 0
-11474 -6074 17764 0
-11476 -6076 17764 0
11475 6075 17764 0
c ((max_left_00004_00009_00003=max_left_00004_00009_00004)=tv=SATLiteral(17765))
-6062 6077 -17765 0
-6064 6079 -17765 0
-6066 6081 -17765 0
-6068 6083 -17765 0
-6070 6085 -17765 0
-6072 6087 -17765 0
-6074 6089 -17765 0
-6076 6091 -17765 0
6075 -6090 -17765 0
-6077 6062 -17765 0
-6079 6064 -17765 0
-6081 6066 -17765 0
-6083 6068 -17765 0
-6085 6070 -17765 0
-6087 6072 -17765 0
-6089 6074 -17765 0
-6091 6076 -17765 0
6090 -6075 -17765 0
-6062 -6077 17765 0
-6064 -6079 17765 0
-6066 -6081 17765 0
-6068 -6083 17765 0
-6070 -6085 17765 0
-6072 -6087 17765 0
-6074 -6089 17765 0
-6076 -6091 17765 0
6075 6090 17765 0
c ((variant_fields_00004_00009_00004=max_left_00004_00009_00004)=tv=SATLiteral(17766))
-11477 6077 -17766 0
-11479 6079 -17766 0
-11481 6081 -17766 0
-11483 6083 -17766 0
-11485 6085 -17766 0
-11487 6087 -17766 0
-11489 6089 -17766 0
-11491 6091 -17766 0
11490 -6090 -17766 0
-6077 11477 -17766 0
-6079 11479 -17766 0
-6081 11481 -17766 0
-6083 11483 -17766 0
-6085 11485 -17766 0
-6087 11487 -17766 0
-6089 11489 -17766 0
-6091 11491 -17766 0
6090 -11490 -17766 0
-11477 -6077 17766 0
-11479 -6079 17766 0
-11481 -6081 17766 0
-11483 -6083 17766 0
-11485 -6085 17766 0
-11487 -6087 17766 0
-11489 -6089 17766 0
-11491 -6091 17766 0
11490 6090 17766 0
c ((max_left_00004_00009_00004=max_left_00004_00009_00005)=tv=SATLiteral(17767))
-6077 6092 -17767 0
-6079 6094 -17767 0
-6081 6096 -17767 0
-6083 6098 -17767 0
-6085 6100 -17767 0
-6087 6102 -17767 0
-6089 6104 -17767 0
-6091 6106 -17767 0
6090 -6105 -17767 0
-6092 6077 -17767 0
-6094 6079 -17767 0
-6096 6081 -17767 0
-6098 6083 -17767 0
-6100 6085 -17767 0
-6102 6087 -17767 0
-6104 6089 -17767 0
-6106 6091 -17767 0
6105 -6090 -17767 0
-6077 -6092 17767 0
-6079 -6094 17767 0
-6081 -6096 17767 0
-6083 -6098 17767 0
-6085 -6100 17767 0
-6087 -6102 17767 0
-6089 -6104 17767 0
-6091 -6106 17767 0
6090 6105 17767 0
c ((variant_fields_00004_00009_00005=max_left_00004_00009_00005)=tv=SATLiteral(17768))
-11492 6092 -17768 0
-11494 6094 -17768 0
-11496 6096 -17768 0
-11498 6098 -17768 0
-11500 6100 -17768 0
-11502 6102 -17768 0
-11504 6104 -17768 0
-11506 6106 -17768 0
11505 -6105 -17768 0
-6092 11492 -17768 0
-6094 11494 -17768 0
-6096 11496 -17768 0
-6098 11498 -17768 0
-6100 11500 -17768 0
-6102 11502 -17768 0
-6104 11504 -17768 0
-6106 11506 -17768 0
6105 -11505 -17768 0
-11492 -6092 17768 0
-11494 -6094 17768 0
-11496 -6096 17768 0
-11498 -6098 17768 0
-11500 -6100 17768 0
-11502 -6102 17768 0
-11504 -6104 17768 0
-11506 -6106 17768 0
11505 6105 17768 0
c ((max_left_00004_00009_00005=max_left_00004_00009_00006)=tv=SATLiteral(17769))
-6092 6107 -17769 0
-6094 6109 -17769 0
-6096 6111 -17769 0
-6098 6113 -17769 0
-6100 6115 -17769 0
-6102 6117 -17769 0
-6104 6119 -17769 0
-6106 6121 -17769 0
6105 -6120 -17769 0
-6107 6092 -17769 0
-6109 6094 -17769 0
-6111 6096 -17769 0
-6113 6098 -17769 0
-6115 6100 -17769 0
-6117 6102 -17769 0
-6119 6104 -17769 0
-6121 6106 -17769 0
6120 -6105 -17769 0
-6092 -6107 17769 0
-6094 -6109 17769 0
-6096 -6111 17769 0
-6098 -6113 17769 0
-6100 -6115 17769 0
-6102 -6117 17769 0
-6104 -6119 17769 0
-6106 -6121 17769 0
6105 6120 17769 0
c ((variant_fields_00004_00009_00006=max_left_00004_00009_00006)=tv=SATLiteral(17770))
-11507 6107 -17770 0
-11509 6109 -17770 0
-11511 6111 -17770 0
-11513 6113 -17770 0
-11515 6115 -17770 0
-11517 6117 -17770 0
-11519 6119 -17770 0
-11521 6121 -17770 0
11520 -6120 -17770 0
-6107 11507 -17770 0
-6109 11509 -17770 0
-6111 11511 -17770 0
-6113 11513 -17770 0
-6115 11515 -17770 0
-6117 11517 -17770 0
-6119 11519 -17770 0
-6121 11521 -17770 0
6120 -11520 -17770 0
-11507 -6107 17770 0
-11509 -6109 17770 0
-11511 -6111 17770 0
-11513 -6113 17770 0
-11515 -6115 17770 0
-11517 -6117 17770 0
-11519 -6119 17770 0
-11521 -6121 17770 0
11520 6120 17770 0
c ((max_left_00004_00009_00006=max_left_00004_00009_00007)=tv=SATLiteral(17771))
-6107 6122 -17771 0
-6109 6124 -17771 0
-6111 6126 -17771 0
-6113 6128 -17771 0
-6115 6130 -17771 0
-6117 6132 -17771 0
-6119 6134 -17771 0
-6121 6136 -17771 0
6120 -6135 -17771 0
-6122 6107 -17771 0
-6124 6109 -17771 0
-6126 6111 -17771 0
-6128 6113 -17771 0
-6130 6115 -17771 0
-6132 6117 -17771 0
-6134 6119 -17771 0
-6136 6121 -17771 0
6135 -6120 -17771 0
-6107 -6122 17771 0
-6109 -6124 17771 0
-6111 -6126 17771 0
-6113 -6128 17771 0
-6115 -6130 17771 0
-6117 -6132 17771 0
-6119 -6134 17771 0
-6121 -6136 17771 0
6120 6135 17771 0
c ((variant_fields_00004_00009_00007=max_left_00004_00009_00007)=tv=SATLiteral(17772))
-11522 6122 -17772 0
-11524 6124 -17772 0
-11526 6126 -17772 0
-11528 6128 -17772 0
-11530 6130 -17772 0
-11532 6132 -17772 0
-11534 6134 -17772 0
-11536 6136 -17772 0
11535 -6135 -17772 0
-6122 11522 -17772 0
-6124 11524 -17772 0
-6126 11526 -17772 0
-6128 11528 -17772 0
-6130 11530 -17772 0
-6132 11532 -17772 0
-6134 11534 -17772 0
-6136 11536 -17772 0
6135 -11535 -17772 0
-11522 -6122 17772 0
-11524 -6124 17772 0
-11526 -6126 17772 0
-11528 -6128 17772 0
-11530 -6130 17772 0
-11532 -6132 17772 0
-11534 -6134 17772 0
-11536 -6136 17772 0
11535 6135 17772 0
c ((max_left_00004_00009_00007=max_left_00004_00009_00008)=tv=SATLiteral(17773))
-6122 6137 -17773 0
-6124 6139 -17773 0
-6126 6141 -17773 0
-6128 6143 -17773 0
-6130 6145 -17773 0
-6132 6147 -17773 0
-6134 6149 -17773 0
-6136 6151 -17773 0
6135 -6150 -17773 0
-6137 6122 -17773 0
-6139 6124 -17773 0
-6141 6126 -17773 0
-6143 6128 -17773 0
-6145 6130 -17773 0
-6147 6132 -17773 0
-6149 6134 -17773 0
-6151 6136 -17773 0
6150 -6135 -17773 0
-6122 -6137 17773 0
-6124 -6139 17773 0
-6126 -6141 17773 0
-6128 -6143 17773 0
-6130 -6145 17773 0
-6132 -6147 17773 0
-6134 -6149 17773 0
-6136 -6151 17773 0
6135 6150 17773 0
c ((variant_fields_00004_00009_00008=max_left_00004_00009_00008)=tv=SATLiteral(17774))
-11537 6137 -17774 0
-11539 6139 -17774 0
-11541 6141 -17774 0
-11543 6143 -17774 0
-11545 6145 -17774 0
-11547 6147 -17774 0
-11549 6149 -17774 0
-11551 6151 -17774 0
11550 -6150 -17774 0
-6137 11537 -17774 0
-6139 11539 -17774 0
-6141 11541 -17774 0
-6143 11543 -17774 0
-6145 11545 -17774 0
-6147 11547 -17774 0
-6149 11549 -17774 0
-6151 11551 -17774 0
6150 -11550 -17774 0
-11537 -6137 17774 0
-11539 -6139 17774 0
-11541 -6141 17774 0
-11543 -6143 17774 0
-11545 -6145 17774 0
-11547 -6147 17774 0
-11549 -6149 17774 0
-11551 -6151 17774 0
11550 6150 17774 0
c ((max_left_00004_00009_00008=max_left_00004_00009_00009)=tv=SATLiteral(17775))
-6137 6152 -17775 0
-6139 6154 -17775 0
-6141 6156 -17775 0
-6143 6158 -17775 0
-6145 6160 -17775 0
-6147 6162 -17775 0
-6149 6164 -17775 0
-6151 6166 -17775 0
6150 -6165 -17775 0
-6152 6137 -17775 0
-6154 6139 -17775 0
-6156 6141 -17775 0
-6158 6143 -17775 0
-6160 6145 -17775 0
-6162 6147 -17775 0
-6164 6149 -17775 0
-6166 6151 -17775 0
6165 -6150 -17775 0
-6137 -6152 17775 0
-6139 -6154 17775 0
-6141 -6156 17775 0
-6143 -6158 17775 0
-6145 -6160 17775 0
-6147 -6162 17775 0
-6149 -6164 17775 0
-6151 -6166 17775 0
6150 6165 17775 0
c ((variant_fields_00004_00009_00009=max_left_00004_00009_00009)=tv=SATLiteral(17776))
-11552 6152 -17776 0
-11554 6154 -17776 0
-11556 6156 -17776 0
-11558 6158 -17776 0
-11560 6160 -17776 0
-11562 6162 -17776 0
-11564 6164 -17776 0
-11566 6166 -17776 0
11565 -6165 -17776 0
-6152 11552 -17776 0
-6154 11554 -17776 0
-6156 11556 -17776 0
-6158 11558 -17776 0
-6160 11560 -17776 0
-6162 11562 -17776 0
-6164 11564 -17776 0
-6166 11566 -17776 0
6165 -11565 -17776 0
-11552 -6152 17776 0
-11554 -6154 17776 0
-11556 -6156 17776 0
-11558 -6158 17776 0
-11560 -6160 17776 0
-11562 -6162 17776 0
-11564 -6164 17776 0
-11566 -6166 17776 0
11565 6165 17776 0
c (SATLiteral(11567) <-> SATLiteral(15905))
-11567 15905 0
11567 -15905 0
c (SATLiteral(11575) <-> SATLiteral(15932))
-11575 15932 0
11575 -15932 0
c (SATLiteral(11583) <-> SATLiteral(15959))
-11583 15959 0
11583 -15959 0
c (SATLiteral(11591) <-> SATLiteral(15986))
-11591 15986 0
11591 -15986 0
c (SATLiteral(11599) <-> SATLiteral(16013))
-11599 16013 0
11599 -16013 0
c (SATLiteral(11607) <-> SATLiteral(16040))
-11607 16040 0
11607 -16040 0
c (SATLiteral(11615) <-> SATLiteral(16067))
-11615 16067 0
11615 -16067 0
c (SATLiteral(11623) <-> SATLiteral(16094))
-11623 16094 0
11623 -16094 0
c (SATLiteral(11631) <-> SATLiteral(16121))
-11631 16121 0
11631 -16121 0
c (SATLiteral(11639) <-> SATLiteral(16148))
-11639 16148 0
11639 -16148 0
c (SATLiteral(11647) <-> SATLiteral(16175))
-11647 16175 0
11647 -16175 0
c (SATLiteral(11655) <-> SATLiteral(16202))
-11655 16202 0
11655 -16202 0
c (SATLiteral(11667) <-> SATLiteral(16229))
-11667 16229 0
11667 -16229 0
c (SATLiteral(11671) <-> SATLiteral(16256))
-11671 16256 0
11671 -16256 0
c (SATLiteral(11679) <-> SATLiteral(16283))
-11679 16283 0
11679 -16283 0
c (SATLiteral(11687) <-> SATLiteral(16310))
-11687 16310 0
11687 -16310 0
c (SATLiteral(11695) <-> SATLiteral(16337))
-11695 16337 0
11695 -16337 0
c (SATLiteral(11703) <-> SATLiteral(16364))
-11703 16364 0
11703 -16364 0
c (SATLiteral(11714) <-> SATLiteral(16391))
-11714 16391 0
11714 -16391 0
c (SATLiteral(11722) <-> SATLiteral(16418))
-11722 16418 0
11722 -16418 0
c (SATLiteral(11730) <-> SATLiteral(16445))
-11730 16445 0
11730 -16445 0
c (SATLiteral(11738) <-> SATLiteral(16472))
-11738 16472 0
11738 -16472 0
c (SATLiteral(11746) <-> SATLiteral(16499))
-11746 16499 0
11746 -16499 0
c (SATLiteral(11754) <-> SATLiteral(16526))
-11754 16526 0
11754 -16526 0
c (SATLiteral(11762) <-> SATLiteral(16553))
-11762 16553 0
11762 -16553 0
c (SATLiteral(11770) <-> SATLiteral(16580))
-11770 16580 0
11770 -16580 0
c (SATLiteral(11778) <-> SATLiteral(16607))
-11778 16607 0
11778 -16607 0
c (SATLiteral(11787) <-> SATLiteral(16634))
-11787 16634 0
11787 -16634 0
c (SATLiteral(11795) <-> SATLiteral(16661))
-11795 16661 0
11795 -16661 0
c (SATLiteral(11803) <-> SATLiteral(16688))
-11803 16688 0
11803 -16688 0
c (SATLiteral(11811) <-> SATLiteral(16715))
-11811 16715 0
11811 -16715 0
c (SATLiteral(11819) <-> SATLiteral(16742))
-11819 16742 0
11819 -16742 0
c (SATLiteral(11827) <-> SATLiteral(16769))
-11827 16769 0
11827 -16769 0
c (SATLiteral(11835) <-> SATLiteral(16796))
-11835 16796 0
11835 -16796 0
c (SATLiteral(11843) <-> SATLiteral(16823))
-11843 16823 0
11843 -16823 0
c (SATLiteral(11851) <-> SATLiteral(16850))
-11851 16850 0
11851 -16850 0
c ((max_left_00001_00001_00001<max_left_00001_00001_00002)=tv=SATLiteral(11567))
-1287 -11567 0
1272 -1288 -11567 0
1273 -1290 -11567 0
1275 -1292 -11567 0
1277 -1294 -11567 0
1279 -1296 -11567 0
1281 -1298 -11567 0
1283 -1300 -11567 0
1285 -11567 0
1287 -1272 11567 0
1288 -1273 11567 0
1290 -1275 11567 0
1292 -1277 11567 0
1294 -1279 11567 0
1296 -1281 11567 0
1298 -1283 11567 0
1300 -1285 11567 0
c ((max_left_00001_00001_00002<max_left_00001_00001_00003)=tv=SATLiteral(11568))
-1302 -11568 0
1287 -1303 -11568 0
1288 -1305 -11568 0
1290 -1307 -11568 0
1292 -1309 -11568 0
1294 -1311 -11568 0
1296 -1313 -11568 0
1298 -1315 -11568 0
1300 -11568 0
1302 -1287 11568 0
1303 -1288 11568 0
1305 -1290 11568 0
1307 -1292 11568 0
1309 -1294 11568 0
1311 -1296 11568 0
1313 -1298 11568 0
1315 -1300 11568 0
c ((max_left_00001_00001_00003<max_left_00001_00001_00004)=tv=SATLiteral(11569))
-1317 -11569 0
1302 -1318 -11569 0
1303 -1320 -11569 0
1305 -1322 -11569 0
1307 -1324 -11569 0
1309 -1326 -11569 0
1311 -1328 -11569 0
1313 -1330 -11569 0
1315 -11569 0
1317 -1302 11569 0
1318 -1303 11569 0
1320 -1305 11569 0
1322 -1307 11569 0
1324 -1309 11569 0
1326 -1311 11569 0
1328 -1313 11569 0
1330 -1315 11569 0
c ((max_left_00001_00001_00004<max_left_00001_00001_00005)=tv=SATLiteral(11570))
-1332 -11570 0
1317 -1333 -11570 0
1318 -1335 -11570 0
1320 -1337 -11570 0
1322 -1339 -11570 0
1324 -1341 -11570 0
1326 -1343 -11570 0
1328 -1345 -11570 0
1330 -11570 0
1332 -1317 11570 0
1333 -1318 11570 0
1335 -1320 11570 0
1337 -1322 11570 0
1339 -1324 11570 0
1341 -1326 11570 0
1343 -1328 11570 0
1345 -1330 11570 0
c ((max_left_00001_00001_00005<max_left_00001_00001_00006)=tv=SATLiteral(11571))
-1347 -11571 0
1332 -1348 -11571 0
1333 -1350 -11571 0
1335 -1352 -11571 0
1337 -1354 -11571 0
1339 -1356 -11571 0
1341 -1358 -11571 0
1343 -1360 -11571 0
1345 -11571 0
1347 -1332 11571 0
1348 -1333 11571 0
1350 -1335 11571 0
1352 -1337 11571 0
1354 -1339 11571 0
1356 -1341 11571 0
1358 -1343 11571 0
1360 -1345 11571 0
c ((max_left_00001_00001_00006<max_left_00001_00001_00007)=tv=SATLiteral(11572))
-1362 -11572 0
1347 -1363 -11572 0
1348 -1365 -11572 0
1350 -1367 -11572 0
1352 -1369 -11572 0
1354 -1371 -11572 0
1356 -1373 -11572 0
1358 -1375 -11572 0
1360 -11572 0
1362 -1347 11572 0
1363 -1348 11572 0
1365 -1350 11572 0
1367 -1352 11572 0
1369 -1354 11572 0
1371 -1356 11572 0
1373 -1358 11572 0
1375 -1360 11572 0
c ((max_left_00001_00001_00007<max_left_00001_00001_00008)=tv=SATLiteral(11573))
-1377 -11573 0
1362 -1378 -11573 0
1363 -1380 -11573 0
1365 -1382 -11573 0
1367 -1384 -11573 0
1369 -1386 -11573 0
1371 -1388 -11573 0
1373 -1390 -11573 0
1375 -11573 0
1377 -1362 11573 0
1378 -1363 11573 0
1380 -1365 11573 0
1382 -1367 11573 0
1384 -1369 11573 0
1386 -1371 11573 0
1388 -1373 11573 0
1390 -1375 11573 0
c ((max_left_00001_00001_00008<max_left_00001_00001_00009)=tv=SATLiteral(11574))
-1392 -11574 0
1377 -1393 -11574 0
1378 -1395 -11574 0
1380 -1397 -11574 0
1382 -1399 -11574 0
1384 -1401 -11574 0
1386 -1403 -11574 0
1388 -1405 -11574 0
1390 -11574 0
1392 -1377 11574 0
1393 -1378 11574 0
1395 -1380 11574 0
1397 -1382 11574 0
1399 -1384 11574 0
1401 -1386 11574 0
1403 -1388 11574 0
1405 -1390 11574 0
c ((max_left_00001_00002_00001<max_left_00001_00002_00002)=tv=SATLiteral(11575))
-1423 -11575 0
1408 -1424 -11575 0
1409 -1426 -11575 0
1411 -1428 -11575 0
1413 -1430 -11575 0
1415 -1432 -11575 0
1417 -1434 -11575 0
1419 -1436 -11575 0
1421 -11575 0
1423 -1408 11575 0
1424 -1409 11575 0
1426 -1411 11575 0
1428 -1413 11575 0
1430 -1415 11575 0
1432 -1417 11575 0
1434 -1419 11575 0
1436 -1421 11575 0
c ((max_left_00001_00002_00002<max_left_00001_00002_00003)=tv=SATLiteral(11576))
-1438 -11576 0
1423 -1439 -11576 0
1424 -1441 -11576 0
1426 -1443 -11576 0
1428 -1445 -11576 0
1430 -1447 -11576 0
1432 -1449 -11576 0
1434 -1451 -11576 0
1436 -11576 0
1438 -1423 11576 0
1439 -1424 11576 0
1441 -1426 11576 0
1443 -1428 11576 0
1445 -1430 11576 0
1447 -1432 11576 0
1449 -1434 11576 0
1451 -1436 11576 0
c ((max_left_00001_00002_00003<max_left_00001_00002_00004)=tv=SATLiteral(11577))
-1453 -11577 0
1438 -1454 -11577 0
1439 -1456 -11577 0
1441 -1458 -11577 0
1443 -1460 -11577 0
1445 -1462 -11577 0
1447 -1464 -11577 0
1449 -1466 -11577 0
1451 -11577 0
1453 -1438 11577 0
1454 -1439 11577 0
1456 -1441 11577 0
1458 -1443 11577 0
1460 -1445 11577 0
1462 -1447 11577 0
1464 -1449 11577 0
1466 -1451 11577 0
c ((max_left_00001_00002_00004<max_left_00001_00002_00005)=tv=SATLiteral(11578))
-1468 -11578 0
1453 -1469 -11578 0
1454 -1471 -11578 0
1456 -1473 -11578 0
1458 -1475 -11578 0
1460 -1477 -11578 0
1462 -1479 -11578 0
1464 -1481 -11578 0
1466 -11578 0
1468 -1453 11578 0
1469 -1454 11578 0
1471 -1456 11578 0
1473 -1458 11578 0
1475 -1460 11578 0
1477 -1462 11578 0
1479 -1464 11578 0
1481 -1466 11578 0
c ((max_left_00001_00002_00005<max_left_00001_00002_00006)=tv=SATLiteral(11579))
-1483 -11579 0
1468 -1484 -11579 0
1469 -1486 -11579 0
1471 -1488 -11579 0
1473 -1490 -11579 0
1475 -1492 -11579 0
1477 -1494 -11579 0
1479 -1496 -11579 0
1481 -11579 0
1483 -1468 11579 0
1484 -1469 11579 0
1486 -1471 11579 0
1488 -1473 11579 0
1490 -1475 11579 0
1492 -1477 11579 0
1494 -1479 11579 0
1496 -1481 11579 0
c ((max_left_00001_00002_00006<max_left_00001_00002_00007)=tv=SATLiteral(11580))
-1498 -11580 0
1483 -1499 -11580 0
1484 -1501 -11580 0
1486 -1503 -11580 0
1488 -1505 -11580 0
1490 -1507 -11580 0
1492 -1509 -11580 0
1494 -1511 -11580 0
1496 -11580 0
1498 -1483 11580 0
1499 -1484 11580 0
1501 -1486 11580 0
1503 -1488 11580 0
1505 -1490 11580 0
1507 -1492 11580 0
1509 -1494 11580 0
1511 -1496 11580 0
c ((max_left_00001_00002_00007<max_left_00001_00002_00008)=tv=SATLiteral(11581))
-1513 -11581 0
1498 -1514 -11581 0
1499 -1516 -11581 0
1501 -1518 -11581 0
1503 -1520 -11581 0
1505 -1522 -11581 0
1507 -1524 -11581 0
1509 -1526 -11581 0
1511 -11581 0
1513 -1498 11581 0
1514 -1499 11581 0
1516 -1501 11581 0
1518 -1503 11581 0
1520 -1505 11581 0
1522 -1507 11581 0
1524 -1509 11581 0
1526 -1511 11581 0
c ((max_left_00001_00002_00008<max_left_00001_00002_00009)=tv=SATLiteral(11582))
-1528 -11582 0
1513 -1529 -11582 0
1514 -1531 -11582 0
1516 -1533 -11582 0
1518 -1535 -11582 0
1520 -1537 -11582 0
1522 -1539 -11582 0
1524 -1541 -11582 0
1526 -11582 0
1528 -1513 11582 0
1529 -1514 11582 0
1531 -1516 11582 0
1533 -1518 11582 0
1535 -1520 11582 0
1537 -1522 11582 0
1539 -1524 11582 0
1541 -1526 11582 0
c ((max_left_00001_00003_00001<max_left_00001_00003_00002)=tv=SATLiteral(11583))
-1559 -11583 0
1544 -1560 -11583 0
1545 -1562 -11583 0
1547 -1564 -11583 0
1549 -1566 -11583 0
1551 -1568 -11583 0
1553 -1570 -11583 0
1555 -1572 -11583 0
1557 -11583 0
1559 -1544 11583 0
1560 -1545 11583 0
1562 -1547 11583 0
1564 -1549 11583 0
1566 -1551 11583 0
1568 -1553 11583 0
1570 -1555 11583 0
1572 -1557 11583 0
c ((max_left_00001_00003_00002<max_left_00001_00003_00003)=tv=SATLiteral(11584))
-1574 -11584 0
1559 -1575 -11584 0
1560 -1577 -11584 0
1562 -1579 -11584 0
1564 -1581 -11584 0
1566 -1583 -11584 0
1568 -1585 -11584 0
1570 -1587 -11584 0
1572 -11584 0
1574 -1559 11584 0
1575 -1560 11584 0
1577 -1562 11584 0
1579 -1564 11584 0
1581 -1566 11584 0
1583 -1568 11584 0
1585 -1570 11584 0
1587 -1572 11584 0
c ((max_left_00001_00003_00003<max_left_00001_00003_00004)=tv=SATLiteral(11585))
-1589 -11585 0
1574 -1590 -11585 0
1575 -1592 -11585 0
1577 -1594 -11585 0
1579 -1596 -11585 0
1581 -1598 -11585 0
1583 -1600 -11585 0
1585 -1602 -11585 0
1587 -11585 0
1589 -1574 11585 0
1590 -1575 11585 0
1592 -1577 11585 0
1594 -1579 11585 0
1596 -1581 11585 0
1598 -1583 11585 0
1600 -1585 11585 0
1602 -1587 11585 0
c ((max_left_00001_00003_00004<max_left_00001_00003_00005)=tv=SATLiteral(11586))
-1604 -11586 0
1589 -1605 -11586 0
1590 -1607 -11586 0
1592 -1609 -11586 0
1594 -1611 -11586 0
1596 -1613 -11586 0
1598 -1615 -11586 0
1600 -1617 -11586 0
1602 -11586 0
1604 -1589 11586 0
1605 -1590 11586 0
1607 -1592 11586 0
1609 -1594 11586 0
1611 -1596 11586 0
1613 -1598 11586 0
1615 -1600 11586 0
1617 -1602 11586 0
c ((max_left_00001_00003_00005<max_left_00001_00003_00006)=tv=SATLiteral(11587))
-1619 -11587 0
1604 -1620 -11587 0
1605 -1622 -11587 0
1607 -1624 -11587 0
1609 -1626 -11587 0
1611 -1628 -11587 0
1613 -1630 -11587 0
1615 -1632 -11587 0
1617 -11587 0
1619 -1604 11587 0
1620 -1605 11587 0
1622 -1607 11587 0
1624 -1609 11587 0
1626 -1611 11587 0
1628 -1613 11587 0
1630 -1615 11587 0
1632 -1617 11587 0
c ((max_left_00001_00003_00006<max_left_00001_00003_00007)=tv=SATLiteral(11588))
-1634 -11588 0
1619 -1635 -11588 0
1620 -1637 -11588 0
1622 -1639 -11588 0
1624 -1641 -11588 0
1626 -1643 -11588 0
1628 -1645 -11588 0
1630 -1647 -11588 0
1632 -11588 0
1634 -1619 11588 0
1635 -1620 11588 0
1637 -1622 11588 0
1639 -1624 11588 0
1641 -1626 11588 0
1643 -1628 11588 0
1645 -1630 11588 0
1647 -1632 11588 0
c ((max_left_00001_00003_00007<max_left_00001_00003_00008)=tv=SATLiteral(11589))
-1649 -11589 0
1634 -1650 -11589 0
1635 -1652 -11589 0
1637 -1654 -11589 0
1639 -1656 -11589 0
1641 -1658 -11589 0
1643 -1660 -11589 0
1645 -1662 -11589 0
1647 -11589 0
1649 -1634 11589 0
1650 -1635 11589 0
1652 -1637 11589 0
1654 -1639 11589 0
1656 -1641 11589 0
1658 -1643 11589 0
1660 -1645 11589 0
1662 -1647 11589 0
c ((max_left_00001_00003_00008<max_left_00001_00003_00009)=tv=SATLiteral(11590))
-1664 -11590 0
1649 -1665 -11590 0
1650 -1667 -11590 0
1652 -1669 -11590 0
1654 -1671 -11590 0
1656 -1673 -11590 0
1658 -1675 -11590 0
1660 -1677 -11590 0
1662 -11590 0
1664 -1649 11590 0
1665 -1650 11590 0
1667 -1652 11590 0
1669 -1654 11590 0
1671 -1656 11590 0
1673 -1658 11590 0
1675 -1660 11590 0
1677 -1662 11590 0
c ((max_left_00001_00004_00001<max_left_00001_00004_00002)=tv=SATLiteral(11591))
-1695 -11591 0
1680 -1696 -11591 0
1681 -1698 -11591 0
1683 -1700 -11591 0
1685 -1702 -11591 0
1687 -1704 -11591 0
1689 -1706 -11591 0
1691 -1708 -11591 0
1693 -11591 0
1695 -1680 11591 0
1696 -1681 11591 0
1698 -1683 11591 0
1700 -1685 11591 0
1702 -1687 11591 0
1704 -1689 11591 0
1706 -1691 11591 0
1708 -1693 11591 0
c ((max_left_00001_00004_00002<max_left_00001_00004_00003)=tv=SATLiteral(11592))
-1710 -11592 0
1695 -1711 -11592 0
1696 -1713 -11592 0
1698 -1715 -11592 0
1700 -1717 -11592 0
1702 -1719 -11592 0
1704 -1721 -11592 0
1706 -1723 -11592 0
1708 -11592 0
1710 -1695 11592 0
1711 -1696 11592 0
1713 -1698 11592 0
1715 -1700 11592 0
1717 -1702 11592 0
1719 -1704 11592 0
1721 -1706 11592 0
1723 -1708 11592 0
c ((max_left_00001_00004_00003<max_left_00001_00004_00004)=tv=SATLiteral(11593))
-1725 -11593 0
1710 -1726 -11593 0
1711 -1728 -11593 0
1713 -1730 -11593 0
1715 -1732 -11593 0
1717 -1734 -11593 0
1719 -1736 -11593 0
1721 -1738 -11593 0
1723 -11593 0
1725 -1710 11593 0
1726 -1711 11593 0
1728 -1713 11593 0
1730 -1715 11593 0
1732 -1717 11593 0
1734 -1719 11593 0
1736 -1721 11593 0
1738 -1723 11593 0
c ((max_left_00001_00004_00004<max_left_00001_00004_00005)=tv=SATLiteral(11594))
-1740 -11594 0
1725 -1741 -11594 0
1726 -1743 -11594 0
1728 -1745 -11594 0
1730 -1747 -11594 0
1732 -1749 -11594 0
1734 -1751 -11594 0
1736 -1753 -11594 0
1738 -11594 0
1740 -1725 11594 0
1741 -1726 11594 0
1743 -1728 11594 0
1745 -1730 11594 0
1747 -1732 11594 0
1749 -1734 11594 0
1751 -1736 11594 0
1753 -1738 11594 0
c ((max_left_00001_00004_00005<max_left_00001_00004_00006)=tv=SATLiteral(11595))
-1755 -11595 0
1740 -1756 -11595 0
1741 -1758 -11595 0
1743 -1760 -11595 0
1745 -1762 -11595 0
1747 -1764 -11595 0
1749 -1766 -11595 0
1751 -1768 -11595 0
1753 -11595 0
1755 -1740 11595 0
1756 -1741 11595 0
1758 -1743 11595 0
1760 -1745 11595 0
1762 -1747 11595 0
1764 -1749 11595 0
1766 -1751 11595 0
1768 -1753 11595 0
c ((max_left_00001_00004_00006<max_left_00001_00004_00007)=tv=SATLiteral(11596))
-1770 -11596 0
1755 -1771 -11596 0
1756 -1773 -11596 0
1758 -1775 -11596 0
1760 -1777 -11596 0
1762 -1779 -11596 0
1764 -1781 -11596 0
1766 -1783 -11596 0
1768 -11596 0
1770 -1755 11596 0
1771 -1756 11596 0
1773 -1758 11596 0
1775 -1760 11596 0
1777 -1762 11596 0
1779 -1764 11596 0
1781 -1766 11596 0
1783 -1768 11596 0
c ((max_left_00001_00004_00007<max_left_00001_00004_00008)=tv=SATLiteral(11597))
-1785 -11597 0
1770 -1786 -11597 0
1771 -1788 -11597 0
1773 -1790 -11597 0
1775 -1792 -11597 0
1777 -1794 -11597 0
1779 -1796 -11597 0
1781 -1798 -11597 0
1783 -11597 0
1785 -1770 11597 0
1786 -1771 11597 0
1788 -1773 11597 0
1790 -1775 11597 0
1792 -1777 11597 0
1794 -1779 11597 0
1796 -1781 11597 0
1798 -1783 11597 0
c ((max_left_00001_00004_00008<max_left_00001_00004_00009)=tv=SATLiteral(11598))
-1800 -11598 0
1785 -1801 -11598 0
1786 -1803 -11598 0
1788 -1805 -11598 0
1790 -1807 -11598 0
1792 -1809 -11598 0
1794 -1811 -11598 0
1796 -1813 -11598 0
1798 -11598 0
1800 -1785 11598 0
1801 -1786 11598 0
1803 -1788 11598 0
1805 -1790 11598 0
1807 -1792 11598 0
1809 -1794 11598 0
1811 -1796 11598 0
1813 -1798 11598 0
c ((max_left_00001_00005_00001<max_left_00001_00005_00002)=tv=SATLiteral(11599))
-1831 -11599 0
1816 -1832 -11599 0
1817 -1834 -11599 0
1819 -1836 -11599 0
1821 -1838 -11599 0
1823 -1840 -11599 0
1825 -1842 -11599 0
1827 -1844 -11599 0
1829 -11599 0
1831 -1816 11599 0
1832 -1817 11599 0
1834 -1819 11599 0
1836 -1821 11599 0
1838 -1823 11599 0
1840 -1825 11599 0
1842 -1827 11599 0
1844 -1829 11599 0
c ((max_left_00001_00005_00002<max_left_00001_00005_00003)=tv=SATLiteral(11600))
-1846 -11600 0
1831 -1847 -11600 0
1832 -1849 -11600 0
1834 -1851 -11600 0
1836 -1853 -11600 0
1838 -1855 -11600 0
1840 -1857 -11600 0
1842 -1859 -11600 0
1844 -11600 0
1846 -1831 11600 0
1847 -1832 11600 0
1849 -1834 11600 0
1851 -1836 11600 0
1853 -1838 11600 0
1855 -1840 11600 0
1857 -1842 11600 0
1859 -1844 11600 0
c ((max_left_00001_00005_00003<max_left_00001_00005_00004)=tv=SATLiteral(11601))
-1861 -11601 0
1846 -1862 -11601 0
1847 -1864 -11601 0
1849 -1866 -11601 0
1851 -1868 -11601 0
1853 -1870 -11601 0
1855 -1872 -11601 0
1857 -1874 -11601 0
1859 -11601 0
1861 -1846 11601 0
1862 -1847 11601 0
1864 -1849 11601 0
1866 -1851 11601 0
1868 -1853 11601 0
1870 -1855 11601 0
1872 -1857 11601 0
1874 -1859 11601 0
c ((max_left_00001_00005_00004<max_left_00001_00005_00005)=tv=SATLiteral(11602))
-1876 -11602 0
1861 -1877 -11602 0
1862 -1879 -11602 0
1864 -1881 -11602 0
1866 -1883 -11602 0
1868 -1885 -11602 0
1870 -1887 -11602 0
1872 -1889 -11602 0
1874 -11602 0
1876 -1861 11602 0
1877 -1862 11602 0
1879 -1864 11602 0
1881 -1866 11602 0
1883 -1868 11602 0
1885 -1870 11602 0
1887 -1872 11602 0
1889 -1874 11602 0
c ((max_left_00001_00005_00005<max_left_00001_00005_00006)=tv=SATLiteral(11603))
-1891 -11603 0
1876 -1892 -11603 0
1877 -1894 -11603 0
1879 -1896 -11603 0
1881 -1898 -11603 0
1883 -1900 -11603 0
1885 -1902 -11603 0
1887 -1904 -11603 0
1889 -11603 0
1891 -1876 11603 0
1892 -1877 11603 0
1894 -1879 11603 0
1896 -1881 11603 0
1898 -1883 11603 0
1900 -1885 11603 0
1902 -1887 11603 0
1904 -1889 11603 0
c ((max_left_00001_00005_00006<max_left_00001_00005_00007)=tv=SATLiteral(11604))
-1906 -11604 0
1891 -1907 -11604 0
1892 -1909 -11604 0
1894 -1911 -11604 0
1896 -1913 -11604 0
1898 -1915 -11604 0
1900 -1917 -11604 0
1902 -1919 -11604 0
1904 -11604 0
1906 -1891 11604 0
1907 -1892 11604 0
1909 -1894 11604 0
1911 -1896 11604 0
1913 -1898 11604 0
1915 -1900 11604 0
1917 -1902 11604 0
1919 -1904 11604 0
c ((max_left_00001_00005_00007<max_left_00001_00005_00008)=tv=SATLiteral(11605))
-1921 -11605 0
1906 -1922 -11605 0
1907 -1924 -11605 0
1909 -1926 -11605 0
1911 -1928 -11605 0
1913 -1930 -11605 0
1915 -1932 -11605 0
1917 -1934 -11605 0
1919 -11605 0
1921 -1906 11605 0
1922 -1907 11605 0
1924 -1909 11605 0
1926 -1911 11605 0
1928 -1913 11605 0
1930 -1915 11605 0
1932 -1917 11605 0
1934 -1919 11605 0
c ((max_left_00001_00005_00008<max_left_00001_00005_00009)=tv=SATLiteral(11606))
-1936 -11606 0
1921 -1937 -11606 0
1922 -1939 -11606 0
1924 -1941 -11606 0
1926 -1943 -11606 0
1928 -1945 -11606 0
1930 -1947 -11606 0
1932 -1949 -11606 0
1934 -11606 0
1936 -1921 11606 0
1937 -1922 11606 0
1939 -1924 11606 0
1941 -1926 11606 0
1943 -1928 11606 0
1945 -1930 11606 0
1947 -1932 11606 0
1949 -1934 11606 0
c ((max_left_00001_00006_00001<max_left_00001_00006_00002)=tv=SATLiteral(11607))
-1967 -11607 0
1952 -1968 -11607 0
1953 -1970 -11607 0
1955 -1972 -11607 0
1957 -1974 -11607 0
1959 -1976 -11607 0
1961 -1978 -11607 0
1963 -1980 -11607 0
1965 -11607 0
1967 -1952 11607 0
1968 -1953 11607 0
1970 -1955 11607 0
1972 -1957 11607 0
1974 -1959 11607 0
1976 -1961 11607 0
1978 -1963 11607 0
1980 -1965 11607 0
c ((max_left_00001_00006_00002<max_left_00001_00006_00003)=tv=SATLiteral(11608))
-1982 -11608 0
1967 -1983 -11608 0
1968 -1985 -11608 0
1970 -1987 -11608 0
1972 -1989 -11608 0
1974 -1991 -11608 0
1976 -1993 -11608 0
1978 -1995 -11608 0
1980 -11608 0
1982 -1967 11608 0
1983 -1968 11608 0
1985 -1970 11608 0
1987 -1972 11608 0
1989 -1974 11608 0
1991 -1976 11608 0
1993 -1978 11608 0
1995 -1980 11608 0
c ((max_left_00001_00006_00003<max_left_00001_00006_00004)=tv=SATLiteral(11609))
-1997 -11609 0
1982 -1998 -11609 0
1983 -2000 -11609 0
1985 -2002 -11609 0
1987 -2004 -11609 0
1989 -2006 -11609 0
1991 -2008 -11609 0
1993 -2010 -11609 0
1995 -11609 0
1997 -1982 11609 0
1998 -1983 11609 0
2000 -1985 11609 0
2002 -1987 11609 0
2004 -1989 11609 0
2006 -1991 11609 0
2008 -1993 11609 0
2010 -1995 11609 0
c ((max_left_00001_00006_00004<max_left_00001_00006_00005)=tv=SATLiteral(11610))
-2012 -11610 0
1997 -2013 -11610 0
1998 -2015 -11610 0
2000 -2017 -11610 0
2002 -2019 -11610 0
2004 -2021 -11610 0
2006 -2023 -11610 0
2008 -2025 -11610 0
2010 -11610 0
2012 -1997 11610 0
2013 -1998 11610 0
2015 -2000 11610 0
2017 -2002 11610 0
2019 -2004 11610 0
2021 -2006 11610 0
2023 -2008 11610 0
2025 -2010 11610 0
c ((max_left_00001_00006_00005<max_left_00001_00006_00006)=tv=SATLiteral(11611))
-2027 -11611 0
2012 -2028 -11611 0
2013 -2030 -11611 0
2015 -2032 -11611 0
2017 -2034 -11611 0
2019 -2036 -11611 0
2021 -2038 -11611 0
2023 -2040 -11611 0
2025 -11611 0
2027 -2012 11611 0
2028 -2013 11611 0
2030 -2015 11611 0
2032 -2017 11611 0
2034 -2019 11611 0
2036 -2021 11611 0
2038 -2023 11611 0
2040 -2025 11611 0
c ((max_left_00001_00006_00006<max_left_00001_00006_00007)=tv=SATLiteral(11612))
-2042 -11612 0
2027 -2043 -11612 0
2028 -2045 -11612 0
2030 -2047 -11612 0
2032 -2049 -11612 0
2034 -2051 -11612 0
2036 -2053 -11612 0
2038 -2055 -11612 0
2040 -11612 0
2042 -2027 11612 0
2043 -2028 11612 0
2045 -2030 11612 0
2047 -2032 11612 0
2049 -2034 11612 0
2051 -2036 11612 0
2053 -2038 11612 0
2055 -2040 11612 0
c ((max_left_00001_00006_00007<max_left_00001_00006_00008)=tv=SATLiteral(11613))
-2057 -11613 0
2042 -2058 -11613 0
2043 -2060 -11613 0
2045 -2062 -11613 0
2047 -2064 -11613 0
2049 -2066 -11613 0
2051 -2068 -11613 0
2053 -2070 -11613 0
2055 -11613 0
2057 -2042 11613 0
2058 -2043 11613 0
2060 -2045 11613 0
2062 -2047 11613 0
2064 -2049 11613 0
2066 -2051 11613 0
2068 -2053 11613 0
2070 -2055 11613 0
c ((max_left_00001_00006_00008<max_left_00001_00006_00009)=tv=SATLiteral(11614))
-2072 -11614 0
2057 -2073 -11614 0
2058 -2075 -11614 0
2060 -2077 -11614 0
2062 -2079 -11614 0
2064 -2081 -11614 0
2066 -2083 -11614 0
2068 -2085 -11614 0
2070 -11614 0
2072 -2057 11614 0
2073 -2058 11614 0
2075 -2060 11614 0
2077 -2062 11614 0
2079 -2064 11614 0
2081 -2066 11614 0
2083 -2068 11614 0
2085 -2070 11614 0
c ((max_left_00001_00007_00001<max_left_00001_00007_00002)=tv=SATLiteral(11615))
-2103 -11615 0
2088 -2104 -11615 0
2089 -2106 -11615 0
2091 -2108 -11615 0
2093 -2110 -11615 0
2095 -2112 -11615 0
2097 -2114 -11615 0
2099 -2116 -11615 0
2101 -11615 0
2103 -2088 11615 0
2104 -2089 11615 0
2106 -2091 11615 0
2108 -2093 11615 0
2110 -2095 11615 0
2112 -2097 11615 0
2114 -2099 11615 0
2116 -2101 11615 0
c ((max_left_00001_00007_00002<max_left_00001_00007_00003)=tv=SATLiteral(11616))
-2118 -11616 0
2103 -2119 -11616 0
2104 -2121 -11616 0
2106 -2123 -11616 0
2108 -2125 -11616 0
2110 -2127 -11616 0
2112 -2129 -11616 0
2114 -2131 -11616 0
2116 -11616 0
2118 -2103 11616 0
2119 -2104 11616 0
2121 -2106 11616 0
2123 -2108 11616 0
2125 -2110 11616 0
2127 -2112 11616 0
2129 -2114 11616 0
2131 -2116 11616 0
c ((max_left_00001_00007_00003<max_left_00001_00007_00004)=tv=SATLiteral(11617))
-2133 -11617 0
2118 -2134 -11617 0
2119 -2136 -11617 0
2121 -2138 -11617 0
2123 -2140 -11617 0
2125 -2142 -11617 0
2127 -2144 -11617 0
2129 -2146 -11617 0
2131 -11617 0
2133 -2118 11617 0
2134 -2119 11617 0
2136 -2121 11617 0
2138 -2123 11617 0
2140 -2125 11617 0
2142 -2127 11617 0
2144 -2129 11617 0
2146 -2131 11617 0
c ((max_left_00001_00007_00004<max_left_00001_00007_00005)=tv=SATLiteral(11618))
-2148 -11618 0
2133 -2149 -11618 0
2134 -2151 -11618 0
2136 -2153 -11618 0
2138 -2155 -11618 0
2140 -2157 -11618 0
2142 -2159 -11618 0
2144 -2161 -11618 0
2146 -11618 0
2148 -2133 11618 0
2149 -2134 11618 0
2151 -2136 11618 0
2153 -2138 11618 0
2155 -2140 11618 0
2157 -2142 11618 0
2159 -2144 11618 0
2161 -2146 11618 0
c ((max_left_00001_00007_00005<max_left_00001_00007_00006)=tv=SATLiteral(11619))
-2163 -11619 0
2148 -2164 -11619 0
2149 -2166 -11619 0
2151 -2168 -11619 0
2153 -2170 -11619 0
2155 -2172 -11619 0
2157 -2174 -11619 0
2159 -2176 -11619 0
2161 -11619 0
2163 -2148 11619 0
2164 -2149 11619 0
2166 -2151 11619 0
2168 -2153 11619 0
2170 -2155 11619 0
2172 -2157 11619 0
2174 -2159 11619 0
2176 -2161 11619 0
c ((max_left_00001_00007_00006<max_left_00001_00007_00007)=tv=SATLiteral(11620))
-2178 -11620 0
2163 -2179 -11620 0
2164 -2181 -11620 0
2166 -2183 -11620 0
2168 -2185 -11620 0
2170 -2187 -11620 0
2172 -2189 -11620 0
2174 -2191 -11620 0
2176 -11620 0
2178 -2163 11620 0
2179 -2164 11620 0
2181 -2166 11620 0
2183 -2168 11620 0
2185 -2170 11620 0
2187 -2172 11620 0
2189 -2174 11620 0
2191 -2176 11620 0
c ((max_left_00001_00007_00007<max_left_00001_00007_00008)=tv=SATLiteral(11621))
-2193 -11621 0
2178 -2194 -11621 0
2179 -2196 -11621 0
2181 -2198 -11621 0
2183 -2200 -11621 0
2185 -2202 -11621 0
2187 -2204 -11621 0
2189 -2206 -11621 0
2191 -11621 0
2193 -2178 11621 0
2194 -2179 11621 0
2196 -2181 11621 0
2198 -2183 11621 0
2200 -2185 11621 0
2202 -2187 11621 0
2204 -2189 11621 0
2206 -2191 11621 0
c ((max_left_00001_00007_00008<max_left_00001_00007_00009)=tv=SATLiteral(11622))
-2208 -11622 0
2193 -2209 -11622 0
2194 -2211 -11622 0
2196 -2213 -11622 0
2198 -2215 -11622 0
2200 -2217 -11622 0
2202 -2219 -11622 0
2204 -2221 -11622 0
2206 -11622 0
2208 -2193 11622 0
2209 -2194 11622 0
2211 -2196 11622 0
2213 -2198 11622 0
2215 -2200 11622 0
2217 -2202 11622 0
2219 -2204 11622 0
2221 -2206 11622 0
c ((max_left_00001_00008_00001<max_left_00001_00008_00002)=tv=SATLiteral(11623))
-2239 -11623 0
2224 -2240 -11623 0
2225 -2242 -11623 0
2227 -2244 -11623 0
2229 -2246 -11623 0
2231 -2248 -11623 0
2233 -2250 -11623 0
2235 -2252 -11623 0
2237 -11623 0
2239 -2224 11623 0
2240 -2225 11623 0
2242 -2227 11623 0
2244 -2229 11623 0
2246 -2231 11623 0
2248 -2233 11623 0
2250 -2235 11623 0
2252 -2237 11623 0
c ((max_left_00001_00008_00002<max_left_00001_00008_00003)=tv=SATLiteral(11624))
-2254 -11624 0
2239 -2255 -11624 0
2240 -2257 -11624 0
2242 -2259 -11624 0
2244 -2261 -11624 0
2246 -2263 -11624 0
2248 -2265 -11624 0
2250 -2267 -11624 0
2252 -11624 0
2254 -2239 11624 0
2255 -2240 11624 0
2257 -2242 11624 0
2259 -2244 11624 0
2261 -2246 11624 0
2263 -2248 11624 0
2265 -2250 11624 0
2267 -2252 11624 0
c ((max_left_00001_00008_00003<max_left_00001_00008_00004)=tv=SATLiteral(11625))
-2269 -11625 0
2254 -2270 -11625 0
2255 -2272 -11625 0
2257 -2274 -11625 0
2259 -2276 -11625 0
2261 -2278 -11625 0
2263 -2280 -11625 0
2265 -2282 -11625 0
2267 -11625 0
2269 -2254 11625 0
2270 -2255 11625 0
2272 -2257 11625 0
2274 -2259 11625 0
2276 -2261 11625 0
2278 -2263 11625 0
2280 -2265 11625 0
2282 -2267 11625 0
c ((max_left_00001_00008_00004<max_left_00001_00008_00005)=tv=SATLiteral(11626))
-2284 -11626 0
2269 -2285 -11626 0
2270 -2287 -11626 0
2272 -2289 -11626 0
2274 -2291 -11626 0
2276 -2293 -11626 0
2278 -2295 -11626 0
2280 -2297 -11626 0
2282 -11626 0
2284 -2269 11626 0
2285 -2270 11626 0
2287 -2272 11626 0
2289 -2274 11626 0
2291 -2276 11626 0
2293 -2278 11626 0
2295 -2280 11626 0
2297 -2282 11626 0
c ((max_left_00001_00008_00005<max_left_00001_00008_00006)=tv=SATLiteral(11627))
-2299 -11627 0
2284 -2300 -11627 0
2285 -2302 -11627 0
2287 -2304 -11627 0
2289 -2306 -11627 0
2291 -2308 -11627 0
2293 -2310 -11627 0
2295 -2312 -11627 0
2297 -11627 0
2299 -2284 11627 0
2300 -2285 11627 0
2302 -2287 11627 0
2304 -2289 11627 0
2306 -2291 11627 0
2308 -2293 11627 0
2310 -2295 11627 0
2312 -2297 11627 0
c ((max_left_00001_00008_00006<max_left_00001_00008_00007)=tv=SATLiteral(11628))
-2314 -11628 0
2299 -2315 -11628 0
2300 -2317 -11628 0
2302 -2319 -11628 0
2304 -2321 -11628 0
2306 -2323 -11628 0
2308 -2325 -11628 0
2310 -2327 -11628 0
2312 -11628 0
2314 -2299 11628 0
2315 -2300 11628 0
2317 -2302 11628 0
2319 -2304 11628 0
2321 -2306 11628 0
2323 -2308 11628 0
2325 -2310 11628 0
2327 -2312 11628 0
c ((max_left_00001_00008_00007<max_left_00001_00008_00008)=tv=SATLiteral(11629))
-2329 -11629 0
2314 -2330 -11629 0
2315 -2332 -11629 0
2317 -2334 -11629 0
2319 -2336 -11629 0
2321 -2338 -11629 0
2323 -2340 -11629 0
2325 -2342 -11629 0
2327 -11629 0
2329 -2314 11629 0
2330 -2315 11629 0
2332 -2317 11629 0
2334 -2319 11629 0
2336 -2321 11629 0
2338 -2323 11629 0
2340 -2325 11629 0
2342 -2327 11629 0
c ((max_left_00001_00008_00008<max_left_00001_00008_00009)=tv=SATLiteral(11630))
-2344 -11630 0
2329 -2345 -11630 0
2330 -2347 -11630 0
2332 -2349 -11630 0
2334 -2351 -11630 0
2336 -2353 -11630 0
2338 -2355 -11630 0
2340 -2357 -11630 0
2342 -11630 0
2344 -2329 11630 0
2345 -2330 11630 0
2347 -2332 11630 0
2349 -2334 11630 0
2351 -2336 11630 0
2353 -2338 11630 0
2355 -2340 11630 0
2357 -2342 11630 0
c ((max_left_00001_00009_00001<max_left_00001_00009_00002)=tv=SATLiteral(11631))
-2375 -11631 0
2360 -2376 -11631 0
2361 -2378 -11631 0
2363 -2380 -11631 0
2365 -2382 -11631 0
2367 -2384 -11631 0
2369 -2386 -11631 0
2371 -2388 -11631 0
2373 -11631 0
2375 -2360 11631 0
2376 -2361 11631 0
2378 -2363 11631 0
2380 -2365 11631 0
2382 -2367 11631 0
2384 -2369 11631 0
2386 -2371 11631 0
2388 -2373 11631 0
c ((max_left_00001_00009_00002<max_left_00001_00009_00003)=tv=SATLiteral(11632))
-2390 -11632 0
2375 -2391 -11632 0
2376 -2393 -11632 0
2378 -2395 -11632 0
2380 -2397 -11632 0
2382 -2399 -11632 0
2384 -2401 -11632 0
2386 -2403 -11632 0
2388 -11632 0
2390 -2375 11632 0
2391 -2376 11632 0
2393 -2378 11632 0
2395 -2380 11632 0
2397 -2382 11632 0
2399 -2384 11632 0
2401 -2386 11632 0
2403 -2388 11632 0
c ((max_left_00001_00009_00003<max_left_00001_00009_00004)=tv=SATLiteral(11633))
-2405 -11633 0
2390 -2406 -11633 0
2391 -2408 -11633 0
2393 -2410 -11633 0
2395 -2412 -11633 0
2397 -2414 -11633 0
2399 -2416 -11633 0
2401 -2418 -11633 0
2403 -11633 0
2405 -2390 11633 0
2406 -2391 11633 0
2408 -2393 11633 0
2410 -2395 11633 0
2412 -2397 11633 0
2414 -2399 11633 0
2416 -2401 11633 0
2418 -2403 11633 0
c ((max_left_00001_00009_00004<max_left_00001_00009_00005)=tv=SATLiteral(11634))
-2420 -11634 0
2405 -2421 -11634 0
2406 -2423 -11634 0
2408 -2425 -11634 0
2410 -2427 -11634 0
2412 -2429 -11634 0
2414 -2431 -11634 0
2416 -2433 -11634 0
2418 -11634 0
2420 -2405 11634 0
2421 -2406 11634 0
2423 -2408 11634 0
2425 -2410 11634 0
2427 -2412 11634 0
2429 -2414 11634 0
2431 -2416 11634 0
2433 -2418 11634 0
c ((max_left_00001_00009_00005<max_left_00001_00009_00006)=tv=SATLiteral(11635))
-2435 -11635 0
2420 -2436 -11635 0
2421 -2438 -11635 0
2423 -2440 -11635 0
2425 -2442 -11635 0
2427 -2444 -11635 0
2429 -2446 -11635 0
2431 -2448 -11635 0
2433 -11635 0
2435 -2420 11635 0
2436 -2421 11635 0
2438 -2423 11635 0
2440 -2425 11635 0
2442 -2427 11635 0
2444 -2429 11635 0
2446 -2431 11635 0
2448 -2433 11635 0
c ((max_left_00001_00009_00006<max_left_00001_00009_00007)=tv=SATLiteral(11636))
-2450 -11636 0
2435 -2451 -11636 0
2436 -2453 -11636 0
2438 -2455 -11636 0
2440 -2457 -11636 0
2442 -2459 -11636 0
2444 -2461 -11636 0
2446 -2463 -11636 0
2448 -11636 0
2450 -2435 11636 0
2451 -2436 11636 0
2453 -2438 11636 0
2455 -2440 11636 0
2457 -2442 11636 0
2459 -2444 11636 0
2461 -2446 11636 0
2463 -2448 11636 0
c ((max_left_00001_00009_00007<max_left_00001_00009_00008)=tv=SATLiteral(11637))
-2465 -11637 0
2450 -2466 -11637 0
2451 -2468 -11637 0
2453 -2470 -11637 0
2455 -2472 -11637 0
2457 -2474 -11637 0
2459 -2476 -11637 0
2461 -2478 -11637 0
2463 -11637 0
2465 -2450 11637 0
2466 -2451 11637 0
2468 -2453 11637 0
2470 -2455 11637 0
2472 -2457 11637 0
2474 -2459 11637 0
2476 -2461 11637 0
2478 -2463 11637 0
c ((max_left_00001_00009_00008<max_left_00001_00009_00009)=tv=SATLiteral(11638))
-2480 -11638 0
2465 -2481 -11638 0
2466 -2483 -11638 0
2468 -2485 -11638 0
2470 -2487 -11638 0
2472 -2489 -11638 0
2474 -2491 -11638 0
2476 -2493 -11638 0
2478 -11638 0
2480 -2465 11638 0
2481 -2466 11638 0
2483 -2468 11638 0
2485 -2470 11638 0
2487 -2472 11638 0
2489 -2474 11638 0
2491 -2476 11638 0
2493 -2478 11638 0
c ((max_left_00002_00001_00001<max_left_00002_00001_00002)=tv=SATLiteral(11639))
-2511 -11639 0
2496 -2512 -11639 0
2497 -2514 -11639 0
2499 -2516 -11639 0
2501 -2518 -11639 0
2503 -2520 -11639 0
2505 -2522 -11639 0
2507 -2524 -11639 0
2509 -11639 0
2511 -2496 11639 0
2512 -2497 11639 0
2514 -2499 11639 0
2516 -2501 11639 0
2518 -2503 11639 0
2520 -2505 11639 0
2522 -2507 11639 0
2524 -2509 11639 0
c ((max_left_00002_00001_00002<max_left_00002_00001_00003)=tv=SATLiteral(11640))
-2526 -11640 0
2511 -2527 -11640 0
2512 -2529 -11640 0
2514 -2531 -11640 0
2516 -2533 -11640 0
2518 -2535 -11640 0
2520 -2537 -11640 0
2522 -2539 -11640 0
2524 -11640 0
2526 -2511 11640 0
2527 -2512 11640 0
2529 -2514 11640 0
2531 -2516 11640 0
2533 -2518 11640 0
2535 -2520 11640 0
2537 -2522 11640 0
2539 -2524 11640 0
c ((max_left_00002_00001_00003<max_left_00002_00001_00004)=tv=SATLiteral(11641))
-2541 -11641 0
2526 -2542 -11641 0
2527 -2544 -11641 0
2529 -2546 -11641 0
2531 -2548 -11641 0
2533 -2550 -11641 0
2535 -2552 -11641 0
2537 -2554 -11641 0
2539 -11641 0
2541 -2526 11641 0
2542 -2527 11641 0
2544 -2529 11641 0
2546 -2531 11641 0
2548 -2533 11641 0
2550 -2535 11641 0
2552 -2537 11641 0
2554 -2539 11641 0
c ((max_left_00002_00001_00004<max_left_00002_00001_00005)=tv=SATLiteral(11642))
-2556 -11642 0
2541 -2557 -11642 0
2542 -2559 -11642 0
2544 -2561 -11642 0
2546 -2563 -11642 0
2548 -2565 -11642 0
2550 -2567 -11642 0
2552 -2569 -11642 0
2554 -11642 0
2556 -2541 11642 0
2557 -2542 11642 0
2559 -2544 11642 0
2561 -2546 11642 0
2563 -2548 11642 0
2565 -2550 11642 0
2567 -2552 11642 0
2569 -2554 11642 0
c ((max_left_00002_00001_00005<max_left_00002_00001_00006)=tv=SATLiteral(11643))
-2571 -11643 0
2556 -2572 -11643 0
2557 -2574 -11643 0
2559 -2576 -11643 0
2561 -2578 -11643 0
2563 -2580 -11643 0
2565 -2582 -11643 0
2567 -2584 -11643 0
2569 -11643 0
2571 -2556 11643 0
2572 -2557 11643 0
2574 -2559 11643 0
2576 -2561 11643 0
2578 -2563 11643 0
2580 -2565 11643 0
2582 -2567 11643 0
2584 -2569 11643 0
c ((max_left_00002_00001_00006<max_left_00002_00001_00007)=tv=SATLiteral(11644))
-2586 -11644 0
2571 -2587 -11644 0
2572 -2589 -11644 0
2574 -2591 -11644 0
2576 -2593 -11644 0
2578 -2595 -11644 0
2580 -2597 -11644 0
2582 -2599 -11644 0
2584 -11644 0
2586 -2571 11644 0
2587 -2572 11644 0
2589 -2574 11644 0
2591 -2576 11644 0
2593 -2578 11644 0
2595 -2580 11644 0
2597 -2582 11644 0
2599 -2584 11644 0
c ((max_left_00002_00001_00007<max_left_00002_00001_00008)=tv=SATLiteral(11645))
-2601 -11645 0
2586 -2602 -11645 0
2587 -2604 -11645 0
2589 -2606 -11645 0
2591 -2608 -11645 0
2593 -2610 -11645 0
2595 -2612 -11645 0
2597 -2614 -11645 0
2599 -11645 0
2601 -2586 11645 0
2602 -2587 11645 0
2604 -2589 11645 0
2606 -2591 11645 0
2608 -2593 11645 0
2610 -2595 11645 0
2612 -2597 11645 0
2614 -2599 11645 0
c ((max_left_00002_00001_00008<max_left_00002_00001_00009)=tv=SATLiteral(11646))
-2616 -11646 0
2601 -2617 -11646 0
2602 -2619 -11646 0
2604 -2621 -11646 0
2606 -2623 -11646 0
2608 -2625 -11646 0
2610 -2627 -11646 0
2612 -2629 -11646 0
2614 -11646 0
2616 -2601 11646 0
2617 -2602 11646 0
2619 -2604 11646 0
2621 -2606 11646 0
2623 -2608 11646 0
2625 -2610 11646 0
2627 -2612 11646 0
2629 -2614 11646 0
c ((max_left_00002_00002_00001<max_left_00002_00002_00002)=tv=SATLiteral(11647))
-2647 -11647 0
2632 -2648 -11647 0
2633 -2650 -11647 0
2635 -2652 -11647 0
2637 -2654 -11647 0
2639 -2656 -11647 0
2641 -2658 -11647 0
2643 -2660 -11647 0
2645 -11647 0
2647 -2632 11647 0
2648 -2633 11647 0
2650 -2635 11647 0
2652 -2637 11647 0
2654 -2639 11647 0
2656 -2641 11647 0
2658 -2643 11647 0
2660 -2645 11647 0
c ((max_left_00002_00002_00002<max_left_00002_00002_00003)=tv=SATLiteral(11648))
-2662 -11648 0
2647 -2663 -11648 0
2648 -2665 -11648 0
2650 -2667 -11648 0
2652 -2669 -11648 0
2654 -2671 -11648 0
2656 -2673 -11648 0
2658 -2675 -11648 0
2660 -11648 0
2662 -2647 11648 0
2663 -2648 11648 0
2665 -2650 11648 0
2667 -2652 11648 0
2669 -2654 11648 0
2671 -2656 11648 0
2673 -2658 11648 0
2675 -2660 11648 0
c ((max_left_00002_00002_00003<max_left_00002_00002_00004)=tv=SATLiteral(11649))
-2677 -11649 0
2662 -2678 -11649 0
2663 -2680 -11649 0
2665 -2682 -11649 0
2667 -2684 -11649 0
2669 -2686 -11649 0
2671 -2688 -11649 0
2673 -2690 -11649 0
2675 -11649 0
2677 -2662 11649 0
2678 -2663 11649 0
2680 -2665 11649 0
2682 -2667 11649 0
2684 -2669 11649 0
2686 -2671 11649 0
2688 -2673 11649 0
2690 -2675 11649 0
c ((max_left_00002_00002_00004<max_left_00002_00002_00005)=tv=SATLiteral(11650))
-2692 -11650 0
2677 -2693 -11650 0
2678 -2695 -11650 0
2680 -2697 -11650 0
2682 -2699 -11650 0
2684 -2701 -11650 0
2686 -2703 -11650 0
2688 -2705 -11650 0
2690 -11650 0
2692 -2677 11650 0
2693 -2678 11650 0
2695 -2680 11650 0
2697 -2682 11650 0
2699 -2684 11650 0
2701 -2686 11650 0
2703 -2688 11650 0
2705 -2690 11650 0
c ((max_left_00002_00002_00005<max_left_00002_00002_00006)=tv=SATLiteral(11651))
-2707 -11651 0
2692 -2708 -11651 0
2693 -2710 -11651 0
2695 -2712 -11651 0
2697 -2714 -11651 0
2699 -2716 -11651 0
2701 -2718 -11651 0
2703 -2720 -11651 0
2705 -11651 0
2707 -2692 11651 0
2708 -2693 11651 0
2710 -2695 11651 0
2712 -2697 11651 0
2714 -2699 11651 0
2716 -2701 11651 0
2718 -2703 11651 0
2720 -2705 11651 0
c ((max_left_00002_00002_00006<max_left_00002_00002_00007)=tv=SATLiteral(11652))
-2722 -11652 0
2707 -2723 -11652 0
2708 -2725 -11652 0
2710 -2727 -11652 0
2712 -2729 -11652 0
2714 -2731 -11652 0
2716 -2733 -11652 0
2718 -2735 -11652 0
2720 -11652 0
2722 -2707 11652 0
2723 -2708 11652 0
2725 -2710 11652 0
2727 -2712 11652 0
2729 -2714 11652 0
2731 -2716 11652 0
2733 -2718 11652 0
2735 -2720 11652 0
c ((max_left_00002_00002_00007<max_left_00002_00002_00008)=tv=SATLiteral(11653))
-2737 -11653 0
2722 -2738 -11653 0
2723 -2740 -11653 0
2725 -2742 -11653 0
2727 -2744 -11653 0
2729 -2746 -11653 0
2731 -2748 -11653 0
2733 -2750 -11653 0
2735 -11653 0
2737 -2722 11653 0
2738 -2723 11653 0
2740 -2725 11653 0
2742 -2727 11653 0
2744 -2729 11653 0
2746 -2731 11653 0
2748 -2733 11653 0
2750 -2735 11653 0
c ((max_left_00002_00002_00008<max_left_00002_00002_00009)=tv=SATLiteral(11654))
-2752 -11654 0
2737 -2753 -11654 0
2738 -2755 -11654 0
2740 -2757 -11654 0
2742 -2759 -11654 0
2744 -2761 -11654 0
2746 -2763 -11654 0
2748 -2765 -11654 0
2750 -11654 0
2752 -2737 11654 0
2753 -2738 11654 0
2755 -2740 11654 0
2757 -2742 11654 0
2759 -2744 11654 0
2761 -2746 11654 0
2763 -2748 11654 0
2765 -2750 11654 0
c ((max_left_00002_00003_00001<max_left_00002_00003_00002)=tv=SATLiteral(11655))
-2783 -11655 0
2768 -2784 -11655 0
2769 -2786 -11655 0
2771 -2788 -11655 0
2773 -2790 -11655 0
2775 -2792 -11655 0
2777 -2794 -11655 0
2779 -2796 -11655 0
2781 -11655 0
2783 -2768 11655 0
2784 -2769 11655 0
2786 -2771 11655 0
2788 -2773 11655 0
2790 -2775 11655 0
2792 -2777 11655 0
2794 -2779 11655 0
2796 -2781 11655 0
c ((max_left_00002_00003_00002<max_left_00002_00003_00003)=tv=SATLiteral(11656))
-2798 -11656 0
2783 -2799 -11656 0
2784 -2801 -11656 0
2786 -2803 -11656 0
2788 -2805 -11656 0
2790 -2807 -11656 0
2792 -2809 -11656 0
2794 -2811 -11656 0
2796 -11656 0
2798 -2783 11656 0
2799 -2784 11656 0
2801 -2786 11656 0
2803 -2788 11656 0
2805 -2790 11656 0
2807 -2792 11656 0
2809 -2794 11656 0
2811 -2796 11656 0
c ((max_left_00002_00003_00003<max_left_00002_00003_00004)=tv=SATLiteral(11657))
-2813 -11657 0
2798 -2814 -11657 0
2799 -2816 -11657 0
2801 -2818 -11657 0
2803 -2820 -11657 0
2805 -2822 -11657 0
2807 -2824 -11657 0
2809 -2826 -11657 0
2811 -11657 0
2813 -2798 11657 0
2814 -2799 11657 0
2816 -2801 11657 0
2818 -2803 11657 0
2820 -2805 11657 0
2822 -2807 11657 0
2824 -2809 11657 0
2826 -2811 11657 0
c ((max_left_00002_00003_00004<max_left_00002_00003_00005)=tv=SATLiteral(11658))
-2828 -11658 0
2813 -2829 -11658 0
2814 -2831 -11658 0
2816 -2833 -11658 0
2818 -2835 -11658 0
2820 -2837 -11658 0
2822 -2839 -11658 0
2824 -2841 -11658 0
2826 -11658 0
2828 -2813 11658 0
2829 -2814 11658 0
2831 -2816 11658 0
2833 -2818 11658 0
2835 -2820 11658 0
2837 -2822 11658 0
2839 -2824 11658 0
2841 -2826 11658 0
c ((max_left_00002_00003_00005<max_left_00002_00003_00006)=tv=SATLiteral(11659))
-2843 -11659 0
2828 -2844 -11659 0
2829 -2846 -11659 0
2831 -2848 -11659 0
2833 -2850 -11659 0
2835 -2852 -11659 0
2837 -2854 -11659 0
2839 -2856 -11659 0
2841 -11659 0
2843 -2828 11659 0
2844 -2829 11659 0
2846 -2831 11659 0
2848 -2833 11659 0
2850 -2835 11659 0
2852 -2837 11659 0
2854 -2839 11659 0
2856 -2841 11659 0
c ((max_left_00002_00003_00006<max_left_00002_00003_00007)=tv=SATLiteral(11660))
-2858 -11660 0
2843 -2859 -11660 0
2844 -2861 -11660 0
2846 -2863 -11660 0
2848 -2865 -11660 0
2850 -2867 -11660 0
2852 -2869 -11660 0
2854 -2871 -11660 0
2856 -11660 0
2858 -2843 11660 0
2859 -2844 11660 0
2861 -2846 11660 0
2863 -2848 11660 0
2865 -2850 11660 0
2867 -2852 11660 0
2869 -2854 11660 0
2871 -2856 11660 0
c ((max_left_00002_00003_00007<max_left_00002_00003_00008)=tv=SATLiteral(11661))
-2873 -11661 0
2858 -2874 -11661 0
2859 -2876 -11661 0
2861 -2878 -11661 0
2863 -2880 -11661 0
2865 -2882 -11661 0
2867 -2884 -11661 0
2869 -2886 -11661 0
2871 -11661 0
2873 -2858 11661 0
2874 -2859 11661 0
2876 -2861 11661 0
2878 -2863 11661 0
2880 -2865 11661 0
2882 -2867 11661 0
2884 -2869 11661 0
2886 -2871 11661 0
c ((max_left_00002_00003_00008<max_left_00002_00003_00009)=tv=SATLiteral(11662))
-2888 -11662 0
2873 -2889 -11662 0
2874 -2891 -11662 0
2876 -2893 -11662 0
2878 -2895 -11662 0
2880 -2897 -11662 0
2882 -2899 -11662 0
2884 -2901 -11662 0
2886 -11662 0
2888 -2873 11662 0
2889 -2874 11662 0
2891 -2876 11662 0
2893 -2878 11662 0
2895 -2880 11662 0
2897 -2882 11662 0
2899 -2884 11662 0
2901 -2886 11662 0
c ((max_left_00002_00004_00001<max_left_00002_00004_00002)=tv=SATLiteral(11663))
-2919 -11663 0
2904 -2920 -11663 0
2905 -2922 -11663 0
2907 -2924 -11663 0
2909 -2926 -11663 0
2911 -2928 -11663 0
2913 -2930 -11663 0
2915 -2932 -11663 0
2917 -11663 0
2919 -2904 11663 0
2920 -2905 11663 0
2922 -2907 11663 0
2924 -2909 11663 0
2926 -2911 11663 0
2928 -2913 11663 0
2930 -2915 11663 0
2932 -2917 11663 0
c ((max_left_00002_00004_00002<max_left_00002_00004_00003)=tv=SATLiteral(11664))
-2934 -11664 0
2919 -2935 -11664 0
2920 -2937 -11664 0
2922 -2939 -11664 0
2924 -2941 -11664 0
2926 -2943 -11664 0
2928 -2945 -11664 0
2930 -2947 -11664 0
2932 -11664 0
2934 -2919 11664 0
2935 -2920 11664 0
2937 -2922 11664 0
2939 -2924 11664 0
2941 -2926 11664 0
2943 -2928 11664 0
2945 -2930 11664 0
2947 -2932 11664 0
c ((max_left_00002_00004_00003<max_left_00002_00004_00004)=tv=SATLiteral(11665))
-2949 -11665 0
2934 -2950 -11665 0
2935 -2952 -11665 0
2937 -2954 -11665 0
2939 -2956 -11665 0
2941 -2958 -11665 0
2943 -2960 -11665 0
2945 -2962 -11665 0
2947 -11665 0
2949 -2934 11665 0
2950 -2935 11665 0
2952 -2937 11665 0
2954 -2939 11665 0
2956 -2941 11665 0
2958 -2943 11665 0
2960 -2945 11665 0
2962 -2947 11665 0
c ((max_left_00002_00004_00004<max_left_00002_00004_00005)=tv=SATLiteral(11666))
-2964 -11666 0
2949 -2965 -11666 0
2950 -2967 -11666 0
2952 -2969 -11666 0
2954 -2971 -11666 0
2956 -2973 -11666 0
2958 -2975 -11666 0
2960 -2977 -11666 0
2962 -11666 0
2964 -2949 11666 0
2965 -2950 11666 0
2967 -2952 11666 0
2969 -2954 11666 0
2971 -2956 11666 0
2973 -2958 11666 0
2975 -2960 11666 0
2977 -2962 11666 0
c ((max_left_00002_00004_00005<max_left_00002_00004_00006)=tv=SATLiteral(11667))
-2979 -11667 0
2964 -2980 -11667 0
2965 -2982 -11667 0
2967 -2984 -11667 0
2969 -2986 -11667 0
2971 -2988 -11667 0
2973 -2990 -11667 0
2975 -2992 -11667 0
2977 -11667 0
2979 -2964 11667 0
2980 -2965 11667 0
2982 -2967 11667 0
2984 -2969 11667 0
2986 -2971 11667 0
2988 -2973 11667 0
2990 -2975 11667 0
2992 -2977 11667 0
c ((max_left_00002_00004_00006<max_left_00002_00004_00007)=tv=SATLiteral(11668))
-2994 -11668 0
2979 -2995 -11668 0
2980 -2997 -11668 0
2982 -2999 -11668 0
2984 -3001 -11668 0
2986 -3003 -11668 0
2988 -3005 -11668 0
2990 -3007 -11668 0
2992 -11668 0
2994 -2979 11668 0
2995 -2980 11668 0
2997 -2982 11668 0
2999 -2984 11668 0
3001 -2986 11668 0
3003 -2988 11668 0
3005 -2990 11668 0
3007 -2992 11668 0
c ((max_left_00002_00004_00007<max_left_00002_00004_00008)=tv=SATLiteral(11669))
-3009 -11669 0
2994 -3010 -11669 0
2995 -3012 -11669 0
2997 -3014 -11669 0
2999 -3016 -11669 0
3001 -3018 -11669 0
3003 -3020 -11669 0
3005 -3022 -11669 0
3007 -11669 0
3009 -2994 11669 0
3010 -2995 11669 0
3012 -2997 11669 0
3014 -2999 11669 0
3016 -3001 11669 0
3018 -3003 11669 0
3020 -3005 11669 0
3022 -3007 11669 0
c ((max_left_00002_00004_00008<max_left_00002_00004_00009)=tv=SATLiteral(11670))
-3024 -11670 0
3009 -3025 -11670 0
3010 -3027 -11670 0
3012 -3029 -11670 0
3014 -3031 -11670 0
3016 -3033 -11670 0
3018 -3035 -11670 0
3020 -3037 -11670 0
3022 -11670 0
3024 -3009 11670 0
3025 -3010 11670 0
3027 -3012 11670 0
3029 -3014 11670 0
3031 -3016 11670 0
3033 -3018 11670 0
3035 -3020 11670 0
3037 -3022 11670 0
c ((max_left_00002_00005_00001<max_left_00002_00005_00002)=tv=SATLiteral(11671))
-3055 -11671 0
3040 -3056 -11671 0
3041 -3058 -11671 0
3043 -3060 -11671 0
3045 -3062 -11671 0
3047 -3064 -11671 0
3049 -3066 -11671 0
3051 -3068 -11671 0
3053 -11671 0
3055 -3040 11671 0
3056 -3041 11671 0
3058 -3043 11671 0
3060 -3045 11671 0
3062 -3047 11671 0
3064 -3049 11671 0
3066 -3051 11671 0
3068 -3053 11671 0
c ((max_left_00002_00005_00002<max_left_00002_00005_00003)=tv=SATLiteral(11672))
-3070 -11672 0
3055 -3071 -11672 0
3056 -3073 -11672 0
3058 -3075 -11672 0
3060 -3077 -11672 0
3062 -3079 -11672 0
3064 -3081 -11672 0
3066 -3083 -11672 0
3068 -11672 0
3070 -3055 11672 0
3071 -3056 11672 0
3073 -3058 11672 0
3075 -3060 11672 0
3077 -3062 11672 0
3079 -3064 11672 0
3081 -3066 11672 0
3083 -3068 11672 0
c ((max_left_00002_00005_00003<max_left_00002_00005_00004)=tv=SATLiteral(11673))
-3085 -11673 0
3070 -3086 -11673 0
3071 -3088 -11673 0
3073 -3090 -11673 0
3075 -3092 -11673 0
3077 -3094 -11673 0
3079 -3096 -11673 0
3081 -3098 -11673 0
3083 -11673 0
3085 -3070 11673 0
3086 -3071 11673 0
3088 -3073 11673 0
3090 -3075 11673 0
3092 -3077 11673 0
3094 -3079 11673 0
3096 -3081 11673 0
3098 -3083 11673 0
c ((max_left_00002_00005_00004<max_left_00002_00005_00005)=tv=SATLiteral(11674))
-3100 -11674 0
3085 -3101 -11674 0
3086 -3103 -11674 0
3088 -3105 -11674 0
3090 -3107 -11674 0
3092 -3109 -11674 0
3094 -3111 -11674 0
3096 -3113 -11674 0
3098 -11674 0
3100 -3085 11674 0
3101 -3086 11674 0
3103 -3088 11674 0
3105 -3090 11674 0
3107 -3092 11674 0
3109 -3094 11674 0
3111 -3096 11674 0
3113 -3098 11674 0
c ((max_left_00002_00005_00005<max_left_00002_00005_00006)=tv=SATLiteral(11675))
-3115 -11675 0
3100 -3116 -11675 0
3101 -3118 -11675 0
3103 -3120 -11675 0
3105 -3122 -11675 0
3107 -3124 -11675 0
3109 -3126 -11675 0
3111 -3128 -11675 0
3113 -11675 0
3115 -3100 11675 0
3116 -3101 11675 0
3118 -3103 11675 0
3120 -3105 11675 0
3122 -3107 11675 0
3124 -3109 11675 0
3126 -3111 11675 0
3128 -3113 11675 0
c ((max_left_00002_00005_00006<max_left_00002_00005_00007)=tv=SATLiteral(11676))
-3130 -11676 0
3115 -3131 -11676 0
3116 -3133 -11676 0
3118 -3135 -11676 0
3120 -3137 -11676 0
3122 -3139 -11676 0
3124 -3141 -11676 0
3126 -3143 -11676 0
3128 -11676 0
3130 -3115 11676 0
3131 -3116 11676 0
3133 -3118 11676 0
3135 -3120 11676 0
3137 -3122 11676 0
3139 -3124 11676 0
3141 -3126 11676 0
3143 -3128 11676 0
c ((max_left_00002_00005_00007<max_left_00002_00005_00008)=tv=SATLiteral(11677))
-3145 -11677 0
3130 -3146 -11677 0
3131 -3148 -11677 0
3133 -3150 -11677 0
3135 -3152 -11677 0
3137 -3154 -11677 0
3139 -3156 -11677 0
3141 -3158 -11677 0
3143 -11677 0
3145 -3130 11677 0
3146 -3131 11677 0
3148 -3133 11677 0
3150 -3135 11677 0
3152 -3137 11677 0
3154 -3139 11677 0
3156 -3141 11677 0
3158 -3143 11677 0
c ((max_left_00002_00005_00008<max_left_00002_00005_00009)=tv=SATLiteral(11678))
-3160 -11678 0
3145 -3161 -11678 0
3146 -3163 -11678 0
3148 -3165 -11678 0
3150 -3167 -11678 0
3152 -3169 -11678 0
3154 -3171 -11678 0
3156 -3173 -11678 0
3158 -11678 0
3160 -3145 11678 0
3161 -3146 11678 0
3163 -3148 11678 0
3165 -3150 11678 0
3167 -3152 11678 0
3169 -3154 11678 0
3171 -3156 11678 0
3173 -3158 11678 0
c ((max_left_00002_00006_00001<max_left_00002_00006_00002)=tv=SATLiteral(11679))
-3191 -11679 0
3176 -3192 -11679 0
3177 -3194 -11679 0
3179 -3196 -11679 0
3181 -3198 -11679 0
3183 -3200 -11679 0
3185 -3202 -11679 0
3187 -3204 -11679 0
3189 -11679 0
3191 -3176 11679 0
3192 -3177 11679 0
3194 -3179 11679 0
3196 -3181 11679 0
3198 -3183 11679 0
3200 -3185 11679 0
3202 -3187 11679 0
3204 -3189 11679 0
c ((max_left_00002_00006_00002<max_left_00002_00006_00003)=tv=SATLiteral(11680))
-3206 -11680 0
3191 -3207 -11680 0
3192 -3209 -11680 0
3194 -3211 -11680 0
3196 -3213 -11680 0
3198 -3215 -11680 0
3200 -3217 -11680 0
3202 -3219 -11680 0
3204 -11680 0
3206 -3191 11680 0
3207 -3192 11680 0
3209 -3194 11680 0
3211 -3196 11680 0
3213 -3198 11680 0
3215 -3200 11680 0
3217 -3202 11680 0
3219 -3204 11680 0
c ((max_left_00002_00006_00003<max_left_00002_00006_00004)=tv=SATLiteral(11681))
-3221 -11681 0
3206 -3222 -11681 0
3207 -3224 -11681 0
3209 -3226 -11681 0
3211 -3228 -11681 0
3213 -3230 -11681 0
3215 -3232 -11681 0
3217 -3234 -11681 0
3219 -11681 0
3221 -3206 11681 0
3222 -3207 11681 0
3224 -3209 11681 0
3226 -3211 11681 0
3228 -3213 11681 0
3230 -3215 11681 0
3232 -3217 11681 0
3234 -3219 11681 0
c ((max_left_00002_00006_00004<max_left_00002_00006_00005)=tv=SATLiteral(11682))
-3236 -11682 0
3221 -3237 -11682 0
3222 -3239 -11682 0
3224 -3241 -11682 0
3226 -3243 -11682 0
3228 -3245 -11682 0
3230 -3247 -11682 0
3232 -3249 -11682 0
3234 -11682 0
3236 -3221 11682 0
3237 -3222 11682 0
3239 -3224 11682 0
3241 -3226 11682 0
3243 -3228 11682 0
3245 -3230 11682 0
3247 -3232 11682 0
3249 -3234 11682 0
c ((max_left_00002_00006_00005<max_left_00002_00006_00006)=tv=SATLiteral(11683))
-3251 -11683 0
3236 -3252 -11683 0
3237 -3254 -11683 0
3239 -3256 -11683 0
3241 -3258 -11683 0
3243 -3260 -11683 0
3245 -3262 -11683 0
3247 -3264 -11683 0
3249 -11683 0
3251 -3236 11683 0
3252 -3237 11683 0
3254 -3239 11683 0
3256 -3241 11683 0
3258 -3243 11683 0
3260 -3245 11683 0
3262 -3247 11683 0
3264 -3249 11683 0
c ((max_left_00002_00006_00006<max_left_00002_00006_00007)=tv=SATLiteral(11684))
-3266 -11684 0
3251 -3267 -11684 0
3252 -3269 -11684 0
3254 -3271 -11684 0
3256 -3273 -11684 0
3258 -3275 -11684 0
3260 -3277 -11684 0
3262 -3279 -11684 0
3264 -11684 0
3266 -3251 11684 0
3267 -3252 11684 0
3269 -3254 11684 0
3271 -3256 11684 0
3273 -3258 11684 0
3275 -3260 11684 0
3277 -3262 11684 0
3279 -3264 11684 0
c ((max_left_00002_00006_00007<max_left_00002_00006_00008)=tv=SATLiteral(11685))
-3281 -11685 0
3266 -3282 -11685 0
3267 -3284 -11685 0
3269 -3286 -11685 0
3271 -3288 -11685 0
3273 -3290 -11685 0
3275 -3292 -11685 0
3277 -3294 -11685 0
3279 -11685 0
3281 -3266 11685 0
3282 -3267 11685 0
3284 -3269 11685 0
3286 -3271 11685 0
3288 -3273 11685 0
3290 -3275 11685 0
3292 -3277 11685 0
3294 -3279 11685 0
c ((max_left_00002_00006_00008<max_left_00002_00006_00009)=tv=SATLiteral(11686))
-3296 -11686 0
3281 -3297 -11686 0
3282 -3299 -11686 0
3284 -3301 -11686 0
3286 -3303 -11686 0
3288 -3305 -11686 0
3290 -3307 -11686 0
3292 -3309 -11686 0
3294 -11686 0
3296 -3281 11686 0
3297 -3282 11686 0
3299 -3284 11686 0
3301 -3286 11686 0
3303 -3288 11686 0
3305 -3290 11686 0
3307 -3292 11686 0
3309 -3294 11686 0
c ((max_left_00002_00007_00001<max_left_00002_00007_00002)=tv=SATLiteral(11687))
-3327 -11687 0
3312 -3328 -11687 0
3313 -3330 -11687 0
3315 -3332 -11687 0
3317 -3334 -11687 0
3319 -3336 -11687 0
3321 -3338 -11687 0
3323 -3340 -11687 0
3325 -11687 0
3327 -3312 11687 0
3328 -3313 11687 0
3330 -3315 11687 0
3332 -3317 11687 0
3334 -3319 11687 0
3336 -3321 11687 0
3338 -3323 11687 0
3340 -3325 11687 0
c ((max_left_00002_00007_00002<max_left_00002_00007_00003)=tv=SATLiteral(11688))
-3342 -11688 0
3327 -3343 -11688 0
3328 -3345 -11688 0
3330 -3347 -11688 0
3332 -3349 -11688 0
3334 -3351 -11688 0
3336 -3353 -11688 0
3338 -3355 -11688 0
3340 -11688 0
3342 -3327 11688 0
3343 -3328 11688 0
3345 -3330 11688 0
3347 -3332 11688 0
3349 -3334 11688 0
3351 -3336 11688 0
3353 -3338 11688 0
3355 -3340 11688 0
c ((max_left_00002_00007_00003<max_left_00002_00007_00004)=tv=SATLiteral(11689))
-3357 -11689 0
3342 -3358 -11689 0
3343 -3360 -11689 0
3345 -3362 -11689 0
3347 -3364 -11689 0
3349 -3366 -11689 0
3351 -3368 -11689 0
3353 -3370 -11689 0
3355 -11689 0
3357 -3342 11689 0
3358 -3343 11689 0
3360 -3345 11689 0
3362 -3347 11689 0
3364 -3349 11689 0
3366 -3351 11689 0
3368 -3353 11689 0
3370 -3355 11689 0
c ((max_left_00002_00007_00004<max_left_00002_00007_00005)=tv=SATLiteral(11690))
-3372 -11690 0
3357 -3373 -11690 0
3358 -3375 -11690 0
3360 -3377 -11690 0
3362 -3379 -11690 0
3364 -3381 -11690 0
3366 -3383 -11690 0
3368 -3385 -11690 0
3370 -11690 0
3372 -3357 11690 0
3373 -3358 11690 0
3375 -3360 11690 0
3377 -3362 11690 0
3379 -3364 11690 0
3381 -3366 11690 0
3383 -3368 11690 0
3385 -3370 11690 0
c ((max_left_00002_00007_00005<max_left_00002_00007_00006)=tv=SATLiteral(11691))
-3387 -11691 0
3372 -3388 -11691 0
3373 -3390 -11691 0
3375 -3392 -11691 0
3377 -3394 -11691 0
3379 -3396 -11691 0
3381 -3398 -11691 0
3383 -3400 -11691 0
3385 -11691 0
3387 -3372 11691 0
3388 -3373 11691 0
3390 -3375 11691 0
3392 -3377 11691 0
3394 -3379 11691 0
3396 -3381 11691 0
3398 -3383 11691 0
3400 -3385 11691 0
c ((max_left_00002_00007_00006<max_left_00002_00007_00007)=tv=SATLiteral(11692))
-3402 -11692 0
3387 -3403 -11692 0
3388 -3405 -11692 0
3390 -3407 -11692 0
3392 -3409 -11692 0
3394 -3411 -11692 0
3396 -3413 -11692 0
3398 -3415 -11692 0
3400 -11692 0
3402 -3387 11692 0
3403 -3388 11692 0
3405 -3390 11692 0
3407 -3392 11692 0
3409 -3394 11692 0
3411 -3396 11692 0
3413 -3398 11692 0
3415 -3400 11692 0
c ((max_left_00002_00007_00007<max_left_00002_00007_00008)=tv=SATLiteral(11693))
-3417 -11693 0
3402 -3418 -11693 0
3403 -3420 -11693 0
3405 -3422 -11693 0
3407 -3424 -11693 0
3409 -3426 -11693 0
3411 -3428 -11693 0
3413 -3430 -11693 0
3415 -11693 0
3417 -3402 11693 0
3418 -3403 11693 0
3420 -3405 11693 0
3422 -3407 11693 0
3424 -3409 11693 0
3426 -3411 11693 0
3428 -3413 11693 0
3430 -3415 11693 0
c ((max_left_00002_00007_00008<max_left_00002_00007_00009)=tv=SATLiteral(11694))
-3432 -11694 0
3417 -3433 -11694 0
3418 -3435 -11694 0
3420 -3437 -11694 0
3422 -3439 -11694 0
3424 -3441 -11694 0
3426 -3443 -11694 0
3428 -3445 -11694 0
3430 -11694 0
3432 -3417 11694 0
3433 -3418 11694 0
3435 -3420 11694 0
3437 -3422 11694 0
3439 -3424 11694 0
3441 -3426 11694 0
3443 -3428 11694 0
3445 -3430 11694 0
c ((max_left_00002_00008_00001<max_left_00002_00008_00002)=tv=SATLiteral(11695))
-3463 -11695 0
3448 -3464 -11695 0
3449 -3466 -11695 0
3451 -3468 -11695 0
3453 -3470 -11695 0
3455 -3472 -11695 0
3457 -3474 -11695 0
3459 -3476 -11695 0
3461 -11695 0
3463 -3448 11695 0
3464 -3449 11695 0
3466 -3451 11695 0
3468 -3453 11695 0
3470 -3455 11695 0
3472 -3457 11695 0
3474 -3459 11695 0
3476 -3461 11695 0
c ((max_left_00002_00008_00002<max_left_00002_00008_00003)=tv=SATLiteral(11696))
-3478 -11696 0
3463 -3479 -11696 0
3464 -3481 -11696 0
3466 -3483 -11696 0
3468 -3485 -11696 0
3470 -3487 -11696 0
3472 -3489 -11696 0
3474 -3491 -11696 0
3476 -11696 0
3478 -3463 11696 0
3479 -3464 11696 0
3481 -3466 11696 0
3483 -3468 11696 0
3485 -3470 11696 0
3487 -3472 11696 0
3489 -3474 11696 0
3491 -3476 11696 0
c ((max_left_00002_00008_00003<max_left_00002_00008_00004)=tv=SATLiteral(11697))
-3493 -11697 0
3478 -3494 -11697 0
3479 -3496 -11697 0
3481 -3498 -11697 0
3483 -3500 -11697 0
3485 -3502 -11697 0
3487 -3504 -11697 0
3489 -3506 -11697 0
3491 -11697 0
3493 -3478 11697 0
3494 -3479 11697 0
3496 -3481 11697 0
3498 -3483 11697 0
3500 -3485 11697 0
3502 -3487 11697 0
3504 -3489 11697 0
3506 -3491 11697 0
c ((max_left_00002_00008_00004<max_left_00002_00008_00005)=tv=SATLiteral(11698))
-3508 -11698 0
3493 -3509 -11698 0
3494 -3511 -11698 0
3496 -3513 -11698 0
3498 -3515 -11698 0
3500 -3517 -11698 0
3502 -3519 -11698 0
3504 -3521 -11698 0
3506 -11698 0
3508 -3493 11698 0
3509 -3494 11698 0
3511 -3496 11698 0
3513 -3498 11698 0
3515 -3500 11698 0
3517 -3502 11698 0
3519 -3504 11698 0
3521 -3506 11698 0
c ((max_left_00002_00008_00005<max_left_00002_00008_00006)=tv=SATLiteral(11699))
-3523 -11699 0
3508 -3524 -11699 0
3509 -3526 -11699 0
3511 -3528 -11699 0
3513 -3530 -11699 0
3515 -3532 -11699 0
3517 -3534 -11699 0
3519 -3536 -11699 0
3521 -11699 0
3523 -3508 11699 0
3524 -3509 11699 0
3526 -3511 11699 0
3528 -3513 11699 0
3530 -3515 11699 0
3532 -3517 11699 0
3534 -3519 11699 0
3536 -3521 11699 0
c ((max_left_00002_00008_00006<max_left_00002_00008_00007)=tv=SATLiteral(11700))
-3538 -11700 0
3523 -3539 -11700 0
3524 -3541 -11700 0
3526 -3543 -11700 0
3528 -3545 -11700 0
3530 -3547 -11700 0
3532 -3549 -11700 0
3534 -3551 -11700 0
3536 -11700 0
3538 -3523 11700 0
3539 -3524 11700 0
3541 -3526 11700 0
3543 -3528 11700 0
3545 -3530 11700 0
3547 -3532 11700 0
3549 -3534 11700 0
3551 -3536 11700 0
c ((max_left_00002_00008_00007<max_left_00002_00008_00008)=tv=SATLiteral(11701))
-3553 -11701 0
3538 -3554 -11701 0
3539 -3556 -11701 0
3541 -3558 -11701 0
3543 -3560 -11701 0
3545 -3562 -11701 0
3547 -3564 -11701 0
3549 -3566 -11701 0
3551 -11701 0
3553 -3538 11701 0
3554 -3539 11701 0
3556 -3541 11701 0
3558 -3543 11701 0
3560 -3545 11701 0
3562 -3547 11701 0
3564 -3549 11701 0
3566 -3551 11701 0
c ((max_left_00002_00008_00008<max_left_00002_00008_00009)=tv=SATLiteral(11702))
-3568 -11702 0
3553 -3569 -11702 0
3554 -3571 -11702 0
3556 -3573 -11702 0
3558 -3575 -11702 0
3560 -3577 -11702 0
3562 -3579 -11702 0
3564 -3581 -11702 0
3566 -11702 0
3568 -3553 11702 0
3569 -3554 11702 0
3571 -3556 11702 0
3573 -3558 11702 0
3575 -3560 11702 0
3577 -3562 11702 0
3579 -3564 11702 0
3581 -3566 11702 0
c ((max_left_00002_00009_00001<max_left_00002_00009_00002)=tv=SATLiteral(11703))
-3599 -11703 0
3584 -3600 -11703 0
3585 -3602 -11703 0
3587 -3604 -11703 0
3589 -3606 -11703 0
3591 -3608 -11703 0
3593 -3610 -11703 0
3595 -3612 -11703 0
3597 -11703 0
3599 -3584 11703 0
3600 -3585 11703 0
3602 -3587 11703 0
3604 -3589 11703 0
3606 -3591 11703 0
3608 -3593 11703 0
3610 -3595 11703 0
3612 -3597 11703 0
c ((max_left_00002_00009_00002<max_left_00002_00009_00003)=tv=SATLiteral(11704))
-3614 -11704 0
3599 -3615 -11704 0
3600 -3617 -11704 0
3602 -3619 -11704 0
3604 -3621 -11704 0
3606 -3623 -11704 0
3608 -3625 -11704 0
3610 -3627 -11704 0
3612 -11704 0
3614 -3599 11704 0
3615 -3600 11704 0
3617 -3602 11704 0
3619 -3604 11704 0
3621 -3606 11704 0
3623 -3608 11704 0
3625 -3610 11704 0
3627 -3612 11704 0
c ((max_left_00002_00009_00003<max_left_00002_00009_00004)=tv=SATLiteral(11705))
-3629 -11705 0
3614 -3630 -11705 0
3615 -3632 -11705 0
3617 -3634 -11705 0
3619 -3636 -11705 0
3621 -3638 -11705 0
3623 -3640 -11705 0
3625 -3642 -11705 0
3627 -11705 0
3629 -3614 11705 0
3630 -3615 11705 0
3632 -3617 11705 0
3634 -3619 11705 0
3636 -3621 11705 0
3638 -3623 11705 0
3640 -3625 11705 0
3642 -3627 11705 0
c ((max_left_00002_00009_00004<max_left_00002_00009_00005)=tv=SATLiteral(11706))
-3644 -11706 0
3629 -3645 -11706 0
3630 -3647 -11706 0
3632 -3649 -11706 0
3634 -3651 -11706 0
3636 -3653 -11706 0
3638 -3655 -11706 0
3640 -3657 -11706 0
3642 -11706 0
3644 -3629 11706 0
3645 -3630 11706 0
3647 -3632 11706 0
3649 -3634 11706 0
3651 -3636 11706 0
3653 -3638 11706 0
3655 -3640 11706 0
3657 -3642 11706 0
c ((max_left_00002_00009_00005<max_left_00002_00009_00006)=tv=SATLiteral(11707))
-3659 -11707 0
3644 -3660 -11707 0
3645 -3662 -11707 0
3647 -3664 -11707 0
3649 -3666 -11707 0
3651 -3668 -11707 0
3653 -3670 -11707 0
3655 -3672 -11707 0
3657 -11707 0
3659 -3644 11707 0
3660 -3645 11707 0
3662 -3647 11707 0
3664 -3649 11707 0
3666 -3651 11707 0
3668 -3653 11707 0
3670 -3655 11707 0
3672 -3657 11707 0
c ((max_left_00002_00009_00006<max_left_00002_00009_00007)=tv=SATLiteral(11708))
-3674 -11708 0
3659 -3675 -11708 0
3660 -3677 -11708 0
3662 -3679 -11708 0
3664 -3681 -11708 0
3666 -3683 -11708 0
3668 -3685 -11708 0
3670 -3687 -11708 0
3672 -11708 0
3674 -3659 11708 0
3675 -3660 11708 0
3677 -3662 11708 0
3679 -3664 11708 0
3681 -3666 11708 0
3683 -3668 11708 0
3685 -3670 11708 0
3687 -3672 11708 0
c ((max_left_00002_00009_00007<max_left_00002_00009_00008)=tv=SATLiteral(11709))
-3689 -11709 0
3674 -3690 -11709 0
3675 -3692 -11709 0
3677 -3694 -11709 0
3679 -3696 -11709 0
3681 -3698 -11709 0
3683 -3700 -11709 0
3685 -3702 -11709 0
3687 -11709 0
3689 -3674 11709 0
3690 -3675 11709 0
3692 -3677 11709 0
3694 -3679 11709 0
3696 -3681 11709 0
3698 -3683 11709 0
3700 -3685 11709 0
3702 -3687 11709 0
c ((max_left_00002_00009_00008<max_left_00002_00009_00009)=tv=SATLiteral(11710))
-3704 -11710 0
3689 -3705 -11710 0
3690 -3707 -11710 0
3692 -3709 -11710 0
3694 -3711 -11710 0
3696 -3713 -11710 0
3698 -3715 -11710 0
3700 -3717 -11710 0
3702 -11710 0
3704 -3689 11710 0
3705 -3690 11710 0
3707 -3692 11710 0
3709 -3694 11710 0
3711 -3696 11710 0
3713 -3698 11710 0
3715 -3700 11710 0
3717 -3702 11710 0
c ((max_left_00003_00001_00001<max_left_00003_00001_00002)=tv=SATLiteral(11711))
-3735 -11711 0
3720 -3736 -11711 0
3721 -3738 -11711 0
3723 -3740 -11711 0
3725 -3742 -11711 0
3727 -3744 -11711 0
3729 -3746 -11711 0
3731 -3748 -11711 0
3733 -11711 0
3735 -3720 11711 0
3736 -3721 11711 0
3738 -3723 11711 0
3740 -3725 11711 0
3742 -3727 11711 0
3744 -3729 11711 0
3746 -3731 11711 0
3748 -3733 11711 0
c ((max_left_00003_00001_00002<max_left_00003_00001_00003)=tv=SATLiteral(11712))
-3750 -11712 0
3735 -3751 -11712 0
3736 -3753 -11712 0
3738 -3755 -11712 0
3740 -3757 -11712 0
3742 -3759 -11712 0
3744 -3761 -11712 0
3746 -3763 -11712 0
3748 -11712 0
3750 -3735 11712 0
3751 -3736 11712 0
3753 -3738 11712 0
3755 -3740 11712 0
3757 -3742 11712 0
3759 -3744 11712 0
3761 -3746 11712 0
3763 -3748 11712 0
c ((max_left_00003_00001_00003<max_left_00003_00001_00004)=tv=SATLiteral(11713))
-3765 -11713 0
3750 -3766 -11713 0
3751 -3768 -11713 0
3753 -3770 -11713 0
3755 -3772 -11713 0
3757 -3774 -11713 0
3759 -3776 -11713 0
3761 -3778 -11713 0
3763 -11713 0
3765 -3750 11713 0
3766 -3751 11713 0
3768 -3753 11713 0
3770 -3755 11713 0
3772 -3757 11713 0
3774 -3759 11713 0
3776 -3761 11713 0
3778 -3763 11713 0
c ((max_left_00003_00001_00004<max_left_00003_00001_00005)=tv=SATLiteral(11714))
-3780 -11714 0
3765 -3781 -11714 0
3766 -3783 -11714 0
3768 -3785 -11714 0
3770 -3787 -11714 0
3772 -3789 -11714 0
3774 -3791 -11714 0
3776 -3793 -11714 0
3778 -11714 0
3780 -3765 11714 0
3781 -3766 11714 0
3783 -3768 11714 0
3785 -3770 11714 0
3787 -3772 11714 0
3789 -3774 11714 0
3791 -3776 11714 0
3793 -3778 11714 0
c ((max_left_00003_00001_00005<max_left_00003_00001_00006)=tv=SATLiteral(11715))
-3795 -11715 0
3780 -3796 -11715 0
3781 -3798 -11715 0
3783 -3800 -11715 0
3785 -3802 -11715 0
3787 -3804 -11715 0
3789 -3806 -11715 0
3791 -3808 -11715 0
3793 -11715 0
3795 -3780 11715 0
3796 -3781 11715 0
3798 -3783 11715 0
3800 -3785 11715 0
3802 -3787 11715 0
3804 -3789 11715 0
3806 -3791 11715 0
3808 -3793 11715 0
c ((max_left_00003_00001_00006<max_left_00003_00001_00007)=tv=SATLiteral(11716))
-3810 -11716 0
3795 -3811 -11716 0
3796 -3813 -11716 0
3798 -3815 -11716 0
3800 -3817 -11716 0
3802 -3819 -11716 0
3804 -3821 -11716 0
3806 -3823 -11716 0
3808 -11716 0
3810 -3795 11716 0
3811 -3796 11716 0
3813 -3798 11716 0
3815 -3800 11716 0
3817 -3802 11716 0
3819 -3804 11716 0
3821 -3806 11716 0
3823 -3808 11716 0
c ((max_left_00003_00001_00007<max_left_00003_00001_00008)=tv=SATLiteral(11717))
-3825 -11717 0
3810 -3826 -11717 0
3811 -3828 -11717 0
3813 -3830 -11717 0
3815 -3832 -11717 0
3817 -3834 -11717 0
3819 -3836 -11717 0
3821 -3838 -11717 0
3823 -11717 0
3825 -3810 11717 0
3826 -3811 11717 0
3828 -3813 11717 0
3830 -3815 11717 0
3832 -3817 11717 0
3834 -3819 11717 0
3836 -3821 11717 0
3838 -3823 11717 0
c ((max_left_00003_00001_00008<max_left_00003_00001_00009)=tv=SATLiteral(11718))
-3840 -11718 0
3825 -3841 -11718 0
3826 -3843 -11718 0
3828 -3845 -11718 0
3830 -3847 -11718 0
3832 -3849 -11718 0
3834 -3851 -11718 0
3836 -3853 -11718 0
3838 -11718 0
3840 -3825 11718 0
3841 -3826 11718 0
3843 -3828 11718 0
3845 -3830 11718 0
3847 -3832 11718 0
3849 -3834 11718 0
3851 -3836 11718 0
3853 -3838 11718 0
c ((max_left_00003_00002_00001<max_left_00003_00002_00002)=tv=SATLiteral(11719))
-3871 -11719 0
3856 -3872 -11719 0
3857 -3874 -11719 0
3859 -3876 -11719 0
3861 -3878 -11719 0
3863 -3880 -11719 0
3865 -3882 -11719 0
3867 -3884 -11719 0
3869 -11719 0
3871 -3856 11719 0
3872 -3857 11719 0
3874 -3859 11719 0
3876 -3861 11719 0
3878 -3863 11719 0
3880 -3865 11719 0
3882 -3867 11719 0
3884 -3869 11719 0
c ((max_left_00003_00002_00002<max_left_00003_00002_00003)=tv=SATLiteral(11720))
-3886 -11720 0
3871 -3887 -11720 0
3872 -3889 -11720 0
3874 -3891 -11720 0
3876 -3893 -11720 0
3878 -3895 -11720 0
3880 -3897 -11720 0
3882 -3899 -11720 0
3884 -11720 0
3886 -3871 11720 0
3887 -3872 11720 0
3889 -3874 11720 0
3891 -3876 11720 0
3893 -3878 11720 0
3895 -3880 11720 0
3897 -3882 11720 0
3899 -3884 11720 0
c ((max_left_00003_00002_00003<max_left_00003_00002_00004)=tv=SATLiteral(11721))
-3901 -11721 0
3886 -3902 -11721 0
3887 -3904 -11721 0
3889 -3906 -11721 0
3891 -3908 -11721 0
3893 -3910 -11721 0
3895 -3912 -11721 0
3897 -3914 -11721 0
3899 -11721 0
3901 -3886 11721 0
3902 -3887 11721 0
3904 -3889 11721 0
3906 -3891 11721 0
3908 -3893 11721 0
3910 -3895 11721 0
3912 -3897 11721 0
3914 -3899 11721 0
c ((max_left_00003_00002_00004<max_left_00003_00002_00005)=tv=SATLiteral(11722))
-3916 -11722 0
3901 -3917 -11722 0
3902 -3919 -11722 0
3904 -3921 -11722 0
3906 -3923 -11722 0
3908 -3925 -11722 0
3910 -3927 -11722 0
3912 -3929 -11722 0
3914 -11722 0
3916 -3901 11722 0
3917 -3902 11722 0
3919 -3904 11722 0
3921 -3906 11722 0
3923 -3908 11722 0
3925 -3910 11722 0
3927 -3912 11722 0
3929 -3914 11722 0
c ((max_left_00003_00002_00005<max_left_00003_00002_00006)=tv=SATLiteral(11723))
-3931 -11723 0
3916 -3932 -11723 0
3917 -3934 -11723 0
3919 -3936 -11723 0
3921 -3938 -11723 0
3923 -3940 -11723 0
3925 -3942 -11723 0
3927 -3944 -11723 0
3929 -11723 0
3931 -3916 11723 0
3932 -3917 11723 0
3934 -3919 11723 0
3936 -3921 11723 0
3938 -3923 11723 0
3940 -3925 11723 0
3942 -3927 11723 0
3944 -3929 11723 0
c ((max_left_00003_00002_00006<max_left_00003_00002_00007)=tv=SATLiteral(11724))
-3946 -11724 0
3931 -3947 -11724 0
3932 -3949 -11724 0
3934 -3951 -11724 0
3936 -3953 -11724 0
3938 -3955 -11724 0
3940 -3957 -11724 0
3942 -3959 -11724 0
3944 -11724 0
3946 -3931 11724 0
3947 -3932 11724 0
3949 -3934 11724 0
3951 -3936 11724 0
3953 -3938 11724 0
3955 -3940 11724 0
3957 -3942 11724 0
3959 -3944 11724 0
c ((max_left_00003_00002_00007<max_left_00003_00002_00008)=tv=SATLiteral(11725))
-3961 -11725 0
3946 -3962 -11725 0
3947 -3964 -11725 0
3949 -3966 -11725 0
3951 -3968 -11725 0
3953 -3970 -11725 0
3955 -3972 -11725 0
3957 -3974 -11725 0
3959 -11725 0
3961 -3946 11725 0
3962 -3947 11725 0
3964 -3949 11725 0
3966 -3951 11725 0
3968 -3953 11725 0
3970 -3955 11725 0
3972 -3957 11725 0
3974 -3959 11725 0
c ((max_left_00003_00002_00008<max_left_00003_00002_00009)=tv=SATLiteral(11726))
-3976 -11726 0
3961 -3977 -11726 0
3962 -3979 -11726 0
3964 -3981 -11726 0
3966 -3983 -11726 0
3968 -3985 -11726 0
3970 -3987 -11726 0
3972 -3989 -11726 0
3974 -11726 0
3976 -3961 11726 0
3977 -3962 11726 0
3979 -3964 11726 0
3981 -3966 11726 0
3983 -3968 11726 0
3985 -3970 11726 0
3987 -3972 11726 0
3989 -3974 11726 0
c ((max_left_00003_00003_00001<max_left_00003_00003_00002)=tv=SATLiteral(11727))
-4007 -11727 0
3992 -4008 -11727 0
3993 -4010 -11727 0
3995 -4012 -11727 0
3997 -4014 -11727 0
3999 -4016 -11727 0
4001 -4018 -11727 0
4003 -4020 -11727 0
4005 -11727 0
4007 -3992 11727 0
4008 -3993 11727 0
4010 -3995 11727 0
4012 -3997 11727 0
4014 -3999 11727 0
4016 -4001 11727 0
4018 -4003 11727 0
4020 -4005 11727 0
c ((max_left_00003_00003_00002<max_left_00003_00003_00003)=tv=SATLiteral(11728))
-4022 -11728 0
4007 -4023 -11728 0
4008 -4025 -11728 0
4010 -4027 -11728 0
4012 -4029 -11728 0
4014 -4031 -11728 0
4016 -4033 -11728 0
4018 -4035 -11728 0
4020 -11728 0
4022 -4007 11728 0
4023 -4008 11728 0
4025 -4010 11728 0
4027 -4012 11728 0
4029 -4014 11728 0
4031 -4016 11728 0
4033 -4018 11728 0
4035 -4020 11728 0
c ((max_left_00003_00003_00003<max_left_00003_00003_00004)=tv=SATLiteral(11729))
-4037 -11729 0
4022 -4038 -11729 0
4023 -4040 -11729 0
4025 -4042 -11729 0
4027 -4044 -11729 0
4029 -4046 -11729 0
4031 -4048 -11729 0
4033 -4050 -11729 0
4035 -11729 0
4037 -4022 11729 0
4038 -4023 11729 0
4040 -4025 11729 0
4042 -4027 11729 0
4044 -4029 11729 0
4046 -4031 11729 0
4048 -4033 11729 0
4050 -4035 11729 0
c ((max_left_00003_00003_00004<max_left_00003_00003_00005)=tv=SATLiteral(11730))
-4052 -11730 0
4037 -4053 -11730 0
4038 -4055 -11730 0
4040 -4057 -11730 0
4042 -4059 -11730 0
4044 -4061 -11730 0
4046 -4063 -11730 0
4048 -4065 -11730 0
4050 -11730 0
4052 -4037 11730 0
4053 -4038 11730 0
4055 -4040 11730 0
4057 -4042 11730 0
4059 -4044 11730 0
4061 -4046 11730 0
4063 -4048 11730 0
4065 -4050 11730 0
c ((max_left_00003_00003_00005<max_left_00003_00003_00006)=tv=SATLiteral(11731))
-4067 -11731 0
4052 -4068 -11731 0
4053 -4070 -11731 0
4055 -4072 -11731 0
4057 -4074 -11731 0
4059 -4076 -11731 0
4061 -4078 -11731 0
4063 -4080 -11731 0
4065 -11731 0
4067 -4052 11731 0
4068 -4053 11731 0
4070 -4055 11731 0
4072 -4057 11731 0
4074 -4059 11731 0
4076 -4061 11731 0
4078 -4063 11731 0
4080 -4065 11731 0
c ((max_left_00003_00003_00006<max_left_00003_00003_00007)=tv=SATLiteral(11732))
-4082 -11732 0
4067 -4083 -11732 0
4068 -4085 -11732 0
4070 -4087 -11732 0
4072 -4089 -11732 0
4074 -4091 -11732 0
4076 -4093 -11732 0
4078 -4095 -11732 0
4080 -11732 0
4082 -4067 11732 0
4083 -4068 11732 0
4085 -4070 11732 0
4087 -4072 11732 0
4089 -4074 11732 0
4091 -4076 11732 0
4093 -4078 11732 0
4095 -4080 11732 0
c ((max_left_00003_00003_00007<max_left_00003_00003_00008)=tv=SATLiteral(11733))
-4097 -11733 0
4082 -4098 -11733 0
4083 -4100 -11733 0
4085 -4102 -11733 0
4087 -4104 -11733 0
4089 -4106 -11733 0
4091 -4108 -11733 0
4093 -4110 -11733 0
4095 -11733 0
4097 -4082 11733 0
4098 -4083 11733 0
4100 -4085 11733 0
4102 -4087 11733 0
4104 -4089 11733 0
4106 -4091 11733 0
4108 -4093 11733 0
4110 -4095 11733 0
c ((max_left_00003_00003_00008<max_left_00003_00003_00009)=tv=SATLiteral(11734))
-4112 -11734 0
4097 -4113 -11734 0
4098 -4115 -11734 0
4100 -4117 -11734 0
4102 -4119 -11734 0
4104 -4121 -11734 0
4106 -4123 -11734 0
4108 -4125 -11734 0
4110 -11734 0
4112 -4097 11734 0
4113 -4098 11734 0
4115 -4100 11734 0
4117 -4102 11734 0
4119 -4104 11734 0
4121 -4106 11734 0
4123 -4108 11734 0
4125 -4110 11734 0
c ((max_left_00003_00004_00001<max_left_00003_00004_00002)=tv=SATLiteral(11735))
-4143 -11735 0
4128 -4144 -11735 0
4129 -4146 -11735 0
4131 -4148 -11735 0
4133 -4150 -11735 0
4135 -4152 -11735 0
4137 -4154 -11735 0
4139 -4156 -11735 0
4141 -11735 0
4143 -4128 11735 0
4144 -4129 11735 0
4146 -4131 11735 0
4148 -4133 11735 0
4150 -4135 11735 0
4152 -4137 11735 0
4154 -4139 11735 0
4156 -4141 11735 0
c ((max_left_00003_00004_00002<max_left_00003_00004_00003)=tv=SATLiteral(11736))
-4158 -11736 0
4143 -4159 -11736 0
4144 -4161 -11736 0
4146 -4163 -11736 0
4148 -4165 -11736 0
4150 -4167 -11736 0
4152 -4169 -11736 0
4154 -4171 -11736 0
4156 -11736 0
4158 -4143 11736 0
4159 -4144 11736 0
4161 -4146 11736 0
4163 -4148 11736 0
4165 -4150 11736 0
4167 -4152 11736 0
4169 -4154 11736 0
4171 -4156 11736 0
c ((max_left_00003_00004_00003<max_left_00003_00004_00004)=tv=SATLiteral(11737))
-4173 -11737 0
4158 -4174 -11737 0
4159 -4176 -11737 0
4161 -4178 -11737 0
4163 -4180 -11737 0
4165 -4182 -11737 0
4167 -4184 -11737 0
4169 -4186 -11737 0
4171 -11737 0
4173 -4158 11737 0
4174 -4159 11737 0
4176 -4161 11737 0
4178 -4163 11737 0
4180 -4165 11737 0
4182 -4167 11737 0
4184 -4169 11737 0
4186 -4171 11737 0
c ((max_left_00003_00004_00004<max_left_00003_00004_00005)=tv=SATLiteral(11738))
-4188 -11738 0
4173 -4189 -11738 0
4174 -4191 -11738 0
4176 -4193 -11738 0
4178 -4195 -11738 0
4180 -4197 -11738 0
4182 -4199 -11738 0
4184 -4201 -11738 0
4186 -11738 0
4188 -4173 11738 0
4189 -4174 11738 0
4191 -4176 11738 0
4193 -4178 11738 0
4195 -4180 11738 0
4197 -4182 11738 0
4199 -4184 11738 0
4201 -4186 11738 0
c ((max_left_00003_00004_00005<max_left_00003_00004_00006)=tv=SATLiteral(11739))
-4203 -11739 0
4188 -4204 -11739 0
4189 -4206 -11739 0
4191 -4208 -11739 0
4193 -4210 -11739 0
4195 -4212 -11739 0
4197 -4214 -11739 0
4199 -4216 -11739 0
4201 -11739 0
4203 -4188 11739 0
4204 -4189 11739 0
4206 -4191 11739 0
4208 -4193 11739 0
4210 -4195 11739 0
4212 -4197 11739 0
4214 -4199 11739 0
4216 -4201 11739 0
c ((max_left_00003_00004_00006<max_left_00003_00004_00007)=tv=SATLiteral(11740))
-4218 -11740 0
4203 -4219 -11740 0
4204 -4221 -11740 0
4206 -4223 -11740 0
4208 -4225 -11740 0
4210 -4227 -11740 0
4212 -4229 -11740 0
4214 -4231 -11740 0
4216 -11740 0
4218 -4203 11740 0
4219 -4204 11740 0
4221 -4206 11740 0
4223 -4208 11740 0
4225 -4210 11740 0
4227 -4212 11740 0
4229 -4214 11740 0
4231 -4216 11740 0
c ((max_left_00003_00004_00007<max_left_00003_00004_00008)=tv=SATLiteral(11741))
-4233 -11741 0
4218 -4234 -11741 0
4219 -4236 -11741 0
4221 -4238 -11741 0
4223 -4240 -11741 0
4225 -4242 -11741 0
4227 -4244 -11741 0
4229 -4246 -11741 0
4231 -11741 0
4233 -4218 11741 0
4234 -4219 11741 0
4236 -4221 11741 0
4238 -4223 11741 0
4240 -4225 11741 0
4242 -4227 11741 0
4244 -4229 11741 0
4246 -4231 11741 0
c ((max_left_00003_00004_00008<max_left_00003_00004_00009)=tv=SATLiteral(11742))
-4248 -11742 0
4233 -4249 -11742 0
4234 -4251 -11742 0
4236 -4253 -11742 0
4238 -4255 -11742 0
4240 -4257 -11742 0
4242 -4259 -11742 0
4244 -4261 -11742 0
4246 -11742 0
4248 -4233 11742 0
4249 -4234 11742 0
4251 -4236 11742 0
4253 -4238 11742 0
4255 -4240 11742 0
4257 -4242 11742 0
4259 -4244 11742 0
4261 -4246 11742 0
c ((max_left_00003_00005_00001<max_left_00003_00005_00002)=tv=SATLiteral(11743))
-4279 -11743 0
4264 -4280 -11743 0
4265 -4282 -11743 0
4267 -4284 -11743 0
4269 -4286 -11743 0
4271 -4288 -11743 0
4273 -4290 -11743 0
4275 -4292 -11743 0
4277 -11743 0
4279 -4264 11743 0
4280 -4265 11743 0
4282 -4267 11743 0
4284 -4269 11743 0
4286 -4271 11743 0
4288 -4273 11743 0
4290 -4275 11743 0
4292 -4277 11743 0
c ((max_left_00003_00005_00002<max_left_00003_00005_00003)=tv=SATLiteral(11744))
-4294 -11744 0
4279 -4295 -11744 0
4280 -4297 -11744 0
4282 -4299 -11744 0
4284 -4301 -11744 0
4286 -4303 -11744 0
4288 -4305 -11744 0
4290 -4307 -11744 0
4292 -11744 0
4294 -4279 11744 0
4295 -4280 11744 0
4297 -4282 11744 0
4299 -4284 11744 0
4301 -4286 11744 0
4303 -4288 11744 0
4305 -4290 11744 0
4307 -4292 11744 0
c ((max_left_00003_00005_00003<max_left_00003_00005_00004)=tv=SATLiteral(11745))
-4309 -11745 0
4294 -4310 -11745 0
4295 -4312 -11745 0
4297 -4314 -11745 0
4299 -4316 -11745 0
4301 -4318 -11745 0
4303 -4320 -11745 0
4305 -4322 -11745 0
4307 -11745 0
4309 -4294 11745 0
4310 -4295 11745 0
4312 -4297 11745 0
4314 -4299 11745 0
4316 -4301 11745 0
4318 -4303 11745 0
4320 -4305 11745 0
4322 -4307 11745 0
c ((max_left_00003_00005_00004<max_left_00003_00005_00005)=tv=SATLiteral(11746))
-4324 -11746 0
4309 -4325 -11746 0
4310 -4327 -11746 0
4312 -4329 -11746 0
4314 -4331 -11746 0
4316 -4333 -11746 0
4318 -4335 -11746 0
4320 -4337 -11746 0
4322 -11746 0
4324 -4309 11746 0
4325 -4310 11746 0
4327 -4312 11746 0
4329 -4314 11746 0
4331 -4316 11746 0
4333 -4318 11746 0
4335 -4320 11746 0
4337 -4322 11746 0
c ((max_left_00003_00005_00005<max_left_00003_00005_00006)=tv=SATLiteral(11747))
-4339 -11747 0
4324 -4340 -11747 0
4325 -4342 -11747 0
4327 -4344 -11747 0
4329 -4346 -11747 0
4331 -4348 -11747 0
4333 -4350 -11747 0
4335 -4352 -11747 0
4337 -11747 0
4339 -4324 11747 0
4340 -4325 11747 0
4342 -4327 11747 0
4344 -4329 11747 0
4346 -4331 11747 0
4348 -4333 11747 0
4350 -4335 11747 0
4352 -4337 11747 0
c ((max_left_00003_00005_00006<max_left_00003_00005_00007)=tv=SATLiteral(11748))
-4354 -11748 0
4339 -4355 -11748 0
4340 -4357 -11748 0
4342 -4359 -11748 0
4344 -4361 -11748 0
4346 -4363 -11748 0
4348 -4365 -11748 0
4350 -4367 -11748 0
4352 -11748 0
4354 -4339 11748 0
4355 -4340 11748 0
4357 -4342 11748 0
4359 -4344 11748 0
4361 -4346 11748 0
4363 -4348 11748 0
4365 -4350 11748 0
4367 -4352 11748 0
c ((max_left_00003_00005_00007<max_left_00003_00005_00008)=tv=SATLiteral(11749))
-4369 -11749 0
4354 -4370 -11749 0
4355 -4372 -11749 0
4357 -4374 -11749 0
4359 -4376 -11749 0
4361 -4378 -11749 0
4363 -4380 -11749 0
4365 -4382 -11749 0
4367 -11749 0
4369 -4354 11749 0
4370 -4355 11749 0
4372 -4357 11749 0
4374 -4359 11749 0
4376 -4361 11749 0
4378 -4363 11749 0
4380 -4365 11749 0
4382 -4367 11749 0
c ((max_left_00003_00005_00008<max_left_00003_00005_00009)=tv=SATLiteral(11750))
-4384 -11750 0
4369 -4385 -11750 0
4370 -4387 -11750 0
4372 -4389 -11750 0
4374 -4391 -11750 0
4376 -4393 -11750 0
4378 -4395 -11750 0
4380 -4397 -11750 0
4382 -11750 0
4384 -4369 11750 0
4385 -4370 11750 0
4387 -4372 11750 0
4389 -4374 11750 0
4391 -4376 11750 0
4393 -4378 11750 0
4395 -4380 11750 0
4397 -4382 11750 0
c ((max_left_00003_00006_00001<max_left_00003_00006_00002)=tv=SATLiteral(11751))
-4415 -11751 0
4400 -4416 -11751 0
4401 -4418 -11751 0
4403 -4420 -11751 0
4405 -4422 -11751 0
4407 -4424 -11751 0
4409 -4426 -11751 0
4411 -4428 -11751 0
4413 -11751 0
4415 -4400 11751 0
4416 -4401 11751 0
4418 -4403 11751 0
4420 -4405 11751 0
4422 -4407 11751 0
4424 -4409 11751 0
4426 -4411 11751 0
4428 -4413 11751 0
c ((max_left_00003_00006_00002<max_left_00003_00006_00003)=tv=SATLiteral(11752))
-4430 -11752 0
4415 -4431 -11752 0
4416 -4433 -11752 0
4418 -4435 -11752 0
4420 -4437 -11752 0
4422 -4439 -11752 0
4424 -4441 -11752 0
4426 -4443 -11752 0
4428 -11752 0
4430 -4415 11752 0
4431 -4416 11752 0
4433 -4418 11752 0
4435 -4420 11752 0
4437 -4422 11752 0
4439 -4424 11752 0
4441 -4426 11752 0
4443 -4428 11752 0
c ((max_left_00003_00006_00003<max_left_00003_00006_00004)=tv=SATLiteral(11753))
-4445 -11753 0
4430 -4446 -11753 0
4431 -4448 -11753 0
4433 -4450 -11753 0
4435 -4452 -11753 0
4437 -4454 -11753 0
4439 -4456 -11753 0
4441 -4458 -11753 0
4443 -11753 0
4445 -4430 11753 0
4446 -4431 11753 0
4448 -4433 11753 0
4450 -4435 11753 0
4452 -4437 11753 0
4454 -4439 11753 0
4456 -4441 11753 0
4458 -4443 11753 0
c ((max_left_00003_00006_00004<max_left_00003_00006_00005)=tv=SATLiteral(11754))
-4460 -11754 0
4445 -4461 -11754 0
4446 -4463 -11754 0
4448 -4465 -11754 0
4450 -4467 -11754 0
4452 -4469 -11754 0
4454 -4471 -11754 0
4456 -4473 -11754 0
4458 -11754 0
4460 -4445 11754 0
4461 -4446 11754 0
4463 -4448 11754 0
4465 -4450 11754 0
4467 -4452 11754 0
4469 -4454 11754 0
4471 -4456 11754 0
4473 -4458 11754 0
c ((max_left_00003_00006_00005<max_left_00003_00006_00006)=tv=SATLiteral(11755))
-4475 -11755 0
4460 -4476 -11755 0
4461 -4478 -11755 0
4463 -4480 -11755 0
4465 -4482 -11755 0
4467 -4484 -11755 0
4469 -4486 -11755 0
4471 -4488 -11755 0
4473 -11755 0
4475 -4460 11755 0
4476 -4461 11755 0
4478 -4463 11755 0
4480 -4465 11755 0
4482 -4467 11755 0
4484 -4469 11755 0
4486 -4471 11755 0
4488 -4473 11755 0
c ((max_left_00003_00006_00006<max_left_00003_00006_00007)=tv=SATLiteral(11756))
-4490 -11756 0
4475 -4491 -11756 0
4476 -4493 -11756 0
4478 -4495 -11756 0
4480 -4497 -11756 0
4482 -4499 -11756 0
4484 -4501 -11756 0
4486 -4503 -11756 0
4488 -11756 0
4490 -4475 11756 0
4491 -4476 11756 0
4493 -4478 11756 0
4495 -4480 11756 0
4497 -4482 11756 0
4499 -4484 11756 0
4501 -4486 11756 0
4503 -4488 11756 0
c ((max_left_00003_00006_00007<max_left_00003_00006_00008)=tv=SATLiteral(11757))
-4505 -11757 0
4490 -4506 -11757 0
4491 -4508 -11757 0
4493 -4510 -11757 0
4495 -4512 -11757 0
4497 -4514 -11757 0
4499 -4516 -11757 0
4501 -4518 -11757 0
4503 -11757 0
4505 -4490 11757 0
4506 -4491 11757 0
4508 -4493 11757 0
4510 -4495 11757 0
4512 -4497 11757 0
4514 -4499 11757 0
4516 -4501 11757 0
4518 -4503 11757 0
c ((max_left_00003_00006_00008<max_left_00003_00006_00009)=tv=SATLiteral(11758))
-4520 -11758 0
4505 -4521 -11758 0
4506 -4523 -11758 0
4508 -4525 -11758 0
4510 -4527 -11758 0
4512 -4529 -11758 0
4514 -4531 -11758 0
4516 -4533 -11758 0
4518 -11758 0
4520 -4505 11758 0
4521 -4506 11758 0
4523 -4508 11758 0
4525 -4510 11758 0
4527 -4512 11758 0
4529 -4514 11758 0
4531 -4516 11758 0
4533 -4518 11758 0
c ((max_left_00003_00007_00001<max_left_00003_00007_00002)=tv=SATLiteral(11759))
-4551 -11759 0
4536 -4552 -11759 0
4537 -4554 -11759 0
4539 -4556 -11759 0
4541 -4558 -11759 0
4543 -4560 -11759 0
4545 -4562 -11759 0
4547 -4564 -11759 0
4549 -11759 0
4551 -4536 11759 0
4552 -4537 11759 0
4554 -4539 11759 0
4556 -4541 11759 0
4558 -4543 11759 0
4560 -4545 11759 0
4562 -4547 11759 0
4564 -4549 11759 0
c ((max_left_00003_00007_00002<max_left_00003_00007_00003)=tv=SATLiteral(11760))
-4566 -11760 0
4551 -4567 -11760 0
4552 -4569 -11760 0
4554 -4571 -11760 0
4556 -4573 -11760 0
4558 -4575 -11760 0
4560 -4577 -11760 0
4562 -4579 -11760 0
4564 -11760 0
4566 -4551 11760 0
4567 -4552 11760 0
4569 -4554 11760 0
4571 -4556 11760 0
4573 -4558 11760 0
4575 -4560 11760 0
4577 -4562 11760 0
4579 -4564 11760 0
c ((max_left_00003_00007_00003<max_left_00003_00007_00004)=tv=SATLiteral(11761))
-4581 -11761 0
4566 -4582 -11761 0
4567 -4584 -11761 0
4569 -4586 -11761 0
4571 -4588 -11761 0
4573 -4590 -11761 0
4575 -4592 -11761 0
4577 -4594 -11761 0
4579 -11761 0
4581 -4566 11761 0
4582 -4567 11761 0
4584 -4569 11761 0
4586 -4571 11761 0
4588 -4573 11761 0
4590 -4575 11761 0
4592 -4577 11761 0
4594 -4579 11761 0
c ((max_left_00003_00007_00004<max_left_00003_00007_00005)=tv=SATLiteral(11762))
-4596 -11762 0
4581 -4597 -11762 0
4582 -4599 -11762 0
4584 -4601 -11762 0
4586 -4603 -11762 0
4588 -4605 -11762 0
4590 -4607 -11762 0
4592 -4609 -11762 0
4594 -11762 0
4596 -4581 11762 0
4597 -4582 11762 0
4599 -4584 11762 0
4601 -4586 11762 0
4603 -4588 11762 0
4605 -4590 11762 0
4607 -4592 11762 0
4609 -4594 11762 0
c ((max_left_00003_00007_00005<max_left_00003_00007_00006)=tv=SATLiteral(11763))
-4611 -11763 0
4596 -4612 -11763 0
4597 -4614 -11763 0
4599 -4616 -11763 0
4601 -4618 -11763 0
4603 -4620 -11763 0
4605 -4622 -11763 0
4607 -4624 -11763 0
4609 -11763 0
4611 -4596 11763 0
4612 -4597 11763 0
4614 -4599 11763 0
4616 -4601 11763 0
4618 -4603 11763 0
4620 -4605 11763 0
4622 -4607 11763 0
4624 -4609 11763 0
c ((max_left_00003_00007_00006<max_left_00003_00007_00007)=tv=SATLiteral(11764))
-4626 -11764 0
4611 -4627 -11764 0
4612 -4629 -11764 0
4614 -4631 -11764 0
4616 -4633 -11764 0
4618 -4635 -11764 0
4620 -4637 -11764 0
4622 -4639 -11764 0
4624 -11764 0
4626 -4611 11764 0
4627 -4612 11764 0
4629 -4614 11764 0
4631 -4616 11764 0
4633 -4618 11764 0
4635 -4620 11764 0
4637 -4622 11764 0
4639 -4624 11764 0
c ((max_left_00003_00007_00007<max_left_00003_00007_00008)=tv=SATLiteral(11765))
-4641 -11765 0
4626 -4642 -11765 0
4627 -4644 -11765 0
4629 -4646 -11765 0
4631 -4648 -11765 0
4633 -4650 -11765 0
4635 -4652 -11765 0
4637 -4654 -11765 0
4639 -11765 0
4641 -4626 11765 0
4642 -4627 11765 0
4644 -4629 11765 0
4646 -4631 11765 0
4648 -4633 11765 0
4650 -4635 11765 0
4652 -4637 11765 0
4654 -4639 11765 0
c ((max_left_00003_00007_00008<max_left_00003_00007_00009)=tv=SATLiteral(11766))
-4656 -11766 0
4641 -4657 -11766 0
4642 -4659 -11766 0
4644 -4661 -11766 0
4646 -4663 -11766 0
4648 -4665 -11766 0
4650 -4667 -11766 0
4652 -4669 -11766 0
4654 -11766 0
4656 -4641 11766 0
4657 -4642 11766 0
4659 -4644 11766 0
4661 -4646 11766 0
4663 -4648 11766 0
4665 -4650 11766 0
4667 -4652 11766 0
4669 -4654 11766 0
c ((max_left_00003_00008_00001<max_left_00003_00008_00002)=tv=SATLiteral(11767))
-4687 -11767 0
4672 -4688 -11767 0
4673 -4690 -11767 0
4675 -4692 -11767 0
4677 -4694 -11767 0
4679 -4696 -11767 0
4681 -4698 -11767 0
4683 -4700 -11767 0
4685 -11767 0
4687 -4672 11767 0
4688 -4673 11767 0
4690 -4675 11767 0
4692 -4677 11767 0
4694 -4679 11767 0
4696 -4681 11767 0
4698 -4683 11767 0
4700 -4685 11767 0
c ((max_left_00003_00008_00002<max_left_00003_00008_00003)=tv=SATLiteral(11768))
-4702 -11768 0
4687 -4703 -11768 0
4688 -4705 -11768 0
4690 -4707 -11768 0
4692 -4709 -11768 0
4694 -4711 -11768 0
4696 -4713 -11768 0
4698 -4715 -11768 0
4700 -11768 0
4702 -4687 11768 0
4703 -4688 11768 0
4705 -4690 11768 0
4707 -4692 11768 0
4709 -4694 11768 0
4711 -4696 11768 0
4713 -4698 11768 0
4715 -4700 11768 0
c ((max_left_00003_00008_00003<max_left_00003_00008_00004)=tv=SATLiteral(11769))
-4717 -11769 0
4702 -4718 -11769 0
4703 -4720 -11769 0
4705 -4722 -11769 0
4707 -4724 -11769 0
4709 -4726 -11769 0
4711 -4728 -11769 0
4713 -4730 -11769 0
4715 -11769 0
4717 -4702 11769 0
4718 -4703 11769 0
4720 -4705 11769 0
4722 -4707 11769 0
4724 -4709 11769 0
4726 -4711 11769 0
4728 -4713 11769 0
4730 -4715 11769 0
c ((max_left_00003_00008_00004<max_left_00003_00008_00005)=tv=SATLiteral(11770))
-4732 -11770 0
4717 -4733 -11770 0
4718 -4735 -11770 0
4720 -4737 -11770 0
4722 -4739 -11770 0
4724 -4741 -11770 0
4726 -4743 -11770 0
4728 -4745 -11770 0
4730 -11770 0
4732 -4717 11770 0
4733 -4718 11770 0
4735 -4720 11770 0
4737 -4722 11770 0
4739 -4724 11770 0
4741 -4726 11770 0
4743 -4728 11770 0
4745 -4730 11770 0
c ((max_left_00003_00008_00005<max_left_00003_00008_00006)=tv=SATLiteral(11771))
-4747 -11771 0
4732 -4748 -11771 0
4733 -4750 -11771 0
4735 -4752 -11771 0
4737 -4754 -11771 0
4739 -4756 -11771 0
4741 -4758 -11771 0
4743 -4760 -11771 0
4745 -11771 0
4747 -4732 11771 0
4748 -4733 11771 0
4750 -4735 11771 0
4752 -4737 11771 0
4754 -4739 11771 0
4756 -4741 11771 0
4758 -4743 11771 0
4760 -4745 11771 0
c ((max_left_00003_00008_00006<max_left_00003_00008_00007)=tv=SATLiteral(11772))
-4762 -11772 0
4747 -4763 -11772 0
4748 -4765 -11772 0
4750 -4767 -11772 0
4752 -4769 -11772 0
4754 -4771 -11772 0
4756 -4773 -11772 0
4758 -4775 -11772 0
4760 -11772 0
4762 -4747 11772 0
4763 -4748 11772 0
4765 -4750 11772 0
4767 -4752 11772 0
4769 -4754 11772 0
4771 -4756 11772 0
4773 -4758 11772 0
4775 -4760 11772 0
c ((max_left_00003_00008_00007<max_left_00003_00008_00008)=tv=SATLiteral(11773))
-4777 -11773 0
4762 -4778 -11773 0
4763 -4780 -11773 0
4765 -4782 -11773 0
4767 -4784 -11773 0
4769 -4786 -11773 0
4771 -4788 -11773 0
4773 -4790 -11773 0
4775 -11773 0
4777 -4762 11773 0
4778 -4763 11773 0
4780 -4765 11773 0
4782 -4767 11773 0
4784 -4769 11773 0
4786 -4771 11773 0
4788 -4773 11773 0
4790 -4775 11773 0
c ((max_left_00003_00008_00008<max_left_00003_00008_00009)=tv=SATLiteral(11774))
-4792 -11774 0
4777 -4793 -11774 0
4778 -4795 -11774 0
4780 -4797 -11774 0
4782 -4799 -11774 0
4784 -4801 -11774 0
4786 -4803 -11774 0
4788 -4805 -11774 0
4790 -11774 0
4792 -4777 11774 0
4793 -4778 11774 0
4795 -4780 11774 0
4797 -4782 11774 0
4799 -4784 11774 0
4801 -4786 11774 0
4803 -4788 11774 0
4805 -4790 11774 0
c ((max_left_00003_00009_00001<max_left_00003_00009_00002)=tv=SATLiteral(11775))
-4823 -11775 0
4808 -4824 -11775 0
4809 -4826 -11775 0
4811 -4828 -11775 0
4813 -4830 -11775 0
4815 -4832 -11775 0
4817 -4834 -11775 0
4819 -4836 -11775 0
4821 -11775 0
4823 -4808 11775 0
4824 -4809 11775 0
4826 -4811 11775 0
4828 -4813 11775 0
4830 -4815 11775 0
4832 -4817 11775 0
4834 -4819 11775 0
4836 -4821 11775 0
c ((max_left_00003_00009_00002<max_left_00003_00009_00003)=tv=SATLiteral(11776))
-4838 -11776 0
4823 -4839 -11776 0
4824 -4841 -11776 0
4826 -4843 -11776 0
4828 -4845 -11776 0
4830 -4847 -11776 0
4832 -4849 -11776 0
4834 -4851 -11776 0
4836 -11776 0
4838 -4823 11776 0
4839 -4824 11776 0
4841 -4826 11776 0
4843 -4828 11776 0
4845 -4830 11776 0
4847 -4832 11776 0
4849 -4834 11776 0
4851 -4836 11776 0
c ((max_left_00003_00009_00003<max_left_00003_00009_00004)=tv=SATLiteral(11777))
-4853 -11777 0
4838 -4854 -11777 0
4839 -4856 -11777 0
4841 -4858 -11777 0
4843 -4860 -11777 0
4845 -4862 -11777 0
4847 -4864 -11777 0
4849 -4866 -11777 0
4851 -11777 0
4853 -4838 11777 0
4854 -4839 11777 0
4856 -4841 11777 0
4858 -4843 11777 0
4860 -4845 11777 0
4862 -4847 11777 0
4864 -4849 11777 0
4866 -4851 11777 0
c ((max_left_00003_00009_00004<max_left_00003_00009_00005)=tv=SATLiteral(11778))
-4868 -11778 0
4853 -4869 -11778 0
4854 -4871 -11778 0
4856 -4873 -11778 0
4858 -4875 -11778 0
4860 -4877 -11778 0
4862 -4879 -11778 0
4864 -4881 -11778 0
4866 -11778 0
4868 -4853 11778 0
4869 -4854 11778 0
4871 -4856 11778 0
4873 -4858 11778 0
4875 -4860 11778 0
4877 -4862 11778 0
4879 -4864 11778 0
4881 -4866 11778 0
c ((max_left_00003_00009_00005<max_left_00003_00009_00006)=tv=SATLiteral(11779))
-4883 -11779 0
4868 -4884 -11779 0
4869 -4886 -11779 0
4871 -4888 -11779 0
4873 -4890 -11779 0
4875 -4892 -11779 0
4877 -4894 -11779 0
4879 -4896 -11779 0
4881 -11779 0
4883 -4868 11779 0
4884 -4869 11779 0
4886 -4871 11779 0
4888 -4873 11779 0
4890 -4875 11779 0
4892 -4877 11779 0
4894 -4879 11779 0
4896 -4881 11779 0
c ((max_left_00003_00009_00006<max_left_00003_00009_00007)=tv=SATLiteral(11780))
-4898 -11780 0
4883 -4899 -11780 0
4884 -4901 -11780 0
4886 -4903 -11780 0
4888 -4905 -11780 0
4890 -4907 -11780 0
4892 -4909 -11780 0
4894 -4911 -11780 0
4896 -11780 0
4898 -4883 11780 0
4899 -4884 11780 0
4901 -4886 11780 0
4903 -4888 11780 0
4905 -4890 11780 0
4907 -4892 11780 0
4909 -4894 11780 0
4911 -4896 11780 0
c ((max_left_00003_00009_00007<max_left_00003_00009_00008)=tv=SATLiteral(11781))
-4913 -11781 0
4898 -4914 -11781 0
4899 -4916 -11781 0
4901 -4918 -11781 0
4903 -4920 -11781 0
4905 -4922 -11781 0
4907 -4924 -11781 0
4909 -4926 -11781 0
4911 -11781 0
4913 -4898 11781 0
4914 -4899 11781 0
4916 -4901 11781 0
4918 -4903 11781 0
4920 -4905 11781 0
4922 -4907 11781 0
4924 -4909 11781 0
4926 -4911 11781 0
c ((max_left_00003_00009_00008<max_left_00003_00009_00009)=tv=SATLiteral(11782))
-4928 -11782 0
4913 -4929 -11782 0
4914 -4931 -11782 0
4916 -4933 -11782 0
4918 -4935 -11782 0
4920 -4937 -11782 0
4922 -4939 -11782 0
4924 -4941 -11782 0
4926 -11782 0
4928 -4913 11782 0
4929 -4914 11782 0
4931 -4916 11782 0
4933 -4918 11782 0
4935 -4920 11782 0
4937 -4922 11782 0
4939 -4924 11782 0
4941 -4926 11782 0
c ((max_left_00004_00001_00001<max_left_00004_00001_00002)=tv=SATLiteral(11783))
-4959 -11783 0
4944 -4960 -11783 0
4945 -4962 -11783 0
4947 -4964 -11783 0
4949 -4966 -11783 0
4951 -4968 -11783 0
4953 -4970 -11783 0
4955 -4972 -11783 0
4957 -11783 0
4959 -4944 11783 0
4960 -4945 11783 0
4962 -4947 11783 0
4964 -4949 11783 0
4966 -4951 11783 0
4968 -4953 11783 0
4970 -4955 11783 0
4972 -4957 11783 0
c ((max_left_00004_00001_00002<max_left_00004_00001_00003)=tv=SATLiteral(11784))
-4974 -11784 0
4959 -4975 -11784 0
4960 -4977 -11784 0
4962 -4979 -11784 0
4964 -4981 -11784 0
4966 -4983 -11784 0
4968 -4985 -11784 0
4970 -4987 -11784 0
4972 -11784 0
4974 -4959 11784 0
4975 -4960 11784 0
4977 -4962 11784 0
4979 -4964 11784 0
4981 -4966 11784 0
4983 -4968 11784 0
4985 -4970 11784 0
4987 -4972 11784 0
c ((max_left_00004_00001_00003<max_left_00004_00001_00004)=tv=SATLiteral(11785))
-4989 -11785 0
4974 -4990 -11785 0
4975 -4992 -11785 0
4977 -4994 -11785 0
4979 -4996 -11785 0
4981 -4998 -11785 0
4983 -5000 -11785 0
4985 -5002 -11785 0
4987 -11785 0
4989 -4974 11785 0
4990 -4975 11785 0
4992 -4977 11785 0
4994 -4979 11785 0
4996 -4981 11785 0
4998 -4983 11785 0
5000 -4985 11785 0
5002 -4987 11785 0
c ((max_left_00004_00001_00004<max_left_00004_00001_00005)=tv=SATLiteral(11786))
-5004 -11786 0
4989 -5005 -11786 0
4990 -5007 -11786 0
4992 -5009 -11786 0
4994 -5011 -11786 0
4996 -5013 -11786 0
4998 -5015 -11786 0
5000 -5017 -11786 0
5002 -11786 0
5004 -4989 11786 0
5005 -4990 11786 0
5007 -4992 11786 0
5009 -4994 11786 0
5011 -4996 11786 0
5013 -4998 11786 0
5015 -5000 11786 0
5017 -5002 11786 0
c ((max_left_00004_00001_00005<max_left_00004_00001_00006)=tv=SATLiteral(11787))
-5019 -11787 0
5004 -5020 -11787 0
5005 -5022 -11787 0
5007 -5024 -11787 0
5009 -5026 -11787 0
5011 -5028 -11787 0
5013 -5030 -11787 0
5015 -5032 -11787 0
5017 -11787 0
5019 -5004 11787 0
5020 -5005 11787 0
5022 -5007 11787 0
5024 -5009 11787 0
5026 -5011 11787 0
5028 -5013 11787 0
5030 -5015 11787 0
5032 -5017 11787 0
c ((max_left_00004_00001_00006<max_left_00004_00001_00007)=tv=SATLiteral(11788))
-5034 -11788 0
5019 -5035 -11788 0
5020 -5037 -11788 0
5022 -5039 -11788 0
5024 -5041 -11788 0
5026 -5043 -11788 0
5028 -5045 -11788 0
5030 -5047 -11788 0
5032 -11788 0
5034 -5019 11788 0
5035 -5020 11788 0
5037 -5022 11788 0
5039 -5024 11788 0
5041 -5026 11788 0
5043 -5028 11788 0
5045 -5030 11788 0
5047 -5032 11788 0
c ((max_left_00004_00001_00007<max_left_00004_00001_00008)=tv=SATLiteral(11789))
-5049 -11789 0
5034 -5050 -11789 0
5035 -5052 -11789 0
5037 -5054 -11789 0
5039 -5056 -11789 0
5041 -5058 -11789 0
5043 -5060 -11789 0
5045 -5062 -11789 0
5047 -11789 0
5049 -5034 11789 0
5050 -5035 11789 0
5052 -5037 11789 0
5054 -5039 11789 0
5056 -5041 11789 0
5058 -5043 11789 0
5060 -5045 11789 0
5062 -5047 11789 0
c ((max_left_00004_00001_00008<max_left_00004_00001_00009)=tv=SATLiteral(11790))
-5064 -11790 0
5049 -5065 -11790 0
5050 -5067 -11790 0
5052 -5069 -11790 0
5054 -5071 -11790 0
5056 -5073 -11790 0
5058 -5075 -11790 0
5060 -5077 -11790 0
5062 -11790 0
5064 -5049 11790 0
5065 -5050 11790 0
5067 -5052 11790 0
5069 -5054 11790 0
5071 -5056 11790 0
5073 -5058 11790 0
5075 -5060 11790 0
5077 -5062 11790 0
c ((max_left_00004_00002_00001<max_left_00004_00002_00002)=tv=SATLiteral(11791))
-5095 -11791 0
5080 -5096 -11791 0
5081 -5098 -11791 0
5083 -5100 -11791 0
5085 -5102 -11791 0
5087 -5104 -11791 0
5089 -5106 -11791 0
5091 -5108 -11791 0
5093 -11791 0
5095 -5080 11791 0
5096 -5081 11791 0
5098 -5083 11791 0
5100 -5085 11791 0
5102 -5087 11791 0
5104 -5089 11791 0
5106 -5091 11791 0
5108 -5093 11791 0
c ((max_left_00004_00002_00002<max_left_00004_00002_00003)=tv=SATLiteral(11792))
-5110 -11792 0
5095 -5111 -11792 0
5096 -5113 -11792 0
5098 -5115 -11792 0
5100 -5117 -11792 0
5102 -5119 -11792 0
5104 -5121 -11792 0
5106 -5123 -11792 0
5108 -11792 0
5110 -5095 11792 0
5111 -5096 11792 0
5113 -5098 11792 0
5115 -5100 11792 0
5117 -5102 11792 0
5119 -5104 11792 0
5121 -5106 11792 0
5123 -5108 11792 0
c ((max_left_00004_00002_00003<max_left_00004_00002_00004)=tv=SATLiteral(11793))
-5125 -11793 0
5110 -5126 -11793 0
5111 -5128 -11793 0
5113 -5130 -11793 0
5115 -5132 -11793 0
5117 -5134 -11793 0
5119 -5136 -11793 0
5121 -5138 -11793 0
5123 -11793 0
5125 -5110 11793 0
5126 -5111 11793 0
5128 -5113 11793 0
5130 -5115 11793 0
5132 -5117 11793 0
5134 -5119 11793 0
5136 -5121 11793 0
5138 -5123 11793 0
c ((max_left_00004_00002_00004<max_left_00004_00002_00005)=tv=SATLiteral(11794))
-5140 -11794 0
5125 -5141 -11794 0
5126 -5143 -11794 0
5128 -5145 -11794 0
5130 -5147 -11794 0
5132 -5149 -11794 0
5134 -5151 -11794 0
5136 -5153 -11794 0
5138 -11794 0
5140 -5125 11794 0
5141 -5126 11794 0
5143 -5128 11794 0
5145 -5130 11794 0
5147 -5132 11794 0
5149 -5134 11794 0
5151 -5136 11794 0
5153 -5138 11794 0
c ((max_left_00004_00002_00005<max_left_00004_00002_00006)=tv=SATLiteral(11795))
-5155 -11795 0
5140 -5156 -11795 0
5141 -5158 -11795 0
5143 -5160 -11795 0
5145 -5162 -11795 0
5147 -5164 -11795 0
5149 -5166 -11795 0
5151 -5168 -11795 0
5153 -11795 0
5155 -5140 11795 0
5156 -5141 11795 0
5158 -5143 11795 0
5160 -5145 11795 0
5162 -5147 11795 0
5164 -5149 11795 0
5166 -5151 11795 0
5168 -5153 11795 0
c ((max_left_00004_00002_00006<max_left_00004_00002_00007)=tv=SATLiteral(11796))
-5170 -11796 0
5155 -5171 -11796 0
5156 -5173 -11796 0
5158 -5175 -11796 0
5160 -5177 -11796 0
5162 -5179 -11796 0
5164 -5181 -11796 0
5166 -5183 -11796 0
5168 -11796 0
5170 -5155 11796 0
5171 -5156 11796 0
5173 -5158 11796 0
5175 -5160 11796 0
5177 -5162 11796 0
5179 -5164 11796 0
5181 -5166 11796 0
5183 -5168 11796 0
c ((max_left_00004_00002_00007<max_left_00004_00002_00008)=tv=SATLiteral(11797))
-5185 -11797 0
5170 -5186 -11797 0
5171 -5188 -11797 0
5173 -5190 -11797 0
5175 -5192 -11797 0
5177 -5194 -11797 0
5179 -5196 -11797 0
5181 -5198 -11797 0
5183 -11797 0
5185 -5170 11797 0
5186 -5171 11797 0
5188 -5173 11797 0
5190 -5175 11797 0
5192 -5177 11797 0
5194 -5179 11797 0
5196 -5181 11797 0
5198 -5183 11797 0
c ((max_left_00004_00002_00008<max_left_00004_00002_00009)=tv=SATLiteral(11798))
-5200 -11798 0
5185 -5201 -11798 0
5186 -5203 -11798 0
5188 -5205 -11798 0
5190 -5207 -11798 0
5192 -5209 -11798 0
5194 -5211 -11798 0
5196 -5213 -11798 0
5198 -11798 0
5200 -5185 11798 0
5201 -5186 11798 0
5203 -5188 11798 0
5205 -5190 11798 0
5207 -5192 11798 0
5209 -5194 11798 0
5211 -5196 11798 0
5213 -5198 11798 0
c ((max_left_00004_00003_00001<max_left_00004_00003_00002)=tv=SATLiteral(11799))
-5231 -11799 0
5216 -5232 -11799 0
5217 -5234 -11799 0
5219 -5236 -11799 0
5221 -5238 -11799 0
5223 -5240 -11799 0
5225 -5242 -11799 0
5227 -5244 -11799 0
5229 -11799 0
5231 -5216 11799 0
5232 -5217 11799 0
5234 -5219 11799 0
5236 -5221 11799 0
5238 -5223 11799 0
5240 -5225 11799 0
5242 -5227 11799 0
5244 -5229 11799 0
c ((max_left_00004_00003_00002<max_left_00004_00003_00003)=tv=SATLiteral(11800))
-5246 -11800 0
5231 -5247 -11800 0
5232 -5249 -11800 0
5234 -5251 -11800 0
5236 -5253 -11800 0
5238 -5255 -11800 0
5240 -5257 -11800 0
5242 -5259 -11800 0
5244 -11800 0
5246 -5231 11800 0
5247 -5232 11800 0
5249 -5234 11800 0
5251 -5236 11800 0
5253 -5238 11800 0
5255 -5240 11800 0
5257 -5242 11800 0
5259 -5244 11800 0
c ((max_left_00004_00003_00003<max_left_00004_00003_00004)=tv=SATLiteral(11801))
-5261 -11801 0
5246 -5262 -11801 0
5247 -5264 -11801 0
5249 -5266 -11801 0
5251 -5268 -11801 0
5253 -5270 -11801 0
5255 -5272 -11801 0
5257 -5274 -11801 0
5259 -11801 0
5261 -5246 11801 0
5262 -5247 11801 0
5264 -5249 11801 0
5266 -5251 11801 0
5268 -5253 11801 0
5270 -5255 11801 0
5272 -5257 11801 0
5274 -5259 11801 0
c ((max_left_00004_00003_00004<max_left_00004_00003_00005)=tv=SATLiteral(11802))
-5276 -11802 0
5261 -5277 -11802 0
5262 -5279 -11802 0
5264 -5281 -11802 0
5266 -5283 -11802 0
5268 -5285 -11802 0
5270 -5287 -11802 0
5272 -5289 -11802 0
5274 -11802 0
5276 -5261 11802 0
5277 -5262 11802 0
5279 -5264 11802 0
5281 -5266 11802 0
5283 -5268 11802 0
5285 -5270 11802 0
5287 -5272 11802 0
5289 -5274 11802 0
c ((max_left_00004_00003_00005<max_left_00004_00003_00006)=tv=SATLiteral(11803))
-5291 -11803 0
5276 -5292 -11803 0
5277 -5294 -11803 0
5279 -5296 -11803 0
5281 -5298 -11803 0
5283 -5300 -11803 0
5285 -5302 -11803 0
5287 -5304 -11803 0
5289 -11803 0
5291 -5276 11803 0
5292 -5277 11803 0
5294 -5279 11803 0
5296 -5281 11803 0
5298 -5283 11803 0
5300 -5285 11803 0
5302 -5287 11803 0
5304 -5289 11803 0
c ((max_left_00004_00003_00006<max_left_00004_00003_00007)=tv=SATLiteral(11804))
-5306 -11804 0
5291 -5307 -11804 0
5292 -5309 -11804 0
5294 -5311 -11804 0
5296 -5313 -11804 0
5298 -5315 -11804 0
5300 -5317 -11804 0
5302 -5319 -11804 0
5304 -11804 0
5306 -5291 11804 0
5307 -5292 11804 0
5309 -5294 11804 0
5311 -5296 11804 0
5313 -5298 11804 0
5315 -5300 11804 0
5317 -5302 11804 0
5319 -5304 11804 0
c ((max_left_00004_00003_00007<max_left_00004_00003_00008)=tv=SATLiteral(11805))
-5321 -11805 0
5306 -5322 -11805 0
5307 -5324 -11805 0
5309 -5326 -11805 0
5311 -5328 -11805 0
5313 -5330 -11805 0
5315 -5332 -11805 0
5317 -5334 -11805 0
5319 -11805 0
5321 -5306 11805 0
5322 -5307 11805 0
5324 -5309 11805 0
5326 -5311 11805 0
5328 -5313 11805 0
5330 -5315 11805 0
5332 -5317 11805 0
5334 -5319 11805 0
c ((max_left_00004_00003_00008<max_left_00004_00003_00009)=tv=SATLiteral(11806))
-5336 -11806 0
5321 -5337 -11806 0
5322 -5339 -11806 0
5324 -5341 -11806 0
5326 -5343 -11806 0
5328 -5345 -11806 0
5330 -5347 -11806 0
5332 -5349 -11806 0
5334 -11806 0
5336 -5321 11806 0
5337 -5322 11806 0
5339 -5324 11806 0
5341 -5326 11806 0
5343 -5328 11806 0
5345 -5330 11806 0
5347 -5332 11806 0
5349 -5334 11806 0
c ((max_left_00004_00004_00001<max_left_00004_00004_00002)=tv=SATLiteral(11807))
-5367 -11807 0
5352 -5368 -11807 0
5353 -5370 -11807 0
5355 -5372 -11807 0
5357 -5374 -11807 0
5359 -5376 -11807 0
5361 -5378 -11807 0
5363 -5380 -11807 0
5365 -11807 0
5367 -5352 11807 0
5368 -5353 11807 0
5370 -5355 11807 0
5372 -5357 11807 0
5374 -5359 11807 0
5376 -5361 11807 0
5378 -5363 11807 0
5380 -5365 11807 0
c ((max_left_00004_00004_00002<max_left_00004_00004_00003)=tv=SATLiteral(11808))
-5382 -11808 0
5367 -5383 -11808 0
5368 -5385 -11808 0
5370 -5387 -11808 0
5372 -5389 -11808 0
5374 -5391 -11808 0
5376 -5393 -11808 0
5378 -5395 -11808 0
5380 -11808 0
5382 -5367 11808 0
5383 -5368 11808 0
5385 -5370 11808 0
5387 -5372 11808 0
5389 -5374 11808 0
5391 -5376 11808 0
5393 -5378 11808 0
5395 -5380 11808 0
c ((max_left_00004_00004_00003<max_left_00004_00004_00004)=tv=SATLiteral(11809))
-5397 -11809 0
5382 -5398 -11809 0
5383 -5400 -11809 0
5385 -5402 -11809 0
5387 -5404 -11809 0
5389 -5406 -11809 0
5391 -5408 -11809 0
5393 -5410 -11809 0
5395 -11809 0
5397 -5382 11809 0
5398 -5383 11809 0
5400 -5385 11809 0
5402 -5387 11809 0
5404 -5389 11809 0
5406 -5391 11809 0
5408 -5393 11809 0
5410 -5395 11809 0
c ((max_left_00004_00004_00004<max_left_00004_00004_00005)=tv=SATLiteral(11810))
-5412 -11810 0
5397 -5413 -11810 0
5398 -5415 -11810 0
5400 -5417 -11810 0
5402 -5419 -11810 0
5404 -5421 -11810 0
5406 -5423 -11810 0
5408 -5425 -11810 0
5410 -11810 0
5412 -5397 11810 0
5413 -5398 11810 0
5415 -5400 11810 0
5417 -5402 11810 0
5419 -5404 11810 0
5421 -5406 11810 0
5423 -5408 11810 0
5425 -5410 11810 0
c ((max_left_00004_00004_00005<max_left_00004_00004_00006)=tv=SATLiteral(11811))
-5427 -11811 0
5412 -5428 -11811 0
5413 -5430 -11811 0
5415 -5432 -11811 0
5417 -5434 -11811 0
5419 -5436 -11811 0
5421 -5438 -11811 0
5423 -5440 -11811 0
5425 -11811 0
5427 -5412 11811 0
5428 -5413 11811 0
5430 -5415 11811 0
5432 -5417 11811 0
5434 -5419 11811 0
5436 -5421 11811 0
5438 -5423 11811 0
5440 -5425 11811 0
c ((max_left_00004_00004_00006<max_left_00004_00004_00007)=tv=SATLiteral(11812))
-5442 -11812 0
5427 -5443 -11812 0
5428 -5445 -11812 0
5430 -5447 -11812 0
5432 -5449 -11812 0
5434 -5451 -11812 0
5436 -5453 -11812 0
5438 -5455 -11812 0
5440 -11812 0
5442 -5427 11812 0
5443 -5428 11812 0
5445 -5430 11812 0
5447 -5432 11812 0
5449 -5434 11812 0
5451 -5436 11812 0
5453 -5438 11812 0
5455 -5440 11812 0
c ((max_left_00004_00004_00007<max_left_00004_00004_00008)=tv=SATLiteral(11813))
-5457 -11813 0
5442 -5458 -11813 0
5443 -5460 -11813 0
5445 -5462 -11813 0
5447 -5464 -11813 0
5449 -5466 -11813 0
5451 -5468 -11813 0
5453 -5470 -11813 0
5455 -11813 0
5457 -5442 11813 0
5458 -5443 11813 0
5460 -5445 11813 0
5462 -5447 11813 0
5464 -5449 11813 0
5466 -5451 11813 0
5468 -5453 11813 0
5470 -5455 11813 0
c ((max_left_00004_00004_00008<max_left_00004_00004_00009)=tv=SATLiteral(11814))
-5472 -11814 0
5457 -5473 -11814 0
5458 -5475 -11814 0
5460 -5477 -11814 0
5462 -5479 -11814 0
5464 -5481 -11814 0
5466 -5483 -11814 0
5468 -5485 -11814 0
5470 -11814 0
5472 -5457 11814 0
5473 -5458 11814 0
5475 -5460 11814 0
5477 -5462 11814 0
5479 -5464 11814 0
5481 -5466 11814 0
5483 -5468 11814 0
5485 -5470 11814 0
c ((max_left_00004_00005_00001<max_left_00004_00005_00002)=tv=SATLiteral(11815))
-5503 -11815 0
5488 -5504 -11815 0
5489 -5506 -11815 0
5491 -5508 -11815 0
5493 -5510 -11815 0
5495 -5512 -11815 0
5497 -5514 -11815 0
5499 -5516 -11815 0
5501 -11815 0
5503 -5488 11815 0
5504 -5489 11815 0
5506 -5491 11815 0
5508 -5493 11815 0
5510 -5495 11815 0
5512 -5497 11815 0
5514 -5499 11815 0
5516 -5501 11815 0
c ((max_left_00004_00005_00002<max_left_00004_00005_00003)=tv=SATLiteral(11816))
-5518 -11816 0
5503 -5519 -11816 0
5504 -5521 -11816 0
5506 -5523 -11816 0
5508 -5525 -11816 0
5510 -5527 -11816 0
5512 -5529 -11816 0
5514 -5531 -11816 0
5516 -11816 0
5518 -5503 11816 0
5519 -5504 11816 0
5521 -5506 11816 0
5523 -5508 11816 0
5525 -5510 11816 0
5527 -5512 11816 0
5529 -5514 11816 0
5531 -5516 11816 0
c ((max_left_00004_00005_00003<max_left_00004_00005_00004)=tv=SATLiteral(11817))
-5533 -11817 0
5518 -5534 -11817 0
5519 -5536 -11817 0
5521 -5538 -11817 0
5523 -5540 -11817 0
5525 -5542 -11817 0
5527 -5544 -11817 0
5529 -5546 -11817 0
5531 -11817 0
5533 -5518 11817 0
5534 -5519 11817 0
5536 -5521 11817 0
5538 -5523 11817 0
5540 -5525 11817 0
5542 -5527 11817 0
5544 -5529 11817 0
5546 -5531 11817 0
c ((max_left_00004_00005_00004<max_left_00004_00005_00005)=tv=SATLiteral(11818))
-5548 -11818 0
5533 -5549 -11818 0
5534 -5551 -11818 0
5536 -5553 -11818 0
5538 -5555 -11818 0
5540 -5557 -11818 0
5542 -5559 -11818 0
5544 -5561 -11818 0
5546 -11818 0
5548 -5533 11818 0
5549 -5534 11818 0
5551 -5536 11818 0
5553 -5538 11818 0
5555 -5540 11818 0
5557 -5542 11818 0
5559 -5544 11818 0
5561 -5546 11818 0
c ((max_left_00004_00005_00005<max_left_00004_00005_00006)=tv=SATLiteral(11819))
-5563 -11819 0
5548 -5564 -11819 0
5549 -5566 -11819 0
5551 -5568 -11819 0
5553 -5570 -11819 0
5555 -5572 -11819 0
5557 -5574 -11819 0
5559 -5576 -11819 0
5561 -11819 0
5563 -5548 11819 0
5564 -5549 11819 0
5566 -5551 11819 0
5568 -5553 11819 0
5570 -5555 11819 0
5572 -5557 11819 0
5574 -5559 11819 0
5576 -5561 11819 0
c ((max_left_00004_00005_00006<max_left_00004_00005_00007)=tv=SATLiteral(11820))
-5578 -11820 0
5563 -5579 -11820 0
5564 -5581 -11820 0
5566 -5583 -11820 0
5568 -5585 -11820 0
5570 -5587 -11820 0
5572 -5589 -11820 0
5574 -5591 -11820 0
5576 -11820 0
5578 -5563 11820 0
5579 -5564 11820 0
5581 -5566 11820 0
5583 -5568 11820 0
5585 -5570 11820 0
5587 -5572 11820 0
5589 -5574 11820 0
5591 -5576 11820 0
c ((max_left_00004_00005_00007<max_left_00004_00005_00008)=tv=SATLiteral(11821))
-5593 -11821 0
5578 -5594 -11821 0
5579 -5596 -11821 0
5581 -5598 -11821 0
5583 -5600 -11821 0
5585 -5602 -11821 0
5587 -5604 -11821 0
5589 -5606 -11821 0
5591 -11821 0
5593 -5578 11821 0
5594 -5579 11821 0
5596 -5581 11821 0
5598 -5583 11821 0
5600 -5585 11821 0
5602 -5587 11821 0
5604 -5589 11821 0
5606 -5591 11821 0
c ((max_left_00004_00005_00008<max_left_00004_00005_00009)=tv=SATLiteral(11822))
-5608 -11822 0
5593 -5609 -11822 0
5594 -5611 -11822 0
5596 -5613 -11822 0
5598 -5615 -11822 0
5600 -5617 -11822 0
5602 -5619 -11822 0
5604 -5621 -11822 0
5606 -11822 0
5608 -5593 11822 0
5609 -5594 11822 0
5611 -5596 11822 0
5613 -5598 11822 0
5615 -5600 11822 0
5617 -5602 11822 0
5619 -5604 11822 0
5621 -5606 11822 0
c ((max_left_00004_00006_00001<max_left_00004_00006_00002)=tv=SATLiteral(11823))
-5639 -11823 0
5624 -5640 -11823 0
5625 -5642 -11823 0
5627 -5644 -11823 0
5629 -5646 -11823 0
5631 -5648 -11823 0
5633 -5650 -11823 0
5635 -5652 -11823 0
5637 -11823 0
5639 -5624 11823 0
5640 -5625 11823 0
5642 -5627 11823 0
5644 -5629 11823 0
5646 -5631 11823 0
5648 -5633 11823 0
5650 -5635 11823 0
5652 -5637 11823 0
c ((max_left_00004_00006_00002<max_left_00004_00006_00003)=tv=SATLiteral(11824))
-5654 -11824 0
5639 -5655 -11824 0
5640 -5657 -11824 0
5642 -5659 -11824 0
5644 -5661 -11824 0
5646 -5663 -11824 0
5648 -5665 -11824 0
5650 -5667 -11824 0
5652 -11824 0
5654 -5639 11824 0
5655 -5640 11824 0
5657 -5642 11824 0
5659 -5644 11824 0
5661 -5646 11824 0
5663 -5648 11824 0
5665 -5650 11824 0
5667 -5652 11824 0
c ((max_left_00004_00006_00003<max_left_00004_00006_00004)=tv=SATLiteral(11825))
-5669 -11825 0
5654 -5670 -11825 0
5655 -5672 -11825 0
5657 -5674 -11825 0
5659 -5676 -11825 0
5661 -5678 -11825 0
5663 -5680 -11825 0
5665 -5682 -11825 0
5667 -11825 0
5669 -5654 11825 0
5670 -5655 11825 0
5672 -5657 11825 0
5674 -5659 11825 0
5676 -5661 11825 0
5678 -5663 11825 0
5680 -5665 11825 0
5682 -5667 11825 0
c ((max_left_00004_00006_00004<max_left_00004_00006_00005)=tv=SATLiteral(11826))
-5684 -11826 0
5669 -5685 -11826 0
5670 -5687 -11826 0
5672 -5689 -11826 0
5674 -5691 -11826 0
5676 -5693 -11826 0
5678 -5695 -11826 0
5680 -5697 -11826 0
5682 -11826 0
5684 -5669 11826 0
5685 -5670 11826 0
5687 -5672 11826 0
5689 -5674 11826 0
5691 -5676 11826 0
5693 -5678 11826 0
5695 -5680 11826 0
5697 -5682 11826 0
c ((max_left_00004_00006_00005<max_left_00004_00006_00006)=tv=SATLiteral(11827))
-5699 -11827 0
5684 -5700 -11827 0
5685 -5702 -11827 0
5687 -5704 -11827 0
5689 -5706 -11827 0
5691 -5708 -11827 0
5693 -5710 -11827 0
5695 -5712 -11827 0
5697 -11827 0
5699 -5684 11827 0
5700 -5685 11827 0
5702 -5687 11827 0
5704 -5689 11827 0
5706 -5691 11827 0
5708 -5693 11827 0
5710 -5695 11827 0
5712 -5697 11827 0
c ((max_left_00004_00006_00006<max_left_00004_00006_00007)=tv=SATLiteral(11828))
-5714 -11828 0
5699 -5715 -11828 0
5700 -5717 -11828 0
5702 -5719 -11828 0
5704 -5721 -11828 0
5706 -5723 -11828 0
5708 -5725 -11828 0
5710 -5727 -11828 0
5712 -11828 0
5714 -5699 11828 0
5715 -5700 11828 0
5717 -5702 11828 0
5719 -5704 11828 0
5721 -5706 11828 0
5723 -5708 11828 0
5725 -5710 11828 0
5727 -5712 11828 0
c ((max_left_00004_00006_00007<max_left_00004_00006_00008)=tv=SATLiteral(11829))
-5729 -11829 0
5714 -5730 -11829 0
5715 -5732 -11829 0
5717 -5734 -11829 0
5719 -5736 -11829 0
5721 -5738 -11829 0
5723 -5740 -11829 0
5725 -5742 -11829 0
5727 -11829 0
5729 -5714 11829 0
5730 -5715 11829 0
5732 -5717 11829 0
5734 -5719 11829 0
5736 -5721 11829 0
5738 -5723 11829 0
5740 -5725 11829 0
5742 -5727 11829 0
c ((max_left_00004_00006_00008<max_left_00004_00006_00009)=tv=SATLiteral(11830))
-5744 -11830 0
5729 -5745 -11830 0
5730 -5747 -11830 0
5732 -5749 -11830 0
5734 -5751 -11830 0
5736 -5753 -11830 0
5738 -5755 -11830 0
5740 -5757 -11830 0
5742 -11830 0
5744 -5729 11830 0
5745 -5730 11830 0
5747 -5732 11830 0
5749 -5734 11830 0
5751 -5736 11830 0
5753 -5738 11830 0
5755 -5740 11830 0
5757 -5742 11830 0
c ((max_left_00004_00007_00001<max_left_00004_00007_00002)=tv=SATLiteral(11831))
-5775 -11831 0
5760 -5776 -11831 0
5761 -5778 -11831 0
5763 -5780 -11831 0
5765 -5782 -11831 0
5767 -5784 -11831 0
5769 -5786 -11831 0
5771 -5788 -11831 0
5773 -11831 0
5775 -5760 11831 0
5776 -5761 11831 0
5778 -5763 11831 0
5780 -5765 11831 0
5782 -5767 11831 0
5784 -5769 11831 0
5786 -5771 11831 0
5788 -5773 11831 0
c ((max_left_00004_00007_00002<max_left_00004_00007_00003)=tv=SATLiteral(11832))
-5790 -11832 0
5775 -5791 -11832 0
5776 -5793 -11832 0
5778 -5795 -11832 0
5780 -5797 -11832 0
5782 -5799 -11832 0
5784 -5801 -11832 0
5786 -5803 -11832 0
5788 -11832 0
5790 -5775 11832 0
5791 -5776 11832 0
5793 -5778 11832 0
5795 -5780 11832 0
5797 -5782 11832 0
5799 -5784 11832 0
5801 -5786 11832 0
5803 -5788 11832 0
c ((max_left_00004_00007_00003<max_left_00004_00007_00004)=tv=SATLiteral(11833))
-5805 -11833 0
5790 -5806 -11833 0
5791 -5808 -11833 0
5793 -5810 -11833 0
5795 -5812 -11833 0
5797 -5814 -11833 0
5799 -5816 -11833 0
5801 -5818 -11833 0
5803 -11833 0
5805 -5790 11833 0
5806 -5791 11833 0
5808 -5793 11833 0
5810 -5795 11833 0
5812 -5797 11833 0
5814 -5799 11833 0
5816 -5801 11833 0
5818 -5803 11833 0
c ((max_left_00004_00007_00004<max_left_00004_00007_00005)=tv=SATLiteral(11834))
-5820 -11834 0
5805 -5821 -11834 0
5806 -5823 -11834 0
5808 -5825 -11834 0
5810 -5827 -11834 0
5812 -5829 -11834 0
5814 -5831 -11834 0
5816 -5833 -11834 0
5818 -11834 0
5820 -5805 11834 0
5821 -5806 11834 0
5823 -5808 11834 0
5825 -5810 11834 0
5827 -5812 11834 0
5829 -5814 11834 0
5831 -5816 11834 0
5833 -5818 11834 0
c ((max_left_00004_00007_00005<max_left_00004_00007_00006)=tv=SATLiteral(11835))
-5835 -11835 0
5820 -5836 -11835 0
5821 -5838 -11835 0
5823 -5840 -11835 0
5825 -5842 -11835 0
5827 -5844 -11835 0
5829 -5846 -11835 0
5831 -5848 -11835 0
5833 -11835 0
5835 -5820 11835 0
5836 -5821 11835 0
5838 -5823 11835 0
5840 -5825 11835 0
5842 -5827 11835 0
5844 -5829 11835 0
5846 -5831 11835 0
5848 -5833 11835 0
c ((max_left_00004_00007_00006<max_left_00004_00007_00007)=tv=SATLiteral(11836))
-5850 -11836 0
5835 -5851 -11836 0
5836 -5853 -11836 0
5838 -5855 -11836 0
5840 -5857 -11836 0
5842 -5859 -11836 0
5844 -5861 -11836 0
5846 -5863 -11836 0
5848 -11836 0
5850 -5835 11836 0
5851 -5836 11836 0
5853 -5838 11836 0
5855 -5840 11836 0
5857 -5842 11836 0
5859 -5844 11836 0
5861 -5846 11836 0
5863 -5848 11836 0
c ((max_left_00004_00007_00007<max_left_00004_00007_00008)=tv=SATLiteral(11837))
-5865 -11837 0
5850 -5866 -11837 0
5851 -5868 -11837 0
5853 -5870 -11837 0
5855 -5872 -11837 0
5857 -5874 -11837 0
5859 -5876 -11837 0
5861 -5878 -11837 0
5863 -11837 0
5865 -5850 11837 0
5866 -5851 11837 0
5868 -5853 11837 0
5870 -5855 11837 0
5872 -5857 11837 0
5874 -5859 11837 0
5876 -5861 11837 0
5878 -5863 11837 0
c ((max_left_00004_00007_00008<max_left_00004_00007_00009)=tv=SATLiteral(11838))
-5880 -11838 0
5865 -5881 -11838 0
5866 -5883 -11838 0
5868 -5885 -11838 0
5870 -5887 -11838 0
5872 -5889 -11838 0
5874 -5891 -11838 0
5876 -5893 -11838 0
5878 -11838 0
5880 -5865 11838 0
5881 -5866 11838 0
5883 -5868 11838 0
5885 -5870 11838 0
5887 -5872 11838 0
5889 -5874 11838 0
5891 -5876 11838 0
5893 -5878 11838 0
c ((max_left_00004_00008_00001<max_left_00004_00008_00002)=tv=SATLiteral(11839))
-5911 -11839 0
5896 -5912 -11839 0
5897 -5914 -11839 0
5899 -5916 -11839 0
5901 -5918 -11839 0
5903 -5920 -11839 0
5905 -5922 -11839 0
5907 -5924 -11839 0
5909 -11839 0
5911 -5896 11839 0
5912 -5897 11839 0
5914 -5899 11839 0
5916 -5901 11839 0
5918 -5903 11839 0
5920 -5905 11839 0
5922 -5907 11839 0
5924 -5909 11839 0
c ((max_left_00004_00008_00002<max_left_00004_00008_00003)=tv=SATLiteral(11840))
-5926 -11840 0
5911 -5927 -11840 0
5912 -5929 -11840 0
5914 -5931 -11840 0
5916 -5933 -11840 0
5918 -5935 -11840 0
5920 -5937 -11840 0
5922 -5939 -11840 0
5924 -11840 0
5926 -5911 11840 0
5927 -5912 11840 0
5929 -5914 11840 0
5931 -5916 11840 0
5933 -5918 11840 0
5935 -5920 11840 0
5937 -5922 11840 0
5939 -5924 11840 0
c ((max_left_00004_00008_00003<max_left_00004_00008_00004)=tv=SATLiteral(11841))
-5941 -11841 0
5926 -5942 -11841 0
5927 -5944 -11841 0
5929 -5946 -11841 0
5931 -5948 -11841 0
5933 -5950 -11841 0
5935 -5952 -11841 0
5937 -5954 -11841 0
5939 -11841 0
5941 -5926 11841 0
5942 -5927 11841 0
5944 -5929 11841 0
5946 -5931 11841 0
5948 -5933 11841 0
5950 -5935 11841 0
5952 -5937 11841 0
5954 -5939 11841 0
c ((max_left_00004_00008_00004<max_left_00004_00008_00005)=tv=SATLiteral(11842))
-5956 -11842 0
5941 -5957 -11842 0
5942 -5959 -11842 0
5944 -5961 -11842 0
5946 -5963 -11842 0
5948 -5965 -11842 0
5950 -5967 -11842 0
5952 -5969 -11842 0
5954 -11842 0
5956 -5941 11842 0
5957 -5942 11842 0
5959 -5944 11842 0
5961 -5946 11842 0
5963 -5948 11842 0
5965 -5950 11842 0
5967 -5952 11842 0
5969 -5954 11842 0
c ((max_left_00004_00008_00005<max_left_00004_00008_00006)=tv=SATLiteral(11843))
-5971 -11843 0
5956 -5972 -11843 0
5957 -5974 -11843 0
5959 -5976 -11843 0
5961 -5978 -11843 0
5963 -5980 -11843 0
5965 -5982 -11843 0
5967 -5984 -11843 0
5969 -11843 0
5971 -5956 11843 0
5972 -5957 11843 0
5974 -5959 11843 0
5976 -5961 11843 0
5978 -5963 11843 0
5980 -5965 11843 0
5982 -5967 11843 0
5984 -5969 11843 0
c ((max_left_00004_00008_00006<max_left_00004_00008_00007)=tv=SATLiteral(11844))
-5986 -11844 0
5971 -5987 -11844 0
5972 -5989 -11844 0
5974 -5991 -11844 0
5976 -5993 -11844 0
5978 -5995 -11844 0
5980 -5997 -11844 0
5982 -5999 -11844 0
5984 -11844 0
5986 -5971 11844 0
5987 -5972 11844 0
5989 -5974 11844 0
5991 -5976 11844 0
5993 -5978 11844 0
5995 -5980 11844 0
5997 -5982 11844 0
5999 -5984 11844 0
c ((max_left_00004_00008_00007<max_left_00004_00008_00008)=tv=SATLiteral(11845))
-6001 -11845 0
5986 -6002 -11845 0
5987 -6004 -11845 0
5989 -6006 -11845 0
5991 -6008 -11845 0
5993 -6010 -11845 0
5995 -6012 -11845 0
5997 -6014 -11845 0
5999 -11845 0
6001 -5986 11845 0
6002 -5987 11845 0
6004 -5989 11845 0
6006 -5991 11845 0
6008 -5993 11845 0
6010 -5995 11845 0
6012 -5997 11845 0
6014 -5999 11845 0
c ((max_left_00004_00008_00008<max_left_00004_00008_00009)=tv=SATLiteral(11846))
-6016 -11846 0
6001 -6017 -11846 0
6002 -6019 -11846 0
6004 -6021 -11846 0
6006 -6023 -11846 0
6008 -6025 -11846 0
6010 -6027 -11846 0
6012 -6029 -11846 0
6014 -11846 0
6016 -6001 11846 0
6017 -6002 11846 0
6019 -6004 11846 0
6021 -6006 11846 0
6023 -6008 11846 0
6025 -6010 11846 0
6027 -6012 11846 0
6029 -6014 11846 0
c ((max_left_00004_00009_00001<max_left_00004_00009_00002)=tv=SATLiteral(11847))
-6047 -11847 0
6032 -6048 -11847 0
6033 -6050 -11847 0
6035 -6052 -11847 0
6037 -6054 -11847 0
6039 -6056 -11847 0
6041 -6058 -11847 0
6043 -6060 -11847 0
6045 -11847 0
6047 -6032 11847 0
6048 -6033 11847 0
6050 -6035 11847 0
6052 -6037 11847 0
6054 -6039 11847 0
6056 -6041 11847 0
6058 -6043 11847 0
6060 -6045 11847 0
c ((max_left_00004_00009_00002<max_left_00004_00009_00003)=tv=SATLiteral(11848))
-6062 -11848 0
6047 -6063 -11848 0
6048 -6065 -11848 0
6050 -6067 -11848 0
6052 -6069 -11848 0
6054 -6071 -11848 0
6056 -6073 -11848 0
6058 -6075 -11848 0
6060 -11848 0
6062 -6047 11848 0
6063 -6048 11848 0
6065 -6050 11848 0
6067 -6052 11848 0
6069 -6054 11848 0
6071 -6056 11848 0
6073 -6058 11848 0
6075 -6060 11848 0
c ((max_left_00004_00009_00003<max_left_00004_00009_00004)=tv=SATLiteral(11849))
-6077 -11849 0
6062 -6078 -11849 0
6063 -6080 -11849 0
6065 -6082 -11849 0
6067 -6084 -11849 0
6069 -6086 -11849 0
6071 -6088 -11849 0
6073 -6090 -11849 0
6075 -11849 0
6077 -6062 11849 0
6078 -6063 11849 0
6080 -6065 11849 0
6082 -6067 11849 0
6084 -6069 11849 0
6086 -6071 11849 0
6088 -6073 11849 0
6090 -6075 11849 0
c ((max_left_00004_00009_00004<max_left_00004_00009_00005)=tv=SATLiteral(11850))
-6092 -11850 0
6077 -6093 -11850 0
6078 -6095 -11850 0
6080 -6097 -11850 0
6082 -6099 -11850 0
6084 -6101 -11850 0
6086 -6103 -11850 0
6088 -6105 -11850 0
6090 -11850 0
6092 -6077 11850 0
6093 -6078 11850 0
6095 -6080 11850 0
6097 -6082 11850 0
6099 -6084 11850 0
6101 -6086 11850 0
6103 -6088 11850 0
6105 -6090 11850 0
c ((max_left_00004_00009_00005<max_left_00004_00009_00006)=tv=SATLiteral(11851))
-6107 -11851 0
6092 -6108 -11851 0
6093 -6110 -11851 0
6095 -6112 -11851 0
6097 -6114 -11851 0
6099 -6116 -11851 0
6101 -6118 -11851 0
6103 -6120 -11851 0
6105 -11851 0
6107 -6092 11851 0
6108 -6093 11851 0
6110 -6095 11851 0
6112 -6097 11851 0
6114 -6099 11851 0
6116 -6101 11851 0
6118 -6103 11851 0
6120 -6105 11851 0
c ((max_left_00004_00009_00006<max_left_00004_00009_00007)=tv=SATLiteral(11852))
-6122 -11852 0
6107 -6123 -11852 0
6108 -6125 -11852 0
6110 -6127 -11852 0
6112 -6129 -11852 0
6114 -6131 -11852 0
6116 -6133 -11852 0
6118 -6135 -11852 0
6120 -11852 0
6122 -6107 11852 0
6123 -6108 11852 0
6125 -6110 11852 0
6127 -6112 11852 0
6129 -6114 11852 0
6131 -6116 11852 0
6133 -6118 11852 0
6135 -6120 11852 0
c ((max_left_00004_00009_00007<max_left_00004_00009_00008)=tv=SATLiteral(11853))
-6137 -11853 0
6122 -6138 -11853 0
6123 -6140 -11853 0
6125 -6142 -11853 0
6127 -6144 -11853 0
6129 -6146 -11853 0
6131 -6148 -11853 0
6133 -6150 -11853 0
6135 -11853 0
6137 -6122 11853 0
6138 -6123 11853 0
6140 -6125 11853 0
6142 -6127 11853 0
6144 -6129 11853 0
6146 -6131 11853 0
6148 -6133 11853 0
6150 -6135 11853 0
c ((max_left_00004_00009_00008<max_left_00004_00009_00009)=tv=SATLiteral(11854))
-6152 -11854 0
6137 -6153 -11854 0
6138 -6155 -11854 0
6140 -6157 -11854 0
6142 -6159 -11854 0
6144 -6161 -11854 0
6146 -6163 -11854 0
6148 -6165 -11854 0
6150 -11854 0
6152 -6137 11854 0
6153 -6138 11854 0
6155 -6140 11854 0
6157 -6142 11854 0
6159 -6144 11854 0
6161 -6146 11854 0
6163 -6148 11854 0
6165 -6150 11854 0
c ((SATLiteral(16877) /\ SATLiteral(16878))=tv=SATLiteral(11855))
11855 -16877 -16878 0
16877 -11855 0
16878 -11855 0
c ((SATLiteral(16879) /\ SATLiteral(16880))=tv=SATLiteral(11856))
11856 -16879 -16880 0
16879 -11856 0
16880 -11856 0
c ((SATLiteral(16881) /\ SATLiteral(16882))=tv=SATLiteral(11857))
11857 -16881 -16882 0
16881 -11857 0
16882 -11857 0
c ((SATLiteral(16883) /\ SATLiteral(16884))=tv=SATLiteral(11858))
11858 -16883 -16884 0
16883 -11858 0
16884 -11858 0
c ((SATLiteral(16885) /\ SATLiteral(16886))=tv=SATLiteral(11859))
11859 -16885 -16886 0
16885 -11859 0
16886 -11859 0
c ((SATLiteral(16887) /\ SATLiteral(16888))=tv=SATLiteral(11860))
11860 -16887 -16888 0
16887 -11860 0
16888 -11860 0
c ((SATLiteral(16889) /\ SATLiteral(16890))=tv=SATLiteral(11861))
11861 -16889 -16890 0
16889 -11861 0
16890 -11861 0
c ((SATLiteral(16891) /\ SATLiteral(16892))=tv=SATLiteral(11862))
11862 -16891 -16892 0
16891 -11862 0
16892 -11862 0
c ((SATLiteral(16893) /\ SATLiteral(16894))=tv=SATLiteral(11863))
11863 -16893 -16894 0
16893 -11863 0
16894 -11863 0
c ((SATLiteral(16895) /\ SATLiteral(16896))=tv=SATLiteral(11864))
11864 -16895 -16896 0
16895 -11864 0
16896 -11864 0
c ((SATLiteral(16897) /\ SATLiteral(16898))=tv=SATLiteral(11865))
11865 -16897 -16898 0
16897 -11865 0
16898 -11865 0
c ((SATLiteral(16899) /\ SATLiteral(16900))=tv=SATLiteral(11866))
11866 -16899 -16900 0
16899 -11866 0
16900 -11866 0
c ((SATLiteral(16901) /\ SATLiteral(16902))=tv=SATLiteral(11867))
11867 -16901 -16902 0
16901 -11867 0
16902 -11867 0
c ((SATLiteral(16903) /\ SATLiteral(16904))=tv=SATLiteral(11868))
11868 -16903 -16904 0
16903 -11868 0
16904 -11868 0
c ((SATLiteral(16905) /\ SATLiteral(16906))=tv=SATLiteral(11869))
11869 -16905 -16906 0
16905 -11869 0
16906 -11869 0
c ((SATLiteral(16907) /\ SATLiteral(16908))=tv=SATLiteral(11870))
11870 -16907 -16908 0
16907 -11870 0
16908 -11870 0
c ((SATLiteral(16909) /\ SATLiteral(16910))=tv=SATLiteral(11871))
11871 -16909 -16910 0
16909 -11871 0
16910 -11871 0
c ((SATLiteral(16911) /\ SATLiteral(16912))=tv=SATLiteral(11872))
11872 -16911 -16912 0
16911 -11872 0
16912 -11872 0
c ((SATLiteral(16913) /\ SATLiteral(16914))=tv=SATLiteral(11873))
11873 -16913 -16914 0
16913 -11873 0
16914 -11873 0
c ((SATLiteral(16915) /\ SATLiteral(16916))=tv=SATLiteral(11874))
11874 -16915 -16916 0
16915 -11874 0
16916 -11874 0
c ((SATLiteral(16917) /\ SATLiteral(16918))=tv=SATLiteral(11875))
11875 -16917 -16918 0
16917 -11875 0
16918 -11875 0
c ((SATLiteral(16919) /\ SATLiteral(16920))=tv=SATLiteral(11876))
11876 -16919 -16920 0
16919 -11876 0
16920 -11876 0
c ((SATLiteral(16921) /\ SATLiteral(16922))=tv=SATLiteral(11877))
11877 -16921 -16922 0
16921 -11877 0
16922 -11877 0
c ((SATLiteral(16923) /\ SATLiteral(16924))=tv=SATLiteral(11878))
11878 -16923 -16924 0
16923 -11878 0
16924 -11878 0
c ((SATLiteral(16925) /\ SATLiteral(16926))=tv=SATLiteral(11879))
11879 -16925 -16926 0
16925 -11879 0
16926 -11879 0
c ((SATLiteral(16927) /\ SATLiteral(16928))=tv=SATLiteral(11880))
11880 -16927 -16928 0
16927 -11880 0
16928 -11880 0
c ((SATLiteral(16929) /\ SATLiteral(16930))=tv=SATLiteral(11881))
11881 -16929 -16930 0
16929 -11881 0
16930 -11881 0
c ((SATLiteral(16931) /\ SATLiteral(16932))=tv=SATLiteral(11882))
11882 -16931 -16932 0
16931 -11882 0
16932 -11882 0
c ((SATLiteral(16933) /\ SATLiteral(16934))=tv=SATLiteral(11883))
11883 -16933 -16934 0
16933 -11883 0
16934 -11883 0
c ((SATLiteral(16935) /\ SATLiteral(16936))=tv=SATLiteral(11884))
11884 -16935 -16936 0
16935 -11884 0
16936 -11884 0
c ((SATLiteral(16937) /\ SATLiteral(16938))=tv=SATLiteral(11885))
11885 -16937 -16938 0
16937 -11885 0
16938 -11885 0
c ((SATLiteral(16939) /\ SATLiteral(16940))=tv=SATLiteral(11886))
11886 -16939 -16940 0
16939 -11886 0
16940 -11886 0
c ((SATLiteral(16941) /\ SATLiteral(16942))=tv=SATLiteral(11887))
11887 -16941 -16942 0
16941 -11887 0
16942 -11887 0
c ((SATLiteral(16943) /\ SATLiteral(16944))=tv=SATLiteral(11888))
11888 -16943 -16944 0
16943 -11888 0
16944 -11888 0
c ((SATLiteral(16945) /\ SATLiteral(16946))=tv=SATLiteral(11889))
11889 -16945 -16946 0
16945 -11889 0
16946 -11889 0
c ((SATLiteral(16947) /\ SATLiteral(16948))=tv=SATLiteral(11890))
11890 -16947 -16948 0
16947 -11890 0
16948 -11890 0
c ((SATLiteral(16949) /\ SATLiteral(16950))=tv=SATLiteral(11891))
11891 -16949 -16950 0
16949 -11891 0
16950 -11891 0
c ((SATLiteral(16951) /\ SATLiteral(16952))=tv=SATLiteral(11892))
11892 -16951 -16952 0
16951 -11892 0
16952 -11892 0
c ((SATLiteral(16953) /\ SATLiteral(16954))=tv=SATLiteral(11893))
11893 -16953 -16954 0
16953 -11893 0
16954 -11893 0
c ((SATLiteral(16955) /\ SATLiteral(16956))=tv=SATLiteral(11894))
11894 -16955 -16956 0
16955 -11894 0
16956 -11894 0
c ((SATLiteral(16957) /\ SATLiteral(16958))=tv=SATLiteral(11895))
11895 -16957 -16958 0
16957 -11895 0
16958 -11895 0
c ((SATLiteral(16959) /\ SATLiteral(16960))=tv=SATLiteral(11896))
11896 -16959 -16960 0
16959 -11896 0
16960 -11896 0
c ((SATLiteral(16961) /\ SATLiteral(16962))=tv=SATLiteral(11897))
11897 -16961 -16962 0
16961 -11897 0
16962 -11897 0
c ((SATLiteral(16963) /\ SATLiteral(16964))=tv=SATLiteral(11898))
11898 -16963 -16964 0
16963 -11898 0
16964 -11898 0
c ((SATLiteral(16965) /\ SATLiteral(16966))=tv=SATLiteral(11899))
11899 -16965 -16966 0
16965 -11899 0
16966 -11899 0
c ((SATLiteral(16967) /\ SATLiteral(16968))=tv=SATLiteral(11900))
11900 -16967 -16968 0
16967 -11900 0
16968 -11900 0
c ((SATLiteral(16969) /\ SATLiteral(16970))=tv=SATLiteral(11901))
11901 -16969 -16970 0
16969 -11901 0
16970 -11901 0
c ((SATLiteral(16971) /\ SATLiteral(16972))=tv=SATLiteral(11902))
11902 -16971 -16972 0
16971 -11902 0
16972 -11902 0
c ((SATLiteral(16973) /\ SATLiteral(16974))=tv=SATLiteral(11903))
11903 -16973 -16974 0
16973 -11903 0
16974 -11903 0
c ((SATLiteral(16975) /\ SATLiteral(16976))=tv=SATLiteral(11904))
11904 -16975 -16976 0
16975 -11904 0
16976 -11904 0
c ((SATLiteral(16977) /\ SATLiteral(16978))=tv=SATLiteral(11905))
11905 -16977 -16978 0
16977 -11905 0
16978 -11905 0
c ((SATLiteral(16979) /\ SATLiteral(16980))=tv=SATLiteral(11906))
11906 -16979 -16980 0
16979 -11906 0
16980 -11906 0
c ((SATLiteral(16981) /\ SATLiteral(16982))=tv=SATLiteral(11907))
11907 -16981 -16982 0
16981 -11907 0
16982 -11907 0
c ((SATLiteral(16983) /\ SATLiteral(16984))=tv=SATLiteral(11908))
11908 -16983 -16984 0
16983 -11908 0
16984 -11908 0
c ((SATLiteral(16985) /\ SATLiteral(16986))=tv=SATLiteral(11909))
11909 -16985 -16986 0
16985 -11909 0
16986 -11909 0
c ((SATLiteral(16987) /\ SATLiteral(16988))=tv=SATLiteral(11910))
11910 -16987 -16988 0
16987 -11910 0
16988 -11910 0
c ((SATLiteral(16989) /\ SATLiteral(16990))=tv=SATLiteral(11911))
11911 -16989 -16990 0
16989 -11911 0
16990 -11911 0
c ((SATLiteral(16991) /\ SATLiteral(16992))=tv=SATLiteral(11912))
11912 -16991 -16992 0
16991 -11912 0
16992 -11912 0
c ((SATLiteral(16993) /\ SATLiteral(16994))=tv=SATLiteral(11913))
11913 -16993 -16994 0
16993 -11913 0
16994 -11913 0
c ((SATLiteral(16995) /\ SATLiteral(16996))=tv=SATLiteral(11914))
11914 -16995 -16996 0
16995 -11914 0
16996 -11914 0
c ((SATLiteral(16997) /\ SATLiteral(16998))=tv=SATLiteral(11915))
11915 -16997 -16998 0
16997 -11915 0
16998 -11915 0
c ((SATLiteral(16999) /\ SATLiteral(17000))=tv=SATLiteral(11916))
11916 -16999 -17000 0
16999 -11916 0
17000 -11916 0
c ((SATLiteral(17001) /\ SATLiteral(17002))=tv=SATLiteral(11917))
11917 -17001 -17002 0
17001 -11917 0
17002 -11917 0
c ((SATLiteral(17003) /\ SATLiteral(17004))=tv=SATLiteral(11918))
11918 -17003 -17004 0
17003 -11918 0
17004 -11918 0
c ((SATLiteral(17005) /\ SATLiteral(17006))=tv=SATLiteral(11919))
11919 -17005 -17006 0
17005 -11919 0
17006 -11919 0
c ((SATLiteral(17007) /\ SATLiteral(17008))=tv=SATLiteral(11920))
11920 -17007 -17008 0
17007 -11920 0
17008 -11920 0
c ((SATLiteral(17009) /\ SATLiteral(17010))=tv=SATLiteral(11921))
11921 -17009 -17010 0
17009 -11921 0
17010 -11921 0
c ((SATLiteral(17011) /\ SATLiteral(17012))=tv=SATLiteral(11922))
11922 -17011 -17012 0
17011 -11922 0
17012 -11922 0
c ((SATLiteral(17013) /\ SATLiteral(17014))=tv=SATLiteral(11923))
11923 -17013 -17014 0
17013 -11923 0
17014 -11923 0
c ((SATLiteral(17015) /\ SATLiteral(17016))=tv=SATLiteral(11924))
11924 -17015 -17016 0
17015 -11924 0
17016 -11924 0
c ((SATLiteral(17017) /\ SATLiteral(17018))=tv=SATLiteral(11925))
11925 -17017 -17018 0
17017 -11925 0
17018 -11925 0
c ((SATLiteral(17019) /\ SATLiteral(17020))=tv=SATLiteral(11926))
11926 -17019 -17020 0
17019 -11926 0
17020 -11926 0
c ((SATLiteral(17021) /\ SATLiteral(17022))=tv=SATLiteral(11927))
11927 -17021 -17022 0
17021 -11927 0
17022 -11927 0
c ((SATLiteral(17023) /\ SATLiteral(17024))=tv=SATLiteral(11928))
11928 -17023 -17024 0
17023 -11928 0
17024 -11928 0
c ((SATLiteral(17025) /\ SATLiteral(17026))=tv=SATLiteral(11929))
11929 -17025 -17026 0
17025 -11929 0
17026 -11929 0
c ((SATLiteral(17027) /\ SATLiteral(17028))=tv=SATLiteral(11930))
11930 -17027 -17028 0
17027 -11930 0
17028 -11930 0
c ((SATLiteral(17029) /\ SATLiteral(17030))=tv=SATLiteral(11931))
11931 -17029 -17030 0
17029 -11931 0
17030 -11931 0
c ((SATLiteral(17031) /\ SATLiteral(17032))=tv=SATLiteral(11932))
11932 -17031 -17032 0
17031 -11932 0
17032 -11932 0
c ((SATLiteral(17033) /\ SATLiteral(17034))=tv=SATLiteral(11933))
11933 -17033 -17034 0
17033 -11933 0
17034 -11933 0
c ((SATLiteral(17035) /\ SATLiteral(17036))=tv=SATLiteral(11934))
11934 -17035 -17036 0
17035 -11934 0
17036 -11934 0
c ((SATLiteral(17037) /\ SATLiteral(17038))=tv=SATLiteral(11935))
11935 -17037 -17038 0
17037 -11935 0
17038 -11935 0
c ((SATLiteral(17039) /\ SATLiteral(17040))=tv=SATLiteral(11936))
11936 -17039 -17040 0
17039 -11936 0
17040 -11936 0
c ((SATLiteral(17041) /\ SATLiteral(17042))=tv=SATLiteral(11937))
11937 -17041 -17042 0
17041 -11937 0
17042 -11937 0
c ((SATLiteral(17043) /\ SATLiteral(17044))=tv=SATLiteral(11938))
11938 -17043 -17044 0
17043 -11938 0
17044 -11938 0
c ((SATLiteral(17045) /\ SATLiteral(17046))=tv=SATLiteral(11939))
11939 -17045 -17046 0
17045 -11939 0
17046 -11939 0
c ((SATLiteral(17047) /\ SATLiteral(17048))=tv=SATLiteral(11940))
11940 -17047 -17048 0
17047 -11940 0
17048 -11940 0
c ((SATLiteral(17049) /\ SATLiteral(17050))=tv=SATLiteral(11941))
11941 -17049 -17050 0
17049 -11941 0
17050 -11941 0
c ((SATLiteral(17051) /\ SATLiteral(17052))=tv=SATLiteral(11942))
11942 -17051 -17052 0
17051 -11942 0
17052 -11942 0
c ((SATLiteral(17053) /\ SATLiteral(17054))=tv=SATLiteral(11943))
11943 -17053 -17054 0
17053 -11943 0
17054 -11943 0
c ((SATLiteral(17055) /\ SATLiteral(17056))=tv=SATLiteral(11944))
11944 -17055 -17056 0
17055 -11944 0
17056 -11944 0
c ((SATLiteral(17057) /\ SATLiteral(17058))=tv=SATLiteral(11945))
11945 -17057 -17058 0
17057 -11945 0
17058 -11945 0
c ((SATLiteral(17059) /\ SATLiteral(17060))=tv=SATLiteral(11946))
11946 -17059 -17060 0
17059 -11946 0
17060 -11946 0
c ((SATLiteral(17061) /\ SATLiteral(17062))=tv=SATLiteral(11947))
11947 -17061 -17062 0
17061 -11947 0
17062 -11947 0
c ((SATLiteral(17063) /\ SATLiteral(17064))=tv=SATLiteral(11948))
11948 -17063 -17064 0
17063 -11948 0
17064 -11948 0
c ((SATLiteral(17065) /\ SATLiteral(17066))=tv=SATLiteral(11949))
11949 -17065 -17066 0
17065 -11949 0
17066 -11949 0
c ((SATLiteral(17067) /\ SATLiteral(17068))=tv=SATLiteral(11950))
11950 -17067 -17068 0
17067 -11950 0
17068 -11950 0
c ((SATLiteral(17069) /\ SATLiteral(17070))=tv=SATLiteral(11951))
11951 -17069 -17070 0
17069 -11951 0
17070 -11951 0
c ((SATLiteral(17071) /\ SATLiteral(17072))=tv=SATLiteral(11952))
11952 -17071 -17072 0
17071 -11952 0
17072 -11952 0
c ((SATLiteral(17073) /\ SATLiteral(17074))=tv=SATLiteral(11953))
11953 -17073 -17074 0
17073 -11953 0
17074 -11953 0
c ((SATLiteral(17075) /\ SATLiteral(17076))=tv=SATLiteral(11954))
11954 -17075 -17076 0
17075 -11954 0
17076 -11954 0
c ((SATLiteral(17077) /\ SATLiteral(17078))=tv=SATLiteral(11955))
11955 -17077 -17078 0
17077 -11955 0
17078 -11955 0
c ((SATLiteral(17079) /\ SATLiteral(17080))=tv=SATLiteral(11956))
11956 -17079 -17080 0
17079 -11956 0
17080 -11956 0
c ((SATLiteral(17081) /\ SATLiteral(17082))=tv=SATLiteral(11957))
11957 -17081 -17082 0
17081 -11957 0
17082 -11957 0
c ((SATLiteral(17083) /\ SATLiteral(17084))=tv=SATLiteral(11958))
11958 -17083 -17084 0
17083 -11958 0
17084 -11958 0
c ((SATLiteral(17085) /\ SATLiteral(17086))=tv=SATLiteral(11959))
11959 -17085 -17086 0
17085 -11959 0
17086 -11959 0
c ((SATLiteral(17087) /\ SATLiteral(17088))=tv=SATLiteral(11960))
11960 -17087 -17088 0
17087 -11960 0
17088 -11960 0
c ((SATLiteral(17089) /\ SATLiteral(17090))=tv=SATLiteral(11961))
11961 -17089 -17090 0
17089 -11961 0
17090 -11961 0
c ((SATLiteral(17091) /\ SATLiteral(17092))=tv=SATLiteral(11962))
11962 -17091 -17092 0
17091 -11962 0
17092 -11962 0
c ((SATLiteral(17093) /\ SATLiteral(17094))=tv=SATLiteral(11963))
11963 -17093 -17094 0
17093 -11963 0
17094 -11963 0
c ((SATLiteral(17095) /\ SATLiteral(17096))=tv=SATLiteral(11964))
11964 -17095 -17096 0
17095 -11964 0
17096 -11964 0
c ((SATLiteral(17097) /\ SATLiteral(17098))=tv=SATLiteral(11965))
11965 -17097 -17098 0
17097 -11965 0
17098 -11965 0
c ((SATLiteral(17099) /\ SATLiteral(17100))=tv=SATLiteral(11966))
11966 -17099 -17100 0
17099 -11966 0
17100 -11966 0
c ((SATLiteral(17101) /\ SATLiteral(17102))=tv=SATLiteral(11967))
11967 -17101 -17102 0
17101 -11967 0
17102 -11967 0
c ((SATLiteral(17103) /\ SATLiteral(17104))=tv=SATLiteral(11968))
11968 -17103 -17104 0
17103 -11968 0
17104 -11968 0
c ((SATLiteral(17105) /\ SATLiteral(17106))=tv=SATLiteral(11969))
11969 -17105 -17106 0
17105 -11969 0
17106 -11969 0
c ((SATLiteral(17107) /\ SATLiteral(17108))=tv=SATLiteral(11970))
11970 -17107 -17108 0
17107 -11970 0
17108 -11970 0
c ((SATLiteral(17109) /\ SATLiteral(17110))=tv=SATLiteral(11971))
11971 -17109 -17110 0
17109 -11971 0
17110 -11971 0
c ((SATLiteral(17111) /\ SATLiteral(17112))=tv=SATLiteral(11972))
11972 -17111 -17112 0
17111 -11972 0
17112 -11972 0
c ((SATLiteral(17113) /\ SATLiteral(17114))=tv=SATLiteral(11973))
11973 -17113 -17114 0
17113 -11973 0
17114 -11973 0
c ((SATLiteral(17115) /\ SATLiteral(17116))=tv=SATLiteral(11974))
11974 -17115 -17116 0
17115 -11974 0
17116 -11974 0
c ((SATLiteral(17117) /\ SATLiteral(17118))=tv=SATLiteral(11975))
11975 -17117 -17118 0
17117 -11975 0
17118 -11975 0
c ((SATLiteral(17119) /\ SATLiteral(17120))=tv=SATLiteral(11976))
11976 -17119 -17120 0
17119 -11976 0
17120 -11976 0
c ((SATLiteral(17121) /\ SATLiteral(17122))=tv=SATLiteral(11977))
11977 -17121 -17122 0
17121 -11977 0
17122 -11977 0
c ((SATLiteral(17123) /\ SATLiteral(17124))=tv=SATLiteral(11978))
11978 -17123 -17124 0
17123 -11978 0
17124 -11978 0
c ((SATLiteral(17125) /\ SATLiteral(17126))=tv=SATLiteral(11979))
11979 -17125 -17126 0
17125 -11979 0
17126 -11979 0
c ((SATLiteral(17127) /\ SATLiteral(17128))=tv=SATLiteral(11980))
11980 -17127 -17128 0
17127 -11980 0
17128 -11980 0
c ((SATLiteral(17129) /\ SATLiteral(17130))=tv=SATLiteral(11981))
11981 -17129 -17130 0
17129 -11981 0
17130 -11981 0
c ((SATLiteral(17131) /\ SATLiteral(17132))=tv=SATLiteral(11982))
11982 -17131 -17132 0
17131 -11982 0
17132 -11982 0
c ((SATLiteral(17133) /\ SATLiteral(17134))=tv=SATLiteral(11983))
11983 -17133 -17134 0
17133 -11983 0
17134 -11983 0
c ((SATLiteral(17135) /\ SATLiteral(17136))=tv=SATLiteral(11984))
11984 -17135 -17136 0
17135 -11984 0
17136 -11984 0
c ((SATLiteral(17137) /\ SATLiteral(17138))=tv=SATLiteral(11985))
11985 -17137 -17138 0
17137 -11985 0
17138 -11985 0
c ((SATLiteral(17139) /\ SATLiteral(17140))=tv=SATLiteral(11986))
11986 -17139 -17140 0
17139 -11986 0
17140 -11986 0
c ((SATLiteral(17141) /\ SATLiteral(17142))=tv=SATLiteral(11987))
11987 -17141 -17142 0
17141 -11987 0
17142 -11987 0
c ((SATLiteral(17143) /\ SATLiteral(17144))=tv=SATLiteral(11988))
11988 -17143 -17144 0
17143 -11988 0
17144 -11988 0
c ((SATLiteral(17145) /\ SATLiteral(17146))=tv=SATLiteral(11989))
11989 -17145 -17146 0
17145 -11989 0
17146 -11989 0
c ((SATLiteral(17147) /\ SATLiteral(17148))=tv=SATLiteral(11990))
11990 -17147 -17148 0
17147 -11990 0
17148 -11990 0
c ((SATLiteral(17149) /\ SATLiteral(17150))=tv=SATLiteral(11991))
11991 -17149 -17150 0
17149 -11991 0
17150 -11991 0
c ((SATLiteral(17151) /\ SATLiteral(17152))=tv=SATLiteral(11992))
11992 -17151 -17152 0
17151 -11992 0
17152 -11992 0
c ((SATLiteral(17153) /\ SATLiteral(17154))=tv=SATLiteral(11993))
11993 -17153 -17154 0
17153 -11993 0
17154 -11993 0
c ((SATLiteral(17155) /\ SATLiteral(17156))=tv=SATLiteral(11994))
11994 -17155 -17156 0
17155 -11994 0
17156 -11994 0
c ((SATLiteral(17157) /\ SATLiteral(17158))=tv=SATLiteral(11995))
11995 -17157 -17158 0
17157 -11995 0
17158 -11995 0
c ((SATLiteral(17159) /\ SATLiteral(17160))=tv=SATLiteral(11996))
11996 -17159 -17160 0
17159 -11996 0
17160 -11996 0
c ((SATLiteral(17161) /\ SATLiteral(17162))=tv=SATLiteral(11997))
11997 -17161 -17162 0
17161 -11997 0
17162 -11997 0
c ((SATLiteral(17163) /\ SATLiteral(17164))=tv=SATLiteral(11998))
11998 -17163 -17164 0
17163 -11998 0
17164 -11998 0
c ((SATLiteral(17165) /\ SATLiteral(17166))=tv=SATLiteral(11999))
11999 -17165 -17166 0
17165 -11999 0
17166 -11999 0
c ((SATLiteral(17167) /\ SATLiteral(17168))=tv=SATLiteral(12000))
12000 -17167 -17168 0
17167 -12000 0
17168 -12000 0
c ((SATLiteral(17169) /\ SATLiteral(17170))=tv=SATLiteral(12001))
12001 -17169 -17170 0
17169 -12001 0
17170 -12001 0
c ((SATLiteral(17171) /\ SATLiteral(17172))=tv=SATLiteral(12002))
12002 -17171 -17172 0
17171 -12002 0
17172 -12002 0
c ((SATLiteral(17173) /\ SATLiteral(17174))=tv=SATLiteral(12003))
12003 -17173 -17174 0
17173 -12003 0
17174 -12003 0
c ((SATLiteral(17175) /\ SATLiteral(17176))=tv=SATLiteral(12004))
12004 -17175 -17176 0
17175 -12004 0
17176 -12004 0
c ((SATLiteral(17177) /\ SATLiteral(17178))=tv=SATLiteral(12005))
12005 -17177 -17178 0
17177 -12005 0
17178 -12005 0
c ((SATLiteral(17179) /\ SATLiteral(17180))=tv=SATLiteral(12006))
12006 -17179 -17180 0
17179 -12006 0
17180 -12006 0
c ((SATLiteral(17181) /\ SATLiteral(17182))=tv=SATLiteral(12007))
12007 -17181 -17182 0
17181 -12007 0
17182 -12007 0
c ((SATLiteral(17183) /\ SATLiteral(17184))=tv=SATLiteral(12008))
12008 -17183 -17184 0
17183 -12008 0
17184 -12008 0
c ((SATLiteral(17185) /\ SATLiteral(17186))=tv=SATLiteral(12009))
12009 -17185 -17186 0
17185 -12009 0
17186 -12009 0
c ((SATLiteral(17187) /\ SATLiteral(17188))=tv=SATLiteral(12010))
12010 -17187 -17188 0
17187 -12010 0
17188 -12010 0
c ((SATLiteral(17189) /\ SATLiteral(17190))=tv=SATLiteral(12011))
12011 -17189 -17190 0
17189 -12011 0
17190 -12011 0
c ((SATLiteral(17191) /\ SATLiteral(17192))=tv=SATLiteral(12012))
12012 -17191 -17192 0
17191 -12012 0
17192 -12012 0
c ((SATLiteral(17193) /\ SATLiteral(17194))=tv=SATLiteral(12013))
12013 -17193 -17194 0
17193 -12013 0
17194 -12013 0
c ((SATLiteral(17195) /\ SATLiteral(17196))=tv=SATLiteral(12014))
12014 -17195 -17196 0
17195 -12014 0
17196 -12014 0
c ((SATLiteral(17197) /\ SATLiteral(17198))=tv=SATLiteral(12015))
12015 -17197 -17198 0
17197 -12015 0
17198 -12015 0
c ((SATLiteral(17199) /\ SATLiteral(17200))=tv=SATLiteral(12016))
12016 -17199 -17200 0
17199 -12016 0
17200 -12016 0
c (field_00009_00001=variant_fields_00004_00001_00001)
-1082 10352 0
-1083 10354 0
-1084 10356 0
-1085 10358 0
-1086 10360 0
-1087 10362 0
-1088 10364 0
-1089 10366 0
-1090 -10365 0
-10352 1082 0
-10354 1083 0
-10356 1084 0
-10358 1085 0
-10360 1086 0
-10362 1087 0
-10364 1088 0
-10366 1089 0
10365 1090 0
c (variant_fields_00003_00001_00001=field_00001_00009)
-9137 122 0
-9139 123 0
-9141 124 0
-9143 125 0
-9145 126 0
-9147 127 0
-9149 128 0
-9151 129 0
9150 130 0
-122 9137 0
-123 9139 0
-124 9141 0
-125 9143 0
-126 9145 0
-127 9147 0
-128 9149 0
-129 9151 0
-130 -9150 0
c (variant_fields_00001_00001_00001=field_00001_00001)
-6707 2 0
-6709 3 0
-6711 4 0
-6713 5 0
-6715 6 0
-6717 7 0
-6719 8 0
-6721 9 0
6720 10 0
-2 6707 0
-3 6709 0
-4 6711 0
-5 6713 0
-6 6715 0
-7 6717 0
-8 6719 0
-9 6721 0
-10 -6720 0
c (variant_fields_00002_00001_00001=field_00001_00001)
-7922 2 0
-7924 3 0
-7926 4 0
-7928 5 0
-7930 6 0
-7932 7 0
-7934 8 0
-7936 9 0
7935 10 0
-2 7922 0
-3 7924 0
-4 7926 0
-5 7928 0
-6 7930 0
-7 7932 0
-8 7934 0
-9 7936 0
-10 -7935 0
c (field_00008_00001=variant_fields_00004_00001_00002)
-947 10367 0
-948 10369 0
-949 10371 0
-950 10373 0
-951 10375 0
-952 10377 0
-953 10379 0
-954 10381 0
-955 -10380 0
-10367 947 0
-10369 948 0
-10371 949 0
-10373 950 0
-10375 951 0
-10377 952 0
-10379 953 0
-10381 954 0
10380 955 0
c (variant_fields_00003_00001_00002=field_00001_00008)
-9152 107 0
-9154 108 0
-9156 109 0
-9158 110 0
-9160 111 0
-9162 112 0
-9164 113 0
-9166 114 0
9165 115 0
-107 9152 0
-108 9154 0
-109 9156 0
-110 9158 0
-111 9160 0
-112 9162 0
-113 9164 0
-114 9166 0
-115 -9165 0
c (variant_fields_00001_00001_00002=field_00001_00002)
-6722 17 0
-6724 18 0
-6726 19 0
-6728 20 0
-6730 21 0
-6732 22 0
-6734 23 0
-6736 24 0
6735 25 0
-17 6722 0
-18 6724 0
-19 6726 0
-20 6728 0
-21 6730 0
-22 6732 0
-23 6734 0
-24 6736 0
-25 -6735 0
c (variant_fields_00002_00001_00002=field_00002_00001)
-7937 137 0
-7939 138 0
-7941 139 0
-7943 140 0
-7945 141 0
-7947 142 0
-7949 143 0
-7951 144 0
7950 145 0
-137 7937 0
-138 7939 0
-139 7941 0
-140 7943 0
-141 7945 0
-142 7947 0
-143 7949 0
-144 7951 0
-145 -7950 0
c (field_00007_00001=variant_fields_00004_00001_00003)
-812 10382 0
-813 10384 0
-814 10386 0
-815 10388 0
-816 10390 0
-817 10392 0
-818 10394 0
-819 10396 0
-820 -10395 0
-10382 812 0
-10384 813 0
-10386 814 0
-10388 815 0
-10390 816 0
-10392 817 0
-10394 818 0
-10396 819 0
10395 820 0
c (variant_fields_00003_00001_00003=field_00001_00007)
-9167 92 0
-9169 93 0
-9171 94 0
-9173 95 0
-9175 96 0
-9177 97 0
-9179 98 0
-9181 99 0
9180 100 0
-92 9167 0
-93 9169 0
-94 9171 0
-95 9173 0
-96 9175 0
-97 9177 0
-98 9179 0
-99 9181 0
-100 -9180 0
c (variant_fields_00001_00001_00003=field_00001_00003)
-6737 32 0
-6739 33 0
-6741 34 0
-6743 35 0
-6745 36 0
-6747 37 0
-6749 38 0
-6751 39 0
6750 40 0
-32 6737 0
-33 6739 0
-34 6741 0
-35 6743 0
-36 6745 0
-37 6747 0
-38 6749 0
-39 6751 0
-40 -6750 0
c (variant_fields_00002_00001_00003=field_00003_00001)
-7952 272 0
-7954 273 0
-7956 274 0
-7958 275 0
-7960 276 0
-7962 277 0
-7964 278 0
-7966 279 0
7965 280 0
-272 7952 0
-273 7954 0
-274 7956 0
-275 7958 0
-276 7960 0
-277 7962 0
-278 7964 0
-279 7966 0
-280 -7965 0
c (field_00006_00001=variant_fields_00004_00001_00004)
-677 10397 0
-678 10399 0
-679 10401 0
-680 10403 0
-681 10405 0
-682 10407 0
-683 10409 0
-684 10411 0
-685 -10410 0
-10397 677 0
-10399 678 0
-10401 679 0
-10403 680 0
-10405 681 0
-10407 682 0
-10409 683 0
-10411 684 0
10410 685 0
c (variant_fields_00003_00001_00004=field_00001_00006)
-9182 77 0
-9184 78 0
-9186 79 0
-9188 80 0
-9190 81 0
-9192 82 0
-9194 83 0
-9196 84 0
9195 85 0
-77 9182 0
-78 9184 0
-79 9186 0
-80 9188 0
-81 9190 0
-82 9192 0
-83 9194 0
-84 9196 0
-85 -9195 0
c (variant_fields_00001_00001_00004=field_00001_00004)
-6752 47 0
-6754 48 0
-6756 49 0
-6758 50 0
-6760 51 0
-6762 52 0
-6764 53 0
-6766 54 0
6765 55 0
-47 6752 0
-48 6754 0
-49 6756 0
-50 6758 0
-51 6760 0
-52 6762 0
-53 6764 0
-54 6766 0
-55 -6765 0
c (variant_fields_00002_00001_00004=field_00004_00001)
-7967 407 0
-7969 408 0
-7971 409 0
-7973 410 0
-7975 411 0
-7977 412 0
-7979 413 0
-7981 414 0
7980 415 0
-407 7967 0
-408 7969 0
-409 7971 0
-410 7973 0
-411 7975 0
-412 7977 0
-413 7979 0
-414 7981 0
-415 -7980 0
c (field_00005_00001=variant_fields_00004_00001_00005)
-542 10412 0
-543 10414 0
-544 10416 0
-545 10418 0
-546 10420 0
-547 10422 0
-548 10424 0
-549 10426 0
-550 -10425 0
-10412 542 0
-10414 543 0
-10416 544 0
-10418 545 0
-10420 546 0
-10422 547 0
-10424 548 0
-10426 549 0
10425 550 0
c (variant_fields_00003_00001_00005=field_00001_00005)
-9197 62 0
-9199 63 0
-9201 64 0
-9203 65 0
-9205 66 0
-9207 67 0
-9209 68 0
-9211 69 0
9210 70 0
-62 9197 0
-63 9199 0
-64 9201 0
-65 9203 0
-66 9205 0
-67 9207 0
-68 9209 0
-69 9211 0
-70 -9210 0
c (variant_fields_00001_00001_00005=field_00001_00005)
-6767 62 0
-6769 63 0
-6771 64 0
-6773 65 0
-6775 66 0
-6777 67 0
-6779 68 0
-6781 69 0
6780 70 0
-62 6767 0
-63 6769 0
-64 6771 0
-65 6773 0
-66 6775 0
-67 6777 0
-68 6779 0
-69 6781 0
-70 -6780 0
c (variant_fields_00002_00001_00005=field_00005_00001)
-7982 542 0
-7984 543 0
-7986 544 0
-7988 545 0
-7990 546 0
-7992 547 0
-7994 548 0
-7996 549 0
7995 550 0
-542 7982 0
-543 7984 0
-544 7986 0
-545 7988 0
-546 7990 0
-547 7992 0
-548 7994 0
-549 7996 0
-550 -7995 0
c (field_00004_00001=variant_fields_00004_00001_00006)
-407 10427 0
-408 10429 0
-409 10431 0
-410 10433 0
-411 10435 0
-412 10437 0
-413 10439 0
-414 10441 0
-415 -10440 0
-10427 407 0
-10429 408 0
-10431 409 0
-10433 410 0
-10435 411 0
-10437 412 0
-10439 413 0
-10441 414 0
10440 415 0
c (variant_fields_00003_00001_00006=field_00001_00004)
-9212 47 0
-9214 48 0
-9216 49 0
-9218 50 0
-9220 51 0
-9222 52 0
-9224 53 0
-9226 54 0
9225 55 0
-47 9212 0
-48 9214 0
-49 9216 0
-50 9218 0
-51 9220 0
-52 9222 0
-53 9224 0
-54 9226 0
-55 -9225 0
c (variant_fields_00001_00001_00006=field_00001_00006)
-6782 77 0
-6784 78 0
-6786 79 0
-6788 80 0
-6790 81 0
-6792 82 0
-6794 83 0
-6796 84 0
6795 85 0
-77 6782 0
-78 6784 0
-79 6786 0
-80 6788 0
-81 6790 0
-82 6792 0
-83 6794 0
-84 6796 0
-85 -6795 0
c (variant_fields_00002_00001_00006=field_00006_00001)
-7997 677 0
-7999 678 0
-8001 679 0
-8003 680 0
-8005 681 0
-8007 682 0
-8009 683 0
-8011 684 0
8010 685 0
-677 7997 0
-678 7999 0
-679 8001 0
-680 8003 0
-681 8005 0
-682 8007 0
-683 8009 0
-684 8011 0
-685 -8010 0
c (field_00003_00001=variant_fields_00004_00001_00007)
-272 10442 0
-273 10444 0
-274 10446 0
-275 10448 0
-276 10450 0
-277 10452 0
-278 10454 0
-279 10456 0
-280 -10455 0
-10442 272 0
-10444 273 0
-10446 274 0
-10448 275 0
-10450 276 0
-10452 277 0
-10454 278 0
-10456 279 0
10455 280 0
c (variant_fields_00003_00001_00007=field_00001_00003)
-9227 32 0
-9229 33 0
-9231 34 0
-9233 35 0
-9235 36 0
-9237 37 0
-9239 38 0
-9241 39 0
9240 40 0
-32 9227 0
-33 9229 0
-34 9231 0
-35 9233 0
-36 9235 0
-37 9237 0
-38 9239 0
-39 9241 0
-40 -9240 0
c (variant_fields_00001_00001_00007=field_00001_00007)
-6797 92 0
-6799 93 0
-6801 94 0
-6803 95 0
-6805 96 0
-6807 97 0
-6809 98 0
-6811 99 0
6810 100 0
-92 6797 0
-93 6799 0
-94 6801 0
-95 6803 0
-96 6805 0
-97 6807 0
-98 6809 0
-99 6811 0
-100 -6810 0
c (variant_fields_00002_00001_00007=field_00007_00001)
-8012 812 0
-8014 813 0
-8016 814 0
-8018 815 0
-8020 816 0
-8022 817 0
-8024 818 0
-8026 819 0
8025 820 0
-812 8012 0
-813 8014 0
-814 8016 0
-815 8018 0
-816 8020 0
-817 8022 0
-818 8024 0
-819 8026 0
-820 -8025 0
c (field_00002_00001=variant_fields_00004_00001_00008)
-137 10457 0
-138 10459 0
-139 10461 0
-140 10463 0
-141 10465 0
-142 10467 0
-143 10469 0
-144 10471 0
-145 -10470 0
-10457 137 0
-10459 138 0
-10461 139 0
-10463 140 0
-10465 141 0
-10467 142 0
-10469 143 0
-10471 144 0
10470 145 0
c (variant_fields_00003_00001_00008=field_00001_00002)
-9242 17 0
-9244 18 0
-9246 19 0
-9248 20 0
-9250 21 0
-9252 22 0
-9254 23 0
-9256 24 0
9255 25 0
-17 9242 0
-18 9244 0
-19 9246 0
-20 9248 0
-21 9250 0
-22 9252 0
-23 9254 0
-24 9256 0
-25 -9255 0
c (variant_fields_00001_00001_00008=field_00001_00008)
-6812 107 0
-6814 108 0
-6816 109 0
-6818 110 0
-6820 111 0
-6822 112 0
-6824 113 0
-6826 114 0
6825 115 0
-107 6812 0
-108 6814 0
-109 6816 0
-110 6818 0
-111 6820 0
-112 6822 0
-113 6824 0
-114 6826 0
-115 -6825 0
c (variant_fields_00002_00001_00008=field_00008_00001)
-8027 947 0
-8029 948 0
-8031 949 0
-8033 950 0
-8035 951 0
-8037 952 0
-8039 953 0
-8041 954 0
8040 955 0
-947 8027 0
-948 8029 0
-949 8031 0
-950 8033 0
-951 8035 0
-952 8037 0
-953 8039 0
-954 8041 0
-955 -8040 0
c (field_00001_00001=variant_fields_00004_00001_00009)
-2 10472 0
-3 10474 0
-4 10476 0
-5 10478 0
-6 10480 0
-7 10482 0
-8 10484 0
-9 10486 0
-10 -10485 0
-10472 2 0
-10474 3 0
-10476 4 0
-10478 5 0
-10480 6 0
-10482 7 0
-10484 8 0
-10486 9 0
10485 10 0
c (variant_fields_00003_00001_00009=field_00001_00001)
-9257 2 0
-9259 3 0
-9261 4 0
-9263 5 0
-9265 6 0
-9267 7 0
-9269 8 0
-9271 9 0
9270 10 0
-2 9257 0
-3 9259 0
-4 9261 0
-5 9263 0
-6 9265 0
-7 9267 0
-8 9269 0
-9 9271 0
-10 -9270 0
c (variant_fields_00001_00001_00009=field_00001_00009)
-6827 122 0
-6829 123 0
-6831 124 0
-6833 125 0
-6835 126 0
-6837 127 0
-6839 128 0
-6841 129 0
6840 130 0
-122 6827 0
-123 6829 0
-124 6831 0
-125 6833 0
-126 6835 0
-127 6837 0
-128 6839 0
-129 6841 0
-130 -6840 0
c (variant_fields_00002_00001_00009=field_00009_00001)
-8042 1082 0
-8044 1083 0
-8046 1084 0
-8048 1085 0
-8050 1086 0
-8052 1087 0
-8054 1088 0
-8056 1089 0
8055 1090 0
-1082 8042 0
-1083 8044 0
-1084 8046 0
-1085 8048 0
-1086 8050 0
-1087 8052 0
-1088 8054 0
-1089 8056 0
-1090 -8055 0
c (variant_fields_00004_00002_00001=field_00009_00002)
-10487 1097 0
-10489 1098 0
-10491 1099 0
-10493 1100 0
-10495 1101 0
-10497 1102 0
-10499 1103 0
-10501 1104 0
10500 1105 0
-1097 10487 0
-1098 10489 0
-1099 10491 0
-1100 10493 0
-1101 10495 0
-1102 10497 0
-1103 10499 0
-1104 10501 0
-1105 -10500 0
c (variant_fields_00003_00002_00001=field_00002_00009)
-9272 257 0
-9274 258 0
-9276 259 0
-9278 260 0
-9280 261 0
-9282 262 0
-9284 263 0
-9286 264 0
9285 265 0
-257 9272 0
-258 9274 0
-259 9276 0
-260 9278 0
-261 9280 0
-262 9282 0
-263 9284 0
-264 9286 0
-265 -9285 0
c (variant_fields_00001_00002_00001=field_00002_00001)
-6842 137 0
-6844 138 0
-6846 139 0
-6848 140 0
-6850 141 0
-6852 142 0
-6854 143 0
-6856 144 0
6855 145 0
-137 6842 0
-138 6844 0
-139 6846 0
-140 6848 0
-141 6850 0
-142 6852 0
-143 6854 0
-144 6856 0
-145 -6855 0
c (variant_fields_00002_00002_00001=field_00001_00002)
-8057 17 0
-8059 18 0
-8061 19 0
-8063 20 0
-8065 21 0
-8067 22 0
-8069 23 0
-8071 24 0
8070 25 0
-17 8057 0
-18 8059 0
-19 8061 0
-20 8063 0
-21 8065 0
-22 8067 0
-23 8069 0
-24 8071 0
-25 -8070 0
c (field_00008_00002=variant_fields_00004_00002_00002)
-962 10502 0
-963 10504 0
-964 10506 0
-965 10508 0
-966 10510 0
-967 10512 0
-968 10514 0
-969 10516 0
-970 -10515 0
-10502 962 0
-10504 963 0
-10506 964 0
-10508 965 0
-10510 966 0
-10512 967 0
-10514 968 0
-10516 969 0
10515 970 0
c (variant_fields_00003_00002_00002=field_00002_00008)
-9287 242 0
-9289 243 0
-9291 244 0
-9293 245 0
-9295 246 0
-9297 247 0
-9299 248 0
-9301 249 0
9300 250 0
-242 9287 0
-243 9289 0
-244 9291 0
-245 9293 0
-246 9295 0
-247 9297 0
-248 9299 0
-249 9301 0
-250 -9300 0
c (variant_fields_00001_00002_00002=field_00002_00002)
-6857 152 0
-6859 153 0
-6861 154 0
-6863 155 0
-6865 156 0
-6867 157 0
-6869 158 0
-6871 159 0
6870 160 0
-152 6857 0
-153 6859 0
-154 6861 0
-155 6863 0
-156 6865 0
-157 6867 0
-158 6869 0
-159 6871 0
-160 -6870 0
c (variant_fields_00002_00002_00002=field_00002_00002)
-8072 152 0
-8074 153 0
-8076 154 0
-8078 155 0
-8080 156 0
-8082 157 0
-8084 158 0
-8086 159 0
8085 160 0
-152 8072 0
-153 8074 0
-154 8076 0
-155 8078 0
-156 8080 0
-157 8082 0
-158 8084 0
-159 8086 0
-160 -8085 0
c (variant_fields_00004_00002_00003=field_00007_00002)
-10517 827 0
-10519 828 0
-10521 829 0
-10523 830 0
-10525 831 0
-10527 832 0
-10529 833 0
-10531 834 0
10530 835 0
-827 10517 0
-828 10519 0
-829 10521 0
-830 10523 0
-831 10525 0
-832 10527 0
-833 10529 0
-834 10531 0
-835 -10530 0
c (variant_fields_00003_00002_00003=field_00002_00007)
-9302 227 0
-9304 228 0
-9306 229 0
-9308 230 0
-9310 231 0
-9312 232 0
-9314 233 0
-9316 234 0
9315 235 0
-227 9302 0
-228 9304 0
-229 9306 0
-230 9308 0
-231 9310 0
-232 9312 0
-233 9314 0
-234 9316 0
-235 -9315 0
c (variant_fields_00001_00002_00003=field_00002_00003)
-6872 167 0
-6874 168 0
-6876 169 0
-6878 170 0
-6880 171 0
-6882 172 0
-6884 173 0
-6886 174 0
6885 175 0
-167 6872 0
-168 6874 0
-169 6876 0
-170 6878 0
-171 6880 0
-172 6882 0
-173 6884 0
-174 6886 0
-175 -6885 0
c (field_00003_00002=variant_fields_00002_00002_00003)
-287 8087 0
-288 8089 0
-289 8091 0
-290 8093 0
-291 8095 0
-292 8097 0
-293 8099 0
-294 8101 0
-295 -8100 0
-8087 287 0
-8089 288 0
-8091 289 0
-8093 290 0
-8095 291 0
-8097 292 0
-8099 293 0
-8101 294 0
8100 295 0
c (variant_fields_00004_00002_00004=field_00006_00002)
-10532 692 0
-10534 693 0
-10536 694 0
-10538 695 0
-10540 696 0
-10542 697 0
-10544 698 0
-10546 699 0
10545 700 0
-692 10532 0
-693 10534 0
-694 10536 0
-695 10538 0
-696 10540 0
-697 10542 0
-698 10544 0
-699 10546 0
-700 -10545 0
c (variant_fields_00003_00002_00004=field_00002_00006)
-9317 212 0
-9319 213 0
-9321 214 0
-9323 215 0
-9325 216 0
-9327 217 0
-9329 218 0
-9331 219 0
9330 220 0
-212 9317 0
-213 9319 0
-214 9321 0
-215 9323 0
-216 9325 0
-217 9327 0
-218 9329 0
-219 9331 0
-220 -9330 0
c (variant_fields_00001_00002_00004=field_00002_00004)
-6887 182 0
-6889 183 0
-6891 184 0
-6893 185 0
-6895 186 0
-6897 187 0
-6899 188 0
-6901 189 0
6900 190 0
-182 6887 0
-183 6889 0
-184 6891 0
-185 6893 0
-186 6895 0
-187 6897 0
-188 6899 0
-189 6901 0
-190 -6900 0
c (variant_fields_00002_00002_00004=field_00004_00002)
-8102 422 0
-8104 423 0
-8106 424 0
-8108 425 0
-8110 426 0
-8112 427 0
-8114 428 0
-8116 429 0
8115 430 0
-422 8102 0
-423 8104 0
-424 8106 0
-425 8108 0
-426 8110 0
-427 8112 0
-428 8114 0
-429 8116 0
-430 -8115 0
c (variant_fields_00004_00002_00005=field_00005_00002)
-10547 557 0
-10549 558 0
-10551 559 0
-10553 560 0
-10555 561 0
-10557 562 0
-10559 563 0
-10561 564 0
10560 565 0
-557 10547 0
-558 10549 0
-559 10551 0
-560 10553 0
-561 10555 0
-562 10557 0
-563 10559 0
-564 10561 0
-565 -10560 0
c (variant_fields_00003_00002_00005=field_00002_00005)
-9332 197 0
-9334 198 0
-9336 199 0
-9338 200 0
-9340 201 0
-9342 202 0
-9344 203 0
-9346 204 0
9345 205 0
-197 9332 0
-198 9334 0
-199 9336 0
-200 9338 0
-201 9340 0
-202 9342 0
-203 9344 0
-204 9346 0
-205 -9345 0
c (variant_fields_00001_00002_00005=field_00002_00005)
-6902 197 0
-6904 198 0
-6906 199 0
-6908 200 0
-6910 201 0
-6912 202 0
-6914 203 0
-6916 204 0
6915 205 0
-197 6902 0
-198 6904 0
-199 6906 0
-200 6908 0
-201 6910 0
-202 6912 0
-203 6914 0
-204 6916 0
-205 -6915 0
c (variant_fields_00002_00002_00005=field_00005_00002)
-8117 557 0
-8119 558 0
-8121 559 0
-8123 560 0
-8125 561 0
-8127 562 0
-8129 563 0
-8131 564 0
8130 565 0
-557 8117 0
-558 8119 0
-559 8121 0
-560 8123 0
-561 8125 0
-562 8127 0
-563 8129 0
-564 8131 0
-565 -8130 0
c (variant_fields_00004_00002_00006=field_00004_00002)
-10562 422 0
-10564 423 0
-10566 424 0
-10568 425 0
-10570 426 0
-10572 427 0
-10574 428 0
-10576 429 0
10575 430 0
-422 10562 0
-423 10564 0
-424 10566 0
-425 10568 0
-426 10570 0
-427 10572 0
-428 10574 0
-429 10576 0
-430 -10575 0
c (variant_fields_00003_00002_00006=field_00002_00004)
-9347 182 0
-9349 183 0
-9351 184 0
-9353 185 0
-9355 186 0
-9357 187 0
-9359 188 0
-9361 189 0
9360 190 0
-182 9347 0
-183 9349 0
-184 9351 0
-185 9353 0
-186 9355 0
-187 9357 0
-188 9359 0
-189 9361 0
-190 -9360 0
c (variant_fields_00001_00002_00006=field_00002_00006)
-6917 212 0
-6919 213 0
-6921 214 0
-6923 215 0
-6925 216 0
-6927 217 0
-6929 218 0
-6931 219 0
6930 220 0
-212 6917 0
-213 6919 0
-214 6921 0
-215 6923 0
-216 6925 0
-217 6927 0
-218 6929 0
-219 6931 0
-220 -6930 0
c (variant_fields_00002_00002_00006=field_00006_00002)
-8132 692 0
-8134 693 0
-8136 694 0
-8138 695 0
-8140 696 0
-8142 697 0
-8144 698 0
-8146 699 0
8145 700 0
-692 8132 0
-693 8134 0
-694 8136 0
-695 8138 0
-696 8140 0
-697 8142 0
-698 8144 0
-699 8146 0
-700 -8145 0
c (field_00003_00002=variant_fields_00004_00002_00007)
-287 10577 0
-288 10579 0
-289 10581 0
-290 10583 0
-291 10585 0
-292 10587 0
-293 10589 0
-294 10591 0
-295 -10590 0
-10577 287 0
-10579 288 0
-10581 289 0
-10583 290 0
-10585 291 0
-10587 292 0
-10589 293 0
-10591 294 0
10590 295 0
c (variant_fields_00003_00002_00007=field_00002_00003)
-9362 167 0
-9364 168 0
-9366 169 0
-9368 170 0
-9370 171 0
-9372 172 0
-9374 173 0
-9376 174 0
9375 175 0
-167 9362 0
-168 9364 0
-169 9366 0
-170 9368 0
-171 9370 0
-172 9372 0
-173 9374 0
-174 9376 0
-175 -9375 0
c (variant_fields_00001_00002_00007=field_00002_00007)
-6932 227 0
-6934 228 0
-6936 229 0
-6938 230 0
-6940 231 0
-6942 232 0
-6944 233 0
-6946 234 0
6945 235 0
-227 6932 0
-228 6934 0
-229 6936 0
-230 6938 0
-231 6940 0
-232 6942 0
-233 6944 0
-234 6946 0
-235 -6945 0
c (variant_fields_00002_00002_00007=field_00007_00002)
-8147 827 0
-8149 828 0
-8151 829 0
-8153 830 0
-8155 831 0
-8157 832 0
-8159 833 0
-8161 834 0
8160 835 0
-827 8147 0
-828 8149 0
-829 8151 0
-830 8153 0
-831 8155 0
-832 8157 0
-833 8159 0
-834 8161 0
-835 -8160 0
c (variant_fields_00004_00002_00008=field_00002_00002)
-10592 152 0
-10594 153 0
-10596 154 0
-10598 155 0
-10600 156 0
-10602 157 0
-10604 158 0
-10606 159 0
10605 160 0
-152 10592 0
-153 10594 0
-154 10596 0
-155 10598 0
-156 10600 0
-157 10602 0
-158 10604 0
-159 10606 0
-160 -10605 0
c (variant_fields_00003_00002_00008=field_00002_00002)
-9377 152 0
-9379 153 0
-9381 154 0
-9383 155 0
-9385 156 0
-9387 157 0
-9389 158 0
-9391 159 0
9390 160 0
-152 9377 0
-153 9379 0
-154 9381 0
-155 9383 0
-156 9385 0
-157 9387 0
-158 9389 0
-159 9391 0
-160 -9390 0
c (variant_fields_00001_00002_00008=field_00002_00008)
-6947 242 0
-6949 243 0
-6951 244 0
-6953 245 0
-6955 246 0
-6957 247 0
-6959 248 0
-6961 249 0
6960 250 0
-242 6947 0
-243 6949 0
-244 6951 0
-245 6953 0
-246 6955 0
-247 6957 0
-248 6959 0
-249 6961 0
-250 -6960 0
c (field_00008_00002=variant_fields_00002_00002_00008)
-962 8162 0
-963 8164 0
-964 8166 0
-965 8168 0
-966 8170 0
-967 8172 0
-968 8174 0
-969 8176 0
-970 -8175 0
-8162 962 0
-8164 963 0
-8166 964 0
-8168 965 0
-8170 966 0
-8172 967 0
-8174 968 0
-8176 969 0
8175 970 0
c (variant_fields_00004_00002_00009=field_00001_00002)
-10607 17 0
-10609 18 0
-10611 19 0
-10613 20 0
-10615 21 0
-10617 22 0
-10619 23 0
-10621 24 0
10620 25 0
-17 10607 0
-18 10609 0
-19 10611 0
-20 10613 0
-21 10615 0
-22 10617 0
-23 10619 0
-24 10621 0
-25 -10620 0
c (variant_fields_00003_00002_00009=field_00002_00001)
-9392 137 0
-9394 138 0
-9396 139 0
-9398 140 0
-9400 141 0
-9402 142 0
-9404 143 0
-9406 144 0
9405 145 0
-137 9392 0
-138 9394 0
-139 9396 0
-140 9398 0
-141 9400 0
-142 9402 0
-143 9404 0
-144 9406 0
-145 -9405 0
c (variant_fields_00001_00002_00009=field_00002_00009)
-6962 257 0
-6964 258 0
-6966 259 0
-6968 260 0
-6970 261 0
-6972 262 0
-6974 263 0
-6976 264 0
6975 265 0
-257 6962 0
-258 6964 0
-259 6966 0
-260 6968 0
-261 6970 0
-262 6972 0
-263 6974 0
-264 6976 0
-265 -6975 0
c (variant_fields_00002_00002_00009=field_00009_00002)
-8177 1097 0
-8179 1098 0
-8181 1099 0
-8183 1100 0
-8185 1101 0
-8187 1102 0
-8189 1103 0
-8191 1104 0
8190 1105 0
-1097 8177 0
-1098 8179 0
-1099 8181 0
-1100 8183 0
-1101 8185 0
-1102 8187 0
-1103 8189 0
-1104 8191 0
-1105 -8190 0
c (field_00009_00003=variant_fields_00004_00003_00001)
-1112 10622 0
-1113 10624 0
-1114 10626 0
-1115 10628 0
-1116 10630 0
-1117 10632 0
-1118 10634 0
-1119 10636 0
-1120 -10635 0
-10622 1112 0
-10624 1113 0
-10626 1114 0
-10628 1115 0
-10630 1116 0
-10632 1117 0
-10634 1118 0
-10636 1119 0
10635 1120 0
c (field_00003_00009=variant_fields_00003_00003_00001)
-392 9407 0
-393 9409 0
-394 9411 0
-395 9413 0
-396 9415 0
-397 9417 0
-398 9419 0
-399 9421 0
-400 -9420 0
-9407 392 0
-9409 393 0
-9411 394 0
-9413 395 0
-9415 396 0
-9417 397 0
-9419 398 0
-9421 399 0
9420 400 0
c (field_00003_00001=variant_fields_00001_00003_00001)
-272 6977 0
-273 6979 0
-274 6981 0
-275 6983 0
-276 6985 0
-277 6987 0
-278 6989 0
-279 6991 0
-280 -6990 0
-6977 272 0
-6979 273 0
-6981 274 0
-6983 275 0
-6985 276 0
-6987 277 0
-6989 278 0
-6991 279 0
6990 280 0
c (variant_fields_00002_00003_00001=field_00001_00003)
-8192 32 0
-8194 33 0
-8196 34 0
-8198 35 0
-8200 36 0
-8202 37 0
-8204 38 0
-8206 39 0
8205 40 0
-32 8192 0
-33 8194 0
-34 8196 0
-35 8198 0
-36 8200 0
-37 8202 0
-38 8204 0
-39 8206 0
-40 -8205 0
c (field_00008_00003=variant_fields_00004_00003_00002)
-977 10637 0
-978 10639 0
-979 10641 0
-980 10643 0
-981 10645 0
-982 10647 0
-983 10649 0
-984 10651 0
-985 -10650 0
-10637 977 0
-10639 978 0
-10641 979 0
-10643 980 0
-10645 981 0
-10647 982 0
-10649 983 0
-10651 984 0
10650 985 0
c (field_00003_00008=variant_fields_00003_00003_00002)
-377 9422 0
-378 9424 0
-379 9426 0
-380 9428 0
-381 9430 0
-382 9432 0
-383 9434 0
-384 9436 0
-385 -9435 0
-9422 377 0
-9424 378 0
-9426 379 0
-9428 380 0
-9430 381 0
-9432 382 0
-9434 383 0
-9436 384 0
9435 385 0
c (field_00003_00002=variant_fields_00001_00003_00002)
-287 6992 0
-288 6994 0
-289 6996 0
-290 6998 0
-291 7000 0
-292 7002 0
-293 7004 0
-294 7006 0
-295 -7005 0
-6992 287 0
-6994 288 0
-6996 289 0
-6998 290 0
-7000 291 0
-7002 292 0
-7004 293 0
-7006 294 0
7005 295 0
c (variant_fields_00002_00003_00002=field_00002_00003)
-8207 167 0
-8209 168 0
-8211 169 0
-8213 170 0
-8215 171 0
-8217 172 0
-8219 173 0
-8221 174 0
8220 175 0
-167 8207 0
-168 8209 0
-169 8211 0
-170 8213 0
-171 8215 0
-172 8217 0
-173 8219 0
-174 8221 0
-175 -8220 0
c (variant_fields_00004_00003_00003=field_00007_00003)
-10652 842 0
-10654 843 0
-10656 844 0
-10658 845 0
-10660 846 0
-10662 847 0
-10664 848 0
-10666 849 0
10665 850 0
-842 10652 0
-843 10654 0
-844 10656 0
-845 10658 0
-846 10660 0
-847 10662 0
-848 10664 0
-849 10666 0
-850 -10665 0
c (field_00003_00007=variant_fields_00003_00003_00003)
-362 9437 0
-363 9439 0
-364 9441 0
-365 9443 0
-366 9445 0
-367 9447 0
-368 9449 0
-369 9451 0
-370 -9450 0
-9437 362 0
-9439 363 0
-9441 364 0
-9443 365 0
-9445 366 0
-9447 367 0
-9449 368 0
-9451 369 0
9450 370 0
c (field_00003_00003=variant_fields_00001_00003_00003)
-302 7007 0
-303 7009 0
-304 7011 0
-305 7013 0
-306 7015 0
-307 7017 0
-308 7019 0
-309 7021 0
-310 -7020 0
-7007 302 0
-7009 303 0
-7011 304 0
-7013 305 0
-7015 306 0
-7017 307 0
-7019 308 0
-7021 309 0
7020 310 0
c (field_00003_00003=variant_fields_00002_00003_00003)
-302 8222 0
-303 8224 0
-304 8226 0
-305 8228 0
-306 8230 0
-307 8232 0
-308 8234 0
-309 8236 0
-310 -8235 0
-8222 302 0
-8224 303 0
-8226 304 0
-8228 305 0
-8230 306 0
-8232 307 0
-8234 308 0
-8236 309 0
8235 310 0
c (variant_fields_00004_00003_00004=field_00006_00003)
-10667 707 0
-10669 708 0
-10671 709 0
-10673 710 0
-10675 711 0
-10677 712 0
-10679 713 0
-10681 714 0
10680 715 0
-707 10667 0
-708 10669 0
-709 10671 0
-710 10673 0
-711 10675 0
-712 10677 0
-713 10679 0
-714 10681 0
-715 -10680 0
c (field_00003_00006=variant_fields_00003_00003_00004)
-347 9452 0
-348 9454 0
-349 9456 0
-350 9458 0
-351 9460 0
-352 9462 0
-353 9464 0
-354 9466 0
-355 -9465 0
-9452 347 0
-9454 348 0
-9456 349 0
-9458 350 0
-9460 351 0
-9462 352 0
-9464 353 0
-9466 354 0
9465 355 0
c (field_00003_00004=variant_fields_00001_00003_00004)
-317 7022 0
-318 7024 0
-319 7026 0
-320 7028 0
-321 7030 0
-322 7032 0
-323 7034 0
-324 7036 0
-325 -7035 0
-7022 317 0
-7024 318 0
-7026 319 0
-7028 320 0
-7030 321 0
-7032 322 0
-7034 323 0
-7036 324 0
7035 325 0
c (field_00004_00003=variant_fields_00002_00003_00004)
-437 8237 0
-438 8239 0
-439 8241 0
-440 8243 0
-441 8245 0
-442 8247 0
-443 8249 0
-444 8251 0
-445 -8250 0
-8237 437 0
-8239 438 0
-8241 439 0
-8243 440 0
-8245 441 0
-8247 442 0
-8249 443 0
-8251 444 0
8250 445 0
c (variant_fields_00004_00003_00005=field_00005_00003)
-10682 572 0
-10684 573 0
-10686 574 0
-10688 575 0
-10690 576 0
-10692 577 0
-10694 578 0
-10696 579 0
10695 580 0
-572 10682 0
-573 10684 0
-574 10686 0
-575 10688 0
-576 10690 0
-577 10692 0
-578 10694 0
-579 10696 0
-580 -10695 0
c (field_00003_00005=variant_fields_00003_00003_00005)
-332 9467 0
-333 9469 0
-334 9471 0
-335 9473 0
-336 9475 0
-337 9477 0
-338 9479 0
-339 9481 0
-340 -9480 0
-9467 332 0
-9469 333 0
-9471 334 0
-9473 335 0
-9475 336 0
-9477 337 0
-9479 338 0
-9481 339 0
9480 340 0
c (field_00003_00005=variant_fields_00001_00003_00005)
-332 7037 0
-333 7039 0
-334 7041 0
-335 7043 0
-336 7045 0
-337 7047 0
-338 7049 0
-339 7051 0
-340 -7050 0
-7037 332 0
-7039 333 0
-7041 334 0
-7043 335 0
-7045 336 0
-7047 337 0
-7049 338 0
-7051 339 0
7050 340 0
c (variant_fields_00002_00003_00005=field_00005_00003)
-8252 572 0
-8254 573 0
-8256 574 0
-8258 575 0
-8260 576 0
-8262 577 0
-8264 578 0
-8266 579 0
8265 580 0
-572 8252 0
-573 8254 0
-574 8256 0
-575 8258 0
-576 8260 0
-577 8262 0
-578 8264 0
-579 8266 0
-580 -8265 0
c (field_00004_00003=variant_fields_00004_00003_00006)
-437 10697 0
-438 10699 0
-439 10701 0
-440 10703 0
-441 10705 0
-442 10707 0
-443 10709 0
-444 10711 0
-445 -10710 0
-10697 437 0
-10699 438 0
-10701 439 0
-10703 440 0
-10705 441 0
-10707 442 0
-10709 443 0
-10711 444 0
10710 445 0
c (field_00003_00004=variant_fields_00003_00003_00006)
-317 9482 0
-318 9484 0
-319 9486 0
-320 9488 0
-321 9490 0
-322 9492 0
-323 9494 0
-324 9496 0
-325 -9495 0
-9482 317 0
-9484 318 0
-9486 319 0
-9488 320 0
-9490 321 0
-9492 322 0
-9494 323 0
-9496 324 0
9495 325 0
c (field_00003_00006=variant_fields_00001_00003_00006)
-347 7052 0
-348 7054 0
-349 7056 0
-350 7058 0
-351 7060 0
-352 7062 0
-353 7064 0
-354 7066 0
-355 -7065 0
-7052 347 0
-7054 348 0
-7056 349 0
-7058 350 0
-7060 351 0
-7062 352 0
-7064 353 0
-7066 354 0
7065 355 0
c (variant_fields_00002_00003_00006=field_00006_00003)
-8267 707 0
-8269 708 0
-8271 709 0
-8273 710 0
-8275 711 0
-8277 712 0
-8279 713 0
-8281 714 0
8280 715 0
-707 8267 0
-708 8269 0
-709 8271 0
-710 8273 0
-711 8275 0
-712 8277 0
-713 8279 0
-714 8281 0
-715 -8280 0
c (field_00003_00003=variant_fields_00004_00003_00007)
-302 10712 0
-303 10714 0
-304 10716 0
-305 10718 0
-306 10720 0
-307 10722 0
-308 10724 0
-309 10726 0
-310 -10725 0
-10712 302 0
-10714 303 0
-10716 304 0
-10718 305 0
-10720 306 0
-10722 307 0
-10724 308 0
-10726 309 0
10725 310 0
c (field_00003_00003=variant_fields_00003_00003_00007)
-302 9497 0
-303 9499 0
-304 9501 0
-305 9503 0
-306 9505 0
-307 9507 0
-308 9509 0
-309 9511 0
-310 -9510 0
-9497 302 0
-9499 303 0
-9501 304 0
-9503 305 0
-9505 306 0
-9507 307 0
-9509 308 0
-9511 309 0
9510 310 0
c (field_00003_00007=variant_fields_00001_00003_00007)
-362 7067 0
-363 7069 0
-364 7071 0
-365 7073 0
-366 7075 0
-367 7077 0
-368 7079 0
-369 7081 0
-370 -7080 0
-7067 362 0
-7069 363 0
-7071 364 0
-7073 365 0
-7075 366 0
-7077 367 0
-7079 368 0
-7081 369 0
7080 370 0
c (variant_fields_00002_00003_00007=field_00007_00003)
-8282 842 0
-8284 843 0
-8286 844 0
-8288 845 0
-8290 846 0
-8292 847 0
-8294 848 0
-8296 849 0
8295 850 0
-842 8282 0
-843 8284 0
-844 8286 0
-845 8288 0
-846 8290 0
-847 8292 0
-848 8294 0
-849 8296 0
-850 -8295 0
c (variant_fields_00004_00003_00008=field_00002_00003)
-10727 167 0
-10729 168 0
-10731 169 0
-10733 170 0
-10735 171 0
-10737 172 0
-10739 173 0
-10741 174 0
10740 175 0
-167 10727 0
-168 10729 0
-169 10731 0
-170 10733 0
-171 10735 0
-172 10737 0
-173 10739 0
-174 10741 0
-175 -10740 0
c (field_00003_00002=variant_fields_00003_00003_00008)
-287 9512 0
-288 9514 0
-289 9516 0
-290 9518 0
-291 9520 0
-292 9522 0
-293 9524 0
-294 9526 0
-295 -9525 0
-9512 287 0
-9514 288 0
-9516 289 0
-9518 290 0
-9520 291 0
-9522 292 0
-9524 293 0
-9526 294 0
9525 295 0
c (field_00003_00008=variant_fields_00001_00003_00008)
-377 7082 0
-378 7084 0
-379 7086 0
-380 7088 0
-381 7090 0
-382 7092 0
-383 7094 0
-384 7096 0
-385 -7095 0
-7082 377 0
-7084 378 0
-7086 379 0
-7088 380 0
-7090 381 0
-7092 382 0
-7094 383 0
-7096 384 0
7095 385 0
c (field_00008_00003=variant_fields_00002_00003_00008)
-977 8297 0
-978 8299 0
-979 8301 0
-980 8303 0
-981 8305 0
-982 8307 0
-983 8309 0
-984 8311 0
-985 -8310 0
-8297 977 0
-8299 978 0
-8301 979 0
-8303 980 0
-8305 981 0
-8307 982 0
-8309 983 0
-8311 984 0
8310 985 0
c (variant_fields_00004_00003_00009=field_00001_00003)
-10742 32 0
-10744 33 0
-10746 34 0
-10748 35 0
-10750 36 0
-10752 37 0
-10754 38 0
-10756 39 0
10755 40 0
-32 10742 0
-33 10744 0
-34 10746 0
-35 10748 0
-36 10750 0
-37 10752 0
-38 10754 0
-39 10756 0
-40 -10755 0
c (field_00003_00001=variant_fields_00003_00003_00009)
-272 9527 0
-273 9529 0
-274 9531 0
-275 9533 0
-276 9535 0
-277 9537 0
-278 9539 0
-279 9541 0
-280 -9540 0
-9527 272 0
-9529 273 0
-9531 274 0
-9533 275 0
-9535 276 0
-9537 277 0
-9539 278 0
-9541 279 0
9540 280 0
c (field_00003_00009=variant_fields_00001_00003_00009)
-392 7097 0
-393 7099 0
-394 7101 0
-395 7103 0
-396 7105 0
-397 7107 0
-398 7109 0
-399 7111 0
-400 -7110 0
-7097 392 0
-7099 393 0
-7101 394 0
-7103 395 0
-7105 396 0
-7107 397 0
-7109 398 0
-7111 399 0
7110 400 0
c (field_00009_00003=variant_fields_00002_00003_00009)
-1112 8312 0
-1113 8314 0
-1114 8316 0
-1115 8318 0
-1116 8320 0
-1117 8322 0
-1118 8324 0
-1119 8326 0
-1120 -8325 0
-8312 1112 0
-8314 1113 0
-8316 1114 0
-8318 1115 0
-8320 1116 0
-8322 1117 0
-8324 1118 0
-8326 1119 0
8325 1120 0
c (field_00009_00004=variant_fields_00004_00004_00001)
-1127 10757 0
-1128 10759 0
-1129 10761 0
-1130 10763 0
-1131 10765 0
-1132 10767 0
-1133 10769 0
-1134 10771 0
-1135 -10770 0
-10757 1127 0
-10759 1128 0
-10761 1129 0
-10763 1130 0
-10765 1131 0
-10767 1132 0
-10769 1133 0
-10771 1134 0
10770 1135 0
c (field_00004_00009=variant_fields_00003_00004_00001)
-527 9542 0
-528 9544 0
-529 9546 0
-530 9548 0
-531 9550 0
-532 9552 0
-533 9554 0
-534 9556 0
-535 -9555 0
-9542 527 0
-9544 528 0
-9546 529 0
-9548 530 0
-9550 531 0
-9552 532 0
-9554 533 0
-9556 534 0
9555 535 0
c (field_00004_00001=variant_fields_00001_00004_00001)
-407 7112 0
-408 7114 0
-409 7116 0
-410 7118 0
-411 7120 0
-412 7122 0
-413 7124 0
-414 7126 0
-415 -7125 0
-7112 407 0
-7114 408 0
-7116 409 0
-7118 410 0
-7120 411 0
-7122 412 0
-7124 413 0
-7126 414 0
7125 415 0
c (field_00001_00004=variant_fields_00002_00004_00001)
-47 8327 0
-48 8329 0
-49 8331 0
-50 8333 0
-51 8335 0
-52 8337 0
-53 8339 0
-54 8341 0
-55 -8340 0
-8327 47 0
-8329 48 0
-8331 49 0
-8333 50 0
-8335 51 0
-8337 52 0
-8339 53 0
-8341 54 0
8340 55 0
c (field_00008_00004=variant_fields_00004_00004_00002)
-992 10772 0
-993 10774 0
-994 10776 0
-995 10778 0
-996 10780 0
-997 10782 0
-998 10784 0
-999 10786 0
-1000 -10785 0
-10772 992 0
-10774 993 0
-10776 994 0
-10778 995 0
-10780 996 0
-10782 997 0
-10784 998 0
-10786 999 0
10785 1000 0
c (field_00004_00008=variant_fields_00003_00004_00002)
-512 9557 0
-513 9559 0
-514 9561 0
-515 9563 0
-516 9565 0
-517 9567 0
-518 9569 0
-519 9571 0
-520 -9570 0
-9557 512 0
-9559 513 0
-9561 514 0
-9563 515 0
-9565 516 0
-9567 517 0
-9569 518 0
-9571 519 0
9570 520 0
c (field_00004_00002=variant_fields_00001_00004_00002)
-422 7127 0
-423 7129 0
-424 7131 0
-425 7133 0
-426 7135 0
-427 7137 0
-428 7139 0
-429 7141 0
-430 -7140 0
-7127 422 0
-7129 423 0
-7131 424 0
-7133 425 0
-7135 426 0
-7137 427 0
-7139 428 0
-7141 429 0
7140 430 0
c (variant_fields_00002_00004_00002=field_00002_00004)
-8342 182 0
-8344 183 0
-8346 184 0
-8348 185 0
-8350 186 0
-8352 187 0
-8354 188 0
-8356 189 0
8355 190 0
-182 8342 0
-183 8344 0
-184 8346 0
-185 8348 0
-186 8350 0
-187 8352 0
-188 8354 0
-189 8356 0
-190 -8355 0
c (variant_fields_00004_00004_00003=field_00007_00004)
-10787 857 0
-10789 858 0
-10791 859 0
-10793 860 0
-10795 861 0
-10797 862 0
-10799 863 0
-10801 864 0
10800 865 0
-857 10787 0
-858 10789 0
-859 10791 0
-860 10793 0
-861 10795 0
-862 10797 0
-863 10799 0
-864 10801 0
-865 -10800 0
c (field_00004_00007=variant_fields_00003_00004_00003)
-497 9572 0
-498 9574 0
-499 9576 0
-500 9578 0
-501 9580 0
-502 9582 0
-503 9584 0
-504 9586 0
-505 -9585 0
-9572 497 0
-9574 498 0
-9576 499 0
-9578 500 0
-9580 501 0
-9582 502 0
-9584 503 0
-9586 504 0
9585 505 0
c (field_00004_00003=variant_fields_00001_00004_00003)
-437 7142 0
-438 7144 0
-439 7146 0
-440 7148 0
-441 7150 0
-442 7152 0
-443 7154 0
-444 7156 0
-445 -7155 0
-7142 437 0
-7144 438 0
-7146 439 0
-7148 440 0
-7150 441 0
-7152 442 0
-7154 443 0
-7156 444 0
7155 445 0
c (field_00003_00004=variant_fields_00002_00004_00003)
-317 8357 0
-318 8359 0
-319 8361 0
-320 8363 0
-321 8365 0
-322 8367 0
-323 8369 0
-324 8371 0
-325 -8370 0
-8357 317 0
-8359 318 0
-8361 319 0
-8363 320 0
-8365 321 0
-8367 322 0
-8369 323 0
-8371 324 0
8370 325 0
c (variant_fields_00004_00004_00004=field_00006_00004)
-10802 722 0
-10804 723 0
-10806 724 0
-10808 725 0
-10810 726 0
-10812 727 0
-10814 728 0
-10816 729 0
10815 730 0
-722 10802 0
-723 10804 0
-724 10806 0
-725 10808 0
-726 10810 0
-727 10812 0
-728 10814 0
-729 10816 0
-730 -10815 0
c (field_00004_00006=variant_fields_00003_00004_00004)
-482 9587 0
-483 9589 0
-484 9591 0
-485 9593 0
-486 9595 0
-487 9597 0
-488 9599 0
-489 9601 0
-490 -9600 0
-9587 482 0
-9589 483 0
-9591 484 0
-9593 485 0
-9595 486 0
-9597 487 0
-9599 488 0
-9601 489 0
9600 490 0
c (field_00004_00004=variant_fields_00001_00004_00004)
-452 7157 0
-453 7159 0
-454 7161 0
-455 7163 0
-456 7165 0
-457 7167 0
-458 7169 0
-459 7171 0
-460 -7170 0
-7157 452 0
-7159 453 0
-7161 454 0
-7163 455 0
-7165 456 0
-7167 457 0
-7169 458 0
-7171 459 0
7170 460 0
c (field_00004_00004=variant_fields_00002_00004_00004)
-452 8372 0
-453 8374 0
-454 8376 0
-455 8378 0
-456 8380 0
-457 8382 0
-458 8384 0
-459 8386 0
-460 -8385 0
-8372 452 0
-8374 453 0
-8376 454 0
-8378 455 0
-8380 456 0
-8382 457 0
-8384 458 0
-8386 459 0
8385 460 0
c (field_00005_00004=variant_fields_00004_00004_00005)
-587 10817 0
-588 10819 0
-589 10821 0
-590 10823 0
-591 10825 0
-592 10827 0
-593 10829 0
-594 10831 0
-595 -10830 0
-10817 587 0
-10819 588 0
-10821 589 0
-10823 590 0
-10825 591 0
-10827 592 0
-10829 593 0
-10831 594 0
10830 595 0
c (field_00004_00005=variant_fields_00003_00004_00005)
-467 9602 0
-468 9604 0
-469 9606 0
-470 9608 0
-471 9610 0
-472 9612 0
-473 9614 0
-474 9616 0
-475 -9615 0
-9602 467 0
-9604 468 0
-9606 469 0
-9608 470 0
-9610 471 0
-9612 472 0
-9614 473 0
-9616 474 0
9615 475 0
c (field_00004_00005=variant_fields_00001_00004_00005)
-467 7172 0
-468 7174 0
-469 7176 0
-470 7178 0
-471 7180 0
-472 7182 0
-473 7184 0
-474 7186 0
-475 -7185 0
-7172 467 0
-7174 468 0
-7176 469 0
-7178 470 0
-7180 471 0
-7182 472 0
-7184 473 0
-7186 474 0
7185 475 0
c (field_00005_00004=variant_fields_00002_00004_00005)
-587 8387 0
-588 8389 0
-589 8391 0
-590 8393 0
-591 8395 0
-592 8397 0
-593 8399 0
-594 8401 0
-595 -8400 0
-8387 587 0
-8389 588 0
-8391 589 0
-8393 590 0
-8395 591 0
-8397 592 0
-8399 593 0
-8401 594 0
8400 595 0
c (field_00004_00004=variant_fields_00004_00004_00006)
-452 10832 0
-453 10834 0
-454 10836 0
-455 10838 0
-456 10840 0
-457 10842 0
-458 10844 0
-459 10846 0
-460 -10845 0
-10832 452 0
-10834 453 0
-10836 454 0
-10838 455 0
-10840 456 0
-10842 457 0
-10844 458 0
-10846 459 0
10845 460 0
c (field_00004_00004=variant_fields_00003_00004_00006)
-452 9617 0
-453 9619 0
-454 9621 0
-455 9623 0
-456 9625 0
-457 9627 0
-458 9629 0
-459 9631 0
-460 -9630 0
-9617 452 0
-9619 453 0
-9621 454 0
-9623 455 0
-9625 456 0
-9627 457 0
-9629 458 0
-9631 459 0
9630 460 0
c (field_00004_00006=variant_fields_00001_00004_00006)
-482 7187 0
-483 7189 0
-484 7191 0
-485 7193 0
-486 7195 0
-487 7197 0
-488 7199 0
-489 7201 0
-490 -7200 0
-7187 482 0
-7189 483 0
-7191 484 0
-7193 485 0
-7195 486 0
-7197 487 0
-7199 488 0
-7201 489 0
7200 490 0
c (variant_fields_00002_00004_00006=field_00006_00004)
-8402 722 0
-8404 723 0
-8406 724 0
-8408 725 0
-8410 726 0
-8412 727 0
-8414 728 0
-8416 729 0
8415 730 0
-722 8402 0
-723 8404 0
-724 8406 0
-725 8408 0
-726 8410 0
-727 8412 0
-728 8414 0
-729 8416 0
-730 -8415 0
c (field_00003_00004=variant_fields_00004_00004_00007)
-317 10847 0
-318 10849 0
-319 10851 0
-320 10853 0
-321 10855 0
-322 10857 0
-323 10859 0
-324 10861 0
-325 -10860 0
-10847 317 0
-10849 318 0
-10851 319 0
-10853 320 0
-10855 321 0
-10857 322 0
-10859 323 0
-10861 324 0
10860 325 0
c (field_00004_00003=variant_fields_00003_00004_00007)
-437 9632 0
-438 9634 0
-439 9636 0
-440 9638 0
-441 9640 0
-442 9642 0
-443 9644 0
-444 9646 0
-445 -9645 0
-9632 437 0
-9634 438 0
-9636 439 0
-9638 440 0
-9640 441 0
-9642 442 0
-9644 443 0
-9646 444 0
9645 445 0
c (field_00004_00007=variant_fields_00001_00004_00007)
-497 7202 0
-498 7204 0
-499 7206 0
-500 7208 0
-501 7210 0
-502 7212 0
-503 7214 0
-504 7216 0
-505 -7215 0
-7202 497 0
-7204 498 0
-7206 499 0
-7208 500 0
-7210 501 0
-7212 502 0
-7214 503 0
-7216 504 0
7215 505 0
c (variant_fields_00002_00004_00007=field_00007_00004)
-8417 857 0
-8419 858 0
-8421 859 0
-8423 860 0
-8425 861 0
-8427 862 0
-8429 863 0
-8431 864 0
8430 865 0
-857 8417 0
-858 8419 0
-859 8421 0
-860 8423 0
-861 8425 0
-862 8427 0
-863 8429 0
-864 8431 0
-865 -8430 0
c (variant_fields_00004_00004_00008=field_00002_00004)
-10862 182 0
-10864 183 0
-10866 184 0
-10868 185 0
-10870 186 0
-10872 187 0
-10874 188 0
-10876 189 0
10875 190 0
-182 10862 0
-183 10864 0
-184 10866 0
-185 10868 0
-186 10870 0
-187 10872 0
-188 10874 0
-189 10876 0
-190 -10875 0
c (field_00004_00002=variant_fields_00003_00004_00008)
-422 9647 0
-423 9649 0
-424 9651 0
-425 9653 0
-426 9655 0
-427 9657 0
-428 9659 0
-429 9661 0
-430 -9660 0
-9647 422 0
-9649 423 0
-9651 424 0
-9653 425 0
-9655 426 0
-9657 427 0
-9659 428 0
-9661 429 0
9660 430 0
c (field_00004_00008=variant_fields_00001_00004_00008)
-512 7217 0
-513 7219 0
-514 7221 0
-515 7223 0
-516 7225 0
-517 7227 0
-518 7229 0
-519 7231 0
-520 -7230 0
-7217 512 0
-7219 513 0
-7221 514 0
-7223 515 0
-7225 516 0
-7227 517 0
-7229 518 0
-7231 519 0
7230 520 0
c (field_00008_00004=variant_fields_00002_00004_00008)
-992 8432 0
-993 8434 0
-994 8436 0
-995 8438 0
-996 8440 0
-997 8442 0
-998 8444 0
-999 8446 0
-1000 -8445 0
-8432 992 0
-8434 993 0
-8436 994 0
-8438 995 0
-8440 996 0
-8442 997 0
-8444 998 0
-8446 999 0
8445 1000 0
c (variant_fields_00004_00004_00009=field_00001_00004)
-10877 47 0
-10879 48 0
-10881 49 0
-10883 50 0
-10885 51 0
-10887 52 0
-10889 53 0
-10891 54 0
10890 55 0
-47 10877 0
-48 10879 0
-49 10881 0
-50 10883 0
-51 10885 0
-52 10887 0
-53 10889 0
-54 10891 0
-55 -10890 0
c (field_00004_00001=variant_fields_00003_00004_00009)
-407 9662 0
-408 9664 0
-409 9666 0
-410 9668 0
-411 9670 0
-412 9672 0
-413 9674 0
-414 9676 0
-415 -9675 0
-9662 407 0
-9664 408 0
-9666 409 0
-9668 410 0
-9670 411 0
-9672 412 0
-9674 413 0
-9676 414 0
9675 415 0
c (field_00004_00009=variant_fields_00001_00004_00009)
-527 7232 0
-528 7234 0
-529 7236 0
-530 7238 0
-531 7240 0
-532 7242 0
-533 7244 0
-534 7246 0
-535 -7245 0
-7232 527 0
-7234 528 0
-7236 529 0
-7238 530 0
-7240 531 0
-7242 532 0
-7244 533 0
-7246 534 0
7245 535 0
c (field_00009_00004=variant_fields_00002_00004_00009)
-1127 8447 0
-1128 8449 0
-1129 8451 0
-1130 8453 0
-1131 8455 0
-1132 8457 0
-1133 8459 0
-1134 8461 0
-1135 -8460 0
-8447 1127 0
-8449 1128 0
-8451 1129 0
-8453 1130 0
-8455 1131 0
-8457 1132 0
-8459 1133 0
-8461 1134 0
8460 1135 0
c (field_00009_00005=variant_fields_00004_00005_00001)
-1142 10892 0
-1143 10894 0
-1144 10896 0
-1145 10898 0
-1146 10900 0
-1147 10902 0
-1148 10904 0
-1149 10906 0
-1150 -10905 0
-10892 1142 0
-10894 1143 0
-10896 1144 0
-10898 1145 0
-10900 1146 0
-10902 1147 0
-10904 1148 0
-10906 1149 0
10905 1150 0
c (field_00005_00009=variant_fields_00003_00005_00001)
-662 9677 0
-663 9679 0
-664 9681 0
-665 9683 0
-666 9685 0
-667 9687 0
-668 9689 0
-669 9691 0
-670 -9690 0
-9677 662 0
-9679 663 0
-9681 664 0
-9683 665 0
-9685 666 0
-9687 667 0
-9689 668 0
-9691 669 0
9690 670 0
c (field_00005_00001=variant_fields_00001_00005_00001)
-542 7247 0
-543 7249 0
-544 7251 0
-545 7253 0
-546 7255 0
-547 7257 0
-548 7259 0
-549 7261 0
-550 -7260 0
-7247 542 0
-7249 543 0
-7251 544 0
-7253 545 0
-7255 546 0
-7257 547 0
-7259 548 0
-7261 549 0
7260 550 0
c (field_00001_00005=variant_fields_00002_00005_00001)
-62 8462 0
-63 8464 0
-64 8466 0
-65 8468 0
-66 8470 0
-67 8472 0
-68 8474 0
-69 8476 0
-70 -8475 0
-8462 62 0
-8464 63 0
-8466 64 0
-8468 65 0
-8470 66 0
-8472 67 0
-8474 68 0
-8476 69 0
8475 70 0
c (field_00008_00005=variant_fields_00004_00005_00002)
-1007 10907 0
-1008 10909 0
-1009 10911 0
-1010 10913 0
-1011 10915 0
-1012 10917 0
-1013 10919 0
-1014 10921 0
-1015 -10920 0
-10907 1007 0
-10909 1008 0
-10911 1009 0
-10913 1010 0
-10915 1011 0
-10917 1012 0
-10919 1013 0
-10921 1014 0
10920 1015 0
c (field_00005_00008=variant_fields_00003_00005_00002)
-647 9692 0
-648 9694 0
-649 9696 0
-650 9698 0
-651 9700 0
-652 9702 0
-653 9704 0
-654 9706 0
-655 -9705 0
-9692 647 0
-9694 648 0
-9696 649 0
-9698 650 0
-9700 651 0
-9702 652 0
-9704 653 0
-9706 654 0
9705 655 0
c (field_00005_00002=variant_fields_00001_00005_00002)
-557 7262 0
-558 7264 0
-559 7266 0
-560 7268 0
-561 7270 0
-562 7272 0
-563 7274 0
-564 7276 0
-565 -7275 0
-7262 557 0
-7264 558 0
-7266 559 0
-7268 560 0
-7270 561 0
-7272 562 0
-7274 563 0
-7276 564 0
7275 565 0
c (field_00002_00005=variant_fields_00002_00005_00002)
-197 8477 0
-198 8479 0
-199 8481 0
-200 8483 0
-201 8485 0
-202 8487 0
-203 8489 0
-204 8491 0
-205 -8490 0
-8477 197 0
-8479 198 0
-8481 199 0
-8483 200 0
-8485 201 0
-8487 202 0
-8489 203 0
-8491 204 0
8490 205 0
c (variant_fields_00004_00005_00003=field_00007_00005)
-10922 872 0
-10924 873 0
-10926 874 0
-10928 875 0
-10930 876 0
-10932 877 0
-10934 878 0
-10936 879 0
10935 880 0
-872 10922 0
-873 10924 0
-874 10926 0
-875 10928 0
-876 10930 0
-877 10932 0
-878 10934 0
-879 10936 0
-880 -10935 0
c (field_00005_00007=variant_fields_00003_00005_00003)
-632 9707 0
-633 9709 0
-634 9711 0
-635 9713 0
-636 9715 0
-637 9717 0
-638 9719 0
-639 9721 0
-640 -9720 0
-9707 632 0
-9709 633 0
-9711 634 0
-9713 635 0
-9715 636 0
-9717 637 0
-9719 638 0
-9721 639 0
9720 640 0
c (field_00005_00003=variant_fields_00001_00005_00003)
-572 7277 0
-573 7279 0
-574 7281 0
-575 7283 0
-576 7285 0
-577 7287 0
-578 7289 0
-579 7291 0
-580 -7290 0
-7277 572 0
-7279 573 0
-7281 574 0
-7283 575 0
-7285 576 0
-7287 577 0
-7289 578 0
-7291 579 0
7290 580 0
c (field_00003_00005=variant_fields_00002_00005_00003)
-332 8492 0
-333 8494 0
-334 8496 0
-335 8498 0
-336 8500 0
-337 8502 0
-338 8504 0
-339 8506 0
-340 -8505 0
-8492 332 0
-8494 333 0
-8496 334 0
-8498 335 0
-8500 336 0
-8502 337 0
-8504 338 0
-8506 339 0
8505 340 0
c (field_00006_00005=variant_fields_00004_00005_00004)
-737 10937 0
-738 10939 0
-739 10941 0
-740 10943 0
-741 10945 0
-742 10947 0
-743 10949 0
-744 10951 0
-745 -10950 0
-10937 737 0
-10939 738 0
-10941 739 0
-10943 740 0
-10945 741 0
-10947 742 0
-10949 743 0
-10951 744 0
10950 745 0
c (field_00005_00006=variant_fields_00003_00005_00004)
-617 9722 0
-618 9724 0
-619 9726 0
-620 9728 0
-621 9730 0
-622 9732 0
-623 9734 0
-624 9736 0
-625 -9735 0
-9722 617 0
-9724 618 0
-9726 619 0
-9728 620 0
-9730 621 0
-9732 622 0
-9734 623 0
-9736 624 0
9735 625 0
c (field_00005_00004=variant_fields_00001_00005_00004)
-587 7292 0
-588 7294 0
-589 7296 0
-590 7298 0
-591 7300 0
-592 7302 0
-593 7304 0
-594 7306 0
-595 -7305 0
-7292 587 0
-7294 588 0
-7296 589 0
-7298 590 0
-7300 591 0
-7302 592 0
-7304 593 0
-7306 594 0
7305 595 0
c (field_00004_00005=variant_fields_00002_00005_00004)
-467 8507 0
-468 8509 0
-469 8511 0
-470 8513 0
-471 8515 0
-472 8517 0
-473 8519 0
-474 8521 0
-475 -8520 0
-8507 467 0
-8509 468 0
-8511 469 0
-8513 470 0
-8515 471 0
-8517 472 0
-8519 473 0
-8521 474 0
8520 475 0
c (field_00005_00005=variant_fields_00004_00005_00005)
-602 10952 0
-603 10954 0
-604 10956 0
-605 10958 0
-606 10960 0
-607 10962 0
-608 10964 0
-609 10966 0
-610 -10965 0
-10952 602 0
-10954 603 0
-10956 604 0
-10958 605 0
-10960 606 0
-10962 607 0
-10964 608 0
-10966 609 0
10965 610 0
c (field_00005_00005=variant_fields_00003_00005_00005)
-602 9737 0
-603 9739 0
-604 9741 0
-605 9743 0
-606 9745 0
-607 9747 0
-608 9749 0
-609 9751 0
-610 -9750 0
-9737 602 0
-9739 603 0
-9741 604 0
-9743 605 0
-9745 606 0
-9747 607 0
-9749 608 0
-9751 609 0
9750 610 0
c (field_00005_00005=variant_fields_00001_00005_00005)
-602 7307 0
-603 7309 0
-604 7311 0
-605 7313 0
-606 7315 0
-607 7317 0
-608 7319 0
-609 7321 0
-610 -7320 0
-7307 602 0
-7309 603 0
-7311 604 0
-7313 605 0
-7315 606 0
-7317 607 0
-7319 608 0
-7321 609 0
7320 610 0
c (field_00005_00005=variant_fields_00002_00005_00005)
-602 8522 0
-603 8524 0
-604 8526 0
-605 8528 0
-606 8530 0
-607 8532 0
-608 8534 0
-609 8536 0
-610 -8535 0
-8522 602 0
-8524 603 0
-8526 604 0
-8528 605 0
-8530 606 0
-8532 607 0
-8534 608 0
-8536 609 0
8535 610 0
c (field_00004_00005=variant_fields_00004_00005_00006)
-467 10967 0
-468 10969 0
-469 10971 0
-470 10973 0
-471 10975 0
-472 10977 0
-473 10979 0
-474 10981 0
-475 -10980 0
-10967 467 0
-10969 468 0
-10971 469 0
-10973 470 0
-10975 471 0
-10977 472 0
-10979 473 0
-10981 474 0
10980 475 0
c (field_00005_00004=variant_fields_00003_00005_00006)
-587 9752 0
-588 9754 0
-589 9756 0
-590 9758 0
-591 9760 0
-592 9762 0
-593 9764 0
-594 9766 0
-595 -9765 0
-9752 587 0
-9754 588 0
-9756 589 0
-9758 590 0
-9760 591 0
-9762 592 0
-9764 593 0
-9766 594 0
9765 595 0
c (field_00005_00006=variant_fields_00001_00005_00006)
-617 7322 0
-618 7324 0
-619 7326 0
-620 7328 0
-621 7330 0
-622 7332 0
-623 7334 0
-624 7336 0
-625 -7335 0
-7322 617 0
-7324 618 0
-7326 619 0
-7328 620 0
-7330 621 0
-7332 622 0
-7334 623 0
-7336 624 0
7335 625 0
c (field_00006_00005=variant_fields_00002_00005_00006)
-737 8537 0
-738 8539 0
-739 8541 0
-740 8543 0
-741 8545 0
-742 8547 0
-743 8549 0
-744 8551 0
-745 -8550 0
-8537 737 0
-8539 738 0
-8541 739 0
-8543 740 0
-8545 741 0
-8547 742 0
-8549 743 0
-8551 744 0
8550 745 0
c (field_00003_00005=variant_fields_00004_00005_00007)
-332 10982 0
-333 10984 0
-334 10986 0
-335 10988 0
-336 10990 0
-337 10992 0
-338 10994 0
-339 10996 0
-340 -10995 0
-10982 332 0
-10984 333 0
-10986 334 0
-10988 335 0
-10990 336 0
-10992 337 0
-10994 338 0
-10996 339 0
10995 340 0
c (field_00005_00003=variant_fields_00003_00005_00007)
-572 9767 0
-573 9769 0
-574 9771 0
-575 9773 0
-576 9775 0
-577 9777 0
-578 9779 0
-579 9781 0
-580 -9780 0
-9767 572 0
-9769 573 0
-9771 574 0
-9773 575 0
-9775 576 0
-9777 577 0
-9779 578 0
-9781 579 0
9780 580 0
c (field_00005_00007=variant_fields_00001_00005_00007)
-632 7337 0
-633 7339 0
-634 7341 0
-635 7343 0
-636 7345 0
-637 7347 0
-638 7349 0
-639 7351 0
-640 -7350 0
-7337 632 0
-7339 633 0
-7341 634 0
-7343 635 0
-7345 636 0
-7347 637 0
-7349 638 0
-7351 639 0
7350 640 0
c (variant_fields_00002_00005_00007=field_00007_00005)
-8552 872 0
-8554 873 0
-8556 874 0
-8558 875 0
-8560 876 0
-8562 877 0
-8564 878 0
-8566 879 0
8565 880 0
-872 8552 0
-873 8554 0
-874 8556 0
-875 8558 0
-876 8560 0
-877 8562 0
-878 8564 0
-879 8566 0
-880 -8565 0
c (variant_fields_00004_00005_00008=field_00002_00005)
-10997 197 0
-10999 198 0
-11001 199 0
-11003 200 0
-11005 201 0
-11007 202 0
-11009 203 0
-11011 204 0
11010 205 0
-197 10997 0
-198 10999 0
-199 11001 0
-200 11003 0
-201 11005 0
-202 11007 0
-203 11009 0
-204 11011 0
-205 -11010 0
c (field_00005_00002=variant_fields_00003_00005_00008)
-557 9782 0
-558 9784 0
-559 9786 0
-560 9788 0
-561 9790 0
-562 9792 0
-563 9794 0
-564 9796 0
-565 -9795 0
-9782 557 0
-9784 558 0
-9786 559 0
-9788 560 0
-9790 561 0
-9792 562 0
-9794 563 0
-9796 564 0
9795 565 0
c (field_00005_00008=variant_fields_00001_00005_00008)
-647 7352 0
-648 7354 0
-649 7356 0
-650 7358 0
-651 7360 0
-652 7362 0
-653 7364 0
-654 7366 0
-655 -7365 0
-7352 647 0
-7354 648 0
-7356 649 0
-7358 650 0
-7360 651 0
-7362 652 0
-7364 653 0
-7366 654 0
7365 655 0
c (field_00008_00005=variant_fields_00002_00005_00008)
-1007 8567 0
-1008 8569 0
-1009 8571 0
-1010 8573 0
-1011 8575 0
-1012 8577 0
-1013 8579 0
-1014 8581 0
-1015 -8580 0
-8567 1007 0
-8569 1008 0
-8571 1009 0
-8573 1010 0
-8575 1011 0
-8577 1012 0
-8579 1013 0
-8581 1014 0
8580 1015 0
c (field_00001_00005=variant_fields_00004_00005_00009)
-62 11012 0
-63 11014 0
-64 11016 0
-65 11018 0
-66 11020 0
-67 11022 0
-68 11024 0
-69 11026 0
-70 -11025 0
-11012 62 0
-11014 63 0
-11016 64 0
-11018 65 0
-11020 66 0
-11022 67 0
-11024 68 0
-11026 69 0
11025 70 0
c (field_00005_00001=variant_fields_00003_00005_00009)
-542 9797 0
-543 9799 0
-544 9801 0
-545 9803 0
-546 9805 0
-547 9807 0
-548 9809 0
-549 9811 0
-550 -9810 0
-9797 542 0
-9799 543 0
-9801 544 0
-9803 545 0
-9805 546 0
-9807 547 0
-9809 548 0
-9811 549 0
9810 550 0
c (field_00005_00009=variant_fields_00001_00005_00009)
-662 7367 0
-663 7369 0
-664 7371 0
-665 7373 0
-666 7375 0
-667 7377 0
-668 7379 0
-669 7381 0
-670 -7380 0
-7367 662 0
-7369 663 0
-7371 664 0
-7373 665 0
-7375 666 0
-7377 667 0
-7379 668 0
-7381 669 0
7380 670 0
c (field_00009_00005=variant_fields_00002_00005_00009)
-1142 8582 0
-1143 8584 0
-1144 8586 0
-1145 8588 0
-1146 8590 0
-1147 8592 0
-1148 8594 0
-1149 8596 0
-1150 -8595 0
-8582 1142 0
-8584 1143 0
-8586 1144 0
-8588 1145 0
-8590 1146 0
-8592 1147 0
-8594 1148 0
-8596 1149 0
8595 1150 0
c (field_00009_00006=variant_fields_00004_00006_00001)
-1157 11027 0
-1158 11029 0
-1159 11031 0
-1160 11033 0
-1161 11035 0
-1162 11037 0
-1163 11039 0
-1164 11041 0
-1165 -11040 0
-11027 1157 0
-11029 1158 0
-11031 1159 0
-11033 1160 0
-11035 1161 0
-11037 1162 0
-11039 1163 0
-11041 1164 0
11040 1165 0
c (variant_fields_00003_00006_00001=field_00006_00009)
-9812 797 0
-9814 798 0
-9816 799 0
-9818 800 0
-9820 801 0
-9822 802 0
-9824 803 0
-9826 804 0
9825 805 0
-797 9812 0
-798 9814 0
-799 9816 0
-800 9818 0
-801 9820 0
-802 9822 0
-803 9824 0
-804 9826 0
-805 -9825 0
c (variant_fields_00001_00006_00001=field_00006_00001)
-7382 677 0
-7384 678 0
-7386 679 0
-7388 680 0
-7390 681 0
-7392 682 0
-7394 683 0
-7396 684 0
7395 685 0
-677 7382 0
-678 7384 0
-679 7386 0
-680 7388 0
-681 7390 0
-682 7392 0
-683 7394 0
-684 7396 0
-685 -7395 0
c (variant_fields_00002_00006_00001=field_00001_00006)
-8597 77 0
-8599 78 0
-8601 79 0
-8603 80 0
-8605 81 0
-8607 82 0
-8609 83 0
-8611 84 0
8610 85 0
-77 8597 0
-78 8599 0
-79 8601 0
-80 8603 0
-81 8605 0
-82 8607 0
-83 8609 0
-84 8611 0
-85 -8610 0
c (field_00008_00006=variant_fields_00004_00006_00002)
-1022 11042 0
-1023 11044 0
-1024 11046 0
-1025 11048 0
-1026 11050 0
-1027 11052 0
-1028 11054 0
-1029 11056 0
-1030 -11055 0
-11042 1022 0
-11044 1023 0
-11046 1024 0
-11048 1025 0
-11050 1026 0
-11052 1027 0
-11054 1028 0
-11056 1029 0
11055 1030 0
c (variant_fields_00003_00006_00002=field_00006_00008)
-9827 782 0
-9829 783 0
-9831 784 0
-9833 785 0
-9835 786 0
-9837 787 0
-9839 788 0
-9841 789 0
9840 790 0
-782 9827 0
-783 9829 0
-784 9831 0
-785 9833 0
-786 9835 0
-787 9837 0
-788 9839 0
-789 9841 0
-790 -9840 0
c (variant_fields_00001_00006_00002=field_00006_00002)
-7397 692 0
-7399 693 0
-7401 694 0
-7403 695 0
-7405 696 0
-7407 697 0
-7409 698 0
-7411 699 0
7410 700 0
-692 7397 0
-693 7399 0
-694 7401 0
-695 7403 0
-696 7405 0
-697 7407 0
-698 7409 0
-699 7411 0
-700 -7410 0
c (variant_fields_00002_00006_00002=field_00002_00006)
-8612 212 0
-8614 213 0
-8616 214 0
-8618 215 0
-8620 216 0
-8622 217 0
-8624 218 0
-8626 219 0
8625 220 0
-212 8612 0
-213 8614 0
-214 8616 0
-215 8618 0
-216 8620 0
-217 8622 0
-218 8624 0
-219 8626 0
-220 -8625 0
c (field_00007_00006=variant_fields_00004_00006_00003)
-887 11057 0
-888 11059 0
-889 11061 0
-890 11063 0
-891 11065 0
-892 11067 0
-893 11069 0
-894 11071 0
-895 -11070 0
-11057 887 0
-11059 888 0
-11061 889 0
-11063 890 0
-11065 891 0
-11067 892 0
-11069 893 0
-11071 894 0
11070 895 0
c (variant_fields_00003_00006_00003=field_00006_00007)
-9842 767 0
-9844 768 0
-9846 769 0
-9848 770 0
-9850 771 0
-9852 772 0
-9854 773 0
-9856 774 0
9855 775 0
-767 9842 0
-768 9844 0
-769 9846 0
-770 9848 0
-771 9850 0
-772 9852 0
-773 9854 0
-774 9856 0
-775 -9855 0
c (variant_fields_00001_00006_00003=field_00006_00003)
-7412 707 0
-7414 708 0
-7416 709 0
-7418 710 0
-7420 711 0
-7422 712 0
-7424 713 0
-7426 714 0
7425 715 0
-707 7412 0
-708 7414 0
-709 7416 0
-710 7418 0
-711 7420 0
-712 7422 0
-713 7424 0
-714 7426 0
-715 -7425 0
c (field_00003_00006=variant_fields_00002_00006_00003)
-347 8627 0
-348 8629 0
-349 8631 0
-350 8633 0
-351 8635 0
-352 8637 0
-353 8639 0
-354 8641 0
-355 -8640 0
-8627 347 0
-8629 348 0
-8631 349 0
-8633 350 0
-8635 351 0
-8637 352 0
-8639 353 0
-8641 354 0
8640 355 0
c (field_00006_00006=variant_fields_00004_00006_00004)
-752 11072 0
-753 11074 0
-754 11076 0
-755 11078 0
-756 11080 0
-757 11082 0
-758 11084 0
-759 11086 0
-760 -11085 0
-11072 752 0
-11074 753 0
-11076 754 0
-11078 755 0
-11080 756 0
-11082 757 0
-11084 758 0
-11086 759 0
11085 760 0
c (variant_fields_00003_00006_00004=field_00006_00006)
-9857 752 0
-9859 753 0
-9861 754 0
-9863 755 0
-9865 756 0
-9867 757 0
-9869 758 0
-9871 759 0
9870 760 0
-752 9857 0
-753 9859 0
-754 9861 0
-755 9863 0
-756 9865 0
-757 9867 0
-758 9869 0
-759 9871 0
-760 -9870 0
c (variant_fields_00001_00006_00004=field_00006_00004)
-7427 722 0
-7429 723 0
-7431 724 0
-7433 725 0
-7435 726 0
-7437 727 0
-7439 728 0
-7441 729 0
7440 730 0
-722 7427 0
-723 7429 0
-724 7431 0
-725 7433 0
-726 7435 0
-727 7437 0
-728 7439 0
-729 7441 0
-730 -7440 0
c (variant_fields_00002_00006_00004=field_00004_00006)
-8642 482 0
-8644 483 0
-8646 484 0
-8648 485 0
-8650 486 0
-8652 487 0
-8654 488 0
-8656 489 0
8655 490 0
-482 8642 0
-483 8644 0
-484 8646 0
-485 8648 0
-486 8650 0
-487 8652 0
-488 8654 0
-489 8656 0
-490 -8655 0
c (field_00005_00006=variant_fields_00004_00006_00005)
-617 11087 0
-618 11089 0
-619 11091 0
-620 11093 0
-621 11095 0
-622 11097 0
-623 11099 0
-624 11101 0
-625 -11100 0
-11087 617 0
-11089 618 0
-11091 619 0
-11093 620 0
-11095 621 0
-11097 622 0
-11099 623 0
-11101 624 0
11100 625 0
c (variant_fields_00003_00006_00005=field_00006_00005)
-9872 737 0
-9874 738 0
-9876 739 0
-9878 740 0
-9880 741 0
-9882 742 0
-9884 743 0
-9886 744 0
9885 745 0
-737 9872 0
-738 9874 0
-739 9876 0
-740 9878 0
-741 9880 0
-742 9882 0
-743 9884 0
-744 9886 0
-745 -9885 0
c (variant_fields_00001_00006_00005=field_00006_00005)
-7442 737 0
-7444 738 0
-7446 739 0
-7448 740 0
-7450 741 0
-7452 742 0
-7454 743 0
-7456 744 0
7455 745 0
-737 7442 0
-738 7444 0
-739 7446 0
-740 7448 0
-741 7450 0
-742 7452 0
-743 7454 0
-744 7456 0
-745 -7455 0
c (variant_fields_00002_00006_00005=field_00005_00006)
-8657 617 0
-8659 618 0
-8661 619 0
-8663 620 0
-8665 621 0
-8667 622 0
-8669 623 0
-8671 624 0
8670 625 0
-617 8657 0
-618 8659 0
-619 8661 0
-620 8663 0
-621 8665 0
-622 8667 0
-623 8669 0
-624 8671 0
-625 -8670 0
c (field_00004_00006=variant_fields_00004_00006_00006)
-482 11102 0
-483 11104 0
-484 11106 0
-485 11108 0
-486 11110 0
-487 11112 0
-488 11114 0
-489 11116 0
-490 -11115 0
-11102 482 0
-11104 483 0
-11106 484 0
-11108 485 0
-11110 486 0
-11112 487 0
-11114 488 0
-11116 489 0
11115 490 0
c (variant_fields_00003_00006_00006=field_00006_00004)
-9887 722 0
-9889 723 0
-9891 724 0
-9893 725 0
-9895 726 0
-9897 727 0
-9899 728 0
-9901 729 0
9900 730 0
-722 9887 0
-723 9889 0
-724 9891 0
-725 9893 0
-726 9895 0
-727 9897 0
-728 9899 0
-729 9901 0
-730 -9900 0
c (variant_fields_00001_00006_00006=field_00006_00006)
-7457 752 0
-7459 753 0
-7461 754 0
-7463 755 0
-7465 756 0
-7467 757 0
-7469 758 0
-7471 759 0
7470 760 0
-752 7457 0
-753 7459 0
-754 7461 0
-755 7463 0
-756 7465 0
-757 7467 0
-758 7469 0
-759 7471 0
-760 -7470 0
c (variant_fields_00002_00006_00006=field_00006_00006)
-8672 752 0
-8674 753 0
-8676 754 0
-8678 755 0
-8680 756 0
-8682 757 0
-8684 758 0
-8686 759 0
8685 760 0
-752 8672 0
-753 8674 0
-754 8676 0
-755 8678 0
-756 8680 0
-757 8682 0
-758 8684 0
-759 8686 0
-760 -8685 0
c (field_00003_00006=variant_fields_00004_00006_00007)
-347 11117 0
-348 11119 0
-349 11121 0
-350 11123 0
-351 11125 0
-352 11127 0
-353 11129 0
-354 11131 0
-355 -11130 0
-11117 347 0
-11119 348 0
-11121 349 0
-11123 350 0
-11125 351 0
-11127 352 0
-11129 353 0
-11131 354 0
11130 355 0
c (variant_fields_00003_00006_00007=field_00006_00003)
-9902 707 0
-9904 708 0
-9906 709 0
-9908 710 0
-9910 711 0
-9912 712 0
-9914 713 0
-9916 714 0
9915 715 0
-707 9902 0
-708 9904 0
-709 9906 0
-710 9908 0
-711 9910 0
-712 9912 0
-713 9914 0
-714 9916 0
-715 -9915 0
c (variant_fields_00001_00006_00007=field_00006_00007)
-7472 767 0
-7474 768 0
-7476 769 0
-7478 770 0
-7480 771 0
-7482 772 0
-7484 773 0
-7486 774 0
7485 775 0
-767 7472 0
-768 7474 0
-769 7476 0
-770 7478 0
-771 7480 0
-772 7482 0
-773 7484 0
-774 7486 0
-775 -7485 0
c (variant_fields_00002_00006_00007=field_00007_00006)
-8687 887 0
-8689 888 0
-8691 889 0
-8693 890 0
-8695 891 0
-8697 892 0
-8699 893 0
-8701 894 0
8700 895 0
-887 8687 0
-888 8689 0
-889 8691 0
-890 8693 0
-891 8695 0
-892 8697 0
-893 8699 0
-894 8701 0
-895 -8700 0
c (field_00002_00006=variant_fields_00004_00006_00008)
-212 11132 0
-213 11134 0
-214 11136 0
-215 11138 0
-216 11140 0
-217 11142 0
-218 11144 0
-219 11146 0
-220 -11145 0
-11132 212 0
-11134 213 0
-11136 214 0
-11138 215 0
-11140 216 0
-11142 217 0
-11144 218 0
-11146 219 0
11145 220 0
c (variant_fields_00003_00006_00008=field_00006_00002)
-9917 692 0
-9919 693 0
-9921 694 0
-9923 695 0
-9925 696 0
-9927 697 0
-9929 698 0
-9931 699 0
9930 700 0
-692 9917 0
-693 9919 0
-694 9921 0
-695 9923 0
-696 9925 0
-697 9927 0
-698 9929 0
-699 9931 0
-700 -9930 0
c (variant_fields_00001_00006_00008=field_00006_00008)
-7487 782 0
-7489 783 0
-7491 784 0
-7493 785 0
-7495 786 0
-7497 787 0
-7499 788 0
-7501 789 0
7500 790 0
-782 7487 0
-783 7489 0
-784 7491 0
-785 7493 0
-786 7495 0
-787 7497 0
-788 7499 0
-789 7501 0
-790 -7500 0
c (variant_fields_00002_00006_00008=field_00008_00006)
-8702 1022 0
-8704 1023 0
-8706 1024 0
-8708 1025 0
-8710 1026 0
-8712 1027 0
-8714 1028 0
-8716 1029 0
8715 1030 0
-1022 8702 0
-1023 8704 0
-1024 8706 0
-1025 8708 0
-1026 8710 0
-1027 8712 0
-1028 8714 0
-1029 8716 0
-1030 -8715 0
c (field_00001_00006=variant_fields_00004_00006_00009)
-77 11147 0
-78 11149 0
-79 11151 0
-80 11153 0
-81 11155 0
-82 11157 0
-83 11159 0
-84 11161 0
-85 -11160 0
-11147 77 0
-11149 78 0
-11151 79 0
-11153 80 0
-11155 81 0
-11157 82 0
-11159 83 0
-11161 84 0
11160 85 0
c (variant_fields_00003_00006_00009=field_00006_00001)
-9932 677 0
-9934 678 0
-9936 679 0
-9938 680 0
-9940 681 0
-9942 682 0
-9944 683 0
-9946 684 0
9945 685 0
-677 9932 0
-678 9934 0
-679 9936 0
-680 9938 0
-681 9940 0
-682 9942 0
-683 9944 0
-684 9946 0
-685 -9945 0
c (variant_fields_00001_00006_00009=field_00006_00009)
-7502 797 0
-7504 798 0
-7506 799 0
-7508 800 0
-7510 801 0
-7512 802 0
-7514 803 0
-7516 804 0
7515 805 0
-797 7502 0
-798 7504 0
-799 7506 0
-800 7508 0
-801 7510 0
-802 7512 0
-803 7514 0
-804 7516 0
-805 -7515 0
c (variant_fields_00002_00006_00009=field_00009_00006)
-8717 1157 0
-8719 1158 0
-8721 1159 0
-8723 1160 0
-8725 1161 0
-8727 1162 0
-8729 1163 0
-8731 1164 0
8730 1165 0
-1157 8717 0
-1158 8719 0
-1159 8721 0
-1160 8723 0
-1161 8725 0
-1162 8727 0
-1163 8729 0
-1164 8731 0
-1165 -8730 0
c (variant_fields_00004_00007_00001=field_00009_00007)
-11162 1172 0
-11164 1173 0
-11166 1174 0
-11168 1175 0
-11170 1176 0
-11172 1177 0
-11174 1178 0
-11176 1179 0
11175 1180 0
-1172 11162 0
-1173 11164 0
-1174 11166 0
-1175 11168 0
-1176 11170 0
-1177 11172 0
-1178 11174 0
-1179 11176 0
-1180 -11175 0
c (variant_fields_00003_00007_00001=field_00007_00009)
-9947 932 0
-9949 933 0
-9951 934 0
-9953 935 0
-9955 936 0
-9957 937 0
-9959 938 0
-9961 939 0
9960 940 0
-932 9947 0
-933 9949 0
-934 9951 0
-935 9953 0
-936 9955 0
-937 9957 0
-938 9959 0
-939 9961 0
-940 -9960 0
c (variant_fields_00001_00007_00001=field_00007_00001)
-7517 812 0
-7519 813 0
-7521 814 0
-7523 815 0
-7525 816 0
-7527 817 0
-7529 818 0
-7531 819 0
7530 820 0
-812 7517 0
-813 7519 0
-814 7521 0
-815 7523 0
-816 7525 0
-817 7527 0
-818 7529 0
-819 7531 0
-820 -7530 0
c (variant_fields_00002_00007_00001=field_00001_00007)
-8732 92 0
-8734 93 0
-8736 94 0
-8738 95 0
-8740 96 0
-8742 97 0
-8744 98 0
-8746 99 0
8745 100 0
-92 8732 0
-93 8734 0
-94 8736 0
-95 8738 0
-96 8740 0
-97 8742 0
-98 8744 0
-99 8746 0
-100 -8745 0
c (field_00008_00007=variant_fields_00004_00007_00002)
-1037 11177 0
-1038 11179 0
-1039 11181 0
-1040 11183 0
-1041 11185 0
-1042 11187 0
-1043 11189 0
-1044 11191 0
-1045 -11190 0
-11177 1037 0
-11179 1038 0
-11181 1039 0
-11183 1040 0
-11185 1041 0
-11187 1042 0
-11189 1043 0
-11191 1044 0
11190 1045 0
c (variant_fields_00003_00007_00002=field_00007_00008)
-9962 917 0
-9964 918 0
-9966 919 0
-9968 920 0
-9970 921 0
-9972 922 0
-9974 923 0
-9976 924 0
9975 925 0
-917 9962 0
-918 9964 0
-919 9966 0
-920 9968 0
-921 9970 0
-922 9972 0
-923 9974 0
-924 9976 0
-925 -9975 0
c (variant_fields_00001_00007_00002=field_00007_00002)
-7532 827 0
-7534 828 0
-7536 829 0
-7538 830 0
-7540 831 0
-7542 832 0
-7544 833 0
-7546 834 0
7545 835 0
-827 7532 0
-828 7534 0
-829 7536 0
-830 7538 0
-831 7540 0
-832 7542 0
-833 7544 0
-834 7546 0
-835 -7545 0
c (variant_fields_00002_00007_00002=field_00002_00007)
-8747 227 0
-8749 228 0
-8751 229 0
-8753 230 0
-8755 231 0
-8757 232 0
-8759 233 0
-8761 234 0
8760 235 0
-227 8747 0
-228 8749 0
-229 8751 0
-230 8753 0
-231 8755 0
-232 8757 0
-233 8759 0
-234 8761 0
-235 -8760 0
c (variant_fields_00004_00007_00003=field_00007_00007)
-11192 902 0
-11194 903 0
-11196 904 0
-11198 905 0
-11200 906 0
-11202 907 0
-11204 908 0
-11206 909 0
11205 910 0
-902 11192 0
-903 11194 0
-904 11196 0
-905 11198 0
-906 11200 0
-907 11202 0
-908 11204 0
-909 11206 0
-910 -11205 0
c (variant_fields_00003_00007_00003=field_00007_00007)
-9977 902 0
-9979 903 0
-9981 904 0
-9983 905 0
-9985 906 0
-9987 907 0
-9989 908 0
-9991 909 0
9990 910 0
-902 9977 0
-903 9979 0
-904 9981 0
-905 9983 0
-906 9985 0
-907 9987 0
-908 9989 0
-909 9991 0
-910 -9990 0
c (variant_fields_00001_00007_00003=field_00007_00003)
-7547 842 0
-7549 843 0
-7551 844 0
-7553 845 0
-7555 846 0
-7557 847 0
-7559 848 0
-7561 849 0
7560 850 0
-842 7547 0
-843 7549 0
-844 7551 0
-845 7553 0
-846 7555 0
-847 7557 0
-848 7559 0
-849 7561 0
-850 -7560 0
c (field_00003_00007=variant_fields_00002_00007_00003)
-362 8762 0
-363 8764 0
-364 8766 0
-365 8768 0
-366 8770 0
-367 8772 0
-368 8774 0
-369 8776 0
-370 -8775 0
-8762 362 0
-8764 363 0
-8766 364 0
-8768 365 0
-8770 366 0
-8772 367 0
-8774 368 0
-8776 369 0
8775 370 0
c (variant_fields_00004_00007_00004=field_00006_00007)
-11207 767 0
-11209 768 0
-11211 769 0
-11213 770 0
-11215 771 0
-11217 772 0
-11219 773 0
-11221 774 0
11220 775 0
-767 11207 0
-768 11209 0
-769 11211 0
-770 11213 0
-771 11215 0
-772 11217 0
-773 11219 0
-774 11221 0
-775 -11220 0
c (variant_fields_00003_00007_00004=field_00007_00006)
-9992 887 0
-9994 888 0
-9996 889 0
-9998 890 0
-10000 891 0
-10002 892 0
-10004 893 0
-10006 894 0
10005 895 0
-887 9992 0
-888 9994 0
-889 9996 0
-890 9998 0
-891 10000 0
-892 10002 0
-893 10004 0
-894 10006 0
-895 -10005 0
c (variant_fields_00001_00007_00004=field_00007_00004)
-7562 857 0
-7564 858 0
-7566 859 0
-7568 860 0
-7570 861 0
-7572 862 0
-7574 863 0
-7576 864 0
7575 865 0
-857 7562 0
-858 7564 0
-859 7566 0
-860 7568 0
-861 7570 0
-862 7572 0
-863 7574 0
-864 7576 0
-865 -7575 0
c (field_00004_00007=variant_fields_00002_00007_00004)
-497 8777 0
-498 8779 0
-499 8781 0
-500 8783 0
-501 8785 0
-502 8787 0
-503 8789 0
-504 8791 0
-505 -8790 0
-8777 497 0
-8779 498 0
-8781 499 0
-8783 500 0
-8785 501 0
-8787 502 0
-8789 503 0
-8791 504 0
8790 505 0
c (variant_fields_00004_00007_00005=field_00005_00007)
-11222 632 0
-11224 633 0
-11226 634 0
-11228 635 0
-11230 636 0
-11232 637 0
-11234 638 0
-11236 639 0
11235 640 0
-632 11222 0
-633 11224 0
-634 11226 0
-635 11228 0
-636 11230 0
-637 11232 0
-638 11234 0
-639 11236 0
-640 -11235 0
c (variant_fields_00003_00007_00005=field_00007_00005)
-10007 872 0
-10009 873 0
-10011 874 0
-10013 875 0
-10015 876 0
-10017 877 0
-10019 878 0
-10021 879 0
10020 880 0
-872 10007 0
-873 10009 0
-874 10011 0
-875 10013 0
-876 10015 0
-877 10017 0
-878 10019 0
-879 10021 0
-880 -10020 0
c (variant_fields_00001_00007_00005=field_00007_00005)
-7577 872 0
-7579 873 0
-7581 874 0
-7583 875 0
-7585 876 0
-7587 877 0
-7589 878 0
-7591 879 0
7590 880 0
-872 7577 0
-873 7579 0
-874 7581 0
-875 7583 0
-876 7585 0
-877 7587 0
-878 7589 0
-879 7591 0
-880 -7590 0
c (variant_fields_00002_00007_00005=field_00005_00007)
-8792 632 0
-8794 633 0
-8796 634 0
-8798 635 0
-8800 636 0
-8802 637 0
-8804 638 0
-8806 639 0
8805 640 0
-632 8792 0
-633 8794 0
-634 8796 0
-635 8798 0
-636 8800 0
-637 8802 0
-638 8804 0
-639 8806 0
-640 -8805 0
c (variant_fields_00004_00007_00006=field_00004_00007)
-11237 497 0
-11239 498 0
-11241 499 0
-11243 500 0
-11245 501 0
-11247 502 0
-11249 503 0
-11251 504 0
11250 505 0
-497 11237 0
-498 11239 0
-499 11241 0
-500 11243 0
-501 11245 0
-502 11247 0
-503 11249 0
-504 11251 0
-505 -11250 0
c (variant_fields_00003_00007_00006=field_00007_00004)
-10022 857 0
-10024 858 0
-10026 859 0
-10028 860 0
-10030 861 0
-10032 862 0
-10034 863 0
-10036 864 0
10035 865 0
-857 10022 0
-858 10024 0
-859 10026 0
-860 10028 0
-861 10030 0
-862 10032 0
-863 10034 0
-864 10036 0
-865 -10035 0
c (variant_fields_00001_00007_00006=field_00007_00006)
-7592 887 0
-7594 888 0
-7596 889 0
-7598 890 0
-7600 891 0
-7602 892 0
-7604 893 0
-7606 894 0
7605 895 0
-887 7592 0
-888 7594 0
-889 7596 0
-890 7598 0
-891 7600 0
-892 7602 0
-893 7604 0
-894 7606 0
-895 -7605 0
c (variant_fields_00002_00007_00006=field_00006_00007)
-8807 767 0
-8809 768 0
-8811 769 0
-8813 770 0
-8815 771 0
-8817 772 0
-8819 773 0
-8821 774 0
8820 775 0
-767 8807 0
-768 8809 0
-769 8811 0
-770 8813 0
-771 8815 0
-772 8817 0
-773 8819 0
-774 8821 0
-775 -8820 0
c (field_00003_00007=variant_fields_00004_00007_00007)
-362 11252 0
-363 11254 0
-364 11256 0
-365 11258 0
-366 11260 0
-367 11262 0
-368 11264 0
-369 11266 0
-370 -11265 0
-11252 362 0
-11254 363 0
-11256 364 0
-11258 365 0
-11260 366 0
-11262 367 0
-11264 368 0
-11266 369 0
11265 370 0
c (variant_fields_00003_00007_00007=field_00007_00003)
-10037 842 0
-10039 843 0
-10041 844 0
-10043 845 0
-10045 846 0
-10047 847 0
-10049 848 0
-10051 849 0
10050 850 0
-842 10037 0
-843 10039 0
-844 10041 0
-845 10043 0
-846 10045 0
-847 10047 0
-848 10049 0
-849 10051 0
-850 -10050 0
c (variant_fields_00001_00007_00007=field_00007_00007)
-7607 902 0
-7609 903 0
-7611 904 0
-7613 905 0
-7615 906 0
-7617 907 0
-7619 908 0
-7621 909 0
7620 910 0
-902 7607 0
-903 7609 0
-904 7611 0
-905 7613 0
-906 7615 0
-907 7617 0
-908 7619 0
-909 7621 0
-910 -7620 0
c (variant_fields_00002_00007_00007=field_00007_00007)
-8822 902 0
-8824 903 0
-8826 904 0
-8828 905 0
-8830 906 0
-8832 907 0
-8834 908 0
-8836 909 0
8835 910 0
-902 8822 0
-903 8824 0
-904 8826 0
-905 8828 0
-906 8830 0
-907 8832 0
-908 8834 0
-909 8836 0
-910 -8835 0
c (variant_fields_00004_00007_00008=field_00002_00007)
-11267 227 0
-11269 228 0
-11271 229 0
-11273 230 0
-11275 231 0
-11277 232 0
-11279 233 0
-11281 234 0
11280 235 0
-227 11267 0
-228 11269 0
-229 11271 0
-230 11273 0
-231 11275 0
-232 11277 0
-233 11279 0
-234 11281 0
-235 -11280 0
c (variant_fields_00003_00007_00008=field_00007_00002)
-10052 827 0
-10054 828 0
-10056 829 0
-10058 830 0
-10060 831 0
-10062 832 0
-10064 833 0
-10066 834 0
10065 835 0
-827 10052 0
-828 10054 0
-829 10056 0
-830 10058 0
-831 10060 0
-832 10062 0
-833 10064 0
-834 10066 0
-835 -10065 0
c (variant_fields_00001_00007_00008=field_00007_00008)
-7622 917 0
-7624 918 0
-7626 919 0
-7628 920 0
-7630 921 0
-7632 922 0
-7634 923 0
-7636 924 0
7635 925 0
-917 7622 0
-918 7624 0
-919 7626 0
-920 7628 0
-921 7630 0
-922 7632 0
-923 7634 0
-924 7636 0
-925 -7635 0
c (field_00008_00007=variant_fields_00002_00007_00008)
-1037 8837 0
-1038 8839 0
-1039 8841 0
-1040 8843 0
-1041 8845 0
-1042 8847 0
-1043 8849 0
-1044 8851 0
-1045 -8850 0
-8837 1037 0
-8839 1038 0
-8841 1039 0
-8843 1040 0
-8845 1041 0
-8847 1042 0
-8849 1043 0
-8851 1044 0
8850 1045 0
c (variant_fields_00004_00007_00009=field_00001_00007)
-11282 92 0
-11284 93 0
-11286 94 0
-11288 95 0
-11290 96 0
-11292 97 0
-11294 98 0
-11296 99 0
11295 100 0
-92 11282 0
-93 11284 0
-94 11286 0
-95 11288 0
-96 11290 0
-97 11292 0
-98 11294 0
-99 11296 0
-100 -11295 0
c (variant_fields_00003_00007_00009=field_00007_00001)
-10067 812 0
-10069 813 0
-10071 814 0
-10073 815 0
-10075 816 0
-10077 817 0
-10079 818 0
-10081 819 0
10080 820 0
-812 10067 0
-813 10069 0
-814 10071 0
-815 10073 0
-816 10075 0
-817 10077 0
-818 10079 0
-819 10081 0
-820 -10080 0
c (variant_fields_00001_00007_00009=field_00007_00009)
-7637 932 0
-7639 933 0
-7641 934 0
-7643 935 0
-7645 936 0
-7647 937 0
-7649 938 0
-7651 939 0
7650 940 0
-932 7637 0
-933 7639 0
-934 7641 0
-935 7643 0
-936 7645 0
-937 7647 0
-938 7649 0
-939 7651 0
-940 -7650 0
c (variant_fields_00002_00007_00009=field_00009_00007)
-8852 1172 0
-8854 1173 0
-8856 1174 0
-8858 1175 0
-8860 1176 0
-8862 1177 0
-8864 1178 0
-8866 1179 0
8865 1180 0
-1172 8852 0
-1173 8854 0
-1174 8856 0
-1175 8858 0
-1176 8860 0
-1177 8862 0
-1178 8864 0
-1179 8866 0
-1180 -8865 0
c (field_00009_00008=variant_fields_00004_00008_00001)
-1187 11297 0
-1188 11299 0
-1189 11301 0
-1190 11303 0
-1191 11305 0
-1192 11307 0
-1193 11309 0
-1194 11311 0
-1195 -11310 0
-11297 1187 0
-11299 1188 0
-11301 1189 0
-11303 1190 0
-11305 1191 0
-11307 1192 0
-11309 1193 0
-11311 1194 0
11310 1195 0
c (field_00008_00009=variant_fields_00003_00008_00001)
-1067 10082 0
-1068 10084 0
-1069 10086 0
-1070 10088 0
-1071 10090 0
-1072 10092 0
-1073 10094 0
-1074 10096 0
-1075 -10095 0
-10082 1067 0
-10084 1068 0
-10086 1069 0
-10088 1070 0
-10090 1071 0
-10092 1072 0
-10094 1073 0
-10096 1074 0
10095 1075 0
c (field_00008_00001=variant_fields_00001_00008_00001)
-947 7652 0
-948 7654 0
-949 7656 0
-950 7658 0
-951 7660 0
-952 7662 0
-953 7664 0
-954 7666 0
-955 -7665 0
-7652 947 0
-7654 948 0
-7656 949 0
-7658 950 0
-7660 951 0
-7662 952 0
-7664 953 0
-7666 954 0
7665 955 0
c (variant_fields_00002_00008_00001=field_00001_00008)
-8867 107 0
-8869 108 0
-8871 109 0
-8873 110 0
-8875 111 0
-8877 112 0
-8879 113 0
-8881 114 0
8880 115 0
-107 8867 0
-108 8869 0
-109 8871 0
-110 8873 0
-111 8875 0
-112 8877 0
-113 8879 0
-114 8881 0
-115 -8880 0
c (field_00008_00008=variant_fields_00004_00008_00002)
-1052 11312 0
-1053 11314 0
-1054 11316 0
-1055 11318 0
-1056 11320 0
-1057 11322 0
-1058 11324 0
-1059 11326 0
-1060 -11325 0
-11312 1052 0
-11314 1053 0
-11316 1054 0
-11318 1055 0
-11320 1056 0
-11322 1057 0
-11324 1058 0
-11326 1059 0
11325 1060 0
c (field_00008_00008=variant_fields_00003_00008_00002)
-1052 10097 0
-1053 10099 0
-1054 10101 0
-1055 10103 0
-1056 10105 0
-1057 10107 0
-1058 10109 0
-1059 10111 0
-1060 -10110 0
-10097 1052 0
-10099 1053 0
-10101 1054 0
-10103 1055 0
-10105 1056 0
-10107 1057 0
-10109 1058 0
-10111 1059 0
10110 1060 0
c (field_00008_00002=variant_fields_00001_00008_00002)
-962 7667 0
-963 7669 0
-964 7671 0
-965 7673 0
-966 7675 0
-967 7677 0
-968 7679 0
-969 7681 0
-970 -7680 0
-7667 962 0
-7669 963 0
-7671 964 0
-7673 965 0
-7675 966 0
-7677 967 0
-7679 968 0
-7681 969 0
7680 970 0
c (variant_fields_00002_00008_00002=field_00002_00008)
-8882 242 0
-8884 243 0
-8886 244 0
-8888 245 0
-8890 246 0
-8892 247 0
-8894 248 0
-8896 249 0
8895 250 0
-242 8882 0
-243 8884 0
-244 8886 0
-245 8888 0
-246 8890 0
-247 8892 0
-248 8894 0
-249 8896 0
-250 -8895 0
c (variant_fields_00004_00008_00003=field_00007_00008)
-11327 917 0
-11329 918 0
-11331 919 0
-11333 920 0
-11335 921 0
-11337 922 0
-11339 923 0
-11341 924 0
11340 925 0
-917 11327 0
-918 11329 0
-919 11331 0
-920 11333 0
-921 11335 0
-922 11337 0
-923 11339 0
-924 11341 0
-925 -11340 0
c (field_00008_00007=variant_fields_00003_00008_00003)
-1037 10112 0
-1038 10114 0
-1039 10116 0
-1040 10118 0
-1041 10120 0
-1042 10122 0
-1043 10124 0
-1044 10126 0
-1045 -10125 0
-10112 1037 0
-10114 1038 0
-10116 1039 0
-10118 1040 0
-10120 1041 0
-10122 1042 0
-10124 1043 0
-10126 1044 0
10125 1045 0
c (field_00008_00003=variant_fields_00001_00008_00003)
-977 7682 0
-978 7684 0
-979 7686 0
-980 7688 0
-981 7690 0
-982 7692 0
-983 7694 0
-984 7696 0
-985 -7695 0
-7682 977 0
-7684 978 0
-7686 979 0
-7688 980 0
-7690 981 0
-7692 982 0
-7694 983 0
-7696 984 0
7695 985 0
c (field_00003_00008=variant_fields_00002_00008_00003)
-377 8897 0
-378 8899 0
-379 8901 0
-380 8903 0
-381 8905 0
-382 8907 0
-383 8909 0
-384 8911 0
-385 -8910 0
-8897 377 0
-8899 378 0
-8901 379 0
-8903 380 0
-8905 381 0
-8907 382 0
-8909 383 0
-8911 384 0
8910 385 0
c (variant_fields_00004_00008_00004=field_00006_00008)
-11342 782 0
-11344 783 0
-11346 784 0
-11348 785 0
-11350 786 0
-11352 787 0
-11354 788 0
-11356 789 0
11355 790 0
-782 11342 0
-783 11344 0
-784 11346 0
-785 11348 0
-786 11350 0
-787 11352 0
-788 11354 0
-789 11356 0
-790 -11355 0
c (field_00008_00006=variant_fields_00003_00008_00004)
-1022 10127 0
-1023 10129 0
-1024 10131 0
-1025 10133 0
-1026 10135 0
-1027 10137 0
-1028 10139 0
-1029 10141 0
-1030 -10140 0
-10127 1022 0
-10129 1023 0
-10131 1024 0
-10133 1025 0
-10135 1026 0
-10137 1027 0
-10139 1028 0
-10141 1029 0
10140 1030 0
c (field_00008_00004=variant_fields_00001_00008_00004)
-992 7697 0
-993 7699 0
-994 7701 0
-995 7703 0
-996 7705 0
-997 7707 0
-998 7709 0
-999 7711 0
-1000 -7710 0
-7697 992 0
-7699 993 0
-7701 994 0
-7703 995 0
-7705 996 0
-7707 997 0
-7709 998 0
-7711 999 0
7710 1000 0
c (field_00004_00008=variant_fields_00002_00008_00004)
-512 8912 0
-513 8914 0
-514 8916 0
-515 8918 0
-516 8920 0
-517 8922 0
-518 8924 0
-519 8926 0
-520 -8925 0
-8912 512 0
-8914 513 0
-8916 514 0
-8918 515 0
-8920 516 0
-8922 517 0
-8924 518 0
-8926 519 0
8925 520 0
c (variant_fields_00004_00008_00005=field_00005_00008)
-11357 647 0
-11359 648 0
-11361 649 0
-11363 650 0
-11365 651 0
-11367 652 0
-11369 653 0
-11371 654 0
11370 655 0
-647 11357 0
-648 11359 0
-649 11361 0
-650 11363 0
-651 11365 0
-652 11367 0
-653 11369 0
-654 11371 0
-655 -11370 0
c (field_00008_00005=variant_fields_00003_00008_00005)
-1007 10142 0
-1008 10144 0
-1009 10146 0
-1010 10148 0
-1011 10150 0
-1012 10152 0
-1013 10154 0
-1014 10156 0
-1015 -10155 0
-10142 1007 0
-10144 1008 0
-10146 1009 0
-10148 1010 0
-10150 1011 0
-10152 1012 0
-10154 1013 0
-10156 1014 0
10155 1015 0
c (field_00008_00005=variant_fields_00001_00008_00005)
-1007 7712 0
-1008 7714 0
-1009 7716 0
-1010 7718 0
-1011 7720 0
-1012 7722 0
-1013 7724 0
-1014 7726 0
-1015 -7725 0
-7712 1007 0
-7714 1008 0
-7716 1009 0
-7718 1010 0
-7720 1011 0
-7722 1012 0
-7724 1013 0
-7726 1014 0
7725 1015 0
c (field_00005_00008=variant_fields_00002_00008_00005)
-647 8927 0
-648 8929 0
-649 8931 0
-650 8933 0
-651 8935 0
-652 8937 0
-653 8939 0
-654 8941 0
-655 -8940 0
-8927 647 0
-8929 648 0
-8931 649 0
-8933 650 0
-8935 651 0
-8937 652 0
-8939 653 0
-8941 654 0
8940 655 0
c (field_00004_00008=variant_fields_00004_00008_00006)
-512 11372 0
-513 11374 0
-514 11376 0
-515 11378 0
-516 11380 0
-517 11382 0
-518 11384 0
-519 11386 0
-520 -11385 0
-11372 512 0
-11374 513 0
-11376 514 0
-11378 515 0
-11380 516 0
-11382 517 0
-11384 518 0
-11386 519 0
11385 520 0
c (field_00008_00004=variant_fields_00003_00008_00006)
-992 10157 0
-993 10159 0
-994 10161 0
-995 10163 0
-996 10165 0
-997 10167 0
-998 10169 0
-999 10171 0
-1000 -10170 0
-10157 992 0
-10159 993 0
-10161 994 0
-10163 995 0
-10165 996 0
-10167 997 0
-10169 998 0
-10171 999 0
10170 1000 0
c (field_00008_00006=variant_fields_00001_00008_00006)
-1022 7727 0
-1023 7729 0
-1024 7731 0
-1025 7733 0
-1026 7735 0
-1027 7737 0
-1028 7739 0
-1029 7741 0
-1030 -7740 0
-7727 1022 0
-7729 1023 0
-7731 1024 0
-7733 1025 0
-7735 1026 0
-7737 1027 0
-7739 1028 0
-7741 1029 0
7740 1030 0
c (variant_fields_00002_00008_00006=field_00006_00008)
-8942 782 0
-8944 783 0
-8946 784 0
-8948 785 0
-8950 786 0
-8952 787 0
-8954 788 0
-8956 789 0
8955 790 0
-782 8942 0
-783 8944 0
-784 8946 0
-785 8948 0
-786 8950 0
-787 8952 0
-788 8954 0
-789 8956 0
-790 -8955 0
c (field_00003_00008=variant_fields_00004_00008_00007)
-377 11387 0
-378 11389 0
-379 11391 0
-380 11393 0
-381 11395 0
-382 11397 0
-383 11399 0
-384 11401 0
-385 -11400 0
-11387 377 0
-11389 378 0
-11391 379 0
-11393 380 0
-11395 381 0
-11397 382 0
-11399 383 0
-11401 384 0
11400 385 0
c (field_00008_00003=variant_fields_00003_00008_00007)
-977 10172 0
-978 10174 0
-979 10176 0
-980 10178 0
-981 10180 0
-982 10182 0
-983 10184 0
-984 10186 0
-985 -10185 0
-10172 977 0
-10174 978 0
-10176 979 0
-10178 980 0
-10180 981 0
-10182 982 0
-10184 983 0
-10186 984 0
10185 985 0
c (field_00008_00007=variant_fields_00001_00008_00007)
-1037 7742 0
-1038 7744 0
-1039 7746 0
-1040 7748 0
-1041 7750 0
-1042 7752 0
-1043 7754 0
-1044 7756 0
-1045 -7755 0
-7742 1037 0
-7744 1038 0
-7746 1039 0
-7748 1040 0
-7750 1041 0
-7752 1042 0
-7754 1043 0
-7756 1044 0
7755 1045 0
c (variant_fields_00002_00008_00007=field_00007_00008)
-8957 917 0
-8959 918 0
-8961 919 0
-8963 920 0
-8965 921 0
-8967 922 0
-8969 923 0
-8971 924 0
8970 925 0
-917 8957 0
-918 8959 0
-919 8961 0
-920 8963 0
-921 8965 0
-922 8967 0
-923 8969 0
-924 8971 0
-925 -8970 0
c (variant_fields_00004_00008_00008=field_00002_00008)
-11402 242 0
-11404 243 0
-11406 244 0
-11408 245 0
-11410 246 0
-11412 247 0
-11414 248 0
-11416 249 0
11415 250 0
-242 11402 0
-243 11404 0
-244 11406 0
-245 11408 0
-246 11410 0
-247 11412 0
-248 11414 0
-249 11416 0
-250 -11415 0
c (field_00008_00002=variant_fields_00003_00008_00008)
-962 10187 0
-963 10189 0
-964 10191 0
-965 10193 0
-966 10195 0
-967 10197 0
-968 10199 0
-969 10201 0
-970 -10200 0
-10187 962 0
-10189 963 0
-10191 964 0
-10193 965 0
-10195 966 0
-10197 967 0
-10199 968 0
-10201 969 0
10200 970 0
c (field_00008_00008=variant_fields_00001_00008_00008)
-1052 7757 0
-1053 7759 0
-1054 7761 0
-1055 7763 0
-1056 7765 0
-1057 7767 0
-1058 7769 0
-1059 7771 0
-1060 -7770 0
-7757 1052 0
-7759 1053 0
-7761 1054 0
-7763 1055 0
-7765 1056 0
-7767 1057 0
-7769 1058 0
-7771 1059 0
7770 1060 0
c (field_00008_00008=variant_fields_00002_00008_00008)
-1052 8972 0
-1053 8974 0
-1054 8976 0
-1055 8978 0
-1056 8980 0
-1057 8982 0
-1058 8984 0
-1059 8986 0
-1060 -8985 0
-8972 1052 0
-8974 1053 0
-8976 1054 0
-8978 1055 0
-8980 1056 0
-8982 1057 0
-8984 1058 0
-8986 1059 0
8985 1060 0
c (variant_fields_00004_00008_00009=field_00001_00008)
-11417 107 0
-11419 108 0
-11421 109 0
-11423 110 0
-11425 111 0
-11427 112 0
-11429 113 0
-11431 114 0
11430 115 0
-107 11417 0
-108 11419 0
-109 11421 0
-110 11423 0
-111 11425 0
-112 11427 0
-113 11429 0
-114 11431 0
-115 -11430 0
c (field_00008_00001=variant_fields_00003_00008_00009)
-947 10202 0
-948 10204 0
-949 10206 0
-950 10208 0
-951 10210 0
-952 10212 0
-953 10214 0
-954 10216 0
-955 -10215 0
-10202 947 0
-10204 948 0
-10206 949 0
-10208 950 0
-10210 951 0
-10212 952 0
-10214 953 0
-10216 954 0
10215 955 0
c (field_00008_00009=variant_fields_00001_00008_00009)
-1067 7772 0
-1068 7774 0
-1069 7776 0
-1070 7778 0
-1071 7780 0
-1072 7782 0
-1073 7784 0
-1074 7786 0
-1075 -7785 0
-7772 1067 0
-7774 1068 0
-7776 1069 0
-7778 1070 0
-7780 1071 0
-7782 1072 0
-7784 1073 0
-7786 1074 0
7785 1075 0
c (field_00009_00008=variant_fields_00002_00008_00009)
-1187 8987 0
-1188 8989 0
-1189 8991 0
-1190 8993 0
-1191 8995 0
-1192 8997 0
-1193 8999 0
-1194 9001 0
-1195 -9000 0
-8987 1187 0
-8989 1188 0
-8991 1189 0
-8993 1190 0
-8995 1191 0
-8997 1192 0
-8999 1193 0
-9001 1194 0
9000 1195 0
c (field_00009_00009=variant_fields_00004_00009_00001)
-1202 11432 0
-1203 11434 0
-1204 11436 0
-1205 11438 0
-1206 11440 0
-1207 11442 0
-1208 11444 0
-1209 11446 0
-1210 -11445 0
-11432 1202 0
-11434 1203 0
-11436 1204 0
-11438 1205 0
-11440 1206 0
-11442 1207 0
-11444 1208 0
-11446 1209 0
11445 1210 0
c (field_00009_00009=variant_fields_00003_00009_00001)
-1202 10217 0
-1203 10219 0
-1204 10221 0
-1205 10223 0
-1206 10225 0
-1207 10227 0
-1208 10229 0
-1209 10231 0
-1210 -10230 0
-10217 1202 0
-10219 1203 0
-10221 1204 0
-10223 1205 0
-10225 1206 0
-10227 1207 0
-10229 1208 0
-10231 1209 0
10230 1210 0
c (field_00009_00001=variant_fields_00001_00009_00001)
-1082 7787 0
-1083 7789 0
-1084 7791 0
-1085 7793 0
-1086 7795 0
-1087 7797 0
-1088 7799 0
-1089 7801 0
-1090 -7800 0
-7787 1082 0
-7789 1083 0
-7791 1084 0
-7793 1085 0
-7795 1086 0
-7797 1087 0
-7799 1088 0
-7801 1089 0
7800 1090 0
c (field_00001_00009=variant_fields_00002_00009_00001)
-122 9002 0
-123 9004 0
-124 9006 0
-125 9008 0
-126 9010 0
-127 9012 0
-128 9014 0
-129 9016 0
-130 -9015 0
-9002 122 0
-9004 123 0
-9006 124 0
-9008 125 0
-9010 126 0
-9012 127 0
-9014 128 0
-9016 129 0
9015 130 0
c (field_00008_00009=variant_fields_00004_00009_00002)
-1067 11447 0
-1068 11449 0
-1069 11451 0
-1070 11453 0
-1071 11455 0
-1072 11457 0
-1073 11459 0
-1074 11461 0
-1075 -11460 0
-11447 1067 0
-11449 1068 0
-11451 1069 0
-11453 1070 0
-11455 1071 0
-11457 1072 0
-11459 1073 0
-11461 1074 0
11460 1075 0
c (field_00009_00008=variant_fields_00003_00009_00002)
-1187 10232 0
-1188 10234 0
-1189 10236 0
-1190 10238 0
-1191 10240 0
-1192 10242 0
-1193 10244 0
-1194 10246 0
-1195 -10245 0
-10232 1187 0
-10234 1188 0
-10236 1189 0
-10238 1190 0
-10240 1191 0
-10242 1192 0
-10244 1193 0
-10246 1194 0
10245 1195 0
c (field_00009_00002=variant_fields_00001_00009_00002)
-1097 7802 0
-1098 7804 0
-1099 7806 0
-1100 7808 0
-1101 7810 0
-1102 7812 0
-1103 7814 0
-1104 7816 0
-1105 -7815 0
-7802 1097 0
-7804 1098 0
-7806 1099 0
-7808 1100 0
-7810 1101 0
-7812 1102 0
-7814 1103 0
-7816 1104 0
7815 1105 0
c (variant_fields_00002_00009_00002=field_00002_00009)
-9017 257 0
-9019 258 0
-9021 259 0
-9023 260 0
-9025 261 0
-9027 262 0
-9029 263 0
-9031 264 0
9030 265 0
-257 9017 0
-258 9019 0
-259 9021 0
-260 9023 0
-261 9025 0
-262 9027 0
-263 9029 0
-264 9031 0
-265 -9030 0
c (variant_fields_00004_00009_00003=field_00007_00009)
-11462 932 0
-11464 933 0
-11466 934 0
-11468 935 0
-11470 936 0
-11472 937 0
-11474 938 0
-11476 939 0
11475 940 0
-932 11462 0
-933 11464 0
-934 11466 0
-935 11468 0
-936 11470 0
-937 11472 0
-938 11474 0
-939 11476 0
-940 -11475 0
c (field_00009_00007=variant_fields_00003_00009_00003)
-1172 10247 0
-1173 10249 0
-1174 10251 0
-1175 10253 0
-1176 10255 0
-1177 10257 0
-1178 10259 0
-1179 10261 0
-1180 -10260 0
-10247 1172 0
-10249 1173 0
-10251 1174 0
-10253 1175 0
-10255 1176 0
-10257 1177 0
-10259 1178 0
-10261 1179 0
10260 1180 0
c (field_00009_00003=variant_fields_00001_00009_00003)
-1112 7817 0
-1113 7819 0
-1114 7821 0
-1115 7823 0
-1116 7825 0
-1117 7827 0
-1118 7829 0
-1119 7831 0
-1120 -7830 0
-7817 1112 0
-7819 1113 0
-7821 1114 0
-7823 1115 0
-7825 1116 0
-7827 1117 0
-7829 1118 0
-7831 1119 0
7830 1120 0
c (field_00003_00009=variant_fields_00002_00009_00003)
-392 9032 0
-393 9034 0
-394 9036 0
-395 9038 0
-396 9040 0
-397 9042 0
-398 9044 0
-399 9046 0
-400 -9045 0
-9032 392 0
-9034 393 0
-9036 394 0
-9038 395 0
-9040 396 0
-9042 397 0
-9044 398 0
-9046 399 0
9045 400 0
c (variant_fields_00004_00009_00004=field_00006_00009)
-11477 797 0
-11479 798 0
-11481 799 0
-11483 800 0
-11485 801 0
-11487 802 0
-11489 803 0
-11491 804 0
11490 805 0
-797 11477 0
-798 11479 0
-799 11481 0
-800 11483 0
-801 11485 0
-802 11487 0
-803 11489 0
-804 11491 0
-805 -11490 0
c (field_00009_00006=variant_fields_00003_00009_00004)
-1157 10262 0
-1158 10264 0
-1159 10266 0
-1160 10268 0
-1161 10270 0
-1162 10272 0
-1163 10274 0
-1164 10276 0
-1165 -10275 0
-10262 1157 0
-10264 1158 0
-10266 1159 0
-10268 1160 0
-10270 1161 0
-10272 1162 0
-10274 1163 0
-10276 1164 0
10275 1165 0
c (field_00009_00004=variant_fields_00001_00009_00004)
-1127 7832 0
-1128 7834 0
-1129 7836 0
-1130 7838 0
-1131 7840 0
-1132 7842 0
-1133 7844 0
-1134 7846 0
-1135 -7845 0
-7832 1127 0
-7834 1128 0
-7836 1129 0
-7838 1130 0
-7840 1131 0
-7842 1132 0
-7844 1133 0
-7846 1134 0
7845 1135 0
c (field_00004_00009=variant_fields_00002_00009_00004)
-527 9047 0
-528 9049 0
-529 9051 0
-530 9053 0
-531 9055 0
-532 9057 0
-533 9059 0
-534 9061 0
-535 -9060 0
-9047 527 0
-9049 528 0
-9051 529 0
-9053 530 0
-9055 531 0
-9057 532 0
-9059 533 0
-9061 534 0
9060 535 0
c (field_00005_00009=variant_fields_00004_00009_00005)
-662 11492 0
-663 11494 0
-664 11496 0
-665 11498 0
-666 11500 0
-667 11502 0
-668 11504 0
-669 11506 0
-670 -11505 0
-11492 662 0
-11494 663 0
-11496 664 0
-11498 665 0
-11500 666 0
-11502 667 0
-11504 668 0
-11506 669 0
11505 670 0
c (field_00009_00005=variant_fields_00003_00009_00005)
-1142 10277 0
-1143 10279 0
-1144 10281 0
-1145 10283 0
-1146 10285 0
-1147 10287 0
-1148 10289 0
-1149 10291 0
-1150 -10290 0
-10277 1142 0
-10279 1143 0
-10281 1144 0
-10283 1145 0
-10285 1146 0
-10287 1147 0
-10289 1148 0
-10291 1149 0
10290 1150 0
c (field_00009_00005=variant_fields_00001_00009_00005)
-1142 7847 0
-1143 7849 0
-1144 7851 0
-1145 7853 0
-1146 7855 0
-1147 7857 0
-1148 7859 0
-1149 7861 0
-1150 -7860 0
-7847 1142 0
-7849 1143 0
-7851 1144 0
-7853 1145 0
-7855 1146 0
-7857 1147 0
-7859 1148 0
-7861 1149 0
7860 1150 0
c (field_00005_00009=variant_fields_00002_00009_00005)
-662 9062 0
-663 9064 0
-664 9066 0
-665 9068 0
-666 9070 0
-667 9072 0
-668 9074 0
-669 9076 0
-670 -9075 0
-9062 662 0
-9064 663 0
-9066 664 0
-9068 665 0
-9070 666 0
-9072 667 0
-9074 668 0
-9076 669 0
9075 670 0
c (field_00004_00009=variant_fields_00004_00009_00006)
-527 11507 0
-528 11509 0
-529 11511 0
-530 11513 0
-531 11515 0
-532 11517 0
-533 11519 0
-534 11521 0
-535 -11520 0
-11507 527 0
-11509 528 0
-11511 529 0
-11513 530 0
-11515 531 0
-11517 532 0
-11519 533 0
-11521 534 0
11520 535 0
c (field_00009_00004=variant_fields_00003_00009_00006)
-1127 10292 0
-1128 10294 0
-1129 10296 0
-1130 10298 0
-1131 10300 0
-1132 10302 0
-1133 10304 0
-1134 10306 0
-1135 -10305 0
-10292 1127 0
-10294 1128 0
-10296 1129 0
-10298 1130 0
-10300 1131 0
-10302 1132 0
-10304 1133 0
-10306 1134 0
10305 1135 0
c (field_00009_00006=variant_fields_00001_00009_00006)
-1157 7862 0
-1158 7864 0
-1159 7866 0
-1160 7868 0
-1161 7870 0
-1162 7872 0
-1163 7874 0
-1164 7876 0
-1165 -7875 0
-7862 1157 0
-7864 1158 0
-7866 1159 0
-7868 1160 0
-7870 1161 0
-7872 1162 0
-7874 1163 0
-7876 1164 0
7875 1165 0
c (field_00006_00009=variant_fields_00002_00009_00006)
-797 9077 0
-798 9079 0
-799 9081 0
-800 9083 0
-801 9085 0
-802 9087 0
-803 9089 0
-804 9091 0
-805 -9090 0
-9077 797 0
-9079 798 0
-9081 799 0
-9083 800 0
-9085 801 0
-9087 802 0
-9089 803 0
-9091 804 0
9090 805 0
c (field_00003_00009=variant_fields_00004_00009_00007)
-392 11522 0
-393 11524 0
-394 11526 0
-395 11528 0
-396 11530 0
-397 11532 0
-398 11534 0
-399 11536 0
-400 -11535 0
-11522 392 0
-11524 393 0
-11526 394 0
-11528 395 0
-11530 396 0
-11532 397 0
-11534 398 0
-11536 399 0
11535 400 0
c (field_00009_00003=variant_fields_00003_00009_00007)
-1112 10307 0
-1113 10309 0
-1114 10311 0
-1115 10313 0
-1116 10315 0
-1117 10317 0
-1118 10319 0
-1119 10321 0
-1120 -10320 0
-10307 1112 0
-10309 1113 0
-10311 1114 0
-10313 1115 0
-10315 1116 0
-10317 1117 0
-10319 1118 0
-10321 1119 0
10320 1120 0
c (field_00009_00007=variant_fields_00001_00009_00007)
-1172 7877 0
-1173 7879 0
-1174 7881 0
-1175 7883 0
-1176 7885 0
-1177 7887 0
-1178 7889 0
-1179 7891 0
-1180 -7890 0
-7877 1172 0
-7879 1173 0
-7881 1174 0
-7883 1175 0
-7885 1176 0
-7887 1177 0
-7889 1178 0
-7891 1179 0
7890 1180 0
c (variant_fields_00002_00009_00007=field_00007_00009)
-9092 932 0
-9094 933 0
-9096 934 0
-9098 935 0
-9100 936 0
-9102 937 0
-9104 938 0
-9106 939 0
9105 940 0
-932 9092 0
-933 9094 0
-934 9096 0
-935 9098 0
-936 9100 0
-937 9102 0
-938 9104 0
-939 9106 0
-940 -9105 0
c (variant_fields_00004_00009_00008=field_00002_00009)
-11537 257 0
-11539 258 0
-11541 259 0
-11543 260 0
-11545 261 0
-11547 262 0
-11549 263 0
-11551 264 0
11550 265 0
-257 11537 0
-258 11539 0
-259 11541 0
-260 11543 0
-261 11545 0
-262 11547 0
-263 11549 0
-264 11551 0
-265 -11550 0
c (field_00009_00002=variant_fields_00003_00009_00008)
-1097 10322 0
-1098 10324 0
-1099 10326 0
-1100 10328 0
-1101 10330 0
-1102 10332 0
-1103 10334 0
-1104 10336 0
-1105 -10335 0
-10322 1097 0
-10324 1098 0
-10326 1099 0
-10328 1100 0
-10330 1101 0
-10332 1102 0
-10334 1103 0
-10336 1104 0
10335 1105 0
c (field_00009_00008=variant_fields_00001_00009_00008)
-1187 7892 0
-1188 7894 0
-1189 7896 0
-1190 7898 0
-1191 7900 0
-1192 7902 0
-1193 7904 0
-1194 7906 0
-1195 -7905 0
-7892 1187 0
-7894 1188 0
-7896 1189 0
-7898 1190 0
-7900 1191 0
-7902 1192 0
-7904 1193 0
-7906 1194 0
7905 1195 0
c (field_00008_00009=variant_fields_00002_00009_00008)
-1067 9107 0
-1068 9109 0
-1069 9111 0
-1070 9113 0
-1071 9115 0
-1072 9117 0
-1073 9119 0
-1074 9121 0
-1075 -9120 0
-9107 1067 0
-9109 1068 0
-9111 1069 0
-9113 1070 0
-9115 1071 0
-9117 1072 0
-9119 1073 0
-9121 1074 0
9120 1075 0
c (variant_fields_00004_00009_00009=field_00001_00009)
-11552 122 0
-11554 123 0
-11556 124 0
-11558 125 0
-11560 126 0
-11562 127 0
-11564 128 0
-11566 129 0
11565 130 0
-122 11552 0
-123 11554 0
-124 11556 0
-125 11558 0
-126 11560 0
-127 11562 0
-128 11564 0
-129 11566 0
-130 -11565 0
c (field_00009_00001=variant_fields_00003_00009_00009)
-1082 10337 0
-1083 10339 0
-1084 10341 0
-1085 10343 0
-1086 10345 0
-1087 10347 0
-1088 10349 0
-1089 10351 0
-1090 -10350 0
-10337 1082 0
-10339 1083 0
-10341 1084 0
-10343 1085 0
-10345 1086 0
-10347 1087 0
-10349 1088 0
-10351 1089 0
10350 1090 0
c (field_00009_00009=variant_fields_00001_00009_00009)
-1202 7907 0
-1203 7909 0
-1204 7911 0
-1205 7913 0
-1206 7915 0
-1207 7917 0
-1208 7919 0
-1209 7921 0
-1210 -7920 0
-7907 1202 0
-7909 1203 0
-7911 1204 0
-7913 1205 0
-7915 1206 0
-7917 1207 0
-7919 1208 0
-7921 1209 0
7920 1210 0
c (field_00009_00009=variant_fields_00002_00009_00009)
-1202 9122 0
-1203 9124 0
-1204 9126 0
-1205 9128 0
-1206 9130 0
-1207 9132 0
-1208 9134 0
-1209 9136 0
-1210 -9135 0
-9122 1202 0
-9124 1203 0
-9126 1204 0
-9128 1205 0
-9130 1206 0
-9132 1207 0
-9134 1208 0
-9136 1209 0
9135 1210 0
c SATLiteral(1271)
1271 0
c SATLiteral(1407)
1407 0
c SATLiteral(1543)
1543 0
c SATLiteral(1679)
1679 0
c SATLiteral(1815)
1815 0
c SATLiteral(1951)
1951 0
c SATLiteral(2087)
2087 0
c SATLiteral(2223)
2223 0
c SATLiteral(2359)
2359 0
c SATLiteral(2495)
2495 0
c SATLiteral(2631)
2631 0
c SATLiteral(2767)
2767 0
c SATLiteral(2903)
2903 0
c SATLiteral(3039)
3039 0
c SATLiteral(3175)
3175 0
c SATLiteral(3311)
3311 0
c SATLiteral(3447)
3447 0
c SATLiteral(3583)
3583 0
c SATLiteral(3719)
3719 0
c SATLiteral(3855)
3855 0
c SATLiteral(3991)
3991 0
c SATLiteral(4127)
4127 0
c SATLiteral(4263)
4263 0
c SATLiteral(4399)
4399 0
c SATLiteral(4535)
4535 0
c SATLiteral(4671)
4671 0
c SATLiteral(4807)
4807 0
c SATLiteral(4943)
4943 0
c SATLiteral(5079)
5079 0
c SATLiteral(5215)
5215 0
c SATLiteral(5351)
5351 0
c SATLiteral(5487)
5487 0
c SATLiteral(5623)
5623 0
c SATLiteral(5759)
5759 0
c SATLiteral(5895)
5895 0
c SATLiteral(6031)
6031 0
c (SATLiteral(1235) -> SATLiteral(6167))
-1235 6167 0
c (SATLiteral(1236) -> SATLiteral(6190))
-1236 6190 0
c (SATLiteral(1237) -> SATLiteral(6199))
-1237 6199 0
c (SATLiteral(1238) -> SATLiteral(6216))
-1238 6216 0
c (SATLiteral(1239) -> SATLiteral(6229))
-1239 6229 0
c (SATLiteral(1240) -> SATLiteral(6246))
-1240 6246 0
c (SATLiteral(1241) -> SATLiteral(6263))
-1241 6263 0
c (SATLiteral(1242) -> SATLiteral(6276))
-1242 6276 0
c (SATLiteral(1243) -> SATLiteral(6289))
-1243 6289 0
c (SATLiteral(1244) -> SATLiteral(6302))
-1244 6302 0
c (SATLiteral(1245) -> SATLiteral(6325))
-1245 6325 0
c (SATLiteral(1246) -> SATLiteral(6336))
-1246 6336 0
c (SATLiteral(1247) -> SATLiteral(6351))
-1247 6351 0
c (SATLiteral(1248) -> SATLiteral(6366))
-1248 6366 0
c (SATLiteral(1249) -> SATLiteral(6379))
-1249 6379 0
c (SATLiteral(1250) -> SATLiteral(6394))
-1250 6394 0
c (SATLiteral(1251) -> SATLiteral(6413))
-1251 6413 0
c (SATLiteral(1252) -> SATLiteral(6424))
-1252 6424 0
c (SATLiteral(1253) -> SATLiteral(6439))
-1253 6439 0
c (SATLiteral(1254) -> SATLiteral(6456))
-1254 6456 0
c (SATLiteral(1255) -> SATLiteral(6467))
-1255 6467 0
c (SATLiteral(1256) -> SATLiteral(6484))
-1256 6484 0
c (SATLiteral(1257) -> SATLiteral(6501))
-1257 6501 0
c (SATLiteral(1258) -> SATLiteral(6516))
-1258 6516 0
c (SATLiteral(1259) -> SATLiteral(6529))
-1259 6529 0
c (SATLiteral(1260) -> SATLiteral(6550))
-1260 6550 0
c (SATLiteral(1261) -> SATLiteral(6561))
-1261 6561 0
c (SATLiteral(1262) -> SATLiteral(6580))
-1262 6580 0
c (SATLiteral(1263) -> SATLiteral(6587))
-1263 6587 0
c (SATLiteral(1264) -> SATLiteral(6606))
-1264 6606 0
c (SATLiteral(1265) -> SATLiteral(6619))
-1265 6619 0
c (SATLiteral(1266) -> SATLiteral(6636))
-1266 6636 0
c (SATLiteral(1267) -> SATLiteral(6653))
-1267 6653 0
c (SATLiteral(1268) -> SATLiteral(6664))
-1268 6664 0
c (SATLiteral(1269) -> SATLiteral(6681))
-1269 6681 0
c (SATLiteral(1270) -> SATLiteral(6696))
-1270 6696 0
c (SATLiteral(1217) -> SATLiteral(11855))
-1217 11855 0
c (SATLiteral(1217) -> SATLiteral(11856))
-1217 11856 0
c (SATLiteral(1217) -> SATLiteral(11857))
-1217 11857 0
c (SATLiteral(1217) -> SATLiteral(11858))
-1217 11858 0
c (SATLiteral(1217) -> SATLiteral(11859))
-1217 11859 0
c (SATLiteral(1217) -> SATLiteral(11860))
-1217 11860 0
c (SATLiteral(1217) -> SATLiteral(11861))
-1217 11861 0
c (SATLiteral(1217) -> SATLiteral(11862))
-1217 11862 0
c (SATLiteral(1217) -> SATLiteral(11863))
-1217 11863 0
c (SATLiteral(1218) -> SATLiteral(11864))
-1218 11864 0
c (SATLiteral(1218) -> SATLiteral(11865))
-1218 11865 0
c (SATLiteral(1218) -> SATLiteral(11866))
-1218 11866 0
c (SATLiteral(1218) -> SATLiteral(11867))
-1218 11867 0
c (SATLiteral(1218) -> SATLiteral(11868))
-1218 11868 0
c (SATLiteral(1218) -> SATLiteral(11869))
-1218 11869 0
c (SATLiteral(1218) -> SATLiteral(11870))
-1218 11870 0
c (SATLiteral(1218) -> SATLiteral(11871))
-1218 11871 0
c (SATLiteral(1218) -> SATLiteral(11872))
-1218 11872 0
c (SATLiteral(1219) -> SATLiteral(11873))
-1219 11873 0
c (SATLiteral(1219) -> SATLiteral(11874))
-1219 11874 0
c (SATLiteral(1219) -> SATLiteral(11875))
-1219 11875 0
c (SATLiteral(1219) -> SATLiteral(11876))
-1219 11876 0
c (SATLiteral(1219) -> SATLiteral(11877))
-1219 11877 0
c (SATLiteral(1219) -> SATLiteral(11878))
-1219 11878 0
c (SATLiteral(1219) -> SATLiteral(11879))
-1219 11879 0
c (SATLiteral(1219) -> SATLiteral(11880))
-1219 11880 0
c (SATLiteral(1219) -> SATLiteral(11881))
-1219 11881 0
c (SATLiteral(1220) -> SATLiteral(11882))
-1220 11882 0
c (SATLiteral(1220) -> SATLiteral(11883))
-1220 11883 0
c (SATLiteral(1220) -> SATLiteral(11884))
-1220 11884 0
c (SATLiteral(1220) -> SATLiteral(11885))
-1220 11885 0
c (SATLiteral(1220) -> SATLiteral(11886))
-1220 11886 0
c (SATLiteral(1220) -> SATLiteral(11887))
-1220 11887 0
c (SATLiteral(1220) -> SATLiteral(11888))
-1220 11888 0
c (SATLiteral(1220) -> SATLiteral(11889))
-1220 11889 0
c (SATLiteral(1220) -> SATLiteral(11890))
-1220 11890 0
c (SATLiteral(1221) -> SATLiteral(11891))
-1221 11891 0
c (SATLiteral(1221) -> SATLiteral(11892))
-1221 11892 0
c (SATLiteral(1221) -> SATLiteral(11893))
-1221 11893 0
c (SATLiteral(1221) -> SATLiteral(11894))
-1221 11894 0
c (SATLiteral(1221) -> SATLiteral(11895))
-1221 11895 0
c (SATLiteral(1221) -> SATLiteral(11896))
-1221 11896 0
c (SATLiteral(1221) -> SATLiteral(11897))
-1221 11897 0
c (SATLiteral(1221) -> SATLiteral(11898))
-1221 11898 0
c (SATLiteral(1221) -> SATLiteral(11899))
-1221 11899 0
c (SATLiteral(1222) -> SATLiteral(11900))
-1222 11900 0
c (SATLiteral(1222) -> SATLiteral(11901))
-1222 11901 0
c (SATLiteral(1222) -> SATLiteral(11902))
-1222 11902 0
c (SATLiteral(1222) -> SATLiteral(11903))
-1222 11903 0
c (SATLiteral(1222) -> SATLiteral(11904))
-1222 11904 0
c (SATLiteral(1222) -> SATLiteral(11905))
-1222 11905 0
c (SATLiteral(1222) -> SATLiteral(11906))
-1222 11906 0
c (SATLiteral(1222) -> SATLiteral(11907))
-1222 11907 0
c (SATLiteral(1222) -> SATLiteral(11908))
-1222 11908 0
c (SATLiteral(1223) -> SATLiteral(11909))
-1223 11909 0
c (SATLiteral(1223) -> SATLiteral(11910))
-1223 11910 0
c (SATLiteral(1223) -> SATLiteral(11911))
-1223 11911 0
c (SATLiteral(1223) -> SATLiteral(11912))
-1223 11912 0
c (SATLiteral(1223) -> SATLiteral(11913))
-1223 11913 0
c (SATLiteral(1223) -> SATLiteral(11914))
-1223 11914 0
c (SATLiteral(1223) -> SATLiteral(11915))
-1223 11915 0
c (SATLiteral(1223) -> SATLiteral(11916))
-1223 11916 0
c (SATLiteral(1223) -> SATLiteral(11917))
-1223 11917 0
c (SATLiteral(1224) -> SATLiteral(11918))
-1224 11918 0
c (SATLiteral(1224) -> SATLiteral(11919))
-1224 11919 0
c (SATLiteral(1224) -> SATLiteral(11920))
-1224 11920 0
c (SATLiteral(1224) -> SATLiteral(11921))
-1224 11921 0
c (SATLiteral(1224) -> SATLiteral(11922))
-1224 11922 0
c (SATLiteral(1224) -> SATLiteral(11923))
-1224 11923 0
c (SATLiteral(1224) -> SATLiteral(11924))
-1224 11924 0
c (SATLiteral(1224) -> SATLiteral(11925))
-1224 11925 0
c (SATLiteral(1224) -> SATLiteral(11926))
-1224 11926 0
c (SATLiteral(1225) -> SATLiteral(11927))
-1225 11927 0
c (SATLiteral(1225) -> SATLiteral(11928))
-1225 11928 0
c (SATLiteral(1225) -> SATLiteral(11929))
-1225 11929 0
c (SATLiteral(1225) -> SATLiteral(11930))
-1225 11930 0
c (SATLiteral(1225) -> SATLiteral(11931))
-1225 11931 0
c (SATLiteral(1225) -> SATLiteral(11932))
-1225 11932 0
c (SATLiteral(1225) -> SATLiteral(11933))
-1225 11933 0
c (SATLiteral(1225) -> SATLiteral(11934))
-1225 11934 0
c (SATLiteral(1225) -> SATLiteral(11935))
-1225 11935 0
c (SATLiteral(1226) -> SATLiteral(11936))
-1226 11936 0
c (SATLiteral(1226) -> SATLiteral(11937))
-1226 11937 0
c (SATLiteral(1226) -> SATLiteral(11938))
-1226 11938 0
c (SATLiteral(1226) -> SATLiteral(11939))
-1226 11939 0
c (SATLiteral(1226) -> SATLiteral(11940))
-1226 11940 0
c (SATLiteral(1226) -> SATLiteral(11941))
-1226 11941 0
c (SATLiteral(1226) -> SATLiteral(11942))
-1226 11942 0
c (SATLiteral(1226) -> SATLiteral(11943))
-1226 11943 0
c (SATLiteral(1226) -> SATLiteral(11944))
-1226 11944 0
c (SATLiteral(1227) -> SATLiteral(11945))
-1227 11945 0
c (SATLiteral(1227) -> SATLiteral(11946))
-1227 11946 0
c (SATLiteral(1227) -> SATLiteral(11947))
-1227 11947 0
c (SATLiteral(1227) -> SATLiteral(11948))
-1227 11948 0
c (SATLiteral(1227) -> SATLiteral(11949))
-1227 11949 0
c (SATLiteral(1227) -> SATLiteral(11950))
-1227 11950 0
c (SATLiteral(1227) -> SATLiteral(11951))
-1227 11951 0
c (SATLiteral(1227) -> SATLiteral(11952))
-1227 11952 0
c (SATLiteral(1227) -> SATLiteral(11953))
-1227 11953 0
c (SATLiteral(1228) -> SATLiteral(11954))
-1228 11954 0
c (SATLiteral(1228) -> SATLiteral(11955))
-1228 11955 0
c (SATLiteral(1228) -> SATLiteral(11956))
-1228 11956 0
c (SATLiteral(1228) -> SATLiteral(11957))
-1228 11957 0
c (SATLiteral(1228) -> SATLiteral(11958))
-1228 11958 0
c (SATLiteral(1228) -> SATLiteral(11959))
-1228 11959 0
c (SATLiteral(1228) -> SATLiteral(11960))
-1228 11960 0
c (SATLiteral(1228) -> SATLiteral(11961))
-1228 11961 0
c (SATLiteral(1228) -> SATLiteral(11962))
-1228 11962 0
c (SATLiteral(1229) -> SATLiteral(11963))
-1229 11963 0
c (SATLiteral(1229) -> SATLiteral(11964))
-1229 11964 0
c (SATLiteral(1229) -> SATLiteral(11965))
-1229 11965 0
c (SATLiteral(1229) -> SATLiteral(11966))
-1229 11966 0
c (SATLiteral(1229) -> SATLiteral(11967))
-1229 11967 0
c (SATLiteral(1229) -> SATLiteral(11968))
-1229 11968 0
c (SATLiteral(1229) -> SATLiteral(11969))
-1229 11969 0
c (SATLiteral(1229) -> SATLiteral(11970))
-1229 11970 0
c (SATLiteral(1229) -> SATLiteral(11971))
-1229 11971 0
c (SATLiteral(1230) -> SATLiteral(11972))
-1230 11972 0
c (SATLiteral(1230) -> SATLiteral(11973))
-1230 11973 0
c (SATLiteral(1230) -> SATLiteral(11974))
-1230 11974 0
c (SATLiteral(1230) -> SATLiteral(11975))
-1230 11975 0
c (SATLiteral(1230) -> SATLiteral(11976))
-1230 11976 0
c (SATLiteral(1230) -> SATLiteral(11977))
-1230 11977 0
c (SATLiteral(1230) -> SATLiteral(11978))
-1230 11978 0
c (SATLiteral(1230) -> SATLiteral(11979))
-1230 11979 0
c (SATLiteral(1230) -> SATLiteral(11980))
-1230 11980 0
c (SATLiteral(1231) -> SATLiteral(11981))
-1231 11981 0
c (SATLiteral(1231) -> SATLiteral(11982))
-1231 11982 0
c (SATLiteral(1231) -> SATLiteral(11983))
-1231 11983 0
c (SATLiteral(1231) -> SATLiteral(11984))
-1231 11984 0
c (SATLiteral(1231) -> SATLiteral(11985))
-1231 11985 0
c (SATLiteral(1231) -> SATLiteral(11986))
-1231 11986 0
c (SATLiteral(1231) -> SATLiteral(11987))
-1231 11987 0
c (SATLiteral(1231) -> SATLiteral(11988))
-1231 11988 0
c (SATLiteral(1231) -> SATLiteral(11989))
-1231 11989 0
c (SATLiteral(1232) -> SATLiteral(11990))
-1232 11990 0
c (SATLiteral(1232) -> SATLiteral(11991))
-1232 11991 0
c (SATLiteral(1232) -> SATLiteral(11992))
-1232 11992 0
c (SATLiteral(1232) -> SATLiteral(11993))
-1232 11993 0
c (SATLiteral(1232) -> SATLiteral(11994))
-1232 11994 0
c (SATLiteral(1232) -> SATLiteral(11995))
-1232 11995 0
c (SATLiteral(1232) -> SATLiteral(11996))
-1232 11996 0
c (SATLiteral(1232) -> SATLiteral(11997))
-1232 11997 0
c (SATLiteral(1232) -> SATLiteral(11998))
-1232 11998 0
c (SATLiteral(1233) -> SATLiteral(11999))
-1233 11999 0
c (SATLiteral(1233) -> SATLiteral(12000))
-1233 12000 0
c (SATLiteral(1233) -> SATLiteral(12001))
-1233 12001 0
c (SATLiteral(1233) -> SATLiteral(12002))
-1233 12002 0
c (SATLiteral(1233) -> SATLiteral(12003))
-1233 12003 0
c (SATLiteral(1233) -> SATLiteral(12004))
-1233 12004 0
c (SATLiteral(1233) -> SATLiteral(12005))
-1233 12005 0
c (SATLiteral(1233) -> SATLiteral(12006))
-1233 12006 0
c (SATLiteral(1233) -> SATLiteral(12007))
-1233 12007 0
c (SATLiteral(1234) -> SATLiteral(12008))
-1234 12008 0
c (SATLiteral(1234) -> SATLiteral(12009))
-1234 12009 0
c (SATLiteral(1234) -> SATLiteral(12010))
-1234 12010 0
c (SATLiteral(1234) -> SATLiteral(12011))
-1234 12011 0
c (SATLiteral(1234) -> SATLiteral(12012))
-1234 12012 0
c (SATLiteral(1234) -> SATLiteral(12013))
-1234 12013 0
c (SATLiteral(1234) -> SATLiteral(12014))
-1234 12014 0
c (SATLiteral(1234) -> SATLiteral(12015))
-1234 12015 0
c (SATLiteral(1234) -> SATLiteral(12016))
-1234 12016 0
c (variant_fields_00001_00001_00001<=max_left_00001_00001_00001)
6707 -1272 0
6708 -1273 0
6710 -1275 0
6712 -1277 0
6714 -1279 0
6716 -1281 0
6718 -1283 0
6720 -1285 0
c (variant_fields_00001_00001_00001=max_left_00001_00001_00001)
-6707 1272 0
-6709 1274 0
-6711 1276 0
-6713 1278 0
-6715 1280 0
-6717 1282 0
-6719 1284 0
-6721 1286 0
6720 -1285 0
-1272 6707 0
-1274 6709 0
-1276 6711 0
-1278 6713 0
-1280 6715 0
-1282 6717 0
-1284 6719 0
-1286 6721 0
1285 -6720 0
c (max_left_00001_00001_00001<=max_left_00001_00001_00002)
1272 -1287 0
1273 -1288 0
1275 -1290 0
1277 -1292 0
1279 -1294 0
1281 -1296 0
1283 -1298 0
1285 -1300 0
c (variant_fields_00001_00001_00002<=max_left_00001_00001_00002)
6722 -1287 0
6723 -1288 0
6725 -1290 0
6727 -1292 0
6729 -1294 0
6731 -1296 0
6733 -1298 0
6735 -1300 0
c (SATLiteral(17201) \/ SATLiteral(17202))
17201 17202 0
c (max_left_00001_00001_00002<=max_left_00001_00001_00003)
1287 -1302 0
1288 -1303 0
1290 -1305 0
1292 -1307 0
1294 -1309 0
1296 -1311 0
1298 -1313 0
1300 -1315 0
c (variant_fields_00001_00001_00003<=max_left_00001_00001_00003)
6737 -1302 0
6738 -1303 0
6740 -1305 0
6742 -1307 0
6744 -1309 0
6746 -1311 0
6748 -1313 0
6750 -1315 0
c (SATLiteral(17203) \/ SATLiteral(17204))
17203 17204 0
c (max_left_00001_00001_00003<=max_left_00001_00001_00004)
1302 -1317 0
1303 -1318 0
1305 -1320 0
1307 -1322 0
1309 -1324 0
1311 -1326 0
1313 -1328 0
1315 -1330 0
c (variant_fields_00001_00001_00004<=max_left_00001_00001_00004)
6752 -1317 0
6753 -1318 0
6755 -1320 0
6757 -1322 0
6759 -1324 0
6761 -1326 0
6763 -1328 0
6765 -1330 0
c (SATLiteral(17205) \/ SATLiteral(17206))
17205 17206 0
c (max_left_00001_00001_00004<=max_left_00001_00001_00005)
1317 -1332 0
1318 -1333 0
1320 -1335 0
1322 -1337 0
1324 -1339 0
1326 -1341 0
1328 -1343 0
1330 -1345 0
c (variant_fields_00001_00001_00005<=max_left_00001_00001_00005)
6767 -1332 0
6768 -1333 0
6770 -1335 0
6772 -1337 0
6774 -1339 0
6776 -1341 0
6778 -1343 0
6780 -1345 0
c (SATLiteral(17207) \/ SATLiteral(17208))
17207 17208 0
c (max_left_00001_00001_00005<=max_left_00001_00001_00006)
1332 -1347 0
1333 -1348 0
1335 -1350 0
1337 -1352 0
1339 -1354 0
1341 -1356 0
1343 -1358 0
1345 -1360 0
c (variant_fields_00001_00001_00006<=max_left_00001_00001_00006)
6782 -1347 0
6783 -1348 0
6785 -1350 0
6787 -1352 0
6789 -1354 0
6791 -1356 0
6793 -1358 0
6795 -1360 0
c (SATLiteral(17209) \/ SATLiteral(17210))
17209 17210 0
c (max_left_00001_00001_00006<=max_left_00001_00001_00007)
1347 -1362 0
1348 -1363 0
1350 -1365 0
1352 -1367 0
1354 -1369 0
1356 -1371 0
1358 -1373 0
1360 -1375 0
c (variant_fields_00001_00001_00007<=max_left_00001_00001_00007)
6797 -1362 0
6798 -1363 0
6800 -1365 0
6802 -1367 0
6804 -1369 0
6806 -1371 0
6808 -1373 0
6810 -1375 0
c (SATLiteral(17211) \/ SATLiteral(17212))
17211 17212 0
c (max_left_00001_00001_00007<=max_left_00001_00001_00008)
1362 -1377 0
1363 -1378 0
1365 -1380 0
1367 -1382 0
1369 -1384 0
1371 -1386 0
1373 -1388 0
1375 -1390 0
c (variant_fields_00001_00001_00008<=max_left_00001_00001_00008)
6812 -1377 0
6813 -1378 0
6815 -1380 0
6817 -1382 0
6819 -1384 0
6821 -1386 0
6823 -1388 0
6825 -1390 0
c (SATLiteral(17213) \/ SATLiteral(17214))
17213 17214 0
c (max_left_00001_00001_00008<=max_left_00001_00001_00009)
1377 -1392 0
1378 -1393 0
1380 -1395 0
1382 -1397 0
1384 -1399 0
1386 -1401 0
1388 -1403 0
1390 -1405 0
c (variant_fields_00001_00001_00009<=max_left_00001_00001_00009)
6827 -1392 0
6828 -1393 0
6830 -1395 0
6832 -1397 0
6834 -1399 0
6836 -1401 0
6838 -1403 0
6840 -1405 0
c (SATLiteral(17215) \/ SATLiteral(17216))
17215 17216 0
c (variant_fields_00001_00002_00001<=max_left_00001_00002_00001)
6842 -1408 0
6843 -1409 0
6845 -1411 0
6847 -1413 0
6849 -1415 0
6851 -1417 0
6853 -1419 0
6855 -1421 0
c (variant_fields_00001_00002_00001=max_left_00001_00002_00001)
-6842 1408 0
-6844 1410 0
-6846 1412 0
-6848 1414 0
-6850 1416 0
-6852 1418 0
-6854 1420 0
-6856 1422 0
6855 -1421 0
-1408 6842 0
-1410 6844 0
-1412 6846 0
-1414 6848 0
-1416 6850 0
-1418 6852 0
-1420 6854 0
-1422 6856 0
1421 -6855 0
c (max_left_00001_00002_00001<=max_left_00001_00002_00002)
1408 -1423 0
1409 -1424 0
1411 -1426 0
1413 -1428 0
1415 -1430 0
1417 -1432 0
1419 -1434 0
1421 -1436 0
c (variant_fields_00001_00002_00002<=max_left_00001_00002_00002)
6857 -1423 0
6858 -1424 0
6860 -1426 0
6862 -1428 0
6864 -1430 0
6866 -1432 0
6868 -1434 0
6870 -1436 0
c (SATLiteral(17217) \/ SATLiteral(17218))
17217 17218 0
c (max_left_00001_00002_00002<=max_left_00001_00002_00003)
1423 -1438 0
1424 -1439 0
1426 -1441 0
1428 -1443 0
1430 -1445 0
1432 -1447 0
1434 -1449 0
1436 -1451 0
c (variant_fields_00001_00002_00003<=max_left_00001_00002_00003)
6872 -1438 0
6873 -1439 0
6875 -1441 0
6877 -1443 0
6879 -1445 0
6881 -1447 0
6883 -1449 0
6885 -1451 0
c (SATLiteral(17219) \/ SATLiteral(17220))
17219 17220 0
c (max_left_00001_00002_00003<=max_left_00001_00002_00004)
1438 -1453 0
1439 -1454 0
1441 -1456 0
1443 -1458 0
1445 -1460 0
1447 -1462 0
1449 -1464 0
1451 -1466 0
c (variant_fields_00001_00002_00004<=max_left_00001_00002_00004)
6887 -1453 0
6888 -1454 0
6890 -1456 0
6892 -1458 0
6894 -1460 0
6896 -1462 0
6898 -1464 0
6900 -1466 0
c (SATLiteral(17221) \/ SATLiteral(17222))
17221 17222 0
c (max_left_00001_00002_00004<=max_left_00001_00002_00005)
1453 -1468 0
1454 -1469 0
1456 -1471 0
1458 -1473 0
1460 -1475 0
1462 -1477 0
1464 -1479 0
1466 -1481 0
c (variant_fields_00001_00002_00005<=max_left_00001_00002_00005)
6902 -1468 0
6903 -1469 0
6905 -1471 0
6907 -1473 0
6909 -1475 0
6911 -1477 0
6913 -1479 0
6915 -1481 0
c (SATLiteral(17223) \/ SATLiteral(17224))
17223 17224 0
c (max_left_00001_00002_00005<=max_left_00001_00002_00006)
1468 -1483 0
1469 -1484 0
1471 -1486 0
1473 -1488 0
1475 -1490 0
1477 -1492 0
1479 -1494 0
1481 -1496 0
c (variant_fields_00001_00002_00006<=max_left_00001_00002_00006)
6917 -1483 0
6918 -1484 0
6920 -1486 0
6922 -1488 0
6924 -1490 0
6926 -1492 0
6928 -1494 0
6930 -1496 0
c (SATLiteral(17225) \/ SATLiteral(17226))
17225 17226 0
c (max_left_00001_00002_00006<=max_left_00001_00002_00007)
1483 -1498 0
1484 -1499 0
1486 -1501 0
1488 -1503 0
1490 -1505 0
1492 -1507 0
1494 -1509 0
1496 -1511 0
c (variant_fields_00001_00002_00007<=max_left_00001_00002_00007)
6932 -1498 0
6933 -1499 0
6935 -1501 0
6937 -1503 0
6939 -1505 0
6941 -1507 0
6943 -1509 0
6945 -1511 0
c (SATLiteral(17227) \/ SATLiteral(17228))
17227 17228 0
c (max_left_00001_00002_00007<=max_left_00001_00002_00008)
1498 -1513 0
1499 -1514 0
1501 -1516 0
1503 -1518 0
1505 -1520 0
1507 -1522 0
1509 -1524 0
1511 -1526 0
c (variant_fields_00001_00002_00008<=max_left_00001_00002_00008)
6947 -1513 0
6948 -1514 0
6950 -1516 0
6952 -1518 0
6954 -1520 0
6956 -1522 0
6958 -1524 0
6960 -1526 0
c (SATLiteral(17229) \/ SATLiteral(17230))
17229 17230 0
c (max_left_00001_00002_00008<=max_left_00001_00002_00009)
1513 -1528 0
1514 -1529 0
1516 -1531 0
1518 -1533 0
1520 -1535 0
1522 -1537 0
1524 -1539 0
1526 -1541 0
c (variant_fields_00001_00002_00009<=max_left_00001_00002_00009)
6962 -1528 0
6963 -1529 0
6965 -1531 0
6967 -1533 0
6969 -1535 0
6971 -1537 0
6973 -1539 0
6975 -1541 0
c (SATLiteral(17231) \/ SATLiteral(17232))
17231 17232 0
c (variant_fields_00001_00003_00001<=max_left_00001_00003_00001)
6977 -1544 0
6978 -1545 0
6980 -1547 0
6982 -1549 0
6984 -1551 0
6986 -1553 0
6988 -1555 0
6990 -1557 0
c (variant_fields_00001_00003_00001=max_left_00001_00003_00001)
-6977 1544 0
-6979 1546 0
-6981 1548 0
-6983 1550 0
-6985 1552 0
-6987 1554 0
-6989 1556 0
-6991 1558 0
6990 -1557 0
-1544 6977 0
-1546 6979 0
-1548 6981 0
-1550 6983 0
-1552 6985 0
-1554 6987 0
-1556 6989 0
-1558 6991 0
1557 -6990 0
c (max_left_00001_00003_00001<=max_left_00001_00003_00002)
1544 -1559 0
1545 -1560 0
1547 -1562 0
1549 -1564 0
1551 -1566 0
1553 -1568 0
1555 -1570 0
1557 -1572 0
c (variant_fields_00001_00003_00002<=max_left_00001_00003_00002)
6992 -1559 0
6993 -1560 0
6995 -1562 0
6997 -1564 0
6999 -1566 0
7001 -1568 0
7003 -1570 0
7005 -1572 0
c (SATLiteral(17233) \/ SATLiteral(17234))
17233 17234 0
c (max_left_00001_00003_00002<=max_left_00001_00003_00003)
1559 -1574 0
1560 -1575 0
1562 -1577 0
1564 -1579 0
1566 -1581 0
1568 -1583 0
1570 -1585 0
1572 -1587 0
c (variant_fields_00001_00003_00003<=max_left_00001_00003_00003)
7007 -1574 0
7008 -1575 0
7010 -1577 0
7012 -1579 0
7014 -1581 0
7016 -1583 0
7018 -1585 0
7020 -1587 0
c (SATLiteral(17235) \/ SATLiteral(17236))
17235 17236 0
c (max_left_00001_00003_00003<=max_left_00001_00003_00004)
1574 -1589 0
1575 -1590 0
1577 -1592 0
1579 -1594 0
1581 -1596 0
1583 -1598 0
1585 -1600 0
1587 -1602 0
c (variant_fields_00001_00003_00004<=max_left_00001_00003_00004)
7022 -1589 0
7023 -1590 0
7025 -1592 0
7027 -1594 0
7029 -1596 0
7031 -1598 0
7033 -1600 0
7035 -1602 0
c (SATLiteral(17237) \/ SATLiteral(17238))
17237 17238 0
c (max_left_00001_00003_00004<=max_left_00001_00003_00005)
1589 -1604 0
1590 -1605 0
1592 -1607 0
1594 -1609 0
1596 -1611 0
1598 -1613 0
1600 -1615 0
1602 -1617 0
c (variant_fields_00001_00003_00005<=max_left_00001_00003_00005)
7037 -1604 0
7038 -1605 0
7040 -1607 0
7042 -1609 0
7044 -1611 0
7046 -1613 0
7048 -1615 0
7050 -1617 0
c (SATLiteral(17239) \/ SATLiteral(17240))
17239 17240 0
c (max_left_00001_00003_00005<=max_left_00001_00003_00006)
1604 -1619 0
1605 -1620 0
1607 -1622 0
1609 -1624 0
1611 -1626 0
1613 -1628 0
1615 -1630 0
1617 -1632 0
c (variant_fields_00001_00003_00006<=max_left_00001_00003_00006)
7052 -1619 0
7053 -1620 0
7055 -1622 0
7057 -1624 0
7059 -1626 0
7061 -1628 0
7063 -1630 0
7065 -1632 0
c (SATLiteral(17241) \/ SATLiteral(17242))
17241 17242 0
c (max_left_00001_00003_00006<=max_left_00001_00003_00007)
1619 -1634 0
1620 -1635 0
1622 -1637 0
1624 -1639 0
1626 -1641 0
1628 -1643 0
1630 -1645 0
1632 -1647 0
c (variant_fields_00001_00003_00007<=max_left_00001_00003_00007)
7067 -1634 0
7068 -1635 0
7070 -1637 0
7072 -1639 0
7074 -1641 0
7076 -1643 0
7078 -1645 0
7080 -1647 0
c (SATLiteral(17243) \/ SATLiteral(17244))
17243 17244 0
c (max_left_00001_00003_00007<=max_left_00001_00003_00008)
1634 -1649 0
1635 -1650 0
1637 -1652 0
1639 -1654 0
1641 -1656 0
1643 -1658 0
1645 -1660 0
1647 -1662 0
c (variant_fields_00001_00003_00008<=max_left_00001_00003_00008)
7082 -1649 0
7083 -1650 0
7085 -1652 0
7087 -1654 0
7089 -1656 0
7091 -1658 0
7093 -1660 0
7095 -1662 0
c (SATLiteral(17245) \/ SATLiteral(17246))
17245 17246 0
c (max_left_00001_00003_00008<=max_left_00001_00003_00009)
1649 -1664 0
1650 -1665 0
1652 -1667 0
1654 -1669 0
1656 -1671 0
1658 -1673 0
1660 -1675 0
1662 -1677 0
c (variant_fields_00001_00003_00009<=max_left_00001_00003_00009)
7097 -1664 0
7098 -1665 0
7100 -1667 0
7102 -1669 0
7104 -1671 0
7106 -1673 0
7108 -1675 0
7110 -1677 0
c (SATLiteral(17247) \/ SATLiteral(17248))
17247 17248 0
c (variant_fields_00001_00004_00001<=max_left_00001_00004_00001)
7112 -1680 0
7113 -1681 0
7115 -1683 0
7117 -1685 0
7119 -1687 0
7121 -1689 0
7123 -1691 0
7125 -1693 0
c (variant_fields_00001_00004_00001=max_left_00001_00004_00001)
-7112 1680 0
-7114 1682 0
-7116 1684 0
-7118 1686 0
-7120 1688 0
-7122 1690 0
-7124 1692 0
-7126 1694 0
7125 -1693 0
-1680 7112 0
-1682 7114 0
-1684 7116 0
-1686 7118 0
-1688 7120 0
-1690 7122 0
-1692 7124 0
-1694 7126 0
1693 -7125 0
c (max_left_00001_00004_00001<=max_left_00001_00004_00002)
1680 -1695 0
1681 -1696 0
1683 -1698 0
1685 -1700 0
1687 -1702 0
1689 -1704 0
1691 -1706 0
1693 -1708 0
c (variant_fields_00001_00004_00002<=max_left_00001_00004_00002)
7127 -1695 0
7128 -1696 0
7130 -1698 0
7132 -1700 0
7134 -1702 0
7136 -1704 0
7138 -1706 0
7140 -1708 0
c (SATLiteral(17249) \/ SATLiteral(17250))
17249 17250 0
c (max_left_00001_00004_00002<=max_left_00001_00004_00003)
1695 -1710 0
1696 -1711 0
1698 -1713 0
1700 -1715 0
1702 -1717 0
1704 -1719 0
1706 -1721 0
1708 -1723 0
c (variant_fields_00001_00004_00003<=max_left_00001_00004_00003)
7142 -1710 0
7143 -1711 0
7145 -1713 0
7147 -1715 0
7149 -1717 0
7151 -1719 0
7153 -1721 0
7155 -1723 0
c (SATLiteral(17251) \/ SATLiteral(17252))
17251 17252 0
c (max_left_00001_00004_00003<=max_left_00001_00004_00004)
1710 -1725 0
1711 -1726 0
1713 -1728 0
1715 -1730 0
1717 -1732 0
1719 -1734 0
1721 -1736 0
1723 -1738 0
c (variant_fields_00001_00004_00004<=max_left_00001_00004_00004)
7157 -1725 0
7158 -1726 0
7160 -1728 0
7162 -1730 0
7164 -1732 0
7166 -1734 0
7168 -1736 0
7170 -1738 0
c (SATLiteral(17253) \/ SATLiteral(17254))
17253 17254 0
c (max_left_00001_00004_00004<=max_left_00001_00004_00005)
1725 -1740 0
1726 -1741 0
1728 -1743 0
1730 -1745 0
1732 -1747 0
1734 -1749 0
1736 -1751 0
1738 -1753 0
c (variant_fields_00001_00004_00005<=max_left_00001_00004_00005)
7172 -1740 0
7173 -1741 0
7175 -1743 0
7177 -1745 0
7179 -1747 0
7181 -1749 0
7183 -1751 0
7185 -1753 0
c (SATLiteral(17255) \/ SATLiteral(17256))
17255 17256 0
c (max_left_00001_00004_00005<=max_left_00001_00004_00006)
1740 -1755 0
1741 -1756 0
1743 -1758 0
1745 -1760 0
1747 -1762 0
1749 -1764 0
1751 -1766 0
1753 -1768 0
c (variant_fields_00001_00004_00006<=max_left_00001_00004_00006)
7187 -1755 0
7188 -1756 0
7190 -1758 0
7192 -1760 0
7194 -1762 0
7196 -1764 0
7198 -1766 0
7200 -1768 0
c (SATLiteral(17257) \/ SATLiteral(17258))
17257 17258 0
c (max_left_00001_00004_00006<=max_left_00001_00004_00007)
1755 -1770 0
1756 -1771 0
1758 -1773 0
1760 -1775 0
1762 -1777 0
1764 -1779 0
1766 -1781 0
1768 -1783 0
c (variant_fields_00001_00004_00007<=max_left_00001_00004_00007)
7202 -1770 0
7203 -1771 0
7205 -1773 0
7207 -1775 0
7209 -1777 0
7211 -1779 0
7213 -1781 0
7215 -1783 0
c (SATLiteral(17259) \/ SATLiteral(17260))
17259 17260 0
c (max_left_00001_00004_00007<=max_left_00001_00004_00008)
1770 -1785 0
1771 -1786 0
1773 -1788 0
1775 -1790 0
1777 -1792 0
1779 -1794 0
1781 -1796 0
1783 -1798 0
c (variant_fields_00001_00004_00008<=max_left_00001_00004_00008)
7217 -1785 0
7218 -1786 0
7220 -1788 0
7222 -1790 0
7224 -1792 0
7226 -1794 0
7228 -1796 0
7230 -1798 0
c (SATLiteral(17261) \/ SATLiteral(17262))
17261 17262 0
c (max_left_00001_00004_00008<=max_left_00001_00004_00009)
1785 -1800 0
1786 -1801 0
1788 -1803 0
1790 -1805 0
1792 -1807 0
1794 -1809 0
1796 -1811 0
1798 -1813 0
c (variant_fields_00001_00004_00009<=max_left_00001_00004_00009)
7232 -1800 0
7233 -1801 0
7235 -1803 0
7237 -1805 0
7239 -1807 0
7241 -1809 0
7243 -1811 0
7245 -1813 0
c (SATLiteral(17263) \/ SATLiteral(17264))
17263 17264 0
c (variant_fields_00001_00005_00001<=max_left_00001_00005_00001)
7247 -1816 0
7248 -1817 0
7250 -1819 0
7252 -1821 0
7254 -1823 0
7256 -1825 0
7258 -1827 0
7260 -1829 0
c (variant_fields_00001_00005_00001=max_left_00001_00005_00001)
-7247 1816 0
-7249 1818 0
-7251 1820 0
-7253 1822 0
-7255 1824 0
-7257 1826 0
-7259 1828 0
-7261 1830 0
7260 -1829 0
-1816 7247 0
-1818 7249 0
-1820 7251 0
-1822 7253 0
-1824 7255 0
-1826 7257 0
-1828 7259 0
-1830 7261 0
1829 -7260 0
c (max_left_00001_00005_00001<=max_left_00001_00005_00002)
1816 -1831 0
1817 -1832 0
1819 -1834 0
1821 -1836 0
1823 -1838 0
1825 -1840 0
1827 -1842 0
1829 -1844 0
c (variant_fields_00001_00005_00002<=max_left_00001_00005_00002)
7262 -1831 0
7263 -1832 0
7265 -1834 0
7267 -1836 0
7269 -1838 0
7271 -1840 0
7273 -1842 0
7275 -1844 0
c (SATLiteral(17265) \/ SATLiteral(17266))
17265 17266 0
c (max_left_00001_00005_00002<=max_left_00001_00005_00003)
1831 -1846 0
1832 -1847 0
1834 -1849 0
1836 -1851 0
1838 -1853 0
1840 -1855 0
1842 -1857 0
1844 -1859 0
c (variant_fields_00001_00005_00003<=max_left_00001_00005_00003)
7277 -1846 0
7278 -1847 0
7280 -1849 0
7282 -1851 0
7284 -1853 0
7286 -1855 0
7288 -1857 0
7290 -1859 0
c (SATLiteral(17267) \/ SATLiteral(17268))
17267 17268 0
c (max_left_00001_00005_00003<=max_left_00001_00005_00004)
1846 -1861 0
1847 -1862 0
1849 -1864 0
1851 -1866 0
1853 -1868 0
1855 -1870 0
1857 -1872 0
1859 -1874 0
c (variant_fields_00001_00005_00004<=max_left_00001_00005_00004)
7292 -1861 0
7293 -1862 0
7295 -1864 0
7297 -1866 0
7299 -1868 0
7301 -1870 0
7303 -1872 0
7305 -1874 0
c (SATLiteral(17269) \/ SATLiteral(17270))
17269 17270 0
c (max_left_00001_00005_00004<=max_left_00001_00005_00005)
1861 -1876 0
1862 -1877 0
1864 -1879 0
1866 -1881 0
1868 -1883 0
1870 -1885 0
1872 -1887 0
1874 -1889 0
c (variant_fields_00001_00005_00005<=max_left_00001_00005_00005)
7307 -1876 0
7308 -1877 0
7310 -1879 0
7312 -1881 0
7314 -1883 0
7316 -1885 0
7318 -1887 0
7320 -1889 0
c (SATLiteral(17271) \/ SATLiteral(17272))
17271 17272 0
c (max_left_00001_00005_00005<=max_left_00001_00005_00006)
1876 -1891 0
1877 -1892 0
1879 -1894 0
1881 -1896 0
1883 -1898 0
1885 -1900 0
1887 -1902 0
1889 -1904 0
c (variant_fields_00001_00005_00006<=max_left_00001_00005_00006)
7322 -1891 0
7323 -1892 0
7325 -1894 0
7327 -1896 0
7329 -1898 0
7331 -1900 0
7333 -1902 0
7335 -1904 0
c (SATLiteral(17273) \/ SATLiteral(17274))
17273 17274 0
c (max_left_00001_00005_00006<=max_left_00001_00005_00007)
1891 -1906 0
1892 -1907 0
1894 -1909 0
1896 -1911 0
1898 -1913 0
1900 -1915 0
1902 -1917 0
1904 -1919 0
c (variant_fields_00001_00005_00007<=max_left_00001_00005_00007)
7337 -1906 0
7338 -1907 0
7340 -1909 0
7342 -1911 0
7344 -1913 0
7346 -1915 0
7348 -1917 0
7350 -1919 0
c (SATLiteral(17275) \/ SATLiteral(17276))
17275 17276 0
c (max_left_00001_00005_00007<=max_left_00001_00005_00008)
1906 -1921 0
1907 -1922 0
1909 -1924 0
1911 -1926 0
1913 -1928 0
1915 -1930 0
1917 -1932 0
1919 -1934 0
c (variant_fields_00001_00005_00008<=max_left_00001_00005_00008)
7352 -1921 0
7353 -1922 0
7355 -1924 0
7357 -1926 0
7359 -1928 0
7361 -1930 0
7363 -1932 0
7365 -1934 0
c (SATLiteral(17277) \/ SATLiteral(17278))
17277 17278 0
c (max_left_00001_00005_00008<=max_left_00001_00005_00009)
1921 -1936 0
1922 -1937 0
1924 -1939 0
1926 -1941 0
1928 -1943 0
1930 -1945 0
1932 -1947 0
1934 -1949 0
c (variant_fields_00001_00005_00009<=max_left_00001_00005_00009)
7367 -1936 0
7368 -1937 0
7370 -1939 0
7372 -1941 0
7374 -1943 0
7376 -1945 0
7378 -1947 0
7380 -1949 0
c (SATLiteral(17279) \/ SATLiteral(17280))
17279 17280 0
c (variant_fields_00001_00006_00001<=max_left_00001_00006_00001)
7382 -1952 0
7383 -1953 0
7385 -1955 0
7387 -1957 0
7389 -1959 0
7391 -1961 0
7393 -1963 0
7395 -1965 0
c (variant_fields_00001_00006_00001=max_left_00001_00006_00001)
-7382 1952 0
-7384 1954 0
-7386 1956 0
-7388 1958 0
-7390 1960 0
-7392 1962 0
-7394 1964 0
-7396 1966 0
7395 -1965 0
-1952 7382 0
-1954 7384 0
-1956 7386 0
-1958 7388 0
-1960 7390 0
-1962 7392 0
-1964 7394 0
-1966 7396 0
1965 -7395 0
c (max_left_00001_00006_00001<=max_left_00001_00006_00002)
1952 -1967 0
1953 -1968 0
1955 -1970 0
1957 -1972 0
1959 -1974 0
1961 -1976 0
1963 -1978 0
1965 -1980 0
c (variant_fields_00001_00006_00002<=max_left_00001_00006_00002)
7397 -1967 0
7398 -1968 0
7400 -1970 0
7402 -1972 0
7404 -1974 0
7406 -1976 0
7408 -1978 0
7410 -1980 0
c (SATLiteral(17281) \/ SATLiteral(17282))
17281 17282 0
c (max_left_00001_00006_00002<=max_left_00001_00006_00003)
1967 -1982 0
1968 -1983 0
1970 -1985 0
1972 -1987 0
1974 -1989 0
1976 -1991 0
1978 -1993 0
1980 -1995 0
c (variant_fields_00001_00006_00003<=max_left_00001_00006_00003)
7412 -1982 0
7413 -1983 0
7415 -1985 0
7417 -1987 0
7419 -1989 0
7421 -1991 0
7423 -1993 0
7425 -1995 0
c (SATLiteral(17283) \/ SATLiteral(17284))
17283 17284 0
c (max_left_00001_00006_00003<=max_left_00001_00006_00004)
1982 -1997 0
1983 -1998 0
1985 -2000 0
1987 -2002 0
1989 -2004 0
1991 -2006 0
1993 -2008 0
1995 -2010 0
c (variant_fields_00001_00006_00004<=max_left_00001_00006_00004)
7427 -1997 0
7428 -1998 0
7430 -2000 0
7432 -2002 0
7434 -2004 0
7436 -2006 0
7438 -2008 0
7440 -2010 0
c (SATLiteral(17285) \/ SATLiteral(17286))
17285 17286 0
c (max_left_00001_00006_00004<=max_left_00001_00006_00005)
1997 -2012 0
1998 -2013 0
2000 -2015 0
2002 -2017 0
2004 -2019 0
2006 -2021 0
2008 -2023 0
2010 -2025 0
c (variant_fields_00001_00006_00005<=max_left_00001_00006_00005)
7442 -2012 0
7443 -2013 0
7445 -2015 0
7447 -2017 0
7449 -2019 0
7451 -2021 0
7453 -2023 0
7455 -2025 0
c (SATLiteral(17287) \/ SATLiteral(17288))
17287 17288 0
c (max_left_00001_00006_00005<=max_left_00001_00006_00006)
2012 -2027 0
2013 -2028 0
2015 -2030 0
2017 -2032 0
2019 -2034 0
2021 -2036 0
2023 -2038 0
2025 -2040 0
c (variant_fields_00001_00006_00006<=max_left_00001_00006_00006)
7457 -2027 0
7458 -2028 0
7460 -2030 0
7462 -2032 0
7464 -2034 0
7466 -2036 0
7468 -2038 0
7470 -2040 0
c (SATLiteral(17289) \/ SATLiteral(17290))
17289 17290 0
c (max_left_00001_00006_00006<=max_left_00001_00006_00007)
2027 -2042 0
2028 -2043 0
2030 -2045 0
2032 -2047 0
2034 -2049 0
2036 -2051 0
2038 -2053 0
2040 -2055 0
c (variant_fields_00001_00006_00007<=max_left_00001_00006_00007)
7472 -2042 0
7473 -2043 0
7475 -2045 0
7477 -2047 0
7479 -2049 0
7481 -2051 0
7483 -2053 0
7485 -2055 0
c (SATLiteral(17291) \/ SATLiteral(17292))
17291 17292 0
c (max_left_00001_00006_00007<=max_left_00001_00006_00008)
2042 -2057 0
2043 -2058 0
2045 -2060 0
2047 -2062 0
2049 -2064 0
2051 -2066 0
2053 -2068 0
2055 -2070 0
c (variant_fields_00001_00006_00008<=max_left_00001_00006_00008)
7487 -2057 0
7488 -2058 0
7490 -2060 0
7492 -2062 0
7494 -2064 0
7496 -2066 0
7498 -2068 0
7500 -2070 0
c (SATLiteral(17293) \/ SATLiteral(17294))
17293 17294 0
c (max_left_00001_00006_00008<=max_left_00001_00006_00009)
2057 -2072 0
2058 -2073 0
2060 -2075 0
2062 -2077 0
2064 -2079 0
2066 -2081 0
2068 -2083 0
2070 -2085 0
c (variant_fields_00001_00006_00009<=max_left_00001_00006_00009)
7502 -2072 0
7503 -2073 0
7505 -2075 0
7507 -2077 0
7509 -2079 0
7511 -2081 0
7513 -2083 0
7515 -2085 0
c (SATLiteral(17295) \/ SATLiteral(17296))
17295 17296 0
c (variant_fields_00001_00007_00001<=max_left_00001_00007_00001)
7517 -2088 0
7518 -2089 0
7520 -2091 0
7522 -2093 0
7524 -2095 0
7526 -2097 0
7528 -2099 0
7530 -2101 0
c (variant_fields_00001_00007_00001=max_left_00001_00007_00001)
-7517 2088 0
-7519 2090 0
-7521 2092 0
-7523 2094 0
-7525 2096 0
-7527 2098 0
-7529 2100 0
-7531 2102 0
7530 -2101 0
-2088 7517 0
-2090 7519 0
-2092 7521 0
-2094 7523 0
-2096 7525 0
-2098 7527 0
-2100 7529 0
-2102 7531 0
2101 -7530 0
c (max_left_00001_00007_00001<=max_left_00001_00007_00002)
2088 -2103 0
2089 -2104 0
2091 -2106 0
2093 -2108 0
2095 -2110 0
2097 -2112 0
2099 -2114 0
2101 -2116 0
c (variant_fields_00001_00007_00002<=max_left_00001_00007_00002)
7532 -2103 0
7533 -2104 0
7535 -2106 0
7537 -2108 0
7539 -2110 0
7541 -2112 0
7543 -2114 0
7545 -2116 0
c (SATLiteral(17297) \/ SATLiteral(17298))
17297 17298 0
c (max_left_00001_00007_00002<=max_left_00001_00007_00003)
2103 -2118 0
2104 -2119 0
2106 -2121 0
2108 -2123 0
2110 -2125 0
2112 -2127 0
2114 -2129 0
2116 -2131 0
c (variant_fields_00001_00007_00003<=max_left_00001_00007_00003)
7547 -2118 0
7548 -2119 0
7550 -2121 0
7552 -2123 0
7554 -2125 0
7556 -2127 0
7558 -2129 0
7560 -2131 0
c (SATLiteral(17299) \/ SATLiteral(17300))
17299 17300 0
c (max_left_00001_00007_00003<=max_left_00001_00007_00004)
2118 -2133 0
2119 -2134 0
2121 -2136 0
2123 -2138 0
2125 -2140 0
2127 -2142 0
2129 -2144 0
2131 -2146 0
c (variant_fields_00001_00007_00004<=max_left_00001_00007_00004)
7562 -2133 0
7563 -2134 0
7565 -2136 0
7567 -2138 0
7569 -2140 0
7571 -2142 0
7573 -2144 0
7575 -2146 0
c (SATLiteral(17301) \/ SATLiteral(17302))
17301 17302 0
c (max_left_00001_00007_00004<=max_left_00001_00007_00005)
2133 -2148 0
2134 -2149 0
2136 -2151 0
2138 -2153 0
2140 -2155 0
2142 -2157 0
2144 -2159 0
2146 -2161 0
c (variant_fields_00001_00007_00005<=max_left_00001_00007_00005)
7577 -2148 0
7578 -2149 0
7580 -2151 0
7582 -2153 0
7584 -2155 0
7586 -2157 0
7588 -2159 0
7590 -2161 0
c (SATLiteral(17303) \/ SATLiteral(17304))
17303 17304 0
c (max_left_00001_00007_00005<=max_left_00001_00007_00006)
2148 -2163 0
2149 -2164 0
2151 -2166 0
2153 -2168 0
2155 -2170 0
2157 -2172 0
2159 -2174 0
2161 -2176 0
c (variant_fields_00001_00007_00006<=max_left_00001_00007_00006)
7592 -2163 0
7593 -2164 0
7595 -2166 0
7597 -2168 0
7599 -2170 0
7601 -2172 0
7603 -2174 0
7605 -2176 0
c (SATLiteral(17305) \/ SATLiteral(17306))
17305 17306 0
c (max_left_00001_00007_00006<=max_left_00001_00007_00007)
2163 -2178 0
2164 -2179 0
2166 -2181 0
2168 -2183 0
2170 -2185 0
2172 -2187 0
2174 -2189 0
2176 -2191 0
c (variant_fields_00001_00007_00007<=max_left_00001_00007_00007)
7607 -2178 0
7608 -2179 0
7610 -2181 0
7612 -2183 0
7614 -2185 0
7616 -2187 0
7618 -2189 0
7620 -2191 0
c (SATLiteral(17307) \/ SATLiteral(17308))
17307 17308 0
c (max_left_00001_00007_00007<=max_left_00001_00007_00008)
2178 -2193 0
2179 -2194 0
2181 -2196 0
2183 -2198 0
2185 -2200 0
2187 -2202 0
2189 -2204 0
2191 -2206 0
c (variant_fields_00001_00007_00008<=max_left_00001_00007_00008)
7622 -2193 0
7623 -2194 0
7625 -2196 0
7627 -2198 0
7629 -2200 0
7631 -2202 0
7633 -2204 0
7635 -2206 0
c (SATLiteral(17309) \/ SATLiteral(17310))
17309 17310 0
c (max_left_00001_00007_00008<=max_left_00001_00007_00009)
2193 -2208 0
2194 -2209 0
2196 -2211 0
2198 -2213 0
2200 -2215 0
2202 -2217 0
2204 -2219 0
2206 -2221 0
c (variant_fields_00001_00007_00009<=max_left_00001_00007_00009)
7637 -2208 0
7638 -2209 0
7640 -2211 0
7642 -2213 0
7644 -2215 0
7646 -2217 0
7648 -2219 0
7650 -2221 0
c (SATLiteral(17311) \/ SATLiteral(17312))
17311 17312 0
c (variant_fields_00001_00008_00001<=max_left_00001_00008_00001)
7652 -2224 0
7653 -2225 0
7655 -2227 0
7657 -2229 0
7659 -2231 0
7661 -2233 0
7663 -2235 0
7665 -2237 0
c (variant_fields_00001_00008_00001=max_left_00001_00008_00001)
-7652 2224 0
-7654 2226 0
-7656 2228 0
-7658 2230 0
-7660 2232 0
-7662 2234 0
-7664 2236 0
-7666 2238 0
7665 -2237 0
-2224 7652 0
-2226 7654 0
-2228 7656 0
-2230 7658 0
-2232 7660 0
-2234 7662 0
-2236 7664 0
-2238 7666 0
2237 -7665 0
c (max_left_00001_00008_00001<=max_left_00001_00008_00002)
2224 -2239 0
2225 -2240 0
2227 -2242 0
2229 -2244 0
2231 -2246 0
2233 -2248 0
2235 -2250 0
2237 -2252 0
c (variant_fields_00001_00008_00002<=max_left_00001_00008_00002)
7667 -2239 0
7668 -2240 0
7670 -2242 0
7672 -2244 0
7674 -2246 0
7676 -2248 0
7678 -2250 0
7680 -2252 0
c (SATLiteral(17313) \/ SATLiteral(17314))
17313 17314 0
c (max_left_00001_00008_00002<=max_left_00001_00008_00003)
2239 -2254 0
2240 -2255 0
2242 -2257 0
2244 -2259 0
2246 -2261 0
2248 -2263 0
2250 -2265 0
2252 -2267 0
c (variant_fields_00001_00008_00003<=max_left_00001_00008_00003)
7682 -2254 0
7683 -2255 0
7685 -2257 0
7687 -2259 0
7689 -2261 0
7691 -2263 0
7693 -2265 0
7695 -2267 0
c (SATLiteral(17315) \/ SATLiteral(17316))
17315 17316 0
c (max_left_00001_00008_00003<=max_left_00001_00008_00004)
2254 -2269 0
2255 -2270 0
2257 -2272 0
2259 -2274 0
2261 -2276 0
2263 -2278 0
2265 -2280 0
2267 -2282 0
c (variant_fields_00001_00008_00004<=max_left_00001_00008_00004)
7697 -2269 0
7698 -2270 0
7700 -2272 0
7702 -2274 0
7704 -2276 0
7706 -2278 0
7708 -2280 0
7710 -2282 0
c (SATLiteral(17317) \/ SATLiteral(17318))
17317 17318 0
c (max_left_00001_00008_00004<=max_left_00001_00008_00005)
2269 -2284 0
2270 -2285 0
2272 -2287 0
2274 -2289 0
2276 -2291 0
2278 -2293 0
2280 -2295 0
2282 -2297 0
c (variant_fields_00001_00008_00005<=max_left_00001_00008_00005)
7712 -2284 0
7713 -2285 0
7715 -2287 0
7717 -2289 0
7719 -2291 0
7721 -2293 0
7723 -2295 0
7725 -2297 0
c (SATLiteral(17319) \/ SATLiteral(17320))
17319 17320 0
c (max_left_00001_00008_00005<=max_left_00001_00008_00006)
2284 -2299 0
2285 -2300 0
2287 -2302 0
2289 -2304 0
2291 -2306 0
2293 -2308 0
2295 -2310 0
2297 -2312 0
c (variant_fields_00001_00008_00006<=max_left_00001_00008_00006)
7727 -2299 0
7728 -2300 0
7730 -2302 0
7732 -2304 0
7734 -2306 0
7736 -2308 0
7738 -2310 0
7740 -2312 0
c (SATLiteral(17321) \/ SATLiteral(17322))
17321 17322 0
c (max_left_00001_00008_00006<=max_left_00001_00008_00007)
2299 -2314 0
2300 -2315 0
2302 -2317 0
2304 -2319 0
2306 -2321 0
2308 -2323 0
2310 -2325 0
2312 -2327 0
c (variant_fields_00001_00008_00007<=max_left_00001_00008_00007)
7742 -2314 0
7743 -2315 0
7745 -2317 0
7747 -2319 0
7749 -2321 0
7751 -2323 0
7753 -2325 0
7755 -2327 0
c (SATLiteral(17323) \/ SATLiteral(17324))
17323 17324 0
c (max_left_00001_00008_00007<=max_left_00001_00008_00008)
2314 -2329 0
2315 -2330 0
2317 -2332 0
2319 -2334 0
2321 -2336 0
2323 -2338 0
2325 -2340 0
2327 -2342 0
c (variant_fields_00001_00008_00008<=max_left_00001_00008_00008)
7757 -2329 0
7758 -2330 0
7760 -2332 0
7762 -2334 0
7764 -2336 0
7766 -2338 0
7768 -2340 0
7770 -2342 0
c (SATLiteral(17325) \/ SATLiteral(17326))
17325 17326 0
c (max_left_00001_00008_00008<=max_left_00001_00008_00009)
2329 -2344 0
2330 -2345 0
2332 -2347 0
2334 -2349 0
2336 -2351 0
2338 -2353 0
2340 -2355 0
2342 -2357 0
c (variant_fields_00001_00008_00009<=max_left_00001_00008_00009)
7772 -2344 0
7773 -2345 0
7775 -2347 0
7777 -2349 0
7779 -2351 0
7781 -2353 0
7783 -2355 0
7785 -2357 0
c (SATLiteral(17327) \/ SATLiteral(17328))
17327 17328 0
c (variant_fields_00001_00009_00001<=max_left_00001_00009_00001)
7787 -2360 0
7788 -2361 0
7790 -2363 0
7792 -2365 0
7794 -2367 0
7796 -2369 0
7798 -2371 0
7800 -2373 0
c (variant_fields_00001_00009_00001=max_left_00001_00009_00001)
-7787 2360 0
-7789 2362 0
-7791 2364 0
-7793 2366 0
-7795 2368 0
-7797 2370 0
-7799 2372 0
-7801 2374 0
7800 -2373 0
-2360 7787 0
-2362 7789 0
-2364 7791 0
-2366 7793 0
-2368 7795 0
-2370 7797 0
-2372 7799 0
-2374 7801 0
2373 -7800 0
c (max_left_00001_00009_00001<=max_left_00001_00009_00002)
2360 -2375 0
2361 -2376 0
2363 -2378 0
2365 -2380 0
2367 -2382 0
2369 -2384 0
2371 -2386 0
2373 -2388 0
c (variant_fields_00001_00009_00002<=max_left_00001_00009_00002)
7802 -2375 0
7803 -2376 0
7805 -2378 0
7807 -2380 0
7809 -2382 0
7811 -2384 0
7813 -2386 0
7815 -2388 0
c (SATLiteral(17329) \/ SATLiteral(17330))
17329 17330 0
c (max_left_00001_00009_00002<=max_left_00001_00009_00003)
2375 -2390 0
2376 -2391 0
2378 -2393 0
2380 -2395 0
2382 -2397 0
2384 -2399 0
2386 -2401 0
2388 -2403 0
c (variant_fields_00001_00009_00003<=max_left_00001_00009_00003)
7817 -2390 0
7818 -2391 0
7820 -2393 0
7822 -2395 0
7824 -2397 0
7826 -2399 0
7828 -2401 0
7830 -2403 0
c (SATLiteral(17331) \/ SATLiteral(17332))
17331 17332 0
c (max_left_00001_00009_00003<=max_left_00001_00009_00004)
2390 -2405 0
2391 -2406 0
2393 -2408 0
2395 -2410 0
2397 -2412 0
2399 -2414 0
2401 -2416 0
2403 -2418 0
c (variant_fields_00001_00009_00004<=max_left_00001_00009_00004)
7832 -2405 0
7833 -2406 0
7835 -2408 0
7837 -2410 0
7839 -2412 0
7841 -2414 0
7843 -2416 0
7845 -2418 0
c (SATLiteral(17333) \/ SATLiteral(17334))
17333 17334 0
c (max_left_00001_00009_00004<=max_left_00001_00009_00005)
2405 -2420 0
2406 -2421 0
2408 -2423 0
2410 -2425 0
2412 -2427 0
2414 -2429 0
2416 -2431 0
2418 -2433 0
c (variant_fields_00001_00009_00005<=max_left_00001_00009_00005)
7847 -2420 0
7848 -2421 0
7850 -2423 0
7852 -2425 0
7854 -2427 0
7856 -2429 0
7858 -2431 0
7860 -2433 0
c (SATLiteral(17335) \/ SATLiteral(17336))
17335 17336 0
c (max_left_00001_00009_00005<=max_left_00001_00009_00006)
2420 -2435 0
2421 -2436 0
2423 -2438 0
2425 -2440 0
2427 -2442 0
2429 -2444 0
2431 -2446 0
2433 -2448 0
c (variant_fields_00001_00009_00006<=max_left_00001_00009_00006)
7862 -2435 0
7863 -2436 0
7865 -2438 0
7867 -2440 0
7869 -2442 0
7871 -2444 0
7873 -2446 0
7875 -2448 0
c (SATLiteral(17337) \/ SATLiteral(17338))
17337 17338 0
c (max_left_00001_00009_00006<=max_left_00001_00009_00007)
2435 -2450 0
2436 -2451 0
2438 -2453 0
2440 -2455 0
2442 -2457 0
2444 -2459 0
2446 -2461 0
2448 -2463 0
c (variant_fields_00001_00009_00007<=max_left_00001_00009_00007)
7877 -2450 0
7878 -2451 0
7880 -2453 0
7882 -2455 0
7884 -2457 0
7886 -2459 0
7888 -2461 0
7890 -2463 0
c (SATLiteral(17339) \/ SATLiteral(17340))
17339 17340 0
c (max_left_00001_00009_00007<=max_left_00001_00009_00008)
2450 -2465 0
2451 -2466 0
2453 -2468 0
2455 -2470 0
2457 -2472 0
2459 -2474 0
2461 -2476 0
2463 -2478 0
c (variant_fields_00001_00009_00008<=max_left_00001_00009_00008)
7892 -2465 0
7893 -2466 0
7895 -2468 0
7897 -2470 0
7899 -2472 0
7901 -2474 0
7903 -2476 0
7905 -2478 0
c (SATLiteral(17341) \/ SATLiteral(17342))
17341 17342 0
c (max_left_00001_00009_00008<=max_left_00001_00009_00009)
2465 -2480 0
2466 -2481 0
2468 -2483 0
2470 -2485 0
2472 -2487 0
2474 -2489 0
2476 -2491 0
2478 -2493 0
c (variant_fields_00001_00009_00009<=max_left_00001_00009_00009)
7907 -2480 0
7908 -2481 0
7910 -2483 0
7912 -2485 0
7914 -2487 0
7916 -2489 0
7918 -2491 0
7920 -2493 0
c (SATLiteral(17343) \/ SATLiteral(17344))
17343 17344 0
c (variant_fields_00002_00001_00001<=max_left_00002_00001_00001)
7922 -2496 0
7923 -2497 0
7925 -2499 0
7927 -2501 0
7929 -2503 0
7931 -2505 0
7933 -2507 0
7935 -2509 0
c (variant_fields_00002_00001_00001=max_left_00002_00001_00001)
-7922 2496 0
-7924 2498 0
-7926 2500 0
-7928 2502 0
-7930 2504 0
-7932 2506 0
-7934 2508 0
-7936 2510 0
7935 -2509 0
-2496 7922 0
-2498 7924 0
-2500 7926 0
-2502 7928 0
-2504 7930 0
-2506 7932 0
-2508 7934 0
-2510 7936 0
2509 -7935 0
c (max_left_00002_00001_00001<=max_left_00002_00001_00002)
2496 -2511 0
2497 -2512 0
2499 -2514 0
2501 -2516 0
2503 -2518 0
2505 -2520 0
2507 -2522 0
2509 -2524 0
c (variant_fields_00002_00001_00002<=max_left_00002_00001_00002)
7937 -2511 0
7938 -2512 0
7940 -2514 0
7942 -2516 0
7944 -2518 0
7946 -2520 0
7948 -2522 0
7950 -2524 0
c (SATLiteral(17345) \/ SATLiteral(17346))
17345 17346 0
c (max_left_00002_00001_00002<=max_left_00002_00001_00003)
2511 -2526 0
2512 -2527 0
2514 -2529 0
2516 -2531 0
2518 -2533 0
2520 -2535 0
2522 -2537 0
2524 -2539 0
c (variant_fields_00002_00001_00003<=max_left_00002_00001_00003)
7952 -2526 0
7953 -2527 0
7955 -2529 0
7957 -2531 0
7959 -2533 0
7961 -2535 0
7963 -2537 0
7965 -2539 0
c (SATLiteral(17347) \/ SATLiteral(17348))
17347 17348 0
c (max_left_00002_00001_00003<=max_left_00002_00001_00004)
2526 -2541 0
2527 -2542 0
2529 -2544 0
2531 -2546 0
2533 -2548 0
2535 -2550 0
2537 -2552 0
2539 -2554 0
c (variant_fields_00002_00001_00004<=max_left_00002_00001_00004)
7967 -2541 0
7968 -2542 0
7970 -2544 0
7972 -2546 0
7974 -2548 0
7976 -2550 0
7978 -2552 0
7980 -2554 0
c (SATLiteral(17349) \/ SATLiteral(17350))
17349 17350 0
c (max_left_00002_00001_00004<=max_left_00002_00001_00005)
2541 -2556 0
2542 -2557 0
2544 -2559 0
2546 -2561 0
2548 -2563 0
2550 -2565 0
2552 -2567 0
2554 -2569 0
c (variant_fields_00002_00001_00005<=max_left_00002_00001_00005)
7982 -2556 0
7983 -2557 0
7985 -2559 0
7987 -2561 0
7989 -2563 0
7991 -2565 0
7993 -2567 0
7995 -2569 0
c (SATLiteral(17351) \/ SATLiteral(17352))
17351 17352 0
c (max_left_00002_00001_00005<=max_left_00002_00001_00006)
2556 -2571 0
2557 -2572 0
2559 -2574 0
2561 -2576 0
2563 -2578 0
2565 -2580 0
2567 -2582 0
2569 -2584 0
c (variant_fields_00002_00001_00006<=max_left_00002_00001_00006)
7997 -2571 0
7998 -2572 0
8000 -2574 0
8002 -2576 0
8004 -2578 0
8006 -2580 0
8008 -2582 0
8010 -2584 0
c (SATLiteral(17353) \/ SATLiteral(17354))
17353 17354 0
c (max_left_00002_00001_00006<=max_left_00002_00001_00007)
2571 -2586 0
2572 -2587 0
2574 -2589 0
2576 -2591 0
2578 -2593 0
2580 -2595 0
2582 -2597 0
2584 -2599 0
c (variant_fields_00002_00001_00007<=max_left_00002_00001_00007)
8012 -2586 0
8013 -2587 0
8015 -2589 0
8017 -2591 0
8019 -2593 0
8021 -2595 0
8023 -2597 0
8025 -2599 0
c (SATLiteral(17355) \/ SATLiteral(17356))
17355 17356 0
c (max_left_00002_00001_00007<=max_left_00002_00001_00008)
2586 -2601 0
2587 -2602 0
2589 -2604 0
2591 -2606 0
2593 -2608 0
2595 -2610 0
2597 -2612 0
2599 -2614 0
c (variant_fields_00002_00001_00008<=max_left_00002_00001_00008)
8027 -2601 0
8028 -2602 0
8030 -2604 0
8032 -2606 0
8034 -2608 0
8036 -2610 0
8038 -2612 0
8040 -2614 0
c (SATLiteral(17357) \/ SATLiteral(17358))
17357 17358 0
c (max_left_00002_00001_00008<=max_left_00002_00001_00009)
2601 -2616 0
2602 -2617 0
2604 -2619 0
2606 -2621 0
2608 -2623 0
2610 -2625 0
2612 -2627 0
2614 -2629 0
c (variant_fields_00002_00001_00009<=max_left_00002_00001_00009)
8042 -2616 0
8043 -2617 0
8045 -2619 0
8047 -2621 0
8049 -2623 0
8051 -2625 0
8053 -2627 0
8055 -2629 0
c (SATLiteral(17359) \/ SATLiteral(17360))
17359 17360 0
c (variant_fields_00002_00002_00001<=max_left_00002_00002_00001)
8057 -2632 0
8058 -2633 0
8060 -2635 0
8062 -2637 0
8064 -2639 0
8066 -2641 0
8068 -2643 0
8070 -2645 0
c (variant_fields_00002_00002_00001=max_left_00002_00002_00001)
-8057 2632 0
-8059 2634 0
-8061 2636 0
-8063 2638 0
-8065 2640 0
-8067 2642 0
-8069 2644 0
-8071 2646 0
8070 -2645 0
-2632 8057 0
-2634 8059 0
-2636 8061 0
-2638 8063 0
-2640 8065 0
-2642 8067 0
-2644 8069 0
-2646 8071 0
2645 -8070 0
c (max_left_00002_00002_00001<=max_left_00002_00002_00002)
2632 -2647 0
2633 -2648 0
2635 -2650 0
2637 -2652 0
2639 -2654 0
2641 -2656 0
2643 -2658 0
2645 -2660 0
c (variant_fields_00002_00002_00002<=max_left_00002_00002_00002)
8072 -2647 0
8073 -2648 0
8075 -2650 0
8077 -2652 0
8079 -2654 0
8081 -2656 0
8083 -2658 0
8085 -2660 0
c (SATLiteral(17361) \/ SATLiteral(17362))
17361 17362 0
c (max_left_00002_00002_00002<=max_left_00002_00002_00003)
2647 -2662 0
2648 -2663 0
2650 -2665 0
2652 -2667 0
2654 -2669 0
2656 -2671 0
2658 -2673 0
2660 -2675 0
c (variant_fields_00002_00002_00003<=max_left_00002_00002_00003)
8087 -2662 0
8088 -2663 0
8090 -2665 0
8092 -2667 0
8094 -2669 0
8096 -2671 0
8098 -2673 0
8100 -2675 0
c (SATLiteral(17363) \/ SATLiteral(17364))
17363 17364 0
c (max_left_00002_00002_00003<=max_left_00002_00002_00004)
2662 -2677 0
2663 -2678 0
2665 -2680 0
2667 -2682 0
2669 -2684 0
2671 -2686 0
2673 -2688 0
2675 -2690 0
c (variant_fields_00002_00002_00004<=max_left_00002_00002_00004)
8102 -2677 0
8103 -2678 0
8105 -2680 0
8107 -2682 0
8109 -2684 0
8111 -2686 0
8113 -2688 0
8115 -2690 0
c (SATLiteral(17365) \/ SATLiteral(17366))
17365 17366 0
c (max_left_00002_00002_00004<=max_left_00002_00002_00005)
2677 -2692 0
2678 -2693 0
2680 -2695 0
2682 -2697 0
2684 -2699 0
2686 -2701 0
2688 -2703 0
2690 -2705 0
c (variant_fields_00002_00002_00005<=max_left_00002_00002_00005)
8117 -2692 0
8118 -2693 0
8120 -2695 0
8122 -2697 0
8124 -2699 0
8126 -2701 0
8128 -2703 0
8130 -2705 0
c (SATLiteral(17367) \/ SATLiteral(17368))
17367 17368 0
c (max_left_00002_00002_00005<=max_left_00002_00002_00006)
2692 -2707 0
2693 -2708 0
2695 -2710 0
2697 -2712 0
2699 -2714 0
2701 -2716 0
2703 -2718 0
2705 -2720 0
c (variant_fields_00002_00002_00006<=max_left_00002_00002_00006)
8132 -2707 0
8133 -2708 0
8135 -2710 0
8137 -2712 0
8139 -2714 0
8141 -2716 0
8143 -2718 0
8145 -2720 0
c (SATLiteral(17369) \/ SATLiteral(17370))
17369 17370 0
c (max_left_00002_00002_00006<=max_left_00002_00002_00007)
2707 -2722 0
2708 -2723 0
2710 -2725 0
2712 -2727 0
2714 -2729 0
2716 -2731 0
2718 -2733 0
2720 -2735 0
c (variant_fields_00002_00002_00007<=max_left_00002_00002_00007)
8147 -2722 0
8148 -2723 0
8150 -2725 0
8152 -2727 0
8154 -2729 0
8156 -2731 0
8158 -2733 0
8160 -2735 0
c (SATLiteral(17371) \/ SATLiteral(17372))
17371 17372 0
c (max_left_00002_00002_00007<=max_left_00002_00002_00008)
2722 -2737 0
2723 -2738 0
2725 -2740 0
2727 -2742 0
2729 -2744 0
2731 -2746 0
2733 -2748 0
2735 -2750 0
c (variant_fields_00002_00002_00008<=max_left_00002_00002_00008)
8162 -2737 0
8163 -2738 0
8165 -2740 0
8167 -2742 0
8169 -2744 0
8171 -2746 0
8173 -2748 0
8175 -2750 0
c (SATLiteral(17373) \/ SATLiteral(17374))
17373 17374 0
c (max_left_00002_00002_00008<=max_left_00002_00002_00009)
2737 -2752 0
2738 -2753 0
2740 -2755 0
2742 -2757 0
2744 -2759 0
2746 -2761 0
2748 -2763 0
2750 -2765 0
c (variant_fields_00002_00002_00009<=max_left_00002_00002_00009)
8177 -2752 0
8178 -2753 0
8180 -2755 0
8182 -2757 0
8184 -2759 0
8186 -2761 0
8188 -2763 0
8190 -2765 0
c (SATLiteral(17375) \/ SATLiteral(17376))
17375 17376 0
c (variant_fields_00002_00003_00001<=max_left_00002_00003_00001)
8192 -2768 0
8193 -2769 0
8195 -2771 0
8197 -2773 0
8199 -2775 0
8201 -2777 0
8203 -2779 0
8205 -2781 0
c (variant_fields_00002_00003_00001=max_left_00002_00003_00001)
-8192 2768 0
-8194 2770 0
-8196 2772 0
-8198 2774 0
-8200 2776 0
-8202 2778 0
-8204 2780 0
-8206 2782 0
8205 -2781 0
-2768 8192 0
-2770 8194 0
-2772 8196 0
-2774 8198 0
-2776 8200 0
-2778 8202 0
-2780 8204 0
-2782 8206 0
2781 -8205 0
c (max_left_00002_00003_00001<=max_left_00002_00003_00002)
2768 -2783 0
2769 -2784 0
2771 -2786 0
2773 -2788 0
2775 -2790 0
2777 -2792 0
2779 -2794 0
2781 -2796 0
c (variant_fields_00002_00003_00002<=max_left_00002_00003_00002)
8207 -2783 0
8208 -2784 0
8210 -2786 0
8212 -2788 0
8214 -2790 0
8216 -2792 0
8218 -2794 0
8220 -2796 0
c (SATLiteral(17377) \/ SATLiteral(17378))
17377 17378 0
c (max_left_00002_00003_00002<=max_left_00002_00003_00003)
2783 -2798 0
2784 -2799 0
2786 -2801 0
2788 -2803 0
2790 -2805 0
2792 -2807 0
2794 -2809 0
2796 -2811 0
c (variant_fields_00002_00003_00003<=max_left_00002_00003_00003)
8222 -2798 0
8223 -2799 0
8225 -2801 0
8227 -2803 0
8229 -2805 0
8231 -2807 0
8233 -2809 0
8235 -2811 0
c (SATLiteral(17379) \/ SATLiteral(17380))
17379 17380 0
c (max_left_00002_00003_00003<=max_left_00002_00003_00004)
2798 -2813 0
2799 -2814 0
2801 -2816 0
2803 -2818 0
2805 -2820 0
2807 -2822 0
2809 -2824 0
2811 -2826 0
c (variant_fields_00002_00003_00004<=max_left_00002_00003_00004)
8237 -2813 0
8238 -2814 0
8240 -2816 0
8242 -2818 0
8244 -2820 0
8246 -2822 0
8248 -2824 0
8250 -2826 0
c (SATLiteral(17381) \/ SATLiteral(17382))
17381 17382 0
c (max_left_00002_00003_00004<=max_left_00002_00003_00005)
2813 -2828 0
2814 -2829 0
2816 -2831 0
2818 -2833 0
2820 -2835 0
2822 -2837 0
2824 -2839 0
2826 -2841 0
c (variant_fields_00002_00003_00005<=max_left_00002_00003_00005)
8252 -2828 0
8253 -2829 0
8255 -2831 0
8257 -2833 0
8259 -2835 0
8261 -2837 0
8263 -2839 0
8265 -2841 0
c (SATLiteral(17383) \/ SATLiteral(17384))
17383 17384 0
c (max_left_00002_00003_00005<=max_left_00002_00003_00006)
2828 -2843 0
2829 -2844 0
2831 -2846 0
2833 -2848 0
2835 -2850 0
2837 -2852 0
2839 -2854 0
2841 -2856 0
c (variant_fields_00002_00003_00006<=max_left_00002_00003_00006)
8267 -2843 0
8268 -2844 0
8270 -2846 0
8272 -2848 0
8274 -2850 0
8276 -2852 0
8278 -2854 0
8280 -2856 0
c (SATLiteral(17385) \/ SATLiteral(17386))
17385 17386 0
c (max_left_00002_00003_00006<=max_left_00002_00003_00007)
2843 -2858 0
2844 -2859 0
2846 -2861 0
2848 -2863 0
2850 -2865 0
2852 -2867 0
2854 -2869 0
2856 -2871 0
c (variant_fields_00002_00003_00007<=max_left_00002_00003_00007)
8282 -2858 0
8283 -2859 0
8285 -2861 0
8287 -2863 0
8289 -2865 0
8291 -2867 0
8293 -2869 0
8295 -2871 0
c (SATLiteral(17387) \/ SATLiteral(17388))
17387 17388 0
c (max_left_00002_00003_00007<=max_left_00002_00003_00008)
2858 -2873 0
2859 -2874 0
2861 -2876 0
2863 -2878 0
2865 -2880 0
2867 -2882 0
2869 -2884 0
2871 -2886 0
c (variant_fields_00002_00003_00008<=max_left_00002_00003_00008)
8297 -2873 0
8298 -2874 0
8300 -2876 0
8302 -2878 0
8304 -2880 0
8306 -2882 0
8308 -2884 0
8310 -2886 0
c (SATLiteral(17389) \/ SATLiteral(17390))
17389 17390 0
c (max_left_00002_00003_00008<=max_left_00002_00003_00009)
2873 -2888 0
2874 -2889 0
2876 -2891 0
2878 -2893 0
2880 -2895 0
2882 -2897 0
2884 -2899 0
2886 -2901 0
c (variant_fields_00002_00003_00009<=max_left_00002_00003_00009)
8312 -2888 0
8313 -2889 0
8315 -2891 0
8317 -2893 0
8319 -2895 0
8321 -2897 0
8323 -2899 0
8325 -2901 0
c (SATLiteral(17391) \/ SATLiteral(17392))
17391 17392 0
c (variant_fields_00002_00004_00001<=max_left_00002_00004_00001)
8327 -2904 0
8328 -2905 0
8330 -2907 0
8332 -2909 0
8334 -2911 0
8336 -2913 0
8338 -2915 0
8340 -2917 0
c (variant_fields_00002_00004_00001=max_left_00002_00004_00001)
-8327 2904 0
-8329 2906 0
-8331 2908 0
-8333 2910 0
-8335 2912 0
-8337 2914 0
-8339 2916 0
-8341 2918 0
8340 -2917 0
-2904 8327 0
-2906 8329 0
-2908 8331 0
-2910 8333 0
-2912 8335 0
-2914 8337 0
-2916 8339 0
-2918 8341 0
2917 -8340 0
c (max_left_00002_00004_00001<=max_left_00002_00004_00002)
2904 -2919 0
2905 -2920 0
2907 -2922 0
2909 -2924 0
2911 -2926 0
2913 -2928 0
2915 -2930 0
2917 -2932 0
c (variant_fields_00002_00004_00002<=max_left_00002_00004_00002)
8342 -2919 0
8343 -2920 0
8345 -2922 0
8347 -2924 0
8349 -2926 0
8351 -2928 0
8353 -2930 0
8355 -2932 0
c (SATLiteral(17393) \/ SATLiteral(17394))
17393 17394 0
c (max_left_00002_00004_00002<=max_left_00002_00004_00003)
2919 -2934 0
2920 -2935 0
2922 -2937 0
2924 -2939 0
2926 -2941 0
2928 -2943 0
2930 -2945 0
2932 -2947 0
c (variant_fields_00002_00004_00003<=max_left_00002_00004_00003)
8357 -2934 0
8358 -2935 0
8360 -2937 0
8362 -2939 0
8364 -2941 0
8366 -2943 0
8368 -2945 0
8370 -2947 0
c (SATLiteral(17395) \/ SATLiteral(17396))
17395 17396 0
c (max_left_00002_00004_00003<=max_left_00002_00004_00004)
2934 -2949 0
2935 -2950 0
2937 -2952 0
2939 -2954 0
2941 -2956 0
2943 -2958 0
2945 -2960 0
2947 -2962 0
c (variant_fields_00002_00004_00004<=max_left_00002_00004_00004)
8372 -2949 0
8373 -2950 0
8375 -2952 0
8377 -2954 0
8379 -2956 0
8381 -2958 0
8383 -2960 0
8385 -2962 0
c (SATLiteral(17397) \/ SATLiteral(17398))
17397 17398 0
c (max_left_00002_00004_00004<=max_left_00002_00004_00005)
2949 -2964 0
2950 -2965 0
2952 -2967 0
2954 -2969 0
2956 -2971 0
2958 -2973 0
2960 -2975 0
2962 -2977 0
c (variant_fields_00002_00004_00005<=max_left_00002_00004_00005)
8387 -2964 0
8388 -2965 0
8390 -2967 0
8392 -2969 0
8394 -2971 0
8396 -2973 0
8398 -2975 0
8400 -2977 0
c (SATLiteral(17399) \/ SATLiteral(17400))
17399 17400 0
c (max_left_00002_00004_00005<=max_left_00002_00004_00006)
2964 -2979 0
2965 -2980 0
2967 -2982 0
2969 -2984 0
2971 -2986 0
2973 -2988 0
2975 -2990 0
2977 -2992 0
c (variant_fields_00002_00004_00006<=max_left_00002_00004_00006)
8402 -2979 0
8403 -2980 0
8405 -2982 0
8407 -2984 0
8409 -2986 0
8411 -2988 0
8413 -2990 0
8415 -2992 0
c (SATLiteral(17401) \/ SATLiteral(17402))
17401 17402 0
c (max_left_00002_00004_00006<=max_left_00002_00004_00007)
2979 -2994 0
2980 -2995 0
2982 -2997 0
2984 -2999 0
2986 -3001 0
2988 -3003 0
2990 -3005 0
2992 -3007 0
c (variant_fields_00002_00004_00007<=max_left_00002_00004_00007)
8417 -2994 0
8418 -2995 0
8420 -2997 0
8422 -2999 0
8424 -3001 0
8426 -3003 0
8428 -3005 0
8430 -3007 0
c (SATLiteral(17403) \/ SATLiteral(17404))
17403 17404 0
c (max_left_00002_00004_00007<=max_left_00002_00004_00008)
2994 -3009 0
2995 -3010 0
2997 -3012 0
2999 -3014 0
3001 -3016 0
3003 -3018 0
3005 -3020 0
3007 -3022 0
c (variant_fields_00002_00004_00008<=max_left_00002_00004_00008)
8432 -3009 0
8433 -3010 0
8435 -3012 0
8437 -3014 0
8439 -3016 0
8441 -3018 0
8443 -3020 0
8445 -3022 0
c (SATLiteral(17405) \/ SATLiteral(17406))
17405 17406 0
c (max_left_00002_00004_00008<=max_left_00002_00004_00009)
3009 -3024 0
3010 -3025 0
3012 -3027 0
3014 -3029 0
3016 -3031 0
3018 -3033 0
3020 -3035 0
3022 -3037 0
c (variant_fields_00002_00004_00009<=max_left_00002_00004_00009)
8447 -3024 0
8448 -3025 0
8450 -3027 0
8452 -3029 0
8454 -3031 0
8456 -3033 0
8458 -3035 0
8460 -3037 0
c (SATLiteral(17407) \/ SATLiteral(17408))
17407 17408 0
c (variant_fields_00002_00005_00001<=max_left_00002_00005_00001)
8462 -3040 0
8463 -3041 0
8465 -3043 0
8467 -3045 0
8469 -3047 0
8471 -3049 0
8473 -3051 0
8475 -3053 0
c (variant_fields_00002_00005_00001=max_left_00002_00005_00001)
-8462 3040 0
-8464 3042 0
-8466 3044 0
-8468 3046 0
-8470 3048 0
-8472 3050 0
-8474 3052 0
-8476 3054 0
8475 -3053 0
-3040 8462 0
-3042 8464 0
-3044 8466 0
-3046 8468 0
-3048 8470 0
-3050 8472 0
-3052 8474 0
-3054 8476 0
3053 -8475 0
c (max_left_00002_00005_00001<=max_left_00002_00005_00002)
3040 -3055 0
3041 -3056 0
3043 -3058 0
3045 -3060 0
3047 -3062 0
3049 -3064 0
3051 -3066 0
3053 -3068 0
c (variant_fields_00002_00005_00002<=max_left_00002_00005_00002)
8477 -3055 0
8478 -3056 0
8480 -3058 0
8482 -3060 0
8484 -3062 0
8486 -3064 0
8488 -3066 0
8490 -3068 0
c (SATLiteral(17409) \/ SATLiteral(17410))
17409 17410 0
c (max_left_00002_00005_00002<=max_left_00002_00005_00003)
3055 -3070 0
3056 -3071 0
3058 -3073 0
3060 -3075 0
3062 -3077 0
3064 -3079 0
3066 -3081 0
3068 -3083 0
c (variant_fields_00002_00005_00003<=max_left_00002_00005_00003)
8492 -3070 0
8493 -3071 0
8495 -3073 0
8497 -3075 0
8499 -3077 0
8501 -3079 0
8503 -3081 0
8505 -3083 0
c (SATLiteral(17411) \/ SATLiteral(17412))
17411 17412 0
c (max_left_00002_00005_00003<=max_left_00002_00005_00004)
3070 -3085 0
3071 -3086 0
3073 -3088 0
3075 -3090 0
3077 -3092 0
3079 -3094 0
3081 -3096 0
3083 -3098 0
c (variant_fields_00002_00005_00004<=max_left_00002_00005_00004)
8507 -3085 0
8508 -3086 0
8510 -3088 0
8512 -3090 0
8514 -3092 0
8516 -3094 0
8518 -3096 0
8520 -3098 0
c (SATLiteral(17413) \/ SATLiteral(17414))
17413 17414 0
c (max_left_00002_00005_00004<=max_left_00002_00005_00005)
3085 -3100 0
3086 -3101 0
3088 -3103 0
3090 -3105 0
3092 -3107 0
3094 -3109 0
3096 -3111 0
3098 -3113 0
c (variant_fields_00002_00005_00005<=max_left_00002_00005_00005)
8522 -3100 0
8523 -3101 0
8525 -3103 0
8527 -3105 0
8529 -3107 0
8531 -3109 0
8533 -3111 0
8535 -3113 0
c (SATLiteral(17415) \/ SATLiteral(17416))
17415 17416 0
c (max_left_00002_00005_00005<=max_left_00002_00005_00006)
3100 -3115 0
3101 -3116 0
3103 -3118 0
3105 -3120 0
3107 -3122 0
3109 -3124 0
3111 -3126 0
3113 -3128 0
c (variant_fields_00002_00005_00006<=max_left_00002_00005_00006)
8537 -3115 0
8538 -3116 0
8540 -3118 0
8542 -3120 0
8544 -3122 0
8546 -3124 0
8548 -3126 0
8550 -3128 0
c (SATLiteral(17417) \/ SATLiteral(17418))
17417 17418 0
c (max_left_00002_00005_00006<=max_left_00002_00005_00007)
3115 -3130 0
3116 -3131 0
3118 -3133 0
3120 -3135 0
3122 -3137 0
3124 -3139 0
3126 -3141 0
3128 -3143 0
c (variant_fields_00002_00005_00007<=max_left_00002_00005_00007)
8552 -3130 0
8553 -3131 0
8555 -3133 0
8557 -3135 0
8559 -3137 0
8561 -3139 0
8563 -3141 0
8565 -3143 0
c (SATLiteral(17419) \/ SATLiteral(17420))
17419 17420 0
c (max_left_00002_00005_00007<=max_left_00002_00005_00008)
3130 -3145 0
3131 -3146 0
3133 -3148 0
3135 -3150 0
3137 -3152 0
3139 -3154 0
3141 -3156 0
3143 -3158 0
c (variant_fields_00002_00005_00008<=max_left_00002_00005_00008)
8567 -3145 0
8568 -3146 0
8570 -3148 0
8572 -3150 0
8574 -3152 0
8576 -3154 0
8578 -3156 0
8580 -3158 0
c (SATLiteral(17421) \/ SATLiteral(17422))
17421 17422 0
c (max_left_00002_00005_00008<=max_left_00002_00005_00009)
3145 -3160 0
3146 -3161 0
3148 -3163 0
3150 -3165 0
3152 -3167 0
3154 -3169 0
3156 -3171 0
3158 -3173 0
c (variant_fields_00002_00005_00009<=max_left_00002_00005_00009)
8582 -3160 0
8583 -3161 0
8585 -3163 0
8587 -3165 0
8589 -3167 0
8591 -3169 0
8593 -3171 0
8595 -3173 0
c (SATLiteral(17423) \/ SATLiteral(17424))
17423 17424 0
c (variant_fields_00002_00006_00001<=max_left_00002_00006_00001)
8597 -3176 0
8598 -3177 0
8600 -3179 0
8602 -3181 0
8604 -3183 0
8606 -3185 0
8608 -3187 0
8610 -3189 0
c (variant_fields_00002_00006_00001=max_left_00002_00006_00001)
-8597 3176 0
-8599 3178 0
-8601 3180 0
-8603 3182 0
-8605 3184 0
-8607 3186 0
-8609 3188 0
-8611 3190 0
8610 -3189 0
-3176 8597 0
-3178 8599 0
-3180 8601 0
-3182 8603 0
-3184 8605 0
-3186 8607 0
-3188 8609 0
-3190 8611 0
3189 -8610 0
c (max_left_00002_00006_00001<=max_left_00002_00006_00002)
3176 -3191 0
3177 -3192 0
3179 -3194 0
3181 -3196 0
3183 -3198 0
3185 -3200 0
3187 -3202 0
3189 -3204 0
c (variant_fields_00002_00006_00002<=max_left_00002_00006_00002)
8612 -3191 0
8613 -3192 0
8615 -3194 0
8617 -3196 0
8619 -3198 0
8621 -3200 0
8623 -3202 0
8625 -3204 0
c (SATLiteral(17425) \/ SATLiteral(17426))
17425 17426 0
c (max_left_00002_00006_00002<=max_left_00002_00006_00003)
3191 -3206 0
3192 -3207 0
3194 -3209 0
3196 -3211 0
3198 -3213 0
3200 -3215 0
3202 -3217 0
3204 -3219 0
c (variant_fields_00002_00006_00003<=max_left_00002_00006_00003)
8627 -3206 0
8628 -3207 0
8630 -3209 0
8632 -3211 0
8634 -3213 0
8636 -3215 0
8638 -3217 0
8640 -3219 0
c (SATLiteral(17427) \/ SATLiteral(17428))
17427 17428 0
c (max_left_00002_00006_00003<=max_left_00002_00006_00004)
3206 -3221 0
3207 -3222 0
3209 -3224 0
3211 -3226 0
3213 -3228 0
3215 -3230 0
3217 -3232 0
3219 -3234 0
c (variant_fields_00002_00006_00004<=max_left_00002_00006_00004)
8642 -3221 0
8643 -3222 0
8645 -3224 0
8647 -3226 0
8649 -3228 0
8651 -3230 0
8653 -3232 0
8655 -3234 0
c (SATLiteral(17429) \/ SATLiteral(17430))
17429 17430 0
c (max_left_00002_00006_00004<=max_left_00002_00006_00005)
3221 -3236 0
3222 -3237 0
3224 -3239 0
3226 -3241 0
3228 -3243 0
3230 -3245 0
3232 -3247 0
3234 -3249 0
c (variant_fields_00002_00006_00005<=max_left_00002_00006_00005)
8657 -3236 0
8658 -3237 0
8660 -3239 0
8662 -3241 0
8664 -3243 0
8666 -3245 0
8668 -3247 0
8670 -3249 0
c (SATLiteral(17431) \/ SATLiteral(17432))
17431 17432 0
c (max_left_00002_00006_00005<=max_left_00002_00006_00006)
3236 -3251 0
3237 -3252 0
3239 -3254 0
3241 -3256 0
3243 -3258 0
3245 -3260 0
3247 -3262 0
3249 -3264 0
c (variant_fields_00002_00006_00006<=max_left_00002_00006_00006)
8672 -3251 0
8673 -3252 0
8675 -3254 0
8677 -3256 0
8679 -3258 0
8681 -3260 0
8683 -3262 0
8685 -3264 0
c (SATLiteral(17433) \/ SATLiteral(17434))
17433 17434 0
c (max_left_00002_00006_00006<=max_left_00002_00006_00007)
3251 -3266 0
3252 -3267 0
3254 -3269 0
3256 -3271 0
3258 -3273 0
3260 -3275 0
3262 -3277 0
3264 -3279 0
c (variant_fields_00002_00006_00007<=max_left_00002_00006_00007)
8687 -3266 0
8688 -3267 0
8690 -3269 0
8692 -3271 0
8694 -3273 0
8696 -3275 0
8698 -3277 0
8700 -3279 0
c (SATLiteral(17435) \/ SATLiteral(17436))
17435 17436 0
c (max_left_00002_00006_00007<=max_left_00002_00006_00008)
3266 -3281 0
3267 -3282 0
3269 -3284 0
3271 -3286 0
3273 -3288 0
3275 -3290 0
3277 -3292 0
3279 -3294 0
c (variant_fields_00002_00006_00008<=max_left_00002_00006_00008)
8702 -3281 0
8703 -3282 0
8705 -3284 0
8707 -3286 0
8709 -3288 0
8711 -3290 0
8713 -3292 0
8715 -3294 0
c (SATLiteral(17437) \/ SATLiteral(17438))
17437 17438 0
c (max_left_00002_00006_00008<=max_left_00002_00006_00009)
3281 -3296 0
3282 -3297 0
3284 -3299 0
3286 -3301 0
3288 -3303 0
3290 -3305 0
3292 -3307 0
3294 -3309 0
c (variant_fields_00002_00006_00009<=max_left_00002_00006_00009)
8717 -3296 0
8718 -3297 0
8720 -3299 0
8722 -3301 0
8724 -3303 0
8726 -3305 0
8728 -3307 0
8730 -3309 0
c (SATLiteral(17439) \/ SATLiteral(17440))
17439 17440 0
c (variant_fields_00002_00007_00001<=max_left_00002_00007_00001)
8732 -3312 0
8733 -3313 0
8735 -3315 0
8737 -3317 0
8739 -3319 0
8741 -3321 0
8743 -3323 0
8745 -3325 0
c (variant_fields_00002_00007_00001=max_left_00002_00007_00001)
-8732 3312 0
-8734 3314 0
-8736 3316 0
-8738 3318 0
-8740 3320 0
-8742 3322 0
-8744 3324 0
-8746 3326 0
8745 -3325 0
-3312 8732 0
-3314 8734 0
-3316 8736 0
-3318 8738 0
-3320 8740 0
-3322 8742 0
-3324 8744 0
-3326 8746 0
3325 -8745 0
c (max_left_00002_00007_00001<=max_left_00002_00007_00002)
3312 -3327 0
3313 -3328 0
3315 -3330 0
3317 -3332 0
3319 -3334 0
3321 -3336 0
3323 -3338 0
3325 -3340 0
c (variant_fields_00002_00007_00002<=max_left_00002_00007_00002)
8747 -3327 0
8748 -3328 0
8750 -3330 0
8752 -3332 0
8754 -3334 0
8756 -3336 0
8758 -3338 0
8760 -3340 0
c (SATLiteral(17441) \/ SATLiteral(17442))
17441 17442 0
c (max_left_00002_00007_00002<=max_left_00002_00007_00003)
3327 -3342 0
3328 -3343 0
3330 -3345 0
3332 -3347 0
3334 -3349 0
3336 -3351 0
3338 -3353 0
3340 -3355 0
c (variant_fields_00002_00007_00003<=max_left_00002_00007_00003)
8762 -3342 0
8763 -3343 0
8765 -3345 0
8767 -3347 0
8769 -3349 0
8771 -3351 0
8773 -3353 0
8775 -3355 0
c (SATLiteral(17443) \/ SATLiteral(17444))
17443 17444 0
c (max_left_00002_00007_00003<=max_left_00002_00007_00004)
3342 -3357 0
3343 -3358 0
3345 -3360 0
3347 -3362 0
3349 -3364 0
3351 -3366 0
3353 -3368 0
3355 -3370 0
c (variant_fields_00002_00007_00004<=max_left_00002_00007_00004)
8777 -3357 0
8778 -3358 0
8780 -3360 0
8782 -3362 0
8784 -3364 0
8786 -3366 0
8788 -3368 0
8790 -3370 0
c (SATLiteral(17445) \/ SATLiteral(17446))
17445 17446 0
c (max_left_00002_00007_00004<=max_left_00002_00007_00005)
3357 -3372 0
3358 -3373 0
3360 -3375 0
3362 -3377 0
3364 -3379 0
3366 -3381 0
3368 -3383 0
3370 -3385 0
c (variant_fields_00002_00007_00005<=max_left_00002_00007_00005)
8792 -3372 0
8793 -3373 0
8795 -3375 0
8797 -3377 0
8799 -3379 0
8801 -3381 0
8803 -3383 0
8805 -3385 0
c (SATLiteral(17447) \/ SATLiteral(17448))
17447 17448 0
c (max_left_00002_00007_00005<=max_left_00002_00007_00006)
3372 -3387 0
3373 -3388 0
3375 -3390 0
3377 -3392 0
3379 -3394 0
3381 -3396 0
3383 -3398 0
3385 -3400 0
c (variant_fields_00002_00007_00006<=max_left_00002_00007_00006)
8807 -3387 0
8808 -3388 0
8810 -3390 0
8812 -3392 0
8814 -3394 0
8816 -3396 0
8818 -3398 0
8820 -3400 0
c (SATLiteral(17449) \/ SATLiteral(17450))
17449 17450 0
c (max_left_00002_00007_00006<=max_left_00002_00007_00007)
3387 -3402 0
3388 -3403 0
3390 -3405 0
3392 -3407 0
3394 -3409 0
3396 -3411 0
3398 -3413 0
3400 -3415 0
c (variant_fields_00002_00007_00007<=max_left_00002_00007_00007)
8822 -3402 0
8823 -3403 0
8825 -3405 0
8827 -3407 0
8829 -3409 0
8831 -3411 0
8833 -3413 0
8835 -3415 0
c (SATLiteral(17451) \/ SATLiteral(17452))
17451 17452 0
c (max_left_00002_00007_00007<=max_left_00002_00007_00008)
3402 -3417 0
3403 -3418 0
3405 -3420 0
3407 -3422 0
3409 -3424 0
3411 -3426 0
3413 -3428 0
3415 -3430 0
c (variant_fields_00002_00007_00008<=max_left_00002_00007_00008)
8837 -3417 0
8838 -3418 0
8840 -3420 0
8842 -3422 0
8844 -3424 0
8846 -3426 0
8848 -3428 0
8850 -3430 0
c (SATLiteral(17453) \/ SATLiteral(17454))
17453 17454 0
c (max_left_00002_00007_00008<=max_left_00002_00007_00009)
3417 -3432 0
3418 -3433 0
3420 -3435 0
3422 -3437 0
3424 -3439 0
3426 -3441 0
3428 -3443 0
3430 -3445 0
c (variant_fields_00002_00007_00009<=max_left_00002_00007_00009)
8852 -3432 0
8853 -3433 0
8855 -3435 0
8857 -3437 0
8859 -3439 0
8861 -3441 0
8863 -3443 0
8865 -3445 0
c (SATLiteral(17455) \/ SATLiteral(17456))
17455 17456 0
c (variant_fields_00002_00008_00001<=max_left_00002_00008_00001)
8867 -3448 0
8868 -3449 0
8870 -3451 0
8872 -3453 0
8874 -3455 0
8876 -3457 0
8878 -3459 0
8880 -3461 0
c (variant_fields_00002_00008_00001=max_left_00002_00008_00001)
-8867 3448 0
-8869 3450 0
-8871 3452 0
-8873 3454 0
-8875 3456 0
-8877 3458 0
-8879 3460 0
-8881 3462 0
8880 -3461 0
-3448 8867 0
-3450 8869 0
-3452 8871 0
-3454 8873 0
-3456 8875 0
-3458 8877 0
-3460 8879 0
-3462 8881 0
3461 -8880 0
c (max_left_00002_00008_00001<=max_left_00002_00008_00002)
3448 -3463 0
3449 -3464 0
3451 -3466 0
3453 -3468 0
3455 -3470 0
3457 -3472 0
3459 -3474 0
3461 -3476 0
c (variant_fields_00002_00008_00002<=max_left_00002_00008_00002)
8882 -3463 0
8883 -3464 0
8885 -3466 0
8887 -3468 0
8889 -3470 0
8891 -3472 0
8893 -3474 0
8895 -3476 0
c (SATLiteral(17457) \/ SATLiteral(17458))
17457 17458 0
c (max_left_00002_00008_00002<=max_left_00002_00008_00003)
3463 -3478 0
3464 -3479 0
3466 -3481 0
3468 -3483 0
3470 -3485 0
3472 -3487 0
3474 -3489 0
3476 -3491 0
c (variant_fields_00002_00008_00003<=max_left_00002_00008_00003)
8897 -3478 0
8898 -3479 0
8900 -3481 0
8902 -3483 0
8904 -3485 0
8906 -3487 0
8908 -3489 0
8910 -3491 0
c (SATLiteral(17459) \/ SATLiteral(17460))
17459 17460 0
c (max_left_00002_00008_00003<=max_left_00002_00008_00004)
3478 -3493 0
3479 -3494 0
3481 -3496 0
3483 -3498 0
3485 -3500 0
3487 -3502 0
3489 -3504 0
3491 -3506 0
c (variant_fields_00002_00008_00004<=max_left_00002_00008_00004)
8912 -3493 0
8913 -3494 0
8915 -3496 0
8917 -3498 0
8919 -3500 0
8921 -3502 0
8923 -3504 0
8925 -3506 0
c (SATLiteral(17461) \/ SATLiteral(17462))
17461 17462 0
c (max_left_00002_00008_00004<=max_left_00002_00008_00005)
3493 -3508 0
3494 -3509 0
3496 -3511 0
3498 -3513 0
3500 -3515 0
3502 -3517 0
3504 -3519 0
3506 -3521 0
c (variant_fields_00002_00008_00005<=max_left_00002_00008_00005)
8927 -3508 0
8928 -3509 0
8930 -3511 0
8932 -3513 0
8934 -3515 0
8936 -3517 0
8938 -3519 0
8940 -3521 0
c (SATLiteral(17463) \/ SATLiteral(17464))
17463 17464 0
c (max_left_00002_00008_00005<=max_left_00002_00008_00006)
3508 -3523 0
3509 -3524 0
3511 -3526 0
3513 -3528 0
3515 -3530 0
3517 -3532 0
3519 -3534 0
3521 -3536 0
c (variant_fields_00002_00008_00006<=max_left_00002_00008_00006)
8942 -3523 0
8943 -3524 0
8945 -3526 0
8947 -3528 0
8949 -3530 0
8951 -3532 0
8953 -3534 0
8955 -3536 0
c (SATLiteral(17465) \/ SATLiteral(17466))
17465 17466 0
c (max_left_00002_00008_00006<=max_left_00002_00008_00007)
3523 -3538 0
3524 -3539 0
3526 -3541 0
3528 -3543 0
3530 -3545 0
3532 -3547 0
3534 -3549 0
3536 -3551 0
c (variant_fields_00002_00008_00007<=max_left_00002_00008_00007)
8957 -3538 0
8958 -3539 0
8960 -3541 0
8962 -3543 0
8964 -3545 0
8966 -3547 0
8968 -3549 0
8970 -3551 0
c (SATLiteral(17467) \/ SATLiteral(17468))
17467 17468 0
c (max_left_00002_00008_00007<=max_left_00002_00008_00008)
3538 -3553 0
3539 -3554 0
3541 -3556 0
3543 -3558 0
3545 -3560 0
3547 -3562 0
3549 -3564 0
3551 -3566 0
c (variant_fields_00002_00008_00008<=max_left_00002_00008_00008)
8972 -3553 0
8973 -3554 0
8975 -3556 0
8977 -3558 0
8979 -3560 0
8981 -3562 0
8983 -3564 0
8985 -3566 0
c (SATLiteral(17469) \/ SATLiteral(17470))
17469 17470 0
c (max_left_00002_00008_00008<=max_left_00002_00008_00009)
3553 -3568 0
3554 -3569 0
3556 -3571 0
3558 -3573 0
3560 -3575 0
3562 -3577 0
3564 -3579 0
3566 -3581 0
c (variant_fields_00002_00008_00009<=max_left_00002_00008_00009)
8987 -3568 0
8988 -3569 0
8990 -3571 0
8992 -3573 0
8994 -3575 0
8996 -3577 0
8998 -3579 0
9000 -3581 0
c (SATLiteral(17471) \/ SATLiteral(17472))
17471 17472 0
c (variant_fields_00002_00009_00001<=max_left_00002_00009_00001)
9002 -3584 0
9003 -3585 0
9005 -3587 0
9007 -3589 0
9009 -3591 0
9011 -3593 0
9013 -3595 0
9015 -3597 0
c (variant_fields_00002_00009_00001=max_left_00002_00009_00001)
-9002 3584 0
-9004 3586 0
-9006 3588 0
-9008 3590 0
-9010 3592 0
-9012 3594 0
-9014 3596 0
-9016 3598 0
9015 -3597 0
-3584 9002 0
-3586 9004 0
-3588 9006 0
-3590 9008 0
-3592 9010 0
-3594 9012 0
-3596 9014 0
-3598 9016 0
3597 -9015 0
c (max_left_00002_00009_00001<=max_left_00002_00009_00002)
3584 -3599 0
3585 -3600 0
3587 -3602 0
3589 -3604 0
3591 -3606 0
3593 -3608 0
3595 -3610 0
3597 -3612 0
c (variant_fields_00002_00009_00002<=max_left_00002_00009_00002)
9017 -3599 0
9018 -3600 0
9020 -3602 0
9022 -3604 0
9024 -3606 0
9026 -3608 0
9028 -3610 0
9030 -3612 0
c (SATLiteral(17473) \/ SATLiteral(17474))
17473 17474 0
c (max_left_00002_00009_00002<=max_left_00002_00009_00003)
3599 -3614 0
3600 -3615 0
3602 -3617 0
3604 -3619 0
3606 -3621 0
3608 -3623 0
3610 -3625 0
3612 -3627 0
c (variant_fields_00002_00009_00003<=max_left_00002_00009_00003)
9032 -3614 0
9033 -3615 0
9035 -3617 0
9037 -3619 0
9039 -3621 0
9041 -3623 0
9043 -3625 0
9045 -3627 0
c (SATLiteral(17475) \/ SATLiteral(17476))
17475 17476 0
c (max_left_00002_00009_00003<=max_left_00002_00009_00004)
3614 -3629 0
3615 -3630 0
3617 -3632 0
3619 -3634 0
3621 -3636 0
3623 -3638 0
3625 -3640 0
3627 -3642 0
c (variant_fields_00002_00009_00004<=max_left_00002_00009_00004)
9047 -3629 0
9048 -3630 0
9050 -3632 0
9052 -3634 0
9054 -3636 0
9056 -3638 0
9058 -3640 0
9060 -3642 0
c (SATLiteral(17477) \/ SATLiteral(17478))
17477 17478 0
c (max_left_00002_00009_00004<=max_left_00002_00009_00005)
3629 -3644 0
3630 -3645 0
3632 -3647 0
3634 -3649 0
3636 -3651 0
3638 -3653 0
3640 -3655 0
3642 -3657 0
c (variant_fields_00002_00009_00005<=max_left_00002_00009_00005)
9062 -3644 0
9063 -3645 0
9065 -3647 0
9067 -3649 0
9069 -3651 0
9071 -3653 0
9073 -3655 0
9075 -3657 0
c (SATLiteral(17479) \/ SATLiteral(17480))
17479 17480 0
c (max_left_00002_00009_00005<=max_left_00002_00009_00006)
3644 -3659 0
3645 -3660 0
3647 -3662 0
3649 -3664 0
3651 -3666 0
3653 -3668 0
3655 -3670 0
3657 -3672 0
c (variant_fields_00002_00009_00006<=max_left_00002_00009_00006)
9077 -3659 0
9078 -3660 0
9080 -3662 0
9082 -3664 0
9084 -3666 0
9086 -3668 0
9088 -3670 0
9090 -3672 0
c (SATLiteral(17481) \/ SATLiteral(17482))
17481 17482 0
c (max_left_00002_00009_00006<=max_left_00002_00009_00007)
3659 -3674 0
3660 -3675 0
3662 -3677 0
3664 -3679 0
3666 -3681 0
3668 -3683 0
3670 -3685 0
3672 -3687 0
c (variant_fields_00002_00009_00007<=max_left_00002_00009_00007)
9092 -3674 0
9093 -3675 0
9095 -3677 0
9097 -3679 0
9099 -3681 0
9101 -3683 0
9103 -3685 0
9105 -3687 0
c (SATLiteral(17483) \/ SATLiteral(17484))
17483 17484 0
c (max_left_00002_00009_00007<=max_left_00002_00009_00008)
3674 -3689 0
3675 -3690 0
3677 -3692 0
3679 -3694 0
3681 -3696 0
3683 -3698 0
3685 -3700 0
3687 -3702 0
c (variant_fields_00002_00009_00008<=max_left_00002_00009_00008)
9107 -3689 0
9108 -3690 0
9110 -3692 0
9112 -3694 0
9114 -3696 0
9116 -3698 0
9118 -3700 0
9120 -3702 0
c (SATLiteral(17485) \/ SATLiteral(17486))
17485 17486 0
c (max_left_00002_00009_00008<=max_left_00002_00009_00009)
3689 -3704 0
3690 -3705 0
3692 -3707 0
3694 -3709 0
3696 -3711 0
3698 -3713 0
3700 -3715 0
3702 -3717 0
c (variant_fields_00002_00009_00009<=max_left_00002_00009_00009)
9122 -3704 0
9123 -3705 0
9125 -3707 0
9127 -3709 0
9129 -3711 0
9131 -3713 0
9133 -3715 0
9135 -3717 0
c (SATLiteral(17487) \/ SATLiteral(17488))
17487 17488 0
c (variant_fields_00003_00001_00001<=max_left_00003_00001_00001)
9137 -3720 0
9138 -3721 0
9140 -3723 0
9142 -3725 0
9144 -3727 0
9146 -3729 0
9148 -3731 0
9150 -3733 0
c (variant_fields_00003_00001_00001=max_left_00003_00001_00001)
-9137 3720 0
-9139 3722 0
-9141 3724 0
-9143 3726 0
-9145 3728 0
-9147 3730 0
-9149 3732 0
-9151 3734 0
9150 -3733 0
-3720 9137 0
-3722 9139 0
-3724 9141 0
-3726 9143 0
-3728 9145 0
-3730 9147 0
-3732 9149 0
-3734 9151 0
3733 -9150 0
c (variant_fields_00003_00001_00002<=max_left_00003_00001_00002)
9152 -3735 0
9153 -3736 0
9155 -3738 0
9157 -3740 0
9159 -3742 0
9161 -3744 0
9163 -3746 0
9165 -3748 0
c (max_left_00003_00001_00001<=max_left_00003_00001_00002)
3720 -3735 0
3721 -3736 0
3723 -3738 0
3725 -3740 0
3727 -3742 0
3729 -3744 0
3731 -3746 0
3733 -3748 0
c (SATLiteral(17489) \/ SATLiteral(17490))
17489 17490 0
c (variant_fields_00003_00001_00003<=max_left_00003_00001_00003)
9167 -3750 0
9168 -3751 0
9170 -3753 0
9172 -3755 0
9174 -3757 0
9176 -3759 0
9178 -3761 0
9180 -3763 0
c (max_left_00003_00001_00002<=max_left_00003_00001_00003)
3735 -3750 0
3736 -3751 0
3738 -3753 0
3740 -3755 0
3742 -3757 0
3744 -3759 0
3746 -3761 0
3748 -3763 0
c (SATLiteral(17491) \/ SATLiteral(17492))
17491 17492 0
c (variant_fields_00003_00001_00004<=max_left_00003_00001_00004)
9182 -3765 0
9183 -3766 0
9185 -3768 0
9187 -3770 0
9189 -3772 0
9191 -3774 0
9193 -3776 0
9195 -3778 0
c (max_left_00003_00001_00003<=max_left_00003_00001_00004)
3750 -3765 0
3751 -3766 0
3753 -3768 0
3755 -3770 0
3757 -3772 0
3759 -3774 0
3761 -3776 0
3763 -3778 0
c (SATLiteral(17493) \/ SATLiteral(17494))
17493 17494 0
c (variant_fields_00003_00001_00005<=max_left_00003_00001_00005)
9197 -3780 0
9198 -3781 0
9200 -3783 0
9202 -3785 0
9204 -3787 0
9206 -3789 0
9208 -3791 0
9210 -3793 0
c (max_left_00003_00001_00004<=max_left_00003_00001_00005)
3765 -3780 0
3766 -3781 0
3768 -3783 0
3770 -3785 0
3772 -3787 0
3774 -3789 0
3776 -3791 0
3778 -3793 0
c (SATLiteral(17495) \/ SATLiteral(17496))
17495 17496 0
c (variant_fields_00003_00001_00006<=max_left_00003_00001_00006)
9212 -3795 0
9213 -3796 0
9215 -3798 0
9217 -3800 0
9219 -3802 0
9221 -3804 0
9223 -3806 0
9225 -3808 0
c (max_left_00003_00001_00005<=max_left_00003_00001_00006)
3780 -3795 0
3781 -3796 0
3783 -3798 0
3785 -3800 0
3787 -3802 0
3789 -3804 0
3791 -3806 0
3793 -3808 0
c (SATLiteral(17497) \/ SATLiteral(17498))
17497 17498 0
c (variant_fields_00003_00001_00007<=max_left_00003_00001_00007)
9227 -3810 0
9228 -3811 0
9230 -3813 0
9232 -3815 0
9234 -3817 0
9236 -3819 0
9238 -3821 0
9240 -3823 0
c (max_left_00003_00001_00006<=max_left_00003_00001_00007)
3795 -3810 0
3796 -3811 0
3798 -3813 0
3800 -3815 0
3802 -3817 0
3804 -3819 0
3806 -3821 0
3808 -3823 0
c (SATLiteral(17499) \/ SATLiteral(17500))
17499 17500 0
c (variant_fields_00003_00001_00008<=max_left_00003_00001_00008)
9242 -3825 0
9243 -3826 0
9245 -3828 0
9247 -3830 0
9249 -3832 0
9251 -3834 0
9253 -3836 0
9255 -3838 0
c (max_left_00003_00001_00007<=max_left_00003_00001_00008)
3810 -3825 0
3811 -3826 0
3813 -3828 0
3815 -3830 0
3817 -3832 0
3819 -3834 0
3821 -3836 0
3823 -3838 0
c (SATLiteral(17501) \/ SATLiteral(17502))
17501 17502 0
c (variant_fields_00003_00001_00009<=max_left_00003_00001_00009)
9257 -3840 0
9258 -3841 0
9260 -3843 0
9262 -3845 0
9264 -3847 0
9266 -3849 0
9268 -3851 0
9270 -3853 0
c (max_left_00003_00001_00008<=max_left_00003_00001_00009)
3825 -3840 0
3826 -3841 0
3828 -3843 0
3830 -3845 0
3832 -3847 0
3834 -3849 0
3836 -3851 0
3838 -3853 0
c (SATLiteral(17503) \/ SATLiteral(17504))
17503 17504 0
c (variant_fields_00003_00002_00001<=max_left_00003_00002_00001)
9272 -3856 0
9273 -3857 0
9275 -3859 0
9277 -3861 0
9279 -3863 0
9281 -3865 0
9283 -3867 0
9285 -3869 0
c (variant_fields_00003_00002_00001=max_left_00003_00002_00001)
-9272 3856 0
-9274 3858 0
-9276 3860 0
-9278 3862 0
-9280 3864 0
-9282 3866 0
-9284 3868 0
-9286 3870 0
9285 -3869 0
-3856 9272 0
-3858 9274 0
-3860 9276 0
-3862 9278 0
-3864 9280 0
-3866 9282 0
-3868 9284 0
-3870 9286 0
3869 -9285 0
c (max_left_00003_00002_00001<=max_left_00003_00002_00002)
3856 -3871 0
3857 -3872 0
3859 -3874 0
3861 -3876 0
3863 -3878 0
3865 -3880 0
3867 -3882 0
3869 -3884 0
c (variant_fields_00003_00002_00002<=max_left_00003_00002_00002)
9287 -3871 0
9288 -3872 0
9290 -3874 0
9292 -3876 0
9294 -3878 0
9296 -3880 0
9298 -3882 0
9300 -3884 0
c (SATLiteral(17505) \/ SATLiteral(17506))
17505 17506 0
c (max_left_00003_00002_00002<=max_left_00003_00002_00003)
3871 -3886 0
3872 -3887 0
3874 -3889 0
3876 -3891 0
3878 -3893 0
3880 -3895 0
3882 -3897 0
3884 -3899 0
c (variant_fields_00003_00002_00003<=max_left_00003_00002_00003)
9302 -3886 0
9303 -3887 0
9305 -3889 0
9307 -3891 0
9309 -3893 0
9311 -3895 0
9313 -3897 0
9315 -3899 0
c (SATLiteral(17507) \/ SATLiteral(17508))
17507 17508 0
c (max_left_00003_00002_00003<=max_left_00003_00002_00004)
3886 -3901 0
3887 -3902 0
3889 -3904 0
3891 -3906 0
3893 -3908 0
3895 -3910 0
3897 -3912 0
3899 -3914 0
c (variant_fields_00003_00002_00004<=max_left_00003_00002_00004)
9317 -3901 0
9318 -3902 0
9320 -3904 0
9322 -3906 0
9324 -3908 0
9326 -3910 0
9328 -3912 0
9330 -3914 0
c (SATLiteral(17509) \/ SATLiteral(17510))
17509 17510 0
c (max_left_00003_00002_00004<=max_left_00003_00002_00005)
3901 -3916 0
3902 -3917 0
3904 -3919 0
3906 -3921 0
3908 -3923 0
3910 -3925 0
3912 -3927 0
3914 -3929 0
c (variant_fields_00003_00002_00005<=max_left_00003_00002_00005)
9332 -3916 0
9333 -3917 0
9335 -3919 0
9337 -3921 0
9339 -3923 0
9341 -3925 0
9343 -3927 0
9345 -3929 0
c (SATLiteral(17511) \/ SATLiteral(17512))
17511 17512 0
c (max_left_00003_00002_00005<=max_left_00003_00002_00006)
3916 -3931 0
3917 -3932 0
3919 -3934 0
3921 -3936 0
3923 -3938 0
3925 -3940 0
3927 -3942 0
3929 -3944 0
c (variant_fields_00003_00002_00006<=max_left_00003_00002_00006)
9347 -3931 0
9348 -3932 0
9350 -3934 0
9352 -3936 0
9354 -3938 0
9356 -3940 0
9358 -3942 0
9360 -3944 0
c (SATLiteral(17513) \/ SATLiteral(17514))
17513 17514 0
c (max_left_00003_00002_00006<=max_left_00003_00002_00007)
3931 -3946 0
3932 -3947 0
3934 -3949 0
3936 -3951 0
3938 -3953 0
3940 -3955 0
3942 -3957 0
3944 -3959 0
c (variant_fields_00003_00002_00007<=max_left_00003_00002_00007)
9362 -3946 0
9363 -3947 0
9365 -3949 0
9367 -3951 0
9369 -3953 0
9371 -3955 0
9373 -3957 0
9375 -3959 0
c (SATLiteral(17515) \/ SATLiteral(17516))
17515 17516 0
c (max_left_00003_00002_00007<=max_left_00003_00002_00008)
3946 -3961 0
3947 -3962 0
3949 -3964 0
3951 -3966 0
3953 -3968 0
3955 -3970 0
3957 -3972 0
3959 -3974 0
c (variant_fields_00003_00002_00008<=max_left_00003_00002_00008)
9377 -3961 0
9378 -3962 0
9380 -3964 0
9382 -3966 0
9384 -3968 0
9386 -3970 0
9388 -3972 0
9390 -3974 0
c (SATLiteral(17517) \/ SATLiteral(17518))
17517 17518 0
c (max_left_00003_00002_00008<=max_left_00003_00002_00009)
3961 -3976 0
3962 -3977 0
3964 -3979 0
3966 -3981 0
3968 -3983 0
3970 -3985 0
3972 -3987 0
3974 -3989 0
c (variant_fields_00003_00002_00009<=max_left_00003_00002_00009)
9392 -3976 0
9393 -3977 0
9395 -3979 0
9397 -3981 0
9399 -3983 0
9401 -3985 0
9403 -3987 0
9405 -3989 0
c (SATLiteral(17519) \/ SATLiteral(17520))
17519 17520 0
c (variant_fields_00003_00003_00001<=max_left_00003_00003_00001)
9407 -3992 0
9408 -3993 0
9410 -3995 0
9412 -3997 0
9414 -3999 0
9416 -4001 0
9418 -4003 0
9420 -4005 0
c (variant_fields_00003_00003_00001=max_left_00003_00003_00001)
-9407 3992 0
-9409 3994 0
-9411 3996 0
-9413 3998 0
-9415 4000 0
-9417 4002 0
-9419 4004 0
-9421 4006 0
9420 -4005 0
-3992 9407 0
-3994 9409 0
-3996 9411 0
-3998 9413 0
-4000 9415 0
-4002 9417 0
-4004 9419 0
-4006 9421 0
4005 -9420 0
c (max_left_00003_00003_00001<=max_left_00003_00003_00002)
3992 -4007 0
3993 -4008 0
3995 -4010 0
3997 -4012 0
3999 -4014 0
4001 -4016 0
4003 -4018 0
4005 -4020 0
c (variant_fields_00003_00003_00002<=max_left_00003_00003_00002)
9422 -4007 0
9423 -4008 0
9425 -4010 0
9427 -4012 0
9429 -4014 0
9431 -4016 0
9433 -4018 0
9435 -4020 0
c (SATLiteral(17521) \/ SATLiteral(17522))
17521 17522 0
c (max_left_00003_00003_00002<=max_left_00003_00003_00003)
4007 -4022 0
4008 -4023 0
4010 -4025 0
4012 -4027 0
4014 -4029 0
4016 -4031 0
4018 -4033 0
4020 -4035 0
c (variant_fields_00003_00003_00003<=max_left_00003_00003_00003)
9437 -4022 0
9438 -4023 0
9440 -4025 0
9442 -4027 0
9444 -4029 0
9446 -4031 0
9448 -4033 0
9450 -4035 0
c (SATLiteral(17523) \/ SATLiteral(17524))
17523 17524 0
c (max_left_00003_00003_00003<=max_left_00003_00003_00004)
4022 -4037 0
4023 -4038 0
4025 -4040 0
4027 -4042 0
4029 -4044 0
4031 -4046 0
4033 -4048 0
4035 -4050 0
c (variant_fields_00003_00003_00004<=max_left_00003_00003_00004)
9452 -4037 0
9453 -4038 0
9455 -4040 0
9457 -4042 0
9459 -4044 0
9461 -4046 0
9463 -4048 0
9465 -4050 0
c (SATLiteral(17525) \/ SATLiteral(17526))
17525 17526 0
c (max_left_00003_00003_00004<=max_left_00003_00003_00005)
4037 -4052 0
4038 -4053 0
4040 -4055 0
4042 -4057 0
4044 -4059 0
4046 -4061 0
4048 -4063 0
4050 -4065 0
c (variant_fields_00003_00003_00005<=max_left_00003_00003_00005)
9467 -4052 0
9468 -4053 0
9470 -4055 0
9472 -4057 0
9474 -4059 0
9476 -4061 0
9478 -4063 0
9480 -4065 0
c (SATLiteral(17527) \/ SATLiteral(17528))
17527 17528 0
c (max_left_00003_00003_00005<=max_left_00003_00003_00006)
4052 -4067 0
4053 -4068 0
4055 -4070 0
4057 -4072 0
4059 -4074 0
4061 -4076 0
4063 -4078 0
4065 -4080 0
c (variant_fields_00003_00003_00006<=max_left_00003_00003_00006)
9482 -4067 0
9483 -4068 0
9485 -4070 0
9487 -4072 0
9489 -4074 0
9491 -4076 0
9493 -4078 0
9495 -4080 0
c (SATLiteral(17529) \/ SATLiteral(17530))
17529 17530 0
c (max_left_00003_00003_00006<=max_left_00003_00003_00007)
4067 -4082 0
4068 -4083 0
4070 -4085 0
4072 -4087 0
4074 -4089 0
4076 -4091 0
4078 -4093 0
4080 -4095 0
c (variant_fields_00003_00003_00007<=max_left_00003_00003_00007)
9497 -4082 0
9498 -4083 0
9500 -4085 0
9502 -4087 0
9504 -4089 0
9506 -4091 0
9508 -4093 0
9510 -4095 0
c (SATLiteral(17531) \/ SATLiteral(17532))
17531 17532 0
c (max_left_00003_00003_00007<=max_left_00003_00003_00008)
4082 -4097 0
4083 -4098 0
4085 -4100 0
4087 -4102 0
4089 -4104 0
4091 -4106 0
4093 -4108 0
4095 -4110 0
c (variant_fields_00003_00003_00008<=max_left_00003_00003_00008)
9512 -4097 0
9513 -4098 0
9515 -4100 0
9517 -4102 0
9519 -4104 0
9521 -4106 0
9523 -4108 0
9525 -4110 0
c (SATLiteral(17533) \/ SATLiteral(17534))
17533 17534 0
c (max_left_00003_00003_00008<=max_left_00003_00003_00009)
4097 -4112 0
4098 -4113 0
4100 -4115 0
4102 -4117 0
4104 -4119 0
4106 -4121 0
4108 -4123 0
4110 -4125 0
c (variant_fields_00003_00003_00009<=max_left_00003_00003_00009)
9527 -4112 0
9528 -4113 0
9530 -4115 0
9532 -4117 0
9534 -4119 0
9536 -4121 0
9538 -4123 0
9540 -4125 0
c (SATLiteral(17535) \/ SATLiteral(17536))
17535 17536 0
c (variant_fields_00003_00004_00001<=max_left_00003_00004_00001)
9542 -4128 0
9543 -4129 0
9545 -4131 0
9547 -4133 0
9549 -4135 0
9551 -4137 0
9553 -4139 0
9555 -4141 0
c (variant_fields_00003_00004_00001=max_left_00003_00004_00001)
-9542 4128 0
-9544 4130 0
-9546 4132 0
-9548 4134 0
-9550 4136 0
-9552 4138 0
-9554 4140 0
-9556 4142 0
9555 -4141 0
-4128 9542 0
-4130 9544 0
-4132 9546 0
-4134 9548 0
-4136 9550 0
-4138 9552 0
-4140 9554 0
-4142 9556 0
4141 -9555 0
c (max_left_00003_00004_00001<=max_left_00003_00004_00002)
4128 -4143 0
4129 -4144 0
4131 -4146 0
4133 -4148 0
4135 -4150 0
4137 -4152 0
4139 -4154 0
4141 -4156 0
c (variant_fields_00003_00004_00002<=max_left_00003_00004_00002)
9557 -4143 0
9558 -4144 0
9560 -4146 0
9562 -4148 0
9564 -4150 0
9566 -4152 0
9568 -4154 0
9570 -4156 0
c (SATLiteral(17537) \/ SATLiteral(17538))
17537 17538 0
c (max_left_00003_00004_00002<=max_left_00003_00004_00003)
4143 -4158 0
4144 -4159 0
4146 -4161 0
4148 -4163 0
4150 -4165 0
4152 -4167 0
4154 -4169 0
4156 -4171 0
c (variant_fields_00003_00004_00003<=max_left_00003_00004_00003)
9572 -4158 0
9573 -4159 0
9575 -4161 0
9577 -4163 0
9579 -4165 0
9581 -4167 0
9583 -4169 0
9585 -4171 0
c (SATLiteral(17539) \/ SATLiteral(17540))
17539 17540 0
c (max_left_00003_00004_00003<=max_left_00003_00004_00004)
4158 -4173 0
4159 -4174 0
4161 -4176 0
4163 -4178 0
4165 -4180 0
4167 -4182 0
4169 -4184 0
4171 -4186 0
c (variant_fields_00003_00004_00004<=max_left_00003_00004_00004)
9587 -4173 0
9588 -4174 0
9590 -4176 0
9592 -4178 0
9594 -4180 0
9596 -4182 0
9598 -4184 0
9600 -4186 0
c (SATLiteral(17541) \/ SATLiteral(17542))
17541 17542 0
c (max_left_00003_00004_00004<=max_left_00003_00004_00005)
4173 -4188 0
4174 -4189 0
4176 -4191 0
4178 -4193 0
4180 -4195 0
4182 -4197 0
4184 -4199 0
4186 -4201 0
c (variant_fields_00003_00004_00005<=max_left_00003_00004_00005)
9602 -4188 0
9603 -4189 0
9605 -4191 0
9607 -4193 0
9609 -4195 0
9611 -4197 0
9613 -4199 0
9615 -4201 0
c (SATLiteral(17543) \/ SATLiteral(17544))
17543 17544 0
c (max_left_00003_00004_00005<=max_left_00003_00004_00006)
4188 -4203 0
4189 -4204 0
4191 -4206 0
4193 -4208 0
4195 -4210 0
4197 -4212 0
4199 -4214 0
4201 -4216 0
c (variant_fields_00003_00004_00006<=max_left_00003_00004_00006)
9617 -4203 0
9618 -4204 0
9620 -4206 0
9622 -4208 0
9624 -4210 0
9626 -4212 0
9628 -4214 0
9630 -4216 0
c (SATLiteral(17545) \/ SATLiteral(17546))
17545 17546 0
c (max_left_00003_00004_00006<=max_left_00003_00004_00007)
4203 -4218 0
4204 -4219 0
4206 -4221 0
4208 -4223 0
4210 -4225 0
4212 -4227 0
4214 -4229 0
4216 -4231 0
c (variant_fields_00003_00004_00007<=max_left_00003_00004_00007)
9632 -4218 0
9633 -4219 0
9635 -4221 0
9637 -4223 0
9639 -4225 0
9641 -4227 0
9643 -4229 0
9645 -4231 0
c (SATLiteral(17547) \/ SATLiteral(17548))
17547 17548 0
c (max_left_00003_00004_00007<=max_left_00003_00004_00008)
4218 -4233 0
4219 -4234 0
4221 -4236 0
4223 -4238 0
4225 -4240 0
4227 -4242 0
4229 -4244 0
4231 -4246 0
c (variant_fields_00003_00004_00008<=max_left_00003_00004_00008)
9647 -4233 0
9648 -4234 0
9650 -4236 0
9652 -4238 0
9654 -4240 0
9656 -4242 0
9658 -4244 0
9660 -4246 0
c (SATLiteral(17549) \/ SATLiteral(17550))
17549 17550 0
c (max_left_00003_00004_00008<=max_left_00003_00004_00009)
4233 -4248 0
4234 -4249 0
4236 -4251 0
4238 -4253 0
4240 -4255 0
4242 -4257 0
4244 -4259 0
4246 -4261 0
c (variant_fields_00003_00004_00009<=max_left_00003_00004_00009)
9662 -4248 0
9663 -4249 0
9665 -4251 0
9667 -4253 0
9669 -4255 0
9671 -4257 0
9673 -4259 0
9675 -4261 0
c (SATLiteral(17551) \/ SATLiteral(17552))
17551 17552 0
c (variant_fields_00003_00005_00001<=max_left_00003_00005_00001)
9677 -4264 0
9678 -4265 0
9680 -4267 0
9682 -4269 0
9684 -4271 0
9686 -4273 0
9688 -4275 0
9690 -4277 0
c (variant_fields_00003_00005_00001=max_left_00003_00005_00001)
-9677 4264 0
-9679 4266 0
-9681 4268 0
-9683 4270 0
-9685 4272 0
-9687 4274 0
-9689 4276 0
-9691 4278 0
9690 -4277 0
-4264 9677 0
-4266 9679 0
-4268 9681 0
-4270 9683 0
-4272 9685 0
-4274 9687 0
-4276 9689 0
-4278 9691 0
4277 -9690 0
c (max_left_00003_00005_00001<=max_left_00003_00005_00002)
4264 -4279 0
4265 -4280 0
4267 -4282 0
4269 -4284 0
4271 -4286 0
4273 -4288 0
4275 -4290 0
4277 -4292 0
c (variant_fields_00003_00005_00002<=max_left_00003_00005_00002)
9692 -4279 0
9693 -4280 0
9695 -4282 0
9697 -4284 0
9699 -4286 0
9701 -4288 0
9703 -4290 0
9705 -4292 0
c (SATLiteral(17553) \/ SATLiteral(17554))
17553 17554 0
c (max_left_00003_00005_00002<=max_left_00003_00005_00003)
4279 -4294 0
4280 -4295 0
4282 -4297 0
4284 -4299 0
4286 -4301 0
4288 -4303 0
4290 -4305 0
4292 -4307 0
c (variant_fields_00003_00005_00003<=max_left_00003_00005_00003)
9707 -4294 0
9708 -4295 0
9710 -4297 0
9712 -4299 0
9714 -4301 0
9716 -4303 0
9718 -4305 0
9720 -4307 0
c (SATLiteral(17555) \/ SATLiteral(17556))
17555 17556 0
c (max_left_00003_00005_00003<=max_left_00003_00005_00004)
4294 -4309 0
4295 -4310 0
4297 -4312 0
4299 -4314 0
4301 -4316 0
4303 -4318 0
4305 -4320 0
4307 -4322 0
c (variant_fields_00003_00005_00004<=max_left_00003_00005_00004)
9722 -4309 0
9723 -4310 0
9725 -4312 0
9727 -4314 0
9729 -4316 0
9731 -4318 0
9733 -4320 0
9735 -4322 0
c (SATLiteral(17557) \/ SATLiteral(17558))
17557 17558 0
c (max_left_00003_00005_00004<=max_left_00003_00005_00005)
4309 -4324 0
4310 -4325 0
4312 -4327 0
4314 -4329 0
4316 -4331 0
4318 -4333 0
4320 -4335 0
4322 -4337 0
c (variant_fields_00003_00005_00005<=max_left_00003_00005_00005)
9737 -4324 0
9738 -4325 0
9740 -4327 0
9742 -4329 0
9744 -4331 0
9746 -4333 0
9748 -4335 0
9750 -4337 0
c (SATLiteral(17559) \/ SATLiteral(17560))
17559 17560 0
c (max_left_00003_00005_00005<=max_left_00003_00005_00006)
4324 -4339 0
4325 -4340 0
4327 -4342 0
4329 -4344 0
4331 -4346 0
4333 -4348 0
4335 -4350 0
4337 -4352 0
c (variant_fields_00003_00005_00006<=max_left_00003_00005_00006)
9752 -4339 0
9753 -4340 0
9755 -4342 0
9757 -4344 0
9759 -4346 0
9761 -4348 0
9763 -4350 0
9765 -4352 0
c (SATLiteral(17561) \/ SATLiteral(17562))
17561 17562 0
c (max_left_00003_00005_00006<=max_left_00003_00005_00007)
4339 -4354 0
4340 -4355 0
4342 -4357 0
4344 -4359 0
4346 -4361 0
4348 -4363 0
4350 -4365 0
4352 -4367 0
c (variant_fields_00003_00005_00007<=max_left_00003_00005_00007)
9767 -4354 0
9768 -4355 0
9770 -4357 0
9772 -4359 0
9774 -4361 0
9776 -4363 0
9778 -4365 0
9780 -4367 0
c (SATLiteral(17563) \/ SATLiteral(17564))
17563 17564 0
c (max_left_00003_00005_00007<=max_left_00003_00005_00008)
4354 -4369 0
4355 -4370 0
4357 -4372 0
4359 -4374 0
4361 -4376 0
4363 -4378 0
4365 -4380 0
4367 -4382 0
c (variant_fields_00003_00005_00008<=max_left_00003_00005_00008)
9782 -4369 0
9783 -4370 0
9785 -4372 0
9787 -4374 0
9789 -4376 0
9791 -4378 0
9793 -4380 0
9795 -4382 0
c (SATLiteral(17565) \/ SATLiteral(17566))
17565 17566 0
c (max_left_00003_00005_00008<=max_left_00003_00005_00009)
4369 -4384 0
4370 -4385 0
4372 -4387 0
4374 -4389 0
4376 -4391 0
4378 -4393 0
4380 -4395 0
4382 -4397 0
c (variant_fields_00003_00005_00009<=max_left_00003_00005_00009)
9797 -4384 0
9798 -4385 0
9800 -4387 0
9802 -4389 0
9804 -4391 0
9806 -4393 0
9808 -4395 0
9810 -4397 0
c (SATLiteral(17567) \/ SATLiteral(17568))
17567 17568 0
c (variant_fields_00003_00006_00001<=max_left_00003_00006_00001)
9812 -4400 0
9813 -4401 0
9815 -4403 0
9817 -4405 0
9819 -4407 0
9821 -4409 0
9823 -4411 0
9825 -4413 0
c (variant_fields_00003_00006_00001=max_left_00003_00006_00001)
-9812 4400 0
-9814 4402 0
-9816 4404 0
-9818 4406 0
-9820 4408 0
-9822 4410 0
-9824 4412 0
-9826 4414 0
9825 -4413 0
-4400 9812 0
-4402 9814 0
-4404 9816 0
-4406 9818 0
-4408 9820 0
-4410 9822 0
-4412 9824 0
-4414 9826 0
4413 -9825 0
c (variant_fields_00003_00006_00002<=max_left_00003_00006_00002)
9827 -4415 0
9828 -4416 0
9830 -4418 0
9832 -4420 0
9834 -4422 0
9836 -4424 0
9838 -4426 0
9840 -4428 0
c (max_left_00003_00006_00001<=max_left_00003_00006_00002)
4400 -4415 0
4401 -4416 0
4403 -4418 0
4405 -4420 0
4407 -4422 0
4409 -4424 0
4411 -4426 0
4413 -4428 0
c (SATLiteral(17569) \/ SATLiteral(17570))
17569 17570 0
c (variant_fields_00003_00006_00003<=max_left_00003_00006_00003)
9842 -4430 0
9843 -4431 0
9845 -4433 0
9847 -4435 0
9849 -4437 0
9851 -4439 0
9853 -4441 0
9855 -4443 0
c (max_left_00003_00006_00002<=max_left_00003_00006_00003)
4415 -4430 0
4416 -4431 0
4418 -4433 0
4420 -4435 0
4422 -4437 0
4424 -4439 0
4426 -4441 0
4428 -4443 0
c (SATLiteral(17571) \/ SATLiteral(17572))
17571 17572 0
c (variant_fields_00003_00006_00004<=max_left_00003_00006_00004)
9857 -4445 0
9858 -4446 0
9860 -4448 0
9862 -4450 0
9864 -4452 0
9866 -4454 0
9868 -4456 0
9870 -4458 0
c (max_left_00003_00006_00003<=max_left_00003_00006_00004)
4430 -4445 0
4431 -4446 0
4433 -4448 0
4435 -4450 0
4437 -4452 0
4439 -4454 0
4441 -4456 0
4443 -4458 0
c (SATLiteral(17573) \/ SATLiteral(17574))
17573 17574 0
c (variant_fields_00003_00006_00005<=max_left_00003_00006_00005)
9872 -4460 0
9873 -4461 0
9875 -4463 0
9877 -4465 0
9879 -4467 0
9881 -4469 0
9883 -4471 0
9885 -4473 0
c (max_left_00003_00006_00004<=max_left_00003_00006_00005)
4445 -4460 0
4446 -4461 0
4448 -4463 0
4450 -4465 0
4452 -4467 0
4454 -4469 0
4456 -4471 0
4458 -4473 0
c (SATLiteral(17575) \/ SATLiteral(17576))
17575 17576 0
c (variant_fields_00003_00006_00006<=max_left_00003_00006_00006)
9887 -4475 0
9888 -4476 0
9890 -4478 0
9892 -4480 0
9894 -4482 0
9896 -4484 0
9898 -4486 0
9900 -4488 0
c (max_left_00003_00006_00005<=max_left_00003_00006_00006)
4460 -4475 0
4461 -4476 0
4463 -4478 0
4465 -4480 0
4467 -4482 0
4469 -4484 0
4471 -4486 0
4473 -4488 0
c (SATLiteral(17577) \/ SATLiteral(17578))
17577 17578 0
c (variant_fields_00003_00006_00007<=max_left_00003_00006_00007)
9902 -4490 0
9903 -4491 0
9905 -4493 0
9907 -4495 0
9909 -4497 0
9911 -4499 0
9913 -4501 0
9915 -4503 0
c (max_left_00003_00006_00006<=max_left_00003_00006_00007)
4475 -4490 0
4476 -4491 0
4478 -4493 0
4480 -4495 0
4482 -4497 0
4484 -4499 0
4486 -4501 0
4488 -4503 0
c (SATLiteral(17579) \/ SATLiteral(17580))
17579 17580 0
c (variant_fields_00003_00006_00008<=max_left_00003_00006_00008)
9917 -4505 0
9918 -4506 0
9920 -4508 0
9922 -4510 0
9924 -4512 0
9926 -4514 0
9928 -4516 0
9930 -4518 0
c (max_left_00003_00006_00007<=max_left_00003_00006_00008)
4490 -4505 0
4491 -4506 0
4493 -4508 0
4495 -4510 0
4497 -4512 0
4499 -4514 0
4501 -4516 0
4503 -4518 0
c (SATLiteral(17581) \/ SATLiteral(17582))
17581 17582 0
c (variant_fields_00003_00006_00009<=max_left_00003_00006_00009)
9932 -4520 0
9933 -4521 0
9935 -4523 0
9937 -4525 0
9939 -4527 0
9941 -4529 0
9943 -4531 0
9945 -4533 0
c (max_left_00003_00006_00008<=max_left_00003_00006_00009)
4505 -4520 0
4506 -4521 0
4508 -4523 0
4510 -4525 0
4512 -4527 0
4514 -4529 0
4516 -4531 0
4518 -4533 0
c (SATLiteral(17583) \/ SATLiteral(17584))
17583 17584 0
c (variant_fields_00003_00007_00001<=max_left_00003_00007_00001)
9947 -4536 0
9948 -4537 0
9950 -4539 0
9952 -4541 0
9954 -4543 0
9956 -4545 0
9958 -4547 0
9960 -4549 0
c (variant_fields_00003_00007_00001=max_left_00003_00007_00001)
-9947 4536 0
-9949 4538 0
-9951 4540 0
-9953 4542 0
-9955 4544 0
-9957 4546 0
-9959 4548 0
-9961 4550 0
9960 -4549 0
-4536 9947 0
-4538 9949 0
-4540 9951 0
-4542 9953 0
-4544 9955 0
-4546 9957 0
-4548 9959 0
-4550 9961 0
4549 -9960 0
c (max_left_00003_00007_00001<=max_left_00003_00007_00002)
4536 -4551 0
4537 -4552 0
4539 -4554 0
4541 -4556 0
4543 -4558 0
4545 -4560 0
4547 -4562 0
4549 -4564 0
c (variant_fields_00003_00007_00002<=max_left_00003_00007_00002)
9962 -4551 0
9963 -4552 0
9965 -4554 0
9967 -4556 0
9969 -4558 0
9971 -4560 0
9973 -4562 0
9975 -4564 0
c (SATLiteral(17585) \/ SATLiteral(17586))
17585 17586 0
c (max_left_00003_00007_00002<=max_left_00003_00007_00003)
4551 -4566 0
4552 -4567 0
4554 -4569 0
4556 -4571 0
4558 -4573 0
4560 -4575 0
4562 -4577 0
4564 -4579 0
c (variant_fields_00003_00007_00003<=max_left_00003_00007_00003)
9977 -4566 0
9978 -4567 0
9980 -4569 0
9982 -4571 0
9984 -4573 0
9986 -4575 0
9988 -4577 0
9990 -4579 0
c (SATLiteral(17587) \/ SATLiteral(17588))
17587 17588 0
c (max_left_00003_00007_00003<=max_left_00003_00007_00004)
4566 -4581 0
4567 -4582 0
4569 -4584 0
4571 -4586 0
4573 -4588 0
4575 -4590 0
4577 -4592 0
4579 -4594 0
c (variant_fields_00003_00007_00004<=max_left_00003_00007_00004)
9992 -4581 0
9993 -4582 0
9995 -4584 0
9997 -4586 0
9999 -4588 0
10001 -4590 0
10003 -4592 0
10005 -4594 0
c (SATLiteral(17589) \/ SATLiteral(17590))
17589 17590 0
c (max_left_00003_00007_00004<=max_left_00003_00007_00005)
4581 -4596 0
4582 -4597 0
4584 -4599 0
4586 -4601 0
4588 -4603 0
4590 -4605 0
4592 -4607 0
4594 -4609 0
c (variant_fields_00003_00007_00005<=max_left_00003_00007_00005)
10007 -4596 0
10008 -4597 0
10010 -4599 0
10012 -4601 0
10014 -4603 0
10016 -4605 0
10018 -4607 0
10020 -4609 0
c (SATLiteral(17591) \/ SATLiteral(17592))
17591 17592 0
c (max_left_00003_00007_00005<=max_left_00003_00007_00006)
4596 -4611 0
4597 -4612 0
4599 -4614 0
4601 -4616 0
4603 -4618 0
4605 -4620 0
4607 -4622 0
4609 -4624 0
c (variant_fields_00003_00007_00006<=max_left_00003_00007_00006)
10022 -4611 0
10023 -4612 0
10025 -4614 0
10027 -4616 0
10029 -4618 0
10031 -4620 0
10033 -4622 0
10035 -4624 0
c (SATLiteral(17593) \/ SATLiteral(17594))
17593 17594 0
c (max_left_00003_00007_00006<=max_left_00003_00007_00007)
4611 -4626 0
4612 -4627 0
4614 -4629 0
4616 -4631 0
4618 -4633 0
4620 -4635 0
4622 -4637 0
4624 -4639 0
c (variant_fields_00003_00007_00007<=max_left_00003_00007_00007)
10037 -4626 0
10038 -4627 0
10040 -4629 0
10042 -4631 0
10044 -4633 0
10046 -4635 0
10048 -4637 0
10050 -4639 0
c (SATLiteral(17595) \/ SATLiteral(17596))
17595 17596 0
c (max_left_00003_00007_00007<=max_left_00003_00007_00008)
4626 -4641 0
4627 -4642 0
4629 -4644 0
4631 -4646 0
4633 -4648 0
4635 -4650 0
4637 -4652 0
4639 -4654 0
c (variant_fields_00003_00007_00008<=max_left_00003_00007_00008)
10052 -4641 0
10053 -4642 0
10055 -4644 0
10057 -4646 0
10059 -4648 0
10061 -4650 0
10063 -4652 0
10065 -4654 0
c (SATLiteral(17597) \/ SATLiteral(17598))
17597 17598 0
c (max_left_00003_00007_00008<=max_left_00003_00007_00009)
4641 -4656 0
4642 -4657 0
4644 -4659 0
4646 -4661 0
4648 -4663 0
4650 -4665 0
4652 -4667 0
4654 -4669 0
c (variant_fields_00003_00007_00009<=max_left_00003_00007_00009)
10067 -4656 0
10068 -4657 0
10070 -4659 0
10072 -4661 0
10074 -4663 0
10076 -4665 0
10078 -4667 0
10080 -4669 0
c (SATLiteral(17599) \/ SATLiteral(17600))
17599 17600 0
c (variant_fields_00003_00008_00001<=max_left_00003_00008_00001)
10082 -4672 0
10083 -4673 0
10085 -4675 0
10087 -4677 0
10089 -4679 0
10091 -4681 0
10093 -4683 0
10095 -4685 0
c (variant_fields_00003_00008_00001=max_left_00003_00008_00001)
-10082 4672 0
-10084 4674 0
-10086 4676 0
-10088 4678 0
-10090 4680 0
-10092 4682 0
-10094 4684 0
-10096 4686 0
10095 -4685 0
-4672 10082 0
-4674 10084 0
-4676 10086 0
-4678 10088 0
-4680 10090 0
-4682 10092 0
-4684 10094 0
-4686 10096 0
4685 -10095 0
c (max_left_00003_00008_00001<=max_left_00003_00008_00002)
4672 -4687 0
4673 -4688 0
4675 -4690 0
4677 -4692 0
4679 -4694 0
4681 -4696 0
4683 -4698 0
4685 -4700 0
c (variant_fields_00003_00008_00002<=max_left_00003_00008_00002)
10097 -4687 0
10098 -4688 0
10100 -4690 0
10102 -4692 0
10104 -4694 0
10106 -4696 0
10108 -4698 0
10110 -4700 0
c (SATLiteral(17601) \/ SATLiteral(17602))
17601 17602 0
c (max_left_00003_00008_00002<=max_left_00003_00008_00003)
4687 -4702 0
4688 -4703 0
4690 -4705 0
4692 -4707 0
4694 -4709 0
4696 -4711 0
4698 -4713 0
4700 -4715 0
c (variant_fields_00003_00008_00003<=max_left_00003_00008_00003)
10112 -4702 0
10113 -4703 0
10115 -4705 0
10117 -4707 0
10119 -4709 0
10121 -4711 0
10123 -4713 0
10125 -4715 0
c (SATLiteral(17603) \/ SATLiteral(17604))
17603 17604 0
c (max_left_00003_00008_00003<=max_left_00003_00008_00004)
4702 -4717 0
4703 -4718 0
4705 -4720 0
4707 -4722 0
4709 -4724 0
4711 -4726 0
4713 -4728 0
4715 -4730 0
c (variant_fields_00003_00008_00004<=max_left_00003_00008_00004)
10127 -4717 0
10128 -4718 0
10130 -4720 0
10132 -4722 0
10134 -4724 0
10136 -4726 0
10138 -4728 0
10140 -4730 0
c (SATLiteral(17605) \/ SATLiteral(17606))
17605 17606 0
c (max_left_00003_00008_00004<=max_left_00003_00008_00005)
4717 -4732 0
4718 -4733 0
4720 -4735 0
4722 -4737 0
4724 -4739 0
4726 -4741 0
4728 -4743 0
4730 -4745 0
c (variant_fields_00003_00008_00005<=max_left_00003_00008_00005)
10142 -4732 0
10143 -4733 0
10145 -4735 0
10147 -4737 0
10149 -4739 0
10151 -4741 0
10153 -4743 0
10155 -4745 0
c (SATLiteral(17607) \/ SATLiteral(17608))
17607 17608 0
c (max_left_00003_00008_00005<=max_left_00003_00008_00006)
4732 -4747 0
4733 -4748 0
4735 -4750 0
4737 -4752 0
4739 -4754 0
4741 -4756 0
4743 -4758 0
4745 -4760 0
c (variant_fields_00003_00008_00006<=max_left_00003_00008_00006)
10157 -4747 0
10158 -4748 0
10160 -4750 0
10162 -4752 0
10164 -4754 0
10166 -4756 0
10168 -4758 0
10170 -4760 0
c (SATLiteral(17609) \/ SATLiteral(17610))
17609 17610 0
c (max_left_00003_00008_00006<=max_left_00003_00008_00007)
4747 -4762 0
4748 -4763 0
4750 -4765 0
4752 -4767 0
4754 -4769 0
4756 -4771 0
4758 -4773 0
4760 -4775 0
c (variant_fields_00003_00008_00007<=max_left_00003_00008_00007)
10172 -4762 0
10173 -4763 0
10175 -4765 0
10177 -4767 0
10179 -4769 0
10181 -4771 0
10183 -4773 0
10185 -4775 0
c (SATLiteral(17611) \/ SATLiteral(17612))
17611 17612 0
c (max_left_00003_00008_00007<=max_left_00003_00008_00008)
4762 -4777 0
4763 -4778 0
4765 -4780 0
4767 -4782 0
4769 -4784 0
4771 -4786 0
4773 -4788 0
4775 -4790 0
c (variant_fields_00003_00008_00008<=max_left_00003_00008_00008)
10187 -4777 0
10188 -4778 0
10190 -4780 0
10192 -4782 0
10194 -4784 0
10196 -4786 0
10198 -4788 0
10200 -4790 0
c (SATLiteral(17613) \/ SATLiteral(17614))
17613 17614 0
c (max_left_00003_00008_00008<=max_left_00003_00008_00009)
4777 -4792 0
4778 -4793 0
4780 -4795 0
4782 -4797 0
4784 -4799 0
4786 -4801 0
4788 -4803 0
4790 -4805 0
c (variant_fields_00003_00008_00009<=max_left_00003_00008_00009)
10202 -4792 0
10203 -4793 0
10205 -4795 0
10207 -4797 0
10209 -4799 0
10211 -4801 0
10213 -4803 0
10215 -4805 0
c (SATLiteral(17615) \/ SATLiteral(17616))
17615 17616 0
c (variant_fields_00003_00009_00001<=max_left_00003_00009_00001)
10217 -4808 0
10218 -4809 0
10220 -4811 0
10222 -4813 0
10224 -4815 0
10226 -4817 0
10228 -4819 0
10230 -4821 0
c (variant_fields_00003_00009_00001=max_left_00003_00009_00001)
-10217 4808 0
-10219 4810 0
-10221 4812 0
-10223 4814 0
-10225 4816 0
-10227 4818 0
-10229 4820 0
-10231 4822 0
10230 -4821 0
-4808 10217 0
-4810 10219 0
-4812 10221 0
-4814 10223 0
-4816 10225 0
-4818 10227 0
-4820 10229 0
-4822 10231 0
4821 -10230 0
c (max_left_00003_00009_00001<=max_left_00003_00009_00002)
4808 -4823 0
4809 -4824 0
4811 -4826 0
4813 -4828 0
4815 -4830 0
4817 -4832 0
4819 -4834 0
4821 -4836 0
c (variant_fields_00003_00009_00002<=max_left_00003_00009_00002)
10232 -4823 0
10233 -4824 0
10235 -4826 0
10237 -4828 0
10239 -4830 0
10241 -4832 0
10243 -4834 0
10245 -4836 0
c (SATLiteral(17617) \/ SATLiteral(17618))
17617 17618 0
c (max_left_00003_00009_00002<=max_left_00003_00009_00003)
4823 -4838 0
4824 -4839 0
4826 -4841 0
4828 -4843 0
4830 -4845 0
4832 -4847 0
4834 -4849 0
4836 -4851 0
c (variant_fields_00003_00009_00003<=max_left_00003_00009_00003)
10247 -4838 0
10248 -4839 0
10250 -4841 0
10252 -4843 0
10254 -4845 0
10256 -4847 0
10258 -4849 0
10260 -4851 0
c (SATLiteral(17619) \/ SATLiteral(17620))
17619 17620 0
c (max_left_00003_00009_00003<=max_left_00003_00009_00004)
4838 -4853 0
4839 -4854 0
4841 -4856 0
4843 -4858 0
4845 -4860 0
4847 -4862 0
4849 -4864 0
4851 -4866 0
c (variant_fields_00003_00009_00004<=max_left_00003_00009_00004)
10262 -4853 0
10263 -4854 0
10265 -4856 0
10267 -4858 0
10269 -4860 0
10271 -4862 0
10273 -4864 0
10275 -4866 0
c (SATLiteral(17621) \/ SATLiteral(17622))
17621 17622 0
c (max_left_00003_00009_00004<=max_left_00003_00009_00005)
4853 -4868 0
4854 -4869 0
4856 -4871 0
4858 -4873 0
4860 -4875 0
4862 -4877 0
4864 -4879 0
4866 -4881 0
c (variant_fields_00003_00009_00005<=max_left_00003_00009_00005)
10277 -4868 0
10278 -4869 0
10280 -4871 0
10282 -4873 0
10284 -4875 0
10286 -4877 0
10288 -4879 0
10290 -4881 0
c (SATLiteral(17623) \/ SATLiteral(17624))
17623 17624 0
c (max_left_00003_00009_00005<=max_left_00003_00009_00006)
4868 -4883 0
4869 -4884 0
4871 -4886 0
4873 -4888 0
4875 -4890 0
4877 -4892 0
4879 -4894 0
4881 -4896 0
c (variant_fields_00003_00009_00006<=max_left_00003_00009_00006)
10292 -4883 0
10293 -4884 0
10295 -4886 0
10297 -4888 0
10299 -4890 0
10301 -4892 0
10303 -4894 0
10305 -4896 0
c (SATLiteral(17625) \/ SATLiteral(17626))
17625 17626 0
c (max_left_00003_00009_00006<=max_left_00003_00009_00007)
4883 -4898 0
4884 -4899 0
4886 -4901 0
4888 -4903 0
4890 -4905 0
4892 -4907 0
4894 -4909 0
4896 -4911 0
c (variant_fields_00003_00009_00007<=max_left_00003_00009_00007)
10307 -4898 0
10308 -4899 0
10310 -4901 0
10312 -4903 0
10314 -4905 0
10316 -4907 0
10318 -4909 0
10320 -4911 0
c (SATLiteral(17627) \/ SATLiteral(17628))
17627 17628 0
c (max_left_00003_00009_00007<=max_left_00003_00009_00008)
4898 -4913 0
4899 -4914 0
4901 -4916 0
4903 -4918 0
4905 -4920 0
4907 -4922 0
4909 -4924 0
4911 -4926 0
c (variant_fields_00003_00009_00008<=max_left_00003_00009_00008)
10322 -4913 0
10323 -4914 0
10325 -4916 0
10327 -4918 0
10329 -4920 0
10331 -4922 0
10333 -4924 0
10335 -4926 0
c (SATLiteral(17629) \/ SATLiteral(17630))
17629 17630 0
c (max_left_00003_00009_00008<=max_left_00003_00009_00009)
4913 -4928 0
4914 -4929 0
4916 -4931 0
4918 -4933 0
4920 -4935 0
4922 -4937 0
4924 -4939 0
4926 -4941 0
c (variant_fields_00003_00009_00009<=max_left_00003_00009_00009)
10337 -4928 0
10338 -4929 0
10340 -4931 0
10342 -4933 0
10344 -4935 0
10346 -4937 0
10348 -4939 0
10350 -4941 0
c (SATLiteral(17631) \/ SATLiteral(17632))
17631 17632 0
c (variant_fields_00004_00001_00001<=max_left_00004_00001_00001)
10352 -4944 0
10353 -4945 0
10355 -4947 0
10357 -4949 0
10359 -4951 0
10361 -4953 0
10363 -4955 0
10365 -4957 0
c (variant_fields_00004_00001_00001=max_left_00004_00001_00001)
-10352 4944 0
-10354 4946 0
-10356 4948 0
-10358 4950 0
-10360 4952 0
-10362 4954 0
-10364 4956 0
-10366 4958 0
10365 -4957 0
-4944 10352 0
-4946 10354 0
-4948 10356 0
-4950 10358 0
-4952 10360 0
-4954 10362 0
-4956 10364 0
-4958 10366 0
4957 -10365 0
c (max_left_00004_00001_00001<=max_left_00004_00001_00002)
4944 -4959 0
4945 -4960 0
4947 -4962 0
4949 -4964 0
4951 -4966 0
4953 -4968 0
4955 -4970 0
4957 -4972 0
c (variant_fields_00004_00001_00002<=max_left_00004_00001_00002)
10367 -4959 0
10368 -4960 0
10370 -4962 0
10372 -4964 0
10374 -4966 0
10376 -4968 0
10378 -4970 0
10380 -4972 0
c (SATLiteral(17633) \/ SATLiteral(17634))
17633 17634 0
c (max_left_00004_00001_00002<=max_left_00004_00001_00003)
4959 -4974 0
4960 -4975 0
4962 -4977 0
4964 -4979 0
4966 -4981 0
4968 -4983 0
4970 -4985 0
4972 -4987 0
c (variant_fields_00004_00001_00003<=max_left_00004_00001_00003)
10382 -4974 0
10383 -4975 0
10385 -4977 0
10387 -4979 0
10389 -4981 0
10391 -4983 0
10393 -4985 0
10395 -4987 0
c (SATLiteral(17635) \/ SATLiteral(17636))
17635 17636 0
c (max_left_00004_00001_00003<=max_left_00004_00001_00004)
4974 -4989 0
4975 -4990 0
4977 -4992 0
4979 -4994 0
4981 -4996 0
4983 -4998 0
4985 -5000 0
4987 -5002 0
c (variant_fields_00004_00001_00004<=max_left_00004_00001_00004)
10397 -4989 0
10398 -4990 0
10400 -4992 0
10402 -4994 0
10404 -4996 0
10406 -4998 0
10408 -5000 0
10410 -5002 0
c (SATLiteral(17637) \/ SATLiteral(17638))
17637 17638 0
c (max_left_00004_00001_00004<=max_left_00004_00001_00005)
4989 -5004 0
4990 -5005 0
4992 -5007 0
4994 -5009 0
4996 -5011 0
4998 -5013 0
5000 -5015 0
5002 -5017 0
c (variant_fields_00004_00001_00005<=max_left_00004_00001_00005)
10412 -5004 0
10413 -5005 0
10415 -5007 0
10417 -5009 0
10419 -5011 0
10421 -5013 0
10423 -5015 0
10425 -5017 0
c (SATLiteral(17639) \/ SATLiteral(17640))
17639 17640 0
c (max_left_00004_00001_00005<=max_left_00004_00001_00006)
5004 -5019 0
5005 -5020 0
5007 -5022 0
5009 -5024 0
5011 -5026 0
5013 -5028 0
5015 -5030 0
5017 -5032 0
c (variant_fields_00004_00001_00006<=max_left_00004_00001_00006)
10427 -5019 0
10428 -5020 0
10430 -5022 0
10432 -5024 0
10434 -5026 0
10436 -5028 0
10438 -5030 0
10440 -5032 0
c (SATLiteral(17641) \/ SATLiteral(17642))
17641 17642 0
c (max_left_00004_00001_00006<=max_left_00004_00001_00007)
5019 -5034 0
5020 -5035 0
5022 -5037 0
5024 -5039 0
5026 -5041 0
5028 -5043 0
5030 -5045 0
5032 -5047 0
c (variant_fields_00004_00001_00007<=max_left_00004_00001_00007)
10442 -5034 0
10443 -5035 0
10445 -5037 0
10447 -5039 0
10449 -5041 0
10451 -5043 0
10453 -5045 0
10455 -5047 0
c (SATLiteral(17643) \/ SATLiteral(17644))
17643 17644 0
c (max_left_00004_00001_00007<=max_left_00004_00001_00008)
5034 -5049 0
5035 -5050 0
5037 -5052 0
5039 -5054 0
5041 -5056 0
5043 -5058 0
5045 -5060 0
5047 -5062 0
c (variant_fields_00004_00001_00008<=max_left_00004_00001_00008)
10457 -5049 0
10458 -5050 0
10460 -5052 0
10462 -5054 0
10464 -5056 0
10466 -5058 0
10468 -5060 0
10470 -5062 0
c (SATLiteral(17645) \/ SATLiteral(17646))
17645 17646 0
c (max_left_00004_00001_00008<=max_left_00004_00001_00009)
5049 -5064 0
5050 -5065 0
5052 -5067 0
5054 -5069 0
5056 -5071 0
5058 -5073 0
5060 -5075 0
5062 -5077 0
c (variant_fields_00004_00001_00009<=max_left_00004_00001_00009)
10472 -5064 0
10473 -5065 0
10475 -5067 0
10477 -5069 0
10479 -5071 0
10481 -5073 0
10483 -5075 0
10485 -5077 0
c (SATLiteral(17647) \/ SATLiteral(17648))
17647 17648 0
c (variant_fields_00004_00002_00001<=max_left_00004_00002_00001)
10487 -5080 0
10488 -5081 0
10490 -5083 0
10492 -5085 0
10494 -5087 0
10496 -5089 0
10498 -5091 0
10500 -5093 0
c (variant_fields_00004_00002_00001=max_left_00004_00002_00001)
-10487 5080 0
-10489 5082 0
-10491 5084 0
-10493 5086 0
-10495 5088 0
-10497 5090 0
-10499 5092 0
-10501 5094 0
10500 -5093 0
-5080 10487 0
-5082 10489 0
-5084 10491 0
-5086 10493 0
-5088 10495 0
-5090 10497 0
-5092 10499 0
-5094 10501 0
5093 -10500 0
c (max_left_00004_00002_00001<=max_left_00004_00002_00002)
5080 -5095 0
5081 -5096 0
5083 -5098 0
5085 -5100 0
5087 -5102 0
5089 -5104 0
5091 -5106 0
5093 -5108 0
c (variant_fields_00004_00002_00002<=max_left_00004_00002_00002)
10502 -5095 0
10503 -5096 0
10505 -5098 0
10507 -5100 0
10509 -5102 0
10511 -5104 0
10513 -5106 0
10515 -5108 0
c (SATLiteral(17649) \/ SATLiteral(17650))
17649 17650 0
c (max_left_00004_00002_00002<=max_left_00004_00002_00003)
5095 -5110 0
5096 -5111 0
5098 -5113 0
5100 -5115 0
5102 -5117 0
5104 -5119 0
5106 -5121 0
5108 -5123 0
c (variant_fields_00004_00002_00003<=max_left_00004_00002_00003)
10517 -5110 0
10518 -5111 0
10520 -5113 0
10522 -5115 0
10524 -5117 0
10526 -5119 0
10528 -5121 0
10530 -5123 0
c (SATLiteral(17651) \/ SATLiteral(17652))
17651 17652 0
c (max_left_00004_00002_00003<=max_left_00004_00002_00004)
5110 -5125 0
5111 -5126 0
5113 -5128 0
5115 -5130 0
5117 -5132 0
5119 -5134 0
5121 -5136 0
5123 -5138 0
c (variant_fields_00004_00002_00004<=max_left_00004_00002_00004)
10532 -5125 0
10533 -5126 0
10535 -5128 0
10537 -5130 0
10539 -5132 0
10541 -5134 0
10543 -5136 0
10545 -5138 0
c (SATLiteral(17653) \/ SATLiteral(17654))
17653 17654 0
c (max_left_00004_00002_00004<=max_left_00004_00002_00005)
5125 -5140 0
5126 -5141 0
5128 -5143 0
5130 -5145 0
5132 -5147 0
5134 -5149 0
5136 -5151 0
5138 -5153 0
c (variant_fields_00004_00002_00005<=max_left_00004_00002_00005)
10547 -5140 0
10548 -5141 0
10550 -5143 0
10552 -5145 0
10554 -5147 0
10556 -5149 0
10558 -5151 0
10560 -5153 0
c (SATLiteral(17655) \/ SATLiteral(17656))
17655 17656 0
c (max_left_00004_00002_00005<=max_left_00004_00002_00006)
5140 -5155 0
5141 -5156 0
5143 -5158 0
5145 -5160 0
5147 -5162 0
5149 -5164 0
5151 -5166 0
5153 -5168 0
c (variant_fields_00004_00002_00006<=max_left_00004_00002_00006)
10562 -5155 0
10563 -5156 0
10565 -5158 0
10567 -5160 0
10569 -5162 0
10571 -5164 0
10573 -5166 0
10575 -5168 0
c (SATLiteral(17657) \/ SATLiteral(17658))
17657 17658 0
c (max_left_00004_00002_00006<=max_left_00004_00002_00007)
5155 -5170 0
5156 -5171 0
5158 -5173 0
5160 -5175 0
5162 -5177 0
5164 -5179 0
5166 -5181 0
5168 -5183 0
c (variant_fields_00004_00002_00007<=max_left_00004_00002_00007)
10577 -5170 0
10578 -5171 0
10580 -5173 0
10582 -5175 0
10584 -5177 0
10586 -5179 0
10588 -5181 0
10590 -5183 0
c (SATLiteral(17659) \/ SATLiteral(17660))
17659 17660 0
c (max_left_00004_00002_00007<=max_left_00004_00002_00008)
5170 -5185 0
5171 -5186 0
5173 -5188 0
5175 -5190 0
5177 -5192 0
5179 -5194 0
5181 -5196 0
5183 -5198 0
c (variant_fields_00004_00002_00008<=max_left_00004_00002_00008)
10592 -5185 0
10593 -5186 0
10595 -5188 0
10597 -5190 0
10599 -5192 0
10601 -5194 0
10603 -5196 0
10605 -5198 0
c (SATLiteral(17661) \/ SATLiteral(17662))
17661 17662 0
c (max_left_00004_00002_00008<=max_left_00004_00002_00009)
5185 -5200 0
5186 -5201 0
5188 -5203 0
5190 -5205 0
5192 -5207 0
5194 -5209 0
5196 -5211 0
5198 -5213 0
c (variant_fields_00004_00002_00009<=max_left_00004_00002_00009)
10607 -5200 0
10608 -5201 0
10610 -5203 0
10612 -5205 0
10614 -5207 0
10616 -5209 0
10618 -5211 0
10620 -5213 0
c (SATLiteral(17663) \/ SATLiteral(17664))
17663 17664 0
c (variant_fields_00004_00003_00001<=max_left_00004_00003_00001)
10622 -5216 0
10623 -5217 0
10625 -5219 0
10627 -5221 0
10629 -5223 0
10631 -5225 0
10633 -5227 0
10635 -5229 0
c (variant_fields_00004_00003_00001=max_left_00004_00003_00001)
-10622 5216 0
-10624 5218 0
-10626 5220 0
-10628 5222 0
-10630 5224 0
-10632 5226 0
-10634 5228 0
-10636 5230 0
10635 -5229 0
-5216 10622 0
-5218 10624 0
-5220 10626 0
-5222 10628 0
-5224 10630 0
-5226 10632 0
-5228 10634 0
-5230 10636 0
5229 -10635 0
c (max_left_00004_00003_00001<=max_left_00004_00003_00002)
5216 -5231 0
5217 -5232 0
5219 -5234 0
5221 -5236 0
5223 -5238 0
5225 -5240 0
5227 -5242 0
5229 -5244 0
c (variant_fields_00004_00003_00002<=max_left_00004_00003_00002)
10637 -5231 0
10638 -5232 0
10640 -5234 0
10642 -5236 0
10644 -5238 0
10646 -5240 0
10648 -5242 0
10650 -5244 0
c (SATLiteral(17665) \/ SATLiteral(17666))
17665 17666 0
c (max_left_00004_00003_00002<=max_left_00004_00003_00003)
5231 -5246 0
5232 -5247 0
5234 -5249 0
5236 -5251 0
5238 -5253 0
5240 -5255 0
5242 -5257 0
5244 -5259 0
c (variant_fields_00004_00003_00003<=max_left_00004_00003_00003)
10652 -5246 0
10653 -5247 0
10655 -5249 0
10657 -5251 0
10659 -5253 0
10661 -5255 0
10663 -5257 0
10665 -5259 0
c (SATLiteral(17667) \/ SATLiteral(17668))
17667 17668 0
c (max_left_00004_00003_00003<=max_left_00004_00003_00004)
5246 -5261 0
5247 -5262 0
5249 -5264 0
5251 -5266 0
5253 -5268 0
5255 -5270 0
5257 -5272 0
5259 -5274 0
c (variant_fields_00004_00003_00004<=max_left_00004_00003_00004)
10667 -5261 0
10668 -5262 0
10670 -5264 0
10672 -5266 0
10674 -5268 0
10676 -5270 0
10678 -5272 0
10680 -5274 0
c (SATLiteral(17669) \/ SATLiteral(17670))
17669 17670 0
c (max_left_00004_00003_00004<=max_left_00004_00003_00005)
5261 -5276 0
5262 -5277 0
5264 -5279 0
5266 -5281 0
5268 -5283 0
5270 -5285 0
5272 -5287 0
5274 -5289 0
c (variant_fields_00004_00003_00005<=max_left_00004_00003_00005)
10682 -5276 0
10683 -5277 0
10685 -5279 0
10687 -5281 0
10689 -5283 0
10691 -5285 0
10693 -5287 0
10695 -5289 0
c (SATLiteral(17671) \/ SATLiteral(17672))
17671 17672 0
c (max_left_00004_00003_00005<=max_left_00004_00003_00006)
5276 -5291 0
5277 -5292 0
5279 -5294 0
5281 -5296 0
5283 -5298 0
5285 -5300 0
5287 -5302 0
5289 -5304 0
c (variant_fields_00004_00003_00006<=max_left_00004_00003_00006)
10697 -5291 0
10698 -5292 0
10700 -5294 0
10702 -5296 0
10704 -5298 0
10706 -5300 0
10708 -5302 0
10710 -5304 0
c (SATLiteral(17673) \/ SATLiteral(17674))
17673 17674 0
c (max_left_00004_00003_00006<=max_left_00004_00003_00007)
5291 -5306 0
5292 -5307 0
5294 -5309 0
5296 -5311 0
5298 -5313 0
5300 -5315 0
5302 -5317 0
5304 -5319 0
c (variant_fields_00004_00003_00007<=max_left_00004_00003_00007)
10712 -5306 0
10713 -5307 0
10715 -5309 0
10717 -5311 0
10719 -5313 0
10721 -5315 0
10723 -5317 0
10725 -5319 0
c (SATLiteral(17675) \/ SATLiteral(17676))
17675 17676 0
c (max_left_00004_00003_00007<=max_left_00004_00003_00008)
5306 -5321 0
5307 -5322 0
5309 -5324 0
5311 -5326 0
5313 -5328 0
5315 -5330 0
5317 -5332 0
5319 -5334 0
c (variant_fields_00004_00003_00008<=max_left_00004_00003_00008)
10727 -5321 0
10728 -5322 0
10730 -5324 0
10732 -5326 0
10734 -5328 0
10736 -5330 0
10738 -5332 0
10740 -5334 0
c (SATLiteral(17677) \/ SATLiteral(17678))
17677 17678 0
c (max_left_00004_00003_00008<=max_left_00004_00003_00009)
5321 -5336 0
5322 -5337 0
5324 -5339 0
5326 -5341 0
5328 -5343 0
5330 -5345 0
5332 -5347 0
5334 -5349 0
c (variant_fields_00004_00003_00009<=max_left_00004_00003_00009)
10742 -5336 0
10743 -5337 0
10745 -5339 0
10747 -5341 0
10749 -5343 0
10751 -5345 0
10753 -5347 0
10755 -5349 0
c (SATLiteral(17679) \/ SATLiteral(17680))
17679 17680 0
c (variant_fields_00004_00004_00001<=max_left_00004_00004_00001)
10757 -5352 0
10758 -5353 0
10760 -5355 0
10762 -5357 0
10764 -5359 0
10766 -5361 0
10768 -5363 0
10770 -5365 0
c (variant_fields_00004_00004_00001=max_left_00004_00004_00001)
-10757 5352 0
-10759 5354 0
-10761 5356 0
-10763 5358 0
-10765 5360 0
-10767 5362 0
-10769 5364 0
-10771 5366 0
10770 -5365 0
-5352 10757 0
-5354 10759 0
-5356 10761 0
-5358 10763 0
-5360 10765 0
-5362 10767 0
-5364 10769 0
-5366 10771 0
5365 -10770 0
c (max_left_00004_00004_00001<=max_left_00004_00004_00002)
5352 -5367 0
5353 -5368 0
5355 -5370 0
5357 -5372 0
5359 -5374 0
5361 -5376 0
5363 -5378 0
5365 -5380 0
c (variant_fields_00004_00004_00002<=max_left_00004_00004_00002)
10772 -5367 0
10773 -5368 0
10775 -5370 0
10777 -5372 0
10779 -5374 0
10781 -5376 0
10783 -5378 0
10785 -5380 0
c (SATLiteral(17681) \/ SATLiteral(17682))
17681 17682 0
c (max_left_00004_00004_00002<=max_left_00004_00004_00003)
5367 -5382 0
5368 -5383 0
5370 -5385 0
5372 -5387 0
5374 -5389 0
5376 -5391 0
5378 -5393 0
5380 -5395 0
c (variant_fields_00004_00004_00003<=max_left_00004_00004_00003)
10787 -5382 0
10788 -5383 0
10790 -5385 0
10792 -5387 0
10794 -5389 0
10796 -5391 0
10798 -5393 0
10800 -5395 0
c (SATLiteral(17683) \/ SATLiteral(17684))
17683 17684 0
c (max_left_00004_00004_00003<=max_left_00004_00004_00004)
5382 -5397 0
5383 -5398 0
5385 -5400 0
5387 -5402 0
5389 -5404 0
5391 -5406 0
5393 -5408 0
5395 -5410 0
c (variant_fields_00004_00004_00004<=max_left_00004_00004_00004)
10802 -5397 0
10803 -5398 0
10805 -5400 0
10807 -5402 0
10809 -5404 0
10811 -5406 0
10813 -5408 0
10815 -5410 0
c (SATLiteral(17685) \/ SATLiteral(17686))
17685 17686 0
c (max_left_00004_00004_00004<=max_left_00004_00004_00005)
5397 -5412 0
5398 -5413 0
5400 -5415 0
5402 -5417 0
5404 -5419 0
5406 -5421 0
5408 -5423 0
5410 -5425 0
c (variant_fields_00004_00004_00005<=max_left_00004_00004_00005)
10817 -5412 0
10818 -5413 0
10820 -5415 0
10822 -5417 0
10824 -5419 0
10826 -5421 0
10828 -5423 0
10830 -5425 0
c (SATLiteral(17687) \/ SATLiteral(17688))
17687 17688 0
c (max_left_00004_00004_00005<=max_left_00004_00004_00006)
5412 -5427 0
5413 -5428 0
5415 -5430 0
5417 -5432 0
5419 -5434 0
5421 -5436 0
5423 -5438 0
5425 -5440 0
c (variant_fields_00004_00004_00006<=max_left_00004_00004_00006)
10832 -5427 0
10833 -5428 0
10835 -5430 0
10837 -5432 0
10839 -5434 0
10841 -5436 0
10843 -5438 0
10845 -5440 0
c (SATLiteral(17689) \/ SATLiteral(17690))
17689 17690 0
c (max_left_00004_00004_00006<=max_left_00004_00004_00007)
5427 -5442 0
5428 -5443 0
5430 -5445 0
5432 -5447 0
5434 -5449 0
5436 -5451 0
5438 -5453 0
5440 -5455 0
c (variant_fields_00004_00004_00007<=max_left_00004_00004_00007)
10847 -5442 0
10848 -5443 0
10850 -5445 0
10852 -5447 0
10854 -5449 0
10856 -5451 0
10858 -5453 0
10860 -5455 0
c (SATLiteral(17691) \/ SATLiteral(17692))
17691 17692 0
c (max_left_00004_00004_00007<=max_left_00004_00004_00008)
5442 -5457 0
5443 -5458 0
5445 -5460 0
5447 -5462 0
5449 -5464 0
5451 -5466 0
5453 -5468 0
5455 -5470 0
c (variant_fields_00004_00004_00008<=max_left_00004_00004_00008)
10862 -5457 0
10863 -5458 0
10865 -5460 0
10867 -5462 0
10869 -5464 0
10871 -5466 0
10873 -5468 0
10875 -5470 0
c (SATLiteral(17693) \/ SATLiteral(17694))
17693 17694 0
c (max_left_00004_00004_00008<=max_left_00004_00004_00009)
5457 -5472 0
5458 -5473 0
5460 -5475 0
5462 -5477 0
5464 -5479 0
5466 -5481 0
5468 -5483 0
5470 -5485 0
c (variant_fields_00004_00004_00009<=max_left_00004_00004_00009)
10877 -5472 0
10878 -5473 0
10880 -5475 0
10882 -5477 0
10884 -5479 0
10886 -5481 0
10888 -5483 0
10890 -5485 0
c (SATLiteral(17695) \/ SATLiteral(17696))
17695 17696 0
c (variant_fields_00004_00005_00001<=max_left_00004_00005_00001)
10892 -5488 0
10893 -5489 0
10895 -5491 0
10897 -5493 0
10899 -5495 0
10901 -5497 0
10903 -5499 0
10905 -5501 0
c (variant_fields_00004_00005_00001=max_left_00004_00005_00001)
-10892 5488 0
-10894 5490 0
-10896 5492 0
-10898 5494 0
-10900 5496 0
-10902 5498 0
-10904 5500 0
-10906 5502 0
10905 -5501 0
-5488 10892 0
-5490 10894 0
-5492 10896 0
-5494 10898 0
-5496 10900 0
-5498 10902 0
-5500 10904 0
-5502 10906 0
5501 -10905 0
c (max_left_00004_00005_00001<=max_left_00004_00005_00002)
5488 -5503 0
5489 -5504 0
5491 -5506 0
5493 -5508 0
5495 -5510 0
5497 -5512 0
5499 -5514 0
5501 -5516 0
c (variant_fields_00004_00005_00002<=max_left_00004_00005_00002)
10907 -5503 0
10908 -5504 0
10910 -5506 0
10912 -5508 0
10914 -5510 0
10916 -5512 0
10918 -5514 0
10920 -5516 0
c (SATLiteral(17697) \/ SATLiteral(17698))
17697 17698 0
c (max_left_00004_00005_00002<=max_left_00004_00005_00003)
5503 -5518 0
5504 -5519 0
5506 -5521 0
5508 -5523 0
5510 -5525 0
5512 -5527 0
5514 -5529 0
5516 -5531 0
c (variant_fields_00004_00005_00003<=max_left_00004_00005_00003)
10922 -5518 0
10923 -5519 0
10925 -5521 0
10927 -5523 0
10929 -5525 0
10931 -5527 0
10933 -5529 0
10935 -5531 0
c (SATLiteral(17699) \/ SATLiteral(17700))
17699 17700 0
c (max_left_00004_00005_00003<=max_left_00004_00005_00004)
5518 -5533 0
5519 -5534 0
5521 -5536 0
5523 -5538 0
5525 -5540 0
5527 -5542 0
5529 -5544 0
5531 -5546 0
c (variant_fields_00004_00005_00004<=max_left_00004_00005_00004)
10937 -5533 0
10938 -5534 0
10940 -5536 0
10942 -5538 0
10944 -5540 0
10946 -5542 0
10948 -5544 0
10950 -5546 0
c (SATLiteral(17701) \/ SATLiteral(17702))
17701 17702 0
c (max_left_00004_00005_00004<=max_left_00004_00005_00005)
5533 -5548 0
5534 -5549 0
5536 -5551 0
5538 -5553 0
5540 -5555 0
5542 -5557 0
5544 -5559 0
5546 -5561 0
c (variant_fields_00004_00005_00005<=max_left_00004_00005_00005)
10952 -5548 0
10953 -5549 0
10955 -5551 0
10957 -5553 0
10959 -5555 0
10961 -5557 0
10963 -5559 0
10965 -5561 0
c (SATLiteral(17703) \/ SATLiteral(17704))
17703 17704 0
c (max_left_00004_00005_00005<=max_left_00004_00005_00006)
5548 -5563 0
5549 -5564 0
5551 -5566 0
5553 -5568 0
5555 -5570 0
5557 -5572 0
5559 -5574 0
5561 -5576 0
c (variant_fields_00004_00005_00006<=max_left_00004_00005_00006)
10967 -5563 0
10968 -5564 0
10970 -5566 0
10972 -5568 0
10974 -5570 0
10976 -5572 0
10978 -5574 0
10980 -5576 0
c (SATLiteral(17705) \/ SATLiteral(17706))
17705 17706 0
c (max_left_00004_00005_00006<=max_left_00004_00005_00007)
5563 -5578 0
5564 -5579 0
5566 -5581 0
5568 -5583 0
5570 -5585 0
5572 -5587 0
5574 -5589 0
5576 -5591 0
c (variant_fields_00004_00005_00007<=max_left_00004_00005_00007)
10982 -5578 0
10983 -5579 0
10985 -5581 0
10987 -5583 0
10989 -5585 0
10991 -5587 0
10993 -5589 0
10995 -5591 0
c (SATLiteral(17707) \/ SATLiteral(17708))
17707 17708 0
c (max_left_00004_00005_00007<=max_left_00004_00005_00008)
5578 -5593 0
5579 -5594 0
5581 -5596 0
5583 -5598 0
5585 -5600 0
5587 -5602 0
5589 -5604 0
5591 -5606 0
c (variant_fields_00004_00005_00008<=max_left_00004_00005_00008)
10997 -5593 0
10998 -5594 0
11000 -5596 0
11002 -5598 0
11004 -5600 0
11006 -5602 0
11008 -5604 0
11010 -5606 0
c (SATLiteral(17709) \/ SATLiteral(17710))
17709 17710 0
c (max_left_00004_00005_00008<=max_left_00004_00005_00009)
5593 -5608 0
5594 -5609 0
5596 -5611 0
5598 -5613 0
5600 -5615 0
5602 -5617 0
5604 -5619 0
5606 -5621 0
c (variant_fields_00004_00005_00009<=max_left_00004_00005_00009)
11012 -5608 0
11013 -5609 0
11015 -5611 0
11017 -5613 0
11019 -5615 0
11021 -5617 0
11023 -5619 0
11025 -5621 0
c (SATLiteral(17711) \/ SATLiteral(17712))
17711 17712 0
c (variant_fields_00004_00006_00001<=max_left_00004_00006_00001)
11027 -5624 0
11028 -5625 0
11030 -5627 0
11032 -5629 0
11034 -5631 0
11036 -5633 0
11038 -5635 0
11040 -5637 0
c (variant_fields_00004_00006_00001=max_left_00004_00006_00001)
-11027 5624 0
-11029 5626 0
-11031 5628 0
-11033 5630 0
-11035 5632 0
-11037 5634 0
-11039 5636 0
-11041 5638 0
11040 -5637 0
-5624 11027 0
-5626 11029 0
-5628 11031 0
-5630 11033 0
-5632 11035 0
-5634 11037 0
-5636 11039 0
-5638 11041 0
5637 -11040 0
c (max_left_00004_00006_00001<=max_left_00004_00006_00002)
5624 -5639 0
5625 -5640 0
5627 -5642 0
5629 -5644 0
5631 -5646 0
5633 -5648 0
5635 -5650 0
5637 -5652 0
c (variant_fields_00004_00006_00002<=max_left_00004_00006_00002)
11042 -5639 0
11043 -5640 0
11045 -5642 0
11047 -5644 0
11049 -5646 0
11051 -5648 0
11053 -5650 0
11055 -5652 0
c (SATLiteral(17713) \/ SATLiteral(17714))
17713 17714 0
c (max_left_00004_00006_00002<=max_left_00004_00006_00003)
5639 -5654 0
5640 -5655 0
5642 -5657 0
5644 -5659 0
5646 -5661 0
5648 -5663 0
5650 -5665 0
5652 -5667 0
c (variant_fields_00004_00006_00003<=max_left_00004_00006_00003)
11057 -5654 0
11058 -5655 0
11060 -5657 0
11062 -5659 0
11064 -5661 0
11066 -5663 0
11068 -5665 0
11070 -5667 0
c (SATLiteral(17715) \/ SATLiteral(17716))
17715 17716 0
c (max_left_00004_00006_00003<=max_left_00004_00006_00004)
5654 -5669 0
5655 -5670 0
5657 -5672 0
5659 -5674 0
5661 -5676 0
5663 -5678 0
5665 -5680 0
5667 -5682 0
c (variant_fields_00004_00006_00004<=max_left_00004_00006_00004)
11072 -5669 0
11073 -5670 0
11075 -5672 0
11077 -5674 0
11079 -5676 0
11081 -5678 0
11083 -5680 0
11085 -5682 0
c (SATLiteral(17717) \/ SATLiteral(17718))
17717 17718 0
c (max_left_00004_00006_00004<=max_left_00004_00006_00005)
5669 -5684 0
5670 -5685 0
5672 -5687 0
5674 -5689 0
5676 -5691 0
5678 -5693 0
5680 -5695 0
5682 -5697 0
c (variant_fields_00004_00006_00005<=max_left_00004_00006_00005)
11087 -5684 0
11088 -5685 0
11090 -5687 0
11092 -5689 0
11094 -5691 0
11096 -5693 0
11098 -5695 0
11100 -5697 0
c (SATLiteral(17719) \/ SATLiteral(17720))
17719 17720 0
c (max_left_00004_00006_00005<=max_left_00004_00006_00006)
5684 -5699 0
5685 -5700 0
5687 -5702 0
5689 -5704 0
5691 -5706 0
5693 -5708 0
5695 -5710 0
5697 -5712 0
c (variant_fields_00004_00006_00006<=max_left_00004_00006_00006)
11102 -5699 0
11103 -5700 0
11105 -5702 0
11107 -5704 0
11109 -5706 0
11111 -5708 0
11113 -5710 0
11115 -5712 0
c (SATLiteral(17721) \/ SATLiteral(17722))
17721 17722 0
c (max_left_00004_00006_00006<=max_left_00004_00006_00007)
5699 -5714 0
5700 -5715 0
5702 -5717 0
5704 -5719 0
5706 -5721 0
5708 -5723 0
5710 -5725 0
5712 -5727 0
c (variant_fields_00004_00006_00007<=max_left_00004_00006_00007)
11117 -5714 0
11118 -5715 0
11120 -5717 0
11122 -5719 0
11124 -5721 0
11126 -5723 0
11128 -5725 0
11130 -5727 0
c (SATLiteral(17723) \/ SATLiteral(17724))
17723 17724 0
c (max_left_00004_00006_00007<=max_left_00004_00006_00008)
5714 -5729 0
5715 -5730 0
5717 -5732 0
5719 -5734 0
5721 -5736 0
5723 -5738 0
5725 -5740 0
5727 -5742 0
c (variant_fields_00004_00006_00008<=max_left_00004_00006_00008)
11132 -5729 0
11133 -5730 0
11135 -5732 0
11137 -5734 0
11139 -5736 0
11141 -5738 0
11143 -5740 0
11145 -5742 0
c (SATLiteral(17725) \/ SATLiteral(17726))
17725 17726 0
c (max_left_00004_00006_00008<=max_left_00004_00006_00009)
5729 -5744 0
5730 -5745 0
5732 -5747 0
5734 -5749 0
5736 -5751 0
5738 -5753 0
5740 -5755 0
5742 -5757 0
c (variant_fields_00004_00006_00009<=max_left_00004_00006_00009)
11147 -5744 0
11148 -5745 0
11150 -5747 0
11152 -5749 0
11154 -5751 0
11156 -5753 0
11158 -5755 0
11160 -5757 0
c (SATLiteral(17727) \/ SATLiteral(17728))
17727 17728 0
c (variant_fields_00004_00007_00001<=max_left_00004_00007_00001)
11162 -5760 0
11163 -5761 0
11165 -5763 0
11167 -5765 0
11169 -5767 0
11171 -5769 0
11173 -5771 0
11175 -5773 0
c (variant_fields_00004_00007_00001=max_left_00004_00007_00001)
-11162 5760 0
-11164 5762 0
-11166 5764 0
-11168 5766 0
-11170 5768 0
-11172 5770 0
-11174 5772 0
-11176 5774 0
11175 -5773 0
-5760 11162 0
-5762 11164 0
-5764 11166 0
-5766 11168 0
-5768 11170 0
-5770 11172 0
-5772 11174 0
-5774 11176 0
5773 -11175 0
c (max_left_00004_00007_00001<=max_left_00004_00007_00002)
5760 -5775 0
5761 -5776 0
5763 -5778 0
5765 -5780 0
5767 -5782 0
5769 -5784 0
5771 -5786 0
5773 -5788 0
c (variant_fields_00004_00007_00002<=max_left_00004_00007_00002)
11177 -5775 0
11178 -5776 0
11180 -5778 0
11182 -5780 0
11184 -5782 0
11186 -5784 0
11188 -5786 0
11190 -5788 0
c (SATLiteral(17729) \/ SATLiteral(17730))
17729 17730 0
c (max_left_00004_00007_00002<=max_left_00004_00007_00003)
5775 -5790 0
5776 -5791 0
5778 -5793 0
5780 -5795 0
5782 -5797 0
5784 -5799 0
5786 -5801 0
5788 -5803 0
c (variant_fields_00004_00007_00003<=max_left_00004_00007_00003)
11192 -5790 0
11193 -5791 0
11195 -5793 0
11197 -5795 0
11199 -5797 0
11201 -5799 0
11203 -5801 0
11205 -5803 0
c (SATLiteral(17731) \/ SATLiteral(17732))
17731 17732 0
c (max_left_00004_00007_00003<=max_left_00004_00007_00004)
5790 -5805 0
5791 -5806 0
5793 -5808 0
5795 -5810 0
5797 -5812 0
5799 -5814 0
5801 -5816 0
5803 -5818 0
c (variant_fields_00004_00007_00004<=max_left_00004_00007_00004)
11207 -5805 0
11208 -5806 0
11210 -5808 0
11212 -5810 0
11214 -5812 0
11216 -5814 0
11218 -5816 0
11220 -5818 0
c (SATLiteral(17733) \/ SATLiteral(17734))
17733 17734 0
c (max_left_00004_00007_00004<=max_left_00004_00007_00005)
5805 -5820 0
5806 -5821 0
5808 -5823 0
5810 -5825 0
5812 -5827 0
5814 -5829 0
5816 -5831 0
5818 -5833 0
c (variant_fields_00004_00007_00005<=max_left_00004_00007_00005)
11222 -5820 0
11223 -5821 0
11225 -5823 0
11227 -5825 0
11229 -5827 0
11231 -5829 0
11233 -5831 0
11235 -5833 0
c (SATLiteral(17735) \/ SATLiteral(17736))
17735 17736 0
c (max_left_00004_00007_00005<=max_left_00004_00007_00006)
5820 -5835 0
5821 -5836 0
5823 -5838 0
5825 -5840 0
5827 -5842 0
5829 -5844 0
5831 -5846 0
5833 -5848 0
c (variant_fields_00004_00007_00006<=max_left_00004_00007_00006)
11237 -5835 0
11238 -5836 0
11240 -5838 0
11242 -5840 0
11244 -5842 0
11246 -5844 0
11248 -5846 0
11250 -5848 0
c (SATLiteral(17737) \/ SATLiteral(17738))
17737 17738 0
c (max_left_00004_00007_00006<=max_left_00004_00007_00007)
5835 -5850 0
5836 -5851 0
5838 -5853 0
5840 -5855 0
5842 -5857 0
5844 -5859 0
5846 -5861 0
5848 -5863 0
c (variant_fields_00004_00007_00007<=max_left_00004_00007_00007)
11252 -5850 0
11253 -5851 0
11255 -5853 0
11257 -5855 0
11259 -5857 0
11261 -5859 0
11263 -5861 0
11265 -5863 0
c (SATLiteral(17739) \/ SATLiteral(17740))
17739 17740 0
c (max_left_00004_00007_00007<=max_left_00004_00007_00008)
5850 -5865 0
5851 -5866 0
5853 -5868 0
5855 -5870 0
5857 -5872 0
5859 -5874 0
5861 -5876 0
5863 -5878 0
c (variant_fields_00004_00007_00008<=max_left_00004_00007_00008)
11267 -5865 0
11268 -5866 0
11270 -5868 0
11272 -5870 0
11274 -5872 0
11276 -5874 0
11278 -5876 0
11280 -5878 0
c (SATLiteral(17741) \/ SATLiteral(17742))
17741 17742 0
c (max_left_00004_00007_00008<=max_left_00004_00007_00009)
5865 -5880 0
5866 -5881 0
5868 -5883 0
5870 -5885 0
5872 -5887 0
5874 -5889 0
5876 -5891 0
5878 -5893 0
c (variant_fields_00004_00007_00009<=max_left_00004_00007_00009)
11282 -5880 0
11283 -5881 0
11285 -5883 0
11287 -5885 0
11289 -5887 0
11291 -5889 0
11293 -5891 0
11295 -5893 0
c (SATLiteral(17743) \/ SATLiteral(17744))
17743 17744 0
c (variant_fields_00004_00008_00001<=max_left_00004_00008_00001)
11297 -5896 0
11298 -5897 0
11300 -5899 0
11302 -5901 0
11304 -5903 0
11306 -5905 0
11308 -5907 0
11310 -5909 0
c (variant_fields_00004_00008_00001=max_left_00004_00008_00001)
-11297 5896 0
-11299 5898 0
-11301 5900 0
-11303 5902 0
-11305 5904 0
-11307 5906 0
-11309 5908 0
-11311 5910 0
11310 -5909 0
-5896 11297 0
-5898 11299 0
-5900 11301 0
-5902 11303 0
-5904 11305 0
-5906 11307 0
-5908 11309 0
-5910 11311 0
5909 -11310 0
c (max_left_00004_00008_00001<=max_left_00004_00008_00002)
5896 -5911 0
5897 -5912 0
5899 -5914 0
5901 -5916 0
5903 -5918 0
5905 -5920 0
5907 -5922 0
5909 -5924 0
c (variant_fields_00004_00008_00002<=max_left_00004_00008_00002)
11312 -5911 0
11313 -5912 0
11315 -5914 0
11317 -5916 0
11319 -5918 0
11321 -5920 0
11323 -5922 0
11325 -5924 0
c (SATLiteral(17745) \/ SATLiteral(17746))
17745 17746 0
c (max_left_00004_00008_00002<=max_left_00004_00008_00003)
5911 -5926 0
5912 -5927 0
5914 -5929 0
5916 -5931 0
5918 -5933 0
5920 -5935 0
5922 -5937 0
5924 -5939 0
c (variant_fields_00004_00008_00003<=max_left_00004_00008_00003)
11327 -5926 0
11328 -5927 0
11330 -5929 0
11332 -5931 0
11334 -5933 0
11336 -5935 0
11338 -5937 0
11340 -5939 0
c (SATLiteral(17747) \/ SATLiteral(17748))
17747 17748 0
c (max_left_00004_00008_00003<=max_left_00004_00008_00004)
5926 -5941 0
5927 -5942 0
5929 -5944 0
5931 -5946 0
5933 -5948 0
5935 -5950 0
5937 -5952 0
5939 -5954 0
c (variant_fields_00004_00008_00004<=max_left_00004_00008_00004)
11342 -5941 0
11343 -5942 0
11345 -5944 0
11347 -5946 0
11349 -5948 0
11351 -5950 0
11353 -5952 0
11355 -5954 0
c (SATLiteral(17749) \/ SATLiteral(17750))
17749 17750 0
c (max_left_00004_00008_00004<=max_left_00004_00008_00005)
5941 -5956 0
5942 -5957 0
5944 -5959 0
5946 -5961 0
5948 -5963 0
5950 -5965 0
5952 -5967 0
5954 -5969 0
c (variant_fields_00004_00008_00005<=max_left_00004_00008_00005)
11357 -5956 0
11358 -5957 0
11360 -5959 0
11362 -5961 0
11364 -5963 0
11366 -5965 0
11368 -5967 0
11370 -5969 0
c (SATLiteral(17751) \/ SATLiteral(17752))
17751 17752 0
c (max_left_00004_00008_00005<=max_left_00004_00008_00006)
5956 -5971 0
5957 -5972 0
5959 -5974 0
5961 -5976 0
5963 -5978 0
5965 -5980 0
5967 -5982 0
5969 -5984 0
c (variant_fields_00004_00008_00006<=max_left_00004_00008_00006)
11372 -5971 0
11373 -5972 0
11375 -5974 0
11377 -5976 0
11379 -5978 0
11381 -5980 0
11383 -5982 0
11385 -5984 0
c (SATLiteral(17753) \/ SATLiteral(17754))
17753 17754 0
c (max_left_00004_00008_00006<=max_left_00004_00008_00007)
5971 -5986 0
5972 -5987 0
5974 -5989 0
5976 -5991 0
5978 -5993 0
5980 -5995 0
5982 -5997 0
5984 -5999 0
c (variant_fields_00004_00008_00007<=max_left_00004_00008_00007)
11387 -5986 0
11388 -5987 0
11390 -5989 0
11392 -5991 0
11394 -5993 0
11396 -5995 0
11398 -5997 0
11400 -5999 0
c (SATLiteral(17755) \/ SATLiteral(17756))
17755 17756 0
c (max_left_00004_00008_00007<=max_left_00004_00008_00008)
5986 -6001 0
5987 -6002 0
5989 -6004 0
5991 -6006 0
5993 -6008 0
5995 -6010 0
5997 -6012 0
5999 -6014 0
c (variant_fields_00004_00008_00008<=max_left_00004_00008_00008)
11402 -6001 0
11403 -6002 0
11405 -6004 0
11407 -6006 0
11409 -6008 0
11411 -6010 0
11413 -6012 0
11415 -6014 0
c (SATLiteral(17757) \/ SATLiteral(17758))
17757 17758 0
c (max_left_00004_00008_00008<=max_left_00004_00008_00009)
6001 -6016 0
6002 -6017 0
6004 -6019 0
6006 -6021 0
6008 -6023 0
6010 -6025 0
6012 -6027 0
6014 -6029 0
c (variant_fields_00004_00008_00009<=max_left_00004_00008_00009)
11417 -6016 0
11418 -6017 0
11420 -6019 0
11422 -6021 0
11424 -6023 0
11426 -6025 0
11428 -6027 0
11430 -6029 0
c (SATLiteral(17759) \/ SATLiteral(17760))
17759 17760 0
c (variant_fields_00004_00009_00001<=max_left_00004_00009_00001)
11432 -6032 0
11433 -6033 0
11435 -6035 0
11437 -6037 0
11439 -6039 0
11441 -6041 0
11443 -6043 0
11445 -6045 0
c (variant_fields_00004_00009_00001=max_left_00004_00009_00001)
-11432 6032 0
-11434 6034 0
-11436 6036 0
-11438 6038 0
-11440 6040 0
-11442 6042 0
-11444 6044 0
-11446 6046 0
11445 -6045 0
-6032 11432 0
-6034 11434 0
-6036 11436 0
-6038 11438 0
-6040 11440 0
-6042 11442 0
-6044 11444 0
-6046 11446 0
6045 -11445 0
c (max_left_00004_00009_00001<=max_left_00004_00009_00002)
6032 -6047 0
6033 -6048 0
6035 -6050 0
6037 -6052 0
6039 -6054 0
6041 -6056 0
6043 -6058 0
6045 -6060 0
c (variant_fields_00004_00009_00002<=max_left_00004_00009_00002)
11447 -6047 0
11448 -6048 0
11450 -6050 0
11452 -6052 0
11454 -6054 0
11456 -6056 0
11458 -6058 0
11460 -6060 0
c (SATLiteral(17761) \/ SATLiteral(17762))
17761 17762 0
c (max_left_00004_00009_00002<=max_left_00004_00009_00003)
6047 -6062 0
6048 -6063 0
6050 -6065 0
6052 -6067 0
6054 -6069 0
6056 -6071 0
6058 -6073 0
6060 -6075 0
c (variant_fields_00004_00009_00003<=max_left_00004_00009_00003)
11462 -6062 0
11463 -6063 0
11465 -6065 0
11467 -6067 0
11469 -6069 0
11471 -6071 0
11473 -6073 0
11475 -6075 0
c (SATLiteral(17763) \/ SATLiteral(17764))
17763 17764 0
c (max_left_00004_00009_00003<=max_left_00004_00009_00004)
6062 -6077 0
6063 -6078 0
6065 -6080 0
6067 -6082 0
6069 -6084 0
6071 -6086 0
6073 -6088 0
6075 -6090 0
c (variant_fields_00004_00009_00004<=max_left_00004_00009_00004)
11477 -6077 0
11478 -6078 0
11480 -6080 0
11482 -6082 0
11484 -6084 0
11486 -6086 0
11488 -6088 0
11490 -6090 0
c (SATLiteral(17765) \/ SATLiteral(17766))
17765 17766 0
c (max_left_00004_00009_00004<=max_left_00004_00009_00005)
6077 -6092 0
6078 -6093 0
6080 -6095 0
6082 -6097 0
6084 -6099 0
6086 -6101 0
6088 -6103 0
6090 -6105 0
c (variant_fields_00004_00009_00005<=max_left_00004_00009_00005)
11492 -6092 0
11493 -6093 0
11495 -6095 0
11497 -6097 0
11499 -6099 0
11501 -6101 0
11503 -6103 0
11505 -6105 0
c (SATLiteral(17767) \/ SATLiteral(17768))
17767 17768 0
c (max_left_00004_00009_00005<=max_left_00004_00009_00006)
6092 -6107 0
6093 -6108 0
6095 -6110 0
6097 -6112 0
6099 -6114 0
6101 -6116 0
6103 -6118 0
6105 -6120 0
c (variant_fields_00004_00009_00006<=max_left_00004_00009_00006)
11507 -6107 0
11508 -6108 0
11510 -6110 0
11512 -6112 0
11514 -6114 0
11516 -6116 0
11518 -6118 0
11520 -6120 0
c (SATLiteral(17769) \/ SATLiteral(17770))
17769 17770 0
c (max_left_00004_00009_00006<=max_left_00004_00009_00007)
6107 -6122 0
6108 -6123 0
6110 -6125 0
6112 -6127 0
6114 -6129 0
6116 -6131 0
6118 -6133 0
6120 -6135 0
c (variant_fields_00004_00009_00007<=max_left_00004_00009_00007)
11522 -6122 0
11523 -6123 0
11525 -6125 0
11527 -6127 0
11529 -6129 0
11531 -6131 0
11533 -6133 0
11535 -6135 0
c (SATLiteral(17771) \/ SATLiteral(17772))
17771 17772 0
c (max_left_00004_00009_00007<=max_left_00004_00009_00008)
6122 -6137 0
6123 -6138 0
6125 -6140 0
6127 -6142 0
6129 -6144 0
6131 -6146 0
6133 -6148 0
6135 -6150 0
c (variant_fields_00004_00009_00008<=max_left_00004_00009_00008)
11537 -6137 0
11538 -6138 0
11540 -6140 0
11542 -6142 0
11544 -6144 0
11546 -6146 0
11548 -6148 0
11550 -6150 0
c (SATLiteral(17773) \/ SATLiteral(17774))
17773 17774 0
c (max_left_00004_00009_00008<=max_left_00004_00009_00009)
6137 -6152 0
6138 -6153 0
6140 -6155 0
6142 -6157 0
6144 -6159 0
6146 -6161 0
6148 -6163 0
6150 -6165 0
c (variant_fields_00004_00009_00009<=max_left_00004_00009_00009)
11552 -6152 0
11553 -6153 0
11555 -6155 0
11557 -6157 0
11559 -6159 0
11561 -6161 0
11563 -6163 0
11565 -6165 0
c (SATLiteral(17775) \/ SATLiteral(17776))
17775 17776 0
c (( - aux450 + SATLiteral(2) + SATLiteral(122))<=0)
-122 -12017 0
-2 -12017 0
-2 -122 -12018 0
c (0<=( - aux450 + SATLiteral(2) + SATLiteral(122)))
122 12018 0
2 12018 0
2 122 12017 0
c (( - aux451 + SATLiteral(17) + SATLiteral(107))<=0)
-107 -12020 0
-17 -12020 0
-17 -107 -12021 0
c (0<=( - aux451 + SATLiteral(17) + SATLiteral(107)))
107 12021 0
17 12021 0
17 107 12020 0
c (( - aux452 + SATLiteral(47) + SATLiteral(92))<=0)
-92 -12023 0
-47 -12023 0
-47 -92 -12024 0
c (0<=( - aux452 + SATLiteral(47) + SATLiteral(92)))
92 12024 0
47 12024 0
47 92 12023 0
c (( - aux453 + SATLiteral(62) + SATLiteral(77))<=0)
-77 -12026 0
-62 -12026 0
-62 -77 -12027 0
c (0<=( - aux453 + SATLiteral(62) + SATLiteral(77)))
77 12027 0
62 12027 0
62 77 12026 0
c ((aux453 - aux454 + SATLiteral(32))<=0)
12026 -12029 0
12027 -12030 0
-32 -12029 0
-32 12026 -12030 0
-32 12027 -12032 0
c (0<=(aux453 - aux454 + SATLiteral(32)))
-12027 12032 0
-12026 12030 0
32 12032 0
32 -12027 12030 0
32 -12026 12029 0
c ((aux450 + aux452 - aux455)<=0)
12023 -12034 0
12024 -12035 0
12017 -12034 0
12017 12023 -12035 0
12017 12024 -12037 0
12018 -12035 0
12018 12023 -12037 0
12018 12024 -12039 0
c (0<=(aux450 + aux452 - aux455))
-12024 12039 0
-12023 12037 0
-12018 12039 0
-12018 -12024 12037 0
-12018 -12023 12035 0
-12017 12037 0
-12017 -12024 12035 0
-12017 -12023 12034 0
c (( - aux456 + SATLiteral(3) + SATLiteral(123))<=0)
-123 -12041 0
-3 -12041 0
-3 -123 -12042 0
c (0<=( - aux456 + SATLiteral(3) + SATLiteral(123)))
123 12042 0
3 12042 0
3 123 12041 0
c (( - aux457 + SATLiteral(18) + SATLiteral(108))<=0)
-108 -12044 0
-18 -12044 0
-18 -108 -12045 0
c (0<=( - aux457 + SATLiteral(18) + SATLiteral(108)))
108 12045 0
18 12045 0
18 108 12044 0
c (( - aux458 + SATLiteral(48) + SATLiteral(93))<=0)
-93 -12047 0
-48 -12047 0
-48 -93 -12048 0
c (0<=( - aux458 + SATLiteral(48) + SATLiteral(93)))
93 12048 0
48 12048 0
48 93 12047 0
c (( - aux459 + SATLiteral(63) + SATLiteral(78))<=0)
-78 -12050 0
-63 -12050 0
-63 -78 -12051 0
c (0<=( - aux459 + SATLiteral(63) + SATLiteral(78)))
78 12051 0
63 12051 0
63 78 12050 0
c ((aux459 - aux460 + SATLiteral(33))<=0)
12050 -12053 0
12051 -12054 0
-33 -12053 0
-33 12050 -12054 0
-33 12051 -12056 0
c (0<=(aux459 - aux460 + SATLiteral(33)))
-12051 12056 0
-12050 12054 0
33 12056 0
33 -12051 12054 0
33 -12050 12053 0
c ((aux456 + aux458 - aux461)<=0)
12047 -12058 0
12048 -12059 0
12041 -12058 0
12041 12047 -12059 0
12041 12048 -12061 0
12042 -12059 0
12042 12047 -12061 0
12042 12048 -12063 0
c (0<=(aux456 + aux458 - aux461))
-12048 12063 0
-12047 12061 0
-12042 12063 0
-12042 -12048 12061 0
-12042 -12047 12059 0
-12041 12061 0
-12041 -12048 12059 0
-12041 -12047 12058 0
c (( - aux462 + SATLiteral(4) + SATLiteral(124))<=0)
-124 -12065 0
-4 -12065 0
-4 -124 -12066 0
c (0<=( - aux462 + SATLiteral(4) + SATLiteral(124)))
124 12066 0
4 12066 0
4 124 12065 0
c (( - aux463 + SATLiteral(19) + SATLiteral(109))<=0)
-109 -12068 0
-19 -12068 0
-19 -109 -12069 0
c (0<=( - aux463 + SATLiteral(19) + SATLiteral(109)))
109 12069 0
19 12069 0
19 109 12068 0
c (( - aux464 + SATLiteral(49) + SATLiteral(94))<=0)
-94 -12071 0
-49 -12071 0
-49 -94 -12072 0
c (0<=( - aux464 + SATLiteral(49) + SATLiteral(94)))
94 12072 0
49 12072 0
49 94 12071 0
c (( - aux465 + SATLiteral(64) + SATLiteral(79))<=0)
-79 -12074 0
-64 -12074 0
-64 -79 -12075 0
c (0<=( - aux465 + SATLiteral(64) + SATLiteral(79)))
79 12075 0
64 12075 0
64 79 12074 0
c ((aux465 - aux466 + SATLiteral(34))<=0)
12074 -12077 0
12075 -12078 0
-34 -12077 0
-34 12074 -12078 0
-34 12075 -12080 0
c (0<=(aux465 - aux466 + SATLiteral(34)))
-12075 12080 0
-12074 12078 0
34 12080 0
34 -12075 12078 0
34 -12074 12077 0
c ((aux462 + aux464 - aux467)<=0)
12071 -12082 0
12072 -12083 0
12065 -12082 0
12065 12071 -12083 0
12065 12072 -12085 0
12066 -12083 0
12066 12071 -12085 0
12066 12072 -12087 0
c (0<=(aux462 + aux464 - aux467))
-12072 12087 0
-12071 12085 0
-12066 12087 0
-12066 -12072 12085 0
-12066 -12071 12083 0
-12065 12085 0
-12065 -12072 12083 0
-12065 -12071 12082 0
c (( - aux468 + SATLiteral(5) + SATLiteral(125))<=0)
-125 -12089 0
-5 -12089 0
-5 -125 -12090 0
c (0<=( - aux468 + SATLiteral(5) + SATLiteral(125)))
125 12090 0
5 12090 0
5 125 12089 0
c (( - aux469 + SATLiteral(20) + SATLiteral(110))<=0)
-110 -12092 0
-20 -12092 0
-20 -110 -12093 0
c (0<=( - aux469 + SATLiteral(20) + SATLiteral(110)))
110 12093 0
20 12093 0
20 110 12092 0
c (( - aux470 + SATLiteral(50) + SATLiteral(95))<=0)
-95 -12095 0
-50 -12095 0
-50 -95 -12096 0
c (0<=( - aux470 + SATLiteral(50) + SATLiteral(95)))
95 12096 0
50 12096 0
50 95 12095 0
c (( - aux471 + SATLiteral(65) + SATLiteral(80))<=0)
-80 -12098 0
-65 -12098 0
-65 -80 -12099 0
c (0<=( - aux471 + SATLiteral(65) + SATLiteral(80)))
80 12099 0
65 12099 0
65 80 12098 0
c ((aux471 - aux472 + SATLiteral(35))<=0)
12098 -12101 0
12099 -12102 0
-35 -12101 0
-35 12098 -12102 0
-35 12099 -12104 0
c (0<=(aux471 - aux472 + SATLiteral(35)))
-12099 12104 0
-12098 12102 0
35 12104 0
35 -12099 12102 0
35 -12098 12101 0
c ((aux468 + aux470 - aux473)<=0)
12095 -12106 0
12096 -12107 0
12089 -12106 0
12089 12095 -12107 0
12089 12096 -12109 0
12090 -12107 0
12090 12095 -12109 0
12090 12096 -12111 0
c (0<=(aux468 + aux470 - aux473))
-12096 12111 0
-12095 12109 0
-12090 12111 0
-12090 -12096 12109 0
-12090 -12095 12107 0
-12089 12109 0
-12089 -12096 12107 0
-12089 -12095 12106 0
c (( - aux474 + SATLiteral(6) + SATLiteral(126))<=0)
-126 -12113 0
-6 -12113 0
-6 -126 -12114 0
c (0<=( - aux474 + SATLiteral(6) + SATLiteral(126)))
126 12114 0
6 12114 0
6 126 12113 0
c (( - aux475 + SATLiteral(21) + SATLiteral(111))<=0)
-111 -12116 0
-21 -12116 0
-21 -111 -12117 0
c (0<=( - aux475 + SATLiteral(21) + SATLiteral(111)))
111 12117 0
21 12117 0
21 111 12116 0
c (( - aux476 + SATLiteral(51) + SATLiteral(96))<=0)
-96 -12119 0
-51 -12119 0
-51 -96 -12120 0
c (0<=( - aux476 + SATLiteral(51) + SATLiteral(96)))
96 12120 0
51 12120 0
51 96 12119 0
c (( - aux477 + SATLiteral(66) + SATLiteral(81))<=0)
-81 -12122 0
-66 -12122 0
-66 -81 -12123 0
c (0<=( - aux477 + SATLiteral(66) + SATLiteral(81)))
81 12123 0
66 12123 0
66 81 12122 0
c ((aux477 - aux478 + SATLiteral(36))<=0)
12122 -12125 0
12123 -12126 0
-36 -12125 0
-36 12122 -12126 0
-36 12123 -12128 0
c (0<=(aux477 - aux478 + SATLiteral(36)))
-12123 12128 0
-12122 12126 0
36 12128 0
36 -12123 12126 0
36 -12122 12125 0
c ((aux474 + aux476 - aux479)<=0)
12119 -12130 0
12120 -12131 0
12113 -12130 0
12113 12119 -12131 0
12113 12120 -12133 0
12114 -12131 0
12114 12119 -12133 0
12114 12120 -12135 0
c (0<=(aux474 + aux476 - aux479))
-12120 12135 0
-12119 12133 0
-12114 12135 0
-12114 -12120 12133 0
-12114 -12119 12131 0
-12113 12133 0
-12113 -12120 12131 0
-12113 -12119 12130 0
c (( - aux480 + SATLiteral(7) + SATLiteral(127))<=0)
-127 -12137 0
-7 -12137 0
-7 -127 -12138 0
c (0<=( - aux480 + SATLiteral(7) + SATLiteral(127)))
127 12138 0
7 12138 0
7 127 12137 0
c (( - aux481 + SATLiteral(22) + SATLiteral(112))<=0)
-112 -12140 0
-22 -12140 0
-22 -112 -12141 0
c (0<=( - aux481 + SATLiteral(22) + SATLiteral(112)))
112 12141 0
22 12141 0
22 112 12140 0
c (( - aux482 + SATLiteral(52) + SATLiteral(97))<=0)
-97 -12143 0
-52 -12143 0
-52 -97 -12144 0
c (0<=( - aux482 + SATLiteral(52) + SATLiteral(97)))
97 12144 0
52 12144 0
52 97 12143 0
c (( - aux483 + SATLiteral(67) + SATLiteral(82))<=0)
-82 -12146 0
-67 -12146 0
-67 -82 -12147 0
c (0<=( - aux483 + SATLiteral(67) + SATLiteral(82)))
82 12147 0
67 12147 0
67 82 12146 0
c ((aux483 - aux484 + SATLiteral(37))<=0)
12146 -12149 0
12147 -12150 0
-37 -12149 0
-37 12146 -12150 0
-37 12147 -12152 0
c (0<=(aux483 - aux484 + SATLiteral(37)))
-12147 12152 0
-12146 12150 0
37 12152 0
37 -12147 12150 0
37 -12146 12149 0
c ((aux480 + aux482 - aux485)<=0)
12143 -12154 0
12144 -12155 0
12137 -12154 0
12137 12143 -12155 0
12137 12144 -12157 0
12138 -12155 0
12138 12143 -12157 0
12138 12144 -12159 0
c (0<=(aux480 + aux482 - aux485))
-12144 12159 0
-12143 12157 0
-12138 12159 0
-12138 -12144 12157 0
-12138 -12143 12155 0
-12137 12157 0
-12137 -12144 12155 0
-12137 -12143 12154 0
c (( - aux486 + SATLiteral(8) + SATLiteral(128))<=0)
-128 -12161 0
-8 -12161 0
-8 -128 -12162 0
c (0<=( - aux486 + SATLiteral(8) + SATLiteral(128)))
128 12162 0
8 12162 0
8 128 12161 0
c (( - aux487 + SATLiteral(23) + SATLiteral(113))<=0)
-113 -12164 0
-23 -12164 0
-23 -113 -12165 0
c (0<=( - aux487 + SATLiteral(23) + SATLiteral(113)))
113 12165 0
23 12165 0
23 113 12164 0
c (( - aux488 + SATLiteral(53) + SATLiteral(98))<=0)
-98 -12167 0
-53 -12167 0
-53 -98 -12168 0
c (0<=( - aux488 + SATLiteral(53) + SATLiteral(98)))
98 12168 0
53 12168 0
53 98 12167 0
c (( - aux489 + SATLiteral(68) + SATLiteral(83))<=0)
-83 -12170 0
-68 -12170 0
-68 -83 -12171 0
c (0<=( - aux489 + SATLiteral(68) + SATLiteral(83)))
83 12171 0
68 12171 0
68 83 12170 0
c ((aux489 - aux490 + SATLiteral(38))<=0)
12170 -12173 0
12171 -12174 0
-38 -12173 0
-38 12170 -12174 0
-38 12171 -12176 0
c (0<=(aux489 - aux490 + SATLiteral(38)))
-12171 12176 0
-12170 12174 0
38 12176 0
38 -12171 12174 0
38 -12170 12173 0
c ((aux486 + aux488 - aux491)<=0)
12167 -12178 0
12168 -12179 0
12161 -12178 0
12161 12167 -12179 0
12161 12168 -12181 0
12162 -12179 0
12162 12167 -12181 0
12162 12168 -12183 0
c (0<=(aux486 + aux488 - aux491))
-12168 12183 0
-12167 12181 0
-12162 12183 0
-12162 -12168 12181 0
-12162 -12167 12179 0
-12161 12181 0
-12161 -12168 12179 0
-12161 -12167 12178 0
c (( - aux492 + SATLiteral(9) + SATLiteral(129))<=0)
-129 -12185 0
-9 -12185 0
-9 -129 -12186 0
c (0<=( - aux492 + SATLiteral(9) + SATLiteral(129)))
129 12186 0
9 12186 0
9 129 12185 0
c (( - aux493 + SATLiteral(24) + SATLiteral(114))<=0)
-114 -12188 0
-24 -12188 0
-24 -114 -12189 0
c (0<=( - aux493 + SATLiteral(24) + SATLiteral(114)))
114 12189 0
24 12189 0
24 114 12188 0
c (( - aux494 + SATLiteral(54) + SATLiteral(99))<=0)
-99 -12191 0
-54 -12191 0
-54 -99 -12192 0
c (0<=( - aux494 + SATLiteral(54) + SATLiteral(99)))
99 12192 0
54 12192 0
54 99 12191 0
c (( - aux495 + SATLiteral(69) + SATLiteral(84))<=0)
-84 -12194 0
-69 -12194 0
-69 -84 -12195 0
c (0<=( - aux495 + SATLiteral(69) + SATLiteral(84)))
84 12195 0
69 12195 0
69 84 12194 0
c ((aux495 - aux496 + SATLiteral(39))<=0)
12194 -12197 0
12195 -12198 0
-39 -12197 0
-39 12194 -12198 0
-39 12195 -12200 0
c (0<=(aux495 - aux496 + SATLiteral(39)))
-12195 12200 0
-12194 12198 0
39 12200 0
39 -12195 12198 0
39 -12194 12197 0
c ((aux492 + aux494 - aux497)<=0)
12191 -12202 0
12192 -12203 0
12185 -12202 0
12185 12191 -12203 0
12185 12192 -12205 0
12186 -12203 0
12186 12191 -12205 0
12186 12192 -12207 0
c (0<=(aux492 + aux494 - aux497))
-12192 12207 0
-12191 12205 0
-12186 12207 0
-12186 -12192 12205 0
-12186 -12191 12203 0
-12185 12205 0
-12185 -12192 12203 0
-12185 -12191 12202 0
c (( - aux498 + SATLiteral(10) + SATLiteral(130))<=0)
-130 -12209 0
-10 -12209 0
-10 -130 -12210 0
c (0<=( - aux498 + SATLiteral(10) + SATLiteral(130)))
130 12210 0
10 12210 0
10 130 12209 0
c (( - aux499 + SATLiteral(25) + SATLiteral(115))<=0)
-115 -12212 0
-25 -12212 0
-25 -115 -12213 0
c (0<=( - aux499 + SATLiteral(25) + SATLiteral(115)))
115 12213 0
25 12213 0
25 115 12212 0
c (( - aux500 + SATLiteral(55) + SATLiteral(100))<=0)
-100 -12215 0
-55 -12215 0
-55 -100 -12216 0
c (0<=( - aux500 + SATLiteral(55) + SATLiteral(100)))
100 12216 0
55 12216 0
55 100 12215 0
c (( - aux501 + SATLiteral(70) + SATLiteral(85))<=0)
-85 -12218 0
-70 -12218 0
-70 -85 -12219 0
c (0<=( - aux501 + SATLiteral(70) + SATLiteral(85)))
85 12219 0
70 12219 0
70 85 12218 0
c ((aux501 - aux502 + SATLiteral(40))<=0)
12218 -12221 0
12219 -12222 0
-40 -12221 0
-40 12218 -12222 0
-40 12219 -12224 0
c (0<=(aux501 - aux502 + SATLiteral(40)))
-12219 12224 0
-12218 12222 0
40 12224 0
40 -12219 12222 0
40 -12218 12221 0
c ((aux498 + aux500 - aux503)<=0)
12215 -12226 0
12216 -12227 0
12209 -12226 0
12209 12215 -12227 0
12209 12216 -12229 0
12210 -12227 0
12210 12215 -12229 0
12210 12216 -12231 0
c (0<=(aux498 + aux500 - aux503))
-12216 12231 0
-12215 12229 0
-12210 12231 0
-12210 -12216 12229 0
-12210 -12215 12227 0
-12209 12229 0
-12209 -12216 12227 0
-12209 -12215 12226 0
c (( - aux504 + SATLiteral(137) + SATLiteral(257))<=0)
-257 -12233 0
-137 -12233 0
-137 -257 -12234 0
c (0<=( - aux504 + SATLiteral(137) + SATLiteral(257)))
257 12234 0
137 12234 0
137 257 12233 0
c (( - aux505 + SATLiteral(152) + SATLiteral(242))<=0)
-242 -12236 0
-152 -12236 0
-152 -242 -12237 0
c (0<=( - aux505 + SATLiteral(152) + SATLiteral(242)))
242 12237 0
152 12237 0
152 242 12236 0
c (( - aux506 + SATLiteral(182) + SATLiteral(227))<=0)
-227 -12239 0
-182 -12239 0
-182 -227 -12240 0
c (0<=( - aux506 + SATLiteral(182) + SATLiteral(227)))
227 12240 0
182 12240 0
182 227 12239 0
c (( - aux507 + SATLiteral(197) + SATLiteral(212))<=0)
-212 -12242 0
-197 -12242 0
-197 -212 -12243 0
c (0<=( - aux507 + SATLiteral(197) + SATLiteral(212)))
212 12243 0
197 12243 0
197 212 12242 0
c ((aux507 - aux508 + SATLiteral(167))<=0)
12242 -12245 0
12243 -12246 0
-167 -12245 0
-167 12242 -12246 0
-167 12243 -12248 0
c (0<=(aux507 - aux508 + SATLiteral(167)))
-12243 12248 0
-12242 12246 0
167 12248 0
167 -12243 12246 0
167 -12242 12245 0
c ((aux504 + aux506 - aux509)<=0)
12239 -12250 0
12240 -12251 0
12233 -12250 0
12233 12239 -12251 0
12233 12240 -12253 0
12234 -12251 0
12234 12239 -12253 0
12234 12240 -12255 0
c (0<=(aux504 + aux506 - aux509))
-12240 12255 0
-12239 12253 0
-12234 12255 0
-12234 -12240 12253 0
-12234 -12239 12251 0
-12233 12253 0
-12233 -12240 12251 0
-12233 -12239 12250 0
c (( - aux510 + SATLiteral(138) + SATLiteral(258))<=0)
-258 -12257 0
-138 -12257 0
-138 -258 -12258 0
c (0<=( - aux510 + SATLiteral(138) + SATLiteral(258)))
258 12258 0
138 12258 0
138 258 12257 0
c (( - aux511 + SATLiteral(153) + SATLiteral(243))<=0)
-243 -12260 0
-153 -12260 0
-153 -243 -12261 0
c (0<=( - aux511 + SATLiteral(153) + SATLiteral(243)))
243 12261 0
153 12261 0
153 243 12260 0
c (( - aux512 + SATLiteral(183) + SATLiteral(228))<=0)
-228 -12263 0
-183 -12263 0
-183 -228 -12264 0
c (0<=( - aux512 + SATLiteral(183) + SATLiteral(228)))
228 12264 0
183 12264 0
183 228 12263 0
c (( - aux513 + SATLiteral(198) + SATLiteral(213))<=0)
-213 -12266 0
-198 -12266 0
-198 -213 -12267 0
c (0<=( - aux513 + SATLiteral(198) + SATLiteral(213)))
213 12267 0
198 12267 0
198 213 12266 0
c ((aux513 - aux514 + SATLiteral(168))<=0)
12266 -12269 0
12267 -12270 0
-168 -12269 0
-168 12266 -12270 0
-168 12267 -12272 0
c (0<=(aux513 - aux514 + SATLiteral(168)))
-12267 12272 0
-12266 12270 0
168 12272 0
168 -12267 12270 0
168 -12266 12269 0
c ((aux510 + aux512 - aux515)<=0)
12263 -12274 0
12264 -12275 0
12257 -12274 0
12257 12263 -12275 0
12257 12264 -12277 0
12258 -12275 0
12258 12263 -12277 0
12258 12264 -12279 0
c (0<=(aux510 + aux512 - aux515))
-12264 12279 0
-12263 12277 0
-12258 12279 0
-12258 -12264 12277 0
-12258 -12263 12275 0
-12257 12277 0
-12257 -12264 12275 0
-12257 -12263 12274 0
c (( - aux516 + SATLiteral(139) + SATLiteral(259))<=0)
-259 -12281 0
-139 -12281 0
-139 -259 -12282 0
c (0<=( - aux516 + SATLiteral(139) + SATLiteral(259)))
259 12282 0
139 12282 0
139 259 12281 0
c (( - aux517 + SATLiteral(154) + SATLiteral(244))<=0)
-244 -12284 0
-154 -12284 0
-154 -244 -12285 0
c (0<=( - aux517 + SATLiteral(154) + SATLiteral(244)))
244 12285 0
154 12285 0
154 244 12284 0
c (( - aux518 + SATLiteral(184) + SATLiteral(229))<=0)
-229 -12287 0
-184 -12287 0
-184 -229 -12288 0
c (0<=( - aux518 + SATLiteral(184) + SATLiteral(229)))
229 12288 0
184 12288 0
184 229 12287 0
c (( - aux519 + SATLiteral(199) + SATLiteral(214))<=0)
-214 -12290 0
-199 -12290 0
-199 -214 -12291 0
c (0<=( - aux519 + SATLiteral(199) + SATLiteral(214)))
214 12291 0
199 12291 0
199 214 12290 0
c ((aux519 - aux520 + SATLiteral(169))<=0)
12290 -12293 0
12291 -12294 0
-169 -12293 0
-169 12290 -12294 0
-169 12291 -12296 0
c (0<=(aux519 - aux520 + SATLiteral(169)))
-12291 12296 0
-12290 12294 0
169 12296 0
169 -12291 12294 0
169 -12290 12293 0
c ((aux516 + aux518 - aux521)<=0)
12287 -12298 0
12288 -12299 0
12281 -12298 0
12281 12287 -12299 0
12281 12288 -12301 0
12282 -12299 0
12282 12287 -12301 0
12282 12288 -12303 0
c (0<=(aux516 + aux518 - aux521))
-12288 12303 0
-12287 12301 0
-12282 12303 0
-12282 -12288 12301 0
-12282 -12287 12299 0
-12281 12301 0
-12281 -12288 12299 0
-12281 -12287 12298 0
c (( - aux522 + SATLiteral(140) + SATLiteral(260))<=0)
-260 -12305 0
-140 -12305 0
-140 -260 -12306 0
c (0<=( - aux522 + SATLiteral(140) + SATLiteral(260)))
260 12306 0
140 12306 0
140 260 12305 0
c (( - aux523 + SATLiteral(155) + SATLiteral(245))<=0)
-245 -12308 0
-155 -12308 0
-155 -245 -12309 0
c (0<=( - aux523 + SATLiteral(155) + SATLiteral(245)))
245 12309 0
155 12309 0
155 245 12308 0
c (( - aux524 + SATLiteral(185) + SATLiteral(230))<=0)
-230 -12311 0
-185 -12311 0
-185 -230 -12312 0
c (0<=( - aux524 + SATLiteral(185) + SATLiteral(230)))
230 12312 0
185 12312 0
185 230 12311 0
c (( - aux525 + SATLiteral(200) + SATLiteral(215))<=0)
-215 -12314 0
-200 -12314 0
-200 -215 -12315 0
c (0<=( - aux525 + SATLiteral(200) + SATLiteral(215)))
215 12315 0
200 12315 0
200 215 12314 0
c ((aux525 - aux526 + SATLiteral(170))<=0)
12314 -12317 0
12315 -12318 0
-170 -12317 0
-170 12314 -12318 0
-170 12315 -12320 0
c (0<=(aux525 - aux526 + SATLiteral(170)))
-12315 12320 0
-12314 12318 0
170 12320 0
170 -12315 12318 0
170 -12314 12317 0
c ((aux522 + aux524 - aux527)<=0)
12311 -12322 0
12312 -12323 0
12305 -12322 0
12305 12311 -12323 0
12305 12312 -12325 0
12306 -12323 0
12306 12311 -12325 0
12306 12312 -12327 0
c (0<=(aux522 + aux524 - aux527))
-12312 12327 0
-12311 12325 0
-12306 12327 0
-12306 -12312 12325 0
-12306 -12311 12323 0
-12305 12325 0
-12305 -12312 12323 0
-12305 -12311 12322 0
c (( - aux528 + SATLiteral(141) + SATLiteral(261))<=0)
-261 -12329 0
-141 -12329 0
-141 -261 -12330 0
c (0<=( - aux528 + SATLiteral(141) + SATLiteral(261)))
261 12330 0
141 12330 0
141 261 12329 0
c (( - aux529 + SATLiteral(156) + SATLiteral(246))<=0)
-246 -12332 0
-156 -12332 0
-156 -246 -12333 0
c (0<=( - aux529 + SATLiteral(156) + SATLiteral(246)))
246 12333 0
156 12333 0
156 246 12332 0
c (( - aux530 + SATLiteral(186) + SATLiteral(231))<=0)
-231 -12335 0
-186 -12335 0
-186 -231 -12336 0
c (0<=( - aux530 + SATLiteral(186) + SATLiteral(231)))
231 12336 0
186 12336 0
186 231 12335 0
c (( - aux531 + SATLiteral(201) + SATLiteral(216))<=0)
-216 -12338 0
-201 -12338 0
-201 -216 -12339 0
c (0<=( - aux531 + SATLiteral(201) + SATLiteral(216)))
216 12339 0
201 12339 0
201 216 12338 0
c ((aux531 - aux532 + SATLiteral(171))<=0)
12338 -12341 0
12339 -12342 0
-171 -12341 0
-171 12338 -12342 0
-171 12339 -12344 0
c (0<=(aux531 - aux532 + SATLiteral(171)))
-12339 12344 0
-12338 12342 0
171 12344 0
171 -12339 12342 0
171 -12338 12341 0
c ((aux528 + aux530 - aux533)<=0)
12335 -12346 0
12336 -12347 0
12329 -12346 0
12329 12335 -12347 0
12329 12336 -12349 0
12330 -12347 0
12330 12335 -12349 0
12330 12336 -12351 0
c (0<=(aux528 + aux530 - aux533))
-12336 12351 0
-12335 12349 0
-12330 12351 0
-12330 -12336 12349 0
-12330 -12335 12347 0
-12329 12349 0
-12329 -12336 12347 0
-12329 -12335 12346 0
c (( - aux534 + SATLiteral(142) + SATLiteral(262))<=0)
-262 -12353 0
-142 -12353 0
-142 -262 -12354 0
c (0<=( - aux534 + SATLiteral(142) + SATLiteral(262)))
262 12354 0
142 12354 0
142 262 12353 0
c (( - aux535 + SATLiteral(157) + SATLiteral(247))<=0)
-247 -12356 0
-157 -12356 0
-157 -247 -12357 0
c (0<=( - aux535 + SATLiteral(157) + SATLiteral(247)))
247 12357 0
157 12357 0
157 247 12356 0
c (( - aux536 + SATLiteral(187) + SATLiteral(232))<=0)
-232 -12359 0
-187 -12359 0
-187 -232 -12360 0
c (0<=( - aux536 + SATLiteral(187) + SATLiteral(232)))
232 12360 0
187 12360 0
187 232 12359 0
c (( - aux537 + SATLiteral(202) + SATLiteral(217))<=0)
-217 -12362 0
-202 -12362 0
-202 -217 -12363 0
c (0<=( - aux537 + SATLiteral(202) + SATLiteral(217)))
217 12363 0
202 12363 0
202 217 12362 0
c ((aux537 - aux538 + SATLiteral(172))<=0)
12362 -12365 0
12363 -12366 0
-172 -12365 0
-172 12362 -12366 0
-172 12363 -12368 0
c (0<=(aux537 - aux538 + SATLiteral(172)))
-12363 12368 0
-12362 12366 0
172 12368 0
172 -12363 12366 0
172 -12362 12365 0
c ((aux534 + aux536 - aux539)<=0)
12359 -12370 0
12360 -12371 0
12353 -12370 0
12353 12359 -12371 0
12353 12360 -12373 0
12354 -12371 0
12354 12359 -12373 0
12354 12360 -12375 0
c (0<=(aux534 + aux536 - aux539))
-12360 12375 0
-12359 12373 0
-12354 12375 0
-12354 -12360 12373 0
-12354 -12359 12371 0
-12353 12373 0
-12353 -12360 12371 0
-12353 -12359 12370 0
c (( - aux540 + SATLiteral(143) + SATLiteral(263))<=0)
-263 -12377 0
-143 -12377 0
-143 -263 -12378 0
c (0<=( - aux540 + SATLiteral(143) + SATLiteral(263)))
263 12378 0
143 12378 0
143 263 12377 0
c (( - aux541 + SATLiteral(158) + SATLiteral(248))<=0)
-248 -12380 0
-158 -12380 0
-158 -248 -12381 0
c (0<=( - aux541 + SATLiteral(158) + SATLiteral(248)))
248 12381 0
158 12381 0
158 248 12380 0
c (( - aux542 + SATLiteral(188) + SATLiteral(233))<=0)
-233 -12383 0
-188 -12383 0
-188 -233 -12384 0
c (0<=( - aux542 + SATLiteral(188) + SATLiteral(233)))
233 12384 0
188 12384 0
188 233 12383 0
c (( - aux543 + SATLiteral(203) + SATLiteral(218))<=0)
-218 -12386 0
-203 -12386 0
-203 -218 -12387 0
c (0<=( - aux543 + SATLiteral(203) + SATLiteral(218)))
218 12387 0
203 12387 0
203 218 12386 0
c ((aux543 - aux544 + SATLiteral(173))<=0)
12386 -12389 0
12387 -12390 0
-173 -12389 0
-173 12386 -12390 0
-173 12387 -12392 0
c (0<=(aux543 - aux544 + SATLiteral(173)))
-12387 12392 0
-12386 12390 0
173 12392 0
173 -12387 12390 0
173 -12386 12389 0
c ((aux540 + aux542 - aux545)<=0)
12383 -12394 0
12384 -12395 0
12377 -12394 0
12377 12383 -12395 0
12377 12384 -12397 0
12378 -12395 0
12378 12383 -12397 0
12378 12384 -12399 0
c (0<=(aux540 + aux542 - aux545))
-12384 12399 0
-12383 12397 0
-12378 12399 0
-12378 -12384 12397 0
-12378 -12383 12395 0
-12377 12397 0
-12377 -12384 12395 0
-12377 -12383 12394 0
c (( - aux546 + SATLiteral(144) + SATLiteral(264))<=0)
-264 -12401 0
-144 -12401 0
-144 -264 -12402 0
c (0<=( - aux546 + SATLiteral(144) + SATLiteral(264)))
264 12402 0
144 12402 0
144 264 12401 0
c (( - aux547 + SATLiteral(159) + SATLiteral(249))<=0)
-249 -12404 0
-159 -12404 0
-159 -249 -12405 0
c (0<=( - aux547 + SATLiteral(159) + SATLiteral(249)))
249 12405 0
159 12405 0
159 249 12404 0
c (( - aux548 + SATLiteral(189) + SATLiteral(234))<=0)
-234 -12407 0
-189 -12407 0
-189 -234 -12408 0
c (0<=( - aux548 + SATLiteral(189) + SATLiteral(234)))
234 12408 0
189 12408 0
189 234 12407 0
c (( - aux549 + SATLiteral(204) + SATLiteral(219))<=0)
-219 -12410 0
-204 -12410 0
-204 -219 -12411 0
c (0<=( - aux549 + SATLiteral(204) + SATLiteral(219)))
219 12411 0
204 12411 0
204 219 12410 0
c ((aux549 - aux550 + SATLiteral(174))<=0)
12410 -12413 0
12411 -12414 0
-174 -12413 0
-174 12410 -12414 0
-174 12411 -12416 0
c (0<=(aux549 - aux550 + SATLiteral(174)))
-12411 12416 0
-12410 12414 0
174 12416 0
174 -12411 12414 0
174 -12410 12413 0
c ((aux546 + aux548 - aux551)<=0)
12407 -12418 0
12408 -12419 0
12401 -12418 0
12401 12407 -12419 0
12401 12408 -12421 0
12402 -12419 0
12402 12407 -12421 0
12402 12408 -12423 0
c (0<=(aux546 + aux548 - aux551))
-12408 12423 0
-12407 12421 0
-12402 12423 0
-12402 -12408 12421 0
-12402 -12407 12419 0
-12401 12421 0
-12401 -12408 12419 0
-12401 -12407 12418 0
c (( - aux552 + SATLiteral(145) + SATLiteral(265))<=0)
-265 -12425 0
-145 -12425 0
-145 -265 -12426 0
c (0<=( - aux552 + SATLiteral(145) + SATLiteral(265)))
265 12426 0
145 12426 0
145 265 12425 0
c (( - aux553 + SATLiteral(160) + SATLiteral(250))<=0)
-250 -12428 0
-160 -12428 0
-160 -250 -12429 0
c (0<=( - aux553 + SATLiteral(160) + SATLiteral(250)))
250 12429 0
160 12429 0
160 250 12428 0
c (( - aux554 + SATLiteral(190) + SATLiteral(235))<=0)
-235 -12431 0
-190 -12431 0
-190 -235 -12432 0
c (0<=( - aux554 + SATLiteral(190) + SATLiteral(235)))
235 12432 0
190 12432 0
190 235 12431 0
c (( - aux555 + SATLiteral(205) + SATLiteral(220))<=0)
-220 -12434 0
-205 -12434 0
-205 -220 -12435 0
c (0<=( - aux555 + SATLiteral(205) + SATLiteral(220)))
220 12435 0
205 12435 0
205 220 12434 0
c ((aux555 - aux556 + SATLiteral(175))<=0)
12434 -12437 0
12435 -12438 0
-175 -12437 0
-175 12434 -12438 0
-175 12435 -12440 0
c (0<=(aux555 - aux556 + SATLiteral(175)))
-12435 12440 0
-12434 12438 0
175 12440 0
175 -12435 12438 0
175 -12434 12437 0
c ((aux552 + aux554 - aux557)<=0)
12431 -12442 0
12432 -12443 0
12425 -12442 0
12425 12431 -12443 0
12425 12432 -12445 0
12426 -12443 0
12426 12431 -12445 0
12426 12432 -12447 0
c (0<=(aux552 + aux554 - aux557))
-12432 12447 0
-12431 12445 0
-12426 12447 0
-12426 -12432 12445 0
-12426 -12431 12443 0
-12425 12445 0
-12425 -12432 12443 0
-12425 -12431 12442 0
c (( - aux558 + SATLiteral(272) + SATLiteral(392))<=0)
-392 -12449 0
-272 -12449 0
-272 -392 -12450 0
c (0<=( - aux558 + SATLiteral(272) + SATLiteral(392)))
392 12450 0
272 12450 0
272 392 12449 0
c (( - aux559 + SATLiteral(287) + SATLiteral(377))<=0)
-377 -12452 0
-287 -12452 0
-287 -377 -12453 0
c (0<=( - aux559 + SATLiteral(287) + SATLiteral(377)))
377 12453 0
287 12453 0
287 377 12452 0
c (( - aux560 + SATLiteral(317) + SATLiteral(362))<=0)
-362 -12455 0
-317 -12455 0
-317 -362 -12456 0
c (0<=( - aux560 + SATLiteral(317) + SATLiteral(362)))
362 12456 0
317 12456 0
317 362 12455 0
c (( - aux561 + SATLiteral(332) + SATLiteral(347))<=0)
-347 -12458 0
-332 -12458 0
-332 -347 -12459 0
c (0<=( - aux561 + SATLiteral(332) + SATLiteral(347)))
347 12459 0
332 12459 0
332 347 12458 0
c ((aux561 - aux562 + SATLiteral(302))<=0)
12458 -12461 0
12459 -12462 0
-302 -12461 0
-302 12458 -12462 0
-302 12459 -12464 0
c (0<=(aux561 - aux562 + SATLiteral(302)))
-12459 12464 0
-12458 12462 0
302 12464 0
302 -12459 12462 0
302 -12458 12461 0
c ((aux558 + aux560 - aux563)<=0)
12455 -12466 0
12456 -12467 0
12449 -12466 0
12449 12455 -12467 0
12449 12456 -12469 0
12450 -12467 0
12450 12455 -12469 0
12450 12456 -12471 0
c (0<=(aux558 + aux560 - aux563))
-12456 12471 0
-12455 12469 0
-12450 12471 0
-12450 -12456 12469 0
-12450 -12455 12467 0
-12449 12469 0
-12449 -12456 12467 0
-12449 -12455 12466 0
c (( - aux564 + SATLiteral(273) + SATLiteral(393))<=0)
-393 -12473 0
-273 -12473 0
-273 -393 -12474 0
c (0<=( - aux564 + SATLiteral(273) + SATLiteral(393)))
393 12474 0
273 12474 0
273 393 12473 0
c (( - aux565 + SATLiteral(288) + SATLiteral(378))<=0)
-378 -12476 0
-288 -12476 0
-288 -378 -12477 0
c (0<=( - aux565 + SATLiteral(288) + SATLiteral(378)))
378 12477 0
288 12477 0
288 378 12476 0
c (( - aux566 + SATLiteral(318) + SATLiteral(363))<=0)
-363 -12479 0
-318 -12479 0
-318 -363 -12480 0
c (0<=( - aux566 + SATLiteral(318) + SATLiteral(363)))
363 12480 0
318 12480 0
318 363 12479 0
c (( - aux567 + SATLiteral(333) + SATLiteral(348))<=0)
-348 -12482 0
-333 -12482 0
-333 -348 -12483 0
c (0<=( - aux567 + SATLiteral(333) + SATLiteral(348)))
348 12483 0
333 12483 0
333 348 12482 0
c ((aux567 - aux568 + SATLiteral(303))<=0)
12482 -12485 0
12483 -12486 0
-303 -12485 0
-303 12482 -12486 0
-303 12483 -12488 0
c (0<=(aux567 - aux568 + SATLiteral(303)))
-12483 12488 0
-12482 12486 0
303 12488 0
303 -12483 12486 0
303 -12482 12485 0
c ((aux564 + aux566 - aux569)<=0)
12479 -12490 0
12480 -12491 0
12473 -12490 0
12473 12479 -12491 0
12473 12480 -12493 0
12474 -12491 0
12474 12479 -12493 0
12474 12480 -12495 0
c (0<=(aux564 + aux566 - aux569))
-12480 12495 0
-12479 12493 0
-12474 12495 0
-12474 -12480 12493 0
-12474 -12479 12491 0
-12473 12493 0
-12473 -12480 12491 0
-12473 -12479 12490 0
c (( - aux570 + SATLiteral(274) + SATLiteral(394))<=0)
-394 -12497 0
-274 -12497 0
-274 -394 -12498 0
c (0<=( - aux570 + SATLiteral(274) + SATLiteral(394)))
394 12498 0
274 12498 0
274 394 12497 0
c (( - aux571 + SATLiteral(289) + SATLiteral(379))<=0)
-379 -12500 0
-289 -12500 0
-289 -379 -12501 0
c (0<=( - aux571 + SATLiteral(289) + SATLiteral(379)))
379 12501 0
289 12501 0
289 379 12500 0
c (( - aux572 + SATLiteral(319) + SATLiteral(364))<=0)
-364 -12503 0
-319 -12503 0
-319 -364 -12504 0
c (0<=( - aux572 + SATLiteral(319) + SATLiteral(364)))
364 12504 0
319 12504 0
319 364 12503 0
c (( - aux573 + SATLiteral(334) + SATLiteral(349))<=0)
-349 -12506 0
-334 -12506 0
-334 -349 -12507 0
c (0<=( - aux573 + SATLiteral(334) + SATLiteral(349)))
349 12507 0
334 12507 0
334 349 12506 0
c ((aux573 - aux574 + SATLiteral(304))<=0)
12506 -12509 0
12507 -12510 0
-304 -12509 0
-304 12506 -12510 0
-304 12507 -12512 0
c (0<=(aux573 - aux574 + SATLiteral(304)))
-12507 12512 0
-12506 12510 0
304 12512 0
304 -12507 12510 0
304 -12506 12509 0
c ((aux570 + aux572 - aux575)<=0)
12503 -12514 0
12504 -12515 0
12497 -12514 0
12497 12503 -12515 0
12497 12504 -12517 0
12498 -12515 0
12498 12503 -12517 0
12498 12504 -12519 0
c (0<=(aux570 + aux572 - aux575))
-12504 12519 0
-12503 12517 0
-12498 12519 0
-12498 -12504 12517 0
-12498 -12503 12515 0
-12497 12517 0
-12497 -12504 12515 0
-12497 -12503 12514 0
c (( - aux576 + SATLiteral(275) + SATLiteral(395))<=0)
-395 -12521 0
-275 -12521 0
-275 -395 -12522 0
c (0<=( - aux576 + SATLiteral(275) + SATLiteral(395)))
395 12522 0
275 12522 0
275 395 12521 0
c (( - aux577 + SATLiteral(290) + SATLiteral(380))<=0)
-380 -12524 0
-290 -12524 0
-290 -380 -12525 0
c (0<=( - aux577 + SATLiteral(290) + SATLiteral(380)))
380 12525 0
290 12525 0
290 380 12524 0
c (( - aux578 + SATLiteral(320) + SATLiteral(365))<=0)
-365 -12527 0
-320 -12527 0
-320 -365 -12528 0
c (0<=( - aux578 + SATLiteral(320) + SATLiteral(365)))
365 12528 0
320 12528 0
320 365 12527 0
c (( - aux579 + SATLiteral(335) + SATLiteral(350))<=0)
-350 -12530 0
-335 -12530 0
-335 -350 -12531 0
c (0<=( - aux579 + SATLiteral(335) + SATLiteral(350)))
350 12531 0
335 12531 0
335 350 12530 0
c ((aux579 - aux580 + SATLiteral(305))<=0)
12530 -12533 0
12531 -12534 0
-305 -12533 0
-305 12530 -12534 0
-305 12531 -12536 0
c (0<=(aux579 - aux580 + SATLiteral(305)))
-12531 12536 0
-12530 12534 0
305 12536 0
305 -12531 12534 0
305 -12530 12533 0
c ((aux576 + aux578 - aux581)<=0)
12527 -12538 0
12528 -12539 0
12521 -12538 0
12521 12527 -12539 0
12521 12528 -12541 0
12522 -12539 0
12522 12527 -12541 0
12522 12528 -12543 0
c (0<=(aux576 + aux578 - aux581))
-12528 12543 0
-12527 12541 0
-12522 12543 0
-12522 -12528 12541 0
-12522 -12527 12539 0
-12521 12541 0
-12521 -12528 12539 0
-12521 -12527 12538 0
c (( - aux582 + SATLiteral(276) + SATLiteral(396))<=0)
-396 -12545 0
-276 -12545 0
-276 -396 -12546 0
c (0<=( - aux582 + SATLiteral(276) + SATLiteral(396)))
396 12546 0
276 12546 0
276 396 12545 0
c (( - aux583 + SATLiteral(291) + SATLiteral(381))<=0)
-381 -12548 0
-291 -12548 0
-291 -381 -12549 0
c (0<=( - aux583 + SATLiteral(291) + SATLiteral(381)))
381 12549 0
291 12549 0
291 381 12548 0
c (( - aux584 + SATLiteral(321) + SATLiteral(366))<=0)
-366 -12551 0
-321 -12551 0
-321 -366 -12552 0
c (0<=( - aux584 + SATLiteral(321) + SATLiteral(366)))
366 12552 0
321 12552 0
321 366 12551 0
c (( - aux585 + SATLiteral(336) + SATLiteral(351))<=0)
-351 -12554 0
-336 -12554 0
-336 -351 -12555 0
c (0<=( - aux585 + SATLiteral(336) + SATLiteral(351)))
351 12555 0
336 12555 0
336 351 12554 0
c ((aux585 - aux586 + SATLiteral(306))<=0)
12554 -12557 0
12555 -12558 0
-306 -12557 0
-306 12554 -12558 0
-306 12555 -12560 0
c (0<=(aux585 - aux586 + SATLiteral(306)))
-12555 12560 0
-12554 12558 0
306 12560 0
306 -12555 12558 0
306 -12554 12557 0
c ((aux582 + aux584 - aux587)<=0)
12551 -12562 0
12552 -12563 0
12545 -12562 0
12545 12551 -12563 0
12545 12552 -12565 0
12546 -12563 0
12546 12551 -12565 0
12546 12552 -12567 0
c (0<=(aux582 + aux584 - aux587))
-12552 12567 0
-12551 12565 0
-12546 12567 0
-12546 -12552 12565 0
-12546 -12551 12563 0
-12545 12565 0
-12545 -12552 12563 0
-12545 -12551 12562 0
c (( - aux588 + SATLiteral(277) + SATLiteral(397))<=0)
-397 -12569 0
-277 -12569 0
-277 -397 -12570 0
c (0<=( - aux588 + SATLiteral(277) + SATLiteral(397)))
397 12570 0
277 12570 0
277 397 12569 0
c (( - aux589 + SATLiteral(292) + SATLiteral(382))<=0)
-382 -12572 0
-292 -12572 0
-292 -382 -12573 0
c (0<=( - aux589 + SATLiteral(292) + SATLiteral(382)))
382 12573 0
292 12573 0
292 382 12572 0
c (( - aux590 + SATLiteral(322) + SATLiteral(367))<=0)
-367 -12575 0
-322 -12575 0
-322 -367 -12576 0
c (0<=( - aux590 + SATLiteral(322) + SATLiteral(367)))
367 12576 0
322 12576 0
322 367 12575 0
c (( - aux591 + SATLiteral(337) + SATLiteral(352))<=0)
-352 -12578 0
-337 -12578 0
-337 -352 -12579 0
c (0<=( - aux591 + SATLiteral(337) + SATLiteral(352)))
352 12579 0
337 12579 0
337 352 12578 0
c ((aux591 - aux592 + SATLiteral(307))<=0)
12578 -12581 0
12579 -12582 0
-307 -12581 0
-307 12578 -12582 0
-307 12579 -12584 0
c (0<=(aux591 - aux592 + SATLiteral(307)))
-12579 12584 0
-12578 12582 0
307 12584 0
307 -12579 12582 0
307 -12578 12581 0
c ((aux588 + aux590 - aux593)<=0)
12575 -12586 0
12576 -12587 0
12569 -12586 0
12569 12575 -12587 0
12569 12576 -12589 0
12570 -12587 0
12570 12575 -12589 0
12570 12576 -12591 0
c (0<=(aux588 + aux590 - aux593))
-12576 12591 0
-12575 12589 0
-12570 12591 0
-12570 -12576 12589 0
-12570 -12575 12587 0
-12569 12589 0
-12569 -12576 12587 0
-12569 -12575 12586 0
c (( - aux594 + SATLiteral(278) + SATLiteral(398))<=0)
-398 -12593 0
-278 -12593 0
-278 -398 -12594 0
c (0<=( - aux594 + SATLiteral(278) + SATLiteral(398)))
398 12594 0
278 12594 0
278 398 12593 0
c (( - aux595 + SATLiteral(293) + SATLiteral(383))<=0)
-383 -12596 0
-293 -12596 0
-293 -383 -12597 0
c (0<=( - aux595 + SATLiteral(293) + SATLiteral(383)))
383 12597 0
293 12597 0
293 383 12596 0
c (( - aux596 + SATLiteral(323) + SATLiteral(368))<=0)
-368 -12599 0
-323 -12599 0
-323 -368 -12600 0
c (0<=( - aux596 + SATLiteral(323) + SATLiteral(368)))
368 12600 0
323 12600 0
323 368 12599 0
c (( - aux597 + SATLiteral(338) + SATLiteral(353))<=0)
-353 -12602 0
-338 -12602 0
-338 -353 -12603 0
c (0<=( - aux597 + SATLiteral(338) + SATLiteral(353)))
353 12603 0
338 12603 0
338 353 12602 0
c ((aux597 - aux598 + SATLiteral(308))<=0)
12602 -12605 0
12603 -12606 0
-308 -12605 0
-308 12602 -12606 0
-308 12603 -12608 0
c (0<=(aux597 - aux598 + SATLiteral(308)))
-12603 12608 0
-12602 12606 0
308 12608 0
308 -12603 12606 0
308 -12602 12605 0
c ((aux594 + aux596 - aux599)<=0)
12599 -12610 0
12600 -12611 0
12593 -12610 0
12593 12599 -12611 0
12593 12600 -12613 0
12594 -12611 0
12594 12599 -12613 0
12594 12600 -12615 0
c (0<=(aux594 + aux596 - aux599))
-12600 12615 0
-12599 12613 0
-12594 12615 0
-12594 -12600 12613 0
-12594 -12599 12611 0
-12593 12613 0
-12593 -12600 12611 0
-12593 -12599 12610 0
c (( - aux600 + SATLiteral(279) + SATLiteral(399))<=0)
-399 -12617 0
-279 -12617 0
-279 -399 -12618 0
c (0<=( - aux600 + SATLiteral(279) + SATLiteral(399)))
399 12618 0
279 12618 0
279 399 12617 0
c (( - aux601 + SATLiteral(294) + SATLiteral(384))<=0)
-384 -12620 0
-294 -12620 0
-294 -384 -12621 0
c (0<=( - aux601 + SATLiteral(294) + SATLiteral(384)))
384 12621 0
294 12621 0
294 384 12620 0
c (( - aux602 + SATLiteral(324) + SATLiteral(369))<=0)
-369 -12623 0
-324 -12623 0
-324 -369 -12624 0
c (0<=( - aux602 + SATLiteral(324) + SATLiteral(369)))
369 12624 0
324 12624 0
324 369 12623 0
c (( - aux603 + SATLiteral(339) + SATLiteral(354))<=0)
-354 -12626 0
-339 -12626 0
-339 -354 -12627 0
c (0<=( - aux603 + SATLiteral(339) + SATLiteral(354)))
354 12627 0
339 12627 0
339 354 12626 0
c ((aux603 - aux604 + SATLiteral(309))<=0)
12626 -12629 0
12627 -12630 0
-309 -12629 0
-309 12626 -12630 0
-309 12627 -12632 0
c (0<=(aux603 - aux604 + SATLiteral(309)))
-12627 12632 0
-12626 12630 0
309 12632 0
309 -12627 12630 0
309 -12626 12629 0
c ((aux600 + aux602 - aux605)<=0)
12623 -12634 0
12624 -12635 0
12617 -12634 0
12617 12623 -12635 0
12617 12624 -12637 0
12618 -12635 0
12618 12623 -12637 0
12618 12624 -12639 0
c (0<=(aux600 + aux602 - aux605))
-12624 12639 0
-12623 12637 0
-12618 12639 0
-12618 -12624 12637 0
-12618 -12623 12635 0
-12617 12637 0
-12617 -12624 12635 0
-12617 -12623 12634 0
c (( - aux606 + SATLiteral(280) + SATLiteral(400))<=0)
-400 -12641 0
-280 -12641 0
-280 -400 -12642 0
c (0<=( - aux606 + SATLiteral(280) + SATLiteral(400)))
400 12642 0
280 12642 0
280 400 12641 0
c (( - aux607 + SATLiteral(295) + SATLiteral(385))<=0)
-385 -12644 0
-295 -12644 0
-295 -385 -12645 0
c (0<=( - aux607 + SATLiteral(295) + SATLiteral(385)))
385 12645 0
295 12645 0
295 385 12644 0
c (( - aux608 + SATLiteral(325) + SATLiteral(370))<=0)
-370 -12647 0
-325 -12647 0
-325 -370 -12648 0
c (0<=( - aux608 + SATLiteral(325) + SATLiteral(370)))
370 12648 0
325 12648 0
325 370 12647 0
c (( - aux609 + SATLiteral(340) + SATLiteral(355))<=0)
-355 -12650 0
-340 -12650 0
-340 -355 -12651 0
c (0<=( - aux609 + SATLiteral(340) + SATLiteral(355)))
355 12651 0
340 12651 0
340 355 12650 0
c ((aux609 - aux610 + SATLiteral(310))<=0)
12650 -12653 0
12651 -12654 0
-310 -12653 0
-310 12650 -12654 0
-310 12651 -12656 0
c (0<=(aux609 - aux610 + SATLiteral(310)))
-12651 12656 0
-12650 12654 0
310 12656 0
310 -12651 12654 0
310 -12650 12653 0
c ((aux606 + aux608 - aux611)<=0)
12647 -12658 0
12648 -12659 0
12641 -12658 0
12641 12647 -12659 0
12641 12648 -12661 0
12642 -12659 0
12642 12647 -12661 0
12642 12648 -12663 0
c (0<=(aux606 + aux608 - aux611))
-12648 12663 0
-12647 12661 0
-12642 12663 0
-12642 -12648 12661 0
-12642 -12647 12659 0
-12641 12661 0
-12641 -12648 12659 0
-12641 -12647 12658 0
c ((SATLiteral(407) + SATLiteral(527) - aux612)<=0)
-527 -12665 0
-407 -12665 0
-407 -527 -12666 0
c (0<=(SATLiteral(407) + SATLiteral(527) - aux612))
527 12666 0
407 12666 0
407 527 12665 0
c ((SATLiteral(422) + SATLiteral(512) - aux613)<=0)
-512 -12668 0
-422 -12668 0
-422 -512 -12669 0
c (0<=(SATLiteral(422) + SATLiteral(512) - aux613))
512 12669 0
422 12669 0
422 512 12668 0
c ((SATLiteral(452) + SATLiteral(497) - aux614)<=0)
-497 -12671 0
-452 -12671 0
-452 -497 -12672 0
c (0<=(SATLiteral(452) + SATLiteral(497) - aux614))
497 12672 0
452 12672 0
452 497 12671 0
c ((SATLiteral(467) + SATLiteral(482) - aux615)<=0)
-482 -12674 0
-467 -12674 0
-467 -482 -12675 0
c (0<=(SATLiteral(467) + SATLiteral(482) - aux615))
482 12675 0
467 12675 0
467 482 12674 0
c ((SATLiteral(437) + aux615 - aux616)<=0)
12674 -12677 0
12675 -12678 0
-437 -12677 0
-437 12674 -12678 0
-437 12675 -12680 0
c (0<=(SATLiteral(437) + aux615 - aux616))
-12675 12680 0
-12674 12678 0
437 12680 0
437 -12675 12678 0
437 -12674 12677 0
c ((aux612 + aux614 - aux617)<=0)
12671 -12682 0
12672 -12683 0
12665 -12682 0
12665 12671 -12683 0
12665 12672 -12685 0
12666 -12683 0
12666 12671 -12685 0
12666 12672 -12687 0
c (0<=(aux612 + aux614 - aux617))
-12672 12687 0
-12671 12685 0
-12666 12687 0
-12666 -12672 12685 0
-12666 -12671 12683 0
-12665 12685 0
-12665 -12672 12683 0
-12665 -12671 12682 0
c ((SATLiteral(408) + SATLiteral(528) - aux618)<=0)
-528 -12689 0
-408 -12689 0
-408 -528 -12690 0
c (0<=(SATLiteral(408) + SATLiteral(528) - aux618))
528 12690 0
408 12690 0
408 528 12689 0
c ((SATLiteral(423) + SATLiteral(513) - aux619)<=0)
-513 -12692 0
-423 -12692 0
-423 -513 -12693 0
c (0<=(SATLiteral(423) + SATLiteral(513) - aux619))
513 12693 0
423 12693 0
423 513 12692 0
c ((SATLiteral(453) + SATLiteral(498) - aux620)<=0)
-498 -12695 0
-453 -12695 0
-453 -498 -12696 0
c (0<=(SATLiteral(453) + SATLiteral(498) - aux620))
498 12696 0
453 12696 0
453 498 12695 0
c ((SATLiteral(468) + SATLiteral(483) - aux621)<=0)
-483 -12698 0
-468 -12698 0
-468 -483 -12699 0
c (0<=(SATLiteral(468) + SATLiteral(483) - aux621))
483 12699 0
468 12699 0
468 483 12698 0
c ((SATLiteral(438) + aux621 - aux622)<=0)
12698 -12701 0
12699 -12702 0
-438 -12701 0
-438 12698 -12702 0
-438 12699 -12704 0
c (0<=(SATLiteral(438) + aux621 - aux622))
-12699 12704 0
-12698 12702 0
438 12704 0
438 -12699 12702 0
438 -12698 12701 0
c ((aux618 + aux620 - aux623)<=0)
12695 -12706 0
12696 -12707 0
12689 -12706 0
12689 12695 -12707 0
12689 12696 -12709 0
12690 -12707 0
12690 12695 -12709 0
12690 12696 -12711 0
c (0<=(aux618 + aux620 - aux623))
-12696 12711 0
-12695 12709 0
-12690 12711 0
-12690 -12696 12709 0
-12690 -12695 12707 0
-12689 12709 0
-12689 -12696 12707 0
-12689 -12695 12706 0
c ((SATLiteral(409) + SATLiteral(529) - aux624)<=0)
-529 -12713 0
-409 -12713 0
-409 -529 -12714 0
c (0<=(SATLiteral(409) + SATLiteral(529) - aux624))
529 12714 0
409 12714 0
409 529 12713 0
c ((SATLiteral(424) + SATLiteral(514) - aux625)<=0)
-514 -12716 0
-424 -12716 0
-424 -514 -12717 0
c (0<=(SATLiteral(424) + SATLiteral(514) - aux625))
514 12717 0
424 12717 0
424 514 12716 0
c ((SATLiteral(454) + SATLiteral(499) - aux626)<=0)
-499 -12719 0
-454 -12719 0
-454 -499 -12720 0
c (0<=(SATLiteral(454) + SATLiteral(499) - aux626))
499 12720 0
454 12720 0
454 499 12719 0
c ((SATLiteral(469) + SATLiteral(484) - aux627)<=0)
-484 -12722 0
-469 -12722 0
-469 -484 -12723 0
c (0<=(SATLiteral(469) + SATLiteral(484) - aux627))
484 12723 0
469 12723 0
469 484 12722 0
c ((SATLiteral(439) + aux627 - aux628)<=0)
12722 -12725 0
12723 -12726 0
-439 -12725 0
-439 12722 -12726 0
-439 12723 -12728 0
c (0<=(SATLiteral(439) + aux627 - aux628))
-12723 12728 0
-12722 12726 0
439 12728 0
439 -12723 12726 0
439 -12722 12725 0
c ((aux624 + aux626 - aux629)<=0)
12719 -12730 0
12720 -12731 0
12713 -12730 0
12713 12719 -12731 0
12713 12720 -12733 0
12714 -12731 0
12714 12719 -12733 0
12714 12720 -12735 0
c (0<=(aux624 + aux626 - aux629))
-12720 12735 0
-12719 12733 0
-12714 12735 0
-12714 -12720 12733 0
-12714 -12719 12731 0
-12713 12733 0
-12713 -12720 12731 0
-12713 -12719 12730 0
c ((SATLiteral(410) + SATLiteral(530) - aux630)<=0)
-530 -12737 0
-410 -12737 0
-410 -530 -12738 0
c (0<=(SATLiteral(410) + SATLiteral(530) - aux630))
530 12738 0
410 12738 0
410 530 12737 0
c ((SATLiteral(425) + SATLiteral(515) - aux631)<=0)
-515 -12740 0
-425 -12740 0
-425 -515 -12741 0
c (0<=(SATLiteral(425) + SATLiteral(515) - aux631))
515 12741 0
425 12741 0
425 515 12740 0
c ((SATLiteral(455) + SATLiteral(500) - aux632)<=0)
-500 -12743 0
-455 -12743 0
-455 -500 -12744 0
c (0<=(SATLiteral(455) + SATLiteral(500) - aux632))
500 12744 0
455 12744 0
455 500 12743 0
c ((SATLiteral(470) + SATLiteral(485) - aux633)<=0)
-485 -12746 0
-470 -12746 0
-470 -485 -12747 0
c (0<=(SATLiteral(470) + SATLiteral(485) - aux633))
485 12747 0
470 12747 0
470 485 12746 0
c ((SATLiteral(440) + aux633 - aux634)<=0)
12746 -12749 0
12747 -12750 0
-440 -12749 0
-440 12746 -12750 0
-440 12747 -12752 0
c (0<=(SATLiteral(440) + aux633 - aux634))
-12747 12752 0
-12746 12750 0
440 12752 0
440 -12747 12750 0
440 -12746 12749 0
c ((aux630 + aux632 - aux635)<=0)
12743 -12754 0
12744 -12755 0
12737 -12754 0
12737 12743 -12755 0
12737 12744 -12757 0
12738 -12755 0
12738 12743 -12757 0
12738 12744 -12759 0
c (0<=(aux630 + aux632 - aux635))
-12744 12759 0
-12743 12757 0
-12738 12759 0
-12738 -12744 12757 0
-12738 -12743 12755 0
-12737 12757 0
-12737 -12744 12755 0
-12737 -12743 12754 0
c ((SATLiteral(411) + SATLiteral(531) - aux636)<=0)
-531 -12761 0
-411 -12761 0
-411 -531 -12762 0
c (0<=(SATLiteral(411) + SATLiteral(531) - aux636))
531 12762 0
411 12762 0
411 531 12761 0
c ((SATLiteral(426) + SATLiteral(516) - aux637)<=0)
-516 -12764 0
-426 -12764 0
-426 -516 -12765 0
c (0<=(SATLiteral(426) + SATLiteral(516) - aux637))
516 12765 0
426 12765 0
426 516 12764 0
c ((SATLiteral(456) + SATLiteral(501) - aux638)<=0)
-501 -12767 0
-456 -12767 0
-456 -501 -12768 0
c (0<=(SATLiteral(456) + SATLiteral(501) - aux638))
501 12768 0
456 12768 0
456 501 12767 0
c ((SATLiteral(471) + SATLiteral(486) - aux639)<=0)
-486 -12770 0
-471 -12770 0
-471 -486 -12771 0
c (0<=(SATLiteral(471) + SATLiteral(486) - aux639))
486 12771 0
471 12771 0
471 486 12770 0
c ((SATLiteral(441) + aux639 - aux640)<=0)
12770 -12773 0
12771 -12774 0
-441 -12773 0
-441 12770 -12774 0
-441 12771 -12776 0
c (0<=(SATLiteral(441) + aux639 - aux640))
-12771 12776 0
-12770 12774 0
441 12776 0
441 -12771 12774 0
441 -12770 12773 0
c ((aux636 + aux638 - aux641)<=0)
12767 -12778 0
12768 -12779 0
12761 -12778 0
12761 12767 -12779 0
12761 12768 -12781 0
12762 -12779 0
12762 12767 -12781 0
12762 12768 -12783 0
c (0<=(aux636 + aux638 - aux641))
-12768 12783 0
-12767 12781 0
-12762 12783 0
-12762 -12768 12781 0
-12762 -12767 12779 0
-12761 12781 0
-12761 -12768 12779 0
-12761 -12767 12778 0
c ((SATLiteral(412) + SATLiteral(532) - aux642)<=0)
-532 -12785 0
-412 -12785 0
-412 -532 -12786 0
c (0<=(SATLiteral(412) + SATLiteral(532) - aux642))
532 12786 0
412 12786 0
412 532 12785 0
c ((SATLiteral(427) + SATLiteral(517) - aux643)<=0)
-517 -12788 0
-427 -12788 0
-427 -517 -12789 0
c (0<=(SATLiteral(427) + SATLiteral(517) - aux643))
517 12789 0
427 12789 0
427 517 12788 0
c ((SATLiteral(457) + SATLiteral(502) - aux644)<=0)
-502 -12791 0
-457 -12791 0
-457 -502 -12792 0
c (0<=(SATLiteral(457) + SATLiteral(502) - aux644))
502 12792 0
457 12792 0
457 502 12791 0
c ((SATLiteral(472) + SATLiteral(487) - aux645)<=0)
-487 -12794 0
-472 -12794 0
-472 -487 -12795 0
c (0<=(SATLiteral(472) + SATLiteral(487) - aux645))
487 12795 0
472 12795 0
472 487 12794 0
c ((SATLiteral(442) + aux645 - aux646)<=0)
12794 -12797 0
12795 -12798 0
-442 -12797 0
-442 12794 -12798 0
-442 12795 -12800 0
c (0<=(SATLiteral(442) + aux645 - aux646))
-12795 12800 0
-12794 12798 0
442 12800 0
442 -12795 12798 0
442 -12794 12797 0
c ((aux642 + aux644 - aux647)<=0)
12791 -12802 0
12792 -12803 0
12785 -12802 0
12785 12791 -12803 0
12785 12792 -12805 0
12786 -12803 0
12786 12791 -12805 0
12786 12792 -12807 0
c (0<=(aux642 + aux644 - aux647))
-12792 12807 0
-12791 12805 0
-12786 12807 0
-12786 -12792 12805 0
-12786 -12791 12803 0
-12785 12805 0
-12785 -12792 12803 0
-12785 -12791 12802 0
c ((SATLiteral(413) + SATLiteral(533) - aux648)<=0)
-533 -12809 0
-413 -12809 0
-413 -533 -12810 0
c (0<=(SATLiteral(413) + SATLiteral(533) - aux648))
533 12810 0
413 12810 0
413 533 12809 0
c ((SATLiteral(428) + SATLiteral(518) - aux649)<=0)
-518 -12812 0
-428 -12812 0
-428 -518 -12813 0
c (0<=(SATLiteral(428) + SATLiteral(518) - aux649))
518 12813 0
428 12813 0
428 518 12812 0
c ((SATLiteral(458) + SATLiteral(503) - aux650)<=0)
-503 -12815 0
-458 -12815 0
-458 -503 -12816 0
c (0<=(SATLiteral(458) + SATLiteral(503) - aux650))
503 12816 0
458 12816 0
458 503 12815 0
c ((SATLiteral(473) + SATLiteral(488) - aux651)<=0)
-488 -12818 0
-473 -12818 0
-473 -488 -12819 0
c (0<=(SATLiteral(473) + SATLiteral(488) - aux651))
488 12819 0
473 12819 0
473 488 12818 0
c ((SATLiteral(443) + aux651 - aux652)<=0)
12818 -12821 0
12819 -12822 0
-443 -12821 0
-443 12818 -12822 0
-443 12819 -12824 0
c (0<=(SATLiteral(443) + aux651 - aux652))
-12819 12824 0
-12818 12822 0
443 12824 0
443 -12819 12822 0
443 -12818 12821 0
c ((aux648 + aux650 - aux653)<=0)
12815 -12826 0
12816 -12827 0
12809 -12826 0
12809 12815 -12827 0
12809 12816 -12829 0
12810 -12827 0
12810 12815 -12829 0
12810 12816 -12831 0
c (0<=(aux648 + aux650 - aux653))
-12816 12831 0
-12815 12829 0
-12810 12831 0
-12810 -12816 12829 0
-12810 -12815 12827 0
-12809 12829 0
-12809 -12816 12827 0
-12809 -12815 12826 0
c ((SATLiteral(414) + SATLiteral(534) - aux654)<=0)
-534 -12833 0
-414 -12833 0
-414 -534 -12834 0
c (0<=(SATLiteral(414) + SATLiteral(534) - aux654))
534 12834 0
414 12834 0
414 534 12833 0
c ((SATLiteral(429) + SATLiteral(519) - aux655)<=0)
-519 -12836 0
-429 -12836 0
-429 -519 -12837 0
c (0<=(SATLiteral(429) + SATLiteral(519) - aux655))
519 12837 0
429 12837 0
429 519 12836 0
c ((SATLiteral(459) + SATLiteral(504) - aux656)<=0)
-504 -12839 0
-459 -12839 0
-459 -504 -12840 0
c (0<=(SATLiteral(459) + SATLiteral(504) - aux656))
504 12840 0
459 12840 0
459 504 12839 0
c ((SATLiteral(474) + SATLiteral(489) - aux657)<=0)
-489 -12842 0
-474 -12842 0
-474 -489 -12843 0
c (0<=(SATLiteral(474) + SATLiteral(489) - aux657))
489 12843 0
474 12843 0
474 489 12842 0
c ((SATLiteral(444) + aux657 - aux658)<=0)
12842 -12845 0
12843 -12846 0
-444 -12845 0
-444 12842 -12846 0
-444 12843 -12848 0
c (0<=(SATLiteral(444) + aux657 - aux658))
-12843 12848 0
-12842 12846 0
444 12848 0
444 -12843 12846 0
444 -12842 12845 0
c ((aux654 + aux656 - aux659)<=0)
12839 -12850 0
12840 -12851 0
12833 -12850 0
12833 12839 -12851 0
12833 12840 -12853 0
12834 -12851 0
12834 12839 -12853 0
12834 12840 -12855 0
c (0<=(aux654 + aux656 - aux659))
-12840 12855 0
-12839 12853 0
-12834 12855 0
-12834 -12840 12853 0
-12834 -12839 12851 0
-12833 12853 0
-12833 -12840 12851 0
-12833 -12839 12850 0
c ((SATLiteral(415) + SATLiteral(535) - aux660)<=0)
-535 -12857 0
-415 -12857 0
-415 -535 -12858 0
c (0<=(SATLiteral(415) + SATLiteral(535) - aux660))
535 12858 0
415 12858 0
415 535 12857 0
c ((SATLiteral(430) + SATLiteral(520) - aux661)<=0)
-520 -12860 0
-430 -12860 0
-430 -520 -12861 0
c (0<=(SATLiteral(430) + SATLiteral(520) - aux661))
520 12861 0
430 12861 0
430 520 12860 0
c ((SATLiteral(460) + SATLiteral(505) - aux662)<=0)
-505 -12863 0
-460 -12863 0
-460 -505 -12864 0
c (0<=(SATLiteral(460) + SATLiteral(505) - aux662))
505 12864 0
460 12864 0
460 505 12863 0
c ((SATLiteral(475) + SATLiteral(490) - aux663)<=0)
-490 -12866 0
-475 -12866 0
-475 -490 -12867 0
c (0<=(SATLiteral(475) + SATLiteral(490) - aux663))
490 12867 0
475 12867 0
475 490 12866 0
c ((SATLiteral(445) + aux663 - aux664)<=0)
12866 -12869 0
12867 -12870 0
-445 -12869 0
-445 12866 -12870 0
-445 12867 -12872 0
c (0<=(SATLiteral(445) + aux663 - aux664))
-12867 12872 0
-12866 12870 0
445 12872 0
445 -12867 12870 0
445 -12866 12869 0
c ((aux660 + aux662 - aux665)<=0)
12863 -12874 0
12864 -12875 0
12857 -12874 0
12857 12863 -12875 0
12857 12864 -12877 0
12858 -12875 0
12858 12863 -12877 0
12858 12864 -12879 0
c (0<=(aux660 + aux662 - aux665))
-12864 12879 0
-12863 12877 0
-12858 12879 0
-12858 -12864 12877 0
-12858 -12863 12875 0
-12857 12877 0
-12857 -12864 12875 0
-12857 -12863 12874 0
c (( - aux666 + SATLiteral(542) + SATLiteral(662))<=0)
-662 -12881 0
-542 -12881 0
-542 -662 -12882 0
c (0<=( - aux666 + SATLiteral(542) + SATLiteral(662)))
662 12882 0
542 12882 0
542 662 12881 0
c (( - aux667 + SATLiteral(557) + SATLiteral(647))<=0)
-647 -12884 0
-557 -12884 0
-557 -647 -12885 0
c (0<=( - aux667 + SATLiteral(557) + SATLiteral(647)))
647 12885 0
557 12885 0
557 647 12884 0
c (( - aux668 + SATLiteral(587) + SATLiteral(632))<=0)
-632 -12887 0
-587 -12887 0
-587 -632 -12888 0
c (0<=( - aux668 + SATLiteral(587) + SATLiteral(632)))
632 12888 0
587 12888 0
587 632 12887 0
c (( - aux669 + SATLiteral(602) + SATLiteral(617))<=0)
-617 -12890 0
-602 -12890 0
-602 -617 -12891 0
c (0<=( - aux669 + SATLiteral(602) + SATLiteral(617)))
617 12891 0
602 12891 0
602 617 12890 0
c ((aux669 - aux670 + SATLiteral(572))<=0)
12890 -12893 0
12891 -12894 0
-572 -12893 0
-572 12890 -12894 0
-572 12891 -12896 0
c (0<=(aux669 - aux670 + SATLiteral(572)))
-12891 12896 0
-12890 12894 0
572 12896 0
572 -12891 12894 0
572 -12890 12893 0
c ((aux666 + aux668 - aux671)<=0)
12887 -12898 0
12888 -12899 0
12881 -12898 0
12881 12887 -12899 0
12881 12888 -12901 0
12882 -12899 0
12882 12887 -12901 0
12882 12888 -12903 0
c (0<=(aux666 + aux668 - aux671))
-12888 12903 0
-12887 12901 0
-12882 12903 0
-12882 -12888 12901 0
-12882 -12887 12899 0
-12881 12901 0
-12881 -12888 12899 0
-12881 -12887 12898 0
c (( - aux672 + SATLiteral(543) + SATLiteral(663))<=0)
-663 -12905 0
-543 -12905 0
-543 -663 -12906 0
c (0<=( - aux672 + SATLiteral(543) + SATLiteral(663)))
663 12906 0
543 12906 0
543 663 12905 0
c (( - aux673 + SATLiteral(558) + SATLiteral(648))<=0)
-648 -12908 0
-558 -12908 0
-558 -648 -12909 0
c (0<=( - aux673 + SATLiteral(558) + SATLiteral(648)))
648 12909 0
558 12909 0
558 648 12908 0
c (( - aux674 + SATLiteral(588) + SATLiteral(633))<=0)
-633 -12911 0
-588 -12911 0
-588 -633 -12912 0
c (0<=( - aux674 + SATLiteral(588) + SATLiteral(633)))
633 12912 0
588 12912 0
588 633 12911 0
c (( - aux675 + SATLiteral(603) + SATLiteral(618))<=0)
-618 -12914 0
-603 -12914 0
-603 -618 -12915 0
c (0<=( - aux675 + SATLiteral(603) + SATLiteral(618)))
618 12915 0
603 12915 0
603 618 12914 0
c ((aux675 - aux676 + SATLiteral(573))<=0)
12914 -12917 0
12915 -12918 0
-573 -12917 0
-573 12914 -12918 0
-573 12915 -12920 0
c (0<=(aux675 - aux676 + SATLiteral(573)))
-12915 12920 0
-12914 12918 0
573 12920 0
573 -12915 12918 0
573 -12914 12917 0
c ((aux672 + aux674 - aux677)<=0)
12911 -12922 0
12912 -12923 0
12905 -12922 0
12905 12911 -12923 0
12905 12912 -12925 0
12906 -12923 0
12906 12911 -12925 0
12906 12912 -12927 0
c (0<=(aux672 + aux674 - aux677))
-12912 12927 0
-12911 12925 0
-12906 12927 0
-12906 -12912 12925 0
-12906 -12911 12923 0
-12905 12925 0
-12905 -12912 12923 0
-12905 -12911 12922 0
c (( - aux678 + SATLiteral(544) + SATLiteral(664))<=0)
-664 -12929 0
-544 -12929 0
-544 -664 -12930 0
c (0<=( - aux678 + SATLiteral(544) + SATLiteral(664)))
664 12930 0
544 12930 0
544 664 12929 0
c (( - aux679 + SATLiteral(559) + SATLiteral(649))<=0)
-649 -12932 0
-559 -12932 0
-559 -649 -12933 0
c (0<=( - aux679 + SATLiteral(559) + SATLiteral(649)))
649 12933 0
559 12933 0
559 649 12932 0
c (( - aux680 + SATLiteral(589) + SATLiteral(634))<=0)
-634 -12935 0
-589 -12935 0
-589 -634 -12936 0
c (0<=( - aux680 + SATLiteral(589) + SATLiteral(634)))
634 12936 0
589 12936 0
589 634 12935 0
c (( - aux681 + SATLiteral(604) + SATLiteral(619))<=0)
-619 -12938 0
-604 -12938 0
-604 -619 -12939 0
c (0<=( - aux681 + SATLiteral(604) + SATLiteral(619)))
619 12939 0
604 12939 0
604 619 12938 0
c ((aux681 - aux682 + SATLiteral(574))<=0)
12938 -12941 0
12939 -12942 0
-574 -12941 0
-574 12938 -12942 0
-574 12939 -12944 0
c (0<=(aux681 - aux682 + SATLiteral(574)))
-12939 12944 0
-12938 12942 0
574 12944 0
574 -12939 12942 0
574 -12938 12941 0
c ((aux678 + aux680 - aux683)<=0)
12935 -12946 0
12936 -12947 0
12929 -12946 0
12929 12935 -12947 0
12929 12936 -12949 0
12930 -12947 0
12930 12935 -12949 0
12930 12936 -12951 0
c (0<=(aux678 + aux680 - aux683))
-12936 12951 0
-12935 12949 0
-12930 12951 0
-12930 -12936 12949 0
-12930 -12935 12947 0
-12929 12949 0
-12929 -12936 12947 0
-12929 -12935 12946 0
c (( - aux684 + SATLiteral(545) + SATLiteral(665))<=0)
-665 -12953 0
-545 -12953 0
-545 -665 -12954 0
c (0<=( - aux684 + SATLiteral(545) + SATLiteral(665)))
665 12954 0
545 12954 0
545 665 12953 0
c (( - aux685 + SATLiteral(560) + SATLiteral(650))<=0)
-650 -12956 0
-560 -12956 0
-560 -650 -12957 0
c (0<=( - aux685 + SATLiteral(560) + SATLiteral(650)))
650 12957 0
560 12957 0
560 650 12956 0
c (( - aux686 + SATLiteral(590) + SATLiteral(635))<=0)
-635 -12959 0
-590 -12959 0
-590 -635 -12960 0
c (0<=( - aux686 + SATLiteral(590) + SATLiteral(635)))
635 12960 0
590 12960 0
590 635 12959 0
c (( - aux687 + SATLiteral(605) + SATLiteral(620))<=0)
-620 -12962 0
-605 -12962 0
-605 -620 -12963 0
c (0<=( - aux687 + SATLiteral(605) + SATLiteral(620)))
620 12963 0
605 12963 0
605 620 12962 0
c ((aux687 - aux688 + SATLiteral(575))<=0)
12962 -12965 0
12963 -12966 0
-575 -12965 0
-575 12962 -12966 0
-575 12963 -12968 0
c (0<=(aux687 - aux688 + SATLiteral(575)))
-12963 12968 0
-12962 12966 0
575 12968 0
575 -12963 12966 0
575 -12962 12965 0
c ((aux684 + aux686 - aux689)<=0)
12959 -12970 0
12960 -12971 0
12953 -12970 0
12953 12959 -12971 0
12953 12960 -12973 0
12954 -12971 0
12954 12959 -12973 0
12954 12960 -12975 0
c (0<=(aux684 + aux686 - aux689))
-12960 12975 0
-12959 12973 0
-12954 12975 0
-12954 -12960 12973 0
-12954 -12959 12971 0
-12953 12973 0
-12953 -12960 12971 0
-12953 -12959 12970 0
c (( - aux690 + SATLiteral(546) + SATLiteral(666))<=0)
-666 -12977 0
-546 -12977 0
-546 -666 -12978 0
c (0<=( - aux690 + SATLiteral(546) + SATLiteral(666)))
666 12978 0
546 12978 0
546 666 12977 0
c (( - aux691 + SATLiteral(561) + SATLiteral(651))<=0)
-651 -12980 0
-561 -12980 0
-561 -651 -12981 0
c (0<=( - aux691 + SATLiteral(561) + SATLiteral(651)))
651 12981 0
561 12981 0
561 651 12980 0
c (( - aux692 + SATLiteral(591) + SATLiteral(636))<=0)
-636 -12983 0
-591 -12983 0
-591 -636 -12984 0
c (0<=( - aux692 + SATLiteral(591) + SATLiteral(636)))
636 12984 0
591 12984 0
591 636 12983 0
c (( - aux693 + SATLiteral(606) + SATLiteral(621))<=0)
-621 -12986 0
-606 -12986 0
-606 -621 -12987 0
c (0<=( - aux693 + SATLiteral(606) + SATLiteral(621)))
621 12987 0
606 12987 0
606 621 12986 0
c ((aux693 - aux694 + SATLiteral(576))<=0)
12986 -12989 0
12987 -12990 0
-576 -12989 0
-576 12986 -12990 0
-576 12987 -12992 0
c (0<=(aux693 - aux694 + SATLiteral(576)))
-12987 12992 0
-12986 12990 0
576 12992 0
576 -12987 12990 0
576 -12986 12989 0
c ((aux690 + aux692 - aux695)<=0)
12983 -12994 0
12984 -12995 0
12977 -12994 0
12977 12983 -12995 0
12977 12984 -12997 0
12978 -12995 0
12978 12983 -12997 0
12978 12984 -12999 0
c (0<=(aux690 + aux692 - aux695))
-12984 12999 0
-12983 12997 0
-12978 12999 0
-12978 -12984 12997 0
-12978 -12983 12995 0
-12977 12997 0
-12977 -12984 12995 0
-12977 -12983 12994 0
c (( - aux696 + SATLiteral(547) + SATLiteral(667))<=0)
-667 -13001 0
-547 -13001 0
-547 -667 -13002 0
c (0<=( - aux696 + SATLiteral(547) + SATLiteral(667)))
667 13002 0
547 13002 0
547 667 13001 0
c (( - aux697 + SATLiteral(562) + SATLiteral(652))<=0)
-652 -13004 0
-562 -13004 0
-562 -652 -13005 0
c (0<=( - aux697 + SATLiteral(562) + SATLiteral(652)))
652 13005 0
562 13005 0
562 652 13004 0
c (( - aux698 + SATLiteral(592) + SATLiteral(637))<=0)
-637 -13007 0
-592 -13007 0
-592 -637 -13008 0
c (0<=( - aux698 + SATLiteral(592) + SATLiteral(637)))
637 13008 0
592 13008 0
592 637 13007 0
c (( - aux699 + SATLiteral(607) + SATLiteral(622))<=0)
-622 -13010 0
-607 -13010 0
-607 -622 -13011 0
c (0<=( - aux699 + SATLiteral(607) + SATLiteral(622)))
622 13011 0
607 13011 0
607 622 13010 0
c ((aux699 - aux700 + SATLiteral(577))<=0)
13010 -13013 0
13011 -13014 0
-577 -13013 0
-577 13010 -13014 0
-577 13011 -13016 0
c (0<=(aux699 - aux700 + SATLiteral(577)))
-13011 13016 0
-13010 13014 0
577 13016 0
577 -13011 13014 0
577 -13010 13013 0
c ((aux696 + aux698 - aux701)<=0)
13007 -13018 0
13008 -13019 0
13001 -13018 0
13001 13007 -13019 0
13001 13008 -13021 0
13002 -13019 0
13002 13007 -13021 0
13002 13008 -13023 0
c (0<=(aux696 + aux698 - aux701))
-13008 13023 0
-13007 13021 0
-13002 13023 0
-13002 -13008 13021 0
-13002 -13007 13019 0
-13001 13021 0
-13001 -13008 13019 0
-13001 -13007 13018 0
c (( - aux702 + SATLiteral(548) + SATLiteral(668))<=0)
-668 -13025 0
-548 -13025 0
-548 -668 -13026 0
c (0<=( - aux702 + SATLiteral(548) + SATLiteral(668)))
668 13026 0
548 13026 0
548 668 13025 0
c (( - aux703 + SATLiteral(563) + SATLiteral(653))<=0)
-653 -13028 0
-563 -13028 0
-563 -653 -13029 0
c (0<=( - aux703 + SATLiteral(563) + SATLiteral(653)))
653 13029 0
563 13029 0
563 653 13028 0
c (( - aux704 + SATLiteral(593) + SATLiteral(638))<=0)
-638 -13031 0
-593 -13031 0
-593 -638 -13032 0
c (0<=( - aux704 + SATLiteral(593) + SATLiteral(638)))
638 13032 0
593 13032 0
593 638 13031 0
c (( - aux705 + SATLiteral(608) + SATLiteral(623))<=0)
-623 -13034 0
-608 -13034 0
-608 -623 -13035 0
c (0<=( - aux705 + SATLiteral(608) + SATLiteral(623)))
623 13035 0
608 13035 0
608 623 13034 0
c ((aux705 - aux706 + SATLiteral(578))<=0)
13034 -13037 0
13035 -13038 0
-578 -13037 0
-578 13034 -13038 0
-578 13035 -13040 0
c (0<=(aux705 - aux706 + SATLiteral(578)))
-13035 13040 0
-13034 13038 0
578 13040 0
578 -13035 13038 0
578 -13034 13037 0
c ((aux702 + aux704 - aux707)<=0)
13031 -13042 0
13032 -13043 0
13025 -13042 0
13025 13031 -13043 0
13025 13032 -13045 0
13026 -13043 0
13026 13031 -13045 0
13026 13032 -13047 0
c (0<=(aux702 + aux704 - aux707))
-13032 13047 0
-13031 13045 0
-13026 13047 0
-13026 -13032 13045 0
-13026 -13031 13043 0
-13025 13045 0
-13025 -13032 13043 0
-13025 -13031 13042 0
c (( - aux708 + SATLiteral(549) + SATLiteral(669))<=0)
-669 -13049 0
-549 -13049 0
-549 -669 -13050 0
c (0<=( - aux708 + SATLiteral(549) + SATLiteral(669)))
669 13050 0
549 13050 0
549 669 13049 0
c (( - aux709 + SATLiteral(564) + SATLiteral(654))<=0)
-654 -13052 0
-564 -13052 0
-564 -654 -13053 0
c (0<=( - aux709 + SATLiteral(564) + SATLiteral(654)))
654 13053 0
564 13053 0
564 654 13052 0
c (( - aux710 + SATLiteral(594) + SATLiteral(639))<=0)
-639 -13055 0
-594 -13055 0
-594 -639 -13056 0
c (0<=( - aux710 + SATLiteral(594) + SATLiteral(639)))
639 13056 0
594 13056 0
594 639 13055 0
c (( - aux711 + SATLiteral(609) + SATLiteral(624))<=0)
-624 -13058 0
-609 -13058 0
-609 -624 -13059 0
c (0<=( - aux711 + SATLiteral(609) + SATLiteral(624)))
624 13059 0
609 13059 0
609 624 13058 0
c ((aux711 - aux712 + SATLiteral(579))<=0)
13058 -13061 0
13059 -13062 0
-579 -13061 0
-579 13058 -13062 0
-579 13059 -13064 0
c (0<=(aux711 - aux712 + SATLiteral(579)))
-13059 13064 0
-13058 13062 0
579 13064 0
579 -13059 13062 0
579 -13058 13061 0
c ((aux708 + aux710 - aux713)<=0)
13055 -13066 0
13056 -13067 0
13049 -13066 0
13049 13055 -13067 0
13049 13056 -13069 0
13050 -13067 0
13050 13055 -13069 0
13050 13056 -13071 0
c (0<=(aux708 + aux710 - aux713))
-13056 13071 0
-13055 13069 0
-13050 13071 0
-13050 -13056 13069 0
-13050 -13055 13067 0
-13049 13069 0
-13049 -13056 13067 0
-13049 -13055 13066 0
c (( - aux714 + SATLiteral(550) + SATLiteral(670))<=0)
-670 -13073 0
-550 -13073 0
-550 -670 -13074 0
c (0<=( - aux714 + SATLiteral(550) + SATLiteral(670)))
670 13074 0
550 13074 0
550 670 13073 0
c (( - aux715 + SATLiteral(565) + SATLiteral(655))<=0)
-655 -13076 0
-565 -13076 0
-565 -655 -13077 0
c (0<=( - aux715 + SATLiteral(565) + SATLiteral(655)))
655 13077 0
565 13077 0
565 655 13076 0
c (( - aux716 + SATLiteral(595) + SATLiteral(640))<=0)
-640 -13079 0
-595 -13079 0
-595 -640 -13080 0
c (0<=( - aux716 + SATLiteral(595) + SATLiteral(640)))
640 13080 0
595 13080 0
595 640 13079 0
c (( - aux717 + SATLiteral(610) + SATLiteral(625))<=0)
-625 -13082 0
-610 -13082 0
-610 -625 -13083 0
c (0<=( - aux717 + SATLiteral(610) + SATLiteral(625)))
625 13083 0
610 13083 0
610 625 13082 0
c ((aux717 - aux718 + SATLiteral(580))<=0)
13082 -13085 0
13083 -13086 0
-580 -13085 0
-580 13082 -13086 0
-580 13083 -13088 0
c (0<=(aux717 - aux718 + SATLiteral(580)))
-13083 13088 0
-13082 13086 0
580 13088 0
580 -13083 13086 0
580 -13082 13085 0
c ((aux714 + aux716 - aux719)<=0)
13079 -13090 0
13080 -13091 0
13073 -13090 0
13073 13079 -13091 0
13073 13080 -13093 0
13074 -13091 0
13074 13079 -13093 0
13074 13080 -13095 0
c (0<=(aux714 + aux716 - aux719))
-13080 13095 0
-13079 13093 0
-13074 13095 0
-13074 -13080 13093 0
-13074 -13079 13091 0
-13073 13093 0
-13073 -13080 13091 0
-13073 -13079 13090 0
c (( - aux720 + SATLiteral(677) + SATLiteral(797))<=0)
-797 -13097 0
-677 -13097 0
-677 -797 -13098 0
c (0<=( - aux720 + SATLiteral(677) + SATLiteral(797)))
797 13098 0
677 13098 0
677 797 13097 0
c (( - aux721 + SATLiteral(692) + SATLiteral(782))<=0)
-782 -13100 0
-692 -13100 0
-692 -782 -13101 0
c (0<=( - aux721 + SATLiteral(692) + SATLiteral(782)))
782 13101 0
692 13101 0
692 782 13100 0
c (( - aux722 + SATLiteral(722) + SATLiteral(767))<=0)
-767 -13103 0
-722 -13103 0
-722 -767 -13104 0
c (0<=( - aux722 + SATLiteral(722) + SATLiteral(767)))
767 13104 0
722 13104 0
722 767 13103 0
c (( - aux723 + SATLiteral(737) + SATLiteral(752))<=0)
-752 -13106 0
-737 -13106 0
-737 -752 -13107 0
c (0<=( - aux723 + SATLiteral(737) + SATLiteral(752)))
752 13107 0
737 13107 0
737 752 13106 0
c ((aux723 - aux724 + SATLiteral(707))<=0)
13106 -13109 0
13107 -13110 0
-707 -13109 0
-707 13106 -13110 0
-707 13107 -13112 0
c (0<=(aux723 - aux724 + SATLiteral(707)))
-13107 13112 0
-13106 13110 0
707 13112 0
707 -13107 13110 0
707 -13106 13109 0
c ((aux720 + aux722 - aux725)<=0)
13103 -13114 0
13104 -13115 0
13097 -13114 0
13097 13103 -13115 0
13097 13104 -13117 0
13098 -13115 0
13098 13103 -13117 0
13098 13104 -13119 0
c (0<=(aux720 + aux722 - aux725))
-13104 13119 0
-13103 13117 0
-13098 13119 0
-13098 -13104 13117 0
-13098 -13103 13115 0
-13097 13117 0
-13097 -13104 13115 0
-13097 -13103 13114 0
c (( - aux726 + SATLiteral(678) + SATLiteral(798))<=0)
-798 -13121 0
-678 -13121 0
-678 -798 -13122 0
c (0<=( - aux726 + SATLiteral(678) + SATLiteral(798)))
798 13122 0
678 13122 0
678 798 13121 0
c (( - aux727 + SATLiteral(693) + SATLiteral(783))<=0)
-783 -13124 0
-693 -13124 0
-693 -783 -13125 0
c (0<=( - aux727 + SATLiteral(693) + SATLiteral(783)))
783 13125 0
693 13125 0
693 783 13124 0
c (( - aux728 + SATLiteral(723) + SATLiteral(768))<=0)
-768 -13127 0
-723 -13127 0
-723 -768 -13128 0
c (0<=( - aux728 + SATLiteral(723) + SATLiteral(768)))
768 13128 0
723 13128 0
723 768 13127 0
c (( - aux729 + SATLiteral(738) + SATLiteral(753))<=0)
-753 -13130 0
-738 -13130 0
-738 -753 -13131 0
c (0<=( - aux729 + SATLiteral(738) + SATLiteral(753)))
753 13131 0
738 13131 0
738 753 13130 0
c ((aux729 - aux730 + SATLiteral(708))<=0)
13130 -13133 0
13131 -13134 0
-708 -13133 0
-708 13130 -13134 0
-708 13131 -13136 0
c (0<=(aux729 - aux730 + SATLiteral(708)))
-13131 13136 0
-13130 13134 0
708 13136 0
708 -13131 13134 0
708 -13130 13133 0
c ((aux726 + aux728 - aux731)<=0)
13127 -13138 0
13128 -13139 0
13121 -13138 0
13121 13127 -13139 0
13121 13128 -13141 0
13122 -13139 0
13122 13127 -13141 0
13122 13128 -13143 0
c (0<=(aux726 + aux728 - aux731))
-13128 13143 0
-13127 13141 0
-13122 13143 0
-13122 -13128 13141 0
-13122 -13127 13139 0
-13121 13141 0
-13121 -13128 13139 0
-13121 -13127 13138 0
c (( - aux732 + SATLiteral(679) + SATLiteral(799))<=0)
-799 -13145 0
-679 -13145 0
-679 -799 -13146 0
c (0<=( - aux732 + SATLiteral(679) + SATLiteral(799)))
799 13146 0
679 13146 0
679 799 13145 0
c (( - aux733 + SATLiteral(694) + SATLiteral(784))<=0)
-784 -13148 0
-694 -13148 0
-694 -784 -13149 0
c (0<=( - aux733 + SATLiteral(694) + SATLiteral(784)))
784 13149 0
694 13149 0
694 784 13148 0
c (( - aux734 + SATLiteral(724) + SATLiteral(769))<=0)
-769 -13151 0
-724 -13151 0
-724 -769 -13152 0
c (0<=( - aux734 + SATLiteral(724) + SATLiteral(769)))
769 13152 0
724 13152 0
724 769 13151 0
c (( - aux735 + SATLiteral(739) + SATLiteral(754))<=0)
-754 -13154 0
-739 -13154 0
-739 -754 -13155 0
c (0<=( - aux735 + SATLiteral(739) + SATLiteral(754)))
754 13155 0
739 13155 0
739 754 13154 0
c ((aux735 - aux736 + SATLiteral(709))<=0)
13154 -13157 0
13155 -13158 0
-709 -13157 0
-709 13154 -13158 0
-709 13155 -13160 0
c (0<=(aux735 - aux736 + SATLiteral(709)))
-13155 13160 0
-13154 13158 0
709 13160 0
709 -13155 13158 0
709 -13154 13157 0
c ((aux732 + aux734 - aux737)<=0)
13151 -13162 0
13152 -13163 0
13145 -13162 0
13145 13151 -13163 0
13145 13152 -13165 0
13146 -13163 0
13146 13151 -13165 0
13146 13152 -13167 0
c (0<=(aux732 + aux734 - aux737))
-13152 13167 0
-13151 13165 0
-13146 13167 0
-13146 -13152 13165 0
-13146 -13151 13163 0
-13145 13165 0
-13145 -13152 13163 0
-13145 -13151 13162 0
c (( - aux738 + SATLiteral(680) + SATLiteral(800))<=0)
-800 -13169 0
-680 -13169 0
-680 -800 -13170 0
c (0<=( - aux738 + SATLiteral(680) + SATLiteral(800)))
800 13170 0
680 13170 0
680 800 13169 0
c (( - aux739 + SATLiteral(695) + SATLiteral(785))<=0)
-785 -13172 0
-695 -13172 0
-695 -785 -13173 0
c (0<=( - aux739 + SATLiteral(695) + SATLiteral(785)))
785 13173 0
695 13173 0
695 785 13172 0
c (( - aux740 + SATLiteral(725) + SATLiteral(770))<=0)
-770 -13175 0
-725 -13175 0
-725 -770 -13176 0
c (0<=( - aux740 + SATLiteral(725) + SATLiteral(770)))
770 13176 0
725 13176 0
725 770 13175 0
c (( - aux741 + SATLiteral(740) + SATLiteral(755))<=0)
-755 -13178 0
-740 -13178 0
-740 -755 -13179 0
c (0<=( - aux741 + SATLiteral(740) + SATLiteral(755)))
755 13179 0
740 13179 0
740 755 13178 0
c ((aux741 - aux742 + SATLiteral(710))<=0)
13178 -13181 0
13179 -13182 0
-710 -13181 0
-710 13178 -13182 0
-710 13179 -13184 0
c (0<=(aux741 - aux742 + SATLiteral(710)))
-13179 13184 0
-13178 13182 0
710 13184 0
710 -13179 13182 0
710 -13178 13181 0
c ((aux738 + aux740 - aux743)<=0)
13175 -13186 0
13176 -13187 0
13169 -13186 0
13169 13175 -13187 0
13169 13176 -13189 0
13170 -13187 0
13170 13175 -13189 0
13170 13176 -13191 0
c (0<=(aux738 + aux740 - aux743))
-13176 13191 0
-13175 13189 0
-13170 13191 0
-13170 -13176 13189 0
-13170 -13175 13187 0
-13169 13189 0
-13169 -13176 13187 0
-13169 -13175 13186 0
c (( - aux744 + SATLiteral(681) + SATLiteral(801))<=0)
-801 -13193 0
-681 -13193 0
-681 -801 -13194 0
c (0<=( - aux744 + SATLiteral(681) + SATLiteral(801)))
801 13194 0
681 13194 0
681 801 13193 0
c (( - aux745 + SATLiteral(696) + SATLiteral(786))<=0)
-786 -13196 0
-696 -13196 0
-696 -786 -13197 0
c (0<=( - aux745 + SATLiteral(696) + SATLiteral(786)))
786 13197 0
696 13197 0
696 786 13196 0
c (( - aux746 + SATLiteral(726) + SATLiteral(771))<=0)
-771 -13199 0
-726 -13199 0
-726 -771 -13200 0
c (0<=( - aux746 + SATLiteral(726) + SATLiteral(771)))
771 13200 0
726 13200 0
726 771 13199 0
c (( - aux747 + SATLiteral(741) + SATLiteral(756))<=0)
-756 -13202 0
-741 -13202 0
-741 -756 -13203 0
c (0<=( - aux747 + SATLiteral(741) + SATLiteral(756)))
756 13203 0
741 13203 0
741 756 13202 0
c ((aux747 - aux748 + SATLiteral(711))<=0)
13202 -13205 0
13203 -13206 0
-711 -13205 0
-711 13202 -13206 0
-711 13203 -13208 0
c (0<=(aux747 - aux748 + SATLiteral(711)))
-13203 13208 0
-13202 13206 0
711 13208 0
711 -13203 13206 0
711 -13202 13205 0
c ((aux744 + aux746 - aux749)<=0)
13199 -13210 0
13200 -13211 0
13193 -13210 0
13193 13199 -13211 0
13193 13200 -13213 0
13194 -13211 0
13194 13199 -13213 0
13194 13200 -13215 0
c (0<=(aux744 + aux746 - aux749))
-13200 13215 0
-13199 13213 0
-13194 13215 0
-13194 -13200 13213 0
-13194 -13199 13211 0
-13193 13213 0
-13193 -13200 13211 0
-13193 -13199 13210 0
c (( - aux750 + SATLiteral(682) + SATLiteral(802))<=0)
-802 -13217 0
-682 -13217 0
-682 -802 -13218 0
c (0<=( - aux750 + SATLiteral(682) + SATLiteral(802)))
802 13218 0
682 13218 0
682 802 13217 0
c (( - aux751 + SATLiteral(697) + SATLiteral(787))<=0)
-787 -13220 0
-697 -13220 0
-697 -787 -13221 0
c (0<=( - aux751 + SATLiteral(697) + SATLiteral(787)))
787 13221 0
697 13221 0
697 787 13220 0
c (( - aux752 + SATLiteral(727) + SATLiteral(772))<=0)
-772 -13223 0
-727 -13223 0
-727 -772 -13224 0
c (0<=( - aux752 + SATLiteral(727) + SATLiteral(772)))
772 13224 0
727 13224 0
727 772 13223 0
c (( - aux753 + SATLiteral(742) + SATLiteral(757))<=0)
-757 -13226 0
-742 -13226 0
-742 -757 -13227 0
c (0<=( - aux753 + SATLiteral(742) + SATLiteral(757)))
757 13227 0
742 13227 0
742 757 13226 0
c ((aux753 - aux754 + SATLiteral(712))<=0)
13226 -13229 0
13227 -13230 0
-712 -13229 0
-712 13226 -13230 0
-712 13227 -13232 0
c (0<=(aux753 - aux754 + SATLiteral(712)))
-13227 13232 0
-13226 13230 0
712 13232 0
712 -13227 13230 0
712 -13226 13229 0
c ((aux750 + aux752 - aux755)<=0)
13223 -13234 0
13224 -13235 0
13217 -13234 0
13217 13223 -13235 0
13217 13224 -13237 0
13218 -13235 0
13218 13223 -13237 0
13218 13224 -13239 0
c (0<=(aux750 + aux752 - aux755))
-13224 13239 0
-13223 13237 0
-13218 13239 0
-13218 -13224 13237 0
-13218 -13223 13235 0
-13217 13237 0
-13217 -13224 13235 0
-13217 -13223 13234 0
c (( - aux756 + SATLiteral(683) + SATLiteral(803))<=0)
-803 -13241 0
-683 -13241 0
-683 -803 -13242 0
c (0<=( - aux756 + SATLiteral(683) + SATLiteral(803)))
803 13242 0
683 13242 0
683 803 13241 0
c (( - aux757 + SATLiteral(698) + SATLiteral(788))<=0)
-788 -13244 0
-698 -13244 0
-698 -788 -13245 0
c (0<=( - aux757 + SATLiteral(698) + SATLiteral(788)))
788 13245 0
698 13245 0
698 788 13244 0
c (( - aux758 + SATLiteral(728) + SATLiteral(773))<=0)
-773 -13247 0
-728 -13247 0
-728 -773 -13248 0
c (0<=( - aux758 + SATLiteral(728) + SATLiteral(773)))
773 13248 0
728 13248 0
728 773 13247 0
c (( - aux759 + SATLiteral(743) + SATLiteral(758))<=0)
-758 -13250 0
-743 -13250 0
-743 -758 -13251 0
c (0<=( - aux759 + SATLiteral(743) + SATLiteral(758)))
758 13251 0
743 13251 0
743 758 13250 0
c ((aux759 - aux760 + SATLiteral(713))<=0)
13250 -13253 0
13251 -13254 0
-713 -13253 0
-713 13250 -13254 0
-713 13251 -13256 0
c (0<=(aux759 - aux760 + SATLiteral(713)))
-13251 13256 0
-13250 13254 0
713 13256 0
713 -13251 13254 0
713 -13250 13253 0
c ((aux756 + aux758 - aux761)<=0)
13247 -13258 0
13248 -13259 0
13241 -13258 0
13241 13247 -13259 0
13241 13248 -13261 0
13242 -13259 0
13242 13247 -13261 0
13242 13248 -13263 0
c (0<=(aux756 + aux758 - aux761))
-13248 13263 0
-13247 13261 0
-13242 13263 0
-13242 -13248 13261 0
-13242 -13247 13259 0
-13241 13261 0
-13241 -13248 13259 0
-13241 -13247 13258 0
c (( - aux762 + SATLiteral(684) + SATLiteral(804))<=0)
-804 -13265 0
-684 -13265 0
-684 -804 -13266 0
c (0<=( - aux762 + SATLiteral(684) + SATLiteral(804)))
804 13266 0
684 13266 0
684 804 13265 0
c (( - aux763 + SATLiteral(699) + SATLiteral(789))<=0)
-789 -13268 0
-699 -13268 0
-699 -789 -13269 0
c (0<=( - aux763 + SATLiteral(699) + SATLiteral(789)))
789 13269 0
699 13269 0
699 789 13268 0
c (( - aux764 + SATLiteral(729) + SATLiteral(774))<=0)
-774 -13271 0
-729 -13271 0
-729 -774 -13272 0
c (0<=( - aux764 + SATLiteral(729) + SATLiteral(774)))
774 13272 0
729 13272 0
729 774 13271 0
c (( - aux765 + SATLiteral(744) + SATLiteral(759))<=0)
-759 -13274 0
-744 -13274 0
-744 -759 -13275 0
c (0<=( - aux765 + SATLiteral(744) + SATLiteral(759)))
759 13275 0
744 13275 0
744 759 13274 0
c ((aux765 - aux766 + SATLiteral(714))<=0)
13274 -13277 0
13275 -13278 0
-714 -13277 0
-714 13274 -13278 0
-714 13275 -13280 0
c (0<=(aux765 - aux766 + SATLiteral(714)))
-13275 13280 0
-13274 13278 0
714 13280 0
714 -13275 13278 0
714 -13274 13277 0
c ((aux762 + aux764 - aux767)<=0)
13271 -13282 0
13272 -13283 0
13265 -13282 0
13265 13271 -13283 0
13265 13272 -13285 0
13266 -13283 0
13266 13271 -13285 0
13266 13272 -13287 0
c (0<=(aux762 + aux764 - aux767))
-13272 13287 0
-13271 13285 0
-13266 13287 0
-13266 -13272 13285 0
-13266 -13271 13283 0
-13265 13285 0
-13265 -13272 13283 0
-13265 -13271 13282 0
c (( - aux768 + SATLiteral(685) + SATLiteral(805))<=0)
-805 -13289 0
-685 -13289 0
-685 -805 -13290 0
c (0<=( - aux768 + SATLiteral(685) + SATLiteral(805)))
805 13290 0
685 13290 0
685 805 13289 0
c (( - aux769 + SATLiteral(700) + SATLiteral(790))<=0)
-790 -13292 0
-700 -13292 0
-700 -790 -13293 0
c (0<=( - aux769 + SATLiteral(700) + SATLiteral(790)))
790 13293 0
700 13293 0
700 790 13292 0
c (( - aux770 + SATLiteral(730) + SATLiteral(775))<=0)
-775 -13295 0
-730 -13295 0
-730 -775 -13296 0
c (0<=( - aux770 + SATLiteral(730) + SATLiteral(775)))
775 13296 0
730 13296 0
730 775 13295 0
c (( - aux771 + SATLiteral(745) + SATLiteral(760))<=0)
-760 -13298 0
-745 -13298 0
-745 -760 -13299 0
c (0<=( - aux771 + SATLiteral(745) + SATLiteral(760)))
760 13299 0
745 13299 0
745 760 13298 0
c ((aux771 - aux772 + SATLiteral(715))<=0)
13298 -13301 0
13299 -13302 0
-715 -13301 0
-715 13298 -13302 0
-715 13299 -13304 0
c (0<=(aux771 - aux772 + SATLiteral(715)))
-13299 13304 0
-13298 13302 0
715 13304 0
715 -13299 13302 0
715 -13298 13301 0
c ((aux768 + aux770 - aux773)<=0)
13295 -13306 0
13296 -13307 0
13289 -13306 0
13289 13295 -13307 0
13289 13296 -13309 0
13290 -13307 0
13290 13295 -13309 0
13290 13296 -13311 0
c (0<=(aux768 + aux770 - aux773))
-13296 13311 0
-13295 13309 0
-13290 13311 0
-13290 -13296 13309 0
-13290 -13295 13307 0
-13289 13309 0
-13289 -13296 13307 0
-13289 -13295 13306 0
c (( - aux774 + SATLiteral(812) + SATLiteral(932))<=0)
-932 -13313 0
-812 -13313 0
-812 -932 -13314 0
c (0<=( - aux774 + SATLiteral(812) + SATLiteral(932)))
932 13314 0
812 13314 0
812 932 13313 0
c (( - aux775 + SATLiteral(827) + SATLiteral(917))<=0)
-917 -13316 0
-827 -13316 0
-827 -917 -13317 0
c (0<=( - aux775 + SATLiteral(827) + SATLiteral(917)))
917 13317 0
827 13317 0
827 917 13316 0
c (( - aux776 + SATLiteral(857) + SATLiteral(902))<=0)
-902 -13319 0
-857 -13319 0
-857 -902 -13320 0
c (0<=( - aux776 + SATLiteral(857) + SATLiteral(902)))
902 13320 0
857 13320 0
857 902 13319 0
c (( - aux777 + SATLiteral(872) + SATLiteral(887))<=0)
-887 -13322 0
-872 -13322 0
-872 -887 -13323 0
c (0<=( - aux777 + SATLiteral(872) + SATLiteral(887)))
887 13323 0
872 13323 0
872 887 13322 0
c ((aux777 - aux778 + SATLiteral(842))<=0)
13322 -13325 0
13323 -13326 0
-842 -13325 0
-842 13322 -13326 0
-842 13323 -13328 0
c (0<=(aux777 - aux778 + SATLiteral(842)))
-13323 13328 0
-13322 13326 0
842 13328 0
842 -13323 13326 0
842 -13322 13325 0
c ((aux774 + aux776 - aux779)<=0)
13319 -13330 0
13320 -13331 0
13313 -13330 0
13313 13319 -13331 0
13313 13320 -13333 0
13314 -13331 0
13314 13319 -13333 0
13314 13320 -13335 0
c (0<=(aux774 + aux776 - aux779))
-13320 13335 0
-13319 13333 0
-13314 13335 0
-13314 -13320 13333 0
-13314 -13319 13331 0
-13313 13333 0
-13313 -13320 13331 0
-13313 -13319 13330 0
c (( - aux780 + SATLiteral(813) + SATLiteral(933))<=0)
-933 -13337 0
-813 -13337 0
-813 -933 -13338 0
c (0<=( - aux780 + SATLiteral(813) + SATLiteral(933)))
933 13338 0
813 13338 0
813 933 13337 0
c (( - aux781 + SATLiteral(828) + SATLiteral(918))<=0)
-918 -13340 0
-828 -13340 0
-828 -918 -13341 0
c (0<=( - aux781 + SATLiteral(828) + SATLiteral(918)))
918 13341 0
828 13341 0
828 918 13340 0
c (( - aux782 + SATLiteral(858) + SATLiteral(903))<=0)
-903 -13343 0
-858 -13343 0
-858 -903 -13344 0
c (0<=( - aux782 + SATLiteral(858) + SATLiteral(903)))
903 13344 0
858 13344 0
858 903 13343 0
c (( - aux783 + SATLiteral(873) + SATLiteral(888))<=0)
-888 -13346 0
-873 -13346 0
-873 -888 -13347 0
c (0<=( - aux783 + SATLiteral(873) + SATLiteral(888)))
888 13347 0
873 13347 0
873 888 13346 0
c ((aux783 - aux784 + SATLiteral(843))<=0)
13346 -13349 0
13347 -13350 0
-843 -13349 0
-843 13346 -13350 0
-843 13347 -13352 0
c (0<=(aux783 - aux784 + SATLiteral(843)))
-13347 13352 0
-13346 13350 0
843 13352 0
843 -13347 13350 0
843 -13346 13349 0
c ((aux780 + aux782 - aux785)<=0)
13343 -13354 0
13344 -13355 0
13337 -13354 0
13337 13343 -13355 0
13337 13344 -13357 0
13338 -13355 0
13338 13343 -13357 0
13338 13344 -13359 0
c (0<=(aux780 + aux782 - aux785))
-13344 13359 0
-13343 13357 0
-13338 13359 0
-13338 -13344 13357 0
-13338 -13343 13355 0
-13337 13357 0
-13337 -13344 13355 0
-13337 -13343 13354 0
c (( - aux786 + SATLiteral(814) + SATLiteral(934))<=0)
-934 -13361 0
-814 -13361 0
-814 -934 -13362 0
c (0<=( - aux786 + SATLiteral(814) + SATLiteral(934)))
934 13362 0
814 13362 0
814 934 13361 0
c (( - aux787 + SATLiteral(829) + SATLiteral(919))<=0)
-919 -13364 0
-829 -13364 0
-829 -919 -13365 0
c (0<=( - aux787 + SATLiteral(829) + SATLiteral(919)))
919 13365 0
829 13365 0
829 919 13364 0
c (( - aux788 + SATLiteral(859) + SATLiteral(904))<=0)
-904 -13367 0
-859 -13367 0
-859 -904 -13368 0
c (0<=( - aux788 + SATLiteral(859) + SATLiteral(904)))
904 13368 0
859 13368 0
859 904 13367 0
c (( - aux789 + SATLiteral(874) + SATLiteral(889))<=0)
-889 -13370 0
-874 -13370 0
-874 -889 -13371 0
c (0<=( - aux789 + SATLiteral(874) + SATLiteral(889)))
889 13371 0
874 13371 0
874 889 13370 0
c ((aux789 - aux790 + SATLiteral(844))<=0)
13370 -13373 0
13371 -13374 0
-844 -13373 0
-844 13370 -13374 0
-844 13371 -13376 0
c (0<=(aux789 - aux790 + SATLiteral(844)))
-13371 13376 0
-13370 13374 0
844 13376 0
844 -13371 13374 0
844 -13370 13373 0
c ((aux786 + aux788 - aux791)<=0)
13367 -13378 0
13368 -13379 0
13361 -13378 0
13361 13367 -13379 0
13361 13368 -13381 0
13362 -13379 0
13362 13367 -13381 0
13362 13368 -13383 0
c (0<=(aux786 + aux788 - aux791))
-13368 13383 0
-13367 13381 0
-13362 13383 0
-13362 -13368 13381 0
-13362 -13367 13379 0
-13361 13381 0
-13361 -13368 13379 0
-13361 -13367 13378 0
c (( - aux792 + SATLiteral(815) + SATLiteral(935))<=0)
-935 -13385 0
-815 -13385 0
-815 -935 -13386 0
c (0<=( - aux792 + SATLiteral(815) + SATLiteral(935)))
935 13386 0
815 13386 0
815 935 13385 0
c (( - aux793 + SATLiteral(830) + SATLiteral(920))<=0)
-920 -13388 0
-830 -13388 0
-830 -920 -13389 0
c (0<=( - aux793 + SATLiteral(830) + SATLiteral(920)))
920 13389 0
830 13389 0
830 920 13388 0
c (( - aux794 + SATLiteral(860) + SATLiteral(905))<=0)
-905 -13391 0
-860 -13391 0
-860 -905 -13392 0
c (0<=( - aux794 + SATLiteral(860) + SATLiteral(905)))
905 13392 0
860 13392 0
860 905 13391 0
c (( - aux795 + SATLiteral(875) + SATLiteral(890))<=0)
-890 -13394 0
-875 -13394 0
-875 -890 -13395 0
c (0<=( - aux795 + SATLiteral(875) + SATLiteral(890)))
890 13395 0
875 13395 0
875 890 13394 0
c ((aux795 - aux796 + SATLiteral(845))<=0)
13394 -13397 0
13395 -13398 0
-845 -13397 0
-845 13394 -13398 0
-845 13395 -13400 0
c (0<=(aux795 - aux796 + SATLiteral(845)))
-13395 13400 0
-13394 13398 0
845 13400 0
845 -13395 13398 0
845 -13394 13397 0
c ((aux792 + aux794 - aux797)<=0)
13391 -13402 0
13392 -13403 0
13385 -13402 0
13385 13391 -13403 0
13385 13392 -13405 0
13386 -13403 0
13386 13391 -13405 0
13386 13392 -13407 0
c (0<=(aux792 + aux794 - aux797))
-13392 13407 0
-13391 13405 0
-13386 13407 0
-13386 -13392 13405 0
-13386 -13391 13403 0
-13385 13405 0
-13385 -13392 13403 0
-13385 -13391 13402 0
c (( - aux798 + SATLiteral(816) + SATLiteral(936))<=0)
-936 -13409 0
-816 -13409 0
-816 -936 -13410 0
c (0<=( - aux798 + SATLiteral(816) + SATLiteral(936)))
936 13410 0
816 13410 0
816 936 13409 0
c (( - aux799 + SATLiteral(831) + SATLiteral(921))<=0)
-921 -13412 0
-831 -13412 0
-831 -921 -13413 0
c (0<=( - aux799 + SATLiteral(831) + SATLiteral(921)))
921 13413 0
831 13413 0
831 921 13412 0
c (( - aux800 + SATLiteral(861) + SATLiteral(906))<=0)
-906 -13415 0
-861 -13415 0
-861 -906 -13416 0
c (0<=( - aux800 + SATLiteral(861) + SATLiteral(906)))
906 13416 0
861 13416 0
861 906 13415 0
c (( - aux801 + SATLiteral(876) + SATLiteral(891))<=0)
-891 -13418 0
-876 -13418 0
-876 -891 -13419 0
c (0<=( - aux801 + SATLiteral(876) + SATLiteral(891)))
891 13419 0
876 13419 0
876 891 13418 0
c ((aux801 - aux802 + SATLiteral(846))<=0)
13418 -13421 0
13419 -13422 0
-846 -13421 0
-846 13418 -13422 0
-846 13419 -13424 0
c (0<=(aux801 - aux802 + SATLiteral(846)))
-13419 13424 0
-13418 13422 0
846 13424 0
846 -13419 13422 0
846 -13418 13421 0
c ((aux798 + aux800 - aux803)<=0)
13415 -13426 0
13416 -13427 0
13409 -13426 0
13409 13415 -13427 0
13409 13416 -13429 0
13410 -13427 0
13410 13415 -13429 0
13410 13416 -13431 0
c (0<=(aux798 + aux800 - aux803))
-13416 13431 0
-13415 13429 0
-13410 13431 0
-13410 -13416 13429 0
-13410 -13415 13427 0
-13409 13429 0
-13409 -13416 13427 0
-13409 -13415 13426 0
c (( - aux804 + SATLiteral(817) + SATLiteral(937))<=0)
-937 -13433 0
-817 -13433 0
-817 -937 -13434 0
c (0<=( - aux804 + SATLiteral(817) + SATLiteral(937)))
937 13434 0
817 13434 0
817 937 13433 0
c (( - aux805 + SATLiteral(832) + SATLiteral(922))<=0)
-922 -13436 0
-832 -13436 0
-832 -922 -13437 0
c (0<=( - aux805 + SATLiteral(832) + SATLiteral(922)))
922 13437 0
832 13437 0
832 922 13436 0
c (( - aux806 + SATLiteral(862) + SATLiteral(907))<=0)
-907 -13439 0
-862 -13439 0
-862 -907 -13440 0
c (0<=( - aux806 + SATLiteral(862) + SATLiteral(907)))
907 13440 0
862 13440 0
862 907 13439 0
c (( - aux807 + SATLiteral(877) + SATLiteral(892))<=0)
-892 -13442 0
-877 -13442 0
-877 -892 -13443 0
c (0<=( - aux807 + SATLiteral(877) + SATLiteral(892)))
892 13443 0
877 13443 0
877 892 13442 0
c ((aux807 - aux808 + SATLiteral(847))<=0)
13442 -13445 0
13443 -13446 0
-847 -13445 0
-847 13442 -13446 0
-847 13443 -13448 0
c (0<=(aux807 - aux808 + SATLiteral(847)))
-13443 13448 0
-13442 13446 0
847 13448 0
847 -13443 13446 0
847 -13442 13445 0
c ((aux804 + aux806 - aux809)<=0)
13439 -13450 0
13440 -13451 0
13433 -13450 0
13433 13439 -13451 0
13433 13440 -13453 0
13434 -13451 0
13434 13439 -13453 0
13434 13440 -13455 0
c (0<=(aux804 + aux806 - aux809))
-13440 13455 0
-13439 13453 0
-13434 13455 0
-13434 -13440 13453 0
-13434 -13439 13451 0
-13433 13453 0
-13433 -13440 13451 0
-13433 -13439 13450 0
c (( - aux810 + SATLiteral(818) + SATLiteral(938))<=0)
-938 -13457 0
-818 -13457 0
-818 -938 -13458 0
c (0<=( - aux810 + SATLiteral(818) + SATLiteral(938)))
938 13458 0
818 13458 0
818 938 13457 0
c (( - aux811 + SATLiteral(833) + SATLiteral(923))<=0)
-923 -13460 0
-833 -13460 0
-833 -923 -13461 0
c (0<=( - aux811 + SATLiteral(833) + SATLiteral(923)))
923 13461 0
833 13461 0
833 923 13460 0
c (( - aux812 + SATLiteral(863) + SATLiteral(908))<=0)
-908 -13463 0
-863 -13463 0
-863 -908 -13464 0
c (0<=( - aux812 + SATLiteral(863) + SATLiteral(908)))
908 13464 0
863 13464 0
863 908 13463 0
c (( - aux813 + SATLiteral(878) + SATLiteral(893))<=0)
-893 -13466 0
-878 -13466 0
-878 -893 -13467 0
c (0<=( - aux813 + SATLiteral(878) + SATLiteral(893)))
893 13467 0
878 13467 0
878 893 13466 0
c ((aux813 - aux814 + SATLiteral(848))<=0)
13466 -13469 0
13467 -13470 0
-848 -13469 0
-848 13466 -13470 0
-848 13467 -13472 0
c (0<=(aux813 - aux814 + SATLiteral(848)))
-13467 13472 0
-13466 13470 0
848 13472 0
848 -13467 13470 0
848 -13466 13469 0
c ((aux810 + aux812 - aux815)<=0)
13463 -13474 0
13464 -13475 0
13457 -13474 0
13457 13463 -13475 0
13457 13464 -13477 0
13458 -13475 0
13458 13463 -13477 0
13458 13464 -13479 0
c (0<=(aux810 + aux812 - aux815))
-13464 13479 0
-13463 13477 0
-13458 13479 0
-13458 -13464 13477 0
-13458 -13463 13475 0
-13457 13477 0
-13457 -13464 13475 0
-13457 -13463 13474 0
c (( - aux816 + SATLiteral(819) + SATLiteral(939))<=0)
-939 -13481 0
-819 -13481 0
-819 -939 -13482 0
c (0<=( - aux816 + SATLiteral(819) + SATLiteral(939)))
939 13482 0
819 13482 0
819 939 13481 0
c (( - aux817 + SATLiteral(834) + SATLiteral(924))<=0)
-924 -13484 0
-834 -13484 0
-834 -924 -13485 0
c (0<=( - aux817 + SATLiteral(834) + SATLiteral(924)))
924 13485 0
834 13485 0
834 924 13484 0
c (( - aux818 + SATLiteral(864) + SATLiteral(909))<=0)
-909 -13487 0
-864 -13487 0
-864 -909 -13488 0
c (0<=( - aux818 + SATLiteral(864) + SATLiteral(909)))
909 13488 0
864 13488 0
864 909 13487 0
c (( - aux819 + SATLiteral(879) + SATLiteral(894))<=0)
-894 -13490 0
-879 -13490 0
-879 -894 -13491 0
c (0<=( - aux819 + SATLiteral(879) + SATLiteral(894)))
894 13491 0
879 13491 0
879 894 13490 0
c ((aux819 - aux820 + SATLiteral(849))<=0)
13490 -13493 0
13491 -13494 0
-849 -13493 0
-849 13490 -13494 0
-849 13491 -13496 0
c (0<=(aux819 - aux820 + SATLiteral(849)))
-13491 13496 0
-13490 13494 0
849 13496 0
849 -13491 13494 0
849 -13490 13493 0
c ((aux816 + aux818 - aux821)<=0)
13487 -13498 0
13488 -13499 0
13481 -13498 0
13481 13487 -13499 0
13481 13488 -13501 0
13482 -13499 0
13482 13487 -13501 0
13482 13488 -13503 0
c (0<=(aux816 + aux818 - aux821))
-13488 13503 0
-13487 13501 0
-13482 13503 0
-13482 -13488 13501 0
-13482 -13487 13499 0
-13481 13501 0
-13481 -13488 13499 0
-13481 -13487 13498 0
c (( - aux822 + SATLiteral(820) + SATLiteral(940))<=0)
-940 -13505 0
-820 -13505 0
-820 -940 -13506 0
c (0<=( - aux822 + SATLiteral(820) + SATLiteral(940)))
940 13506 0
820 13506 0
820 940 13505 0
c (( - aux823 + SATLiteral(835) + SATLiteral(925))<=0)
-925 -13508 0
-835 -13508 0
-835 -925 -13509 0
c (0<=( - aux823 + SATLiteral(835) + SATLiteral(925)))
925 13509 0
835 13509 0
835 925 13508 0
c (( - aux824 + SATLiteral(865) + SATLiteral(910))<=0)
-910 -13511 0
-865 -13511 0
-865 -910 -13512 0
c (0<=( - aux824 + SATLiteral(865) + SATLiteral(910)))
910 13512 0
865 13512 0
865 910 13511 0
c (( - aux825 + SATLiteral(880) + SATLiteral(895))<=0)
-895 -13514 0
-880 -13514 0
-880 -895 -13515 0
c (0<=( - aux825 + SATLiteral(880) + SATLiteral(895)))
895 13515 0
880 13515 0
880 895 13514 0
c ((aux825 - aux826 + SATLiteral(850))<=0)
13514 -13517 0
13515 -13518 0
-850 -13517 0
-850 13514 -13518 0
-850 13515 -13520 0
c (0<=(aux825 - aux826 + SATLiteral(850)))
-13515 13520 0
-13514 13518 0
850 13520 0
850 -13515 13518 0
850 -13514 13517 0
c ((aux822 + aux824 - aux827)<=0)
13511 -13522 0
13512 -13523 0
13505 -13522 0
13505 13511 -13523 0
13505 13512 -13525 0
13506 -13523 0
13506 13511 -13525 0
13506 13512 -13527 0
c (0<=(aux822 + aux824 - aux827))
-13512 13527 0
-13511 13525 0
-13506 13527 0
-13506 -13512 13525 0
-13506 -13511 13523 0
-13505 13525 0
-13505 -13512 13523 0
-13505 -13511 13522 0
c (( - aux828 + SATLiteral(947) + SATLiteral(1067))<=0)
-1067 -13529 0
-947 -13529 0
-947 -1067 -13530 0
c (0<=( - aux828 + SATLiteral(947) + SATLiteral(1067)))
1067 13530 0
947 13530 0
947 1067 13529 0
c (( - aux829 + SATLiteral(962) + SATLiteral(1052))<=0)
-1052 -13532 0
-962 -13532 0
-962 -1052 -13533 0
c (0<=( - aux829 + SATLiteral(962) + SATLiteral(1052)))
1052 13533 0
962 13533 0
962 1052 13532 0
c (( - aux830 + SATLiteral(992) + SATLiteral(1037))<=0)
-1037 -13535 0
-992 -13535 0
-992 -1037 -13536 0
c (0<=( - aux830 + SATLiteral(992) + SATLiteral(1037)))
1037 13536 0
992 13536 0
992 1037 13535 0
c (( - aux831 + SATLiteral(1007) + SATLiteral(1022))<=0)
-1022 -13538 0
-1007 -13538 0
-1007 -1022 -13539 0
c (0<=( - aux831 + SATLiteral(1007) + SATLiteral(1022)))
1022 13539 0
1007 13539 0
1007 1022 13538 0
c ((aux831 - aux832 + SATLiteral(977))<=0)
13538 -13541 0
13539 -13542 0
-977 -13541 0
-977 13538 -13542 0
-977 13539 -13544 0
c (0<=(aux831 - aux832 + SATLiteral(977)))
-13539 13544 0
-13538 13542 0
977 13544 0
977 -13539 13542 0
977 -13538 13541 0
c ((aux828 + aux830 - aux833)<=0)
13535 -13546 0
13536 -13547 0
13529 -13546 0
13529 13535 -13547 0
13529 13536 -13549 0
13530 -13547 0
13530 13535 -13549 0
13530 13536 -13551 0
c (0<=(aux828 + aux830 - aux833))
-13536 13551 0
-13535 13549 0
-13530 13551 0
-13530 -13536 13549 0
-13530 -13535 13547 0
-13529 13549 0
-13529 -13536 13547 0
-13529 -13535 13546 0
c (( - aux834 + SATLiteral(948) + SATLiteral(1068))<=0)
-1068 -13553 0
-948 -13553 0
-948 -1068 -13554 0
c (0<=( - aux834 + SATLiteral(948) + SATLiteral(1068)))
1068 13554 0
948 13554 0
948 1068 13553 0
c (( - aux835 + SATLiteral(963) + SATLiteral(1053))<=0)
-1053 -13556 0
-963 -13556 0
-963 -1053 -13557 0
c (0<=( - aux835 + SATLiteral(963) + SATLiteral(1053)))
1053 13557 0
963 13557 0
963 1053 13556 0
c (( - aux836 + SATLiteral(993) + SATLiteral(1038))<=0)
-1038 -13559 0
-993 -13559 0
-993 -1038 -13560 0
c (0<=( - aux836 + SATLiteral(993) + SATLiteral(1038)))
1038 13560 0
993 13560 0
993 1038 13559 0
c (( - aux837 + SATLiteral(1008) + SATLiteral(1023))<=0)
-1023 -13562 0
-1008 -13562 0
-1008 -1023 -13563 0
c (0<=( - aux837 + SATLiteral(1008) + SATLiteral(1023)))
1023 13563 0
1008 13563 0
1008 1023 13562 0
c ((aux837 - aux838 + SATLiteral(978))<=0)
13562 -13565 0
13563 -13566 0
-978 -13565 0
-978 13562 -13566 0
-978 13563 -13568 0
c (0<=(aux837 - aux838 + SATLiteral(978)))
-13563 13568 0
-13562 13566 0
978 13568 0
978 -13563 13566 0
978 -13562 13565 0
c ((aux834 + aux836 - aux839)<=0)
13559 -13570 0
13560 -13571 0
13553 -13570 0
13553 13559 -13571 0
13553 13560 -13573 0
13554 -13571 0
13554 13559 -13573 0
13554 13560 -13575 0
c (0<=(aux834 + aux836 - aux839))
-13560 13575 0
-13559 13573 0
-13554 13575 0
-13554 -13560 13573 0
-13554 -13559 13571 0
-13553 13573 0
-13553 -13560 13571 0
-13553 -13559 13570 0
c (( - aux840 + SATLiteral(949) + SATLiteral(1069))<=0)
-1069 -13577 0
-949 -13577 0
-949 -1069 -13578 0
c (0<=( - aux840 + SATLiteral(949) + SATLiteral(1069)))
1069 13578 0
949 13578 0
949 1069 13577 0
c (( - aux841 + SATLiteral(964) + SATLiteral(1054))<=0)
-1054 -13580 0
-964 -13580 0
-964 -1054 -13581 0
c (0<=( - aux841 + SATLiteral(964) + SATLiteral(1054)))
1054 13581 0
964 13581 0
964 1054 13580 0
c (( - aux842 + SATLiteral(994) + SATLiteral(1039))<=0)
-1039 -13583 0
-994 -13583 0
-994 -1039 -13584 0
c (0<=( - aux842 + SATLiteral(994) + SATLiteral(1039)))
1039 13584 0
994 13584 0
994 1039 13583 0
c (( - aux843 + SATLiteral(1009) + SATLiteral(1024))<=0)
-1024 -13586 0
-1009 -13586 0
-1009 -1024 -13587 0
c (0<=( - aux843 + SATLiteral(1009) + SATLiteral(1024)))
1024 13587 0
1009 13587 0
1009 1024 13586 0
c ((aux843 - aux844 + SATLiteral(979))<=0)
13586 -13589 0
13587 -13590 0
-979 -13589 0
-979 13586 -13590 0
-979 13587 -13592 0
c (0<=(aux843 - aux844 + SATLiteral(979)))
-13587 13592 0
-13586 13590 0
979 13592 0
979 -13587 13590 0
979 -13586 13589 0
c ((aux840 + aux842 - aux845)<=0)
13583 -13594 0
13584 -13595 0
13577 -13594 0
13577 13583 -13595 0
13577 13584 -13597 0
13578 -13595 0
13578 13583 -13597 0
13578 13584 -13599 0
c (0<=(aux840 + aux842 - aux845))
-13584 13599 0
-13583 13597 0
-13578 13599 0
-13578 -13584 13597 0
-13578 -13583 13595 0
-13577 13597 0
-13577 -13584 13595 0
-13577 -13583 13594 0
c (( - aux846 + SATLiteral(950) + SATLiteral(1070))<=0)
-1070 -13601 0
-950 -13601 0
-950 -1070 -13602 0
c (0<=( - aux846 + SATLiteral(950) + SATLiteral(1070)))
1070 13602 0
950 13602 0
950 1070 13601 0
c (( - aux847 + SATLiteral(965) + SATLiteral(1055))<=0)
-1055 -13604 0
-965 -13604 0
-965 -1055 -13605 0
c (0<=( - aux847 + SATLiteral(965) + SATLiteral(1055)))
1055 13605 0
965 13605 0
965 1055 13604 0
c (( - aux848 + SATLiteral(995) + SATLiteral(1040))<=0)
-1040 -13607 0
-995 -13607 0
-995 -1040 -13608 0
c (0<=( - aux848 + SATLiteral(995) + SATLiteral(1040)))
1040 13608 0
995 13608 0
995 1040 13607 0
c (( - aux849 + SATLiteral(1010) + SATLiteral(1025))<=0)
-1025 -13610 0
-1010 -13610 0
-1010 -1025 -13611 0
c (0<=( - aux849 + SATLiteral(1010) + SATLiteral(1025)))
1025 13611 0
1010 13611 0
1010 1025 13610 0
c ((aux849 - aux850 + SATLiteral(980))<=0)
13610 -13613 0
13611 -13614 0
-980 -13613 0
-980 13610 -13614 0
-980 13611 -13616 0
c (0<=(aux849 - aux850 + SATLiteral(980)))
-13611 13616 0
-13610 13614 0
980 13616 0
980 -13611 13614 0
980 -13610 13613 0
c ((aux846 + aux848 - aux851)<=0)
13607 -13618 0
13608 -13619 0
13601 -13618 0
13601 13607 -13619 0
13601 13608 -13621 0
13602 -13619 0
13602 13607 -13621 0
13602 13608 -13623 0
c (0<=(aux846 + aux848 - aux851))
-13608 13623 0
-13607 13621 0
-13602 13623 0
-13602 -13608 13621 0
-13602 -13607 13619 0
-13601 13621 0
-13601 -13608 13619 0
-13601 -13607 13618 0
c (( - aux852 + SATLiteral(951) + SATLiteral(1071))<=0)
-1071 -13625 0
-951 -13625 0
-951 -1071 -13626 0
c (0<=( - aux852 + SATLiteral(951) + SATLiteral(1071)))
1071 13626 0
951 13626 0
951 1071 13625 0
c (( - aux853 + SATLiteral(966) + SATLiteral(1056))<=0)
-1056 -13628 0
-966 -13628 0
-966 -1056 -13629 0
c (0<=( - aux853 + SATLiteral(966) + SATLiteral(1056)))
1056 13629 0
966 13629 0
966 1056 13628 0
c (( - aux854 + SATLiteral(996) + SATLiteral(1041))<=0)
-1041 -13631 0
-996 -13631 0
-996 -1041 -13632 0
c (0<=( - aux854 + SATLiteral(996) + SATLiteral(1041)))
1041 13632 0
996 13632 0
996 1041 13631 0
c (( - aux855 + SATLiteral(1011) + SATLiteral(1026))<=0)
-1026 -13634 0
-1011 -13634 0
-1011 -1026 -13635 0
c (0<=( - aux855 + SATLiteral(1011) + SATLiteral(1026)))
1026 13635 0
1011 13635 0
1011 1026 13634 0
c ((aux855 - aux856 + SATLiteral(981))<=0)
13634 -13637 0
13635 -13638 0
-981 -13637 0
-981 13634 -13638 0
-981 13635 -13640 0
c (0<=(aux855 - aux856 + SATLiteral(981)))
-13635 13640 0
-13634 13638 0
981 13640 0
981 -13635 13638 0
981 -13634 13637 0
c ((aux852 + aux854 - aux857)<=0)
13631 -13642 0
13632 -13643 0
13625 -13642 0
13625 13631 -13643 0
13625 13632 -13645 0
13626 -13643 0
13626 13631 -13645 0
13626 13632 -13647 0
c (0<=(aux852 + aux854 - aux857))
-13632 13647 0
-13631 13645 0
-13626 13647 0
-13626 -13632 13645 0
-13626 -13631 13643 0
-13625 13645 0
-13625 -13632 13643 0
-13625 -13631 13642 0
c (( - aux858 + SATLiteral(952) + SATLiteral(1072))<=0)
-1072 -13649 0
-952 -13649 0
-952 -1072 -13650 0
c (0<=( - aux858 + SATLiteral(952) + SATLiteral(1072)))
1072 13650 0
952 13650 0
952 1072 13649 0
c (( - aux859 + SATLiteral(967) + SATLiteral(1057))<=0)
-1057 -13652 0
-967 -13652 0
-967 -1057 -13653 0
c (0<=( - aux859 + SATLiteral(967) + SATLiteral(1057)))
1057 13653 0
967 13653 0
967 1057 13652 0
c (( - aux860 + SATLiteral(997) + SATLiteral(1042))<=0)
-1042 -13655 0
-997 -13655 0
-997 -1042 -13656 0
c (0<=( - aux860 + SATLiteral(997) + SATLiteral(1042)))
1042 13656 0
997 13656 0
997 1042 13655 0
c (( - aux861 + SATLiteral(1012) + SATLiteral(1027))<=0)
-1027 -13658 0
-1012 -13658 0
-1012 -1027 -13659 0
c (0<=( - aux861 + SATLiteral(1012) + SATLiteral(1027)))
1027 13659 0
1012 13659 0
1012 1027 13658 0
c ((aux861 - aux862 + SATLiteral(982))<=0)
13658 -13661 0
13659 -13662 0
-982 -13661 0
-982 13658 -13662 0
-982 13659 -13664 0
c (0<=(aux861 - aux862 + SATLiteral(982)))
-13659 13664 0
-13658 13662 0
982 13664 0
982 -13659 13662 0
982 -13658 13661 0
c ((aux858 + aux860 - aux863)<=0)
13655 -13666 0
13656 -13667 0
13649 -13666 0
13649 13655 -13667 0
13649 13656 -13669 0
13650 -13667 0
13650 13655 -13669 0
13650 13656 -13671 0
c (0<=(aux858 + aux860 - aux863))
-13656 13671 0
-13655 13669 0
-13650 13671 0
-13650 -13656 13669 0
-13650 -13655 13667 0
-13649 13669 0
-13649 -13656 13667 0
-13649 -13655 13666 0
c (( - aux864 + SATLiteral(953) + SATLiteral(1073))<=0)
-1073 -13673 0
-953 -13673 0
-953 -1073 -13674 0
c (0<=( - aux864 + SATLiteral(953) + SATLiteral(1073)))
1073 13674 0
953 13674 0
953 1073 13673 0
c (( - aux865 + SATLiteral(968) + SATLiteral(1058))<=0)
-1058 -13676 0
-968 -13676 0
-968 -1058 -13677 0
c (0<=( - aux865 + SATLiteral(968) + SATLiteral(1058)))
1058 13677 0
968 13677 0
968 1058 13676 0
c (( - aux866 + SATLiteral(998) + SATLiteral(1043))<=0)
-1043 -13679 0
-998 -13679 0
-998 -1043 -13680 0
c (0<=( - aux866 + SATLiteral(998) + SATLiteral(1043)))
1043 13680 0
998 13680 0
998 1043 13679 0
c (( - aux867 + SATLiteral(1013) + SATLiteral(1028))<=0)
-1028 -13682 0
-1013 -13682 0
-1013 -1028 -13683 0
c (0<=( - aux867 + SATLiteral(1013) + SATLiteral(1028)))
1028 13683 0
1013 13683 0
1013 1028 13682 0
c ((aux867 - aux868 + SATLiteral(983))<=0)
13682 -13685 0
13683 -13686 0
-983 -13685 0
-983 13682 -13686 0
-983 13683 -13688 0
c (0<=(aux867 - aux868 + SATLiteral(983)))
-13683 13688 0
-13682 13686 0
983 13688 0
983 -13683 13686 0
983 -13682 13685 0
c ((aux864 + aux866 - aux869)<=0)
13679 -13690 0
13680 -13691 0
13673 -13690 0
13673 13679 -13691 0
13673 13680 -13693 0
13674 -13691 0
13674 13679 -13693 0
13674 13680 -13695 0
c (0<=(aux864 + aux866 - aux869))
-13680 13695 0
-13679 13693 0
-13674 13695 0
-13674 -13680 13693 0
-13674 -13679 13691 0
-13673 13693 0
-13673 -13680 13691 0
-13673 -13679 13690 0
c (( - aux870 + SATLiteral(954) + SATLiteral(1074))<=0)
-1074 -13697 0
-954 -13697 0
-954 -1074 -13698 0
c (0<=( - aux870 + SATLiteral(954) + SATLiteral(1074)))
1074 13698 0
954 13698 0
954 1074 13697 0
c (( - aux871 + SATLiteral(969) + SATLiteral(1059))<=0)
-1059 -13700 0
-969 -13700 0
-969 -1059 -13701 0
c (0<=( - aux871 + SATLiteral(969) + SATLiteral(1059)))
1059 13701 0
969 13701 0
969 1059 13700 0
c (( - aux872 + SATLiteral(999) + SATLiteral(1044))<=0)
-1044 -13703 0
-999 -13703 0
-999 -1044 -13704 0
c (0<=( - aux872 + SATLiteral(999) + SATLiteral(1044)))
1044 13704 0
999 13704 0
999 1044 13703 0
c (( - aux873 + SATLiteral(1014) + SATLiteral(1029))<=0)
-1029 -13706 0
-1014 -13706 0
-1014 -1029 -13707 0
c (0<=( - aux873 + SATLiteral(1014) + SATLiteral(1029)))
1029 13707 0
1014 13707 0
1014 1029 13706 0
c ((aux873 - aux874 + SATLiteral(984))<=0)
13706 -13709 0
13707 -13710 0
-984 -13709 0
-984 13706 -13710 0
-984 13707 -13712 0
c (0<=(aux873 - aux874 + SATLiteral(984)))
-13707 13712 0
-13706 13710 0
984 13712 0
984 -13707 13710 0
984 -13706 13709 0
c ((aux870 + aux872 - aux875)<=0)
13703 -13714 0
13704 -13715 0
13697 -13714 0
13697 13703 -13715 0
13697 13704 -13717 0
13698 -13715 0
13698 13703 -13717 0
13698 13704 -13719 0
c (0<=(aux870 + aux872 - aux875))
-13704 13719 0
-13703 13717 0
-13698 13719 0
-13698 -13704 13717 0
-13698 -13703 13715 0
-13697 13717 0
-13697 -13704 13715 0
-13697 -13703 13714 0
c (( - aux876 + SATLiteral(955) + SATLiteral(1075))<=0)
-1075 -13721 0
-955 -13721 0
-955 -1075 -13722 0
c (0<=( - aux876 + SATLiteral(955) + SATLiteral(1075)))
1075 13722 0
955 13722 0
955 1075 13721 0
c (( - aux877 + SATLiteral(970) + SATLiteral(1060))<=0)
-1060 -13724 0
-970 -13724 0
-970 -1060 -13725 0
c (0<=( - aux877 + SATLiteral(970) + SATLiteral(1060)))
1060 13725 0
970 13725 0
970 1060 13724 0
c (( - aux878 + SATLiteral(1000) + SATLiteral(1045))<=0)
-1045 -13727 0
-1000 -13727 0
-1000 -1045 -13728 0
c (0<=( - aux878 + SATLiteral(1000) + SATLiteral(1045)))
1045 13728 0
1000 13728 0
1000 1045 13727 0
c (( - aux879 + SATLiteral(1015) + SATLiteral(1030))<=0)
-1030 -13730 0
-1015 -13730 0
-1015 -1030 -13731 0
c (0<=( - aux879 + SATLiteral(1015) + SATLiteral(1030)))
1030 13731 0
1015 13731 0
1015 1030 13730 0
c ((aux879 - aux880 + SATLiteral(985))<=0)
13730 -13733 0
13731 -13734 0
-985 -13733 0
-985 13730 -13734 0
-985 13731 -13736 0
c (0<=(aux879 - aux880 + SATLiteral(985)))
-13731 13736 0
-13730 13734 0
985 13736 0
985 -13731 13734 0
985 -13730 13733 0
c ((aux876 + aux878 - aux881)<=0)
13727 -13738 0
13728 -13739 0
13721 -13738 0
13721 13727 -13739 0
13721 13728 -13741 0
13722 -13739 0
13722 13727 -13741 0
13722 13728 -13743 0
c (0<=(aux876 + aux878 - aux881))
-13728 13743 0
-13727 13741 0
-13722 13743 0
-13722 -13728 13741 0
-13722 -13727 13739 0
-13721 13741 0
-13721 -13728 13739 0
-13721 -13727 13738 0
c ((SATLiteral(1082) + SATLiteral(1202) - aux882)<=0)
-1202 -13745 0
-1082 -13745 0
-1082 -1202 -13746 0
c (0<=(SATLiteral(1082) + SATLiteral(1202) - aux882))
1202 13746 0
1082 13746 0
1082 1202 13745 0
c ((SATLiteral(1097) + SATLiteral(1187) - aux883)<=0)
-1187 -13748 0
-1097 -13748 0
-1097 -1187 -13749 0
c (0<=(SATLiteral(1097) + SATLiteral(1187) - aux883))
1187 13749 0
1097 13749 0
1097 1187 13748 0
c ((SATLiteral(1127) + SATLiteral(1172) - aux884)<=0)
-1172 -13751 0
-1127 -13751 0
-1127 -1172 -13752 0
c (0<=(SATLiteral(1127) + SATLiteral(1172) - aux884))
1172 13752 0
1127 13752 0
1127 1172 13751 0
c ((SATLiteral(1142) + SATLiteral(1157) - aux885)<=0)
-1157 -13754 0
-1142 -13754 0
-1142 -1157 -13755 0
c (0<=(SATLiteral(1142) + SATLiteral(1157) - aux885))
1157 13755 0
1142 13755 0
1142 1157 13754 0
c ((SATLiteral(1112) + aux885 - aux886)<=0)
13754 -13757 0
13755 -13758 0
-1112 -13757 0
-1112 13754 -13758 0
-1112 13755 -13760 0
c (0<=(SATLiteral(1112) + aux885 - aux886))
-13755 13760 0
-13754 13758 0
1112 13760 0
1112 -13755 13758 0
1112 -13754 13757 0
c ((aux882 + aux884 - aux887)<=0)
13751 -13762 0
13752 -13763 0
13745 -13762 0
13745 13751 -13763 0
13745 13752 -13765 0
13746 -13763 0
13746 13751 -13765 0
13746 13752 -13767 0
c (0<=(aux882 + aux884 - aux887))
-13752 13767 0
-13751 13765 0
-13746 13767 0
-13746 -13752 13765 0
-13746 -13751 13763 0
-13745 13765 0
-13745 -13752 13763 0
-13745 -13751 13762 0
c ((SATLiteral(1083) + SATLiteral(1203) - aux888)<=0)
-1203 -13769 0
-1083 -13769 0
-1083 -1203 -13770 0
c (0<=(SATLiteral(1083) + SATLiteral(1203) - aux888))
1203 13770 0
1083 13770 0
1083 1203 13769 0
c ((SATLiteral(1098) + SATLiteral(1188) - aux889)<=0)
-1188 -13772 0
-1098 -13772 0
-1098 -1188 -13773 0
c (0<=(SATLiteral(1098) + SATLiteral(1188) - aux889))
1188 13773 0
1098 13773 0
1098 1188 13772 0
c ((SATLiteral(1128) + SATLiteral(1173) - aux890)<=0)
-1173 -13775 0
-1128 -13775 0
-1128 -1173 -13776 0
c (0<=(SATLiteral(1128) + SATLiteral(1173) - aux890))
1173 13776 0
1128 13776 0
1128 1173 13775 0
c ((SATLiteral(1143) + SATLiteral(1158) - aux891)<=0)
-1158 -13778 0
-1143 -13778 0
-1143 -1158 -13779 0
c (0<=(SATLiteral(1143) + SATLiteral(1158) - aux891))
1158 13779 0
1143 13779 0
1143 1158 13778 0
c ((SATLiteral(1113) + aux891 - aux892)<=0)
13778 -13781 0
13779 -13782 0
-1113 -13781 0
-1113 13778 -13782 0
-1113 13779 -13784 0
c (0<=(SATLiteral(1113) + aux891 - aux892))
-13779 13784 0
-13778 13782 0
1113 13784 0
1113 -13779 13782 0
1113 -13778 13781 0
c ((aux888 + aux890 - aux893)<=0)
13775 -13786 0
13776 -13787 0
13769 -13786 0
13769 13775 -13787 0
13769 13776 -13789 0
13770 -13787 0
13770 13775 -13789 0
13770 13776 -13791 0
c (0<=(aux888 + aux890 - aux893))
-13776 13791 0
-13775 13789 0
-13770 13791 0
-13770 -13776 13789 0
-13770 -13775 13787 0
-13769 13789 0
-13769 -13776 13787 0
-13769 -13775 13786 0
c ((SATLiteral(1084) + SATLiteral(1204) - aux894)<=0)
-1204 -13793 0
-1084 -13793 0
-1084 -1204 -13794 0
c (0<=(SATLiteral(1084) + SATLiteral(1204) - aux894))
1204 13794 0
1084 13794 0
1084 1204 13793 0
c ((SATLiteral(1099) + SATLiteral(1189) - aux895)<=0)
-1189 -13796 0
-1099 -13796 0
-1099 -1189 -13797 0
c (0<=(SATLiteral(1099) + SATLiteral(1189) - aux895))
1189 13797 0
1099 13797 0
1099 1189 13796 0
c ((SATLiteral(1129) + SATLiteral(1174) - aux896)<=0)
-1174 -13799 0
-1129 -13799 0
-1129 -1174 -13800 0
c (0<=(SATLiteral(1129) + SATLiteral(1174) - aux896))
1174 13800 0
1129 13800 0
1129 1174 13799 0
c ((SATLiteral(1144) + SATLiteral(1159) - aux897)<=0)
-1159 -13802 0
-1144 -13802 0
-1144 -1159 -13803 0
c (0<=(SATLiteral(1144) + SATLiteral(1159) - aux897))
1159 13803 0
1144 13803 0
1144 1159 13802 0
c ((SATLiteral(1114) + aux897 - aux898)<=0)
13802 -13805 0
13803 -13806 0
-1114 -13805 0
-1114 13802 -13806 0
-1114 13803 -13808 0
c (0<=(SATLiteral(1114) + aux897 - aux898))
-13803 13808 0
-13802 13806 0
1114 13808 0
1114 -13803 13806 0
1114 -13802 13805 0
c ((aux894 + aux896 - aux899)<=0)
13799 -13810 0
13800 -13811 0
13793 -13810 0
13793 13799 -13811 0
13793 13800 -13813 0
13794 -13811 0
13794 13799 -13813 0
13794 13800 -13815 0
c (0<=(aux894 + aux896 - aux899))
-13800 13815 0
-13799 13813 0
-13794 13815 0
-13794 -13800 13813 0
-13794 -13799 13811 0
-13793 13813 0
-13793 -13800 13811 0
-13793 -13799 13810 0
c ((SATLiteral(1085) + SATLiteral(1205) - aux900)<=0)
-1205 -13817 0
-1085 -13817 0
-1085 -1205 -13818 0
c (0<=(SATLiteral(1085) + SATLiteral(1205) - aux900))
1205 13818 0
1085 13818 0
1085 1205 13817 0
c ((SATLiteral(1100) + SATLiteral(1190) - aux901)<=0)
-1190 -13820 0
-1100 -13820 0
-1100 -1190 -13821 0
c (0<=(SATLiteral(1100) + SATLiteral(1190) - aux901))
1190 13821 0
1100 13821 0
1100 1190 13820 0
c ((SATLiteral(1130) + SATLiteral(1175) - aux902)<=0)
-1175 -13823 0
-1130 -13823 0
-1130 -1175 -13824 0
c (0<=(SATLiteral(1130) + SATLiteral(1175) - aux902))
1175 13824 0
1130 13824 0
1130 1175 13823 0
c ((SATLiteral(1145) + SATLiteral(1160) - aux903)<=0)
-1160 -13826 0
-1145 -13826 0
-1145 -1160 -13827 0
c (0<=(SATLiteral(1145) + SATLiteral(1160) - aux903))
1160 13827 0
1145 13827 0
1145 1160 13826 0
c ((SATLiteral(1115) + aux903 - aux904)<=0)
13826 -13829 0
13827 -13830 0
-1115 -13829 0
-1115 13826 -13830 0
-1115 13827 -13832 0
c (0<=(SATLiteral(1115) + aux903 - aux904))
-13827 13832 0
-13826 13830 0
1115 13832 0
1115 -13827 13830 0
1115 -13826 13829 0
c ((aux900 + aux902 - aux905)<=0)
13823 -13834 0
13824 -13835 0
13817 -13834 0
13817 13823 -13835 0
13817 13824 -13837 0
13818 -13835 0
13818 13823 -13837 0
13818 13824 -13839 0
c (0<=(aux900 + aux902 - aux905))
-13824 13839 0
-13823 13837 0
-13818 13839 0
-13818 -13824 13837 0
-13818 -13823 13835 0
-13817 13837 0
-13817 -13824 13835 0
-13817 -13823 13834 0
c ((SATLiteral(1086) + SATLiteral(1206) - aux906)<=0)
-1206 -13841 0
-1086 -13841 0
-1086 -1206 -13842 0
c (0<=(SATLiteral(1086) + SATLiteral(1206) - aux906))
1206 13842 0
1086 13842 0
1086 1206 13841 0
c ((SATLiteral(1101) + SATLiteral(1191) - aux907)<=0)
-1191 -13844 0
-1101 -13844 0
-1101 -1191 -13845 0
c (0<=(SATLiteral(1101) + SATLiteral(1191) - aux907))
1191 13845 0
1101 13845 0
1101 1191 13844 0
c ((SATLiteral(1131) + SATLiteral(1176) - aux908)<=0)
-1176 -13847 0
-1131 -13847 0
-1131 -1176 -13848 0
c (0<=(SATLiteral(1131) + SATLiteral(1176) - aux908))
1176 13848 0
1131 13848 0
1131 1176 13847 0
c ((SATLiteral(1146) + SATLiteral(1161) - aux909)<=0)
-1161 -13850 0
-1146 -13850 0
-1146 -1161 -13851 0
c (0<=(SATLiteral(1146) + SATLiteral(1161) - aux909))
1161 13851 0
1146 13851 0
1146 1161 13850 0
c ((SATLiteral(1116) + aux909 - aux910)<=0)
13850 -13853 0
13851 -13854 0
-1116 -13853 0
-1116 13850 -13854 0
-1116 13851 -13856 0
c (0<=(SATLiteral(1116) + aux909 - aux910))
-13851 13856 0
-13850 13854 0
1116 13856 0
1116 -13851 13854 0
1116 -13850 13853 0
c ((aux906 + aux908 - aux911)<=0)
13847 -13858 0
13848 -13859 0
13841 -13858 0
13841 13847 -13859 0
13841 13848 -13861 0
13842 -13859 0
13842 13847 -13861 0
13842 13848 -13863 0
c (0<=(aux906 + aux908 - aux911))
-13848 13863 0
-13847 13861 0
-13842 13863 0
-13842 -13848 13861 0
-13842 -13847 13859 0
-13841 13861 0
-13841 -13848 13859 0
-13841 -13847 13858 0
c ((SATLiteral(1087) + SATLiteral(1207) - aux912)<=0)
-1207 -13865 0
-1087 -13865 0
-1087 -1207 -13866 0
c (0<=(SATLiteral(1087) + SATLiteral(1207) - aux912))
1207 13866 0
1087 13866 0
1087 1207 13865 0
c ((SATLiteral(1102) + SATLiteral(1192) - aux913)<=0)
-1192 -13868 0
-1102 -13868 0
-1102 -1192 -13869 0
c (0<=(SATLiteral(1102) + SATLiteral(1192) - aux913))
1192 13869 0
1102 13869 0
1102 1192 13868 0
c ((SATLiteral(1132) + SATLiteral(1177) - aux914)<=0)
-1177 -13871 0
-1132 -13871 0
-1132 -1177 -13872 0
c (0<=(SATLiteral(1132) + SATLiteral(1177) - aux914))
1177 13872 0
1132 13872 0
1132 1177 13871 0
c ((SATLiteral(1147) + SATLiteral(1162) - aux915)<=0)
-1162 -13874 0
-1147 -13874 0
-1147 -1162 -13875 0
c (0<=(SATLiteral(1147) + SATLiteral(1162) - aux915))
1162 13875 0
1147 13875 0
1147 1162 13874 0
c ((SATLiteral(1117) + aux915 - aux916)<=0)
13874 -13877 0
13875 -13878 0
-1117 -13877 0
-1117 13874 -13878 0
-1117 13875 -13880 0
c (0<=(SATLiteral(1117) + aux915 - aux916))
-13875 13880 0
-13874 13878 0
1117 13880 0
1117 -13875 13878 0
1117 -13874 13877 0
c ((aux912 + aux914 - aux917)<=0)
13871 -13882 0
13872 -13883 0
13865 -13882 0
13865 13871 -13883 0
13865 13872 -13885 0
13866 -13883 0
13866 13871 -13885 0
13866 13872 -13887 0
c (0<=(aux912 + aux914 - aux917))
-13872 13887 0
-13871 13885 0
-13866 13887 0
-13866 -13872 13885 0
-13866 -13871 13883 0
-13865 13885 0
-13865 -13872 13883 0
-13865 -13871 13882 0
c ((SATLiteral(1088) + SATLiteral(1208) - aux918)<=0)
-1208 -13889 0
-1088 -13889 0
-1088 -1208 -13890 0
c (0<=(SATLiteral(1088) + SATLiteral(1208) - aux918))
1208 13890 0
1088 13890 0
1088 1208 13889 0
c ((SATLiteral(1103) + SATLiteral(1193) - aux919)<=0)
-1193 -13892 0
-1103 -13892 0
-1103 -1193 -13893 0
c (0<=(SATLiteral(1103) + SATLiteral(1193) - aux919))
1193 13893 0
1103 13893 0
1103 1193 13892 0
c ((SATLiteral(1133) + SATLiteral(1178) - aux920)<=0)
-1178 -13895 0
-1133 -13895 0
-1133 -1178 -13896 0
c (0<=(SATLiteral(1133) + SATLiteral(1178) - aux920))
1178 13896 0
1133 13896 0
1133 1178 13895 0
c ((SATLiteral(1148) + SATLiteral(1163) - aux921)<=0)
-1163 -13898 0
-1148 -13898 0
-1148 -1163 -13899 0
c (0<=(SATLiteral(1148) + SATLiteral(1163) - aux921))
1163 13899 0
1148 13899 0
1148 1163 13898 0
c ((SATLiteral(1118) + aux921 - aux922)<=0)
13898 -13901 0
13899 -13902 0
-1118 -13901 0
-1118 13898 -13902 0
-1118 13899 -13904 0
c (0<=(SATLiteral(1118) + aux921 - aux922))
-13899 13904 0
-13898 13902 0
1118 13904 0
1118 -13899 13902 0
1118 -13898 13901 0
c ((aux918 + aux920 - aux923)<=0)
13895 -13906 0
13896 -13907 0
13889 -13906 0
13889 13895 -13907 0
13889 13896 -13909 0
13890 -13907 0
13890 13895 -13909 0
13890 13896 -13911 0
c (0<=(aux918 + aux920 - aux923))
-13896 13911 0
-13895 13909 0
-13890 13911 0
-13890 -13896 13909 0
-13890 -13895 13907 0
-13889 13909 0
-13889 -13896 13907 0
-13889 -13895 13906 0
c ((SATLiteral(1089) + SATLiteral(1209) - aux924)<=0)
-1209 -13913 0
-1089 -13913 0
-1089 -1209 -13914 0
c (0<=(SATLiteral(1089) + SATLiteral(1209) - aux924))
1209 13914 0
1089 13914 0
1089 1209 13913 0
c ((SATLiteral(1104) + SATLiteral(1194) - aux925)<=0)
-1194 -13916 0
-1104 -13916 0
-1104 -1194 -13917 0
c (0<=(SATLiteral(1104) + SATLiteral(1194) - aux925))
1194 13917 0
1104 13917 0
1104 1194 13916 0
c ((SATLiteral(1134) + SATLiteral(1179) - aux926)<=0)
-1179 -13919 0
-1134 -13919 0
-1134 -1179 -13920 0
c (0<=(SATLiteral(1134) + SATLiteral(1179) - aux926))
1179 13920 0
1134 13920 0
1134 1179 13919 0
c ((SATLiteral(1149) + SATLiteral(1164) - aux927)<=0)
-1164 -13922 0
-1149 -13922 0
-1149 -1164 -13923 0
c (0<=(SATLiteral(1149) + SATLiteral(1164) - aux927))
1164 13923 0
1149 13923 0
1149 1164 13922 0
c ((SATLiteral(1119) + aux927 - aux928)<=0)
13922 -13925 0
13923 -13926 0
-1119 -13925 0
-1119 13922 -13926 0
-1119 13923 -13928 0
c (0<=(SATLiteral(1119) + aux927 - aux928))
-13923 13928 0
-13922 13926 0
1119 13928 0
1119 -13923 13926 0
1119 -13922 13925 0
c ((aux924 + aux926 - aux929)<=0)
13919 -13930 0
13920 -13931 0
13913 -13930 0
13913 13919 -13931 0
13913 13920 -13933 0
13914 -13931 0
13914 13919 -13933 0
13914 13920 -13935 0
c (0<=(aux924 + aux926 - aux929))
-13920 13935 0
-13919 13933 0
-13914 13935 0
-13914 -13920 13933 0
-13914 -13919 13931 0
-13913 13933 0
-13913 -13920 13931 0
-13913 -13919 13930 0
c ((SATLiteral(1090) + SATLiteral(1210) - aux930)<=0)
-1210 -13937 0
-1090 -13937 0
-1090 -1210 -13938 0
c (0<=(SATLiteral(1090) + SATLiteral(1210) - aux930))
1210 13938 0
1090 13938 0
1090 1210 13937 0
c ((SATLiteral(1105) + SATLiteral(1195) - aux931)<=0)
-1195 -13940 0
-1105 -13940 0
-1105 -1195 -13941 0
c (0<=(SATLiteral(1105) + SATLiteral(1195) - aux931))
1195 13941 0
1105 13941 0
1105 1195 13940 0
c ((SATLiteral(1135) + SATLiteral(1180) - aux932)<=0)
-1180 -13943 0
-1135 -13943 0
-1135 -1180 -13944 0
c (0<=(SATLiteral(1135) + SATLiteral(1180) - aux932))
1180 13944 0
1135 13944 0
1135 1180 13943 0
c ((SATLiteral(1150) + SATLiteral(1165) - aux933)<=0)
-1165 -13946 0
-1150 -13946 0
-1150 -1165 -13947 0
c (0<=(SATLiteral(1150) + SATLiteral(1165) - aux933))
1165 13947 0
1150 13947 0
1150 1165 13946 0
c ((SATLiteral(1120) + aux933 - aux934)<=0)
13946 -13949 0
13947 -13950 0
-1120 -13949 0
-1120 13946 -13950 0
-1120 13947 -13952 0
c (0<=(SATLiteral(1120) + aux933 - aux934))
-13947 13952 0
-13946 13950 0
1120 13952 0
1120 -13947 13950 0
1120 -13946 13949 0
c ((aux930 + aux932 - aux935)<=0)
13943 -13954 0
13944 -13955 0
13937 -13954 0
13937 13943 -13955 0
13937 13944 -13957 0
13938 -13955 0
13938 13943 -13957 0
13938 13944 -13959 0
c (0<=(aux930 + aux932 - aux935))
-13944 13959 0
-13943 13957 0
-13938 13959 0
-13938 -13944 13957 0
-13938 -13943 13955 0
-13937 13957 0
-13937 -13944 13955 0
-13937 -13943 13954 0
c ((SATLiteral(407) - aux936 + SATLiteral(677))<=0)
-677 -13961 0
-407 -13961 0
-407 -677 -13962 0
c (0<=(SATLiteral(407) - aux936 + SATLiteral(677)))
677 13962 0
407 13962 0
407 677 13961 0
c ((SATLiteral(1082) - aux937 + SATLiteral(2))<=0)
-2 -13964 0
-1082 -13964 0
-1082 -2 -13965 0
c (0<=(SATLiteral(1082) - aux937 + SATLiteral(2)))
2 13965 0
1082 13965 0
1082 2 13964 0
c (( - aux938 + SATLiteral(812) + SATLiteral(947))<=0)
-947 -13967 0
-812 -13967 0
-812 -947 -13968 0
c (0<=( - aux938 + SATLiteral(812) + SATLiteral(947)))
947 13968 0
812 13968 0
812 947 13967 0
c (( - aux939 + SATLiteral(542) + SATLiteral(272))<=0)
-272 -13970 0
-542 -13970 0
-542 -272 -13971 0
c (0<=( - aux939 + SATLiteral(542) + SATLiteral(272)))
272 13971 0
542 13971 0
542 272 13970 0
c ((aux939 - aux940 + SATLiteral(137))<=0)
13970 -13973 0
13971 -13974 0
-137 -13973 0
-137 13970 -13974 0
-137 13971 -13976 0
c (0<=(aux939 - aux940 + SATLiteral(137)))
-13971 13976 0
-13970 13974 0
137 13976 0
137 -13971 13974 0
137 -13970 13973 0
c ((aux936 + aux938 - aux941)<=0)
13967 -13978 0
13968 -13979 0
13961 -13978 0
13961 13967 -13979 0
13961 13968 -13981 0
13962 -13979 0
13962 13967 -13981 0
13962 13968 -13983 0
c (0<=(aux936 + aux938 - aux941))
-13968 13983 0
-13967 13981 0
-13962 13983 0
-13962 -13968 13981 0
-13962 -13967 13979 0
-13961 13981 0
-13961 -13968 13979 0
-13961 -13967 13978 0
c ((SATLiteral(408) - aux942 + SATLiteral(678))<=0)
-678 -13985 0
-408 -13985 0
-408 -678 -13986 0
c (0<=(SATLiteral(408) - aux942 + SATLiteral(678)))
678 13986 0
408 13986 0
408 678 13985 0
c ((SATLiteral(1083) - aux943 + SATLiteral(3))<=0)
-3 -13988 0
-1083 -13988 0
-1083 -3 -13989 0
c (0<=(SATLiteral(1083) - aux943 + SATLiteral(3)))
3 13989 0
1083 13989 0
1083 3 13988 0
c (( - aux944 + SATLiteral(813) + SATLiteral(948))<=0)
-948 -13991 0
-813 -13991 0
-813 -948 -13992 0
c (0<=( - aux944 + SATLiteral(813) + SATLiteral(948)))
948 13992 0
813 13992 0
813 948 13991 0
c (( - aux945 + SATLiteral(543) + SATLiteral(273))<=0)
-273 -13994 0
-543 -13994 0
-543 -273 -13995 0
c (0<=( - aux945 + SATLiteral(543) + SATLiteral(273)))
273 13995 0
543 13995 0
543 273 13994 0
c ((aux945 - aux946 + SATLiteral(138))<=0)
13994 -13997 0
13995 -13998 0
-138 -13997 0
-138 13994 -13998 0
-138 13995 -14000 0
c (0<=(aux945 - aux946 + SATLiteral(138)))
-13995 14000 0
-13994 13998 0
138 14000 0
138 -13995 13998 0
138 -13994 13997 0
c ((aux942 + aux944 - aux947)<=0)
13991 -14002 0
13992 -14003 0
13985 -14002 0
13985 13991 -14003 0
13985 13992 -14005 0
13986 -14003 0
13986 13991 -14005 0
13986 13992 -14007 0
c (0<=(aux942 + aux944 - aux947))
-13992 14007 0
-13991 14005 0
-13986 14007 0
-13986 -13992 14005 0
-13986 -13991 14003 0
-13985 14005 0
-13985 -13992 14003 0
-13985 -13991 14002 0
c ((SATLiteral(409) - aux948 + SATLiteral(679))<=0)
-679 -14009 0
-409 -14009 0
-409 -679 -14010 0
c (0<=(SATLiteral(409) - aux948 + SATLiteral(679)))
679 14010 0
409 14010 0
409 679 14009 0
c ((SATLiteral(1084) - aux949 + SATLiteral(4))<=0)
-4 -14012 0
-1084 -14012 0
-1084 -4 -14013 0
c (0<=(SATLiteral(1084) - aux949 + SATLiteral(4)))
4 14013 0
1084 14013 0
1084 4 14012 0
c (( - aux950 + SATLiteral(814) + SATLiteral(949))<=0)
-949 -14015 0
-814 -14015 0
-814 -949 -14016 0
c (0<=( - aux950 + SATLiteral(814) + SATLiteral(949)))
949 14016 0
814 14016 0
814 949 14015 0
c (( - aux951 + SATLiteral(544) + SATLiteral(274))<=0)
-274 -14018 0
-544 -14018 0
-544 -274 -14019 0
c (0<=( - aux951 + SATLiteral(544) + SATLiteral(274)))
274 14019 0
544 14019 0
544 274 14018 0
c ((aux951 - aux952 + SATLiteral(139))<=0)
14018 -14021 0
14019 -14022 0
-139 -14021 0
-139 14018 -14022 0
-139 14019 -14024 0
c (0<=(aux951 - aux952 + SATLiteral(139)))
-14019 14024 0
-14018 14022 0
139 14024 0
139 -14019 14022 0
139 -14018 14021 0
c ((aux948 + aux950 - aux953)<=0)
14015 -14026 0
14016 -14027 0
14009 -14026 0
14009 14015 -14027 0
14009 14016 -14029 0
14010 -14027 0
14010 14015 -14029 0
14010 14016 -14031 0
c (0<=(aux948 + aux950 - aux953))
-14016 14031 0
-14015 14029 0
-14010 14031 0
-14010 -14016 14029 0
-14010 -14015 14027 0
-14009 14029 0
-14009 -14016 14027 0
-14009 -14015 14026 0
c ((SATLiteral(410) - aux954 + SATLiteral(680))<=0)
-680 -14033 0
-410 -14033 0
-410 -680 -14034 0
c (0<=(SATLiteral(410) - aux954 + SATLiteral(680)))
680 14034 0
410 14034 0
410 680 14033 0
c ((SATLiteral(1085) - aux955 + SATLiteral(5))<=0)
-5 -14036 0
-1085 -14036 0
-1085 -5 -14037 0
c (0<=(SATLiteral(1085) - aux955 + SATLiteral(5)))
5 14037 0
1085 14037 0
1085 5 14036 0
c (( - aux956 + SATLiteral(815) + SATLiteral(950))<=0)
-950 -14039 0
-815 -14039 0
-815 -950 -14040 0
c (0<=( - aux956 + SATLiteral(815) + SATLiteral(950)))
950 14040 0
815 14040 0
815 950 14039 0
c (( - aux957 + SATLiteral(545) + SATLiteral(275))<=0)
-275 -14042 0
-545 -14042 0
-545 -275 -14043 0
c (0<=( - aux957 + SATLiteral(545) + SATLiteral(275)))
275 14043 0
545 14043 0
545 275 14042 0
c ((aux957 - aux958 + SATLiteral(140))<=0)
14042 -14045 0
14043 -14046 0
-140 -14045 0
-140 14042 -14046 0
-140 14043 -14048 0
c (0<=(aux957 - aux958 + SATLiteral(140)))
-14043 14048 0
-14042 14046 0
140 14048 0
140 -14043 14046 0
140 -14042 14045 0
c ((aux954 + aux956 - aux959)<=0)
14039 -14050 0
14040 -14051 0
14033 -14050 0
14033 14039 -14051 0
14033 14040 -14053 0
14034 -14051 0
14034 14039 -14053 0
14034 14040 -14055 0
c (0<=(aux954 + aux956 - aux959))
-14040 14055 0
-14039 14053 0
-14034 14055 0
-14034 -14040 14053 0
-14034 -14039 14051 0
-14033 14053 0
-14033 -14040 14051 0
-14033 -14039 14050 0
c ((SATLiteral(411) - aux960 + SATLiteral(681))<=0)
-681 -14057 0
-411 -14057 0
-411 -681 -14058 0
c (0<=(SATLiteral(411) - aux960 + SATLiteral(681)))
681 14058 0
411 14058 0
411 681 14057 0
c ((SATLiteral(1086) - aux961 + SATLiteral(6))<=0)
-6 -14060 0
-1086 -14060 0
-1086 -6 -14061 0
c (0<=(SATLiteral(1086) - aux961 + SATLiteral(6)))
6 14061 0
1086 14061 0
1086 6 14060 0
c (( - aux962 + SATLiteral(816) + SATLiteral(951))<=0)
-951 -14063 0
-816 -14063 0
-816 -951 -14064 0
c (0<=( - aux962 + SATLiteral(816) + SATLiteral(951)))
951 14064 0
816 14064 0
816 951 14063 0
c (( - aux963 + SATLiteral(546) + SATLiteral(276))<=0)
-276 -14066 0
-546 -14066 0
-546 -276 -14067 0
c (0<=( - aux963 + SATLiteral(546) + SATLiteral(276)))
276 14067 0
546 14067 0
546 276 14066 0
c ((aux963 - aux964 + SATLiteral(141))<=0)
14066 -14069 0
14067 -14070 0
-141 -14069 0
-141 14066 -14070 0
-141 14067 -14072 0
c (0<=(aux963 - aux964 + SATLiteral(141)))
-14067 14072 0
-14066 14070 0
141 14072 0
141 -14067 14070 0
141 -14066 14069 0
c ((aux960 + aux962 - aux965)<=0)
14063 -14074 0
14064 -14075 0
14057 -14074 0
14057 14063 -14075 0
14057 14064 -14077 0
14058 -14075 0
14058 14063 -14077 0
14058 14064 -14079 0
c (0<=(aux960 + aux962 - aux965))
-14064 14079 0
-14063 14077 0
-14058 14079 0
-14058 -14064 14077 0
-14058 -14063 14075 0
-14057 14077 0
-14057 -14064 14075 0
-14057 -14063 14074 0
c ((SATLiteral(412) - aux966 + SATLiteral(682))<=0)
-682 -14081 0
-412 -14081 0
-412 -682 -14082 0
c (0<=(SATLiteral(412) - aux966 + SATLiteral(682)))
682 14082 0
412 14082 0
412 682 14081 0
c ((SATLiteral(1087) - aux967 + SATLiteral(7))<=0)
-7 -14084 0
-1087 -14084 0
-1087 -7 -14085 0
c (0<=(SATLiteral(1087) - aux967 + SATLiteral(7)))
7 14085 0
1087 14085 0
1087 7 14084 0
c (( - aux968 + SATLiteral(817) + SATLiteral(952))<=0)
-952 -14087 0
-817 -14087 0
-817 -952 -14088 0
c (0<=( - aux968 + SATLiteral(817) + SATLiteral(952)))
952 14088 0
817 14088 0
817 952 14087 0
c (( - aux969 + SATLiteral(547) + SATLiteral(277))<=0)
-277 -14090 0
-547 -14090 0
-547 -277 -14091 0
c (0<=( - aux969 + SATLiteral(547) + SATLiteral(277)))
277 14091 0
547 14091 0
547 277 14090 0
c ((aux969 - aux970 + SATLiteral(142))<=0)
14090 -14093 0
14091 -14094 0
-142 -14093 0
-142 14090 -14094 0
-142 14091 -14096 0
c (0<=(aux969 - aux970 + SATLiteral(142)))
-14091 14096 0
-14090 14094 0
142 14096 0
142 -14091 14094 0
142 -14090 14093 0
c ((aux966 + aux968 - aux971)<=0)
14087 -14098 0
14088 -14099 0
14081 -14098 0
14081 14087 -14099 0
14081 14088 -14101 0
14082 -14099 0
14082 14087 -14101 0
14082 14088 -14103 0
c (0<=(aux966 + aux968 - aux971))
-14088 14103 0
-14087 14101 0
-14082 14103 0
-14082 -14088 14101 0
-14082 -14087 14099 0
-14081 14101 0
-14081 -14088 14099 0
-14081 -14087 14098 0
c ((SATLiteral(413) - aux972 + SATLiteral(683))<=0)
-683 -14105 0
-413 -14105 0
-413 -683 -14106 0
c (0<=(SATLiteral(413) - aux972 + SATLiteral(683)))
683 14106 0
413 14106 0
413 683 14105 0
c ((SATLiteral(1088) - aux973 + SATLiteral(8))<=0)
-8 -14108 0
-1088 -14108 0
-1088 -8 -14109 0
c (0<=(SATLiteral(1088) - aux973 + SATLiteral(8)))
8 14109 0
1088 14109 0
1088 8 14108 0
c (( - aux974 + SATLiteral(818) + SATLiteral(953))<=0)
-953 -14111 0
-818 -14111 0
-818 -953 -14112 0
c (0<=( - aux974 + SATLiteral(818) + SATLiteral(953)))
953 14112 0
818 14112 0
818 953 14111 0
c (( - aux975 + SATLiteral(548) + SATLiteral(278))<=0)
-278 -14114 0
-548 -14114 0
-548 -278 -14115 0
c (0<=( - aux975 + SATLiteral(548) + SATLiteral(278)))
278 14115 0
548 14115 0
548 278 14114 0
c ((aux975 - aux976 + SATLiteral(143))<=0)
14114 -14117 0
14115 -14118 0
-143 -14117 0
-143 14114 -14118 0
-143 14115 -14120 0
c (0<=(aux975 - aux976 + SATLiteral(143)))
-14115 14120 0
-14114 14118 0
143 14120 0
143 -14115 14118 0
143 -14114 14117 0
c ((aux972 + aux974 - aux977)<=0)
14111 -14122 0
14112 -14123 0
14105 -14122 0
14105 14111 -14123 0
14105 14112 -14125 0
14106 -14123 0
14106 14111 -14125 0
14106 14112 -14127 0
c (0<=(aux972 + aux974 - aux977))
-14112 14127 0
-14111 14125 0
-14106 14127 0
-14106 -14112 14125 0
-14106 -14111 14123 0
-14105 14125 0
-14105 -14112 14123 0
-14105 -14111 14122 0
c ((SATLiteral(414) - aux978 + SATLiteral(684))<=0)
-684 -14129 0
-414 -14129 0
-414 -684 -14130 0
c (0<=(SATLiteral(414) - aux978 + SATLiteral(684)))
684 14130 0
414 14130 0
414 684 14129 0
c ((SATLiteral(1089) - aux979 + SATLiteral(9))<=0)
-9 -14132 0
-1089 -14132 0
-1089 -9 -14133 0
c (0<=(SATLiteral(1089) - aux979 + SATLiteral(9)))
9 14133 0
1089 14133 0
1089 9 14132 0
c (( - aux980 + SATLiteral(819) + SATLiteral(954))<=0)
-954 -14135 0
-819 -14135 0
-819 -954 -14136 0
c (0<=( - aux980 + SATLiteral(819) + SATLiteral(954)))
954 14136 0
819 14136 0
819 954 14135 0
c (( - aux981 + SATLiteral(549) + SATLiteral(279))<=0)
-279 -14138 0
-549 -14138 0
-549 -279 -14139 0
c (0<=( - aux981 + SATLiteral(549) + SATLiteral(279)))
279 14139 0
549 14139 0
549 279 14138 0
c ((aux981 - aux982 + SATLiteral(144))<=0)
14138 -14141 0
14139 -14142 0
-144 -14141 0
-144 14138 -14142 0
-144 14139 -14144 0
c (0<=(aux981 - aux982 + SATLiteral(144)))
-14139 14144 0
-14138 14142 0
144 14144 0
144 -14139 14142 0
144 -14138 14141 0
c ((aux978 + aux980 - aux983)<=0)
14135 -14146 0
14136 -14147 0
14129 -14146 0
14129 14135 -14147 0
14129 14136 -14149 0
14130 -14147 0
14130 14135 -14149 0
14130 14136 -14151 0
c (0<=(aux978 + aux980 - aux983))
-14136 14151 0
-14135 14149 0
-14130 14151 0
-14130 -14136 14149 0
-14130 -14135 14147 0
-14129 14149 0
-14129 -14136 14147 0
-14129 -14135 14146 0
c ((SATLiteral(415) - aux984 + SATLiteral(685))<=0)
-685 -14153 0
-415 -14153 0
-415 -685 -14154 0
c (0<=(SATLiteral(415) - aux984 + SATLiteral(685)))
685 14154 0
415 14154 0
415 685 14153 0
c ((SATLiteral(1090) - aux985 + SATLiteral(10))<=0)
-10 -14156 0
-1090 -14156 0
-1090 -10 -14157 0
c (0<=(SATLiteral(1090) - aux985 + SATLiteral(10)))
10 14157 0
1090 14157 0
1090 10 14156 0
c (( - aux986 + SATLiteral(820) + SATLiteral(955))<=0)
-955 -14159 0
-820 -14159 0
-820 -955 -14160 0
c (0<=( - aux986 + SATLiteral(820) + SATLiteral(955)))
955 14160 0
820 14160 0
820 955 14159 0
c (( - aux987 + SATLiteral(550) + SATLiteral(280))<=0)
-280 -14162 0
-550 -14162 0
-550 -280 -14163 0
c (0<=( - aux987 + SATLiteral(550) + SATLiteral(280)))
280 14163 0
550 14163 0
550 280 14162 0
c ((aux987 - aux988 + SATLiteral(145))<=0)
14162 -14165 0
14163 -14166 0
-145 -14165 0
-145 14162 -14166 0
-145 14163 -14168 0
c (0<=(aux987 - aux988 + SATLiteral(145)))
-14163 14168 0
-14162 14166 0
145 14168 0
145 -14163 14166 0
145 -14162 14165 0
c ((aux984 + aux986 - aux989)<=0)
14159 -14170 0
14160 -14171 0
14153 -14170 0
14153 14159 -14171 0
14153 14160 -14173 0
14154 -14171 0
14154 14159 -14173 0
14154 14160 -14175 0
c (0<=(aux984 + aux986 - aux989))
-14160 14175 0
-14159 14173 0
-14154 14175 0
-14154 -14160 14173 0
-14154 -14159 14171 0
-14153 14173 0
-14153 -14160 14171 0
-14153 -14159 14170 0
c ((SATLiteral(422) - aux990 + SATLiteral(692))<=0)
-692 -14177 0
-422 -14177 0
-422 -692 -14178 0
c (0<=(SATLiteral(422) - aux990 + SATLiteral(692)))
692 14178 0
422 14178 0
422 692 14177 0
c ((SATLiteral(1097) - aux991 + SATLiteral(17))<=0)
-17 -14180 0
-1097 -14180 0
-1097 -17 -14181 0
c (0<=(SATLiteral(1097) - aux991 + SATLiteral(17)))
17 14181 0
1097 14181 0
1097 17 14180 0
c (( - aux992 + SATLiteral(827) + SATLiteral(962))<=0)
-962 -14183 0
-827 -14183 0
-827 -962 -14184 0
c (0<=( - aux992 + SATLiteral(827) + SATLiteral(962)))
962 14184 0
827 14184 0
827 962 14183 0
c (( - aux993 + SATLiteral(557) + SATLiteral(287))<=0)
-287 -14186 0
-557 -14186 0
-557 -287 -14187 0
c (0<=( - aux993 + SATLiteral(557) + SATLiteral(287)))
287 14187 0
557 14187 0
557 287 14186 0
c ((aux993 - aux994 + SATLiteral(152))<=0)
14186 -14189 0
14187 -14190 0
-152 -14189 0
-152 14186 -14190 0
-152 14187 -14192 0
c (0<=(aux993 - aux994 + SATLiteral(152)))
-14187 14192 0
-14186 14190 0
152 14192 0
152 -14187 14190 0
152 -14186 14189 0
c ((aux990 + aux992 - aux995)<=0)
14183 -14194 0
14184 -14195 0
14177 -14194 0
14177 14183 -14195 0
14177 14184 -14197 0
14178 -14195 0
14178 14183 -14197 0
14178 14184 -14199 0
c (0<=(aux990 + aux992 - aux995))
-14184 14199 0
-14183 14197 0
-14178 14199 0
-14178 -14184 14197 0
-14178 -14183 14195 0
-14177 14197 0
-14177 -14184 14195 0
-14177 -14183 14194 0
c ((SATLiteral(423) - aux996 + SATLiteral(693))<=0)
-693 -14201 0
-423 -14201 0
-423 -693 -14202 0
c (0<=(SATLiteral(423) - aux996 + SATLiteral(693)))
693 14202 0
423 14202 0
423 693 14201 0
c ((SATLiteral(1098) - aux997 + SATLiteral(18))<=0)
-18 -14204 0
-1098 -14204 0
-1098 -18 -14205 0
c (0<=(SATLiteral(1098) - aux997 + SATLiteral(18)))
18 14205 0
1098 14205 0
1098 18 14204 0
c (( - aux998 + SATLiteral(828) + SATLiteral(963))<=0)
-963 -14207 0
-828 -14207 0
-828 -963 -14208 0
c (0<=( - aux998 + SATLiteral(828) + SATLiteral(963)))
963 14208 0
828 14208 0
828 963 14207 0
c (( - aux999 + SATLiteral(558) + SATLiteral(288))<=0)
-288 -14210 0
-558 -14210 0
-558 -288 -14211 0
c (0<=( - aux999 + SATLiteral(558) + SATLiteral(288)))
288 14211 0
558 14211 0
558 288 14210 0
c ((aux999 + SATLiteral(153) - aux1000)<=0)
14210 -14213 0
14211 -14214 0
-153 -14213 0
-153 14210 -14214 0
-153 14211 -14216 0
c (0<=(aux999 + SATLiteral(153) - aux1000))
-14211 14216 0
-14210 14214 0
153 14216 0
153 -14211 14214 0
153 -14210 14213 0
c ((aux996 + aux998 - aux1001)<=0)
14207 -14218 0
14208 -14219 0
14201 -14218 0
14201 14207 -14219 0
14201 14208 -14221 0
14202 -14219 0
14202 14207 -14221 0
14202 14208 -14223 0
c (0<=(aux996 + aux998 - aux1001))
-14208 14223 0
-14207 14221 0
-14202 14223 0
-14202 -14208 14221 0
-14202 -14207 14219 0
-14201 14221 0
-14201 -14208 14219 0
-14201 -14207 14218 0
c ((SATLiteral(424) - aux1002 + SATLiteral(694))<=0)
-694 -14225 0
-424 -14225 0
-424 -694 -14226 0
c (0<=(SATLiteral(424) - aux1002 + SATLiteral(694)))
694 14226 0
424 14226 0
424 694 14225 0
c ((SATLiteral(1099) - aux1003 + SATLiteral(19))<=0)
-19 -14228 0
-1099 -14228 0
-1099 -19 -14229 0
c (0<=(SATLiteral(1099) - aux1003 + SATLiteral(19)))
19 14229 0
1099 14229 0
1099 19 14228 0
c ((SATLiteral(829) - aux1004 + SATLiteral(964))<=0)
-964 -14231 0
-829 -14231 0
-829 -964 -14232 0
c (0<=(SATLiteral(829) - aux1004 + SATLiteral(964)))
964 14232 0
829 14232 0
829 964 14231 0
c (( - aux1005 + SATLiteral(559) + SATLiteral(289))<=0)
-289 -14234 0
-559 -14234 0
-559 -289 -14235 0
c (0<=( - aux1005 + SATLiteral(559) + SATLiteral(289)))
289 14235 0
559 14235 0
559 289 14234 0
c ((SATLiteral(154) + aux1005 - aux1006)<=0)
14234 -14237 0
14235 -14238 0
-154 -14237 0
-154 14234 -14238 0
-154 14235 -14240 0
c (0<=(SATLiteral(154) + aux1005 - aux1006))
-14235 14240 0
-14234 14238 0
154 14240 0
154 -14235 14238 0
154 -14234 14237 0
c ((aux1002 + aux1004 - aux1007)<=0)
14231 -14242 0
14232 -14243 0
14225 -14242 0
14225 14231 -14243 0
14225 14232 -14245 0
14226 -14243 0
14226 14231 -14245 0
14226 14232 -14247 0
c (0<=(aux1002 + aux1004 - aux1007))
-14232 14247 0
-14231 14245 0
-14226 14247 0
-14226 -14232 14245 0
-14226 -14231 14243 0
-14225 14245 0
-14225 -14232 14243 0
-14225 -14231 14242 0
c ((SATLiteral(425) - aux1008 + SATLiteral(695))<=0)
-695 -14249 0
-425 -14249 0
-425 -695 -14250 0
c (0<=(SATLiteral(425) - aux1008 + SATLiteral(695)))
695 14250 0
425 14250 0
425 695 14249 0
c ((SATLiteral(1100) - aux1009 + SATLiteral(20))<=0)
-20 -14252 0
-1100 -14252 0
-1100 -20 -14253 0
c (0<=(SATLiteral(1100) - aux1009 + SATLiteral(20)))
20 14253 0
1100 14253 0
1100 20 14252 0
c ((SATLiteral(830) - aux1010 + SATLiteral(965))<=0)
-965 -14255 0
-830 -14255 0
-830 -965 -14256 0
c (0<=(SATLiteral(830) - aux1010 + SATLiteral(965)))
965 14256 0
830 14256 0
830 965 14255 0
c (( - aux1011 + SATLiteral(560) + SATLiteral(290))<=0)
-290 -14258 0
-560 -14258 0
-560 -290 -14259 0
c (0<=( - aux1011 + SATLiteral(560) + SATLiteral(290)))
290 14259 0
560 14259 0
560 290 14258 0
c ((SATLiteral(155) + aux1011 - aux1012)<=0)
14258 -14261 0
14259 -14262 0
-155 -14261 0
-155 14258 -14262 0
-155 14259 -14264 0
c (0<=(SATLiteral(155) + aux1011 - aux1012))
-14259 14264 0
-14258 14262 0
155 14264 0
155 -14259 14262 0
155 -14258 14261 0
c ((aux1008 + aux1010 - aux1013)<=0)
14255 -14266 0
14256 -14267 0
14249 -14266 0
14249 14255 -14267 0
14249 14256 -14269 0
14250 -14267 0
14250 14255 -14269 0
14250 14256 -14271 0
c (0<=(aux1008 + aux1010 - aux1013))
-14256 14271 0
-14255 14269 0
-14250 14271 0
-14250 -14256 14269 0
-14250 -14255 14267 0
-14249 14269 0
-14249 -14256 14267 0
-14249 -14255 14266 0
c ((SATLiteral(426) - aux1014 + SATLiteral(696))<=0)
-696 -14273 0
-426 -14273 0
-426 -696 -14274 0
c (0<=(SATLiteral(426) - aux1014 + SATLiteral(696)))
696 14274 0
426 14274 0
426 696 14273 0
c ((SATLiteral(1101) - aux1015 + SATLiteral(21))<=0)
-21 -14276 0
-1101 -14276 0
-1101 -21 -14277 0
c (0<=(SATLiteral(1101) - aux1015 + SATLiteral(21)))
21 14277 0
1101 14277 0
1101 21 14276 0
c ((SATLiteral(831) - aux1016 + SATLiteral(966))<=0)
-966 -14279 0
-831 -14279 0
-831 -966 -14280 0
c (0<=(SATLiteral(831) - aux1016 + SATLiteral(966)))
966 14280 0
831 14280 0
831 966 14279 0
c (( - aux1017 + SATLiteral(561) + SATLiteral(291))<=0)
-291 -14282 0
-561 -14282 0
-561 -291 -14283 0
c (0<=( - aux1017 + SATLiteral(561) + SATLiteral(291)))
291 14283 0
561 14283 0
561 291 14282 0
c ((SATLiteral(156) + aux1017 - aux1018)<=0)
14282 -14285 0
14283 -14286 0
-156 -14285 0
-156 14282 -14286 0
-156 14283 -14288 0
c (0<=(SATLiteral(156) + aux1017 - aux1018))
-14283 14288 0
-14282 14286 0
156 14288 0
156 -14283 14286 0
156 -14282 14285 0
c ((aux1014 + aux1016 - aux1019)<=0)
14279 -14290 0
14280 -14291 0
14273 -14290 0
14273 14279 -14291 0
14273 14280 -14293 0
14274 -14291 0
14274 14279 -14293 0
14274 14280 -14295 0
c (0<=(aux1014 + aux1016 - aux1019))
-14280 14295 0
-14279 14293 0
-14274 14295 0
-14274 -14280 14293 0
-14274 -14279 14291 0
-14273 14293 0
-14273 -14280 14291 0
-14273 -14279 14290 0
c ((SATLiteral(427) - aux1020 + SATLiteral(697))<=0)
-697 -14297 0
-427 -14297 0
-427 -697 -14298 0
c (0<=(SATLiteral(427) - aux1020 + SATLiteral(697)))
697 14298 0
427 14298 0
427 697 14297 0
c ((SATLiteral(1102) - aux1021 + SATLiteral(22))<=0)
-22 -14300 0
-1102 -14300 0
-1102 -22 -14301 0
c (0<=(SATLiteral(1102) - aux1021 + SATLiteral(22)))
22 14301 0
1102 14301 0
1102 22 14300 0
c ((SATLiteral(832) - aux1022 + SATLiteral(967))<=0)
-967 -14303 0
-832 -14303 0
-832 -967 -14304 0
c (0<=(SATLiteral(832) - aux1022 + SATLiteral(967)))
967 14304 0
832 14304 0
832 967 14303 0
c (( - aux1023 + SATLiteral(562) + SATLiteral(292))<=0)
-292 -14306 0
-562 -14306 0
-562 -292 -14307 0
c (0<=( - aux1023 + SATLiteral(562) + SATLiteral(292)))
292 14307 0
562 14307 0
562 292 14306 0
c ((SATLiteral(157) + aux1023 - aux1024)<=0)
14306 -14309 0
14307 -14310 0
-157 -14309 0
-157 14306 -14310 0
-157 14307 -14312 0
c (0<=(SATLiteral(157) + aux1023 - aux1024))
-14307 14312 0
-14306 14310 0
157 14312 0
157 -14307 14310 0
157 -14306 14309 0
c ((aux1020 + aux1022 - aux1025)<=0)
14303 -14314 0
14304 -14315 0
14297 -14314 0
14297 14303 -14315 0
14297 14304 -14317 0
14298 -14315 0
14298 14303 -14317 0
14298 14304 -14319 0
c (0<=(aux1020 + aux1022 - aux1025))
-14304 14319 0
-14303 14317 0
-14298 14319 0
-14298 -14304 14317 0
-14298 -14303 14315 0
-14297 14317 0
-14297 -14304 14315 0
-14297 -14303 14314 0
c ((SATLiteral(428) - aux1026 + SATLiteral(698))<=0)
-698 -14321 0
-428 -14321 0
-428 -698 -14322 0
c (0<=(SATLiteral(428) - aux1026 + SATLiteral(698)))
698 14322 0
428 14322 0
428 698 14321 0
c ((SATLiteral(1103) - aux1027 + SATLiteral(23))<=0)
-23 -14324 0
-1103 -14324 0
-1103 -23 -14325 0
c (0<=(SATLiteral(1103) - aux1027 + SATLiteral(23)))
23 14325 0
1103 14325 0
1103 23 14324 0
c ((SATLiteral(833) - aux1028 + SATLiteral(968))<=0)
-968 -14327 0
-833 -14327 0
-833 -968 -14328 0
c (0<=(SATLiteral(833) - aux1028 + SATLiteral(968)))
968 14328 0
833 14328 0
833 968 14327 0
c (( - aux1029 + SATLiteral(563) + SATLiteral(293))<=0)
-293 -14330 0
-563 -14330 0
-563 -293 -14331 0
c (0<=( - aux1029 + SATLiteral(563) + SATLiteral(293)))
293 14331 0
563 14331 0
563 293 14330 0
c ((SATLiteral(158) + aux1029 - aux1030)<=0)
14330 -14333 0
14331 -14334 0
-158 -14333 0
-158 14330 -14334 0
-158 14331 -14336 0
c (0<=(SATLiteral(158) + aux1029 - aux1030))
-14331 14336 0
-14330 14334 0
158 14336 0
158 -14331 14334 0
158 -14330 14333 0
c ((aux1026 + aux1028 - aux1031)<=0)
14327 -14338 0
14328 -14339 0
14321 -14338 0
14321 14327 -14339 0
14321 14328 -14341 0
14322 -14339 0
14322 14327 -14341 0
14322 14328 -14343 0
c (0<=(aux1026 + aux1028 - aux1031))
-14328 14343 0
-14327 14341 0
-14322 14343 0
-14322 -14328 14341 0
-14322 -14327 14339 0
-14321 14341 0
-14321 -14328 14339 0
-14321 -14327 14338 0
c ((SATLiteral(429) - aux1032 + SATLiteral(699))<=0)
-699 -14345 0
-429 -14345 0
-429 -699 -14346 0
c (0<=(SATLiteral(429) - aux1032 + SATLiteral(699)))
699 14346 0
429 14346 0
429 699 14345 0
c ((SATLiteral(1104) - aux1033 + SATLiteral(24))<=0)
-24 -14348 0
-1104 -14348 0
-1104 -24 -14349 0
c (0<=(SATLiteral(1104) - aux1033 + SATLiteral(24)))
24 14349 0
1104 14349 0
1104 24 14348 0
c ((SATLiteral(834) - aux1034 + SATLiteral(969))<=0)
-969 -14351 0
-834 -14351 0
-834 -969 -14352 0
c (0<=(SATLiteral(834) - aux1034 + SATLiteral(969)))
969 14352 0
834 14352 0
834 969 14351 0
c (( - aux1035 + SATLiteral(564) + SATLiteral(294))<=0)
-294 -14354 0
-564 -14354 0
-564 -294 -14355 0
c (0<=( - aux1035 + SATLiteral(564) + SATLiteral(294)))
294 14355 0
564 14355 0
564 294 14354 0
c ((SATLiteral(159) + aux1035 - aux1036)<=0)
14354 -14357 0
14355 -14358 0
-159 -14357 0
-159 14354 -14358 0
-159 14355 -14360 0
c (0<=(SATLiteral(159) + aux1035 - aux1036))
-14355 14360 0
-14354 14358 0
159 14360 0
159 -14355 14358 0
159 -14354 14357 0
c ((aux1032 + aux1034 - aux1037)<=0)
14351 -14362 0
14352 -14363 0
14345 -14362 0
14345 14351 -14363 0
14345 14352 -14365 0
14346 -14363 0
14346 14351 -14365 0
14346 14352 -14367 0
c (0<=(aux1032 + aux1034 - aux1037))
-14352 14367 0
-14351 14365 0
-14346 14367 0
-14346 -14352 14365 0
-14346 -14351 14363 0
-14345 14365 0
-14345 -14352 14363 0
-14345 -14351 14362 0
c ((SATLiteral(430) - aux1038 + SATLiteral(700))<=0)
-700 -14369 0
-430 -14369 0
-430 -700 -14370 0
c (0<=(SATLiteral(430) - aux1038 + SATLiteral(700)))
700 14370 0
430 14370 0
430 700 14369 0
c ((SATLiteral(1105) - aux1039 + SATLiteral(25))<=0)
-25 -14372 0
-1105 -14372 0
-1105 -25 -14373 0
c (0<=(SATLiteral(1105) - aux1039 + SATLiteral(25)))
25 14373 0
1105 14373 0
1105 25 14372 0
c ((SATLiteral(835) - aux1040 + SATLiteral(970))<=0)
-970 -14375 0
-835 -14375 0
-835 -970 -14376 0
c (0<=(SATLiteral(835) - aux1040 + SATLiteral(970)))
970 14376 0
835 14376 0
835 970 14375 0
c (( - aux1041 + SATLiteral(565) + SATLiteral(295))<=0)
-295 -14378 0
-565 -14378 0
-565 -295 -14379 0
c (0<=( - aux1041 + SATLiteral(565) + SATLiteral(295)))
295 14379 0
565 14379 0
565 295 14378 0
c ((SATLiteral(160) + aux1041 - aux1042)<=0)
14378 -14381 0
14379 -14382 0
-160 -14381 0
-160 14378 -14382 0
-160 14379 -14384 0
c (0<=(SATLiteral(160) + aux1041 - aux1042))
-14379 14384 0
-14378 14382 0
160 14384 0
160 -14379 14382 0
160 -14378 14381 0
c ((aux1038 + aux1040 - aux1043)<=0)
14375 -14386 0
14376 -14387 0
14369 -14386 0
14369 14375 -14387 0
14369 14376 -14389 0
14370 -14387 0
14370 14375 -14389 0
14370 14376 -14391 0
c (0<=(aux1038 + aux1040 - aux1043))
-14376 14391 0
-14375 14389 0
-14370 14391 0
-14370 -14376 14389 0
-14370 -14375 14387 0
-14369 14389 0
-14369 -14376 14387 0
-14369 -14375 14386 0
c ((SATLiteral(437) - aux1044 + SATLiteral(707))<=0)
-707 -14393 0
-437 -14393 0
-437 -707 -14394 0
c (0<=(SATLiteral(437) - aux1044 + SATLiteral(707)))
707 14394 0
437 14394 0
437 707 14393 0
c ((SATLiteral(1112) - aux1045 + SATLiteral(32))<=0)
-32 -14396 0
-1112 -14396 0
-1112 -32 -14397 0
c (0<=(SATLiteral(1112) - aux1045 + SATLiteral(32)))
32 14397 0
1112 14397 0
1112 32 14396 0
c ((SATLiteral(842) - aux1046 + SATLiteral(977))<=0)
-977 -14399 0
-842 -14399 0
-842 -977 -14400 0
c (0<=(SATLiteral(842) - aux1046 + SATLiteral(977)))
977 14400 0
842 14400 0
842 977 14399 0
c (( - aux1047 + SATLiteral(572) + SATLiteral(302))<=0)
-302 -14402 0
-572 -14402 0
-572 -302 -14403 0
c (0<=( - aux1047 + SATLiteral(572) + SATLiteral(302)))
302 14403 0
572 14403 0
572 302 14402 0
c ((SATLiteral(167) + aux1047 - aux1048)<=0)
14402 -14405 0
14403 -14406 0
-167 -14405 0
-167 14402 -14406 0
-167 14403 -14408 0
c (0<=(SATLiteral(167) + aux1047 - aux1048))
-14403 14408 0
-14402 14406 0
167 14408 0
167 -14403 14406 0
167 -14402 14405 0
c ((aux1044 + aux1046 - aux1049)<=0)
14399 -14410 0
14400 -14411 0
14393 -14410 0
14393 14399 -14411 0
14393 14400 -14413 0
14394 -14411 0
14394 14399 -14413 0
14394 14400 -14415 0
c (0<=(aux1044 + aux1046 - aux1049))
-14400 14415 0
-14399 14413 0
-14394 14415 0
-14394 -14400 14413 0
-14394 -14399 14411 0
-14393 14413 0
-14393 -14400 14411 0
-14393 -14399 14410 0
c ((SATLiteral(438) - aux1050 + SATLiteral(708))<=0)
-708 -14417 0
-438 -14417 0
-438 -708 -14418 0
c (0<=(SATLiteral(438) - aux1050 + SATLiteral(708)))
708 14418 0
438 14418 0
438 708 14417 0
c ((SATLiteral(1113) - aux1051 + SATLiteral(33))<=0)
-33 -14420 0
-1113 -14420 0
-1113 -33 -14421 0
c (0<=(SATLiteral(1113) - aux1051 + SATLiteral(33)))
33 14421 0
1113 14421 0
1113 33 14420 0
c ((SATLiteral(843) - aux1052 + SATLiteral(978))<=0)
-978 -14423 0
-843 -14423 0
-843 -978 -14424 0
c (0<=(SATLiteral(843) - aux1052 + SATLiteral(978)))
978 14424 0
843 14424 0
843 978 14423 0
c (( - aux1053 + SATLiteral(573) + SATLiteral(303))<=0)
-303 -14426 0
-573 -14426 0
-573 -303 -14427 0
c (0<=( - aux1053 + SATLiteral(573) + SATLiteral(303)))
303 14427 0
573 14427 0
573 303 14426 0
c ((SATLiteral(168) + aux1053 - aux1054)<=0)
14426 -14429 0
14427 -14430 0
-168 -14429 0
-168 14426 -14430 0
-168 14427 -14432 0
c (0<=(SATLiteral(168) + aux1053 - aux1054))
-14427 14432 0
-14426 14430 0
168 14432 0
168 -14427 14430 0
168 -14426 14429 0
c ((aux1050 + aux1052 - aux1055)<=0)
14423 -14434 0
14424 -14435 0
14417 -14434 0
14417 14423 -14435 0
14417 14424 -14437 0
14418 -14435 0
14418 14423 -14437 0
14418 14424 -14439 0
c (0<=(aux1050 + aux1052 - aux1055))
-14424 14439 0
-14423 14437 0
-14418 14439 0
-14418 -14424 14437 0
-14418 -14423 14435 0
-14417 14437 0
-14417 -14424 14435 0
-14417 -14423 14434 0
c ((SATLiteral(439) - aux1056 + SATLiteral(709))<=0)
-709 -14441 0
-439 -14441 0
-439 -709 -14442 0
c (0<=(SATLiteral(439) - aux1056 + SATLiteral(709)))
709 14442 0
439 14442 0
439 709 14441 0
c ((SATLiteral(1114) - aux1057 + SATLiteral(34))<=0)
-34 -14444 0
-1114 -14444 0
-1114 -34 -14445 0
c (0<=(SATLiteral(1114) - aux1057 + SATLiteral(34)))
34 14445 0
1114 14445 0
1114 34 14444 0
c ((SATLiteral(844) - aux1058 + SATLiteral(979))<=0)
-979 -14447 0
-844 -14447 0
-844 -979 -14448 0
c (0<=(SATLiteral(844) - aux1058 + SATLiteral(979)))
979 14448 0
844 14448 0
844 979 14447 0
c (( - aux1059 + SATLiteral(574) + SATLiteral(304))<=0)
-304 -14450 0
-574 -14450 0
-574 -304 -14451 0
c (0<=( - aux1059 + SATLiteral(574) + SATLiteral(304)))
304 14451 0
574 14451 0
574 304 14450 0
c ((SATLiteral(169) + aux1059 - aux1060)<=0)
14450 -14453 0
14451 -14454 0
-169 -14453 0
-169 14450 -14454 0
-169 14451 -14456 0
c (0<=(SATLiteral(169) + aux1059 - aux1060))
-14451 14456 0
-14450 14454 0
169 14456 0
169 -14451 14454 0
169 -14450 14453 0
c ((aux1056 + aux1058 - aux1061)<=0)
14447 -14458 0
14448 -14459 0
14441 -14458 0
14441 14447 -14459 0
14441 14448 -14461 0
14442 -14459 0
14442 14447 -14461 0
14442 14448 -14463 0
c (0<=(aux1056 + aux1058 - aux1061))
-14448 14463 0
-14447 14461 0
-14442 14463 0
-14442 -14448 14461 0
-14442 -14447 14459 0
-14441 14461 0
-14441 -14448 14459 0
-14441 -14447 14458 0
c ((SATLiteral(440) - aux1062 + SATLiteral(710))<=0)
-710 -14465 0
-440 -14465 0
-440 -710 -14466 0
c (0<=(SATLiteral(440) - aux1062 + SATLiteral(710)))
710 14466 0
440 14466 0
440 710 14465 0
c ((SATLiteral(1115) - aux1063 + SATLiteral(35))<=0)
-35 -14468 0
-1115 -14468 0
-1115 -35 -14469 0
c (0<=(SATLiteral(1115) - aux1063 + SATLiteral(35)))
35 14469 0
1115 14469 0
1115 35 14468 0
c ((SATLiteral(845) - aux1064 + SATLiteral(980))<=0)
-980 -14471 0
-845 -14471 0
-845 -980 -14472 0
c (0<=(SATLiteral(845) - aux1064 + SATLiteral(980)))
980 14472 0
845 14472 0
845 980 14471 0
c (( - aux1065 + SATLiteral(575) + SATLiteral(305))<=0)
-305 -14474 0
-575 -14474 0
-575 -305 -14475 0
c (0<=( - aux1065 + SATLiteral(575) + SATLiteral(305)))
305 14475 0
575 14475 0
575 305 14474 0
c ((SATLiteral(170) + aux1065 - aux1066)<=0)
14474 -14477 0
14475 -14478 0
-170 -14477 0
-170 14474 -14478 0
-170 14475 -14480 0
c (0<=(SATLiteral(170) + aux1065 - aux1066))
-14475 14480 0
-14474 14478 0
170 14480 0
170 -14475 14478 0
170 -14474 14477 0
c ((aux1062 + aux1064 - aux1067)<=0)
14471 -14482 0
14472 -14483 0
14465 -14482 0
14465 14471 -14483 0
14465 14472 -14485 0
14466 -14483 0
14466 14471 -14485 0
14466 14472 -14487 0
c (0<=(aux1062 + aux1064 - aux1067))
-14472 14487 0
-14471 14485 0
-14466 14487 0
-14466 -14472 14485 0
-14466 -14471 14483 0
-14465 14485 0
-14465 -14472 14483 0
-14465 -14471 14482 0
c ((SATLiteral(441) - aux1068 + SATLiteral(711))<=0)
-711 -14489 0
-441 -14489 0
-441 -711 -14490 0
c (0<=(SATLiteral(441) - aux1068 + SATLiteral(711)))
711 14490 0
441 14490 0
441 711 14489 0
c ((SATLiteral(1116) - aux1069 + SATLiteral(36))<=0)
-36 -14492 0
-1116 -14492 0
-1116 -36 -14493 0
c (0<=(SATLiteral(1116) - aux1069 + SATLiteral(36)))
36 14493 0
1116 14493 0
1116 36 14492 0
c ((SATLiteral(846) - aux1070 + SATLiteral(981))<=0)
-981 -14495 0
-846 -14495 0
-846 -981 -14496 0
c (0<=(SATLiteral(846) - aux1070 + SATLiteral(981)))
981 14496 0
846 14496 0
846 981 14495 0
c (( - aux1071 + SATLiteral(576) + SATLiteral(306))<=0)
-306 -14498 0
-576 -14498 0
-576 -306 -14499 0
c (0<=( - aux1071 + SATLiteral(576) + SATLiteral(306)))
306 14499 0
576 14499 0
576 306 14498 0
c ((SATLiteral(171) + aux1071 - aux1072)<=0)
14498 -14501 0
14499 -14502 0
-171 -14501 0
-171 14498 -14502 0
-171 14499 -14504 0
c (0<=(SATLiteral(171) + aux1071 - aux1072))
-14499 14504 0
-14498 14502 0
171 14504 0
171 -14499 14502 0
171 -14498 14501 0
c ((aux1068 + aux1070 - aux1073)<=0)
14495 -14506 0
14496 -14507 0
14489 -14506 0
14489 14495 -14507 0
14489 14496 -14509 0
14490 -14507 0
14490 14495 -14509 0
14490 14496 -14511 0
c (0<=(aux1068 + aux1070 - aux1073))
-14496 14511 0
-14495 14509 0
-14490 14511 0
-14490 -14496 14509 0
-14490 -14495 14507 0
-14489 14509 0
-14489 -14496 14507 0
-14489 -14495 14506 0
c ((SATLiteral(442) - aux1074 + SATLiteral(712))<=0)
-712 -14513 0
-442 -14513 0
-442 -712 -14514 0
c (0<=(SATLiteral(442) - aux1074 + SATLiteral(712)))
712 14514 0
442 14514 0
442 712 14513 0
c ((SATLiteral(1117) - aux1075 + SATLiteral(37))<=0)
-37 -14516 0
-1117 -14516 0
-1117 -37 -14517 0
c (0<=(SATLiteral(1117) - aux1075 + SATLiteral(37)))
37 14517 0
1117 14517 0
1117 37 14516 0
c ((SATLiteral(847) - aux1076 + SATLiteral(982))<=0)
-982 -14519 0
-847 -14519 0
-847 -982 -14520 0
c (0<=(SATLiteral(847) - aux1076 + SATLiteral(982)))
982 14520 0
847 14520 0
847 982 14519 0
c (( - aux1077 + SATLiteral(577) + SATLiteral(307))<=0)
-307 -14522 0
-577 -14522 0
-577 -307 -14523 0
c (0<=( - aux1077 + SATLiteral(577) + SATLiteral(307)))
307 14523 0
577 14523 0
577 307 14522 0
c ((SATLiteral(172) + aux1077 - aux1078)<=0)
14522 -14525 0
14523 -14526 0
-172 -14525 0
-172 14522 -14526 0
-172 14523 -14528 0
c (0<=(SATLiteral(172) + aux1077 - aux1078))
-14523 14528 0
-14522 14526 0
172 14528 0
172 -14523 14526 0
172 -14522 14525 0
c ((aux1074 + aux1076 - aux1079)<=0)
14519 -14530 0
14520 -14531 0
14513 -14530 0
14513 14519 -14531 0
14513 14520 -14533 0
14514 -14531 0
14514 14519 -14533 0
14514 14520 -14535 0
c (0<=(aux1074 + aux1076 - aux1079))
-14520 14535 0
-14519 14533 0
-14514 14535 0
-14514 -14520 14533 0
-14514 -14519 14531 0
-14513 14533 0
-14513 -14520 14531 0
-14513 -14519 14530 0
c ((SATLiteral(443) - aux1080 + SATLiteral(713))<=0)
-713 -14537 0
-443 -14537 0
-443 -713 -14538 0
c (0<=(SATLiteral(443) - aux1080 + SATLiteral(713)))
713 14538 0
443 14538 0
443 713 14537 0
c ((SATLiteral(1118) - aux1081 + SATLiteral(38))<=0)
-38 -14540 0
-1118 -14540 0
-1118 -38 -14541 0
c (0<=(SATLiteral(1118) - aux1081 + SATLiteral(38)))
38 14541 0
1118 14541 0
1118 38 14540 0
c ((SATLiteral(848) - aux1082 + SATLiteral(983))<=0)
-983 -14543 0
-848 -14543 0
-848 -983 -14544 0
c (0<=(SATLiteral(848) - aux1082 + SATLiteral(983)))
983 14544 0
848 14544 0
848 983 14543 0
c (( - aux1083 + SATLiteral(578) + SATLiteral(308))<=0)
-308 -14546 0
-578 -14546 0
-578 -308 -14547 0
c (0<=( - aux1083 + SATLiteral(578) + SATLiteral(308)))
308 14547 0
578 14547 0
578 308 14546 0
c ((SATLiteral(173) + aux1083 - aux1084)<=0)
14546 -14549 0
14547 -14550 0
-173 -14549 0
-173 14546 -14550 0
-173 14547 -14552 0
c (0<=(SATLiteral(173) + aux1083 - aux1084))
-14547 14552 0
-14546 14550 0
173 14552 0
173 -14547 14550 0
173 -14546 14549 0
c ((aux1080 + aux1082 - aux1085)<=0)
14543 -14554 0
14544 -14555 0
14537 -14554 0
14537 14543 -14555 0
14537 14544 -14557 0
14538 -14555 0
14538 14543 -14557 0
14538 14544 -14559 0
c (0<=(aux1080 + aux1082 - aux1085))
-14544 14559 0
-14543 14557 0
-14538 14559 0
-14538 -14544 14557 0
-14538 -14543 14555 0
-14537 14557 0
-14537 -14544 14555 0
-14537 -14543 14554 0
c ((SATLiteral(444) - aux1086 + SATLiteral(714))<=0)
-714 -14561 0
-444 -14561 0
-444 -714 -14562 0
c (0<=(SATLiteral(444) - aux1086 + SATLiteral(714)))
714 14562 0
444 14562 0
444 714 14561 0
c ((SATLiteral(1119) - aux1087 + SATLiteral(39))<=0)
-39 -14564 0
-1119 -14564 0
-1119 -39 -14565 0
c (0<=(SATLiteral(1119) - aux1087 + SATLiteral(39)))
39 14565 0
1119 14565 0
1119 39 14564 0
c ((SATLiteral(849) - aux1088 + SATLiteral(984))<=0)
-984 -14567 0
-849 -14567 0
-849 -984 -14568 0
c (0<=(SATLiteral(849) - aux1088 + SATLiteral(984)))
984 14568 0
849 14568 0
849 984 14567 0
c (( - aux1089 + SATLiteral(579) + SATLiteral(309))<=0)
-309 -14570 0
-579 -14570 0
-579 -309 -14571 0
c (0<=( - aux1089 + SATLiteral(579) + SATLiteral(309)))
309 14571 0
579 14571 0
579 309 14570 0
c ((SATLiteral(174) + aux1089 - aux1090)<=0)
14570 -14573 0
14571 -14574 0
-174 -14573 0
-174 14570 -14574 0
-174 14571 -14576 0
c (0<=(SATLiteral(174) + aux1089 - aux1090))
-14571 14576 0
-14570 14574 0
174 14576 0
174 -14571 14574 0
174 -14570 14573 0
c ((aux1086 + aux1088 - aux1091)<=0)
14567 -14578 0
14568 -14579 0
14561 -14578 0
14561 14567 -14579 0
14561 14568 -14581 0
14562 -14579 0
14562 14567 -14581 0
14562 14568 -14583 0
c (0<=(aux1086 + aux1088 - aux1091))
-14568 14583 0
-14567 14581 0
-14562 14583 0
-14562 -14568 14581 0
-14562 -14567 14579 0
-14561 14581 0
-14561 -14568 14579 0
-14561 -14567 14578 0
c ((SATLiteral(445) - aux1092 + SATLiteral(715))<=0)
-715 -14585 0
-445 -14585 0
-445 -715 -14586 0
c (0<=(SATLiteral(445) - aux1092 + SATLiteral(715)))
715 14586 0
445 14586 0
445 715 14585 0
c ((SATLiteral(1120) - aux1093 + SATLiteral(40))<=0)
-40 -14588 0
-1120 -14588 0
-1120 -40 -14589 0
c (0<=(SATLiteral(1120) - aux1093 + SATLiteral(40)))
40 14589 0
1120 14589 0
1120 40 14588 0
c ((SATLiteral(850) - aux1094 + SATLiteral(985))<=0)
-985 -14591 0
-850 -14591 0
-850 -985 -14592 0
c (0<=(SATLiteral(850) - aux1094 + SATLiteral(985)))
985 14592 0
850 14592 0
850 985 14591 0
c (( - aux1095 + SATLiteral(580) + SATLiteral(310))<=0)
-310 -14594 0
-580 -14594 0
-580 -310 -14595 0
c (0<=( - aux1095 + SATLiteral(580) + SATLiteral(310)))
310 14595 0
580 14595 0
580 310 14594 0
c ((SATLiteral(175) + aux1095 - aux1096)<=0)
14594 -14597 0
14595 -14598 0
-175 -14597 0
-175 14594 -14598 0
-175 14595 -14600 0
c (0<=(SATLiteral(175) + aux1095 - aux1096))
-14595 14600 0
-14594 14598 0
175 14600 0
175 -14595 14598 0
175 -14594 14597 0
c ((aux1092 + aux1094 - aux1097)<=0)
14591 -14602 0
14592 -14603 0
14585 -14602 0
14585 14591 -14603 0
14585 14592 -14605 0
14586 -14603 0
14586 14591 -14605 0
14586 14592 -14607 0
c (0<=(aux1092 + aux1094 - aux1097))
-14592 14607 0
-14591 14605 0
-14586 14607 0
-14586 -14592 14605 0
-14586 -14591 14603 0
-14585 14605 0
-14585 -14592 14603 0
-14585 -14591 14602 0
c ((SATLiteral(452) - aux1098 + SATLiteral(722))<=0)
-722 -14609 0
-452 -14609 0
-452 -722 -14610 0
c (0<=(SATLiteral(452) - aux1098 + SATLiteral(722)))
722 14610 0
452 14610 0
452 722 14609 0
c ((SATLiteral(1127) - aux1099 + SATLiteral(47))<=0)
-47 -14612 0
-1127 -14612 0
-1127 -47 -14613 0
c (0<=(SATLiteral(1127) - aux1099 + SATLiteral(47)))
47 14613 0
1127 14613 0
1127 47 14612 0
c ((SATLiteral(857) - aux1100 + SATLiteral(992))<=0)
-992 -14615 0
-857 -14615 0
-857 -992 -14616 0
c (0<=(SATLiteral(857) - aux1100 + SATLiteral(992)))
992 14616 0
857 14616 0
857 992 14615 0
c (( - aux1101 + SATLiteral(587) + SATLiteral(317))<=0)
-317 -14618 0
-587 -14618 0
-587 -317 -14619 0
c (0<=( - aux1101 + SATLiteral(587) + SATLiteral(317)))
317 14619 0
587 14619 0
587 317 14618 0
c ((SATLiteral(182) + aux1101 - aux1102)<=0)
14618 -14621 0
14619 -14622 0
-182 -14621 0
-182 14618 -14622 0
-182 14619 -14624 0
c (0<=(SATLiteral(182) + aux1101 - aux1102))
-14619 14624 0
-14618 14622 0
182 14624 0
182 -14619 14622 0
182 -14618 14621 0
c ((aux1098 + aux1100 - aux1103)<=0)
14615 -14626 0
14616 -14627 0
14609 -14626 0
14609 14615 -14627 0
14609 14616 -14629 0
14610 -14627 0
14610 14615 -14629 0
14610 14616 -14631 0
c (0<=(aux1098 + aux1100 - aux1103))
-14616 14631 0
-14615 14629 0
-14610 14631 0
-14610 -14616 14629 0
-14610 -14615 14627 0
-14609 14629 0
-14609 -14616 14627 0
-14609 -14615 14626 0
c ((SATLiteral(453) - aux1104 + SATLiteral(723))<=0)
-723 -14633 0
-453 -14633 0
-453 -723 -14634 0
c (0<=(SATLiteral(453) - aux1104 + SATLiteral(723)))
723 14634 0
453 14634 0
453 723 14633 0
c ((SATLiteral(1128) - aux1105 + SATLiteral(48))<=0)
-48 -14636 0
-1128 -14636 0
-1128 -48 -14637 0
c (0<=(SATLiteral(1128) - aux1105 + SATLiteral(48)))
48 14637 0
1128 14637 0
1128 48 14636 0
c ((SATLiteral(858) - aux1106 + SATLiteral(993))<=0)
-993 -14639 0
-858 -14639 0
-858 -993 -14640 0
c (0<=(SATLiteral(858) - aux1106 + SATLiteral(993)))
993 14640 0
858 14640 0
858 993 14639 0
c (( - aux1107 + SATLiteral(588) + SATLiteral(318))<=0)
-318 -14642 0
-588 -14642 0
-588 -318 -14643 0
c (0<=( - aux1107 + SATLiteral(588) + SATLiteral(318)))
318 14643 0
588 14643 0
588 318 14642 0
c ((SATLiteral(183) + aux1107 - aux1108)<=0)
14642 -14645 0
14643 -14646 0
-183 -14645 0
-183 14642 -14646 0
-183 14643 -14648 0
c (0<=(SATLiteral(183) + aux1107 - aux1108))
-14643 14648 0
-14642 14646 0
183 14648 0
183 -14643 14646 0
183 -14642 14645 0
c ((aux1104 + aux1106 - aux1109)<=0)
14639 -14650 0
14640 -14651 0
14633 -14650 0
14633 14639 -14651 0
14633 14640 -14653 0
14634 -14651 0
14634 14639 -14653 0
14634 14640 -14655 0
c (0<=(aux1104 + aux1106 - aux1109))
-14640 14655 0
-14639 14653 0
-14634 14655 0
-14634 -14640 14653 0
-14634 -14639 14651 0
-14633 14653 0
-14633 -14640 14651 0
-14633 -14639 14650 0
c ((SATLiteral(454) - aux1110 + SATLiteral(724))<=0)
-724 -14657 0
-454 -14657 0
-454 -724 -14658 0
c (0<=(SATLiteral(454) - aux1110 + SATLiteral(724)))
724 14658 0
454 14658 0
454 724 14657 0
c ((SATLiteral(1129) - aux1111 + SATLiteral(49))<=0)
-49 -14660 0
-1129 -14660 0
-1129 -49 -14661 0
c (0<=(SATLiteral(1129) - aux1111 + SATLiteral(49)))
49 14661 0
1129 14661 0
1129 49 14660 0
c ((SATLiteral(859) - aux1112 + SATLiteral(994))<=0)
-994 -14663 0
-859 -14663 0
-859 -994 -14664 0
c (0<=(SATLiteral(859) - aux1112 + SATLiteral(994)))
994 14664 0
859 14664 0
859 994 14663 0
c (( - aux1113 + SATLiteral(589) + SATLiteral(319))<=0)
-319 -14666 0
-589 -14666 0
-589 -319 -14667 0
c (0<=( - aux1113 + SATLiteral(589) + SATLiteral(319)))
319 14667 0
589 14667 0
589 319 14666 0
c ((SATLiteral(184) + aux1113 - aux1114)<=0)
14666 -14669 0
14667 -14670 0
-184 -14669 0
-184 14666 -14670 0
-184 14667 -14672 0
c (0<=(SATLiteral(184) + aux1113 - aux1114))
-14667 14672 0
-14666 14670 0
184 14672 0
184 -14667 14670 0
184 -14666 14669 0
c ((aux1110 + aux1112 - aux1115)<=0)
14663 -14674 0
14664 -14675 0
14657 -14674 0
14657 14663 -14675 0
14657 14664 -14677 0
14658 -14675 0
14658 14663 -14677 0
14658 14664 -14679 0
c (0<=(aux1110 + aux1112 - aux1115))
-14664 14679 0
-14663 14677 0
-14658 14679 0
-14658 -14664 14677 0
-14658 -14663 14675 0
-14657 14677 0
-14657 -14664 14675 0
-14657 -14663 14674 0
c ((SATLiteral(455) - aux1116 + SATLiteral(725))<=0)
-725 -14681 0
-455 -14681 0
-455 -725 -14682 0
c (0<=(SATLiteral(455) - aux1116 + SATLiteral(725)))
725 14682 0
455 14682 0
455 725 14681 0
c ((SATLiteral(1130) - aux1117 + SATLiteral(50))<=0)
-50 -14684 0
-1130 -14684 0
-1130 -50 -14685 0
c (0<=(SATLiteral(1130) - aux1117 + SATLiteral(50)))
50 14685 0
1130 14685 0
1130 50 14684 0
c ((SATLiteral(860) - aux1118 + SATLiteral(995))<=0)
-995 -14687 0
-860 -14687 0
-860 -995 -14688 0
c (0<=(SATLiteral(860) - aux1118 + SATLiteral(995)))
995 14688 0
860 14688 0
860 995 14687 0
c (( - aux1119 + SATLiteral(590) + SATLiteral(320))<=0)
-320 -14690 0
-590 -14690 0
-590 -320 -14691 0
c (0<=( - aux1119 + SATLiteral(590) + SATLiteral(320)))
320 14691 0
590 14691 0
590 320 14690 0
c ((SATLiteral(185) + aux1119 - aux1120)<=0)
14690 -14693 0
14691 -14694 0
-185 -14693 0
-185 14690 -14694 0
-185 14691 -14696 0
c (0<=(SATLiteral(185) + aux1119 - aux1120))
-14691 14696 0
-14690 14694 0
185 14696 0
185 -14691 14694 0
185 -14690 14693 0
c ((aux1116 + aux1118 - aux1121)<=0)
14687 -14698 0
14688 -14699 0
14681 -14698 0
14681 14687 -14699 0
14681 14688 -14701 0
14682 -14699 0
14682 14687 -14701 0
14682 14688 -14703 0
c (0<=(aux1116 + aux1118 - aux1121))
-14688 14703 0
-14687 14701 0
-14682 14703 0
-14682 -14688 14701 0
-14682 -14687 14699 0
-14681 14701 0
-14681 -14688 14699 0
-14681 -14687 14698 0
c ((SATLiteral(456) - aux1122 + SATLiteral(726))<=0)
-726 -14705 0
-456 -14705 0
-456 -726 -14706 0
c (0<=(SATLiteral(456) - aux1122 + SATLiteral(726)))
726 14706 0
456 14706 0
456 726 14705 0
c ((SATLiteral(1131) - aux1123 + SATLiteral(51))<=0)
-51 -14708 0
-1131 -14708 0
-1131 -51 -14709 0
c (0<=(SATLiteral(1131) - aux1123 + SATLiteral(51)))
51 14709 0
1131 14709 0
1131 51 14708 0
c ((SATLiteral(861) - aux1124 + SATLiteral(996))<=0)
-996 -14711 0
-861 -14711 0
-861 -996 -14712 0
c (0<=(SATLiteral(861) - aux1124 + SATLiteral(996)))
996 14712 0
861 14712 0
861 996 14711 0
c (( - aux1125 + SATLiteral(591) + SATLiteral(321))<=0)
-321 -14714 0
-591 -14714 0
-591 -321 -14715 0
c (0<=( - aux1125 + SATLiteral(591) + SATLiteral(321)))
321 14715 0
591 14715 0
591 321 14714 0
c ((SATLiteral(186) + aux1125 - aux1126)<=0)
14714 -14717 0
14715 -14718 0
-186 -14717 0
-186 14714 -14718 0
-186 14715 -14720 0
c (0<=(SATLiteral(186) + aux1125 - aux1126))
-14715 14720 0
-14714 14718 0
186 14720 0
186 -14715 14718 0
186 -14714 14717 0
c ((aux1122 + aux1124 - aux1127)<=0)
14711 -14722 0
14712 -14723 0
14705 -14722 0
14705 14711 -14723 0
14705 14712 -14725 0
14706 -14723 0
14706 14711 -14725 0
14706 14712 -14727 0
c (0<=(aux1122 + aux1124 - aux1127))
-14712 14727 0
-14711 14725 0
-14706 14727 0
-14706 -14712 14725 0
-14706 -14711 14723 0
-14705 14725 0
-14705 -14712 14723 0
-14705 -14711 14722 0
c ((SATLiteral(457) - aux1128 + SATLiteral(727))<=0)
-727 -14729 0
-457 -14729 0
-457 -727 -14730 0
c (0<=(SATLiteral(457) - aux1128 + SATLiteral(727)))
727 14730 0
457 14730 0
457 727 14729 0
c ((SATLiteral(1132) - aux1129 + SATLiteral(52))<=0)
-52 -14732 0
-1132 -14732 0
-1132 -52 -14733 0
c (0<=(SATLiteral(1132) - aux1129 + SATLiteral(52)))
52 14733 0
1132 14733 0
1132 52 14732 0
c ((SATLiteral(862) - aux1130 + SATLiteral(997))<=0)
-997 -14735 0
-862 -14735 0
-862 -997 -14736 0
c (0<=(SATLiteral(862) - aux1130 + SATLiteral(997)))
997 14736 0
862 14736 0
862 997 14735 0
c (( - aux1131 + SATLiteral(592) + SATLiteral(322))<=0)
-322 -14738 0
-592 -14738 0
-592 -322 -14739 0
c (0<=( - aux1131 + SATLiteral(592) + SATLiteral(322)))
322 14739 0
592 14739 0
592 322 14738 0
c ((SATLiteral(187) + aux1131 - aux1132)<=0)
14738 -14741 0
14739 -14742 0
-187 -14741 0
-187 14738 -14742 0
-187 14739 -14744 0
c (0<=(SATLiteral(187) + aux1131 - aux1132))
-14739 14744 0
-14738 14742 0
187 14744 0
187 -14739 14742 0
187 -14738 14741 0
c ((aux1128 + aux1130 - aux1133)<=0)
14735 -14746 0
14736 -14747 0
14729 -14746 0
14729 14735 -14747 0
14729 14736 -14749 0
14730 -14747 0
14730 14735 -14749 0
14730 14736 -14751 0
c (0<=(aux1128 + aux1130 - aux1133))
-14736 14751 0
-14735 14749 0
-14730 14751 0
-14730 -14736 14749 0
-14730 -14735 14747 0
-14729 14749 0
-14729 -14736 14747 0
-14729 -14735 14746 0
c ((SATLiteral(458) - aux1134 + SATLiteral(728))<=0)
-728 -14753 0
-458 -14753 0
-458 -728 -14754 0
c (0<=(SATLiteral(458) - aux1134 + SATLiteral(728)))
728 14754 0
458 14754 0
458 728 14753 0
c ((SATLiteral(1133) - aux1135 + SATLiteral(53))<=0)
-53 -14756 0
-1133 -14756 0
-1133 -53 -14757 0
c (0<=(SATLiteral(1133) - aux1135 + SATLiteral(53)))
53 14757 0
1133 14757 0
1133 53 14756 0
c ((SATLiteral(863) - aux1136 + SATLiteral(998))<=0)
-998 -14759 0
-863 -14759 0
-863 -998 -14760 0
c (0<=(SATLiteral(863) - aux1136 + SATLiteral(998)))
998 14760 0
863 14760 0
863 998 14759 0
c (( - aux1137 + SATLiteral(593) + SATLiteral(323))<=0)
-323 -14762 0
-593 -14762 0
-593 -323 -14763 0
c (0<=( - aux1137 + SATLiteral(593) + SATLiteral(323)))
323 14763 0
593 14763 0
593 323 14762 0
c ((SATLiteral(188) + aux1137 - aux1138)<=0)
14762 -14765 0
14763 -14766 0
-188 -14765 0
-188 14762 -14766 0
-188 14763 -14768 0
c (0<=(SATLiteral(188) + aux1137 - aux1138))
-14763 14768 0
-14762 14766 0
188 14768 0
188 -14763 14766 0
188 -14762 14765 0
c ((aux1134 + aux1136 - aux1139)<=0)
14759 -14770 0
14760 -14771 0
14753 -14770 0
14753 14759 -14771 0
14753 14760 -14773 0
14754 -14771 0
14754 14759 -14773 0
14754 14760 -14775 0
c (0<=(aux1134 + aux1136 - aux1139))
-14760 14775 0
-14759 14773 0
-14754 14775 0
-14754 -14760 14773 0
-14754 -14759 14771 0
-14753 14773 0
-14753 -14760 14771 0
-14753 -14759 14770 0
c ((SATLiteral(459) - aux1140 + SATLiteral(729))<=0)
-729 -14777 0
-459 -14777 0
-459 -729 -14778 0
c (0<=(SATLiteral(459) - aux1140 + SATLiteral(729)))
729 14778 0
459 14778 0
459 729 14777 0
c ((SATLiteral(1134) - aux1141 + SATLiteral(54))<=0)
-54 -14780 0
-1134 -14780 0
-1134 -54 -14781 0
c (0<=(SATLiteral(1134) - aux1141 + SATLiteral(54)))
54 14781 0
1134 14781 0
1134 54 14780 0
c ((SATLiteral(864) - aux1142 + SATLiteral(999))<=0)
-999 -14783 0
-864 -14783 0
-864 -999 -14784 0
c (0<=(SATLiteral(864) - aux1142 + SATLiteral(999)))
999 14784 0
864 14784 0
864 999 14783 0
c (( - aux1143 + SATLiteral(594) + SATLiteral(324))<=0)
-324 -14786 0
-594 -14786 0
-594 -324 -14787 0
c (0<=( - aux1143 + SATLiteral(594) + SATLiteral(324)))
324 14787 0
594 14787 0
594 324 14786 0
c ((SATLiteral(189) + aux1143 - aux1144)<=0)
14786 -14789 0
14787 -14790 0
-189 -14789 0
-189 14786 -14790 0
-189 14787 -14792 0
c (0<=(SATLiteral(189) + aux1143 - aux1144))
-14787 14792 0
-14786 14790 0
189 14792 0
189 -14787 14790 0
189 -14786 14789 0
c ((aux1140 + aux1142 - aux1145)<=0)
14783 -14794 0
14784 -14795 0
14777 -14794 0
14777 14783 -14795 0
14777 14784 -14797 0
14778 -14795 0
14778 14783 -14797 0
14778 14784 -14799 0
c (0<=(aux1140 + aux1142 - aux1145))
-14784 14799 0
-14783 14797 0
-14778 14799 0
-14778 -14784 14797 0
-14778 -14783 14795 0
-14777 14797 0
-14777 -14784 14795 0
-14777 -14783 14794 0
c ((SATLiteral(460) - aux1146 + SATLiteral(730))<=0)
-730 -14801 0
-460 -14801 0
-460 -730 -14802 0
c (0<=(SATLiteral(460) - aux1146 + SATLiteral(730)))
730 14802 0
460 14802 0
460 730 14801 0
c ((SATLiteral(1135) - aux1147 + SATLiteral(55))<=0)
-55 -14804 0
-1135 -14804 0
-1135 -55 -14805 0
c (0<=(SATLiteral(1135) - aux1147 + SATLiteral(55)))
55 14805 0
1135 14805 0
1135 55 14804 0
c ((SATLiteral(865) - aux1148 + SATLiteral(1000))<=0)
-1000 -14807 0
-865 -14807 0
-865 -1000 -14808 0
c (0<=(SATLiteral(865) - aux1148 + SATLiteral(1000)))
1000 14808 0
865 14808 0
865 1000 14807 0
c (( - aux1149 + SATLiteral(595) + SATLiteral(325))<=0)
-325 -14810 0
-595 -14810 0
-595 -325 -14811 0
c (0<=( - aux1149 + SATLiteral(595) + SATLiteral(325)))
325 14811 0
595 14811 0
595 325 14810 0
c ((SATLiteral(190) + aux1149 - aux1150)<=0)
14810 -14813 0
14811 -14814 0
-190 -14813 0
-190 14810 -14814 0
-190 14811 -14816 0
c (0<=(SATLiteral(190) + aux1149 - aux1150))
-14811 14816 0
-14810 14814 0
190 14816 0
190 -14811 14814 0
190 -14810 14813 0
c ((aux1146 + aux1148 - aux1151)<=0)
14807 -14818 0
14808 -14819 0
14801 -14818 0
14801 14807 -14819 0
14801 14808 -14821 0
14802 -14819 0
14802 14807 -14821 0
14802 14808 -14823 0
c (0<=(aux1146 + aux1148 - aux1151))
-14808 14823 0
-14807 14821 0
-14802 14823 0
-14802 -14808 14821 0
-14802 -14807 14819 0
-14801 14821 0
-14801 -14808 14819 0
-14801 -14807 14818 0
c ((SATLiteral(467) - aux1152 + SATLiteral(737))<=0)
-737 -14825 0
-467 -14825 0
-467 -737 -14826 0
c (0<=(SATLiteral(467) - aux1152 + SATLiteral(737)))
737 14826 0
467 14826 0
467 737 14825 0
c ((SATLiteral(1142) - aux1153 + SATLiteral(62))<=0)
-62 -14828 0
-1142 -14828 0
-1142 -62 -14829 0
c (0<=(SATLiteral(1142) - aux1153 + SATLiteral(62)))
62 14829 0
1142 14829 0
1142 62 14828 0
c ((SATLiteral(872) - aux1154 + SATLiteral(1007))<=0)
-1007 -14831 0
-872 -14831 0
-872 -1007 -14832 0
c (0<=(SATLiteral(872) - aux1154 + SATLiteral(1007)))
1007 14832 0
872 14832 0
872 1007 14831 0
c (( - aux1155 + SATLiteral(602) + SATLiteral(332))<=0)
-332 -14834 0
-602 -14834 0
-602 -332 -14835 0
c (0<=( - aux1155 + SATLiteral(602) + SATLiteral(332)))
332 14835 0
602 14835 0
602 332 14834 0
c ((SATLiteral(197) + aux1155 - aux1156)<=0)
14834 -14837 0
14835 -14838 0
-197 -14837 0
-197 14834 -14838 0
-197 14835 -14840 0
c (0<=(SATLiteral(197) + aux1155 - aux1156))
-14835 14840 0
-14834 14838 0
197 14840 0
197 -14835 14838 0
197 -14834 14837 0
c ((aux1152 + aux1154 - aux1157)<=0)
14831 -14842 0
14832 -14843 0
14825 -14842 0
14825 14831 -14843 0
14825 14832 -14845 0
14826 -14843 0
14826 14831 -14845 0
14826 14832 -14847 0
c (0<=(aux1152 + aux1154 - aux1157))
-14832 14847 0
-14831 14845 0
-14826 14847 0
-14826 -14832 14845 0
-14826 -14831 14843 0
-14825 14845 0
-14825 -14832 14843 0
-14825 -14831 14842 0
c ((SATLiteral(468) - aux1158 + SATLiteral(738))<=0)
-738 -14849 0
-468 -14849 0
-468 -738 -14850 0
c (0<=(SATLiteral(468) - aux1158 + SATLiteral(738)))
738 14850 0
468 14850 0
468 738 14849 0
c ((SATLiteral(1143) - aux1159 + SATLiteral(63))<=0)
-63 -14852 0
-1143 -14852 0
-1143 -63 -14853 0
c (0<=(SATLiteral(1143) - aux1159 + SATLiteral(63)))
63 14853 0
1143 14853 0
1143 63 14852 0
c ((SATLiteral(873) - aux1160 + SATLiteral(1008))<=0)
-1008 -14855 0
-873 -14855 0
-873 -1008 -14856 0
c (0<=(SATLiteral(873) - aux1160 + SATLiteral(1008)))
1008 14856 0
873 14856 0
873 1008 14855 0
c (( - aux1161 + SATLiteral(603) + SATLiteral(333))<=0)
-333 -14858 0
-603 -14858 0
-603 -333 -14859 0
c (0<=( - aux1161 + SATLiteral(603) + SATLiteral(333)))
333 14859 0
603 14859 0
603 333 14858 0
c ((SATLiteral(198) + aux1161 - aux1162)<=0)
14858 -14861 0
14859 -14862 0
-198 -14861 0
-198 14858 -14862 0
-198 14859 -14864 0
c (0<=(SATLiteral(198) + aux1161 - aux1162))
-14859 14864 0
-14858 14862 0
198 14864 0
198 -14859 14862 0
198 -14858 14861 0
c ((aux1158 + aux1160 - aux1163)<=0)
14855 -14866 0
14856 -14867 0
14849 -14866 0
14849 14855 -14867 0
14849 14856 -14869 0
14850 -14867 0
14850 14855 -14869 0
14850 14856 -14871 0
c (0<=(aux1158 + aux1160 - aux1163))
-14856 14871 0
-14855 14869 0
-14850 14871 0
-14850 -14856 14869 0
-14850 -14855 14867 0
-14849 14869 0
-14849 -14856 14867 0
-14849 -14855 14866 0
c ((SATLiteral(469) - aux1164 + SATLiteral(739))<=0)
-739 -14873 0
-469 -14873 0
-469 -739 -14874 0
c (0<=(SATLiteral(469) - aux1164 + SATLiteral(739)))
739 14874 0
469 14874 0
469 739 14873 0
c ((SATLiteral(1144) - aux1165 + SATLiteral(64))<=0)
-64 -14876 0
-1144 -14876 0
-1144 -64 -14877 0
c (0<=(SATLiteral(1144) - aux1165 + SATLiteral(64)))
64 14877 0
1144 14877 0
1144 64 14876 0
c ((SATLiteral(874) - aux1166 + SATLiteral(1009))<=0)
-1009 -14879 0
-874 -14879 0
-874 -1009 -14880 0
c (0<=(SATLiteral(874) - aux1166 + SATLiteral(1009)))
1009 14880 0
874 14880 0
874 1009 14879 0
c (( - aux1167 + SATLiteral(604) + SATLiteral(334))<=0)
-334 -14882 0
-604 -14882 0
-604 -334 -14883 0
c (0<=( - aux1167 + SATLiteral(604) + SATLiteral(334)))
334 14883 0
604 14883 0
604 334 14882 0
c ((SATLiteral(199) + aux1167 - aux1168)<=0)
14882 -14885 0
14883 -14886 0
-199 -14885 0
-199 14882 -14886 0
-199 14883 -14888 0
c (0<=(SATLiteral(199) + aux1167 - aux1168))
-14883 14888 0
-14882 14886 0
199 14888 0
199 -14883 14886 0
199 -14882 14885 0
c ((aux1164 + aux1166 - aux1169)<=0)
14879 -14890 0
14880 -14891 0
14873 -14890 0
14873 14879 -14891 0
14873 14880 -14893 0
14874 -14891 0
14874 14879 -14893 0
14874 14880 -14895 0
c (0<=(aux1164 + aux1166 - aux1169))
-14880 14895 0
-14879 14893 0
-14874 14895 0
-14874 -14880 14893 0
-14874 -14879 14891 0
-14873 14893 0
-14873 -14880 14891 0
-14873 -14879 14890 0
c ((SATLiteral(470) - aux1170 + SATLiteral(740))<=0)
-740 -14897 0
-470 -14897 0
-470 -740 -14898 0
c (0<=(SATLiteral(470) - aux1170 + SATLiteral(740)))
740 14898 0
470 14898 0
470 740 14897 0
c ((SATLiteral(1145) - aux1171 + SATLiteral(65))<=0)
-65 -14900 0
-1145 -14900 0
-1145 -65 -14901 0
c (0<=(SATLiteral(1145) - aux1171 + SATLiteral(65)))
65 14901 0
1145 14901 0
1145 65 14900 0
c ((SATLiteral(875) - aux1172 + SATLiteral(1010))<=0)
-1010 -14903 0
-875 -14903 0
-875 -1010 -14904 0
c (0<=(SATLiteral(875) - aux1172 + SATLiteral(1010)))
1010 14904 0
875 14904 0
875 1010 14903 0
c (( - aux1173 + SATLiteral(605) + SATLiteral(335))<=0)
-335 -14906 0
-605 -14906 0
-605 -335 -14907 0
c (0<=( - aux1173 + SATLiteral(605) + SATLiteral(335)))
335 14907 0
605 14907 0
605 335 14906 0
c ((SATLiteral(200) + aux1173 - aux1174)<=0)
14906 -14909 0
14907 -14910 0
-200 -14909 0
-200 14906 -14910 0
-200 14907 -14912 0
c (0<=(SATLiteral(200) + aux1173 - aux1174))
-14907 14912 0
-14906 14910 0
200 14912 0
200 -14907 14910 0
200 -14906 14909 0
c ((aux1170 + aux1172 - aux1175)<=0)
14903 -14914 0
14904 -14915 0
14897 -14914 0
14897 14903 -14915 0
14897 14904 -14917 0
14898 -14915 0
14898 14903 -14917 0
14898 14904 -14919 0
c (0<=(aux1170 + aux1172 - aux1175))
-14904 14919 0
-14903 14917 0
-14898 14919 0
-14898 -14904 14917 0
-14898 -14903 14915 0
-14897 14917 0
-14897 -14904 14915 0
-14897 -14903 14914 0
c ((SATLiteral(471) - aux1176 + SATLiteral(741))<=0)
-741 -14921 0
-471 -14921 0
-471 -741 -14922 0
c (0<=(SATLiteral(471) - aux1176 + SATLiteral(741)))
741 14922 0
471 14922 0
471 741 14921 0
c ((SATLiteral(1146) - aux1177 + SATLiteral(66))<=0)
-66 -14924 0
-1146 -14924 0
-1146 -66 -14925 0
c (0<=(SATLiteral(1146) - aux1177 + SATLiteral(66)))
66 14925 0
1146 14925 0
1146 66 14924 0
c ((SATLiteral(876) - aux1178 + SATLiteral(1011))<=0)
-1011 -14927 0
-876 -14927 0
-876 -1011 -14928 0
c (0<=(SATLiteral(876) - aux1178 + SATLiteral(1011)))
1011 14928 0
876 14928 0
876 1011 14927 0
c (( - aux1179 + SATLiteral(606) + SATLiteral(336))<=0)
-336 -14930 0
-606 -14930 0
-606 -336 -14931 0
c (0<=( - aux1179 + SATLiteral(606) + SATLiteral(336)))
336 14931 0
606 14931 0
606 336 14930 0
c ((SATLiteral(201) + aux1179 - aux1180)<=0)
14930 -14933 0
14931 -14934 0
-201 -14933 0
-201 14930 -14934 0
-201 14931 -14936 0
c (0<=(SATLiteral(201) + aux1179 - aux1180))
-14931 14936 0
-14930 14934 0
201 14936 0
201 -14931 14934 0
201 -14930 14933 0
c ((aux1176 + aux1178 - aux1181)<=0)
14927 -14938 0
14928 -14939 0
14921 -14938 0
14921 14927 -14939 0
14921 14928 -14941 0
14922 -14939 0
14922 14927 -14941 0
14922 14928 -14943 0
c (0<=(aux1176 + aux1178 - aux1181))
-14928 14943 0
-14927 14941 0
-14922 14943 0
-14922 -14928 14941 0
-14922 -14927 14939 0
-14921 14941 0
-14921 -14928 14939 0
-14921 -14927 14938 0
c ((SATLiteral(472) - aux1182 + SATLiteral(742))<=0)
-742 -14945 0
-472 -14945 0
-472 -742 -14946 0
c (0<=(SATLiteral(472) - aux1182 + SATLiteral(742)))
742 14946 0
472 14946 0
472 742 14945 0
c ((SATLiteral(1147) - aux1183 + SATLiteral(67))<=0)
-67 -14948 0
-1147 -14948 0
-1147 -67 -14949 0
c (0<=(SATLiteral(1147) - aux1183 + SATLiteral(67)))
67 14949 0
1147 14949 0
1147 67 14948 0
c ((SATLiteral(877) - aux1184 + SATLiteral(1012))<=0)
-1012 -14951 0
-877 -14951 0
-877 -1012 -14952 0
c (0<=(SATLiteral(877) - aux1184 + SATLiteral(1012)))
1012 14952 0
877 14952 0
877 1012 14951 0
c (( - aux1185 + SATLiteral(607) + SATLiteral(337))<=0)
-337 -14954 0
-607 -14954 0
-607 -337 -14955 0
c (0<=( - aux1185 + SATLiteral(607) + SATLiteral(337)))
337 14955 0
607 14955 0
607 337 14954 0
c ((SATLiteral(202) + aux1185 - aux1186)<=0)
14954 -14957 0
14955 -14958 0
-202 -14957 0
-202 14954 -14958 0
-202 14955 -14960 0
c (0<=(SATLiteral(202) + aux1185 - aux1186))
-14955 14960 0
-14954 14958 0
202 14960 0
202 -14955 14958 0
202 -14954 14957 0
c ((aux1182 + aux1184 - aux1187)<=0)
14951 -14962 0
14952 -14963 0
14945 -14962 0
14945 14951 -14963 0
14945 14952 -14965 0
14946 -14963 0
14946 14951 -14965 0
14946 14952 -14967 0
c (0<=(aux1182 + aux1184 - aux1187))
-14952 14967 0
-14951 14965 0
-14946 14967 0
-14946 -14952 14965 0
-14946 -14951 14963 0
-14945 14965 0
-14945 -14952 14963 0
-14945 -14951 14962 0
c ((SATLiteral(473) - aux1188 + SATLiteral(743))<=0)
-743 -14969 0
-473 -14969 0
-473 -743 -14970 0
c (0<=(SATLiteral(473) - aux1188 + SATLiteral(743)))
743 14970 0
473 14970 0
473 743 14969 0
c ((SATLiteral(1148) - aux1189 + SATLiteral(68))<=0)
-68 -14972 0
-1148 -14972 0
-1148 -68 -14973 0
c (0<=(SATLiteral(1148) - aux1189 + SATLiteral(68)))
68 14973 0
1148 14973 0
1148 68 14972 0
c ((SATLiteral(878) - aux1190 + SATLiteral(1013))<=0)
-1013 -14975 0
-878 -14975 0
-878 -1013 -14976 0
c (0<=(SATLiteral(878) - aux1190 + SATLiteral(1013)))
1013 14976 0
878 14976 0
878 1013 14975 0
c (( - aux1191 + SATLiteral(608) + SATLiteral(338))<=0)
-338 -14978 0
-608 -14978 0
-608 -338 -14979 0
c (0<=( - aux1191 + SATLiteral(608) + SATLiteral(338)))
338 14979 0
608 14979 0
608 338 14978 0
c ((SATLiteral(203) + aux1191 - aux1192)<=0)
14978 -14981 0
14979 -14982 0
-203 -14981 0
-203 14978 -14982 0
-203 14979 -14984 0
c (0<=(SATLiteral(203) + aux1191 - aux1192))
-14979 14984 0
-14978 14982 0
203 14984 0
203 -14979 14982 0
203 -14978 14981 0
c ((aux1188 + aux1190 - aux1193)<=0)
14975 -14986 0
14976 -14987 0
14969 -14986 0
14969 14975 -14987 0
14969 14976 -14989 0
14970 -14987 0
14970 14975 -14989 0
14970 14976 -14991 0
c (0<=(aux1188 + aux1190 - aux1193))
-14976 14991 0
-14975 14989 0
-14970 14991 0
-14970 -14976 14989 0
-14970 -14975 14987 0
-14969 14989 0
-14969 -14976 14987 0
-14969 -14975 14986 0
c ((SATLiteral(474) - aux1194 + SATLiteral(744))<=0)
-744 -14993 0
-474 -14993 0
-474 -744 -14994 0
c (0<=(SATLiteral(474) - aux1194 + SATLiteral(744)))
744 14994 0
474 14994 0
474 744 14993 0
c ((SATLiteral(1149) - aux1195 + SATLiteral(69))<=0)
-69 -14996 0
-1149 -14996 0
-1149 -69 -14997 0
c (0<=(SATLiteral(1149) - aux1195 + SATLiteral(69)))
69 14997 0
1149 14997 0
1149 69 14996 0
c ((SATLiteral(879) - aux1196 + SATLiteral(1014))<=0)
-1014 -14999 0
-879 -14999 0
-879 -1014 -15000 0
c (0<=(SATLiteral(879) - aux1196 + SATLiteral(1014)))
1014 15000 0
879 15000 0
879 1014 14999 0
c (( - aux1197 + SATLiteral(609) + SATLiteral(339))<=0)
-339 -15002 0
-609 -15002 0
-609 -339 -15003 0
c (0<=( - aux1197 + SATLiteral(609) + SATLiteral(339)))
339 15003 0
609 15003 0
609 339 15002 0
c ((SATLiteral(204) + aux1197 - aux1198)<=0)
15002 -15005 0
15003 -15006 0
-204 -15005 0
-204 15002 -15006 0
-204 15003 -15008 0
c (0<=(SATLiteral(204) + aux1197 - aux1198))
-15003 15008 0
-15002 15006 0
204 15008 0
204 -15003 15006 0
204 -15002 15005 0
c ((aux1194 + aux1196 - aux1199)<=0)
14999 -15010 0
15000 -15011 0
14993 -15010 0
14993 14999 -15011 0
14993 15000 -15013 0
14994 -15011 0
14994 14999 -15013 0
14994 15000 -15015 0
c (0<=(aux1194 + aux1196 - aux1199))
-15000 15015 0
-14999 15013 0
-14994 15015 0
-14994 -15000 15013 0
-14994 -14999 15011 0
-14993 15013 0
-14993 -15000 15011 0
-14993 -14999 15010 0
c ((SATLiteral(475) - aux1200 + SATLiteral(745))<=0)
-745 -15017 0
-475 -15017 0
-475 -745 -15018 0
c (0<=(SATLiteral(475) - aux1200 + SATLiteral(745)))
745 15018 0
475 15018 0
475 745 15017 0
c ((SATLiteral(1150) - aux1201 + SATLiteral(70))<=0)
-70 -15020 0
-1150 -15020 0
-1150 -70 -15021 0
c (0<=(SATLiteral(1150) - aux1201 + SATLiteral(70)))
70 15021 0
1150 15021 0
1150 70 15020 0
c ((SATLiteral(880) - aux1202 + SATLiteral(1015))<=0)
-1015 -15023 0
-880 -15023 0
-880 -1015 -15024 0
c (0<=(SATLiteral(880) - aux1202 + SATLiteral(1015)))
1015 15024 0
880 15024 0
880 1015 15023 0
c (( - aux1203 + SATLiteral(610) + SATLiteral(340))<=0)
-340 -15026 0
-610 -15026 0
-610 -340 -15027 0
c (0<=( - aux1203 + SATLiteral(610) + SATLiteral(340)))
340 15027 0
610 15027 0
610 340 15026 0
c ((SATLiteral(205) + aux1203 - aux1204)<=0)
15026 -15029 0
15027 -15030 0
-205 -15029 0
-205 15026 -15030 0
-205 15027 -15032 0
c (0<=(SATLiteral(205) + aux1203 - aux1204))
-15027 15032 0
-15026 15030 0
205 15032 0
205 -15027 15030 0
205 -15026 15029 0
c ((aux1200 + aux1202 - aux1205)<=0)
15023 -15034 0
15024 -15035 0
15017 -15034 0
15017 15023 -15035 0
15017 15024 -15037 0
15018 -15035 0
15018 15023 -15037 0
15018 15024 -15039 0
c (0<=(aux1200 + aux1202 - aux1205))
-15024 15039 0
-15023 15037 0
-15018 15039 0
-15018 -15024 15037 0
-15018 -15023 15035 0
-15017 15037 0
-15017 -15024 15035 0
-15017 -15023 15034 0
c ((SATLiteral(482) - aux1206 + SATLiteral(752))<=0)
-752 -15041 0
-482 -15041 0
-482 -752 -15042 0
c (0<=(SATLiteral(482) - aux1206 + SATLiteral(752)))
752 15042 0
482 15042 0
482 752 15041 0
c ((SATLiteral(1157) - aux1207 + SATLiteral(77))<=0)
-77 -15044 0
-1157 -15044 0
-1157 -77 -15045 0
c (0<=(SATLiteral(1157) - aux1207 + SATLiteral(77)))
77 15045 0
1157 15045 0
1157 77 15044 0
c ((SATLiteral(887) - aux1208 + SATLiteral(1022))<=0)
-1022 -15047 0
-887 -15047 0
-887 -1022 -15048 0
c (0<=(SATLiteral(887) - aux1208 + SATLiteral(1022)))
1022 15048 0
887 15048 0
887 1022 15047 0
c (( - aux1209 + SATLiteral(617) + SATLiteral(347))<=0)
-347 -15050 0
-617 -15050 0
-617 -347 -15051 0
c (0<=( - aux1209 + SATLiteral(617) + SATLiteral(347)))
347 15051 0
617 15051 0
617 347 15050 0
c ((SATLiteral(212) + aux1209 - aux1210)<=0)
15050 -15053 0
15051 -15054 0
-212 -15053 0
-212 15050 -15054 0
-212 15051 -15056 0
c (0<=(SATLiteral(212) + aux1209 - aux1210))
-15051 15056 0
-15050 15054 0
212 15056 0
212 -15051 15054 0
212 -15050 15053 0
c ((aux1206 + aux1208 - aux1211)<=0)
15047 -15058 0
15048 -15059 0
15041 -15058 0
15041 15047 -15059 0
15041 15048 -15061 0
15042 -15059 0
15042 15047 -15061 0
15042 15048 -15063 0
c (0<=(aux1206 + aux1208 - aux1211))
-15048 15063 0
-15047 15061 0
-15042 15063 0
-15042 -15048 15061 0
-15042 -15047 15059 0
-15041 15061 0
-15041 -15048 15059 0
-15041 -15047 15058 0
c ((SATLiteral(483) - aux1212 + SATLiteral(753))<=0)
-753 -15065 0
-483 -15065 0
-483 -753 -15066 0
c (0<=(SATLiteral(483) - aux1212 + SATLiteral(753)))
753 15066 0
483 15066 0
483 753 15065 0
c ((SATLiteral(1158) - aux1213 + SATLiteral(78))<=0)
-78 -15068 0
-1158 -15068 0
-1158 -78 -15069 0
c (0<=(SATLiteral(1158) - aux1213 + SATLiteral(78)))
78 15069 0
1158 15069 0
1158 78 15068 0
c ((SATLiteral(888) - aux1214 + SATLiteral(1023))<=0)
-1023 -15071 0
-888 -15071 0
-888 -1023 -15072 0
c (0<=(SATLiteral(888) - aux1214 + SATLiteral(1023)))
1023 15072 0
888 15072 0
888 1023 15071 0
c (( - aux1215 + SATLiteral(618) + SATLiteral(348))<=0)
-348 -15074 0
-618 -15074 0
-618 -348 -15075 0
c (0<=( - aux1215 + SATLiteral(618) + SATLiteral(348)))
348 15075 0
618 15075 0
618 348 15074 0
c ((SATLiteral(213) + aux1215 - aux1216)<=0)
15074 -15077 0
15075 -15078 0
-213 -15077 0
-213 15074 -15078 0
-213 15075 -15080 0
c (0<=(SATLiteral(213) + aux1215 - aux1216))
-15075 15080 0
-15074 15078 0
213 15080 0
213 -15075 15078 0
213 -15074 15077 0
c ((aux1212 + aux1214 - aux1217)<=0)
15071 -15082 0
15072 -15083 0
15065 -15082 0
15065 15071 -15083 0
15065 15072 -15085 0
15066 -15083 0
15066 15071 -15085 0
15066 15072 -15087 0
c (0<=(aux1212 + aux1214 - aux1217))
-15072 15087 0
-15071 15085 0
-15066 15087 0
-15066 -15072 15085 0
-15066 -15071 15083 0
-15065 15085 0
-15065 -15072 15083 0
-15065 -15071 15082 0
c ((SATLiteral(484) - aux1218 + SATLiteral(754))<=0)
-754 -15089 0
-484 -15089 0
-484 -754 -15090 0
c (0<=(SATLiteral(484) - aux1218 + SATLiteral(754)))
754 15090 0
484 15090 0
484 754 15089 0
c ((SATLiteral(1159) - aux1219 + SATLiteral(79))<=0)
-79 -15092 0
-1159 -15092 0
-1159 -79 -15093 0
c (0<=(SATLiteral(1159) - aux1219 + SATLiteral(79)))
79 15093 0
1159 15093 0
1159 79 15092 0
c ((SATLiteral(889) - aux1220 + SATLiteral(1024))<=0)
-1024 -15095 0
-889 -15095 0
-889 -1024 -15096 0
c (0<=(SATLiteral(889) - aux1220 + SATLiteral(1024)))
1024 15096 0
889 15096 0
889 1024 15095 0
c (( - aux1221 + SATLiteral(619) + SATLiteral(349))<=0)
-349 -15098 0
-619 -15098 0
-619 -349 -15099 0
c (0<=( - aux1221 + SATLiteral(619) + SATLiteral(349)))
349 15099 0
619 15099 0
619 349 15098 0
c ((SATLiteral(214) + aux1221 - aux1222)<=0)
15098 -15101 0
15099 -15102 0
-214 -15101 0
-214 15098 -15102 0
-214 15099 -15104 0
c (0<=(SATLiteral(214) + aux1221 - aux1222))
-15099 15104 0
-15098 15102 0
214 15104 0
214 -15099 15102 0
214 -15098 15101 0
c ((aux1218 + aux1220 - aux1223)<=0)
15095 -15106 0
15096 -15107 0
15089 -15106 0
15089 15095 -15107 0
15089 15096 -15109 0
15090 -15107 0
15090 15095 -15109 0
15090 15096 -15111 0
c (0<=(aux1218 + aux1220 - aux1223))
-15096 15111 0
-15095 15109 0
-15090 15111 0
-15090 -15096 15109 0
-15090 -15095 15107 0
-15089 15109 0
-15089 -15096 15107 0
-15089 -15095 15106 0
c ((SATLiteral(485) - aux1224 + SATLiteral(755))<=0)
-755 -15113 0
-485 -15113 0
-485 -755 -15114 0
c (0<=(SATLiteral(485) - aux1224 + SATLiteral(755)))
755 15114 0
485 15114 0
485 755 15113 0
c ((SATLiteral(1160) - aux1225 + SATLiteral(80))<=0)
-80 -15116 0
-1160 -15116 0
-1160 -80 -15117 0
c (0<=(SATLiteral(1160) - aux1225 + SATLiteral(80)))
80 15117 0
1160 15117 0
1160 80 15116 0
c ((SATLiteral(890) - aux1226 + SATLiteral(1025))<=0)
-1025 -15119 0
-890 -15119 0
-890 -1025 -15120 0
c (0<=(SATLiteral(890) - aux1226 + SATLiteral(1025)))
1025 15120 0
890 15120 0
890 1025 15119 0
c (( - aux1227 + SATLiteral(620) + SATLiteral(350))<=0)
-350 -15122 0
-620 -15122 0
-620 -350 -15123 0
c (0<=( - aux1227 + SATLiteral(620) + SATLiteral(350)))
350 15123 0
620 15123 0
620 350 15122 0
c ((SATLiteral(215) + aux1227 - aux1228)<=0)
15122 -15125 0
15123 -15126 0
-215 -15125 0
-215 15122 -15126 0
-215 15123 -15128 0
c (0<=(SATLiteral(215) + aux1227 - aux1228))
-15123 15128 0
-15122 15126 0
215 15128 0
215 -15123 15126 0
215 -15122 15125 0
c ((aux1224 + aux1226 - aux1229)<=0)
15119 -15130 0
15120 -15131 0
15113 -15130 0
15113 15119 -15131 0
15113 15120 -15133 0
15114 -15131 0
15114 15119 -15133 0
15114 15120 -15135 0
c (0<=(aux1224 + aux1226 - aux1229))
-15120 15135 0
-15119 15133 0
-15114 15135 0
-15114 -15120 15133 0
-15114 -15119 15131 0
-15113 15133 0
-15113 -15120 15131 0
-15113 -15119 15130 0
c ((SATLiteral(486) - aux1230 + SATLiteral(756))<=0)
-756 -15137 0
-486 -15137 0
-486 -756 -15138 0
c (0<=(SATLiteral(486) - aux1230 + SATLiteral(756)))
756 15138 0
486 15138 0
486 756 15137 0
c ((SATLiteral(1161) - aux1231 + SATLiteral(81))<=0)
-81 -15140 0
-1161 -15140 0
-1161 -81 -15141 0
c (0<=(SATLiteral(1161) - aux1231 + SATLiteral(81)))
81 15141 0
1161 15141 0
1161 81 15140 0
c ((SATLiteral(891) - aux1232 + SATLiteral(1026))<=0)
-1026 -15143 0
-891 -15143 0
-891 -1026 -15144 0
c (0<=(SATLiteral(891) - aux1232 + SATLiteral(1026)))
1026 15144 0
891 15144 0
891 1026 15143 0
c (( - aux1233 + SATLiteral(621) + SATLiteral(351))<=0)
-351 -15146 0
-621 -15146 0
-621 -351 -15147 0
c (0<=( - aux1233 + SATLiteral(621) + SATLiteral(351)))
351 15147 0
621 15147 0
621 351 15146 0
c ((SATLiteral(216) + aux1233 - aux1234)<=0)
15146 -15149 0
15147 -15150 0
-216 -15149 0
-216 15146 -15150 0
-216 15147 -15152 0
c (0<=(SATLiteral(216) + aux1233 - aux1234))
-15147 15152 0
-15146 15150 0
216 15152 0
216 -15147 15150 0
216 -15146 15149 0
c ((aux1230 + aux1232 - aux1235)<=0)
15143 -15154 0
15144 -15155 0
15137 -15154 0
15137 15143 -15155 0
15137 15144 -15157 0
15138 -15155 0
15138 15143 -15157 0
15138 15144 -15159 0
c (0<=(aux1230 + aux1232 - aux1235))
-15144 15159 0
-15143 15157 0
-15138 15159 0
-15138 -15144 15157 0
-15138 -15143 15155 0
-15137 15157 0
-15137 -15144 15155 0
-15137 -15143 15154 0
c ((SATLiteral(487) - aux1236 + SATLiteral(757))<=0)
-757 -15161 0
-487 -15161 0
-487 -757 -15162 0
c (0<=(SATLiteral(487) - aux1236 + SATLiteral(757)))
757 15162 0
487 15162 0
487 757 15161 0
c ((SATLiteral(1162) - aux1237 + SATLiteral(82))<=0)
-82 -15164 0
-1162 -15164 0
-1162 -82 -15165 0
c (0<=(SATLiteral(1162) - aux1237 + SATLiteral(82)))
82 15165 0
1162 15165 0
1162 82 15164 0
c ((SATLiteral(892) - aux1238 + SATLiteral(1027))<=0)
-1027 -15167 0
-892 -15167 0
-892 -1027 -15168 0
c (0<=(SATLiteral(892) - aux1238 + SATLiteral(1027)))
1027 15168 0
892 15168 0
892 1027 15167 0
c (( - aux1239 + SATLiteral(622) + SATLiteral(352))<=0)
-352 -15170 0
-622 -15170 0
-622 -352 -15171 0
c (0<=( - aux1239 + SATLiteral(622) + SATLiteral(352)))
352 15171 0
622 15171 0
622 352 15170 0
c ((SATLiteral(217) + aux1239 - aux1240)<=0)
15170 -15173 0
15171 -15174 0
-217 -15173 0
-217 15170 -15174 0
-217 15171 -15176 0
c (0<=(SATLiteral(217) + aux1239 - aux1240))
-15171 15176 0
-15170 15174 0
217 15176 0
217 -15171 15174 0
217 -15170 15173 0
c ((aux1236 + aux1238 - aux1241)<=0)
15167 -15178 0
15168 -15179 0
15161 -15178 0
15161 15167 -15179 0
15161 15168 -15181 0
15162 -15179 0
15162 15167 -15181 0
15162 15168 -15183 0
c (0<=(aux1236 + aux1238 - aux1241))
-15168 15183 0
-15167 15181 0
-15162 15183 0
-15162 -15168 15181 0
-15162 -15167 15179 0
-15161 15181 0
-15161 -15168 15179 0
-15161 -15167 15178 0
c ((SATLiteral(488) - aux1242 + SATLiteral(758))<=0)
-758 -15185 0
-488 -15185 0
-488 -758 -15186 0
c (0<=(SATLiteral(488) - aux1242 + SATLiteral(758)))
758 15186 0
488 15186 0
488 758 15185 0
c ((SATLiteral(1163) - aux1243 + SATLiteral(83))<=0)
-83 -15188 0
-1163 -15188 0
-1163 -83 -15189 0
c (0<=(SATLiteral(1163) - aux1243 + SATLiteral(83)))
83 15189 0
1163 15189 0
1163 83 15188 0
c ((SATLiteral(893) - aux1244 + SATLiteral(1028))<=0)
-1028 -15191 0
-893 -15191 0
-893 -1028 -15192 0
c (0<=(SATLiteral(893) - aux1244 + SATLiteral(1028)))
1028 15192 0
893 15192 0
893 1028 15191 0
c (( - aux1245 + SATLiteral(623) + SATLiteral(353))<=0)
-353 -15194 0
-623 -15194 0
-623 -353 -15195 0
c (0<=( - aux1245 + SATLiteral(623) + SATLiteral(353)))
353 15195 0
623 15195 0
623 353 15194 0
c ((SATLiteral(218) + aux1245 - aux1246)<=0)
15194 -15197 0
15195 -15198 0
-218 -15197 0
-218 15194 -15198 0
-218 15195 -15200 0
c (0<=(SATLiteral(218) + aux1245 - aux1246))
-15195 15200 0
-15194 15198 0
218 15200 0
218 -15195 15198 0
218 -15194 15197 0
c ((aux1242 + aux1244 - aux1247)<=0)
15191 -15202 0
15192 -15203 0
15185 -15202 0
15185 15191 -15203 0
15185 15192 -15205 0
15186 -15203 0
15186 15191 -15205 0
15186 15192 -15207 0
c (0<=(aux1242 + aux1244 - aux1247))
-15192 15207 0
-15191 15205 0
-15186 15207 0
-15186 -15192 15205 0
-15186 -15191 15203 0
-15185 15205 0
-15185 -15192 15203 0
-15185 -15191 15202 0
c ((SATLiteral(489) - aux1248 + SATLiteral(759))<=0)
-759 -15209 0
-489 -15209 0
-489 -759 -15210 0
c (0<=(SATLiteral(489) - aux1248 + SATLiteral(759)))
759 15210 0
489 15210 0
489 759 15209 0
c ((SATLiteral(1164) - aux1249 + SATLiteral(84))<=0)
-84 -15212 0
-1164 -15212 0
-1164 -84 -15213 0
c (0<=(SATLiteral(1164) - aux1249 + SATLiteral(84)))
84 15213 0
1164 15213 0
1164 84 15212 0
c ((SATLiteral(894) - aux1250 + SATLiteral(1029))<=0)
-1029 -15215 0
-894 -15215 0
-894 -1029 -15216 0
c (0<=(SATLiteral(894) - aux1250 + SATLiteral(1029)))
1029 15216 0
894 15216 0
894 1029 15215 0
c (( - aux1251 + SATLiteral(624) + SATLiteral(354))<=0)
-354 -15218 0
-624 -15218 0
-624 -354 -15219 0
c (0<=( - aux1251 + SATLiteral(624) + SATLiteral(354)))
354 15219 0
624 15219 0
624 354 15218 0
c ((SATLiteral(219) + aux1251 - aux1252)<=0)
15218 -15221 0
15219 -15222 0
-219 -15221 0
-219 15218 -15222 0
-219 15219 -15224 0
c (0<=(SATLiteral(219) + aux1251 - aux1252))
-15219 15224 0
-15218 15222 0
219 15224 0
219 -15219 15222 0
219 -15218 15221 0
c ((aux1248 + aux1250 - aux1253)<=0)
15215 -15226 0
15216 -15227 0
15209 -15226 0
15209 15215 -15227 0
15209 15216 -15229 0
15210 -15227 0
15210 15215 -15229 0
15210 15216 -15231 0
c (0<=(aux1248 + aux1250 - aux1253))
-15216 15231 0
-15215 15229 0
-15210 15231 0
-15210 -15216 15229 0
-15210 -15215 15227 0
-15209 15229 0
-15209 -15216 15227 0
-15209 -15215 15226 0
c ((SATLiteral(490) - aux1254 + SATLiteral(760))<=0)
-760 -15233 0
-490 -15233 0
-490 -760 -15234 0
c (0<=(SATLiteral(490) - aux1254 + SATLiteral(760)))
760 15234 0
490 15234 0
490 760 15233 0
c ((SATLiteral(1165) - aux1255 + SATLiteral(85))<=0)
-85 -15236 0
-1165 -15236 0
-1165 -85 -15237 0
c (0<=(SATLiteral(1165) - aux1255 + SATLiteral(85)))
85 15237 0
1165 15237 0
1165 85 15236 0
c ((SATLiteral(895) - aux1256 + SATLiteral(1030))<=0)
-1030 -15239 0
-895 -15239 0
-895 -1030 -15240 0
c (0<=(SATLiteral(895) - aux1256 + SATLiteral(1030)))
1030 15240 0
895 15240 0
895 1030 15239 0
c (( - aux1257 + SATLiteral(625) + SATLiteral(355))<=0)
-355 -15242 0
-625 -15242 0
-625 -355 -15243 0
c (0<=( - aux1257 + SATLiteral(625) + SATLiteral(355)))
355 15243 0
625 15243 0
625 355 15242 0
c ((SATLiteral(220) + aux1257 - aux1258)<=0)
15242 -15245 0
15243 -15246 0
-220 -15245 0
-220 15242 -15246 0
-220 15243 -15248 0
c (0<=(SATLiteral(220) + aux1257 - aux1258))
-15243 15248 0
-15242 15246 0
220 15248 0
220 -15243 15246 0
220 -15242 15245 0
c ((aux1254 + aux1256 - aux1259)<=0)
15239 -15250 0
15240 -15251 0
15233 -15250 0
15233 15239 -15251 0
15233 15240 -15253 0
15234 -15251 0
15234 15239 -15253 0
15234 15240 -15255 0
c (0<=(aux1254 + aux1256 - aux1259))
-15240 15255 0
-15239 15253 0
-15234 15255 0
-15234 -15240 15253 0
-15234 -15239 15251 0
-15233 15253 0
-15233 -15240 15251 0
-15233 -15239 15250 0
c ((SATLiteral(497) - aux1260 + SATLiteral(767))<=0)
-767 -15257 0
-497 -15257 0
-497 -767 -15258 0
c (0<=(SATLiteral(497) - aux1260 + SATLiteral(767)))
767 15258 0
497 15258 0
497 767 15257 0
c ((SATLiteral(1172) - aux1261 + SATLiteral(92))<=0)
-92 -15260 0
-1172 -15260 0
-1172 -92 -15261 0
c (0<=(SATLiteral(1172) - aux1261 + SATLiteral(92)))
92 15261 0
1172 15261 0
1172 92 15260 0
c ((SATLiteral(902) - aux1262 + SATLiteral(1037))<=0)
-1037 -15263 0
-902 -15263 0
-902 -1037 -15264 0
c (0<=(SATLiteral(902) - aux1262 + SATLiteral(1037)))
1037 15264 0
902 15264 0
902 1037 15263 0
c (( - aux1263 + SATLiteral(632) + SATLiteral(362))<=0)
-362 -15266 0
-632 -15266 0
-632 -362 -15267 0
c (0<=( - aux1263 + SATLiteral(632) + SATLiteral(362)))
362 15267 0
632 15267 0
632 362 15266 0
c ((SATLiteral(227) + aux1263 - aux1264)<=0)
15266 -15269 0
15267 -15270 0
-227 -15269 0
-227 15266 -15270 0
-227 15267 -15272 0
c (0<=(SATLiteral(227) + aux1263 - aux1264))
-15267 15272 0
-15266 15270 0
227 15272 0
227 -15267 15270 0
227 -15266 15269 0
c ((aux1260 + aux1262 - aux1265)<=0)
15263 -15274 0
15264 -15275 0
15257 -15274 0
15257 15263 -15275 0
15257 15264 -15277 0
15258 -15275 0
15258 15263 -15277 0
15258 15264 -15279 0
c (0<=(aux1260 + aux1262 - aux1265))
-15264 15279 0
-15263 15277 0
-15258 15279 0
-15258 -15264 15277 0
-15258 -15263 15275 0
-15257 15277 0
-15257 -15264 15275 0
-15257 -15263 15274 0
c ((SATLiteral(498) - aux1266 + SATLiteral(768))<=0)
-768 -15281 0
-498 -15281 0
-498 -768 -15282 0
c (0<=(SATLiteral(498) - aux1266 + SATLiteral(768)))
768 15282 0
498 15282 0
498 768 15281 0
c ((SATLiteral(1173) - aux1267 + SATLiteral(93))<=0)
-93 -15284 0
-1173 -15284 0
-1173 -93 -15285 0
c (0<=(SATLiteral(1173) - aux1267 + SATLiteral(93)))
93 15285 0
1173 15285 0
1173 93 15284 0
c ((SATLiteral(903) - aux1268 + SATLiteral(1038))<=0)
-1038 -15287 0
-903 -15287 0
-903 -1038 -15288 0
c (0<=(SATLiteral(903) - aux1268 + SATLiteral(1038)))
1038 15288 0
903 15288 0
903 1038 15287 0
c (( - aux1269 + SATLiteral(633) + SATLiteral(363))<=0)
-363 -15290 0
-633 -15290 0
-633 -363 -15291 0
c (0<=( - aux1269 + SATLiteral(633) + SATLiteral(363)))
363 15291 0
633 15291 0
633 363 15290 0
c ((SATLiteral(228) + aux1269 - aux1270)<=0)
15290 -15293 0
15291 -15294 0
-228 -15293 0
-228 15290 -15294 0
-228 15291 -15296 0
c (0<=(SATLiteral(228) + aux1269 - aux1270))
-15291 15296 0
-15290 15294 0
228 15296 0
228 -15291 15294 0
228 -15290 15293 0
c ((aux1266 + aux1268 - aux1271)<=0)
15287 -15298 0
15288 -15299 0
15281 -15298 0
15281 15287 -15299 0
15281 15288 -15301 0
15282 -15299 0
15282 15287 -15301 0
15282 15288 -15303 0
c (0<=(aux1266 + aux1268 - aux1271))
-15288 15303 0
-15287 15301 0
-15282 15303 0
-15282 -15288 15301 0
-15282 -15287 15299 0
-15281 15301 0
-15281 -15288 15299 0
-15281 -15287 15298 0
c ((SATLiteral(499) - aux1272 + SATLiteral(769))<=0)
-769 -15305 0
-499 -15305 0
-499 -769 -15306 0
c (0<=(SATLiteral(499) - aux1272 + SATLiteral(769)))
769 15306 0
499 15306 0
499 769 15305 0
c ((SATLiteral(1174) - aux1273 + SATLiteral(94))<=0)
-94 -15308 0
-1174 -15308 0
-1174 -94 -15309 0
c (0<=(SATLiteral(1174) - aux1273 + SATLiteral(94)))
94 15309 0
1174 15309 0
1174 94 15308 0
c ((SATLiteral(904) - aux1274 + SATLiteral(1039))<=0)
-1039 -15311 0
-904 -15311 0
-904 -1039 -15312 0
c (0<=(SATLiteral(904) - aux1274 + SATLiteral(1039)))
1039 15312 0
904 15312 0
904 1039 15311 0
c (( - aux1275 + SATLiteral(634) + SATLiteral(364))<=0)
-364 -15314 0
-634 -15314 0
-634 -364 -15315 0
c (0<=( - aux1275 + SATLiteral(634) + SATLiteral(364)))
364 15315 0
634 15315 0
634 364 15314 0
c ((SATLiteral(229) + aux1275 - aux1276)<=0)
15314 -15317 0
15315 -15318 0
-229 -15317 0
-229 15314 -15318 0
-229 15315 -15320 0
c (0<=(SATLiteral(229) + aux1275 - aux1276))
-15315 15320 0
-15314 15318 0
229 15320 0
229 -15315 15318 0
229 -15314 15317 0
c ((aux1272 + aux1274 - aux1277)<=0)
15311 -15322 0
15312 -15323 0
15305 -15322 0
15305 15311 -15323 0
15305 15312 -15325 0
15306 -15323 0
15306 15311 -15325 0
15306 15312 -15327 0
c (0<=(aux1272 + aux1274 - aux1277))
-15312 15327 0
-15311 15325 0
-15306 15327 0
-15306 -15312 15325 0
-15306 -15311 15323 0
-15305 15325 0
-15305 -15312 15323 0
-15305 -15311 15322 0
c ((SATLiteral(500) - aux1278 + SATLiteral(770))<=0)
-770 -15329 0
-500 -15329 0
-500 -770 -15330 0
c (0<=(SATLiteral(500) - aux1278 + SATLiteral(770)))
770 15330 0
500 15330 0
500 770 15329 0
c ((SATLiteral(1175) - aux1279 + SATLiteral(95))<=0)
-95 -15332 0
-1175 -15332 0
-1175 -95 -15333 0
c (0<=(SATLiteral(1175) - aux1279 + SATLiteral(95)))
95 15333 0
1175 15333 0
1175 95 15332 0
c ((SATLiteral(905) - aux1280 + SATLiteral(1040))<=0)
-1040 -15335 0
-905 -15335 0
-905 -1040 -15336 0
c (0<=(SATLiteral(905) - aux1280 + SATLiteral(1040)))
1040 15336 0
905 15336 0
905 1040 15335 0
c (( - aux1281 + SATLiteral(635) + SATLiteral(365))<=0)
-365 -15338 0
-635 -15338 0
-635 -365 -15339 0
c (0<=( - aux1281 + SATLiteral(635) + SATLiteral(365)))
365 15339 0
635 15339 0
635 365 15338 0
c ((SATLiteral(230) + aux1281 - aux1282)<=0)
15338 -15341 0
15339 -15342 0
-230 -15341 0
-230 15338 -15342 0
-230 15339 -15344 0
c (0<=(SATLiteral(230) + aux1281 - aux1282))
-15339 15344 0
-15338 15342 0
230 15344 0
230 -15339 15342 0
230 -15338 15341 0
c ((aux1278 + aux1280 - aux1283)<=0)
15335 -15346 0
15336 -15347 0
15329 -15346 0
15329 15335 -15347 0
15329 15336 -15349 0
15330 -15347 0
15330 15335 -15349 0
15330 15336 -15351 0
c (0<=(aux1278 + aux1280 - aux1283))
-15336 15351 0
-15335 15349 0
-15330 15351 0
-15330 -15336 15349 0
-15330 -15335 15347 0
-15329 15349 0
-15329 -15336 15347 0
-15329 -15335 15346 0
c ((SATLiteral(501) - aux1284 + SATLiteral(771))<=0)
-771 -15353 0
-501 -15353 0
-501 -771 -15354 0
c (0<=(SATLiteral(501) - aux1284 + SATLiteral(771)))
771 15354 0
501 15354 0
501 771 15353 0
c ((SATLiteral(1176) - aux1285 + SATLiteral(96))<=0)
-96 -15356 0
-1176 -15356 0
-1176 -96 -15357 0
c (0<=(SATLiteral(1176) - aux1285 + SATLiteral(96)))
96 15357 0
1176 15357 0
1176 96 15356 0
c ((SATLiteral(906) - aux1286 + SATLiteral(1041))<=0)
-1041 -15359 0
-906 -15359 0
-906 -1041 -15360 0
c (0<=(SATLiteral(906) - aux1286 + SATLiteral(1041)))
1041 15360 0
906 15360 0
906 1041 15359 0
c (( - aux1287 + SATLiteral(636) + SATLiteral(366))<=0)
-366 -15362 0
-636 -15362 0
-636 -366 -15363 0
c (0<=( - aux1287 + SATLiteral(636) + SATLiteral(366)))
366 15363 0
636 15363 0
636 366 15362 0
c ((SATLiteral(231) + aux1287 - aux1288)<=0)
15362 -15365 0
15363 -15366 0
-231 -15365 0
-231 15362 -15366 0
-231 15363 -15368 0
c (0<=(SATLiteral(231) + aux1287 - aux1288))
-15363 15368 0
-15362 15366 0
231 15368 0
231 -15363 15366 0
231 -15362 15365 0
c ((aux1284 + aux1286 - aux1289)<=0)
15359 -15370 0
15360 -15371 0
15353 -15370 0
15353 15359 -15371 0
15353 15360 -15373 0
15354 -15371 0
15354 15359 -15373 0
15354 15360 -15375 0
c (0<=(aux1284 + aux1286 - aux1289))
-15360 15375 0
-15359 15373 0
-15354 15375 0
-15354 -15360 15373 0
-15354 -15359 15371 0
-15353 15373 0
-15353 -15360 15371 0
-15353 -15359 15370 0
c ((SATLiteral(502) - aux1290 + SATLiteral(772))<=0)
-772 -15377 0
-502 -15377 0
-502 -772 -15378 0
c (0<=(SATLiteral(502) - aux1290 + SATLiteral(772)))
772 15378 0
502 15378 0
502 772 15377 0
c ((SATLiteral(1177) - aux1291 + SATLiteral(97))<=0)
-97 -15380 0
-1177 -15380 0
-1177 -97 -15381 0
c (0<=(SATLiteral(1177) - aux1291 + SATLiteral(97)))
97 15381 0
1177 15381 0
1177 97 15380 0
c ((SATLiteral(907) - aux1292 + SATLiteral(1042))<=0)
-1042 -15383 0
-907 -15383 0
-907 -1042 -15384 0
c (0<=(SATLiteral(907) - aux1292 + SATLiteral(1042)))
1042 15384 0
907 15384 0
907 1042 15383 0
c (( - aux1293 + SATLiteral(637) + SATLiteral(367))<=0)
-367 -15386 0
-637 -15386 0
-637 -367 -15387 0
c (0<=( - aux1293 + SATLiteral(637) + SATLiteral(367)))
367 15387 0
637 15387 0
637 367 15386 0
c ((SATLiteral(232) + aux1293 - aux1294)<=0)
15386 -15389 0
15387 -15390 0
-232 -15389 0
-232 15386 -15390 0
-232 15387 -15392 0
c (0<=(SATLiteral(232) + aux1293 - aux1294))
-15387 15392 0
-15386 15390 0
232 15392 0
232 -15387 15390 0
232 -15386 15389 0
c ((aux1290 + aux1292 - aux1295)<=0)
15383 -15394 0
15384 -15395 0
15377 -15394 0
15377 15383 -15395 0
15377 15384 -15397 0
15378 -15395 0
15378 15383 -15397 0
15378 15384 -15399 0
c (0<=(aux1290 + aux1292 - aux1295))
-15384 15399 0
-15383 15397 0
-15378 15399 0
-15378 -15384 15397 0
-15378 -15383 15395 0
-15377 15397 0
-15377 -15384 15395 0
-15377 -15383 15394 0
c ((SATLiteral(503) - aux1296 + SATLiteral(773))<=0)
-773 -15401 0
-503 -15401 0
-503 -773 -15402 0
c (0<=(SATLiteral(503) - aux1296 + SATLiteral(773)))
773 15402 0
503 15402 0
503 773 15401 0
c ((SATLiteral(1178) - aux1297 + SATLiteral(98))<=0)
-98 -15404 0
-1178 -15404 0
-1178 -98 -15405 0
c (0<=(SATLiteral(1178) - aux1297 + SATLiteral(98)))
98 15405 0
1178 15405 0
1178 98 15404 0
c ((SATLiteral(908) - aux1298 + SATLiteral(1043))<=0)
-1043 -15407 0
-908 -15407 0
-908 -1043 -15408 0
c (0<=(SATLiteral(908) - aux1298 + SATLiteral(1043)))
1043 15408 0
908 15408 0
908 1043 15407 0
c (( - aux1299 + SATLiteral(638) + SATLiteral(368))<=0)
-368 -15410 0
-638 -15410 0
-638 -368 -15411 0
c (0<=( - aux1299 + SATLiteral(638) + SATLiteral(368)))
368 15411 0
638 15411 0
638 368 15410 0
c ((SATLiteral(233) + aux1299 - aux1300)<=0)
15410 -15413 0
15411 -15414 0
-233 -15413 0
-233 15410 -15414 0
-233 15411 -15416 0
c (0<=(SATLiteral(233) + aux1299 - aux1300))
-15411 15416 0
-15410 15414 0
233 15416 0
233 -15411 15414 0
233 -15410 15413 0
c ((aux1296 + aux1298 - aux1301)<=0)
15407 -15418 0
15408 -15419 0
15401 -15418 0
15401 15407 -15419 0
15401 15408 -15421 0
15402 -15419 0
15402 15407 -15421 0
15402 15408 -15423 0
c (0<=(aux1296 + aux1298 - aux1301))
-15408 15423 0
-15407 15421 0
-15402 15423 0
-15402 -15408 15421 0
-15402 -15407 15419 0
-15401 15421 0
-15401 -15408 15419 0
-15401 -15407 15418 0
c ((SATLiteral(504) - aux1302 + SATLiteral(774))<=0)
-774 -15425 0
-504 -15425 0
-504 -774 -15426 0
c (0<=(SATLiteral(504) - aux1302 + SATLiteral(774)))
774 15426 0
504 15426 0
504 774 15425 0
c ((SATLiteral(1179) - aux1303 + SATLiteral(99))<=0)
-99 -15428 0
-1179 -15428 0
-1179 -99 -15429 0
c (0<=(SATLiteral(1179) - aux1303 + SATLiteral(99)))
99 15429 0
1179 15429 0
1179 99 15428 0
c ((SATLiteral(909) - aux1304 + SATLiteral(1044))<=0)
-1044 -15431 0
-909 -15431 0
-909 -1044 -15432 0
c (0<=(SATLiteral(909) - aux1304 + SATLiteral(1044)))
1044 15432 0
909 15432 0
909 1044 15431 0
c (( - aux1305 + SATLiteral(639) + SATLiteral(369))<=0)
-369 -15434 0
-639 -15434 0
-639 -369 -15435 0
c (0<=( - aux1305 + SATLiteral(639) + SATLiteral(369)))
369 15435 0
639 15435 0
639 369 15434 0
c ((SATLiteral(234) + aux1305 - aux1306)<=0)
15434 -15437 0
15435 -15438 0
-234 -15437 0
-234 15434 -15438 0
-234 15435 -15440 0
c (0<=(SATLiteral(234) + aux1305 - aux1306))
-15435 15440 0
-15434 15438 0
234 15440 0
234 -15435 15438 0
234 -15434 15437 0
c ((aux1302 + aux1304 - aux1307)<=0)
15431 -15442 0
15432 -15443 0
15425 -15442 0
15425 15431 -15443 0
15425 15432 -15445 0
15426 -15443 0
15426 15431 -15445 0
15426 15432 -15447 0
c (0<=(aux1302 + aux1304 - aux1307))
-15432 15447 0
-15431 15445 0
-15426 15447 0
-15426 -15432 15445 0
-15426 -15431 15443 0
-15425 15445 0
-15425 -15432 15443 0
-15425 -15431 15442 0
c ((SATLiteral(505) - aux1308 + SATLiteral(775))<=0)
-775 -15449 0
-505 -15449 0
-505 -775 -15450 0
c (0<=(SATLiteral(505) - aux1308 + SATLiteral(775)))
775 15450 0
505 15450 0
505 775 15449 0
c ((SATLiteral(1180) - aux1309 + SATLiteral(100))<=0)
-100 -15452 0
-1180 -15452 0
-1180 -100 -15453 0
c (0<=(SATLiteral(1180) - aux1309 + SATLiteral(100)))
100 15453 0
1180 15453 0
1180 100 15452 0
c ((SATLiteral(910) - aux1310 + SATLiteral(1045))<=0)
-1045 -15455 0
-910 -15455 0
-910 -1045 -15456 0
c (0<=(SATLiteral(910) - aux1310 + SATLiteral(1045)))
1045 15456 0
910 15456 0
910 1045 15455 0
c (( - aux1311 + SATLiteral(640) + SATLiteral(370))<=0)
-370 -15458 0
-640 -15458 0
-640 -370 -15459 0
c (0<=( - aux1311 + SATLiteral(640) + SATLiteral(370)))
370 15459 0
640 15459 0
640 370 15458 0
c ((SATLiteral(235) + aux1311 - aux1312)<=0)
15458 -15461 0
15459 -15462 0
-235 -15461 0
-235 15458 -15462 0
-235 15459 -15464 0
c (0<=(SATLiteral(235) + aux1311 - aux1312))
-15459 15464 0
-15458 15462 0
235 15464 0
235 -15459 15462 0
235 -15458 15461 0
c ((aux1308 + aux1310 - aux1313)<=0)
15455 -15466 0
15456 -15467 0
15449 -15466 0
15449 15455 -15467 0
15449 15456 -15469 0
15450 -15467 0
15450 15455 -15469 0
15450 15456 -15471 0
c (0<=(aux1308 + aux1310 - aux1313))
-15456 15471 0
-15455 15469 0
-15450 15471 0
-15450 -15456 15469 0
-15450 -15455 15467 0
-15449 15469 0
-15449 -15456 15467 0
-15449 -15455 15466 0
c ((SATLiteral(512) - aux1314 + SATLiteral(782))<=0)
-782 -15473 0
-512 -15473 0
-512 -782 -15474 0
c (0<=(SATLiteral(512) - aux1314 + SATLiteral(782)))
782 15474 0
512 15474 0
512 782 15473 0
c ((SATLiteral(1187) - aux1315 + SATLiteral(107))<=0)
-107 -15476 0
-1187 -15476 0
-1187 -107 -15477 0
c (0<=(SATLiteral(1187) - aux1315 + SATLiteral(107)))
107 15477 0
1187 15477 0
1187 107 15476 0
c ((SATLiteral(917) - aux1316 + SATLiteral(1052))<=0)
-1052 -15479 0
-917 -15479 0
-917 -1052 -15480 0
c (0<=(SATLiteral(917) - aux1316 + SATLiteral(1052)))
1052 15480 0
917 15480 0
917 1052 15479 0
c (( - aux1317 + SATLiteral(647) + SATLiteral(377))<=0)
-377 -15482 0
-647 -15482 0
-647 -377 -15483 0
c (0<=( - aux1317 + SATLiteral(647) + SATLiteral(377)))
377 15483 0
647 15483 0
647 377 15482 0
c ((SATLiteral(242) + aux1317 - aux1318)<=0)
15482 -15485 0
15483 -15486 0
-242 -15485 0
-242 15482 -15486 0
-242 15483 -15488 0
c (0<=(SATLiteral(242) + aux1317 - aux1318))
-15483 15488 0
-15482 15486 0
242 15488 0
242 -15483 15486 0
242 -15482 15485 0
c ((aux1314 + aux1316 - aux1319)<=0)
15479 -15490 0
15480 -15491 0
15473 -15490 0
15473 15479 -15491 0
15473 15480 -15493 0
15474 -15491 0
15474 15479 -15493 0
15474 15480 -15495 0
c (0<=(aux1314 + aux1316 - aux1319))
-15480 15495 0
-15479 15493 0
-15474 15495 0
-15474 -15480 15493 0
-15474 -15479 15491 0
-15473 15493 0
-15473 -15480 15491 0
-15473 -15479 15490 0
c ((SATLiteral(513) - aux1320 + SATLiteral(783))<=0)
-783 -15497 0
-513 -15497 0
-513 -783 -15498 0
c (0<=(SATLiteral(513) - aux1320 + SATLiteral(783)))
783 15498 0
513 15498 0
513 783 15497 0
c ((SATLiteral(1188) - aux1321 + SATLiteral(108))<=0)
-108 -15500 0
-1188 -15500 0
-1188 -108 -15501 0
c (0<=(SATLiteral(1188) - aux1321 + SATLiteral(108)))
108 15501 0
1188 15501 0
1188 108 15500 0
c ((SATLiteral(918) - aux1322 + SATLiteral(1053))<=0)
-1053 -15503 0
-918 -15503 0
-918 -1053 -15504 0
c (0<=(SATLiteral(918) - aux1322 + SATLiteral(1053)))
1053 15504 0
918 15504 0
918 1053 15503 0
c (( - aux1323 + SATLiteral(648) + SATLiteral(378))<=0)
-378 -15506 0
-648 -15506 0
-648 -378 -15507 0
c (0<=( - aux1323 + SATLiteral(648) + SATLiteral(378)))
378 15507 0
648 15507 0
648 378 15506 0
c ((SATLiteral(243) + aux1323 - aux1324)<=0)
15506 -15509 0
15507 -15510 0
-243 -15509 0
-243 15506 -15510 0
-243 15507 -15512 0
c (0<=(SATLiteral(243) + aux1323 - aux1324))
-15507 15512 0
-15506 15510 0
243 15512 0
243 -15507 15510 0
243 -15506 15509 0
c ((aux1320 + aux1322 - aux1325)<=0)
15503 -15514 0
15504 -15515 0
15497 -15514 0
15497 15503 -15515 0
15497 15504 -15517 0
15498 -15515 0
15498 15503 -15517 0
15498 15504 -15519 0
c (0<=(aux1320 + aux1322 - aux1325))
-15504 15519 0
-15503 15517 0
-15498 15519 0
-15498 -15504 15517 0
-15498 -15503 15515 0
-15497 15517 0
-15497 -15504 15515 0
-15497 -15503 15514 0
c ((SATLiteral(514) - aux1326 + SATLiteral(784))<=0)
-784 -15521 0
-514 -15521 0
-514 -784 -15522 0
c (0<=(SATLiteral(514) - aux1326 + SATLiteral(784)))
784 15522 0
514 15522 0
514 784 15521 0
c ((SATLiteral(1189) - aux1327 + SATLiteral(109))<=0)
-109 -15524 0
-1189 -15524 0
-1189 -109 -15525 0
c (0<=(SATLiteral(1189) - aux1327 + SATLiteral(109)))
109 15525 0
1189 15525 0
1189 109 15524 0
c ((SATLiteral(919) - aux1328 + SATLiteral(1054))<=0)
-1054 -15527 0
-919 -15527 0
-919 -1054 -15528 0
c (0<=(SATLiteral(919) - aux1328 + SATLiteral(1054)))
1054 15528 0
919 15528 0
919 1054 15527 0
c (( - aux1329 + SATLiteral(649) + SATLiteral(379))<=0)
-379 -15530 0
-649 -15530 0
-649 -379 -15531 0
c (0<=( - aux1329 + SATLiteral(649) + SATLiteral(379)))
379 15531 0
649 15531 0
649 379 15530 0
c ((SATLiteral(244) + aux1329 - aux1330)<=0)
15530 -15533 0
15531 -15534 0
-244 -15533 0
-244 15530 -15534 0
-244 15531 -15536 0
c (0<=(SATLiteral(244) + aux1329 - aux1330))
-15531 15536 0
-15530 15534 0
244 15536 0
244 -15531 15534 0
244 -15530 15533 0
c ((aux1326 + aux1328 - aux1331)<=0)
15527 -15538 0
15528 -15539 0
15521 -15538 0
15521 15527 -15539 0
15521 15528 -15541 0
15522 -15539 0
15522 15527 -15541 0
15522 15528 -15543 0
c (0<=(aux1326 + aux1328 - aux1331))
-15528 15543 0
-15527 15541 0
-15522 15543 0
-15522 -15528 15541 0
-15522 -15527 15539 0
-15521 15541 0
-15521 -15528 15539 0
-15521 -15527 15538 0
c ((SATLiteral(515) - aux1332 + SATLiteral(785))<=0)
-785 -15545 0
-515 -15545 0
-515 -785 -15546 0
c (0<=(SATLiteral(515) - aux1332 + SATLiteral(785)))
785 15546 0
515 15546 0
515 785 15545 0
c ((SATLiteral(1190) - aux1333 + SATLiteral(110))<=0)
-110 -15548 0
-1190 -15548 0
-1190 -110 -15549 0
c (0<=(SATLiteral(1190) - aux1333 + SATLiteral(110)))
110 15549 0
1190 15549 0
1190 110 15548 0
c ((SATLiteral(920) - aux1334 + SATLiteral(1055))<=0)
-1055 -15551 0
-920 -15551 0
-920 -1055 -15552 0
c (0<=(SATLiteral(920) - aux1334 + SATLiteral(1055)))
1055 15552 0
920 15552 0
920 1055 15551 0
c (( - aux1335 + SATLiteral(650) + SATLiteral(380))<=0)
-380 -15554 0
-650 -15554 0
-650 -380 -15555 0
c (0<=( - aux1335 + SATLiteral(650) + SATLiteral(380)))
380 15555 0
650 15555 0
650 380 15554 0
c ((SATLiteral(245) + aux1335 - aux1336)<=0)
15554 -15557 0
15555 -15558 0
-245 -15557 0
-245 15554 -15558 0
-245 15555 -15560 0
c (0<=(SATLiteral(245) + aux1335 - aux1336))
-15555 15560 0
-15554 15558 0
245 15560 0
245 -15555 15558 0
245 -15554 15557 0
c ((aux1332 + aux1334 - aux1337)<=0)
15551 -15562 0
15552 -15563 0
15545 -15562 0
15545 15551 -15563 0
15545 15552 -15565 0
15546 -15563 0
15546 15551 -15565 0
15546 15552 -15567 0
c (0<=(aux1332 + aux1334 - aux1337))
-15552 15567 0
-15551 15565 0
-15546 15567 0
-15546 -15552 15565 0
-15546 -15551 15563 0
-15545 15565 0
-15545 -15552 15563 0
-15545 -15551 15562 0
c ((SATLiteral(516) - aux1338 + SATLiteral(786))<=0)
-786 -15569 0
-516 -15569 0
-516 -786 -15570 0
c (0<=(SATLiteral(516) - aux1338 + SATLiteral(786)))
786 15570 0
516 15570 0
516 786 15569 0
c ((SATLiteral(1191) - aux1339 + SATLiteral(111))<=0)
-111 -15572 0
-1191 -15572 0
-1191 -111 -15573 0
c (0<=(SATLiteral(1191) - aux1339 + SATLiteral(111)))
111 15573 0
1191 15573 0
1191 111 15572 0
c ((SATLiteral(921) - aux1340 + SATLiteral(1056))<=0)
-1056 -15575 0
-921 -15575 0
-921 -1056 -15576 0
c (0<=(SATLiteral(921) - aux1340 + SATLiteral(1056)))
1056 15576 0
921 15576 0
921 1056 15575 0
c (( - aux1341 + SATLiteral(651) + SATLiteral(381))<=0)
-381 -15578 0
-651 -15578 0
-651 -381 -15579 0
c (0<=( - aux1341 + SATLiteral(651) + SATLiteral(381)))
381 15579 0
651 15579 0
651 381 15578 0
c ((SATLiteral(246) + aux1341 - aux1342)<=0)
15578 -15581 0
15579 -15582 0
-246 -15581 0
-246 15578 -15582 0
-246 15579 -15584 0
c (0<=(SATLiteral(246) + aux1341 - aux1342))
-15579 15584 0
-15578 15582 0
246 15584 0
246 -15579 15582 0
246 -15578 15581 0
c ((aux1338 + aux1340 - aux1343)<=0)
15575 -15586 0
15576 -15587 0
15569 -15586 0
15569 15575 -15587 0
15569 15576 -15589 0
15570 -15587 0
15570 15575 -15589 0
15570 15576 -15591 0
c (0<=(aux1338 + aux1340 - aux1343))
-15576 15591 0
-15575 15589 0
-15570 15591 0
-15570 -15576 15589 0
-15570 -15575 15587 0
-15569 15589 0
-15569 -15576 15587 0
-15569 -15575 15586 0
c ((SATLiteral(517) - aux1344 + SATLiteral(787))<=0)
-787 -15593 0
-517 -15593 0
-517 -787 -15594 0
c (0<=(SATLiteral(517) - aux1344 + SATLiteral(787)))
787 15594 0
517 15594 0
517 787 15593 0
c ((SATLiteral(1192) - aux1345 + SATLiteral(112))<=0)
-112 -15596 0
-1192 -15596 0
-1192 -112 -15597 0
c (0<=(SATLiteral(1192) - aux1345 + SATLiteral(112)))
112 15597 0
1192 15597 0
1192 112 15596 0
c ((SATLiteral(922) - aux1346 + SATLiteral(1057))<=0)
-1057 -15599 0
-922 -15599 0
-922 -1057 -15600 0
c (0<=(SATLiteral(922) - aux1346 + SATLiteral(1057)))
1057 15600 0
922 15600 0
922 1057 15599 0
c (( - aux1347 + SATLiteral(652) + SATLiteral(382))<=0)
-382 -15602 0
-652 -15602 0
-652 -382 -15603 0
c (0<=( - aux1347 + SATLiteral(652) + SATLiteral(382)))
382 15603 0
652 15603 0
652 382 15602 0
c ((SATLiteral(247) + aux1347 - aux1348)<=0)
15602 -15605 0
15603 -15606 0
-247 -15605 0
-247 15602 -15606 0
-247 15603 -15608 0
c (0<=(SATLiteral(247) + aux1347 - aux1348))
-15603 15608 0
-15602 15606 0
247 15608 0
247 -15603 15606 0
247 -15602 15605 0
c ((aux1344 + aux1346 - aux1349)<=0)
15599 -15610 0
15600 -15611 0
15593 -15610 0
15593 15599 -15611 0
15593 15600 -15613 0
15594 -15611 0
15594 15599 -15613 0
15594 15600 -15615 0
c (0<=(aux1344 + aux1346 - aux1349))
-15600 15615 0
-15599 15613 0
-15594 15615 0
-15594 -15600 15613 0
-15594 -15599 15611 0
-15593 15613 0
-15593 -15600 15611 0
-15593 -15599 15610 0
c ((SATLiteral(518) - aux1350 + SATLiteral(788))<=0)
-788 -15617 0
-518 -15617 0
-518 -788 -15618 0
c (0<=(SATLiteral(518) - aux1350 + SATLiteral(788)))
788 15618 0
518 15618 0
518 788 15617 0
c ((SATLiteral(1193) - aux1351 + SATLiteral(113))<=0)
-113 -15620 0
-1193 -15620 0
-1193 -113 -15621 0
c (0<=(SATLiteral(1193) - aux1351 + SATLiteral(113)))
113 15621 0
1193 15621 0
1193 113 15620 0
c ((SATLiteral(923) - aux1352 + SATLiteral(1058))<=0)
-1058 -15623 0
-923 -15623 0
-923 -1058 -15624 0
c (0<=(SATLiteral(923) - aux1352 + SATLiteral(1058)))
1058 15624 0
923 15624 0
923 1058 15623 0
c (( - aux1353 + SATLiteral(653) + SATLiteral(383))<=0)
-383 -15626 0
-653 -15626 0
-653 -383 -15627 0
c (0<=( - aux1353 + SATLiteral(653) + SATLiteral(383)))
383 15627 0
653 15627 0
653 383 15626 0
c ((SATLiteral(248) + aux1353 - aux1354)<=0)
15626 -15629 0
15627 -15630 0
-248 -15629 0
-248 15626 -15630 0
-248 15627 -15632 0
c (0<=(SATLiteral(248) + aux1353 - aux1354))
-15627 15632 0
-15626 15630 0
248 15632 0
248 -15627 15630 0
248 -15626 15629 0
c ((aux1350 + aux1352 - aux1355)<=0)
15623 -15634 0
15624 -15635 0
15617 -15634 0
15617 15623 -15635 0
15617 15624 -15637 0
15618 -15635 0
15618 15623 -15637 0
15618 15624 -15639 0
c (0<=(aux1350 + aux1352 - aux1355))
-15624 15639 0
-15623 15637 0
-15618 15639 0
-15618 -15624 15637 0
-15618 -15623 15635 0
-15617 15637 0
-15617 -15624 15635 0
-15617 -15623 15634 0
c ((SATLiteral(519) - aux1356 + SATLiteral(789))<=0)
-789 -15641 0
-519 -15641 0
-519 -789 -15642 0
c (0<=(SATLiteral(519) - aux1356 + SATLiteral(789)))
789 15642 0
519 15642 0
519 789 15641 0
c ((SATLiteral(1194) - aux1357 + SATLiteral(114))<=0)
-114 -15644 0
-1194 -15644 0
-1194 -114 -15645 0
c (0<=(SATLiteral(1194) - aux1357 + SATLiteral(114)))
114 15645 0
1194 15645 0
1194 114 15644 0
c ((SATLiteral(924) - aux1358 + SATLiteral(1059))<=0)
-1059 -15647 0
-924 -15647 0
-924 -1059 -15648 0
c (0<=(SATLiteral(924) - aux1358 + SATLiteral(1059)))
1059 15648 0
924 15648 0
924 1059 15647 0
c (( - aux1359 + SATLiteral(654) + SATLiteral(384))<=0)
-384 -15650 0
-654 -15650 0
-654 -384 -15651 0
c (0<=( - aux1359 + SATLiteral(654) + SATLiteral(384)))
384 15651 0
654 15651 0
654 384 15650 0
c ((SATLiteral(249) + aux1359 - aux1360)<=0)
15650 -15653 0
15651 -15654 0
-249 -15653 0
-249 15650 -15654 0
-249 15651 -15656 0
c (0<=(SATLiteral(249) + aux1359 - aux1360))
-15651 15656 0
-15650 15654 0
249 15656 0
249 -15651 15654 0
249 -15650 15653 0
c ((aux1356 + aux1358 - aux1361)<=0)
15647 -15658 0
15648 -15659 0
15641 -15658 0
15641 15647 -15659 0
15641 15648 -15661 0
15642 -15659 0
15642 15647 -15661 0
15642 15648 -15663 0
c (0<=(aux1356 + aux1358 - aux1361))
-15648 15663 0
-15647 15661 0
-15642 15663 0
-15642 -15648 15661 0
-15642 -15647 15659 0
-15641 15661 0
-15641 -15648 15659 0
-15641 -15647 15658 0
c ((SATLiteral(520) - aux1362 + SATLiteral(790))<=0)
-790 -15665 0
-520 -15665 0
-520 -790 -15666 0
c (0<=(SATLiteral(520) - aux1362 + SATLiteral(790)))
790 15666 0
520 15666 0
520 790 15665 0
c ((SATLiteral(1195) - aux1363 + SATLiteral(115))<=0)
-115 -15668 0
-1195 -15668 0
-1195 -115 -15669 0
c (0<=(SATLiteral(1195) - aux1363 + SATLiteral(115)))
115 15669 0
1195 15669 0
1195 115 15668 0
c ((SATLiteral(925) - aux1364 + SATLiteral(1060))<=0)
-1060 -15671 0
-925 -15671 0
-925 -1060 -15672 0
c (0<=(SATLiteral(925) - aux1364 + SATLiteral(1060)))
1060 15672 0
925 15672 0
925 1060 15671 0
c (( - aux1365 + SATLiteral(655) + SATLiteral(385))<=0)
-385 -15674 0
-655 -15674 0
-655 -385 -15675 0
c (0<=( - aux1365 + SATLiteral(655) + SATLiteral(385)))
385 15675 0
655 15675 0
655 385 15674 0
c ((SATLiteral(250) + aux1365 - aux1366)<=0)
15674 -15677 0
15675 -15678 0
-250 -15677 0
-250 15674 -15678 0
-250 15675 -15680 0
c (0<=(SATLiteral(250) + aux1365 - aux1366))
-15675 15680 0
-15674 15678 0
250 15680 0
250 -15675 15678 0
250 -15674 15677 0
c ((aux1362 + aux1364 - aux1367)<=0)
15671 -15682 0
15672 -15683 0
15665 -15682 0
15665 15671 -15683 0
15665 15672 -15685 0
15666 -15683 0
15666 15671 -15685 0
15666 15672 -15687 0
c (0<=(aux1362 + aux1364 - aux1367))
-15672 15687 0
-15671 15685 0
-15666 15687 0
-15666 -15672 15685 0
-15666 -15671 15683 0
-15665 15685 0
-15665 -15672 15683 0
-15665 -15671 15682 0
c ((SATLiteral(527) - aux1368 + SATLiteral(797))<=0)
-797 -15689 0
-527 -15689 0
-527 -797 -15690 0
c (0<=(SATLiteral(527) - aux1368 + SATLiteral(797)))
797 15690 0
527 15690 0
527 797 15689 0
c ((SATLiteral(1202) - aux1369 + SATLiteral(122))<=0)
-122 -15692 0
-1202 -15692 0
-1202 -122 -15693 0
c (0<=(SATLiteral(1202) - aux1369 + SATLiteral(122)))
122 15693 0
1202 15693 0
1202 122 15692 0
c ((SATLiteral(932) - aux1370 + SATLiteral(1067))<=0)
-1067 -15695 0
-932 -15695 0
-932 -1067 -15696 0
c (0<=(SATLiteral(932) - aux1370 + SATLiteral(1067)))
1067 15696 0
932 15696 0
932 1067 15695 0
c (( - aux1371 + SATLiteral(662) + SATLiteral(392))<=0)
-392 -15698 0
-662 -15698 0
-662 -392 -15699 0
c (0<=( - aux1371 + SATLiteral(662) + SATLiteral(392)))
392 15699 0
662 15699 0
662 392 15698 0
c ((SATLiteral(257) + aux1371 - aux1372)<=0)
15698 -15701 0
15699 -15702 0
-257 -15701 0
-257 15698 -15702 0
-257 15699 -15704 0
c (0<=(SATLiteral(257) + aux1371 - aux1372))
-15699 15704 0
-15698 15702 0
257 15704 0
257 -15699 15702 0
257 -15698 15701 0
c ((aux1368 + aux1370 - aux1373)<=0)
15695 -15706 0
15696 -15707 0
15689 -15706 0
15689 15695 -15707 0
15689 15696 -15709 0
15690 -15707 0
15690 15695 -15709 0
15690 15696 -15711 0
c (0<=(aux1368 + aux1370 - aux1373))
-15696 15711 0
-15695 15709 0
-15690 15711 0
-15690 -15696 15709 0
-15690 -15695 15707 0
-15689 15709 0
-15689 -15696 15707 0
-15689 -15695 15706 0
c ((SATLiteral(528) - aux1374 + SATLiteral(798))<=0)
-798 -15713 0
-528 -15713 0
-528 -798 -15714 0
c (0<=(SATLiteral(528) - aux1374 + SATLiteral(798)))
798 15714 0
528 15714 0
528 798 15713 0
c ((SATLiteral(1203) - aux1375 + SATLiteral(123))<=0)
-123 -15716 0
-1203 -15716 0
-1203 -123 -15717 0
c (0<=(SATLiteral(1203) - aux1375 + SATLiteral(123)))
123 15717 0
1203 15717 0
1203 123 15716 0
c ((SATLiteral(933) - aux1376 + SATLiteral(1068))<=0)
-1068 -15719 0
-933 -15719 0
-933 -1068 -15720 0
c (0<=(SATLiteral(933) - aux1376 + SATLiteral(1068)))
1068 15720 0
933 15720 0
933 1068 15719 0
c (( - aux1377 + SATLiteral(663) + SATLiteral(393))<=0)
-393 -15722 0
-663 -15722 0
-663 -393 -15723 0
c (0<=( - aux1377 + SATLiteral(663) + SATLiteral(393)))
393 15723 0
663 15723 0
663 393 15722 0
c ((SATLiteral(258) + aux1377 - aux1378)<=0)
15722 -15725 0
15723 -15726 0
-258 -15725 0
-258 15722 -15726 0
-258 15723 -15728 0
c (0<=(SATLiteral(258) + aux1377 - aux1378))
-15723 15728 0
-15722 15726 0
258 15728 0
258 -15723 15726 0
258 -15722 15725 0
c ((aux1374 + aux1376 - aux1379)<=0)
15719 -15730 0
15720 -15731 0
15713 -15730 0
15713 15719 -15731 0
15713 15720 -15733 0
15714 -15731 0
15714 15719 -15733 0
15714 15720 -15735 0
c (0<=(aux1374 + aux1376 - aux1379))
-15720 15735 0
-15719 15733 0
-15714 15735 0
-15714 -15720 15733 0
-15714 -15719 15731 0
-15713 15733 0
-15713 -15720 15731 0
-15713 -15719 15730 0
c ((SATLiteral(529) - aux1380 + SATLiteral(799))<=0)
-799 -15737 0
-529 -15737 0
-529 -799 -15738 0
c (0<=(SATLiteral(529) - aux1380 + SATLiteral(799)))
799 15738 0
529 15738 0
529 799 15737 0
c ((SATLiteral(1204) - aux1381 + SATLiteral(124))<=0)
-124 -15740 0
-1204 -15740 0
-1204 -124 -15741 0
c (0<=(SATLiteral(1204) - aux1381 + SATLiteral(124)))
124 15741 0
1204 15741 0
1204 124 15740 0
c ((SATLiteral(934) - aux1382 + SATLiteral(1069))<=0)
-1069 -15743 0
-934 -15743 0
-934 -1069 -15744 0
c (0<=(SATLiteral(934) - aux1382 + SATLiteral(1069)))
1069 15744 0
934 15744 0
934 1069 15743 0
c (( - aux1383 + SATLiteral(664) + SATLiteral(394))<=0)
-394 -15746 0
-664 -15746 0
-664 -394 -15747 0
c (0<=( - aux1383 + SATLiteral(664) + SATLiteral(394)))
394 15747 0
664 15747 0
664 394 15746 0
c ((SATLiteral(259) + aux1383 - aux1384)<=0)
15746 -15749 0
15747 -15750 0
-259 -15749 0
-259 15746 -15750 0
-259 15747 -15752 0
c (0<=(SATLiteral(259) + aux1383 - aux1384))
-15747 15752 0
-15746 15750 0
259 15752 0
259 -15747 15750 0
259 -15746 15749 0
c ((aux1380 + aux1382 - aux1385)<=0)
15743 -15754 0
15744 -15755 0
15737 -15754 0
15737 15743 -15755 0
15737 15744 -15757 0
15738 -15755 0
15738 15743 -15757 0
15738 15744 -15759 0
c (0<=(aux1380 + aux1382 - aux1385))
-15744 15759 0
-15743 15757 0
-15738 15759 0
-15738 -15744 15757 0
-15738 -15743 15755 0
-15737 15757 0
-15737 -15744 15755 0
-15737 -15743 15754 0
c ((SATLiteral(530) - aux1386 + SATLiteral(800))<=0)
-800 -15761 0
-530 -15761 0
-530 -800 -15762 0
c (0<=(SATLiteral(530) - aux1386 + SATLiteral(800)))
800 15762 0
530 15762 0
530 800 15761 0
c ((SATLiteral(1205) - aux1387 + SATLiteral(125))<=0)
-125 -15764 0
-1205 -15764 0
-1205 -125 -15765 0
c (0<=(SATLiteral(1205) - aux1387 + SATLiteral(125)))
125 15765 0
1205 15765 0
1205 125 15764 0
c ((SATLiteral(935) - aux1388 + SATLiteral(1070))<=0)
-1070 -15767 0
-935 -15767 0
-935 -1070 -15768 0
c (0<=(SATLiteral(935) - aux1388 + SATLiteral(1070)))
1070 15768 0
935 15768 0
935 1070 15767 0
c (( - aux1389 + SATLiteral(665) + SATLiteral(395))<=0)
-395 -15770 0
-665 -15770 0
-665 -395 -15771 0
c (0<=( - aux1389 + SATLiteral(665) + SATLiteral(395)))
395 15771 0
665 15771 0
665 395 15770 0
c ((SATLiteral(260) + aux1389 - aux1390)<=0)
15770 -15773 0
15771 -15774 0
-260 -15773 0
-260 15770 -15774 0
-260 15771 -15776 0
c (0<=(SATLiteral(260) + aux1389 - aux1390))
-15771 15776 0
-15770 15774 0
260 15776 0
260 -15771 15774 0
260 -15770 15773 0
c ((aux1386 + aux1388 - aux1391)<=0)
15767 -15778 0
15768 -15779 0
15761 -15778 0
15761 15767 -15779 0
15761 15768 -15781 0
15762 -15779 0
15762 15767 -15781 0
15762 15768 -15783 0
c (0<=(aux1386 + aux1388 - aux1391))
-15768 15783 0
-15767 15781 0
-15762 15783 0
-15762 -15768 15781 0
-15762 -15767 15779 0
-15761 15781 0
-15761 -15768 15779 0
-15761 -15767 15778 0
c ((SATLiteral(531) - aux1392 + SATLiteral(801))<=0)
-801 -15785 0
-531 -15785 0
-531 -801 -15786 0
c (0<=(SATLiteral(531) - aux1392 + SATLiteral(801)))
801 15786 0
531 15786 0
531 801 15785 0
c ((SATLiteral(1206) - aux1393 + SATLiteral(126))<=0)
-126 -15788 0
-1206 -15788 0
-1206 -126 -15789 0
c (0<=(SATLiteral(1206) - aux1393 + SATLiteral(126)))
126 15789 0
1206 15789 0
1206 126 15788 0
c ((SATLiteral(936) - aux1394 + SATLiteral(1071))<=0)
-1071 -15791 0
-936 -15791 0
-936 -1071 -15792 0
c (0<=(SATLiteral(936) - aux1394 + SATLiteral(1071)))
1071 15792 0
936 15792 0
936 1071 15791 0
c (( - aux1395 + SATLiteral(666) + SATLiteral(396))<=0)
-396 -15794 0
-666 -15794 0
-666 -396 -15795 0
c (0<=( - aux1395 + SATLiteral(666) + SATLiteral(396)))
396 15795 0
666 15795 0
666 396 15794 0
c ((SATLiteral(261) + aux1395 - aux1396)<=0)
15794 -15797 0
15795 -15798 0
-261 -15797 0
-261 15794 -15798 0
-261 15795 -15800 0
c (0<=(SATLiteral(261) + aux1395 - aux1396))
-15795 15800 0
-15794 15798 0
261 15800 0
261 -15795 15798 0
261 -15794 15797 0
c ((aux1392 + aux1394 - aux1397)<=0)
15791 -15802 0
15792 -15803 0
15785 -15802 0
15785 15791 -15803 0
15785 15792 -15805 0
15786 -15803 0
15786 15791 -15805 0
15786 15792 -15807 0
c (0<=(aux1392 + aux1394 - aux1397))
-15792 15807 0
-15791 15805 0
-15786 15807 0
-15786 -15792 15805 0
-15786 -15791 15803 0
-15785 15805 0
-15785 -15792 15803 0
-15785 -15791 15802 0
c ((SATLiteral(532) - aux1398 + SATLiteral(802))<=0)
-802 -15809 0
-532 -15809 0
-532 -802 -15810 0
c (0<=(SATLiteral(532) - aux1398 + SATLiteral(802)))
802 15810 0
532 15810 0
532 802 15809 0
c ((SATLiteral(1207) - aux1399 + SATLiteral(127))<=0)
-127 -15812 0
-1207 -15812 0
-1207 -127 -15813 0
c (0<=(SATLiteral(1207) - aux1399 + SATLiteral(127)))
127 15813 0
1207 15813 0
1207 127 15812 0
c ((SATLiteral(937) - aux1400 + SATLiteral(1072))<=0)
-1072 -15815 0
-937 -15815 0
-937 -1072 -15816 0
c (0<=(SATLiteral(937) - aux1400 + SATLiteral(1072)))
1072 15816 0
937 15816 0
937 1072 15815 0
c (( - aux1401 + SATLiteral(667) + SATLiteral(397))<=0)
-397 -15818 0
-667 -15818 0
-667 -397 -15819 0
c (0<=( - aux1401 + SATLiteral(667) + SATLiteral(397)))
397 15819 0
667 15819 0
667 397 15818 0
c ((SATLiteral(262) + aux1401 - aux1402)<=0)
15818 -15821 0
15819 -15822 0
-262 -15821 0
-262 15818 -15822 0
-262 15819 -15824 0
c (0<=(SATLiteral(262) + aux1401 - aux1402))
-15819 15824 0
-15818 15822 0
262 15824 0
262 -15819 15822 0
262 -15818 15821 0
c ((aux1398 + aux1400 - aux1403)<=0)
15815 -15826 0
15816 -15827 0
15809 -15826 0
15809 15815 -15827 0
15809 15816 -15829 0
15810 -15827 0
15810 15815 -15829 0
15810 15816 -15831 0
c (0<=(aux1398 + aux1400 - aux1403))
-15816 15831 0
-15815 15829 0
-15810 15831 0
-15810 -15816 15829 0
-15810 -15815 15827 0
-15809 15829 0
-15809 -15816 15827 0
-15809 -15815 15826 0
c ((SATLiteral(533) - aux1404 + SATLiteral(803))<=0)
-803 -15833 0
-533 -15833 0
-533 -803 -15834 0
c (0<=(SATLiteral(533) - aux1404 + SATLiteral(803)))
803 15834 0
533 15834 0
533 803 15833 0
c ((SATLiteral(1208) - aux1405 + SATLiteral(128))<=0)
-128 -15836 0
-1208 -15836 0
-1208 -128 -15837 0
c (0<=(SATLiteral(1208) - aux1405 + SATLiteral(128)))
128 15837 0
1208 15837 0
1208 128 15836 0
c ((SATLiteral(938) - aux1406 + SATLiteral(1073))<=0)
-1073 -15839 0
-938 -15839 0
-938 -1073 -15840 0
c (0<=(SATLiteral(938) - aux1406 + SATLiteral(1073)))
1073 15840 0
938 15840 0
938 1073 15839 0
c (( - aux1407 + SATLiteral(668) + SATLiteral(398))<=0)
-398 -15842 0
-668 -15842 0
-668 -398 -15843 0
c (0<=( - aux1407 + SATLiteral(668) + SATLiteral(398)))
398 15843 0
668 15843 0
668 398 15842 0
c ((SATLiteral(263) + aux1407 - aux1408)<=0)
15842 -15845 0
15843 -15846 0
-263 -15845 0
-263 15842 -15846 0
-263 15843 -15848 0
c (0<=(SATLiteral(263) + aux1407 - aux1408))
-15843 15848 0
-15842 15846 0
263 15848 0
263 -15843 15846 0
263 -15842 15845 0
c ((aux1404 + aux1406 - aux1409)<=0)
15839 -15850 0
15840 -15851 0
15833 -15850 0
15833 15839 -15851 0
15833 15840 -15853 0
15834 -15851 0
15834 15839 -15853 0
15834 15840 -15855 0
c (0<=(aux1404 + aux1406 - aux1409))
-15840 15855 0
-15839 15853 0
-15834 15855 0
-15834 -15840 15853 0
-15834 -15839 15851 0
-15833 15853 0
-15833 -15840 15851 0
-15833 -15839 15850 0
c ((SATLiteral(534) - aux1410 + SATLiteral(804))<=0)
-804 -15857 0
-534 -15857 0
-534 -804 -15858 0
c (0<=(SATLiteral(534) - aux1410 + SATLiteral(804)))
804 15858 0
534 15858 0
534 804 15857 0
c ((SATLiteral(1209) - aux1411 + SATLiteral(129))<=0)
-129 -15860 0
-1209 -15860 0
-1209 -129 -15861 0
c (0<=(SATLiteral(1209) - aux1411 + SATLiteral(129)))
129 15861 0
1209 15861 0
1209 129 15860 0
c ((SATLiteral(939) - aux1412 + SATLiteral(1074))<=0)
-1074 -15863 0
-939 -15863 0
-939 -1074 -15864 0
c (0<=(SATLiteral(939) - aux1412 + SATLiteral(1074)))
1074 15864 0
939 15864 0
939 1074 15863 0
c (( - aux1413 + SATLiteral(669) + SATLiteral(399))<=0)
-399 -15866 0
-669 -15866 0
-669 -399 -15867 0
c (0<=( - aux1413 + SATLiteral(669) + SATLiteral(399)))
399 15867 0
669 15867 0
669 399 15866 0
c ((SATLiteral(264) + aux1413 - aux1414)<=0)
15866 -15869 0
15867 -15870 0
-264 -15869 0
-264 15866 -15870 0
-264 15867 -15872 0
c (0<=(SATLiteral(264) + aux1413 - aux1414))
-15867 15872 0
-15866 15870 0
264 15872 0
264 -15867 15870 0
264 -15866 15869 0
c ((aux1410 + aux1412 - aux1415)<=0)
15863 -15874 0
15864 -15875 0
15857 -15874 0
15857 15863 -15875 0
15857 15864 -15877 0
15858 -15875 0
15858 15863 -15877 0
15858 15864 -15879 0
c (0<=(aux1410 + aux1412 - aux1415))
-15864 15879 0
-15863 15877 0
-15858 15879 0
-15858 -15864 15877 0
-15858 -15863 15875 0
-15857 15877 0
-15857 -15864 15875 0
-15857 -15863 15874 0
c ((SATLiteral(535) - aux1416 + SATLiteral(805))<=0)
-805 -15881 0
-535 -15881 0
-535 -805 -15882 0
c (0<=(SATLiteral(535) - aux1416 + SATLiteral(805)))
805 15882 0
535 15882 0
535 805 15881 0
c ((SATLiteral(1210) - aux1417 + SATLiteral(130))<=0)
-130 -15884 0
-1210 -15884 0
-1210 -130 -15885 0
c (0<=(SATLiteral(1210) - aux1417 + SATLiteral(130)))
130 15885 0
1210 15885 0
1210 130 15884 0
c ((SATLiteral(940) - aux1418 + SATLiteral(1075))<=0)
-1075 -15887 0
-940 -15887 0
-940 -1075 -15888 0
c (0<=(SATLiteral(940) - aux1418 + SATLiteral(1075)))
1075 15888 0
940 15888 0
940 1075 15887 0
c (( - aux1419 + SATLiteral(670) + SATLiteral(400))<=0)
-400 -15890 0
-670 -15890 0
-670 -400 -15891 0
c (0<=( - aux1419 + SATLiteral(670) + SATLiteral(400)))
400 15891 0
670 15891 0
670 400 15890 0
c ((SATLiteral(265) + aux1419 - aux1420)<=0)
15890 -15893 0
15891 -15894 0
-265 -15893 0
-265 15890 -15894 0
-265 15891 -15896 0
c (0<=(SATLiteral(265) + aux1419 - aux1420))
-15891 15896 0
-15890 15894 0
265 15896 0
265 -15891 15894 0
265 -15890 15893 0
c ((aux1416 + aux1418 - aux1421)<=0)
15887 -15898 0
15888 -15899 0
15881 -15898 0
15881 15887 -15899 0
15881 15888 -15901 0
15882 -15899 0
15882 15887 -15901 0
15882 15888 -15903 0
c (0<=(aux1416 + aux1418 - aux1421))
-15888 15903 0
-15887 15901 0
-15882 15903 0
-15882 -15888 15901 0
-15882 -15887 15899 0
-15881 15901 0
-15881 -15888 15899 0
-15881 -15887 15898 0
c ((SATLiteral(15905) - aux1423 + SATLiteral(11574))<=0)
-11574 -15906 0
-15905 -15906 0
-15905 -11574 -15907 0
c (0<=(SATLiteral(15905) - aux1423 + SATLiteral(11574)))
11574 15907 0
15905 15907 0
15905 11574 15906 0
c (( - aux1424 + SATLiteral(11569) + SATLiteral(11573))<=0)
-11573 -15909 0
-11569 -15909 0
-11569 -11573 -15910 0
c (0<=( - aux1424 + SATLiteral(11569) + SATLiteral(11573)))
11573 15910 0
11569 15910 0
11569 11573 15909 0
c (( - aux1425 + SATLiteral(11570) + SATLiteral(11572))<=0)
-11572 -15912 0
-11570 -15912 0
-11570 -11572 -15913 0
c (0<=( - aux1425 + SATLiteral(11570) + SATLiteral(11572)))
11572 15913 0
11570 15913 0
11570 11572 15912 0
c (( - aux1426 + SATLiteral(11568) + SATLiteral(11571))<=0)
-11571 -15915 0
-11568 -15915 0
-11568 -11571 -15916 0
c (0<=( - aux1426 + SATLiteral(11568) + SATLiteral(11571)))
11571 15916 0
11568 15916 0
11568 11571 15915 0
c ((aux1424 + aux1426 - aux1427)<=0)
15915 -15918 0
15916 -15919 0
15909 -15918 0
15909 15915 -15919 0
15909 15916 -15921 0
15910 -15919 0
15910 15915 -15921 0
15910 15916 -15923 0
c (0<=(aux1424 + aux1426 - aux1427))
-15916 15923 0
-15915 15921 0
-15910 15923 0
-15910 -15916 15921 0
-15910 -15915 15919 0
-15909 15921 0
-15909 -15916 15919 0
-15909 -15915 15918 0
c ((aux1423 + aux1425 - aux1428)<=0)
15912 -15925 0
15913 -15926 0
15906 -15925 0
15906 15912 -15926 0
15906 15913 -15928 0
15907 -15926 0
15907 15912 -15928 0
15907 15913 -15930 0
c (0<=(aux1423 + aux1425 - aux1428))
-15913 15930 0
-15912 15928 0
-15907 15930 0
-15907 -15913 15928 0
-15907 -15912 15926 0
-15906 15928 0
-15906 -15913 15926 0
-15906 -15912 15925 0
c ((SATLiteral(15932) - aux1430 + SATLiteral(11582))<=0)
-11582 -15933 0
-15932 -15933 0
-15932 -11582 -15934 0
c (0<=(SATLiteral(15932) - aux1430 + SATLiteral(11582)))
11582 15934 0
15932 15934 0
15932 11582 15933 0
c (( - aux1431 + SATLiteral(11577) + SATLiteral(11581))<=0)
-11581 -15936 0
-11577 -15936 0
-11577 -11581 -15937 0
c (0<=( - aux1431 + SATLiteral(11577) + SATLiteral(11581)))
11581 15937 0
11577 15937 0
11577 11581 15936 0
c (( - aux1432 + SATLiteral(11578) + SATLiteral(11580))<=0)
-11580 -15939 0
-11578 -15939 0
-11578 -11580 -15940 0
c (0<=( - aux1432 + SATLiteral(11578) + SATLiteral(11580)))
11580 15940 0
11578 15940 0
11578 11580 15939 0
c (( - aux1433 + SATLiteral(11576) + SATLiteral(11579))<=0)
-11579 -15942 0
-11576 -15942 0
-11576 -11579 -15943 0
c (0<=( - aux1433 + SATLiteral(11576) + SATLiteral(11579)))
11579 15943 0
11576 15943 0
11576 11579 15942 0
c ((aux1431 + aux1433 - aux1434)<=0)
15942 -15945 0
15943 -15946 0
15936 -15945 0
15936 15942 -15946 0
15936 15943 -15948 0
15937 -15946 0
15937 15942 -15948 0
15937 15943 -15950 0
c (0<=(aux1431 + aux1433 - aux1434))
-15943 15950 0
-15942 15948 0
-15937 15950 0
-15937 -15943 15948 0
-15937 -15942 15946 0
-15936 15948 0
-15936 -15943 15946 0
-15936 -15942 15945 0
c ((aux1430 + aux1432 - aux1435)<=0)
15939 -15952 0
15940 -15953 0
15933 -15952 0
15933 15939 -15953 0
15933 15940 -15955 0
15934 -15953 0
15934 15939 -15955 0
15934 15940 -15957 0
c (0<=(aux1430 + aux1432 - aux1435))
-15940 15957 0
-15939 15955 0
-15934 15957 0
-15934 -15940 15955 0
-15934 -15939 15953 0
-15933 15955 0
-15933 -15940 15953 0
-15933 -15939 15952 0
c ((SATLiteral(15959) - aux1437 + SATLiteral(11590))<=0)
-11590 -15960 0
-15959 -15960 0
-15959 -11590 -15961 0
c (0<=(SATLiteral(15959) - aux1437 + SATLiteral(11590)))
11590 15961 0
15959 15961 0
15959 11590 15960 0
c (( - aux1438 + SATLiteral(11585) + SATLiteral(11589))<=0)
-11589 -15963 0
-11585 -15963 0
-11585 -11589 -15964 0
c (0<=( - aux1438 + SATLiteral(11585) + SATLiteral(11589)))
11589 15964 0
11585 15964 0
11585 11589 15963 0
c (( - aux1439 + SATLiteral(11586) + SATLiteral(11588))<=0)
-11588 -15966 0
-11586 -15966 0
-11586 -11588 -15967 0
c (0<=( - aux1439 + SATLiteral(11586) + SATLiteral(11588)))
11588 15967 0
11586 15967 0
11586 11588 15966 0
c (( - aux1440 + SATLiteral(11584) + SATLiteral(11587))<=0)
-11587 -15969 0
-11584 -15969 0
-11584 -11587 -15970 0
c (0<=( - aux1440 + SATLiteral(11584) + SATLiteral(11587)))
11587 15970 0
11584 15970 0
11584 11587 15969 0
c ((aux1438 + aux1440 - aux1441)<=0)
15969 -15972 0
15970 -15973 0
15963 -15972 0
15963 15969 -15973 0
15963 15970 -15975 0
15964 -15973 0
15964 15969 -15975 0
15964 15970 -15977 0
c (0<=(aux1438 + aux1440 - aux1441))
-15970 15977 0
-15969 15975 0
-15964 15977 0
-15964 -15970 15975 0
-15964 -15969 15973 0
-15963 15975 0
-15963 -15970 15973 0
-15963 -15969 15972 0
c ((aux1437 + aux1439 - aux1442)<=0)
15966 -15979 0
15967 -15980 0
15960 -15979 0
15960 15966 -15980 0
15960 15967 -15982 0
15961 -15980 0
15961 15966 -15982 0
15961 15967 -15984 0
c (0<=(aux1437 + aux1439 - aux1442))
-15967 15984 0
-15966 15982 0
-15961 15984 0
-15961 -15967 15982 0
-15961 -15966 15980 0
-15960 15982 0
-15960 -15967 15980 0
-15960 -15966 15979 0
c ((SATLiteral(15986) - aux1444 + SATLiteral(11598))<=0)
-11598 -15987 0
-15986 -15987 0
-15986 -11598 -15988 0
c (0<=(SATLiteral(15986) - aux1444 + SATLiteral(11598)))
11598 15988 0
15986 15988 0
15986 11598 15987 0
c (( - aux1445 + SATLiteral(11593) + SATLiteral(11597))<=0)
-11597 -15990 0
-11593 -15990 0
-11593 -11597 -15991 0
c (0<=( - aux1445 + SATLiteral(11593) + SATLiteral(11597)))
11597 15991 0
11593 15991 0
11593 11597 15990 0
c (( - aux1446 + SATLiteral(11594) + SATLiteral(11596))<=0)
-11596 -15993 0
-11594 -15993 0
-11594 -11596 -15994 0
c (0<=( - aux1446 + SATLiteral(11594) + SATLiteral(11596)))
11596 15994 0
11594 15994 0
11594 11596 15993 0
c (( - aux1447 + SATLiteral(11592) + SATLiteral(11595))<=0)
-11595 -15996 0
-11592 -15996 0
-11592 -11595 -15997 0
c (0<=( - aux1447 + SATLiteral(11592) + SATLiteral(11595)))
11595 15997 0
11592 15997 0
11592 11595 15996 0
c ((aux1445 + aux1447 - aux1448)<=0)
15996 -15999 0
15997 -16000 0
15990 -15999 0
15990 15996 -16000 0
15990 15997 -16002 0
15991 -16000 0
15991 15996 -16002 0
15991 15997 -16004 0
c (0<=(aux1445 + aux1447 - aux1448))
-15997 16004 0
-15996 16002 0
-15991 16004 0
-15991 -15997 16002 0
-15991 -15996 16000 0
-15990 16002 0
-15990 -15997 16000 0
-15990 -15996 15999 0
c ((aux1444 + aux1446 - aux1449)<=0)
15993 -16006 0
15994 -16007 0
15987 -16006 0
15987 15993 -16007 0
15987 15994 -16009 0
15988 -16007 0
15988 15993 -16009 0
15988 15994 -16011 0
c (0<=(aux1444 + aux1446 - aux1449))
-15994 16011 0
-15993 16009 0
-15988 16011 0
-15988 -15994 16009 0
-15988 -15993 16007 0
-15987 16009 0
-15987 -15994 16007 0
-15987 -15993 16006 0
c ((SATLiteral(16013) - aux1451 + SATLiteral(11606))<=0)
-11606 -16014 0
-16013 -16014 0
-16013 -11606 -16015 0
c (0<=(SATLiteral(16013) - aux1451 + SATLiteral(11606)))
11606 16015 0
16013 16015 0
16013 11606 16014 0
c (( - aux1452 + SATLiteral(11601) + SATLiteral(11605))<=0)
-11605 -16017 0
-11601 -16017 0
-11601 -11605 -16018 0
c (0<=( - aux1452 + SATLiteral(11601) + SATLiteral(11605)))
11605 16018 0
11601 16018 0
11601 11605 16017 0
c (( - aux1453 + SATLiteral(11602) + SATLiteral(11604))<=0)
-11604 -16020 0
-11602 -16020 0
-11602 -11604 -16021 0
c (0<=( - aux1453 + SATLiteral(11602) + SATLiteral(11604)))
11604 16021 0
11602 16021 0
11602 11604 16020 0
c (( - aux1454 + SATLiteral(11600) + SATLiteral(11603))<=0)
-11603 -16023 0
-11600 -16023 0
-11600 -11603 -16024 0
c (0<=( - aux1454 + SATLiteral(11600) + SATLiteral(11603)))
11603 16024 0
11600 16024 0
11600 11603 16023 0
c ((aux1452 + aux1454 - aux1455)<=0)
16023 -16026 0
16024 -16027 0
16017 -16026 0
16017 16023 -16027 0
16017 16024 -16029 0
16018 -16027 0
16018 16023 -16029 0
16018 16024 -16031 0
c (0<=(aux1452 + aux1454 - aux1455))
-16024 16031 0
-16023 16029 0
-16018 16031 0
-16018 -16024 16029 0
-16018 -16023 16027 0
-16017 16029 0
-16017 -16024 16027 0
-16017 -16023 16026 0
c ((aux1451 + aux1453 - aux1456)<=0)
16020 -16033 0
16021 -16034 0
16014 -16033 0
16014 16020 -16034 0
16014 16021 -16036 0
16015 -16034 0
16015 16020 -16036 0
16015 16021 -16038 0
c (0<=(aux1451 + aux1453 - aux1456))
-16021 16038 0
-16020 16036 0
-16015 16038 0
-16015 -16021 16036 0
-16015 -16020 16034 0
-16014 16036 0
-16014 -16021 16034 0
-16014 -16020 16033 0
c ((SATLiteral(16040) - aux1458 + SATLiteral(11614))<=0)
-11614 -16041 0
-16040 -16041 0
-16040 -11614 -16042 0
c (0<=(SATLiteral(16040) - aux1458 + SATLiteral(11614)))
11614 16042 0
16040 16042 0
16040 11614 16041 0
c (( - aux1459 + SATLiteral(11609) + SATLiteral(11613))<=0)
-11613 -16044 0
-11609 -16044 0
-11609 -11613 -16045 0
c (0<=( - aux1459 + SATLiteral(11609) + SATLiteral(11613)))
11613 16045 0
11609 16045 0
11609 11613 16044 0
c (( - aux1460 + SATLiteral(11610) + SATLiteral(11612))<=0)
-11612 -16047 0
-11610 -16047 0
-11610 -11612 -16048 0
c (0<=( - aux1460 + SATLiteral(11610) + SATLiteral(11612)))
11612 16048 0
11610 16048 0
11610 11612 16047 0
c (( - aux1461 + SATLiteral(11608) + SATLiteral(11611))<=0)
-11611 -16050 0
-11608 -16050 0
-11608 -11611 -16051 0
c (0<=( - aux1461 + SATLiteral(11608) + SATLiteral(11611)))
11611 16051 0
11608 16051 0
11608 11611 16050 0
c ((aux1459 + aux1461 - aux1462)<=0)
16050 -16053 0
16051 -16054 0
16044 -16053 0
16044 16050 -16054 0
16044 16051 -16056 0
16045 -16054 0
16045 16050 -16056 0
16045 16051 -16058 0
c (0<=(aux1459 + aux1461 - aux1462))
-16051 16058 0
-16050 16056 0
-16045 16058 0
-16045 -16051 16056 0
-16045 -16050 16054 0
-16044 16056 0
-16044 -16051 16054 0
-16044 -16050 16053 0
c ((aux1458 + aux1460 - aux1463)<=0)
16047 -16060 0
16048 -16061 0
16041 -16060 0
16041 16047 -16061 0
16041 16048 -16063 0
16042 -16061 0
16042 16047 -16063 0
16042 16048 -16065 0
c (0<=(aux1458 + aux1460 - aux1463))
-16048 16065 0
-16047 16063 0
-16042 16065 0
-16042 -16048 16063 0
-16042 -16047 16061 0
-16041 16063 0
-16041 -16048 16061 0
-16041 -16047 16060 0
c ((SATLiteral(16067) - aux1465 + SATLiteral(11622))<=0)
-11622 -16068 0
-16067 -16068 0
-16067 -11622 -16069 0
c (0<=(SATLiteral(16067) - aux1465 + SATLiteral(11622)))
11622 16069 0
16067 16069 0
16067 11622 16068 0
c (( - aux1466 + SATLiteral(11617) + SATLiteral(11621))<=0)
-11621 -16071 0
-11617 -16071 0
-11617 -11621 -16072 0
c (0<=( - aux1466 + SATLiteral(11617) + SATLiteral(11621)))
11621 16072 0
11617 16072 0
11617 11621 16071 0
c (( - aux1467 + SATLiteral(11618) + SATLiteral(11620))<=0)
-11620 -16074 0
-11618 -16074 0
-11618 -11620 -16075 0
c (0<=( - aux1467 + SATLiteral(11618) + SATLiteral(11620)))
11620 16075 0
11618 16075 0
11618 11620 16074 0
c (( - aux1468 + SATLiteral(11616) + SATLiteral(11619))<=0)
-11619 -16077 0
-11616 -16077 0
-11616 -11619 -16078 0
c (0<=( - aux1468 + SATLiteral(11616) + SATLiteral(11619)))
11619 16078 0
11616 16078 0
11616 11619 16077 0
c ((aux1466 + aux1468 - aux1469)<=0)
16077 -16080 0
16078 -16081 0
16071 -16080 0
16071 16077 -16081 0
16071 16078 -16083 0
16072 -16081 0
16072 16077 -16083 0
16072 16078 -16085 0
c (0<=(aux1466 + aux1468 - aux1469))
-16078 16085 0
-16077 16083 0
-16072 16085 0
-16072 -16078 16083 0
-16072 -16077 16081 0
-16071 16083 0
-16071 -16078 16081 0
-16071 -16077 16080 0
c ((aux1465 + aux1467 - aux1470)<=0)
16074 -16087 0
16075 -16088 0
16068 -16087 0
16068 16074 -16088 0
16068 16075 -16090 0
16069 -16088 0
16069 16074 -16090 0
16069 16075 -16092 0
c (0<=(aux1465 + aux1467 - aux1470))
-16075 16092 0
-16074 16090 0
-16069 16092 0
-16069 -16075 16090 0
-16069 -16074 16088 0
-16068 16090 0
-16068 -16075 16088 0
-16068 -16074 16087 0
c ((SATLiteral(16094) - aux1472 + SATLiteral(11630))<=0)
-11630 -16095 0
-16094 -16095 0
-16094 -11630 -16096 0
c (0<=(SATLiteral(16094) - aux1472 + SATLiteral(11630)))
11630 16096 0
16094 16096 0
16094 11630 16095 0
c (( - aux1473 + SATLiteral(11625) + SATLiteral(11629))<=0)
-11629 -16098 0
-11625 -16098 0
-11625 -11629 -16099 0
c (0<=( - aux1473 + SATLiteral(11625) + SATLiteral(11629)))
11629 16099 0
11625 16099 0
11625 11629 16098 0
c (( - aux1474 + SATLiteral(11626) + SATLiteral(11628))<=0)
-11628 -16101 0
-11626 -16101 0
-11626 -11628 -16102 0
c (0<=( - aux1474 + SATLiteral(11626) + SATLiteral(11628)))
11628 16102 0
11626 16102 0
11626 11628 16101 0
c (( - aux1475 + SATLiteral(11624) + SATLiteral(11627))<=0)
-11627 -16104 0
-11624 -16104 0
-11624 -11627 -16105 0
c (0<=( - aux1475 + SATLiteral(11624) + SATLiteral(11627)))
11627 16105 0
11624 16105 0
11624 11627 16104 0
c ((aux1473 + aux1475 - aux1476)<=0)
16104 -16107 0
16105 -16108 0
16098 -16107 0
16098 16104 -16108 0
16098 16105 -16110 0
16099 -16108 0
16099 16104 -16110 0
16099 16105 -16112 0
c (0<=(aux1473 + aux1475 - aux1476))
-16105 16112 0
-16104 16110 0
-16099 16112 0
-16099 -16105 16110 0
-16099 -16104 16108 0
-16098 16110 0
-16098 -16105 16108 0
-16098 -16104 16107 0
c ((aux1472 + aux1474 - aux1477)<=0)
16101 -16114 0
16102 -16115 0
16095 -16114 0
16095 16101 -16115 0
16095 16102 -16117 0
16096 -16115 0
16096 16101 -16117 0
16096 16102 -16119 0
c (0<=(aux1472 + aux1474 - aux1477))
-16102 16119 0
-16101 16117 0
-16096 16119 0
-16096 -16102 16117 0
-16096 -16101 16115 0
-16095 16117 0
-16095 -16102 16115 0
-16095 -16101 16114 0
c ((SATLiteral(16121) - aux1479 + SATLiteral(11638))<=0)
-11638 -16122 0
-16121 -16122 0
-16121 -11638 -16123 0
c (0<=(SATLiteral(16121) - aux1479 + SATLiteral(11638)))
11638 16123 0
16121 16123 0
16121 11638 16122 0
c (( - aux1480 + SATLiteral(11633) + SATLiteral(11637))<=0)
-11637 -16125 0
-11633 -16125 0
-11633 -11637 -16126 0
c (0<=( - aux1480 + SATLiteral(11633) + SATLiteral(11637)))
11637 16126 0
11633 16126 0
11633 11637 16125 0
c (( - aux1481 + SATLiteral(11634) + SATLiteral(11636))<=0)
-11636 -16128 0
-11634 -16128 0
-11634 -11636 -16129 0
c (0<=( - aux1481 + SATLiteral(11634) + SATLiteral(11636)))
11636 16129 0
11634 16129 0
11634 11636 16128 0
c (( - aux1482 + SATLiteral(11632) + SATLiteral(11635))<=0)
-11635 -16131 0
-11632 -16131 0
-11632 -11635 -16132 0
c (0<=( - aux1482 + SATLiteral(11632) + SATLiteral(11635)))
11635 16132 0
11632 16132 0
11632 11635 16131 0
c ((aux1480 + aux1482 - aux1483)<=0)
16131 -16134 0
16132 -16135 0
16125 -16134 0
16125 16131 -16135 0
16125 16132 -16137 0
16126 -16135 0
16126 16131 -16137 0
16126 16132 -16139 0
c (0<=(aux1480 + aux1482 - aux1483))
-16132 16139 0
-16131 16137 0
-16126 16139 0
-16126 -16132 16137 0
-16126 -16131 16135 0
-16125 16137 0
-16125 -16132 16135 0
-16125 -16131 16134 0
c ((aux1479 + aux1481 - aux1484)<=0)
16128 -16141 0
16129 -16142 0
16122 -16141 0
16122 16128 -16142 0
16122 16129 -16144 0
16123 -16142 0
16123 16128 -16144 0
16123 16129 -16146 0
c (0<=(aux1479 + aux1481 - aux1484))
-16129 16146 0
-16128 16144 0
-16123 16146 0
-16123 -16129 16144 0
-16123 -16128 16142 0
-16122 16144 0
-16122 -16129 16142 0
-16122 -16128 16141 0
c ((SATLiteral(16148) - aux1486 + SATLiteral(11646))<=0)
-11646 -16149 0
-16148 -16149 0
-16148 -11646 -16150 0
c (0<=(SATLiteral(16148) - aux1486 + SATLiteral(11646)))
11646 16150 0
16148 16150 0
16148 11646 16149 0
c (( - aux1487 + SATLiteral(11641) + SATLiteral(11645))<=0)
-11645 -16152 0
-11641 -16152 0
-11641 -11645 -16153 0
c (0<=( - aux1487 + SATLiteral(11641) + SATLiteral(11645)))
11645 16153 0
11641 16153 0
11641 11645 16152 0
c (( - aux1488 + SATLiteral(11642) + SATLiteral(11644))<=0)
-11644 -16155 0
-11642 -16155 0
-11642 -11644 -16156 0
c (0<=( - aux1488 + SATLiteral(11642) + SATLiteral(11644)))
11644 16156 0
11642 16156 0
11642 11644 16155 0
c (( - aux1489 + SATLiteral(11640) + SATLiteral(11643))<=0)
-11643 -16158 0
-11640 -16158 0
-11640 -11643 -16159 0
c (0<=( - aux1489 + SATLiteral(11640) + SATLiteral(11643)))
11643 16159 0
11640 16159 0
11640 11643 16158 0
c ((aux1487 + aux1489 - aux1490)<=0)
16158 -16161 0
16159 -16162 0
16152 -16161 0
16152 16158 -16162 0
16152 16159 -16164 0
16153 -16162 0
16153 16158 -16164 0
16153 16159 -16166 0
c (0<=(aux1487 + aux1489 - aux1490))
-16159 16166 0
-16158 16164 0
-16153 16166 0
-16153 -16159 16164 0
-16153 -16158 16162 0
-16152 16164 0
-16152 -16159 16162 0
-16152 -16158 16161 0
c ((aux1486 + aux1488 - aux1491)<=0)
16155 -16168 0
16156 -16169 0
16149 -16168 0
16149 16155 -16169 0
16149 16156 -16171 0
16150 -16169 0
16150 16155 -16171 0
16150 16156 -16173 0
c (0<=(aux1486 + aux1488 - aux1491))
-16156 16173 0
-16155 16171 0
-16150 16173 0
-16150 -16156 16171 0
-16150 -16155 16169 0
-16149 16171 0
-16149 -16156 16169 0
-16149 -16155 16168 0
c ((SATLiteral(16175) - aux1493 + SATLiteral(11654))<=0)
-11654 -16176 0
-16175 -16176 0
-16175 -11654 -16177 0
c (0<=(SATLiteral(16175) - aux1493 + SATLiteral(11654)))
11654 16177 0
16175 16177 0
16175 11654 16176 0
c (( - aux1494 + SATLiteral(11649) + SATLiteral(11653))<=0)
-11653 -16179 0
-11649 -16179 0
-11649 -11653 -16180 0
c (0<=( - aux1494 + SATLiteral(11649) + SATLiteral(11653)))
11653 16180 0
11649 16180 0
11649 11653 16179 0
c (( - aux1495 + SATLiteral(11650) + SATLiteral(11652))<=0)
-11652 -16182 0
-11650 -16182 0
-11650 -11652 -16183 0
c (0<=( - aux1495 + SATLiteral(11650) + SATLiteral(11652)))
11652 16183 0
11650 16183 0
11650 11652 16182 0
c (( - aux1496 + SATLiteral(11648) + SATLiteral(11651))<=0)
-11651 -16185 0
-11648 -16185 0
-11648 -11651 -16186 0
c (0<=( - aux1496 + SATLiteral(11648) + SATLiteral(11651)))
11651 16186 0
11648 16186 0
11648 11651 16185 0
c ((aux1494 + aux1496 - aux1497)<=0)
16185 -16188 0
16186 -16189 0
16179 -16188 0
16179 16185 -16189 0
16179 16186 -16191 0
16180 -16189 0
16180 16185 -16191 0
16180 16186 -16193 0
c (0<=(aux1494 + aux1496 - aux1497))
-16186 16193 0
-16185 16191 0
-16180 16193 0
-16180 -16186 16191 0
-16180 -16185 16189 0
-16179 16191 0
-16179 -16186 16189 0
-16179 -16185 16188 0
c ((aux1493 + aux1495 - aux1498)<=0)
16182 -16195 0
16183 -16196 0
16176 -16195 0
16176 16182 -16196 0
16176 16183 -16198 0
16177 -16196 0
16177 16182 -16198 0
16177 16183 -16200 0
c (0<=(aux1493 + aux1495 - aux1498))
-16183 16200 0
-16182 16198 0
-16177 16200 0
-16177 -16183 16198 0
-16177 -16182 16196 0
-16176 16198 0
-16176 -16183 16196 0
-16176 -16182 16195 0
c ((SATLiteral(16202) - aux1500 + SATLiteral(11662))<=0)
-11662 -16203 0
-16202 -16203 0
-16202 -11662 -16204 0
c (0<=(SATLiteral(16202) - aux1500 + SATLiteral(11662)))
11662 16204 0
16202 16204 0
16202 11662 16203 0
c (( - aux1501 + SATLiteral(11657) + SATLiteral(11661))<=0)
-11661 -16206 0
-11657 -16206 0
-11657 -11661 -16207 0
c (0<=( - aux1501 + SATLiteral(11657) + SATLiteral(11661)))
11661 16207 0
11657 16207 0
11657 11661 16206 0
c (( - aux1502 + SATLiteral(11658) + SATLiteral(11660))<=0)
-11660 -16209 0
-11658 -16209 0
-11658 -11660 -16210 0
c (0<=( - aux1502 + SATLiteral(11658) + SATLiteral(11660)))
11660 16210 0
11658 16210 0
11658 11660 16209 0
c (( - aux1503 + SATLiteral(11656) + SATLiteral(11659))<=0)
-11659 -16212 0
-11656 -16212 0
-11656 -11659 -16213 0
c (0<=( - aux1503 + SATLiteral(11656) + SATLiteral(11659)))
11659 16213 0
11656 16213 0
11656 11659 16212 0
c ((aux1501 + aux1503 - aux1504)<=0)
16212 -16215 0
16213 -16216 0
16206 -16215 0
16206 16212 -16216 0
16206 16213 -16218 0
16207 -16216 0
16207 16212 -16218 0
16207 16213 -16220 0
c (0<=(aux1501 + aux1503 - aux1504))
-16213 16220 0
-16212 16218 0
-16207 16220 0
-16207 -16213 16218 0
-16207 -16212 16216 0
-16206 16218 0
-16206 -16213 16216 0
-16206 -16212 16215 0
c ((aux1500 + aux1502 - aux1505)<=0)
16209 -16222 0
16210 -16223 0
16203 -16222 0
16203 16209 -16223 0
16203 16210 -16225 0
16204 -16223 0
16204 16209 -16225 0
16204 16210 -16227 0
c (0<=(aux1500 + aux1502 - aux1505))
-16210 16227 0
-16209 16225 0
-16204 16227 0
-16204 -16210 16225 0
-16204 -16209 16223 0
-16203 16225 0
-16203 -16210 16223 0
-16203 -16209 16222 0
c ((SATLiteral(16229) - aux1507 + SATLiteral(11666))<=0)
-11666 -16230 0
-16229 -16230 0
-16229 -11666 -16231 0
c (0<=(SATLiteral(16229) - aux1507 + SATLiteral(11666)))
11666 16231 0
16229 16231 0
16229 11666 16230 0
c ((SATLiteral(11670) - aux1508 + SATLiteral(11665))<=0)
-11665 -16233 0
-11670 -16233 0
-11670 -11665 -16234 0
c (0<=(SATLiteral(11670) - aux1508 + SATLiteral(11665)))
11665 16234 0
11670 16234 0
11670 11665 16233 0
c ((SATLiteral(11668) - aux1509 + SATLiteral(11664))<=0)
-11664 -16236 0
-11668 -16236 0
-11668 -11664 -16237 0
c (0<=(SATLiteral(11668) - aux1509 + SATLiteral(11664)))
11664 16237 0
11668 16237 0
11668 11664 16236 0
c ((SATLiteral(11669) - aux1510 + SATLiteral(11663))<=0)
-11663 -16239 0
-11669 -16239 0
-11669 -11663 -16240 0
c (0<=(SATLiteral(11669) - aux1510 + SATLiteral(11663)))
11663 16240 0
11669 16240 0
11669 11663 16239 0
c ((aux1508 + aux1510 - aux1511)<=0)
16239 -16242 0
16240 -16243 0
16233 -16242 0
16233 16239 -16243 0
16233 16240 -16245 0
16234 -16243 0
16234 16239 -16245 0
16234 16240 -16247 0
c (0<=(aux1508 + aux1510 - aux1511))
-16240 16247 0
-16239 16245 0
-16234 16247 0
-16234 -16240 16245 0
-16234 -16239 16243 0
-16233 16245 0
-16233 -16240 16243 0
-16233 -16239 16242 0
c ((aux1507 + aux1509 - aux1512)<=0)
16236 -16249 0
16237 -16250 0
16230 -16249 0
16230 16236 -16250 0
16230 16237 -16252 0
16231 -16250 0
16231 16236 -16252 0
16231 16237 -16254 0
c (0<=(aux1507 + aux1509 - aux1512))
-16237 16254 0
-16236 16252 0
-16231 16254 0
-16231 -16237 16252 0
-16231 -16236 16250 0
-16230 16252 0
-16230 -16237 16250 0
-16230 -16236 16249 0
c ((SATLiteral(11674) + SATLiteral(16256) - aux1514)<=0)
-16256 -16257 0
-11674 -16257 0
-11674 -16256 -16258 0
c (0<=(SATLiteral(11674) + SATLiteral(16256) - aux1514))
16256 16258 0
11674 16258 0
11674 16256 16257 0
c ((SATLiteral(11672) + SATLiteral(11678) - aux1515)<=0)
-11678 -16260 0
-11672 -16260 0
-11672 -11678 -16261 0
c (0<=(SATLiteral(11672) + SATLiteral(11678) - aux1515))
11678 16261 0
11672 16261 0
11672 11678 16260 0
c ((SATLiteral(11675) + SATLiteral(11677) - aux1516)<=0)
-11677 -16263 0
-11675 -16263 0
-11675 -11677 -16264 0
c (0<=(SATLiteral(11675) + SATLiteral(11677) - aux1516))
11677 16264 0
11675 16264 0
11675 11677 16263 0
c ((SATLiteral(11673) + SATLiteral(11676) - aux1517)<=0)
-11676 -16266 0
-11673 -16266 0
-11673 -11676 -16267 0
c (0<=(SATLiteral(11673) + SATLiteral(11676) - aux1517))
11676 16267 0
11673 16267 0
11673 11676 16266 0
c ((aux1515 + aux1517 - aux1518)<=0)
16266 -16269 0
16267 -16270 0
16260 -16269 0
16260 16266 -16270 0
16260 16267 -16272 0
16261 -16270 0
16261 16266 -16272 0
16261 16267 -16274 0
c (0<=(aux1515 + aux1517 - aux1518))
-16267 16274 0
-16266 16272 0
-16261 16274 0
-16261 -16267 16272 0
-16261 -16266 16270 0
-16260 16272 0
-16260 -16267 16270 0
-16260 -16266 16269 0
c ((aux1514 + aux1516 - aux1519)<=0)
16263 -16276 0
16264 -16277 0
16257 -16276 0
16257 16263 -16277 0
16257 16264 -16279 0
16258 -16277 0
16258 16263 -16279 0
16258 16264 -16281 0
c (0<=(aux1514 + aux1516 - aux1519))
-16264 16281 0
-16263 16279 0
-16258 16281 0
-16258 -16264 16279 0
-16258 -16263 16277 0
-16257 16279 0
-16257 -16264 16277 0
-16257 -16263 16276 0
c ((SATLiteral(11682) + SATLiteral(16283) - aux1521)<=0)
-16283 -16284 0
-11682 -16284 0
-11682 -16283 -16285 0
c (0<=(SATLiteral(11682) + SATLiteral(16283) - aux1521))
16283 16285 0
11682 16285 0
11682 16283 16284 0
c ((SATLiteral(11680) + SATLiteral(11686) - aux1522)<=0)
-11686 -16287 0
-11680 -16287 0
-11680 -11686 -16288 0
c (0<=(SATLiteral(11680) + SATLiteral(11686) - aux1522))
11686 16288 0
11680 16288 0
11680 11686 16287 0
c ((SATLiteral(11683) + SATLiteral(11685) - aux1523)<=0)
-11685 -16290 0
-11683 -16290 0
-11683 -11685 -16291 0
c (0<=(SATLiteral(11683) + SATLiteral(11685) - aux1523))
11685 16291 0
11683 16291 0
11683 11685 16290 0
c ((SATLiteral(11681) + SATLiteral(11684) - aux1524)<=0)
-11684 -16293 0
-11681 -16293 0
-11681 -11684 -16294 0
c (0<=(SATLiteral(11681) + SATLiteral(11684) - aux1524))
11684 16294 0
11681 16294 0
11681 11684 16293 0
c ((aux1522 + aux1524 - aux1525)<=0)
16293 -16296 0
16294 -16297 0
16287 -16296 0
16287 16293 -16297 0
16287 16294 -16299 0
16288 -16297 0
16288 16293 -16299 0
16288 16294 -16301 0
c (0<=(aux1522 + aux1524 - aux1525))
-16294 16301 0
-16293 16299 0
-16288 16301 0
-16288 -16294 16299 0
-16288 -16293 16297 0
-16287 16299 0
-16287 -16294 16297 0
-16287 -16293 16296 0
c ((aux1521 + aux1523 - aux1526)<=0)
16290 -16303 0
16291 -16304 0
16284 -16303 0
16284 16290 -16304 0
16284 16291 -16306 0
16285 -16304 0
16285 16290 -16306 0
16285 16291 -16308 0
c (0<=(aux1521 + aux1523 - aux1526))
-16291 16308 0
-16290 16306 0
-16285 16308 0
-16285 -16291 16306 0
-16285 -16290 16304 0
-16284 16306 0
-16284 -16291 16304 0
-16284 -16290 16303 0
c ((SATLiteral(11690) + SATLiteral(16310) - aux1528)<=0)
-16310 -16311 0
-11690 -16311 0
-11690 -16310 -16312 0
c (0<=(SATLiteral(11690) + SATLiteral(16310) - aux1528))
16310 16312 0
11690 16312 0
11690 16310 16311 0
c ((SATLiteral(11688) + SATLiteral(11694) - aux1529)<=0)
-11694 -16314 0
-11688 -16314 0
-11688 -11694 -16315 0
c (0<=(SATLiteral(11688) + SATLiteral(11694) - aux1529))
11694 16315 0
11688 16315 0
11688 11694 16314 0
c ((SATLiteral(11691) + SATLiteral(11693) - aux1530)<=0)
-11693 -16317 0
-11691 -16317 0
-11691 -11693 -16318 0
c (0<=(SATLiteral(11691) + SATLiteral(11693) - aux1530))
11693 16318 0
11691 16318 0
11691 11693 16317 0
c ((SATLiteral(11689) + SATLiteral(11692) - aux1531)<=0)
-11692 -16320 0
-11689 -16320 0
-11689 -11692 -16321 0
c (0<=(SATLiteral(11689) + SATLiteral(11692) - aux1531))
11692 16321 0
11689 16321 0
11689 11692 16320 0
c ((aux1529 + aux1531 - aux1532)<=0)
16320 -16323 0
16321 -16324 0
16314 -16323 0
16314 16320 -16324 0
16314 16321 -16326 0
16315 -16324 0
16315 16320 -16326 0
16315 16321 -16328 0
c (0<=(aux1529 + aux1531 - aux1532))
-16321 16328 0
-16320 16326 0
-16315 16328 0
-16315 -16321 16326 0
-16315 -16320 16324 0
-16314 16326 0
-16314 -16321 16324 0
-16314 -16320 16323 0
c ((aux1528 + aux1530 - aux1533)<=0)
16317 -16330 0
16318 -16331 0
16311 -16330 0
16311 16317 -16331 0
16311 16318 -16333 0
16312 -16331 0
16312 16317 -16333 0
16312 16318 -16335 0
c (0<=(aux1528 + aux1530 - aux1533))
-16318 16335 0
-16317 16333 0
-16312 16335 0
-16312 -16318 16333 0
-16312 -16317 16331 0
-16311 16333 0
-16311 -16318 16331 0
-16311 -16317 16330 0
c ((SATLiteral(11698) + SATLiteral(16337) - aux1535)<=0)
-16337 -16338 0
-11698 -16338 0
-11698 -16337 -16339 0
c (0<=(SATLiteral(11698) + SATLiteral(16337) - aux1535))
16337 16339 0
11698 16339 0
11698 16337 16338 0
c ((SATLiteral(11696) + SATLiteral(11702) - aux1536)<=0)
-11702 -16341 0
-11696 -16341 0
-11696 -11702 -16342 0
c (0<=(SATLiteral(11696) + SATLiteral(11702) - aux1536))
11702 16342 0
11696 16342 0
11696 11702 16341 0
c ((SATLiteral(11699) + SATLiteral(11701) - aux1537)<=0)
-11701 -16344 0
-11699 -16344 0
-11699 -11701 -16345 0
c (0<=(SATLiteral(11699) + SATLiteral(11701) - aux1537))
11701 16345 0
11699 16345 0
11699 11701 16344 0
c ((SATLiteral(11697) + SATLiteral(11700) - aux1538)<=0)
-11700 -16347 0
-11697 -16347 0
-11697 -11700 -16348 0
c (0<=(SATLiteral(11697) + SATLiteral(11700) - aux1538))
11700 16348 0
11697 16348 0
11697 11700 16347 0
c ((aux1536 + aux1538 - aux1539)<=0)
16347 -16350 0
16348 -16351 0
16341 -16350 0
16341 16347 -16351 0
16341 16348 -16353 0
16342 -16351 0
16342 16347 -16353 0
16342 16348 -16355 0
c (0<=(aux1536 + aux1538 - aux1539))
-16348 16355 0
-16347 16353 0
-16342 16355 0
-16342 -16348 16353 0
-16342 -16347 16351 0
-16341 16353 0
-16341 -16348 16351 0
-16341 -16347 16350 0
c ((aux1535 + aux1537 - aux1540)<=0)
16344 -16357 0
16345 -16358 0
16338 -16357 0
16338 16344 -16358 0
16338 16345 -16360 0
16339 -16358 0
16339 16344 -16360 0
16339 16345 -16362 0
c (0<=(aux1535 + aux1537 - aux1540))
-16345 16362 0
-16344 16360 0
-16339 16362 0
-16339 -16345 16360 0
-16339 -16344 16358 0
-16338 16360 0
-16338 -16345 16358 0
-16338 -16344 16357 0
c ((SATLiteral(11706) + SATLiteral(16364) - aux1542)<=0)
-16364 -16365 0
-11706 -16365 0
-11706 -16364 -16366 0
c (0<=(SATLiteral(11706) + SATLiteral(16364) - aux1542))
16364 16366 0
11706 16366 0
11706 16364 16365 0
c ((SATLiteral(11704) + SATLiteral(11710) - aux1543)<=0)
-11710 -16368 0
-11704 -16368 0
-11704 -11710 -16369 0
c (0<=(SATLiteral(11704) + SATLiteral(11710) - aux1543))
11710 16369 0
11704 16369 0
11704 11710 16368 0
c ((SATLiteral(11707) + SATLiteral(11709) - aux1544)<=0)
-11709 -16371 0
-11707 -16371 0
-11707 -11709 -16372 0
c (0<=(SATLiteral(11707) + SATLiteral(11709) - aux1544))
11709 16372 0
11707 16372 0
11707 11709 16371 0
c ((SATLiteral(11705) + SATLiteral(11708) - aux1545)<=0)
-11708 -16374 0
-11705 -16374 0
-11705 -11708 -16375 0
c (0<=(SATLiteral(11705) + SATLiteral(11708) - aux1545))
11708 16375 0
11705 16375 0
11705 11708 16374 0
c ((aux1543 + aux1545 - aux1546)<=0)
16374 -16377 0
16375 -16378 0
16368 -16377 0
16368 16374 -16378 0
16368 16375 -16380 0
16369 -16378 0
16369 16374 -16380 0
16369 16375 -16382 0
c (0<=(aux1543 + aux1545 - aux1546))
-16375 16382 0
-16374 16380 0
-16369 16382 0
-16369 -16375 16380 0
-16369 -16374 16378 0
-16368 16380 0
-16368 -16375 16378 0
-16368 -16374 16377 0
c ((aux1542 + aux1544 - aux1547)<=0)
16371 -16384 0
16372 -16385 0
16365 -16384 0
16365 16371 -16385 0
16365 16372 -16387 0
16366 -16385 0
16366 16371 -16387 0
16366 16372 -16389 0
c (0<=(aux1542 + aux1544 - aux1547))
-16372 16389 0
-16371 16387 0
-16366 16389 0
-16366 -16372 16387 0
-16366 -16371 16385 0
-16365 16387 0
-16365 -16372 16385 0
-16365 -16371 16384 0
c ((SATLiteral(11718) + SATLiteral(16391) - aux1549)<=0)
-16391 -16392 0
-11718 -16392 0
-11718 -16391 -16393 0
c (0<=(SATLiteral(11718) + SATLiteral(16391) - aux1549))
16391 16393 0
11718 16393 0
11718 16391 16392 0
c ((SATLiteral(11711) + SATLiteral(11717) - aux1550)<=0)
-11717 -16395 0
-11711 -16395 0
-11711 -11717 -16396 0
c (0<=(SATLiteral(11711) + SATLiteral(11717) - aux1550))
11717 16396 0
11711 16396 0
11711 11717 16395 0
c ((SATLiteral(11713) + SATLiteral(11716) - aux1551)<=0)
-11716 -16398 0
-11713 -16398 0
-11713 -11716 -16399 0
c (0<=(SATLiteral(11713) + SATLiteral(11716) - aux1551))
11716 16399 0
11713 16399 0
11713 11716 16398 0
c ((SATLiteral(11712) + SATLiteral(11715) - aux1552)<=0)
-11715 -16401 0
-11712 -16401 0
-11712 -11715 -16402 0
c (0<=(SATLiteral(11712) + SATLiteral(11715) - aux1552))
11715 16402 0
11712 16402 0
11712 11715 16401 0
c ((aux1550 + aux1552 - aux1553)<=0)
16401 -16404 0
16402 -16405 0
16395 -16404 0
16395 16401 -16405 0
16395 16402 -16407 0
16396 -16405 0
16396 16401 -16407 0
16396 16402 -16409 0
c (0<=(aux1550 + aux1552 - aux1553))
-16402 16409 0
-16401 16407 0
-16396 16409 0
-16396 -16402 16407 0
-16396 -16401 16405 0
-16395 16407 0
-16395 -16402 16405 0
-16395 -16401 16404 0
c ((aux1549 + aux1551 - aux1554)<=0)
16398 -16411 0
16399 -16412 0
16392 -16411 0
16392 16398 -16412 0
16392 16399 -16414 0
16393 -16412 0
16393 16398 -16414 0
16393 16399 -16416 0
c (0<=(aux1549 + aux1551 - aux1554))
-16399 16416 0
-16398 16414 0
-16393 16416 0
-16393 -16399 16414 0
-16393 -16398 16412 0
-16392 16414 0
-16392 -16399 16412 0
-16392 -16398 16411 0
c ((SATLiteral(11726) + SATLiteral(16418) - aux1556)<=0)
-16418 -16419 0
-11726 -16419 0
-11726 -16418 -16420 0
c (0<=(SATLiteral(11726) + SATLiteral(16418) - aux1556))
16418 16420 0
11726 16420 0
11726 16418 16419 0
c ((SATLiteral(11719) + SATLiteral(11725) - aux1557)<=0)
-11725 -16422 0
-11719 -16422 0
-11719 -11725 -16423 0
c (0<=(SATLiteral(11719) + SATLiteral(11725) - aux1557))
11725 16423 0
11719 16423 0
11719 11725 16422 0
c ((SATLiteral(11721) + SATLiteral(11724) - aux1558)<=0)
-11724 -16425 0
-11721 -16425 0
-11721 -11724 -16426 0
c (0<=(SATLiteral(11721) + SATLiteral(11724) - aux1558))
11724 16426 0
11721 16426 0
11721 11724 16425 0
c ((SATLiteral(11720) + SATLiteral(11723) - aux1559)<=0)
-11723 -16428 0
-11720 -16428 0
-11720 -11723 -16429 0
c (0<=(SATLiteral(11720) + SATLiteral(11723) - aux1559))
11723 16429 0
11720 16429 0
11720 11723 16428 0
c ((aux1557 + aux1559 - aux1560)<=0)
16428 -16431 0
16429 -16432 0
16422 -16431 0
16422 16428 -16432 0
16422 16429 -16434 0
16423 -16432 0
16423 16428 -16434 0
16423 16429 -16436 0
c (0<=(aux1557 + aux1559 - aux1560))
-16429 16436 0
-16428 16434 0
-16423 16436 0
-16423 -16429 16434 0
-16423 -16428 16432 0
-16422 16434 0
-16422 -16429 16432 0
-16422 -16428 16431 0
c ((aux1556 + aux1558 - aux1561)<=0)
16425 -16438 0
16426 -16439 0
16419 -16438 0
16419 16425 -16439 0
16419 16426 -16441 0
16420 -16439 0
16420 16425 -16441 0
16420 16426 -16443 0
c (0<=(aux1556 + aux1558 - aux1561))
-16426 16443 0
-16425 16441 0
-16420 16443 0
-16420 -16426 16441 0
-16420 -16425 16439 0
-16419 16441 0
-16419 -16426 16439 0
-16419 -16425 16438 0
c ((SATLiteral(11734) + SATLiteral(16445) - aux1563)<=0)
-16445 -16446 0
-11734 -16446 0
-11734 -16445 -16447 0
c (0<=(SATLiteral(11734) + SATLiteral(16445) - aux1563))
16445 16447 0
11734 16447 0
11734 16445 16446 0
c ((SATLiteral(11727) + SATLiteral(11733) - aux1564)<=0)
-11733 -16449 0
-11727 -16449 0
-11727 -11733 -16450 0
c (0<=(SATLiteral(11727) + SATLiteral(11733) - aux1564))
11733 16450 0
11727 16450 0
11727 11733 16449 0
c ((SATLiteral(11729) + SATLiteral(11732) - aux1565)<=0)
-11732 -16452 0
-11729 -16452 0
-11729 -11732 -16453 0
c (0<=(SATLiteral(11729) + SATLiteral(11732) - aux1565))
11732 16453 0
11729 16453 0
11729 11732 16452 0
c ((SATLiteral(11728) + SATLiteral(11731) - aux1566)<=0)
-11731 -16455 0
-11728 -16455 0
-11728 -11731 -16456 0
c (0<=(SATLiteral(11728) + SATLiteral(11731) - aux1566))
11731 16456 0
11728 16456 0
11728 11731 16455 0
c ((aux1564 + aux1566 - aux1567)<=0)
16455 -16458 0
16456 -16459 0
16449 -16458 0
16449 16455 -16459 0
16449 16456 -16461 0
16450 -16459 0
16450 16455 -16461 0
16450 16456 -16463 0
c (0<=(aux1564 + aux1566 - aux1567))
-16456 16463 0
-16455 16461 0
-16450 16463 0
-16450 -16456 16461 0
-16450 -16455 16459 0
-16449 16461 0
-16449 -16456 16459 0
-16449 -16455 16458 0
c ((aux1563 + aux1565 - aux1568)<=0)
16452 -16465 0
16453 -16466 0
16446 -16465 0
16446 16452 -16466 0
16446 16453 -16468 0
16447 -16466 0
16447 16452 -16468 0
16447 16453 -16470 0
c (0<=(aux1563 + aux1565 - aux1568))
-16453 16470 0
-16452 16468 0
-16447 16470 0
-16447 -16453 16468 0
-16447 -16452 16466 0
-16446 16468 0
-16446 -16453 16466 0
-16446 -16452 16465 0
c ((SATLiteral(11742) + SATLiteral(16472) - aux1570)<=0)
-16472 -16473 0
-11742 -16473 0
-11742 -16472 -16474 0
c (0<=(SATLiteral(11742) + SATLiteral(16472) - aux1570))
16472 16474 0
11742 16474 0
11742 16472 16473 0
c ((SATLiteral(11735) + SATLiteral(11741) - aux1571)<=0)
-11741 -16476 0
-11735 -16476 0
-11735 -11741 -16477 0
c (0<=(SATLiteral(11735) + SATLiteral(11741) - aux1571))
11741 16477 0
11735 16477 0
11735 11741 16476 0
c ((SATLiteral(11737) + SATLiteral(11740) - aux1572)<=0)
-11740 -16479 0
-11737 -16479 0
-11737 -11740 -16480 0
c (0<=(SATLiteral(11737) + SATLiteral(11740) - aux1572))
11740 16480 0
11737 16480 0
11737 11740 16479 0
c ((SATLiteral(11736) + SATLiteral(11739) - aux1573)<=0)
-11739 -16482 0
-11736 -16482 0
-11736 -11739 -16483 0
c (0<=(SATLiteral(11736) + SATLiteral(11739) - aux1573))
11739 16483 0
11736 16483 0
11736 11739 16482 0
c ((aux1571 + aux1573 - aux1574)<=0)
16482 -16485 0
16483 -16486 0
16476 -16485 0
16476 16482 -16486 0
16476 16483 -16488 0
16477 -16486 0
16477 16482 -16488 0
16477 16483 -16490 0
c (0<=(aux1571 + aux1573 - aux1574))
-16483 16490 0
-16482 16488 0
-16477 16490 0
-16477 -16483 16488 0
-16477 -16482 16486 0
-16476 16488 0
-16476 -16483 16486 0
-16476 -16482 16485 0
c ((aux1570 + aux1572 - aux1575)<=0)
16479 -16492 0
16480 -16493 0
16473 -16492 0
16473 16479 -16493 0
16473 16480 -16495 0
16474 -16493 0
16474 16479 -16495 0
16474 16480 -16497 0
c (0<=(aux1570 + aux1572 - aux1575))
-16480 16497 0
-16479 16495 0
-16474 16497 0
-16474 -16480 16495 0
-16474 -16479 16493 0
-16473 16495 0
-16473 -16480 16493 0
-16473 -16479 16492 0
c ((SATLiteral(11750) + SATLiteral(16499) - aux1577)<=0)
-16499 -16500 0
-11750 -16500 0
-11750 -16499 -16501 0
c (0<=(SATLiteral(11750) + SATLiteral(16499) - aux1577))
16499 16501 0
11750 16501 0
11750 16499 16500 0
c ((SATLiteral(11743) + SATLiteral(11749) - aux1578)<=0)
-11749 -16503 0
-11743 -16503 0
-11743 -11749 -16504 0
c (0<=(SATLiteral(11743) + SATLiteral(11749) - aux1578))
11749 16504 0
11743 16504 0
11743 11749 16503 0
c ((SATLiteral(11745) + SATLiteral(11748) - aux1579)<=0)
-11748 -16506 0
-11745 -16506 0
-11745 -11748 -16507 0
c (0<=(SATLiteral(11745) + SATLiteral(11748) - aux1579))
11748 16507 0
11745 16507 0
11745 11748 16506 0
c ((SATLiteral(11744) + SATLiteral(11747) - aux1580)<=0)
-11747 -16509 0
-11744 -16509 0
-11744 -11747 -16510 0
c (0<=(SATLiteral(11744) + SATLiteral(11747) - aux1580))
11747 16510 0
11744 16510 0
11744 11747 16509 0
c ((aux1578 + aux1580 - aux1581)<=0)
16509 -16512 0
16510 -16513 0
16503 -16512 0
16503 16509 -16513 0
16503 16510 -16515 0
16504 -16513 0
16504 16509 -16515 0
16504 16510 -16517 0
c (0<=(aux1578 + aux1580 - aux1581))
-16510 16517 0
-16509 16515 0
-16504 16517 0
-16504 -16510 16515 0
-16504 -16509 16513 0
-16503 16515 0
-16503 -16510 16513 0
-16503 -16509 16512 0
c ((aux1577 + aux1579 - aux1582)<=0)
16506 -16519 0
16507 -16520 0
16500 -16519 0
16500 16506 -16520 0
16500 16507 -16522 0
16501 -16520 0
16501 16506 -16522 0
16501 16507 -16524 0
c (0<=(aux1577 + aux1579 - aux1582))
-16507 16524 0
-16506 16522 0
-16501 16524 0
-16501 -16507 16522 0
-16501 -16506 16520 0
-16500 16522 0
-16500 -16507 16520 0
-16500 -16506 16519 0
c ((SATLiteral(11758) + SATLiteral(16526) - aux1584)<=0)
-16526 -16527 0
-11758 -16527 0
-11758 -16526 -16528 0
c (0<=(SATLiteral(11758) + SATLiteral(16526) - aux1584))
16526 16528 0
11758 16528 0
11758 16526 16527 0
c ((SATLiteral(11751) + SATLiteral(11757) - aux1585)<=0)
-11757 -16530 0
-11751 -16530 0
-11751 -11757 -16531 0
c (0<=(SATLiteral(11751) + SATLiteral(11757) - aux1585))
11757 16531 0
11751 16531 0
11751 11757 16530 0
c ((SATLiteral(11753) + SATLiteral(11756) - aux1586)<=0)
-11756 -16533 0
-11753 -16533 0
-11753 -11756 -16534 0
c (0<=(SATLiteral(11753) + SATLiteral(11756) - aux1586))
11756 16534 0
11753 16534 0
11753 11756 16533 0
c ((SATLiteral(11752) + SATLiteral(11755) - aux1587)<=0)
-11755 -16536 0
-11752 -16536 0
-11752 -11755 -16537 0
c (0<=(SATLiteral(11752) + SATLiteral(11755) - aux1587))
11755 16537 0
11752 16537 0
11752 11755 16536 0
c ((aux1585 + aux1587 - aux1588)<=0)
16536 -16539 0
16537 -16540 0
16530 -16539 0
16530 16536 -16540 0
16530 16537 -16542 0
16531 -16540 0
16531 16536 -16542 0
16531 16537 -16544 0
c (0<=(aux1585 + aux1587 - aux1588))
-16537 16544 0
-16536 16542 0
-16531 16544 0
-16531 -16537 16542 0
-16531 -16536 16540 0
-16530 16542 0
-16530 -16537 16540 0
-16530 -16536 16539 0
c ((aux1584 + aux1586 - aux1589)<=0)
16533 -16546 0
16534 -16547 0
16527 -16546 0
16527 16533 -16547 0
16527 16534 -16549 0
16528 -16547 0
16528 16533 -16549 0
16528 16534 -16551 0
c (0<=(aux1584 + aux1586 - aux1589))
-16534 16551 0
-16533 16549 0
-16528 16551 0
-16528 -16534 16549 0
-16528 -16533 16547 0
-16527 16549 0
-16527 -16534 16547 0
-16527 -16533 16546 0
c ((SATLiteral(11766) + SATLiteral(16553) - aux1591)<=0)
-16553 -16554 0
-11766 -16554 0
-11766 -16553 -16555 0
c (0<=(SATLiteral(11766) + SATLiteral(16553) - aux1591))
16553 16555 0
11766 16555 0
11766 16553 16554 0
c ((SATLiteral(11759) + SATLiteral(11765) - aux1592)<=0)
-11765 -16557 0
-11759 -16557 0
-11759 -11765 -16558 0
c (0<=(SATLiteral(11759) + SATLiteral(11765) - aux1592))
11765 16558 0
11759 16558 0
11759 11765 16557 0
c ((SATLiteral(11761) + SATLiteral(11764) - aux1593)<=0)
-11764 -16560 0
-11761 -16560 0
-11761 -11764 -16561 0
c (0<=(SATLiteral(11761) + SATLiteral(11764) - aux1593))
11764 16561 0
11761 16561 0
11761 11764 16560 0
c ((SATLiteral(11760) + SATLiteral(11763) - aux1594)<=0)
-11763 -16563 0
-11760 -16563 0
-11760 -11763 -16564 0
c (0<=(SATLiteral(11760) + SATLiteral(11763) - aux1594))
11763 16564 0
11760 16564 0
11760 11763 16563 0
c ((aux1592 + aux1594 - aux1595)<=0)
16563 -16566 0
16564 -16567 0
16557 -16566 0
16557 16563 -16567 0
16557 16564 -16569 0
16558 -16567 0
16558 16563 -16569 0
16558 16564 -16571 0
c (0<=(aux1592 + aux1594 - aux1595))
-16564 16571 0
-16563 16569 0
-16558 16571 0
-16558 -16564 16569 0
-16558 -16563 16567 0
-16557 16569 0
-16557 -16564 16567 0
-16557 -16563 16566 0
c ((aux1591 + aux1593 - aux1596)<=0)
16560 -16573 0
16561 -16574 0
16554 -16573 0
16554 16560 -16574 0
16554 16561 -16576 0
16555 -16574 0
16555 16560 -16576 0
16555 16561 -16578 0
c (0<=(aux1591 + aux1593 - aux1596))
-16561 16578 0
-16560 16576 0
-16555 16578 0
-16555 -16561 16576 0
-16555 -16560 16574 0
-16554 16576 0
-16554 -16561 16574 0
-16554 -16560 16573 0
c ((SATLiteral(11774) + SATLiteral(16580) - aux1598)<=0)
-16580 -16581 0
-11774 -16581 0
-11774 -16580 -16582 0
c (0<=(SATLiteral(11774) + SATLiteral(16580) - aux1598))
16580 16582 0
11774 16582 0
11774 16580 16581 0
c ((SATLiteral(11767) + SATLiteral(11773) - aux1599)<=0)
-11773 -16584 0
-11767 -16584 0
-11767 -11773 -16585 0
c (0<=(SATLiteral(11767) + SATLiteral(11773) - aux1599))
11773 16585 0
11767 16585 0
11767 11773 16584 0
c ((SATLiteral(11769) + SATLiteral(11772) - aux1600)<=0)
-11772 -16587 0
-11769 -16587 0
-11769 -11772 -16588 0
c (0<=(SATLiteral(11769) + SATLiteral(11772) - aux1600))
11772 16588 0
11769 16588 0
11769 11772 16587 0
c ((SATLiteral(11768) + SATLiteral(11771) - aux1601)<=0)
-11771 -16590 0
-11768 -16590 0
-11768 -11771 -16591 0
c (0<=(SATLiteral(11768) + SATLiteral(11771) - aux1601))
11771 16591 0
11768 16591 0
11768 11771 16590 0
c ((aux1599 + aux1601 - aux1602)<=0)
16590 -16593 0
16591 -16594 0
16584 -16593 0
16584 16590 -16594 0
16584 16591 -16596 0
16585 -16594 0
16585 16590 -16596 0
16585 16591 -16598 0
c (0<=(aux1599 + aux1601 - aux1602))
-16591 16598 0
-16590 16596 0
-16585 16598 0
-16585 -16591 16596 0
-16585 -16590 16594 0
-16584 16596 0
-16584 -16591 16594 0
-16584 -16590 16593 0
c ((aux1598 + aux1600 - aux1603)<=0)
16587 -16600 0
16588 -16601 0
16581 -16600 0
16581 16587 -16601 0
16581 16588 -16603 0
16582 -16601 0
16582 16587 -16603 0
16582 16588 -16605 0
c (0<=(aux1598 + aux1600 - aux1603))
-16588 16605 0
-16587 16603 0
-16582 16605 0
-16582 -16588 16603 0
-16582 -16587 16601 0
-16581 16603 0
-16581 -16588 16601 0
-16581 -16587 16600 0
c ((SATLiteral(11782) + SATLiteral(16607) - aux1605)<=0)
-16607 -16608 0
-11782 -16608 0
-11782 -16607 -16609 0
c (0<=(SATLiteral(11782) + SATLiteral(16607) - aux1605))
16607 16609 0
11782 16609 0
11782 16607 16608 0
c ((SATLiteral(11775) + SATLiteral(11781) - aux1606)<=0)
-11781 -16611 0
-11775 -16611 0
-11775 -11781 -16612 0
c (0<=(SATLiteral(11775) + SATLiteral(11781) - aux1606))
11781 16612 0
11775 16612 0
11775 11781 16611 0
c ((SATLiteral(11777) + SATLiteral(11780) - aux1607)<=0)
-11780 -16614 0
-11777 -16614 0
-11777 -11780 -16615 0
c (0<=(SATLiteral(11777) + SATLiteral(11780) - aux1607))
11780 16615 0
11777 16615 0
11777 11780 16614 0
c ((SATLiteral(11776) + SATLiteral(11779) - aux1608)<=0)
-11779 -16617 0
-11776 -16617 0
-11776 -11779 -16618 0
c (0<=(SATLiteral(11776) + SATLiteral(11779) - aux1608))
11779 16618 0
11776 16618 0
11776 11779 16617 0
c ((aux1606 + aux1608 - aux1609)<=0)
16617 -16620 0
16618 -16621 0
16611 -16620 0
16611 16617 -16621 0
16611 16618 -16623 0
16612 -16621 0
16612 16617 -16623 0
16612 16618 -16625 0
c (0<=(aux1606 + aux1608 - aux1609))
-16618 16625 0
-16617 16623 0
-16612 16625 0
-16612 -16618 16623 0
-16612 -16617 16621 0
-16611 16623 0
-16611 -16618 16621 0
-16611 -16617 16620 0
c ((aux1605 + aux1607 - aux1610)<=0)
16614 -16627 0
16615 -16628 0
16608 -16627 0
16608 16614 -16628 0
16608 16615 -16630 0
16609 -16628 0
16609 16614 -16630 0
16609 16615 -16632 0
c (0<=(aux1605 + aux1607 - aux1610))
-16615 16632 0
-16614 16630 0
-16609 16632 0
-16609 -16615 16630 0
-16609 -16614 16628 0
-16608 16630 0
-16608 -16615 16628 0
-16608 -16614 16627 0
c ((SATLiteral(11783) + SATLiteral(16634) - aux1612)<=0)
-16634 -16635 0
-11783 -16635 0
-11783 -16634 -16636 0
c (0<=(SATLiteral(11783) + SATLiteral(16634) - aux1612))
16634 16636 0
11783 16636 0
11783 16634 16635 0
c ((SATLiteral(11786) + SATLiteral(11790) - aux1613)<=0)
-11790 -16638 0
-11786 -16638 0
-11786 -11790 -16639 0
c (0<=(SATLiteral(11786) + SATLiteral(11790) - aux1613))
11790 16639 0
11786 16639 0
11786 11790 16638 0
c ((SATLiteral(11784) + SATLiteral(11789) - aux1614)<=0)
-11789 -16641 0
-11784 -16641 0
-11784 -11789 -16642 0
c (0<=(SATLiteral(11784) + SATLiteral(11789) - aux1614))
11789 16642 0
11784 16642 0
11784 11789 16641 0
c ((SATLiteral(11785) + SATLiteral(11788) - aux1615)<=0)
-11788 -16644 0
-11785 -16644 0
-11785 -11788 -16645 0
c (0<=(SATLiteral(11785) + SATLiteral(11788) - aux1615))
11788 16645 0
11785 16645 0
11785 11788 16644 0
c ((aux1613 + aux1615 - aux1616)<=0)
16644 -16647 0
16645 -16648 0
16638 -16647 0
16638 16644 -16648 0
16638 16645 -16650 0
16639 -16648 0
16639 16644 -16650 0
16639 16645 -16652 0
c (0<=(aux1613 + aux1615 - aux1616))
-16645 16652 0
-16644 16650 0
-16639 16652 0
-16639 -16645 16650 0
-16639 -16644 16648 0
-16638 16650 0
-16638 -16645 16648 0
-16638 -16644 16647 0
c ((aux1612 + aux1614 - aux1617)<=0)
16641 -16654 0
16642 -16655 0
16635 -16654 0
16635 16641 -16655 0
16635 16642 -16657 0
16636 -16655 0
16636 16641 -16657 0
16636 16642 -16659 0
c (0<=(aux1612 + aux1614 - aux1617))
-16642 16659 0
-16641 16657 0
-16636 16659 0
-16636 -16642 16657 0
-16636 -16641 16655 0
-16635 16657 0
-16635 -16642 16655 0
-16635 -16641 16654 0
c ((SATLiteral(11791) + SATLiteral(16661) - aux1619)<=0)
-16661 -16662 0
-11791 -16662 0
-11791 -16661 -16663 0
c (0<=(SATLiteral(11791) + SATLiteral(16661) - aux1619))
16661 16663 0
11791 16663 0
11791 16661 16662 0
c ((SATLiteral(11794) + SATLiteral(11798) - aux1620)<=0)
-11798 -16665 0
-11794 -16665 0
-11794 -11798 -16666 0
c (0<=(SATLiteral(11794) + SATLiteral(11798) - aux1620))
11798 16666 0
11794 16666 0
11794 11798 16665 0
c ((SATLiteral(11792) + SATLiteral(11797) - aux1621)<=0)
-11797 -16668 0
-11792 -16668 0
-11792 -11797 -16669 0
c (0<=(SATLiteral(11792) + SATLiteral(11797) - aux1621))
11797 16669 0
11792 16669 0
11792 11797 16668 0
c ((SATLiteral(11793) + SATLiteral(11796) - aux1622)<=0)
-11796 -16671 0
-11793 -16671 0
-11793 -11796 -16672 0
c (0<=(SATLiteral(11793) + SATLiteral(11796) - aux1622))
11796 16672 0
11793 16672 0
11793 11796 16671 0
c ((aux1620 + aux1622 - aux1623)<=0)
16671 -16674 0
16672 -16675 0
16665 -16674 0
16665 16671 -16675 0
16665 16672 -16677 0
16666 -16675 0
16666 16671 -16677 0
16666 16672 -16679 0
c (0<=(aux1620 + aux1622 - aux1623))
-16672 16679 0
-16671 16677 0
-16666 16679 0
-16666 -16672 16677 0
-16666 -16671 16675 0
-16665 16677 0
-16665 -16672 16675 0
-16665 -16671 16674 0
c ((aux1619 + aux1621 - aux1624)<=0)
16668 -16681 0
16669 -16682 0
16662 -16681 0
16662 16668 -16682 0
16662 16669 -16684 0
16663 -16682 0
16663 16668 -16684 0
16663 16669 -16686 0
c (0<=(aux1619 + aux1621 - aux1624))
-16669 16686 0
-16668 16684 0
-16663 16686 0
-16663 -16669 16684 0
-16663 -16668 16682 0
-16662 16684 0
-16662 -16669 16682 0
-16662 -16668 16681 0
c ((SATLiteral(11799) + SATLiteral(16688) - aux1626)<=0)
-16688 -16689 0
-11799 -16689 0
-11799 -16688 -16690 0
c (0<=(SATLiteral(11799) + SATLiteral(16688) - aux1626))
16688 16690 0
11799 16690 0
11799 16688 16689 0
c ((SATLiteral(11802) + SATLiteral(11806) - aux1627)<=0)
-11806 -16692 0
-11802 -16692 0
-11802 -11806 -16693 0
c (0<=(SATLiteral(11802) + SATLiteral(11806) - aux1627))
11806 16693 0
11802 16693 0
11802 11806 16692 0
c ((SATLiteral(11800) + SATLiteral(11805) - aux1628)<=0)
-11805 -16695 0
-11800 -16695 0
-11800 -11805 -16696 0
c (0<=(SATLiteral(11800) + SATLiteral(11805) - aux1628))
11805 16696 0
11800 16696 0
11800 11805 16695 0
c ((SATLiteral(11801) + SATLiteral(11804) - aux1629)<=0)
-11804 -16698 0
-11801 -16698 0
-11801 -11804 -16699 0
c (0<=(SATLiteral(11801) + SATLiteral(11804) - aux1629))
11804 16699 0
11801 16699 0
11801 11804 16698 0
c ((aux1627 + aux1629 - aux1630)<=0)
16698 -16701 0
16699 -16702 0
16692 -16701 0
16692 16698 -16702 0
16692 16699 -16704 0
16693 -16702 0
16693 16698 -16704 0
16693 16699 -16706 0
c (0<=(aux1627 + aux1629 - aux1630))
-16699 16706 0
-16698 16704 0
-16693 16706 0
-16693 -16699 16704 0
-16693 -16698 16702 0
-16692 16704 0
-16692 -16699 16702 0
-16692 -16698 16701 0
c ((aux1626 + aux1628 - aux1631)<=0)
16695 -16708 0
16696 -16709 0
16689 -16708 0
16689 16695 -16709 0
16689 16696 -16711 0
16690 -16709 0
16690 16695 -16711 0
16690 16696 -16713 0
c (0<=(aux1626 + aux1628 - aux1631))
-16696 16713 0
-16695 16711 0
-16690 16713 0
-16690 -16696 16711 0
-16690 -16695 16709 0
-16689 16711 0
-16689 -16696 16709 0
-16689 -16695 16708 0
c ((SATLiteral(11807) + SATLiteral(16715) - aux1633)<=0)
-16715 -16716 0
-11807 -16716 0
-11807 -16715 -16717 0
c (0<=(SATLiteral(11807) + SATLiteral(16715) - aux1633))
16715 16717 0
11807 16717 0
11807 16715 16716 0
c ((SATLiteral(11810) + SATLiteral(11814) - aux1634)<=0)
-11814 -16719 0
-11810 -16719 0
-11810 -11814 -16720 0
c (0<=(SATLiteral(11810) + SATLiteral(11814) - aux1634))
11814 16720 0
11810 16720 0
11810 11814 16719 0
c ((SATLiteral(11808) + SATLiteral(11813) - aux1635)<=0)
-11813 -16722 0
-11808 -16722 0
-11808 -11813 -16723 0
c (0<=(SATLiteral(11808) + SATLiteral(11813) - aux1635))
11813 16723 0
11808 16723 0
11808 11813 16722 0
c ((SATLiteral(11809) + SATLiteral(11812) - aux1636)<=0)
-11812 -16725 0
-11809 -16725 0
-11809 -11812 -16726 0
c (0<=(SATLiteral(11809) + SATLiteral(11812) - aux1636))
11812 16726 0
11809 16726 0
11809 11812 16725 0
c ((aux1634 + aux1636 - aux1637)<=0)
16725 -16728 0
16726 -16729 0
16719 -16728 0
16719 16725 -16729 0
16719 16726 -16731 0
16720 -16729 0
16720 16725 -16731 0
16720 16726 -16733 0
c (0<=(aux1634 + aux1636 - aux1637))
-16726 16733 0
-16725 16731 0
-16720 16733 0
-16720 -16726 16731 0
-16720 -16725 16729 0
-16719 16731 0
-16719 -16726 16729 0
-16719 -16725 16728 0
c ((aux1633 + aux1635 - aux1638)<=0)
16722 -16735 0
16723 -16736 0
16716 -16735 0
16716 16722 -16736 0
16716 16723 -16738 0
16717 -16736 0
16717 16722 -16738 0
16717 16723 -16740 0
c (0<=(aux1633 + aux1635 - aux1638))
-16723 16740 0
-16722 16738 0
-16717 16740 0
-16717 -16723 16738 0
-16717 -16722 16736 0
-16716 16738 0
-16716 -16723 16736 0
-16716 -16722 16735 0
c ((SATLiteral(11815) + SATLiteral(16742) - aux1640)<=0)
-16742 -16743 0
-11815 -16743 0
-11815 -16742 -16744 0
c (0<=(SATLiteral(11815) + SATLiteral(16742) - aux1640))
16742 16744 0
11815 16744 0
11815 16742 16743 0
c ((SATLiteral(11818) + SATLiteral(11822) - aux1641)<=0)
-11822 -16746 0
-11818 -16746 0
-11818 -11822 -16747 0
c (0<=(SATLiteral(11818) + SATLiteral(11822) - aux1641))
11822 16747 0
11818 16747 0
11818 11822 16746 0
c ((SATLiteral(11816) + SATLiteral(11821) - aux1642)<=0)
-11821 -16749 0
-11816 -16749 0
-11816 -11821 -16750 0
c (0<=(SATLiteral(11816) + SATLiteral(11821) - aux1642))
11821 16750 0
11816 16750 0
11816 11821 16749 0
c ((SATLiteral(11817) + SATLiteral(11820) - aux1643)<=0)
-11820 -16752 0
-11817 -16752 0
-11817 -11820 -16753 0
c (0<=(SATLiteral(11817) + SATLiteral(11820) - aux1643))
11820 16753 0
11817 16753 0
11817 11820 16752 0
c ((aux1641 + aux1643 - aux1644)<=0)
16752 -16755 0
16753 -16756 0
16746 -16755 0
16746 16752 -16756 0
16746 16753 -16758 0
16747 -16756 0
16747 16752 -16758 0
16747 16753 -16760 0
c (0<=(aux1641 + aux1643 - aux1644))
-16753 16760 0
-16752 16758 0
-16747 16760 0
-16747 -16753 16758 0
-16747 -16752 16756 0
-16746 16758 0
-16746 -16753 16756 0
-16746 -16752 16755 0
c ((aux1640 + aux1642 - aux1645)<=0)
16749 -16762 0
16750 -16763 0
16743 -16762 0
16743 16749 -16763 0
16743 16750 -16765 0
16744 -16763 0
16744 16749 -16765 0
16744 16750 -16767 0
c (0<=(aux1640 + aux1642 - aux1645))
-16750 16767 0
-16749 16765 0
-16744 16767 0
-16744 -16750 16765 0
-16744 -16749 16763 0
-16743 16765 0
-16743 -16750 16763 0
-16743 -16749 16762 0
c ((SATLiteral(11823) + SATLiteral(16769) - aux1647)<=0)
-16769 -16770 0
-11823 -16770 0
-11823 -16769 -16771 0
c (0<=(SATLiteral(11823) + SATLiteral(16769) - aux1647))
16769 16771 0
11823 16771 0
11823 16769 16770 0
c ((SATLiteral(11826) + SATLiteral(11830) - aux1648)<=0)
-11830 -16773 0
-11826 -16773 0
-11826 -11830 -16774 0
c (0<=(SATLiteral(11826) + SATLiteral(11830) - aux1648))
11830 16774 0
11826 16774 0
11826 11830 16773 0
c ((SATLiteral(11824) + SATLiteral(11829) - aux1649)<=0)
-11829 -16776 0
-11824 -16776 0
-11824 -11829 -16777 0
c (0<=(SATLiteral(11824) + SATLiteral(11829) - aux1649))
11829 16777 0
11824 16777 0
11824 11829 16776 0
c ((SATLiteral(11825) + SATLiteral(11828) - aux1650)<=0)
-11828 -16779 0
-11825 -16779 0
-11825 -11828 -16780 0
c (0<=(SATLiteral(11825) + SATLiteral(11828) - aux1650))
11828 16780 0
11825 16780 0
11825 11828 16779 0
c ((aux1648 + aux1650 - aux1651)<=0)
16779 -16782 0
16780 -16783 0
16773 -16782 0
16773 16779 -16783 0
16773 16780 -16785 0
16774 -16783 0
16774 16779 -16785 0
16774 16780 -16787 0
c (0<=(aux1648 + aux1650 - aux1651))
-16780 16787 0
-16779 16785 0
-16774 16787 0
-16774 -16780 16785 0
-16774 -16779 16783 0
-16773 16785 0
-16773 -16780 16783 0
-16773 -16779 16782 0
c ((aux1647 + aux1649 - aux1652)<=0)
16776 -16789 0
16777 -16790 0
16770 -16789 0
16770 16776 -16790 0
16770 16777 -16792 0
16771 -16790 0
16771 16776 -16792 0
16771 16777 -16794 0
c (0<=(aux1647 + aux1649 - aux1652))
-16777 16794 0
-16776 16792 0
-16771 16794 0
-16771 -16777 16792 0
-16771 -16776 16790 0
-16770 16792 0
-16770 -16777 16790 0
-16770 -16776 16789 0
c ((SATLiteral(11831) + SATLiteral(16796) - aux1654)<=0)
-16796 -16797 0
-11831 -16797 0
-11831 -16796 -16798 0
c (0<=(SATLiteral(11831) + SATLiteral(16796) - aux1654))
16796 16798 0
11831 16798 0
11831 16796 16797 0
c ((SATLiteral(11834) + SATLiteral(11838) - aux1655)<=0)
-11838 -16800 0
-11834 -16800 0
-11834 -11838 -16801 0
c (0<=(SATLiteral(11834) + SATLiteral(11838) - aux1655))
11838 16801 0
11834 16801 0
11834 11838 16800 0
c ((SATLiteral(11832) + SATLiteral(11837) - aux1656)<=0)
-11837 -16803 0
-11832 -16803 0
-11832 -11837 -16804 0
c (0<=(SATLiteral(11832) + SATLiteral(11837) - aux1656))
11837 16804 0
11832 16804 0
11832 11837 16803 0
c ((SATLiteral(11833) + SATLiteral(11836) - aux1657)<=0)
-11836 -16806 0
-11833 -16806 0
-11833 -11836 -16807 0
c (0<=(SATLiteral(11833) + SATLiteral(11836) - aux1657))
11836 16807 0
11833 16807 0
11833 11836 16806 0
c ((aux1655 + aux1657 - aux1658)<=0)
16806 -16809 0
16807 -16810 0
16800 -16809 0
16800 16806 -16810 0
16800 16807 -16812 0
16801 -16810 0
16801 16806 -16812 0
16801 16807 -16814 0
c (0<=(aux1655 + aux1657 - aux1658))
-16807 16814 0
-16806 16812 0
-16801 16814 0
-16801 -16807 16812 0
-16801 -16806 16810 0
-16800 16812 0
-16800 -16807 16810 0
-16800 -16806 16809 0
c ((aux1654 + aux1656 - aux1659)<=0)
16803 -16816 0
16804 -16817 0
16797 -16816 0
16797 16803 -16817 0
16797 16804 -16819 0
16798 -16817 0
16798 16803 -16819 0
16798 16804 -16821 0
c (0<=(aux1654 + aux1656 - aux1659))
-16804 16821 0
-16803 16819 0
-16798 16821 0
-16798 -16804 16819 0
-16798 -16803 16817 0
-16797 16819 0
-16797 -16804 16817 0
-16797 -16803 16816 0
c ((SATLiteral(11839) + SATLiteral(16823) - aux1661)<=0)
-16823 -16824 0
-11839 -16824 0
-11839 -16823 -16825 0
c (0<=(SATLiteral(11839) + SATLiteral(16823) - aux1661))
16823 16825 0
11839 16825 0
11839 16823 16824 0
c ((SATLiteral(11842) + SATLiteral(11846) - aux1662)<=0)
-11846 -16827 0
-11842 -16827 0
-11842 -11846 -16828 0
c (0<=(SATLiteral(11842) + SATLiteral(11846) - aux1662))
11846 16828 0
11842 16828 0
11842 11846 16827 0
c ((SATLiteral(11840) + SATLiteral(11845) - aux1663)<=0)
-11845 -16830 0
-11840 -16830 0
-11840 -11845 -16831 0
c (0<=(SATLiteral(11840) + SATLiteral(11845) - aux1663))
11845 16831 0
11840 16831 0
11840 11845 16830 0
c ((SATLiteral(11841) + SATLiteral(11844) - aux1664)<=0)
-11844 -16833 0
-11841 -16833 0
-11841 -11844 -16834 0
c (0<=(SATLiteral(11841) + SATLiteral(11844) - aux1664))
11844 16834 0
11841 16834 0
11841 11844 16833 0
c ((aux1662 + aux1664 - aux1665)<=0)
16833 -16836 0
16834 -16837 0
16827 -16836 0
16827 16833 -16837 0
16827 16834 -16839 0
16828 -16837 0
16828 16833 -16839 0
16828 16834 -16841 0
c (0<=(aux1662 + aux1664 - aux1665))
-16834 16841 0
-16833 16839 0
-16828 16841 0
-16828 -16834 16839 0
-16828 -16833 16837 0
-16827 16839 0
-16827 -16834 16837 0
-16827 -16833 16836 0
c ((aux1661 + aux1663 - aux1666)<=0)
16830 -16843 0
16831 -16844 0
16824 -16843 0
16824 16830 -16844 0
16824 16831 -16846 0
16825 -16844 0
16825 16830 -16846 0
16825 16831 -16848 0
c (0<=(aux1661 + aux1663 - aux1666))
-16831 16848 0
-16830 16846 0
-16825 16848 0
-16825 -16831 16846 0
-16825 -16830 16844 0
-16824 16846 0
-16824 -16831 16844 0
-16824 -16830 16843 0
c ((SATLiteral(11847) + SATLiteral(16850) - aux1668)<=0)
-16850 -16851 0
-11847 -16851 0
-11847 -16850 -16852 0
c (0<=(SATLiteral(11847) + SATLiteral(16850) - aux1668))
16850 16852 0
11847 16852 0
11847 16850 16851 0
c ((SATLiteral(11850) + SATLiteral(11854) - aux1669)<=0)
-11854 -16854 0
-11850 -16854 0
-11850 -11854 -16855 0
c (0<=(SATLiteral(11850) + SATLiteral(11854) - aux1669))
11854 16855 0
11850 16855 0
11850 11854 16854 0
c ((SATLiteral(11848) + SATLiteral(11853) - aux1670)<=0)
-11853 -16857 0
-11848 -16857 0
-11848 -11853 -16858 0
c (0<=(SATLiteral(11848) + SATLiteral(11853) - aux1670))
11853 16858 0
11848 16858 0
11848 11853 16857 0
c ((SATLiteral(11849) + SATLiteral(11852) - aux1671)<=0)
-11852 -16860 0
-11849 -16860 0
-11849 -11852 -16861 0
c (0<=(SATLiteral(11849) + SATLiteral(11852) - aux1671))
11852 16861 0
11849 16861 0
11849 11852 16860 0
c ((aux1669 + aux1671 - aux1672)<=0)
16860 -16863 0
16861 -16864 0
16854 -16863 0
16854 16860 -16864 0
16854 16861 -16866 0
16855 -16864 0
16855 16860 -16866 0
16855 16861 -16868 0
c (0<=(aux1669 + aux1671 - aux1672))
-16861 16868 0
-16860 16866 0
-16855 16868 0
-16855 -16861 16866 0
-16855 -16860 16864 0
-16854 16866 0
-16854 -16861 16864 0
-16854 -16860 16863 0
c ((aux1668 + aux1670 - aux1673)<=0)
16857 -16870 0
16858 -16871 0
16851 -16870 0
16851 16857 -16871 0
16851 16858 -16873 0
16852 -16871 0
16852 16857 -16873 0
16852 16858 -16875 0
c (0<=(aux1668 + aux1670 - aux1673))
-16858 16875 0
-16857 16873 0
-16852 16875 0
-16852 -16858 16873 0
-16852 -16857 16871 0
-16851 16873 0
-16851 -16858 16871 0
-16851 -16857 16870 0
c ((aux1427 + aux1428 - shift(sky_left_00001_00001, -9))<=8)
15925 -6167 0
15926 -6168 0
15928 -6170 0
15930 -6172 0
15918 -6167 0
15918 15925 -6168 0
15918 15926 -6170 0
15918 15928 -6172 0
15918 15930 -6174 0
15919 -6168 0
15919 15925 -6170 0
15919 15926 -6172 0
15919 15928 -6174 0
15919 15930 -6176 0
15921 -6170 0
15921 15925 -6172 0
15921 15926 -6174 0
15921 15928 -6176 0
15921 15930 -6178 0
15923 -6172 0
15923 15925 -6174 0
15923 15926 -6176 0
15923 15928 -6178 0
15923 15930 -6180 0
c (8<=(aux1427 + aux1428 - shift(sky_left_00001_00001, -9)))
-15930 6180 0
-15928 6178 0
-15926 6176 0
-15925 6174 0
-15923 6180 0
-15923 -15930 6178 0
-15923 -15928 6176 0
-15923 -15926 6174 0
-15923 -15925 6172 0
-15921 6178 0
-15921 -15930 6176 0
-15921 -15928 6174 0
-15921 -15926 6172 0
-15921 -15925 6170 0
-15919 6176 0
-15919 -15930 6174 0
-15919 -15928 6172 0
-15919 -15926 6170 0
-15919 -15925 6168 0
-15918 6174 0
-15918 -15930 6172 0
-15918 -15928 6170 0
-15918 -15926 6168 0
-15918 -15925 6167 0
c ((aux1434 + aux1435 - shift(sky_left_00001_00002, -9))<=8)
15952 -6182 0
15953 -6183 0
15955 -6185 0
15957 -6187 0
15945 -6182 0
15945 15952 -6183 0
15945 15953 -6185 0
15945 15955 -6187 0
15945 15957 -6189 0
15946 -6183 0
15946 15952 -6185 0
15946 15953 -6187 0
15946 15955 -6189 0
15946 15957 -6191 0
15948 -6185 0
15948 15952 -6187 0
15948 15953 -6189 0
15948 15955 -6191 0
15948 15957 -6193 0
15950 -6187 0
15950 15952 -6189 0
15950 15953 -6191 0
15950 15955 -6193 0
15950 15957 -6195 0
c (8<=(aux1434 + aux1435 - shift(sky_left_00001_00002, -9)))
-15957 6195 0
-15955 6193 0
-15953 6191 0
-15952 6189 0
-15950 6195 0
-15950 -15957 6193 0
-15950 -15955 6191 0
-15950 -15953 6189 0
-15950 -15952 6187 0
-15948 6193 0
-15948 -15957 6191 0
-15948 -15955 6189 0
-15948 -15953 6187 0
-15948 -15952 6185 0
-15946 6191 0
-15946 -15957 6189 0
-15946 -15955 6187 0
-15946 -15953 6185 0
-15946 -15952 6183 0
-15945 6189 0
-15945 -15957 6187 0
-15945 -15955 6185 0
-15945 -15953 6183 0
-15945 -15952 6182 0
c ((aux1441 + aux1442 - shift(sky_left_00001_00003, -9))<=8)
15979 -6197 0
15980 -6198 0
15982 -6200 0
15984 -6202 0
15972 -6197 0
15972 15979 -6198 0
15972 15980 -6200 0
15972 15982 -6202 0
15972 15984 -6204 0
15973 -6198 0
15973 15979 -6200 0
15973 15980 -6202 0
15973 15982 -6204 0
15973 15984 -6206 0
15975 -6200 0
15975 15979 -6202 0
15975 15980 -6204 0
15975 15982 -6206 0
15975 15984 -6208 0
15977 -6202 0
15977 15979 -6204 0
15977 15980 -6206 0
15977 15982 -6208 0
15977 15984 -6210 0
c (8<=(aux1441 + aux1442 - shift(sky_left_00001_00003, -9)))
-15984 6210 0
-15982 6208 0
-15980 6206 0
-15979 6204 0
-15977 6210 0
-15977 -15984 6208 0
-15977 -15982 6206 0
-15977 -15980 6204 0
-15977 -15979 6202 0
-15975 6208 0
-15975 -15984 6206 0
-15975 -15982 6204 0
-15975 -15980 6202 0
-15975 -15979 6200 0
-15973 6206 0
-15973 -15984 6204 0
-15973 -15982 6202 0
-15973 -15980 6200 0
-15973 -15979 6198 0
-15972 6204 0
-15972 -15984 6202 0
-15972 -15982 6200 0
-15972 -15980 6198 0
-15972 -15979 6197 0
c ((aux1448 + aux1449 - shift(sky_left_00001_00004, -9))<=8)
16006 -6212 0
16007 -6213 0
16009 -6215 0
16011 -6217 0
15999 -6212 0
15999 16006 -6213 0
15999 16007 -6215 0
15999 16009 -6217 0
15999 16011 -6219 0
16000 -6213 0
16000 16006 -6215 0
16000 16007 -6217 0
16000 16009 -6219 0
16000 16011 -6221 0
16002 -6215 0
16002 16006 -6217 0
16002 16007 -6219 0
16002 16009 -6221 0
16002 16011 -6223 0
16004 -6217 0
16004 16006 -6219 0
16004 16007 -6221 0
16004 16009 -6223 0
16004 16011 -6225 0
c (8<=(aux1448 + aux1449 - shift(sky_left_00001_00004, -9)))
-16011 6225 0
-16009 6223 0
-16007 6221 0
-16006 6219 0
-16004 6225 0
-16004 -16011 6223 0
-16004 -16009 6221 0
-16004 -16007 6219 0
-16004 -16006 6217 0
-16002 6223 0
-16002 -16011 6221 0
-16002 -16009 6219 0
-16002 -16007 6217 0
-16002 -16006 6215 0
-16000 6221 0
-16000 -16011 6219 0
-16000 -16009 6217 0
-16000 -16007 6215 0
-16000 -16006 6213 0
-15999 6219 0
-15999 -16011 6217 0
-15999 -16009 6215 0
-15999 -16007 6213 0
-15999 -16006 6212 0
c ((aux1455 + aux1456 - shift(sky_left_00001_00005, -9))<=8)
16033 -6227 0
16034 -6228 0
16036 -6230 0
16038 -6232 0
16026 -6227 0
16026 16033 -6228 0
16026 16034 -6230 0
16026 16036 -6232 0
16026 16038 -6234 0
16027 -6228 0
16027 16033 -6230 0
16027 16034 -6232 0
16027 16036 -6234 0
16027 16038 -6236 0
16029 -6230 0
16029 16033 -6232 0
16029 16034 -6234 0
16029 16036 -6236 0
16029 16038 -6238 0
16031 -6232 0
16031 16033 -6234 0
16031 16034 -6236 0
16031 16036 -6238 0
16031 16038 -6240 0
c (8<=(aux1455 + aux1456 - shift(sky_left_00001_00005, -9)))
-16038 6240 0
-16036 6238 0
-16034 6236 0
-16033 6234 0
-16031 6240 0
-16031 -16038 6238 0
-16031 -16036 6236 0
-16031 -16034 6234 0
-16031 -16033 6232 0
-16029 6238 0
-16029 -16038 6236 0
-16029 -16036 6234 0
-16029 -16034 6232 0
-16029 -16033 6230 0
-16027 6236 0
-16027 -16038 6234 0
-16027 -16036 6232 0
-16027 -16034 6230 0
-16027 -16033 6228 0
-16026 6234 0
-16026 -16038 6232 0
-16026 -16036 6230 0
-16026 -16034 6228 0
-16026 -16033 6227 0
c ((aux1462 + aux1463 - shift(sky_left_00001_00006, -9))<=8)
16060 -6242 0
16061 -6243 0
16063 -6245 0
16065 -6247 0
16053 -6242 0
16053 16060 -6243 0
16053 16061 -6245 0
16053 16063 -6247 0
16053 16065 -6249 0
16054 -6243 0
16054 16060 -6245 0
16054 16061 -6247 0
16054 16063 -6249 0
16054 16065 -6251 0
16056 -6245 0
16056 16060 -6247 0
16056 16061 -6249 0
16056 16063 -6251 0
16056 16065 -6253 0
16058 -6247 0
16058 16060 -6249 0
16058 16061 -6251 0
16058 16063 -6253 0
16058 16065 -6255 0
c (8<=(aux1462 + aux1463 - shift(sky_left_00001_00006, -9)))
-16065 6255 0
-16063 6253 0
-16061 6251 0
-16060 6249 0
-16058 6255 0
-16058 -16065 6253 0
-16058 -16063 6251 0
-16058 -16061 6249 0
-16058 -16060 6247 0
-16056 6253 0
-16056 -16065 6251 0
-16056 -16063 6249 0
-16056 -16061 6247 0
-16056 -16060 6245 0
-16054 6251 0
-16054 -16065 6249 0
-16054 -16063 6247 0
-16054 -16061 6245 0
-16054 -16060 6243 0
-16053 6249 0
-16053 -16065 6247 0
-16053 -16063 6245 0
-16053 -16061 6243 0
-16053 -16060 6242 0
c ((aux1469 + aux1470 - shift(sky_left_00001_00007, -9))<=8)
16087 -6257 0
16088 -6258 0
16090 -6260 0
16092 -6262 0
16080 -6257 0
16080 16087 -6258 0
16080 16088 -6260 0
16080 16090 -6262 0
16080 16092 -6264 0
16081 -6258 0
16081 16087 -6260 0
16081 16088 -6262 0
16081 16090 -6264 0
16081 16092 -6266 0
16083 -6260 0
16083 16087 -6262 0
16083 16088 -6264 0
16083 16090 -6266 0
16083 16092 -6268 0
16085 -6262 0
16085 16087 -6264 0
16085 16088 -6266 0
16085 16090 -6268 0
16085 16092 -6270 0
c (8<=(aux1469 + aux1470 - shift(sky_left_00001_00007, -9)))
-16092 6270 0
-16090 6268 0
-16088 6266 0
-16087 6264 0
-16085 6270 0
-16085 -16092 6268 0
-16085 -16090 6266 0
-16085 -16088 6264 0
-16085 -16087 6262 0
-16083 6268 0
-16083 -16092 6266 0
-16083 -16090 6264 0
-16083 -16088 6262 0
-16083 -16087 6260 0
-16081 6266 0
-16081 -16092 6264 0
-16081 -16090 6262 0
-16081 -16088 6260 0
-16081 -16087 6258 0
-16080 6264 0
-16080 -16092 6262 0
-16080 -16090 6260 0
-16080 -16088 6258 0
-16080 -16087 6257 0
c ((aux1476 + aux1477 - shift(sky_left_00001_00008, -9))<=8)
16114 -6272 0
16115 -6273 0
16117 -6275 0
16119 -6277 0
16107 -6272 0
16107 16114 -6273 0
16107 16115 -6275 0
16107 16117 -6277 0
16107 16119 -6279 0
16108 -6273 0
16108 16114 -6275 0
16108 16115 -6277 0
16108 16117 -6279 0
16108 16119 -6281 0
16110 -6275 0
16110 16114 -6277 0
16110 16115 -6279 0
16110 16117 -6281 0
16110 16119 -6283 0
16112 -6277 0
16112 16114 -6279 0
16112 16115 -6281 0
16112 16117 -6283 0
16112 16119 -6285 0
c (8<=(aux1476 + aux1477 - shift(sky_left_00001_00008, -9)))
-16119 6285 0
-16117 6283 0
-16115 6281 0
-16114 6279 0
-16112 6285 0
-16112 -16119 6283 0
-16112 -16117 6281 0
-16112 -16115 6279 0
-16112 -16114 6277 0
-16110 6283 0
-16110 -16119 6281 0
-16110 -16117 6279 0
-16110 -16115 6277 0
-16110 -16114 6275 0
-16108 6281 0
-16108 -16119 6279 0
-16108 -16117 6277 0
-16108 -16115 6275 0
-16108 -16114 6273 0
-16107 6279 0
-16107 -16119 6277 0
-16107 -16117 6275 0
-16107 -16115 6273 0
-16107 -16114 6272 0
c ((aux1483 + aux1484 - shift(sky_left_00001_00009, -9))<=8)
16141 -6287 0
16142 -6288 0
16144 -6290 0
16146 -6292 0
16134 -6287 0
16134 16141 -6288 0
16134 16142 -6290 0
16134 16144 -6292 0
16134 16146 -6294 0
16135 -6288 0
16135 16141 -6290 0
16135 16142 -6292 0
16135 16144 -6294 0
16135 16146 -6296 0
16137 -6290 0
16137 16141 -6292 0
16137 16142 -6294 0
16137 16144 -6296 0
16137 16146 -6298 0
16139 -6292 0
16139 16141 -6294 0
16139 16142 -6296 0
16139 16144 -6298 0
16139 16146 -6300 0
c (8<=(aux1483 + aux1484 - shift(sky_left_00001_00009, -9)))
-16146 6300 0
-16144 6298 0
-16142 6296 0
-16141 6294 0
-16139 6300 0
-16139 -16146 6298 0
-16139 -16144 6296 0
-16139 -16142 6294 0
-16139 -16141 6292 0
-16137 6298 0
-16137 -16146 6296 0
-16137 -16144 6294 0
-16137 -16142 6292 0
-16137 -16141 6290 0
-16135 6296 0
-16135 -16146 6294 0
-16135 -16144 6292 0
-16135 -16142 6290 0
-16135 -16141 6288 0
-16134 6294 0
-16134 -16146 6292 0
-16134 -16144 6290 0
-16134 -16142 6288 0
-16134 -16141 6287 0
c ((aux1490 + aux1491 - shift(sky_left_00002_00001, -9))<=8)
16168 -6302 0
16169 -6303 0
16171 -6305 0
16173 -6307 0
16161 -6302 0
16161 16168 -6303 0
16161 16169 -6305 0
16161 16171 -6307 0
16161 16173 -6309 0
16162 -6303 0
16162 16168 -6305 0
16162 16169 -6307 0
16162 16171 -6309 0
16162 16173 -6311 0
16164 -6305 0
16164 16168 -6307 0
16164 16169 -6309 0
16164 16171 -6311 0
16164 16173 -6313 0
16166 -6307 0
16166 16168 -6309 0
16166 16169 -6311 0
16166 16171 -6313 0
16166 16173 -6315 0
c (8<=(aux1490 + aux1491 - shift(sky_left_00002_00001, -9)))
-16173 6315 0
-16171 6313 0
-16169 6311 0
-16168 6309 0
-16166 6315 0
-16166 -16173 6313 0
-16166 -16171 6311 0
-16166 -16169 6309 0
-16166 -16168 6307 0
-16164 6313 0
-16164 -16173 6311 0
-16164 -16171 6309 0
-16164 -16169 6307 0
-16164 -16168 6305 0
-16162 6311 0
-16162 -16173 6309 0
-16162 -16171 6307 0
-16162 -16169 6305 0
-16162 -16168 6303 0
-16161 6309 0
-16161 -16173 6307 0
-16161 -16171 6305 0
-16161 -16169 6303 0
-16161 -16168 6302 0
c ((aux1497 + aux1498 - shift(sky_left_00002_00002, -9))<=8)
16195 -6317 0
16196 -6318 0
16198 -6320 0
16200 -6322 0
16188 -6317 0
16188 16195 -6318 0
16188 16196 -6320 0
16188 16198 -6322 0
16188 16200 -6324 0
16189 -6318 0
16189 16195 -6320 0
16189 16196 -6322 0
16189 16198 -6324 0
16189 16200 -6326 0
16191 -6320 0
16191 16195 -6322 0
16191 16196 -6324 0
16191 16198 -6326 0
16191 16200 -6328 0
16193 -6322 0
16193 16195 -6324 0
16193 16196 -6326 0
16193 16198 -6328 0
16193 16200 -6330 0
c (8<=(aux1497 + aux1498 - shift(sky_left_00002_00002, -9)))
-16200 6330 0
-16198 6328 0
-16196 6326 0
-16195 6324 0
-16193 6330 0
-16193 -16200 6328 0
-16193 -16198 6326 0
-16193 -16196 6324 0
-16193 -16195 6322 0
-16191 6328 0
-16191 -16200 6326 0
-16191 -16198 6324 0
-16191 -16196 6322 0
-16191 -16195 6320 0
-16189 6326 0
-16189 -16200 6324 0
-16189 -16198 6322 0
-16189 -16196 6320 0
-16189 -16195 6318 0
-16188 6324 0
-16188 -16200 6322 0
-16188 -16198 6320 0
-16188 -16196 6318 0
-16188 -16195 6317 0
c ((aux1504 + aux1505 - shift(sky_left_00002_00003, -9))<=8)
16222 -6332 0
16223 -6333 0
16225 -6335 0
16227 -6337 0
16215 -6332 0
16215 16222 -6333 0
16215 16223 -6335 0
16215 16225 -6337 0
16215 16227 -6339 0
16216 -6333 0
16216 16222 -6335 0
16216 16223 -6337 0
16216 16225 -6339 0
16216 16227 -6341 0
16218 -6335 0
16218 16222 -6337 0
16218 16223 -6339 0
16218 16225 -6341 0
16218 16227 -6343 0
16220 -6337 0
16220 16222 -6339 0
16220 16223 -6341 0
16220 16225 -6343 0
16220 16227 -6345 0
c (8<=(aux1504 + aux1505 - shift(sky_left_00002_00003, -9)))
-16227 6345 0
-16225 6343 0
-16223 6341 0
-16222 6339 0
-16220 6345 0
-16220 -16227 6343 0
-16220 -16225 6341 0
-16220 -16223 6339 0
-16220 -16222 6337 0
-16218 6343 0
-16218 -16227 6341 0
-16218 -16225 6339 0
-16218 -16223 6337 0
-16218 -16222 6335 0
-16216 6341 0
-16216 -16227 6339 0
-16216 -16225 6337 0
-16216 -16223 6335 0
-16216 -16222 6333 0
-16215 6339 0
-16215 -16227 6337 0
-16215 -16225 6335 0
-16215 -16223 6333 0
-16215 -16222 6332 0
c ((aux1511 + aux1512 - shift(sky_left_00002_00004, -9))<=8)
16249 -6347 0
16250 -6348 0
16252 -6350 0
16254 -6352 0
16242 -6347 0
16242 16249 -6348 0
16242 16250 -6350 0
16242 16252 -6352 0
16242 16254 -6354 0
16243 -6348 0
16243 16249 -6350 0
16243 16250 -6352 0
16243 16252 -6354 0
16243 16254 -6356 0
16245 -6350 0
16245 16249 -6352 0
16245 16250 -6354 0
16245 16252 -6356 0
16245 16254 -6358 0
16247 -6352 0
16247 16249 -6354 0
16247 16250 -6356 0
16247 16252 -6358 0
16247 16254 -6360 0
c (8<=(aux1511 + aux1512 - shift(sky_left_00002_00004, -9)))
-16254 6360 0
-16252 6358 0
-16250 6356 0
-16249 6354 0
-16247 6360 0
-16247 -16254 6358 0
-16247 -16252 6356 0
-16247 -16250 6354 0
-16247 -16249 6352 0
-16245 6358 0
-16245 -16254 6356 0
-16245 -16252 6354 0
-16245 -16250 6352 0
-16245 -16249 6350 0
-16243 6356 0
-16243 -16254 6354 0
-16243 -16252 6352 0
-16243 -16250 6350 0
-16243 -16249 6348 0
-16242 6354 0
-16242 -16254 6352 0
-16242 -16252 6350 0
-16242 -16250 6348 0
-16242 -16249 6347 0
c ((aux1518 + aux1519 - shift(sky_left_00002_00005, -9))<=8)
16276 -6362 0
16277 -6363 0
16279 -6365 0
16281 -6367 0
16269 -6362 0
16269 16276 -6363 0
16269 16277 -6365 0
16269 16279 -6367 0
16269 16281 -6369 0
16270 -6363 0
16270 16276 -6365 0
16270 16277 -6367 0
16270 16279 -6369 0
16270 16281 -6371 0
16272 -6365 0
16272 16276 -6367 0
16272 16277 -6369 0
16272 16279 -6371 0
16272 16281 -6373 0
16274 -6367 0
16274 16276 -6369 0
16274 16277 -6371 0
16274 16279 -6373 0
16274 16281 -6375 0
c (8<=(aux1518 + aux1519 - shift(sky_left_00002_00005, -9)))
-16281 6375 0
-16279 6373 0
-16277 6371 0
-16276 6369 0
-16274 6375 0
-16274 -16281 6373 0
-16274 -16279 6371 0
-16274 -16277 6369 0
-16274 -16276 6367 0
-16272 6373 0
-16272 -16281 6371 0
-16272 -16279 6369 0
-16272 -16277 6367 0
-16272 -16276 6365 0
-16270 6371 0
-16270 -16281 6369 0
-16270 -16279 6367 0
-16270 -16277 6365 0
-16270 -16276 6363 0
-16269 6369 0
-16269 -16281 6367 0
-16269 -16279 6365 0
-16269 -16277 6363 0
-16269 -16276 6362 0
c ((aux1525 + aux1526 - shift(sky_left_00002_00006, -9))<=8)
16303 -6377 0
16304 -6378 0
16306 -6380 0
16308 -6382 0
16296 -6377 0
16296 16303 -6378 0
16296 16304 -6380 0
16296 16306 -6382 0
16296 16308 -6384 0
16297 -6378 0
16297 16303 -6380 0
16297 16304 -6382 0
16297 16306 -6384 0
16297 16308 -6386 0
16299 -6380 0
16299 16303 -6382 0
16299 16304 -6384 0
16299 16306 -6386 0
16299 16308 -6388 0
16301 -6382 0
16301 16303 -6384 0
16301 16304 -6386 0
16301 16306 -6388 0
16301 16308 -6390 0
c (8<=(aux1525 + aux1526 - shift(sky_left_00002_00006, -9)))
-16308 6390 0
-16306 6388 0
-16304 6386 0
-16303 6384 0
-16301 6390 0
-16301 -16308 6388 0
-16301 -16306 6386 0
-16301 -16304 6384 0
-16301 -16303 6382 0
-16299 6388 0
-16299 -16308 6386 0
-16299 -16306 6384 0
-16299 -16304 6382 0
-16299 -16303 6380 0
-16297 6386 0
-16297 -16308 6384 0
-16297 -16306 6382 0
-16297 -16304 6380 0
-16297 -16303 6378 0
-16296 6384 0
-16296 -16308 6382 0
-16296 -16306 6380 0
-16296 -16304 6378 0
-16296 -16303 6377 0
c ((aux1532 + aux1533 - shift(sky_left_00002_00007, -9))<=8)
16330 -6392 0
16331 -6393 0
16333 -6395 0
16335 -6397 0
16323 -6392 0
16323 16330 -6393 0
16323 16331 -6395 0
16323 16333 -6397 0
16323 16335 -6399 0
16324 -6393 0
16324 16330 -6395 0
16324 16331 -6397 0
16324 16333 -6399 0
16324 16335 -6401 0
16326 -6395 0
16326 16330 -6397 0
16326 16331 -6399 0
16326 16333 -6401 0
16326 16335 -6403 0
16328 -6397 0
16328 16330 -6399 0
16328 16331 -6401 0
16328 16333 -6403 0
16328 16335 -6405 0
c (8<=(aux1532 + aux1533 - shift(sky_left_00002_00007, -9)))
-16335 6405 0
-16333 6403 0
-16331 6401 0
-16330 6399 0
-16328 6405 0
-16328 -16335 6403 0
-16328 -16333 6401 0
-16328 -16331 6399 0
-16328 -16330 6397 0
-16326 6403 0
-16326 -16335 6401 0
-16326 -16333 6399 0
-16326 -16331 6397 0
-16326 -16330 6395 0
-16324 6401 0
-16324 -16335 6399 0
-16324 -16333 6397 0
-16324 -16331 6395 0
-16324 -16330 6393 0
-16323 6399 0
-16323 -16335 6397 0
-16323 -16333 6395 0
-16323 -16331 6393 0
-16323 -16330 6392 0
c ((aux1539 + aux1540 - shift(sky_left_00002_00008, -9))<=8)
16357 -6407 0
16358 -6408 0
16360 -6410 0
16362 -6412 0
16350 -6407 0
16350 16357 -6408 0
16350 16358 -6410 0
16350 16360 -6412 0
16350 16362 -6414 0
16351 -6408 0
16351 16357 -6410 0
16351 16358 -6412 0
16351 16360 -6414 0
16351 16362 -6416 0
16353 -6410 0
16353 16357 -6412 0
16353 16358 -6414 0
16353 16360 -6416 0
16353 16362 -6418 0
16355 -6412 0
16355 16357 -6414 0
16355 16358 -6416 0
16355 16360 -6418 0
16355 16362 -6420 0
c (8<=(aux1539 + aux1540 - shift(sky_left_00002_00008, -9)))
-16362 6420 0
-16360 6418 0
-16358 6416 0
-16357 6414 0
-16355 6420 0
-16355 -16362 6418 0
-16355 -16360 6416 0
-16355 -16358 6414 0
-16355 -16357 6412 0
-16353 6418 0
-16353 -16362 6416 0
-16353 -16360 6414 0
-16353 -16358 6412 0
-16353 -16357 6410 0
-16351 6416 0
-16351 -16362 6414 0
-16351 -16360 6412 0
-16351 -16358 6410 0
-16351 -16357 6408 0
-16350 6414 0
-16350 -16362 6412 0
-16350 -16360 6410 0
-16350 -16358 6408 0
-16350 -16357 6407 0
c ((aux1546 + aux1547 - shift(sky_left_00002_00009, -9))<=8)
16384 -6422 0
16385 -6423 0
16387 -6425 0
16389 -6427 0
16377 -6422 0
16377 16384 -6423 0
16377 16385 -6425 0
16377 16387 -6427 0
16377 16389 -6429 0
16378 -6423 0
16378 16384 -6425 0
16378 16385 -6427 0
16378 16387 -6429 0
16378 16389 -6431 0
16380 -6425 0
16380 16384 -6427 0
16380 16385 -6429 0
16380 16387 -6431 0
16380 16389 -6433 0
16382 -6427 0
16382 16384 -6429 0
16382 16385 -6431 0
16382 16387 -6433 0
16382 16389 -6435 0
c (8<=(aux1546 + aux1547 - shift(sky_left_00002_00009, -9)))
-16389 6435 0
-16387 6433 0
-16385 6431 0
-16384 6429 0
-16382 6435 0
-16382 -16389 6433 0
-16382 -16387 6431 0
-16382 -16385 6429 0
-16382 -16384 6427 0
-16380 6433 0
-16380 -16389 6431 0
-16380 -16387 6429 0
-16380 -16385 6427 0
-16380 -16384 6425 0
-16378 6431 0
-16378 -16389 6429 0
-16378 -16387 6427 0
-16378 -16385 6425 0
-16378 -16384 6423 0
-16377 6429 0
-16377 -16389 6427 0
-16377 -16387 6425 0
-16377 -16385 6423 0
-16377 -16384 6422 0
c (( - shift(sky_left_00003_00001, -9) + aux1553 + aux1554)<=8)
16411 -6437 0
16412 -6438 0
16414 -6440 0
16416 -6442 0
16404 -6437 0
16404 16411 -6438 0
16404 16412 -6440 0
16404 16414 -6442 0
16404 16416 -6444 0
16405 -6438 0
16405 16411 -6440 0
16405 16412 -6442 0
16405 16414 -6444 0
16405 16416 -6446 0
16407 -6440 0
16407 16411 -6442 0
16407 16412 -6444 0
16407 16414 -6446 0
16407 16416 -6448 0
16409 -6442 0
16409 16411 -6444 0
16409 16412 -6446 0
16409 16414 -6448 0
16409 16416 -6450 0
c (8<=( - shift(sky_left_00003_00001, -9) + aux1553 + aux1554))
-16416 6450 0
-16414 6448 0
-16412 6446 0
-16411 6444 0
-16409 6450 0
-16409 -16416 6448 0
-16409 -16414 6446 0
-16409 -16412 6444 0
-16409 -16411 6442 0
-16407 6448 0
-16407 -16416 6446 0
-16407 -16414 6444 0
-16407 -16412 6442 0
-16407 -16411 6440 0
-16405 6446 0
-16405 -16416 6444 0
-16405 -16414 6442 0
-16405 -16412 6440 0
-16405 -16411 6438 0
-16404 6444 0
-16404 -16416 6442 0
-16404 -16414 6440 0
-16404 -16412 6438 0
-16404 -16411 6437 0
c (( - shift(sky_left_00003_00002, -9) + aux1560 + aux1561)<=8)
16438 -6452 0
16439 -6453 0
16441 -6455 0
16443 -6457 0
16431 -6452 0
16431 16438 -6453 0
16431 16439 -6455 0
16431 16441 -6457 0
16431 16443 -6459 0
16432 -6453 0
16432 16438 -6455 0
16432 16439 -6457 0
16432 16441 -6459 0
16432 16443 -6461 0
16434 -6455 0
16434 16438 -6457 0
16434 16439 -6459 0
16434 16441 -6461 0
16434 16443 -6463 0
16436 -6457 0
16436 16438 -6459 0
16436 16439 -6461 0
16436 16441 -6463 0
16436 16443 -6465 0
c (8<=( - shift(sky_left_00003_00002, -9) + aux1560 + aux1561))
-16443 6465 0
-16441 6463 0
-16439 6461 0
-16438 6459 0
-16436 6465 0
-16436 -16443 6463 0
-16436 -16441 6461 0
-16436 -16439 6459 0
-16436 -16438 6457 0
-16434 6463 0
-16434 -16443 6461 0
-16434 -16441 6459 0
-16434 -16439 6457 0
-16434 -16438 6455 0
-16432 6461 0
-16432 -16443 6459 0
-16432 -16441 6457 0
-16432 -16439 6455 0
-16432 -16438 6453 0
-16431 6459 0
-16431 -16443 6457 0
-16431 -16441 6455 0
-16431 -16439 6453 0
-16431 -16438 6452 0
c (( - shift(sky_left_00003_00003, -9) + aux1567 + aux1568)<=8)
16465 -6467 0
16466 -6468 0
16468 -6470 0
16470 -6472 0
16458 -6467 0
16458 16465 -6468 0
16458 16466 -6470 0
16458 16468 -6472 0
16458 16470 -6474 0
16459 -6468 0
16459 16465 -6470 0
16459 16466 -6472 0
16459 16468 -6474 0
16459 16470 -6476 0
16461 -6470 0
16461 16465 -6472 0
16461 16466 -6474 0
16461 16468 -6476 0
16461 16470 -6478 0
16463 -6472 0
16463 16465 -6474 0
16463 16466 -6476 0
16463 16468 -6478 0
16463 16470 -6480 0
c (8<=( - shift(sky_left_00003_00003, -9) + aux1567 + aux1568))
-16470 6480 0
-16468 6478 0
-16466 6476 0
-16465 6474 0
-16463 6480 0
-16463 -16470 6478 0
-16463 -16468 6476 0
-16463 -16466 6474 0
-16463 -16465 6472 0
-16461 6478 0
-16461 -16470 6476 0
-16461 -16468 6474 0
-16461 -16466 6472 0
-16461 -16465 6470 0
-16459 6476 0
-16459 -16470 6474 0
-16459 -16468 6472 0
-16459 -16466 6470 0
-16459 -16465 6468 0
-16458 6474 0
-16458 -16470 6472 0
-16458 -16468 6470 0
-16458 -16466 6468 0
-16458 -16465 6467 0
c (( - shift(sky_left_00003_00004, -9) + aux1574 + aux1575)<=8)
16492 -6482 0
16493 -6483 0
16495 -6485 0
16497 -6487 0
16485 -6482 0
16485 16492 -6483 0
16485 16493 -6485 0
16485 16495 -6487 0
16485 16497 -6489 0
16486 -6483 0
16486 16492 -6485 0
16486 16493 -6487 0
16486 16495 -6489 0
16486 16497 -6491 0
16488 -6485 0
16488 16492 -6487 0
16488 16493 -6489 0
16488 16495 -6491 0
16488 16497 -6493 0
16490 -6487 0
16490 16492 -6489 0
16490 16493 -6491 0
16490 16495 -6493 0
16490 16497 -6495 0
c (8<=( - shift(sky_left_00003_00004, -9) + aux1574 + aux1575))
-16497 6495 0
-16495 6493 0
-16493 6491 0
-16492 6489 0
-16490 6495 0
-16490 -16497 6493 0
-16490 -16495 6491 0
-16490 -16493 6489 0
-16490 -16492 6487 0
-16488 6493 0
-16488 -16497 6491 0
-16488 -16495 6489 0
-16488 -16493 6487 0
-16488 -16492 6485 0
-16486 6491 0
-16486 -16497 6489 0
-16486 -16495 6487 0
-16486 -16493 6485 0
-16486 -16492 6483 0
-16485 6489 0
-16485 -16497 6487 0
-16485 -16495 6485 0
-16485 -16493 6483 0
-16485 -16492 6482 0
c (( - shift(sky_left_00003_00005, -9) + aux1581 + aux1582)<=8)
16519 -6497 0
16520 -6498 0
16522 -6500 0
16524 -6502 0
16512 -6497 0
16512 16519 -6498 0
16512 16520 -6500 0
16512 16522 -6502 0
16512 16524 -6504 0
16513 -6498 0
16513 16519 -6500 0
16513 16520 -6502 0
16513 16522 -6504 0
16513 16524 -6506 0
16515 -6500 0
16515 16519 -6502 0
16515 16520 -6504 0
16515 16522 -6506 0
16515 16524 -6508 0
16517 -6502 0
16517 16519 -6504 0
16517 16520 -6506 0
16517 16522 -6508 0
16517 16524 -6510 0
c (8<=( - shift(sky_left_00003_00005, -9) + aux1581 + aux1582))
-16524 6510 0
-16522 6508 0
-16520 6506 0
-16519 6504 0
-16517 6510 0
-16517 -16524 6508 0
-16517 -16522 6506 0
-16517 -16520 6504 0
-16517 -16519 6502 0
-16515 6508 0
-16515 -16524 6506 0
-16515 -16522 6504 0
-16515 -16520 6502 0
-16515 -16519 6500 0
-16513 6506 0
-16513 -16524 6504 0
-16513 -16522 6502 0
-16513 -16520 6500 0
-16513 -16519 6498 0
-16512 6504 0
-16512 -16524 6502 0
-16512 -16522 6500 0
-16512 -16520 6498 0
-16512 -16519 6497 0
c (( - shift(sky_left_00003_00006, -9) + aux1588 + aux1589)<=8)
16546 -6512 0
16547 -6513 0
16549 -6515 0
16551 -6517 0
16539 -6512 0
16539 16546 -6513 0
16539 16547 -6515 0
16539 16549 -6517 0
16539 16551 -6519 0
16540 -6513 0
16540 16546 -6515 0
16540 16547 -6517 0
16540 16549 -6519 0
16540 16551 -6521 0
16542 -6515 0
16542 16546 -6517 0
16542 16547 -6519 0
16542 16549 -6521 0
16542 16551 -6523 0
16544 -6517 0
16544 16546 -6519 0
16544 16547 -6521 0
16544 16549 -6523 0
16544 16551 -6525 0
c (8<=( - shift(sky_left_00003_00006, -9) + aux1588 + aux1589))
-16551 6525 0
-16549 6523 0
-16547 6521 0
-16546 6519 0
-16544 6525 0
-16544 -16551 6523 0
-16544 -16549 6521 0
-16544 -16547 6519 0
-16544 -16546 6517 0
-16542 6523 0
-16542 -16551 6521 0
-16542 -16549 6519 0
-16542 -16547 6517 0
-16542 -16546 6515 0
-16540 6521 0
-16540 -16551 6519 0
-16540 -16549 6517 0
-16540 -16547 6515 0
-16540 -16546 6513 0
-16539 6519 0
-16539 -16551 6517 0
-16539 -16549 6515 0
-16539 -16547 6513 0
-16539 -16546 6512 0
c (( - shift(sky_left_00003_00007, -9) + aux1595 + aux1596)<=8)
16573 -6527 0
16574 -6528 0
16576 -6530 0
16578 -6532 0
16566 -6527 0
16566 16573 -6528 0
16566 16574 -6530 0
16566 16576 -6532 0
16566 16578 -6534 0
16567 -6528 0
16567 16573 -6530 0
16567 16574 -6532 0
16567 16576 -6534 0
16567 16578 -6536 0
16569 -6530 0
16569 16573 -6532 0
16569 16574 -6534 0
16569 16576 -6536 0
16569 16578 -6538 0
16571 -6532 0
16571 16573 -6534 0
16571 16574 -6536 0
16571 16576 -6538 0
16571 16578 -6540 0
c (8<=( - shift(sky_left_00003_00007, -9) + aux1595 + aux1596))
-16578 6540 0
-16576 6538 0
-16574 6536 0
-16573 6534 0
-16571 6540 0
-16571 -16578 6538 0
-16571 -16576 6536 0
-16571 -16574 6534 0
-16571 -16573 6532 0
-16569 6538 0
-16569 -16578 6536 0
-16569 -16576 6534 0
-16569 -16574 6532 0
-16569 -16573 6530 0
-16567 6536 0
-16567 -16578 6534 0
-16567 -16576 6532 0
-16567 -16574 6530 0
-16567 -16573 6528 0
-16566 6534 0
-16566 -16578 6532 0
-16566 -16576 6530 0
-16566 -16574 6528 0
-16566 -16573 6527 0
c (( - shift(sky_left_00003_00008, -9) + aux1602 + aux1603)<=8)
16600 -6542 0
16601 -6543 0
16603 -6545 0
16605 -6547 0
16593 -6542 0
16593 16600 -6543 0
16593 16601 -6545 0
16593 16603 -6547 0
16593 16605 -6549 0
16594 -6543 0
16594 16600 -6545 0
16594 16601 -6547 0
16594 16603 -6549 0
16594 16605 -6551 0
16596 -6545 0
16596 16600 -6547 0
16596 16601 -6549 0
16596 16603 -6551 0
16596 16605 -6553 0
16598 -6547 0
16598 16600 -6549 0
16598 16601 -6551 0
16598 16603 -6553 0
16598 16605 -6555 0
c (8<=( - shift(sky_left_00003_00008, -9) + aux1602 + aux1603))
-16605 6555 0
-16603 6553 0
-16601 6551 0
-16600 6549 0
-16598 6555 0
-16598 -16605 6553 0
-16598 -16603 6551 0
-16598 -16601 6549 0
-16598 -16600 6547 0
-16596 6553 0
-16596 -16605 6551 0
-16596 -16603 6549 0
-16596 -16601 6547 0
-16596 -16600 6545 0
-16594 6551 0
-16594 -16605 6549 0
-16594 -16603 6547 0
-16594 -16601 6545 0
-16594 -16600 6543 0
-16593 6549 0
-16593 -16605 6547 0
-16593 -16603 6545 0
-16593 -16601 6543 0
-16593 -16600 6542 0
c (( - shift(sky_left_00003_00009, -9) + aux1609 + aux1610)<=8)
16627 -6557 0
16628 -6558 0
16630 -6560 0
16632 -6562 0
16620 -6557 0
16620 16627 -6558 0
16620 16628 -6560 0
16620 16630 -6562 0
16620 16632 -6564 0
16621 -6558 0
16621 16627 -6560 0
16621 16628 -6562 0
16621 16630 -6564 0
16621 16632 -6566 0
16623 -6560 0
16623 16627 -6562 0
16623 16628 -6564 0
16623 16630 -6566 0
16623 16632 -6568 0
16625 -6562 0
16625 16627 -6564 0
16625 16628 -6566 0
16625 16630 -6568 0
16625 16632 -6570 0
c (8<=( - shift(sky_left_00003_00009, -9) + aux1609 + aux1610))
-16632 6570 0
-16630 6568 0
-16628 6566 0
-16627 6564 0
-16625 6570 0
-16625 -16632 6568 0
-16625 -16630 6566 0
-16625 -16628 6564 0
-16625 -16627 6562 0
-16623 6568 0
-16623 -16632 6566 0
-16623 -16630 6564 0
-16623 -16628 6562 0
-16623 -16627 6560 0
-16621 6566 0
-16621 -16632 6564 0
-16621 -16630 6562 0
-16621 -16628 6560 0
-16621 -16627 6558 0
-16620 6564 0
-16620 -16632 6562 0
-16620 -16630 6560 0
-16620 -16628 6558 0
-16620 -16627 6557 0
c ((aux1616 + aux1617 - shift(sky_left_00004_00001, -9))<=8)
16654 -6572 0
16655 -6573 0
16657 -6575 0
16659 -6577 0
16647 -6572 0
16647 16654 -6573 0
16647 16655 -6575 0
16647 16657 -6577 0
16647 16659 -6579 0
16648 -6573 0
16648 16654 -6575 0
16648 16655 -6577 0
16648 16657 -6579 0
16648 16659 -6581 0
16650 -6575 0
16650 16654 -6577 0
16650 16655 -6579 0
16650 16657 -6581 0
16650 16659 -6583 0
16652 -6577 0
16652 16654 -6579 0
16652 16655 -6581 0
16652 16657 -6583 0
16652 16659 -6585 0
c (8<=(aux1616 + aux1617 - shift(sky_left_00004_00001, -9)))
-16659 6585 0
-16657 6583 0
-16655 6581 0
-16654 6579 0
-16652 6585 0
-16652 -16659 6583 0
-16652 -16657 6581 0
-16652 -16655 6579 0
-16652 -16654 6577 0
-16650 6583 0
-16650 -16659 6581 0
-16650 -16657 6579 0
-16650 -16655 6577 0
-16650 -16654 6575 0
-16648 6581 0
-16648 -16659 6579 0
-16648 -16657 6577 0
-16648 -16655 6575 0
-16648 -16654 6573 0
-16647 6579 0
-16647 -16659 6577 0
-16647 -16657 6575 0
-16647 -16655 6573 0
-16647 -16654 6572 0
c ((aux1623 + aux1624 - shift(sky_left_00004_00002, -9))<=8)
16681 -6587 0
16682 -6588 0
16684 -6590 0
16686 -6592 0
16674 -6587 0
16674 16681 -6588 0
16674 16682 -6590 0
16674 16684 -6592 0
16674 16686 -6594 0
16675 -6588 0
16675 16681 -6590 0
16675 16682 -6592 0
16675 16684 -6594 0
16675 16686 -6596 0
16677 -6590 0
16677 16681 -6592 0
16677 16682 -6594 0
16677 16684 -6596 0
16677 16686 -6598 0
16679 -6592 0
16679 16681 -6594 0
16679 16682 -6596 0
16679 16684 -6598 0
16679 16686 -6600 0
c (8<=(aux1623 + aux1624 - shift(sky_left_00004_00002, -9)))
-16686 6600 0
-16684 6598 0
-16682 6596 0
-16681 6594 0
-16679 6600 0
-16679 -16686 6598 0
-16679 -16684 6596 0
-16679 -16682 6594 0
-16679 -16681 6592 0
-16677 6598 0
-16677 -16686 6596 0
-16677 -16684 6594 0
-16677 -16682 6592 0
-16677 -16681 6590 0
-16675 6596 0
-16675 -16686 6594 0
-16675 -16684 6592 0
-16675 -16682 6590 0
-16675 -16681 6588 0
-16674 6594 0
-16674 -16686 6592 0
-16674 -16684 6590 0
-16674 -16682 6588 0
-16674 -16681 6587 0
c ((aux1630 + aux1631 - shift(sky_left_00004_00003, -9))<=8)
16708 -6602 0
16709 -6603 0
16711 -6605 0
16713 -6607 0
16701 -6602 0
16701 16708 -6603 0
16701 16709 -6605 0
16701 16711 -6607 0
16701 16713 -6609 0
16702 -6603 0
16702 16708 -6605 0
16702 16709 -6607 0
16702 16711 -6609 0
16702 16713 -6611 0
16704 -6605 0
16704 16708 -6607 0
16704 16709 -6609 0
16704 16711 -6611 0
16704 16713 -6613 0
16706 -6607 0
16706 16708 -6609 0
16706 16709 -6611 0
16706 16711 -6613 0
16706 16713 -6615 0
c (8<=(aux1630 + aux1631 - shift(sky_left_00004_00003, -9)))
-16713 6615 0
-16711 6613 0
-16709 6611 0
-16708 6609 0
-16706 6615 0
-16706 -16713 6613 0
-16706 -16711 6611 0
-16706 -16709 6609 0
-16706 -16708 6607 0
-16704 6613 0
-16704 -16713 6611 0
-16704 -16711 6609 0
-16704 -16709 6607 0
-16704 -16708 6605 0
-16702 6611 0
-16702 -16713 6609 0
-16702 -16711 6607 0
-16702 -16709 6605 0
-16702 -16708 6603 0
-16701 6609 0
-16701 -16713 6607 0
-16701 -16711 6605 0
-16701 -16709 6603 0
-16701 -16708 6602 0
c ((aux1637 + aux1638 - shift(sky_left_00004_00004, -9))<=8)
16735 -6617 0
16736 -6618 0
16738 -6620 0
16740 -6622 0
16728 -6617 0
16728 16735 -6618 0
16728 16736 -6620 0
16728 16738 -6622 0
16728 16740 -6624 0
16729 -6618 0
16729 16735 -6620 0
16729 16736 -6622 0
16729 16738 -6624 0
16729 16740 -6626 0
16731 -6620 0
16731 16735 -6622 0
16731 16736 -6624 0
16731 16738 -6626 0
16731 16740 -6628 0
16733 -6622 0
16733 16735 -6624 0
16733 16736 -6626 0
16733 16738 -6628 0
16733 16740 -6630 0
c (8<=(aux1637 + aux1638 - shift(sky_left_00004_00004, -9)))
-16740 6630 0
-16738 6628 0
-16736 6626 0
-16735 6624 0
-16733 6630 0
-16733 -16740 6628 0
-16733 -16738 6626 0
-16733 -16736 6624 0
-16733 -16735 6622 0
-16731 6628 0
-16731 -16740 6626 0
-16731 -16738 6624 0
-16731 -16736 6622 0
-16731 -16735 6620 0
-16729 6626 0
-16729 -16740 6624 0
-16729 -16738 6622 0
-16729 -16736 6620 0
-16729 -16735 6618 0
-16728 6624 0
-16728 -16740 6622 0
-16728 -16738 6620 0
-16728 -16736 6618 0
-16728 -16735 6617 0
c ((aux1644 + aux1645 - shift(sky_left_00004_00005, -9))<=8)
16762 -6632 0
16763 -6633 0
16765 -6635 0
16767 -6637 0
16755 -6632 0
16755 16762 -6633 0
16755 16763 -6635 0
16755 16765 -6637 0
16755 16767 -6639 0
16756 -6633 0
16756 16762 -6635 0
16756 16763 -6637 0
16756 16765 -6639 0
16756 16767 -6641 0
16758 -6635 0
16758 16762 -6637 0
16758 16763 -6639 0
16758 16765 -6641 0
16758 16767 -6643 0
16760 -6637 0
16760 16762 -6639 0
16760 16763 -6641 0
16760 16765 -6643 0
16760 16767 -6645 0
c (8<=(aux1644 + aux1645 - shift(sky_left_00004_00005, -9)))
-16767 6645 0
-16765 6643 0
-16763 6641 0
-16762 6639 0
-16760 6645 0
-16760 -16767 6643 0
-16760 -16765 6641 0
-16760 -16763 6639 0
-16760 -16762 6637 0
-16758 6643 0
-16758 -16767 6641 0
-16758 -16765 6639 0
-16758 -16763 6637 0
-16758 -16762 6635 0
-16756 6641 0
-16756 -16767 6639 0
-16756 -16765 6637 0
-16756 -16763 6635 0
-16756 -16762 6633 0
-16755 6639 0
-16755 -16767 6637 0
-16755 -16765 6635 0
-16755 -16763 6633 0
-16755 -16762 6632 0
c ((aux1651 + aux1652 - shift(sky_left_00004_00006, -9))<=8)
16789 -6647 0
16790 -6648 0
16792 -6650 0
16794 -6652 0
16782 -6647 0
16782 16789 -6648 0
16782 16790 -6650 0
16782 16792 -6652 0
16782 16794 -6654 0
16783 -6648 0
16783 16789 -6650 0
16783 16790 -6652 0
16783 16792 -6654 0
16783 16794 -6656 0
16785 -6650 0
16785 16789 -6652 0
16785 16790 -6654 0
16785 16792 -6656 0
16785 16794 -6658 0
16787 -6652 0
16787 16789 -6654 0
16787 16790 -6656 0
16787 16792 -6658 0
16787 16794 -6660 0
c (8<=(aux1651 + aux1652 - shift(sky_left_00004_00006, -9)))
-16794 6660 0
-16792 6658 0
-16790 6656 0
-16789 6654 0
-16787 6660 0
-16787 -16794 6658 0
-16787 -16792 6656 0
-16787 -16790 6654 0
-16787 -16789 6652 0
-16785 6658 0
-16785 -16794 6656 0
-16785 -16792 6654 0
-16785 -16790 6652 0
-16785 -16789 6650 0
-16783 6656 0
-16783 -16794 6654 0
-16783 -16792 6652 0
-16783 -16790 6650 0
-16783 -16789 6648 0
-16782 6654 0
-16782 -16794 6652 0
-16782 -16792 6650 0
-16782 -16790 6648 0
-16782 -16789 6647 0
c ((aux1658 + aux1659 - shift(sky_left_00004_00007, -9))<=8)
16816 -6662 0
16817 -6663 0
16819 -6665 0
16821 -6667 0
16809 -6662 0
16809 16816 -6663 0
16809 16817 -6665 0
16809 16819 -6667 0
16809 16821 -6669 0
16810 -6663 0
16810 16816 -6665 0
16810 16817 -6667 0
16810 16819 -6669 0
16810 16821 -6671 0
16812 -6665 0
16812 16816 -6667 0
16812 16817 -6669 0
16812 16819 -6671 0
16812 16821 -6673 0
16814 -6667 0
16814 16816 -6669 0
16814 16817 -6671 0
16814 16819 -6673 0
16814 16821 -6675 0
c (8<=(aux1658 + aux1659 - shift(sky_left_00004_00007, -9)))
-16821 6675 0
-16819 6673 0
-16817 6671 0
-16816 6669 0
-16814 6675 0
-16814 -16821 6673 0
-16814 -16819 6671 0
-16814 -16817 6669 0
-16814 -16816 6667 0
-16812 6673 0
-16812 -16821 6671 0
-16812 -16819 6669 0
-16812 -16817 6667 0
-16812 -16816 6665 0
-16810 6671 0
-16810 -16821 6669 0
-16810 -16819 6667 0
-16810 -16817 6665 0
-16810 -16816 6663 0
-16809 6669 0
-16809 -16821 6667 0
-16809 -16819 6665 0
-16809 -16817 6663 0
-16809 -16816 6662 0
c ((aux1665 + aux1666 - shift(sky_left_00004_00008, -9))<=8)
16843 -6677 0
16844 -6678 0
16846 -6680 0
16848 -6682 0
16836 -6677 0
16836 16843 -6678 0
16836 16844 -6680 0
16836 16846 -6682 0
16836 16848 -6684 0
16837 -6678 0
16837 16843 -6680 0
16837 16844 -6682 0
16837 16846 -6684 0
16837 16848 -6686 0
16839 -6680 0
16839 16843 -6682 0
16839 16844 -6684 0
16839 16846 -6686 0
16839 16848 -6688 0
16841 -6682 0
16841 16843 -6684 0
16841 16844 -6686 0
16841 16846 -6688 0
16841 16848 -6690 0
c (8<=(aux1665 + aux1666 - shift(sky_left_00004_00008, -9)))
-16848 6690 0
-16846 6688 0
-16844 6686 0
-16843 6684 0
-16841 6690 0
-16841 -16848 6688 0
-16841 -16846 6686 0
-16841 -16844 6684 0
-16841 -16843 6682 0
-16839 6688 0
-16839 -16848 6686 0
-16839 -16846 6684 0
-16839 -16844 6682 0
-16839 -16843 6680 0
-16837 6686 0
-16837 -16848 6684 0
-16837 -16846 6682 0
-16837 -16844 6680 0
-16837 -16843 6678 0
-16836 6684 0
-16836 -16848 6682 0
-16836 -16846 6680 0
-16836 -16844 6678 0
-16836 -16843 6677 0
c ((aux1672 + aux1673 - shift(sky_left_00004_00009, -9))<=8)
16870 -6692 0
16871 -6693 0
16873 -6695 0
16875 -6697 0
16863 -6692 0
16863 16870 -6693 0
16863 16871 -6695 0
16863 16873 -6697 0
16863 16875 -6699 0
16864 -6693 0
16864 16870 -6695 0
16864 16871 -6697 0
16864 16873 -6699 0
16864 16875 -6701 0
16866 -6695 0
16866 16870 -6697 0
16866 16871 -6699 0
16866 16873 -6701 0
16866 16875 -6703 0
16868 -6697 0
16868 16870 -6699 0
16868 16871 -6701 0
16868 16873 -6703 0
16868 16875 -6705 0
c (8<=(aux1672 + aux1673 - shift(sky_left_00004_00009, -9)))
-16875 6705 0
-16873 6703 0
-16871 6701 0
-16870 6699 0
-16868 6705 0
-16868 -16875 6703 0
-16868 -16873 6701 0
-16868 -16871 6699 0
-16868 -16870 6697 0
-16866 6703 0
-16866 -16875 6701 0
-16866 -16873 6699 0
-16866 -16871 6697 0
-16866 -16870 6695 0
-16864 6701 0
-16864 -16875 6699 0
-16864 -16873 6697 0
-16864 -16871 6695 0
-16864 -16870 6693 0
-16863 6699 0
-16863 -16875 6697 0
-16863 -16873 6695 0
-16863 -16871 6693 0
-16863 -16870 6692 0
