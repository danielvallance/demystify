p cnf 1203 7606                                                                                     

1 0
c Encoding variable: grid_00000_00000 with domain: int(0) (representing constraint )
c Var 'grid_00000_00000' direct represents '0' with '2'
2 0
c Encoding variable: grid_00000_00001 with domain: int(0) (representing constraint )
c Var 'grid_00000_00001' direct represents '0' with '3'
3 0
c Encoding variable: grid_00000_00002 with domain: int(0) (representing constraint )
c Var 'grid_00000_00002' direct represents '0' with '4'
4 0
c Encoding variable: grid_00000_00003 with domain: int(0) (representing constraint )
c Var 'grid_00000_00003' direct represents '0' with '5'
5 0
c Encoding variable: grid_00000_00004 with domain: int(0) (representing constraint )
c Var 'grid_00000_00004' direct represents '0' with '6'
6 0
c Encoding variable: grid_00000_00005 with domain: int(0) (representing constraint )
c Var 'grid_00000_00005' direct represents '0' with '7'
7 0
c Encoding variable: grid_00000_00006 with domain: int(0) (representing constraint )
c Var 'grid_00000_00006' direct represents '0' with '8'
8 0
c Encoding variable: grid_00000_00007 with domain: int(0) (representing constraint )
c Var 'grid_00000_00007' direct represents '0' with '9'
9 0
c Encoding variable: grid_00001_00000 with domain: int(0) (representing constraint )
c Var 'grid_00001_00000' direct represents '0' with '10'
10 0
c Encoding variable: grid_00001_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00001' order represents '1' with '11'
c Var 'grid_00001_00001' direct represents '1' with '11'
c Var 'grid_00001_00001' order represents '2' with '12'
-11 12 0
c Var 'grid_00001_00001' direct represents '2' with '13'
11 -12 13 0
-13 12 0
-13 -11 0
c Var 'grid_00001_00001' order represents '3' with '14'
-12 14 0
c Var 'grid_00001_00001' direct represents '3' with '15'
12 -14 15 0
-15 14 0
-15 -12 0
c Var 'grid_00001_00001' order represents '4' with '16'
-14 16 0
c Var 'grid_00001_00001' direct represents '4' with '17'
14 -16 17 0
-17 16 0
-17 -14 0
c Var 'grid_00001_00001' order represents '5' with '18'
-16 18 0
c Var 'grid_00001_00001' direct represents '5' with '19'
16 -18 19 0
-19 18 0
-19 -16 0
c Var 'grid_00001_00001' order represents '6' with '20'
-18 20 0
c Var 'grid_00001_00001' direct represents '6' with '21'
18 -20 21 0
-21 20 0
-21 -18 0
c Var 'grid_00001_00001' order represents '7' with '22'
-20 22 0
c Var 'grid_00001_00001' direct represents '7' with '23'
20 -22 23 0
-23 22 0
-23 -20 0
c Var 'grid_00001_00001' order represents '8' with '24'
-22 24 0
c Var 'grid_00001_00001' direct represents '8' with '25'
22 -24 25 0
-25 24 0
-25 -22 0
c Var 'grid_00001_00001' direct represents '9' with '-24'
11 13 15 17 19 21 23 25 -24 0
c Encoding variable: grid_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00002' order represents '1' with '26'
c Var 'grid_00001_00002' direct represents '1' with '26'
c Var 'grid_00001_00002' order represents '2' with '27'
-26 27 0
c Var 'grid_00001_00002' direct represents '2' with '28'
26 -27 28 0
-28 27 0
-28 -26 0
c Var 'grid_00001_00002' order represents '3' with '29'
-27 29 0
c Var 'grid_00001_00002' direct represents '3' with '30'
27 -29 30 0
-30 29 0
-30 -27 0
c Var 'grid_00001_00002' order represents '4' with '31'
-29 31 0
c Var 'grid_00001_00002' direct represents '4' with '32'
29 -31 32 0
-32 31 0
-32 -29 0
c Var 'grid_00001_00002' order represents '5' with '33'
-31 33 0
c Var 'grid_00001_00002' direct represents '5' with '34'
31 -33 34 0
-34 33 0
-34 -31 0
c Var 'grid_00001_00002' order represents '6' with '35'
-33 35 0
c Var 'grid_00001_00002' direct represents '6' with '36'
33 -35 36 0
-36 35 0
-36 -33 0
c Var 'grid_00001_00002' order represents '7' with '37'
-35 37 0
c Var 'grid_00001_00002' direct represents '7' with '38'
35 -37 38 0
-38 37 0
-38 -35 0
c Var 'grid_00001_00002' order represents '8' with '39'
-37 39 0
c Var 'grid_00001_00002' direct represents '8' with '40'
37 -39 40 0
-40 39 0
-40 -37 0
c Var 'grid_00001_00002' direct represents '9' with '-39'
26 28 30 32 34 36 38 40 -39 0
c Encoding variable: grid_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00003' order represents '1' with '41'
c Var 'grid_00001_00003' direct represents '1' with '41'
c Var 'grid_00001_00003' order represents '2' with '42'
-41 42 0
c Var 'grid_00001_00003' direct represents '2' with '43'
41 -42 43 0
-43 42 0
-43 -41 0
c Var 'grid_00001_00003' order represents '3' with '44'
-42 44 0
c Var 'grid_00001_00003' direct represents '3' with '45'
42 -44 45 0
-45 44 0
-45 -42 0
c Var 'grid_00001_00003' order represents '4' with '46'
-44 46 0
c Var 'grid_00001_00003' direct represents '4' with '47'
44 -46 47 0
-47 46 0
-47 -44 0
c Var 'grid_00001_00003' order represents '5' with '48'
-46 48 0
c Var 'grid_00001_00003' direct represents '5' with '49'
46 -48 49 0
-49 48 0
-49 -46 0
c Var 'grid_00001_00003' order represents '6' with '50'
-48 50 0
c Var 'grid_00001_00003' direct represents '6' with '51'
48 -50 51 0
-51 50 0
-51 -48 0
c Var 'grid_00001_00003' order represents '7' with '52'
-50 52 0
c Var 'grid_00001_00003' direct represents '7' with '53'
50 -52 53 0
-53 52 0
-53 -50 0
c Var 'grid_00001_00003' order represents '8' with '54'
-52 54 0
c Var 'grid_00001_00003' direct represents '8' with '55'
52 -54 55 0
-55 54 0
-55 -52 0
c Var 'grid_00001_00003' direct represents '9' with '-54'
41 43 45 47 49 51 53 55 -54 0
c Encoding variable: grid_00001_00004 with domain: int(0) (representing constraint )
c Var 'grid_00001_00004' direct represents '0' with '56'
56 0
c Encoding variable: grid_00001_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00005' order represents '1' with '57'
c Var 'grid_00001_00005' direct represents '1' with '57'
c Var 'grid_00001_00005' order represents '2' with '58'
-57 58 0
c Var 'grid_00001_00005' direct represents '2' with '59'
57 -58 59 0
-59 58 0
-59 -57 0
c Var 'grid_00001_00005' order represents '3' with '60'
-58 60 0
c Var 'grid_00001_00005' direct represents '3' with '61'
58 -60 61 0
-61 60 0
-61 -58 0
c Var 'grid_00001_00005' order represents '4' with '62'
-60 62 0
c Var 'grid_00001_00005' direct represents '4' with '63'
60 -62 63 0
-63 62 0
-63 -60 0
c Var 'grid_00001_00005' order represents '5' with '64'
-62 64 0
c Var 'grid_00001_00005' direct represents '5' with '65'
62 -64 65 0
-65 64 0
-65 -62 0
c Var 'grid_00001_00005' order represents '6' with '66'
-64 66 0
c Var 'grid_00001_00005' direct represents '6' with '67'
64 -66 67 0
-67 66 0
-67 -64 0
c Var 'grid_00001_00005' order represents '7' with '68'
-66 68 0
c Var 'grid_00001_00005' direct represents '7' with '69'
66 -68 69 0
-69 68 0
-69 -66 0
c Var 'grid_00001_00005' order represents '8' with '70'
-68 70 0
c Var 'grid_00001_00005' direct represents '8' with '71'
68 -70 71 0
-71 70 0
-71 -68 0
c Var 'grid_00001_00005' direct represents '9' with '-70'
57 59 61 63 65 67 69 71 -70 0
c Encoding variable: grid_00001_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00006' order represents '1' with '72'
c Var 'grid_00001_00006' direct represents '1' with '72'
c Var 'grid_00001_00006' order represents '2' with '73'
-72 73 0
c Var 'grid_00001_00006' direct represents '2' with '74'
72 -73 74 0
-74 73 0
-74 -72 0
c Var 'grid_00001_00006' order represents '3' with '75'
-73 75 0
c Var 'grid_00001_00006' direct represents '3' with '76'
73 -75 76 0
-76 75 0
-76 -73 0
c Var 'grid_00001_00006' order represents '4' with '77'
-75 77 0
c Var 'grid_00001_00006' direct represents '4' with '78'
75 -77 78 0
-78 77 0
-78 -75 0
c Var 'grid_00001_00006' order represents '5' with '79'
-77 79 0
c Var 'grid_00001_00006' direct represents '5' with '80'
77 -79 80 0
-80 79 0
-80 -77 0
c Var 'grid_00001_00006' order represents '6' with '81'
-79 81 0
c Var 'grid_00001_00006' direct represents '6' with '82'
79 -81 82 0
-82 81 0
-82 -79 0
c Var 'grid_00001_00006' order represents '7' with '83'
-81 83 0
c Var 'grid_00001_00006' direct represents '7' with '84'
81 -83 84 0
-84 83 0
-84 -81 0
c Var 'grid_00001_00006' order represents '8' with '85'
-83 85 0
c Var 'grid_00001_00006' direct represents '8' with '86'
83 -85 86 0
-86 85 0
-86 -83 0
c Var 'grid_00001_00006' direct represents '9' with '-85'
72 74 76 78 80 82 84 86 -85 0
c Encoding variable: grid_00001_00007 with domain: int(0) (representing constraint )
c Var 'grid_00001_00007' direct represents '0' with '87'
87 0
c Encoding variable: grid_00002_00000 with domain: int(0) (representing constraint )
c Var 'grid_00002_00000' direct represents '0' with '88'
88 0
c Encoding variable: grid_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00001' order represents '1' with '89'
c Var 'grid_00002_00001' direct represents '1' with '89'
c Var 'grid_00002_00001' order represents '2' with '90'
-89 90 0
c Var 'grid_00002_00001' direct represents '2' with '91'
89 -90 91 0
-91 90 0
-91 -89 0
c Var 'grid_00002_00001' order represents '3' with '92'
-90 92 0
c Var 'grid_00002_00001' direct represents '3' with '93'
90 -92 93 0
-93 92 0
-93 -90 0
c Var 'grid_00002_00001' order represents '4' with '94'
-92 94 0
c Var 'grid_00002_00001' direct represents '4' with '95'
92 -94 95 0
-95 94 0
-95 -92 0
c Var 'grid_00002_00001' order represents '5' with '96'
-94 96 0
c Var 'grid_00002_00001' direct represents '5' with '97'
94 -96 97 0
-97 96 0
-97 -94 0
c Var 'grid_00002_00001' order represents '6' with '98'
-96 98 0
c Var 'grid_00002_00001' direct represents '6' with '99'
96 -98 99 0
-99 98 0
-99 -96 0
c Var 'grid_00002_00001' order represents '7' with '100'
-98 100 0
c Var 'grid_00002_00001' direct represents '7' with '101'
98 -100 101 0
-101 100 0
-101 -98 0
c Var 'grid_00002_00001' order represents '8' with '102'
-100 102 0
c Var 'grid_00002_00001' direct represents '8' with '103'
100 -102 103 0
-103 102 0
-103 -100 0
c Var 'grid_00002_00001' direct represents '9' with '-102'
89 91 93 95 97 99 101 103 -102 0
c Encoding variable: grid_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00002' order represents '1' with '104'
c Var 'grid_00002_00002' direct represents '1' with '104'
c Var 'grid_00002_00002' order represents '2' with '105'
-104 105 0
c Var 'grid_00002_00002' direct represents '2' with '106'
104 -105 106 0
-106 105 0
-106 -104 0
c Var 'grid_00002_00002' order represents '3' with '107'
-105 107 0
c Var 'grid_00002_00002' direct represents '3' with '108'
105 -107 108 0
-108 107 0
-108 -105 0
c Var 'grid_00002_00002' order represents '4' with '109'
-107 109 0
c Var 'grid_00002_00002' direct represents '4' with '110'
107 -109 110 0
-110 109 0
-110 -107 0
c Var 'grid_00002_00002' order represents '5' with '111'
-109 111 0
c Var 'grid_00002_00002' direct represents '5' with '112'
109 -111 112 0
-112 111 0
-112 -109 0
c Var 'grid_00002_00002' order represents '6' with '113'
-111 113 0
c Var 'grid_00002_00002' direct represents '6' with '114'
111 -113 114 0
-114 113 0
-114 -111 0
c Var 'grid_00002_00002' order represents '7' with '115'
-113 115 0
c Var 'grid_00002_00002' direct represents '7' with '116'
113 -115 116 0
-116 115 0
-116 -113 0
c Var 'grid_00002_00002' order represents '8' with '117'
-115 117 0
c Var 'grid_00002_00002' direct represents '8' with '118'
115 -117 118 0
-118 117 0
-118 -115 0
c Var 'grid_00002_00002' direct represents '9' with '-117'
104 106 108 110 112 114 116 118 -117 0
c Encoding variable: grid_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00003' order represents '1' with '119'
c Var 'grid_00002_00003' direct represents '1' with '119'
c Var 'grid_00002_00003' order represents '2' with '120'
-119 120 0
c Var 'grid_00002_00003' direct represents '2' with '121'
119 -120 121 0
-121 120 0
-121 -119 0
c Var 'grid_00002_00003' order represents '3' with '122'
-120 122 0
c Var 'grid_00002_00003' direct represents '3' with '123'
120 -122 123 0
-123 122 0
-123 -120 0
c Var 'grid_00002_00003' order represents '4' with '124'
-122 124 0
c Var 'grid_00002_00003' direct represents '4' with '125'
122 -124 125 0
-125 124 0
-125 -122 0
c Var 'grid_00002_00003' order represents '5' with '126'
-124 126 0
c Var 'grid_00002_00003' direct represents '5' with '127'
124 -126 127 0
-127 126 0
-127 -124 0
c Var 'grid_00002_00003' order represents '6' with '128'
-126 128 0
c Var 'grid_00002_00003' direct represents '6' with '129'
126 -128 129 0
-129 128 0
-129 -126 0
c Var 'grid_00002_00003' order represents '7' with '130'
-128 130 0
c Var 'grid_00002_00003' direct represents '7' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'grid_00002_00003' order represents '8' with '132'
-130 132 0
c Var 'grid_00002_00003' direct represents '8' with '133'
130 -132 133 0
-133 132 0
-133 -130 0
c Var 'grid_00002_00003' direct represents '9' with '-132'
119 121 123 125 127 129 131 133 -132 0
c Encoding variable: grid_00002_00004 with domain: int(0) (representing constraint )
c Var 'grid_00002_00004' direct represents '0' with '134'
134 0
c Encoding variable: grid_00002_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00005' order represents '1' with '135'
c Var 'grid_00002_00005' direct represents '1' with '135'
c Var 'grid_00002_00005' order represents '2' with '136'
-135 136 0
c Var 'grid_00002_00005' direct represents '2' with '137'
135 -136 137 0
-137 136 0
-137 -135 0
c Var 'grid_00002_00005' order represents '3' with '138'
-136 138 0
c Var 'grid_00002_00005' direct represents '3' with '139'
136 -138 139 0
-139 138 0
-139 -136 0
c Var 'grid_00002_00005' order represents '4' with '140'
-138 140 0
c Var 'grid_00002_00005' direct represents '4' with '141'
138 -140 141 0
-141 140 0
-141 -138 0
c Var 'grid_00002_00005' order represents '5' with '142'
-140 142 0
c Var 'grid_00002_00005' direct represents '5' with '143'
140 -142 143 0
-143 142 0
-143 -140 0
c Var 'grid_00002_00005' order represents '6' with '144'
-142 144 0
c Var 'grid_00002_00005' direct represents '6' with '145'
142 -144 145 0
-145 144 0
-145 -142 0
c Var 'grid_00002_00005' order represents '7' with '146'
-144 146 0
c Var 'grid_00002_00005' direct represents '7' with '147'
144 -146 147 0
-147 146 0
-147 -144 0
c Var 'grid_00002_00005' order represents '8' with '148'
-146 148 0
c Var 'grid_00002_00005' direct represents '8' with '149'
146 -148 149 0
-149 148 0
-149 -146 0
c Var 'grid_00002_00005' direct represents '9' with '-148'
135 137 139 141 143 145 147 149 -148 0
c Encoding variable: grid_00002_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00006' order represents '1' with '150'
c Var 'grid_00002_00006' direct represents '1' with '150'
c Var 'grid_00002_00006' order represents '2' with '151'
-150 151 0
c Var 'grid_00002_00006' direct represents '2' with '152'
150 -151 152 0
-152 151 0
-152 -150 0
c Var 'grid_00002_00006' order represents '3' with '153'
-151 153 0
c Var 'grid_00002_00006' direct represents '3' with '154'
151 -153 154 0
-154 153 0
-154 -151 0
c Var 'grid_00002_00006' order represents '4' with '155'
-153 155 0
c Var 'grid_00002_00006' direct represents '4' with '156'
153 -155 156 0
-156 155 0
-156 -153 0
c Var 'grid_00002_00006' order represents '5' with '157'
-155 157 0
c Var 'grid_00002_00006' direct represents '5' with '158'
155 -157 158 0
-158 157 0
-158 -155 0
c Var 'grid_00002_00006' order represents '6' with '159'
-157 159 0
c Var 'grid_00002_00006' direct represents '6' with '160'
157 -159 160 0
-160 159 0
-160 -157 0
c Var 'grid_00002_00006' order represents '7' with '161'
-159 161 0
c Var 'grid_00002_00006' direct represents '7' with '162'
159 -161 162 0
-162 161 0
-162 -159 0
c Var 'grid_00002_00006' order represents '8' with '163'
-161 163 0
c Var 'grid_00002_00006' direct represents '8' with '164'
161 -163 164 0
-164 163 0
-164 -161 0
c Var 'grid_00002_00006' direct represents '9' with '-163'
150 152 154 156 158 160 162 164 -163 0
c Encoding variable: grid_00002_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00007' order represents '1' with '165'
c Var 'grid_00002_00007' direct represents '1' with '165'
c Var 'grid_00002_00007' order represents '2' with '166'
-165 166 0
c Var 'grid_00002_00007' direct represents '2' with '167'
165 -166 167 0
-167 166 0
-167 -165 0
c Var 'grid_00002_00007' order represents '3' with '168'
-166 168 0
c Var 'grid_00002_00007' direct represents '3' with '169'
166 -168 169 0
-169 168 0
-169 -166 0
c Var 'grid_00002_00007' order represents '4' with '170'
-168 170 0
c Var 'grid_00002_00007' direct represents '4' with '171'
168 -170 171 0
-171 170 0
-171 -168 0
c Var 'grid_00002_00007' order represents '5' with '172'
-170 172 0
c Var 'grid_00002_00007' direct represents '5' with '173'
170 -172 173 0
-173 172 0
-173 -170 0
c Var 'grid_00002_00007' order represents '6' with '174'
-172 174 0
c Var 'grid_00002_00007' direct represents '6' with '175'
172 -174 175 0
-175 174 0
-175 -172 0
c Var 'grid_00002_00007' order represents '7' with '176'
-174 176 0
c Var 'grid_00002_00007' direct represents '7' with '177'
174 -176 177 0
-177 176 0
-177 -174 0
c Var 'grid_00002_00007' order represents '8' with '178'
-176 178 0
c Var 'grid_00002_00007' direct represents '8' with '179'
176 -178 179 0
-179 178 0
-179 -176 0
c Var 'grid_00002_00007' direct represents '9' with '-178'
165 167 169 171 173 175 177 179 -178 0
c Encoding variable: grid_00003_00000 with domain: int(0) (representing constraint )
c Var 'grid_00003_00000' direct represents '0' with '180'
180 0
c Encoding variable: grid_00003_00001 with domain: int(0) (representing constraint )
c Var 'grid_00003_00001' direct represents '0' with '181'
181 0
c Encoding variable: grid_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00002' order represents '1' with '182'
c Var 'grid_00003_00002' direct represents '1' with '182'
c Var 'grid_00003_00002' order represents '2' with '183'
-182 183 0
c Var 'grid_00003_00002' direct represents '2' with '184'
182 -183 184 0
-184 183 0
-184 -182 0
c Var 'grid_00003_00002' order represents '3' with '185'
-183 185 0
c Var 'grid_00003_00002' direct represents '3' with '186'
183 -185 186 0
-186 185 0
-186 -183 0
c Var 'grid_00003_00002' order represents '4' with '187'
-185 187 0
c Var 'grid_00003_00002' direct represents '4' with '188'
185 -187 188 0
-188 187 0
-188 -185 0
c Var 'grid_00003_00002' order represents '5' with '189'
-187 189 0
c Var 'grid_00003_00002' direct represents '5' with '190'
187 -189 190 0
-190 189 0
-190 -187 0
c Var 'grid_00003_00002' order represents '6' with '191'
-189 191 0
c Var 'grid_00003_00002' direct represents '6' with '192'
189 -191 192 0
-192 191 0
-192 -189 0
c Var 'grid_00003_00002' order represents '7' with '193'
-191 193 0
c Var 'grid_00003_00002' direct represents '7' with '194'
191 -193 194 0
-194 193 0
-194 -191 0
c Var 'grid_00003_00002' order represents '8' with '195'
-193 195 0
c Var 'grid_00003_00002' direct represents '8' with '196'
193 -195 196 0
-196 195 0
-196 -193 0
c Var 'grid_00003_00002' direct represents '9' with '-195'
182 184 186 188 190 192 194 196 -195 0
c Encoding variable: grid_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00003' order represents '1' with '197'
c Var 'grid_00003_00003' direct represents '1' with '197'
c Var 'grid_00003_00003' order represents '2' with '198'
-197 198 0
c Var 'grid_00003_00003' direct represents '2' with '199'
197 -198 199 0
-199 198 0
-199 -197 0
c Var 'grid_00003_00003' order represents '3' with '200'
-198 200 0
c Var 'grid_00003_00003' direct represents '3' with '201'
198 -200 201 0
-201 200 0
-201 -198 0
c Var 'grid_00003_00003' order represents '4' with '202'
-200 202 0
c Var 'grid_00003_00003' direct represents '4' with '203'
200 -202 203 0
-203 202 0
-203 -200 0
c Var 'grid_00003_00003' order represents '5' with '204'
-202 204 0
c Var 'grid_00003_00003' direct represents '5' with '205'
202 -204 205 0
-205 204 0
-205 -202 0
c Var 'grid_00003_00003' order represents '6' with '206'
-204 206 0
c Var 'grid_00003_00003' direct represents '6' with '207'
204 -206 207 0
-207 206 0
-207 -204 0
c Var 'grid_00003_00003' order represents '7' with '208'
-206 208 0
c Var 'grid_00003_00003' direct represents '7' with '209'
206 -208 209 0
-209 208 0
-209 -206 0
c Var 'grid_00003_00003' order represents '8' with '210'
-208 210 0
c Var 'grid_00003_00003' direct represents '8' with '211'
208 -210 211 0
-211 210 0
-211 -208 0
c Var 'grid_00003_00003' direct represents '9' with '-210'
197 199 201 203 205 207 209 211 -210 0
c Encoding variable: grid_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00004' order represents '1' with '212'
c Var 'grid_00003_00004' direct represents '1' with '212'
c Var 'grid_00003_00004' order represents '2' with '213'
-212 213 0
c Var 'grid_00003_00004' direct represents '2' with '214'
212 -213 214 0
-214 213 0
-214 -212 0
c Var 'grid_00003_00004' order represents '3' with '215'
-213 215 0
c Var 'grid_00003_00004' direct represents '3' with '216'
213 -215 216 0
-216 215 0
-216 -213 0
c Var 'grid_00003_00004' order represents '4' with '217'
-215 217 0
c Var 'grid_00003_00004' direct represents '4' with '218'
215 -217 218 0
-218 217 0
-218 -215 0
c Var 'grid_00003_00004' order represents '5' with '219'
-217 219 0
c Var 'grid_00003_00004' direct represents '5' with '220'
217 -219 220 0
-220 219 0
-220 -217 0
c Var 'grid_00003_00004' order represents '6' with '221'
-219 221 0
c Var 'grid_00003_00004' direct represents '6' with '222'
219 -221 222 0
-222 221 0
-222 -219 0
c Var 'grid_00003_00004' order represents '7' with '223'
-221 223 0
c Var 'grid_00003_00004' direct represents '7' with '224'
221 -223 224 0
-224 223 0
-224 -221 0
c Var 'grid_00003_00004' order represents '8' with '225'
-223 225 0
c Var 'grid_00003_00004' direct represents '8' with '226'
223 -225 226 0
-226 225 0
-226 -223 0
c Var 'grid_00003_00004' direct represents '9' with '-225'
212 214 216 218 220 222 224 226 -225 0
c Encoding variable: grid_00003_00005 with domain: int(0) (representing constraint )
c Var 'grid_00003_00005' direct represents '0' with '227'
227 0
c Encoding variable: grid_00003_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00006' order represents '1' with '228'
c Var 'grid_00003_00006' direct represents '1' with '228'
c Var 'grid_00003_00006' order represents '2' with '229'
-228 229 0
c Var 'grid_00003_00006' direct represents '2' with '230'
228 -229 230 0
-230 229 0
-230 -228 0
c Var 'grid_00003_00006' order represents '3' with '231'
-229 231 0
c Var 'grid_00003_00006' direct represents '3' with '232'
229 -231 232 0
-232 231 0
-232 -229 0
c Var 'grid_00003_00006' order represents '4' with '233'
-231 233 0
c Var 'grid_00003_00006' direct represents '4' with '234'
231 -233 234 0
-234 233 0
-234 -231 0
c Var 'grid_00003_00006' order represents '5' with '235'
-233 235 0
c Var 'grid_00003_00006' direct represents '5' with '236'
233 -235 236 0
-236 235 0
-236 -233 0
c Var 'grid_00003_00006' order represents '6' with '237'
-235 237 0
c Var 'grid_00003_00006' direct represents '6' with '238'
235 -237 238 0
-238 237 0
-238 -235 0
c Var 'grid_00003_00006' order represents '7' with '239'
-237 239 0
c Var 'grid_00003_00006' direct represents '7' with '240'
237 -239 240 0
-240 239 0
-240 -237 0
c Var 'grid_00003_00006' order represents '8' with '241'
-239 241 0
c Var 'grid_00003_00006' direct represents '8' with '242'
239 -241 242 0
-242 241 0
-242 -239 0
c Var 'grid_00003_00006' direct represents '9' with '-241'
228 230 232 234 236 238 240 242 -241 0
c Encoding variable: grid_00003_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00007' order represents '1' with '243'
c Var 'grid_00003_00007' direct represents '1' with '243'
c Var 'grid_00003_00007' order represents '2' with '244'
-243 244 0
c Var 'grid_00003_00007' direct represents '2' with '245'
243 -244 245 0
-245 244 0
-245 -243 0
c Var 'grid_00003_00007' order represents '3' with '246'
-244 246 0
c Var 'grid_00003_00007' direct represents '3' with '247'
244 -246 247 0
-247 246 0
-247 -244 0
c Var 'grid_00003_00007' order represents '4' with '248'
-246 248 0
c Var 'grid_00003_00007' direct represents '4' with '249'
246 -248 249 0
-249 248 0
-249 -246 0
c Var 'grid_00003_00007' order represents '5' with '250'
-248 250 0
c Var 'grid_00003_00007' direct represents '5' with '251'
248 -250 251 0
-251 250 0
-251 -248 0
c Var 'grid_00003_00007' order represents '6' with '252'
-250 252 0
c Var 'grid_00003_00007' direct represents '6' with '253'
250 -252 253 0
-253 252 0
-253 -250 0
c Var 'grid_00003_00007' order represents '7' with '254'
-252 254 0
c Var 'grid_00003_00007' direct represents '7' with '255'
252 -254 255 0
-255 254 0
-255 -252 0
c Var 'grid_00003_00007' order represents '8' with '256'
-254 256 0
c Var 'grid_00003_00007' direct represents '8' with '257'
254 -256 257 0
-257 256 0
-257 -254 0
c Var 'grid_00003_00007' direct represents '9' with '-256'
243 245 247 249 251 253 255 257 -256 0
c Encoding variable: grid_00004_00000 with domain: int(0) (representing constraint )
c Var 'grid_00004_00000' direct represents '0' with '258'
258 0
c Encoding variable: grid_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00001' order represents '1' with '259'
c Var 'grid_00004_00001' direct represents '1' with '259'
c Var 'grid_00004_00001' order represents '2' with '260'
-259 260 0
c Var 'grid_00004_00001' direct represents '2' with '261'
259 -260 261 0
-261 260 0
-261 -259 0
c Var 'grid_00004_00001' order represents '3' with '262'
-260 262 0
c Var 'grid_00004_00001' direct represents '3' with '263'
260 -262 263 0
-263 262 0
-263 -260 0
c Var 'grid_00004_00001' order represents '4' with '264'
-262 264 0
c Var 'grid_00004_00001' direct represents '4' with '265'
262 -264 265 0
-265 264 0
-265 -262 0
c Var 'grid_00004_00001' order represents '5' with '266'
-264 266 0
c Var 'grid_00004_00001' direct represents '5' with '267'
264 -266 267 0
-267 266 0
-267 -264 0
c Var 'grid_00004_00001' order represents '6' with '268'
-266 268 0
c Var 'grid_00004_00001' direct represents '6' with '269'
266 -268 269 0
-269 268 0
-269 -266 0
c Var 'grid_00004_00001' order represents '7' with '270'
-268 270 0
c Var 'grid_00004_00001' direct represents '7' with '271'
268 -270 271 0
-271 270 0
-271 -268 0
c Var 'grid_00004_00001' order represents '8' with '272'
-270 272 0
c Var 'grid_00004_00001' direct represents '8' with '273'
270 -272 273 0
-273 272 0
-273 -270 0
c Var 'grid_00004_00001' direct represents '9' with '-272'
259 261 263 265 267 269 271 273 -272 0
c Encoding variable: grid_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00002' order represents '1' with '274'
c Var 'grid_00004_00002' direct represents '1' with '274'
c Var 'grid_00004_00002' order represents '2' with '275'
-274 275 0
c Var 'grid_00004_00002' direct represents '2' with '276'
274 -275 276 0
-276 275 0
-276 -274 0
c Var 'grid_00004_00002' order represents '3' with '277'
-275 277 0
c Var 'grid_00004_00002' direct represents '3' with '278'
275 -277 278 0
-278 277 0
-278 -275 0
c Var 'grid_00004_00002' order represents '4' with '279'
-277 279 0
c Var 'grid_00004_00002' direct represents '4' with '280'
277 -279 280 0
-280 279 0
-280 -277 0
c Var 'grid_00004_00002' order represents '5' with '281'
-279 281 0
c Var 'grid_00004_00002' direct represents '5' with '282'
279 -281 282 0
-282 281 0
-282 -279 0
c Var 'grid_00004_00002' order represents '6' with '283'
-281 283 0
c Var 'grid_00004_00002' direct represents '6' with '284'
281 -283 284 0
-284 283 0
-284 -281 0
c Var 'grid_00004_00002' order represents '7' with '285'
-283 285 0
c Var 'grid_00004_00002' direct represents '7' with '286'
283 -285 286 0
-286 285 0
-286 -283 0
c Var 'grid_00004_00002' order represents '8' with '287'
-285 287 0
c Var 'grid_00004_00002' direct represents '8' with '288'
285 -287 288 0
-288 287 0
-288 -285 0
c Var 'grid_00004_00002' direct represents '9' with '-287'
274 276 278 280 282 284 286 288 -287 0
c Encoding variable: grid_00004_00003 with domain: int(0) (representing constraint )
c Var 'grid_00004_00003' direct represents '0' with '289'
289 0
c Encoding variable: grid_00004_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00004' order represents '1' with '290'
c Var 'grid_00004_00004' direct represents '1' with '290'
c Var 'grid_00004_00004' order represents '2' with '291'
-290 291 0
c Var 'grid_00004_00004' direct represents '2' with '292'
290 -291 292 0
-292 291 0
-292 -290 0
c Var 'grid_00004_00004' order represents '3' with '293'
-291 293 0
c Var 'grid_00004_00004' direct represents '3' with '294'
291 -293 294 0
-294 293 0
-294 -291 0
c Var 'grid_00004_00004' order represents '4' with '295'
-293 295 0
c Var 'grid_00004_00004' direct represents '4' with '296'
293 -295 296 0
-296 295 0
-296 -293 0
c Var 'grid_00004_00004' order represents '5' with '297'
-295 297 0
c Var 'grid_00004_00004' direct represents '5' with '298'
295 -297 298 0
-298 297 0
-298 -295 0
c Var 'grid_00004_00004' order represents '6' with '299'
-297 299 0
c Var 'grid_00004_00004' direct represents '6' with '300'
297 -299 300 0
-300 299 0
-300 -297 0
c Var 'grid_00004_00004' order represents '7' with '301'
-299 301 0
c Var 'grid_00004_00004' direct represents '7' with '302'
299 -301 302 0
-302 301 0
-302 -299 0
c Var 'grid_00004_00004' order represents '8' with '303'
-301 303 0
c Var 'grid_00004_00004' direct represents '8' with '304'
301 -303 304 0
-304 303 0
-304 -301 0
c Var 'grid_00004_00004' direct represents '9' with '-303'
290 292 294 296 298 300 302 304 -303 0
c Encoding variable: grid_00004_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00005' order represents '1' with '305'
c Var 'grid_00004_00005' direct represents '1' with '305'
c Var 'grid_00004_00005' order represents '2' with '306'
-305 306 0
c Var 'grid_00004_00005' direct represents '2' with '307'
305 -306 307 0
-307 306 0
-307 -305 0
c Var 'grid_00004_00005' order represents '3' with '308'
-306 308 0
c Var 'grid_00004_00005' direct represents '3' with '309'
306 -308 309 0
-309 308 0
-309 -306 0
c Var 'grid_00004_00005' order represents '4' with '310'
-308 310 0
c Var 'grid_00004_00005' direct represents '4' with '311'
308 -310 311 0
-311 310 0
-311 -308 0
c Var 'grid_00004_00005' order represents '5' with '312'
-310 312 0
c Var 'grid_00004_00005' direct represents '5' with '313'
310 -312 313 0
-313 312 0
-313 -310 0
c Var 'grid_00004_00005' order represents '6' with '314'
-312 314 0
c Var 'grid_00004_00005' direct represents '6' with '315'
312 -314 315 0
-315 314 0
-315 -312 0
c Var 'grid_00004_00005' order represents '7' with '316'
-314 316 0
c Var 'grid_00004_00005' direct represents '7' with '317'
314 -316 317 0
-317 316 0
-317 -314 0
c Var 'grid_00004_00005' order represents '8' with '318'
-316 318 0
c Var 'grid_00004_00005' direct represents '8' with '319'
316 -318 319 0
-319 318 0
-319 -316 0
c Var 'grid_00004_00005' direct represents '9' with '-318'
305 307 309 311 313 315 317 319 -318 0
c Encoding variable: grid_00004_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00006' order represents '1' with '320'
c Var 'grid_00004_00006' direct represents '1' with '320'
c Var 'grid_00004_00006' order represents '2' with '321'
-320 321 0
c Var 'grid_00004_00006' direct represents '2' with '322'
320 -321 322 0
-322 321 0
-322 -320 0
c Var 'grid_00004_00006' order represents '3' with '323'
-321 323 0
c Var 'grid_00004_00006' direct represents '3' with '324'
321 -323 324 0
-324 323 0
-324 -321 0
c Var 'grid_00004_00006' order represents '4' with '325'
-323 325 0
c Var 'grid_00004_00006' direct represents '4' with '326'
323 -325 326 0
-326 325 0
-326 -323 0
c Var 'grid_00004_00006' order represents '5' with '327'
-325 327 0
c Var 'grid_00004_00006' direct represents '5' with '328'
325 -327 328 0
-328 327 0
-328 -325 0
c Var 'grid_00004_00006' order represents '6' with '329'
-327 329 0
c Var 'grid_00004_00006' direct represents '6' with '330'
327 -329 330 0
-330 329 0
-330 -327 0
c Var 'grid_00004_00006' order represents '7' with '331'
-329 331 0
c Var 'grid_00004_00006' direct represents '7' with '332'
329 -331 332 0
-332 331 0
-332 -329 0
c Var 'grid_00004_00006' order represents '8' with '333'
-331 333 0
c Var 'grid_00004_00006' direct represents '8' with '334'
331 -333 334 0
-334 333 0
-334 -331 0
c Var 'grid_00004_00006' direct represents '9' with '-333'
320 322 324 326 328 330 332 334 -333 0
c Encoding variable: grid_00004_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00007' order represents '1' with '335'
c Var 'grid_00004_00007' direct represents '1' with '335'
c Var 'grid_00004_00007' order represents '2' with '336'
-335 336 0
c Var 'grid_00004_00007' direct represents '2' with '337'
335 -336 337 0
-337 336 0
-337 -335 0
c Var 'grid_00004_00007' order represents '3' with '338'
-336 338 0
c Var 'grid_00004_00007' direct represents '3' with '339'
336 -338 339 0
-339 338 0
-339 -336 0
c Var 'grid_00004_00007' order represents '4' with '340'
-338 340 0
c Var 'grid_00004_00007' direct represents '4' with '341'
338 -340 341 0
-341 340 0
-341 -338 0
c Var 'grid_00004_00007' order represents '5' with '342'
-340 342 0
c Var 'grid_00004_00007' direct represents '5' with '343'
340 -342 343 0
-343 342 0
-343 -340 0
c Var 'grid_00004_00007' order represents '6' with '344'
-342 344 0
c Var 'grid_00004_00007' direct represents '6' with '345'
342 -344 345 0
-345 344 0
-345 -342 0
c Var 'grid_00004_00007' order represents '7' with '346'
-344 346 0
c Var 'grid_00004_00007' direct represents '7' with '347'
344 -346 347 0
-347 346 0
-347 -344 0
c Var 'grid_00004_00007' order represents '8' with '348'
-346 348 0
c Var 'grid_00004_00007' direct represents '8' with '349'
346 -348 349 0
-349 348 0
-349 -346 0
c Var 'grid_00004_00007' direct represents '9' with '-348'
335 337 339 341 343 345 347 349 -348 0
c Encoding variable: grid_00005_00000 with domain: int(0) (representing constraint )
c Var 'grid_00005_00000' direct represents '0' with '350'
350 0
c Encoding variable: grid_00005_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00005_00001' order represents '1' with '351'
c Var 'grid_00005_00001' direct represents '1' with '351'
c Var 'grid_00005_00001' order represents '2' with '352'
-351 352 0
c Var 'grid_00005_00001' direct represents '2' with '353'
351 -352 353 0
-353 352 0
-353 -351 0
c Var 'grid_00005_00001' order represents '3' with '354'
-352 354 0
c Var 'grid_00005_00001' direct represents '3' with '355'
352 -354 355 0
-355 354 0
-355 -352 0
c Var 'grid_00005_00001' order represents '4' with '356'
-354 356 0
c Var 'grid_00005_00001' direct represents '4' with '357'
354 -356 357 0
-357 356 0
-357 -354 0
c Var 'grid_00005_00001' order represents '5' with '358'
-356 358 0
c Var 'grid_00005_00001' direct represents '5' with '359'
356 -358 359 0
-359 358 0
-359 -356 0
c Var 'grid_00005_00001' order represents '6' with '360'
-358 360 0
c Var 'grid_00005_00001' direct represents '6' with '361'
358 -360 361 0
-361 360 0
-361 -358 0
c Var 'grid_00005_00001' order represents '7' with '362'
-360 362 0
c Var 'grid_00005_00001' direct represents '7' with '363'
360 -362 363 0
-363 362 0
-363 -360 0
c Var 'grid_00005_00001' order represents '8' with '364'
-362 364 0
c Var 'grid_00005_00001' direct represents '8' with '365'
362 -364 365 0
-365 364 0
-365 -362 0
c Var 'grid_00005_00001' direct represents '9' with '-364'
351 353 355 357 359 361 363 365 -364 0
c Encoding variable: grid_00005_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00005_00002' order represents '1' with '366'
c Var 'grid_00005_00002' direct represents '1' with '366'
c Var 'grid_00005_00002' order represents '2' with '367'
-366 367 0
c Var 'grid_00005_00002' direct represents '2' with '368'
366 -367 368 0
-368 367 0
-368 -366 0
c Var 'grid_00005_00002' order represents '3' with '369'
-367 369 0
c Var 'grid_00005_00002' direct represents '3' with '370'
367 -369 370 0
-370 369 0
-370 -367 0
c Var 'grid_00005_00002' order represents '4' with '371'
-369 371 0
c Var 'grid_00005_00002' direct represents '4' with '372'
369 -371 372 0
-372 371 0
-372 -369 0
c Var 'grid_00005_00002' order represents '5' with '373'
-371 373 0
c Var 'grid_00005_00002' direct represents '5' with '374'
371 -373 374 0
-374 373 0
-374 -371 0
c Var 'grid_00005_00002' order represents '6' with '375'
-373 375 0
c Var 'grid_00005_00002' direct represents '6' with '376'
373 -375 376 0
-376 375 0
-376 -373 0
c Var 'grid_00005_00002' order represents '7' with '377'
-375 377 0
c Var 'grid_00005_00002' direct represents '7' with '378'
375 -377 378 0
-378 377 0
-378 -375 0
c Var 'grid_00005_00002' order represents '8' with '379'
-377 379 0
c Var 'grid_00005_00002' direct represents '8' with '380'
377 -379 380 0
-380 379 0
-380 -377 0
c Var 'grid_00005_00002' direct represents '9' with '-379'
366 368 370 372 374 376 378 380 -379 0
c Encoding variable: grid_00005_00003 with domain: int(0) (representing constraint )
c Var 'grid_00005_00003' direct represents '0' with '381'
381 0
c Encoding variable: grid_00005_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00005_00004' order represents '1' with '382'
c Var 'grid_00005_00004' direct represents '1' with '382'
c Var 'grid_00005_00004' order represents '2' with '383'
-382 383 0
c Var 'grid_00005_00004' direct represents '2' with '384'
382 -383 384 0
-384 383 0
-384 -382 0
c Var 'grid_00005_00004' order represents '3' with '385'
-383 385 0
c Var 'grid_00005_00004' direct represents '3' with '386'
383 -385 386 0
-386 385 0
-386 -383 0
c Var 'grid_00005_00004' order represents '4' with '387'
-385 387 0
c Var 'grid_00005_00004' direct represents '4' with '388'
385 -387 388 0
-388 387 0
-388 -385 0
c Var 'grid_00005_00004' order represents '5' with '389'
-387 389 0
c Var 'grid_00005_00004' direct represents '5' with '390'
387 -389 390 0
-390 389 0
-390 -387 0
c Var 'grid_00005_00004' order represents '6' with '391'
-389 391 0
c Var 'grid_00005_00004' direct represents '6' with '392'
389 -391 392 0
-392 391 0
-392 -389 0
c Var 'grid_00005_00004' order represents '7' with '393'
-391 393 0
c Var 'grid_00005_00004' direct represents '7' with '394'
391 -393 394 0
-394 393 0
-394 -391 0
c Var 'grid_00005_00004' order represents '8' with '395'
-393 395 0
c Var 'grid_00005_00004' direct represents '8' with '396'
393 -395 396 0
-396 395 0
-396 -393 0
c Var 'grid_00005_00004' direct represents '9' with '-395'
382 384 386 388 390 392 394 396 -395 0
c Encoding variable: grid_00005_00005 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00005_00005' order represents '1' with '397'
c Var 'grid_00005_00005' direct represents '1' with '397'
c Var 'grid_00005_00005' order represents '2' with '398'
-397 398 0
c Var 'grid_00005_00005' direct represents '2' with '399'
397 -398 399 0
-399 398 0
-399 -397 0
c Var 'grid_00005_00005' order represents '3' with '400'
-398 400 0
c Var 'grid_00005_00005' direct represents '3' with '401'
398 -400 401 0
-401 400 0
-401 -398 0
c Var 'grid_00005_00005' order represents '4' with '402'
-400 402 0
c Var 'grid_00005_00005' direct represents '4' with '403'
400 -402 403 0
-403 402 0
-403 -400 0
c Var 'grid_00005_00005' order represents '5' with '404'
-402 404 0
c Var 'grid_00005_00005' direct represents '5' with '405'
402 -404 405 0
-405 404 0
-405 -402 0
c Var 'grid_00005_00005' order represents '6' with '406'
-404 406 0
c Var 'grid_00005_00005' direct represents '6' with '407'
404 -406 407 0
-407 406 0
-407 -404 0
c Var 'grid_00005_00005' order represents '7' with '408'
-406 408 0
c Var 'grid_00005_00005' direct represents '7' with '409'
406 -408 409 0
-409 408 0
-409 -406 0
c Var 'grid_00005_00005' order represents '8' with '410'
-408 410 0
c Var 'grid_00005_00005' direct represents '8' with '411'
408 -410 411 0
-411 410 0
-411 -408 0
c Var 'grid_00005_00005' direct represents '9' with '-410'
397 399 401 403 405 407 409 411 -410 0
c Encoding variable: grid_00005_00006 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00005_00006' order represents '1' with '412'
c Var 'grid_00005_00006' direct represents '1' with '412'
c Var 'grid_00005_00006' order represents '2' with '413'
-412 413 0
c Var 'grid_00005_00006' direct represents '2' with '414'
412 -413 414 0
-414 413 0
-414 -412 0
c Var 'grid_00005_00006' order represents '3' with '415'
-413 415 0
c Var 'grid_00005_00006' direct represents '3' with '416'
413 -415 416 0
-416 415 0
-416 -413 0
c Var 'grid_00005_00006' order represents '4' with '417'
-415 417 0
c Var 'grid_00005_00006' direct represents '4' with '418'
415 -417 418 0
-418 417 0
-418 -415 0
c Var 'grid_00005_00006' order represents '5' with '419'
-417 419 0
c Var 'grid_00005_00006' direct represents '5' with '420'
417 -419 420 0
-420 419 0
-420 -417 0
c Var 'grid_00005_00006' order represents '6' with '421'
-419 421 0
c Var 'grid_00005_00006' direct represents '6' with '422'
419 -421 422 0
-422 421 0
-422 -419 0
c Var 'grid_00005_00006' order represents '7' with '423'
-421 423 0
c Var 'grid_00005_00006' direct represents '7' with '424'
421 -423 424 0
-424 423 0
-424 -421 0
c Var 'grid_00005_00006' order represents '8' with '425'
-423 425 0
c Var 'grid_00005_00006' direct represents '8' with '426'
423 -425 426 0
-426 425 0
-426 -423 0
c Var 'grid_00005_00006' direct represents '9' with '-425'
412 414 416 418 420 422 424 426 -425 0
c Encoding variable: grid_00005_00007 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00005_00007' order represents '1' with '427'
c Var 'grid_00005_00007' direct represents '1' with '427'
c Var 'grid_00005_00007' order represents '2' with '428'
-427 428 0
c Var 'grid_00005_00007' direct represents '2' with '429'
427 -428 429 0
-429 428 0
-429 -427 0
c Var 'grid_00005_00007' order represents '3' with '430'
-428 430 0
c Var 'grid_00005_00007' direct represents '3' with '431'
428 -430 431 0
-431 430 0
-431 -428 0
c Var 'grid_00005_00007' order represents '4' with '432'
-430 432 0
c Var 'grid_00005_00007' direct represents '4' with '433'
430 -432 433 0
-433 432 0
-433 -430 0
c Var 'grid_00005_00007' order represents '5' with '434'
-432 434 0
c Var 'grid_00005_00007' direct represents '5' with '435'
432 -434 435 0
-435 434 0
-435 -432 0
c Var 'grid_00005_00007' order represents '6' with '436'
-434 436 0
c Var 'grid_00005_00007' direct represents '6' with '437'
434 -436 437 0
-437 436 0
-437 -434 0
c Var 'grid_00005_00007' order represents '7' with '438'
-436 438 0
c Var 'grid_00005_00007' direct represents '7' with '439'
436 -438 439 0
-439 438 0
-439 -436 0
c Var 'grid_00005_00007' order represents '8' with '440'
-438 440 0
c Var 'grid_00005_00007' direct represents '8' with '441'
438 -440 441 0
-441 440 0
-441 -438 0
c Var 'grid_00005_00007' direct represents '9' with '-440'
427 429 431 433 435 437 439 441 -440 0
c Encoding variable: vertalldiff_00000_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00000' direct represents '0' with '-442'
c Var 'vertalldiff_00000_00000' direct represents '1' with '442'
c Var 'vertalldiff_00000_00000' order represents '1' with '1'
c Var 'vertalldiff_00000_00000' order represents '0' with '-442'
442 -442 0
c Encoding variable: vertalldiff_00000_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00001' direct represents '0' with '-443'
c Var 'vertalldiff_00000_00001' direct represents '1' with '443'
c Var 'vertalldiff_00000_00001' order represents '1' with '1'
c Var 'vertalldiff_00000_00001' order represents '0' with '-443'
c Encoding variable: vertalldiff_00000_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00002' direct represents '0' with '-444'
c Var 'vertalldiff_00000_00002' direct represents '1' with '444'
c Var 'vertalldiff_00000_00002' order represents '1' with '1'
c Var 'vertalldiff_00000_00002' order represents '0' with '-444'
c Encoding variable: vertalldiff_00000_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00003' direct represents '0' with '-445'
c Var 'vertalldiff_00000_00003' direct represents '1' with '445'
c Var 'vertalldiff_00000_00003' order represents '1' with '1'
c Var 'vertalldiff_00000_00003' order represents '0' with '-445'
c Encoding variable: vertalldiff_00000_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00004' direct represents '0' with '-446'
c Var 'vertalldiff_00000_00004' direct represents '1' with '446'
c Var 'vertalldiff_00000_00004' order represents '1' with '1'
c Var 'vertalldiff_00000_00004' order represents '0' with '-446'
446 -446 0
c Encoding variable: vertalldiff_00000_00005 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00005' direct represents '0' with '-447'
c Var 'vertalldiff_00000_00005' direct represents '1' with '447'
c Var 'vertalldiff_00000_00005' order represents '1' with '1'
c Var 'vertalldiff_00000_00005' order represents '0' with '-447'
c Encoding variable: vertalldiff_00000_00006 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00006' direct represents '0' with '-448'
c Var 'vertalldiff_00000_00006' direct represents '1' with '448'
c Var 'vertalldiff_00000_00006' order represents '1' with '1'
c Var 'vertalldiff_00000_00006' order represents '0' with '-448'
c Encoding variable: vertalldiff_00000_00007 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00007' direct represents '0' with '-449'
c Var 'vertalldiff_00000_00007' direct represents '1' with '449'
c Var 'vertalldiff_00000_00007' order represents '1' with '1'
c Var 'vertalldiff_00000_00007' order represents '0' with '-449'
449 -449 0
c Encoding variable: vertalldiff_00001_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00000' direct represents '0' with '-450'
c Var 'vertalldiff_00001_00000' direct represents '1' with '450'
c Var 'vertalldiff_00001_00000' order represents '1' with '1'
c Var 'vertalldiff_00001_00000' order represents '0' with '-450'
450 -450 0
c Encoding variable: vertalldiff_00001_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00001' direct represents '0' with '-451'
c Var 'vertalldiff_00001_00001' direct represents '1' with '451'
c Var 'vertalldiff_00001_00001' order represents '1' with '1'
c Var 'vertalldiff_00001_00001' order represents '0' with '-451'
451 -451 0
c Encoding variable: vertalldiff_00001_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00002' direct represents '0' with '-452'
c Var 'vertalldiff_00001_00002' direct represents '1' with '452'
c Var 'vertalldiff_00001_00002' order represents '1' with '1'
c Var 'vertalldiff_00001_00002' order represents '0' with '-452'
452 -452 0
c Encoding variable: vertalldiff_00001_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00003' direct represents '0' with '-453'
c Var 'vertalldiff_00001_00003' direct represents '1' with '453'
c Var 'vertalldiff_00001_00003' order represents '1' with '1'
c Var 'vertalldiff_00001_00003' order represents '0' with '-453'
453 -453 0
c Encoding variable: vertalldiff_00001_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00004' direct represents '0' with '-454'
c Var 'vertalldiff_00001_00004' direct represents '1' with '454'
c Var 'vertalldiff_00001_00004' order represents '1' with '1'
c Var 'vertalldiff_00001_00004' order represents '0' with '-454'
454 -454 0
c Encoding variable: vertalldiff_00001_00005 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00005' direct represents '0' with '-455'
c Var 'vertalldiff_00001_00005' direct represents '1' with '455'
c Var 'vertalldiff_00001_00005' order represents '1' with '1'
c Var 'vertalldiff_00001_00005' order represents '0' with '-455'
455 -455 0
c Encoding variable: vertalldiff_00001_00006 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00006' direct represents '0' with '-456'
c Var 'vertalldiff_00001_00006' direct represents '1' with '456'
c Var 'vertalldiff_00001_00006' order represents '1' with '1'
c Var 'vertalldiff_00001_00006' order represents '0' with '-456'
456 -456 0
c Encoding variable: vertalldiff_00001_00007 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00007' direct represents '0' with '-457'
c Var 'vertalldiff_00001_00007' direct represents '1' with '457'
c Var 'vertalldiff_00001_00007' order represents '1' with '1'
c Var 'vertalldiff_00001_00007' order represents '0' with '-457'
c Encoding variable: vertalldiff_00002_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00000' direct represents '0' with '-458'
c Var 'vertalldiff_00002_00000' direct represents '1' with '458'
c Var 'vertalldiff_00002_00000' order represents '1' with '1'
c Var 'vertalldiff_00002_00000' order represents '0' with '-458'
458 -458 0
c Encoding variable: vertalldiff_00002_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00001' direct represents '0' with '-459'
c Var 'vertalldiff_00002_00001' direct represents '1' with '459'
c Var 'vertalldiff_00002_00001' order represents '1' with '1'
c Var 'vertalldiff_00002_00001' order represents '0' with '-459'
459 -459 0
c Encoding variable: vertalldiff_00002_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00002' direct represents '0' with '-460'
c Var 'vertalldiff_00002_00002' direct represents '1' with '460'
c Var 'vertalldiff_00002_00002' order represents '1' with '1'
c Var 'vertalldiff_00002_00002' order represents '0' with '-460'
460 -460 0
c Encoding variable: vertalldiff_00002_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00003' direct represents '0' with '-461'
c Var 'vertalldiff_00002_00003' direct represents '1' with '461'
c Var 'vertalldiff_00002_00003' order represents '1' with '1'
c Var 'vertalldiff_00002_00003' order represents '0' with '-461'
461 -461 0
c Encoding variable: vertalldiff_00002_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00004' direct represents '0' with '-462'
c Var 'vertalldiff_00002_00004' direct represents '1' with '462'
c Var 'vertalldiff_00002_00004' order represents '1' with '1'
c Var 'vertalldiff_00002_00004' order represents '0' with '-462'
c Encoding variable: vertalldiff_00002_00005 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00005' direct represents '0' with '-463'
c Var 'vertalldiff_00002_00005' direct represents '1' with '463'
c Var 'vertalldiff_00002_00005' order represents '1' with '1'
c Var 'vertalldiff_00002_00005' order represents '0' with '-463'
463 -463 0
c Encoding variable: vertalldiff_00002_00006 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00006' direct represents '0' with '-464'
c Var 'vertalldiff_00002_00006' direct represents '1' with '464'
c Var 'vertalldiff_00002_00006' order represents '1' with '1'
c Var 'vertalldiff_00002_00006' order represents '0' with '-464'
464 -464 0
c Encoding variable: vertalldiff_00002_00007 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00007' direct represents '0' with '-465'
c Var 'vertalldiff_00002_00007' direct represents '1' with '465'
c Var 'vertalldiff_00002_00007' order represents '1' with '1'
c Var 'vertalldiff_00002_00007' order represents '0' with '-465'
465 -465 0
c Encoding variable: vertalldiff_00003_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00000' direct represents '0' with '-466'
c Var 'vertalldiff_00003_00000' direct represents '1' with '466'
c Var 'vertalldiff_00003_00000' order represents '1' with '1'
c Var 'vertalldiff_00003_00000' order represents '0' with '-466'
466 -466 0
c Encoding variable: vertalldiff_00003_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00001' direct represents '0' with '-467'
c Var 'vertalldiff_00003_00001' direct represents '1' with '467'
c Var 'vertalldiff_00003_00001' order represents '1' with '1'
c Var 'vertalldiff_00003_00001' order represents '0' with '-467'
c Encoding variable: vertalldiff_00003_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00002' direct represents '0' with '-468'
c Var 'vertalldiff_00003_00002' direct represents '1' with '468'
c Var 'vertalldiff_00003_00002' order represents '1' with '1'
c Var 'vertalldiff_00003_00002' order represents '0' with '-468'
468 -468 0
c Encoding variable: vertalldiff_00003_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00003' direct represents '0' with '-469'
c Var 'vertalldiff_00003_00003' direct represents '1' with '469'
c Var 'vertalldiff_00003_00003' order represents '1' with '1'
c Var 'vertalldiff_00003_00003' order represents '0' with '-469'
469 -469 0
c Encoding variable: vertalldiff_00003_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00004' direct represents '0' with '-470'
c Var 'vertalldiff_00003_00004' direct represents '1' with '470'
c Var 'vertalldiff_00003_00004' order represents '1' with '1'
c Var 'vertalldiff_00003_00004' order represents '0' with '-470'
470 -470 0
c Encoding variable: vertalldiff_00003_00005 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00005' direct represents '0' with '-471'
c Var 'vertalldiff_00003_00005' direct represents '1' with '471'
c Var 'vertalldiff_00003_00005' order represents '1' with '1'
c Var 'vertalldiff_00003_00005' order represents '0' with '-471'
c Encoding variable: vertalldiff_00003_00006 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00006' direct represents '0' with '-472'
c Var 'vertalldiff_00003_00006' direct represents '1' with '472'
c Var 'vertalldiff_00003_00006' order represents '1' with '1'
c Var 'vertalldiff_00003_00006' order represents '0' with '-472'
472 -472 0
c Encoding variable: vertalldiff_00003_00007 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00007' direct represents '0' with '-473'
c Var 'vertalldiff_00003_00007' direct represents '1' with '473'
c Var 'vertalldiff_00003_00007' order represents '1' with '1'
c Var 'vertalldiff_00003_00007' order represents '0' with '-473'
473 -473 0
c Encoding variable: vertalldiff_00004_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00000' direct represents '0' with '-474'
c Var 'vertalldiff_00004_00000' direct represents '1' with '474'
c Var 'vertalldiff_00004_00000' order represents '1' with '1'
c Var 'vertalldiff_00004_00000' order represents '0' with '-474'
474 -474 0
c Encoding variable: vertalldiff_00004_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00001' direct represents '0' with '-475'
c Var 'vertalldiff_00004_00001' direct represents '1' with '475'
c Var 'vertalldiff_00004_00001' order represents '1' with '1'
c Var 'vertalldiff_00004_00001' order represents '0' with '-475'
475 -475 0
c Encoding variable: vertalldiff_00004_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00002' direct represents '0' with '-476'
c Var 'vertalldiff_00004_00002' direct represents '1' with '476'
c Var 'vertalldiff_00004_00002' order represents '1' with '1'
c Var 'vertalldiff_00004_00002' order represents '0' with '-476'
476 -476 0
c Encoding variable: vertalldiff_00004_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00003' direct represents '0' with '-477'
c Var 'vertalldiff_00004_00003' direct represents '1' with '477'
c Var 'vertalldiff_00004_00003' order represents '1' with '1'
c Var 'vertalldiff_00004_00003' order represents '0' with '-477'
477 -477 0
c Encoding variable: vertalldiff_00004_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00004' direct represents '0' with '-478'
c Var 'vertalldiff_00004_00004' direct represents '1' with '478'
c Var 'vertalldiff_00004_00004' order represents '1' with '1'
c Var 'vertalldiff_00004_00004' order represents '0' with '-478'
478 -478 0
c Encoding variable: vertalldiff_00004_00005 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00005' direct represents '0' with '-479'
c Var 'vertalldiff_00004_00005' direct represents '1' with '479'
c Var 'vertalldiff_00004_00005' order represents '1' with '1'
c Var 'vertalldiff_00004_00005' order represents '0' with '-479'
479 -479 0
c Encoding variable: vertalldiff_00004_00006 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00006' direct represents '0' with '-480'
c Var 'vertalldiff_00004_00006' direct represents '1' with '480'
c Var 'vertalldiff_00004_00006' order represents '1' with '1'
c Var 'vertalldiff_00004_00006' order represents '0' with '-480'
480 -480 0
c Encoding variable: vertalldiff_00004_00007 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00007' direct represents '0' with '-481'
c Var 'vertalldiff_00004_00007' direct represents '1' with '481'
c Var 'vertalldiff_00004_00007' order represents '1' with '1'
c Var 'vertalldiff_00004_00007' order represents '0' with '-481'
481 -481 0
c Encoding variable: vertalldiff_00005_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00000' direct represents '0' with '-482'
c Var 'vertalldiff_00005_00000' direct represents '1' with '482'
c Var 'vertalldiff_00005_00000' order represents '1' with '1'
c Var 'vertalldiff_00005_00000' order represents '0' with '-482'
482 -482 0
c Encoding variable: vertalldiff_00005_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00001' direct represents '0' with '-483'
c Var 'vertalldiff_00005_00001' direct represents '1' with '483'
c Var 'vertalldiff_00005_00001' order represents '1' with '1'
c Var 'vertalldiff_00005_00001' order represents '0' with '-483'
483 -483 0
c Encoding variable: vertalldiff_00005_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00002' direct represents '0' with '-484'
c Var 'vertalldiff_00005_00002' direct represents '1' with '484'
c Var 'vertalldiff_00005_00002' order represents '1' with '1'
c Var 'vertalldiff_00005_00002' order represents '0' with '-484'
484 -484 0
c Encoding variable: vertalldiff_00005_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00003' direct represents '0' with '-485'
c Var 'vertalldiff_00005_00003' direct represents '1' with '485'
c Var 'vertalldiff_00005_00003' order represents '1' with '1'
c Var 'vertalldiff_00005_00003' order represents '0' with '-485'
485 -485 0
c Encoding variable: vertalldiff_00005_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00004' direct represents '0' with '-486'
c Var 'vertalldiff_00005_00004' direct represents '1' with '486'
c Var 'vertalldiff_00005_00004' order represents '1' with '1'
c Var 'vertalldiff_00005_00004' order represents '0' with '-486'
486 -486 0
c Encoding variable: vertalldiff_00005_00005 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00005' direct represents '0' with '-487'
c Var 'vertalldiff_00005_00005' direct represents '1' with '487'
c Var 'vertalldiff_00005_00005' order represents '1' with '1'
c Var 'vertalldiff_00005_00005' order represents '0' with '-487'
487 -487 0
c Encoding variable: vertalldiff_00005_00006 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00006' direct represents '0' with '-488'
c Var 'vertalldiff_00005_00006' direct represents '1' with '488'
c Var 'vertalldiff_00005_00006' order represents '1' with '1'
c Var 'vertalldiff_00005_00006' order represents '0' with '-488'
488 -488 0
c Encoding variable: vertalldiff_00005_00007 with domain: bool (representing constraint )
c Var 'vertalldiff_00005_00007' direct represents '0' with '-489'
c Var 'vertalldiff_00005_00007' direct represents '1' with '489'
c Var 'vertalldiff_00005_00007' order represents '1' with '1'
c Var 'vertalldiff_00005_00007' order represents '0' with '-489'
489 -489 0
c Encoding variable: vertsum_00000_00000 with domain: bool (representing constraint )
c Var 'vertsum_00000_00000' direct represents '0' with '-490'
c Var 'vertsum_00000_00000' direct represents '1' with '490'
c Var 'vertsum_00000_00000' order represents '1' with '1'
c Var 'vertsum_00000_00000' order represents '0' with '-490'
490 -490 0
c Encoding variable: vertsum_00000_00001 with domain: bool (representing constraint )
c Var 'vertsum_00000_00001' direct represents '0' with '-491'
c Var 'vertsum_00000_00001' direct represents '1' with '491'
c Var 'vertsum_00000_00001' order represents '1' with '1'
c Var 'vertsum_00000_00001' order represents '0' with '-491'
c Encoding variable: vertsum_00000_00002 with domain: bool (representing constraint )
c Var 'vertsum_00000_00002' direct represents '0' with '-492'
c Var 'vertsum_00000_00002' direct represents '1' with '492'
c Var 'vertsum_00000_00002' order represents '1' with '1'
c Var 'vertsum_00000_00002' order represents '0' with '-492'
c Encoding variable: vertsum_00000_00003 with domain: bool (representing constraint )
c Var 'vertsum_00000_00003' direct represents '0' with '-493'
c Var 'vertsum_00000_00003' direct represents '1' with '493'
c Var 'vertsum_00000_00003' order represents '1' with '1'
c Var 'vertsum_00000_00003' order represents '0' with '-493'
c Encoding variable: vertsum_00000_00004 with domain: bool (representing constraint )
c Var 'vertsum_00000_00004' direct represents '0' with '-494'
c Var 'vertsum_00000_00004' direct represents '1' with '494'
c Var 'vertsum_00000_00004' order represents '1' with '1'
c Var 'vertsum_00000_00004' order represents '0' with '-494'
494 -494 0
c Encoding variable: vertsum_00000_00005 with domain: bool (representing constraint )
c Var 'vertsum_00000_00005' direct represents '0' with '-495'
c Var 'vertsum_00000_00005' direct represents '1' with '495'
c Var 'vertsum_00000_00005' order represents '1' with '1'
c Var 'vertsum_00000_00005' order represents '0' with '-495'
c Encoding variable: vertsum_00000_00006 with domain: bool (representing constraint )
c Var 'vertsum_00000_00006' direct represents '0' with '-496'
c Var 'vertsum_00000_00006' direct represents '1' with '496'
c Var 'vertsum_00000_00006' order represents '1' with '1'
c Var 'vertsum_00000_00006' order represents '0' with '-496'
c Encoding variable: vertsum_00000_00007 with domain: bool (representing constraint )
c Var 'vertsum_00000_00007' direct represents '0' with '-497'
c Var 'vertsum_00000_00007' direct represents '1' with '497'
c Var 'vertsum_00000_00007' order represents '1' with '1'
c Var 'vertsum_00000_00007' order represents '0' with '-497'
497 -497 0
c Encoding variable: vertsum_00001_00000 with domain: bool (representing constraint )
c Var 'vertsum_00001_00000' direct represents '0' with '-498'
c Var 'vertsum_00001_00000' direct represents '1' with '498'
c Var 'vertsum_00001_00000' order represents '1' with '1'
c Var 'vertsum_00001_00000' order represents '0' with '-498'
498 -498 0
c Encoding variable: vertsum_00001_00001 with domain: bool (representing constraint )
c Var 'vertsum_00001_00001' direct represents '0' with '-499'
c Var 'vertsum_00001_00001' direct represents '1' with '499'
c Var 'vertsum_00001_00001' order represents '1' with '1'
c Var 'vertsum_00001_00001' order represents '0' with '-499'
499 -499 0
c Encoding variable: vertsum_00001_00002 with domain: bool (representing constraint )
c Var 'vertsum_00001_00002' direct represents '0' with '-500'
c Var 'vertsum_00001_00002' direct represents '1' with '500'
c Var 'vertsum_00001_00002' order represents '1' with '1'
c Var 'vertsum_00001_00002' order represents '0' with '-500'
500 -500 0
c Encoding variable: vertsum_00001_00003 with domain: bool (representing constraint )
c Var 'vertsum_00001_00003' direct represents '0' with '-501'
c Var 'vertsum_00001_00003' direct represents '1' with '501'
c Var 'vertsum_00001_00003' order represents '1' with '1'
c Var 'vertsum_00001_00003' order represents '0' with '-501'
501 -501 0
c Encoding variable: vertsum_00001_00004 with domain: bool (representing constraint )
c Var 'vertsum_00001_00004' direct represents '0' with '-502'
c Var 'vertsum_00001_00004' direct represents '1' with '502'
c Var 'vertsum_00001_00004' order represents '1' with '1'
c Var 'vertsum_00001_00004' order represents '0' with '-502'
502 -502 0
c Encoding variable: vertsum_00001_00005 with domain: bool (representing constraint )
c Var 'vertsum_00001_00005' direct represents '0' with '-503'
c Var 'vertsum_00001_00005' direct represents '1' with '503'
c Var 'vertsum_00001_00005' order represents '1' with '1'
c Var 'vertsum_00001_00005' order represents '0' with '-503'
503 -503 0
c Encoding variable: vertsum_00001_00006 with domain: bool (representing constraint )
c Var 'vertsum_00001_00006' direct represents '0' with '-504'
c Var 'vertsum_00001_00006' direct represents '1' with '504'
c Var 'vertsum_00001_00006' order represents '1' with '1'
c Var 'vertsum_00001_00006' order represents '0' with '-504'
504 -504 0
c Encoding variable: vertsum_00001_00007 with domain: bool (representing constraint )
c Var 'vertsum_00001_00007' direct represents '0' with '-505'
c Var 'vertsum_00001_00007' direct represents '1' with '505'
c Var 'vertsum_00001_00007' order represents '1' with '1'
c Var 'vertsum_00001_00007' order represents '0' with '-505'
c Encoding variable: vertsum_00002_00000 with domain: bool (representing constraint )
c Var 'vertsum_00002_00000' direct represents '0' with '-506'
c Var 'vertsum_00002_00000' direct represents '1' with '506'
c Var 'vertsum_00002_00000' order represents '1' with '1'
c Var 'vertsum_00002_00000' order represents '0' with '-506'
506 -506 0
c Encoding variable: vertsum_00002_00001 with domain: bool (representing constraint )
c Var 'vertsum_00002_00001' direct represents '0' with '-507'
c Var 'vertsum_00002_00001' direct represents '1' with '507'
c Var 'vertsum_00002_00001' order represents '1' with '1'
c Var 'vertsum_00002_00001' order represents '0' with '-507'
507 -507 0
c Encoding variable: vertsum_00002_00002 with domain: bool (representing constraint )
c Var 'vertsum_00002_00002' direct represents '0' with '-508'
c Var 'vertsum_00002_00002' direct represents '1' with '508'
c Var 'vertsum_00002_00002' order represents '1' with '1'
c Var 'vertsum_00002_00002' order represents '0' with '-508'
508 -508 0
c Encoding variable: vertsum_00002_00003 with domain: bool (representing constraint )
c Var 'vertsum_00002_00003' direct represents '0' with '-509'
c Var 'vertsum_00002_00003' direct represents '1' with '509'
c Var 'vertsum_00002_00003' order represents '1' with '1'
c Var 'vertsum_00002_00003' order represents '0' with '-509'
509 -509 0
c Encoding variable: vertsum_00002_00004 with domain: bool (representing constraint )
c Var 'vertsum_00002_00004' direct represents '0' with '-510'
c Var 'vertsum_00002_00004' direct represents '1' with '510'
c Var 'vertsum_00002_00004' order represents '1' with '1'
c Var 'vertsum_00002_00004' order represents '0' with '-510'
c Encoding variable: vertsum_00002_00005 with domain: bool (representing constraint )
c Var 'vertsum_00002_00005' direct represents '0' with '-511'
c Var 'vertsum_00002_00005' direct represents '1' with '511'
c Var 'vertsum_00002_00005' order represents '1' with '1'
c Var 'vertsum_00002_00005' order represents '0' with '-511'
511 -511 0
c Encoding variable: vertsum_00002_00006 with domain: bool (representing constraint )
c Var 'vertsum_00002_00006' direct represents '0' with '-512'
c Var 'vertsum_00002_00006' direct represents '1' with '512'
c Var 'vertsum_00002_00006' order represents '1' with '1'
c Var 'vertsum_00002_00006' order represents '0' with '-512'
512 -512 0
c Encoding variable: vertsum_00002_00007 with domain: bool (representing constraint )
c Var 'vertsum_00002_00007' direct represents '0' with '-513'
c Var 'vertsum_00002_00007' direct represents '1' with '513'
c Var 'vertsum_00002_00007' order represents '1' with '1'
c Var 'vertsum_00002_00007' order represents '0' with '-513'
513 -513 0
c Encoding variable: vertsum_00003_00000 with domain: bool (representing constraint )
c Var 'vertsum_00003_00000' direct represents '0' with '-514'
c Var 'vertsum_00003_00000' direct represents '1' with '514'
c Var 'vertsum_00003_00000' order represents '1' with '1'
c Var 'vertsum_00003_00000' order represents '0' with '-514'
514 -514 0
c Encoding variable: vertsum_00003_00001 with domain: bool (representing constraint )
c Var 'vertsum_00003_00001' direct represents '0' with '-515'
c Var 'vertsum_00003_00001' direct represents '1' with '515'
c Var 'vertsum_00003_00001' order represents '1' with '1'
c Var 'vertsum_00003_00001' order represents '0' with '-515'
c Encoding variable: vertsum_00003_00002 with domain: bool (representing constraint )
c Var 'vertsum_00003_00002' direct represents '0' with '-516'
c Var 'vertsum_00003_00002' direct represents '1' with '516'
c Var 'vertsum_00003_00002' order represents '1' with '1'
c Var 'vertsum_00003_00002' order represents '0' with '-516'
516 -516 0
c Encoding variable: vertsum_00003_00003 with domain: bool (representing constraint )
c Var 'vertsum_00003_00003' direct represents '0' with '-517'
c Var 'vertsum_00003_00003' direct represents '1' with '517'
c Var 'vertsum_00003_00003' order represents '1' with '1'
c Var 'vertsum_00003_00003' order represents '0' with '-517'
517 -517 0
c Encoding variable: vertsum_00003_00004 with domain: bool (representing constraint )
c Var 'vertsum_00003_00004' direct represents '0' with '-518'
c Var 'vertsum_00003_00004' direct represents '1' with '518'
c Var 'vertsum_00003_00004' order represents '1' with '1'
c Var 'vertsum_00003_00004' order represents '0' with '-518'
518 -518 0
c Encoding variable: vertsum_00003_00005 with domain: bool (representing constraint )
c Var 'vertsum_00003_00005' direct represents '0' with '-519'
c Var 'vertsum_00003_00005' direct represents '1' with '519'
c Var 'vertsum_00003_00005' order represents '1' with '1'
c Var 'vertsum_00003_00005' order represents '0' with '-519'
c Encoding variable: vertsum_00003_00006 with domain: bool (representing constraint )
c Var 'vertsum_00003_00006' direct represents '0' with '-520'
c Var 'vertsum_00003_00006' direct represents '1' with '520'
c Var 'vertsum_00003_00006' order represents '1' with '1'
c Var 'vertsum_00003_00006' order represents '0' with '-520'
520 -520 0
c Encoding variable: vertsum_00003_00007 with domain: bool (representing constraint )
c Var 'vertsum_00003_00007' direct represents '0' with '-521'
c Var 'vertsum_00003_00007' direct represents '1' with '521'
c Var 'vertsum_00003_00007' order represents '1' with '1'
c Var 'vertsum_00003_00007' order represents '0' with '-521'
521 -521 0
c Encoding variable: vertsum_00004_00000 with domain: bool (representing constraint )
c Var 'vertsum_00004_00000' direct represents '0' with '-522'
c Var 'vertsum_00004_00000' direct represents '1' with '522'
c Var 'vertsum_00004_00000' order represents '1' with '1'
c Var 'vertsum_00004_00000' order represents '0' with '-522'
522 -522 0
c Encoding variable: vertsum_00004_00001 with domain: bool (representing constraint )
c Var 'vertsum_00004_00001' direct represents '0' with '-523'
c Var 'vertsum_00004_00001' direct represents '1' with '523'
c Var 'vertsum_00004_00001' order represents '1' with '1'
c Var 'vertsum_00004_00001' order represents '0' with '-523'
523 -523 0
c Encoding variable: vertsum_00004_00002 with domain: bool (representing constraint )
c Var 'vertsum_00004_00002' direct represents '0' with '-524'
c Var 'vertsum_00004_00002' direct represents '1' with '524'
c Var 'vertsum_00004_00002' order represents '1' with '1'
c Var 'vertsum_00004_00002' order represents '0' with '-524'
524 -524 0
c Encoding variable: vertsum_00004_00003 with domain: bool (representing constraint )
c Var 'vertsum_00004_00003' direct represents '0' with '-525'
c Var 'vertsum_00004_00003' direct represents '1' with '525'
c Var 'vertsum_00004_00003' order represents '1' with '1'
c Var 'vertsum_00004_00003' order represents '0' with '-525'
525 -525 0
c Encoding variable: vertsum_00004_00004 with domain: bool (representing constraint )
c Var 'vertsum_00004_00004' direct represents '0' with '-526'
c Var 'vertsum_00004_00004' direct represents '1' with '526'
c Var 'vertsum_00004_00004' order represents '1' with '1'
c Var 'vertsum_00004_00004' order represents '0' with '-526'
526 -526 0
c Encoding variable: vertsum_00004_00005 with domain: bool (representing constraint )
c Var 'vertsum_00004_00005' direct represents '0' with '-527'
c Var 'vertsum_00004_00005' direct represents '1' with '527'
c Var 'vertsum_00004_00005' order represents '1' with '1'
c Var 'vertsum_00004_00005' order represents '0' with '-527'
527 -527 0
c Encoding variable: vertsum_00004_00006 with domain: bool (representing constraint )
c Var 'vertsum_00004_00006' direct represents '0' with '-528'
c Var 'vertsum_00004_00006' direct represents '1' with '528'
c Var 'vertsum_00004_00006' order represents '1' with '1'
c Var 'vertsum_00004_00006' order represents '0' with '-528'
528 -528 0
c Encoding variable: vertsum_00004_00007 with domain: bool (representing constraint )
c Var 'vertsum_00004_00007' direct represents '0' with '-529'
c Var 'vertsum_00004_00007' direct represents '1' with '529'
c Var 'vertsum_00004_00007' order represents '1' with '1'
c Var 'vertsum_00004_00007' order represents '0' with '-529'
529 -529 0
c Encoding variable: vertsum_00005_00000 with domain: bool (representing constraint )
c Var 'vertsum_00005_00000' direct represents '0' with '-530'
c Var 'vertsum_00005_00000' direct represents '1' with '530'
c Var 'vertsum_00005_00000' order represents '1' with '1'
c Var 'vertsum_00005_00000' order represents '0' with '-530'
530 -530 0
c Encoding variable: vertsum_00005_00001 with domain: bool (representing constraint )
c Var 'vertsum_00005_00001' direct represents '0' with '-531'
c Var 'vertsum_00005_00001' direct represents '1' with '531'
c Var 'vertsum_00005_00001' order represents '1' with '1'
c Var 'vertsum_00005_00001' order represents '0' with '-531'
531 -531 0
c Encoding variable: vertsum_00005_00002 with domain: bool (representing constraint )
c Var 'vertsum_00005_00002' direct represents '0' with '-532'
c Var 'vertsum_00005_00002' direct represents '1' with '532'
c Var 'vertsum_00005_00002' order represents '1' with '1'
c Var 'vertsum_00005_00002' order represents '0' with '-532'
532 -532 0
c Encoding variable: vertsum_00005_00003 with domain: bool (representing constraint )
c Var 'vertsum_00005_00003' direct represents '0' with '-533'
c Var 'vertsum_00005_00003' direct represents '1' with '533'
c Var 'vertsum_00005_00003' order represents '1' with '1'
c Var 'vertsum_00005_00003' order represents '0' with '-533'
533 -533 0
c Encoding variable: vertsum_00005_00004 with domain: bool (representing constraint )
c Var 'vertsum_00005_00004' direct represents '0' with '-534'
c Var 'vertsum_00005_00004' direct represents '1' with '534'
c Var 'vertsum_00005_00004' order represents '1' with '1'
c Var 'vertsum_00005_00004' order represents '0' with '-534'
534 -534 0
c Encoding variable: vertsum_00005_00005 with domain: bool (representing constraint )
c Var 'vertsum_00005_00005' direct represents '0' with '-535'
c Var 'vertsum_00005_00005' direct represents '1' with '535'
c Var 'vertsum_00005_00005' order represents '1' with '1'
c Var 'vertsum_00005_00005' order represents '0' with '-535'
535 -535 0
c Encoding variable: vertsum_00005_00006 with domain: bool (representing constraint )
c Var 'vertsum_00005_00006' direct represents '0' with '-536'
c Var 'vertsum_00005_00006' direct represents '1' with '536'
c Var 'vertsum_00005_00006' order represents '1' with '1'
c Var 'vertsum_00005_00006' order represents '0' with '-536'
536 -536 0
c Encoding variable: vertsum_00005_00007 with domain: bool (representing constraint )
c Var 'vertsum_00005_00007' direct represents '0' with '-537'
c Var 'vertsum_00005_00007' direct represents '1' with '537'
c Var 'vertsum_00005_00007' order represents '1' with '1'
c Var 'vertsum_00005_00007' order represents '0' with '-537'
537 -537 0
c Encoding variable: horzalldiff_00000_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00000' direct represents '0' with '-538'
c Var 'horzalldiff_00000_00000' direct represents '1' with '538'
c Var 'horzalldiff_00000_00000' order represents '1' with '1'
c Var 'horzalldiff_00000_00000' order represents '0' with '-538'
538 -538 0
c Encoding variable: horzalldiff_00000_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00001' direct represents '0' with '-539'
c Var 'horzalldiff_00000_00001' direct represents '1' with '539'
c Var 'horzalldiff_00000_00001' order represents '1' with '1'
c Var 'horzalldiff_00000_00001' order represents '0' with '-539'
539 -539 0
c Encoding variable: horzalldiff_00000_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00002' direct represents '0' with '-540'
c Var 'horzalldiff_00000_00002' direct represents '1' with '540'
c Var 'horzalldiff_00000_00002' order represents '1' with '1'
c Var 'horzalldiff_00000_00002' order represents '0' with '-540'
540 -540 0
c Encoding variable: horzalldiff_00000_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00003' direct represents '0' with '-541'
c Var 'horzalldiff_00000_00003' direct represents '1' with '541'
c Var 'horzalldiff_00000_00003' order represents '1' with '1'
c Var 'horzalldiff_00000_00003' order represents '0' with '-541'
541 -541 0
c Encoding variable: horzalldiff_00000_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00004' direct represents '0' with '-542'
c Var 'horzalldiff_00000_00004' direct represents '1' with '542'
c Var 'horzalldiff_00000_00004' order represents '1' with '1'
c Var 'horzalldiff_00000_00004' order represents '0' with '-542'
542 -542 0
c Encoding variable: horzalldiff_00000_00005 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00005' direct represents '0' with '-543'
c Var 'horzalldiff_00000_00005' direct represents '1' with '543'
c Var 'horzalldiff_00000_00005' order represents '1' with '1'
c Var 'horzalldiff_00000_00005' order represents '0' with '-543'
543 -543 0
c Encoding variable: horzalldiff_00000_00006 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00006' direct represents '0' with '-544'
c Var 'horzalldiff_00000_00006' direct represents '1' with '544'
c Var 'horzalldiff_00000_00006' order represents '1' with '1'
c Var 'horzalldiff_00000_00006' order represents '0' with '-544'
544 -544 0
c Encoding variable: horzalldiff_00000_00007 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00007' direct represents '0' with '-545'
c Var 'horzalldiff_00000_00007' direct represents '1' with '545'
c Var 'horzalldiff_00000_00007' order represents '1' with '1'
c Var 'horzalldiff_00000_00007' order represents '0' with '-545'
545 -545 0
c Encoding variable: horzalldiff_00001_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00000' direct represents '0' with '-546'
c Var 'horzalldiff_00001_00000' direct represents '1' with '546'
c Var 'horzalldiff_00001_00000' order represents '1' with '1'
c Var 'horzalldiff_00001_00000' order represents '0' with '-546'
c Encoding variable: horzalldiff_00001_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00001' direct represents '0' with '-547'
c Var 'horzalldiff_00001_00001' direct represents '1' with '547'
c Var 'horzalldiff_00001_00001' order represents '1' with '1'
c Var 'horzalldiff_00001_00001' order represents '0' with '-547'
547 -547 0
c Encoding variable: horzalldiff_00001_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00002' direct represents '0' with '-548'
c Var 'horzalldiff_00001_00002' direct represents '1' with '548'
c Var 'horzalldiff_00001_00002' order represents '1' with '1'
c Var 'horzalldiff_00001_00002' order represents '0' with '-548'
548 -548 0
c Encoding variable: horzalldiff_00001_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00003' direct represents '0' with '-549'
c Var 'horzalldiff_00001_00003' direct represents '1' with '549'
c Var 'horzalldiff_00001_00003' order represents '1' with '1'
c Var 'horzalldiff_00001_00003' order represents '0' with '-549'
549 -549 0
c Encoding variable: horzalldiff_00001_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00004' direct represents '0' with '-550'
c Var 'horzalldiff_00001_00004' direct represents '1' with '550'
c Var 'horzalldiff_00001_00004' order represents '1' with '1'
c Var 'horzalldiff_00001_00004' order represents '0' with '-550'
c Encoding variable: horzalldiff_00001_00005 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00005' direct represents '0' with '-551'
c Var 'horzalldiff_00001_00005' direct represents '1' with '551'
c Var 'horzalldiff_00001_00005' order represents '1' with '1'
c Var 'horzalldiff_00001_00005' order represents '0' with '-551'
551 -551 0
c Encoding variable: horzalldiff_00001_00006 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00006' direct represents '0' with '-552'
c Var 'horzalldiff_00001_00006' direct represents '1' with '552'
c Var 'horzalldiff_00001_00006' order represents '1' with '1'
c Var 'horzalldiff_00001_00006' order represents '0' with '-552'
552 -552 0
c Encoding variable: horzalldiff_00001_00007 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00007' direct represents '0' with '-553'
c Var 'horzalldiff_00001_00007' direct represents '1' with '553'
c Var 'horzalldiff_00001_00007' order represents '1' with '1'
c Var 'horzalldiff_00001_00007' order represents '0' with '-553'
553 -553 0
c Encoding variable: horzalldiff_00002_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00000' direct represents '0' with '-554'
c Var 'horzalldiff_00002_00000' direct represents '1' with '554'
c Var 'horzalldiff_00002_00000' order represents '1' with '1'
c Var 'horzalldiff_00002_00000' order represents '0' with '-554'
c Encoding variable: horzalldiff_00002_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00001' direct represents '0' with '-555'
c Var 'horzalldiff_00002_00001' direct represents '1' with '555'
c Var 'horzalldiff_00002_00001' order represents '1' with '1'
c Var 'horzalldiff_00002_00001' order represents '0' with '-555'
555 -555 0
c Encoding variable: horzalldiff_00002_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00002' direct represents '0' with '-556'
c Var 'horzalldiff_00002_00002' direct represents '1' with '556'
c Var 'horzalldiff_00002_00002' order represents '1' with '1'
c Var 'horzalldiff_00002_00002' order represents '0' with '-556'
556 -556 0
c Encoding variable: horzalldiff_00002_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00003' direct represents '0' with '-557'
c Var 'horzalldiff_00002_00003' direct represents '1' with '557'
c Var 'horzalldiff_00002_00003' order represents '1' with '1'
c Var 'horzalldiff_00002_00003' order represents '0' with '-557'
557 -557 0
c Encoding variable: horzalldiff_00002_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00004' direct represents '0' with '-558'
c Var 'horzalldiff_00002_00004' direct represents '1' with '558'
c Var 'horzalldiff_00002_00004' order represents '1' with '1'
c Var 'horzalldiff_00002_00004' order represents '0' with '-558'
c Encoding variable: horzalldiff_00002_00005 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00005' direct represents '0' with '-559'
c Var 'horzalldiff_00002_00005' direct represents '1' with '559'
c Var 'horzalldiff_00002_00005' order represents '1' with '1'
c Var 'horzalldiff_00002_00005' order represents '0' with '-559'
559 -559 0
c Encoding variable: horzalldiff_00002_00006 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00006' direct represents '0' with '-560'
c Var 'horzalldiff_00002_00006' direct represents '1' with '560'
c Var 'horzalldiff_00002_00006' order represents '1' with '1'
c Var 'horzalldiff_00002_00006' order represents '0' with '-560'
560 -560 0
c Encoding variable: horzalldiff_00002_00007 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00007' direct represents '0' with '-561'
c Var 'horzalldiff_00002_00007' direct represents '1' with '561'
c Var 'horzalldiff_00002_00007' order represents '1' with '1'
c Var 'horzalldiff_00002_00007' order represents '0' with '-561'
561 -561 0
c Encoding variable: horzalldiff_00003_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00000' direct represents '0' with '-562'
c Var 'horzalldiff_00003_00000' direct represents '1' with '562'
c Var 'horzalldiff_00003_00000' order represents '1' with '1'
c Var 'horzalldiff_00003_00000' order represents '0' with '-562'
562 -562 0
c Encoding variable: horzalldiff_00003_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00001' direct represents '0' with '-563'
c Var 'horzalldiff_00003_00001' direct represents '1' with '563'
c Var 'horzalldiff_00003_00001' order represents '1' with '1'
c Var 'horzalldiff_00003_00001' order represents '0' with '-563'
c Encoding variable: horzalldiff_00003_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00002' direct represents '0' with '-564'
c Var 'horzalldiff_00003_00002' direct represents '1' with '564'
c Var 'horzalldiff_00003_00002' order represents '1' with '1'
c Var 'horzalldiff_00003_00002' order represents '0' with '-564'
564 -564 0
c Encoding variable: horzalldiff_00003_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00003' direct represents '0' with '-565'
c Var 'horzalldiff_00003_00003' direct represents '1' with '565'
c Var 'horzalldiff_00003_00003' order represents '1' with '1'
c Var 'horzalldiff_00003_00003' order represents '0' with '-565'
565 -565 0
c Encoding variable: horzalldiff_00003_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00004' direct represents '0' with '-566'
c Var 'horzalldiff_00003_00004' direct represents '1' with '566'
c Var 'horzalldiff_00003_00004' order represents '1' with '1'
c Var 'horzalldiff_00003_00004' order represents '0' with '-566'
566 -566 0
c Encoding variable: horzalldiff_00003_00005 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00005' direct represents '0' with '-567'
c Var 'horzalldiff_00003_00005' direct represents '1' with '567'
c Var 'horzalldiff_00003_00005' order represents '1' with '1'
c Var 'horzalldiff_00003_00005' order represents '0' with '-567'
c Encoding variable: horzalldiff_00003_00006 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00006' direct represents '0' with '-568'
c Var 'horzalldiff_00003_00006' direct represents '1' with '568'
c Var 'horzalldiff_00003_00006' order represents '1' with '1'
c Var 'horzalldiff_00003_00006' order represents '0' with '-568'
568 -568 0
c Encoding variable: horzalldiff_00003_00007 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00007' direct represents '0' with '-569'
c Var 'horzalldiff_00003_00007' direct represents '1' with '569'
c Var 'horzalldiff_00003_00007' order represents '1' with '1'
c Var 'horzalldiff_00003_00007' order represents '0' with '-569'
569 -569 0
c Encoding variable: horzalldiff_00004_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00000' direct represents '0' with '-570'
c Var 'horzalldiff_00004_00000' direct represents '1' with '570'
c Var 'horzalldiff_00004_00000' order represents '1' with '1'
c Var 'horzalldiff_00004_00000' order represents '0' with '-570'
c Encoding variable: horzalldiff_00004_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00001' direct represents '0' with '-571'
c Var 'horzalldiff_00004_00001' direct represents '1' with '571'
c Var 'horzalldiff_00004_00001' order represents '1' with '1'
c Var 'horzalldiff_00004_00001' order represents '0' with '-571'
571 -571 0
c Encoding variable: horzalldiff_00004_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00002' direct represents '0' with '-572'
c Var 'horzalldiff_00004_00002' direct represents '1' with '572'
c Var 'horzalldiff_00004_00002' order represents '1' with '1'
c Var 'horzalldiff_00004_00002' order represents '0' with '-572'
572 -572 0
c Encoding variable: horzalldiff_00004_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00003' direct represents '0' with '-573'
c Var 'horzalldiff_00004_00003' direct represents '1' with '573'
c Var 'horzalldiff_00004_00003' order represents '1' with '1'
c Var 'horzalldiff_00004_00003' order represents '0' with '-573'
c Encoding variable: horzalldiff_00004_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00004' direct represents '0' with '-574'
c Var 'horzalldiff_00004_00004' direct represents '1' with '574'
c Var 'horzalldiff_00004_00004' order represents '1' with '1'
c Var 'horzalldiff_00004_00004' order represents '0' with '-574'
574 -574 0
c Encoding variable: horzalldiff_00004_00005 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00005' direct represents '0' with '-575'
c Var 'horzalldiff_00004_00005' direct represents '1' with '575'
c Var 'horzalldiff_00004_00005' order represents '1' with '1'
c Var 'horzalldiff_00004_00005' order represents '0' with '-575'
575 -575 0
c Encoding variable: horzalldiff_00004_00006 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00006' direct represents '0' with '-576'
c Var 'horzalldiff_00004_00006' direct represents '1' with '576'
c Var 'horzalldiff_00004_00006' order represents '1' with '1'
c Var 'horzalldiff_00004_00006' order represents '0' with '-576'
576 -576 0
c Encoding variable: horzalldiff_00004_00007 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00007' direct represents '0' with '-577'
c Var 'horzalldiff_00004_00007' direct represents '1' with '577'
c Var 'horzalldiff_00004_00007' order represents '1' with '1'
c Var 'horzalldiff_00004_00007' order represents '0' with '-577'
577 -577 0
c Encoding variable: horzalldiff_00005_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00000' direct represents '0' with '-578'
c Var 'horzalldiff_00005_00000' direct represents '1' with '578'
c Var 'horzalldiff_00005_00000' order represents '1' with '1'
c Var 'horzalldiff_00005_00000' order represents '0' with '-578'
c Encoding variable: horzalldiff_00005_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00001' direct represents '0' with '-579'
c Var 'horzalldiff_00005_00001' direct represents '1' with '579'
c Var 'horzalldiff_00005_00001' order represents '1' with '1'
c Var 'horzalldiff_00005_00001' order represents '0' with '-579'
579 -579 0
c Encoding variable: horzalldiff_00005_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00002' direct represents '0' with '-580'
c Var 'horzalldiff_00005_00002' direct represents '1' with '580'
c Var 'horzalldiff_00005_00002' order represents '1' with '1'
c Var 'horzalldiff_00005_00002' order represents '0' with '-580'
580 -580 0
c Encoding variable: horzalldiff_00005_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00003' direct represents '0' with '-581'
c Var 'horzalldiff_00005_00003' direct represents '1' with '581'
c Var 'horzalldiff_00005_00003' order represents '1' with '1'
c Var 'horzalldiff_00005_00003' order represents '0' with '-581'
c Encoding variable: horzalldiff_00005_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00004' direct represents '0' with '-582'
c Var 'horzalldiff_00005_00004' direct represents '1' with '582'
c Var 'horzalldiff_00005_00004' order represents '1' with '1'
c Var 'horzalldiff_00005_00004' order represents '0' with '-582'
582 -582 0
c Encoding variable: horzalldiff_00005_00005 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00005' direct represents '0' with '-583'
c Var 'horzalldiff_00005_00005' direct represents '1' with '583'
c Var 'horzalldiff_00005_00005' order represents '1' with '1'
c Var 'horzalldiff_00005_00005' order represents '0' with '-583'
583 -583 0
c Encoding variable: horzalldiff_00005_00006 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00006' direct represents '0' with '-584'
c Var 'horzalldiff_00005_00006' direct represents '1' with '584'
c Var 'horzalldiff_00005_00006' order represents '1' with '1'
c Var 'horzalldiff_00005_00006' order represents '0' with '-584'
584 -584 0
c Encoding variable: horzalldiff_00005_00007 with domain: bool (representing constraint )
c Var 'horzalldiff_00005_00007' direct represents '0' with '-585'
c Var 'horzalldiff_00005_00007' direct represents '1' with '585'
c Var 'horzalldiff_00005_00007' order represents '1' with '1'
c Var 'horzalldiff_00005_00007' order represents '0' with '-585'
585 -585 0
c Encoding variable: horzsum_00000_00000 with domain: bool (representing constraint )
c Var 'horzsum_00000_00000' direct represents '0' with '-586'
c Var 'horzsum_00000_00000' direct represents '1' with '586'
c Var 'horzsum_00000_00000' order represents '1' with '1'
c Var 'horzsum_00000_00000' order represents '0' with '-586'
586 -586 0
c Encoding variable: horzsum_00000_00001 with domain: bool (representing constraint )
c Var 'horzsum_00000_00001' direct represents '0' with '-587'
c Var 'horzsum_00000_00001' direct represents '1' with '587'
c Var 'horzsum_00000_00001' order represents '1' with '1'
c Var 'horzsum_00000_00001' order represents '0' with '-587'
587 -587 0
c Encoding variable: horzsum_00000_00002 with domain: bool (representing constraint )
c Var 'horzsum_00000_00002' direct represents '0' with '-588'
c Var 'horzsum_00000_00002' direct represents '1' with '588'
c Var 'horzsum_00000_00002' order represents '1' with '1'
c Var 'horzsum_00000_00002' order represents '0' with '-588'
588 -588 0
c Encoding variable: horzsum_00000_00003 with domain: bool (representing constraint )
c Var 'horzsum_00000_00003' direct represents '0' with '-589'
c Var 'horzsum_00000_00003' direct represents '1' with '589'
c Var 'horzsum_00000_00003' order represents '1' with '1'
c Var 'horzsum_00000_00003' order represents '0' with '-589'
589 -589 0
c Encoding variable: horzsum_00000_00004 with domain: bool (representing constraint )
c Var 'horzsum_00000_00004' direct represents '0' with '-590'
c Var 'horzsum_00000_00004' direct represents '1' with '590'
c Var 'horzsum_00000_00004' order represents '1' with '1'
c Var 'horzsum_00000_00004' order represents '0' with '-590'
590 -590 0
c Encoding variable: horzsum_00000_00005 with domain: bool (representing constraint )
c Var 'horzsum_00000_00005' direct represents '0' with '-591'
c Var 'horzsum_00000_00005' direct represents '1' with '591'
c Var 'horzsum_00000_00005' order represents '1' with '1'
c Var 'horzsum_00000_00005' order represents '0' with '-591'
591 -591 0
c Encoding variable: horzsum_00000_00006 with domain: bool (representing constraint )
c Var 'horzsum_00000_00006' direct represents '0' with '-592'
c Var 'horzsum_00000_00006' direct represents '1' with '592'
c Var 'horzsum_00000_00006' order represents '1' with '1'
c Var 'horzsum_00000_00006' order represents '0' with '-592'
592 -592 0
c Encoding variable: horzsum_00000_00007 with domain: bool (representing constraint )
c Var 'horzsum_00000_00007' direct represents '0' with '-593'
c Var 'horzsum_00000_00007' direct represents '1' with '593'
c Var 'horzsum_00000_00007' order represents '1' with '1'
c Var 'horzsum_00000_00007' order represents '0' with '-593'
593 -593 0
c Encoding variable: horzsum_00001_00000 with domain: bool (representing constraint )
c Var 'horzsum_00001_00000' direct represents '0' with '-594'
c Var 'horzsum_00001_00000' direct represents '1' with '594'
c Var 'horzsum_00001_00000' order represents '1' with '1'
c Var 'horzsum_00001_00000' order represents '0' with '-594'
c Encoding variable: horzsum_00001_00001 with domain: bool (representing constraint )
c Var 'horzsum_00001_00001' direct represents '0' with '-595'
c Var 'horzsum_00001_00001' direct represents '1' with '595'
c Var 'horzsum_00001_00001' order represents '1' with '1'
c Var 'horzsum_00001_00001' order represents '0' with '-595'
595 -595 0
c Encoding variable: horzsum_00001_00002 with domain: bool (representing constraint )
c Var 'horzsum_00001_00002' direct represents '0' with '-596'
c Var 'horzsum_00001_00002' direct represents '1' with '596'
c Var 'horzsum_00001_00002' order represents '1' with '1'
c Var 'horzsum_00001_00002' order represents '0' with '-596'
596 -596 0
c Encoding variable: horzsum_00001_00003 with domain: bool (representing constraint )
c Var 'horzsum_00001_00003' direct represents '0' with '-597'
c Var 'horzsum_00001_00003' direct represents '1' with '597'
c Var 'horzsum_00001_00003' order represents '1' with '1'
c Var 'horzsum_00001_00003' order represents '0' with '-597'
597 -597 0
c Encoding variable: horzsum_00001_00004 with domain: bool (representing constraint )
c Var 'horzsum_00001_00004' direct represents '0' with '-598'
c Var 'horzsum_00001_00004' direct represents '1' with '598'
c Var 'horzsum_00001_00004' order represents '1' with '1'
c Var 'horzsum_00001_00004' order represents '0' with '-598'
c Encoding variable: horzsum_00001_00005 with domain: bool (representing constraint )
c Var 'horzsum_00001_00005' direct represents '0' with '-599'
c Var 'horzsum_00001_00005' direct represents '1' with '599'
c Var 'horzsum_00001_00005' order represents '1' with '1'
c Var 'horzsum_00001_00005' order represents '0' with '-599'
599 -599 0
c Encoding variable: horzsum_00001_00006 with domain: bool (representing constraint )
c Var 'horzsum_00001_00006' direct represents '0' with '-600'
c Var 'horzsum_00001_00006' direct represents '1' with '600'
c Var 'horzsum_00001_00006' order represents '1' with '1'
c Var 'horzsum_00001_00006' order represents '0' with '-600'
600 -600 0
c Encoding variable: horzsum_00001_00007 with domain: bool (representing constraint )
c Var 'horzsum_00001_00007' direct represents '0' with '-601'
c Var 'horzsum_00001_00007' direct represents '1' with '601'
c Var 'horzsum_00001_00007' order represents '1' with '1'
c Var 'horzsum_00001_00007' order represents '0' with '-601'
601 -601 0
c Encoding variable: horzsum_00002_00000 with domain: bool (representing constraint )
c Var 'horzsum_00002_00000' direct represents '0' with '-602'
c Var 'horzsum_00002_00000' direct represents '1' with '602'
c Var 'horzsum_00002_00000' order represents '1' with '1'
c Var 'horzsum_00002_00000' order represents '0' with '-602'
c Encoding variable: horzsum_00002_00001 with domain: bool (representing constraint )
c Var 'horzsum_00002_00001' direct represents '0' with '-603'
c Var 'horzsum_00002_00001' direct represents '1' with '603'
c Var 'horzsum_00002_00001' order represents '1' with '1'
c Var 'horzsum_00002_00001' order represents '0' with '-603'
603 -603 0
c Encoding variable: horzsum_00002_00002 with domain: bool (representing constraint )
c Var 'horzsum_00002_00002' direct represents '0' with '-604'
c Var 'horzsum_00002_00002' direct represents '1' with '604'
c Var 'horzsum_00002_00002' order represents '1' with '1'
c Var 'horzsum_00002_00002' order represents '0' with '-604'
604 -604 0
c Encoding variable: horzsum_00002_00003 with domain: bool (representing constraint )
c Var 'horzsum_00002_00003' direct represents '0' with '-605'
c Var 'horzsum_00002_00003' direct represents '1' with '605'
c Var 'horzsum_00002_00003' order represents '1' with '1'
c Var 'horzsum_00002_00003' order represents '0' with '-605'
605 -605 0
c Encoding variable: horzsum_00002_00004 with domain: bool (representing constraint )
c Var 'horzsum_00002_00004' direct represents '0' with '-606'
c Var 'horzsum_00002_00004' direct represents '1' with '606'
c Var 'horzsum_00002_00004' order represents '1' with '1'
c Var 'horzsum_00002_00004' order represents '0' with '-606'
c Encoding variable: horzsum_00002_00005 with domain: bool (representing constraint )
c Var 'horzsum_00002_00005' direct represents '0' with '-607'
c Var 'horzsum_00002_00005' direct represents '1' with '607'
c Var 'horzsum_00002_00005' order represents '1' with '1'
c Var 'horzsum_00002_00005' order represents '0' with '-607'
607 -607 0
c Encoding variable: horzsum_00002_00006 with domain: bool (representing constraint )
c Var 'horzsum_00002_00006' direct represents '0' with '-608'
c Var 'horzsum_00002_00006' direct represents '1' with '608'
c Var 'horzsum_00002_00006' order represents '1' with '1'
c Var 'horzsum_00002_00006' order represents '0' with '-608'
608 -608 0
c Encoding variable: horzsum_00002_00007 with domain: bool (representing constraint )
c Var 'horzsum_00002_00007' direct represents '0' with '-609'
c Var 'horzsum_00002_00007' direct represents '1' with '609'
c Var 'horzsum_00002_00007' order represents '1' with '1'
c Var 'horzsum_00002_00007' order represents '0' with '-609'
609 -609 0
c Encoding variable: horzsum_00003_00000 with domain: bool (representing constraint )
c Var 'horzsum_00003_00000' direct represents '0' with '-610'
c Var 'horzsum_00003_00000' direct represents '1' with '610'
c Var 'horzsum_00003_00000' order represents '1' with '1'
c Var 'horzsum_00003_00000' order represents '0' with '-610'
610 -610 0
c Encoding variable: horzsum_00003_00001 with domain: bool (representing constraint )
c Var 'horzsum_00003_00001' direct represents '0' with '-611'
c Var 'horzsum_00003_00001' direct represents '1' with '611'
c Var 'horzsum_00003_00001' order represents '1' with '1'
c Var 'horzsum_00003_00001' order represents '0' with '-611'
c Encoding variable: horzsum_00003_00002 with domain: bool (representing constraint )
c Var 'horzsum_00003_00002' direct represents '0' with '-612'
c Var 'horzsum_00003_00002' direct represents '1' with '612'
c Var 'horzsum_00003_00002' order represents '1' with '1'
c Var 'horzsum_00003_00002' order represents '0' with '-612'
612 -612 0
c Encoding variable: horzsum_00003_00003 with domain: bool (representing constraint )
c Var 'horzsum_00003_00003' direct represents '0' with '-613'
c Var 'horzsum_00003_00003' direct represents '1' with '613'
c Var 'horzsum_00003_00003' order represents '1' with '1'
c Var 'horzsum_00003_00003' order represents '0' with '-613'
613 -613 0
c Encoding variable: horzsum_00003_00004 with domain: bool (representing constraint )
c Var 'horzsum_00003_00004' direct represents '0' with '-614'
c Var 'horzsum_00003_00004' direct represents '1' with '614'
c Var 'horzsum_00003_00004' order represents '1' with '1'
c Var 'horzsum_00003_00004' order represents '0' with '-614'
614 -614 0
c Encoding variable: horzsum_00003_00005 with domain: bool (representing constraint )
c Var 'horzsum_00003_00005' direct represents '0' with '-615'
c Var 'horzsum_00003_00005' direct represents '1' with '615'
c Var 'horzsum_00003_00005' order represents '1' with '1'
c Var 'horzsum_00003_00005' order represents '0' with '-615'
c Encoding variable: horzsum_00003_00006 with domain: bool (representing constraint )
c Var 'horzsum_00003_00006' direct represents '0' with '-616'
c Var 'horzsum_00003_00006' direct represents '1' with '616'
c Var 'horzsum_00003_00006' order represents '1' with '1'
c Var 'horzsum_00003_00006' order represents '0' with '-616'
616 -616 0
c Encoding variable: horzsum_00003_00007 with domain: bool (representing constraint )
c Var 'horzsum_00003_00007' direct represents '0' with '-617'
c Var 'horzsum_00003_00007' direct represents '1' with '617'
c Var 'horzsum_00003_00007' order represents '1' with '1'
c Var 'horzsum_00003_00007' order represents '0' with '-617'
617 -617 0
c Encoding variable: horzsum_00004_00000 with domain: bool (representing constraint )
c Var 'horzsum_00004_00000' direct represents '0' with '-618'
c Var 'horzsum_00004_00000' direct represents '1' with '618'
c Var 'horzsum_00004_00000' order represents '1' with '1'
c Var 'horzsum_00004_00000' order represents '0' with '-618'
c Encoding variable: horzsum_00004_00001 with domain: bool (representing constraint )
c Var 'horzsum_00004_00001' direct represents '0' with '-619'
c Var 'horzsum_00004_00001' direct represents '1' with '619'
c Var 'horzsum_00004_00001' order represents '1' with '1'
c Var 'horzsum_00004_00001' order represents '0' with '-619'
619 -619 0
c Encoding variable: horzsum_00004_00002 with domain: bool (representing constraint )
c Var 'horzsum_00004_00002' direct represents '0' with '-620'
c Var 'horzsum_00004_00002' direct represents '1' with '620'
c Var 'horzsum_00004_00002' order represents '1' with '1'
c Var 'horzsum_00004_00002' order represents '0' with '-620'
620 -620 0
c Encoding variable: horzsum_00004_00003 with domain: bool (representing constraint )
c Var 'horzsum_00004_00003' direct represents '0' with '-621'
c Var 'horzsum_00004_00003' direct represents '1' with '621'
c Var 'horzsum_00004_00003' order represents '1' with '1'
c Var 'horzsum_00004_00003' order represents '0' with '-621'
c Encoding variable: horzsum_00004_00004 with domain: bool (representing constraint )
c Var 'horzsum_00004_00004' direct represents '0' with '-622'
c Var 'horzsum_00004_00004' direct represents '1' with '622'
c Var 'horzsum_00004_00004' order represents '1' with '1'
c Var 'horzsum_00004_00004' order represents '0' with '-622'
622 -622 0
c Encoding variable: horzsum_00004_00005 with domain: bool (representing constraint )
c Var 'horzsum_00004_00005' direct represents '0' with '-623'
c Var 'horzsum_00004_00005' direct represents '1' with '623'
c Var 'horzsum_00004_00005' order represents '1' with '1'
c Var 'horzsum_00004_00005' order represents '0' with '-623'
623 -623 0
c Encoding variable: horzsum_00004_00006 with domain: bool (representing constraint )
c Var 'horzsum_00004_00006' direct represents '0' with '-624'
c Var 'horzsum_00004_00006' direct represents '1' with '624'
c Var 'horzsum_00004_00006' order represents '1' with '1'
c Var 'horzsum_00004_00006' order represents '0' with '-624'
624 -624 0
c Encoding variable: horzsum_00004_00007 with domain: bool (representing constraint )
c Var 'horzsum_00004_00007' direct represents '0' with '-625'
c Var 'horzsum_00004_00007' direct represents '1' with '625'
c Var 'horzsum_00004_00007' order represents '1' with '1'
c Var 'horzsum_00004_00007' order represents '0' with '-625'
625 -625 0
c Encoding variable: horzsum_00005_00000 with domain: bool (representing constraint )
c Var 'horzsum_00005_00000' direct represents '0' with '-626'
c Var 'horzsum_00005_00000' direct represents '1' with '626'
c Var 'horzsum_00005_00000' order represents '1' with '1'
c Var 'horzsum_00005_00000' order represents '0' with '-626'
c Encoding variable: horzsum_00005_00001 with domain: bool (representing constraint )
c Var 'horzsum_00005_00001' direct represents '0' with '-627'
c Var 'horzsum_00005_00001' direct represents '1' with '627'
c Var 'horzsum_00005_00001' order represents '1' with '1'
c Var 'horzsum_00005_00001' order represents '0' with '-627'
627 -627 0
c Encoding variable: horzsum_00005_00002 with domain: bool (representing constraint )
c Var 'horzsum_00005_00002' direct represents '0' with '-628'
c Var 'horzsum_00005_00002' direct represents '1' with '628'
c Var 'horzsum_00005_00002' order represents '1' with '1'
c Var 'horzsum_00005_00002' order represents '0' with '-628'
628 -628 0
c Encoding variable: horzsum_00005_00003 with domain: bool (representing constraint )
c Var 'horzsum_00005_00003' direct represents '0' with '-629'
c Var 'horzsum_00005_00003' direct represents '1' with '629'
c Var 'horzsum_00005_00003' order represents '1' with '1'
c Var 'horzsum_00005_00003' order represents '0' with '-629'
c Encoding variable: horzsum_00005_00004 with domain: bool (representing constraint )
c Var 'horzsum_00005_00004' direct represents '0' with '-630'
c Var 'horzsum_00005_00004' direct represents '1' with '630'
c Var 'horzsum_00005_00004' order represents '1' with '1'
c Var 'horzsum_00005_00004' order represents '0' with '-630'
630 -630 0
c Encoding variable: horzsum_00005_00005 with domain: bool (representing constraint )
c Var 'horzsum_00005_00005' direct represents '0' with '-631'
c Var 'horzsum_00005_00005' direct represents '1' with '631'
c Var 'horzsum_00005_00005' order represents '1' with '1'
c Var 'horzsum_00005_00005' order represents '0' with '-631'
631 -631 0
c Encoding variable: horzsum_00005_00006 with domain: bool (representing constraint )
c Var 'horzsum_00005_00006' direct represents '0' with '-632'
c Var 'horzsum_00005_00006' direct represents '1' with '632'
c Var 'horzsum_00005_00006' order represents '1' with '1'
c Var 'horzsum_00005_00006' order represents '0' with '-632'
632 -632 0
c Encoding variable: horzsum_00005_00007 with domain: bool (representing constraint )
c Var 'horzsum_00005_00007' direct represents '0' with '-633'
c Var 'horzsum_00005_00007' direct represents '1' with '633'
c Var 'horzsum_00005_00007' order represents '1' with '1'
c Var 'horzsum_00005_00007' order represents '0' with '-633'
633 -633 0
c Encoding variable: aux0 with domain: bool (representing constraint (grid_00001_00001 != grid_00002_00001))
c Var 'aux0' direct represents '0' with '-634'
c Var 'aux0' direct represents '1' with '634'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-634'
c Encoding variable: aux1 with domain: bool (representing constraint (grid_00001_00005 != grid_00002_00005))
c Var 'aux1' direct represents '0' with '-635'
c Var 'aux1' direct represents '1' with '635'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-635'
c Encoding variable: aux2 with domain: bool (representing constraint (grid_00004_00001 != grid_00005_00001))
c Var 'aux2' direct represents '0' with '-636'
c Var 'aux2' direct represents '1' with '636'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-636'
c Encoding variable: aux3 with domain: bool (representing constraint (grid_00004_00005 != grid_00005_00005))
c Var 'aux3' direct represents '0' with '-637'
c Var 'aux3' direct represents '1' with '637'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-637'
c Encoding variable: aux4 with domain: bool (representing constraint ((grid_00003_00007 + grid_00004_00007 + grid_00005_00007 + grid_00002_00007)=tv=21))
c Var 'aux4' direct represents '0' with '-638'
c Var 'aux4' direct represents '1' with '638'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-638'
c Encoding variable: aux5 with domain: bool (representing constraint ((grid_00003_00004 + grid_00004_00004 + grid_00005_00004)=tv=22))
c Var 'aux5' direct represents '0' with '-639'
c Var 'aux5' direct represents '1' with '639'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-639'
c Encoding variable: aux6 with domain: bool (representing constraint ((grid_00001_00001 + grid_00002_00001)=tv=6))
c Var 'aux6' direct represents '0' with '-640'
c Var 'aux6' direct represents '1' with '640'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-640'
c Encoding variable: aux7 with domain: bool (representing constraint ((grid_00003_00002 + grid_00004_00002 + grid_00005_00002 + grid_00001_00002 + grid_00002_00002)=tv=33))
c Var 'aux7' direct represents '0' with '-641'
c Var 'aux7' direct represents '1' with '641'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-641'
c Encoding variable: aux8 with domain: bool (representing constraint ((grid_00003_00003 + grid_00001_00003 + grid_00002_00003)=tv=11))
c Var 'aux8' direct represents '0' with '-642'
c Var 'aux8' direct represents '1' with '642'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-642'
c Encoding variable: aux9 with domain: bool (representing constraint ((grid_00001_00005 + grid_00002_00005)=tv=12))
c Var 'aux9' direct represents '0' with '-643'
c Var 'aux9' direct represents '1' with '643'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-643'
c Encoding variable: aux10 with domain: bool (representing constraint ((grid_00003_00006 + grid_00004_00006 + grid_00005_00006 + grid_00001_00006 + grid_00002_00006)=tv=16))
c Var 'aux10' direct represents '0' with '-644'
c Var 'aux10' direct represents '1' with '644'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-644'
c Encoding variable: aux11 with domain: bool (representing constraint ((grid_00004_00001 + grid_00005_00001)=tv=7))
c Var 'aux11' direct represents '0' with '-645'
c Var 'aux11' direct represents '1' with '645'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-645'
c Encoding variable: aux12 with domain: bool (representing constraint ((grid_00004_00005 + grid_00005_00005)=tv=13))
c Var 'aux12' direct represents '0' with '-646'
c Var 'aux12' direct represents '1' with '646'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-646'
c Encoding variable: aux13 with domain: bool (representing constraint (grid_00001_00005 != grid_00001_00006))
c Var 'aux13' direct represents '0' with '-647'
c Var 'aux13' direct represents '1' with '647'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-647'
c Encoding variable: aux14 with domain: bool (representing constraint (grid_00003_00006 != grid_00003_00007))
c Var 'aux14' direct represents '0' with '-648'
c Var 'aux14' direct represents '1' with '648'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-648'
c Encoding variable: aux15 with domain: bool (representing constraint (grid_00004_00001 != grid_00004_00002))
c Var 'aux15' direct represents '0' with '-649'
c Var 'aux15' direct represents '1' with '649'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-649'
c Encoding variable: aux16 with domain: bool (representing constraint (grid_00005_00001 != grid_00005_00002))
c Var 'aux16' direct represents '0' with '-650'
c Var 'aux16' direct represents '1' with '650'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-650'
c Encoding variable: aux17 with domain: bool (representing constraint ((grid_00001_00001 + grid_00001_00002 + grid_00001_00003)=tv=22))
c Var 'aux17' direct represents '0' with '-651'
c Var 'aux17' direct represents '1' with '651'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-651'
c Encoding variable: aux18 with domain: bool (representing constraint ((grid_00001_00005 + grid_00001_00006)=tv=13))
c Var 'aux18' direct represents '0' with '-652'
c Var 'aux18' direct represents '1' with '652'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-652'
c Encoding variable: aux19 with domain: bool (representing constraint ((grid_00002_00001 + grid_00002_00002 + grid_00002_00003)=tv=10))
c Var 'aux19' direct represents '0' with '-653'
c Var 'aux19' direct represents '1' with '653'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-653'
c Encoding variable: aux20 with domain: bool (representing constraint ((grid_00002_00005 + grid_00002_00006 + grid_00002_00007)=tv=8))
c Var 'aux20' direct represents '0' with '-654'
c Var 'aux20' direct represents '1' with '654'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-654'
c Encoding variable: aux21 with domain: bool (representing constraint ((grid_00003_00002 + grid_00003_00003 + grid_00003_00004)=tv=13))
c Var 'aux21' direct represents '0' with '-655'
c Var 'aux21' direct represents '1' with '655'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-655'
c Encoding variable: aux22 with domain: bool (representing constraint ((grid_00003_00006 + grid_00003_00007)=tv=15))
c Var 'aux22' direct represents '0' with '-656'
c Var 'aux22' direct represents '1' with '656'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-656'
c Encoding variable: aux23 with domain: bool (representing constraint ((grid_00004_00001 + grid_00004_00002)=tv=9))
c Var 'aux23' direct represents '0' with '-657'
c Var 'aux23' direct represents '1' with '657'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-657'
c Encoding variable: aux24 with domain: bool (representing constraint ((grid_00004_00004 + grid_00004_00005 + grid_00004_00006 + grid_00004_00007)=tv=12))
c Var 'aux24' direct represents '0' with '-658'
c Var 'aux24' direct represents '1' with '658'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-658'
c Encoding variable: aux25 with domain: bool (representing constraint ((grid_00005_00001 + grid_00005_00002)=tv=12))
c Var 'aux25' direct represents '0' with '-659'
c Var 'aux25' direct represents '1' with '659'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-659'
c Encoding variable: aux26 with domain: bool (representing constraint ((grid_00005_00004 + grid_00005_00005 + grid_00005_00006 + grid_00005_00007)=tv=27))
c Var 'aux26' direct represents '0' with '-660'
c Var 'aux26' direct represents '1' with '660'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-660'
c Encoding variable: aux27 with domain: bool (representing constraint (((grid_00003_00007=1) + (grid_00004_00007=1) + (grid_00002_00007=1) + (grid_00005_00007=1))<=1))
c Var 'aux27' direct represents '0' with '-661'
c Var 'aux27' direct represents '1' with '661'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-661'
c Encoding variable: aux28 with domain: bool (representing constraint (((grid_00003_00007=2) + (grid_00004_00007=2) + (grid_00002_00007=2) + (grid_00005_00007=2))<=1))
c Var 'aux28' direct represents '0' with '-662'
c Var 'aux28' direct represents '1' with '662'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-662'
c Encoding variable: aux29 with domain: bool (representing constraint (((grid_00003_00007=3) + (grid_00004_00007=3) + (grid_00002_00007=3) + (grid_00005_00007=3))<=1))
c Var 'aux29' direct represents '0' with '-663'
c Var 'aux29' direct represents '1' with '663'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-663'
c Encoding variable: aux30 with domain: bool (representing constraint (((grid_00003_00007=4) + (grid_00004_00007=4) + (grid_00002_00007=4) + (grid_00005_00007=4))<=1))
c Var 'aux30' direct represents '0' with '-664'
c Var 'aux30' direct represents '1' with '664'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-664'
c Encoding variable: aux31 with domain: bool (representing constraint (((grid_00003_00007=5) + (grid_00004_00007=5) + (grid_00002_00007=5) + (grid_00005_00007=5))<=1))
c Var 'aux31' direct represents '0' with '-665'
c Var 'aux31' direct represents '1' with '665'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-665'
c Encoding variable: aux32 with domain: bool (representing constraint (((grid_00003_00007=6) + (grid_00004_00007=6) + (grid_00002_00007=6) + (grid_00005_00007=6))<=1))
c Var 'aux32' direct represents '0' with '-666'
c Var 'aux32' direct represents '1' with '666'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-666'
c Encoding variable: aux33 with domain: bool (representing constraint (((grid_00003_00007=7) + (grid_00004_00007=7) + (grid_00002_00007=7) + (grid_00005_00007=7))<=1))
c Var 'aux33' direct represents '0' with '-667'
c Var 'aux33' direct represents '1' with '667'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-667'
c Encoding variable: aux34 with domain: bool (representing constraint (((grid_00003_00007=8) + (grid_00004_00007=8) + (grid_00002_00007=8) + (grid_00005_00007=8))<=1))
c Var 'aux34' direct represents '0' with '-668'
c Var 'aux34' direct represents '1' with '668'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-668'
c Encoding variable: aux35 with domain: bool (representing constraint (((grid_00003_00007=9) + (grid_00004_00007=9) + (grid_00002_00007=9) + (grid_00005_00007=9))<=1))
c Var 'aux35' direct represents '0' with '-669'
c Var 'aux35' direct represents '1' with '669'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-669'
c Encoding variable: aux36 with domain: bool (representing constraint (((grid_00003_00004=1) + (grid_00004_00004=1) + (grid_00005_00004=1))<=1))
c Var 'aux36' direct represents '0' with '-670'
c Var 'aux36' direct represents '1' with '670'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-670'
c Encoding variable: aux37 with domain: bool (representing constraint (((grid_00003_00004=2) + (grid_00004_00004=2) + (grid_00005_00004=2))<=1))
c Var 'aux37' direct represents '0' with '-671'
c Var 'aux37' direct represents '1' with '671'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-671'
c Encoding variable: aux38 with domain: bool (representing constraint (((grid_00003_00004=3) + (grid_00004_00004=3) + (grid_00005_00004=3))<=1))
c Var 'aux38' direct represents '0' with '-672'
c Var 'aux38' direct represents '1' with '672'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-672'
c Encoding variable: aux39 with domain: bool (representing constraint (((grid_00003_00004=4) + (grid_00004_00004=4) + (grid_00005_00004=4))<=1))
c Var 'aux39' direct represents '0' with '-673'
c Var 'aux39' direct represents '1' with '673'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-673'
c Encoding variable: aux40 with domain: bool (representing constraint (((grid_00003_00004=5) + (grid_00004_00004=5) + (grid_00005_00004=5))<=1))
c Var 'aux40' direct represents '0' with '-674'
c Var 'aux40' direct represents '1' with '674'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-674'
c Encoding variable: aux41 with domain: bool (representing constraint (((grid_00003_00004=6) + (grid_00004_00004=6) + (grid_00005_00004=6))<=1))
c Var 'aux41' direct represents '0' with '-675'
c Var 'aux41' direct represents '1' with '675'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-675'
c Encoding variable: aux42 with domain: bool (representing constraint (((grid_00003_00004=7) + (grid_00004_00004=7) + (grid_00005_00004=7))<=1))
c Var 'aux42' direct represents '0' with '-676'
c Var 'aux42' direct represents '1' with '676'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-676'
c Encoding variable: aux43 with domain: bool (representing constraint (((grid_00003_00004=8) + (grid_00004_00004=8) + (grid_00005_00004=8))<=1))
c Var 'aux43' direct represents '0' with '-677'
c Var 'aux43' direct represents '1' with '677'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-677'
c Encoding variable: aux44 with domain: bool (representing constraint (((grid_00003_00004=9) + (grid_00004_00004=9) + (grid_00005_00004=9))<=1))
c Var 'aux44' direct represents '0' with '-678'
c Var 'aux44' direct represents '1' with '678'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-678'
c Encoding variable: aux45 with domain: bool (representing constraint (((grid_00003_00002=1) + (grid_00001_00002=1) + (grid_00004_00002=1) + (grid_00002_00002=1) + (grid_00005_00002=1))<=1))
c Var 'aux45' direct represents '0' with '-679'
c Var 'aux45' direct represents '1' with '679'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-679'
c Encoding variable: aux46 with domain: bool (representing constraint (((grid_00003_00002=2) + (grid_00001_00002=2) + (grid_00004_00002=2) + (grid_00002_00002=2) + (grid_00005_00002=2))<=1))
c Var 'aux46' direct represents '0' with '-680'
c Var 'aux46' direct represents '1' with '680'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-680'
c Encoding variable: aux47 with domain: bool (representing constraint (((grid_00003_00002=3) + (grid_00001_00002=3) + (grid_00004_00002=3) + (grid_00002_00002=3) + (grid_00005_00002=3))<=1))
c Var 'aux47' direct represents '0' with '-681'
c Var 'aux47' direct represents '1' with '681'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-681'
c Encoding variable: aux48 with domain: bool (representing constraint (((grid_00003_00002=4) + (grid_00001_00002=4) + (grid_00004_00002=4) + (grid_00002_00002=4) + (grid_00005_00002=4))<=1))
c Var 'aux48' direct represents '0' with '-682'
c Var 'aux48' direct represents '1' with '682'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-682'
c Encoding variable: aux49 with domain: bool (representing constraint (((grid_00003_00002=5) + (grid_00001_00002=5) + (grid_00004_00002=5) + (grid_00002_00002=5) + (grid_00005_00002=5))<=1))
c Var 'aux49' direct represents '0' with '-683'
c Var 'aux49' direct represents '1' with '683'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-683'
c Encoding variable: aux50 with domain: bool (representing constraint (((grid_00003_00002=6) + (grid_00001_00002=6) + (grid_00004_00002=6) + (grid_00002_00002=6) + (grid_00005_00002=6))<=1))
c Var 'aux50' direct represents '0' with '-684'
c Var 'aux50' direct represents '1' with '684'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-684'
c Encoding variable: aux51 with domain: bool (representing constraint (((grid_00003_00002=7) + (grid_00001_00002=7) + (grid_00004_00002=7) + (grid_00002_00002=7) + (grid_00005_00002=7))<=1))
c Var 'aux51' direct represents '0' with '-685'
c Var 'aux51' direct represents '1' with '685'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-685'
c Encoding variable: aux52 with domain: bool (representing constraint (((grid_00003_00002=8) + (grid_00001_00002=8) + (grid_00004_00002=8) + (grid_00002_00002=8) + (grid_00005_00002=8))<=1))
c Var 'aux52' direct represents '0' with '-686'
c Var 'aux52' direct represents '1' with '686'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-686'
c Encoding variable: aux53 with domain: bool (representing constraint (((grid_00003_00002=9) + (grid_00001_00002=9) + (grid_00004_00002=9) + (grid_00002_00002=9) + (grid_00005_00002=9))<=1))
c Var 'aux53' direct represents '0' with '-687'
c Var 'aux53' direct represents '1' with '687'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-687'
c Encoding variable: aux54 with domain: bool (representing constraint (((grid_00003_00003=1) + (grid_00001_00003=1) + (grid_00002_00003=1))<=1))
c Var 'aux54' direct represents '0' with '-688'
c Var 'aux54' direct represents '1' with '688'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-688'
c Encoding variable: aux55 with domain: bool (representing constraint (((grid_00003_00003=2) + (grid_00001_00003=2) + (grid_00002_00003=2))<=1))
c Var 'aux55' direct represents '0' with '-689'
c Var 'aux55' direct represents '1' with '689'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-689'
c Encoding variable: aux56 with domain: bool (representing constraint (((grid_00003_00003=3) + (grid_00001_00003=3) + (grid_00002_00003=3))<=1))
c Var 'aux56' direct represents '0' with '-690'
c Var 'aux56' direct represents '1' with '690'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-690'
c Encoding variable: aux57 with domain: bool (representing constraint (((grid_00003_00003=4) + (grid_00001_00003=4) + (grid_00002_00003=4))<=1))
c Var 'aux57' direct represents '0' with '-691'
c Var 'aux57' direct represents '1' with '691'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-691'
c Encoding variable: aux58 with domain: bool (representing constraint (((grid_00003_00003=5) + (grid_00001_00003=5) + (grid_00002_00003=5))<=1))
c Var 'aux58' direct represents '0' with '-692'
c Var 'aux58' direct represents '1' with '692'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-692'
c Encoding variable: aux59 with domain: bool (representing constraint (((grid_00003_00003=6) + (grid_00001_00003=6) + (grid_00002_00003=6))<=1))
c Var 'aux59' direct represents '0' with '-693'
c Var 'aux59' direct represents '1' with '693'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-693'
c Encoding variable: aux60 with domain: bool (representing constraint (((grid_00003_00003=7) + (grid_00001_00003=7) + (grid_00002_00003=7))<=1))
c Var 'aux60' direct represents '0' with '-694'
c Var 'aux60' direct represents '1' with '694'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-694'
c Encoding variable: aux61 with domain: bool (representing constraint (((grid_00003_00003=8) + (grid_00001_00003=8) + (grid_00002_00003=8))<=1))
c Var 'aux61' direct represents '0' with '-695'
c Var 'aux61' direct represents '1' with '695'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-695'
c Encoding variable: aux62 with domain: bool (representing constraint (((grid_00003_00003=9) + (grid_00001_00003=9) + (grid_00002_00003=9))<=1))
c Var 'aux62' direct represents '0' with '-696'
c Var 'aux62' direct represents '1' with '696'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-696'
c Encoding variable: aux63 with domain: bool (representing constraint (((grid_00003_00006=1) + (grid_00001_00006=1) + (grid_00004_00006=1) + (grid_00002_00006=1) + (grid_00005_00006=1))<=1))
c Var 'aux63' direct represents '0' with '-697'
c Var 'aux63' direct represents '1' with '697'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-697'
c Encoding variable: aux64 with domain: bool (representing constraint (((grid_00003_00006=2) + (grid_00001_00006=2) + (grid_00004_00006=2) + (grid_00002_00006=2) + (grid_00005_00006=2))<=1))
c Var 'aux64' direct represents '0' with '-698'
c Var 'aux64' direct represents '1' with '698'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-698'
c Encoding variable: aux65 with domain: bool (representing constraint (((grid_00003_00006=3) + (grid_00001_00006=3) + (grid_00004_00006=3) + (grid_00002_00006=3) + (grid_00005_00006=3))<=1))
c Var 'aux65' direct represents '0' with '-699'
c Var 'aux65' direct represents '1' with '699'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-699'
c Encoding variable: aux66 with domain: bool (representing constraint (((grid_00003_00006=4) + (grid_00001_00006=4) + (grid_00004_00006=4) + (grid_00002_00006=4) + (grid_00005_00006=4))<=1))
c Var 'aux66' direct represents '0' with '-700'
c Var 'aux66' direct represents '1' with '700'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-700'
c Encoding variable: aux67 with domain: bool (representing constraint (((grid_00003_00006=5) + (grid_00001_00006=5) + (grid_00004_00006=5) + (grid_00002_00006=5) + (grid_00005_00006=5))<=1))
c Var 'aux67' direct represents '0' with '-701'
c Var 'aux67' direct represents '1' with '701'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-701'
c Encoding variable: aux68 with domain: bool (representing constraint (((grid_00003_00006=6) + (grid_00001_00006=6) + (grid_00004_00006=6) + (grid_00002_00006=6) + (grid_00005_00006=6))<=1))
c Var 'aux68' direct represents '0' with '-702'
c Var 'aux68' direct represents '1' with '702'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-702'
c Encoding variable: aux69 with domain: bool (representing constraint (((grid_00003_00006=7) + (grid_00001_00006=7) + (grid_00004_00006=7) + (grid_00002_00006=7) + (grid_00005_00006=7))<=1))
c Var 'aux69' direct represents '0' with '-703'
c Var 'aux69' direct represents '1' with '703'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-703'
c Encoding variable: aux70 with domain: bool (representing constraint (((grid_00003_00006=8) + (grid_00001_00006=8) + (grid_00004_00006=8) + (grid_00002_00006=8) + (grid_00005_00006=8))<=1))
c Var 'aux70' direct represents '0' with '-704'
c Var 'aux70' direct represents '1' with '704'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-704'
c Encoding variable: aux71 with domain: bool (representing constraint (((grid_00003_00006=9) + (grid_00001_00006=9) + (grid_00004_00006=9) + (grid_00002_00006=9) + (grid_00005_00006=9))<=1))
c Var 'aux71' direct represents '0' with '-705'
c Var 'aux71' direct represents '1' with '705'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-705'
c Encoding variable: aux72 with domain: bool (representing constraint (((grid_00001_00001=1) + (grid_00001_00002=1) + (grid_00001_00003=1))<=1))
c Var 'aux72' direct represents '0' with '-706'
c Var 'aux72' direct represents '1' with '706'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-706'
c Encoding variable: aux73 with domain: bool (representing constraint (((grid_00001_00001=2) + (grid_00001_00002=2) + (grid_00001_00003=2))<=1))
c Var 'aux73' direct represents '0' with '-707'
c Var 'aux73' direct represents '1' with '707'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-707'
c Encoding variable: aux74 with domain: bool (representing constraint (((grid_00001_00001=3) + (grid_00001_00002=3) + (grid_00001_00003=3))<=1))
c Var 'aux74' direct represents '0' with '-708'
c Var 'aux74' direct represents '1' with '708'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-708'
c Encoding variable: aux75 with domain: bool (representing constraint (((grid_00001_00001=4) + (grid_00001_00002=4) + (grid_00001_00003=4))<=1))
c Var 'aux75' direct represents '0' with '-709'
c Var 'aux75' direct represents '1' with '709'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-709'
c Encoding variable: aux76 with domain: bool (representing constraint (((grid_00001_00001=5) + (grid_00001_00002=5) + (grid_00001_00003=5))<=1))
c Var 'aux76' direct represents '0' with '-710'
c Var 'aux76' direct represents '1' with '710'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-710'
c Encoding variable: aux77 with domain: bool (representing constraint (((grid_00001_00001=6) + (grid_00001_00002=6) + (grid_00001_00003=6))<=1))
c Var 'aux77' direct represents '0' with '-711'
c Var 'aux77' direct represents '1' with '711'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-711'
c Encoding variable: aux78 with domain: bool (representing constraint (((grid_00001_00001=7) + (grid_00001_00002=7) + (grid_00001_00003=7))<=1))
c Var 'aux78' direct represents '0' with '-712'
c Var 'aux78' direct represents '1' with '712'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-712'
c Encoding variable: aux79 with domain: bool (representing constraint (((grid_00001_00001=8) + (grid_00001_00002=8) + (grid_00001_00003=8))<=1))
c Var 'aux79' direct represents '0' with '-713'
c Var 'aux79' direct represents '1' with '713'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-713'
c Encoding variable: aux80 with domain: bool (representing constraint (((grid_00001_00001=9) + (grid_00001_00002=9) + (grid_00001_00003=9))<=1))
c Var 'aux80' direct represents '0' with '-714'
c Var 'aux80' direct represents '1' with '714'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-714'
c Encoding variable: aux81 with domain: bool (representing constraint (((grid_00002_00001=1) + (grid_00002_00002=1) + (grid_00002_00003=1))<=1))
c Var 'aux81' direct represents '0' with '-715'
c Var 'aux81' direct represents '1' with '715'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-715'
c Encoding variable: aux82 with domain: bool (representing constraint (((grid_00002_00001=2) + (grid_00002_00002=2) + (grid_00002_00003=2))<=1))
c Var 'aux82' direct represents '0' with '-716'
c Var 'aux82' direct represents '1' with '716'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-716'
c Encoding variable: aux83 with domain: bool (representing constraint (((grid_00002_00001=3) + (grid_00002_00002=3) + (grid_00002_00003=3))<=1))
c Var 'aux83' direct represents '0' with '-717'
c Var 'aux83' direct represents '1' with '717'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-717'
c Encoding variable: aux84 with domain: bool (representing constraint (((grid_00002_00001=4) + (grid_00002_00002=4) + (grid_00002_00003=4))<=1))
c Var 'aux84' direct represents '0' with '-718'
c Var 'aux84' direct represents '1' with '718'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-718'
c Encoding variable: aux85 with domain: bool (representing constraint (((grid_00002_00001=5) + (grid_00002_00002=5) + (grid_00002_00003=5))<=1))
c Var 'aux85' direct represents '0' with '-719'
c Var 'aux85' direct represents '1' with '719'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-719'
c Encoding variable: aux86 with domain: bool (representing constraint (((grid_00002_00001=6) + (grid_00002_00002=6) + (grid_00002_00003=6))<=1))
c Var 'aux86' direct represents '0' with '-720'
c Var 'aux86' direct represents '1' with '720'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-720'
c Encoding variable: aux87 with domain: bool (representing constraint (((grid_00002_00001=7) + (grid_00002_00002=7) + (grid_00002_00003=7))<=1))
c Var 'aux87' direct represents '0' with '-721'
c Var 'aux87' direct represents '1' with '721'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-721'
c Encoding variable: aux88 with domain: bool (representing constraint (((grid_00002_00001=8) + (grid_00002_00002=8) + (grid_00002_00003=8))<=1))
c Var 'aux88' direct represents '0' with '-722'
c Var 'aux88' direct represents '1' with '722'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-722'
c Encoding variable: aux89 with domain: bool (representing constraint (((grid_00002_00001=9) + (grid_00002_00002=9) + (grid_00002_00003=9))<=1))
c Var 'aux89' direct represents '0' with '-723'
c Var 'aux89' direct represents '1' with '723'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-723'
c Encoding variable: aux90 with domain: bool (representing constraint (((grid_00002_00005=1) + (grid_00002_00006=1) + (grid_00002_00007=1))<=1))
c Var 'aux90' direct represents '0' with '-724'
c Var 'aux90' direct represents '1' with '724'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-724'
c Encoding variable: aux91 with domain: bool (representing constraint (((grid_00002_00005=2) + (grid_00002_00006=2) + (grid_00002_00007=2))<=1))
c Var 'aux91' direct represents '0' with '-725'
c Var 'aux91' direct represents '1' with '725'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-725'
c Encoding variable: aux92 with domain: bool (representing constraint (((grid_00002_00005=3) + (grid_00002_00006=3) + (grid_00002_00007=3))<=1))
c Var 'aux92' direct represents '0' with '-726'
c Var 'aux92' direct represents '1' with '726'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-726'
c Encoding variable: aux93 with domain: bool (representing constraint (((grid_00002_00005=4) + (grid_00002_00006=4) + (grid_00002_00007=4))<=1))
c Var 'aux93' direct represents '0' with '-727'
c Var 'aux93' direct represents '1' with '727'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-727'
c Encoding variable: aux94 with domain: bool (representing constraint (((grid_00002_00005=5) + (grid_00002_00006=5) + (grid_00002_00007=5))<=1))
c Var 'aux94' direct represents '0' with '-728'
c Var 'aux94' direct represents '1' with '728'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-728'
c Encoding variable: aux95 with domain: bool (representing constraint (((grid_00002_00005=6) + (grid_00002_00006=6) + (grid_00002_00007=6))<=1))
c Var 'aux95' direct represents '0' with '-729'
c Var 'aux95' direct represents '1' with '729'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-729'
c Encoding variable: aux96 with domain: bool (representing constraint (((grid_00002_00005=7) + (grid_00002_00006=7) + (grid_00002_00007=7))<=1))
c Var 'aux96' direct represents '0' with '-730'
c Var 'aux96' direct represents '1' with '730'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-730'
c Encoding variable: aux97 with domain: bool (representing constraint (((grid_00002_00005=8) + (grid_00002_00006=8) + (grid_00002_00007=8))<=1))
c Var 'aux97' direct represents '0' with '-731'
c Var 'aux97' direct represents '1' with '731'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-731'
c Encoding variable: aux98 with domain: bool (representing constraint (((grid_00002_00005=9) + (grid_00002_00006=9) + (grid_00002_00007=9))<=1))
c Var 'aux98' direct represents '0' with '-732'
c Var 'aux98' direct represents '1' with '732'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-732'
c Encoding variable: aux99 with domain: bool (representing constraint (((grid_00003_00002=1) + (grid_00003_00003=1) + (grid_00003_00004=1))<=1))
c Var 'aux99' direct represents '0' with '-733'
c Var 'aux99' direct represents '1' with '733'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-733'
c Encoding variable: aux100 with domain: bool (representing constraint (((grid_00003_00002=2) + (grid_00003_00003=2) + (grid_00003_00004=2))<=1))
c Var 'aux100' direct represents '0' with '-734'
c Var 'aux100' direct represents '1' with '734'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-734'
c Encoding variable: aux101 with domain: bool (representing constraint (((grid_00003_00002=3) + (grid_00003_00003=3) + (grid_00003_00004=3))<=1))
c Var 'aux101' direct represents '0' with '-735'
c Var 'aux101' direct represents '1' with '735'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-735'
c Encoding variable: aux102 with domain: bool (representing constraint (((grid_00003_00002=4) + (grid_00003_00003=4) + (grid_00003_00004=4))<=1))
c Var 'aux102' direct represents '0' with '-736'
c Var 'aux102' direct represents '1' with '736'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-736'
c Encoding variable: aux103 with domain: bool (representing constraint (((grid_00003_00002=5) + (grid_00003_00003=5) + (grid_00003_00004=5))<=1))
c Var 'aux103' direct represents '0' with '-737'
c Var 'aux103' direct represents '1' with '737'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-737'
c Encoding variable: aux104 with domain: bool (representing constraint (((grid_00003_00002=6) + (grid_00003_00003=6) + (grid_00003_00004=6))<=1))
c Var 'aux104' direct represents '0' with '-738'
c Var 'aux104' direct represents '1' with '738'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-738'
c Encoding variable: aux105 with domain: bool (representing constraint (((grid_00003_00002=7) + (grid_00003_00003=7) + (grid_00003_00004=7))<=1))
c Var 'aux105' direct represents '0' with '-739'
c Var 'aux105' direct represents '1' with '739'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-739'
c Encoding variable: aux106 with domain: bool (representing constraint (((grid_00003_00002=8) + (grid_00003_00003=8) + (grid_00003_00004=8))<=1))
c Var 'aux106' direct represents '0' with '-740'
c Var 'aux106' direct represents '1' with '740'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-740'
c Encoding variable: aux107 with domain: bool (representing constraint (((grid_00003_00002=9) + (grid_00003_00003=9) + (grid_00003_00004=9))<=1))
c Var 'aux107' direct represents '0' with '-741'
c Var 'aux107' direct represents '1' with '741'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-741'
c Encoding variable: aux108 with domain: bool (representing constraint (((grid_00004_00004=1) + (grid_00004_00005=1) + (grid_00004_00006=1) + (grid_00004_00007=1))<=1))
c Var 'aux108' direct represents '0' with '-742'
c Var 'aux108' direct represents '1' with '742'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-742'
c Encoding variable: aux109 with domain: bool (representing constraint (((grid_00004_00004=2) + (grid_00004_00005=2) + (grid_00004_00006=2) + (grid_00004_00007=2))<=1))
c Var 'aux109' direct represents '0' with '-743'
c Var 'aux109' direct represents '1' with '743'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-743'
c Encoding variable: aux110 with domain: bool (representing constraint (((grid_00004_00004=3) + (grid_00004_00005=3) + (grid_00004_00006=3) + (grid_00004_00007=3))<=1))
c Var 'aux110' direct represents '0' with '-744'
c Var 'aux110' direct represents '1' with '744'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-744'
c Encoding variable: aux111 with domain: bool (representing constraint (((grid_00004_00004=4) + (grid_00004_00005=4) + (grid_00004_00006=4) + (grid_00004_00007=4))<=1))
c Var 'aux111' direct represents '0' with '-745'
c Var 'aux111' direct represents '1' with '745'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-745'
c Encoding variable: aux112 with domain: bool (representing constraint (((grid_00004_00004=5) + (grid_00004_00005=5) + (grid_00004_00006=5) + (grid_00004_00007=5))<=1))
c Var 'aux112' direct represents '0' with '-746'
c Var 'aux112' direct represents '1' with '746'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-746'
c Encoding variable: aux113 with domain: bool (representing constraint (((grid_00004_00004=6) + (grid_00004_00005=6) + (grid_00004_00006=6) + (grid_00004_00007=6))<=1))
c Var 'aux113' direct represents '0' with '-747'
c Var 'aux113' direct represents '1' with '747'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-747'
c Encoding variable: aux114 with domain: bool (representing constraint (((grid_00004_00004=7) + (grid_00004_00005=7) + (grid_00004_00006=7) + (grid_00004_00007=7))<=1))
c Var 'aux114' direct represents '0' with '-748'
c Var 'aux114' direct represents '1' with '748'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-748'
c Encoding variable: aux115 with domain: bool (representing constraint (((grid_00004_00004=8) + (grid_00004_00005=8) + (grid_00004_00006=8) + (grid_00004_00007=8))<=1))
c Var 'aux115' direct represents '0' with '-749'
c Var 'aux115' direct represents '1' with '749'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-749'
c Encoding variable: aux116 with domain: bool (representing constraint (((grid_00004_00004=9) + (grid_00004_00005=9) + (grid_00004_00006=9) + (grid_00004_00007=9))<=1))
c Var 'aux116' direct represents '0' with '-750'
c Var 'aux116' direct represents '1' with '750'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-750'
c Encoding variable: aux117 with domain: bool (representing constraint (((grid_00005_00004=1) + (grid_00005_00005=1) + (grid_00005_00006=1) + (grid_00005_00007=1))<=1))
c Var 'aux117' direct represents '0' with '-751'
c Var 'aux117' direct represents '1' with '751'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-751'
c Encoding variable: aux118 with domain: bool (representing constraint (((grid_00005_00004=2) + (grid_00005_00005=2) + (grid_00005_00006=2) + (grid_00005_00007=2))<=1))
c Var 'aux118' direct represents '0' with '-752'
c Var 'aux118' direct represents '1' with '752'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-752'
c Encoding variable: aux119 with domain: bool (representing constraint (((grid_00005_00004=3) + (grid_00005_00005=3) + (grid_00005_00006=3) + (grid_00005_00007=3))<=1))
c Var 'aux119' direct represents '0' with '-753'
c Var 'aux119' direct represents '1' with '753'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-753'
c Encoding variable: aux120 with domain: bool (representing constraint (((grid_00005_00004=4) + (grid_00005_00005=4) + (grid_00005_00006=4) + (grid_00005_00007=4))<=1))
c Var 'aux120' direct represents '0' with '-754'
c Var 'aux120' direct represents '1' with '754'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-754'
c Encoding variable: aux121 with domain: bool (representing constraint (((grid_00005_00004=5) + (grid_00005_00005=5) + (grid_00005_00006=5) + (grid_00005_00007=5))<=1))
c Var 'aux121' direct represents '0' with '-755'
c Var 'aux121' direct represents '1' with '755'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-755'
c Encoding variable: aux122 with domain: bool (representing constraint (((grid_00005_00004=6) + (grid_00005_00005=6) + (grid_00005_00006=6) + (grid_00005_00007=6))<=1))
c Var 'aux122' direct represents '0' with '-756'
c Var 'aux122' direct represents '1' with '756'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-756'
c Encoding variable: aux123 with domain: bool (representing constraint (((grid_00005_00004=7) + (grid_00005_00005=7) + (grid_00005_00006=7) + (grid_00005_00007=7))<=1))
c Var 'aux123' direct represents '0' with '-757'
c Var 'aux123' direct represents '1' with '757'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-757'
c Encoding variable: aux124 with domain: bool (representing constraint (((grid_00005_00004=8) + (grid_00005_00005=8) + (grid_00005_00006=8) + (grid_00005_00007=8))<=1))
c Var 'aux124' direct represents '0' with '-758'
c Var 'aux124' direct represents '1' with '758'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-758'
c Encoding variable: aux125 with domain: bool (representing constraint (((grid_00005_00004=9) + (grid_00005_00005=9) + (grid_00005_00006=9) + (grid_00005_00007=9))<=1))
c Var 'aux125' direct represents '0' with '-759'
c Var 'aux125' direct represents '1' with '759'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-759'
c Encoding variable: aux126 with domain: int(0..16) (representing constraint (shift(grid_00003_00007, -1) + shift(grid_00002_00007, -1)))
c Both direct and order encoding.
c Var 'aux126' order represents '0' with '760'
c Var 'aux126' direct represents '0' with '760'
c Var 'aux126' order represents '1' with '761'
-760 761 0
c Var 'aux126' direct represents '1' with '762'
760 -761 762 0
-762 761 0
-762 -760 0
c Var 'aux126' order represents '2' with '763'
-761 763 0
c Var 'aux126' direct represents '2' with '764'
761 -763 764 0
-764 763 0
-764 -761 0
c Var 'aux126' order represents '3' with '765'
-763 765 0
c Var 'aux126' direct represents '3' with '766'
763 -765 766 0
-766 765 0
-766 -763 0
c Var 'aux126' order represents '4' with '767'
-765 767 0
c Var 'aux126' direct represents '4' with '768'
765 -767 768 0
-768 767 0
-768 -765 0
c Var 'aux126' order represents '5' with '769'
-767 769 0
c Var 'aux126' direct represents '5' with '770'
767 -769 770 0
-770 769 0
-770 -767 0
c Var 'aux126' order represents '6' with '771'
-769 771 0
c Var 'aux126' direct represents '6' with '772'
769 -771 772 0
-772 771 0
-772 -769 0
c Var 'aux126' order represents '7' with '773'
-771 773 0
c Var 'aux126' direct represents '7' with '774'
771 -773 774 0
-774 773 0
-774 -771 0
c Var 'aux126' order represents '8' with '775'
-773 775 0
c Var 'aux126' direct represents '8' with '776'
773 -775 776 0
-776 775 0
-776 -773 0
c Var 'aux126' order represents '9' with '777'
-775 777 0
c Var 'aux126' direct represents '9' with '778'
775 -777 778 0
-778 777 0
-778 -775 0
c Var 'aux126' order represents '10' with '779'
-777 779 0
c Var 'aux126' direct represents '10' with '780'
777 -779 780 0
-780 779 0
-780 -777 0
c Var 'aux126' order represents '11' with '781'
-779 781 0
c Var 'aux126' direct represents '11' with '782'
779 -781 782 0
-782 781 0
-782 -779 0
c Var 'aux126' order represents '12' with '783'
-781 783 0
c Var 'aux126' direct represents '12' with '784'
781 -783 784 0
-784 783 0
-784 -781 0
c Var 'aux126' order represents '13' with '785'
-783 785 0
c Var 'aux126' direct represents '13' with '786'
783 -785 786 0
-786 785 0
-786 -783 0
c Var 'aux126' order represents '14' with '787'
-785 787 0
c Var 'aux126' direct represents '14' with '788'
785 -787 788 0
-788 787 0
-788 -785 0
c Var 'aux126' order represents '15' with '789'
-787 789 0
c Var 'aux126' direct represents '15' with '790'
787 -789 790 0
-790 789 0
-790 -787 0
c Var 'aux126' direct represents '16' with '-789'
760 762 764 766 768 770 772 774 776 778 780 782 784 786 788 790 -789 0
c Encoding variable: aux127 with domain: int(0..16) (representing constraint (shift(grid_00003_00002, -1) + shift(grid_00002_00002, -1)))
c Both direct and order encoding.
c Var 'aux127' order represents '0' with '791'
c Var 'aux127' direct represents '0' with '791'
c Var 'aux127' order represents '1' with '792'
-791 792 0
c Var 'aux127' direct represents '1' with '793'
791 -792 793 0
-793 792 0
-793 -791 0
c Var 'aux127' order represents '2' with '794'
-792 794 0
c Var 'aux127' direct represents '2' with '795'
792 -794 795 0
-795 794 0
-795 -792 0
c Var 'aux127' order represents '3' with '796'
-794 796 0
c Var 'aux127' direct represents '3' with '797'
794 -796 797 0
-797 796 0
-797 -794 0
c Var 'aux127' order represents '4' with '798'
-796 798 0
c Var 'aux127' direct represents '4' with '799'
796 -798 799 0
-799 798 0
-799 -796 0
c Var 'aux127' order represents '5' with '800'
-798 800 0
c Var 'aux127' direct represents '5' with '801'
798 -800 801 0
-801 800 0
-801 -798 0
c Var 'aux127' order represents '6' with '802'
-800 802 0
c Var 'aux127' direct represents '6' with '803'
800 -802 803 0
-803 802 0
-803 -800 0
c Var 'aux127' order represents '7' with '804'
-802 804 0
c Var 'aux127' direct represents '7' with '805'
802 -804 805 0
-805 804 0
-805 -802 0
c Var 'aux127' order represents '8' with '806'
-804 806 0
c Var 'aux127' direct represents '8' with '807'
804 -806 807 0
-807 806 0
-807 -804 0
c Var 'aux127' order represents '9' with '808'
-806 808 0
c Var 'aux127' direct represents '9' with '809'
806 -808 809 0
-809 808 0
-809 -806 0
c Var 'aux127' order represents '10' with '810'
-808 810 0
c Var 'aux127' direct represents '10' with '811'
808 -810 811 0
-811 810 0
-811 -808 0
c Var 'aux127' order represents '11' with '812'
-810 812 0
c Var 'aux127' direct represents '11' with '813'
810 -812 813 0
-813 812 0
-813 -810 0
c Var 'aux127' order represents '12' with '814'
-812 814 0
c Var 'aux127' direct represents '12' with '815'
812 -814 815 0
-815 814 0
-815 -812 0
c Var 'aux127' order represents '13' with '816'
-814 816 0
c Var 'aux127' direct represents '13' with '817'
814 -816 817 0
-817 816 0
-817 -814 0
c Var 'aux127' order represents '14' with '818'
-816 818 0
c Var 'aux127' direct represents '14' with '819'
816 -818 819 0
-819 818 0
-819 -816 0
c Var 'aux127' order represents '15' with '820'
-818 820 0
c Var 'aux127' direct represents '15' with '821'
818 -820 821 0
-821 820 0
-821 -818 0
c Var 'aux127' direct represents '16' with '-820'
791 793 795 797 799 801 803 805 807 809 811 813 815 817 819 821 -820 0
c Encoding variable: aux128 with domain: int(0..16) (representing constraint (shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1)))
c Both direct and order encoding.
c Var 'aux128' order represents '0' with '822'
c Var 'aux128' direct represents '0' with '822'
c Var 'aux128' order represents '1' with '823'
-822 823 0
c Var 'aux128' direct represents '1' with '824'
822 -823 824 0
-824 823 0
-824 -822 0
c Var 'aux128' order represents '2' with '825'
-823 825 0
c Var 'aux128' direct represents '2' with '826'
823 -825 826 0
-826 825 0
-826 -823 0
c Var 'aux128' order represents '3' with '827'
-825 827 0
c Var 'aux128' direct represents '3' with '828'
825 -827 828 0
-828 827 0
-828 -825 0
c Var 'aux128' order represents '4' with '829'
-827 829 0
c Var 'aux128' direct represents '4' with '830'
827 -829 830 0
-830 829 0
-830 -827 0
c Var 'aux128' order represents '5' with '831'
-829 831 0
c Var 'aux128' direct represents '5' with '832'
829 -831 832 0
-832 831 0
-832 -829 0
c Var 'aux128' order represents '6' with '833'
-831 833 0
c Var 'aux128' direct represents '6' with '834'
831 -833 834 0
-834 833 0
-834 -831 0
c Var 'aux128' order represents '7' with '835'
-833 835 0
c Var 'aux128' direct represents '7' with '836'
833 -835 836 0
-836 835 0
-836 -833 0
c Var 'aux128' order represents '8' with '837'
-835 837 0
c Var 'aux128' direct represents '8' with '838'
835 -837 838 0
-838 837 0
-838 -835 0
c Var 'aux128' order represents '9' with '839'
-837 839 0
c Var 'aux128' direct represents '9' with '840'
837 -839 840 0
-840 839 0
-840 -837 0
c Var 'aux128' order represents '10' with '841'
-839 841 0
c Var 'aux128' direct represents '10' with '842'
839 -841 842 0
-842 841 0
-842 -839 0
c Var 'aux128' order represents '11' with '843'
-841 843 0
c Var 'aux128' direct represents '11' with '844'
841 -843 844 0
-844 843 0
-844 -841 0
c Var 'aux128' order represents '12' with '845'
-843 845 0
c Var 'aux128' direct represents '12' with '846'
843 -845 846 0
-846 845 0
-846 -843 0
c Var 'aux128' order represents '13' with '847'
-845 847 0
c Var 'aux128' direct represents '13' with '848'
845 -847 848 0
-848 847 0
-848 -845 0
c Var 'aux128' order represents '14' with '849'
-847 849 0
c Var 'aux128' direct represents '14' with '850'
847 -849 850 0
-850 849 0
-850 -847 0
c Var 'aux128' order represents '15' with '851'
-849 851 0
c Var 'aux128' direct represents '15' with '852'
849 -851 852 0
-852 851 0
-852 -849 0
c Var 'aux128' direct represents '16' with '-851'
822 824 826 828 830 832 834 836 838 840 842 844 846 848 850 852 -851 0
c Encoding variable: aux129 with domain: int(0..16) (representing constraint (shift(grid_00003_00006, -1) + shift(grid_00002_00006, -1)))
c Both direct and order encoding.
c Var 'aux129' order represents '0' with '853'
c Var 'aux129' direct represents '0' with '853'
c Var 'aux129' order represents '1' with '854'
-853 854 0
c Var 'aux129' direct represents '1' with '855'
853 -854 855 0
-855 854 0
-855 -853 0
c Var 'aux129' order represents '2' with '856'
-854 856 0
c Var 'aux129' direct represents '2' with '857'
854 -856 857 0
-857 856 0
-857 -854 0
c Var 'aux129' order represents '3' with '858'
-856 858 0
c Var 'aux129' direct represents '3' with '859'
856 -858 859 0
-859 858 0
-859 -856 0
c Var 'aux129' order represents '4' with '860'
-858 860 0
c Var 'aux129' direct represents '4' with '861'
858 -860 861 0
-861 860 0
-861 -858 0
c Var 'aux129' order represents '5' with '862'
-860 862 0
c Var 'aux129' direct represents '5' with '863'
860 -862 863 0
-863 862 0
-863 -860 0
c Var 'aux129' order represents '6' with '864'
-862 864 0
c Var 'aux129' direct represents '6' with '865'
862 -864 865 0
-865 864 0
-865 -862 0
c Var 'aux129' order represents '7' with '866'
-864 866 0
c Var 'aux129' direct represents '7' with '867'
864 -866 867 0
-867 866 0
-867 -864 0
c Var 'aux129' order represents '8' with '868'
-866 868 0
c Var 'aux129' direct represents '8' with '869'
866 -868 869 0
-869 868 0
-869 -866 0
c Var 'aux129' order represents '9' with '870'
-868 870 0
c Var 'aux129' direct represents '9' with '871'
868 -870 871 0
-871 870 0
-871 -868 0
c Var 'aux129' order represents '10' with '872'
-870 872 0
c Var 'aux129' direct represents '10' with '873'
870 -872 873 0
-873 872 0
-873 -870 0
c Var 'aux129' order represents '11' with '874'
-872 874 0
c Var 'aux129' direct represents '11' with '875'
872 -874 875 0
-875 874 0
-875 -872 0
c Var 'aux129' order represents '12' with '876'
-874 876 0
c Var 'aux129' direct represents '12' with '877'
874 -876 877 0
-877 876 0
-877 -874 0
c Var 'aux129' order represents '13' with '878'
-876 878 0
c Var 'aux129' direct represents '13' with '879'
876 -878 879 0
-879 878 0
-879 -876 0
c Var 'aux129' order represents '14' with '880'
-878 880 0
c Var 'aux129' direct represents '14' with '881'
878 -880 881 0
-881 880 0
-881 -878 0
c Var 'aux129' order represents '15' with '882'
-880 882 0
c Var 'aux129' direct represents '15' with '883'
880 -882 883 0
-883 882 0
-883 -880 0
c Var 'aux129' direct represents '16' with '-882'
853 855 857 859 861 863 865 867 869 871 873 875 877 879 881 883 -882 0
c Encoding variable: aux130 with domain: int(0..16) (representing constraint (shift(grid_00001_00006, -1) + shift(grid_00004_00006, -1)))
c Both direct and order encoding.
c Var 'aux130' order represents '0' with '884'
c Var 'aux130' direct represents '0' with '884'
c Var 'aux130' order represents '1' with '885'
-884 885 0
c Var 'aux130' direct represents '1' with '886'
884 -885 886 0
-886 885 0
-886 -884 0
c Var 'aux130' order represents '2' with '887'
-885 887 0
c Var 'aux130' direct represents '2' with '888'
885 -887 888 0
-888 887 0
-888 -885 0
c Var 'aux130' order represents '3' with '889'
-887 889 0
c Var 'aux130' direct represents '3' with '890'
887 -889 890 0
-890 889 0
-890 -887 0
c Var 'aux130' order represents '4' with '891'
-889 891 0
c Var 'aux130' direct represents '4' with '892'
889 -891 892 0
-892 891 0
-892 -889 0
c Var 'aux130' order represents '5' with '893'
-891 893 0
c Var 'aux130' direct represents '5' with '894'
891 -893 894 0
-894 893 0
-894 -891 0
c Var 'aux130' order represents '6' with '895'
-893 895 0
c Var 'aux130' direct represents '6' with '896'
893 -895 896 0
-896 895 0
-896 -893 0
c Var 'aux130' order represents '7' with '897'
-895 897 0
c Var 'aux130' direct represents '7' with '898'
895 -897 898 0
-898 897 0
-898 -895 0
c Var 'aux130' order represents '8' with '899'
-897 899 0
c Var 'aux130' direct represents '8' with '900'
897 -899 900 0
-900 899 0
-900 -897 0
c Var 'aux130' order represents '9' with '901'
-899 901 0
c Var 'aux130' direct represents '9' with '902'
899 -901 902 0
-902 901 0
-902 -899 0
c Var 'aux130' order represents '10' with '903'
-901 903 0
c Var 'aux130' direct represents '10' with '904'
901 -903 904 0
-904 903 0
-904 -901 0
c Var 'aux130' order represents '11' with '905'
-903 905 0
c Var 'aux130' direct represents '11' with '906'
903 -905 906 0
-906 905 0
-906 -903 0
c Var 'aux130' order represents '12' with '907'
-905 907 0
c Var 'aux130' direct represents '12' with '908'
905 -907 908 0
-908 907 0
-908 -905 0
c Var 'aux130' order represents '13' with '909'
-907 909 0
c Var 'aux130' direct represents '13' with '910'
907 -909 910 0
-910 909 0
-910 -907 0
c Var 'aux130' order represents '14' with '911'
-909 911 0
c Var 'aux130' direct represents '14' with '912'
909 -911 912 0
-912 911 0
-912 -909 0
c Var 'aux130' order represents '15' with '913'
-911 913 0
c Var 'aux130' direct represents '15' with '914'
911 -913 914 0
-914 913 0
-914 -911 0
c Var 'aux130' direct represents '16' with '-913'
884 886 888 890 892 894 896 898 900 902 904 906 908 910 912 914 -913 0
c Encoding variable: aux131 with domain: int(0..16) (representing constraint (shift(grid_00004_00004, -1) + shift(grid_00004_00007, -1)))
c Both direct and order encoding.
c Var 'aux131' order represents '0' with '915'
c Var 'aux131' direct represents '0' with '915'
c Var 'aux131' order represents '1' with '916'
-915 916 0
c Var 'aux131' direct represents '1' with '917'
915 -916 917 0
-917 916 0
-917 -915 0
c Var 'aux131' order represents '2' with '918'
-916 918 0
c Var 'aux131' direct represents '2' with '919'
916 -918 919 0
-919 918 0
-919 -916 0
c Var 'aux131' order represents '3' with '920'
-918 920 0
c Var 'aux131' direct represents '3' with '921'
918 -920 921 0
-921 920 0
-921 -918 0
c Var 'aux131' order represents '4' with '922'
-920 922 0
c Var 'aux131' direct represents '4' with '923'
920 -922 923 0
-923 922 0
-923 -920 0
c Var 'aux131' order represents '5' with '924'
-922 924 0
c Var 'aux131' direct represents '5' with '925'
922 -924 925 0
-925 924 0
-925 -922 0
c Var 'aux131' order represents '6' with '926'
-924 926 0
c Var 'aux131' direct represents '6' with '927'
924 -926 927 0
-927 926 0
-927 -924 0
c Var 'aux131' order represents '7' with '928'
-926 928 0
c Var 'aux131' direct represents '7' with '929'
926 -928 929 0
-929 928 0
-929 -926 0
c Var 'aux131' order represents '8' with '930'
-928 930 0
c Var 'aux131' direct represents '8' with '931'
928 -930 931 0
-931 930 0
-931 -928 0
c Var 'aux131' order represents '9' with '932'
-930 932 0
c Var 'aux131' direct represents '9' with '933'
930 -932 933 0
-933 932 0
-933 -930 0
c Var 'aux131' order represents '10' with '934'
-932 934 0
c Var 'aux131' direct represents '10' with '935'
932 -934 935 0
-935 934 0
-935 -932 0
c Var 'aux131' order represents '11' with '936'
-934 936 0
c Var 'aux131' direct represents '11' with '937'
934 -936 937 0
-937 936 0
-937 -934 0
c Var 'aux131' order represents '12' with '938'
-936 938 0
c Var 'aux131' direct represents '12' with '939'
936 -938 939 0
-939 938 0
-939 -936 0
c Var 'aux131' order represents '13' with '940'
-938 940 0
c Var 'aux131' direct represents '13' with '941'
938 -940 941 0
-941 940 0
-941 -938 0
c Var 'aux131' order represents '14' with '942'
-940 942 0
c Var 'aux131' direct represents '14' with '943'
940 -942 943 0
-943 942 0
-943 -940 0
c Var 'aux131' order represents '15' with '944'
-942 944 0
c Var 'aux131' direct represents '15' with '945'
942 -944 945 0
-945 944 0
-945 -942 0
c Var 'aux131' direct represents '16' with '-944'
915 917 919 921 923 925 927 929 931 933 935 937 939 941 943 945 -944 0
c Encoding variable: aux132 with domain: int(0..16) (representing constraint (shift(grid_00005_00004, -1) + shift(grid_00005_00007, -1)))
c Both direct and order encoding.
c Var 'aux132' order represents '0' with '946'
c Var 'aux132' direct represents '0' with '946'
c Var 'aux132' order represents '1' with '947'
-946 947 0
c Var 'aux132' direct represents '1' with '948'
946 -947 948 0
-948 947 0
-948 -946 0
c Var 'aux132' order represents '2' with '949'
-947 949 0
c Var 'aux132' direct represents '2' with '950'
947 -949 950 0
-950 949 0
-950 -947 0
c Var 'aux132' order represents '3' with '951'
-949 951 0
c Var 'aux132' direct represents '3' with '952'
949 -951 952 0
-952 951 0
-952 -949 0
c Var 'aux132' order represents '4' with '953'
-951 953 0
c Var 'aux132' direct represents '4' with '954'
951 -953 954 0
-954 953 0
-954 -951 0
c Var 'aux132' order represents '5' with '955'
-953 955 0
c Var 'aux132' direct represents '5' with '956'
953 -955 956 0
-956 955 0
-956 -953 0
c Var 'aux132' order represents '6' with '957'
-955 957 0
c Var 'aux132' direct represents '6' with '958'
955 -957 958 0
-958 957 0
-958 -955 0
c Var 'aux132' order represents '7' with '959'
-957 959 0
c Var 'aux132' direct represents '7' with '960'
957 -959 960 0
-960 959 0
-960 -957 0
c Var 'aux132' order represents '8' with '961'
-959 961 0
c Var 'aux132' direct represents '8' with '962'
959 -961 962 0
-962 961 0
-962 -959 0
c Var 'aux132' order represents '9' with '963'
-961 963 0
c Var 'aux132' direct represents '9' with '964'
961 -963 964 0
-964 963 0
-964 -961 0
c Var 'aux132' order represents '10' with '965'
-963 965 0
c Var 'aux132' direct represents '10' with '966'
963 -965 966 0
-966 965 0
-966 -963 0
c Var 'aux132' order represents '11' with '967'
-965 967 0
c Var 'aux132' direct represents '11' with '968'
965 -967 968 0
-968 967 0
-968 -965 0
c Var 'aux132' order represents '12' with '969'
-967 969 0
c Var 'aux132' direct represents '12' with '970'
967 -969 970 0
-970 969 0
-970 -967 0
c Var 'aux132' order represents '13' with '971'
-969 971 0
c Var 'aux132' direct represents '13' with '972'
969 -971 972 0
-972 971 0
-972 -969 0
c Var 'aux132' order represents '14' with '973'
-971 973 0
c Var 'aux132' direct represents '14' with '974'
971 -973 974 0
-974 973 0
-974 -971 0
c Var 'aux132' order represents '15' with '975'
-973 975 0
c Var 'aux132' direct represents '15' with '976'
973 -975 976 0
-976 975 0
-976 -973 0
c Var 'aux132' direct represents '16' with '-975'
946 948 950 952 954 956 958 960 962 964 966 968 970 972 974 976 -975 0
c Encoding variable: aux133 with domain: int(0..2) (representing constraint ((grid_00003_00007=1) + (grid_00005_00007=1)))
c Both direct and order encoding.
c Var 'aux133' order represents '0' with '977'
c Var 'aux133' direct represents '0' with '977'
c Var 'aux133' order represents '1' with '978'
-977 978 0
c Var 'aux133' direct represents '1' with '979'
977 -978 979 0
-979 978 0
-979 -977 0
c Var 'aux133' direct represents '2' with '-978'
977 979 -978 0
c Encoding variable: aux134 with domain: int(0..2) (representing constraint ((grid_00003_00007=2) + (grid_00005_00007=2)))
c Both direct and order encoding.
c Var 'aux134' order represents '0' with '980'
c Var 'aux134' direct represents '0' with '980'
c Var 'aux134' order represents '1' with '981'
-980 981 0
c Var 'aux134' direct represents '1' with '982'
980 -981 982 0
-982 981 0
-982 -980 0
c Var 'aux134' direct represents '2' with '-981'
980 982 -981 0
c Encoding variable: aux135 with domain: int(0..2) (representing constraint ((grid_00003_00007=3) + (grid_00005_00007=3)))
c Both direct and order encoding.
c Var 'aux135' order represents '0' with '983'
c Var 'aux135' direct represents '0' with '983'
c Var 'aux135' order represents '1' with '984'
-983 984 0
c Var 'aux135' direct represents '1' with '985'
983 -984 985 0
-985 984 0
-985 -983 0
c Var 'aux135' direct represents '2' with '-984'
983 985 -984 0
c Encoding variable: aux136 with domain: int(0..2) (representing constraint ((grid_00003_00007=4) + (grid_00005_00007=4)))
c Both direct and order encoding.
c Var 'aux136' order represents '0' with '986'
c Var 'aux136' direct represents '0' with '986'
c Var 'aux136' order represents '1' with '987'
-986 987 0
c Var 'aux136' direct represents '1' with '988'
986 -987 988 0
-988 987 0
-988 -986 0
c Var 'aux136' direct represents '2' with '-987'
986 988 -987 0
c Encoding variable: aux137 with domain: int(0..2) (representing constraint ((grid_00003_00007=5) + (grid_00005_00007=5)))
c Both direct and order encoding.
c Var 'aux137' order represents '0' with '989'
c Var 'aux137' direct represents '0' with '989'
c Var 'aux137' order represents '1' with '990'
-989 990 0
c Var 'aux137' direct represents '1' with '991'
989 -990 991 0
-991 990 0
-991 -989 0
c Var 'aux137' direct represents '2' with '-990'
989 991 -990 0
c Encoding variable: aux138 with domain: int(0..2) (representing constraint ((grid_00003_00007=6) + (grid_00005_00007=6)))
c Both direct and order encoding.
c Var 'aux138' order represents '0' with '992'
c Var 'aux138' direct represents '0' with '992'
c Var 'aux138' order represents '1' with '993'
-992 993 0
c Var 'aux138' direct represents '1' with '994'
992 -993 994 0
-994 993 0
-994 -992 0
c Var 'aux138' direct represents '2' with '-993'
992 994 -993 0
c Encoding variable: aux139 with domain: int(0..2) (representing constraint ((grid_00003_00007=7) + (grid_00005_00007=7)))
c Both direct and order encoding.
c Var 'aux139' order represents '0' with '995'
c Var 'aux139' direct represents '0' with '995'
c Var 'aux139' order represents '1' with '996'
-995 996 0
c Var 'aux139' direct represents '1' with '997'
995 -996 997 0
-997 996 0
-997 -995 0
c Var 'aux139' direct represents '2' with '-996'
995 997 -996 0
c Encoding variable: aux140 with domain: int(0..2) (representing constraint ((grid_00003_00007=8) + (grid_00005_00007=8)))
c Both direct and order encoding.
c Var 'aux140' order represents '0' with '998'
c Var 'aux140' direct represents '0' with '998'
c Var 'aux140' order represents '1' with '999'
-998 999 0
c Var 'aux140' direct represents '1' with '1000'
998 -999 1000 0
-1000 999 0
-1000 -998 0
c Var 'aux140' direct represents '2' with '-999'
998 1000 -999 0
c Encoding variable: aux141 with domain: int(0..2) (representing constraint ((grid_00003_00007=9) + (grid_00005_00007=9)))
c Both direct and order encoding.
c Var 'aux141' order represents '0' with '1001'
c Var 'aux141' direct represents '0' with '1001'
c Var 'aux141' order represents '1' with '1002'
-1001 1002 0
c Var 'aux141' direct represents '1' with '1003'
1001 -1002 1003 0
-1003 1002 0
-1003 -1001 0
c Var 'aux141' direct represents '2' with '-1002'
1001 1003 -1002 0
c Encoding variable: aux142 with domain: int(0..2) (representing constraint ((grid_00003_00002=1) + (grid_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux142' order represents '0' with '1004'
c Var 'aux142' direct represents '0' with '1004'
c Var 'aux142' order represents '1' with '1005'
-1004 1005 0
c Var 'aux142' direct represents '1' with '1006'
1004 -1005 1006 0
-1006 1005 0
-1006 -1004 0
c Var 'aux142' direct represents '2' with '-1005'
1004 1006 -1005 0
c Encoding variable: aux143 with domain: int(0..2) (representing constraint ((grid_00002_00002=1) + (grid_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux143' order represents '0' with '1007'
c Var 'aux143' direct represents '0' with '1007'
c Var 'aux143' order represents '1' with '1008'
-1007 1008 0
c Var 'aux143' direct represents '1' with '1009'
1007 -1008 1009 0
-1009 1008 0
-1009 -1007 0
c Var 'aux143' direct represents '2' with '-1008'
1007 1009 -1008 0
c Encoding variable: aux144 with domain: int(0..2) (representing constraint ((grid_00003_00002=2) + (grid_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux144' order represents '0' with '1010'
c Var 'aux144' direct represents '0' with '1010'
c Var 'aux144' order represents '1' with '1011'
-1010 1011 0
c Var 'aux144' direct represents '1' with '1012'
1010 -1011 1012 0
-1012 1011 0
-1012 -1010 0
c Var 'aux144' direct represents '2' with '-1011'
1010 1012 -1011 0
c Encoding variable: aux145 with domain: int(0..2) (representing constraint ((grid_00002_00002=2) + (grid_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux145' order represents '0' with '1013'
c Var 'aux145' direct represents '0' with '1013'
c Var 'aux145' order represents '1' with '1014'
-1013 1014 0
c Var 'aux145' direct represents '1' with '1015'
1013 -1014 1015 0
-1015 1014 0
-1015 -1013 0
c Var 'aux145' direct represents '2' with '-1014'
1013 1015 -1014 0
c Encoding variable: aux146 with domain: int(0..2) (representing constraint ((grid_00003_00002=3) + (grid_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux146' order represents '0' with '1016'
c Var 'aux146' direct represents '0' with '1016'
c Var 'aux146' order represents '1' with '1017'
-1016 1017 0
c Var 'aux146' direct represents '1' with '1018'
1016 -1017 1018 0
-1018 1017 0
-1018 -1016 0
c Var 'aux146' direct represents '2' with '-1017'
1016 1018 -1017 0
c Encoding variable: aux147 with domain: int(0..2) (representing constraint ((grid_00002_00002=3) + (grid_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux147' order represents '0' with '1019'
c Var 'aux147' direct represents '0' with '1019'
c Var 'aux147' order represents '1' with '1020'
-1019 1020 0
c Var 'aux147' direct represents '1' with '1021'
1019 -1020 1021 0
-1021 1020 0
-1021 -1019 0
c Var 'aux147' direct represents '2' with '-1020'
1019 1021 -1020 0
c Encoding variable: aux148 with domain: int(0..2) (representing constraint ((grid_00003_00002=4) + (grid_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux148' order represents '0' with '1022'
c Var 'aux148' direct represents '0' with '1022'
c Var 'aux148' order represents '1' with '1023'
-1022 1023 0
c Var 'aux148' direct represents '1' with '1024'
1022 -1023 1024 0
-1024 1023 0
-1024 -1022 0
c Var 'aux148' direct represents '2' with '-1023'
1022 1024 -1023 0
c Encoding variable: aux149 with domain: int(0..2) (representing constraint ((grid_00002_00002=4) + (grid_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux149' order represents '0' with '1025'
c Var 'aux149' direct represents '0' with '1025'
c Var 'aux149' order represents '1' with '1026'
-1025 1026 0
c Var 'aux149' direct represents '1' with '1027'
1025 -1026 1027 0
-1027 1026 0
-1027 -1025 0
c Var 'aux149' direct represents '2' with '-1026'
1025 1027 -1026 0
c Encoding variable: aux150 with domain: int(0..2) (representing constraint ((grid_00003_00002=5) + (grid_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux150' order represents '0' with '1028'
c Var 'aux150' direct represents '0' with '1028'
c Var 'aux150' order represents '1' with '1029'
-1028 1029 0
c Var 'aux150' direct represents '1' with '1030'
1028 -1029 1030 0
-1030 1029 0
-1030 -1028 0
c Var 'aux150' direct represents '2' with '-1029'
1028 1030 -1029 0
c Encoding variable: aux151 with domain: int(0..2) (representing constraint ((grid_00002_00002=5) + (grid_00001_00002=5)))
c Both direct and order encoding.
c Var 'aux151' order represents '0' with '1031'
c Var 'aux151' direct represents '0' with '1031'
c Var 'aux151' order represents '1' with '1032'
-1031 1032 0
c Var 'aux151' direct represents '1' with '1033'
1031 -1032 1033 0
-1033 1032 0
-1033 -1031 0
c Var 'aux151' direct represents '2' with '-1032'
1031 1033 -1032 0
c Encoding variable: aux152 with domain: int(0..2) (representing constraint ((grid_00003_00002=6) + (grid_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux152' order represents '0' with '1034'
c Var 'aux152' direct represents '0' with '1034'
c Var 'aux152' order represents '1' with '1035'
-1034 1035 0
c Var 'aux152' direct represents '1' with '1036'
1034 -1035 1036 0
-1036 1035 0
-1036 -1034 0
c Var 'aux152' direct represents '2' with '-1035'
1034 1036 -1035 0
c Encoding variable: aux153 with domain: int(0..2) (representing constraint ((grid_00002_00002=6) + (grid_00001_00002=6)))
c Both direct and order encoding.
c Var 'aux153' order represents '0' with '1037'
c Var 'aux153' direct represents '0' with '1037'
c Var 'aux153' order represents '1' with '1038'
-1037 1038 0
c Var 'aux153' direct represents '1' with '1039'
1037 -1038 1039 0
-1039 1038 0
-1039 -1037 0
c Var 'aux153' direct represents '2' with '-1038'
1037 1039 -1038 0
c Encoding variable: aux154 with domain: int(0..2) (representing constraint ((grid_00003_00002=7) + (grid_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux154' order represents '0' with '1040'
c Var 'aux154' direct represents '0' with '1040'
c Var 'aux154' order represents '1' with '1041'
-1040 1041 0
c Var 'aux154' direct represents '1' with '1042'
1040 -1041 1042 0
-1042 1041 0
-1042 -1040 0
c Var 'aux154' direct represents '2' with '-1041'
1040 1042 -1041 0
c Encoding variable: aux155 with domain: int(0..2) (representing constraint ((grid_00002_00002=7) + (grid_00001_00002=7)))
c Both direct and order encoding.
c Var 'aux155' order represents '0' with '1043'
c Var 'aux155' direct represents '0' with '1043'
c Var 'aux155' order represents '1' with '1044'
-1043 1044 0
c Var 'aux155' direct represents '1' with '1045'
1043 -1044 1045 0
-1045 1044 0
-1045 -1043 0
c Var 'aux155' direct represents '2' with '-1044'
1043 1045 -1044 0
c Encoding variable: aux156 with domain: int(0..2) (representing constraint ((grid_00003_00002=8) + (grid_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux156' order represents '0' with '1046'
c Var 'aux156' direct represents '0' with '1046'
c Var 'aux156' order represents '1' with '1047'
-1046 1047 0
c Var 'aux156' direct represents '1' with '1048'
1046 -1047 1048 0
-1048 1047 0
-1048 -1046 0
c Var 'aux156' direct represents '2' with '-1047'
1046 1048 -1047 0
c Encoding variable: aux157 with domain: int(0..2) (representing constraint ((grid_00002_00002=8) + (grid_00001_00002=8)))
c Both direct and order encoding.
c Var 'aux157' order represents '0' with '1049'
c Var 'aux157' direct represents '0' with '1049'
c Var 'aux157' order represents '1' with '1050'
-1049 1050 0
c Var 'aux157' direct represents '1' with '1051'
1049 -1050 1051 0
-1051 1050 0
-1051 -1049 0
c Var 'aux157' direct represents '2' with '-1050'
1049 1051 -1050 0
c Encoding variable: aux158 with domain: int(0..2) (representing constraint ((grid_00003_00002=9) + (grid_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux158' order represents '0' with '1052'
c Var 'aux158' direct represents '0' with '1052'
c Var 'aux158' order represents '1' with '1053'
-1052 1053 0
c Var 'aux158' direct represents '1' with '1054'
1052 -1053 1054 0
-1054 1053 0
-1054 -1052 0
c Var 'aux158' direct represents '2' with '-1053'
1052 1054 -1053 0
c Encoding variable: aux159 with domain: int(0..2) (representing constraint ((grid_00002_00002=9) + (grid_00001_00002=9)))
c Both direct and order encoding.
c Var 'aux159' order represents '0' with '1055'
c Var 'aux159' direct represents '0' with '1055'
c Var 'aux159' order represents '1' with '1056'
-1055 1056 0
c Var 'aux159' direct represents '1' with '1057'
1055 -1056 1057 0
-1057 1056 0
-1057 -1055 0
c Var 'aux159' direct represents '2' with '-1056'
1055 1057 -1056 0
c Encoding variable: aux160 with domain: int(0..2) (representing constraint ((grid_00003_00006=1) + (grid_00005_00006=1)))
c Both direct and order encoding.
c Var 'aux160' order represents '0' with '1058'
c Var 'aux160' direct represents '0' with '1058'
c Var 'aux160' order represents '1' with '1059'
-1058 1059 0
c Var 'aux160' direct represents '1' with '1060'
1058 -1059 1060 0
-1060 1059 0
-1060 -1058 0
c Var 'aux160' direct represents '2' with '-1059'
1058 1060 -1059 0
c Encoding variable: aux161 with domain: int(0..2) (representing constraint ((grid_00002_00006=1) + (grid_00001_00006=1)))
c Both direct and order encoding.
c Var 'aux161' order represents '0' with '1061'
c Var 'aux161' direct represents '0' with '1061'
c Var 'aux161' order represents '1' with '1062'
-1061 1062 0
c Var 'aux161' direct represents '1' with '1063'
1061 -1062 1063 0
-1063 1062 0
-1063 -1061 0
c Var 'aux161' direct represents '2' with '-1062'
1061 1063 -1062 0
c Encoding variable: aux162 with domain: int(0..2) (representing constraint ((grid_00003_00006=2) + (grid_00005_00006=2)))
c Both direct and order encoding.
c Var 'aux162' order represents '0' with '1064'
c Var 'aux162' direct represents '0' with '1064'
c Var 'aux162' order represents '1' with '1065'
-1064 1065 0
c Var 'aux162' direct represents '1' with '1066'
1064 -1065 1066 0
-1066 1065 0
-1066 -1064 0
c Var 'aux162' direct represents '2' with '-1065'
1064 1066 -1065 0
c Encoding variable: aux163 with domain: int(0..2) (representing constraint ((grid_00002_00006=2) + (grid_00001_00006=2)))
c Both direct and order encoding.
c Var 'aux163' order represents '0' with '1067'
c Var 'aux163' direct represents '0' with '1067'
c Var 'aux163' order represents '1' with '1068'
-1067 1068 0
c Var 'aux163' direct represents '1' with '1069'
1067 -1068 1069 0
-1069 1068 0
-1069 -1067 0
c Var 'aux163' direct represents '2' with '-1068'
1067 1069 -1068 0
c Encoding variable: aux164 with domain: int(0..2) (representing constraint ((grid_00003_00006=3) + (grid_00005_00006=3)))
c Both direct and order encoding.
c Var 'aux164' order represents '0' with '1070'
c Var 'aux164' direct represents '0' with '1070'
c Var 'aux164' order represents '1' with '1071'
-1070 1071 0
c Var 'aux164' direct represents '1' with '1072'
1070 -1071 1072 0
-1072 1071 0
-1072 -1070 0
c Var 'aux164' direct represents '2' with '-1071'
1070 1072 -1071 0
c Encoding variable: aux165 with domain: int(0..2) (representing constraint ((grid_00002_00006=3) + (grid_00001_00006=3)))
c Both direct and order encoding.
c Var 'aux165' order represents '0' with '1073'
c Var 'aux165' direct represents '0' with '1073'
c Var 'aux165' order represents '1' with '1074'
-1073 1074 0
c Var 'aux165' direct represents '1' with '1075'
1073 -1074 1075 0
-1075 1074 0
-1075 -1073 0
c Var 'aux165' direct represents '2' with '-1074'
1073 1075 -1074 0
c Encoding variable: aux166 with domain: int(0..2) (representing constraint ((grid_00003_00006=4) + (grid_00005_00006=4)))
c Both direct and order encoding.
c Var 'aux166' order represents '0' with '1076'
c Var 'aux166' direct represents '0' with '1076'
c Var 'aux166' order represents '1' with '1077'
-1076 1077 0
c Var 'aux166' direct represents '1' with '1078'
1076 -1077 1078 0
-1078 1077 0
-1078 -1076 0
c Var 'aux166' direct represents '2' with '-1077'
1076 1078 -1077 0
c Encoding variable: aux167 with domain: int(0..2) (representing constraint ((grid_00002_00006=4) + (grid_00001_00006=4)))
c Both direct and order encoding.
c Var 'aux167' order represents '0' with '1079'
c Var 'aux167' direct represents '0' with '1079'
c Var 'aux167' order represents '1' with '1080'
-1079 1080 0
c Var 'aux167' direct represents '1' with '1081'
1079 -1080 1081 0
-1081 1080 0
-1081 -1079 0
c Var 'aux167' direct represents '2' with '-1080'
1079 1081 -1080 0
c Encoding variable: aux168 with domain: int(0..2) (representing constraint ((grid_00003_00006=5) + (grid_00005_00006=5)))
c Both direct and order encoding.
c Var 'aux168' order represents '0' with '1082'
c Var 'aux168' direct represents '0' with '1082'
c Var 'aux168' order represents '1' with '1083'
-1082 1083 0
c Var 'aux168' direct represents '1' with '1084'
1082 -1083 1084 0
-1084 1083 0
-1084 -1082 0
c Var 'aux168' direct represents '2' with '-1083'
1082 1084 -1083 0
c Encoding variable: aux169 with domain: int(0..2) (representing constraint ((grid_00002_00006=5) + (grid_00001_00006=5)))
c Both direct and order encoding.
c Var 'aux169' order represents '0' with '1085'
c Var 'aux169' direct represents '0' with '1085'
c Var 'aux169' order represents '1' with '1086'
-1085 1086 0
c Var 'aux169' direct represents '1' with '1087'
1085 -1086 1087 0
-1087 1086 0
-1087 -1085 0
c Var 'aux169' direct represents '2' with '-1086'
1085 1087 -1086 0
c Encoding variable: aux170 with domain: int(0..2) (representing constraint ((grid_00003_00006=6) + (grid_00005_00006=6)))
c Both direct and order encoding.
c Var 'aux170' order represents '0' with '1088'
c Var 'aux170' direct represents '0' with '1088'
c Var 'aux170' order represents '1' with '1089'
-1088 1089 0
c Var 'aux170' direct represents '1' with '1090'
1088 -1089 1090 0
-1090 1089 0
-1090 -1088 0
c Var 'aux170' direct represents '2' with '-1089'
1088 1090 -1089 0
c Encoding variable: aux171 with domain: int(0..2) (representing constraint ((grid_00002_00006=6) + (grid_00001_00006=6)))
c Both direct and order encoding.
c Var 'aux171' order represents '0' with '1091'
c Var 'aux171' direct represents '0' with '1091'
c Var 'aux171' order represents '1' with '1092'
-1091 1092 0
c Var 'aux171' direct represents '1' with '1093'
1091 -1092 1093 0
-1093 1092 0
-1093 -1091 0
c Var 'aux171' direct represents '2' with '-1092'
1091 1093 -1092 0
c Encoding variable: aux172 with domain: int(0..2) (representing constraint ((grid_00003_00006=7) + (grid_00005_00006=7)))
c Both direct and order encoding.
c Var 'aux172' order represents '0' with '1094'
c Var 'aux172' direct represents '0' with '1094'
c Var 'aux172' order represents '1' with '1095'
-1094 1095 0
c Var 'aux172' direct represents '1' with '1096'
1094 -1095 1096 0
-1096 1095 0
-1096 -1094 0
c Var 'aux172' direct represents '2' with '-1095'
1094 1096 -1095 0
c Encoding variable: aux173 with domain: int(0..2) (representing constraint ((grid_00002_00006=7) + (grid_00001_00006=7)))
c Both direct and order encoding.
c Var 'aux173' order represents '0' with '1097'
c Var 'aux173' direct represents '0' with '1097'
c Var 'aux173' order represents '1' with '1098'
-1097 1098 0
c Var 'aux173' direct represents '1' with '1099'
1097 -1098 1099 0
-1099 1098 0
-1099 -1097 0
c Var 'aux173' direct represents '2' with '-1098'
1097 1099 -1098 0
c Encoding variable: aux174 with domain: int(0..2) (representing constraint ((grid_00003_00006=8) + (grid_00005_00006=8)))
c Both direct and order encoding.
c Var 'aux174' order represents '0' with '1100'
c Var 'aux174' direct represents '0' with '1100'
c Var 'aux174' order represents '1' with '1101'
-1100 1101 0
c Var 'aux174' direct represents '1' with '1102'
1100 -1101 1102 0
-1102 1101 0
-1102 -1100 0
c Var 'aux174' direct represents '2' with '-1101'
1100 1102 -1101 0
c Encoding variable: aux175 with domain: int(0..2) (representing constraint ((grid_00002_00006=8) + (grid_00001_00006=8)))
c Both direct and order encoding.
c Var 'aux175' order represents '0' with '1103'
c Var 'aux175' direct represents '0' with '1103'
c Var 'aux175' order represents '1' with '1104'
-1103 1104 0
c Var 'aux175' direct represents '1' with '1105'
1103 -1104 1105 0
-1105 1104 0
-1105 -1103 0
c Var 'aux175' direct represents '2' with '-1104'
1103 1105 -1104 0
c Encoding variable: aux176 with domain: int(0..2) (representing constraint ((grid_00003_00006=9) + (grid_00005_00006=9)))
c Both direct and order encoding.
c Var 'aux176' order represents '0' with '1106'
c Var 'aux176' direct represents '0' with '1106'
c Var 'aux176' order represents '1' with '1107'
-1106 1107 0
c Var 'aux176' direct represents '1' with '1108'
1106 -1107 1108 0
-1108 1107 0
-1108 -1106 0
c Var 'aux176' direct represents '2' with '-1107'
1106 1108 -1107 0
c Encoding variable: aux177 with domain: int(0..2) (representing constraint ((grid_00002_00006=9) + (grid_00001_00006=9)))
c Both direct and order encoding.
c Var 'aux177' order represents '0' with '1109'
c Var 'aux177' direct represents '0' with '1109'
c Var 'aux177' order represents '1' with '1110'
-1109 1110 0
c Var 'aux177' direct represents '1' with '1111'
1109 -1110 1111 0
-1111 1110 0
-1111 -1109 0
c Var 'aux177' direct represents '2' with '-1110'
1109 1111 -1110 0
c Encoding variable: aux178 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (grid_00004_00007=1)))
c Both direct and order encoding.
c Var 'aux178' order represents '0' with '1112'
c Var 'aux178' direct represents '0' with '1112'
c Var 'aux178' order represents '1' with '1113'
-1112 1113 0
c Var 'aux178' direct represents '1' with '1114'
1112 -1113 1114 0
-1114 1113 0
-1114 -1112 0
c Var 'aux178' direct represents '2' with '-1113'
1112 1114 -1113 0
c Encoding variable: aux179 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (grid_00004_00007=2)))
c Both direct and order encoding.
c Var 'aux179' order represents '0' with '1115'
c Var 'aux179' direct represents '0' with '1115'
c Var 'aux179' order represents '1' with '1116'
-1115 1116 0
c Var 'aux179' direct represents '1' with '1117'
1115 -1116 1117 0
-1117 1116 0
-1117 -1115 0
c Var 'aux179' direct represents '2' with '-1116'
1115 1117 -1116 0
c Encoding variable: aux180 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (grid_00004_00007=3)))
c Both direct and order encoding.
c Var 'aux180' order represents '0' with '1118'
c Var 'aux180' direct represents '0' with '1118'
c Var 'aux180' order represents '1' with '1119'
-1118 1119 0
c Var 'aux180' direct represents '1' with '1120'
1118 -1119 1120 0
-1120 1119 0
-1120 -1118 0
c Var 'aux180' direct represents '2' with '-1119'
1118 1120 -1119 0
c Encoding variable: aux181 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (grid_00004_00007=4)))
c Both direct and order encoding.
c Var 'aux181' order represents '0' with '1121'
c Var 'aux181' direct represents '0' with '1121'
c Var 'aux181' order represents '1' with '1122'
-1121 1122 0
c Var 'aux181' direct represents '1' with '1123'
1121 -1122 1123 0
-1123 1122 0
-1123 -1121 0
c Var 'aux181' direct represents '2' with '-1122'
1121 1123 -1122 0
c Encoding variable: aux182 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (grid_00004_00007=5)))
c Both direct and order encoding.
c Var 'aux182' order represents '0' with '1124'
c Var 'aux182' direct represents '0' with '1124'
c Var 'aux182' order represents '1' with '1125'
-1124 1125 0
c Var 'aux182' direct represents '1' with '1126'
1124 -1125 1126 0
-1126 1125 0
-1126 -1124 0
c Var 'aux182' direct represents '2' with '-1125'
1124 1126 -1125 0
c Encoding variable: aux183 with domain: int(0..2) (representing constraint ((grid_00004_00004=6) + (grid_00004_00007=6)))
c Both direct and order encoding.
c Var 'aux183' order represents '0' with '1127'
c Var 'aux183' direct represents '0' with '1127'
c Var 'aux183' order represents '1' with '1128'
-1127 1128 0
c Var 'aux183' direct represents '1' with '1129'
1127 -1128 1129 0
-1129 1128 0
-1129 -1127 0
c Var 'aux183' direct represents '2' with '-1128'
1127 1129 -1128 0
c Encoding variable: aux184 with domain: int(0..2) (representing constraint ((grid_00004_00004=7) + (grid_00004_00007=7)))
c Both direct and order encoding.
c Var 'aux184' order represents '0' with '1130'
c Var 'aux184' direct represents '0' with '1130'
c Var 'aux184' order represents '1' with '1131'
-1130 1131 0
c Var 'aux184' direct represents '1' with '1132'
1130 -1131 1132 0
-1132 1131 0
-1132 -1130 0
c Var 'aux184' direct represents '2' with '-1131'
1130 1132 -1131 0
c Encoding variable: aux185 with domain: int(0..2) (representing constraint ((grid_00004_00004=8) + (grid_00004_00007=8)))
c Both direct and order encoding.
c Var 'aux185' order represents '0' with '1133'
c Var 'aux185' direct represents '0' with '1133'
c Var 'aux185' order represents '1' with '1134'
-1133 1134 0
c Var 'aux185' direct represents '1' with '1135'
1133 -1134 1135 0
-1135 1134 0
-1135 -1133 0
c Var 'aux185' direct represents '2' with '-1134'
1133 1135 -1134 0
c Encoding variable: aux186 with domain: int(0..2) (representing constraint ((grid_00004_00004=9) + (grid_00004_00007=9)))
c Both direct and order encoding.
c Var 'aux186' order represents '0' with '1136'
c Var 'aux186' direct represents '0' with '1136'
c Var 'aux186' order represents '1' with '1137'
-1136 1137 0
c Var 'aux186' direct represents '1' with '1138'
1136 -1137 1138 0
-1138 1137 0
-1138 -1136 0
c Var 'aux186' direct represents '2' with '-1137'
1136 1138 -1137 0
c Encoding variable: aux187 with domain: int(0..2) (representing constraint ((grid_00005_00004=1) + (grid_00005_00007=1)))
c Both direct and order encoding.
c Var 'aux187' order represents '0' with '1139'
c Var 'aux187' direct represents '0' with '1139'
c Var 'aux187' order represents '1' with '1140'
-1139 1140 0
c Var 'aux187' direct represents '1' with '1141'
1139 -1140 1141 0
-1141 1140 0
-1141 -1139 0
c Var 'aux187' direct represents '2' with '-1140'
1139 1141 -1140 0
c Encoding variable: aux188 with domain: int(0..2) (representing constraint ((grid_00005_00004=2) + (grid_00005_00007=2)))
c Both direct and order encoding.
c Var 'aux188' order represents '0' with '1142'
c Var 'aux188' direct represents '0' with '1142'
c Var 'aux188' order represents '1' with '1143'
-1142 1143 0
c Var 'aux188' direct represents '1' with '1144'
1142 -1143 1144 0
-1144 1143 0
-1144 -1142 0
c Var 'aux188' direct represents '2' with '-1143'
1142 1144 -1143 0
c Encoding variable: aux189 with domain: int(0..2) (representing constraint ((grid_00005_00004=3) + (grid_00005_00007=3)))
c Both direct and order encoding.
c Var 'aux189' order represents '0' with '1145'
c Var 'aux189' direct represents '0' with '1145'
c Var 'aux189' order represents '1' with '1146'
-1145 1146 0
c Var 'aux189' direct represents '1' with '1147'
1145 -1146 1147 0
-1147 1146 0
-1147 -1145 0
c Var 'aux189' direct represents '2' with '-1146'
1145 1147 -1146 0
c Encoding variable: aux190 with domain: int(0..2) (representing constraint ((grid_00005_00004=4) + (grid_00005_00007=4)))
c Both direct and order encoding.
c Var 'aux190' order represents '0' with '1148'
c Var 'aux190' direct represents '0' with '1148'
c Var 'aux190' order represents '1' with '1149'
-1148 1149 0
c Var 'aux190' direct represents '1' with '1150'
1148 -1149 1150 0
-1150 1149 0
-1150 -1148 0
c Var 'aux190' direct represents '2' with '-1149'
1148 1150 -1149 0
c Encoding variable: aux191 with domain: int(0..2) (representing constraint ((grid_00005_00004=5) + (grid_00005_00007=5)))
c Both direct and order encoding.
c Var 'aux191' order represents '0' with '1151'
c Var 'aux191' direct represents '0' with '1151'
c Var 'aux191' order represents '1' with '1152'
-1151 1152 0
c Var 'aux191' direct represents '1' with '1153'
1151 -1152 1153 0
-1153 1152 0
-1153 -1151 0
c Var 'aux191' direct represents '2' with '-1152'
1151 1153 -1152 0
c Encoding variable: aux192 with domain: int(0..2) (representing constraint ((grid_00005_00004=6) + (grid_00005_00007=6)))
c Both direct and order encoding.
c Var 'aux192' order represents '0' with '1154'
c Var 'aux192' direct represents '0' with '1154'
c Var 'aux192' order represents '1' with '1155'
-1154 1155 0
c Var 'aux192' direct represents '1' with '1156'
1154 -1155 1156 0
-1156 1155 0
-1156 -1154 0
c Var 'aux192' direct represents '2' with '-1155'
1154 1156 -1155 0
c Encoding variable: aux193 with domain: int(0..2) (representing constraint ((grid_00005_00004=7) + (grid_00005_00007=7)))
c Both direct and order encoding.
c Var 'aux193' order represents '0' with '1157'
c Var 'aux193' direct represents '0' with '1157'
c Var 'aux193' order represents '1' with '1158'
-1157 1158 0
c Var 'aux193' direct represents '1' with '1159'
1157 -1158 1159 0
-1159 1158 0
-1159 -1157 0
c Var 'aux193' direct represents '2' with '-1158'
1157 1159 -1158 0
c Encoding variable: aux194 with domain: int(0..2) (representing constraint ((grid_00005_00004=8) + (grid_00005_00007=8)))
c Both direct and order encoding.
c Var 'aux194' order represents '0' with '1160'
c Var 'aux194' direct represents '0' with '1160'
c Var 'aux194' order represents '1' with '1161'
-1160 1161 0
c Var 'aux194' direct represents '1' with '1162'
1160 -1161 1162 0
-1162 1161 0
-1162 -1160 0
c Var 'aux194' direct represents '2' with '-1161'
1160 1162 -1161 0
c Encoding variable: aux195 with domain: int(0..2) (representing constraint ((grid_00005_00004=9) + (grid_00005_00007=9)))
c Both direct and order encoding.
c Var 'aux195' order represents '0' with '1163'
c Var 'aux195' direct represents '0' with '1163'
c Var 'aux195' order represents '1' with '1164'
-1163 1164 0
c Var 'aux195' direct represents '1' with '1165'
1163 -1164 1165 0
-1165 1164 0
-1165 -1163 0
c Var 'aux195' direct represents '2' with '-1164'
1163 1165 -1164 0
c Encoding variable: aux196 with domain: bool (representing constraint ((aux126 + shift(grid_00005_00007, -1) + shift(grid_00004_00007, -1))<=17))
c Var 'aux196' direct represents '0' with '-1166'
c Var 'aux196' direct represents '1' with '1166'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-1166'
c Encoding variable: aux197 with domain: bool (representing constraint (17<=(aux126 + shift(grid_00005_00007, -1) + shift(grid_00004_00007, -1))))
c Var 'aux197' direct represents '0' with '-1167'
c Var 'aux197' direct represents '1' with '1167'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-1167'
c Encoding variable: aux198 with domain: bool (representing constraint ((grid_00003_00004 + grid_00004_00004 + grid_00005_00004)<=22))
c Var 'aux198' direct represents '0' with '-1168'
c Var 'aux198' direct represents '1' with '1168'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-1168'
c Encoding variable: aux199 with domain: bool (representing constraint (22<=(grid_00003_00004 + grid_00004_00004 + grid_00005_00004)))
c Var 'aux199' direct represents '0' with '-1169'
c Var 'aux199' direct represents '1' with '1169'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-1169'
c Encoding variable: aux200 with domain: bool (representing constraint ((grid_00001_00001 + grid_00002_00001)<=6))
c Var 'aux200' direct represents '0' with '-1170'
c Var 'aux200' direct represents '1' with '1170'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-1170'
c Encoding variable: aux201 with domain: bool (representing constraint (6<=(grid_00001_00001 + grid_00002_00001)))
c Var 'aux201' direct represents '0' with '-1171'
c Var 'aux201' direct represents '1' with '1171'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-1171'
c Encoding variable: aux202 with domain: bool (representing constraint ((aux127 + aux128 + shift(grid_00005_00002, -1))<=28))
c Var 'aux202' direct represents '0' with '-1172'
c Var 'aux202' direct represents '1' with '1172'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-1172'
c Encoding variable: aux203 with domain: bool (representing constraint (28<=(aux127 + aux128 + shift(grid_00005_00002, -1))))
c Var 'aux203' direct represents '0' with '-1173'
c Var 'aux203' direct represents '1' with '1173'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-1173'
c Encoding variable: aux204 with domain: bool (representing constraint ((grid_00003_00003 + grid_00001_00003 + grid_00002_00003)<=11))
c Var 'aux204' direct represents '0' with '-1174'
c Var 'aux204' direct represents '1' with '1174'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-1174'
c Encoding variable: aux205 with domain: bool (representing constraint (11<=(grid_00003_00003 + grid_00001_00003 + grid_00002_00003)))
c Var 'aux205' direct represents '0' with '-1175'
c Var 'aux205' direct represents '1' with '1175'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-1175'
c Encoding variable: aux206 with domain: bool (representing constraint ((grid_00001_00005 + grid_00002_00005)<=12))
c Var 'aux206' direct represents '0' with '-1176'
c Var 'aux206' direct represents '1' with '1176'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-1176'
c Encoding variable: aux207 with domain: bool (representing constraint (12<=(grid_00001_00005 + grid_00002_00005)))
c Var 'aux207' direct represents '0' with '-1177'
c Var 'aux207' direct represents '1' with '1177'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-1177'
c Encoding variable: aux208 with domain: bool (representing constraint ((aux129 + aux130 + shift(grid_00005_00006, -1))<=11))
c Var 'aux208' direct represents '0' with '-1178'
c Var 'aux208' direct represents '1' with '1178'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-1178'
c Encoding variable: aux209 with domain: bool (representing constraint (11<=(aux129 + aux130 + shift(grid_00005_00006, -1))))
c Var 'aux209' direct represents '0' with '-1179'
c Var 'aux209' direct represents '1' with '1179'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-1179'
c Encoding variable: aux210 with domain: bool (representing constraint ((grid_00004_00001 + grid_00005_00001)<=7))
c Var 'aux210' direct represents '0' with '-1180'
c Var 'aux210' direct represents '1' with '1180'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-1180'
c Encoding variable: aux211 with domain: bool (representing constraint (7<=(grid_00004_00001 + grid_00005_00001)))
c Var 'aux211' direct represents '0' with '-1181'
c Var 'aux211' direct represents '1' with '1181'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-1181'
c Encoding variable: aux212 with domain: bool (representing constraint ((grid_00004_00005 + grid_00005_00005)<=13))
c Var 'aux212' direct represents '0' with '-1182'
c Var 'aux212' direct represents '1' with '1182'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-1182'
c Encoding variable: aux213 with domain: bool (representing constraint (13<=(grid_00004_00005 + grid_00005_00005)))
c Var 'aux213' direct represents '0' with '-1183'
c Var 'aux213' direct represents '1' with '1183'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-1183'
c Encoding variable: aux214 with domain: bool (representing constraint ((grid_00001_00001 + grid_00001_00002 + grid_00001_00003)<=22))
c Var 'aux214' direct represents '0' with '-1184'
c Var 'aux214' direct represents '1' with '1184'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-1184'
c Encoding variable: aux215 with domain: bool (representing constraint (22<=(grid_00001_00001 + grid_00001_00002 + grid_00001_00003)))
c Var 'aux215' direct represents '0' with '-1185'
c Var 'aux215' direct represents '1' with '1185'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-1185'
c Encoding variable: aux216 with domain: bool (representing constraint ((grid_00001_00005 + grid_00001_00006)<=13))
c Var 'aux216' direct represents '0' with '-1186'
c Var 'aux216' direct represents '1' with '1186'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-1186'
c Encoding variable: aux217 with domain: bool (representing constraint (13<=(grid_00001_00005 + grid_00001_00006)))
c Var 'aux217' direct represents '0' with '-1187'
c Var 'aux217' direct represents '1' with '1187'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-1187'
c Encoding variable: aux218 with domain: bool (representing constraint ((grid_00002_00001 + grid_00002_00002 + grid_00002_00003)<=10))
c Var 'aux218' direct represents '0' with '-1188'
c Var 'aux218' direct represents '1' with '1188'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-1188'
c Encoding variable: aux219 with domain: bool (representing constraint (10<=(grid_00002_00001 + grid_00002_00002 + grid_00002_00003)))
c Var 'aux219' direct represents '0' with '-1189'
c Var 'aux219' direct represents '1' with '1189'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-1189'
c Encoding variable: aux220 with domain: bool (representing constraint ((grid_00002_00005 + grid_00002_00006 + grid_00002_00007)<=8))
c Var 'aux220' direct represents '0' with '-1190'
c Var 'aux220' direct represents '1' with '1190'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-1190'
c Encoding variable: aux221 with domain: bool (representing constraint (8<=(grid_00002_00005 + grid_00002_00006 + grid_00002_00007)))
c Var 'aux221' direct represents '0' with '-1191'
c Var 'aux221' direct represents '1' with '1191'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-1191'
c Encoding variable: aux222 with domain: bool (representing constraint ((grid_00003_00002 + grid_00003_00003 + grid_00003_00004)<=13))
c Var 'aux222' direct represents '0' with '-1192'
c Var 'aux222' direct represents '1' with '1192'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-1192'
c Encoding variable: aux223 with domain: bool (representing constraint (13<=(grid_00003_00002 + grid_00003_00003 + grid_00003_00004)))
c Var 'aux223' direct represents '0' with '-1193'
c Var 'aux223' direct represents '1' with '1193'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-1193'
c Encoding variable: aux224 with domain: bool (representing constraint ((grid_00003_00006 + grid_00003_00007)<=15))
c Var 'aux224' direct represents '0' with '-1194'
c Var 'aux224' direct represents '1' with '1194'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-1194'
c Encoding variable: aux225 with domain: bool (representing constraint (15<=(grid_00003_00006 + grid_00003_00007)))
c Var 'aux225' direct represents '0' with '-1195'
c Var 'aux225' direct represents '1' with '1195'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-1195'
c Encoding variable: aux226 with domain: bool (representing constraint ((grid_00004_00001 + grid_00004_00002)<=9))
c Var 'aux226' direct represents '0' with '-1196'
c Var 'aux226' direct represents '1' with '1196'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-1196'
c Encoding variable: aux227 with domain: bool (representing constraint (9<=(grid_00004_00001 + grid_00004_00002)))
c Var 'aux227' direct represents '0' with '-1197'
c Var 'aux227' direct represents '1' with '1197'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-1197'
c Encoding variable: aux228 with domain: bool (representing constraint ((aux131 + shift(grid_00004_00005, -1) + shift(grid_00004_00006, -1))<=8))
c Var 'aux228' direct represents '0' with '-1198'
c Var 'aux228' direct represents '1' with '1198'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-1198'
c Encoding variable: aux229 with domain: bool (representing constraint (8<=(aux131 + shift(grid_00004_00005, -1) + shift(grid_00004_00006, -1))))
c Var 'aux229' direct represents '0' with '-1199'
c Var 'aux229' direct represents '1' with '1199'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-1199'
c Encoding variable: aux230 with domain: bool (representing constraint ((grid_00005_00001 + grid_00005_00002)<=12))
c Var 'aux230' direct represents '0' with '-1200'
c Var 'aux230' direct represents '1' with '1200'
c Var 'aux230' order represents '1' with '1'
c Var 'aux230' order represents '0' with '-1200'
c Encoding variable: aux231 with domain: bool (representing constraint (12<=(grid_00005_00001 + grid_00005_00002)))
c Var 'aux231' direct represents '0' with '-1201'
c Var 'aux231' direct represents '1' with '1201'
c Var 'aux231' order represents '1' with '1'
c Var 'aux231' order represents '0' with '-1201'
c Encoding variable: aux232 with domain: bool (representing constraint ((aux132 + shift(grid_00005_00005, -1) + shift(grid_00005_00006, -1))<=23))
c Var 'aux232' direct represents '0' with '-1202'
c Var 'aux232' direct represents '1' with '1202'
c Var 'aux232' order represents '1' with '1'
c Var 'aux232' order represents '0' with '-1202'
c Encoding variable: aux233 with domain: bool (representing constraint (23<=(aux132 + shift(grid_00005_00005, -1) + shift(grid_00005_00006, -1))))
c Var 'aux233' direct represents '0' with '-1203'
c Var 'aux233' direct represents '1' with '1203'
c Var 'aux233' order represents '1' with '1'
c Var 'aux233' order represents '0' with '-1203'
c (((aux126 + shift(grid_00005_00007, -1) + shift(grid_00004_00007, -1))<=17)=tv=SATLiteral(1166))
-1166 336 789 0
-1166 338 787 0
-1166 340 785 0
-1166 342 783 0
-1166 344 781 0
-1166 346 779 0
-1166 348 777 0
-1166 427 335 789 0
-1166 427 336 787 0
-1166 427 338 785 0
-1166 427 340 783 0
-1166 427 342 781 0
-1166 427 344 779 0
-1166 427 346 777 0
-1166 427 348 775 0
-1166 428 789 0
-1166 428 335 787 0
-1166 428 336 785 0
-1166 428 338 783 0
-1166 428 340 781 0
-1166 428 342 779 0
-1166 428 344 777 0
-1166 428 346 775 0
-1166 428 348 773 0
-1166 430 787 0
-1166 430 335 785 0
-1166 430 336 783 0
-1166 430 338 781 0
-1166 430 340 779 0
-1166 430 342 777 0
-1166 430 344 775 0
-1166 430 346 773 0
-1166 430 348 771 0
-1166 432 785 0
-1166 432 335 783 0
-1166 432 336 781 0
-1166 432 338 779 0
-1166 432 340 777 0
-1166 432 342 775 0
-1166 432 344 773 0
-1166 432 346 771 0
-1166 432 348 769 0
-1166 434 783 0
-1166 434 335 781 0
-1166 434 336 779 0
-1166 434 338 777 0
-1166 434 340 775 0
-1166 434 342 773 0
-1166 434 344 771 0
-1166 434 346 769 0
-1166 434 348 767 0
-1166 436 781 0
-1166 436 335 779 0
-1166 436 336 777 0
-1166 436 338 775 0
-1166 436 340 773 0
-1166 436 342 771 0
-1166 436 344 769 0
-1166 436 346 767 0
-1166 436 348 765 0
-1166 438 779 0
-1166 438 335 777 0
-1166 438 336 775 0
-1166 438 338 773 0
-1166 438 340 771 0
-1166 438 342 769 0
-1166 438 344 767 0
-1166 438 346 765 0
-1166 438 348 763 0
-1166 440 777 0
-1166 440 335 775 0
-1166 440 336 773 0
-1166 440 338 771 0
-1166 440 340 769 0
-1166 440 342 767 0
-1166 440 344 765 0
-1166 440 346 763 0
-1166 440 348 761 0
1166 -761 0
1166 -348 -763 0
1166 -346 -765 0
1166 -344 -767 0
1166 -342 -769 0
1166 -340 -771 0
1166 -338 -773 0
1166 -336 -775 0
1166 -335 -777 0
1166 -440 -763 0
1166 -440 -348 -765 0
1166 -440 -346 -767 0
1166 -440 -344 -769 0
1166 -440 -342 -771 0
1166 -440 -340 -773 0
1166 -440 -338 -775 0
1166 -440 -336 -777 0
1166 -440 -335 -779 0
1166 -438 -765 0
1166 -438 -348 -767 0
1166 -438 -346 -769 0
1166 -438 -344 -771 0
1166 -438 -342 -773 0
1166 -438 -340 -775 0
1166 -438 -338 -777 0
1166 -438 -336 -779 0
1166 -438 -335 -781 0
1166 -436 -767 0
1166 -436 -348 -769 0
1166 -436 -346 -771 0
1166 -436 -344 -773 0
1166 -436 -342 -775 0
1166 -436 -340 -777 0
1166 -436 -338 -779 0
1166 -436 -336 -781 0
1166 -436 -335 -783 0
1166 -434 -769 0
1166 -434 -348 -771 0
1166 -434 -346 -773 0
1166 -434 -344 -775 0
1166 -434 -342 -777 0
1166 -434 -340 -779 0
1166 -434 -338 -781 0
1166 -434 -336 -783 0
1166 -434 -335 -785 0
1166 -432 -771 0
1166 -432 -348 -773 0
1166 -432 -346 -775 0
1166 -432 -344 -777 0
1166 -432 -342 -779 0
1166 -432 -340 -781 0
1166 -432 -338 -783 0
1166 -432 -336 -785 0
1166 -432 -335 -787 0
1166 -430 -773 0
1166 -430 -348 -775 0
1166 -430 -346 -777 0
1166 -430 -344 -779 0
1166 -430 -342 -781 0
1166 -430 -340 -783 0
1166 -430 -338 -785 0
1166 -430 -336 -787 0
1166 -430 -335 -789 0
1166 -428 -775 0
1166 -428 -348 -777 0
1166 -428 -346 -779 0
1166 -428 -344 -781 0
1166 -428 -342 -783 0
1166 -428 -340 -785 0
1166 -428 -338 -787 0
1166 -428 -336 -789 0
1166 -428 -335 0
1166 -427 -777 0
1166 -427 -348 -779 0
1166 -427 -346 -781 0
1166 -427 -344 -783 0
1166 -427 -342 -785 0
1166 -427 -340 -787 0
1166 -427 -338 -789 0
1166 -427 -336 0
1166 -427 -335 0
c ((17<=(aux126 + shift(grid_00005_00007, -1) + shift(grid_00004_00007, -1)))=tv=SATLiteral(1167))
-1167 -760 0
-1167 -348 -761 0
-1167 -346 -763 0
-1167 -344 -765 0
-1167 -342 -767 0
-1167 -340 -769 0
-1167 -338 -771 0
-1167 -336 -773 0
-1167 -335 -775 0
-1167 -440 -761 0
-1167 -440 -348 -763 0
-1167 -440 -346 -765 0
-1167 -440 -344 -767 0
-1167 -440 -342 -769 0
-1167 -440 -340 -771 0
-1167 -440 -338 -773 0
-1167 -440 -336 -775 0
-1167 -440 -335 -777 0
-1167 -438 -763 0
-1167 -438 -348 -765 0
-1167 -438 -346 -767 0
-1167 -438 -344 -769 0
-1167 -438 -342 -771 0
-1167 -438 -340 -773 0
-1167 -438 -338 -775 0
-1167 -438 -336 -777 0
-1167 -438 -335 -779 0
-1167 -436 -765 0
-1167 -436 -348 -767 0
-1167 -436 -346 -769 0
-1167 -436 -344 -771 0
-1167 -436 -342 -773 0
-1167 -436 -340 -775 0
-1167 -436 -338 -777 0
-1167 -436 -336 -779 0
-1167 -436 -335 -781 0
-1167 -434 -767 0
-1167 -434 -348 -769 0
-1167 -434 -346 -771 0
-1167 -434 -344 -773 0
-1167 -434 -342 -775 0
-1167 -434 -340 -777 0
-1167 -434 -338 -779 0
-1167 -434 -336 -781 0
-1167 -434 -335 -783 0
-1167 -432 -769 0
-1167 -432 -348 -771 0
-1167 -432 -346 -773 0
-1167 -432 -344 -775 0
-1167 -432 -342 -777 0
-1167 -432 -340 -779 0
-1167 -432 -338 -781 0
-1167 -432 -336 -783 0
-1167 -432 -335 -785 0
-1167 -430 -771 0
-1167 -430 -348 -773 0
-1167 -430 -346 -775 0
-1167 -430 -344 -777 0
-1167 -430 -342 -779 0
-1167 -430 -340 -781 0
-1167 -430 -338 -783 0
-1167 -430 -336 -785 0
-1167 -430 -335 -787 0
-1167 -428 -773 0
-1167 -428 -348 -775 0
-1167 -428 -346 -777 0
-1167 -428 -344 -779 0
-1167 -428 -342 -781 0
-1167 -428 -340 -783 0
-1167 -428 -338 -785 0
-1167 -428 -336 -787 0
-1167 -428 -335 -789 0
-1167 -427 -775 0
-1167 -427 -348 -777 0
-1167 -427 -346 -779 0
-1167 -427 -344 -781 0
-1167 -427 -342 -783 0
-1167 -427 -340 -785 0
-1167 -427 -338 -787 0
-1167 -427 -336 -789 0
-1167 -427 -335 0
1167 335 789 0
1167 336 787 0
1167 338 785 0
1167 340 783 0
1167 342 781 0
1167 344 779 0
1167 346 777 0
1167 348 775 0
1167 427 789 0
1167 427 335 787 0
1167 427 336 785 0
1167 427 338 783 0
1167 427 340 781 0
1167 427 342 779 0
1167 427 344 777 0
1167 427 346 775 0
1167 427 348 773 0
1167 428 787 0
1167 428 335 785 0
1167 428 336 783 0
1167 428 338 781 0
1167 428 340 779 0
1167 428 342 777 0
1167 428 344 775 0
1167 428 346 773 0
1167 428 348 771 0
1167 430 785 0
1167 430 335 783 0
1167 430 336 781 0
1167 430 338 779 0
1167 430 340 777 0
1167 430 342 775 0
1167 430 344 773 0
1167 430 346 771 0
1167 430 348 769 0
1167 432 783 0
1167 432 335 781 0
1167 432 336 779 0
1167 432 338 777 0
1167 432 340 775 0
1167 432 342 773 0
1167 432 344 771 0
1167 432 346 769 0
1167 432 348 767 0
1167 434 781 0
1167 434 335 779 0
1167 434 336 777 0
1167 434 338 775 0
1167 434 340 773 0
1167 434 342 771 0
1167 434 344 769 0
1167 434 346 767 0
1167 434 348 765 0
1167 436 779 0
1167 436 335 777 0
1167 436 336 775 0
1167 436 338 773 0
1167 436 340 771 0
1167 436 342 769 0
1167 436 344 767 0
1167 436 346 765 0
1167 436 348 763 0
1167 438 777 0
1167 438 335 775 0
1167 438 336 773 0
1167 438 338 771 0
1167 438 340 769 0
1167 438 342 767 0
1167 438 344 765 0
1167 438 346 763 0
1167 438 348 761 0
1167 440 775 0
1167 440 335 773 0
1167 440 336 771 0
1167 440 338 769 0
1167 440 340 767 0
1167 440 342 765 0
1167 440 344 763 0
1167 440 346 761 0
1167 440 348 760 0
c (((grid_00003_00004 + grid_00004_00004 + grid_00005_00004)<=22)=tv=SATLiteral(1168))
-1168 217 303 395 0
-1168 219 301 395 0
-1168 219 303 393 0
-1168 221 299 395 0
-1168 221 301 393 0
-1168 221 303 391 0
-1168 223 297 395 0
-1168 223 299 393 0
-1168 223 301 391 0
-1168 223 303 389 0
-1168 225 295 395 0
-1168 225 297 393 0
-1168 225 299 391 0
-1168 225 301 389 0
-1168 225 303 387 0
1168 -387 0
1168 -303 -389 0
1168 -301 -391 0
1168 -299 -393 0
1168 -297 -395 0
1168 -295 0
1168 -293 0
1168 -291 0
1168 -290 0
1168 -225 -389 0
1168 -225 -303 -391 0
1168 -225 -301 -393 0
1168 -225 -299 -395 0
1168 -225 -297 0
1168 -225 -295 0
1168 -225 -293 0
1168 -225 -291 0
1168 -225 -290 0
1168 -223 -391 0
1168 -223 -303 -393 0
1168 -223 -301 -395 0
1168 -223 -299 0
1168 -223 -297 0
1168 -223 -295 0
1168 -223 -293 0
1168 -223 -291 0
1168 -223 -290 0
1168 -221 -393 0
1168 -221 -303 -395 0
1168 -221 -301 0
1168 -221 -299 0
1168 -221 -297 0
1168 -221 -295 0
1168 -221 -293 0
1168 -221 -291 0
1168 -221 -290 0
1168 -219 -395 0
1168 -219 -303 0
1168 -219 -301 0
1168 -219 -299 0
1168 -219 -297 0
1168 -219 -295 0
1168 -219 -293 0
1168 -219 -291 0
1168 -219 -290 0
1168 -217 0
1168 -217 -303 0
1168 -217 -301 0
1168 -217 -299 0
1168 -217 -297 0
1168 -217 -295 0
1168 -217 -293 0
1168 -217 -291 0
1168 -217 -290 0
1168 -215 0
1168 -215 -303 0
1168 -215 -301 0
1168 -215 -299 0
1168 -215 -297 0
1168 -215 -295 0
1168 -215 -293 0
1168 -215 -291 0
1168 -215 -290 0
1168 -213 0
1168 -213 -303 0
1168 -213 -301 0
1168 -213 -299 0
1168 -213 -297 0
1168 -213 -295 0
1168 -213 -293 0
1168 -213 -291 0
1168 -213 -290 0
1168 -212 0
1168 -212 -303 0
1168 -212 -301 0
1168 -212 -299 0
1168 -212 -297 0
1168 -212 -295 0
1168 -212 -293 0
1168 -212 -291 0
1168 -212 -290 0
c ((22<=(grid_00003_00004 + grid_00004_00004 + grid_00005_00004))=tv=SATLiteral(1169))
-1169 -385 0
-1169 -303 -387 0
-1169 -301 -389 0
-1169 -299 -391 0
-1169 -297 -393 0
-1169 -295 -395 0
-1169 -293 0
-1169 -291 0
-1169 -290 0
-1169 -225 -387 0
-1169 -225 -303 -389 0
-1169 -225 -301 -391 0
-1169 -225 -299 -393 0
-1169 -225 -297 -395 0
-1169 -225 -295 0
-1169 -225 -293 0
-1169 -225 -291 0
-1169 -225 -290 0
-1169 -223 -389 0
-1169 -223 -303 -391 0
-1169 -223 -301 -393 0
-1169 -223 -299 -395 0
-1169 -223 -297 0
-1169 -223 -295 0
-1169 -223 -293 0
-1169 -223 -291 0
-1169 -223 -290 0
-1169 -221 -391 0
-1169 -221 -303 -393 0
-1169 -221 -301 -395 0
-1169 -221 -299 0
-1169 -221 -297 0
-1169 -221 -295 0
-1169 -221 -293 0
-1169 -221 -291 0
-1169 -221 -290 0
-1169 -219 -393 0
-1169 -219 -303 -395 0
-1169 -219 -301 0
-1169 -219 -299 0
-1169 -219 -297 0
-1169 -219 -295 0
-1169 -219 -293 0
-1169 -219 -291 0
-1169 -219 -290 0
-1169 -217 -395 0
-1169 -217 -303 0
-1169 -217 -301 0
-1169 -217 -299 0
-1169 -217 -297 0
-1169 -217 -295 0
-1169 -217 -293 0
-1169 -217 -291 0
-1169 -217 -290 0
-1169 -215 0
-1169 -215 -303 0
-1169 -215 -301 0
-1169 -215 -299 0
-1169 -215 -297 0
-1169 -215 -295 0
-1169 -215 -293 0
-1169 -215 -291 0
-1169 -215 -290 0
-1169 -213 0
-1169 -213 -303 0
-1169 -213 -301 0
-1169 -213 -299 0
-1169 -213 -297 0
-1169 -213 -295 0
-1169 -213 -293 0
-1169 -213 -291 0
-1169 -213 -290 0
-1169 -212 0
-1169 -212 -303 0
-1169 -212 -301 0
-1169 -212 -299 0
-1169 -212 -297 0
-1169 -212 -295 0
-1169 -212 -293 0
-1169 -212 -291 0
-1169 -212 -290 0
1169 215 303 395 0
1169 217 301 395 0
1169 217 303 393 0
1169 219 299 395 0
1169 219 301 393 0
1169 219 303 391 0
1169 221 297 395 0
1169 221 299 393 0
1169 221 301 391 0
1169 221 303 389 0
1169 223 295 395 0
1169 223 297 393 0
1169 223 299 391 0
1169 223 301 389 0
1169 223 303 387 0
1169 225 293 395 0
1169 225 295 393 0
1169 225 297 391 0
1169 225 299 389 0
1169 225 301 387 0
1169 225 303 385 0
c (((grid_00001_00001 + grid_00002_00001)<=6)=tv=SATLiteral(1170))
-1170 96 0
-1170 11 94 0
-1170 12 92 0
-1170 14 90 0
-1170 16 89 0
-1170 18 0
-1170 20 0
-1170 22 0
-1170 24 0
1170 -18 -89 0
1170 -16 -90 0
1170 -14 -92 0
1170 -12 -94 0
1170 -11 -96 0
c ((6<=(grid_00001_00001 + grid_00002_00001))=tv=SATLiteral(1171))
-1171 -16 -89 0
-1171 -14 -90 0
-1171 -12 -92 0
-1171 -11 -94 0
1171 94 0
1171 11 92 0
1171 12 90 0
1171 14 89 0
1171 16 0
1171 18 0
1171 20 0
1171 22 0
1171 24 0
c (((aux127 + aux128 + shift(grid_00005_00002, -1))<=28)=tv=SATLiteral(1172))
-1172 814 851 0
-1172 816 849 0
-1172 818 847 0
-1172 820 845 0
-1172 366 812 851 0
-1172 366 814 849 0
-1172 366 816 847 0
-1172 366 818 845 0
-1172 366 820 843 0
-1172 367 810 851 0
-1172 367 812 849 0
-1172 367 814 847 0
-1172 367 816 845 0
-1172 367 818 843 0
-1172 367 820 841 0
-1172 369 808 851 0
-1172 369 810 849 0
-1172 369 812 847 0
-1172 369 814 845 0
-1172 369 816 843 0
-1172 369 818 841 0
-1172 369 820 839 0
-1172 371 806 851 0
-1172 371 808 849 0
-1172 371 810 847 0
-1172 371 812 845 0
-1172 371 814 843 0
-1172 371 816 841 0
-1172 371 818 839 0
-1172 371 820 837 0
-1172 373 804 851 0
-1172 373 806 849 0
-1172 373 808 847 0
-1172 373 810 845 0
-1172 373 812 843 0
-1172 373 814 841 0
-1172 373 816 839 0
-1172 373 818 837 0
-1172 373 820 835 0
-1172 375 802 851 0
-1172 375 804 849 0
-1172 375 806 847 0
-1172 375 808 845 0
-1172 375 810 843 0
-1172 375 812 841 0
-1172 375 814 839 0
-1172 375 816 837 0
-1172 375 818 835 0
-1172 375 820 833 0
-1172 377 800 851 0
-1172 377 802 849 0
-1172 377 804 847 0
-1172 377 806 845 0
-1172 377 808 843 0
-1172 377 810 841 0
-1172 377 812 839 0
-1172 377 814 837 0
-1172 377 816 835 0
-1172 377 818 833 0
-1172 377 820 831 0
-1172 379 798 851 0
-1172 379 800 849 0
-1172 379 802 847 0
-1172 379 804 845 0
-1172 379 806 843 0
-1172 379 808 841 0
-1172 379 810 839 0
-1172 379 812 837 0
-1172 379 814 835 0
-1172 379 816 833 0
-1172 379 818 831 0
-1172 379 820 829 0
1172 -829 0
1172 -820 -831 0
1172 -818 -833 0
1172 -816 -835 0
1172 -814 -837 0
1172 -812 -839 0
1172 -810 -841 0
1172 -808 -843 0
1172 -806 -845 0
1172 -804 -847 0
1172 -802 -849 0
1172 -800 -851 0
1172 -798 0
1172 -796 0
1172 -794 0
1172 -792 0
1172 -791 0
1172 -379 -831 0
1172 -379 -820 -833 0
1172 -379 -818 -835 0
1172 -379 -816 -837 0
1172 -379 -814 -839 0
1172 -379 -812 -841 0
1172 -379 -810 -843 0
1172 -379 -808 -845 0
1172 -379 -806 -847 0
1172 -379 -804 -849 0
1172 -379 -802 -851 0
1172 -379 -800 0
1172 -379 -798 0
1172 -379 -796 0
1172 -379 -794 0
1172 -379 -792 0
1172 -379 -791 0
1172 -377 -833 0
1172 -377 -820 -835 0
1172 -377 -818 -837 0
1172 -377 -816 -839 0
1172 -377 -814 -841 0
1172 -377 -812 -843 0
1172 -377 -810 -845 0
1172 -377 -808 -847 0
1172 -377 -806 -849 0
1172 -377 -804 -851 0
1172 -377 -802 0
1172 -377 -800 0
1172 -377 -798 0
1172 -377 -796 0
1172 -377 -794 0
1172 -377 -792 0
1172 -377 -791 0
1172 -375 -835 0
1172 -375 -820 -837 0
1172 -375 -818 -839 0
1172 -375 -816 -841 0
1172 -375 -814 -843 0
1172 -375 -812 -845 0
1172 -375 -810 -847 0
1172 -375 -808 -849 0
1172 -375 -806 -851 0
1172 -375 -804 0
1172 -375 -802 0
1172 -375 -800 0
1172 -375 -798 0
1172 -375 -796 0
1172 -375 -794 0
1172 -375 -792 0
1172 -375 -791 0
1172 -373 -837 0
1172 -373 -820 -839 0
1172 -373 -818 -841 0
1172 -373 -816 -843 0
1172 -373 -814 -845 0
1172 -373 -812 -847 0
1172 -373 -810 -849 0
1172 -373 -808 -851 0
1172 -373 -806 0
1172 -373 -804 0
1172 -373 -802 0
1172 -373 -800 0
1172 -373 -798 0
1172 -373 -796 0
1172 -373 -794 0
1172 -373 -792 0
1172 -373 -791 0
1172 -371 -839 0
1172 -371 -820 -841 0
1172 -371 -818 -843 0
1172 -371 -816 -845 0
1172 -371 -814 -847 0
1172 -371 -812 -849 0
1172 -371 -810 -851 0
1172 -371 -808 0
1172 -371 -806 0
1172 -371 -804 0
1172 -371 -802 0
1172 -371 -800 0
1172 -371 -798 0
1172 -371 -796 0
1172 -371 -794 0
1172 -371 -792 0
1172 -371 -791 0
1172 -369 -841 0
1172 -369 -820 -843 0
1172 -369 -818 -845 0
1172 -369 -816 -847 0
1172 -369 -814 -849 0
1172 -369 -812 -851 0
1172 -369 -810 0
1172 -369 -808 0
1172 -369 -806 0
1172 -369 -804 0
1172 -369 -802 0
1172 -369 -800 0
1172 -369 -798 0
1172 -369 -796 0
1172 -369 -794 0
1172 -369 -792 0
1172 -369 -791 0
1172 -367 -843 0
1172 -367 -820 -845 0
1172 -367 -818 -847 0
1172 -367 -816 -849 0
1172 -367 -814 -851 0
1172 -367 -812 0
1172 -367 -810 0
1172 -367 -808 0
1172 -367 -806 0
1172 -367 -804 0
1172 -367 -802 0
1172 -367 -800 0
1172 -367 -798 0
1172 -367 -796 0
1172 -367 -794 0
1172 -367 -792 0
1172 -367 -791 0
1172 -366 -845 0
1172 -366 -820 -847 0
1172 -366 -818 -849 0
1172 -366 -816 -851 0
1172 -366 -814 0
1172 -366 -812 0
1172 -366 -810 0
1172 -366 -808 0
1172 -366 -806 0
1172 -366 -804 0
1172 -366 -802 0
1172 -366 -800 0
1172 -366 -798 0
1172 -366 -796 0
1172 -366 -794 0
1172 -366 -792 0
1172 -366 -791 0
c ((28<=(aux127 + aux128 + shift(grid_00005_00002, -1)))=tv=SATLiteral(1173))
-1173 -827 0
-1173 -820 -829 0
-1173 -818 -831 0
-1173 -816 -833 0
-1173 -814 -835 0
-1173 -812 -837 0
-1173 -810 -839 0
-1173 -808 -841 0
-1173 -806 -843 0
-1173 -804 -845 0
-1173 -802 -847 0
-1173 -800 -849 0
-1173 -798 -851 0
-1173 -796 0
-1173 -794 0
-1173 -792 0
-1173 -791 0
-1173 -379 -829 0
-1173 -379 -820 -831 0
-1173 -379 -818 -833 0
-1173 -379 -816 -835 0
-1173 -379 -814 -837 0
-1173 -379 -812 -839 0
-1173 -379 -810 -841 0
-1173 -379 -808 -843 0
-1173 -379 -806 -845 0
-1173 -379 -804 -847 0
-1173 -379 -802 -849 0
-1173 -379 -800 -851 0
-1173 -379 -798 0
-1173 -379 -796 0
-1173 -379 -794 0
-1173 -379 -792 0
-1173 -379 -791 0
-1173 -377 -831 0
-1173 -377 -820 -833 0
-1173 -377 -818 -835 0
-1173 -377 -816 -837 0
-1173 -377 -814 -839 0
-1173 -377 -812 -841 0
-1173 -377 -810 -843 0
-1173 -377 -808 -845 0
-1173 -377 -806 -847 0
-1173 -377 -804 -849 0
-1173 -377 -802 -851 0
-1173 -377 -800 0
-1173 -377 -798 0
-1173 -377 -796 0
-1173 -377 -794 0
-1173 -377 -792 0
-1173 -377 -791 0
-1173 -375 -833 0
-1173 -375 -820 -835 0
-1173 -375 -818 -837 0
-1173 -375 -816 -839 0
-1173 -375 -814 -841 0
-1173 -375 -812 -843 0
-1173 -375 -810 -845 0
-1173 -375 -808 -847 0
-1173 -375 -806 -849 0
-1173 -375 -804 -851 0
-1173 -375 -802 0
-1173 -375 -800 0
-1173 -375 -798 0
-1173 -375 -796 0
-1173 -375 -794 0
-1173 -375 -792 0
-1173 -375 -791 0
-1173 -373 -835 0
-1173 -373 -820 -837 0
-1173 -373 -818 -839 0
-1173 -373 -816 -841 0
-1173 -373 -814 -843 0
-1173 -373 -812 -845 0
-1173 -373 -810 -847 0
-1173 -373 -808 -849 0
-1173 -373 -806 -851 0
-1173 -373 -804 0
-1173 -373 -802 0
-1173 -373 -800 0
-1173 -373 -798 0
-1173 -373 -796 0
-1173 -373 -794 0
-1173 -373 -792 0
-1173 -373 -791 0
-1173 -371 -837 0
-1173 -371 -820 -839 0
-1173 -371 -818 -841 0
-1173 -371 -816 -843 0
-1173 -371 -814 -845 0
-1173 -371 -812 -847 0
-1173 -371 -810 -849 0
-1173 -371 -808 -851 0
-1173 -371 -806 0
-1173 -371 -804 0
-1173 -371 -802 0
-1173 -371 -800 0
-1173 -371 -798 0
-1173 -371 -796 0
-1173 -371 -794 0
-1173 -371 -792 0
-1173 -371 -791 0
-1173 -369 -839 0
-1173 -369 -820 -841 0
-1173 -369 -818 -843 0
-1173 -369 -816 -845 0
-1173 -369 -814 -847 0
-1173 -369 -812 -849 0
-1173 -369 -810 -851 0
-1173 -369 -808 0
-1173 -369 -806 0
-1173 -369 -804 0
-1173 -369 -802 0
-1173 -369 -800 0
-1173 -369 -798 0
-1173 -369 -796 0
-1173 -369 -794 0
-1173 -369 -792 0
-1173 -369 -791 0
-1173 -367 -841 0
-1173 -367 -820 -843 0
-1173 -367 -818 -845 0
-1173 -367 -816 -847 0
-1173 -367 -814 -849 0
-1173 -367 -812 -851 0
-1173 -367 -810 0
-1173 -367 -808 0
-1173 -367 -806 0
-1173 -367 -804 0
-1173 -367 -802 0
-1173 -367 -800 0
-1173 -367 -798 0
-1173 -367 -796 0
-1173 -367 -794 0
-1173 -367 -792 0
-1173 -367 -791 0
-1173 -366 -843 0
-1173 -366 -820 -845 0
-1173 -366 -818 -847 0
-1173 -366 -816 -849 0
-1173 -366 -814 -851 0
-1173 -366 -812 0
-1173 -366 -810 0
-1173 -366 -808 0
-1173 -366 -806 0
-1173 -366 -804 0
-1173 -366 -802 0
-1173 -366 -800 0
-1173 -366 -798 0
-1173 -366 -796 0
-1173 -366 -794 0
-1173 -366 -792 0
-1173 -366 -791 0
1173 812 851 0
1173 814 849 0
1173 816 847 0
1173 818 845 0
1173 820 843 0
1173 366 810 851 0
1173 366 812 849 0
1173 366 814 847 0
1173 366 816 845 0
1173 366 818 843 0
1173 366 820 841 0
1173 367 808 851 0
1173 367 810 849 0
1173 367 812 847 0
1173 367 814 845 0
1173 367 816 843 0
1173 367 818 841 0
1173 367 820 839 0
1173 369 806 851 0
1173 369 808 849 0
1173 369 810 847 0
1173 369 812 845 0
1173 369 814 843 0
1173 369 816 841 0
1173 369 818 839 0
1173 369 820 837 0
1173 371 804 851 0
1173 371 806 849 0
1173 371 808 847 0
1173 371 810 845 0
1173 371 812 843 0
1173 371 814 841 0
1173 371 816 839 0
1173 371 818 837 0
1173 371 820 835 0
1173 373 802 851 0
1173 373 804 849 0
1173 373 806 847 0
1173 373 808 845 0
1173 373 810 843 0
1173 373 812 841 0
1173 373 814 839 0
1173 373 816 837 0
1173 373 818 835 0
1173 373 820 833 0
1173 375 800 851 0
1173 375 802 849 0
1173 375 804 847 0
1173 375 806 845 0
1173 375 808 843 0
1173 375 810 841 0
1173 375 812 839 0
1173 375 814 837 0
1173 375 816 835 0
1173 375 818 833 0
1173 375 820 831 0
1173 377 798 851 0
1173 377 800 849 0
1173 377 802 847 0
1173 377 804 845 0
1173 377 806 843 0
1173 377 808 841 0
1173 377 810 839 0
1173 377 812 837 0
1173 377 814 835 0
1173 377 816 833 0
1173 377 818 831 0
1173 377 820 829 0
1173 379 796 851 0
1173 379 798 849 0
1173 379 800 847 0
1173 379 802 845 0
1173 379 804 843 0
1173 379 806 841 0
1173 379 808 839 0
1173 379 810 837 0
1173 379 812 835 0
1173 379 814 833 0
1173 379 816 831 0
1173 379 818 829 0
1173 379 820 827 0
c (((grid_00003_00003 + grid_00001_00003 + grid_00002_00003)<=11)=tv=SATLiteral(1174))
-1174 41 132 0
-1174 42 130 0
-1174 44 128 0
-1174 46 126 0
-1174 48 124 0
-1174 50 122 0
-1174 52 120 0
-1174 54 119 0
-1174 197 132 0
-1174 197 41 130 0
-1174 197 42 128 0
-1174 197 44 126 0
-1174 197 46 124 0
-1174 197 48 122 0
-1174 197 50 120 0
-1174 197 52 119 0
-1174 197 54 0
-1174 198 130 0
-1174 198 41 128 0
-1174 198 42 126 0
-1174 198 44 124 0
-1174 198 46 122 0
-1174 198 48 120 0
-1174 198 50 119 0
-1174 198 52 0
-1174 198 54 0
-1174 200 128 0
-1174 200 41 126 0
-1174 200 42 124 0
-1174 200 44 122 0
-1174 200 46 120 0
-1174 200 48 119 0
-1174 200 50 0
-1174 200 52 0
-1174 200 54 0
-1174 202 126 0
-1174 202 41 124 0
-1174 202 42 122 0
-1174 202 44 120 0
-1174 202 46 119 0
-1174 202 48 0
-1174 202 50 0
-1174 202 52 0
-1174 202 54 0
-1174 204 124 0
-1174 204 41 122 0
-1174 204 42 120 0
-1174 204 44 119 0
-1174 204 46 0
-1174 204 48 0
-1174 204 50 0
-1174 204 52 0
-1174 204 54 0
-1174 206 122 0
-1174 206 41 120 0
-1174 206 42 119 0
-1174 206 44 0
-1174 206 46 0
-1174 206 48 0
-1174 206 50 0
-1174 206 52 0
-1174 206 54 0
-1174 208 120 0
-1174 208 41 119 0
-1174 208 42 0
-1174 208 44 0
-1174 208 46 0
-1174 208 48 0
-1174 208 50 0
-1174 208 52 0
-1174 208 54 0
-1174 210 119 0
-1174 210 41 0
-1174 210 42 0
-1174 210 44 0
-1174 210 46 0
-1174 210 48 0
-1174 210 50 0
-1174 210 52 0
-1174 210 54 0
1174 -41 -119 0
1174 -210 -42 -119 0
1174 -210 -41 -120 0
1174 -208 -44 -119 0
1174 -208 -42 -120 0
1174 -208 -41 -122 0
1174 -206 -46 -119 0
1174 -206 -44 -120 0
1174 -206 -42 -122 0
1174 -206 -41 -124 0
1174 -204 -48 -119 0
1174 -204 -46 -120 0
1174 -204 -44 -122 0
1174 -204 -42 -124 0
1174 -204 -41 -126 0
1174 -202 -50 -119 0
1174 -202 -48 -120 0
1174 -202 -46 -122 0
1174 -202 -44 -124 0
1174 -202 -42 -126 0
1174 -202 -41 -128 0
1174 -200 -52 -119 0
1174 -200 -50 -120 0
1174 -200 -48 -122 0
1174 -200 -46 -124 0
1174 -200 -44 -126 0
1174 -200 -42 -128 0
1174 -200 -41 -130 0
1174 -198 -54 -119 0
1174 -198 -52 -120 0
1174 -198 -50 -122 0
1174 -198 -48 -124 0
1174 -198 -46 -126 0
1174 -198 -44 -128 0
1174 -198 -42 -130 0
1174 -198 -41 -132 0
1174 -197 -119 0
1174 -197 -54 -120 0
1174 -197 -52 -122 0
1174 -197 -50 -124 0
1174 -197 -48 -126 0
1174 -197 -46 -128 0
1174 -197 -44 -130 0
1174 -197 -42 -132 0
1174 -197 -41 0
c ((11<=(grid_00003_00003 + grid_00001_00003 + grid_00002_00003))=tv=SATLiteral(1175))
-1175 -210 -41 -119 0
-1175 -208 -42 -119 0
-1175 -208 -41 -120 0
-1175 -206 -44 -119 0
-1175 -206 -42 -120 0
-1175 -206 -41 -122 0
-1175 -204 -46 -119 0
-1175 -204 -44 -120 0
-1175 -204 -42 -122 0
-1175 -204 -41 -124 0
-1175 -202 -48 -119 0
-1175 -202 -46 -120 0
-1175 -202 -44 -122 0
-1175 -202 -42 -124 0
-1175 -202 -41 -126 0
-1175 -200 -50 -119 0
-1175 -200 -48 -120 0
-1175 -200 -46 -122 0
-1175 -200 -44 -124 0
-1175 -200 -42 -126 0
-1175 -200 -41 -128 0
-1175 -198 -52 -119 0
-1175 -198 -50 -120 0
-1175 -198 -48 -122 0
-1175 -198 -46 -124 0
-1175 -198 -44 -126 0
-1175 -198 -42 -128 0
-1175 -198 -41 -130 0
-1175 -197 -54 -119 0
-1175 -197 -52 -120 0
-1175 -197 -50 -122 0
-1175 -197 -48 -124 0
-1175 -197 -46 -126 0
-1175 -197 -44 -128 0
-1175 -197 -42 -130 0
-1175 -197 -41 -132 0
1175 132 0
1175 41 130 0
1175 42 128 0
1175 44 126 0
1175 46 124 0
1175 48 122 0
1175 50 120 0
1175 52 119 0
1175 54 0
1175 197 130 0
1175 197 41 128 0
1175 197 42 126 0
1175 197 44 124 0
1175 197 46 122 0
1175 197 48 120 0
1175 197 50 119 0
1175 197 52 0
1175 197 54 0
1175 198 128 0
1175 198 41 126 0
1175 198 42 124 0
1175 198 44 122 0
1175 198 46 120 0
1175 198 48 119 0
1175 198 50 0
1175 198 52 0
1175 198 54 0
1175 200 126 0
1175 200 41 124 0
1175 200 42 122 0
1175 200 44 120 0
1175 200 46 119 0
1175 200 48 0
1175 200 50 0
1175 200 52 0
1175 200 54 0
1175 202 124 0
1175 202 41 122 0
1175 202 42 120 0
1175 202 44 119 0
1175 202 46 0
1175 202 48 0
1175 202 50 0
1175 202 52 0
1175 202 54 0
1175 204 122 0
1175 204 41 120 0
1175 204 42 119 0
1175 204 44 0
1175 204 46 0
1175 204 48 0
1175 204 50 0
1175 204 52 0
1175 204 54 0
1175 206 120 0
1175 206 41 119 0
1175 206 42 0
1175 206 44 0
1175 206 46 0
1175 206 48 0
1175 206 50 0
1175 206 52 0
1175 206 54 0
1175 208 119 0
1175 208 41 0
1175 208 42 0
1175 208 44 0
1175 208 46 0
1175 208 48 0
1175 208 50 0
1175 208 52 0
1175 208 54 0
1175 210 0
1175 210 41 0
1175 210 42 0
1175 210 44 0
1175 210 46 0
1175 210 48 0
1175 210 50 0
1175 210 52 0
1175 210 54 0
c (((grid_00001_00005 + grid_00002_00005)<=12)=tv=SATLiteral(1176))
-1176 60 148 0
-1176 62 146 0
-1176 64 144 0
-1176 66 142 0
-1176 68 140 0
-1176 70 138 0
1176 -138 0
1176 -70 -140 0
1176 -68 -142 0
1176 -66 -144 0
1176 -64 -146 0
1176 -62 -148 0
1176 -60 0
1176 -58 0
1176 -57 0
c ((12<=(grid_00001_00005 + grid_00002_00005))=tv=SATLiteral(1177))
-1177 -136 0
-1177 -70 -138 0
-1177 -68 -140 0
-1177 -66 -142 0
-1177 -64 -144 0
-1177 -62 -146 0
-1177 -60 -148 0
-1177 -58 0
-1177 -57 0
1177 58 148 0
1177 60 146 0
1177 62 144 0
1177 64 142 0
1177 66 140 0
1177 68 138 0
1177 70 136 0
c (((aux129 + aux130 + shift(grid_00005_00006, -1))<=11)=tv=SATLiteral(1178))
-1178 905 0
-1178 853 903 0
-1178 854 901 0
-1178 856 899 0
-1178 858 897 0
-1178 860 895 0
-1178 862 893 0
-1178 864 891 0
-1178 866 889 0
-1178 868 887 0
-1178 870 885 0
-1178 872 884 0
-1178 874 0
-1178 876 0
-1178 878 0
-1178 880 0
-1178 882 0
-1178 412 903 0
-1178 412 853 901 0
-1178 412 854 899 0
-1178 412 856 897 0
-1178 412 858 895 0
-1178 412 860 893 0
-1178 412 862 891 0
-1178 412 864 889 0
-1178 412 866 887 0
-1178 412 868 885 0
-1178 412 870 884 0
-1178 412 872 0
-1178 412 874 0
-1178 412 876 0
-1178 412 878 0
-1178 412 880 0
-1178 412 882 0
-1178 413 901 0
-1178 413 853 899 0
-1178 413 854 897 0
-1178 413 856 895 0
-1178 413 858 893 0
-1178 413 860 891 0
-1178 413 862 889 0
-1178 413 864 887 0
-1178 413 866 885 0
-1178 413 868 884 0
-1178 413 870 0
-1178 413 872 0
-1178 413 874 0
-1178 413 876 0
-1178 413 878 0
-1178 413 880 0
-1178 413 882 0
-1178 415 899 0
-1178 415 853 897 0
-1178 415 854 895 0
-1178 415 856 893 0
-1178 415 858 891 0
-1178 415 860 889 0
-1178 415 862 887 0
-1178 415 864 885 0
-1178 415 866 884 0
-1178 415 868 0
-1178 415 870 0
-1178 415 872 0
-1178 415 874 0
-1178 415 876 0
-1178 415 878 0
-1178 415 880 0
-1178 415 882 0
-1178 417 897 0
-1178 417 853 895 0
-1178 417 854 893 0
-1178 417 856 891 0
-1178 417 858 889 0
-1178 417 860 887 0
-1178 417 862 885 0
-1178 417 864 884 0
-1178 417 866 0
-1178 417 868 0
-1178 417 870 0
-1178 417 872 0
-1178 417 874 0
-1178 417 876 0
-1178 417 878 0
-1178 417 880 0
-1178 417 882 0
-1178 419 895 0
-1178 419 853 893 0
-1178 419 854 891 0
-1178 419 856 889 0
-1178 419 858 887 0
-1178 419 860 885 0
-1178 419 862 884 0
-1178 419 864 0
-1178 419 866 0
-1178 419 868 0
-1178 419 870 0
-1178 419 872 0
-1178 419 874 0
-1178 419 876 0
-1178 419 878 0
-1178 419 880 0
-1178 419 882 0
-1178 421 893 0
-1178 421 853 891 0
-1178 421 854 889 0
-1178 421 856 887 0
-1178 421 858 885 0
-1178 421 860 884 0
-1178 421 862 0
-1178 421 864 0
-1178 421 866 0
-1178 421 868 0
-1178 421 870 0
-1178 421 872 0
-1178 421 874 0
-1178 421 876 0
-1178 421 878 0
-1178 421 880 0
-1178 421 882 0
-1178 423 891 0
-1178 423 853 889 0
-1178 423 854 887 0
-1178 423 856 885 0
-1178 423 858 884 0
-1178 423 860 0
-1178 423 862 0
-1178 423 864 0
-1178 423 866 0
-1178 423 868 0
-1178 423 870 0
-1178 423 872 0
-1178 423 874 0
-1178 423 876 0
-1178 423 878 0
-1178 423 880 0
-1178 423 882 0
-1178 425 889 0
-1178 425 853 887 0
-1178 425 854 885 0
-1178 425 856 884 0
-1178 425 858 0
-1178 425 860 0
-1178 425 862 0
-1178 425 864 0
-1178 425 866 0
-1178 425 868 0
-1178 425 870 0
-1178 425 872 0
-1178 425 874 0
-1178 425 876 0
-1178 425 878 0
-1178 425 880 0
-1178 425 882 0
1178 -858 -884 0
1178 -856 -885 0
1178 -854 -887 0
1178 -853 -889 0
1178 -425 -860 -884 0
1178 -425 -858 -885 0
1178 -425 -856 -887 0
1178 -425 -854 -889 0
1178 -425 -853 -891 0
1178 -423 -862 -884 0
1178 -423 -860 -885 0
1178 -423 -858 -887 0
1178 -423 -856 -889 0
1178 -423 -854 -891 0
1178 -423 -853 -893 0
1178 -421 -864 -884 0
1178 -421 -862 -885 0
1178 -421 -860 -887 0
1178 -421 -858 -889 0
1178 -421 -856 -891 0
1178 -421 -854 -893 0
1178 -421 -853 -895 0
1178 -419 -866 -884 0
1178 -419 -864 -885 0
1178 -419 -862 -887 0
1178 -419 -860 -889 0
1178 -419 -858 -891 0
1178 -419 -856 -893 0
1178 -419 -854 -895 0
1178 -419 -853 -897 0
1178 -417 -868 -884 0
1178 -417 -866 -885 0
1178 -417 -864 -887 0
1178 -417 -862 -889 0
1178 -417 -860 -891 0
1178 -417 -858 -893 0
1178 -417 -856 -895 0
1178 -417 -854 -897 0
1178 -417 -853 -899 0
1178 -415 -870 -884 0
1178 -415 -868 -885 0
1178 -415 -866 -887 0
1178 -415 -864 -889 0
1178 -415 -862 -891 0
1178 -415 -860 -893 0
1178 -415 -858 -895 0
1178 -415 -856 -897 0
1178 -415 -854 -899 0
1178 -415 -853 -901 0
1178 -413 -872 -884 0
1178 -413 -870 -885 0
1178 -413 -868 -887 0
1178 -413 -866 -889 0
1178 -413 -864 -891 0
1178 -413 -862 -893 0
1178 -413 -860 -895 0
1178 -413 -858 -897 0
1178 -413 -856 -899 0
1178 -413 -854 -901 0
1178 -413 -853 -903 0
1178 -412 -874 -884 0
1178 -412 -872 -885 0
1178 -412 -870 -887 0
1178 -412 -868 -889 0
1178 -412 -866 -891 0
1178 -412 -864 -893 0
1178 -412 -862 -895 0
1178 -412 -860 -897 0
1178 -412 -858 -899 0
1178 -412 -856 -901 0
1178 -412 -854 -903 0
1178 -412 -853 -905 0
c ((11<=(aux129 + aux130 + shift(grid_00005_00006, -1)))=tv=SATLiteral(1179))
-1179 -856 -884 0
-1179 -854 -885 0
-1179 -853 -887 0
-1179 -425 -858 -884 0
-1179 -425 -856 -885 0
-1179 -425 -854 -887 0
-1179 -425 -853 -889 0
-1179 -423 -860 -884 0
-1179 -423 -858 -885 0
-1179 -423 -856 -887 0
-1179 -423 -854 -889 0
-1179 -423 -853 -891 0
-1179 -421 -862 -884 0
-1179 -421 -860 -885 0
-1179 -421 -858 -887 0
-1179 -421 -856 -889 0
-1179 -421 -854 -891 0
-1179 -421 -853 -893 0
-1179 -419 -864 -884 0
-1179 -419 -862 -885 0
-1179 -419 -860 -887 0
-1179 -419 -858 -889 0
-1179 -419 -856 -891 0
-1179 -419 -854 -893 0
-1179 -419 -853 -895 0
-1179 -417 -866 -884 0
-1179 -417 -864 -885 0
-1179 -417 -862 -887 0
-1179 -417 -860 -889 0
-1179 -417 -858 -891 0
-1179 -417 -856 -893 0
-1179 -417 -854 -895 0
-1179 -417 -853 -897 0
-1179 -415 -868 -884 0
-1179 -415 -866 -885 0
-1179 -415 -864 -887 0
-1179 -415 -862 -889 0
-1179 -415 -860 -891 0
-1179 -415 -858 -893 0
-1179 -415 -856 -895 0
-1179 -415 -854 -897 0
-1179 -415 -853 -899 0
-1179 -413 -870 -884 0
-1179 -413 -868 -885 0
-1179 -413 -866 -887 0
-1179 -413 -864 -889 0
-1179 -413 -862 -891 0
-1179 -413 -860 -893 0
-1179 -413 -858 -895 0
-1179 -413 -856 -897 0
-1179 -413 -854 -899 0
-1179 -413 -853 -901 0
-1179 -412 -872 -884 0
-1179 -412 -870 -885 0
-1179 -412 -868 -887 0
-1179 -412 -866 -889 0
-1179 -412 -864 -891 0
-1179 -412 -862 -893 0
-1179 -412 -860 -895 0
-1179 -412 -858 -897 0
-1179 -412 -856 -899 0
-1179 -412 -854 -901 0
-1179 -412 -853 -903 0
1179 903 0
1179 853 901 0
1179 854 899 0
1179 856 897 0
1179 858 895 0
1179 860 893 0
1179 862 891 0
1179 864 889 0
1179 866 887 0
1179 868 885 0
1179 870 884 0
1179 872 0
1179 874 0
1179 876 0
1179 878 0
1179 880 0
1179 882 0
1179 412 901 0
1179 412 853 899 0
1179 412 854 897 0
1179 412 856 895 0
1179 412 858 893 0
1179 412 860 891 0
1179 412 862 889 0
1179 412 864 887 0
1179 412 866 885 0
1179 412 868 884 0
1179 412 870 0
1179 412 872 0
1179 412 874 0
1179 412 876 0
1179 412 878 0
1179 412 880 0
1179 412 882 0
1179 413 899 0
1179 413 853 897 0
1179 413 854 895 0
1179 413 856 893 0
1179 413 858 891 0
1179 413 860 889 0
1179 413 862 887 0
1179 413 864 885 0
1179 413 866 884 0
1179 413 868 0
1179 413 870 0
1179 413 872 0
1179 413 874 0
1179 413 876 0
1179 413 878 0
1179 413 880 0
1179 413 882 0
1179 415 897 0
1179 415 853 895 0
1179 415 854 893 0
1179 415 856 891 0
1179 415 858 889 0
1179 415 860 887 0
1179 415 862 885 0
1179 415 864 884 0
1179 415 866 0
1179 415 868 0
1179 415 870 0
1179 415 872 0
1179 415 874 0
1179 415 876 0
1179 415 878 0
1179 415 880 0
1179 415 882 0
1179 417 895 0
1179 417 853 893 0
1179 417 854 891 0
1179 417 856 889 0
1179 417 858 887 0
1179 417 860 885 0
1179 417 862 884 0
1179 417 864 0
1179 417 866 0
1179 417 868 0
1179 417 870 0
1179 417 872 0
1179 417 874 0
1179 417 876 0
1179 417 878 0
1179 417 880 0
1179 417 882 0
1179 419 893 0
1179 419 853 891 0
1179 419 854 889 0
1179 419 856 887 0
1179 419 858 885 0
1179 419 860 884 0
1179 419 862 0
1179 419 864 0
1179 419 866 0
1179 419 868 0
1179 419 870 0
1179 419 872 0
1179 419 874 0
1179 419 876 0
1179 419 878 0
1179 419 880 0
1179 419 882 0
1179 421 891 0
1179 421 853 889 0
1179 421 854 887 0
1179 421 856 885 0
1179 421 858 884 0
1179 421 860 0
1179 421 862 0
1179 421 864 0
1179 421 866 0
1179 421 868 0
1179 421 870 0
1179 421 872 0
1179 421 874 0
1179 421 876 0
1179 421 878 0
1179 421 880 0
1179 421 882 0
1179 423 889 0
1179 423 853 887 0
1179 423 854 885 0
1179 423 856 884 0
1179 423 858 0
1179 423 860 0
1179 423 862 0
1179 423 864 0
1179 423 866 0
1179 423 868 0
1179 423 870 0
1179 423 872 0
1179 423 874 0
1179 423 876 0
1179 423 878 0
1179 423 880 0
1179 423 882 0
1179 425 887 0
1179 425 853 885 0
1179 425 854 884 0
1179 425 856 0
1179 425 858 0
1179 425 860 0
1179 425 862 0
1179 425 864 0
1179 425 866 0
1179 425 868 0
1179 425 870 0
1179 425 872 0
1179 425 874 0
1179 425 876 0
1179 425 878 0
1179 425 880 0
1179 425 882 0
c (((grid_00004_00001 + grid_00005_00001)<=7)=tv=SATLiteral(1180))
-1180 360 0
-1180 259 358 0
-1180 260 356 0
-1180 262 354 0
-1180 264 352 0
-1180 266 351 0
-1180 268 0
-1180 270 0
-1180 272 0
1180 -268 -351 0
1180 -266 -352 0
1180 -264 -354 0
1180 -262 -356 0
1180 -260 -358 0
1180 -259 -360 0
c ((7<=(grid_00004_00001 + grid_00005_00001))=tv=SATLiteral(1181))
-1181 -266 -351 0
-1181 -264 -352 0
-1181 -262 -354 0
-1181 -260 -356 0
-1181 -259 -358 0
1181 358 0
1181 259 356 0
1181 260 354 0
1181 262 352 0
1181 264 351 0
1181 266 0
1181 268 0
1181 270 0
1181 272 0
c (((grid_00004_00005 + grid_00005_00005)<=13)=tv=SATLiteral(1182))
-1182 310 410 0
-1182 312 408 0
-1182 314 406 0
-1182 316 404 0
-1182 318 402 0
1182 -402 0
1182 -318 -404 0
1182 -316 -406 0
1182 -314 -408 0
1182 -312 -410 0
1182 -310 0
1182 -308 0
1182 -306 0
1182 -305 0
c ((13<=(grid_00004_00005 + grid_00005_00005))=tv=SATLiteral(1183))
-1183 -400 0
-1183 -318 -402 0
-1183 -316 -404 0
-1183 -314 -406 0
-1183 -312 -408 0
-1183 -310 -410 0
-1183 -308 0
-1183 -306 0
-1183 -305 0
1183 308 410 0
1183 310 408 0
1183 312 406 0
1183 314 404 0
1183 316 402 0
1183 318 400 0
c (((grid_00001_00001 + grid_00001_00002 + grid_00001_00003)<=22)=tv=SATLiteral(1184))
-1184 16 39 54 0
-1184 18 37 54 0
-1184 18 39 52 0
-1184 20 35 54 0
-1184 20 37 52 0
-1184 20 39 50 0
-1184 22 33 54 0
-1184 22 35 52 0
-1184 22 37 50 0
-1184 22 39 48 0
-1184 24 31 54 0
-1184 24 33 52 0
-1184 24 35 50 0
-1184 24 37 48 0
-1184 24 39 46 0
1184 -46 0
1184 -39 -48 0
1184 -37 -50 0
1184 -35 -52 0
1184 -33 -54 0
1184 -31 0
1184 -29 0
1184 -27 0
1184 -26 0
1184 -24 -48 0
1184 -24 -39 -50 0
1184 -24 -37 -52 0
1184 -24 -35 -54 0
1184 -24 -33 0
1184 -24 -31 0
1184 -24 -29 0
1184 -24 -27 0
1184 -24 -26 0
1184 -22 -50 0
1184 -22 -39 -52 0
1184 -22 -37 -54 0
1184 -22 -35 0
1184 -22 -33 0
1184 -22 -31 0
1184 -22 -29 0
1184 -22 -27 0
1184 -22 -26 0
1184 -20 -52 0
1184 -20 -39 -54 0
1184 -20 -37 0
1184 -20 -35 0
1184 -20 -33 0
1184 -20 -31 0
1184 -20 -29 0
1184 -20 -27 0
1184 -20 -26 0
1184 -18 -54 0
1184 -18 -39 0
1184 -18 -37 0
1184 -18 -35 0
1184 -18 -33 0
1184 -18 -31 0
1184 -18 -29 0
1184 -18 -27 0
1184 -18 -26 0
1184 -16 0
1184 -16 -39 0
1184 -16 -37 0
1184 -16 -35 0
1184 -16 -33 0
1184 -16 -31 0
1184 -16 -29 0
1184 -16 -27 0
1184 -16 -26 0
1184 -14 0
1184 -14 -39 0
1184 -14 -37 0
1184 -14 -35 0
1184 -14 -33 0
1184 -14 -31 0
1184 -14 -29 0
1184 -14 -27 0
1184 -14 -26 0
1184 -12 0
1184 -12 -39 0
1184 -12 -37 0
1184 -12 -35 0
1184 -12 -33 0
1184 -12 -31 0
1184 -12 -29 0
1184 -12 -27 0
1184 -12 -26 0
1184 -11 0
1184 -11 -39 0
1184 -11 -37 0
1184 -11 -35 0
1184 -11 -33 0
1184 -11 -31 0
1184 -11 -29 0
1184 -11 -27 0
1184 -11 -26 0
c ((22<=(grid_00001_00001 + grid_00001_00002 + grid_00001_00003))=tv=SATLiteral(1185))
-1185 -44 0
-1185 -39 -46 0
-1185 -37 -48 0
-1185 -35 -50 0
-1185 -33 -52 0
-1185 -31 -54 0
-1185 -29 0
-1185 -27 0
-1185 -26 0
-1185 -24 -46 0
-1185 -24 -39 -48 0
-1185 -24 -37 -50 0
-1185 -24 -35 -52 0
-1185 -24 -33 -54 0
-1185 -24 -31 0
-1185 -24 -29 0
-1185 -24 -27 0
-1185 -24 -26 0
-1185 -22 -48 0
-1185 -22 -39 -50 0
-1185 -22 -37 -52 0
-1185 -22 -35 -54 0
-1185 -22 -33 0
-1185 -22 -31 0
-1185 -22 -29 0
-1185 -22 -27 0
-1185 -22 -26 0
-1185 -20 -50 0
-1185 -20 -39 -52 0
-1185 -20 -37 -54 0
-1185 -20 -35 0
-1185 -20 -33 0
-1185 -20 -31 0
-1185 -20 -29 0
-1185 -20 -27 0
-1185 -20 -26 0
-1185 -18 -52 0
-1185 -18 -39 -54 0
-1185 -18 -37 0
-1185 -18 -35 0
-1185 -18 -33 0
-1185 -18 -31 0
-1185 -18 -29 0
-1185 -18 -27 0
-1185 -18 -26 0
-1185 -16 -54 0
-1185 -16 -39 0
-1185 -16 -37 0
-1185 -16 -35 0
-1185 -16 -33 0
-1185 -16 -31 0
-1185 -16 -29 0
-1185 -16 -27 0
-1185 -16 -26 0
-1185 -14 0
-1185 -14 -39 0
-1185 -14 -37 0
-1185 -14 -35 0
-1185 -14 -33 0
-1185 -14 -31 0
-1185 -14 -29 0
-1185 -14 -27 0
-1185 -14 -26 0
-1185 -12 0
-1185 -12 -39 0
-1185 -12 -37 0
-1185 -12 -35 0
-1185 -12 -33 0
-1185 -12 -31 0
-1185 -12 -29 0
-1185 -12 -27 0
-1185 -12 -26 0
-1185 -11 0
-1185 -11 -39 0
-1185 -11 -37 0
-1185 -11 -35 0
-1185 -11 -33 0
-1185 -11 -31 0
-1185 -11 -29 0
-1185 -11 -27 0
-1185 -11 -26 0
1185 14 39 54 0
1185 16 37 54 0
1185 16 39 52 0
1185 18 35 54 0
1185 18 37 52 0
1185 18 39 50 0
1185 20 33 54 0
1185 20 35 52 0
1185 20 37 50 0
1185 20 39 48 0
1185 22 31 54 0
1185 22 33 52 0
1185 22 35 50 0
1185 22 37 48 0
1185 22 39 46 0
1185 24 29 54 0
1185 24 31 52 0
1185 24 33 50 0
1185 24 35 48 0
1185 24 37 46 0
1185 24 39 44 0
c (((grid_00001_00005 + grid_00001_00006)<=13)=tv=SATLiteral(1186))
-1186 62 85 0
-1186 64 83 0
-1186 66 81 0
-1186 68 79 0
-1186 70 77 0
1186 -77 0
1186 -70 -79 0
1186 -68 -81 0
1186 -66 -83 0
1186 -64 -85 0
1186 -62 0
1186 -60 0
1186 -58 0
1186 -57 0
c ((13<=(grid_00001_00005 + grid_00001_00006))=tv=SATLiteral(1187))
-1187 -75 0
-1187 -70 -77 0
-1187 -68 -79 0
-1187 -66 -81 0
-1187 -64 -83 0
-1187 -62 -85 0
-1187 -60 0
-1187 -58 0
-1187 -57 0
1187 60 85 0
1187 62 83 0
1187 64 81 0
1187 66 79 0
1187 68 77 0
1187 70 75 0
c (((grid_00002_00001 + grid_00002_00002 + grid_00002_00003)<=10)=tv=SATLiteral(1188))
-1188 132 0
-1188 104 130 0
-1188 105 128 0
-1188 107 126 0
-1188 109 124 0
-1188 111 122 0
-1188 113 120 0
-1188 115 119 0
-1188 117 0
-1188 89 130 0
-1188 89 104 128 0
-1188 89 105 126 0
-1188 89 107 124 0
-1188 89 109 122 0
-1188 89 111 120 0
-1188 89 113 119 0
-1188 89 115 0
-1188 89 117 0
-1188 90 128 0
-1188 90 104 126 0
-1188 90 105 124 0
-1188 90 107 122 0
-1188 90 109 120 0
-1188 90 111 119 0
-1188 90 113 0
-1188 90 115 0
-1188 90 117 0
-1188 92 126 0
-1188 92 104 124 0
-1188 92 105 122 0
-1188 92 107 120 0
-1188 92 109 119 0
-1188 92 111 0
-1188 92 113 0
-1188 92 115 0
-1188 92 117 0
-1188 94 124 0
-1188 94 104 122 0
-1188 94 105 120 0
-1188 94 107 119 0
-1188 94 109 0
-1188 94 111 0
-1188 94 113 0
-1188 94 115 0
-1188 94 117 0
-1188 96 122 0
-1188 96 104 120 0
-1188 96 105 119 0
-1188 96 107 0
-1188 96 109 0
-1188 96 111 0
-1188 96 113 0
-1188 96 115 0
-1188 96 117 0
-1188 98 120 0
-1188 98 104 119 0
-1188 98 105 0
-1188 98 107 0
-1188 98 109 0
-1188 98 111 0
-1188 98 113 0
-1188 98 115 0
-1188 98 117 0
-1188 100 119 0
-1188 100 104 0
-1188 100 105 0
-1188 100 107 0
-1188 100 109 0
-1188 100 111 0
-1188 100 113 0
-1188 100 115 0
-1188 100 117 0
-1188 102 0
-1188 102 104 0
-1188 102 105 0
-1188 102 107 0
-1188 102 109 0
-1188 102 111 0
-1188 102 113 0
-1188 102 115 0
-1188 102 117 0
1188 -102 -104 -119 0
1188 -100 -105 -119 0
1188 -100 -104 -120 0
1188 -98 -107 -119 0
1188 -98 -105 -120 0
1188 -98 -104 -122 0
1188 -96 -109 -119 0
1188 -96 -107 -120 0
1188 -96 -105 -122 0
1188 -96 -104 -124 0
1188 -94 -111 -119 0
1188 -94 -109 -120 0
1188 -94 -107 -122 0
1188 -94 -105 -124 0
1188 -94 -104 -126 0
1188 -92 -113 -119 0
1188 -92 -111 -120 0
1188 -92 -109 -122 0
1188 -92 -107 -124 0
1188 -92 -105 -126 0
1188 -92 -104 -128 0
1188 -90 -115 -119 0
1188 -90 -113 -120 0
1188 -90 -111 -122 0
1188 -90 -109 -124 0
1188 -90 -107 -126 0
1188 -90 -105 -128 0
1188 -90 -104 -130 0
1188 -89 -117 -119 0
1188 -89 -115 -120 0
1188 -89 -113 -122 0
1188 -89 -111 -124 0
1188 -89 -109 -126 0
1188 -89 -107 -128 0
1188 -89 -105 -130 0
1188 -89 -104 -132 0
c ((10<=(grid_00002_00001 + grid_00002_00002 + grid_00002_00003))=tv=SATLiteral(1189))
-1189 -100 -104 -119 0
-1189 -98 -105 -119 0
-1189 -98 -104 -120 0
-1189 -96 -107 -119 0
-1189 -96 -105 -120 0
-1189 -96 -104 -122 0
-1189 -94 -109 -119 0
-1189 -94 -107 -120 0
-1189 -94 -105 -122 0
-1189 -94 -104 -124 0
-1189 -92 -111 -119 0
-1189 -92 -109 -120 0
-1189 -92 -107 -122 0
-1189 -92 -105 -124 0
-1189 -92 -104 -126 0
-1189 -90 -113 -119 0
-1189 -90 -111 -120 0
-1189 -90 -109 -122 0
-1189 -90 -107 -124 0
-1189 -90 -105 -126 0
-1189 -90 -104 -128 0
-1189 -89 -115 -119 0
-1189 -89 -113 -120 0
-1189 -89 -111 -122 0
-1189 -89 -109 -124 0
-1189 -89 -107 -126 0
-1189 -89 -105 -128 0
-1189 -89 -104 -130 0
1189 130 0
1189 104 128 0
1189 105 126 0
1189 107 124 0
1189 109 122 0
1189 111 120 0
1189 113 119 0
1189 115 0
1189 117 0
1189 89 128 0
1189 89 104 126 0
1189 89 105 124 0
1189 89 107 122 0
1189 89 109 120 0
1189 89 111 119 0
1189 89 113 0
1189 89 115 0
1189 89 117 0
1189 90 126 0
1189 90 104 124 0
1189 90 105 122 0
1189 90 107 120 0
1189 90 109 119 0
1189 90 111 0
1189 90 113 0
1189 90 115 0
1189 90 117 0
1189 92 124 0
1189 92 104 122 0
1189 92 105 120 0
1189 92 107 119 0
1189 92 109 0
1189 92 111 0
1189 92 113 0
1189 92 115 0
1189 92 117 0
1189 94 122 0
1189 94 104 120 0
1189 94 105 119 0
1189 94 107 0
1189 94 109 0
1189 94 111 0
1189 94 113 0
1189 94 115 0
1189 94 117 0
1189 96 120 0
1189 96 104 119 0
1189 96 105 0
1189 96 107 0
1189 96 109 0
1189 96 111 0
1189 96 113 0
1189 96 115 0
1189 96 117 0
1189 98 119 0
1189 98 104 0
1189 98 105 0
1189 98 107 0
1189 98 109 0
1189 98 111 0
1189 98 113 0
1189 98 115 0
1189 98 117 0
1189 100 0
1189 100 104 0
1189 100 105 0
1189 100 107 0
1189 100 109 0
1189 100 111 0
1189 100 113 0
1189 100 115 0
1189 100 117 0
1189 102 0
1189 102 104 0
1189 102 105 0
1189 102 107 0
1189 102 109 0
1189 102 111 0
1189 102 113 0
1189 102 115 0
1189 102 117 0
c (((grid_00002_00005 + grid_00002_00006 + grid_00002_00007)<=8)=tv=SATLiteral(1190))
-1190 174 0
-1190 150 172 0
-1190 151 170 0
-1190 153 168 0
-1190 155 166 0
-1190 157 165 0
-1190 159 0
-1190 161 0
-1190 163 0
-1190 135 172 0
-1190 135 150 170 0
-1190 135 151 168 0
-1190 135 153 166 0
-1190 135 155 165 0
-1190 135 157 0
-1190 135 159 0
-1190 135 161 0
-1190 135 163 0
-1190 136 170 0
-1190 136 150 168 0
-1190 136 151 166 0
-1190 136 153 165 0
-1190 136 155 0
-1190 136 157 0
-1190 136 159 0
-1190 136 161 0
-1190 136 163 0
-1190 138 168 0
-1190 138 150 166 0
-1190 138 151 165 0
-1190 138 153 0
-1190 138 155 0
-1190 138 157 0
-1190 138 159 0
-1190 138 161 0
-1190 138 163 0
-1190 140 166 0
-1190 140 150 165 0
-1190 140 151 0
-1190 140 153 0
-1190 140 155 0
-1190 140 157 0
-1190 140 159 0
-1190 140 161 0
-1190 140 163 0
-1190 142 165 0
-1190 142 150 0
-1190 142 151 0
-1190 142 153 0
-1190 142 155 0
-1190 142 157 0
-1190 142 159 0
-1190 142 161 0
-1190 142 163 0
-1190 144 0
-1190 144 150 0
-1190 144 151 0
-1190 144 153 0
-1190 144 155 0
-1190 144 157 0
-1190 144 159 0
-1190 144 161 0
-1190 144 163 0
-1190 146 0
-1190 146 150 0
-1190 146 151 0
-1190 146 153 0
-1190 146 155 0
-1190 146 157 0
-1190 146 159 0
-1190 146 161 0
-1190 146 163 0
-1190 148 0
-1190 148 150 0
-1190 148 151 0
-1190 148 153 0
-1190 148 155 0
-1190 148 157 0
-1190 148 159 0
-1190 148 161 0
-1190 148 163 0
1190 -144 -150 -165 0
1190 -142 -151 -165 0
1190 -142 -150 -166 0
1190 -140 -153 -165 0
1190 -140 -151 -166 0
1190 -140 -150 -168 0
1190 -138 -155 -165 0
1190 -138 -153 -166 0
1190 -138 -151 -168 0
1190 -138 -150 -170 0
1190 -136 -157 -165 0
1190 -136 -155 -166 0
1190 -136 -153 -168 0
1190 -136 -151 -170 0
1190 -136 -150 -172 0
1190 -135 -159 -165 0
1190 -135 -157 -166 0
1190 -135 -155 -168 0
1190 -135 -153 -170 0
1190 -135 -151 -172 0
1190 -135 -150 -174 0
c ((8<=(grid_00002_00005 + grid_00002_00006 + grid_00002_00007))=tv=SATLiteral(1191))
-1191 -142 -150 -165 0
-1191 -140 -151 -165 0
-1191 -140 -150 -166 0
-1191 -138 -153 -165 0
-1191 -138 -151 -166 0
-1191 -138 -150 -168 0
-1191 -136 -155 -165 0
-1191 -136 -153 -166 0
-1191 -136 -151 -168 0
-1191 -136 -150 -170 0
-1191 -135 -157 -165 0
-1191 -135 -155 -166 0
-1191 -135 -153 -168 0
-1191 -135 -151 -170 0
-1191 -135 -150 -172 0
1191 172 0
1191 150 170 0
1191 151 168 0
1191 153 166 0
1191 155 165 0
1191 157 0
1191 159 0
1191 161 0
1191 163 0
1191 135 170 0
1191 135 150 168 0
1191 135 151 166 0
1191 135 153 165 0
1191 135 155 0
1191 135 157 0
1191 135 159 0
1191 135 161 0
1191 135 163 0
1191 136 168 0
1191 136 150 166 0
1191 136 151 165 0
1191 136 153 0
1191 136 155 0
1191 136 157 0
1191 136 159 0
1191 136 161 0
1191 136 163 0
1191 138 166 0
1191 138 150 165 0
1191 138 151 0
1191 138 153 0
1191 138 155 0
1191 138 157 0
1191 138 159 0
1191 138 161 0
1191 138 163 0
1191 140 165 0
1191 140 150 0
1191 140 151 0
1191 140 153 0
1191 140 155 0
1191 140 157 0
1191 140 159 0
1191 140 161 0
1191 140 163 0
1191 142 0
1191 142 150 0
1191 142 151 0
1191 142 153 0
1191 142 155 0
1191 142 157 0
1191 142 159 0
1191 142 161 0
1191 142 163 0
1191 144 0
1191 144 150 0
1191 144 151 0
1191 144 153 0
1191 144 155 0
1191 144 157 0
1191 144 159 0
1191 144 161 0
1191 144 163 0
1191 146 0
1191 146 150 0
1191 146 151 0
1191 146 153 0
1191 146 155 0
1191 146 157 0
1191 146 159 0
1191 146 161 0
1191 146 163 0
1191 148 0
1191 148 150 0
1191 148 151 0
1191 148 153 0
1191 148 155 0
1191 148 157 0
1191 148 159 0
1191 148 161 0
1191 148 163 0
c (((grid_00003_00002 + grid_00003_00003 + grid_00003_00004)<=13)=tv=SATLiteral(1192))
-1192 200 225 0
-1192 202 223 0
-1192 204 221 0
-1192 206 219 0
-1192 208 217 0
-1192 210 215 0
-1192 182 198 225 0
-1192 182 200 223 0
-1192 182 202 221 0
-1192 182 204 219 0
-1192 182 206 217 0
-1192 182 208 215 0
-1192 182 210 213 0
-1192 183 197 225 0
-1192 183 198 223 0
-1192 183 200 221 0
-1192 183 202 219 0
-1192 183 204 217 0
-1192 183 206 215 0
-1192 183 208 213 0
-1192 183 210 212 0
-1192 185 225 0
-1192 185 197 223 0
-1192 185 198 221 0
-1192 185 200 219 0
-1192 185 202 217 0
-1192 185 204 215 0
-1192 185 206 213 0
-1192 185 208 212 0
-1192 185 210 0
-1192 187 223 0
-1192 187 197 221 0
-1192 187 198 219 0
-1192 187 200 217 0
-1192 187 202 215 0
-1192 187 204 213 0
-1192 187 206 212 0
-1192 187 208 0
-1192 187 210 0
-1192 189 221 0
-1192 189 197 219 0
-1192 189 198 217 0
-1192 189 200 215 0
-1192 189 202 213 0
-1192 189 204 212 0
-1192 189 206 0
-1192 189 208 0
-1192 189 210 0
-1192 191 219 0
-1192 191 197 217 0
-1192 191 198 215 0
-1192 191 200 213 0
-1192 191 202 212 0
-1192 191 204 0
-1192 191 206 0
-1192 191 208 0
-1192 191 210 0
-1192 193 217 0
-1192 193 197 215 0
-1192 193 198 213 0
-1192 193 200 212 0
-1192 193 202 0
-1192 193 204 0
-1192 193 206 0
-1192 193 208 0
-1192 193 210 0
-1192 195 215 0
-1192 195 197 213 0
-1192 195 198 212 0
-1192 195 200 0
-1192 195 202 0
-1192 195 204 0
-1192 195 206 0
-1192 195 208 0
-1192 195 210 0
1192 -200 -212 0
1192 -198 -213 0
1192 -197 -215 0
1192 -195 -202 -212 0
1192 -195 -200 -213 0
1192 -195 -198 -215 0
1192 -195 -197 -217 0
1192 -193 -204 -212 0
1192 -193 -202 -213 0
1192 -193 -200 -215 0
1192 -193 -198 -217 0
1192 -193 -197 -219 0
1192 -191 -206 -212 0
1192 -191 -204 -213 0
1192 -191 -202 -215 0
1192 -191 -200 -217 0
1192 -191 -198 -219 0
1192 -191 -197 -221 0
1192 -189 -208 -212 0
1192 -189 -206 -213 0
1192 -189 -204 -215 0
1192 -189 -202 -217 0
1192 -189 -200 -219 0
1192 -189 -198 -221 0
1192 -189 -197 -223 0
1192 -187 -210 -212 0
1192 -187 -208 -213 0
1192 -187 -206 -215 0
1192 -187 -204 -217 0
1192 -187 -202 -219 0
1192 -187 -200 -221 0
1192 -187 -198 -223 0
1192 -187 -197 -225 0
1192 -185 -212 0
1192 -185 -210 -213 0
1192 -185 -208 -215 0
1192 -185 -206 -217 0
1192 -185 -204 -219 0
1192 -185 -202 -221 0
1192 -185 -200 -223 0
1192 -185 -198 -225 0
1192 -185 -197 0
1192 -183 -213 0
1192 -183 -210 -215 0
1192 -183 -208 -217 0
1192 -183 -206 -219 0
1192 -183 -204 -221 0
1192 -183 -202 -223 0
1192 -183 -200 -225 0
1192 -183 -198 0
1192 -183 -197 0
1192 -182 -215 0
1192 -182 -210 -217 0
1192 -182 -208 -219 0
1192 -182 -206 -221 0
1192 -182 -204 -223 0
1192 -182 -202 -225 0
1192 -182 -200 0
1192 -182 -198 0
1192 -182 -197 0
c ((13<=(grid_00003_00002 + grid_00003_00003 + grid_00003_00004))=tv=SATLiteral(1193))
-1193 -198 -212 0
-1193 -197 -213 0
-1193 -195 -200 -212 0
-1193 -195 -198 -213 0
-1193 -195 -197 -215 0
-1193 -193 -202 -212 0
-1193 -193 -200 -213 0
-1193 -193 -198 -215 0
-1193 -193 -197 -217 0
-1193 -191 -204 -212 0
-1193 -191 -202 -213 0
-1193 -191 -200 -215 0
-1193 -191 -198 -217 0
-1193 -191 -197 -219 0
-1193 -189 -206 -212 0
-1193 -189 -204 -213 0
-1193 -189 -202 -215 0
-1193 -189 -200 -217 0
-1193 -189 -198 -219 0
-1193 -189 -197 -221 0
-1193 -187 -208 -212 0
-1193 -187 -206 -213 0
-1193 -187 -204 -215 0
-1193 -187 -202 -217 0
-1193 -187 -200 -219 0
-1193 -187 -198 -221 0
-1193 -187 -197 -223 0
-1193 -185 -210 -212 0
-1193 -185 -208 -213 0
-1193 -185 -206 -215 0
-1193 -185 -204 -217 0
-1193 -185 -202 -219 0
-1193 -185 -200 -221 0
-1193 -185 -198 -223 0
-1193 -185 -197 -225 0
-1193 -183 -212 0
-1193 -183 -210 -213 0
-1193 -183 -208 -215 0
-1193 -183 -206 -217 0
-1193 -183 -204 -219 0
-1193 -183 -202 -221 0
-1193 -183 -200 -223 0
-1193 -183 -198 -225 0
-1193 -183 -197 0
-1193 -182 -213 0
-1193 -182 -210 -215 0
-1193 -182 -208 -217 0
-1193 -182 -206 -219 0
-1193 -182 -204 -221 0
-1193 -182 -202 -223 0
-1193 -182 -200 -225 0
-1193 -182 -198 0
-1193 -182 -197 0
1193 198 225 0
1193 200 223 0
1193 202 221 0
1193 204 219 0
1193 206 217 0
1193 208 215 0
1193 210 213 0
1193 182 197 225 0
1193 182 198 223 0
1193 182 200 221 0
1193 182 202 219 0
1193 182 204 217 0
1193 182 206 215 0
1193 182 208 213 0
1193 182 210 212 0
1193 183 225 0
1193 183 197 223 0
1193 183 198 221 0
1193 183 200 219 0
1193 183 202 217 0
1193 183 204 215 0
1193 183 206 213 0
1193 183 208 212 0
1193 183 210 0
1193 185 223 0
1193 185 197 221 0
1193 185 198 219 0
1193 185 200 217 0
1193 185 202 215 0
1193 185 204 213 0
1193 185 206 212 0
1193 185 208 0
1193 185 210 0
1193 187 221 0
1193 187 197 219 0
1193 187 198 217 0
1193 187 200 215 0
1193 187 202 213 0
1193 187 204 212 0
1193 187 206 0
1193 187 208 0
1193 187 210 0
1193 189 219 0
1193 189 197 217 0
1193 189 198 215 0
1193 189 200 213 0
1193 189 202 212 0
1193 189 204 0
1193 189 206 0
1193 189 208 0
1193 189 210 0
1193 191 217 0
1193 191 197 215 0
1193 191 198 213 0
1193 191 200 212 0
1193 191 202 0
1193 191 204 0
1193 191 206 0
1193 191 208 0
1193 191 210 0
1193 193 215 0
1193 193 197 213 0
1193 193 198 212 0
1193 193 200 0
1193 193 202 0
1193 193 204 0
1193 193 206 0
1193 193 208 0
1193 193 210 0
1193 195 213 0
1193 195 197 212 0
1193 195 198 0
1193 195 200 0
1193 195 202 0
1193 195 204 0
1193 195 206 0
1193 195 208 0
1193 195 210 0
c (((grid_00003_00006 + grid_00003_00007)<=15)=tv=SATLiteral(1194))
-1194 237 256 0
-1194 239 254 0
-1194 241 252 0
1194 -252 0
1194 -241 -254 0
1194 -239 -256 0
1194 -237 0
1194 -235 0
1194 -233 0
1194 -231 0
1194 -229 0
1194 -228 0
c ((15<=(grid_00003_00006 + grid_00003_00007))=tv=SATLiteral(1195))
-1195 -250 0
-1195 -241 -252 0
-1195 -239 -254 0
-1195 -237 -256 0
-1195 -235 0
-1195 -233 0
-1195 -231 0
-1195 -229 0
-1195 -228 0
1195 235 256 0
1195 237 254 0
1195 239 252 0
1195 241 250 0
c (((grid_00004_00001 + grid_00004_00002)<=9)=tv=SATLiteral(1196))
-1196 287 0
-1196 259 285 0
-1196 260 283 0
-1196 262 281 0
-1196 264 279 0
-1196 266 277 0
-1196 268 275 0
-1196 270 274 0
-1196 272 0
1196 -272 -274 0
1196 -270 -275 0
1196 -268 -277 0
1196 -266 -279 0
1196 -264 -281 0
1196 -262 -283 0
1196 -260 -285 0
1196 -259 -287 0
c ((9<=(grid_00004_00001 + grid_00004_00002))=tv=SATLiteral(1197))
-1197 -270 -274 0
-1197 -268 -275 0
-1197 -266 -277 0
-1197 -264 -279 0
-1197 -262 -281 0
-1197 -260 -283 0
-1197 -259 -285 0
1197 285 0
1197 259 283 0
1197 260 281 0
1197 262 279 0
1197 264 277 0
1197 266 275 0
1197 268 274 0
1197 270 0
1197 272 0
c (((aux131 + shift(grid_00004_00005, -1) + shift(grid_00004_00006, -1))<=8)=tv=SATLiteral(1198))
-1198 930 0
-1198 320 928 0
-1198 321 926 0
-1198 323 924 0
-1198 325 922 0
-1198 327 920 0
-1198 329 918 0
-1198 331 916 0
-1198 333 915 0
-1198 305 928 0
-1198 305 320 926 0
-1198 305 321 924 0
-1198 305 323 922 0
-1198 305 325 920 0
-1198 305 327 918 0
-1198 305 329 916 0
-1198 305 331 915 0
-1198 305 333 0
-1198 306 926 0
-1198 306 320 924 0
-1198 306 321 922 0
-1198 306 323 920 0
-1198 306 325 918 0
-1198 306 327 916 0
-1198 306 329 915 0
-1198 306 331 0
-1198 306 333 0
-1198 308 924 0
-1198 308 320 922 0
-1198 308 321 920 0
-1198 308 323 918 0
-1198 308 325 916 0
-1198 308 327 915 0
-1198 308 329 0
-1198 308 331 0
-1198 308 333 0
-1198 310 922 0
-1198 310 320 920 0
-1198 310 321 918 0
-1198 310 323 916 0
-1198 310 325 915 0
-1198 310 327 0
-1198 310 329 0
-1198 310 331 0
-1198 310 333 0
-1198 312 920 0
-1198 312 320 918 0
-1198 312 321 916 0
-1198 312 323 915 0
-1198 312 325 0
-1198 312 327 0
-1198 312 329 0
-1198 312 331 0
-1198 312 333 0
-1198 314 918 0
-1198 314 320 916 0
-1198 314 321 915 0
-1198 314 323 0
-1198 314 325 0
-1198 314 327 0
-1198 314 329 0
-1198 314 331 0
-1198 314 333 0
-1198 316 916 0
-1198 316 320 915 0
-1198 316 321 0
-1198 316 323 0
-1198 316 325 0
-1198 316 327 0
-1198 316 329 0
-1198 316 331 0
-1198 316 333 0
-1198 318 915 0
-1198 318 320 0
-1198 318 321 0
-1198 318 323 0
-1198 318 325 0
-1198 318 327 0
-1198 318 329 0
-1198 318 331 0
-1198 318 333 0
1198 -320 -915 0
1198 -318 -321 -915 0
1198 -318 -320 -916 0
1198 -316 -323 -915 0
1198 -316 -321 -916 0
1198 -316 -320 -918 0
1198 -314 -325 -915 0
1198 -314 -323 -916 0
1198 -314 -321 -918 0
1198 -314 -320 -920 0
1198 -312 -327 -915 0
1198 -312 -325 -916 0
1198 -312 -323 -918 0
1198 -312 -321 -920 0
1198 -312 -320 -922 0
1198 -310 -329 -915 0
1198 -310 -327 -916 0
1198 -310 -325 -918 0
1198 -310 -323 -920 0
1198 -310 -321 -922 0
1198 -310 -320 -924 0
1198 -308 -331 -915 0
1198 -308 -329 -916 0
1198 -308 -327 -918 0
1198 -308 -325 -920 0
1198 -308 -323 -922 0
1198 -308 -321 -924 0
1198 -308 -320 -926 0
1198 -306 -333 -915 0
1198 -306 -331 -916 0
1198 -306 -329 -918 0
1198 -306 -327 -920 0
1198 -306 -325 -922 0
1198 -306 -323 -924 0
1198 -306 -321 -926 0
1198 -306 -320 -928 0
1198 -305 -915 0
1198 -305 -333 -916 0
1198 -305 -331 -918 0
1198 -305 -329 -920 0
1198 -305 -327 -922 0
1198 -305 -325 -924 0
1198 -305 -323 -926 0
1198 -305 -321 -928 0
1198 -305 -320 -930 0
c ((8<=(aux131 + shift(grid_00004_00005, -1) + shift(grid_00004_00006, -1)))=tv=SATLiteral(1199))
-1199 -318 -320 -915 0
-1199 -316 -321 -915 0
-1199 -316 -320 -916 0
-1199 -314 -323 -915 0
-1199 -314 -321 -916 0
-1199 -314 -320 -918 0
-1199 -312 -325 -915 0
-1199 -312 -323 -916 0
-1199 -312 -321 -918 0
-1199 -312 -320 -920 0
-1199 -310 -327 -915 0
-1199 -310 -325 -916 0
-1199 -310 -323 -918 0
-1199 -310 -321 -920 0
-1199 -310 -320 -922 0
-1199 -308 -329 -915 0
-1199 -308 -327 -916 0
-1199 -308 -325 -918 0
-1199 -308 -323 -920 0
-1199 -308 -321 -922 0
-1199 -308 -320 -924 0
-1199 -306 -331 -915 0
-1199 -306 -329 -916 0
-1199 -306 -327 -918 0
-1199 -306 -325 -920 0
-1199 -306 -323 -922 0
-1199 -306 -321 -924 0
-1199 -306 -320 -926 0
-1199 -305 -333 -915 0
-1199 -305 -331 -916 0
-1199 -305 -329 -918 0
-1199 -305 -327 -920 0
-1199 -305 -325 -922 0
-1199 -305 -323 -924 0
-1199 -305 -321 -926 0
-1199 -305 -320 -928 0
1199 928 0
1199 320 926 0
1199 321 924 0
1199 323 922 0
1199 325 920 0
1199 327 918 0
1199 329 916 0
1199 331 915 0
1199 333 0
1199 305 926 0
1199 305 320 924 0
1199 305 321 922 0
1199 305 323 920 0
1199 305 325 918 0
1199 305 327 916 0
1199 305 329 915 0
1199 305 331 0
1199 305 333 0
1199 306 924 0
1199 306 320 922 0
1199 306 321 920 0
1199 306 323 918 0
1199 306 325 916 0
1199 306 327 915 0
1199 306 329 0
1199 306 331 0
1199 306 333 0
1199 308 922 0
1199 308 320 920 0
1199 308 321 918 0
1199 308 323 916 0
1199 308 325 915 0
1199 308 327 0
1199 308 329 0
1199 308 331 0
1199 308 333 0
1199 310 920 0
1199 310 320 918 0
1199 310 321 916 0
1199 310 323 915 0
1199 310 325 0
1199 310 327 0
1199 310 329 0
1199 310 331 0
1199 310 333 0
1199 312 918 0
1199 312 320 916 0
1199 312 321 915 0
1199 312 323 0
1199 312 325 0
1199 312 327 0
1199 312 329 0
1199 312 331 0
1199 312 333 0
1199 314 916 0
1199 314 320 915 0
1199 314 321 0
1199 314 323 0
1199 314 325 0
1199 314 327 0
1199 314 329 0
1199 314 331 0
1199 314 333 0
1199 316 915 0
1199 316 320 0
1199 316 321 0
1199 316 323 0
1199 316 325 0
1199 316 327 0
1199 316 329 0
1199 316 331 0
1199 316 333 0
1199 318 0
1199 318 320 0
1199 318 321 0
1199 318 323 0
1199 318 325 0
1199 318 327 0
1199 318 329 0
1199 318 331 0
1199 318 333 0
c (((grid_00005_00001 + grid_00005_00002)<=12)=tv=SATLiteral(1200))
-1200 354 379 0
-1200 356 377 0
-1200 358 375 0
-1200 360 373 0
-1200 362 371 0
-1200 364 369 0
1200 -369 0
1200 -364 -371 0
1200 -362 -373 0
1200 -360 -375 0
1200 -358 -377 0
1200 -356 -379 0
1200 -354 0
1200 -352 0
1200 -351 0
c ((12<=(grid_00005_00001 + grid_00005_00002))=tv=SATLiteral(1201))
-1201 -367 0
-1201 -364 -369 0
-1201 -362 -371 0
-1201 -360 -373 0
-1201 -358 -375 0
-1201 -356 -377 0
-1201 -354 -379 0
-1201 -352 0
-1201 -351 0
1201 352 379 0
1201 354 377 0
1201 356 375 0
1201 358 373 0
1201 360 371 0
1201 362 369 0
1201 364 367 0
c (((aux132 + shift(grid_00005_00005, -1) + shift(grid_00005_00006, -1))<=23)=tv=SATLiteral(1202))
-1202 425 975 0
-1202 397 423 975 0
-1202 397 425 973 0
-1202 398 421 975 0
-1202 398 423 973 0
-1202 398 425 971 0
-1202 400 419 975 0
-1202 400 421 973 0
-1202 400 423 971 0
-1202 400 425 969 0
-1202 402 417 975 0
-1202 402 419 973 0
-1202 402 421 971 0
-1202 402 423 969 0
-1202 402 425 967 0
-1202 404 415 975 0
-1202 404 417 973 0
-1202 404 419 971 0
-1202 404 421 969 0
-1202 404 423 967 0
-1202 404 425 965 0
-1202 406 413 975 0
-1202 406 415 973 0
-1202 406 417 971 0
-1202 406 419 969 0
-1202 406 421 967 0
-1202 406 423 965 0
-1202 406 425 963 0
-1202 408 412 975 0
-1202 408 413 973 0
-1202 408 415 971 0
-1202 408 417 969 0
-1202 408 419 967 0
-1202 408 421 965 0
-1202 408 423 963 0
-1202 408 425 961 0
-1202 410 975 0
-1202 410 412 973 0
-1202 410 413 971 0
-1202 410 415 969 0
-1202 410 417 967 0
-1202 410 419 965 0
-1202 410 421 963 0
-1202 410 423 961 0
-1202 410 425 959 0
1202 -959 0
1202 -425 -961 0
1202 -423 -963 0
1202 -421 -965 0
1202 -419 -967 0
1202 -417 -969 0
1202 -415 -971 0
1202 -413 -973 0
1202 -412 -975 0
1202 -410 -961 0
1202 -410 -425 -963 0
1202 -410 -423 -965 0
1202 -410 -421 -967 0
1202 -410 -419 -969 0
1202 -410 -417 -971 0
1202 -410 -415 -973 0
1202 -410 -413 -975 0
1202 -410 -412 0
1202 -408 -963 0
1202 -408 -425 -965 0
1202 -408 -423 -967 0
1202 -408 -421 -969 0
1202 -408 -419 -971 0
1202 -408 -417 -973 0
1202 -408 -415 -975 0
1202 -408 -413 0
1202 -408 -412 0
1202 -406 -965 0
1202 -406 -425 -967 0
1202 -406 -423 -969 0
1202 -406 -421 -971 0
1202 -406 -419 -973 0
1202 -406 -417 -975 0
1202 -406 -415 0
1202 -406 -413 0
1202 -406 -412 0
1202 -404 -967 0
1202 -404 -425 -969 0
1202 -404 -423 -971 0
1202 -404 -421 -973 0
1202 -404 -419 -975 0
1202 -404 -417 0
1202 -404 -415 0
1202 -404 -413 0
1202 -404 -412 0
1202 -402 -969 0
1202 -402 -425 -971 0
1202 -402 -423 -973 0
1202 -402 -421 -975 0
1202 -402 -419 0
1202 -402 -417 0
1202 -402 -415 0
1202 -402 -413 0
1202 -402 -412 0
1202 -400 -971 0
1202 -400 -425 -973 0
1202 -400 -423 -975 0
1202 -400 -421 0
1202 -400 -419 0
1202 -400 -417 0
1202 -400 -415 0
1202 -400 -413 0
1202 -400 -412 0
1202 -398 -973 0
1202 -398 -425 -975 0
1202 -398 -423 0
1202 -398 -421 0
1202 -398 -419 0
1202 -398 -417 0
1202 -398 -415 0
1202 -398 -413 0
1202 -398 -412 0
1202 -397 -975 0
1202 -397 -425 0
1202 -397 -423 0
1202 -397 -421 0
1202 -397 -419 0
1202 -397 -417 0
1202 -397 -415 0
1202 -397 -413 0
1202 -397 -412 0
c ((23<=(aux132 + shift(grid_00005_00005, -1) + shift(grid_00005_00006, -1)))=tv=SATLiteral(1203))
-1203 -957 0
-1203 -425 -959 0
-1203 -423 -961 0
-1203 -421 -963 0
-1203 -419 -965 0
-1203 -417 -967 0
-1203 -415 -969 0
-1203 -413 -971 0
-1203 -412 -973 0
-1203 -410 -959 0
-1203 -410 -425 -961 0
-1203 -410 -423 -963 0
-1203 -410 -421 -965 0
-1203 -410 -419 -967 0
-1203 -410 -417 -969 0
-1203 -410 -415 -971 0
-1203 -410 -413 -973 0
-1203 -410 -412 -975 0
-1203 -408 -961 0
-1203 -408 -425 -963 0
-1203 -408 -423 -965 0
-1203 -408 -421 -967 0
-1203 -408 -419 -969 0
-1203 -408 -417 -971 0
-1203 -408 -415 -973 0
-1203 -408 -413 -975 0
-1203 -408 -412 0
-1203 -406 -963 0
-1203 -406 -425 -965 0
-1203 -406 -423 -967 0
-1203 -406 -421 -969 0
-1203 -406 -419 -971 0
-1203 -406 -417 -973 0
-1203 -406 -415 -975 0
-1203 -406 -413 0
-1203 -406 -412 0
-1203 -404 -965 0
-1203 -404 -425 -967 0
-1203 -404 -423 -969 0
-1203 -404 -421 -971 0
-1203 -404 -419 -973 0
-1203 -404 -417 -975 0
-1203 -404 -415 0
-1203 -404 -413 0
-1203 -404 -412 0
-1203 -402 -967 0
-1203 -402 -425 -969 0
-1203 -402 -423 -971 0
-1203 -402 -421 -973 0
-1203 -402 -419 -975 0
-1203 -402 -417 0
-1203 -402 -415 0
-1203 -402 -413 0
-1203 -402 -412 0
-1203 -400 -969 0
-1203 -400 -425 -971 0
-1203 -400 -423 -973 0
-1203 -400 -421 -975 0
-1203 -400 -419 0
-1203 -400 -417 0
-1203 -400 -415 0
-1203 -400 -413 0
-1203 -400 -412 0
-1203 -398 -971 0
-1203 -398 -425 -973 0
-1203 -398 -423 -975 0
-1203 -398 -421 0
-1203 -398 -419 0
-1203 -398 -417 0
-1203 -398 -415 0
-1203 -398 -413 0
-1203 -398 -412 0
-1203 -397 -973 0
-1203 -397 -425 -975 0
-1203 -397 -423 0
-1203 -397 -421 0
-1203 -397 -419 0
-1203 -397 -417 0
-1203 -397 -415 0
-1203 -397 -413 0
-1203 -397 -412 0
1203 423 975 0
1203 425 973 0
1203 397 421 975 0
1203 397 423 973 0
1203 397 425 971 0
1203 398 419 975 0
1203 398 421 973 0
1203 398 423 971 0
1203 398 425 969 0
1203 400 417 975 0
1203 400 419 973 0
1203 400 421 971 0
1203 400 423 969 0
1203 400 425 967 0
1203 402 415 975 0
1203 402 417 973 0
1203 402 419 971 0
1203 402 421 969 0
1203 402 423 967 0
1203 402 425 965 0
1203 404 413 975 0
1203 404 415 973 0
1203 404 417 971 0
1203 404 419 969 0
1203 404 421 967 0
1203 404 423 965 0
1203 404 425 963 0
1203 406 412 975 0
1203 406 413 973 0
1203 406 415 971 0
1203 406 417 969 0
1203 406 419 967 0
1203 406 421 965 0
1203 406 423 963 0
1203 406 425 961 0
1203 408 975 0
1203 408 412 973 0
1203 408 413 971 0
1203 408 415 969 0
1203 408 417 967 0
1203 408 419 965 0
1203 408 421 963 0
1203 408 423 961 0
1203 408 425 959 0
1203 410 973 0
1203 410 412 971 0
1203 410 413 969 0
1203 410 415 967 0
1203 410 417 965 0
1203 410 419 963 0
1203 410 421 961 0
1203 410 423 959 0
1203 410 425 957 0
c ((grid_00001_00001 != grid_00002_00001)=tv=SATLiteral(634))
-11 89 634 0
-13 91 634 0
-15 93 634 0
-17 95 634 0
-19 97 634 0
-21 99 634 0
-23 101 634 0
-25 103 634 0
24 -102 634 0
-89 11 634 0
-91 13 634 0
-93 15 634 0
-95 17 634 0
-97 19 634 0
-99 21 634 0
-101 23 634 0
-103 25 634 0
102 -24 634 0
-11 -89 -634 0
-13 -91 -634 0
-15 -93 -634 0
-17 -95 -634 0
-19 -97 -634 0
-21 -99 -634 0
-23 -101 -634 0
-25 -103 -634 0
24 102 -634 0
c ((grid_00001_00005 != grid_00002_00005)=tv=SATLiteral(635))
-57 135 635 0
-59 137 635 0
-61 139 635 0
-63 141 635 0
-65 143 635 0
-67 145 635 0
-69 147 635 0
-71 149 635 0
70 -148 635 0
-135 57 635 0
-137 59 635 0
-139 61 635 0
-141 63 635 0
-143 65 635 0
-145 67 635 0
-147 69 635 0
-149 71 635 0
148 -70 635 0
-57 -135 -635 0
-59 -137 -635 0
-61 -139 -635 0
-63 -141 -635 0
-65 -143 -635 0
-67 -145 -635 0
-69 -147 -635 0
-71 -149 -635 0
70 148 -635 0
c ((grid_00004_00001 != grid_00005_00001)=tv=SATLiteral(636))
-259 351 636 0
-261 353 636 0
-263 355 636 0
-265 357 636 0
-267 359 636 0
-269 361 636 0
-271 363 636 0
-273 365 636 0
272 -364 636 0
-351 259 636 0
-353 261 636 0
-355 263 636 0
-357 265 636 0
-359 267 636 0
-361 269 636 0
-363 271 636 0
-365 273 636 0
364 -272 636 0
-259 -351 -636 0
-261 -353 -636 0
-263 -355 -636 0
-265 -357 -636 0
-267 -359 -636 0
-269 -361 -636 0
-271 -363 -636 0
-273 -365 -636 0
272 364 -636 0
c ((grid_00004_00005 != grid_00005_00005)=tv=SATLiteral(637))
-305 397 637 0
-307 399 637 0
-309 401 637 0
-311 403 637 0
-313 405 637 0
-315 407 637 0
-317 409 637 0
-319 411 637 0
318 -410 637 0
-397 305 637 0
-399 307 637 0
-401 309 637 0
-403 311 637 0
-405 313 637 0
-407 315 637 0
-409 317 637 0
-411 319 637 0
410 -318 637 0
-305 -397 -637 0
-307 -399 -637 0
-309 -401 -637 0
-311 -403 -637 0
-313 -405 -637 0
-315 -407 -637 0
-317 -409 -637 0
-319 -411 -637 0
318 410 -637 0
c ((SATLiteral(1166) /\ SATLiteral(1167))=tv=SATLiteral(638))
638 -1166 -1167 0
1166 -638 0
1167 -638 0
c ((SATLiteral(1168) /\ SATLiteral(1169))=tv=SATLiteral(639))
639 -1168 -1169 0
1168 -639 0
1169 -639 0
c ((SATLiteral(1170) /\ SATLiteral(1171))=tv=SATLiteral(640))
640 -1170 -1171 0
1170 -640 0
1171 -640 0
c ((SATLiteral(1172) /\ SATLiteral(1173))=tv=SATLiteral(641))
641 -1172 -1173 0
1172 -641 0
1173 -641 0
c ((SATLiteral(1174) /\ SATLiteral(1175))=tv=SATLiteral(642))
642 -1174 -1175 0
1174 -642 0
1175 -642 0
c ((SATLiteral(1176) /\ SATLiteral(1177))=tv=SATLiteral(643))
643 -1176 -1177 0
1176 -643 0
1177 -643 0
c ((SATLiteral(1178) /\ SATLiteral(1179))=tv=SATLiteral(644))
644 -1178 -1179 0
1178 -644 0
1179 -644 0
c ((SATLiteral(1180) /\ SATLiteral(1181))=tv=SATLiteral(645))
645 -1180 -1181 0
1180 -645 0
1181 -645 0
c ((SATLiteral(1182) /\ SATLiteral(1183))=tv=SATLiteral(646))
646 -1182 -1183 0
1182 -646 0
1183 -646 0
c ((grid_00001_00005 != grid_00001_00006)=tv=SATLiteral(647))
-57 72 647 0
-59 74 647 0
-61 76 647 0
-63 78 647 0
-65 80 647 0
-67 82 647 0
-69 84 647 0
-71 86 647 0
70 -85 647 0
-72 57 647 0
-74 59 647 0
-76 61 647 0
-78 63 647 0
-80 65 647 0
-82 67 647 0
-84 69 647 0
-86 71 647 0
85 -70 647 0
-57 -72 -647 0
-59 -74 -647 0
-61 -76 -647 0
-63 -78 -647 0
-65 -80 -647 0
-67 -82 -647 0
-69 -84 -647 0
-71 -86 -647 0
70 85 -647 0
c ((grid_00003_00006 != grid_00003_00007)=tv=SATLiteral(648))
-228 243 648 0
-230 245 648 0
-232 247 648 0
-234 249 648 0
-236 251 648 0
-238 253 648 0
-240 255 648 0
-242 257 648 0
241 -256 648 0
-243 228 648 0
-245 230 648 0
-247 232 648 0
-249 234 648 0
-251 236 648 0
-253 238 648 0
-255 240 648 0
-257 242 648 0
256 -241 648 0
-228 -243 -648 0
-230 -245 -648 0
-232 -247 -648 0
-234 -249 -648 0
-236 -251 -648 0
-238 -253 -648 0
-240 -255 -648 0
-242 -257 -648 0
241 256 -648 0
c ((grid_00004_00001 != grid_00004_00002)=tv=SATLiteral(649))
-259 274 649 0
-261 276 649 0
-263 278 649 0
-265 280 649 0
-267 282 649 0
-269 284 649 0
-271 286 649 0
-273 288 649 0
272 -287 649 0
-274 259 649 0
-276 261 649 0
-278 263 649 0
-280 265 649 0
-282 267 649 0
-284 269 649 0
-286 271 649 0
-288 273 649 0
287 -272 649 0
-259 -274 -649 0
-261 -276 -649 0
-263 -278 -649 0
-265 -280 -649 0
-267 -282 -649 0
-269 -284 -649 0
-271 -286 -649 0
-273 -288 -649 0
272 287 -649 0
c ((grid_00005_00001 != grid_00005_00002)=tv=SATLiteral(650))
-351 366 650 0
-353 368 650 0
-355 370 650 0
-357 372 650 0
-359 374 650 0
-361 376 650 0
-363 378 650 0
-365 380 650 0
364 -379 650 0
-366 351 650 0
-368 353 650 0
-370 355 650 0
-372 357 650 0
-374 359 650 0
-376 361 650 0
-378 363 650 0
-380 365 650 0
379 -364 650 0
-351 -366 -650 0
-353 -368 -650 0
-355 -370 -650 0
-357 -372 -650 0
-359 -374 -650 0
-361 -376 -650 0
-363 -378 -650 0
-365 -380 -650 0
364 379 -650 0
c ((SATLiteral(1184) /\ SATLiteral(1185))=tv=SATLiteral(651))
651 -1184 -1185 0
1184 -651 0
1185 -651 0
c ((SATLiteral(1186) /\ SATLiteral(1187))=tv=SATLiteral(652))
652 -1186 -1187 0
1186 -652 0
1187 -652 0
c ((SATLiteral(1188) /\ SATLiteral(1189))=tv=SATLiteral(653))
653 -1188 -1189 0
1188 -653 0
1189 -653 0
c ((SATLiteral(1190) /\ SATLiteral(1191))=tv=SATLiteral(654))
654 -1190 -1191 0
1190 -654 0
1191 -654 0
c ((SATLiteral(1192) /\ SATLiteral(1193))=tv=SATLiteral(655))
655 -1192 -1193 0
1192 -655 0
1193 -655 0
c ((SATLiteral(1194) /\ SATLiteral(1195))=tv=SATLiteral(656))
656 -1194 -1195 0
1194 -656 0
1195 -656 0
c ((SATLiteral(1196) /\ SATLiteral(1197))=tv=SATLiteral(657))
657 -1196 -1197 0
1196 -657 0
1197 -657 0
c ((SATLiteral(1198) /\ SATLiteral(1199))=tv=SATLiteral(658))
658 -1198 -1199 0
1198 -658 0
1199 -658 0
c ((SATLiteral(1200) /\ SATLiteral(1201))=tv=SATLiteral(659))
659 -1200 -1201 0
1200 -659 0
1201 -659 0
c ((SATLiteral(1202) /\ SATLiteral(1203))=tv=SATLiteral(660))
660 -1202 -1203 0
1202 -660 0
1203 -660 0
c (((aux133 + SATLiteral(335) + SATLiteral(165))<=1)=tv=SATLiteral(661))
-661 978 0
-661 -165 977 0
-661 -335 977 0
-661 -335 -165 0
661 165 -977 0
661 335 -977 0
661 335 165 -978 0
c (((aux134 + SATLiteral(337) + SATLiteral(167))<=1)=tv=SATLiteral(662))
-662 981 0
-662 -167 980 0
-662 -337 980 0
-662 -337 -167 0
662 167 -980 0
662 337 -980 0
662 337 167 -981 0
c (((aux135 + SATLiteral(339) + SATLiteral(169))<=1)=tv=SATLiteral(663))
-663 984 0
-663 -169 983 0
-663 -339 983 0
-663 -339 -169 0
663 169 -983 0
663 339 -983 0
663 339 169 -984 0
c (((aux136 + SATLiteral(341) + SATLiteral(171))<=1)=tv=SATLiteral(664))
-664 987 0
-664 -171 986 0
-664 -341 986 0
-664 -341 -171 0
664 171 -986 0
664 341 -986 0
664 341 171 -987 0
c (((aux137 + SATLiteral(343) + SATLiteral(173))<=1)=tv=SATLiteral(665))
-665 990 0
-665 -173 989 0
-665 -343 989 0
-665 -343 -173 0
665 173 -989 0
665 343 -989 0
665 343 173 -990 0
c (((aux138 + SATLiteral(345) + SATLiteral(175))<=1)=tv=SATLiteral(666))
-666 993 0
-666 -175 992 0
-666 -345 992 0
-666 -345 -175 0
666 175 -992 0
666 345 -992 0
666 345 175 -993 0
c (((aux139 + SATLiteral(347) + SATLiteral(177))<=1)=tv=SATLiteral(667))
-667 996 0
-667 -177 995 0
-667 -347 995 0
-667 -347 -177 0
667 177 -995 0
667 347 -995 0
667 347 177 -996 0
c (((aux140 + SATLiteral(349) + SATLiteral(179))<=1)=tv=SATLiteral(668))
-668 999 0
-668 -179 998 0
-668 -349 998 0
-668 -349 -179 0
668 179 -998 0
668 349 -998 0
668 349 179 -999 0
c (((aux141 + SATLiteral(-348) + SATLiteral(-178))<=1)=tv=SATLiteral(669))
-669 1002 0
-669 178 1001 0
-669 348 1001 0
-669 348 178 0
669 -178 -1001 0
669 -348 -1001 0
669 -348 -178 -1002 0
c (((SATLiteral(212) + SATLiteral(290) + SATLiteral(382))<=1)=tv=SATLiteral(670))
-670 -290 -382 0
-670 -212 -382 0
-670 -212 -290 0
670 290 382 0
670 212 382 0
670 212 290 0
c (((SATLiteral(214) + SATLiteral(292) + SATLiteral(384))<=1)=tv=SATLiteral(671))
-671 -292 -384 0
-671 -214 -384 0
-671 -214 -292 0
671 292 384 0
671 214 384 0
671 214 292 0
c (((SATLiteral(216) + SATLiteral(294) + SATLiteral(386))<=1)=tv=SATLiteral(672))
-672 -294 -386 0
-672 -216 -386 0
-672 -216 -294 0
672 294 386 0
672 216 386 0
672 216 294 0
c (((SATLiteral(218) + SATLiteral(296) + SATLiteral(388))<=1)=tv=SATLiteral(673))
-673 -296 -388 0
-673 -218 -388 0
-673 -218 -296 0
673 296 388 0
673 218 388 0
673 218 296 0
c (((SATLiteral(220) + SATLiteral(298) + SATLiteral(390))<=1)=tv=SATLiteral(674))
-674 -298 -390 0
-674 -220 -390 0
-674 -220 -298 0
674 298 390 0
674 220 390 0
674 220 298 0
c (((SATLiteral(222) + SATLiteral(300) + SATLiteral(392))<=1)=tv=SATLiteral(675))
-675 -300 -392 0
-675 -222 -392 0
-675 -222 -300 0
675 300 392 0
675 222 392 0
675 222 300 0
c (((SATLiteral(224) + SATLiteral(302) + SATLiteral(394))<=1)=tv=SATLiteral(676))
-676 -302 -394 0
-676 -224 -394 0
-676 -224 -302 0
676 302 394 0
676 224 394 0
676 224 302 0
c (((SATLiteral(226) + SATLiteral(304) + SATLiteral(396))<=1)=tv=SATLiteral(677))
-677 -304 -396 0
-677 -226 -396 0
-677 -226 -304 0
677 304 396 0
677 226 396 0
677 226 304 0
c (((SATLiteral(-225) + SATLiteral(-303) + SATLiteral(-395))<=1)=tv=SATLiteral(678))
-678 303 395 0
-678 225 395 0
-678 225 303 0
678 -303 -395 0
678 -225 -395 0
678 -225 -303 0
c (((aux142 + aux143 + SATLiteral(274))<=1)=tv=SATLiteral(679))
-679 1008 0
-679 1004 1007 0
-679 1005 0
-679 -274 1007 0
-679 -274 1004 0
-679 -274 1005 0
679 -1004 -1007 0
679 274 -1005 -1007 0
679 274 -1004 -1008 0
c (((aux144 + aux145 + SATLiteral(276))<=1)=tv=SATLiteral(680))
-680 1014 0
-680 1010 1013 0
-680 1011 0
-680 -276 1013 0
-680 -276 1010 0
-680 -276 1011 0
680 -1010 -1013 0
680 276 -1011 -1013 0
680 276 -1010 -1014 0
c (((aux146 + aux147 + SATLiteral(278))<=1)=tv=SATLiteral(681))
-681 1020 0
-681 1016 1019 0
-681 1017 0
-681 -278 1019 0
-681 -278 1016 0
-681 -278 1017 0
681 -1016 -1019 0
681 278 -1017 -1019 0
681 278 -1016 -1020 0
c (((aux148 + aux149 + SATLiteral(280))<=1)=tv=SATLiteral(682))
-682 1026 0
-682 1022 1025 0
-682 1023 0
-682 -280 1025 0
-682 -280 1022 0
-682 -280 1023 0
682 -1022 -1025 0
682 280 -1023 -1025 0
682 280 -1022 -1026 0
c (((aux150 + aux151 + SATLiteral(282))<=1)=tv=SATLiteral(683))
-683 1032 0
-683 1028 1031 0
-683 1029 0
-683 -282 1031 0
-683 -282 1028 0
-683 -282 1029 0
683 -1028 -1031 0
683 282 -1029 -1031 0
683 282 -1028 -1032 0
c (((aux152 + aux153 + SATLiteral(284))<=1)=tv=SATLiteral(684))
-684 1038 0
-684 1034 1037 0
-684 1035 0
-684 -284 1037 0
-684 -284 1034 0
-684 -284 1035 0
684 -1034 -1037 0
684 284 -1035 -1037 0
684 284 -1034 -1038 0
c (((aux154 + aux155 + SATLiteral(286))<=1)=tv=SATLiteral(685))
-685 1044 0
-685 1040 1043 0
-685 1041 0
-685 -286 1043 0
-685 -286 1040 0
-685 -286 1041 0
685 -1040 -1043 0
685 286 -1041 -1043 0
685 286 -1040 -1044 0
c (((aux156 + aux157 + SATLiteral(288))<=1)=tv=SATLiteral(686))
-686 1050 0
-686 1046 1049 0
-686 1047 0
-686 -288 1049 0
-686 -288 1046 0
-686 -288 1047 0
686 -1046 -1049 0
686 288 -1047 -1049 0
686 288 -1046 -1050 0
c (((aux158 + aux159 + SATLiteral(-287))<=1)=tv=SATLiteral(687))
-687 1056 0
-687 1052 1055 0
-687 1053 0
-687 287 1055 0
-687 287 1052 0
-687 287 1053 0
687 -1052 -1055 0
687 -287 -1053 -1055 0
687 -287 -1052 -1056 0
c (((SATLiteral(197) + SATLiteral(41) + SATLiteral(119))<=1)=tv=SATLiteral(688))
-688 -41 -119 0
-688 -197 -119 0
-688 -197 -41 0
688 41 119 0
688 197 119 0
688 197 41 0
c (((SATLiteral(199) + SATLiteral(43) + SATLiteral(121))<=1)=tv=SATLiteral(689))
-689 -43 -121 0
-689 -199 -121 0
-689 -199 -43 0
689 43 121 0
689 199 121 0
689 199 43 0
c (((SATLiteral(201) + SATLiteral(45) + SATLiteral(123))<=1)=tv=SATLiteral(690))
-690 -45 -123 0
-690 -201 -123 0
-690 -201 -45 0
690 45 123 0
690 201 123 0
690 201 45 0
c (((SATLiteral(203) + SATLiteral(47) + SATLiteral(125))<=1)=tv=SATLiteral(691))
-691 -47 -125 0
-691 -203 -125 0
-691 -203 -47 0
691 47 125 0
691 203 125 0
691 203 47 0
c (((SATLiteral(205) + SATLiteral(49) + SATLiteral(127))<=1)=tv=SATLiteral(692))
-692 -49 -127 0
-692 -205 -127 0
-692 -205 -49 0
692 49 127 0
692 205 127 0
692 205 49 0
c (((SATLiteral(207) + SATLiteral(51) + SATLiteral(129))<=1)=tv=SATLiteral(693))
-693 -51 -129 0
-693 -207 -129 0
-693 -207 -51 0
693 51 129 0
693 207 129 0
693 207 51 0
c (((SATLiteral(209) + SATLiteral(53) + SATLiteral(131))<=1)=tv=SATLiteral(694))
-694 -53 -131 0
-694 -209 -131 0
-694 -209 -53 0
694 53 131 0
694 209 131 0
694 209 53 0
c (((SATLiteral(211) + SATLiteral(55) + SATLiteral(133))<=1)=tv=SATLiteral(695))
-695 -55 -133 0
-695 -211 -133 0
-695 -211 -55 0
695 55 133 0
695 211 133 0
695 211 55 0
c (((SATLiteral(-210) + SATLiteral(-54) + SATLiteral(-132))<=1)=tv=SATLiteral(696))
-696 54 132 0
-696 210 132 0
-696 210 54 0
696 -54 -132 0
696 -210 -132 0
696 -210 -54 0
c (((aux160 + aux161 + SATLiteral(320))<=1)=tv=SATLiteral(697))
-697 1062 0
-697 1058 1061 0
-697 1059 0
-697 -320 1061 0
-697 -320 1058 0
-697 -320 1059 0
697 -1058 -1061 0
697 320 -1059 -1061 0
697 320 -1058 -1062 0
c (((aux162 + aux163 + SATLiteral(322))<=1)=tv=SATLiteral(698))
-698 1068 0
-698 1064 1067 0
-698 1065 0
-698 -322 1067 0
-698 -322 1064 0
-698 -322 1065 0
698 -1064 -1067 0
698 322 -1065 -1067 0
698 322 -1064 -1068 0
c (((aux164 + aux165 + SATLiteral(324))<=1)=tv=SATLiteral(699))
-699 1074 0
-699 1070 1073 0
-699 1071 0
-699 -324 1073 0
-699 -324 1070 0
-699 -324 1071 0
699 -1070 -1073 0
699 324 -1071 -1073 0
699 324 -1070 -1074 0
c (((aux166 + aux167 + SATLiteral(326))<=1)=tv=SATLiteral(700))
-700 1080 0
-700 1076 1079 0
-700 1077 0
-700 -326 1079 0
-700 -326 1076 0
-700 -326 1077 0
700 -1076 -1079 0
700 326 -1077 -1079 0
700 326 -1076 -1080 0
c (((aux168 + aux169 + SATLiteral(328))<=1)=tv=SATLiteral(701))
-701 1086 0
-701 1082 1085 0
-701 1083 0
-701 -328 1085 0
-701 -328 1082 0
-701 -328 1083 0
701 -1082 -1085 0
701 328 -1083 -1085 0
701 328 -1082 -1086 0
c (((aux170 + aux171 + SATLiteral(330))<=1)=tv=SATLiteral(702))
-702 1092 0
-702 1088 1091 0
-702 1089 0
-702 -330 1091 0
-702 -330 1088 0
-702 -330 1089 0
702 -1088 -1091 0
702 330 -1089 -1091 0
702 330 -1088 -1092 0
c (((aux172 + aux173 + SATLiteral(332))<=1)=tv=SATLiteral(703))
-703 1098 0
-703 1094 1097 0
-703 1095 0
-703 -332 1097 0
-703 -332 1094 0
-703 -332 1095 0
703 -1094 -1097 0
703 332 -1095 -1097 0
703 332 -1094 -1098 0
c (((aux174 + aux175 + SATLiteral(334))<=1)=tv=SATLiteral(704))
-704 1104 0
-704 1100 1103 0
-704 1101 0
-704 -334 1103 0
-704 -334 1100 0
-704 -334 1101 0
704 -1100 -1103 0
704 334 -1101 -1103 0
704 334 -1100 -1104 0
c (((aux176 + aux177 + SATLiteral(-333))<=1)=tv=SATLiteral(705))
-705 1110 0
-705 1106 1109 0
-705 1107 0
-705 333 1109 0
-705 333 1106 0
-705 333 1107 0
705 -1106 -1109 0
705 -333 -1107 -1109 0
705 -333 -1106 -1110 0
c (((SATLiteral(11) + SATLiteral(26) + SATLiteral(41))<=1)=tv=SATLiteral(706))
-706 -26 -41 0
-706 -11 -41 0
-706 -11 -26 0
706 26 41 0
706 11 41 0
706 11 26 0
c (((SATLiteral(13) + SATLiteral(28) + SATLiteral(43))<=1)=tv=SATLiteral(707))
-707 -28 -43 0
-707 -13 -43 0
-707 -13 -28 0
707 28 43 0
707 13 43 0
707 13 28 0
c (((SATLiteral(15) + SATLiteral(30) + SATLiteral(45))<=1)=tv=SATLiteral(708))
-708 -30 -45 0
-708 -15 -45 0
-708 -15 -30 0
708 30 45 0
708 15 45 0
708 15 30 0
c (((SATLiteral(17) + SATLiteral(32) + SATLiteral(47))<=1)=tv=SATLiteral(709))
-709 -32 -47 0
-709 -17 -47 0
-709 -17 -32 0
709 32 47 0
709 17 47 0
709 17 32 0
c (((SATLiteral(19) + SATLiteral(34) + SATLiteral(49))<=1)=tv=SATLiteral(710))
-710 -34 -49 0
-710 -19 -49 0
-710 -19 -34 0
710 34 49 0
710 19 49 0
710 19 34 0
c (((SATLiteral(21) + SATLiteral(36) + SATLiteral(51))<=1)=tv=SATLiteral(711))
-711 -36 -51 0
-711 -21 -51 0
-711 -21 -36 0
711 36 51 0
711 21 51 0
711 21 36 0
c (((SATLiteral(23) + SATLiteral(38) + SATLiteral(53))<=1)=tv=SATLiteral(712))
-712 -38 -53 0
-712 -23 -53 0
-712 -23 -38 0
712 38 53 0
712 23 53 0
712 23 38 0
c (((SATLiteral(25) + SATLiteral(40) + SATLiteral(55))<=1)=tv=SATLiteral(713))
-713 -40 -55 0
-713 -25 -55 0
-713 -25 -40 0
713 40 55 0
713 25 55 0
713 25 40 0
c (((SATLiteral(-24) + SATLiteral(-39) + SATLiteral(-54))<=1)=tv=SATLiteral(714))
-714 39 54 0
-714 24 54 0
-714 24 39 0
714 -39 -54 0
714 -24 -54 0
714 -24 -39 0
c (((SATLiteral(89) + SATLiteral(104) + SATLiteral(119))<=1)=tv=SATLiteral(715))
-715 -104 -119 0
-715 -89 -119 0
-715 -89 -104 0
715 104 119 0
715 89 119 0
715 89 104 0
c (((SATLiteral(91) + SATLiteral(106) + SATLiteral(121))<=1)=tv=SATLiteral(716))
-716 -106 -121 0
-716 -91 -121 0
-716 -91 -106 0
716 106 121 0
716 91 121 0
716 91 106 0
c (((SATLiteral(93) + SATLiteral(108) + SATLiteral(123))<=1)=tv=SATLiteral(717))
-717 -108 -123 0
-717 -93 -123 0
-717 -93 -108 0
717 108 123 0
717 93 123 0
717 93 108 0
c (((SATLiteral(95) + SATLiteral(110) + SATLiteral(125))<=1)=tv=SATLiteral(718))
-718 -110 -125 0
-718 -95 -125 0
-718 -95 -110 0
718 110 125 0
718 95 125 0
718 95 110 0
c (((SATLiteral(97) + SATLiteral(112) + SATLiteral(127))<=1)=tv=SATLiteral(719))
-719 -112 -127 0
-719 -97 -127 0
-719 -97 -112 0
719 112 127 0
719 97 127 0
719 97 112 0
c (((SATLiteral(99) + SATLiteral(114) + SATLiteral(129))<=1)=tv=SATLiteral(720))
-720 -114 -129 0
-720 -99 -129 0
-720 -99 -114 0
720 114 129 0
720 99 129 0
720 99 114 0
c (((SATLiteral(101) + SATLiteral(116) + SATLiteral(131))<=1)=tv=SATLiteral(721))
-721 -116 -131 0
-721 -101 -131 0
-721 -101 -116 0
721 116 131 0
721 101 131 0
721 101 116 0
c (((SATLiteral(103) + SATLiteral(118) + SATLiteral(133))<=1)=tv=SATLiteral(722))
-722 -118 -133 0
-722 -103 -133 0
-722 -103 -118 0
722 118 133 0
722 103 133 0
722 103 118 0
c (((SATLiteral(-102) + SATLiteral(-117) + SATLiteral(-132))<=1)=tv=SATLiteral(723))
-723 117 132 0
-723 102 132 0
-723 102 117 0
723 -117 -132 0
723 -102 -132 0
723 -102 -117 0
c (((SATLiteral(135) + SATLiteral(150) + SATLiteral(165))<=1)=tv=SATLiteral(724))
-724 -150 -165 0
-724 -135 -165 0
-724 -135 -150 0
724 150 165 0
724 135 165 0
724 135 150 0
c (((SATLiteral(137) + SATLiteral(152) + SATLiteral(167))<=1)=tv=SATLiteral(725))
-725 -152 -167 0
-725 -137 -167 0
-725 -137 -152 0
725 152 167 0
725 137 167 0
725 137 152 0
c (((SATLiteral(139) + SATLiteral(154) + SATLiteral(169))<=1)=tv=SATLiteral(726))
-726 -154 -169 0
-726 -139 -169 0
-726 -139 -154 0
726 154 169 0
726 139 169 0
726 139 154 0
c (((SATLiteral(141) + SATLiteral(156) + SATLiteral(171))<=1)=tv=SATLiteral(727))
-727 -156 -171 0
-727 -141 -171 0
-727 -141 -156 0
727 156 171 0
727 141 171 0
727 141 156 0
c (((SATLiteral(143) + SATLiteral(158) + SATLiteral(173))<=1)=tv=SATLiteral(728))
-728 -158 -173 0
-728 -143 -173 0
-728 -143 -158 0
728 158 173 0
728 143 173 0
728 143 158 0
c (((SATLiteral(145) + SATLiteral(160) + SATLiteral(175))<=1)=tv=SATLiteral(729))
-729 -160 -175 0
-729 -145 -175 0
-729 -145 -160 0
729 160 175 0
729 145 175 0
729 145 160 0
c (((SATLiteral(147) + SATLiteral(162) + SATLiteral(177))<=1)=tv=SATLiteral(730))
-730 -162 -177 0
-730 -147 -177 0
-730 -147 -162 0
730 162 177 0
730 147 177 0
730 147 162 0
c (((SATLiteral(149) + SATLiteral(164) + SATLiteral(179))<=1)=tv=SATLiteral(731))
-731 -164 -179 0
-731 -149 -179 0
-731 -149 -164 0
731 164 179 0
731 149 179 0
731 149 164 0
c (((SATLiteral(-148) + SATLiteral(-163) + SATLiteral(-178))<=1)=tv=SATLiteral(732))
-732 163 178 0
-732 148 178 0
-732 148 163 0
732 -163 -178 0
732 -148 -178 0
732 -148 -163 0
c (((SATLiteral(182) + SATLiteral(197) + SATLiteral(212))<=1)=tv=SATLiteral(733))
-733 -197 -212 0
-733 -182 -212 0
-733 -182 -197 0
733 197 212 0
733 182 212 0
733 182 197 0
c (((SATLiteral(184) + SATLiteral(199) + SATLiteral(214))<=1)=tv=SATLiteral(734))
-734 -199 -214 0
-734 -184 -214 0
-734 -184 -199 0
734 199 214 0
734 184 214 0
734 184 199 0
c (((SATLiteral(186) + SATLiteral(201) + SATLiteral(216))<=1)=tv=SATLiteral(735))
-735 -201 -216 0
-735 -186 -216 0
-735 -186 -201 0
735 201 216 0
735 186 216 0
735 186 201 0
c (((SATLiteral(188) + SATLiteral(203) + SATLiteral(218))<=1)=tv=SATLiteral(736))
-736 -203 -218 0
-736 -188 -218 0
-736 -188 -203 0
736 203 218 0
736 188 218 0
736 188 203 0
c (((SATLiteral(190) + SATLiteral(205) + SATLiteral(220))<=1)=tv=SATLiteral(737))
-737 -205 -220 0
-737 -190 -220 0
-737 -190 -205 0
737 205 220 0
737 190 220 0
737 190 205 0
c (((SATLiteral(192) + SATLiteral(207) + SATLiteral(222))<=1)=tv=SATLiteral(738))
-738 -207 -222 0
-738 -192 -222 0
-738 -192 -207 0
738 207 222 0
738 192 222 0
738 192 207 0
c (((SATLiteral(194) + SATLiteral(209) + SATLiteral(224))<=1)=tv=SATLiteral(739))
-739 -209 -224 0
-739 -194 -224 0
-739 -194 -209 0
739 209 224 0
739 194 224 0
739 194 209 0
c (((SATLiteral(196) + SATLiteral(211) + SATLiteral(226))<=1)=tv=SATLiteral(740))
-740 -211 -226 0
-740 -196 -226 0
-740 -196 -211 0
740 211 226 0
740 196 226 0
740 196 211 0
c (((SATLiteral(-195) + SATLiteral(-210) + SATLiteral(-225))<=1)=tv=SATLiteral(741))
-741 210 225 0
-741 195 225 0
-741 195 210 0
741 -210 -225 0
741 -195 -225 0
741 -195 -210 0
c (((aux178 + SATLiteral(305) + SATLiteral(320))<=1)=tv=SATLiteral(742))
-742 1113 0
-742 -320 1112 0
-742 -305 1112 0
-742 -305 -320 0
742 320 -1112 0
742 305 -1112 0
742 305 320 -1113 0
c (((aux179 + SATLiteral(307) + SATLiteral(322))<=1)=tv=SATLiteral(743))
-743 1116 0
-743 -322 1115 0
-743 -307 1115 0
-743 -307 -322 0
743 322 -1115 0
743 307 -1115 0
743 307 322 -1116 0
c (((aux180 + SATLiteral(309) + SATLiteral(324))<=1)=tv=SATLiteral(744))
-744 1119 0
-744 -324 1118 0
-744 -309 1118 0
-744 -309 -324 0
744 324 -1118 0
744 309 -1118 0
744 309 324 -1119 0
c (((aux181 + SATLiteral(311) + SATLiteral(326))<=1)=tv=SATLiteral(745))
-745 1122 0
-745 -326 1121 0
-745 -311 1121 0
-745 -311 -326 0
745 326 -1121 0
745 311 -1121 0
745 311 326 -1122 0
c (((aux182 + SATLiteral(313) + SATLiteral(328))<=1)=tv=SATLiteral(746))
-746 1125 0
-746 -328 1124 0
-746 -313 1124 0
-746 -313 -328 0
746 328 -1124 0
746 313 -1124 0
746 313 328 -1125 0
c (((aux183 + SATLiteral(315) + SATLiteral(330))<=1)=tv=SATLiteral(747))
-747 1128 0
-747 -330 1127 0
-747 -315 1127 0
-747 -315 -330 0
747 330 -1127 0
747 315 -1127 0
747 315 330 -1128 0
c (((aux184 + SATLiteral(317) + SATLiteral(332))<=1)=tv=SATLiteral(748))
-748 1131 0
-748 -332 1130 0
-748 -317 1130 0
-748 -317 -332 0
748 332 -1130 0
748 317 -1130 0
748 317 332 -1131 0
c (((aux185 + SATLiteral(319) + SATLiteral(334))<=1)=tv=SATLiteral(749))
-749 1134 0
-749 -334 1133 0
-749 -319 1133 0
-749 -319 -334 0
749 334 -1133 0
749 319 -1133 0
749 319 334 -1134 0
c (((aux186 + SATLiteral(-318) + SATLiteral(-333))<=1)=tv=SATLiteral(750))
-750 1137 0
-750 333 1136 0
-750 318 1136 0
-750 318 333 0
750 -333 -1136 0
750 -318 -1136 0
750 -318 -333 -1137 0
c (((aux187 + SATLiteral(397) + SATLiteral(412))<=1)=tv=SATLiteral(751))
-751 1140 0
-751 -412 1139 0
-751 -397 1139 0
-751 -397 -412 0
751 412 -1139 0
751 397 -1139 0
751 397 412 -1140 0
c (((aux188 + SATLiteral(399) + SATLiteral(414))<=1)=tv=SATLiteral(752))
-752 1143 0
-752 -414 1142 0
-752 -399 1142 0
-752 -399 -414 0
752 414 -1142 0
752 399 -1142 0
752 399 414 -1143 0
c (((aux189 + SATLiteral(401) + SATLiteral(416))<=1)=tv=SATLiteral(753))
-753 1146 0
-753 -416 1145 0
-753 -401 1145 0
-753 -401 -416 0
753 416 -1145 0
753 401 -1145 0
753 401 416 -1146 0
c (((aux190 + SATLiteral(403) + SATLiteral(418))<=1)=tv=SATLiteral(754))
-754 1149 0
-754 -418 1148 0
-754 -403 1148 0
-754 -403 -418 0
754 418 -1148 0
754 403 -1148 0
754 403 418 -1149 0
c (((aux191 + SATLiteral(405) + SATLiteral(420))<=1)=tv=SATLiteral(755))
-755 1152 0
-755 -420 1151 0
-755 -405 1151 0
-755 -405 -420 0
755 420 -1151 0
755 405 -1151 0
755 405 420 -1152 0
c (((aux192 + SATLiteral(407) + SATLiteral(422))<=1)=tv=SATLiteral(756))
-756 1155 0
-756 -422 1154 0
-756 -407 1154 0
-756 -407 -422 0
756 422 -1154 0
756 407 -1154 0
756 407 422 -1155 0
c (((aux193 + SATLiteral(409) + SATLiteral(424))<=1)=tv=SATLiteral(757))
-757 1158 0
-757 -424 1157 0
-757 -409 1157 0
-757 -409 -424 0
757 424 -1157 0
757 409 -1157 0
757 409 424 -1158 0
c (((aux194 + SATLiteral(411) + SATLiteral(426))<=1)=tv=SATLiteral(758))
-758 1161 0
-758 -426 1160 0
-758 -411 1160 0
-758 -411 -426 0
758 426 -1160 0
758 411 -1160 0
758 411 426 -1161 0
c (((aux195 + SATLiteral(-410) + SATLiteral(-425))<=1)=tv=SATLiteral(759))
-759 1164 0
-759 425 1163 0
-759 410 1163 0
-759 410 425 0
759 -425 -1163 0
759 -410 -1163 0
759 -410 -425 -1164 0
c SATLiteral(2)
2 0
c SATLiteral(3)
3 0
c SATLiteral(4)
4 0
c SATLiteral(5)
5 0
c SATLiteral(6)
6 0
c SATLiteral(7)
7 0
c SATLiteral(8)
8 0
c SATLiteral(9)
9 0
c SATLiteral(10)
10 0
c SATLiteral(56)
56 0
c SATLiteral(87)
87 0
c SATLiteral(88)
88 0
c SATLiteral(134)
134 0
c SATLiteral(180)
180 0
c SATLiteral(181)
181 0
c SATLiteral(227)
227 0
c SATLiteral(258)
258 0
c SATLiteral(289)
289 0
c SATLiteral(350)
350 0
c SATLiteral(381)
381 0
c (SATLiteral(443) -> SATLiteral(634))
-443 634 0
c (SATLiteral(447) -> SATLiteral(635))
-447 635 0
c (SATLiteral(467) -> SATLiteral(636))
-467 636 0
c (SATLiteral(471) -> SATLiteral(637))
-471 637 0
c (SATLiteral(505) -> SATLiteral(638))
-505 638 0
c (SATLiteral(510) -> SATLiteral(639))
-510 639 0
c (SATLiteral(491) -> SATLiteral(640))
-491 640 0
c (SATLiteral(492) -> SATLiteral(641))
-492 641 0
c (SATLiteral(493) -> SATLiteral(642))
-493 642 0
c (SATLiteral(495) -> SATLiteral(643))
-495 643 0
c (SATLiteral(496) -> SATLiteral(644))
-496 644 0
c (SATLiteral(515) -> SATLiteral(645))
-515 645 0
c (SATLiteral(519) -> SATLiteral(646))
-519 646 0
c (SATLiteral(550) -> SATLiteral(647))
-550 647 0
c (SATLiteral(567) -> SATLiteral(648))
-567 648 0
c (SATLiteral(570) -> SATLiteral(649))
-570 649 0
c (SATLiteral(578) -> SATLiteral(650))
-578 650 0
c (SATLiteral(594) -> SATLiteral(651))
-594 651 0
c (SATLiteral(598) -> SATLiteral(652))
-598 652 0
c (SATLiteral(602) -> SATLiteral(653))
-602 653 0
c (SATLiteral(606) -> SATLiteral(654))
-606 654 0
c (SATLiteral(611) -> SATLiteral(655))
-611 655 0
c (SATLiteral(615) -> SATLiteral(656))
-615 656 0
c (SATLiteral(618) -> SATLiteral(657))
-618 657 0
c (SATLiteral(621) -> SATLiteral(658))
-621 658 0
c (SATLiteral(626) -> SATLiteral(659))
-626 659 0
c (SATLiteral(629) -> SATLiteral(660))
-629 660 0
c (SATLiteral(457) -> SATLiteral(661))
-457 661 0
c (SATLiteral(457) -> SATLiteral(662))
-457 662 0
c (SATLiteral(457) -> SATLiteral(663))
-457 663 0
c (SATLiteral(457) -> SATLiteral(664))
-457 664 0
c (SATLiteral(457) -> SATLiteral(665))
-457 665 0
c (SATLiteral(457) -> SATLiteral(666))
-457 666 0
c (SATLiteral(457) -> SATLiteral(667))
-457 667 0
c (SATLiteral(457) -> SATLiteral(668))
-457 668 0
c (SATLiteral(457) -> SATLiteral(669))
-457 669 0
c (SATLiteral(462) -> SATLiteral(670))
-462 670 0
c (SATLiteral(462) -> SATLiteral(671))
-462 671 0
c (SATLiteral(462) -> SATLiteral(672))
-462 672 0
c (SATLiteral(462) -> SATLiteral(673))
-462 673 0
c (SATLiteral(462) -> SATLiteral(674))
-462 674 0
c (SATLiteral(462) -> SATLiteral(675))
-462 675 0
c (SATLiteral(462) -> SATLiteral(676))
-462 676 0
c (SATLiteral(462) -> SATLiteral(677))
-462 677 0
c (SATLiteral(462) -> SATLiteral(678))
-462 678 0
c (SATLiteral(444) -> SATLiteral(679))
-444 679 0
c (SATLiteral(444) -> SATLiteral(680))
-444 680 0
c (SATLiteral(444) -> SATLiteral(681))
-444 681 0
c (SATLiteral(444) -> SATLiteral(682))
-444 682 0
c (SATLiteral(444) -> SATLiteral(683))
-444 683 0
c (SATLiteral(444) -> SATLiteral(684))
-444 684 0
c (SATLiteral(444) -> SATLiteral(685))
-444 685 0
c (SATLiteral(444) -> SATLiteral(686))
-444 686 0
c (SATLiteral(444) -> SATLiteral(687))
-444 687 0
c (SATLiteral(445) -> SATLiteral(688))
-445 688 0
c (SATLiteral(445) -> SATLiteral(689))
-445 689 0
c (SATLiteral(445) -> SATLiteral(690))
-445 690 0
c (SATLiteral(445) -> SATLiteral(691))
-445 691 0
c (SATLiteral(445) -> SATLiteral(692))
-445 692 0
c (SATLiteral(445) -> SATLiteral(693))
-445 693 0
c (SATLiteral(445) -> SATLiteral(694))
-445 694 0
c (SATLiteral(445) -> SATLiteral(695))
-445 695 0
c (SATLiteral(445) -> SATLiteral(696))
-445 696 0
c (SATLiteral(448) -> SATLiteral(697))
-448 697 0
c (SATLiteral(448) -> SATLiteral(698))
-448 698 0
c (SATLiteral(448) -> SATLiteral(699))
-448 699 0
c (SATLiteral(448) -> SATLiteral(700))
-448 700 0
c (SATLiteral(448) -> SATLiteral(701))
-448 701 0
c (SATLiteral(448) -> SATLiteral(702))
-448 702 0
c (SATLiteral(448) -> SATLiteral(703))
-448 703 0
c (SATLiteral(448) -> SATLiteral(704))
-448 704 0
c (SATLiteral(448) -> SATLiteral(705))
-448 705 0
c (SATLiteral(546) -> SATLiteral(706))
-546 706 0
c (SATLiteral(546) -> SATLiteral(707))
-546 707 0
c (SATLiteral(546) -> SATLiteral(708))
-546 708 0
c (SATLiteral(546) -> SATLiteral(709))
-546 709 0
c (SATLiteral(546) -> SATLiteral(710))
-546 710 0
c (SATLiteral(546) -> SATLiteral(711))
-546 711 0
c (SATLiteral(546) -> SATLiteral(712))
-546 712 0
c (SATLiteral(546) -> SATLiteral(713))
-546 713 0
c (SATLiteral(546) -> SATLiteral(714))
-546 714 0
c (SATLiteral(554) -> SATLiteral(715))
-554 715 0
c (SATLiteral(554) -> SATLiteral(716))
-554 716 0
c (SATLiteral(554) -> SATLiteral(717))
-554 717 0
c (SATLiteral(554) -> SATLiteral(718))
-554 718 0
c (SATLiteral(554) -> SATLiteral(719))
-554 719 0
c (SATLiteral(554) -> SATLiteral(720))
-554 720 0
c (SATLiteral(554) -> SATLiteral(721))
-554 721 0
c (SATLiteral(554) -> SATLiteral(722))
-554 722 0
c (SATLiteral(554) -> SATLiteral(723))
-554 723 0
c (SATLiteral(558) -> SATLiteral(724))
-558 724 0
c (SATLiteral(558) -> SATLiteral(725))
-558 725 0
c (SATLiteral(558) -> SATLiteral(726))
-558 726 0
c (SATLiteral(558) -> SATLiteral(727))
-558 727 0
c (SATLiteral(558) -> SATLiteral(728))
-558 728 0
c (SATLiteral(558) -> SATLiteral(729))
-558 729 0
c (SATLiteral(558) -> SATLiteral(730))
-558 730 0
c (SATLiteral(558) -> SATLiteral(731))
-558 731 0
c (SATLiteral(558) -> SATLiteral(732))
-558 732 0
c (SATLiteral(563) -> SATLiteral(733))
-563 733 0
c (SATLiteral(563) -> SATLiteral(734))
-563 734 0
c (SATLiteral(563) -> SATLiteral(735))
-563 735 0
c (SATLiteral(563) -> SATLiteral(736))
-563 736 0
c (SATLiteral(563) -> SATLiteral(737))
-563 737 0
c (SATLiteral(563) -> SATLiteral(738))
-563 738 0
c (SATLiteral(563) -> SATLiteral(739))
-563 739 0
c (SATLiteral(563) -> SATLiteral(740))
-563 740 0
c (SATLiteral(563) -> SATLiteral(741))
-563 741 0
c (SATLiteral(573) -> SATLiteral(742))
-573 742 0
c (SATLiteral(573) -> SATLiteral(743))
-573 743 0
c (SATLiteral(573) -> SATLiteral(744))
-573 744 0
c (SATLiteral(573) -> SATLiteral(745))
-573 745 0
c (SATLiteral(573) -> SATLiteral(746))
-573 746 0
c (SATLiteral(573) -> SATLiteral(747))
-573 747 0
c (SATLiteral(573) -> SATLiteral(748))
-573 748 0
c (SATLiteral(573) -> SATLiteral(749))
-573 749 0
c (SATLiteral(573) -> SATLiteral(750))
-573 750 0
c (SATLiteral(581) -> SATLiteral(751))
-581 751 0
c (SATLiteral(581) -> SATLiteral(752))
-581 752 0
c (SATLiteral(581) -> SATLiteral(753))
-581 753 0
c (SATLiteral(581) -> SATLiteral(754))
-581 754 0
c (SATLiteral(581) -> SATLiteral(755))
-581 755 0
c (SATLiteral(581) -> SATLiteral(756))
-581 756 0
c (SATLiteral(581) -> SATLiteral(757))
-581 757 0
c (SATLiteral(581) -> SATLiteral(758))
-581 758 0
c (SATLiteral(581) -> SATLiteral(759))
-581 759 0
c ((shift(grid_00002_00007, -1) - aux126 + shift(grid_00003_00007, -1))<=0)
243 -760 0
244 -761 0
246 -763 0
248 -765 0
250 -767 0
252 -769 0
254 -771 0
256 -773 0
165 -760 0
165 243 -761 0
165 244 -763 0
165 246 -765 0
165 248 -767 0
165 250 -769 0
165 252 -771 0
165 254 -773 0
165 256 -775 0
166 -761 0
166 243 -763 0
166 244 -765 0
166 246 -767 0
166 248 -769 0
166 250 -771 0
166 252 -773 0
166 254 -775 0
166 256 -777 0
168 -763 0
168 243 -765 0
168 244 -767 0
168 246 -769 0
168 248 -771 0
168 250 -773 0
168 252 -775 0
168 254 -777 0
168 256 -779 0
170 -765 0
170 243 -767 0
170 244 -769 0
170 246 -771 0
170 248 -773 0
170 250 -775 0
170 252 -777 0
170 254 -779 0
170 256 -781 0
172 -767 0
172 243 -769 0
172 244 -771 0
172 246 -773 0
172 248 -775 0
172 250 -777 0
172 252 -779 0
172 254 -781 0
172 256 -783 0
174 -769 0
174 243 -771 0
174 244 -773 0
174 246 -775 0
174 248 -777 0
174 250 -779 0
174 252 -781 0
174 254 -783 0
174 256 -785 0
176 -771 0
176 243 -773 0
176 244 -775 0
176 246 -777 0
176 248 -779 0
176 250 -781 0
176 252 -783 0
176 254 -785 0
176 256 -787 0
178 -773 0
178 243 -775 0
178 244 -777 0
178 246 -779 0
178 248 -781 0
178 250 -783 0
178 252 -785 0
178 254 -787 0
178 256 -789 0
c (0<=(shift(grid_00002_00007, -1) - aux126 + shift(grid_00003_00007, -1)))
-256 789 0
-254 787 0
-252 785 0
-250 783 0
-248 781 0
-246 779 0
-244 777 0
-243 775 0
-178 789 0
-178 -256 787 0
-178 -254 785 0
-178 -252 783 0
-178 -250 781 0
-178 -248 779 0
-178 -246 777 0
-178 -244 775 0
-178 -243 773 0
-176 787 0
-176 -256 785 0
-176 -254 783 0
-176 -252 781 0
-176 -250 779 0
-176 -248 777 0
-176 -246 775 0
-176 -244 773 0
-176 -243 771 0
-174 785 0
-174 -256 783 0
-174 -254 781 0
-174 -252 779 0
-174 -250 777 0
-174 -248 775 0
-174 -246 773 0
-174 -244 771 0
-174 -243 769 0
-172 783 0
-172 -256 781 0
-172 -254 779 0
-172 -252 777 0
-172 -250 775 0
-172 -248 773 0
-172 -246 771 0
-172 -244 769 0
-172 -243 767 0
-170 781 0
-170 -256 779 0
-170 -254 777 0
-170 -252 775 0
-170 -250 773 0
-170 -248 771 0
-170 -246 769 0
-170 -244 767 0
-170 -243 765 0
-168 779 0
-168 -256 777 0
-168 -254 775 0
-168 -252 773 0
-168 -250 771 0
-168 -248 769 0
-168 -246 767 0
-168 -244 765 0
-168 -243 763 0
-166 777 0
-166 -256 775 0
-166 -254 773 0
-166 -252 771 0
-166 -250 769 0
-166 -248 767 0
-166 -246 765 0
-166 -244 763 0
-166 -243 761 0
-165 775 0
-165 -256 773 0
-165 -254 771 0
-165 -252 769 0
-165 -250 767 0
-165 -248 765 0
-165 -246 763 0
-165 -244 761 0
-165 -243 760 0
c (( - aux131 + shift(grid_00004_00004, -1) + shift(grid_00004_00007, -1))<=0)
335 -915 0
336 -916 0
338 -918 0
340 -920 0
342 -922 0
344 -924 0
346 -926 0
348 -928 0
290 -915 0
290 335 -916 0
290 336 -918 0
290 338 -920 0
290 340 -922 0
290 342 -924 0
290 344 -926 0
290 346 -928 0
290 348 -930 0
291 -916 0
291 335 -918 0
291 336 -920 0
291 338 -922 0
291 340 -924 0
291 342 -926 0
291 344 -928 0
291 346 -930 0
291 348 -932 0
293 -918 0
293 335 -920 0
293 336 -922 0
293 338 -924 0
293 340 -926 0
293 342 -928 0
293 344 -930 0
293 346 -932 0
293 348 -934 0
295 -920 0
295 335 -922 0
295 336 -924 0
295 338 -926 0
295 340 -928 0
295 342 -930 0
295 344 -932 0
295 346 -934 0
295 348 -936 0
297 -922 0
297 335 -924 0
297 336 -926 0
297 338 -928 0
297 340 -930 0
297 342 -932 0
297 344 -934 0
297 346 -936 0
297 348 -938 0
299 -924 0
299 335 -926 0
299 336 -928 0
299 338 -930 0
299 340 -932 0
299 342 -934 0
299 344 -936 0
299 346 -938 0
299 348 -940 0
301 -926 0
301 335 -928 0
301 336 -930 0
301 338 -932 0
301 340 -934 0
301 342 -936 0
301 344 -938 0
301 346 -940 0
301 348 -942 0
303 -928 0
303 335 -930 0
303 336 -932 0
303 338 -934 0
303 340 -936 0
303 342 -938 0
303 344 -940 0
303 346 -942 0
303 348 -944 0
c (0<=( - aux131 + shift(grid_00004_00004, -1) + shift(grid_00004_00007, -1)))
-348 944 0
-346 942 0
-344 940 0
-342 938 0
-340 936 0
-338 934 0
-336 932 0
-335 930 0
-303 944 0
-303 -348 942 0
-303 -346 940 0
-303 -344 938 0
-303 -342 936 0
-303 -340 934 0
-303 -338 932 0
-303 -336 930 0
-303 -335 928 0
-301 942 0
-301 -348 940 0
-301 -346 938 0
-301 -344 936 0
-301 -342 934 0
-301 -340 932 0
-301 -338 930 0
-301 -336 928 0
-301 -335 926 0
-299 940 0
-299 -348 938 0
-299 -346 936 0
-299 -344 934 0
-299 -342 932 0
-299 -340 930 0
-299 -338 928 0
-299 -336 926 0
-299 -335 924 0
-297 938 0
-297 -348 936 0
-297 -346 934 0
-297 -344 932 0
-297 -342 930 0
-297 -340 928 0
-297 -338 926 0
-297 -336 924 0
-297 -335 922 0
-295 936 0
-295 -348 934 0
-295 -346 932 0
-295 -344 930 0
-295 -342 928 0
-295 -340 926 0
-295 -338 924 0
-295 -336 922 0
-295 -335 920 0
-293 934 0
-293 -348 932 0
-293 -346 930 0
-293 -344 928 0
-293 -342 926 0
-293 -340 924 0
-293 -338 922 0
-293 -336 920 0
-293 -335 918 0
-291 932 0
-291 -348 930 0
-291 -346 928 0
-291 -344 926 0
-291 -342 924 0
-291 -340 922 0
-291 -338 920 0
-291 -336 918 0
-291 -335 916 0
-290 930 0
-290 -348 928 0
-290 -346 926 0
-290 -344 924 0
-290 -342 922 0
-290 -340 920 0
-290 -338 918 0
-290 -336 916 0
-290 -335 915 0
c (( - aux132 + shift(grid_00005_00004, -1) + shift(grid_00005_00007, -1))<=0)
427 -946 0
428 -947 0
430 -949 0
432 -951 0
434 -953 0
436 -955 0
438 -957 0
440 -959 0
382 -946 0
382 427 -947 0
382 428 -949 0
382 430 -951 0
382 432 -953 0
382 434 -955 0
382 436 -957 0
382 438 -959 0
382 440 -961 0
383 -947 0
383 427 -949 0
383 428 -951 0
383 430 -953 0
383 432 -955 0
383 434 -957 0
383 436 -959 0
383 438 -961 0
383 440 -963 0
385 -949 0
385 427 -951 0
385 428 -953 0
385 430 -955 0
385 432 -957 0
385 434 -959 0
385 436 -961 0
385 438 -963 0
385 440 -965 0
387 -951 0
387 427 -953 0
387 428 -955 0
387 430 -957 0
387 432 -959 0
387 434 -961 0
387 436 -963 0
387 438 -965 0
387 440 -967 0
389 -953 0
389 427 -955 0
389 428 -957 0
389 430 -959 0
389 432 -961 0
389 434 -963 0
389 436 -965 0
389 438 -967 0
389 440 -969 0
391 -955 0
391 427 -957 0
391 428 -959 0
391 430 -961 0
391 432 -963 0
391 434 -965 0
391 436 -967 0
391 438 -969 0
391 440 -971 0
393 -957 0
393 427 -959 0
393 428 -961 0
393 430 -963 0
393 432 -965 0
393 434 -967 0
393 436 -969 0
393 438 -971 0
393 440 -973 0
395 -959 0
395 427 -961 0
395 428 -963 0
395 430 -965 0
395 432 -967 0
395 434 -969 0
395 436 -971 0
395 438 -973 0
395 440 -975 0
c (0<=( - aux132 + shift(grid_00005_00004, -1) + shift(grid_00005_00007, -1)))
-440 975 0
-438 973 0
-436 971 0
-434 969 0
-432 967 0
-430 965 0
-428 963 0
-427 961 0
-395 975 0
-395 -440 973 0
-395 -438 971 0
-395 -436 969 0
-395 -434 967 0
-395 -432 965 0
-395 -430 963 0
-395 -428 961 0
-395 -427 959 0
-393 973 0
-393 -440 971 0
-393 -438 969 0
-393 -436 967 0
-393 -434 965 0
-393 -432 963 0
-393 -430 961 0
-393 -428 959 0
-393 -427 957 0
-391 971 0
-391 -440 969 0
-391 -438 967 0
-391 -436 965 0
-391 -434 963 0
-391 -432 961 0
-391 -430 959 0
-391 -428 957 0
-391 -427 955 0
-389 969 0
-389 -440 967 0
-389 -438 965 0
-389 -436 963 0
-389 -434 961 0
-389 -432 959 0
-389 -430 957 0
-389 -428 955 0
-389 -427 953 0
-387 967 0
-387 -440 965 0
-387 -438 963 0
-387 -436 961 0
-387 -434 959 0
-387 -432 957 0
-387 -430 955 0
-387 -428 953 0
-387 -427 951 0
-385 965 0
-385 -440 963 0
-385 -438 961 0
-385 -436 959 0
-385 -434 957 0
-385 -432 955 0
-385 -430 953 0
-385 -428 951 0
-385 -427 949 0
-383 963 0
-383 -440 961 0
-383 -438 959 0
-383 -436 957 0
-383 -434 955 0
-383 -432 953 0
-383 -430 951 0
-383 -428 949 0
-383 -427 947 0
-382 961 0
-382 -440 959 0
-382 -438 957 0
-382 -436 955 0
-382 -434 953 0
-382 -432 951 0
-382 -430 949 0
-382 -428 947 0
-382 -427 946 0
c ((SATLiteral(243) - aux133 + SATLiteral(427))<=0)
-427 -977 0
-243 -977 0
-243 -427 -978 0
c (0<=(SATLiteral(243) - aux133 + SATLiteral(427)))
427 978 0
243 978 0
243 427 977 0
c ((SATLiteral(245) - aux134 + SATLiteral(429))<=0)
-429 -980 0
-245 -980 0
-245 -429 -981 0
c (0<=(SATLiteral(245) - aux134 + SATLiteral(429)))
429 981 0
245 981 0
245 429 980 0
c ((SATLiteral(247) - aux135 + SATLiteral(431))<=0)
-431 -983 0
-247 -983 0
-247 -431 -984 0
c (0<=(SATLiteral(247) - aux135 + SATLiteral(431)))
431 984 0
247 984 0
247 431 983 0
c ((SATLiteral(249) - aux136 + SATLiteral(433))<=0)
-433 -986 0
-249 -986 0
-249 -433 -987 0
c (0<=(SATLiteral(249) - aux136 + SATLiteral(433)))
433 987 0
249 987 0
249 433 986 0
c ((SATLiteral(251) - aux137 + SATLiteral(435))<=0)
-435 -989 0
-251 -989 0
-251 -435 -990 0
c (0<=(SATLiteral(251) - aux137 + SATLiteral(435)))
435 990 0
251 990 0
251 435 989 0
c ((SATLiteral(253) - aux138 + SATLiteral(437))<=0)
-437 -992 0
-253 -992 0
-253 -437 -993 0
c (0<=(SATLiteral(253) - aux138 + SATLiteral(437)))
437 993 0
253 993 0
253 437 992 0
c ((SATLiteral(255) - aux139 + SATLiteral(439))<=0)
-439 -995 0
-255 -995 0
-255 -439 -996 0
c (0<=(SATLiteral(255) - aux139 + SATLiteral(439)))
439 996 0
255 996 0
255 439 995 0
c ((SATLiteral(257) - aux140 + SATLiteral(441))<=0)
-441 -998 0
-257 -998 0
-257 -441 -999 0
c (0<=(SATLiteral(257) - aux140 + SATLiteral(441)))
441 999 0
257 999 0
257 441 998 0
c ((SATLiteral(-256) - aux141 + SATLiteral(-440))<=0)
440 -1001 0
256 -1001 0
256 440 -1002 0
c (0<=(SATLiteral(-256) - aux141 + SATLiteral(-440)))
-440 1002 0
-256 1002 0
-256 -440 1001 0
c (( - aux178 + SATLiteral(290) + SATLiteral(335))<=0)
-335 -1112 0
-290 -1112 0
-290 -335 -1113 0
c (0<=( - aux178 + SATLiteral(290) + SATLiteral(335)))
335 1113 0
290 1113 0
290 335 1112 0
c (( - aux179 + SATLiteral(292) + SATLiteral(337))<=0)
-337 -1115 0
-292 -1115 0
-292 -337 -1116 0
c (0<=( - aux179 + SATLiteral(292) + SATLiteral(337)))
337 1116 0
292 1116 0
292 337 1115 0
c (( - aux180 + SATLiteral(294) + SATLiteral(339))<=0)
-339 -1118 0
-294 -1118 0
-294 -339 -1119 0
c (0<=( - aux180 + SATLiteral(294) + SATLiteral(339)))
339 1119 0
294 1119 0
294 339 1118 0
c (( - aux181 + SATLiteral(296) + SATLiteral(341))<=0)
-341 -1121 0
-296 -1121 0
-296 -341 -1122 0
c (0<=( - aux181 + SATLiteral(296) + SATLiteral(341)))
341 1122 0
296 1122 0
296 341 1121 0
c (( - aux182 + SATLiteral(298) + SATLiteral(343))<=0)
-343 -1124 0
-298 -1124 0
-298 -343 -1125 0
c (0<=( - aux182 + SATLiteral(298) + SATLiteral(343)))
343 1125 0
298 1125 0
298 343 1124 0
c (( - aux183 + SATLiteral(300) + SATLiteral(345))<=0)
-345 -1127 0
-300 -1127 0
-300 -345 -1128 0
c (0<=( - aux183 + SATLiteral(300) + SATLiteral(345)))
345 1128 0
300 1128 0
300 345 1127 0
c (( - aux184 + SATLiteral(302) + SATLiteral(347))<=0)
-347 -1130 0
-302 -1130 0
-302 -347 -1131 0
c (0<=( - aux184 + SATLiteral(302) + SATLiteral(347)))
347 1131 0
302 1131 0
302 347 1130 0
c (( - aux185 + SATLiteral(304) + SATLiteral(349))<=0)
-349 -1133 0
-304 -1133 0
-304 -349 -1134 0
c (0<=( - aux185 + SATLiteral(304) + SATLiteral(349)))
349 1134 0
304 1134 0
304 349 1133 0
c (( - aux186 + SATLiteral(-303) + SATLiteral(-348))<=0)
348 -1136 0
303 -1136 0
303 348 -1137 0
c (0<=( - aux186 + SATLiteral(-303) + SATLiteral(-348)))
-348 1137 0
-303 1137 0
-303 -348 1136 0
c (( - aux187 + SATLiteral(382) + SATLiteral(427))<=0)
-427 -1139 0
-382 -1139 0
-382 -427 -1140 0
c (0<=( - aux187 + SATLiteral(382) + SATLiteral(427)))
427 1140 0
382 1140 0
382 427 1139 0
c (( - aux188 + SATLiteral(384) + SATLiteral(429))<=0)
-429 -1142 0
-384 -1142 0
-384 -429 -1143 0
c (0<=( - aux188 + SATLiteral(384) + SATLiteral(429)))
429 1143 0
384 1143 0
384 429 1142 0
c (( - aux189 + SATLiteral(386) + SATLiteral(431))<=0)
-431 -1145 0
-386 -1145 0
-386 -431 -1146 0
c (0<=( - aux189 + SATLiteral(386) + SATLiteral(431)))
431 1146 0
386 1146 0
386 431 1145 0
c (( - aux190 + SATLiteral(388) + SATLiteral(433))<=0)
-433 -1148 0
-388 -1148 0
-388 -433 -1149 0
c (0<=( - aux190 + SATLiteral(388) + SATLiteral(433)))
433 1149 0
388 1149 0
388 433 1148 0
c (( - aux191 + SATLiteral(390) + SATLiteral(435))<=0)
-435 -1151 0
-390 -1151 0
-390 -435 -1152 0
c (0<=( - aux191 + SATLiteral(390) + SATLiteral(435)))
435 1152 0
390 1152 0
390 435 1151 0
c (( - aux192 + SATLiteral(392) + SATLiteral(437))<=0)
-437 -1154 0
-392 -1154 0
-392 -437 -1155 0
c (0<=( - aux192 + SATLiteral(392) + SATLiteral(437)))
437 1155 0
392 1155 0
392 437 1154 0
c (( - aux193 + SATLiteral(394) + SATLiteral(439))<=0)
-439 -1157 0
-394 -1157 0
-394 -439 -1158 0
c (0<=( - aux193 + SATLiteral(394) + SATLiteral(439)))
439 1158 0
394 1158 0
394 439 1157 0
c (( - aux194 + SATLiteral(396) + SATLiteral(441))<=0)
-441 -1160 0
-396 -1160 0
-396 -441 -1161 0
c (0<=( - aux194 + SATLiteral(396) + SATLiteral(441)))
441 1161 0
396 1161 0
396 441 1160 0
c (( - aux195 + SATLiteral(-395) + SATLiteral(-440))<=0)
440 -1163 0
395 -1163 0
395 440 -1164 0
c (0<=( - aux195 + SATLiteral(-395) + SATLiteral(-440)))
-440 1164 0
-395 1164 0
-395 -440 1163 0
c ((shift(grid_00002_00002, -1) - aux127 + shift(grid_00003_00002, -1))<=0)
182 -791 0
183 -792 0
185 -794 0
187 -796 0
189 -798 0
191 -800 0
193 -802 0
195 -804 0
104 -791 0
104 182 -792 0
104 183 -794 0
104 185 -796 0
104 187 -798 0
104 189 -800 0
104 191 -802 0
104 193 -804 0
104 195 -806 0
105 -792 0
105 182 -794 0
105 183 -796 0
105 185 -798 0
105 187 -800 0
105 189 -802 0
105 191 -804 0
105 193 -806 0
105 195 -808 0
107 -794 0
107 182 -796 0
107 183 -798 0
107 185 -800 0
107 187 -802 0
107 189 -804 0
107 191 -806 0
107 193 -808 0
107 195 -810 0
109 -796 0
109 182 -798 0
109 183 -800 0
109 185 -802 0
109 187 -804 0
109 189 -806 0
109 191 -808 0
109 193 -810 0
109 195 -812 0
111 -798 0
111 182 -800 0
111 183 -802 0
111 185 -804 0
111 187 -806 0
111 189 -808 0
111 191 -810 0
111 193 -812 0
111 195 -814 0
113 -800 0
113 182 -802 0
113 183 -804 0
113 185 -806 0
113 187 -808 0
113 189 -810 0
113 191 -812 0
113 193 -814 0
113 195 -816 0
115 -802 0
115 182 -804 0
115 183 -806 0
115 185 -808 0
115 187 -810 0
115 189 -812 0
115 191 -814 0
115 193 -816 0
115 195 -818 0
117 -804 0
117 182 -806 0
117 183 -808 0
117 185 -810 0
117 187 -812 0
117 189 -814 0
117 191 -816 0
117 193 -818 0
117 195 -820 0
c (0<=(shift(grid_00002_00002, -1) - aux127 + shift(grid_00003_00002, -1)))
-195 820 0
-193 818 0
-191 816 0
-189 814 0
-187 812 0
-185 810 0
-183 808 0
-182 806 0
-117 820 0
-117 -195 818 0
-117 -193 816 0
-117 -191 814 0
-117 -189 812 0
-117 -187 810 0
-117 -185 808 0
-117 -183 806 0
-117 -182 804 0
-115 818 0
-115 -195 816 0
-115 -193 814 0
-115 -191 812 0
-115 -189 810 0
-115 -187 808 0
-115 -185 806 0
-115 -183 804 0
-115 -182 802 0
-113 816 0
-113 -195 814 0
-113 -193 812 0
-113 -191 810 0
-113 -189 808 0
-113 -187 806 0
-113 -185 804 0
-113 -183 802 0
-113 -182 800 0
-111 814 0
-111 -195 812 0
-111 -193 810 0
-111 -191 808 0
-111 -189 806 0
-111 -187 804 0
-111 -185 802 0
-111 -183 800 0
-111 -182 798 0
-109 812 0
-109 -195 810 0
-109 -193 808 0
-109 -191 806 0
-109 -189 804 0
-109 -187 802 0
-109 -185 800 0
-109 -183 798 0
-109 -182 796 0
-107 810 0
-107 -195 808 0
-107 -193 806 0
-107 -191 804 0
-107 -189 802 0
-107 -187 800 0
-107 -185 798 0
-107 -183 796 0
-107 -182 794 0
-105 808 0
-105 -195 806 0
-105 -193 804 0
-105 -191 802 0
-105 -189 800 0
-105 -187 798 0
-105 -185 796 0
-105 -183 794 0
-105 -182 792 0
-104 806 0
-104 -195 804 0
-104 -193 802 0
-104 -191 800 0
-104 -189 798 0
-104 -187 796 0
-104 -185 794 0
-104 -183 792 0
-104 -182 791 0
c (( - aux128 + shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1))<=0)
274 -822 0
275 -823 0
277 -825 0
279 -827 0
281 -829 0
283 -831 0
285 -833 0
287 -835 0
26 -822 0
26 274 -823 0
26 275 -825 0
26 277 -827 0
26 279 -829 0
26 281 -831 0
26 283 -833 0
26 285 -835 0
26 287 -837 0
27 -823 0
27 274 -825 0
27 275 -827 0
27 277 -829 0
27 279 -831 0
27 281 -833 0
27 283 -835 0
27 285 -837 0
27 287 -839 0
29 -825 0
29 274 -827 0
29 275 -829 0
29 277 -831 0
29 279 -833 0
29 281 -835 0
29 283 -837 0
29 285 -839 0
29 287 -841 0
31 -827 0
31 274 -829 0
31 275 -831 0
31 277 -833 0
31 279 -835 0
31 281 -837 0
31 283 -839 0
31 285 -841 0
31 287 -843 0
33 -829 0
33 274 -831 0
33 275 -833 0
33 277 -835 0
33 279 -837 0
33 281 -839 0
33 283 -841 0
33 285 -843 0
33 287 -845 0
35 -831 0
35 274 -833 0
35 275 -835 0
35 277 -837 0
35 279 -839 0
35 281 -841 0
35 283 -843 0
35 285 -845 0
35 287 -847 0
37 -833 0
37 274 -835 0
37 275 -837 0
37 277 -839 0
37 279 -841 0
37 281 -843 0
37 283 -845 0
37 285 -847 0
37 287 -849 0
39 -835 0
39 274 -837 0
39 275 -839 0
39 277 -841 0
39 279 -843 0
39 281 -845 0
39 283 -847 0
39 285 -849 0
39 287 -851 0
c (0<=( - aux128 + shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1)))
-287 851 0
-285 849 0
-283 847 0
-281 845 0
-279 843 0
-277 841 0
-275 839 0
-274 837 0
-39 851 0
-39 -287 849 0
-39 -285 847 0
-39 -283 845 0
-39 -281 843 0
-39 -279 841 0
-39 -277 839 0
-39 -275 837 0
-39 -274 835 0
-37 849 0
-37 -287 847 0
-37 -285 845 0
-37 -283 843 0
-37 -281 841 0
-37 -279 839 0
-37 -277 837 0
-37 -275 835 0
-37 -274 833 0
-35 847 0
-35 -287 845 0
-35 -285 843 0
-35 -283 841 0
-35 -281 839 0
-35 -279 837 0
-35 -277 835 0
-35 -275 833 0
-35 -274 831 0
-33 845 0
-33 -287 843 0
-33 -285 841 0
-33 -283 839 0
-33 -281 837 0
-33 -279 835 0
-33 -277 833 0
-33 -275 831 0
-33 -274 829 0
-31 843 0
-31 -287 841 0
-31 -285 839 0
-31 -283 837 0
-31 -281 835 0
-31 -279 833 0
-31 -277 831 0
-31 -275 829 0
-31 -274 827 0
-29 841 0
-29 -287 839 0
-29 -285 837 0
-29 -283 835 0
-29 -281 833 0
-29 -279 831 0
-29 -277 829 0
-29 -275 827 0
-29 -274 825 0
-27 839 0
-27 -287 837 0
-27 -285 835 0
-27 -283 833 0
-27 -281 831 0
-27 -279 829 0
-27 -277 827 0
-27 -275 825 0
-27 -274 823 0
-26 837 0
-26 -287 835 0
-26 -285 833 0
-26 -283 831 0
-26 -281 829 0
-26 -279 827 0
-26 -277 825 0
-26 -275 823 0
-26 -274 822 0
c ((shift(grid_00002_00006, -1) - aux129 + shift(grid_00003_00006, -1))<=0)
228 -853 0
229 -854 0
231 -856 0
233 -858 0
235 -860 0
237 -862 0
239 -864 0
241 -866 0
150 -853 0
150 228 -854 0
150 229 -856 0
150 231 -858 0
150 233 -860 0
150 235 -862 0
150 237 -864 0
150 239 -866 0
150 241 -868 0
151 -854 0
151 228 -856 0
151 229 -858 0
151 231 -860 0
151 233 -862 0
151 235 -864 0
151 237 -866 0
151 239 -868 0
151 241 -870 0
153 -856 0
153 228 -858 0
153 229 -860 0
153 231 -862 0
153 233 -864 0
153 235 -866 0
153 237 -868 0
153 239 -870 0
153 241 -872 0
155 -858 0
155 228 -860 0
155 229 -862 0
155 231 -864 0
155 233 -866 0
155 235 -868 0
155 237 -870 0
155 239 -872 0
155 241 -874 0
157 -860 0
157 228 -862 0
157 229 -864 0
157 231 -866 0
157 233 -868 0
157 235 -870 0
157 237 -872 0
157 239 -874 0
157 241 -876 0
159 -862 0
159 228 -864 0
159 229 -866 0
159 231 -868 0
159 233 -870 0
159 235 -872 0
159 237 -874 0
159 239 -876 0
159 241 -878 0
161 -864 0
161 228 -866 0
161 229 -868 0
161 231 -870 0
161 233 -872 0
161 235 -874 0
161 237 -876 0
161 239 -878 0
161 241 -880 0
163 -866 0
163 228 -868 0
163 229 -870 0
163 231 -872 0
163 233 -874 0
163 235 -876 0
163 237 -878 0
163 239 -880 0
163 241 -882 0
c (0<=(shift(grid_00002_00006, -1) - aux129 + shift(grid_00003_00006, -1)))
-241 882 0
-239 880 0
-237 878 0
-235 876 0
-233 874 0
-231 872 0
-229 870 0
-228 868 0
-163 882 0
-163 -241 880 0
-163 -239 878 0
-163 -237 876 0
-163 -235 874 0
-163 -233 872 0
-163 -231 870 0
-163 -229 868 0
-163 -228 866 0
-161 880 0
-161 -241 878 0
-161 -239 876 0
-161 -237 874 0
-161 -235 872 0
-161 -233 870 0
-161 -231 868 0
-161 -229 866 0
-161 -228 864 0
-159 878 0
-159 -241 876 0
-159 -239 874 0
-159 -237 872 0
-159 -235 870 0
-159 -233 868 0
-159 -231 866 0
-159 -229 864 0
-159 -228 862 0
-157 876 0
-157 -241 874 0
-157 -239 872 0
-157 -237 870 0
-157 -235 868 0
-157 -233 866 0
-157 -231 864 0
-157 -229 862 0
-157 -228 860 0
-155 874 0
-155 -241 872 0
-155 -239 870 0
-155 -237 868 0
-155 -235 866 0
-155 -233 864 0
-155 -231 862 0
-155 -229 860 0
-155 -228 858 0
-153 872 0
-153 -241 870 0
-153 -239 868 0
-153 -237 866 0
-153 -235 864 0
-153 -233 862 0
-153 -231 860 0
-153 -229 858 0
-153 -228 856 0
-151 870 0
-151 -241 868 0
-151 -239 866 0
-151 -237 864 0
-151 -235 862 0
-151 -233 860 0
-151 -231 858 0
-151 -229 856 0
-151 -228 854 0
-150 868 0
-150 -241 866 0
-150 -239 864 0
-150 -237 862 0
-150 -235 860 0
-150 -233 858 0
-150 -231 856 0
-150 -229 854 0
-150 -228 853 0
c (( - aux130 + shift(grid_00001_00006, -1) + shift(grid_00004_00006, -1))<=0)
320 -884 0
321 -885 0
323 -887 0
325 -889 0
327 -891 0
329 -893 0
331 -895 0
333 -897 0
72 -884 0
72 320 -885 0
72 321 -887 0
72 323 -889 0
72 325 -891 0
72 327 -893 0
72 329 -895 0
72 331 -897 0
72 333 -899 0
73 -885 0
73 320 -887 0
73 321 -889 0
73 323 -891 0
73 325 -893 0
73 327 -895 0
73 329 -897 0
73 331 -899 0
73 333 -901 0
75 -887 0
75 320 -889 0
75 321 -891 0
75 323 -893 0
75 325 -895 0
75 327 -897 0
75 329 -899 0
75 331 -901 0
75 333 -903 0
77 -889 0
77 320 -891 0
77 321 -893 0
77 323 -895 0
77 325 -897 0
77 327 -899 0
77 329 -901 0
77 331 -903 0
77 333 -905 0
79 -891 0
79 320 -893 0
79 321 -895 0
79 323 -897 0
79 325 -899 0
79 327 -901 0
79 329 -903 0
79 331 -905 0
79 333 -907 0
81 -893 0
81 320 -895 0
81 321 -897 0
81 323 -899 0
81 325 -901 0
81 327 -903 0
81 329 -905 0
81 331 -907 0
81 333 -909 0
83 -895 0
83 320 -897 0
83 321 -899 0
83 323 -901 0
83 325 -903 0
83 327 -905 0
83 329 -907 0
83 331 -909 0
83 333 -911 0
85 -897 0
85 320 -899 0
85 321 -901 0
85 323 -903 0
85 325 -905 0
85 327 -907 0
85 329 -909 0
85 331 -911 0
85 333 -913 0
c (0<=( - aux130 + shift(grid_00001_00006, -1) + shift(grid_00004_00006, -1)))
-333 913 0
-331 911 0
-329 909 0
-327 907 0
-325 905 0
-323 903 0
-321 901 0
-320 899 0
-85 913 0
-85 -333 911 0
-85 -331 909 0
-85 -329 907 0
-85 -327 905 0
-85 -325 903 0
-85 -323 901 0
-85 -321 899 0
-85 -320 897 0
-83 911 0
-83 -333 909 0
-83 -331 907 0
-83 -329 905 0
-83 -327 903 0
-83 -325 901 0
-83 -323 899 0
-83 -321 897 0
-83 -320 895 0
-81 909 0
-81 -333 907 0
-81 -331 905 0
-81 -329 903 0
-81 -327 901 0
-81 -325 899 0
-81 -323 897 0
-81 -321 895 0
-81 -320 893 0
-79 907 0
-79 -333 905 0
-79 -331 903 0
-79 -329 901 0
-79 -327 899 0
-79 -325 897 0
-79 -323 895 0
-79 -321 893 0
-79 -320 891 0
-77 905 0
-77 -333 903 0
-77 -331 901 0
-77 -329 899 0
-77 -327 897 0
-77 -325 895 0
-77 -323 893 0
-77 -321 891 0
-77 -320 889 0
-75 903 0
-75 -333 901 0
-75 -331 899 0
-75 -329 897 0
-75 -327 895 0
-75 -325 893 0
-75 -323 891 0
-75 -321 889 0
-75 -320 887 0
-73 901 0
-73 -333 899 0
-73 -331 897 0
-73 -329 895 0
-73 -327 893 0
-73 -325 891 0
-73 -323 889 0
-73 -321 887 0
-73 -320 885 0
-72 899 0
-72 -333 897 0
-72 -331 895 0
-72 -329 893 0
-72 -327 891 0
-72 -325 889 0
-72 -323 887 0
-72 -321 885 0
-72 -320 884 0
c ((SATLiteral(182) - aux142 + SATLiteral(366))<=0)
-366 -1004 0
-182 -1004 0
-182 -366 -1005 0
c (0<=(SATLiteral(182) - aux142 + SATLiteral(366)))
366 1005 0
182 1005 0
182 366 1004 0
c (( - aux143 + SATLiteral(26) + SATLiteral(104))<=0)
-104 -1007 0
-26 -1007 0
-26 -104 -1008 0
c (0<=( - aux143 + SATLiteral(26) + SATLiteral(104)))
104 1008 0
26 1008 0
26 104 1007 0
c ((SATLiteral(184) - aux144 + SATLiteral(368))<=0)
-368 -1010 0
-184 -1010 0
-184 -368 -1011 0
c (0<=(SATLiteral(184) - aux144 + SATLiteral(368)))
368 1011 0
184 1011 0
184 368 1010 0
c (( - aux145 + SATLiteral(28) + SATLiteral(106))<=0)
-106 -1013 0
-28 -1013 0
-28 -106 -1014 0
c (0<=( - aux145 + SATLiteral(28) + SATLiteral(106)))
106 1014 0
28 1014 0
28 106 1013 0
c ((SATLiteral(186) - aux146 + SATLiteral(370))<=0)
-370 -1016 0
-186 -1016 0
-186 -370 -1017 0
c (0<=(SATLiteral(186) - aux146 + SATLiteral(370)))
370 1017 0
186 1017 0
186 370 1016 0
c (( - aux147 + SATLiteral(30) + SATLiteral(108))<=0)
-108 -1019 0
-30 -1019 0
-30 -108 -1020 0
c (0<=( - aux147 + SATLiteral(30) + SATLiteral(108)))
108 1020 0
30 1020 0
30 108 1019 0
c ((SATLiteral(188) - aux148 + SATLiteral(372))<=0)
-372 -1022 0
-188 -1022 0
-188 -372 -1023 0
c (0<=(SATLiteral(188) - aux148 + SATLiteral(372)))
372 1023 0
188 1023 0
188 372 1022 0
c (( - aux149 + SATLiteral(32) + SATLiteral(110))<=0)
-110 -1025 0
-32 -1025 0
-32 -110 -1026 0
c (0<=( - aux149 + SATLiteral(32) + SATLiteral(110)))
110 1026 0
32 1026 0
32 110 1025 0
c ((SATLiteral(190) - aux150 + SATLiteral(374))<=0)
-374 -1028 0
-190 -1028 0
-190 -374 -1029 0
c (0<=(SATLiteral(190) - aux150 + SATLiteral(374)))
374 1029 0
190 1029 0
190 374 1028 0
c (( - aux151 + SATLiteral(34) + SATLiteral(112))<=0)
-112 -1031 0
-34 -1031 0
-34 -112 -1032 0
c (0<=( - aux151 + SATLiteral(34) + SATLiteral(112)))
112 1032 0
34 1032 0
34 112 1031 0
c ((SATLiteral(192) - aux152 + SATLiteral(376))<=0)
-376 -1034 0
-192 -1034 0
-192 -376 -1035 0
c (0<=(SATLiteral(192) - aux152 + SATLiteral(376)))
376 1035 0
192 1035 0
192 376 1034 0
c (( - aux153 + SATLiteral(36) + SATLiteral(114))<=0)
-114 -1037 0
-36 -1037 0
-36 -114 -1038 0
c (0<=( - aux153 + SATLiteral(36) + SATLiteral(114)))
114 1038 0
36 1038 0
36 114 1037 0
c ((SATLiteral(194) - aux154 + SATLiteral(378))<=0)
-378 -1040 0
-194 -1040 0
-194 -378 -1041 0
c (0<=(SATLiteral(194) - aux154 + SATLiteral(378)))
378 1041 0
194 1041 0
194 378 1040 0
c (( - aux155 + SATLiteral(38) + SATLiteral(116))<=0)
-116 -1043 0
-38 -1043 0
-38 -116 -1044 0
c (0<=( - aux155 + SATLiteral(38) + SATLiteral(116)))
116 1044 0
38 1044 0
38 116 1043 0
c ((SATLiteral(196) - aux156 + SATLiteral(380))<=0)
-380 -1046 0
-196 -1046 0
-196 -380 -1047 0
c (0<=(SATLiteral(196) - aux156 + SATLiteral(380)))
380 1047 0
196 1047 0
196 380 1046 0
c (( - aux157 + SATLiteral(40) + SATLiteral(118))<=0)
-118 -1049 0
-40 -1049 0
-40 -118 -1050 0
c (0<=( - aux157 + SATLiteral(40) + SATLiteral(118)))
118 1050 0
40 1050 0
40 118 1049 0
c ((SATLiteral(-195) - aux158 + SATLiteral(-379))<=0)
379 -1052 0
195 -1052 0
195 379 -1053 0
c (0<=(SATLiteral(-195) - aux158 + SATLiteral(-379)))
-379 1053 0
-195 1053 0
-195 -379 1052 0
c (( - aux159 + SATLiteral(-39) + SATLiteral(-117))<=0)
117 -1055 0
39 -1055 0
39 117 -1056 0
c (0<=( - aux159 + SATLiteral(-39) + SATLiteral(-117)))
-117 1056 0
-39 1056 0
-39 -117 1055 0
c ((SATLiteral(228) - aux160 + SATLiteral(412))<=0)
-412 -1058 0
-228 -1058 0
-228 -412 -1059 0
c (0<=(SATLiteral(228) - aux160 + SATLiteral(412)))
412 1059 0
228 1059 0
228 412 1058 0
c (( - aux161 + SATLiteral(72) + SATLiteral(150))<=0)
-150 -1061 0
-72 -1061 0
-72 -150 -1062 0
c (0<=( - aux161 + SATLiteral(72) + SATLiteral(150)))
150 1062 0
72 1062 0
72 150 1061 0
c ((SATLiteral(230) - aux162 + SATLiteral(414))<=0)
-414 -1064 0
-230 -1064 0
-230 -414 -1065 0
c (0<=(SATLiteral(230) - aux162 + SATLiteral(414)))
414 1065 0
230 1065 0
230 414 1064 0
c (( - aux163 + SATLiteral(74) + SATLiteral(152))<=0)
-152 -1067 0
-74 -1067 0
-74 -152 -1068 0
c (0<=( - aux163 + SATLiteral(74) + SATLiteral(152)))
152 1068 0
74 1068 0
74 152 1067 0
c ((SATLiteral(232) - aux164 + SATLiteral(416))<=0)
-416 -1070 0
-232 -1070 0
-232 -416 -1071 0
c (0<=(SATLiteral(232) - aux164 + SATLiteral(416)))
416 1071 0
232 1071 0
232 416 1070 0
c (( - aux165 + SATLiteral(76) + SATLiteral(154))<=0)
-154 -1073 0
-76 -1073 0
-76 -154 -1074 0
c (0<=( - aux165 + SATLiteral(76) + SATLiteral(154)))
154 1074 0
76 1074 0
76 154 1073 0
c ((SATLiteral(234) - aux166 + SATLiteral(418))<=0)
-418 -1076 0
-234 -1076 0
-234 -418 -1077 0
c (0<=(SATLiteral(234) - aux166 + SATLiteral(418)))
418 1077 0
234 1077 0
234 418 1076 0
c (( - aux167 + SATLiteral(78) + SATLiteral(156))<=0)
-156 -1079 0
-78 -1079 0
-78 -156 -1080 0
c (0<=( - aux167 + SATLiteral(78) + SATLiteral(156)))
156 1080 0
78 1080 0
78 156 1079 0
c ((SATLiteral(236) - aux168 + SATLiteral(420))<=0)
-420 -1082 0
-236 -1082 0
-236 -420 -1083 0
c (0<=(SATLiteral(236) - aux168 + SATLiteral(420)))
420 1083 0
236 1083 0
236 420 1082 0
c (( - aux169 + SATLiteral(80) + SATLiteral(158))<=0)
-158 -1085 0
-80 -1085 0
-80 -158 -1086 0
c (0<=( - aux169 + SATLiteral(80) + SATLiteral(158)))
158 1086 0
80 1086 0
80 158 1085 0
c ((SATLiteral(238) - aux170 + SATLiteral(422))<=0)
-422 -1088 0
-238 -1088 0
-238 -422 -1089 0
c (0<=(SATLiteral(238) - aux170 + SATLiteral(422)))
422 1089 0
238 1089 0
238 422 1088 0
c (( - aux171 + SATLiteral(82) + SATLiteral(160))<=0)
-160 -1091 0
-82 -1091 0
-82 -160 -1092 0
c (0<=( - aux171 + SATLiteral(82) + SATLiteral(160)))
160 1092 0
82 1092 0
82 160 1091 0
c ((SATLiteral(240) - aux172 + SATLiteral(424))<=0)
-424 -1094 0
-240 -1094 0
-240 -424 -1095 0
c (0<=(SATLiteral(240) - aux172 + SATLiteral(424)))
424 1095 0
240 1095 0
240 424 1094 0
c (( - aux173 + SATLiteral(84) + SATLiteral(162))<=0)
-162 -1097 0
-84 -1097 0
-84 -162 -1098 0
c (0<=( - aux173 + SATLiteral(84) + SATLiteral(162)))
162 1098 0
84 1098 0
84 162 1097 0
c ((SATLiteral(242) - aux174 + SATLiteral(426))<=0)
-426 -1100 0
-242 -1100 0
-242 -426 -1101 0
c (0<=(SATLiteral(242) - aux174 + SATLiteral(426)))
426 1101 0
242 1101 0
242 426 1100 0
c (( - aux175 + SATLiteral(86) + SATLiteral(164))<=0)
-164 -1103 0
-86 -1103 0
-86 -164 -1104 0
c (0<=( - aux175 + SATLiteral(86) + SATLiteral(164)))
164 1104 0
86 1104 0
86 164 1103 0
c ((SATLiteral(-241) - aux176 + SATLiteral(-425))<=0)
425 -1106 0
241 -1106 0
241 425 -1107 0
c (0<=(SATLiteral(-241) - aux176 + SATLiteral(-425)))
-425 1107 0
-241 1107 0
-241 -425 1106 0
c (( - aux177 + SATLiteral(-85) + SATLiteral(-163))<=0)
163 -1109 0
85 -1109 0
85 163 -1110 0
c (0<=( - aux177 + SATLiteral(-85) + SATLiteral(-163)))
-163 1110 0
-85 1110 0
-85 -163 1109 0
