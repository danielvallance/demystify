p cnf 590 3316                                                                                      

1 0
c Encoding variable: grid_00000_00000 with domain: int(0) (representing constraint )
c Var 'grid_00000_00000' direct represents '0' with '2'
2 0
c Encoding variable: grid_00000_00001 with domain: int(0) (representing constraint )
c Var 'grid_00000_00001' direct represents '0' with '3'
3 0
c Encoding variable: grid_00000_00002 with domain: int(0) (representing constraint )
c Var 'grid_00000_00002' direct represents '0' with '4'
4 0
c Encoding variable: grid_00000_00003 with domain: int(0) (representing constraint )
c Var 'grid_00000_00003' direct represents '0' with '5'
5 0
c Encoding variable: grid_00000_00004 with domain: int(0) (representing constraint )
c Var 'grid_00000_00004' direct represents '0' with '6'
6 0
c Encoding variable: grid_00001_00000 with domain: int(0) (representing constraint )
c Var 'grid_00001_00000' direct represents '0' with '7'
7 0
c Encoding variable: grid_00001_00001 with domain: int(0) (representing constraint )
c Var 'grid_00001_00001' direct represents '0' with '8'
8 0
c Encoding variable: grid_00001_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00002' order represents '1' with '9'
c Var 'grid_00001_00002' direct represents '1' with '9'
c Var 'grid_00001_00002' order represents '2' with '10'
-9 10 0
c Var 'grid_00001_00002' direct represents '2' with '11'
9 -10 11 0
-11 10 0
-11 -9 0
c Var 'grid_00001_00002' order represents '3' with '12'
-10 12 0
c Var 'grid_00001_00002' direct represents '3' with '13'
10 -12 13 0
-13 12 0
-13 -10 0
c Var 'grid_00001_00002' order represents '4' with '14'
-12 14 0
c Var 'grid_00001_00002' direct represents '4' with '15'
12 -14 15 0
-15 14 0
-15 -12 0
c Var 'grid_00001_00002' order represents '5' with '16'
-14 16 0
c Var 'grid_00001_00002' direct represents '5' with '17'
14 -16 17 0
-17 16 0
-17 -14 0
c Var 'grid_00001_00002' order represents '6' with '18'
-16 18 0
c Var 'grid_00001_00002' direct represents '6' with '19'
16 -18 19 0
-19 18 0
-19 -16 0
c Var 'grid_00001_00002' order represents '7' with '20'
-18 20 0
c Var 'grid_00001_00002' direct represents '7' with '21'
18 -20 21 0
-21 20 0
-21 -18 0
c Var 'grid_00001_00002' order represents '8' with '22'
-20 22 0
c Var 'grid_00001_00002' direct represents '8' with '23'
20 -22 23 0
-23 22 0
-23 -20 0
c Var 'grid_00001_00002' direct represents '9' with '-22'
9 11 13 15 17 19 21 23 -22 0
c Encoding variable: grid_00001_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00003' order represents '1' with '24'
c Var 'grid_00001_00003' direct represents '1' with '24'
c Var 'grid_00001_00003' order represents '2' with '25'
-24 25 0
c Var 'grid_00001_00003' direct represents '2' with '26'
24 -25 26 0
-26 25 0
-26 -24 0
c Var 'grid_00001_00003' order represents '3' with '27'
-25 27 0
c Var 'grid_00001_00003' direct represents '3' with '28'
25 -27 28 0
-28 27 0
-28 -25 0
c Var 'grid_00001_00003' order represents '4' with '29'
-27 29 0
c Var 'grid_00001_00003' direct represents '4' with '30'
27 -29 30 0
-30 29 0
-30 -27 0
c Var 'grid_00001_00003' order represents '5' with '31'
-29 31 0
c Var 'grid_00001_00003' direct represents '5' with '32'
29 -31 32 0
-32 31 0
-32 -29 0
c Var 'grid_00001_00003' order represents '6' with '33'
-31 33 0
c Var 'grid_00001_00003' direct represents '6' with '34'
31 -33 34 0
-34 33 0
-34 -31 0
c Var 'grid_00001_00003' order represents '7' with '35'
-33 35 0
c Var 'grid_00001_00003' direct represents '7' with '36'
33 -35 36 0
-36 35 0
-36 -33 0
c Var 'grid_00001_00003' order represents '8' with '37'
-35 37 0
c Var 'grid_00001_00003' direct represents '8' with '38'
35 -37 38 0
-38 37 0
-38 -35 0
c Var 'grid_00001_00003' direct represents '9' with '-37'
24 26 28 30 32 34 36 38 -37 0
c Encoding variable: grid_00001_00004 with domain: int(0) (representing constraint )
c Var 'grid_00001_00004' direct represents '0' with '39'
39 0
c Encoding variable: grid_00002_00000 with domain: int(0) (representing constraint )
c Var 'grid_00002_00000' direct represents '0' with '40'
40 0
c Encoding variable: grid_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00001' order represents '1' with '41'
c Var 'grid_00002_00001' direct represents '1' with '41'
c Var 'grid_00002_00001' order represents '2' with '42'
-41 42 0
c Var 'grid_00002_00001' direct represents '2' with '43'
41 -42 43 0
-43 42 0
-43 -41 0
c Var 'grid_00002_00001' order represents '3' with '44'
-42 44 0
c Var 'grid_00002_00001' direct represents '3' with '45'
42 -44 45 0
-45 44 0
-45 -42 0
c Var 'grid_00002_00001' order represents '4' with '46'
-44 46 0
c Var 'grid_00002_00001' direct represents '4' with '47'
44 -46 47 0
-47 46 0
-47 -44 0
c Var 'grid_00002_00001' order represents '5' with '48'
-46 48 0
c Var 'grid_00002_00001' direct represents '5' with '49'
46 -48 49 0
-49 48 0
-49 -46 0
c Var 'grid_00002_00001' order represents '6' with '50'
-48 50 0
c Var 'grid_00002_00001' direct represents '6' with '51'
48 -50 51 0
-51 50 0
-51 -48 0
c Var 'grid_00002_00001' order represents '7' with '52'
-50 52 0
c Var 'grid_00002_00001' direct represents '7' with '53'
50 -52 53 0
-53 52 0
-53 -50 0
c Var 'grid_00002_00001' order represents '8' with '54'
-52 54 0
c Var 'grid_00002_00001' direct represents '8' with '55'
52 -54 55 0
-55 54 0
-55 -52 0
c Var 'grid_00002_00001' direct represents '9' with '-54'
41 43 45 47 49 51 53 55 -54 0
c Encoding variable: grid_00002_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00002' order represents '1' with '56'
c Var 'grid_00002_00002' direct represents '1' with '56'
c Var 'grid_00002_00002' order represents '2' with '57'
-56 57 0
c Var 'grid_00002_00002' direct represents '2' with '58'
56 -57 58 0
-58 57 0
-58 -56 0
c Var 'grid_00002_00002' order represents '3' with '59'
-57 59 0
c Var 'grid_00002_00002' direct represents '3' with '60'
57 -59 60 0
-60 59 0
-60 -57 0
c Var 'grid_00002_00002' order represents '4' with '61'
-59 61 0
c Var 'grid_00002_00002' direct represents '4' with '62'
59 -61 62 0
-62 61 0
-62 -59 0
c Var 'grid_00002_00002' order represents '5' with '63'
-61 63 0
c Var 'grid_00002_00002' direct represents '5' with '64'
61 -63 64 0
-64 63 0
-64 -61 0
c Var 'grid_00002_00002' order represents '6' with '65'
-63 65 0
c Var 'grid_00002_00002' direct represents '6' with '66'
63 -65 66 0
-66 65 0
-66 -63 0
c Var 'grid_00002_00002' order represents '7' with '67'
-65 67 0
c Var 'grid_00002_00002' direct represents '7' with '68'
65 -67 68 0
-68 67 0
-68 -65 0
c Var 'grid_00002_00002' order represents '8' with '69'
-67 69 0
c Var 'grid_00002_00002' direct represents '8' with '70'
67 -69 70 0
-70 69 0
-70 -67 0
c Var 'grid_00002_00002' direct represents '9' with '-69'
56 58 60 62 64 66 68 70 -69 0
c Encoding variable: grid_00002_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00003' order represents '1' with '71'
c Var 'grid_00002_00003' direct represents '1' with '71'
c Var 'grid_00002_00003' order represents '2' with '72'
-71 72 0
c Var 'grid_00002_00003' direct represents '2' with '73'
71 -72 73 0
-73 72 0
-73 -71 0
c Var 'grid_00002_00003' order represents '3' with '74'
-72 74 0
c Var 'grid_00002_00003' direct represents '3' with '75'
72 -74 75 0
-75 74 0
-75 -72 0
c Var 'grid_00002_00003' order represents '4' with '76'
-74 76 0
c Var 'grid_00002_00003' direct represents '4' with '77'
74 -76 77 0
-77 76 0
-77 -74 0
c Var 'grid_00002_00003' order represents '5' with '78'
-76 78 0
c Var 'grid_00002_00003' direct represents '5' with '79'
76 -78 79 0
-79 78 0
-79 -76 0
c Var 'grid_00002_00003' order represents '6' with '80'
-78 80 0
c Var 'grid_00002_00003' direct represents '6' with '81'
78 -80 81 0
-81 80 0
-81 -78 0
c Var 'grid_00002_00003' order represents '7' with '82'
-80 82 0
c Var 'grid_00002_00003' direct represents '7' with '83'
80 -82 83 0
-83 82 0
-83 -80 0
c Var 'grid_00002_00003' order represents '8' with '84'
-82 84 0
c Var 'grid_00002_00003' direct represents '8' with '85'
82 -84 85 0
-85 84 0
-85 -82 0
c Var 'grid_00002_00003' direct represents '9' with '-84'
71 73 75 77 79 81 83 85 -84 0
c Encoding variable: grid_00002_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00004' order represents '1' with '86'
c Var 'grid_00002_00004' direct represents '1' with '86'
c Var 'grid_00002_00004' order represents '2' with '87'
-86 87 0
c Var 'grid_00002_00004' direct represents '2' with '88'
86 -87 88 0
-88 87 0
-88 -86 0
c Var 'grid_00002_00004' order represents '3' with '89'
-87 89 0
c Var 'grid_00002_00004' direct represents '3' with '90'
87 -89 90 0
-90 89 0
-90 -87 0
c Var 'grid_00002_00004' order represents '4' with '91'
-89 91 0
c Var 'grid_00002_00004' direct represents '4' with '92'
89 -91 92 0
-92 91 0
-92 -89 0
c Var 'grid_00002_00004' order represents '5' with '93'
-91 93 0
c Var 'grid_00002_00004' direct represents '5' with '94'
91 -93 94 0
-94 93 0
-94 -91 0
c Var 'grid_00002_00004' order represents '6' with '95'
-93 95 0
c Var 'grid_00002_00004' direct represents '6' with '96'
93 -95 96 0
-96 95 0
-96 -93 0
c Var 'grid_00002_00004' order represents '7' with '97'
-95 97 0
c Var 'grid_00002_00004' direct represents '7' with '98'
95 -97 98 0
-98 97 0
-98 -95 0
c Var 'grid_00002_00004' order represents '8' with '99'
-97 99 0
c Var 'grid_00002_00004' direct represents '8' with '100'
97 -99 100 0
-100 99 0
-100 -97 0
c Var 'grid_00002_00004' direct represents '9' with '-99'
86 88 90 92 94 96 98 100 -99 0
c Encoding variable: grid_00003_00000 with domain: int(0) (representing constraint )
c Var 'grid_00003_00000' direct represents '0' with '101'
101 0
c Encoding variable: grid_00003_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00001' order represents '1' with '102'
c Var 'grid_00003_00001' direct represents '1' with '102'
c Var 'grid_00003_00001' order represents '2' with '103'
-102 103 0
c Var 'grid_00003_00001' direct represents '2' with '104'
102 -103 104 0
-104 103 0
-104 -102 0
c Var 'grid_00003_00001' order represents '3' with '105'
-103 105 0
c Var 'grid_00003_00001' direct represents '3' with '106'
103 -105 106 0
-106 105 0
-106 -103 0
c Var 'grid_00003_00001' order represents '4' with '107'
-105 107 0
c Var 'grid_00003_00001' direct represents '4' with '108'
105 -107 108 0
-108 107 0
-108 -105 0
c Var 'grid_00003_00001' order represents '5' with '109'
-107 109 0
c Var 'grid_00003_00001' direct represents '5' with '110'
107 -109 110 0
-110 109 0
-110 -107 0
c Var 'grid_00003_00001' order represents '6' with '111'
-109 111 0
c Var 'grid_00003_00001' direct represents '6' with '112'
109 -111 112 0
-112 111 0
-112 -109 0
c Var 'grid_00003_00001' order represents '7' with '113'
-111 113 0
c Var 'grid_00003_00001' direct represents '7' with '114'
111 -113 114 0
-114 113 0
-114 -111 0
c Var 'grid_00003_00001' order represents '8' with '115'
-113 115 0
c Var 'grid_00003_00001' direct represents '8' with '116'
113 -115 116 0
-116 115 0
-116 -113 0
c Var 'grid_00003_00001' direct represents '9' with '-115'
102 104 106 108 110 112 114 116 -115 0
c Encoding variable: grid_00003_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00002' order represents '1' with '117'
c Var 'grid_00003_00002' direct represents '1' with '117'
c Var 'grid_00003_00002' order represents '2' with '118'
-117 118 0
c Var 'grid_00003_00002' direct represents '2' with '119'
117 -118 119 0
-119 118 0
-119 -117 0
c Var 'grid_00003_00002' order represents '3' with '120'
-118 120 0
c Var 'grid_00003_00002' direct represents '3' with '121'
118 -120 121 0
-121 120 0
-121 -118 0
c Var 'grid_00003_00002' order represents '4' with '122'
-120 122 0
c Var 'grid_00003_00002' direct represents '4' with '123'
120 -122 123 0
-123 122 0
-123 -120 0
c Var 'grid_00003_00002' order represents '5' with '124'
-122 124 0
c Var 'grid_00003_00002' direct represents '5' with '125'
122 -124 125 0
-125 124 0
-125 -122 0
c Var 'grid_00003_00002' order represents '6' with '126'
-124 126 0
c Var 'grid_00003_00002' direct represents '6' with '127'
124 -126 127 0
-127 126 0
-127 -124 0
c Var 'grid_00003_00002' order represents '7' with '128'
-126 128 0
c Var 'grid_00003_00002' direct represents '7' with '129'
126 -128 129 0
-129 128 0
-129 -126 0
c Var 'grid_00003_00002' order represents '8' with '130'
-128 130 0
c Var 'grid_00003_00002' direct represents '8' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'grid_00003_00002' direct represents '9' with '-130'
117 119 121 123 125 127 129 131 -130 0
c Encoding variable: grid_00003_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00003' order represents '1' with '132'
c Var 'grid_00003_00003' direct represents '1' with '132'
c Var 'grid_00003_00003' order represents '2' with '133'
-132 133 0
c Var 'grid_00003_00003' direct represents '2' with '134'
132 -133 134 0
-134 133 0
-134 -132 0
c Var 'grid_00003_00003' order represents '3' with '135'
-133 135 0
c Var 'grid_00003_00003' direct represents '3' with '136'
133 -135 136 0
-136 135 0
-136 -133 0
c Var 'grid_00003_00003' order represents '4' with '137'
-135 137 0
c Var 'grid_00003_00003' direct represents '4' with '138'
135 -137 138 0
-138 137 0
-138 -135 0
c Var 'grid_00003_00003' order represents '5' with '139'
-137 139 0
c Var 'grid_00003_00003' direct represents '5' with '140'
137 -139 140 0
-140 139 0
-140 -137 0
c Var 'grid_00003_00003' order represents '6' with '141'
-139 141 0
c Var 'grid_00003_00003' direct represents '6' with '142'
139 -141 142 0
-142 141 0
-142 -139 0
c Var 'grid_00003_00003' order represents '7' with '143'
-141 143 0
c Var 'grid_00003_00003' direct represents '7' with '144'
141 -143 144 0
-144 143 0
-144 -141 0
c Var 'grid_00003_00003' order represents '8' with '145'
-143 145 0
c Var 'grid_00003_00003' direct represents '8' with '146'
143 -145 146 0
-146 145 0
-146 -143 0
c Var 'grid_00003_00003' direct represents '9' with '-145'
132 134 136 138 140 142 144 146 -145 0
c Encoding variable: grid_00003_00004 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00004' order represents '1' with '147'
c Var 'grid_00003_00004' direct represents '1' with '147'
c Var 'grid_00003_00004' order represents '2' with '148'
-147 148 0
c Var 'grid_00003_00004' direct represents '2' with '149'
147 -148 149 0
-149 148 0
-149 -147 0
c Var 'grid_00003_00004' order represents '3' with '150'
-148 150 0
c Var 'grid_00003_00004' direct represents '3' with '151'
148 -150 151 0
-151 150 0
-151 -148 0
c Var 'grid_00003_00004' order represents '4' with '152'
-150 152 0
c Var 'grid_00003_00004' direct represents '4' with '153'
150 -152 153 0
-153 152 0
-153 -150 0
c Var 'grid_00003_00004' order represents '5' with '154'
-152 154 0
c Var 'grid_00003_00004' direct represents '5' with '155'
152 -154 155 0
-155 154 0
-155 -152 0
c Var 'grid_00003_00004' order represents '6' with '156'
-154 156 0
c Var 'grid_00003_00004' direct represents '6' with '157'
154 -156 157 0
-157 156 0
-157 -154 0
c Var 'grid_00003_00004' order represents '7' with '158'
-156 158 0
c Var 'grid_00003_00004' direct represents '7' with '159'
156 -158 159 0
-159 158 0
-159 -156 0
c Var 'grid_00003_00004' order represents '8' with '160'
-158 160 0
c Var 'grid_00003_00004' direct represents '8' with '161'
158 -160 161 0
-161 160 0
-161 -158 0
c Var 'grid_00003_00004' direct represents '9' with '-160'
147 149 151 153 155 157 159 161 -160 0
c Encoding variable: grid_00004_00000 with domain: int(0) (representing constraint )
c Var 'grid_00004_00000' direct represents '0' with '162'
162 0
c Encoding variable: grid_00004_00001 with domain: int(0) (representing constraint )
c Var 'grid_00004_00001' direct represents '0' with '163'
163 0
c Encoding variable: grid_00004_00002 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00002' order represents '1' with '164'
c Var 'grid_00004_00002' direct represents '1' with '164'
c Var 'grid_00004_00002' order represents '2' with '165'
-164 165 0
c Var 'grid_00004_00002' direct represents '2' with '166'
164 -165 166 0
-166 165 0
-166 -164 0
c Var 'grid_00004_00002' order represents '3' with '167'
-165 167 0
c Var 'grid_00004_00002' direct represents '3' with '168'
165 -167 168 0
-168 167 0
-168 -165 0
c Var 'grid_00004_00002' order represents '4' with '169'
-167 169 0
c Var 'grid_00004_00002' direct represents '4' with '170'
167 -169 170 0
-170 169 0
-170 -167 0
c Var 'grid_00004_00002' order represents '5' with '171'
-169 171 0
c Var 'grid_00004_00002' direct represents '5' with '172'
169 -171 172 0
-172 171 0
-172 -169 0
c Var 'grid_00004_00002' order represents '6' with '173'
-171 173 0
c Var 'grid_00004_00002' direct represents '6' with '174'
171 -173 174 0
-174 173 0
-174 -171 0
c Var 'grid_00004_00002' order represents '7' with '175'
-173 175 0
c Var 'grid_00004_00002' direct represents '7' with '176'
173 -175 176 0
-176 175 0
-176 -173 0
c Var 'grid_00004_00002' order represents '8' with '177'
-175 177 0
c Var 'grid_00004_00002' direct represents '8' with '178'
175 -177 178 0
-178 177 0
-178 -175 0
c Var 'grid_00004_00002' direct represents '9' with '-177'
164 166 168 170 172 174 176 178 -177 0
c Encoding variable: grid_00004_00003 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00003' order represents '1' with '179'
c Var 'grid_00004_00003' direct represents '1' with '179'
c Var 'grid_00004_00003' order represents '2' with '180'
-179 180 0
c Var 'grid_00004_00003' direct represents '2' with '181'
179 -180 181 0
-181 180 0
-181 -179 0
c Var 'grid_00004_00003' order represents '3' with '182'
-180 182 0
c Var 'grid_00004_00003' direct represents '3' with '183'
180 -182 183 0
-183 182 0
-183 -180 0
c Var 'grid_00004_00003' order represents '4' with '184'
-182 184 0
c Var 'grid_00004_00003' direct represents '4' with '185'
182 -184 185 0
-185 184 0
-185 -182 0
c Var 'grid_00004_00003' order represents '5' with '186'
-184 186 0
c Var 'grid_00004_00003' direct represents '5' with '187'
184 -186 187 0
-187 186 0
-187 -184 0
c Var 'grid_00004_00003' order represents '6' with '188'
-186 188 0
c Var 'grid_00004_00003' direct represents '6' with '189'
186 -188 189 0
-189 188 0
-189 -186 0
c Var 'grid_00004_00003' order represents '7' with '190'
-188 190 0
c Var 'grid_00004_00003' direct represents '7' with '191'
188 -190 191 0
-191 190 0
-191 -188 0
c Var 'grid_00004_00003' order represents '8' with '192'
-190 192 0
c Var 'grid_00004_00003' direct represents '8' with '193'
190 -192 193 0
-193 192 0
-193 -190 0
c Var 'grid_00004_00003' direct represents '9' with '-192'
179 181 183 185 187 189 191 193 -192 0
c Encoding variable: grid_00004_00004 with domain: int(0) (representing constraint )
c Var 'grid_00004_00004' direct represents '0' with '194'
194 0
c Encoding variable: vertalldiff_00000_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00000' direct represents '0' with '-195'
c Var 'vertalldiff_00000_00000' direct represents '1' with '195'
c Var 'vertalldiff_00000_00000' order represents '1' with '1'
c Var 'vertalldiff_00000_00000' order represents '0' with '-195'
195 -195 0
c Encoding variable: vertalldiff_00000_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00001' direct represents '0' with '-196'
c Var 'vertalldiff_00000_00001' direct represents '1' with '196'
c Var 'vertalldiff_00000_00001' order represents '1' with '1'
c Var 'vertalldiff_00000_00001' order represents '0' with '-196'
196 -196 0
c Encoding variable: vertalldiff_00000_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00002' direct represents '0' with '-197'
c Var 'vertalldiff_00000_00002' direct represents '1' with '197'
c Var 'vertalldiff_00000_00002' order represents '1' with '1'
c Var 'vertalldiff_00000_00002' order represents '0' with '-197'
c Encoding variable: vertalldiff_00000_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00003' direct represents '0' with '-198'
c Var 'vertalldiff_00000_00003' direct represents '1' with '198'
c Var 'vertalldiff_00000_00003' order represents '1' with '1'
c Var 'vertalldiff_00000_00003' order represents '0' with '-198'
c Encoding variable: vertalldiff_00000_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00000_00004' direct represents '0' with '-199'
c Var 'vertalldiff_00000_00004' direct represents '1' with '199'
c Var 'vertalldiff_00000_00004' order represents '1' with '1'
c Var 'vertalldiff_00000_00004' order represents '0' with '-199'
199 -199 0
c Encoding variable: vertalldiff_00001_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00000' direct represents '0' with '-200'
c Var 'vertalldiff_00001_00000' direct represents '1' with '200'
c Var 'vertalldiff_00001_00000' order represents '1' with '1'
c Var 'vertalldiff_00001_00000' order represents '0' with '-200'
200 -200 0
c Encoding variable: vertalldiff_00001_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00001' direct represents '0' with '-201'
c Var 'vertalldiff_00001_00001' direct represents '1' with '201'
c Var 'vertalldiff_00001_00001' order represents '1' with '1'
c Var 'vertalldiff_00001_00001' order represents '0' with '-201'
c Encoding variable: vertalldiff_00001_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00002' direct represents '0' with '-202'
c Var 'vertalldiff_00001_00002' direct represents '1' with '202'
c Var 'vertalldiff_00001_00002' order represents '1' with '1'
c Var 'vertalldiff_00001_00002' order represents '0' with '-202'
202 -202 0
c Encoding variable: vertalldiff_00001_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00003' direct represents '0' with '-203'
c Var 'vertalldiff_00001_00003' direct represents '1' with '203'
c Var 'vertalldiff_00001_00003' order represents '1' with '1'
c Var 'vertalldiff_00001_00003' order represents '0' with '-203'
203 -203 0
c Encoding variable: vertalldiff_00001_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00001_00004' direct represents '0' with '-204'
c Var 'vertalldiff_00001_00004' direct represents '1' with '204'
c Var 'vertalldiff_00001_00004' order represents '1' with '1'
c Var 'vertalldiff_00001_00004' order represents '0' with '-204'
c Encoding variable: vertalldiff_00002_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00000' direct represents '0' with '-205'
c Var 'vertalldiff_00002_00000' direct represents '1' with '205'
c Var 'vertalldiff_00002_00000' order represents '1' with '1'
c Var 'vertalldiff_00002_00000' order represents '0' with '-205'
205 -205 0
c Encoding variable: vertalldiff_00002_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00001' direct represents '0' with '-206'
c Var 'vertalldiff_00002_00001' direct represents '1' with '206'
c Var 'vertalldiff_00002_00001' order represents '1' with '1'
c Var 'vertalldiff_00002_00001' order represents '0' with '-206'
206 -206 0
c Encoding variable: vertalldiff_00002_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00002' direct represents '0' with '-207'
c Var 'vertalldiff_00002_00002' direct represents '1' with '207'
c Var 'vertalldiff_00002_00002' order represents '1' with '1'
c Var 'vertalldiff_00002_00002' order represents '0' with '-207'
207 -207 0
c Encoding variable: vertalldiff_00002_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00003' direct represents '0' with '-208'
c Var 'vertalldiff_00002_00003' direct represents '1' with '208'
c Var 'vertalldiff_00002_00003' order represents '1' with '1'
c Var 'vertalldiff_00002_00003' order represents '0' with '-208'
208 -208 0
c Encoding variable: vertalldiff_00002_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00002_00004' direct represents '0' with '-209'
c Var 'vertalldiff_00002_00004' direct represents '1' with '209'
c Var 'vertalldiff_00002_00004' order represents '1' with '1'
c Var 'vertalldiff_00002_00004' order represents '0' with '-209'
209 -209 0
c Encoding variable: vertalldiff_00003_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00000' direct represents '0' with '-210'
c Var 'vertalldiff_00003_00000' direct represents '1' with '210'
c Var 'vertalldiff_00003_00000' order represents '1' with '1'
c Var 'vertalldiff_00003_00000' order represents '0' with '-210'
210 -210 0
c Encoding variable: vertalldiff_00003_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00001' direct represents '0' with '-211'
c Var 'vertalldiff_00003_00001' direct represents '1' with '211'
c Var 'vertalldiff_00003_00001' order represents '1' with '1'
c Var 'vertalldiff_00003_00001' order represents '0' with '-211'
211 -211 0
c Encoding variable: vertalldiff_00003_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00002' direct represents '0' with '-212'
c Var 'vertalldiff_00003_00002' direct represents '1' with '212'
c Var 'vertalldiff_00003_00002' order represents '1' with '1'
c Var 'vertalldiff_00003_00002' order represents '0' with '-212'
212 -212 0
c Encoding variable: vertalldiff_00003_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00003' direct represents '0' with '-213'
c Var 'vertalldiff_00003_00003' direct represents '1' with '213'
c Var 'vertalldiff_00003_00003' order represents '1' with '1'
c Var 'vertalldiff_00003_00003' order represents '0' with '-213'
213 -213 0
c Encoding variable: vertalldiff_00003_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00003_00004' direct represents '0' with '-214'
c Var 'vertalldiff_00003_00004' direct represents '1' with '214'
c Var 'vertalldiff_00003_00004' order represents '1' with '1'
c Var 'vertalldiff_00003_00004' order represents '0' with '-214'
214 -214 0
c Encoding variable: vertalldiff_00004_00000 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00000' direct represents '0' with '-215'
c Var 'vertalldiff_00004_00000' direct represents '1' with '215'
c Var 'vertalldiff_00004_00000' order represents '1' with '1'
c Var 'vertalldiff_00004_00000' order represents '0' with '-215'
215 -215 0
c Encoding variable: vertalldiff_00004_00001 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00001' direct represents '0' with '-216'
c Var 'vertalldiff_00004_00001' direct represents '1' with '216'
c Var 'vertalldiff_00004_00001' order represents '1' with '1'
c Var 'vertalldiff_00004_00001' order represents '0' with '-216'
216 -216 0
c Encoding variable: vertalldiff_00004_00002 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00002' direct represents '0' with '-217'
c Var 'vertalldiff_00004_00002' direct represents '1' with '217'
c Var 'vertalldiff_00004_00002' order represents '1' with '1'
c Var 'vertalldiff_00004_00002' order represents '0' with '-217'
217 -217 0
c Encoding variable: vertalldiff_00004_00003 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00003' direct represents '0' with '-218'
c Var 'vertalldiff_00004_00003' direct represents '1' with '218'
c Var 'vertalldiff_00004_00003' order represents '1' with '1'
c Var 'vertalldiff_00004_00003' order represents '0' with '-218'
218 -218 0
c Encoding variable: vertalldiff_00004_00004 with domain: bool (representing constraint )
c Var 'vertalldiff_00004_00004' direct represents '0' with '-219'
c Var 'vertalldiff_00004_00004' direct represents '1' with '219'
c Var 'vertalldiff_00004_00004' order represents '1' with '1'
c Var 'vertalldiff_00004_00004' order represents '0' with '-219'
219 -219 0
c Encoding variable: vertsum_00000_00000 with domain: bool (representing constraint )
c Var 'vertsum_00000_00000' direct represents '0' with '-220'
c Var 'vertsum_00000_00000' direct represents '1' with '220'
c Var 'vertsum_00000_00000' order represents '1' with '1'
c Var 'vertsum_00000_00000' order represents '0' with '-220'
220 -220 0
c Encoding variable: vertsum_00000_00001 with domain: bool (representing constraint )
c Var 'vertsum_00000_00001' direct represents '0' with '-221'
c Var 'vertsum_00000_00001' direct represents '1' with '221'
c Var 'vertsum_00000_00001' order represents '1' with '1'
c Var 'vertsum_00000_00001' order represents '0' with '-221'
221 -221 0
c Encoding variable: vertsum_00000_00002 with domain: bool (representing constraint )
c Var 'vertsum_00000_00002' direct represents '0' with '-222'
c Var 'vertsum_00000_00002' direct represents '1' with '222'
c Var 'vertsum_00000_00002' order represents '1' with '1'
c Var 'vertsum_00000_00002' order represents '0' with '-222'
c Encoding variable: vertsum_00000_00003 with domain: bool (representing constraint )
c Var 'vertsum_00000_00003' direct represents '0' with '-223'
c Var 'vertsum_00000_00003' direct represents '1' with '223'
c Var 'vertsum_00000_00003' order represents '1' with '1'
c Var 'vertsum_00000_00003' order represents '0' with '-223'
c Encoding variable: vertsum_00000_00004 with domain: bool (representing constraint )
c Var 'vertsum_00000_00004' direct represents '0' with '-224'
c Var 'vertsum_00000_00004' direct represents '1' with '224'
c Var 'vertsum_00000_00004' order represents '1' with '1'
c Var 'vertsum_00000_00004' order represents '0' with '-224'
224 -224 0
c Encoding variable: vertsum_00001_00000 with domain: bool (representing constraint )
c Var 'vertsum_00001_00000' direct represents '0' with '-225'
c Var 'vertsum_00001_00000' direct represents '1' with '225'
c Var 'vertsum_00001_00000' order represents '1' with '1'
c Var 'vertsum_00001_00000' order represents '0' with '-225'
225 -225 0
c Encoding variable: vertsum_00001_00001 with domain: bool (representing constraint )
c Var 'vertsum_00001_00001' direct represents '0' with '-226'
c Var 'vertsum_00001_00001' direct represents '1' with '226'
c Var 'vertsum_00001_00001' order represents '1' with '1'
c Var 'vertsum_00001_00001' order represents '0' with '-226'
c Encoding variable: vertsum_00001_00002 with domain: bool (representing constraint )
c Var 'vertsum_00001_00002' direct represents '0' with '-227'
c Var 'vertsum_00001_00002' direct represents '1' with '227'
c Var 'vertsum_00001_00002' order represents '1' with '1'
c Var 'vertsum_00001_00002' order represents '0' with '-227'
227 -227 0
c Encoding variable: vertsum_00001_00003 with domain: bool (representing constraint )
c Var 'vertsum_00001_00003' direct represents '0' with '-228'
c Var 'vertsum_00001_00003' direct represents '1' with '228'
c Var 'vertsum_00001_00003' order represents '1' with '1'
c Var 'vertsum_00001_00003' order represents '0' with '-228'
228 -228 0
c Encoding variable: vertsum_00001_00004 with domain: bool (representing constraint )
c Var 'vertsum_00001_00004' direct represents '0' with '-229'
c Var 'vertsum_00001_00004' direct represents '1' with '229'
c Var 'vertsum_00001_00004' order represents '1' with '1'
c Var 'vertsum_00001_00004' order represents '0' with '-229'
c Encoding variable: vertsum_00002_00000 with domain: bool (representing constraint )
c Var 'vertsum_00002_00000' direct represents '0' with '-230'
c Var 'vertsum_00002_00000' direct represents '1' with '230'
c Var 'vertsum_00002_00000' order represents '1' with '1'
c Var 'vertsum_00002_00000' order represents '0' with '-230'
230 -230 0
c Encoding variable: vertsum_00002_00001 with domain: bool (representing constraint )
c Var 'vertsum_00002_00001' direct represents '0' with '-231'
c Var 'vertsum_00002_00001' direct represents '1' with '231'
c Var 'vertsum_00002_00001' order represents '1' with '1'
c Var 'vertsum_00002_00001' order represents '0' with '-231'
231 -231 0
c Encoding variable: vertsum_00002_00002 with domain: bool (representing constraint )
c Var 'vertsum_00002_00002' direct represents '0' with '-232'
c Var 'vertsum_00002_00002' direct represents '1' with '232'
c Var 'vertsum_00002_00002' order represents '1' with '1'
c Var 'vertsum_00002_00002' order represents '0' with '-232'
232 -232 0
c Encoding variable: vertsum_00002_00003 with domain: bool (representing constraint )
c Var 'vertsum_00002_00003' direct represents '0' with '-233'
c Var 'vertsum_00002_00003' direct represents '1' with '233'
c Var 'vertsum_00002_00003' order represents '1' with '1'
c Var 'vertsum_00002_00003' order represents '0' with '-233'
233 -233 0
c Encoding variable: vertsum_00002_00004 with domain: bool (representing constraint )
c Var 'vertsum_00002_00004' direct represents '0' with '-234'
c Var 'vertsum_00002_00004' direct represents '1' with '234'
c Var 'vertsum_00002_00004' order represents '1' with '1'
c Var 'vertsum_00002_00004' order represents '0' with '-234'
234 -234 0
c Encoding variable: vertsum_00003_00000 with domain: bool (representing constraint )
c Var 'vertsum_00003_00000' direct represents '0' with '-235'
c Var 'vertsum_00003_00000' direct represents '1' with '235'
c Var 'vertsum_00003_00000' order represents '1' with '1'
c Var 'vertsum_00003_00000' order represents '0' with '-235'
235 -235 0
c Encoding variable: vertsum_00003_00001 with domain: bool (representing constraint )
c Var 'vertsum_00003_00001' direct represents '0' with '-236'
c Var 'vertsum_00003_00001' direct represents '1' with '236'
c Var 'vertsum_00003_00001' order represents '1' with '1'
c Var 'vertsum_00003_00001' order represents '0' with '-236'
236 -236 0
c Encoding variable: vertsum_00003_00002 with domain: bool (representing constraint )
c Var 'vertsum_00003_00002' direct represents '0' with '-237'
c Var 'vertsum_00003_00002' direct represents '1' with '237'
c Var 'vertsum_00003_00002' order represents '1' with '1'
c Var 'vertsum_00003_00002' order represents '0' with '-237'
237 -237 0
c Encoding variable: vertsum_00003_00003 with domain: bool (representing constraint )
c Var 'vertsum_00003_00003' direct represents '0' with '-238'
c Var 'vertsum_00003_00003' direct represents '1' with '238'
c Var 'vertsum_00003_00003' order represents '1' with '1'
c Var 'vertsum_00003_00003' order represents '0' with '-238'
238 -238 0
c Encoding variable: vertsum_00003_00004 with domain: bool (representing constraint )
c Var 'vertsum_00003_00004' direct represents '0' with '-239'
c Var 'vertsum_00003_00004' direct represents '1' with '239'
c Var 'vertsum_00003_00004' order represents '1' with '1'
c Var 'vertsum_00003_00004' order represents '0' with '-239'
239 -239 0
c Encoding variable: vertsum_00004_00000 with domain: bool (representing constraint )
c Var 'vertsum_00004_00000' direct represents '0' with '-240'
c Var 'vertsum_00004_00000' direct represents '1' with '240'
c Var 'vertsum_00004_00000' order represents '1' with '1'
c Var 'vertsum_00004_00000' order represents '0' with '-240'
240 -240 0
c Encoding variable: vertsum_00004_00001 with domain: bool (representing constraint )
c Var 'vertsum_00004_00001' direct represents '0' with '-241'
c Var 'vertsum_00004_00001' direct represents '1' with '241'
c Var 'vertsum_00004_00001' order represents '1' with '1'
c Var 'vertsum_00004_00001' order represents '0' with '-241'
241 -241 0
c Encoding variable: vertsum_00004_00002 with domain: bool (representing constraint )
c Var 'vertsum_00004_00002' direct represents '0' with '-242'
c Var 'vertsum_00004_00002' direct represents '1' with '242'
c Var 'vertsum_00004_00002' order represents '1' with '1'
c Var 'vertsum_00004_00002' order represents '0' with '-242'
242 -242 0
c Encoding variable: vertsum_00004_00003 with domain: bool (representing constraint )
c Var 'vertsum_00004_00003' direct represents '0' with '-243'
c Var 'vertsum_00004_00003' direct represents '1' with '243'
c Var 'vertsum_00004_00003' order represents '1' with '1'
c Var 'vertsum_00004_00003' order represents '0' with '-243'
243 -243 0
c Encoding variable: vertsum_00004_00004 with domain: bool (representing constraint )
c Var 'vertsum_00004_00004' direct represents '0' with '-244'
c Var 'vertsum_00004_00004' direct represents '1' with '244'
c Var 'vertsum_00004_00004' order represents '1' with '1'
c Var 'vertsum_00004_00004' order represents '0' with '-244'
244 -244 0
c Encoding variable: horzalldiff_00000_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00000' direct represents '0' with '-245'
c Var 'horzalldiff_00000_00000' direct represents '1' with '245'
c Var 'horzalldiff_00000_00000' order represents '1' with '1'
c Var 'horzalldiff_00000_00000' order represents '0' with '-245'
245 -245 0
c Encoding variable: horzalldiff_00000_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00001' direct represents '0' with '-246'
c Var 'horzalldiff_00000_00001' direct represents '1' with '246'
c Var 'horzalldiff_00000_00001' order represents '1' with '1'
c Var 'horzalldiff_00000_00001' order represents '0' with '-246'
246 -246 0
c Encoding variable: horzalldiff_00000_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00002' direct represents '0' with '-247'
c Var 'horzalldiff_00000_00002' direct represents '1' with '247'
c Var 'horzalldiff_00000_00002' order represents '1' with '1'
c Var 'horzalldiff_00000_00002' order represents '0' with '-247'
247 -247 0
c Encoding variable: horzalldiff_00000_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00003' direct represents '0' with '-248'
c Var 'horzalldiff_00000_00003' direct represents '1' with '248'
c Var 'horzalldiff_00000_00003' order represents '1' with '1'
c Var 'horzalldiff_00000_00003' order represents '0' with '-248'
248 -248 0
c Encoding variable: horzalldiff_00000_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00000_00004' direct represents '0' with '-249'
c Var 'horzalldiff_00000_00004' direct represents '1' with '249'
c Var 'horzalldiff_00000_00004' order represents '1' with '1'
c Var 'horzalldiff_00000_00004' order represents '0' with '-249'
249 -249 0
c Encoding variable: horzalldiff_00001_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00000' direct represents '0' with '-250'
c Var 'horzalldiff_00001_00000' direct represents '1' with '250'
c Var 'horzalldiff_00001_00000' order represents '1' with '1'
c Var 'horzalldiff_00001_00000' order represents '0' with '-250'
250 -250 0
c Encoding variable: horzalldiff_00001_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00001' direct represents '0' with '-251'
c Var 'horzalldiff_00001_00001' direct represents '1' with '251'
c Var 'horzalldiff_00001_00001' order represents '1' with '1'
c Var 'horzalldiff_00001_00001' order represents '0' with '-251'
c Encoding variable: horzalldiff_00001_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00002' direct represents '0' with '-252'
c Var 'horzalldiff_00001_00002' direct represents '1' with '252'
c Var 'horzalldiff_00001_00002' order represents '1' with '1'
c Var 'horzalldiff_00001_00002' order represents '0' with '-252'
252 -252 0
c Encoding variable: horzalldiff_00001_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00003' direct represents '0' with '-253'
c Var 'horzalldiff_00001_00003' direct represents '1' with '253'
c Var 'horzalldiff_00001_00003' order represents '1' with '1'
c Var 'horzalldiff_00001_00003' order represents '0' with '-253'
253 -253 0
c Encoding variable: horzalldiff_00001_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00001_00004' direct represents '0' with '-254'
c Var 'horzalldiff_00001_00004' direct represents '1' with '254'
c Var 'horzalldiff_00001_00004' order represents '1' with '1'
c Var 'horzalldiff_00001_00004' order represents '0' with '-254'
254 -254 0
c Encoding variable: horzalldiff_00002_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00000' direct represents '0' with '-255'
c Var 'horzalldiff_00002_00000' direct represents '1' with '255'
c Var 'horzalldiff_00002_00000' order represents '1' with '1'
c Var 'horzalldiff_00002_00000' order represents '0' with '-255'
c Encoding variable: horzalldiff_00002_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00001' direct represents '0' with '-256'
c Var 'horzalldiff_00002_00001' direct represents '1' with '256'
c Var 'horzalldiff_00002_00001' order represents '1' with '1'
c Var 'horzalldiff_00002_00001' order represents '0' with '-256'
256 -256 0
c Encoding variable: horzalldiff_00002_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00002' direct represents '0' with '-257'
c Var 'horzalldiff_00002_00002' direct represents '1' with '257'
c Var 'horzalldiff_00002_00002' order represents '1' with '1'
c Var 'horzalldiff_00002_00002' order represents '0' with '-257'
257 -257 0
c Encoding variable: horzalldiff_00002_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00003' direct represents '0' with '-258'
c Var 'horzalldiff_00002_00003' direct represents '1' with '258'
c Var 'horzalldiff_00002_00003' order represents '1' with '1'
c Var 'horzalldiff_00002_00003' order represents '0' with '-258'
258 -258 0
c Encoding variable: horzalldiff_00002_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00002_00004' direct represents '0' with '-259'
c Var 'horzalldiff_00002_00004' direct represents '1' with '259'
c Var 'horzalldiff_00002_00004' order represents '1' with '1'
c Var 'horzalldiff_00002_00004' order represents '0' with '-259'
259 -259 0
c Encoding variable: horzalldiff_00003_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00000' direct represents '0' with '-260'
c Var 'horzalldiff_00003_00000' direct represents '1' with '260'
c Var 'horzalldiff_00003_00000' order represents '1' with '1'
c Var 'horzalldiff_00003_00000' order represents '0' with '-260'
c Encoding variable: horzalldiff_00003_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00001' direct represents '0' with '-261'
c Var 'horzalldiff_00003_00001' direct represents '1' with '261'
c Var 'horzalldiff_00003_00001' order represents '1' with '1'
c Var 'horzalldiff_00003_00001' order represents '0' with '-261'
261 -261 0
c Encoding variable: horzalldiff_00003_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00002' direct represents '0' with '-262'
c Var 'horzalldiff_00003_00002' direct represents '1' with '262'
c Var 'horzalldiff_00003_00002' order represents '1' with '1'
c Var 'horzalldiff_00003_00002' order represents '0' with '-262'
262 -262 0
c Encoding variable: horzalldiff_00003_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00003' direct represents '0' with '-263'
c Var 'horzalldiff_00003_00003' direct represents '1' with '263'
c Var 'horzalldiff_00003_00003' order represents '1' with '1'
c Var 'horzalldiff_00003_00003' order represents '0' with '-263'
263 -263 0
c Encoding variable: horzalldiff_00003_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00003_00004' direct represents '0' with '-264'
c Var 'horzalldiff_00003_00004' direct represents '1' with '264'
c Var 'horzalldiff_00003_00004' order represents '1' with '1'
c Var 'horzalldiff_00003_00004' order represents '0' with '-264'
264 -264 0
c Encoding variable: horzalldiff_00004_00000 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00000' direct represents '0' with '-265'
c Var 'horzalldiff_00004_00000' direct represents '1' with '265'
c Var 'horzalldiff_00004_00000' order represents '1' with '1'
c Var 'horzalldiff_00004_00000' order represents '0' with '-265'
265 -265 0
c Encoding variable: horzalldiff_00004_00001 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00001' direct represents '0' with '-266'
c Var 'horzalldiff_00004_00001' direct represents '1' with '266'
c Var 'horzalldiff_00004_00001' order represents '1' with '1'
c Var 'horzalldiff_00004_00001' order represents '0' with '-266'
c Encoding variable: horzalldiff_00004_00002 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00002' direct represents '0' with '-267'
c Var 'horzalldiff_00004_00002' direct represents '1' with '267'
c Var 'horzalldiff_00004_00002' order represents '1' with '1'
c Var 'horzalldiff_00004_00002' order represents '0' with '-267'
267 -267 0
c Encoding variable: horzalldiff_00004_00003 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00003' direct represents '0' with '-268'
c Var 'horzalldiff_00004_00003' direct represents '1' with '268'
c Var 'horzalldiff_00004_00003' order represents '1' with '1'
c Var 'horzalldiff_00004_00003' order represents '0' with '-268'
268 -268 0
c Encoding variable: horzalldiff_00004_00004 with domain: bool (representing constraint )
c Var 'horzalldiff_00004_00004' direct represents '0' with '-269'
c Var 'horzalldiff_00004_00004' direct represents '1' with '269'
c Var 'horzalldiff_00004_00004' order represents '1' with '1'
c Var 'horzalldiff_00004_00004' order represents '0' with '-269'
269 -269 0
c Encoding variable: horzsum_00000_00000 with domain: bool (representing constraint )
c Var 'horzsum_00000_00000' direct represents '0' with '-270'
c Var 'horzsum_00000_00000' direct represents '1' with '270'
c Var 'horzsum_00000_00000' order represents '1' with '1'
c Var 'horzsum_00000_00000' order represents '0' with '-270'
270 -270 0
c Encoding variable: horzsum_00000_00001 with domain: bool (representing constraint )
c Var 'horzsum_00000_00001' direct represents '0' with '-271'
c Var 'horzsum_00000_00001' direct represents '1' with '271'
c Var 'horzsum_00000_00001' order represents '1' with '1'
c Var 'horzsum_00000_00001' order represents '0' with '-271'
271 -271 0
c Encoding variable: horzsum_00000_00002 with domain: bool (representing constraint )
c Var 'horzsum_00000_00002' direct represents '0' with '-272'
c Var 'horzsum_00000_00002' direct represents '1' with '272'
c Var 'horzsum_00000_00002' order represents '1' with '1'
c Var 'horzsum_00000_00002' order represents '0' with '-272'
272 -272 0
c Encoding variable: horzsum_00000_00003 with domain: bool (representing constraint )
c Var 'horzsum_00000_00003' direct represents '0' with '-273'
c Var 'horzsum_00000_00003' direct represents '1' with '273'
c Var 'horzsum_00000_00003' order represents '1' with '1'
c Var 'horzsum_00000_00003' order represents '0' with '-273'
273 -273 0
c Encoding variable: horzsum_00000_00004 with domain: bool (representing constraint )
c Var 'horzsum_00000_00004' direct represents '0' with '-274'
c Var 'horzsum_00000_00004' direct represents '1' with '274'
c Var 'horzsum_00000_00004' order represents '1' with '1'
c Var 'horzsum_00000_00004' order represents '0' with '-274'
274 -274 0
c Encoding variable: horzsum_00001_00000 with domain: bool (representing constraint )
c Var 'horzsum_00001_00000' direct represents '0' with '-275'
c Var 'horzsum_00001_00000' direct represents '1' with '275'
c Var 'horzsum_00001_00000' order represents '1' with '1'
c Var 'horzsum_00001_00000' order represents '0' with '-275'
275 -275 0
c Encoding variable: horzsum_00001_00001 with domain: bool (representing constraint )
c Var 'horzsum_00001_00001' direct represents '0' with '-276'
c Var 'horzsum_00001_00001' direct represents '1' with '276'
c Var 'horzsum_00001_00001' order represents '1' with '1'
c Var 'horzsum_00001_00001' order represents '0' with '-276'
c Encoding variable: horzsum_00001_00002 with domain: bool (representing constraint )
c Var 'horzsum_00001_00002' direct represents '0' with '-277'
c Var 'horzsum_00001_00002' direct represents '1' with '277'
c Var 'horzsum_00001_00002' order represents '1' with '1'
c Var 'horzsum_00001_00002' order represents '0' with '-277'
277 -277 0
c Encoding variable: horzsum_00001_00003 with domain: bool (representing constraint )
c Var 'horzsum_00001_00003' direct represents '0' with '-278'
c Var 'horzsum_00001_00003' direct represents '1' with '278'
c Var 'horzsum_00001_00003' order represents '1' with '1'
c Var 'horzsum_00001_00003' order represents '0' with '-278'
278 -278 0
c Encoding variable: horzsum_00001_00004 with domain: bool (representing constraint )
c Var 'horzsum_00001_00004' direct represents '0' with '-279'
c Var 'horzsum_00001_00004' direct represents '1' with '279'
c Var 'horzsum_00001_00004' order represents '1' with '1'
c Var 'horzsum_00001_00004' order represents '0' with '-279'
279 -279 0
c Encoding variable: horzsum_00002_00000 with domain: bool (representing constraint )
c Var 'horzsum_00002_00000' direct represents '0' with '-280'
c Var 'horzsum_00002_00000' direct represents '1' with '280'
c Var 'horzsum_00002_00000' order represents '1' with '1'
c Var 'horzsum_00002_00000' order represents '0' with '-280'
c Encoding variable: horzsum_00002_00001 with domain: bool (representing constraint )
c Var 'horzsum_00002_00001' direct represents '0' with '-281'
c Var 'horzsum_00002_00001' direct represents '1' with '281'
c Var 'horzsum_00002_00001' order represents '1' with '1'
c Var 'horzsum_00002_00001' order represents '0' with '-281'
281 -281 0
c Encoding variable: horzsum_00002_00002 with domain: bool (representing constraint )
c Var 'horzsum_00002_00002' direct represents '0' with '-282'
c Var 'horzsum_00002_00002' direct represents '1' with '282'
c Var 'horzsum_00002_00002' order represents '1' with '1'
c Var 'horzsum_00002_00002' order represents '0' with '-282'
282 -282 0
c Encoding variable: horzsum_00002_00003 with domain: bool (representing constraint )
c Var 'horzsum_00002_00003' direct represents '0' with '-283'
c Var 'horzsum_00002_00003' direct represents '1' with '283'
c Var 'horzsum_00002_00003' order represents '1' with '1'
c Var 'horzsum_00002_00003' order represents '0' with '-283'
283 -283 0
c Encoding variable: horzsum_00002_00004 with domain: bool (representing constraint )
c Var 'horzsum_00002_00004' direct represents '0' with '-284'
c Var 'horzsum_00002_00004' direct represents '1' with '284'
c Var 'horzsum_00002_00004' order represents '1' with '1'
c Var 'horzsum_00002_00004' order represents '0' with '-284'
284 -284 0
c Encoding variable: horzsum_00003_00000 with domain: bool (representing constraint )
c Var 'horzsum_00003_00000' direct represents '0' with '-285'
c Var 'horzsum_00003_00000' direct represents '1' with '285'
c Var 'horzsum_00003_00000' order represents '1' with '1'
c Var 'horzsum_00003_00000' order represents '0' with '-285'
c Encoding variable: horzsum_00003_00001 with domain: bool (representing constraint )
c Var 'horzsum_00003_00001' direct represents '0' with '-286'
c Var 'horzsum_00003_00001' direct represents '1' with '286'
c Var 'horzsum_00003_00001' order represents '1' with '1'
c Var 'horzsum_00003_00001' order represents '0' with '-286'
286 -286 0
c Encoding variable: horzsum_00003_00002 with domain: bool (representing constraint )
c Var 'horzsum_00003_00002' direct represents '0' with '-287'
c Var 'horzsum_00003_00002' direct represents '1' with '287'
c Var 'horzsum_00003_00002' order represents '1' with '1'
c Var 'horzsum_00003_00002' order represents '0' with '-287'
287 -287 0
c Encoding variable: horzsum_00003_00003 with domain: bool (representing constraint )
c Var 'horzsum_00003_00003' direct represents '0' with '-288'
c Var 'horzsum_00003_00003' direct represents '1' with '288'
c Var 'horzsum_00003_00003' order represents '1' with '1'
c Var 'horzsum_00003_00003' order represents '0' with '-288'
288 -288 0
c Encoding variable: horzsum_00003_00004 with domain: bool (representing constraint )
c Var 'horzsum_00003_00004' direct represents '0' with '-289'
c Var 'horzsum_00003_00004' direct represents '1' with '289'
c Var 'horzsum_00003_00004' order represents '1' with '1'
c Var 'horzsum_00003_00004' order represents '0' with '-289'
289 -289 0
c Encoding variable: horzsum_00004_00000 with domain: bool (representing constraint )
c Var 'horzsum_00004_00000' direct represents '0' with '-290'
c Var 'horzsum_00004_00000' direct represents '1' with '290'
c Var 'horzsum_00004_00000' order represents '1' with '1'
c Var 'horzsum_00004_00000' order represents '0' with '-290'
290 -290 0
c Encoding variable: horzsum_00004_00001 with domain: bool (representing constraint )
c Var 'horzsum_00004_00001' direct represents '0' with '-291'
c Var 'horzsum_00004_00001' direct represents '1' with '291'
c Var 'horzsum_00004_00001' order represents '1' with '1'
c Var 'horzsum_00004_00001' order represents '0' with '-291'
c Encoding variable: horzsum_00004_00002 with domain: bool (representing constraint )
c Var 'horzsum_00004_00002' direct represents '0' with '-292'
c Var 'horzsum_00004_00002' direct represents '1' with '292'
c Var 'horzsum_00004_00002' order represents '1' with '1'
c Var 'horzsum_00004_00002' order represents '0' with '-292'
292 -292 0
c Encoding variable: horzsum_00004_00003 with domain: bool (representing constraint )
c Var 'horzsum_00004_00003' direct represents '0' with '-293'
c Var 'horzsum_00004_00003' direct represents '1' with '293'
c Var 'horzsum_00004_00003' order represents '1' with '1'
c Var 'horzsum_00004_00003' order represents '0' with '-293'
293 -293 0
c Encoding variable: horzsum_00004_00004 with domain: bool (representing constraint )
c Var 'horzsum_00004_00004' direct represents '0' with '-294'
c Var 'horzsum_00004_00004' direct represents '1' with '294'
c Var 'horzsum_00004_00004' order represents '1' with '1'
c Var 'horzsum_00004_00004' order represents '0' with '-294'
294 -294 0
c Encoding variable: aux0 with domain: bool (representing constraint (grid_00003_00001 != grid_00002_00001))
c Var 'aux0' direct represents '0' with '-295'
c Var 'aux0' direct represents '1' with '295'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-295'
c Encoding variable: aux1 with domain: bool (representing constraint (grid_00003_00004 != grid_00002_00004))
c Var 'aux1' direct represents '0' with '-296'
c Var 'aux1' direct represents '1' with '296'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-296'
c Encoding variable: aux2 with domain: bool (representing constraint ((grid_00003_00002 + grid_00004_00002 + grid_00001_00002 + grid_00002_00002)=tv=17))
c Var 'aux2' direct represents '0' with '-297'
c Var 'aux2' direct represents '1' with '297'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-297'
c Encoding variable: aux3 with domain: bool (representing constraint ((grid_00003_00003 + grid_00004_00003 + grid_00001_00003 + grid_00002_00003)=tv=29))
c Var 'aux3' direct represents '0' with '-298'
c Var 'aux3' direct represents '1' with '298'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-298'
c Encoding variable: aux4 with domain: bool (representing constraint ((grid_00003_00001 + grid_00002_00001)=tv=12))
c Var 'aux4' direct represents '0' with '-299'
c Var 'aux4' direct represents '1' with '299'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-299'
c Encoding variable: aux5 with domain: bool (representing constraint ((grid_00003_00004 + grid_00002_00004)=tv=8))
c Var 'aux5' direct represents '0' with '-300'
c Var 'aux5' direct represents '1' with '300'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-300'
c Encoding variable: aux6 with domain: bool (representing constraint (grid_00001_00002 != grid_00001_00003))
c Var 'aux6' direct represents '0' with '-301'
c Var 'aux6' direct represents '1' with '301'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-301'
c Encoding variable: aux7 with domain: bool (representing constraint (grid_00004_00002 != grid_00004_00003))
c Var 'aux7' direct represents '0' with '-302'
c Var 'aux7' direct represents '1' with '302'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-302'
c Encoding variable: aux8 with domain: bool (representing constraint ((grid_00001_00002 + grid_00001_00003)=tv=17))
c Var 'aux8' direct represents '0' with '-303'
c Var 'aux8' direct represents '1' with '303'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-303'
c Encoding variable: aux9 with domain: bool (representing constraint ((grid_00002_00001 + grid_00002_00002 + grid_00002_00003 + grid_00002_00004)=tv=14))
c Var 'aux9' direct represents '0' with '-304'
c Var 'aux9' direct represents '1' with '304'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-304'
c Encoding variable: aux10 with domain: bool (representing constraint ((grid_00003_00001 + grid_00003_00002 + grid_00003_00003 + grid_00003_00004)=tv=29))
c Var 'aux10' direct represents '0' with '-305'
c Var 'aux10' direct represents '1' with '305'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-305'
c Encoding variable: aux11 with domain: bool (representing constraint ((grid_00004_00002 + grid_00004_00003)=tv=6))
c Var 'aux11' direct represents '0' with '-306'
c Var 'aux11' direct represents '1' with '306'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-306'
c Encoding variable: aux12 with domain: bool (representing constraint (((grid_00003_00002=1) + (grid_00001_00002=1) + (grid_00004_00002=1) + (grid_00002_00002=1))<=1))
c Var 'aux12' direct represents '0' with '-307'
c Var 'aux12' direct represents '1' with '307'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-307'
c Encoding variable: aux13 with domain: bool (representing constraint (((grid_00003_00002=2) + (grid_00001_00002=2) + (grid_00004_00002=2) + (grid_00002_00002=2))<=1))
c Var 'aux13' direct represents '0' with '-308'
c Var 'aux13' direct represents '1' with '308'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-308'
c Encoding variable: aux14 with domain: bool (representing constraint (((grid_00003_00002=3) + (grid_00001_00002=3) + (grid_00004_00002=3) + (grid_00002_00002=3))<=1))
c Var 'aux14' direct represents '0' with '-309'
c Var 'aux14' direct represents '1' with '309'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-309'
c Encoding variable: aux15 with domain: bool (representing constraint (((grid_00003_00002=4) + (grid_00001_00002=4) + (grid_00004_00002=4) + (grid_00002_00002=4))<=1))
c Var 'aux15' direct represents '0' with '-310'
c Var 'aux15' direct represents '1' with '310'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-310'
c Encoding variable: aux16 with domain: bool (representing constraint (((grid_00003_00002=5) + (grid_00001_00002=5) + (grid_00004_00002=5) + (grid_00002_00002=5))<=1))
c Var 'aux16' direct represents '0' with '-311'
c Var 'aux16' direct represents '1' with '311'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-311'
c Encoding variable: aux17 with domain: bool (representing constraint (((grid_00003_00002=6) + (grid_00001_00002=6) + (grid_00004_00002=6) + (grid_00002_00002=6))<=1))
c Var 'aux17' direct represents '0' with '-312'
c Var 'aux17' direct represents '1' with '312'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-312'
c Encoding variable: aux18 with domain: bool (representing constraint (((grid_00003_00002=7) + (grid_00001_00002=7) + (grid_00004_00002=7) + (grid_00002_00002=7))<=1))
c Var 'aux18' direct represents '0' with '-313'
c Var 'aux18' direct represents '1' with '313'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-313'
c Encoding variable: aux19 with domain: bool (representing constraint (((grid_00003_00002=8) + (grid_00001_00002=8) + (grid_00004_00002=8) + (grid_00002_00002=8))<=1))
c Var 'aux19' direct represents '0' with '-314'
c Var 'aux19' direct represents '1' with '314'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-314'
c Encoding variable: aux20 with domain: bool (representing constraint (((grid_00003_00002=9) + (grid_00001_00002=9) + (grid_00004_00002=9) + (grid_00002_00002=9))<=1))
c Var 'aux20' direct represents '0' with '-315'
c Var 'aux20' direct represents '1' with '315'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-315'
c Encoding variable: aux21 with domain: bool (representing constraint (((grid_00003_00003=1) + (grid_00001_00003=1) + (grid_00004_00003=1) + (grid_00002_00003=1))<=1))
c Var 'aux21' direct represents '0' with '-316'
c Var 'aux21' direct represents '1' with '316'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-316'
c Encoding variable: aux22 with domain: bool (representing constraint (((grid_00003_00003=2) + (grid_00001_00003=2) + (grid_00004_00003=2) + (grid_00002_00003=2))<=1))
c Var 'aux22' direct represents '0' with '-317'
c Var 'aux22' direct represents '1' with '317'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-317'
c Encoding variable: aux23 with domain: bool (representing constraint (((grid_00003_00003=3) + (grid_00001_00003=3) + (grid_00004_00003=3) + (grid_00002_00003=3))<=1))
c Var 'aux23' direct represents '0' with '-318'
c Var 'aux23' direct represents '1' with '318'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-318'
c Encoding variable: aux24 with domain: bool (representing constraint (((grid_00003_00003=4) + (grid_00001_00003=4) + (grid_00004_00003=4) + (grid_00002_00003=4))<=1))
c Var 'aux24' direct represents '0' with '-319'
c Var 'aux24' direct represents '1' with '319'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-319'
c Encoding variable: aux25 with domain: bool (representing constraint (((grid_00003_00003=5) + (grid_00001_00003=5) + (grid_00004_00003=5) + (grid_00002_00003=5))<=1))
c Var 'aux25' direct represents '0' with '-320'
c Var 'aux25' direct represents '1' with '320'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-320'
c Encoding variable: aux26 with domain: bool (representing constraint (((grid_00003_00003=6) + (grid_00001_00003=6) + (grid_00004_00003=6) + (grid_00002_00003=6))<=1))
c Var 'aux26' direct represents '0' with '-321'
c Var 'aux26' direct represents '1' with '321'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-321'
c Encoding variable: aux27 with domain: bool (representing constraint (((grid_00003_00003=7) + (grid_00001_00003=7) + (grid_00004_00003=7) + (grid_00002_00003=7))<=1))
c Var 'aux27' direct represents '0' with '-322'
c Var 'aux27' direct represents '1' with '322'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-322'
c Encoding variable: aux28 with domain: bool (representing constraint (((grid_00003_00003=8) + (grid_00001_00003=8) + (grid_00004_00003=8) + (grid_00002_00003=8))<=1))
c Var 'aux28' direct represents '0' with '-323'
c Var 'aux28' direct represents '1' with '323'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-323'
c Encoding variable: aux29 with domain: bool (representing constraint (((grid_00003_00003=9) + (grid_00001_00003=9) + (grid_00004_00003=9) + (grid_00002_00003=9))<=1))
c Var 'aux29' direct represents '0' with '-324'
c Var 'aux29' direct represents '1' with '324'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-324'
c Encoding variable: aux30 with domain: bool (representing constraint (((grid_00002_00001=1) + (grid_00002_00002=1) + (grid_00002_00003=1) + (grid_00002_00004=1))<=1))
c Var 'aux30' direct represents '0' with '-325'
c Var 'aux30' direct represents '1' with '325'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-325'
c Encoding variable: aux31 with domain: bool (representing constraint (((grid_00002_00001=2) + (grid_00002_00002=2) + (grid_00002_00003=2) + (grid_00002_00004=2))<=1))
c Var 'aux31' direct represents '0' with '-326'
c Var 'aux31' direct represents '1' with '326'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-326'
c Encoding variable: aux32 with domain: bool (representing constraint (((grid_00002_00001=3) + (grid_00002_00002=3) + (grid_00002_00003=3) + (grid_00002_00004=3))<=1))
c Var 'aux32' direct represents '0' with '-327'
c Var 'aux32' direct represents '1' with '327'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-327'
c Encoding variable: aux33 with domain: bool (representing constraint (((grid_00002_00001=4) + (grid_00002_00002=4) + (grid_00002_00003=4) + (grid_00002_00004=4))<=1))
c Var 'aux33' direct represents '0' with '-328'
c Var 'aux33' direct represents '1' with '328'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-328'
c Encoding variable: aux34 with domain: bool (representing constraint (((grid_00002_00001=5) + (grid_00002_00002=5) + (grid_00002_00003=5) + (grid_00002_00004=5))<=1))
c Var 'aux34' direct represents '0' with '-329'
c Var 'aux34' direct represents '1' with '329'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-329'
c Encoding variable: aux35 with domain: bool (representing constraint (((grid_00002_00001=6) + (grid_00002_00002=6) + (grid_00002_00003=6) + (grid_00002_00004=6))<=1))
c Var 'aux35' direct represents '0' with '-330'
c Var 'aux35' direct represents '1' with '330'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-330'
c Encoding variable: aux36 with domain: bool (representing constraint (((grid_00002_00001=7) + (grid_00002_00002=7) + (grid_00002_00003=7) + (grid_00002_00004=7))<=1))
c Var 'aux36' direct represents '0' with '-331'
c Var 'aux36' direct represents '1' with '331'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-331'
c Encoding variable: aux37 with domain: bool (representing constraint (((grid_00002_00001=8) + (grid_00002_00002=8) + (grid_00002_00003=8) + (grid_00002_00004=8))<=1))
c Var 'aux37' direct represents '0' with '-332'
c Var 'aux37' direct represents '1' with '332'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-332'
c Encoding variable: aux38 with domain: bool (representing constraint (((grid_00002_00001=9) + (grid_00002_00002=9) + (grid_00002_00003=9) + (grid_00002_00004=9))<=1))
c Var 'aux38' direct represents '0' with '-333'
c Var 'aux38' direct represents '1' with '333'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-333'
c Encoding variable: aux39 with domain: bool (representing constraint (((grid_00003_00001=1) + (grid_00003_00002=1) + (grid_00003_00003=1) + (grid_00003_00004=1))<=1))
c Var 'aux39' direct represents '0' with '-334'
c Var 'aux39' direct represents '1' with '334'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-334'
c Encoding variable: aux40 with domain: bool (representing constraint (((grid_00003_00001=2) + (grid_00003_00002=2) + (grid_00003_00003=2) + (grid_00003_00004=2))<=1))
c Var 'aux40' direct represents '0' with '-335'
c Var 'aux40' direct represents '1' with '335'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-335'
c Encoding variable: aux41 with domain: bool (representing constraint (((grid_00003_00001=3) + (grid_00003_00002=3) + (grid_00003_00003=3) + (grid_00003_00004=3))<=1))
c Var 'aux41' direct represents '0' with '-336'
c Var 'aux41' direct represents '1' with '336'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-336'
c Encoding variable: aux42 with domain: bool (representing constraint (((grid_00003_00001=4) + (grid_00003_00002=4) + (grid_00003_00003=4) + (grid_00003_00004=4))<=1))
c Var 'aux42' direct represents '0' with '-337'
c Var 'aux42' direct represents '1' with '337'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-337'
c Encoding variable: aux43 with domain: bool (representing constraint (((grid_00003_00001=5) + (grid_00003_00002=5) + (grid_00003_00003=5) + (grid_00003_00004=5))<=1))
c Var 'aux43' direct represents '0' with '-338'
c Var 'aux43' direct represents '1' with '338'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-338'
c Encoding variable: aux44 with domain: bool (representing constraint (((grid_00003_00001=6) + (grid_00003_00002=6) + (grid_00003_00003=6) + (grid_00003_00004=6))<=1))
c Var 'aux44' direct represents '0' with '-339'
c Var 'aux44' direct represents '1' with '339'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-339'
c Encoding variable: aux45 with domain: bool (representing constraint (((grid_00003_00001=7) + (grid_00003_00002=7) + (grid_00003_00003=7) + (grid_00003_00004=7))<=1))
c Var 'aux45' direct represents '0' with '-340'
c Var 'aux45' direct represents '1' with '340'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-340'
c Encoding variable: aux46 with domain: bool (representing constraint (((grid_00003_00001=8) + (grid_00003_00002=8) + (grid_00003_00003=8) + (grid_00003_00004=8))<=1))
c Var 'aux46' direct represents '0' with '-341'
c Var 'aux46' direct represents '1' with '341'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-341'
c Encoding variable: aux47 with domain: bool (representing constraint (((grid_00003_00001=9) + (grid_00003_00002=9) + (grid_00003_00003=9) + (grid_00003_00004=9))<=1))
c Var 'aux47' direct represents '0' with '-342'
c Var 'aux47' direct represents '1' with '342'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-342'
c Encoding variable: aux48 with domain: int(0..16) (representing constraint (shift(grid_00003_00002, -1) + shift(grid_00002_00002, -1)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '343'
c Var 'aux48' direct represents '0' with '343'
c Var 'aux48' order represents '1' with '344'
-343 344 0
c Var 'aux48' direct represents '1' with '345'
343 -344 345 0
-345 344 0
-345 -343 0
c Var 'aux48' order represents '2' with '346'
-344 346 0
c Var 'aux48' direct represents '2' with '347'
344 -346 347 0
-347 346 0
-347 -344 0
c Var 'aux48' order represents '3' with '348'
-346 348 0
c Var 'aux48' direct represents '3' with '349'
346 -348 349 0
-349 348 0
-349 -346 0
c Var 'aux48' order represents '4' with '350'
-348 350 0
c Var 'aux48' direct represents '4' with '351'
348 -350 351 0
-351 350 0
-351 -348 0
c Var 'aux48' order represents '5' with '352'
-350 352 0
c Var 'aux48' direct represents '5' with '353'
350 -352 353 0
-353 352 0
-353 -350 0
c Var 'aux48' order represents '6' with '354'
-352 354 0
c Var 'aux48' direct represents '6' with '355'
352 -354 355 0
-355 354 0
-355 -352 0
c Var 'aux48' order represents '7' with '356'
-354 356 0
c Var 'aux48' direct represents '7' with '357'
354 -356 357 0
-357 356 0
-357 -354 0
c Var 'aux48' order represents '8' with '358'
-356 358 0
c Var 'aux48' direct represents '8' with '359'
356 -358 359 0
-359 358 0
-359 -356 0
c Var 'aux48' order represents '9' with '360'
-358 360 0
c Var 'aux48' direct represents '9' with '361'
358 -360 361 0
-361 360 0
-361 -358 0
c Var 'aux48' order represents '10' with '362'
-360 362 0
c Var 'aux48' direct represents '10' with '363'
360 -362 363 0
-363 362 0
-363 -360 0
c Var 'aux48' order represents '11' with '364'
-362 364 0
c Var 'aux48' direct represents '11' with '365'
362 -364 365 0
-365 364 0
-365 -362 0
c Var 'aux48' order represents '12' with '366'
-364 366 0
c Var 'aux48' direct represents '12' with '367'
364 -366 367 0
-367 366 0
-367 -364 0
c Var 'aux48' order represents '13' with '368'
-366 368 0
c Var 'aux48' direct represents '13' with '369'
366 -368 369 0
-369 368 0
-369 -366 0
c Var 'aux48' order represents '14' with '370'
-368 370 0
c Var 'aux48' direct represents '14' with '371'
368 -370 371 0
-371 370 0
-371 -368 0
c Var 'aux48' order represents '15' with '372'
-370 372 0
c Var 'aux48' direct represents '15' with '373'
370 -372 373 0
-373 372 0
-373 -370 0
c Var 'aux48' direct represents '16' with '-372'
343 345 347 349 351 353 355 357 359 361 363 365 367 369 371 373 -372 0
c Encoding variable: aux49 with domain: int(0..16) (representing constraint (shift(grid_00003_00003, -1) + shift(grid_00002_00003, -1)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '374'
c Var 'aux49' direct represents '0' with '374'
c Var 'aux49' order represents '1' with '375'
-374 375 0
c Var 'aux49' direct represents '1' with '376'
374 -375 376 0
-376 375 0
-376 -374 0
c Var 'aux49' order represents '2' with '377'
-375 377 0
c Var 'aux49' direct represents '2' with '378'
375 -377 378 0
-378 377 0
-378 -375 0
c Var 'aux49' order represents '3' with '379'
-377 379 0
c Var 'aux49' direct represents '3' with '380'
377 -379 380 0
-380 379 0
-380 -377 0
c Var 'aux49' order represents '4' with '381'
-379 381 0
c Var 'aux49' direct represents '4' with '382'
379 -381 382 0
-382 381 0
-382 -379 0
c Var 'aux49' order represents '5' with '383'
-381 383 0
c Var 'aux49' direct represents '5' with '384'
381 -383 384 0
-384 383 0
-384 -381 0
c Var 'aux49' order represents '6' with '385'
-383 385 0
c Var 'aux49' direct represents '6' with '386'
383 -385 386 0
-386 385 0
-386 -383 0
c Var 'aux49' order represents '7' with '387'
-385 387 0
c Var 'aux49' direct represents '7' with '388'
385 -387 388 0
-388 387 0
-388 -385 0
c Var 'aux49' order represents '8' with '389'
-387 389 0
c Var 'aux49' direct represents '8' with '390'
387 -389 390 0
-390 389 0
-390 -387 0
c Var 'aux49' order represents '9' with '391'
-389 391 0
c Var 'aux49' direct represents '9' with '392'
389 -391 392 0
-392 391 0
-392 -389 0
c Var 'aux49' order represents '10' with '393'
-391 393 0
c Var 'aux49' direct represents '10' with '394'
391 -393 394 0
-394 393 0
-394 -391 0
c Var 'aux49' order represents '11' with '395'
-393 395 0
c Var 'aux49' direct represents '11' with '396'
393 -395 396 0
-396 395 0
-396 -393 0
c Var 'aux49' order represents '12' with '397'
-395 397 0
c Var 'aux49' direct represents '12' with '398'
395 -397 398 0
-398 397 0
-398 -395 0
c Var 'aux49' order represents '13' with '399'
-397 399 0
c Var 'aux49' direct represents '13' with '400'
397 -399 400 0
-400 399 0
-400 -397 0
c Var 'aux49' order represents '14' with '401'
-399 401 0
c Var 'aux49' direct represents '14' with '402'
399 -401 402 0
-402 401 0
-402 -399 0
c Var 'aux49' order represents '15' with '403'
-401 403 0
c Var 'aux49' direct represents '15' with '404'
401 -403 404 0
-404 403 0
-404 -401 0
c Var 'aux49' direct represents '16' with '-403'
374 376 378 380 382 384 386 388 390 392 394 396 398 400 402 404 -403 0
c Encoding variable: aux50 with domain: int(0..16) (representing constraint (shift(grid_00002_00001, -1) + shift(grid_00002_00004, -1)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '405'
c Var 'aux50' direct represents '0' with '405'
c Var 'aux50' order represents '1' with '406'
-405 406 0
c Var 'aux50' direct represents '1' with '407'
405 -406 407 0
-407 406 0
-407 -405 0
c Var 'aux50' order represents '2' with '408'
-406 408 0
c Var 'aux50' direct represents '2' with '409'
406 -408 409 0
-409 408 0
-409 -406 0
c Var 'aux50' order represents '3' with '410'
-408 410 0
c Var 'aux50' direct represents '3' with '411'
408 -410 411 0
-411 410 0
-411 -408 0
c Var 'aux50' order represents '4' with '412'
-410 412 0
c Var 'aux50' direct represents '4' with '413'
410 -412 413 0
-413 412 0
-413 -410 0
c Var 'aux50' order represents '5' with '414'
-412 414 0
c Var 'aux50' direct represents '5' with '415'
412 -414 415 0
-415 414 0
-415 -412 0
c Var 'aux50' order represents '6' with '416'
-414 416 0
c Var 'aux50' direct represents '6' with '417'
414 -416 417 0
-417 416 0
-417 -414 0
c Var 'aux50' order represents '7' with '418'
-416 418 0
c Var 'aux50' direct represents '7' with '419'
416 -418 419 0
-419 418 0
-419 -416 0
c Var 'aux50' order represents '8' with '420'
-418 420 0
c Var 'aux50' direct represents '8' with '421'
418 -420 421 0
-421 420 0
-421 -418 0
c Var 'aux50' order represents '9' with '422'
-420 422 0
c Var 'aux50' direct represents '9' with '423'
420 -422 423 0
-423 422 0
-423 -420 0
c Var 'aux50' order represents '10' with '424'
-422 424 0
c Var 'aux50' direct represents '10' with '425'
422 -424 425 0
-425 424 0
-425 -422 0
c Var 'aux50' order represents '11' with '426'
-424 426 0
c Var 'aux50' direct represents '11' with '427'
424 -426 427 0
-427 426 0
-427 -424 0
c Var 'aux50' order represents '12' with '428'
-426 428 0
c Var 'aux50' direct represents '12' with '429'
426 -428 429 0
-429 428 0
-429 -426 0
c Var 'aux50' order represents '13' with '430'
-428 430 0
c Var 'aux50' direct represents '13' with '431'
428 -430 431 0
-431 430 0
-431 -428 0
c Var 'aux50' order represents '14' with '432'
-430 432 0
c Var 'aux50' direct represents '14' with '433'
430 -432 433 0
-433 432 0
-433 -430 0
c Var 'aux50' order represents '15' with '434'
-432 434 0
c Var 'aux50' direct represents '15' with '435'
432 -434 435 0
-435 434 0
-435 -432 0
c Var 'aux50' direct represents '16' with '-434'
405 407 409 411 413 415 417 419 421 423 425 427 429 431 433 435 -434 0
c Encoding variable: aux51 with domain: int(0..16) (representing constraint (shift(grid_00003_00001, -1) + shift(grid_00003_00004, -1)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '436'
c Var 'aux51' direct represents '0' with '436'
c Var 'aux51' order represents '1' with '437'
-436 437 0
c Var 'aux51' direct represents '1' with '438'
436 -437 438 0
-438 437 0
-438 -436 0
c Var 'aux51' order represents '2' with '439'
-437 439 0
c Var 'aux51' direct represents '2' with '440'
437 -439 440 0
-440 439 0
-440 -437 0
c Var 'aux51' order represents '3' with '441'
-439 441 0
c Var 'aux51' direct represents '3' with '442'
439 -441 442 0
-442 441 0
-442 -439 0
c Var 'aux51' order represents '4' with '443'
-441 443 0
c Var 'aux51' direct represents '4' with '444'
441 -443 444 0
-444 443 0
-444 -441 0
c Var 'aux51' order represents '5' with '445'
-443 445 0
c Var 'aux51' direct represents '5' with '446'
443 -445 446 0
-446 445 0
-446 -443 0
c Var 'aux51' order represents '6' with '447'
-445 447 0
c Var 'aux51' direct represents '6' with '448'
445 -447 448 0
-448 447 0
-448 -445 0
c Var 'aux51' order represents '7' with '449'
-447 449 0
c Var 'aux51' direct represents '7' with '450'
447 -449 450 0
-450 449 0
-450 -447 0
c Var 'aux51' order represents '8' with '451'
-449 451 0
c Var 'aux51' direct represents '8' with '452'
449 -451 452 0
-452 451 0
-452 -449 0
c Var 'aux51' order represents '9' with '453'
-451 453 0
c Var 'aux51' direct represents '9' with '454'
451 -453 454 0
-454 453 0
-454 -451 0
c Var 'aux51' order represents '10' with '455'
-453 455 0
c Var 'aux51' direct represents '10' with '456'
453 -455 456 0
-456 455 0
-456 -453 0
c Var 'aux51' order represents '11' with '457'
-455 457 0
c Var 'aux51' direct represents '11' with '458'
455 -457 458 0
-458 457 0
-458 -455 0
c Var 'aux51' order represents '12' with '459'
-457 459 0
c Var 'aux51' direct represents '12' with '460'
457 -459 460 0
-460 459 0
-460 -457 0
c Var 'aux51' order represents '13' with '461'
-459 461 0
c Var 'aux51' direct represents '13' with '462'
459 -461 462 0
-462 461 0
-462 -459 0
c Var 'aux51' order represents '14' with '463'
-461 463 0
c Var 'aux51' direct represents '14' with '464'
461 -463 464 0
-464 463 0
-464 -461 0
c Var 'aux51' order represents '15' with '465'
-463 465 0
c Var 'aux51' direct represents '15' with '466'
463 -465 466 0
-466 465 0
-466 -463 0
c Var 'aux51' direct represents '16' with '-465'
436 438 440 442 444 446 448 450 452 454 456 458 460 462 464 466 -465 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((grid_00003_00002=1) + (grid_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '467'
c Var 'aux52' direct represents '0' with '467'
c Var 'aux52' order represents '1' with '468'
-467 468 0
c Var 'aux52' direct represents '1' with '469'
467 -468 469 0
-469 468 0
-469 -467 0
c Var 'aux52' direct represents '2' with '-468'
467 469 -468 0
c Encoding variable: aux53 with domain: int(0..2) (representing constraint ((grid_00003_00002=2) + (grid_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '470'
c Var 'aux53' direct represents '0' with '470'
c Var 'aux53' order represents '1' with '471'
-470 471 0
c Var 'aux53' direct represents '1' with '472'
470 -471 472 0
-472 471 0
-472 -470 0
c Var 'aux53' direct represents '2' with '-471'
470 472 -471 0
c Encoding variable: aux54 with domain: int(0..2) (representing constraint ((grid_00003_00002=3) + (grid_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '473'
c Var 'aux54' direct represents '0' with '473'
c Var 'aux54' order represents '1' with '474'
-473 474 0
c Var 'aux54' direct represents '1' with '475'
473 -474 475 0
-475 474 0
-475 -473 0
c Var 'aux54' direct represents '2' with '-474'
473 475 -474 0
c Encoding variable: aux55 with domain: int(0..2) (representing constraint ((grid_00003_00002=4) + (grid_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '476'
c Var 'aux55' direct represents '0' with '476'
c Var 'aux55' order represents '1' with '477'
-476 477 0
c Var 'aux55' direct represents '1' with '478'
476 -477 478 0
-478 477 0
-478 -476 0
c Var 'aux55' direct represents '2' with '-477'
476 478 -477 0
c Encoding variable: aux56 with domain: int(0..2) (representing constraint ((grid_00003_00002=5) + (grid_00002_00002=5)))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '479'
c Var 'aux56' direct represents '0' with '479'
c Var 'aux56' order represents '1' with '480'
-479 480 0
c Var 'aux56' direct represents '1' with '481'
479 -480 481 0
-481 480 0
-481 -479 0
c Var 'aux56' direct represents '2' with '-480'
479 481 -480 0
c Encoding variable: aux57 with domain: int(0..2) (representing constraint ((grid_00003_00002=6) + (grid_00002_00002=6)))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '482'
c Var 'aux57' direct represents '0' with '482'
c Var 'aux57' order represents '1' with '483'
-482 483 0
c Var 'aux57' direct represents '1' with '484'
482 -483 484 0
-484 483 0
-484 -482 0
c Var 'aux57' direct represents '2' with '-483'
482 484 -483 0
c Encoding variable: aux58 with domain: int(0..2) (representing constraint ((grid_00003_00002=7) + (grid_00002_00002=7)))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '485'
c Var 'aux58' direct represents '0' with '485'
c Var 'aux58' order represents '1' with '486'
-485 486 0
c Var 'aux58' direct represents '1' with '487'
485 -486 487 0
-487 486 0
-487 -485 0
c Var 'aux58' direct represents '2' with '-486'
485 487 -486 0
c Encoding variable: aux59 with domain: int(0..2) (representing constraint ((grid_00003_00002=8) + (grid_00002_00002=8)))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '488'
c Var 'aux59' direct represents '0' with '488'
c Var 'aux59' order represents '1' with '489'
-488 489 0
c Var 'aux59' direct represents '1' with '490'
488 -489 490 0
-490 489 0
-490 -488 0
c Var 'aux59' direct represents '2' with '-489'
488 490 -489 0
c Encoding variable: aux60 with domain: int(0..2) (representing constraint ((grid_00003_00002=9) + (grid_00002_00002=9)))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '491'
c Var 'aux60' direct represents '0' with '491'
c Var 'aux60' order represents '1' with '492'
-491 492 0
c Var 'aux60' direct represents '1' with '493'
491 -492 493 0
-493 492 0
-493 -491 0
c Var 'aux60' direct represents '2' with '-492'
491 493 -492 0
c Encoding variable: aux61 with domain: int(0..2) (representing constraint ((grid_00003_00003=1) + (grid_00002_00003=1)))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '494'
c Var 'aux61' direct represents '0' with '494'
c Var 'aux61' order represents '1' with '495'
-494 495 0
c Var 'aux61' direct represents '1' with '496'
494 -495 496 0
-496 495 0
-496 -494 0
c Var 'aux61' direct represents '2' with '-495'
494 496 -495 0
c Encoding variable: aux62 with domain: int(0..2) (representing constraint ((grid_00003_00003=2) + (grid_00002_00003=2)))
c Both direct and order encoding.
c Var 'aux62' order represents '0' with '497'
c Var 'aux62' direct represents '0' with '497'
c Var 'aux62' order represents '1' with '498'
-497 498 0
c Var 'aux62' direct represents '1' with '499'
497 -498 499 0
-499 498 0
-499 -497 0
c Var 'aux62' direct represents '2' with '-498'
497 499 -498 0
c Encoding variable: aux63 with domain: int(0..2) (representing constraint ((grid_00003_00003=3) + (grid_00002_00003=3)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '500'
c Var 'aux63' direct represents '0' with '500'
c Var 'aux63' order represents '1' with '501'
-500 501 0
c Var 'aux63' direct represents '1' with '502'
500 -501 502 0
-502 501 0
-502 -500 0
c Var 'aux63' direct represents '2' with '-501'
500 502 -501 0
c Encoding variable: aux64 with domain: int(0..2) (representing constraint ((grid_00003_00003=4) + (grid_00002_00003=4)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '503'
c Var 'aux64' direct represents '0' with '503'
c Var 'aux64' order represents '1' with '504'
-503 504 0
c Var 'aux64' direct represents '1' with '505'
503 -504 505 0
-505 504 0
-505 -503 0
c Var 'aux64' direct represents '2' with '-504'
503 505 -504 0
c Encoding variable: aux65 with domain: int(0..2) (representing constraint ((grid_00003_00003=5) + (grid_00002_00003=5)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '506'
c Var 'aux65' direct represents '0' with '506'
c Var 'aux65' order represents '1' with '507'
-506 507 0
c Var 'aux65' direct represents '1' with '508'
506 -507 508 0
-508 507 0
-508 -506 0
c Var 'aux65' direct represents '2' with '-507'
506 508 -507 0
c Encoding variable: aux66 with domain: int(0..2) (representing constraint ((grid_00003_00003=6) + (grid_00002_00003=6)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '509'
c Var 'aux66' direct represents '0' with '509'
c Var 'aux66' order represents '1' with '510'
-509 510 0
c Var 'aux66' direct represents '1' with '511'
509 -510 511 0
-511 510 0
-511 -509 0
c Var 'aux66' direct represents '2' with '-510'
509 511 -510 0
c Encoding variable: aux67 with domain: int(0..2) (representing constraint ((grid_00003_00003=7) + (grid_00002_00003=7)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '512'
c Var 'aux67' direct represents '0' with '512'
c Var 'aux67' order represents '1' with '513'
-512 513 0
c Var 'aux67' direct represents '1' with '514'
512 -513 514 0
-514 513 0
-514 -512 0
c Var 'aux67' direct represents '2' with '-513'
512 514 -513 0
c Encoding variable: aux68 with domain: int(0..2) (representing constraint ((grid_00003_00003=8) + (grid_00002_00003=8)))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '515'
c Var 'aux68' direct represents '0' with '515'
c Var 'aux68' order represents '1' with '516'
-515 516 0
c Var 'aux68' direct represents '1' with '517'
515 -516 517 0
-517 516 0
-517 -515 0
c Var 'aux68' direct represents '2' with '-516'
515 517 -516 0
c Encoding variable: aux69 with domain: int(0..2) (representing constraint ((grid_00003_00003=9) + (grid_00002_00003=9)))
c Both direct and order encoding.
c Var 'aux69' order represents '0' with '518'
c Var 'aux69' direct represents '0' with '518'
c Var 'aux69' order represents '1' with '519'
-518 519 0
c Var 'aux69' direct represents '1' with '520'
518 -519 520 0
-520 519 0
-520 -518 0
c Var 'aux69' direct represents '2' with '-519'
518 520 -519 0
c Encoding variable: aux70 with domain: int(0..2) (representing constraint ((grid_00002_00001=1) + (grid_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux70' order represents '0' with '521'
c Var 'aux70' direct represents '0' with '521'
c Var 'aux70' order represents '1' with '522'
-521 522 0
c Var 'aux70' direct represents '1' with '523'
521 -522 523 0
-523 522 0
-523 -521 0
c Var 'aux70' direct represents '2' with '-522'
521 523 -522 0
c Encoding variable: aux71 with domain: int(0..2) (representing constraint ((grid_00002_00001=2) + (grid_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux71' order represents '0' with '524'
c Var 'aux71' direct represents '0' with '524'
c Var 'aux71' order represents '1' with '525'
-524 525 0
c Var 'aux71' direct represents '1' with '526'
524 -525 526 0
-526 525 0
-526 -524 0
c Var 'aux71' direct represents '2' with '-525'
524 526 -525 0
c Encoding variable: aux72 with domain: int(0..2) (representing constraint ((grid_00002_00001=3) + (grid_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux72' order represents '0' with '527'
c Var 'aux72' direct represents '0' with '527'
c Var 'aux72' order represents '1' with '528'
-527 528 0
c Var 'aux72' direct represents '1' with '529'
527 -528 529 0
-529 528 0
-529 -527 0
c Var 'aux72' direct represents '2' with '-528'
527 529 -528 0
c Encoding variable: aux73 with domain: int(0..2) (representing constraint ((grid_00002_00001=4) + (grid_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux73' order represents '0' with '530'
c Var 'aux73' direct represents '0' with '530'
c Var 'aux73' order represents '1' with '531'
-530 531 0
c Var 'aux73' direct represents '1' with '532'
530 -531 532 0
-532 531 0
-532 -530 0
c Var 'aux73' direct represents '2' with '-531'
530 532 -531 0
c Encoding variable: aux74 with domain: int(0..2) (representing constraint ((grid_00002_00001=5) + (grid_00002_00004=5)))
c Both direct and order encoding.
c Var 'aux74' order represents '0' with '533'
c Var 'aux74' direct represents '0' with '533'
c Var 'aux74' order represents '1' with '534'
-533 534 0
c Var 'aux74' direct represents '1' with '535'
533 -534 535 0
-535 534 0
-535 -533 0
c Var 'aux74' direct represents '2' with '-534'
533 535 -534 0
c Encoding variable: aux75 with domain: int(0..2) (representing constraint ((grid_00002_00001=6) + (grid_00002_00004=6)))
c Both direct and order encoding.
c Var 'aux75' order represents '0' with '536'
c Var 'aux75' direct represents '0' with '536'
c Var 'aux75' order represents '1' with '537'
-536 537 0
c Var 'aux75' direct represents '1' with '538'
536 -537 538 0
-538 537 0
-538 -536 0
c Var 'aux75' direct represents '2' with '-537'
536 538 -537 0
c Encoding variable: aux76 with domain: int(0..2) (representing constraint ((grid_00002_00001=7) + (grid_00002_00004=7)))
c Both direct and order encoding.
c Var 'aux76' order represents '0' with '539'
c Var 'aux76' direct represents '0' with '539'
c Var 'aux76' order represents '1' with '540'
-539 540 0
c Var 'aux76' direct represents '1' with '541'
539 -540 541 0
-541 540 0
-541 -539 0
c Var 'aux76' direct represents '2' with '-540'
539 541 -540 0
c Encoding variable: aux77 with domain: int(0..2) (representing constraint ((grid_00002_00001=8) + (grid_00002_00004=8)))
c Both direct and order encoding.
c Var 'aux77' order represents '0' with '542'
c Var 'aux77' direct represents '0' with '542'
c Var 'aux77' order represents '1' with '543'
-542 543 0
c Var 'aux77' direct represents '1' with '544'
542 -543 544 0
-544 543 0
-544 -542 0
c Var 'aux77' direct represents '2' with '-543'
542 544 -543 0
c Encoding variable: aux78 with domain: int(0..2) (representing constraint ((grid_00002_00001=9) + (grid_00002_00004=9)))
c Both direct and order encoding.
c Var 'aux78' order represents '0' with '545'
c Var 'aux78' direct represents '0' with '545'
c Var 'aux78' order represents '1' with '546'
-545 546 0
c Var 'aux78' direct represents '1' with '547'
545 -546 547 0
-547 546 0
-547 -545 0
c Var 'aux78' direct represents '2' with '-546'
545 547 -546 0
c Encoding variable: aux79 with domain: int(0..2) (representing constraint ((grid_00003_00001=1) + (grid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux79' order represents '0' with '548'
c Var 'aux79' direct represents '0' with '548'
c Var 'aux79' order represents '1' with '549'
-548 549 0
c Var 'aux79' direct represents '1' with '550'
548 -549 550 0
-550 549 0
-550 -548 0
c Var 'aux79' direct represents '2' with '-549'
548 550 -549 0
c Encoding variable: aux80 with domain: int(0..2) (representing constraint ((grid_00003_00001=2) + (grid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux80' order represents '0' with '551'
c Var 'aux80' direct represents '0' with '551'
c Var 'aux80' order represents '1' with '552'
-551 552 0
c Var 'aux80' direct represents '1' with '553'
551 -552 553 0
-553 552 0
-553 -551 0
c Var 'aux80' direct represents '2' with '-552'
551 553 -552 0
c Encoding variable: aux81 with domain: int(0..2) (representing constraint ((grid_00003_00001=3) + (grid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux81' order represents '0' with '554'
c Var 'aux81' direct represents '0' with '554'
c Var 'aux81' order represents '1' with '555'
-554 555 0
c Var 'aux81' direct represents '1' with '556'
554 -555 556 0
-556 555 0
-556 -554 0
c Var 'aux81' direct represents '2' with '-555'
554 556 -555 0
c Encoding variable: aux82 with domain: int(0..2) (representing constraint ((grid_00003_00001=4) + (grid_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux82' order represents '0' with '557'
c Var 'aux82' direct represents '0' with '557'
c Var 'aux82' order represents '1' with '558'
-557 558 0
c Var 'aux82' direct represents '1' with '559'
557 -558 559 0
-559 558 0
-559 -557 0
c Var 'aux82' direct represents '2' with '-558'
557 559 -558 0
c Encoding variable: aux83 with domain: int(0..2) (representing constraint ((grid_00003_00001=5) + (grid_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux83' order represents '0' with '560'
c Var 'aux83' direct represents '0' with '560'
c Var 'aux83' order represents '1' with '561'
-560 561 0
c Var 'aux83' direct represents '1' with '562'
560 -561 562 0
-562 561 0
-562 -560 0
c Var 'aux83' direct represents '2' with '-561'
560 562 -561 0
c Encoding variable: aux84 with domain: int(0..2) (representing constraint ((grid_00003_00001=6) + (grid_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux84' order represents '0' with '563'
c Var 'aux84' direct represents '0' with '563'
c Var 'aux84' order represents '1' with '564'
-563 564 0
c Var 'aux84' direct represents '1' with '565'
563 -564 565 0
-565 564 0
-565 -563 0
c Var 'aux84' direct represents '2' with '-564'
563 565 -564 0
c Encoding variable: aux85 with domain: int(0..2) (representing constraint ((grid_00003_00001=7) + (grid_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux85' order represents '0' with '566'
c Var 'aux85' direct represents '0' with '566'
c Var 'aux85' order represents '1' with '567'
-566 567 0
c Var 'aux85' direct represents '1' with '568'
566 -567 568 0
-568 567 0
-568 -566 0
c Var 'aux85' direct represents '2' with '-567'
566 568 -567 0
c Encoding variable: aux86 with domain: int(0..2) (representing constraint ((grid_00003_00001=8) + (grid_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux86' order represents '0' with '569'
c Var 'aux86' direct represents '0' with '569'
c Var 'aux86' order represents '1' with '570'
-569 570 0
c Var 'aux86' direct represents '1' with '571'
569 -570 571 0
-571 570 0
-571 -569 0
c Var 'aux86' direct represents '2' with '-570'
569 571 -570 0
c Encoding variable: aux87 with domain: int(0..2) (representing constraint ((grid_00003_00001=9) + (grid_00003_00004=9)))
c Both direct and order encoding.
c Var 'aux87' order represents '0' with '572'
c Var 'aux87' direct represents '0' with '572'
c Var 'aux87' order represents '1' with '573'
-572 573 0
c Var 'aux87' direct represents '1' with '574'
572 -573 574 0
-574 573 0
-574 -572 0
c Var 'aux87' direct represents '2' with '-573'
572 574 -573 0
c Encoding variable: aux88 with domain: bool (representing constraint ((aux48 + shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1))<=13))
c Var 'aux88' direct represents '0' with '-575'
c Var 'aux88' direct represents '1' with '575'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-575'
c Encoding variable: aux89 with domain: bool (representing constraint (13<=(aux48 + shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1))))
c Var 'aux89' direct represents '0' with '-576'
c Var 'aux89' direct represents '1' with '576'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-576'
c Encoding variable: aux90 with domain: bool (representing constraint ((aux49 + shift(grid_00001_00003, -1) + shift(grid_00004_00003, -1))<=25))
c Var 'aux90' direct represents '0' with '-577'
c Var 'aux90' direct represents '1' with '577'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-577'
c Encoding variable: aux91 with domain: bool (representing constraint (25<=(aux49 + shift(grid_00001_00003, -1) + shift(grid_00004_00003, -1))))
c Var 'aux91' direct represents '0' with '-578'
c Var 'aux91' direct represents '1' with '578'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-578'
c Encoding variable: aux92 with domain: bool (representing constraint ((grid_00003_00001 + grid_00002_00001)<=12))
c Var 'aux92' direct represents '0' with '-579'
c Var 'aux92' direct represents '1' with '579'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-579'
c Encoding variable: aux93 with domain: bool (representing constraint (12<=(grid_00003_00001 + grid_00002_00001)))
c Var 'aux93' direct represents '0' with '-580'
c Var 'aux93' direct represents '1' with '580'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-580'
c Encoding variable: aux94 with domain: bool (representing constraint ((grid_00003_00004 + grid_00002_00004)<=8))
c Var 'aux94' direct represents '0' with '-581'
c Var 'aux94' direct represents '1' with '581'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-581'
c Encoding variable: aux95 with domain: bool (representing constraint (8<=(grid_00003_00004 + grid_00002_00004)))
c Var 'aux95' direct represents '0' with '-582'
c Var 'aux95' direct represents '1' with '582'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-582'
c Encoding variable: aux96 with domain: bool (representing constraint ((grid_00001_00002 + grid_00001_00003)<=17))
c Var 'aux96' direct represents '0' with '-583'
c Var 'aux96' direct represents '1' with '583'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-583'
c Encoding variable: aux97 with domain: bool (representing constraint (17<=(grid_00001_00002 + grid_00001_00003)))
c Var 'aux97' direct represents '0' with '-584'
c Var 'aux97' direct represents '1' with '584'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-584'
c Encoding variable: aux98 with domain: bool (representing constraint ((shift(grid_00002_00002, -1) + shift(grid_00002_00003, -1) + aux50)<=10))
c Var 'aux98' direct represents '0' with '-585'
c Var 'aux98' direct represents '1' with '585'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-585'
c Encoding variable: aux99 with domain: bool (representing constraint (10<=(shift(grid_00002_00002, -1) + shift(grid_00002_00003, -1) + aux50)))
c Var 'aux99' direct represents '0' with '-586'
c Var 'aux99' direct represents '1' with '586'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-586'
c Encoding variable: aux100 with domain: bool (representing constraint ((shift(grid_00003_00002, -1) + shift(grid_00003_00003, -1) + aux51)<=25))
c Var 'aux100' direct represents '0' with '-587'
c Var 'aux100' direct represents '1' with '587'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-587'
c Encoding variable: aux101 with domain: bool (representing constraint (25<=(shift(grid_00003_00002, -1) + shift(grid_00003_00003, -1) + aux51)))
c Var 'aux101' direct represents '0' with '-588'
c Var 'aux101' direct represents '1' with '588'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-588'
c Encoding variable: aux102 with domain: bool (representing constraint ((grid_00004_00002 + grid_00004_00003)<=6))
c Var 'aux102' direct represents '0' with '-589'
c Var 'aux102' direct represents '1' with '589'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-589'
c Encoding variable: aux103 with domain: bool (representing constraint (6<=(grid_00004_00002 + grid_00004_00003)))
c Var 'aux103' direct represents '0' with '-590'
c Var 'aux103' direct represents '1' with '590'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-590'
c (((aux48 + shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1))<=13)=tv=SATLiteral(575))
-575 368 0
-575 164 366 0
-575 165 364 0
-575 167 362 0
-575 169 360 0
-575 171 358 0
-575 173 356 0
-575 175 354 0
-575 177 352 0
-575 9 366 0
-575 9 164 364 0
-575 9 165 362 0
-575 9 167 360 0
-575 9 169 358 0
-575 9 171 356 0
-575 9 173 354 0
-575 9 175 352 0
-575 9 177 350 0
-575 10 364 0
-575 10 164 362 0
-575 10 165 360 0
-575 10 167 358 0
-575 10 169 356 0
-575 10 171 354 0
-575 10 173 352 0
-575 10 175 350 0
-575 10 177 348 0
-575 12 362 0
-575 12 164 360 0
-575 12 165 358 0
-575 12 167 356 0
-575 12 169 354 0
-575 12 171 352 0
-575 12 173 350 0
-575 12 175 348 0
-575 12 177 346 0
-575 14 360 0
-575 14 164 358 0
-575 14 165 356 0
-575 14 167 354 0
-575 14 169 352 0
-575 14 171 350 0
-575 14 173 348 0
-575 14 175 346 0
-575 14 177 344 0
-575 16 358 0
-575 16 164 356 0
-575 16 165 354 0
-575 16 167 352 0
-575 16 169 350 0
-575 16 171 348 0
-575 16 173 346 0
-575 16 175 344 0
-575 16 177 343 0
-575 18 356 0
-575 18 164 354 0
-575 18 165 352 0
-575 18 167 350 0
-575 18 169 348 0
-575 18 171 346 0
-575 18 173 344 0
-575 18 175 343 0
-575 18 177 0
-575 20 354 0
-575 20 164 352 0
-575 20 165 350 0
-575 20 167 348 0
-575 20 169 346 0
-575 20 171 344 0
-575 20 173 343 0
-575 20 175 0
-575 20 177 0
-575 22 352 0
-575 22 164 350 0
-575 22 165 348 0
-575 22 167 346 0
-575 22 169 344 0
-575 22 171 343 0
-575 22 173 0
-575 22 175 0
-575 22 177 0
575 -173 -343 0
575 -171 -344 0
575 -169 -346 0
575 -167 -348 0
575 -165 -350 0
575 -164 -352 0
575 -22 -175 -343 0
575 -22 -173 -344 0
575 -22 -171 -346 0
575 -22 -169 -348 0
575 -22 -167 -350 0
575 -22 -165 -352 0
575 -22 -164 -354 0
575 -20 -177 -343 0
575 -20 -175 -344 0
575 -20 -173 -346 0
575 -20 -171 -348 0
575 -20 -169 -350 0
575 -20 -167 -352 0
575 -20 -165 -354 0
575 -20 -164 -356 0
575 -18 -343 0
575 -18 -177 -344 0
575 -18 -175 -346 0
575 -18 -173 -348 0
575 -18 -171 -350 0
575 -18 -169 -352 0
575 -18 -167 -354 0
575 -18 -165 -356 0
575 -18 -164 -358 0
575 -16 -344 0
575 -16 -177 -346 0
575 -16 -175 -348 0
575 -16 -173 -350 0
575 -16 -171 -352 0
575 -16 -169 -354 0
575 -16 -167 -356 0
575 -16 -165 -358 0
575 -16 -164 -360 0
575 -14 -346 0
575 -14 -177 -348 0
575 -14 -175 -350 0
575 -14 -173 -352 0
575 -14 -171 -354 0
575 -14 -169 -356 0
575 -14 -167 -358 0
575 -14 -165 -360 0
575 -14 -164 -362 0
575 -12 -348 0
575 -12 -177 -350 0
575 -12 -175 -352 0
575 -12 -173 -354 0
575 -12 -171 -356 0
575 -12 -169 -358 0
575 -12 -167 -360 0
575 -12 -165 -362 0
575 -12 -164 -364 0
575 -10 -350 0
575 -10 -177 -352 0
575 -10 -175 -354 0
575 -10 -173 -356 0
575 -10 -171 -358 0
575 -10 -169 -360 0
575 -10 -167 -362 0
575 -10 -165 -364 0
575 -10 -164 -366 0
575 -9 -352 0
575 -9 -177 -354 0
575 -9 -175 -356 0
575 -9 -173 -358 0
575 -9 -171 -360 0
575 -9 -169 -362 0
575 -9 -167 -364 0
575 -9 -165 -366 0
575 -9 -164 -368 0
c ((13<=(aux48 + shift(grid_00001_00002, -1) + shift(grid_00004_00002, -1)))=tv=SATLiteral(576))
-576 -171 -343 0
-576 -169 -344 0
-576 -167 -346 0
-576 -165 -348 0
-576 -164 -350 0
-576 -22 -173 -343 0
-576 -22 -171 -344 0
-576 -22 -169 -346 0
-576 -22 -167 -348 0
-576 -22 -165 -350 0
-576 -22 -164 -352 0
-576 -20 -175 -343 0
-576 -20 -173 -344 0
-576 -20 -171 -346 0
-576 -20 -169 -348 0
-576 -20 -167 -350 0
-576 -20 -165 -352 0
-576 -20 -164 -354 0
-576 -18 -177 -343 0
-576 -18 -175 -344 0
-576 -18 -173 -346 0
-576 -18 -171 -348 0
-576 -18 -169 -350 0
-576 -18 -167 -352 0
-576 -18 -165 -354 0
-576 -18 -164 -356 0
-576 -16 -343 0
-576 -16 -177 -344 0
-576 -16 -175 -346 0
-576 -16 -173 -348 0
-576 -16 -171 -350 0
-576 -16 -169 -352 0
-576 -16 -167 -354 0
-576 -16 -165 -356 0
-576 -16 -164 -358 0
-576 -14 -344 0
-576 -14 -177 -346 0
-576 -14 -175 -348 0
-576 -14 -173 -350 0
-576 -14 -171 -352 0
-576 -14 -169 -354 0
-576 -14 -167 -356 0
-576 -14 -165 -358 0
-576 -14 -164 -360 0
-576 -12 -346 0
-576 -12 -177 -348 0
-576 -12 -175 -350 0
-576 -12 -173 -352 0
-576 -12 -171 -354 0
-576 -12 -169 -356 0
-576 -12 -167 -358 0
-576 -12 -165 -360 0
-576 -12 -164 -362 0
-576 -10 -348 0
-576 -10 -177 -350 0
-576 -10 -175 -352 0
-576 -10 -173 -354 0
-576 -10 -171 -356 0
-576 -10 -169 -358 0
-576 -10 -167 -360 0
-576 -10 -165 -362 0
-576 -10 -164 -364 0
-576 -9 -350 0
-576 -9 -177 -352 0
-576 -9 -175 -354 0
-576 -9 -173 -356 0
-576 -9 -171 -358 0
-576 -9 -169 -360 0
-576 -9 -167 -362 0
-576 -9 -165 -364 0
-576 -9 -164 -366 0
576 366 0
576 164 364 0
576 165 362 0
576 167 360 0
576 169 358 0
576 171 356 0
576 173 354 0
576 175 352 0
576 177 350 0
576 9 364 0
576 9 164 362 0
576 9 165 360 0
576 9 167 358 0
576 9 169 356 0
576 9 171 354 0
576 9 173 352 0
576 9 175 350 0
576 9 177 348 0
576 10 362 0
576 10 164 360 0
576 10 165 358 0
576 10 167 356 0
576 10 169 354 0
576 10 171 352 0
576 10 173 350 0
576 10 175 348 0
576 10 177 346 0
576 12 360 0
576 12 164 358 0
576 12 165 356 0
576 12 167 354 0
576 12 169 352 0
576 12 171 350 0
576 12 173 348 0
576 12 175 346 0
576 12 177 344 0
576 14 358 0
576 14 164 356 0
576 14 165 354 0
576 14 167 352 0
576 14 169 350 0
576 14 171 348 0
576 14 173 346 0
576 14 175 344 0
576 14 177 343 0
576 16 356 0
576 16 164 354 0
576 16 165 352 0
576 16 167 350 0
576 16 169 348 0
576 16 171 346 0
576 16 173 344 0
576 16 175 343 0
576 16 177 0
576 18 354 0
576 18 164 352 0
576 18 165 350 0
576 18 167 348 0
576 18 169 346 0
576 18 171 344 0
576 18 173 343 0
576 18 175 0
576 18 177 0
576 20 352 0
576 20 164 350 0
576 20 165 348 0
576 20 167 346 0
576 20 169 344 0
576 20 171 343 0
576 20 173 0
576 20 175 0
576 20 177 0
576 22 350 0
576 22 164 348 0
576 22 165 346 0
576 22 167 344 0
576 22 169 343 0
576 22 171 0
576 22 173 0
576 22 175 0
576 22 177 0
c (((aux49 + shift(grid_00001_00003, -1) + shift(grid_00004_00003, -1))<=25)=tv=SATLiteral(577))
-577 25 192 403 0
-577 27 190 403 0
-577 27 192 401 0
-577 29 188 403 0
-577 29 190 401 0
-577 29 192 399 0
-577 31 186 403 0
-577 31 188 401 0
-577 31 190 399 0
-577 31 192 397 0
-577 33 184 403 0
-577 33 186 401 0
-577 33 188 399 0
-577 33 190 397 0
-577 33 192 395 0
-577 35 182 403 0
-577 35 184 401 0
-577 35 186 399 0
-577 35 188 397 0
-577 35 190 395 0
-577 35 192 393 0
-577 37 180 403 0
-577 37 182 401 0
-577 37 184 399 0
-577 37 186 397 0
-577 37 188 395 0
-577 37 190 393 0
-577 37 192 391 0
577 -391 0
577 -192 -393 0
577 -190 -395 0
577 -188 -397 0
577 -186 -399 0
577 -184 -401 0
577 -182 -403 0
577 -180 0
577 -179 0
577 -37 -393 0
577 -37 -192 -395 0
577 -37 -190 -397 0
577 -37 -188 -399 0
577 -37 -186 -401 0
577 -37 -184 -403 0
577 -37 -182 0
577 -37 -180 0
577 -37 -179 0
577 -35 -395 0
577 -35 -192 -397 0
577 -35 -190 -399 0
577 -35 -188 -401 0
577 -35 -186 -403 0
577 -35 -184 0
577 -35 -182 0
577 -35 -180 0
577 -35 -179 0
577 -33 -397 0
577 -33 -192 -399 0
577 -33 -190 -401 0
577 -33 -188 -403 0
577 -33 -186 0
577 -33 -184 0
577 -33 -182 0
577 -33 -180 0
577 -33 -179 0
577 -31 -399 0
577 -31 -192 -401 0
577 -31 -190 -403 0
577 -31 -188 0
577 -31 -186 0
577 -31 -184 0
577 -31 -182 0
577 -31 -180 0
577 -31 -179 0
577 -29 -401 0
577 -29 -192 -403 0
577 -29 -190 0
577 -29 -188 0
577 -29 -186 0
577 -29 -184 0
577 -29 -182 0
577 -29 -180 0
577 -29 -179 0
577 -27 -403 0
577 -27 -192 0
577 -27 -190 0
577 -27 -188 0
577 -27 -186 0
577 -27 -184 0
577 -27 -182 0
577 -27 -180 0
577 -27 -179 0
577 -25 0
577 -25 -192 0
577 -25 -190 0
577 -25 -188 0
577 -25 -186 0
577 -25 -184 0
577 -25 -182 0
577 -25 -180 0
577 -25 -179 0
577 -24 0
577 -24 -192 0
577 -24 -190 0
577 -24 -188 0
577 -24 -186 0
577 -24 -184 0
577 -24 -182 0
577 -24 -180 0
577 -24 -179 0
c ((25<=(aux49 + shift(grid_00001_00003, -1) + shift(grid_00004_00003, -1)))=tv=SATLiteral(578))
-578 -389 0
-578 -192 -391 0
-578 -190 -393 0
-578 -188 -395 0
-578 -186 -397 0
-578 -184 -399 0
-578 -182 -401 0
-578 -180 -403 0
-578 -179 0
-578 -37 -391 0
-578 -37 -192 -393 0
-578 -37 -190 -395 0
-578 -37 -188 -397 0
-578 -37 -186 -399 0
-578 -37 -184 -401 0
-578 -37 -182 -403 0
-578 -37 -180 0
-578 -37 -179 0
-578 -35 -393 0
-578 -35 -192 -395 0
-578 -35 -190 -397 0
-578 -35 -188 -399 0
-578 -35 -186 -401 0
-578 -35 -184 -403 0
-578 -35 -182 0
-578 -35 -180 0
-578 -35 -179 0
-578 -33 -395 0
-578 -33 -192 -397 0
-578 -33 -190 -399 0
-578 -33 -188 -401 0
-578 -33 -186 -403 0
-578 -33 -184 0
-578 -33 -182 0
-578 -33 -180 0
-578 -33 -179 0
-578 -31 -397 0
-578 -31 -192 -399 0
-578 -31 -190 -401 0
-578 -31 -188 -403 0
-578 -31 -186 0
-578 -31 -184 0
-578 -31 -182 0
-578 -31 -180 0
-578 -31 -179 0
-578 -29 -399 0
-578 -29 -192 -401 0
-578 -29 -190 -403 0
-578 -29 -188 0
-578 -29 -186 0
-578 -29 -184 0
-578 -29 -182 0
-578 -29 -180 0
-578 -29 -179 0
-578 -27 -401 0
-578 -27 -192 -403 0
-578 -27 -190 0
-578 -27 -188 0
-578 -27 -186 0
-578 -27 -184 0
-578 -27 -182 0
-578 -27 -180 0
-578 -27 -179 0
-578 -25 -403 0
-578 -25 -192 0
-578 -25 -190 0
-578 -25 -188 0
-578 -25 -186 0
-578 -25 -184 0
-578 -25 -182 0
-578 -25 -180 0
-578 -25 -179 0
-578 -24 0
-578 -24 -192 0
-578 -24 -190 0
-578 -24 -188 0
-578 -24 -186 0
-578 -24 -184 0
-578 -24 -182 0
-578 -24 -180 0
-578 -24 -179 0
578 24 192 403 0
578 25 190 403 0
578 25 192 401 0
578 27 188 403 0
578 27 190 401 0
578 27 192 399 0
578 29 186 403 0
578 29 188 401 0
578 29 190 399 0
578 29 192 397 0
578 31 184 403 0
578 31 186 401 0
578 31 188 399 0
578 31 190 397 0
578 31 192 395 0
578 33 182 403 0
578 33 184 401 0
578 33 186 399 0
578 33 188 397 0
578 33 190 395 0
578 33 192 393 0
578 35 180 403 0
578 35 182 401 0
578 35 184 399 0
578 35 186 397 0
578 35 188 395 0
578 35 190 393 0
578 35 192 391 0
578 37 179 403 0
578 37 180 401 0
578 37 182 399 0
578 37 184 397 0
578 37 186 395 0
578 37 188 393 0
578 37 190 391 0
578 37 192 389 0
c (((grid_00003_00001 + grid_00002_00001)<=12)=tv=SATLiteral(579))
-579 105 54 0
-579 107 52 0
-579 109 50 0
-579 111 48 0
-579 113 46 0
-579 115 44 0
579 -44 0
579 -115 -46 0
579 -113 -48 0
579 -111 -50 0
579 -109 -52 0
579 -107 -54 0
579 -105 0
579 -103 0
579 -102 0
c ((12<=(grid_00003_00001 + grid_00002_00001))=tv=SATLiteral(580))
-580 -42 0
-580 -115 -44 0
-580 -113 -46 0
-580 -111 -48 0
-580 -109 -50 0
-580 -107 -52 0
-580 -105 -54 0
-580 -103 0
-580 -102 0
580 103 54 0
580 105 52 0
580 107 50 0
580 109 48 0
580 111 46 0
580 113 44 0
580 115 42 0
c (((grid_00003_00004 + grid_00002_00004)<=8)=tv=SATLiteral(581))
-581 97 0
-581 147 95 0
-581 148 93 0
-581 150 91 0
-581 152 89 0
-581 154 87 0
-581 156 86 0
-581 158 0
-581 160 0
581 -158 -86 0
581 -156 -87 0
581 -154 -89 0
581 -152 -91 0
581 -150 -93 0
581 -148 -95 0
581 -147 -97 0
c ((8<=(grid_00003_00004 + grid_00002_00004))=tv=SATLiteral(582))
-582 -156 -86 0
-582 -154 -87 0
-582 -152 -89 0
-582 -150 -91 0
-582 -148 -93 0
-582 -147 -95 0
582 95 0
582 147 93 0
582 148 91 0
582 150 89 0
582 152 87 0
582 154 86 0
582 156 0
582 158 0
582 160 0
c (((grid_00001_00002 + grid_00001_00003)<=17)=tv=SATLiteral(583))
-583 22 37 0
583 -37 0
583 -22 0
583 -20 0
583 -18 0
583 -16 0
583 -14 0
583 -12 0
583 -10 0
583 -9 0
c ((17<=(grid_00001_00002 + grid_00001_00003))=tv=SATLiteral(584))
-584 -35 0
-584 -22 -37 0
-584 -20 0
-584 -18 0
-584 -16 0
-584 -14 0
-584 -12 0
-584 -10 0
-584 -9 0
584 20 37 0
584 22 35 0
c (((shift(grid_00002_00002, -1) + shift(grid_00002_00003, -1) + aux50)<=10)=tv=SATLiteral(585))
-585 424 0
-585 71 422 0
-585 72 420 0
-585 74 418 0
-585 76 416 0
-585 78 414 0
-585 80 412 0
-585 82 410 0
-585 84 408 0
-585 56 422 0
-585 56 71 420 0
-585 56 72 418 0
-585 56 74 416 0
-585 56 76 414 0
-585 56 78 412 0
-585 56 80 410 0
-585 56 82 408 0
-585 56 84 406 0
-585 57 420 0
-585 57 71 418 0
-585 57 72 416 0
-585 57 74 414 0
-585 57 76 412 0
-585 57 78 410 0
-585 57 80 408 0
-585 57 82 406 0
-585 57 84 405 0
-585 59 418 0
-585 59 71 416 0
-585 59 72 414 0
-585 59 74 412 0
-585 59 76 410 0
-585 59 78 408 0
-585 59 80 406 0
-585 59 82 405 0
-585 59 84 0
-585 61 416 0
-585 61 71 414 0
-585 61 72 412 0
-585 61 74 410 0
-585 61 76 408 0
-585 61 78 406 0
-585 61 80 405 0
-585 61 82 0
-585 61 84 0
-585 63 414 0
-585 63 71 412 0
-585 63 72 410 0
-585 63 74 408 0
-585 63 76 406 0
-585 63 78 405 0
-585 63 80 0
-585 63 82 0
-585 63 84 0
-585 65 412 0
-585 65 71 410 0
-585 65 72 408 0
-585 65 74 406 0
-585 65 76 405 0
-585 65 78 0
-585 65 80 0
-585 65 82 0
-585 65 84 0
-585 67 410 0
-585 67 71 408 0
-585 67 72 406 0
-585 67 74 405 0
-585 67 76 0
-585 67 78 0
-585 67 80 0
-585 67 82 0
-585 67 84 0
-585 69 408 0
-585 69 71 406 0
-585 69 72 405 0
-585 69 74 0
-585 69 76 0
-585 69 78 0
-585 69 80 0
-585 69 82 0
-585 69 84 0
585 -74 -405 0
585 -72 -406 0
585 -71 -408 0
585 -69 -76 -405 0
585 -69 -74 -406 0
585 -69 -72 -408 0
585 -69 -71 -410 0
585 -67 -78 -405 0
585 -67 -76 -406 0
585 -67 -74 -408 0
585 -67 -72 -410 0
585 -67 -71 -412 0
585 -65 -80 -405 0
585 -65 -78 -406 0
585 -65 -76 -408 0
585 -65 -74 -410 0
585 -65 -72 -412 0
585 -65 -71 -414 0
585 -63 -82 -405 0
585 -63 -80 -406 0
585 -63 -78 -408 0
585 -63 -76 -410 0
585 -63 -74 -412 0
585 -63 -72 -414 0
585 -63 -71 -416 0
585 -61 -84 -405 0
585 -61 -82 -406 0
585 -61 -80 -408 0
585 -61 -78 -410 0
585 -61 -76 -412 0
585 -61 -74 -414 0
585 -61 -72 -416 0
585 -61 -71 -418 0
585 -59 -405 0
585 -59 -84 -406 0
585 -59 -82 -408 0
585 -59 -80 -410 0
585 -59 -78 -412 0
585 -59 -76 -414 0
585 -59 -74 -416 0
585 -59 -72 -418 0
585 -59 -71 -420 0
585 -57 -406 0
585 -57 -84 -408 0
585 -57 -82 -410 0
585 -57 -80 -412 0
585 -57 -78 -414 0
585 -57 -76 -416 0
585 -57 -74 -418 0
585 -57 -72 -420 0
585 -57 -71 -422 0
585 -56 -408 0
585 -56 -84 -410 0
585 -56 -82 -412 0
585 -56 -80 -414 0
585 -56 -78 -416 0
585 -56 -76 -418 0
585 -56 -74 -420 0
585 -56 -72 -422 0
585 -56 -71 -424 0
c ((10<=(shift(grid_00002_00002, -1) + shift(grid_00002_00003, -1) + aux50))=tv=SATLiteral(586))
-586 -72 -405 0
-586 -71 -406 0
-586 -69 -74 -405 0
-586 -69 -72 -406 0
-586 -69 -71 -408 0
-586 -67 -76 -405 0
-586 -67 -74 -406 0
-586 -67 -72 -408 0
-586 -67 -71 -410 0
-586 -65 -78 -405 0
-586 -65 -76 -406 0
-586 -65 -74 -408 0
-586 -65 -72 -410 0
-586 -65 -71 -412 0
-586 -63 -80 -405 0
-586 -63 -78 -406 0
-586 -63 -76 -408 0
-586 -63 -74 -410 0
-586 -63 -72 -412 0
-586 -63 -71 -414 0
-586 -61 -82 -405 0
-586 -61 -80 -406 0
-586 -61 -78 -408 0
-586 -61 -76 -410 0
-586 -61 -74 -412 0
-586 -61 -72 -414 0
-586 -61 -71 -416 0
-586 -59 -84 -405 0
-586 -59 -82 -406 0
-586 -59 -80 -408 0
-586 -59 -78 -410 0
-586 -59 -76 -412 0
-586 -59 -74 -414 0
-586 -59 -72 -416 0
-586 -59 -71 -418 0
-586 -57 -405 0
-586 -57 -84 -406 0
-586 -57 -82 -408 0
-586 -57 -80 -410 0
-586 -57 -78 -412 0
-586 -57 -76 -414 0
-586 -57 -74 -416 0
-586 -57 -72 -418 0
-586 -57 -71 -420 0
-586 -56 -406 0
-586 -56 -84 -408 0
-586 -56 -82 -410 0
-586 -56 -80 -412 0
-586 -56 -78 -414 0
-586 -56 -76 -416 0
-586 -56 -74 -418 0
-586 -56 -72 -420 0
-586 -56 -71 -422 0
586 422 0
586 71 420 0
586 72 418 0
586 74 416 0
586 76 414 0
586 78 412 0
586 80 410 0
586 82 408 0
586 84 406 0
586 56 420 0
586 56 71 418 0
586 56 72 416 0
586 56 74 414 0
586 56 76 412 0
586 56 78 410 0
586 56 80 408 0
586 56 82 406 0
586 56 84 405 0
586 57 418 0
586 57 71 416 0
586 57 72 414 0
586 57 74 412 0
586 57 76 410 0
586 57 78 408 0
586 57 80 406 0
586 57 82 405 0
586 57 84 0
586 59 416 0
586 59 71 414 0
586 59 72 412 0
586 59 74 410 0
586 59 76 408 0
586 59 78 406 0
586 59 80 405 0
586 59 82 0
586 59 84 0
586 61 414 0
586 61 71 412 0
586 61 72 410 0
586 61 74 408 0
586 61 76 406 0
586 61 78 405 0
586 61 80 0
586 61 82 0
586 61 84 0
586 63 412 0
586 63 71 410 0
586 63 72 408 0
586 63 74 406 0
586 63 76 405 0
586 63 78 0
586 63 80 0
586 63 82 0
586 63 84 0
586 65 410 0
586 65 71 408 0
586 65 72 406 0
586 65 74 405 0
586 65 76 0
586 65 78 0
586 65 80 0
586 65 82 0
586 65 84 0
586 67 408 0
586 67 71 406 0
586 67 72 405 0
586 67 74 0
586 67 76 0
586 67 78 0
586 67 80 0
586 67 82 0
586 67 84 0
586 69 406 0
586 69 71 405 0
586 69 72 0
586 69 74 0
586 69 76 0
586 69 78 0
586 69 80 0
586 69 82 0
586 69 84 0
c (((shift(grid_00003_00002, -1) + shift(grid_00003_00003, -1) + aux51)<=25)=tv=SATLiteral(587))
-587 118 145 465 0
-587 120 143 465 0
-587 120 145 463 0
-587 122 141 465 0
-587 122 143 463 0
-587 122 145 461 0
-587 124 139 465 0
-587 124 141 463 0
-587 124 143 461 0
-587 124 145 459 0
-587 126 137 465 0
-587 126 139 463 0
-587 126 141 461 0
-587 126 143 459 0
-587 126 145 457 0
-587 128 135 465 0
-587 128 137 463 0
-587 128 139 461 0
-587 128 141 459 0
-587 128 143 457 0
-587 128 145 455 0
-587 130 133 465 0
-587 130 135 463 0
-587 130 137 461 0
-587 130 139 459 0
-587 130 141 457 0
-587 130 143 455 0
-587 130 145 453 0
587 -453 0
587 -145 -455 0
587 -143 -457 0
587 -141 -459 0
587 -139 -461 0
587 -137 -463 0
587 -135 -465 0
587 -133 0
587 -132 0
587 -130 -455 0
587 -130 -145 -457 0
587 -130 -143 -459 0
587 -130 -141 -461 0
587 -130 -139 -463 0
587 -130 -137 -465 0
587 -130 -135 0
587 -130 -133 0
587 -130 -132 0
587 -128 -457 0
587 -128 -145 -459 0
587 -128 -143 -461 0
587 -128 -141 -463 0
587 -128 -139 -465 0
587 -128 -137 0
587 -128 -135 0
587 -128 -133 0
587 -128 -132 0
587 -126 -459 0
587 -126 -145 -461 0
587 -126 -143 -463 0
587 -126 -141 -465 0
587 -126 -139 0
587 -126 -137 0
587 -126 -135 0
587 -126 -133 0
587 -126 -132 0
587 -124 -461 0
587 -124 -145 -463 0
587 -124 -143 -465 0
587 -124 -141 0
587 -124 -139 0
587 -124 -137 0
587 -124 -135 0
587 -124 -133 0
587 -124 -132 0
587 -122 -463 0
587 -122 -145 -465 0
587 -122 -143 0
587 -122 -141 0
587 -122 -139 0
587 -122 -137 0
587 -122 -135 0
587 -122 -133 0
587 -122 -132 0
587 -120 -465 0
587 -120 -145 0
587 -120 -143 0
587 -120 -141 0
587 -120 -139 0
587 -120 -137 0
587 -120 -135 0
587 -120 -133 0
587 -120 -132 0
587 -118 0
587 -118 -145 0
587 -118 -143 0
587 -118 -141 0
587 -118 -139 0
587 -118 -137 0
587 -118 -135 0
587 -118 -133 0
587 -118 -132 0
587 -117 0
587 -117 -145 0
587 -117 -143 0
587 -117 -141 0
587 -117 -139 0
587 -117 -137 0
587 -117 -135 0
587 -117 -133 0
587 -117 -132 0
c ((25<=(shift(grid_00003_00002, -1) + shift(grid_00003_00003, -1) + aux51))=tv=SATLiteral(588))
-588 -451 0
-588 -145 -453 0
-588 -143 -455 0
-588 -141 -457 0
-588 -139 -459 0
-588 -137 -461 0
-588 -135 -463 0
-588 -133 -465 0
-588 -132 0
-588 -130 -453 0
-588 -130 -145 -455 0
-588 -130 -143 -457 0
-588 -130 -141 -459 0
-588 -130 -139 -461 0
-588 -130 -137 -463 0
-588 -130 -135 -465 0
-588 -130 -133 0
-588 -130 -132 0
-588 -128 -455 0
-588 -128 -145 -457 0
-588 -128 -143 -459 0
-588 -128 -141 -461 0
-588 -128 -139 -463 0
-588 -128 -137 -465 0
-588 -128 -135 0
-588 -128 -133 0
-588 -128 -132 0
-588 -126 -457 0
-588 -126 -145 -459 0
-588 -126 -143 -461 0
-588 -126 -141 -463 0
-588 -126 -139 -465 0
-588 -126 -137 0
-588 -126 -135 0
-588 -126 -133 0
-588 -126 -132 0
-588 -124 -459 0
-588 -124 -145 -461 0
-588 -124 -143 -463 0
-588 -124 -141 -465 0
-588 -124 -139 0
-588 -124 -137 0
-588 -124 -135 0
-588 -124 -133 0
-588 -124 -132 0
-588 -122 -461 0
-588 -122 -145 -463 0
-588 -122 -143 -465 0
-588 -122 -141 0
-588 -122 -139 0
-588 -122 -137 0
-588 -122 -135 0
-588 -122 -133 0
-588 -122 -132 0
-588 -120 -463 0
-588 -120 -145 -465 0
-588 -120 -143 0
-588 -120 -141 0
-588 -120 -139 0
-588 -120 -137 0
-588 -120 -135 0
-588 -120 -133 0
-588 -120 -132 0
-588 -118 -465 0
-588 -118 -145 0
-588 -118 -143 0
-588 -118 -141 0
-588 -118 -139 0
-588 -118 -137 0
-588 -118 -135 0
-588 -118 -133 0
-588 -118 -132 0
-588 -117 0
-588 -117 -145 0
-588 -117 -143 0
-588 -117 -141 0
-588 -117 -139 0
-588 -117 -137 0
-588 -117 -135 0
-588 -117 -133 0
-588 -117 -132 0
588 117 145 465 0
588 118 143 465 0
588 118 145 463 0
588 120 141 465 0
588 120 143 463 0
588 120 145 461 0
588 122 139 465 0
588 122 141 463 0
588 122 143 461 0
588 122 145 459 0
588 124 137 465 0
588 124 139 463 0
588 124 141 461 0
588 124 143 459 0
588 124 145 457 0
588 126 135 465 0
588 126 137 463 0
588 126 139 461 0
588 126 141 459 0
588 126 143 457 0
588 126 145 455 0
588 128 133 465 0
588 128 135 463 0
588 128 137 461 0
588 128 139 459 0
588 128 141 457 0
588 128 143 455 0
588 128 145 453 0
588 130 132 465 0
588 130 133 463 0
588 130 135 461 0
588 130 137 459 0
588 130 139 457 0
588 130 141 455 0
588 130 143 453 0
588 130 145 451 0
c (((grid_00004_00002 + grid_00004_00003)<=6)=tv=SATLiteral(589))
-589 186 0
-589 164 184 0
-589 165 182 0
-589 167 180 0
-589 169 179 0
-589 171 0
-589 173 0
-589 175 0
-589 177 0
589 -171 -179 0
589 -169 -180 0
589 -167 -182 0
589 -165 -184 0
589 -164 -186 0
c ((6<=(grid_00004_00002 + grid_00004_00003))=tv=SATLiteral(590))
-590 -169 -179 0
-590 -167 -180 0
-590 -165 -182 0
-590 -164 -184 0
590 184 0
590 164 182 0
590 165 180 0
590 167 179 0
590 169 0
590 171 0
590 173 0
590 175 0
590 177 0
c ((grid_00003_00001 != grid_00002_00001)=tv=SATLiteral(295))
-102 41 295 0
-104 43 295 0
-106 45 295 0
-108 47 295 0
-110 49 295 0
-112 51 295 0
-114 53 295 0
-116 55 295 0
115 -54 295 0
-41 102 295 0
-43 104 295 0
-45 106 295 0
-47 108 295 0
-49 110 295 0
-51 112 295 0
-53 114 295 0
-55 116 295 0
54 -115 295 0
-102 -41 -295 0
-104 -43 -295 0
-106 -45 -295 0
-108 -47 -295 0
-110 -49 -295 0
-112 -51 -295 0
-114 -53 -295 0
-116 -55 -295 0
115 54 -295 0
c ((grid_00003_00004 != grid_00002_00004)=tv=SATLiteral(296))
-147 86 296 0
-149 88 296 0
-151 90 296 0
-153 92 296 0
-155 94 296 0
-157 96 296 0
-159 98 296 0
-161 100 296 0
160 -99 296 0
-86 147 296 0
-88 149 296 0
-90 151 296 0
-92 153 296 0
-94 155 296 0
-96 157 296 0
-98 159 296 0
-100 161 296 0
99 -160 296 0
-147 -86 -296 0
-149 -88 -296 0
-151 -90 -296 0
-153 -92 -296 0
-155 -94 -296 0
-157 -96 -296 0
-159 -98 -296 0
-161 -100 -296 0
160 99 -296 0
c ((SATLiteral(575) /\ SATLiteral(576))=tv=SATLiteral(297))
297 -575 -576 0
575 -297 0
576 -297 0
c ((SATLiteral(577) /\ SATLiteral(578))=tv=SATLiteral(298))
298 -577 -578 0
577 -298 0
578 -298 0
c ((SATLiteral(579) /\ SATLiteral(580))=tv=SATLiteral(299))
299 -579 -580 0
579 -299 0
580 -299 0
c ((SATLiteral(581) /\ SATLiteral(582))=tv=SATLiteral(300))
300 -581 -582 0
581 -300 0
582 -300 0
c ((grid_00001_00002 != grid_00001_00003)=tv=SATLiteral(301))
-9 24 301 0
-11 26 301 0
-13 28 301 0
-15 30 301 0
-17 32 301 0
-19 34 301 0
-21 36 301 0
-23 38 301 0
22 -37 301 0
-24 9 301 0
-26 11 301 0
-28 13 301 0
-30 15 301 0
-32 17 301 0
-34 19 301 0
-36 21 301 0
-38 23 301 0
37 -22 301 0
-9 -24 -301 0
-11 -26 -301 0
-13 -28 -301 0
-15 -30 -301 0
-17 -32 -301 0
-19 -34 -301 0
-21 -36 -301 0
-23 -38 -301 0
22 37 -301 0
c ((grid_00004_00002 != grid_00004_00003)=tv=SATLiteral(302))
-164 179 302 0
-166 181 302 0
-168 183 302 0
-170 185 302 0
-172 187 302 0
-174 189 302 0
-176 191 302 0
-178 193 302 0
177 -192 302 0
-179 164 302 0
-181 166 302 0
-183 168 302 0
-185 170 302 0
-187 172 302 0
-189 174 302 0
-191 176 302 0
-193 178 302 0
192 -177 302 0
-164 -179 -302 0
-166 -181 -302 0
-168 -183 -302 0
-170 -185 -302 0
-172 -187 -302 0
-174 -189 -302 0
-176 -191 -302 0
-178 -193 -302 0
177 192 -302 0
c ((SATLiteral(583) /\ SATLiteral(584))=tv=SATLiteral(303))
303 -583 -584 0
583 -303 0
584 -303 0
c ((SATLiteral(585) /\ SATLiteral(586))=tv=SATLiteral(304))
304 -585 -586 0
585 -304 0
586 -304 0
c ((SATLiteral(587) /\ SATLiteral(588))=tv=SATLiteral(305))
305 -587 -588 0
587 -305 0
588 -305 0
c ((SATLiteral(589) /\ SATLiteral(590))=tv=SATLiteral(306))
306 -589 -590 0
589 -306 0
590 -306 0
c (((SATLiteral(9) + aux52 + SATLiteral(164))<=1)=tv=SATLiteral(307))
-307 468 0
-307 -164 467 0
-307 -9 467 0
-307 -9 -164 0
307 164 -467 0
307 9 -467 0
307 9 164 -468 0
c (((SATLiteral(11) + aux53 + SATLiteral(166))<=1)=tv=SATLiteral(308))
-308 471 0
-308 -166 470 0
-308 -11 470 0
-308 -11 -166 0
308 166 -470 0
308 11 -470 0
308 11 166 -471 0
c (((SATLiteral(13) + aux54 + SATLiteral(168))<=1)=tv=SATLiteral(309))
-309 474 0
-309 -168 473 0
-309 -13 473 0
-309 -13 -168 0
309 168 -473 0
309 13 -473 0
309 13 168 -474 0
c (((SATLiteral(15) + aux55 + SATLiteral(170))<=1)=tv=SATLiteral(310))
-310 477 0
-310 -170 476 0
-310 -15 476 0
-310 -15 -170 0
310 170 -476 0
310 15 -476 0
310 15 170 -477 0
c (((SATLiteral(17) + aux56 + SATLiteral(172))<=1)=tv=SATLiteral(311))
-311 480 0
-311 -172 479 0
-311 -17 479 0
-311 -17 -172 0
311 172 -479 0
311 17 -479 0
311 17 172 -480 0
c (((SATLiteral(19) + aux57 + SATLiteral(174))<=1)=tv=SATLiteral(312))
-312 483 0
-312 -174 482 0
-312 -19 482 0
-312 -19 -174 0
312 174 -482 0
312 19 -482 0
312 19 174 -483 0
c (((SATLiteral(21) + aux58 + SATLiteral(176))<=1)=tv=SATLiteral(313))
-313 486 0
-313 -176 485 0
-313 -21 485 0
-313 -21 -176 0
313 176 -485 0
313 21 -485 0
313 21 176 -486 0
c (((SATLiteral(23) + aux59 + SATLiteral(178))<=1)=tv=SATLiteral(314))
-314 489 0
-314 -178 488 0
-314 -23 488 0
-314 -23 -178 0
314 178 -488 0
314 23 -488 0
314 23 178 -489 0
c (((SATLiteral(-22) + aux60 + SATLiteral(-177))<=1)=tv=SATLiteral(315))
-315 492 0
-315 177 491 0
-315 22 491 0
-315 22 177 0
315 -177 -491 0
315 -22 -491 0
315 -22 -177 -492 0
c (((SATLiteral(24) + aux61 + SATLiteral(179))<=1)=tv=SATLiteral(316))
-316 495 0
-316 -179 494 0
-316 -24 494 0
-316 -24 -179 0
316 179 -494 0
316 24 -494 0
316 24 179 -495 0
c (((SATLiteral(26) + aux62 + SATLiteral(181))<=1)=tv=SATLiteral(317))
-317 498 0
-317 -181 497 0
-317 -26 497 0
-317 -26 -181 0
317 181 -497 0
317 26 -497 0
317 26 181 -498 0
c (((SATLiteral(28) + aux63 + SATLiteral(183))<=1)=tv=SATLiteral(318))
-318 501 0
-318 -183 500 0
-318 -28 500 0
-318 -28 -183 0
318 183 -500 0
318 28 -500 0
318 28 183 -501 0
c (((SATLiteral(30) + aux64 + SATLiteral(185))<=1)=tv=SATLiteral(319))
-319 504 0
-319 -185 503 0
-319 -30 503 0
-319 -30 -185 0
319 185 -503 0
319 30 -503 0
319 30 185 -504 0
c (((SATLiteral(32) + aux65 + SATLiteral(187))<=1)=tv=SATLiteral(320))
-320 507 0
-320 -187 506 0
-320 -32 506 0
-320 -32 -187 0
320 187 -506 0
320 32 -506 0
320 32 187 -507 0
c (((SATLiteral(34) + aux66 + SATLiteral(189))<=1)=tv=SATLiteral(321))
-321 510 0
-321 -189 509 0
-321 -34 509 0
-321 -34 -189 0
321 189 -509 0
321 34 -509 0
321 34 189 -510 0
c (((SATLiteral(36) + aux67 + SATLiteral(191))<=1)=tv=SATLiteral(322))
-322 513 0
-322 -191 512 0
-322 -36 512 0
-322 -36 -191 0
322 191 -512 0
322 36 -512 0
322 36 191 -513 0
c (((SATLiteral(38) + aux68 + SATLiteral(193))<=1)=tv=SATLiteral(323))
-323 516 0
-323 -193 515 0
-323 -38 515 0
-323 -38 -193 0
323 193 -515 0
323 38 -515 0
323 38 193 -516 0
c (((SATLiteral(-37) + aux69 + SATLiteral(-192))<=1)=tv=SATLiteral(324))
-324 519 0
-324 192 518 0
-324 37 518 0
-324 37 192 0
324 -192 -518 0
324 -37 -518 0
324 -37 -192 -519 0
c (((aux70 + SATLiteral(56) + SATLiteral(71))<=1)=tv=SATLiteral(325))
-325 522 0
-325 -71 521 0
-325 -56 521 0
-325 -56 -71 0
325 71 -521 0
325 56 -521 0
325 56 71 -522 0
c (((aux71 + SATLiteral(58) + SATLiteral(73))<=1)=tv=SATLiteral(326))
-326 525 0
-326 -73 524 0
-326 -58 524 0
-326 -58 -73 0
326 73 -524 0
326 58 -524 0
326 58 73 -525 0
c (((aux72 + SATLiteral(60) + SATLiteral(75))<=1)=tv=SATLiteral(327))
-327 528 0
-327 -75 527 0
-327 -60 527 0
-327 -60 -75 0
327 75 -527 0
327 60 -527 0
327 60 75 -528 0
c (((aux73 + SATLiteral(62) + SATLiteral(77))<=1)=tv=SATLiteral(328))
-328 531 0
-328 -77 530 0
-328 -62 530 0
-328 -62 -77 0
328 77 -530 0
328 62 -530 0
328 62 77 -531 0
c (((aux74 + SATLiteral(64) + SATLiteral(79))<=1)=tv=SATLiteral(329))
-329 534 0
-329 -79 533 0
-329 -64 533 0
-329 -64 -79 0
329 79 -533 0
329 64 -533 0
329 64 79 -534 0
c (((aux75 + SATLiteral(66) + SATLiteral(81))<=1)=tv=SATLiteral(330))
-330 537 0
-330 -81 536 0
-330 -66 536 0
-330 -66 -81 0
330 81 -536 0
330 66 -536 0
330 66 81 -537 0
c (((aux76 + SATLiteral(68) + SATLiteral(83))<=1)=tv=SATLiteral(331))
-331 540 0
-331 -83 539 0
-331 -68 539 0
-331 -68 -83 0
331 83 -539 0
331 68 -539 0
331 68 83 -540 0
c (((aux77 + SATLiteral(70) + SATLiteral(85))<=1)=tv=SATLiteral(332))
-332 543 0
-332 -85 542 0
-332 -70 542 0
-332 -70 -85 0
332 85 -542 0
332 70 -542 0
332 70 85 -543 0
c (((aux78 + SATLiteral(-69) + SATLiteral(-84))<=1)=tv=SATLiteral(333))
-333 546 0
-333 84 545 0
-333 69 545 0
-333 69 84 0
333 -84 -545 0
333 -69 -545 0
333 -69 -84 -546 0
c (((SATLiteral(117) + SATLiteral(132) + aux79)<=1)=tv=SATLiteral(334))
-334 549 0
-334 -132 548 0
-334 -117 548 0
-334 -117 -132 0
334 132 -548 0
334 117 -548 0
334 117 132 -549 0
c (((SATLiteral(119) + SATLiteral(134) + aux80)<=1)=tv=SATLiteral(335))
-335 552 0
-335 -134 551 0
-335 -119 551 0
-335 -119 -134 0
335 134 -551 0
335 119 -551 0
335 119 134 -552 0
c (((SATLiteral(121) + SATLiteral(136) + aux81)<=1)=tv=SATLiteral(336))
-336 555 0
-336 -136 554 0
-336 -121 554 0
-336 -121 -136 0
336 136 -554 0
336 121 -554 0
336 121 136 -555 0
c (((SATLiteral(123) + SATLiteral(138) + aux82)<=1)=tv=SATLiteral(337))
-337 558 0
-337 -138 557 0
-337 -123 557 0
-337 -123 -138 0
337 138 -557 0
337 123 -557 0
337 123 138 -558 0
c (((SATLiteral(125) + SATLiteral(140) + aux83)<=1)=tv=SATLiteral(338))
-338 561 0
-338 -140 560 0
-338 -125 560 0
-338 -125 -140 0
338 140 -560 0
338 125 -560 0
338 125 140 -561 0
c (((SATLiteral(127) + SATLiteral(142) + aux84)<=1)=tv=SATLiteral(339))
-339 564 0
-339 -142 563 0
-339 -127 563 0
-339 -127 -142 0
339 142 -563 0
339 127 -563 0
339 127 142 -564 0
c (((SATLiteral(129) + SATLiteral(144) + aux85)<=1)=tv=SATLiteral(340))
-340 567 0
-340 -144 566 0
-340 -129 566 0
-340 -129 -144 0
340 144 -566 0
340 129 -566 0
340 129 144 -567 0
c (((SATLiteral(131) + SATLiteral(146) + aux86)<=1)=tv=SATLiteral(341))
-341 570 0
-341 -146 569 0
-341 -131 569 0
-341 -131 -146 0
341 146 -569 0
341 131 -569 0
341 131 146 -570 0
c (((SATLiteral(-130) + SATLiteral(-145) + aux87)<=1)=tv=SATLiteral(342))
-342 573 0
-342 145 572 0
-342 130 572 0
-342 130 145 0
342 -145 -572 0
342 -130 -572 0
342 -130 -145 -573 0
c SATLiteral(2)
2 0
c SATLiteral(3)
3 0
c SATLiteral(4)
4 0
c SATLiteral(5)
5 0
c SATLiteral(6)
6 0
c SATLiteral(7)
7 0
c SATLiteral(8)
8 0
c SATLiteral(39)
39 0
c SATLiteral(40)
40 0
c SATLiteral(101)
101 0
c SATLiteral(162)
162 0
c SATLiteral(163)
163 0
c SATLiteral(194)
194 0
c (SATLiteral(201) -> SATLiteral(295))
-201 295 0
c (SATLiteral(204) -> SATLiteral(296))
-204 296 0
c (SATLiteral(222) -> SATLiteral(297))
-222 297 0
c (SATLiteral(223) -> SATLiteral(298))
-223 298 0
c (SATLiteral(226) -> SATLiteral(299))
-226 299 0
c (SATLiteral(229) -> SATLiteral(300))
-229 300 0
c (SATLiteral(251) -> SATLiteral(301))
-251 301 0
c (SATLiteral(266) -> SATLiteral(302))
-266 302 0
c (SATLiteral(276) -> SATLiteral(303))
-276 303 0
c (SATLiteral(280) -> SATLiteral(304))
-280 304 0
c (SATLiteral(285) -> SATLiteral(305))
-285 305 0
c (SATLiteral(291) -> SATLiteral(306))
-291 306 0
c (SATLiteral(197) -> SATLiteral(307))
-197 307 0
c (SATLiteral(197) -> SATLiteral(308))
-197 308 0
c (SATLiteral(197) -> SATLiteral(309))
-197 309 0
c (SATLiteral(197) -> SATLiteral(310))
-197 310 0
c (SATLiteral(197) -> SATLiteral(311))
-197 311 0
c (SATLiteral(197) -> SATLiteral(312))
-197 312 0
c (SATLiteral(197) -> SATLiteral(313))
-197 313 0
c (SATLiteral(197) -> SATLiteral(314))
-197 314 0
c (SATLiteral(197) -> SATLiteral(315))
-197 315 0
c (SATLiteral(198) -> SATLiteral(316))
-198 316 0
c (SATLiteral(198) -> SATLiteral(317))
-198 317 0
c (SATLiteral(198) -> SATLiteral(318))
-198 318 0
c (SATLiteral(198) -> SATLiteral(319))
-198 319 0
c (SATLiteral(198) -> SATLiteral(320))
-198 320 0
c (SATLiteral(198) -> SATLiteral(321))
-198 321 0
c (SATLiteral(198) -> SATLiteral(322))
-198 322 0
c (SATLiteral(198) -> SATLiteral(323))
-198 323 0
c (SATLiteral(198) -> SATLiteral(324))
-198 324 0
c (SATLiteral(255) -> SATLiteral(325))
-255 325 0
c (SATLiteral(255) -> SATLiteral(326))
-255 326 0
c (SATLiteral(255) -> SATLiteral(327))
-255 327 0
c (SATLiteral(255) -> SATLiteral(328))
-255 328 0
c (SATLiteral(255) -> SATLiteral(329))
-255 329 0
c (SATLiteral(255) -> SATLiteral(330))
-255 330 0
c (SATLiteral(255) -> SATLiteral(331))
-255 331 0
c (SATLiteral(255) -> SATLiteral(332))
-255 332 0
c (SATLiteral(255) -> SATLiteral(333))
-255 333 0
c (SATLiteral(260) -> SATLiteral(334))
-260 334 0
c (SATLiteral(260) -> SATLiteral(335))
-260 335 0
c (SATLiteral(260) -> SATLiteral(336))
-260 336 0
c (SATLiteral(260) -> SATLiteral(337))
-260 337 0
c (SATLiteral(260) -> SATLiteral(338))
-260 338 0
c (SATLiteral(260) -> SATLiteral(339))
-260 339 0
c (SATLiteral(260) -> SATLiteral(340))
-260 340 0
c (SATLiteral(260) -> SATLiteral(341))
-260 341 0
c (SATLiteral(260) -> SATLiteral(342))
-260 342 0
c ((shift(grid_00002_00002, -1) + shift(grid_00003_00002, -1) - aux48)<=0)
117 -343 0
118 -344 0
120 -346 0
122 -348 0
124 -350 0
126 -352 0
128 -354 0
130 -356 0
56 -343 0
56 117 -344 0
56 118 -346 0
56 120 -348 0
56 122 -350 0
56 124 -352 0
56 126 -354 0
56 128 -356 0
56 130 -358 0
57 -344 0
57 117 -346 0
57 118 -348 0
57 120 -350 0
57 122 -352 0
57 124 -354 0
57 126 -356 0
57 128 -358 0
57 130 -360 0
59 -346 0
59 117 -348 0
59 118 -350 0
59 120 -352 0
59 122 -354 0
59 124 -356 0
59 126 -358 0
59 128 -360 0
59 130 -362 0
61 -348 0
61 117 -350 0
61 118 -352 0
61 120 -354 0
61 122 -356 0
61 124 -358 0
61 126 -360 0
61 128 -362 0
61 130 -364 0
63 -350 0
63 117 -352 0
63 118 -354 0
63 120 -356 0
63 122 -358 0
63 124 -360 0
63 126 -362 0
63 128 -364 0
63 130 -366 0
65 -352 0
65 117 -354 0
65 118 -356 0
65 120 -358 0
65 122 -360 0
65 124 -362 0
65 126 -364 0
65 128 -366 0
65 130 -368 0
67 -354 0
67 117 -356 0
67 118 -358 0
67 120 -360 0
67 122 -362 0
67 124 -364 0
67 126 -366 0
67 128 -368 0
67 130 -370 0
69 -356 0
69 117 -358 0
69 118 -360 0
69 120 -362 0
69 122 -364 0
69 124 -366 0
69 126 -368 0
69 128 -370 0
69 130 -372 0
c (0<=(shift(grid_00002_00002, -1) + shift(grid_00003_00002, -1) - aux48))
-130 372 0
-128 370 0
-126 368 0
-124 366 0
-122 364 0
-120 362 0
-118 360 0
-117 358 0
-69 372 0
-69 -130 370 0
-69 -128 368 0
-69 -126 366 0
-69 -124 364 0
-69 -122 362 0
-69 -120 360 0
-69 -118 358 0
-69 -117 356 0
-67 370 0
-67 -130 368 0
-67 -128 366 0
-67 -126 364 0
-67 -124 362 0
-67 -122 360 0
-67 -120 358 0
-67 -118 356 0
-67 -117 354 0
-65 368 0
-65 -130 366 0
-65 -128 364 0
-65 -126 362 0
-65 -124 360 0
-65 -122 358 0
-65 -120 356 0
-65 -118 354 0
-65 -117 352 0
-63 366 0
-63 -130 364 0
-63 -128 362 0
-63 -126 360 0
-63 -124 358 0
-63 -122 356 0
-63 -120 354 0
-63 -118 352 0
-63 -117 350 0
-61 364 0
-61 -130 362 0
-61 -128 360 0
-61 -126 358 0
-61 -124 356 0
-61 -122 354 0
-61 -120 352 0
-61 -118 350 0
-61 -117 348 0
-59 362 0
-59 -130 360 0
-59 -128 358 0
-59 -126 356 0
-59 -124 354 0
-59 -122 352 0
-59 -120 350 0
-59 -118 348 0
-59 -117 346 0
-57 360 0
-57 -130 358 0
-57 -128 356 0
-57 -126 354 0
-57 -124 352 0
-57 -122 350 0
-57 -120 348 0
-57 -118 346 0
-57 -117 344 0
-56 358 0
-56 -130 356 0
-56 -128 354 0
-56 -126 352 0
-56 -124 350 0
-56 -122 348 0
-56 -120 346 0
-56 -118 344 0
-56 -117 343 0
c ((shift(grid_00002_00003, -1) + shift(grid_00003_00003, -1) - aux49)<=0)
132 -374 0
133 -375 0
135 -377 0
137 -379 0
139 -381 0
141 -383 0
143 -385 0
145 -387 0
71 -374 0
71 132 -375 0
71 133 -377 0
71 135 -379 0
71 137 -381 0
71 139 -383 0
71 141 -385 0
71 143 -387 0
71 145 -389 0
72 -375 0
72 132 -377 0
72 133 -379 0
72 135 -381 0
72 137 -383 0
72 139 -385 0
72 141 -387 0
72 143 -389 0
72 145 -391 0
74 -377 0
74 132 -379 0
74 133 -381 0
74 135 -383 0
74 137 -385 0
74 139 -387 0
74 141 -389 0
74 143 -391 0
74 145 -393 0
76 -379 0
76 132 -381 0
76 133 -383 0
76 135 -385 0
76 137 -387 0
76 139 -389 0
76 141 -391 0
76 143 -393 0
76 145 -395 0
78 -381 0
78 132 -383 0
78 133 -385 0
78 135 -387 0
78 137 -389 0
78 139 -391 0
78 141 -393 0
78 143 -395 0
78 145 -397 0
80 -383 0
80 132 -385 0
80 133 -387 0
80 135 -389 0
80 137 -391 0
80 139 -393 0
80 141 -395 0
80 143 -397 0
80 145 -399 0
82 -385 0
82 132 -387 0
82 133 -389 0
82 135 -391 0
82 137 -393 0
82 139 -395 0
82 141 -397 0
82 143 -399 0
82 145 -401 0
84 -387 0
84 132 -389 0
84 133 -391 0
84 135 -393 0
84 137 -395 0
84 139 -397 0
84 141 -399 0
84 143 -401 0
84 145 -403 0
c (0<=(shift(grid_00002_00003, -1) + shift(grid_00003_00003, -1) - aux49))
-145 403 0
-143 401 0
-141 399 0
-139 397 0
-137 395 0
-135 393 0
-133 391 0
-132 389 0
-84 403 0
-84 -145 401 0
-84 -143 399 0
-84 -141 397 0
-84 -139 395 0
-84 -137 393 0
-84 -135 391 0
-84 -133 389 0
-84 -132 387 0
-82 401 0
-82 -145 399 0
-82 -143 397 0
-82 -141 395 0
-82 -139 393 0
-82 -137 391 0
-82 -135 389 0
-82 -133 387 0
-82 -132 385 0
-80 399 0
-80 -145 397 0
-80 -143 395 0
-80 -141 393 0
-80 -139 391 0
-80 -137 389 0
-80 -135 387 0
-80 -133 385 0
-80 -132 383 0
-78 397 0
-78 -145 395 0
-78 -143 393 0
-78 -141 391 0
-78 -139 389 0
-78 -137 387 0
-78 -135 385 0
-78 -133 383 0
-78 -132 381 0
-76 395 0
-76 -145 393 0
-76 -143 391 0
-76 -141 389 0
-76 -139 387 0
-76 -137 385 0
-76 -135 383 0
-76 -133 381 0
-76 -132 379 0
-74 393 0
-74 -145 391 0
-74 -143 389 0
-74 -141 387 0
-74 -139 385 0
-74 -137 383 0
-74 -135 381 0
-74 -133 379 0
-74 -132 377 0
-72 391 0
-72 -145 389 0
-72 -143 387 0
-72 -141 385 0
-72 -139 383 0
-72 -137 381 0
-72 -135 379 0
-72 -133 377 0
-72 -132 375 0
-71 389 0
-71 -145 387 0
-71 -143 385 0
-71 -141 383 0
-71 -139 381 0
-71 -137 379 0
-71 -135 377 0
-71 -133 375 0
-71 -132 374 0
c ((shift(grid_00002_00001, -1) + shift(grid_00002_00004, -1) - aux50)<=0)
86 -405 0
87 -406 0
89 -408 0
91 -410 0
93 -412 0
95 -414 0
97 -416 0
99 -418 0
41 -405 0
41 86 -406 0
41 87 -408 0
41 89 -410 0
41 91 -412 0
41 93 -414 0
41 95 -416 0
41 97 -418 0
41 99 -420 0
42 -406 0
42 86 -408 0
42 87 -410 0
42 89 -412 0
42 91 -414 0
42 93 -416 0
42 95 -418 0
42 97 -420 0
42 99 -422 0
44 -408 0
44 86 -410 0
44 87 -412 0
44 89 -414 0
44 91 -416 0
44 93 -418 0
44 95 -420 0
44 97 -422 0
44 99 -424 0
46 -410 0
46 86 -412 0
46 87 -414 0
46 89 -416 0
46 91 -418 0
46 93 -420 0
46 95 -422 0
46 97 -424 0
46 99 -426 0
48 -412 0
48 86 -414 0
48 87 -416 0
48 89 -418 0
48 91 -420 0
48 93 -422 0
48 95 -424 0
48 97 -426 0
48 99 -428 0
50 -414 0
50 86 -416 0
50 87 -418 0
50 89 -420 0
50 91 -422 0
50 93 -424 0
50 95 -426 0
50 97 -428 0
50 99 -430 0
52 -416 0
52 86 -418 0
52 87 -420 0
52 89 -422 0
52 91 -424 0
52 93 -426 0
52 95 -428 0
52 97 -430 0
52 99 -432 0
54 -418 0
54 86 -420 0
54 87 -422 0
54 89 -424 0
54 91 -426 0
54 93 -428 0
54 95 -430 0
54 97 -432 0
54 99 -434 0
c (0<=(shift(grid_00002_00001, -1) + shift(grid_00002_00004, -1) - aux50))
-99 434 0
-97 432 0
-95 430 0
-93 428 0
-91 426 0
-89 424 0
-87 422 0
-86 420 0
-54 434 0
-54 -99 432 0
-54 -97 430 0
-54 -95 428 0
-54 -93 426 0
-54 -91 424 0
-54 -89 422 0
-54 -87 420 0
-54 -86 418 0
-52 432 0
-52 -99 430 0
-52 -97 428 0
-52 -95 426 0
-52 -93 424 0
-52 -91 422 0
-52 -89 420 0
-52 -87 418 0
-52 -86 416 0
-50 430 0
-50 -99 428 0
-50 -97 426 0
-50 -95 424 0
-50 -93 422 0
-50 -91 420 0
-50 -89 418 0
-50 -87 416 0
-50 -86 414 0
-48 428 0
-48 -99 426 0
-48 -97 424 0
-48 -95 422 0
-48 -93 420 0
-48 -91 418 0
-48 -89 416 0
-48 -87 414 0
-48 -86 412 0
-46 426 0
-46 -99 424 0
-46 -97 422 0
-46 -95 420 0
-46 -93 418 0
-46 -91 416 0
-46 -89 414 0
-46 -87 412 0
-46 -86 410 0
-44 424 0
-44 -99 422 0
-44 -97 420 0
-44 -95 418 0
-44 -93 416 0
-44 -91 414 0
-44 -89 412 0
-44 -87 410 0
-44 -86 408 0
-42 422 0
-42 -99 420 0
-42 -97 418 0
-42 -95 416 0
-42 -93 414 0
-42 -91 412 0
-42 -89 410 0
-42 -87 408 0
-42 -86 406 0
-41 420 0
-41 -99 418 0
-41 -97 416 0
-41 -95 414 0
-41 -93 412 0
-41 -91 410 0
-41 -89 408 0
-41 -87 406 0
-41 -86 405 0
c ((shift(grid_00003_00001, -1) + shift(grid_00003_00004, -1) - aux51)<=0)
147 -436 0
148 -437 0
150 -439 0
152 -441 0
154 -443 0
156 -445 0
158 -447 0
160 -449 0
102 -436 0
102 147 -437 0
102 148 -439 0
102 150 -441 0
102 152 -443 0
102 154 -445 0
102 156 -447 0
102 158 -449 0
102 160 -451 0
103 -437 0
103 147 -439 0
103 148 -441 0
103 150 -443 0
103 152 -445 0
103 154 -447 0
103 156 -449 0
103 158 -451 0
103 160 -453 0
105 -439 0
105 147 -441 0
105 148 -443 0
105 150 -445 0
105 152 -447 0
105 154 -449 0
105 156 -451 0
105 158 -453 0
105 160 -455 0
107 -441 0
107 147 -443 0
107 148 -445 0
107 150 -447 0
107 152 -449 0
107 154 -451 0
107 156 -453 0
107 158 -455 0
107 160 -457 0
109 -443 0
109 147 -445 0
109 148 -447 0
109 150 -449 0
109 152 -451 0
109 154 -453 0
109 156 -455 0
109 158 -457 0
109 160 -459 0
111 -445 0
111 147 -447 0
111 148 -449 0
111 150 -451 0
111 152 -453 0
111 154 -455 0
111 156 -457 0
111 158 -459 0
111 160 -461 0
113 -447 0
113 147 -449 0
113 148 -451 0
113 150 -453 0
113 152 -455 0
113 154 -457 0
113 156 -459 0
113 158 -461 0
113 160 -463 0
115 -449 0
115 147 -451 0
115 148 -453 0
115 150 -455 0
115 152 -457 0
115 154 -459 0
115 156 -461 0
115 158 -463 0
115 160 -465 0
c (0<=(shift(grid_00003_00001, -1) + shift(grid_00003_00004, -1) - aux51))
-160 465 0
-158 463 0
-156 461 0
-154 459 0
-152 457 0
-150 455 0
-148 453 0
-147 451 0
-115 465 0
-115 -160 463 0
-115 -158 461 0
-115 -156 459 0
-115 -154 457 0
-115 -152 455 0
-115 -150 453 0
-115 -148 451 0
-115 -147 449 0
-113 463 0
-113 -160 461 0
-113 -158 459 0
-113 -156 457 0
-113 -154 455 0
-113 -152 453 0
-113 -150 451 0
-113 -148 449 0
-113 -147 447 0
-111 461 0
-111 -160 459 0
-111 -158 457 0
-111 -156 455 0
-111 -154 453 0
-111 -152 451 0
-111 -150 449 0
-111 -148 447 0
-111 -147 445 0
-109 459 0
-109 -160 457 0
-109 -158 455 0
-109 -156 453 0
-109 -154 451 0
-109 -152 449 0
-109 -150 447 0
-109 -148 445 0
-109 -147 443 0
-107 457 0
-107 -160 455 0
-107 -158 453 0
-107 -156 451 0
-107 -154 449 0
-107 -152 447 0
-107 -150 445 0
-107 -148 443 0
-107 -147 441 0
-105 455 0
-105 -160 453 0
-105 -158 451 0
-105 -156 449 0
-105 -154 447 0
-105 -152 445 0
-105 -150 443 0
-105 -148 441 0
-105 -147 439 0
-103 453 0
-103 -160 451 0
-103 -158 449 0
-103 -156 447 0
-103 -154 445 0
-103 -152 443 0
-103 -150 441 0
-103 -148 439 0
-103 -147 437 0
-102 451 0
-102 -160 449 0
-102 -158 447 0
-102 -156 445 0
-102 -154 443 0
-102 -152 441 0
-102 -150 439 0
-102 -148 437 0
-102 -147 436 0
c ((SATLiteral(117) - aux52 + SATLiteral(56))<=0)
-56 -467 0
-117 -467 0
-117 -56 -468 0
c (0<=(SATLiteral(117) - aux52 + SATLiteral(56)))
56 468 0
117 468 0
117 56 467 0
c ((SATLiteral(119) - aux53 + SATLiteral(58))<=0)
-58 -470 0
-119 -470 0
-119 -58 -471 0
c (0<=(SATLiteral(119) - aux53 + SATLiteral(58)))
58 471 0
119 471 0
119 58 470 0
c ((SATLiteral(121) - aux54 + SATLiteral(60))<=0)
-60 -473 0
-121 -473 0
-121 -60 -474 0
c (0<=(SATLiteral(121) - aux54 + SATLiteral(60)))
60 474 0
121 474 0
121 60 473 0
c ((SATLiteral(123) - aux55 + SATLiteral(62))<=0)
-62 -476 0
-123 -476 0
-123 -62 -477 0
c (0<=(SATLiteral(123) - aux55 + SATLiteral(62)))
62 477 0
123 477 0
123 62 476 0
c ((SATLiteral(125) - aux56 + SATLiteral(64))<=0)
-64 -479 0
-125 -479 0
-125 -64 -480 0
c (0<=(SATLiteral(125) - aux56 + SATLiteral(64)))
64 480 0
125 480 0
125 64 479 0
c ((SATLiteral(127) - aux57 + SATLiteral(66))<=0)
-66 -482 0
-127 -482 0
-127 -66 -483 0
c (0<=(SATLiteral(127) - aux57 + SATLiteral(66)))
66 483 0
127 483 0
127 66 482 0
c ((SATLiteral(129) - aux58 + SATLiteral(68))<=0)
-68 -485 0
-129 -485 0
-129 -68 -486 0
c (0<=(SATLiteral(129) - aux58 + SATLiteral(68)))
68 486 0
129 486 0
129 68 485 0
c ((SATLiteral(131) - aux59 + SATLiteral(70))<=0)
-70 -488 0
-131 -488 0
-131 -70 -489 0
c (0<=(SATLiteral(131) - aux59 + SATLiteral(70)))
70 489 0
131 489 0
131 70 488 0
c ((SATLiteral(-130) - aux60 + SATLiteral(-69))<=0)
69 -491 0
130 -491 0
130 69 -492 0
c (0<=(SATLiteral(-130) - aux60 + SATLiteral(-69)))
-69 492 0
-130 492 0
-130 -69 491 0
c ((SATLiteral(132) - aux61 + SATLiteral(71))<=0)
-71 -494 0
-132 -494 0
-132 -71 -495 0
c (0<=(SATLiteral(132) - aux61 + SATLiteral(71)))
71 495 0
132 495 0
132 71 494 0
c ((SATLiteral(134) - aux62 + SATLiteral(73))<=0)
-73 -497 0
-134 -497 0
-134 -73 -498 0
c (0<=(SATLiteral(134) - aux62 + SATLiteral(73)))
73 498 0
134 498 0
134 73 497 0
c ((SATLiteral(136) - aux63 + SATLiteral(75))<=0)
-75 -500 0
-136 -500 0
-136 -75 -501 0
c (0<=(SATLiteral(136) - aux63 + SATLiteral(75)))
75 501 0
136 501 0
136 75 500 0
c ((SATLiteral(138) - aux64 + SATLiteral(77))<=0)
-77 -503 0
-138 -503 0
-138 -77 -504 0
c (0<=(SATLiteral(138) - aux64 + SATLiteral(77)))
77 504 0
138 504 0
138 77 503 0
c ((SATLiteral(140) - aux65 + SATLiteral(79))<=0)
-79 -506 0
-140 -506 0
-140 -79 -507 0
c (0<=(SATLiteral(140) - aux65 + SATLiteral(79)))
79 507 0
140 507 0
140 79 506 0
c ((SATLiteral(142) - aux66 + SATLiteral(81))<=0)
-81 -509 0
-142 -509 0
-142 -81 -510 0
c (0<=(SATLiteral(142) - aux66 + SATLiteral(81)))
81 510 0
142 510 0
142 81 509 0
c ((SATLiteral(144) - aux67 + SATLiteral(83))<=0)
-83 -512 0
-144 -512 0
-144 -83 -513 0
c (0<=(SATLiteral(144) - aux67 + SATLiteral(83)))
83 513 0
144 513 0
144 83 512 0
c ((SATLiteral(146) - aux68 + SATLiteral(85))<=0)
-85 -515 0
-146 -515 0
-146 -85 -516 0
c (0<=(SATLiteral(146) - aux68 + SATLiteral(85)))
85 516 0
146 516 0
146 85 515 0
c ((SATLiteral(-145) - aux69 + SATLiteral(-84))<=0)
84 -518 0
145 -518 0
145 84 -519 0
c (0<=(SATLiteral(-145) - aux69 + SATLiteral(-84)))
-84 519 0
-145 519 0
-145 -84 518 0
c (( - aux70 + SATLiteral(41) + SATLiteral(86))<=0)
-86 -521 0
-41 -521 0
-41 -86 -522 0
c (0<=( - aux70 + SATLiteral(41) + SATLiteral(86)))
86 522 0
41 522 0
41 86 521 0
c (( - aux71 + SATLiteral(43) + SATLiteral(88))<=0)
-88 -524 0
-43 -524 0
-43 -88 -525 0
c (0<=( - aux71 + SATLiteral(43) + SATLiteral(88)))
88 525 0
43 525 0
43 88 524 0
c (( - aux72 + SATLiteral(45) + SATLiteral(90))<=0)
-90 -527 0
-45 -527 0
-45 -90 -528 0
c (0<=( - aux72 + SATLiteral(45) + SATLiteral(90)))
90 528 0
45 528 0
45 90 527 0
c (( - aux73 + SATLiteral(47) + SATLiteral(92))<=0)
-92 -530 0
-47 -530 0
-47 -92 -531 0
c (0<=( - aux73 + SATLiteral(47) + SATLiteral(92)))
92 531 0
47 531 0
47 92 530 0
c (( - aux74 + SATLiteral(49) + SATLiteral(94))<=0)
-94 -533 0
-49 -533 0
-49 -94 -534 0
c (0<=( - aux74 + SATLiteral(49) + SATLiteral(94)))
94 534 0
49 534 0
49 94 533 0
c (( - aux75 + SATLiteral(51) + SATLiteral(96))<=0)
-96 -536 0
-51 -536 0
-51 -96 -537 0
c (0<=( - aux75 + SATLiteral(51) + SATLiteral(96)))
96 537 0
51 537 0
51 96 536 0
c (( - aux76 + SATLiteral(53) + SATLiteral(98))<=0)
-98 -539 0
-53 -539 0
-53 -98 -540 0
c (0<=( - aux76 + SATLiteral(53) + SATLiteral(98)))
98 540 0
53 540 0
53 98 539 0
c (( - aux77 + SATLiteral(55) + SATLiteral(100))<=0)
-100 -542 0
-55 -542 0
-55 -100 -543 0
c (0<=( - aux77 + SATLiteral(55) + SATLiteral(100)))
100 543 0
55 543 0
55 100 542 0
c (( - aux78 + SATLiteral(-54) + SATLiteral(-99))<=0)
99 -545 0
54 -545 0
54 99 -546 0
c (0<=( - aux78 + SATLiteral(-54) + SATLiteral(-99)))
-99 546 0
-54 546 0
-54 -99 545 0
c ((SATLiteral(102) + SATLiteral(147) - aux79)<=0)
-147 -548 0
-102 -548 0
-102 -147 -549 0
c (0<=(SATLiteral(102) + SATLiteral(147) - aux79))
147 549 0
102 549 0
102 147 548 0
c ((SATLiteral(104) + SATLiteral(149) - aux80)<=0)
-149 -551 0
-104 -551 0
-104 -149 -552 0
c (0<=(SATLiteral(104) + SATLiteral(149) - aux80))
149 552 0
104 552 0
104 149 551 0
c ((SATLiteral(106) + SATLiteral(151) - aux81)<=0)
-151 -554 0
-106 -554 0
-106 -151 -555 0
c (0<=(SATLiteral(106) + SATLiteral(151) - aux81))
151 555 0
106 555 0
106 151 554 0
c ((SATLiteral(108) + SATLiteral(153) - aux82)<=0)
-153 -557 0
-108 -557 0
-108 -153 -558 0
c (0<=(SATLiteral(108) + SATLiteral(153) - aux82))
153 558 0
108 558 0
108 153 557 0
c ((SATLiteral(110) + SATLiteral(155) - aux83)<=0)
-155 -560 0
-110 -560 0
-110 -155 -561 0
c (0<=(SATLiteral(110) + SATLiteral(155) - aux83))
155 561 0
110 561 0
110 155 560 0
c ((SATLiteral(112) + SATLiteral(157) - aux84)<=0)
-157 -563 0
-112 -563 0
-112 -157 -564 0
c (0<=(SATLiteral(112) + SATLiteral(157) - aux84))
157 564 0
112 564 0
112 157 563 0
c ((SATLiteral(114) + SATLiteral(159) - aux85)<=0)
-159 -566 0
-114 -566 0
-114 -159 -567 0
c (0<=(SATLiteral(114) + SATLiteral(159) - aux85))
159 567 0
114 567 0
114 159 566 0
c ((SATLiteral(116) + SATLiteral(161) - aux86)<=0)
-161 -569 0
-116 -569 0
-116 -161 -570 0
c (0<=(SATLiteral(116) + SATLiteral(161) - aux86))
161 570 0
116 570 0
116 161 569 0
c ((SATLiteral(-115) + SATLiteral(-160) - aux87)<=0)
160 -572 0
115 -572 0
115 160 -573 0
c (0<=(SATLiteral(-115) + SATLiteral(-160) - aux87))
-160 573 0
-115 573 0
-115 -160 572 0
