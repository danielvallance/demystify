p cnf 1199 7075                                                                                     

1 0
c Encoding variable: res_00000_00000 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00000_00000' order represents '0' with '2'
c Var 'res_00000_00000' direct represents '0' with '2'
c Var 'res_00000_00000' order represents '1' with '3'
-2 3 0
c Var 'res_00000_00000' direct represents '1' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'res_00000_00000' order represents '2' with '5'
-3 5 0
c Var 'res_00000_00000' direct represents '2' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'res_00000_00000' order represents '3' with '7'
-5 7 0
c Var 'res_00000_00000' direct represents '3' with '8'
5 -7 8 0
-8 7 0
-8 -5 0
c Var 'res_00000_00000' order represents '4' with '9'
-7 9 0
c Var 'res_00000_00000' direct represents '4' with '10'
7 -9 10 0
-10 9 0
-10 -7 0
c Var 'res_00000_00000' order represents '5' with '11'
-9 11 0
c Var 'res_00000_00000' direct represents '5' with '12'
9 -11 12 0
-12 11 0
-12 -9 0
c Var 'res_00000_00000' order represents '6' with '13'
-11 13 0
c Var 'res_00000_00000' direct represents '6' with '14'
11 -13 14 0
-14 13 0
-14 -11 0
c Var 'res_00000_00000' order represents '7' with '15'
-13 15 0
c Var 'res_00000_00000' direct represents '7' with '16'
13 -15 16 0
-16 15 0
-16 -13 0
c Var 'res_00000_00000' order represents '8' with '17'
-15 17 0
c Var 'res_00000_00000' direct represents '8' with '18'
15 -17 18 0
-18 17 0
-18 -15 0
c Var 'res_00000_00000' direct represents '9' with '-17'
2 4 6 8 10 12 14 16 18 -17 0
c Encoding variable: res_00000_00001 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00000_00001' order represents '0' with '19'
c Var 'res_00000_00001' direct represents '0' with '19'
c Var 'res_00000_00001' order represents '1' with '20'
-19 20 0
c Var 'res_00000_00001' direct represents '1' with '21'
19 -20 21 0
-21 20 0
-21 -19 0
c Var 'res_00000_00001' order represents '2' with '22'
-20 22 0
c Var 'res_00000_00001' direct represents '2' with '23'
20 -22 23 0
-23 22 0
-23 -20 0
c Var 'res_00000_00001' order represents '3' with '24'
-22 24 0
c Var 'res_00000_00001' direct represents '3' with '25'
22 -24 25 0
-25 24 0
-25 -22 0
c Var 'res_00000_00001' order represents '4' with '26'
-24 26 0
c Var 'res_00000_00001' direct represents '4' with '27'
24 -26 27 0
-27 26 0
-27 -24 0
c Var 'res_00000_00001' order represents '5' with '28'
-26 28 0
c Var 'res_00000_00001' direct represents '5' with '29'
26 -28 29 0
-29 28 0
-29 -26 0
c Var 'res_00000_00001' order represents '6' with '30'
-28 30 0
c Var 'res_00000_00001' direct represents '6' with '31'
28 -30 31 0
-31 30 0
-31 -28 0
c Var 'res_00000_00001' order represents '7' with '32'
-30 32 0
c Var 'res_00000_00001' direct represents '7' with '33'
30 -32 33 0
-33 32 0
-33 -30 0
c Var 'res_00000_00001' order represents '8' with '34'
-32 34 0
c Var 'res_00000_00001' direct represents '8' with '35'
32 -34 35 0
-35 34 0
-35 -32 0
c Var 'res_00000_00001' direct represents '9' with '-34'
19 21 23 25 27 29 31 33 35 -34 0
c Encoding variable: res_00000_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00000_00002' order represents '0' with '36'
c Var 'res_00000_00002' direct represents '0' with '36'
c Var 'res_00000_00002' order represents '1' with '37'
-36 37 0
c Var 'res_00000_00002' direct represents '1' with '38'
36 -37 38 0
-38 37 0
-38 -36 0
c Var 'res_00000_00002' order represents '2' with '39'
-37 39 0
c Var 'res_00000_00002' direct represents '2' with '40'
37 -39 40 0
-40 39 0
-40 -37 0
c Var 'res_00000_00002' order represents '3' with '41'
-39 41 0
c Var 'res_00000_00002' direct represents '3' with '42'
39 -41 42 0
-42 41 0
-42 -39 0
c Var 'res_00000_00002' order represents '4' with '43'
-41 43 0
c Var 'res_00000_00002' direct represents '4' with '44'
41 -43 44 0
-44 43 0
-44 -41 0
c Var 'res_00000_00002' order represents '5' with '45'
-43 45 0
c Var 'res_00000_00002' direct represents '5' with '46'
43 -45 46 0
-46 45 0
-46 -43 0
c Var 'res_00000_00002' order represents '6' with '47'
-45 47 0
c Var 'res_00000_00002' direct represents '6' with '48'
45 -47 48 0
-48 47 0
-48 -45 0
c Var 'res_00000_00002' order represents '7' with '49'
-47 49 0
c Var 'res_00000_00002' direct represents '7' with '50'
47 -49 50 0
-50 49 0
-50 -47 0
c Var 'res_00000_00002' order represents '8' with '51'
-49 51 0
c Var 'res_00000_00002' direct represents '8' with '52'
49 -51 52 0
-52 51 0
-52 -49 0
c Var 'res_00000_00002' direct represents '9' with '-51'
36 38 40 42 44 46 48 50 52 -51 0
c Encoding variable: res_00000_00003 with domain: int(-2) (representing constraint )
c Var 'res_00000_00003' direct represents '-2' with '53'
53 0
c Encoding variable: res_00000_00004 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00000_00004' order represents '0' with '54'
c Var 'res_00000_00004' direct represents '0' with '54'
c Var 'res_00000_00004' order represents '1' with '55'
-54 55 0
c Var 'res_00000_00004' direct represents '1' with '56'
54 -55 56 0
-56 55 0
-56 -54 0
c Var 'res_00000_00004' order represents '2' with '57'
-55 57 0
c Var 'res_00000_00004' direct represents '2' with '58'
55 -57 58 0
-58 57 0
-58 -55 0
c Var 'res_00000_00004' order represents '3' with '59'
-57 59 0
c Var 'res_00000_00004' direct represents '3' with '60'
57 -59 60 0
-60 59 0
-60 -57 0
c Var 'res_00000_00004' order represents '4' with '61'
-59 61 0
c Var 'res_00000_00004' direct represents '4' with '62'
59 -61 62 0
-62 61 0
-62 -59 0
c Var 'res_00000_00004' order represents '5' with '63'
-61 63 0
c Var 'res_00000_00004' direct represents '5' with '64'
61 -63 64 0
-64 63 0
-64 -61 0
c Var 'res_00000_00004' order represents '6' with '65'
-63 65 0
c Var 'res_00000_00004' direct represents '6' with '66'
63 -65 66 0
-66 65 0
-66 -63 0
c Var 'res_00000_00004' order represents '7' with '67'
-65 67 0
c Var 'res_00000_00004' direct represents '7' with '68'
65 -67 68 0
-68 67 0
-68 -65 0
c Var 'res_00000_00004' order represents '8' with '69'
-67 69 0
c Var 'res_00000_00004' direct represents '8' with '70'
67 -69 70 0
-70 69 0
-70 -67 0
c Var 'res_00000_00004' direct represents '9' with '-69'
54 56 58 60 62 64 66 68 70 -69 0
c Encoding variable: res_00000_00005 with domain: int(2) (representing constraint )
c Var 'res_00000_00005' direct represents '2' with '71'
71 0
c Encoding variable: res_00000_00006 with domain: int(0..9) (representing constraint )
c Direct encoding.
c Var 'res_00000_00006' direct represents '0' with '72'
c Var 'res_00000_00006' direct represents '1' with '73'
c Var 'res_00000_00006' direct represents '2' with '74'
c Var 'res_00000_00006' direct represents '3' with '75'
c Var 'res_00000_00006' direct represents '4' with '76'
c Var 'res_00000_00006' direct represents '5' with '77'
c Var 'res_00000_00006' direct represents '6' with '78'
c Var 'res_00000_00006' direct represents '7' with '79'
c Var 'res_00000_00006' direct represents '8' with '80'
c Var 'res_00000_00006' direct represents '9' with '81'
72 73 74 75 76 77 78 79 80 81 0
-72 82 0
-72 86 0
-73 83 0
-73 86 0
-74 84 0
-74 86 0
-75 85 0
-75 86 0
-76 82 0
-76 87 0
-77 83 0
-77 87 0
-78 84 0
-78 87 0
-79 85 0
-79 87 0
-80 82 0
-80 88 0
-81 83 0
-81 88 0
-82 -83 0
-82 -84 0
-82 -85 0
-83 -84 0
-83 -85 0
-84 -85 0
-86 -87 0
-86 -88 0
-87 -88 0
c Encoding variable: res_00001_00000 with domain: int(0..9) (representing constraint )
c Direct encoding.
c Var 'res_00001_00000' direct represents '0' with '89'
c Var 'res_00001_00000' direct represents '1' with '90'
c Var 'res_00001_00000' direct represents '2' with '91'
c Var 'res_00001_00000' direct represents '3' with '92'
c Var 'res_00001_00000' direct represents '4' with '93'
c Var 'res_00001_00000' direct represents '5' with '94'
c Var 'res_00001_00000' direct represents '6' with '95'
c Var 'res_00001_00000' direct represents '7' with '96'
c Var 'res_00001_00000' direct represents '8' with '97'
c Var 'res_00001_00000' direct represents '9' with '98'
89 90 91 92 93 94 95 96 97 98 0
-89 99 0
-89 103 0
-90 100 0
-90 103 0
-91 101 0
-91 103 0
-92 102 0
-92 103 0
-93 99 0
-93 104 0
-94 100 0
-94 104 0
-95 101 0
-95 104 0
-96 102 0
-96 104 0
-97 99 0
-97 105 0
-98 100 0
-98 105 0
-99 -100 0
-99 -101 0
-99 -102 0
-100 -101 0
-100 -102 0
-101 -102 0
-103 -104 0
-103 -105 0
-104 -105 0
c Encoding variable: res_00001_00001 with domain: int(-2) (representing constraint )
c Var 'res_00001_00001' direct represents '-2' with '106'
106 0
c Encoding variable: res_00001_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00001_00002' order represents '0' with '107'
c Var 'res_00001_00002' direct represents '0' with '107'
c Var 'res_00001_00002' order represents '1' with '108'
-107 108 0
c Var 'res_00001_00002' direct represents '1' with '109'
107 -108 109 0
-109 108 0
-109 -107 0
c Var 'res_00001_00002' order represents '2' with '110'
-108 110 0
c Var 'res_00001_00002' direct represents '2' with '111'
108 -110 111 0
-111 110 0
-111 -108 0
c Var 'res_00001_00002' order represents '3' with '112'
-110 112 0
c Var 'res_00001_00002' direct represents '3' with '113'
110 -112 113 0
-113 112 0
-113 -110 0
c Var 'res_00001_00002' order represents '4' with '114'
-112 114 0
c Var 'res_00001_00002' direct represents '4' with '115'
112 -114 115 0
-115 114 0
-115 -112 0
c Var 'res_00001_00002' order represents '5' with '116'
-114 116 0
c Var 'res_00001_00002' direct represents '5' with '117'
114 -116 117 0
-117 116 0
-117 -114 0
c Var 'res_00001_00002' order represents '6' with '118'
-116 118 0
c Var 'res_00001_00002' direct represents '6' with '119'
116 -118 119 0
-119 118 0
-119 -116 0
c Var 'res_00001_00002' order represents '7' with '120'
-118 120 0
c Var 'res_00001_00002' direct represents '7' with '121'
118 -120 121 0
-121 120 0
-121 -118 0
c Var 'res_00001_00002' order represents '8' with '122'
-120 122 0
c Var 'res_00001_00002' direct represents '8' with '123'
120 -122 123 0
-123 122 0
-123 -120 0
c Var 'res_00001_00002' direct represents '9' with '-122'
107 109 111 113 115 117 119 121 123 -122 0
c Encoding variable: res_00001_00003 with domain: int(6) (representing constraint )
c Var 'res_00001_00003' direct represents '6' with '124'
124 0
c Encoding variable: res_00001_00004 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00001_00004' order represents '0' with '125'
c Var 'res_00001_00004' direct represents '0' with '125'
c Var 'res_00001_00004' order represents '1' with '126'
-125 126 0
c Var 'res_00001_00004' direct represents '1' with '127'
125 -126 127 0
-127 126 0
-127 -125 0
c Var 'res_00001_00004' order represents '2' with '128'
-126 128 0
c Var 'res_00001_00004' direct represents '2' with '129'
126 -128 129 0
-129 128 0
-129 -126 0
c Var 'res_00001_00004' order represents '3' with '130'
-128 130 0
c Var 'res_00001_00004' direct represents '3' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'res_00001_00004' order represents '4' with '132'
-130 132 0
c Var 'res_00001_00004' direct represents '4' with '133'
130 -132 133 0
-133 132 0
-133 -130 0
c Var 'res_00001_00004' order represents '5' with '134'
-132 134 0
c Var 'res_00001_00004' direct represents '5' with '135'
132 -134 135 0
-135 134 0
-135 -132 0
c Var 'res_00001_00004' order represents '6' with '136'
-134 136 0
c Var 'res_00001_00004' direct represents '6' with '137'
134 -136 137 0
-137 136 0
-137 -134 0
c Var 'res_00001_00004' order represents '7' with '138'
-136 138 0
c Var 'res_00001_00004' direct represents '7' with '139'
136 -138 139 0
-139 138 0
-139 -136 0
c Var 'res_00001_00004' order represents '8' with '140'
-138 140 0
c Var 'res_00001_00004' direct represents '8' with '141'
138 -140 141 0
-141 140 0
-141 -138 0
c Var 'res_00001_00004' direct represents '9' with '-140'
125 127 129 131 133 135 137 139 141 -140 0
c Encoding variable: res_00001_00005 with domain: int(-2) (representing constraint )
c Var 'res_00001_00005' direct represents '-2' with '142'
142 0
c Encoding variable: res_00001_00006 with domain: int(0..9) (representing constraint )
c Direct encoding.
c Var 'res_00001_00006' direct represents '0' with '143'
c Var 'res_00001_00006' direct represents '1' with '144'
c Var 'res_00001_00006' direct represents '2' with '145'
c Var 'res_00001_00006' direct represents '3' with '146'
c Var 'res_00001_00006' direct represents '4' with '147'
c Var 'res_00001_00006' direct represents '5' with '148'
c Var 'res_00001_00006' direct represents '6' with '149'
c Var 'res_00001_00006' direct represents '7' with '150'
c Var 'res_00001_00006' direct represents '8' with '151'
c Var 'res_00001_00006' direct represents '9' with '152'
143 144 145 146 147 148 149 150 151 152 0
-143 153 0
-143 157 0
-144 154 0
-144 157 0
-145 155 0
-145 157 0
-146 156 0
-146 157 0
-147 153 0
-147 158 0
-148 154 0
-148 158 0
-149 155 0
-149 158 0
-150 156 0
-150 158 0
-151 153 0
-151 159 0
-152 154 0
-152 159 0
-153 -154 0
-153 -155 0
-153 -156 0
-154 -155 0
-154 -156 0
-155 -156 0
-157 -158 0
-157 -159 0
-158 -159 0
c Encoding variable: res_00002_00000 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00002_00000' order represents '0' with '160'
c Var 'res_00002_00000' direct represents '0' with '160'
c Var 'res_00002_00000' order represents '1' with '161'
-160 161 0
c Var 'res_00002_00000' direct represents '1' with '162'
160 -161 162 0
-162 161 0
-162 -160 0
c Var 'res_00002_00000' order represents '2' with '163'
-161 163 0
c Var 'res_00002_00000' direct represents '2' with '164'
161 -163 164 0
-164 163 0
-164 -161 0
c Var 'res_00002_00000' order represents '3' with '165'
-163 165 0
c Var 'res_00002_00000' direct represents '3' with '166'
163 -165 166 0
-166 165 0
-166 -163 0
c Var 'res_00002_00000' order represents '4' with '167'
-165 167 0
c Var 'res_00002_00000' direct represents '4' with '168'
165 -167 168 0
-168 167 0
-168 -165 0
c Var 'res_00002_00000' order represents '5' with '169'
-167 169 0
c Var 'res_00002_00000' direct represents '5' with '170'
167 -169 170 0
-170 169 0
-170 -167 0
c Var 'res_00002_00000' order represents '6' with '171'
-169 171 0
c Var 'res_00002_00000' direct represents '6' with '172'
169 -171 172 0
-172 171 0
-172 -169 0
c Var 'res_00002_00000' order represents '7' with '173'
-171 173 0
c Var 'res_00002_00000' direct represents '7' with '174'
171 -173 174 0
-174 173 0
-174 -171 0
c Var 'res_00002_00000' order represents '8' with '175'
-173 175 0
c Var 'res_00002_00000' direct represents '8' with '176'
173 -175 176 0
-176 175 0
-176 -173 0
c Var 'res_00002_00000' direct represents '9' with '-175'
160 162 164 166 168 170 172 174 176 -175 0
c Encoding variable: res_00002_00001 with domain: int(-2) (representing constraint )
c Var 'res_00002_00001' direct represents '-2' with '177'
177 0
c Encoding variable: res_00002_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00002_00002' order represents '0' with '178'
c Var 'res_00002_00002' direct represents '0' with '178'
c Var 'res_00002_00002' order represents '1' with '179'
-178 179 0
c Var 'res_00002_00002' direct represents '1' with '180'
178 -179 180 0
-180 179 0
-180 -178 0
c Var 'res_00002_00002' order represents '2' with '181'
-179 181 0
c Var 'res_00002_00002' direct represents '2' with '182'
179 -181 182 0
-182 181 0
-182 -179 0
c Var 'res_00002_00002' order represents '3' with '183'
-181 183 0
c Var 'res_00002_00002' direct represents '3' with '184'
181 -183 184 0
-184 183 0
-184 -181 0
c Var 'res_00002_00002' order represents '4' with '185'
-183 185 0
c Var 'res_00002_00002' direct represents '4' with '186'
183 -185 186 0
-186 185 0
-186 -183 0
c Var 'res_00002_00002' order represents '5' with '187'
-185 187 0
c Var 'res_00002_00002' direct represents '5' with '188'
185 -187 188 0
-188 187 0
-188 -185 0
c Var 'res_00002_00002' order represents '6' with '189'
-187 189 0
c Var 'res_00002_00002' direct represents '6' with '190'
187 -189 190 0
-190 189 0
-190 -187 0
c Var 'res_00002_00002' order represents '7' with '191'
-189 191 0
c Var 'res_00002_00002' direct represents '7' with '192'
189 -191 192 0
-192 191 0
-192 -189 0
c Var 'res_00002_00002' order represents '8' with '193'
-191 193 0
c Var 'res_00002_00002' direct represents '8' with '194'
191 -193 194 0
-194 193 0
-194 -191 0
c Var 'res_00002_00002' direct represents '9' with '-193'
178 180 182 184 186 188 190 192 194 -193 0
c Encoding variable: res_00002_00003 with domain: int(-2) (representing constraint )
c Var 'res_00002_00003' direct represents '-2' with '195'
195 0
c Encoding variable: res_00002_00004 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00002_00004' order represents '0' with '196'
c Var 'res_00002_00004' direct represents '0' with '196'
c Var 'res_00002_00004' order represents '1' with '197'
-196 197 0
c Var 'res_00002_00004' direct represents '1' with '198'
196 -197 198 0
-198 197 0
-198 -196 0
c Var 'res_00002_00004' order represents '2' with '199'
-197 199 0
c Var 'res_00002_00004' direct represents '2' with '200'
197 -199 200 0
-200 199 0
-200 -197 0
c Var 'res_00002_00004' order represents '3' with '201'
-199 201 0
c Var 'res_00002_00004' direct represents '3' with '202'
199 -201 202 0
-202 201 0
-202 -199 0
c Var 'res_00002_00004' order represents '4' with '203'
-201 203 0
c Var 'res_00002_00004' direct represents '4' with '204'
201 -203 204 0
-204 203 0
-204 -201 0
c Var 'res_00002_00004' order represents '5' with '205'
-203 205 0
c Var 'res_00002_00004' direct represents '5' with '206'
203 -205 206 0
-206 205 0
-206 -203 0
c Var 'res_00002_00004' order represents '6' with '207'
-205 207 0
c Var 'res_00002_00004' direct represents '6' with '208'
205 -207 208 0
-208 207 0
-208 -205 0
c Var 'res_00002_00004' order represents '7' with '209'
-207 209 0
c Var 'res_00002_00004' direct represents '7' with '210'
207 -209 210 0
-210 209 0
-210 -207 0
c Var 'res_00002_00004' order represents '8' with '211'
-209 211 0
c Var 'res_00002_00004' direct represents '8' with '212'
209 -211 212 0
-212 211 0
-212 -209 0
c Var 'res_00002_00004' direct represents '9' with '-211'
196 198 200 202 204 206 208 210 212 -211 0
c Encoding variable: res_00002_00005 with domain: int(-2) (representing constraint )
c Var 'res_00002_00005' direct represents '-2' with '213'
213 0
c Encoding variable: res_00002_00006 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00002_00006' order represents '0' with '214'
c Var 'res_00002_00006' direct represents '0' with '214'
c Var 'res_00002_00006' order represents '1' with '215'
-214 215 0
c Var 'res_00002_00006' direct represents '1' with '216'
214 -215 216 0
-216 215 0
-216 -214 0
c Var 'res_00002_00006' order represents '2' with '217'
-215 217 0
c Var 'res_00002_00006' direct represents '2' with '218'
215 -217 218 0
-218 217 0
-218 -215 0
c Var 'res_00002_00006' order represents '3' with '219'
-217 219 0
c Var 'res_00002_00006' direct represents '3' with '220'
217 -219 220 0
-220 219 0
-220 -217 0
c Var 'res_00002_00006' order represents '4' with '221'
-219 221 0
c Var 'res_00002_00006' direct represents '4' with '222'
219 -221 222 0
-222 221 0
-222 -219 0
c Var 'res_00002_00006' order represents '5' with '223'
-221 223 0
c Var 'res_00002_00006' direct represents '5' with '224'
221 -223 224 0
-224 223 0
-224 -221 0
c Var 'res_00002_00006' order represents '6' with '225'
-223 225 0
c Var 'res_00002_00006' direct represents '6' with '226'
223 -225 226 0
-226 225 0
-226 -223 0
c Var 'res_00002_00006' order represents '7' with '227'
-225 227 0
c Var 'res_00002_00006' direct represents '7' with '228'
225 -227 228 0
-228 227 0
-228 -225 0
c Var 'res_00002_00006' order represents '8' with '229'
-227 229 0
c Var 'res_00002_00006' direct represents '8' with '230'
227 -229 230 0
-230 229 0
-230 -227 0
c Var 'res_00002_00006' direct represents '9' with '-229'
214 216 218 220 222 224 226 228 230 -229 0
c Encoding variable: res_00003_00000 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00003_00000' order represents '0' with '231'
c Var 'res_00003_00000' direct represents '0' with '231'
c Var 'res_00003_00000' order represents '1' with '232'
-231 232 0
c Var 'res_00003_00000' direct represents '1' with '233'
231 -232 233 0
-233 232 0
-233 -231 0
c Var 'res_00003_00000' order represents '2' with '234'
-232 234 0
c Var 'res_00003_00000' direct represents '2' with '235'
232 -234 235 0
-235 234 0
-235 -232 0
c Var 'res_00003_00000' order represents '3' with '236'
-234 236 0
c Var 'res_00003_00000' direct represents '3' with '237'
234 -236 237 0
-237 236 0
-237 -234 0
c Var 'res_00003_00000' order represents '4' with '238'
-236 238 0
c Var 'res_00003_00000' direct represents '4' with '239'
236 -238 239 0
-239 238 0
-239 -236 0
c Var 'res_00003_00000' order represents '5' with '240'
-238 240 0
c Var 'res_00003_00000' direct represents '5' with '241'
238 -240 241 0
-241 240 0
-241 -238 0
c Var 'res_00003_00000' order represents '6' with '242'
-240 242 0
c Var 'res_00003_00000' direct represents '6' with '243'
240 -242 243 0
-243 242 0
-243 -240 0
c Var 'res_00003_00000' order represents '7' with '244'
-242 244 0
c Var 'res_00003_00000' direct represents '7' with '245'
242 -244 245 0
-245 244 0
-245 -242 0
c Var 'res_00003_00000' order represents '8' with '246'
-244 246 0
c Var 'res_00003_00000' direct represents '8' with '247'
244 -246 247 0
-247 246 0
-247 -244 0
c Var 'res_00003_00000' direct represents '9' with '-246'
231 233 235 237 239 241 243 245 247 -246 0
c Encoding variable: res_00003_00001 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00003_00001' order represents '0' with '248'
c Var 'res_00003_00001' direct represents '0' with '248'
c Var 'res_00003_00001' order represents '1' with '249'
-248 249 0
c Var 'res_00003_00001' direct represents '1' with '250'
248 -249 250 0
-250 249 0
-250 -248 0
c Var 'res_00003_00001' order represents '2' with '251'
-249 251 0
c Var 'res_00003_00001' direct represents '2' with '252'
249 -251 252 0
-252 251 0
-252 -249 0
c Var 'res_00003_00001' order represents '3' with '253'
-251 253 0
c Var 'res_00003_00001' direct represents '3' with '254'
251 -253 254 0
-254 253 0
-254 -251 0
c Var 'res_00003_00001' order represents '4' with '255'
-253 255 0
c Var 'res_00003_00001' direct represents '4' with '256'
253 -255 256 0
-256 255 0
-256 -253 0
c Var 'res_00003_00001' order represents '5' with '257'
-255 257 0
c Var 'res_00003_00001' direct represents '5' with '258'
255 -257 258 0
-258 257 0
-258 -255 0
c Var 'res_00003_00001' order represents '6' with '259'
-257 259 0
c Var 'res_00003_00001' direct represents '6' with '260'
257 -259 260 0
-260 259 0
-260 -257 0
c Var 'res_00003_00001' order represents '7' with '261'
-259 261 0
c Var 'res_00003_00001' direct represents '7' with '262'
259 -261 262 0
-262 261 0
-262 -259 0
c Var 'res_00003_00001' order represents '8' with '263'
-261 263 0
c Var 'res_00003_00001' direct represents '8' with '264'
261 -263 264 0
-264 263 0
-264 -261 0
c Var 'res_00003_00001' direct represents '9' with '-263'
248 250 252 254 256 258 260 262 264 -263 0
c Encoding variable: res_00003_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00003_00002' order represents '0' with '265'
c Var 'res_00003_00002' direct represents '0' with '265'
c Var 'res_00003_00002' order represents '1' with '266'
-265 266 0
c Var 'res_00003_00002' direct represents '1' with '267'
265 -266 267 0
-267 266 0
-267 -265 0
c Var 'res_00003_00002' order represents '2' with '268'
-266 268 0
c Var 'res_00003_00002' direct represents '2' with '269'
266 -268 269 0
-269 268 0
-269 -266 0
c Var 'res_00003_00002' order represents '3' with '270'
-268 270 0
c Var 'res_00003_00002' direct represents '3' with '271'
268 -270 271 0
-271 270 0
-271 -268 0
c Var 'res_00003_00002' order represents '4' with '272'
-270 272 0
c Var 'res_00003_00002' direct represents '4' with '273'
270 -272 273 0
-273 272 0
-273 -270 0
c Var 'res_00003_00002' order represents '5' with '274'
-272 274 0
c Var 'res_00003_00002' direct represents '5' with '275'
272 -274 275 0
-275 274 0
-275 -272 0
c Var 'res_00003_00002' order represents '6' with '276'
-274 276 0
c Var 'res_00003_00002' direct represents '6' with '277'
274 -276 277 0
-277 276 0
-277 -274 0
c Var 'res_00003_00002' order represents '7' with '278'
-276 278 0
c Var 'res_00003_00002' direct represents '7' with '279'
276 -278 279 0
-279 278 0
-279 -276 0
c Var 'res_00003_00002' order represents '8' with '280'
-278 280 0
c Var 'res_00003_00002' direct represents '8' with '281'
278 -280 281 0
-281 280 0
-281 -278 0
c Var 'res_00003_00002' direct represents '9' with '-280'
265 267 269 271 273 275 277 279 281 -280 0
c Encoding variable: res_00003_00003 with domain: int(-2) (representing constraint )
c Var 'res_00003_00003' direct represents '-2' with '282'
282 0
c Encoding variable: res_00003_00004 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00003_00004' order represents '0' with '283'
c Var 'res_00003_00004' direct represents '0' with '283'
c Var 'res_00003_00004' order represents '1' with '284'
-283 284 0
c Var 'res_00003_00004' direct represents '1' with '285'
283 -284 285 0
-285 284 0
-285 -283 0
c Var 'res_00003_00004' order represents '2' with '286'
-284 286 0
c Var 'res_00003_00004' direct represents '2' with '287'
284 -286 287 0
-287 286 0
-287 -284 0
c Var 'res_00003_00004' order represents '3' with '288'
-286 288 0
c Var 'res_00003_00004' direct represents '3' with '289'
286 -288 289 0
-289 288 0
-289 -286 0
c Var 'res_00003_00004' order represents '4' with '290'
-288 290 0
c Var 'res_00003_00004' direct represents '4' with '291'
288 -290 291 0
-291 290 0
-291 -288 0
c Var 'res_00003_00004' order represents '5' with '292'
-290 292 0
c Var 'res_00003_00004' direct represents '5' with '293'
290 -292 293 0
-293 292 0
-293 -290 0
c Var 'res_00003_00004' order represents '6' with '294'
-292 294 0
c Var 'res_00003_00004' direct represents '6' with '295'
292 -294 295 0
-295 294 0
-295 -292 0
c Var 'res_00003_00004' order represents '7' with '296'
-294 296 0
c Var 'res_00003_00004' direct represents '7' with '297'
294 -296 297 0
-297 296 0
-297 -294 0
c Var 'res_00003_00004' order represents '8' with '298'
-296 298 0
c Var 'res_00003_00004' direct represents '8' with '299'
296 -298 299 0
-299 298 0
-299 -296 0
c Var 'res_00003_00004' direct represents '9' with '-298'
283 285 287 289 291 293 295 297 299 -298 0
c Encoding variable: res_00003_00005 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00003_00005' order represents '0' with '300'
c Var 'res_00003_00005' direct represents '0' with '300'
c Var 'res_00003_00005' order represents '1' with '301'
-300 301 0
c Var 'res_00003_00005' direct represents '1' with '302'
300 -301 302 0
-302 301 0
-302 -300 0
c Var 'res_00003_00005' order represents '2' with '303'
-301 303 0
c Var 'res_00003_00005' direct represents '2' with '304'
301 -303 304 0
-304 303 0
-304 -301 0
c Var 'res_00003_00005' order represents '3' with '305'
-303 305 0
c Var 'res_00003_00005' direct represents '3' with '306'
303 -305 306 0
-306 305 0
-306 -303 0
c Var 'res_00003_00005' order represents '4' with '307'
-305 307 0
c Var 'res_00003_00005' direct represents '4' with '308'
305 -307 308 0
-308 307 0
-308 -305 0
c Var 'res_00003_00005' order represents '5' with '309'
-307 309 0
c Var 'res_00003_00005' direct represents '5' with '310'
307 -309 310 0
-310 309 0
-310 -307 0
c Var 'res_00003_00005' order represents '6' with '311'
-309 311 0
c Var 'res_00003_00005' direct represents '6' with '312'
309 -311 312 0
-312 311 0
-312 -309 0
c Var 'res_00003_00005' order represents '7' with '313'
-311 313 0
c Var 'res_00003_00005' direct represents '7' with '314'
311 -313 314 0
-314 313 0
-314 -311 0
c Var 'res_00003_00005' order represents '8' with '315'
-313 315 0
c Var 'res_00003_00005' direct represents '8' with '316'
313 -315 316 0
-316 315 0
-316 -313 0
c Var 'res_00003_00005' direct represents '9' with '-315'
300 302 304 306 308 310 312 314 316 -315 0
c Encoding variable: res_00003_00006 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00003_00006' order represents '0' with '317'
c Var 'res_00003_00006' direct represents '0' with '317'
c Var 'res_00003_00006' order represents '1' with '318'
-317 318 0
c Var 'res_00003_00006' direct represents '1' with '319'
317 -318 319 0
-319 318 0
-319 -317 0
c Var 'res_00003_00006' order represents '2' with '320'
-318 320 0
c Var 'res_00003_00006' direct represents '2' with '321'
318 -320 321 0
-321 320 0
-321 -318 0
c Var 'res_00003_00006' order represents '3' with '322'
-320 322 0
c Var 'res_00003_00006' direct represents '3' with '323'
320 -322 323 0
-323 322 0
-323 -320 0
c Var 'res_00003_00006' order represents '4' with '324'
-322 324 0
c Var 'res_00003_00006' direct represents '4' with '325'
322 -324 325 0
-325 324 0
-325 -322 0
c Var 'res_00003_00006' order represents '5' with '326'
-324 326 0
c Var 'res_00003_00006' direct represents '5' with '327'
324 -326 327 0
-327 326 0
-327 -324 0
c Var 'res_00003_00006' order represents '6' with '328'
-326 328 0
c Var 'res_00003_00006' direct represents '6' with '329'
326 -328 329 0
-329 328 0
-329 -326 0
c Var 'res_00003_00006' order represents '7' with '330'
-328 330 0
c Var 'res_00003_00006' direct represents '7' with '331'
328 -330 331 0
-331 330 0
-331 -328 0
c Var 'res_00003_00006' order represents '8' with '332'
-330 332 0
c Var 'res_00003_00006' direct represents '8' with '333'
330 -332 333 0
-333 332 0
-333 -330 0
c Var 'res_00003_00006' direct represents '9' with '-332'
317 319 321 323 325 327 329 331 333 -332 0
c Encoding variable: res_00004_00000 with domain: int(-2) (representing constraint )
c Var 'res_00004_00000' direct represents '-2' with '334'
334 0
c Encoding variable: res_00004_00001 with domain: int(8) (representing constraint )
c Var 'res_00004_00001' direct represents '8' with '335'
335 0
c Encoding variable: res_00004_00002 with domain: int(-2) (representing constraint )
c Var 'res_00004_00002' direct represents '-2' with '336'
336 0
c Encoding variable: res_00004_00003 with domain: int(-2) (representing constraint )
c Var 'res_00004_00003' direct represents '-2' with '337'
337 0
c Encoding variable: res_00004_00004 with domain: int(-2) (representing constraint )
c Var 'res_00004_00004' direct represents '-2' with '338'
338 0
c Encoding variable: res_00004_00005 with domain: int(7) (representing constraint )
c Var 'res_00004_00005' direct represents '7' with '339'
339 0
c Encoding variable: res_00004_00006 with domain: int(-2) (representing constraint )
c Var 'res_00004_00006' direct represents '-2' with '340'
340 0
c Encoding variable: res_00005_00000 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00005_00000' order represents '0' with '341'
c Var 'res_00005_00000' direct represents '0' with '341'
c Var 'res_00005_00000' order represents '1' with '342'
-341 342 0
c Var 'res_00005_00000' direct represents '1' with '343'
341 -342 343 0
-343 342 0
-343 -341 0
c Var 'res_00005_00000' order represents '2' with '344'
-342 344 0
c Var 'res_00005_00000' direct represents '2' with '345'
342 -344 345 0
-345 344 0
-345 -342 0
c Var 'res_00005_00000' order represents '3' with '346'
-344 346 0
c Var 'res_00005_00000' direct represents '3' with '347'
344 -346 347 0
-347 346 0
-347 -344 0
c Var 'res_00005_00000' order represents '4' with '348'
-346 348 0
c Var 'res_00005_00000' direct represents '4' with '349'
346 -348 349 0
-349 348 0
-349 -346 0
c Var 'res_00005_00000' order represents '5' with '350'
-348 350 0
c Var 'res_00005_00000' direct represents '5' with '351'
348 -350 351 0
-351 350 0
-351 -348 0
c Var 'res_00005_00000' order represents '6' with '352'
-350 352 0
c Var 'res_00005_00000' direct represents '6' with '353'
350 -352 353 0
-353 352 0
-353 -350 0
c Var 'res_00005_00000' order represents '7' with '354'
-352 354 0
c Var 'res_00005_00000' direct represents '7' with '355'
352 -354 355 0
-355 354 0
-355 -352 0
c Var 'res_00005_00000' order represents '8' with '356'
-354 356 0
c Var 'res_00005_00000' direct represents '8' with '357'
354 -356 357 0
-357 356 0
-357 -354 0
c Var 'res_00005_00000' direct represents '9' with '-356'
341 343 345 347 349 351 353 355 357 -356 0
c Encoding variable: res_00005_00001 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00005_00001' order represents '0' with '358'
c Var 'res_00005_00001' direct represents '0' with '358'
c Var 'res_00005_00001' order represents '1' with '359'
-358 359 0
c Var 'res_00005_00001' direct represents '1' with '360'
358 -359 360 0
-360 359 0
-360 -358 0
c Var 'res_00005_00001' order represents '2' with '361'
-359 361 0
c Var 'res_00005_00001' direct represents '2' with '362'
359 -361 362 0
-362 361 0
-362 -359 0
c Var 'res_00005_00001' order represents '3' with '363'
-361 363 0
c Var 'res_00005_00001' direct represents '3' with '364'
361 -363 364 0
-364 363 0
-364 -361 0
c Var 'res_00005_00001' order represents '4' with '365'
-363 365 0
c Var 'res_00005_00001' direct represents '4' with '366'
363 -365 366 0
-366 365 0
-366 -363 0
c Var 'res_00005_00001' order represents '5' with '367'
-365 367 0
c Var 'res_00005_00001' direct represents '5' with '368'
365 -367 368 0
-368 367 0
-368 -365 0
c Var 'res_00005_00001' order represents '6' with '369'
-367 369 0
c Var 'res_00005_00001' direct represents '6' with '370'
367 -369 370 0
-370 369 0
-370 -367 0
c Var 'res_00005_00001' order represents '7' with '371'
-369 371 0
c Var 'res_00005_00001' direct represents '7' with '372'
369 -371 372 0
-372 371 0
-372 -369 0
c Var 'res_00005_00001' order represents '8' with '373'
-371 373 0
c Var 'res_00005_00001' direct represents '8' with '374'
371 -373 374 0
-374 373 0
-374 -371 0
c Var 'res_00005_00001' direct represents '9' with '-373'
358 360 362 364 366 368 370 372 374 -373 0
c Encoding variable: res_00005_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00005_00002' order represents '0' with '375'
c Var 'res_00005_00002' direct represents '0' with '375'
c Var 'res_00005_00002' order represents '1' with '376'
-375 376 0
c Var 'res_00005_00002' direct represents '1' with '377'
375 -376 377 0
-377 376 0
-377 -375 0
c Var 'res_00005_00002' order represents '2' with '378'
-376 378 0
c Var 'res_00005_00002' direct represents '2' with '379'
376 -378 379 0
-379 378 0
-379 -376 0
c Var 'res_00005_00002' order represents '3' with '380'
-378 380 0
c Var 'res_00005_00002' direct represents '3' with '381'
378 -380 381 0
-381 380 0
-381 -378 0
c Var 'res_00005_00002' order represents '4' with '382'
-380 382 0
c Var 'res_00005_00002' direct represents '4' with '383'
380 -382 383 0
-383 382 0
-383 -380 0
c Var 'res_00005_00002' order represents '5' with '384'
-382 384 0
c Var 'res_00005_00002' direct represents '5' with '385'
382 -384 385 0
-385 384 0
-385 -382 0
c Var 'res_00005_00002' order represents '6' with '386'
-384 386 0
c Var 'res_00005_00002' direct represents '6' with '387'
384 -386 387 0
-387 386 0
-387 -384 0
c Var 'res_00005_00002' order represents '7' with '388'
-386 388 0
c Var 'res_00005_00002' direct represents '7' with '389'
386 -388 389 0
-389 388 0
-389 -386 0
c Var 'res_00005_00002' order represents '8' with '390'
-388 390 0
c Var 'res_00005_00002' direct represents '8' with '391'
388 -390 391 0
-391 390 0
-391 -388 0
c Var 'res_00005_00002' direct represents '9' with '-390'
375 377 379 381 383 385 387 389 391 -390 0
c Encoding variable: res_00005_00003 with domain: int(-2) (representing constraint )
c Var 'res_00005_00003' direct represents '-2' with '392'
392 0
c Encoding variable: res_00005_00004 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00005_00004' order represents '0' with '393'
c Var 'res_00005_00004' direct represents '0' with '393'
c Var 'res_00005_00004' order represents '1' with '394'
-393 394 0
c Var 'res_00005_00004' direct represents '1' with '395'
393 -394 395 0
-395 394 0
-395 -393 0
c Var 'res_00005_00004' order represents '2' with '396'
-394 396 0
c Var 'res_00005_00004' direct represents '2' with '397'
394 -396 397 0
-397 396 0
-397 -394 0
c Var 'res_00005_00004' order represents '3' with '398'
-396 398 0
c Var 'res_00005_00004' direct represents '3' with '399'
396 -398 399 0
-399 398 0
-399 -396 0
c Var 'res_00005_00004' order represents '4' with '400'
-398 400 0
c Var 'res_00005_00004' direct represents '4' with '401'
398 -400 401 0
-401 400 0
-401 -398 0
c Var 'res_00005_00004' order represents '5' with '402'
-400 402 0
c Var 'res_00005_00004' direct represents '5' with '403'
400 -402 403 0
-403 402 0
-403 -400 0
c Var 'res_00005_00004' order represents '6' with '404'
-402 404 0
c Var 'res_00005_00004' direct represents '6' with '405'
402 -404 405 0
-405 404 0
-405 -402 0
c Var 'res_00005_00004' order represents '7' with '406'
-404 406 0
c Var 'res_00005_00004' direct represents '7' with '407'
404 -406 407 0
-407 406 0
-407 -404 0
c Var 'res_00005_00004' order represents '8' with '408'
-406 408 0
c Var 'res_00005_00004' direct represents '8' with '409'
406 -408 409 0
-409 408 0
-409 -406 0
c Var 'res_00005_00004' direct represents '9' with '-408'
393 395 397 399 401 403 405 407 409 -408 0
c Encoding variable: res_00005_00005 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00005_00005' order represents '0' with '410'
c Var 'res_00005_00005' direct represents '0' with '410'
c Var 'res_00005_00005' order represents '1' with '411'
-410 411 0
c Var 'res_00005_00005' direct represents '1' with '412'
410 -411 412 0
-412 411 0
-412 -410 0
c Var 'res_00005_00005' order represents '2' with '413'
-411 413 0
c Var 'res_00005_00005' direct represents '2' with '414'
411 -413 414 0
-414 413 0
-414 -411 0
c Var 'res_00005_00005' order represents '3' with '415'
-413 415 0
c Var 'res_00005_00005' direct represents '3' with '416'
413 -415 416 0
-416 415 0
-416 -413 0
c Var 'res_00005_00005' order represents '4' with '417'
-415 417 0
c Var 'res_00005_00005' direct represents '4' with '418'
415 -417 418 0
-418 417 0
-418 -415 0
c Var 'res_00005_00005' order represents '5' with '419'
-417 419 0
c Var 'res_00005_00005' direct represents '5' with '420'
417 -419 420 0
-420 419 0
-420 -417 0
c Var 'res_00005_00005' order represents '6' with '421'
-419 421 0
c Var 'res_00005_00005' direct represents '6' with '422'
419 -421 422 0
-422 421 0
-422 -419 0
c Var 'res_00005_00005' order represents '7' with '423'
-421 423 0
c Var 'res_00005_00005' direct represents '7' with '424'
421 -423 424 0
-424 423 0
-424 -421 0
c Var 'res_00005_00005' order represents '8' with '425'
-423 425 0
c Var 'res_00005_00005' direct represents '8' with '426'
423 -425 426 0
-426 425 0
-426 -423 0
c Var 'res_00005_00005' direct represents '9' with '-425'
410 412 414 416 418 420 422 424 426 -425 0
c Encoding variable: res_00005_00006 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00005_00006' order represents '0' with '427'
c Var 'res_00005_00006' direct represents '0' with '427'
c Var 'res_00005_00006' order represents '1' with '428'
-427 428 0
c Var 'res_00005_00006' direct represents '1' with '429'
427 -428 429 0
-429 428 0
-429 -427 0
c Var 'res_00005_00006' order represents '2' with '430'
-428 430 0
c Var 'res_00005_00006' direct represents '2' with '431'
428 -430 431 0
-431 430 0
-431 -428 0
c Var 'res_00005_00006' order represents '3' with '432'
-430 432 0
c Var 'res_00005_00006' direct represents '3' with '433'
430 -432 433 0
-433 432 0
-433 -430 0
c Var 'res_00005_00006' order represents '4' with '434'
-432 434 0
c Var 'res_00005_00006' direct represents '4' with '435'
432 -434 435 0
-435 434 0
-435 -432 0
c Var 'res_00005_00006' order represents '5' with '436'
-434 436 0
c Var 'res_00005_00006' direct represents '5' with '437'
434 -436 437 0
-437 436 0
-437 -434 0
c Var 'res_00005_00006' order represents '6' with '438'
-436 438 0
c Var 'res_00005_00006' direct represents '6' with '439'
436 -438 439 0
-439 438 0
-439 -436 0
c Var 'res_00005_00006' order represents '7' with '440'
-438 440 0
c Var 'res_00005_00006' direct represents '7' with '441'
438 -440 441 0
-441 440 0
-441 -438 0
c Var 'res_00005_00006' order represents '8' with '442'
-440 442 0
c Var 'res_00005_00006' direct represents '8' with '443'
440 -442 443 0
-443 442 0
-443 -440 0
c Var 'res_00005_00006' direct represents '9' with '-442'
427 429 431 433 435 437 439 441 443 -442 0
c Encoding variable: res_00006_00000 with domain: int(0..9) (representing constraint )
c Direct encoding.
c Var 'res_00006_00000' direct represents '0' with '444'
c Var 'res_00006_00000' direct represents '1' with '445'
c Var 'res_00006_00000' direct represents '2' with '446'
c Var 'res_00006_00000' direct represents '3' with '447'
c Var 'res_00006_00000' direct represents '4' with '448'
c Var 'res_00006_00000' direct represents '5' with '449'
c Var 'res_00006_00000' direct represents '6' with '450'
c Var 'res_00006_00000' direct represents '7' with '451'
c Var 'res_00006_00000' direct represents '8' with '452'
c Var 'res_00006_00000' direct represents '9' with '453'
444 445 446 447 448 449 450 451 452 453 0
-444 454 0
-444 458 0
-445 455 0
-445 458 0
-446 456 0
-446 458 0
-447 457 0
-447 458 0
-448 454 0
-448 459 0
-449 455 0
-449 459 0
-450 456 0
-450 459 0
-451 457 0
-451 459 0
-452 454 0
-452 460 0
-453 455 0
-453 460 0
-454 -455 0
-454 -456 0
-454 -457 0
-455 -456 0
-455 -457 0
-456 -457 0
-458 -459 0
-458 -460 0
-459 -460 0
c Encoding variable: res_00006_00001 with domain: int(-2) (representing constraint )
c Var 'res_00006_00001' direct represents '-2' with '461'
461 0
c Encoding variable: res_00006_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00006_00002' order represents '0' with '462'
c Var 'res_00006_00002' direct represents '0' with '462'
c Var 'res_00006_00002' order represents '1' with '463'
-462 463 0
c Var 'res_00006_00002' direct represents '1' with '464'
462 -463 464 0
-464 463 0
-464 -462 0
c Var 'res_00006_00002' order represents '2' with '465'
-463 465 0
c Var 'res_00006_00002' direct represents '2' with '466'
463 -465 466 0
-466 465 0
-466 -463 0
c Var 'res_00006_00002' order represents '3' with '467'
-465 467 0
c Var 'res_00006_00002' direct represents '3' with '468'
465 -467 468 0
-468 467 0
-468 -465 0
c Var 'res_00006_00002' order represents '4' with '469'
-467 469 0
c Var 'res_00006_00002' direct represents '4' with '470'
467 -469 470 0
-470 469 0
-470 -467 0
c Var 'res_00006_00002' order represents '5' with '471'
-469 471 0
c Var 'res_00006_00002' direct represents '5' with '472'
469 -471 472 0
-472 471 0
-472 -469 0
c Var 'res_00006_00002' order represents '6' with '473'
-471 473 0
c Var 'res_00006_00002' direct represents '6' with '474'
471 -473 474 0
-474 473 0
-474 -471 0
c Var 'res_00006_00002' order represents '7' with '475'
-473 475 0
c Var 'res_00006_00002' direct represents '7' with '476'
473 -475 476 0
-476 475 0
-476 -473 0
c Var 'res_00006_00002' order represents '8' with '477'
-475 477 0
c Var 'res_00006_00002' direct represents '8' with '478'
475 -477 478 0
-478 477 0
-478 -475 0
c Var 'res_00006_00002' direct represents '9' with '-477'
462 464 466 468 470 472 474 476 478 -477 0
c Encoding variable: res_00006_00003 with domain: int(2) (representing constraint )
c Var 'res_00006_00003' direct represents '2' with '479'
479 0
c Encoding variable: res_00006_00004 with domain: int(0..9) (representing constraint )
c Direct encoding.
c Var 'res_00006_00004' direct represents '0' with '480'
c Var 'res_00006_00004' direct represents '1' with '481'
c Var 'res_00006_00004' direct represents '2' with '482'
c Var 'res_00006_00004' direct represents '3' with '483'
c Var 'res_00006_00004' direct represents '4' with '484'
c Var 'res_00006_00004' direct represents '5' with '485'
c Var 'res_00006_00004' direct represents '6' with '486'
c Var 'res_00006_00004' direct represents '7' with '487'
c Var 'res_00006_00004' direct represents '8' with '488'
c Var 'res_00006_00004' direct represents '9' with '489'
480 481 482 483 484 485 486 487 488 489 0
-480 490 0
-480 494 0
-481 491 0
-481 494 0
-482 492 0
-482 494 0
-483 493 0
-483 494 0
-484 490 0
-484 495 0
-485 491 0
-485 495 0
-486 492 0
-486 495 0
-487 493 0
-487 495 0
-488 490 0
-488 496 0
-489 491 0
-489 496 0
-490 -491 0
-490 -492 0
-490 -493 0
-491 -492 0
-491 -493 0
-492 -493 0
-494 -495 0
-494 -496 0
-495 -496 0
c Encoding variable: res_00006_00005 with domain: int(-2) (representing constraint )
c Var 'res_00006_00005' direct represents '-2' with '497'
497 0
c Encoding variable: res_00006_00006 with domain: int(4) (representing constraint )
c Var 'res_00006_00006' direct represents '4' with '498'
498 0
c Encoding variable: res_00007_00000 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00007_00000' order represents '0' with '499'
c Var 'res_00007_00000' direct represents '0' with '499'
c Var 'res_00007_00000' order represents '1' with '500'
-499 500 0
c Var 'res_00007_00000' direct represents '1' with '501'
499 -500 501 0
-501 500 0
-501 -499 0
c Var 'res_00007_00000' order represents '2' with '502'
-500 502 0
c Var 'res_00007_00000' direct represents '2' with '503'
500 -502 503 0
-503 502 0
-503 -500 0
c Var 'res_00007_00000' order represents '3' with '504'
-502 504 0
c Var 'res_00007_00000' direct represents '3' with '505'
502 -504 505 0
-505 504 0
-505 -502 0
c Var 'res_00007_00000' order represents '4' with '506'
-504 506 0
c Var 'res_00007_00000' direct represents '4' with '507'
504 -506 507 0
-507 506 0
-507 -504 0
c Var 'res_00007_00000' order represents '5' with '508'
-506 508 0
c Var 'res_00007_00000' direct represents '5' with '509'
506 -508 509 0
-509 508 0
-509 -506 0
c Var 'res_00007_00000' order represents '6' with '510'
-508 510 0
c Var 'res_00007_00000' direct represents '6' with '511'
508 -510 511 0
-511 510 0
-511 -508 0
c Var 'res_00007_00000' order represents '7' with '512'
-510 512 0
c Var 'res_00007_00000' direct represents '7' with '513'
510 -512 513 0
-513 512 0
-513 -510 0
c Var 'res_00007_00000' order represents '8' with '514'
-512 514 0
c Var 'res_00007_00000' direct represents '8' with '515'
512 -514 515 0
-515 514 0
-515 -512 0
c Var 'res_00007_00000' direct represents '9' with '-514'
499 501 503 505 507 509 511 513 515 -514 0
c Encoding variable: res_00007_00001 with domain: int(-2) (representing constraint )
c Var 'res_00007_00001' direct represents '-2' with '516'
516 0
c Encoding variable: res_00007_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00007_00002' order represents '0' with '517'
c Var 'res_00007_00002' direct represents '0' with '517'
c Var 'res_00007_00002' order represents '1' with '518'
-517 518 0
c Var 'res_00007_00002' direct represents '1' with '519'
517 -518 519 0
-519 518 0
-519 -517 0
c Var 'res_00007_00002' order represents '2' with '520'
-518 520 0
c Var 'res_00007_00002' direct represents '2' with '521'
518 -520 521 0
-521 520 0
-521 -518 0
c Var 'res_00007_00002' order represents '3' with '522'
-520 522 0
c Var 'res_00007_00002' direct represents '3' with '523'
520 -522 523 0
-523 522 0
-523 -520 0
c Var 'res_00007_00002' order represents '4' with '524'
-522 524 0
c Var 'res_00007_00002' direct represents '4' with '525'
522 -524 525 0
-525 524 0
-525 -522 0
c Var 'res_00007_00002' order represents '5' with '526'
-524 526 0
c Var 'res_00007_00002' direct represents '5' with '527'
524 -526 527 0
-527 526 0
-527 -524 0
c Var 'res_00007_00002' order represents '6' with '528'
-526 528 0
c Var 'res_00007_00002' direct represents '6' with '529'
526 -528 529 0
-529 528 0
-529 -526 0
c Var 'res_00007_00002' order represents '7' with '530'
-528 530 0
c Var 'res_00007_00002' direct represents '7' with '531'
528 -530 531 0
-531 530 0
-531 -528 0
c Var 'res_00007_00002' order represents '8' with '532'
-530 532 0
c Var 'res_00007_00002' direct represents '8' with '533'
530 -532 533 0
-533 532 0
-533 -530 0
c Var 'res_00007_00002' direct represents '9' with '-532'
517 519 521 523 525 527 529 531 533 -532 0
c Encoding variable: res_00007_00003 with domain: int(-2) (representing constraint )
c Var 'res_00007_00003' direct represents '-2' with '534'
534 0
c Encoding variable: res_00007_00004 with domain: int(2) (representing constraint )
c Var 'res_00007_00004' direct represents '2' with '535'
535 0
c Encoding variable: res_00007_00005 with domain: int(-2) (representing constraint )
c Var 'res_00007_00005' direct represents '-2' with '536'
536 0
c Encoding variable: res_00007_00006 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00007_00006' order represents '0' with '537'
c Var 'res_00007_00006' direct represents '0' with '537'
c Var 'res_00007_00006' order represents '1' with '538'
-537 538 0
c Var 'res_00007_00006' direct represents '1' with '539'
537 -538 539 0
-539 538 0
-539 -537 0
c Var 'res_00007_00006' order represents '2' with '540'
-538 540 0
c Var 'res_00007_00006' direct represents '2' with '541'
538 -540 541 0
-541 540 0
-541 -538 0
c Var 'res_00007_00006' order represents '3' with '542'
-540 542 0
c Var 'res_00007_00006' direct represents '3' with '543'
540 -542 543 0
-543 542 0
-543 -540 0
c Var 'res_00007_00006' order represents '4' with '544'
-542 544 0
c Var 'res_00007_00006' direct represents '4' with '545'
542 -544 545 0
-545 544 0
-545 -542 0
c Var 'res_00007_00006' order represents '5' with '546'
-544 546 0
c Var 'res_00007_00006' direct represents '5' with '547'
544 -546 547 0
-547 546 0
-547 -544 0
c Var 'res_00007_00006' order represents '6' with '548'
-546 548 0
c Var 'res_00007_00006' direct represents '6' with '549'
546 -548 549 0
-549 548 0
-549 -546 0
c Var 'res_00007_00006' order represents '7' with '550'
-548 550 0
c Var 'res_00007_00006' direct represents '7' with '551'
548 -550 551 0
-551 550 0
-551 -548 0
c Var 'res_00007_00006' order represents '8' with '552'
-550 552 0
c Var 'res_00007_00006' direct represents '8' with '553'
550 -552 553 0
-553 552 0
-553 -550 0
c Var 'res_00007_00006' direct represents '9' with '-552'
537 539 541 543 545 547 549 551 553 -552 0
c Encoding variable: res_00008_00000 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00008_00000' order represents '0' with '554'
c Var 'res_00008_00000' direct represents '0' with '554'
c Var 'res_00008_00000' order represents '1' with '555'
-554 555 0
c Var 'res_00008_00000' direct represents '1' with '556'
554 -555 556 0
-556 555 0
-556 -554 0
c Var 'res_00008_00000' order represents '2' with '557'
-555 557 0
c Var 'res_00008_00000' direct represents '2' with '558'
555 -557 558 0
-558 557 0
-558 -555 0
c Var 'res_00008_00000' order represents '3' with '559'
-557 559 0
c Var 'res_00008_00000' direct represents '3' with '560'
557 -559 560 0
-560 559 0
-560 -557 0
c Var 'res_00008_00000' order represents '4' with '561'
-559 561 0
c Var 'res_00008_00000' direct represents '4' with '562'
559 -561 562 0
-562 561 0
-562 -559 0
c Var 'res_00008_00000' order represents '5' with '563'
-561 563 0
c Var 'res_00008_00000' direct represents '5' with '564'
561 -563 564 0
-564 563 0
-564 -561 0
c Var 'res_00008_00000' order represents '6' with '565'
-563 565 0
c Var 'res_00008_00000' direct represents '6' with '566'
563 -565 566 0
-566 565 0
-566 -563 0
c Var 'res_00008_00000' order represents '7' with '567'
-565 567 0
c Var 'res_00008_00000' direct represents '7' with '568'
565 -567 568 0
-568 567 0
-568 -565 0
c Var 'res_00008_00000' order represents '8' with '569'
-567 569 0
c Var 'res_00008_00000' direct represents '8' with '570'
567 -569 570 0
-570 569 0
-570 -567 0
c Var 'res_00008_00000' direct represents '9' with '-569'
554 556 558 560 562 564 566 568 570 -569 0
c Encoding variable: res_00008_00001 with domain: int(1) (representing constraint )
c Var 'res_00008_00001' direct represents '1' with '571'
571 0
c Encoding variable: res_00008_00002 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00008_00002' order represents '0' with '572'
c Var 'res_00008_00002' direct represents '0' with '572'
c Var 'res_00008_00002' order represents '1' with '573'
-572 573 0
c Var 'res_00008_00002' direct represents '1' with '574'
572 -573 574 0
-574 573 0
-574 -572 0
c Var 'res_00008_00002' order represents '2' with '575'
-573 575 0
c Var 'res_00008_00002' direct represents '2' with '576'
573 -575 576 0
-576 575 0
-576 -573 0
c Var 'res_00008_00002' order represents '3' with '577'
-575 577 0
c Var 'res_00008_00002' direct represents '3' with '578'
575 -577 578 0
-578 577 0
-578 -575 0
c Var 'res_00008_00002' order represents '4' with '579'
-577 579 0
c Var 'res_00008_00002' direct represents '4' with '580'
577 -579 580 0
-580 579 0
-580 -577 0
c Var 'res_00008_00002' order represents '5' with '581'
-579 581 0
c Var 'res_00008_00002' direct represents '5' with '582'
579 -581 582 0
-582 581 0
-582 -579 0
c Var 'res_00008_00002' order represents '6' with '583'
-581 583 0
c Var 'res_00008_00002' direct represents '6' with '584'
581 -583 584 0
-584 583 0
-584 -581 0
c Var 'res_00008_00002' order represents '7' with '585'
-583 585 0
c Var 'res_00008_00002' direct represents '7' with '586'
583 -585 586 0
-586 585 0
-586 -583 0
c Var 'res_00008_00002' order represents '8' with '587'
-585 587 0
c Var 'res_00008_00002' direct represents '8' with '588'
585 -587 588 0
-588 587 0
-588 -585 0
c Var 'res_00008_00002' direct represents '9' with '-587'
572 574 576 578 580 582 584 586 588 -587 0
c Encoding variable: res_00008_00003 with domain: int(-2) (representing constraint )
c Var 'res_00008_00003' direct represents '-2' with '589'
589 0
c Encoding variable: res_00008_00004 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00008_00004' order represents '0' with '590'
c Var 'res_00008_00004' direct represents '0' with '590'
c Var 'res_00008_00004' order represents '1' with '591'
-590 591 0
c Var 'res_00008_00004' direct represents '1' with '592'
590 -591 592 0
-592 591 0
-592 -590 0
c Var 'res_00008_00004' order represents '2' with '593'
-591 593 0
c Var 'res_00008_00004' direct represents '2' with '594'
591 -593 594 0
-594 593 0
-594 -591 0
c Var 'res_00008_00004' order represents '3' with '595'
-593 595 0
c Var 'res_00008_00004' direct represents '3' with '596'
593 -595 596 0
-596 595 0
-596 -593 0
c Var 'res_00008_00004' order represents '4' with '597'
-595 597 0
c Var 'res_00008_00004' direct represents '4' with '598'
595 -597 598 0
-598 597 0
-598 -595 0
c Var 'res_00008_00004' order represents '5' with '599'
-597 599 0
c Var 'res_00008_00004' direct represents '5' with '600'
597 -599 600 0
-600 599 0
-600 -597 0
c Var 'res_00008_00004' order represents '6' with '601'
-599 601 0
c Var 'res_00008_00004' direct represents '6' with '602'
599 -601 602 0
-602 601 0
-602 -599 0
c Var 'res_00008_00004' order represents '7' with '603'
-601 603 0
c Var 'res_00008_00004' direct represents '7' with '604'
601 -603 604 0
-604 603 0
-604 -601 0
c Var 'res_00008_00004' order represents '8' with '605'
-603 605 0
c Var 'res_00008_00004' direct represents '8' with '606'
603 -605 606 0
-606 605 0
-606 -603 0
c Var 'res_00008_00004' direct represents '9' with '-605'
590 592 594 596 598 600 602 604 606 -605 0
c Encoding variable: res_00008_00005 with domain: int(3) (representing constraint )
c Var 'res_00008_00005' direct represents '3' with '607'
607 0
c Encoding variable: res_00008_00006 with domain: int(0..9) (representing constraint )
c Both direct and order encoding.
c Var 'res_00008_00006' order represents '0' with '608'
c Var 'res_00008_00006' direct represents '0' with '608'
c Var 'res_00008_00006' order represents '1' with '609'
-608 609 0
c Var 'res_00008_00006' direct represents '1' with '610'
608 -609 610 0
-610 609 0
-610 -608 0
c Var 'res_00008_00006' order represents '2' with '611'
-609 611 0
c Var 'res_00008_00006' direct represents '2' with '612'
609 -611 612 0
-612 611 0
-612 -609 0
c Var 'res_00008_00006' order represents '3' with '613'
-611 613 0
c Var 'res_00008_00006' direct represents '3' with '614'
611 -613 614 0
-614 613 0
-614 -611 0
c Var 'res_00008_00006' order represents '4' with '615'
-613 615 0
c Var 'res_00008_00006' direct represents '4' with '616'
613 -615 616 0
-616 615 0
-616 -613 0
c Var 'res_00008_00006' order represents '5' with '617'
-615 617 0
c Var 'res_00008_00006' direct represents '5' with '618'
615 -617 618 0
-618 617 0
-618 -615 0
c Var 'res_00008_00006' order represents '6' with '619'
-617 619 0
c Var 'res_00008_00006' direct represents '6' with '620'
617 -619 620 0
-620 619 0
-620 -617 0
c Var 'res_00008_00006' order represents '7' with '621'
-619 621 0
c Var 'res_00008_00006' direct represents '7' with '622'
619 -621 622 0
-622 621 0
-622 -619 0
c Var 'res_00008_00006' order represents '8' with '623'
-621 623 0
c Var 'res_00008_00006' direct represents '8' with '624'
621 -623 624 0
-624 623 0
-624 -621 0
c Var 'res_00008_00006' direct represents '9' with '-623'
608 610 612 614 616 618 620 622 624 -623 0
c Encoding variable: ops_bool_00000 with domain: bool (representing constraint )
c Var 'ops_bool_00000' direct represents '0' with '-625'
c Var 'ops_bool_00000' direct represents '1' with '625'
c Var 'ops_bool_00000' order represents '1' with '1'
c Var 'ops_bool_00000' order represents '0' with '-625'
c Encoding variable: ops_bool_00001 with domain: bool (representing constraint )
c Var 'ops_bool_00001' direct represents '0' with '-626'
c Var 'ops_bool_00001' direct represents '1' with '626'
c Var 'ops_bool_00001' order represents '1' with '1'
c Var 'ops_bool_00001' order represents '0' with '-626'
c Encoding variable: ops_bool_00002 with domain: bool (representing constraint )
c Var 'ops_bool_00002' direct represents '0' with '-627'
c Var 'ops_bool_00002' direct represents '1' with '627'
c Var 'ops_bool_00002' order represents '1' with '1'
c Var 'ops_bool_00002' order represents '0' with '-627'
c Encoding variable: ops_bool_00003 with domain: bool (representing constraint )
c Var 'ops_bool_00003' direct represents '0' with '-628'
c Var 'ops_bool_00003' direct represents '1' with '628'
c Var 'ops_bool_00003' order represents '1' with '1'
c Var 'ops_bool_00003' order represents '0' with '-628'
c Encoding variable: ops_bool_00004 with domain: bool (representing constraint )
c Var 'ops_bool_00004' direct represents '0' with '-629'
c Var 'ops_bool_00004' direct represents '1' with '629'
c Var 'ops_bool_00004' order represents '1' with '1'
c Var 'ops_bool_00004' order represents '0' with '-629'
c Encoding variable: ops_bool_00005 with domain: bool (representing constraint )
c Var 'ops_bool_00005' direct represents '0' with '-630'
c Var 'ops_bool_00005' direct represents '1' with '630'
c Var 'ops_bool_00005' order represents '1' with '1'
c Var 'ops_bool_00005' order represents '0' with '-630'
c Encoding variable: ops_bool_00006 with domain: bool (representing constraint )
c Var 'ops_bool_00006' direct represents '0' with '-631'
c Var 'ops_bool_00006' direct represents '1' with '631'
c Var 'ops_bool_00006' order represents '1' with '1'
c Var 'ops_bool_00006' order represents '0' with '-631'
c Encoding variable: ops_bool_00007 with domain: bool (representing constraint )
c Var 'ops_bool_00007' direct represents '0' with '-632'
c Var 'ops_bool_00007' direct represents '1' with '632'
c Var 'ops_bool_00007' order represents '1' with '1'
c Var 'ops_bool_00007' order represents '0' with '-632'
c Encoding variable: ops_bool_00008 with domain: bool (representing constraint )
c Var 'ops_bool_00008' direct represents '0' with '-633'
c Var 'ops_bool_00008' direct represents '1' with '633'
c Var 'ops_bool_00008' order represents '1' with '1'
c Var 'ops_bool_00008' order represents '0' with '-633'
c Encoding variable: ops_bool_00009 with domain: bool (representing constraint )
c Var 'ops_bool_00009' direct represents '0' with '-634'
c Var 'ops_bool_00009' direct represents '1' with '634'
c Var 'ops_bool_00009' order represents '1' with '1'
c Var 'ops_bool_00009' order represents '0' with '-634'
c Encoding variable: ops_bool_00010 with domain: bool (representing constraint )
c Var 'ops_bool_00010' direct represents '0' with '-635'
c Var 'ops_bool_00010' direct represents '1' with '635'
c Var 'ops_bool_00010' order represents '1' with '1'
c Var 'ops_bool_00010' order represents '0' with '-635'
c Encoding variable: ops_bool_00011 with domain: bool (representing constraint )
c Var 'ops_bool_00011' direct represents '0' with '-636'
c Var 'ops_bool_00011' direct represents '1' with '636'
c Var 'ops_bool_00011' order represents '1' with '1'
c Var 'ops_bool_00011' order represents '0' with '-636'
c Encoding variable: ops_bool_00012 with domain: bool (representing constraint )
c Var 'ops_bool_00012' direct represents '0' with '-637'
c Var 'ops_bool_00012' direct represents '1' with '637'
c Var 'ops_bool_00012' order represents '1' with '1'
c Var 'ops_bool_00012' order represents '0' with '-637'
c Encoding variable: ops_bool_00013 with domain: bool (representing constraint )
c Var 'ops_bool_00013' direct represents '0' with '-638'
c Var 'ops_bool_00013' direct represents '1' with '638'
c Var 'ops_bool_00013' order represents '1' with '1'
c Var 'ops_bool_00013' order represents '0' with '-638'
c Encoding variable: ops_bool_00014 with domain: bool (representing constraint )
c Var 'ops_bool_00014' direct represents '0' with '-639'
c Var 'ops_bool_00014' direct represents '1' with '639'
c Var 'ops_bool_00014' order represents '1' with '1'
c Var 'ops_bool_00014' order represents '0' with '-639'
c Encoding variable: ops_bool_00015 with domain: bool (representing constraint )
c Var 'ops_bool_00015' direct represents '0' with '-640'
c Var 'ops_bool_00015' direct represents '1' with '640'
c Var 'ops_bool_00015' order represents '1' with '1'
c Var 'ops_bool_00015' order represents '0' with '-640'
c Encoding variable: ops_bool_00016 with domain: bool (representing constraint )
c Var 'ops_bool_00016' direct represents '0' with '-641'
c Var 'ops_bool_00016' direct represents '1' with '641'
c Var 'ops_bool_00016' order represents '1' with '1'
c Var 'ops_bool_00016' order represents '0' with '-641'
c Encoding variable: ops_bool_00017 with domain: bool (representing constraint )
c Var 'ops_bool_00017' direct represents '0' with '-642'
c Var 'ops_bool_00017' direct represents '1' with '642'
c Var 'ops_bool_00017' order represents '1' with '1'
c Var 'ops_bool_00017' order represents '0' with '-642'
c Encoding variable: ops_bool_00018 with domain: bool (representing constraint )
c Var 'ops_bool_00018' direct represents '0' with '-643'
c Var 'ops_bool_00018' direct represents '1' with '643'
c Var 'ops_bool_00018' order represents '1' with '1'
c Var 'ops_bool_00018' order represents '0' with '-643'
c Encoding variable: ops_bool_00019 with domain: bool (representing constraint )
c Var 'ops_bool_00019' direct represents '0' with '-644'
c Var 'ops_bool_00019' direct represents '1' with '644'
c Var 'ops_bool_00019' order represents '1' with '1'
c Var 'ops_bool_00019' order represents '0' with '-644'
c Encoding variable: two_digit_00000 with domain: bool (representing constraint )
c Var 'two_digit_00000' direct represents '0' with '-645'
c Var 'two_digit_00000' direct represents '1' with '645'
c Var 'two_digit_00000' order represents '1' with '1'
c Var 'two_digit_00000' order represents '0' with '-645'
c Encoding variable: two_digit_00001 with domain: bool (representing constraint )
c Var 'two_digit_00001' direct represents '0' with '-646'
c Var 'two_digit_00001' direct represents '1' with '646'
c Var 'two_digit_00001' order represents '1' with '1'
c Var 'two_digit_00001' order represents '0' with '-646'
c Encoding variable: two_digit_00002 with domain: bool (representing constraint )
c Var 'two_digit_00002' direct represents '0' with '-647'
c Var 'two_digit_00002' direct represents '1' with '647'
c Var 'two_digit_00002' order represents '1' with '1'
c Var 'two_digit_00002' order represents '0' with '-647'
c Encoding variable: two_digit_00003 with domain: bool (representing constraint )
c Var 'two_digit_00003' direct represents '0' with '-648'
c Var 'two_digit_00003' direct represents '1' with '648'
c Var 'two_digit_00003' order represents '1' with '1'
c Var 'two_digit_00003' order represents '0' with '-648'
c Encoding variable: two_digit_00004 with domain: bool (representing constraint )
c Var 'two_digit_00004' direct represents '0' with '-649'
c Var 'two_digit_00004' direct represents '1' with '649'
c Var 'two_digit_00004' order represents '1' with '1'
c Var 'two_digit_00004' order represents '0' with '-649'
c Encoding variable: two_digit_00005 with domain: bool (representing constraint )
c Var 'two_digit_00005' direct represents '0' with '-650'
c Var 'two_digit_00005' direct represents '1' with '650'
c Var 'two_digit_00005' order represents '1' with '1'
c Var 'two_digit_00005' order represents '0' with '-650'
c Encoding variable: two_digit_00006 with domain: bool (representing constraint )
c Var 'two_digit_00006' direct represents '0' with '-651'
c Var 'two_digit_00006' direct represents '1' with '651'
c Var 'two_digit_00006' order represents '1' with '1'
c Var 'two_digit_00006' order represents '0' with '-651'
651 -651 0
c Encoding variable: two_digit_00007 with domain: bool (representing constraint )
c Var 'two_digit_00007' direct represents '0' with '-652'
c Var 'two_digit_00007' direct represents '1' with '652'
c Var 'two_digit_00007' order represents '1' with '1'
c Var 'two_digit_00007' order represents '0' with '-652'
c Encoding variable: aux0 with domain: int(0..10,12,14..16,18,20..21,24..25,27..28,30,32,35..36,40,42,45,48..49,54,56,63..64,72,81) (representing constraint )
c Both direct and order encoding.
c Var 'aux0' order represents '0' with '653'
c Var 'aux0' direct represents '0' with '653'
c Var 'aux0' order represents '1' with '654'
-653 654 0
c Var 'aux0' direct represents '1' with '655'
653 -654 655 0
-655 654 0
-655 -653 0
c Var 'aux0' order represents '2' with '656'
-654 656 0
c Var 'aux0' direct represents '2' with '657'
654 -656 657 0
-657 656 0
-657 -654 0
c Var 'aux0' order represents '3' with '658'
-656 658 0
c Var 'aux0' direct represents '3' with '659'
656 -658 659 0
-659 658 0
-659 -656 0
c Var 'aux0' order represents '4' with '660'
-658 660 0
c Var 'aux0' direct represents '4' with '661'
658 -660 661 0
-661 660 0
-661 -658 0
c Var 'aux0' order represents '5' with '662'
-660 662 0
c Var 'aux0' direct represents '5' with '663'
660 -662 663 0
-663 662 0
-663 -660 0
c Var 'aux0' order represents '6' with '664'
-662 664 0
c Var 'aux0' direct represents '6' with '665'
662 -664 665 0
-665 664 0
-665 -662 0
c Var 'aux0' order represents '7' with '666'
-664 666 0
c Var 'aux0' direct represents '7' with '667'
664 -666 667 0
-667 666 0
-667 -664 0
c Var 'aux0' order represents '8' with '668'
-666 668 0
c Var 'aux0' direct represents '8' with '669'
666 -668 669 0
-669 668 0
-669 -666 0
c Var 'aux0' order represents '9' with '670'
-668 670 0
c Var 'aux0' direct represents '9' with '671'
668 -670 671 0
-671 670 0
-671 -668 0
c Var 'aux0' order represents '10' with '672'
-670 672 0
c Var 'aux0' direct represents '10' with '673'
670 -672 673 0
-673 672 0
-673 -670 0
c Var 'aux0' order represents '12' with '674'
-672 674 0
c Var 'aux0' direct represents '12' with '675'
672 -674 675 0
-675 674 0
-675 -672 0
c Var 'aux0' order represents '14' with '676'
-674 676 0
c Var 'aux0' direct represents '14' with '677'
674 -676 677 0
-677 676 0
-677 -674 0
c Var 'aux0' order represents '15' with '678'
-676 678 0
c Var 'aux0' direct represents '15' with '679'
676 -678 679 0
-679 678 0
-679 -676 0
c Var 'aux0' order represents '16' with '680'
-678 680 0
c Var 'aux0' direct represents '16' with '681'
678 -680 681 0
-681 680 0
-681 -678 0
c Var 'aux0' order represents '18' with '682'
-680 682 0
c Var 'aux0' direct represents '18' with '683'
680 -682 683 0
-683 682 0
-683 -680 0
c Var 'aux0' order represents '20' with '684'
-682 684 0
c Var 'aux0' direct represents '20' with '685'
682 -684 685 0
-685 684 0
-685 -682 0
c Var 'aux0' order represents '21' with '686'
-684 686 0
c Var 'aux0' direct represents '21' with '687'
684 -686 687 0
-687 686 0
-687 -684 0
c Var 'aux0' order represents '24' with '688'
-686 688 0
c Var 'aux0' direct represents '24' with '689'
686 -688 689 0
-689 688 0
-689 -686 0
c Var 'aux0' order represents '25' with '690'
-688 690 0
c Var 'aux0' direct represents '25' with '691'
688 -690 691 0
-691 690 0
-691 -688 0
c Var 'aux0' order represents '27' with '692'
-690 692 0
c Var 'aux0' direct represents '27' with '693'
690 -692 693 0
-693 692 0
-693 -690 0
c Var 'aux0' order represents '28' with '694'
-692 694 0
c Var 'aux0' direct represents '28' with '695'
692 -694 695 0
-695 694 0
-695 -692 0
c Var 'aux0' order represents '30' with '696'
-694 696 0
c Var 'aux0' direct represents '30' with '697'
694 -696 697 0
-697 696 0
-697 -694 0
c Var 'aux0' order represents '32' with '698'
-696 698 0
c Var 'aux0' direct represents '32' with '699'
696 -698 699 0
-699 698 0
-699 -696 0
c Var 'aux0' order represents '35' with '700'
-698 700 0
c Var 'aux0' direct represents '35' with '701'
698 -700 701 0
-701 700 0
-701 -698 0
c Var 'aux0' order represents '36' with '702'
-700 702 0
c Var 'aux0' direct represents '36' with '703'
700 -702 703 0
-703 702 0
-703 -700 0
c Var 'aux0' order represents '40' with '704'
-702 704 0
c Var 'aux0' direct represents '40' with '705'
702 -704 705 0
-705 704 0
-705 -702 0
c Var 'aux0' order represents '42' with '706'
-704 706 0
c Var 'aux0' direct represents '42' with '707'
704 -706 707 0
-707 706 0
-707 -704 0
c Var 'aux0' order represents '45' with '708'
-706 708 0
c Var 'aux0' direct represents '45' with '709'
706 -708 709 0
-709 708 0
-709 -706 0
c Var 'aux0' order represents '48' with '710'
-708 710 0
c Var 'aux0' direct represents '48' with '711'
708 -710 711 0
-711 710 0
-711 -708 0
c Var 'aux0' order represents '49' with '712'
-710 712 0
c Var 'aux0' direct represents '49' with '713'
710 -712 713 0
-713 712 0
-713 -710 0
c Var 'aux0' order represents '54' with '714'
-712 714 0
c Var 'aux0' direct represents '54' with '715'
712 -714 715 0
-715 714 0
-715 -712 0
c Var 'aux0' order represents '56' with '716'
-714 716 0
c Var 'aux0' direct represents '56' with '717'
714 -716 717 0
-717 716 0
-717 -714 0
c Var 'aux0' order represents '63' with '718'
-716 718 0
c Var 'aux0' direct represents '63' with '719'
716 -718 719 0
-719 718 0
-719 -716 0
c Var 'aux0' order represents '64' with '720'
-718 720 0
c Var 'aux0' direct represents '64' with '721'
718 -720 721 0
-721 720 0
-721 -718 0
c Var 'aux0' order represents '72' with '722'
-720 722 0
c Var 'aux0' direct represents '72' with '723'
720 -722 723 0
-723 722 0
-723 -720 0
c Var 'aux0' direct represents '81' with '-722'
653 655 657 659 661 663 665 667 669 671 673 675 677 679 681 683 685 687 689 691 693 695 697 699 701 703 705 707 709 711 713 715 717 719 721 723 -722 0
c Encoding variable: aux1 with domain: int(0..10,12,14..16,18,20..21,24..25,27..28,30,32,35..36,40,42,45,48..49,54,56,63..64,72,81) (representing constraint )
c Both direct and order encoding.
c Var 'aux1' order represents '0' with '724'
c Var 'aux1' direct represents '0' with '724'
c Var 'aux1' order represents '1' with '725'
-724 725 0
c Var 'aux1' direct represents '1' with '726'
724 -725 726 0
-726 725 0
-726 -724 0
c Var 'aux1' order represents '2' with '727'
-725 727 0
c Var 'aux1' direct represents '2' with '728'
725 -727 728 0
-728 727 0
-728 -725 0
c Var 'aux1' order represents '3' with '729'
-727 729 0
c Var 'aux1' direct represents '3' with '730'
727 -729 730 0
-730 729 0
-730 -727 0
c Var 'aux1' order represents '4' with '731'
-729 731 0
c Var 'aux1' direct represents '4' with '732'
729 -731 732 0
-732 731 0
-732 -729 0
c Var 'aux1' order represents '5' with '733'
-731 733 0
c Var 'aux1' direct represents '5' with '734'
731 -733 734 0
-734 733 0
-734 -731 0
c Var 'aux1' order represents '6' with '735'
-733 735 0
c Var 'aux1' direct represents '6' with '736'
733 -735 736 0
-736 735 0
-736 -733 0
c Var 'aux1' order represents '7' with '737'
-735 737 0
c Var 'aux1' direct represents '7' with '738'
735 -737 738 0
-738 737 0
-738 -735 0
c Var 'aux1' order represents '8' with '739'
-737 739 0
c Var 'aux1' direct represents '8' with '740'
737 -739 740 0
-740 739 0
-740 -737 0
c Var 'aux1' order represents '9' with '741'
-739 741 0
c Var 'aux1' direct represents '9' with '742'
739 -741 742 0
-742 741 0
-742 -739 0
c Var 'aux1' order represents '10' with '743'
-741 743 0
c Var 'aux1' direct represents '10' with '744'
741 -743 744 0
-744 743 0
-744 -741 0
c Var 'aux1' order represents '12' with '745'
-743 745 0
c Var 'aux1' direct represents '12' with '746'
743 -745 746 0
-746 745 0
-746 -743 0
c Var 'aux1' order represents '14' with '747'
-745 747 0
c Var 'aux1' direct represents '14' with '748'
745 -747 748 0
-748 747 0
-748 -745 0
c Var 'aux1' order represents '15' with '749'
-747 749 0
c Var 'aux1' direct represents '15' with '750'
747 -749 750 0
-750 749 0
-750 -747 0
c Var 'aux1' order represents '16' with '751'
-749 751 0
c Var 'aux1' direct represents '16' with '752'
749 -751 752 0
-752 751 0
-752 -749 0
c Var 'aux1' order represents '18' with '753'
-751 753 0
c Var 'aux1' direct represents '18' with '754'
751 -753 754 0
-754 753 0
-754 -751 0
c Var 'aux1' order represents '20' with '755'
-753 755 0
c Var 'aux1' direct represents '20' with '756'
753 -755 756 0
-756 755 0
-756 -753 0
c Var 'aux1' order represents '21' with '757'
-755 757 0
c Var 'aux1' direct represents '21' with '758'
755 -757 758 0
-758 757 0
-758 -755 0
c Var 'aux1' order represents '24' with '759'
-757 759 0
c Var 'aux1' direct represents '24' with '760'
757 -759 760 0
-760 759 0
-760 -757 0
c Var 'aux1' order represents '25' with '761'
-759 761 0
c Var 'aux1' direct represents '25' with '762'
759 -761 762 0
-762 761 0
-762 -759 0
c Var 'aux1' order represents '27' with '763'
-761 763 0
c Var 'aux1' direct represents '27' with '764'
761 -763 764 0
-764 763 0
-764 -761 0
c Var 'aux1' order represents '28' with '765'
-763 765 0
c Var 'aux1' direct represents '28' with '766'
763 -765 766 0
-766 765 0
-766 -763 0
c Var 'aux1' order represents '30' with '767'
-765 767 0
c Var 'aux1' direct represents '30' with '768'
765 -767 768 0
-768 767 0
-768 -765 0
c Var 'aux1' order represents '32' with '769'
-767 769 0
c Var 'aux1' direct represents '32' with '770'
767 -769 770 0
-770 769 0
-770 -767 0
c Var 'aux1' order represents '35' with '771'
-769 771 0
c Var 'aux1' direct represents '35' with '772'
769 -771 772 0
-772 771 0
-772 -769 0
c Var 'aux1' order represents '36' with '773'
-771 773 0
c Var 'aux1' direct represents '36' with '774'
771 -773 774 0
-774 773 0
-774 -771 0
c Var 'aux1' order represents '40' with '775'
-773 775 0
c Var 'aux1' direct represents '40' with '776'
773 -775 776 0
-776 775 0
-776 -773 0
c Var 'aux1' order represents '42' with '777'
-775 777 0
c Var 'aux1' direct represents '42' with '778'
775 -777 778 0
-778 777 0
-778 -775 0
c Var 'aux1' order represents '45' with '779'
-777 779 0
c Var 'aux1' direct represents '45' with '780'
777 -779 780 0
-780 779 0
-780 -777 0
c Var 'aux1' order represents '48' with '781'
-779 781 0
c Var 'aux1' direct represents '48' with '782'
779 -781 782 0
-782 781 0
-782 -779 0
c Var 'aux1' order represents '49' with '783'
-781 783 0
c Var 'aux1' direct represents '49' with '784'
781 -783 784 0
-784 783 0
-784 -781 0
c Var 'aux1' order represents '54' with '785'
-783 785 0
c Var 'aux1' direct represents '54' with '786'
783 -785 786 0
-786 785 0
-786 -783 0
c Var 'aux1' order represents '56' with '787'
-785 787 0
c Var 'aux1' direct represents '56' with '788'
785 -787 788 0
-788 787 0
-788 -785 0
c Var 'aux1' order represents '63' with '789'
-787 789 0
c Var 'aux1' direct represents '63' with '790'
787 -789 790 0
-790 789 0
-790 -787 0
c Var 'aux1' order represents '64' with '791'
-789 791 0
c Var 'aux1' direct represents '64' with '792'
789 -791 792 0
-792 791 0
-792 -789 0
c Var 'aux1' order represents '72' with '793'
-791 793 0
c Var 'aux1' direct represents '72' with '794'
791 -793 794 0
-794 793 0
-794 -791 0
c Var 'aux1' direct represents '81' with '-793'
724 726 728 730 732 734 736 738 740 742 744 746 748 750 752 754 756 758 760 762 764 766 768 770 772 774 776 778 780 782 784 786 788 790 792 794 -793 0
c Encoding variable: aux2 with domain: int(0..10,12,14..16,18,20..21,24..25,27..28,30,32,35..36,40,42,45,48..49,54,56,63..64,72,81) (representing constraint )
c Both direct and order encoding.
c Var 'aux2' order represents '0' with '795'
c Var 'aux2' direct represents '0' with '795'
c Var 'aux2' order represents '1' with '796'
-795 796 0
c Var 'aux2' direct represents '1' with '797'
795 -796 797 0
-797 796 0
-797 -795 0
c Var 'aux2' order represents '2' with '798'
-796 798 0
c Var 'aux2' direct represents '2' with '799'
796 -798 799 0
-799 798 0
-799 -796 0
c Var 'aux2' order represents '3' with '800'
-798 800 0
c Var 'aux2' direct represents '3' with '801'
798 -800 801 0
-801 800 0
-801 -798 0
c Var 'aux2' order represents '4' with '802'
-800 802 0
c Var 'aux2' direct represents '4' with '803'
800 -802 803 0
-803 802 0
-803 -800 0
c Var 'aux2' order represents '5' with '804'
-802 804 0
c Var 'aux2' direct represents '5' with '805'
802 -804 805 0
-805 804 0
-805 -802 0
c Var 'aux2' order represents '6' with '806'
-804 806 0
c Var 'aux2' direct represents '6' with '807'
804 -806 807 0
-807 806 0
-807 -804 0
c Var 'aux2' order represents '7' with '808'
-806 808 0
c Var 'aux2' direct represents '7' with '809'
806 -808 809 0
-809 808 0
-809 -806 0
c Var 'aux2' order represents '8' with '810'
-808 810 0
c Var 'aux2' direct represents '8' with '811'
808 -810 811 0
-811 810 0
-811 -808 0
c Var 'aux2' order represents '9' with '812'
-810 812 0
c Var 'aux2' direct represents '9' with '813'
810 -812 813 0
-813 812 0
-813 -810 0
c Var 'aux2' order represents '10' with '814'
-812 814 0
c Var 'aux2' direct represents '10' with '815'
812 -814 815 0
-815 814 0
-815 -812 0
c Var 'aux2' order represents '12' with '816'
-814 816 0
c Var 'aux2' direct represents '12' with '817'
814 -816 817 0
-817 816 0
-817 -814 0
c Var 'aux2' order represents '14' with '818'
-816 818 0
c Var 'aux2' direct represents '14' with '819'
816 -818 819 0
-819 818 0
-819 -816 0
c Var 'aux2' order represents '15' with '820'
-818 820 0
c Var 'aux2' direct represents '15' with '821'
818 -820 821 0
-821 820 0
-821 -818 0
c Var 'aux2' order represents '16' with '822'
-820 822 0
c Var 'aux2' direct represents '16' with '823'
820 -822 823 0
-823 822 0
-823 -820 0
c Var 'aux2' order represents '18' with '824'
-822 824 0
c Var 'aux2' direct represents '18' with '825'
822 -824 825 0
-825 824 0
-825 -822 0
c Var 'aux2' order represents '20' with '826'
-824 826 0
c Var 'aux2' direct represents '20' with '827'
824 -826 827 0
-827 826 0
-827 -824 0
c Var 'aux2' order represents '21' with '828'
-826 828 0
c Var 'aux2' direct represents '21' with '829'
826 -828 829 0
-829 828 0
-829 -826 0
c Var 'aux2' order represents '24' with '830'
-828 830 0
c Var 'aux2' direct represents '24' with '831'
828 -830 831 0
-831 830 0
-831 -828 0
c Var 'aux2' order represents '25' with '832'
-830 832 0
c Var 'aux2' direct represents '25' with '833'
830 -832 833 0
-833 832 0
-833 -830 0
c Var 'aux2' order represents '27' with '834'
-832 834 0
c Var 'aux2' direct represents '27' with '835'
832 -834 835 0
-835 834 0
-835 -832 0
c Var 'aux2' order represents '28' with '836'
-834 836 0
c Var 'aux2' direct represents '28' with '837'
834 -836 837 0
-837 836 0
-837 -834 0
c Var 'aux2' order represents '30' with '838'
-836 838 0
c Var 'aux2' direct represents '30' with '839'
836 -838 839 0
-839 838 0
-839 -836 0
c Var 'aux2' order represents '32' with '840'
-838 840 0
c Var 'aux2' direct represents '32' with '841'
838 -840 841 0
-841 840 0
-841 -838 0
c Var 'aux2' order represents '35' with '842'
-840 842 0
c Var 'aux2' direct represents '35' with '843'
840 -842 843 0
-843 842 0
-843 -840 0
c Var 'aux2' order represents '36' with '844'
-842 844 0
c Var 'aux2' direct represents '36' with '845'
842 -844 845 0
-845 844 0
-845 -842 0
c Var 'aux2' order represents '40' with '846'
-844 846 0
c Var 'aux2' direct represents '40' with '847'
844 -846 847 0
-847 846 0
-847 -844 0
c Var 'aux2' order represents '42' with '848'
-846 848 0
c Var 'aux2' direct represents '42' with '849'
846 -848 849 0
-849 848 0
-849 -846 0
c Var 'aux2' order represents '45' with '850'
-848 850 0
c Var 'aux2' direct represents '45' with '851'
848 -850 851 0
-851 850 0
-851 -848 0
c Var 'aux2' order represents '48' with '852'
-850 852 0
c Var 'aux2' direct represents '48' with '853'
850 -852 853 0
-853 852 0
-853 -850 0
c Var 'aux2' order represents '49' with '854'
-852 854 0
c Var 'aux2' direct represents '49' with '855'
852 -854 855 0
-855 854 0
-855 -852 0
c Var 'aux2' order represents '54' with '856'
-854 856 0
c Var 'aux2' direct represents '54' with '857'
854 -856 857 0
-857 856 0
-857 -854 0
c Var 'aux2' order represents '56' with '858'
-856 858 0
c Var 'aux2' direct represents '56' with '859'
856 -858 859 0
-859 858 0
-859 -856 0
c Var 'aux2' order represents '63' with '860'
-858 860 0
c Var 'aux2' direct represents '63' with '861'
858 -860 861 0
-861 860 0
-861 -858 0
c Var 'aux2' order represents '64' with '862'
-860 862 0
c Var 'aux2' direct represents '64' with '863'
860 -862 863 0
-863 862 0
-863 -860 0
c Var 'aux2' order represents '72' with '864'
-862 864 0
c Var 'aux2' direct represents '72' with '865'
862 -864 865 0
-865 864 0
-865 -862 0
c Var 'aux2' direct represents '81' with '-864'
795 797 799 801 803 805 807 809 811 813 815 817 819 821 823 825 827 829 831 833 835 837 839 841 843 845 847 849 851 853 855 857 859 861 863 865 -864 0
c Encoding variable: aux3 with domain: int(0..10,12,14..16,18,20..21,24..25,27..28,30,32,35..36,40,42,45,48..49,54,56,63..64,72,81) (representing constraint )
c Both direct and order encoding.
c Var 'aux3' order represents '0' with '866'
c Var 'aux3' direct represents '0' with '866'
c Var 'aux3' order represents '1' with '867'
-866 867 0
c Var 'aux3' direct represents '1' with '868'
866 -867 868 0
-868 867 0
-868 -866 0
c Var 'aux3' order represents '2' with '869'
-867 869 0
c Var 'aux3' direct represents '2' with '870'
867 -869 870 0
-870 869 0
-870 -867 0
c Var 'aux3' order represents '3' with '871'
-869 871 0
c Var 'aux3' direct represents '3' with '872'
869 -871 872 0
-872 871 0
-872 -869 0
c Var 'aux3' order represents '4' with '873'
-871 873 0
c Var 'aux3' direct represents '4' with '874'
871 -873 874 0
-874 873 0
-874 -871 0
c Var 'aux3' order represents '5' with '875'
-873 875 0
c Var 'aux3' direct represents '5' with '876'
873 -875 876 0
-876 875 0
-876 -873 0
c Var 'aux3' order represents '6' with '877'
-875 877 0
c Var 'aux3' direct represents '6' with '878'
875 -877 878 0
-878 877 0
-878 -875 0
c Var 'aux3' order represents '7' with '879'
-877 879 0
c Var 'aux3' direct represents '7' with '880'
877 -879 880 0
-880 879 0
-880 -877 0
c Var 'aux3' order represents '8' with '881'
-879 881 0
c Var 'aux3' direct represents '8' with '882'
879 -881 882 0
-882 881 0
-882 -879 0
c Var 'aux3' order represents '9' with '883'
-881 883 0
c Var 'aux3' direct represents '9' with '884'
881 -883 884 0
-884 883 0
-884 -881 0
c Var 'aux3' order represents '10' with '885'
-883 885 0
c Var 'aux3' direct represents '10' with '886'
883 -885 886 0
-886 885 0
-886 -883 0
c Var 'aux3' order represents '12' with '887'
-885 887 0
c Var 'aux3' direct represents '12' with '888'
885 -887 888 0
-888 887 0
-888 -885 0
c Var 'aux3' order represents '14' with '889'
-887 889 0
c Var 'aux3' direct represents '14' with '890'
887 -889 890 0
-890 889 0
-890 -887 0
c Var 'aux3' order represents '15' with '891'
-889 891 0
c Var 'aux3' direct represents '15' with '892'
889 -891 892 0
-892 891 0
-892 -889 0
c Var 'aux3' order represents '16' with '893'
-891 893 0
c Var 'aux3' direct represents '16' with '894'
891 -893 894 0
-894 893 0
-894 -891 0
c Var 'aux3' order represents '18' with '895'
-893 895 0
c Var 'aux3' direct represents '18' with '896'
893 -895 896 0
-896 895 0
-896 -893 0
c Var 'aux3' order represents '20' with '897'
-895 897 0
c Var 'aux3' direct represents '20' with '898'
895 -897 898 0
-898 897 0
-898 -895 0
c Var 'aux3' order represents '21' with '899'
-897 899 0
c Var 'aux3' direct represents '21' with '900'
897 -899 900 0
-900 899 0
-900 -897 0
c Var 'aux3' order represents '24' with '901'
-899 901 0
c Var 'aux3' direct represents '24' with '902'
899 -901 902 0
-902 901 0
-902 -899 0
c Var 'aux3' order represents '25' with '903'
-901 903 0
c Var 'aux3' direct represents '25' with '904'
901 -903 904 0
-904 903 0
-904 -901 0
c Var 'aux3' order represents '27' with '905'
-903 905 0
c Var 'aux3' direct represents '27' with '906'
903 -905 906 0
-906 905 0
-906 -903 0
c Var 'aux3' order represents '28' with '907'
-905 907 0
c Var 'aux3' direct represents '28' with '908'
905 -907 908 0
-908 907 0
-908 -905 0
c Var 'aux3' order represents '30' with '909'
-907 909 0
c Var 'aux3' direct represents '30' with '910'
907 -909 910 0
-910 909 0
-910 -907 0
c Var 'aux3' order represents '32' with '911'
-909 911 0
c Var 'aux3' direct represents '32' with '912'
909 -911 912 0
-912 911 0
-912 -909 0
c Var 'aux3' order represents '35' with '913'
-911 913 0
c Var 'aux3' direct represents '35' with '914'
911 -913 914 0
-914 913 0
-914 -911 0
c Var 'aux3' order represents '36' with '915'
-913 915 0
c Var 'aux3' direct represents '36' with '916'
913 -915 916 0
-916 915 0
-916 -913 0
c Var 'aux3' order represents '40' with '917'
-915 917 0
c Var 'aux3' direct represents '40' with '918'
915 -917 918 0
-918 917 0
-918 -915 0
c Var 'aux3' order represents '42' with '919'
-917 919 0
c Var 'aux3' direct represents '42' with '920'
917 -919 920 0
-920 919 0
-920 -917 0
c Var 'aux3' order represents '45' with '921'
-919 921 0
c Var 'aux3' direct represents '45' with '922'
919 -921 922 0
-922 921 0
-922 -919 0
c Var 'aux3' order represents '48' with '923'
-921 923 0
c Var 'aux3' direct represents '48' with '924'
921 -923 924 0
-924 923 0
-924 -921 0
c Var 'aux3' order represents '49' with '925'
-923 925 0
c Var 'aux3' direct represents '49' with '926'
923 -925 926 0
-926 925 0
-926 -923 0
c Var 'aux3' order represents '54' with '927'
-925 927 0
c Var 'aux3' direct represents '54' with '928'
925 -927 928 0
-928 927 0
-928 -925 0
c Var 'aux3' order represents '56' with '929'
-927 929 0
c Var 'aux3' direct represents '56' with '930'
927 -929 930 0
-930 929 0
-930 -927 0
c Var 'aux3' order represents '63' with '931'
-929 931 0
c Var 'aux3' direct represents '63' with '932'
929 -931 932 0
-932 931 0
-932 -929 0
c Var 'aux3' order represents '64' with '933'
-931 933 0
c Var 'aux3' direct represents '64' with '934'
931 -933 934 0
-934 933 0
-934 -931 0
c Var 'aux3' order represents '72' with '935'
-933 935 0
c Var 'aux3' direct represents '72' with '936'
933 -935 936 0
-936 935 0
-936 -933 0
c Var 'aux3' direct represents '81' with '-935'
866 868 870 872 874 876 878 880 882 884 886 888 890 892 894 896 898 900 902 904 906 908 910 912 914 916 918 920 922 924 926 928 930 932 934 936 -935 0
c Encoding variable: aux4 with domain: int(20..29) (representing constraint )
c Both direct and order encoding.
c Var 'aux4' order represents '20' with '937'
c Var 'aux4' direct represents '20' with '937'
c Var 'aux4' order represents '21' with '938'
-937 938 0
c Var 'aux4' direct represents '21' with '939'
937 -938 939 0
-939 938 0
-939 -937 0
c Var 'aux4' order represents '22' with '940'
-938 940 0
c Var 'aux4' direct represents '22' with '941'
938 -940 941 0
-941 940 0
-941 -938 0
c Var 'aux4' order represents '23' with '942'
-940 942 0
c Var 'aux4' direct represents '23' with '943'
940 -942 943 0
-943 942 0
-943 -940 0
c Var 'aux4' order represents '24' with '944'
-942 944 0
c Var 'aux4' direct represents '24' with '945'
942 -944 945 0
-945 944 0
-945 -942 0
c Var 'aux4' order represents '25' with '946'
-944 946 0
c Var 'aux4' direct represents '25' with '947'
944 -946 947 0
-947 946 0
-947 -944 0
c Var 'aux4' order represents '26' with '948'
-946 948 0
c Var 'aux4' direct represents '26' with '949'
946 -948 949 0
-949 948 0
-949 -946 0
c Var 'aux4' order represents '27' with '950'
-948 950 0
c Var 'aux4' direct represents '27' with '951'
948 -950 951 0
-951 950 0
-951 -948 0
c Var 'aux4' order represents '28' with '952'
-950 952 0
c Var 'aux4' direct represents '28' with '953'
950 -952 953 0
-953 952 0
-953 -950 0
c Var 'aux4' direct represents '29' with '-952'
937 939 941 943 945 947 949 951 953 -952 0
c Encoding variable: aux5 with domain: bool (representing constraint ((res_00000_00000 - res_00000_00001)=tv=res_00000_00002))
c Var 'aux5' direct represents '0' with '-954'
c Var 'aux5' direct represents '1' with '954'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-954'
c Encoding variable: aux6 with domain: bool (representing constraint ((res_00000_00004 * res_00000_00005)=tv=res_00000_00006))
c Var 'aux6' direct represents '0' with '-955'
c Var 'aux6' direct represents '1' with '955'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-955'
c Encoding variable: aux7 with domain: bool (representing constraint ((10*res_00002_00000 + res_00003_00000)=tv=aux0))
c Var 'aux7' direct represents '0' with '-956'
c Var 'aux7' direct represents '1' with '956'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-956'
c Encoding variable: aux8 with domain: bool (representing constraint ((10*res_00002_00002 + res_00003_00002)=tv=aux1))
c Var 'aux8' direct represents '0' with '-957'
c Var 'aux8' direct represents '1' with '957'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-957'
c Encoding variable: aux9 with domain: bool (representing constraint ((res_00000_00004 + res_00001_00004 - 10*res_00002_00004 - res_00003_00004)=tv=0))
c Var 'aux9' direct represents '0' with '-958'
c Var 'aux9' direct represents '1' with '958'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-958'
c Encoding variable: aux10 with domain: bool (representing constraint ((10*res_00002_00006 + res_00003_00006)=tv=aux2))
c Var 'aux10' direct represents '0' with '-959'
c Var 'aux10' direct represents '1' with '959'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-959'
c Encoding variable: aux11 with domain: bool (representing constraint ((res_00001_00002 + res_00001_00003)=tv=res_00001_00004))
c Var 'aux11' direct represents '0' with '-960'
c Var 'aux11' direct represents '1' with '960'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-960'
c Encoding variable: aux12 with domain: bool (representing constraint ((res_00003_00000 - res_00003_00001)=tv=res_00003_00002))
c Var 'aux12' direct represents '0' with '-961'
c Var 'aux12' direct represents '1' with '961'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-961'
c Encoding variable: aux13 with domain: bool (representing constraint ((res_00003_00004 + res_00003_00005)=tv=res_00003_00006))
c Var 'aux13' direct represents '0' with '-962'
c Var 'aux13' direct represents '1' with '962'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-962'
c Encoding variable: aux14 with domain: bool (representing constraint (( - res_00004_00001 + res_00003_00001)=tv=res_00005_00001))
c Var 'aux14' direct represents '0' with '-963'
c Var 'aux14' direct represents '1' with '963'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-963'
c Encoding variable: aux15 with domain: bool (representing constraint (( - res_00004_00005 + res_00003_00005)=tv=res_00005_00005))
c Var 'aux15' direct represents '0' with '-964'
c Var 'aux15' direct represents '1' with '964'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-964'
c Encoding variable: aux16 with domain: bool (representing constraint ((res_00005_00000 + res_00005_00001)=tv=res_00005_00002))
c Var 'aux16' direct represents '0' with '-965'
c Var 'aux16' direct represents '1' with '965'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-965'
c Encoding variable: aux17 with domain: bool (representing constraint ((res_00005_00004 + res_00005_00005)=tv=res_00005_00006))
c Var 'aux17' direct represents '0' with '-966'
c Var 'aux17' direct represents '1' with '966'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-966'
c Encoding variable: aux18 with domain: bool (representing constraint ((10*res_00007_00000 + res_00008_00000)=tv=aux3))
c Var 'aux18' direct represents '0' with '-967'
c Var 'aux18' direct represents '1' with '967'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-967'
c Encoding variable: aux19 with domain: bool (representing constraint ((res_00005_00002 + res_00006_00002 - 10*res_00007_00002 - res_00008_00002)=tv=0))
c Var 'aux19' direct represents '0' with '-968'
c Var 'aux19' direct represents '1' with '968'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-968'
c Encoding variable: aux20 with domain: bool (representing constraint ((res_00005_00004 * res_00006_00004)=tv=aux4))
c Var 'aux20' direct represents '0' with '-969'
c Var 'aux20' direct represents '1' with '969'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-969'
c Encoding variable: aux21 with domain: bool (representing constraint ((res_00005_00006 + res_00006_00006 - 10*res_00007_00006 - res_00008_00006)=tv=0))
c Var 'aux21' direct represents '0' with '-970'
c Var 'aux21' direct represents '1' with '970'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-970'
c Encoding variable: aux22 with domain: bool (representing constraint ((res_00006_00002 * res_00006_00003)=tv=res_00006_00004))
c Var 'aux22' direct represents '0' with '-971'
c Var 'aux22' direct represents '1' with '971'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-971'
c Encoding variable: aux23 with domain: bool (representing constraint ((res_00008_00000 + res_00008_00001)=tv=res_00008_00002))
c Var 'aux23' direct represents '0' with '-972'
c Var 'aux23' direct represents '1' with '972'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-972'
c Encoding variable: aux24 with domain: bool (representing constraint ((res_00008_00004 * res_00008_00005)=tv=res_00008_00006))
c Var 'aux24' direct represents '0' with '-973'
c Var 'aux24' direct represents '1' with '973'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-973'
c Encoding variable: aux25 with domain: int(0..18) (representing constraint (res_00000_00004 - shift(res_00003_00004, -9)))
c Both direct and order encoding.
c Var 'aux25' order represents '0' with '974'
c Var 'aux25' direct represents '0' with '974'
c Var 'aux25' order represents '1' with '975'
-974 975 0
c Var 'aux25' direct represents '1' with '976'
974 -975 976 0
-976 975 0
-976 -974 0
c Var 'aux25' order represents '2' with '977'
-975 977 0
c Var 'aux25' direct represents '2' with '978'
975 -977 978 0
-978 977 0
-978 -975 0
c Var 'aux25' order represents '3' with '979'
-977 979 0
c Var 'aux25' direct represents '3' with '980'
977 -979 980 0
-980 979 0
-980 -977 0
c Var 'aux25' order represents '4' with '981'
-979 981 0
c Var 'aux25' direct represents '4' with '982'
979 -981 982 0
-982 981 0
-982 -979 0
c Var 'aux25' order represents '5' with '983'
-981 983 0
c Var 'aux25' direct represents '5' with '984'
981 -983 984 0
-984 983 0
-984 -981 0
c Var 'aux25' order represents '6' with '985'
-983 985 0
c Var 'aux25' direct represents '6' with '986'
983 -985 986 0
-986 985 0
-986 -983 0
c Var 'aux25' order represents '7' with '987'
-985 987 0
c Var 'aux25' direct represents '7' with '988'
985 -987 988 0
-988 987 0
-988 -985 0
c Var 'aux25' order represents '8' with '989'
-987 989 0
c Var 'aux25' direct represents '8' with '990'
987 -989 990 0
-990 989 0
-990 -987 0
c Var 'aux25' order represents '9' with '991'
-989 991 0
c Var 'aux25' direct represents '9' with '992'
989 -991 992 0
-992 991 0
-992 -989 0
c Var 'aux25' order represents '10' with '993'
-991 993 0
c Var 'aux25' direct represents '10' with '994'
991 -993 994 0
-994 993 0
-994 -991 0
c Var 'aux25' order represents '11' with '995'
-993 995 0
c Var 'aux25' direct represents '11' with '996'
993 -995 996 0
-996 995 0
-996 -993 0
c Var 'aux25' order represents '12' with '997'
-995 997 0
c Var 'aux25' direct represents '12' with '998'
995 -997 998 0
-998 997 0
-998 -995 0
c Var 'aux25' order represents '13' with '999'
-997 999 0
c Var 'aux25' direct represents '13' with '1000'
997 -999 1000 0
-1000 999 0
-1000 -997 0
c Var 'aux25' order represents '14' with '1001'
-999 1001 0
c Var 'aux25' direct represents '14' with '1002'
999 -1001 1002 0
-1002 1001 0
-1002 -999 0
c Var 'aux25' order represents '15' with '1003'
-1001 1003 0
c Var 'aux25' direct represents '15' with '1004'
1001 -1003 1004 0
-1004 1003 0
-1004 -1001 0
c Var 'aux25' order represents '16' with '1005'
-1003 1005 0
c Var 'aux25' direct represents '16' with '1006'
1003 -1005 1006 0
-1006 1005 0
-1006 -1003 0
c Var 'aux25' order represents '17' with '1007'
-1005 1007 0
c Var 'aux25' direct represents '17' with '1008'
1005 -1007 1008 0
-1008 1007 0
-1008 -1005 0
c Var 'aux25' direct represents '18' with '-1007'
974 976 978 980 982 984 986 988 990 992 994 996 998 1000 1002 1004 1006 1008 -1007 0
c Encoding variable: aux26 with domain: int(0..18) (representing constraint (res_00005_00002 - shift(res_00008_00002, -9)))
c Both direct and order encoding.
c Var 'aux26' order represents '0' with '1009'
c Var 'aux26' direct represents '0' with '1009'
c Var 'aux26' order represents '1' with '1010'
-1009 1010 0
c Var 'aux26' direct represents '1' with '1011'
1009 -1010 1011 0
-1011 1010 0
-1011 -1009 0
c Var 'aux26' order represents '2' with '1012'
-1010 1012 0
c Var 'aux26' direct represents '2' with '1013'
1010 -1012 1013 0
-1013 1012 0
-1013 -1010 0
c Var 'aux26' order represents '3' with '1014'
-1012 1014 0
c Var 'aux26' direct represents '3' with '1015'
1012 -1014 1015 0
-1015 1014 0
-1015 -1012 0
c Var 'aux26' order represents '4' with '1016'
-1014 1016 0
c Var 'aux26' direct represents '4' with '1017'
1014 -1016 1017 0
-1017 1016 0
-1017 -1014 0
c Var 'aux26' order represents '5' with '1018'
-1016 1018 0
c Var 'aux26' direct represents '5' with '1019'
1016 -1018 1019 0
-1019 1018 0
-1019 -1016 0
c Var 'aux26' order represents '6' with '1020'
-1018 1020 0
c Var 'aux26' direct represents '6' with '1021'
1018 -1020 1021 0
-1021 1020 0
-1021 -1018 0
c Var 'aux26' order represents '7' with '1022'
-1020 1022 0
c Var 'aux26' direct represents '7' with '1023'
1020 -1022 1023 0
-1023 1022 0
-1023 -1020 0
c Var 'aux26' order represents '8' with '1024'
-1022 1024 0
c Var 'aux26' direct represents '8' with '1025'
1022 -1024 1025 0
-1025 1024 0
-1025 -1022 0
c Var 'aux26' order represents '9' with '1026'
-1024 1026 0
c Var 'aux26' direct represents '9' with '1027'
1024 -1026 1027 0
-1027 1026 0
-1027 -1024 0
c Var 'aux26' order represents '10' with '1028'
-1026 1028 0
c Var 'aux26' direct represents '10' with '1029'
1026 -1028 1029 0
-1029 1028 0
-1029 -1026 0
c Var 'aux26' order represents '11' with '1030'
-1028 1030 0
c Var 'aux26' direct represents '11' with '1031'
1028 -1030 1031 0
-1031 1030 0
-1031 -1028 0
c Var 'aux26' order represents '12' with '1032'
-1030 1032 0
c Var 'aux26' direct represents '12' with '1033'
1030 -1032 1033 0
-1033 1032 0
-1033 -1030 0
c Var 'aux26' order represents '13' with '1034'
-1032 1034 0
c Var 'aux26' direct represents '13' with '1035'
1032 -1034 1035 0
-1035 1034 0
-1035 -1032 0
c Var 'aux26' order represents '14' with '1036'
-1034 1036 0
c Var 'aux26' direct represents '14' with '1037'
1034 -1036 1037 0
-1037 1036 0
-1037 -1034 0
c Var 'aux26' order represents '15' with '1038'
-1036 1038 0
c Var 'aux26' direct represents '15' with '1039'
1036 -1038 1039 0
-1039 1038 0
-1039 -1036 0
c Var 'aux26' order represents '16' with '1040'
-1038 1040 0
c Var 'aux26' direct represents '16' with '1041'
1038 -1040 1041 0
-1041 1040 0
-1041 -1038 0
c Var 'aux26' order represents '17' with '1042'
-1040 1042 0
c Var 'aux26' direct represents '17' with '1043'
1040 -1042 1043 0
-1043 1042 0
-1043 -1040 0
c Var 'aux26' direct represents '18' with '-1042'
1009 1011 1013 1015 1017 1019 1021 1023 1025 1027 1029 1031 1033 1035 1037 1039 1041 1043 -1042 0
c Encoding variable: aux27 with domain: int(0..9) (representing constraint (shift(res_00006_00006, -4) - shift(res_00008_00006, -9)))
c Both direct and order encoding.
c Var 'aux27' order represents '0' with '1044'
c Var 'aux27' direct represents '0' with '1044'
c Var 'aux27' order represents '1' with '1045'
-1044 1045 0
c Var 'aux27' direct represents '1' with '1046'
1044 -1045 1046 0
-1046 1045 0
-1046 -1044 0
c Var 'aux27' order represents '2' with '1047'
-1045 1047 0
c Var 'aux27' direct represents '2' with '1048'
1045 -1047 1048 0
-1048 1047 0
-1048 -1045 0
c Var 'aux27' order represents '3' with '1049'
-1047 1049 0
c Var 'aux27' direct represents '3' with '1050'
1047 -1049 1050 0
-1050 1049 0
-1050 -1047 0
c Var 'aux27' order represents '4' with '1051'
-1049 1051 0
c Var 'aux27' direct represents '4' with '1052'
1049 -1051 1052 0
-1052 1051 0
-1052 -1049 0
c Var 'aux27' order represents '5' with '1053'
-1051 1053 0
c Var 'aux27' direct represents '5' with '1054'
1051 -1053 1054 0
-1054 1053 0
-1054 -1051 0
c Var 'aux27' order represents '6' with '1055'
-1053 1055 0
c Var 'aux27' direct represents '6' with '1056'
1053 -1055 1056 0
-1056 1055 0
-1056 -1053 0
c Var 'aux27' order represents '7' with '1057'
-1055 1057 0
c Var 'aux27' direct represents '7' with '1058'
1055 -1057 1058 0
-1058 1057 0
-1058 -1055 0
c Var 'aux27' order represents '8' with '1059'
-1057 1059 0
c Var 'aux27' direct represents '8' with '1060'
1057 -1059 1060 0
-1060 1059 0
-1060 -1057 0
c Var 'aux27' direct represents '9' with '-1059'
1044 1046 1048 1050 1052 1054 1056 1058 1060 -1059 0
c Encoding variable: aux28 with domain: bool (representing constraint ((res_00000_00000 - res_00000_00001 - res_00000_00002)<=0))
c Var 'aux28' direct represents '0' with '-1061'
c Var 'aux28' direct represents '1' with '1061'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-1061'
c Encoding variable: aux29 with domain: bool (representing constraint (0<=(res_00000_00000 - res_00000_00001 - res_00000_00002)))
c Var 'aux29' direct represents '0' with '-1062'
c Var 'aux29' direct represents '1' with '1062'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-1062'
c Encoding variable: aux30 with domain: bool (representing constraint (( - aux0 + 10*res_00002_00000 + res_00003_00000)<=0))
c Var 'aux30' direct represents '0' with '-1063'
c Var 'aux30' direct represents '1' with '1063'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-1063'
c Encoding variable: aux31 with domain: bool (representing constraint (0<=( - aux0 + 10*res_00002_00000 + res_00003_00000)))
c Var 'aux31' direct represents '0' with '-1064'
c Var 'aux31' direct represents '1' with '1064'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-1064'
c Encoding variable: aux32 with domain: bool (representing constraint (( - aux1 + 10*res_00002_00002 + res_00003_00002)<=0))
c Var 'aux32' direct represents '0' with '-1065'
c Var 'aux32' direct represents '1' with '1065'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-1065'
c Encoding variable: aux33 with domain: bool (representing constraint (0<=( - aux1 + 10*res_00002_00002 + res_00003_00002)))
c Var 'aux33' direct represents '0' with '-1066'
c Var 'aux33' direct represents '1' with '1066'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-1066'
c Encoding variable: aux34 with domain: bool (representing constraint ((res_00001_00004 - 10*shift(res_00002_00004, -9) + aux25)<=99))
c Var 'aux34' direct represents '0' with '-1067'
c Var 'aux34' direct represents '1' with '1067'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-1067'
c Encoding variable: aux35 with domain: bool (representing constraint (99<=(res_00001_00004 - 10*shift(res_00002_00004, -9) + aux25)))
c Var 'aux35' direct represents '0' with '-1068'
c Var 'aux35' direct represents '1' with '1068'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-1068'
c Encoding variable: aux36 with domain: bool (representing constraint (( - aux2 + 10*res_00002_00006 + res_00003_00006)<=0))
c Var 'aux36' direct represents '0' with '-1069'
c Var 'aux36' direct represents '1' with '1069'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-1069'
c Encoding variable: aux37 with domain: bool (representing constraint (0<=( - aux2 + 10*res_00002_00006 + res_00003_00006)))
c Var 'aux37' direct represents '0' with '-1070'
c Var 'aux37' direct represents '1' with '1070'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-1070'
c Encoding variable: aux38 with domain: bool (representing constraint ((res_00001_00002 + res_00001_00003 - res_00001_00004)<=0))
c Var 'aux38' direct represents '0' with '-1071'
c Var 'aux38' direct represents '1' with '1071'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-1071'
c Encoding variable: aux39 with domain: bool (representing constraint (0<=(res_00001_00002 + res_00001_00003 - res_00001_00004)))
c Var 'aux39' direct represents '0' with '-1072'
c Var 'aux39' direct represents '1' with '1072'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-1072'
c Encoding variable: aux40 with domain: bool (representing constraint ((res_00003_00000 - res_00003_00001 - res_00003_00002)<=0))
c Var 'aux40' direct represents '0' with '-1073'
c Var 'aux40' direct represents '1' with '1073'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-1073'
c Encoding variable: aux41 with domain: bool (representing constraint (0<=(res_00003_00000 - res_00003_00001 - res_00003_00002)))
c Var 'aux41' direct represents '0' with '-1074'
c Var 'aux41' direct represents '1' with '1074'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-1074'
c Encoding variable: aux42 with domain: bool (representing constraint ((res_00003_00004 + res_00003_00005 - res_00003_00006)<=0))
c Var 'aux42' direct represents '0' with '-1075'
c Var 'aux42' direct represents '1' with '1075'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-1075'
c Encoding variable: aux43 with domain: bool (representing constraint (0<=(res_00003_00004 + res_00003_00005 - res_00003_00006)))
c Var 'aux43' direct represents '0' with '-1076'
c Var 'aux43' direct represents '1' with '1076'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-1076'
c Encoding variable: aux44 with domain: bool (representing constraint (( - res_00004_00001 - res_00005_00001 + res_00003_00001)<=0))
c Var 'aux44' direct represents '0' with '-1077'
c Var 'aux44' direct represents '1' with '1077'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-1077'
c Encoding variable: aux45 with domain: bool (representing constraint (0<=( - res_00004_00001 - res_00005_00001 + res_00003_00001)))
c Var 'aux45' direct represents '0' with '-1078'
c Var 'aux45' direct represents '1' with '1078'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-1078'
c Encoding variable: aux46 with domain: bool (representing constraint (( - res_00004_00005 - res_00005_00005 + res_00003_00005)<=0))
c Var 'aux46' direct represents '0' with '-1079'
c Var 'aux46' direct represents '1' with '1079'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-1079'
c Encoding variable: aux47 with domain: bool (representing constraint (0<=( - res_00004_00005 - res_00005_00005 + res_00003_00005)))
c Var 'aux47' direct represents '0' with '-1080'
c Var 'aux47' direct represents '1' with '1080'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-1080'
c Encoding variable: aux48 with domain: bool (representing constraint ((res_00005_00000 + res_00005_00001 - res_00005_00002)<=0))
c Var 'aux48' direct represents '0' with '-1081'
c Var 'aux48' direct represents '1' with '1081'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-1081'
c Encoding variable: aux49 with domain: bool (representing constraint (0<=(res_00005_00000 + res_00005_00001 - res_00005_00002)))
c Var 'aux49' direct represents '0' with '-1082'
c Var 'aux49' direct represents '1' with '1082'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-1082'
c Encoding variable: aux50 with domain: bool (representing constraint ((res_00005_00004 + res_00005_00005 - res_00005_00006)<=0))
c Var 'aux50' direct represents '0' with '-1083'
c Var 'aux50' direct represents '1' with '1083'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-1083'
c Encoding variable: aux51 with domain: bool (representing constraint (0<=(res_00005_00004 + res_00005_00005 - res_00005_00006)))
c Var 'aux51' direct represents '0' with '-1084'
c Var 'aux51' direct represents '1' with '1084'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-1084'
c Encoding variable: aux52 with domain: bool (representing constraint (( - aux3 + 10*res_00007_00000 + res_00008_00000)<=0))
c Var 'aux52' direct represents '0' with '-1085'
c Var 'aux52' direct represents '1' with '1085'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-1085'
c Encoding variable: aux53 with domain: bool (representing constraint (0<=( - aux3 + 10*res_00007_00000 + res_00008_00000)))
c Var 'aux53' direct represents '0' with '-1086'
c Var 'aux53' direct represents '1' with '1086'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-1086'
c Encoding variable: aux54 with domain: bool (representing constraint ((res_00006_00002 - 10*shift(res_00007_00002, -9) + aux26)<=99))
c Var 'aux54' direct represents '0' with '-1087'
c Var 'aux54' direct represents '1' with '1087'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-1087'
c Encoding variable: aux55 with domain: bool (representing constraint (99<=(res_00006_00002 - 10*shift(res_00007_00002, -9) + aux26)))
c Var 'aux55' direct represents '0' with '-1088'
c Var 'aux55' direct represents '1' with '1088'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-1088'
c Encoding variable: aux56 with domain: bool (representing constraint ((res_00005_00006 - 10*shift(res_00007_00006, -9) + aux27)<=95))
c Var 'aux56' direct represents '0' with '-1089'
c Var 'aux56' direct represents '1' with '1089'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-1089'
c Encoding variable: aux57 with domain: bool (representing constraint (95<=(res_00005_00006 - 10*shift(res_00007_00006, -9) + aux27)))
c Var 'aux57' direct represents '0' with '-1090'
c Var 'aux57' direct represents '1' with '1090'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-1090'
c Encoding variable: aux58 with domain: bool (representing constraint ((res_00008_00000 + res_00008_00001 - res_00008_00002)<=0))
c Var 'aux58' direct represents '0' with '-1091'
c Var 'aux58' direct represents '1' with '1091'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-1091'
c Encoding variable: aux59 with domain: bool (representing constraint (0<=(res_00008_00000 + res_00008_00001 - res_00008_00002)))
c Var 'aux59' direct represents '0' with '-1092'
c Var 'aux59' direct represents '1' with '1092'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-1092'
c Encoding variable: aux60 with domain: int(0,2,4,6,8,10,12,14,16,18) (representing constraint (res_00000_00004 * res_00000_00005))
c Direct encoding.
c Var 'aux60' direct represents '0' with '1093'
c Var 'aux60' direct represents '2' with '1094'
c Var 'aux60' direct represents '4' with '1095'
c Var 'aux60' direct represents '6' with '1096'
c Var 'aux60' direct represents '8' with '1097'
c Var 'aux60' direct represents '10' with '1098'
c Var 'aux60' direct represents '12' with '1099'
c Var 'aux60' direct represents '14' with '1100'
c Var 'aux60' direct represents '16' with '1101'
c Var 'aux60' direct represents '18' with '1102'
1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 0
-1093 1103 0
-1093 1107 0
-1094 1104 0
-1094 1107 0
-1095 1105 0
-1095 1107 0
-1096 1106 0
-1096 1107 0
-1097 1103 0
-1097 1108 0
-1098 1104 0
-1098 1108 0
-1099 1105 0
-1099 1108 0
-1100 1106 0
-1100 1108 0
-1101 1103 0
-1101 1109 0
-1102 1104 0
-1102 1109 0
-1103 -1104 0
-1103 -1105 0
-1103 -1106 0
-1104 -1105 0
-1104 -1106 0
-1105 -1106 0
-1107 -1108 0
-1107 -1109 0
-1108 -1109 0
c Encoding variable: aux61 with domain: int(0..10,12,14..16,18,20..21,24..25,27..28,30,32,35..36,40,42,45,48..49,54,56,63..64,72,81) (representing constraint (res_00005_00004 * res_00006_00004))
c Direct encoding.
c Var 'aux61' direct represents '0' with '1110'
c Var 'aux61' direct represents '1' with '1111'
c Var 'aux61' direct represents '2' with '1112'
c Var 'aux61' direct represents '3' with '1113'
c Var 'aux61' direct represents '4' with '1114'
c Var 'aux61' direct represents '5' with '1115'
c Var 'aux61' direct represents '6' with '1116'
c Var 'aux61' direct represents '7' with '1117'
c Var 'aux61' direct represents '8' with '1118'
c Var 'aux61' direct represents '9' with '1119'
c Var 'aux61' direct represents '10' with '1120'
c Var 'aux61' direct represents '12' with '1121'
c Var 'aux61' direct represents '14' with '1122'
c Var 'aux61' direct represents '15' with '1123'
c Var 'aux61' direct represents '16' with '1124'
c Var 'aux61' direct represents '18' with '1125'
c Var 'aux61' direct represents '20' with '1126'
c Var 'aux61' direct represents '21' with '1127'
c Var 'aux61' direct represents '24' with '1128'
c Var 'aux61' direct represents '25' with '1129'
c Var 'aux61' direct represents '27' with '1130'
c Var 'aux61' direct represents '28' with '1131'
c Var 'aux61' direct represents '30' with '1132'
c Var 'aux61' direct represents '32' with '1133'
c Var 'aux61' direct represents '35' with '1134'
c Var 'aux61' direct represents '36' with '1135'
c Var 'aux61' direct represents '40' with '1136'
c Var 'aux61' direct represents '42' with '1137'
c Var 'aux61' direct represents '45' with '1138'
c Var 'aux61' direct represents '48' with '1139'
c Var 'aux61' direct represents '49' with '1140'
c Var 'aux61' direct represents '54' with '1141'
c Var 'aux61' direct represents '56' with '1142'
c Var 'aux61' direct represents '63' with '1143'
c Var 'aux61' direct represents '64' with '1144'
c Var 'aux61' direct represents '72' with '1145'
c Var 'aux61' direct represents '81' with '1146'
1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 0
-1110 1147 0
-1110 1154 0
-1111 1148 0
-1111 1154 0
-1112 1149 0
-1112 1154 0
-1113 1150 0
-1113 1154 0
-1114 1151 0
-1114 1154 0
-1115 1152 0
-1115 1154 0
-1116 1153 0
-1116 1154 0
-1117 1147 0
-1117 1155 0
-1118 1148 0
-1118 1155 0
-1119 1149 0
-1119 1155 0
-1120 1150 0
-1120 1155 0
-1121 1151 0
-1121 1155 0
-1122 1152 0
-1122 1155 0
-1123 1153 0
-1123 1155 0
-1124 1147 0
-1124 1156 0
-1125 1148 0
-1125 1156 0
-1126 1149 0
-1126 1156 0
-1127 1150 0
-1127 1156 0
-1128 1151 0
-1128 1156 0
-1129 1152 0
-1129 1156 0
-1130 1153 0
-1130 1156 0
-1131 1147 0
-1131 1157 0
-1132 1148 0
-1132 1157 0
-1133 1149 0
-1133 1157 0
-1134 1150 0
-1134 1157 0
-1135 1151 0
-1135 1157 0
-1136 1152 0
-1136 1157 0
-1137 1153 0
-1137 1157 0
-1138 1147 0
-1138 1158 0
-1139 1148 0
-1139 1158 0
-1140 1149 0
-1140 1158 0
-1141 1150 0
-1141 1158 0
-1142 1151 0
-1142 1158 0
-1143 1152 0
-1143 1158 0
-1144 1153 0
-1144 1158 0
-1145 1147 0
-1145 1159 0
-1146 1148 0
-1146 1159 0
-1147 1160 0
-1147 1163 0
-1148 1161 0
-1148 1163 0
-1149 1162 0
-1149 1163 0
-1150 1160 0
-1150 1164 0
-1151 1161 0
-1151 1164 0
-1152 1162 0
-1152 1164 0
-1153 1160 0
-1153 1165 0
-1160 -1161 0
-1160 -1162 0
-1161 -1162 0
-1163 -1164 0
-1163 -1165 0
-1164 -1165 0
-1154 -1155 0
-1154 -1156 0
-1154 -1157 0
-1154 -1158 0
-1154 -1159 0
-1155 -1156 0
-1155 -1157 0
-1155 -1158 0
-1155 -1159 0
-1156 -1157 0
-1156 -1158 0
-1156 -1159 0
-1157 -1158 0
-1157 -1159 0
-1158 -1159 0
c Encoding variable: aux62 with domain: int(0,2,4,6,8,10,12,14,16,18) (representing constraint (res_00006_00002 * res_00006_00003))
c Direct encoding.
c Var 'aux62' direct represents '0' with '1166'
c Var 'aux62' direct represents '2' with '1167'
c Var 'aux62' direct represents '4' with '1168'
c Var 'aux62' direct represents '6' with '1169'
c Var 'aux62' direct represents '8' with '1170'
c Var 'aux62' direct represents '10' with '1171'
c Var 'aux62' direct represents '12' with '1172'
c Var 'aux62' direct represents '14' with '1173'
c Var 'aux62' direct represents '16' with '1174'
c Var 'aux62' direct represents '18' with '1175'
1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 0
-1166 1176 0
-1166 1180 0
-1167 1177 0
-1167 1180 0
-1168 1178 0
-1168 1180 0
-1169 1179 0
-1169 1180 0
-1170 1176 0
-1170 1181 0
-1171 1177 0
-1171 1181 0
-1172 1178 0
-1172 1181 0
-1173 1179 0
-1173 1181 0
-1174 1176 0
-1174 1182 0
-1175 1177 0
-1175 1182 0
-1176 -1177 0
-1176 -1178 0
-1176 -1179 0
-1177 -1178 0
-1177 -1179 0
-1178 -1179 0
-1180 -1181 0
-1180 -1182 0
-1181 -1182 0
c Encoding variable: aux63 with domain: int(0,3,6,9,12,15,18,21,24,27) (representing constraint (res_00008_00004 * res_00008_00005))
c Direct encoding.
c Var 'aux63' direct represents '0' with '1183'
c Var 'aux63' direct represents '3' with '1184'
c Var 'aux63' direct represents '6' with '1185'
c Var 'aux63' direct represents '9' with '1186'
c Var 'aux63' direct represents '12' with '1187'
c Var 'aux63' direct represents '15' with '1188'
c Var 'aux63' direct represents '18' with '1189'
c Var 'aux63' direct represents '21' with '1190'
c Var 'aux63' direct represents '24' with '1191'
c Var 'aux63' direct represents '27' with '1192'
1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 0
-1183 1193 0
-1183 1197 0
-1184 1194 0
-1184 1197 0
-1185 1195 0
-1185 1197 0
-1186 1196 0
-1186 1197 0
-1187 1193 0
-1187 1198 0
-1188 1194 0
-1188 1198 0
-1189 1195 0
-1189 1198 0
-1190 1196 0
-1190 1198 0
-1191 1193 0
-1191 1199 0
-1192 1194 0
-1192 1199 0
-1193 -1194 0
-1193 -1195 0
-1193 -1196 0
-1194 -1195 0
-1194 -1196 0
-1195 -1196 0
-1197 -1198 0
-1197 -1199 0
-1198 -1199 0
c ((res_00000_00004 * res_00000_00005)=tv=aux60)
-54 -71 1093 0
-56 -71 1094 0
-58 -71 1095 0
-60 -71 1096 0
-62 -71 1097 0
-64 -71 1098 0
-66 -71 1099 0
-68 -71 1100 0
-70 -71 1101 0
69 -71 1102 0
c ((res_00005_00004 * res_00006_00004)=tv=aux61)
-393 -480 1110 0
-393 -481 1110 0
-393 -482 1110 0
-393 -483 1110 0
-393 -484 1110 0
-393 -485 1110 0
-393 -486 1110 0
-393 -487 1110 0
-393 -488 1110 0
-393 -489 1110 0
-395 -480 1110 0
-395 -481 1111 0
-395 -482 1112 0
-395 -483 1113 0
-395 -484 1114 0
-395 -485 1115 0
-395 -486 1116 0
-395 -487 1117 0
-395 -488 1118 0
-395 -489 1119 0
-397 -480 1110 0
-397 -481 1112 0
-397 -482 1114 0
-397 -483 1116 0
-397 -484 1118 0
-397 -485 1120 0
-397 -486 1121 0
-397 -487 1122 0
-397 -488 1124 0
-397 -489 1125 0
-399 -480 1110 0
-399 -481 1113 0
-399 -482 1116 0
-399 -483 1119 0
-399 -484 1121 0
-399 -485 1123 0
-399 -486 1125 0
-399 -487 1127 0
-399 -488 1128 0
-399 -489 1130 0
-401 -480 1110 0
-401 -481 1114 0
-401 -482 1118 0
-401 -483 1121 0
-401 -484 1124 0
-401 -485 1126 0
-401 -486 1128 0
-401 -487 1131 0
-401 -488 1133 0
-401 -489 1135 0
-403 -480 1110 0
-403 -481 1115 0
-403 -482 1120 0
-403 -483 1123 0
-403 -484 1126 0
-403 -485 1129 0
-403 -486 1132 0
-403 -487 1134 0
-403 -488 1136 0
-403 -489 1138 0
-405 -480 1110 0
-405 -481 1116 0
-405 -482 1121 0
-405 -483 1125 0
-405 -484 1128 0
-405 -485 1132 0
-405 -486 1135 0
-405 -487 1137 0
-405 -488 1139 0
-405 -489 1141 0
-407 -480 1110 0
-407 -481 1117 0
-407 -482 1122 0
-407 -483 1127 0
-407 -484 1131 0
-407 -485 1134 0
-407 -486 1137 0
-407 -487 1140 0
-407 -488 1142 0
-407 -489 1143 0
-409 -480 1110 0
-409 -481 1118 0
-409 -482 1124 0
-409 -483 1128 0
-409 -484 1133 0
-409 -485 1136 0
-409 -486 1139 0
-409 -487 1142 0
-409 -488 1144 0
-409 -489 1145 0
408 -480 1110 0
408 -481 1119 0
408 -482 1125 0
408 -483 1130 0
408 -484 1135 0
408 -485 1138 0
408 -486 1141 0
408 -487 1143 0
408 -488 1145 0
408 -489 1146 0
c ((res_00006_00002 * res_00006_00003)=tv=aux62)
-462 -479 1166 0
-464 -479 1167 0
-466 -479 1168 0
-468 -479 1169 0
-470 -479 1170 0
-472 -479 1171 0
-474 -479 1172 0
-476 -479 1173 0
-478 -479 1174 0
477 -479 1175 0
c ((res_00008_00004 * res_00008_00005)=tv=aux63)
-590 -607 1183 0
-592 -607 1184 0
-594 -607 1185 0
-596 -607 1186 0
-598 -607 1187 0
-600 -607 1188 0
-602 -607 1189 0
-604 -607 1190 0
-606 -607 1191 0
605 -607 1192 0
c (((res_00000_00000 - res_00000_00001 - res_00000_00002)<=0)=tv=SATLiteral(1061))
-1061 2 -19 -36 0
-1061 3 -20 -36 0
-1061 3 -19 -37 0
-1061 5 -22 -36 0
-1061 5 -20 -37 0
-1061 5 -19 -39 0
-1061 7 -24 -36 0
-1061 7 -22 -37 0
-1061 7 -20 -39 0
-1061 7 -19 -41 0
-1061 9 -26 -36 0
-1061 9 -24 -37 0
-1061 9 -22 -39 0
-1061 9 -20 -41 0
-1061 9 -19 -43 0
-1061 11 -28 -36 0
-1061 11 -26 -37 0
-1061 11 -24 -39 0
-1061 11 -22 -41 0
-1061 11 -20 -43 0
-1061 11 -19 -45 0
-1061 13 -30 -36 0
-1061 13 -28 -37 0
-1061 13 -26 -39 0
-1061 13 -24 -41 0
-1061 13 -22 -43 0
-1061 13 -20 -45 0
-1061 13 -19 -47 0
-1061 15 -32 -36 0
-1061 15 -30 -37 0
-1061 15 -28 -39 0
-1061 15 -26 -41 0
-1061 15 -24 -43 0
-1061 15 -22 -45 0
-1061 15 -20 -47 0
-1061 15 -19 -49 0
-1061 17 -34 -36 0
-1061 17 -32 -37 0
-1061 17 -30 -39 0
-1061 17 -28 -41 0
-1061 17 -26 -43 0
-1061 17 -24 -45 0
-1061 17 -22 -47 0
-1061 17 -20 -49 0
-1061 17 -19 -51 0
1061 51 0
1061 19 49 0
1061 20 47 0
1061 22 45 0
1061 24 43 0
1061 26 41 0
1061 28 39 0
1061 30 37 0
1061 32 36 0
1061 34 0
1061 -17 49 0
1061 -17 19 47 0
1061 -17 20 45 0
1061 -17 22 43 0
1061 -17 24 41 0
1061 -17 26 39 0
1061 -17 28 37 0
1061 -17 30 36 0
1061 -17 32 0
1061 -17 34 0
1061 -15 47 0
1061 -15 19 45 0
1061 -15 20 43 0
1061 -15 22 41 0
1061 -15 24 39 0
1061 -15 26 37 0
1061 -15 28 36 0
1061 -15 30 0
1061 -15 32 0
1061 -15 34 0
1061 -13 45 0
1061 -13 19 43 0
1061 -13 20 41 0
1061 -13 22 39 0
1061 -13 24 37 0
1061 -13 26 36 0
1061 -13 28 0
1061 -13 30 0
1061 -13 32 0
1061 -13 34 0
1061 -11 43 0
1061 -11 19 41 0
1061 -11 20 39 0
1061 -11 22 37 0
1061 -11 24 36 0
1061 -11 26 0
1061 -11 28 0
1061 -11 30 0
1061 -11 32 0
1061 -11 34 0
1061 -9 41 0
1061 -9 19 39 0
1061 -9 20 37 0
1061 -9 22 36 0
1061 -9 24 0
1061 -9 26 0
1061 -9 28 0
1061 -9 30 0
1061 -9 32 0
1061 -9 34 0
1061 -7 39 0
1061 -7 19 37 0
1061 -7 20 36 0
1061 -7 22 0
1061 -7 24 0
1061 -7 26 0
1061 -7 28 0
1061 -7 30 0
1061 -7 32 0
1061 -7 34 0
1061 -5 37 0
1061 -5 19 36 0
1061 -5 20 0
1061 -5 22 0
1061 -5 24 0
1061 -5 26 0
1061 -5 28 0
1061 -5 30 0
1061 -5 32 0
1061 -5 34 0
1061 -3 36 0
1061 -3 19 0
1061 -3 20 0
1061 -3 22 0
1061 -3 24 0
1061 -3 26 0
1061 -3 28 0
1061 -3 30 0
1061 -3 32 0
1061 -3 34 0
1061 -2 0
1061 -2 19 0
1061 -2 20 0
1061 -2 22 0
1061 -2 24 0
1061 -2 26 0
1061 -2 28 0
1061 -2 30 0
1061 -2 32 0
1061 -2 34 0
c ((0<=(res_00000_00000 - res_00000_00001 - res_00000_00002))=tv=SATLiteral(1062))
-1062 19 51 0
-1062 20 49 0
-1062 22 47 0
-1062 24 45 0
-1062 26 43 0
-1062 28 41 0
-1062 30 39 0
-1062 32 37 0
-1062 34 36 0
-1062 -17 51 0
-1062 -17 19 49 0
-1062 -17 20 47 0
-1062 -17 22 45 0
-1062 -17 24 43 0
-1062 -17 26 41 0
-1062 -17 28 39 0
-1062 -17 30 37 0
-1062 -17 32 36 0
-1062 -17 34 0
-1062 -15 49 0
-1062 -15 19 47 0
-1062 -15 20 45 0
-1062 -15 22 43 0
-1062 -15 24 41 0
-1062 -15 26 39 0
-1062 -15 28 37 0
-1062 -15 30 36 0
-1062 -15 32 0
-1062 -15 34 0
-1062 -13 47 0
-1062 -13 19 45 0
-1062 -13 20 43 0
-1062 -13 22 41 0
-1062 -13 24 39 0
-1062 -13 26 37 0
-1062 -13 28 36 0
-1062 -13 30 0
-1062 -13 32 0
-1062 -13 34 0
-1062 -11 45 0
-1062 -11 19 43 0
-1062 -11 20 41 0
-1062 -11 22 39 0
-1062 -11 24 37 0
-1062 -11 26 36 0
-1062 -11 28 0
-1062 -11 30 0
-1062 -11 32 0
-1062 -11 34 0
-1062 -9 43 0
-1062 -9 19 41 0
-1062 -9 20 39 0
-1062 -9 22 37 0
-1062 -9 24 36 0
-1062 -9 26 0
-1062 -9 28 0
-1062 -9 30 0
-1062 -9 32 0
-1062 -9 34 0
-1062 -7 41 0
-1062 -7 19 39 0
-1062 -7 20 37 0
-1062 -7 22 36 0
-1062 -7 24 0
-1062 -7 26 0
-1062 -7 28 0
-1062 -7 30 0
-1062 -7 32 0
-1062 -7 34 0
-1062 -5 39 0
-1062 -5 19 37 0
-1062 -5 20 36 0
-1062 -5 22 0
-1062 -5 24 0
-1062 -5 26 0
-1062 -5 28 0
-1062 -5 30 0
-1062 -5 32 0
-1062 -5 34 0
-1062 -3 37 0
-1062 -3 19 36 0
-1062 -3 20 0
-1062 -3 22 0
-1062 -3 24 0
-1062 -3 26 0
-1062 -3 28 0
-1062 -3 30 0
-1062 -3 32 0
-1062 -3 34 0
-1062 -2 36 0
-1062 -2 19 0
-1062 -2 20 0
-1062 -2 22 0
-1062 -2 24 0
-1062 -2 26 0
-1062 -2 28 0
-1062 -2 30 0
-1062 -2 32 0
-1062 -2 34 0
1062 -19 -36 0
1062 2 -20 -36 0
1062 2 -19 -37 0
1062 3 -22 -36 0
1062 3 -20 -37 0
1062 3 -19 -39 0
1062 5 -24 -36 0
1062 5 -22 -37 0
1062 5 -20 -39 0
1062 5 -19 -41 0
1062 7 -26 -36 0
1062 7 -24 -37 0
1062 7 -22 -39 0
1062 7 -20 -41 0
1062 7 -19 -43 0
1062 9 -28 -36 0
1062 9 -26 -37 0
1062 9 -24 -39 0
1062 9 -22 -41 0
1062 9 -20 -43 0
1062 9 -19 -45 0
1062 11 -30 -36 0
1062 11 -28 -37 0
1062 11 -26 -39 0
1062 11 -24 -41 0
1062 11 -22 -43 0
1062 11 -20 -45 0
1062 11 -19 -47 0
1062 13 -32 -36 0
1062 13 -30 -37 0
1062 13 -28 -39 0
1062 13 -26 -41 0
1062 13 -24 -43 0
1062 13 -22 -45 0
1062 13 -20 -47 0
1062 13 -19 -49 0
1062 15 -34 -36 0
1062 15 -32 -37 0
1062 15 -30 -39 0
1062 15 -28 -41 0
1062 15 -26 -43 0
1062 15 -24 -45 0
1062 15 -22 -47 0
1062 15 -20 -49 0
1062 15 -19 -51 0
1062 17 -36 0
1062 17 -34 -37 0
1062 17 -32 -39 0
1062 17 -30 -41 0
1062 17 -28 -43 0
1062 17 -26 -45 0
1062 17 -24 -47 0
1062 17 -22 -49 0
1062 17 -20 -51 0
1062 17 -19 0
c ((( - aux0 + 10*res_00002_00000 + res_00003_00000)<=0)=tv=SATLiteral(1063))
-1063 231 -653 0
-1063 232 -654 0
-1063 234 -656 0
-1063 236 -658 0
-1063 238 -660 0
-1063 240 -662 0
-1063 242 -664 0
-1063 244 -666 0
-1063 246 -668 0
-1063 160 -670 0
-1063 160 231 -672 0
-1063 160 232 -672 0
-1063 160 234 -674 0
-1063 160 236 -674 0
-1063 160 238 -676 0
-1063 160 240 -678 0
-1063 160 242 -680 0
-1063 160 244 -680 0
-1063 160 246 -682 0
-1063 161 -682 0
-1063 161 231 -684 0
-1063 161 232 -686 0
-1063 161 234 -686 0
-1063 161 236 -686 0
-1063 161 238 -688 0
-1063 161 240 -690 0
-1063 161 242 -690 0
-1063 161 244 -692 0
-1063 161 246 -694 0
-1063 163 -694 0
-1063 163 231 -696 0
-1063 163 232 -696 0
-1063 163 234 -698 0
-1063 163 236 -698 0
-1063 163 238 -698 0
-1063 163 240 -700 0
-1063 163 242 -702 0
-1063 163 244 -702 0
-1063 163 246 -702 0
-1063 165 -702 0
-1063 165 231 -704 0
-1063 165 232 -704 0
-1063 165 234 -706 0
-1063 165 236 -706 0
-1063 165 238 -706 0
-1063 165 240 -708 0
-1063 165 242 -708 0
-1063 165 244 -708 0
-1063 165 246 -710 0
-1063 167 -712 0
-1063 167 231 -712 0
-1063 167 232 -712 0
-1063 167 234 -712 0
-1063 167 236 -712 0
-1063 167 238 -714 0
-1063 167 240 -714 0
-1063 167 242 -716 0
-1063 167 244 -716 0
-1063 167 246 -716 0
-1063 169 -716 0
-1063 169 231 -716 0
-1063 169 232 -716 0
-1063 169 234 -716 0
-1063 169 236 -718 0
-1063 169 238 -720 0
-1063 169 240 -720 0
-1063 169 242 -720 0
-1063 169 244 -720 0
-1063 169 246 -720 0
-1063 171 -720 0
-1063 171 231 -720 0
-1063 171 232 -720 0
-1063 171 234 -722 0
-1063 171 236 -722 0
-1063 171 238 -722 0
-1063 171 240 -722 0
-1063 171 242 -722 0
-1063 171 244 -722 0
-1063 171 246 -722 0
-1063 173 -722 0
-1063 173 231 -722 0
-1063 173 232 0
-1063 173 234 0
-1063 173 236 0
-1063 173 238 0
-1063 173 240 0
-1063 173 242 0
-1063 173 244 0
-1063 173 246 0
-1063 175 0
-1063 175 231 0
-1063 175 232 0
-1063 175 234 0
-1063 175 236 0
-1063 175 238 0
-1063 175 240 0
-1063 175 242 0
-1063 175 244 0
-1063 175 246 0
1063 -175 -232 722 0
1063 -175 -231 722 0
1063 -173 722 0
1063 -173 -246 722 0
1063 -173 -244 722 0
1063 -173 -242 722 0
1063 -173 -240 722 0
1063 -173 -238 722 0
1063 -173 -236 722 0
1063 -173 -234 720 0
1063 -173 -232 720 0
1063 -173 -231 720 0
1063 -171 720 0
1063 -171 -246 720 0
1063 -171 -244 720 0
1063 -171 -242 720 0
1063 -171 -240 720 0
1063 -171 -238 718 0
1063 -171 -236 716 0
1063 -171 -234 716 0
1063 -171 -232 716 0
1063 -171 -231 716 0
1063 -169 716 0
1063 -169 -246 716 0
1063 -169 -244 716 0
1063 -169 -242 714 0
1063 -169 -240 714 0
1063 -169 -238 712 0
1063 -169 -236 712 0
1063 -169 -234 712 0
1063 -169 -232 712 0
1063 -169 -231 712 0
1063 -167 710 0
1063 -167 -246 708 0
1063 -167 -244 708 0
1063 -167 -242 708 0
1063 -167 -240 706 0
1063 -167 -238 706 0
1063 -167 -236 706 0
1063 -167 -234 704 0
1063 -167 -232 704 0
1063 -167 -231 702 0
1063 -165 702 0
1063 -165 -246 702 0
1063 -165 -244 702 0
1063 -165 -242 700 0
1063 -165 -240 698 0
1063 -165 -238 698 0
1063 -165 -236 698 0
1063 -165 -234 696 0
1063 -165 -232 696 0
1063 -165 -231 694 0
1063 -163 694 0
1063 -163 -246 692 0
1063 -163 -244 690 0
1063 -163 -242 690 0
1063 -163 -240 688 0
1063 -163 -238 686 0
1063 -163 -236 686 0
1063 -163 -234 686 0
1063 -163 -232 684 0
1063 -163 -231 682 0
1063 -161 682 0
1063 -161 -246 680 0
1063 -161 -244 680 0
1063 -161 -242 678 0
1063 -161 -240 676 0
1063 -161 -238 674 0
1063 -161 -236 674 0
1063 -161 -234 672 0
1063 -161 -232 672 0
1063 -161 -231 670 0
1063 -160 668 0
1063 -160 -246 666 0
1063 -160 -244 664 0
1063 -160 -242 662 0
1063 -160 -240 660 0
1063 -160 -238 658 0
1063 -160 -236 656 0
1063 -160 -234 654 0
1063 -160 -232 653 0
1063 -160 -231 0
c ((0<=( - aux0 + 10*res_00002_00000 + res_00003_00000))=tv=SATLiteral(1064))
-1064 -175 -231 722 0
-1064 -173 722 0
-1064 -173 -246 722 0
-1064 -173 -244 722 0
-1064 -173 -242 722 0
-1064 -173 -240 722 0
-1064 -173 -238 722 0
-1064 -173 -236 722 0
-1064 -173 -234 722 0
-1064 -173 -232 720 0
-1064 -173 -231 720 0
-1064 -171 720 0
-1064 -171 -246 720 0
-1064 -171 -244 720 0
-1064 -171 -242 720 0
-1064 -171 -240 720 0
-1064 -171 -238 720 0
-1064 -171 -236 718 0
-1064 -171 -234 716 0
-1064 -171 -232 716 0
-1064 -171 -231 716 0
-1064 -169 716 0
-1064 -169 -246 716 0
-1064 -169 -244 716 0
-1064 -169 -242 716 0
-1064 -169 -240 714 0
-1064 -169 -238 714 0
-1064 -169 -236 712 0
-1064 -169 -234 712 0
-1064 -169 -232 712 0
-1064 -169 -231 712 0
-1064 -167 712 0
-1064 -167 -246 710 0
-1064 -167 -244 708 0
-1064 -167 -242 708 0
-1064 -167 -240 708 0
-1064 -167 -238 706 0
-1064 -167 -236 706 0
-1064 -167 -234 706 0
-1064 -167 -232 704 0
-1064 -167 -231 704 0
-1064 -165 702 0
-1064 -165 -246 702 0
-1064 -165 -244 702 0
-1064 -165 -242 702 0
-1064 -165 -240 700 0
-1064 -165 -238 698 0
-1064 -165 -236 698 0
-1064 -165 -234 698 0
-1064 -165 -232 696 0
-1064 -165 -231 696 0
-1064 -163 694 0
-1064 -163 -246 694 0
-1064 -163 -244 692 0
-1064 -163 -242 690 0
-1064 -163 -240 690 0
-1064 -163 -238 688 0
-1064 -163 -236 686 0
-1064 -163 -234 686 0
-1064 -163 -232 686 0
-1064 -163 -231 684 0
-1064 -161 682 0
-1064 -161 -246 682 0
-1064 -161 -244 680 0
-1064 -161 -242 680 0
-1064 -161 -240 678 0
-1064 -161 -238 676 0
-1064 -161 -236 674 0
-1064 -161 -234 674 0
-1064 -161 -232 672 0
-1064 -161 -231 672 0
-1064 -160 670 0
-1064 -160 -246 668 0
-1064 -160 -244 666 0
-1064 -160 -242 664 0
-1064 -160 -240 662 0
-1064 -160 -238 660 0
-1064 -160 -236 658 0
-1064 -160 -234 656 0
-1064 -160 -232 654 0
-1064 -160 -231 653 0
1064 -653 0
1064 231 -654 0
1064 232 -656 0
1064 234 -658 0
1064 236 -660 0
1064 238 -662 0
1064 240 -664 0
1064 242 -666 0
1064 244 -668 0
1064 246 -670 0
1064 160 -672 0
1064 160 231 -672 0
1064 160 232 -674 0
1064 160 234 -674 0
1064 160 236 -676 0
1064 160 238 -678 0
1064 160 240 -680 0
1064 160 242 -680 0
1064 160 244 -682 0
1064 160 246 -682 0
1064 161 -684 0
1064 161 231 -686 0
1064 161 232 -686 0
1064 161 234 -686 0
1064 161 236 -688 0
1064 161 238 -690 0
1064 161 240 -690 0
1064 161 242 -692 0
1064 161 244 -694 0
1064 161 246 -694 0
1064 163 -696 0
1064 163 231 -696 0
1064 163 232 -698 0
1064 163 234 -698 0
1064 163 236 -698 0
1064 163 238 -700 0
1064 163 240 -702 0
1064 163 242 -702 0
1064 163 244 -702 0
1064 163 246 -702 0
1064 165 -704 0
1064 165 231 -704 0
1064 165 232 -706 0
1064 165 234 -706 0
1064 165 236 -706 0
1064 165 238 -708 0
1064 165 240 -708 0
1064 165 242 -708 0
1064 165 244 -710 0
1064 165 246 -712 0
1064 167 -712 0
1064 167 231 -712 0
1064 167 232 -712 0
1064 167 234 -712 0
1064 167 236 -714 0
1064 167 238 -714 0
1064 167 240 -716 0
1064 167 242 -716 0
1064 167 244 -716 0
1064 167 246 -716 0
1064 169 -716 0
1064 169 231 -716 0
1064 169 232 -716 0
1064 169 234 -718 0
1064 169 236 -720 0
1064 169 238 -720 0
1064 169 240 -720 0
1064 169 242 -720 0
1064 169 244 -720 0
1064 169 246 -720 0
1064 171 -720 0
1064 171 231 -720 0
1064 171 232 -722 0
1064 171 234 -722 0
1064 171 236 -722 0
1064 171 238 -722 0
1064 171 240 -722 0
1064 171 242 -722 0
1064 171 244 -722 0
1064 171 246 -722 0
1064 173 -722 0
1064 173 231 0
1064 173 232 0
1064 173 234 0
1064 173 236 0
1064 173 238 0
1064 173 240 0
1064 173 242 0
1064 173 244 0
1064 173 246 0
1064 175 0
1064 175 231 0
1064 175 232 0
1064 175 234 0
1064 175 236 0
1064 175 238 0
1064 175 240 0
1064 175 242 0
1064 175 244 0
1064 175 246 0
c ((( - aux1 + 10*res_00002_00002 + res_00003_00002)<=0)=tv=SATLiteral(1065))
-1065 265 -724 0
-1065 266 -725 0
-1065 268 -727 0
-1065 270 -729 0
-1065 272 -731 0
-1065 274 -733 0
-1065 276 -735 0
-1065 278 -737 0
-1065 280 -739 0
-1065 178 -741 0
-1065 178 265 -743 0
-1065 178 266 -743 0
-1065 178 268 -745 0
-1065 178 270 -745 0
-1065 178 272 -747 0
-1065 178 274 -749 0
-1065 178 276 -751 0
-1065 178 278 -751 0
-1065 178 280 -753 0
-1065 179 -753 0
-1065 179 265 -755 0
-1065 179 266 -757 0
-1065 179 268 -757 0
-1065 179 270 -757 0
-1065 179 272 -759 0
-1065 179 274 -761 0
-1065 179 276 -761 0
-1065 179 278 -763 0
-1065 179 280 -765 0
-1065 181 -765 0
-1065 181 265 -767 0
-1065 181 266 -767 0
-1065 181 268 -769 0
-1065 181 270 -769 0
-1065 181 272 -769 0
-1065 181 274 -771 0
-1065 181 276 -773 0
-1065 181 278 -773 0
-1065 181 280 -773 0
-1065 183 -773 0
-1065 183 265 -775 0
-1065 183 266 -775 0
-1065 183 268 -777 0
-1065 183 270 -777 0
-1065 183 272 -777 0
-1065 183 274 -779 0
-1065 183 276 -779 0
-1065 183 278 -779 0
-1065 183 280 -781 0
-1065 185 -783 0
-1065 185 265 -783 0
-1065 185 266 -783 0
-1065 185 268 -783 0
-1065 185 270 -783 0
-1065 185 272 -785 0
-1065 185 274 -785 0
-1065 185 276 -787 0
-1065 185 278 -787 0
-1065 185 280 -787 0
-1065 187 -787 0
-1065 187 265 -787 0
-1065 187 266 -787 0
-1065 187 268 -787 0
-1065 187 270 -789 0
-1065 187 272 -791 0
-1065 187 274 -791 0
-1065 187 276 -791 0
-1065 187 278 -791 0
-1065 187 280 -791 0
-1065 189 -791 0
-1065 189 265 -791 0
-1065 189 266 -791 0
-1065 189 268 -793 0
-1065 189 270 -793 0
-1065 189 272 -793 0
-1065 189 274 -793 0
-1065 189 276 -793 0
-1065 189 278 -793 0
-1065 189 280 -793 0
-1065 191 -793 0
-1065 191 265 -793 0
-1065 191 266 0
-1065 191 268 0
-1065 191 270 0
-1065 191 272 0
-1065 191 274 0
-1065 191 276 0
-1065 191 278 0
-1065 191 280 0
-1065 193 0
-1065 193 265 0
-1065 193 266 0
-1065 193 268 0
-1065 193 270 0
-1065 193 272 0
-1065 193 274 0
-1065 193 276 0
-1065 193 278 0
-1065 193 280 0
1065 -193 -266 793 0
1065 -193 -265 793 0
1065 -191 793 0
1065 -191 -280 793 0
1065 -191 -278 793 0
1065 -191 -276 793 0
1065 -191 -274 793 0
1065 -191 -272 793 0
1065 -191 -270 793 0
1065 -191 -268 791 0
1065 -191 -266 791 0
1065 -191 -265 791 0
1065 -189 791 0
1065 -189 -280 791 0
1065 -189 -278 791 0
1065 -189 -276 791 0
1065 -189 -274 791 0
1065 -189 -272 789 0
1065 -189 -270 787 0
1065 -189 -268 787 0
1065 -189 -266 787 0
1065 -189 -265 787 0
1065 -187 787 0
1065 -187 -280 787 0
1065 -187 -278 787 0
1065 -187 -276 785 0
1065 -187 -274 785 0
1065 -187 -272 783 0
1065 -187 -270 783 0
1065 -187 -268 783 0
1065 -187 -266 783 0
1065 -187 -265 783 0
1065 -185 781 0
1065 -185 -280 779 0
1065 -185 -278 779 0
1065 -185 -276 779 0
1065 -185 -274 777 0
1065 -185 -272 777 0
1065 -185 -270 777 0
1065 -185 -268 775 0
1065 -185 -266 775 0
1065 -185 -265 773 0
1065 -183 773 0
1065 -183 -280 773 0
1065 -183 -278 773 0
1065 -183 -276 771 0
1065 -183 -274 769 0
1065 -183 -272 769 0
1065 -183 -270 769 0
1065 -183 -268 767 0
1065 -183 -266 767 0
1065 -183 -265 765 0
1065 -181 765 0
1065 -181 -280 763 0
1065 -181 -278 761 0
1065 -181 -276 761 0
1065 -181 -274 759 0
1065 -181 -272 757 0
1065 -181 -270 757 0
1065 -181 -268 757 0
1065 -181 -266 755 0
1065 -181 -265 753 0
1065 -179 753 0
1065 -179 -280 751 0
1065 -179 -278 751 0
1065 -179 -276 749 0
1065 -179 -274 747 0
1065 -179 -272 745 0
1065 -179 -270 745 0
1065 -179 -268 743 0
1065 -179 -266 743 0
1065 -179 -265 741 0
1065 -178 739 0
1065 -178 -280 737 0
1065 -178 -278 735 0
1065 -178 -276 733 0
1065 -178 -274 731 0
1065 -178 -272 729 0
1065 -178 -270 727 0
1065 -178 -268 725 0
1065 -178 -266 724 0
1065 -178 -265 0
c ((0<=( - aux1 + 10*res_00002_00002 + res_00003_00002))=tv=SATLiteral(1066))
-1066 -193 -265 793 0
-1066 -191 793 0
-1066 -191 -280 793 0
-1066 -191 -278 793 0
-1066 -191 -276 793 0
-1066 -191 -274 793 0
-1066 -191 -272 793 0
-1066 -191 -270 793 0
-1066 -191 -268 793 0
-1066 -191 -266 791 0
-1066 -191 -265 791 0
-1066 -189 791 0
-1066 -189 -280 791 0
-1066 -189 -278 791 0
-1066 -189 -276 791 0
-1066 -189 -274 791 0
-1066 -189 -272 791 0
-1066 -189 -270 789 0
-1066 -189 -268 787 0
-1066 -189 -266 787 0
-1066 -189 -265 787 0
-1066 -187 787 0
-1066 -187 -280 787 0
-1066 -187 -278 787 0
-1066 -187 -276 787 0
-1066 -187 -274 785 0
-1066 -187 -272 785 0
-1066 -187 -270 783 0
-1066 -187 -268 783 0
-1066 -187 -266 783 0
-1066 -187 -265 783 0
-1066 -185 783 0
-1066 -185 -280 781 0
-1066 -185 -278 779 0
-1066 -185 -276 779 0
-1066 -185 -274 779 0
-1066 -185 -272 777 0
-1066 -185 -270 777 0
-1066 -185 -268 777 0
-1066 -185 -266 775 0
-1066 -185 -265 775 0
-1066 -183 773 0
-1066 -183 -280 773 0
-1066 -183 -278 773 0
-1066 -183 -276 773 0
-1066 -183 -274 771 0
-1066 -183 -272 769 0
-1066 -183 -270 769 0
-1066 -183 -268 769 0
-1066 -183 -266 767 0
-1066 -183 -265 767 0
-1066 -181 765 0
-1066 -181 -280 765 0
-1066 -181 -278 763 0
-1066 -181 -276 761 0
-1066 -181 -274 761 0
-1066 -181 -272 759 0
-1066 -181 -270 757 0
-1066 -181 -268 757 0
-1066 -181 -266 757 0
-1066 -181 -265 755 0
-1066 -179 753 0
-1066 -179 -280 753 0
-1066 -179 -278 751 0
-1066 -179 -276 751 0
-1066 -179 -274 749 0
-1066 -179 -272 747 0
-1066 -179 -270 745 0
-1066 -179 -268 745 0
-1066 -179 -266 743 0
-1066 -179 -265 743 0
-1066 -178 741 0
-1066 -178 -280 739 0
-1066 -178 -278 737 0
-1066 -178 -276 735 0
-1066 -178 -274 733 0
-1066 -178 -272 731 0
-1066 -178 -270 729 0
-1066 -178 -268 727 0
-1066 -178 -266 725 0
-1066 -178 -265 724 0
1066 -724 0
1066 265 -725 0
1066 266 -727 0
1066 268 -729 0
1066 270 -731 0
1066 272 -733 0
1066 274 -735 0
1066 276 -737 0
1066 278 -739 0
1066 280 -741 0
1066 178 -743 0
1066 178 265 -743 0
1066 178 266 -745 0
1066 178 268 -745 0
1066 178 270 -747 0
1066 178 272 -749 0
1066 178 274 -751 0
1066 178 276 -751 0
1066 178 278 -753 0
1066 178 280 -753 0
1066 179 -755 0
1066 179 265 -757 0
1066 179 266 -757 0
1066 179 268 -757 0
1066 179 270 -759 0
1066 179 272 -761 0
1066 179 274 -761 0
1066 179 276 -763 0
1066 179 278 -765 0
1066 179 280 -765 0
1066 181 -767 0
1066 181 265 -767 0
1066 181 266 -769 0
1066 181 268 -769 0
1066 181 270 -769 0
1066 181 272 -771 0
1066 181 274 -773 0
1066 181 276 -773 0
1066 181 278 -773 0
1066 181 280 -773 0
1066 183 -775 0
1066 183 265 -775 0
1066 183 266 -777 0
1066 183 268 -777 0
1066 183 270 -777 0
1066 183 272 -779 0
1066 183 274 -779 0
1066 183 276 -779 0
1066 183 278 -781 0
1066 183 280 -783 0
1066 185 -783 0
1066 185 265 -783 0
1066 185 266 -783 0
1066 185 268 -783 0
1066 185 270 -785 0
1066 185 272 -785 0
1066 185 274 -787 0
1066 185 276 -787 0
1066 185 278 -787 0
1066 185 280 -787 0
1066 187 -787 0
1066 187 265 -787 0
1066 187 266 -787 0
1066 187 268 -789 0
1066 187 270 -791 0
1066 187 272 -791 0
1066 187 274 -791 0
1066 187 276 -791 0
1066 187 278 -791 0
1066 187 280 -791 0
1066 189 -791 0
1066 189 265 -791 0
1066 189 266 -793 0
1066 189 268 -793 0
1066 189 270 -793 0
1066 189 272 -793 0
1066 189 274 -793 0
1066 189 276 -793 0
1066 189 278 -793 0
1066 189 280 -793 0
1066 191 -793 0
1066 191 265 0
1066 191 266 0
1066 191 268 0
1066 191 270 0
1066 191 272 0
1066 191 274 0
1066 191 276 0
1066 191 278 0
1066 191 280 0
1066 193 0
1066 193 265 0
1066 193 266 0
1066 193 268 0
1066 193 270 0
1066 193 272 0
1066 193 274 0
1066 193 276 0
1066 193 278 0
1066 193 280 0
c (((res_00001_00004 - 10*shift(res_00002_00004, -9) + aux25)<=99)=tv=SATLiteral(1067))
-1067 -196 991 0
-1067 125 -196 989 0
-1067 126 -197 1007 0
-1067 126 -196 987 0
-1067 128 -197 1005 0
-1067 128 -196 985 0
-1067 130 -197 1003 0
-1067 130 -196 983 0
-1067 132 -197 1001 0
-1067 132 -196 981 0
-1067 134 -197 999 0
-1067 134 -196 979 0
-1067 136 -197 997 0
-1067 136 -196 977 0
-1067 138 -197 995 0
-1067 138 -196 975 0
-1067 140 -197 993 0
-1067 140 -196 974 0
1067 -974 0
1067 196 -993 0
1067 197 0
1067 199 0
1067 201 0
1067 203 0
1067 205 0
1067 207 0
1067 209 0
1067 211 0
1067 -140 -975 0
1067 -140 196 -995 0
1067 -140 197 0
1067 -140 199 0
1067 -140 201 0
1067 -140 203 0
1067 -140 205 0
1067 -140 207 0
1067 -140 209 0
1067 -140 211 0
1067 -138 -977 0
1067 -138 196 -997 0
1067 -138 197 0
1067 -138 199 0
1067 -138 201 0
1067 -138 203 0
1067 -138 205 0
1067 -138 207 0
1067 -138 209 0
1067 -138 211 0
1067 -136 -979 0
1067 -136 196 -999 0
1067 -136 197 0
1067 -136 199 0
1067 -136 201 0
1067 -136 203 0
1067 -136 205 0
1067 -136 207 0
1067 -136 209 0
1067 -136 211 0
1067 -134 -981 0
1067 -134 196 -1001 0
1067 -134 197 0
1067 -134 199 0
1067 -134 201 0
1067 -134 203 0
1067 -134 205 0
1067 -134 207 0
1067 -134 209 0
1067 -134 211 0
1067 -132 -983 0
1067 -132 196 -1003 0
1067 -132 197 0
1067 -132 199 0
1067 -132 201 0
1067 -132 203 0
1067 -132 205 0
1067 -132 207 0
1067 -132 209 0
1067 -132 211 0
1067 -130 -985 0
1067 -130 196 -1005 0
1067 -130 197 0
1067 -130 199 0
1067 -130 201 0
1067 -130 203 0
1067 -130 205 0
1067 -130 207 0
1067 -130 209 0
1067 -130 211 0
1067 -128 -987 0
1067 -128 196 -1007 0
1067 -128 197 0
1067 -128 199 0
1067 -128 201 0
1067 -128 203 0
1067 -128 205 0
1067 -128 207 0
1067 -128 209 0
1067 -128 211 0
1067 -126 -989 0
1067 -126 196 0
1067 -126 197 0
1067 -126 199 0
1067 -126 201 0
1067 -126 203 0
1067 -126 205 0
1067 -126 207 0
1067 -126 209 0
1067 -126 211 0
1067 -125 -991 0
1067 -125 196 0
1067 -125 197 0
1067 -125 199 0
1067 -125 201 0
1067 -125 203 0
1067 -125 205 0
1067 -125 207 0
1067 -125 209 0
1067 -125 211 0
c ((99<=(res_00001_00004 - 10*shift(res_00002_00004, -9) + aux25))=tv=SATLiteral(1068))
-1068 196 -991 0
-1068 197 0
-1068 199 0
-1068 201 0
-1068 203 0
-1068 205 0
-1068 207 0
-1068 209 0
-1068 211 0
-1068 -140 -974 0
-1068 -140 196 -993 0
-1068 -140 197 0
-1068 -140 199 0
-1068 -140 201 0
-1068 -140 203 0
-1068 -140 205 0
-1068 -140 207 0
-1068 -140 209 0
-1068 -140 211 0
-1068 -138 -975 0
-1068 -138 196 -995 0
-1068 -138 197 0
-1068 -138 199 0
-1068 -138 201 0
-1068 -138 203 0
-1068 -138 205 0
-1068 -138 207 0
-1068 -138 209 0
-1068 -138 211 0
-1068 -136 -977 0
-1068 -136 196 -997 0
-1068 -136 197 0
-1068 -136 199 0
-1068 -136 201 0
-1068 -136 203 0
-1068 -136 205 0
-1068 -136 207 0
-1068 -136 209 0
-1068 -136 211 0
-1068 -134 -979 0
-1068 -134 196 -999 0
-1068 -134 197 0
-1068 -134 199 0
-1068 -134 201 0
-1068 -134 203 0
-1068 -134 205 0
-1068 -134 207 0
-1068 -134 209 0
-1068 -134 211 0
-1068 -132 -981 0
-1068 -132 196 -1001 0
-1068 -132 197 0
-1068 -132 199 0
-1068 -132 201 0
-1068 -132 203 0
-1068 -132 205 0
-1068 -132 207 0
-1068 -132 209 0
-1068 -132 211 0
-1068 -130 -983 0
-1068 -130 196 -1003 0
-1068 -130 197 0
-1068 -130 199 0
-1068 -130 201 0
-1068 -130 203 0
-1068 -130 205 0
-1068 -130 207 0
-1068 -130 209 0
-1068 -130 211 0
-1068 -128 -985 0
-1068 -128 196 -1005 0
-1068 -128 197 0
-1068 -128 199 0
-1068 -128 201 0
-1068 -128 203 0
-1068 -128 205 0
-1068 -128 207 0
-1068 -128 209 0
-1068 -128 211 0
-1068 -126 -987 0
-1068 -126 196 -1007 0
-1068 -126 197 0
-1068 -126 199 0
-1068 -126 201 0
-1068 -126 203 0
-1068 -126 205 0
-1068 -126 207 0
-1068 -126 209 0
-1068 -126 211 0
-1068 -125 -989 0
-1068 -125 196 0
-1068 -125 197 0
-1068 -125 199 0
-1068 -125 201 0
-1068 -125 203 0
-1068 -125 205 0
-1068 -125 207 0
-1068 -125 209 0
-1068 -125 211 0
1068 -196 989 0
1068 125 -197 1007 0
1068 125 -196 987 0
1068 126 -197 1005 0
1068 126 -196 985 0
1068 128 -197 1003 0
1068 128 -196 983 0
1068 130 -197 1001 0
1068 130 -196 981 0
1068 132 -197 999 0
1068 132 -196 979 0
1068 134 -197 997 0
1068 134 -196 977 0
1068 136 -197 995 0
1068 136 -196 975 0
1068 138 -197 993 0
1068 138 -196 974 0
1068 140 -197 991 0
1068 140 -196 0
c ((( - aux2 + 10*res_00002_00006 + res_00003_00006)<=0)=tv=SATLiteral(1069))
-1069 317 -795 0
-1069 318 -796 0
-1069 320 -798 0
-1069 322 -800 0
-1069 324 -802 0
-1069 326 -804 0
-1069 328 -806 0
-1069 330 -808 0
-1069 332 -810 0
-1069 214 -812 0
-1069 214 317 -814 0
-1069 214 318 -814 0
-1069 214 320 -816 0
-1069 214 322 -816 0
-1069 214 324 -818 0
-1069 214 326 -820 0
-1069 214 328 -822 0
-1069 214 330 -822 0
-1069 214 332 -824 0
-1069 215 -824 0
-1069 215 317 -826 0
-1069 215 318 -828 0
-1069 215 320 -828 0
-1069 215 322 -828 0
-1069 215 324 -830 0
-1069 215 326 -832 0
-1069 215 328 -832 0
-1069 215 330 -834 0
-1069 215 332 -836 0
-1069 217 -836 0
-1069 217 317 -838 0
-1069 217 318 -838 0
-1069 217 320 -840 0
-1069 217 322 -840 0
-1069 217 324 -840 0
-1069 217 326 -842 0
-1069 217 328 -844 0
-1069 217 330 -844 0
-1069 217 332 -844 0
-1069 219 -844 0
-1069 219 317 -846 0
-1069 219 318 -846 0
-1069 219 320 -848 0
-1069 219 322 -848 0
-1069 219 324 -848 0
-1069 219 326 -850 0
-1069 219 328 -850 0
-1069 219 330 -850 0
-1069 219 332 -852 0
-1069 221 -854 0
-1069 221 317 -854 0
-1069 221 318 -854 0
-1069 221 320 -854 0
-1069 221 322 -854 0
-1069 221 324 -856 0
-1069 221 326 -856 0
-1069 221 328 -858 0
-1069 221 330 -858 0
-1069 221 332 -858 0
-1069 223 -858 0
-1069 223 317 -858 0
-1069 223 318 -858 0
-1069 223 320 -858 0
-1069 223 322 -860 0
-1069 223 324 -862 0
-1069 223 326 -862 0
-1069 223 328 -862 0
-1069 223 330 -862 0
-1069 223 332 -862 0
-1069 225 -862 0
-1069 225 317 -862 0
-1069 225 318 -862 0
-1069 225 320 -864 0
-1069 225 322 -864 0
-1069 225 324 -864 0
-1069 225 326 -864 0
-1069 225 328 -864 0
-1069 225 330 -864 0
-1069 225 332 -864 0
-1069 227 -864 0
-1069 227 317 -864 0
-1069 227 318 0
-1069 227 320 0
-1069 227 322 0
-1069 227 324 0
-1069 227 326 0
-1069 227 328 0
-1069 227 330 0
-1069 227 332 0
-1069 229 0
-1069 229 317 0
-1069 229 318 0
-1069 229 320 0
-1069 229 322 0
-1069 229 324 0
-1069 229 326 0
-1069 229 328 0
-1069 229 330 0
-1069 229 332 0
1069 -229 -318 864 0
1069 -229 -317 864 0
1069 -227 864 0
1069 -227 -332 864 0
1069 -227 -330 864 0
1069 -227 -328 864 0
1069 -227 -326 864 0
1069 -227 -324 864 0
1069 -227 -322 864 0
1069 -227 -320 862 0
1069 -227 -318 862 0
1069 -227 -317 862 0
1069 -225 862 0
1069 -225 -332 862 0
1069 -225 -330 862 0
1069 -225 -328 862 0
1069 -225 -326 862 0
1069 -225 -324 860 0
1069 -225 -322 858 0
1069 -225 -320 858 0
1069 -225 -318 858 0
1069 -225 -317 858 0
1069 -223 858 0
1069 -223 -332 858 0
1069 -223 -330 858 0
1069 -223 -328 856 0
1069 -223 -326 856 0
1069 -223 -324 854 0
1069 -223 -322 854 0
1069 -223 -320 854 0
1069 -223 -318 854 0
1069 -223 -317 854 0
1069 -221 852 0
1069 -221 -332 850 0
1069 -221 -330 850 0
1069 -221 -328 850 0
1069 -221 -326 848 0
1069 -221 -324 848 0
1069 -221 -322 848 0
1069 -221 -320 846 0
1069 -221 -318 846 0
1069 -221 -317 844 0
1069 -219 844 0
1069 -219 -332 844 0
1069 -219 -330 844 0
1069 -219 -328 842 0
1069 -219 -326 840 0
1069 -219 -324 840 0
1069 -219 -322 840 0
1069 -219 -320 838 0
1069 -219 -318 838 0
1069 -219 -317 836 0
1069 -217 836 0
1069 -217 -332 834 0
1069 -217 -330 832 0
1069 -217 -328 832 0
1069 -217 -326 830 0
1069 -217 -324 828 0
1069 -217 -322 828 0
1069 -217 -320 828 0
1069 -217 -318 826 0
1069 -217 -317 824 0
1069 -215 824 0
1069 -215 -332 822 0
1069 -215 -330 822 0
1069 -215 -328 820 0
1069 -215 -326 818 0
1069 -215 -324 816 0
1069 -215 -322 816 0
1069 -215 -320 814 0
1069 -215 -318 814 0
1069 -215 -317 812 0
1069 -214 810 0
1069 -214 -332 808 0
1069 -214 -330 806 0
1069 -214 -328 804 0
1069 -214 -326 802 0
1069 -214 -324 800 0
1069 -214 -322 798 0
1069 -214 -320 796 0
1069 -214 -318 795 0
1069 -214 -317 0
c ((0<=( - aux2 + 10*res_00002_00006 + res_00003_00006))=tv=SATLiteral(1070))
-1070 -229 -317 864 0
-1070 -227 864 0
-1070 -227 -332 864 0
-1070 -227 -330 864 0
-1070 -227 -328 864 0
-1070 -227 -326 864 0
-1070 -227 -324 864 0
-1070 -227 -322 864 0
-1070 -227 -320 864 0
-1070 -227 -318 862 0
-1070 -227 -317 862 0
-1070 -225 862 0
-1070 -225 -332 862 0
-1070 -225 -330 862 0
-1070 -225 -328 862 0
-1070 -225 -326 862 0
-1070 -225 -324 862 0
-1070 -225 -322 860 0
-1070 -225 -320 858 0
-1070 -225 -318 858 0
-1070 -225 -317 858 0
-1070 -223 858 0
-1070 -223 -332 858 0
-1070 -223 -330 858 0
-1070 -223 -328 858 0
-1070 -223 -326 856 0
-1070 -223 -324 856 0
-1070 -223 -322 854 0
-1070 -223 -320 854 0
-1070 -223 -318 854 0
-1070 -223 -317 854 0
-1070 -221 854 0
-1070 -221 -332 852 0
-1070 -221 -330 850 0
-1070 -221 -328 850 0
-1070 -221 -326 850 0
-1070 -221 -324 848 0
-1070 -221 -322 848 0
-1070 -221 -320 848 0
-1070 -221 -318 846 0
-1070 -221 -317 846 0
-1070 -219 844 0
-1070 -219 -332 844 0
-1070 -219 -330 844 0
-1070 -219 -328 844 0
-1070 -219 -326 842 0
-1070 -219 -324 840 0
-1070 -219 -322 840 0
-1070 -219 -320 840 0
-1070 -219 -318 838 0
-1070 -219 -317 838 0
-1070 -217 836 0
-1070 -217 -332 836 0
-1070 -217 -330 834 0
-1070 -217 -328 832 0
-1070 -217 -326 832 0
-1070 -217 -324 830 0
-1070 -217 -322 828 0
-1070 -217 -320 828 0
-1070 -217 -318 828 0
-1070 -217 -317 826 0
-1070 -215 824 0
-1070 -215 -332 824 0
-1070 -215 -330 822 0
-1070 -215 -328 822 0
-1070 -215 -326 820 0
-1070 -215 -324 818 0
-1070 -215 -322 816 0
-1070 -215 -320 816 0
-1070 -215 -318 814 0
-1070 -215 -317 814 0
-1070 -214 812 0
-1070 -214 -332 810 0
-1070 -214 -330 808 0
-1070 -214 -328 806 0
-1070 -214 -326 804 0
-1070 -214 -324 802 0
-1070 -214 -322 800 0
-1070 -214 -320 798 0
-1070 -214 -318 796 0
-1070 -214 -317 795 0
1070 -795 0
1070 317 -796 0
1070 318 -798 0
1070 320 -800 0
1070 322 -802 0
1070 324 -804 0
1070 326 -806 0
1070 328 -808 0
1070 330 -810 0
1070 332 -812 0
1070 214 -814 0
1070 214 317 -814 0
1070 214 318 -816 0
1070 214 320 -816 0
1070 214 322 -818 0
1070 214 324 -820 0
1070 214 326 -822 0
1070 214 328 -822 0
1070 214 330 -824 0
1070 214 332 -824 0
1070 215 -826 0
1070 215 317 -828 0
1070 215 318 -828 0
1070 215 320 -828 0
1070 215 322 -830 0
1070 215 324 -832 0
1070 215 326 -832 0
1070 215 328 -834 0
1070 215 330 -836 0
1070 215 332 -836 0
1070 217 -838 0
1070 217 317 -838 0
1070 217 318 -840 0
1070 217 320 -840 0
1070 217 322 -840 0
1070 217 324 -842 0
1070 217 326 -844 0
1070 217 328 -844 0
1070 217 330 -844 0
1070 217 332 -844 0
1070 219 -846 0
1070 219 317 -846 0
1070 219 318 -848 0
1070 219 320 -848 0
1070 219 322 -848 0
1070 219 324 -850 0
1070 219 326 -850 0
1070 219 328 -850 0
1070 219 330 -852 0
1070 219 332 -854 0
1070 221 -854 0
1070 221 317 -854 0
1070 221 318 -854 0
1070 221 320 -854 0
1070 221 322 -856 0
1070 221 324 -856 0
1070 221 326 -858 0
1070 221 328 -858 0
1070 221 330 -858 0
1070 221 332 -858 0
1070 223 -858 0
1070 223 317 -858 0
1070 223 318 -858 0
1070 223 320 -860 0
1070 223 322 -862 0
1070 223 324 -862 0
1070 223 326 -862 0
1070 223 328 -862 0
1070 223 330 -862 0
1070 223 332 -862 0
1070 225 -862 0
1070 225 317 -862 0
1070 225 318 -864 0
1070 225 320 -864 0
1070 225 322 -864 0
1070 225 324 -864 0
1070 225 326 -864 0
1070 225 328 -864 0
1070 225 330 -864 0
1070 225 332 -864 0
1070 227 -864 0
1070 227 317 0
1070 227 318 0
1070 227 320 0
1070 227 322 0
1070 227 324 0
1070 227 326 0
1070 227 328 0
1070 227 330 0
1070 227 332 0
1070 229 0
1070 229 317 0
1070 229 318 0
1070 229 320 0
1070 229 322 0
1070 229 324 0
1070 229 326 0
1070 229 328 0
1070 229 330 0
1070 229 332 0
c (((res_00001_00002 + res_00001_00003 - res_00001_00004)<=0)=tv=SATLiteral(1071))
-1071 -134 0
-1071 107 -136 0
-1071 108 -138 0
-1071 110 -140 0
-1071 112 0
-1071 114 0
-1071 116 0
-1071 118 0
-1071 120 0
-1071 122 0
1071 -112 140 0
1071 -110 138 0
1071 -108 136 0
1071 -107 134 0
c ((0<=(res_00001_00002 + res_00001_00003 - res_00001_00004))=tv=SATLiteral(1072))
-1072 -110 140 0
-1072 -108 138 0
-1072 -107 136 0
1072 -136 0
1072 107 -138 0
1072 108 -140 0
1072 110 0
1072 112 0
1072 114 0
1072 116 0
1072 118 0
1072 120 0
1072 122 0
c (((res_00003_00000 - res_00003_00001 - res_00003_00002)<=0)=tv=SATLiteral(1073))
-1073 231 -248 -265 0
-1073 232 -249 -265 0
-1073 232 -248 -266 0
-1073 234 -251 -265 0
-1073 234 -249 -266 0
-1073 234 -248 -268 0
-1073 236 -253 -265 0
-1073 236 -251 -266 0
-1073 236 -249 -268 0
-1073 236 -248 -270 0
-1073 238 -255 -265 0
-1073 238 -253 -266 0
-1073 238 -251 -268 0
-1073 238 -249 -270 0
-1073 238 -248 -272 0
-1073 240 -257 -265 0
-1073 240 -255 -266 0
-1073 240 -253 -268 0
-1073 240 -251 -270 0
-1073 240 -249 -272 0
-1073 240 -248 -274 0
-1073 242 -259 -265 0
-1073 242 -257 -266 0
-1073 242 -255 -268 0
-1073 242 -253 -270 0
-1073 242 -251 -272 0
-1073 242 -249 -274 0
-1073 242 -248 -276 0
-1073 244 -261 -265 0
-1073 244 -259 -266 0
-1073 244 -257 -268 0
-1073 244 -255 -270 0
-1073 244 -253 -272 0
-1073 244 -251 -274 0
-1073 244 -249 -276 0
-1073 244 -248 -278 0
-1073 246 -263 -265 0
-1073 246 -261 -266 0
-1073 246 -259 -268 0
-1073 246 -257 -270 0
-1073 246 -255 -272 0
-1073 246 -253 -274 0
-1073 246 -251 -276 0
-1073 246 -249 -278 0
-1073 246 -248 -280 0
1073 280 0
1073 248 278 0
1073 249 276 0
1073 251 274 0
1073 253 272 0
1073 255 270 0
1073 257 268 0
1073 259 266 0
1073 261 265 0
1073 263 0
1073 -246 278 0
1073 -246 248 276 0
1073 -246 249 274 0
1073 -246 251 272 0
1073 -246 253 270 0
1073 -246 255 268 0
1073 -246 257 266 0
1073 -246 259 265 0
1073 -246 261 0
1073 -246 263 0
1073 -244 276 0
1073 -244 248 274 0
1073 -244 249 272 0
1073 -244 251 270 0
1073 -244 253 268 0
1073 -244 255 266 0
1073 -244 257 265 0
1073 -244 259 0
1073 -244 261 0
1073 -244 263 0
1073 -242 274 0
1073 -242 248 272 0
1073 -242 249 270 0
1073 -242 251 268 0
1073 -242 253 266 0
1073 -242 255 265 0
1073 -242 257 0
1073 -242 259 0
1073 -242 261 0
1073 -242 263 0
1073 -240 272 0
1073 -240 248 270 0
1073 -240 249 268 0
1073 -240 251 266 0
1073 -240 253 265 0
1073 -240 255 0
1073 -240 257 0
1073 -240 259 0
1073 -240 261 0
1073 -240 263 0
1073 -238 270 0
1073 -238 248 268 0
1073 -238 249 266 0
1073 -238 251 265 0
1073 -238 253 0
1073 -238 255 0
1073 -238 257 0
1073 -238 259 0
1073 -238 261 0
1073 -238 263 0
1073 -236 268 0
1073 -236 248 266 0
1073 -236 249 265 0
1073 -236 251 0
1073 -236 253 0
1073 -236 255 0
1073 -236 257 0
1073 -236 259 0
1073 -236 261 0
1073 -236 263 0
1073 -234 266 0
1073 -234 248 265 0
1073 -234 249 0
1073 -234 251 0
1073 -234 253 0
1073 -234 255 0
1073 -234 257 0
1073 -234 259 0
1073 -234 261 0
1073 -234 263 0
1073 -232 265 0
1073 -232 248 0
1073 -232 249 0
1073 -232 251 0
1073 -232 253 0
1073 -232 255 0
1073 -232 257 0
1073 -232 259 0
1073 -232 261 0
1073 -232 263 0
1073 -231 0
1073 -231 248 0
1073 -231 249 0
1073 -231 251 0
1073 -231 253 0
1073 -231 255 0
1073 -231 257 0
1073 -231 259 0
1073 -231 261 0
1073 -231 263 0
c ((0<=(res_00003_00000 - res_00003_00001 - res_00003_00002))=tv=SATLiteral(1074))
-1074 248 280 0
-1074 249 278 0
-1074 251 276 0
-1074 253 274 0
-1074 255 272 0
-1074 257 270 0
-1074 259 268 0
-1074 261 266 0
-1074 263 265 0
-1074 -246 280 0
-1074 -246 248 278 0
-1074 -246 249 276 0
-1074 -246 251 274 0
-1074 -246 253 272 0
-1074 -246 255 270 0
-1074 -246 257 268 0
-1074 -246 259 266 0
-1074 -246 261 265 0
-1074 -246 263 0
-1074 -244 278 0
-1074 -244 248 276 0
-1074 -244 249 274 0
-1074 -244 251 272 0
-1074 -244 253 270 0
-1074 -244 255 268 0
-1074 -244 257 266 0
-1074 -244 259 265 0
-1074 -244 261 0
-1074 -244 263 0
-1074 -242 276 0
-1074 -242 248 274 0
-1074 -242 249 272 0
-1074 -242 251 270 0
-1074 -242 253 268 0
-1074 -242 255 266 0
-1074 -242 257 265 0
-1074 -242 259 0
-1074 -242 261 0
-1074 -242 263 0
-1074 -240 274 0
-1074 -240 248 272 0
-1074 -240 249 270 0
-1074 -240 251 268 0
-1074 -240 253 266 0
-1074 -240 255 265 0
-1074 -240 257 0
-1074 -240 259 0
-1074 -240 261 0
-1074 -240 263 0
-1074 -238 272 0
-1074 -238 248 270 0
-1074 -238 249 268 0
-1074 -238 251 266 0
-1074 -238 253 265 0
-1074 -238 255 0
-1074 -238 257 0
-1074 -238 259 0
-1074 -238 261 0
-1074 -238 263 0
-1074 -236 270 0
-1074 -236 248 268 0
-1074 -236 249 266 0
-1074 -236 251 265 0
-1074 -236 253 0
-1074 -236 255 0
-1074 -236 257 0
-1074 -236 259 0
-1074 -236 261 0
-1074 -236 263 0
-1074 -234 268 0
-1074 -234 248 266 0
-1074 -234 249 265 0
-1074 -234 251 0
-1074 -234 253 0
-1074 -234 255 0
-1074 -234 257 0
-1074 -234 259 0
-1074 -234 261 0
-1074 -234 263 0
-1074 -232 266 0
-1074 -232 248 265 0
-1074 -232 249 0
-1074 -232 251 0
-1074 -232 253 0
-1074 -232 255 0
-1074 -232 257 0
-1074 -232 259 0
-1074 -232 261 0
-1074 -232 263 0
-1074 -231 265 0
-1074 -231 248 0
-1074 -231 249 0
-1074 -231 251 0
-1074 -231 253 0
-1074 -231 255 0
-1074 -231 257 0
-1074 -231 259 0
-1074 -231 261 0
-1074 -231 263 0
1074 -248 -265 0
1074 231 -249 -265 0
1074 231 -248 -266 0
1074 232 -251 -265 0
1074 232 -249 -266 0
1074 232 -248 -268 0
1074 234 -253 -265 0
1074 234 -251 -266 0
1074 234 -249 -268 0
1074 234 -248 -270 0
1074 236 -255 -265 0
1074 236 -253 -266 0
1074 236 -251 -268 0
1074 236 -249 -270 0
1074 236 -248 -272 0
1074 238 -257 -265 0
1074 238 -255 -266 0
1074 238 -253 -268 0
1074 238 -251 -270 0
1074 238 -249 -272 0
1074 238 -248 -274 0
1074 240 -259 -265 0
1074 240 -257 -266 0
1074 240 -255 -268 0
1074 240 -253 -270 0
1074 240 -251 -272 0
1074 240 -249 -274 0
1074 240 -248 -276 0
1074 242 -261 -265 0
1074 242 -259 -266 0
1074 242 -257 -268 0
1074 242 -255 -270 0
1074 242 -253 -272 0
1074 242 -251 -274 0
1074 242 -249 -276 0
1074 242 -248 -278 0
1074 244 -263 -265 0
1074 244 -261 -266 0
1074 244 -259 -268 0
1074 244 -257 -270 0
1074 244 -255 -272 0
1074 244 -253 -274 0
1074 244 -251 -276 0
1074 244 -249 -278 0
1074 244 -248 -280 0
1074 246 -265 0
1074 246 -263 -266 0
1074 246 -261 -268 0
1074 246 -259 -270 0
1074 246 -257 -272 0
1074 246 -255 -274 0
1074 246 -253 -276 0
1074 246 -251 -278 0
1074 246 -249 -280 0
1074 246 -248 0
c (((res_00003_00004 + res_00003_00005 - res_00003_00006)<=0)=tv=SATLiteral(1075))
-1075 300 -317 0
-1075 301 -318 0
-1075 303 -320 0
-1075 305 -322 0
-1075 307 -324 0
-1075 309 -326 0
-1075 311 -328 0
-1075 313 -330 0
-1075 315 -332 0
-1075 283 -317 0
-1075 283 300 -318 0
-1075 283 301 -320 0
-1075 283 303 -322 0
-1075 283 305 -324 0
-1075 283 307 -326 0
-1075 283 309 -328 0
-1075 283 311 -330 0
-1075 283 313 -332 0
-1075 283 315 0
-1075 284 -318 0
-1075 284 300 -320 0
-1075 284 301 -322 0
-1075 284 303 -324 0
-1075 284 305 -326 0
-1075 284 307 -328 0
-1075 284 309 -330 0
-1075 284 311 -332 0
-1075 284 313 0
-1075 284 315 0
-1075 286 -320 0
-1075 286 300 -322 0
-1075 286 301 -324 0
-1075 286 303 -326 0
-1075 286 305 -328 0
-1075 286 307 -330 0
-1075 286 309 -332 0
-1075 286 311 0
-1075 286 313 0
-1075 286 315 0
-1075 288 -322 0
-1075 288 300 -324 0
-1075 288 301 -326 0
-1075 288 303 -328 0
-1075 288 305 -330 0
-1075 288 307 -332 0
-1075 288 309 0
-1075 288 311 0
-1075 288 313 0
-1075 288 315 0
-1075 290 -324 0
-1075 290 300 -326 0
-1075 290 301 -328 0
-1075 290 303 -330 0
-1075 290 305 -332 0
-1075 290 307 0
-1075 290 309 0
-1075 290 311 0
-1075 290 313 0
-1075 290 315 0
-1075 292 -326 0
-1075 292 300 -328 0
-1075 292 301 -330 0
-1075 292 303 -332 0
-1075 292 305 0
-1075 292 307 0
-1075 292 309 0
-1075 292 311 0
-1075 292 313 0
-1075 292 315 0
-1075 294 -328 0
-1075 294 300 -330 0
-1075 294 301 -332 0
-1075 294 303 0
-1075 294 305 0
-1075 294 307 0
-1075 294 309 0
-1075 294 311 0
-1075 294 313 0
-1075 294 315 0
-1075 296 -330 0
-1075 296 300 -332 0
-1075 296 301 0
-1075 296 303 0
-1075 296 305 0
-1075 296 307 0
-1075 296 309 0
-1075 296 311 0
-1075 296 313 0
-1075 296 315 0
-1075 298 -332 0
-1075 298 300 0
-1075 298 301 0
-1075 298 303 0
-1075 298 305 0
-1075 298 307 0
-1075 298 309 0
-1075 298 311 0
-1075 298 313 0
-1075 298 315 0
1075 -300 332 0
1075 -298 -301 332 0
1075 -298 -300 330 0
1075 -296 -303 332 0
1075 -296 -301 330 0
1075 -296 -300 328 0
1075 -294 -305 332 0
1075 -294 -303 330 0
1075 -294 -301 328 0
1075 -294 -300 326 0
1075 -292 -307 332 0
1075 -292 -305 330 0
1075 -292 -303 328 0
1075 -292 -301 326 0
1075 -292 -300 324 0
1075 -290 -309 332 0
1075 -290 -307 330 0
1075 -290 -305 328 0
1075 -290 -303 326 0
1075 -290 -301 324 0
1075 -290 -300 322 0
1075 -288 -311 332 0
1075 -288 -309 330 0
1075 -288 -307 328 0
1075 -288 -305 326 0
1075 -288 -303 324 0
1075 -288 -301 322 0
1075 -288 -300 320 0
1075 -286 -313 332 0
1075 -286 -311 330 0
1075 -286 -309 328 0
1075 -286 -307 326 0
1075 -286 -305 324 0
1075 -286 -303 322 0
1075 -286 -301 320 0
1075 -286 -300 318 0
1075 -284 -315 332 0
1075 -284 -313 330 0
1075 -284 -311 328 0
1075 -284 -309 326 0
1075 -284 -307 324 0
1075 -284 -305 322 0
1075 -284 -303 320 0
1075 -284 -301 318 0
1075 -284 -300 317 0
1075 -283 332 0
1075 -283 -315 330 0
1075 -283 -313 328 0
1075 -283 -311 326 0
1075 -283 -309 324 0
1075 -283 -307 322 0
1075 -283 -305 320 0
1075 -283 -303 318 0
1075 -283 -301 317 0
1075 -283 -300 0
c ((0<=(res_00003_00004 + res_00003_00005 - res_00003_00006))=tv=SATLiteral(1076))
-1076 -298 -300 332 0
-1076 -296 -301 332 0
-1076 -296 -300 330 0
-1076 -294 -303 332 0
-1076 -294 -301 330 0
-1076 -294 -300 328 0
-1076 -292 -305 332 0
-1076 -292 -303 330 0
-1076 -292 -301 328 0
-1076 -292 -300 326 0
-1076 -290 -307 332 0
-1076 -290 -305 330 0
-1076 -290 -303 328 0
-1076 -290 -301 326 0
-1076 -290 -300 324 0
-1076 -288 -309 332 0
-1076 -288 -307 330 0
-1076 -288 -305 328 0
-1076 -288 -303 326 0
-1076 -288 -301 324 0
-1076 -288 -300 322 0
-1076 -286 -311 332 0
-1076 -286 -309 330 0
-1076 -286 -307 328 0
-1076 -286 -305 326 0
-1076 -286 -303 324 0
-1076 -286 -301 322 0
-1076 -286 -300 320 0
-1076 -284 -313 332 0
-1076 -284 -311 330 0
-1076 -284 -309 328 0
-1076 -284 -307 326 0
-1076 -284 -305 324 0
-1076 -284 -303 322 0
-1076 -284 -301 320 0
-1076 -284 -300 318 0
-1076 -283 -315 332 0
-1076 -283 -313 330 0
-1076 -283 -311 328 0
-1076 -283 -309 326 0
-1076 -283 -307 324 0
-1076 -283 -305 322 0
-1076 -283 -303 320 0
-1076 -283 -301 318 0
-1076 -283 -300 317 0
1076 -317 0
1076 300 -318 0
1076 301 -320 0
1076 303 -322 0
1076 305 -324 0
1076 307 -326 0
1076 309 -328 0
1076 311 -330 0
1076 313 -332 0
1076 315 0
1076 283 -318 0
1076 283 300 -320 0
1076 283 301 -322 0
1076 283 303 -324 0
1076 283 305 -326 0
1076 283 307 -328 0
1076 283 309 -330 0
1076 283 311 -332 0
1076 283 313 0
1076 283 315 0
1076 284 -320 0
1076 284 300 -322 0
1076 284 301 -324 0
1076 284 303 -326 0
1076 284 305 -328 0
1076 284 307 -330 0
1076 284 309 -332 0
1076 284 311 0
1076 284 313 0
1076 284 315 0
1076 286 -322 0
1076 286 300 -324 0
1076 286 301 -326 0
1076 286 303 -328 0
1076 286 305 -330 0
1076 286 307 -332 0
1076 286 309 0
1076 286 311 0
1076 286 313 0
1076 286 315 0
1076 288 -324 0
1076 288 300 -326 0
1076 288 301 -328 0
1076 288 303 -330 0
1076 288 305 -332 0
1076 288 307 0
1076 288 309 0
1076 288 311 0
1076 288 313 0
1076 288 315 0
1076 290 -326 0
1076 290 300 -328 0
1076 290 301 -330 0
1076 290 303 -332 0
1076 290 305 0
1076 290 307 0
1076 290 309 0
1076 290 311 0
1076 290 313 0
1076 290 315 0
1076 292 -328 0
1076 292 300 -330 0
1076 292 301 -332 0
1076 292 303 0
1076 292 305 0
1076 292 307 0
1076 292 309 0
1076 292 311 0
1076 292 313 0
1076 292 315 0
1076 294 -330 0
1076 294 300 -332 0
1076 294 301 0
1076 294 303 0
1076 294 305 0
1076 294 307 0
1076 294 309 0
1076 294 311 0
1076 294 313 0
1076 294 315 0
1076 296 -332 0
1076 296 300 0
1076 296 301 0
1076 296 303 0
1076 296 305 0
1076 296 307 0
1076 296 309 0
1076 296 311 0
1076 296 313 0
1076 296 315 0
1076 298 0
1076 298 300 0
1076 298 301 0
1076 298 303 0
1076 298 305 0
1076 298 307 0
1076 298 309 0
1076 298 311 0
1076 298 313 0
1076 298 315 0
c ((( - res_00004_00001 - res_00005_00001 + res_00003_00001)<=0)=tv=SATLiteral(1077))
-1077 -358 263 0
1077 -263 0
1077 358 0
1077 359 0
1077 361 0
1077 363 0
1077 365 0
1077 367 0
1077 369 0
1077 371 0
1077 373 0
c ((0<=( - res_00004_00001 - res_00005_00001 + res_00003_00001))=tv=SATLiteral(1078))
-1078 -261 0
-1078 358 -263 0
-1078 359 0
-1078 361 0
-1078 363 0
-1078 365 0
-1078 367 0
-1078 369 0
-1078 371 0
-1078 373 0
1078 -359 263 0
1078 -358 261 0
c ((( - res_00004_00005 - res_00005_00005 + res_00003_00005)<=0)=tv=SATLiteral(1079))
-1079 -411 315 0
-1079 -410 313 0
1079 -313 0
1079 410 -315 0
1079 411 0
1079 413 0
1079 415 0
1079 417 0
1079 419 0
1079 421 0
1079 423 0
1079 425 0
c ((0<=( - res_00004_00005 - res_00005_00005 + res_00003_00005))=tv=SATLiteral(1080))
-1080 -311 0
-1080 410 -313 0
-1080 411 -315 0
-1080 413 0
-1080 415 0
-1080 417 0
-1080 419 0
-1080 421 0
-1080 423 0
-1080 425 0
1080 -413 315 0
1080 -411 313 0
1080 -410 311 0
c (((res_00005_00000 + res_00005_00001 - res_00005_00002)<=0)=tv=SATLiteral(1081))
-1081 358 -375 0
-1081 359 -376 0
-1081 361 -378 0
-1081 363 -380 0
-1081 365 -382 0
-1081 367 -384 0
-1081 369 -386 0
-1081 371 -388 0
-1081 373 -390 0
-1081 341 -375 0
-1081 341 358 -376 0
-1081 341 359 -378 0
-1081 341 361 -380 0
-1081 341 363 -382 0
-1081 341 365 -384 0
-1081 341 367 -386 0
-1081 341 369 -388 0
-1081 341 371 -390 0
-1081 341 373 0
-1081 342 -376 0
-1081 342 358 -378 0
-1081 342 359 -380 0
-1081 342 361 -382 0
-1081 342 363 -384 0
-1081 342 365 -386 0
-1081 342 367 -388 0
-1081 342 369 -390 0
-1081 342 371 0
-1081 342 373 0
-1081 344 -378 0
-1081 344 358 -380 0
-1081 344 359 -382 0
-1081 344 361 -384 0
-1081 344 363 -386 0
-1081 344 365 -388 0
-1081 344 367 -390 0
-1081 344 369 0
-1081 344 371 0
-1081 344 373 0
-1081 346 -380 0
-1081 346 358 -382 0
-1081 346 359 -384 0
-1081 346 361 -386 0
-1081 346 363 -388 0
-1081 346 365 -390 0
-1081 346 367 0
-1081 346 369 0
-1081 346 371 0
-1081 346 373 0
-1081 348 -382 0
-1081 348 358 -384 0
-1081 348 359 -386 0
-1081 348 361 -388 0
-1081 348 363 -390 0
-1081 348 365 0
-1081 348 367 0
-1081 348 369 0
-1081 348 371 0
-1081 348 373 0
-1081 350 -384 0
-1081 350 358 -386 0
-1081 350 359 -388 0
-1081 350 361 -390 0
-1081 350 363 0
-1081 350 365 0
-1081 350 367 0
-1081 350 369 0
-1081 350 371 0
-1081 350 373 0
-1081 352 -386 0
-1081 352 358 -388 0
-1081 352 359 -390 0
-1081 352 361 0
-1081 352 363 0
-1081 352 365 0
-1081 352 367 0
-1081 352 369 0
-1081 352 371 0
-1081 352 373 0
-1081 354 -388 0
-1081 354 358 -390 0
-1081 354 359 0
-1081 354 361 0
-1081 354 363 0
-1081 354 365 0
-1081 354 367 0
-1081 354 369 0
-1081 354 371 0
-1081 354 373 0
-1081 356 -390 0
-1081 356 358 0
-1081 356 359 0
-1081 356 361 0
-1081 356 363 0
-1081 356 365 0
-1081 356 367 0
-1081 356 369 0
-1081 356 371 0
-1081 356 373 0
1081 -358 390 0
1081 -356 -359 390 0
1081 -356 -358 388 0
1081 -354 -361 390 0
1081 -354 -359 388 0
1081 -354 -358 386 0
1081 -352 -363 390 0
1081 -352 -361 388 0
1081 -352 -359 386 0
1081 -352 -358 384 0
1081 -350 -365 390 0
1081 -350 -363 388 0
1081 -350 -361 386 0
1081 -350 -359 384 0
1081 -350 -358 382 0
1081 -348 -367 390 0
1081 -348 -365 388 0
1081 -348 -363 386 0
1081 -348 -361 384 0
1081 -348 -359 382 0
1081 -348 -358 380 0
1081 -346 -369 390 0
1081 -346 -367 388 0
1081 -346 -365 386 0
1081 -346 -363 384 0
1081 -346 -361 382 0
1081 -346 -359 380 0
1081 -346 -358 378 0
1081 -344 -371 390 0
1081 -344 -369 388 0
1081 -344 -367 386 0
1081 -344 -365 384 0
1081 -344 -363 382 0
1081 -344 -361 380 0
1081 -344 -359 378 0
1081 -344 -358 376 0
1081 -342 -373 390 0
1081 -342 -371 388 0
1081 -342 -369 386 0
1081 -342 -367 384 0
1081 -342 -365 382 0
1081 -342 -363 380 0
1081 -342 -361 378 0
1081 -342 -359 376 0
1081 -342 -358 375 0
1081 -341 390 0
1081 -341 -373 388 0
1081 -341 -371 386 0
1081 -341 -369 384 0
1081 -341 -367 382 0
1081 -341 -365 380 0
1081 -341 -363 378 0
1081 -341 -361 376 0
1081 -341 -359 375 0
1081 -341 -358 0
c ((0<=(res_00005_00000 + res_00005_00001 - res_00005_00002))=tv=SATLiteral(1082))
-1082 -356 -358 390 0
-1082 -354 -359 390 0
-1082 -354 -358 388 0
-1082 -352 -361 390 0
-1082 -352 -359 388 0
-1082 -352 -358 386 0
-1082 -350 -363 390 0
-1082 -350 -361 388 0
-1082 -350 -359 386 0
-1082 -350 -358 384 0
-1082 -348 -365 390 0
-1082 -348 -363 388 0
-1082 -348 -361 386 0
-1082 -348 -359 384 0
-1082 -348 -358 382 0
-1082 -346 -367 390 0
-1082 -346 -365 388 0
-1082 -346 -363 386 0
-1082 -346 -361 384 0
-1082 -346 -359 382 0
-1082 -346 -358 380 0
-1082 -344 -369 390 0
-1082 -344 -367 388 0
-1082 -344 -365 386 0
-1082 -344 -363 384 0
-1082 -344 -361 382 0
-1082 -344 -359 380 0
-1082 -344 -358 378 0
-1082 -342 -371 390 0
-1082 -342 -369 388 0
-1082 -342 -367 386 0
-1082 -342 -365 384 0
-1082 -342 -363 382 0
-1082 -342 -361 380 0
-1082 -342 -359 378 0
-1082 -342 -358 376 0
-1082 -341 -373 390 0
-1082 -341 -371 388 0
-1082 -341 -369 386 0
-1082 -341 -367 384 0
-1082 -341 -365 382 0
-1082 -341 -363 380 0
-1082 -341 -361 378 0
-1082 -341 -359 376 0
-1082 -341 -358 375 0
1082 -375 0
1082 358 -376 0
1082 359 -378 0
1082 361 -380 0
1082 363 -382 0
1082 365 -384 0
1082 367 -386 0
1082 369 -388 0
1082 371 -390 0
1082 373 0
1082 341 -376 0
1082 341 358 -378 0
1082 341 359 -380 0
1082 341 361 -382 0
1082 341 363 -384 0
1082 341 365 -386 0
1082 341 367 -388 0
1082 341 369 -390 0
1082 341 371 0
1082 341 373 0
1082 342 -378 0
1082 342 358 -380 0
1082 342 359 -382 0
1082 342 361 -384 0
1082 342 363 -386 0
1082 342 365 -388 0
1082 342 367 -390 0
1082 342 369 0
1082 342 371 0
1082 342 373 0
1082 344 -380 0
1082 344 358 -382 0
1082 344 359 -384 0
1082 344 361 -386 0
1082 344 363 -388 0
1082 344 365 -390 0
1082 344 367 0
1082 344 369 0
1082 344 371 0
1082 344 373 0
1082 346 -382 0
1082 346 358 -384 0
1082 346 359 -386 0
1082 346 361 -388 0
1082 346 363 -390 0
1082 346 365 0
1082 346 367 0
1082 346 369 0
1082 346 371 0
1082 346 373 0
1082 348 -384 0
1082 348 358 -386 0
1082 348 359 -388 0
1082 348 361 -390 0
1082 348 363 0
1082 348 365 0
1082 348 367 0
1082 348 369 0
1082 348 371 0
1082 348 373 0
1082 350 -386 0
1082 350 358 -388 0
1082 350 359 -390 0
1082 350 361 0
1082 350 363 0
1082 350 365 0
1082 350 367 0
1082 350 369 0
1082 350 371 0
1082 350 373 0
1082 352 -388 0
1082 352 358 -390 0
1082 352 359 0
1082 352 361 0
1082 352 363 0
1082 352 365 0
1082 352 367 0
1082 352 369 0
1082 352 371 0
1082 352 373 0
1082 354 -390 0
1082 354 358 0
1082 354 359 0
1082 354 361 0
1082 354 363 0
1082 354 365 0
1082 354 367 0
1082 354 369 0
1082 354 371 0
1082 354 373 0
1082 356 0
1082 356 358 0
1082 356 359 0
1082 356 361 0
1082 356 363 0
1082 356 365 0
1082 356 367 0
1082 356 369 0
1082 356 371 0
1082 356 373 0
c (((res_00005_00004 + res_00005_00005 - res_00005_00006)<=0)=tv=SATLiteral(1083))
-1083 410 -427 0
-1083 411 -428 0
-1083 413 -430 0
-1083 415 -432 0
-1083 417 -434 0
-1083 419 -436 0
-1083 421 -438 0
-1083 423 -440 0
-1083 425 -442 0
-1083 393 -427 0
-1083 393 410 -428 0
-1083 393 411 -430 0
-1083 393 413 -432 0
-1083 393 415 -434 0
-1083 393 417 -436 0
-1083 393 419 -438 0
-1083 393 421 -440 0
-1083 393 423 -442 0
-1083 393 425 0
-1083 394 -428 0
-1083 394 410 -430 0
-1083 394 411 -432 0
-1083 394 413 -434 0
-1083 394 415 -436 0
-1083 394 417 -438 0
-1083 394 419 -440 0
-1083 394 421 -442 0
-1083 394 423 0
-1083 394 425 0
-1083 396 -430 0
-1083 396 410 -432 0
-1083 396 411 -434 0
-1083 396 413 -436 0
-1083 396 415 -438 0
-1083 396 417 -440 0
-1083 396 419 -442 0
-1083 396 421 0
-1083 396 423 0
-1083 396 425 0
-1083 398 -432 0
-1083 398 410 -434 0
-1083 398 411 -436 0
-1083 398 413 -438 0
-1083 398 415 -440 0
-1083 398 417 -442 0
-1083 398 419 0
-1083 398 421 0
-1083 398 423 0
-1083 398 425 0
-1083 400 -434 0
-1083 400 410 -436 0
-1083 400 411 -438 0
-1083 400 413 -440 0
-1083 400 415 -442 0
-1083 400 417 0
-1083 400 419 0
-1083 400 421 0
-1083 400 423 0
-1083 400 425 0
-1083 402 -436 0
-1083 402 410 -438 0
-1083 402 411 -440 0
-1083 402 413 -442 0
-1083 402 415 0
-1083 402 417 0
-1083 402 419 0
-1083 402 421 0
-1083 402 423 0
-1083 402 425 0
-1083 404 -438 0
-1083 404 410 -440 0
-1083 404 411 -442 0
-1083 404 413 0
-1083 404 415 0
-1083 404 417 0
-1083 404 419 0
-1083 404 421 0
-1083 404 423 0
-1083 404 425 0
-1083 406 -440 0
-1083 406 410 -442 0
-1083 406 411 0
-1083 406 413 0
-1083 406 415 0
-1083 406 417 0
-1083 406 419 0
-1083 406 421 0
-1083 406 423 0
-1083 406 425 0
-1083 408 -442 0
-1083 408 410 0
-1083 408 411 0
-1083 408 413 0
-1083 408 415 0
-1083 408 417 0
-1083 408 419 0
-1083 408 421 0
-1083 408 423 0
-1083 408 425 0
1083 -410 442 0
1083 -408 -411 442 0
1083 -408 -410 440 0
1083 -406 -413 442 0
1083 -406 -411 440 0
1083 -406 -410 438 0
1083 -404 -415 442 0
1083 -404 -413 440 0
1083 -404 -411 438 0
1083 -404 -410 436 0
1083 -402 -417 442 0
1083 -402 -415 440 0
1083 -402 -413 438 0
1083 -402 -411 436 0
1083 -402 -410 434 0
1083 -400 -419 442 0
1083 -400 -417 440 0
1083 -400 -415 438 0
1083 -400 -413 436 0
1083 -400 -411 434 0
1083 -400 -410 432 0
1083 -398 -421 442 0
1083 -398 -419 440 0
1083 -398 -417 438 0
1083 -398 -415 436 0
1083 -398 -413 434 0
1083 -398 -411 432 0
1083 -398 -410 430 0
1083 -396 -423 442 0
1083 -396 -421 440 0
1083 -396 -419 438 0
1083 -396 -417 436 0
1083 -396 -415 434 0
1083 -396 -413 432 0
1083 -396 -411 430 0
1083 -396 -410 428 0
1083 -394 -425 442 0
1083 -394 -423 440 0
1083 -394 -421 438 0
1083 -394 -419 436 0
1083 -394 -417 434 0
1083 -394 -415 432 0
1083 -394 -413 430 0
1083 -394 -411 428 0
1083 -394 -410 427 0
1083 -393 442 0
1083 -393 -425 440 0
1083 -393 -423 438 0
1083 -393 -421 436 0
1083 -393 -419 434 0
1083 -393 -417 432 0
1083 -393 -415 430 0
1083 -393 -413 428 0
1083 -393 -411 427 0
1083 -393 -410 0
c ((0<=(res_00005_00004 + res_00005_00005 - res_00005_00006))=tv=SATLiteral(1084))
-1084 -408 -410 442 0
-1084 -406 -411 442 0
-1084 -406 -410 440 0
-1084 -404 -413 442 0
-1084 -404 -411 440 0
-1084 -404 -410 438 0
-1084 -402 -415 442 0
-1084 -402 -413 440 0
-1084 -402 -411 438 0
-1084 -402 -410 436 0
-1084 -400 -417 442 0
-1084 -400 -415 440 0
-1084 -400 -413 438 0
-1084 -400 -411 436 0
-1084 -400 -410 434 0
-1084 -398 -419 442 0
-1084 -398 -417 440 0
-1084 -398 -415 438 0
-1084 -398 -413 436 0
-1084 -398 -411 434 0
-1084 -398 -410 432 0
-1084 -396 -421 442 0
-1084 -396 -419 440 0
-1084 -396 -417 438 0
-1084 -396 -415 436 0
-1084 -396 -413 434 0
-1084 -396 -411 432 0
-1084 -396 -410 430 0
-1084 -394 -423 442 0
-1084 -394 -421 440 0
-1084 -394 -419 438 0
-1084 -394 -417 436 0
-1084 -394 -415 434 0
-1084 -394 -413 432 0
-1084 -394 -411 430 0
-1084 -394 -410 428 0
-1084 -393 -425 442 0
-1084 -393 -423 440 0
-1084 -393 -421 438 0
-1084 -393 -419 436 0
-1084 -393 -417 434 0
-1084 -393 -415 432 0
-1084 -393 -413 430 0
-1084 -393 -411 428 0
-1084 -393 -410 427 0
1084 -427 0
1084 410 -428 0
1084 411 -430 0
1084 413 -432 0
1084 415 -434 0
1084 417 -436 0
1084 419 -438 0
1084 421 -440 0
1084 423 -442 0
1084 425 0
1084 393 -428 0
1084 393 410 -430 0
1084 393 411 -432 0
1084 393 413 -434 0
1084 393 415 -436 0
1084 393 417 -438 0
1084 393 419 -440 0
1084 393 421 -442 0
1084 393 423 0
1084 393 425 0
1084 394 -430 0
1084 394 410 -432 0
1084 394 411 -434 0
1084 394 413 -436 0
1084 394 415 -438 0
1084 394 417 -440 0
1084 394 419 -442 0
1084 394 421 0
1084 394 423 0
1084 394 425 0
1084 396 -432 0
1084 396 410 -434 0
1084 396 411 -436 0
1084 396 413 -438 0
1084 396 415 -440 0
1084 396 417 -442 0
1084 396 419 0
1084 396 421 0
1084 396 423 0
1084 396 425 0
1084 398 -434 0
1084 398 410 -436 0
1084 398 411 -438 0
1084 398 413 -440 0
1084 398 415 -442 0
1084 398 417 0
1084 398 419 0
1084 398 421 0
1084 398 423 0
1084 398 425 0
1084 400 -436 0
1084 400 410 -438 0
1084 400 411 -440 0
1084 400 413 -442 0
1084 400 415 0
1084 400 417 0
1084 400 419 0
1084 400 421 0
1084 400 423 0
1084 400 425 0
1084 402 -438 0
1084 402 410 -440 0
1084 402 411 -442 0
1084 402 413 0
1084 402 415 0
1084 402 417 0
1084 402 419 0
1084 402 421 0
1084 402 423 0
1084 402 425 0
1084 404 -440 0
1084 404 410 -442 0
1084 404 411 0
1084 404 413 0
1084 404 415 0
1084 404 417 0
1084 404 419 0
1084 404 421 0
1084 404 423 0
1084 404 425 0
1084 406 -442 0
1084 406 410 0
1084 406 411 0
1084 406 413 0
1084 406 415 0
1084 406 417 0
1084 406 419 0
1084 406 421 0
1084 406 423 0
1084 406 425 0
1084 408 0
1084 408 410 0
1084 408 411 0
1084 408 413 0
1084 408 415 0
1084 408 417 0
1084 408 419 0
1084 408 421 0
1084 408 423 0
1084 408 425 0
c ((( - aux3 + 10*res_00007_00000 + res_00008_00000)<=0)=tv=SATLiteral(1085))
-1085 554 -866 0
-1085 555 -867 0
-1085 557 -869 0
-1085 559 -871 0
-1085 561 -873 0
-1085 563 -875 0
-1085 565 -877 0
-1085 567 -879 0
-1085 569 -881 0
-1085 499 -883 0
-1085 499 554 -885 0
-1085 499 555 -885 0
-1085 499 557 -887 0
-1085 499 559 -887 0
-1085 499 561 -889 0
-1085 499 563 -891 0
-1085 499 565 -893 0
-1085 499 567 -893 0
-1085 499 569 -895 0
-1085 500 -895 0
-1085 500 554 -897 0
-1085 500 555 -899 0
-1085 500 557 -899 0
-1085 500 559 -899 0
-1085 500 561 -901 0
-1085 500 563 -903 0
-1085 500 565 -903 0
-1085 500 567 -905 0
-1085 500 569 -907 0
-1085 502 -907 0
-1085 502 554 -909 0
-1085 502 555 -909 0
-1085 502 557 -911 0
-1085 502 559 -911 0
-1085 502 561 -911 0
-1085 502 563 -913 0
-1085 502 565 -915 0
-1085 502 567 -915 0
-1085 502 569 -915 0
-1085 504 -915 0
-1085 504 554 -917 0
-1085 504 555 -917 0
-1085 504 557 -919 0
-1085 504 559 -919 0
-1085 504 561 -919 0
-1085 504 563 -921 0
-1085 504 565 -921 0
-1085 504 567 -921 0
-1085 504 569 -923 0
-1085 506 -925 0
-1085 506 554 -925 0
-1085 506 555 -925 0
-1085 506 557 -925 0
-1085 506 559 -925 0
-1085 506 561 -927 0
-1085 506 563 -927 0
-1085 506 565 -929 0
-1085 506 567 -929 0
-1085 506 569 -929 0
-1085 508 -929 0
-1085 508 554 -929 0
-1085 508 555 -929 0
-1085 508 557 -929 0
-1085 508 559 -931 0
-1085 508 561 -933 0
-1085 508 563 -933 0
-1085 508 565 -933 0
-1085 508 567 -933 0
-1085 508 569 -933 0
-1085 510 -933 0
-1085 510 554 -933 0
-1085 510 555 -933 0
-1085 510 557 -935 0
-1085 510 559 -935 0
-1085 510 561 -935 0
-1085 510 563 -935 0
-1085 510 565 -935 0
-1085 510 567 -935 0
-1085 510 569 -935 0
-1085 512 -935 0
-1085 512 554 -935 0
-1085 512 555 0
-1085 512 557 0
-1085 512 559 0
-1085 512 561 0
-1085 512 563 0
-1085 512 565 0
-1085 512 567 0
-1085 512 569 0
-1085 514 0
-1085 514 554 0
-1085 514 555 0
-1085 514 557 0
-1085 514 559 0
-1085 514 561 0
-1085 514 563 0
-1085 514 565 0
-1085 514 567 0
-1085 514 569 0
1085 -514 -555 935 0
1085 -514 -554 935 0
1085 -512 935 0
1085 -512 -569 935 0
1085 -512 -567 935 0
1085 -512 -565 935 0
1085 -512 -563 935 0
1085 -512 -561 935 0
1085 -512 -559 935 0
1085 -512 -557 933 0
1085 -512 -555 933 0
1085 -512 -554 933 0
1085 -510 933 0
1085 -510 -569 933 0
1085 -510 -567 933 0
1085 -510 -565 933 0
1085 -510 -563 933 0
1085 -510 -561 931 0
1085 -510 -559 929 0
1085 -510 -557 929 0
1085 -510 -555 929 0
1085 -510 -554 929 0
1085 -508 929 0
1085 -508 -569 929 0
1085 -508 -567 929 0
1085 -508 -565 927 0
1085 -508 -563 927 0
1085 -508 -561 925 0
1085 -508 -559 925 0
1085 -508 -557 925 0
1085 -508 -555 925 0
1085 -508 -554 925 0
1085 -506 923 0
1085 -506 -569 921 0
1085 -506 -567 921 0
1085 -506 -565 921 0
1085 -506 -563 919 0
1085 -506 -561 919 0
1085 -506 -559 919 0
1085 -506 -557 917 0
1085 -506 -555 917 0
1085 -506 -554 915 0
1085 -504 915 0
1085 -504 -569 915 0
1085 -504 -567 915 0
1085 -504 -565 913 0
1085 -504 -563 911 0
1085 -504 -561 911 0
1085 -504 -559 911 0
1085 -504 -557 909 0
1085 -504 -555 909 0
1085 -504 -554 907 0
1085 -502 907 0
1085 -502 -569 905 0
1085 -502 -567 903 0
1085 -502 -565 903 0
1085 -502 -563 901 0
1085 -502 -561 899 0
1085 -502 -559 899 0
1085 -502 -557 899 0
1085 -502 -555 897 0
1085 -502 -554 895 0
1085 -500 895 0
1085 -500 -569 893 0
1085 -500 -567 893 0
1085 -500 -565 891 0
1085 -500 -563 889 0
1085 -500 -561 887 0
1085 -500 -559 887 0
1085 -500 -557 885 0
1085 -500 -555 885 0
1085 -500 -554 883 0
1085 -499 881 0
1085 -499 -569 879 0
1085 -499 -567 877 0
1085 -499 -565 875 0
1085 -499 -563 873 0
1085 -499 -561 871 0
1085 -499 -559 869 0
1085 -499 -557 867 0
1085 -499 -555 866 0
1085 -499 -554 0
c ((0<=( - aux3 + 10*res_00007_00000 + res_00008_00000))=tv=SATLiteral(1086))
-1086 -514 -554 935 0
-1086 -512 935 0
-1086 -512 -569 935 0
-1086 -512 -567 935 0
-1086 -512 -565 935 0
-1086 -512 -563 935 0
-1086 -512 -561 935 0
-1086 -512 -559 935 0
-1086 -512 -557 935 0
-1086 -512 -555 933 0
-1086 -512 -554 933 0
-1086 -510 933 0
-1086 -510 -569 933 0
-1086 -510 -567 933 0
-1086 -510 -565 933 0
-1086 -510 -563 933 0
-1086 -510 -561 933 0
-1086 -510 -559 931 0
-1086 -510 -557 929 0
-1086 -510 -555 929 0
-1086 -510 -554 929 0
-1086 -508 929 0
-1086 -508 -569 929 0
-1086 -508 -567 929 0
-1086 -508 -565 929 0
-1086 -508 -563 927 0
-1086 -508 -561 927 0
-1086 -508 -559 925 0
-1086 -508 -557 925 0
-1086 -508 -555 925 0
-1086 -508 -554 925 0
-1086 -506 925 0
-1086 -506 -569 923 0
-1086 -506 -567 921 0
-1086 -506 -565 921 0
-1086 -506 -563 921 0
-1086 -506 -561 919 0
-1086 -506 -559 919 0
-1086 -506 -557 919 0
-1086 -506 -555 917 0
-1086 -506 -554 917 0
-1086 -504 915 0
-1086 -504 -569 915 0
-1086 -504 -567 915 0
-1086 -504 -565 915 0
-1086 -504 -563 913 0
-1086 -504 -561 911 0
-1086 -504 -559 911 0
-1086 -504 -557 911 0
-1086 -504 -555 909 0
-1086 -504 -554 909 0
-1086 -502 907 0
-1086 -502 -569 907 0
-1086 -502 -567 905 0
-1086 -502 -565 903 0
-1086 -502 -563 903 0
-1086 -502 -561 901 0
-1086 -502 -559 899 0
-1086 -502 -557 899 0
-1086 -502 -555 899 0
-1086 -502 -554 897 0
-1086 -500 895 0
-1086 -500 -569 895 0
-1086 -500 -567 893 0
-1086 -500 -565 893 0
-1086 -500 -563 891 0
-1086 -500 -561 889 0
-1086 -500 -559 887 0
-1086 -500 -557 887 0
-1086 -500 -555 885 0
-1086 -500 -554 885 0
-1086 -499 883 0
-1086 -499 -569 881 0
-1086 -499 -567 879 0
-1086 -499 -565 877 0
-1086 -499 -563 875 0
-1086 -499 -561 873 0
-1086 -499 -559 871 0
-1086 -499 -557 869 0
-1086 -499 -555 867 0
-1086 -499 -554 866 0
1086 -866 0
1086 554 -867 0
1086 555 -869 0
1086 557 -871 0
1086 559 -873 0
1086 561 -875 0
1086 563 -877 0
1086 565 -879 0
1086 567 -881 0
1086 569 -883 0
1086 499 -885 0
1086 499 554 -885 0
1086 499 555 -887 0
1086 499 557 -887 0
1086 499 559 -889 0
1086 499 561 -891 0
1086 499 563 -893 0
1086 499 565 -893 0
1086 499 567 -895 0
1086 499 569 -895 0
1086 500 -897 0
1086 500 554 -899 0
1086 500 555 -899 0
1086 500 557 -899 0
1086 500 559 -901 0
1086 500 561 -903 0
1086 500 563 -903 0
1086 500 565 -905 0
1086 500 567 -907 0
1086 500 569 -907 0
1086 502 -909 0
1086 502 554 -909 0
1086 502 555 -911 0
1086 502 557 -911 0
1086 502 559 -911 0
1086 502 561 -913 0
1086 502 563 -915 0
1086 502 565 -915 0
1086 502 567 -915 0
1086 502 569 -915 0
1086 504 -917 0
1086 504 554 -917 0
1086 504 555 -919 0
1086 504 557 -919 0
1086 504 559 -919 0
1086 504 561 -921 0
1086 504 563 -921 0
1086 504 565 -921 0
1086 504 567 -923 0
1086 504 569 -925 0
1086 506 -925 0
1086 506 554 -925 0
1086 506 555 -925 0
1086 506 557 -925 0
1086 506 559 -927 0
1086 506 561 -927 0
1086 506 563 -929 0
1086 506 565 -929 0
1086 506 567 -929 0
1086 506 569 -929 0
1086 508 -929 0
1086 508 554 -929 0
1086 508 555 -929 0
1086 508 557 -931 0
1086 508 559 -933 0
1086 508 561 -933 0
1086 508 563 -933 0
1086 508 565 -933 0
1086 508 567 -933 0
1086 508 569 -933 0
1086 510 -933 0
1086 510 554 -933 0
1086 510 555 -935 0
1086 510 557 -935 0
1086 510 559 -935 0
1086 510 561 -935 0
1086 510 563 -935 0
1086 510 565 -935 0
1086 510 567 -935 0
1086 510 569 -935 0
1086 512 -935 0
1086 512 554 0
1086 512 555 0
1086 512 557 0
1086 512 559 0
1086 512 561 0
1086 512 563 0
1086 512 565 0
1086 512 567 0
1086 512 569 0
1086 514 0
1086 514 554 0
1086 514 555 0
1086 514 557 0
1086 514 559 0
1086 514 561 0
1086 514 563 0
1086 514 565 0
1086 514 567 0
1086 514 569 0
c (((res_00006_00002 - 10*shift(res_00007_00002, -9) + aux26)<=99)=tv=SATLiteral(1087))
-1087 -517 1026 0
-1087 462 -517 1024 0
-1087 463 -518 1042 0
-1087 463 -517 1022 0
-1087 465 -518 1040 0
-1087 465 -517 1020 0
-1087 467 -518 1038 0
-1087 467 -517 1018 0
-1087 469 -518 1036 0
-1087 469 -517 1016 0
-1087 471 -518 1034 0
-1087 471 -517 1014 0
-1087 473 -518 1032 0
-1087 473 -517 1012 0
-1087 475 -518 1030 0
-1087 475 -517 1010 0
-1087 477 -518 1028 0
-1087 477 -517 1009 0
1087 -1009 0
1087 517 -1028 0
1087 518 0
1087 520 0
1087 522 0
1087 524 0
1087 526 0
1087 528 0
1087 530 0
1087 532 0
1087 -477 -1010 0
1087 -477 517 -1030 0
1087 -477 518 0
1087 -477 520 0
1087 -477 522 0
1087 -477 524 0
1087 -477 526 0
1087 -477 528 0
1087 -477 530 0
1087 -477 532 0
1087 -475 -1012 0
1087 -475 517 -1032 0
1087 -475 518 0
1087 -475 520 0
1087 -475 522 0
1087 -475 524 0
1087 -475 526 0
1087 -475 528 0
1087 -475 530 0
1087 -475 532 0
1087 -473 -1014 0
1087 -473 517 -1034 0
1087 -473 518 0
1087 -473 520 0
1087 -473 522 0
1087 -473 524 0
1087 -473 526 0
1087 -473 528 0
1087 -473 530 0
1087 -473 532 0
1087 -471 -1016 0
1087 -471 517 -1036 0
1087 -471 518 0
1087 -471 520 0
1087 -471 522 0
1087 -471 524 0
1087 -471 526 0
1087 -471 528 0
1087 -471 530 0
1087 -471 532 0
1087 -469 -1018 0
1087 -469 517 -1038 0
1087 -469 518 0
1087 -469 520 0
1087 -469 522 0
1087 -469 524 0
1087 -469 526 0
1087 -469 528 0
1087 -469 530 0
1087 -469 532 0
1087 -467 -1020 0
1087 -467 517 -1040 0
1087 -467 518 0
1087 -467 520 0
1087 -467 522 0
1087 -467 524 0
1087 -467 526 0
1087 -467 528 0
1087 -467 530 0
1087 -467 532 0
1087 -465 -1022 0
1087 -465 517 -1042 0
1087 -465 518 0
1087 -465 520 0
1087 -465 522 0
1087 -465 524 0
1087 -465 526 0
1087 -465 528 0
1087 -465 530 0
1087 -465 532 0
1087 -463 -1024 0
1087 -463 517 0
1087 -463 518 0
1087 -463 520 0
1087 -463 522 0
1087 -463 524 0
1087 -463 526 0
1087 -463 528 0
1087 -463 530 0
1087 -463 532 0
1087 -462 -1026 0
1087 -462 517 0
1087 -462 518 0
1087 -462 520 0
1087 -462 522 0
1087 -462 524 0
1087 -462 526 0
1087 -462 528 0
1087 -462 530 0
1087 -462 532 0
c ((99<=(res_00006_00002 - 10*shift(res_00007_00002, -9) + aux26))=tv=SATLiteral(1088))
-1088 517 -1026 0
-1088 518 0
-1088 520 0
-1088 522 0
-1088 524 0
-1088 526 0
-1088 528 0
-1088 530 0
-1088 532 0
-1088 -477 -1009 0
-1088 -477 517 -1028 0
-1088 -477 518 0
-1088 -477 520 0
-1088 -477 522 0
-1088 -477 524 0
-1088 -477 526 0
-1088 -477 528 0
-1088 -477 530 0
-1088 -477 532 0
-1088 -475 -1010 0
-1088 -475 517 -1030 0
-1088 -475 518 0
-1088 -475 520 0
-1088 -475 522 0
-1088 -475 524 0
-1088 -475 526 0
-1088 -475 528 0
-1088 -475 530 0
-1088 -475 532 0
-1088 -473 -1012 0
-1088 -473 517 -1032 0
-1088 -473 518 0
-1088 -473 520 0
-1088 -473 522 0
-1088 -473 524 0
-1088 -473 526 0
-1088 -473 528 0
-1088 -473 530 0
-1088 -473 532 0
-1088 -471 -1014 0
-1088 -471 517 -1034 0
-1088 -471 518 0
-1088 -471 520 0
-1088 -471 522 0
-1088 -471 524 0
-1088 -471 526 0
-1088 -471 528 0
-1088 -471 530 0
-1088 -471 532 0
-1088 -469 -1016 0
-1088 -469 517 -1036 0
-1088 -469 518 0
-1088 -469 520 0
-1088 -469 522 0
-1088 -469 524 0
-1088 -469 526 0
-1088 -469 528 0
-1088 -469 530 0
-1088 -469 532 0
-1088 -467 -1018 0
-1088 -467 517 -1038 0
-1088 -467 518 0
-1088 -467 520 0
-1088 -467 522 0
-1088 -467 524 0
-1088 -467 526 0
-1088 -467 528 0
-1088 -467 530 0
-1088 -467 532 0
-1088 -465 -1020 0
-1088 -465 517 -1040 0
-1088 -465 518 0
-1088 -465 520 0
-1088 -465 522 0
-1088 -465 524 0
-1088 -465 526 0
-1088 -465 528 0
-1088 -465 530 0
-1088 -465 532 0
-1088 -463 -1022 0
-1088 -463 517 -1042 0
-1088 -463 518 0
-1088 -463 520 0
-1088 -463 522 0
-1088 -463 524 0
-1088 -463 526 0
-1088 -463 528 0
-1088 -463 530 0
-1088 -463 532 0
-1088 -462 -1024 0
-1088 -462 517 0
-1088 -462 518 0
-1088 -462 520 0
-1088 -462 522 0
-1088 -462 524 0
-1088 -462 526 0
-1088 -462 528 0
-1088 -462 530 0
-1088 -462 532 0
1088 -517 1024 0
1088 462 -518 1042 0
1088 462 -517 1022 0
1088 463 -518 1040 0
1088 463 -517 1020 0
1088 465 -518 1038 0
1088 465 -517 1018 0
1088 467 -518 1036 0
1088 467 -517 1016 0
1088 469 -518 1034 0
1088 469 -517 1014 0
1088 471 -518 1032 0
1088 471 -517 1012 0
1088 473 -518 1030 0
1088 473 -517 1010 0
1088 475 -518 1028 0
1088 475 -517 1009 0
1088 477 -518 1026 0
1088 477 -517 0
c (((res_00005_00006 - 10*shift(res_00007_00006, -9) + aux27)<=95)=tv=SATLiteral(1089))
-1089 -537 1053 0
-1089 427 -537 1051 0
-1089 428 -537 1049 0
-1089 430 -537 1047 0
-1089 432 -537 1045 0
-1089 434 -537 1044 0
-1089 436 -537 0
-1089 438 -538 1059 0
-1089 438 -537 0
-1089 440 -538 1057 0
-1089 440 -537 0
-1089 442 -538 1055 0
-1089 442 -537 0
1089 537 -1055 0
1089 538 0
1089 540 0
1089 542 0
1089 544 0
1089 546 0
1089 548 0
1089 550 0
1089 552 0
1089 -442 537 -1057 0
1089 -442 538 0
1089 -442 540 0
1089 -442 542 0
1089 -442 544 0
1089 -442 546 0
1089 -442 548 0
1089 -442 550 0
1089 -442 552 0
1089 -440 537 -1059 0
1089 -440 538 0
1089 -440 540 0
1089 -440 542 0
1089 -440 544 0
1089 -440 546 0
1089 -440 548 0
1089 -440 550 0
1089 -440 552 0
1089 -438 537 0
1089 -438 538 0
1089 -438 540 0
1089 -438 542 0
1089 -438 544 0
1089 -438 546 0
1089 -438 548 0
1089 -438 550 0
1089 -438 552 0
1089 -436 -1044 0
1089 -436 537 0
1089 -436 538 0
1089 -436 540 0
1089 -436 542 0
1089 -436 544 0
1089 -436 546 0
1089 -436 548 0
1089 -436 550 0
1089 -436 552 0
1089 -434 -1045 0
1089 -434 537 0
1089 -434 538 0
1089 -434 540 0
1089 -434 542 0
1089 -434 544 0
1089 -434 546 0
1089 -434 548 0
1089 -434 550 0
1089 -434 552 0
1089 -432 -1047 0
1089 -432 537 0
1089 -432 538 0
1089 -432 540 0
1089 -432 542 0
1089 -432 544 0
1089 -432 546 0
1089 -432 548 0
1089 -432 550 0
1089 -432 552 0
1089 -430 -1049 0
1089 -430 537 0
1089 -430 538 0
1089 -430 540 0
1089 -430 542 0
1089 -430 544 0
1089 -430 546 0
1089 -430 548 0
1089 -430 550 0
1089 -430 552 0
1089 -428 -1051 0
1089 -428 537 0
1089 -428 538 0
1089 -428 540 0
1089 -428 542 0
1089 -428 544 0
1089 -428 546 0
1089 -428 548 0
1089 -428 550 0
1089 -428 552 0
1089 -427 -1053 0
1089 -427 537 0
1089 -427 538 0
1089 -427 540 0
1089 -427 542 0
1089 -427 544 0
1089 -427 546 0
1089 -427 548 0
1089 -427 550 0
1089 -427 552 0
c ((95<=(res_00005_00006 - 10*shift(res_00007_00006, -9) + aux27))=tv=SATLiteral(1090))
-1090 537 -1053 0
-1090 538 0
-1090 540 0
-1090 542 0
-1090 544 0
-1090 546 0
-1090 548 0
-1090 550 0
-1090 552 0
-1090 -442 537 -1055 0
-1090 -442 538 0
-1090 -442 540 0
-1090 -442 542 0
-1090 -442 544 0
-1090 -442 546 0
-1090 -442 548 0
-1090 -442 550 0
-1090 -442 552 0
-1090 -440 537 -1057 0
-1090 -440 538 0
-1090 -440 540 0
-1090 -440 542 0
-1090 -440 544 0
-1090 -440 546 0
-1090 -440 548 0
-1090 -440 550 0
-1090 -440 552 0
-1090 -438 537 -1059 0
-1090 -438 538 0
-1090 -438 540 0
-1090 -438 542 0
-1090 -438 544 0
-1090 -438 546 0
-1090 -438 548 0
-1090 -438 550 0
-1090 -438 552 0
-1090 -436 537 0
-1090 -436 538 0
-1090 -436 540 0
-1090 -436 542 0
-1090 -436 544 0
-1090 -436 546 0
-1090 -436 548 0
-1090 -436 550 0
-1090 -436 552 0
-1090 -434 -1044 0
-1090 -434 537 0
-1090 -434 538 0
-1090 -434 540 0
-1090 -434 542 0
-1090 -434 544 0
-1090 -434 546 0
-1090 -434 548 0
-1090 -434 550 0
-1090 -434 552 0
-1090 -432 -1045 0
-1090 -432 537 0
-1090 -432 538 0
-1090 -432 540 0
-1090 -432 542 0
-1090 -432 544 0
-1090 -432 546 0
-1090 -432 548 0
-1090 -432 550 0
-1090 -432 552 0
-1090 -430 -1047 0
-1090 -430 537 0
-1090 -430 538 0
-1090 -430 540 0
-1090 -430 542 0
-1090 -430 544 0
-1090 -430 546 0
-1090 -430 548 0
-1090 -430 550 0
-1090 -430 552 0
-1090 -428 -1049 0
-1090 -428 537 0
-1090 -428 538 0
-1090 -428 540 0
-1090 -428 542 0
-1090 -428 544 0
-1090 -428 546 0
-1090 -428 548 0
-1090 -428 550 0
-1090 -428 552 0
-1090 -427 -1051 0
-1090 -427 537 0
-1090 -427 538 0
-1090 -427 540 0
-1090 -427 542 0
-1090 -427 544 0
-1090 -427 546 0
-1090 -427 548 0
-1090 -427 550 0
-1090 -427 552 0
1090 -537 1051 0
1090 427 -537 1049 0
1090 428 -537 1047 0
1090 430 -537 1045 0
1090 432 -537 1044 0
1090 434 -537 0
1090 436 -538 1059 0
1090 436 -537 0
1090 438 -538 1057 0
1090 438 -537 0
1090 440 -538 1055 0
1090 440 -537 0
1090 442 -538 1053 0
1090 442 -537 0
c (((res_00008_00000 + res_00008_00001 - res_00008_00002)<=0)=tv=SATLiteral(1091))
-1091 -572 0
-1091 554 -573 0
-1091 555 -575 0
-1091 557 -577 0
-1091 559 -579 0
-1091 561 -581 0
-1091 563 -583 0
-1091 565 -585 0
-1091 567 -587 0
-1091 569 0
1091 -569 587 0
1091 -567 585 0
1091 -565 583 0
1091 -563 581 0
1091 -561 579 0
1091 -559 577 0
1091 -557 575 0
1091 -555 573 0
1091 -554 572 0
c ((0<=(res_00008_00000 + res_00008_00001 - res_00008_00002))=tv=SATLiteral(1092))
-1092 -567 587 0
-1092 -565 585 0
-1092 -563 583 0
-1092 -561 581 0
-1092 -559 579 0
-1092 -557 577 0
-1092 -555 575 0
-1092 -554 573 0
1092 -573 0
1092 554 -575 0
1092 555 -577 0
1092 557 -579 0
1092 559 -581 0
1092 561 -583 0
1092 563 -585 0
1092 565 -587 0
1092 567 0
1092 569 0
c ((SATLiteral(1061) /\ SATLiteral(1062))=tv=SATLiteral(954))
954 -1061 -1062 0
1061 -954 0
1062 -954 0
c ((aux60=res_00000_00006)=tv=SATLiteral(955))
-1093 72 -955 0
-1094 74 -955 0
-1095 76 -955 0
-1096 78 -955 0
-1097 80 -955 0
-1098 -955 0
-1099 -955 0
-1100 -955 0
-1101 -955 0
-1102 -955 0
-72 1093 -955 0
-73 -955 0
-74 1094 -955 0
-75 -955 0
-76 1095 -955 0
-77 -955 0
-78 1096 -955 0
-79 -955 0
-80 1097 -955 0
-81 -955 0
-1093 -72 955 0
-1094 -74 955 0
-1095 -76 955 0
-1096 -78 955 0
-1097 -80 955 0
c ((SATLiteral(1063) /\ SATLiteral(1064))=tv=SATLiteral(956))
956 -1063 -1064 0
1063 -956 0
1064 -956 0
c ((SATLiteral(1065) /\ SATLiteral(1066))=tv=SATLiteral(957))
957 -1065 -1066 0
1065 -957 0
1066 -957 0
c ((SATLiteral(1067) /\ SATLiteral(1068))=tv=SATLiteral(958))
958 -1067 -1068 0
1067 -958 0
1068 -958 0
c ((SATLiteral(1069) /\ SATLiteral(1070))=tv=SATLiteral(959))
959 -1069 -1070 0
1069 -959 0
1070 -959 0
c ((SATLiteral(1071) /\ SATLiteral(1072))=tv=SATLiteral(960))
960 -1071 -1072 0
1071 -960 0
1072 -960 0
c ((SATLiteral(1073) /\ SATLiteral(1074))=tv=SATLiteral(961))
961 -1073 -1074 0
1073 -961 0
1074 -961 0
c ((SATLiteral(1075) /\ SATLiteral(1076))=tv=SATLiteral(962))
962 -1075 -1076 0
1075 -962 0
1076 -962 0
c ((SATLiteral(1077) /\ SATLiteral(1078))=tv=SATLiteral(963))
963 -1077 -1078 0
1077 -963 0
1078 -963 0
c ((SATLiteral(1079) /\ SATLiteral(1080))=tv=SATLiteral(964))
964 -1079 -1080 0
1079 -964 0
1080 -964 0
c ((SATLiteral(1081) /\ SATLiteral(1082))=tv=SATLiteral(965))
965 -1081 -1082 0
1081 -965 0
1082 -965 0
c ((SATLiteral(1083) /\ SATLiteral(1084))=tv=SATLiteral(966))
966 -1083 -1084 0
1083 -966 0
1084 -966 0
c ((SATLiteral(1085) /\ SATLiteral(1086))=tv=SATLiteral(967))
967 -1085 -1086 0
1085 -967 0
1086 -967 0
c ((SATLiteral(1087) /\ SATLiteral(1088))=tv=SATLiteral(968))
968 -1087 -1088 0
1087 -968 0
1088 -968 0
c ((aux61=aux4)=tv=SATLiteral(969))
-1110 -969 0
-1111 -969 0
-1112 -969 0
-1113 -969 0
-1114 -969 0
-1115 -969 0
-1116 -969 0
-1117 -969 0
-1118 -969 0
-1119 -969 0
-1120 -969 0
-1121 -969 0
-1122 -969 0
-1123 -969 0
-1124 -969 0
-1125 -969 0
-1126 937 -969 0
-1127 939 -969 0
-1128 945 -969 0
-1129 947 -969 0
-1130 951 -969 0
-1131 953 -969 0
-1132 -969 0
-1133 -969 0
-1134 -969 0
-1135 -969 0
-1136 -969 0
-1137 -969 0
-1138 -969 0
-1139 -969 0
-1140 -969 0
-1141 -969 0
-1142 -969 0
-1143 -969 0
-1144 -969 0
-1145 -969 0
-1146 -969 0
-937 1126 -969 0
-939 1127 -969 0
-941 -969 0
-943 -969 0
-945 1128 -969 0
-947 1129 -969 0
-949 -969 0
-951 1130 -969 0
-953 1131 -969 0
952 -969 0
-1126 -937 969 0
-1127 -939 969 0
-1128 -945 969 0
-1129 -947 969 0
-1130 -951 969 0
-1131 -953 969 0
c ((SATLiteral(1089) /\ SATLiteral(1090))=tv=SATLiteral(970))
970 -1089 -1090 0
1089 -970 0
1090 -970 0
c ((aux62=res_00006_00004)=tv=SATLiteral(971))
-1166 480 -971 0
-1167 482 -971 0
-1168 484 -971 0
-1169 486 -971 0
-1170 488 -971 0
-1171 -971 0
-1172 -971 0
-1173 -971 0
-1174 -971 0
-1175 -971 0
-480 1166 -971 0
-481 -971 0
-482 1167 -971 0
-483 -971 0
-484 1168 -971 0
-485 -971 0
-486 1169 -971 0
-487 -971 0
-488 1170 -971 0
-489 -971 0
-1166 -480 971 0
-1167 -482 971 0
-1168 -484 971 0
-1169 -486 971 0
-1170 -488 971 0
c ((SATLiteral(1091) /\ SATLiteral(1092))=tv=SATLiteral(972))
972 -1091 -1092 0
1091 -972 0
1092 -972 0
c ((aux63=res_00008_00006)=tv=SATLiteral(973))
-1183 608 -973 0
-1184 614 -973 0
-1185 620 -973 0
-1186 -623 -973 0
-1187 -973 0
-1188 -973 0
-1189 -973 0
-1190 -973 0
-1191 -973 0
-1192 -973 0
-608 1183 -973 0
-610 -973 0
-612 -973 0
-614 1184 -973 0
-616 -973 0
-618 -973 0
-620 1185 -973 0
-622 -973 0
-624 -973 0
623 1186 -973 0
-1183 -608 973 0
-1184 -614 973 0
-1185 -620 973 0
-1186 623 973 0
c ((res_00000_00000 * res_00001_00000)=tv=aux0)
-2 -89 653 0
-2 -90 653 0
-2 -91 653 0
-2 -92 653 0
-2 -93 653 0
-2 -94 653 0
-2 -95 653 0
-2 -96 653 0
-2 -97 653 0
-2 -98 653 0
-4 -89 653 0
-4 -90 655 0
-4 -91 657 0
-4 -92 659 0
-4 -93 661 0
-4 -94 663 0
-4 -95 665 0
-4 -96 667 0
-4 -97 669 0
-4 -98 671 0
-6 -89 653 0
-6 -90 657 0
-6 -91 661 0
-6 -92 665 0
-6 -93 669 0
-6 -94 673 0
-6 -95 675 0
-6 -96 677 0
-6 -97 681 0
-6 -98 683 0
-8 -89 653 0
-8 -90 659 0
-8 -91 665 0
-8 -92 671 0
-8 -93 675 0
-8 -94 679 0
-8 -95 683 0
-8 -96 687 0
-8 -97 689 0
-8 -98 693 0
-10 -89 653 0
-10 -90 661 0
-10 -91 669 0
-10 -92 675 0
-10 -93 681 0
-10 -94 685 0
-10 -95 689 0
-10 -96 695 0
-10 -97 699 0
-10 -98 703 0
-12 -89 653 0
-12 -90 663 0
-12 -91 673 0
-12 -92 679 0
-12 -93 685 0
-12 -94 691 0
-12 -95 697 0
-12 -96 701 0
-12 -97 705 0
-12 -98 709 0
-14 -89 653 0
-14 -90 665 0
-14 -91 675 0
-14 -92 683 0
-14 -93 689 0
-14 -94 697 0
-14 -95 703 0
-14 -96 707 0
-14 -97 711 0
-14 -98 715 0
-16 -89 653 0
-16 -90 667 0
-16 -91 677 0
-16 -92 687 0
-16 -93 695 0
-16 -94 701 0
-16 -95 707 0
-16 -96 713 0
-16 -97 717 0
-16 -98 719 0
-18 -89 653 0
-18 -90 669 0
-18 -91 681 0
-18 -92 689 0
-18 -93 699 0
-18 -94 705 0
-18 -95 711 0
-18 -96 717 0
-18 -97 721 0
-18 -98 723 0
17 -89 653 0
17 -90 671 0
17 -91 683 0
17 -92 693 0
17 -93 703 0
17 -94 709 0
17 -95 715 0
17 -96 719 0
17 -97 723 0
17 -98 -722 0
c ((res_00000_00002 * res_00001_00002)=tv=aux1)
-36 -107 724 0
-36 -109 724 0
-36 -111 724 0
-36 -113 724 0
-36 -115 724 0
-36 -117 724 0
-36 -119 724 0
-36 -121 724 0
-36 -123 724 0
-36 122 724 0
-38 -107 724 0
-38 -109 726 0
-38 -111 728 0
-38 -113 730 0
-38 -115 732 0
-38 -117 734 0
-38 -119 736 0
-38 -121 738 0
-38 -123 740 0
-38 122 742 0
-40 -107 724 0
-40 -109 728 0
-40 -111 732 0
-40 -113 736 0
-40 -115 740 0
-40 -117 744 0
-40 -119 746 0
-40 -121 748 0
-40 -123 752 0
-40 122 754 0
-42 -107 724 0
-42 -109 730 0
-42 -111 736 0
-42 -113 742 0
-42 -115 746 0
-42 -117 750 0
-42 -119 754 0
-42 -121 758 0
-42 -123 760 0
-42 122 764 0
-44 -107 724 0
-44 -109 732 0
-44 -111 740 0
-44 -113 746 0
-44 -115 752 0
-44 -117 756 0
-44 -119 760 0
-44 -121 766 0
-44 -123 770 0
-44 122 774 0
-46 -107 724 0
-46 -109 734 0
-46 -111 744 0
-46 -113 750 0
-46 -115 756 0
-46 -117 762 0
-46 -119 768 0
-46 -121 772 0
-46 -123 776 0
-46 122 780 0
-48 -107 724 0
-48 -109 736 0
-48 -111 746 0
-48 -113 754 0
-48 -115 760 0
-48 -117 768 0
-48 -119 774 0
-48 -121 778 0
-48 -123 782 0
-48 122 786 0
-50 -107 724 0
-50 -109 738 0
-50 -111 748 0
-50 -113 758 0
-50 -115 766 0
-50 -117 772 0
-50 -119 778 0
-50 -121 784 0
-50 -123 788 0
-50 122 790 0
-52 -107 724 0
-52 -109 740 0
-52 -111 752 0
-52 -113 760 0
-52 -115 770 0
-52 -117 776 0
-52 -119 782 0
-52 -121 788 0
-52 -123 792 0
-52 122 794 0
51 -107 724 0
51 -109 742 0
51 -111 754 0
51 -113 764 0
51 -115 774 0
51 -117 780 0
51 -119 786 0
51 -121 790 0
51 -123 794 0
51 122 -793 0
c ((res_00000_00006 * res_00001_00006)=tv=aux2)
-72 -143 795 0
-72 -144 795 0
-72 -145 795 0
-72 -146 795 0
-72 -147 795 0
-72 -148 795 0
-72 -149 795 0
-72 -150 795 0
-72 -151 795 0
-72 -152 795 0
-73 -143 795 0
-73 -144 797 0
-73 -145 799 0
-73 -146 801 0
-73 -147 803 0
-73 -148 805 0
-73 -149 807 0
-73 -150 809 0
-73 -151 811 0
-73 -152 813 0
-74 -143 795 0
-74 -144 799 0
-74 -145 803 0
-74 -146 807 0
-74 -147 811 0
-74 -148 815 0
-74 -149 817 0
-74 -150 819 0
-74 -151 823 0
-74 -152 825 0
-75 -143 795 0
-75 -144 801 0
-75 -145 807 0
-75 -146 813 0
-75 -147 817 0
-75 -148 821 0
-75 -149 825 0
-75 -150 829 0
-75 -151 831 0
-75 -152 835 0
-76 -143 795 0
-76 -144 803 0
-76 -145 811 0
-76 -146 817 0
-76 -147 823 0
-76 -148 827 0
-76 -149 831 0
-76 -150 837 0
-76 -151 841 0
-76 -152 845 0
-77 -143 795 0
-77 -144 805 0
-77 -145 815 0
-77 -146 821 0
-77 -147 827 0
-77 -148 833 0
-77 -149 839 0
-77 -150 843 0
-77 -151 847 0
-77 -152 851 0
-78 -143 795 0
-78 -144 807 0
-78 -145 817 0
-78 -146 825 0
-78 -147 831 0
-78 -148 839 0
-78 -149 845 0
-78 -150 849 0
-78 -151 853 0
-78 -152 857 0
-79 -143 795 0
-79 -144 809 0
-79 -145 819 0
-79 -146 829 0
-79 -147 837 0
-79 -148 843 0
-79 -149 849 0
-79 -150 855 0
-79 -151 859 0
-79 -152 861 0
-80 -143 795 0
-80 -144 811 0
-80 -145 823 0
-80 -146 831 0
-80 -147 841 0
-80 -148 847 0
-80 -149 853 0
-80 -150 859 0
-80 -151 863 0
-80 -152 865 0
-81 -143 795 0
-81 -144 813 0
-81 -145 825 0
-81 -146 835 0
-81 -147 845 0
-81 -148 851 0
-81 -149 857 0
-81 -150 861 0
-81 -151 865 0
-81 -152 -864 0
c ((res_00005_00000 * res_00006_00000)=tv=aux3)
-341 -444 866 0
-341 -445 866 0
-341 -446 866 0
-341 -447 866 0
-341 -448 866 0
-341 -449 866 0
-341 -450 866 0
-341 -451 866 0
-341 -452 866 0
-341 -453 866 0
-343 -444 866 0
-343 -445 868 0
-343 -446 870 0
-343 -447 872 0
-343 -448 874 0
-343 -449 876 0
-343 -450 878 0
-343 -451 880 0
-343 -452 882 0
-343 -453 884 0
-345 -444 866 0
-345 -445 870 0
-345 -446 874 0
-345 -447 878 0
-345 -448 882 0
-345 -449 886 0
-345 -450 888 0
-345 -451 890 0
-345 -452 894 0
-345 -453 896 0
-347 -444 866 0
-347 -445 872 0
-347 -446 878 0
-347 -447 884 0
-347 -448 888 0
-347 -449 892 0
-347 -450 896 0
-347 -451 900 0
-347 -452 902 0
-347 -453 906 0
-349 -444 866 0
-349 -445 874 0
-349 -446 882 0
-349 -447 888 0
-349 -448 894 0
-349 -449 898 0
-349 -450 902 0
-349 -451 908 0
-349 -452 912 0
-349 -453 916 0
-351 -444 866 0
-351 -445 876 0
-351 -446 886 0
-351 -447 892 0
-351 -448 898 0
-351 -449 904 0
-351 -450 910 0
-351 -451 914 0
-351 -452 918 0
-351 -453 922 0
-353 -444 866 0
-353 -445 878 0
-353 -446 888 0
-353 -447 896 0
-353 -448 902 0
-353 -449 910 0
-353 -450 916 0
-353 -451 920 0
-353 -452 924 0
-353 -453 928 0
-355 -444 866 0
-355 -445 880 0
-355 -446 890 0
-355 -447 900 0
-355 -448 908 0
-355 -449 914 0
-355 -450 920 0
-355 -451 926 0
-355 -452 930 0
-355 -453 932 0
-357 -444 866 0
-357 -445 882 0
-357 -446 894 0
-357 -447 902 0
-357 -448 912 0
-357 -449 918 0
-357 -450 924 0
-357 -451 930 0
-357 -452 934 0
-357 -453 936 0
356 -444 866 0
356 -445 884 0
356 -446 896 0
356 -447 906 0
356 -448 916 0
356 -449 922 0
356 -450 928 0
356 -451 932 0
356 -452 936 0
356 -453 -935 0
c (SATLiteral(625) -> SATLiteral(954))
-625 954 0
c (SATLiteral(626) -> SATLiteral(955))
-626 955 0
c (SATLiteral(627) -> SATLiteral(956))
-627 956 0
c (SATLiteral(628) -> SATLiteral(957))
-628 957 0
c (SATLiteral(629) -> SATLiteral(958))
-629 958 0
c (SATLiteral(630) -> SATLiteral(959))
-630 959 0
c (SATLiteral(631) -> SATLiteral(960))
-631 960 0
c (SATLiteral(632) -> SATLiteral(961))
-632 961 0
c (SATLiteral(633) -> SATLiteral(962))
-633 962 0
c (SATLiteral(634) -> SATLiteral(963))
-634 963 0
c (SATLiteral(635) -> SATLiteral(964))
-635 964 0
c (SATLiteral(636) -> SATLiteral(965))
-636 965 0
c (SATLiteral(637) -> SATLiteral(966))
-637 966 0
c (SATLiteral(638) -> SATLiteral(967))
-638 967 0
c (SATLiteral(639) -> SATLiteral(968))
-639 968 0
c (SATLiteral(640) -> SATLiteral(969))
-640 969 0
c (SATLiteral(641) -> SATLiteral(970))
-641 970 0
c (SATLiteral(642) -> SATLiteral(971))
-642 971 0
c (SATLiteral(643) -> SATLiteral(972))
-643 972 0
c (SATLiteral(644) -> SATLiteral(973))
-644 973 0
c (SATLiteral(645) -> SATLiteral(-160))
-645 -160 0
c (SATLiteral(646) -> SATLiteral(-178))
-646 -178 0
c (SATLiteral(647) -> SATLiteral(-196))
-647 -196 0
c (SATLiteral(648) -> SATLiteral(-214))
-648 -214 0
c (SATLiteral(649) -> SATLiteral(-499))
-649 -499 0
c (SATLiteral(650) -> SATLiteral(-517))
-650 -517 0
c (SATLiteral(652) -> SATLiteral(-537))
-652 -537 0
c SATLiteral(53)
53 0
c SATLiteral(71)
71 0
c SATLiteral(106)
106 0
c SATLiteral(124)
124 0
c SATLiteral(142)
142 0
c SATLiteral(177)
177 0
c SATLiteral(195)
195 0
c SATLiteral(213)
213 0
c SATLiteral(282)
282 0
c SATLiteral(334)
334 0
c SATLiteral(335)
335 0
c SATLiteral(336)
336 0
c SATLiteral(337)
337 0
c SATLiteral(338)
338 0
c SATLiteral(339)
339 0
c SATLiteral(340)
340 0
c SATLiteral(392)
392 0
c SATLiteral(461)
461 0
c SATLiteral(479)
479 0
c SATLiteral(497)
497 0
c SATLiteral(498)
498 0
c SATLiteral(516)
516 0
c SATLiteral(534)
534 0
c SATLiteral(535)
535 0
c SATLiteral(536)
536 0
c SATLiteral(571)
571 0
c SATLiteral(589)
589 0
c SATLiteral(607)
607 0
c ((res_00000_00004 - aux25 - shift(res_00003_00004, -9))<=0)
-298 -974 0
-296 -975 0
-294 -977 0
-292 -979 0
-290 -981 0
-288 -983 0
-286 -985 0
-284 -987 0
-283 -989 0
54 -974 0
54 -298 -975 0
54 -296 -977 0
54 -294 -979 0
54 -292 -981 0
54 -290 -983 0
54 -288 -985 0
54 -286 -987 0
54 -284 -989 0
54 -283 -991 0
55 -975 0
55 -298 -977 0
55 -296 -979 0
55 -294 -981 0
55 -292 -983 0
55 -290 -985 0
55 -288 -987 0
55 -286 -989 0
55 -284 -991 0
55 -283 -993 0
57 -977 0
57 -298 -979 0
57 -296 -981 0
57 -294 -983 0
57 -292 -985 0
57 -290 -987 0
57 -288 -989 0
57 -286 -991 0
57 -284 -993 0
57 -283 -995 0
59 -979 0
59 -298 -981 0
59 -296 -983 0
59 -294 -985 0
59 -292 -987 0
59 -290 -989 0
59 -288 -991 0
59 -286 -993 0
59 -284 -995 0
59 -283 -997 0
61 -981 0
61 -298 -983 0
61 -296 -985 0
61 -294 -987 0
61 -292 -989 0
61 -290 -991 0
61 -288 -993 0
61 -286 -995 0
61 -284 -997 0
61 -283 -999 0
63 -983 0
63 -298 -985 0
63 -296 -987 0
63 -294 -989 0
63 -292 -991 0
63 -290 -993 0
63 -288 -995 0
63 -286 -997 0
63 -284 -999 0
63 -283 -1001 0
65 -985 0
65 -298 -987 0
65 -296 -989 0
65 -294 -991 0
65 -292 -993 0
65 -290 -995 0
65 -288 -997 0
65 -286 -999 0
65 -284 -1001 0
65 -283 -1003 0
67 -987 0
67 -298 -989 0
67 -296 -991 0
67 -294 -993 0
67 -292 -995 0
67 -290 -997 0
67 -288 -999 0
67 -286 -1001 0
67 -284 -1003 0
67 -283 -1005 0
69 -989 0
69 -298 -991 0
69 -296 -993 0
69 -294 -995 0
69 -292 -997 0
69 -290 -999 0
69 -288 -1001 0
69 -286 -1003 0
69 -284 -1005 0
69 -283 -1007 0
c (0<=(res_00000_00004 - aux25 - shift(res_00003_00004, -9)))
283 1007 0
284 1005 0
286 1003 0
288 1001 0
290 999 0
292 997 0
294 995 0
296 993 0
298 991 0
-69 1007 0
-69 283 1005 0
-69 284 1003 0
-69 286 1001 0
-69 288 999 0
-69 290 997 0
-69 292 995 0
-69 294 993 0
-69 296 991 0
-69 298 989 0
-67 1005 0
-67 283 1003 0
-67 284 1001 0
-67 286 999 0
-67 288 997 0
-67 290 995 0
-67 292 993 0
-67 294 991 0
-67 296 989 0
-67 298 987 0
-65 1003 0
-65 283 1001 0
-65 284 999 0
-65 286 997 0
-65 288 995 0
-65 290 993 0
-65 292 991 0
-65 294 989 0
-65 296 987 0
-65 298 985 0
-63 1001 0
-63 283 999 0
-63 284 997 0
-63 286 995 0
-63 288 993 0
-63 290 991 0
-63 292 989 0
-63 294 987 0
-63 296 985 0
-63 298 983 0
-61 999 0
-61 283 997 0
-61 284 995 0
-61 286 993 0
-61 288 991 0
-61 290 989 0
-61 292 987 0
-61 294 985 0
-61 296 983 0
-61 298 981 0
-59 997 0
-59 283 995 0
-59 284 993 0
-59 286 991 0
-59 288 989 0
-59 290 987 0
-59 292 985 0
-59 294 983 0
-59 296 981 0
-59 298 979 0
-57 995 0
-57 283 993 0
-57 284 991 0
-57 286 989 0
-57 288 987 0
-57 290 985 0
-57 292 983 0
-57 294 981 0
-57 296 979 0
-57 298 977 0
-55 993 0
-55 283 991 0
-55 284 989 0
-55 286 987 0
-55 288 985 0
-55 290 983 0
-55 292 981 0
-55 294 979 0
-55 296 977 0
-55 298 975 0
-54 991 0
-54 283 989 0
-54 284 987 0
-54 286 985 0
-54 288 983 0
-54 290 981 0
-54 292 979 0
-54 294 977 0
-54 296 975 0
-54 298 974 0
c ((res_00005_00002 - aux26 - shift(res_00008_00002, -9))<=0)
-587 -1009 0
-585 -1010 0
-583 -1012 0
-581 -1014 0
-579 -1016 0
-577 -1018 0
-575 -1020 0
-573 -1022 0
-572 -1024 0
375 -1009 0
375 -587 -1010 0
375 -585 -1012 0
375 -583 -1014 0
375 -581 -1016 0
375 -579 -1018 0
375 -577 -1020 0
375 -575 -1022 0
375 -573 -1024 0
375 -572 -1026 0
376 -1010 0
376 -587 -1012 0
376 -585 -1014 0
376 -583 -1016 0
376 -581 -1018 0
376 -579 -1020 0
376 -577 -1022 0
376 -575 -1024 0
376 -573 -1026 0
376 -572 -1028 0
378 -1012 0
378 -587 -1014 0
378 -585 -1016 0
378 -583 -1018 0
378 -581 -1020 0
378 -579 -1022 0
378 -577 -1024 0
378 -575 -1026 0
378 -573 -1028 0
378 -572 -1030 0
380 -1014 0
380 -587 -1016 0
380 -585 -1018 0
380 -583 -1020 0
380 -581 -1022 0
380 -579 -1024 0
380 -577 -1026 0
380 -575 -1028 0
380 -573 -1030 0
380 -572 -1032 0
382 -1016 0
382 -587 -1018 0
382 -585 -1020 0
382 -583 -1022 0
382 -581 -1024 0
382 -579 -1026 0
382 -577 -1028 0
382 -575 -1030 0
382 -573 -1032 0
382 -572 -1034 0
384 -1018 0
384 -587 -1020 0
384 -585 -1022 0
384 -583 -1024 0
384 -581 -1026 0
384 -579 -1028 0
384 -577 -1030 0
384 -575 -1032 0
384 -573 -1034 0
384 -572 -1036 0
386 -1020 0
386 -587 -1022 0
386 -585 -1024 0
386 -583 -1026 0
386 -581 -1028 0
386 -579 -1030 0
386 -577 -1032 0
386 -575 -1034 0
386 -573 -1036 0
386 -572 -1038 0
388 -1022 0
388 -587 -1024 0
388 -585 -1026 0
388 -583 -1028 0
388 -581 -1030 0
388 -579 -1032 0
388 -577 -1034 0
388 -575 -1036 0
388 -573 -1038 0
388 -572 -1040 0
390 -1024 0
390 -587 -1026 0
390 -585 -1028 0
390 -583 -1030 0
390 -581 -1032 0
390 -579 -1034 0
390 -577 -1036 0
390 -575 -1038 0
390 -573 -1040 0
390 -572 -1042 0
c (0<=(res_00005_00002 - aux26 - shift(res_00008_00002, -9)))
572 1042 0
573 1040 0
575 1038 0
577 1036 0
579 1034 0
581 1032 0
583 1030 0
585 1028 0
587 1026 0
-390 1042 0
-390 572 1040 0
-390 573 1038 0
-390 575 1036 0
-390 577 1034 0
-390 579 1032 0
-390 581 1030 0
-390 583 1028 0
-390 585 1026 0
-390 587 1024 0
-388 1040 0
-388 572 1038 0
-388 573 1036 0
-388 575 1034 0
-388 577 1032 0
-388 579 1030 0
-388 581 1028 0
-388 583 1026 0
-388 585 1024 0
-388 587 1022 0
-386 1038 0
-386 572 1036 0
-386 573 1034 0
-386 575 1032 0
-386 577 1030 0
-386 579 1028 0
-386 581 1026 0
-386 583 1024 0
-386 585 1022 0
-386 587 1020 0
-384 1036 0
-384 572 1034 0
-384 573 1032 0
-384 575 1030 0
-384 577 1028 0
-384 579 1026 0
-384 581 1024 0
-384 583 1022 0
-384 585 1020 0
-384 587 1018 0
-382 1034 0
-382 572 1032 0
-382 573 1030 0
-382 575 1028 0
-382 577 1026 0
-382 579 1024 0
-382 581 1022 0
-382 583 1020 0
-382 585 1018 0
-382 587 1016 0
-380 1032 0
-380 572 1030 0
-380 573 1028 0
-380 575 1026 0
-380 577 1024 0
-380 579 1022 0
-380 581 1020 0
-380 583 1018 0
-380 585 1016 0
-380 587 1014 0
-378 1030 0
-378 572 1028 0
-378 573 1026 0
-378 575 1024 0
-378 577 1022 0
-378 579 1020 0
-378 581 1018 0
-378 583 1016 0
-378 585 1014 0
-378 587 1012 0
-376 1028 0
-376 572 1026 0
-376 573 1024 0
-376 575 1022 0
-376 577 1020 0
-376 579 1018 0
-376 581 1016 0
-376 583 1014 0
-376 585 1012 0
-376 587 1010 0
-375 1026 0
-375 572 1024 0
-375 573 1022 0
-375 575 1020 0
-375 577 1018 0
-375 579 1016 0
-375 581 1014 0
-375 583 1012 0
-375 585 1010 0
-375 587 1009 0
c ((shift(res_00006_00006, -4) - aux27 - shift(res_00008_00006, -9))<=0)
-1059 -608 0
-1057 -609 0
-1055 -611 0
-1053 -613 0
-1051 -615 0
-1049 -617 0
-1047 -619 0
-1045 -621 0
-1044 -623 0
c (0<=(shift(res_00006_00006, -4) - aux27 - shift(res_00008_00006, -9)))
1044 623 0
1045 621 0
1047 619 0
1049 617 0
1051 615 0
1053 613 0
1055 611 0
1057 609 0
1059 608 0
c (( - aux4 + 10*res_00007_00004 + res_00008_00004)<=0)
-952 605 0
-950 603 0
-948 601 0
-946 599 0
-944 597 0
-942 595 0
-940 593 0
-938 591 0
-937 590 0
c (0<=( - aux4 + 10*res_00007_00004 + res_00008_00004))
937 -590 0
938 -591 0
940 -593 0
942 -595 0
944 -597 0
946 -599 0
948 -601 0
950 -603 0
952 -605 0
