p cnf 3348 23096                                                                                    

1 0
c Encoding variable: agrid_00001_00001 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00001' order represents '0' with '2'
c Var 'agrid_00001_00001' direct represents '0' with '2'
c Var 'agrid_00001_00001' order represents '1' with '3'
-2 3 0
c Var 'agrid_00001_00001' direct represents '1' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'agrid_00001_00001' order represents '2' with '5'
-3 5 0
c Var 'agrid_00001_00001' direct represents '2' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'agrid_00001_00001' direct represents '3' with '-5'
2 4 6 -5 0
c Encoding variable: agrid_00001_00002 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00002' order represents '0' with '7'
c Var 'agrid_00001_00002' direct represents '0' with '7'
c Var 'agrid_00001_00002' order represents '1' with '8'
-7 8 0
c Var 'agrid_00001_00002' direct represents '1' with '9'
7 -8 9 0
-9 8 0
-9 -7 0
c Var 'agrid_00001_00002' order represents '2' with '10'
-8 10 0
c Var 'agrid_00001_00002' direct represents '2' with '11'
8 -10 11 0
-11 10 0
-11 -8 0
c Var 'agrid_00001_00002' direct represents '3' with '-10'
7 9 11 -10 0
c Encoding variable: agrid_00001_00003 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00003' order represents '0' with '12'
c Var 'agrid_00001_00003' direct represents '0' with '12'
c Var 'agrid_00001_00003' order represents '1' with '13'
-12 13 0
c Var 'agrid_00001_00003' direct represents '1' with '14'
12 -13 14 0
-14 13 0
-14 -12 0
c Var 'agrid_00001_00003' order represents '2' with '15'
-13 15 0
c Var 'agrid_00001_00003' direct represents '2' with '16'
13 -15 16 0
-16 15 0
-16 -13 0
c Var 'agrid_00001_00003' direct represents '3' with '-15'
12 14 16 -15 0
c Encoding variable: agrid_00001_00004 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00004' order represents '0' with '17'
c Var 'agrid_00001_00004' direct represents '0' with '17'
c Var 'agrid_00001_00004' order represents '1' with '18'
-17 18 0
c Var 'agrid_00001_00004' direct represents '1' with '19'
17 -18 19 0
-19 18 0
-19 -17 0
c Var 'agrid_00001_00004' order represents '2' with '20'
-18 20 0
c Var 'agrid_00001_00004' direct represents '2' with '21'
18 -20 21 0
-21 20 0
-21 -18 0
c Var 'agrid_00001_00004' direct represents '3' with '-20'
17 19 21 -20 0
c Encoding variable: agrid_00001_00005 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00005' order represents '0' with '22'
c Var 'agrid_00001_00005' direct represents '0' with '22'
c Var 'agrid_00001_00005' order represents '1' with '23'
-22 23 0
c Var 'agrid_00001_00005' direct represents '1' with '24'
22 -23 24 0
-24 23 0
-24 -22 0
c Var 'agrid_00001_00005' order represents '2' with '25'
-23 25 0
c Var 'agrid_00001_00005' direct represents '2' with '26'
23 -25 26 0
-26 25 0
-26 -23 0
c Var 'agrid_00001_00005' direct represents '3' with '-25'
22 24 26 -25 0
c Encoding variable: agrid_00001_00006 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00006' order represents '0' with '27'
c Var 'agrid_00001_00006' direct represents '0' with '27'
c Var 'agrid_00001_00006' order represents '1' with '28'
-27 28 0
c Var 'agrid_00001_00006' direct represents '1' with '29'
27 -28 29 0
-29 28 0
-29 -27 0
c Var 'agrid_00001_00006' order represents '2' with '30'
-28 30 0
c Var 'agrid_00001_00006' direct represents '2' with '31'
28 -30 31 0
-31 30 0
-31 -28 0
c Var 'agrid_00001_00006' direct represents '3' with '-30'
27 29 31 -30 0
c Encoding variable: agrid_00002_00001 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00001' order represents '0' with '32'
c Var 'agrid_00002_00001' direct represents '0' with '32'
c Var 'agrid_00002_00001' order represents '1' with '33'
-32 33 0
c Var 'agrid_00002_00001' direct represents '1' with '34'
32 -33 34 0
-34 33 0
-34 -32 0
c Var 'agrid_00002_00001' order represents '2' with '35'
-33 35 0
c Var 'agrid_00002_00001' direct represents '2' with '36'
33 -35 36 0
-36 35 0
-36 -33 0
c Var 'agrid_00002_00001' direct represents '3' with '-35'
32 34 36 -35 0
c Encoding variable: agrid_00002_00002 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00002' order represents '0' with '37'
c Var 'agrid_00002_00002' direct represents '0' with '37'
c Var 'agrid_00002_00002' order represents '1' with '38'
-37 38 0
c Var 'agrid_00002_00002' direct represents '1' with '39'
37 -38 39 0
-39 38 0
-39 -37 0
c Var 'agrid_00002_00002' order represents '2' with '40'
-38 40 0
c Var 'agrid_00002_00002' direct represents '2' with '41'
38 -40 41 0
-41 40 0
-41 -38 0
c Var 'agrid_00002_00002' direct represents '3' with '-40'
37 39 41 -40 0
c Encoding variable: agrid_00002_00003 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00003' order represents '0' with '42'
c Var 'agrid_00002_00003' direct represents '0' with '42'
c Var 'agrid_00002_00003' order represents '1' with '43'
-42 43 0
c Var 'agrid_00002_00003' direct represents '1' with '44'
42 -43 44 0
-44 43 0
-44 -42 0
c Var 'agrid_00002_00003' order represents '2' with '45'
-43 45 0
c Var 'agrid_00002_00003' direct represents '2' with '46'
43 -45 46 0
-46 45 0
-46 -43 0
c Var 'agrid_00002_00003' direct represents '3' with '-45'
42 44 46 -45 0
c Encoding variable: agrid_00002_00004 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00004' order represents '0' with '47'
c Var 'agrid_00002_00004' direct represents '0' with '47'
c Var 'agrid_00002_00004' order represents '1' with '48'
-47 48 0
c Var 'agrid_00002_00004' direct represents '1' with '49'
47 -48 49 0
-49 48 0
-49 -47 0
c Var 'agrid_00002_00004' order represents '2' with '50'
-48 50 0
c Var 'agrid_00002_00004' direct represents '2' with '51'
48 -50 51 0
-51 50 0
-51 -48 0
c Var 'agrid_00002_00004' direct represents '3' with '-50'
47 49 51 -50 0
c Encoding variable: agrid_00002_00005 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00005' order represents '0' with '52'
c Var 'agrid_00002_00005' direct represents '0' with '52'
c Var 'agrid_00002_00005' order represents '1' with '53'
-52 53 0
c Var 'agrid_00002_00005' direct represents '1' with '54'
52 -53 54 0
-54 53 0
-54 -52 0
c Var 'agrid_00002_00005' order represents '2' with '55'
-53 55 0
c Var 'agrid_00002_00005' direct represents '2' with '56'
53 -55 56 0
-56 55 0
-56 -53 0
c Var 'agrid_00002_00005' direct represents '3' with '-55'
52 54 56 -55 0
c Encoding variable: agrid_00002_00006 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00006' order represents '0' with '57'
c Var 'agrid_00002_00006' direct represents '0' with '57'
c Var 'agrid_00002_00006' order represents '1' with '58'
-57 58 0
c Var 'agrid_00002_00006' direct represents '1' with '59'
57 -58 59 0
-59 58 0
-59 -57 0
c Var 'agrid_00002_00006' order represents '2' with '60'
-58 60 0
c Var 'agrid_00002_00006' direct represents '2' with '61'
58 -60 61 0
-61 60 0
-61 -58 0
c Var 'agrid_00002_00006' direct represents '3' with '-60'
57 59 61 -60 0
c Encoding variable: agrid_00003_00001 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00001' order represents '0' with '62'
c Var 'agrid_00003_00001' direct represents '0' with '62'
c Var 'agrid_00003_00001' order represents '1' with '63'
-62 63 0
c Var 'agrid_00003_00001' direct represents '1' with '64'
62 -63 64 0
-64 63 0
-64 -62 0
c Var 'agrid_00003_00001' order represents '2' with '65'
-63 65 0
c Var 'agrid_00003_00001' direct represents '2' with '66'
63 -65 66 0
-66 65 0
-66 -63 0
c Var 'agrid_00003_00001' direct represents '3' with '-65'
62 64 66 -65 0
c Encoding variable: agrid_00003_00002 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00002' order represents '0' with '67'
c Var 'agrid_00003_00002' direct represents '0' with '67'
c Var 'agrid_00003_00002' order represents '1' with '68'
-67 68 0
c Var 'agrid_00003_00002' direct represents '1' with '69'
67 -68 69 0
-69 68 0
-69 -67 0
c Var 'agrid_00003_00002' order represents '2' with '70'
-68 70 0
c Var 'agrid_00003_00002' direct represents '2' with '71'
68 -70 71 0
-71 70 0
-71 -68 0
c Var 'agrid_00003_00002' direct represents '3' with '-70'
67 69 71 -70 0
c Encoding variable: agrid_00003_00003 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00003' order represents '0' with '72'
c Var 'agrid_00003_00003' direct represents '0' with '72'
c Var 'agrid_00003_00003' order represents '1' with '73'
-72 73 0
c Var 'agrid_00003_00003' direct represents '1' with '74'
72 -73 74 0
-74 73 0
-74 -72 0
c Var 'agrid_00003_00003' order represents '2' with '75'
-73 75 0
c Var 'agrid_00003_00003' direct represents '2' with '76'
73 -75 76 0
-76 75 0
-76 -73 0
c Var 'agrid_00003_00003' direct represents '3' with '-75'
72 74 76 -75 0
c Encoding variable: agrid_00003_00004 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00004' order represents '0' with '77'
c Var 'agrid_00003_00004' direct represents '0' with '77'
c Var 'agrid_00003_00004' order represents '1' with '78'
-77 78 0
c Var 'agrid_00003_00004' direct represents '1' with '79'
77 -78 79 0
-79 78 0
-79 -77 0
c Var 'agrid_00003_00004' order represents '2' with '80'
-78 80 0
c Var 'agrid_00003_00004' direct represents '2' with '81'
78 -80 81 0
-81 80 0
-81 -78 0
c Var 'agrid_00003_00004' direct represents '3' with '-80'
77 79 81 -80 0
c Encoding variable: agrid_00003_00005 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00005' order represents '0' with '82'
c Var 'agrid_00003_00005' direct represents '0' with '82'
c Var 'agrid_00003_00005' order represents '1' with '83'
-82 83 0
c Var 'agrid_00003_00005' direct represents '1' with '84'
82 -83 84 0
-84 83 0
-84 -82 0
c Var 'agrid_00003_00005' order represents '2' with '85'
-83 85 0
c Var 'agrid_00003_00005' direct represents '2' with '86'
83 -85 86 0
-86 85 0
-86 -83 0
c Var 'agrid_00003_00005' direct represents '3' with '-85'
82 84 86 -85 0
c Encoding variable: agrid_00003_00006 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00006' order represents '0' with '87'
c Var 'agrid_00003_00006' direct represents '0' with '87'
c Var 'agrid_00003_00006' order represents '1' with '88'
-87 88 0
c Var 'agrid_00003_00006' direct represents '1' with '89'
87 -88 89 0
-89 88 0
-89 -87 0
c Var 'agrid_00003_00006' order represents '2' with '90'
-88 90 0
c Var 'agrid_00003_00006' direct represents '2' with '91'
88 -90 91 0
-91 90 0
-91 -88 0
c Var 'agrid_00003_00006' direct represents '3' with '-90'
87 89 91 -90 0
c Encoding variable: agrid_00004_00001 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00001' order represents '0' with '92'
c Var 'agrid_00004_00001' direct represents '0' with '92'
c Var 'agrid_00004_00001' order represents '1' with '93'
-92 93 0
c Var 'agrid_00004_00001' direct represents '1' with '94'
92 -93 94 0
-94 93 0
-94 -92 0
c Var 'agrid_00004_00001' order represents '2' with '95'
-93 95 0
c Var 'agrid_00004_00001' direct represents '2' with '96'
93 -95 96 0
-96 95 0
-96 -93 0
c Var 'agrid_00004_00001' direct represents '3' with '-95'
92 94 96 -95 0
c Encoding variable: agrid_00004_00002 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00002' order represents '0' with '97'
c Var 'agrid_00004_00002' direct represents '0' with '97'
c Var 'agrid_00004_00002' order represents '1' with '98'
-97 98 0
c Var 'agrid_00004_00002' direct represents '1' with '99'
97 -98 99 0
-99 98 0
-99 -97 0
c Var 'agrid_00004_00002' order represents '2' with '100'
-98 100 0
c Var 'agrid_00004_00002' direct represents '2' with '101'
98 -100 101 0
-101 100 0
-101 -98 0
c Var 'agrid_00004_00002' direct represents '3' with '-100'
97 99 101 -100 0
c Encoding variable: agrid_00004_00003 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00003' order represents '0' with '102'
c Var 'agrid_00004_00003' direct represents '0' with '102'
c Var 'agrid_00004_00003' order represents '1' with '103'
-102 103 0
c Var 'agrid_00004_00003' direct represents '1' with '104'
102 -103 104 0
-104 103 0
-104 -102 0
c Var 'agrid_00004_00003' order represents '2' with '105'
-103 105 0
c Var 'agrid_00004_00003' direct represents '2' with '106'
103 -105 106 0
-106 105 0
-106 -103 0
c Var 'agrid_00004_00003' direct represents '3' with '-105'
102 104 106 -105 0
c Encoding variable: agrid_00004_00004 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00004' order represents '0' with '107'
c Var 'agrid_00004_00004' direct represents '0' with '107'
c Var 'agrid_00004_00004' order represents '1' with '108'
-107 108 0
c Var 'agrid_00004_00004' direct represents '1' with '109'
107 -108 109 0
-109 108 0
-109 -107 0
c Var 'agrid_00004_00004' order represents '2' with '110'
-108 110 0
c Var 'agrid_00004_00004' direct represents '2' with '111'
108 -110 111 0
-111 110 0
-111 -108 0
c Var 'agrid_00004_00004' direct represents '3' with '-110'
107 109 111 -110 0
c Encoding variable: agrid_00004_00005 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00005' order represents '0' with '112'
c Var 'agrid_00004_00005' direct represents '0' with '112'
c Var 'agrid_00004_00005' order represents '1' with '113'
-112 113 0
c Var 'agrid_00004_00005' direct represents '1' with '114'
112 -113 114 0
-114 113 0
-114 -112 0
c Var 'agrid_00004_00005' order represents '2' with '115'
-113 115 0
c Var 'agrid_00004_00005' direct represents '2' with '116'
113 -115 116 0
-116 115 0
-116 -113 0
c Var 'agrid_00004_00005' direct represents '3' with '-115'
112 114 116 -115 0
c Encoding variable: agrid_00004_00006 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00006' order represents '0' with '117'
c Var 'agrid_00004_00006' direct represents '0' with '117'
c Var 'agrid_00004_00006' order represents '1' with '118'
-117 118 0
c Var 'agrid_00004_00006' direct represents '1' with '119'
117 -118 119 0
-119 118 0
-119 -117 0
c Var 'agrid_00004_00006' order represents '2' with '120'
-118 120 0
c Var 'agrid_00004_00006' direct represents '2' with '121'
118 -120 121 0
-121 120 0
-121 -118 0
c Var 'agrid_00004_00006' direct represents '3' with '-120'
117 119 121 -120 0
c Encoding variable: agrid_00005_00001 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00001' order represents '0' with '122'
c Var 'agrid_00005_00001' direct represents '0' with '122'
c Var 'agrid_00005_00001' order represents '1' with '123'
-122 123 0
c Var 'agrid_00005_00001' direct represents '1' with '124'
122 -123 124 0
-124 123 0
-124 -122 0
c Var 'agrid_00005_00001' order represents '2' with '125'
-123 125 0
c Var 'agrid_00005_00001' direct represents '2' with '126'
123 -125 126 0
-126 125 0
-126 -123 0
c Var 'agrid_00005_00001' direct represents '3' with '-125'
122 124 126 -125 0
c Encoding variable: agrid_00005_00002 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00002' order represents '0' with '127'
c Var 'agrid_00005_00002' direct represents '0' with '127'
c Var 'agrid_00005_00002' order represents '1' with '128'
-127 128 0
c Var 'agrid_00005_00002' direct represents '1' with '129'
127 -128 129 0
-129 128 0
-129 -127 0
c Var 'agrid_00005_00002' order represents '2' with '130'
-128 130 0
c Var 'agrid_00005_00002' direct represents '2' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'agrid_00005_00002' direct represents '3' with '-130'
127 129 131 -130 0
c Encoding variable: agrid_00005_00003 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00003' order represents '0' with '132'
c Var 'agrid_00005_00003' direct represents '0' with '132'
c Var 'agrid_00005_00003' order represents '1' with '133'
-132 133 0
c Var 'agrid_00005_00003' direct represents '1' with '134'
132 -133 134 0
-134 133 0
-134 -132 0
c Var 'agrid_00005_00003' order represents '2' with '135'
-133 135 0
c Var 'agrid_00005_00003' direct represents '2' with '136'
133 -135 136 0
-136 135 0
-136 -133 0
c Var 'agrid_00005_00003' direct represents '3' with '-135'
132 134 136 -135 0
c Encoding variable: agrid_00005_00004 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00004' order represents '0' with '137'
c Var 'agrid_00005_00004' direct represents '0' with '137'
c Var 'agrid_00005_00004' order represents '1' with '138'
-137 138 0
c Var 'agrid_00005_00004' direct represents '1' with '139'
137 -138 139 0
-139 138 0
-139 -137 0
c Var 'agrid_00005_00004' order represents '2' with '140'
-138 140 0
c Var 'agrid_00005_00004' direct represents '2' with '141'
138 -140 141 0
-141 140 0
-141 -138 0
c Var 'agrid_00005_00004' direct represents '3' with '-140'
137 139 141 -140 0
c Encoding variable: agrid_00005_00005 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00005' order represents '0' with '142'
c Var 'agrid_00005_00005' direct represents '0' with '142'
c Var 'agrid_00005_00005' order represents '1' with '143'
-142 143 0
c Var 'agrid_00005_00005' direct represents '1' with '144'
142 -143 144 0
-144 143 0
-144 -142 0
c Var 'agrid_00005_00005' order represents '2' with '145'
-143 145 0
c Var 'agrid_00005_00005' direct represents '2' with '146'
143 -145 146 0
-146 145 0
-146 -143 0
c Var 'agrid_00005_00005' direct represents '3' with '-145'
142 144 146 -145 0
c Encoding variable: agrid_00005_00006 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00006' order represents '0' with '147'
c Var 'agrid_00005_00006' direct represents '0' with '147'
c Var 'agrid_00005_00006' order represents '1' with '148'
-147 148 0
c Var 'agrid_00005_00006' direct represents '1' with '149'
147 -148 149 0
-149 148 0
-149 -147 0
c Var 'agrid_00005_00006' order represents '2' with '150'
-148 150 0
c Var 'agrid_00005_00006' direct represents '2' with '151'
148 -150 151 0
-151 150 0
-151 -148 0
c Var 'agrid_00005_00006' direct represents '3' with '-150'
147 149 151 -150 0
c Encoding variable: agrid_00006_00001 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00001' order represents '0' with '152'
c Var 'agrid_00006_00001' direct represents '0' with '152'
c Var 'agrid_00006_00001' order represents '1' with '153'
-152 153 0
c Var 'agrid_00006_00001' direct represents '1' with '154'
152 -153 154 0
-154 153 0
-154 -152 0
c Var 'agrid_00006_00001' order represents '2' with '155'
-153 155 0
c Var 'agrid_00006_00001' direct represents '2' with '156'
153 -155 156 0
-156 155 0
-156 -153 0
c Var 'agrid_00006_00001' direct represents '3' with '-155'
152 154 156 -155 0
c Encoding variable: agrid_00006_00002 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00002' order represents '0' with '157'
c Var 'agrid_00006_00002' direct represents '0' with '157'
c Var 'agrid_00006_00002' order represents '1' with '158'
-157 158 0
c Var 'agrid_00006_00002' direct represents '1' with '159'
157 -158 159 0
-159 158 0
-159 -157 0
c Var 'agrid_00006_00002' order represents '2' with '160'
-158 160 0
c Var 'agrid_00006_00002' direct represents '2' with '161'
158 -160 161 0
-161 160 0
-161 -158 0
c Var 'agrid_00006_00002' direct represents '3' with '-160'
157 159 161 -160 0
c Encoding variable: agrid_00006_00003 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00003' order represents '0' with '162'
c Var 'agrid_00006_00003' direct represents '0' with '162'
c Var 'agrid_00006_00003' order represents '1' with '163'
-162 163 0
c Var 'agrid_00006_00003' direct represents '1' with '164'
162 -163 164 0
-164 163 0
-164 -162 0
c Var 'agrid_00006_00003' order represents '2' with '165'
-163 165 0
c Var 'agrid_00006_00003' direct represents '2' with '166'
163 -165 166 0
-166 165 0
-166 -163 0
c Var 'agrid_00006_00003' direct represents '3' with '-165'
162 164 166 -165 0
c Encoding variable: agrid_00006_00004 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00004' order represents '0' with '167'
c Var 'agrid_00006_00004' direct represents '0' with '167'
c Var 'agrid_00006_00004' order represents '1' with '168'
-167 168 0
c Var 'agrid_00006_00004' direct represents '1' with '169'
167 -168 169 0
-169 168 0
-169 -167 0
c Var 'agrid_00006_00004' order represents '2' with '170'
-168 170 0
c Var 'agrid_00006_00004' direct represents '2' with '171'
168 -170 171 0
-171 170 0
-171 -168 0
c Var 'agrid_00006_00004' direct represents '3' with '-170'
167 169 171 -170 0
c Encoding variable: agrid_00006_00005 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00005' order represents '0' with '172'
c Var 'agrid_00006_00005' direct represents '0' with '172'
c Var 'agrid_00006_00005' order represents '1' with '173'
-172 173 0
c Var 'agrid_00006_00005' direct represents '1' with '174'
172 -173 174 0
-174 173 0
-174 -172 0
c Var 'agrid_00006_00005' order represents '2' with '175'
-173 175 0
c Var 'agrid_00006_00005' direct represents '2' with '176'
173 -175 176 0
-176 175 0
-176 -173 0
c Var 'agrid_00006_00005' direct represents '3' with '-175'
172 174 176 -175 0
c Encoding variable: agrid_00006_00006 with domain: int(0..3) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00006' order represents '0' with '177'
c Var 'agrid_00006_00006' direct represents '0' with '177'
c Var 'agrid_00006_00006' order represents '1' with '178'
-177 178 0
c Var 'agrid_00006_00006' direct represents '1' with '179'
177 -178 179 0
-179 178 0
-179 -177 0
c Var 'agrid_00006_00006' order represents '2' with '180'
-178 180 0
c Var 'agrid_00006_00006' direct represents '2' with '181'
178 -180 181 0
-181 180 0
-181 -178 0
c Var 'agrid_00006_00006' direct represents '3' with '-180'
177 179 181 -180 0
c Encoding variable: sij_00000_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00000' direct represents '0' with '182'
182 0
c Encoding variable: sij_00000_00001 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00001' direct represents '0' with '183'
183 0
c Encoding variable: sij_00000_00002 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00002' direct represents '0' with '184'
184 0
c Encoding variable: sij_00000_00003 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00003' direct represents '0' with '185'
185 0
c Encoding variable: sij_00000_00004 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00004' direct represents '0' with '186'
186 0
c Encoding variable: sij_00000_00005 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00005' direct represents '0' with '187'
187 0
c Encoding variable: sij_00000_00006 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00006' direct represents '0' with '188'
188 0
c Encoding variable: sij_00000_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00007' direct represents '0' with '189'
189 0
c Encoding variable: sij_00001_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00001_00000' direct represents '0' with '190'
190 0
c Encoding variable: sij_00001_00001 with domain: bool (representing constraint )
c Var 'sij_00001_00001' direct represents '0' with '-191'
c Var 'sij_00001_00001' direct represents '1' with '191'
c Var 'sij_00001_00001' order represents '1' with '1'
c Var 'sij_00001_00001' order represents '0' with '-191'
c Encoding variable: sij_00001_00002 with domain: bool (representing constraint )
c Var 'sij_00001_00002' direct represents '0' with '-192'
c Var 'sij_00001_00002' direct represents '1' with '192'
c Var 'sij_00001_00002' order represents '1' with '1'
c Var 'sij_00001_00002' order represents '0' with '-192'
c Encoding variable: sij_00001_00003 with domain: bool (representing constraint )
c Var 'sij_00001_00003' direct represents '0' with '-193'
c Var 'sij_00001_00003' direct represents '1' with '193'
c Var 'sij_00001_00003' order represents '1' with '1'
c Var 'sij_00001_00003' order represents '0' with '-193'
c Encoding variable: sij_00001_00004 with domain: bool (representing constraint )
c Var 'sij_00001_00004' direct represents '0' with '-194'
c Var 'sij_00001_00004' direct represents '1' with '194'
c Var 'sij_00001_00004' order represents '1' with '1'
c Var 'sij_00001_00004' order represents '0' with '-194'
c Encoding variable: sij_00001_00005 with domain: bool (representing constraint )
c Var 'sij_00001_00005' direct represents '0' with '-195'
c Var 'sij_00001_00005' direct represents '1' with '195'
c Var 'sij_00001_00005' order represents '1' with '1'
c Var 'sij_00001_00005' order represents '0' with '-195'
c Encoding variable: sij_00001_00006 with domain: bool (representing constraint )
c Var 'sij_00001_00006' direct represents '0' with '-196'
c Var 'sij_00001_00006' direct represents '1' with '196'
c Var 'sij_00001_00006' order represents '1' with '1'
c Var 'sij_00001_00006' order represents '0' with '-196'
c Encoding variable: sij_00001_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00001_00007' direct represents '0' with '197'
197 0
c Encoding variable: sij_00002_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00002_00000' direct represents '0' with '198'
198 0
c Encoding variable: sij_00002_00001 with domain: bool (representing constraint )
c Var 'sij_00002_00001' direct represents '0' with '-199'
c Var 'sij_00002_00001' direct represents '1' with '199'
c Var 'sij_00002_00001' order represents '1' with '1'
c Var 'sij_00002_00001' order represents '0' with '-199'
c Encoding variable: sij_00002_00002 with domain: bool (representing constraint )
c Var 'sij_00002_00002' direct represents '0' with '-200'
c Var 'sij_00002_00002' direct represents '1' with '200'
c Var 'sij_00002_00002' order represents '1' with '1'
c Var 'sij_00002_00002' order represents '0' with '-200'
c Encoding variable: sij_00002_00003 with domain: bool (representing constraint )
c Var 'sij_00002_00003' direct represents '0' with '-201'
c Var 'sij_00002_00003' direct represents '1' with '201'
c Var 'sij_00002_00003' order represents '1' with '1'
c Var 'sij_00002_00003' order represents '0' with '-201'
c Encoding variable: sij_00002_00004 with domain: bool (representing constraint )
c Var 'sij_00002_00004' direct represents '0' with '-202'
c Var 'sij_00002_00004' direct represents '1' with '202'
c Var 'sij_00002_00004' order represents '1' with '1'
c Var 'sij_00002_00004' order represents '0' with '-202'
c Encoding variable: sij_00002_00005 with domain: bool (representing constraint )
c Var 'sij_00002_00005' direct represents '0' with '-203'
c Var 'sij_00002_00005' direct represents '1' with '203'
c Var 'sij_00002_00005' order represents '1' with '1'
c Var 'sij_00002_00005' order represents '0' with '-203'
c Encoding variable: sij_00002_00006 with domain: bool (representing constraint )
c Var 'sij_00002_00006' direct represents '0' with '-204'
c Var 'sij_00002_00006' direct represents '1' with '204'
c Var 'sij_00002_00006' order represents '1' with '1'
c Var 'sij_00002_00006' order represents '0' with '-204'
c Encoding variable: sij_00002_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00002_00007' direct represents '0' with '205'
205 0
c Encoding variable: sij_00003_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00003_00000' direct represents '0' with '206'
206 0
c Encoding variable: sij_00003_00001 with domain: bool (representing constraint )
c Var 'sij_00003_00001' direct represents '0' with '-207'
c Var 'sij_00003_00001' direct represents '1' with '207'
c Var 'sij_00003_00001' order represents '1' with '1'
c Var 'sij_00003_00001' order represents '0' with '-207'
c Encoding variable: sij_00003_00002 with domain: bool (representing constraint )
c Var 'sij_00003_00002' direct represents '0' with '-208'
c Var 'sij_00003_00002' direct represents '1' with '208'
c Var 'sij_00003_00002' order represents '1' with '1'
c Var 'sij_00003_00002' order represents '0' with '-208'
c Encoding variable: sij_00003_00003 with domain: bool (representing constraint )
c Var 'sij_00003_00003' direct represents '0' with '-209'
c Var 'sij_00003_00003' direct represents '1' with '209'
c Var 'sij_00003_00003' order represents '1' with '1'
c Var 'sij_00003_00003' order represents '0' with '-209'
c Encoding variable: sij_00003_00004 with domain: bool (representing constraint )
c Var 'sij_00003_00004' direct represents '0' with '-210'
c Var 'sij_00003_00004' direct represents '1' with '210'
c Var 'sij_00003_00004' order represents '1' with '1'
c Var 'sij_00003_00004' order represents '0' with '-210'
c Encoding variable: sij_00003_00005 with domain: bool (representing constraint )
c Var 'sij_00003_00005' direct represents '0' with '-211'
c Var 'sij_00003_00005' direct represents '1' with '211'
c Var 'sij_00003_00005' order represents '1' with '1'
c Var 'sij_00003_00005' order represents '0' with '-211'
c Encoding variable: sij_00003_00006 with domain: bool (representing constraint )
c Var 'sij_00003_00006' direct represents '0' with '-212'
c Var 'sij_00003_00006' direct represents '1' with '212'
c Var 'sij_00003_00006' order represents '1' with '1'
c Var 'sij_00003_00006' order represents '0' with '-212'
c Encoding variable: sij_00003_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00003_00007' direct represents '0' with '213'
213 0
c Encoding variable: sij_00004_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00004_00000' direct represents '0' with '214'
214 0
c Encoding variable: sij_00004_00001 with domain: bool (representing constraint )
c Var 'sij_00004_00001' direct represents '0' with '-215'
c Var 'sij_00004_00001' direct represents '1' with '215'
c Var 'sij_00004_00001' order represents '1' with '1'
c Var 'sij_00004_00001' order represents '0' with '-215'
c Encoding variable: sij_00004_00002 with domain: bool (representing constraint )
c Var 'sij_00004_00002' direct represents '0' with '-216'
c Var 'sij_00004_00002' direct represents '1' with '216'
c Var 'sij_00004_00002' order represents '1' with '1'
c Var 'sij_00004_00002' order represents '0' with '-216'
c Encoding variable: sij_00004_00003 with domain: bool (representing constraint )
c Var 'sij_00004_00003' direct represents '0' with '-217'
c Var 'sij_00004_00003' direct represents '1' with '217'
c Var 'sij_00004_00003' order represents '1' with '1'
c Var 'sij_00004_00003' order represents '0' with '-217'
c Encoding variable: sij_00004_00004 with domain: bool (representing constraint )
c Var 'sij_00004_00004' direct represents '0' with '-218'
c Var 'sij_00004_00004' direct represents '1' with '218'
c Var 'sij_00004_00004' order represents '1' with '1'
c Var 'sij_00004_00004' order represents '0' with '-218'
c Encoding variable: sij_00004_00005 with domain: bool (representing constraint )
c Var 'sij_00004_00005' direct represents '0' with '-219'
c Var 'sij_00004_00005' direct represents '1' with '219'
c Var 'sij_00004_00005' order represents '1' with '1'
c Var 'sij_00004_00005' order represents '0' with '-219'
c Encoding variable: sij_00004_00006 with domain: bool (representing constraint )
c Var 'sij_00004_00006' direct represents '0' with '-220'
c Var 'sij_00004_00006' direct represents '1' with '220'
c Var 'sij_00004_00006' order represents '1' with '1'
c Var 'sij_00004_00006' order represents '0' with '-220'
c Encoding variable: sij_00004_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00004_00007' direct represents '0' with '221'
221 0
c Encoding variable: sij_00005_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00005_00000' direct represents '0' with '222'
222 0
c Encoding variable: sij_00005_00001 with domain: bool (representing constraint )
c Var 'sij_00005_00001' direct represents '0' with '-223'
c Var 'sij_00005_00001' direct represents '1' with '223'
c Var 'sij_00005_00001' order represents '1' with '1'
c Var 'sij_00005_00001' order represents '0' with '-223'
c Encoding variable: sij_00005_00002 with domain: bool (representing constraint )
c Var 'sij_00005_00002' direct represents '0' with '-224'
c Var 'sij_00005_00002' direct represents '1' with '224'
c Var 'sij_00005_00002' order represents '1' with '1'
c Var 'sij_00005_00002' order represents '0' with '-224'
c Encoding variable: sij_00005_00003 with domain: bool (representing constraint )
c Var 'sij_00005_00003' direct represents '0' with '-225'
c Var 'sij_00005_00003' direct represents '1' with '225'
c Var 'sij_00005_00003' order represents '1' with '1'
c Var 'sij_00005_00003' order represents '0' with '-225'
c Encoding variable: sij_00005_00004 with domain: bool (representing constraint )
c Var 'sij_00005_00004' direct represents '0' with '-226'
c Var 'sij_00005_00004' direct represents '1' with '226'
c Var 'sij_00005_00004' order represents '1' with '1'
c Var 'sij_00005_00004' order represents '0' with '-226'
c Encoding variable: sij_00005_00005 with domain: bool (representing constraint )
c Var 'sij_00005_00005' direct represents '0' with '-227'
c Var 'sij_00005_00005' direct represents '1' with '227'
c Var 'sij_00005_00005' order represents '1' with '1'
c Var 'sij_00005_00005' order represents '0' with '-227'
c Encoding variable: sij_00005_00006 with domain: bool (representing constraint )
c Var 'sij_00005_00006' direct represents '0' with '-228'
c Var 'sij_00005_00006' direct represents '1' with '228'
c Var 'sij_00005_00006' order represents '1' with '1'
c Var 'sij_00005_00006' order represents '0' with '-228'
c Encoding variable: sij_00005_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00005_00007' direct represents '0' with '229'
229 0
c Encoding variable: sij_00006_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00006_00000' direct represents '0' with '230'
230 0
c Encoding variable: sij_00006_00001 with domain: bool (representing constraint )
c Var 'sij_00006_00001' direct represents '0' with '-231'
c Var 'sij_00006_00001' direct represents '1' with '231'
c Var 'sij_00006_00001' order represents '1' with '1'
c Var 'sij_00006_00001' order represents '0' with '-231'
c Encoding variable: sij_00006_00002 with domain: bool (representing constraint )
c Var 'sij_00006_00002' direct represents '0' with '-232'
c Var 'sij_00006_00002' direct represents '1' with '232'
c Var 'sij_00006_00002' order represents '1' with '1'
c Var 'sij_00006_00002' order represents '0' with '-232'
c Encoding variable: sij_00006_00003 with domain: bool (representing constraint )
c Var 'sij_00006_00003' direct represents '0' with '-233'
c Var 'sij_00006_00003' direct represents '1' with '233'
c Var 'sij_00006_00003' order represents '1' with '1'
c Var 'sij_00006_00003' order represents '0' with '-233'
c Encoding variable: sij_00006_00004 with domain: bool (representing constraint )
c Var 'sij_00006_00004' direct represents '0' with '-234'
c Var 'sij_00006_00004' direct represents '1' with '234'
c Var 'sij_00006_00004' order represents '1' with '1'
c Var 'sij_00006_00004' order represents '0' with '-234'
c Encoding variable: sij_00006_00005 with domain: bool (representing constraint )
c Var 'sij_00006_00005' direct represents '0' with '-235'
c Var 'sij_00006_00005' direct represents '1' with '235'
c Var 'sij_00006_00005' order represents '1' with '1'
c Var 'sij_00006_00005' order represents '0' with '-235'
c Encoding variable: sij_00006_00006 with domain: bool (representing constraint )
c Var 'sij_00006_00006' direct represents '0' with '-236'
c Var 'sij_00006_00006' direct represents '1' with '236'
c Var 'sij_00006_00006' order represents '1' with '1'
c Var 'sij_00006_00006' order represents '0' with '-236'
c Encoding variable: sij_00006_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00006_00007' direct represents '0' with '237'
237 0
c Encoding variable: sij_00007_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00000' direct represents '0' with '238'
238 0
c Encoding variable: sij_00007_00001 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00001' direct represents '0' with '239'
239 0
c Encoding variable: sij_00007_00002 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00002' direct represents '0' with '240'
240 0
c Encoding variable: sij_00007_00003 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00003' direct represents '0' with '241'
241 0
c Encoding variable: sij_00007_00004 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00004' direct represents '0' with '242'
242 0
c Encoding variable: sij_00007_00005 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00005' direct represents '0' with '243'
243 0
c Encoding variable: sij_00007_00006 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00006' direct represents '0' with '244'
244 0
c Encoding variable: sij_00007_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00007' direct represents '0' with '245'
245 0
c Encoding variable: rijk_00001_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00001_00001' direct represents '0' with '-246'
c Var 'rijk_00001_00001_00001' direct represents '1' with '246'
c Var 'rijk_00001_00001_00001' order represents '1' with '1'
c Var 'rijk_00001_00001_00001' order represents '0' with '-246'
c Encoding variable: rijk_00001_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00001_00002' direct represents '0' with '-247'
c Var 'rijk_00001_00001_00002' direct represents '1' with '247'
c Var 'rijk_00001_00001_00002' order represents '1' with '1'
c Var 'rijk_00001_00001_00002' order represents '0' with '-247'
c Encoding variable: rijk_00001_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00002_00001' direct represents '0' with '-248'
c Var 'rijk_00001_00002_00001' direct represents '1' with '248'
c Var 'rijk_00001_00002_00001' order represents '1' with '1'
c Var 'rijk_00001_00002_00001' order represents '0' with '-248'
c Encoding variable: rijk_00001_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00002_00002' direct represents '0' with '-249'
c Var 'rijk_00001_00002_00002' direct represents '1' with '249'
c Var 'rijk_00001_00002_00002' order represents '1' with '1'
c Var 'rijk_00001_00002_00002' order represents '0' with '-249'
c Encoding variable: rijk_00001_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00003_00001' direct represents '0' with '-250'
c Var 'rijk_00001_00003_00001' direct represents '1' with '250'
c Var 'rijk_00001_00003_00001' order represents '1' with '1'
c Var 'rijk_00001_00003_00001' order represents '0' with '-250'
c Encoding variable: rijk_00001_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00003_00002' direct represents '0' with '-251'
c Var 'rijk_00001_00003_00002' direct represents '1' with '251'
c Var 'rijk_00001_00003_00002' order represents '1' with '1'
c Var 'rijk_00001_00003_00002' order represents '0' with '-251'
c Encoding variable: rijk_00001_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00004_00001' direct represents '0' with '-252'
c Var 'rijk_00001_00004_00001' direct represents '1' with '252'
c Var 'rijk_00001_00004_00001' order represents '1' with '1'
c Var 'rijk_00001_00004_00001' order represents '0' with '-252'
c Encoding variable: rijk_00001_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00004_00002' direct represents '0' with '-253'
c Var 'rijk_00001_00004_00002' direct represents '1' with '253'
c Var 'rijk_00001_00004_00002' order represents '1' with '1'
c Var 'rijk_00001_00004_00002' order represents '0' with '-253'
c Encoding variable: rijk_00001_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00005_00001' direct represents '0' with '-254'
c Var 'rijk_00001_00005_00001' direct represents '1' with '254'
c Var 'rijk_00001_00005_00001' order represents '1' with '1'
c Var 'rijk_00001_00005_00001' order represents '0' with '-254'
c Encoding variable: rijk_00001_00005_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00005_00002' direct represents '0' with '255'
255 0
c Encoding variable: rijk_00001_00006_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00006_00001' direct represents '0' with '256'
256 0
c Encoding variable: rijk_00001_00006_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00006_00002' direct represents '0' with '257'
257 0
c Encoding variable: rijk_00002_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00001_00001' direct represents '0' with '-258'
c Var 'rijk_00002_00001_00001' direct represents '1' with '258'
c Var 'rijk_00002_00001_00001' order represents '1' with '1'
c Var 'rijk_00002_00001_00001' order represents '0' with '-258'
c Encoding variable: rijk_00002_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00001_00002' direct represents '0' with '-259'
c Var 'rijk_00002_00001_00002' direct represents '1' with '259'
c Var 'rijk_00002_00001_00002' order represents '1' with '1'
c Var 'rijk_00002_00001_00002' order represents '0' with '-259'
c Encoding variable: rijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00002_00001' direct represents '0' with '-260'
c Var 'rijk_00002_00002_00001' direct represents '1' with '260'
c Var 'rijk_00002_00002_00001' order represents '1' with '1'
c Var 'rijk_00002_00002_00001' order represents '0' with '-260'
c Encoding variable: rijk_00002_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00002_00002' direct represents '0' with '-261'
c Var 'rijk_00002_00002_00002' direct represents '1' with '261'
c Var 'rijk_00002_00002_00002' order represents '1' with '1'
c Var 'rijk_00002_00002_00002' order represents '0' with '-261'
c Encoding variable: rijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00003_00001' direct represents '0' with '-262'
c Var 'rijk_00002_00003_00001' direct represents '1' with '262'
c Var 'rijk_00002_00003_00001' order represents '1' with '1'
c Var 'rijk_00002_00003_00001' order represents '0' with '-262'
c Encoding variable: rijk_00002_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00003_00002' direct represents '0' with '-263'
c Var 'rijk_00002_00003_00002' direct represents '1' with '263'
c Var 'rijk_00002_00003_00002' order represents '1' with '1'
c Var 'rijk_00002_00003_00002' order represents '0' with '-263'
c Encoding variable: rijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00004_00001' direct represents '0' with '-264'
c Var 'rijk_00002_00004_00001' direct represents '1' with '264'
c Var 'rijk_00002_00004_00001' order represents '1' with '1'
c Var 'rijk_00002_00004_00001' order represents '0' with '-264'
c Encoding variable: rijk_00002_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00004_00002' direct represents '0' with '-265'
c Var 'rijk_00002_00004_00002' direct represents '1' with '265'
c Var 'rijk_00002_00004_00002' order represents '1' with '1'
c Var 'rijk_00002_00004_00002' order represents '0' with '-265'
c Encoding variable: rijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00005_00001' direct represents '0' with '-266'
c Var 'rijk_00002_00005_00001' direct represents '1' with '266'
c Var 'rijk_00002_00005_00001' order represents '1' with '1'
c Var 'rijk_00002_00005_00001' order represents '0' with '-266'
c Encoding variable: rijk_00002_00005_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00005_00002' direct represents '0' with '267'
267 0
c Encoding variable: rijk_00002_00006_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00006_00001' direct represents '0' with '268'
268 0
c Encoding variable: rijk_00002_00006_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00006_00002' direct represents '0' with '269'
269 0
c Encoding variable: rijk_00003_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00001_00001' direct represents '0' with '-270'
c Var 'rijk_00003_00001_00001' direct represents '1' with '270'
c Var 'rijk_00003_00001_00001' order represents '1' with '1'
c Var 'rijk_00003_00001_00001' order represents '0' with '-270'
c Encoding variable: rijk_00003_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00001_00002' direct represents '0' with '-271'
c Var 'rijk_00003_00001_00002' direct represents '1' with '271'
c Var 'rijk_00003_00001_00002' order represents '1' with '1'
c Var 'rijk_00003_00001_00002' order represents '0' with '-271'
c Encoding variable: rijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00002_00001' direct represents '0' with '-272'
c Var 'rijk_00003_00002_00001' direct represents '1' with '272'
c Var 'rijk_00003_00002_00001' order represents '1' with '1'
c Var 'rijk_00003_00002_00001' order represents '0' with '-272'
c Encoding variable: rijk_00003_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00002_00002' direct represents '0' with '-273'
c Var 'rijk_00003_00002_00002' direct represents '1' with '273'
c Var 'rijk_00003_00002_00002' order represents '1' with '1'
c Var 'rijk_00003_00002_00002' order represents '0' with '-273'
c Encoding variable: rijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00003_00001' direct represents '0' with '-274'
c Var 'rijk_00003_00003_00001' direct represents '1' with '274'
c Var 'rijk_00003_00003_00001' order represents '1' with '1'
c Var 'rijk_00003_00003_00001' order represents '0' with '-274'
c Encoding variable: rijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00003_00002' direct represents '0' with '-275'
c Var 'rijk_00003_00003_00002' direct represents '1' with '275'
c Var 'rijk_00003_00003_00002' order represents '1' with '1'
c Var 'rijk_00003_00003_00002' order represents '0' with '-275'
c Encoding variable: rijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00004_00001' direct represents '0' with '-276'
c Var 'rijk_00003_00004_00001' direct represents '1' with '276'
c Var 'rijk_00003_00004_00001' order represents '1' with '1'
c Var 'rijk_00003_00004_00001' order represents '0' with '-276'
c Encoding variable: rijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00004_00002' direct represents '0' with '-277'
c Var 'rijk_00003_00004_00002' direct represents '1' with '277'
c Var 'rijk_00003_00004_00002' order represents '1' with '1'
c Var 'rijk_00003_00004_00002' order represents '0' with '-277'
c Encoding variable: rijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00005_00001' direct represents '0' with '-278'
c Var 'rijk_00003_00005_00001' direct represents '1' with '278'
c Var 'rijk_00003_00005_00001' order represents '1' with '1'
c Var 'rijk_00003_00005_00001' order represents '0' with '-278'
c Encoding variable: rijk_00003_00005_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00005_00002' direct represents '0' with '279'
279 0
c Encoding variable: rijk_00003_00006_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00006_00001' direct represents '0' with '280'
280 0
c Encoding variable: rijk_00003_00006_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00006_00002' direct represents '0' with '281'
281 0
c Encoding variable: rijk_00004_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00001_00001' direct represents '0' with '-282'
c Var 'rijk_00004_00001_00001' direct represents '1' with '282'
c Var 'rijk_00004_00001_00001' order represents '1' with '1'
c Var 'rijk_00004_00001_00001' order represents '0' with '-282'
c Encoding variable: rijk_00004_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00001_00002' direct represents '0' with '-283'
c Var 'rijk_00004_00001_00002' direct represents '1' with '283'
c Var 'rijk_00004_00001_00002' order represents '1' with '1'
c Var 'rijk_00004_00001_00002' order represents '0' with '-283'
c Encoding variable: rijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00002_00001' direct represents '0' with '-284'
c Var 'rijk_00004_00002_00001' direct represents '1' with '284'
c Var 'rijk_00004_00002_00001' order represents '1' with '1'
c Var 'rijk_00004_00002_00001' order represents '0' with '-284'
c Encoding variable: rijk_00004_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00002_00002' direct represents '0' with '-285'
c Var 'rijk_00004_00002_00002' direct represents '1' with '285'
c Var 'rijk_00004_00002_00002' order represents '1' with '1'
c Var 'rijk_00004_00002_00002' order represents '0' with '-285'
c Encoding variable: rijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00003_00001' direct represents '0' with '-286'
c Var 'rijk_00004_00003_00001' direct represents '1' with '286'
c Var 'rijk_00004_00003_00001' order represents '1' with '1'
c Var 'rijk_00004_00003_00001' order represents '0' with '-286'
c Encoding variable: rijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00003_00002' direct represents '0' with '-287'
c Var 'rijk_00004_00003_00002' direct represents '1' with '287'
c Var 'rijk_00004_00003_00002' order represents '1' with '1'
c Var 'rijk_00004_00003_00002' order represents '0' with '-287'
c Encoding variable: rijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00004_00001' direct represents '0' with '-288'
c Var 'rijk_00004_00004_00001' direct represents '1' with '288'
c Var 'rijk_00004_00004_00001' order represents '1' with '1'
c Var 'rijk_00004_00004_00001' order represents '0' with '-288'
c Encoding variable: rijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00004_00002' direct represents '0' with '-289'
c Var 'rijk_00004_00004_00002' direct represents '1' with '289'
c Var 'rijk_00004_00004_00002' order represents '1' with '1'
c Var 'rijk_00004_00004_00002' order represents '0' with '-289'
c Encoding variable: rijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00005_00001' direct represents '0' with '-290'
c Var 'rijk_00004_00005_00001' direct represents '1' with '290'
c Var 'rijk_00004_00005_00001' order represents '1' with '1'
c Var 'rijk_00004_00005_00001' order represents '0' with '-290'
c Encoding variable: rijk_00004_00005_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00005_00002' direct represents '0' with '291'
291 0
c Encoding variable: rijk_00004_00006_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00006_00001' direct represents '0' with '292'
292 0
c Encoding variable: rijk_00004_00006_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00006_00002' direct represents '0' with '293'
293 0
c Encoding variable: rijk_00005_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00001_00001' direct represents '0' with '-294'
c Var 'rijk_00005_00001_00001' direct represents '1' with '294'
c Var 'rijk_00005_00001_00001' order represents '1' with '1'
c Var 'rijk_00005_00001_00001' order represents '0' with '-294'
c Encoding variable: rijk_00005_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00001_00002' direct represents '0' with '-295'
c Var 'rijk_00005_00001_00002' direct represents '1' with '295'
c Var 'rijk_00005_00001_00002' order represents '1' with '1'
c Var 'rijk_00005_00001_00002' order represents '0' with '-295'
c Encoding variable: rijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00002_00001' direct represents '0' with '-296'
c Var 'rijk_00005_00002_00001' direct represents '1' with '296'
c Var 'rijk_00005_00002_00001' order represents '1' with '1'
c Var 'rijk_00005_00002_00001' order represents '0' with '-296'
c Encoding variable: rijk_00005_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00002_00002' direct represents '0' with '-297'
c Var 'rijk_00005_00002_00002' direct represents '1' with '297'
c Var 'rijk_00005_00002_00002' order represents '1' with '1'
c Var 'rijk_00005_00002_00002' order represents '0' with '-297'
c Encoding variable: rijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00003_00001' direct represents '0' with '-298'
c Var 'rijk_00005_00003_00001' direct represents '1' with '298'
c Var 'rijk_00005_00003_00001' order represents '1' with '1'
c Var 'rijk_00005_00003_00001' order represents '0' with '-298'
c Encoding variable: rijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00003_00002' direct represents '0' with '-299'
c Var 'rijk_00005_00003_00002' direct represents '1' with '299'
c Var 'rijk_00005_00003_00002' order represents '1' with '1'
c Var 'rijk_00005_00003_00002' order represents '0' with '-299'
c Encoding variable: rijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00004_00001' direct represents '0' with '-300'
c Var 'rijk_00005_00004_00001' direct represents '1' with '300'
c Var 'rijk_00005_00004_00001' order represents '1' with '1'
c Var 'rijk_00005_00004_00001' order represents '0' with '-300'
c Encoding variable: rijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00004_00002' direct represents '0' with '-301'
c Var 'rijk_00005_00004_00002' direct represents '1' with '301'
c Var 'rijk_00005_00004_00002' order represents '1' with '1'
c Var 'rijk_00005_00004_00002' order represents '0' with '-301'
c Encoding variable: rijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00005_00001' direct represents '0' with '-302'
c Var 'rijk_00005_00005_00001' direct represents '1' with '302'
c Var 'rijk_00005_00005_00001' order represents '1' with '1'
c Var 'rijk_00005_00005_00001' order represents '0' with '-302'
c Encoding variable: rijk_00005_00005_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00005_00002' direct represents '0' with '303'
303 0
c Encoding variable: rijk_00005_00006_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00006_00001' direct represents '0' with '304'
304 0
c Encoding variable: rijk_00005_00006_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00006_00002' direct represents '0' with '305'
305 0
c Encoding variable: rijk_00006_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00001_00001' direct represents '0' with '-306'
c Var 'rijk_00006_00001_00001' direct represents '1' with '306'
c Var 'rijk_00006_00001_00001' order represents '1' with '1'
c Var 'rijk_00006_00001_00001' order represents '0' with '-306'
c Encoding variable: rijk_00006_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00001_00002' direct represents '0' with '-307'
c Var 'rijk_00006_00001_00002' direct represents '1' with '307'
c Var 'rijk_00006_00001_00002' order represents '1' with '1'
c Var 'rijk_00006_00001_00002' order represents '0' with '-307'
c Encoding variable: rijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00002_00001' direct represents '0' with '-308'
c Var 'rijk_00006_00002_00001' direct represents '1' with '308'
c Var 'rijk_00006_00002_00001' order represents '1' with '1'
c Var 'rijk_00006_00002_00001' order represents '0' with '-308'
c Encoding variable: rijk_00006_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00002_00002' direct represents '0' with '-309'
c Var 'rijk_00006_00002_00002' direct represents '1' with '309'
c Var 'rijk_00006_00002_00002' order represents '1' with '1'
c Var 'rijk_00006_00002_00002' order represents '0' with '-309'
c Encoding variable: rijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00003_00001' direct represents '0' with '-310'
c Var 'rijk_00006_00003_00001' direct represents '1' with '310'
c Var 'rijk_00006_00003_00001' order represents '1' with '1'
c Var 'rijk_00006_00003_00001' order represents '0' with '-310'
c Encoding variable: rijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00003_00002' direct represents '0' with '-311'
c Var 'rijk_00006_00003_00002' direct represents '1' with '311'
c Var 'rijk_00006_00003_00002' order represents '1' with '1'
c Var 'rijk_00006_00003_00002' order represents '0' with '-311'
c Encoding variable: rijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00004_00001' direct represents '0' with '-312'
c Var 'rijk_00006_00004_00001' direct represents '1' with '312'
c Var 'rijk_00006_00004_00001' order represents '1' with '1'
c Var 'rijk_00006_00004_00001' order represents '0' with '-312'
c Encoding variable: rijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00004_00002' direct represents '0' with '-313'
c Var 'rijk_00006_00004_00002' direct represents '1' with '313'
c Var 'rijk_00006_00004_00002' order represents '1' with '1'
c Var 'rijk_00006_00004_00002' order represents '0' with '-313'
c Encoding variable: rijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00005_00001' direct represents '0' with '-314'
c Var 'rijk_00006_00005_00001' direct represents '1' with '314'
c Var 'rijk_00006_00005_00001' order represents '1' with '1'
c Var 'rijk_00006_00005_00001' order represents '0' with '-314'
c Encoding variable: rijk_00006_00005_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00005_00002' direct represents '0' with '315'
315 0
c Encoding variable: rijk_00006_00006_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00006_00001' direct represents '0' with '316'
316 0
c Encoding variable: rijk_00006_00006_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00006_00002' direct represents '0' with '317'
317 0
c Encoding variable: dijk_00001_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00001_00001' direct represents '0' with '-318'
c Var 'dijk_00001_00001_00001' direct represents '1' with '318'
c Var 'dijk_00001_00001_00001' order represents '1' with '1'
c Var 'dijk_00001_00001_00001' order represents '0' with '-318'
c Encoding variable: dijk_00001_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00001_00002' direct represents '0' with '-319'
c Var 'dijk_00001_00001_00002' direct represents '1' with '319'
c Var 'dijk_00001_00001_00002' order represents '1' with '1'
c Var 'dijk_00001_00001_00002' order represents '0' with '-319'
c Encoding variable: dijk_00001_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00002_00001' direct represents '0' with '-320'
c Var 'dijk_00001_00002_00001' direct represents '1' with '320'
c Var 'dijk_00001_00002_00001' order represents '1' with '1'
c Var 'dijk_00001_00002_00001' order represents '0' with '-320'
c Encoding variable: dijk_00001_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00002_00002' direct represents '0' with '-321'
c Var 'dijk_00001_00002_00002' direct represents '1' with '321'
c Var 'dijk_00001_00002_00002' order represents '1' with '1'
c Var 'dijk_00001_00002_00002' order represents '0' with '-321'
c Encoding variable: dijk_00001_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00003_00001' direct represents '0' with '-322'
c Var 'dijk_00001_00003_00001' direct represents '1' with '322'
c Var 'dijk_00001_00003_00001' order represents '1' with '1'
c Var 'dijk_00001_00003_00001' order represents '0' with '-322'
c Encoding variable: dijk_00001_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00003_00002' direct represents '0' with '-323'
c Var 'dijk_00001_00003_00002' direct represents '1' with '323'
c Var 'dijk_00001_00003_00002' order represents '1' with '1'
c Var 'dijk_00001_00003_00002' order represents '0' with '-323'
c Encoding variable: dijk_00001_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00004_00001' direct represents '0' with '-324'
c Var 'dijk_00001_00004_00001' direct represents '1' with '324'
c Var 'dijk_00001_00004_00001' order represents '1' with '1'
c Var 'dijk_00001_00004_00001' order represents '0' with '-324'
c Encoding variable: dijk_00001_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00004_00002' direct represents '0' with '-325'
c Var 'dijk_00001_00004_00002' direct represents '1' with '325'
c Var 'dijk_00001_00004_00002' order represents '1' with '1'
c Var 'dijk_00001_00004_00002' order represents '0' with '-325'
c Encoding variable: dijk_00001_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00005_00001' direct represents '0' with '-326'
c Var 'dijk_00001_00005_00001' direct represents '1' with '326'
c Var 'dijk_00001_00005_00001' order represents '1' with '1'
c Var 'dijk_00001_00005_00001' order represents '0' with '-326'
c Encoding variable: dijk_00001_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00005_00002' direct represents '0' with '-327'
c Var 'dijk_00001_00005_00002' direct represents '1' with '327'
c Var 'dijk_00001_00005_00002' order represents '1' with '1'
c Var 'dijk_00001_00005_00002' order represents '0' with '-327'
c Encoding variable: dijk_00001_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00006_00001' direct represents '0' with '-328'
c Var 'dijk_00001_00006_00001' direct represents '1' with '328'
c Var 'dijk_00001_00006_00001' order represents '1' with '1'
c Var 'dijk_00001_00006_00001' order represents '0' with '-328'
c Encoding variable: dijk_00001_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00006_00002' direct represents '0' with '-329'
c Var 'dijk_00001_00006_00002' direct represents '1' with '329'
c Var 'dijk_00001_00006_00002' order represents '1' with '1'
c Var 'dijk_00001_00006_00002' order represents '0' with '-329'
c Encoding variable: dijk_00002_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00001_00001' direct represents '0' with '-330'
c Var 'dijk_00002_00001_00001' direct represents '1' with '330'
c Var 'dijk_00002_00001_00001' order represents '1' with '1'
c Var 'dijk_00002_00001_00001' order represents '0' with '-330'
c Encoding variable: dijk_00002_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00001_00002' direct represents '0' with '-331'
c Var 'dijk_00002_00001_00002' direct represents '1' with '331'
c Var 'dijk_00002_00001_00002' order represents '1' with '1'
c Var 'dijk_00002_00001_00002' order represents '0' with '-331'
c Encoding variable: dijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00002_00001' direct represents '0' with '-332'
c Var 'dijk_00002_00002_00001' direct represents '1' with '332'
c Var 'dijk_00002_00002_00001' order represents '1' with '1'
c Var 'dijk_00002_00002_00001' order represents '0' with '-332'
c Encoding variable: dijk_00002_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00002_00002' direct represents '0' with '-333'
c Var 'dijk_00002_00002_00002' direct represents '1' with '333'
c Var 'dijk_00002_00002_00002' order represents '1' with '1'
c Var 'dijk_00002_00002_00002' order represents '0' with '-333'
c Encoding variable: dijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00003_00001' direct represents '0' with '-334'
c Var 'dijk_00002_00003_00001' direct represents '1' with '334'
c Var 'dijk_00002_00003_00001' order represents '1' with '1'
c Var 'dijk_00002_00003_00001' order represents '0' with '-334'
c Encoding variable: dijk_00002_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00003_00002' direct represents '0' with '-335'
c Var 'dijk_00002_00003_00002' direct represents '1' with '335'
c Var 'dijk_00002_00003_00002' order represents '1' with '1'
c Var 'dijk_00002_00003_00002' order represents '0' with '-335'
c Encoding variable: dijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00004_00001' direct represents '0' with '-336'
c Var 'dijk_00002_00004_00001' direct represents '1' with '336'
c Var 'dijk_00002_00004_00001' order represents '1' with '1'
c Var 'dijk_00002_00004_00001' order represents '0' with '-336'
c Encoding variable: dijk_00002_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00004_00002' direct represents '0' with '-337'
c Var 'dijk_00002_00004_00002' direct represents '1' with '337'
c Var 'dijk_00002_00004_00002' order represents '1' with '1'
c Var 'dijk_00002_00004_00002' order represents '0' with '-337'
c Encoding variable: dijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00005_00001' direct represents '0' with '-338'
c Var 'dijk_00002_00005_00001' direct represents '1' with '338'
c Var 'dijk_00002_00005_00001' order represents '1' with '1'
c Var 'dijk_00002_00005_00001' order represents '0' with '-338'
c Encoding variable: dijk_00002_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00005_00002' direct represents '0' with '-339'
c Var 'dijk_00002_00005_00002' direct represents '1' with '339'
c Var 'dijk_00002_00005_00002' order represents '1' with '1'
c Var 'dijk_00002_00005_00002' order represents '0' with '-339'
c Encoding variable: dijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00006_00001' direct represents '0' with '-340'
c Var 'dijk_00002_00006_00001' direct represents '1' with '340'
c Var 'dijk_00002_00006_00001' order represents '1' with '1'
c Var 'dijk_00002_00006_00001' order represents '0' with '-340'
c Encoding variable: dijk_00002_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00006_00002' direct represents '0' with '-341'
c Var 'dijk_00002_00006_00002' direct represents '1' with '341'
c Var 'dijk_00002_00006_00002' order represents '1' with '1'
c Var 'dijk_00002_00006_00002' order represents '0' with '-341'
c Encoding variable: dijk_00003_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00001_00001' direct represents '0' with '-342'
c Var 'dijk_00003_00001_00001' direct represents '1' with '342'
c Var 'dijk_00003_00001_00001' order represents '1' with '1'
c Var 'dijk_00003_00001_00001' order represents '0' with '-342'
c Encoding variable: dijk_00003_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00001_00002' direct represents '0' with '-343'
c Var 'dijk_00003_00001_00002' direct represents '1' with '343'
c Var 'dijk_00003_00001_00002' order represents '1' with '1'
c Var 'dijk_00003_00001_00002' order represents '0' with '-343'
c Encoding variable: dijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00002_00001' direct represents '0' with '-344'
c Var 'dijk_00003_00002_00001' direct represents '1' with '344'
c Var 'dijk_00003_00002_00001' order represents '1' with '1'
c Var 'dijk_00003_00002_00001' order represents '0' with '-344'
c Encoding variable: dijk_00003_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00002_00002' direct represents '0' with '-345'
c Var 'dijk_00003_00002_00002' direct represents '1' with '345'
c Var 'dijk_00003_00002_00002' order represents '1' with '1'
c Var 'dijk_00003_00002_00002' order represents '0' with '-345'
c Encoding variable: dijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00003_00001' direct represents '0' with '-346'
c Var 'dijk_00003_00003_00001' direct represents '1' with '346'
c Var 'dijk_00003_00003_00001' order represents '1' with '1'
c Var 'dijk_00003_00003_00001' order represents '0' with '-346'
c Encoding variable: dijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00003_00002' direct represents '0' with '-347'
c Var 'dijk_00003_00003_00002' direct represents '1' with '347'
c Var 'dijk_00003_00003_00002' order represents '1' with '1'
c Var 'dijk_00003_00003_00002' order represents '0' with '-347'
c Encoding variable: dijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00004_00001' direct represents '0' with '-348'
c Var 'dijk_00003_00004_00001' direct represents '1' with '348'
c Var 'dijk_00003_00004_00001' order represents '1' with '1'
c Var 'dijk_00003_00004_00001' order represents '0' with '-348'
c Encoding variable: dijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00004_00002' direct represents '0' with '-349'
c Var 'dijk_00003_00004_00002' direct represents '1' with '349'
c Var 'dijk_00003_00004_00002' order represents '1' with '1'
c Var 'dijk_00003_00004_00002' order represents '0' with '-349'
c Encoding variable: dijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00005_00001' direct represents '0' with '-350'
c Var 'dijk_00003_00005_00001' direct represents '1' with '350'
c Var 'dijk_00003_00005_00001' order represents '1' with '1'
c Var 'dijk_00003_00005_00001' order represents '0' with '-350'
c Encoding variable: dijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00005_00002' direct represents '0' with '-351'
c Var 'dijk_00003_00005_00002' direct represents '1' with '351'
c Var 'dijk_00003_00005_00002' order represents '1' with '1'
c Var 'dijk_00003_00005_00002' order represents '0' with '-351'
c Encoding variable: dijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00006_00001' direct represents '0' with '-352'
c Var 'dijk_00003_00006_00001' direct represents '1' with '352'
c Var 'dijk_00003_00006_00001' order represents '1' with '1'
c Var 'dijk_00003_00006_00001' order represents '0' with '-352'
c Encoding variable: dijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00006_00002' direct represents '0' with '-353'
c Var 'dijk_00003_00006_00002' direct represents '1' with '353'
c Var 'dijk_00003_00006_00002' order represents '1' with '1'
c Var 'dijk_00003_00006_00002' order represents '0' with '-353'
c Encoding variable: dijk_00004_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00001_00001' direct represents '0' with '-354'
c Var 'dijk_00004_00001_00001' direct represents '1' with '354'
c Var 'dijk_00004_00001_00001' order represents '1' with '1'
c Var 'dijk_00004_00001_00001' order represents '0' with '-354'
c Encoding variable: dijk_00004_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00001_00002' direct represents '0' with '-355'
c Var 'dijk_00004_00001_00002' direct represents '1' with '355'
c Var 'dijk_00004_00001_00002' order represents '1' with '1'
c Var 'dijk_00004_00001_00002' order represents '0' with '-355'
c Encoding variable: dijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00002_00001' direct represents '0' with '-356'
c Var 'dijk_00004_00002_00001' direct represents '1' with '356'
c Var 'dijk_00004_00002_00001' order represents '1' with '1'
c Var 'dijk_00004_00002_00001' order represents '0' with '-356'
c Encoding variable: dijk_00004_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00002_00002' direct represents '0' with '-357'
c Var 'dijk_00004_00002_00002' direct represents '1' with '357'
c Var 'dijk_00004_00002_00002' order represents '1' with '1'
c Var 'dijk_00004_00002_00002' order represents '0' with '-357'
c Encoding variable: dijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00003_00001' direct represents '0' with '-358'
c Var 'dijk_00004_00003_00001' direct represents '1' with '358'
c Var 'dijk_00004_00003_00001' order represents '1' with '1'
c Var 'dijk_00004_00003_00001' order represents '0' with '-358'
c Encoding variable: dijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00003_00002' direct represents '0' with '-359'
c Var 'dijk_00004_00003_00002' direct represents '1' with '359'
c Var 'dijk_00004_00003_00002' order represents '1' with '1'
c Var 'dijk_00004_00003_00002' order represents '0' with '-359'
c Encoding variable: dijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00004_00001' direct represents '0' with '-360'
c Var 'dijk_00004_00004_00001' direct represents '1' with '360'
c Var 'dijk_00004_00004_00001' order represents '1' with '1'
c Var 'dijk_00004_00004_00001' order represents '0' with '-360'
c Encoding variable: dijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00004_00002' direct represents '0' with '-361'
c Var 'dijk_00004_00004_00002' direct represents '1' with '361'
c Var 'dijk_00004_00004_00002' order represents '1' with '1'
c Var 'dijk_00004_00004_00002' order represents '0' with '-361'
c Encoding variable: dijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00005_00001' direct represents '0' with '-362'
c Var 'dijk_00004_00005_00001' direct represents '1' with '362'
c Var 'dijk_00004_00005_00001' order represents '1' with '1'
c Var 'dijk_00004_00005_00001' order represents '0' with '-362'
c Encoding variable: dijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00005_00002' direct represents '0' with '-363'
c Var 'dijk_00004_00005_00002' direct represents '1' with '363'
c Var 'dijk_00004_00005_00002' order represents '1' with '1'
c Var 'dijk_00004_00005_00002' order represents '0' with '-363'
c Encoding variable: dijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00006_00001' direct represents '0' with '-364'
c Var 'dijk_00004_00006_00001' direct represents '1' with '364'
c Var 'dijk_00004_00006_00001' order represents '1' with '1'
c Var 'dijk_00004_00006_00001' order represents '0' with '-364'
c Encoding variable: dijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00006_00002' direct represents '0' with '-365'
c Var 'dijk_00004_00006_00002' direct represents '1' with '365'
c Var 'dijk_00004_00006_00002' order represents '1' with '1'
c Var 'dijk_00004_00006_00002' order represents '0' with '-365'
c Encoding variable: dijk_00005_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00001_00001' direct represents '0' with '-366'
c Var 'dijk_00005_00001_00001' direct represents '1' with '366'
c Var 'dijk_00005_00001_00001' order represents '1' with '1'
c Var 'dijk_00005_00001_00001' order represents '0' with '-366'
c Encoding variable: dijk_00005_00001_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00005_00001_00002' direct represents '0' with '367'
367 0
c Encoding variable: dijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00002_00001' direct represents '0' with '-368'
c Var 'dijk_00005_00002_00001' direct represents '1' with '368'
c Var 'dijk_00005_00002_00001' order represents '1' with '1'
c Var 'dijk_00005_00002_00001' order represents '0' with '-368'
c Encoding variable: dijk_00005_00002_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00005_00002_00002' direct represents '0' with '369'
369 0
c Encoding variable: dijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00003_00001' direct represents '0' with '-370'
c Var 'dijk_00005_00003_00001' direct represents '1' with '370'
c Var 'dijk_00005_00003_00001' order represents '1' with '1'
c Var 'dijk_00005_00003_00001' order represents '0' with '-370'
c Encoding variable: dijk_00005_00003_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00005_00003_00002' direct represents '0' with '371'
371 0
c Encoding variable: dijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00004_00001' direct represents '0' with '-372'
c Var 'dijk_00005_00004_00001' direct represents '1' with '372'
c Var 'dijk_00005_00004_00001' order represents '1' with '1'
c Var 'dijk_00005_00004_00001' order represents '0' with '-372'
c Encoding variable: dijk_00005_00004_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00005_00004_00002' direct represents '0' with '373'
373 0
c Encoding variable: dijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00005_00001' direct represents '0' with '-374'
c Var 'dijk_00005_00005_00001' direct represents '1' with '374'
c Var 'dijk_00005_00005_00001' order represents '1' with '1'
c Var 'dijk_00005_00005_00001' order represents '0' with '-374'
c Encoding variable: dijk_00005_00005_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00005_00005_00002' direct represents '0' with '375'
375 0
c Encoding variable: dijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00006_00001' direct represents '0' with '-376'
c Var 'dijk_00005_00006_00001' direct represents '1' with '376'
c Var 'dijk_00005_00006_00001' order represents '1' with '1'
c Var 'dijk_00005_00006_00001' order represents '0' with '-376'
c Encoding variable: dijk_00005_00006_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00005_00006_00002' direct represents '0' with '377'
377 0
c Encoding variable: dijk_00006_00001_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00001_00001' direct represents '0' with '378'
378 0
c Encoding variable: dijk_00006_00001_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00001_00002' direct represents '0' with '379'
379 0
c Encoding variable: dijk_00006_00002_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00002_00001' direct represents '0' with '380'
380 0
c Encoding variable: dijk_00006_00002_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00002_00002' direct represents '0' with '381'
381 0
c Encoding variable: dijk_00006_00003_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00003_00001' direct represents '0' with '382'
382 0
c Encoding variable: dijk_00006_00003_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00003_00002' direct represents '0' with '383'
383 0
c Encoding variable: dijk_00006_00004_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00004_00001' direct represents '0' with '384'
384 0
c Encoding variable: dijk_00006_00004_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00004_00002' direct represents '0' with '385'
385 0
c Encoding variable: dijk_00006_00005_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00005_00001' direct represents '0' with '386'
386 0
c Encoding variable: dijk_00006_00005_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00005_00002' direct represents '0' with '387'
387 0
c Encoding variable: dijk_00006_00006_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00006_00001' direct represents '0' with '388'
388 0
c Encoding variable: dijk_00006_00006_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00006_00002' direct represents '0' with '389'
389 0
c Encoding variable: lijk_00001_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00001_00001' direct represents '0' with '390'
390 0
c Encoding variable: lijk_00001_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00001_00002' direct represents '0' with '391'
391 0
c Encoding variable: lijk_00001_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00002_00001' direct represents '0' with '-392'
c Var 'lijk_00001_00002_00001' direct represents '1' with '392'
c Var 'lijk_00001_00002_00001' order represents '1' with '1'
c Var 'lijk_00001_00002_00001' order represents '0' with '-392'
c Encoding variable: lijk_00001_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00002_00002' direct represents '0' with '393'
393 0
c Encoding variable: lijk_00001_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00003_00001' direct represents '0' with '-394'
c Var 'lijk_00001_00003_00001' direct represents '1' with '394'
c Var 'lijk_00001_00003_00001' order represents '1' with '1'
c Var 'lijk_00001_00003_00001' order represents '0' with '-394'
c Encoding variable: lijk_00001_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00003_00002' direct represents '0' with '-395'
c Var 'lijk_00001_00003_00002' direct represents '1' with '395'
c Var 'lijk_00001_00003_00002' order represents '1' with '1'
c Var 'lijk_00001_00003_00002' order represents '0' with '-395'
c Encoding variable: lijk_00001_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00004_00001' direct represents '0' with '-396'
c Var 'lijk_00001_00004_00001' direct represents '1' with '396'
c Var 'lijk_00001_00004_00001' order represents '1' with '1'
c Var 'lijk_00001_00004_00001' order represents '0' with '-396'
c Encoding variable: lijk_00001_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00004_00002' direct represents '0' with '-397'
c Var 'lijk_00001_00004_00002' direct represents '1' with '397'
c Var 'lijk_00001_00004_00002' order represents '1' with '1'
c Var 'lijk_00001_00004_00002' order represents '0' with '-397'
c Encoding variable: lijk_00001_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00005_00001' direct represents '0' with '-398'
c Var 'lijk_00001_00005_00001' direct represents '1' with '398'
c Var 'lijk_00001_00005_00001' order represents '1' with '1'
c Var 'lijk_00001_00005_00001' order represents '0' with '-398'
c Encoding variable: lijk_00001_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00005_00002' direct represents '0' with '-399'
c Var 'lijk_00001_00005_00002' direct represents '1' with '399'
c Var 'lijk_00001_00005_00002' order represents '1' with '1'
c Var 'lijk_00001_00005_00002' order represents '0' with '-399'
c Encoding variable: lijk_00001_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00006_00001' direct represents '0' with '-400'
c Var 'lijk_00001_00006_00001' direct represents '1' with '400'
c Var 'lijk_00001_00006_00001' order represents '1' with '1'
c Var 'lijk_00001_00006_00001' order represents '0' with '-400'
c Encoding variable: lijk_00001_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00006_00002' direct represents '0' with '-401'
c Var 'lijk_00001_00006_00002' direct represents '1' with '401'
c Var 'lijk_00001_00006_00002' order represents '1' with '1'
c Var 'lijk_00001_00006_00002' order represents '0' with '-401'
c Encoding variable: lijk_00002_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00001_00001' direct represents '0' with '402'
402 0
c Encoding variable: lijk_00002_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00001_00002' direct represents '0' with '403'
403 0
c Encoding variable: lijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00002_00001' direct represents '0' with '-404'
c Var 'lijk_00002_00002_00001' direct represents '1' with '404'
c Var 'lijk_00002_00002_00001' order represents '1' with '1'
c Var 'lijk_00002_00002_00001' order represents '0' with '-404'
c Encoding variable: lijk_00002_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00002_00002' direct represents '0' with '405'
405 0
c Encoding variable: lijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00003_00001' direct represents '0' with '-406'
c Var 'lijk_00002_00003_00001' direct represents '1' with '406'
c Var 'lijk_00002_00003_00001' order represents '1' with '1'
c Var 'lijk_00002_00003_00001' order represents '0' with '-406'
c Encoding variable: lijk_00002_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00003_00002' direct represents '0' with '-407'
c Var 'lijk_00002_00003_00002' direct represents '1' with '407'
c Var 'lijk_00002_00003_00002' order represents '1' with '1'
c Var 'lijk_00002_00003_00002' order represents '0' with '-407'
c Encoding variable: lijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00004_00001' direct represents '0' with '-408'
c Var 'lijk_00002_00004_00001' direct represents '1' with '408'
c Var 'lijk_00002_00004_00001' order represents '1' with '1'
c Var 'lijk_00002_00004_00001' order represents '0' with '-408'
c Encoding variable: lijk_00002_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00004_00002' direct represents '0' with '-409'
c Var 'lijk_00002_00004_00002' direct represents '1' with '409'
c Var 'lijk_00002_00004_00002' order represents '1' with '1'
c Var 'lijk_00002_00004_00002' order represents '0' with '-409'
c Encoding variable: lijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00005_00001' direct represents '0' with '-410'
c Var 'lijk_00002_00005_00001' direct represents '1' with '410'
c Var 'lijk_00002_00005_00001' order represents '1' with '1'
c Var 'lijk_00002_00005_00001' order represents '0' with '-410'
c Encoding variable: lijk_00002_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00005_00002' direct represents '0' with '-411'
c Var 'lijk_00002_00005_00002' direct represents '1' with '411'
c Var 'lijk_00002_00005_00002' order represents '1' with '1'
c Var 'lijk_00002_00005_00002' order represents '0' with '-411'
c Encoding variable: lijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00006_00001' direct represents '0' with '-412'
c Var 'lijk_00002_00006_00001' direct represents '1' with '412'
c Var 'lijk_00002_00006_00001' order represents '1' with '1'
c Var 'lijk_00002_00006_00001' order represents '0' with '-412'
c Encoding variable: lijk_00002_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00006_00002' direct represents '0' with '-413'
c Var 'lijk_00002_00006_00002' direct represents '1' with '413'
c Var 'lijk_00002_00006_00002' order represents '1' with '1'
c Var 'lijk_00002_00006_00002' order represents '0' with '-413'
c Encoding variable: lijk_00003_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00001_00001' direct represents '0' with '414'
414 0
c Encoding variable: lijk_00003_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00001_00002' direct represents '0' with '415'
415 0
c Encoding variable: lijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00002_00001' direct represents '0' with '-416'
c Var 'lijk_00003_00002_00001' direct represents '1' with '416'
c Var 'lijk_00003_00002_00001' order represents '1' with '1'
c Var 'lijk_00003_00002_00001' order represents '0' with '-416'
c Encoding variable: lijk_00003_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00002_00002' direct represents '0' with '417'
417 0
c Encoding variable: lijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00003_00001' direct represents '0' with '-418'
c Var 'lijk_00003_00003_00001' direct represents '1' with '418'
c Var 'lijk_00003_00003_00001' order represents '1' with '1'
c Var 'lijk_00003_00003_00001' order represents '0' with '-418'
c Encoding variable: lijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00003_00002' direct represents '0' with '-419'
c Var 'lijk_00003_00003_00002' direct represents '1' with '419'
c Var 'lijk_00003_00003_00002' order represents '1' with '1'
c Var 'lijk_00003_00003_00002' order represents '0' with '-419'
c Encoding variable: lijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00004_00001' direct represents '0' with '-420'
c Var 'lijk_00003_00004_00001' direct represents '1' with '420'
c Var 'lijk_00003_00004_00001' order represents '1' with '1'
c Var 'lijk_00003_00004_00001' order represents '0' with '-420'
c Encoding variable: lijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00004_00002' direct represents '0' with '-421'
c Var 'lijk_00003_00004_00002' direct represents '1' with '421'
c Var 'lijk_00003_00004_00002' order represents '1' with '1'
c Var 'lijk_00003_00004_00002' order represents '0' with '-421'
c Encoding variable: lijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00005_00001' direct represents '0' with '-422'
c Var 'lijk_00003_00005_00001' direct represents '1' with '422'
c Var 'lijk_00003_00005_00001' order represents '1' with '1'
c Var 'lijk_00003_00005_00001' order represents '0' with '-422'
c Encoding variable: lijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00005_00002' direct represents '0' with '-423'
c Var 'lijk_00003_00005_00002' direct represents '1' with '423'
c Var 'lijk_00003_00005_00002' order represents '1' with '1'
c Var 'lijk_00003_00005_00002' order represents '0' with '-423'
c Encoding variable: lijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00006_00001' direct represents '0' with '-424'
c Var 'lijk_00003_00006_00001' direct represents '1' with '424'
c Var 'lijk_00003_00006_00001' order represents '1' with '1'
c Var 'lijk_00003_00006_00001' order represents '0' with '-424'
c Encoding variable: lijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00006_00002' direct represents '0' with '-425'
c Var 'lijk_00003_00006_00002' direct represents '1' with '425'
c Var 'lijk_00003_00006_00002' order represents '1' with '1'
c Var 'lijk_00003_00006_00002' order represents '0' with '-425'
c Encoding variable: lijk_00004_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00001_00001' direct represents '0' with '426'
426 0
c Encoding variable: lijk_00004_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00001_00002' direct represents '0' with '427'
427 0
c Encoding variable: lijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00002_00001' direct represents '0' with '-428'
c Var 'lijk_00004_00002_00001' direct represents '1' with '428'
c Var 'lijk_00004_00002_00001' order represents '1' with '1'
c Var 'lijk_00004_00002_00001' order represents '0' with '-428'
c Encoding variable: lijk_00004_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00002_00002' direct represents '0' with '429'
429 0
c Encoding variable: lijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00003_00001' direct represents '0' with '-430'
c Var 'lijk_00004_00003_00001' direct represents '1' with '430'
c Var 'lijk_00004_00003_00001' order represents '1' with '1'
c Var 'lijk_00004_00003_00001' order represents '0' with '-430'
c Encoding variable: lijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00003_00002' direct represents '0' with '-431'
c Var 'lijk_00004_00003_00002' direct represents '1' with '431'
c Var 'lijk_00004_00003_00002' order represents '1' with '1'
c Var 'lijk_00004_00003_00002' order represents '0' with '-431'
c Encoding variable: lijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00004_00001' direct represents '0' with '-432'
c Var 'lijk_00004_00004_00001' direct represents '1' with '432'
c Var 'lijk_00004_00004_00001' order represents '1' with '1'
c Var 'lijk_00004_00004_00001' order represents '0' with '-432'
c Encoding variable: lijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00004_00002' direct represents '0' with '-433'
c Var 'lijk_00004_00004_00002' direct represents '1' with '433'
c Var 'lijk_00004_00004_00002' order represents '1' with '1'
c Var 'lijk_00004_00004_00002' order represents '0' with '-433'
c Encoding variable: lijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00005_00001' direct represents '0' with '-434'
c Var 'lijk_00004_00005_00001' direct represents '1' with '434'
c Var 'lijk_00004_00005_00001' order represents '1' with '1'
c Var 'lijk_00004_00005_00001' order represents '0' with '-434'
c Encoding variable: lijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00005_00002' direct represents '0' with '-435'
c Var 'lijk_00004_00005_00002' direct represents '1' with '435'
c Var 'lijk_00004_00005_00002' order represents '1' with '1'
c Var 'lijk_00004_00005_00002' order represents '0' with '-435'
c Encoding variable: lijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00006_00001' direct represents '0' with '-436'
c Var 'lijk_00004_00006_00001' direct represents '1' with '436'
c Var 'lijk_00004_00006_00001' order represents '1' with '1'
c Var 'lijk_00004_00006_00001' order represents '0' with '-436'
c Encoding variable: lijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00006_00002' direct represents '0' with '-437'
c Var 'lijk_00004_00006_00002' direct represents '1' with '437'
c Var 'lijk_00004_00006_00002' order represents '1' with '1'
c Var 'lijk_00004_00006_00002' order represents '0' with '-437'
c Encoding variable: lijk_00005_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00001_00001' direct represents '0' with '438'
438 0
c Encoding variable: lijk_00005_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00001_00002' direct represents '0' with '439'
439 0
c Encoding variable: lijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00002_00001' direct represents '0' with '-440'
c Var 'lijk_00005_00002_00001' direct represents '1' with '440'
c Var 'lijk_00005_00002_00001' order represents '1' with '1'
c Var 'lijk_00005_00002_00001' order represents '0' with '-440'
c Encoding variable: lijk_00005_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00002_00002' direct represents '0' with '441'
441 0
c Encoding variable: lijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00003_00001' direct represents '0' with '-442'
c Var 'lijk_00005_00003_00001' direct represents '1' with '442'
c Var 'lijk_00005_00003_00001' order represents '1' with '1'
c Var 'lijk_00005_00003_00001' order represents '0' with '-442'
c Encoding variable: lijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00003_00002' direct represents '0' with '-443'
c Var 'lijk_00005_00003_00002' direct represents '1' with '443'
c Var 'lijk_00005_00003_00002' order represents '1' with '1'
c Var 'lijk_00005_00003_00002' order represents '0' with '-443'
c Encoding variable: lijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00004_00001' direct represents '0' with '-444'
c Var 'lijk_00005_00004_00001' direct represents '1' with '444'
c Var 'lijk_00005_00004_00001' order represents '1' with '1'
c Var 'lijk_00005_00004_00001' order represents '0' with '-444'
c Encoding variable: lijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00004_00002' direct represents '0' with '-445'
c Var 'lijk_00005_00004_00002' direct represents '1' with '445'
c Var 'lijk_00005_00004_00002' order represents '1' with '1'
c Var 'lijk_00005_00004_00002' order represents '0' with '-445'
c Encoding variable: lijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00005_00001' direct represents '0' with '-446'
c Var 'lijk_00005_00005_00001' direct represents '1' with '446'
c Var 'lijk_00005_00005_00001' order represents '1' with '1'
c Var 'lijk_00005_00005_00001' order represents '0' with '-446'
c Encoding variable: lijk_00005_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00005_00002' direct represents '0' with '-447'
c Var 'lijk_00005_00005_00002' direct represents '1' with '447'
c Var 'lijk_00005_00005_00002' order represents '1' with '1'
c Var 'lijk_00005_00005_00002' order represents '0' with '-447'
c Encoding variable: lijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00006_00001' direct represents '0' with '-448'
c Var 'lijk_00005_00006_00001' direct represents '1' with '448'
c Var 'lijk_00005_00006_00001' order represents '1' with '1'
c Var 'lijk_00005_00006_00001' order represents '0' with '-448'
c Encoding variable: lijk_00005_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00006_00002' direct represents '0' with '-449'
c Var 'lijk_00005_00006_00002' direct represents '1' with '449'
c Var 'lijk_00005_00006_00002' order represents '1' with '1'
c Var 'lijk_00005_00006_00002' order represents '0' with '-449'
c Encoding variable: lijk_00006_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00001_00001' direct represents '0' with '450'
450 0
c Encoding variable: lijk_00006_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00001_00002' direct represents '0' with '451'
451 0
c Encoding variable: lijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00002_00001' direct represents '0' with '-452'
c Var 'lijk_00006_00002_00001' direct represents '1' with '452'
c Var 'lijk_00006_00002_00001' order represents '1' with '1'
c Var 'lijk_00006_00002_00001' order represents '0' with '-452'
c Encoding variable: lijk_00006_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00002_00002' direct represents '0' with '453'
453 0
c Encoding variable: lijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00003_00001' direct represents '0' with '-454'
c Var 'lijk_00006_00003_00001' direct represents '1' with '454'
c Var 'lijk_00006_00003_00001' order represents '1' with '1'
c Var 'lijk_00006_00003_00001' order represents '0' with '-454'
c Encoding variable: lijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00003_00002' direct represents '0' with '-455'
c Var 'lijk_00006_00003_00002' direct represents '1' with '455'
c Var 'lijk_00006_00003_00002' order represents '1' with '1'
c Var 'lijk_00006_00003_00002' order represents '0' with '-455'
c Encoding variable: lijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00004_00001' direct represents '0' with '-456'
c Var 'lijk_00006_00004_00001' direct represents '1' with '456'
c Var 'lijk_00006_00004_00001' order represents '1' with '1'
c Var 'lijk_00006_00004_00001' order represents '0' with '-456'
c Encoding variable: lijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00004_00002' direct represents '0' with '-457'
c Var 'lijk_00006_00004_00002' direct represents '1' with '457'
c Var 'lijk_00006_00004_00002' order represents '1' with '1'
c Var 'lijk_00006_00004_00002' order represents '0' with '-457'
c Encoding variable: lijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00005_00001' direct represents '0' with '-458'
c Var 'lijk_00006_00005_00001' direct represents '1' with '458'
c Var 'lijk_00006_00005_00001' order represents '1' with '1'
c Var 'lijk_00006_00005_00001' order represents '0' with '-458'
c Encoding variable: lijk_00006_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00005_00002' direct represents '0' with '-459'
c Var 'lijk_00006_00005_00002' direct represents '1' with '459'
c Var 'lijk_00006_00005_00002' order represents '1' with '1'
c Var 'lijk_00006_00005_00002' order represents '0' with '-459'
c Encoding variable: lijk_00006_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00006_00001' direct represents '0' with '-460'
c Var 'lijk_00006_00006_00001' direct represents '1' with '460'
c Var 'lijk_00006_00006_00001' order represents '1' with '1'
c Var 'lijk_00006_00006_00001' order represents '0' with '-460'
c Encoding variable: lijk_00006_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00006_00002' direct represents '0' with '-461'
c Var 'lijk_00006_00006_00002' direct represents '1' with '461'
c Var 'lijk_00006_00006_00002' order represents '1' with '1'
c Var 'lijk_00006_00006_00002' order represents '0' with '-461'
c Encoding variable: uijk_00001_00001_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00001_00001' direct represents '0' with '462'
462 0
c Encoding variable: uijk_00001_00001_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00001_00002' direct represents '0' with '463'
463 0
c Encoding variable: uijk_00001_00002_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00002_00001' direct represents '0' with '464'
464 0
c Encoding variable: uijk_00001_00002_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00002_00002' direct represents '0' with '465'
465 0
c Encoding variable: uijk_00001_00003_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00003_00001' direct represents '0' with '466'
466 0
c Encoding variable: uijk_00001_00003_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00003_00002' direct represents '0' with '467'
467 0
c Encoding variable: uijk_00001_00004_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00004_00001' direct represents '0' with '468'
468 0
c Encoding variable: uijk_00001_00004_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00004_00002' direct represents '0' with '469'
469 0
c Encoding variable: uijk_00001_00005_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00005_00001' direct represents '0' with '470'
470 0
c Encoding variable: uijk_00001_00005_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00005_00002' direct represents '0' with '471'
471 0
c Encoding variable: uijk_00001_00006_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00006_00001' direct represents '0' with '472'
472 0
c Encoding variable: uijk_00001_00006_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00006_00002' direct represents '0' with '473'
473 0
c Encoding variable: uijk_00002_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00001_00001' direct represents '0' with '-474'
c Var 'uijk_00002_00001_00001' direct represents '1' with '474'
c Var 'uijk_00002_00001_00001' order represents '1' with '1'
c Var 'uijk_00002_00001_00001' order represents '0' with '-474'
c Encoding variable: uijk_00002_00001_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00001_00002' direct represents '0' with '475'
475 0
c Encoding variable: uijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00002_00001' direct represents '0' with '-476'
c Var 'uijk_00002_00002_00001' direct represents '1' with '476'
c Var 'uijk_00002_00002_00001' order represents '1' with '1'
c Var 'uijk_00002_00002_00001' order represents '0' with '-476'
c Encoding variable: uijk_00002_00002_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00002_00002' direct represents '0' with '477'
477 0
c Encoding variable: uijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00003_00001' direct represents '0' with '-478'
c Var 'uijk_00002_00003_00001' direct represents '1' with '478'
c Var 'uijk_00002_00003_00001' order represents '1' with '1'
c Var 'uijk_00002_00003_00001' order represents '0' with '-478'
c Encoding variable: uijk_00002_00003_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00003_00002' direct represents '0' with '479'
479 0
c Encoding variable: uijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00004_00001' direct represents '0' with '-480'
c Var 'uijk_00002_00004_00001' direct represents '1' with '480'
c Var 'uijk_00002_00004_00001' order represents '1' with '1'
c Var 'uijk_00002_00004_00001' order represents '0' with '-480'
c Encoding variable: uijk_00002_00004_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00004_00002' direct represents '0' with '481'
481 0
c Encoding variable: uijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00005_00001' direct represents '0' with '-482'
c Var 'uijk_00002_00005_00001' direct represents '1' with '482'
c Var 'uijk_00002_00005_00001' order represents '1' with '1'
c Var 'uijk_00002_00005_00001' order represents '0' with '-482'
c Encoding variable: uijk_00002_00005_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00005_00002' direct represents '0' with '483'
483 0
c Encoding variable: uijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00006_00001' direct represents '0' with '-484'
c Var 'uijk_00002_00006_00001' direct represents '1' with '484'
c Var 'uijk_00002_00006_00001' order represents '1' with '1'
c Var 'uijk_00002_00006_00001' order represents '0' with '-484'
c Encoding variable: uijk_00002_00006_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00006_00002' direct represents '0' with '485'
485 0
c Encoding variable: uijk_00003_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00001_00001' direct represents '0' with '-486'
c Var 'uijk_00003_00001_00001' direct represents '1' with '486'
c Var 'uijk_00003_00001_00001' order represents '1' with '1'
c Var 'uijk_00003_00001_00001' order represents '0' with '-486'
c Encoding variable: uijk_00003_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00001_00002' direct represents '0' with '-487'
c Var 'uijk_00003_00001_00002' direct represents '1' with '487'
c Var 'uijk_00003_00001_00002' order represents '1' with '1'
c Var 'uijk_00003_00001_00002' order represents '0' with '-487'
c Encoding variable: uijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00002_00001' direct represents '0' with '-488'
c Var 'uijk_00003_00002_00001' direct represents '1' with '488'
c Var 'uijk_00003_00002_00001' order represents '1' with '1'
c Var 'uijk_00003_00002_00001' order represents '0' with '-488'
c Encoding variable: uijk_00003_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00002_00002' direct represents '0' with '-489'
c Var 'uijk_00003_00002_00002' direct represents '1' with '489'
c Var 'uijk_00003_00002_00002' order represents '1' with '1'
c Var 'uijk_00003_00002_00002' order represents '0' with '-489'
c Encoding variable: uijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00003_00001' direct represents '0' with '-490'
c Var 'uijk_00003_00003_00001' direct represents '1' with '490'
c Var 'uijk_00003_00003_00001' order represents '1' with '1'
c Var 'uijk_00003_00003_00001' order represents '0' with '-490'
c Encoding variable: uijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00003_00002' direct represents '0' with '-491'
c Var 'uijk_00003_00003_00002' direct represents '1' with '491'
c Var 'uijk_00003_00003_00002' order represents '1' with '1'
c Var 'uijk_00003_00003_00002' order represents '0' with '-491'
c Encoding variable: uijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00004_00001' direct represents '0' with '-492'
c Var 'uijk_00003_00004_00001' direct represents '1' with '492'
c Var 'uijk_00003_00004_00001' order represents '1' with '1'
c Var 'uijk_00003_00004_00001' order represents '0' with '-492'
c Encoding variable: uijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00004_00002' direct represents '0' with '-493'
c Var 'uijk_00003_00004_00002' direct represents '1' with '493'
c Var 'uijk_00003_00004_00002' order represents '1' with '1'
c Var 'uijk_00003_00004_00002' order represents '0' with '-493'
c Encoding variable: uijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00005_00001' direct represents '0' with '-494'
c Var 'uijk_00003_00005_00001' direct represents '1' with '494'
c Var 'uijk_00003_00005_00001' order represents '1' with '1'
c Var 'uijk_00003_00005_00001' order represents '0' with '-494'
c Encoding variable: uijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00005_00002' direct represents '0' with '-495'
c Var 'uijk_00003_00005_00002' direct represents '1' with '495'
c Var 'uijk_00003_00005_00002' order represents '1' with '1'
c Var 'uijk_00003_00005_00002' order represents '0' with '-495'
c Encoding variable: uijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00006_00001' direct represents '0' with '-496'
c Var 'uijk_00003_00006_00001' direct represents '1' with '496'
c Var 'uijk_00003_00006_00001' order represents '1' with '1'
c Var 'uijk_00003_00006_00001' order represents '0' with '-496'
c Encoding variable: uijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00006_00002' direct represents '0' with '-497'
c Var 'uijk_00003_00006_00002' direct represents '1' with '497'
c Var 'uijk_00003_00006_00002' order represents '1' with '1'
c Var 'uijk_00003_00006_00002' order represents '0' with '-497'
c Encoding variable: uijk_00004_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00001_00001' direct represents '0' with '-498'
c Var 'uijk_00004_00001_00001' direct represents '1' with '498'
c Var 'uijk_00004_00001_00001' order represents '1' with '1'
c Var 'uijk_00004_00001_00001' order represents '0' with '-498'
c Encoding variable: uijk_00004_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00001_00002' direct represents '0' with '-499'
c Var 'uijk_00004_00001_00002' direct represents '1' with '499'
c Var 'uijk_00004_00001_00002' order represents '1' with '1'
c Var 'uijk_00004_00001_00002' order represents '0' with '-499'
c Encoding variable: uijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00002_00001' direct represents '0' with '-500'
c Var 'uijk_00004_00002_00001' direct represents '1' with '500'
c Var 'uijk_00004_00002_00001' order represents '1' with '1'
c Var 'uijk_00004_00002_00001' order represents '0' with '-500'
c Encoding variable: uijk_00004_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00002_00002' direct represents '0' with '-501'
c Var 'uijk_00004_00002_00002' direct represents '1' with '501'
c Var 'uijk_00004_00002_00002' order represents '1' with '1'
c Var 'uijk_00004_00002_00002' order represents '0' with '-501'
c Encoding variable: uijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00003_00001' direct represents '0' with '-502'
c Var 'uijk_00004_00003_00001' direct represents '1' with '502'
c Var 'uijk_00004_00003_00001' order represents '1' with '1'
c Var 'uijk_00004_00003_00001' order represents '0' with '-502'
c Encoding variable: uijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00003_00002' direct represents '0' with '-503'
c Var 'uijk_00004_00003_00002' direct represents '1' with '503'
c Var 'uijk_00004_00003_00002' order represents '1' with '1'
c Var 'uijk_00004_00003_00002' order represents '0' with '-503'
c Encoding variable: uijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00004_00001' direct represents '0' with '-504'
c Var 'uijk_00004_00004_00001' direct represents '1' with '504'
c Var 'uijk_00004_00004_00001' order represents '1' with '1'
c Var 'uijk_00004_00004_00001' order represents '0' with '-504'
c Encoding variable: uijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00004_00002' direct represents '0' with '-505'
c Var 'uijk_00004_00004_00002' direct represents '1' with '505'
c Var 'uijk_00004_00004_00002' order represents '1' with '1'
c Var 'uijk_00004_00004_00002' order represents '0' with '-505'
c Encoding variable: uijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00005_00001' direct represents '0' with '-506'
c Var 'uijk_00004_00005_00001' direct represents '1' with '506'
c Var 'uijk_00004_00005_00001' order represents '1' with '1'
c Var 'uijk_00004_00005_00001' order represents '0' with '-506'
c Encoding variable: uijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00005_00002' direct represents '0' with '-507'
c Var 'uijk_00004_00005_00002' direct represents '1' with '507'
c Var 'uijk_00004_00005_00002' order represents '1' with '1'
c Var 'uijk_00004_00005_00002' order represents '0' with '-507'
c Encoding variable: uijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00006_00001' direct represents '0' with '-508'
c Var 'uijk_00004_00006_00001' direct represents '1' with '508'
c Var 'uijk_00004_00006_00001' order represents '1' with '1'
c Var 'uijk_00004_00006_00001' order represents '0' with '-508'
c Encoding variable: uijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00006_00002' direct represents '0' with '-509'
c Var 'uijk_00004_00006_00002' direct represents '1' with '509'
c Var 'uijk_00004_00006_00002' order represents '1' with '1'
c Var 'uijk_00004_00006_00002' order represents '0' with '-509'
c Encoding variable: uijk_00005_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00001_00001' direct represents '0' with '-510'
c Var 'uijk_00005_00001_00001' direct represents '1' with '510'
c Var 'uijk_00005_00001_00001' order represents '1' with '1'
c Var 'uijk_00005_00001_00001' order represents '0' with '-510'
c Encoding variable: uijk_00005_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00001_00002' direct represents '0' with '-511'
c Var 'uijk_00005_00001_00002' direct represents '1' with '511'
c Var 'uijk_00005_00001_00002' order represents '1' with '1'
c Var 'uijk_00005_00001_00002' order represents '0' with '-511'
c Encoding variable: uijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00002_00001' direct represents '0' with '-512'
c Var 'uijk_00005_00002_00001' direct represents '1' with '512'
c Var 'uijk_00005_00002_00001' order represents '1' with '1'
c Var 'uijk_00005_00002_00001' order represents '0' with '-512'
c Encoding variable: uijk_00005_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00002_00002' direct represents '0' with '-513'
c Var 'uijk_00005_00002_00002' direct represents '1' with '513'
c Var 'uijk_00005_00002_00002' order represents '1' with '1'
c Var 'uijk_00005_00002_00002' order represents '0' with '-513'
c Encoding variable: uijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00003_00001' direct represents '0' with '-514'
c Var 'uijk_00005_00003_00001' direct represents '1' with '514'
c Var 'uijk_00005_00003_00001' order represents '1' with '1'
c Var 'uijk_00005_00003_00001' order represents '0' with '-514'
c Encoding variable: uijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00003_00002' direct represents '0' with '-515'
c Var 'uijk_00005_00003_00002' direct represents '1' with '515'
c Var 'uijk_00005_00003_00002' order represents '1' with '1'
c Var 'uijk_00005_00003_00002' order represents '0' with '-515'
c Encoding variable: uijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00004_00001' direct represents '0' with '-516'
c Var 'uijk_00005_00004_00001' direct represents '1' with '516'
c Var 'uijk_00005_00004_00001' order represents '1' with '1'
c Var 'uijk_00005_00004_00001' order represents '0' with '-516'
c Encoding variable: uijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00004_00002' direct represents '0' with '-517'
c Var 'uijk_00005_00004_00002' direct represents '1' with '517'
c Var 'uijk_00005_00004_00002' order represents '1' with '1'
c Var 'uijk_00005_00004_00002' order represents '0' with '-517'
c Encoding variable: uijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00005_00001' direct represents '0' with '-518'
c Var 'uijk_00005_00005_00001' direct represents '1' with '518'
c Var 'uijk_00005_00005_00001' order represents '1' with '1'
c Var 'uijk_00005_00005_00001' order represents '0' with '-518'
c Encoding variable: uijk_00005_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00005_00002' direct represents '0' with '-519'
c Var 'uijk_00005_00005_00002' direct represents '1' with '519'
c Var 'uijk_00005_00005_00002' order represents '1' with '1'
c Var 'uijk_00005_00005_00002' order represents '0' with '-519'
c Encoding variable: uijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00006_00001' direct represents '0' with '-520'
c Var 'uijk_00005_00006_00001' direct represents '1' with '520'
c Var 'uijk_00005_00006_00001' order represents '1' with '1'
c Var 'uijk_00005_00006_00001' order represents '0' with '-520'
c Encoding variable: uijk_00005_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00006_00002' direct represents '0' with '-521'
c Var 'uijk_00005_00006_00002' direct represents '1' with '521'
c Var 'uijk_00005_00006_00002' order represents '1' with '1'
c Var 'uijk_00005_00006_00002' order represents '0' with '-521'
c Encoding variable: uijk_00006_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00001_00001' direct represents '0' with '-522'
c Var 'uijk_00006_00001_00001' direct represents '1' with '522'
c Var 'uijk_00006_00001_00001' order represents '1' with '1'
c Var 'uijk_00006_00001_00001' order represents '0' with '-522'
c Encoding variable: uijk_00006_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00001_00002' direct represents '0' with '-523'
c Var 'uijk_00006_00001_00002' direct represents '1' with '523'
c Var 'uijk_00006_00001_00002' order represents '1' with '1'
c Var 'uijk_00006_00001_00002' order represents '0' with '-523'
c Encoding variable: uijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00002_00001' direct represents '0' with '-524'
c Var 'uijk_00006_00002_00001' direct represents '1' with '524'
c Var 'uijk_00006_00002_00001' order represents '1' with '1'
c Var 'uijk_00006_00002_00001' order represents '0' with '-524'
c Encoding variable: uijk_00006_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00002_00002' direct represents '0' with '-525'
c Var 'uijk_00006_00002_00002' direct represents '1' with '525'
c Var 'uijk_00006_00002_00002' order represents '1' with '1'
c Var 'uijk_00006_00002_00002' order represents '0' with '-525'
c Encoding variable: uijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00003_00001' direct represents '0' with '-526'
c Var 'uijk_00006_00003_00001' direct represents '1' with '526'
c Var 'uijk_00006_00003_00001' order represents '1' with '1'
c Var 'uijk_00006_00003_00001' order represents '0' with '-526'
c Encoding variable: uijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00003_00002' direct represents '0' with '-527'
c Var 'uijk_00006_00003_00002' direct represents '1' with '527'
c Var 'uijk_00006_00003_00002' order represents '1' with '1'
c Var 'uijk_00006_00003_00002' order represents '0' with '-527'
c Encoding variable: uijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00004_00001' direct represents '0' with '-528'
c Var 'uijk_00006_00004_00001' direct represents '1' with '528'
c Var 'uijk_00006_00004_00001' order represents '1' with '1'
c Var 'uijk_00006_00004_00001' order represents '0' with '-528'
c Encoding variable: uijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00004_00002' direct represents '0' with '-529'
c Var 'uijk_00006_00004_00002' direct represents '1' with '529'
c Var 'uijk_00006_00004_00002' order represents '1' with '1'
c Var 'uijk_00006_00004_00002' order represents '0' with '-529'
c Encoding variable: uijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00005_00001' direct represents '0' with '-530'
c Var 'uijk_00006_00005_00001' direct represents '1' with '530'
c Var 'uijk_00006_00005_00001' order represents '1' with '1'
c Var 'uijk_00006_00005_00001' order represents '0' with '-530'
c Encoding variable: uijk_00006_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00005_00002' direct represents '0' with '-531'
c Var 'uijk_00006_00005_00002' direct represents '1' with '531'
c Var 'uijk_00006_00005_00002' order represents '1' with '1'
c Var 'uijk_00006_00005_00002' order represents '0' with '-531'
c Encoding variable: uijk_00006_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00006_00001' direct represents '0' with '-532'
c Var 'uijk_00006_00006_00001' direct represents '1' with '532'
c Var 'uijk_00006_00006_00001' order represents '1' with '1'
c Var 'uijk_00006_00006_00001' order represents '0' with '-532'
c Encoding variable: uijk_00006_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00006_00002' direct represents '0' with '-533'
c Var 'uijk_00006_00006_00002' direct represents '1' with '533'
c Var 'uijk_00006_00006_00002' order represents '1' with '1'
c Var 'uijk_00006_00006_00002' order represents '0' with '-533'
c Encoding variable: num_occupied_by_types_00000 with domain: int(0..36) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00000' order represents '0' with '534'
c Var 'num_occupied_by_types_00000' direct represents '0' with '534'
c Var 'num_occupied_by_types_00000' order represents '1' with '535'
-534 535 0
c Var 'num_occupied_by_types_00000' direct represents '1' with '536'
534 -535 536 0
-536 535 0
-536 -534 0
c Var 'num_occupied_by_types_00000' order represents '2' with '537'
-535 537 0
c Var 'num_occupied_by_types_00000' direct represents '2' with '538'
535 -537 538 0
-538 537 0
-538 -535 0
c Var 'num_occupied_by_types_00000' order represents '3' with '539'
-537 539 0
c Var 'num_occupied_by_types_00000' direct represents '3' with '540'
537 -539 540 0
-540 539 0
-540 -537 0
c Var 'num_occupied_by_types_00000' order represents '4' with '541'
-539 541 0
c Var 'num_occupied_by_types_00000' direct represents '4' with '542'
539 -541 542 0
-542 541 0
-542 -539 0
c Var 'num_occupied_by_types_00000' order represents '5' with '543'
-541 543 0
c Var 'num_occupied_by_types_00000' direct represents '5' with '544'
541 -543 544 0
-544 543 0
-544 -541 0
c Var 'num_occupied_by_types_00000' order represents '6' with '545'
-543 545 0
c Var 'num_occupied_by_types_00000' direct represents '6' with '546'
543 -545 546 0
-546 545 0
-546 -543 0
c Var 'num_occupied_by_types_00000' order represents '7' with '547'
-545 547 0
c Var 'num_occupied_by_types_00000' direct represents '7' with '548'
545 -547 548 0
-548 547 0
-548 -545 0
c Var 'num_occupied_by_types_00000' order represents '8' with '549'
-547 549 0
c Var 'num_occupied_by_types_00000' direct represents '8' with '550'
547 -549 550 0
-550 549 0
-550 -547 0
c Var 'num_occupied_by_types_00000' order represents '9' with '551'
-549 551 0
c Var 'num_occupied_by_types_00000' direct represents '9' with '552'
549 -551 552 0
-552 551 0
-552 -549 0
c Var 'num_occupied_by_types_00000' order represents '10' with '553'
-551 553 0
c Var 'num_occupied_by_types_00000' direct represents '10' with '554'
551 -553 554 0
-554 553 0
-554 -551 0
c Var 'num_occupied_by_types_00000' order represents '11' with '555'
-553 555 0
c Var 'num_occupied_by_types_00000' direct represents '11' with '556'
553 -555 556 0
-556 555 0
-556 -553 0
c Var 'num_occupied_by_types_00000' order represents '12' with '557'
-555 557 0
c Var 'num_occupied_by_types_00000' direct represents '12' with '558'
555 -557 558 0
-558 557 0
-558 -555 0
c Var 'num_occupied_by_types_00000' order represents '13' with '559'
-557 559 0
c Var 'num_occupied_by_types_00000' direct represents '13' with '560'
557 -559 560 0
-560 559 0
-560 -557 0
c Var 'num_occupied_by_types_00000' order represents '14' with '561'
-559 561 0
c Var 'num_occupied_by_types_00000' direct represents '14' with '562'
559 -561 562 0
-562 561 0
-562 -559 0
c Var 'num_occupied_by_types_00000' order represents '15' with '563'
-561 563 0
c Var 'num_occupied_by_types_00000' direct represents '15' with '564'
561 -563 564 0
-564 563 0
-564 -561 0
c Var 'num_occupied_by_types_00000' order represents '16' with '565'
-563 565 0
c Var 'num_occupied_by_types_00000' direct represents '16' with '566'
563 -565 566 0
-566 565 0
-566 -563 0
c Var 'num_occupied_by_types_00000' order represents '17' with '567'
-565 567 0
c Var 'num_occupied_by_types_00000' direct represents '17' with '568'
565 -567 568 0
-568 567 0
-568 -565 0
c Var 'num_occupied_by_types_00000' order represents '18' with '569'
-567 569 0
c Var 'num_occupied_by_types_00000' direct represents '18' with '570'
567 -569 570 0
-570 569 0
-570 -567 0
c Var 'num_occupied_by_types_00000' order represents '19' with '571'
-569 571 0
c Var 'num_occupied_by_types_00000' direct represents '19' with '572'
569 -571 572 0
-572 571 0
-572 -569 0
c Var 'num_occupied_by_types_00000' order represents '20' with '573'
-571 573 0
c Var 'num_occupied_by_types_00000' direct represents '20' with '574'
571 -573 574 0
-574 573 0
-574 -571 0
c Var 'num_occupied_by_types_00000' order represents '21' with '575'
-573 575 0
c Var 'num_occupied_by_types_00000' direct represents '21' with '576'
573 -575 576 0
-576 575 0
-576 -573 0
c Var 'num_occupied_by_types_00000' order represents '22' with '577'
-575 577 0
c Var 'num_occupied_by_types_00000' direct represents '22' with '578'
575 -577 578 0
-578 577 0
-578 -575 0
c Var 'num_occupied_by_types_00000' order represents '23' with '579'
-577 579 0
c Var 'num_occupied_by_types_00000' direct represents '23' with '580'
577 -579 580 0
-580 579 0
-580 -577 0
c Var 'num_occupied_by_types_00000' order represents '24' with '581'
-579 581 0
c Var 'num_occupied_by_types_00000' direct represents '24' with '582'
579 -581 582 0
-582 581 0
-582 -579 0
c Var 'num_occupied_by_types_00000' order represents '25' with '583'
-581 583 0
c Var 'num_occupied_by_types_00000' direct represents '25' with '584'
581 -583 584 0
-584 583 0
-584 -581 0
c Var 'num_occupied_by_types_00000' order represents '26' with '585'
-583 585 0
c Var 'num_occupied_by_types_00000' direct represents '26' with '586'
583 -585 586 0
-586 585 0
-586 -583 0
c Var 'num_occupied_by_types_00000' order represents '27' with '587'
-585 587 0
c Var 'num_occupied_by_types_00000' direct represents '27' with '588'
585 -587 588 0
-588 587 0
-588 -585 0
c Var 'num_occupied_by_types_00000' order represents '28' with '589'
-587 589 0
c Var 'num_occupied_by_types_00000' direct represents '28' with '590'
587 -589 590 0
-590 589 0
-590 -587 0
c Var 'num_occupied_by_types_00000' order represents '29' with '591'
-589 591 0
c Var 'num_occupied_by_types_00000' direct represents '29' with '592'
589 -591 592 0
-592 591 0
-592 -589 0
c Var 'num_occupied_by_types_00000' order represents '30' with '593'
-591 593 0
c Var 'num_occupied_by_types_00000' direct represents '30' with '594'
591 -593 594 0
-594 593 0
-594 -591 0
c Var 'num_occupied_by_types_00000' order represents '31' with '595'
-593 595 0
c Var 'num_occupied_by_types_00000' direct represents '31' with '596'
593 -595 596 0
-596 595 0
-596 -593 0
c Var 'num_occupied_by_types_00000' order represents '32' with '597'
-595 597 0
c Var 'num_occupied_by_types_00000' direct represents '32' with '598'
595 -597 598 0
-598 597 0
-598 -595 0
c Var 'num_occupied_by_types_00000' order represents '33' with '599'
-597 599 0
c Var 'num_occupied_by_types_00000' direct represents '33' with '600'
597 -599 600 0
-600 599 0
-600 -597 0
c Var 'num_occupied_by_types_00000' order represents '34' with '601'
-599 601 0
c Var 'num_occupied_by_types_00000' direct represents '34' with '602'
599 -601 602 0
-602 601 0
-602 -599 0
c Var 'num_occupied_by_types_00000' order represents '35' with '603'
-601 603 0
c Var 'num_occupied_by_types_00000' direct represents '35' with '604'
601 -603 604 0
-604 603 0
-604 -601 0
c Var 'num_occupied_by_types_00000' direct represents '36' with '-603'
534 536 538 540 542 544 546 548 550 552 554 556 558 560 562 564 566 568 570 572 574 576 578 580 582 584 586 588 590 592 594 596 598 600 602 604 -603 0
c Encoding variable: num_occupied_by_types_00001 with domain: int(0..36) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00001' order represents '0' with '605'
c Var 'num_occupied_by_types_00001' direct represents '0' with '605'
c Var 'num_occupied_by_types_00001' order represents '1' with '606'
-605 606 0
c Var 'num_occupied_by_types_00001' direct represents '1' with '607'
605 -606 607 0
-607 606 0
-607 -605 0
c Var 'num_occupied_by_types_00001' order represents '2' with '608'
-606 608 0
c Var 'num_occupied_by_types_00001' direct represents '2' with '609'
606 -608 609 0
-609 608 0
-609 -606 0
c Var 'num_occupied_by_types_00001' order represents '3' with '610'
-608 610 0
c Var 'num_occupied_by_types_00001' direct represents '3' with '611'
608 -610 611 0
-611 610 0
-611 -608 0
c Var 'num_occupied_by_types_00001' order represents '4' with '612'
-610 612 0
c Var 'num_occupied_by_types_00001' direct represents '4' with '613'
610 -612 613 0
-613 612 0
-613 -610 0
c Var 'num_occupied_by_types_00001' order represents '5' with '614'
-612 614 0
c Var 'num_occupied_by_types_00001' direct represents '5' with '615'
612 -614 615 0
-615 614 0
-615 -612 0
c Var 'num_occupied_by_types_00001' order represents '6' with '616'
-614 616 0
c Var 'num_occupied_by_types_00001' direct represents '6' with '617'
614 -616 617 0
-617 616 0
-617 -614 0
c Var 'num_occupied_by_types_00001' order represents '7' with '618'
-616 618 0
c Var 'num_occupied_by_types_00001' direct represents '7' with '619'
616 -618 619 0
-619 618 0
-619 -616 0
c Var 'num_occupied_by_types_00001' order represents '8' with '620'
-618 620 0
c Var 'num_occupied_by_types_00001' direct represents '8' with '621'
618 -620 621 0
-621 620 0
-621 -618 0
c Var 'num_occupied_by_types_00001' order represents '9' with '622'
-620 622 0
c Var 'num_occupied_by_types_00001' direct represents '9' with '623'
620 -622 623 0
-623 622 0
-623 -620 0
c Var 'num_occupied_by_types_00001' order represents '10' with '624'
-622 624 0
c Var 'num_occupied_by_types_00001' direct represents '10' with '625'
622 -624 625 0
-625 624 0
-625 -622 0
c Var 'num_occupied_by_types_00001' order represents '11' with '626'
-624 626 0
c Var 'num_occupied_by_types_00001' direct represents '11' with '627'
624 -626 627 0
-627 626 0
-627 -624 0
c Var 'num_occupied_by_types_00001' order represents '12' with '628'
-626 628 0
c Var 'num_occupied_by_types_00001' direct represents '12' with '629'
626 -628 629 0
-629 628 0
-629 -626 0
c Var 'num_occupied_by_types_00001' order represents '13' with '630'
-628 630 0
c Var 'num_occupied_by_types_00001' direct represents '13' with '631'
628 -630 631 0
-631 630 0
-631 -628 0
c Var 'num_occupied_by_types_00001' order represents '14' with '632'
-630 632 0
c Var 'num_occupied_by_types_00001' direct represents '14' with '633'
630 -632 633 0
-633 632 0
-633 -630 0
c Var 'num_occupied_by_types_00001' order represents '15' with '634'
-632 634 0
c Var 'num_occupied_by_types_00001' direct represents '15' with '635'
632 -634 635 0
-635 634 0
-635 -632 0
c Var 'num_occupied_by_types_00001' order represents '16' with '636'
-634 636 0
c Var 'num_occupied_by_types_00001' direct represents '16' with '637'
634 -636 637 0
-637 636 0
-637 -634 0
c Var 'num_occupied_by_types_00001' order represents '17' with '638'
-636 638 0
c Var 'num_occupied_by_types_00001' direct represents '17' with '639'
636 -638 639 0
-639 638 0
-639 -636 0
c Var 'num_occupied_by_types_00001' order represents '18' with '640'
-638 640 0
c Var 'num_occupied_by_types_00001' direct represents '18' with '641'
638 -640 641 0
-641 640 0
-641 -638 0
c Var 'num_occupied_by_types_00001' order represents '19' with '642'
-640 642 0
c Var 'num_occupied_by_types_00001' direct represents '19' with '643'
640 -642 643 0
-643 642 0
-643 -640 0
c Var 'num_occupied_by_types_00001' order represents '20' with '644'
-642 644 0
c Var 'num_occupied_by_types_00001' direct represents '20' with '645'
642 -644 645 0
-645 644 0
-645 -642 0
c Var 'num_occupied_by_types_00001' order represents '21' with '646'
-644 646 0
c Var 'num_occupied_by_types_00001' direct represents '21' with '647'
644 -646 647 0
-647 646 0
-647 -644 0
c Var 'num_occupied_by_types_00001' order represents '22' with '648'
-646 648 0
c Var 'num_occupied_by_types_00001' direct represents '22' with '649'
646 -648 649 0
-649 648 0
-649 -646 0
c Var 'num_occupied_by_types_00001' order represents '23' with '650'
-648 650 0
c Var 'num_occupied_by_types_00001' direct represents '23' with '651'
648 -650 651 0
-651 650 0
-651 -648 0
c Var 'num_occupied_by_types_00001' order represents '24' with '652'
-650 652 0
c Var 'num_occupied_by_types_00001' direct represents '24' with '653'
650 -652 653 0
-653 652 0
-653 -650 0
c Var 'num_occupied_by_types_00001' order represents '25' with '654'
-652 654 0
c Var 'num_occupied_by_types_00001' direct represents '25' with '655'
652 -654 655 0
-655 654 0
-655 -652 0
c Var 'num_occupied_by_types_00001' order represents '26' with '656'
-654 656 0
c Var 'num_occupied_by_types_00001' direct represents '26' with '657'
654 -656 657 0
-657 656 0
-657 -654 0
c Var 'num_occupied_by_types_00001' order represents '27' with '658'
-656 658 0
c Var 'num_occupied_by_types_00001' direct represents '27' with '659'
656 -658 659 0
-659 658 0
-659 -656 0
c Var 'num_occupied_by_types_00001' order represents '28' with '660'
-658 660 0
c Var 'num_occupied_by_types_00001' direct represents '28' with '661'
658 -660 661 0
-661 660 0
-661 -658 0
c Var 'num_occupied_by_types_00001' order represents '29' with '662'
-660 662 0
c Var 'num_occupied_by_types_00001' direct represents '29' with '663'
660 -662 663 0
-663 662 0
-663 -660 0
c Var 'num_occupied_by_types_00001' order represents '30' with '664'
-662 664 0
c Var 'num_occupied_by_types_00001' direct represents '30' with '665'
662 -664 665 0
-665 664 0
-665 -662 0
c Var 'num_occupied_by_types_00001' order represents '31' with '666'
-664 666 0
c Var 'num_occupied_by_types_00001' direct represents '31' with '667'
664 -666 667 0
-667 666 0
-667 -664 0
c Var 'num_occupied_by_types_00001' order represents '32' with '668'
-666 668 0
c Var 'num_occupied_by_types_00001' direct represents '32' with '669'
666 -668 669 0
-669 668 0
-669 -666 0
c Var 'num_occupied_by_types_00001' order represents '33' with '670'
-668 670 0
c Var 'num_occupied_by_types_00001' direct represents '33' with '671'
668 -670 671 0
-671 670 0
-671 -668 0
c Var 'num_occupied_by_types_00001' order represents '34' with '672'
-670 672 0
c Var 'num_occupied_by_types_00001' direct represents '34' with '673'
670 -672 673 0
-673 672 0
-673 -670 0
c Var 'num_occupied_by_types_00001' order represents '35' with '674'
-672 674 0
c Var 'num_occupied_by_types_00001' direct represents '35' with '675'
672 -674 675 0
-675 674 0
-675 -672 0
c Var 'num_occupied_by_types_00001' direct represents '36' with '-674'
605 607 609 611 613 615 617 619 621 623 625 627 629 631 633 635 637 639 641 643 645 647 649 651 653 655 657 659 661 663 665 667 669 671 673 675 -674 0
c Encoding variable: num_occupied_by_types_00002 with domain: int(0..36) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00002' order represents '0' with '676'
c Var 'num_occupied_by_types_00002' direct represents '0' with '676'
c Var 'num_occupied_by_types_00002' order represents '1' with '677'
-676 677 0
c Var 'num_occupied_by_types_00002' direct represents '1' with '678'
676 -677 678 0
-678 677 0
-678 -676 0
c Var 'num_occupied_by_types_00002' order represents '2' with '679'
-677 679 0
c Var 'num_occupied_by_types_00002' direct represents '2' with '680'
677 -679 680 0
-680 679 0
-680 -677 0
c Var 'num_occupied_by_types_00002' order represents '3' with '681'
-679 681 0
c Var 'num_occupied_by_types_00002' direct represents '3' with '682'
679 -681 682 0
-682 681 0
-682 -679 0
c Var 'num_occupied_by_types_00002' order represents '4' with '683'
-681 683 0
c Var 'num_occupied_by_types_00002' direct represents '4' with '684'
681 -683 684 0
-684 683 0
-684 -681 0
c Var 'num_occupied_by_types_00002' order represents '5' with '685'
-683 685 0
c Var 'num_occupied_by_types_00002' direct represents '5' with '686'
683 -685 686 0
-686 685 0
-686 -683 0
c Var 'num_occupied_by_types_00002' order represents '6' with '687'
-685 687 0
c Var 'num_occupied_by_types_00002' direct represents '6' with '688'
685 -687 688 0
-688 687 0
-688 -685 0
c Var 'num_occupied_by_types_00002' order represents '7' with '689'
-687 689 0
c Var 'num_occupied_by_types_00002' direct represents '7' with '690'
687 -689 690 0
-690 689 0
-690 -687 0
c Var 'num_occupied_by_types_00002' order represents '8' with '691'
-689 691 0
c Var 'num_occupied_by_types_00002' direct represents '8' with '692'
689 -691 692 0
-692 691 0
-692 -689 0
c Var 'num_occupied_by_types_00002' order represents '9' with '693'
-691 693 0
c Var 'num_occupied_by_types_00002' direct represents '9' with '694'
691 -693 694 0
-694 693 0
-694 -691 0
c Var 'num_occupied_by_types_00002' order represents '10' with '695'
-693 695 0
c Var 'num_occupied_by_types_00002' direct represents '10' with '696'
693 -695 696 0
-696 695 0
-696 -693 0
c Var 'num_occupied_by_types_00002' order represents '11' with '697'
-695 697 0
c Var 'num_occupied_by_types_00002' direct represents '11' with '698'
695 -697 698 0
-698 697 0
-698 -695 0
c Var 'num_occupied_by_types_00002' order represents '12' with '699'
-697 699 0
c Var 'num_occupied_by_types_00002' direct represents '12' with '700'
697 -699 700 0
-700 699 0
-700 -697 0
c Var 'num_occupied_by_types_00002' order represents '13' with '701'
-699 701 0
c Var 'num_occupied_by_types_00002' direct represents '13' with '702'
699 -701 702 0
-702 701 0
-702 -699 0
c Var 'num_occupied_by_types_00002' order represents '14' with '703'
-701 703 0
c Var 'num_occupied_by_types_00002' direct represents '14' with '704'
701 -703 704 0
-704 703 0
-704 -701 0
c Var 'num_occupied_by_types_00002' order represents '15' with '705'
-703 705 0
c Var 'num_occupied_by_types_00002' direct represents '15' with '706'
703 -705 706 0
-706 705 0
-706 -703 0
c Var 'num_occupied_by_types_00002' order represents '16' with '707'
-705 707 0
c Var 'num_occupied_by_types_00002' direct represents '16' with '708'
705 -707 708 0
-708 707 0
-708 -705 0
c Var 'num_occupied_by_types_00002' order represents '17' with '709'
-707 709 0
c Var 'num_occupied_by_types_00002' direct represents '17' with '710'
707 -709 710 0
-710 709 0
-710 -707 0
c Var 'num_occupied_by_types_00002' order represents '18' with '711'
-709 711 0
c Var 'num_occupied_by_types_00002' direct represents '18' with '712'
709 -711 712 0
-712 711 0
-712 -709 0
c Var 'num_occupied_by_types_00002' order represents '19' with '713'
-711 713 0
c Var 'num_occupied_by_types_00002' direct represents '19' with '714'
711 -713 714 0
-714 713 0
-714 -711 0
c Var 'num_occupied_by_types_00002' order represents '20' with '715'
-713 715 0
c Var 'num_occupied_by_types_00002' direct represents '20' with '716'
713 -715 716 0
-716 715 0
-716 -713 0
c Var 'num_occupied_by_types_00002' order represents '21' with '717'
-715 717 0
c Var 'num_occupied_by_types_00002' direct represents '21' with '718'
715 -717 718 0
-718 717 0
-718 -715 0
c Var 'num_occupied_by_types_00002' order represents '22' with '719'
-717 719 0
c Var 'num_occupied_by_types_00002' direct represents '22' with '720'
717 -719 720 0
-720 719 0
-720 -717 0
c Var 'num_occupied_by_types_00002' order represents '23' with '721'
-719 721 0
c Var 'num_occupied_by_types_00002' direct represents '23' with '722'
719 -721 722 0
-722 721 0
-722 -719 0
c Var 'num_occupied_by_types_00002' order represents '24' with '723'
-721 723 0
c Var 'num_occupied_by_types_00002' direct represents '24' with '724'
721 -723 724 0
-724 723 0
-724 -721 0
c Var 'num_occupied_by_types_00002' order represents '25' with '725'
-723 725 0
c Var 'num_occupied_by_types_00002' direct represents '25' with '726'
723 -725 726 0
-726 725 0
-726 -723 0
c Var 'num_occupied_by_types_00002' order represents '26' with '727'
-725 727 0
c Var 'num_occupied_by_types_00002' direct represents '26' with '728'
725 -727 728 0
-728 727 0
-728 -725 0
c Var 'num_occupied_by_types_00002' order represents '27' with '729'
-727 729 0
c Var 'num_occupied_by_types_00002' direct represents '27' with '730'
727 -729 730 0
-730 729 0
-730 -727 0
c Var 'num_occupied_by_types_00002' order represents '28' with '731'
-729 731 0
c Var 'num_occupied_by_types_00002' direct represents '28' with '732'
729 -731 732 0
-732 731 0
-732 -729 0
c Var 'num_occupied_by_types_00002' order represents '29' with '733'
-731 733 0
c Var 'num_occupied_by_types_00002' direct represents '29' with '734'
731 -733 734 0
-734 733 0
-734 -731 0
c Var 'num_occupied_by_types_00002' order represents '30' with '735'
-733 735 0
c Var 'num_occupied_by_types_00002' direct represents '30' with '736'
733 -735 736 0
-736 735 0
-736 -733 0
c Var 'num_occupied_by_types_00002' order represents '31' with '737'
-735 737 0
c Var 'num_occupied_by_types_00002' direct represents '31' with '738'
735 -737 738 0
-738 737 0
-738 -735 0
c Var 'num_occupied_by_types_00002' order represents '32' with '739'
-737 739 0
c Var 'num_occupied_by_types_00002' direct represents '32' with '740'
737 -739 740 0
-740 739 0
-740 -737 0
c Var 'num_occupied_by_types_00002' order represents '33' with '741'
-739 741 0
c Var 'num_occupied_by_types_00002' direct represents '33' with '742'
739 -741 742 0
-742 741 0
-742 -739 0
c Var 'num_occupied_by_types_00002' order represents '34' with '743'
-741 743 0
c Var 'num_occupied_by_types_00002' direct represents '34' with '744'
741 -743 744 0
-744 743 0
-744 -741 0
c Var 'num_occupied_by_types_00002' order represents '35' with '745'
-743 745 0
c Var 'num_occupied_by_types_00002' direct represents '35' with '746'
743 -745 746 0
-746 745 0
-746 -743 0
c Var 'num_occupied_by_types_00002' direct represents '36' with '-745'
676 678 680 682 684 686 688 690 692 694 696 698 700 702 704 706 708 710 712 714 716 718 720 722 724 726 728 730 732 734 736 738 740 742 744 746 -745 0
c Encoding variable: num_occupied_by_types_00003 with domain: int(0..36) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00003' order represents '0' with '747'
c Var 'num_occupied_by_types_00003' direct represents '0' with '747'
c Var 'num_occupied_by_types_00003' order represents '1' with '748'
-747 748 0
c Var 'num_occupied_by_types_00003' direct represents '1' with '749'
747 -748 749 0
-749 748 0
-749 -747 0
c Var 'num_occupied_by_types_00003' order represents '2' with '750'
-748 750 0
c Var 'num_occupied_by_types_00003' direct represents '2' with '751'
748 -750 751 0
-751 750 0
-751 -748 0
c Var 'num_occupied_by_types_00003' order represents '3' with '752'
-750 752 0
c Var 'num_occupied_by_types_00003' direct represents '3' with '753'
750 -752 753 0
-753 752 0
-753 -750 0
c Var 'num_occupied_by_types_00003' order represents '4' with '754'
-752 754 0
c Var 'num_occupied_by_types_00003' direct represents '4' with '755'
752 -754 755 0
-755 754 0
-755 -752 0
c Var 'num_occupied_by_types_00003' order represents '5' with '756'
-754 756 0
c Var 'num_occupied_by_types_00003' direct represents '5' with '757'
754 -756 757 0
-757 756 0
-757 -754 0
c Var 'num_occupied_by_types_00003' order represents '6' with '758'
-756 758 0
c Var 'num_occupied_by_types_00003' direct represents '6' with '759'
756 -758 759 0
-759 758 0
-759 -756 0
c Var 'num_occupied_by_types_00003' order represents '7' with '760'
-758 760 0
c Var 'num_occupied_by_types_00003' direct represents '7' with '761'
758 -760 761 0
-761 760 0
-761 -758 0
c Var 'num_occupied_by_types_00003' order represents '8' with '762'
-760 762 0
c Var 'num_occupied_by_types_00003' direct represents '8' with '763'
760 -762 763 0
-763 762 0
-763 -760 0
c Var 'num_occupied_by_types_00003' order represents '9' with '764'
-762 764 0
c Var 'num_occupied_by_types_00003' direct represents '9' with '765'
762 -764 765 0
-765 764 0
-765 -762 0
c Var 'num_occupied_by_types_00003' order represents '10' with '766'
-764 766 0
c Var 'num_occupied_by_types_00003' direct represents '10' with '767'
764 -766 767 0
-767 766 0
-767 -764 0
c Var 'num_occupied_by_types_00003' order represents '11' with '768'
-766 768 0
c Var 'num_occupied_by_types_00003' direct represents '11' with '769'
766 -768 769 0
-769 768 0
-769 -766 0
c Var 'num_occupied_by_types_00003' order represents '12' with '770'
-768 770 0
c Var 'num_occupied_by_types_00003' direct represents '12' with '771'
768 -770 771 0
-771 770 0
-771 -768 0
c Var 'num_occupied_by_types_00003' order represents '13' with '772'
-770 772 0
c Var 'num_occupied_by_types_00003' direct represents '13' with '773'
770 -772 773 0
-773 772 0
-773 -770 0
c Var 'num_occupied_by_types_00003' order represents '14' with '774'
-772 774 0
c Var 'num_occupied_by_types_00003' direct represents '14' with '775'
772 -774 775 0
-775 774 0
-775 -772 0
c Var 'num_occupied_by_types_00003' order represents '15' with '776'
-774 776 0
c Var 'num_occupied_by_types_00003' direct represents '15' with '777'
774 -776 777 0
-777 776 0
-777 -774 0
c Var 'num_occupied_by_types_00003' order represents '16' with '778'
-776 778 0
c Var 'num_occupied_by_types_00003' direct represents '16' with '779'
776 -778 779 0
-779 778 0
-779 -776 0
c Var 'num_occupied_by_types_00003' order represents '17' with '780'
-778 780 0
c Var 'num_occupied_by_types_00003' direct represents '17' with '781'
778 -780 781 0
-781 780 0
-781 -778 0
c Var 'num_occupied_by_types_00003' order represents '18' with '782'
-780 782 0
c Var 'num_occupied_by_types_00003' direct represents '18' with '783'
780 -782 783 0
-783 782 0
-783 -780 0
c Var 'num_occupied_by_types_00003' order represents '19' with '784'
-782 784 0
c Var 'num_occupied_by_types_00003' direct represents '19' with '785'
782 -784 785 0
-785 784 0
-785 -782 0
c Var 'num_occupied_by_types_00003' order represents '20' with '786'
-784 786 0
c Var 'num_occupied_by_types_00003' direct represents '20' with '787'
784 -786 787 0
-787 786 0
-787 -784 0
c Var 'num_occupied_by_types_00003' order represents '21' with '788'
-786 788 0
c Var 'num_occupied_by_types_00003' direct represents '21' with '789'
786 -788 789 0
-789 788 0
-789 -786 0
c Var 'num_occupied_by_types_00003' order represents '22' with '790'
-788 790 0
c Var 'num_occupied_by_types_00003' direct represents '22' with '791'
788 -790 791 0
-791 790 0
-791 -788 0
c Var 'num_occupied_by_types_00003' order represents '23' with '792'
-790 792 0
c Var 'num_occupied_by_types_00003' direct represents '23' with '793'
790 -792 793 0
-793 792 0
-793 -790 0
c Var 'num_occupied_by_types_00003' order represents '24' with '794'
-792 794 0
c Var 'num_occupied_by_types_00003' direct represents '24' with '795'
792 -794 795 0
-795 794 0
-795 -792 0
c Var 'num_occupied_by_types_00003' order represents '25' with '796'
-794 796 0
c Var 'num_occupied_by_types_00003' direct represents '25' with '797'
794 -796 797 0
-797 796 0
-797 -794 0
c Var 'num_occupied_by_types_00003' order represents '26' with '798'
-796 798 0
c Var 'num_occupied_by_types_00003' direct represents '26' with '799'
796 -798 799 0
-799 798 0
-799 -796 0
c Var 'num_occupied_by_types_00003' order represents '27' with '800'
-798 800 0
c Var 'num_occupied_by_types_00003' direct represents '27' with '801'
798 -800 801 0
-801 800 0
-801 -798 0
c Var 'num_occupied_by_types_00003' order represents '28' with '802'
-800 802 0
c Var 'num_occupied_by_types_00003' direct represents '28' with '803'
800 -802 803 0
-803 802 0
-803 -800 0
c Var 'num_occupied_by_types_00003' order represents '29' with '804'
-802 804 0
c Var 'num_occupied_by_types_00003' direct represents '29' with '805'
802 -804 805 0
-805 804 0
-805 -802 0
c Var 'num_occupied_by_types_00003' order represents '30' with '806'
-804 806 0
c Var 'num_occupied_by_types_00003' direct represents '30' with '807'
804 -806 807 0
-807 806 0
-807 -804 0
c Var 'num_occupied_by_types_00003' order represents '31' with '808'
-806 808 0
c Var 'num_occupied_by_types_00003' direct represents '31' with '809'
806 -808 809 0
-809 808 0
-809 -806 0
c Var 'num_occupied_by_types_00003' order represents '32' with '810'
-808 810 0
c Var 'num_occupied_by_types_00003' direct represents '32' with '811'
808 -810 811 0
-811 810 0
-811 -808 0
c Var 'num_occupied_by_types_00003' order represents '33' with '812'
-810 812 0
c Var 'num_occupied_by_types_00003' direct represents '33' with '813'
810 -812 813 0
-813 812 0
-813 -810 0
c Var 'num_occupied_by_types_00003' order represents '34' with '814'
-812 814 0
c Var 'num_occupied_by_types_00003' direct represents '34' with '815'
812 -814 815 0
-815 814 0
-815 -812 0
c Var 'num_occupied_by_types_00003' order represents '35' with '816'
-814 816 0
c Var 'num_occupied_by_types_00003' direct represents '35' with '817'
814 -816 817 0
-817 816 0
-817 -814 0
c Var 'num_occupied_by_types_00003' direct represents '36' with '-816'
747 749 751 753 755 757 759 761 763 765 767 769 771 773 775 777 779 781 783 785 787 789 791 793 795 797 799 801 803 805 807 809 811 813 815 817 -816 0
c Encoding variable: r_column_tallies_00001 with domain: bool (representing constraint )
c Var 'r_column_tallies_00001' direct represents '0' with '-818'
c Var 'r_column_tallies_00001' direct represents '1' with '818'
c Var 'r_column_tallies_00001' order represents '1' with '1'
c Var 'r_column_tallies_00001' order represents '0' with '-818'
c Encoding variable: r_column_tallies_00002 with domain: bool (representing constraint )
c Var 'r_column_tallies_00002' direct represents '0' with '-819'
c Var 'r_column_tallies_00002' direct represents '1' with '819'
c Var 'r_column_tallies_00002' order represents '1' with '1'
c Var 'r_column_tallies_00002' order represents '0' with '-819'
c Encoding variable: r_column_tallies_00003 with domain: bool (representing constraint )
c Var 'r_column_tallies_00003' direct represents '0' with '-820'
c Var 'r_column_tallies_00003' direct represents '1' with '820'
c Var 'r_column_tallies_00003' order represents '1' with '1'
c Var 'r_column_tallies_00003' order represents '0' with '-820'
c Encoding variable: r_column_tallies_00004 with domain: bool (representing constraint )
c Var 'r_column_tallies_00004' direct represents '0' with '-821'
c Var 'r_column_tallies_00004' direct represents '1' with '821'
c Var 'r_column_tallies_00004' order represents '1' with '1'
c Var 'r_column_tallies_00004' order represents '0' with '-821'
c Encoding variable: r_column_tallies_00005 with domain: bool (representing constraint )
c Var 'r_column_tallies_00005' direct represents '0' with '-822'
c Var 'r_column_tallies_00005' direct represents '1' with '822'
c Var 'r_column_tallies_00005' order represents '1' with '1'
c Var 'r_column_tallies_00005' order represents '0' with '-822'
c Encoding variable: r_column_tallies_00006 with domain: bool (representing constraint )
c Var 'r_column_tallies_00006' direct represents '0' with '-823'
c Var 'r_column_tallies_00006' direct represents '1' with '823'
c Var 'r_column_tallies_00006' order represents '1' with '1'
c Var 'r_column_tallies_00006' order represents '0' with '-823'
c Encoding variable: r_row_tallies_00001 with domain: bool (representing constraint )
c Var 'r_row_tallies_00001' direct represents '0' with '-824'
c Var 'r_row_tallies_00001' direct represents '1' with '824'
c Var 'r_row_tallies_00001' order represents '1' with '1'
c Var 'r_row_tallies_00001' order represents '0' with '-824'
c Encoding variable: r_row_tallies_00002 with domain: bool (representing constraint )
c Var 'r_row_tallies_00002' direct represents '0' with '-825'
c Var 'r_row_tallies_00002' direct represents '1' with '825'
c Var 'r_row_tallies_00002' order represents '1' with '1'
c Var 'r_row_tallies_00002' order represents '0' with '-825'
c Encoding variable: r_row_tallies_00003 with domain: bool (representing constraint )
c Var 'r_row_tallies_00003' direct represents '0' with '-826'
c Var 'r_row_tallies_00003' direct represents '1' with '826'
c Var 'r_row_tallies_00003' order represents '1' with '1'
c Var 'r_row_tallies_00003' order represents '0' with '-826'
c Encoding variable: r_row_tallies_00004 with domain: bool (representing constraint )
c Var 'r_row_tallies_00004' direct represents '0' with '-827'
c Var 'r_row_tallies_00004' direct represents '1' with '827'
c Var 'r_row_tallies_00004' order represents '1' with '1'
c Var 'r_row_tallies_00004' order represents '0' with '-827'
c Encoding variable: r_row_tallies_00005 with domain: bool (representing constraint )
c Var 'r_row_tallies_00005' direct represents '0' with '-828'
c Var 'r_row_tallies_00005' direct represents '1' with '828'
c Var 'r_row_tallies_00005' order represents '1' with '1'
c Var 'r_row_tallies_00005' order represents '0' with '-828'
c Encoding variable: r_row_tallies_00006 with domain: bool (representing constraint )
c Var 'r_row_tallies_00006' direct represents '0' with '-829'
c Var 'r_row_tallies_00006' direct represents '1' with '829'
c Var 'r_row_tallies_00006' order represents '1' with '1'
c Var 'r_row_tallies_00006' order represents '0' with '-829'
c Encoding variable: r_num_occupied_by_types_00001 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00001' direct represents '0' with '-830'
c Var 'r_num_occupied_by_types_00001' direct represents '1' with '830'
c Var 'r_num_occupied_by_types_00001' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00001' order represents '0' with '-830'
c Encoding variable: r_num_occupied_by_types_00002 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00002' direct represents '0' with '-831'
c Var 'r_num_occupied_by_types_00002' direct represents '1' with '831'
c Var 'r_num_occupied_by_types_00002' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00002' order represents '0' with '-831'
c Encoding variable: r_num_occupied_by_types_00003 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00003' direct represents '0' with '-832'
c Var 'r_num_occupied_by_types_00003' direct represents '1' with '832'
c Var 'r_num_occupied_by_types_00003' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00003' order represents '0' with '-832'
c Encoding variable: r_num_occupied_by_water_00000 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_water_00000' direct represents '0' with '-833'
c Var 'r_num_occupied_by_water_00000' direct represents '1' with '833'
c Var 'r_num_occupied_by_water_00000' order represents '1' with '1'
c Var 'r_num_occupied_by_water_00000' order represents '0' with '-833'
c Encoding variable: r_sij_diagonals_00001_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00001' direct represents '0' with '-834'
c Var 'r_sij_diagonals_00001_00001' direct represents '1' with '834'
c Var 'r_sij_diagonals_00001_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00001' order represents '0' with '-834'
c Encoding variable: r_sij_diagonals_00001_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00002' direct represents '0' with '-835'
c Var 'r_sij_diagonals_00001_00002' direct represents '1' with '835'
c Var 'r_sij_diagonals_00001_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00002' order represents '0' with '-835'
c Encoding variable: r_sij_diagonals_00001_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00003' direct represents '0' with '-836'
c Var 'r_sij_diagonals_00001_00003' direct represents '1' with '836'
c Var 'r_sij_diagonals_00001_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00003' order represents '0' with '-836'
c Encoding variable: r_sij_diagonals_00001_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00004' direct represents '0' with '-837'
c Var 'r_sij_diagonals_00001_00004' direct represents '1' with '837'
c Var 'r_sij_diagonals_00001_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00004' order represents '0' with '-837'
c Encoding variable: r_sij_diagonals_00001_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00005' direct represents '0' with '-838'
c Var 'r_sij_diagonals_00001_00005' direct represents '1' with '838'
c Var 'r_sij_diagonals_00001_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00005' order represents '0' with '-838'
c Encoding variable: r_sij_diagonals_00001_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00006' direct represents '0' with '-839'
c Var 'r_sij_diagonals_00001_00006' direct represents '1' with '839'
c Var 'r_sij_diagonals_00001_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00006' order represents '0' with '-839'
c Encoding variable: r_sij_diagonals_00002_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00001' direct represents '0' with '-840'
c Var 'r_sij_diagonals_00002_00001' direct represents '1' with '840'
c Var 'r_sij_diagonals_00002_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00001' order represents '0' with '-840'
c Encoding variable: r_sij_diagonals_00002_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00002' direct represents '0' with '-841'
c Var 'r_sij_diagonals_00002_00002' direct represents '1' with '841'
c Var 'r_sij_diagonals_00002_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00002' order represents '0' with '-841'
c Encoding variable: r_sij_diagonals_00002_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00003' direct represents '0' with '-842'
c Var 'r_sij_diagonals_00002_00003' direct represents '1' with '842'
c Var 'r_sij_diagonals_00002_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00003' order represents '0' with '-842'
c Encoding variable: r_sij_diagonals_00002_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00004' direct represents '0' with '-843'
c Var 'r_sij_diagonals_00002_00004' direct represents '1' with '843'
c Var 'r_sij_diagonals_00002_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00004' order represents '0' with '-843'
c Encoding variable: r_sij_diagonals_00002_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00005' direct represents '0' with '-844'
c Var 'r_sij_diagonals_00002_00005' direct represents '1' with '844'
c Var 'r_sij_diagonals_00002_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00005' order represents '0' with '-844'
c Encoding variable: r_sij_diagonals_00002_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00006' direct represents '0' with '-845'
c Var 'r_sij_diagonals_00002_00006' direct represents '1' with '845'
c Var 'r_sij_diagonals_00002_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00006' order represents '0' with '-845'
c Encoding variable: r_sij_diagonals_00003_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00001' direct represents '0' with '-846'
c Var 'r_sij_diagonals_00003_00001' direct represents '1' with '846'
c Var 'r_sij_diagonals_00003_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00001' order represents '0' with '-846'
c Encoding variable: r_sij_diagonals_00003_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00002' direct represents '0' with '-847'
c Var 'r_sij_diagonals_00003_00002' direct represents '1' with '847'
c Var 'r_sij_diagonals_00003_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00002' order represents '0' with '-847'
c Encoding variable: r_sij_diagonals_00003_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00003' direct represents '0' with '-848'
c Var 'r_sij_diagonals_00003_00003' direct represents '1' with '848'
c Var 'r_sij_diagonals_00003_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00003' order represents '0' with '-848'
c Encoding variable: r_sij_diagonals_00003_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00004' direct represents '0' with '-849'
c Var 'r_sij_diagonals_00003_00004' direct represents '1' with '849'
c Var 'r_sij_diagonals_00003_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00004' order represents '0' with '-849'
c Encoding variable: r_sij_diagonals_00003_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00005' direct represents '0' with '-850'
c Var 'r_sij_diagonals_00003_00005' direct represents '1' with '850'
c Var 'r_sij_diagonals_00003_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00005' order represents '0' with '-850'
c Encoding variable: r_sij_diagonals_00003_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00006' direct represents '0' with '-851'
c Var 'r_sij_diagonals_00003_00006' direct represents '1' with '851'
c Var 'r_sij_diagonals_00003_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00006' order represents '0' with '-851'
c Encoding variable: r_sij_diagonals_00004_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00001' direct represents '0' with '-852'
c Var 'r_sij_diagonals_00004_00001' direct represents '1' with '852'
c Var 'r_sij_diagonals_00004_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00001' order represents '0' with '-852'
c Encoding variable: r_sij_diagonals_00004_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00002' direct represents '0' with '-853'
c Var 'r_sij_diagonals_00004_00002' direct represents '1' with '853'
c Var 'r_sij_diagonals_00004_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00002' order represents '0' with '-853'
c Encoding variable: r_sij_diagonals_00004_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00003' direct represents '0' with '-854'
c Var 'r_sij_diagonals_00004_00003' direct represents '1' with '854'
c Var 'r_sij_diagonals_00004_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00003' order represents '0' with '-854'
c Encoding variable: r_sij_diagonals_00004_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00004' direct represents '0' with '-855'
c Var 'r_sij_diagonals_00004_00004' direct represents '1' with '855'
c Var 'r_sij_diagonals_00004_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00004' order represents '0' with '-855'
c Encoding variable: r_sij_diagonals_00004_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00005' direct represents '0' with '-856'
c Var 'r_sij_diagonals_00004_00005' direct represents '1' with '856'
c Var 'r_sij_diagonals_00004_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00005' order represents '0' with '-856'
c Encoding variable: r_sij_diagonals_00004_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00006' direct represents '0' with '-857'
c Var 'r_sij_diagonals_00004_00006' direct represents '1' with '857'
c Var 'r_sij_diagonals_00004_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00006' order represents '0' with '-857'
c Encoding variable: r_sij_diagonals_00005_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00001' direct represents '0' with '-858'
c Var 'r_sij_diagonals_00005_00001' direct represents '1' with '858'
c Var 'r_sij_diagonals_00005_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00001' order represents '0' with '-858'
c Encoding variable: r_sij_diagonals_00005_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00002' direct represents '0' with '-859'
c Var 'r_sij_diagonals_00005_00002' direct represents '1' with '859'
c Var 'r_sij_diagonals_00005_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00002' order represents '0' with '-859'
c Encoding variable: r_sij_diagonals_00005_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00003' direct represents '0' with '-860'
c Var 'r_sij_diagonals_00005_00003' direct represents '1' with '860'
c Var 'r_sij_diagonals_00005_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00003' order represents '0' with '-860'
c Encoding variable: r_sij_diagonals_00005_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00004' direct represents '0' with '-861'
c Var 'r_sij_diagonals_00005_00004' direct represents '1' with '861'
c Var 'r_sij_diagonals_00005_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00004' order represents '0' with '-861'
c Encoding variable: r_sij_diagonals_00005_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00005' direct represents '0' with '-862'
c Var 'r_sij_diagonals_00005_00005' direct represents '1' with '862'
c Var 'r_sij_diagonals_00005_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00005' order represents '0' with '-862'
c Encoding variable: r_sij_diagonals_00005_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00006' direct represents '0' with '-863'
c Var 'r_sij_diagonals_00005_00006' direct represents '1' with '863'
c Var 'r_sij_diagonals_00005_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00006' order represents '0' with '-863'
c Encoding variable: r_sij_diagonals_00006_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00001' direct represents '0' with '-864'
c Var 'r_sij_diagonals_00006_00001' direct represents '1' with '864'
c Var 'r_sij_diagonals_00006_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00001' order represents '0' with '-864'
c Encoding variable: r_sij_diagonals_00006_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00002' direct represents '0' with '-865'
c Var 'r_sij_diagonals_00006_00002' direct represents '1' with '865'
c Var 'r_sij_diagonals_00006_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00002' order represents '0' with '-865'
c Encoding variable: r_sij_diagonals_00006_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00003' direct represents '0' with '-866'
c Var 'r_sij_diagonals_00006_00003' direct represents '1' with '866'
c Var 'r_sij_diagonals_00006_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00003' order represents '0' with '-866'
c Encoding variable: r_sij_diagonals_00006_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00004' direct represents '0' with '-867'
c Var 'r_sij_diagonals_00006_00004' direct represents '1' with '867'
c Var 'r_sij_diagonals_00006_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00004' order represents '0' with '-867'
c Encoding variable: r_sij_diagonals_00006_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00005' direct represents '0' with '-868'
c Var 'r_sij_diagonals_00006_00005' direct represents '1' with '868'
c Var 'r_sij_diagonals_00006_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00005' order represents '0' with '-868'
c Encoding variable: r_sij_diagonals_00006_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00006' direct represents '0' with '-869'
c Var 'r_sij_diagonals_00006_00006' direct represents '1' with '869'
c Var 'r_sij_diagonals_00006_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00006' order represents '0' with '-869'
c Encoding variable: r_hints_00001_00001 with domain: bool (representing constraint )
c Var 'r_hints_00001_00001' direct represents '0' with '-870'
c Var 'r_hints_00001_00001' direct represents '1' with '870'
c Var 'r_hints_00001_00001' order represents '1' with '1'
c Var 'r_hints_00001_00001' order represents '0' with '-870'
870 -870 0
c Encoding variable: r_hints_00001_00002 with domain: bool (representing constraint )
c Var 'r_hints_00001_00002' direct represents '0' with '-871'
c Var 'r_hints_00001_00002' direct represents '1' with '871'
c Var 'r_hints_00001_00002' order represents '1' with '1'
c Var 'r_hints_00001_00002' order represents '0' with '-871'
871 -871 0
c Encoding variable: r_hints_00001_00003 with domain: bool (representing constraint )
c Var 'r_hints_00001_00003' direct represents '0' with '-872'
c Var 'r_hints_00001_00003' direct represents '1' with '872'
c Var 'r_hints_00001_00003' order represents '1' with '1'
c Var 'r_hints_00001_00003' order represents '0' with '-872'
872 -872 0
c Encoding variable: r_hints_00001_00004 with domain: bool (representing constraint )
c Var 'r_hints_00001_00004' direct represents '0' with '-873'
c Var 'r_hints_00001_00004' direct represents '1' with '873'
c Var 'r_hints_00001_00004' order represents '1' with '1'
c Var 'r_hints_00001_00004' order represents '0' with '-873'
873 -873 0
c Encoding variable: r_hints_00001_00005 with domain: bool (representing constraint )
c Var 'r_hints_00001_00005' direct represents '0' with '-874'
c Var 'r_hints_00001_00005' direct represents '1' with '874'
c Var 'r_hints_00001_00005' order represents '1' with '1'
c Var 'r_hints_00001_00005' order represents '0' with '-874'
874 -874 0
c Encoding variable: r_hints_00001_00006 with domain: bool (representing constraint )
c Var 'r_hints_00001_00006' direct represents '0' with '-875'
c Var 'r_hints_00001_00006' direct represents '1' with '875'
c Var 'r_hints_00001_00006' order represents '1' with '1'
c Var 'r_hints_00001_00006' order represents '0' with '-875'
875 -875 0
c Encoding variable: r_hints_00002_00001 with domain: bool (representing constraint )
c Var 'r_hints_00002_00001' direct represents '0' with '-876'
c Var 'r_hints_00002_00001' direct represents '1' with '876'
c Var 'r_hints_00002_00001' order represents '1' with '1'
c Var 'r_hints_00002_00001' order represents '0' with '-876'
876 -876 0
c Encoding variable: r_hints_00002_00002 with domain: bool (representing constraint )
c Var 'r_hints_00002_00002' direct represents '0' with '-877'
c Var 'r_hints_00002_00002' direct represents '1' with '877'
c Var 'r_hints_00002_00002' order represents '1' with '1'
c Var 'r_hints_00002_00002' order represents '0' with '-877'
877 -877 0
c Encoding variable: r_hints_00002_00003 with domain: bool (representing constraint )
c Var 'r_hints_00002_00003' direct represents '0' with '-878'
c Var 'r_hints_00002_00003' direct represents '1' with '878'
c Var 'r_hints_00002_00003' order represents '1' with '1'
c Var 'r_hints_00002_00003' order represents '0' with '-878'
878 -878 0
c Encoding variable: r_hints_00002_00004 with domain: bool (representing constraint )
c Var 'r_hints_00002_00004' direct represents '0' with '-879'
c Var 'r_hints_00002_00004' direct represents '1' with '879'
c Var 'r_hints_00002_00004' order represents '1' with '1'
c Var 'r_hints_00002_00004' order represents '0' with '-879'
879 -879 0
c Encoding variable: r_hints_00002_00005 with domain: bool (representing constraint )
c Var 'r_hints_00002_00005' direct represents '0' with '-880'
c Var 'r_hints_00002_00005' direct represents '1' with '880'
c Var 'r_hints_00002_00005' order represents '1' with '1'
c Var 'r_hints_00002_00005' order represents '0' with '-880'
880 -880 0
c Encoding variable: r_hints_00002_00006 with domain: bool (representing constraint )
c Var 'r_hints_00002_00006' direct represents '0' with '-881'
c Var 'r_hints_00002_00006' direct represents '1' with '881'
c Var 'r_hints_00002_00006' order represents '1' with '1'
c Var 'r_hints_00002_00006' order represents '0' with '-881'
881 -881 0
c Encoding variable: r_hints_00003_00001 with domain: bool (representing constraint )
c Var 'r_hints_00003_00001' direct represents '0' with '-882'
c Var 'r_hints_00003_00001' direct represents '1' with '882'
c Var 'r_hints_00003_00001' order represents '1' with '1'
c Var 'r_hints_00003_00001' order represents '0' with '-882'
882 -882 0
c Encoding variable: r_hints_00003_00002 with domain: bool (representing constraint )
c Var 'r_hints_00003_00002' direct represents '0' with '-883'
c Var 'r_hints_00003_00002' direct represents '1' with '883'
c Var 'r_hints_00003_00002' order represents '1' with '1'
c Var 'r_hints_00003_00002' order represents '0' with '-883'
883 -883 0
c Encoding variable: r_hints_00003_00003 with domain: bool (representing constraint )
c Var 'r_hints_00003_00003' direct represents '0' with '-884'
c Var 'r_hints_00003_00003' direct represents '1' with '884'
c Var 'r_hints_00003_00003' order represents '1' with '1'
c Var 'r_hints_00003_00003' order represents '0' with '-884'
c Encoding variable: r_hints_00003_00004 with domain: bool (representing constraint )
c Var 'r_hints_00003_00004' direct represents '0' with '-885'
c Var 'r_hints_00003_00004' direct represents '1' with '885'
c Var 'r_hints_00003_00004' order represents '1' with '1'
c Var 'r_hints_00003_00004' order represents '0' with '-885'
885 -885 0
c Encoding variable: r_hints_00003_00005 with domain: bool (representing constraint )
c Var 'r_hints_00003_00005' direct represents '0' with '-886'
c Var 'r_hints_00003_00005' direct represents '1' with '886'
c Var 'r_hints_00003_00005' order represents '1' with '1'
c Var 'r_hints_00003_00005' order represents '0' with '-886'
886 -886 0
c Encoding variable: r_hints_00003_00006 with domain: bool (representing constraint )
c Var 'r_hints_00003_00006' direct represents '0' with '-887'
c Var 'r_hints_00003_00006' direct represents '1' with '887'
c Var 'r_hints_00003_00006' order represents '1' with '1'
c Var 'r_hints_00003_00006' order represents '0' with '-887'
887 -887 0
c Encoding variable: r_hints_00004_00001 with domain: bool (representing constraint )
c Var 'r_hints_00004_00001' direct represents '0' with '-888'
c Var 'r_hints_00004_00001' direct represents '1' with '888'
c Var 'r_hints_00004_00001' order represents '1' with '1'
c Var 'r_hints_00004_00001' order represents '0' with '-888'
888 -888 0
c Encoding variable: r_hints_00004_00002 with domain: bool (representing constraint )
c Var 'r_hints_00004_00002' direct represents '0' with '-889'
c Var 'r_hints_00004_00002' direct represents '1' with '889'
c Var 'r_hints_00004_00002' order represents '1' with '1'
c Var 'r_hints_00004_00002' order represents '0' with '-889'
889 -889 0
c Encoding variable: r_hints_00004_00003 with domain: bool (representing constraint )
c Var 'r_hints_00004_00003' direct represents '0' with '-890'
c Var 'r_hints_00004_00003' direct represents '1' with '890'
c Var 'r_hints_00004_00003' order represents '1' with '1'
c Var 'r_hints_00004_00003' order represents '0' with '-890'
890 -890 0
c Encoding variable: r_hints_00004_00004 with domain: bool (representing constraint )
c Var 'r_hints_00004_00004' direct represents '0' with '-891'
c Var 'r_hints_00004_00004' direct represents '1' with '891'
c Var 'r_hints_00004_00004' order represents '1' with '1'
c Var 'r_hints_00004_00004' order represents '0' with '-891'
891 -891 0
c Encoding variable: r_hints_00004_00005 with domain: bool (representing constraint )
c Var 'r_hints_00004_00005' direct represents '0' with '-892'
c Var 'r_hints_00004_00005' direct represents '1' with '892'
c Var 'r_hints_00004_00005' order represents '1' with '1'
c Var 'r_hints_00004_00005' order represents '0' with '-892'
892 -892 0
c Encoding variable: r_hints_00004_00006 with domain: bool (representing constraint )
c Var 'r_hints_00004_00006' direct represents '0' with '-893'
c Var 'r_hints_00004_00006' direct represents '1' with '893'
c Var 'r_hints_00004_00006' order represents '1' with '1'
c Var 'r_hints_00004_00006' order represents '0' with '-893'
893 -893 0
c Encoding variable: r_hints_00005_00001 with domain: bool (representing constraint )
c Var 'r_hints_00005_00001' direct represents '0' with '-894'
c Var 'r_hints_00005_00001' direct represents '1' with '894'
c Var 'r_hints_00005_00001' order represents '1' with '1'
c Var 'r_hints_00005_00001' order represents '0' with '-894'
894 -894 0
c Encoding variable: r_hints_00005_00002 with domain: bool (representing constraint )
c Var 'r_hints_00005_00002' direct represents '0' with '-895'
c Var 'r_hints_00005_00002' direct represents '1' with '895'
c Var 'r_hints_00005_00002' order represents '1' with '1'
c Var 'r_hints_00005_00002' order represents '0' with '-895'
895 -895 0
c Encoding variable: r_hints_00005_00003 with domain: bool (representing constraint )
c Var 'r_hints_00005_00003' direct represents '0' with '-896'
c Var 'r_hints_00005_00003' direct represents '1' with '896'
c Var 'r_hints_00005_00003' order represents '1' with '1'
c Var 'r_hints_00005_00003' order represents '0' with '-896'
896 -896 0
c Encoding variable: r_hints_00005_00004 with domain: bool (representing constraint )
c Var 'r_hints_00005_00004' direct represents '0' with '-897'
c Var 'r_hints_00005_00004' direct represents '1' with '897'
c Var 'r_hints_00005_00004' order represents '1' with '1'
c Var 'r_hints_00005_00004' order represents '0' with '-897'
897 -897 0
c Encoding variable: r_hints_00005_00005 with domain: bool (representing constraint )
c Var 'r_hints_00005_00005' direct represents '0' with '-898'
c Var 'r_hints_00005_00005' direct represents '1' with '898'
c Var 'r_hints_00005_00005' order represents '1' with '1'
c Var 'r_hints_00005_00005' order represents '0' with '-898'
898 -898 0
c Encoding variable: r_hints_00005_00006 with domain: bool (representing constraint )
c Var 'r_hints_00005_00006' direct represents '0' with '-899'
c Var 'r_hints_00005_00006' direct represents '1' with '899'
c Var 'r_hints_00005_00006' order represents '1' with '1'
c Var 'r_hints_00005_00006' order represents '0' with '-899'
899 -899 0
c Encoding variable: r_hints_00006_00001 with domain: bool (representing constraint )
c Var 'r_hints_00006_00001' direct represents '0' with '-900'
c Var 'r_hints_00006_00001' direct represents '1' with '900'
c Var 'r_hints_00006_00001' order represents '1' with '1'
c Var 'r_hints_00006_00001' order represents '0' with '-900'
900 -900 0
c Encoding variable: r_hints_00006_00002 with domain: bool (representing constraint )
c Var 'r_hints_00006_00002' direct represents '0' with '-901'
c Var 'r_hints_00006_00002' direct represents '1' with '901'
c Var 'r_hints_00006_00002' order represents '1' with '1'
c Var 'r_hints_00006_00002' order represents '0' with '-901'
901 -901 0
c Encoding variable: r_hints_00006_00003 with domain: bool (representing constraint )
c Var 'r_hints_00006_00003' direct represents '0' with '-902'
c Var 'r_hints_00006_00003' direct represents '1' with '902'
c Var 'r_hints_00006_00003' order represents '1' with '1'
c Var 'r_hints_00006_00003' order represents '0' with '-902'
902 -902 0
c Encoding variable: r_hints_00006_00004 with domain: bool (representing constraint )
c Var 'r_hints_00006_00004' direct represents '0' with '-903'
c Var 'r_hints_00006_00004' direct represents '1' with '903'
c Var 'r_hints_00006_00004' order represents '1' with '1'
c Var 'r_hints_00006_00004' order represents '0' with '-903'
903 -903 0
c Encoding variable: r_hints_00006_00005 with domain: bool (representing constraint )
c Var 'r_hints_00006_00005' direct represents '0' with '-904'
c Var 'r_hints_00006_00005' direct represents '1' with '904'
c Var 'r_hints_00006_00005' order represents '1' with '1'
c Var 'r_hints_00006_00005' order represents '0' with '-904'
904 -904 0
c Encoding variable: r_hints_00006_00006 with domain: bool (representing constraint )
c Var 'r_hints_00006_00006' direct represents '0' with '-905'
c Var 'r_hints_00006_00006' direct represents '1' with '905'
c Var 'r_hints_00006_00006' order represents '1' with '1'
c Var 'r_hints_00006_00006' order represents '0' with '-905'
905 -905 0
c Encoding variable: r_ship_sizes_00001_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00001' direct represents '0' with '-906'
c Var 'r_ship_sizes_00001_00001' direct represents '1' with '906'
c Var 'r_ship_sizes_00001_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00001' order represents '0' with '-906'
c Encoding variable: r_ship_sizes_00001_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00002' direct represents '0' with '-907'
c Var 'r_ship_sizes_00001_00002' direct represents '1' with '907'
c Var 'r_ship_sizes_00001_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00002' order represents '0' with '-907'
c Encoding variable: r_ship_sizes_00001_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00003' direct represents '0' with '-908'
c Var 'r_ship_sizes_00001_00003' direct represents '1' with '908'
c Var 'r_ship_sizes_00001_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00003' order represents '0' with '-908'
c Encoding variable: r_ship_sizes_00001_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00004' direct represents '0' with '-909'
c Var 'r_ship_sizes_00001_00004' direct represents '1' with '909'
c Var 'r_ship_sizes_00001_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00004' order represents '0' with '-909'
c Encoding variable: r_ship_sizes_00001_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00005' direct represents '0' with '-910'
c Var 'r_ship_sizes_00001_00005' direct represents '1' with '910'
c Var 'r_ship_sizes_00001_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00005' order represents '0' with '-910'
c Encoding variable: r_ship_sizes_00001_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00006' direct represents '0' with '-911'
c Var 'r_ship_sizes_00001_00006' direct represents '1' with '911'
c Var 'r_ship_sizes_00001_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00006' order represents '0' with '-911'
c Encoding variable: r_ship_sizes_00002_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00001' direct represents '0' with '-912'
c Var 'r_ship_sizes_00002_00001' direct represents '1' with '912'
c Var 'r_ship_sizes_00002_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00001' order represents '0' with '-912'
c Encoding variable: r_ship_sizes_00002_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00002' direct represents '0' with '-913'
c Var 'r_ship_sizes_00002_00002' direct represents '1' with '913'
c Var 'r_ship_sizes_00002_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00002' order represents '0' with '-913'
c Encoding variable: r_ship_sizes_00002_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00003' direct represents '0' with '-914'
c Var 'r_ship_sizes_00002_00003' direct represents '1' with '914'
c Var 'r_ship_sizes_00002_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00003' order represents '0' with '-914'
c Encoding variable: r_ship_sizes_00002_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00004' direct represents '0' with '-915'
c Var 'r_ship_sizes_00002_00004' direct represents '1' with '915'
c Var 'r_ship_sizes_00002_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00004' order represents '0' with '-915'
c Encoding variable: r_ship_sizes_00002_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00005' direct represents '0' with '-916'
c Var 'r_ship_sizes_00002_00005' direct represents '1' with '916'
c Var 'r_ship_sizes_00002_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00005' order represents '0' with '-916'
c Encoding variable: r_ship_sizes_00002_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00006' direct represents '0' with '-917'
c Var 'r_ship_sizes_00002_00006' direct represents '1' with '917'
c Var 'r_ship_sizes_00002_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00006' order represents '0' with '-917'
c Encoding variable: r_ship_sizes_00003_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00001' direct represents '0' with '-918'
c Var 'r_ship_sizes_00003_00001' direct represents '1' with '918'
c Var 'r_ship_sizes_00003_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00001' order represents '0' with '-918'
c Encoding variable: r_ship_sizes_00003_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00002' direct represents '0' with '-919'
c Var 'r_ship_sizes_00003_00002' direct represents '1' with '919'
c Var 'r_ship_sizes_00003_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00002' order represents '0' with '-919'
c Encoding variable: r_ship_sizes_00003_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00003' direct represents '0' with '-920'
c Var 'r_ship_sizes_00003_00003' direct represents '1' with '920'
c Var 'r_ship_sizes_00003_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00003' order represents '0' with '-920'
c Encoding variable: r_ship_sizes_00003_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00004' direct represents '0' with '-921'
c Var 'r_ship_sizes_00003_00004' direct represents '1' with '921'
c Var 'r_ship_sizes_00003_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00004' order represents '0' with '-921'
c Encoding variable: r_ship_sizes_00003_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00005' direct represents '0' with '-922'
c Var 'r_ship_sizes_00003_00005' direct represents '1' with '922'
c Var 'r_ship_sizes_00003_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00005' order represents '0' with '-922'
c Encoding variable: r_ship_sizes_00003_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00006' direct represents '0' with '-923'
c Var 'r_ship_sizes_00003_00006' direct represents '1' with '923'
c Var 'r_ship_sizes_00003_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00006' order represents '0' with '-923'
c Encoding variable: r_ship_sizes_00004_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00001' direct represents '0' with '-924'
c Var 'r_ship_sizes_00004_00001' direct represents '1' with '924'
c Var 'r_ship_sizes_00004_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00001' order represents '0' with '-924'
c Encoding variable: r_ship_sizes_00004_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00002' direct represents '0' with '-925'
c Var 'r_ship_sizes_00004_00002' direct represents '1' with '925'
c Var 'r_ship_sizes_00004_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00002' order represents '0' with '-925'
c Encoding variable: r_ship_sizes_00004_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00003' direct represents '0' with '-926'
c Var 'r_ship_sizes_00004_00003' direct represents '1' with '926'
c Var 'r_ship_sizes_00004_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00003' order represents '0' with '-926'
c Encoding variable: r_ship_sizes_00004_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00004' direct represents '0' with '-927'
c Var 'r_ship_sizes_00004_00004' direct represents '1' with '927'
c Var 'r_ship_sizes_00004_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00004' order represents '0' with '-927'
c Encoding variable: r_ship_sizes_00004_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00005' direct represents '0' with '-928'
c Var 'r_ship_sizes_00004_00005' direct represents '1' with '928'
c Var 'r_ship_sizes_00004_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00005' order represents '0' with '-928'
c Encoding variable: r_ship_sizes_00004_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00006' direct represents '0' with '-929'
c Var 'r_ship_sizes_00004_00006' direct represents '1' with '929'
c Var 'r_ship_sizes_00004_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00006' order represents '0' with '-929'
c Encoding variable: r_ship_sizes_00005_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00001' direct represents '0' with '-930'
c Var 'r_ship_sizes_00005_00001' direct represents '1' with '930'
c Var 'r_ship_sizes_00005_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00001' order represents '0' with '-930'
c Encoding variable: r_ship_sizes_00005_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00002' direct represents '0' with '-931'
c Var 'r_ship_sizes_00005_00002' direct represents '1' with '931'
c Var 'r_ship_sizes_00005_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00002' order represents '0' with '-931'
c Encoding variable: r_ship_sizes_00005_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00003' direct represents '0' with '-932'
c Var 'r_ship_sizes_00005_00003' direct represents '1' with '932'
c Var 'r_ship_sizes_00005_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00003' order represents '0' with '-932'
c Encoding variable: r_ship_sizes_00005_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00004' direct represents '0' with '-933'
c Var 'r_ship_sizes_00005_00004' direct represents '1' with '933'
c Var 'r_ship_sizes_00005_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00004' order represents '0' with '-933'
c Encoding variable: r_ship_sizes_00005_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00005' direct represents '0' with '-934'
c Var 'r_ship_sizes_00005_00005' direct represents '1' with '934'
c Var 'r_ship_sizes_00005_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00005' order represents '0' with '-934'
c Encoding variable: r_ship_sizes_00005_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00006' direct represents '0' with '-935'
c Var 'r_ship_sizes_00005_00006' direct represents '1' with '935'
c Var 'r_ship_sizes_00005_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00006' order represents '0' with '-935'
c Encoding variable: r_ship_sizes_00006_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00001' direct represents '0' with '-936'
c Var 'r_ship_sizes_00006_00001' direct represents '1' with '936'
c Var 'r_ship_sizes_00006_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00001' order represents '0' with '-936'
c Encoding variable: r_ship_sizes_00006_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00002' direct represents '0' with '-937'
c Var 'r_ship_sizes_00006_00002' direct represents '1' with '937'
c Var 'r_ship_sizes_00006_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00002' order represents '0' with '-937'
c Encoding variable: r_ship_sizes_00006_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00003' direct represents '0' with '-938'
c Var 'r_ship_sizes_00006_00003' direct represents '1' with '938'
c Var 'r_ship_sizes_00006_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00003' order represents '0' with '-938'
c Encoding variable: r_ship_sizes_00006_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00004' direct represents '0' with '-939'
c Var 'r_ship_sizes_00006_00004' direct represents '1' with '939'
c Var 'r_ship_sizes_00006_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00004' order represents '0' with '-939'
c Encoding variable: r_ship_sizes_00006_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00005' direct represents '0' with '-940'
c Var 'r_ship_sizes_00006_00005' direct represents '1' with '940'
c Var 'r_ship_sizes_00006_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00005' order represents '0' with '-940'
c Encoding variable: r_ship_sizes_00006_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00006' direct represents '0' with '-941'
c Var 'r_ship_sizes_00006_00006' direct represents '1' with '941'
c Var 'r_ship_sizes_00006_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00006' order represents '0' with '-941'
c Encoding variable: aux1 with domain: bool (representing constraint ((36 - num_occupied_by_types_00001 - num_occupied_by_types_00002 - num_occupied_by_types_00003)=tv=num_occupied_by_types_00000))
c Var 'aux1' direct represents '0' with '-942'
c Var 'aux1' direct represents '1' with '942'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-942'
c Encoding variable: aux2 with domain: bool (representing constraint ((sij_00001_00001 + sij_00001_00002 + sij_00001_00003 + sij_00001_00004 + sij_00001_00005 + sij_00001_00006)=tv=4))
c Var 'aux2' direct represents '0' with '-943'
c Var 'aux2' direct represents '1' with '943'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-943'
c Encoding variable: aux3 with domain: bool (representing constraint ((sij_00002_00001 + sij_00002_00002 + sij_00002_00003 + sij_00002_00004 + sij_00002_00005 + sij_00002_00006)=tv=0))
c Var 'aux3' direct represents '0' with '-944'
c Var 'aux3' direct represents '1' with '944'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-944'
c Encoding variable: aux4 with domain: bool (representing constraint ((sij_00003_00001 + sij_00003_00002 + sij_00003_00003 + sij_00003_00004 + sij_00003_00005 + sij_00003_00006)=tv=2))
c Var 'aux4' direct represents '0' with '-945'
c Var 'aux4' direct represents '1' with '945'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-945'
c Encoding variable: aux5 with domain: bool (representing constraint ((sij_00004_00001 + sij_00004_00002 + sij_00004_00003 + sij_00004_00004 + sij_00004_00005 + sij_00004_00006)=tv=1))
c Var 'aux5' direct represents '0' with '-946'
c Var 'aux5' direct represents '1' with '946'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-946'
c Encoding variable: aux6 with domain: bool (representing constraint ((sij_00005_00001 + sij_00005_00002 + sij_00005_00003 + sij_00005_00004 + sij_00005_00005 + sij_00005_00006)=tv=2))
c Var 'aux6' direct represents '0' with '-947'
c Var 'aux6' direct represents '1' with '947'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-947'
c Encoding variable: aux7 with domain: bool (representing constraint ((sij_00006_00001 + sij_00006_00002 + sij_00006_00003 + sij_00006_00004 + sij_00006_00005 + sij_00006_00006)=tv=1))
c Var 'aux7' direct represents '0' with '-948'
c Var 'aux7' direct represents '1' with '948'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-948'
c Encoding variable: aux8 with domain: bool (representing constraint ((sij_00002_00001 + sij_00003_00001 + sij_00004_00001 + sij_00005_00001 + sij_00001_00001 + sij_00006_00001)=tv=1))
c Var 'aux8' direct represents '0' with '-949'
c Var 'aux8' direct represents '1' with '949'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-949'
c Encoding variable: aux9 with domain: bool (representing constraint ((sij_00002_00002 + sij_00003_00002 + sij_00004_00002 + sij_00005_00002 + sij_00001_00002 + sij_00006_00002)=tv=0))
c Var 'aux9' direct represents '0' with '-950'
c Var 'aux9' direct represents '1' with '950'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-950'
c Encoding variable: aux10 with domain: bool (representing constraint ((sij_00002_00003 + sij_00003_00003 + sij_00004_00003 + sij_00005_00003 + sij_00001_00003 + sij_00006_00003)=tv=4))
c Var 'aux10' direct represents '0' with '-951'
c Var 'aux10' direct represents '1' with '951'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-951'
c Encoding variable: aux11 with domain: bool (representing constraint ((sij_00002_00004 + sij_00003_00004 + sij_00004_00004 + sij_00005_00004 + sij_00001_00004 + sij_00006_00004)=tv=0))
c Var 'aux11' direct represents '0' with '-952'
c Var 'aux11' direct represents '1' with '952'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-952'
c Encoding variable: aux12 with domain: bool (representing constraint ((sij_00002_00005 + sij_00003_00005 + sij_00004_00005 + sij_00005_00005 + sij_00001_00005 + sij_00006_00005)=tv=3))
c Var 'aux12' direct represents '0' with '-953'
c Var 'aux12' direct represents '1' with '953'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-953'
c Encoding variable: aux13 with domain: bool (representing constraint ((sij_00002_00006 + sij_00003_00006 + sij_00004_00006 + sij_00005_00006 + sij_00001_00006 + sij_00006_00006)=tv=2))
c Var 'aux13' direct represents '0' with '-954'
c Var 'aux13' direct represents '1' with '954'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-954'
c Encoding variable: aux14 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00002_00002)))
c Var 'aux14' direct represents '0' with '-955'
c Var 'aux14' direct represents '1' with '955'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-955'
c Encoding variable: aux15 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00002_00000)))
c Var 'aux15' direct represents '0' with '-956'
c Var 'aux15' direct represents '1' with '956'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-956'
c Encoding variable: aux16 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00000_00000)))
c Var 'aux16' direct represents '0' with '-957'
c Var 'aux16' direct represents '1' with '957'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-957'
c Encoding variable: aux17 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00000_00002)))
c Var 'aux17' direct represents '0' with '-958'
c Var 'aux17' direct represents '1' with '958'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-958'
c Encoding variable: aux18 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00003_00002)))
c Var 'aux18' direct represents '0' with '-959'
c Var 'aux18' direct represents '1' with '959'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-959'
c Encoding variable: aux19 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00003_00000)))
c Var 'aux19' direct represents '0' with '-960'
c Var 'aux19' direct represents '1' with '960'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-960'
c Encoding variable: aux20 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00001_00000)))
c Var 'aux20' direct represents '0' with '-961'
c Var 'aux20' direct represents '1' with '961'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-961'
c Encoding variable: aux21 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00001_00002)))
c Var 'aux21' direct represents '0' with '-962'
c Var 'aux21' direct represents '1' with '962'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-962'
c Encoding variable: aux22 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00004_00002)))
c Var 'aux22' direct represents '0' with '-963'
c Var 'aux22' direct represents '1' with '963'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-963'
c Encoding variable: aux23 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00004_00000)))
c Var 'aux23' direct represents '0' with '-964'
c Var 'aux23' direct represents '1' with '964'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-964'
c Encoding variable: aux24 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00002_00000)))
c Var 'aux24' direct represents '0' with '-965'
c Var 'aux24' direct represents '1' with '965'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-965'
c Encoding variable: aux25 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00002_00002)))
c Var 'aux25' direct represents '0' with '-966'
c Var 'aux25' direct represents '1' with '966'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-966'
c Encoding variable: aux26 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00005_00002)))
c Var 'aux26' direct represents '0' with '-967'
c Var 'aux26' direct represents '1' with '967'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-967'
c Encoding variable: aux27 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00005_00000)))
c Var 'aux27' direct represents '0' with '-968'
c Var 'aux27' direct represents '1' with '968'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-968'
c Encoding variable: aux28 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00003_00000)))
c Var 'aux28' direct represents '0' with '-969'
c Var 'aux28' direct represents '1' with '969'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-969'
c Encoding variable: aux29 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00003_00002)))
c Var 'aux29' direct represents '0' with '-970'
c Var 'aux29' direct represents '1' with '970'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-970'
c Encoding variable: aux30 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00006_00002)))
c Var 'aux30' direct represents '0' with '-971'
c Var 'aux30' direct represents '1' with '971'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-971'
c Encoding variable: aux31 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00006_00000)))
c Var 'aux31' direct represents '0' with '-972'
c Var 'aux31' direct represents '1' with '972'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-972'
c Encoding variable: aux32 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00004_00000)))
c Var 'aux32' direct represents '0' with '-973'
c Var 'aux32' direct represents '1' with '973'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-973'
c Encoding variable: aux33 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00004_00002)))
c Var 'aux33' direct represents '0' with '-974'
c Var 'aux33' direct represents '1' with '974'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-974'
c Encoding variable: aux34 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00007_00002)))
c Var 'aux34' direct represents '0' with '-975'
c Var 'aux34' direct represents '1' with '975'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-975'
c Encoding variable: aux35 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00007_00000)))
c Var 'aux35' direct represents '0' with '-976'
c Var 'aux35' direct represents '1' with '976'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-976'
c Encoding variable: aux36 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00005_00000)))
c Var 'aux36' direct represents '0' with '-977'
c Var 'aux36' direct represents '1' with '977'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-977'
c Encoding variable: aux37 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00005_00002)))
c Var 'aux37' direct represents '0' with '-978'
c Var 'aux37' direct represents '1' with '978'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-978'
c Encoding variable: aux38 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00002_00003)))
c Var 'aux38' direct represents '0' with '-979'
c Var 'aux38' direct represents '1' with '979'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-979'
c Encoding variable: aux39 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00002_00001)))
c Var 'aux39' direct represents '0' with '-980'
c Var 'aux39' direct represents '1' with '980'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-980'
c Encoding variable: aux40 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00000_00001)))
c Var 'aux40' direct represents '0' with '-981'
c Var 'aux40' direct represents '1' with '981'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-981'
c Encoding variable: aux41 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00000_00003)))
c Var 'aux41' direct represents '0' with '-982'
c Var 'aux41' direct represents '1' with '982'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-982'
c Encoding variable: aux42 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00003_00003)))
c Var 'aux42' direct represents '0' with '-983'
c Var 'aux42' direct represents '1' with '983'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-983'
c Encoding variable: aux43 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00003_00001)))
c Var 'aux43' direct represents '0' with '-984'
c Var 'aux43' direct represents '1' with '984'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-984'
c Encoding variable: aux44 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00001_00001)))
c Var 'aux44' direct represents '0' with '-985'
c Var 'aux44' direct represents '1' with '985'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-985'
c Encoding variable: aux45 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00001_00003)))
c Var 'aux45' direct represents '0' with '-986'
c Var 'aux45' direct represents '1' with '986'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-986'
c Encoding variable: aux46 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00004_00003)))
c Var 'aux46' direct represents '0' with '-987'
c Var 'aux46' direct represents '1' with '987'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-987'
c Encoding variable: aux47 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00004_00001)))
c Var 'aux47' direct represents '0' with '-988'
c Var 'aux47' direct represents '1' with '988'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-988'
c Encoding variable: aux48 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00002_00001)))
c Var 'aux48' direct represents '0' with '-989'
c Var 'aux48' direct represents '1' with '989'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-989'
c Encoding variable: aux49 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00002_00003)))
c Var 'aux49' direct represents '0' with '-990'
c Var 'aux49' direct represents '1' with '990'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-990'
c Encoding variable: aux50 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00005_00003)))
c Var 'aux50' direct represents '0' with '-991'
c Var 'aux50' direct represents '1' with '991'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-991'
c Encoding variable: aux51 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00005_00001)))
c Var 'aux51' direct represents '0' with '-992'
c Var 'aux51' direct represents '1' with '992'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-992'
c Encoding variable: aux52 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00003_00001)))
c Var 'aux52' direct represents '0' with '-993'
c Var 'aux52' direct represents '1' with '993'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-993'
c Encoding variable: aux53 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00003_00003)))
c Var 'aux53' direct represents '0' with '-994'
c Var 'aux53' direct represents '1' with '994'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-994'
c Encoding variable: aux54 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00006_00003)))
c Var 'aux54' direct represents '0' with '-995'
c Var 'aux54' direct represents '1' with '995'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-995'
c Encoding variable: aux55 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00006_00001)))
c Var 'aux55' direct represents '0' with '-996'
c Var 'aux55' direct represents '1' with '996'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-996'
c Encoding variable: aux56 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00004_00001)))
c Var 'aux56' direct represents '0' with '-997'
c Var 'aux56' direct represents '1' with '997'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-997'
c Encoding variable: aux57 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00004_00003)))
c Var 'aux57' direct represents '0' with '-998'
c Var 'aux57' direct represents '1' with '998'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-998'
c Encoding variable: aux58 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00007_00003)))
c Var 'aux58' direct represents '0' with '-999'
c Var 'aux58' direct represents '1' with '999'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-999'
c Encoding variable: aux59 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00007_00001)))
c Var 'aux59' direct represents '0' with '-1000'
c Var 'aux59' direct represents '1' with '1000'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-1000'
c Encoding variable: aux60 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00005_00001)))
c Var 'aux60' direct represents '0' with '-1001'
c Var 'aux60' direct represents '1' with '1001'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-1001'
c Encoding variable: aux61 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00005_00003)))
c Var 'aux61' direct represents '0' with '-1002'
c Var 'aux61' direct represents '1' with '1002'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-1002'
c Encoding variable: aux62 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00002_00004)))
c Var 'aux62' direct represents '0' with '-1003'
c Var 'aux62' direct represents '1' with '1003'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-1003'
c Encoding variable: aux63 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00002_00002)))
c Var 'aux63' direct represents '0' with '-1004'
c Var 'aux63' direct represents '1' with '1004'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-1004'
c Encoding variable: aux64 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00000_00002)))
c Var 'aux64' direct represents '0' with '-1005'
c Var 'aux64' direct represents '1' with '1005'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-1005'
c Encoding variable: aux65 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00000_00004)))
c Var 'aux65' direct represents '0' with '-1006'
c Var 'aux65' direct represents '1' with '1006'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-1006'
c Encoding variable: aux66 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00003_00004)))
c Var 'aux66' direct represents '0' with '-1007'
c Var 'aux66' direct represents '1' with '1007'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-1007'
c Encoding variable: aux67 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00003_00002)))
c Var 'aux67' direct represents '0' with '-1008'
c Var 'aux67' direct represents '1' with '1008'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-1008'
c Encoding variable: aux68 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00001_00002)))
c Var 'aux68' direct represents '0' with '-1009'
c Var 'aux68' direct represents '1' with '1009'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-1009'
c Encoding variable: aux69 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00001_00004)))
c Var 'aux69' direct represents '0' with '-1010'
c Var 'aux69' direct represents '1' with '1010'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-1010'
c Encoding variable: aux70 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00004_00004)))
c Var 'aux70' direct represents '0' with '-1011'
c Var 'aux70' direct represents '1' with '1011'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-1011'
c Encoding variable: aux71 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00004_00002)))
c Var 'aux71' direct represents '0' with '-1012'
c Var 'aux71' direct represents '1' with '1012'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-1012'
c Encoding variable: aux72 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00002_00002)))
c Var 'aux72' direct represents '0' with '-1013'
c Var 'aux72' direct represents '1' with '1013'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-1013'
c Encoding variable: aux73 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00002_00004)))
c Var 'aux73' direct represents '0' with '-1014'
c Var 'aux73' direct represents '1' with '1014'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-1014'
c Encoding variable: aux74 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00005_00004)))
c Var 'aux74' direct represents '0' with '-1015'
c Var 'aux74' direct represents '1' with '1015'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-1015'
c Encoding variable: aux75 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00005_00002)))
c Var 'aux75' direct represents '0' with '-1016'
c Var 'aux75' direct represents '1' with '1016'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-1016'
c Encoding variable: aux76 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00003_00002)))
c Var 'aux76' direct represents '0' with '-1017'
c Var 'aux76' direct represents '1' with '1017'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-1017'
c Encoding variable: aux77 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00003_00004)))
c Var 'aux77' direct represents '0' with '-1018'
c Var 'aux77' direct represents '1' with '1018'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-1018'
c Encoding variable: aux78 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00006_00004)))
c Var 'aux78' direct represents '0' with '-1019'
c Var 'aux78' direct represents '1' with '1019'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-1019'
c Encoding variable: aux79 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00006_00002)))
c Var 'aux79' direct represents '0' with '-1020'
c Var 'aux79' direct represents '1' with '1020'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-1020'
c Encoding variable: aux80 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00004_00002)))
c Var 'aux80' direct represents '0' with '-1021'
c Var 'aux80' direct represents '1' with '1021'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-1021'
c Encoding variable: aux81 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00004_00004)))
c Var 'aux81' direct represents '0' with '-1022'
c Var 'aux81' direct represents '1' with '1022'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-1022'
c Encoding variable: aux82 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00007_00004)))
c Var 'aux82' direct represents '0' with '-1023'
c Var 'aux82' direct represents '1' with '1023'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-1023'
c Encoding variable: aux83 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00007_00002)))
c Var 'aux83' direct represents '0' with '-1024'
c Var 'aux83' direct represents '1' with '1024'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-1024'
c Encoding variable: aux84 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00005_00002)))
c Var 'aux84' direct represents '0' with '-1025'
c Var 'aux84' direct represents '1' with '1025'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-1025'
c Encoding variable: aux85 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00005_00004)))
c Var 'aux85' direct represents '0' with '-1026'
c Var 'aux85' direct represents '1' with '1026'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-1026'
c Encoding variable: aux86 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00002_00005)))
c Var 'aux86' direct represents '0' with '-1027'
c Var 'aux86' direct represents '1' with '1027'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-1027'
c Encoding variable: aux87 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00002_00003)))
c Var 'aux87' direct represents '0' with '-1028'
c Var 'aux87' direct represents '1' with '1028'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-1028'
c Encoding variable: aux88 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00000_00003)))
c Var 'aux88' direct represents '0' with '-1029'
c Var 'aux88' direct represents '1' with '1029'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-1029'
c Encoding variable: aux89 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00000_00005)))
c Var 'aux89' direct represents '0' with '-1030'
c Var 'aux89' direct represents '1' with '1030'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-1030'
c Encoding variable: aux90 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00003_00005)))
c Var 'aux90' direct represents '0' with '-1031'
c Var 'aux90' direct represents '1' with '1031'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-1031'
c Encoding variable: aux91 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00003_00003)))
c Var 'aux91' direct represents '0' with '-1032'
c Var 'aux91' direct represents '1' with '1032'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-1032'
c Encoding variable: aux92 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00001_00003)))
c Var 'aux92' direct represents '0' with '-1033'
c Var 'aux92' direct represents '1' with '1033'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-1033'
c Encoding variable: aux93 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00001_00005)))
c Var 'aux93' direct represents '0' with '-1034'
c Var 'aux93' direct represents '1' with '1034'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-1034'
c Encoding variable: aux94 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00004_00005)))
c Var 'aux94' direct represents '0' with '-1035'
c Var 'aux94' direct represents '1' with '1035'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-1035'
c Encoding variable: aux95 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00004_00003)))
c Var 'aux95' direct represents '0' with '-1036'
c Var 'aux95' direct represents '1' with '1036'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-1036'
c Encoding variable: aux96 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00002_00003)))
c Var 'aux96' direct represents '0' with '-1037'
c Var 'aux96' direct represents '1' with '1037'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-1037'
c Encoding variable: aux97 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00002_00005)))
c Var 'aux97' direct represents '0' with '-1038'
c Var 'aux97' direct represents '1' with '1038'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-1038'
c Encoding variable: aux98 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00005_00005)))
c Var 'aux98' direct represents '0' with '-1039'
c Var 'aux98' direct represents '1' with '1039'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-1039'
c Encoding variable: aux99 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00005_00003)))
c Var 'aux99' direct represents '0' with '-1040'
c Var 'aux99' direct represents '1' with '1040'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-1040'
c Encoding variable: aux100 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00003_00003)))
c Var 'aux100' direct represents '0' with '-1041'
c Var 'aux100' direct represents '1' with '1041'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-1041'
c Encoding variable: aux101 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00003_00005)))
c Var 'aux101' direct represents '0' with '-1042'
c Var 'aux101' direct represents '1' with '1042'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-1042'
c Encoding variable: aux102 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00006_00005)))
c Var 'aux102' direct represents '0' with '-1043'
c Var 'aux102' direct represents '1' with '1043'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-1043'
c Encoding variable: aux103 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00006_00003)))
c Var 'aux103' direct represents '0' with '-1044'
c Var 'aux103' direct represents '1' with '1044'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-1044'
c Encoding variable: aux104 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00004_00003)))
c Var 'aux104' direct represents '0' with '-1045'
c Var 'aux104' direct represents '1' with '1045'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-1045'
c Encoding variable: aux105 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00004_00005)))
c Var 'aux105' direct represents '0' with '-1046'
c Var 'aux105' direct represents '1' with '1046'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-1046'
c Encoding variable: aux106 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00007_00005)))
c Var 'aux106' direct represents '0' with '-1047'
c Var 'aux106' direct represents '1' with '1047'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-1047'
c Encoding variable: aux107 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00007_00003)))
c Var 'aux107' direct represents '0' with '-1048'
c Var 'aux107' direct represents '1' with '1048'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-1048'
c Encoding variable: aux108 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00005_00003)))
c Var 'aux108' direct represents '0' with '-1049'
c Var 'aux108' direct represents '1' with '1049'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-1049'
c Encoding variable: aux109 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00005_00005)))
c Var 'aux109' direct represents '0' with '-1050'
c Var 'aux109' direct represents '1' with '1050'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-1050'
c Encoding variable: aux110 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00002_00006)))
c Var 'aux110' direct represents '0' with '-1051'
c Var 'aux110' direct represents '1' with '1051'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-1051'
c Encoding variable: aux111 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00002_00004)))
c Var 'aux111' direct represents '0' with '-1052'
c Var 'aux111' direct represents '1' with '1052'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-1052'
c Encoding variable: aux112 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00000_00004)))
c Var 'aux112' direct represents '0' with '-1053'
c Var 'aux112' direct represents '1' with '1053'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-1053'
c Encoding variable: aux113 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00000_00006)))
c Var 'aux113' direct represents '0' with '-1054'
c Var 'aux113' direct represents '1' with '1054'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-1054'
c Encoding variable: aux114 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00003_00006)))
c Var 'aux114' direct represents '0' with '-1055'
c Var 'aux114' direct represents '1' with '1055'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-1055'
c Encoding variable: aux115 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00003_00004)))
c Var 'aux115' direct represents '0' with '-1056'
c Var 'aux115' direct represents '1' with '1056'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-1056'
c Encoding variable: aux116 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00001_00004)))
c Var 'aux116' direct represents '0' with '-1057'
c Var 'aux116' direct represents '1' with '1057'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-1057'
c Encoding variable: aux117 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00001_00006)))
c Var 'aux117' direct represents '0' with '-1058'
c Var 'aux117' direct represents '1' with '1058'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-1058'
c Encoding variable: aux118 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00004_00006)))
c Var 'aux118' direct represents '0' with '-1059'
c Var 'aux118' direct represents '1' with '1059'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-1059'
c Encoding variable: aux119 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00004_00004)))
c Var 'aux119' direct represents '0' with '-1060'
c Var 'aux119' direct represents '1' with '1060'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-1060'
c Encoding variable: aux120 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00002_00004)))
c Var 'aux120' direct represents '0' with '-1061'
c Var 'aux120' direct represents '1' with '1061'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-1061'
c Encoding variable: aux121 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00002_00006)))
c Var 'aux121' direct represents '0' with '-1062'
c Var 'aux121' direct represents '1' with '1062'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-1062'
c Encoding variable: aux122 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00005_00006)))
c Var 'aux122' direct represents '0' with '-1063'
c Var 'aux122' direct represents '1' with '1063'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-1063'
c Encoding variable: aux123 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00005_00004)))
c Var 'aux123' direct represents '0' with '-1064'
c Var 'aux123' direct represents '1' with '1064'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-1064'
c Encoding variable: aux124 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00003_00004)))
c Var 'aux124' direct represents '0' with '-1065'
c Var 'aux124' direct represents '1' with '1065'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-1065'
c Encoding variable: aux125 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00003_00006)))
c Var 'aux125' direct represents '0' with '-1066'
c Var 'aux125' direct represents '1' with '1066'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-1066'
c Encoding variable: aux126 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00006_00006)))
c Var 'aux126' direct represents '0' with '-1067'
c Var 'aux126' direct represents '1' with '1067'
c Var 'aux126' order represents '1' with '1'
c Var 'aux126' order represents '0' with '-1067'
c Encoding variable: aux127 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00006_00004)))
c Var 'aux127' direct represents '0' with '-1068'
c Var 'aux127' direct represents '1' with '1068'
c Var 'aux127' order represents '1' with '1'
c Var 'aux127' order represents '0' with '-1068'
c Encoding variable: aux128 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00004_00004)))
c Var 'aux128' direct represents '0' with '-1069'
c Var 'aux128' direct represents '1' with '1069'
c Var 'aux128' order represents '1' with '1'
c Var 'aux128' order represents '0' with '-1069'
c Encoding variable: aux129 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00004_00006)))
c Var 'aux129' direct represents '0' with '-1070'
c Var 'aux129' direct represents '1' with '1070'
c Var 'aux129' order represents '1' with '1'
c Var 'aux129' order represents '0' with '-1070'
c Encoding variable: aux130 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00007_00006)))
c Var 'aux130' direct represents '0' with '-1071'
c Var 'aux130' direct represents '1' with '1071'
c Var 'aux130' order represents '1' with '1'
c Var 'aux130' order represents '0' with '-1071'
c Encoding variable: aux131 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00007_00004)))
c Var 'aux131' direct represents '0' with '-1072'
c Var 'aux131' direct represents '1' with '1072'
c Var 'aux131' order represents '1' with '1'
c Var 'aux131' order represents '0' with '-1072'
c Encoding variable: aux132 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00005_00004)))
c Var 'aux132' direct represents '0' with '-1073'
c Var 'aux132' direct represents '1' with '1073'
c Var 'aux132' order represents '1' with '1'
c Var 'aux132' order represents '0' with '-1073'
c Encoding variable: aux133 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00005_00006)))
c Var 'aux133' direct represents '0' with '-1074'
c Var 'aux133' direct represents '1' with '1074'
c Var 'aux133' order represents '1' with '1'
c Var 'aux133' order represents '0' with '-1074'
c Encoding variable: aux134 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00002_00007)))
c Var 'aux134' direct represents '0' with '-1075'
c Var 'aux134' direct represents '1' with '1075'
c Var 'aux134' order represents '1' with '1'
c Var 'aux134' order represents '0' with '-1075'
c Encoding variable: aux135 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00002_00005)))
c Var 'aux135' direct represents '0' with '-1076'
c Var 'aux135' direct represents '1' with '1076'
c Var 'aux135' order represents '1' with '1'
c Var 'aux135' order represents '0' with '-1076'
c Encoding variable: aux136 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00000_00005)))
c Var 'aux136' direct represents '0' with '-1077'
c Var 'aux136' direct represents '1' with '1077'
c Var 'aux136' order represents '1' with '1'
c Var 'aux136' order represents '0' with '-1077'
c Encoding variable: aux137 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00000_00007)))
c Var 'aux137' direct represents '0' with '-1078'
c Var 'aux137' direct represents '1' with '1078'
c Var 'aux137' order represents '1' with '1'
c Var 'aux137' order represents '0' with '-1078'
c Encoding variable: aux138 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00003_00007)))
c Var 'aux138' direct represents '0' with '-1079'
c Var 'aux138' direct represents '1' with '1079'
c Var 'aux138' order represents '1' with '1'
c Var 'aux138' order represents '0' with '-1079'
c Encoding variable: aux139 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00003_00005)))
c Var 'aux139' direct represents '0' with '-1080'
c Var 'aux139' direct represents '1' with '1080'
c Var 'aux139' order represents '1' with '1'
c Var 'aux139' order represents '0' with '-1080'
c Encoding variable: aux140 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00001_00005)))
c Var 'aux140' direct represents '0' with '-1081'
c Var 'aux140' direct represents '1' with '1081'
c Var 'aux140' order represents '1' with '1'
c Var 'aux140' order represents '0' with '-1081'
c Encoding variable: aux141 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00001_00007)))
c Var 'aux141' direct represents '0' with '-1082'
c Var 'aux141' direct represents '1' with '1082'
c Var 'aux141' order represents '1' with '1'
c Var 'aux141' order represents '0' with '-1082'
c Encoding variable: aux142 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00004_00007)))
c Var 'aux142' direct represents '0' with '-1083'
c Var 'aux142' direct represents '1' with '1083'
c Var 'aux142' order represents '1' with '1'
c Var 'aux142' order represents '0' with '-1083'
c Encoding variable: aux143 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00004_00005)))
c Var 'aux143' direct represents '0' with '-1084'
c Var 'aux143' direct represents '1' with '1084'
c Var 'aux143' order represents '1' with '1'
c Var 'aux143' order represents '0' with '-1084'
c Encoding variable: aux144 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00002_00005)))
c Var 'aux144' direct represents '0' with '-1085'
c Var 'aux144' direct represents '1' with '1085'
c Var 'aux144' order represents '1' with '1'
c Var 'aux144' order represents '0' with '-1085'
c Encoding variable: aux145 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00002_00007)))
c Var 'aux145' direct represents '0' with '-1086'
c Var 'aux145' direct represents '1' with '1086'
c Var 'aux145' order represents '1' with '1'
c Var 'aux145' order represents '0' with '-1086'
c Encoding variable: aux146 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00005_00007)))
c Var 'aux146' direct represents '0' with '-1087'
c Var 'aux146' direct represents '1' with '1087'
c Var 'aux146' order represents '1' with '1'
c Var 'aux146' order represents '0' with '-1087'
c Encoding variable: aux147 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00005_00005)))
c Var 'aux147' direct represents '0' with '-1088'
c Var 'aux147' direct represents '1' with '1088'
c Var 'aux147' order represents '1' with '1'
c Var 'aux147' order represents '0' with '-1088'
c Encoding variable: aux148 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00003_00005)))
c Var 'aux148' direct represents '0' with '-1089'
c Var 'aux148' direct represents '1' with '1089'
c Var 'aux148' order represents '1' with '1'
c Var 'aux148' order represents '0' with '-1089'
c Encoding variable: aux149 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00003_00007)))
c Var 'aux149' direct represents '0' with '-1090'
c Var 'aux149' direct represents '1' with '1090'
c Var 'aux149' order represents '1' with '1'
c Var 'aux149' order represents '0' with '-1090'
c Encoding variable: aux150 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00006_00007)))
c Var 'aux150' direct represents '0' with '-1091'
c Var 'aux150' direct represents '1' with '1091'
c Var 'aux150' order represents '1' with '1'
c Var 'aux150' order represents '0' with '-1091'
c Encoding variable: aux151 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00006_00005)))
c Var 'aux151' direct represents '0' with '-1092'
c Var 'aux151' direct represents '1' with '1092'
c Var 'aux151' order represents '1' with '1'
c Var 'aux151' order represents '0' with '-1092'
c Encoding variable: aux152 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00004_00005)))
c Var 'aux152' direct represents '0' with '-1093'
c Var 'aux152' direct represents '1' with '1093'
c Var 'aux152' order represents '1' with '1'
c Var 'aux152' order represents '0' with '-1093'
c Encoding variable: aux153 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00004_00007)))
c Var 'aux153' direct represents '0' with '-1094'
c Var 'aux153' direct represents '1' with '1094'
c Var 'aux153' order represents '1' with '1'
c Var 'aux153' order represents '0' with '-1094'
c Encoding variable: aux154 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00007_00007)))
c Var 'aux154' direct represents '0' with '-1095'
c Var 'aux154' direct represents '1' with '1095'
c Var 'aux154' order represents '1' with '1'
c Var 'aux154' order represents '0' with '-1095'
c Encoding variable: aux155 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00007_00005)))
c Var 'aux155' direct represents '0' with '-1096'
c Var 'aux155' direct represents '1' with '1096'
c Var 'aux155' order represents '1' with '1'
c Var 'aux155' order represents '0' with '-1096'
c Encoding variable: aux156 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00005_00005)))
c Var 'aux156' direct represents '0' with '-1097'
c Var 'aux156' direct represents '1' with '1097'
c Var 'aux156' order represents '1' with '1'
c Var 'aux156' order represents '0' with '-1097'
c Encoding variable: aux157 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00005_00007)))
c Var 'aux157' direct represents '0' with '-1098'
c Var 'aux157' direct represents '1' with '1098'
c Var 'aux157' order represents '1' with '1'
c Var 'aux157' order represents '0' with '-1098'
c Encoding variable: aux158 with domain: bool (representing constraint ((lijk_00001_00001_00001 + lijk_00001_00001_00002 + rijk_00001_00001_00001 + rijk_00001_00001_00002 + 1 + uijk_00001_00001_00001 + uijk_00001_00001_00002 + dijk_00001_00001_00001 + dijk_00001_00001_00002)=tv=agrid_00001_00001))
c Var 'aux158' direct represents '0' with '-1099'
c Var 'aux158' direct represents '1' with '1099'
c Var 'aux158' order represents '1' with '1'
c Var 'aux158' order represents '0' with '-1099'
c Encoding variable: aux159 with domain: bool (representing constraint (sij_00001_00001 -> aux158))
c Var 'aux159' direct represents '0' with '-1100'
c Var 'aux159' direct represents '1' with '1100'
c Var 'aux159' order represents '1' with '1'
c Var 'aux159' order represents '0' with '-1100'
c Encoding variable: aux160 with domain: bool (representing constraint ((lijk_00002_00001_00001 + lijk_00002_00001_00002 + rijk_00002_00001_00001 + rijk_00002_00001_00002 + 1 + uijk_00002_00001_00001 + uijk_00002_00001_00002 + dijk_00002_00001_00001 + dijk_00002_00001_00002)=tv=agrid_00002_00001))
c Var 'aux160' direct represents '0' with '-1101'
c Var 'aux160' direct represents '1' with '1101'
c Var 'aux160' order represents '1' with '1'
c Var 'aux160' order represents '0' with '-1101'
c Encoding variable: aux161 with domain: bool (representing constraint (sij_00002_00001 -> aux160))
c Var 'aux161' direct represents '0' with '-1102'
c Var 'aux161' direct represents '1' with '1102'
c Var 'aux161' order represents '1' with '1'
c Var 'aux161' order represents '0' with '-1102'
c Encoding variable: aux162 with domain: bool (representing constraint ((rijk_00003_00001_00001 + rijk_00003_00001_00002 + 1 + uijk_00003_00001_00001 + uijk_00003_00001_00002 + dijk_00003_00001_00001 + dijk_00003_00001_00002 + lijk_00003_00001_00001 + lijk_00003_00001_00002)=tv=agrid_00003_00001))
c Var 'aux162' direct represents '0' with '-1103'
c Var 'aux162' direct represents '1' with '1103'
c Var 'aux162' order represents '1' with '1'
c Var 'aux162' order represents '0' with '-1103'
c Encoding variable: aux163 with domain: bool (representing constraint (sij_00003_00001 -> aux162))
c Var 'aux163' direct represents '0' with '-1104'
c Var 'aux163' direct represents '1' with '1104'
c Var 'aux163' order represents '1' with '1'
c Var 'aux163' order represents '0' with '-1104'
c Encoding variable: aux164 with domain: bool (representing constraint ((rijk_00004_00001_00001 + rijk_00004_00001_00002 + 1 + uijk_00004_00001_00001 + uijk_00004_00001_00002 + dijk_00004_00001_00001 + dijk_00004_00001_00002 + lijk_00004_00001_00001 + lijk_00004_00001_00002)=tv=agrid_00004_00001))
c Var 'aux164' direct represents '0' with '-1105'
c Var 'aux164' direct represents '1' with '1105'
c Var 'aux164' order represents '1' with '1'
c Var 'aux164' order represents '0' with '-1105'
c Encoding variable: aux165 with domain: bool (representing constraint (sij_00004_00001 -> aux164))
c Var 'aux165' direct represents '0' with '-1106'
c Var 'aux165' direct represents '1' with '1106'
c Var 'aux165' order represents '1' with '1'
c Var 'aux165' order represents '0' with '-1106'
c Encoding variable: aux166 with domain: bool (representing constraint ((rijk_00005_00001_00001 + rijk_00005_00001_00002 + 1 + uijk_00005_00001_00001 + uijk_00005_00001_00002 + dijk_00005_00001_00001 + dijk_00005_00001_00002 + lijk_00005_00001_00001 + lijk_00005_00001_00002)=tv=agrid_00005_00001))
c Var 'aux166' direct represents '0' with '-1107'
c Var 'aux166' direct represents '1' with '1107'
c Var 'aux166' order represents '1' with '1'
c Var 'aux166' order represents '0' with '-1107'
c Encoding variable: aux167 with domain: bool (representing constraint (sij_00005_00001 -> aux166))
c Var 'aux167' direct represents '0' with '-1108'
c Var 'aux167' direct represents '1' with '1108'
c Var 'aux167' order represents '1' with '1'
c Var 'aux167' order represents '0' with '-1108'
c Encoding variable: aux168 with domain: bool (representing constraint ((1 + uijk_00006_00001_00001 + uijk_00006_00001_00002 + dijk_00006_00001_00001 + dijk_00006_00001_00002 + lijk_00006_00001_00001 + lijk_00006_00001_00002 + rijk_00006_00001_00001 + rijk_00006_00001_00002)=tv=agrid_00006_00001))
c Var 'aux168' direct represents '0' with '-1109'
c Var 'aux168' direct represents '1' with '1109'
c Var 'aux168' order represents '1' with '1'
c Var 'aux168' order represents '0' with '-1109'
c Encoding variable: aux169 with domain: bool (representing constraint (sij_00006_00001 -> aux168))
c Var 'aux169' direct represents '0' with '-1110'
c Var 'aux169' direct represents '1' with '1110'
c Var 'aux169' order represents '1' with '1'
c Var 'aux169' order represents '0' with '-1110'
c Encoding variable: aux170 with domain: bool (representing constraint ((uijk_00001_00002_00001 + uijk_00001_00002_00002 + dijk_00001_00002_00001 + dijk_00001_00002_00002 + lijk_00001_00002_00001 + lijk_00001_00002_00002 + rijk_00001_00002_00001 + rijk_00001_00002_00002 + 1)=tv=agrid_00001_00002))
c Var 'aux170' direct represents '0' with '-1111'
c Var 'aux170' direct represents '1' with '1111'
c Var 'aux170' order represents '1' with '1'
c Var 'aux170' order represents '0' with '-1111'
c Encoding variable: aux171 with domain: bool (representing constraint (sij_00001_00002 -> aux170))
c Var 'aux171' direct represents '0' with '-1112'
c Var 'aux171' direct represents '1' with '1112'
c Var 'aux171' order represents '1' with '1'
c Var 'aux171' order represents '0' with '-1112'
c Encoding variable: aux172 with domain: bool (representing constraint ((dijk_00002_00002_00001 + dijk_00002_00002_00002 + lijk_00002_00002_00001 + lijk_00002_00002_00002 + rijk_00002_00002_00001 + rijk_00002_00002_00002 + 1 + uijk_00002_00002_00001 + uijk_00002_00002_00002)=tv=agrid_00002_00002))
c Var 'aux172' direct represents '0' with '-1113'
c Var 'aux172' direct represents '1' with '1113'
c Var 'aux172' order represents '1' with '1'
c Var 'aux172' order represents '0' with '-1113'
c Encoding variable: aux173 with domain: bool (representing constraint (sij_00002_00002 -> aux172))
c Var 'aux173' direct represents '0' with '-1114'
c Var 'aux173' direct represents '1' with '1114'
c Var 'aux173' order represents '1' with '1'
c Var 'aux173' order represents '0' with '-1114'
c Encoding variable: aux174 with domain: bool (representing constraint ((lijk_00003_00002_00001 + lijk_00003_00002_00002 + rijk_00003_00002_00001 + rijk_00003_00002_00002 + 1 + uijk_00003_00002_00001 + uijk_00003_00002_00002 + dijk_00003_00002_00001 + dijk_00003_00002_00002)=tv=agrid_00003_00002))
c Var 'aux174' direct represents '0' with '-1115'
c Var 'aux174' direct represents '1' with '1115'
c Var 'aux174' order represents '1' with '1'
c Var 'aux174' order represents '0' with '-1115'
c Encoding variable: aux175 with domain: bool (representing constraint (sij_00003_00002 -> aux174))
c Var 'aux175' direct represents '0' with '-1116'
c Var 'aux175' direct represents '1' with '1116'
c Var 'aux175' order represents '1' with '1'
c Var 'aux175' order represents '0' with '-1116'
c Encoding variable: aux176 with domain: bool (representing constraint ((lijk_00004_00002_00001 + lijk_00004_00002_00002 + rijk_00004_00002_00001 + rijk_00004_00002_00002 + 1 + uijk_00004_00002_00001 + uijk_00004_00002_00002 + dijk_00004_00002_00001 + dijk_00004_00002_00002)=tv=agrid_00004_00002))
c Var 'aux176' direct represents '0' with '-1117'
c Var 'aux176' direct represents '1' with '1117'
c Var 'aux176' order represents '1' with '1'
c Var 'aux176' order represents '0' with '-1117'
c Encoding variable: aux177 with domain: bool (representing constraint (sij_00004_00002 -> aux176))
c Var 'aux177' direct represents '0' with '-1118'
c Var 'aux177' direct represents '1' with '1118'
c Var 'aux177' order represents '1' with '1'
c Var 'aux177' order represents '0' with '-1118'
c Encoding variable: aux178 with domain: bool (representing constraint ((lijk_00005_00002_00001 + lijk_00005_00002_00002 + rijk_00005_00002_00001 + rijk_00005_00002_00002 + 1 + uijk_00005_00002_00001 + uijk_00005_00002_00002 + dijk_00005_00002_00001 + dijk_00005_00002_00002)=tv=agrid_00005_00002))
c Var 'aux178' direct represents '0' with '-1119'
c Var 'aux178' direct represents '1' with '1119'
c Var 'aux178' order represents '1' with '1'
c Var 'aux178' order represents '0' with '-1119'
c Encoding variable: aux179 with domain: bool (representing constraint (sij_00005_00002 -> aux178))
c Var 'aux179' direct represents '0' with '-1120'
c Var 'aux179' direct represents '1' with '1120'
c Var 'aux179' order represents '1' with '1'
c Var 'aux179' order represents '0' with '-1120'
c Encoding variable: aux180 with domain: bool (representing constraint ((rijk_00006_00002_00001 + rijk_00006_00002_00002 + 1 + uijk_00006_00002_00001 + uijk_00006_00002_00002 + dijk_00006_00002_00001 + dijk_00006_00002_00002 + lijk_00006_00002_00001 + lijk_00006_00002_00002)=tv=agrid_00006_00002))
c Var 'aux180' direct represents '0' with '-1121'
c Var 'aux180' direct represents '1' with '1121'
c Var 'aux180' order represents '1' with '1'
c Var 'aux180' order represents '0' with '-1121'
c Encoding variable: aux181 with domain: bool (representing constraint (sij_00006_00002 -> aux180))
c Var 'aux181' direct represents '0' with '-1122'
c Var 'aux181' direct represents '1' with '1122'
c Var 'aux181' order represents '1' with '1'
c Var 'aux181' order represents '0' with '-1122'
c Encoding variable: aux182 with domain: bool (representing constraint ((uijk_00001_00003_00001 + uijk_00001_00003_00002 + dijk_00001_00003_00001 + dijk_00001_00003_00002 + 1 + lijk_00001_00003_00001 + lijk_00001_00003_00002 + rijk_00001_00003_00001 + rijk_00001_00003_00002)=tv=agrid_00001_00003))
c Var 'aux182' direct represents '0' with '-1123'
c Var 'aux182' direct represents '1' with '1123'
c Var 'aux182' order represents '1' with '1'
c Var 'aux182' order represents '0' with '-1123'
c Encoding variable: aux183 with domain: bool (representing constraint (sij_00001_00003 -> aux182))
c Var 'aux183' direct represents '0' with '-1124'
c Var 'aux183' direct represents '1' with '1124'
c Var 'aux183' order represents '1' with '1'
c Var 'aux183' order represents '0' with '-1124'
c Encoding variable: aux184 with domain: bool (representing constraint ((uijk_00002_00003_00001 + uijk_00002_00003_00002 + dijk_00002_00003_00001 + dijk_00002_00003_00002 + lijk_00002_00003_00001 + lijk_00002_00003_00002 + 1 + rijk_00002_00003_00001 + rijk_00002_00003_00002)=tv=agrid_00002_00003))
c Var 'aux184' direct represents '0' with '-1125'
c Var 'aux184' direct represents '1' with '1125'
c Var 'aux184' order represents '1' with '1'
c Var 'aux184' order represents '0' with '-1125'
c Encoding variable: aux185 with domain: bool (representing constraint (sij_00002_00003 -> aux184))
c Var 'aux185' direct represents '0' with '-1126'
c Var 'aux185' direct represents '1' with '1126'
c Var 'aux185' order represents '1' with '1'
c Var 'aux185' order represents '0' with '-1126'
c Encoding variable: aux186 with domain: bool (representing constraint ((uijk_00003_00003_00001 + uijk_00003_00003_00002 + dijk_00003_00003_00001 + dijk_00003_00003_00002 + lijk_00003_00003_00001 + lijk_00003_00003_00002 + 1 + rijk_00003_00003_00001 + rijk_00003_00003_00002)=tv=agrid_00003_00003))
c Var 'aux186' direct represents '0' with '-1127'
c Var 'aux186' direct represents '1' with '1127'
c Var 'aux186' order represents '1' with '1'
c Var 'aux186' order represents '0' with '-1127'
c Encoding variable: aux187 with domain: bool (representing constraint (sij_00003_00003 -> aux186))
c Var 'aux187' direct represents '0' with '-1128'
c Var 'aux187' direct represents '1' with '1128'
c Var 'aux187' order represents '1' with '1'
c Var 'aux187' order represents '0' with '-1128'
c Encoding variable: aux188 with domain: bool (representing constraint ((uijk_00004_00003_00001 + uijk_00004_00003_00002 + dijk_00004_00003_00001 + dijk_00004_00003_00002 + lijk_00004_00003_00001 + lijk_00004_00003_00002 + rijk_00004_00003_00001 + rijk_00004_00003_00002 + 1)=tv=agrid_00004_00003))
c Var 'aux188' direct represents '0' with '-1129'
c Var 'aux188' direct represents '1' with '1129'
c Var 'aux188' order represents '1' with '1'
c Var 'aux188' order represents '0' with '-1129'
c Encoding variable: aux189 with domain: bool (representing constraint (sij_00004_00003 -> aux188))
c Var 'aux189' direct represents '0' with '-1130'
c Var 'aux189' direct represents '1' with '1130'
c Var 'aux189' order represents '1' with '1'
c Var 'aux189' order represents '0' with '-1130'
c Encoding variable: aux190 with domain: bool (representing constraint ((dijk_00005_00003_00001 + dijk_00005_00003_00002 + lijk_00005_00003_00001 + lijk_00005_00003_00002 + rijk_00005_00003_00001 + rijk_00005_00003_00002 + 1 + uijk_00005_00003_00001 + uijk_00005_00003_00002)=tv=agrid_00005_00003))
c Var 'aux190' direct represents '0' with '-1131'
c Var 'aux190' direct represents '1' with '1131'
c Var 'aux190' order represents '1' with '1'
c Var 'aux190' order represents '0' with '-1131'
c Encoding variable: aux191 with domain: bool (representing constraint (sij_00005_00003 -> aux190))
c Var 'aux191' direct represents '0' with '-1132'
c Var 'aux191' direct represents '1' with '1132'
c Var 'aux191' order represents '1' with '1'
c Var 'aux191' order represents '0' with '-1132'
c Encoding variable: aux192 with domain: bool (representing constraint ((lijk_00006_00003_00001 + lijk_00006_00003_00002 + rijk_00006_00003_00001 + rijk_00006_00003_00002 + 1 + uijk_00006_00003_00001 + uijk_00006_00003_00002 + dijk_00006_00003_00001 + dijk_00006_00003_00002)=tv=agrid_00006_00003))
c Var 'aux192' direct represents '0' with '-1133'
c Var 'aux192' direct represents '1' with '1133'
c Var 'aux192' order represents '1' with '1'
c Var 'aux192' order represents '0' with '-1133'
c Encoding variable: aux193 with domain: bool (representing constraint (sij_00006_00003 -> aux192))
c Var 'aux193' direct represents '0' with '-1134'
c Var 'aux193' direct represents '1' with '1134'
c Var 'aux193' order represents '1' with '1'
c Var 'aux193' order represents '0' with '-1134'
c Encoding variable: aux194 with domain: bool (representing constraint ((uijk_00001_00004_00001 + uijk_00001_00004_00002 + 1 + dijk_00001_00004_00001 + dijk_00001_00004_00002 + lijk_00001_00004_00001 + lijk_00001_00004_00002 + rijk_00001_00004_00001 + rijk_00001_00004_00002)=tv=agrid_00001_00004))
c Var 'aux194' direct represents '0' with '-1135'
c Var 'aux194' direct represents '1' with '1135'
c Var 'aux194' order represents '1' with '1'
c Var 'aux194' order represents '0' with '-1135'
c Encoding variable: aux195 with domain: bool (representing constraint (sij_00001_00004 -> aux194))
c Var 'aux195' direct represents '0' with '-1136'
c Var 'aux195' direct represents '1' with '1136'
c Var 'aux195' order represents '1' with '1'
c Var 'aux195' order represents '0' with '-1136'
c Encoding variable: aux196 with domain: bool (representing constraint ((uijk_00002_00004_00001 + uijk_00002_00004_00002 + dijk_00002_00004_00001 + dijk_00002_00004_00002 + 1 + lijk_00002_00004_00001 + lijk_00002_00004_00002 + rijk_00002_00004_00001 + rijk_00002_00004_00002)=tv=agrid_00002_00004))
c Var 'aux196' direct represents '0' with '-1137'
c Var 'aux196' direct represents '1' with '1137'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-1137'
c Encoding variable: aux197 with domain: bool (representing constraint (sij_00002_00004 -> aux196))
c Var 'aux197' direct represents '0' with '-1138'
c Var 'aux197' direct represents '1' with '1138'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-1138'
c Encoding variable: aux198 with domain: bool (representing constraint ((uijk_00003_00004_00001 + uijk_00003_00004_00002 + dijk_00003_00004_00001 + dijk_00003_00004_00002 + 1 + lijk_00003_00004_00001 + lijk_00003_00004_00002 + rijk_00003_00004_00001 + rijk_00003_00004_00002)=tv=agrid_00003_00004))
c Var 'aux198' direct represents '0' with '-1139'
c Var 'aux198' direct represents '1' with '1139'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-1139'
c Encoding variable: aux199 with domain: bool (representing constraint (sij_00003_00004 -> aux198))
c Var 'aux199' direct represents '0' with '-1140'
c Var 'aux199' direct represents '1' with '1140'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-1140'
c Encoding variable: aux200 with domain: bool (representing constraint ((uijk_00004_00004_00001 + uijk_00004_00004_00002 + dijk_00004_00004_00001 + dijk_00004_00004_00002 + 1 + lijk_00004_00004_00001 + lijk_00004_00004_00002 + rijk_00004_00004_00001 + rijk_00004_00004_00002)=tv=agrid_00004_00004))
c Var 'aux200' direct represents '0' with '-1141'
c Var 'aux200' direct represents '1' with '1141'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-1141'
c Encoding variable: aux201 with domain: bool (representing constraint (sij_00004_00004 -> aux200))
c Var 'aux201' direct represents '0' with '-1142'
c Var 'aux201' direct represents '1' with '1142'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-1142'
c Encoding variable: aux202 with domain: bool (representing constraint ((uijk_00005_00004_00001 + uijk_00005_00004_00002 + dijk_00005_00004_00001 + dijk_00005_00004_00002 + lijk_00005_00004_00001 + lijk_00005_00004_00002 + 1 + rijk_00005_00004_00001 + rijk_00005_00004_00002)=tv=agrid_00005_00004))
c Var 'aux202' direct represents '0' with '-1143'
c Var 'aux202' direct represents '1' with '1143'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-1143'
c Encoding variable: aux203 with domain: bool (representing constraint (sij_00005_00004 -> aux202))
c Var 'aux203' direct represents '0' with '-1144'
c Var 'aux203' direct represents '1' with '1144'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-1144'
c Encoding variable: aux204 with domain: bool (representing constraint ((uijk_00006_00004_00001 + uijk_00006_00004_00002 + dijk_00006_00004_00001 + dijk_00006_00004_00002 + lijk_00006_00004_00001 + lijk_00006_00004_00002 + 1 + rijk_00006_00004_00001 + rijk_00006_00004_00002)=tv=agrid_00006_00004))
c Var 'aux204' direct represents '0' with '-1145'
c Var 'aux204' direct represents '1' with '1145'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-1145'
c Encoding variable: aux205 with domain: bool (representing constraint (sij_00006_00004 -> aux204))
c Var 'aux205' direct represents '0' with '-1146'
c Var 'aux205' direct represents '1' with '1146'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-1146'
c Encoding variable: aux206 with domain: bool (representing constraint ((rijk_00001_00005_00001 + rijk_00001_00005_00002 + 1 + uijk_00001_00005_00001 + uijk_00001_00005_00002 + dijk_00001_00005_00001 + dijk_00001_00005_00002 + lijk_00001_00005_00001 + lijk_00001_00005_00002)=tv=agrid_00001_00005))
c Var 'aux206' direct represents '0' with '-1147'
c Var 'aux206' direct represents '1' with '1147'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-1147'
c Encoding variable: aux207 with domain: bool (representing constraint (sij_00001_00005 -> aux206))
c Var 'aux207' direct represents '0' with '-1148'
c Var 'aux207' direct represents '1' with '1148'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-1148'
c Encoding variable: aux208 with domain: bool (representing constraint ((rijk_00002_00005_00001 + rijk_00002_00005_00002 + 1 + uijk_00002_00005_00001 + uijk_00002_00005_00002 + dijk_00002_00005_00001 + dijk_00002_00005_00002 + lijk_00002_00005_00001 + lijk_00002_00005_00002)=tv=agrid_00002_00005))
c Var 'aux208' direct represents '0' with '-1149'
c Var 'aux208' direct represents '1' with '1149'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-1149'
c Encoding variable: aux209 with domain: bool (representing constraint (sij_00002_00005 -> aux208))
c Var 'aux209' direct represents '0' with '-1150'
c Var 'aux209' direct represents '1' with '1150'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-1150'
c Encoding variable: aux210 with domain: bool (representing constraint ((1 + uijk_00003_00005_00001 + uijk_00003_00005_00002 + dijk_00003_00005_00001 + dijk_00003_00005_00002 + lijk_00003_00005_00001 + lijk_00003_00005_00002 + rijk_00003_00005_00001 + rijk_00003_00005_00002)=tv=agrid_00003_00005))
c Var 'aux210' direct represents '0' with '-1151'
c Var 'aux210' direct represents '1' with '1151'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-1151'
c Encoding variable: aux211 with domain: bool (representing constraint (sij_00003_00005 -> aux210))
c Var 'aux211' direct represents '0' with '-1152'
c Var 'aux211' direct represents '1' with '1152'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-1152'
c Encoding variable: aux212 with domain: bool (representing constraint ((uijk_00004_00005_00001 + uijk_00004_00005_00002 + 1 + dijk_00004_00005_00001 + dijk_00004_00005_00002 + lijk_00004_00005_00001 + lijk_00004_00005_00002 + rijk_00004_00005_00001 + rijk_00004_00005_00002)=tv=agrid_00004_00005))
c Var 'aux212' direct represents '0' with '-1153'
c Var 'aux212' direct represents '1' with '1153'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-1153'
c Encoding variable: aux213 with domain: bool (representing constraint (sij_00004_00005 -> aux212))
c Var 'aux213' direct represents '0' with '-1154'
c Var 'aux213' direct represents '1' with '1154'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-1154'
c Encoding variable: aux214 with domain: bool (representing constraint ((uijk_00005_00005_00001 + uijk_00005_00005_00002 + dijk_00005_00005_00001 + dijk_00005_00005_00002 + 1 + lijk_00005_00005_00001 + lijk_00005_00005_00002 + rijk_00005_00005_00001 + rijk_00005_00005_00002)=tv=agrid_00005_00005))
c Var 'aux214' direct represents '0' with '-1155'
c Var 'aux214' direct represents '1' with '1155'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-1155'
c Encoding variable: aux215 with domain: bool (representing constraint (sij_00005_00005 -> aux214))
c Var 'aux215' direct represents '0' with '-1156'
c Var 'aux215' direct represents '1' with '1156'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-1156'
c Encoding variable: aux216 with domain: bool (representing constraint ((uijk_00006_00005_00001 + uijk_00006_00005_00002 + dijk_00006_00005_00001 + dijk_00006_00005_00002 + 1 + lijk_00006_00005_00001 + lijk_00006_00005_00002 + rijk_00006_00005_00001 + rijk_00006_00005_00002)=tv=agrid_00006_00005))
c Var 'aux216' direct represents '0' with '-1157'
c Var 'aux216' direct represents '1' with '1157'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-1157'
c Encoding variable: aux217 with domain: bool (representing constraint (sij_00006_00005 -> aux216))
c Var 'aux217' direct represents '0' with '-1158'
c Var 'aux217' direct represents '1' with '1158'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-1158'
c Encoding variable: aux218 with domain: bool (representing constraint ((lijk_00001_00006_00001 + lijk_00001_00006_00002 + rijk_00001_00006_00001 + rijk_00001_00006_00002 + 1 + uijk_00001_00006_00001 + uijk_00001_00006_00002 + dijk_00001_00006_00001 + dijk_00001_00006_00002)=tv=agrid_00001_00006))
c Var 'aux218' direct represents '0' with '-1159'
c Var 'aux218' direct represents '1' with '1159'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-1159'
c Encoding variable: aux219 with domain: bool (representing constraint (sij_00001_00006 -> aux218))
c Var 'aux219' direct represents '0' with '-1160'
c Var 'aux219' direct represents '1' with '1160'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-1160'
c Encoding variable: aux220 with domain: bool (representing constraint ((lijk_00002_00006_00001 + lijk_00002_00006_00002 + rijk_00002_00006_00001 + rijk_00002_00006_00002 + 1 + uijk_00002_00006_00001 + uijk_00002_00006_00002 + dijk_00002_00006_00001 + dijk_00002_00006_00002)=tv=agrid_00002_00006))
c Var 'aux220' direct represents '0' with '-1161'
c Var 'aux220' direct represents '1' with '1161'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-1161'
c Encoding variable: aux221 with domain: bool (representing constraint (sij_00002_00006 -> aux220))
c Var 'aux221' direct represents '0' with '-1162'
c Var 'aux221' direct represents '1' with '1162'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-1162'
c Encoding variable: aux222 with domain: bool (representing constraint ((lijk_00003_00006_00001 + lijk_00003_00006_00002 + rijk_00003_00006_00001 + rijk_00003_00006_00002 + 1 + uijk_00003_00006_00001 + uijk_00003_00006_00002 + dijk_00003_00006_00001 + dijk_00003_00006_00002)=tv=agrid_00003_00006))
c Var 'aux222' direct represents '0' with '-1163'
c Var 'aux222' direct represents '1' with '1163'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-1163'
c Encoding variable: aux223 with domain: bool (representing constraint (sij_00003_00006 -> aux222))
c Var 'aux223' direct represents '0' with '-1164'
c Var 'aux223' direct represents '1' with '1164'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-1164'
c Encoding variable: aux224 with domain: bool (representing constraint ((rijk_00004_00006_00001 + rijk_00004_00006_00002 + 1 + uijk_00004_00006_00001 + uijk_00004_00006_00002 + dijk_00004_00006_00001 + dijk_00004_00006_00002 + lijk_00004_00006_00001 + lijk_00004_00006_00002)=tv=agrid_00004_00006))
c Var 'aux224' direct represents '0' with '-1165'
c Var 'aux224' direct represents '1' with '1165'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-1165'
c Encoding variable: aux225 with domain: bool (representing constraint (sij_00004_00006 -> aux224))
c Var 'aux225' direct represents '0' with '-1166'
c Var 'aux225' direct represents '1' with '1166'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-1166'
c Encoding variable: aux226 with domain: bool (representing constraint ((rijk_00005_00006_00001 + rijk_00005_00006_00002 + 1 + uijk_00005_00006_00001 + uijk_00005_00006_00002 + dijk_00005_00006_00001 + dijk_00005_00006_00002 + lijk_00005_00006_00001 + lijk_00005_00006_00002)=tv=agrid_00005_00006))
c Var 'aux226' direct represents '0' with '-1167'
c Var 'aux226' direct represents '1' with '1167'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-1167'
c Encoding variable: aux227 with domain: bool (representing constraint (sij_00005_00006 -> aux226))
c Var 'aux227' direct represents '0' with '-1168'
c Var 'aux227' direct represents '1' with '1168'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-1168'
c Encoding variable: aux228 with domain: bool (representing constraint ((1 + uijk_00006_00006_00001 + uijk_00006_00006_00002 + dijk_00006_00006_00001 + dijk_00006_00006_00002 + lijk_00006_00006_00001 + lijk_00006_00006_00002 + rijk_00006_00006_00001 + rijk_00006_00006_00002)=tv=agrid_00006_00006))
c Var 'aux228' direct represents '0' with '-1169'
c Var 'aux228' direct represents '1' with '1169'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-1169'
c Encoding variable: aux229 with domain: bool (representing constraint (sij_00006_00006 -> aux228))
c Var 'aux229' direct represents '0' with '-1170'
c Var 'aux229' direct represents '1' with '1170'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-1170'
c Encoding variable: aux230 with domain: int(0..36) (representing constraint (shift(36, -36) - shift(num_occupied_by_types_00003, -36)))
c Both direct and order encoding.
c Var 'aux230' order represents '0' with '1171'
c Var 'aux230' direct represents '0' with '1171'
c Var 'aux230' order represents '1' with '1172'
-1171 1172 0
c Var 'aux230' direct represents '1' with '1173'
1171 -1172 1173 0
-1173 1172 0
-1173 -1171 0
c Var 'aux230' order represents '2' with '1174'
-1172 1174 0
c Var 'aux230' direct represents '2' with '1175'
1172 -1174 1175 0
-1175 1174 0
-1175 -1172 0
c Var 'aux230' order represents '3' with '1176'
-1174 1176 0
c Var 'aux230' direct represents '3' with '1177'
1174 -1176 1177 0
-1177 1176 0
-1177 -1174 0
c Var 'aux230' order represents '4' with '1178'
-1176 1178 0
c Var 'aux230' direct represents '4' with '1179'
1176 -1178 1179 0
-1179 1178 0
-1179 -1176 0
c Var 'aux230' order represents '5' with '1180'
-1178 1180 0
c Var 'aux230' direct represents '5' with '1181'
1178 -1180 1181 0
-1181 1180 0
-1181 -1178 0
c Var 'aux230' order represents '6' with '1182'
-1180 1182 0
c Var 'aux230' direct represents '6' with '1183'
1180 -1182 1183 0
-1183 1182 0
-1183 -1180 0
c Var 'aux230' order represents '7' with '1184'
-1182 1184 0
c Var 'aux230' direct represents '7' with '1185'
1182 -1184 1185 0
-1185 1184 0
-1185 -1182 0
c Var 'aux230' order represents '8' with '1186'
-1184 1186 0
c Var 'aux230' direct represents '8' with '1187'
1184 -1186 1187 0
-1187 1186 0
-1187 -1184 0
c Var 'aux230' order represents '9' with '1188'
-1186 1188 0
c Var 'aux230' direct represents '9' with '1189'
1186 -1188 1189 0
-1189 1188 0
-1189 -1186 0
c Var 'aux230' order represents '10' with '1190'
-1188 1190 0
c Var 'aux230' direct represents '10' with '1191'
1188 -1190 1191 0
-1191 1190 0
-1191 -1188 0
c Var 'aux230' order represents '11' with '1192'
-1190 1192 0
c Var 'aux230' direct represents '11' with '1193'
1190 -1192 1193 0
-1193 1192 0
-1193 -1190 0
c Var 'aux230' order represents '12' with '1194'
-1192 1194 0
c Var 'aux230' direct represents '12' with '1195'
1192 -1194 1195 0
-1195 1194 0
-1195 -1192 0
c Var 'aux230' order represents '13' with '1196'
-1194 1196 0
c Var 'aux230' direct represents '13' with '1197'
1194 -1196 1197 0
-1197 1196 0
-1197 -1194 0
c Var 'aux230' order represents '14' with '1198'
-1196 1198 0
c Var 'aux230' direct represents '14' with '1199'
1196 -1198 1199 0
-1199 1198 0
-1199 -1196 0
c Var 'aux230' order represents '15' with '1200'
-1198 1200 0
c Var 'aux230' direct represents '15' with '1201'
1198 -1200 1201 0
-1201 1200 0
-1201 -1198 0
c Var 'aux230' order represents '16' with '1202'
-1200 1202 0
c Var 'aux230' direct represents '16' with '1203'
1200 -1202 1203 0
-1203 1202 0
-1203 -1200 0
c Var 'aux230' order represents '17' with '1204'
-1202 1204 0
c Var 'aux230' direct represents '17' with '1205'
1202 -1204 1205 0
-1205 1204 0
-1205 -1202 0
c Var 'aux230' order represents '18' with '1206'
-1204 1206 0
c Var 'aux230' direct represents '18' with '1207'
1204 -1206 1207 0
-1207 1206 0
-1207 -1204 0
c Var 'aux230' order represents '19' with '1208'
-1206 1208 0
c Var 'aux230' direct represents '19' with '1209'
1206 -1208 1209 0
-1209 1208 0
-1209 -1206 0
c Var 'aux230' order represents '20' with '1210'
-1208 1210 0
c Var 'aux230' direct represents '20' with '1211'
1208 -1210 1211 0
-1211 1210 0
-1211 -1208 0
c Var 'aux230' order represents '21' with '1212'
-1210 1212 0
c Var 'aux230' direct represents '21' with '1213'
1210 -1212 1213 0
-1213 1212 0
-1213 -1210 0
c Var 'aux230' order represents '22' with '1214'
-1212 1214 0
c Var 'aux230' direct represents '22' with '1215'
1212 -1214 1215 0
-1215 1214 0
-1215 -1212 0
c Var 'aux230' order represents '23' with '1216'
-1214 1216 0
c Var 'aux230' direct represents '23' with '1217'
1214 -1216 1217 0
-1217 1216 0
-1217 -1214 0
c Var 'aux230' order represents '24' with '1218'
-1216 1218 0
c Var 'aux230' direct represents '24' with '1219'
1216 -1218 1219 0
-1219 1218 0
-1219 -1216 0
c Var 'aux230' order represents '25' with '1220'
-1218 1220 0
c Var 'aux230' direct represents '25' with '1221'
1218 -1220 1221 0
-1221 1220 0
-1221 -1218 0
c Var 'aux230' order represents '26' with '1222'
-1220 1222 0
c Var 'aux230' direct represents '26' with '1223'
1220 -1222 1223 0
-1223 1222 0
-1223 -1220 0
c Var 'aux230' order represents '27' with '1224'
-1222 1224 0
c Var 'aux230' direct represents '27' with '1225'
1222 -1224 1225 0
-1225 1224 0
-1225 -1222 0
c Var 'aux230' order represents '28' with '1226'
-1224 1226 0
c Var 'aux230' direct represents '28' with '1227'
1224 -1226 1227 0
-1227 1226 0
-1227 -1224 0
c Var 'aux230' order represents '29' with '1228'
-1226 1228 0
c Var 'aux230' direct represents '29' with '1229'
1226 -1228 1229 0
-1229 1228 0
-1229 -1226 0
c Var 'aux230' order represents '30' with '1230'
-1228 1230 0
c Var 'aux230' direct represents '30' with '1231'
1228 -1230 1231 0
-1231 1230 0
-1231 -1228 0
c Var 'aux230' order represents '31' with '1232'
-1230 1232 0
c Var 'aux230' direct represents '31' with '1233'
1230 -1232 1233 0
-1233 1232 0
-1233 -1230 0
c Var 'aux230' order represents '32' with '1234'
-1232 1234 0
c Var 'aux230' direct represents '32' with '1235'
1232 -1234 1235 0
-1235 1234 0
-1235 -1232 0
c Var 'aux230' order represents '33' with '1236'
-1234 1236 0
c Var 'aux230' direct represents '33' with '1237'
1234 -1236 1237 0
-1237 1236 0
-1237 -1234 0
c Var 'aux230' order represents '34' with '1238'
-1236 1238 0
c Var 'aux230' direct represents '34' with '1239'
1236 -1238 1239 0
-1239 1238 0
-1239 -1236 0
c Var 'aux230' order represents '35' with '1240'
-1238 1240 0
c Var 'aux230' direct represents '35' with '1241'
1238 -1240 1241 0
-1241 1240 0
-1241 -1238 0
c Var 'aux230' direct represents '36' with '-1240'
1171 1173 1175 1177 1179 1181 1183 1185 1187 1189 1191 1193 1195 1197 1199 1201 1203 1205 1207 1209 1211 1213 1215 1217 1219 1221 1223 1225 1227 1229 1231 1233 1235 1237 1239 1241 -1240 0
c Encoding variable: aux231 with domain: int(0..72) (representing constraint ( - shift(num_occupied_by_types_00002, -36) + aux230))
c Both direct and order encoding.
c Var 'aux231' order represents '0' with '1242'
c Var 'aux231' direct represents '0' with '1242'
c Var 'aux231' order represents '1' with '1243'
-1242 1243 0
c Var 'aux231' direct represents '1' with '1244'
1242 -1243 1244 0
-1244 1243 0
-1244 -1242 0
c Var 'aux231' order represents '2' with '1245'
-1243 1245 0
c Var 'aux231' direct represents '2' with '1246'
1243 -1245 1246 0
-1246 1245 0
-1246 -1243 0
c Var 'aux231' order represents '3' with '1247'
-1245 1247 0
c Var 'aux231' direct represents '3' with '1248'
1245 -1247 1248 0
-1248 1247 0
-1248 -1245 0
c Var 'aux231' order represents '4' with '1249'
-1247 1249 0
c Var 'aux231' direct represents '4' with '1250'
1247 -1249 1250 0
-1250 1249 0
-1250 -1247 0
c Var 'aux231' order represents '5' with '1251'
-1249 1251 0
c Var 'aux231' direct represents '5' with '1252'
1249 -1251 1252 0
-1252 1251 0
-1252 -1249 0
c Var 'aux231' order represents '6' with '1253'
-1251 1253 0
c Var 'aux231' direct represents '6' with '1254'
1251 -1253 1254 0
-1254 1253 0
-1254 -1251 0
c Var 'aux231' order represents '7' with '1255'
-1253 1255 0
c Var 'aux231' direct represents '7' with '1256'
1253 -1255 1256 0
-1256 1255 0
-1256 -1253 0
c Var 'aux231' order represents '8' with '1257'
-1255 1257 0
c Var 'aux231' direct represents '8' with '1258'
1255 -1257 1258 0
-1258 1257 0
-1258 -1255 0
c Var 'aux231' order represents '9' with '1259'
-1257 1259 0
c Var 'aux231' direct represents '9' with '1260'
1257 -1259 1260 0
-1260 1259 0
-1260 -1257 0
c Var 'aux231' order represents '10' with '1261'
-1259 1261 0
c Var 'aux231' direct represents '10' with '1262'
1259 -1261 1262 0
-1262 1261 0
-1262 -1259 0
c Var 'aux231' order represents '11' with '1263'
-1261 1263 0
c Var 'aux231' direct represents '11' with '1264'
1261 -1263 1264 0
-1264 1263 0
-1264 -1261 0
c Var 'aux231' order represents '12' with '1265'
-1263 1265 0
c Var 'aux231' direct represents '12' with '1266'
1263 -1265 1266 0
-1266 1265 0
-1266 -1263 0
c Var 'aux231' order represents '13' with '1267'
-1265 1267 0
c Var 'aux231' direct represents '13' with '1268'
1265 -1267 1268 0
-1268 1267 0
-1268 -1265 0
c Var 'aux231' order represents '14' with '1269'
-1267 1269 0
c Var 'aux231' direct represents '14' with '1270'
1267 -1269 1270 0
-1270 1269 0
-1270 -1267 0
c Var 'aux231' order represents '15' with '1271'
-1269 1271 0
c Var 'aux231' direct represents '15' with '1272'
1269 -1271 1272 0
-1272 1271 0
-1272 -1269 0
c Var 'aux231' order represents '16' with '1273'
-1271 1273 0
c Var 'aux231' direct represents '16' with '1274'
1271 -1273 1274 0
-1274 1273 0
-1274 -1271 0
c Var 'aux231' order represents '17' with '1275'
-1273 1275 0
c Var 'aux231' direct represents '17' with '1276'
1273 -1275 1276 0
-1276 1275 0
-1276 -1273 0
c Var 'aux231' order represents '18' with '1277'
-1275 1277 0
c Var 'aux231' direct represents '18' with '1278'
1275 -1277 1278 0
-1278 1277 0
-1278 -1275 0
c Var 'aux231' order represents '19' with '1279'
-1277 1279 0
c Var 'aux231' direct represents '19' with '1280'
1277 -1279 1280 0
-1280 1279 0
-1280 -1277 0
c Var 'aux231' order represents '20' with '1281'
-1279 1281 0
c Var 'aux231' direct represents '20' with '1282'
1279 -1281 1282 0
-1282 1281 0
-1282 -1279 0
c Var 'aux231' order represents '21' with '1283'
-1281 1283 0
c Var 'aux231' direct represents '21' with '1284'
1281 -1283 1284 0
-1284 1283 0
-1284 -1281 0
c Var 'aux231' order represents '22' with '1285'
-1283 1285 0
c Var 'aux231' direct represents '22' with '1286'
1283 -1285 1286 0
-1286 1285 0
-1286 -1283 0
c Var 'aux231' order represents '23' with '1287'
-1285 1287 0
c Var 'aux231' direct represents '23' with '1288'
1285 -1287 1288 0
-1288 1287 0
-1288 -1285 0
c Var 'aux231' order represents '24' with '1289'
-1287 1289 0
c Var 'aux231' direct represents '24' with '1290'
1287 -1289 1290 0
-1290 1289 0
-1290 -1287 0
c Var 'aux231' order represents '25' with '1291'
-1289 1291 0
c Var 'aux231' direct represents '25' with '1292'
1289 -1291 1292 0
-1292 1291 0
-1292 -1289 0
c Var 'aux231' order represents '26' with '1293'
-1291 1293 0
c Var 'aux231' direct represents '26' with '1294'
1291 -1293 1294 0
-1294 1293 0
-1294 -1291 0
c Var 'aux231' order represents '27' with '1295'
-1293 1295 0
c Var 'aux231' direct represents '27' with '1296'
1293 -1295 1296 0
-1296 1295 0
-1296 -1293 0
c Var 'aux231' order represents '28' with '1297'
-1295 1297 0
c Var 'aux231' direct represents '28' with '1298'
1295 -1297 1298 0
-1298 1297 0
-1298 -1295 0
c Var 'aux231' order represents '29' with '1299'
-1297 1299 0
c Var 'aux231' direct represents '29' with '1300'
1297 -1299 1300 0
-1300 1299 0
-1300 -1297 0
c Var 'aux231' order represents '30' with '1301'
-1299 1301 0
c Var 'aux231' direct represents '30' with '1302'
1299 -1301 1302 0
-1302 1301 0
-1302 -1299 0
c Var 'aux231' order represents '31' with '1303'
-1301 1303 0
c Var 'aux231' direct represents '31' with '1304'
1301 -1303 1304 0
-1304 1303 0
-1304 -1301 0
c Var 'aux231' order represents '32' with '1305'
-1303 1305 0
c Var 'aux231' direct represents '32' with '1306'
1303 -1305 1306 0
-1306 1305 0
-1306 -1303 0
c Var 'aux231' order represents '33' with '1307'
-1305 1307 0
c Var 'aux231' direct represents '33' with '1308'
1305 -1307 1308 0
-1308 1307 0
-1308 -1305 0
c Var 'aux231' order represents '34' with '1309'
-1307 1309 0
c Var 'aux231' direct represents '34' with '1310'
1307 -1309 1310 0
-1310 1309 0
-1310 -1307 0
c Var 'aux231' order represents '35' with '1311'
-1309 1311 0
c Var 'aux231' direct represents '35' with '1312'
1309 -1311 1312 0
-1312 1311 0
-1312 -1309 0
c Var 'aux231' order represents '36' with '1313'
-1311 1313 0
c Var 'aux231' direct represents '36' with '1314'
1311 -1313 1314 0
-1314 1313 0
-1314 -1311 0
c Var 'aux231' order represents '37' with '1315'
-1313 1315 0
c Var 'aux231' direct represents '37' with '1316'
1313 -1315 1316 0
-1316 1315 0
-1316 -1313 0
c Var 'aux231' order represents '38' with '1317'
-1315 1317 0
c Var 'aux231' direct represents '38' with '1318'
1315 -1317 1318 0
-1318 1317 0
-1318 -1315 0
c Var 'aux231' order represents '39' with '1319'
-1317 1319 0
c Var 'aux231' direct represents '39' with '1320'
1317 -1319 1320 0
-1320 1319 0
-1320 -1317 0
c Var 'aux231' order represents '40' with '1321'
-1319 1321 0
c Var 'aux231' direct represents '40' with '1322'
1319 -1321 1322 0
-1322 1321 0
-1322 -1319 0
c Var 'aux231' order represents '41' with '1323'
-1321 1323 0
c Var 'aux231' direct represents '41' with '1324'
1321 -1323 1324 0
-1324 1323 0
-1324 -1321 0
c Var 'aux231' order represents '42' with '1325'
-1323 1325 0
c Var 'aux231' direct represents '42' with '1326'
1323 -1325 1326 0
-1326 1325 0
-1326 -1323 0
c Var 'aux231' order represents '43' with '1327'
-1325 1327 0
c Var 'aux231' direct represents '43' with '1328'
1325 -1327 1328 0
-1328 1327 0
-1328 -1325 0
c Var 'aux231' order represents '44' with '1329'
-1327 1329 0
c Var 'aux231' direct represents '44' with '1330'
1327 -1329 1330 0
-1330 1329 0
-1330 -1327 0
c Var 'aux231' order represents '45' with '1331'
-1329 1331 0
c Var 'aux231' direct represents '45' with '1332'
1329 -1331 1332 0
-1332 1331 0
-1332 -1329 0
c Var 'aux231' order represents '46' with '1333'
-1331 1333 0
c Var 'aux231' direct represents '46' with '1334'
1331 -1333 1334 0
-1334 1333 0
-1334 -1331 0
c Var 'aux231' order represents '47' with '1335'
-1333 1335 0
c Var 'aux231' direct represents '47' with '1336'
1333 -1335 1336 0
-1336 1335 0
-1336 -1333 0
c Var 'aux231' order represents '48' with '1337'
-1335 1337 0
c Var 'aux231' direct represents '48' with '1338'
1335 -1337 1338 0
-1338 1337 0
-1338 -1335 0
c Var 'aux231' order represents '49' with '1339'
-1337 1339 0
c Var 'aux231' direct represents '49' with '1340'
1337 -1339 1340 0
-1340 1339 0
-1340 -1337 0
c Var 'aux231' order represents '50' with '1341'
-1339 1341 0
c Var 'aux231' direct represents '50' with '1342'
1339 -1341 1342 0
-1342 1341 0
-1342 -1339 0
c Var 'aux231' order represents '51' with '1343'
-1341 1343 0
c Var 'aux231' direct represents '51' with '1344'
1341 -1343 1344 0
-1344 1343 0
-1344 -1341 0
c Var 'aux231' order represents '52' with '1345'
-1343 1345 0
c Var 'aux231' direct represents '52' with '1346'
1343 -1345 1346 0
-1346 1345 0
-1346 -1343 0
c Var 'aux231' order represents '53' with '1347'
-1345 1347 0
c Var 'aux231' direct represents '53' with '1348'
1345 -1347 1348 0
-1348 1347 0
-1348 -1345 0
c Var 'aux231' order represents '54' with '1349'
-1347 1349 0
c Var 'aux231' direct represents '54' with '1350'
1347 -1349 1350 0
-1350 1349 0
-1350 -1347 0
c Var 'aux231' order represents '55' with '1351'
-1349 1351 0
c Var 'aux231' direct represents '55' with '1352'
1349 -1351 1352 0
-1352 1351 0
-1352 -1349 0
c Var 'aux231' order represents '56' with '1353'
-1351 1353 0
c Var 'aux231' direct represents '56' with '1354'
1351 -1353 1354 0
-1354 1353 0
-1354 -1351 0
c Var 'aux231' order represents '57' with '1355'
-1353 1355 0
c Var 'aux231' direct represents '57' with '1356'
1353 -1355 1356 0
-1356 1355 0
-1356 -1353 0
c Var 'aux231' order represents '58' with '1357'
-1355 1357 0
c Var 'aux231' direct represents '58' with '1358'
1355 -1357 1358 0
-1358 1357 0
-1358 -1355 0
c Var 'aux231' order represents '59' with '1359'
-1357 1359 0
c Var 'aux231' direct represents '59' with '1360'
1357 -1359 1360 0
-1360 1359 0
-1360 -1357 0
c Var 'aux231' order represents '60' with '1361'
-1359 1361 0
c Var 'aux231' direct represents '60' with '1362'
1359 -1361 1362 0
-1362 1361 0
-1362 -1359 0
c Var 'aux231' order represents '61' with '1363'
-1361 1363 0
c Var 'aux231' direct represents '61' with '1364'
1361 -1363 1364 0
-1364 1363 0
-1364 -1361 0
c Var 'aux231' order represents '62' with '1365'
-1363 1365 0
c Var 'aux231' direct represents '62' with '1366'
1363 -1365 1366 0
-1366 1365 0
-1366 -1363 0
c Var 'aux231' order represents '63' with '1367'
-1365 1367 0
c Var 'aux231' direct represents '63' with '1368'
1365 -1367 1368 0
-1368 1367 0
-1368 -1365 0
c Var 'aux231' order represents '64' with '1369'
-1367 1369 0
c Var 'aux231' direct represents '64' with '1370'
1367 -1369 1370 0
-1370 1369 0
-1370 -1367 0
c Var 'aux231' order represents '65' with '1371'
-1369 1371 0
c Var 'aux231' direct represents '65' with '1372'
1369 -1371 1372 0
-1372 1371 0
-1372 -1369 0
c Var 'aux231' order represents '66' with '1373'
-1371 1373 0
c Var 'aux231' direct represents '66' with '1374'
1371 -1373 1374 0
-1374 1373 0
-1374 -1371 0
c Var 'aux231' order represents '67' with '1375'
-1373 1375 0
c Var 'aux231' direct represents '67' with '1376'
1373 -1375 1376 0
-1376 1375 0
-1376 -1373 0
c Var 'aux231' order represents '68' with '1377'
-1375 1377 0
c Var 'aux231' direct represents '68' with '1378'
1375 -1377 1378 0
-1378 1377 0
-1378 -1375 0
c Var 'aux231' order represents '69' with '1379'
-1377 1379 0
c Var 'aux231' direct represents '69' with '1380'
1377 -1379 1380 0
-1380 1379 0
-1380 -1377 0
c Var 'aux231' order represents '70' with '1381'
-1379 1381 0
c Var 'aux231' direct represents '70' with '1382'
1379 -1381 1382 0
-1382 1381 0
-1382 -1379 0
c Var 'aux231' order represents '71' with '1383'
-1381 1383 0
c Var 'aux231' direct represents '71' with '1384'
1381 -1383 1384 0
-1384 1383 0
-1384 -1381 0
c Var 'aux231' direct represents '72' with '-1383'
1242 1244 1246 1248 1250 1252 1254 1256 1258 1260 1262 1264 1266 1268 1270 1272 1274 1276 1278 1280 1282 1284 1286 1288 1290 1292 1294 1296 1298 1300 1302 1304 1306 1308 1310 1312 1314 1316 1318 1320 1322 1324 1326 1328 1330 1332 1334 1336 1338 1340 1342 1344 1346 1348 1350 1352 1354 1356 1358 1360 1362 1364 1366 1368 1370 1372 1374 1376 1378 1380 1382 1384 -1383 0
c Encoding variable: aux232 with domain: int(0..2) (representing constraint (sij_00001_00001 + sij_00001_00006))
c Both direct and order encoding.
c Var 'aux232' order represents '0' with '1385'
c Var 'aux232' direct represents '0' with '1385'
c Var 'aux232' order represents '1' with '1386'
-1385 1386 0
c Var 'aux232' direct represents '1' with '1387'
1385 -1386 1387 0
-1387 1386 0
-1387 -1385 0
c Var 'aux232' direct represents '2' with '-1386'
1385 1387 -1386 0
c Encoding variable: aux233 with domain: int(0..2) (representing constraint (sij_00001_00005 + sij_00001_00002))
c Both direct and order encoding.
c Var 'aux233' order represents '0' with '1388'
c Var 'aux233' direct represents '0' with '1388'
c Var 'aux233' order represents '1' with '1389'
-1388 1389 0
c Var 'aux233' direct represents '1' with '1390'
1388 -1389 1390 0
-1390 1389 0
-1390 -1388 0
c Var 'aux233' direct represents '2' with '-1389'
1388 1390 -1389 0
c Encoding variable: aux234 with domain: int(0..2) (representing constraint (sij_00001_00004 + sij_00001_00003))
c Both direct and order encoding.
c Var 'aux234' order represents '0' with '1391'
c Var 'aux234' direct represents '0' with '1391'
c Var 'aux234' order represents '1' with '1392'
-1391 1392 0
c Var 'aux234' direct represents '1' with '1393'
1391 -1392 1393 0
-1393 1392 0
-1393 -1391 0
c Var 'aux234' direct represents '2' with '-1392'
1391 1393 -1392 0
c Encoding variable: aux235 with domain: int(0..2) (representing constraint (sij_00002_00001 + sij_00002_00006))
c Both direct and order encoding.
c Var 'aux235' order represents '0' with '1394'
c Var 'aux235' direct represents '0' with '1394'
c Var 'aux235' order represents '1' with '1395'
-1394 1395 0
c Var 'aux235' direct represents '1' with '1396'
1394 -1395 1396 0
-1396 1395 0
-1396 -1394 0
c Var 'aux235' direct represents '2' with '-1395'
1394 1396 -1395 0
c Encoding variable: aux236 with domain: int(0..2) (representing constraint (sij_00002_00005 + sij_00002_00002))
c Both direct and order encoding.
c Var 'aux236' order represents '0' with '1397'
c Var 'aux236' direct represents '0' with '1397'
c Var 'aux236' order represents '1' with '1398'
-1397 1398 0
c Var 'aux236' direct represents '1' with '1399'
1397 -1398 1399 0
-1399 1398 0
-1399 -1397 0
c Var 'aux236' direct represents '2' with '-1398'
1397 1399 -1398 0
c Encoding variable: aux237 with domain: int(0..2) (representing constraint (sij_00002_00004 + sij_00002_00003))
c Both direct and order encoding.
c Var 'aux237' order represents '0' with '1400'
c Var 'aux237' direct represents '0' with '1400'
c Var 'aux237' order represents '1' with '1401'
-1400 1401 0
c Var 'aux237' direct represents '1' with '1402'
1400 -1401 1402 0
-1402 1401 0
-1402 -1400 0
c Var 'aux237' direct represents '2' with '-1401'
1400 1402 -1401 0
c Encoding variable: aux238 with domain: int(0..2) (representing constraint (sij_00003_00001 + sij_00003_00006))
c Both direct and order encoding.
c Var 'aux238' order represents '0' with '1403'
c Var 'aux238' direct represents '0' with '1403'
c Var 'aux238' order represents '1' with '1404'
-1403 1404 0
c Var 'aux238' direct represents '1' with '1405'
1403 -1404 1405 0
-1405 1404 0
-1405 -1403 0
c Var 'aux238' direct represents '2' with '-1404'
1403 1405 -1404 0
c Encoding variable: aux239 with domain: int(0..2) (representing constraint (sij_00003_00005 + sij_00003_00002))
c Both direct and order encoding.
c Var 'aux239' order represents '0' with '1406'
c Var 'aux239' direct represents '0' with '1406'
c Var 'aux239' order represents '1' with '1407'
-1406 1407 0
c Var 'aux239' direct represents '1' with '1408'
1406 -1407 1408 0
-1408 1407 0
-1408 -1406 0
c Var 'aux239' direct represents '2' with '-1407'
1406 1408 -1407 0
c Encoding variable: aux240 with domain: int(0..2) (representing constraint (sij_00003_00004 + sij_00003_00003))
c Both direct and order encoding.
c Var 'aux240' order represents '0' with '1409'
c Var 'aux240' direct represents '0' with '1409'
c Var 'aux240' order represents '1' with '1410'
-1409 1410 0
c Var 'aux240' direct represents '1' with '1411'
1409 -1410 1411 0
-1411 1410 0
-1411 -1409 0
c Var 'aux240' direct represents '2' with '-1410'
1409 1411 -1410 0
c Encoding variable: aux241 with domain: int(0..2) (representing constraint (sij_00004_00001 + sij_00004_00006))
c Both direct and order encoding.
c Var 'aux241' order represents '0' with '1412'
c Var 'aux241' direct represents '0' with '1412'
c Var 'aux241' order represents '1' with '1413'
-1412 1413 0
c Var 'aux241' direct represents '1' with '1414'
1412 -1413 1414 0
-1414 1413 0
-1414 -1412 0
c Var 'aux241' direct represents '2' with '-1413'
1412 1414 -1413 0
c Encoding variable: aux242 with domain: int(0..2) (representing constraint (sij_00004_00005 + sij_00004_00002))
c Both direct and order encoding.
c Var 'aux242' order represents '0' with '1415'
c Var 'aux242' direct represents '0' with '1415'
c Var 'aux242' order represents '1' with '1416'
-1415 1416 0
c Var 'aux242' direct represents '1' with '1417'
1415 -1416 1417 0
-1417 1416 0
-1417 -1415 0
c Var 'aux242' direct represents '2' with '-1416'
1415 1417 -1416 0
c Encoding variable: aux243 with domain: int(0..2) (representing constraint (sij_00004_00004 + sij_00004_00003))
c Both direct and order encoding.
c Var 'aux243' order represents '0' with '1418'
c Var 'aux243' direct represents '0' with '1418'
c Var 'aux243' order represents '1' with '1419'
-1418 1419 0
c Var 'aux243' direct represents '1' with '1420'
1418 -1419 1420 0
-1420 1419 0
-1420 -1418 0
c Var 'aux243' direct represents '2' with '-1419'
1418 1420 -1419 0
c Encoding variable: aux244 with domain: int(0..2) (representing constraint (sij_00005_00001 + sij_00005_00006))
c Both direct and order encoding.
c Var 'aux244' order represents '0' with '1421'
c Var 'aux244' direct represents '0' with '1421'
c Var 'aux244' order represents '1' with '1422'
-1421 1422 0
c Var 'aux244' direct represents '1' with '1423'
1421 -1422 1423 0
-1423 1422 0
-1423 -1421 0
c Var 'aux244' direct represents '2' with '-1422'
1421 1423 -1422 0
c Encoding variable: aux245 with domain: int(0..2) (representing constraint (sij_00005_00005 + sij_00005_00002))
c Both direct and order encoding.
c Var 'aux245' order represents '0' with '1424'
c Var 'aux245' direct represents '0' with '1424'
c Var 'aux245' order represents '1' with '1425'
-1424 1425 0
c Var 'aux245' direct represents '1' with '1426'
1424 -1425 1426 0
-1426 1425 0
-1426 -1424 0
c Var 'aux245' direct represents '2' with '-1425'
1424 1426 -1425 0
c Encoding variable: aux246 with domain: int(0..2) (representing constraint (sij_00005_00004 + sij_00005_00003))
c Both direct and order encoding.
c Var 'aux246' order represents '0' with '1427'
c Var 'aux246' direct represents '0' with '1427'
c Var 'aux246' order represents '1' with '1428'
-1427 1428 0
c Var 'aux246' direct represents '1' with '1429'
1427 -1428 1429 0
-1429 1428 0
-1429 -1427 0
c Var 'aux246' direct represents '2' with '-1428'
1427 1429 -1428 0
c Encoding variable: aux247 with domain: int(0..2) (representing constraint (sij_00006_00001 + sij_00006_00006))
c Both direct and order encoding.
c Var 'aux247' order represents '0' with '1430'
c Var 'aux247' direct represents '0' with '1430'
c Var 'aux247' order represents '1' with '1431'
-1430 1431 0
c Var 'aux247' direct represents '1' with '1432'
1430 -1431 1432 0
-1432 1431 0
-1432 -1430 0
c Var 'aux247' direct represents '2' with '-1431'
1430 1432 -1431 0
c Encoding variable: aux248 with domain: int(0..2) (representing constraint (sij_00006_00005 + sij_00006_00002))
c Both direct and order encoding.
c Var 'aux248' order represents '0' with '1433'
c Var 'aux248' direct represents '0' with '1433'
c Var 'aux248' order represents '1' with '1434'
-1433 1434 0
c Var 'aux248' direct represents '1' with '1435'
1433 -1434 1435 0
-1435 1434 0
-1435 -1433 0
c Var 'aux248' direct represents '2' with '-1434'
1433 1435 -1434 0
c Encoding variable: aux249 with domain: int(0..2) (representing constraint (sij_00006_00004 + sij_00006_00003))
c Both direct and order encoding.
c Var 'aux249' order represents '0' with '1436'
c Var 'aux249' direct represents '0' with '1436'
c Var 'aux249' order represents '1' with '1437'
-1436 1437 0
c Var 'aux249' direct represents '1' with '1438'
1436 -1437 1438 0
-1438 1437 0
-1438 -1436 0
c Var 'aux249' direct represents '2' with '-1437'
1436 1438 -1437 0
c Encoding variable: aux250 with domain: int(0..2) (representing constraint (sij_00002_00001 + sij_00006_00001))
c Both direct and order encoding.
c Var 'aux250' order represents '0' with '1439'
c Var 'aux250' direct represents '0' with '1439'
c Var 'aux250' order represents '1' with '1440'
-1439 1440 0
c Var 'aux250' direct represents '1' with '1441'
1439 -1440 1441 0
-1441 1440 0
-1441 -1439 0
c Var 'aux250' direct represents '2' with '-1440'
1439 1441 -1440 0
c Encoding variable: aux251 with domain: int(0..2) (representing constraint (sij_00001_00001 + sij_00003_00001))
c Both direct and order encoding.
c Var 'aux251' order represents '0' with '1442'
c Var 'aux251' direct represents '0' with '1442'
c Var 'aux251' order represents '1' with '1443'
-1442 1443 0
c Var 'aux251' direct represents '1' with '1444'
1442 -1443 1444 0
-1444 1443 0
-1444 -1442 0
c Var 'aux251' direct represents '2' with '-1443'
1442 1444 -1443 0
c Encoding variable: aux252 with domain: int(0..2) (representing constraint (sij_00005_00001 + sij_00004_00001))
c Both direct and order encoding.
c Var 'aux252' order represents '0' with '1445'
c Var 'aux252' direct represents '0' with '1445'
c Var 'aux252' order represents '1' with '1446'
-1445 1446 0
c Var 'aux252' direct represents '1' with '1447'
1445 -1446 1447 0
-1447 1446 0
-1447 -1445 0
c Var 'aux252' direct represents '2' with '-1446'
1445 1447 -1446 0
c Encoding variable: aux253 with domain: int(0..2) (representing constraint (sij_00002_00002 + sij_00006_00002))
c Both direct and order encoding.
c Var 'aux253' order represents '0' with '1448'
c Var 'aux253' direct represents '0' with '1448'
c Var 'aux253' order represents '1' with '1449'
-1448 1449 0
c Var 'aux253' direct represents '1' with '1450'
1448 -1449 1450 0
-1450 1449 0
-1450 -1448 0
c Var 'aux253' direct represents '2' with '-1449'
1448 1450 -1449 0
c Encoding variable: aux254 with domain: int(0..2) (representing constraint (sij_00001_00002 + sij_00003_00002))
c Both direct and order encoding.
c Var 'aux254' order represents '0' with '1451'
c Var 'aux254' direct represents '0' with '1451'
c Var 'aux254' order represents '1' with '1452'
-1451 1452 0
c Var 'aux254' direct represents '1' with '1453'
1451 -1452 1453 0
-1453 1452 0
-1453 -1451 0
c Var 'aux254' direct represents '2' with '-1452'
1451 1453 -1452 0
c Encoding variable: aux255 with domain: int(0..2) (representing constraint (sij_00005_00002 + sij_00004_00002))
c Both direct and order encoding.
c Var 'aux255' order represents '0' with '1454'
c Var 'aux255' direct represents '0' with '1454'
c Var 'aux255' order represents '1' with '1455'
-1454 1455 0
c Var 'aux255' direct represents '1' with '1456'
1454 -1455 1456 0
-1456 1455 0
-1456 -1454 0
c Var 'aux255' direct represents '2' with '-1455'
1454 1456 -1455 0
c Encoding variable: aux256 with domain: int(0..2) (representing constraint (sij_00002_00003 + sij_00006_00003))
c Both direct and order encoding.
c Var 'aux256' order represents '0' with '1457'
c Var 'aux256' direct represents '0' with '1457'
c Var 'aux256' order represents '1' with '1458'
-1457 1458 0
c Var 'aux256' direct represents '1' with '1459'
1457 -1458 1459 0
-1459 1458 0
-1459 -1457 0
c Var 'aux256' direct represents '2' with '-1458'
1457 1459 -1458 0
c Encoding variable: aux257 with domain: int(0..2) (representing constraint (sij_00001_00003 + sij_00003_00003))
c Both direct and order encoding.
c Var 'aux257' order represents '0' with '1460'
c Var 'aux257' direct represents '0' with '1460'
c Var 'aux257' order represents '1' with '1461'
-1460 1461 0
c Var 'aux257' direct represents '1' with '1462'
1460 -1461 1462 0
-1462 1461 0
-1462 -1460 0
c Var 'aux257' direct represents '2' with '-1461'
1460 1462 -1461 0
c Encoding variable: aux258 with domain: int(0..2) (representing constraint (sij_00005_00003 + sij_00004_00003))
c Both direct and order encoding.
c Var 'aux258' order represents '0' with '1463'
c Var 'aux258' direct represents '0' with '1463'
c Var 'aux258' order represents '1' with '1464'
-1463 1464 0
c Var 'aux258' direct represents '1' with '1465'
1463 -1464 1465 0
-1465 1464 0
-1465 -1463 0
c Var 'aux258' direct represents '2' with '-1464'
1463 1465 -1464 0
c Encoding variable: aux259 with domain: int(0..2) (representing constraint (sij_00002_00004 + sij_00006_00004))
c Both direct and order encoding.
c Var 'aux259' order represents '0' with '1466'
c Var 'aux259' direct represents '0' with '1466'
c Var 'aux259' order represents '1' with '1467'
-1466 1467 0
c Var 'aux259' direct represents '1' with '1468'
1466 -1467 1468 0
-1468 1467 0
-1468 -1466 0
c Var 'aux259' direct represents '2' with '-1467'
1466 1468 -1467 0
c Encoding variable: aux260 with domain: int(0..2) (representing constraint (sij_00001_00004 + sij_00003_00004))
c Both direct and order encoding.
c Var 'aux260' order represents '0' with '1469'
c Var 'aux260' direct represents '0' with '1469'
c Var 'aux260' order represents '1' with '1470'
-1469 1470 0
c Var 'aux260' direct represents '1' with '1471'
1469 -1470 1471 0
-1471 1470 0
-1471 -1469 0
c Var 'aux260' direct represents '2' with '-1470'
1469 1471 -1470 0
c Encoding variable: aux261 with domain: int(0..2) (representing constraint (sij_00005_00004 + sij_00004_00004))
c Both direct and order encoding.
c Var 'aux261' order represents '0' with '1472'
c Var 'aux261' direct represents '0' with '1472'
c Var 'aux261' order represents '1' with '1473'
-1472 1473 0
c Var 'aux261' direct represents '1' with '1474'
1472 -1473 1474 0
-1474 1473 0
-1474 -1472 0
c Var 'aux261' direct represents '2' with '-1473'
1472 1474 -1473 0
c Encoding variable: aux262 with domain: int(0..2) (representing constraint (sij_00002_00005 + sij_00006_00005))
c Both direct and order encoding.
c Var 'aux262' order represents '0' with '1475'
c Var 'aux262' direct represents '0' with '1475'
c Var 'aux262' order represents '1' with '1476'
-1475 1476 0
c Var 'aux262' direct represents '1' with '1477'
1475 -1476 1477 0
-1477 1476 0
-1477 -1475 0
c Var 'aux262' direct represents '2' with '-1476'
1475 1477 -1476 0
c Encoding variable: aux263 with domain: int(0..2) (representing constraint (sij_00001_00005 + sij_00003_00005))
c Both direct and order encoding.
c Var 'aux263' order represents '0' with '1478'
c Var 'aux263' direct represents '0' with '1478'
c Var 'aux263' order represents '1' with '1479'
-1478 1479 0
c Var 'aux263' direct represents '1' with '1480'
1478 -1479 1480 0
-1480 1479 0
-1480 -1478 0
c Var 'aux263' direct represents '2' with '-1479'
1478 1480 -1479 0
c Encoding variable: aux264 with domain: int(0..2) (representing constraint (sij_00005_00005 + sij_00004_00005))
c Both direct and order encoding.
c Var 'aux264' order represents '0' with '1481'
c Var 'aux264' direct represents '0' with '1481'
c Var 'aux264' order represents '1' with '1482'
-1481 1482 0
c Var 'aux264' direct represents '1' with '1483'
1481 -1482 1483 0
-1483 1482 0
-1483 -1481 0
c Var 'aux264' direct represents '2' with '-1482'
1481 1483 -1482 0
c Encoding variable: aux265 with domain: int(0..2) (representing constraint (sij_00002_00006 + sij_00006_00006))
c Both direct and order encoding.
c Var 'aux265' order represents '0' with '1484'
c Var 'aux265' direct represents '0' with '1484'
c Var 'aux265' order represents '1' with '1485'
-1484 1485 0
c Var 'aux265' direct represents '1' with '1486'
1484 -1485 1486 0
-1486 1485 0
-1486 -1484 0
c Var 'aux265' direct represents '2' with '-1485'
1484 1486 -1485 0
c Encoding variable: aux266 with domain: int(0..2) (representing constraint (sij_00001_00006 + sij_00003_00006))
c Both direct and order encoding.
c Var 'aux266' order represents '0' with '1487'
c Var 'aux266' direct represents '0' with '1487'
c Var 'aux266' order represents '1' with '1488'
-1487 1488 0
c Var 'aux266' direct represents '1' with '1489'
1487 -1488 1489 0
-1489 1488 0
-1489 -1487 0
c Var 'aux266' direct represents '2' with '-1488'
1487 1489 -1488 0
c Encoding variable: aux267 with domain: int(0..2) (representing constraint (sij_00005_00006 + sij_00004_00006))
c Both direct and order encoding.
c Var 'aux267' order represents '0' with '1490'
c Var 'aux267' direct represents '0' with '1490'
c Var 'aux267' order represents '1' with '1491'
-1490 1491 0
c Var 'aux267' direct represents '1' with '1492'
1490 -1491 1492 0
-1492 1491 0
-1492 -1490 0
c Var 'aux267' direct represents '2' with '-1491'
1490 1492 -1491 0
c Encoding variable: aux268 with domain: int(0) (representing constraint (lijk_00001_00001_00001 + lijk_00001_00001_00002))
c Var 'aux268' direct represents '0' with '1493'
1493 0
c Encoding variable: aux269 with domain: int(0) (representing constraint (uijk_00001_00001_00002 + aux268))
c Var 'aux269' direct represents '0' with '1494'
1494 0
c Encoding variable: aux270 with domain: int(0) (representing constraint (shift(1, -1) + aux269))
c Var 'aux270' direct represents '0' with '1495'
1495 0
c Encoding variable: aux271 with domain: int(0) (representing constraint (uijk_00001_00001_00001 + aux270))
c Var 'aux271' direct represents '0' with '1496'
1496 0
c Encoding variable: aux272 with domain: bool (representing constraint (aux271 + rijk_00001_00001_00001))
c Var 'aux272' direct represents '0' with '-1497'
c Var 'aux272' direct represents '1' with '1497'
c Var 'aux272' order represents '1' with '1'
c Var 'aux272' order represents '0' with '-1497'
c Encoding variable: aux273 with domain: int(0..2) (representing constraint (rijk_00001_00001_00002 + aux272))
c Both direct and order encoding.
c Var 'aux273' order represents '0' with '1498'
c Var 'aux273' direct represents '0' with '1498'
c Var 'aux273' order represents '1' with '1499'
-1498 1499 0
c Var 'aux273' direct represents '1' with '1500'
1498 -1499 1500 0
-1500 1499 0
-1500 -1498 0
c Var 'aux273' direct represents '2' with '-1499'
1498 1500 -1499 0
c Encoding variable: aux274 with domain: int(0..2) (representing constraint (dijk_00001_00001_00002 + dijk_00001_00001_00001))
c Both direct and order encoding.
c Var 'aux274' order represents '0' with '1501'
c Var 'aux274' direct represents '0' with '1501'
c Var 'aux274' order represents '1' with '1502'
-1501 1502 0
c Var 'aux274' direct represents '1' with '1503'
1501 -1502 1503 0
-1503 1502 0
-1503 -1501 0
c Var 'aux274' direct represents '2' with '-1502'
1501 1503 -1502 0
c Encoding variable: aux275 with domain: int(0) (representing constraint (lijk_00002_00001_00001 + lijk_00002_00001_00002))
c Var 'aux275' direct represents '0' with '1504'
1504 0
c Encoding variable: aux276 with domain: int(0) (representing constraint (uijk_00002_00001_00002 + aux275))
c Var 'aux276' direct represents '0' with '1505'
1505 0
c Encoding variable: aux277 with domain: int(0) (representing constraint (shift(1, -1) + aux276))
c Var 'aux277' direct represents '0' with '1506'
1506 0
c Encoding variable: aux278 with domain: bool (representing constraint (aux277 + rijk_00002_00001_00001))
c Var 'aux278' direct represents '0' with '-1507'
c Var 'aux278' direct represents '1' with '1507'
c Var 'aux278' order represents '1' with '1'
c Var 'aux278' order represents '0' with '-1507'
c Encoding variable: aux279 with domain: int(0..2) (representing constraint (dijk_00002_00001_00001 + aux278))
c Both direct and order encoding.
c Var 'aux279' order represents '0' with '1508'
c Var 'aux279' direct represents '0' with '1508'
c Var 'aux279' order represents '1' with '1509'
-1508 1509 0
c Var 'aux279' direct represents '1' with '1510'
1508 -1509 1510 0
-1510 1509 0
-1510 -1508 0
c Var 'aux279' direct represents '2' with '-1509'
1508 1510 -1509 0
c Encoding variable: aux280 with domain: int(0..2) (representing constraint (dijk_00002_00001_00002 + rijk_00002_00001_00002))
c Both direct and order encoding.
c Var 'aux280' order represents '0' with '1511'
c Var 'aux280' direct represents '0' with '1511'
c Var 'aux280' order represents '1' with '1512'
-1511 1512 0
c Var 'aux280' direct represents '1' with '1513'
1511 -1512 1513 0
-1513 1512 0
-1513 -1511 0
c Var 'aux280' direct represents '2' with '-1512'
1511 1513 -1512 0
c Encoding variable: aux281 with domain: int(0..3) (representing constraint (uijk_00002_00001_00001 + aux280))
c Both direct and order encoding.
c Var 'aux281' order represents '0' with '1514'
c Var 'aux281' direct represents '0' with '1514'
c Var 'aux281' order represents '1' with '1515'
-1514 1515 0
c Var 'aux281' direct represents '1' with '1516'
1514 -1515 1516 0
-1516 1515 0
-1516 -1514 0
c Var 'aux281' order represents '2' with '1517'
-1515 1517 0
c Var 'aux281' direct represents '2' with '1518'
1515 -1517 1518 0
-1518 1517 0
-1518 -1515 0
c Var 'aux281' direct represents '3' with '-1517'
1514 1516 1518 -1517 0
c Encoding variable: aux282 with domain: int(0) (representing constraint (shift(1, -1) + lijk_00003_00001_00001))
c Var 'aux282' direct represents '0' with '1519'
1519 0
c Encoding variable: aux283 with domain: int(0) (representing constraint (lijk_00003_00001_00002 + aux282))
c Var 'aux283' direct represents '0' with '1520'
1520 0
c Encoding variable: aux284 with domain: bool (representing constraint (aux283 + rijk_00003_00001_00002))
c Var 'aux284' direct represents '0' with '-1521'
c Var 'aux284' direct represents '1' with '1521'
c Var 'aux284' order represents '1' with '1'
c Var 'aux284' order represents '0' with '-1521'
c Encoding variable: aux285 with domain: int(0..2) (representing constraint (dijk_00003_00001_00001 + aux284))
c Both direct and order encoding.
c Var 'aux285' order represents '0' with '1522'
c Var 'aux285' direct represents '0' with '1522'
c Var 'aux285' order represents '1' with '1523'
-1522 1523 0
c Var 'aux285' direct represents '1' with '1524'
1522 -1523 1524 0
-1524 1523 0
-1524 -1522 0
c Var 'aux285' direct represents '2' with '-1523'
1522 1524 -1523 0
c Encoding variable: aux286 with domain: int(0..2) (representing constraint (uijk_00003_00001_00002 + dijk_00003_00001_00002))
c Both direct and order encoding.
c Var 'aux286' order represents '0' with '1525'
c Var 'aux286' direct represents '0' with '1525'
c Var 'aux286' order represents '1' with '1526'
-1525 1526 0
c Var 'aux286' direct represents '1' with '1527'
1525 -1526 1527 0
-1527 1526 0
-1527 -1525 0
c Var 'aux286' direct represents '2' with '-1526'
1525 1527 -1526 0
c Encoding variable: aux287 with domain: int(0..2) (representing constraint (uijk_00003_00001_00001 + rijk_00003_00001_00001))
c Both direct and order encoding.
c Var 'aux287' order represents '0' with '1528'
c Var 'aux287' direct represents '0' with '1528'
c Var 'aux287' order represents '1' with '1529'
-1528 1529 0
c Var 'aux287' direct represents '1' with '1530'
1528 -1529 1530 0
-1530 1529 0
-1530 -1528 0
c Var 'aux287' direct represents '2' with '-1529'
1528 1530 -1529 0
c Encoding variable: aux288 with domain: int(0..4) (representing constraint (aux285 + aux287))
c Both direct and order encoding.
c Var 'aux288' order represents '0' with '1531'
c Var 'aux288' direct represents '0' with '1531'
c Var 'aux288' order represents '1' with '1532'
-1531 1532 0
c Var 'aux288' direct represents '1' with '1533'
1531 -1532 1533 0
-1533 1532 0
-1533 -1531 0
c Var 'aux288' order represents '2' with '1534'
-1532 1534 0
c Var 'aux288' direct represents '2' with '1535'
1532 -1534 1535 0
-1535 1534 0
-1535 -1532 0
c Var 'aux288' order represents '3' with '1536'
-1534 1536 0
c Var 'aux288' direct represents '3' with '1537'
1534 -1536 1537 0
-1537 1536 0
-1537 -1534 0
c Var 'aux288' direct represents '4' with '-1536'
1531 1533 1535 1537 -1536 0
c Encoding variable: aux289 with domain: int(0) (representing constraint (shift(1, -1) + lijk_00004_00001_00001))
c Var 'aux289' direct represents '0' with '1538'
1538 0
c Encoding variable: aux290 with domain: int(0) (representing constraint (lijk_00004_00001_00002 + aux289))
c Var 'aux290' direct represents '0' with '1539'
1539 0
c Encoding variable: aux291 with domain: bool (representing constraint (aux290 + rijk_00004_00001_00002))
c Var 'aux291' direct represents '0' with '-1540'
c Var 'aux291' direct represents '1' with '1540'
c Var 'aux291' order represents '1' with '1'
c Var 'aux291' order represents '0' with '-1540'
c Encoding variable: aux292 with domain: int(0..2) (representing constraint (dijk_00004_00001_00002 + aux291))
c Both direct and order encoding.
c Var 'aux292' order represents '0' with '1541'
c Var 'aux292' direct represents '0' with '1541'
c Var 'aux292' order represents '1' with '1542'
-1541 1542 0
c Var 'aux292' direct represents '1' with '1543'
1541 -1542 1543 0
-1543 1542 0
-1543 -1541 0
c Var 'aux292' direct represents '2' with '-1542'
1541 1543 -1542 0
c Encoding variable: aux293 with domain: int(0..2) (representing constraint (dijk_00004_00001_00001 + uijk_00004_00001_00001))
c Both direct and order encoding.
c Var 'aux293' order represents '0' with '1544'
c Var 'aux293' direct represents '0' with '1544'
c Var 'aux293' order represents '1' with '1545'
-1544 1545 0
c Var 'aux293' direct represents '1' with '1546'
1544 -1545 1546 0
-1546 1545 0
-1546 -1544 0
c Var 'aux293' direct represents '2' with '-1545'
1544 1546 -1545 0
c Encoding variable: aux294 with domain: int(0..2) (representing constraint (uijk_00004_00001_00002 + rijk_00004_00001_00001))
c Both direct and order encoding.
c Var 'aux294' order represents '0' with '1547'
c Var 'aux294' direct represents '0' with '1547'
c Var 'aux294' order represents '1' with '1548'
-1547 1548 0
c Var 'aux294' direct represents '1' with '1549'
1547 -1548 1549 0
-1549 1548 0
-1549 -1547 0
c Var 'aux294' direct represents '2' with '-1548'
1547 1549 -1548 0
c Encoding variable: aux295 with domain: int(0..4) (representing constraint (aux292 + aux294))
c Both direct and order encoding.
c Var 'aux295' order represents '0' with '1550'
c Var 'aux295' direct represents '0' with '1550'
c Var 'aux295' order represents '1' with '1551'
-1550 1551 0
c Var 'aux295' direct represents '1' with '1552'
1550 -1551 1552 0
-1552 1551 0
-1552 -1550 0
c Var 'aux295' order represents '2' with '1553'
-1551 1553 0
c Var 'aux295' direct represents '2' with '1554'
1551 -1553 1554 0
-1554 1553 0
-1554 -1551 0
c Var 'aux295' order represents '3' with '1555'
-1553 1555 0
c Var 'aux295' direct represents '3' with '1556'
1553 -1555 1556 0
-1556 1555 0
-1556 -1553 0
c Var 'aux295' direct represents '4' with '-1555'
1550 1552 1554 1556 -1555 0
c Encoding variable: aux296 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00005_00001_00002))
c Var 'aux296' direct represents '0' with '1557'
1557 0
c Encoding variable: aux297 with domain: int(0) (representing constraint (lijk_00005_00001_00001 + lijk_00005_00001_00002))
c Var 'aux297' direct represents '0' with '1558'
1558 0
c Encoding variable: aux298 with domain: int(0) (representing constraint (aux296 + aux297))
c Var 'aux298' direct represents '0' with '1559'
1559 0
c Encoding variable: aux299 with domain: bool (representing constraint (aux298 + uijk_00005_00001_00002))
c Var 'aux299' direct represents '0' with '-1560'
c Var 'aux299' direct represents '1' with '1560'
c Var 'aux299' order represents '1' with '1'
c Var 'aux299' order represents '0' with '-1560'
c Encoding variable: aux300 with domain: int(0..2) (representing constraint (uijk_00005_00001_00001 + aux299))
c Both direct and order encoding.
c Var 'aux300' order represents '0' with '1561'
c Var 'aux300' direct represents '0' with '1561'
c Var 'aux300' order represents '1' with '1562'
-1561 1562 0
c Var 'aux300' direct represents '1' with '1563'
1561 -1562 1563 0
-1563 1562 0
-1563 -1561 0
c Var 'aux300' direct represents '2' with '-1562'
1561 1563 -1562 0
c Encoding variable: aux301 with domain: int(0..2) (representing constraint (rijk_00005_00001_00001 + rijk_00005_00001_00002))
c Both direct and order encoding.
c Var 'aux301' order represents '0' with '1564'
c Var 'aux301' direct represents '0' with '1564'
c Var 'aux301' order represents '1' with '1565'
-1564 1565 0
c Var 'aux301' direct represents '1' with '1566'
1564 -1565 1566 0
-1566 1565 0
-1566 -1564 0
c Var 'aux301' direct represents '2' with '-1565'
1564 1566 -1565 0
c Encoding variable: aux302 with domain: int(0..3) (representing constraint (dijk_00005_00001_00001 + aux301))
c Both direct and order encoding.
c Var 'aux302' order represents '0' with '1567'
c Var 'aux302' direct represents '0' with '1567'
c Var 'aux302' order represents '1' with '1568'
-1567 1568 0
c Var 'aux302' direct represents '1' with '1569'
1567 -1568 1569 0
-1569 1568 0
-1569 -1567 0
c Var 'aux302' order represents '2' with '1570'
-1568 1570 0
c Var 'aux302' direct represents '2' with '1571'
1568 -1570 1571 0
-1571 1570 0
-1571 -1568 0
c Var 'aux302' direct represents '3' with '-1570'
1567 1569 1571 -1570 0
c Encoding variable: aux303 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00001_00001))
c Var 'aux303' direct represents '0' with '1572'
1572 0
c Encoding variable: aux304 with domain: int(0) (representing constraint (lijk_00006_00001_00002 + aux303))
c Var 'aux304' direct represents '0' with '1573'
1573 0
c Encoding variable: aux305 with domain: int(0) (representing constraint (dijk_00006_00001_00002 + aux304))
c Var 'aux305' direct represents '0' with '1574'
1574 0
c Encoding variable: aux306 with domain: int(0) (representing constraint (lijk_00006_00001_00001 + aux305))
c Var 'aux306' direct represents '0' with '1575'
1575 0
c Encoding variable: aux307 with domain: bool (representing constraint (aux306 + uijk_00006_00001_00001))
c Var 'aux307' direct represents '0' with '-1576'
c Var 'aux307' direct represents '1' with '1576'
c Var 'aux307' order represents '1' with '1'
c Var 'aux307' order represents '0' with '-1576'
c Encoding variable: aux308 with domain: int(0..2) (representing constraint (uijk_00006_00001_00002 + aux307))
c Both direct and order encoding.
c Var 'aux308' order represents '0' with '1577'
c Var 'aux308' direct represents '0' with '1577'
c Var 'aux308' order represents '1' with '1578'
-1577 1578 0
c Var 'aux308' direct represents '1' with '1579'
1577 -1578 1579 0
-1579 1578 0
-1579 -1577 0
c Var 'aux308' direct represents '2' with '-1578'
1577 1579 -1578 0
c Encoding variable: aux309 with domain: int(0..2) (representing constraint (rijk_00006_00001_00002 + rijk_00006_00001_00001))
c Both direct and order encoding.
c Var 'aux309' order represents '0' with '1580'
c Var 'aux309' direct represents '0' with '1580'
c Var 'aux309' order represents '1' with '1581'
-1580 1581 0
c Var 'aux309' direct represents '1' with '1582'
1580 -1581 1582 0
-1582 1581 0
-1582 -1580 0
c Var 'aux309' direct represents '2' with '-1581'
1580 1582 -1581 0
c Encoding variable: aux310 with domain: int(0) (representing constraint (uijk_00001_00002_00001 + uijk_00001_00002_00002))
c Var 'aux310' direct represents '0' with '1583'
1583 0
c Encoding variable: aux311 with domain: int(0) (representing constraint (shift(1, -1) + aux310))
c Var 'aux311' direct represents '0' with '1584'
1584 0
c Encoding variable: aux312 with domain: int(0) (representing constraint (lijk_00001_00002_00002 + aux311))
c Var 'aux312' direct represents '0' with '1585'
1585 0
c Encoding variable: aux313 with domain: bool (representing constraint (aux312 + rijk_00001_00002_00001))
c Var 'aux313' direct represents '0' with '-1586'
c Var 'aux313' direct represents '1' with '1586'
c Var 'aux313' order represents '1' with '1'
c Var 'aux313' order represents '0' with '-1586'
c Encoding variable: aux314 with domain: int(0..2) (representing constraint (lijk_00001_00002_00001 + aux313))
c Both direct and order encoding.
c Var 'aux314' order represents '0' with '1587'
c Var 'aux314' direct represents '0' with '1587'
c Var 'aux314' order represents '1' with '1588'
-1587 1588 0
c Var 'aux314' direct represents '1' with '1589'
1587 -1588 1589 0
-1589 1588 0
-1589 -1587 0
c Var 'aux314' direct represents '2' with '-1588'
1587 1589 -1588 0
c Encoding variable: aux315 with domain: int(0..2) (representing constraint (rijk_00001_00002_00002 + dijk_00001_00002_00002))
c Both direct and order encoding.
c Var 'aux315' order represents '0' with '1590'
c Var 'aux315' direct represents '0' with '1590'
c Var 'aux315' order represents '1' with '1591'
-1590 1591 0
c Var 'aux315' direct represents '1' with '1592'
1590 -1591 1592 0
-1592 1591 0
-1592 -1590 0
c Var 'aux315' direct represents '2' with '-1591'
1590 1592 -1591 0
c Encoding variable: aux316 with domain: int(0..3) (representing constraint (dijk_00001_00002_00001 + aux315))
c Both direct and order encoding.
c Var 'aux316' order represents '0' with '1593'
c Var 'aux316' direct represents '0' with '1593'
c Var 'aux316' order represents '1' with '1594'
-1593 1594 0
c Var 'aux316' direct represents '1' with '1595'
1593 -1594 1595 0
-1595 1594 0
-1595 -1593 0
c Var 'aux316' order represents '2' with '1596'
-1594 1596 0
c Var 'aux316' direct represents '2' with '1597'
1594 -1596 1597 0
-1597 1596 0
-1597 -1594 0
c Var 'aux316' direct represents '3' with '-1596'
1593 1595 1597 -1596 0
c Encoding variable: aux317 with domain: int(0) (representing constraint (lijk_00002_00002_00002 + shift(1, -1)))
c Var 'aux317' direct represents '0' with '1598'
1598 0
c Encoding variable: aux318 with domain: int(0) (representing constraint (uijk_00002_00002_00002 + aux317))
c Var 'aux318' direct represents '0' with '1599'
1599 0
c Encoding variable: aux319 with domain: bool (representing constraint (aux318 + uijk_00002_00002_00001))
c Var 'aux319' direct represents '0' with '-1600'
c Var 'aux319' direct represents '1' with '1600'
c Var 'aux319' order represents '1' with '1'
c Var 'aux319' order represents '0' with '-1600'
c Encoding variable: aux320 with domain: int(0..2) (representing constraint (dijk_00002_00002_00002 + aux319))
c Both direct and order encoding.
c Var 'aux320' order represents '0' with '1601'
c Var 'aux320' direct represents '0' with '1601'
c Var 'aux320' order represents '1' with '1602'
-1601 1602 0
c Var 'aux320' direct represents '1' with '1603'
1601 -1602 1603 0
-1603 1602 0
-1603 -1601 0
c Var 'aux320' direct represents '2' with '-1602'
1601 1603 -1602 0
c Encoding variable: aux321 with domain: int(0..2) (representing constraint (rijk_00002_00002_00002 + dijk_00002_00002_00001))
c Both direct and order encoding.
c Var 'aux321' order represents '0' with '1604'
c Var 'aux321' direct represents '0' with '1604'
c Var 'aux321' order represents '1' with '1605'
-1604 1605 0
c Var 'aux321' direct represents '1' with '1606'
1604 -1605 1606 0
-1606 1605 0
-1606 -1604 0
c Var 'aux321' direct represents '2' with '-1605'
1604 1606 -1605 0
c Encoding variable: aux322 with domain: int(0..2) (representing constraint (rijk_00002_00002_00001 + lijk_00002_00002_00001))
c Both direct and order encoding.
c Var 'aux322' order represents '0' with '1607'
c Var 'aux322' direct represents '0' with '1607'
c Var 'aux322' order represents '1' with '1608'
-1607 1608 0
c Var 'aux322' direct represents '1' with '1609'
1607 -1608 1609 0
-1609 1608 0
-1609 -1607 0
c Var 'aux322' direct represents '2' with '-1608'
1607 1609 -1608 0
c Encoding variable: aux323 with domain: int(0..4) (representing constraint (aux320 + aux322))
c Both direct and order encoding.
c Var 'aux323' order represents '0' with '1610'
c Var 'aux323' direct represents '0' with '1610'
c Var 'aux323' order represents '1' with '1611'
-1610 1611 0
c Var 'aux323' direct represents '1' with '1612'
1610 -1611 1612 0
-1612 1611 0
-1612 -1610 0
c Var 'aux323' order represents '2' with '1613'
-1611 1613 0
c Var 'aux323' direct represents '2' with '1614'
1611 -1613 1614 0
-1614 1613 0
-1614 -1611 0
c Var 'aux323' order represents '3' with '1615'
-1613 1615 0
c Var 'aux323' direct represents '3' with '1616'
1613 -1615 1616 0
-1616 1615 0
-1616 -1613 0
c Var 'aux323' direct represents '4' with '-1615'
1610 1612 1614 1616 -1615 0
c Encoding variable: aux324 with domain: int(0) (representing constraint (lijk_00003_00002_00002 + shift(1, -1)))
c Var 'aux324' direct represents '0' with '1617'
1617 0
c Encoding variable: aux325 with domain: bool (representing constraint (aux324 + rijk_00003_00002_00002))
c Var 'aux325' direct represents '0' with '-1618'
c Var 'aux325' direct represents '1' with '1618'
c Var 'aux325' order represents '1' with '1'
c Var 'aux325' order represents '0' with '-1618'
c Encoding variable: aux326 with domain: int(0..2) (representing constraint (uijk_00003_00002_00002 + aux325))
c Both direct and order encoding.
c Var 'aux326' order represents '0' with '1619'
c Var 'aux326' direct represents '0' with '1619'
c Var 'aux326' order represents '1' with '1620'
-1619 1620 0
c Var 'aux326' direct represents '1' with '1621'
1619 -1620 1621 0
-1621 1620 0
-1621 -1619 0
c Var 'aux326' direct represents '2' with '-1620'
1619 1621 -1620 0
c Encoding variable: aux327 with domain: int(0..2) (representing constraint (uijk_00003_00002_00001 + dijk_00003_00002_00001))
c Both direct and order encoding.
c Var 'aux327' order represents '0' with '1622'
c Var 'aux327' direct represents '0' with '1622'
c Var 'aux327' order represents '1' with '1623'
-1622 1623 0
c Var 'aux327' direct represents '1' with '1624'
1622 -1623 1624 0
-1624 1623 0
-1624 -1622 0
c Var 'aux327' direct represents '2' with '-1623'
1622 1624 -1623 0
c Encoding variable: aux328 with domain: int(0..2) (representing constraint (dijk_00003_00002_00002 + lijk_00003_00002_00001))
c Both direct and order encoding.
c Var 'aux328' order represents '0' with '1625'
c Var 'aux328' direct represents '0' with '1625'
c Var 'aux328' order represents '1' with '1626'
-1625 1626 0
c Var 'aux328' direct represents '1' with '1627'
1625 -1626 1627 0
-1627 1626 0
-1627 -1625 0
c Var 'aux328' direct represents '2' with '-1626'
1625 1627 -1626 0
c Encoding variable: aux329 with domain: int(0..3) (representing constraint (rijk_00003_00002_00001 + aux328))
c Both direct and order encoding.
c Var 'aux329' order represents '0' with '1628'
c Var 'aux329' direct represents '0' with '1628'
c Var 'aux329' order represents '1' with '1629'
-1628 1629 0
c Var 'aux329' direct represents '1' with '1630'
1628 -1629 1630 0
-1630 1629 0
-1630 -1628 0
c Var 'aux329' order represents '2' with '1631'
-1629 1631 0
c Var 'aux329' direct represents '2' with '1632'
1629 -1631 1632 0
-1632 1631 0
-1632 -1629 0
c Var 'aux329' direct represents '3' with '-1631'
1628 1630 1632 -1631 0
c Encoding variable: aux330 with domain: int(0..4) (representing constraint (aux326 + aux327))
c Both direct and order encoding.
c Var 'aux330' order represents '0' with '1633'
c Var 'aux330' direct represents '0' with '1633'
c Var 'aux330' order represents '1' with '1634'
-1633 1634 0
c Var 'aux330' direct represents '1' with '1635'
1633 -1634 1635 0
-1635 1634 0
-1635 -1633 0
c Var 'aux330' order represents '2' with '1636'
-1634 1636 0
c Var 'aux330' direct represents '2' with '1637'
1634 -1636 1637 0
-1637 1636 0
-1637 -1634 0
c Var 'aux330' order represents '3' with '1638'
-1636 1638 0
c Var 'aux330' direct represents '3' with '1639'
1636 -1638 1639 0
-1639 1638 0
-1639 -1636 0
c Var 'aux330' direct represents '4' with '-1638'
1633 1635 1637 1639 -1638 0
c Encoding variable: aux331 with domain: int(0) (representing constraint (lijk_00004_00002_00002 + shift(1, -1)))
c Var 'aux331' direct represents '0' with '1640'
1640 0
c Encoding variable: aux332 with domain: bool (representing constraint (aux331 + rijk_00004_00002_00002))
c Var 'aux332' direct represents '0' with '-1641'
c Var 'aux332' direct represents '1' with '1641'
c Var 'aux332' order represents '1' with '1'
c Var 'aux332' order represents '0' with '-1641'
c Encoding variable: aux333 with domain: int(0..2) (representing constraint (dijk_00004_00002_00001 + dijk_00004_00002_00002))
c Both direct and order encoding.
c Var 'aux333' order represents '0' with '1642'
c Var 'aux333' direct represents '0' with '1642'
c Var 'aux333' order represents '1' with '1643'
-1642 1643 0
c Var 'aux333' direct represents '1' with '1644'
1642 -1643 1644 0
-1644 1643 0
-1644 -1642 0
c Var 'aux333' direct represents '2' with '-1643'
1642 1644 -1643 0
c Encoding variable: aux334 with domain: int(0..2) (representing constraint (uijk_00004_00002_00002 + aux332))
c Both direct and order encoding.
c Var 'aux334' order represents '0' with '1645'
c Var 'aux334' direct represents '0' with '1645'
c Var 'aux334' order represents '1' with '1646'
-1645 1646 0
c Var 'aux334' direct represents '1' with '1647'
1645 -1646 1647 0
-1647 1646 0
-1647 -1645 0
c Var 'aux334' direct represents '2' with '-1646'
1645 1647 -1646 0
c Encoding variable: aux335 with domain: int(0..2) (representing constraint (uijk_00004_00002_00001 + lijk_00004_00002_00001))
c Both direct and order encoding.
c Var 'aux335' order represents '0' with '1648'
c Var 'aux335' direct represents '0' with '1648'
c Var 'aux335' order represents '1' with '1649'
-1648 1649 0
c Var 'aux335' direct represents '1' with '1650'
1648 -1649 1650 0
-1650 1649 0
-1650 -1648 0
c Var 'aux335' direct represents '2' with '-1649'
1648 1650 -1649 0
c Encoding variable: aux336 with domain: int(0..3) (representing constraint (rijk_00004_00002_00001 + aux335))
c Both direct and order encoding.
c Var 'aux336' order represents '0' with '1651'
c Var 'aux336' direct represents '0' with '1651'
c Var 'aux336' order represents '1' with '1652'
-1651 1652 0
c Var 'aux336' direct represents '1' with '1653'
1651 -1652 1653 0
-1653 1652 0
-1653 -1651 0
c Var 'aux336' order represents '2' with '1654'
-1652 1654 0
c Var 'aux336' direct represents '2' with '1655'
1652 -1654 1655 0
-1655 1654 0
-1655 -1652 0
c Var 'aux336' direct represents '3' with '-1654'
1651 1653 1655 -1654 0
c Encoding variable: aux337 with domain: int(0..4) (representing constraint (aux334 + aux333))
c Both direct and order encoding.
c Var 'aux337' order represents '0' with '1656'
c Var 'aux337' direct represents '0' with '1656'
c Var 'aux337' order represents '1' with '1657'
-1656 1657 0
c Var 'aux337' direct represents '1' with '1658'
1656 -1657 1658 0
-1658 1657 0
-1658 -1656 0
c Var 'aux337' order represents '2' with '1659'
-1657 1659 0
c Var 'aux337' direct represents '2' with '1660'
1657 -1659 1660 0
-1660 1659 0
-1660 -1657 0
c Var 'aux337' order represents '3' with '1661'
-1659 1661 0
c Var 'aux337' direct represents '3' with '1662'
1659 -1661 1662 0
-1662 1661 0
-1662 -1659 0
c Var 'aux337' direct represents '4' with '-1661'
1656 1658 1660 1662 -1661 0
c Encoding variable: aux338 with domain: int(0) (representing constraint (lijk_00005_00002_00002 + dijk_00005_00002_00002))
c Var 'aux338' direct represents '0' with '1663'
1663 0
c Encoding variable: aux339 with domain: int(0) (representing constraint (shift(1, -1) + aux338))
c Var 'aux339' direct represents '0' with '1664'
1664 0
c Encoding variable: aux340 with domain: bool (representing constraint (aux339 + rijk_00005_00002_00002))
c Var 'aux340' direct represents '0' with '-1665'
c Var 'aux340' direct represents '1' with '1665'
c Var 'aux340' order represents '1' with '1'
c Var 'aux340' order represents '0' with '-1665'
c Encoding variable: aux341 with domain: int(0..2) (representing constraint (uijk_00005_00002_00001 + aux340))
c Both direct and order encoding.
c Var 'aux341' order represents '0' with '1666'
c Var 'aux341' direct represents '0' with '1666'
c Var 'aux341' order represents '1' with '1667'
-1666 1667 0
c Var 'aux341' direct represents '1' with '1668'
1666 -1667 1668 0
-1668 1667 0
-1668 -1666 0
c Var 'aux341' direct represents '2' with '-1667'
1666 1668 -1667 0
c Encoding variable: aux342 with domain: int(0..2) (representing constraint (uijk_00005_00002_00002 + rijk_00005_00002_00001))
c Both direct and order encoding.
c Var 'aux342' order represents '0' with '1669'
c Var 'aux342' direct represents '0' with '1669'
c Var 'aux342' order represents '1' with '1670'
-1669 1670 0
c Var 'aux342' direct represents '1' with '1671'
1669 -1670 1671 0
-1671 1670 0
-1671 -1669 0
c Var 'aux342' direct represents '2' with '-1670'
1669 1671 -1670 0
c Encoding variable: aux343 with domain: int(0..2) (representing constraint (lijk_00005_00002_00001 + dijk_00005_00002_00001))
c Both direct and order encoding.
c Var 'aux343' order represents '0' with '1672'
c Var 'aux343' direct represents '0' with '1672'
c Var 'aux343' order represents '1' with '1673'
-1672 1673 0
c Var 'aux343' direct represents '1' with '1674'
1672 -1673 1674 0
-1674 1673 0
-1674 -1672 0
c Var 'aux343' direct represents '2' with '-1673'
1672 1674 -1673 0
c Encoding variable: aux344 with domain: int(0..4) (representing constraint (aux341 + aux343))
c Both direct and order encoding.
c Var 'aux344' order represents '0' with '1675'
c Var 'aux344' direct represents '0' with '1675'
c Var 'aux344' order represents '1' with '1676'
-1675 1676 0
c Var 'aux344' direct represents '1' with '1677'
1675 -1676 1677 0
-1677 1676 0
-1677 -1675 0
c Var 'aux344' order represents '2' with '1678'
-1676 1678 0
c Var 'aux344' direct represents '2' with '1679'
1676 -1678 1679 0
-1679 1678 0
-1679 -1676 0
c Var 'aux344' order represents '3' with '1680'
-1678 1680 0
c Var 'aux344' direct represents '3' with '1681'
1678 -1680 1681 0
-1681 1680 0
-1681 -1678 0
c Var 'aux344' direct represents '4' with '-1680'
1675 1677 1679 1681 -1680 0
c Encoding variable: aux345 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00002_00002))
c Var 'aux345' direct represents '0' with '1682'
1682 0
c Encoding variable: aux346 with domain: int(0) (representing constraint (lijk_00006_00002_00002 + aux345))
c Var 'aux346' direct represents '0' with '1683'
1683 0
c Encoding variable: aux347 with domain: int(0) (representing constraint (dijk_00006_00002_00001 + aux346))
c Var 'aux347' direct represents '0' with '1684'
1684 0
c Encoding variable: aux348 with domain: bool (representing constraint (aux347 + rijk_00006_00002_00002))
c Var 'aux348' direct represents '0' with '-1685'
c Var 'aux348' direct represents '1' with '1685'
c Var 'aux348' order represents '1' with '1'
c Var 'aux348' order represents '0' with '-1685'
c Encoding variable: aux349 with domain: int(0..2) (representing constraint (lijk_00006_00002_00001 + aux348))
c Both direct and order encoding.
c Var 'aux349' order represents '0' with '1686'
c Var 'aux349' direct represents '0' with '1686'
c Var 'aux349' order represents '1' with '1687'
-1686 1687 0
c Var 'aux349' direct represents '1' with '1688'
1686 -1687 1688 0
-1688 1687 0
-1688 -1686 0
c Var 'aux349' direct represents '2' with '-1687'
1686 1688 -1687 0
c Encoding variable: aux350 with domain: int(0..2) (representing constraint (uijk_00006_00002_00001 + rijk_00006_00002_00001))
c Both direct and order encoding.
c Var 'aux350' order represents '0' with '1689'
c Var 'aux350' direct represents '0' with '1689'
c Var 'aux350' order represents '1' with '1690'
-1689 1690 0
c Var 'aux350' direct represents '1' with '1691'
1689 -1690 1691 0
-1691 1690 0
-1691 -1689 0
c Var 'aux350' direct represents '2' with '-1690'
1689 1691 -1690 0
c Encoding variable: aux351 with domain: int(0..3) (representing constraint (uijk_00006_00002_00002 + aux350))
c Both direct and order encoding.
c Var 'aux351' order represents '0' with '1692'
c Var 'aux351' direct represents '0' with '1692'
c Var 'aux351' order represents '1' with '1693'
-1692 1693 0
c Var 'aux351' direct represents '1' with '1694'
1692 -1693 1694 0
-1694 1693 0
-1694 -1692 0
c Var 'aux351' order represents '2' with '1695'
-1693 1695 0
c Var 'aux351' direct represents '2' with '1696'
1693 -1695 1696 0
-1696 1695 0
-1696 -1693 0
c Var 'aux351' direct represents '3' with '-1695'
1692 1694 1696 -1695 0
c Encoding variable: aux352 with domain: int(0) (representing constraint (uijk_00001_00003_00001 + uijk_00001_00003_00002))
c Var 'aux352' direct represents '0' with '1697'
1697 0
c Encoding variable: aux353 with domain: int(0) (representing constraint (shift(1, -1) + aux352))
c Var 'aux353' direct represents '0' with '1698'
1698 0
c Encoding variable: aux354 with domain: bool (representing constraint (aux353 + lijk_00001_00003_00002))
c Var 'aux354' direct represents '0' with '-1699'
c Var 'aux354' direct represents '1' with '1699'
c Var 'aux354' order represents '1' with '1'
c Var 'aux354' order represents '0' with '-1699'
c Encoding variable: aux355 with domain: int(0..2) (representing constraint (lijk_00001_00003_00001 + aux354))
c Both direct and order encoding.
c Var 'aux355' order represents '0' with '1700'
c Var 'aux355' direct represents '0' with '1700'
c Var 'aux355' order represents '1' with '1701'
-1700 1701 0
c Var 'aux355' direct represents '1' with '1702'
1700 -1701 1702 0
-1702 1701 0
-1702 -1700 0
c Var 'aux355' direct represents '2' with '-1701'
1700 1702 -1701 0
c Encoding variable: aux356 with domain: int(0..2) (representing constraint (rijk_00001_00003_00002 + dijk_00001_00003_00001))
c Both direct and order encoding.
c Var 'aux356' order represents '0' with '1703'
c Var 'aux356' direct represents '0' with '1703'
c Var 'aux356' order represents '1' with '1704'
-1703 1704 0
c Var 'aux356' direct represents '1' with '1705'
1703 -1704 1705 0
-1705 1704 0
-1705 -1703 0
c Var 'aux356' direct represents '2' with '-1704'
1703 1705 -1704 0
c Encoding variable: aux357 with domain: int(0..2) (representing constraint (dijk_00001_00003_00002 + rijk_00001_00003_00001))
c Both direct and order encoding.
c Var 'aux357' order represents '0' with '1706'
c Var 'aux357' direct represents '0' with '1706'
c Var 'aux357' order represents '1' with '1707'
-1706 1707 0
c Var 'aux357' direct represents '1' with '1708'
1706 -1707 1708 0
-1708 1707 0
-1708 -1706 0
c Var 'aux357' direct represents '2' with '-1707'
1706 1708 -1707 0
c Encoding variable: aux358 with domain: int(0..4) (representing constraint (aux355 + aux357))
c Both direct and order encoding.
c Var 'aux358' order represents '0' with '1709'
c Var 'aux358' direct represents '0' with '1709'
c Var 'aux358' order represents '1' with '1710'
-1709 1710 0
c Var 'aux358' direct represents '1' with '1711'
1709 -1710 1711 0
-1711 1710 0
-1711 -1709 0
c Var 'aux358' order represents '2' with '1712'
-1710 1712 0
c Var 'aux358' direct represents '2' with '1713'
1710 -1712 1713 0
-1713 1712 0
-1713 -1710 0
c Var 'aux358' order represents '3' with '1714'
-1712 1714 0
c Var 'aux358' direct represents '3' with '1715'
1712 -1714 1715 0
-1715 1714 0
-1715 -1712 0
c Var 'aux358' direct represents '4' with '-1714'
1709 1711 1713 1715 -1714 0
c Encoding variable: aux359 with domain: int(0) (representing constraint (uijk_00002_00003_00002 + shift(1, -1)))
c Var 'aux359' direct represents '0' with '1716'
1716 0
c Encoding variable: aux360 with domain: bool (representing constraint (aux359 + dijk_00002_00003_00002))
c Var 'aux360' direct represents '0' with '-1717'
c Var 'aux360' direct represents '1' with '1717'
c Var 'aux360' order represents '1' with '1'
c Var 'aux360' order represents '0' with '-1717'
c Encoding variable: aux361 with domain: int(0..2) (representing constraint (rijk_00002_00003_00001 + uijk_00002_00003_00001))
c Both direct and order encoding.
c Var 'aux361' order represents '0' with '1718'
c Var 'aux361' direct represents '0' with '1718'
c Var 'aux361' order represents '1' with '1719'
-1718 1719 0
c Var 'aux361' direct represents '1' with '1720'
1718 -1719 1720 0
-1720 1719 0
-1720 -1718 0
c Var 'aux361' direct represents '2' with '-1719'
1718 1720 -1719 0
c Encoding variable: aux362 with domain: int(0..2) (representing constraint (lijk_00002_00003_00002 + aux360))
c Both direct and order encoding.
c Var 'aux362' order represents '0' with '1721'
c Var 'aux362' direct represents '0' with '1721'
c Var 'aux362' order represents '1' with '1722'
-1721 1722 0
c Var 'aux362' direct represents '1' with '1723'
1721 -1722 1723 0
-1723 1722 0
-1723 -1721 0
c Var 'aux362' direct represents '2' with '-1722'
1721 1723 -1722 0
c Encoding variable: aux363 with domain: int(0..2) (representing constraint (lijk_00002_00003_00001 + rijk_00002_00003_00002))
c Both direct and order encoding.
c Var 'aux363' order represents '0' with '1724'
c Var 'aux363' direct represents '0' with '1724'
c Var 'aux363' order represents '1' with '1725'
-1724 1725 0
c Var 'aux363' direct represents '1' with '1726'
1724 -1725 1726 0
-1726 1725 0
-1726 -1724 0
c Var 'aux363' direct represents '2' with '-1725'
1724 1726 -1725 0
c Encoding variable: aux364 with domain: int(0..3) (representing constraint (dijk_00002_00003_00001 + aux363))
c Both direct and order encoding.
c Var 'aux364' order represents '0' with '1727'
c Var 'aux364' direct represents '0' with '1727'
c Var 'aux364' order represents '1' with '1728'
-1727 1728 0
c Var 'aux364' direct represents '1' with '1729'
1727 -1728 1729 0
-1729 1728 0
-1729 -1727 0
c Var 'aux364' order represents '2' with '1730'
-1728 1730 0
c Var 'aux364' direct represents '2' with '1731'
1728 -1730 1731 0
-1731 1730 0
-1731 -1728 0
c Var 'aux364' direct represents '3' with '-1730'
1727 1729 1731 -1730 0
c Encoding variable: aux365 with domain: int(0..4) (representing constraint (aux362 + aux361))
c Both direct and order encoding.
c Var 'aux365' order represents '0' with '1732'
c Var 'aux365' direct represents '0' with '1732'
c Var 'aux365' order represents '1' with '1733'
-1732 1733 0
c Var 'aux365' direct represents '1' with '1734'
1732 -1733 1734 0
-1734 1733 0
-1734 -1732 0
c Var 'aux365' order represents '2' with '1735'
-1733 1735 0
c Var 'aux365' direct represents '2' with '1736'
1733 -1735 1736 0
-1736 1735 0
-1736 -1733 0
c Var 'aux365' order represents '3' with '1737'
-1735 1737 0
c Var 'aux365' direct represents '3' with '1738'
1735 -1737 1738 0
-1738 1737 0
-1738 -1735 0
c Var 'aux365' direct represents '4' with '-1737'
1732 1734 1736 1738 -1737 0
c Encoding variable: aux366 with domain: bool (representing constraint (shift(1, -1) + uijk_00003_00003_00002))
c Var 'aux366' direct represents '0' with '-1739'
c Var 'aux366' direct represents '1' with '1739'
c Var 'aux366' order represents '1' with '1'
c Var 'aux366' order represents '0' with '-1739'
c Encoding variable: aux367 with domain: int(0..2) (representing constraint (rijk_00003_00003_00002 + aux366))
c Both direct and order encoding.
c Var 'aux367' order represents '0' with '1740'
c Var 'aux367' direct represents '0' with '1740'
c Var 'aux367' order represents '1' with '1741'
-1740 1741 0
c Var 'aux367' direct represents '1' with '1742'
1740 -1741 1742 0
-1742 1741 0
-1742 -1740 0
c Var 'aux367' direct represents '2' with '-1741'
1740 1742 -1741 0
c Encoding variable: aux368 with domain: int(0..2) (representing constraint (dijk_00003_00003_00002 + rijk_00003_00003_00001))
c Both direct and order encoding.
c Var 'aux368' order represents '0' with '1743'
c Var 'aux368' direct represents '0' with '1743'
c Var 'aux368' order represents '1' with '1744'
-1743 1744 0
c Var 'aux368' direct represents '1' with '1745'
1743 -1744 1745 0
-1745 1744 0
-1745 -1743 0
c Var 'aux368' direct represents '2' with '-1744'
1743 1745 -1744 0
c Encoding variable: aux369 with domain: int(0..2) (representing constraint (dijk_00003_00003_00001 + lijk_00003_00003_00001))
c Both direct and order encoding.
c Var 'aux369' order represents '0' with '1746'
c Var 'aux369' direct represents '0' with '1746'
c Var 'aux369' order represents '1' with '1747'
-1746 1747 0
c Var 'aux369' direct represents '1' with '1748'
1746 -1747 1748 0
-1748 1747 0
-1748 -1746 0
c Var 'aux369' direct represents '2' with '-1747'
1746 1748 -1747 0
c Encoding variable: aux370 with domain: int(0..2) (representing constraint (lijk_00003_00003_00002 + uijk_00003_00003_00001))
c Both direct and order encoding.
c Var 'aux370' order represents '0' with '1749'
c Var 'aux370' direct represents '0' with '1749'
c Var 'aux370' order represents '1' with '1750'
-1749 1750 0
c Var 'aux370' direct represents '1' with '1751'
1749 -1750 1751 0
-1751 1750 0
-1751 -1749 0
c Var 'aux370' direct represents '2' with '-1750'
1749 1751 -1750 0
c Encoding variable: aux371 with domain: int(0..4) (representing constraint (aux368 + aux370))
c Both direct and order encoding.
c Var 'aux371' order represents '0' with '1752'
c Var 'aux371' direct represents '0' with '1752'
c Var 'aux371' order represents '1' with '1753'
-1752 1753 0
c Var 'aux371' direct represents '1' with '1754'
1752 -1753 1754 0
-1754 1753 0
-1754 -1752 0
c Var 'aux371' order represents '2' with '1755'
-1753 1755 0
c Var 'aux371' direct represents '2' with '1756'
1753 -1755 1756 0
-1756 1755 0
-1756 -1753 0
c Var 'aux371' order represents '3' with '1757'
-1755 1757 0
c Var 'aux371' direct represents '3' with '1758'
1755 -1757 1758 0
-1758 1757 0
-1758 -1755 0
c Var 'aux371' direct represents '4' with '-1757'
1752 1754 1756 1758 -1757 0
c Encoding variable: aux372 with domain: int(0..4) (representing constraint (aux367 + aux369))
c Both direct and order encoding.
c Var 'aux372' order represents '0' with '1759'
c Var 'aux372' direct represents '0' with '1759'
c Var 'aux372' order represents '1' with '1760'
-1759 1760 0
c Var 'aux372' direct represents '1' with '1761'
1759 -1760 1761 0
-1761 1760 0
-1761 -1759 0
c Var 'aux372' order represents '2' with '1762'
-1760 1762 0
c Var 'aux372' direct represents '2' with '1763'
1760 -1762 1763 0
-1763 1762 0
-1763 -1760 0
c Var 'aux372' order represents '3' with '1764'
-1762 1764 0
c Var 'aux372' direct represents '3' with '1765'
1762 -1764 1765 0
-1765 1764 0
-1765 -1762 0
c Var 'aux372' direct represents '4' with '-1764'
1759 1761 1763 1765 -1764 0
c Encoding variable: aux373 with domain: bool (representing constraint (shift(1, -1) + uijk_00004_00003_00001))
c Var 'aux373' direct represents '0' with '-1766'
c Var 'aux373' direct represents '1' with '1766'
c Var 'aux373' order represents '1' with '1'
c Var 'aux373' order represents '0' with '-1766'
c Encoding variable: aux374 with domain: int(0..2) (representing constraint (dijk_00004_00003_00002 + aux373))
c Both direct and order encoding.
c Var 'aux374' order represents '0' with '1767'
c Var 'aux374' direct represents '0' with '1767'
c Var 'aux374' order represents '1' with '1768'
-1767 1768 0
c Var 'aux374' direct represents '1' with '1769'
1767 -1768 1769 0
-1769 1768 0
-1769 -1767 0
c Var 'aux374' direct represents '2' with '-1768'
1767 1769 -1768 0
c Encoding variable: aux375 with domain: int(0..2) (representing constraint (uijk_00004_00003_00002 + rijk_00004_00003_00002))
c Both direct and order encoding.
c Var 'aux375' order represents '0' with '1770'
c Var 'aux375' direct represents '0' with '1770'
c Var 'aux375' order represents '1' with '1771'
-1770 1771 0
c Var 'aux375' direct represents '1' with '1772'
1770 -1771 1772 0
-1772 1771 0
-1772 -1770 0
c Var 'aux375' direct represents '2' with '-1771'
1770 1772 -1771 0
c Encoding variable: aux376 with domain: int(0..2) (representing constraint (rijk_00004_00003_00001 + lijk_00004_00003_00001))
c Both direct and order encoding.
c Var 'aux376' order represents '0' with '1773'
c Var 'aux376' direct represents '0' with '1773'
c Var 'aux376' order represents '1' with '1774'
-1773 1774 0
c Var 'aux376' direct represents '1' with '1775'
1773 -1774 1775 0
-1775 1774 0
-1775 -1773 0
c Var 'aux376' direct represents '2' with '-1774'
1773 1775 -1774 0
c Encoding variable: aux377 with domain: int(0..2) (representing constraint (lijk_00004_00003_00002 + dijk_00004_00003_00001))
c Both direct and order encoding.
c Var 'aux377' order represents '0' with '1776'
c Var 'aux377' direct represents '0' with '1776'
c Var 'aux377' order represents '1' with '1777'
-1776 1777 0
c Var 'aux377' direct represents '1' with '1778'
1776 -1777 1778 0
-1778 1777 0
-1778 -1776 0
c Var 'aux377' direct represents '2' with '-1777'
1776 1778 -1777 0
c Encoding variable: aux378 with domain: int(0..4) (representing constraint (aux375 + aux377))
c Both direct and order encoding.
c Var 'aux378' order represents '0' with '1779'
c Var 'aux378' direct represents '0' with '1779'
c Var 'aux378' order represents '1' with '1780'
-1779 1780 0
c Var 'aux378' direct represents '1' with '1781'
1779 -1780 1781 0
-1781 1780 0
-1781 -1779 0
c Var 'aux378' order represents '2' with '1782'
-1780 1782 0
c Var 'aux378' direct represents '2' with '1783'
1780 -1782 1783 0
-1783 1782 0
-1783 -1780 0
c Var 'aux378' order represents '3' with '1784'
-1782 1784 0
c Var 'aux378' direct represents '3' with '1785'
1782 -1784 1785 0
-1785 1784 0
-1785 -1782 0
c Var 'aux378' direct represents '4' with '-1784'
1779 1781 1783 1785 -1784 0
c Encoding variable: aux379 with domain: int(0..4) (representing constraint (aux374 + aux376))
c Both direct and order encoding.
c Var 'aux379' order represents '0' with '1786'
c Var 'aux379' direct represents '0' with '1786'
c Var 'aux379' order represents '1' with '1787'
-1786 1787 0
c Var 'aux379' direct represents '1' with '1788'
1786 -1787 1788 0
-1788 1787 0
-1788 -1786 0
c Var 'aux379' order represents '2' with '1789'
-1787 1789 0
c Var 'aux379' direct represents '2' with '1790'
1787 -1789 1790 0
-1790 1789 0
-1790 -1787 0
c Var 'aux379' order represents '3' with '1791'
-1789 1791 0
c Var 'aux379' direct represents '3' with '1792'
1789 -1791 1792 0
-1792 1791 0
-1792 -1789 0
c Var 'aux379' direct represents '4' with '-1791'
1786 1788 1790 1792 -1791 0
c Encoding variable: aux380 with domain: int(0) (representing constraint (dijk_00005_00003_00002 + shift(1, -1)))
c Var 'aux380' direct represents '0' with '1793'
1793 0
c Encoding variable: aux381 with domain: bool (representing constraint (aux380 + dijk_00005_00003_00001))
c Var 'aux381' direct represents '0' with '-1794'
c Var 'aux381' direct represents '1' with '1794'
c Var 'aux381' order represents '1' with '1'
c Var 'aux381' order represents '0' with '-1794'
c Encoding variable: aux382 with domain: int(0..2) (representing constraint (lijk_00005_00003_00001 + aux381))
c Both direct and order encoding.
c Var 'aux382' order represents '0' with '1795'
c Var 'aux382' direct represents '0' with '1795'
c Var 'aux382' order represents '1' with '1796'
-1795 1796 0
c Var 'aux382' direct represents '1' with '1797'
1795 -1796 1797 0
-1797 1796 0
-1797 -1795 0
c Var 'aux382' direct represents '2' with '-1796'
1795 1797 -1796 0
c Encoding variable: aux383 with domain: int(0..2) (representing constraint (rijk_00005_00003_00002 + uijk_00005_00003_00001))
c Both direct and order encoding.
c Var 'aux383' order represents '0' with '1798'
c Var 'aux383' direct represents '0' with '1798'
c Var 'aux383' order represents '1' with '1799'
-1798 1799 0
c Var 'aux383' direct represents '1' with '1800'
1798 -1799 1800 0
-1800 1799 0
-1800 -1798 0
c Var 'aux383' direct represents '2' with '-1799'
1798 1800 -1799 0
c Encoding variable: aux384 with domain: int(0..2) (representing constraint (uijk_00005_00003_00002 + lijk_00005_00003_00002))
c Both direct and order encoding.
c Var 'aux384' order represents '0' with '1801'
c Var 'aux384' direct represents '0' with '1801'
c Var 'aux384' order represents '1' with '1802'
-1801 1802 0
c Var 'aux384' direct represents '1' with '1803'
1801 -1802 1803 0
-1803 1802 0
-1803 -1801 0
c Var 'aux384' direct represents '2' with '-1802'
1801 1803 -1802 0
c Encoding variable: aux385 with domain: int(0..3) (representing constraint (rijk_00005_00003_00001 + aux384))
c Both direct and order encoding.
c Var 'aux385' order represents '0' with '1804'
c Var 'aux385' direct represents '0' with '1804'
c Var 'aux385' order represents '1' with '1805'
-1804 1805 0
c Var 'aux385' direct represents '1' with '1806'
1804 -1805 1806 0
-1806 1805 0
-1806 -1804 0
c Var 'aux385' order represents '2' with '1807'
-1805 1807 0
c Var 'aux385' direct represents '2' with '1808'
1805 -1807 1808 0
-1808 1807 0
-1808 -1805 0
c Var 'aux385' direct represents '3' with '-1807'
1804 1806 1808 -1807 0
c Encoding variable: aux386 with domain: int(0..4) (representing constraint (aux382 + aux383))
c Both direct and order encoding.
c Var 'aux386' order represents '0' with '1809'
c Var 'aux386' direct represents '0' with '1809'
c Var 'aux386' order represents '1' with '1810'
-1809 1810 0
c Var 'aux386' direct represents '1' with '1811'
1809 -1810 1811 0
-1811 1810 0
-1811 -1809 0
c Var 'aux386' order represents '2' with '1812'
-1810 1812 0
c Var 'aux386' direct represents '2' with '1813'
1810 -1812 1813 0
-1813 1812 0
-1813 -1810 0
c Var 'aux386' order represents '3' with '1814'
-1812 1814 0
c Var 'aux386' direct represents '3' with '1815'
1812 -1814 1815 0
-1815 1814 0
-1815 -1812 0
c Var 'aux386' direct represents '4' with '-1814'
1809 1811 1813 1815 -1814 0
c Encoding variable: aux387 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00003_00001))
c Var 'aux387' direct represents '0' with '1816'
1816 0
c Encoding variable: aux388 with domain: int(0) (representing constraint (dijk_00006_00003_00002 + aux387))
c Var 'aux388' direct represents '0' with '1817'
1817 0
c Encoding variable: aux389 with domain: bool (representing constraint (aux388 + rijk_00006_00003_00001))
c Var 'aux389' direct represents '0' with '-1818'
c Var 'aux389' direct represents '1' with '1818'
c Var 'aux389' order represents '1' with '1'
c Var 'aux389' order represents '0' with '-1818'
c Encoding variable: aux390 with domain: int(0..2) (representing constraint (uijk_00006_00003_00001 + aux389))
c Both direct and order encoding.
c Var 'aux390' order represents '0' with '1819'
c Var 'aux390' direct represents '0' with '1819'
c Var 'aux390' order represents '1' with '1820'
-1819 1820 0
c Var 'aux390' direct represents '1' with '1821'
1819 -1820 1821 0
-1821 1820 0
-1821 -1819 0
c Var 'aux390' direct represents '2' with '-1820'
1819 1821 -1820 0
c Encoding variable: aux391 with domain: int(0..2) (representing constraint (uijk_00006_00003_00002 + lijk_00006_00003_00002))
c Both direct and order encoding.
c Var 'aux391' order represents '0' with '1822'
c Var 'aux391' direct represents '0' with '1822'
c Var 'aux391' order represents '1' with '1823'
-1822 1823 0
c Var 'aux391' direct represents '1' with '1824'
1822 -1823 1824 0
-1824 1823 0
-1824 -1822 0
c Var 'aux391' direct represents '2' with '-1823'
1822 1824 -1823 0
c Encoding variable: aux392 with domain: int(0..2) (representing constraint (rijk_00006_00003_00002 + lijk_00006_00003_00001))
c Both direct and order encoding.
c Var 'aux392' order represents '0' with '1825'
c Var 'aux392' direct represents '0' with '1825'
c Var 'aux392' order represents '1' with '1826'
-1825 1826 0
c Var 'aux392' direct represents '1' with '1827'
1825 -1826 1827 0
-1827 1826 0
-1827 -1825 0
c Var 'aux392' direct represents '2' with '-1826'
1825 1827 -1826 0
c Encoding variable: aux393 with domain: int(0..4) (representing constraint (aux390 + aux392))
c Both direct and order encoding.
c Var 'aux393' order represents '0' with '1828'
c Var 'aux393' direct represents '0' with '1828'
c Var 'aux393' order represents '1' with '1829'
-1828 1829 0
c Var 'aux393' direct represents '1' with '1830'
1828 -1829 1830 0
-1830 1829 0
-1830 -1828 0
c Var 'aux393' order represents '2' with '1831'
-1829 1831 0
c Var 'aux393' direct represents '2' with '1832'
1829 -1831 1832 0
-1832 1831 0
-1832 -1829 0
c Var 'aux393' order represents '3' with '1833'
-1831 1833 0
c Var 'aux393' direct represents '3' with '1834'
1831 -1833 1834 0
-1834 1833 0
-1834 -1831 0
c Var 'aux393' direct represents '4' with '-1833'
1828 1830 1832 1834 -1833 0
c Encoding variable: aux394 with domain: int(0) (representing constraint (uijk_00001_00004_00001 + shift(1, -1)))
c Var 'aux394' direct represents '0' with '1835'
1835 0
c Encoding variable: aux395 with domain: int(0) (representing constraint (uijk_00001_00004_00002 + aux394))
c Var 'aux395' direct represents '0' with '1836'
1836 0
c Encoding variable: aux396 with domain: bool (representing constraint (aux395 + lijk_00001_00004_00002))
c Var 'aux396' direct represents '0' with '-1837'
c Var 'aux396' direct represents '1' with '1837'
c Var 'aux396' order represents '1' with '1'
c Var 'aux396' order represents '0' with '-1837'
c Encoding variable: aux397 with domain: int(0..2) (representing constraint (lijk_00001_00004_00001 + aux396))
c Both direct and order encoding.
c Var 'aux397' order represents '0' with '1838'
c Var 'aux397' direct represents '0' with '1838'
c Var 'aux397' order represents '1' with '1839'
-1838 1839 0
c Var 'aux397' direct represents '1' with '1840'
1838 -1839 1840 0
-1840 1839 0
-1840 -1838 0
c Var 'aux397' direct represents '2' with '-1839'
1838 1840 -1839 0
c Encoding variable: aux398 with domain: int(0..2) (representing constraint (dijk_00001_00004_00002 + rijk_00001_00004_00002))
c Both direct and order encoding.
c Var 'aux398' order represents '0' with '1841'
c Var 'aux398' direct represents '0' with '1841'
c Var 'aux398' order represents '1' with '1842'
-1841 1842 0
c Var 'aux398' direct represents '1' with '1843'
1841 -1842 1843 0
-1843 1842 0
-1843 -1841 0
c Var 'aux398' direct represents '2' with '-1842'
1841 1843 -1842 0
c Encoding variable: aux399 with domain: int(0..2) (representing constraint (dijk_00001_00004_00001 + rijk_00001_00004_00001))
c Both direct and order encoding.
c Var 'aux399' order represents '0' with '1844'
c Var 'aux399' direct represents '0' with '1844'
c Var 'aux399' order represents '1' with '1845'
-1844 1845 0
c Var 'aux399' direct represents '1' with '1846'
1844 -1845 1846 0
-1846 1845 0
-1846 -1844 0
c Var 'aux399' direct represents '2' with '-1845'
1844 1846 -1845 0
c Encoding variable: aux400 with domain: int(0..4) (representing constraint (aux397 + aux399))
c Both direct and order encoding.
c Var 'aux400' order represents '0' with '1847'
c Var 'aux400' direct represents '0' with '1847'
c Var 'aux400' order represents '1' with '1848'
-1847 1848 0
c Var 'aux400' direct represents '1' with '1849'
1847 -1848 1849 0
-1849 1848 0
-1849 -1847 0
c Var 'aux400' order represents '2' with '1850'
-1848 1850 0
c Var 'aux400' direct represents '2' with '1851'
1848 -1850 1851 0
-1851 1850 0
-1851 -1848 0
c Var 'aux400' order represents '3' with '1852'
-1850 1852 0
c Var 'aux400' direct represents '3' with '1853'
1850 -1852 1853 0
-1853 1852 0
-1853 -1850 0
c Var 'aux400' direct represents '4' with '-1852'
1847 1849 1851 1853 -1852 0
c Encoding variable: aux401 with domain: int(0) (representing constraint (uijk_00002_00004_00002 + shift(1, -1)))
c Var 'aux401' direct represents '0' with '1854'
1854 0
c Encoding variable: aux402 with domain: bool (representing constraint (aux401 + dijk_00002_00004_00001))
c Var 'aux402' direct represents '0' with '-1855'
c Var 'aux402' direct represents '1' with '1855'
c Var 'aux402' order represents '1' with '1'
c Var 'aux402' order represents '0' with '-1855'
c Encoding variable: aux403 with domain: int(0..2) (representing constraint (lijk_00002_00004_00002 + aux402))
c Both direct and order encoding.
c Var 'aux403' order represents '0' with '1856'
c Var 'aux403' direct represents '0' with '1856'
c Var 'aux403' order represents '1' with '1857'
-1856 1857 0
c Var 'aux403' direct represents '1' with '1858'
1856 -1857 1858 0
-1858 1857 0
-1858 -1856 0
c Var 'aux403' direct represents '2' with '-1857'
1856 1858 -1857 0
c Encoding variable: aux404 with domain: int(0..2) (representing constraint (lijk_00002_00004_00001 + rijk_00002_00004_00001))
c Both direct and order encoding.
c Var 'aux404' order represents '0' with '1859'
c Var 'aux404' direct represents '0' with '1859'
c Var 'aux404' order represents '1' with '1860'
-1859 1860 0
c Var 'aux404' direct represents '1' with '1861'
1859 -1860 1861 0
-1861 1860 0
-1861 -1859 0
c Var 'aux404' direct represents '2' with '-1860'
1859 1861 -1860 0
c Encoding variable: aux405 with domain: int(0..2) (representing constraint (uijk_00002_00004_00001 + dijk_00002_00004_00002))
c Both direct and order encoding.
c Var 'aux405' order represents '0' with '1862'
c Var 'aux405' direct represents '0' with '1862'
c Var 'aux405' order represents '1' with '1863'
-1862 1863 0
c Var 'aux405' direct represents '1' with '1864'
1862 -1863 1864 0
-1864 1863 0
-1864 -1862 0
c Var 'aux405' direct represents '2' with '-1863'
1862 1864 -1863 0
c Encoding variable: aux406 with domain: int(0..3) (representing constraint (rijk_00002_00004_00002 + aux405))
c Both direct and order encoding.
c Var 'aux406' order represents '0' with '1865'
c Var 'aux406' direct represents '0' with '1865'
c Var 'aux406' order represents '1' with '1866'
-1865 1866 0
c Var 'aux406' direct represents '1' with '1867'
1865 -1866 1867 0
-1867 1866 0
-1867 -1865 0
c Var 'aux406' order represents '2' with '1868'
-1866 1868 0
c Var 'aux406' direct represents '2' with '1869'
1866 -1868 1869 0
-1869 1868 0
-1869 -1866 0
c Var 'aux406' direct represents '3' with '-1868'
1865 1867 1869 -1868 0
c Encoding variable: aux407 with domain: int(0..4) (representing constraint (aux403 + aux404))
c Both direct and order encoding.
c Var 'aux407' order represents '0' with '1870'
c Var 'aux407' direct represents '0' with '1870'
c Var 'aux407' order represents '1' with '1871'
-1870 1871 0
c Var 'aux407' direct represents '1' with '1872'
1870 -1871 1872 0
-1872 1871 0
-1872 -1870 0
c Var 'aux407' order represents '2' with '1873'
-1871 1873 0
c Var 'aux407' direct represents '2' with '1874'
1871 -1873 1874 0
-1874 1873 0
-1874 -1871 0
c Var 'aux407' order represents '3' with '1875'
-1873 1875 0
c Var 'aux407' direct represents '3' with '1876'
1873 -1875 1876 0
-1876 1875 0
-1876 -1873 0
c Var 'aux407' direct represents '4' with '-1875'
1870 1872 1874 1876 -1875 0
c Encoding variable: aux408 with domain: bool (representing constraint (shift(1, -1) + rijk_00003_00004_00002))
c Var 'aux408' direct represents '0' with '-1877'
c Var 'aux408' direct represents '1' with '1877'
c Var 'aux408' order represents '1' with '1'
c Var 'aux408' order represents '0' with '-1877'
c Encoding variable: aux409 with domain: int(0..2) (representing constraint (rijk_00003_00004_00001 + aux408))
c Both direct and order encoding.
c Var 'aux409' order represents '0' with '1878'
c Var 'aux409' direct represents '0' with '1878'
c Var 'aux409' order represents '1' with '1879'
-1878 1879 0
c Var 'aux409' direct represents '1' with '1880'
1878 -1879 1880 0
-1880 1879 0
-1880 -1878 0
c Var 'aux409' direct represents '2' with '-1879'
1878 1880 -1879 0
c Encoding variable: aux410 with domain: int(0..2) (representing constraint (uijk_00003_00004_00001 + dijk_00003_00004_00002))
c Both direct and order encoding.
c Var 'aux410' order represents '0' with '1881'
c Var 'aux410' direct represents '0' with '1881'
c Var 'aux410' order represents '1' with '1882'
-1881 1882 0
c Var 'aux410' direct represents '1' with '1883'
1881 -1882 1883 0
-1883 1882 0
-1883 -1881 0
c Var 'aux410' direct represents '2' with '-1882'
1881 1883 -1882 0
c Encoding variable: aux411 with domain: int(0..2) (representing constraint (lijk_00003_00004_00002 + uijk_00003_00004_00002))
c Both direct and order encoding.
c Var 'aux411' order represents '0' with '1884'
c Var 'aux411' direct represents '0' with '1884'
c Var 'aux411' order represents '1' with '1885'
-1884 1885 0
c Var 'aux411' direct represents '1' with '1886'
1884 -1885 1886 0
-1886 1885 0
-1886 -1884 0
c Var 'aux411' direct represents '2' with '-1885'
1884 1886 -1885 0
c Encoding variable: aux412 with domain: int(0..2) (representing constraint (lijk_00003_00004_00001 + dijk_00003_00004_00001))
c Both direct and order encoding.
c Var 'aux412' order represents '0' with '1887'
c Var 'aux412' direct represents '0' with '1887'
c Var 'aux412' order represents '1' with '1888'
-1887 1888 0
c Var 'aux412' direct represents '1' with '1889'
1887 -1888 1889 0
-1889 1888 0
-1889 -1887 0
c Var 'aux412' direct represents '2' with '-1888'
1887 1889 -1888 0
c Encoding variable: aux413 with domain: int(0..4) (representing constraint (aux410 + aux412))
c Both direct and order encoding.
c Var 'aux413' order represents '0' with '1890'
c Var 'aux413' direct represents '0' with '1890'
c Var 'aux413' order represents '1' with '1891'
-1890 1891 0
c Var 'aux413' direct represents '1' with '1892'
1890 -1891 1892 0
-1892 1891 0
-1892 -1890 0
c Var 'aux413' order represents '2' with '1893'
-1891 1893 0
c Var 'aux413' direct represents '2' with '1894'
1891 -1893 1894 0
-1894 1893 0
-1894 -1891 0
c Var 'aux413' order represents '3' with '1895'
-1893 1895 0
c Var 'aux413' direct represents '3' with '1896'
1893 -1895 1896 0
-1896 1895 0
-1896 -1893 0
c Var 'aux413' direct represents '4' with '-1895'
1890 1892 1894 1896 -1895 0
c Encoding variable: aux414 with domain: int(0..4) (representing constraint (aux409 + aux411))
c Both direct and order encoding.
c Var 'aux414' order represents '0' with '1897'
c Var 'aux414' direct represents '0' with '1897'
c Var 'aux414' order represents '1' with '1898'
-1897 1898 0
c Var 'aux414' direct represents '1' with '1899'
1897 -1898 1899 0
-1899 1898 0
-1899 -1897 0
c Var 'aux414' order represents '2' with '1900'
-1898 1900 0
c Var 'aux414' direct represents '2' with '1901'
1898 -1900 1901 0
-1901 1900 0
-1901 -1898 0
c Var 'aux414' order represents '3' with '1902'
-1900 1902 0
c Var 'aux414' direct represents '3' with '1903'
1900 -1902 1903 0
-1903 1902 0
-1903 -1900 0
c Var 'aux414' direct represents '4' with '-1902'
1897 1899 1901 1903 -1902 0
c Encoding variable: aux415 with domain: bool (representing constraint (shift(1, -1) + uijk_00004_00004_00001))
c Var 'aux415' direct represents '0' with '-1904'
c Var 'aux415' direct represents '1' with '1904'
c Var 'aux415' order represents '1' with '1'
c Var 'aux415' order represents '0' with '-1904'
c Encoding variable: aux416 with domain: int(0..2) (representing constraint (rijk_00004_00004_00002 + aux415))
c Both direct and order encoding.
c Var 'aux416' order represents '0' with '1905'
c Var 'aux416' direct represents '0' with '1905'
c Var 'aux416' order represents '1' with '1906'
-1905 1906 0
c Var 'aux416' direct represents '1' with '1907'
1905 -1906 1907 0
-1907 1906 0
-1907 -1905 0
c Var 'aux416' direct represents '2' with '-1906'
1905 1907 -1906 0
c Encoding variable: aux417 with domain: int(0..2) (representing constraint (dijk_00004_00004_00002 + rijk_00004_00004_00001))
c Both direct and order encoding.
c Var 'aux417' order represents '0' with '1908'
c Var 'aux417' direct represents '0' with '1908'
c Var 'aux417' order represents '1' with '1909'
-1908 1909 0
c Var 'aux417' direct represents '1' with '1910'
1908 -1909 1910 0
-1910 1909 0
-1910 -1908 0
c Var 'aux417' direct represents '2' with '-1909'
1908 1910 -1909 0
c Encoding variable: aux418 with domain: int(0..2) (representing constraint (lijk_00004_00004_00002 + uijk_00004_00004_00002))
c Both direct and order encoding.
c Var 'aux418' order represents '0' with '1911'
c Var 'aux418' direct represents '0' with '1911'
c Var 'aux418' order represents '1' with '1912'
-1911 1912 0
c Var 'aux418' direct represents '1' with '1913'
1911 -1912 1913 0
-1913 1912 0
-1913 -1911 0
c Var 'aux418' direct represents '2' with '-1912'
1911 1913 -1912 0
c Encoding variable: aux419 with domain: int(0..2) (representing constraint (lijk_00004_00004_00001 + dijk_00004_00004_00001))
c Both direct and order encoding.
c Var 'aux419' order represents '0' with '1914'
c Var 'aux419' direct represents '0' with '1914'
c Var 'aux419' order represents '1' with '1915'
-1914 1915 0
c Var 'aux419' direct represents '1' with '1916'
1914 -1915 1916 0
-1916 1915 0
-1916 -1914 0
c Var 'aux419' direct represents '2' with '-1915'
1914 1916 -1915 0
c Encoding variable: aux420 with domain: int(0..4) (representing constraint (aux417 + aux419))
c Both direct and order encoding.
c Var 'aux420' order represents '0' with '1917'
c Var 'aux420' direct represents '0' with '1917'
c Var 'aux420' order represents '1' with '1918'
-1917 1918 0
c Var 'aux420' direct represents '1' with '1919'
1917 -1918 1919 0
-1919 1918 0
-1919 -1917 0
c Var 'aux420' order represents '2' with '1920'
-1918 1920 0
c Var 'aux420' direct represents '2' with '1921'
1918 -1920 1921 0
-1921 1920 0
-1921 -1918 0
c Var 'aux420' order represents '3' with '1922'
-1920 1922 0
c Var 'aux420' direct represents '3' with '1923'
1920 -1922 1923 0
-1923 1922 0
-1923 -1920 0
c Var 'aux420' direct represents '4' with '-1922'
1917 1919 1921 1923 -1922 0
c Encoding variable: aux421 with domain: int(0..4) (representing constraint (aux416 + aux418))
c Both direct and order encoding.
c Var 'aux421' order represents '0' with '1924'
c Var 'aux421' direct represents '0' with '1924'
c Var 'aux421' order represents '1' with '1925'
-1924 1925 0
c Var 'aux421' direct represents '1' with '1926'
1924 -1925 1926 0
-1926 1925 0
-1926 -1924 0
c Var 'aux421' order represents '2' with '1927'
-1925 1927 0
c Var 'aux421' direct represents '2' with '1928'
1925 -1927 1928 0
-1928 1927 0
-1928 -1925 0
c Var 'aux421' order represents '3' with '1929'
-1927 1929 0
c Var 'aux421' direct represents '3' with '1930'
1927 -1929 1930 0
-1930 1929 0
-1930 -1927 0
c Var 'aux421' direct represents '4' with '-1929'
1924 1926 1928 1930 -1929 0
c Encoding variable: aux422 with domain: int(0) (representing constraint (dijk_00005_00004_00002 + shift(1, -1)))
c Var 'aux422' direct represents '0' with '1931'
1931 0
c Encoding variable: aux423 with domain: bool (representing constraint (aux422 + uijk_00005_00004_00001))
c Var 'aux423' direct represents '0' with '-1932'
c Var 'aux423' direct represents '1' with '1932'
c Var 'aux423' order represents '1' with '1'
c Var 'aux423' order represents '0' with '-1932'
c Encoding variable: aux424 with domain: int(0..2) (representing constraint (rijk_00005_00004_00001 + rijk_00005_00004_00002))
c Both direct and order encoding.
c Var 'aux424' order represents '0' with '1933'
c Var 'aux424' direct represents '0' with '1933'
c Var 'aux424' order represents '1' with '1934'
-1933 1934 0
c Var 'aux424' direct represents '1' with '1935'
1933 -1934 1935 0
-1935 1934 0
-1935 -1933 0
c Var 'aux424' direct represents '2' with '-1934'
1933 1935 -1934 0
c Encoding variable: aux425 with domain: int(0..2) (representing constraint (lijk_00005_00004_00002 + aux423))
c Both direct and order encoding.
c Var 'aux425' order represents '0' with '1936'
c Var 'aux425' direct represents '0' with '1936'
c Var 'aux425' order represents '1' with '1937'
-1936 1937 0
c Var 'aux425' direct represents '1' with '1938'
1936 -1937 1938 0
-1938 1937 0
-1938 -1936 0
c Var 'aux425' direct represents '2' with '-1937'
1936 1938 -1937 0
c Encoding variable: aux426 with domain: int(0..2) (representing constraint (lijk_00005_00004_00001 + dijk_00005_00004_00001))
c Both direct and order encoding.
c Var 'aux426' order represents '0' with '1939'
c Var 'aux426' direct represents '0' with '1939'
c Var 'aux426' order represents '1' with '1940'
-1939 1940 0
c Var 'aux426' direct represents '1' with '1941'
1939 -1940 1941 0
-1941 1940 0
-1941 -1939 0
c Var 'aux426' direct represents '2' with '-1940'
1939 1941 -1940 0
c Encoding variable: aux427 with domain: int(0..3) (representing constraint (uijk_00005_00004_00002 + aux426))
c Both direct and order encoding.
c Var 'aux427' order represents '0' with '1942'
c Var 'aux427' direct represents '0' with '1942'
c Var 'aux427' order represents '1' with '1943'
-1942 1943 0
c Var 'aux427' direct represents '1' with '1944'
1942 -1943 1944 0
-1944 1943 0
-1944 -1942 0
c Var 'aux427' order represents '2' with '1945'
-1943 1945 0
c Var 'aux427' direct represents '2' with '1946'
1943 -1945 1946 0
-1946 1945 0
-1946 -1943 0
c Var 'aux427' direct represents '3' with '-1945'
1942 1944 1946 -1945 0
c Encoding variable: aux428 with domain: int(0..4) (representing constraint (aux425 + aux424))
c Both direct and order encoding.
c Var 'aux428' order represents '0' with '1947'
c Var 'aux428' direct represents '0' with '1947'
c Var 'aux428' order represents '1' with '1948'
-1947 1948 0
c Var 'aux428' direct represents '1' with '1949'
1947 -1948 1949 0
-1949 1948 0
-1949 -1947 0
c Var 'aux428' order represents '2' with '1950'
-1948 1950 0
c Var 'aux428' direct represents '2' with '1951'
1948 -1950 1951 0
-1951 1950 0
-1951 -1948 0
c Var 'aux428' order represents '3' with '1952'
-1950 1952 0
c Var 'aux428' direct represents '3' with '1953'
1950 -1952 1953 0
-1953 1952 0
-1953 -1950 0
c Var 'aux428' direct represents '4' with '-1952'
1947 1949 1951 1953 -1952 0
c Encoding variable: aux429 with domain: int(0) (representing constraint (dijk_00006_00004_00001 + dijk_00006_00004_00002))
c Var 'aux429' direct represents '0' with '1954'
1954 0
c Encoding variable: aux430 with domain: int(0) (representing constraint (shift(1, -1) + aux429))
c Var 'aux430' direct represents '0' with '1955'
1955 0
c Encoding variable: aux431 with domain: bool (representing constraint (aux430 + uijk_00006_00004_00002))
c Var 'aux431' direct represents '0' with '-1956'
c Var 'aux431' direct represents '1' with '1956'
c Var 'aux431' order represents '1' with '1'
c Var 'aux431' order represents '0' with '-1956'
c Encoding variable: aux432 with domain: int(0..2) (representing constraint (lijk_00006_00004_00002 + aux431))
c Both direct and order encoding.
c Var 'aux432' order represents '0' with '1957'
c Var 'aux432' direct represents '0' with '1957'
c Var 'aux432' order represents '1' with '1958'
-1957 1958 0
c Var 'aux432' direct represents '1' with '1959'
1957 -1958 1959 0
-1959 1958 0
-1959 -1957 0
c Var 'aux432' direct represents '2' with '-1958'
1957 1959 -1958 0
c Encoding variable: aux433 with domain: int(0..2) (representing constraint (lijk_00006_00004_00001 + rijk_00006_00004_00001))
c Both direct and order encoding.
c Var 'aux433' order represents '0' with '1960'
c Var 'aux433' direct represents '0' with '1960'
c Var 'aux433' order represents '1' with '1961'
-1960 1961 0
c Var 'aux433' direct represents '1' with '1962'
1960 -1961 1962 0
-1962 1961 0
-1962 -1960 0
c Var 'aux433' direct represents '2' with '-1961'
1960 1962 -1961 0
c Encoding variable: aux434 with domain: int(0..2) (representing constraint (rijk_00006_00004_00002 + uijk_00006_00004_00001))
c Both direct and order encoding.
c Var 'aux434' order represents '0' with '1963'
c Var 'aux434' direct represents '0' with '1963'
c Var 'aux434' order represents '1' with '1964'
-1963 1964 0
c Var 'aux434' direct represents '1' with '1965'
1963 -1964 1965 0
-1965 1964 0
-1965 -1963 0
c Var 'aux434' direct represents '2' with '-1964'
1963 1965 -1964 0
c Encoding variable: aux435 with domain: int(0..4) (representing constraint (aux432 + aux434))
c Both direct and order encoding.
c Var 'aux435' order represents '0' with '1966'
c Var 'aux435' direct represents '0' with '1966'
c Var 'aux435' order represents '1' with '1967'
-1966 1967 0
c Var 'aux435' direct represents '1' with '1968'
1966 -1967 1968 0
-1968 1967 0
-1968 -1966 0
c Var 'aux435' order represents '2' with '1969'
-1967 1969 0
c Var 'aux435' direct represents '2' with '1970'
1967 -1969 1970 0
-1970 1969 0
-1970 -1967 0
c Var 'aux435' order represents '3' with '1971'
-1969 1971 0
c Var 'aux435' direct represents '3' with '1972'
1969 -1971 1972 0
-1972 1971 0
-1972 -1969 0
c Var 'aux435' direct represents '4' with '-1971'
1966 1968 1970 1972 -1971 0
c Encoding variable: aux436 with domain: int(0) (representing constraint (rijk_00001_00005_00002 + shift(1, -1)))
c Var 'aux436' direct represents '0' with '1973'
1973 0
c Encoding variable: aux437 with domain: int(0) (representing constraint (uijk_00001_00005_00001 + aux436))
c Var 'aux437' direct represents '0' with '1974'
1974 0
c Encoding variable: aux438 with domain: int(0) (representing constraint (uijk_00001_00005_00002 + aux437))
c Var 'aux438' direct represents '0' with '1975'
1975 0
c Encoding variable: aux439 with domain: bool (representing constraint (aux438 + dijk_00001_00005_00002))
c Var 'aux439' direct represents '0' with '-1976'
c Var 'aux439' direct represents '1' with '1976'
c Var 'aux439' order represents '1' with '1'
c Var 'aux439' order represents '0' with '-1976'
c Encoding variable: aux440 with domain: int(0..2) (representing constraint (lijk_00001_00005_00001 + aux439))
c Both direct and order encoding.
c Var 'aux440' order represents '0' with '1977'
c Var 'aux440' direct represents '0' with '1977'
c Var 'aux440' order represents '1' with '1978'
-1977 1978 0
c Var 'aux440' direct represents '1' with '1979'
1977 -1978 1979 0
-1979 1978 0
-1979 -1977 0
c Var 'aux440' direct represents '2' with '-1978'
1977 1979 -1978 0
c Encoding variable: aux441 with domain: int(0..2) (representing constraint (lijk_00001_00005_00002 + rijk_00001_00005_00001))
c Both direct and order encoding.
c Var 'aux441' order represents '0' with '1980'
c Var 'aux441' direct represents '0' with '1980'
c Var 'aux441' order represents '1' with '1981'
-1980 1981 0
c Var 'aux441' direct represents '1' with '1982'
1980 -1981 1982 0
-1982 1981 0
-1982 -1980 0
c Var 'aux441' direct represents '2' with '-1981'
1980 1982 -1981 0
c Encoding variable: aux442 with domain: int(0..3) (representing constraint (dijk_00001_00005_00001 + aux441))
c Both direct and order encoding.
c Var 'aux442' order represents '0' with '1983'
c Var 'aux442' direct represents '0' with '1983'
c Var 'aux442' order represents '1' with '1984'
-1983 1984 0
c Var 'aux442' direct represents '1' with '1985'
1983 -1984 1985 0
-1985 1984 0
-1985 -1983 0
c Var 'aux442' order represents '2' with '1986'
-1984 1986 0
c Var 'aux442' direct represents '2' with '1987'
1984 -1986 1987 0
-1987 1986 0
-1987 -1984 0
c Var 'aux442' direct represents '3' with '-1986'
1983 1985 1987 -1986 0
c Encoding variable: aux443 with domain: int(0) (representing constraint (rijk_00002_00005_00002 + shift(1, -1)))
c Var 'aux443' direct represents '0' with '1988'
1988 0
c Encoding variable: aux444 with domain: int(0) (representing constraint (uijk_00002_00005_00002 + aux443))
c Var 'aux444' direct represents '0' with '1989'
1989 0
c Encoding variable: aux445 with domain: bool (representing constraint (aux444 + lijk_00002_00005_00002))
c Var 'aux445' direct represents '0' with '-1990'
c Var 'aux445' direct represents '1' with '1990'
c Var 'aux445' order represents '1' with '1'
c Var 'aux445' order represents '0' with '-1990'
c Encoding variable: aux446 with domain: int(0..2) (representing constraint (dijk_00002_00005_00001 + aux445))
c Both direct and order encoding.
c Var 'aux446' order represents '0' with '1991'
c Var 'aux446' direct represents '0' with '1991'
c Var 'aux446' order represents '1' with '1992'
-1991 1992 0
c Var 'aux446' direct represents '1' with '1993'
1991 -1992 1993 0
-1993 1992 0
-1993 -1991 0
c Var 'aux446' direct represents '2' with '-1992'
1991 1993 -1992 0
c Encoding variable: aux447 with domain: int(0..2) (representing constraint (dijk_00002_00005_00002 + rijk_00002_00005_00001))
c Both direct and order encoding.
c Var 'aux447' order represents '0' with '1994'
c Var 'aux447' direct represents '0' with '1994'
c Var 'aux447' order represents '1' with '1995'
-1994 1995 0
c Var 'aux447' direct represents '1' with '1996'
1994 -1995 1996 0
-1996 1995 0
-1996 -1994 0
c Var 'aux447' direct represents '2' with '-1995'
1994 1996 -1995 0
c Encoding variable: aux448 with domain: int(0..2) (representing constraint (uijk_00002_00005_00001 + lijk_00002_00005_00001))
c Both direct and order encoding.
c Var 'aux448' order represents '0' with '1997'
c Var 'aux448' direct represents '0' with '1997'
c Var 'aux448' order represents '1' with '1998'
-1997 1998 0
c Var 'aux448' direct represents '1' with '1999'
1997 -1998 1999 0
-1999 1998 0
-1999 -1997 0
c Var 'aux448' direct represents '2' with '-1998'
1997 1999 -1998 0
c Encoding variable: aux449 with domain: int(0..4) (representing constraint (aux446 + aux448))
c Both direct and order encoding.
c Var 'aux449' order represents '0' with '2000'
c Var 'aux449' direct represents '0' with '2000'
c Var 'aux449' order represents '1' with '2001'
-2000 2001 0
c Var 'aux449' direct represents '1' with '2002'
2000 -2001 2002 0
-2002 2001 0
-2002 -2000 0
c Var 'aux449' order represents '2' with '2003'
-2001 2003 0
c Var 'aux449' direct represents '2' with '2004'
2001 -2003 2004 0
-2004 2003 0
-2004 -2001 0
c Var 'aux449' order represents '3' with '2005'
-2003 2005 0
c Var 'aux449' direct represents '3' with '2006'
2003 -2005 2006 0
-2006 2005 0
-2006 -2003 0
c Var 'aux449' direct represents '4' with '-2005'
2000 2002 2004 2006 -2005 0
c Encoding variable: aux450 with domain: int(0) (representing constraint (shift(1, -1) + rijk_00003_00005_00002))
c Var 'aux450' direct represents '0' with '2007'
2007 0
c Encoding variable: aux451 with domain: bool (representing constraint (aux450 + dijk_00003_00005_00001))
c Var 'aux451' direct represents '0' with '-2008'
c Var 'aux451' direct represents '1' with '2008'
c Var 'aux451' order represents '1' with '1'
c Var 'aux451' order represents '0' with '-2008'
c Encoding variable: aux452 with domain: int(0..2) (representing constraint (lijk_00003_00005_00002 + aux451))
c Both direct and order encoding.
c Var 'aux452' order represents '0' with '2009'
c Var 'aux452' direct represents '0' with '2009'
c Var 'aux452' order represents '1' with '2010'
-2009 2010 0
c Var 'aux452' direct represents '1' with '2011'
2009 -2010 2011 0
-2011 2010 0
-2011 -2009 0
c Var 'aux452' direct represents '2' with '-2010'
2009 2011 -2010 0
c Encoding variable: aux453 with domain: int(0..2) (representing constraint (lijk_00003_00005_00001 + rijk_00003_00005_00001))
c Both direct and order encoding.
c Var 'aux453' order represents '0' with '2012'
c Var 'aux453' direct represents '0' with '2012'
c Var 'aux453' order represents '1' with '2013'
-2012 2013 0
c Var 'aux453' direct represents '1' with '2014'
2012 -2013 2014 0
-2014 2013 0
-2014 -2012 0
c Var 'aux453' direct represents '2' with '-2013'
2012 2014 -2013 0
c Encoding variable: aux454 with domain: int(0..2) (representing constraint (dijk_00003_00005_00002 + uijk_00003_00005_00001))
c Both direct and order encoding.
c Var 'aux454' order represents '0' with '2015'
c Var 'aux454' direct represents '0' with '2015'
c Var 'aux454' order represents '1' with '2016'
-2015 2016 0
c Var 'aux454' direct represents '1' with '2017'
2015 -2016 2017 0
-2017 2016 0
-2017 -2015 0
c Var 'aux454' direct represents '2' with '-2016'
2015 2017 -2016 0
c Encoding variable: aux455 with domain: int(0..3) (representing constraint (uijk_00003_00005_00002 + aux454))
c Both direct and order encoding.
c Var 'aux455' order represents '0' with '2018'
c Var 'aux455' direct represents '0' with '2018'
c Var 'aux455' order represents '1' with '2019'
-2018 2019 0
c Var 'aux455' direct represents '1' with '2020'
2018 -2019 2020 0
-2020 2019 0
-2020 -2018 0
c Var 'aux455' order represents '2' with '2021'
-2019 2021 0
c Var 'aux455' direct represents '2' with '2022'
2019 -2021 2022 0
-2022 2021 0
-2022 -2019 0
c Var 'aux455' direct represents '3' with '-2021'
2018 2020 2022 -2021 0
c Encoding variable: aux456 with domain: int(0..4) (representing constraint (aux452 + aux453))
c Both direct and order encoding.
c Var 'aux456' order represents '0' with '2023'
c Var 'aux456' direct represents '0' with '2023'
c Var 'aux456' order represents '1' with '2024'
-2023 2024 0
c Var 'aux456' direct represents '1' with '2025'
2023 -2024 2025 0
-2025 2024 0
-2025 -2023 0
c Var 'aux456' order represents '2' with '2026'
-2024 2026 0
c Var 'aux456' direct represents '2' with '2027'
2024 -2026 2027 0
-2027 2026 0
-2027 -2024 0
c Var 'aux456' order represents '3' with '2028'
-2026 2028 0
c Var 'aux456' direct represents '3' with '2029'
2026 -2028 2029 0
-2029 2028 0
-2029 -2026 0
c Var 'aux456' direct represents '4' with '-2028'
2023 2025 2027 2029 -2028 0
c Encoding variable: aux457 with domain: int(0) (representing constraint (shift(1, -1) + rijk_00004_00005_00002))
c Var 'aux457' direct represents '0' with '2030'
2030 0
c Encoding variable: aux458 with domain: bool (representing constraint (aux457 + dijk_00004_00005_00001))
c Var 'aux458' direct represents '0' with '-2031'
c Var 'aux458' direct represents '1' with '2031'
c Var 'aux458' order represents '1' with '1'
c Var 'aux458' order represents '0' with '-2031'
c Encoding variable: aux459 with domain: int(0..2) (representing constraint (rijk_00004_00005_00001 + dijk_00004_00005_00002))
c Both direct and order encoding.
c Var 'aux459' order represents '0' with '2032'
c Var 'aux459' direct represents '0' with '2032'
c Var 'aux459' order represents '1' with '2033'
-2032 2033 0
c Var 'aux459' direct represents '1' with '2034'
2032 -2033 2034 0
-2034 2033 0
-2034 -2032 0
c Var 'aux459' direct represents '2' with '-2033'
2032 2034 -2033 0
c Encoding variable: aux460 with domain: int(0..2) (representing constraint (lijk_00004_00005_00002 + aux458))
c Both direct and order encoding.
c Var 'aux460' order represents '0' with '2035'
c Var 'aux460' direct represents '0' with '2035'
c Var 'aux460' order represents '1' with '2036'
-2035 2036 0
c Var 'aux460' direct represents '1' with '2037'
2035 -2036 2037 0
-2037 2036 0
-2037 -2035 0
c Var 'aux460' direct represents '2' with '-2036'
2035 2037 -2036 0
c Encoding variable: aux461 with domain: int(0..2) (representing constraint (lijk_00004_00005_00001 + uijk_00004_00005_00002))
c Both direct and order encoding.
c Var 'aux461' order represents '0' with '2038'
c Var 'aux461' direct represents '0' with '2038'
c Var 'aux461' order represents '1' with '2039'
-2038 2039 0
c Var 'aux461' direct represents '1' with '2040'
2038 -2039 2040 0
-2040 2039 0
-2040 -2038 0
c Var 'aux461' direct represents '2' with '-2039'
2038 2040 -2039 0
c Encoding variable: aux462 with domain: int(0..3) (representing constraint (uijk_00004_00005_00001 + aux461))
c Both direct and order encoding.
c Var 'aux462' order represents '0' with '2041'
c Var 'aux462' direct represents '0' with '2041'
c Var 'aux462' order represents '1' with '2042'
-2041 2042 0
c Var 'aux462' direct represents '1' with '2043'
2041 -2042 2043 0
-2043 2042 0
-2043 -2041 0
c Var 'aux462' order represents '2' with '2044'
-2042 2044 0
c Var 'aux462' direct represents '2' with '2045'
2042 -2044 2045 0
-2045 2044 0
-2045 -2042 0
c Var 'aux462' direct represents '3' with '-2044'
2041 2043 2045 -2044 0
c Encoding variable: aux463 with domain: int(0..4) (representing constraint (aux460 + aux459))
c Both direct and order encoding.
c Var 'aux463' order represents '0' with '2046'
c Var 'aux463' direct represents '0' with '2046'
c Var 'aux463' order represents '1' with '2047'
-2046 2047 0
c Var 'aux463' direct represents '1' with '2048'
2046 -2047 2048 0
-2048 2047 0
-2048 -2046 0
c Var 'aux463' order represents '2' with '2049'
-2047 2049 0
c Var 'aux463' direct represents '2' with '2050'
2047 -2049 2050 0
-2050 2049 0
-2050 -2047 0
c Var 'aux463' order represents '3' with '2051'
-2049 2051 0
c Var 'aux463' direct represents '3' with '2052'
2049 -2051 2052 0
-2052 2051 0
-2052 -2049 0
c Var 'aux463' direct represents '4' with '-2051'
2046 2048 2050 2052 -2051 0
c Encoding variable: aux464 with domain: int(0) (representing constraint (dijk_00005_00005_00002 + rijk_00005_00005_00002))
c Var 'aux464' direct represents '0' with '2053'
2053 0
c Encoding variable: aux465 with domain: int(0) (representing constraint (shift(1, -1) + aux464))
c Var 'aux465' direct represents '0' with '2054'
2054 0
c Encoding variable: aux466 with domain: bool (representing constraint (aux465 + lijk_00005_00005_00002))
c Var 'aux466' direct represents '0' with '-2055'
c Var 'aux466' direct represents '1' with '2055'
c Var 'aux466' order represents '1' with '1'
c Var 'aux466' order represents '0' with '-2055'
c Encoding variable: aux467 with domain: int(0..2) (representing constraint (lijk_00005_00005_00001 + aux466))
c Both direct and order encoding.
c Var 'aux467' order represents '0' with '2056'
c Var 'aux467' direct represents '0' with '2056'
c Var 'aux467' order represents '1' with '2057'
-2056 2057 0
c Var 'aux467' direct represents '1' with '2058'
2056 -2057 2058 0
-2058 2057 0
-2058 -2056 0
c Var 'aux467' direct represents '2' with '-2057'
2056 2058 -2057 0
c Encoding variable: aux468 with domain: int(0..2) (representing constraint (uijk_00005_00005_00002 + dijk_00005_00005_00001))
c Both direct and order encoding.
c Var 'aux468' order represents '0' with '2059'
c Var 'aux468' direct represents '0' with '2059'
c Var 'aux468' order represents '1' with '2060'
-2059 2060 0
c Var 'aux468' direct represents '1' with '2061'
2059 -2060 2061 0
-2061 2060 0
-2061 -2059 0
c Var 'aux468' direct represents '2' with '-2060'
2059 2061 -2060 0
c Encoding variable: aux469 with domain: int(0..2) (representing constraint (uijk_00005_00005_00001 + rijk_00005_00005_00001))
c Both direct and order encoding.
c Var 'aux469' order represents '0' with '2062'
c Var 'aux469' direct represents '0' with '2062'
c Var 'aux469' order represents '1' with '2063'
-2062 2063 0
c Var 'aux469' direct represents '1' with '2064'
2062 -2063 2064 0
-2064 2063 0
-2064 -2062 0
c Var 'aux469' direct represents '2' with '-2063'
2062 2064 -2063 0
c Encoding variable: aux470 with domain: int(0..4) (representing constraint (aux467 + aux469))
c Both direct and order encoding.
c Var 'aux470' order represents '0' with '2065'
c Var 'aux470' direct represents '0' with '2065'
c Var 'aux470' order represents '1' with '2066'
-2065 2066 0
c Var 'aux470' direct represents '1' with '2067'
2065 -2066 2067 0
-2067 2066 0
-2067 -2065 0
c Var 'aux470' order represents '2' with '2068'
-2066 2068 0
c Var 'aux470' direct represents '2' with '2069'
2066 -2068 2069 0
-2069 2068 0
-2069 -2066 0
c Var 'aux470' order represents '3' with '2070'
-2068 2070 0
c Var 'aux470' direct represents '3' with '2071'
2068 -2070 2071 0
-2071 2070 0
-2071 -2068 0
c Var 'aux470' direct represents '4' with '-2070'
2065 2067 2069 2071 -2070 0
c Encoding variable: aux471 with domain: int(0) (representing constraint (dijk_00006_00005_00001 + dijk_00006_00005_00002))
c Var 'aux471' direct represents '0' with '2072'
2072 0
c Encoding variable: aux472 with domain: int(0) (representing constraint (rijk_00006_00005_00002 + aux471))
c Var 'aux472' direct represents '0' with '2073'
2073 0
c Encoding variable: aux473 with domain: int(0) (representing constraint (shift(1, -1) + aux472))
c Var 'aux473' direct represents '0' with '2074'
2074 0
c Encoding variable: aux474 with domain: bool (representing constraint (aux473 + uijk_00006_00005_00002))
c Var 'aux474' direct represents '0' with '-2075'
c Var 'aux474' direct represents '1' with '2075'
c Var 'aux474' order represents '1' with '1'
c Var 'aux474' order represents '0' with '-2075'
c Encoding variable: aux475 with domain: int(0..2) (representing constraint (rijk_00006_00005_00001 + aux474))
c Both direct and order encoding.
c Var 'aux475' order represents '0' with '2076'
c Var 'aux475' direct represents '0' with '2076'
c Var 'aux475' order represents '1' with '2077'
-2076 2077 0
c Var 'aux475' direct represents '1' with '2078'
2076 -2077 2078 0
-2078 2077 0
-2078 -2076 0
c Var 'aux475' direct represents '2' with '-2077'
2076 2078 -2077 0
c Encoding variable: aux476 with domain: int(0..2) (representing constraint (uijk_00006_00005_00001 + lijk_00006_00005_00002))
c Both direct and order encoding.
c Var 'aux476' order represents '0' with '2079'
c Var 'aux476' direct represents '0' with '2079'
c Var 'aux476' order represents '1' with '2080'
-2079 2080 0
c Var 'aux476' direct represents '1' with '2081'
2079 -2080 2081 0
-2081 2080 0
-2081 -2079 0
c Var 'aux476' direct represents '2' with '-2080'
2079 2081 -2080 0
c Encoding variable: aux477 with domain: int(0..3) (representing constraint (lijk_00006_00005_00001 + aux476))
c Both direct and order encoding.
c Var 'aux477' order represents '0' with '2082'
c Var 'aux477' direct represents '0' with '2082'
c Var 'aux477' order represents '1' with '2083'
-2082 2083 0
c Var 'aux477' direct represents '1' with '2084'
2082 -2083 2084 0
-2084 2083 0
-2084 -2082 0
c Var 'aux477' order represents '2' with '2085'
-2083 2085 0
c Var 'aux477' direct represents '2' with '2086'
2083 -2085 2086 0
-2086 2085 0
-2086 -2083 0
c Var 'aux477' direct represents '3' with '-2085'
2082 2084 2086 -2085 0
c Encoding variable: aux478 with domain: int(0) (representing constraint (rijk_00001_00006_00001 + rijk_00001_00006_00002))
c Var 'aux478' direct represents '0' with '2087'
2087 0
c Encoding variable: aux479 with domain: int(0) (representing constraint (uijk_00001_00006_00002 + aux478))
c Var 'aux479' direct represents '0' with '2088'
2088 0
c Encoding variable: aux480 with domain: int(0) (representing constraint (shift(1, -1) + aux479))
c Var 'aux480' direct represents '0' with '2089'
2089 0
c Encoding variable: aux481 with domain: int(0) (representing constraint (uijk_00001_00006_00001 + aux480))
c Var 'aux481' direct represents '0' with '2090'
2090 0
c Encoding variable: aux482 with domain: bool (representing constraint (aux481 + lijk_00001_00006_00002))
c Var 'aux482' direct represents '0' with '-2091'
c Var 'aux482' direct represents '1' with '2091'
c Var 'aux482' order represents '1' with '1'
c Var 'aux482' order represents '0' with '-2091'
c Encoding variable: aux483 with domain: int(0..2) (representing constraint (lijk_00001_00006_00001 + aux482))
c Both direct and order encoding.
c Var 'aux483' order represents '0' with '2092'
c Var 'aux483' direct represents '0' with '2092'
c Var 'aux483' order represents '1' with '2093'
-2092 2093 0
c Var 'aux483' direct represents '1' with '2094'
2092 -2093 2094 0
-2094 2093 0
-2094 -2092 0
c Var 'aux483' direct represents '2' with '-2093'
2092 2094 -2093 0
c Encoding variable: aux484 with domain: int(0..2) (representing constraint (dijk_00001_00006_00002 + dijk_00001_00006_00001))
c Both direct and order encoding.
c Var 'aux484' order represents '0' with '2095'
c Var 'aux484' direct represents '0' with '2095'
c Var 'aux484' order represents '1' with '2096'
-2095 2096 0
c Var 'aux484' direct represents '1' with '2097'
2095 -2096 2097 0
-2097 2096 0
-2097 -2095 0
c Var 'aux484' direct represents '2' with '-2096'
2095 2097 -2096 0
c Encoding variable: aux485 with domain: int(0) (representing constraint (rijk_00002_00006_00001 + rijk_00002_00006_00002))
c Var 'aux485' direct represents '0' with '2098'
2098 0
c Encoding variable: aux486 with domain: int(0) (representing constraint (uijk_00002_00006_00002 + aux485))
c Var 'aux486' direct represents '0' with '2099'
2099 0
c Encoding variable: aux487 with domain: int(0) (representing constraint (shift(1, -1) + aux486))
c Var 'aux487' direct represents '0' with '2100'
2100 0
c Encoding variable: aux488 with domain: bool (representing constraint (aux487 + lijk_00002_00006_00001))
c Var 'aux488' direct represents '0' with '-2101'
c Var 'aux488' direct represents '1' with '2101'
c Var 'aux488' order represents '1' with '1'
c Var 'aux488' order represents '0' with '-2101'
c Encoding variable: aux489 with domain: int(0..2) (representing constraint (dijk_00002_00006_00001 + aux488))
c Both direct and order encoding.
c Var 'aux489' order represents '0' with '2102'
c Var 'aux489' direct represents '0' with '2102'
c Var 'aux489' order represents '1' with '2103'
-2102 2103 0
c Var 'aux489' direct represents '1' with '2104'
2102 -2103 2104 0
-2104 2103 0
-2104 -2102 0
c Var 'aux489' direct represents '2' with '-2103'
2102 2104 -2103 0
c Encoding variable: aux490 with domain: int(0..2) (representing constraint (dijk_00002_00006_00002 + lijk_00002_00006_00002))
c Both direct and order encoding.
c Var 'aux490' order represents '0' with '2105'
c Var 'aux490' direct represents '0' with '2105'
c Var 'aux490' order represents '1' with '2106'
-2105 2106 0
c Var 'aux490' direct represents '1' with '2107'
2105 -2106 2107 0
-2107 2106 0
-2107 -2105 0
c Var 'aux490' direct represents '2' with '-2106'
2105 2107 -2106 0
c Encoding variable: aux491 with domain: int(0..3) (representing constraint (uijk_00002_00006_00001 + aux490))
c Both direct and order encoding.
c Var 'aux491' order represents '0' with '2108'
c Var 'aux491' direct represents '0' with '2108'
c Var 'aux491' order represents '1' with '2109'
-2108 2109 0
c Var 'aux491' direct represents '1' with '2110'
2108 -2109 2110 0
-2110 2109 0
-2110 -2108 0
c Var 'aux491' order represents '2' with '2111'
-2109 2111 0
c Var 'aux491' direct represents '2' with '2112'
2109 -2111 2112 0
-2112 2111 0
-2112 -2109 0
c Var 'aux491' direct represents '3' with '-2111'
2108 2110 2112 -2111 0
c Encoding variable: aux492 with domain: int(0) (representing constraint (rijk_00003_00006_00001 + rijk_00003_00006_00002))
c Var 'aux492' direct represents '0' with '2113'
2113 0
c Encoding variable: aux493 with domain: int(0) (representing constraint (shift(1, -1) + aux492))
c Var 'aux493' direct represents '0' with '2114'
2114 0
c Encoding variable: aux494 with domain: bool (representing constraint (aux493 + dijk_00003_00006_00001))
c Var 'aux494' direct represents '0' with '-2115'
c Var 'aux494' direct represents '1' with '2115'
c Var 'aux494' order represents '1' with '1'
c Var 'aux494' order represents '0' with '-2115'
c Encoding variable: aux495 with domain: int(0..2) (representing constraint (uijk_00003_00006_00001 + aux494))
c Both direct and order encoding.
c Var 'aux495' order represents '0' with '2116'
c Var 'aux495' direct represents '0' with '2116'
c Var 'aux495' order represents '1' with '2117'
-2116 2117 0
c Var 'aux495' direct represents '1' with '2118'
2116 -2117 2118 0
-2118 2117 0
-2118 -2116 0
c Var 'aux495' direct represents '2' with '-2117'
2116 2118 -2117 0
c Encoding variable: aux496 with domain: int(0..2) (representing constraint (uijk_00003_00006_00002 + lijk_00003_00006_00002))
c Both direct and order encoding.
c Var 'aux496' order represents '0' with '2119'
c Var 'aux496' direct represents '0' with '2119'
c Var 'aux496' order represents '1' with '2120'
-2119 2120 0
c Var 'aux496' direct represents '1' with '2121'
2119 -2120 2121 0
-2121 2120 0
-2121 -2119 0
c Var 'aux496' direct represents '2' with '-2120'
2119 2121 -2120 0
c Encoding variable: aux497 with domain: int(0..2) (representing constraint (dijk_00003_00006_00002 + lijk_00003_00006_00001))
c Both direct and order encoding.
c Var 'aux497' order represents '0' with '2122'
c Var 'aux497' direct represents '0' with '2122'
c Var 'aux497' order represents '1' with '2123'
-2122 2123 0
c Var 'aux497' direct represents '1' with '2124'
2122 -2123 2124 0
-2124 2123 0
-2124 -2122 0
c Var 'aux497' direct represents '2' with '-2123'
2122 2124 -2123 0
c Encoding variable: aux498 with domain: int(0..4) (representing constraint (aux495 + aux497))
c Both direct and order encoding.
c Var 'aux498' order represents '0' with '2125'
c Var 'aux498' direct represents '0' with '2125'
c Var 'aux498' order represents '1' with '2126'
-2125 2126 0
c Var 'aux498' direct represents '1' with '2127'
2125 -2126 2127 0
-2127 2126 0
-2127 -2125 0
c Var 'aux498' order represents '2' with '2128'
-2126 2128 0
c Var 'aux498' direct represents '2' with '2129'
2126 -2128 2129 0
-2129 2128 0
-2129 -2126 0
c Var 'aux498' order represents '3' with '2130'
-2128 2130 0
c Var 'aux498' direct represents '3' with '2131'
2128 -2130 2131 0
-2131 2130 0
-2131 -2128 0
c Var 'aux498' direct represents '4' with '-2130'
2125 2127 2129 2131 -2130 0
c Encoding variable: aux499 with domain: int(0) (representing constraint (rijk_00004_00006_00001 + rijk_00004_00006_00002))
c Var 'aux499' direct represents '0' with '2132'
2132 0
c Encoding variable: aux500 with domain: int(0) (representing constraint (shift(1, -1) + aux499))
c Var 'aux500' direct represents '0' with '2133'
2133 0
c Encoding variable: aux501 with domain: bool (representing constraint (aux500 + uijk_00004_00006_00001))
c Var 'aux501' direct represents '0' with '-2134'
c Var 'aux501' direct represents '1' with '2134'
c Var 'aux501' order represents '1' with '1'
c Var 'aux501' order represents '0' with '-2134'
c Encoding variable: aux502 with domain: int(0..2) (representing constraint (dijk_00004_00006_00002 + aux501))
c Both direct and order encoding.
c Var 'aux502' order represents '0' with '2135'
c Var 'aux502' direct represents '0' with '2135'
c Var 'aux502' order represents '1' with '2136'
-2135 2136 0
c Var 'aux502' direct represents '1' with '2137'
2135 -2136 2137 0
-2137 2136 0
-2137 -2135 0
c Var 'aux502' direct represents '2' with '-2136'
2135 2137 -2136 0
c Encoding variable: aux503 with domain: int(0..2) (representing constraint (dijk_00004_00006_00001 + lijk_00004_00006_00002))
c Both direct and order encoding.
c Var 'aux503' order represents '0' with '2138'
c Var 'aux503' direct represents '0' with '2138'
c Var 'aux503' order represents '1' with '2139'
-2138 2139 0
c Var 'aux503' direct represents '1' with '2140'
2138 -2139 2140 0
-2140 2139 0
-2140 -2138 0
c Var 'aux503' direct represents '2' with '-2139'
2138 2140 -2139 0
c Encoding variable: aux504 with domain: int(0..2) (representing constraint (uijk_00004_00006_00002 + lijk_00004_00006_00001))
c Both direct and order encoding.
c Var 'aux504' order represents '0' with '2141'
c Var 'aux504' direct represents '0' with '2141'
c Var 'aux504' order represents '1' with '2142'
-2141 2142 0
c Var 'aux504' direct represents '1' with '2143'
2141 -2142 2143 0
-2143 2142 0
-2143 -2141 0
c Var 'aux504' direct represents '2' with '-2142'
2141 2143 -2142 0
c Encoding variable: aux505 with domain: int(0..4) (representing constraint (aux502 + aux504))
c Both direct and order encoding.
c Var 'aux505' order represents '0' with '2144'
c Var 'aux505' direct represents '0' with '2144'
c Var 'aux505' order represents '1' with '2145'
-2144 2145 0
c Var 'aux505' direct represents '1' with '2146'
2144 -2145 2146 0
-2146 2145 0
-2146 -2144 0
c Var 'aux505' order represents '2' with '2147'
-2145 2147 0
c Var 'aux505' direct represents '2' with '2148'
2145 -2147 2148 0
-2148 2147 0
-2148 -2145 0
c Var 'aux505' order represents '3' with '2149'
-2147 2149 0
c Var 'aux505' direct represents '3' with '2150'
2147 -2149 2150 0
-2150 2149 0
-2150 -2147 0
c Var 'aux505' direct represents '4' with '-2149'
2144 2146 2148 2150 -2149 0
c Encoding variable: aux506 with domain: int(0) (representing constraint (rijk_00005_00006_00001 + rijk_00005_00006_00002))
c Var 'aux506' direct represents '0' with '2151'
2151 0
c Encoding variable: aux507 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00005_00006_00002))
c Var 'aux507' direct represents '0' with '2152'
2152 0
c Encoding variable: aux508 with domain: int(0) (representing constraint (aux506 + aux507))
c Var 'aux508' direct represents '0' with '2153'
2153 0
c Encoding variable: aux509 with domain: bool (representing constraint (aux508 + uijk_00005_00006_00002))
c Var 'aux509' direct represents '0' with '-2154'
c Var 'aux509' direct represents '1' with '2154'
c Var 'aux509' order represents '1' with '1'
c Var 'aux509' order represents '0' with '-2154'
c Encoding variable: aux510 with domain: int(0..2) (representing constraint (lijk_00005_00006_00001 + aux509))
c Both direct and order encoding.
c Var 'aux510' order represents '0' with '2155'
c Var 'aux510' direct represents '0' with '2155'
c Var 'aux510' order represents '1' with '2156'
-2155 2156 0
c Var 'aux510' direct represents '1' with '2157'
2155 -2156 2157 0
-2157 2156 0
-2157 -2155 0
c Var 'aux510' direct represents '2' with '-2156'
2155 2157 -2156 0
c Encoding variable: aux511 with domain: int(0..2) (representing constraint (uijk_00005_00006_00001 + lijk_00005_00006_00002))
c Both direct and order encoding.
c Var 'aux511' order represents '0' with '2158'
c Var 'aux511' direct represents '0' with '2158'
c Var 'aux511' order represents '1' with '2159'
-2158 2159 0
c Var 'aux511' direct represents '1' with '2160'
2158 -2159 2160 0
-2160 2159 0
-2160 -2158 0
c Var 'aux511' direct represents '2' with '-2159'
2158 2160 -2159 0
c Encoding variable: aux512 with domain: int(0..3) (representing constraint (dijk_00005_00006_00001 + aux511))
c Both direct and order encoding.
c Var 'aux512' order represents '0' with '2161'
c Var 'aux512' direct represents '0' with '2161'
c Var 'aux512' order represents '1' with '2162'
-2161 2162 0
c Var 'aux512' direct represents '1' with '2163'
2161 -2162 2163 0
-2163 2162 0
-2163 -2161 0
c Var 'aux512' order represents '2' with '2164'
-2162 2164 0
c Var 'aux512' direct represents '2' with '2165'
2162 -2164 2165 0
-2165 2164 0
-2165 -2162 0
c Var 'aux512' direct represents '3' with '-2164'
2161 2163 2165 -2164 0
c Encoding variable: aux513 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00006_00001))
c Var 'aux513' direct represents '0' with '2166'
2166 0
c Encoding variable: aux514 with domain: int(0) (representing constraint (rijk_00006_00006_00001 + rijk_00006_00006_00002))
c Var 'aux514' direct represents '0' with '2167'
2167 0
c Encoding variable: aux515 with domain: int(0) (representing constraint (aux513 + aux514))
c Var 'aux515' direct represents '0' with '2168'
2168 0
c Encoding variable: aux516 with domain: int(0) (representing constraint (dijk_00006_00006_00002 + aux515))
c Var 'aux516' direct represents '0' with '2169'
2169 0
c Encoding variable: aux517 with domain: bool (representing constraint (aux516 + lijk_00006_00006_00001))
c Var 'aux517' direct represents '0' with '-2170'
c Var 'aux517' direct represents '1' with '2170'
c Var 'aux517' order represents '1' with '1'
c Var 'aux517' order represents '0' with '-2170'
c Encoding variable: aux518 with domain: int(0..2) (representing constraint (lijk_00006_00006_00002 + aux517))
c Both direct and order encoding.
c Var 'aux518' order represents '0' with '2171'
c Var 'aux518' direct represents '0' with '2171'
c Var 'aux518' order represents '1' with '2172'
-2171 2172 0
c Var 'aux518' direct represents '1' with '2173'
2171 -2172 2173 0
-2173 2172 0
-2173 -2171 0
c Var 'aux518' direct represents '2' with '-2172'
2171 2173 -2172 0
c Encoding variable: aux519 with domain: int(0..2) (representing constraint (uijk_00006_00006_00002 + uijk_00006_00006_00001))
c Both direct and order encoding.
c Var 'aux519' order represents '0' with '2174'
c Var 'aux519' direct represents '0' with '2174'
c Var 'aux519' order represents '1' with '2175'
-2174 2175 0
c Var 'aux519' direct represents '1' with '2176'
2174 -2175 2176 0
-2176 2175 0
-2176 -2174 0
c Var 'aux519' direct represents '2' with '-2175'
2174 2176 -2175 0
c Encoding variable: aux520 with domain: int(0..2) (representing constraint ((agrid_00004_00001=0) + (agrid_00004_00002=0)))
c Both direct and order encoding.
c Var 'aux520' order represents '0' with '2177'
c Var 'aux520' direct represents '0' with '2177'
c Var 'aux520' order represents '1' with '2178'
-2177 2178 0
c Var 'aux520' direct represents '1' with '2179'
2177 -2178 2179 0
-2179 2178 0
-2179 -2177 0
c Var 'aux520' direct represents '2' with '-2178'
2177 2179 -2178 0
c Encoding variable: aux521 with domain: int(0..2) (representing constraint ((agrid_00006_00006=0) + (agrid_00004_00004=0)))
c Both direct and order encoding.
c Var 'aux521' order represents '0' with '2180'
c Var 'aux521' direct represents '0' with '2180'
c Var 'aux521' order represents '1' with '2181'
-2180 2181 0
c Var 'aux521' direct represents '1' with '2182'
2180 -2181 2182 0
-2182 2181 0
-2182 -2180 0
c Var 'aux521' direct represents '2' with '-2181'
2180 2182 -2181 0
c Encoding variable: aux522 with domain: int(0..2) (representing constraint ((agrid_00006_00005=0) + (agrid_00002_00002=0)))
c Both direct and order encoding.
c Var 'aux522' order represents '0' with '2183'
c Var 'aux522' direct represents '0' with '2183'
c Var 'aux522' order represents '1' with '2184'
-2183 2184 0
c Var 'aux522' direct represents '1' with '2185'
2183 -2184 2185 0
-2185 2184 0
-2185 -2183 0
c Var 'aux522' direct represents '2' with '-2184'
2183 2185 -2184 0
c Encoding variable: aux523 with domain: int(0..2) (representing constraint ((agrid_00006_00004=0) + (agrid_00005_00004=0)))
c Both direct and order encoding.
c Var 'aux523' order represents '0' with '2186'
c Var 'aux523' direct represents '0' with '2186'
c Var 'aux523' order represents '1' with '2187'
-2186 2187 0
c Var 'aux523' direct represents '1' with '2188'
2186 -2187 2188 0
-2188 2187 0
-2188 -2186 0
c Var 'aux523' direct represents '2' with '-2187'
2186 2188 -2187 0
c Encoding variable: aux524 with domain: int(0..2) (representing constraint ((agrid_00006_00002=0) + (agrid_00006_00003=0)))
c Both direct and order encoding.
c Var 'aux524' order represents '0' with '2189'
c Var 'aux524' direct represents '0' with '2189'
c Var 'aux524' order represents '1' with '2190'
-2189 2190 0
c Var 'aux524' direct represents '1' with '2191'
2189 -2190 2191 0
-2191 2190 0
-2191 -2189 0
c Var 'aux524' direct represents '2' with '-2190'
2189 2191 -2190 0
c Encoding variable: aux525 with domain: int(0..2) (representing constraint ((agrid_00005_00005=0) + (agrid_00002_00003=0)))
c Both direct and order encoding.
c Var 'aux525' order represents '0' with '2192'
c Var 'aux525' direct represents '0' with '2192'
c Var 'aux525' order represents '1' with '2193'
-2192 2193 0
c Var 'aux525' direct represents '1' with '2194'
2192 -2193 2194 0
-2194 2193 0
-2194 -2192 0
c Var 'aux525' direct represents '2' with '-2193'
2192 2194 -2193 0
c Encoding variable: aux526 with domain: int(0..2) (representing constraint ((agrid_00006_00001=0) + (agrid_00005_00006=0)))
c Both direct and order encoding.
c Var 'aux526' order represents '0' with '2195'
c Var 'aux526' direct represents '0' with '2195'
c Var 'aux526' order represents '1' with '2196'
-2195 2196 0
c Var 'aux526' direct represents '1' with '2197'
2195 -2196 2197 0
-2197 2196 0
-2197 -2195 0
c Var 'aux526' direct represents '2' with '-2196'
2195 2197 -2196 0
c Encoding variable: aux527 with domain: int(0..2) (representing constraint ((agrid_00001_00006=0) + (agrid_00003_00001=0)))
c Both direct and order encoding.
c Var 'aux527' order represents '0' with '2198'
c Var 'aux527' direct represents '0' with '2198'
c Var 'aux527' order represents '1' with '2199'
-2198 2199 0
c Var 'aux527' direct represents '1' with '2200'
2198 -2199 2200 0
-2200 2199 0
-2200 -2198 0
c Var 'aux527' direct represents '2' with '-2199'
2198 2200 -2199 0
c Encoding variable: aux528 with domain: int(0..2) (representing constraint ((agrid_00001_00005=0) + (agrid_00004_00005=0)))
c Both direct and order encoding.
c Var 'aux528' order represents '0' with '2201'
c Var 'aux528' direct represents '0' with '2201'
c Var 'aux528' order represents '1' with '2202'
-2201 2202 0
c Var 'aux528' direct represents '1' with '2203'
2201 -2202 2203 0
-2203 2202 0
-2203 -2201 0
c Var 'aux528' direct represents '2' with '-2202'
2201 2203 -2202 0
c Encoding variable: aux529 with domain: int(0..2) (representing constraint ((agrid_00001_00004=0) + (agrid_00002_00004=0)))
c Both direct and order encoding.
c Var 'aux529' order represents '0' with '2204'
c Var 'aux529' direct represents '0' with '2204'
c Var 'aux529' order represents '1' with '2205'
-2204 2205 0
c Var 'aux529' direct represents '1' with '2206'
2204 -2205 2206 0
-2206 2205 0
-2206 -2204 0
c Var 'aux529' direct represents '2' with '-2205'
2204 2206 -2205 0
c Encoding variable: aux530 with domain: int(0..2) (representing constraint ((agrid_00001_00003=0) + (agrid_00003_00002=0)))
c Both direct and order encoding.
c Var 'aux530' order represents '0' with '2207'
c Var 'aux530' direct represents '0' with '2207'
c Var 'aux530' order represents '1' with '2208'
-2207 2208 0
c Var 'aux530' direct represents '1' with '2209'
2207 -2208 2209 0
-2209 2208 0
-2209 -2207 0
c Var 'aux530' direct represents '2' with '-2208'
2207 2209 -2208 0
c Encoding variable: aux531 with domain: int(0..2) (representing constraint ((agrid_00001_00002=0) + (agrid_00003_00003=0)))
c Both direct and order encoding.
c Var 'aux531' order represents '0' with '2210'
c Var 'aux531' direct represents '0' with '2210'
c Var 'aux531' order represents '1' with '2211'
-2210 2211 0
c Var 'aux531' direct represents '1' with '2212'
2210 -2211 2212 0
-2212 2211 0
-2212 -2210 0
c Var 'aux531' direct represents '2' with '-2211'
2210 2212 -2211 0
c Encoding variable: aux532 with domain: int(0..2) (representing constraint ((agrid_00001_00001=0) + (agrid_00002_00005=0)))
c Both direct and order encoding.
c Var 'aux532' order represents '0' with '2213'
c Var 'aux532' direct represents '0' with '2213'
c Var 'aux532' order represents '1' with '2214'
-2213 2214 0
c Var 'aux532' direct represents '1' with '2215'
2213 -2214 2215 0
-2215 2214 0
-2215 -2213 0
c Var 'aux532' direct represents '2' with '-2214'
2213 2215 -2214 0
c Encoding variable: aux533 with domain: int(0..2) (representing constraint ((agrid_00003_00006=0) + (agrid_00003_00004=0)))
c Both direct and order encoding.
c Var 'aux533' order represents '0' with '2216'
c Var 'aux533' direct represents '0' with '2216'
c Var 'aux533' order represents '1' with '2217'
-2216 2217 0
c Var 'aux533' direct represents '1' with '2218'
2216 -2217 2218 0
-2218 2217 0
-2218 -2216 0
c Var 'aux533' direct represents '2' with '-2217'
2216 2218 -2217 0
c Encoding variable: aux534 with domain: int(0..2) (representing constraint ((agrid_00003_00005=0) + (agrid_00004_00003=0)))
c Both direct and order encoding.
c Var 'aux534' order represents '0' with '2219'
c Var 'aux534' direct represents '0' with '2219'
c Var 'aux534' order represents '1' with '2220'
-2219 2220 0
c Var 'aux534' direct represents '1' with '2221'
2219 -2220 2221 0
-2221 2220 0
-2221 -2219 0
c Var 'aux534' direct represents '2' with '-2220'
2219 2221 -2220 0
c Encoding variable: aux535 with domain: int(0..2) (representing constraint ((agrid_00004_00006=0) + (agrid_00002_00006=0)))
c Both direct and order encoding.
c Var 'aux535' order represents '0' with '2222'
c Var 'aux535' direct represents '0' with '2222'
c Var 'aux535' order represents '1' with '2223'
-2222 2223 0
c Var 'aux535' direct represents '1' with '2224'
2222 -2223 2224 0
-2224 2223 0
-2224 -2222 0
c Var 'aux535' direct represents '2' with '-2223'
2222 2224 -2223 0
c Encoding variable: aux536 with domain: int(0..2) (representing constraint ((agrid_00005_00001=0) + (agrid_00002_00001=0)))
c Both direct and order encoding.
c Var 'aux536' order represents '0' with '2225'
c Var 'aux536' direct represents '0' with '2225'
c Var 'aux536' order represents '1' with '2226'
-2225 2226 0
c Var 'aux536' direct represents '1' with '2227'
2225 -2226 2227 0
-2227 2226 0
-2227 -2225 0
c Var 'aux536' direct represents '2' with '-2226'
2225 2227 -2226 0
c Encoding variable: aux537 with domain: int(0..2) (representing constraint ((agrid_00005_00002=0) + (agrid_00005_00003=0)))
c Both direct and order encoding.
c Var 'aux537' order represents '0' with '2228'
c Var 'aux537' direct represents '0' with '2228'
c Var 'aux537' order represents '1' with '2229'
-2228 2229 0
c Var 'aux537' direct represents '1' with '2230'
2228 -2229 2230 0
-2230 2229 0
-2230 -2228 0
c Var 'aux537' direct represents '2' with '-2229'
2228 2230 -2229 0
c Encoding variable: aux538 with domain: int(0..4) (representing constraint (aux530 + aux537))
c Both direct and order encoding.
c Var 'aux538' order represents '0' with '2231'
c Var 'aux538' direct represents '0' with '2231'
c Var 'aux538' order represents '1' with '2232'
-2231 2232 0
c Var 'aux538' direct represents '1' with '2233'
2231 -2232 2233 0
-2233 2232 0
-2233 -2231 0
c Var 'aux538' order represents '2' with '2234'
-2232 2234 0
c Var 'aux538' direct represents '2' with '2235'
2232 -2234 2235 0
-2235 2234 0
-2235 -2232 0
c Var 'aux538' order represents '3' with '2236'
-2234 2236 0
c Var 'aux538' direct represents '3' with '2237'
2234 -2236 2237 0
-2237 2236 0
-2237 -2234 0
c Var 'aux538' direct represents '4' with '-2236'
2231 2233 2235 2237 -2236 0
c Encoding variable: aux539 with domain: int(0..4) (representing constraint (aux523 + aux525))
c Both direct and order encoding.
c Var 'aux539' order represents '0' with '2238'
c Var 'aux539' direct represents '0' with '2238'
c Var 'aux539' order represents '1' with '2239'
-2238 2239 0
c Var 'aux539' direct represents '1' with '2240'
2238 -2239 2240 0
-2240 2239 0
-2240 -2238 0
c Var 'aux539' order represents '2' with '2241'
-2239 2241 0
c Var 'aux539' direct represents '2' with '2242'
2239 -2241 2242 0
-2242 2241 0
-2242 -2239 0
c Var 'aux539' order represents '3' with '2243'
-2241 2243 0
c Var 'aux539' direct represents '3' with '2244'
2241 -2243 2244 0
-2244 2243 0
-2244 -2241 0
c Var 'aux539' direct represents '4' with '-2243'
2238 2240 2242 2244 -2243 0
c Encoding variable: aux540 with domain: int(0..4) (representing constraint (aux520 + aux521))
c Both direct and order encoding.
c Var 'aux540' order represents '0' with '2245'
c Var 'aux540' direct represents '0' with '2245'
c Var 'aux540' order represents '1' with '2246'
-2245 2246 0
c Var 'aux540' direct represents '1' with '2247'
2245 -2246 2247 0
-2247 2246 0
-2247 -2245 0
c Var 'aux540' order represents '2' with '2248'
-2246 2248 0
c Var 'aux540' direct represents '2' with '2249'
2246 -2248 2249 0
-2249 2248 0
-2249 -2246 0
c Var 'aux540' order represents '3' with '2250'
-2248 2250 0
c Var 'aux540' direct represents '3' with '2251'
2248 -2250 2251 0
-2251 2250 0
-2251 -2248 0
c Var 'aux540' direct represents '4' with '-2250'
2245 2247 2249 2251 -2250 0
c Encoding variable: aux541 with domain: int(0..4) (representing constraint (aux522 + aux524))
c Both direct and order encoding.
c Var 'aux541' order represents '0' with '2252'
c Var 'aux541' direct represents '0' with '2252'
c Var 'aux541' order represents '1' with '2253'
-2252 2253 0
c Var 'aux541' direct represents '1' with '2254'
2252 -2253 2254 0
-2254 2253 0
-2254 -2252 0
c Var 'aux541' order represents '2' with '2255'
-2253 2255 0
c Var 'aux541' direct represents '2' with '2256'
2253 -2255 2256 0
-2256 2255 0
-2256 -2253 0
c Var 'aux541' order represents '3' with '2257'
-2255 2257 0
c Var 'aux541' direct represents '3' with '2258'
2255 -2257 2258 0
-2258 2257 0
-2258 -2255 0
c Var 'aux541' direct represents '4' with '-2257'
2252 2254 2256 2258 -2257 0
c Encoding variable: aux542 with domain: int(0..4) (representing constraint (aux535 + aux532))
c Both direct and order encoding.
c Var 'aux542' order represents '0' with '2259'
c Var 'aux542' direct represents '0' with '2259'
c Var 'aux542' order represents '1' with '2260'
-2259 2260 0
c Var 'aux542' direct represents '1' with '2261'
2259 -2260 2261 0
-2261 2260 0
-2261 -2259 0
c Var 'aux542' order represents '2' with '2262'
-2260 2262 0
c Var 'aux542' direct represents '2' with '2263'
2260 -2262 2263 0
-2263 2262 0
-2263 -2260 0
c Var 'aux542' order represents '3' with '2264'
-2262 2264 0
c Var 'aux542' direct represents '3' with '2265'
2262 -2264 2265 0
-2265 2264 0
-2265 -2262 0
c Var 'aux542' direct represents '4' with '-2264'
2259 2261 2263 2265 -2264 0
c Encoding variable: aux543 with domain: int(0..4) (representing constraint (aux527 + aux528))
c Both direct and order encoding.
c Var 'aux543' order represents '0' with '2266'
c Var 'aux543' direct represents '0' with '2266'
c Var 'aux543' order represents '1' with '2267'
-2266 2267 0
c Var 'aux543' direct represents '1' with '2268'
2266 -2267 2268 0
-2268 2267 0
-2268 -2266 0
c Var 'aux543' order represents '2' with '2269'
-2267 2269 0
c Var 'aux543' direct represents '2' with '2270'
2267 -2269 2270 0
-2270 2269 0
-2270 -2267 0
c Var 'aux543' order represents '3' with '2271'
-2269 2271 0
c Var 'aux543' direct represents '3' with '2272'
2269 -2271 2272 0
-2272 2271 0
-2272 -2269 0
c Var 'aux543' direct represents '4' with '-2271'
2266 2268 2270 2272 -2271 0
c Encoding variable: aux544 with domain: int(0..4) (representing constraint (aux529 + aux531))
c Both direct and order encoding.
c Var 'aux544' order represents '0' with '2273'
c Var 'aux544' direct represents '0' with '2273'
c Var 'aux544' order represents '1' with '2274'
-2273 2274 0
c Var 'aux544' direct represents '1' with '2275'
2273 -2274 2275 0
-2275 2274 0
-2275 -2273 0
c Var 'aux544' order represents '2' with '2276'
-2274 2276 0
c Var 'aux544' direct represents '2' with '2277'
2274 -2276 2277 0
-2277 2276 0
-2277 -2274 0
c Var 'aux544' order represents '3' with '2278'
-2276 2278 0
c Var 'aux544' direct represents '3' with '2279'
2276 -2278 2279 0
-2279 2278 0
-2279 -2276 0
c Var 'aux544' direct represents '4' with '-2278'
2273 2275 2277 2279 -2278 0
c Encoding variable: aux545 with domain: int(0..4) (representing constraint (aux533 + aux536))
c Both direct and order encoding.
c Var 'aux545' order represents '0' with '2280'
c Var 'aux545' direct represents '0' with '2280'
c Var 'aux545' order represents '1' with '2281'
-2280 2281 0
c Var 'aux545' direct represents '1' with '2282'
2280 -2281 2282 0
-2282 2281 0
-2282 -2280 0
c Var 'aux545' order represents '2' with '2283'
-2281 2283 0
c Var 'aux545' direct represents '2' with '2284'
2281 -2283 2284 0
-2284 2283 0
-2284 -2281 0
c Var 'aux545' order represents '3' with '2285'
-2283 2285 0
c Var 'aux545' direct represents '3' with '2286'
2283 -2285 2286 0
-2286 2285 0
-2286 -2283 0
c Var 'aux545' direct represents '4' with '-2285'
2280 2282 2284 2286 -2285 0
c Encoding variable: aux546 with domain: int(0..4) (representing constraint (aux534 + aux526))
c Both direct and order encoding.
c Var 'aux546' order represents '0' with '2287'
c Var 'aux546' direct represents '0' with '2287'
c Var 'aux546' order represents '1' with '2288'
-2287 2288 0
c Var 'aux546' direct represents '1' with '2289'
2287 -2288 2289 0
-2289 2288 0
-2289 -2287 0
c Var 'aux546' order represents '2' with '2290'
-2288 2290 0
c Var 'aux546' direct represents '2' with '2291'
2288 -2290 2291 0
-2291 2290 0
-2291 -2288 0
c Var 'aux546' order represents '3' with '2292'
-2290 2292 0
c Var 'aux546' direct represents '3' with '2293'
2290 -2292 2293 0
-2293 2292 0
-2293 -2290 0
c Var 'aux546' direct represents '4' with '-2292'
2287 2289 2291 2293 -2292 0
c Encoding variable: aux547 with domain: int(0..8) (representing constraint (aux543 + aux546))
c Both direct and order encoding.
c Var 'aux547' order represents '0' with '2294'
c Var 'aux547' direct represents '0' with '2294'
c Var 'aux547' order represents '1' with '2295'
-2294 2295 0
c Var 'aux547' direct represents '1' with '2296'
2294 -2295 2296 0
-2296 2295 0
-2296 -2294 0
c Var 'aux547' order represents '2' with '2297'
-2295 2297 0
c Var 'aux547' direct represents '2' with '2298'
2295 -2297 2298 0
-2298 2297 0
-2298 -2295 0
c Var 'aux547' order represents '3' with '2299'
-2297 2299 0
c Var 'aux547' direct represents '3' with '2300'
2297 -2299 2300 0
-2300 2299 0
-2300 -2297 0
c Var 'aux547' order represents '4' with '2301'
-2299 2301 0
c Var 'aux547' direct represents '4' with '2302'
2299 -2301 2302 0
-2302 2301 0
-2302 -2299 0
c Var 'aux547' order represents '5' with '2303'
-2301 2303 0
c Var 'aux547' direct represents '5' with '2304'
2301 -2303 2304 0
-2304 2303 0
-2304 -2301 0
c Var 'aux547' order represents '6' with '2305'
-2303 2305 0
c Var 'aux547' direct represents '6' with '2306'
2303 -2305 2306 0
-2306 2305 0
-2306 -2303 0
c Var 'aux547' order represents '7' with '2307'
-2305 2307 0
c Var 'aux547' direct represents '7' with '2308'
2305 -2307 2308 0
-2308 2307 0
-2308 -2305 0
c Var 'aux547' direct represents '8' with '-2307'
2294 2296 2298 2300 2302 2304 2306 2308 -2307 0
c Encoding variable: aux548 with domain: int(0..8) (representing constraint (aux539 + aux538))
c Both direct and order encoding.
c Var 'aux548' order represents '0' with '2309'
c Var 'aux548' direct represents '0' with '2309'
c Var 'aux548' order represents '1' with '2310'
-2309 2310 0
c Var 'aux548' direct represents '1' with '2311'
2309 -2310 2311 0
-2311 2310 0
-2311 -2309 0
c Var 'aux548' order represents '2' with '2312'
-2310 2312 0
c Var 'aux548' direct represents '2' with '2313'
2310 -2312 2313 0
-2313 2312 0
-2313 -2310 0
c Var 'aux548' order represents '3' with '2314'
-2312 2314 0
c Var 'aux548' direct represents '3' with '2315'
2312 -2314 2315 0
-2315 2314 0
-2315 -2312 0
c Var 'aux548' order represents '4' with '2316'
-2314 2316 0
c Var 'aux548' direct represents '4' with '2317'
2314 -2316 2317 0
-2317 2316 0
-2317 -2314 0
c Var 'aux548' order represents '5' with '2318'
-2316 2318 0
c Var 'aux548' direct represents '5' with '2319'
2316 -2318 2319 0
-2319 2318 0
-2319 -2316 0
c Var 'aux548' order represents '6' with '2320'
-2318 2320 0
c Var 'aux548' direct represents '6' with '2321'
2318 -2320 2321 0
-2321 2320 0
-2321 -2318 0
c Var 'aux548' order represents '7' with '2322'
-2320 2322 0
c Var 'aux548' direct represents '7' with '2323'
2320 -2322 2323 0
-2323 2322 0
-2323 -2320 0
c Var 'aux548' direct represents '8' with '-2322'
2309 2311 2313 2315 2317 2319 2321 2323 -2322 0
c Encoding variable: aux549 with domain: int(0..8) (representing constraint (aux540 + aux542))
c Both direct and order encoding.
c Var 'aux549' order represents '0' with '2324'
c Var 'aux549' direct represents '0' with '2324'
c Var 'aux549' order represents '1' with '2325'
-2324 2325 0
c Var 'aux549' direct represents '1' with '2326'
2324 -2325 2326 0
-2326 2325 0
-2326 -2324 0
c Var 'aux549' order represents '2' with '2327'
-2325 2327 0
c Var 'aux549' direct represents '2' with '2328'
2325 -2327 2328 0
-2328 2327 0
-2328 -2325 0
c Var 'aux549' order represents '3' with '2329'
-2327 2329 0
c Var 'aux549' direct represents '3' with '2330'
2327 -2329 2330 0
-2330 2329 0
-2330 -2327 0
c Var 'aux549' order represents '4' with '2331'
-2329 2331 0
c Var 'aux549' direct represents '4' with '2332'
2329 -2331 2332 0
-2332 2331 0
-2332 -2329 0
c Var 'aux549' order represents '5' with '2333'
-2331 2333 0
c Var 'aux549' direct represents '5' with '2334'
2331 -2333 2334 0
-2334 2333 0
-2334 -2331 0
c Var 'aux549' order represents '6' with '2335'
-2333 2335 0
c Var 'aux549' direct represents '6' with '2336'
2333 -2335 2336 0
-2336 2335 0
-2336 -2333 0
c Var 'aux549' order represents '7' with '2337'
-2335 2337 0
c Var 'aux549' direct represents '7' with '2338'
2335 -2337 2338 0
-2338 2337 0
-2338 -2335 0
c Var 'aux549' direct represents '8' with '-2337'
2324 2326 2328 2330 2332 2334 2336 2338 -2337 0
c Encoding variable: aux550 with domain: int(0..8) (representing constraint (aux541 + aux545))
c Both direct and order encoding.
c Var 'aux550' order represents '0' with '2339'
c Var 'aux550' direct represents '0' with '2339'
c Var 'aux550' order represents '1' with '2340'
-2339 2340 0
c Var 'aux550' direct represents '1' with '2341'
2339 -2340 2341 0
-2341 2340 0
-2341 -2339 0
c Var 'aux550' order represents '2' with '2342'
-2340 2342 0
c Var 'aux550' direct represents '2' with '2343'
2340 -2342 2343 0
-2343 2342 0
-2343 -2340 0
c Var 'aux550' order represents '3' with '2344'
-2342 2344 0
c Var 'aux550' direct represents '3' with '2345'
2342 -2344 2345 0
-2345 2344 0
-2345 -2342 0
c Var 'aux550' order represents '4' with '2346'
-2344 2346 0
c Var 'aux550' direct represents '4' with '2347'
2344 -2346 2347 0
-2347 2346 0
-2347 -2344 0
c Var 'aux550' order represents '5' with '2348'
-2346 2348 0
c Var 'aux550' direct represents '5' with '2349'
2346 -2348 2349 0
-2349 2348 0
-2349 -2346 0
c Var 'aux550' order represents '6' with '2350'
-2348 2350 0
c Var 'aux550' direct represents '6' with '2351'
2348 -2350 2351 0
-2351 2350 0
-2351 -2348 0
c Var 'aux550' order represents '7' with '2352'
-2350 2352 0
c Var 'aux550' direct represents '7' with '2353'
2350 -2352 2353 0
-2353 2352 0
-2353 -2350 0
c Var 'aux550' direct represents '8' with '-2352'
2339 2341 2343 2345 2347 2349 2351 2353 -2352 0
c Encoding variable: aux551 with domain: int(0..12) (representing constraint (aux544 + aux550))
c Both direct and order encoding.
c Var 'aux551' order represents '0' with '2354'
c Var 'aux551' direct represents '0' with '2354'
c Var 'aux551' order represents '1' with '2355'
-2354 2355 0
c Var 'aux551' direct represents '1' with '2356'
2354 -2355 2356 0
-2356 2355 0
-2356 -2354 0
c Var 'aux551' order represents '2' with '2357'
-2355 2357 0
c Var 'aux551' direct represents '2' with '2358'
2355 -2357 2358 0
-2358 2357 0
-2358 -2355 0
c Var 'aux551' order represents '3' with '2359'
-2357 2359 0
c Var 'aux551' direct represents '3' with '2360'
2357 -2359 2360 0
-2360 2359 0
-2360 -2357 0
c Var 'aux551' order represents '4' with '2361'
-2359 2361 0
c Var 'aux551' direct represents '4' with '2362'
2359 -2361 2362 0
-2362 2361 0
-2362 -2359 0
c Var 'aux551' order represents '5' with '2363'
-2361 2363 0
c Var 'aux551' direct represents '5' with '2364'
2361 -2363 2364 0
-2364 2363 0
-2364 -2361 0
c Var 'aux551' order represents '6' with '2365'
-2363 2365 0
c Var 'aux551' direct represents '6' with '2366'
2363 -2365 2366 0
-2366 2365 0
-2366 -2363 0
c Var 'aux551' order represents '7' with '2367'
-2365 2367 0
c Var 'aux551' direct represents '7' with '2368'
2365 -2367 2368 0
-2368 2367 0
-2368 -2365 0
c Var 'aux551' order represents '8' with '2369'
-2367 2369 0
c Var 'aux551' direct represents '8' with '2370'
2367 -2369 2370 0
-2370 2369 0
-2370 -2367 0
c Var 'aux551' order represents '9' with '2371'
-2369 2371 0
c Var 'aux551' direct represents '9' with '2372'
2369 -2371 2372 0
-2372 2371 0
-2372 -2369 0
c Var 'aux551' order represents '10' with '2373'
-2371 2373 0
c Var 'aux551' direct represents '10' with '2374'
2371 -2373 2374 0
-2374 2373 0
-2374 -2371 0
c Var 'aux551' order represents '11' with '2375'
-2373 2375 0
c Var 'aux551' direct represents '11' with '2376'
2373 -2375 2376 0
-2376 2375 0
-2376 -2373 0
c Var 'aux551' direct represents '12' with '-2375'
2354 2356 2358 2360 2362 2364 2366 2368 2370 2372 2374 2376 -2375 0
c Encoding variable: aux552 with domain: int(0..16) (representing constraint (aux548 + aux547))
c Both direct and order encoding.
c Var 'aux552' order represents '0' with '2377'
c Var 'aux552' direct represents '0' with '2377'
c Var 'aux552' order represents '1' with '2378'
-2377 2378 0
c Var 'aux552' direct represents '1' with '2379'
2377 -2378 2379 0
-2379 2378 0
-2379 -2377 0
c Var 'aux552' order represents '2' with '2380'
-2378 2380 0
c Var 'aux552' direct represents '2' with '2381'
2378 -2380 2381 0
-2381 2380 0
-2381 -2378 0
c Var 'aux552' order represents '3' with '2382'
-2380 2382 0
c Var 'aux552' direct represents '3' with '2383'
2380 -2382 2383 0
-2383 2382 0
-2383 -2380 0
c Var 'aux552' order represents '4' with '2384'
-2382 2384 0
c Var 'aux552' direct represents '4' with '2385'
2382 -2384 2385 0
-2385 2384 0
-2385 -2382 0
c Var 'aux552' order represents '5' with '2386'
-2384 2386 0
c Var 'aux552' direct represents '5' with '2387'
2384 -2386 2387 0
-2387 2386 0
-2387 -2384 0
c Var 'aux552' order represents '6' with '2388'
-2386 2388 0
c Var 'aux552' direct represents '6' with '2389'
2386 -2388 2389 0
-2389 2388 0
-2389 -2386 0
c Var 'aux552' order represents '7' with '2390'
-2388 2390 0
c Var 'aux552' direct represents '7' with '2391'
2388 -2390 2391 0
-2391 2390 0
-2391 -2388 0
c Var 'aux552' order represents '8' with '2392'
-2390 2392 0
c Var 'aux552' direct represents '8' with '2393'
2390 -2392 2393 0
-2393 2392 0
-2393 -2390 0
c Var 'aux552' order represents '9' with '2394'
-2392 2394 0
c Var 'aux552' direct represents '9' with '2395'
2392 -2394 2395 0
-2395 2394 0
-2395 -2392 0
c Var 'aux552' order represents '10' with '2396'
-2394 2396 0
c Var 'aux552' direct represents '10' with '2397'
2394 -2396 2397 0
-2397 2396 0
-2397 -2394 0
c Var 'aux552' order represents '11' with '2398'
-2396 2398 0
c Var 'aux552' direct represents '11' with '2399'
2396 -2398 2399 0
-2399 2398 0
-2399 -2396 0
c Var 'aux552' order represents '12' with '2400'
-2398 2400 0
c Var 'aux552' direct represents '12' with '2401'
2398 -2400 2401 0
-2401 2400 0
-2401 -2398 0
c Var 'aux552' order represents '13' with '2402'
-2400 2402 0
c Var 'aux552' direct represents '13' with '2403'
2400 -2402 2403 0
-2403 2402 0
-2403 -2400 0
c Var 'aux552' order represents '14' with '2404'
-2402 2404 0
c Var 'aux552' direct represents '14' with '2405'
2402 -2404 2405 0
-2405 2404 0
-2405 -2402 0
c Var 'aux552' order represents '15' with '2406'
-2404 2406 0
c Var 'aux552' direct represents '15' with '2407'
2404 -2406 2407 0
-2407 2406 0
-2407 -2404 0
c Var 'aux552' direct represents '16' with '-2406'
2377 2379 2381 2383 2385 2387 2389 2391 2393 2395 2397 2399 2401 2403 2405 2407 -2406 0
c Encoding variable: aux553 with domain: int(0..20) (representing constraint (aux549 + aux551))
c Both direct and order encoding.
c Var 'aux553' order represents '0' with '2408'
c Var 'aux553' direct represents '0' with '2408'
c Var 'aux553' order represents '1' with '2409'
-2408 2409 0
c Var 'aux553' direct represents '1' with '2410'
2408 -2409 2410 0
-2410 2409 0
-2410 -2408 0
c Var 'aux553' order represents '2' with '2411'
-2409 2411 0
c Var 'aux553' direct represents '2' with '2412'
2409 -2411 2412 0
-2412 2411 0
-2412 -2409 0
c Var 'aux553' order represents '3' with '2413'
-2411 2413 0
c Var 'aux553' direct represents '3' with '2414'
2411 -2413 2414 0
-2414 2413 0
-2414 -2411 0
c Var 'aux553' order represents '4' with '2415'
-2413 2415 0
c Var 'aux553' direct represents '4' with '2416'
2413 -2415 2416 0
-2416 2415 0
-2416 -2413 0
c Var 'aux553' order represents '5' with '2417'
-2415 2417 0
c Var 'aux553' direct represents '5' with '2418'
2415 -2417 2418 0
-2418 2417 0
-2418 -2415 0
c Var 'aux553' order represents '6' with '2419'
-2417 2419 0
c Var 'aux553' direct represents '6' with '2420'
2417 -2419 2420 0
-2420 2419 0
-2420 -2417 0
c Var 'aux553' order represents '7' with '2421'
-2419 2421 0
c Var 'aux553' direct represents '7' with '2422'
2419 -2421 2422 0
-2422 2421 0
-2422 -2419 0
c Var 'aux553' order represents '8' with '2423'
-2421 2423 0
c Var 'aux553' direct represents '8' with '2424'
2421 -2423 2424 0
-2424 2423 0
-2424 -2421 0
c Var 'aux553' order represents '9' with '2425'
-2423 2425 0
c Var 'aux553' direct represents '9' with '2426'
2423 -2425 2426 0
-2426 2425 0
-2426 -2423 0
c Var 'aux553' order represents '10' with '2427'
-2425 2427 0
c Var 'aux553' direct represents '10' with '2428'
2425 -2427 2428 0
-2428 2427 0
-2428 -2425 0
c Var 'aux553' order represents '11' with '2429'
-2427 2429 0
c Var 'aux553' direct represents '11' with '2430'
2427 -2429 2430 0
-2430 2429 0
-2430 -2427 0
c Var 'aux553' order represents '12' with '2431'
-2429 2431 0
c Var 'aux553' direct represents '12' with '2432'
2429 -2431 2432 0
-2432 2431 0
-2432 -2429 0
c Var 'aux553' order represents '13' with '2433'
-2431 2433 0
c Var 'aux553' direct represents '13' with '2434'
2431 -2433 2434 0
-2434 2433 0
-2434 -2431 0
c Var 'aux553' order represents '14' with '2435'
-2433 2435 0
c Var 'aux553' direct represents '14' with '2436'
2433 -2435 2436 0
-2436 2435 0
-2436 -2433 0
c Var 'aux553' order represents '15' with '2437'
-2435 2437 0
c Var 'aux553' direct represents '15' with '2438'
2435 -2437 2438 0
-2438 2437 0
-2438 -2435 0
c Var 'aux553' order represents '16' with '2439'
-2437 2439 0
c Var 'aux553' direct represents '16' with '2440'
2437 -2439 2440 0
-2440 2439 0
-2440 -2437 0
c Var 'aux553' order represents '17' with '2441'
-2439 2441 0
c Var 'aux553' direct represents '17' with '2442'
2439 -2441 2442 0
-2442 2441 0
-2442 -2439 0
c Var 'aux553' order represents '18' with '2443'
-2441 2443 0
c Var 'aux553' direct represents '18' with '2444'
2441 -2443 2444 0
-2444 2443 0
-2444 -2441 0
c Var 'aux553' order represents '19' with '2445'
-2443 2445 0
c Var 'aux553' direct represents '19' with '2446'
2443 -2445 2446 0
-2446 2445 0
-2446 -2443 0
c Var 'aux553' direct represents '20' with '-2445'
2408 2410 2412 2414 2416 2418 2420 2422 2424 2426 2428 2430 2432 2434 2436 2438 2440 2442 2444 2446 -2445 0
c Encoding variable: aux554 with domain: int(0..2) (representing constraint ((agrid_00004_00001=1) + (agrid_00004_00002=1)))
c Both direct and order encoding.
c Var 'aux554' order represents '0' with '2447'
c Var 'aux554' direct represents '0' with '2447'
c Var 'aux554' order represents '1' with '2448'
-2447 2448 0
c Var 'aux554' direct represents '1' with '2449'
2447 -2448 2449 0
-2449 2448 0
-2449 -2447 0
c Var 'aux554' direct represents '2' with '-2448'
2447 2449 -2448 0
c Encoding variable: aux555 with domain: int(0..2) (representing constraint ((agrid_00006_00006=1) + (agrid_00004_00004=1)))
c Both direct and order encoding.
c Var 'aux555' order represents '0' with '2450'
c Var 'aux555' direct represents '0' with '2450'
c Var 'aux555' order represents '1' with '2451'
-2450 2451 0
c Var 'aux555' direct represents '1' with '2452'
2450 -2451 2452 0
-2452 2451 0
-2452 -2450 0
c Var 'aux555' direct represents '2' with '-2451'
2450 2452 -2451 0
c Encoding variable: aux556 with domain: int(0..2) (representing constraint ((agrid_00006_00005=1) + (agrid_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux556' order represents '0' with '2453'
c Var 'aux556' direct represents '0' with '2453'
c Var 'aux556' order represents '1' with '2454'
-2453 2454 0
c Var 'aux556' direct represents '1' with '2455'
2453 -2454 2455 0
-2455 2454 0
-2455 -2453 0
c Var 'aux556' direct represents '2' with '-2454'
2453 2455 -2454 0
c Encoding variable: aux557 with domain: int(0..2) (representing constraint ((agrid_00006_00004=1) + (agrid_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux557' order represents '0' with '2456'
c Var 'aux557' direct represents '0' with '2456'
c Var 'aux557' order represents '1' with '2457'
-2456 2457 0
c Var 'aux557' direct represents '1' with '2458'
2456 -2457 2458 0
-2458 2457 0
-2458 -2456 0
c Var 'aux557' direct represents '2' with '-2457'
2456 2458 -2457 0
c Encoding variable: aux558 with domain: int(0..2) (representing constraint ((agrid_00006_00002=1) + (agrid_00006_00003=1)))
c Both direct and order encoding.
c Var 'aux558' order represents '0' with '2459'
c Var 'aux558' direct represents '0' with '2459'
c Var 'aux558' order represents '1' with '2460'
-2459 2460 0
c Var 'aux558' direct represents '1' with '2461'
2459 -2460 2461 0
-2461 2460 0
-2461 -2459 0
c Var 'aux558' direct represents '2' with '-2460'
2459 2461 -2460 0
c Encoding variable: aux559 with domain: int(0..2) (representing constraint ((agrid_00005_00005=1) + (agrid_00002_00003=1)))
c Both direct and order encoding.
c Var 'aux559' order represents '0' with '2462'
c Var 'aux559' direct represents '0' with '2462'
c Var 'aux559' order represents '1' with '2463'
-2462 2463 0
c Var 'aux559' direct represents '1' with '2464'
2462 -2463 2464 0
-2464 2463 0
-2464 -2462 0
c Var 'aux559' direct represents '2' with '-2463'
2462 2464 -2463 0
c Encoding variable: aux560 with domain: int(0..2) (representing constraint ((agrid_00006_00001=1) + (agrid_00005_00006=1)))
c Both direct and order encoding.
c Var 'aux560' order represents '0' with '2465'
c Var 'aux560' direct represents '0' with '2465'
c Var 'aux560' order represents '1' with '2466'
-2465 2466 0
c Var 'aux560' direct represents '1' with '2467'
2465 -2466 2467 0
-2467 2466 0
-2467 -2465 0
c Var 'aux560' direct represents '2' with '-2466'
2465 2467 -2466 0
c Encoding variable: aux561 with domain: int(0..2) (representing constraint ((agrid_00001_00006=1) + (agrid_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux561' order represents '0' with '2468'
c Var 'aux561' direct represents '0' with '2468'
c Var 'aux561' order represents '1' with '2469'
-2468 2469 0
c Var 'aux561' direct represents '1' with '2470'
2468 -2469 2470 0
-2470 2469 0
-2470 -2468 0
c Var 'aux561' direct represents '2' with '-2469'
2468 2470 -2469 0
c Encoding variable: aux562 with domain: int(0..2) (representing constraint ((agrid_00001_00005=1) + (agrid_00004_00005=1)))
c Both direct and order encoding.
c Var 'aux562' order represents '0' with '2471'
c Var 'aux562' direct represents '0' with '2471'
c Var 'aux562' order represents '1' with '2472'
-2471 2472 0
c Var 'aux562' direct represents '1' with '2473'
2471 -2472 2473 0
-2473 2472 0
-2473 -2471 0
c Var 'aux562' direct represents '2' with '-2472'
2471 2473 -2472 0
c Encoding variable: aux563 with domain: int(0..2) (representing constraint ((agrid_00001_00004=1) + (agrid_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux563' order represents '0' with '2474'
c Var 'aux563' direct represents '0' with '2474'
c Var 'aux563' order represents '1' with '2475'
-2474 2475 0
c Var 'aux563' direct represents '1' with '2476'
2474 -2475 2476 0
-2476 2475 0
-2476 -2474 0
c Var 'aux563' direct represents '2' with '-2475'
2474 2476 -2475 0
c Encoding variable: aux564 with domain: int(0..2) (representing constraint ((agrid_00001_00003=1) + (agrid_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux564' order represents '0' with '2477'
c Var 'aux564' direct represents '0' with '2477'
c Var 'aux564' order represents '1' with '2478'
-2477 2478 0
c Var 'aux564' direct represents '1' with '2479'
2477 -2478 2479 0
-2479 2478 0
-2479 -2477 0
c Var 'aux564' direct represents '2' with '-2478'
2477 2479 -2478 0
c Encoding variable: aux565 with domain: int(0..2) (representing constraint ((agrid_00001_00002=1) + (agrid_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux565' order represents '0' with '2480'
c Var 'aux565' direct represents '0' with '2480'
c Var 'aux565' order represents '1' with '2481'
-2480 2481 0
c Var 'aux565' direct represents '1' with '2482'
2480 -2481 2482 0
-2482 2481 0
-2482 -2480 0
c Var 'aux565' direct represents '2' with '-2481'
2480 2482 -2481 0
c Encoding variable: aux566 with domain: int(0..2) (representing constraint ((agrid_00001_00001=1) + (agrid_00002_00005=1)))
c Both direct and order encoding.
c Var 'aux566' order represents '0' with '2483'
c Var 'aux566' direct represents '0' with '2483'
c Var 'aux566' order represents '1' with '2484'
-2483 2484 0
c Var 'aux566' direct represents '1' with '2485'
2483 -2484 2485 0
-2485 2484 0
-2485 -2483 0
c Var 'aux566' direct represents '2' with '-2484'
2483 2485 -2484 0
c Encoding variable: aux567 with domain: int(0..2) (representing constraint ((agrid_00003_00006=1) + (agrid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux567' order represents '0' with '2486'
c Var 'aux567' direct represents '0' with '2486'
c Var 'aux567' order represents '1' with '2487'
-2486 2487 0
c Var 'aux567' direct represents '1' with '2488'
2486 -2487 2488 0
-2488 2487 0
-2488 -2486 0
c Var 'aux567' direct represents '2' with '-2487'
2486 2488 -2487 0
c Encoding variable: aux568 with domain: int(0..2) (representing constraint ((agrid_00003_00005=1) + (agrid_00004_00003=1)))
c Both direct and order encoding.
c Var 'aux568' order represents '0' with '2489'
c Var 'aux568' direct represents '0' with '2489'
c Var 'aux568' order represents '1' with '2490'
-2489 2490 0
c Var 'aux568' direct represents '1' with '2491'
2489 -2490 2491 0
-2491 2490 0
-2491 -2489 0
c Var 'aux568' direct represents '2' with '-2490'
2489 2491 -2490 0
c Encoding variable: aux569 with domain: int(0..2) (representing constraint ((agrid_00004_00006=1) + (agrid_00002_00006=1)))
c Both direct and order encoding.
c Var 'aux569' order represents '0' with '2492'
c Var 'aux569' direct represents '0' with '2492'
c Var 'aux569' order represents '1' with '2493'
-2492 2493 0
c Var 'aux569' direct represents '1' with '2494'
2492 -2493 2494 0
-2494 2493 0
-2494 -2492 0
c Var 'aux569' direct represents '2' with '-2493'
2492 2494 -2493 0
c Encoding variable: aux570 with domain: int(0..2) (representing constraint ((agrid_00005_00001=1) + (agrid_00002_00001=1)))
c Both direct and order encoding.
c Var 'aux570' order represents '0' with '2495'
c Var 'aux570' direct represents '0' with '2495'
c Var 'aux570' order represents '1' with '2496'
-2495 2496 0
c Var 'aux570' direct represents '1' with '2497'
2495 -2496 2497 0
-2497 2496 0
-2497 -2495 0
c Var 'aux570' direct represents '2' with '-2496'
2495 2497 -2496 0
c Encoding variable: aux571 with domain: int(0..2) (representing constraint ((agrid_00005_00002=1) + (agrid_00005_00003=1)))
c Both direct and order encoding.
c Var 'aux571' order represents '0' with '2498'
c Var 'aux571' direct represents '0' with '2498'
c Var 'aux571' order represents '1' with '2499'
-2498 2499 0
c Var 'aux571' direct represents '1' with '2500'
2498 -2499 2500 0
-2500 2499 0
-2500 -2498 0
c Var 'aux571' direct represents '2' with '-2499'
2498 2500 -2499 0
c Encoding variable: aux572 with domain: int(0..4) (representing constraint (aux564 + aux571))
c Both direct and order encoding.
c Var 'aux572' order represents '0' with '2501'
c Var 'aux572' direct represents '0' with '2501'
c Var 'aux572' order represents '1' with '2502'
-2501 2502 0
c Var 'aux572' direct represents '1' with '2503'
2501 -2502 2503 0
-2503 2502 0
-2503 -2501 0
c Var 'aux572' order represents '2' with '2504'
-2502 2504 0
c Var 'aux572' direct represents '2' with '2505'
2502 -2504 2505 0
-2505 2504 0
-2505 -2502 0
c Var 'aux572' order represents '3' with '2506'
-2504 2506 0
c Var 'aux572' direct represents '3' with '2507'
2504 -2506 2507 0
-2507 2506 0
-2507 -2504 0
c Var 'aux572' direct represents '4' with '-2506'
2501 2503 2505 2507 -2506 0
c Encoding variable: aux573 with domain: int(0..4) (representing constraint (aux557 + aux559))
c Both direct and order encoding.
c Var 'aux573' order represents '0' with '2508'
c Var 'aux573' direct represents '0' with '2508'
c Var 'aux573' order represents '1' with '2509'
-2508 2509 0
c Var 'aux573' direct represents '1' with '2510'
2508 -2509 2510 0
-2510 2509 0
-2510 -2508 0
c Var 'aux573' order represents '2' with '2511'
-2509 2511 0
c Var 'aux573' direct represents '2' with '2512'
2509 -2511 2512 0
-2512 2511 0
-2512 -2509 0
c Var 'aux573' order represents '3' with '2513'
-2511 2513 0
c Var 'aux573' direct represents '3' with '2514'
2511 -2513 2514 0
-2514 2513 0
-2514 -2511 0
c Var 'aux573' direct represents '4' with '-2513'
2508 2510 2512 2514 -2513 0
c Encoding variable: aux574 with domain: int(0..4) (representing constraint (aux554 + aux555))
c Both direct and order encoding.
c Var 'aux574' order represents '0' with '2515'
c Var 'aux574' direct represents '0' with '2515'
c Var 'aux574' order represents '1' with '2516'
-2515 2516 0
c Var 'aux574' direct represents '1' with '2517'
2515 -2516 2517 0
-2517 2516 0
-2517 -2515 0
c Var 'aux574' order represents '2' with '2518'
-2516 2518 0
c Var 'aux574' direct represents '2' with '2519'
2516 -2518 2519 0
-2519 2518 0
-2519 -2516 0
c Var 'aux574' order represents '3' with '2520'
-2518 2520 0
c Var 'aux574' direct represents '3' with '2521'
2518 -2520 2521 0
-2521 2520 0
-2521 -2518 0
c Var 'aux574' direct represents '4' with '-2520'
2515 2517 2519 2521 -2520 0
c Encoding variable: aux575 with domain: int(0..4) (representing constraint (aux556 + aux558))
c Both direct and order encoding.
c Var 'aux575' order represents '0' with '2522'
c Var 'aux575' direct represents '0' with '2522'
c Var 'aux575' order represents '1' with '2523'
-2522 2523 0
c Var 'aux575' direct represents '1' with '2524'
2522 -2523 2524 0
-2524 2523 0
-2524 -2522 0
c Var 'aux575' order represents '2' with '2525'
-2523 2525 0
c Var 'aux575' direct represents '2' with '2526'
2523 -2525 2526 0
-2526 2525 0
-2526 -2523 0
c Var 'aux575' order represents '3' with '2527'
-2525 2527 0
c Var 'aux575' direct represents '3' with '2528'
2525 -2527 2528 0
-2528 2527 0
-2528 -2525 0
c Var 'aux575' direct represents '4' with '-2527'
2522 2524 2526 2528 -2527 0
c Encoding variable: aux576 with domain: int(0..4) (representing constraint (aux569 + aux566))
c Both direct and order encoding.
c Var 'aux576' order represents '0' with '2529'
c Var 'aux576' direct represents '0' with '2529'
c Var 'aux576' order represents '1' with '2530'
-2529 2530 0
c Var 'aux576' direct represents '1' with '2531'
2529 -2530 2531 0
-2531 2530 0
-2531 -2529 0
c Var 'aux576' order represents '2' with '2532'
-2530 2532 0
c Var 'aux576' direct represents '2' with '2533'
2530 -2532 2533 0
-2533 2532 0
-2533 -2530 0
c Var 'aux576' order represents '3' with '2534'
-2532 2534 0
c Var 'aux576' direct represents '3' with '2535'
2532 -2534 2535 0
-2535 2534 0
-2535 -2532 0
c Var 'aux576' direct represents '4' with '-2534'
2529 2531 2533 2535 -2534 0
c Encoding variable: aux577 with domain: int(0..4) (representing constraint (aux561 + aux562))
c Both direct and order encoding.
c Var 'aux577' order represents '0' with '2536'
c Var 'aux577' direct represents '0' with '2536'
c Var 'aux577' order represents '1' with '2537'
-2536 2537 0
c Var 'aux577' direct represents '1' with '2538'
2536 -2537 2538 0
-2538 2537 0
-2538 -2536 0
c Var 'aux577' order represents '2' with '2539'
-2537 2539 0
c Var 'aux577' direct represents '2' with '2540'
2537 -2539 2540 0
-2540 2539 0
-2540 -2537 0
c Var 'aux577' order represents '3' with '2541'
-2539 2541 0
c Var 'aux577' direct represents '3' with '2542'
2539 -2541 2542 0
-2542 2541 0
-2542 -2539 0
c Var 'aux577' direct represents '4' with '-2541'
2536 2538 2540 2542 -2541 0
c Encoding variable: aux578 with domain: int(0..4) (representing constraint (aux563 + aux565))
c Both direct and order encoding.
c Var 'aux578' order represents '0' with '2543'
c Var 'aux578' direct represents '0' with '2543'
c Var 'aux578' order represents '1' with '2544'
-2543 2544 0
c Var 'aux578' direct represents '1' with '2545'
2543 -2544 2545 0
-2545 2544 0
-2545 -2543 0
c Var 'aux578' order represents '2' with '2546'
-2544 2546 0
c Var 'aux578' direct represents '2' with '2547'
2544 -2546 2547 0
-2547 2546 0
-2547 -2544 0
c Var 'aux578' order represents '3' with '2548'
-2546 2548 0
c Var 'aux578' direct represents '3' with '2549'
2546 -2548 2549 0
-2549 2548 0
-2549 -2546 0
c Var 'aux578' direct represents '4' with '-2548'
2543 2545 2547 2549 -2548 0
c Encoding variable: aux579 with domain: int(0..4) (representing constraint (aux567 + aux570))
c Both direct and order encoding.
c Var 'aux579' order represents '0' with '2550'
c Var 'aux579' direct represents '0' with '2550'
c Var 'aux579' order represents '1' with '2551'
-2550 2551 0
c Var 'aux579' direct represents '1' with '2552'
2550 -2551 2552 0
-2552 2551 0
-2552 -2550 0
c Var 'aux579' order represents '2' with '2553'
-2551 2553 0
c Var 'aux579' direct represents '2' with '2554'
2551 -2553 2554 0
-2554 2553 0
-2554 -2551 0
c Var 'aux579' order represents '3' with '2555'
-2553 2555 0
c Var 'aux579' direct represents '3' with '2556'
2553 -2555 2556 0
-2556 2555 0
-2556 -2553 0
c Var 'aux579' direct represents '4' with '-2555'
2550 2552 2554 2556 -2555 0
c Encoding variable: aux580 with domain: int(0..4) (representing constraint (aux568 + aux560))
c Both direct and order encoding.
c Var 'aux580' order represents '0' with '2557'
c Var 'aux580' direct represents '0' with '2557'
c Var 'aux580' order represents '1' with '2558'
-2557 2558 0
c Var 'aux580' direct represents '1' with '2559'
2557 -2558 2559 0
-2559 2558 0
-2559 -2557 0
c Var 'aux580' order represents '2' with '2560'
-2558 2560 0
c Var 'aux580' direct represents '2' with '2561'
2558 -2560 2561 0
-2561 2560 0
-2561 -2558 0
c Var 'aux580' order represents '3' with '2562'
-2560 2562 0
c Var 'aux580' direct represents '3' with '2563'
2560 -2562 2563 0
-2563 2562 0
-2563 -2560 0
c Var 'aux580' direct represents '4' with '-2562'
2557 2559 2561 2563 -2562 0
c Encoding variable: aux581 with domain: int(0..8) (representing constraint (aux577 + aux580))
c Both direct and order encoding.
c Var 'aux581' order represents '0' with '2564'
c Var 'aux581' direct represents '0' with '2564'
c Var 'aux581' order represents '1' with '2565'
-2564 2565 0
c Var 'aux581' direct represents '1' with '2566'
2564 -2565 2566 0
-2566 2565 0
-2566 -2564 0
c Var 'aux581' order represents '2' with '2567'
-2565 2567 0
c Var 'aux581' direct represents '2' with '2568'
2565 -2567 2568 0
-2568 2567 0
-2568 -2565 0
c Var 'aux581' order represents '3' with '2569'
-2567 2569 0
c Var 'aux581' direct represents '3' with '2570'
2567 -2569 2570 0
-2570 2569 0
-2570 -2567 0
c Var 'aux581' order represents '4' with '2571'
-2569 2571 0
c Var 'aux581' direct represents '4' with '2572'
2569 -2571 2572 0
-2572 2571 0
-2572 -2569 0
c Var 'aux581' order represents '5' with '2573'
-2571 2573 0
c Var 'aux581' direct represents '5' with '2574'
2571 -2573 2574 0
-2574 2573 0
-2574 -2571 0
c Var 'aux581' order represents '6' with '2575'
-2573 2575 0
c Var 'aux581' direct represents '6' with '2576'
2573 -2575 2576 0
-2576 2575 0
-2576 -2573 0
c Var 'aux581' order represents '7' with '2577'
-2575 2577 0
c Var 'aux581' direct represents '7' with '2578'
2575 -2577 2578 0
-2578 2577 0
-2578 -2575 0
c Var 'aux581' direct represents '8' with '-2577'
2564 2566 2568 2570 2572 2574 2576 2578 -2577 0
c Encoding variable: aux582 with domain: int(0..8) (representing constraint (aux573 + aux572))
c Both direct and order encoding.
c Var 'aux582' order represents '0' with '2579'
c Var 'aux582' direct represents '0' with '2579'
c Var 'aux582' order represents '1' with '2580'
-2579 2580 0
c Var 'aux582' direct represents '1' with '2581'
2579 -2580 2581 0
-2581 2580 0
-2581 -2579 0
c Var 'aux582' order represents '2' with '2582'
-2580 2582 0
c Var 'aux582' direct represents '2' with '2583'
2580 -2582 2583 0
-2583 2582 0
-2583 -2580 0
c Var 'aux582' order represents '3' with '2584'
-2582 2584 0
c Var 'aux582' direct represents '3' with '2585'
2582 -2584 2585 0
-2585 2584 0
-2585 -2582 0
c Var 'aux582' order represents '4' with '2586'
-2584 2586 0
c Var 'aux582' direct represents '4' with '2587'
2584 -2586 2587 0
-2587 2586 0
-2587 -2584 0
c Var 'aux582' order represents '5' with '2588'
-2586 2588 0
c Var 'aux582' direct represents '5' with '2589'
2586 -2588 2589 0
-2589 2588 0
-2589 -2586 0
c Var 'aux582' order represents '6' with '2590'
-2588 2590 0
c Var 'aux582' direct represents '6' with '2591'
2588 -2590 2591 0
-2591 2590 0
-2591 -2588 0
c Var 'aux582' order represents '7' with '2592'
-2590 2592 0
c Var 'aux582' direct represents '7' with '2593'
2590 -2592 2593 0
-2593 2592 0
-2593 -2590 0
c Var 'aux582' direct represents '8' with '-2592'
2579 2581 2583 2585 2587 2589 2591 2593 -2592 0
c Encoding variable: aux583 with domain: int(0..8) (representing constraint (aux574 + aux576))
c Both direct and order encoding.
c Var 'aux583' order represents '0' with '2594'
c Var 'aux583' direct represents '0' with '2594'
c Var 'aux583' order represents '1' with '2595'
-2594 2595 0
c Var 'aux583' direct represents '1' with '2596'
2594 -2595 2596 0
-2596 2595 0
-2596 -2594 0
c Var 'aux583' order represents '2' with '2597'
-2595 2597 0
c Var 'aux583' direct represents '2' with '2598'
2595 -2597 2598 0
-2598 2597 0
-2598 -2595 0
c Var 'aux583' order represents '3' with '2599'
-2597 2599 0
c Var 'aux583' direct represents '3' with '2600'
2597 -2599 2600 0
-2600 2599 0
-2600 -2597 0
c Var 'aux583' order represents '4' with '2601'
-2599 2601 0
c Var 'aux583' direct represents '4' with '2602'
2599 -2601 2602 0
-2602 2601 0
-2602 -2599 0
c Var 'aux583' order represents '5' with '2603'
-2601 2603 0
c Var 'aux583' direct represents '5' with '2604'
2601 -2603 2604 0
-2604 2603 0
-2604 -2601 0
c Var 'aux583' order represents '6' with '2605'
-2603 2605 0
c Var 'aux583' direct represents '6' with '2606'
2603 -2605 2606 0
-2606 2605 0
-2606 -2603 0
c Var 'aux583' order represents '7' with '2607'
-2605 2607 0
c Var 'aux583' direct represents '7' with '2608'
2605 -2607 2608 0
-2608 2607 0
-2608 -2605 0
c Var 'aux583' direct represents '8' with '-2607'
2594 2596 2598 2600 2602 2604 2606 2608 -2607 0
c Encoding variable: aux584 with domain: int(0..8) (representing constraint (aux575 + aux579))
c Both direct and order encoding.
c Var 'aux584' order represents '0' with '2609'
c Var 'aux584' direct represents '0' with '2609'
c Var 'aux584' order represents '1' with '2610'
-2609 2610 0
c Var 'aux584' direct represents '1' with '2611'
2609 -2610 2611 0
-2611 2610 0
-2611 -2609 0
c Var 'aux584' order represents '2' with '2612'
-2610 2612 0
c Var 'aux584' direct represents '2' with '2613'
2610 -2612 2613 0
-2613 2612 0
-2613 -2610 0
c Var 'aux584' order represents '3' with '2614'
-2612 2614 0
c Var 'aux584' direct represents '3' with '2615'
2612 -2614 2615 0
-2615 2614 0
-2615 -2612 0
c Var 'aux584' order represents '4' with '2616'
-2614 2616 0
c Var 'aux584' direct represents '4' with '2617'
2614 -2616 2617 0
-2617 2616 0
-2617 -2614 0
c Var 'aux584' order represents '5' with '2618'
-2616 2618 0
c Var 'aux584' direct represents '5' with '2619'
2616 -2618 2619 0
-2619 2618 0
-2619 -2616 0
c Var 'aux584' order represents '6' with '2620'
-2618 2620 0
c Var 'aux584' direct represents '6' with '2621'
2618 -2620 2621 0
-2621 2620 0
-2621 -2618 0
c Var 'aux584' order represents '7' with '2622'
-2620 2622 0
c Var 'aux584' direct represents '7' with '2623'
2620 -2622 2623 0
-2623 2622 0
-2623 -2620 0
c Var 'aux584' direct represents '8' with '-2622'
2609 2611 2613 2615 2617 2619 2621 2623 -2622 0
c Encoding variable: aux585 with domain: int(0..12) (representing constraint (aux578 + aux584))
c Both direct and order encoding.
c Var 'aux585' order represents '0' with '2624'
c Var 'aux585' direct represents '0' with '2624'
c Var 'aux585' order represents '1' with '2625'
-2624 2625 0
c Var 'aux585' direct represents '1' with '2626'
2624 -2625 2626 0
-2626 2625 0
-2626 -2624 0
c Var 'aux585' order represents '2' with '2627'
-2625 2627 0
c Var 'aux585' direct represents '2' with '2628'
2625 -2627 2628 0
-2628 2627 0
-2628 -2625 0
c Var 'aux585' order represents '3' with '2629'
-2627 2629 0
c Var 'aux585' direct represents '3' with '2630'
2627 -2629 2630 0
-2630 2629 0
-2630 -2627 0
c Var 'aux585' order represents '4' with '2631'
-2629 2631 0
c Var 'aux585' direct represents '4' with '2632'
2629 -2631 2632 0
-2632 2631 0
-2632 -2629 0
c Var 'aux585' order represents '5' with '2633'
-2631 2633 0
c Var 'aux585' direct represents '5' with '2634'
2631 -2633 2634 0
-2634 2633 0
-2634 -2631 0
c Var 'aux585' order represents '6' with '2635'
-2633 2635 0
c Var 'aux585' direct represents '6' with '2636'
2633 -2635 2636 0
-2636 2635 0
-2636 -2633 0
c Var 'aux585' order represents '7' with '2637'
-2635 2637 0
c Var 'aux585' direct represents '7' with '2638'
2635 -2637 2638 0
-2638 2637 0
-2638 -2635 0
c Var 'aux585' order represents '8' with '2639'
-2637 2639 0
c Var 'aux585' direct represents '8' with '2640'
2637 -2639 2640 0
-2640 2639 0
-2640 -2637 0
c Var 'aux585' order represents '9' with '2641'
-2639 2641 0
c Var 'aux585' direct represents '9' with '2642'
2639 -2641 2642 0
-2642 2641 0
-2642 -2639 0
c Var 'aux585' order represents '10' with '2643'
-2641 2643 0
c Var 'aux585' direct represents '10' with '2644'
2641 -2643 2644 0
-2644 2643 0
-2644 -2641 0
c Var 'aux585' order represents '11' with '2645'
-2643 2645 0
c Var 'aux585' direct represents '11' with '2646'
2643 -2645 2646 0
-2646 2645 0
-2646 -2643 0
c Var 'aux585' direct represents '12' with '-2645'
2624 2626 2628 2630 2632 2634 2636 2638 2640 2642 2644 2646 -2645 0
c Encoding variable: aux586 with domain: int(0..16) (representing constraint (aux582 + aux581))
c Both direct and order encoding.
c Var 'aux586' order represents '0' with '2647'
c Var 'aux586' direct represents '0' with '2647'
c Var 'aux586' order represents '1' with '2648'
-2647 2648 0
c Var 'aux586' direct represents '1' with '2649'
2647 -2648 2649 0
-2649 2648 0
-2649 -2647 0
c Var 'aux586' order represents '2' with '2650'
-2648 2650 0
c Var 'aux586' direct represents '2' with '2651'
2648 -2650 2651 0
-2651 2650 0
-2651 -2648 0
c Var 'aux586' order represents '3' with '2652'
-2650 2652 0
c Var 'aux586' direct represents '3' with '2653'
2650 -2652 2653 0
-2653 2652 0
-2653 -2650 0
c Var 'aux586' order represents '4' with '2654'
-2652 2654 0
c Var 'aux586' direct represents '4' with '2655'
2652 -2654 2655 0
-2655 2654 0
-2655 -2652 0
c Var 'aux586' order represents '5' with '2656'
-2654 2656 0
c Var 'aux586' direct represents '5' with '2657'
2654 -2656 2657 0
-2657 2656 0
-2657 -2654 0
c Var 'aux586' order represents '6' with '2658'
-2656 2658 0
c Var 'aux586' direct represents '6' with '2659'
2656 -2658 2659 0
-2659 2658 0
-2659 -2656 0
c Var 'aux586' order represents '7' with '2660'
-2658 2660 0
c Var 'aux586' direct represents '7' with '2661'
2658 -2660 2661 0
-2661 2660 0
-2661 -2658 0
c Var 'aux586' order represents '8' with '2662'
-2660 2662 0
c Var 'aux586' direct represents '8' with '2663'
2660 -2662 2663 0
-2663 2662 0
-2663 -2660 0
c Var 'aux586' order represents '9' with '2664'
-2662 2664 0
c Var 'aux586' direct represents '9' with '2665'
2662 -2664 2665 0
-2665 2664 0
-2665 -2662 0
c Var 'aux586' order represents '10' with '2666'
-2664 2666 0
c Var 'aux586' direct represents '10' with '2667'
2664 -2666 2667 0
-2667 2666 0
-2667 -2664 0
c Var 'aux586' order represents '11' with '2668'
-2666 2668 0
c Var 'aux586' direct represents '11' with '2669'
2666 -2668 2669 0
-2669 2668 0
-2669 -2666 0
c Var 'aux586' order represents '12' with '2670'
-2668 2670 0
c Var 'aux586' direct represents '12' with '2671'
2668 -2670 2671 0
-2671 2670 0
-2671 -2668 0
c Var 'aux586' order represents '13' with '2672'
-2670 2672 0
c Var 'aux586' direct represents '13' with '2673'
2670 -2672 2673 0
-2673 2672 0
-2673 -2670 0
c Var 'aux586' order represents '14' with '2674'
-2672 2674 0
c Var 'aux586' direct represents '14' with '2675'
2672 -2674 2675 0
-2675 2674 0
-2675 -2672 0
c Var 'aux586' order represents '15' with '2676'
-2674 2676 0
c Var 'aux586' direct represents '15' with '2677'
2674 -2676 2677 0
-2677 2676 0
-2677 -2674 0
c Var 'aux586' direct represents '16' with '-2676'
2647 2649 2651 2653 2655 2657 2659 2661 2663 2665 2667 2669 2671 2673 2675 2677 -2676 0
c Encoding variable: aux587 with domain: int(0..20) (representing constraint (aux583 + aux585))
c Both direct and order encoding.
c Var 'aux587' order represents '0' with '2678'
c Var 'aux587' direct represents '0' with '2678'
c Var 'aux587' order represents '1' with '2679'
-2678 2679 0
c Var 'aux587' direct represents '1' with '2680'
2678 -2679 2680 0
-2680 2679 0
-2680 -2678 0
c Var 'aux587' order represents '2' with '2681'
-2679 2681 0
c Var 'aux587' direct represents '2' with '2682'
2679 -2681 2682 0
-2682 2681 0
-2682 -2679 0
c Var 'aux587' order represents '3' with '2683'
-2681 2683 0
c Var 'aux587' direct represents '3' with '2684'
2681 -2683 2684 0
-2684 2683 0
-2684 -2681 0
c Var 'aux587' order represents '4' with '2685'
-2683 2685 0
c Var 'aux587' direct represents '4' with '2686'
2683 -2685 2686 0
-2686 2685 0
-2686 -2683 0
c Var 'aux587' order represents '5' with '2687'
-2685 2687 0
c Var 'aux587' direct represents '5' with '2688'
2685 -2687 2688 0
-2688 2687 0
-2688 -2685 0
c Var 'aux587' order represents '6' with '2689'
-2687 2689 0
c Var 'aux587' direct represents '6' with '2690'
2687 -2689 2690 0
-2690 2689 0
-2690 -2687 0
c Var 'aux587' order represents '7' with '2691'
-2689 2691 0
c Var 'aux587' direct represents '7' with '2692'
2689 -2691 2692 0
-2692 2691 0
-2692 -2689 0
c Var 'aux587' order represents '8' with '2693'
-2691 2693 0
c Var 'aux587' direct represents '8' with '2694'
2691 -2693 2694 0
-2694 2693 0
-2694 -2691 0
c Var 'aux587' order represents '9' with '2695'
-2693 2695 0
c Var 'aux587' direct represents '9' with '2696'
2693 -2695 2696 0
-2696 2695 0
-2696 -2693 0
c Var 'aux587' order represents '10' with '2697'
-2695 2697 0
c Var 'aux587' direct represents '10' with '2698'
2695 -2697 2698 0
-2698 2697 0
-2698 -2695 0
c Var 'aux587' order represents '11' with '2699'
-2697 2699 0
c Var 'aux587' direct represents '11' with '2700'
2697 -2699 2700 0
-2700 2699 0
-2700 -2697 0
c Var 'aux587' order represents '12' with '2701'
-2699 2701 0
c Var 'aux587' direct represents '12' with '2702'
2699 -2701 2702 0
-2702 2701 0
-2702 -2699 0
c Var 'aux587' order represents '13' with '2703'
-2701 2703 0
c Var 'aux587' direct represents '13' with '2704'
2701 -2703 2704 0
-2704 2703 0
-2704 -2701 0
c Var 'aux587' order represents '14' with '2705'
-2703 2705 0
c Var 'aux587' direct represents '14' with '2706'
2703 -2705 2706 0
-2706 2705 0
-2706 -2703 0
c Var 'aux587' order represents '15' with '2707'
-2705 2707 0
c Var 'aux587' direct represents '15' with '2708'
2705 -2707 2708 0
-2708 2707 0
-2708 -2705 0
c Var 'aux587' order represents '16' with '2709'
-2707 2709 0
c Var 'aux587' direct represents '16' with '2710'
2707 -2709 2710 0
-2710 2709 0
-2710 -2707 0
c Var 'aux587' order represents '17' with '2711'
-2709 2711 0
c Var 'aux587' direct represents '17' with '2712'
2709 -2711 2712 0
-2712 2711 0
-2712 -2709 0
c Var 'aux587' order represents '18' with '2713'
-2711 2713 0
c Var 'aux587' direct represents '18' with '2714'
2711 -2713 2714 0
-2714 2713 0
-2714 -2711 0
c Var 'aux587' order represents '19' with '2715'
-2713 2715 0
c Var 'aux587' direct represents '19' with '2716'
2713 -2715 2716 0
-2716 2715 0
-2716 -2713 0
c Var 'aux587' direct represents '20' with '-2715'
2678 2680 2682 2684 2686 2688 2690 2692 2694 2696 2698 2700 2702 2704 2706 2708 2710 2712 2714 2716 -2715 0
c Encoding variable: aux588 with domain: int(0..2) (representing constraint ((agrid_00004_00001=2) + (agrid_00004_00002=2)))
c Both direct and order encoding.
c Var 'aux588' order represents '0' with '2717'
c Var 'aux588' direct represents '0' with '2717'
c Var 'aux588' order represents '1' with '2718'
-2717 2718 0
c Var 'aux588' direct represents '1' with '2719'
2717 -2718 2719 0
-2719 2718 0
-2719 -2717 0
c Var 'aux588' direct represents '2' with '-2718'
2717 2719 -2718 0
c Encoding variable: aux589 with domain: int(0..2) (representing constraint ((agrid_00006_00006=2) + (agrid_00004_00004=2)))
c Both direct and order encoding.
c Var 'aux589' order represents '0' with '2720'
c Var 'aux589' direct represents '0' with '2720'
c Var 'aux589' order represents '1' with '2721'
-2720 2721 0
c Var 'aux589' direct represents '1' with '2722'
2720 -2721 2722 0
-2722 2721 0
-2722 -2720 0
c Var 'aux589' direct represents '2' with '-2721'
2720 2722 -2721 0
c Encoding variable: aux590 with domain: int(0..2) (representing constraint ((agrid_00006_00005=2) + (agrid_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux590' order represents '0' with '2723'
c Var 'aux590' direct represents '0' with '2723'
c Var 'aux590' order represents '1' with '2724'
-2723 2724 0
c Var 'aux590' direct represents '1' with '2725'
2723 -2724 2725 0
-2725 2724 0
-2725 -2723 0
c Var 'aux590' direct represents '2' with '-2724'
2723 2725 -2724 0
c Encoding variable: aux591 with domain: int(0..2) (representing constraint ((agrid_00006_00004=2) + (agrid_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux591' order represents '0' with '2726'
c Var 'aux591' direct represents '0' with '2726'
c Var 'aux591' order represents '1' with '2727'
-2726 2727 0
c Var 'aux591' direct represents '1' with '2728'
2726 -2727 2728 0
-2728 2727 0
-2728 -2726 0
c Var 'aux591' direct represents '2' with '-2727'
2726 2728 -2727 0
c Encoding variable: aux592 with domain: int(0..2) (representing constraint ((agrid_00006_00002=2) + (agrid_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux592' order represents '0' with '2729'
c Var 'aux592' direct represents '0' with '2729'
c Var 'aux592' order represents '1' with '2730'
-2729 2730 0
c Var 'aux592' direct represents '1' with '2731'
2729 -2730 2731 0
-2731 2730 0
-2731 -2729 0
c Var 'aux592' direct represents '2' with '-2730'
2729 2731 -2730 0
c Encoding variable: aux593 with domain: int(0..2) (representing constraint ((agrid_00005_00005=2) + (agrid_00002_00003=2)))
c Both direct and order encoding.
c Var 'aux593' order represents '0' with '2732'
c Var 'aux593' direct represents '0' with '2732'
c Var 'aux593' order represents '1' with '2733'
-2732 2733 0
c Var 'aux593' direct represents '1' with '2734'
2732 -2733 2734 0
-2734 2733 0
-2734 -2732 0
c Var 'aux593' direct represents '2' with '-2733'
2732 2734 -2733 0
c Encoding variable: aux594 with domain: int(0..2) (representing constraint ((agrid_00006_00001=2) + (agrid_00005_00006=2)))
c Both direct and order encoding.
c Var 'aux594' order represents '0' with '2735'
c Var 'aux594' direct represents '0' with '2735'
c Var 'aux594' order represents '1' with '2736'
-2735 2736 0
c Var 'aux594' direct represents '1' with '2737'
2735 -2736 2737 0
-2737 2736 0
-2737 -2735 0
c Var 'aux594' direct represents '2' with '-2736'
2735 2737 -2736 0
c Encoding variable: aux595 with domain: int(0..2) (representing constraint ((agrid_00001_00006=2) + (agrid_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux595' order represents '0' with '2738'
c Var 'aux595' direct represents '0' with '2738'
c Var 'aux595' order represents '1' with '2739'
-2738 2739 0
c Var 'aux595' direct represents '1' with '2740'
2738 -2739 2740 0
-2740 2739 0
-2740 -2738 0
c Var 'aux595' direct represents '2' with '-2739'
2738 2740 -2739 0
c Encoding variable: aux596 with domain: int(0..2) (representing constraint ((agrid_00001_00005=2) + (agrid_00004_00005=2)))
c Both direct and order encoding.
c Var 'aux596' order represents '0' with '2741'
c Var 'aux596' direct represents '0' with '2741'
c Var 'aux596' order represents '1' with '2742'
-2741 2742 0
c Var 'aux596' direct represents '1' with '2743'
2741 -2742 2743 0
-2743 2742 0
-2743 -2741 0
c Var 'aux596' direct represents '2' with '-2742'
2741 2743 -2742 0
c Encoding variable: aux597 with domain: int(0..2) (representing constraint ((agrid_00001_00004=2) + (agrid_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux597' order represents '0' with '2744'
c Var 'aux597' direct represents '0' with '2744'
c Var 'aux597' order represents '1' with '2745'
-2744 2745 0
c Var 'aux597' direct represents '1' with '2746'
2744 -2745 2746 0
-2746 2745 0
-2746 -2744 0
c Var 'aux597' direct represents '2' with '-2745'
2744 2746 -2745 0
c Encoding variable: aux598 with domain: int(0..2) (representing constraint ((agrid_00001_00003=2) + (agrid_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux598' order represents '0' with '2747'
c Var 'aux598' direct represents '0' with '2747'
c Var 'aux598' order represents '1' with '2748'
-2747 2748 0
c Var 'aux598' direct represents '1' with '2749'
2747 -2748 2749 0
-2749 2748 0
-2749 -2747 0
c Var 'aux598' direct represents '2' with '-2748'
2747 2749 -2748 0
c Encoding variable: aux599 with domain: int(0..2) (representing constraint ((agrid_00001_00002=2) + (agrid_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux599' order represents '0' with '2750'
c Var 'aux599' direct represents '0' with '2750'
c Var 'aux599' order represents '1' with '2751'
-2750 2751 0
c Var 'aux599' direct represents '1' with '2752'
2750 -2751 2752 0
-2752 2751 0
-2752 -2750 0
c Var 'aux599' direct represents '2' with '-2751'
2750 2752 -2751 0
c Encoding variable: aux600 with domain: int(0..2) (representing constraint ((agrid_00001_00001=2) + (agrid_00002_00005=2)))
c Both direct and order encoding.
c Var 'aux600' order represents '0' with '2753'
c Var 'aux600' direct represents '0' with '2753'
c Var 'aux600' order represents '1' with '2754'
-2753 2754 0
c Var 'aux600' direct represents '1' with '2755'
2753 -2754 2755 0
-2755 2754 0
-2755 -2753 0
c Var 'aux600' direct represents '2' with '-2754'
2753 2755 -2754 0
c Encoding variable: aux601 with domain: int(0..2) (representing constraint ((agrid_00003_00006=2) + (agrid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux601' order represents '0' with '2756'
c Var 'aux601' direct represents '0' with '2756'
c Var 'aux601' order represents '1' with '2757'
-2756 2757 0
c Var 'aux601' direct represents '1' with '2758'
2756 -2757 2758 0
-2758 2757 0
-2758 -2756 0
c Var 'aux601' direct represents '2' with '-2757'
2756 2758 -2757 0
c Encoding variable: aux602 with domain: int(0..2) (representing constraint ((agrid_00003_00005=2) + (agrid_00004_00003=2)))
c Both direct and order encoding.
c Var 'aux602' order represents '0' with '2759'
c Var 'aux602' direct represents '0' with '2759'
c Var 'aux602' order represents '1' with '2760'
-2759 2760 0
c Var 'aux602' direct represents '1' with '2761'
2759 -2760 2761 0
-2761 2760 0
-2761 -2759 0
c Var 'aux602' direct represents '2' with '-2760'
2759 2761 -2760 0
c Encoding variable: aux603 with domain: int(0..2) (representing constraint ((agrid_00004_00006=2) + (agrid_00002_00006=2)))
c Both direct and order encoding.
c Var 'aux603' order represents '0' with '2762'
c Var 'aux603' direct represents '0' with '2762'
c Var 'aux603' order represents '1' with '2763'
-2762 2763 0
c Var 'aux603' direct represents '1' with '2764'
2762 -2763 2764 0
-2764 2763 0
-2764 -2762 0
c Var 'aux603' direct represents '2' with '-2763'
2762 2764 -2763 0
c Encoding variable: aux604 with domain: int(0..2) (representing constraint ((agrid_00005_00001=2) + (agrid_00002_00001=2)))
c Both direct and order encoding.
c Var 'aux604' order represents '0' with '2765'
c Var 'aux604' direct represents '0' with '2765'
c Var 'aux604' order represents '1' with '2766'
-2765 2766 0
c Var 'aux604' direct represents '1' with '2767'
2765 -2766 2767 0
-2767 2766 0
-2767 -2765 0
c Var 'aux604' direct represents '2' with '-2766'
2765 2767 -2766 0
c Encoding variable: aux605 with domain: int(0..2) (representing constraint ((agrid_00005_00002=2) + (agrid_00005_00003=2)))
c Both direct and order encoding.
c Var 'aux605' order represents '0' with '2768'
c Var 'aux605' direct represents '0' with '2768'
c Var 'aux605' order represents '1' with '2769'
-2768 2769 0
c Var 'aux605' direct represents '1' with '2770'
2768 -2769 2770 0
-2770 2769 0
-2770 -2768 0
c Var 'aux605' direct represents '2' with '-2769'
2768 2770 -2769 0
c Encoding variable: aux606 with domain: int(0..4) (representing constraint (aux598 + aux605))
c Both direct and order encoding.
c Var 'aux606' order represents '0' with '2771'
c Var 'aux606' direct represents '0' with '2771'
c Var 'aux606' order represents '1' with '2772'
-2771 2772 0
c Var 'aux606' direct represents '1' with '2773'
2771 -2772 2773 0
-2773 2772 0
-2773 -2771 0
c Var 'aux606' order represents '2' with '2774'
-2772 2774 0
c Var 'aux606' direct represents '2' with '2775'
2772 -2774 2775 0
-2775 2774 0
-2775 -2772 0
c Var 'aux606' order represents '3' with '2776'
-2774 2776 0
c Var 'aux606' direct represents '3' with '2777'
2774 -2776 2777 0
-2777 2776 0
-2777 -2774 0
c Var 'aux606' direct represents '4' with '-2776'
2771 2773 2775 2777 -2776 0
c Encoding variable: aux607 with domain: int(0..4) (representing constraint (aux591 + aux593))
c Both direct and order encoding.
c Var 'aux607' order represents '0' with '2778'
c Var 'aux607' direct represents '0' with '2778'
c Var 'aux607' order represents '1' with '2779'
-2778 2779 0
c Var 'aux607' direct represents '1' with '2780'
2778 -2779 2780 0
-2780 2779 0
-2780 -2778 0
c Var 'aux607' order represents '2' with '2781'
-2779 2781 0
c Var 'aux607' direct represents '2' with '2782'
2779 -2781 2782 0
-2782 2781 0
-2782 -2779 0
c Var 'aux607' order represents '3' with '2783'
-2781 2783 0
c Var 'aux607' direct represents '3' with '2784'
2781 -2783 2784 0
-2784 2783 0
-2784 -2781 0
c Var 'aux607' direct represents '4' with '-2783'
2778 2780 2782 2784 -2783 0
c Encoding variable: aux608 with domain: int(0..4) (representing constraint (aux588 + aux589))
c Both direct and order encoding.
c Var 'aux608' order represents '0' with '2785'
c Var 'aux608' direct represents '0' with '2785'
c Var 'aux608' order represents '1' with '2786'
-2785 2786 0
c Var 'aux608' direct represents '1' with '2787'
2785 -2786 2787 0
-2787 2786 0
-2787 -2785 0
c Var 'aux608' order represents '2' with '2788'
-2786 2788 0
c Var 'aux608' direct represents '2' with '2789'
2786 -2788 2789 0
-2789 2788 0
-2789 -2786 0
c Var 'aux608' order represents '3' with '2790'
-2788 2790 0
c Var 'aux608' direct represents '3' with '2791'
2788 -2790 2791 0
-2791 2790 0
-2791 -2788 0
c Var 'aux608' direct represents '4' with '-2790'
2785 2787 2789 2791 -2790 0
c Encoding variable: aux609 with domain: int(0..4) (representing constraint (aux590 + aux592))
c Both direct and order encoding.
c Var 'aux609' order represents '0' with '2792'
c Var 'aux609' direct represents '0' with '2792'
c Var 'aux609' order represents '1' with '2793'
-2792 2793 0
c Var 'aux609' direct represents '1' with '2794'
2792 -2793 2794 0
-2794 2793 0
-2794 -2792 0
c Var 'aux609' order represents '2' with '2795'
-2793 2795 0
c Var 'aux609' direct represents '2' with '2796'
2793 -2795 2796 0
-2796 2795 0
-2796 -2793 0
c Var 'aux609' order represents '3' with '2797'
-2795 2797 0
c Var 'aux609' direct represents '3' with '2798'
2795 -2797 2798 0
-2798 2797 0
-2798 -2795 0
c Var 'aux609' direct represents '4' with '-2797'
2792 2794 2796 2798 -2797 0
c Encoding variable: aux610 with domain: int(0..4) (representing constraint (aux603 + aux600))
c Both direct and order encoding.
c Var 'aux610' order represents '0' with '2799'
c Var 'aux610' direct represents '0' with '2799'
c Var 'aux610' order represents '1' with '2800'
-2799 2800 0
c Var 'aux610' direct represents '1' with '2801'
2799 -2800 2801 0
-2801 2800 0
-2801 -2799 0
c Var 'aux610' order represents '2' with '2802'
-2800 2802 0
c Var 'aux610' direct represents '2' with '2803'
2800 -2802 2803 0
-2803 2802 0
-2803 -2800 0
c Var 'aux610' order represents '3' with '2804'
-2802 2804 0
c Var 'aux610' direct represents '3' with '2805'
2802 -2804 2805 0
-2805 2804 0
-2805 -2802 0
c Var 'aux610' direct represents '4' with '-2804'
2799 2801 2803 2805 -2804 0
c Encoding variable: aux611 with domain: int(0..4) (representing constraint (aux595 + aux596))
c Both direct and order encoding.
c Var 'aux611' order represents '0' with '2806'
c Var 'aux611' direct represents '0' with '2806'
c Var 'aux611' order represents '1' with '2807'
-2806 2807 0
c Var 'aux611' direct represents '1' with '2808'
2806 -2807 2808 0
-2808 2807 0
-2808 -2806 0
c Var 'aux611' order represents '2' with '2809'
-2807 2809 0
c Var 'aux611' direct represents '2' with '2810'
2807 -2809 2810 0
-2810 2809 0
-2810 -2807 0
c Var 'aux611' order represents '3' with '2811'
-2809 2811 0
c Var 'aux611' direct represents '3' with '2812'
2809 -2811 2812 0
-2812 2811 0
-2812 -2809 0
c Var 'aux611' direct represents '4' with '-2811'
2806 2808 2810 2812 -2811 0
c Encoding variable: aux612 with domain: int(0..4) (representing constraint (aux597 + aux599))
c Both direct and order encoding.
c Var 'aux612' order represents '0' with '2813'
c Var 'aux612' direct represents '0' with '2813'
c Var 'aux612' order represents '1' with '2814'
-2813 2814 0
c Var 'aux612' direct represents '1' with '2815'
2813 -2814 2815 0
-2815 2814 0
-2815 -2813 0
c Var 'aux612' order represents '2' with '2816'
-2814 2816 0
c Var 'aux612' direct represents '2' with '2817'
2814 -2816 2817 0
-2817 2816 0
-2817 -2814 0
c Var 'aux612' order represents '3' with '2818'
-2816 2818 0
c Var 'aux612' direct represents '3' with '2819'
2816 -2818 2819 0
-2819 2818 0
-2819 -2816 0
c Var 'aux612' direct represents '4' with '-2818'
2813 2815 2817 2819 -2818 0
c Encoding variable: aux613 with domain: int(0..4) (representing constraint (aux601 + aux604))
c Both direct and order encoding.
c Var 'aux613' order represents '0' with '2820'
c Var 'aux613' direct represents '0' with '2820'
c Var 'aux613' order represents '1' with '2821'
-2820 2821 0
c Var 'aux613' direct represents '1' with '2822'
2820 -2821 2822 0
-2822 2821 0
-2822 -2820 0
c Var 'aux613' order represents '2' with '2823'
-2821 2823 0
c Var 'aux613' direct represents '2' with '2824'
2821 -2823 2824 0
-2824 2823 0
-2824 -2821 0
c Var 'aux613' order represents '3' with '2825'
-2823 2825 0
c Var 'aux613' direct represents '3' with '2826'
2823 -2825 2826 0
-2826 2825 0
-2826 -2823 0
c Var 'aux613' direct represents '4' with '-2825'
2820 2822 2824 2826 -2825 0
c Encoding variable: aux614 with domain: int(0..4) (representing constraint (aux602 + aux594))
c Both direct and order encoding.
c Var 'aux614' order represents '0' with '2827'
c Var 'aux614' direct represents '0' with '2827'
c Var 'aux614' order represents '1' with '2828'
-2827 2828 0
c Var 'aux614' direct represents '1' with '2829'
2827 -2828 2829 0
-2829 2828 0
-2829 -2827 0
c Var 'aux614' order represents '2' with '2830'
-2828 2830 0
c Var 'aux614' direct represents '2' with '2831'
2828 -2830 2831 0
-2831 2830 0
-2831 -2828 0
c Var 'aux614' order represents '3' with '2832'
-2830 2832 0
c Var 'aux614' direct represents '3' with '2833'
2830 -2832 2833 0
-2833 2832 0
-2833 -2830 0
c Var 'aux614' direct represents '4' with '-2832'
2827 2829 2831 2833 -2832 0
c Encoding variable: aux615 with domain: int(0..8) (representing constraint (aux611 + aux614))
c Both direct and order encoding.
c Var 'aux615' order represents '0' with '2834'
c Var 'aux615' direct represents '0' with '2834'
c Var 'aux615' order represents '1' with '2835'
-2834 2835 0
c Var 'aux615' direct represents '1' with '2836'
2834 -2835 2836 0
-2836 2835 0
-2836 -2834 0
c Var 'aux615' order represents '2' with '2837'
-2835 2837 0
c Var 'aux615' direct represents '2' with '2838'
2835 -2837 2838 0
-2838 2837 0
-2838 -2835 0
c Var 'aux615' order represents '3' with '2839'
-2837 2839 0
c Var 'aux615' direct represents '3' with '2840'
2837 -2839 2840 0
-2840 2839 0
-2840 -2837 0
c Var 'aux615' order represents '4' with '2841'
-2839 2841 0
c Var 'aux615' direct represents '4' with '2842'
2839 -2841 2842 0
-2842 2841 0
-2842 -2839 0
c Var 'aux615' order represents '5' with '2843'
-2841 2843 0
c Var 'aux615' direct represents '5' with '2844'
2841 -2843 2844 0
-2844 2843 0
-2844 -2841 0
c Var 'aux615' order represents '6' with '2845'
-2843 2845 0
c Var 'aux615' direct represents '6' with '2846'
2843 -2845 2846 0
-2846 2845 0
-2846 -2843 0
c Var 'aux615' order represents '7' with '2847'
-2845 2847 0
c Var 'aux615' direct represents '7' with '2848'
2845 -2847 2848 0
-2848 2847 0
-2848 -2845 0
c Var 'aux615' direct represents '8' with '-2847'
2834 2836 2838 2840 2842 2844 2846 2848 -2847 0
c Encoding variable: aux616 with domain: int(0..8) (representing constraint (aux607 + aux606))
c Both direct and order encoding.
c Var 'aux616' order represents '0' with '2849'
c Var 'aux616' direct represents '0' with '2849'
c Var 'aux616' order represents '1' with '2850'
-2849 2850 0
c Var 'aux616' direct represents '1' with '2851'
2849 -2850 2851 0
-2851 2850 0
-2851 -2849 0
c Var 'aux616' order represents '2' with '2852'
-2850 2852 0
c Var 'aux616' direct represents '2' with '2853'
2850 -2852 2853 0
-2853 2852 0
-2853 -2850 0
c Var 'aux616' order represents '3' with '2854'
-2852 2854 0
c Var 'aux616' direct represents '3' with '2855'
2852 -2854 2855 0
-2855 2854 0
-2855 -2852 0
c Var 'aux616' order represents '4' with '2856'
-2854 2856 0
c Var 'aux616' direct represents '4' with '2857'
2854 -2856 2857 0
-2857 2856 0
-2857 -2854 0
c Var 'aux616' order represents '5' with '2858'
-2856 2858 0
c Var 'aux616' direct represents '5' with '2859'
2856 -2858 2859 0
-2859 2858 0
-2859 -2856 0
c Var 'aux616' order represents '6' with '2860'
-2858 2860 0
c Var 'aux616' direct represents '6' with '2861'
2858 -2860 2861 0
-2861 2860 0
-2861 -2858 0
c Var 'aux616' order represents '7' with '2862'
-2860 2862 0
c Var 'aux616' direct represents '7' with '2863'
2860 -2862 2863 0
-2863 2862 0
-2863 -2860 0
c Var 'aux616' direct represents '8' with '-2862'
2849 2851 2853 2855 2857 2859 2861 2863 -2862 0
c Encoding variable: aux617 with domain: int(0..8) (representing constraint (aux608 + aux610))
c Both direct and order encoding.
c Var 'aux617' order represents '0' with '2864'
c Var 'aux617' direct represents '0' with '2864'
c Var 'aux617' order represents '1' with '2865'
-2864 2865 0
c Var 'aux617' direct represents '1' with '2866'
2864 -2865 2866 0
-2866 2865 0
-2866 -2864 0
c Var 'aux617' order represents '2' with '2867'
-2865 2867 0
c Var 'aux617' direct represents '2' with '2868'
2865 -2867 2868 0
-2868 2867 0
-2868 -2865 0
c Var 'aux617' order represents '3' with '2869'
-2867 2869 0
c Var 'aux617' direct represents '3' with '2870'
2867 -2869 2870 0
-2870 2869 0
-2870 -2867 0
c Var 'aux617' order represents '4' with '2871'
-2869 2871 0
c Var 'aux617' direct represents '4' with '2872'
2869 -2871 2872 0
-2872 2871 0
-2872 -2869 0
c Var 'aux617' order represents '5' with '2873'
-2871 2873 0
c Var 'aux617' direct represents '5' with '2874'
2871 -2873 2874 0
-2874 2873 0
-2874 -2871 0
c Var 'aux617' order represents '6' with '2875'
-2873 2875 0
c Var 'aux617' direct represents '6' with '2876'
2873 -2875 2876 0
-2876 2875 0
-2876 -2873 0
c Var 'aux617' order represents '7' with '2877'
-2875 2877 0
c Var 'aux617' direct represents '7' with '2878'
2875 -2877 2878 0
-2878 2877 0
-2878 -2875 0
c Var 'aux617' direct represents '8' with '-2877'
2864 2866 2868 2870 2872 2874 2876 2878 -2877 0
c Encoding variable: aux618 with domain: int(0..8) (representing constraint (aux609 + aux613))
c Both direct and order encoding.
c Var 'aux618' order represents '0' with '2879'
c Var 'aux618' direct represents '0' with '2879'
c Var 'aux618' order represents '1' with '2880'
-2879 2880 0
c Var 'aux618' direct represents '1' with '2881'
2879 -2880 2881 0
-2881 2880 0
-2881 -2879 0
c Var 'aux618' order represents '2' with '2882'
-2880 2882 0
c Var 'aux618' direct represents '2' with '2883'
2880 -2882 2883 0
-2883 2882 0
-2883 -2880 0
c Var 'aux618' order represents '3' with '2884'
-2882 2884 0
c Var 'aux618' direct represents '3' with '2885'
2882 -2884 2885 0
-2885 2884 0
-2885 -2882 0
c Var 'aux618' order represents '4' with '2886'
-2884 2886 0
c Var 'aux618' direct represents '4' with '2887'
2884 -2886 2887 0
-2887 2886 0
-2887 -2884 0
c Var 'aux618' order represents '5' with '2888'
-2886 2888 0
c Var 'aux618' direct represents '5' with '2889'
2886 -2888 2889 0
-2889 2888 0
-2889 -2886 0
c Var 'aux618' order represents '6' with '2890'
-2888 2890 0
c Var 'aux618' direct represents '6' with '2891'
2888 -2890 2891 0
-2891 2890 0
-2891 -2888 0
c Var 'aux618' order represents '7' with '2892'
-2890 2892 0
c Var 'aux618' direct represents '7' with '2893'
2890 -2892 2893 0
-2893 2892 0
-2893 -2890 0
c Var 'aux618' direct represents '8' with '-2892'
2879 2881 2883 2885 2887 2889 2891 2893 -2892 0
c Encoding variable: aux619 with domain: int(0..12) (representing constraint (aux612 + aux618))
c Both direct and order encoding.
c Var 'aux619' order represents '0' with '2894'
c Var 'aux619' direct represents '0' with '2894'
c Var 'aux619' order represents '1' with '2895'
-2894 2895 0
c Var 'aux619' direct represents '1' with '2896'
2894 -2895 2896 0
-2896 2895 0
-2896 -2894 0
c Var 'aux619' order represents '2' with '2897'
-2895 2897 0
c Var 'aux619' direct represents '2' with '2898'
2895 -2897 2898 0
-2898 2897 0
-2898 -2895 0
c Var 'aux619' order represents '3' with '2899'
-2897 2899 0
c Var 'aux619' direct represents '3' with '2900'
2897 -2899 2900 0
-2900 2899 0
-2900 -2897 0
c Var 'aux619' order represents '4' with '2901'
-2899 2901 0
c Var 'aux619' direct represents '4' with '2902'
2899 -2901 2902 0
-2902 2901 0
-2902 -2899 0
c Var 'aux619' order represents '5' with '2903'
-2901 2903 0
c Var 'aux619' direct represents '5' with '2904'
2901 -2903 2904 0
-2904 2903 0
-2904 -2901 0
c Var 'aux619' order represents '6' with '2905'
-2903 2905 0
c Var 'aux619' direct represents '6' with '2906'
2903 -2905 2906 0
-2906 2905 0
-2906 -2903 0
c Var 'aux619' order represents '7' with '2907'
-2905 2907 0
c Var 'aux619' direct represents '7' with '2908'
2905 -2907 2908 0
-2908 2907 0
-2908 -2905 0
c Var 'aux619' order represents '8' with '2909'
-2907 2909 0
c Var 'aux619' direct represents '8' with '2910'
2907 -2909 2910 0
-2910 2909 0
-2910 -2907 0
c Var 'aux619' order represents '9' with '2911'
-2909 2911 0
c Var 'aux619' direct represents '9' with '2912'
2909 -2911 2912 0
-2912 2911 0
-2912 -2909 0
c Var 'aux619' order represents '10' with '2913'
-2911 2913 0
c Var 'aux619' direct represents '10' with '2914'
2911 -2913 2914 0
-2914 2913 0
-2914 -2911 0
c Var 'aux619' order represents '11' with '2915'
-2913 2915 0
c Var 'aux619' direct represents '11' with '2916'
2913 -2915 2916 0
-2916 2915 0
-2916 -2913 0
c Var 'aux619' direct represents '12' with '-2915'
2894 2896 2898 2900 2902 2904 2906 2908 2910 2912 2914 2916 -2915 0
c Encoding variable: aux620 with domain: int(0..16) (representing constraint (aux616 + aux615))
c Both direct and order encoding.
c Var 'aux620' order represents '0' with '2917'
c Var 'aux620' direct represents '0' with '2917'
c Var 'aux620' order represents '1' with '2918'
-2917 2918 0
c Var 'aux620' direct represents '1' with '2919'
2917 -2918 2919 0
-2919 2918 0
-2919 -2917 0
c Var 'aux620' order represents '2' with '2920'
-2918 2920 0
c Var 'aux620' direct represents '2' with '2921'
2918 -2920 2921 0
-2921 2920 0
-2921 -2918 0
c Var 'aux620' order represents '3' with '2922'
-2920 2922 0
c Var 'aux620' direct represents '3' with '2923'
2920 -2922 2923 0
-2923 2922 0
-2923 -2920 0
c Var 'aux620' order represents '4' with '2924'
-2922 2924 0
c Var 'aux620' direct represents '4' with '2925'
2922 -2924 2925 0
-2925 2924 0
-2925 -2922 0
c Var 'aux620' order represents '5' with '2926'
-2924 2926 0
c Var 'aux620' direct represents '5' with '2927'
2924 -2926 2927 0
-2927 2926 0
-2927 -2924 0
c Var 'aux620' order represents '6' with '2928'
-2926 2928 0
c Var 'aux620' direct represents '6' with '2929'
2926 -2928 2929 0
-2929 2928 0
-2929 -2926 0
c Var 'aux620' order represents '7' with '2930'
-2928 2930 0
c Var 'aux620' direct represents '7' with '2931'
2928 -2930 2931 0
-2931 2930 0
-2931 -2928 0
c Var 'aux620' order represents '8' with '2932'
-2930 2932 0
c Var 'aux620' direct represents '8' with '2933'
2930 -2932 2933 0
-2933 2932 0
-2933 -2930 0
c Var 'aux620' order represents '9' with '2934'
-2932 2934 0
c Var 'aux620' direct represents '9' with '2935'
2932 -2934 2935 0
-2935 2934 0
-2935 -2932 0
c Var 'aux620' order represents '10' with '2936'
-2934 2936 0
c Var 'aux620' direct represents '10' with '2937'
2934 -2936 2937 0
-2937 2936 0
-2937 -2934 0
c Var 'aux620' order represents '11' with '2938'
-2936 2938 0
c Var 'aux620' direct represents '11' with '2939'
2936 -2938 2939 0
-2939 2938 0
-2939 -2936 0
c Var 'aux620' order represents '12' with '2940'
-2938 2940 0
c Var 'aux620' direct represents '12' with '2941'
2938 -2940 2941 0
-2941 2940 0
-2941 -2938 0
c Var 'aux620' order represents '13' with '2942'
-2940 2942 0
c Var 'aux620' direct represents '13' with '2943'
2940 -2942 2943 0
-2943 2942 0
-2943 -2940 0
c Var 'aux620' order represents '14' with '2944'
-2942 2944 0
c Var 'aux620' direct represents '14' with '2945'
2942 -2944 2945 0
-2945 2944 0
-2945 -2942 0
c Var 'aux620' order represents '15' with '2946'
-2944 2946 0
c Var 'aux620' direct represents '15' with '2947'
2944 -2946 2947 0
-2947 2946 0
-2947 -2944 0
c Var 'aux620' direct represents '16' with '-2946'
2917 2919 2921 2923 2925 2927 2929 2931 2933 2935 2937 2939 2941 2943 2945 2947 -2946 0
c Encoding variable: aux621 with domain: int(0..20) (representing constraint (aux617 + aux619))
c Both direct and order encoding.
c Var 'aux621' order represents '0' with '2948'
c Var 'aux621' direct represents '0' with '2948'
c Var 'aux621' order represents '1' with '2949'
-2948 2949 0
c Var 'aux621' direct represents '1' with '2950'
2948 -2949 2950 0
-2950 2949 0
-2950 -2948 0
c Var 'aux621' order represents '2' with '2951'
-2949 2951 0
c Var 'aux621' direct represents '2' with '2952'
2949 -2951 2952 0
-2952 2951 0
-2952 -2949 0
c Var 'aux621' order represents '3' with '2953'
-2951 2953 0
c Var 'aux621' direct represents '3' with '2954'
2951 -2953 2954 0
-2954 2953 0
-2954 -2951 0
c Var 'aux621' order represents '4' with '2955'
-2953 2955 0
c Var 'aux621' direct represents '4' with '2956'
2953 -2955 2956 0
-2956 2955 0
-2956 -2953 0
c Var 'aux621' order represents '5' with '2957'
-2955 2957 0
c Var 'aux621' direct represents '5' with '2958'
2955 -2957 2958 0
-2958 2957 0
-2958 -2955 0
c Var 'aux621' order represents '6' with '2959'
-2957 2959 0
c Var 'aux621' direct represents '6' with '2960'
2957 -2959 2960 0
-2960 2959 0
-2960 -2957 0
c Var 'aux621' order represents '7' with '2961'
-2959 2961 0
c Var 'aux621' direct represents '7' with '2962'
2959 -2961 2962 0
-2962 2961 0
-2962 -2959 0
c Var 'aux621' order represents '8' with '2963'
-2961 2963 0
c Var 'aux621' direct represents '8' with '2964'
2961 -2963 2964 0
-2964 2963 0
-2964 -2961 0
c Var 'aux621' order represents '9' with '2965'
-2963 2965 0
c Var 'aux621' direct represents '9' with '2966'
2963 -2965 2966 0
-2966 2965 0
-2966 -2963 0
c Var 'aux621' order represents '10' with '2967'
-2965 2967 0
c Var 'aux621' direct represents '10' with '2968'
2965 -2967 2968 0
-2968 2967 0
-2968 -2965 0
c Var 'aux621' order represents '11' with '2969'
-2967 2969 0
c Var 'aux621' direct represents '11' with '2970'
2967 -2969 2970 0
-2970 2969 0
-2970 -2967 0
c Var 'aux621' order represents '12' with '2971'
-2969 2971 0
c Var 'aux621' direct represents '12' with '2972'
2969 -2971 2972 0
-2972 2971 0
-2972 -2969 0
c Var 'aux621' order represents '13' with '2973'
-2971 2973 0
c Var 'aux621' direct represents '13' with '2974'
2971 -2973 2974 0
-2974 2973 0
-2974 -2971 0
c Var 'aux621' order represents '14' with '2975'
-2973 2975 0
c Var 'aux621' direct represents '14' with '2976'
2973 -2975 2976 0
-2976 2975 0
-2976 -2973 0
c Var 'aux621' order represents '15' with '2977'
-2975 2977 0
c Var 'aux621' direct represents '15' with '2978'
2975 -2977 2978 0
-2978 2977 0
-2978 -2975 0
c Var 'aux621' order represents '16' with '2979'
-2977 2979 0
c Var 'aux621' direct represents '16' with '2980'
2977 -2979 2980 0
-2980 2979 0
-2980 -2977 0
c Var 'aux621' order represents '17' with '2981'
-2979 2981 0
c Var 'aux621' direct represents '17' with '2982'
2979 -2981 2982 0
-2982 2981 0
-2982 -2979 0
c Var 'aux621' order represents '18' with '2983'
-2981 2983 0
c Var 'aux621' direct represents '18' with '2984'
2981 -2983 2984 0
-2984 2983 0
-2984 -2981 0
c Var 'aux621' order represents '19' with '2985'
-2983 2985 0
c Var 'aux621' direct represents '19' with '2986'
2983 -2985 2986 0
-2986 2985 0
-2986 -2983 0
c Var 'aux621' direct represents '20' with '-2985'
2948 2950 2952 2954 2956 2958 2960 2962 2964 2966 2968 2970 2972 2974 2976 2978 2980 2982 2984 2986 -2985 0
c Encoding variable: aux622 with domain: int(0..2) (representing constraint ((agrid_00004_00001=3) + (agrid_00004_00002=3)))
c Both direct and order encoding.
c Var 'aux622' order represents '0' with '2987'
c Var 'aux622' direct represents '0' with '2987'
c Var 'aux622' order represents '1' with '2988'
-2987 2988 0
c Var 'aux622' direct represents '1' with '2989'
2987 -2988 2989 0
-2989 2988 0
-2989 -2987 0
c Var 'aux622' direct represents '2' with '-2988'
2987 2989 -2988 0
c Encoding variable: aux623 with domain: int(0..2) (representing constraint ((agrid_00006_00006=3) + (agrid_00004_00004=3)))
c Both direct and order encoding.
c Var 'aux623' order represents '0' with '2990'
c Var 'aux623' direct represents '0' with '2990'
c Var 'aux623' order represents '1' with '2991'
-2990 2991 0
c Var 'aux623' direct represents '1' with '2992'
2990 -2991 2992 0
-2992 2991 0
-2992 -2990 0
c Var 'aux623' direct represents '2' with '-2991'
2990 2992 -2991 0
c Encoding variable: aux624 with domain: int(0..2) (representing constraint ((agrid_00006_00005=3) + (agrid_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux624' order represents '0' with '2993'
c Var 'aux624' direct represents '0' with '2993'
c Var 'aux624' order represents '1' with '2994'
-2993 2994 0
c Var 'aux624' direct represents '1' with '2995'
2993 -2994 2995 0
-2995 2994 0
-2995 -2993 0
c Var 'aux624' direct represents '2' with '-2994'
2993 2995 -2994 0
c Encoding variable: aux625 with domain: int(0..2) (representing constraint ((agrid_00006_00004=3) + (agrid_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux625' order represents '0' with '2996'
c Var 'aux625' direct represents '0' with '2996'
c Var 'aux625' order represents '1' with '2997'
-2996 2997 0
c Var 'aux625' direct represents '1' with '2998'
2996 -2997 2998 0
-2998 2997 0
-2998 -2996 0
c Var 'aux625' direct represents '2' with '-2997'
2996 2998 -2997 0
c Encoding variable: aux626 with domain: int(0..2) (representing constraint ((agrid_00006_00002=3) + (agrid_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux626' order represents '0' with '2999'
c Var 'aux626' direct represents '0' with '2999'
c Var 'aux626' order represents '1' with '3000'
-2999 3000 0
c Var 'aux626' direct represents '1' with '3001'
2999 -3000 3001 0
-3001 3000 0
-3001 -2999 0
c Var 'aux626' direct represents '2' with '-3000'
2999 3001 -3000 0
c Encoding variable: aux627 with domain: int(0..2) (representing constraint ((agrid_00005_00005=3) + (agrid_00002_00003=3)))
c Both direct and order encoding.
c Var 'aux627' order represents '0' with '3002'
c Var 'aux627' direct represents '0' with '3002'
c Var 'aux627' order represents '1' with '3003'
-3002 3003 0
c Var 'aux627' direct represents '1' with '3004'
3002 -3003 3004 0
-3004 3003 0
-3004 -3002 0
c Var 'aux627' direct represents '2' with '-3003'
3002 3004 -3003 0
c Encoding variable: aux628 with domain: int(0..2) (representing constraint ((agrid_00006_00001=3) + (agrid_00005_00006=3)))
c Both direct and order encoding.
c Var 'aux628' order represents '0' with '3005'
c Var 'aux628' direct represents '0' with '3005'
c Var 'aux628' order represents '1' with '3006'
-3005 3006 0
c Var 'aux628' direct represents '1' with '3007'
3005 -3006 3007 0
-3007 3006 0
-3007 -3005 0
c Var 'aux628' direct represents '2' with '-3006'
3005 3007 -3006 0
c Encoding variable: aux629 with domain: int(0..2) (representing constraint ((agrid_00001_00006=3) + (agrid_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux629' order represents '0' with '3008'
c Var 'aux629' direct represents '0' with '3008'
c Var 'aux629' order represents '1' with '3009'
-3008 3009 0
c Var 'aux629' direct represents '1' with '3010'
3008 -3009 3010 0
-3010 3009 0
-3010 -3008 0
c Var 'aux629' direct represents '2' with '-3009'
3008 3010 -3009 0
c Encoding variable: aux630 with domain: int(0..2) (representing constraint ((agrid_00001_00005=3) + (agrid_00004_00005=3)))
c Both direct and order encoding.
c Var 'aux630' order represents '0' with '3011'
c Var 'aux630' direct represents '0' with '3011'
c Var 'aux630' order represents '1' with '3012'
-3011 3012 0
c Var 'aux630' direct represents '1' with '3013'
3011 -3012 3013 0
-3013 3012 0
-3013 -3011 0
c Var 'aux630' direct represents '2' with '-3012'
3011 3013 -3012 0
c Encoding variable: aux631 with domain: int(0..2) (representing constraint ((agrid_00001_00004=3) + (agrid_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux631' order represents '0' with '3014'
c Var 'aux631' direct represents '0' with '3014'
c Var 'aux631' order represents '1' with '3015'
-3014 3015 0
c Var 'aux631' direct represents '1' with '3016'
3014 -3015 3016 0
-3016 3015 0
-3016 -3014 0
c Var 'aux631' direct represents '2' with '-3015'
3014 3016 -3015 0
c Encoding variable: aux632 with domain: int(0..2) (representing constraint ((agrid_00001_00003=3) + (agrid_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux632' order represents '0' with '3017'
c Var 'aux632' direct represents '0' with '3017'
c Var 'aux632' order represents '1' with '3018'
-3017 3018 0
c Var 'aux632' direct represents '1' with '3019'
3017 -3018 3019 0
-3019 3018 0
-3019 -3017 0
c Var 'aux632' direct represents '2' with '-3018'
3017 3019 -3018 0
c Encoding variable: aux633 with domain: int(0..2) (representing constraint ((agrid_00001_00002=3) + (agrid_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux633' order represents '0' with '3020'
c Var 'aux633' direct represents '0' with '3020'
c Var 'aux633' order represents '1' with '3021'
-3020 3021 0
c Var 'aux633' direct represents '1' with '3022'
3020 -3021 3022 0
-3022 3021 0
-3022 -3020 0
c Var 'aux633' direct represents '2' with '-3021'
3020 3022 -3021 0
c Encoding variable: aux634 with domain: int(0..2) (representing constraint ((agrid_00001_00001=3) + (agrid_00002_00005=3)))
c Both direct and order encoding.
c Var 'aux634' order represents '0' with '3023'
c Var 'aux634' direct represents '0' with '3023'
c Var 'aux634' order represents '1' with '3024'
-3023 3024 0
c Var 'aux634' direct represents '1' with '3025'
3023 -3024 3025 0
-3025 3024 0
-3025 -3023 0
c Var 'aux634' direct represents '2' with '-3024'
3023 3025 -3024 0
c Encoding variable: aux635 with domain: int(0..2) (representing constraint ((agrid_00003_00006=3) + (agrid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux635' order represents '0' with '3026'
c Var 'aux635' direct represents '0' with '3026'
c Var 'aux635' order represents '1' with '3027'
-3026 3027 0
c Var 'aux635' direct represents '1' with '3028'
3026 -3027 3028 0
-3028 3027 0
-3028 -3026 0
c Var 'aux635' direct represents '2' with '-3027'
3026 3028 -3027 0
c Encoding variable: aux636 with domain: int(0..2) (representing constraint ((agrid_00003_00005=3) + (agrid_00004_00003=3)))
c Both direct and order encoding.
c Var 'aux636' order represents '0' with '3029'
c Var 'aux636' direct represents '0' with '3029'
c Var 'aux636' order represents '1' with '3030'
-3029 3030 0
c Var 'aux636' direct represents '1' with '3031'
3029 -3030 3031 0
-3031 3030 0
-3031 -3029 0
c Var 'aux636' direct represents '2' with '-3030'
3029 3031 -3030 0
c Encoding variable: aux637 with domain: int(0..2) (representing constraint ((agrid_00004_00006=3) + (agrid_00002_00006=3)))
c Both direct and order encoding.
c Var 'aux637' order represents '0' with '3032'
c Var 'aux637' direct represents '0' with '3032'
c Var 'aux637' order represents '1' with '3033'
-3032 3033 0
c Var 'aux637' direct represents '1' with '3034'
3032 -3033 3034 0
-3034 3033 0
-3034 -3032 0
c Var 'aux637' direct represents '2' with '-3033'
3032 3034 -3033 0
c Encoding variable: aux638 with domain: int(0..2) (representing constraint ((agrid_00005_00001=3) + (agrid_00002_00001=3)))
c Both direct and order encoding.
c Var 'aux638' order represents '0' with '3035'
c Var 'aux638' direct represents '0' with '3035'
c Var 'aux638' order represents '1' with '3036'
-3035 3036 0
c Var 'aux638' direct represents '1' with '3037'
3035 -3036 3037 0
-3037 3036 0
-3037 -3035 0
c Var 'aux638' direct represents '2' with '-3036'
3035 3037 -3036 0
c Encoding variable: aux639 with domain: int(0..2) (representing constraint ((agrid_00005_00002=3) + (agrid_00005_00003=3)))
c Both direct and order encoding.
c Var 'aux639' order represents '0' with '3038'
c Var 'aux639' direct represents '0' with '3038'
c Var 'aux639' order represents '1' with '3039'
-3038 3039 0
c Var 'aux639' direct represents '1' with '3040'
3038 -3039 3040 0
-3040 3039 0
-3040 -3038 0
c Var 'aux639' direct represents '2' with '-3039'
3038 3040 -3039 0
c Encoding variable: aux640 with domain: int(0..4) (representing constraint (aux632 + aux639))
c Both direct and order encoding.
c Var 'aux640' order represents '0' with '3041'
c Var 'aux640' direct represents '0' with '3041'
c Var 'aux640' order represents '1' with '3042'
-3041 3042 0
c Var 'aux640' direct represents '1' with '3043'
3041 -3042 3043 0
-3043 3042 0
-3043 -3041 0
c Var 'aux640' order represents '2' with '3044'
-3042 3044 0
c Var 'aux640' direct represents '2' with '3045'
3042 -3044 3045 0
-3045 3044 0
-3045 -3042 0
c Var 'aux640' order represents '3' with '3046'
-3044 3046 0
c Var 'aux640' direct represents '3' with '3047'
3044 -3046 3047 0
-3047 3046 0
-3047 -3044 0
c Var 'aux640' direct represents '4' with '-3046'
3041 3043 3045 3047 -3046 0
c Encoding variable: aux641 with domain: int(0..4) (representing constraint (aux625 + aux627))
c Both direct and order encoding.
c Var 'aux641' order represents '0' with '3048'
c Var 'aux641' direct represents '0' with '3048'
c Var 'aux641' order represents '1' with '3049'
-3048 3049 0
c Var 'aux641' direct represents '1' with '3050'
3048 -3049 3050 0
-3050 3049 0
-3050 -3048 0
c Var 'aux641' order represents '2' with '3051'
-3049 3051 0
c Var 'aux641' direct represents '2' with '3052'
3049 -3051 3052 0
-3052 3051 0
-3052 -3049 0
c Var 'aux641' order represents '3' with '3053'
-3051 3053 0
c Var 'aux641' direct represents '3' with '3054'
3051 -3053 3054 0
-3054 3053 0
-3054 -3051 0
c Var 'aux641' direct represents '4' with '-3053'
3048 3050 3052 3054 -3053 0
c Encoding variable: aux642 with domain: int(0..4) (representing constraint (aux622 + aux623))
c Both direct and order encoding.
c Var 'aux642' order represents '0' with '3055'
c Var 'aux642' direct represents '0' with '3055'
c Var 'aux642' order represents '1' with '3056'
-3055 3056 0
c Var 'aux642' direct represents '1' with '3057'
3055 -3056 3057 0
-3057 3056 0
-3057 -3055 0
c Var 'aux642' order represents '2' with '3058'
-3056 3058 0
c Var 'aux642' direct represents '2' with '3059'
3056 -3058 3059 0
-3059 3058 0
-3059 -3056 0
c Var 'aux642' order represents '3' with '3060'
-3058 3060 0
c Var 'aux642' direct represents '3' with '3061'
3058 -3060 3061 0
-3061 3060 0
-3061 -3058 0
c Var 'aux642' direct represents '4' with '-3060'
3055 3057 3059 3061 -3060 0
c Encoding variable: aux643 with domain: int(0..4) (representing constraint (aux624 + aux626))
c Both direct and order encoding.
c Var 'aux643' order represents '0' with '3062'
c Var 'aux643' direct represents '0' with '3062'
c Var 'aux643' order represents '1' with '3063'
-3062 3063 0
c Var 'aux643' direct represents '1' with '3064'
3062 -3063 3064 0
-3064 3063 0
-3064 -3062 0
c Var 'aux643' order represents '2' with '3065'
-3063 3065 0
c Var 'aux643' direct represents '2' with '3066'
3063 -3065 3066 0
-3066 3065 0
-3066 -3063 0
c Var 'aux643' order represents '3' with '3067'
-3065 3067 0
c Var 'aux643' direct represents '3' with '3068'
3065 -3067 3068 0
-3068 3067 0
-3068 -3065 0
c Var 'aux643' direct represents '4' with '-3067'
3062 3064 3066 3068 -3067 0
c Encoding variable: aux644 with domain: int(0..4) (representing constraint (aux637 + aux634))
c Both direct and order encoding.
c Var 'aux644' order represents '0' with '3069'
c Var 'aux644' direct represents '0' with '3069'
c Var 'aux644' order represents '1' with '3070'
-3069 3070 0
c Var 'aux644' direct represents '1' with '3071'
3069 -3070 3071 0
-3071 3070 0
-3071 -3069 0
c Var 'aux644' order represents '2' with '3072'
-3070 3072 0
c Var 'aux644' direct represents '2' with '3073'
3070 -3072 3073 0
-3073 3072 0
-3073 -3070 0
c Var 'aux644' order represents '3' with '3074'
-3072 3074 0
c Var 'aux644' direct represents '3' with '3075'
3072 -3074 3075 0
-3075 3074 0
-3075 -3072 0
c Var 'aux644' direct represents '4' with '-3074'
3069 3071 3073 3075 -3074 0
c Encoding variable: aux645 with domain: int(0..4) (representing constraint (aux629 + aux630))
c Both direct and order encoding.
c Var 'aux645' order represents '0' with '3076'
c Var 'aux645' direct represents '0' with '3076'
c Var 'aux645' order represents '1' with '3077'
-3076 3077 0
c Var 'aux645' direct represents '1' with '3078'
3076 -3077 3078 0
-3078 3077 0
-3078 -3076 0
c Var 'aux645' order represents '2' with '3079'
-3077 3079 0
c Var 'aux645' direct represents '2' with '3080'
3077 -3079 3080 0
-3080 3079 0
-3080 -3077 0
c Var 'aux645' order represents '3' with '3081'
-3079 3081 0
c Var 'aux645' direct represents '3' with '3082'
3079 -3081 3082 0
-3082 3081 0
-3082 -3079 0
c Var 'aux645' direct represents '4' with '-3081'
3076 3078 3080 3082 -3081 0
c Encoding variable: aux646 with domain: int(0..4) (representing constraint (aux631 + aux633))
c Both direct and order encoding.
c Var 'aux646' order represents '0' with '3083'
c Var 'aux646' direct represents '0' with '3083'
c Var 'aux646' order represents '1' with '3084'
-3083 3084 0
c Var 'aux646' direct represents '1' with '3085'
3083 -3084 3085 0
-3085 3084 0
-3085 -3083 0
c Var 'aux646' order represents '2' with '3086'
-3084 3086 0
c Var 'aux646' direct represents '2' with '3087'
3084 -3086 3087 0
-3087 3086 0
-3087 -3084 0
c Var 'aux646' order represents '3' with '3088'
-3086 3088 0
c Var 'aux646' direct represents '3' with '3089'
3086 -3088 3089 0
-3089 3088 0
-3089 -3086 0
c Var 'aux646' direct represents '4' with '-3088'
3083 3085 3087 3089 -3088 0
c Encoding variable: aux647 with domain: int(0..4) (representing constraint (aux635 + aux638))
c Both direct and order encoding.
c Var 'aux647' order represents '0' with '3090'
c Var 'aux647' direct represents '0' with '3090'
c Var 'aux647' order represents '1' with '3091'
-3090 3091 0
c Var 'aux647' direct represents '1' with '3092'
3090 -3091 3092 0
-3092 3091 0
-3092 -3090 0
c Var 'aux647' order represents '2' with '3093'
-3091 3093 0
c Var 'aux647' direct represents '2' with '3094'
3091 -3093 3094 0
-3094 3093 0
-3094 -3091 0
c Var 'aux647' order represents '3' with '3095'
-3093 3095 0
c Var 'aux647' direct represents '3' with '3096'
3093 -3095 3096 0
-3096 3095 0
-3096 -3093 0
c Var 'aux647' direct represents '4' with '-3095'
3090 3092 3094 3096 -3095 0
c Encoding variable: aux648 with domain: int(0..4) (representing constraint (aux636 + aux628))
c Both direct and order encoding.
c Var 'aux648' order represents '0' with '3097'
c Var 'aux648' direct represents '0' with '3097'
c Var 'aux648' order represents '1' with '3098'
-3097 3098 0
c Var 'aux648' direct represents '1' with '3099'
3097 -3098 3099 0
-3099 3098 0
-3099 -3097 0
c Var 'aux648' order represents '2' with '3100'
-3098 3100 0
c Var 'aux648' direct represents '2' with '3101'
3098 -3100 3101 0
-3101 3100 0
-3101 -3098 0
c Var 'aux648' order represents '3' with '3102'
-3100 3102 0
c Var 'aux648' direct represents '3' with '3103'
3100 -3102 3103 0
-3103 3102 0
-3103 -3100 0
c Var 'aux648' direct represents '4' with '-3102'
3097 3099 3101 3103 -3102 0
c Encoding variable: aux649 with domain: int(0..8) (representing constraint (aux645 + aux648))
c Both direct and order encoding.
c Var 'aux649' order represents '0' with '3104'
c Var 'aux649' direct represents '0' with '3104'
c Var 'aux649' order represents '1' with '3105'
-3104 3105 0
c Var 'aux649' direct represents '1' with '3106'
3104 -3105 3106 0
-3106 3105 0
-3106 -3104 0
c Var 'aux649' order represents '2' with '3107'
-3105 3107 0
c Var 'aux649' direct represents '2' with '3108'
3105 -3107 3108 0
-3108 3107 0
-3108 -3105 0
c Var 'aux649' order represents '3' with '3109'
-3107 3109 0
c Var 'aux649' direct represents '3' with '3110'
3107 -3109 3110 0
-3110 3109 0
-3110 -3107 0
c Var 'aux649' order represents '4' with '3111'
-3109 3111 0
c Var 'aux649' direct represents '4' with '3112'
3109 -3111 3112 0
-3112 3111 0
-3112 -3109 0
c Var 'aux649' order represents '5' with '3113'
-3111 3113 0
c Var 'aux649' direct represents '5' with '3114'
3111 -3113 3114 0
-3114 3113 0
-3114 -3111 0
c Var 'aux649' order represents '6' with '3115'
-3113 3115 0
c Var 'aux649' direct represents '6' with '3116'
3113 -3115 3116 0
-3116 3115 0
-3116 -3113 0
c Var 'aux649' order represents '7' with '3117'
-3115 3117 0
c Var 'aux649' direct represents '7' with '3118'
3115 -3117 3118 0
-3118 3117 0
-3118 -3115 0
c Var 'aux649' direct represents '8' with '-3117'
3104 3106 3108 3110 3112 3114 3116 3118 -3117 0
c Encoding variable: aux650 with domain: int(0..8) (representing constraint (aux641 + aux640))
c Both direct and order encoding.
c Var 'aux650' order represents '0' with '3119'
c Var 'aux650' direct represents '0' with '3119'
c Var 'aux650' order represents '1' with '3120'
-3119 3120 0
c Var 'aux650' direct represents '1' with '3121'
3119 -3120 3121 0
-3121 3120 0
-3121 -3119 0
c Var 'aux650' order represents '2' with '3122'
-3120 3122 0
c Var 'aux650' direct represents '2' with '3123'
3120 -3122 3123 0
-3123 3122 0
-3123 -3120 0
c Var 'aux650' order represents '3' with '3124'
-3122 3124 0
c Var 'aux650' direct represents '3' with '3125'
3122 -3124 3125 0
-3125 3124 0
-3125 -3122 0
c Var 'aux650' order represents '4' with '3126'
-3124 3126 0
c Var 'aux650' direct represents '4' with '3127'
3124 -3126 3127 0
-3127 3126 0
-3127 -3124 0
c Var 'aux650' order represents '5' with '3128'
-3126 3128 0
c Var 'aux650' direct represents '5' with '3129'
3126 -3128 3129 0
-3129 3128 0
-3129 -3126 0
c Var 'aux650' order represents '6' with '3130'
-3128 3130 0
c Var 'aux650' direct represents '6' with '3131'
3128 -3130 3131 0
-3131 3130 0
-3131 -3128 0
c Var 'aux650' order represents '7' with '3132'
-3130 3132 0
c Var 'aux650' direct represents '7' with '3133'
3130 -3132 3133 0
-3133 3132 0
-3133 -3130 0
c Var 'aux650' direct represents '8' with '-3132'
3119 3121 3123 3125 3127 3129 3131 3133 -3132 0
c Encoding variable: aux651 with domain: int(0..8) (representing constraint (aux642 + aux644))
c Both direct and order encoding.
c Var 'aux651' order represents '0' with '3134'
c Var 'aux651' direct represents '0' with '3134'
c Var 'aux651' order represents '1' with '3135'
-3134 3135 0
c Var 'aux651' direct represents '1' with '3136'
3134 -3135 3136 0
-3136 3135 0
-3136 -3134 0
c Var 'aux651' order represents '2' with '3137'
-3135 3137 0
c Var 'aux651' direct represents '2' with '3138'
3135 -3137 3138 0
-3138 3137 0
-3138 -3135 0
c Var 'aux651' order represents '3' with '3139'
-3137 3139 0
c Var 'aux651' direct represents '3' with '3140'
3137 -3139 3140 0
-3140 3139 0
-3140 -3137 0
c Var 'aux651' order represents '4' with '3141'
-3139 3141 0
c Var 'aux651' direct represents '4' with '3142'
3139 -3141 3142 0
-3142 3141 0
-3142 -3139 0
c Var 'aux651' order represents '5' with '3143'
-3141 3143 0
c Var 'aux651' direct represents '5' with '3144'
3141 -3143 3144 0
-3144 3143 0
-3144 -3141 0
c Var 'aux651' order represents '6' with '3145'
-3143 3145 0
c Var 'aux651' direct represents '6' with '3146'
3143 -3145 3146 0
-3146 3145 0
-3146 -3143 0
c Var 'aux651' order represents '7' with '3147'
-3145 3147 0
c Var 'aux651' direct represents '7' with '3148'
3145 -3147 3148 0
-3148 3147 0
-3148 -3145 0
c Var 'aux651' direct represents '8' with '-3147'
3134 3136 3138 3140 3142 3144 3146 3148 -3147 0
c Encoding variable: aux652 with domain: int(0..8) (representing constraint (aux643 + aux647))
c Both direct and order encoding.
c Var 'aux652' order represents '0' with '3149'
c Var 'aux652' direct represents '0' with '3149'
c Var 'aux652' order represents '1' with '3150'
-3149 3150 0
c Var 'aux652' direct represents '1' with '3151'
3149 -3150 3151 0
-3151 3150 0
-3151 -3149 0
c Var 'aux652' order represents '2' with '3152'
-3150 3152 0
c Var 'aux652' direct represents '2' with '3153'
3150 -3152 3153 0
-3153 3152 0
-3153 -3150 0
c Var 'aux652' order represents '3' with '3154'
-3152 3154 0
c Var 'aux652' direct represents '3' with '3155'
3152 -3154 3155 0
-3155 3154 0
-3155 -3152 0
c Var 'aux652' order represents '4' with '3156'
-3154 3156 0
c Var 'aux652' direct represents '4' with '3157'
3154 -3156 3157 0
-3157 3156 0
-3157 -3154 0
c Var 'aux652' order represents '5' with '3158'
-3156 3158 0
c Var 'aux652' direct represents '5' with '3159'
3156 -3158 3159 0
-3159 3158 0
-3159 -3156 0
c Var 'aux652' order represents '6' with '3160'
-3158 3160 0
c Var 'aux652' direct represents '6' with '3161'
3158 -3160 3161 0
-3161 3160 0
-3161 -3158 0
c Var 'aux652' order represents '7' with '3162'
-3160 3162 0
c Var 'aux652' direct represents '7' with '3163'
3160 -3162 3163 0
-3163 3162 0
-3163 -3160 0
c Var 'aux652' direct represents '8' with '-3162'
3149 3151 3153 3155 3157 3159 3161 3163 -3162 0
c Encoding variable: aux653 with domain: int(0..12) (representing constraint (aux646 + aux652))
c Both direct and order encoding.
c Var 'aux653' order represents '0' with '3164'
c Var 'aux653' direct represents '0' with '3164'
c Var 'aux653' order represents '1' with '3165'
-3164 3165 0
c Var 'aux653' direct represents '1' with '3166'
3164 -3165 3166 0
-3166 3165 0
-3166 -3164 0
c Var 'aux653' order represents '2' with '3167'
-3165 3167 0
c Var 'aux653' direct represents '2' with '3168'
3165 -3167 3168 0
-3168 3167 0
-3168 -3165 0
c Var 'aux653' order represents '3' with '3169'
-3167 3169 0
c Var 'aux653' direct represents '3' with '3170'
3167 -3169 3170 0
-3170 3169 0
-3170 -3167 0
c Var 'aux653' order represents '4' with '3171'
-3169 3171 0
c Var 'aux653' direct represents '4' with '3172'
3169 -3171 3172 0
-3172 3171 0
-3172 -3169 0
c Var 'aux653' order represents '5' with '3173'
-3171 3173 0
c Var 'aux653' direct represents '5' with '3174'
3171 -3173 3174 0
-3174 3173 0
-3174 -3171 0
c Var 'aux653' order represents '6' with '3175'
-3173 3175 0
c Var 'aux653' direct represents '6' with '3176'
3173 -3175 3176 0
-3176 3175 0
-3176 -3173 0
c Var 'aux653' order represents '7' with '3177'
-3175 3177 0
c Var 'aux653' direct represents '7' with '3178'
3175 -3177 3178 0
-3178 3177 0
-3178 -3175 0
c Var 'aux653' order represents '8' with '3179'
-3177 3179 0
c Var 'aux653' direct represents '8' with '3180'
3177 -3179 3180 0
-3180 3179 0
-3180 -3177 0
c Var 'aux653' order represents '9' with '3181'
-3179 3181 0
c Var 'aux653' direct represents '9' with '3182'
3179 -3181 3182 0
-3182 3181 0
-3182 -3179 0
c Var 'aux653' order represents '10' with '3183'
-3181 3183 0
c Var 'aux653' direct represents '10' with '3184'
3181 -3183 3184 0
-3184 3183 0
-3184 -3181 0
c Var 'aux653' order represents '11' with '3185'
-3183 3185 0
c Var 'aux653' direct represents '11' with '3186'
3183 -3185 3186 0
-3186 3185 0
-3186 -3183 0
c Var 'aux653' direct represents '12' with '-3185'
3164 3166 3168 3170 3172 3174 3176 3178 3180 3182 3184 3186 -3185 0
c Encoding variable: aux654 with domain: int(0..16) (representing constraint (aux650 + aux649))
c Both direct and order encoding.
c Var 'aux654' order represents '0' with '3187'
c Var 'aux654' direct represents '0' with '3187'
c Var 'aux654' order represents '1' with '3188'
-3187 3188 0
c Var 'aux654' direct represents '1' with '3189'
3187 -3188 3189 0
-3189 3188 0
-3189 -3187 0
c Var 'aux654' order represents '2' with '3190'
-3188 3190 0
c Var 'aux654' direct represents '2' with '3191'
3188 -3190 3191 0
-3191 3190 0
-3191 -3188 0
c Var 'aux654' order represents '3' with '3192'
-3190 3192 0
c Var 'aux654' direct represents '3' with '3193'
3190 -3192 3193 0
-3193 3192 0
-3193 -3190 0
c Var 'aux654' order represents '4' with '3194'
-3192 3194 0
c Var 'aux654' direct represents '4' with '3195'
3192 -3194 3195 0
-3195 3194 0
-3195 -3192 0
c Var 'aux654' order represents '5' with '3196'
-3194 3196 0
c Var 'aux654' direct represents '5' with '3197'
3194 -3196 3197 0
-3197 3196 0
-3197 -3194 0
c Var 'aux654' order represents '6' with '3198'
-3196 3198 0
c Var 'aux654' direct represents '6' with '3199'
3196 -3198 3199 0
-3199 3198 0
-3199 -3196 0
c Var 'aux654' order represents '7' with '3200'
-3198 3200 0
c Var 'aux654' direct represents '7' with '3201'
3198 -3200 3201 0
-3201 3200 0
-3201 -3198 0
c Var 'aux654' order represents '8' with '3202'
-3200 3202 0
c Var 'aux654' direct represents '8' with '3203'
3200 -3202 3203 0
-3203 3202 0
-3203 -3200 0
c Var 'aux654' order represents '9' with '3204'
-3202 3204 0
c Var 'aux654' direct represents '9' with '3205'
3202 -3204 3205 0
-3205 3204 0
-3205 -3202 0
c Var 'aux654' order represents '10' with '3206'
-3204 3206 0
c Var 'aux654' direct represents '10' with '3207'
3204 -3206 3207 0
-3207 3206 0
-3207 -3204 0
c Var 'aux654' order represents '11' with '3208'
-3206 3208 0
c Var 'aux654' direct represents '11' with '3209'
3206 -3208 3209 0
-3209 3208 0
-3209 -3206 0
c Var 'aux654' order represents '12' with '3210'
-3208 3210 0
c Var 'aux654' direct represents '12' with '3211'
3208 -3210 3211 0
-3211 3210 0
-3211 -3208 0
c Var 'aux654' order represents '13' with '3212'
-3210 3212 0
c Var 'aux654' direct represents '13' with '3213'
3210 -3212 3213 0
-3213 3212 0
-3213 -3210 0
c Var 'aux654' order represents '14' with '3214'
-3212 3214 0
c Var 'aux654' direct represents '14' with '3215'
3212 -3214 3215 0
-3215 3214 0
-3215 -3212 0
c Var 'aux654' order represents '15' with '3216'
-3214 3216 0
c Var 'aux654' direct represents '15' with '3217'
3214 -3216 3217 0
-3217 3216 0
-3217 -3214 0
c Var 'aux654' direct represents '16' with '-3216'
3187 3189 3191 3193 3195 3197 3199 3201 3203 3205 3207 3209 3211 3213 3215 3217 -3216 0
c Encoding variable: aux655 with domain: int(0..20) (representing constraint (aux651 + aux653))
c Both direct and order encoding.
c Var 'aux655' order represents '0' with '3218'
c Var 'aux655' direct represents '0' with '3218'
c Var 'aux655' order represents '1' with '3219'
-3218 3219 0
c Var 'aux655' direct represents '1' with '3220'
3218 -3219 3220 0
-3220 3219 0
-3220 -3218 0
c Var 'aux655' order represents '2' with '3221'
-3219 3221 0
c Var 'aux655' direct represents '2' with '3222'
3219 -3221 3222 0
-3222 3221 0
-3222 -3219 0
c Var 'aux655' order represents '3' with '3223'
-3221 3223 0
c Var 'aux655' direct represents '3' with '3224'
3221 -3223 3224 0
-3224 3223 0
-3224 -3221 0
c Var 'aux655' order represents '4' with '3225'
-3223 3225 0
c Var 'aux655' direct represents '4' with '3226'
3223 -3225 3226 0
-3226 3225 0
-3226 -3223 0
c Var 'aux655' order represents '5' with '3227'
-3225 3227 0
c Var 'aux655' direct represents '5' with '3228'
3225 -3227 3228 0
-3228 3227 0
-3228 -3225 0
c Var 'aux655' order represents '6' with '3229'
-3227 3229 0
c Var 'aux655' direct represents '6' with '3230'
3227 -3229 3230 0
-3230 3229 0
-3230 -3227 0
c Var 'aux655' order represents '7' with '3231'
-3229 3231 0
c Var 'aux655' direct represents '7' with '3232'
3229 -3231 3232 0
-3232 3231 0
-3232 -3229 0
c Var 'aux655' order represents '8' with '3233'
-3231 3233 0
c Var 'aux655' direct represents '8' with '3234'
3231 -3233 3234 0
-3234 3233 0
-3234 -3231 0
c Var 'aux655' order represents '9' with '3235'
-3233 3235 0
c Var 'aux655' direct represents '9' with '3236'
3233 -3235 3236 0
-3236 3235 0
-3236 -3233 0
c Var 'aux655' order represents '10' with '3237'
-3235 3237 0
c Var 'aux655' direct represents '10' with '3238'
3235 -3237 3238 0
-3238 3237 0
-3238 -3235 0
c Var 'aux655' order represents '11' with '3239'
-3237 3239 0
c Var 'aux655' direct represents '11' with '3240'
3237 -3239 3240 0
-3240 3239 0
-3240 -3237 0
c Var 'aux655' order represents '12' with '3241'
-3239 3241 0
c Var 'aux655' direct represents '12' with '3242'
3239 -3241 3242 0
-3242 3241 0
-3242 -3239 0
c Var 'aux655' order represents '13' with '3243'
-3241 3243 0
c Var 'aux655' direct represents '13' with '3244'
3241 -3243 3244 0
-3244 3243 0
-3244 -3241 0
c Var 'aux655' order represents '14' with '3245'
-3243 3245 0
c Var 'aux655' direct represents '14' with '3246'
3243 -3245 3246 0
-3246 3245 0
-3246 -3243 0
c Var 'aux655' order represents '15' with '3247'
-3245 3247 0
c Var 'aux655' direct represents '15' with '3248'
3245 -3247 3248 0
-3248 3247 0
-3248 -3245 0
c Var 'aux655' order represents '16' with '3249'
-3247 3249 0
c Var 'aux655' direct represents '16' with '3250'
3247 -3249 3250 0
-3250 3249 0
-3250 -3247 0
c Var 'aux655' order represents '17' with '3251'
-3249 3251 0
c Var 'aux655' direct represents '17' with '3252'
3249 -3251 3252 0
-3252 3251 0
-3252 -3249 0
c Var 'aux655' order represents '18' with '3253'
-3251 3253 0
c Var 'aux655' direct represents '18' with '3254'
3251 -3253 3254 0
-3254 3253 0
-3254 -3251 0
c Var 'aux655' order represents '19' with '3255'
-3253 3255 0
c Var 'aux655' direct represents '19' with '3256'
3253 -3255 3256 0
-3256 3255 0
-3256 -3253 0
c Var 'aux655' direct represents '20' with '-3255'
3218 3220 3222 3224 3226 3228 3230 3232 3234 3236 3238 3240 3242 3244 3246 3248 3250 3252 3254 3256 -3255 0
c Encoding variable: aux656 with domain: bool (representing constraint ((aux231 - shift(num_occupied_by_types_00000, -36) - shift(num_occupied_by_types_00001, -36))<=108))
c Var 'aux656' direct represents '0' with '-3257'
c Var 'aux656' direct represents '1' with '3257'
c Var 'aux656' order represents '1' with '1'
c Var 'aux656' order represents '0' with '-3257'
c Encoding variable: aux657 with domain: bool (representing constraint (108<=(aux231 - shift(num_occupied_by_types_00000, -36) - shift(num_occupied_by_types_00001, -36))))
c Var 'aux657' direct represents '0' with '-3258'
c Var 'aux657' direct represents '1' with '3258'
c Var 'aux657' order represents '1' with '1'
c Var 'aux657' order represents '0' with '-3258'
c Encoding variable: aux658 with domain: bool (representing constraint ((aux232 + aux233 + aux234)<=4))
c Var 'aux658' direct represents '0' with '-3259'
c Var 'aux658' direct represents '1' with '3259'
c Var 'aux658' order represents '1' with '1'
c Var 'aux658' order represents '0' with '-3259'
c Encoding variable: aux659 with domain: bool (representing constraint (4<=(aux232 + aux233 + aux234)))
c Var 'aux659' direct represents '0' with '-3260'
c Var 'aux659' direct represents '1' with '3260'
c Var 'aux659' order represents '1' with '1'
c Var 'aux659' order represents '0' with '-3260'
c Encoding variable: aux660 with domain: bool (representing constraint ((aux238 + aux239 + aux240)<=2))
c Var 'aux660' direct represents '0' with '-3261'
c Var 'aux660' direct represents '1' with '3261'
c Var 'aux660' order represents '1' with '1'
c Var 'aux660' order represents '0' with '-3261'
c Encoding variable: aux661 with domain: bool (representing constraint (2<=(aux238 + aux239 + aux240)))
c Var 'aux661' direct represents '0' with '-3262'
c Var 'aux661' direct represents '1' with '3262'
c Var 'aux661' order represents '1' with '1'
c Var 'aux661' order represents '0' with '-3262'
c Encoding variable: aux662 with domain: bool (representing constraint ((aux241 + aux242 + aux243)<=1))
c Var 'aux662' direct represents '0' with '-3263'
c Var 'aux662' direct represents '1' with '3263'
c Var 'aux662' order represents '1' with '1'
c Var 'aux662' order represents '0' with '-3263'
c Encoding variable: aux663 with domain: bool (representing constraint (1<=(aux241 + aux242 + aux243)))
c Var 'aux663' direct represents '0' with '-3264'
c Var 'aux663' direct represents '1' with '3264'
c Var 'aux663' order represents '1' with '1'
c Var 'aux663' order represents '0' with '-3264'
c Encoding variable: aux664 with domain: bool (representing constraint ((aux244 + aux245 + aux246)<=2))
c Var 'aux664' direct represents '0' with '-3265'
c Var 'aux664' direct represents '1' with '3265'
c Var 'aux664' order represents '1' with '1'
c Var 'aux664' order represents '0' with '-3265'
c Encoding variable: aux665 with domain: bool (representing constraint (2<=(aux244 + aux245 + aux246)))
c Var 'aux665' direct represents '0' with '-3266'
c Var 'aux665' direct represents '1' with '3266'
c Var 'aux665' order represents '1' with '1'
c Var 'aux665' order represents '0' with '-3266'
c Encoding variable: aux666 with domain: bool (representing constraint ((aux247 + aux248 + aux249)<=1))
c Var 'aux666' direct represents '0' with '-3267'
c Var 'aux666' direct represents '1' with '3267'
c Var 'aux666' order represents '1' with '1'
c Var 'aux666' order represents '0' with '-3267'
c Encoding variable: aux667 with domain: bool (representing constraint (1<=(aux247 + aux248 + aux249)))
c Var 'aux667' direct represents '0' with '-3268'
c Var 'aux667' direct represents '1' with '3268'
c Var 'aux667' order represents '1' with '1'
c Var 'aux667' order represents '0' with '-3268'
c Encoding variable: aux668 with domain: bool (representing constraint ((aux250 + aux251 + aux252)<=1))
c Var 'aux668' direct represents '0' with '-3269'
c Var 'aux668' direct represents '1' with '3269'
c Var 'aux668' order represents '1' with '1'
c Var 'aux668' order represents '0' with '-3269'
c Encoding variable: aux669 with domain: bool (representing constraint (1<=(aux250 + aux251 + aux252)))
c Var 'aux669' direct represents '0' with '-3270'
c Var 'aux669' direct represents '1' with '3270'
c Var 'aux669' order represents '1' with '1'
c Var 'aux669' order represents '0' with '-3270'
c Encoding variable: aux670 with domain: bool (representing constraint ((aux256 + aux257 + aux258)<=4))
c Var 'aux670' direct represents '0' with '-3271'
c Var 'aux670' direct represents '1' with '3271'
c Var 'aux670' order represents '1' with '1'
c Var 'aux670' order represents '0' with '-3271'
c Encoding variable: aux671 with domain: bool (representing constraint (4<=(aux256 + aux257 + aux258)))
c Var 'aux671' direct represents '0' with '-3272'
c Var 'aux671' direct represents '1' with '3272'
c Var 'aux671' order represents '1' with '1'
c Var 'aux671' order represents '0' with '-3272'
c Encoding variable: aux672 with domain: bool (representing constraint ((aux262 + aux263 + aux264)<=3))
c Var 'aux672' direct represents '0' with '-3273'
c Var 'aux672' direct represents '1' with '3273'
c Var 'aux672' order represents '1' with '1'
c Var 'aux672' order represents '0' with '-3273'
c Encoding variable: aux673 with domain: bool (representing constraint (3<=(aux262 + aux263 + aux264)))
c Var 'aux673' direct represents '0' with '-3274'
c Var 'aux673' direct represents '1' with '3274'
c Var 'aux673' order represents '1' with '1'
c Var 'aux673' order represents '0' with '-3274'
c Encoding variable: aux674 with domain: bool (representing constraint ((aux265 + aux266 + aux267)<=2))
c Var 'aux674' direct represents '0' with '-3275'
c Var 'aux674' direct represents '1' with '3275'
c Var 'aux674' order represents '1' with '1'
c Var 'aux674' order represents '0' with '-3275'
c Encoding variable: aux675 with domain: bool (representing constraint (2<=(aux265 + aux266 + aux267)))
c Var 'aux675' direct represents '0' with '-3276'
c Var 'aux675' direct represents '1' with '3276'
c Var 'aux675' order represents '1' with '1'
c Var 'aux675' order represents '0' with '-3276'
c Encoding variable: aux676 with domain: bool (representing constraint (( - shift(agrid_00001_00001, -3) + aux273 + aux274)<=2))
c Var 'aux676' direct represents '0' with '-3277'
c Var 'aux676' direct represents '1' with '3277'
c Var 'aux676' order represents '1' with '1'
c Var 'aux676' order represents '0' with '-3277'
c Encoding variable: aux677 with domain: bool (representing constraint (2<=( - shift(agrid_00001_00001, -3) + aux273 + aux274)))
c Var 'aux677' direct represents '0' with '-3278'
c Var 'aux677' direct represents '1' with '3278'
c Var 'aux677' order represents '1' with '1'
c Var 'aux677' order represents '0' with '-3278'
c Encoding variable: aux678 with domain: bool (representing constraint ((aux279 + aux281 - shift(agrid_00002_00001, -3))<=2))
c Var 'aux678' direct represents '0' with '-3279'
c Var 'aux678' direct represents '1' with '3279'
c Var 'aux678' order represents '1' with '1'
c Var 'aux678' order represents '0' with '-3279'
c Encoding variable: aux679 with domain: bool (representing constraint (2<=(aux279 + aux281 - shift(agrid_00002_00001, -3))))
c Var 'aux679' direct represents '0' with '-3280'
c Var 'aux679' direct represents '1' with '3280'
c Var 'aux679' order represents '1' with '1'
c Var 'aux679' order represents '0' with '-3280'
c Encoding variable: aux680 with domain: bool (representing constraint ((aux286 + aux288 - shift(agrid_00003_00001, -3))<=2))
c Var 'aux680' direct represents '0' with '-3281'
c Var 'aux680' direct represents '1' with '3281'
c Var 'aux680' order represents '1' with '1'
c Var 'aux680' order represents '0' with '-3281'
c Encoding variable: aux681 with domain: bool (representing constraint (2<=(aux286 + aux288 - shift(agrid_00003_00001, -3))))
c Var 'aux681' direct represents '0' with '-3282'
c Var 'aux681' direct represents '1' with '3282'
c Var 'aux681' order represents '1' with '1'
c Var 'aux681' order represents '0' with '-3282'
c Encoding variable: aux682 with domain: bool (representing constraint ((aux293 + aux295 - shift(agrid_00004_00001, -3))<=2))
c Var 'aux682' direct represents '0' with '-3283'
c Var 'aux682' direct represents '1' with '3283'
c Var 'aux682' order represents '1' with '1'
c Var 'aux682' order represents '0' with '-3283'
c Encoding variable: aux683 with domain: bool (representing constraint (2<=(aux293 + aux295 - shift(agrid_00004_00001, -3))))
c Var 'aux683' direct represents '0' with '-3284'
c Var 'aux683' direct represents '1' with '3284'
c Var 'aux683' order represents '1' with '1'
c Var 'aux683' order represents '0' with '-3284'
c Encoding variable: aux684 with domain: bool (representing constraint ((aux300 + aux302 - shift(agrid_00005_00001, -3))<=2))
c Var 'aux684' direct represents '0' with '-3285'
c Var 'aux684' direct represents '1' with '3285'
c Var 'aux684' order represents '1' with '1'
c Var 'aux684' order represents '0' with '-3285'
c Encoding variable: aux685 with domain: bool (representing constraint (2<=(aux300 + aux302 - shift(agrid_00005_00001, -3))))
c Var 'aux685' direct represents '0' with '-3286'
c Var 'aux685' direct represents '1' with '3286'
c Var 'aux685' order represents '1' with '1'
c Var 'aux685' order represents '0' with '-3286'
c Encoding variable: aux686 with domain: bool (representing constraint ((aux308 + aux309 - shift(agrid_00006_00001, -3))<=2))
c Var 'aux686' direct represents '0' with '-3287'
c Var 'aux686' direct represents '1' with '3287'
c Var 'aux686' order represents '1' with '1'
c Var 'aux686' order represents '0' with '-3287'
c Encoding variable: aux687 with domain: bool (representing constraint (2<=(aux308 + aux309 - shift(agrid_00006_00001, -3))))
c Var 'aux687' direct represents '0' with '-3288'
c Var 'aux687' direct represents '1' with '3288'
c Var 'aux687' order represents '1' with '1'
c Var 'aux687' order represents '0' with '-3288'
c Encoding variable: aux688 with domain: bool (representing constraint (( - shift(agrid_00001_00002, -3) + aux314 + aux316)<=2))
c Var 'aux688' direct represents '0' with '-3289'
c Var 'aux688' direct represents '1' with '3289'
c Var 'aux688' order represents '1' with '1'
c Var 'aux688' order represents '0' with '-3289'
c Encoding variable: aux689 with domain: bool (representing constraint (2<=( - shift(agrid_00001_00002, -3) + aux314 + aux316)))
c Var 'aux689' direct represents '0' with '-3290'
c Var 'aux689' direct represents '1' with '3290'
c Var 'aux689' order represents '1' with '1'
c Var 'aux689' order represents '0' with '-3290'
c Encoding variable: aux690 with domain: bool (representing constraint ((aux321 + aux323 - shift(agrid_00002_00002, -3))<=2))
c Var 'aux690' direct represents '0' with '-3291'
c Var 'aux690' direct represents '1' with '3291'
c Var 'aux690' order represents '1' with '1'
c Var 'aux690' order represents '0' with '-3291'
c Encoding variable: aux691 with domain: bool (representing constraint (2<=(aux321 + aux323 - shift(agrid_00002_00002, -3))))
c Var 'aux691' direct represents '0' with '-3292'
c Var 'aux691' direct represents '1' with '3292'
c Var 'aux691' order represents '1' with '1'
c Var 'aux691' order represents '0' with '-3292'
c Encoding variable: aux692 with domain: bool (representing constraint ((aux329 + aux330 - shift(agrid_00003_00002, -3))<=2))
c Var 'aux692' direct represents '0' with '-3293'
c Var 'aux692' direct represents '1' with '3293'
c Var 'aux692' order represents '1' with '1'
c Var 'aux692' order represents '0' with '-3293'
c Encoding variable: aux693 with domain: bool (representing constraint (2<=(aux329 + aux330 - shift(agrid_00003_00002, -3))))
c Var 'aux693' direct represents '0' with '-3294'
c Var 'aux693' direct represents '1' with '3294'
c Var 'aux693' order represents '1' with '1'
c Var 'aux693' order represents '0' with '-3294'
c Encoding variable: aux694 with domain: bool (representing constraint ((aux336 + aux337 - shift(agrid_00004_00002, -3))<=2))
c Var 'aux694' direct represents '0' with '-3295'
c Var 'aux694' direct represents '1' with '3295'
c Var 'aux694' order represents '1' with '1'
c Var 'aux694' order represents '0' with '-3295'
c Encoding variable: aux695 with domain: bool (representing constraint (2<=(aux336 + aux337 - shift(agrid_00004_00002, -3))))
c Var 'aux695' direct represents '0' with '-3296'
c Var 'aux695' direct represents '1' with '3296'
c Var 'aux695' order represents '1' with '1'
c Var 'aux695' order represents '0' with '-3296'
c Encoding variable: aux696 with domain: bool (representing constraint ((aux342 + aux344 - shift(agrid_00005_00002, -3))<=2))
c Var 'aux696' direct represents '0' with '-3297'
c Var 'aux696' direct represents '1' with '3297'
c Var 'aux696' order represents '1' with '1'
c Var 'aux696' order represents '0' with '-3297'
c Encoding variable: aux697 with domain: bool (representing constraint (2<=(aux342 + aux344 - shift(agrid_00005_00002, -3))))
c Var 'aux697' direct represents '0' with '-3298'
c Var 'aux697' direct represents '1' with '3298'
c Var 'aux697' order represents '1' with '1'
c Var 'aux697' order represents '0' with '-3298'
c Encoding variable: aux698 with domain: bool (representing constraint ((aux349 + aux351 - shift(agrid_00006_00002, -3))<=2))
c Var 'aux698' direct represents '0' with '-3299'
c Var 'aux698' direct represents '1' with '3299'
c Var 'aux698' order represents '1' with '1'
c Var 'aux698' order represents '0' with '-3299'
c Encoding variable: aux699 with domain: bool (representing constraint (2<=(aux349 + aux351 - shift(agrid_00006_00002, -3))))
c Var 'aux699' direct represents '0' with '-3300'
c Var 'aux699' direct represents '1' with '3300'
c Var 'aux699' order represents '1' with '1'
c Var 'aux699' order represents '0' with '-3300'
c Encoding variable: aux700 with domain: bool (representing constraint (( - shift(agrid_00001_00003, -3) + aux356 + aux358)<=2))
c Var 'aux700' direct represents '0' with '-3301'
c Var 'aux700' direct represents '1' with '3301'
c Var 'aux700' order represents '1' with '1'
c Var 'aux700' order represents '0' with '-3301'
c Encoding variable: aux701 with domain: bool (representing constraint (2<=( - shift(agrid_00001_00003, -3) + aux356 + aux358)))
c Var 'aux701' direct represents '0' with '-3302'
c Var 'aux701' direct represents '1' with '3302'
c Var 'aux701' order represents '1' with '1'
c Var 'aux701' order represents '0' with '-3302'
c Encoding variable: aux702 with domain: bool (representing constraint ((aux364 + aux365 - shift(agrid_00002_00003, -3))<=2))
c Var 'aux702' direct represents '0' with '-3303'
c Var 'aux702' direct represents '1' with '3303'
c Var 'aux702' order represents '1' with '1'
c Var 'aux702' order represents '0' with '-3303'
c Encoding variable: aux703 with domain: bool (representing constraint (2<=(aux364 + aux365 - shift(agrid_00002_00003, -3))))
c Var 'aux703' direct represents '0' with '-3304'
c Var 'aux703' direct represents '1' with '3304'
c Var 'aux703' order represents '1' with '1'
c Var 'aux703' order represents '0' with '-3304'
c Encoding variable: aux704 with domain: bool (representing constraint ((aux371 + aux372 - shift(agrid_00003_00003, -3))<=2))
c Var 'aux704' direct represents '0' with '-3305'
c Var 'aux704' direct represents '1' with '3305'
c Var 'aux704' order represents '1' with '1'
c Var 'aux704' order represents '0' with '-3305'
c Encoding variable: aux705 with domain: bool (representing constraint (2<=(aux371 + aux372 - shift(agrid_00003_00003, -3))))
c Var 'aux705' direct represents '0' with '-3306'
c Var 'aux705' direct represents '1' with '3306'
c Var 'aux705' order represents '1' with '1'
c Var 'aux705' order represents '0' with '-3306'
c Encoding variable: aux706 with domain: bool (representing constraint ((aux378 + aux379 - shift(agrid_00004_00003, -3))<=2))
c Var 'aux706' direct represents '0' with '-3307'
c Var 'aux706' direct represents '1' with '3307'
c Var 'aux706' order represents '1' with '1'
c Var 'aux706' order represents '0' with '-3307'
c Encoding variable: aux707 with domain: bool (representing constraint (2<=(aux378 + aux379 - shift(agrid_00004_00003, -3))))
c Var 'aux707' direct represents '0' with '-3308'
c Var 'aux707' direct represents '1' with '3308'
c Var 'aux707' order represents '1' with '1'
c Var 'aux707' order represents '0' with '-3308'
c Encoding variable: aux708 with domain: bool (representing constraint ((aux385 + aux386 - shift(agrid_00005_00003, -3))<=2))
c Var 'aux708' direct represents '0' with '-3309'
c Var 'aux708' direct represents '1' with '3309'
c Var 'aux708' order represents '1' with '1'
c Var 'aux708' order represents '0' with '-3309'
c Encoding variable: aux709 with domain: bool (representing constraint (2<=(aux385 + aux386 - shift(agrid_00005_00003, -3))))
c Var 'aux709' direct represents '0' with '-3310'
c Var 'aux709' direct represents '1' with '3310'
c Var 'aux709' order represents '1' with '1'
c Var 'aux709' order represents '0' with '-3310'
c Encoding variable: aux710 with domain: bool (representing constraint ((aux391 + aux393 - shift(agrid_00006_00003, -3))<=2))
c Var 'aux710' direct represents '0' with '-3311'
c Var 'aux710' direct represents '1' with '3311'
c Var 'aux710' order represents '1' with '1'
c Var 'aux710' order represents '0' with '-3311'
c Encoding variable: aux711 with domain: bool (representing constraint (2<=(aux391 + aux393 - shift(agrid_00006_00003, -3))))
c Var 'aux711' direct represents '0' with '-3312'
c Var 'aux711' direct represents '1' with '3312'
c Var 'aux711' order represents '1' with '1'
c Var 'aux711' order represents '0' with '-3312'
c Encoding variable: aux712 with domain: bool (representing constraint (( - shift(agrid_00001_00004, -3) + aux398 + aux400)<=2))
c Var 'aux712' direct represents '0' with '-3313'
c Var 'aux712' direct represents '1' with '3313'
c Var 'aux712' order represents '1' with '1'
c Var 'aux712' order represents '0' with '-3313'
c Encoding variable: aux713 with domain: bool (representing constraint (2<=( - shift(agrid_00001_00004, -3) + aux398 + aux400)))
c Var 'aux713' direct represents '0' with '-3314'
c Var 'aux713' direct represents '1' with '3314'
c Var 'aux713' order represents '1' with '1'
c Var 'aux713' order represents '0' with '-3314'
c Encoding variable: aux714 with domain: bool (representing constraint ((aux406 + aux407 - shift(agrid_00002_00004, -3))<=2))
c Var 'aux714' direct represents '0' with '-3315'
c Var 'aux714' direct represents '1' with '3315'
c Var 'aux714' order represents '1' with '1'
c Var 'aux714' order represents '0' with '-3315'
c Encoding variable: aux715 with domain: bool (representing constraint (2<=(aux406 + aux407 - shift(agrid_00002_00004, -3))))
c Var 'aux715' direct represents '0' with '-3316'
c Var 'aux715' direct represents '1' with '3316'
c Var 'aux715' order represents '1' with '1'
c Var 'aux715' order represents '0' with '-3316'
c Encoding variable: aux716 with domain: bool (representing constraint ((aux413 + aux414 - shift(agrid_00003_00004, -3))<=2))
c Var 'aux716' direct represents '0' with '-3317'
c Var 'aux716' direct represents '1' with '3317'
c Var 'aux716' order represents '1' with '1'
c Var 'aux716' order represents '0' with '-3317'
c Encoding variable: aux717 with domain: bool (representing constraint (2<=(aux413 + aux414 - shift(agrid_00003_00004, -3))))
c Var 'aux717' direct represents '0' with '-3318'
c Var 'aux717' direct represents '1' with '3318'
c Var 'aux717' order represents '1' with '1'
c Var 'aux717' order represents '0' with '-3318'
c Encoding variable: aux718 with domain: bool (representing constraint ((aux420 + aux421 - shift(agrid_00004_00004, -3))<=2))
c Var 'aux718' direct represents '0' with '-3319'
c Var 'aux718' direct represents '1' with '3319'
c Var 'aux718' order represents '1' with '1'
c Var 'aux718' order represents '0' with '-3319'
c Encoding variable: aux719 with domain: bool (representing constraint (2<=(aux420 + aux421 - shift(agrid_00004_00004, -3))))
c Var 'aux719' direct represents '0' with '-3320'
c Var 'aux719' direct represents '1' with '3320'
c Var 'aux719' order represents '1' with '1'
c Var 'aux719' order represents '0' with '-3320'
c Encoding variable: aux720 with domain: bool (representing constraint ((aux427 + aux428 - shift(agrid_00005_00004, -3))<=2))
c Var 'aux720' direct represents '0' with '-3321'
c Var 'aux720' direct represents '1' with '3321'
c Var 'aux720' order represents '1' with '1'
c Var 'aux720' order represents '0' with '-3321'
c Encoding variable: aux721 with domain: bool (representing constraint (2<=(aux427 + aux428 - shift(agrid_00005_00004, -3))))
c Var 'aux721' direct represents '0' with '-3322'
c Var 'aux721' direct represents '1' with '3322'
c Var 'aux721' order represents '1' with '1'
c Var 'aux721' order represents '0' with '-3322'
c Encoding variable: aux722 with domain: bool (representing constraint ((aux433 + aux435 - shift(agrid_00006_00004, -3))<=2))
c Var 'aux722' direct represents '0' with '-3323'
c Var 'aux722' direct represents '1' with '3323'
c Var 'aux722' order represents '1' with '1'
c Var 'aux722' order represents '0' with '-3323'
c Encoding variable: aux723 with domain: bool (representing constraint (2<=(aux433 + aux435 - shift(agrid_00006_00004, -3))))
c Var 'aux723' direct represents '0' with '-3324'
c Var 'aux723' direct represents '1' with '3324'
c Var 'aux723' order represents '1' with '1'
c Var 'aux723' order represents '0' with '-3324'
c Encoding variable: aux724 with domain: bool (representing constraint (( - shift(agrid_00001_00005, -3) + aux440 + aux442)<=2))
c Var 'aux724' direct represents '0' with '-3325'
c Var 'aux724' direct represents '1' with '3325'
c Var 'aux724' order represents '1' with '1'
c Var 'aux724' order represents '0' with '-3325'
c Encoding variable: aux725 with domain: bool (representing constraint (2<=( - shift(agrid_00001_00005, -3) + aux440 + aux442)))
c Var 'aux725' direct represents '0' with '-3326'
c Var 'aux725' direct represents '1' with '3326'
c Var 'aux725' order represents '1' with '1'
c Var 'aux725' order represents '0' with '-3326'
c Encoding variable: aux726 with domain: bool (representing constraint ((aux447 + aux449 - shift(agrid_00002_00005, -3))<=2))
c Var 'aux726' direct represents '0' with '-3327'
c Var 'aux726' direct represents '1' with '3327'
c Var 'aux726' order represents '1' with '1'
c Var 'aux726' order represents '0' with '-3327'
c Encoding variable: aux727 with domain: bool (representing constraint (2<=(aux447 + aux449 - shift(agrid_00002_00005, -3))))
c Var 'aux727' direct represents '0' with '-3328'
c Var 'aux727' direct represents '1' with '3328'
c Var 'aux727' order represents '1' with '1'
c Var 'aux727' order represents '0' with '-3328'
c Encoding variable: aux728 with domain: bool (representing constraint ((aux455 + aux456 - shift(agrid_00003_00005, -3))<=2))
c Var 'aux728' direct represents '0' with '-3329'
c Var 'aux728' direct represents '1' with '3329'
c Var 'aux728' order represents '1' with '1'
c Var 'aux728' order represents '0' with '-3329'
c Encoding variable: aux729 with domain: bool (representing constraint (2<=(aux455 + aux456 - shift(agrid_00003_00005, -3))))
c Var 'aux729' direct represents '0' with '-3330'
c Var 'aux729' direct represents '1' with '3330'
c Var 'aux729' order represents '1' with '1'
c Var 'aux729' order represents '0' with '-3330'
c Encoding variable: aux730 with domain: bool (representing constraint ((aux462 + aux463 - shift(agrid_00004_00005, -3))<=2))
c Var 'aux730' direct represents '0' with '-3331'
c Var 'aux730' direct represents '1' with '3331'
c Var 'aux730' order represents '1' with '1'
c Var 'aux730' order represents '0' with '-3331'
c Encoding variable: aux731 with domain: bool (representing constraint (2<=(aux462 + aux463 - shift(agrid_00004_00005, -3))))
c Var 'aux731' direct represents '0' with '-3332'
c Var 'aux731' direct represents '1' with '3332'
c Var 'aux731' order represents '1' with '1'
c Var 'aux731' order represents '0' with '-3332'
c Encoding variable: aux732 with domain: bool (representing constraint ((aux468 + aux470 - shift(agrid_00005_00005, -3))<=2))
c Var 'aux732' direct represents '0' with '-3333'
c Var 'aux732' direct represents '1' with '3333'
c Var 'aux732' order represents '1' with '1'
c Var 'aux732' order represents '0' with '-3333'
c Encoding variable: aux733 with domain: bool (representing constraint (2<=(aux468 + aux470 - shift(agrid_00005_00005, -3))))
c Var 'aux733' direct represents '0' with '-3334'
c Var 'aux733' direct represents '1' with '3334'
c Var 'aux733' order represents '1' with '1'
c Var 'aux733' order represents '0' with '-3334'
c Encoding variable: aux734 with domain: bool (representing constraint ((aux475 + aux477 - shift(agrid_00006_00005, -3))<=2))
c Var 'aux734' direct represents '0' with '-3335'
c Var 'aux734' direct represents '1' with '3335'
c Var 'aux734' order represents '1' with '1'
c Var 'aux734' order represents '0' with '-3335'
c Encoding variable: aux735 with domain: bool (representing constraint (2<=(aux475 + aux477 - shift(agrid_00006_00005, -3))))
c Var 'aux735' direct represents '0' with '-3336'
c Var 'aux735' direct represents '1' with '3336'
c Var 'aux735' order represents '1' with '1'
c Var 'aux735' order represents '0' with '-3336'
c Encoding variable: aux736 with domain: bool (representing constraint (( - shift(agrid_00001_00006, -3) + aux483 + aux484)<=2))
c Var 'aux736' direct represents '0' with '-3337'
c Var 'aux736' direct represents '1' with '3337'
c Var 'aux736' order represents '1' with '1'
c Var 'aux736' order represents '0' with '-3337'
c Encoding variable: aux737 with domain: bool (representing constraint (2<=( - shift(agrid_00001_00006, -3) + aux483 + aux484)))
c Var 'aux737' direct represents '0' with '-3338'
c Var 'aux737' direct represents '1' with '3338'
c Var 'aux737' order represents '1' with '1'
c Var 'aux737' order represents '0' with '-3338'
c Encoding variable: aux738 with domain: bool (representing constraint ((aux489 + aux491 - shift(agrid_00002_00006, -3))<=2))
c Var 'aux738' direct represents '0' with '-3339'
c Var 'aux738' direct represents '1' with '3339'
c Var 'aux738' order represents '1' with '1'
c Var 'aux738' order represents '0' with '-3339'
c Encoding variable: aux739 with domain: bool (representing constraint (2<=(aux489 + aux491 - shift(agrid_00002_00006, -3))))
c Var 'aux739' direct represents '0' with '-3340'
c Var 'aux739' direct represents '1' with '3340'
c Var 'aux739' order represents '1' with '1'
c Var 'aux739' order represents '0' with '-3340'
c Encoding variable: aux740 with domain: bool (representing constraint ((aux496 + aux498 - shift(agrid_00003_00006, -3))<=2))
c Var 'aux740' direct represents '0' with '-3341'
c Var 'aux740' direct represents '1' with '3341'
c Var 'aux740' order represents '1' with '1'
c Var 'aux740' order represents '0' with '-3341'
c Encoding variable: aux741 with domain: bool (representing constraint (2<=(aux496 + aux498 - shift(agrid_00003_00006, -3))))
c Var 'aux741' direct represents '0' with '-3342'
c Var 'aux741' direct represents '1' with '3342'
c Var 'aux741' order represents '1' with '1'
c Var 'aux741' order represents '0' with '-3342'
c Encoding variable: aux742 with domain: bool (representing constraint ((aux503 + aux505 - shift(agrid_00004_00006, -3))<=2))
c Var 'aux742' direct represents '0' with '-3343'
c Var 'aux742' direct represents '1' with '3343'
c Var 'aux742' order represents '1' with '1'
c Var 'aux742' order represents '0' with '-3343'
c Encoding variable: aux743 with domain: bool (representing constraint (2<=(aux503 + aux505 - shift(agrid_00004_00006, -3))))
c Var 'aux743' direct represents '0' with '-3344'
c Var 'aux743' direct represents '1' with '3344'
c Var 'aux743' order represents '1' with '1'
c Var 'aux743' order represents '0' with '-3344'
c Encoding variable: aux744 with domain: bool (representing constraint ((aux510 + aux512 - shift(agrid_00005_00006, -3))<=2))
c Var 'aux744' direct represents '0' with '-3345'
c Var 'aux744' direct represents '1' with '3345'
c Var 'aux744' order represents '1' with '1'
c Var 'aux744' order represents '0' with '-3345'
c Encoding variable: aux745 with domain: bool (representing constraint (2<=(aux510 + aux512 - shift(agrid_00005_00006, -3))))
c Var 'aux745' direct represents '0' with '-3346'
c Var 'aux745' direct represents '1' with '3346'
c Var 'aux745' order represents '1' with '1'
c Var 'aux745' order represents '0' with '-3346'
c Encoding variable: aux746 with domain: bool (representing constraint ((aux518 + aux519 - shift(agrid_00006_00006, -3))<=2))
c Var 'aux746' direct represents '0' with '-3347'
c Var 'aux746' direct represents '1' with '3347'
c Var 'aux746' order represents '1' with '1'
c Var 'aux746' order represents '0' with '-3347'
c Encoding variable: aux747 with domain: bool (representing constraint (2<=(aux518 + aux519 - shift(agrid_00006_00006, -3))))
c Var 'aux747' direct represents '0' with '-3348'
c Var 'aux747' direct represents '1' with '3348'
c Var 'aux747' order represents '1' with '1'
c Var 'aux747' order represents '0' with '-3348'
c (((aux231 - shift(num_occupied_by_types_00000, -36) - shift(num_occupied_by_types_00001, -36))<=108)=tv=SATLiteral(3257))
-3257 -603 -605 1383 0
-3257 -601 -606 1383 0
-3257 -601 -605 1381 0
-3257 -599 -608 1383 0
-3257 -599 -606 1381 0
-3257 -599 -605 1379 0
-3257 -597 -610 1383 0
-3257 -597 -608 1381 0
-3257 -597 -606 1379 0
-3257 -597 -605 1377 0
-3257 -595 -612 1383 0
-3257 -595 -610 1381 0
-3257 -595 -608 1379 0
-3257 -595 -606 1377 0
-3257 -595 -605 1375 0
-3257 -593 -614 1383 0
-3257 -593 -612 1381 0
-3257 -593 -610 1379 0
-3257 -593 -608 1377 0
-3257 -593 -606 1375 0
-3257 -593 -605 1373 0
-3257 -591 -616 1383 0
-3257 -591 -614 1381 0
-3257 -591 -612 1379 0
-3257 -591 -610 1377 0
-3257 -591 -608 1375 0
-3257 -591 -606 1373 0
-3257 -591 -605 1371 0
-3257 -589 -618 1383 0
-3257 -589 -616 1381 0
-3257 -589 -614 1379 0
-3257 -589 -612 1377 0
-3257 -589 -610 1375 0
-3257 -589 -608 1373 0
-3257 -589 -606 1371 0
-3257 -589 -605 1369 0
-3257 -587 -620 1383 0
-3257 -587 -618 1381 0
-3257 -587 -616 1379 0
-3257 -587 -614 1377 0
-3257 -587 -612 1375 0
-3257 -587 -610 1373 0
-3257 -587 -608 1371 0
-3257 -587 -606 1369 0
-3257 -587 -605 1367 0
-3257 -585 -622 1383 0
-3257 -585 -620 1381 0
-3257 -585 -618 1379 0
-3257 -585 -616 1377 0
-3257 -585 -614 1375 0
-3257 -585 -612 1373 0
-3257 -585 -610 1371 0
-3257 -585 -608 1369 0
-3257 -585 -606 1367 0
-3257 -585 -605 1365 0
-3257 -583 -624 1383 0
-3257 -583 -622 1381 0
-3257 -583 -620 1379 0
-3257 -583 -618 1377 0
-3257 -583 -616 1375 0
-3257 -583 -614 1373 0
-3257 -583 -612 1371 0
-3257 -583 -610 1369 0
-3257 -583 -608 1367 0
-3257 -583 -606 1365 0
-3257 -583 -605 1363 0
-3257 -581 -626 1383 0
-3257 -581 -624 1381 0
-3257 -581 -622 1379 0
-3257 -581 -620 1377 0
-3257 -581 -618 1375 0
-3257 -581 -616 1373 0
-3257 -581 -614 1371 0
-3257 -581 -612 1369 0
-3257 -581 -610 1367 0
-3257 -581 -608 1365 0
-3257 -581 -606 1363 0
-3257 -581 -605 1361 0
-3257 -579 -628 1383 0
-3257 -579 -626 1381 0
-3257 -579 -624 1379 0
-3257 -579 -622 1377 0
-3257 -579 -620 1375 0
-3257 -579 -618 1373 0
-3257 -579 -616 1371 0
-3257 -579 -614 1369 0
-3257 -579 -612 1367 0
-3257 -579 -610 1365 0
-3257 -579 -608 1363 0
-3257 -579 -606 1361 0
-3257 -579 -605 1359 0
-3257 -577 -630 1383 0
-3257 -577 -628 1381 0
-3257 -577 -626 1379 0
-3257 -577 -624 1377 0
-3257 -577 -622 1375 0
-3257 -577 -620 1373 0
-3257 -577 -618 1371 0
-3257 -577 -616 1369 0
-3257 -577 -614 1367 0
-3257 -577 -612 1365 0
-3257 -577 -610 1363 0
-3257 -577 -608 1361 0
-3257 -577 -606 1359 0
-3257 -577 -605 1357 0
-3257 -575 -632 1383 0
-3257 -575 -630 1381 0
-3257 -575 -628 1379 0
-3257 -575 -626 1377 0
-3257 -575 -624 1375 0
-3257 -575 -622 1373 0
-3257 -575 -620 1371 0
-3257 -575 -618 1369 0
-3257 -575 -616 1367 0
-3257 -575 -614 1365 0
-3257 -575 -612 1363 0
-3257 -575 -610 1361 0
-3257 -575 -608 1359 0
-3257 -575 -606 1357 0
-3257 -575 -605 1355 0
-3257 -573 -634 1383 0
-3257 -573 -632 1381 0
-3257 -573 -630 1379 0
-3257 -573 -628 1377 0
-3257 -573 -626 1375 0
-3257 -573 -624 1373 0
-3257 -573 -622 1371 0
-3257 -573 -620 1369 0
-3257 -573 -618 1367 0
-3257 -573 -616 1365 0
-3257 -573 -614 1363 0
-3257 -573 -612 1361 0
-3257 -573 -610 1359 0
-3257 -573 -608 1357 0
-3257 -573 -606 1355 0
-3257 -573 -605 1353 0
-3257 -571 -636 1383 0
-3257 -571 -634 1381 0
-3257 -571 -632 1379 0
-3257 -571 -630 1377 0
-3257 -571 -628 1375 0
-3257 -571 -626 1373 0
-3257 -571 -624 1371 0
-3257 -571 -622 1369 0
-3257 -571 -620 1367 0
-3257 -571 -618 1365 0
-3257 -571 -616 1363 0
-3257 -571 -614 1361 0
-3257 -571 -612 1359 0
-3257 -571 -610 1357 0
-3257 -571 -608 1355 0
-3257 -571 -606 1353 0
-3257 -571 -605 1351 0
-3257 -569 -638 1383 0
-3257 -569 -636 1381 0
-3257 -569 -634 1379 0
-3257 -569 -632 1377 0
-3257 -569 -630 1375 0
-3257 -569 -628 1373 0
-3257 -569 -626 1371 0
-3257 -569 -624 1369 0
-3257 -569 -622 1367 0
-3257 -569 -620 1365 0
-3257 -569 -618 1363 0
-3257 -569 -616 1361 0
-3257 -569 -614 1359 0
-3257 -569 -612 1357 0
-3257 -569 -610 1355 0
-3257 -569 -608 1353 0
-3257 -569 -606 1351 0
-3257 -569 -605 1349 0
-3257 -567 -640 1383 0
-3257 -567 -638 1381 0
-3257 -567 -636 1379 0
-3257 -567 -634 1377 0
-3257 -567 -632 1375 0
-3257 -567 -630 1373 0
-3257 -567 -628 1371 0
-3257 -567 -626 1369 0
-3257 -567 -624 1367 0
-3257 -567 -622 1365 0
-3257 -567 -620 1363 0
-3257 -567 -618 1361 0
-3257 -567 -616 1359 0
-3257 -567 -614 1357 0
-3257 -567 -612 1355 0
-3257 -567 -610 1353 0
-3257 -567 -608 1351 0
-3257 -567 -606 1349 0
-3257 -567 -605 1347 0
-3257 -565 -642 1383 0
-3257 -565 -640 1381 0
-3257 -565 -638 1379 0
-3257 -565 -636 1377 0
-3257 -565 -634 1375 0
-3257 -565 -632 1373 0
-3257 -565 -630 1371 0
-3257 -565 -628 1369 0
-3257 -565 -626 1367 0
-3257 -565 -624 1365 0
-3257 -565 -622 1363 0
-3257 -565 -620 1361 0
-3257 -565 -618 1359 0
-3257 -565 -616 1357 0
-3257 -565 -614 1355 0
-3257 -565 -612 1353 0
-3257 -565 -610 1351 0
-3257 -565 -608 1349 0
-3257 -565 -606 1347 0
-3257 -565 -605 1345 0
-3257 -563 -644 1383 0
-3257 -563 -642 1381 0
-3257 -563 -640 1379 0
-3257 -563 -638 1377 0
-3257 -563 -636 1375 0
-3257 -563 -634 1373 0
-3257 -563 -632 1371 0
-3257 -563 -630 1369 0
-3257 -563 -628 1367 0
-3257 -563 -626 1365 0
-3257 -563 -624 1363 0
-3257 -563 -622 1361 0
-3257 -563 -620 1359 0
-3257 -563 -618 1357 0
-3257 -563 -616 1355 0
-3257 -563 -614 1353 0
-3257 -563 -612 1351 0
-3257 -563 -610 1349 0
-3257 -563 -608 1347 0
-3257 -563 -606 1345 0
-3257 -563 -605 1343 0
-3257 -561 -646 1383 0
-3257 -561 -644 1381 0
-3257 -561 -642 1379 0
-3257 -561 -640 1377 0
-3257 -561 -638 1375 0
-3257 -561 -636 1373 0
-3257 -561 -634 1371 0
-3257 -561 -632 1369 0
-3257 -561 -630 1367 0
-3257 -561 -628 1365 0
-3257 -561 -626 1363 0
-3257 -561 -624 1361 0
-3257 -561 -622 1359 0
-3257 -561 -620 1357 0
-3257 -561 -618 1355 0
-3257 -561 -616 1353 0
-3257 -561 -614 1351 0
-3257 -561 -612 1349 0
-3257 -561 -610 1347 0
-3257 -561 -608 1345 0
-3257 -561 -606 1343 0
-3257 -561 -605 1341 0
-3257 -559 -648 1383 0
-3257 -559 -646 1381 0
-3257 -559 -644 1379 0
-3257 -559 -642 1377 0
-3257 -559 -640 1375 0
-3257 -559 -638 1373 0
-3257 -559 -636 1371 0
-3257 -559 -634 1369 0
-3257 -559 -632 1367 0
-3257 -559 -630 1365 0
-3257 -559 -628 1363 0
-3257 -559 -626 1361 0
-3257 -559 -624 1359 0
-3257 -559 -622 1357 0
-3257 -559 -620 1355 0
-3257 -559 -618 1353 0
-3257 -559 -616 1351 0
-3257 -559 -614 1349 0
-3257 -559 -612 1347 0
-3257 -559 -610 1345 0
-3257 -559 -608 1343 0
-3257 -559 -606 1341 0
-3257 -559 -605 1339 0
-3257 -557 -650 1383 0
-3257 -557 -648 1381 0
-3257 -557 -646 1379 0
-3257 -557 -644 1377 0
-3257 -557 -642 1375 0
-3257 -557 -640 1373 0
-3257 -557 -638 1371 0
-3257 -557 -636 1369 0
-3257 -557 -634 1367 0
-3257 -557 -632 1365 0
-3257 -557 -630 1363 0
-3257 -557 -628 1361 0
-3257 -557 -626 1359 0
-3257 -557 -624 1357 0
-3257 -557 -622 1355 0
-3257 -557 -620 1353 0
-3257 -557 -618 1351 0
-3257 -557 -616 1349 0
-3257 -557 -614 1347 0
-3257 -557 -612 1345 0
-3257 -557 -610 1343 0
-3257 -557 -608 1341 0
-3257 -557 -606 1339 0
-3257 -557 -605 1337 0
-3257 -555 -652 1383 0
-3257 -555 -650 1381 0
-3257 -555 -648 1379 0
-3257 -555 -646 1377 0
-3257 -555 -644 1375 0
-3257 -555 -642 1373 0
-3257 -555 -640 1371 0
-3257 -555 -638 1369 0
-3257 -555 -636 1367 0
-3257 -555 -634 1365 0
-3257 -555 -632 1363 0
-3257 -555 -630 1361 0
-3257 -555 -628 1359 0
-3257 -555 -626 1357 0
-3257 -555 -624 1355 0
-3257 -555 -622 1353 0
-3257 -555 -620 1351 0
-3257 -555 -618 1349 0
-3257 -555 -616 1347 0
-3257 -555 -614 1345 0
-3257 -555 -612 1343 0
-3257 -555 -610 1341 0
-3257 -555 -608 1339 0
-3257 -555 -606 1337 0
-3257 -555 -605 1335 0
-3257 -553 -654 1383 0
-3257 -553 -652 1381 0
-3257 -553 -650 1379 0
-3257 -553 -648 1377 0
-3257 -553 -646 1375 0
-3257 -553 -644 1373 0
-3257 -553 -642 1371 0
-3257 -553 -640 1369 0
-3257 -553 -638 1367 0
-3257 -553 -636 1365 0
-3257 -553 -634 1363 0
-3257 -553 -632 1361 0
-3257 -553 -630 1359 0
-3257 -553 -628 1357 0
-3257 -553 -626 1355 0
-3257 -553 -624 1353 0
-3257 -553 -622 1351 0
-3257 -553 -620 1349 0
-3257 -553 -618 1347 0
-3257 -553 -616 1345 0
-3257 -553 -614 1343 0
-3257 -553 -612 1341 0
-3257 -553 -610 1339 0
-3257 -553 -608 1337 0
-3257 -553 -606 1335 0
-3257 -553 -605 1333 0
-3257 -551 -656 1383 0
-3257 -551 -654 1381 0
-3257 -551 -652 1379 0
-3257 -551 -650 1377 0
-3257 -551 -648 1375 0
-3257 -551 -646 1373 0
-3257 -551 -644 1371 0
-3257 -551 -642 1369 0
-3257 -551 -640 1367 0
-3257 -551 -638 1365 0
-3257 -551 -636 1363 0
-3257 -551 -634 1361 0
-3257 -551 -632 1359 0
-3257 -551 -630 1357 0
-3257 -551 -628 1355 0
-3257 -551 -626 1353 0
-3257 -551 -624 1351 0
-3257 -551 -622 1349 0
-3257 -551 -620 1347 0
-3257 -551 -618 1345 0
-3257 -551 -616 1343 0
-3257 -551 -614 1341 0
-3257 -551 -612 1339 0
-3257 -551 -610 1337 0
-3257 -551 -608 1335 0
-3257 -551 -606 1333 0
-3257 -551 -605 1331 0
-3257 -549 -658 1383 0
-3257 -549 -656 1381 0
-3257 -549 -654 1379 0
-3257 -549 -652 1377 0
-3257 -549 -650 1375 0
-3257 -549 -648 1373 0
-3257 -549 -646 1371 0
-3257 -549 -644 1369 0
-3257 -549 -642 1367 0
-3257 -549 -640 1365 0
-3257 -549 -638 1363 0
-3257 -549 -636 1361 0
-3257 -549 -634 1359 0
-3257 -549 -632 1357 0
-3257 -549 -630 1355 0
-3257 -549 -628 1353 0
-3257 -549 -626 1351 0
-3257 -549 -624 1349 0
-3257 -549 -622 1347 0
-3257 -549 -620 1345 0
-3257 -549 -618 1343 0
-3257 -549 -616 1341 0
-3257 -549 -614 1339 0
-3257 -549 -612 1337 0
-3257 -549 -610 1335 0
-3257 -549 -608 1333 0
-3257 -549 -606 1331 0
-3257 -549 -605 1329 0
-3257 -547 -660 1383 0
-3257 -547 -658 1381 0
-3257 -547 -656 1379 0
-3257 -547 -654 1377 0
-3257 -547 -652 1375 0
-3257 -547 -650 1373 0
-3257 -547 -648 1371 0
-3257 -547 -646 1369 0
-3257 -547 -644 1367 0
-3257 -547 -642 1365 0
-3257 -547 -640 1363 0
-3257 -547 -638 1361 0
-3257 -547 -636 1359 0
-3257 -547 -634 1357 0
-3257 -547 -632 1355 0
-3257 -547 -630 1353 0
-3257 -547 -628 1351 0
-3257 -547 -626 1349 0
-3257 -547 -624 1347 0
-3257 -547 -622 1345 0
-3257 -547 -620 1343 0
-3257 -547 -618 1341 0
-3257 -547 -616 1339 0
-3257 -547 -614 1337 0
-3257 -547 -612 1335 0
-3257 -547 -610 1333 0
-3257 -547 -608 1331 0
-3257 -547 -606 1329 0
-3257 -547 -605 1327 0
-3257 -545 -662 1383 0
-3257 -545 -660 1381 0
-3257 -545 -658 1379 0
-3257 -545 -656 1377 0
-3257 -545 -654 1375 0
-3257 -545 -652 1373 0
-3257 -545 -650 1371 0
-3257 -545 -648 1369 0
-3257 -545 -646 1367 0
-3257 -545 -644 1365 0
-3257 -545 -642 1363 0
-3257 -545 -640 1361 0
-3257 -545 -638 1359 0
-3257 -545 -636 1357 0
-3257 -545 -634 1355 0
-3257 -545 -632 1353 0
-3257 -545 -630 1351 0
-3257 -545 -628 1349 0
-3257 -545 -626 1347 0
-3257 -545 -624 1345 0
-3257 -545 -622 1343 0
-3257 -545 -620 1341 0
-3257 -545 -618 1339 0
-3257 -545 -616 1337 0
-3257 -545 -614 1335 0
-3257 -545 -612 1333 0
-3257 -545 -610 1331 0
-3257 -545 -608 1329 0
-3257 -545 -606 1327 0
-3257 -545 -605 1325 0
-3257 -543 -664 1383 0
-3257 -543 -662 1381 0
-3257 -543 -660 1379 0
-3257 -543 -658 1377 0
-3257 -543 -656 1375 0
-3257 -543 -654 1373 0
-3257 -543 -652 1371 0
-3257 -543 -650 1369 0
-3257 -543 -648 1367 0
-3257 -543 -646 1365 0
-3257 -543 -644 1363 0
-3257 -543 -642 1361 0
-3257 -543 -640 1359 0
-3257 -543 -638 1357 0
-3257 -543 -636 1355 0
-3257 -543 -634 1353 0
-3257 -543 -632 1351 0
-3257 -543 -630 1349 0
-3257 -543 -628 1347 0
-3257 -543 -626 1345 0
-3257 -543 -624 1343 0
-3257 -543 -622 1341 0
-3257 -543 -620 1339 0
-3257 -543 -618 1337 0
-3257 -543 -616 1335 0
-3257 -543 -614 1333 0
-3257 -543 -612 1331 0
-3257 -543 -610 1329 0
-3257 -543 -608 1327 0
-3257 -543 -606 1325 0
-3257 -543 -605 1323 0
-3257 -541 -666 1383 0
-3257 -541 -664 1381 0
-3257 -541 -662 1379 0
-3257 -541 -660 1377 0
-3257 -541 -658 1375 0
-3257 -541 -656 1373 0
-3257 -541 -654 1371 0
-3257 -541 -652 1369 0
-3257 -541 -650 1367 0
-3257 -541 -648 1365 0
-3257 -541 -646 1363 0
-3257 -541 -644 1361 0
-3257 -541 -642 1359 0
-3257 -541 -640 1357 0
-3257 -541 -638 1355 0
-3257 -541 -636 1353 0
-3257 -541 -634 1351 0
-3257 -541 -632 1349 0
-3257 -541 -630 1347 0
-3257 -541 -628 1345 0
-3257 -541 -626 1343 0
-3257 -541 -624 1341 0
-3257 -541 -622 1339 0
-3257 -541 -620 1337 0
-3257 -541 -618 1335 0
-3257 -541 -616 1333 0
-3257 -541 -614 1331 0
-3257 -541 -612 1329 0
-3257 -541 -610 1327 0
-3257 -541 -608 1325 0
-3257 -541 -606 1323 0
-3257 -541 -605 1321 0
-3257 -539 -668 1383 0
-3257 -539 -666 1381 0
-3257 -539 -664 1379 0
-3257 -539 -662 1377 0
-3257 -539 -660 1375 0
-3257 -539 -658 1373 0
-3257 -539 -656 1371 0
-3257 -539 -654 1369 0
-3257 -539 -652 1367 0
-3257 -539 -650 1365 0
-3257 -539 -648 1363 0
-3257 -539 -646 1361 0
-3257 -539 -644 1359 0
-3257 -539 -642 1357 0
-3257 -539 -640 1355 0
-3257 -539 -638 1353 0
-3257 -539 -636 1351 0
-3257 -539 -634 1349 0
-3257 -539 -632 1347 0
-3257 -539 -630 1345 0
-3257 -539 -628 1343 0
-3257 -539 -626 1341 0
-3257 -539 -624 1339 0
-3257 -539 -622 1337 0
-3257 -539 -620 1335 0
-3257 -539 -618 1333 0
-3257 -539 -616 1331 0
-3257 -539 -614 1329 0
-3257 -539 -612 1327 0
-3257 -539 -610 1325 0
-3257 -539 -608 1323 0
-3257 -539 -606 1321 0
-3257 -539 -605 1319 0
-3257 -537 -670 1383 0
-3257 -537 -668 1381 0
-3257 -537 -666 1379 0
-3257 -537 -664 1377 0
-3257 -537 -662 1375 0
-3257 -537 -660 1373 0
-3257 -537 -658 1371 0
-3257 -537 -656 1369 0
-3257 -537 -654 1367 0
-3257 -537 -652 1365 0
-3257 -537 -650 1363 0
-3257 -537 -648 1361 0
-3257 -537 -646 1359 0
-3257 -537 -644 1357 0
-3257 -537 -642 1355 0
-3257 -537 -640 1353 0
-3257 -537 -638 1351 0
-3257 -537 -636 1349 0
-3257 -537 -634 1347 0
-3257 -537 -632 1345 0
-3257 -537 -630 1343 0
-3257 -537 -628 1341 0
-3257 -537 -626 1339 0
-3257 -537 -624 1337 0
-3257 -537 -622 1335 0
-3257 -537 -620 1333 0
-3257 -537 -618 1331 0
-3257 -537 -616 1329 0
-3257 -537 -614 1327 0
-3257 -537 -612 1325 0
-3257 -537 -610 1323 0
-3257 -537 -608 1321 0
-3257 -537 -606 1319 0
-3257 -537 -605 1317 0
-3257 -535 -672 1383 0
-3257 -535 -670 1381 0
-3257 -535 -668 1379 0
-3257 -535 -666 1377 0
-3257 -535 -664 1375 0
-3257 -535 -662 1373 0
-3257 -535 -660 1371 0
-3257 -535 -658 1369 0
-3257 -535 -656 1367 0
-3257 -535 -654 1365 0
-3257 -535 -652 1363 0
-3257 -535 -650 1361 0
-3257 -535 -648 1359 0
-3257 -535 -646 1357 0
-3257 -535 -644 1355 0
-3257 -535 -642 1353 0
-3257 -535 -640 1351 0
-3257 -535 -638 1349 0
-3257 -535 -636 1347 0
-3257 -535 -634 1345 0
-3257 -535 -632 1343 0
-3257 -535 -630 1341 0
-3257 -535 -628 1339 0
-3257 -535 -626 1337 0
-3257 -535 -624 1335 0
-3257 -535 -622 1333 0
-3257 -535 -620 1331 0
-3257 -535 -618 1329 0
-3257 -535 -616 1327 0
-3257 -535 -614 1325 0
-3257 -535 -612 1323 0
-3257 -535 -610 1321 0
-3257 -535 -608 1319 0
-3257 -535 -606 1317 0
-3257 -535 -605 1315 0
-3257 -534 -674 1383 0
-3257 -534 -672 1381 0
-3257 -534 -670 1379 0
-3257 -534 -668 1377 0
-3257 -534 -666 1375 0
-3257 -534 -664 1373 0
-3257 -534 -662 1371 0
-3257 -534 -660 1369 0
-3257 -534 -658 1367 0
-3257 -534 -656 1365 0
-3257 -534 -654 1363 0
-3257 -534 -652 1361 0
-3257 -534 -650 1359 0
-3257 -534 -648 1357 0
-3257 -534 -646 1355 0
-3257 -534 -644 1353 0
-3257 -534 -642 1351 0
-3257 -534 -640 1349 0
-3257 -534 -638 1347 0
-3257 -534 -636 1345 0
-3257 -534 -634 1343 0
-3257 -534 -632 1341 0
-3257 -534 -630 1339 0
-3257 -534 -628 1337 0
-3257 -534 -626 1335 0
-3257 -534 -624 1333 0
-3257 -534 -622 1331 0
-3257 -534 -620 1329 0
-3257 -534 -618 1327 0
-3257 -534 -616 1325 0
-3257 -534 -614 1323 0
-3257 -534 -612 1321 0
-3257 -534 -610 1319 0
-3257 -534 -608 1317 0
-3257 -534 -606 1315 0
-3257 -534 -605 1313 0
3257 -1313 0
3257 605 -1315 0
3257 606 -1317 0
3257 608 -1319 0
3257 610 -1321 0
3257 612 -1323 0
3257 614 -1325 0
3257 616 -1327 0
3257 618 -1329 0
3257 620 -1331 0
3257 622 -1333 0
3257 624 -1335 0
3257 626 -1337 0
3257 628 -1339 0
3257 630 -1341 0
3257 632 -1343 0
3257 634 -1345 0
3257 636 -1347 0
3257 638 -1349 0
3257 640 -1351 0
3257 642 -1353 0
3257 644 -1355 0
3257 646 -1357 0
3257 648 -1359 0
3257 650 -1361 0
3257 652 -1363 0
3257 654 -1365 0
3257 656 -1367 0
3257 658 -1369 0
3257 660 -1371 0
3257 662 -1373 0
3257 664 -1375 0
3257 666 -1377 0
3257 668 -1379 0
3257 670 -1381 0
3257 672 -1383 0
3257 674 0
3257 534 -1315 0
3257 534 605 -1317 0
3257 534 606 -1319 0
3257 534 608 -1321 0
3257 534 610 -1323 0
3257 534 612 -1325 0
3257 534 614 -1327 0
3257 534 616 -1329 0
3257 534 618 -1331 0
3257 534 620 -1333 0
3257 534 622 -1335 0
3257 534 624 -1337 0
3257 534 626 -1339 0
3257 534 628 -1341 0
3257 534 630 -1343 0
3257 534 632 -1345 0
3257 534 634 -1347 0
3257 534 636 -1349 0
3257 534 638 -1351 0
3257 534 640 -1353 0
3257 534 642 -1355 0
3257 534 644 -1357 0
3257 534 646 -1359 0
3257 534 648 -1361 0
3257 534 650 -1363 0
3257 534 652 -1365 0
3257 534 654 -1367 0
3257 534 656 -1369 0
3257 534 658 -1371 0
3257 534 660 -1373 0
3257 534 662 -1375 0
3257 534 664 -1377 0
3257 534 666 -1379 0
3257 534 668 -1381 0
3257 534 670 -1383 0
3257 534 672 0
3257 534 674 0
3257 535 -1317 0
3257 535 605 -1319 0
3257 535 606 -1321 0
3257 535 608 -1323 0
3257 535 610 -1325 0
3257 535 612 -1327 0
3257 535 614 -1329 0
3257 535 616 -1331 0
3257 535 618 -1333 0
3257 535 620 -1335 0
3257 535 622 -1337 0
3257 535 624 -1339 0
3257 535 626 -1341 0
3257 535 628 -1343 0
3257 535 630 -1345 0
3257 535 632 -1347 0
3257 535 634 -1349 0
3257 535 636 -1351 0
3257 535 638 -1353 0
3257 535 640 -1355 0
3257 535 642 -1357 0
3257 535 644 -1359 0
3257 535 646 -1361 0
3257 535 648 -1363 0
3257 535 650 -1365 0
3257 535 652 -1367 0
3257 535 654 -1369 0
3257 535 656 -1371 0
3257 535 658 -1373 0
3257 535 660 -1375 0
3257 535 662 -1377 0
3257 535 664 -1379 0
3257 535 666 -1381 0
3257 535 668 -1383 0
3257 535 670 0
3257 535 672 0
3257 535 674 0
3257 537 -1319 0
3257 537 605 -1321 0
3257 537 606 -1323 0
3257 537 608 -1325 0
3257 537 610 -1327 0
3257 537 612 -1329 0
3257 537 614 -1331 0
3257 537 616 -1333 0
3257 537 618 -1335 0
3257 537 620 -1337 0
3257 537 622 -1339 0
3257 537 624 -1341 0
3257 537 626 -1343 0
3257 537 628 -1345 0
3257 537 630 -1347 0
3257 537 632 -1349 0
3257 537 634 -1351 0
3257 537 636 -1353 0
3257 537 638 -1355 0
3257 537 640 -1357 0
3257 537 642 -1359 0
3257 537 644 -1361 0
3257 537 646 -1363 0
3257 537 648 -1365 0
3257 537 650 -1367 0
3257 537 652 -1369 0
3257 537 654 -1371 0
3257 537 656 -1373 0
3257 537 658 -1375 0
3257 537 660 -1377 0
3257 537 662 -1379 0
3257 537 664 -1381 0
3257 537 666 -1383 0
3257 537 668 0
3257 537 670 0
3257 537 672 0
3257 537 674 0
3257 539 -1321 0
3257 539 605 -1323 0
3257 539 606 -1325 0
3257 539 608 -1327 0
3257 539 610 -1329 0
3257 539 612 -1331 0
3257 539 614 -1333 0
3257 539 616 -1335 0
3257 539 618 -1337 0
3257 539 620 -1339 0
3257 539 622 -1341 0
3257 539 624 -1343 0
3257 539 626 -1345 0
3257 539 628 -1347 0
3257 539 630 -1349 0
3257 539 632 -1351 0
3257 539 634 -1353 0
3257 539 636 -1355 0
3257 539 638 -1357 0
3257 539 640 -1359 0
3257 539 642 -1361 0
3257 539 644 -1363 0
3257 539 646 -1365 0
3257 539 648 -1367 0
3257 539 650 -1369 0
3257 539 652 -1371 0
3257 539 654 -1373 0
3257 539 656 -1375 0
3257 539 658 -1377 0
3257 539 660 -1379 0
3257 539 662 -1381 0
3257 539 664 -1383 0
3257 539 666 0
3257 539 668 0
3257 539 670 0
3257 539 672 0
3257 539 674 0
3257 541 -1323 0
3257 541 605 -1325 0
3257 541 606 -1327 0
3257 541 608 -1329 0
3257 541 610 -1331 0
3257 541 612 -1333 0
3257 541 614 -1335 0
3257 541 616 -1337 0
3257 541 618 -1339 0
3257 541 620 -1341 0
3257 541 622 -1343 0
3257 541 624 -1345 0
3257 541 626 -1347 0
3257 541 628 -1349 0
3257 541 630 -1351 0
3257 541 632 -1353 0
3257 541 634 -1355 0
3257 541 636 -1357 0
3257 541 638 -1359 0
3257 541 640 -1361 0
3257 541 642 -1363 0
3257 541 644 -1365 0
3257 541 646 -1367 0
3257 541 648 -1369 0
3257 541 650 -1371 0
3257 541 652 -1373 0
3257 541 654 -1375 0
3257 541 656 -1377 0
3257 541 658 -1379 0
3257 541 660 -1381 0
3257 541 662 -1383 0
3257 541 664 0
3257 541 666 0
3257 541 668 0
3257 541 670 0
3257 541 672 0
3257 541 674 0
3257 543 -1325 0
3257 543 605 -1327 0
3257 543 606 -1329 0
3257 543 608 -1331 0
3257 543 610 -1333 0
3257 543 612 -1335 0
3257 543 614 -1337 0
3257 543 616 -1339 0
3257 543 618 -1341 0
3257 543 620 -1343 0
3257 543 622 -1345 0
3257 543 624 -1347 0
3257 543 626 -1349 0
3257 543 628 -1351 0
3257 543 630 -1353 0
3257 543 632 -1355 0
3257 543 634 -1357 0
3257 543 636 -1359 0
3257 543 638 -1361 0
3257 543 640 -1363 0
3257 543 642 -1365 0
3257 543 644 -1367 0
3257 543 646 -1369 0
3257 543 648 -1371 0
3257 543 650 -1373 0
3257 543 652 -1375 0
3257 543 654 -1377 0
3257 543 656 -1379 0
3257 543 658 -1381 0
3257 543 660 -1383 0
3257 543 662 0
3257 543 664 0
3257 543 666 0
3257 543 668 0
3257 543 670 0
3257 543 672 0
3257 543 674 0
3257 545 -1327 0
3257 545 605 -1329 0
3257 545 606 -1331 0
3257 545 608 -1333 0
3257 545 610 -1335 0
3257 545 612 -1337 0
3257 545 614 -1339 0
3257 545 616 -1341 0
3257 545 618 -1343 0
3257 545 620 -1345 0
3257 545 622 -1347 0
3257 545 624 -1349 0
3257 545 626 -1351 0
3257 545 628 -1353 0
3257 545 630 -1355 0
3257 545 632 -1357 0
3257 545 634 -1359 0
3257 545 636 -1361 0
3257 545 638 -1363 0
3257 545 640 -1365 0
3257 545 642 -1367 0
3257 545 644 -1369 0
3257 545 646 -1371 0
3257 545 648 -1373 0
3257 545 650 -1375 0
3257 545 652 -1377 0
3257 545 654 -1379 0
3257 545 656 -1381 0
3257 545 658 -1383 0
3257 545 660 0
3257 545 662 0
3257 545 664 0
3257 545 666 0
3257 545 668 0
3257 545 670 0
3257 545 672 0
3257 545 674 0
3257 547 -1329 0
3257 547 605 -1331 0
3257 547 606 -1333 0
3257 547 608 -1335 0
3257 547 610 -1337 0
3257 547 612 -1339 0
3257 547 614 -1341 0
3257 547 616 -1343 0
3257 547 618 -1345 0
3257 547 620 -1347 0
3257 547 622 -1349 0
3257 547 624 -1351 0
3257 547 626 -1353 0
3257 547 628 -1355 0
3257 547 630 -1357 0
3257 547 632 -1359 0
3257 547 634 -1361 0
3257 547 636 -1363 0
3257 547 638 -1365 0
3257 547 640 -1367 0
3257 547 642 -1369 0
3257 547 644 -1371 0
3257 547 646 -1373 0
3257 547 648 -1375 0
3257 547 650 -1377 0
3257 547 652 -1379 0
3257 547 654 -1381 0
3257 547 656 -1383 0
3257 547 658 0
3257 547 660 0
3257 547 662 0
3257 547 664 0
3257 547 666 0
3257 547 668 0
3257 547 670 0
3257 547 672 0
3257 547 674 0
3257 549 -1331 0
3257 549 605 -1333 0
3257 549 606 -1335 0
3257 549 608 -1337 0
3257 549 610 -1339 0
3257 549 612 -1341 0
3257 549 614 -1343 0
3257 549 616 -1345 0
3257 549 618 -1347 0
3257 549 620 -1349 0
3257 549 622 -1351 0
3257 549 624 -1353 0
3257 549 626 -1355 0
3257 549 628 -1357 0
3257 549 630 -1359 0
3257 549 632 -1361 0
3257 549 634 -1363 0
3257 549 636 -1365 0
3257 549 638 -1367 0
3257 549 640 -1369 0
3257 549 642 -1371 0
3257 549 644 -1373 0
3257 549 646 -1375 0
3257 549 648 -1377 0
3257 549 650 -1379 0
3257 549 652 -1381 0
3257 549 654 -1383 0
3257 549 656 0
3257 549 658 0
3257 549 660 0
3257 549 662 0
3257 549 664 0
3257 549 666 0
3257 549 668 0
3257 549 670 0
3257 549 672 0
3257 549 674 0
3257 551 -1333 0
3257 551 605 -1335 0
3257 551 606 -1337 0
3257 551 608 -1339 0
3257 551 610 -1341 0
3257 551 612 -1343 0
3257 551 614 -1345 0
3257 551 616 -1347 0
3257 551 618 -1349 0
3257 551 620 -1351 0
3257 551 622 -1353 0
3257 551 624 -1355 0
3257 551 626 -1357 0
3257 551 628 -1359 0
3257 551 630 -1361 0
3257 551 632 -1363 0
3257 551 634 -1365 0
3257 551 636 -1367 0
3257 551 638 -1369 0
3257 551 640 -1371 0
3257 551 642 -1373 0
3257 551 644 -1375 0
3257 551 646 -1377 0
3257 551 648 -1379 0
3257 551 650 -1381 0
3257 551 652 -1383 0
3257 551 654 0
3257 551 656 0
3257 551 658 0
3257 551 660 0
3257 551 662 0
3257 551 664 0
3257 551 666 0
3257 551 668 0
3257 551 670 0
3257 551 672 0
3257 551 674 0
3257 553 -1335 0
3257 553 605 -1337 0
3257 553 606 -1339 0
3257 553 608 -1341 0
3257 553 610 -1343 0
3257 553 612 -1345 0
3257 553 614 -1347 0
3257 553 616 -1349 0
3257 553 618 -1351 0
3257 553 620 -1353 0
3257 553 622 -1355 0
3257 553 624 -1357 0
3257 553 626 -1359 0
3257 553 628 -1361 0
3257 553 630 -1363 0
3257 553 632 -1365 0
3257 553 634 -1367 0
3257 553 636 -1369 0
3257 553 638 -1371 0
3257 553 640 -1373 0
3257 553 642 -1375 0
3257 553 644 -1377 0
3257 553 646 -1379 0
3257 553 648 -1381 0
3257 553 650 -1383 0
3257 553 652 0
3257 553 654 0
3257 553 656 0
3257 553 658 0
3257 553 660 0
3257 553 662 0
3257 553 664 0
3257 553 666 0
3257 553 668 0
3257 553 670 0
3257 553 672 0
3257 553 674 0
3257 555 -1337 0
3257 555 605 -1339 0
3257 555 606 -1341 0
3257 555 608 -1343 0
3257 555 610 -1345 0
3257 555 612 -1347 0
3257 555 614 -1349 0
3257 555 616 -1351 0
3257 555 618 -1353 0
3257 555 620 -1355 0
3257 555 622 -1357 0
3257 555 624 -1359 0
3257 555 626 -1361 0
3257 555 628 -1363 0
3257 555 630 -1365 0
3257 555 632 -1367 0
3257 555 634 -1369 0
3257 555 636 -1371 0
3257 555 638 -1373 0
3257 555 640 -1375 0
3257 555 642 -1377 0
3257 555 644 -1379 0
3257 555 646 -1381 0
3257 555 648 -1383 0
3257 555 650 0
3257 555 652 0
3257 555 654 0
3257 555 656 0
3257 555 658 0
3257 555 660 0
3257 555 662 0
3257 555 664 0
3257 555 666 0
3257 555 668 0
3257 555 670 0
3257 555 672 0
3257 555 674 0
3257 557 -1339 0
3257 557 605 -1341 0
3257 557 606 -1343 0
3257 557 608 -1345 0
3257 557 610 -1347 0
3257 557 612 -1349 0
3257 557 614 -1351 0
3257 557 616 -1353 0
3257 557 618 -1355 0
3257 557 620 -1357 0
3257 557 622 -1359 0
3257 557 624 -1361 0
3257 557 626 -1363 0
3257 557 628 -1365 0
3257 557 630 -1367 0
3257 557 632 -1369 0
3257 557 634 -1371 0
3257 557 636 -1373 0
3257 557 638 -1375 0
3257 557 640 -1377 0
3257 557 642 -1379 0
3257 557 644 -1381 0
3257 557 646 -1383 0
3257 557 648 0
3257 557 650 0
3257 557 652 0
3257 557 654 0
3257 557 656 0
3257 557 658 0
3257 557 660 0
3257 557 662 0
3257 557 664 0
3257 557 666 0
3257 557 668 0
3257 557 670 0
3257 557 672 0
3257 557 674 0
3257 559 -1341 0
3257 559 605 -1343 0
3257 559 606 -1345 0
3257 559 608 -1347 0
3257 559 610 -1349 0
3257 559 612 -1351 0
3257 559 614 -1353 0
3257 559 616 -1355 0
3257 559 618 -1357 0
3257 559 620 -1359 0
3257 559 622 -1361 0
3257 559 624 -1363 0
3257 559 626 -1365 0
3257 559 628 -1367 0
3257 559 630 -1369 0
3257 559 632 -1371 0
3257 559 634 -1373 0
3257 559 636 -1375 0
3257 559 638 -1377 0
3257 559 640 -1379 0
3257 559 642 -1381 0
3257 559 644 -1383 0
3257 559 646 0
3257 559 648 0
3257 559 650 0
3257 559 652 0
3257 559 654 0
3257 559 656 0
3257 559 658 0
3257 559 660 0
3257 559 662 0
3257 559 664 0
3257 559 666 0
3257 559 668 0
3257 559 670 0
3257 559 672 0
3257 559 674 0
3257 561 -1343 0
3257 561 605 -1345 0
3257 561 606 -1347 0
3257 561 608 -1349 0
3257 561 610 -1351 0
3257 561 612 -1353 0
3257 561 614 -1355 0
3257 561 616 -1357 0
3257 561 618 -1359 0
3257 561 620 -1361 0
3257 561 622 -1363 0
3257 561 624 -1365 0
3257 561 626 -1367 0
3257 561 628 -1369 0
3257 561 630 -1371 0
3257 561 632 -1373 0
3257 561 634 -1375 0
3257 561 636 -1377 0
3257 561 638 -1379 0
3257 561 640 -1381 0
3257 561 642 -1383 0
3257 561 644 0
3257 561 646 0
3257 561 648 0
3257 561 650 0
3257 561 652 0
3257 561 654 0
3257 561 656 0
3257 561 658 0
3257 561 660 0
3257 561 662 0
3257 561 664 0
3257 561 666 0
3257 561 668 0
3257 561 670 0
3257 561 672 0
3257 561 674 0
3257 563 -1345 0
3257 563 605 -1347 0
3257 563 606 -1349 0
3257 563 608 -1351 0
3257 563 610 -1353 0
3257 563 612 -1355 0
3257 563 614 -1357 0
3257 563 616 -1359 0
3257 563 618 -1361 0
3257 563 620 -1363 0
3257 563 622 -1365 0
3257 563 624 -1367 0
3257 563 626 -1369 0
3257 563 628 -1371 0
3257 563 630 -1373 0
3257 563 632 -1375 0
3257 563 634 -1377 0
3257 563 636 -1379 0
3257 563 638 -1381 0
3257 563 640 -1383 0
3257 563 642 0
3257 563 644 0
3257 563 646 0
3257 563 648 0
3257 563 650 0
3257 563 652 0
3257 563 654 0
3257 563 656 0
3257 563 658 0
3257 563 660 0
3257 563 662 0
3257 563 664 0
3257 563 666 0
3257 563 668 0
3257 563 670 0
3257 563 672 0
3257 563 674 0
3257 565 -1347 0
3257 565 605 -1349 0
3257 565 606 -1351 0
3257 565 608 -1353 0
3257 565 610 -1355 0
3257 565 612 -1357 0
3257 565 614 -1359 0
3257 565 616 -1361 0
3257 565 618 -1363 0
3257 565 620 -1365 0
3257 565 622 -1367 0
3257 565 624 -1369 0
3257 565 626 -1371 0
3257 565 628 -1373 0
3257 565 630 -1375 0
3257 565 632 -1377 0
3257 565 634 -1379 0
3257 565 636 -1381 0
3257 565 638 -1383 0
3257 565 640 0
3257 565 642 0
3257 565 644 0
3257 565 646 0
3257 565 648 0
3257 565 650 0
3257 565 652 0
3257 565 654 0
3257 565 656 0
3257 565 658 0
3257 565 660 0
3257 565 662 0
3257 565 664 0
3257 565 666 0
3257 565 668 0
3257 565 670 0
3257 565 672 0
3257 565 674 0
3257 567 -1349 0
3257 567 605 -1351 0
3257 567 606 -1353 0
3257 567 608 -1355 0
3257 567 610 -1357 0
3257 567 612 -1359 0
3257 567 614 -1361 0
3257 567 616 -1363 0
3257 567 618 -1365 0
3257 567 620 -1367 0
3257 567 622 -1369 0
3257 567 624 -1371 0
3257 567 626 -1373 0
3257 567 628 -1375 0
3257 567 630 -1377 0
3257 567 632 -1379 0
3257 567 634 -1381 0
3257 567 636 -1383 0
3257 567 638 0
3257 567 640 0
3257 567 642 0
3257 567 644 0
3257 567 646 0
3257 567 648 0
3257 567 650 0
3257 567 652 0
3257 567 654 0
3257 567 656 0
3257 567 658 0
3257 567 660 0
3257 567 662 0
3257 567 664 0
3257 567 666 0
3257 567 668 0
3257 567 670 0
3257 567 672 0
3257 567 674 0
3257 569 -1351 0
3257 569 605 -1353 0
3257 569 606 -1355 0
3257 569 608 -1357 0
3257 569 610 -1359 0
3257 569 612 -1361 0
3257 569 614 -1363 0
3257 569 616 -1365 0
3257 569 618 -1367 0
3257 569 620 -1369 0
3257 569 622 -1371 0
3257 569 624 -1373 0
3257 569 626 -1375 0
3257 569 628 -1377 0
3257 569 630 -1379 0
3257 569 632 -1381 0
3257 569 634 -1383 0
3257 569 636 0
3257 569 638 0
3257 569 640 0
3257 569 642 0
3257 569 644 0
3257 569 646 0
3257 569 648 0
3257 569 650 0
3257 569 652 0
3257 569 654 0
3257 569 656 0
3257 569 658 0
3257 569 660 0
3257 569 662 0
3257 569 664 0
3257 569 666 0
3257 569 668 0
3257 569 670 0
3257 569 672 0
3257 569 674 0
3257 571 -1353 0
3257 571 605 -1355 0
3257 571 606 -1357 0
3257 571 608 -1359 0
3257 571 610 -1361 0
3257 571 612 -1363 0
3257 571 614 -1365 0
3257 571 616 -1367 0
3257 571 618 -1369 0
3257 571 620 -1371 0
3257 571 622 -1373 0
3257 571 624 -1375 0
3257 571 626 -1377 0
3257 571 628 -1379 0
3257 571 630 -1381 0
3257 571 632 -1383 0
3257 571 634 0
3257 571 636 0
3257 571 638 0
3257 571 640 0
3257 571 642 0
3257 571 644 0
3257 571 646 0
3257 571 648 0
3257 571 650 0
3257 571 652 0
3257 571 654 0
3257 571 656 0
3257 571 658 0
3257 571 660 0
3257 571 662 0
3257 571 664 0
3257 571 666 0
3257 571 668 0
3257 571 670 0
3257 571 672 0
3257 571 674 0
3257 573 -1355 0
3257 573 605 -1357 0
3257 573 606 -1359 0
3257 573 608 -1361 0
3257 573 610 -1363 0
3257 573 612 -1365 0
3257 573 614 -1367 0
3257 573 616 -1369 0
3257 573 618 -1371 0
3257 573 620 -1373 0
3257 573 622 -1375 0
3257 573 624 -1377 0
3257 573 626 -1379 0
3257 573 628 -1381 0
3257 573 630 -1383 0
3257 573 632 0
3257 573 634 0
3257 573 636 0
3257 573 638 0
3257 573 640 0
3257 573 642 0
3257 573 644 0
3257 573 646 0
3257 573 648 0
3257 573 650 0
3257 573 652 0
3257 573 654 0
3257 573 656 0
3257 573 658 0
3257 573 660 0
3257 573 662 0
3257 573 664 0
3257 573 666 0
3257 573 668 0
3257 573 670 0
3257 573 672 0
3257 573 674 0
3257 575 -1357 0
3257 575 605 -1359 0
3257 575 606 -1361 0
3257 575 608 -1363 0
3257 575 610 -1365 0
3257 575 612 -1367 0
3257 575 614 -1369 0
3257 575 616 -1371 0
3257 575 618 -1373 0
3257 575 620 -1375 0
3257 575 622 -1377 0
3257 575 624 -1379 0
3257 575 626 -1381 0
3257 575 628 -1383 0
3257 575 630 0
3257 575 632 0
3257 575 634 0
3257 575 636 0
3257 575 638 0
3257 575 640 0
3257 575 642 0
3257 575 644 0
3257 575 646 0
3257 575 648 0
3257 575 650 0
3257 575 652 0
3257 575 654 0
3257 575 656 0
3257 575 658 0
3257 575 660 0
3257 575 662 0
3257 575 664 0
3257 575 666 0
3257 575 668 0
3257 575 670 0
3257 575 672 0
3257 575 674 0
3257 577 -1359 0
3257 577 605 -1361 0
3257 577 606 -1363 0
3257 577 608 -1365 0
3257 577 610 -1367 0
3257 577 612 -1369 0
3257 577 614 -1371 0
3257 577 616 -1373 0
3257 577 618 -1375 0
3257 577 620 -1377 0
3257 577 622 -1379 0
3257 577 624 -1381 0
3257 577 626 -1383 0
3257 577 628 0
3257 577 630 0
3257 577 632 0
3257 577 634 0
3257 577 636 0
3257 577 638 0
3257 577 640 0
3257 577 642 0
3257 577 644 0
3257 577 646 0
3257 577 648 0
3257 577 650 0
3257 577 652 0
3257 577 654 0
3257 577 656 0
3257 577 658 0
3257 577 660 0
3257 577 662 0
3257 577 664 0
3257 577 666 0
3257 577 668 0
3257 577 670 0
3257 577 672 0
3257 577 674 0
3257 579 -1361 0
3257 579 605 -1363 0
3257 579 606 -1365 0
3257 579 608 -1367 0
3257 579 610 -1369 0
3257 579 612 -1371 0
3257 579 614 -1373 0
3257 579 616 -1375 0
3257 579 618 -1377 0
3257 579 620 -1379 0
3257 579 622 -1381 0
3257 579 624 -1383 0
3257 579 626 0
3257 579 628 0
3257 579 630 0
3257 579 632 0
3257 579 634 0
3257 579 636 0
3257 579 638 0
3257 579 640 0
3257 579 642 0
3257 579 644 0
3257 579 646 0
3257 579 648 0
3257 579 650 0
3257 579 652 0
3257 579 654 0
3257 579 656 0
3257 579 658 0
3257 579 660 0
3257 579 662 0
3257 579 664 0
3257 579 666 0
3257 579 668 0
3257 579 670 0
3257 579 672 0
3257 579 674 0
3257 581 -1363 0
3257 581 605 -1365 0
3257 581 606 -1367 0
3257 581 608 -1369 0
3257 581 610 -1371 0
3257 581 612 -1373 0
3257 581 614 -1375 0
3257 581 616 -1377 0
3257 581 618 -1379 0
3257 581 620 -1381 0
3257 581 622 -1383 0
3257 581 624 0
3257 581 626 0
3257 581 628 0
3257 581 630 0
3257 581 632 0
3257 581 634 0
3257 581 636 0
3257 581 638 0
3257 581 640 0
3257 581 642 0
3257 581 644 0
3257 581 646 0
3257 581 648 0
3257 581 650 0
3257 581 652 0
3257 581 654 0
3257 581 656 0
3257 581 658 0
3257 581 660 0
3257 581 662 0
3257 581 664 0
3257 581 666 0
3257 581 668 0
3257 581 670 0
3257 581 672 0
3257 581 674 0
3257 583 -1365 0
3257 583 605 -1367 0
3257 583 606 -1369 0
3257 583 608 -1371 0
3257 583 610 -1373 0
3257 583 612 -1375 0
3257 583 614 -1377 0
3257 583 616 -1379 0
3257 583 618 -1381 0
3257 583 620 -1383 0
3257 583 622 0
3257 583 624 0
3257 583 626 0
3257 583 628 0
3257 583 630 0
3257 583 632 0
3257 583 634 0
3257 583 636 0
3257 583 638 0
3257 583 640 0
3257 583 642 0
3257 583 644 0
3257 583 646 0
3257 583 648 0
3257 583 650 0
3257 583 652 0
3257 583 654 0
3257 583 656 0
3257 583 658 0
3257 583 660 0
3257 583 662 0
3257 583 664 0
3257 583 666 0
3257 583 668 0
3257 583 670 0
3257 583 672 0
3257 583 674 0
3257 585 -1367 0
3257 585 605 -1369 0
3257 585 606 -1371 0
3257 585 608 -1373 0
3257 585 610 -1375 0
3257 585 612 -1377 0
3257 585 614 -1379 0
3257 585 616 -1381 0
3257 585 618 -1383 0
3257 585 620 0
3257 585 622 0
3257 585 624 0
3257 585 626 0
3257 585 628 0
3257 585 630 0
3257 585 632 0
3257 585 634 0
3257 585 636 0
3257 585 638 0
3257 585 640 0
3257 585 642 0
3257 585 644 0
3257 585 646 0
3257 585 648 0
3257 585 650 0
3257 585 652 0
3257 585 654 0
3257 585 656 0
3257 585 658 0
3257 585 660 0
3257 585 662 0
3257 585 664 0
3257 585 666 0
3257 585 668 0
3257 585 670 0
3257 585 672 0
3257 585 674 0
3257 587 -1369 0
3257 587 605 -1371 0
3257 587 606 -1373 0
3257 587 608 -1375 0
3257 587 610 -1377 0
3257 587 612 -1379 0
3257 587 614 -1381 0
3257 587 616 -1383 0
3257 587 618 0
3257 587 620 0
3257 587 622 0
3257 587 624 0
3257 587 626 0
3257 587 628 0
3257 587 630 0
3257 587 632 0
3257 587 634 0
3257 587 636 0
3257 587 638 0
3257 587 640 0
3257 587 642 0
3257 587 644 0
3257 587 646 0
3257 587 648 0
3257 587 650 0
3257 587 652 0
3257 587 654 0
3257 587 656 0
3257 587 658 0
3257 587 660 0
3257 587 662 0
3257 587 664 0
3257 587 666 0
3257 587 668 0
3257 587 670 0
3257 587 672 0
3257 587 674 0
3257 589 -1371 0
3257 589 605 -1373 0
3257 589 606 -1375 0
3257 589 608 -1377 0
3257 589 610 -1379 0
3257 589 612 -1381 0
3257 589 614 -1383 0
3257 589 616 0
3257 589 618 0
3257 589 620 0
3257 589 622 0
3257 589 624 0
3257 589 626 0
3257 589 628 0
3257 589 630 0
3257 589 632 0
3257 589 634 0
3257 589 636 0
3257 589 638 0
3257 589 640 0
3257 589 642 0
3257 589 644 0
3257 589 646 0
3257 589 648 0
3257 589 650 0
3257 589 652 0
3257 589 654 0
3257 589 656 0
3257 589 658 0
3257 589 660 0
3257 589 662 0
3257 589 664 0
3257 589 666 0
3257 589 668 0
3257 589 670 0
3257 589 672 0
3257 589 674 0
3257 591 -1373 0
3257 591 605 -1375 0
3257 591 606 -1377 0
3257 591 608 -1379 0
3257 591 610 -1381 0
3257 591 612 -1383 0
3257 591 614 0
3257 591 616 0
3257 591 618 0
3257 591 620 0
3257 591 622 0
3257 591 624 0
3257 591 626 0
3257 591 628 0
3257 591 630 0
3257 591 632 0
3257 591 634 0
3257 591 636 0
3257 591 638 0
3257 591 640 0
3257 591 642 0
3257 591 644 0
3257 591 646 0
3257 591 648 0
3257 591 650 0
3257 591 652 0
3257 591 654 0
3257 591 656 0
3257 591 658 0
3257 591 660 0
3257 591 662 0
3257 591 664 0
3257 591 666 0
3257 591 668 0
3257 591 670 0
3257 591 672 0
3257 591 674 0
3257 593 -1375 0
3257 593 605 -1377 0
3257 593 606 -1379 0
3257 593 608 -1381 0
3257 593 610 -1383 0
3257 593 612 0
3257 593 614 0
3257 593 616 0
3257 593 618 0
3257 593 620 0
3257 593 622 0
3257 593 624 0
3257 593 626 0
3257 593 628 0
3257 593 630 0
3257 593 632 0
3257 593 634 0
3257 593 636 0
3257 593 638 0
3257 593 640 0
3257 593 642 0
3257 593 644 0
3257 593 646 0
3257 593 648 0
3257 593 650 0
3257 593 652 0
3257 593 654 0
3257 593 656 0
3257 593 658 0
3257 593 660 0
3257 593 662 0
3257 593 664 0
3257 593 666 0
3257 593 668 0
3257 593 670 0
3257 593 672 0
3257 593 674 0
3257 595 -1377 0
3257 595 605 -1379 0
3257 595 606 -1381 0
3257 595 608 -1383 0
3257 595 610 0
3257 595 612 0
3257 595 614 0
3257 595 616 0
3257 595 618 0
3257 595 620 0
3257 595 622 0
3257 595 624 0
3257 595 626 0
3257 595 628 0
3257 595 630 0
3257 595 632 0
3257 595 634 0
3257 595 636 0
3257 595 638 0
3257 595 640 0
3257 595 642 0
3257 595 644 0
3257 595 646 0
3257 595 648 0
3257 595 650 0
3257 595 652 0
3257 595 654 0
3257 595 656 0
3257 595 658 0
3257 595 660 0
3257 595 662 0
3257 595 664 0
3257 595 666 0
3257 595 668 0
3257 595 670 0
3257 595 672 0
3257 595 674 0
3257 597 -1379 0
3257 597 605 -1381 0
3257 597 606 -1383 0
3257 597 608 0
3257 597 610 0
3257 597 612 0
3257 597 614 0
3257 597 616 0
3257 597 618 0
3257 597 620 0
3257 597 622 0
3257 597 624 0
3257 597 626 0
3257 597 628 0
3257 597 630 0
3257 597 632 0
3257 597 634 0
3257 597 636 0
3257 597 638 0
3257 597 640 0
3257 597 642 0
3257 597 644 0
3257 597 646 0
3257 597 648 0
3257 597 650 0
3257 597 652 0
3257 597 654 0
3257 597 656 0
3257 597 658 0
3257 597 660 0
3257 597 662 0
3257 597 664 0
3257 597 666 0
3257 597 668 0
3257 597 670 0
3257 597 672 0
3257 597 674 0
3257 599 -1381 0
3257 599 605 -1383 0
3257 599 606 0
3257 599 608 0
3257 599 610 0
3257 599 612 0
3257 599 614 0
3257 599 616 0
3257 599 618 0
3257 599 620 0
3257 599 622 0
3257 599 624 0
3257 599 626 0
3257 599 628 0
3257 599 630 0
3257 599 632 0
3257 599 634 0
3257 599 636 0
3257 599 638 0
3257 599 640 0
3257 599 642 0
3257 599 644 0
3257 599 646 0
3257 599 648 0
3257 599 650 0
3257 599 652 0
3257 599 654 0
3257 599 656 0
3257 599 658 0
3257 599 660 0
3257 599 662 0
3257 599 664 0
3257 599 666 0
3257 599 668 0
3257 599 670 0
3257 599 672 0
3257 599 674 0
3257 601 -1383 0
3257 601 605 0
3257 601 606 0
3257 601 608 0
3257 601 610 0
3257 601 612 0
3257 601 614 0
3257 601 616 0
3257 601 618 0
3257 601 620 0
3257 601 622 0
3257 601 624 0
3257 601 626 0
3257 601 628 0
3257 601 630 0
3257 601 632 0
3257 601 634 0
3257 601 636 0
3257 601 638 0
3257 601 640 0
3257 601 642 0
3257 601 644 0
3257 601 646 0
3257 601 648 0
3257 601 650 0
3257 601 652 0
3257 601 654 0
3257 601 656 0
3257 601 658 0
3257 601 660 0
3257 601 662 0
3257 601 664 0
3257 601 666 0
3257 601 668 0
3257 601 670 0
3257 601 672 0
3257 601 674 0
3257 603 0
3257 603 605 0
3257 603 606 0
3257 603 608 0
3257 603 610 0
3257 603 612 0
3257 603 614 0
3257 603 616 0
3257 603 618 0
3257 603 620 0
3257 603 622 0
3257 603 624 0
3257 603 626 0
3257 603 628 0
3257 603 630 0
3257 603 632 0
3257 603 634 0
3257 603 636 0
3257 603 638 0
3257 603 640 0
3257 603 642 0
3257 603 644 0
3257 603 646 0
3257 603 648 0
3257 603 650 0
3257 603 652 0
3257 603 654 0
3257 603 656 0
3257 603 658 0
3257 603 660 0
3257 603 662 0
3257 603 664 0
3257 603 666 0
3257 603 668 0
3257 603 670 0
3257 603 672 0
3257 603 674 0
c ((108<=(aux231 - shift(num_occupied_by_types_00000, -36) - shift(num_occupied_by_types_00001, -36)))=tv=SATLiteral(3258))
-3258 -1311 0
-3258 605 -1313 0
-3258 606 -1315 0
-3258 608 -1317 0
-3258 610 -1319 0
-3258 612 -1321 0
-3258 614 -1323 0
-3258 616 -1325 0
-3258 618 -1327 0
-3258 620 -1329 0
-3258 622 -1331 0
-3258 624 -1333 0
-3258 626 -1335 0
-3258 628 -1337 0
-3258 630 -1339 0
-3258 632 -1341 0
-3258 634 -1343 0
-3258 636 -1345 0
-3258 638 -1347 0
-3258 640 -1349 0
-3258 642 -1351 0
-3258 644 -1353 0
-3258 646 -1355 0
-3258 648 -1357 0
-3258 650 -1359 0
-3258 652 -1361 0
-3258 654 -1363 0
-3258 656 -1365 0
-3258 658 -1367 0
-3258 660 -1369 0
-3258 662 -1371 0
-3258 664 -1373 0
-3258 666 -1375 0
-3258 668 -1377 0
-3258 670 -1379 0
-3258 672 -1381 0
-3258 674 -1383 0
-3258 534 -1313 0
-3258 534 605 -1315 0
-3258 534 606 -1317 0
-3258 534 608 -1319 0
-3258 534 610 -1321 0
-3258 534 612 -1323 0
-3258 534 614 -1325 0
-3258 534 616 -1327 0
-3258 534 618 -1329 0
-3258 534 620 -1331 0
-3258 534 622 -1333 0
-3258 534 624 -1335 0
-3258 534 626 -1337 0
-3258 534 628 -1339 0
-3258 534 630 -1341 0
-3258 534 632 -1343 0
-3258 534 634 -1345 0
-3258 534 636 -1347 0
-3258 534 638 -1349 0
-3258 534 640 -1351 0
-3258 534 642 -1353 0
-3258 534 644 -1355 0
-3258 534 646 -1357 0
-3258 534 648 -1359 0
-3258 534 650 -1361 0
-3258 534 652 -1363 0
-3258 534 654 -1365 0
-3258 534 656 -1367 0
-3258 534 658 -1369 0
-3258 534 660 -1371 0
-3258 534 662 -1373 0
-3258 534 664 -1375 0
-3258 534 666 -1377 0
-3258 534 668 -1379 0
-3258 534 670 -1381 0
-3258 534 672 -1383 0
-3258 534 674 0
-3258 535 -1315 0
-3258 535 605 -1317 0
-3258 535 606 -1319 0
-3258 535 608 -1321 0
-3258 535 610 -1323 0
-3258 535 612 -1325 0
-3258 535 614 -1327 0
-3258 535 616 -1329 0
-3258 535 618 -1331 0
-3258 535 620 -1333 0
-3258 535 622 -1335 0
-3258 535 624 -1337 0
-3258 535 626 -1339 0
-3258 535 628 -1341 0
-3258 535 630 -1343 0
-3258 535 632 -1345 0
-3258 535 634 -1347 0
-3258 535 636 -1349 0
-3258 535 638 -1351 0
-3258 535 640 -1353 0
-3258 535 642 -1355 0
-3258 535 644 -1357 0
-3258 535 646 -1359 0
-3258 535 648 -1361 0
-3258 535 650 -1363 0
-3258 535 652 -1365 0
-3258 535 654 -1367 0
-3258 535 656 -1369 0
-3258 535 658 -1371 0
-3258 535 660 -1373 0
-3258 535 662 -1375 0
-3258 535 664 -1377 0
-3258 535 666 -1379 0
-3258 535 668 -1381 0
-3258 535 670 -1383 0
-3258 535 672 0
-3258 535 674 0
-3258 537 -1317 0
-3258 537 605 -1319 0
-3258 537 606 -1321 0
-3258 537 608 -1323 0
-3258 537 610 -1325 0
-3258 537 612 -1327 0
-3258 537 614 -1329 0
-3258 537 616 -1331 0
-3258 537 618 -1333 0
-3258 537 620 -1335 0
-3258 537 622 -1337 0
-3258 537 624 -1339 0
-3258 537 626 -1341 0
-3258 537 628 -1343 0
-3258 537 630 -1345 0
-3258 537 632 -1347 0
-3258 537 634 -1349 0
-3258 537 636 -1351 0
-3258 537 638 -1353 0
-3258 537 640 -1355 0
-3258 537 642 -1357 0
-3258 537 644 -1359 0
-3258 537 646 -1361 0
-3258 537 648 -1363 0
-3258 537 650 -1365 0
-3258 537 652 -1367 0
-3258 537 654 -1369 0
-3258 537 656 -1371 0
-3258 537 658 -1373 0
-3258 537 660 -1375 0
-3258 537 662 -1377 0
-3258 537 664 -1379 0
-3258 537 666 -1381 0
-3258 537 668 -1383 0
-3258 537 670 0
-3258 537 672 0
-3258 537 674 0
-3258 539 -1319 0
-3258 539 605 -1321 0
-3258 539 606 -1323 0
-3258 539 608 -1325 0
-3258 539 610 -1327 0
-3258 539 612 -1329 0
-3258 539 614 -1331 0
-3258 539 616 -1333 0
-3258 539 618 -1335 0
-3258 539 620 -1337 0
-3258 539 622 -1339 0
-3258 539 624 -1341 0
-3258 539 626 -1343 0
-3258 539 628 -1345 0
-3258 539 630 -1347 0
-3258 539 632 -1349 0
-3258 539 634 -1351 0
-3258 539 636 -1353 0
-3258 539 638 -1355 0
-3258 539 640 -1357 0
-3258 539 642 -1359 0
-3258 539 644 -1361 0
-3258 539 646 -1363 0
-3258 539 648 -1365 0
-3258 539 650 -1367 0
-3258 539 652 -1369 0
-3258 539 654 -1371 0
-3258 539 656 -1373 0
-3258 539 658 -1375 0
-3258 539 660 -1377 0
-3258 539 662 -1379 0
-3258 539 664 -1381 0
-3258 539 666 -1383 0
-3258 539 668 0
-3258 539 670 0
-3258 539 672 0
-3258 539 674 0
-3258 541 -1321 0
-3258 541 605 -1323 0
-3258 541 606 -1325 0
-3258 541 608 -1327 0
-3258 541 610 -1329 0
-3258 541 612 -1331 0
-3258 541 614 -1333 0
-3258 541 616 -1335 0
-3258 541 618 -1337 0
-3258 541 620 -1339 0
-3258 541 622 -1341 0
-3258 541 624 -1343 0
-3258 541 626 -1345 0
-3258 541 628 -1347 0
-3258 541 630 -1349 0
-3258 541 632 -1351 0
-3258 541 634 -1353 0
-3258 541 636 -1355 0
-3258 541 638 -1357 0
-3258 541 640 -1359 0
-3258 541 642 -1361 0
-3258 541 644 -1363 0
-3258 541 646 -1365 0
-3258 541 648 -1367 0
-3258 541 650 -1369 0
-3258 541 652 -1371 0
-3258 541 654 -1373 0
-3258 541 656 -1375 0
-3258 541 658 -1377 0
-3258 541 660 -1379 0
-3258 541 662 -1381 0
-3258 541 664 -1383 0
-3258 541 666 0
-3258 541 668 0
-3258 541 670 0
-3258 541 672 0
-3258 541 674 0
-3258 543 -1323 0
-3258 543 605 -1325 0
-3258 543 606 -1327 0
-3258 543 608 -1329 0
-3258 543 610 -1331 0
-3258 543 612 -1333 0
-3258 543 614 -1335 0
-3258 543 616 -1337 0
-3258 543 618 -1339 0
-3258 543 620 -1341 0
-3258 543 622 -1343 0
-3258 543 624 -1345 0
-3258 543 626 -1347 0
-3258 543 628 -1349 0
-3258 543 630 -1351 0
-3258 543 632 -1353 0
-3258 543 634 -1355 0
-3258 543 636 -1357 0
-3258 543 638 -1359 0
-3258 543 640 -1361 0
-3258 543 642 -1363 0
-3258 543 644 -1365 0
-3258 543 646 -1367 0
-3258 543 648 -1369 0
-3258 543 650 -1371 0
-3258 543 652 -1373 0
-3258 543 654 -1375 0
-3258 543 656 -1377 0
-3258 543 658 -1379 0
-3258 543 660 -1381 0
-3258 543 662 -1383 0
-3258 543 664 0
-3258 543 666 0
-3258 543 668 0
-3258 543 670 0
-3258 543 672 0
-3258 543 674 0
-3258 545 -1325 0
-3258 545 605 -1327 0
-3258 545 606 -1329 0
-3258 545 608 -1331 0
-3258 545 610 -1333 0
-3258 545 612 -1335 0
-3258 545 614 -1337 0
-3258 545 616 -1339 0
-3258 545 618 -1341 0
-3258 545 620 -1343 0
-3258 545 622 -1345 0
-3258 545 624 -1347 0
-3258 545 626 -1349 0
-3258 545 628 -1351 0
-3258 545 630 -1353 0
-3258 545 632 -1355 0
-3258 545 634 -1357 0
-3258 545 636 -1359 0
-3258 545 638 -1361 0
-3258 545 640 -1363 0
-3258 545 642 -1365 0
-3258 545 644 -1367 0
-3258 545 646 -1369 0
-3258 545 648 -1371 0
-3258 545 650 -1373 0
-3258 545 652 -1375 0
-3258 545 654 -1377 0
-3258 545 656 -1379 0
-3258 545 658 -1381 0
-3258 545 660 -1383 0
-3258 545 662 0
-3258 545 664 0
-3258 545 666 0
-3258 545 668 0
-3258 545 670 0
-3258 545 672 0
-3258 545 674 0
-3258 547 -1327 0
-3258 547 605 -1329 0
-3258 547 606 -1331 0
-3258 547 608 -1333 0
-3258 547 610 -1335 0
-3258 547 612 -1337 0
-3258 547 614 -1339 0
-3258 547 616 -1341 0
-3258 547 618 -1343 0
-3258 547 620 -1345 0
-3258 547 622 -1347 0
-3258 547 624 -1349 0
-3258 547 626 -1351 0
-3258 547 628 -1353 0
-3258 547 630 -1355 0
-3258 547 632 -1357 0
-3258 547 634 -1359 0
-3258 547 636 -1361 0
-3258 547 638 -1363 0
-3258 547 640 -1365 0
-3258 547 642 -1367 0
-3258 547 644 -1369 0
-3258 547 646 -1371 0
-3258 547 648 -1373 0
-3258 547 650 -1375 0
-3258 547 652 -1377 0
-3258 547 654 -1379 0
-3258 547 656 -1381 0
-3258 547 658 -1383 0
-3258 547 660 0
-3258 547 662 0
-3258 547 664 0
-3258 547 666 0
-3258 547 668 0
-3258 547 670 0
-3258 547 672 0
-3258 547 674 0
-3258 549 -1329 0
-3258 549 605 -1331 0
-3258 549 606 -1333 0
-3258 549 608 -1335 0
-3258 549 610 -1337 0
-3258 549 612 -1339 0
-3258 549 614 -1341 0
-3258 549 616 -1343 0
-3258 549 618 -1345 0
-3258 549 620 -1347 0
-3258 549 622 -1349 0
-3258 549 624 -1351 0
-3258 549 626 -1353 0
-3258 549 628 -1355 0
-3258 549 630 -1357 0
-3258 549 632 -1359 0
-3258 549 634 -1361 0
-3258 549 636 -1363 0
-3258 549 638 -1365 0
-3258 549 640 -1367 0
-3258 549 642 -1369 0
-3258 549 644 -1371 0
-3258 549 646 -1373 0
-3258 549 648 -1375 0
-3258 549 650 -1377 0
-3258 549 652 -1379 0
-3258 549 654 -1381 0
-3258 549 656 -1383 0
-3258 549 658 0
-3258 549 660 0
-3258 549 662 0
-3258 549 664 0
-3258 549 666 0
-3258 549 668 0
-3258 549 670 0
-3258 549 672 0
-3258 549 674 0
-3258 551 -1331 0
-3258 551 605 -1333 0
-3258 551 606 -1335 0
-3258 551 608 -1337 0
-3258 551 610 -1339 0
-3258 551 612 -1341 0
-3258 551 614 -1343 0
-3258 551 616 -1345 0
-3258 551 618 -1347 0
-3258 551 620 -1349 0
-3258 551 622 -1351 0
-3258 551 624 -1353 0
-3258 551 626 -1355 0
-3258 551 628 -1357 0
-3258 551 630 -1359 0
-3258 551 632 -1361 0
-3258 551 634 -1363 0
-3258 551 636 -1365 0
-3258 551 638 -1367 0
-3258 551 640 -1369 0
-3258 551 642 -1371 0
-3258 551 644 -1373 0
-3258 551 646 -1375 0
-3258 551 648 -1377 0
-3258 551 650 -1379 0
-3258 551 652 -1381 0
-3258 551 654 -1383 0
-3258 551 656 0
-3258 551 658 0
-3258 551 660 0
-3258 551 662 0
-3258 551 664 0
-3258 551 666 0
-3258 551 668 0
-3258 551 670 0
-3258 551 672 0
-3258 551 674 0
-3258 553 -1333 0
-3258 553 605 -1335 0
-3258 553 606 -1337 0
-3258 553 608 -1339 0
-3258 553 610 -1341 0
-3258 553 612 -1343 0
-3258 553 614 -1345 0
-3258 553 616 -1347 0
-3258 553 618 -1349 0
-3258 553 620 -1351 0
-3258 553 622 -1353 0
-3258 553 624 -1355 0
-3258 553 626 -1357 0
-3258 553 628 -1359 0
-3258 553 630 -1361 0
-3258 553 632 -1363 0
-3258 553 634 -1365 0
-3258 553 636 -1367 0
-3258 553 638 -1369 0
-3258 553 640 -1371 0
-3258 553 642 -1373 0
-3258 553 644 -1375 0
-3258 553 646 -1377 0
-3258 553 648 -1379 0
-3258 553 650 -1381 0
-3258 553 652 -1383 0
-3258 553 654 0
-3258 553 656 0
-3258 553 658 0
-3258 553 660 0
-3258 553 662 0
-3258 553 664 0
-3258 553 666 0
-3258 553 668 0
-3258 553 670 0
-3258 553 672 0
-3258 553 674 0
-3258 555 -1335 0
-3258 555 605 -1337 0
-3258 555 606 -1339 0
-3258 555 608 -1341 0
-3258 555 610 -1343 0
-3258 555 612 -1345 0
-3258 555 614 -1347 0
-3258 555 616 -1349 0
-3258 555 618 -1351 0
-3258 555 620 -1353 0
-3258 555 622 -1355 0
-3258 555 624 -1357 0
-3258 555 626 -1359 0
-3258 555 628 -1361 0
-3258 555 630 -1363 0
-3258 555 632 -1365 0
-3258 555 634 -1367 0
-3258 555 636 -1369 0
-3258 555 638 -1371 0
-3258 555 640 -1373 0
-3258 555 642 -1375 0
-3258 555 644 -1377 0
-3258 555 646 -1379 0
-3258 555 648 -1381 0
-3258 555 650 -1383 0
-3258 555 652 0
-3258 555 654 0
-3258 555 656 0
-3258 555 658 0
-3258 555 660 0
-3258 555 662 0
-3258 555 664 0
-3258 555 666 0
-3258 555 668 0
-3258 555 670 0
-3258 555 672 0
-3258 555 674 0
-3258 557 -1337 0
-3258 557 605 -1339 0
-3258 557 606 -1341 0
-3258 557 608 -1343 0
-3258 557 610 -1345 0
-3258 557 612 -1347 0
-3258 557 614 -1349 0
-3258 557 616 -1351 0
-3258 557 618 -1353 0
-3258 557 620 -1355 0
-3258 557 622 -1357 0
-3258 557 624 -1359 0
-3258 557 626 -1361 0
-3258 557 628 -1363 0
-3258 557 630 -1365 0
-3258 557 632 -1367 0
-3258 557 634 -1369 0
-3258 557 636 -1371 0
-3258 557 638 -1373 0
-3258 557 640 -1375 0
-3258 557 642 -1377 0
-3258 557 644 -1379 0
-3258 557 646 -1381 0
-3258 557 648 -1383 0
-3258 557 650 0
-3258 557 652 0
-3258 557 654 0
-3258 557 656 0
-3258 557 658 0
-3258 557 660 0
-3258 557 662 0
-3258 557 664 0
-3258 557 666 0
-3258 557 668 0
-3258 557 670 0
-3258 557 672 0
-3258 557 674 0
-3258 559 -1339 0
-3258 559 605 -1341 0
-3258 559 606 -1343 0
-3258 559 608 -1345 0
-3258 559 610 -1347 0
-3258 559 612 -1349 0
-3258 559 614 -1351 0
-3258 559 616 -1353 0
-3258 559 618 -1355 0
-3258 559 620 -1357 0
-3258 559 622 -1359 0
-3258 559 624 -1361 0
-3258 559 626 -1363 0
-3258 559 628 -1365 0
-3258 559 630 -1367 0
-3258 559 632 -1369 0
-3258 559 634 -1371 0
-3258 559 636 -1373 0
-3258 559 638 -1375 0
-3258 559 640 -1377 0
-3258 559 642 -1379 0
-3258 559 644 -1381 0
-3258 559 646 -1383 0
-3258 559 648 0
-3258 559 650 0
-3258 559 652 0
-3258 559 654 0
-3258 559 656 0
-3258 559 658 0
-3258 559 660 0
-3258 559 662 0
-3258 559 664 0
-3258 559 666 0
-3258 559 668 0
-3258 559 670 0
-3258 559 672 0
-3258 559 674 0
-3258 561 -1341 0
-3258 561 605 -1343 0
-3258 561 606 -1345 0
-3258 561 608 -1347 0
-3258 561 610 -1349 0
-3258 561 612 -1351 0
-3258 561 614 -1353 0
-3258 561 616 -1355 0
-3258 561 618 -1357 0
-3258 561 620 -1359 0
-3258 561 622 -1361 0
-3258 561 624 -1363 0
-3258 561 626 -1365 0
-3258 561 628 -1367 0
-3258 561 630 -1369 0
-3258 561 632 -1371 0
-3258 561 634 -1373 0
-3258 561 636 -1375 0
-3258 561 638 -1377 0
-3258 561 640 -1379 0
-3258 561 642 -1381 0
-3258 561 644 -1383 0
-3258 561 646 0
-3258 561 648 0
-3258 561 650 0
-3258 561 652 0
-3258 561 654 0
-3258 561 656 0
-3258 561 658 0
-3258 561 660 0
-3258 561 662 0
-3258 561 664 0
-3258 561 666 0
-3258 561 668 0
-3258 561 670 0
-3258 561 672 0
-3258 561 674 0
-3258 563 -1343 0
-3258 563 605 -1345 0
-3258 563 606 -1347 0
-3258 563 608 -1349 0
-3258 563 610 -1351 0
-3258 563 612 -1353 0
-3258 563 614 -1355 0
-3258 563 616 -1357 0
-3258 563 618 -1359 0
-3258 563 620 -1361 0
-3258 563 622 -1363 0
-3258 563 624 -1365 0
-3258 563 626 -1367 0
-3258 563 628 -1369 0
-3258 563 630 -1371 0
-3258 563 632 -1373 0
-3258 563 634 -1375 0
-3258 563 636 -1377 0
-3258 563 638 -1379 0
-3258 563 640 -1381 0
-3258 563 642 -1383 0
-3258 563 644 0
-3258 563 646 0
-3258 563 648 0
-3258 563 650 0
-3258 563 652 0
-3258 563 654 0
-3258 563 656 0
-3258 563 658 0
-3258 563 660 0
-3258 563 662 0
-3258 563 664 0
-3258 563 666 0
-3258 563 668 0
-3258 563 670 0
-3258 563 672 0
-3258 563 674 0
-3258 565 -1345 0
-3258 565 605 -1347 0
-3258 565 606 -1349 0
-3258 565 608 -1351 0
-3258 565 610 -1353 0
-3258 565 612 -1355 0
-3258 565 614 -1357 0
-3258 565 616 -1359 0
-3258 565 618 -1361 0
-3258 565 620 -1363 0
-3258 565 622 -1365 0
-3258 565 624 -1367 0
-3258 565 626 -1369 0
-3258 565 628 -1371 0
-3258 565 630 -1373 0
-3258 565 632 -1375 0
-3258 565 634 -1377 0
-3258 565 636 -1379 0
-3258 565 638 -1381 0
-3258 565 640 -1383 0
-3258 565 642 0
-3258 565 644 0
-3258 565 646 0
-3258 565 648 0
-3258 565 650 0
-3258 565 652 0
-3258 565 654 0
-3258 565 656 0
-3258 565 658 0
-3258 565 660 0
-3258 565 662 0
-3258 565 664 0
-3258 565 666 0
-3258 565 668 0
-3258 565 670 0
-3258 565 672 0
-3258 565 674 0
-3258 567 -1347 0
-3258 567 605 -1349 0
-3258 567 606 -1351 0
-3258 567 608 -1353 0
-3258 567 610 -1355 0
-3258 567 612 -1357 0
-3258 567 614 -1359 0
-3258 567 616 -1361 0
-3258 567 618 -1363 0
-3258 567 620 -1365 0
-3258 567 622 -1367 0
-3258 567 624 -1369 0
-3258 567 626 -1371 0
-3258 567 628 -1373 0
-3258 567 630 -1375 0
-3258 567 632 -1377 0
-3258 567 634 -1379 0
-3258 567 636 -1381 0
-3258 567 638 -1383 0
-3258 567 640 0
-3258 567 642 0
-3258 567 644 0
-3258 567 646 0
-3258 567 648 0
-3258 567 650 0
-3258 567 652 0
-3258 567 654 0
-3258 567 656 0
-3258 567 658 0
-3258 567 660 0
-3258 567 662 0
-3258 567 664 0
-3258 567 666 0
-3258 567 668 0
-3258 567 670 0
-3258 567 672 0
-3258 567 674 0
-3258 569 -1349 0
-3258 569 605 -1351 0
-3258 569 606 -1353 0
-3258 569 608 -1355 0
-3258 569 610 -1357 0
-3258 569 612 -1359 0
-3258 569 614 -1361 0
-3258 569 616 -1363 0
-3258 569 618 -1365 0
-3258 569 620 -1367 0
-3258 569 622 -1369 0
-3258 569 624 -1371 0
-3258 569 626 -1373 0
-3258 569 628 -1375 0
-3258 569 630 -1377 0
-3258 569 632 -1379 0
-3258 569 634 -1381 0
-3258 569 636 -1383 0
-3258 569 638 0
-3258 569 640 0
-3258 569 642 0
-3258 569 644 0
-3258 569 646 0
-3258 569 648 0
-3258 569 650 0
-3258 569 652 0
-3258 569 654 0
-3258 569 656 0
-3258 569 658 0
-3258 569 660 0
-3258 569 662 0
-3258 569 664 0
-3258 569 666 0
-3258 569 668 0
-3258 569 670 0
-3258 569 672 0
-3258 569 674 0
-3258 571 -1351 0
-3258 571 605 -1353 0
-3258 571 606 -1355 0
-3258 571 608 -1357 0
-3258 571 610 -1359 0
-3258 571 612 -1361 0
-3258 571 614 -1363 0
-3258 571 616 -1365 0
-3258 571 618 -1367 0
-3258 571 620 -1369 0
-3258 571 622 -1371 0
-3258 571 624 -1373 0
-3258 571 626 -1375 0
-3258 571 628 -1377 0
-3258 571 630 -1379 0
-3258 571 632 -1381 0
-3258 571 634 -1383 0
-3258 571 636 0
-3258 571 638 0
-3258 571 640 0
-3258 571 642 0
-3258 571 644 0
-3258 571 646 0
-3258 571 648 0
-3258 571 650 0
-3258 571 652 0
-3258 571 654 0
-3258 571 656 0
-3258 571 658 0
-3258 571 660 0
-3258 571 662 0
-3258 571 664 0
-3258 571 666 0
-3258 571 668 0
-3258 571 670 0
-3258 571 672 0
-3258 571 674 0
-3258 573 -1353 0
-3258 573 605 -1355 0
-3258 573 606 -1357 0
-3258 573 608 -1359 0
-3258 573 610 -1361 0
-3258 573 612 -1363 0
-3258 573 614 -1365 0
-3258 573 616 -1367 0
-3258 573 618 -1369 0
-3258 573 620 -1371 0
-3258 573 622 -1373 0
-3258 573 624 -1375 0
-3258 573 626 -1377 0
-3258 573 628 -1379 0
-3258 573 630 -1381 0
-3258 573 632 -1383 0
-3258 573 634 0
-3258 573 636 0
-3258 573 638 0
-3258 573 640 0
-3258 573 642 0
-3258 573 644 0
-3258 573 646 0
-3258 573 648 0
-3258 573 650 0
-3258 573 652 0
-3258 573 654 0
-3258 573 656 0
-3258 573 658 0
-3258 573 660 0
-3258 573 662 0
-3258 573 664 0
-3258 573 666 0
-3258 573 668 0
-3258 573 670 0
-3258 573 672 0
-3258 573 674 0
-3258 575 -1355 0
-3258 575 605 -1357 0
-3258 575 606 -1359 0
-3258 575 608 -1361 0
-3258 575 610 -1363 0
-3258 575 612 -1365 0
-3258 575 614 -1367 0
-3258 575 616 -1369 0
-3258 575 618 -1371 0
-3258 575 620 -1373 0
-3258 575 622 -1375 0
-3258 575 624 -1377 0
-3258 575 626 -1379 0
-3258 575 628 -1381 0
-3258 575 630 -1383 0
-3258 575 632 0
-3258 575 634 0
-3258 575 636 0
-3258 575 638 0
-3258 575 640 0
-3258 575 642 0
-3258 575 644 0
-3258 575 646 0
-3258 575 648 0
-3258 575 650 0
-3258 575 652 0
-3258 575 654 0
-3258 575 656 0
-3258 575 658 0
-3258 575 660 0
-3258 575 662 0
-3258 575 664 0
-3258 575 666 0
-3258 575 668 0
-3258 575 670 0
-3258 575 672 0
-3258 575 674 0
-3258 577 -1357 0
-3258 577 605 -1359 0
-3258 577 606 -1361 0
-3258 577 608 -1363 0
-3258 577 610 -1365 0
-3258 577 612 -1367 0
-3258 577 614 -1369 0
-3258 577 616 -1371 0
-3258 577 618 -1373 0
-3258 577 620 -1375 0
-3258 577 622 -1377 0
-3258 577 624 -1379 0
-3258 577 626 -1381 0
-3258 577 628 -1383 0
-3258 577 630 0
-3258 577 632 0
-3258 577 634 0
-3258 577 636 0
-3258 577 638 0
-3258 577 640 0
-3258 577 642 0
-3258 577 644 0
-3258 577 646 0
-3258 577 648 0
-3258 577 650 0
-3258 577 652 0
-3258 577 654 0
-3258 577 656 0
-3258 577 658 0
-3258 577 660 0
-3258 577 662 0
-3258 577 664 0
-3258 577 666 0
-3258 577 668 0
-3258 577 670 0
-3258 577 672 0
-3258 577 674 0
-3258 579 -1359 0
-3258 579 605 -1361 0
-3258 579 606 -1363 0
-3258 579 608 -1365 0
-3258 579 610 -1367 0
-3258 579 612 -1369 0
-3258 579 614 -1371 0
-3258 579 616 -1373 0
-3258 579 618 -1375 0
-3258 579 620 -1377 0
-3258 579 622 -1379 0
-3258 579 624 -1381 0
-3258 579 626 -1383 0
-3258 579 628 0
-3258 579 630 0
-3258 579 632 0
-3258 579 634 0
-3258 579 636 0
-3258 579 638 0
-3258 579 640 0
-3258 579 642 0
-3258 579 644 0
-3258 579 646 0
-3258 579 648 0
-3258 579 650 0
-3258 579 652 0
-3258 579 654 0
-3258 579 656 0
-3258 579 658 0
-3258 579 660 0
-3258 579 662 0
-3258 579 664 0
-3258 579 666 0
-3258 579 668 0
-3258 579 670 0
-3258 579 672 0
-3258 579 674 0
-3258 581 -1361 0
-3258 581 605 -1363 0
-3258 581 606 -1365 0
-3258 581 608 -1367 0
-3258 581 610 -1369 0
-3258 581 612 -1371 0
-3258 581 614 -1373 0
-3258 581 616 -1375 0
-3258 581 618 -1377 0
-3258 581 620 -1379 0
-3258 581 622 -1381 0
-3258 581 624 -1383 0
-3258 581 626 0
-3258 581 628 0
-3258 581 630 0
-3258 581 632 0
-3258 581 634 0
-3258 581 636 0
-3258 581 638 0
-3258 581 640 0
-3258 581 642 0
-3258 581 644 0
-3258 581 646 0
-3258 581 648 0
-3258 581 650 0
-3258 581 652 0
-3258 581 654 0
-3258 581 656 0
-3258 581 658 0
-3258 581 660 0
-3258 581 662 0
-3258 581 664 0
-3258 581 666 0
-3258 581 668 0
-3258 581 670 0
-3258 581 672 0
-3258 581 674 0
-3258 583 -1363 0
-3258 583 605 -1365 0
-3258 583 606 -1367 0
-3258 583 608 -1369 0
-3258 583 610 -1371 0
-3258 583 612 -1373 0
-3258 583 614 -1375 0
-3258 583 616 -1377 0
-3258 583 618 -1379 0
-3258 583 620 -1381 0
-3258 583 622 -1383 0
-3258 583 624 0
-3258 583 626 0
-3258 583 628 0
-3258 583 630 0
-3258 583 632 0
-3258 583 634 0
-3258 583 636 0
-3258 583 638 0
-3258 583 640 0
-3258 583 642 0
-3258 583 644 0
-3258 583 646 0
-3258 583 648 0
-3258 583 650 0
-3258 583 652 0
-3258 583 654 0
-3258 583 656 0
-3258 583 658 0
-3258 583 660 0
-3258 583 662 0
-3258 583 664 0
-3258 583 666 0
-3258 583 668 0
-3258 583 670 0
-3258 583 672 0
-3258 583 674 0
-3258 585 -1365 0
-3258 585 605 -1367 0
-3258 585 606 -1369 0
-3258 585 608 -1371 0
-3258 585 610 -1373 0
-3258 585 612 -1375 0
-3258 585 614 -1377 0
-3258 585 616 -1379 0
-3258 585 618 -1381 0
-3258 585 620 -1383 0
-3258 585 622 0
-3258 585 624 0
-3258 585 626 0
-3258 585 628 0
-3258 585 630 0
-3258 585 632 0
-3258 585 634 0
-3258 585 636 0
-3258 585 638 0
-3258 585 640 0
-3258 585 642 0
-3258 585 644 0
-3258 585 646 0
-3258 585 648 0
-3258 585 650 0
-3258 585 652 0
-3258 585 654 0
-3258 585 656 0
-3258 585 658 0
-3258 585 660 0
-3258 585 662 0
-3258 585 664 0
-3258 585 666 0
-3258 585 668 0
-3258 585 670 0
-3258 585 672 0
-3258 585 674 0
-3258 587 -1367 0
-3258 587 605 -1369 0
-3258 587 606 -1371 0
-3258 587 608 -1373 0
-3258 587 610 -1375 0
-3258 587 612 -1377 0
-3258 587 614 -1379 0
-3258 587 616 -1381 0
-3258 587 618 -1383 0
-3258 587 620 0
-3258 587 622 0
-3258 587 624 0
-3258 587 626 0
-3258 587 628 0
-3258 587 630 0
-3258 587 632 0
-3258 587 634 0
-3258 587 636 0
-3258 587 638 0
-3258 587 640 0
-3258 587 642 0
-3258 587 644 0
-3258 587 646 0
-3258 587 648 0
-3258 587 650 0
-3258 587 652 0
-3258 587 654 0
-3258 587 656 0
-3258 587 658 0
-3258 587 660 0
-3258 587 662 0
-3258 587 664 0
-3258 587 666 0
-3258 587 668 0
-3258 587 670 0
-3258 587 672 0
-3258 587 674 0
-3258 589 -1369 0
-3258 589 605 -1371 0
-3258 589 606 -1373 0
-3258 589 608 -1375 0
-3258 589 610 -1377 0
-3258 589 612 -1379 0
-3258 589 614 -1381 0
-3258 589 616 -1383 0
-3258 589 618 0
-3258 589 620 0
-3258 589 622 0
-3258 589 624 0
-3258 589 626 0
-3258 589 628 0
-3258 589 630 0
-3258 589 632 0
-3258 589 634 0
-3258 589 636 0
-3258 589 638 0
-3258 589 640 0
-3258 589 642 0
-3258 589 644 0
-3258 589 646 0
-3258 589 648 0
-3258 589 650 0
-3258 589 652 0
-3258 589 654 0
-3258 589 656 0
-3258 589 658 0
-3258 589 660 0
-3258 589 662 0
-3258 589 664 0
-3258 589 666 0
-3258 589 668 0
-3258 589 670 0
-3258 589 672 0
-3258 589 674 0
-3258 591 -1371 0
-3258 591 605 -1373 0
-3258 591 606 -1375 0
-3258 591 608 -1377 0
-3258 591 610 -1379 0
-3258 591 612 -1381 0
-3258 591 614 -1383 0
-3258 591 616 0
-3258 591 618 0
-3258 591 620 0
-3258 591 622 0
-3258 591 624 0
-3258 591 626 0
-3258 591 628 0
-3258 591 630 0
-3258 591 632 0
-3258 591 634 0
-3258 591 636 0
-3258 591 638 0
-3258 591 640 0
-3258 591 642 0
-3258 591 644 0
-3258 591 646 0
-3258 591 648 0
-3258 591 650 0
-3258 591 652 0
-3258 591 654 0
-3258 591 656 0
-3258 591 658 0
-3258 591 660 0
-3258 591 662 0
-3258 591 664 0
-3258 591 666 0
-3258 591 668 0
-3258 591 670 0
-3258 591 672 0
-3258 591 674 0
-3258 593 -1373 0
-3258 593 605 -1375 0
-3258 593 606 -1377 0
-3258 593 608 -1379 0
-3258 593 610 -1381 0
-3258 593 612 -1383 0
-3258 593 614 0
-3258 593 616 0
-3258 593 618 0
-3258 593 620 0
-3258 593 622 0
-3258 593 624 0
-3258 593 626 0
-3258 593 628 0
-3258 593 630 0
-3258 593 632 0
-3258 593 634 0
-3258 593 636 0
-3258 593 638 0
-3258 593 640 0
-3258 593 642 0
-3258 593 644 0
-3258 593 646 0
-3258 593 648 0
-3258 593 650 0
-3258 593 652 0
-3258 593 654 0
-3258 593 656 0
-3258 593 658 0
-3258 593 660 0
-3258 593 662 0
-3258 593 664 0
-3258 593 666 0
-3258 593 668 0
-3258 593 670 0
-3258 593 672 0
-3258 593 674 0
-3258 595 -1375 0
-3258 595 605 -1377 0
-3258 595 606 -1379 0
-3258 595 608 -1381 0
-3258 595 610 -1383 0
-3258 595 612 0
-3258 595 614 0
-3258 595 616 0
-3258 595 618 0
-3258 595 620 0
-3258 595 622 0
-3258 595 624 0
-3258 595 626 0
-3258 595 628 0
-3258 595 630 0
-3258 595 632 0
-3258 595 634 0
-3258 595 636 0
-3258 595 638 0
-3258 595 640 0
-3258 595 642 0
-3258 595 644 0
-3258 595 646 0
-3258 595 648 0
-3258 595 650 0
-3258 595 652 0
-3258 595 654 0
-3258 595 656 0
-3258 595 658 0
-3258 595 660 0
-3258 595 662 0
-3258 595 664 0
-3258 595 666 0
-3258 595 668 0
-3258 595 670 0
-3258 595 672 0
-3258 595 674 0
-3258 597 -1377 0
-3258 597 605 -1379 0
-3258 597 606 -1381 0
-3258 597 608 -1383 0
-3258 597 610 0
-3258 597 612 0
-3258 597 614 0
-3258 597 616 0
-3258 597 618 0
-3258 597 620 0
-3258 597 622 0
-3258 597 624 0
-3258 597 626 0
-3258 597 628 0
-3258 597 630 0
-3258 597 632 0
-3258 597 634 0
-3258 597 636 0
-3258 597 638 0
-3258 597 640 0
-3258 597 642 0
-3258 597 644 0
-3258 597 646 0
-3258 597 648 0
-3258 597 650 0
-3258 597 652 0
-3258 597 654 0
-3258 597 656 0
-3258 597 658 0
-3258 597 660 0
-3258 597 662 0
-3258 597 664 0
-3258 597 666 0
-3258 597 668 0
-3258 597 670 0
-3258 597 672 0
-3258 597 674 0
-3258 599 -1379 0
-3258 599 605 -1381 0
-3258 599 606 -1383 0
-3258 599 608 0
-3258 599 610 0
-3258 599 612 0
-3258 599 614 0
-3258 599 616 0
-3258 599 618 0
-3258 599 620 0
-3258 599 622 0
-3258 599 624 0
-3258 599 626 0
-3258 599 628 0
-3258 599 630 0
-3258 599 632 0
-3258 599 634 0
-3258 599 636 0
-3258 599 638 0
-3258 599 640 0
-3258 599 642 0
-3258 599 644 0
-3258 599 646 0
-3258 599 648 0
-3258 599 650 0
-3258 599 652 0
-3258 599 654 0
-3258 599 656 0
-3258 599 658 0
-3258 599 660 0
-3258 599 662 0
-3258 599 664 0
-3258 599 666 0
-3258 599 668 0
-3258 599 670 0
-3258 599 672 0
-3258 599 674 0
-3258 601 -1381 0
-3258 601 605 -1383 0
-3258 601 606 0
-3258 601 608 0
-3258 601 610 0
-3258 601 612 0
-3258 601 614 0
-3258 601 616 0
-3258 601 618 0
-3258 601 620 0
-3258 601 622 0
-3258 601 624 0
-3258 601 626 0
-3258 601 628 0
-3258 601 630 0
-3258 601 632 0
-3258 601 634 0
-3258 601 636 0
-3258 601 638 0
-3258 601 640 0
-3258 601 642 0
-3258 601 644 0
-3258 601 646 0
-3258 601 648 0
-3258 601 650 0
-3258 601 652 0
-3258 601 654 0
-3258 601 656 0
-3258 601 658 0
-3258 601 660 0
-3258 601 662 0
-3258 601 664 0
-3258 601 666 0
-3258 601 668 0
-3258 601 670 0
-3258 601 672 0
-3258 601 674 0
-3258 603 -1383 0
-3258 603 605 0
-3258 603 606 0
-3258 603 608 0
-3258 603 610 0
-3258 603 612 0
-3258 603 614 0
-3258 603 616 0
-3258 603 618 0
-3258 603 620 0
-3258 603 622 0
-3258 603 624 0
-3258 603 626 0
-3258 603 628 0
-3258 603 630 0
-3258 603 632 0
-3258 603 634 0
-3258 603 636 0
-3258 603 638 0
-3258 603 640 0
-3258 603 642 0
-3258 603 644 0
-3258 603 646 0
-3258 603 648 0
-3258 603 650 0
-3258 603 652 0
-3258 603 654 0
-3258 603 656 0
-3258 603 658 0
-3258 603 660 0
-3258 603 662 0
-3258 603 664 0
-3258 603 666 0
-3258 603 668 0
-3258 603 670 0
-3258 603 672 0
-3258 603 674 0
3258 -605 1383 0
3258 -603 -606 1383 0
3258 -603 -605 1381 0
3258 -601 -608 1383 0
3258 -601 -606 1381 0
3258 -601 -605 1379 0
3258 -599 -610 1383 0
3258 -599 -608 1381 0
3258 -599 -606 1379 0
3258 -599 -605 1377 0
3258 -597 -612 1383 0
3258 -597 -610 1381 0
3258 -597 -608 1379 0
3258 -597 -606 1377 0
3258 -597 -605 1375 0
3258 -595 -614 1383 0
3258 -595 -612 1381 0
3258 -595 -610 1379 0
3258 -595 -608 1377 0
3258 -595 -606 1375 0
3258 -595 -605 1373 0
3258 -593 -616 1383 0
3258 -593 -614 1381 0
3258 -593 -612 1379 0
3258 -593 -610 1377 0
3258 -593 -608 1375 0
3258 -593 -606 1373 0
3258 -593 -605 1371 0
3258 -591 -618 1383 0
3258 -591 -616 1381 0
3258 -591 -614 1379 0
3258 -591 -612 1377 0
3258 -591 -610 1375 0
3258 -591 -608 1373 0
3258 -591 -606 1371 0
3258 -591 -605 1369 0
3258 -589 -620 1383 0
3258 -589 -618 1381 0
3258 -589 -616 1379 0
3258 -589 -614 1377 0
3258 -589 -612 1375 0
3258 -589 -610 1373 0
3258 -589 -608 1371 0
3258 -589 -606 1369 0
3258 -589 -605 1367 0
3258 -587 -622 1383 0
3258 -587 -620 1381 0
3258 -587 -618 1379 0
3258 -587 -616 1377 0
3258 -587 -614 1375 0
3258 -587 -612 1373 0
3258 -587 -610 1371 0
3258 -587 -608 1369 0
3258 -587 -606 1367 0
3258 -587 -605 1365 0
3258 -585 -624 1383 0
3258 -585 -622 1381 0
3258 -585 -620 1379 0
3258 -585 -618 1377 0
3258 -585 -616 1375 0
3258 -585 -614 1373 0
3258 -585 -612 1371 0
3258 -585 -610 1369 0
3258 -585 -608 1367 0
3258 -585 -606 1365 0
3258 -585 -605 1363 0
3258 -583 -626 1383 0
3258 -583 -624 1381 0
3258 -583 -622 1379 0
3258 -583 -620 1377 0
3258 -583 -618 1375 0
3258 -583 -616 1373 0
3258 -583 -614 1371 0
3258 -583 -612 1369 0
3258 -583 -610 1367 0
3258 -583 -608 1365 0
3258 -583 -606 1363 0
3258 -583 -605 1361 0
3258 -581 -628 1383 0
3258 -581 -626 1381 0
3258 -581 -624 1379 0
3258 -581 -622 1377 0
3258 -581 -620 1375 0
3258 -581 -618 1373 0
3258 -581 -616 1371 0
3258 -581 -614 1369 0
3258 -581 -612 1367 0
3258 -581 -610 1365 0
3258 -581 -608 1363 0
3258 -581 -606 1361 0
3258 -581 -605 1359 0
3258 -579 -630 1383 0
3258 -579 -628 1381 0
3258 -579 -626 1379 0
3258 -579 -624 1377 0
3258 -579 -622 1375 0
3258 -579 -620 1373 0
3258 -579 -618 1371 0
3258 -579 -616 1369 0
3258 -579 -614 1367 0
3258 -579 -612 1365 0
3258 -579 -610 1363 0
3258 -579 -608 1361 0
3258 -579 -606 1359 0
3258 -579 -605 1357 0
3258 -577 -632 1383 0
3258 -577 -630 1381 0
3258 -577 -628 1379 0
3258 -577 -626 1377 0
3258 -577 -624 1375 0
3258 -577 -622 1373 0
3258 -577 -620 1371 0
3258 -577 -618 1369 0
3258 -577 -616 1367 0
3258 -577 -614 1365 0
3258 -577 -612 1363 0
3258 -577 -610 1361 0
3258 -577 -608 1359 0
3258 -577 -606 1357 0
3258 -577 -605 1355 0
3258 -575 -634 1383 0
3258 -575 -632 1381 0
3258 -575 -630 1379 0
3258 -575 -628 1377 0
3258 -575 -626 1375 0
3258 -575 -624 1373 0
3258 -575 -622 1371 0
3258 -575 -620 1369 0
3258 -575 -618 1367 0
3258 -575 -616 1365 0
3258 -575 -614 1363 0
3258 -575 -612 1361 0
3258 -575 -610 1359 0
3258 -575 -608 1357 0
3258 -575 -606 1355 0
3258 -575 -605 1353 0
3258 -573 -636 1383 0
3258 -573 -634 1381 0
3258 -573 -632 1379 0
3258 -573 -630 1377 0
3258 -573 -628 1375 0
3258 -573 -626 1373 0
3258 -573 -624 1371 0
3258 -573 -622 1369 0
3258 -573 -620 1367 0
3258 -573 -618 1365 0
3258 -573 -616 1363 0
3258 -573 -614 1361 0
3258 -573 -612 1359 0
3258 -573 -610 1357 0
3258 -573 -608 1355 0
3258 -573 -606 1353 0
3258 -573 -605 1351 0
3258 -571 -638 1383 0
3258 -571 -636 1381 0
3258 -571 -634 1379 0
3258 -571 -632 1377 0
3258 -571 -630 1375 0
3258 -571 -628 1373 0
3258 -571 -626 1371 0
3258 -571 -624 1369 0
3258 -571 -622 1367 0
3258 -571 -620 1365 0
3258 -571 -618 1363 0
3258 -571 -616 1361 0
3258 -571 -614 1359 0
3258 -571 -612 1357 0
3258 -571 -610 1355 0
3258 -571 -608 1353 0
3258 -571 -606 1351 0
3258 -571 -605 1349 0
3258 -569 -640 1383 0
3258 -569 -638 1381 0
3258 -569 -636 1379 0
3258 -569 -634 1377 0
3258 -569 -632 1375 0
3258 -569 -630 1373 0
3258 -569 -628 1371 0
3258 -569 -626 1369 0
3258 -569 -624 1367 0
3258 -569 -622 1365 0
3258 -569 -620 1363 0
3258 -569 -618 1361 0
3258 -569 -616 1359 0
3258 -569 -614 1357 0
3258 -569 -612 1355 0
3258 -569 -610 1353 0
3258 -569 -608 1351 0
3258 -569 -606 1349 0
3258 -569 -605 1347 0
3258 -567 -642 1383 0
3258 -567 -640 1381 0
3258 -567 -638 1379 0
3258 -567 -636 1377 0
3258 -567 -634 1375 0
3258 -567 -632 1373 0
3258 -567 -630 1371 0
3258 -567 -628 1369 0
3258 -567 -626 1367 0
3258 -567 -624 1365 0
3258 -567 -622 1363 0
3258 -567 -620 1361 0
3258 -567 -618 1359 0
3258 -567 -616 1357 0
3258 -567 -614 1355 0
3258 -567 -612 1353 0
3258 -567 -610 1351 0
3258 -567 -608 1349 0
3258 -567 -606 1347 0
3258 -567 -605 1345 0
3258 -565 -644 1383 0
3258 -565 -642 1381 0
3258 -565 -640 1379 0
3258 -565 -638 1377 0
3258 -565 -636 1375 0
3258 -565 -634 1373 0
3258 -565 -632 1371 0
3258 -565 -630 1369 0
3258 -565 -628 1367 0
3258 -565 -626 1365 0
3258 -565 -624 1363 0
3258 -565 -622 1361 0
3258 -565 -620 1359 0
3258 -565 -618 1357 0
3258 -565 -616 1355 0
3258 -565 -614 1353 0
3258 -565 -612 1351 0
3258 -565 -610 1349 0
3258 -565 -608 1347 0
3258 -565 -606 1345 0
3258 -565 -605 1343 0
3258 -563 -646 1383 0
3258 -563 -644 1381 0
3258 -563 -642 1379 0
3258 -563 -640 1377 0
3258 -563 -638 1375 0
3258 -563 -636 1373 0
3258 -563 -634 1371 0
3258 -563 -632 1369 0
3258 -563 -630 1367 0
3258 -563 -628 1365 0
3258 -563 -626 1363 0
3258 -563 -624 1361 0
3258 -563 -622 1359 0
3258 -563 -620 1357 0
3258 -563 -618 1355 0
3258 -563 -616 1353 0
3258 -563 -614 1351 0
3258 -563 -612 1349 0
3258 -563 -610 1347 0
3258 -563 -608 1345 0
3258 -563 -606 1343 0
3258 -563 -605 1341 0
3258 -561 -648 1383 0
3258 -561 -646 1381 0
3258 -561 -644 1379 0
3258 -561 -642 1377 0
3258 -561 -640 1375 0
3258 -561 -638 1373 0
3258 -561 -636 1371 0
3258 -561 -634 1369 0
3258 -561 -632 1367 0
3258 -561 -630 1365 0
3258 -561 -628 1363 0
3258 -561 -626 1361 0
3258 -561 -624 1359 0
3258 -561 -622 1357 0
3258 -561 -620 1355 0
3258 -561 -618 1353 0
3258 -561 -616 1351 0
3258 -561 -614 1349 0
3258 -561 -612 1347 0
3258 -561 -610 1345 0
3258 -561 -608 1343 0
3258 -561 -606 1341 0
3258 -561 -605 1339 0
3258 -559 -650 1383 0
3258 -559 -648 1381 0
3258 -559 -646 1379 0
3258 -559 -644 1377 0
3258 -559 -642 1375 0
3258 -559 -640 1373 0
3258 -559 -638 1371 0
3258 -559 -636 1369 0
3258 -559 -634 1367 0
3258 -559 -632 1365 0
3258 -559 -630 1363 0
3258 -559 -628 1361 0
3258 -559 -626 1359 0
3258 -559 -624 1357 0
3258 -559 -622 1355 0
3258 -559 -620 1353 0
3258 -559 -618 1351 0
3258 -559 -616 1349 0
3258 -559 -614 1347 0
3258 -559 -612 1345 0
3258 -559 -610 1343 0
3258 -559 -608 1341 0
3258 -559 -606 1339 0
3258 -559 -605 1337 0
3258 -557 -652 1383 0
3258 -557 -650 1381 0
3258 -557 -648 1379 0
3258 -557 -646 1377 0
3258 -557 -644 1375 0
3258 -557 -642 1373 0
3258 -557 -640 1371 0
3258 -557 -638 1369 0
3258 -557 -636 1367 0
3258 -557 -634 1365 0
3258 -557 -632 1363 0
3258 -557 -630 1361 0
3258 -557 -628 1359 0
3258 -557 -626 1357 0
3258 -557 -624 1355 0
3258 -557 -622 1353 0
3258 -557 -620 1351 0
3258 -557 -618 1349 0
3258 -557 -616 1347 0
3258 -557 -614 1345 0
3258 -557 -612 1343 0
3258 -557 -610 1341 0
3258 -557 -608 1339 0
3258 -557 -606 1337 0
3258 -557 -605 1335 0
3258 -555 -654 1383 0
3258 -555 -652 1381 0
3258 -555 -650 1379 0
3258 -555 -648 1377 0
3258 -555 -646 1375 0
3258 -555 -644 1373 0
3258 -555 -642 1371 0
3258 -555 -640 1369 0
3258 -555 -638 1367 0
3258 -555 -636 1365 0
3258 -555 -634 1363 0
3258 -555 -632 1361 0
3258 -555 -630 1359 0
3258 -555 -628 1357 0
3258 -555 -626 1355 0
3258 -555 -624 1353 0
3258 -555 -622 1351 0
3258 -555 -620 1349 0
3258 -555 -618 1347 0
3258 -555 -616 1345 0
3258 -555 -614 1343 0
3258 -555 -612 1341 0
3258 -555 -610 1339 0
3258 -555 -608 1337 0
3258 -555 -606 1335 0
3258 -555 -605 1333 0
3258 -553 -656 1383 0
3258 -553 -654 1381 0
3258 -553 -652 1379 0
3258 -553 -650 1377 0
3258 -553 -648 1375 0
3258 -553 -646 1373 0
3258 -553 -644 1371 0
3258 -553 -642 1369 0
3258 -553 -640 1367 0
3258 -553 -638 1365 0
3258 -553 -636 1363 0
3258 -553 -634 1361 0
3258 -553 -632 1359 0
3258 -553 -630 1357 0
3258 -553 -628 1355 0
3258 -553 -626 1353 0
3258 -553 -624 1351 0
3258 -553 -622 1349 0
3258 -553 -620 1347 0
3258 -553 -618 1345 0
3258 -553 -616 1343 0
3258 -553 -614 1341 0
3258 -553 -612 1339 0
3258 -553 -610 1337 0
3258 -553 -608 1335 0
3258 -553 -606 1333 0
3258 -553 -605 1331 0
3258 -551 -658 1383 0
3258 -551 -656 1381 0
3258 -551 -654 1379 0
3258 -551 -652 1377 0
3258 -551 -650 1375 0
3258 -551 -648 1373 0
3258 -551 -646 1371 0
3258 -551 -644 1369 0
3258 -551 -642 1367 0
3258 -551 -640 1365 0
3258 -551 -638 1363 0
3258 -551 -636 1361 0
3258 -551 -634 1359 0
3258 -551 -632 1357 0
3258 -551 -630 1355 0
3258 -551 -628 1353 0
3258 -551 -626 1351 0
3258 -551 -624 1349 0
3258 -551 -622 1347 0
3258 -551 -620 1345 0
3258 -551 -618 1343 0
3258 -551 -616 1341 0
3258 -551 -614 1339 0
3258 -551 -612 1337 0
3258 -551 -610 1335 0
3258 -551 -608 1333 0
3258 -551 -606 1331 0
3258 -551 -605 1329 0
3258 -549 -660 1383 0
3258 -549 -658 1381 0
3258 -549 -656 1379 0
3258 -549 -654 1377 0
3258 -549 -652 1375 0
3258 -549 -650 1373 0
3258 -549 -648 1371 0
3258 -549 -646 1369 0
3258 -549 -644 1367 0
3258 -549 -642 1365 0
3258 -549 -640 1363 0
3258 -549 -638 1361 0
3258 -549 -636 1359 0
3258 -549 -634 1357 0
3258 -549 -632 1355 0
3258 -549 -630 1353 0
3258 -549 -628 1351 0
3258 -549 -626 1349 0
3258 -549 -624 1347 0
3258 -549 -622 1345 0
3258 -549 -620 1343 0
3258 -549 -618 1341 0
3258 -549 -616 1339 0
3258 -549 -614 1337 0
3258 -549 -612 1335 0
3258 -549 -610 1333 0
3258 -549 -608 1331 0
3258 -549 -606 1329 0
3258 -549 -605 1327 0
3258 -547 -662 1383 0
3258 -547 -660 1381 0
3258 -547 -658 1379 0
3258 -547 -656 1377 0
3258 -547 -654 1375 0
3258 -547 -652 1373 0
3258 -547 -650 1371 0
3258 -547 -648 1369 0
3258 -547 -646 1367 0
3258 -547 -644 1365 0
3258 -547 -642 1363 0
3258 -547 -640 1361 0
3258 -547 -638 1359 0
3258 -547 -636 1357 0
3258 -547 -634 1355 0
3258 -547 -632 1353 0
3258 -547 -630 1351 0
3258 -547 -628 1349 0
3258 -547 -626 1347 0
3258 -547 -624 1345 0
3258 -547 -622 1343 0
3258 -547 -620 1341 0
3258 -547 -618 1339 0
3258 -547 -616 1337 0
3258 -547 -614 1335 0
3258 -547 -612 1333 0
3258 -547 -610 1331 0
3258 -547 -608 1329 0
3258 -547 -606 1327 0
3258 -547 -605 1325 0
3258 -545 -664 1383 0
3258 -545 -662 1381 0
3258 -545 -660 1379 0
3258 -545 -658 1377 0
3258 -545 -656 1375 0
3258 -545 -654 1373 0
3258 -545 -652 1371 0
3258 -545 -650 1369 0
3258 -545 -648 1367 0
3258 -545 -646 1365 0
3258 -545 -644 1363 0
3258 -545 -642 1361 0
3258 -545 -640 1359 0
3258 -545 -638 1357 0
3258 -545 -636 1355 0
3258 -545 -634 1353 0
3258 -545 -632 1351 0
3258 -545 -630 1349 0
3258 -545 -628 1347 0
3258 -545 -626 1345 0
3258 -545 -624 1343 0
3258 -545 -622 1341 0
3258 -545 -620 1339 0
3258 -545 -618 1337 0
3258 -545 -616 1335 0
3258 -545 -614 1333 0
3258 -545 -612 1331 0
3258 -545 -610 1329 0
3258 -545 -608 1327 0
3258 -545 -606 1325 0
3258 -545 -605 1323 0
3258 -543 -666 1383 0
3258 -543 -664 1381 0
3258 -543 -662 1379 0
3258 -543 -660 1377 0
3258 -543 -658 1375 0
3258 -543 -656 1373 0
3258 -543 -654 1371 0
3258 -543 -652 1369 0
3258 -543 -650 1367 0
3258 -543 -648 1365 0
3258 -543 -646 1363 0
3258 -543 -644 1361 0
3258 -543 -642 1359 0
3258 -543 -640 1357 0
3258 -543 -638 1355 0
3258 -543 -636 1353 0
3258 -543 -634 1351 0
3258 -543 -632 1349 0
3258 -543 -630 1347 0
3258 -543 -628 1345 0
3258 -543 -626 1343 0
3258 -543 -624 1341 0
3258 -543 -622 1339 0
3258 -543 -620 1337 0
3258 -543 -618 1335 0
3258 -543 -616 1333 0
3258 -543 -614 1331 0
3258 -543 -612 1329 0
3258 -543 -610 1327 0
3258 -543 -608 1325 0
3258 -543 -606 1323 0
3258 -543 -605 1321 0
3258 -541 -668 1383 0
3258 -541 -666 1381 0
3258 -541 -664 1379 0
3258 -541 -662 1377 0
3258 -541 -660 1375 0
3258 -541 -658 1373 0
3258 -541 -656 1371 0
3258 -541 -654 1369 0
3258 -541 -652 1367 0
3258 -541 -650 1365 0
3258 -541 -648 1363 0
3258 -541 -646 1361 0
3258 -541 -644 1359 0
3258 -541 -642 1357 0
3258 -541 -640 1355 0
3258 -541 -638 1353 0
3258 -541 -636 1351 0
3258 -541 -634 1349 0
3258 -541 -632 1347 0
3258 -541 -630 1345 0
3258 -541 -628 1343 0
3258 -541 -626 1341 0
3258 -541 -624 1339 0
3258 -541 -622 1337 0
3258 -541 -620 1335 0
3258 -541 -618 1333 0
3258 -541 -616 1331 0
3258 -541 -614 1329 0
3258 -541 -612 1327 0
3258 -541 -610 1325 0
3258 -541 -608 1323 0
3258 -541 -606 1321 0
3258 -541 -605 1319 0
3258 -539 -670 1383 0
3258 -539 -668 1381 0
3258 -539 -666 1379 0
3258 -539 -664 1377 0
3258 -539 -662 1375 0
3258 -539 -660 1373 0
3258 -539 -658 1371 0
3258 -539 -656 1369 0
3258 -539 -654 1367 0
3258 -539 -652 1365 0
3258 -539 -650 1363 0
3258 -539 -648 1361 0
3258 -539 -646 1359 0
3258 -539 -644 1357 0
3258 -539 -642 1355 0
3258 -539 -640 1353 0
3258 -539 -638 1351 0
3258 -539 -636 1349 0
3258 -539 -634 1347 0
3258 -539 -632 1345 0
3258 -539 -630 1343 0
3258 -539 -628 1341 0
3258 -539 -626 1339 0
3258 -539 -624 1337 0
3258 -539 -622 1335 0
3258 -539 -620 1333 0
3258 -539 -618 1331 0
3258 -539 -616 1329 0
3258 -539 -614 1327 0
3258 -539 -612 1325 0
3258 -539 -610 1323 0
3258 -539 -608 1321 0
3258 -539 -606 1319 0
3258 -539 -605 1317 0
3258 -537 -672 1383 0
3258 -537 -670 1381 0
3258 -537 -668 1379 0
3258 -537 -666 1377 0
3258 -537 -664 1375 0
3258 -537 -662 1373 0
3258 -537 -660 1371 0
3258 -537 -658 1369 0
3258 -537 -656 1367 0
3258 -537 -654 1365 0
3258 -537 -652 1363 0
3258 -537 -650 1361 0
3258 -537 -648 1359 0
3258 -537 -646 1357 0
3258 -537 -644 1355 0
3258 -537 -642 1353 0
3258 -537 -640 1351 0
3258 -537 -638 1349 0
3258 -537 -636 1347 0
3258 -537 -634 1345 0
3258 -537 -632 1343 0
3258 -537 -630 1341 0
3258 -537 -628 1339 0
3258 -537 -626 1337 0
3258 -537 -624 1335 0
3258 -537 -622 1333 0
3258 -537 -620 1331 0
3258 -537 -618 1329 0
3258 -537 -616 1327 0
3258 -537 -614 1325 0
3258 -537 -612 1323 0
3258 -537 -610 1321 0
3258 -537 -608 1319 0
3258 -537 -606 1317 0
3258 -537 -605 1315 0
3258 -535 -674 1383 0
3258 -535 -672 1381 0
3258 -535 -670 1379 0
3258 -535 -668 1377 0
3258 -535 -666 1375 0
3258 -535 -664 1373 0
3258 -535 -662 1371 0
3258 -535 -660 1369 0
3258 -535 -658 1367 0
3258 -535 -656 1365 0
3258 -535 -654 1363 0
3258 -535 -652 1361 0
3258 -535 -650 1359 0
3258 -535 -648 1357 0
3258 -535 -646 1355 0
3258 -535 -644 1353 0
3258 -535 -642 1351 0
3258 -535 -640 1349 0
3258 -535 -638 1347 0
3258 -535 -636 1345 0
3258 -535 -634 1343 0
3258 -535 -632 1341 0
3258 -535 -630 1339 0
3258 -535 -628 1337 0
3258 -535 -626 1335 0
3258 -535 -624 1333 0
3258 -535 -622 1331 0
3258 -535 -620 1329 0
3258 -535 -618 1327 0
3258 -535 -616 1325 0
3258 -535 -614 1323 0
3258 -535 -612 1321 0
3258 -535 -610 1319 0
3258 -535 -608 1317 0
3258 -535 -606 1315 0
3258 -535 -605 1313 0
3258 -534 1383 0
3258 -534 -674 1381 0
3258 -534 -672 1379 0
3258 -534 -670 1377 0
3258 -534 -668 1375 0
3258 -534 -666 1373 0
3258 -534 -664 1371 0
3258 -534 -662 1369 0
3258 -534 -660 1367 0
3258 -534 -658 1365 0
3258 -534 -656 1363 0
3258 -534 -654 1361 0
3258 -534 -652 1359 0
3258 -534 -650 1357 0
3258 -534 -648 1355 0
3258 -534 -646 1353 0
3258 -534 -644 1351 0
3258 -534 -642 1349 0
3258 -534 -640 1347 0
3258 -534 -638 1345 0
3258 -534 -636 1343 0
3258 -534 -634 1341 0
3258 -534 -632 1339 0
3258 -534 -630 1337 0
3258 -534 -628 1335 0
3258 -534 -626 1333 0
3258 -534 -624 1331 0
3258 -534 -622 1329 0
3258 -534 -620 1327 0
3258 -534 -618 1325 0
3258 -534 -616 1323 0
3258 -534 -614 1321 0
3258 -534 -612 1319 0
3258 -534 -610 1317 0
3258 -534 -608 1315 0
3258 -534 -606 1313 0
3258 -534 -605 1311 0
c (((aux232 + aux233 + aux234)<=4)=tv=SATLiteral(3259))
-3259 1385 1389 1392 0
-3259 1386 1388 1392 0
-3259 1386 1389 1391 0
3259 -1391 0
3259 -1389 -1392 0
3259 -1388 0
3259 -1386 -1392 0
3259 -1386 -1389 0
3259 -1386 -1388 0
3259 -1385 0
3259 -1385 -1389 0
3259 -1385 -1388 0
c ((4<=(aux232 + aux233 + aux234))=tv=SATLiteral(3260))
-3260 -1389 -1391 0
-3260 -1388 -1392 0
-3260 -1386 -1391 0
-3260 -1386 -1389 -1392 0
-3260 -1386 -1388 0
-3260 -1385 -1392 0
-3260 -1385 -1389 0
-3260 -1385 -1388 0
3260 1389 1392 0
3260 1385 1388 1392 0
3260 1385 1389 1391 0
3260 1386 1392 0
3260 1386 1388 1391 0
3260 1386 1389 0
c (((aux238 + aux239 + aux240)<=2)=tv=SATLiteral(3261))
-3261 1406 1410 0
-3261 1407 1409 0
-3261 1403 1410 0
-3261 1403 1406 1409 0
-3261 1403 1407 0
-3261 1404 1409 0
-3261 1404 1406 0
-3261 1404 1407 0
3261 -1406 -1409 0
3261 -1404 -1407 -1409 0
3261 -1404 -1406 -1410 0
3261 -1403 -1409 0
3261 -1403 -1407 -1410 0
3261 -1403 -1406 0
c ((2<=(aux238 + aux239 + aux240))=tv=SATLiteral(3262))
-3262 -1404 -1406 -1409 0
-3262 -1403 -1407 -1409 0
-3262 -1403 -1406 -1410 0
3262 1410 0
3262 1406 1409 0
3262 1407 0
3262 1403 1409 0
3262 1403 1406 0
3262 1403 1407 0
3262 1404 0
3262 1404 1406 0
3262 1404 1407 0
c (((aux241 + aux242 + aux243)<=1)=tv=SATLiteral(3263))
-3263 1419 0
-3263 1415 1418 0
-3263 1416 0
-3263 1412 1418 0
-3263 1412 1415 0
-3263 1412 1416 0
-3263 1413 0
-3263 1413 1415 0
-3263 1413 1416 0
3263 -1413 -1415 -1418 0
3263 -1412 -1416 -1418 0
3263 -1412 -1415 -1419 0
c ((1<=(aux241 + aux242 + aux243))=tv=SATLiteral(3264))
-3264 -1412 -1415 -1418 0
3264 1418 0
3264 1415 0
3264 1416 0
3264 1412 0
3264 1412 1415 0
3264 1412 1416 0
3264 1413 0
3264 1413 1415 0
3264 1413 1416 0
c (((aux244 + aux245 + aux246)<=2)=tv=SATLiteral(3265))
-3265 1424 1428 0
-3265 1425 1427 0
-3265 1421 1428 0
-3265 1421 1424 1427 0
-3265 1421 1425 0
-3265 1422 1427 0
-3265 1422 1424 0
-3265 1422 1425 0
3265 -1424 -1427 0
3265 -1422 -1425 -1427 0
3265 -1422 -1424 -1428 0
3265 -1421 -1427 0
3265 -1421 -1425 -1428 0
3265 -1421 -1424 0
c ((2<=(aux244 + aux245 + aux246))=tv=SATLiteral(3266))
-3266 -1422 -1424 -1427 0
-3266 -1421 -1425 -1427 0
-3266 -1421 -1424 -1428 0
3266 1428 0
3266 1424 1427 0
3266 1425 0
3266 1421 1427 0
3266 1421 1424 0
3266 1421 1425 0
3266 1422 0
3266 1422 1424 0
3266 1422 1425 0
c (((aux247 + aux248 + aux249)<=1)=tv=SATLiteral(3267))
-3267 1437 0
-3267 1433 1436 0
-3267 1434 0
-3267 1430 1436 0
-3267 1430 1433 0
-3267 1430 1434 0
-3267 1431 0
-3267 1431 1433 0
-3267 1431 1434 0
3267 -1431 -1433 -1436 0
3267 -1430 -1434 -1436 0
3267 -1430 -1433 -1437 0
c ((1<=(aux247 + aux248 + aux249))=tv=SATLiteral(3268))
-3268 -1430 -1433 -1436 0
3268 1436 0
3268 1433 0
3268 1434 0
3268 1430 0
3268 1430 1433 0
3268 1430 1434 0
3268 1431 0
3268 1431 1433 0
3268 1431 1434 0
c (((aux250 + aux251 + aux252)<=1)=tv=SATLiteral(3269))
-3269 1446 0
-3269 1442 1445 0
-3269 1443 0
-3269 1439 1445 0
-3269 1439 1442 0
-3269 1439 1443 0
-3269 1440 0
-3269 1440 1442 0
-3269 1440 1443 0
3269 -1440 -1442 -1445 0
3269 -1439 -1443 -1445 0
3269 -1439 -1442 -1446 0
c ((1<=(aux250 + aux251 + aux252))=tv=SATLiteral(3270))
-3270 -1439 -1442 -1445 0
3270 1445 0
3270 1442 0
3270 1443 0
3270 1439 0
3270 1439 1442 0
3270 1439 1443 0
3270 1440 0
3270 1440 1442 0
3270 1440 1443 0
c (((aux256 + aux257 + aux258)<=4)=tv=SATLiteral(3271))
-3271 1457 1461 1464 0
-3271 1458 1460 1464 0
-3271 1458 1461 1463 0
3271 -1463 0
3271 -1461 -1464 0
3271 -1460 0
3271 -1458 -1464 0
3271 -1458 -1461 0
3271 -1458 -1460 0
3271 -1457 0
3271 -1457 -1461 0
3271 -1457 -1460 0
c ((4<=(aux256 + aux257 + aux258))=tv=SATLiteral(3272))
-3272 -1461 -1463 0
-3272 -1460 -1464 0
-3272 -1458 -1463 0
-3272 -1458 -1461 -1464 0
-3272 -1458 -1460 0
-3272 -1457 -1464 0
-3272 -1457 -1461 0
-3272 -1457 -1460 0
3272 1461 1464 0
3272 1457 1460 1464 0
3272 1457 1461 1463 0
3272 1458 1464 0
3272 1458 1460 1463 0
3272 1458 1461 0
c (((aux262 + aux263 + aux264)<=3)=tv=SATLiteral(3273))
-3273 1479 1482 0
-3273 1475 1478 1482 0
-3273 1475 1479 1481 0
-3273 1476 1482 0
-3273 1476 1478 1481 0
-3273 1476 1479 0
3273 -1479 -1481 0
3273 -1478 -1482 0
3273 -1476 -1481 0
3273 -1476 -1479 -1482 0
3273 -1476 -1478 0
3273 -1475 -1482 0
3273 -1475 -1479 0
3273 -1475 -1478 0
c ((3<=(aux262 + aux263 + aux264))=tv=SATLiteral(3274))
-3274 -1478 -1481 0
-3274 -1476 -1479 -1481 0
-3274 -1476 -1478 -1482 0
-3274 -1475 -1481 0
-3274 -1475 -1479 -1482 0
-3274 -1475 -1478 0
3274 1478 1482 0
3274 1479 1481 0
3274 1475 1482 0
3274 1475 1478 1481 0
3274 1475 1479 0
3274 1476 1481 0
3274 1476 1478 0
3274 1476 1479 0
c (((aux265 + aux266 + aux267)<=2)=tv=SATLiteral(3275))
-3275 1487 1491 0
-3275 1488 1490 0
-3275 1484 1491 0
-3275 1484 1487 1490 0
-3275 1484 1488 0
-3275 1485 1490 0
-3275 1485 1487 0
-3275 1485 1488 0
3275 -1487 -1490 0
3275 -1485 -1488 -1490 0
3275 -1485 -1487 -1491 0
3275 -1484 -1490 0
3275 -1484 -1488 -1491 0
3275 -1484 -1487 0
c ((2<=(aux265 + aux266 + aux267))=tv=SATLiteral(3276))
-3276 -1485 -1487 -1490 0
-3276 -1484 -1488 -1490 0
-3276 -1484 -1487 -1491 0
3276 1491 0
3276 1487 1490 0
3276 1488 0
3276 1484 1490 0
3276 1484 1487 0
3276 1484 1488 0
3276 1485 0
3276 1485 1487 0
3276 1485 1488 0
c ((( - shift(agrid_00001_00001, -3) + aux273 + aux274)<=2)=tv=SATLiteral(3277))
-3277 -2 0
-3277 1501 -3 0
-3277 1502 -5 0
-3277 1498 -3 0
-3277 1498 1501 -5 0
-3277 1498 1502 0
-3277 1499 -5 0
-3277 1499 1501 0
-3277 1499 1502 0
3277 -1501 5 0
3277 -1499 -1502 5 0
3277 -1499 -1501 3 0
3277 -1498 5 0
3277 -1498 -1502 3 0
3277 -1498 -1501 2 0
c ((2<=( - shift(agrid_00001_00001, -3) + aux273 + aux274))=tv=SATLiteral(3278))
-3278 -1499 -1501 5 0
-3278 -1498 -1502 5 0
-3278 -1498 -1501 3 0
3278 -3 0
3278 1501 -5 0
3278 1502 0
3278 1498 -5 0
3278 1498 1501 0
3278 1498 1502 0
3278 1499 0
3278 1499 1501 0
3278 1499 1502 0
c (((aux279 + aux281 - shift(agrid_00002_00001, -3))<=2)=tv=SATLiteral(3279))
-3279 -32 0
-3279 1514 -33 0
-3279 1515 -35 0
-3279 1517 0
-3279 1508 -33 0
-3279 1508 1514 -35 0
-3279 1508 1515 0
-3279 1508 1517 0
-3279 1509 -35 0
-3279 1509 1514 0
-3279 1509 1515 0
-3279 1509 1517 0
3279 -1514 35 0
3279 -1509 -1515 35 0
3279 -1509 -1514 33 0
3279 -1508 -1517 35 0
3279 -1508 -1515 33 0
3279 -1508 -1514 32 0
c ((2<=(aux279 + aux281 - shift(agrid_00002_00001, -3)))=tv=SATLiteral(3280))
-3280 -1509 -1514 35 0
-3280 -1508 -1515 35 0
-3280 -1508 -1514 33 0
3280 -33 0
3280 1514 -35 0
3280 1515 0
3280 1517 0
3280 1508 -35 0
3280 1508 1514 0
3280 1508 1515 0
3280 1508 1517 0
3280 1509 0
3280 1509 1514 0
3280 1509 1515 0
3280 1509 1517 0
c (((aux286 + aux288 - shift(agrid_00003_00001, -3))<=2)=tv=SATLiteral(3281))
-3281 1534 0
-3281 -65 1532 0
-3281 -63 1531 0
-3281 -62 0
-3281 1525 1532 0
-3281 1525 -65 1531 0
-3281 1525 -63 0
-3281 1525 -62 0
-3281 1526 1531 0
-3281 1526 -65 0
-3281 1526 -63 0
-3281 1526 -62 0
3281 65 -1531 0
3281 -1526 63 -1531 0
3281 -1526 65 -1532 0
3281 -1525 62 -1531 0
3281 -1525 63 -1532 0
3281 -1525 65 -1534 0
c ((2<=(aux286 + aux288 - shift(agrid_00003_00001, -3)))=tv=SATLiteral(3282))
-3282 -1526 65 -1531 0
-3282 -1525 63 -1531 0
-3282 -1525 65 -1532 0
3282 1532 0
3282 -65 1531 0
3282 -63 0
3282 -62 0
3282 1525 1531 0
3282 1525 -65 0
3282 1525 -63 0
3282 1525 -62 0
3282 1526 0
3282 1526 -65 0
3282 1526 -63 0
3282 1526 -62 0
c (((aux293 + aux295 - shift(agrid_00004_00001, -3))<=2)=tv=SATLiteral(3283))
-3283 1553 0
-3283 -95 1551 0
-3283 -93 1550 0
-3283 -92 0
-3283 1544 1551 0
-3283 1544 -95 1550 0
-3283 1544 -93 0
-3283 1544 -92 0
-3283 1545 1550 0
-3283 1545 -95 0
-3283 1545 -93 0
-3283 1545 -92 0
3283 95 -1550 0
3283 -1545 93 -1550 0
3283 -1545 95 -1551 0
3283 -1544 92 -1550 0
3283 -1544 93 -1551 0
3283 -1544 95 -1553 0
c ((2<=(aux293 + aux295 - shift(agrid_00004_00001, -3)))=tv=SATLiteral(3284))
-3284 -1545 95 -1550 0
-3284 -1544 93 -1550 0
-3284 -1544 95 -1551 0
3284 1551 0
3284 -95 1550 0
3284 -93 0
3284 -92 0
3284 1544 1550 0
3284 1544 -95 0
3284 1544 -93 0
3284 1544 -92 0
3284 1545 0
3284 1545 -95 0
3284 1545 -93 0
3284 1545 -92 0
c (((aux300 + aux302 - shift(agrid_00005_00001, -3))<=2)=tv=SATLiteral(3285))
-3285 -122 0
-3285 1567 -123 0
-3285 1568 -125 0
-3285 1570 0
-3285 1561 -123 0
-3285 1561 1567 -125 0
-3285 1561 1568 0
-3285 1561 1570 0
-3285 1562 -125 0
-3285 1562 1567 0
-3285 1562 1568 0
-3285 1562 1570 0
3285 -1567 125 0
3285 -1562 -1568 125 0
3285 -1562 -1567 123 0
3285 -1561 -1570 125 0
3285 -1561 -1568 123 0
3285 -1561 -1567 122 0
c ((2<=(aux300 + aux302 - shift(agrid_00005_00001, -3)))=tv=SATLiteral(3286))
-3286 -1562 -1567 125 0
-3286 -1561 -1568 125 0
-3286 -1561 -1567 123 0
3286 -123 0
3286 1567 -125 0
3286 1568 0
3286 1570 0
3286 1561 -125 0
3286 1561 1567 0
3286 1561 1568 0
3286 1561 1570 0
3286 1562 0
3286 1562 1567 0
3286 1562 1568 0
3286 1562 1570 0
c (((aux308 + aux309 - shift(agrid_00006_00001, -3))<=2)=tv=SATLiteral(3287))
-3287 -152 0
-3287 1580 -153 0
-3287 1581 -155 0
-3287 1577 -153 0
-3287 1577 1580 -155 0
-3287 1577 1581 0
-3287 1578 -155 0
-3287 1578 1580 0
-3287 1578 1581 0
3287 -1580 155 0
3287 -1578 -1581 155 0
3287 -1578 -1580 153 0
3287 -1577 155 0
3287 -1577 -1581 153 0
3287 -1577 -1580 152 0
c ((2<=(aux308 + aux309 - shift(agrid_00006_00001, -3)))=tv=SATLiteral(3288))
-3288 -1578 -1580 155 0
-3288 -1577 -1581 155 0
-3288 -1577 -1580 153 0
3288 -153 0
3288 1580 -155 0
3288 1581 0
3288 1577 -155 0
3288 1577 1580 0
3288 1577 1581 0
3288 1578 0
3288 1578 1580 0
3288 1578 1581 0
c ((( - shift(agrid_00001_00002, -3) + aux314 + aux316)<=2)=tv=SATLiteral(3289))
-3289 1596 0
-3289 -10 1594 0
-3289 -8 1593 0
-3289 -7 0
-3289 1587 1594 0
-3289 1587 -10 1593 0
-3289 1587 -8 0
-3289 1587 -7 0
-3289 1588 1593 0
-3289 1588 -10 0
-3289 1588 -8 0
-3289 1588 -7 0
3289 10 -1593 0
3289 -1588 8 -1593 0
3289 -1588 10 -1594 0
3289 -1587 7 -1593 0
3289 -1587 8 -1594 0
3289 -1587 10 -1596 0
c ((2<=( - shift(agrid_00001_00002, -3) + aux314 + aux316))=tv=SATLiteral(3290))
-3290 -1588 10 -1593 0
-3290 -1587 8 -1593 0
-3290 -1587 10 -1594 0
3290 1594 0
3290 -10 1593 0
3290 -8 0
3290 -7 0
3290 1587 1593 0
3290 1587 -10 0
3290 1587 -8 0
3290 1587 -7 0
3290 1588 0
3290 1588 -10 0
3290 1588 -8 0
3290 1588 -7 0
c (((aux321 + aux323 - shift(agrid_00002_00002, -3))<=2)=tv=SATLiteral(3291))
-3291 1613 0
-3291 -40 1611 0
-3291 -38 1610 0
-3291 -37 0
-3291 1604 1611 0
-3291 1604 -40 1610 0
-3291 1604 -38 0
-3291 1604 -37 0
-3291 1605 1610 0
-3291 1605 -40 0
-3291 1605 -38 0
-3291 1605 -37 0
3291 40 -1610 0
3291 -1605 38 -1610 0
3291 -1605 40 -1611 0
3291 -1604 37 -1610 0
3291 -1604 38 -1611 0
3291 -1604 40 -1613 0
c ((2<=(aux321 + aux323 - shift(agrid_00002_00002, -3)))=tv=SATLiteral(3292))
-3292 -1605 40 -1610 0
-3292 -1604 38 -1610 0
-3292 -1604 40 -1611 0
3292 1611 0
3292 -40 1610 0
3292 -38 0
3292 -37 0
3292 1604 1610 0
3292 1604 -40 0
3292 1604 -38 0
3292 1604 -37 0
3292 1605 0
3292 1605 -40 0
3292 1605 -38 0
3292 1605 -37 0
c (((aux329 + aux330 - shift(agrid_00003_00002, -3))<=2)=tv=SATLiteral(3293))
-3293 1636 0
-3293 -70 1634 0
-3293 -68 1633 0
-3293 -67 0
-3293 1628 1634 0
-3293 1628 -70 1633 0
-3293 1628 -68 0
-3293 1628 -67 0
-3293 1629 1633 0
-3293 1629 -70 0
-3293 1629 -68 0
-3293 1629 -67 0
-3293 1631 0
-3293 1631 -70 0
-3293 1631 -68 0
-3293 1631 -67 0
3293 -1631 70 -1633 0
3293 -1629 68 -1633 0
3293 -1629 70 -1634 0
3293 -1628 67 -1633 0
3293 -1628 68 -1634 0
3293 -1628 70 -1636 0
c ((2<=(aux329 + aux330 - shift(agrid_00003_00002, -3)))=tv=SATLiteral(3294))
-3294 -1629 70 -1633 0
-3294 -1628 68 -1633 0
-3294 -1628 70 -1634 0
3294 1634 0
3294 -70 1633 0
3294 -68 0
3294 -67 0
3294 1628 1633 0
3294 1628 -70 0
3294 1628 -68 0
3294 1628 -67 0
3294 1629 0
3294 1629 -70 0
3294 1629 -68 0
3294 1629 -67 0
3294 1631 0
3294 1631 -70 0
3294 1631 -68 0
3294 1631 -67 0
c (((aux336 + aux337 - shift(agrid_00004_00002, -3))<=2)=tv=SATLiteral(3295))
-3295 1659 0
-3295 -100 1657 0
-3295 -98 1656 0
-3295 -97 0
-3295 1651 1657 0
-3295 1651 -100 1656 0
-3295 1651 -98 0
-3295 1651 -97 0
-3295 1652 1656 0
-3295 1652 -100 0
-3295 1652 -98 0
-3295 1652 -97 0
-3295 1654 0
-3295 1654 -100 0
-3295 1654 -98 0
-3295 1654 -97 0
3295 -1654 100 -1656 0
3295 -1652 98 -1656 0
3295 -1652 100 -1657 0
3295 -1651 97 -1656 0
3295 -1651 98 -1657 0
3295 -1651 100 -1659 0
c ((2<=(aux336 + aux337 - shift(agrid_00004_00002, -3)))=tv=SATLiteral(3296))
-3296 -1652 100 -1656 0
-3296 -1651 98 -1656 0
-3296 -1651 100 -1657 0
3296 1657 0
3296 -100 1656 0
3296 -98 0
3296 -97 0
3296 1651 1656 0
3296 1651 -100 0
3296 1651 -98 0
3296 1651 -97 0
3296 1652 0
3296 1652 -100 0
3296 1652 -98 0
3296 1652 -97 0
3296 1654 0
3296 1654 -100 0
3296 1654 -98 0
3296 1654 -97 0
c (((aux342 + aux344 - shift(agrid_00005_00002, -3))<=2)=tv=SATLiteral(3297))
-3297 1678 0
-3297 -130 1676 0
-3297 -128 1675 0
-3297 -127 0
-3297 1669 1676 0
-3297 1669 -130 1675 0
-3297 1669 -128 0
-3297 1669 -127 0
-3297 1670 1675 0
-3297 1670 -130 0
-3297 1670 -128 0
-3297 1670 -127 0
3297 130 -1675 0
3297 -1670 128 -1675 0
3297 -1670 130 -1676 0
3297 -1669 127 -1675 0
3297 -1669 128 -1676 0
3297 -1669 130 -1678 0
c ((2<=(aux342 + aux344 - shift(agrid_00005_00002, -3)))=tv=SATLiteral(3298))
-3298 -1670 130 -1675 0
-3298 -1669 128 -1675 0
-3298 -1669 130 -1676 0
3298 1676 0
3298 -130 1675 0
3298 -128 0
3298 -127 0
3298 1669 1675 0
3298 1669 -130 0
3298 1669 -128 0
3298 1669 -127 0
3298 1670 0
3298 1670 -130 0
3298 1670 -128 0
3298 1670 -127 0
c (((aux349 + aux351 - shift(agrid_00006_00002, -3))<=2)=tv=SATLiteral(3299))
-3299 -157 0
-3299 1692 -158 0
-3299 1693 -160 0
-3299 1695 0
-3299 1686 -158 0
-3299 1686 1692 -160 0
-3299 1686 1693 0
-3299 1686 1695 0
-3299 1687 -160 0
-3299 1687 1692 0
-3299 1687 1693 0
-3299 1687 1695 0
3299 -1692 160 0
3299 -1687 -1693 160 0
3299 -1687 -1692 158 0
3299 -1686 -1695 160 0
3299 -1686 -1693 158 0
3299 -1686 -1692 157 0
c ((2<=(aux349 + aux351 - shift(agrid_00006_00002, -3)))=tv=SATLiteral(3300))
-3300 -1687 -1692 160 0
-3300 -1686 -1693 160 0
-3300 -1686 -1692 158 0
3300 -158 0
3300 1692 -160 0
3300 1693 0
3300 1695 0
3300 1686 -160 0
3300 1686 1692 0
3300 1686 1693 0
3300 1686 1695 0
3300 1687 0
3300 1687 1692 0
3300 1687 1693 0
3300 1687 1695 0
c ((( - shift(agrid_00001_00003, -3) + aux356 + aux358)<=2)=tv=SATLiteral(3301))
-3301 1712 0
-3301 -15 1710 0
-3301 -13 1709 0
-3301 -12 0
-3301 1703 1710 0
-3301 1703 -15 1709 0
-3301 1703 -13 0
-3301 1703 -12 0
-3301 1704 1709 0
-3301 1704 -15 0
-3301 1704 -13 0
-3301 1704 -12 0
3301 15 -1709 0
3301 -1704 13 -1709 0
3301 -1704 15 -1710 0
3301 -1703 12 -1709 0
3301 -1703 13 -1710 0
3301 -1703 15 -1712 0
c ((2<=( - shift(agrid_00001_00003, -3) + aux356 + aux358))=tv=SATLiteral(3302))
-3302 -1704 15 -1709 0
-3302 -1703 13 -1709 0
-3302 -1703 15 -1710 0
3302 1710 0
3302 -15 1709 0
3302 -13 0
3302 -12 0
3302 1703 1709 0
3302 1703 -15 0
3302 1703 -13 0
3302 1703 -12 0
3302 1704 0
3302 1704 -15 0
3302 1704 -13 0
3302 1704 -12 0
c (((aux364 + aux365 - shift(agrid_00002_00003, -3))<=2)=tv=SATLiteral(3303))
-3303 1735 0
-3303 -45 1733 0
-3303 -43 1732 0
-3303 -42 0
-3303 1727 1733 0
-3303 1727 -45 1732 0
-3303 1727 -43 0
-3303 1727 -42 0
-3303 1728 1732 0
-3303 1728 -45 0
-3303 1728 -43 0
-3303 1728 -42 0
-3303 1730 0
-3303 1730 -45 0
-3303 1730 -43 0
-3303 1730 -42 0
3303 -1730 45 -1732 0
3303 -1728 43 -1732 0
3303 -1728 45 -1733 0
3303 -1727 42 -1732 0
3303 -1727 43 -1733 0
3303 -1727 45 -1735 0
c ((2<=(aux364 + aux365 - shift(agrid_00002_00003, -3)))=tv=SATLiteral(3304))
-3304 -1728 45 -1732 0
-3304 -1727 43 -1732 0
-3304 -1727 45 -1733 0
3304 1733 0
3304 -45 1732 0
3304 -43 0
3304 -42 0
3304 1727 1732 0
3304 1727 -45 0
3304 1727 -43 0
3304 1727 -42 0
3304 1728 0
3304 1728 -45 0
3304 1728 -43 0
3304 1728 -42 0
3304 1730 0
3304 1730 -45 0
3304 1730 -43 0
3304 1730 -42 0
c (((aux371 + aux372 - shift(agrid_00003_00003, -3))<=2)=tv=SATLiteral(3305))
-3305 1762 0
-3305 1752 1760 0
-3305 1753 1759 0
-3305 1755 0
-3305 1757 0
-3305 -75 1760 0
-3305 -75 1752 1759 0
-3305 -75 1753 0
-3305 -75 1755 0
-3305 -75 1757 0
-3305 -73 1759 0
-3305 -73 1752 0
-3305 -73 1753 0
-3305 -73 1755 0
-3305 -73 1757 0
-3305 -72 0
-3305 -72 1752 0
-3305 -72 1753 0
-3305 -72 1755 0
-3305 -72 1757 0
3305 72 -1752 -1759 0
3305 73 -1753 -1759 0
3305 73 -1752 -1760 0
3305 75 -1755 -1759 0
3305 75 -1753 -1760 0
3305 75 -1752 -1762 0
c ((2<=(aux371 + aux372 - shift(agrid_00003_00003, -3)))=tv=SATLiteral(3306))
-3306 73 -1752 -1759 0
-3306 75 -1753 -1759 0
-3306 75 -1752 -1760 0
3306 1760 0
3306 1752 1759 0
3306 1753 0
3306 1755 0
3306 1757 0
3306 -75 1759 0
3306 -75 1752 0
3306 -75 1753 0
3306 -75 1755 0
3306 -75 1757 0
3306 -73 0
3306 -73 1752 0
3306 -73 1753 0
3306 -73 1755 0
3306 -73 1757 0
3306 -72 0
3306 -72 1752 0
3306 -72 1753 0
3306 -72 1755 0
3306 -72 1757 0
c (((aux378 + aux379 - shift(agrid_00004_00003, -3))<=2)=tv=SATLiteral(3307))
-3307 1789 0
-3307 1779 1787 0
-3307 1780 1786 0
-3307 1782 0
-3307 1784 0
-3307 -105 1787 0
-3307 -105 1779 1786 0
-3307 -105 1780 0
-3307 -105 1782 0
-3307 -105 1784 0
-3307 -103 1786 0
-3307 -103 1779 0
-3307 -103 1780 0
-3307 -103 1782 0
-3307 -103 1784 0
-3307 -102 0
-3307 -102 1779 0
-3307 -102 1780 0
-3307 -102 1782 0
-3307 -102 1784 0
3307 102 -1779 -1786 0
3307 103 -1780 -1786 0
3307 103 -1779 -1787 0
3307 105 -1782 -1786 0
3307 105 -1780 -1787 0
3307 105 -1779 -1789 0
c ((2<=(aux378 + aux379 - shift(agrid_00004_00003, -3)))=tv=SATLiteral(3308))
-3308 103 -1779 -1786 0
-3308 105 -1780 -1786 0
-3308 105 -1779 -1787 0
3308 1787 0
3308 1779 1786 0
3308 1780 0
3308 1782 0
3308 1784 0
3308 -105 1786 0
3308 -105 1779 0
3308 -105 1780 0
3308 -105 1782 0
3308 -105 1784 0
3308 -103 0
3308 -103 1779 0
3308 -103 1780 0
3308 -103 1782 0
3308 -103 1784 0
3308 -102 0
3308 -102 1779 0
3308 -102 1780 0
3308 -102 1782 0
3308 -102 1784 0
c (((aux385 + aux386 - shift(agrid_00005_00003, -3))<=2)=tv=SATLiteral(3309))
-3309 1812 0
-3309 -135 1810 0
-3309 -133 1809 0
-3309 -132 0
-3309 1804 1810 0
-3309 1804 -135 1809 0
-3309 1804 -133 0
-3309 1804 -132 0
-3309 1805 1809 0
-3309 1805 -135 0
-3309 1805 -133 0
-3309 1805 -132 0
-3309 1807 0
-3309 1807 -135 0
-3309 1807 -133 0
-3309 1807 -132 0
3309 -1807 135 -1809 0
3309 -1805 133 -1809 0
3309 -1805 135 -1810 0
3309 -1804 132 -1809 0
3309 -1804 133 -1810 0
3309 -1804 135 -1812 0
c ((2<=(aux385 + aux386 - shift(agrid_00005_00003, -3)))=tv=SATLiteral(3310))
-3310 -1805 135 -1809 0
-3310 -1804 133 -1809 0
-3310 -1804 135 -1810 0
3310 1810 0
3310 -135 1809 0
3310 -133 0
3310 -132 0
3310 1804 1809 0
3310 1804 -135 0
3310 1804 -133 0
3310 1804 -132 0
3310 1805 0
3310 1805 -135 0
3310 1805 -133 0
3310 1805 -132 0
3310 1807 0
3310 1807 -135 0
3310 1807 -133 0
3310 1807 -132 0
c (((aux391 + aux393 - shift(agrid_00006_00003, -3))<=2)=tv=SATLiteral(3311))
-3311 1831 0
-3311 -165 1829 0
-3311 -163 1828 0
-3311 -162 0
-3311 1822 1829 0
-3311 1822 -165 1828 0
-3311 1822 -163 0
-3311 1822 -162 0
-3311 1823 1828 0
-3311 1823 -165 0
-3311 1823 -163 0
-3311 1823 -162 0
3311 165 -1828 0
3311 -1823 163 -1828 0
3311 -1823 165 -1829 0
3311 -1822 162 -1828 0
3311 -1822 163 -1829 0
3311 -1822 165 -1831 0
c ((2<=(aux391 + aux393 - shift(agrid_00006_00003, -3)))=tv=SATLiteral(3312))
-3312 -1823 165 -1828 0
-3312 -1822 163 -1828 0
-3312 -1822 165 -1829 0
3312 1829 0
3312 -165 1828 0
3312 -163 0
3312 -162 0
3312 1822 1828 0
3312 1822 -165 0
3312 1822 -163 0
3312 1822 -162 0
3312 1823 0
3312 1823 -165 0
3312 1823 -163 0
3312 1823 -162 0
c ((( - shift(agrid_00001_00004, -3) + aux398 + aux400)<=2)=tv=SATLiteral(3313))
-3313 1850 0
-3313 -20 1848 0
-3313 -18 1847 0
-3313 -17 0
-3313 1841 1848 0
-3313 1841 -20 1847 0
-3313 1841 -18 0
-3313 1841 -17 0
-3313 1842 1847 0
-3313 1842 -20 0
-3313 1842 -18 0
-3313 1842 -17 0
3313 20 -1847 0
3313 -1842 18 -1847 0
3313 -1842 20 -1848 0
3313 -1841 17 -1847 0
3313 -1841 18 -1848 0
3313 -1841 20 -1850 0
c ((2<=( - shift(agrid_00001_00004, -3) + aux398 + aux400))=tv=SATLiteral(3314))
-3314 -1842 20 -1847 0
-3314 -1841 18 -1847 0
-3314 -1841 20 -1848 0
3314 1848 0
3314 -20 1847 0
3314 -18 0
3314 -17 0
3314 1841 1847 0
3314 1841 -20 0
3314 1841 -18 0
3314 1841 -17 0
3314 1842 0
3314 1842 -20 0
3314 1842 -18 0
3314 1842 -17 0
c (((aux406 + aux407 - shift(agrid_00002_00004, -3))<=2)=tv=SATLiteral(3315))
-3315 1873 0
-3315 -50 1871 0
-3315 -48 1870 0
-3315 -47 0
-3315 1865 1871 0
-3315 1865 -50 1870 0
-3315 1865 -48 0
-3315 1865 -47 0
-3315 1866 1870 0
-3315 1866 -50 0
-3315 1866 -48 0
-3315 1866 -47 0
-3315 1868 0
-3315 1868 -50 0
-3315 1868 -48 0
-3315 1868 -47 0
3315 -1868 50 -1870 0
3315 -1866 48 -1870 0
3315 -1866 50 -1871 0
3315 -1865 47 -1870 0
3315 -1865 48 -1871 0
3315 -1865 50 -1873 0
c ((2<=(aux406 + aux407 - shift(agrid_00002_00004, -3)))=tv=SATLiteral(3316))
-3316 -1866 50 -1870 0
-3316 -1865 48 -1870 0
-3316 -1865 50 -1871 0
3316 1871 0
3316 -50 1870 0
3316 -48 0
3316 -47 0
3316 1865 1870 0
3316 1865 -50 0
3316 1865 -48 0
3316 1865 -47 0
3316 1866 0
3316 1866 -50 0
3316 1866 -48 0
3316 1866 -47 0
3316 1868 0
3316 1868 -50 0
3316 1868 -48 0
3316 1868 -47 0
c (((aux413 + aux414 - shift(agrid_00003_00004, -3))<=2)=tv=SATLiteral(3317))
-3317 1900 0
-3317 1890 1898 0
-3317 1891 1897 0
-3317 1893 0
-3317 1895 0
-3317 -80 1898 0
-3317 -80 1890 1897 0
-3317 -80 1891 0
-3317 -80 1893 0
-3317 -80 1895 0
-3317 -78 1897 0
-3317 -78 1890 0
-3317 -78 1891 0
-3317 -78 1893 0
-3317 -78 1895 0
-3317 -77 0
-3317 -77 1890 0
-3317 -77 1891 0
-3317 -77 1893 0
-3317 -77 1895 0
3317 77 -1890 -1897 0
3317 78 -1891 -1897 0
3317 78 -1890 -1898 0
3317 80 -1893 -1897 0
3317 80 -1891 -1898 0
3317 80 -1890 -1900 0
c ((2<=(aux413 + aux414 - shift(agrid_00003_00004, -3)))=tv=SATLiteral(3318))
-3318 78 -1890 -1897 0
-3318 80 -1891 -1897 0
-3318 80 -1890 -1898 0
3318 1898 0
3318 1890 1897 0
3318 1891 0
3318 1893 0
3318 1895 0
3318 -80 1897 0
3318 -80 1890 0
3318 -80 1891 0
3318 -80 1893 0
3318 -80 1895 0
3318 -78 0
3318 -78 1890 0
3318 -78 1891 0
3318 -78 1893 0
3318 -78 1895 0
3318 -77 0
3318 -77 1890 0
3318 -77 1891 0
3318 -77 1893 0
3318 -77 1895 0
c (((aux420 + aux421 - shift(agrid_00004_00004, -3))<=2)=tv=SATLiteral(3319))
-3319 1927 0
-3319 1917 1925 0
-3319 1918 1924 0
-3319 1920 0
-3319 1922 0
-3319 -110 1925 0
-3319 -110 1917 1924 0
-3319 -110 1918 0
-3319 -110 1920 0
-3319 -110 1922 0
-3319 -108 1924 0
-3319 -108 1917 0
-3319 -108 1918 0
-3319 -108 1920 0
-3319 -108 1922 0
-3319 -107 0
-3319 -107 1917 0
-3319 -107 1918 0
-3319 -107 1920 0
-3319 -107 1922 0
3319 107 -1917 -1924 0
3319 108 -1918 -1924 0
3319 108 -1917 -1925 0
3319 110 -1920 -1924 0
3319 110 -1918 -1925 0
3319 110 -1917 -1927 0
c ((2<=(aux420 + aux421 - shift(agrid_00004_00004, -3)))=tv=SATLiteral(3320))
-3320 108 -1917 -1924 0
-3320 110 -1918 -1924 0
-3320 110 -1917 -1925 0
3320 1925 0
3320 1917 1924 0
3320 1918 0
3320 1920 0
3320 1922 0
3320 -110 1924 0
3320 -110 1917 0
3320 -110 1918 0
3320 -110 1920 0
3320 -110 1922 0
3320 -108 0
3320 -108 1917 0
3320 -108 1918 0
3320 -108 1920 0
3320 -108 1922 0
3320 -107 0
3320 -107 1917 0
3320 -107 1918 0
3320 -107 1920 0
3320 -107 1922 0
c (((aux427 + aux428 - shift(agrid_00005_00004, -3))<=2)=tv=SATLiteral(3321))
-3321 1950 0
-3321 -140 1948 0
-3321 -138 1947 0
-3321 -137 0
-3321 1942 1948 0
-3321 1942 -140 1947 0
-3321 1942 -138 0
-3321 1942 -137 0
-3321 1943 1947 0
-3321 1943 -140 0
-3321 1943 -138 0
-3321 1943 -137 0
-3321 1945 0
-3321 1945 -140 0
-3321 1945 -138 0
-3321 1945 -137 0
3321 -1945 140 -1947 0
3321 -1943 138 -1947 0
3321 -1943 140 -1948 0
3321 -1942 137 -1947 0
3321 -1942 138 -1948 0
3321 -1942 140 -1950 0
c ((2<=(aux427 + aux428 - shift(agrid_00005_00004, -3)))=tv=SATLiteral(3322))
-3322 -1943 140 -1947 0
-3322 -1942 138 -1947 0
-3322 -1942 140 -1948 0
3322 1948 0
3322 -140 1947 0
3322 -138 0
3322 -137 0
3322 1942 1947 0
3322 1942 -140 0
3322 1942 -138 0
3322 1942 -137 0
3322 1943 0
3322 1943 -140 0
3322 1943 -138 0
3322 1943 -137 0
3322 1945 0
3322 1945 -140 0
3322 1945 -138 0
3322 1945 -137 0
c (((aux433 + aux435 - shift(agrid_00006_00004, -3))<=2)=tv=SATLiteral(3323))
-3323 1969 0
-3323 -170 1967 0
-3323 -168 1966 0
-3323 -167 0
-3323 1960 1967 0
-3323 1960 -170 1966 0
-3323 1960 -168 0
-3323 1960 -167 0
-3323 1961 1966 0
-3323 1961 -170 0
-3323 1961 -168 0
-3323 1961 -167 0
3323 170 -1966 0
3323 -1961 168 -1966 0
3323 -1961 170 -1967 0
3323 -1960 167 -1966 0
3323 -1960 168 -1967 0
3323 -1960 170 -1969 0
c ((2<=(aux433 + aux435 - shift(agrid_00006_00004, -3)))=tv=SATLiteral(3324))
-3324 -1961 170 -1966 0
-3324 -1960 168 -1966 0
-3324 -1960 170 -1967 0
3324 1967 0
3324 -170 1966 0
3324 -168 0
3324 -167 0
3324 1960 1966 0
3324 1960 -170 0
3324 1960 -168 0
3324 1960 -167 0
3324 1961 0
3324 1961 -170 0
3324 1961 -168 0
3324 1961 -167 0
c ((( - shift(agrid_00001_00005, -3) + aux440 + aux442)<=2)=tv=SATLiteral(3325))
-3325 1986 0
-3325 -25 1984 0
-3325 -23 1983 0
-3325 -22 0
-3325 1977 1984 0
-3325 1977 -25 1983 0
-3325 1977 -23 0
-3325 1977 -22 0
-3325 1978 1983 0
-3325 1978 -25 0
-3325 1978 -23 0
-3325 1978 -22 0
3325 25 -1983 0
3325 -1978 23 -1983 0
3325 -1978 25 -1984 0
3325 -1977 22 -1983 0
3325 -1977 23 -1984 0
3325 -1977 25 -1986 0
c ((2<=( - shift(agrid_00001_00005, -3) + aux440 + aux442))=tv=SATLiteral(3326))
-3326 -1978 25 -1983 0
-3326 -1977 23 -1983 0
-3326 -1977 25 -1984 0
3326 1984 0
3326 -25 1983 0
3326 -23 0
3326 -22 0
3326 1977 1983 0
3326 1977 -25 0
3326 1977 -23 0
3326 1977 -22 0
3326 1978 0
3326 1978 -25 0
3326 1978 -23 0
3326 1978 -22 0
c (((aux447 + aux449 - shift(agrid_00002_00005, -3))<=2)=tv=SATLiteral(3327))
-3327 2003 0
-3327 -55 2001 0
-3327 -53 2000 0
-3327 -52 0
-3327 1994 2001 0
-3327 1994 -55 2000 0
-3327 1994 -53 0
-3327 1994 -52 0
-3327 1995 2000 0
-3327 1995 -55 0
-3327 1995 -53 0
-3327 1995 -52 0
3327 55 -2000 0
3327 -1995 53 -2000 0
3327 -1995 55 -2001 0
3327 -1994 52 -2000 0
3327 -1994 53 -2001 0
3327 -1994 55 -2003 0
c ((2<=(aux447 + aux449 - shift(agrid_00002_00005, -3)))=tv=SATLiteral(3328))
-3328 -1995 55 -2000 0
-3328 -1994 53 -2000 0
-3328 -1994 55 -2001 0
3328 2001 0
3328 -55 2000 0
3328 -53 0
3328 -52 0
3328 1994 2000 0
3328 1994 -55 0
3328 1994 -53 0
3328 1994 -52 0
3328 1995 0
3328 1995 -55 0
3328 1995 -53 0
3328 1995 -52 0
c (((aux455 + aux456 - shift(agrid_00003_00005, -3))<=2)=tv=SATLiteral(3329))
-3329 2026 0
-3329 -85 2024 0
-3329 -83 2023 0
-3329 -82 0
-3329 2018 2024 0
-3329 2018 -85 2023 0
-3329 2018 -83 0
-3329 2018 -82 0
-3329 2019 2023 0
-3329 2019 -85 0
-3329 2019 -83 0
-3329 2019 -82 0
-3329 2021 0
-3329 2021 -85 0
-3329 2021 -83 0
-3329 2021 -82 0
3329 -2021 85 -2023 0
3329 -2019 83 -2023 0
3329 -2019 85 -2024 0
3329 -2018 82 -2023 0
3329 -2018 83 -2024 0
3329 -2018 85 -2026 0
c ((2<=(aux455 + aux456 - shift(agrid_00003_00005, -3)))=tv=SATLiteral(3330))
-3330 -2019 85 -2023 0
-3330 -2018 83 -2023 0
-3330 -2018 85 -2024 0
3330 2024 0
3330 -85 2023 0
3330 -83 0
3330 -82 0
3330 2018 2023 0
3330 2018 -85 0
3330 2018 -83 0
3330 2018 -82 0
3330 2019 0
3330 2019 -85 0
3330 2019 -83 0
3330 2019 -82 0
3330 2021 0
3330 2021 -85 0
3330 2021 -83 0
3330 2021 -82 0
c (((aux462 + aux463 - shift(agrid_00004_00005, -3))<=2)=tv=SATLiteral(3331))
-3331 2049 0
-3331 -115 2047 0
-3331 -113 2046 0
-3331 -112 0
-3331 2041 2047 0
-3331 2041 -115 2046 0
-3331 2041 -113 0
-3331 2041 -112 0
-3331 2042 2046 0
-3331 2042 -115 0
-3331 2042 -113 0
-3331 2042 -112 0
-3331 2044 0
-3331 2044 -115 0
-3331 2044 -113 0
-3331 2044 -112 0
3331 -2044 115 -2046 0
3331 -2042 113 -2046 0
3331 -2042 115 -2047 0
3331 -2041 112 -2046 0
3331 -2041 113 -2047 0
3331 -2041 115 -2049 0
c ((2<=(aux462 + aux463 - shift(agrid_00004_00005, -3)))=tv=SATLiteral(3332))
-3332 -2042 115 -2046 0
-3332 -2041 113 -2046 0
-3332 -2041 115 -2047 0
3332 2047 0
3332 -115 2046 0
3332 -113 0
3332 -112 0
3332 2041 2046 0
3332 2041 -115 0
3332 2041 -113 0
3332 2041 -112 0
3332 2042 0
3332 2042 -115 0
3332 2042 -113 0
3332 2042 -112 0
3332 2044 0
3332 2044 -115 0
3332 2044 -113 0
3332 2044 -112 0
c (((aux468 + aux470 - shift(agrid_00005_00005, -3))<=2)=tv=SATLiteral(3333))
-3333 2068 0
-3333 -145 2066 0
-3333 -143 2065 0
-3333 -142 0
-3333 2059 2066 0
-3333 2059 -145 2065 0
-3333 2059 -143 0
-3333 2059 -142 0
-3333 2060 2065 0
-3333 2060 -145 0
-3333 2060 -143 0
-3333 2060 -142 0
3333 145 -2065 0
3333 -2060 143 -2065 0
3333 -2060 145 -2066 0
3333 -2059 142 -2065 0
3333 -2059 143 -2066 0
3333 -2059 145 -2068 0
c ((2<=(aux468 + aux470 - shift(agrid_00005_00005, -3)))=tv=SATLiteral(3334))
-3334 -2060 145 -2065 0
-3334 -2059 143 -2065 0
-3334 -2059 145 -2066 0
3334 2066 0
3334 -145 2065 0
3334 -143 0
3334 -142 0
3334 2059 2065 0
3334 2059 -145 0
3334 2059 -143 0
3334 2059 -142 0
3334 2060 0
3334 2060 -145 0
3334 2060 -143 0
3334 2060 -142 0
c (((aux475 + aux477 - shift(agrid_00006_00005, -3))<=2)=tv=SATLiteral(3335))
-3335 -172 0
-3335 2082 -173 0
-3335 2083 -175 0
-3335 2085 0
-3335 2076 -173 0
-3335 2076 2082 -175 0
-3335 2076 2083 0
-3335 2076 2085 0
-3335 2077 -175 0
-3335 2077 2082 0
-3335 2077 2083 0
-3335 2077 2085 0
3335 -2082 175 0
3335 -2077 -2083 175 0
3335 -2077 -2082 173 0
3335 -2076 -2085 175 0
3335 -2076 -2083 173 0
3335 -2076 -2082 172 0
c ((2<=(aux475 + aux477 - shift(agrid_00006_00005, -3)))=tv=SATLiteral(3336))
-3336 -2077 -2082 175 0
-3336 -2076 -2083 175 0
-3336 -2076 -2082 173 0
3336 -173 0
3336 2082 -175 0
3336 2083 0
3336 2085 0
3336 2076 -175 0
3336 2076 2082 0
3336 2076 2083 0
3336 2076 2085 0
3336 2077 0
3336 2077 2082 0
3336 2077 2083 0
3336 2077 2085 0
c ((( - shift(agrid_00001_00006, -3) + aux483 + aux484)<=2)=tv=SATLiteral(3337))
-3337 -27 0
-3337 2095 -28 0
-3337 2096 -30 0
-3337 2092 -28 0
-3337 2092 2095 -30 0
-3337 2092 2096 0
-3337 2093 -30 0
-3337 2093 2095 0
-3337 2093 2096 0
3337 -2095 30 0
3337 -2093 -2096 30 0
3337 -2093 -2095 28 0
3337 -2092 30 0
3337 -2092 -2096 28 0
3337 -2092 -2095 27 0
c ((2<=( - shift(agrid_00001_00006, -3) + aux483 + aux484))=tv=SATLiteral(3338))
-3338 -2093 -2095 30 0
-3338 -2092 -2096 30 0
-3338 -2092 -2095 28 0
3338 -28 0
3338 2095 -30 0
3338 2096 0
3338 2092 -30 0
3338 2092 2095 0
3338 2092 2096 0
3338 2093 0
3338 2093 2095 0
3338 2093 2096 0
c (((aux489 + aux491 - shift(agrid_00002_00006, -3))<=2)=tv=SATLiteral(3339))
-3339 -57 0
-3339 2108 -58 0
-3339 2109 -60 0
-3339 2111 0
-3339 2102 -58 0
-3339 2102 2108 -60 0
-3339 2102 2109 0
-3339 2102 2111 0
-3339 2103 -60 0
-3339 2103 2108 0
-3339 2103 2109 0
-3339 2103 2111 0
3339 -2108 60 0
3339 -2103 -2109 60 0
3339 -2103 -2108 58 0
3339 -2102 -2111 60 0
3339 -2102 -2109 58 0
3339 -2102 -2108 57 0
c ((2<=(aux489 + aux491 - shift(agrid_00002_00006, -3)))=tv=SATLiteral(3340))
-3340 -2103 -2108 60 0
-3340 -2102 -2109 60 0
-3340 -2102 -2108 58 0
3340 -58 0
3340 2108 -60 0
3340 2109 0
3340 2111 0
3340 2102 -60 0
3340 2102 2108 0
3340 2102 2109 0
3340 2102 2111 0
3340 2103 0
3340 2103 2108 0
3340 2103 2109 0
3340 2103 2111 0
c (((aux496 + aux498 - shift(agrid_00003_00006, -3))<=2)=tv=SATLiteral(3341))
-3341 2128 0
-3341 -90 2126 0
-3341 -88 2125 0
-3341 -87 0
-3341 2119 2126 0
-3341 2119 -90 2125 0
-3341 2119 -88 0
-3341 2119 -87 0
-3341 2120 2125 0
-3341 2120 -90 0
-3341 2120 -88 0
-3341 2120 -87 0
3341 90 -2125 0
3341 -2120 88 -2125 0
3341 -2120 90 -2126 0
3341 -2119 87 -2125 0
3341 -2119 88 -2126 0
3341 -2119 90 -2128 0
c ((2<=(aux496 + aux498 - shift(agrid_00003_00006, -3)))=tv=SATLiteral(3342))
-3342 -2120 90 -2125 0
-3342 -2119 88 -2125 0
-3342 -2119 90 -2126 0
3342 2126 0
3342 -90 2125 0
3342 -88 0
3342 -87 0
3342 2119 2125 0
3342 2119 -90 0
3342 2119 -88 0
3342 2119 -87 0
3342 2120 0
3342 2120 -90 0
3342 2120 -88 0
3342 2120 -87 0
c (((aux503 + aux505 - shift(agrid_00004_00006, -3))<=2)=tv=SATLiteral(3343))
-3343 2147 0
-3343 -120 2145 0
-3343 -118 2144 0
-3343 -117 0
-3343 2138 2145 0
-3343 2138 -120 2144 0
-3343 2138 -118 0
-3343 2138 -117 0
-3343 2139 2144 0
-3343 2139 -120 0
-3343 2139 -118 0
-3343 2139 -117 0
3343 120 -2144 0
3343 -2139 118 -2144 0
3343 -2139 120 -2145 0
3343 -2138 117 -2144 0
3343 -2138 118 -2145 0
3343 -2138 120 -2147 0
c ((2<=(aux503 + aux505 - shift(agrid_00004_00006, -3)))=tv=SATLiteral(3344))
-3344 -2139 120 -2144 0
-3344 -2138 118 -2144 0
-3344 -2138 120 -2145 0
3344 2145 0
3344 -120 2144 0
3344 -118 0
3344 -117 0
3344 2138 2144 0
3344 2138 -120 0
3344 2138 -118 0
3344 2138 -117 0
3344 2139 0
3344 2139 -120 0
3344 2139 -118 0
3344 2139 -117 0
c (((aux510 + aux512 - shift(agrid_00005_00006, -3))<=2)=tv=SATLiteral(3345))
-3345 -147 0
-3345 2161 -148 0
-3345 2162 -150 0
-3345 2164 0
-3345 2155 -148 0
-3345 2155 2161 -150 0
-3345 2155 2162 0
-3345 2155 2164 0
-3345 2156 -150 0
-3345 2156 2161 0
-3345 2156 2162 0
-3345 2156 2164 0
3345 -2161 150 0
3345 -2156 -2162 150 0
3345 -2156 -2161 148 0
3345 -2155 -2164 150 0
3345 -2155 -2162 148 0
3345 -2155 -2161 147 0
c ((2<=(aux510 + aux512 - shift(agrid_00005_00006, -3)))=tv=SATLiteral(3346))
-3346 -2156 -2161 150 0
-3346 -2155 -2162 150 0
-3346 -2155 -2161 148 0
3346 -148 0
3346 2161 -150 0
3346 2162 0
3346 2164 0
3346 2155 -150 0
3346 2155 2161 0
3346 2155 2162 0
3346 2155 2164 0
3346 2156 0
3346 2156 2161 0
3346 2156 2162 0
3346 2156 2164 0
c (((aux518 + aux519 - shift(agrid_00006_00006, -3))<=2)=tv=SATLiteral(3347))
-3347 -177 0
-3347 2174 -178 0
-3347 2175 -180 0
-3347 2171 -178 0
-3347 2171 2174 -180 0
-3347 2171 2175 0
-3347 2172 -180 0
-3347 2172 2174 0
-3347 2172 2175 0
3347 -2174 180 0
3347 -2172 -2175 180 0
3347 -2172 -2174 178 0
3347 -2171 180 0
3347 -2171 -2175 178 0
3347 -2171 -2174 177 0
c ((2<=(aux518 + aux519 - shift(agrid_00006_00006, -3)))=tv=SATLiteral(3348))
-3348 -2172 -2174 180 0
-3348 -2171 -2175 180 0
-3348 -2171 -2174 178 0
3348 -178 0
3348 2174 -180 0
3348 2175 0
3348 2171 -180 0
3348 2171 2174 0
3348 2171 2175 0
3348 2172 0
3348 2172 2174 0
3348 2172 2175 0
c ((-shift(num_occupied_by_types_00003, -36))=tv=aux230)
-747 -1240 0
-749 1241 0
-751 1239 0
-753 1237 0
-755 1235 0
-757 1233 0
-759 1231 0
-761 1229 0
-763 1227 0
-765 1225 0
-767 1223 0
-769 1221 0
-771 1219 0
-773 1217 0
-775 1215 0
-777 1213 0
-779 1211 0
-781 1209 0
-783 1207 0
-785 1205 0
-787 1203 0
-789 1201 0
-791 1199 0
-793 1197 0
-795 1195 0
-797 1193 0
-799 1191 0
-801 1189 0
-803 1187 0
-805 1185 0
-807 1183 0
-809 1181 0
-811 1179 0
-813 1177 0
-815 1175 0
-817 1173 0
816 1171 0
-1171 -816 0
-1173 817 0
-1175 815 0
-1177 813 0
-1179 811 0
-1181 809 0
-1183 807 0
-1185 805 0
-1187 803 0
-1189 801 0
-1191 799 0
-1193 797 0
-1195 795 0
-1197 793 0
-1199 791 0
-1201 789 0
-1203 787 0
-1205 785 0
-1207 783 0
-1209 781 0
-1211 779 0
-1213 777 0
-1215 775 0
-1217 773 0
-1219 771 0
-1221 769 0
-1223 767 0
-1225 765 0
-1227 763 0
-1229 761 0
-1231 759 0
-1233 757 0
-1235 755 0
-1237 753 0
-1239 751 0
-1241 749 0
1240 747 0
c (aux269=aux270)
-1494 1495 0
-1495 1494 0
c (aux276=aux277)
-1505 1506 0
-1506 1505 0
c (SATLiteral(-1)=aux282)
1519 0
c (SATLiteral(-1)=aux289)
1538 0
c (SATLiteral(-1)=aux296)
1557 0
c (SATLiteral(-1)=aux303)
1572 0
c (aux310=aux311)
-1583 1584 0
-1584 1583 0
c (SATLiteral(-1)=aux317)
1598 0
c (SATLiteral(-1)=aux324)
1617 0
c (SATLiteral(-1)=aux331)
1640 0
c (aux338=aux339)
-1663 1664 0
-1664 1663 0
c (SATLiteral(-1)=aux345)
1682 0
c (aux352=aux353)
-1697 1698 0
-1698 1697 0
c (SATLiteral(-1)=aux359)
1716 0
c (SATLiteral(491) <-> SATLiteral(1739))
-491 1739 0
491 -1739 0
c (SATLiteral(502) <-> SATLiteral(1766))
-502 1766 0
502 -1766 0
c (SATLiteral(-1)=aux380)
1793 0
c (SATLiteral(-1)=aux387)
1816 0
c (SATLiteral(-1)=aux394)
1835 0
c (SATLiteral(-1)=aux401)
1854 0
c (SATLiteral(277) <-> SATLiteral(1877))
-277 1877 0
277 -1877 0
c (SATLiteral(504) <-> SATLiteral(1904))
-504 1904 0
504 -1904 0
c (SATLiteral(-1)=aux422)
1931 0
c (aux429=aux430)
-1954 1955 0
-1955 1954 0
c (SATLiteral(-1)=aux436)
1973 0
c (SATLiteral(-1)=aux443)
1988 0
c (SATLiteral(-1)=aux450)
2007 0
c (SATLiteral(-1)=aux457)
2030 0
c (aux464=aux465)
-2053 2054 0
-2054 2053 0
c (aux472=aux473)
-2073 2074 0
-2074 2073 0
c (aux479=aux480)
-2088 2089 0
-2089 2088 0
c (aux486=aux487)
-2099 2100 0
-2100 2099 0
c (aux492=aux493)
-2113 2114 0
-2114 2113 0
c (aux499=aux500)
-2132 2133 0
-2133 2132 0
c (SATLiteral(-1)=aux507)
2152 0
c (SATLiteral(-1)=aux513)
2166 0
c ((SATLiteral(3257) /\ SATLiteral(3258))=tv=SATLiteral(942))
942 -3257 -3258 0
3257 -942 0
3258 -942 0
c ((SATLiteral(3259) /\ SATLiteral(3260))=tv=SATLiteral(943))
943 -3259 -3260 0
3259 -943 0
3260 -943 0
c (((aux235 + aux236 + aux237)<=0)=tv=SATLiteral(944))
-944 1400 0
-944 1397 0
-944 1398 0
-944 1394 0
-944 1394 1397 0
-944 1394 1398 0
-944 1395 0
-944 1395 1397 0
-944 1395 1398 0
944 -1394 -1397 -1400 0
c ((SATLiteral(3261) /\ SATLiteral(3262))=tv=SATLiteral(945))
945 -3261 -3262 0
3261 -945 0
3262 -945 0
c ((SATLiteral(3263) /\ SATLiteral(3264))=tv=SATLiteral(946))
946 -3263 -3264 0
3263 -946 0
3264 -946 0
c ((SATLiteral(3265) /\ SATLiteral(3266))=tv=SATLiteral(947))
947 -3265 -3266 0
3265 -947 0
3266 -947 0
c ((SATLiteral(3267) /\ SATLiteral(3268))=tv=SATLiteral(948))
948 -3267 -3268 0
3267 -948 0
3268 -948 0
c ((SATLiteral(3269) /\ SATLiteral(3270))=tv=SATLiteral(949))
949 -3269 -3270 0
3269 -949 0
3270 -949 0
c (((aux253 + aux254 + aux255)<=0)=tv=SATLiteral(950))
-950 1454 0
-950 1451 0
-950 1452 0
-950 1448 0
-950 1448 1451 0
-950 1448 1452 0
-950 1449 0
-950 1449 1451 0
-950 1449 1452 0
950 -1448 -1451 -1454 0
c ((SATLiteral(3271) /\ SATLiteral(3272))=tv=SATLiteral(951))
951 -3271 -3272 0
3271 -951 0
3272 -951 0
c (((aux259 + aux260 + aux261)<=0)=tv=SATLiteral(952))
-952 1472 0
-952 1469 0
-952 1470 0
-952 1466 0
-952 1466 1469 0
-952 1466 1470 0
-952 1467 0
-952 1467 1469 0
-952 1467 1470 0
952 -1466 -1469 -1472 0
c ((SATLiteral(3273) /\ SATLiteral(3274))=tv=SATLiteral(953))
953 -3273 -3274 0
3273 -953 0
3274 -953 0
c ((SATLiteral(3275) /\ SATLiteral(3276))=tv=SATLiteral(954))
954 -3275 -3276 0
3275 -954 0
3276 -954 0
c ((SATLiteral(191) -> SATLiteral(-200))=tv=SATLiteral(955))
-955 -191 -200 0
191 955 0
200 955 0
c ((SATLiteral(191) -> SATLiteral(1))=tv=SATLiteral(956))
-956 -191 1 0
191 956 0
-1 956 0
c ((SATLiteral(191) -> SATLiteral(1))=tv=SATLiteral(957))
-957 -191 1 0
191 957 0
-1 957 0
c ((SATLiteral(191) -> SATLiteral(1))=tv=SATLiteral(958))
-958 -191 1 0
191 958 0
-1 958 0
c ((SATLiteral(199) -> SATLiteral(-208))=tv=SATLiteral(959))
-959 -199 -208 0
199 959 0
208 959 0
c ((SATLiteral(199) -> SATLiteral(1))=tv=SATLiteral(960))
-960 -199 1 0
199 960 0
-1 960 0
c ((SATLiteral(199) -> SATLiteral(1))=tv=SATLiteral(961))
-961 -199 1 0
199 961 0
-1 961 0
c ((SATLiteral(199) -> SATLiteral(-192))=tv=SATLiteral(962))
-962 -199 -192 0
199 962 0
192 962 0
c ((SATLiteral(207) -> SATLiteral(-216))=tv=SATLiteral(963))
-963 -207 -216 0
207 963 0
216 963 0
c ((SATLiteral(207) -> SATLiteral(1))=tv=SATLiteral(964))
-964 -207 1 0
207 964 0
-1 964 0
c ((SATLiteral(207) -> SATLiteral(1))=tv=SATLiteral(965))
-965 -207 1 0
207 965 0
-1 965 0
c ((SATLiteral(207) -> SATLiteral(-200))=tv=SATLiteral(966))
-966 -207 -200 0
207 966 0
200 966 0
c ((SATLiteral(215) -> SATLiteral(-224))=tv=SATLiteral(967))
-967 -215 -224 0
215 967 0
224 967 0
c ((SATLiteral(215) -> SATLiteral(1))=tv=SATLiteral(968))
-968 -215 1 0
215 968 0
-1 968 0
c ((SATLiteral(215) -> SATLiteral(1))=tv=SATLiteral(969))
-969 -215 1 0
215 969 0
-1 969 0
c ((SATLiteral(215) -> SATLiteral(-208))=tv=SATLiteral(970))
-970 -215 -208 0
215 970 0
208 970 0
c ((SATLiteral(223) -> SATLiteral(-232))=tv=SATLiteral(971))
-971 -223 -232 0
223 971 0
232 971 0
c ((SATLiteral(223) -> SATLiteral(1))=tv=SATLiteral(972))
-972 -223 1 0
223 972 0
-1 972 0
c ((SATLiteral(223) -> SATLiteral(1))=tv=SATLiteral(973))
-973 -223 1 0
223 973 0
-1 973 0
c ((SATLiteral(223) -> SATLiteral(-216))=tv=SATLiteral(974))
-974 -223 -216 0
223 974 0
216 974 0
c ((SATLiteral(231) -> SATLiteral(1))=tv=SATLiteral(975))
-975 -231 1 0
231 975 0
-1 975 0
c ((SATLiteral(231) -> SATLiteral(1))=tv=SATLiteral(976))
-976 -231 1 0
231 976 0
-1 976 0
c ((SATLiteral(231) -> SATLiteral(1))=tv=SATLiteral(977))
-977 -231 1 0
231 977 0
-1 977 0
c ((SATLiteral(231) -> SATLiteral(-224))=tv=SATLiteral(978))
-978 -231 -224 0
231 978 0
224 978 0
c ((SATLiteral(192) -> SATLiteral(-201))=tv=SATLiteral(979))
-979 -192 -201 0
192 979 0
201 979 0
c ((SATLiteral(192) -> SATLiteral(-199))=tv=SATLiteral(980))
-980 -192 -199 0
192 980 0
199 980 0
c ((SATLiteral(192) -> SATLiteral(1))=tv=SATLiteral(981))
-981 -192 1 0
192 981 0
-1 981 0
c ((SATLiteral(192) -> SATLiteral(1))=tv=SATLiteral(982))
-982 -192 1 0
192 982 0
-1 982 0
c ((SATLiteral(200) -> SATLiteral(-209))=tv=SATLiteral(983))
-983 -200 -209 0
200 983 0
209 983 0
c ((SATLiteral(200) -> SATLiteral(-207))=tv=SATLiteral(984))
-984 -200 -207 0
200 984 0
207 984 0
c ((SATLiteral(200) -> SATLiteral(-191))=tv=SATLiteral(985))
-985 -200 -191 0
200 985 0
191 985 0
c ((SATLiteral(200) -> SATLiteral(-193))=tv=SATLiteral(986))
-986 -200 -193 0
200 986 0
193 986 0
c ((SATLiteral(208) -> SATLiteral(-217))=tv=SATLiteral(987))
-987 -208 -217 0
208 987 0
217 987 0
c ((SATLiteral(208) -> SATLiteral(-215))=tv=SATLiteral(988))
-988 -208 -215 0
208 988 0
215 988 0
c ((SATLiteral(208) -> SATLiteral(-199))=tv=SATLiteral(989))
-989 -208 -199 0
208 989 0
199 989 0
c ((SATLiteral(208) -> SATLiteral(-201))=tv=SATLiteral(990))
-990 -208 -201 0
208 990 0
201 990 0
c ((SATLiteral(216) -> SATLiteral(-225))=tv=SATLiteral(991))
-991 -216 -225 0
216 991 0
225 991 0
c ((SATLiteral(216) -> SATLiteral(-223))=tv=SATLiteral(992))
-992 -216 -223 0
216 992 0
223 992 0
c ((SATLiteral(216) -> SATLiteral(-207))=tv=SATLiteral(993))
-993 -216 -207 0
216 993 0
207 993 0
c ((SATLiteral(216) -> SATLiteral(-209))=tv=SATLiteral(994))
-994 -216 -209 0
216 994 0
209 994 0
c ((SATLiteral(224) -> SATLiteral(-233))=tv=SATLiteral(995))
-995 -224 -233 0
224 995 0
233 995 0
c ((SATLiteral(224) -> SATLiteral(-231))=tv=SATLiteral(996))
-996 -224 -231 0
224 996 0
231 996 0
c ((SATLiteral(224) -> SATLiteral(-215))=tv=SATLiteral(997))
-997 -224 -215 0
224 997 0
215 997 0
c ((SATLiteral(224) -> SATLiteral(-217))=tv=SATLiteral(998))
-998 -224 -217 0
224 998 0
217 998 0
c ((SATLiteral(232) -> SATLiteral(1))=tv=SATLiteral(999))
-999 -232 1 0
232 999 0
-1 999 0
c ((SATLiteral(232) -> SATLiteral(1))=tv=SATLiteral(1000))
-1000 -232 1 0
232 1000 0
-1 1000 0
c ((SATLiteral(232) -> SATLiteral(-223))=tv=SATLiteral(1001))
-1001 -232 -223 0
232 1001 0
223 1001 0
c ((SATLiteral(232) -> SATLiteral(-225))=tv=SATLiteral(1002))
-1002 -232 -225 0
232 1002 0
225 1002 0
c ((SATLiteral(193) -> SATLiteral(-202))=tv=SATLiteral(1003))
-1003 -193 -202 0
193 1003 0
202 1003 0
c ((SATLiteral(193) -> SATLiteral(-200))=tv=SATLiteral(1004))
-1004 -193 -200 0
193 1004 0
200 1004 0
c ((SATLiteral(193) -> SATLiteral(1))=tv=SATLiteral(1005))
-1005 -193 1 0
193 1005 0
-1 1005 0
c ((SATLiteral(193) -> SATLiteral(1))=tv=SATLiteral(1006))
-1006 -193 1 0
193 1006 0
-1 1006 0
c ((SATLiteral(201) -> SATLiteral(-210))=tv=SATLiteral(1007))
-1007 -201 -210 0
201 1007 0
210 1007 0
c ((SATLiteral(201) -> SATLiteral(-208))=tv=SATLiteral(1008))
-1008 -201 -208 0
201 1008 0
208 1008 0
c ((SATLiteral(201) -> SATLiteral(-192))=tv=SATLiteral(1009))
-1009 -201 -192 0
201 1009 0
192 1009 0
c ((SATLiteral(201) -> SATLiteral(-194))=tv=SATLiteral(1010))
-1010 -201 -194 0
201 1010 0
194 1010 0
c ((SATLiteral(209) -> SATLiteral(-218))=tv=SATLiteral(1011))
-1011 -209 -218 0
209 1011 0
218 1011 0
c ((SATLiteral(209) -> SATLiteral(-216))=tv=SATLiteral(1012))
-1012 -209 -216 0
209 1012 0
216 1012 0
c ((SATLiteral(209) -> SATLiteral(-200))=tv=SATLiteral(1013))
-1013 -209 -200 0
209 1013 0
200 1013 0
c ((SATLiteral(209) -> SATLiteral(-202))=tv=SATLiteral(1014))
-1014 -209 -202 0
209 1014 0
202 1014 0
c ((SATLiteral(217) -> SATLiteral(-226))=tv=SATLiteral(1015))
-1015 -217 -226 0
217 1015 0
226 1015 0
c ((SATLiteral(217) -> SATLiteral(-224))=tv=SATLiteral(1016))
-1016 -217 -224 0
217 1016 0
224 1016 0
c ((SATLiteral(217) -> SATLiteral(-208))=tv=SATLiteral(1017))
-1017 -217 -208 0
217 1017 0
208 1017 0
c ((SATLiteral(217) -> SATLiteral(-210))=tv=SATLiteral(1018))
-1018 -217 -210 0
217 1018 0
210 1018 0
c ((SATLiteral(225) -> SATLiteral(-234))=tv=SATLiteral(1019))
-1019 -225 -234 0
225 1019 0
234 1019 0
c ((SATLiteral(225) -> SATLiteral(-232))=tv=SATLiteral(1020))
-1020 -225 -232 0
225 1020 0
232 1020 0
c ((SATLiteral(225) -> SATLiteral(-216))=tv=SATLiteral(1021))
-1021 -225 -216 0
225 1021 0
216 1021 0
c ((SATLiteral(225) -> SATLiteral(-218))=tv=SATLiteral(1022))
-1022 -225 -218 0
225 1022 0
218 1022 0
c ((SATLiteral(233) -> SATLiteral(1))=tv=SATLiteral(1023))
-1023 -233 1 0
233 1023 0
-1 1023 0
c ((SATLiteral(233) -> SATLiteral(1))=tv=SATLiteral(1024))
-1024 -233 1 0
233 1024 0
-1 1024 0
c ((SATLiteral(233) -> SATLiteral(-224))=tv=SATLiteral(1025))
-1025 -233 -224 0
233 1025 0
224 1025 0
c ((SATLiteral(233) -> SATLiteral(-226))=tv=SATLiteral(1026))
-1026 -233 -226 0
233 1026 0
226 1026 0
c ((SATLiteral(194) -> SATLiteral(-203))=tv=SATLiteral(1027))
-1027 -194 -203 0
194 1027 0
203 1027 0
c ((SATLiteral(194) -> SATLiteral(-201))=tv=SATLiteral(1028))
-1028 -194 -201 0
194 1028 0
201 1028 0
c ((SATLiteral(194) -> SATLiteral(1))=tv=SATLiteral(1029))
-1029 -194 1 0
194 1029 0
-1 1029 0
c ((SATLiteral(194) -> SATLiteral(1))=tv=SATLiteral(1030))
-1030 -194 1 0
194 1030 0
-1 1030 0
c ((SATLiteral(202) -> SATLiteral(-211))=tv=SATLiteral(1031))
-1031 -202 -211 0
202 1031 0
211 1031 0
c ((SATLiteral(202) -> SATLiteral(-209))=tv=SATLiteral(1032))
-1032 -202 -209 0
202 1032 0
209 1032 0
c ((SATLiteral(202) -> SATLiteral(-193))=tv=SATLiteral(1033))
-1033 -202 -193 0
202 1033 0
193 1033 0
c ((SATLiteral(202) -> SATLiteral(-195))=tv=SATLiteral(1034))
-1034 -202 -195 0
202 1034 0
195 1034 0
c ((SATLiteral(210) -> SATLiteral(-219))=tv=SATLiteral(1035))
-1035 -210 -219 0
210 1035 0
219 1035 0
c ((SATLiteral(210) -> SATLiteral(-217))=tv=SATLiteral(1036))
-1036 -210 -217 0
210 1036 0
217 1036 0
c ((SATLiteral(210) -> SATLiteral(-201))=tv=SATLiteral(1037))
-1037 -210 -201 0
210 1037 0
201 1037 0
c ((SATLiteral(210) -> SATLiteral(-203))=tv=SATLiteral(1038))
-1038 -210 -203 0
210 1038 0
203 1038 0
c ((SATLiteral(218) -> SATLiteral(-227))=tv=SATLiteral(1039))
-1039 -218 -227 0
218 1039 0
227 1039 0
c ((SATLiteral(218) -> SATLiteral(-225))=tv=SATLiteral(1040))
-1040 -218 -225 0
218 1040 0
225 1040 0
c ((SATLiteral(218) -> SATLiteral(-209))=tv=SATLiteral(1041))
-1041 -218 -209 0
218 1041 0
209 1041 0
c ((SATLiteral(218) -> SATLiteral(-211))=tv=SATLiteral(1042))
-1042 -218 -211 0
218 1042 0
211 1042 0
c ((SATLiteral(226) -> SATLiteral(-235))=tv=SATLiteral(1043))
-1043 -226 -235 0
226 1043 0
235 1043 0
c ((SATLiteral(226) -> SATLiteral(-233))=tv=SATLiteral(1044))
-1044 -226 -233 0
226 1044 0
233 1044 0
c ((SATLiteral(226) -> SATLiteral(-217))=tv=SATLiteral(1045))
-1045 -226 -217 0
226 1045 0
217 1045 0
c ((SATLiteral(226) -> SATLiteral(-219))=tv=SATLiteral(1046))
-1046 -226 -219 0
226 1046 0
219 1046 0
c ((SATLiteral(234) -> SATLiteral(1))=tv=SATLiteral(1047))
-1047 -234 1 0
234 1047 0
-1 1047 0
c ((SATLiteral(234) -> SATLiteral(1))=tv=SATLiteral(1048))
-1048 -234 1 0
234 1048 0
-1 1048 0
c ((SATLiteral(234) -> SATLiteral(-225))=tv=SATLiteral(1049))
-1049 -234 -225 0
234 1049 0
225 1049 0
c ((SATLiteral(234) -> SATLiteral(-227))=tv=SATLiteral(1050))
-1050 -234 -227 0
234 1050 0
227 1050 0
c ((SATLiteral(195) -> SATLiteral(-204))=tv=SATLiteral(1051))
-1051 -195 -204 0
195 1051 0
204 1051 0
c ((SATLiteral(195) -> SATLiteral(-202))=tv=SATLiteral(1052))
-1052 -195 -202 0
195 1052 0
202 1052 0
c ((SATLiteral(195) -> SATLiteral(1))=tv=SATLiteral(1053))
-1053 -195 1 0
195 1053 0
-1 1053 0
c ((SATLiteral(195) -> SATLiteral(1))=tv=SATLiteral(1054))
-1054 -195 1 0
195 1054 0
-1 1054 0
c ((SATLiteral(203) -> SATLiteral(-212))=tv=SATLiteral(1055))
-1055 -203 -212 0
203 1055 0
212 1055 0
c ((SATLiteral(203) -> SATLiteral(-210))=tv=SATLiteral(1056))
-1056 -203 -210 0
203 1056 0
210 1056 0
c ((SATLiteral(203) -> SATLiteral(-194))=tv=SATLiteral(1057))
-1057 -203 -194 0
203 1057 0
194 1057 0
c ((SATLiteral(203) -> SATLiteral(-196))=tv=SATLiteral(1058))
-1058 -203 -196 0
203 1058 0
196 1058 0
c ((SATLiteral(211) -> SATLiteral(-220))=tv=SATLiteral(1059))
-1059 -211 -220 0
211 1059 0
220 1059 0
c ((SATLiteral(211) -> SATLiteral(-218))=tv=SATLiteral(1060))
-1060 -211 -218 0
211 1060 0
218 1060 0
c ((SATLiteral(211) -> SATLiteral(-202))=tv=SATLiteral(1061))
-1061 -211 -202 0
211 1061 0
202 1061 0
c ((SATLiteral(211) -> SATLiteral(-204))=tv=SATLiteral(1062))
-1062 -211 -204 0
211 1062 0
204 1062 0
c ((SATLiteral(219) -> SATLiteral(-228))=tv=SATLiteral(1063))
-1063 -219 -228 0
219 1063 0
228 1063 0
c ((SATLiteral(219) -> SATLiteral(-226))=tv=SATLiteral(1064))
-1064 -219 -226 0
219 1064 0
226 1064 0
c ((SATLiteral(219) -> SATLiteral(-210))=tv=SATLiteral(1065))
-1065 -219 -210 0
219 1065 0
210 1065 0
c ((SATLiteral(219) -> SATLiteral(-212))=tv=SATLiteral(1066))
-1066 -219 -212 0
219 1066 0
212 1066 0
c ((SATLiteral(227) -> SATLiteral(-236))=tv=SATLiteral(1067))
-1067 -227 -236 0
227 1067 0
236 1067 0
c ((SATLiteral(227) -> SATLiteral(-234))=tv=SATLiteral(1068))
-1068 -227 -234 0
227 1068 0
234 1068 0
c ((SATLiteral(227) -> SATLiteral(-218))=tv=SATLiteral(1069))
-1069 -227 -218 0
227 1069 0
218 1069 0
c ((SATLiteral(227) -> SATLiteral(-220))=tv=SATLiteral(1070))
-1070 -227 -220 0
227 1070 0
220 1070 0
c ((SATLiteral(235) -> SATLiteral(1))=tv=SATLiteral(1071))
-1071 -235 1 0
235 1071 0
-1 1071 0
c ((SATLiteral(235) -> SATLiteral(1))=tv=SATLiteral(1072))
-1072 -235 1 0
235 1072 0
-1 1072 0
c ((SATLiteral(235) -> SATLiteral(-226))=tv=SATLiteral(1073))
-1073 -235 -226 0
235 1073 0
226 1073 0
c ((SATLiteral(235) -> SATLiteral(-228))=tv=SATLiteral(1074))
-1074 -235 -228 0
235 1074 0
228 1074 0
c ((SATLiteral(196) -> SATLiteral(1))=tv=SATLiteral(1075))
-1075 -196 1 0
196 1075 0
-1 1075 0
c ((SATLiteral(196) -> SATLiteral(-203))=tv=SATLiteral(1076))
-1076 -196 -203 0
196 1076 0
203 1076 0
c ((SATLiteral(196) -> SATLiteral(1))=tv=SATLiteral(1077))
-1077 -196 1 0
196 1077 0
-1 1077 0
c ((SATLiteral(196) -> SATLiteral(1))=tv=SATLiteral(1078))
-1078 -196 1 0
196 1078 0
-1 1078 0
c ((SATLiteral(204) -> SATLiteral(1))=tv=SATLiteral(1079))
-1079 -204 1 0
204 1079 0
-1 1079 0
c ((SATLiteral(204) -> SATLiteral(-211))=tv=SATLiteral(1080))
-1080 -204 -211 0
204 1080 0
211 1080 0
c ((SATLiteral(204) -> SATLiteral(-195))=tv=SATLiteral(1081))
-1081 -204 -195 0
204 1081 0
195 1081 0
c ((SATLiteral(204) -> SATLiteral(1))=tv=SATLiteral(1082))
-1082 -204 1 0
204 1082 0
-1 1082 0
c ((SATLiteral(212) -> SATLiteral(1))=tv=SATLiteral(1083))
-1083 -212 1 0
212 1083 0
-1 1083 0
c ((SATLiteral(212) -> SATLiteral(-219))=tv=SATLiteral(1084))
-1084 -212 -219 0
212 1084 0
219 1084 0
c ((SATLiteral(212) -> SATLiteral(-203))=tv=SATLiteral(1085))
-1085 -212 -203 0
212 1085 0
203 1085 0
c ((SATLiteral(212) -> SATLiteral(1))=tv=SATLiteral(1086))
-1086 -212 1 0
212 1086 0
-1 1086 0
c ((SATLiteral(220) -> SATLiteral(1))=tv=SATLiteral(1087))
-1087 -220 1 0
220 1087 0
-1 1087 0
c ((SATLiteral(220) -> SATLiteral(-227))=tv=SATLiteral(1088))
-1088 -220 -227 0
220 1088 0
227 1088 0
c ((SATLiteral(220) -> SATLiteral(-211))=tv=SATLiteral(1089))
-1089 -220 -211 0
220 1089 0
211 1089 0
c ((SATLiteral(220) -> SATLiteral(1))=tv=SATLiteral(1090))
-1090 -220 1 0
220 1090 0
-1 1090 0
c ((SATLiteral(228) -> SATLiteral(1))=tv=SATLiteral(1091))
-1091 -228 1 0
228 1091 0
-1 1091 0
c ((SATLiteral(228) -> SATLiteral(-235))=tv=SATLiteral(1092))
-1092 -228 -235 0
228 1092 0
235 1092 0
c ((SATLiteral(228) -> SATLiteral(-219))=tv=SATLiteral(1093))
-1093 -228 -219 0
228 1093 0
219 1093 0
c ((SATLiteral(228) -> SATLiteral(1))=tv=SATLiteral(1094))
-1094 -228 1 0
228 1094 0
-1 1094 0
c ((SATLiteral(236) -> SATLiteral(1))=tv=SATLiteral(1095))
-1095 -236 1 0
236 1095 0
-1 1095 0
c ((SATLiteral(236) -> SATLiteral(1))=tv=SATLiteral(1096))
-1096 -236 1 0
236 1096 0
-1 1096 0
c ((SATLiteral(236) -> SATLiteral(-227))=tv=SATLiteral(1097))
-1097 -236 -227 0
236 1097 0
227 1097 0
c ((SATLiteral(236) -> SATLiteral(1))=tv=SATLiteral(1098))
-1098 -236 1 0
236 1098 0
-1 1098 0
c ((SATLiteral(3277) /\ SATLiteral(3278))=tv=SATLiteral(1099))
1099 -3277 -3278 0
3277 -1099 0
3278 -1099 0
c ((SATLiteral(191) -> SATLiteral(1099))=tv=SATLiteral(1100))
-1100 -191 1099 0
191 1100 0
-1099 1100 0
c ((SATLiteral(3279) /\ SATLiteral(3280))=tv=SATLiteral(1101))
1101 -3279 -3280 0
3279 -1101 0
3280 -1101 0
c ((SATLiteral(199) -> SATLiteral(1101))=tv=SATLiteral(1102))
-1102 -199 1101 0
199 1102 0
-1101 1102 0
c ((SATLiteral(3281) /\ SATLiteral(3282))=tv=SATLiteral(1103))
1103 -3281 -3282 0
3281 -1103 0
3282 -1103 0
c ((SATLiteral(207) -> SATLiteral(1103))=tv=SATLiteral(1104))
-1104 -207 1103 0
207 1104 0
-1103 1104 0
c ((SATLiteral(3283) /\ SATLiteral(3284))=tv=SATLiteral(1105))
1105 -3283 -3284 0
3283 -1105 0
3284 -1105 0
c ((SATLiteral(215) -> SATLiteral(1105))=tv=SATLiteral(1106))
-1106 -215 1105 0
215 1106 0
-1105 1106 0
c ((SATLiteral(3285) /\ SATLiteral(3286))=tv=SATLiteral(1107))
1107 -3285 -3286 0
3285 -1107 0
3286 -1107 0
c ((SATLiteral(223) -> SATLiteral(1107))=tv=SATLiteral(1108))
-1108 -223 1107 0
223 1108 0
-1107 1108 0
c ((SATLiteral(3287) /\ SATLiteral(3288))=tv=SATLiteral(1109))
1109 -3287 -3288 0
3287 -1109 0
3288 -1109 0
c ((SATLiteral(231) -> SATLiteral(1109))=tv=SATLiteral(1110))
-1110 -231 1109 0
231 1110 0
-1109 1110 0
c ((SATLiteral(3289) /\ SATLiteral(3290))=tv=SATLiteral(1111))
1111 -3289 -3290 0
3289 -1111 0
3290 -1111 0
c ((SATLiteral(192) -> SATLiteral(1111))=tv=SATLiteral(1112))
-1112 -192 1111 0
192 1112 0
-1111 1112 0
c ((SATLiteral(3291) /\ SATLiteral(3292))=tv=SATLiteral(1113))
1113 -3291 -3292 0
3291 -1113 0
3292 -1113 0
c ((SATLiteral(200) -> SATLiteral(1113))=tv=SATLiteral(1114))
-1114 -200 1113 0
200 1114 0
-1113 1114 0
c ((SATLiteral(3293) /\ SATLiteral(3294))=tv=SATLiteral(1115))
1115 -3293 -3294 0
3293 -1115 0
3294 -1115 0
c ((SATLiteral(208) -> SATLiteral(1115))=tv=SATLiteral(1116))
-1116 -208 1115 0
208 1116 0
-1115 1116 0
c ((SATLiteral(3295) /\ SATLiteral(3296))=tv=SATLiteral(1117))
1117 -3295 -3296 0
3295 -1117 0
3296 -1117 0
c ((SATLiteral(216) -> SATLiteral(1117))=tv=SATLiteral(1118))
-1118 -216 1117 0
216 1118 0
-1117 1118 0
c ((SATLiteral(3297) /\ SATLiteral(3298))=tv=SATLiteral(1119))
1119 -3297 -3298 0
3297 -1119 0
3298 -1119 0
c ((SATLiteral(224) -> SATLiteral(1119))=tv=SATLiteral(1120))
-1120 -224 1119 0
224 1120 0
-1119 1120 0
c ((SATLiteral(3299) /\ SATLiteral(3300))=tv=SATLiteral(1121))
1121 -3299 -3300 0
3299 -1121 0
3300 -1121 0
c ((SATLiteral(232) -> SATLiteral(1121))=tv=SATLiteral(1122))
-1122 -232 1121 0
232 1122 0
-1121 1122 0
c ((SATLiteral(3301) /\ SATLiteral(3302))=tv=SATLiteral(1123))
1123 -3301 -3302 0
3301 -1123 0
3302 -1123 0
c ((SATLiteral(193) -> SATLiteral(1123))=tv=SATLiteral(1124))
-1124 -193 1123 0
193 1124 0
-1123 1124 0
c ((SATLiteral(3303) /\ SATLiteral(3304))=tv=SATLiteral(1125))
1125 -3303 -3304 0
3303 -1125 0
3304 -1125 0
c ((SATLiteral(201) -> SATLiteral(1125))=tv=SATLiteral(1126))
-1126 -201 1125 0
201 1126 0
-1125 1126 0
c ((SATLiteral(3305) /\ SATLiteral(3306))=tv=SATLiteral(1127))
1127 -3305 -3306 0
3305 -1127 0
3306 -1127 0
c ((SATLiteral(209) -> SATLiteral(1127))=tv=SATLiteral(1128))
-1128 -209 1127 0
209 1128 0
-1127 1128 0
c ((SATLiteral(3307) /\ SATLiteral(3308))=tv=SATLiteral(1129))
1129 -3307 -3308 0
3307 -1129 0
3308 -1129 0
c ((SATLiteral(217) -> SATLiteral(1129))=tv=SATLiteral(1130))
-1130 -217 1129 0
217 1130 0
-1129 1130 0
c ((SATLiteral(3309) /\ SATLiteral(3310))=tv=SATLiteral(1131))
1131 -3309 -3310 0
3309 -1131 0
3310 -1131 0
c ((SATLiteral(225) -> SATLiteral(1131))=tv=SATLiteral(1132))
-1132 -225 1131 0
225 1132 0
-1131 1132 0
c ((SATLiteral(3311) /\ SATLiteral(3312))=tv=SATLiteral(1133))
1133 -3311 -3312 0
3311 -1133 0
3312 -1133 0
c ((SATLiteral(233) -> SATLiteral(1133))=tv=SATLiteral(1134))
-1134 -233 1133 0
233 1134 0
-1133 1134 0
c ((SATLiteral(3313) /\ SATLiteral(3314))=tv=SATLiteral(1135))
1135 -3313 -3314 0
3313 -1135 0
3314 -1135 0
c ((SATLiteral(194) -> SATLiteral(1135))=tv=SATLiteral(1136))
-1136 -194 1135 0
194 1136 0
-1135 1136 0
c ((SATLiteral(3315) /\ SATLiteral(3316))=tv=SATLiteral(1137))
1137 -3315 -3316 0
3315 -1137 0
3316 -1137 0
c ((SATLiteral(202) -> SATLiteral(1137))=tv=SATLiteral(1138))
-1138 -202 1137 0
202 1138 0
-1137 1138 0
c ((SATLiteral(3317) /\ SATLiteral(3318))=tv=SATLiteral(1139))
1139 -3317 -3318 0
3317 -1139 0
3318 -1139 0
c ((SATLiteral(210) -> SATLiteral(1139))=tv=SATLiteral(1140))
-1140 -210 1139 0
210 1140 0
-1139 1140 0
c ((SATLiteral(3319) /\ SATLiteral(3320))=tv=SATLiteral(1141))
1141 -3319 -3320 0
3319 -1141 0
3320 -1141 0
c ((SATLiteral(218) -> SATLiteral(1141))=tv=SATLiteral(1142))
-1142 -218 1141 0
218 1142 0
-1141 1142 0
c ((SATLiteral(3321) /\ SATLiteral(3322))=tv=SATLiteral(1143))
1143 -3321 -3322 0
3321 -1143 0
3322 -1143 0
c ((SATLiteral(226) -> SATLiteral(1143))=tv=SATLiteral(1144))
-1144 -226 1143 0
226 1144 0
-1143 1144 0
c ((SATLiteral(3323) /\ SATLiteral(3324))=tv=SATLiteral(1145))
1145 -3323 -3324 0
3323 -1145 0
3324 -1145 0
c ((SATLiteral(234) -> SATLiteral(1145))=tv=SATLiteral(1146))
-1146 -234 1145 0
234 1146 0
-1145 1146 0
c ((SATLiteral(3325) /\ SATLiteral(3326))=tv=SATLiteral(1147))
1147 -3325 -3326 0
3325 -1147 0
3326 -1147 0
c ((SATLiteral(195) -> SATLiteral(1147))=tv=SATLiteral(1148))
-1148 -195 1147 0
195 1148 0
-1147 1148 0
c ((SATLiteral(3327) /\ SATLiteral(3328))=tv=SATLiteral(1149))
1149 -3327 -3328 0
3327 -1149 0
3328 -1149 0
c ((SATLiteral(203) -> SATLiteral(1149))=tv=SATLiteral(1150))
-1150 -203 1149 0
203 1150 0
-1149 1150 0
c ((SATLiteral(3329) /\ SATLiteral(3330))=tv=SATLiteral(1151))
1151 -3329 -3330 0
3329 -1151 0
3330 -1151 0
c ((SATLiteral(211) -> SATLiteral(1151))=tv=SATLiteral(1152))
-1152 -211 1151 0
211 1152 0
-1151 1152 0
c ((SATLiteral(3331) /\ SATLiteral(3332))=tv=SATLiteral(1153))
1153 -3331 -3332 0
3331 -1153 0
3332 -1153 0
c ((SATLiteral(219) -> SATLiteral(1153))=tv=SATLiteral(1154))
-1154 -219 1153 0
219 1154 0
-1153 1154 0
c ((SATLiteral(3333) /\ SATLiteral(3334))=tv=SATLiteral(1155))
1155 -3333 -3334 0
3333 -1155 0
3334 -1155 0
c ((SATLiteral(227) -> SATLiteral(1155))=tv=SATLiteral(1156))
-1156 -227 1155 0
227 1156 0
-1155 1156 0
c ((SATLiteral(3335) /\ SATLiteral(3336))=tv=SATLiteral(1157))
1157 -3335 -3336 0
3335 -1157 0
3336 -1157 0
c ((SATLiteral(235) -> SATLiteral(1157))=tv=SATLiteral(1158))
-1158 -235 1157 0
235 1158 0
-1157 1158 0
c ((SATLiteral(3337) /\ SATLiteral(3338))=tv=SATLiteral(1159))
1159 -3337 -3338 0
3337 -1159 0
3338 -1159 0
c ((SATLiteral(196) -> SATLiteral(1159))=tv=SATLiteral(1160))
-1160 -196 1159 0
196 1160 0
-1159 1160 0
c ((SATLiteral(3339) /\ SATLiteral(3340))=tv=SATLiteral(1161))
1161 -3339 -3340 0
3339 -1161 0
3340 -1161 0
c ((SATLiteral(204) -> SATLiteral(1161))=tv=SATLiteral(1162))
-1162 -204 1161 0
204 1162 0
-1161 1162 0
c ((SATLiteral(3341) /\ SATLiteral(3342))=tv=SATLiteral(1163))
1163 -3341 -3342 0
3341 -1163 0
3342 -1163 0
c ((SATLiteral(212) -> SATLiteral(1163))=tv=SATLiteral(1164))
-1164 -212 1163 0
212 1164 0
-1163 1164 0
c ((SATLiteral(3343) /\ SATLiteral(3344))=tv=SATLiteral(1165))
1165 -3343 -3344 0
3343 -1165 0
3344 -1165 0
c ((SATLiteral(220) -> SATLiteral(1165))=tv=SATLiteral(1166))
-1166 -220 1165 0
220 1166 0
-1165 1166 0
c ((SATLiteral(3345) /\ SATLiteral(3346))=tv=SATLiteral(1167))
1167 -3345 -3346 0
3345 -1167 0
3346 -1167 0
c ((SATLiteral(228) -> SATLiteral(1167))=tv=SATLiteral(1168))
-1168 -228 1167 0
228 1168 0
-1167 1168 0
c ((SATLiteral(3347) /\ SATLiteral(3348))=tv=SATLiteral(1169))
1169 -3347 -3348 0
3347 -1169 0
3348 -1169 0
c ((SATLiteral(236) -> SATLiteral(1169))=tv=SATLiteral(1170))
-1170 -236 1169 0
236 1170 0
-1169 1170 0
c (SATLiteral(833) -> SATLiteral(942))
-833 942 0
c (SATLiteral(72) \/ SATLiteral(-884))
72 -884 0
c (SATLiteral(830) -> SATLiteral(611))
-830 611 0
c (SATLiteral(831) -> SATLiteral(684))
-831 684 0
c (SATLiteral(832) -> SATLiteral(753))
-832 753 0
c (SATLiteral(824) -> SATLiteral(943))
-824 943 0
c (SATLiteral(825) -> SATLiteral(944))
-825 944 0
c (SATLiteral(826) -> SATLiteral(945))
-826 945 0
c (SATLiteral(827) -> SATLiteral(946))
-827 946 0
c (SATLiteral(828) -> SATLiteral(947))
-828 947 0
c (SATLiteral(829) -> SATLiteral(948))
-829 948 0
c (SATLiteral(818) -> SATLiteral(949))
-818 949 0
c (SATLiteral(819) -> SATLiteral(950))
-819 950 0
c (SATLiteral(820) -> SATLiteral(951))
-820 951 0
c (SATLiteral(821) -> SATLiteral(952))
-821 952 0
c (SATLiteral(822) -> SATLiteral(953))
-822 953 0
c (SATLiteral(823) -> SATLiteral(954))
-823 954 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c (SATLiteral(-2)=SATLiteral(191))
-2 -191 0
2 191 0
191 2 0
-191 -2 0
c (SATLiteral(199)=SATLiteral(-32))
199 32 0
-199 -32 0
-32 -199 0
32 199 0
c (SATLiteral(-62)=SATLiteral(207))
-62 -207 0
62 207 0
207 62 0
-207 -62 0
c (SATLiteral(-92)=SATLiteral(215))
-92 -215 0
92 215 0
215 92 0
-215 -92 0
c (SATLiteral(-122)=SATLiteral(223))
-122 -223 0
122 223 0
223 122 0
-223 -122 0
c (SATLiteral(-152)=SATLiteral(231))
-152 -231 0
152 231 0
231 152 0
-231 -152 0
c (SATLiteral(-7)=SATLiteral(192))
-7 -192 0
7 192 0
192 7 0
-192 -7 0
c (SATLiteral(200)=SATLiteral(-37))
200 37 0
-200 -37 0
-37 -200 0
37 200 0
c (SATLiteral(-67)=SATLiteral(208))
-67 -208 0
67 208 0
208 67 0
-208 -67 0
c (SATLiteral(-97)=SATLiteral(216))
-97 -216 0
97 216 0
216 97 0
-216 -97 0
c (SATLiteral(-127)=SATLiteral(224))
-127 -224 0
127 224 0
224 127 0
-224 -127 0
c (SATLiteral(-157)=SATLiteral(232))
-157 -232 0
157 232 0
232 157 0
-232 -157 0
c (SATLiteral(-12)=SATLiteral(193))
-12 -193 0
12 193 0
193 12 0
-193 -12 0
c (SATLiteral(201)=SATLiteral(-42))
201 42 0
-201 -42 0
-42 -201 0
42 201 0
c (SATLiteral(-72)=SATLiteral(209))
-72 -209 0
72 209 0
209 72 0
-209 -72 0
c (SATLiteral(-102)=SATLiteral(217))
-102 -217 0
102 217 0
217 102 0
-217 -102 0
c (SATLiteral(-132)=SATLiteral(225))
-132 -225 0
132 225 0
225 132 0
-225 -132 0
c (SATLiteral(-162)=SATLiteral(233))
-162 -233 0
162 233 0
233 162 0
-233 -162 0
c (SATLiteral(-17)=SATLiteral(194))
-17 -194 0
17 194 0
194 17 0
-194 -17 0
c (SATLiteral(202)=SATLiteral(-47))
202 47 0
-202 -47 0
-47 -202 0
47 202 0
c (SATLiteral(-77)=SATLiteral(210))
-77 -210 0
77 210 0
210 77 0
-210 -77 0
c (SATLiteral(-107)=SATLiteral(218))
-107 -218 0
107 218 0
218 107 0
-218 -107 0
c (SATLiteral(-137)=SATLiteral(226))
-137 -226 0
137 226 0
226 137 0
-226 -137 0
c (SATLiteral(-167)=SATLiteral(234))
-167 -234 0
167 234 0
234 167 0
-234 -167 0
c (SATLiteral(-22)=SATLiteral(195))
-22 -195 0
22 195 0
195 22 0
-195 -22 0
c (SATLiteral(203)=SATLiteral(-52))
203 52 0
-203 -52 0
-52 -203 0
52 203 0
c (SATLiteral(-82)=SATLiteral(211))
-82 -211 0
82 211 0
211 82 0
-211 -82 0
c (SATLiteral(-112)=SATLiteral(219))
-112 -219 0
112 219 0
219 112 0
-219 -112 0
c (SATLiteral(-142)=SATLiteral(227))
-142 -227 0
142 227 0
227 142 0
-227 -142 0
c (SATLiteral(-172)=SATLiteral(235))
-172 -235 0
172 235 0
235 172 0
-235 -172 0
c (SATLiteral(-27)=SATLiteral(196))
-27 -196 0
27 196 0
196 27 0
-196 -27 0
c (SATLiteral(204)=SATLiteral(-57))
204 57 0
-204 -57 0
-57 -204 0
57 204 0
c (SATLiteral(-87)=SATLiteral(212))
-87 -212 0
87 212 0
212 87 0
-212 -87 0
c (SATLiteral(-117)=SATLiteral(220))
-117 -220 0
117 220 0
220 117 0
-220 -117 0
c (SATLiteral(-147)=SATLiteral(228))
-147 -228 0
147 228 0
228 147 0
-228 -147 0
c (SATLiteral(-177)=SATLiteral(236))
-177 -236 0
177 236 0
236 177 0
-236 -177 0
c (SATLiteral(834) -> SATLiteral(955))
-834 955 0
c (SATLiteral(834) -> SATLiteral(956))
-834 956 0
c (SATLiteral(834) -> SATLiteral(957))
-834 957 0
c (SATLiteral(834) -> SATLiteral(958))
-834 958 0
c (SATLiteral(840) -> SATLiteral(959))
-840 959 0
c (SATLiteral(840) -> SATLiteral(960))
-840 960 0
c (SATLiteral(840) -> SATLiteral(961))
-840 961 0
c (SATLiteral(840) -> SATLiteral(962))
-840 962 0
c (SATLiteral(846) -> SATLiteral(963))
-846 963 0
c (SATLiteral(846) -> SATLiteral(964))
-846 964 0
c (SATLiteral(846) -> SATLiteral(965))
-846 965 0
c (SATLiteral(846) -> SATLiteral(966))
-846 966 0
c (SATLiteral(852) -> SATLiteral(967))
-852 967 0
c (SATLiteral(852) -> SATLiteral(968))
-852 968 0
c (SATLiteral(852) -> SATLiteral(969))
-852 969 0
c (SATLiteral(852) -> SATLiteral(970))
-852 970 0
c (SATLiteral(858) -> SATLiteral(971))
-858 971 0
c (SATLiteral(858) -> SATLiteral(972))
-858 972 0
c (SATLiteral(858) -> SATLiteral(973))
-858 973 0
c (SATLiteral(858) -> SATLiteral(974))
-858 974 0
c (SATLiteral(864) -> SATLiteral(975))
-864 975 0
c (SATLiteral(864) -> SATLiteral(976))
-864 976 0
c (SATLiteral(864) -> SATLiteral(977))
-864 977 0
c (SATLiteral(864) -> SATLiteral(978))
-864 978 0
c (SATLiteral(835) -> SATLiteral(979))
-835 979 0
c (SATLiteral(835) -> SATLiteral(980))
-835 980 0
c (SATLiteral(835) -> SATLiteral(981))
-835 981 0
c (SATLiteral(835) -> SATLiteral(982))
-835 982 0
c (SATLiteral(841) -> SATLiteral(983))
-841 983 0
c (SATLiteral(841) -> SATLiteral(984))
-841 984 0
c (SATLiteral(841) -> SATLiteral(985))
-841 985 0
c (SATLiteral(841) -> SATLiteral(986))
-841 986 0
c (SATLiteral(847) -> SATLiteral(987))
-847 987 0
c (SATLiteral(847) -> SATLiteral(988))
-847 988 0
c (SATLiteral(847) -> SATLiteral(989))
-847 989 0
c (SATLiteral(847) -> SATLiteral(990))
-847 990 0
c (SATLiteral(853) -> SATLiteral(991))
-853 991 0
c (SATLiteral(853) -> SATLiteral(992))
-853 992 0
c (SATLiteral(853) -> SATLiteral(993))
-853 993 0
c (SATLiteral(853) -> SATLiteral(994))
-853 994 0
c (SATLiteral(859) -> SATLiteral(995))
-859 995 0
c (SATLiteral(859) -> SATLiteral(996))
-859 996 0
c (SATLiteral(859) -> SATLiteral(997))
-859 997 0
c (SATLiteral(859) -> SATLiteral(998))
-859 998 0
c (SATLiteral(865) -> SATLiteral(999))
-865 999 0
c (SATLiteral(865) -> SATLiteral(1000))
-865 1000 0
c (SATLiteral(865) -> SATLiteral(1001))
-865 1001 0
c (SATLiteral(865) -> SATLiteral(1002))
-865 1002 0
c (SATLiteral(836) -> SATLiteral(1003))
-836 1003 0
c (SATLiteral(836) -> SATLiteral(1004))
-836 1004 0
c (SATLiteral(836) -> SATLiteral(1005))
-836 1005 0
c (SATLiteral(836) -> SATLiteral(1006))
-836 1006 0
c (SATLiteral(842) -> SATLiteral(1007))
-842 1007 0
c (SATLiteral(842) -> SATLiteral(1008))
-842 1008 0
c (SATLiteral(842) -> SATLiteral(1009))
-842 1009 0
c (SATLiteral(842) -> SATLiteral(1010))
-842 1010 0
c (SATLiteral(848) -> SATLiteral(1011))
-848 1011 0
c (SATLiteral(848) -> SATLiteral(1012))
-848 1012 0
c (SATLiteral(848) -> SATLiteral(1013))
-848 1013 0
c (SATLiteral(848) -> SATLiteral(1014))
-848 1014 0
c (SATLiteral(854) -> SATLiteral(1015))
-854 1015 0
c (SATLiteral(854) -> SATLiteral(1016))
-854 1016 0
c (SATLiteral(854) -> SATLiteral(1017))
-854 1017 0
c (SATLiteral(854) -> SATLiteral(1018))
-854 1018 0
c (SATLiteral(860) -> SATLiteral(1019))
-860 1019 0
c (SATLiteral(860) -> SATLiteral(1020))
-860 1020 0
c (SATLiteral(860) -> SATLiteral(1021))
-860 1021 0
c (SATLiteral(860) -> SATLiteral(1022))
-860 1022 0
c (SATLiteral(866) -> SATLiteral(1023))
-866 1023 0
c (SATLiteral(866) -> SATLiteral(1024))
-866 1024 0
c (SATLiteral(866) -> SATLiteral(1025))
-866 1025 0
c (SATLiteral(866) -> SATLiteral(1026))
-866 1026 0
c (SATLiteral(837) -> SATLiteral(1027))
-837 1027 0
c (SATLiteral(837) -> SATLiteral(1028))
-837 1028 0
c (SATLiteral(837) -> SATLiteral(1029))
-837 1029 0
c (SATLiteral(837) -> SATLiteral(1030))
-837 1030 0
c (SATLiteral(843) -> SATLiteral(1031))
-843 1031 0
c (SATLiteral(843) -> SATLiteral(1032))
-843 1032 0
c (SATLiteral(843) -> SATLiteral(1033))
-843 1033 0
c (SATLiteral(843) -> SATLiteral(1034))
-843 1034 0
c (SATLiteral(849) -> SATLiteral(1035))
-849 1035 0
c (SATLiteral(849) -> SATLiteral(1036))
-849 1036 0
c (SATLiteral(849) -> SATLiteral(1037))
-849 1037 0
c (SATLiteral(849) -> SATLiteral(1038))
-849 1038 0
c (SATLiteral(855) -> SATLiteral(1039))
-855 1039 0
c (SATLiteral(855) -> SATLiteral(1040))
-855 1040 0
c (SATLiteral(855) -> SATLiteral(1041))
-855 1041 0
c (SATLiteral(855) -> SATLiteral(1042))
-855 1042 0
c (SATLiteral(861) -> SATLiteral(1043))
-861 1043 0
c (SATLiteral(861) -> SATLiteral(1044))
-861 1044 0
c (SATLiteral(861) -> SATLiteral(1045))
-861 1045 0
c (SATLiteral(861) -> SATLiteral(1046))
-861 1046 0
c (SATLiteral(867) -> SATLiteral(1047))
-867 1047 0
c (SATLiteral(867) -> SATLiteral(1048))
-867 1048 0
c (SATLiteral(867) -> SATLiteral(1049))
-867 1049 0
c (SATLiteral(867) -> SATLiteral(1050))
-867 1050 0
c (SATLiteral(838) -> SATLiteral(1051))
-838 1051 0
c (SATLiteral(838) -> SATLiteral(1052))
-838 1052 0
c (SATLiteral(838) -> SATLiteral(1053))
-838 1053 0
c (SATLiteral(838) -> SATLiteral(1054))
-838 1054 0
c (SATLiteral(844) -> SATLiteral(1055))
-844 1055 0
c (SATLiteral(844) -> SATLiteral(1056))
-844 1056 0
c (SATLiteral(844) -> SATLiteral(1057))
-844 1057 0
c (SATLiteral(844) -> SATLiteral(1058))
-844 1058 0
c (SATLiteral(850) -> SATLiteral(1059))
-850 1059 0
c (SATLiteral(850) -> SATLiteral(1060))
-850 1060 0
c (SATLiteral(850) -> SATLiteral(1061))
-850 1061 0
c (SATLiteral(850) -> SATLiteral(1062))
-850 1062 0
c (SATLiteral(856) -> SATLiteral(1063))
-856 1063 0
c (SATLiteral(856) -> SATLiteral(1064))
-856 1064 0
c (SATLiteral(856) -> SATLiteral(1065))
-856 1065 0
c (SATLiteral(856) -> SATLiteral(1066))
-856 1066 0
c (SATLiteral(862) -> SATLiteral(1067))
-862 1067 0
c (SATLiteral(862) -> SATLiteral(1068))
-862 1068 0
c (SATLiteral(862) -> SATLiteral(1069))
-862 1069 0
c (SATLiteral(862) -> SATLiteral(1070))
-862 1070 0
c (SATLiteral(868) -> SATLiteral(1071))
-868 1071 0
c (SATLiteral(868) -> SATLiteral(1072))
-868 1072 0
c (SATLiteral(868) -> SATLiteral(1073))
-868 1073 0
c (SATLiteral(868) -> SATLiteral(1074))
-868 1074 0
c (SATLiteral(839) -> SATLiteral(1075))
-839 1075 0
c (SATLiteral(839) -> SATLiteral(1076))
-839 1076 0
c (SATLiteral(839) -> SATLiteral(1077))
-839 1077 0
c (SATLiteral(839) -> SATLiteral(1078))
-839 1078 0
c (SATLiteral(845) -> SATLiteral(1079))
-845 1079 0
c (SATLiteral(845) -> SATLiteral(1080))
-845 1080 0
c (SATLiteral(845) -> SATLiteral(1081))
-845 1081 0
c (SATLiteral(845) -> SATLiteral(1082))
-845 1082 0
c (SATLiteral(851) -> SATLiteral(1083))
-851 1083 0
c (SATLiteral(851) -> SATLiteral(1084))
-851 1084 0
c (SATLiteral(851) -> SATLiteral(1085))
-851 1085 0
c (SATLiteral(851) -> SATLiteral(1086))
-851 1086 0
c (SATLiteral(857) -> SATLiteral(1087))
-857 1087 0
c (SATLiteral(857) -> SATLiteral(1088))
-857 1088 0
c (SATLiteral(857) -> SATLiteral(1089))
-857 1089 0
c (SATLiteral(857) -> SATLiteral(1090))
-857 1090 0
c (SATLiteral(863) -> SATLiteral(1091))
-863 1091 0
c (SATLiteral(863) -> SATLiteral(1092))
-863 1092 0
c (SATLiteral(863) -> SATLiteral(1093))
-863 1093 0
c (SATLiteral(863) -> SATLiteral(1094))
-863 1094 0
c (SATLiteral(869) -> SATLiteral(1095))
-869 1095 0
c (SATLiteral(869) -> SATLiteral(1096))
-869 1096 0
c (SATLiteral(869) -> SATLiteral(1097))
-869 1097 0
c (SATLiteral(869) -> SATLiteral(1098))
-869 1098 0
c ((SATLiteral(191) /\ SATLiteral(192))=tv=SATLiteral(246))
246 -191 -192 0
191 -246 0
192 -246 0
c ((SATLiteral(199) /\ SATLiteral(200))=tv=SATLiteral(258))
258 -199 -200 0
199 -258 0
200 -258 0
c ((SATLiteral(207) /\ SATLiteral(208))=tv=SATLiteral(270))
270 -207 -208 0
207 -270 0
208 -270 0
c ((SATLiteral(215) /\ SATLiteral(216))=tv=SATLiteral(282))
282 -215 -216 0
215 -282 0
216 -282 0
c ((SATLiteral(223) /\ SATLiteral(224))=tv=SATLiteral(294))
294 -223 -224 0
223 -294 0
224 -294 0
c ((SATLiteral(231) /\ SATLiteral(232))=tv=SATLiteral(306))
306 -231 -232 0
231 -306 0
232 -306 0
c ((SATLiteral(192) /\ SATLiteral(193))=tv=SATLiteral(248))
248 -192 -193 0
192 -248 0
193 -248 0
c ((SATLiteral(200) /\ SATLiteral(201))=tv=SATLiteral(260))
260 -200 -201 0
200 -260 0
201 -260 0
c ((SATLiteral(208) /\ SATLiteral(209))=tv=SATLiteral(272))
272 -208 -209 0
208 -272 0
209 -272 0
c ((SATLiteral(216) /\ SATLiteral(217))=tv=SATLiteral(284))
284 -216 -217 0
216 -284 0
217 -284 0
c ((SATLiteral(224) /\ SATLiteral(225))=tv=SATLiteral(296))
296 -224 -225 0
224 -296 0
225 -296 0
c ((SATLiteral(232) /\ SATLiteral(233))=tv=SATLiteral(308))
308 -232 -233 0
232 -308 0
233 -308 0
c ((SATLiteral(193) /\ SATLiteral(194))=tv=SATLiteral(250))
250 -193 -194 0
193 -250 0
194 -250 0
c ((SATLiteral(201) /\ SATLiteral(202))=tv=SATLiteral(262))
262 -201 -202 0
201 -262 0
202 -262 0
c ((SATLiteral(209) /\ SATLiteral(210))=tv=SATLiteral(274))
274 -209 -210 0
209 -274 0
210 -274 0
c ((SATLiteral(217) /\ SATLiteral(218))=tv=SATLiteral(286))
286 -217 -218 0
217 -286 0
218 -286 0
c ((SATLiteral(225) /\ SATLiteral(226))=tv=SATLiteral(298))
298 -225 -226 0
225 -298 0
226 -298 0
c ((SATLiteral(233) /\ SATLiteral(234))=tv=SATLiteral(310))
310 -233 -234 0
233 -310 0
234 -310 0
c ((SATLiteral(194) /\ SATLiteral(195))=tv=SATLiteral(252))
252 -194 -195 0
194 -252 0
195 -252 0
c ((SATLiteral(202) /\ SATLiteral(203))=tv=SATLiteral(264))
264 -202 -203 0
202 -264 0
203 -264 0
c ((SATLiteral(210) /\ SATLiteral(211))=tv=SATLiteral(276))
276 -210 -211 0
210 -276 0
211 -276 0
c ((SATLiteral(218) /\ SATLiteral(219))=tv=SATLiteral(288))
288 -218 -219 0
218 -288 0
219 -288 0
c ((SATLiteral(226) /\ SATLiteral(227))=tv=SATLiteral(300))
300 -226 -227 0
226 -300 0
227 -300 0
c ((SATLiteral(234) /\ SATLiteral(235))=tv=SATLiteral(312))
312 -234 -235 0
234 -312 0
235 -312 0
c ((SATLiteral(195) /\ SATLiteral(196))=tv=SATLiteral(254))
254 -195 -196 0
195 -254 0
196 -254 0
c ((SATLiteral(203) /\ SATLiteral(204))=tv=SATLiteral(266))
266 -203 -204 0
203 -266 0
204 -266 0
c ((SATLiteral(211) /\ SATLiteral(212))=tv=SATLiteral(278))
278 -211 -212 0
211 -278 0
212 -278 0
c ((SATLiteral(219) /\ SATLiteral(220))=tv=SATLiteral(290))
290 -219 -220 0
219 -290 0
220 -290 0
c ((SATLiteral(227) /\ SATLiteral(228))=tv=SATLiteral(302))
302 -227 -228 0
227 -302 0
228 -302 0
c ((SATLiteral(235) /\ SATLiteral(236))=tv=SATLiteral(314))
314 -235 -236 0
235 -314 0
236 -314 0
c ((SATLiteral(196) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -196 1 0
196 1 0
-1 1 0
c ((SATLiteral(204) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -204 1 0
204 1 0
-1 1 0
c ((SATLiteral(212) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -212 1 0
212 1 0
-1 1 0
c ((SATLiteral(220) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -220 1 0
220 1 0
-1 1 0
c ((SATLiteral(228) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -228 1 0
228 1 0
-1 1 0
c ((SATLiteral(236) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -236 1 0
236 1 0
-1 1 0
c ((SATLiteral(246) /\ SATLiteral(193))=tv=SATLiteral(247))
247 -246 -193 0
246 -247 0
193 -247 0
c ((SATLiteral(201) /\ SATLiteral(258))=tv=SATLiteral(259))
259 -201 -258 0
201 -259 0
258 -259 0
c ((SATLiteral(270) /\ SATLiteral(209))=tv=SATLiteral(271))
271 -270 -209 0
270 -271 0
209 -271 0
c ((SATLiteral(282) /\ SATLiteral(217))=tv=SATLiteral(283))
283 -282 -217 0
282 -283 0
217 -283 0
c ((SATLiteral(294) /\ SATLiteral(225))=tv=SATLiteral(295))
295 -294 -225 0
294 -295 0
225 -295 0
c ((SATLiteral(233) /\ SATLiteral(306))=tv=SATLiteral(307))
307 -233 -306 0
233 -307 0
306 -307 0
c ((SATLiteral(248) /\ SATLiteral(194))=tv=SATLiteral(249))
249 -248 -194 0
248 -249 0
194 -249 0
c ((SATLiteral(202) /\ SATLiteral(260))=tv=SATLiteral(261))
261 -202 -260 0
202 -261 0
260 -261 0
c ((SATLiteral(210) /\ SATLiteral(272))=tv=SATLiteral(273))
273 -210 -272 0
210 -273 0
272 -273 0
c ((SATLiteral(284) /\ SATLiteral(218))=tv=SATLiteral(285))
285 -284 -218 0
284 -285 0
218 -285 0
c ((SATLiteral(296) /\ SATLiteral(226))=tv=SATLiteral(297))
297 -296 -226 0
296 -297 0
226 -297 0
c ((SATLiteral(308) /\ SATLiteral(234))=tv=SATLiteral(309))
309 -308 -234 0
308 -309 0
234 -309 0
c ((SATLiteral(250) /\ SATLiteral(195))=tv=SATLiteral(251))
251 -250 -195 0
250 -251 0
195 -251 0
c ((SATLiteral(203) /\ SATLiteral(262))=tv=SATLiteral(263))
263 -203 -262 0
203 -263 0
262 -263 0
c ((SATLiteral(211) /\ SATLiteral(274))=tv=SATLiteral(275))
275 -211 -274 0
211 -275 0
274 -275 0
c ((SATLiteral(286) /\ SATLiteral(219))=tv=SATLiteral(287))
287 -286 -219 0
286 -287 0
219 -287 0
c ((SATLiteral(298) /\ SATLiteral(227))=tv=SATLiteral(299))
299 -298 -227 0
298 -299 0
227 -299 0
c ((SATLiteral(310) /\ SATLiteral(235))=tv=SATLiteral(311))
311 -310 -235 0
310 -311 0
235 -311 0
c ((SATLiteral(196) /\ SATLiteral(252))=tv=SATLiteral(253))
253 -196 -252 0
196 -253 0
252 -253 0
c ((SATLiteral(204) /\ SATLiteral(264))=tv=SATLiteral(265))
265 -204 -264 0
204 -265 0
264 -265 0
c ((SATLiteral(212) /\ SATLiteral(276))=tv=SATLiteral(277))
277 -212 -276 0
212 -277 0
276 -277 0
c ((SATLiteral(220) /\ SATLiteral(288))=tv=SATLiteral(289))
289 -220 -288 0
220 -289 0
288 -289 0
c ((SATLiteral(300) /\ SATLiteral(228))=tv=SATLiteral(301))
301 -300 -228 0
300 -301 0
228 -301 0
c ((SATLiteral(312) /\ SATLiteral(236))=tv=SATLiteral(313))
313 -312 -236 0
312 -313 0
236 -313 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c ((SATLiteral(-1) /\ SATLiteral(191))=tv=SATLiteral(-1))
-1 1 -191 0
-1 1 0
191 1 0
c ((SATLiteral(-1) /\ SATLiteral(199))=tv=SATLiteral(-1))
-1 1 -199 0
-1 1 0
199 1 0
c ((SATLiteral(-1) /\ SATLiteral(207))=tv=SATLiteral(-1))
-1 1 -207 0
-1 1 0
207 1 0
c ((SATLiteral(-1) /\ SATLiteral(215))=tv=SATLiteral(-1))
-1 1 -215 0
-1 1 0
215 1 0
c ((SATLiteral(-1) /\ SATLiteral(223))=tv=SATLiteral(-1))
-1 1 -223 0
-1 1 0
223 1 0
c ((SATLiteral(-1) /\ SATLiteral(231))=tv=SATLiteral(-1))
-1 1 -231 0
-1 1 0
231 1 0
c ((SATLiteral(191) /\ SATLiteral(192))=tv=SATLiteral(392))
392 -191 -192 0
191 -392 0
192 -392 0
c ((SATLiteral(199) /\ SATLiteral(200))=tv=SATLiteral(404))
404 -199 -200 0
199 -404 0
200 -404 0
c ((SATLiteral(207) /\ SATLiteral(208))=tv=SATLiteral(416))
416 -207 -208 0
207 -416 0
208 -416 0
c ((SATLiteral(215) /\ SATLiteral(216))=tv=SATLiteral(428))
428 -215 -216 0
215 -428 0
216 -428 0
c ((SATLiteral(223) /\ SATLiteral(224))=tv=SATLiteral(440))
440 -223 -224 0
223 -440 0
224 -440 0
c ((SATLiteral(231) /\ SATLiteral(232))=tv=SATLiteral(452))
452 -231 -232 0
231 -452 0
232 -452 0
c ((SATLiteral(192) /\ SATLiteral(193))=tv=SATLiteral(394))
394 -192 -193 0
192 -394 0
193 -394 0
c ((SATLiteral(200) /\ SATLiteral(201))=tv=SATLiteral(406))
406 -200 -201 0
200 -406 0
201 -406 0
c ((SATLiteral(208) /\ SATLiteral(209))=tv=SATLiteral(418))
418 -208 -209 0
208 -418 0
209 -418 0
c ((SATLiteral(216) /\ SATLiteral(217))=tv=SATLiteral(430))
430 -216 -217 0
216 -430 0
217 -430 0
c ((SATLiteral(224) /\ SATLiteral(225))=tv=SATLiteral(442))
442 -224 -225 0
224 -442 0
225 -442 0
c ((SATLiteral(232) /\ SATLiteral(233))=tv=SATLiteral(454))
454 -232 -233 0
232 -454 0
233 -454 0
c ((SATLiteral(193) /\ SATLiteral(194))=tv=SATLiteral(396))
396 -193 -194 0
193 -396 0
194 -396 0
c ((SATLiteral(201) /\ SATLiteral(202))=tv=SATLiteral(408))
408 -201 -202 0
201 -408 0
202 -408 0
c ((SATLiteral(209) /\ SATLiteral(210))=tv=SATLiteral(420))
420 -209 -210 0
209 -420 0
210 -420 0
c ((SATLiteral(217) /\ SATLiteral(218))=tv=SATLiteral(432))
432 -217 -218 0
217 -432 0
218 -432 0
c ((SATLiteral(225) /\ SATLiteral(226))=tv=SATLiteral(444))
444 -225 -226 0
225 -444 0
226 -444 0
c ((SATLiteral(233) /\ SATLiteral(234))=tv=SATLiteral(456))
456 -233 -234 0
233 -456 0
234 -456 0
c ((SATLiteral(194) /\ SATLiteral(195))=tv=SATLiteral(398))
398 -194 -195 0
194 -398 0
195 -398 0
c ((SATLiteral(202) /\ SATLiteral(203))=tv=SATLiteral(410))
410 -202 -203 0
202 -410 0
203 -410 0
c ((SATLiteral(210) /\ SATLiteral(211))=tv=SATLiteral(422))
422 -210 -211 0
210 -422 0
211 -422 0
c ((SATLiteral(218) /\ SATLiteral(219))=tv=SATLiteral(434))
434 -218 -219 0
218 -434 0
219 -434 0
c ((SATLiteral(226) /\ SATLiteral(227))=tv=SATLiteral(446))
446 -226 -227 0
226 -446 0
227 -446 0
c ((SATLiteral(234) /\ SATLiteral(235))=tv=SATLiteral(458))
458 -234 -235 0
234 -458 0
235 -458 0
c ((SATLiteral(195) /\ SATLiteral(196))=tv=SATLiteral(400))
400 -195 -196 0
195 -400 0
196 -400 0
c ((SATLiteral(203) /\ SATLiteral(204))=tv=SATLiteral(412))
412 -203 -204 0
203 -412 0
204 -412 0
c ((SATLiteral(211) /\ SATLiteral(212))=tv=SATLiteral(424))
424 -211 -212 0
211 -424 0
212 -424 0
c ((SATLiteral(219) /\ SATLiteral(220))=tv=SATLiteral(436))
436 -219 -220 0
219 -436 0
220 -436 0
c ((SATLiteral(227) /\ SATLiteral(228))=tv=SATLiteral(448))
448 -227 -228 0
227 -448 0
228 -448 0
c ((SATLiteral(235) /\ SATLiteral(236))=tv=SATLiteral(460))
460 -235 -236 0
235 -460 0
236 -460 0
c ((SATLiteral(394) /\ SATLiteral(191))=tv=SATLiteral(395))
395 -394 -191 0
394 -395 0
191 -395 0
c ((SATLiteral(199) /\ SATLiteral(406))=tv=SATLiteral(407))
407 -199 -406 0
199 -407 0
406 -407 0
c ((SATLiteral(207) /\ SATLiteral(418))=tv=SATLiteral(419))
419 -207 -418 0
207 -419 0
418 -419 0
c ((SATLiteral(430) /\ SATLiteral(215))=tv=SATLiteral(431))
431 -430 -215 0
430 -431 0
215 -431 0
c ((SATLiteral(442) /\ SATLiteral(223))=tv=SATLiteral(443))
443 -442 -223 0
442 -443 0
223 -443 0
c ((SATLiteral(454) /\ SATLiteral(231))=tv=SATLiteral(455))
455 -454 -231 0
454 -455 0
231 -455 0
c ((SATLiteral(396) /\ SATLiteral(192))=tv=SATLiteral(397))
397 -396 -192 0
396 -397 0
192 -397 0
c ((SATLiteral(200) /\ SATLiteral(408))=tv=SATLiteral(409))
409 -200 -408 0
200 -409 0
408 -409 0
c ((SATLiteral(208) /\ SATLiteral(420))=tv=SATLiteral(421))
421 -208 -420 0
208 -421 0
420 -421 0
c ((SATLiteral(216) /\ SATLiteral(432))=tv=SATLiteral(433))
433 -216 -432 0
216 -433 0
432 -433 0
c ((SATLiteral(444) /\ SATLiteral(224))=tv=SATLiteral(445))
445 -444 -224 0
444 -445 0
224 -445 0
c ((SATLiteral(456) /\ SATLiteral(232))=tv=SATLiteral(457))
457 -456 -232 0
456 -457 0
232 -457 0
c ((SATLiteral(193) /\ SATLiteral(398))=tv=SATLiteral(399))
399 -193 -398 0
193 -399 0
398 -399 0
c ((SATLiteral(201) /\ SATLiteral(410))=tv=SATLiteral(411))
411 -201 -410 0
201 -411 0
410 -411 0
c ((SATLiteral(209) /\ SATLiteral(422))=tv=SATLiteral(423))
423 -209 -422 0
209 -423 0
422 -423 0
c ((SATLiteral(217) /\ SATLiteral(434))=tv=SATLiteral(435))
435 -217 -434 0
217 -435 0
434 -435 0
c ((SATLiteral(446) /\ SATLiteral(225))=tv=SATLiteral(447))
447 -446 -225 0
446 -447 0
225 -447 0
c ((SATLiteral(458) /\ SATLiteral(233))=tv=SATLiteral(459))
459 -458 -233 0
458 -459 0
233 -459 0
c ((SATLiteral(400) /\ SATLiteral(194))=tv=SATLiteral(401))
401 -400 -194 0
400 -401 0
194 -401 0
c ((SATLiteral(412) /\ SATLiteral(202))=tv=SATLiteral(413))
413 -412 -202 0
412 -413 0
202 -413 0
c ((SATLiteral(424) /\ SATLiteral(210))=tv=SATLiteral(425))
425 -424 -210 0
424 -425 0
210 -425 0
c ((SATLiteral(218) /\ SATLiteral(436))=tv=SATLiteral(437))
437 -218 -436 0
218 -437 0
436 -437 0
c ((SATLiteral(226) /\ SATLiteral(448))=tv=SATLiteral(449))
449 -226 -448 0
226 -449 0
448 -449 0
c ((SATLiteral(460) /\ SATLiteral(234))=tv=SATLiteral(461))
461 -460 -234 0
460 -461 0
234 -461 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c ((SATLiteral(199) /\ SATLiteral(191))=tv=SATLiteral(318))
318 -199 -191 0
199 -318 0
191 -318 0
c ((SATLiteral(199) /\ SATLiteral(207))=tv=SATLiteral(330))
330 -199 -207 0
199 -330 0
207 -330 0
c ((SATLiteral(207) /\ SATLiteral(215))=tv=SATLiteral(342))
342 -207 -215 0
207 -342 0
215 -342 0
c ((SATLiteral(215) /\ SATLiteral(223))=tv=SATLiteral(354))
354 -215 -223 0
215 -354 0
223 -354 0
c ((SATLiteral(223) /\ SATLiteral(231))=tv=SATLiteral(366))
366 -223 -231 0
223 -366 0
231 -366 0
c ((SATLiteral(-1) /\ SATLiteral(231))=tv=SATLiteral(-1))
-1 1 -231 0
-1 1 0
231 1 0
c ((SATLiteral(200) /\ SATLiteral(192))=tv=SATLiteral(320))
320 -200 -192 0
200 -320 0
192 -320 0
c ((SATLiteral(200) /\ SATLiteral(208))=tv=SATLiteral(332))
332 -200 -208 0
200 -332 0
208 -332 0
c ((SATLiteral(208) /\ SATLiteral(216))=tv=SATLiteral(344))
344 -208 -216 0
208 -344 0
216 -344 0
c ((SATLiteral(216) /\ SATLiteral(224))=tv=SATLiteral(356))
356 -216 -224 0
216 -356 0
224 -356 0
c ((SATLiteral(224) /\ SATLiteral(232))=tv=SATLiteral(368))
368 -224 -232 0
224 -368 0
232 -368 0
c ((SATLiteral(-1) /\ SATLiteral(232))=tv=SATLiteral(-1))
-1 1 -232 0
-1 1 0
232 1 0
c ((SATLiteral(201) /\ SATLiteral(193))=tv=SATLiteral(322))
322 -201 -193 0
201 -322 0
193 -322 0
c ((SATLiteral(201) /\ SATLiteral(209))=tv=SATLiteral(334))
334 -201 -209 0
201 -334 0
209 -334 0
c ((SATLiteral(209) /\ SATLiteral(217))=tv=SATLiteral(346))
346 -209 -217 0
209 -346 0
217 -346 0
c ((SATLiteral(217) /\ SATLiteral(225))=tv=SATLiteral(358))
358 -217 -225 0
217 -358 0
225 -358 0
c ((SATLiteral(225) /\ SATLiteral(233))=tv=SATLiteral(370))
370 -225 -233 0
225 -370 0
233 -370 0
c ((SATLiteral(-1) /\ SATLiteral(233))=tv=SATLiteral(-1))
-1 1 -233 0
-1 1 0
233 1 0
c ((SATLiteral(202) /\ SATLiteral(194))=tv=SATLiteral(324))
324 -202 -194 0
202 -324 0
194 -324 0
c ((SATLiteral(202) /\ SATLiteral(210))=tv=SATLiteral(336))
336 -202 -210 0
202 -336 0
210 -336 0
c ((SATLiteral(210) /\ SATLiteral(218))=tv=SATLiteral(348))
348 -210 -218 0
210 -348 0
218 -348 0
c ((SATLiteral(218) /\ SATLiteral(226))=tv=SATLiteral(360))
360 -218 -226 0
218 -360 0
226 -360 0
c ((SATLiteral(226) /\ SATLiteral(234))=tv=SATLiteral(372))
372 -226 -234 0
226 -372 0
234 -372 0
c ((SATLiteral(-1) /\ SATLiteral(234))=tv=SATLiteral(-1))
-1 1 -234 0
-1 1 0
234 1 0
c ((SATLiteral(203) /\ SATLiteral(195))=tv=SATLiteral(326))
326 -203 -195 0
203 -326 0
195 -326 0
c ((SATLiteral(203) /\ SATLiteral(211))=tv=SATLiteral(338))
338 -203 -211 0
203 -338 0
211 -338 0
c ((SATLiteral(211) /\ SATLiteral(219))=tv=SATLiteral(350))
350 -211 -219 0
211 -350 0
219 -350 0
c ((SATLiteral(219) /\ SATLiteral(227))=tv=SATLiteral(362))
362 -219 -227 0
219 -362 0
227 -362 0
c ((SATLiteral(227) /\ SATLiteral(235))=tv=SATLiteral(374))
374 -227 -235 0
227 -374 0
235 -374 0
c ((SATLiteral(-1) /\ SATLiteral(235))=tv=SATLiteral(-1))
-1 1 -235 0
-1 1 0
235 1 0
c ((SATLiteral(204) /\ SATLiteral(196))=tv=SATLiteral(328))
328 -204 -196 0
204 -328 0
196 -328 0
c ((SATLiteral(204) /\ SATLiteral(212))=tv=SATLiteral(340))
340 -204 -212 0
204 -340 0
212 -340 0
c ((SATLiteral(212) /\ SATLiteral(220))=tv=SATLiteral(352))
352 -212 -220 0
212 -352 0
220 -352 0
c ((SATLiteral(220) /\ SATLiteral(228))=tv=SATLiteral(364))
364 -220 -228 0
220 -364 0
228 -364 0
c ((SATLiteral(228) /\ SATLiteral(236))=tv=SATLiteral(376))
376 -228 -236 0
228 -376 0
236 -376 0
c ((SATLiteral(-1) /\ SATLiteral(236))=tv=SATLiteral(-1))
-1 1 -236 0
-1 1 0
236 1 0
c ((SATLiteral(207) /\ SATLiteral(318))=tv=SATLiteral(319))
319 -207 -318 0
207 -319 0
318 -319 0
c ((SATLiteral(215) /\ SATLiteral(330))=tv=SATLiteral(331))
331 -215 -330 0
215 -331 0
330 -331 0
c ((SATLiteral(223) /\ SATLiteral(342))=tv=SATLiteral(343))
343 -223 -342 0
223 -343 0
342 -343 0
c ((SATLiteral(354) /\ SATLiteral(231))=tv=SATLiteral(355))
355 -354 -231 0
354 -355 0
231 -355 0
c ((SATLiteral(320) /\ SATLiteral(208))=tv=SATLiteral(321))
321 -320 -208 0
320 -321 0
208 -321 0
c ((SATLiteral(332) /\ SATLiteral(216))=tv=SATLiteral(333))
333 -332 -216 0
332 -333 0
216 -333 0
c ((SATLiteral(224) /\ SATLiteral(344))=tv=SATLiteral(345))
345 -224 -344 0
224 -345 0
344 -345 0
c ((SATLiteral(232) /\ SATLiteral(356))=tv=SATLiteral(357))
357 -232 -356 0
232 -357 0
356 -357 0
c ((SATLiteral(209) /\ SATLiteral(322))=tv=SATLiteral(323))
323 -209 -322 0
209 -323 0
322 -323 0
c ((SATLiteral(334) /\ SATLiteral(217))=tv=SATLiteral(335))
335 -334 -217 0
334 -335 0
217 -335 0
c ((SATLiteral(346) /\ SATLiteral(225))=tv=SATLiteral(347))
347 -346 -225 0
346 -347 0
225 -347 0
c ((SATLiteral(358) /\ SATLiteral(233))=tv=SATLiteral(359))
359 -358 -233 0
358 -359 0
233 -359 0
c ((SATLiteral(210) /\ SATLiteral(324))=tv=SATLiteral(325))
325 -210 -324 0
210 -325 0
324 -325 0
c ((SATLiteral(336) /\ SATLiteral(218))=tv=SATLiteral(337))
337 -336 -218 0
336 -337 0
218 -337 0
c ((SATLiteral(348) /\ SATLiteral(226))=tv=SATLiteral(349))
349 -348 -226 0
348 -349 0
226 -349 0
c ((SATLiteral(360) /\ SATLiteral(234))=tv=SATLiteral(361))
361 -360 -234 0
360 -361 0
234 -361 0
c ((SATLiteral(211) /\ SATLiteral(326))=tv=SATLiteral(327))
327 -211 -326 0
211 -327 0
326 -327 0
c ((SATLiteral(219) /\ SATLiteral(338))=tv=SATLiteral(339))
339 -219 -338 0
219 -339 0
338 -339 0
c ((SATLiteral(350) /\ SATLiteral(227))=tv=SATLiteral(351))
351 -350 -227 0
350 -351 0
227 -351 0
c ((SATLiteral(362) /\ SATLiteral(235))=tv=SATLiteral(363))
363 -362 -235 0
362 -363 0
235 -363 0
c ((SATLiteral(212) /\ SATLiteral(328))=tv=SATLiteral(329))
329 -212 -328 0
212 -329 0
328 -329 0
c ((SATLiteral(220) /\ SATLiteral(340))=tv=SATLiteral(341))
341 -220 -340 0
220 -341 0
340 -341 0
c ((SATLiteral(228) /\ SATLiteral(352))=tv=SATLiteral(353))
353 -228 -352 0
228 -353 0
352 -353 0
c ((SATLiteral(364) /\ SATLiteral(236))=tv=SATLiteral(365))
365 -364 -236 0
364 -365 0
236 -365 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c ((SATLiteral(-1) /\ SATLiteral(191))=tv=SATLiteral(-1))
-1 1 -191 0
-1 1 0
191 1 0
c ((SATLiteral(199) /\ SATLiteral(191))=tv=SATLiteral(474))
474 -199 -191 0
199 -474 0
191 -474 0
c ((SATLiteral(199) /\ SATLiteral(207))=tv=SATLiteral(486))
486 -199 -207 0
199 -486 0
207 -486 0
c ((SATLiteral(207) /\ SATLiteral(215))=tv=SATLiteral(498))
498 -207 -215 0
207 -498 0
215 -498 0
c ((SATLiteral(215) /\ SATLiteral(223))=tv=SATLiteral(510))
510 -215 -223 0
215 -510 0
223 -510 0
c ((SATLiteral(223) /\ SATLiteral(231))=tv=SATLiteral(522))
522 -223 -231 0
223 -522 0
231 -522 0
c ((SATLiteral(-1) /\ SATLiteral(192))=tv=SATLiteral(-1))
-1 1 -192 0
-1 1 0
192 1 0
c ((SATLiteral(200) /\ SATLiteral(192))=tv=SATLiteral(476))
476 -200 -192 0
200 -476 0
192 -476 0
c ((SATLiteral(200) /\ SATLiteral(208))=tv=SATLiteral(488))
488 -200 -208 0
200 -488 0
208 -488 0
c ((SATLiteral(208) /\ SATLiteral(216))=tv=SATLiteral(500))
500 -208 -216 0
208 -500 0
216 -500 0
c ((SATLiteral(216) /\ SATLiteral(224))=tv=SATLiteral(512))
512 -216 -224 0
216 -512 0
224 -512 0
c ((SATLiteral(224) /\ SATLiteral(232))=tv=SATLiteral(524))
524 -224 -232 0
224 -524 0
232 -524 0
c ((SATLiteral(-1) /\ SATLiteral(193))=tv=SATLiteral(-1))
-1 1 -193 0
-1 1 0
193 1 0
c ((SATLiteral(201) /\ SATLiteral(193))=tv=SATLiteral(478))
478 -201 -193 0
201 -478 0
193 -478 0
c ((SATLiteral(201) /\ SATLiteral(209))=tv=SATLiteral(490))
490 -201 -209 0
201 -490 0
209 -490 0
c ((SATLiteral(209) /\ SATLiteral(217))=tv=SATLiteral(502))
502 -209 -217 0
209 -502 0
217 -502 0
c ((SATLiteral(217) /\ SATLiteral(225))=tv=SATLiteral(514))
514 -217 -225 0
217 -514 0
225 -514 0
c ((SATLiteral(225) /\ SATLiteral(233))=tv=SATLiteral(526))
526 -225 -233 0
225 -526 0
233 -526 0
c ((SATLiteral(-1) /\ SATLiteral(194))=tv=SATLiteral(-1))
-1 1 -194 0
-1 1 0
194 1 0
c ((SATLiteral(202) /\ SATLiteral(194))=tv=SATLiteral(480))
480 -202 -194 0
202 -480 0
194 -480 0
c ((SATLiteral(202) /\ SATLiteral(210))=tv=SATLiteral(492))
492 -202 -210 0
202 -492 0
210 -492 0
c ((SATLiteral(210) /\ SATLiteral(218))=tv=SATLiteral(504))
504 -210 -218 0
210 -504 0
218 -504 0
c ((SATLiteral(218) /\ SATLiteral(226))=tv=SATLiteral(516))
516 -218 -226 0
218 -516 0
226 -516 0
c ((SATLiteral(226) /\ SATLiteral(234))=tv=SATLiteral(528))
528 -226 -234 0
226 -528 0
234 -528 0
c ((SATLiteral(-1) /\ SATLiteral(195))=tv=SATLiteral(-1))
-1 1 -195 0
-1 1 0
195 1 0
c ((SATLiteral(203) /\ SATLiteral(195))=tv=SATLiteral(482))
482 -203 -195 0
203 -482 0
195 -482 0
c ((SATLiteral(203) /\ SATLiteral(211))=tv=SATLiteral(494))
494 -203 -211 0
203 -494 0
211 -494 0
c ((SATLiteral(211) /\ SATLiteral(219))=tv=SATLiteral(506))
506 -211 -219 0
211 -506 0
219 -506 0
c ((SATLiteral(219) /\ SATLiteral(227))=tv=SATLiteral(518))
518 -219 -227 0
219 -518 0
227 -518 0
c ((SATLiteral(227) /\ SATLiteral(235))=tv=SATLiteral(530))
530 -227 -235 0
227 -530 0
235 -530 0
c ((SATLiteral(-1) /\ SATLiteral(196))=tv=SATLiteral(-1))
-1 1 -196 0
-1 1 0
196 1 0
c ((SATLiteral(204) /\ SATLiteral(196))=tv=SATLiteral(484))
484 -204 -196 0
204 -484 0
196 -484 0
c ((SATLiteral(204) /\ SATLiteral(212))=tv=SATLiteral(496))
496 -204 -212 0
204 -496 0
212 -496 0
c ((SATLiteral(212) /\ SATLiteral(220))=tv=SATLiteral(508))
508 -212 -220 0
212 -508 0
220 -508 0
c ((SATLiteral(220) /\ SATLiteral(228))=tv=SATLiteral(520))
520 -220 -228 0
220 -520 0
228 -520 0
c ((SATLiteral(228) /\ SATLiteral(236))=tv=SATLiteral(532))
532 -228 -236 0
228 -532 0
236 -532 0
c ((SATLiteral(486) /\ SATLiteral(191))=tv=SATLiteral(487))
487 -486 -191 0
486 -487 0
191 -487 0
c ((SATLiteral(199) /\ SATLiteral(498))=tv=SATLiteral(499))
499 -199 -498 0
199 -499 0
498 -499 0
c ((SATLiteral(207) /\ SATLiteral(510))=tv=SATLiteral(511))
511 -207 -510 0
207 -511 0
510 -511 0
c ((SATLiteral(215) /\ SATLiteral(522))=tv=SATLiteral(523))
523 -215 -522 0
215 -523 0
522 -523 0
c ((SATLiteral(192) /\ SATLiteral(488))=tv=SATLiteral(489))
489 -192 -488 0
192 -489 0
488 -489 0
c ((SATLiteral(200) /\ SATLiteral(500))=tv=SATLiteral(501))
501 -200 -500 0
200 -501 0
500 -501 0
c ((SATLiteral(208) /\ SATLiteral(512))=tv=SATLiteral(513))
513 -208 -512 0
208 -513 0
512 -513 0
c ((SATLiteral(216) /\ SATLiteral(524))=tv=SATLiteral(525))
525 -216 -524 0
216 -525 0
524 -525 0
c ((SATLiteral(490) /\ SATLiteral(193))=tv=SATLiteral(491))
491 -490 -193 0
490 -491 0
193 -491 0
c ((SATLiteral(502) /\ SATLiteral(201))=tv=SATLiteral(503))
503 -502 -201 0
502 -503 0
201 -503 0
c ((SATLiteral(209) /\ SATLiteral(514))=tv=SATLiteral(515))
515 -209 -514 0
209 -515 0
514 -515 0
c ((SATLiteral(217) /\ SATLiteral(526))=tv=SATLiteral(527))
527 -217 -526 0
217 -527 0
526 -527 0
c ((SATLiteral(492) /\ SATLiteral(194))=tv=SATLiteral(493))
493 -492 -194 0
492 -493 0
194 -493 0
c ((SATLiteral(202) /\ SATLiteral(504))=tv=SATLiteral(505))
505 -202 -504 0
202 -505 0
504 -505 0
c ((SATLiteral(516) /\ SATLiteral(210))=tv=SATLiteral(517))
517 -516 -210 0
516 -517 0
210 -517 0
c ((SATLiteral(528) /\ SATLiteral(218))=tv=SATLiteral(529))
529 -528 -218 0
528 -529 0
218 -529 0
c ((SATLiteral(494) /\ SATLiteral(195))=tv=SATLiteral(495))
495 -494 -195 0
494 -495 0
195 -495 0
c ((SATLiteral(203) /\ SATLiteral(506))=tv=SATLiteral(507))
507 -203 -506 0
203 -507 0
506 -507 0
c ((SATLiteral(211) /\ SATLiteral(518))=tv=SATLiteral(519))
519 -211 -518 0
211 -519 0
518 -519 0
c ((SATLiteral(530) /\ SATLiteral(219))=tv=SATLiteral(531))
531 -530 -219 0
530 -531 0
219 -531 0
c ((SATLiteral(496) /\ SATLiteral(196))=tv=SATLiteral(497))
497 -496 -196 0
496 -497 0
196 -497 0
c ((SATLiteral(204) /\ SATLiteral(508))=tv=SATLiteral(509))
509 -204 -508 0
204 -509 0
508 -509 0
c ((SATLiteral(212) /\ SATLiteral(520))=tv=SATLiteral(521))
521 -212 -520 0
212 -521 0
520 -521 0
c ((SATLiteral(220) /\ SATLiteral(532))=tv=SATLiteral(533))
533 -220 -532 0
220 -533 0
532 -533 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c (SATLiteral(906) -> SATLiteral(1100))
-906 1100 0
c (SATLiteral(912) -> SATLiteral(1102))
-912 1102 0
c (SATLiteral(918) -> SATLiteral(1104))
-918 1104 0
c (SATLiteral(924) -> SATLiteral(1106))
-924 1106 0
c (SATLiteral(930) -> SATLiteral(1108))
-930 1108 0
c (SATLiteral(936) -> SATLiteral(1110))
-936 1110 0
c (SATLiteral(907) -> SATLiteral(1112))
-907 1112 0
c (SATLiteral(913) -> SATLiteral(1114))
-913 1114 0
c (SATLiteral(919) -> SATLiteral(1116))
-919 1116 0
c (SATLiteral(925) -> SATLiteral(1118))
-925 1118 0
c (SATLiteral(931) -> SATLiteral(1120))
-931 1120 0
c (SATLiteral(937) -> SATLiteral(1122))
-937 1122 0
c (SATLiteral(908) -> SATLiteral(1124))
-908 1124 0
c (SATLiteral(914) -> SATLiteral(1126))
-914 1126 0
c (SATLiteral(920) -> SATLiteral(1128))
-920 1128 0
c (SATLiteral(926) -> SATLiteral(1130))
-926 1130 0
c (SATLiteral(932) -> SATLiteral(1132))
-932 1132 0
c (SATLiteral(938) -> SATLiteral(1134))
-938 1134 0
c (SATLiteral(909) -> SATLiteral(1136))
-909 1136 0
c (SATLiteral(915) -> SATLiteral(1138))
-915 1138 0
c (SATLiteral(921) -> SATLiteral(1140))
-921 1140 0
c (SATLiteral(927) -> SATLiteral(1142))
-927 1142 0
c (SATLiteral(933) -> SATLiteral(1144))
-933 1144 0
c (SATLiteral(939) -> SATLiteral(1146))
-939 1146 0
c (SATLiteral(910) -> SATLiteral(1148))
-910 1148 0
c (SATLiteral(916) -> SATLiteral(1150))
-916 1150 0
c (SATLiteral(922) -> SATLiteral(1152))
-922 1152 0
c (SATLiteral(928) -> SATLiteral(1154))
-928 1154 0
c (SATLiteral(934) -> SATLiteral(1156))
-934 1156 0
c (SATLiteral(940) -> SATLiteral(1158))
-940 1158 0
c (SATLiteral(911) -> SATLiteral(1160))
-911 1160 0
c (SATLiteral(917) -> SATLiteral(1162))
-917 1162 0
c (SATLiteral(923) -> SATLiteral(1164))
-923 1164 0
c (SATLiteral(929) -> SATLiteral(1166))
-929 1166 0
c (SATLiteral(935) -> SATLiteral(1168))
-935 1168 0
c (SATLiteral(941) -> SATLiteral(1170))
-941 1170 0
c ((aux230 - aux231 - shift(num_occupied_by_types_00002, -36))<=0)
-745 -1242 0
-743 -1243 0
-741 -1245 0
-739 -1247 0
-737 -1249 0
-735 -1251 0
-733 -1253 0
-731 -1255 0
-729 -1257 0
-727 -1259 0
-725 -1261 0
-723 -1263 0
-721 -1265 0
-719 -1267 0
-717 -1269 0
-715 -1271 0
-713 -1273 0
-711 -1275 0
-709 -1277 0
-707 -1279 0
-705 -1281 0
-703 -1283 0
-701 -1285 0
-699 -1287 0
-697 -1289 0
-695 -1291 0
-693 -1293 0
-691 -1295 0
-689 -1297 0
-687 -1299 0
-685 -1301 0
-683 -1303 0
-681 -1305 0
-679 -1307 0
-677 -1309 0
-676 -1311 0
1171 -1242 0
1171 -745 -1243 0
1171 -743 -1245 0
1171 -741 -1247 0
1171 -739 -1249 0
1171 -737 -1251 0
1171 -735 -1253 0
1171 -733 -1255 0
1171 -731 -1257 0
1171 -729 -1259 0
1171 -727 -1261 0
1171 -725 -1263 0
1171 -723 -1265 0
1171 -721 -1267 0
1171 -719 -1269 0
1171 -717 -1271 0
1171 -715 -1273 0
1171 -713 -1275 0
1171 -711 -1277 0
1171 -709 -1279 0
1171 -707 -1281 0
1171 -705 -1283 0
1171 -703 -1285 0
1171 -701 -1287 0
1171 -699 -1289 0
1171 -697 -1291 0
1171 -695 -1293 0
1171 -693 -1295 0
1171 -691 -1297 0
1171 -689 -1299 0
1171 -687 -1301 0
1171 -685 -1303 0
1171 -683 -1305 0
1171 -681 -1307 0
1171 -679 -1309 0
1171 -677 -1311 0
1171 -676 -1313 0
1172 -1243 0
1172 -745 -1245 0
1172 -743 -1247 0
1172 -741 -1249 0
1172 -739 -1251 0
1172 -737 -1253 0
1172 -735 -1255 0
1172 -733 -1257 0
1172 -731 -1259 0
1172 -729 -1261 0
1172 -727 -1263 0
1172 -725 -1265 0
1172 -723 -1267 0
1172 -721 -1269 0
1172 -719 -1271 0
1172 -717 -1273 0
1172 -715 -1275 0
1172 -713 -1277 0
1172 -711 -1279 0
1172 -709 -1281 0
1172 -707 -1283 0
1172 -705 -1285 0
1172 -703 -1287 0
1172 -701 -1289 0
1172 -699 -1291 0
1172 -697 -1293 0
1172 -695 -1295 0
1172 -693 -1297 0
1172 -691 -1299 0
1172 -689 -1301 0
1172 -687 -1303 0
1172 -685 -1305 0
1172 -683 -1307 0
1172 -681 -1309 0
1172 -679 -1311 0
1172 -677 -1313 0
1172 -676 -1315 0
1174 -1245 0
1174 -745 -1247 0
1174 -743 -1249 0
1174 -741 -1251 0
1174 -739 -1253 0
1174 -737 -1255 0
1174 -735 -1257 0
1174 -733 -1259 0
1174 -731 -1261 0
1174 -729 -1263 0
1174 -727 -1265 0
1174 -725 -1267 0
1174 -723 -1269 0
1174 -721 -1271 0
1174 -719 -1273 0
1174 -717 -1275 0
1174 -715 -1277 0
1174 -713 -1279 0
1174 -711 -1281 0
1174 -709 -1283 0
1174 -707 -1285 0
1174 -705 -1287 0
1174 -703 -1289 0
1174 -701 -1291 0
1174 -699 -1293 0
1174 -697 -1295 0
1174 -695 -1297 0
1174 -693 -1299 0
1174 -691 -1301 0
1174 -689 -1303 0
1174 -687 -1305 0
1174 -685 -1307 0
1174 -683 -1309 0
1174 -681 -1311 0
1174 -679 -1313 0
1174 -677 -1315 0
1174 -676 -1317 0
1176 -1247 0
1176 -745 -1249 0
1176 -743 -1251 0
1176 -741 -1253 0
1176 -739 -1255 0
1176 -737 -1257 0
1176 -735 -1259 0
1176 -733 -1261 0
1176 -731 -1263 0
1176 -729 -1265 0
1176 -727 -1267 0
1176 -725 -1269 0
1176 -723 -1271 0
1176 -721 -1273 0
1176 -719 -1275 0
1176 -717 -1277 0
1176 -715 -1279 0
1176 -713 -1281 0
1176 -711 -1283 0
1176 -709 -1285 0
1176 -707 -1287 0
1176 -705 -1289 0
1176 -703 -1291 0
1176 -701 -1293 0
1176 -699 -1295 0
1176 -697 -1297 0
1176 -695 -1299 0
1176 -693 -1301 0
1176 -691 -1303 0
1176 -689 -1305 0
1176 -687 -1307 0
1176 -685 -1309 0
1176 -683 -1311 0
1176 -681 -1313 0
1176 -679 -1315 0
1176 -677 -1317 0
1176 -676 -1319 0
1178 -1249 0
1178 -745 -1251 0
1178 -743 -1253 0
1178 -741 -1255 0
1178 -739 -1257 0
1178 -737 -1259 0
1178 -735 -1261 0
1178 -733 -1263 0
1178 -731 -1265 0
1178 -729 -1267 0
1178 -727 -1269 0
1178 -725 -1271 0
1178 -723 -1273 0
1178 -721 -1275 0
1178 -719 -1277 0
1178 -717 -1279 0
1178 -715 -1281 0
1178 -713 -1283 0
1178 -711 -1285 0
1178 -709 -1287 0
1178 -707 -1289 0
1178 -705 -1291 0
1178 -703 -1293 0
1178 -701 -1295 0
1178 -699 -1297 0
1178 -697 -1299 0
1178 -695 -1301 0
1178 -693 -1303 0
1178 -691 -1305 0
1178 -689 -1307 0
1178 -687 -1309 0
1178 -685 -1311 0
1178 -683 -1313 0
1178 -681 -1315 0
1178 -679 -1317 0
1178 -677 -1319 0
1178 -676 -1321 0
1180 -1251 0
1180 -745 -1253 0
1180 -743 -1255 0
1180 -741 -1257 0
1180 -739 -1259 0
1180 -737 -1261 0
1180 -735 -1263 0
1180 -733 -1265 0
1180 -731 -1267 0
1180 -729 -1269 0
1180 -727 -1271 0
1180 -725 -1273 0
1180 -723 -1275 0
1180 -721 -1277 0
1180 -719 -1279 0
1180 -717 -1281 0
1180 -715 -1283 0
1180 -713 -1285 0
1180 -711 -1287 0
1180 -709 -1289 0
1180 -707 -1291 0
1180 -705 -1293 0
1180 -703 -1295 0
1180 -701 -1297 0
1180 -699 -1299 0
1180 -697 -1301 0
1180 -695 -1303 0
1180 -693 -1305 0
1180 -691 -1307 0
1180 -689 -1309 0
1180 -687 -1311 0
1180 -685 -1313 0
1180 -683 -1315 0
1180 -681 -1317 0
1180 -679 -1319 0
1180 -677 -1321 0
1180 -676 -1323 0
1182 -1253 0
1182 -745 -1255 0
1182 -743 -1257 0
1182 -741 -1259 0
1182 -739 -1261 0
1182 -737 -1263 0
1182 -735 -1265 0
1182 -733 -1267 0
1182 -731 -1269 0
1182 -729 -1271 0
1182 -727 -1273 0
1182 -725 -1275 0
1182 -723 -1277 0
1182 -721 -1279 0
1182 -719 -1281 0
1182 -717 -1283 0
1182 -715 -1285 0
1182 -713 -1287 0
1182 -711 -1289 0
1182 -709 -1291 0
1182 -707 -1293 0
1182 -705 -1295 0
1182 -703 -1297 0
1182 -701 -1299 0
1182 -699 -1301 0
1182 -697 -1303 0
1182 -695 -1305 0
1182 -693 -1307 0
1182 -691 -1309 0
1182 -689 -1311 0
1182 -687 -1313 0
1182 -685 -1315 0
1182 -683 -1317 0
1182 -681 -1319 0
1182 -679 -1321 0
1182 -677 -1323 0
1182 -676 -1325 0
1184 -1255 0
1184 -745 -1257 0
1184 -743 -1259 0
1184 -741 -1261 0
1184 -739 -1263 0
1184 -737 -1265 0
1184 -735 -1267 0
1184 -733 -1269 0
1184 -731 -1271 0
1184 -729 -1273 0
1184 -727 -1275 0
1184 -725 -1277 0
1184 -723 -1279 0
1184 -721 -1281 0
1184 -719 -1283 0
1184 -717 -1285 0
1184 -715 -1287 0
1184 -713 -1289 0
1184 -711 -1291 0
1184 -709 -1293 0
1184 -707 -1295 0
1184 -705 -1297 0
1184 -703 -1299 0
1184 -701 -1301 0
1184 -699 -1303 0
1184 -697 -1305 0
1184 -695 -1307 0
1184 -693 -1309 0
1184 -691 -1311 0
1184 -689 -1313 0
1184 -687 -1315 0
1184 -685 -1317 0
1184 -683 -1319 0
1184 -681 -1321 0
1184 -679 -1323 0
1184 -677 -1325 0
1184 -676 -1327 0
1186 -1257 0
1186 -745 -1259 0
1186 -743 -1261 0
1186 -741 -1263 0
1186 -739 -1265 0
1186 -737 -1267 0
1186 -735 -1269 0
1186 -733 -1271 0
1186 -731 -1273 0
1186 -729 -1275 0
1186 -727 -1277 0
1186 -725 -1279 0
1186 -723 -1281 0
1186 -721 -1283 0
1186 -719 -1285 0
1186 -717 -1287 0
1186 -715 -1289 0
1186 -713 -1291 0
1186 -711 -1293 0
1186 -709 -1295 0
1186 -707 -1297 0
1186 -705 -1299 0
1186 -703 -1301 0
1186 -701 -1303 0
1186 -699 -1305 0
1186 -697 -1307 0
1186 -695 -1309 0
1186 -693 -1311 0
1186 -691 -1313 0
1186 -689 -1315 0
1186 -687 -1317 0
1186 -685 -1319 0
1186 -683 -1321 0
1186 -681 -1323 0
1186 -679 -1325 0
1186 -677 -1327 0
1186 -676 -1329 0
1188 -1259 0
1188 -745 -1261 0
1188 -743 -1263 0
1188 -741 -1265 0
1188 -739 -1267 0
1188 -737 -1269 0
1188 -735 -1271 0
1188 -733 -1273 0
1188 -731 -1275 0
1188 -729 -1277 0
1188 -727 -1279 0
1188 -725 -1281 0
1188 -723 -1283 0
1188 -721 -1285 0
1188 -719 -1287 0
1188 -717 -1289 0
1188 -715 -1291 0
1188 -713 -1293 0
1188 -711 -1295 0
1188 -709 -1297 0
1188 -707 -1299 0
1188 -705 -1301 0
1188 -703 -1303 0
1188 -701 -1305 0
1188 -699 -1307 0
1188 -697 -1309 0
1188 -695 -1311 0
1188 -693 -1313 0
1188 -691 -1315 0
1188 -689 -1317 0
1188 -687 -1319 0
1188 -685 -1321 0
1188 -683 -1323 0
1188 -681 -1325 0
1188 -679 -1327 0
1188 -677 -1329 0
1188 -676 -1331 0
1190 -1261 0
1190 -745 -1263 0
1190 -743 -1265 0
1190 -741 -1267 0
1190 -739 -1269 0
1190 -737 -1271 0
1190 -735 -1273 0
1190 -733 -1275 0
1190 -731 -1277 0
1190 -729 -1279 0
1190 -727 -1281 0
1190 -725 -1283 0
1190 -723 -1285 0
1190 -721 -1287 0
1190 -719 -1289 0
1190 -717 -1291 0
1190 -715 -1293 0
1190 -713 -1295 0
1190 -711 -1297 0
1190 -709 -1299 0
1190 -707 -1301 0
1190 -705 -1303 0
1190 -703 -1305 0
1190 -701 -1307 0
1190 -699 -1309 0
1190 -697 -1311 0
1190 -695 -1313 0
1190 -693 -1315 0
1190 -691 -1317 0
1190 -689 -1319 0
1190 -687 -1321 0
1190 -685 -1323 0
1190 -683 -1325 0
1190 -681 -1327 0
1190 -679 -1329 0
1190 -677 -1331 0
1190 -676 -1333 0
1192 -1263 0
1192 -745 -1265 0
1192 -743 -1267 0
1192 -741 -1269 0
1192 -739 -1271 0
1192 -737 -1273 0
1192 -735 -1275 0
1192 -733 -1277 0
1192 -731 -1279 0
1192 -729 -1281 0
1192 -727 -1283 0
1192 -725 -1285 0
1192 -723 -1287 0
1192 -721 -1289 0
1192 -719 -1291 0
1192 -717 -1293 0
1192 -715 -1295 0
1192 -713 -1297 0
1192 -711 -1299 0
1192 -709 -1301 0
1192 -707 -1303 0
1192 -705 -1305 0
1192 -703 -1307 0
1192 -701 -1309 0
1192 -699 -1311 0
1192 -697 -1313 0
1192 -695 -1315 0
1192 -693 -1317 0
1192 -691 -1319 0
1192 -689 -1321 0
1192 -687 -1323 0
1192 -685 -1325 0
1192 -683 -1327 0
1192 -681 -1329 0
1192 -679 -1331 0
1192 -677 -1333 0
1192 -676 -1335 0
1194 -1265 0
1194 -745 -1267 0
1194 -743 -1269 0
1194 -741 -1271 0
1194 -739 -1273 0
1194 -737 -1275 0
1194 -735 -1277 0
1194 -733 -1279 0
1194 -731 -1281 0
1194 -729 -1283 0
1194 -727 -1285 0
1194 -725 -1287 0
1194 -723 -1289 0
1194 -721 -1291 0
1194 -719 -1293 0
1194 -717 -1295 0
1194 -715 -1297 0
1194 -713 -1299 0
1194 -711 -1301 0
1194 -709 -1303 0
1194 -707 -1305 0
1194 -705 -1307 0
1194 -703 -1309 0
1194 -701 -1311 0
1194 -699 -1313 0
1194 -697 -1315 0
1194 -695 -1317 0
1194 -693 -1319 0
1194 -691 -1321 0
1194 -689 -1323 0
1194 -687 -1325 0
1194 -685 -1327 0
1194 -683 -1329 0
1194 -681 -1331 0
1194 -679 -1333 0
1194 -677 -1335 0
1194 -676 -1337 0
1196 -1267 0
1196 -745 -1269 0
1196 -743 -1271 0
1196 -741 -1273 0
1196 -739 -1275 0
1196 -737 -1277 0
1196 -735 -1279 0
1196 -733 -1281 0
1196 -731 -1283 0
1196 -729 -1285 0
1196 -727 -1287 0
1196 -725 -1289 0
1196 -723 -1291 0
1196 -721 -1293 0
1196 -719 -1295 0
1196 -717 -1297 0
1196 -715 -1299 0
1196 -713 -1301 0
1196 -711 -1303 0
1196 -709 -1305 0
1196 -707 -1307 0
1196 -705 -1309 0
1196 -703 -1311 0
1196 -701 -1313 0
1196 -699 -1315 0
1196 -697 -1317 0
1196 -695 -1319 0
1196 -693 -1321 0
1196 -691 -1323 0
1196 -689 -1325 0
1196 -687 -1327 0
1196 -685 -1329 0
1196 -683 -1331 0
1196 -681 -1333 0
1196 -679 -1335 0
1196 -677 -1337 0
1196 -676 -1339 0
1198 -1269 0
1198 -745 -1271 0
1198 -743 -1273 0
1198 -741 -1275 0
1198 -739 -1277 0
1198 -737 -1279 0
1198 -735 -1281 0
1198 -733 -1283 0
1198 -731 -1285 0
1198 -729 -1287 0
1198 -727 -1289 0
1198 -725 -1291 0
1198 -723 -1293 0
1198 -721 -1295 0
1198 -719 -1297 0
1198 -717 -1299 0
1198 -715 -1301 0
1198 -713 -1303 0
1198 -711 -1305 0
1198 -709 -1307 0
1198 -707 -1309 0
1198 -705 -1311 0
1198 -703 -1313 0
1198 -701 -1315 0
1198 -699 -1317 0
1198 -697 -1319 0
1198 -695 -1321 0
1198 -693 -1323 0
1198 -691 -1325 0
1198 -689 -1327 0
1198 -687 -1329 0
1198 -685 -1331 0
1198 -683 -1333 0
1198 -681 -1335 0
1198 -679 -1337 0
1198 -677 -1339 0
1198 -676 -1341 0
1200 -1271 0
1200 -745 -1273 0
1200 -743 -1275 0
1200 -741 -1277 0
1200 -739 -1279 0
1200 -737 -1281 0
1200 -735 -1283 0
1200 -733 -1285 0
1200 -731 -1287 0
1200 -729 -1289 0
1200 -727 -1291 0
1200 -725 -1293 0
1200 -723 -1295 0
1200 -721 -1297 0
1200 -719 -1299 0
1200 -717 -1301 0
1200 -715 -1303 0
1200 -713 -1305 0
1200 -711 -1307 0
1200 -709 -1309 0
1200 -707 -1311 0
1200 -705 -1313 0
1200 -703 -1315 0
1200 -701 -1317 0
1200 -699 -1319 0
1200 -697 -1321 0
1200 -695 -1323 0
1200 -693 -1325 0
1200 -691 -1327 0
1200 -689 -1329 0
1200 -687 -1331 0
1200 -685 -1333 0
1200 -683 -1335 0
1200 -681 -1337 0
1200 -679 -1339 0
1200 -677 -1341 0
1200 -676 -1343 0
1202 -1273 0
1202 -745 -1275 0
1202 -743 -1277 0
1202 -741 -1279 0
1202 -739 -1281 0
1202 -737 -1283 0
1202 -735 -1285 0
1202 -733 -1287 0
1202 -731 -1289 0
1202 -729 -1291 0
1202 -727 -1293 0
1202 -725 -1295 0
1202 -723 -1297 0
1202 -721 -1299 0
1202 -719 -1301 0
1202 -717 -1303 0
1202 -715 -1305 0
1202 -713 -1307 0
1202 -711 -1309 0
1202 -709 -1311 0
1202 -707 -1313 0
1202 -705 -1315 0
1202 -703 -1317 0
1202 -701 -1319 0
1202 -699 -1321 0
1202 -697 -1323 0
1202 -695 -1325 0
1202 -693 -1327 0
1202 -691 -1329 0
1202 -689 -1331 0
1202 -687 -1333 0
1202 -685 -1335 0
1202 -683 -1337 0
1202 -681 -1339 0
1202 -679 -1341 0
1202 -677 -1343 0
1202 -676 -1345 0
1204 -1275 0
1204 -745 -1277 0
1204 -743 -1279 0
1204 -741 -1281 0
1204 -739 -1283 0
1204 -737 -1285 0
1204 -735 -1287 0
1204 -733 -1289 0
1204 -731 -1291 0
1204 -729 -1293 0
1204 -727 -1295 0
1204 -725 -1297 0
1204 -723 -1299 0
1204 -721 -1301 0
1204 -719 -1303 0
1204 -717 -1305 0
1204 -715 -1307 0
1204 -713 -1309 0
1204 -711 -1311 0
1204 -709 -1313 0
1204 -707 -1315 0
1204 -705 -1317 0
1204 -703 -1319 0
1204 -701 -1321 0
1204 -699 -1323 0
1204 -697 -1325 0
1204 -695 -1327 0
1204 -693 -1329 0
1204 -691 -1331 0
1204 -689 -1333 0
1204 -687 -1335 0
1204 -685 -1337 0
1204 -683 -1339 0
1204 -681 -1341 0
1204 -679 -1343 0
1204 -677 -1345 0
1204 -676 -1347 0
1206 -1277 0
1206 -745 -1279 0
1206 -743 -1281 0
1206 -741 -1283 0
1206 -739 -1285 0
1206 -737 -1287 0
1206 -735 -1289 0
1206 -733 -1291 0
1206 -731 -1293 0
1206 -729 -1295 0
1206 -727 -1297 0
1206 -725 -1299 0
1206 -723 -1301 0
1206 -721 -1303 0
1206 -719 -1305 0
1206 -717 -1307 0
1206 -715 -1309 0
1206 -713 -1311 0
1206 -711 -1313 0
1206 -709 -1315 0
1206 -707 -1317 0
1206 -705 -1319 0
1206 -703 -1321 0
1206 -701 -1323 0
1206 -699 -1325 0
1206 -697 -1327 0
1206 -695 -1329 0
1206 -693 -1331 0
1206 -691 -1333 0
1206 -689 -1335 0
1206 -687 -1337 0
1206 -685 -1339 0
1206 -683 -1341 0
1206 -681 -1343 0
1206 -679 -1345 0
1206 -677 -1347 0
1206 -676 -1349 0
1208 -1279 0
1208 -745 -1281 0
1208 -743 -1283 0
1208 -741 -1285 0
1208 -739 -1287 0
1208 -737 -1289 0
1208 -735 -1291 0
1208 -733 -1293 0
1208 -731 -1295 0
1208 -729 -1297 0
1208 -727 -1299 0
1208 -725 -1301 0
1208 -723 -1303 0
1208 -721 -1305 0
1208 -719 -1307 0
1208 -717 -1309 0
1208 -715 -1311 0
1208 -713 -1313 0
1208 -711 -1315 0
1208 -709 -1317 0
1208 -707 -1319 0
1208 -705 -1321 0
1208 -703 -1323 0
1208 -701 -1325 0
1208 -699 -1327 0
1208 -697 -1329 0
1208 -695 -1331 0
1208 -693 -1333 0
1208 -691 -1335 0
1208 -689 -1337 0
1208 -687 -1339 0
1208 -685 -1341 0
1208 -683 -1343 0
1208 -681 -1345 0
1208 -679 -1347 0
1208 -677 -1349 0
1208 -676 -1351 0
1210 -1281 0
1210 -745 -1283 0
1210 -743 -1285 0
1210 -741 -1287 0
1210 -739 -1289 0
1210 -737 -1291 0
1210 -735 -1293 0
1210 -733 -1295 0
1210 -731 -1297 0
1210 -729 -1299 0
1210 -727 -1301 0
1210 -725 -1303 0
1210 -723 -1305 0
1210 -721 -1307 0
1210 -719 -1309 0
1210 -717 -1311 0
1210 -715 -1313 0
1210 -713 -1315 0
1210 -711 -1317 0
1210 -709 -1319 0
1210 -707 -1321 0
1210 -705 -1323 0
1210 -703 -1325 0
1210 -701 -1327 0
1210 -699 -1329 0
1210 -697 -1331 0
1210 -695 -1333 0
1210 -693 -1335 0
1210 -691 -1337 0
1210 -689 -1339 0
1210 -687 -1341 0
1210 -685 -1343 0
1210 -683 -1345 0
1210 -681 -1347 0
1210 -679 -1349 0
1210 -677 -1351 0
1210 -676 -1353 0
1212 -1283 0
1212 -745 -1285 0
1212 -743 -1287 0
1212 -741 -1289 0
1212 -739 -1291 0
1212 -737 -1293 0
1212 -735 -1295 0
1212 -733 -1297 0
1212 -731 -1299 0
1212 -729 -1301 0
1212 -727 -1303 0
1212 -725 -1305 0
1212 -723 -1307 0
1212 -721 -1309 0
1212 -719 -1311 0
1212 -717 -1313 0
1212 -715 -1315 0
1212 -713 -1317 0
1212 -711 -1319 0
1212 -709 -1321 0
1212 -707 -1323 0
1212 -705 -1325 0
1212 -703 -1327 0
1212 -701 -1329 0
1212 -699 -1331 0
1212 -697 -1333 0
1212 -695 -1335 0
1212 -693 -1337 0
1212 -691 -1339 0
1212 -689 -1341 0
1212 -687 -1343 0
1212 -685 -1345 0
1212 -683 -1347 0
1212 -681 -1349 0
1212 -679 -1351 0
1212 -677 -1353 0
1212 -676 -1355 0
1214 -1285 0
1214 -745 -1287 0
1214 -743 -1289 0
1214 -741 -1291 0
1214 -739 -1293 0
1214 -737 -1295 0
1214 -735 -1297 0
1214 -733 -1299 0
1214 -731 -1301 0
1214 -729 -1303 0
1214 -727 -1305 0
1214 -725 -1307 0
1214 -723 -1309 0
1214 -721 -1311 0
1214 -719 -1313 0
1214 -717 -1315 0
1214 -715 -1317 0
1214 -713 -1319 0
1214 -711 -1321 0
1214 -709 -1323 0
1214 -707 -1325 0
1214 -705 -1327 0
1214 -703 -1329 0
1214 -701 -1331 0
1214 -699 -1333 0
1214 -697 -1335 0
1214 -695 -1337 0
1214 -693 -1339 0
1214 -691 -1341 0
1214 -689 -1343 0
1214 -687 -1345 0
1214 -685 -1347 0
1214 -683 -1349 0
1214 -681 -1351 0
1214 -679 -1353 0
1214 -677 -1355 0
1214 -676 -1357 0
1216 -1287 0
1216 -745 -1289 0
1216 -743 -1291 0
1216 -741 -1293 0
1216 -739 -1295 0
1216 -737 -1297 0
1216 -735 -1299 0
1216 -733 -1301 0
1216 -731 -1303 0
1216 -729 -1305 0
1216 -727 -1307 0
1216 -725 -1309 0
1216 -723 -1311 0
1216 -721 -1313 0
1216 -719 -1315 0
1216 -717 -1317 0
1216 -715 -1319 0
1216 -713 -1321 0
1216 -711 -1323 0
1216 -709 -1325 0
1216 -707 -1327 0
1216 -705 -1329 0
1216 -703 -1331 0
1216 -701 -1333 0
1216 -699 -1335 0
1216 -697 -1337 0
1216 -695 -1339 0
1216 -693 -1341 0
1216 -691 -1343 0
1216 -689 -1345 0
1216 -687 -1347 0
1216 -685 -1349 0
1216 -683 -1351 0
1216 -681 -1353 0
1216 -679 -1355 0
1216 -677 -1357 0
1216 -676 -1359 0
1218 -1289 0
1218 -745 -1291 0
1218 -743 -1293 0
1218 -741 -1295 0
1218 -739 -1297 0
1218 -737 -1299 0
1218 -735 -1301 0
1218 -733 -1303 0
1218 -731 -1305 0
1218 -729 -1307 0
1218 -727 -1309 0
1218 -725 -1311 0
1218 -723 -1313 0
1218 -721 -1315 0
1218 -719 -1317 0
1218 -717 -1319 0
1218 -715 -1321 0
1218 -713 -1323 0
1218 -711 -1325 0
1218 -709 -1327 0
1218 -707 -1329 0
1218 -705 -1331 0
1218 -703 -1333 0
1218 -701 -1335 0
1218 -699 -1337 0
1218 -697 -1339 0
1218 -695 -1341 0
1218 -693 -1343 0
1218 -691 -1345 0
1218 -689 -1347 0
1218 -687 -1349 0
1218 -685 -1351 0
1218 -683 -1353 0
1218 -681 -1355 0
1218 -679 -1357 0
1218 -677 -1359 0
1218 -676 -1361 0
1220 -1291 0
1220 -745 -1293 0
1220 -743 -1295 0
1220 -741 -1297 0
1220 -739 -1299 0
1220 -737 -1301 0
1220 -735 -1303 0
1220 -733 -1305 0
1220 -731 -1307 0
1220 -729 -1309 0
1220 -727 -1311 0
1220 -725 -1313 0
1220 -723 -1315 0
1220 -721 -1317 0
1220 -719 -1319 0
1220 -717 -1321 0
1220 -715 -1323 0
1220 -713 -1325 0
1220 -711 -1327 0
1220 -709 -1329 0
1220 -707 -1331 0
1220 -705 -1333 0
1220 -703 -1335 0
1220 -701 -1337 0
1220 -699 -1339 0
1220 -697 -1341 0
1220 -695 -1343 0
1220 -693 -1345 0
1220 -691 -1347 0
1220 -689 -1349 0
1220 -687 -1351 0
1220 -685 -1353 0
1220 -683 -1355 0
1220 -681 -1357 0
1220 -679 -1359 0
1220 -677 -1361 0
1220 -676 -1363 0
1222 -1293 0
1222 -745 -1295 0
1222 -743 -1297 0
1222 -741 -1299 0
1222 -739 -1301 0
1222 -737 -1303 0
1222 -735 -1305 0
1222 -733 -1307 0
1222 -731 -1309 0
1222 -729 -1311 0
1222 -727 -1313 0
1222 -725 -1315 0
1222 -723 -1317 0
1222 -721 -1319 0
1222 -719 -1321 0
1222 -717 -1323 0
1222 -715 -1325 0
1222 -713 -1327 0
1222 -711 -1329 0
1222 -709 -1331 0
1222 -707 -1333 0
1222 -705 -1335 0
1222 -703 -1337 0
1222 -701 -1339 0
1222 -699 -1341 0
1222 -697 -1343 0
1222 -695 -1345 0
1222 -693 -1347 0
1222 -691 -1349 0
1222 -689 -1351 0
1222 -687 -1353 0
1222 -685 -1355 0
1222 -683 -1357 0
1222 -681 -1359 0
1222 -679 -1361 0
1222 -677 -1363 0
1222 -676 -1365 0
1224 -1295 0
1224 -745 -1297 0
1224 -743 -1299 0
1224 -741 -1301 0
1224 -739 -1303 0
1224 -737 -1305 0
1224 -735 -1307 0
1224 -733 -1309 0
1224 -731 -1311 0
1224 -729 -1313 0
1224 -727 -1315 0
1224 -725 -1317 0
1224 -723 -1319 0
1224 -721 -1321 0
1224 -719 -1323 0
1224 -717 -1325 0
1224 -715 -1327 0
1224 -713 -1329 0
1224 -711 -1331 0
1224 -709 -1333 0
1224 -707 -1335 0
1224 -705 -1337 0
1224 -703 -1339 0
1224 -701 -1341 0
1224 -699 -1343 0
1224 -697 -1345 0
1224 -695 -1347 0
1224 -693 -1349 0
1224 -691 -1351 0
1224 -689 -1353 0
1224 -687 -1355 0
1224 -685 -1357 0
1224 -683 -1359 0
1224 -681 -1361 0
1224 -679 -1363 0
1224 -677 -1365 0
1224 -676 -1367 0
1226 -1297 0
1226 -745 -1299 0
1226 -743 -1301 0
1226 -741 -1303 0
1226 -739 -1305 0
1226 -737 -1307 0
1226 -735 -1309 0
1226 -733 -1311 0
1226 -731 -1313 0
1226 -729 -1315 0
1226 -727 -1317 0
1226 -725 -1319 0
1226 -723 -1321 0
1226 -721 -1323 0
1226 -719 -1325 0
1226 -717 -1327 0
1226 -715 -1329 0
1226 -713 -1331 0
1226 -711 -1333 0
1226 -709 -1335 0
1226 -707 -1337 0
1226 -705 -1339 0
1226 -703 -1341 0
1226 -701 -1343 0
1226 -699 -1345 0
1226 -697 -1347 0
1226 -695 -1349 0
1226 -693 -1351 0
1226 -691 -1353 0
1226 -689 -1355 0
1226 -687 -1357 0
1226 -685 -1359 0
1226 -683 -1361 0
1226 -681 -1363 0
1226 -679 -1365 0
1226 -677 -1367 0
1226 -676 -1369 0
1228 -1299 0
1228 -745 -1301 0
1228 -743 -1303 0
1228 -741 -1305 0
1228 -739 -1307 0
1228 -737 -1309 0
1228 -735 -1311 0
1228 -733 -1313 0
1228 -731 -1315 0
1228 -729 -1317 0
1228 -727 -1319 0
1228 -725 -1321 0
1228 -723 -1323 0
1228 -721 -1325 0
1228 -719 -1327 0
1228 -717 -1329 0
1228 -715 -1331 0
1228 -713 -1333 0
1228 -711 -1335 0
1228 -709 -1337 0
1228 -707 -1339 0
1228 -705 -1341 0
1228 -703 -1343 0
1228 -701 -1345 0
1228 -699 -1347 0
1228 -697 -1349 0
1228 -695 -1351 0
1228 -693 -1353 0
1228 -691 -1355 0
1228 -689 -1357 0
1228 -687 -1359 0
1228 -685 -1361 0
1228 -683 -1363 0
1228 -681 -1365 0
1228 -679 -1367 0
1228 -677 -1369 0
1228 -676 -1371 0
1230 -1301 0
1230 -745 -1303 0
1230 -743 -1305 0
1230 -741 -1307 0
1230 -739 -1309 0
1230 -737 -1311 0
1230 -735 -1313 0
1230 -733 -1315 0
1230 -731 -1317 0
1230 -729 -1319 0
1230 -727 -1321 0
1230 -725 -1323 0
1230 -723 -1325 0
1230 -721 -1327 0
1230 -719 -1329 0
1230 -717 -1331 0
1230 -715 -1333 0
1230 -713 -1335 0
1230 -711 -1337 0
1230 -709 -1339 0
1230 -707 -1341 0
1230 -705 -1343 0
1230 -703 -1345 0
1230 -701 -1347 0
1230 -699 -1349 0
1230 -697 -1351 0
1230 -695 -1353 0
1230 -693 -1355 0
1230 -691 -1357 0
1230 -689 -1359 0
1230 -687 -1361 0
1230 -685 -1363 0
1230 -683 -1365 0
1230 -681 -1367 0
1230 -679 -1369 0
1230 -677 -1371 0
1230 -676 -1373 0
1232 -1303 0
1232 -745 -1305 0
1232 -743 -1307 0
1232 -741 -1309 0
1232 -739 -1311 0
1232 -737 -1313 0
1232 -735 -1315 0
1232 -733 -1317 0
1232 -731 -1319 0
1232 -729 -1321 0
1232 -727 -1323 0
1232 -725 -1325 0
1232 -723 -1327 0
1232 -721 -1329 0
1232 -719 -1331 0
1232 -717 -1333 0
1232 -715 -1335 0
1232 -713 -1337 0
1232 -711 -1339 0
1232 -709 -1341 0
1232 -707 -1343 0
1232 -705 -1345 0
1232 -703 -1347 0
1232 -701 -1349 0
1232 -699 -1351 0
1232 -697 -1353 0
1232 -695 -1355 0
1232 -693 -1357 0
1232 -691 -1359 0
1232 -689 -1361 0
1232 -687 -1363 0
1232 -685 -1365 0
1232 -683 -1367 0
1232 -681 -1369 0
1232 -679 -1371 0
1232 -677 -1373 0
1232 -676 -1375 0
1234 -1305 0
1234 -745 -1307 0
1234 -743 -1309 0
1234 -741 -1311 0
1234 -739 -1313 0
1234 -737 -1315 0
1234 -735 -1317 0
1234 -733 -1319 0
1234 -731 -1321 0
1234 -729 -1323 0
1234 -727 -1325 0
1234 -725 -1327 0
1234 -723 -1329 0
1234 -721 -1331 0
1234 -719 -1333 0
1234 -717 -1335 0
1234 -715 -1337 0
1234 -713 -1339 0
1234 -711 -1341 0
1234 -709 -1343 0
1234 -707 -1345 0
1234 -705 -1347 0
1234 -703 -1349 0
1234 -701 -1351 0
1234 -699 -1353 0
1234 -697 -1355 0
1234 -695 -1357 0
1234 -693 -1359 0
1234 -691 -1361 0
1234 -689 -1363 0
1234 -687 -1365 0
1234 -685 -1367 0
1234 -683 -1369 0
1234 -681 -1371 0
1234 -679 -1373 0
1234 -677 -1375 0
1234 -676 -1377 0
1236 -1307 0
1236 -745 -1309 0
1236 -743 -1311 0
1236 -741 -1313 0
1236 -739 -1315 0
1236 -737 -1317 0
1236 -735 -1319 0
1236 -733 -1321 0
1236 -731 -1323 0
1236 -729 -1325 0
1236 -727 -1327 0
1236 -725 -1329 0
1236 -723 -1331 0
1236 -721 -1333 0
1236 -719 -1335 0
1236 -717 -1337 0
1236 -715 -1339 0
1236 -713 -1341 0
1236 -711 -1343 0
1236 -709 -1345 0
1236 -707 -1347 0
1236 -705 -1349 0
1236 -703 -1351 0
1236 -701 -1353 0
1236 -699 -1355 0
1236 -697 -1357 0
1236 -695 -1359 0
1236 -693 -1361 0
1236 -691 -1363 0
1236 -689 -1365 0
1236 -687 -1367 0
1236 -685 -1369 0
1236 -683 -1371 0
1236 -681 -1373 0
1236 -679 -1375 0
1236 -677 -1377 0
1236 -676 -1379 0
1238 -1309 0
1238 -745 -1311 0
1238 -743 -1313 0
1238 -741 -1315 0
1238 -739 -1317 0
1238 -737 -1319 0
1238 -735 -1321 0
1238 -733 -1323 0
1238 -731 -1325 0
1238 -729 -1327 0
1238 -727 -1329 0
1238 -725 -1331 0
1238 -723 -1333 0
1238 -721 -1335 0
1238 -719 -1337 0
1238 -717 -1339 0
1238 -715 -1341 0
1238 -713 -1343 0
1238 -711 -1345 0
1238 -709 -1347 0
1238 -707 -1349 0
1238 -705 -1351 0
1238 -703 -1353 0
1238 -701 -1355 0
1238 -699 -1357 0
1238 -697 -1359 0
1238 -695 -1361 0
1238 -693 -1363 0
1238 -691 -1365 0
1238 -689 -1367 0
1238 -687 -1369 0
1238 -685 -1371 0
1238 -683 -1373 0
1238 -681 -1375 0
1238 -679 -1377 0
1238 -677 -1379 0
1238 -676 -1381 0
1240 -1311 0
1240 -745 -1313 0
1240 -743 -1315 0
1240 -741 -1317 0
1240 -739 -1319 0
1240 -737 -1321 0
1240 -735 -1323 0
1240 -733 -1325 0
1240 -731 -1327 0
1240 -729 -1329 0
1240 -727 -1331 0
1240 -725 -1333 0
1240 -723 -1335 0
1240 -721 -1337 0
1240 -719 -1339 0
1240 -717 -1341 0
1240 -715 -1343 0
1240 -713 -1345 0
1240 -711 -1347 0
1240 -709 -1349 0
1240 -707 -1351 0
1240 -705 -1353 0
1240 -703 -1355 0
1240 -701 -1357 0
1240 -699 -1359 0
1240 -697 -1361 0
1240 -695 -1363 0
1240 -693 -1365 0
1240 -691 -1367 0
1240 -689 -1369 0
1240 -687 -1371 0
1240 -685 -1373 0
1240 -683 -1375 0
1240 -681 -1377 0
1240 -679 -1379 0
1240 -677 -1381 0
1240 -676 -1383 0
c (0<=(aux230 - aux231 - shift(num_occupied_by_types_00002, -36)))
676 1383 0
677 1381 0
679 1379 0
681 1377 0
683 1375 0
685 1373 0
687 1371 0
689 1369 0
691 1367 0
693 1365 0
695 1363 0
697 1361 0
699 1359 0
701 1357 0
703 1355 0
705 1353 0
707 1351 0
709 1349 0
711 1347 0
713 1345 0
715 1343 0
717 1341 0
719 1339 0
721 1337 0
723 1335 0
725 1333 0
727 1331 0
729 1329 0
731 1327 0
733 1325 0
735 1323 0
737 1321 0
739 1319 0
741 1317 0
743 1315 0
745 1313 0
-1240 1383 0
-1240 676 1381 0
-1240 677 1379 0
-1240 679 1377 0
-1240 681 1375 0
-1240 683 1373 0
-1240 685 1371 0
-1240 687 1369 0
-1240 689 1367 0
-1240 691 1365 0
-1240 693 1363 0
-1240 695 1361 0
-1240 697 1359 0
-1240 699 1357 0
-1240 701 1355 0
-1240 703 1353 0
-1240 705 1351 0
-1240 707 1349 0
-1240 709 1347 0
-1240 711 1345 0
-1240 713 1343 0
-1240 715 1341 0
-1240 717 1339 0
-1240 719 1337 0
-1240 721 1335 0
-1240 723 1333 0
-1240 725 1331 0
-1240 727 1329 0
-1240 729 1327 0
-1240 731 1325 0
-1240 733 1323 0
-1240 735 1321 0
-1240 737 1319 0
-1240 739 1317 0
-1240 741 1315 0
-1240 743 1313 0
-1240 745 1311 0
-1238 1381 0
-1238 676 1379 0
-1238 677 1377 0
-1238 679 1375 0
-1238 681 1373 0
-1238 683 1371 0
-1238 685 1369 0
-1238 687 1367 0
-1238 689 1365 0
-1238 691 1363 0
-1238 693 1361 0
-1238 695 1359 0
-1238 697 1357 0
-1238 699 1355 0
-1238 701 1353 0
-1238 703 1351 0
-1238 705 1349 0
-1238 707 1347 0
-1238 709 1345 0
-1238 711 1343 0
-1238 713 1341 0
-1238 715 1339 0
-1238 717 1337 0
-1238 719 1335 0
-1238 721 1333 0
-1238 723 1331 0
-1238 725 1329 0
-1238 727 1327 0
-1238 729 1325 0
-1238 731 1323 0
-1238 733 1321 0
-1238 735 1319 0
-1238 737 1317 0
-1238 739 1315 0
-1238 741 1313 0
-1238 743 1311 0
-1238 745 1309 0
-1236 1379 0
-1236 676 1377 0
-1236 677 1375 0
-1236 679 1373 0
-1236 681 1371 0
-1236 683 1369 0
-1236 685 1367 0
-1236 687 1365 0
-1236 689 1363 0
-1236 691 1361 0
-1236 693 1359 0
-1236 695 1357 0
-1236 697 1355 0
-1236 699 1353 0
-1236 701 1351 0
-1236 703 1349 0
-1236 705 1347 0
-1236 707 1345 0
-1236 709 1343 0
-1236 711 1341 0
-1236 713 1339 0
-1236 715 1337 0
-1236 717 1335 0
-1236 719 1333 0
-1236 721 1331 0
-1236 723 1329 0
-1236 725 1327 0
-1236 727 1325 0
-1236 729 1323 0
-1236 731 1321 0
-1236 733 1319 0
-1236 735 1317 0
-1236 737 1315 0
-1236 739 1313 0
-1236 741 1311 0
-1236 743 1309 0
-1236 745 1307 0
-1234 1377 0
-1234 676 1375 0
-1234 677 1373 0
-1234 679 1371 0
-1234 681 1369 0
-1234 683 1367 0
-1234 685 1365 0
-1234 687 1363 0
-1234 689 1361 0
-1234 691 1359 0
-1234 693 1357 0
-1234 695 1355 0
-1234 697 1353 0
-1234 699 1351 0
-1234 701 1349 0
-1234 703 1347 0
-1234 705 1345 0
-1234 707 1343 0
-1234 709 1341 0
-1234 711 1339 0
-1234 713 1337 0
-1234 715 1335 0
-1234 717 1333 0
-1234 719 1331 0
-1234 721 1329 0
-1234 723 1327 0
-1234 725 1325 0
-1234 727 1323 0
-1234 729 1321 0
-1234 731 1319 0
-1234 733 1317 0
-1234 735 1315 0
-1234 737 1313 0
-1234 739 1311 0
-1234 741 1309 0
-1234 743 1307 0
-1234 745 1305 0
-1232 1375 0
-1232 676 1373 0
-1232 677 1371 0
-1232 679 1369 0
-1232 681 1367 0
-1232 683 1365 0
-1232 685 1363 0
-1232 687 1361 0
-1232 689 1359 0
-1232 691 1357 0
-1232 693 1355 0
-1232 695 1353 0
-1232 697 1351 0
-1232 699 1349 0
-1232 701 1347 0
-1232 703 1345 0
-1232 705 1343 0
-1232 707 1341 0
-1232 709 1339 0
-1232 711 1337 0
-1232 713 1335 0
-1232 715 1333 0
-1232 717 1331 0
-1232 719 1329 0
-1232 721 1327 0
-1232 723 1325 0
-1232 725 1323 0
-1232 727 1321 0
-1232 729 1319 0
-1232 731 1317 0
-1232 733 1315 0
-1232 735 1313 0
-1232 737 1311 0
-1232 739 1309 0
-1232 741 1307 0
-1232 743 1305 0
-1232 745 1303 0
-1230 1373 0
-1230 676 1371 0
-1230 677 1369 0
-1230 679 1367 0
-1230 681 1365 0
-1230 683 1363 0
-1230 685 1361 0
-1230 687 1359 0
-1230 689 1357 0
-1230 691 1355 0
-1230 693 1353 0
-1230 695 1351 0
-1230 697 1349 0
-1230 699 1347 0
-1230 701 1345 0
-1230 703 1343 0
-1230 705 1341 0
-1230 707 1339 0
-1230 709 1337 0
-1230 711 1335 0
-1230 713 1333 0
-1230 715 1331 0
-1230 717 1329 0
-1230 719 1327 0
-1230 721 1325 0
-1230 723 1323 0
-1230 725 1321 0
-1230 727 1319 0
-1230 729 1317 0
-1230 731 1315 0
-1230 733 1313 0
-1230 735 1311 0
-1230 737 1309 0
-1230 739 1307 0
-1230 741 1305 0
-1230 743 1303 0
-1230 745 1301 0
-1228 1371 0
-1228 676 1369 0
-1228 677 1367 0
-1228 679 1365 0
-1228 681 1363 0
-1228 683 1361 0
-1228 685 1359 0
-1228 687 1357 0
-1228 689 1355 0
-1228 691 1353 0
-1228 693 1351 0
-1228 695 1349 0
-1228 697 1347 0
-1228 699 1345 0
-1228 701 1343 0
-1228 703 1341 0
-1228 705 1339 0
-1228 707 1337 0
-1228 709 1335 0
-1228 711 1333 0
-1228 713 1331 0
-1228 715 1329 0
-1228 717 1327 0
-1228 719 1325 0
-1228 721 1323 0
-1228 723 1321 0
-1228 725 1319 0
-1228 727 1317 0
-1228 729 1315 0
-1228 731 1313 0
-1228 733 1311 0
-1228 735 1309 0
-1228 737 1307 0
-1228 739 1305 0
-1228 741 1303 0
-1228 743 1301 0
-1228 745 1299 0
-1226 1369 0
-1226 676 1367 0
-1226 677 1365 0
-1226 679 1363 0
-1226 681 1361 0
-1226 683 1359 0
-1226 685 1357 0
-1226 687 1355 0
-1226 689 1353 0
-1226 691 1351 0
-1226 693 1349 0
-1226 695 1347 0
-1226 697 1345 0
-1226 699 1343 0
-1226 701 1341 0
-1226 703 1339 0
-1226 705 1337 0
-1226 707 1335 0
-1226 709 1333 0
-1226 711 1331 0
-1226 713 1329 0
-1226 715 1327 0
-1226 717 1325 0
-1226 719 1323 0
-1226 721 1321 0
-1226 723 1319 0
-1226 725 1317 0
-1226 727 1315 0
-1226 729 1313 0
-1226 731 1311 0
-1226 733 1309 0
-1226 735 1307 0
-1226 737 1305 0
-1226 739 1303 0
-1226 741 1301 0
-1226 743 1299 0
-1226 745 1297 0
-1224 1367 0
-1224 676 1365 0
-1224 677 1363 0
-1224 679 1361 0
-1224 681 1359 0
-1224 683 1357 0
-1224 685 1355 0
-1224 687 1353 0
-1224 689 1351 0
-1224 691 1349 0
-1224 693 1347 0
-1224 695 1345 0
-1224 697 1343 0
-1224 699 1341 0
-1224 701 1339 0
-1224 703 1337 0
-1224 705 1335 0
-1224 707 1333 0
-1224 709 1331 0
-1224 711 1329 0
-1224 713 1327 0
-1224 715 1325 0
-1224 717 1323 0
-1224 719 1321 0
-1224 721 1319 0
-1224 723 1317 0
-1224 725 1315 0
-1224 727 1313 0
-1224 729 1311 0
-1224 731 1309 0
-1224 733 1307 0
-1224 735 1305 0
-1224 737 1303 0
-1224 739 1301 0
-1224 741 1299 0
-1224 743 1297 0
-1224 745 1295 0
-1222 1365 0
-1222 676 1363 0
-1222 677 1361 0
-1222 679 1359 0
-1222 681 1357 0
-1222 683 1355 0
-1222 685 1353 0
-1222 687 1351 0
-1222 689 1349 0
-1222 691 1347 0
-1222 693 1345 0
-1222 695 1343 0
-1222 697 1341 0
-1222 699 1339 0
-1222 701 1337 0
-1222 703 1335 0
-1222 705 1333 0
-1222 707 1331 0
-1222 709 1329 0
-1222 711 1327 0
-1222 713 1325 0
-1222 715 1323 0
-1222 717 1321 0
-1222 719 1319 0
-1222 721 1317 0
-1222 723 1315 0
-1222 725 1313 0
-1222 727 1311 0
-1222 729 1309 0
-1222 731 1307 0
-1222 733 1305 0
-1222 735 1303 0
-1222 737 1301 0
-1222 739 1299 0
-1222 741 1297 0
-1222 743 1295 0
-1222 745 1293 0
-1220 1363 0
-1220 676 1361 0
-1220 677 1359 0
-1220 679 1357 0
-1220 681 1355 0
-1220 683 1353 0
-1220 685 1351 0
-1220 687 1349 0
-1220 689 1347 0
-1220 691 1345 0
-1220 693 1343 0
-1220 695 1341 0
-1220 697 1339 0
-1220 699 1337 0
-1220 701 1335 0
-1220 703 1333 0
-1220 705 1331 0
-1220 707 1329 0
-1220 709 1327 0
-1220 711 1325 0
-1220 713 1323 0
-1220 715 1321 0
-1220 717 1319 0
-1220 719 1317 0
-1220 721 1315 0
-1220 723 1313 0
-1220 725 1311 0
-1220 727 1309 0
-1220 729 1307 0
-1220 731 1305 0
-1220 733 1303 0
-1220 735 1301 0
-1220 737 1299 0
-1220 739 1297 0
-1220 741 1295 0
-1220 743 1293 0
-1220 745 1291 0
-1218 1361 0
-1218 676 1359 0
-1218 677 1357 0
-1218 679 1355 0
-1218 681 1353 0
-1218 683 1351 0
-1218 685 1349 0
-1218 687 1347 0
-1218 689 1345 0
-1218 691 1343 0
-1218 693 1341 0
-1218 695 1339 0
-1218 697 1337 0
-1218 699 1335 0
-1218 701 1333 0
-1218 703 1331 0
-1218 705 1329 0
-1218 707 1327 0
-1218 709 1325 0
-1218 711 1323 0
-1218 713 1321 0
-1218 715 1319 0
-1218 717 1317 0
-1218 719 1315 0
-1218 721 1313 0
-1218 723 1311 0
-1218 725 1309 0
-1218 727 1307 0
-1218 729 1305 0
-1218 731 1303 0
-1218 733 1301 0
-1218 735 1299 0
-1218 737 1297 0
-1218 739 1295 0
-1218 741 1293 0
-1218 743 1291 0
-1218 745 1289 0
-1216 1359 0
-1216 676 1357 0
-1216 677 1355 0
-1216 679 1353 0
-1216 681 1351 0
-1216 683 1349 0
-1216 685 1347 0
-1216 687 1345 0
-1216 689 1343 0
-1216 691 1341 0
-1216 693 1339 0
-1216 695 1337 0
-1216 697 1335 0
-1216 699 1333 0
-1216 701 1331 0
-1216 703 1329 0
-1216 705 1327 0
-1216 707 1325 0
-1216 709 1323 0
-1216 711 1321 0
-1216 713 1319 0
-1216 715 1317 0
-1216 717 1315 0
-1216 719 1313 0
-1216 721 1311 0
-1216 723 1309 0
-1216 725 1307 0
-1216 727 1305 0
-1216 729 1303 0
-1216 731 1301 0
-1216 733 1299 0
-1216 735 1297 0
-1216 737 1295 0
-1216 739 1293 0
-1216 741 1291 0
-1216 743 1289 0
-1216 745 1287 0
-1214 1357 0
-1214 676 1355 0
-1214 677 1353 0
-1214 679 1351 0
-1214 681 1349 0
-1214 683 1347 0
-1214 685 1345 0
-1214 687 1343 0
-1214 689 1341 0
-1214 691 1339 0
-1214 693 1337 0
-1214 695 1335 0
-1214 697 1333 0
-1214 699 1331 0
-1214 701 1329 0
-1214 703 1327 0
-1214 705 1325 0
-1214 707 1323 0
-1214 709 1321 0
-1214 711 1319 0
-1214 713 1317 0
-1214 715 1315 0
-1214 717 1313 0
-1214 719 1311 0
-1214 721 1309 0
-1214 723 1307 0
-1214 725 1305 0
-1214 727 1303 0
-1214 729 1301 0
-1214 731 1299 0
-1214 733 1297 0
-1214 735 1295 0
-1214 737 1293 0
-1214 739 1291 0
-1214 741 1289 0
-1214 743 1287 0
-1214 745 1285 0
-1212 1355 0
-1212 676 1353 0
-1212 677 1351 0
-1212 679 1349 0
-1212 681 1347 0
-1212 683 1345 0
-1212 685 1343 0
-1212 687 1341 0
-1212 689 1339 0
-1212 691 1337 0
-1212 693 1335 0
-1212 695 1333 0
-1212 697 1331 0
-1212 699 1329 0
-1212 701 1327 0
-1212 703 1325 0
-1212 705 1323 0
-1212 707 1321 0
-1212 709 1319 0
-1212 711 1317 0
-1212 713 1315 0
-1212 715 1313 0
-1212 717 1311 0
-1212 719 1309 0
-1212 721 1307 0
-1212 723 1305 0
-1212 725 1303 0
-1212 727 1301 0
-1212 729 1299 0
-1212 731 1297 0
-1212 733 1295 0
-1212 735 1293 0
-1212 737 1291 0
-1212 739 1289 0
-1212 741 1287 0
-1212 743 1285 0
-1212 745 1283 0
-1210 1353 0
-1210 676 1351 0
-1210 677 1349 0
-1210 679 1347 0
-1210 681 1345 0
-1210 683 1343 0
-1210 685 1341 0
-1210 687 1339 0
-1210 689 1337 0
-1210 691 1335 0
-1210 693 1333 0
-1210 695 1331 0
-1210 697 1329 0
-1210 699 1327 0
-1210 701 1325 0
-1210 703 1323 0
-1210 705 1321 0
-1210 707 1319 0
-1210 709 1317 0
-1210 711 1315 0
-1210 713 1313 0
-1210 715 1311 0
-1210 717 1309 0
-1210 719 1307 0
-1210 721 1305 0
-1210 723 1303 0
-1210 725 1301 0
-1210 727 1299 0
-1210 729 1297 0
-1210 731 1295 0
-1210 733 1293 0
-1210 735 1291 0
-1210 737 1289 0
-1210 739 1287 0
-1210 741 1285 0
-1210 743 1283 0
-1210 745 1281 0
-1208 1351 0
-1208 676 1349 0
-1208 677 1347 0
-1208 679 1345 0
-1208 681 1343 0
-1208 683 1341 0
-1208 685 1339 0
-1208 687 1337 0
-1208 689 1335 0
-1208 691 1333 0
-1208 693 1331 0
-1208 695 1329 0
-1208 697 1327 0
-1208 699 1325 0
-1208 701 1323 0
-1208 703 1321 0
-1208 705 1319 0
-1208 707 1317 0
-1208 709 1315 0
-1208 711 1313 0
-1208 713 1311 0
-1208 715 1309 0
-1208 717 1307 0
-1208 719 1305 0
-1208 721 1303 0
-1208 723 1301 0
-1208 725 1299 0
-1208 727 1297 0
-1208 729 1295 0
-1208 731 1293 0
-1208 733 1291 0
-1208 735 1289 0
-1208 737 1287 0
-1208 739 1285 0
-1208 741 1283 0
-1208 743 1281 0
-1208 745 1279 0
-1206 1349 0
-1206 676 1347 0
-1206 677 1345 0
-1206 679 1343 0
-1206 681 1341 0
-1206 683 1339 0
-1206 685 1337 0
-1206 687 1335 0
-1206 689 1333 0
-1206 691 1331 0
-1206 693 1329 0
-1206 695 1327 0
-1206 697 1325 0
-1206 699 1323 0
-1206 701 1321 0
-1206 703 1319 0
-1206 705 1317 0
-1206 707 1315 0
-1206 709 1313 0
-1206 711 1311 0
-1206 713 1309 0
-1206 715 1307 0
-1206 717 1305 0
-1206 719 1303 0
-1206 721 1301 0
-1206 723 1299 0
-1206 725 1297 0
-1206 727 1295 0
-1206 729 1293 0
-1206 731 1291 0
-1206 733 1289 0
-1206 735 1287 0
-1206 737 1285 0
-1206 739 1283 0
-1206 741 1281 0
-1206 743 1279 0
-1206 745 1277 0
-1204 1347 0
-1204 676 1345 0
-1204 677 1343 0
-1204 679 1341 0
-1204 681 1339 0
-1204 683 1337 0
-1204 685 1335 0
-1204 687 1333 0
-1204 689 1331 0
-1204 691 1329 0
-1204 693 1327 0
-1204 695 1325 0
-1204 697 1323 0
-1204 699 1321 0
-1204 701 1319 0
-1204 703 1317 0
-1204 705 1315 0
-1204 707 1313 0
-1204 709 1311 0
-1204 711 1309 0
-1204 713 1307 0
-1204 715 1305 0
-1204 717 1303 0
-1204 719 1301 0
-1204 721 1299 0
-1204 723 1297 0
-1204 725 1295 0
-1204 727 1293 0
-1204 729 1291 0
-1204 731 1289 0
-1204 733 1287 0
-1204 735 1285 0
-1204 737 1283 0
-1204 739 1281 0
-1204 741 1279 0
-1204 743 1277 0
-1204 745 1275 0
-1202 1345 0
-1202 676 1343 0
-1202 677 1341 0
-1202 679 1339 0
-1202 681 1337 0
-1202 683 1335 0
-1202 685 1333 0
-1202 687 1331 0
-1202 689 1329 0
-1202 691 1327 0
-1202 693 1325 0
-1202 695 1323 0
-1202 697 1321 0
-1202 699 1319 0
-1202 701 1317 0
-1202 703 1315 0
-1202 705 1313 0
-1202 707 1311 0
-1202 709 1309 0
-1202 711 1307 0
-1202 713 1305 0
-1202 715 1303 0
-1202 717 1301 0
-1202 719 1299 0
-1202 721 1297 0
-1202 723 1295 0
-1202 725 1293 0
-1202 727 1291 0
-1202 729 1289 0
-1202 731 1287 0
-1202 733 1285 0
-1202 735 1283 0
-1202 737 1281 0
-1202 739 1279 0
-1202 741 1277 0
-1202 743 1275 0
-1202 745 1273 0
-1200 1343 0
-1200 676 1341 0
-1200 677 1339 0
-1200 679 1337 0
-1200 681 1335 0
-1200 683 1333 0
-1200 685 1331 0
-1200 687 1329 0
-1200 689 1327 0
-1200 691 1325 0
-1200 693 1323 0
-1200 695 1321 0
-1200 697 1319 0
-1200 699 1317 0
-1200 701 1315 0
-1200 703 1313 0
-1200 705 1311 0
-1200 707 1309 0
-1200 709 1307 0
-1200 711 1305 0
-1200 713 1303 0
-1200 715 1301 0
-1200 717 1299 0
-1200 719 1297 0
-1200 721 1295 0
-1200 723 1293 0
-1200 725 1291 0
-1200 727 1289 0
-1200 729 1287 0
-1200 731 1285 0
-1200 733 1283 0
-1200 735 1281 0
-1200 737 1279 0
-1200 739 1277 0
-1200 741 1275 0
-1200 743 1273 0
-1200 745 1271 0
-1198 1341 0
-1198 676 1339 0
-1198 677 1337 0
-1198 679 1335 0
-1198 681 1333 0
-1198 683 1331 0
-1198 685 1329 0
-1198 687 1327 0
-1198 689 1325 0
-1198 691 1323 0
-1198 693 1321 0
-1198 695 1319 0
-1198 697 1317 0
-1198 699 1315 0
-1198 701 1313 0
-1198 703 1311 0
-1198 705 1309 0
-1198 707 1307 0
-1198 709 1305 0
-1198 711 1303 0
-1198 713 1301 0
-1198 715 1299 0
-1198 717 1297 0
-1198 719 1295 0
-1198 721 1293 0
-1198 723 1291 0
-1198 725 1289 0
-1198 727 1287 0
-1198 729 1285 0
-1198 731 1283 0
-1198 733 1281 0
-1198 735 1279 0
-1198 737 1277 0
-1198 739 1275 0
-1198 741 1273 0
-1198 743 1271 0
-1198 745 1269 0
-1196 1339 0
-1196 676 1337 0
-1196 677 1335 0
-1196 679 1333 0
-1196 681 1331 0
-1196 683 1329 0
-1196 685 1327 0
-1196 687 1325 0
-1196 689 1323 0
-1196 691 1321 0
-1196 693 1319 0
-1196 695 1317 0
-1196 697 1315 0
-1196 699 1313 0
-1196 701 1311 0
-1196 703 1309 0
-1196 705 1307 0
-1196 707 1305 0
-1196 709 1303 0
-1196 711 1301 0
-1196 713 1299 0
-1196 715 1297 0
-1196 717 1295 0
-1196 719 1293 0
-1196 721 1291 0
-1196 723 1289 0
-1196 725 1287 0
-1196 727 1285 0
-1196 729 1283 0
-1196 731 1281 0
-1196 733 1279 0
-1196 735 1277 0
-1196 737 1275 0
-1196 739 1273 0
-1196 741 1271 0
-1196 743 1269 0
-1196 745 1267 0
-1194 1337 0
-1194 676 1335 0
-1194 677 1333 0
-1194 679 1331 0
-1194 681 1329 0
-1194 683 1327 0
-1194 685 1325 0
-1194 687 1323 0
-1194 689 1321 0
-1194 691 1319 0
-1194 693 1317 0
-1194 695 1315 0
-1194 697 1313 0
-1194 699 1311 0
-1194 701 1309 0
-1194 703 1307 0
-1194 705 1305 0
-1194 707 1303 0
-1194 709 1301 0
-1194 711 1299 0
-1194 713 1297 0
-1194 715 1295 0
-1194 717 1293 0
-1194 719 1291 0
-1194 721 1289 0
-1194 723 1287 0
-1194 725 1285 0
-1194 727 1283 0
-1194 729 1281 0
-1194 731 1279 0
-1194 733 1277 0
-1194 735 1275 0
-1194 737 1273 0
-1194 739 1271 0
-1194 741 1269 0
-1194 743 1267 0
-1194 745 1265 0
-1192 1335 0
-1192 676 1333 0
-1192 677 1331 0
-1192 679 1329 0
-1192 681 1327 0
-1192 683 1325 0
-1192 685 1323 0
-1192 687 1321 0
-1192 689 1319 0
-1192 691 1317 0
-1192 693 1315 0
-1192 695 1313 0
-1192 697 1311 0
-1192 699 1309 0
-1192 701 1307 0
-1192 703 1305 0
-1192 705 1303 0
-1192 707 1301 0
-1192 709 1299 0
-1192 711 1297 0
-1192 713 1295 0
-1192 715 1293 0
-1192 717 1291 0
-1192 719 1289 0
-1192 721 1287 0
-1192 723 1285 0
-1192 725 1283 0
-1192 727 1281 0
-1192 729 1279 0
-1192 731 1277 0
-1192 733 1275 0
-1192 735 1273 0
-1192 737 1271 0
-1192 739 1269 0
-1192 741 1267 0
-1192 743 1265 0
-1192 745 1263 0
-1190 1333 0
-1190 676 1331 0
-1190 677 1329 0
-1190 679 1327 0
-1190 681 1325 0
-1190 683 1323 0
-1190 685 1321 0
-1190 687 1319 0
-1190 689 1317 0
-1190 691 1315 0
-1190 693 1313 0
-1190 695 1311 0
-1190 697 1309 0
-1190 699 1307 0
-1190 701 1305 0
-1190 703 1303 0
-1190 705 1301 0
-1190 707 1299 0
-1190 709 1297 0
-1190 711 1295 0
-1190 713 1293 0
-1190 715 1291 0
-1190 717 1289 0
-1190 719 1287 0
-1190 721 1285 0
-1190 723 1283 0
-1190 725 1281 0
-1190 727 1279 0
-1190 729 1277 0
-1190 731 1275 0
-1190 733 1273 0
-1190 735 1271 0
-1190 737 1269 0
-1190 739 1267 0
-1190 741 1265 0
-1190 743 1263 0
-1190 745 1261 0
-1188 1331 0
-1188 676 1329 0
-1188 677 1327 0
-1188 679 1325 0
-1188 681 1323 0
-1188 683 1321 0
-1188 685 1319 0
-1188 687 1317 0
-1188 689 1315 0
-1188 691 1313 0
-1188 693 1311 0
-1188 695 1309 0
-1188 697 1307 0
-1188 699 1305 0
-1188 701 1303 0
-1188 703 1301 0
-1188 705 1299 0
-1188 707 1297 0
-1188 709 1295 0
-1188 711 1293 0
-1188 713 1291 0
-1188 715 1289 0
-1188 717 1287 0
-1188 719 1285 0
-1188 721 1283 0
-1188 723 1281 0
-1188 725 1279 0
-1188 727 1277 0
-1188 729 1275 0
-1188 731 1273 0
-1188 733 1271 0
-1188 735 1269 0
-1188 737 1267 0
-1188 739 1265 0
-1188 741 1263 0
-1188 743 1261 0
-1188 745 1259 0
-1186 1329 0
-1186 676 1327 0
-1186 677 1325 0
-1186 679 1323 0
-1186 681 1321 0
-1186 683 1319 0
-1186 685 1317 0
-1186 687 1315 0
-1186 689 1313 0
-1186 691 1311 0
-1186 693 1309 0
-1186 695 1307 0
-1186 697 1305 0
-1186 699 1303 0
-1186 701 1301 0
-1186 703 1299 0
-1186 705 1297 0
-1186 707 1295 0
-1186 709 1293 0
-1186 711 1291 0
-1186 713 1289 0
-1186 715 1287 0
-1186 717 1285 0
-1186 719 1283 0
-1186 721 1281 0
-1186 723 1279 0
-1186 725 1277 0
-1186 727 1275 0
-1186 729 1273 0
-1186 731 1271 0
-1186 733 1269 0
-1186 735 1267 0
-1186 737 1265 0
-1186 739 1263 0
-1186 741 1261 0
-1186 743 1259 0
-1186 745 1257 0
-1184 1327 0
-1184 676 1325 0
-1184 677 1323 0
-1184 679 1321 0
-1184 681 1319 0
-1184 683 1317 0
-1184 685 1315 0
-1184 687 1313 0
-1184 689 1311 0
-1184 691 1309 0
-1184 693 1307 0
-1184 695 1305 0
-1184 697 1303 0
-1184 699 1301 0
-1184 701 1299 0
-1184 703 1297 0
-1184 705 1295 0
-1184 707 1293 0
-1184 709 1291 0
-1184 711 1289 0
-1184 713 1287 0
-1184 715 1285 0
-1184 717 1283 0
-1184 719 1281 0
-1184 721 1279 0
-1184 723 1277 0
-1184 725 1275 0
-1184 727 1273 0
-1184 729 1271 0
-1184 731 1269 0
-1184 733 1267 0
-1184 735 1265 0
-1184 737 1263 0
-1184 739 1261 0
-1184 741 1259 0
-1184 743 1257 0
-1184 745 1255 0
-1182 1325 0
-1182 676 1323 0
-1182 677 1321 0
-1182 679 1319 0
-1182 681 1317 0
-1182 683 1315 0
-1182 685 1313 0
-1182 687 1311 0
-1182 689 1309 0
-1182 691 1307 0
-1182 693 1305 0
-1182 695 1303 0
-1182 697 1301 0
-1182 699 1299 0
-1182 701 1297 0
-1182 703 1295 0
-1182 705 1293 0
-1182 707 1291 0
-1182 709 1289 0
-1182 711 1287 0
-1182 713 1285 0
-1182 715 1283 0
-1182 717 1281 0
-1182 719 1279 0
-1182 721 1277 0
-1182 723 1275 0
-1182 725 1273 0
-1182 727 1271 0
-1182 729 1269 0
-1182 731 1267 0
-1182 733 1265 0
-1182 735 1263 0
-1182 737 1261 0
-1182 739 1259 0
-1182 741 1257 0
-1182 743 1255 0
-1182 745 1253 0
-1180 1323 0
-1180 676 1321 0
-1180 677 1319 0
-1180 679 1317 0
-1180 681 1315 0
-1180 683 1313 0
-1180 685 1311 0
-1180 687 1309 0
-1180 689 1307 0
-1180 691 1305 0
-1180 693 1303 0
-1180 695 1301 0
-1180 697 1299 0
-1180 699 1297 0
-1180 701 1295 0
-1180 703 1293 0
-1180 705 1291 0
-1180 707 1289 0
-1180 709 1287 0
-1180 711 1285 0
-1180 713 1283 0
-1180 715 1281 0
-1180 717 1279 0
-1180 719 1277 0
-1180 721 1275 0
-1180 723 1273 0
-1180 725 1271 0
-1180 727 1269 0
-1180 729 1267 0
-1180 731 1265 0
-1180 733 1263 0
-1180 735 1261 0
-1180 737 1259 0
-1180 739 1257 0
-1180 741 1255 0
-1180 743 1253 0
-1180 745 1251 0
-1178 1321 0
-1178 676 1319 0
-1178 677 1317 0
-1178 679 1315 0
-1178 681 1313 0
-1178 683 1311 0
-1178 685 1309 0
-1178 687 1307 0
-1178 689 1305 0
-1178 691 1303 0
-1178 693 1301 0
-1178 695 1299 0
-1178 697 1297 0
-1178 699 1295 0
-1178 701 1293 0
-1178 703 1291 0
-1178 705 1289 0
-1178 707 1287 0
-1178 709 1285 0
-1178 711 1283 0
-1178 713 1281 0
-1178 715 1279 0
-1178 717 1277 0
-1178 719 1275 0
-1178 721 1273 0
-1178 723 1271 0
-1178 725 1269 0
-1178 727 1267 0
-1178 729 1265 0
-1178 731 1263 0
-1178 733 1261 0
-1178 735 1259 0
-1178 737 1257 0
-1178 739 1255 0
-1178 741 1253 0
-1178 743 1251 0
-1178 745 1249 0
-1176 1319 0
-1176 676 1317 0
-1176 677 1315 0
-1176 679 1313 0
-1176 681 1311 0
-1176 683 1309 0
-1176 685 1307 0
-1176 687 1305 0
-1176 689 1303 0
-1176 691 1301 0
-1176 693 1299 0
-1176 695 1297 0
-1176 697 1295 0
-1176 699 1293 0
-1176 701 1291 0
-1176 703 1289 0
-1176 705 1287 0
-1176 707 1285 0
-1176 709 1283 0
-1176 711 1281 0
-1176 713 1279 0
-1176 715 1277 0
-1176 717 1275 0
-1176 719 1273 0
-1176 721 1271 0
-1176 723 1269 0
-1176 725 1267 0
-1176 727 1265 0
-1176 729 1263 0
-1176 731 1261 0
-1176 733 1259 0
-1176 735 1257 0
-1176 737 1255 0
-1176 739 1253 0
-1176 741 1251 0
-1176 743 1249 0
-1176 745 1247 0
-1174 1317 0
-1174 676 1315 0
-1174 677 1313 0
-1174 679 1311 0
-1174 681 1309 0
-1174 683 1307 0
-1174 685 1305 0
-1174 687 1303 0
-1174 689 1301 0
-1174 691 1299 0
-1174 693 1297 0
-1174 695 1295 0
-1174 697 1293 0
-1174 699 1291 0
-1174 701 1289 0
-1174 703 1287 0
-1174 705 1285 0
-1174 707 1283 0
-1174 709 1281 0
-1174 711 1279 0
-1174 713 1277 0
-1174 715 1275 0
-1174 717 1273 0
-1174 719 1271 0
-1174 721 1269 0
-1174 723 1267 0
-1174 725 1265 0
-1174 727 1263 0
-1174 729 1261 0
-1174 731 1259 0
-1174 733 1257 0
-1174 735 1255 0
-1174 737 1253 0
-1174 739 1251 0
-1174 741 1249 0
-1174 743 1247 0
-1174 745 1245 0
-1172 1315 0
-1172 676 1313 0
-1172 677 1311 0
-1172 679 1309 0
-1172 681 1307 0
-1172 683 1305 0
-1172 685 1303 0
-1172 687 1301 0
-1172 689 1299 0
-1172 691 1297 0
-1172 693 1295 0
-1172 695 1293 0
-1172 697 1291 0
-1172 699 1289 0
-1172 701 1287 0
-1172 703 1285 0
-1172 705 1283 0
-1172 707 1281 0
-1172 709 1279 0
-1172 711 1277 0
-1172 713 1275 0
-1172 715 1273 0
-1172 717 1271 0
-1172 719 1269 0
-1172 721 1267 0
-1172 723 1265 0
-1172 725 1263 0
-1172 727 1261 0
-1172 729 1259 0
-1172 731 1257 0
-1172 733 1255 0
-1172 735 1253 0
-1172 737 1251 0
-1172 739 1249 0
-1172 741 1247 0
-1172 743 1245 0
-1172 745 1243 0
-1171 1313 0
-1171 676 1311 0
-1171 677 1309 0
-1171 679 1307 0
-1171 681 1305 0
-1171 683 1303 0
-1171 685 1301 0
-1171 687 1299 0
-1171 689 1297 0
-1171 691 1295 0
-1171 693 1293 0
-1171 695 1291 0
-1171 697 1289 0
-1171 699 1287 0
-1171 701 1285 0
-1171 703 1283 0
-1171 705 1281 0
-1171 707 1279 0
-1171 709 1277 0
-1171 711 1275 0
-1171 713 1273 0
-1171 715 1271 0
-1171 717 1269 0
-1171 719 1267 0
-1171 721 1265 0
-1171 723 1263 0
-1171 725 1261 0
-1171 727 1259 0
-1171 729 1257 0
-1171 731 1255 0
-1171 733 1253 0
-1171 735 1251 0
-1171 737 1249 0
-1171 739 1247 0
-1171 741 1245 0
-1171 743 1243 0
-1171 745 1242 0
c (( - aux232 + SATLiteral(191) + SATLiteral(196))<=0)
-196 -1385 0
-191 -1385 0
-191 -196 -1386 0
c (0<=( - aux232 + SATLiteral(191) + SATLiteral(196)))
196 1386 0
191 1386 0
191 196 1385 0
c (( - aux233 + SATLiteral(192) + SATLiteral(195))<=0)
-195 -1388 0
-192 -1388 0
-192 -195 -1389 0
c (0<=( - aux233 + SATLiteral(192) + SATLiteral(195)))
195 1389 0
192 1389 0
192 195 1388 0
c (( - aux234 + SATLiteral(193) + SATLiteral(194))<=0)
-194 -1391 0
-193 -1391 0
-193 -194 -1392 0
c (0<=( - aux234 + SATLiteral(193) + SATLiteral(194)))
194 1392 0
193 1392 0
193 194 1391 0
c ((SATLiteral(199) + SATLiteral(204) - aux235)<=0)
-204 -1394 0
-199 -1394 0
-199 -204 -1395 0
c (0<=(SATLiteral(199) + SATLiteral(204) - aux235))
204 1395 0
199 1395 0
199 204 1394 0
c ((SATLiteral(200) + SATLiteral(203) - aux236)<=0)
-203 -1397 0
-200 -1397 0
-200 -203 -1398 0
c (0<=(SATLiteral(200) + SATLiteral(203) - aux236))
203 1398 0
200 1398 0
200 203 1397 0
c ((SATLiteral(201) + SATLiteral(202) - aux237)<=0)
-202 -1400 0
-201 -1400 0
-201 -202 -1401 0
c (0<=(SATLiteral(201) + SATLiteral(202) - aux237))
202 1401 0
201 1401 0
201 202 1400 0
c (( - aux238 + SATLiteral(207) + SATLiteral(212))<=0)
-212 -1403 0
-207 -1403 0
-207 -212 -1404 0
c (0<=( - aux238 + SATLiteral(207) + SATLiteral(212)))
212 1404 0
207 1404 0
207 212 1403 0
c (( - aux239 + SATLiteral(208) + SATLiteral(211))<=0)
-211 -1406 0
-208 -1406 0
-208 -211 -1407 0
c (0<=( - aux239 + SATLiteral(208) + SATLiteral(211)))
211 1407 0
208 1407 0
208 211 1406 0
c (( - aux240 + SATLiteral(209) + SATLiteral(210))<=0)
-210 -1409 0
-209 -1409 0
-209 -210 -1410 0
c (0<=( - aux240 + SATLiteral(209) + SATLiteral(210)))
210 1410 0
209 1410 0
209 210 1409 0
c (( - aux241 + SATLiteral(215) + SATLiteral(220))<=0)
-220 -1412 0
-215 -1412 0
-215 -220 -1413 0
c (0<=( - aux241 + SATLiteral(215) + SATLiteral(220)))
220 1413 0
215 1413 0
215 220 1412 0
c (( - aux242 + SATLiteral(216) + SATLiteral(219))<=0)
-219 -1415 0
-216 -1415 0
-216 -219 -1416 0
c (0<=( - aux242 + SATLiteral(216) + SATLiteral(219)))
219 1416 0
216 1416 0
216 219 1415 0
c (( - aux243 + SATLiteral(217) + SATLiteral(218))<=0)
-218 -1418 0
-217 -1418 0
-217 -218 -1419 0
c (0<=( - aux243 + SATLiteral(217) + SATLiteral(218)))
218 1419 0
217 1419 0
217 218 1418 0
c (( - aux244 + SATLiteral(223) + SATLiteral(228))<=0)
-228 -1421 0
-223 -1421 0
-223 -228 -1422 0
c (0<=( - aux244 + SATLiteral(223) + SATLiteral(228)))
228 1422 0
223 1422 0
223 228 1421 0
c (( - aux245 + SATLiteral(224) + SATLiteral(227))<=0)
-227 -1424 0
-224 -1424 0
-224 -227 -1425 0
c (0<=( - aux245 + SATLiteral(224) + SATLiteral(227)))
227 1425 0
224 1425 0
224 227 1424 0
c (( - aux246 + SATLiteral(225) + SATLiteral(226))<=0)
-226 -1427 0
-225 -1427 0
-225 -226 -1428 0
c (0<=( - aux246 + SATLiteral(225) + SATLiteral(226)))
226 1428 0
225 1428 0
225 226 1427 0
c (( - aux247 + SATLiteral(231) + SATLiteral(236))<=0)
-236 -1430 0
-231 -1430 0
-231 -236 -1431 0
c (0<=( - aux247 + SATLiteral(231) + SATLiteral(236)))
236 1431 0
231 1431 0
231 236 1430 0
c (( - aux248 + SATLiteral(232) + SATLiteral(235))<=0)
-235 -1433 0
-232 -1433 0
-232 -235 -1434 0
c (0<=( - aux248 + SATLiteral(232) + SATLiteral(235)))
235 1434 0
232 1434 0
232 235 1433 0
c (( - aux249 + SATLiteral(233) + SATLiteral(234))<=0)
-234 -1436 0
-233 -1436 0
-233 -234 -1437 0
c (0<=( - aux249 + SATLiteral(233) + SATLiteral(234)))
234 1437 0
233 1437 0
233 234 1436 0
c ((SATLiteral(199) - aux250 + SATLiteral(231))<=0)
-231 -1439 0
-199 -1439 0
-199 -231 -1440 0
c (0<=(SATLiteral(199) - aux250 + SATLiteral(231)))
231 1440 0
199 1440 0
199 231 1439 0
c (( - aux251 + SATLiteral(207) + SATLiteral(191))<=0)
-191 -1442 0
-207 -1442 0
-207 -191 -1443 0
c (0<=( - aux251 + SATLiteral(207) + SATLiteral(191)))
191 1443 0
207 1443 0
207 191 1442 0
c (( - aux252 + SATLiteral(215) + SATLiteral(223))<=0)
-223 -1445 0
-215 -1445 0
-215 -223 -1446 0
c (0<=( - aux252 + SATLiteral(215) + SATLiteral(223)))
223 1446 0
215 1446 0
215 223 1445 0
c ((SATLiteral(200) - aux253 + SATLiteral(232))<=0)
-232 -1448 0
-200 -1448 0
-200 -232 -1449 0
c (0<=(SATLiteral(200) - aux253 + SATLiteral(232)))
232 1449 0
200 1449 0
200 232 1448 0
c (( - aux254 + SATLiteral(208) + SATLiteral(192))<=0)
-192 -1451 0
-208 -1451 0
-208 -192 -1452 0
c (0<=( - aux254 + SATLiteral(208) + SATLiteral(192)))
192 1452 0
208 1452 0
208 192 1451 0
c (( - aux255 + SATLiteral(216) + SATLiteral(224))<=0)
-224 -1454 0
-216 -1454 0
-216 -224 -1455 0
c (0<=( - aux255 + SATLiteral(216) + SATLiteral(224)))
224 1455 0
216 1455 0
216 224 1454 0
c ((SATLiteral(201) - aux256 + SATLiteral(233))<=0)
-233 -1457 0
-201 -1457 0
-201 -233 -1458 0
c (0<=(SATLiteral(201) - aux256 + SATLiteral(233)))
233 1458 0
201 1458 0
201 233 1457 0
c (( - aux257 + SATLiteral(209) + SATLiteral(193))<=0)
-193 -1460 0
-209 -1460 0
-209 -193 -1461 0
c (0<=( - aux257 + SATLiteral(209) + SATLiteral(193)))
193 1461 0
209 1461 0
209 193 1460 0
c (( - aux258 + SATLiteral(217) + SATLiteral(225))<=0)
-225 -1463 0
-217 -1463 0
-217 -225 -1464 0
c (0<=( - aux258 + SATLiteral(217) + SATLiteral(225)))
225 1464 0
217 1464 0
217 225 1463 0
c ((SATLiteral(202) - aux259 + SATLiteral(234))<=0)
-234 -1466 0
-202 -1466 0
-202 -234 -1467 0
c (0<=(SATLiteral(202) - aux259 + SATLiteral(234)))
234 1467 0
202 1467 0
202 234 1466 0
c (( - aux260 + SATLiteral(210) + SATLiteral(194))<=0)
-194 -1469 0
-210 -1469 0
-210 -194 -1470 0
c (0<=( - aux260 + SATLiteral(210) + SATLiteral(194)))
194 1470 0
210 1470 0
210 194 1469 0
c (( - aux261 + SATLiteral(218) + SATLiteral(226))<=0)
-226 -1472 0
-218 -1472 0
-218 -226 -1473 0
c (0<=( - aux261 + SATLiteral(218) + SATLiteral(226)))
226 1473 0
218 1473 0
218 226 1472 0
c ((SATLiteral(203) - aux262 + SATLiteral(235))<=0)
-235 -1475 0
-203 -1475 0
-203 -235 -1476 0
c (0<=(SATLiteral(203) - aux262 + SATLiteral(235)))
235 1476 0
203 1476 0
203 235 1475 0
c (( - aux263 + SATLiteral(211) + SATLiteral(195))<=0)
-195 -1478 0
-211 -1478 0
-211 -195 -1479 0
c (0<=( - aux263 + SATLiteral(211) + SATLiteral(195)))
195 1479 0
211 1479 0
211 195 1478 0
c (( - aux264 + SATLiteral(219) + SATLiteral(227))<=0)
-227 -1481 0
-219 -1481 0
-219 -227 -1482 0
c (0<=( - aux264 + SATLiteral(219) + SATLiteral(227)))
227 1482 0
219 1482 0
219 227 1481 0
c ((SATLiteral(204) - aux265 + SATLiteral(236))<=0)
-236 -1484 0
-204 -1484 0
-204 -236 -1485 0
c (0<=(SATLiteral(204) - aux265 + SATLiteral(236)))
236 1485 0
204 1485 0
204 236 1484 0
c (( - aux266 + SATLiteral(212) + SATLiteral(196))<=0)
-196 -1487 0
-212 -1487 0
-212 -196 -1488 0
c (0<=( - aux266 + SATLiteral(212) + SATLiteral(196)))
196 1488 0
212 1488 0
212 196 1487 0
c (( - aux267 + SATLiteral(220) + SATLiteral(228))<=0)
-228 -1490 0
-220 -1490 0
-220 -228 -1491 0
c (0<=( - aux267 + SATLiteral(220) + SATLiteral(228)))
228 1491 0
220 1491 0
220 228 1490 0
c ((aux271 - SATLiteral(1497) + SATLiteral(246))<=0)
1497 -246 0
c (0<=(aux271 - SATLiteral(1497) + SATLiteral(246)))
-1497 246 0
c ((SATLiteral(1497) - aux273 + SATLiteral(247))<=0)
-247 -1498 0
-1497 -1498 0
-1497 -247 -1499 0
c (0<=(SATLiteral(1497) - aux273 + SATLiteral(247)))
247 1499 0
1497 1499 0
1497 247 1498 0
c (( - aux274 + SATLiteral(318) + SATLiteral(319))<=0)
-319 -1501 0
-318 -1501 0
-318 -319 -1502 0
c (0<=( - aux274 + SATLiteral(318) + SATLiteral(319)))
319 1502 0
318 1502 0
318 319 1501 0
c ((aux277 - SATLiteral(1507) + SATLiteral(258))<=0)
1507 -258 0
c (0<=(aux277 - SATLiteral(1507) + SATLiteral(258)))
-1507 258 0
c ((SATLiteral(1507) - aux279 + SATLiteral(330))<=0)
-330 -1508 0
-1507 -1508 0
-1507 -330 -1509 0
c (0<=(SATLiteral(1507) - aux279 + SATLiteral(330)))
330 1509 0
1507 1509 0
1507 330 1508 0
c (( - aux280 + SATLiteral(259) + SATLiteral(331))<=0)
-331 -1511 0
-259 -1511 0
-259 -331 -1512 0
c (0<=( - aux280 + SATLiteral(259) + SATLiteral(331)))
331 1512 0
259 1512 0
259 331 1511 0
c ((aux280 - aux281 + SATLiteral(474))<=0)
1511 -1514 0
1512 -1515 0
-474 -1514 0
-474 1511 -1515 0
-474 1512 -1517 0
c (0<=(aux280 - aux281 + SATLiteral(474)))
-1512 1517 0
-1511 1515 0
474 1517 0
474 -1512 1515 0
474 -1511 1514 0
c ((SATLiteral(271) + aux283 - SATLiteral(1521))<=0)
-271 1521 0
c (0<=(SATLiteral(271) + aux283 - SATLiteral(1521)))
271 -1521 0
c ((SATLiteral(1521) - aux285 + SATLiteral(342))<=0)
-342 -1522 0
-1521 -1522 0
-1521 -342 -1523 0
c (0<=(SATLiteral(1521) - aux285 + SATLiteral(342)))
342 1523 0
1521 1523 0
1521 342 1522 0
c (( - aux286 + SATLiteral(487) + SATLiteral(343))<=0)
-343 -1525 0
-487 -1525 0
-487 -343 -1526 0
c (0<=( - aux286 + SATLiteral(487) + SATLiteral(343)))
343 1526 0
487 1526 0
487 343 1525 0
c ((SATLiteral(270) - aux287 + SATLiteral(486))<=0)
-486 -1528 0
-270 -1528 0
-270 -486 -1529 0
c (0<=(SATLiteral(270) - aux287 + SATLiteral(486)))
486 1529 0
270 1529 0
270 486 1528 0
c ((aux285 + aux287 - aux288)<=0)
1528 -1531 0
1529 -1532 0
1522 -1531 0
1522 1528 -1532 0
1522 1529 -1534 0
1523 -1532 0
1523 1528 -1534 0
1523 1529 -1536 0
c (0<=(aux285 + aux287 - aux288))
-1529 1536 0
-1528 1534 0
-1523 1536 0
-1523 -1529 1534 0
-1523 -1528 1532 0
-1522 1534 0
-1522 -1529 1532 0
-1522 -1528 1531 0
c ((SATLiteral(283) + aux290 - SATLiteral(1540))<=0)
-283 1540 0
c (0<=(SATLiteral(283) + aux290 - SATLiteral(1540)))
283 -1540 0
c ((SATLiteral(1540) - aux292 + SATLiteral(355))<=0)
-355 -1541 0
-1540 -1541 0
-1540 -355 -1542 0
c (0<=(SATLiteral(1540) - aux292 + SATLiteral(355)))
355 1542 0
1540 1542 0
1540 355 1541 0
c (( - aux293 + SATLiteral(498) + SATLiteral(354))<=0)
-354 -1544 0
-498 -1544 0
-498 -354 -1545 0
c (0<=( - aux293 + SATLiteral(498) + SATLiteral(354)))
354 1545 0
498 1545 0
498 354 1544 0
c ((SATLiteral(282) - aux294 + SATLiteral(499))<=0)
-499 -1547 0
-282 -1547 0
-282 -499 -1548 0
c (0<=(SATLiteral(282) - aux294 + SATLiteral(499)))
499 1548 0
282 1548 0
282 499 1547 0
c ((aux292 + aux294 - aux295)<=0)
1547 -1550 0
1548 -1551 0
1541 -1550 0
1541 1547 -1551 0
1541 1548 -1553 0
1542 -1551 0
1542 1547 -1553 0
1542 1548 -1555 0
c (0<=(aux292 + aux294 - aux295))
-1548 1555 0
-1547 1553 0
-1542 1555 0
-1542 -1548 1553 0
-1542 -1547 1551 0
-1541 1553 0
-1541 -1548 1551 0
-1541 -1547 1550 0
c ((aux298 - SATLiteral(1560) + SATLiteral(511))<=0)
1560 -511 0
c (0<=(aux298 - SATLiteral(1560) + SATLiteral(511)))
-1560 511 0
c ((SATLiteral(1560) - aux300 + SATLiteral(510))<=0)
-510 -1561 0
-1560 -1561 0
-1560 -510 -1562 0
c (0<=(SATLiteral(1560) - aux300 + SATLiteral(510)))
510 1562 0
1560 1562 0
1560 510 1561 0
c ((SATLiteral(294) + SATLiteral(295) - aux301)<=0)
-295 -1564 0
-294 -1564 0
-294 -295 -1565 0
c (0<=(SATLiteral(294) + SATLiteral(295) - aux301))
295 1565 0
294 1565 0
294 295 1564 0
c ((aux301 - aux302 + SATLiteral(366))<=0)
1564 -1567 0
1565 -1568 0
-366 -1567 0
-366 1564 -1568 0
-366 1565 -1570 0
c (0<=(aux301 - aux302 + SATLiteral(366)))
-1565 1570 0
-1564 1568 0
366 1570 0
366 -1565 1568 0
366 -1564 1567 0
c ((aux306 - SATLiteral(1576) + SATLiteral(522))<=0)
1576 -522 0
c (0<=(aux306 - SATLiteral(1576) + SATLiteral(522)))
-1576 522 0
c ((SATLiteral(1576) - aux308 + SATLiteral(523))<=0)
-523 -1577 0
-1576 -1577 0
-1576 -523 -1578 0
c (0<=(SATLiteral(1576) - aux308 + SATLiteral(523)))
523 1578 0
1576 1578 0
1576 523 1577 0
c (( - aux309 + SATLiteral(306) + SATLiteral(307))<=0)
-307 -1580 0
-306 -1580 0
-306 -307 -1581 0
c (0<=( - aux309 + SATLiteral(306) + SATLiteral(307)))
307 1581 0
306 1581 0
306 307 1580 0
c ((aux312 - SATLiteral(1586) + SATLiteral(248))<=0)
1586 -248 0
c (0<=(aux312 - SATLiteral(1586) + SATLiteral(248)))
-1586 248 0
c ((SATLiteral(1586) - aux314 + SATLiteral(392))<=0)
-392 -1587 0
-1586 -1587 0
-1586 -392 -1588 0
c (0<=(SATLiteral(1586) - aux314 + SATLiteral(392)))
392 1588 0
1586 1588 0
1586 392 1587 0
c ((SATLiteral(321) - aux315 + SATLiteral(249))<=0)
-249 -1590 0
-321 -1590 0
-321 -249 -1591 0
c (0<=(SATLiteral(321) - aux315 + SATLiteral(249)))
249 1591 0
321 1591 0
321 249 1590 0
c ((SATLiteral(320) + aux315 - aux316)<=0)
1590 -1593 0
1591 -1594 0
-320 -1593 0
-320 1590 -1594 0
-320 1591 -1596 0
c (0<=(SATLiteral(320) + aux315 - aux316))
-1591 1596 0
-1590 1594 0
320 1596 0
320 -1591 1594 0
320 -1590 1593 0
c ((aux318 - SATLiteral(1600) + SATLiteral(476))<=0)
1600 -476 0
c (0<=(aux318 - SATLiteral(1600) + SATLiteral(476)))
-1600 476 0
c ((SATLiteral(333) + SATLiteral(1600) - aux320)<=0)
-1600 -1601 0
-333 -1601 0
-333 -1600 -1602 0
c (0<=(SATLiteral(333) + SATLiteral(1600) - aux320))
1600 1602 0
333 1602 0
333 1600 1601 0
c ((SATLiteral(332) - aux321 + SATLiteral(261))<=0)
-261 -1604 0
-332 -1604 0
-332 -261 -1605 0
c (0<=(SATLiteral(332) - aux321 + SATLiteral(261)))
261 1605 0
332 1605 0
332 261 1604 0
c (( - aux322 + SATLiteral(404) + SATLiteral(260))<=0)
-260 -1607 0
-404 -1607 0
-404 -260 -1608 0
c (0<=( - aux322 + SATLiteral(404) + SATLiteral(260)))
260 1608 0
404 1608 0
404 260 1607 0
c ((aux320 + aux322 - aux323)<=0)
1607 -1610 0
1608 -1611 0
1601 -1610 0
1601 1607 -1611 0
1601 1608 -1613 0
1602 -1611 0
1602 1607 -1613 0
1602 1608 -1615 0
c (0<=(aux320 + aux322 - aux323))
-1608 1615 0
-1607 1613 0
-1602 1615 0
-1602 -1608 1613 0
-1602 -1607 1611 0
-1601 1613 0
-1601 -1608 1611 0
-1601 -1607 1610 0
c ((aux324 - SATLiteral(1618) + SATLiteral(273))<=0)
1618 -273 0
c (0<=(aux324 - SATLiteral(1618) + SATLiteral(273)))
-1618 273 0
c ((SATLiteral(1618) - aux326 + SATLiteral(489))<=0)
-489 -1619 0
-1618 -1619 0
-1618 -489 -1620 0
c (0<=(SATLiteral(1618) - aux326 + SATLiteral(489)))
489 1620 0
1618 1620 0
1618 489 1619 0
c (( - aux327 + SATLiteral(488) + SATLiteral(344))<=0)
-344 -1622 0
-488 -1622 0
-488 -344 -1623 0
c (0<=( - aux327 + SATLiteral(488) + SATLiteral(344)))
344 1623 0
488 1623 0
488 344 1622 0
c (( - aux328 + SATLiteral(416) + SATLiteral(345))<=0)
-345 -1625 0
-416 -1625 0
-416 -345 -1626 0
c (0<=( - aux328 + SATLiteral(416) + SATLiteral(345)))
345 1626 0
416 1626 0
416 345 1625 0
c ((aux328 - aux329 + SATLiteral(272))<=0)
1625 -1628 0
1626 -1629 0
-272 -1628 0
-272 1625 -1629 0
-272 1626 -1631 0
c (0<=(aux328 - aux329 + SATLiteral(272)))
-1626 1631 0
-1625 1629 0
272 1631 0
272 -1626 1629 0
272 -1625 1628 0
c ((aux326 + aux327 - aux330)<=0)
1622 -1633 0
1623 -1634 0
1619 -1633 0
1619 1622 -1634 0
1619 1623 -1636 0
1620 -1634 0
1620 1622 -1636 0
1620 1623 -1638 0
c (0<=(aux326 + aux327 - aux330))
-1623 1638 0
-1622 1636 0
-1620 1638 0
-1620 -1623 1636 0
-1620 -1622 1634 0
-1619 1636 0
-1619 -1623 1634 0
-1619 -1622 1633 0
c ((aux331 - SATLiteral(1641) + SATLiteral(285))<=0)
1641 -285 0
c (0<=(aux331 - SATLiteral(1641) + SATLiteral(285)))
-1641 285 0
c (( - aux333 + SATLiteral(356) + SATLiteral(357))<=0)
-357 -1642 0
-356 -1642 0
-356 -357 -1643 0
c (0<=( - aux333 + SATLiteral(356) + SATLiteral(357)))
357 1643 0
356 1643 0
356 357 1642 0
c ((SATLiteral(1641) - aux334 + SATLiteral(501))<=0)
-501 -1645 0
-1641 -1645 0
-1641 -501 -1646 0
c (0<=(SATLiteral(1641) - aux334 + SATLiteral(501)))
501 1646 0
1641 1646 0
1641 501 1645 0
c ((SATLiteral(428) - aux335 + SATLiteral(500))<=0)
-500 -1648 0
-428 -1648 0
-428 -500 -1649 0
c (0<=(SATLiteral(428) - aux335 + SATLiteral(500)))
500 1649 0
428 1649 0
428 500 1648 0
c ((aux335 - aux336 + SATLiteral(284))<=0)
1648 -1651 0
1649 -1652 0
-284 -1651 0
-284 1648 -1652 0
-284 1649 -1654 0
c (0<=(aux335 - aux336 + SATLiteral(284)))
-1649 1654 0
-1648 1652 0
284 1654 0
284 -1649 1652 0
284 -1648 1651 0
c ((aux333 + aux334 - aux337)<=0)
1645 -1656 0
1646 -1657 0
1642 -1656 0
1642 1645 -1657 0
1642 1646 -1659 0
1643 -1657 0
1643 1645 -1659 0
1643 1646 -1661 0
c (0<=(aux333 + aux334 - aux337))
-1646 1661 0
-1645 1659 0
-1643 1661 0
-1643 -1646 1659 0
-1643 -1645 1657 0
-1642 1659 0
-1642 -1646 1657 0
-1642 -1645 1656 0
c ((aux339 - SATLiteral(1665) + SATLiteral(297))<=0)
1665 -297 0
c (0<=(aux339 - SATLiteral(1665) + SATLiteral(297)))
-1665 297 0
c ((SATLiteral(1665) - aux341 + SATLiteral(512))<=0)
-512 -1666 0
-1665 -1666 0
-1665 -512 -1667 0
c (0<=(SATLiteral(1665) - aux341 + SATLiteral(512)))
512 1667 0
1665 1667 0
1665 512 1666 0
c (( - aux342 + SATLiteral(296) + SATLiteral(513))<=0)
-513 -1669 0
-296 -1669 0
-296 -513 -1670 0
c (0<=( - aux342 + SATLiteral(296) + SATLiteral(513)))
513 1670 0
296 1670 0
296 513 1669 0
c ((SATLiteral(440) - aux343 + SATLiteral(368))<=0)
-368 -1672 0
-440 -1672 0
-440 -368 -1673 0
c (0<=(SATLiteral(440) - aux343 + SATLiteral(368)))
368 1673 0
440 1673 0
440 368 1672 0
c ((aux341 + aux343 - aux344)<=0)
1672 -1675 0
1673 -1676 0
1666 -1675 0
1666 1672 -1676 0
1666 1673 -1678 0
1667 -1676 0
1667 1672 -1678 0
1667 1673 -1680 0
c (0<=(aux341 + aux343 - aux344))
-1673 1680 0
-1672 1678 0
-1667 1680 0
-1667 -1673 1678 0
-1667 -1672 1676 0
-1666 1678 0
-1666 -1673 1676 0
-1666 -1672 1675 0
c ((SATLiteral(309) + aux347 - SATLiteral(1685))<=0)
-309 1685 0
c (0<=(SATLiteral(309) + aux347 - SATLiteral(1685)))
309 -1685 0
c ((SATLiteral(1685) - aux349 + SATLiteral(452))<=0)
-452 -1686 0
-1685 -1686 0
-1685 -452 -1687 0
c (0<=(SATLiteral(1685) - aux349 + SATLiteral(452)))
452 1687 0
1685 1687 0
1685 452 1686 0
c ((SATLiteral(308) - aux350 + SATLiteral(524))<=0)
-524 -1689 0
-308 -1689 0
-308 -524 -1690 0
c (0<=(SATLiteral(308) - aux350 + SATLiteral(524)))
524 1690 0
308 1690 0
308 524 1689 0
c ((aux350 - aux351 + SATLiteral(525))<=0)
1689 -1692 0
1690 -1693 0
-525 -1692 0
-525 1689 -1693 0
-525 1690 -1695 0
c (0<=(aux350 - aux351 + SATLiteral(525)))
-1690 1695 0
-1689 1693 0
525 1695 0
525 -1690 1693 0
525 -1689 1692 0
c ((aux353 - SATLiteral(1699) + SATLiteral(395))<=0)
1699 -395 0
c (0<=(aux353 - SATLiteral(1699) + SATLiteral(395)))
-1699 395 0
c ((SATLiteral(1699) - aux355 + SATLiteral(394))<=0)
-394 -1700 0
-1699 -1700 0
-1699 -394 -1701 0
c (0<=(SATLiteral(1699) - aux355 + SATLiteral(394)))
394 1701 0
1699 1701 0
1699 394 1700 0
c (( - aux356 + SATLiteral(322) + SATLiteral(251))<=0)
-251 -1703 0
-322 -1703 0
-322 -251 -1704 0
c (0<=( - aux356 + SATLiteral(322) + SATLiteral(251)))
251 1704 0
322 1704 0
322 251 1703 0
c (( - aux357 + SATLiteral(323) + SATLiteral(250))<=0)
-250 -1706 0
-323 -1706 0
-323 -250 -1707 0
c (0<=( - aux357 + SATLiteral(323) + SATLiteral(250)))
250 1707 0
323 1707 0
323 250 1706 0
c ((aux355 + aux357 - aux358)<=0)
1706 -1709 0
1707 -1710 0
1700 -1709 0
1700 1706 -1710 0
1700 1707 -1712 0
1701 -1710 0
1701 1706 -1712 0
1701 1707 -1714 0
c (0<=(aux355 + aux357 - aux358))
-1707 1714 0
-1706 1712 0
-1701 1714 0
-1701 -1707 1712 0
-1701 -1706 1710 0
-1700 1712 0
-1700 -1707 1710 0
-1700 -1706 1709 0
c ((aux359 - SATLiteral(1717) + SATLiteral(335))<=0)
1717 -335 0
c (0<=(aux359 - SATLiteral(1717) + SATLiteral(335)))
-1717 335 0
c (( - aux361 + SATLiteral(478) + SATLiteral(262))<=0)
-262 -1718 0
-478 -1718 0
-478 -262 -1719 0
c (0<=( - aux361 + SATLiteral(478) + SATLiteral(262)))
262 1719 0
478 1719 0
478 262 1718 0
c ((SATLiteral(1717) - aux362 + SATLiteral(407))<=0)
-407 -1721 0
-1717 -1721 0
-1717 -407 -1722 0
c (0<=(SATLiteral(1717) - aux362 + SATLiteral(407)))
407 1722 0
1717 1722 0
1717 407 1721 0
c (( - aux363 + SATLiteral(406) + SATLiteral(263))<=0)
-263 -1724 0
-406 -1724 0
-406 -263 -1725 0
c (0<=( - aux363 + SATLiteral(406) + SATLiteral(263)))
263 1725 0
406 1725 0
406 263 1724 0
c ((aux363 - aux364 + SATLiteral(334))<=0)
1724 -1727 0
1725 -1728 0
-334 -1727 0
-334 1724 -1728 0
-334 1725 -1730 0
c (0<=(aux363 - aux364 + SATLiteral(334)))
-1725 1730 0
-1724 1728 0
334 1730 0
334 -1725 1728 0
334 -1724 1727 0
c ((aux361 + aux362 - aux365)<=0)
1721 -1732 0
1722 -1733 0
1718 -1732 0
1718 1721 -1733 0
1718 1722 -1735 0
1719 -1733 0
1719 1721 -1735 0
1719 1722 -1737 0
c (0<=(aux361 + aux362 - aux365))
-1722 1737 0
-1721 1735 0
-1719 1737 0
-1719 -1722 1735 0
-1719 -1721 1733 0
-1718 1735 0
-1718 -1722 1733 0
-1718 -1721 1732 0
c ((SATLiteral(1739) - aux367 + SATLiteral(275))<=0)
-275 -1740 0
-1739 -1740 0
-1739 -275 -1741 0
c (0<=(SATLiteral(1739) - aux367 + SATLiteral(275)))
275 1741 0
1739 1741 0
1739 275 1740 0
c (( - aux368 + SATLiteral(347) + SATLiteral(274))<=0)
-274 -1743 0
-347 -1743 0
-347 -274 -1744 0
c (0<=( - aux368 + SATLiteral(347) + SATLiteral(274)))
274 1744 0
347 1744 0
347 274 1743 0
c (( - aux369 + SATLiteral(346) + SATLiteral(418))<=0)
-418 -1746 0
-346 -1746 0
-346 -418 -1747 0
c (0<=( - aux369 + SATLiteral(346) + SATLiteral(418)))
418 1747 0
346 1747 0
346 418 1746 0
c ((SATLiteral(490) - aux370 + SATLiteral(419))<=0)
-419 -1749 0
-490 -1749 0
-490 -419 -1750 0
c (0<=(SATLiteral(490) - aux370 + SATLiteral(419)))
419 1750 0
490 1750 0
490 419 1749 0
c ((aux368 + aux370 - aux371)<=0)
1749 -1752 0
1750 -1753 0
1743 -1752 0
1743 1749 -1753 0
1743 1750 -1755 0
1744 -1753 0
1744 1749 -1755 0
1744 1750 -1757 0
c (0<=(aux368 + aux370 - aux371))
-1750 1757 0
-1749 1755 0
-1744 1757 0
-1744 -1750 1755 0
-1744 -1749 1753 0
-1743 1755 0
-1743 -1750 1753 0
-1743 -1749 1752 0
c ((aux367 + aux369 - aux372)<=0)
1746 -1759 0
1747 -1760 0
1740 -1759 0
1740 1746 -1760 0
1740 1747 -1762 0
1741 -1760 0
1741 1746 -1762 0
1741 1747 -1764 0
c (0<=(aux367 + aux369 - aux372))
-1747 1764 0
-1746 1762 0
-1741 1764 0
-1741 -1747 1762 0
-1741 -1746 1760 0
-1740 1762 0
-1740 -1747 1760 0
-1740 -1746 1759 0
c ((SATLiteral(359) + SATLiteral(1766) - aux374)<=0)
-1766 -1767 0
-359 -1767 0
-359 -1766 -1768 0
c (0<=(SATLiteral(359) + SATLiteral(1766) - aux374))
1766 1768 0
359 1768 0
359 1766 1767 0
c ((SATLiteral(503) - aux375 + SATLiteral(287))<=0)
-287 -1770 0
-503 -1770 0
-503 -287 -1771 0
c (0<=(SATLiteral(503) - aux375 + SATLiteral(287)))
287 1771 0
503 1771 0
503 287 1770 0
c (( - aux376 + SATLiteral(430) + SATLiteral(286))<=0)
-286 -1773 0
-430 -1773 0
-430 -286 -1774 0
c (0<=( - aux376 + SATLiteral(430) + SATLiteral(286)))
286 1774 0
430 1774 0
430 286 1773 0
c ((SATLiteral(358) - aux377 + SATLiteral(431))<=0)
-431 -1776 0
-358 -1776 0
-358 -431 -1777 0
c (0<=(SATLiteral(358) - aux377 + SATLiteral(431)))
431 1777 0
358 1777 0
358 431 1776 0
c ((aux375 + aux377 - aux378)<=0)
1776 -1779 0
1777 -1780 0
1770 -1779 0
1770 1776 -1780 0
1770 1777 -1782 0
1771 -1780 0
1771 1776 -1782 0
1771 1777 -1784 0
c (0<=(aux375 + aux377 - aux378))
-1777 1784 0
-1776 1782 0
-1771 1784 0
-1771 -1777 1782 0
-1771 -1776 1780 0
-1770 1782 0
-1770 -1777 1780 0
-1770 -1776 1779 0
c ((aux374 + aux376 - aux379)<=0)
1773 -1786 0
1774 -1787 0
1767 -1786 0
1767 1773 -1787 0
1767 1774 -1789 0
1768 -1787 0
1768 1773 -1789 0
1768 1774 -1791 0
c (0<=(aux374 + aux376 - aux379))
-1774 1791 0
-1773 1789 0
-1768 1791 0
-1768 -1774 1789 0
-1768 -1773 1787 0
-1767 1789 0
-1767 -1774 1787 0
-1767 -1773 1786 0
c ((SATLiteral(370) + aux380 - SATLiteral(1794))<=0)
-370 1794 0
c (0<=(SATLiteral(370) + aux380 - SATLiteral(1794)))
370 -1794 0
c ((SATLiteral(1794) - aux382 + SATLiteral(442))<=0)
-442 -1795 0
-1794 -1795 0
-1794 -442 -1796 0
c (0<=(SATLiteral(1794) - aux382 + SATLiteral(442)))
442 1796 0
1794 1796 0
1794 442 1795 0
c (( - aux383 + SATLiteral(299) + SATLiteral(514))<=0)
-514 -1798 0
-299 -1798 0
-299 -514 -1799 0
c (0<=( - aux383 + SATLiteral(299) + SATLiteral(514)))
514 1799 0
299 1799 0
299 514 1798 0
c (( - aux384 + SATLiteral(443) + SATLiteral(515))<=0)
-515 -1801 0
-443 -1801 0
-443 -515 -1802 0
c (0<=( - aux384 + SATLiteral(443) + SATLiteral(515)))
515 1802 0
443 1802 0
443 515 1801 0
c ((aux384 - aux385 + SATLiteral(298))<=0)
1801 -1804 0
1802 -1805 0
-298 -1804 0
-298 1801 -1805 0
-298 1802 -1807 0
c (0<=(aux384 - aux385 + SATLiteral(298)))
-1802 1807 0
-1801 1805 0
298 1807 0
298 -1802 1805 0
298 -1801 1804 0
c ((aux382 + aux383 - aux386)<=0)
1798 -1809 0
1799 -1810 0
1795 -1809 0
1795 1798 -1810 0
1795 1799 -1812 0
1796 -1810 0
1796 1798 -1812 0
1796 1799 -1814 0
c (0<=(aux382 + aux383 - aux386))
-1799 1814 0
-1798 1812 0
-1796 1814 0
-1796 -1799 1812 0
-1796 -1798 1810 0
-1795 1812 0
-1795 -1799 1810 0
-1795 -1798 1809 0
c ((aux388 - SATLiteral(1818) + SATLiteral(310))<=0)
1818 -310 0
c (0<=(aux388 - SATLiteral(1818) + SATLiteral(310)))
-1818 310 0
c ((SATLiteral(1818) - aux390 + SATLiteral(526))<=0)
-526 -1819 0
-1818 -1819 0
-1818 -526 -1820 0
c (0<=(SATLiteral(1818) - aux390 + SATLiteral(526)))
526 1820 0
1818 1820 0
1818 526 1819 0
c (( - aux391 + SATLiteral(455) + SATLiteral(527))<=0)
-527 -1822 0
-455 -1822 0
-455 -527 -1823 0
c (0<=( - aux391 + SATLiteral(455) + SATLiteral(527)))
527 1823 0
455 1823 0
455 527 1822 0
c (( - aux392 + SATLiteral(454) + SATLiteral(311))<=0)
-311 -1825 0
-454 -1825 0
-454 -311 -1826 0
c (0<=( - aux392 + SATLiteral(454) + SATLiteral(311)))
311 1826 0
454 1826 0
454 311 1825 0
c ((aux390 + aux392 - aux393)<=0)
1825 -1828 0
1826 -1829 0
1819 -1828 0
1819 1825 -1829 0
1819 1826 -1831 0
1820 -1829 0
1820 1825 -1831 0
1820 1826 -1833 0
c (0<=(aux390 + aux392 - aux393))
-1826 1833 0
-1825 1831 0
-1820 1833 0
-1820 -1826 1831 0
-1820 -1825 1829 0
-1819 1831 0
-1819 -1826 1829 0
-1819 -1825 1828 0
c ((aux395 - SATLiteral(1837) + SATLiteral(397))<=0)
1837 -397 0
c (0<=(aux395 - SATLiteral(1837) + SATLiteral(397)))
-1837 397 0
c ((SATLiteral(1837) - aux397 + SATLiteral(396))<=0)
-396 -1838 0
-1837 -1838 0
-1837 -396 -1839 0
c (0<=(SATLiteral(1837) - aux397 + SATLiteral(396)))
396 1839 0
1837 1839 0
1837 396 1838 0
c (( - aux398 + SATLiteral(325) + SATLiteral(253))<=0)
-253 -1841 0
-325 -1841 0
-325 -253 -1842 0
c (0<=( - aux398 + SATLiteral(325) + SATLiteral(253)))
253 1842 0
325 1842 0
325 253 1841 0
c (( - aux399 + SATLiteral(324) + SATLiteral(252))<=0)
-252 -1844 0
-324 -1844 0
-324 -252 -1845 0
c (0<=( - aux399 + SATLiteral(324) + SATLiteral(252)))
252 1845 0
324 1845 0
324 252 1844 0
c ((aux397 + aux399 - aux400)<=0)
1844 -1847 0
1845 -1848 0
1838 -1847 0
1838 1844 -1848 0
1838 1845 -1850 0
1839 -1848 0
1839 1844 -1850 0
1839 1845 -1852 0
c (0<=(aux397 + aux399 - aux400))
-1845 1852 0
-1844 1850 0
-1839 1852 0
-1839 -1845 1850 0
-1839 -1844 1848 0
-1838 1850 0
-1838 -1845 1848 0
-1838 -1844 1847 0
c ((aux401 - SATLiteral(1855) + SATLiteral(336))<=0)
1855 -336 0
c (0<=(aux401 - SATLiteral(1855) + SATLiteral(336)))
-1855 336 0
c ((SATLiteral(1855) - aux403 + SATLiteral(409))<=0)
-409 -1856 0
-1855 -1856 0
-1855 -409 -1857 0
c (0<=(SATLiteral(1855) - aux403 + SATLiteral(409)))
409 1857 0
1855 1857 0
1855 409 1856 0
c (( - aux404 + SATLiteral(408) + SATLiteral(264))<=0)
-264 -1859 0
-408 -1859 0
-408 -264 -1860 0
c (0<=( - aux404 + SATLiteral(408) + SATLiteral(264)))
264 1860 0
408 1860 0
408 264 1859 0
c (( - aux405 + SATLiteral(480) + SATLiteral(337))<=0)
-337 -1862 0
-480 -1862 0
-480 -337 -1863 0
c (0<=( - aux405 + SATLiteral(480) + SATLiteral(337)))
337 1863 0
480 1863 0
480 337 1862 0
c ((aux405 - aux406 + SATLiteral(265))<=0)
1862 -1865 0
1863 -1866 0
-265 -1865 0
-265 1862 -1866 0
-265 1863 -1868 0
c (0<=(aux405 - aux406 + SATLiteral(265)))
-1863 1868 0
-1862 1866 0
265 1868 0
265 -1863 1866 0
265 -1862 1865 0
c ((aux403 + aux404 - aux407)<=0)
1859 -1870 0
1860 -1871 0
1856 -1870 0
1856 1859 -1871 0
1856 1860 -1873 0
1857 -1871 0
1857 1859 -1873 0
1857 1860 -1875 0
c (0<=(aux403 + aux404 - aux407))
-1860 1875 0
-1859 1873 0
-1857 1875 0
-1857 -1860 1873 0
-1857 -1859 1871 0
-1856 1873 0
-1856 -1860 1871 0
-1856 -1859 1870 0
c ((SATLiteral(1877) - aux409 + SATLiteral(276))<=0)
-276 -1878 0
-1877 -1878 0
-1877 -276 -1879 0
c (0<=(SATLiteral(1877) - aux409 + SATLiteral(276)))
276 1879 0
1877 1879 0
1877 276 1878 0
c (( - aux410 + SATLiteral(492) + SATLiteral(349))<=0)
-349 -1881 0
-492 -1881 0
-492 -349 -1882 0
c (0<=( - aux410 + SATLiteral(492) + SATLiteral(349)))
349 1882 0
492 1882 0
492 349 1881 0
c (( - aux411 + SATLiteral(493) + SATLiteral(421))<=0)
-421 -1884 0
-493 -1884 0
-493 -421 -1885 0
c (0<=( - aux411 + SATLiteral(493) + SATLiteral(421)))
421 1885 0
493 1885 0
493 421 1884 0
c (( - aux412 + SATLiteral(348) + SATLiteral(420))<=0)
-420 -1887 0
-348 -1887 0
-348 -420 -1888 0
c (0<=( - aux412 + SATLiteral(348) + SATLiteral(420)))
420 1888 0
348 1888 0
348 420 1887 0
c ((aux410 + aux412 - aux413)<=0)
1887 -1890 0
1888 -1891 0
1881 -1890 0
1881 1887 -1891 0
1881 1888 -1893 0
1882 -1891 0
1882 1887 -1893 0
1882 1888 -1895 0
c (0<=(aux410 + aux412 - aux413))
-1888 1895 0
-1887 1893 0
-1882 1895 0
-1882 -1888 1893 0
-1882 -1887 1891 0
-1881 1893 0
-1881 -1888 1891 0
-1881 -1887 1890 0
c ((aux409 + aux411 - aux414)<=0)
1884 -1897 0
1885 -1898 0
1878 -1897 0
1878 1884 -1898 0
1878 1885 -1900 0
1879 -1898 0
1879 1884 -1900 0
1879 1885 -1902 0
c (0<=(aux409 + aux411 - aux414))
-1885 1902 0
-1884 1900 0
-1879 1902 0
-1879 -1885 1900 0
-1879 -1884 1898 0
-1878 1900 0
-1878 -1885 1898 0
-1878 -1884 1897 0
c ((SATLiteral(1904) - aux416 + SATLiteral(289))<=0)
-289 -1905 0
-1904 -1905 0
-1904 -289 -1906 0
c (0<=(SATLiteral(1904) - aux416 + SATLiteral(289)))
289 1906 0
1904 1906 0
1904 289 1905 0
c (( - aux417 + SATLiteral(361) + SATLiteral(288))<=0)
-288 -1908 0
-361 -1908 0
-361 -288 -1909 0
c (0<=( - aux417 + SATLiteral(361) + SATLiteral(288)))
288 1909 0
361 1909 0
361 288 1908 0
c (( - aux418 + SATLiteral(505) + SATLiteral(433))<=0)
-433 -1911 0
-505 -1911 0
-505 -433 -1912 0
c (0<=( - aux418 + SATLiteral(505) + SATLiteral(433)))
433 1912 0
505 1912 0
505 433 1911 0
c (( - aux419 + SATLiteral(360) + SATLiteral(432))<=0)
-432 -1914 0
-360 -1914 0
-360 -432 -1915 0
c (0<=( - aux419 + SATLiteral(360) + SATLiteral(432)))
432 1915 0
360 1915 0
360 432 1914 0
c ((aux417 + aux419 - aux420)<=0)
1914 -1917 0
1915 -1918 0
1908 -1917 0
1908 1914 -1918 0
1908 1915 -1920 0
1909 -1918 0
1909 1914 -1920 0
1909 1915 -1922 0
c (0<=(aux417 + aux419 - aux420))
-1915 1922 0
-1914 1920 0
-1909 1922 0
-1909 -1915 1920 0
-1909 -1914 1918 0
-1908 1920 0
-1908 -1915 1918 0
-1908 -1914 1917 0
c ((aux416 + aux418 - aux421)<=0)
1911 -1924 0
1912 -1925 0
1905 -1924 0
1905 1911 -1925 0
1905 1912 -1927 0
1906 -1925 0
1906 1911 -1927 0
1906 1912 -1929 0
c (0<=(aux416 + aux418 - aux421))
-1912 1929 0
-1911 1927 0
-1906 1929 0
-1906 -1912 1927 0
-1906 -1911 1925 0
-1905 1927 0
-1905 -1912 1925 0
-1905 -1911 1924 0
c ((aux422 - SATLiteral(1932) + SATLiteral(516))<=0)
1932 -516 0
c (0<=(aux422 - SATLiteral(1932) + SATLiteral(516)))
-1932 516 0
c (( - aux424 + SATLiteral(300) + SATLiteral(301))<=0)
-301 -1933 0
-300 -1933 0
-300 -301 -1934 0
c (0<=( - aux424 + SATLiteral(300) + SATLiteral(301)))
301 1934 0
300 1934 0
300 301 1933 0
c ((SATLiteral(1932) - aux425 + SATLiteral(445))<=0)
-445 -1936 0
-1932 -1936 0
-1932 -445 -1937 0
c (0<=(SATLiteral(1932) - aux425 + SATLiteral(445)))
445 1937 0
1932 1937 0
1932 445 1936 0
c (( - aux426 + SATLiteral(372) + SATLiteral(444))<=0)
-444 -1939 0
-372 -1939 0
-372 -444 -1940 0
c (0<=( - aux426 + SATLiteral(372) + SATLiteral(444)))
444 1940 0
372 1940 0
372 444 1939 0
c ((aux426 - aux427 + SATLiteral(517))<=0)
1939 -1942 0
1940 -1943 0
-517 -1942 0
-517 1939 -1943 0
-517 1940 -1945 0
c (0<=(aux426 - aux427 + SATLiteral(517)))
-1940 1945 0
-1939 1943 0
517 1945 0
517 -1940 1943 0
517 -1939 1942 0
c ((aux424 + aux425 - aux428)<=0)
1936 -1947 0
1937 -1948 0
1933 -1947 0
1933 1936 -1948 0
1933 1937 -1950 0
1934 -1948 0
1934 1936 -1950 0
1934 1937 -1952 0
c (0<=(aux424 + aux425 - aux428))
-1937 1952 0
-1936 1950 0
-1934 1952 0
-1934 -1937 1950 0
-1934 -1936 1948 0
-1933 1950 0
-1933 -1937 1948 0
-1933 -1936 1947 0
c ((SATLiteral(529) + aux430 - SATLiteral(1956))<=0)
-529 1956 0
c (0<=(SATLiteral(529) + aux430 - SATLiteral(1956)))
529 -1956 0
c ((SATLiteral(1956) - aux432 + SATLiteral(457))<=0)
-457 -1957 0
-1956 -1957 0
-1956 -457 -1958 0
c (0<=(SATLiteral(1956) - aux432 + SATLiteral(457)))
457 1958 0
1956 1958 0
1956 457 1957 0
c (( - aux433 + SATLiteral(456) + SATLiteral(312))<=0)
-312 -1960 0
-456 -1960 0
-456 -312 -1961 0
c (0<=( - aux433 + SATLiteral(456) + SATLiteral(312)))
312 1961 0
456 1961 0
456 312 1960 0
c ((SATLiteral(528) - aux434 + SATLiteral(313))<=0)
-313 -1963 0
-528 -1963 0
-528 -313 -1964 0
c (0<=(SATLiteral(528) - aux434 + SATLiteral(313)))
313 1964 0
528 1964 0
528 313 1963 0
c ((aux432 + aux434 - aux435)<=0)
1963 -1966 0
1964 -1967 0
1957 -1966 0
1957 1963 -1967 0
1957 1964 -1969 0
1958 -1967 0
1958 1963 -1969 0
1958 1964 -1971 0
c (0<=(aux432 + aux434 - aux435))
-1964 1971 0
-1963 1969 0
-1958 1971 0
-1958 -1964 1969 0
-1958 -1963 1967 0
-1957 1969 0
-1957 -1964 1967 0
-1957 -1963 1966 0
c ((aux438 - SATLiteral(1976) + SATLiteral(327))<=0)
1976 -327 0
c (0<=(aux438 - SATLiteral(1976) + SATLiteral(327)))
-1976 327 0
c ((SATLiteral(1976) - aux440 + SATLiteral(398))<=0)
-398 -1977 0
-1976 -1977 0
-1976 -398 -1978 0
c (0<=(SATLiteral(1976) - aux440 + SATLiteral(398)))
398 1978 0
1976 1978 0
1976 398 1977 0
c ((SATLiteral(254) - aux441 + SATLiteral(399))<=0)
-399 -1980 0
-254 -1980 0
-254 -399 -1981 0
c (0<=(SATLiteral(254) - aux441 + SATLiteral(399)))
399 1981 0
254 1981 0
254 399 1980 0
c ((aux441 - aux442 + SATLiteral(326))<=0)
1980 -1983 0
1981 -1984 0
-326 -1983 0
-326 1980 -1984 0
-326 1981 -1986 0
c (0<=(aux441 - aux442 + SATLiteral(326)))
-1981 1986 0
-1980 1984 0
326 1986 0
326 -1981 1984 0
326 -1980 1983 0
c ((aux444 - SATLiteral(1990) + SATLiteral(411))<=0)
1990 -411 0
c (0<=(aux444 - SATLiteral(1990) + SATLiteral(411)))
-1990 411 0
c ((SATLiteral(1990) - aux446 + SATLiteral(338))<=0)
-338 -1991 0
-1990 -1991 0
-1990 -338 -1992 0
c (0<=(SATLiteral(1990) - aux446 + SATLiteral(338)))
338 1992 0
1990 1992 0
1990 338 1991 0
c ((SATLiteral(266) - aux447 + SATLiteral(339))<=0)
-339 -1994 0
-266 -1994 0
-266 -339 -1995 0
c (0<=(SATLiteral(266) - aux447 + SATLiteral(339)))
339 1995 0
266 1995 0
266 339 1994 0
c (( - aux448 + SATLiteral(482) + SATLiteral(410))<=0)
-410 -1997 0
-482 -1997 0
-482 -410 -1998 0
c (0<=( - aux448 + SATLiteral(482) + SATLiteral(410)))
410 1998 0
482 1998 0
482 410 1997 0
c ((aux446 + aux448 - aux449)<=0)
1997 -2000 0
1998 -2001 0
1991 -2000 0
1991 1997 -2001 0
1991 1998 -2003 0
1992 -2001 0
1992 1997 -2003 0
1992 1998 -2005 0
c (0<=(aux446 + aux448 - aux449))
-1998 2005 0
-1997 2003 0
-1992 2005 0
-1992 -1998 2003 0
-1992 -1997 2001 0
-1991 2003 0
-1991 -1998 2001 0
-1991 -1997 2000 0
c ((aux450 - SATLiteral(2008) + SATLiteral(350))<=0)
2008 -350 0
c (0<=(aux450 - SATLiteral(2008) + SATLiteral(350)))
-2008 350 0
c ((SATLiteral(2008) - aux452 + SATLiteral(423))<=0)
-423 -2009 0
-2008 -2009 0
-2008 -423 -2010 0
c (0<=(SATLiteral(2008) - aux452 + SATLiteral(423)))
423 2010 0
2008 2010 0
2008 423 2009 0
c (( - aux453 + SATLiteral(422) + SATLiteral(278))<=0)
-278 -2012 0
-422 -2012 0
-422 -278 -2013 0
c (0<=( - aux453 + SATLiteral(422) + SATLiteral(278)))
278 2013 0
422 2013 0
422 278 2012 0
c (( - aux454 + SATLiteral(494) + SATLiteral(351))<=0)
-351 -2015 0
-494 -2015 0
-494 -351 -2016 0
c (0<=( - aux454 + SATLiteral(494) + SATLiteral(351)))
351 2016 0
494 2016 0
494 351 2015 0
c ((aux454 - aux455 + SATLiteral(495))<=0)
2015 -2018 0
2016 -2019 0
-495 -2018 0
-495 2015 -2019 0
-495 2016 -2021 0
c (0<=(aux454 - aux455 + SATLiteral(495)))
-2016 2021 0
-2015 2019 0
495 2021 0
495 -2016 2019 0
495 -2015 2018 0
c ((aux452 + aux453 - aux456)<=0)
2012 -2023 0
2013 -2024 0
2009 -2023 0
2009 2012 -2024 0
2009 2013 -2026 0
2010 -2024 0
2010 2012 -2026 0
2010 2013 -2028 0
c (0<=(aux452 + aux453 - aux456))
-2013 2028 0
-2012 2026 0
-2010 2028 0
-2010 -2013 2026 0
-2010 -2012 2024 0
-2009 2026 0
-2009 -2013 2024 0
-2009 -2012 2023 0
c ((aux457 - SATLiteral(2031) + SATLiteral(362))<=0)
2031 -362 0
c (0<=(aux457 - SATLiteral(2031) + SATLiteral(362)))
-2031 362 0
c (( - aux459 + SATLiteral(363) + SATLiteral(290))<=0)
-290 -2032 0
-363 -2032 0
-363 -290 -2033 0
c (0<=( - aux459 + SATLiteral(363) + SATLiteral(290)))
290 2033 0
363 2033 0
363 290 2032 0
c ((SATLiteral(2031) - aux460 + SATLiteral(435))<=0)
-435 -2035 0
-2031 -2035 0
-2031 -435 -2036 0
c (0<=(SATLiteral(2031) - aux460 + SATLiteral(435)))
435 2036 0
2031 2036 0
2031 435 2035 0
c (( - aux461 + SATLiteral(507) + SATLiteral(434))<=0)
-434 -2038 0
-507 -2038 0
-507 -434 -2039 0
c (0<=( - aux461 + SATLiteral(507) + SATLiteral(434)))
434 2039 0
507 2039 0
507 434 2038 0
c ((aux461 - aux462 + SATLiteral(506))<=0)
2038 -2041 0
2039 -2042 0
-506 -2041 0
-506 2038 -2042 0
-506 2039 -2044 0
c (0<=(aux461 - aux462 + SATLiteral(506)))
-2039 2044 0
-2038 2042 0
506 2044 0
506 -2039 2042 0
506 -2038 2041 0
c ((aux459 + aux460 - aux463)<=0)
2035 -2046 0
2036 -2047 0
2032 -2046 0
2032 2035 -2047 0
2032 2036 -2049 0
2033 -2047 0
2033 2035 -2049 0
2033 2036 -2051 0
c (0<=(aux459 + aux460 - aux463))
-2036 2051 0
-2035 2049 0
-2033 2051 0
-2033 -2036 2049 0
-2033 -2035 2047 0
-2032 2049 0
-2032 -2036 2047 0
-2032 -2035 2046 0
c ((aux465 - SATLiteral(2055) + SATLiteral(447))<=0)
2055 -447 0
c (0<=(aux465 - SATLiteral(2055) + SATLiteral(447)))
-2055 447 0
c ((SATLiteral(2055) - aux467 + SATLiteral(446))<=0)
-446 -2056 0
-2055 -2056 0
-2055 -446 -2057 0
c (0<=(SATLiteral(2055) - aux467 + SATLiteral(446)))
446 2057 0
2055 2057 0
2055 446 2056 0
c (( - aux468 + SATLiteral(519) + SATLiteral(374))<=0)
-374 -2059 0
-519 -2059 0
-519 -374 -2060 0
c (0<=( - aux468 + SATLiteral(519) + SATLiteral(374)))
374 2060 0
519 2060 0
519 374 2059 0
c (( - aux469 + SATLiteral(518) + SATLiteral(302))<=0)
-302 -2062 0
-518 -2062 0
-518 -302 -2063 0
c (0<=( - aux469 + SATLiteral(518) + SATLiteral(302)))
302 2063 0
518 2063 0
518 302 2062 0
c ((aux467 + aux469 - aux470)<=0)
2062 -2065 0
2063 -2066 0
2056 -2065 0
2056 2062 -2066 0
2056 2063 -2068 0
2057 -2066 0
2057 2062 -2068 0
2057 2063 -2070 0
c (0<=(aux467 + aux469 - aux470))
-2063 2070 0
-2062 2068 0
-2057 2070 0
-2057 -2063 2068 0
-2057 -2062 2066 0
-2056 2068 0
-2056 -2063 2066 0
-2056 -2062 2065 0
c ((aux473 - SATLiteral(2075) + SATLiteral(531))<=0)
2075 -531 0
c (0<=(aux473 - SATLiteral(2075) + SATLiteral(531)))
-2075 531 0
c ((SATLiteral(2075) - aux475 + SATLiteral(314))<=0)
-314 -2076 0
-2075 -2076 0
-2075 -314 -2077 0
c (0<=(SATLiteral(2075) - aux475 + SATLiteral(314)))
314 2077 0
2075 2077 0
2075 314 2076 0
c (( - aux476 + SATLiteral(530) + SATLiteral(459))<=0)
-459 -2079 0
-530 -2079 0
-530 -459 -2080 0
c (0<=( - aux476 + SATLiteral(530) + SATLiteral(459)))
459 2080 0
530 2080 0
530 459 2079 0
c ((aux476 - aux477 + SATLiteral(458))<=0)
2079 -2082 0
2080 -2083 0
-458 -2082 0
-458 2079 -2083 0
-458 2080 -2085 0
c (0<=(aux476 - aux477 + SATLiteral(458)))
-2080 2085 0
-2079 2083 0
458 2085 0
458 -2080 2083 0
458 -2079 2082 0
c ((SATLiteral(401) + aux481 - SATLiteral(2091))<=0)
-401 2091 0
c (0<=(SATLiteral(401) + aux481 - SATLiteral(2091)))
401 -2091 0
c ((SATLiteral(400) + SATLiteral(2091) - aux483)<=0)
-2091 -2092 0
-400 -2092 0
-400 -2091 -2093 0
c (0<=(SATLiteral(400) + SATLiteral(2091) - aux483))
2091 2093 0
400 2093 0
400 2091 2092 0
c (( - aux484 + SATLiteral(328) + SATLiteral(329))<=0)
-329 -2095 0
-328 -2095 0
-328 -329 -2096 0
c (0<=( - aux484 + SATLiteral(328) + SATLiteral(329)))
329 2096 0
328 2096 0
328 329 2095 0
c ((SATLiteral(412) + aux487 - SATLiteral(2101))<=0)
-412 2101 0
c (0<=(SATLiteral(412) + aux487 - SATLiteral(2101)))
412 -2101 0
c ((SATLiteral(2101) - aux489 + SATLiteral(340))<=0)
-340 -2102 0
-2101 -2102 0
-2101 -340 -2103 0
c (0<=(SATLiteral(2101) - aux489 + SATLiteral(340)))
340 2103 0
2101 2103 0
2101 340 2102 0
c ((SATLiteral(413) - aux490 + SATLiteral(341))<=0)
-341 -2105 0
-413 -2105 0
-413 -341 -2106 0
c (0<=(SATLiteral(413) - aux490 + SATLiteral(341)))
341 2106 0
413 2106 0
413 341 2105 0
c ((aux490 - aux491 + SATLiteral(484))<=0)
2105 -2108 0
2106 -2109 0
-484 -2108 0
-484 2105 -2109 0
-484 2106 -2111 0
c (0<=(aux490 - aux491 + SATLiteral(484)))
-2106 2111 0
-2105 2109 0
484 2111 0
484 -2106 2109 0
484 -2105 2108 0
c ((aux493 - SATLiteral(2115) + SATLiteral(352))<=0)
2115 -352 0
c (0<=(aux493 - SATLiteral(2115) + SATLiteral(352)))
-2115 352 0
c ((SATLiteral(2115) - aux495 + SATLiteral(496))<=0)
-496 -2116 0
-2115 -2116 0
-2115 -496 -2117 0
c (0<=(SATLiteral(2115) - aux495 + SATLiteral(496)))
496 2117 0
2115 2117 0
2115 496 2116 0
c ((SATLiteral(425) - aux496 + SATLiteral(497))<=0)
-497 -2119 0
-425 -2119 0
-425 -497 -2120 0
c (0<=(SATLiteral(425) - aux496 + SATLiteral(497)))
497 2120 0
425 2120 0
425 497 2119 0
c ((SATLiteral(424) - aux497 + SATLiteral(353))<=0)
-353 -2122 0
-424 -2122 0
-424 -353 -2123 0
c (0<=(SATLiteral(424) - aux497 + SATLiteral(353)))
353 2123 0
424 2123 0
424 353 2122 0
c ((aux495 + aux497 - aux498)<=0)
2122 -2125 0
2123 -2126 0
2116 -2125 0
2116 2122 -2126 0
2116 2123 -2128 0
2117 -2126 0
2117 2122 -2128 0
2117 2123 -2130 0
c (0<=(aux495 + aux497 - aux498))
-2123 2130 0
-2122 2128 0
-2117 2130 0
-2117 -2123 2128 0
-2117 -2122 2126 0
-2116 2128 0
-2116 -2123 2126 0
-2116 -2122 2125 0
c ((aux500 - SATLiteral(2134) + SATLiteral(508))<=0)
2134 -508 0
c (0<=(aux500 - SATLiteral(2134) + SATLiteral(508)))
-2134 508 0
c ((SATLiteral(2134) - aux502 + SATLiteral(365))<=0)
-365 -2135 0
-2134 -2135 0
-2134 -365 -2136 0
c (0<=(SATLiteral(2134) - aux502 + SATLiteral(365)))
365 2136 0
2134 2136 0
2134 365 2135 0
c (( - aux503 + SATLiteral(364) + SATLiteral(437))<=0)
-437 -2138 0
-364 -2138 0
-364 -437 -2139 0
c (0<=( - aux503 + SATLiteral(364) + SATLiteral(437)))
437 2139 0
364 2139 0
364 437 2138 0
c (( - aux504 + SATLiteral(509) + SATLiteral(436))<=0)
-436 -2141 0
-509 -2141 0
-509 -436 -2142 0
c (0<=( - aux504 + SATLiteral(509) + SATLiteral(436)))
436 2142 0
509 2142 0
509 436 2141 0
c ((aux502 + aux504 - aux505)<=0)
2141 -2144 0
2142 -2145 0
2135 -2144 0
2135 2141 -2145 0
2135 2142 -2147 0
2136 -2145 0
2136 2141 -2147 0
2136 2142 -2149 0
c (0<=(aux502 + aux504 - aux505))
-2142 2149 0
-2141 2147 0
-2136 2149 0
-2136 -2142 2147 0
-2136 -2141 2145 0
-2135 2147 0
-2135 -2142 2145 0
-2135 -2141 2144 0
c ((aux508 - SATLiteral(2154) + SATLiteral(521))<=0)
2154 -521 0
c (0<=(aux508 - SATLiteral(2154) + SATLiteral(521)))
-2154 521 0
c ((SATLiteral(2154) - aux510 + SATLiteral(448))<=0)
-448 -2155 0
-2154 -2155 0
-2154 -448 -2156 0
c (0<=(SATLiteral(2154) - aux510 + SATLiteral(448)))
448 2156 0
2154 2156 0
2154 448 2155 0
c (( - aux511 + SATLiteral(520) + SATLiteral(449))<=0)
-449 -2158 0
-520 -2158 0
-520 -449 -2159 0
c (0<=( - aux511 + SATLiteral(520) + SATLiteral(449)))
449 2159 0
520 2159 0
520 449 2158 0
c ((aux511 - aux512 + SATLiteral(376))<=0)
2158 -2161 0
2159 -2162 0
-376 -2161 0
-376 2158 -2162 0
-376 2159 -2164 0
c (0<=(aux511 - aux512 + SATLiteral(376)))
-2159 2164 0
-2158 2162 0
376 2164 0
376 -2159 2162 0
376 -2158 2161 0
c ((aux516 - SATLiteral(2170) + SATLiteral(460))<=0)
2170 -460 0
c (0<=(aux516 - SATLiteral(2170) + SATLiteral(460)))
-2170 460 0
c ((SATLiteral(2170) - aux518 + SATLiteral(461))<=0)
-461 -2171 0
-2170 -2171 0
-2170 -461 -2172 0
c (0<=(SATLiteral(2170) - aux518 + SATLiteral(461)))
461 2172 0
2170 2172 0
2170 461 2171 0
c (( - aux519 + SATLiteral(532) + SATLiteral(533))<=0)
-533 -2174 0
-532 -2174 0
-532 -533 -2175 0
c (0<=( - aux519 + SATLiteral(532) + SATLiteral(533)))
533 2175 0
532 2175 0
532 533 2174 0
c ((SATLiteral(92) + SATLiteral(97) - aux520)<=0)
-97 -2177 0
-92 -2177 0
-92 -97 -2178 0
c (0<=(SATLiteral(92) + SATLiteral(97) - aux520))
97 2178 0
92 2178 0
92 97 2177 0
c ((SATLiteral(107) - aux521 + SATLiteral(177))<=0)
-177 -2180 0
-107 -2180 0
-107 -177 -2181 0
c (0<=(SATLiteral(107) - aux521 + SATLiteral(177)))
177 2181 0
107 2181 0
107 177 2180 0
c (( - aux522 + SATLiteral(37) + SATLiteral(172))<=0)
-172 -2183 0
-37 -2183 0
-37 -172 -2184 0
c (0<=( - aux522 + SATLiteral(37) + SATLiteral(172)))
172 2184 0
37 2184 0
37 172 2183 0
c (( - aux523 + SATLiteral(137) + SATLiteral(167))<=0)
-167 -2186 0
-137 -2186 0
-137 -167 -2187 0
c (0<=( - aux523 + SATLiteral(137) + SATLiteral(167)))
167 2187 0
137 2187 0
137 167 2186 0
c (( - aux524 + SATLiteral(157) + SATLiteral(162))<=0)
-162 -2189 0
-157 -2189 0
-157 -162 -2190 0
c (0<=( - aux524 + SATLiteral(157) + SATLiteral(162)))
162 2190 0
157 2190 0
157 162 2189 0
c (( - aux525 + SATLiteral(42) + SATLiteral(142))<=0)
-142 -2192 0
-42 -2192 0
-42 -142 -2193 0
c (0<=( - aux525 + SATLiteral(42) + SATLiteral(142)))
142 2193 0
42 2193 0
42 142 2192 0
c (( - aux526 + SATLiteral(147) + SATLiteral(152))<=0)
-152 -2195 0
-147 -2195 0
-147 -152 -2196 0
c (0<=( - aux526 + SATLiteral(147) + SATLiteral(152)))
152 2196 0
147 2196 0
147 152 2195 0
c (( - aux527 + SATLiteral(62) + SATLiteral(27))<=0)
-27 -2198 0
-62 -2198 0
-62 -27 -2199 0
c (0<=( - aux527 + SATLiteral(62) + SATLiteral(27)))
27 2199 0
62 2199 0
62 27 2198 0
c ((SATLiteral(112) - aux528 + SATLiteral(22))<=0)
-22 -2201 0
-112 -2201 0
-112 -22 -2202 0
c (0<=(SATLiteral(112) - aux528 + SATLiteral(22)))
22 2202 0
112 2202 0
112 22 2201 0
c (( - aux529 + SATLiteral(47) + SATLiteral(17))<=0)
-17 -2204 0
-47 -2204 0
-47 -17 -2205 0
c (0<=( - aux529 + SATLiteral(47) + SATLiteral(17)))
17 2205 0
47 2205 0
47 17 2204 0
c (( - aux530 + SATLiteral(67) + SATLiteral(12))<=0)
-12 -2207 0
-67 -2207 0
-67 -12 -2208 0
c (0<=( - aux530 + SATLiteral(67) + SATLiteral(12)))
12 2208 0
67 2208 0
67 12 2207 0
c (( - aux531 + SATLiteral(72) + SATLiteral(7))<=0)
-7 -2210 0
-72 -2210 0
-72 -7 -2211 0
c (0<=( - aux531 + SATLiteral(72) + SATLiteral(7)))
7 2211 0
72 2211 0
72 7 2210 0
c (( - aux532 + SATLiteral(52) + SATLiteral(2))<=0)
-2 -2213 0
-52 -2213 0
-52 -2 -2214 0
c (0<=( - aux532 + SATLiteral(52) + SATLiteral(2)))
2 2214 0
52 2214 0
52 2 2213 0
c (( - aux533 + SATLiteral(77) + SATLiteral(87))<=0)
-87 -2216 0
-77 -2216 0
-77 -87 -2217 0
c (0<=( - aux533 + SATLiteral(77) + SATLiteral(87)))
87 2217 0
77 2217 0
77 87 2216 0
c ((SATLiteral(102) - aux534 + SATLiteral(82))<=0)
-82 -2219 0
-102 -2219 0
-102 -82 -2220 0
c (0<=(SATLiteral(102) - aux534 + SATLiteral(82)))
82 2220 0
102 2220 0
102 82 2219 0
c ((SATLiteral(117) - aux535 + SATLiteral(57))<=0)
-57 -2222 0
-117 -2222 0
-117 -57 -2223 0
c (0<=(SATLiteral(117) - aux535 + SATLiteral(57)))
57 2223 0
117 2223 0
117 57 2222 0
c (( - aux536 + SATLiteral(32) + SATLiteral(122))<=0)
-122 -2225 0
-32 -2225 0
-32 -122 -2226 0
c (0<=( - aux536 + SATLiteral(32) + SATLiteral(122)))
122 2226 0
32 2226 0
32 122 2225 0
c (( - aux537 + SATLiteral(127) + SATLiteral(132))<=0)
-132 -2228 0
-127 -2228 0
-127 -132 -2229 0
c (0<=( - aux537 + SATLiteral(127) + SATLiteral(132)))
132 2229 0
127 2229 0
127 132 2228 0
c ((aux530 + aux537 - aux538)<=0)
2228 -2231 0
2229 -2232 0
2207 -2231 0
2207 2228 -2232 0
2207 2229 -2234 0
2208 -2232 0
2208 2228 -2234 0
2208 2229 -2236 0
c (0<=(aux530 + aux537 - aux538))
-2229 2236 0
-2228 2234 0
-2208 2236 0
-2208 -2229 2234 0
-2208 -2228 2232 0
-2207 2234 0
-2207 -2229 2232 0
-2207 -2228 2231 0
c ((aux523 + aux525 - aux539)<=0)
2192 -2238 0
2193 -2239 0
2186 -2238 0
2186 2192 -2239 0
2186 2193 -2241 0
2187 -2239 0
2187 2192 -2241 0
2187 2193 -2243 0
c (0<=(aux523 + aux525 - aux539))
-2193 2243 0
-2192 2241 0
-2187 2243 0
-2187 -2193 2241 0
-2187 -2192 2239 0
-2186 2241 0
-2186 -2193 2239 0
-2186 -2192 2238 0
c ((aux520 + aux521 - aux540)<=0)
2180 -2245 0
2181 -2246 0
2177 -2245 0
2177 2180 -2246 0
2177 2181 -2248 0
2178 -2246 0
2178 2180 -2248 0
2178 2181 -2250 0
c (0<=(aux520 + aux521 - aux540))
-2181 2250 0
-2180 2248 0
-2178 2250 0
-2178 -2181 2248 0
-2178 -2180 2246 0
-2177 2248 0
-2177 -2181 2246 0
-2177 -2180 2245 0
c ((aux522 + aux524 - aux541)<=0)
2189 -2252 0
2190 -2253 0
2183 -2252 0
2183 2189 -2253 0
2183 2190 -2255 0
2184 -2253 0
2184 2189 -2255 0
2184 2190 -2257 0
c (0<=(aux522 + aux524 - aux541))
-2190 2257 0
-2189 2255 0
-2184 2257 0
-2184 -2190 2255 0
-2184 -2189 2253 0
-2183 2255 0
-2183 -2190 2253 0
-2183 -2189 2252 0
c ((aux532 + aux535 - aux542)<=0)
2222 -2259 0
2223 -2260 0
2213 -2259 0
2213 2222 -2260 0
2213 2223 -2262 0
2214 -2260 0
2214 2222 -2262 0
2214 2223 -2264 0
c (0<=(aux532 + aux535 - aux542))
-2223 2264 0
-2222 2262 0
-2214 2264 0
-2214 -2223 2262 0
-2214 -2222 2260 0
-2213 2262 0
-2213 -2223 2260 0
-2213 -2222 2259 0
c ((aux527 + aux528 - aux543)<=0)
2201 -2266 0
2202 -2267 0
2198 -2266 0
2198 2201 -2267 0
2198 2202 -2269 0
2199 -2267 0
2199 2201 -2269 0
2199 2202 -2271 0
c (0<=(aux527 + aux528 - aux543))
-2202 2271 0
-2201 2269 0
-2199 2271 0
-2199 -2202 2269 0
-2199 -2201 2267 0
-2198 2269 0
-2198 -2202 2267 0
-2198 -2201 2266 0
c ((aux529 + aux531 - aux544)<=0)
2210 -2273 0
2211 -2274 0
2204 -2273 0
2204 2210 -2274 0
2204 2211 -2276 0
2205 -2274 0
2205 2210 -2276 0
2205 2211 -2278 0
c (0<=(aux529 + aux531 - aux544))
-2211 2278 0
-2210 2276 0
-2205 2278 0
-2205 -2211 2276 0
-2205 -2210 2274 0
-2204 2276 0
-2204 -2211 2274 0
-2204 -2210 2273 0
c ((aux533 + aux536 - aux545)<=0)
2225 -2280 0
2226 -2281 0
2216 -2280 0
2216 2225 -2281 0
2216 2226 -2283 0
2217 -2281 0
2217 2225 -2283 0
2217 2226 -2285 0
c (0<=(aux533 + aux536 - aux545))
-2226 2285 0
-2225 2283 0
-2217 2285 0
-2217 -2226 2283 0
-2217 -2225 2281 0
-2216 2283 0
-2216 -2226 2281 0
-2216 -2225 2280 0
c ((aux526 + aux534 - aux546)<=0)
2219 -2287 0
2220 -2288 0
2195 -2287 0
2195 2219 -2288 0
2195 2220 -2290 0
2196 -2288 0
2196 2219 -2290 0
2196 2220 -2292 0
c (0<=(aux526 + aux534 - aux546))
-2220 2292 0
-2219 2290 0
-2196 2292 0
-2196 -2220 2290 0
-2196 -2219 2288 0
-2195 2290 0
-2195 -2220 2288 0
-2195 -2219 2287 0
c ((aux543 + aux546 - aux547)<=0)
2287 -2294 0
2288 -2295 0
2290 -2297 0
2292 -2299 0
2266 -2294 0
2266 2287 -2295 0
2266 2288 -2297 0
2266 2290 -2299 0
2266 2292 -2301 0
2267 -2295 0
2267 2287 -2297 0
2267 2288 -2299 0
2267 2290 -2301 0
2267 2292 -2303 0
2269 -2297 0
2269 2287 -2299 0
2269 2288 -2301 0
2269 2290 -2303 0
2269 2292 -2305 0
2271 -2299 0
2271 2287 -2301 0
2271 2288 -2303 0
2271 2290 -2305 0
2271 2292 -2307 0
c (0<=(aux543 + aux546 - aux547))
-2292 2307 0
-2290 2305 0
-2288 2303 0
-2287 2301 0
-2271 2307 0
-2271 -2292 2305 0
-2271 -2290 2303 0
-2271 -2288 2301 0
-2271 -2287 2299 0
-2269 2305 0
-2269 -2292 2303 0
-2269 -2290 2301 0
-2269 -2288 2299 0
-2269 -2287 2297 0
-2267 2303 0
-2267 -2292 2301 0
-2267 -2290 2299 0
-2267 -2288 2297 0
-2267 -2287 2295 0
-2266 2301 0
-2266 -2292 2299 0
-2266 -2290 2297 0
-2266 -2288 2295 0
-2266 -2287 2294 0
c ((aux538 + aux539 - aux548)<=0)
2238 -2309 0
2239 -2310 0
2241 -2312 0
2243 -2314 0
2231 -2309 0
2231 2238 -2310 0
2231 2239 -2312 0
2231 2241 -2314 0
2231 2243 -2316 0
2232 -2310 0
2232 2238 -2312 0
2232 2239 -2314 0
2232 2241 -2316 0
2232 2243 -2318 0
2234 -2312 0
2234 2238 -2314 0
2234 2239 -2316 0
2234 2241 -2318 0
2234 2243 -2320 0
2236 -2314 0
2236 2238 -2316 0
2236 2239 -2318 0
2236 2241 -2320 0
2236 2243 -2322 0
c (0<=(aux538 + aux539 - aux548))
-2243 2322 0
-2241 2320 0
-2239 2318 0
-2238 2316 0
-2236 2322 0
-2236 -2243 2320 0
-2236 -2241 2318 0
-2236 -2239 2316 0
-2236 -2238 2314 0
-2234 2320 0
-2234 -2243 2318 0
-2234 -2241 2316 0
-2234 -2239 2314 0
-2234 -2238 2312 0
-2232 2318 0
-2232 -2243 2316 0
-2232 -2241 2314 0
-2232 -2239 2312 0
-2232 -2238 2310 0
-2231 2316 0
-2231 -2243 2314 0
-2231 -2241 2312 0
-2231 -2239 2310 0
-2231 -2238 2309 0
c ((aux540 + aux542 - aux549)<=0)
2259 -2324 0
2260 -2325 0
2262 -2327 0
2264 -2329 0
2245 -2324 0
2245 2259 -2325 0
2245 2260 -2327 0
2245 2262 -2329 0
2245 2264 -2331 0
2246 -2325 0
2246 2259 -2327 0
2246 2260 -2329 0
2246 2262 -2331 0
2246 2264 -2333 0
2248 -2327 0
2248 2259 -2329 0
2248 2260 -2331 0
2248 2262 -2333 0
2248 2264 -2335 0
2250 -2329 0
2250 2259 -2331 0
2250 2260 -2333 0
2250 2262 -2335 0
2250 2264 -2337 0
c (0<=(aux540 + aux542 - aux549))
-2264 2337 0
-2262 2335 0
-2260 2333 0
-2259 2331 0
-2250 2337 0
-2250 -2264 2335 0
-2250 -2262 2333 0
-2250 -2260 2331 0
-2250 -2259 2329 0
-2248 2335 0
-2248 -2264 2333 0
-2248 -2262 2331 0
-2248 -2260 2329 0
-2248 -2259 2327 0
-2246 2333 0
-2246 -2264 2331 0
-2246 -2262 2329 0
-2246 -2260 2327 0
-2246 -2259 2325 0
-2245 2331 0
-2245 -2264 2329 0
-2245 -2262 2327 0
-2245 -2260 2325 0
-2245 -2259 2324 0
c ((aux541 + aux545 - aux550)<=0)
2280 -2339 0
2281 -2340 0
2283 -2342 0
2285 -2344 0
2252 -2339 0
2252 2280 -2340 0
2252 2281 -2342 0
2252 2283 -2344 0
2252 2285 -2346 0
2253 -2340 0
2253 2280 -2342 0
2253 2281 -2344 0
2253 2283 -2346 0
2253 2285 -2348 0
2255 -2342 0
2255 2280 -2344 0
2255 2281 -2346 0
2255 2283 -2348 0
2255 2285 -2350 0
2257 -2344 0
2257 2280 -2346 0
2257 2281 -2348 0
2257 2283 -2350 0
2257 2285 -2352 0
c (0<=(aux541 + aux545 - aux550))
-2285 2352 0
-2283 2350 0
-2281 2348 0
-2280 2346 0
-2257 2352 0
-2257 -2285 2350 0
-2257 -2283 2348 0
-2257 -2281 2346 0
-2257 -2280 2344 0
-2255 2350 0
-2255 -2285 2348 0
-2255 -2283 2346 0
-2255 -2281 2344 0
-2255 -2280 2342 0
-2253 2348 0
-2253 -2285 2346 0
-2253 -2283 2344 0
-2253 -2281 2342 0
-2253 -2280 2340 0
-2252 2346 0
-2252 -2285 2344 0
-2252 -2283 2342 0
-2252 -2281 2340 0
-2252 -2280 2339 0
c ((aux544 + aux550 - aux551)<=0)
2339 -2354 0
2340 -2355 0
2342 -2357 0
2344 -2359 0
2346 -2361 0
2348 -2363 0
2350 -2365 0
2352 -2367 0
2273 -2354 0
2273 2339 -2355 0
2273 2340 -2357 0
2273 2342 -2359 0
2273 2344 -2361 0
2273 2346 -2363 0
2273 2348 -2365 0
2273 2350 -2367 0
2273 2352 -2369 0
2274 -2355 0
2274 2339 -2357 0
2274 2340 -2359 0
2274 2342 -2361 0
2274 2344 -2363 0
2274 2346 -2365 0
2274 2348 -2367 0
2274 2350 -2369 0
2274 2352 -2371 0
2276 -2357 0
2276 2339 -2359 0
2276 2340 -2361 0
2276 2342 -2363 0
2276 2344 -2365 0
2276 2346 -2367 0
2276 2348 -2369 0
2276 2350 -2371 0
2276 2352 -2373 0
2278 -2359 0
2278 2339 -2361 0
2278 2340 -2363 0
2278 2342 -2365 0
2278 2344 -2367 0
2278 2346 -2369 0
2278 2348 -2371 0
2278 2350 -2373 0
2278 2352 -2375 0
c (0<=(aux544 + aux550 - aux551))
-2352 2375 0
-2350 2373 0
-2348 2371 0
-2346 2369 0
-2344 2367 0
-2342 2365 0
-2340 2363 0
-2339 2361 0
-2278 2375 0
-2278 -2352 2373 0
-2278 -2350 2371 0
-2278 -2348 2369 0
-2278 -2346 2367 0
-2278 -2344 2365 0
-2278 -2342 2363 0
-2278 -2340 2361 0
-2278 -2339 2359 0
-2276 2373 0
-2276 -2352 2371 0
-2276 -2350 2369 0
-2276 -2348 2367 0
-2276 -2346 2365 0
-2276 -2344 2363 0
-2276 -2342 2361 0
-2276 -2340 2359 0
-2276 -2339 2357 0
-2274 2371 0
-2274 -2352 2369 0
-2274 -2350 2367 0
-2274 -2348 2365 0
-2274 -2346 2363 0
-2274 -2344 2361 0
-2274 -2342 2359 0
-2274 -2340 2357 0
-2274 -2339 2355 0
-2273 2369 0
-2273 -2352 2367 0
-2273 -2350 2365 0
-2273 -2348 2363 0
-2273 -2346 2361 0
-2273 -2344 2359 0
-2273 -2342 2357 0
-2273 -2340 2355 0
-2273 -2339 2354 0
c ((aux547 + aux548 - aux552)<=0)
2309 -2377 0
2310 -2378 0
2312 -2380 0
2314 -2382 0
2316 -2384 0
2318 -2386 0
2320 -2388 0
2322 -2390 0
2294 -2377 0
2294 2309 -2378 0
2294 2310 -2380 0
2294 2312 -2382 0
2294 2314 -2384 0
2294 2316 -2386 0
2294 2318 -2388 0
2294 2320 -2390 0
2294 2322 -2392 0
2295 -2378 0
2295 2309 -2380 0
2295 2310 -2382 0
2295 2312 -2384 0
2295 2314 -2386 0
2295 2316 -2388 0
2295 2318 -2390 0
2295 2320 -2392 0
2295 2322 -2394 0
2297 -2380 0
2297 2309 -2382 0
2297 2310 -2384 0
2297 2312 -2386 0
2297 2314 -2388 0
2297 2316 -2390 0
2297 2318 -2392 0
2297 2320 -2394 0
2297 2322 -2396 0
2299 -2382 0
2299 2309 -2384 0
2299 2310 -2386 0
2299 2312 -2388 0
2299 2314 -2390 0
2299 2316 -2392 0
2299 2318 -2394 0
2299 2320 -2396 0
2299 2322 -2398 0
2301 -2384 0
2301 2309 -2386 0
2301 2310 -2388 0
2301 2312 -2390 0
2301 2314 -2392 0
2301 2316 -2394 0
2301 2318 -2396 0
2301 2320 -2398 0
2301 2322 -2400 0
2303 -2386 0
2303 2309 -2388 0
2303 2310 -2390 0
2303 2312 -2392 0
2303 2314 -2394 0
2303 2316 -2396 0
2303 2318 -2398 0
2303 2320 -2400 0
2303 2322 -2402 0
2305 -2388 0
2305 2309 -2390 0
2305 2310 -2392 0
2305 2312 -2394 0
2305 2314 -2396 0
2305 2316 -2398 0
2305 2318 -2400 0
2305 2320 -2402 0
2305 2322 -2404 0
2307 -2390 0
2307 2309 -2392 0
2307 2310 -2394 0
2307 2312 -2396 0
2307 2314 -2398 0
2307 2316 -2400 0
2307 2318 -2402 0
2307 2320 -2404 0
2307 2322 -2406 0
c (0<=(aux547 + aux548 - aux552))
-2322 2406 0
-2320 2404 0
-2318 2402 0
-2316 2400 0
-2314 2398 0
-2312 2396 0
-2310 2394 0
-2309 2392 0
-2307 2406 0
-2307 -2322 2404 0
-2307 -2320 2402 0
-2307 -2318 2400 0
-2307 -2316 2398 0
-2307 -2314 2396 0
-2307 -2312 2394 0
-2307 -2310 2392 0
-2307 -2309 2390 0
-2305 2404 0
-2305 -2322 2402 0
-2305 -2320 2400 0
-2305 -2318 2398 0
-2305 -2316 2396 0
-2305 -2314 2394 0
-2305 -2312 2392 0
-2305 -2310 2390 0
-2305 -2309 2388 0
-2303 2402 0
-2303 -2322 2400 0
-2303 -2320 2398 0
-2303 -2318 2396 0
-2303 -2316 2394 0
-2303 -2314 2392 0
-2303 -2312 2390 0
-2303 -2310 2388 0
-2303 -2309 2386 0
-2301 2400 0
-2301 -2322 2398 0
-2301 -2320 2396 0
-2301 -2318 2394 0
-2301 -2316 2392 0
-2301 -2314 2390 0
-2301 -2312 2388 0
-2301 -2310 2386 0
-2301 -2309 2384 0
-2299 2398 0
-2299 -2322 2396 0
-2299 -2320 2394 0
-2299 -2318 2392 0
-2299 -2316 2390 0
-2299 -2314 2388 0
-2299 -2312 2386 0
-2299 -2310 2384 0
-2299 -2309 2382 0
-2297 2396 0
-2297 -2322 2394 0
-2297 -2320 2392 0
-2297 -2318 2390 0
-2297 -2316 2388 0
-2297 -2314 2386 0
-2297 -2312 2384 0
-2297 -2310 2382 0
-2297 -2309 2380 0
-2295 2394 0
-2295 -2322 2392 0
-2295 -2320 2390 0
-2295 -2318 2388 0
-2295 -2316 2386 0
-2295 -2314 2384 0
-2295 -2312 2382 0
-2295 -2310 2380 0
-2295 -2309 2378 0
-2294 2392 0
-2294 -2322 2390 0
-2294 -2320 2388 0
-2294 -2318 2386 0
-2294 -2316 2384 0
-2294 -2314 2382 0
-2294 -2312 2380 0
-2294 -2310 2378 0
-2294 -2309 2377 0
c ((aux549 + aux551 - aux553)<=0)
2354 -2408 0
2355 -2409 0
2357 -2411 0
2359 -2413 0
2361 -2415 0
2363 -2417 0
2365 -2419 0
2367 -2421 0
2369 -2423 0
2371 -2425 0
2373 -2427 0
2375 -2429 0
2324 -2408 0
2324 2354 -2409 0
2324 2355 -2411 0
2324 2357 -2413 0
2324 2359 -2415 0
2324 2361 -2417 0
2324 2363 -2419 0
2324 2365 -2421 0
2324 2367 -2423 0
2324 2369 -2425 0
2324 2371 -2427 0
2324 2373 -2429 0
2324 2375 -2431 0
2325 -2409 0
2325 2354 -2411 0
2325 2355 -2413 0
2325 2357 -2415 0
2325 2359 -2417 0
2325 2361 -2419 0
2325 2363 -2421 0
2325 2365 -2423 0
2325 2367 -2425 0
2325 2369 -2427 0
2325 2371 -2429 0
2325 2373 -2431 0
2325 2375 -2433 0
2327 -2411 0
2327 2354 -2413 0
2327 2355 -2415 0
2327 2357 -2417 0
2327 2359 -2419 0
2327 2361 -2421 0
2327 2363 -2423 0
2327 2365 -2425 0
2327 2367 -2427 0
2327 2369 -2429 0
2327 2371 -2431 0
2327 2373 -2433 0
2327 2375 -2435 0
2329 -2413 0
2329 2354 -2415 0
2329 2355 -2417 0
2329 2357 -2419 0
2329 2359 -2421 0
2329 2361 -2423 0
2329 2363 -2425 0
2329 2365 -2427 0
2329 2367 -2429 0
2329 2369 -2431 0
2329 2371 -2433 0
2329 2373 -2435 0
2329 2375 -2437 0
2331 -2415 0
2331 2354 -2417 0
2331 2355 -2419 0
2331 2357 -2421 0
2331 2359 -2423 0
2331 2361 -2425 0
2331 2363 -2427 0
2331 2365 -2429 0
2331 2367 -2431 0
2331 2369 -2433 0
2331 2371 -2435 0
2331 2373 -2437 0
2331 2375 -2439 0
2333 -2417 0
2333 2354 -2419 0
2333 2355 -2421 0
2333 2357 -2423 0
2333 2359 -2425 0
2333 2361 -2427 0
2333 2363 -2429 0
2333 2365 -2431 0
2333 2367 -2433 0
2333 2369 -2435 0
2333 2371 -2437 0
2333 2373 -2439 0
2333 2375 -2441 0
2335 -2419 0
2335 2354 -2421 0
2335 2355 -2423 0
2335 2357 -2425 0
2335 2359 -2427 0
2335 2361 -2429 0
2335 2363 -2431 0
2335 2365 -2433 0
2335 2367 -2435 0
2335 2369 -2437 0
2335 2371 -2439 0
2335 2373 -2441 0
2335 2375 -2443 0
2337 -2421 0
2337 2354 -2423 0
2337 2355 -2425 0
2337 2357 -2427 0
2337 2359 -2429 0
2337 2361 -2431 0
2337 2363 -2433 0
2337 2365 -2435 0
2337 2367 -2437 0
2337 2369 -2439 0
2337 2371 -2441 0
2337 2373 -2443 0
2337 2375 -2445 0
c (0<=(aux549 + aux551 - aux553))
-2375 2445 0
-2373 2443 0
-2371 2441 0
-2369 2439 0
-2367 2437 0
-2365 2435 0
-2363 2433 0
-2361 2431 0
-2359 2429 0
-2357 2427 0
-2355 2425 0
-2354 2423 0
-2337 2445 0
-2337 -2375 2443 0
-2337 -2373 2441 0
-2337 -2371 2439 0
-2337 -2369 2437 0
-2337 -2367 2435 0
-2337 -2365 2433 0
-2337 -2363 2431 0
-2337 -2361 2429 0
-2337 -2359 2427 0
-2337 -2357 2425 0
-2337 -2355 2423 0
-2337 -2354 2421 0
-2335 2443 0
-2335 -2375 2441 0
-2335 -2373 2439 0
-2335 -2371 2437 0
-2335 -2369 2435 0
-2335 -2367 2433 0
-2335 -2365 2431 0
-2335 -2363 2429 0
-2335 -2361 2427 0
-2335 -2359 2425 0
-2335 -2357 2423 0
-2335 -2355 2421 0
-2335 -2354 2419 0
-2333 2441 0
-2333 -2375 2439 0
-2333 -2373 2437 0
-2333 -2371 2435 0
-2333 -2369 2433 0
-2333 -2367 2431 0
-2333 -2365 2429 0
-2333 -2363 2427 0
-2333 -2361 2425 0
-2333 -2359 2423 0
-2333 -2357 2421 0
-2333 -2355 2419 0
-2333 -2354 2417 0
-2331 2439 0
-2331 -2375 2437 0
-2331 -2373 2435 0
-2331 -2371 2433 0
-2331 -2369 2431 0
-2331 -2367 2429 0
-2331 -2365 2427 0
-2331 -2363 2425 0
-2331 -2361 2423 0
-2331 -2359 2421 0
-2331 -2357 2419 0
-2331 -2355 2417 0
-2331 -2354 2415 0
-2329 2437 0
-2329 -2375 2435 0
-2329 -2373 2433 0
-2329 -2371 2431 0
-2329 -2369 2429 0
-2329 -2367 2427 0
-2329 -2365 2425 0
-2329 -2363 2423 0
-2329 -2361 2421 0
-2329 -2359 2419 0
-2329 -2357 2417 0
-2329 -2355 2415 0
-2329 -2354 2413 0
-2327 2435 0
-2327 -2375 2433 0
-2327 -2373 2431 0
-2327 -2371 2429 0
-2327 -2369 2427 0
-2327 -2367 2425 0
-2327 -2365 2423 0
-2327 -2363 2421 0
-2327 -2361 2419 0
-2327 -2359 2417 0
-2327 -2357 2415 0
-2327 -2355 2413 0
-2327 -2354 2411 0
-2325 2433 0
-2325 -2375 2431 0
-2325 -2373 2429 0
-2325 -2371 2427 0
-2325 -2369 2425 0
-2325 -2367 2423 0
-2325 -2365 2421 0
-2325 -2363 2419 0
-2325 -2361 2417 0
-2325 -2359 2415 0
-2325 -2357 2413 0
-2325 -2355 2411 0
-2325 -2354 2409 0
-2324 2431 0
-2324 -2375 2429 0
-2324 -2373 2427 0
-2324 -2371 2425 0
-2324 -2369 2423 0
-2324 -2367 2421 0
-2324 -2365 2419 0
-2324 -2363 2417 0
-2324 -2361 2415 0
-2324 -2359 2413 0
-2324 -2357 2411 0
-2324 -2355 2409 0
-2324 -2354 2408 0
c ((SATLiteral(94) + SATLiteral(99) - aux554)<=0)
-99 -2447 0
-94 -2447 0
-94 -99 -2448 0
c (0<=(SATLiteral(94) + SATLiteral(99) - aux554))
99 2448 0
94 2448 0
94 99 2447 0
c ((SATLiteral(109) - aux555 + SATLiteral(179))<=0)
-179 -2450 0
-109 -2450 0
-109 -179 -2451 0
c (0<=(SATLiteral(109) - aux555 + SATLiteral(179)))
179 2451 0
109 2451 0
109 179 2450 0
c (( - aux556 + SATLiteral(39) + SATLiteral(174))<=0)
-174 -2453 0
-39 -2453 0
-39 -174 -2454 0
c (0<=( - aux556 + SATLiteral(39) + SATLiteral(174)))
174 2454 0
39 2454 0
39 174 2453 0
c (( - aux557 + SATLiteral(139) + SATLiteral(169))<=0)
-169 -2456 0
-139 -2456 0
-139 -169 -2457 0
c (0<=( - aux557 + SATLiteral(139) + SATLiteral(169)))
169 2457 0
139 2457 0
139 169 2456 0
c (( - aux558 + SATLiteral(159) + SATLiteral(164))<=0)
-164 -2459 0
-159 -2459 0
-159 -164 -2460 0
c (0<=( - aux558 + SATLiteral(159) + SATLiteral(164)))
164 2460 0
159 2460 0
159 164 2459 0
c (( - aux559 + SATLiteral(44) + SATLiteral(144))<=0)
-144 -2462 0
-44 -2462 0
-44 -144 -2463 0
c (0<=( - aux559 + SATLiteral(44) + SATLiteral(144)))
144 2463 0
44 2463 0
44 144 2462 0
c (( - aux560 + SATLiteral(149) + SATLiteral(154))<=0)
-154 -2465 0
-149 -2465 0
-149 -154 -2466 0
c (0<=( - aux560 + SATLiteral(149) + SATLiteral(154)))
154 2466 0
149 2466 0
149 154 2465 0
c (( - aux561 + SATLiteral(64) + SATLiteral(29))<=0)
-29 -2468 0
-64 -2468 0
-64 -29 -2469 0
c (0<=( - aux561 + SATLiteral(64) + SATLiteral(29)))
29 2469 0
64 2469 0
64 29 2468 0
c ((SATLiteral(114) - aux562 + SATLiteral(24))<=0)
-24 -2471 0
-114 -2471 0
-114 -24 -2472 0
c (0<=(SATLiteral(114) - aux562 + SATLiteral(24)))
24 2472 0
114 2472 0
114 24 2471 0
c (( - aux563 + SATLiteral(49) + SATLiteral(19))<=0)
-19 -2474 0
-49 -2474 0
-49 -19 -2475 0
c (0<=( - aux563 + SATLiteral(49) + SATLiteral(19)))
19 2475 0
49 2475 0
49 19 2474 0
c (( - aux564 + SATLiteral(69) + SATLiteral(14))<=0)
-14 -2477 0
-69 -2477 0
-69 -14 -2478 0
c (0<=( - aux564 + SATLiteral(69) + SATLiteral(14)))
14 2478 0
69 2478 0
69 14 2477 0
c (( - aux565 + SATLiteral(74) + SATLiteral(9))<=0)
-9 -2480 0
-74 -2480 0
-74 -9 -2481 0
c (0<=( - aux565 + SATLiteral(74) + SATLiteral(9)))
9 2481 0
74 2481 0
74 9 2480 0
c (( - aux566 + SATLiteral(54) + SATLiteral(4))<=0)
-4 -2483 0
-54 -2483 0
-54 -4 -2484 0
c (0<=( - aux566 + SATLiteral(54) + SATLiteral(4)))
4 2484 0
54 2484 0
54 4 2483 0
c (( - aux567 + SATLiteral(79) + SATLiteral(89))<=0)
-89 -2486 0
-79 -2486 0
-79 -89 -2487 0
c (0<=( - aux567 + SATLiteral(79) + SATLiteral(89)))
89 2487 0
79 2487 0
79 89 2486 0
c ((SATLiteral(104) - aux568 + SATLiteral(84))<=0)
-84 -2489 0
-104 -2489 0
-104 -84 -2490 0
c (0<=(SATLiteral(104) - aux568 + SATLiteral(84)))
84 2490 0
104 2490 0
104 84 2489 0
c ((SATLiteral(119) - aux569 + SATLiteral(59))<=0)
-59 -2492 0
-119 -2492 0
-119 -59 -2493 0
c (0<=(SATLiteral(119) - aux569 + SATLiteral(59)))
59 2493 0
119 2493 0
119 59 2492 0
c (( - aux570 + SATLiteral(34) + SATLiteral(124))<=0)
-124 -2495 0
-34 -2495 0
-34 -124 -2496 0
c (0<=( - aux570 + SATLiteral(34) + SATLiteral(124)))
124 2496 0
34 2496 0
34 124 2495 0
c (( - aux571 + SATLiteral(129) + SATLiteral(134))<=0)
-134 -2498 0
-129 -2498 0
-129 -134 -2499 0
c (0<=( - aux571 + SATLiteral(129) + SATLiteral(134)))
134 2499 0
129 2499 0
129 134 2498 0
c ((aux564 + aux571 - aux572)<=0)
2498 -2501 0
2499 -2502 0
2477 -2501 0
2477 2498 -2502 0
2477 2499 -2504 0
2478 -2502 0
2478 2498 -2504 0
2478 2499 -2506 0
c (0<=(aux564 + aux571 - aux572))
-2499 2506 0
-2498 2504 0
-2478 2506 0
-2478 -2499 2504 0
-2478 -2498 2502 0
-2477 2504 0
-2477 -2499 2502 0
-2477 -2498 2501 0
c ((aux557 + aux559 - aux573)<=0)
2462 -2508 0
2463 -2509 0
2456 -2508 0
2456 2462 -2509 0
2456 2463 -2511 0
2457 -2509 0
2457 2462 -2511 0
2457 2463 -2513 0
c (0<=(aux557 + aux559 - aux573))
-2463 2513 0
-2462 2511 0
-2457 2513 0
-2457 -2463 2511 0
-2457 -2462 2509 0
-2456 2511 0
-2456 -2463 2509 0
-2456 -2462 2508 0
c ((aux554 + aux555 - aux574)<=0)
2450 -2515 0
2451 -2516 0
2447 -2515 0
2447 2450 -2516 0
2447 2451 -2518 0
2448 -2516 0
2448 2450 -2518 0
2448 2451 -2520 0
c (0<=(aux554 + aux555 - aux574))
-2451 2520 0
-2450 2518 0
-2448 2520 0
-2448 -2451 2518 0
-2448 -2450 2516 0
-2447 2518 0
-2447 -2451 2516 0
-2447 -2450 2515 0
c ((aux556 + aux558 - aux575)<=0)
2459 -2522 0
2460 -2523 0
2453 -2522 0
2453 2459 -2523 0
2453 2460 -2525 0
2454 -2523 0
2454 2459 -2525 0
2454 2460 -2527 0
c (0<=(aux556 + aux558 - aux575))
-2460 2527 0
-2459 2525 0
-2454 2527 0
-2454 -2460 2525 0
-2454 -2459 2523 0
-2453 2525 0
-2453 -2460 2523 0
-2453 -2459 2522 0
c ((aux566 + aux569 - aux576)<=0)
2492 -2529 0
2493 -2530 0
2483 -2529 0
2483 2492 -2530 0
2483 2493 -2532 0
2484 -2530 0
2484 2492 -2532 0
2484 2493 -2534 0
c (0<=(aux566 + aux569 - aux576))
-2493 2534 0
-2492 2532 0
-2484 2534 0
-2484 -2493 2532 0
-2484 -2492 2530 0
-2483 2532 0
-2483 -2493 2530 0
-2483 -2492 2529 0
c ((aux561 + aux562 - aux577)<=0)
2471 -2536 0
2472 -2537 0
2468 -2536 0
2468 2471 -2537 0
2468 2472 -2539 0
2469 -2537 0
2469 2471 -2539 0
2469 2472 -2541 0
c (0<=(aux561 + aux562 - aux577))
-2472 2541 0
-2471 2539 0
-2469 2541 0
-2469 -2472 2539 0
-2469 -2471 2537 0
-2468 2539 0
-2468 -2472 2537 0
-2468 -2471 2536 0
c ((aux563 + aux565 - aux578)<=0)
2480 -2543 0
2481 -2544 0
2474 -2543 0
2474 2480 -2544 0
2474 2481 -2546 0
2475 -2544 0
2475 2480 -2546 0
2475 2481 -2548 0
c (0<=(aux563 + aux565 - aux578))
-2481 2548 0
-2480 2546 0
-2475 2548 0
-2475 -2481 2546 0
-2475 -2480 2544 0
-2474 2546 0
-2474 -2481 2544 0
-2474 -2480 2543 0
c ((aux567 + aux570 - aux579)<=0)
2495 -2550 0
2496 -2551 0
2486 -2550 0
2486 2495 -2551 0
2486 2496 -2553 0
2487 -2551 0
2487 2495 -2553 0
2487 2496 -2555 0
c (0<=(aux567 + aux570 - aux579))
-2496 2555 0
-2495 2553 0
-2487 2555 0
-2487 -2496 2553 0
-2487 -2495 2551 0
-2486 2553 0
-2486 -2496 2551 0
-2486 -2495 2550 0
c ((aux560 + aux568 - aux580)<=0)
2489 -2557 0
2490 -2558 0
2465 -2557 0
2465 2489 -2558 0
2465 2490 -2560 0
2466 -2558 0
2466 2489 -2560 0
2466 2490 -2562 0
c (0<=(aux560 + aux568 - aux580))
-2490 2562 0
-2489 2560 0
-2466 2562 0
-2466 -2490 2560 0
-2466 -2489 2558 0
-2465 2560 0
-2465 -2490 2558 0
-2465 -2489 2557 0
c ((aux577 + aux580 - aux581)<=0)
2557 -2564 0
2558 -2565 0
2560 -2567 0
2562 -2569 0
2536 -2564 0
2536 2557 -2565 0
2536 2558 -2567 0
2536 2560 -2569 0
2536 2562 -2571 0
2537 -2565 0
2537 2557 -2567 0
2537 2558 -2569 0
2537 2560 -2571 0
2537 2562 -2573 0
2539 -2567 0
2539 2557 -2569 0
2539 2558 -2571 0
2539 2560 -2573 0
2539 2562 -2575 0
2541 -2569 0
2541 2557 -2571 0
2541 2558 -2573 0
2541 2560 -2575 0
2541 2562 -2577 0
c (0<=(aux577 + aux580 - aux581))
-2562 2577 0
-2560 2575 0
-2558 2573 0
-2557 2571 0
-2541 2577 0
-2541 -2562 2575 0
-2541 -2560 2573 0
-2541 -2558 2571 0
-2541 -2557 2569 0
-2539 2575 0
-2539 -2562 2573 0
-2539 -2560 2571 0
-2539 -2558 2569 0
-2539 -2557 2567 0
-2537 2573 0
-2537 -2562 2571 0
-2537 -2560 2569 0
-2537 -2558 2567 0
-2537 -2557 2565 0
-2536 2571 0
-2536 -2562 2569 0
-2536 -2560 2567 0
-2536 -2558 2565 0
-2536 -2557 2564 0
c ((aux572 + aux573 - aux582)<=0)
2508 -2579 0
2509 -2580 0
2511 -2582 0
2513 -2584 0
2501 -2579 0
2501 2508 -2580 0
2501 2509 -2582 0
2501 2511 -2584 0
2501 2513 -2586 0
2502 -2580 0
2502 2508 -2582 0
2502 2509 -2584 0
2502 2511 -2586 0
2502 2513 -2588 0
2504 -2582 0
2504 2508 -2584 0
2504 2509 -2586 0
2504 2511 -2588 0
2504 2513 -2590 0
2506 -2584 0
2506 2508 -2586 0
2506 2509 -2588 0
2506 2511 -2590 0
2506 2513 -2592 0
c (0<=(aux572 + aux573 - aux582))
-2513 2592 0
-2511 2590 0
-2509 2588 0
-2508 2586 0
-2506 2592 0
-2506 -2513 2590 0
-2506 -2511 2588 0
-2506 -2509 2586 0
-2506 -2508 2584 0
-2504 2590 0
-2504 -2513 2588 0
-2504 -2511 2586 0
-2504 -2509 2584 0
-2504 -2508 2582 0
-2502 2588 0
-2502 -2513 2586 0
-2502 -2511 2584 0
-2502 -2509 2582 0
-2502 -2508 2580 0
-2501 2586 0
-2501 -2513 2584 0
-2501 -2511 2582 0
-2501 -2509 2580 0
-2501 -2508 2579 0
c ((aux574 + aux576 - aux583)<=0)
2529 -2594 0
2530 -2595 0
2532 -2597 0
2534 -2599 0
2515 -2594 0
2515 2529 -2595 0
2515 2530 -2597 0
2515 2532 -2599 0
2515 2534 -2601 0
2516 -2595 0
2516 2529 -2597 0
2516 2530 -2599 0
2516 2532 -2601 0
2516 2534 -2603 0
2518 -2597 0
2518 2529 -2599 0
2518 2530 -2601 0
2518 2532 -2603 0
2518 2534 -2605 0
2520 -2599 0
2520 2529 -2601 0
2520 2530 -2603 0
2520 2532 -2605 0
2520 2534 -2607 0
c (0<=(aux574 + aux576 - aux583))
-2534 2607 0
-2532 2605 0
-2530 2603 0
-2529 2601 0
-2520 2607 0
-2520 -2534 2605 0
-2520 -2532 2603 0
-2520 -2530 2601 0
-2520 -2529 2599 0
-2518 2605 0
-2518 -2534 2603 0
-2518 -2532 2601 0
-2518 -2530 2599 0
-2518 -2529 2597 0
-2516 2603 0
-2516 -2534 2601 0
-2516 -2532 2599 0
-2516 -2530 2597 0
-2516 -2529 2595 0
-2515 2601 0
-2515 -2534 2599 0
-2515 -2532 2597 0
-2515 -2530 2595 0
-2515 -2529 2594 0
c ((aux575 + aux579 - aux584)<=0)
2550 -2609 0
2551 -2610 0
2553 -2612 0
2555 -2614 0
2522 -2609 0
2522 2550 -2610 0
2522 2551 -2612 0
2522 2553 -2614 0
2522 2555 -2616 0
2523 -2610 0
2523 2550 -2612 0
2523 2551 -2614 0
2523 2553 -2616 0
2523 2555 -2618 0
2525 -2612 0
2525 2550 -2614 0
2525 2551 -2616 0
2525 2553 -2618 0
2525 2555 -2620 0
2527 -2614 0
2527 2550 -2616 0
2527 2551 -2618 0
2527 2553 -2620 0
2527 2555 -2622 0
c (0<=(aux575 + aux579 - aux584))
-2555 2622 0
-2553 2620 0
-2551 2618 0
-2550 2616 0
-2527 2622 0
-2527 -2555 2620 0
-2527 -2553 2618 0
-2527 -2551 2616 0
-2527 -2550 2614 0
-2525 2620 0
-2525 -2555 2618 0
-2525 -2553 2616 0
-2525 -2551 2614 0
-2525 -2550 2612 0
-2523 2618 0
-2523 -2555 2616 0
-2523 -2553 2614 0
-2523 -2551 2612 0
-2523 -2550 2610 0
-2522 2616 0
-2522 -2555 2614 0
-2522 -2553 2612 0
-2522 -2551 2610 0
-2522 -2550 2609 0
c ((aux578 + aux584 - aux585)<=0)
2609 -2624 0
2610 -2625 0
2612 -2627 0
2614 -2629 0
2616 -2631 0
2618 -2633 0
2620 -2635 0
2622 -2637 0
2543 -2624 0
2543 2609 -2625 0
2543 2610 -2627 0
2543 2612 -2629 0
2543 2614 -2631 0
2543 2616 -2633 0
2543 2618 -2635 0
2543 2620 -2637 0
2543 2622 -2639 0
2544 -2625 0
2544 2609 -2627 0
2544 2610 -2629 0
2544 2612 -2631 0
2544 2614 -2633 0
2544 2616 -2635 0
2544 2618 -2637 0
2544 2620 -2639 0
2544 2622 -2641 0
2546 -2627 0
2546 2609 -2629 0
2546 2610 -2631 0
2546 2612 -2633 0
2546 2614 -2635 0
2546 2616 -2637 0
2546 2618 -2639 0
2546 2620 -2641 0
2546 2622 -2643 0
2548 -2629 0
2548 2609 -2631 0
2548 2610 -2633 0
2548 2612 -2635 0
2548 2614 -2637 0
2548 2616 -2639 0
2548 2618 -2641 0
2548 2620 -2643 0
2548 2622 -2645 0
c (0<=(aux578 + aux584 - aux585))
-2622 2645 0
-2620 2643 0
-2618 2641 0
-2616 2639 0
-2614 2637 0
-2612 2635 0
-2610 2633 0
-2609 2631 0
-2548 2645 0
-2548 -2622 2643 0
-2548 -2620 2641 0
-2548 -2618 2639 0
-2548 -2616 2637 0
-2548 -2614 2635 0
-2548 -2612 2633 0
-2548 -2610 2631 0
-2548 -2609 2629 0
-2546 2643 0
-2546 -2622 2641 0
-2546 -2620 2639 0
-2546 -2618 2637 0
-2546 -2616 2635 0
-2546 -2614 2633 0
-2546 -2612 2631 0
-2546 -2610 2629 0
-2546 -2609 2627 0
-2544 2641 0
-2544 -2622 2639 0
-2544 -2620 2637 0
-2544 -2618 2635 0
-2544 -2616 2633 0
-2544 -2614 2631 0
-2544 -2612 2629 0
-2544 -2610 2627 0
-2544 -2609 2625 0
-2543 2639 0
-2543 -2622 2637 0
-2543 -2620 2635 0
-2543 -2618 2633 0
-2543 -2616 2631 0
-2543 -2614 2629 0
-2543 -2612 2627 0
-2543 -2610 2625 0
-2543 -2609 2624 0
c ((aux581 + aux582 - aux586)<=0)
2579 -2647 0
2580 -2648 0
2582 -2650 0
2584 -2652 0
2586 -2654 0
2588 -2656 0
2590 -2658 0
2592 -2660 0
2564 -2647 0
2564 2579 -2648 0
2564 2580 -2650 0
2564 2582 -2652 0
2564 2584 -2654 0
2564 2586 -2656 0
2564 2588 -2658 0
2564 2590 -2660 0
2564 2592 -2662 0
2565 -2648 0
2565 2579 -2650 0
2565 2580 -2652 0
2565 2582 -2654 0
2565 2584 -2656 0
2565 2586 -2658 0
2565 2588 -2660 0
2565 2590 -2662 0
2565 2592 -2664 0
2567 -2650 0
2567 2579 -2652 0
2567 2580 -2654 0
2567 2582 -2656 0
2567 2584 -2658 0
2567 2586 -2660 0
2567 2588 -2662 0
2567 2590 -2664 0
2567 2592 -2666 0
2569 -2652 0
2569 2579 -2654 0
2569 2580 -2656 0
2569 2582 -2658 0
2569 2584 -2660 0
2569 2586 -2662 0
2569 2588 -2664 0
2569 2590 -2666 0
2569 2592 -2668 0
2571 -2654 0
2571 2579 -2656 0
2571 2580 -2658 0
2571 2582 -2660 0
2571 2584 -2662 0
2571 2586 -2664 0
2571 2588 -2666 0
2571 2590 -2668 0
2571 2592 -2670 0
2573 -2656 0
2573 2579 -2658 0
2573 2580 -2660 0
2573 2582 -2662 0
2573 2584 -2664 0
2573 2586 -2666 0
2573 2588 -2668 0
2573 2590 -2670 0
2573 2592 -2672 0
2575 -2658 0
2575 2579 -2660 0
2575 2580 -2662 0
2575 2582 -2664 0
2575 2584 -2666 0
2575 2586 -2668 0
2575 2588 -2670 0
2575 2590 -2672 0
2575 2592 -2674 0
2577 -2660 0
2577 2579 -2662 0
2577 2580 -2664 0
2577 2582 -2666 0
2577 2584 -2668 0
2577 2586 -2670 0
2577 2588 -2672 0
2577 2590 -2674 0
2577 2592 -2676 0
c (0<=(aux581 + aux582 - aux586))
-2592 2676 0
-2590 2674 0
-2588 2672 0
-2586 2670 0
-2584 2668 0
-2582 2666 0
-2580 2664 0
-2579 2662 0
-2577 2676 0
-2577 -2592 2674 0
-2577 -2590 2672 0
-2577 -2588 2670 0
-2577 -2586 2668 0
-2577 -2584 2666 0
-2577 -2582 2664 0
-2577 -2580 2662 0
-2577 -2579 2660 0
-2575 2674 0
-2575 -2592 2672 0
-2575 -2590 2670 0
-2575 -2588 2668 0
-2575 -2586 2666 0
-2575 -2584 2664 0
-2575 -2582 2662 0
-2575 -2580 2660 0
-2575 -2579 2658 0
-2573 2672 0
-2573 -2592 2670 0
-2573 -2590 2668 0
-2573 -2588 2666 0
-2573 -2586 2664 0
-2573 -2584 2662 0
-2573 -2582 2660 0
-2573 -2580 2658 0
-2573 -2579 2656 0
-2571 2670 0
-2571 -2592 2668 0
-2571 -2590 2666 0
-2571 -2588 2664 0
-2571 -2586 2662 0
-2571 -2584 2660 0
-2571 -2582 2658 0
-2571 -2580 2656 0
-2571 -2579 2654 0
-2569 2668 0
-2569 -2592 2666 0
-2569 -2590 2664 0
-2569 -2588 2662 0
-2569 -2586 2660 0
-2569 -2584 2658 0
-2569 -2582 2656 0
-2569 -2580 2654 0
-2569 -2579 2652 0
-2567 2666 0
-2567 -2592 2664 0
-2567 -2590 2662 0
-2567 -2588 2660 0
-2567 -2586 2658 0
-2567 -2584 2656 0
-2567 -2582 2654 0
-2567 -2580 2652 0
-2567 -2579 2650 0
-2565 2664 0
-2565 -2592 2662 0
-2565 -2590 2660 0
-2565 -2588 2658 0
-2565 -2586 2656 0
-2565 -2584 2654 0
-2565 -2582 2652 0
-2565 -2580 2650 0
-2565 -2579 2648 0
-2564 2662 0
-2564 -2592 2660 0
-2564 -2590 2658 0
-2564 -2588 2656 0
-2564 -2586 2654 0
-2564 -2584 2652 0
-2564 -2582 2650 0
-2564 -2580 2648 0
-2564 -2579 2647 0
c ((aux583 + aux585 - aux587)<=0)
2624 -2678 0
2625 -2679 0
2627 -2681 0
2629 -2683 0
2631 -2685 0
2633 -2687 0
2635 -2689 0
2637 -2691 0
2639 -2693 0
2641 -2695 0
2643 -2697 0
2645 -2699 0
2594 -2678 0
2594 2624 -2679 0
2594 2625 -2681 0
2594 2627 -2683 0
2594 2629 -2685 0
2594 2631 -2687 0
2594 2633 -2689 0
2594 2635 -2691 0
2594 2637 -2693 0
2594 2639 -2695 0
2594 2641 -2697 0
2594 2643 -2699 0
2594 2645 -2701 0
2595 -2679 0
2595 2624 -2681 0
2595 2625 -2683 0
2595 2627 -2685 0
2595 2629 -2687 0
2595 2631 -2689 0
2595 2633 -2691 0
2595 2635 -2693 0
2595 2637 -2695 0
2595 2639 -2697 0
2595 2641 -2699 0
2595 2643 -2701 0
2595 2645 -2703 0
2597 -2681 0
2597 2624 -2683 0
2597 2625 -2685 0
2597 2627 -2687 0
2597 2629 -2689 0
2597 2631 -2691 0
2597 2633 -2693 0
2597 2635 -2695 0
2597 2637 -2697 0
2597 2639 -2699 0
2597 2641 -2701 0
2597 2643 -2703 0
2597 2645 -2705 0
2599 -2683 0
2599 2624 -2685 0
2599 2625 -2687 0
2599 2627 -2689 0
2599 2629 -2691 0
2599 2631 -2693 0
2599 2633 -2695 0
2599 2635 -2697 0
2599 2637 -2699 0
2599 2639 -2701 0
2599 2641 -2703 0
2599 2643 -2705 0
2599 2645 -2707 0
2601 -2685 0
2601 2624 -2687 0
2601 2625 -2689 0
2601 2627 -2691 0
2601 2629 -2693 0
2601 2631 -2695 0
2601 2633 -2697 0
2601 2635 -2699 0
2601 2637 -2701 0
2601 2639 -2703 0
2601 2641 -2705 0
2601 2643 -2707 0
2601 2645 -2709 0
2603 -2687 0
2603 2624 -2689 0
2603 2625 -2691 0
2603 2627 -2693 0
2603 2629 -2695 0
2603 2631 -2697 0
2603 2633 -2699 0
2603 2635 -2701 0
2603 2637 -2703 0
2603 2639 -2705 0
2603 2641 -2707 0
2603 2643 -2709 0
2603 2645 -2711 0
2605 -2689 0
2605 2624 -2691 0
2605 2625 -2693 0
2605 2627 -2695 0
2605 2629 -2697 0
2605 2631 -2699 0
2605 2633 -2701 0
2605 2635 -2703 0
2605 2637 -2705 0
2605 2639 -2707 0
2605 2641 -2709 0
2605 2643 -2711 0
2605 2645 -2713 0
2607 -2691 0
2607 2624 -2693 0
2607 2625 -2695 0
2607 2627 -2697 0
2607 2629 -2699 0
2607 2631 -2701 0
2607 2633 -2703 0
2607 2635 -2705 0
2607 2637 -2707 0
2607 2639 -2709 0
2607 2641 -2711 0
2607 2643 -2713 0
2607 2645 -2715 0
c (0<=(aux583 + aux585 - aux587))
-2645 2715 0
-2643 2713 0
-2641 2711 0
-2639 2709 0
-2637 2707 0
-2635 2705 0
-2633 2703 0
-2631 2701 0
-2629 2699 0
-2627 2697 0
-2625 2695 0
-2624 2693 0
-2607 2715 0
-2607 -2645 2713 0
-2607 -2643 2711 0
-2607 -2641 2709 0
-2607 -2639 2707 0
-2607 -2637 2705 0
-2607 -2635 2703 0
-2607 -2633 2701 0
-2607 -2631 2699 0
-2607 -2629 2697 0
-2607 -2627 2695 0
-2607 -2625 2693 0
-2607 -2624 2691 0
-2605 2713 0
-2605 -2645 2711 0
-2605 -2643 2709 0
-2605 -2641 2707 0
-2605 -2639 2705 0
-2605 -2637 2703 0
-2605 -2635 2701 0
-2605 -2633 2699 0
-2605 -2631 2697 0
-2605 -2629 2695 0
-2605 -2627 2693 0
-2605 -2625 2691 0
-2605 -2624 2689 0
-2603 2711 0
-2603 -2645 2709 0
-2603 -2643 2707 0
-2603 -2641 2705 0
-2603 -2639 2703 0
-2603 -2637 2701 0
-2603 -2635 2699 0
-2603 -2633 2697 0
-2603 -2631 2695 0
-2603 -2629 2693 0
-2603 -2627 2691 0
-2603 -2625 2689 0
-2603 -2624 2687 0
-2601 2709 0
-2601 -2645 2707 0
-2601 -2643 2705 0
-2601 -2641 2703 0
-2601 -2639 2701 0
-2601 -2637 2699 0
-2601 -2635 2697 0
-2601 -2633 2695 0
-2601 -2631 2693 0
-2601 -2629 2691 0
-2601 -2627 2689 0
-2601 -2625 2687 0
-2601 -2624 2685 0
-2599 2707 0
-2599 -2645 2705 0
-2599 -2643 2703 0
-2599 -2641 2701 0
-2599 -2639 2699 0
-2599 -2637 2697 0
-2599 -2635 2695 0
-2599 -2633 2693 0
-2599 -2631 2691 0
-2599 -2629 2689 0
-2599 -2627 2687 0
-2599 -2625 2685 0
-2599 -2624 2683 0
-2597 2705 0
-2597 -2645 2703 0
-2597 -2643 2701 0
-2597 -2641 2699 0
-2597 -2639 2697 0
-2597 -2637 2695 0
-2597 -2635 2693 0
-2597 -2633 2691 0
-2597 -2631 2689 0
-2597 -2629 2687 0
-2597 -2627 2685 0
-2597 -2625 2683 0
-2597 -2624 2681 0
-2595 2703 0
-2595 -2645 2701 0
-2595 -2643 2699 0
-2595 -2641 2697 0
-2595 -2639 2695 0
-2595 -2637 2693 0
-2595 -2635 2691 0
-2595 -2633 2689 0
-2595 -2631 2687 0
-2595 -2629 2685 0
-2595 -2627 2683 0
-2595 -2625 2681 0
-2595 -2624 2679 0
-2594 2701 0
-2594 -2645 2699 0
-2594 -2643 2697 0
-2594 -2641 2695 0
-2594 -2639 2693 0
-2594 -2637 2691 0
-2594 -2635 2689 0
-2594 -2633 2687 0
-2594 -2631 2685 0
-2594 -2629 2683 0
-2594 -2627 2681 0
-2594 -2625 2679 0
-2594 -2624 2678 0
c ((SATLiteral(96) + SATLiteral(101) - aux588)<=0)
-101 -2717 0
-96 -2717 0
-96 -101 -2718 0
c (0<=(SATLiteral(96) + SATLiteral(101) - aux588))
101 2718 0
96 2718 0
96 101 2717 0
c ((SATLiteral(111) - aux589 + SATLiteral(181))<=0)
-181 -2720 0
-111 -2720 0
-111 -181 -2721 0
c (0<=(SATLiteral(111) - aux589 + SATLiteral(181)))
181 2721 0
111 2721 0
111 181 2720 0
c (( - aux590 + SATLiteral(41) + SATLiteral(176))<=0)
-176 -2723 0
-41 -2723 0
-41 -176 -2724 0
c (0<=( - aux590 + SATLiteral(41) + SATLiteral(176)))
176 2724 0
41 2724 0
41 176 2723 0
c (( - aux591 + SATLiteral(141) + SATLiteral(171))<=0)
-171 -2726 0
-141 -2726 0
-141 -171 -2727 0
c (0<=( - aux591 + SATLiteral(141) + SATLiteral(171)))
171 2727 0
141 2727 0
141 171 2726 0
c (( - aux592 + SATLiteral(161) + SATLiteral(166))<=0)
-166 -2729 0
-161 -2729 0
-161 -166 -2730 0
c (0<=( - aux592 + SATLiteral(161) + SATLiteral(166)))
166 2730 0
161 2730 0
161 166 2729 0
c (( - aux593 + SATLiteral(46) + SATLiteral(146))<=0)
-146 -2732 0
-46 -2732 0
-46 -146 -2733 0
c (0<=( - aux593 + SATLiteral(46) + SATLiteral(146)))
146 2733 0
46 2733 0
46 146 2732 0
c (( - aux594 + SATLiteral(151) + SATLiteral(156))<=0)
-156 -2735 0
-151 -2735 0
-151 -156 -2736 0
c (0<=( - aux594 + SATLiteral(151) + SATLiteral(156)))
156 2736 0
151 2736 0
151 156 2735 0
c (( - aux595 + SATLiteral(66) + SATLiteral(31))<=0)
-31 -2738 0
-66 -2738 0
-66 -31 -2739 0
c (0<=( - aux595 + SATLiteral(66) + SATLiteral(31)))
31 2739 0
66 2739 0
66 31 2738 0
c ((SATLiteral(116) - aux596 + SATLiteral(26))<=0)
-26 -2741 0
-116 -2741 0
-116 -26 -2742 0
c (0<=(SATLiteral(116) - aux596 + SATLiteral(26)))
26 2742 0
116 2742 0
116 26 2741 0
c (( - aux597 + SATLiteral(51) + SATLiteral(21))<=0)
-21 -2744 0
-51 -2744 0
-51 -21 -2745 0
c (0<=( - aux597 + SATLiteral(51) + SATLiteral(21)))
21 2745 0
51 2745 0
51 21 2744 0
c (( - aux598 + SATLiteral(71) + SATLiteral(16))<=0)
-16 -2747 0
-71 -2747 0
-71 -16 -2748 0
c (0<=( - aux598 + SATLiteral(71) + SATLiteral(16)))
16 2748 0
71 2748 0
71 16 2747 0
c (( - aux599 + SATLiteral(76) + SATLiteral(11))<=0)
-11 -2750 0
-76 -2750 0
-76 -11 -2751 0
c (0<=( - aux599 + SATLiteral(76) + SATLiteral(11)))
11 2751 0
76 2751 0
76 11 2750 0
c (( - aux600 + SATLiteral(56) + SATLiteral(6))<=0)
-6 -2753 0
-56 -2753 0
-56 -6 -2754 0
c (0<=( - aux600 + SATLiteral(56) + SATLiteral(6)))
6 2754 0
56 2754 0
56 6 2753 0
c (( - aux601 + SATLiteral(81) + SATLiteral(91))<=0)
-91 -2756 0
-81 -2756 0
-81 -91 -2757 0
c (0<=( - aux601 + SATLiteral(81) + SATLiteral(91)))
91 2757 0
81 2757 0
81 91 2756 0
c ((SATLiteral(106) - aux602 + SATLiteral(86))<=0)
-86 -2759 0
-106 -2759 0
-106 -86 -2760 0
c (0<=(SATLiteral(106) - aux602 + SATLiteral(86)))
86 2760 0
106 2760 0
106 86 2759 0
c ((SATLiteral(121) - aux603 + SATLiteral(61))<=0)
-61 -2762 0
-121 -2762 0
-121 -61 -2763 0
c (0<=(SATLiteral(121) - aux603 + SATLiteral(61)))
61 2763 0
121 2763 0
121 61 2762 0
c (( - aux604 + SATLiteral(36) + SATLiteral(126))<=0)
-126 -2765 0
-36 -2765 0
-36 -126 -2766 0
c (0<=( - aux604 + SATLiteral(36) + SATLiteral(126)))
126 2766 0
36 2766 0
36 126 2765 0
c (( - aux605 + SATLiteral(131) + SATLiteral(136))<=0)
-136 -2768 0
-131 -2768 0
-131 -136 -2769 0
c (0<=( - aux605 + SATLiteral(131) + SATLiteral(136)))
136 2769 0
131 2769 0
131 136 2768 0
c ((aux598 + aux605 - aux606)<=0)
2768 -2771 0
2769 -2772 0
2747 -2771 0
2747 2768 -2772 0
2747 2769 -2774 0
2748 -2772 0
2748 2768 -2774 0
2748 2769 -2776 0
c (0<=(aux598 + aux605 - aux606))
-2769 2776 0
-2768 2774 0
-2748 2776 0
-2748 -2769 2774 0
-2748 -2768 2772 0
-2747 2774 0
-2747 -2769 2772 0
-2747 -2768 2771 0
c ((aux591 + aux593 - aux607)<=0)
2732 -2778 0
2733 -2779 0
2726 -2778 0
2726 2732 -2779 0
2726 2733 -2781 0
2727 -2779 0
2727 2732 -2781 0
2727 2733 -2783 0
c (0<=(aux591 + aux593 - aux607))
-2733 2783 0
-2732 2781 0
-2727 2783 0
-2727 -2733 2781 0
-2727 -2732 2779 0
-2726 2781 0
-2726 -2733 2779 0
-2726 -2732 2778 0
c ((aux588 + aux589 - aux608)<=0)
2720 -2785 0
2721 -2786 0
2717 -2785 0
2717 2720 -2786 0
2717 2721 -2788 0
2718 -2786 0
2718 2720 -2788 0
2718 2721 -2790 0
c (0<=(aux588 + aux589 - aux608))
-2721 2790 0
-2720 2788 0
-2718 2790 0
-2718 -2721 2788 0
-2718 -2720 2786 0
-2717 2788 0
-2717 -2721 2786 0
-2717 -2720 2785 0
c ((aux590 + aux592 - aux609)<=0)
2729 -2792 0
2730 -2793 0
2723 -2792 0
2723 2729 -2793 0
2723 2730 -2795 0
2724 -2793 0
2724 2729 -2795 0
2724 2730 -2797 0
c (0<=(aux590 + aux592 - aux609))
-2730 2797 0
-2729 2795 0
-2724 2797 0
-2724 -2730 2795 0
-2724 -2729 2793 0
-2723 2795 0
-2723 -2730 2793 0
-2723 -2729 2792 0
c ((aux600 + aux603 - aux610)<=0)
2762 -2799 0
2763 -2800 0
2753 -2799 0
2753 2762 -2800 0
2753 2763 -2802 0
2754 -2800 0
2754 2762 -2802 0
2754 2763 -2804 0
c (0<=(aux600 + aux603 - aux610))
-2763 2804 0
-2762 2802 0
-2754 2804 0
-2754 -2763 2802 0
-2754 -2762 2800 0
-2753 2802 0
-2753 -2763 2800 0
-2753 -2762 2799 0
c ((aux595 + aux596 - aux611)<=0)
2741 -2806 0
2742 -2807 0
2738 -2806 0
2738 2741 -2807 0
2738 2742 -2809 0
2739 -2807 0
2739 2741 -2809 0
2739 2742 -2811 0
c (0<=(aux595 + aux596 - aux611))
-2742 2811 0
-2741 2809 0
-2739 2811 0
-2739 -2742 2809 0
-2739 -2741 2807 0
-2738 2809 0
-2738 -2742 2807 0
-2738 -2741 2806 0
c ((aux597 + aux599 - aux612)<=0)
2750 -2813 0
2751 -2814 0
2744 -2813 0
2744 2750 -2814 0
2744 2751 -2816 0
2745 -2814 0
2745 2750 -2816 0
2745 2751 -2818 0
c (0<=(aux597 + aux599 - aux612))
-2751 2818 0
-2750 2816 0
-2745 2818 0
-2745 -2751 2816 0
-2745 -2750 2814 0
-2744 2816 0
-2744 -2751 2814 0
-2744 -2750 2813 0
c ((aux601 + aux604 - aux613)<=0)
2765 -2820 0
2766 -2821 0
2756 -2820 0
2756 2765 -2821 0
2756 2766 -2823 0
2757 -2821 0
2757 2765 -2823 0
2757 2766 -2825 0
c (0<=(aux601 + aux604 - aux613))
-2766 2825 0
-2765 2823 0
-2757 2825 0
-2757 -2766 2823 0
-2757 -2765 2821 0
-2756 2823 0
-2756 -2766 2821 0
-2756 -2765 2820 0
c ((aux594 + aux602 - aux614)<=0)
2759 -2827 0
2760 -2828 0
2735 -2827 0
2735 2759 -2828 0
2735 2760 -2830 0
2736 -2828 0
2736 2759 -2830 0
2736 2760 -2832 0
c (0<=(aux594 + aux602 - aux614))
-2760 2832 0
-2759 2830 0
-2736 2832 0
-2736 -2760 2830 0
-2736 -2759 2828 0
-2735 2830 0
-2735 -2760 2828 0
-2735 -2759 2827 0
c ((aux611 + aux614 - aux615)<=0)
2827 -2834 0
2828 -2835 0
2830 -2837 0
2832 -2839 0
2806 -2834 0
2806 2827 -2835 0
2806 2828 -2837 0
2806 2830 -2839 0
2806 2832 -2841 0
2807 -2835 0
2807 2827 -2837 0
2807 2828 -2839 0
2807 2830 -2841 0
2807 2832 -2843 0
2809 -2837 0
2809 2827 -2839 0
2809 2828 -2841 0
2809 2830 -2843 0
2809 2832 -2845 0
2811 -2839 0
2811 2827 -2841 0
2811 2828 -2843 0
2811 2830 -2845 0
2811 2832 -2847 0
c (0<=(aux611 + aux614 - aux615))
-2832 2847 0
-2830 2845 0
-2828 2843 0
-2827 2841 0
-2811 2847 0
-2811 -2832 2845 0
-2811 -2830 2843 0
-2811 -2828 2841 0
-2811 -2827 2839 0
-2809 2845 0
-2809 -2832 2843 0
-2809 -2830 2841 0
-2809 -2828 2839 0
-2809 -2827 2837 0
-2807 2843 0
-2807 -2832 2841 0
-2807 -2830 2839 0
-2807 -2828 2837 0
-2807 -2827 2835 0
-2806 2841 0
-2806 -2832 2839 0
-2806 -2830 2837 0
-2806 -2828 2835 0
-2806 -2827 2834 0
c ((aux606 + aux607 - aux616)<=0)
2778 -2849 0
2779 -2850 0
2781 -2852 0
2783 -2854 0
2771 -2849 0
2771 2778 -2850 0
2771 2779 -2852 0
2771 2781 -2854 0
2771 2783 -2856 0
2772 -2850 0
2772 2778 -2852 0
2772 2779 -2854 0
2772 2781 -2856 0
2772 2783 -2858 0
2774 -2852 0
2774 2778 -2854 0
2774 2779 -2856 0
2774 2781 -2858 0
2774 2783 -2860 0
2776 -2854 0
2776 2778 -2856 0
2776 2779 -2858 0
2776 2781 -2860 0
2776 2783 -2862 0
c (0<=(aux606 + aux607 - aux616))
-2783 2862 0
-2781 2860 0
-2779 2858 0
-2778 2856 0
-2776 2862 0
-2776 -2783 2860 0
-2776 -2781 2858 0
-2776 -2779 2856 0
-2776 -2778 2854 0
-2774 2860 0
-2774 -2783 2858 0
-2774 -2781 2856 0
-2774 -2779 2854 0
-2774 -2778 2852 0
-2772 2858 0
-2772 -2783 2856 0
-2772 -2781 2854 0
-2772 -2779 2852 0
-2772 -2778 2850 0
-2771 2856 0
-2771 -2783 2854 0
-2771 -2781 2852 0
-2771 -2779 2850 0
-2771 -2778 2849 0
c ((aux608 + aux610 - aux617)<=0)
2799 -2864 0
2800 -2865 0
2802 -2867 0
2804 -2869 0
2785 -2864 0
2785 2799 -2865 0
2785 2800 -2867 0
2785 2802 -2869 0
2785 2804 -2871 0
2786 -2865 0
2786 2799 -2867 0
2786 2800 -2869 0
2786 2802 -2871 0
2786 2804 -2873 0
2788 -2867 0
2788 2799 -2869 0
2788 2800 -2871 0
2788 2802 -2873 0
2788 2804 -2875 0
2790 -2869 0
2790 2799 -2871 0
2790 2800 -2873 0
2790 2802 -2875 0
2790 2804 -2877 0
c (0<=(aux608 + aux610 - aux617))
-2804 2877 0
-2802 2875 0
-2800 2873 0
-2799 2871 0
-2790 2877 0
-2790 -2804 2875 0
-2790 -2802 2873 0
-2790 -2800 2871 0
-2790 -2799 2869 0
-2788 2875 0
-2788 -2804 2873 0
-2788 -2802 2871 0
-2788 -2800 2869 0
-2788 -2799 2867 0
-2786 2873 0
-2786 -2804 2871 0
-2786 -2802 2869 0
-2786 -2800 2867 0
-2786 -2799 2865 0
-2785 2871 0
-2785 -2804 2869 0
-2785 -2802 2867 0
-2785 -2800 2865 0
-2785 -2799 2864 0
c ((aux609 + aux613 - aux618)<=0)
2820 -2879 0
2821 -2880 0
2823 -2882 0
2825 -2884 0
2792 -2879 0
2792 2820 -2880 0
2792 2821 -2882 0
2792 2823 -2884 0
2792 2825 -2886 0
2793 -2880 0
2793 2820 -2882 0
2793 2821 -2884 0
2793 2823 -2886 0
2793 2825 -2888 0
2795 -2882 0
2795 2820 -2884 0
2795 2821 -2886 0
2795 2823 -2888 0
2795 2825 -2890 0
2797 -2884 0
2797 2820 -2886 0
2797 2821 -2888 0
2797 2823 -2890 0
2797 2825 -2892 0
c (0<=(aux609 + aux613 - aux618))
-2825 2892 0
-2823 2890 0
-2821 2888 0
-2820 2886 0
-2797 2892 0
-2797 -2825 2890 0
-2797 -2823 2888 0
-2797 -2821 2886 0
-2797 -2820 2884 0
-2795 2890 0
-2795 -2825 2888 0
-2795 -2823 2886 0
-2795 -2821 2884 0
-2795 -2820 2882 0
-2793 2888 0
-2793 -2825 2886 0
-2793 -2823 2884 0
-2793 -2821 2882 0
-2793 -2820 2880 0
-2792 2886 0
-2792 -2825 2884 0
-2792 -2823 2882 0
-2792 -2821 2880 0
-2792 -2820 2879 0
c ((aux612 + aux618 - aux619)<=0)
2879 -2894 0
2880 -2895 0
2882 -2897 0
2884 -2899 0
2886 -2901 0
2888 -2903 0
2890 -2905 0
2892 -2907 0
2813 -2894 0
2813 2879 -2895 0
2813 2880 -2897 0
2813 2882 -2899 0
2813 2884 -2901 0
2813 2886 -2903 0
2813 2888 -2905 0
2813 2890 -2907 0
2813 2892 -2909 0
2814 -2895 0
2814 2879 -2897 0
2814 2880 -2899 0
2814 2882 -2901 0
2814 2884 -2903 0
2814 2886 -2905 0
2814 2888 -2907 0
2814 2890 -2909 0
2814 2892 -2911 0
2816 -2897 0
2816 2879 -2899 0
2816 2880 -2901 0
2816 2882 -2903 0
2816 2884 -2905 0
2816 2886 -2907 0
2816 2888 -2909 0
2816 2890 -2911 0
2816 2892 -2913 0
2818 -2899 0
2818 2879 -2901 0
2818 2880 -2903 0
2818 2882 -2905 0
2818 2884 -2907 0
2818 2886 -2909 0
2818 2888 -2911 0
2818 2890 -2913 0
2818 2892 -2915 0
c (0<=(aux612 + aux618 - aux619))
-2892 2915 0
-2890 2913 0
-2888 2911 0
-2886 2909 0
-2884 2907 0
-2882 2905 0
-2880 2903 0
-2879 2901 0
-2818 2915 0
-2818 -2892 2913 0
-2818 -2890 2911 0
-2818 -2888 2909 0
-2818 -2886 2907 0
-2818 -2884 2905 0
-2818 -2882 2903 0
-2818 -2880 2901 0
-2818 -2879 2899 0
-2816 2913 0
-2816 -2892 2911 0
-2816 -2890 2909 0
-2816 -2888 2907 0
-2816 -2886 2905 0
-2816 -2884 2903 0
-2816 -2882 2901 0
-2816 -2880 2899 0
-2816 -2879 2897 0
-2814 2911 0
-2814 -2892 2909 0
-2814 -2890 2907 0
-2814 -2888 2905 0
-2814 -2886 2903 0
-2814 -2884 2901 0
-2814 -2882 2899 0
-2814 -2880 2897 0
-2814 -2879 2895 0
-2813 2909 0
-2813 -2892 2907 0
-2813 -2890 2905 0
-2813 -2888 2903 0
-2813 -2886 2901 0
-2813 -2884 2899 0
-2813 -2882 2897 0
-2813 -2880 2895 0
-2813 -2879 2894 0
c ((aux615 + aux616 - aux620)<=0)
2849 -2917 0
2850 -2918 0
2852 -2920 0
2854 -2922 0
2856 -2924 0
2858 -2926 0
2860 -2928 0
2862 -2930 0
2834 -2917 0
2834 2849 -2918 0
2834 2850 -2920 0
2834 2852 -2922 0
2834 2854 -2924 0
2834 2856 -2926 0
2834 2858 -2928 0
2834 2860 -2930 0
2834 2862 -2932 0
2835 -2918 0
2835 2849 -2920 0
2835 2850 -2922 0
2835 2852 -2924 0
2835 2854 -2926 0
2835 2856 -2928 0
2835 2858 -2930 0
2835 2860 -2932 0
2835 2862 -2934 0
2837 -2920 0
2837 2849 -2922 0
2837 2850 -2924 0
2837 2852 -2926 0
2837 2854 -2928 0
2837 2856 -2930 0
2837 2858 -2932 0
2837 2860 -2934 0
2837 2862 -2936 0
2839 -2922 0
2839 2849 -2924 0
2839 2850 -2926 0
2839 2852 -2928 0
2839 2854 -2930 0
2839 2856 -2932 0
2839 2858 -2934 0
2839 2860 -2936 0
2839 2862 -2938 0
2841 -2924 0
2841 2849 -2926 0
2841 2850 -2928 0
2841 2852 -2930 0
2841 2854 -2932 0
2841 2856 -2934 0
2841 2858 -2936 0
2841 2860 -2938 0
2841 2862 -2940 0
2843 -2926 0
2843 2849 -2928 0
2843 2850 -2930 0
2843 2852 -2932 0
2843 2854 -2934 0
2843 2856 -2936 0
2843 2858 -2938 0
2843 2860 -2940 0
2843 2862 -2942 0
2845 -2928 0
2845 2849 -2930 0
2845 2850 -2932 0
2845 2852 -2934 0
2845 2854 -2936 0
2845 2856 -2938 0
2845 2858 -2940 0
2845 2860 -2942 0
2845 2862 -2944 0
2847 -2930 0
2847 2849 -2932 0
2847 2850 -2934 0
2847 2852 -2936 0
2847 2854 -2938 0
2847 2856 -2940 0
2847 2858 -2942 0
2847 2860 -2944 0
2847 2862 -2946 0
c (0<=(aux615 + aux616 - aux620))
-2862 2946 0
-2860 2944 0
-2858 2942 0
-2856 2940 0
-2854 2938 0
-2852 2936 0
-2850 2934 0
-2849 2932 0
-2847 2946 0
-2847 -2862 2944 0
-2847 -2860 2942 0
-2847 -2858 2940 0
-2847 -2856 2938 0
-2847 -2854 2936 0
-2847 -2852 2934 0
-2847 -2850 2932 0
-2847 -2849 2930 0
-2845 2944 0
-2845 -2862 2942 0
-2845 -2860 2940 0
-2845 -2858 2938 0
-2845 -2856 2936 0
-2845 -2854 2934 0
-2845 -2852 2932 0
-2845 -2850 2930 0
-2845 -2849 2928 0
-2843 2942 0
-2843 -2862 2940 0
-2843 -2860 2938 0
-2843 -2858 2936 0
-2843 -2856 2934 0
-2843 -2854 2932 0
-2843 -2852 2930 0
-2843 -2850 2928 0
-2843 -2849 2926 0
-2841 2940 0
-2841 -2862 2938 0
-2841 -2860 2936 0
-2841 -2858 2934 0
-2841 -2856 2932 0
-2841 -2854 2930 0
-2841 -2852 2928 0
-2841 -2850 2926 0
-2841 -2849 2924 0
-2839 2938 0
-2839 -2862 2936 0
-2839 -2860 2934 0
-2839 -2858 2932 0
-2839 -2856 2930 0
-2839 -2854 2928 0
-2839 -2852 2926 0
-2839 -2850 2924 0
-2839 -2849 2922 0
-2837 2936 0
-2837 -2862 2934 0
-2837 -2860 2932 0
-2837 -2858 2930 0
-2837 -2856 2928 0
-2837 -2854 2926 0
-2837 -2852 2924 0
-2837 -2850 2922 0
-2837 -2849 2920 0
-2835 2934 0
-2835 -2862 2932 0
-2835 -2860 2930 0
-2835 -2858 2928 0
-2835 -2856 2926 0
-2835 -2854 2924 0
-2835 -2852 2922 0
-2835 -2850 2920 0
-2835 -2849 2918 0
-2834 2932 0
-2834 -2862 2930 0
-2834 -2860 2928 0
-2834 -2858 2926 0
-2834 -2856 2924 0
-2834 -2854 2922 0
-2834 -2852 2920 0
-2834 -2850 2918 0
-2834 -2849 2917 0
c ((aux617 + aux619 - aux621)<=0)
2894 -2948 0
2895 -2949 0
2897 -2951 0
2899 -2953 0
2901 -2955 0
2903 -2957 0
2905 -2959 0
2907 -2961 0
2909 -2963 0
2911 -2965 0
2913 -2967 0
2915 -2969 0
2864 -2948 0
2864 2894 -2949 0
2864 2895 -2951 0
2864 2897 -2953 0
2864 2899 -2955 0
2864 2901 -2957 0
2864 2903 -2959 0
2864 2905 -2961 0
2864 2907 -2963 0
2864 2909 -2965 0
2864 2911 -2967 0
2864 2913 -2969 0
2864 2915 -2971 0
2865 -2949 0
2865 2894 -2951 0
2865 2895 -2953 0
2865 2897 -2955 0
2865 2899 -2957 0
2865 2901 -2959 0
2865 2903 -2961 0
2865 2905 -2963 0
2865 2907 -2965 0
2865 2909 -2967 0
2865 2911 -2969 0
2865 2913 -2971 0
2865 2915 -2973 0
2867 -2951 0
2867 2894 -2953 0
2867 2895 -2955 0
2867 2897 -2957 0
2867 2899 -2959 0
2867 2901 -2961 0
2867 2903 -2963 0
2867 2905 -2965 0
2867 2907 -2967 0
2867 2909 -2969 0
2867 2911 -2971 0
2867 2913 -2973 0
2867 2915 -2975 0
2869 -2953 0
2869 2894 -2955 0
2869 2895 -2957 0
2869 2897 -2959 0
2869 2899 -2961 0
2869 2901 -2963 0
2869 2903 -2965 0
2869 2905 -2967 0
2869 2907 -2969 0
2869 2909 -2971 0
2869 2911 -2973 0
2869 2913 -2975 0
2869 2915 -2977 0
2871 -2955 0
2871 2894 -2957 0
2871 2895 -2959 0
2871 2897 -2961 0
2871 2899 -2963 0
2871 2901 -2965 0
2871 2903 -2967 0
2871 2905 -2969 0
2871 2907 -2971 0
2871 2909 -2973 0
2871 2911 -2975 0
2871 2913 -2977 0
2871 2915 -2979 0
2873 -2957 0
2873 2894 -2959 0
2873 2895 -2961 0
2873 2897 -2963 0
2873 2899 -2965 0
2873 2901 -2967 0
2873 2903 -2969 0
2873 2905 -2971 0
2873 2907 -2973 0
2873 2909 -2975 0
2873 2911 -2977 0
2873 2913 -2979 0
2873 2915 -2981 0
2875 -2959 0
2875 2894 -2961 0
2875 2895 -2963 0
2875 2897 -2965 0
2875 2899 -2967 0
2875 2901 -2969 0
2875 2903 -2971 0
2875 2905 -2973 0
2875 2907 -2975 0
2875 2909 -2977 0
2875 2911 -2979 0
2875 2913 -2981 0
2875 2915 -2983 0
2877 -2961 0
2877 2894 -2963 0
2877 2895 -2965 0
2877 2897 -2967 0
2877 2899 -2969 0
2877 2901 -2971 0
2877 2903 -2973 0
2877 2905 -2975 0
2877 2907 -2977 0
2877 2909 -2979 0
2877 2911 -2981 0
2877 2913 -2983 0
2877 2915 -2985 0
c (0<=(aux617 + aux619 - aux621))
-2915 2985 0
-2913 2983 0
-2911 2981 0
-2909 2979 0
-2907 2977 0
-2905 2975 0
-2903 2973 0
-2901 2971 0
-2899 2969 0
-2897 2967 0
-2895 2965 0
-2894 2963 0
-2877 2985 0
-2877 -2915 2983 0
-2877 -2913 2981 0
-2877 -2911 2979 0
-2877 -2909 2977 0
-2877 -2907 2975 0
-2877 -2905 2973 0
-2877 -2903 2971 0
-2877 -2901 2969 0
-2877 -2899 2967 0
-2877 -2897 2965 0
-2877 -2895 2963 0
-2877 -2894 2961 0
-2875 2983 0
-2875 -2915 2981 0
-2875 -2913 2979 0
-2875 -2911 2977 0
-2875 -2909 2975 0
-2875 -2907 2973 0
-2875 -2905 2971 0
-2875 -2903 2969 0
-2875 -2901 2967 0
-2875 -2899 2965 0
-2875 -2897 2963 0
-2875 -2895 2961 0
-2875 -2894 2959 0
-2873 2981 0
-2873 -2915 2979 0
-2873 -2913 2977 0
-2873 -2911 2975 0
-2873 -2909 2973 0
-2873 -2907 2971 0
-2873 -2905 2969 0
-2873 -2903 2967 0
-2873 -2901 2965 0
-2873 -2899 2963 0
-2873 -2897 2961 0
-2873 -2895 2959 0
-2873 -2894 2957 0
-2871 2979 0
-2871 -2915 2977 0
-2871 -2913 2975 0
-2871 -2911 2973 0
-2871 -2909 2971 0
-2871 -2907 2969 0
-2871 -2905 2967 0
-2871 -2903 2965 0
-2871 -2901 2963 0
-2871 -2899 2961 0
-2871 -2897 2959 0
-2871 -2895 2957 0
-2871 -2894 2955 0
-2869 2977 0
-2869 -2915 2975 0
-2869 -2913 2973 0
-2869 -2911 2971 0
-2869 -2909 2969 0
-2869 -2907 2967 0
-2869 -2905 2965 0
-2869 -2903 2963 0
-2869 -2901 2961 0
-2869 -2899 2959 0
-2869 -2897 2957 0
-2869 -2895 2955 0
-2869 -2894 2953 0
-2867 2975 0
-2867 -2915 2973 0
-2867 -2913 2971 0
-2867 -2911 2969 0
-2867 -2909 2967 0
-2867 -2907 2965 0
-2867 -2905 2963 0
-2867 -2903 2961 0
-2867 -2901 2959 0
-2867 -2899 2957 0
-2867 -2897 2955 0
-2867 -2895 2953 0
-2867 -2894 2951 0
-2865 2973 0
-2865 -2915 2971 0
-2865 -2913 2969 0
-2865 -2911 2967 0
-2865 -2909 2965 0
-2865 -2907 2963 0
-2865 -2905 2961 0
-2865 -2903 2959 0
-2865 -2901 2957 0
-2865 -2899 2955 0
-2865 -2897 2953 0
-2865 -2895 2951 0
-2865 -2894 2949 0
-2864 2971 0
-2864 -2915 2969 0
-2864 -2913 2967 0
-2864 -2911 2965 0
-2864 -2909 2963 0
-2864 -2907 2961 0
-2864 -2905 2959 0
-2864 -2903 2957 0
-2864 -2901 2955 0
-2864 -2899 2953 0
-2864 -2897 2951 0
-2864 -2895 2949 0
-2864 -2894 2948 0
c ((SATLiteral(-95) + SATLiteral(-100) - aux622)<=0)
100 -2987 0
95 -2987 0
95 100 -2988 0
c (0<=(SATLiteral(-95) + SATLiteral(-100) - aux622))
-100 2988 0
-95 2988 0
-95 -100 2987 0
c ((SATLiteral(-110) - aux623 + SATLiteral(-180))<=0)
180 -2990 0
110 -2990 0
110 180 -2991 0
c (0<=(SATLiteral(-110) - aux623 + SATLiteral(-180)))
-180 2991 0
-110 2991 0
-110 -180 2990 0
c (( - aux624 + SATLiteral(-40) + SATLiteral(-175))<=0)
175 -2993 0
40 -2993 0
40 175 -2994 0
c (0<=( - aux624 + SATLiteral(-40) + SATLiteral(-175)))
-175 2994 0
-40 2994 0
-40 -175 2993 0
c (( - aux625 + SATLiteral(-140) + SATLiteral(-170))<=0)
170 -2996 0
140 -2996 0
140 170 -2997 0
c (0<=( - aux625 + SATLiteral(-140) + SATLiteral(-170)))
-170 2997 0
-140 2997 0
-140 -170 2996 0
c (( - aux626 + SATLiteral(-160) + SATLiteral(-165))<=0)
165 -2999 0
160 -2999 0
160 165 -3000 0
c (0<=( - aux626 + SATLiteral(-160) + SATLiteral(-165)))
-165 3000 0
-160 3000 0
-160 -165 2999 0
c (( - aux627 + SATLiteral(-45) + SATLiteral(-145))<=0)
145 -3002 0
45 -3002 0
45 145 -3003 0
c (0<=( - aux627 + SATLiteral(-45) + SATLiteral(-145)))
-145 3003 0
-45 3003 0
-45 -145 3002 0
c (( - aux628 + SATLiteral(-150) + SATLiteral(-155))<=0)
155 -3005 0
150 -3005 0
150 155 -3006 0
c (0<=( - aux628 + SATLiteral(-150) + SATLiteral(-155)))
-155 3006 0
-150 3006 0
-150 -155 3005 0
c (( - aux629 + SATLiteral(-65) + SATLiteral(-30))<=0)
30 -3008 0
65 -3008 0
65 30 -3009 0
c (0<=( - aux629 + SATLiteral(-65) + SATLiteral(-30)))
-30 3009 0
-65 3009 0
-65 -30 3008 0
c ((SATLiteral(-115) - aux630 + SATLiteral(-25))<=0)
25 -3011 0
115 -3011 0
115 25 -3012 0
c (0<=(SATLiteral(-115) - aux630 + SATLiteral(-25)))
-25 3012 0
-115 3012 0
-115 -25 3011 0
c (( - aux631 + SATLiteral(-50) + SATLiteral(-20))<=0)
20 -3014 0
50 -3014 0
50 20 -3015 0
c (0<=( - aux631 + SATLiteral(-50) + SATLiteral(-20)))
-20 3015 0
-50 3015 0
-50 -20 3014 0
c (( - aux632 + SATLiteral(-70) + SATLiteral(-15))<=0)
15 -3017 0
70 -3017 0
70 15 -3018 0
c (0<=( - aux632 + SATLiteral(-70) + SATLiteral(-15)))
-15 3018 0
-70 3018 0
-70 -15 3017 0
c (( - aux633 + SATLiteral(-75) + SATLiteral(-10))<=0)
10 -3020 0
75 -3020 0
75 10 -3021 0
c (0<=( - aux633 + SATLiteral(-75) + SATLiteral(-10)))
-10 3021 0
-75 3021 0
-75 -10 3020 0
c (( - aux634 + SATLiteral(-55) + SATLiteral(-5))<=0)
5 -3023 0
55 -3023 0
55 5 -3024 0
c (0<=( - aux634 + SATLiteral(-55) + SATLiteral(-5)))
-5 3024 0
-55 3024 0
-55 -5 3023 0
c (( - aux635 + SATLiteral(-80) + SATLiteral(-90))<=0)
90 -3026 0
80 -3026 0
80 90 -3027 0
c (0<=( - aux635 + SATLiteral(-80) + SATLiteral(-90)))
-90 3027 0
-80 3027 0
-80 -90 3026 0
c ((SATLiteral(-105) - aux636 + SATLiteral(-85))<=0)
85 -3029 0
105 -3029 0
105 85 -3030 0
c (0<=(SATLiteral(-105) - aux636 + SATLiteral(-85)))
-85 3030 0
-105 3030 0
-105 -85 3029 0
c ((SATLiteral(-120) - aux637 + SATLiteral(-60))<=0)
60 -3032 0
120 -3032 0
120 60 -3033 0
c (0<=(SATLiteral(-120) - aux637 + SATLiteral(-60)))
-60 3033 0
-120 3033 0
-120 -60 3032 0
c (( - aux638 + SATLiteral(-35) + SATLiteral(-125))<=0)
125 -3035 0
35 -3035 0
35 125 -3036 0
c (0<=( - aux638 + SATLiteral(-35) + SATLiteral(-125)))
-125 3036 0
-35 3036 0
-35 -125 3035 0
c (( - aux639 + SATLiteral(-130) + SATLiteral(-135))<=0)
135 -3038 0
130 -3038 0
130 135 -3039 0
c (0<=( - aux639 + SATLiteral(-130) + SATLiteral(-135)))
-135 3039 0
-130 3039 0
-130 -135 3038 0
c ((aux632 + aux639 - aux640)<=0)
3038 -3041 0
3039 -3042 0
3017 -3041 0
3017 3038 -3042 0
3017 3039 -3044 0
3018 -3042 0
3018 3038 -3044 0
3018 3039 -3046 0
c (0<=(aux632 + aux639 - aux640))
-3039 3046 0
-3038 3044 0
-3018 3046 0
-3018 -3039 3044 0
-3018 -3038 3042 0
-3017 3044 0
-3017 -3039 3042 0
-3017 -3038 3041 0
c ((aux625 + aux627 - aux641)<=0)
3002 -3048 0
3003 -3049 0
2996 -3048 0
2996 3002 -3049 0
2996 3003 -3051 0
2997 -3049 0
2997 3002 -3051 0
2997 3003 -3053 0
c (0<=(aux625 + aux627 - aux641))
-3003 3053 0
-3002 3051 0
-2997 3053 0
-2997 -3003 3051 0
-2997 -3002 3049 0
-2996 3051 0
-2996 -3003 3049 0
-2996 -3002 3048 0
c ((aux622 + aux623 - aux642)<=0)
2990 -3055 0
2991 -3056 0
2987 -3055 0
2987 2990 -3056 0
2987 2991 -3058 0
2988 -3056 0
2988 2990 -3058 0
2988 2991 -3060 0
c (0<=(aux622 + aux623 - aux642))
-2991 3060 0
-2990 3058 0
-2988 3060 0
-2988 -2991 3058 0
-2988 -2990 3056 0
-2987 3058 0
-2987 -2991 3056 0
-2987 -2990 3055 0
c ((aux624 + aux626 - aux643)<=0)
2999 -3062 0
3000 -3063 0
2993 -3062 0
2993 2999 -3063 0
2993 3000 -3065 0
2994 -3063 0
2994 2999 -3065 0
2994 3000 -3067 0
c (0<=(aux624 + aux626 - aux643))
-3000 3067 0
-2999 3065 0
-2994 3067 0
-2994 -3000 3065 0
-2994 -2999 3063 0
-2993 3065 0
-2993 -3000 3063 0
-2993 -2999 3062 0
c ((aux634 + aux637 - aux644)<=0)
3032 -3069 0
3033 -3070 0
3023 -3069 0
3023 3032 -3070 0
3023 3033 -3072 0
3024 -3070 0
3024 3032 -3072 0
3024 3033 -3074 0
c (0<=(aux634 + aux637 - aux644))
-3033 3074 0
-3032 3072 0
-3024 3074 0
-3024 -3033 3072 0
-3024 -3032 3070 0
-3023 3072 0
-3023 -3033 3070 0
-3023 -3032 3069 0
c ((aux629 + aux630 - aux645)<=0)
3011 -3076 0
3012 -3077 0
3008 -3076 0
3008 3011 -3077 0
3008 3012 -3079 0
3009 -3077 0
3009 3011 -3079 0
3009 3012 -3081 0
c (0<=(aux629 + aux630 - aux645))
-3012 3081 0
-3011 3079 0
-3009 3081 0
-3009 -3012 3079 0
-3009 -3011 3077 0
-3008 3079 0
-3008 -3012 3077 0
-3008 -3011 3076 0
c ((aux631 + aux633 - aux646)<=0)
3020 -3083 0
3021 -3084 0
3014 -3083 0
3014 3020 -3084 0
3014 3021 -3086 0
3015 -3084 0
3015 3020 -3086 0
3015 3021 -3088 0
c (0<=(aux631 + aux633 - aux646))
-3021 3088 0
-3020 3086 0
-3015 3088 0
-3015 -3021 3086 0
-3015 -3020 3084 0
-3014 3086 0
-3014 -3021 3084 0
-3014 -3020 3083 0
c ((aux635 + aux638 - aux647)<=0)
3035 -3090 0
3036 -3091 0
3026 -3090 0
3026 3035 -3091 0
3026 3036 -3093 0
3027 -3091 0
3027 3035 -3093 0
3027 3036 -3095 0
c (0<=(aux635 + aux638 - aux647))
-3036 3095 0
-3035 3093 0
-3027 3095 0
-3027 -3036 3093 0
-3027 -3035 3091 0
-3026 3093 0
-3026 -3036 3091 0
-3026 -3035 3090 0
c ((aux628 + aux636 - aux648)<=0)
3029 -3097 0
3030 -3098 0
3005 -3097 0
3005 3029 -3098 0
3005 3030 -3100 0
3006 -3098 0
3006 3029 -3100 0
3006 3030 -3102 0
c (0<=(aux628 + aux636 - aux648))
-3030 3102 0
-3029 3100 0
-3006 3102 0
-3006 -3030 3100 0
-3006 -3029 3098 0
-3005 3100 0
-3005 -3030 3098 0
-3005 -3029 3097 0
c ((aux645 + aux648 - aux649)<=0)
3097 -3104 0
3098 -3105 0
3100 -3107 0
3102 -3109 0
3076 -3104 0
3076 3097 -3105 0
3076 3098 -3107 0
3076 3100 -3109 0
3076 3102 -3111 0
3077 -3105 0
3077 3097 -3107 0
3077 3098 -3109 0
3077 3100 -3111 0
3077 3102 -3113 0
3079 -3107 0
3079 3097 -3109 0
3079 3098 -3111 0
3079 3100 -3113 0
3079 3102 -3115 0
3081 -3109 0
3081 3097 -3111 0
3081 3098 -3113 0
3081 3100 -3115 0
3081 3102 -3117 0
c (0<=(aux645 + aux648 - aux649))
-3102 3117 0
-3100 3115 0
-3098 3113 0
-3097 3111 0
-3081 3117 0
-3081 -3102 3115 0
-3081 -3100 3113 0
-3081 -3098 3111 0
-3081 -3097 3109 0
-3079 3115 0
-3079 -3102 3113 0
-3079 -3100 3111 0
-3079 -3098 3109 0
-3079 -3097 3107 0
-3077 3113 0
-3077 -3102 3111 0
-3077 -3100 3109 0
-3077 -3098 3107 0
-3077 -3097 3105 0
-3076 3111 0
-3076 -3102 3109 0
-3076 -3100 3107 0
-3076 -3098 3105 0
-3076 -3097 3104 0
c ((aux640 + aux641 - aux650)<=0)
3048 -3119 0
3049 -3120 0
3051 -3122 0
3053 -3124 0
3041 -3119 0
3041 3048 -3120 0
3041 3049 -3122 0
3041 3051 -3124 0
3041 3053 -3126 0
3042 -3120 0
3042 3048 -3122 0
3042 3049 -3124 0
3042 3051 -3126 0
3042 3053 -3128 0
3044 -3122 0
3044 3048 -3124 0
3044 3049 -3126 0
3044 3051 -3128 0
3044 3053 -3130 0
3046 -3124 0
3046 3048 -3126 0
3046 3049 -3128 0
3046 3051 -3130 0
3046 3053 -3132 0
c (0<=(aux640 + aux641 - aux650))
-3053 3132 0
-3051 3130 0
-3049 3128 0
-3048 3126 0
-3046 3132 0
-3046 -3053 3130 0
-3046 -3051 3128 0
-3046 -3049 3126 0
-3046 -3048 3124 0
-3044 3130 0
-3044 -3053 3128 0
-3044 -3051 3126 0
-3044 -3049 3124 0
-3044 -3048 3122 0
-3042 3128 0
-3042 -3053 3126 0
-3042 -3051 3124 0
-3042 -3049 3122 0
-3042 -3048 3120 0
-3041 3126 0
-3041 -3053 3124 0
-3041 -3051 3122 0
-3041 -3049 3120 0
-3041 -3048 3119 0
c ((aux642 + aux644 - aux651)<=0)
3069 -3134 0
3070 -3135 0
3072 -3137 0
3074 -3139 0
3055 -3134 0
3055 3069 -3135 0
3055 3070 -3137 0
3055 3072 -3139 0
3055 3074 -3141 0
3056 -3135 0
3056 3069 -3137 0
3056 3070 -3139 0
3056 3072 -3141 0
3056 3074 -3143 0
3058 -3137 0
3058 3069 -3139 0
3058 3070 -3141 0
3058 3072 -3143 0
3058 3074 -3145 0
3060 -3139 0
3060 3069 -3141 0
3060 3070 -3143 0
3060 3072 -3145 0
3060 3074 -3147 0
c (0<=(aux642 + aux644 - aux651))
-3074 3147 0
-3072 3145 0
-3070 3143 0
-3069 3141 0
-3060 3147 0
-3060 -3074 3145 0
-3060 -3072 3143 0
-3060 -3070 3141 0
-3060 -3069 3139 0
-3058 3145 0
-3058 -3074 3143 0
-3058 -3072 3141 0
-3058 -3070 3139 0
-3058 -3069 3137 0
-3056 3143 0
-3056 -3074 3141 0
-3056 -3072 3139 0
-3056 -3070 3137 0
-3056 -3069 3135 0
-3055 3141 0
-3055 -3074 3139 0
-3055 -3072 3137 0
-3055 -3070 3135 0
-3055 -3069 3134 0
c ((aux643 + aux647 - aux652)<=0)
3090 -3149 0
3091 -3150 0
3093 -3152 0
3095 -3154 0
3062 -3149 0
3062 3090 -3150 0
3062 3091 -3152 0
3062 3093 -3154 0
3062 3095 -3156 0
3063 -3150 0
3063 3090 -3152 0
3063 3091 -3154 0
3063 3093 -3156 0
3063 3095 -3158 0
3065 -3152 0
3065 3090 -3154 0
3065 3091 -3156 0
3065 3093 -3158 0
3065 3095 -3160 0
3067 -3154 0
3067 3090 -3156 0
3067 3091 -3158 0
3067 3093 -3160 0
3067 3095 -3162 0
c (0<=(aux643 + aux647 - aux652))
-3095 3162 0
-3093 3160 0
-3091 3158 0
-3090 3156 0
-3067 3162 0
-3067 -3095 3160 0
-3067 -3093 3158 0
-3067 -3091 3156 0
-3067 -3090 3154 0
-3065 3160 0
-3065 -3095 3158 0
-3065 -3093 3156 0
-3065 -3091 3154 0
-3065 -3090 3152 0
-3063 3158 0
-3063 -3095 3156 0
-3063 -3093 3154 0
-3063 -3091 3152 0
-3063 -3090 3150 0
-3062 3156 0
-3062 -3095 3154 0
-3062 -3093 3152 0
-3062 -3091 3150 0
-3062 -3090 3149 0
c ((aux646 + aux652 - aux653)<=0)
3149 -3164 0
3150 -3165 0
3152 -3167 0
3154 -3169 0
3156 -3171 0
3158 -3173 0
3160 -3175 0
3162 -3177 0
3083 -3164 0
3083 3149 -3165 0
3083 3150 -3167 0
3083 3152 -3169 0
3083 3154 -3171 0
3083 3156 -3173 0
3083 3158 -3175 0
3083 3160 -3177 0
3083 3162 -3179 0
3084 -3165 0
3084 3149 -3167 0
3084 3150 -3169 0
3084 3152 -3171 0
3084 3154 -3173 0
3084 3156 -3175 0
3084 3158 -3177 0
3084 3160 -3179 0
3084 3162 -3181 0
3086 -3167 0
3086 3149 -3169 0
3086 3150 -3171 0
3086 3152 -3173 0
3086 3154 -3175 0
3086 3156 -3177 0
3086 3158 -3179 0
3086 3160 -3181 0
3086 3162 -3183 0
3088 -3169 0
3088 3149 -3171 0
3088 3150 -3173 0
3088 3152 -3175 0
3088 3154 -3177 0
3088 3156 -3179 0
3088 3158 -3181 0
3088 3160 -3183 0
3088 3162 -3185 0
c (0<=(aux646 + aux652 - aux653))
-3162 3185 0
-3160 3183 0
-3158 3181 0
-3156 3179 0
-3154 3177 0
-3152 3175 0
-3150 3173 0
-3149 3171 0
-3088 3185 0
-3088 -3162 3183 0
-3088 -3160 3181 0
-3088 -3158 3179 0
-3088 -3156 3177 0
-3088 -3154 3175 0
-3088 -3152 3173 0
-3088 -3150 3171 0
-3088 -3149 3169 0
-3086 3183 0
-3086 -3162 3181 0
-3086 -3160 3179 0
-3086 -3158 3177 0
-3086 -3156 3175 0
-3086 -3154 3173 0
-3086 -3152 3171 0
-3086 -3150 3169 0
-3086 -3149 3167 0
-3084 3181 0
-3084 -3162 3179 0
-3084 -3160 3177 0
-3084 -3158 3175 0
-3084 -3156 3173 0
-3084 -3154 3171 0
-3084 -3152 3169 0
-3084 -3150 3167 0
-3084 -3149 3165 0
-3083 3179 0
-3083 -3162 3177 0
-3083 -3160 3175 0
-3083 -3158 3173 0
-3083 -3156 3171 0
-3083 -3154 3169 0
-3083 -3152 3167 0
-3083 -3150 3165 0
-3083 -3149 3164 0
c ((aux649 + aux650 - aux654)<=0)
3119 -3187 0
3120 -3188 0
3122 -3190 0
3124 -3192 0
3126 -3194 0
3128 -3196 0
3130 -3198 0
3132 -3200 0
3104 -3187 0
3104 3119 -3188 0
3104 3120 -3190 0
3104 3122 -3192 0
3104 3124 -3194 0
3104 3126 -3196 0
3104 3128 -3198 0
3104 3130 -3200 0
3104 3132 -3202 0
3105 -3188 0
3105 3119 -3190 0
3105 3120 -3192 0
3105 3122 -3194 0
3105 3124 -3196 0
3105 3126 -3198 0
3105 3128 -3200 0
3105 3130 -3202 0
3105 3132 -3204 0
3107 -3190 0
3107 3119 -3192 0
3107 3120 -3194 0
3107 3122 -3196 0
3107 3124 -3198 0
3107 3126 -3200 0
3107 3128 -3202 0
3107 3130 -3204 0
3107 3132 -3206 0
3109 -3192 0
3109 3119 -3194 0
3109 3120 -3196 0
3109 3122 -3198 0
3109 3124 -3200 0
3109 3126 -3202 0
3109 3128 -3204 0
3109 3130 -3206 0
3109 3132 -3208 0
3111 -3194 0
3111 3119 -3196 0
3111 3120 -3198 0
3111 3122 -3200 0
3111 3124 -3202 0
3111 3126 -3204 0
3111 3128 -3206 0
3111 3130 -3208 0
3111 3132 -3210 0
3113 -3196 0
3113 3119 -3198 0
3113 3120 -3200 0
3113 3122 -3202 0
3113 3124 -3204 0
3113 3126 -3206 0
3113 3128 -3208 0
3113 3130 -3210 0
3113 3132 -3212 0
3115 -3198 0
3115 3119 -3200 0
3115 3120 -3202 0
3115 3122 -3204 0
3115 3124 -3206 0
3115 3126 -3208 0
3115 3128 -3210 0
3115 3130 -3212 0
3115 3132 -3214 0
3117 -3200 0
3117 3119 -3202 0
3117 3120 -3204 0
3117 3122 -3206 0
3117 3124 -3208 0
3117 3126 -3210 0
3117 3128 -3212 0
3117 3130 -3214 0
3117 3132 -3216 0
c (0<=(aux649 + aux650 - aux654))
-3132 3216 0
-3130 3214 0
-3128 3212 0
-3126 3210 0
-3124 3208 0
-3122 3206 0
-3120 3204 0
-3119 3202 0
-3117 3216 0
-3117 -3132 3214 0
-3117 -3130 3212 0
-3117 -3128 3210 0
-3117 -3126 3208 0
-3117 -3124 3206 0
-3117 -3122 3204 0
-3117 -3120 3202 0
-3117 -3119 3200 0
-3115 3214 0
-3115 -3132 3212 0
-3115 -3130 3210 0
-3115 -3128 3208 0
-3115 -3126 3206 0
-3115 -3124 3204 0
-3115 -3122 3202 0
-3115 -3120 3200 0
-3115 -3119 3198 0
-3113 3212 0
-3113 -3132 3210 0
-3113 -3130 3208 0
-3113 -3128 3206 0
-3113 -3126 3204 0
-3113 -3124 3202 0
-3113 -3122 3200 0
-3113 -3120 3198 0
-3113 -3119 3196 0
-3111 3210 0
-3111 -3132 3208 0
-3111 -3130 3206 0
-3111 -3128 3204 0
-3111 -3126 3202 0
-3111 -3124 3200 0
-3111 -3122 3198 0
-3111 -3120 3196 0
-3111 -3119 3194 0
-3109 3208 0
-3109 -3132 3206 0
-3109 -3130 3204 0
-3109 -3128 3202 0
-3109 -3126 3200 0
-3109 -3124 3198 0
-3109 -3122 3196 0
-3109 -3120 3194 0
-3109 -3119 3192 0
-3107 3206 0
-3107 -3132 3204 0
-3107 -3130 3202 0
-3107 -3128 3200 0
-3107 -3126 3198 0
-3107 -3124 3196 0
-3107 -3122 3194 0
-3107 -3120 3192 0
-3107 -3119 3190 0
-3105 3204 0
-3105 -3132 3202 0
-3105 -3130 3200 0
-3105 -3128 3198 0
-3105 -3126 3196 0
-3105 -3124 3194 0
-3105 -3122 3192 0
-3105 -3120 3190 0
-3105 -3119 3188 0
-3104 3202 0
-3104 -3132 3200 0
-3104 -3130 3198 0
-3104 -3128 3196 0
-3104 -3126 3194 0
-3104 -3124 3192 0
-3104 -3122 3190 0
-3104 -3120 3188 0
-3104 -3119 3187 0
c ((aux651 + aux653 - aux655)<=0)
3164 -3218 0
3165 -3219 0
3167 -3221 0
3169 -3223 0
3171 -3225 0
3173 -3227 0
3175 -3229 0
3177 -3231 0
3179 -3233 0
3181 -3235 0
3183 -3237 0
3185 -3239 0
3134 -3218 0
3134 3164 -3219 0
3134 3165 -3221 0
3134 3167 -3223 0
3134 3169 -3225 0
3134 3171 -3227 0
3134 3173 -3229 0
3134 3175 -3231 0
3134 3177 -3233 0
3134 3179 -3235 0
3134 3181 -3237 0
3134 3183 -3239 0
3134 3185 -3241 0
3135 -3219 0
3135 3164 -3221 0
3135 3165 -3223 0
3135 3167 -3225 0
3135 3169 -3227 0
3135 3171 -3229 0
3135 3173 -3231 0
3135 3175 -3233 0
3135 3177 -3235 0
3135 3179 -3237 0
3135 3181 -3239 0
3135 3183 -3241 0
3135 3185 -3243 0
3137 -3221 0
3137 3164 -3223 0
3137 3165 -3225 0
3137 3167 -3227 0
3137 3169 -3229 0
3137 3171 -3231 0
3137 3173 -3233 0
3137 3175 -3235 0
3137 3177 -3237 0
3137 3179 -3239 0
3137 3181 -3241 0
3137 3183 -3243 0
3137 3185 -3245 0
3139 -3223 0
3139 3164 -3225 0
3139 3165 -3227 0
3139 3167 -3229 0
3139 3169 -3231 0
3139 3171 -3233 0
3139 3173 -3235 0
3139 3175 -3237 0
3139 3177 -3239 0
3139 3179 -3241 0
3139 3181 -3243 0
3139 3183 -3245 0
3139 3185 -3247 0
3141 -3225 0
3141 3164 -3227 0
3141 3165 -3229 0
3141 3167 -3231 0
3141 3169 -3233 0
3141 3171 -3235 0
3141 3173 -3237 0
3141 3175 -3239 0
3141 3177 -3241 0
3141 3179 -3243 0
3141 3181 -3245 0
3141 3183 -3247 0
3141 3185 -3249 0
3143 -3227 0
3143 3164 -3229 0
3143 3165 -3231 0
3143 3167 -3233 0
3143 3169 -3235 0
3143 3171 -3237 0
3143 3173 -3239 0
3143 3175 -3241 0
3143 3177 -3243 0
3143 3179 -3245 0
3143 3181 -3247 0
3143 3183 -3249 0
3143 3185 -3251 0
3145 -3229 0
3145 3164 -3231 0
3145 3165 -3233 0
3145 3167 -3235 0
3145 3169 -3237 0
3145 3171 -3239 0
3145 3173 -3241 0
3145 3175 -3243 0
3145 3177 -3245 0
3145 3179 -3247 0
3145 3181 -3249 0
3145 3183 -3251 0
3145 3185 -3253 0
3147 -3231 0
3147 3164 -3233 0
3147 3165 -3235 0
3147 3167 -3237 0
3147 3169 -3239 0
3147 3171 -3241 0
3147 3173 -3243 0
3147 3175 -3245 0
3147 3177 -3247 0
3147 3179 -3249 0
3147 3181 -3251 0
3147 3183 -3253 0
3147 3185 -3255 0
c (0<=(aux651 + aux653 - aux655))
-3185 3255 0
-3183 3253 0
-3181 3251 0
-3179 3249 0
-3177 3247 0
-3175 3245 0
-3173 3243 0
-3171 3241 0
-3169 3239 0
-3167 3237 0
-3165 3235 0
-3164 3233 0
-3147 3255 0
-3147 -3185 3253 0
-3147 -3183 3251 0
-3147 -3181 3249 0
-3147 -3179 3247 0
-3147 -3177 3245 0
-3147 -3175 3243 0
-3147 -3173 3241 0
-3147 -3171 3239 0
-3147 -3169 3237 0
-3147 -3167 3235 0
-3147 -3165 3233 0
-3147 -3164 3231 0
-3145 3253 0
-3145 -3185 3251 0
-3145 -3183 3249 0
-3145 -3181 3247 0
-3145 -3179 3245 0
-3145 -3177 3243 0
-3145 -3175 3241 0
-3145 -3173 3239 0
-3145 -3171 3237 0
-3145 -3169 3235 0
-3145 -3167 3233 0
-3145 -3165 3231 0
-3145 -3164 3229 0
-3143 3251 0
-3143 -3185 3249 0
-3143 -3183 3247 0
-3143 -3181 3245 0
-3143 -3179 3243 0
-3143 -3177 3241 0
-3143 -3175 3239 0
-3143 -3173 3237 0
-3143 -3171 3235 0
-3143 -3169 3233 0
-3143 -3167 3231 0
-3143 -3165 3229 0
-3143 -3164 3227 0
-3141 3249 0
-3141 -3185 3247 0
-3141 -3183 3245 0
-3141 -3181 3243 0
-3141 -3179 3241 0
-3141 -3177 3239 0
-3141 -3175 3237 0
-3141 -3173 3235 0
-3141 -3171 3233 0
-3141 -3169 3231 0
-3141 -3167 3229 0
-3141 -3165 3227 0
-3141 -3164 3225 0
-3139 3247 0
-3139 -3185 3245 0
-3139 -3183 3243 0
-3139 -3181 3241 0
-3139 -3179 3239 0
-3139 -3177 3237 0
-3139 -3175 3235 0
-3139 -3173 3233 0
-3139 -3171 3231 0
-3139 -3169 3229 0
-3139 -3167 3227 0
-3139 -3165 3225 0
-3139 -3164 3223 0
-3137 3245 0
-3137 -3185 3243 0
-3137 -3183 3241 0
-3137 -3181 3239 0
-3137 -3179 3237 0
-3137 -3177 3235 0
-3137 -3175 3233 0
-3137 -3173 3231 0
-3137 -3171 3229 0
-3137 -3169 3227 0
-3137 -3167 3225 0
-3137 -3165 3223 0
-3137 -3164 3221 0
-3135 3243 0
-3135 -3185 3241 0
-3135 -3183 3239 0
-3135 -3181 3237 0
-3135 -3179 3235 0
-3135 -3177 3233 0
-3135 -3175 3231 0
-3135 -3173 3229 0
-3135 -3171 3227 0
-3135 -3169 3225 0
-3135 -3167 3223 0
-3135 -3165 3221 0
-3135 -3164 3219 0
-3134 3241 0
-3134 -3185 3239 0
-3134 -3183 3237 0
-3134 -3181 3235 0
-3134 -3179 3233 0
-3134 -3177 3231 0
-3134 -3175 3229 0
-3134 -3173 3227 0
-3134 -3171 3225 0
-3134 -3169 3223 0
-3134 -3167 3221 0
-3134 -3165 3219 0
-3134 -3164 3218 0
c ((aux552 + aux553 - shift(num_occupied_by_types_00000, -36))<=36)
2408 -534 0
2409 -535 0
2411 -537 0
2413 -539 0
2415 -541 0
2417 -543 0
2419 -545 0
2421 -547 0
2423 -549 0
2425 -551 0
2427 -553 0
2429 -555 0
2431 -557 0
2433 -559 0
2435 -561 0
2437 -563 0
2439 -565 0
2441 -567 0
2443 -569 0
2445 -571 0
2377 -534 0
2377 2408 -535 0
2377 2409 -537 0
2377 2411 -539 0
2377 2413 -541 0
2377 2415 -543 0
2377 2417 -545 0
2377 2419 -547 0
2377 2421 -549 0
2377 2423 -551 0
2377 2425 -553 0
2377 2427 -555 0
2377 2429 -557 0
2377 2431 -559 0
2377 2433 -561 0
2377 2435 -563 0
2377 2437 -565 0
2377 2439 -567 0
2377 2441 -569 0
2377 2443 -571 0
2377 2445 -573 0
2378 -535 0
2378 2408 -537 0
2378 2409 -539 0
2378 2411 -541 0
2378 2413 -543 0
2378 2415 -545 0
2378 2417 -547 0
2378 2419 -549 0
2378 2421 -551 0
2378 2423 -553 0
2378 2425 -555 0
2378 2427 -557 0
2378 2429 -559 0
2378 2431 -561 0
2378 2433 -563 0
2378 2435 -565 0
2378 2437 -567 0
2378 2439 -569 0
2378 2441 -571 0
2378 2443 -573 0
2378 2445 -575 0
2380 -537 0
2380 2408 -539 0
2380 2409 -541 0
2380 2411 -543 0
2380 2413 -545 0
2380 2415 -547 0
2380 2417 -549 0
2380 2419 -551 0
2380 2421 -553 0
2380 2423 -555 0
2380 2425 -557 0
2380 2427 -559 0
2380 2429 -561 0
2380 2431 -563 0
2380 2433 -565 0
2380 2435 -567 0
2380 2437 -569 0
2380 2439 -571 0
2380 2441 -573 0
2380 2443 -575 0
2380 2445 -577 0
2382 -539 0
2382 2408 -541 0
2382 2409 -543 0
2382 2411 -545 0
2382 2413 -547 0
2382 2415 -549 0
2382 2417 -551 0
2382 2419 -553 0
2382 2421 -555 0
2382 2423 -557 0
2382 2425 -559 0
2382 2427 -561 0
2382 2429 -563 0
2382 2431 -565 0
2382 2433 -567 0
2382 2435 -569 0
2382 2437 -571 0
2382 2439 -573 0
2382 2441 -575 0
2382 2443 -577 0
2382 2445 -579 0
2384 -541 0
2384 2408 -543 0
2384 2409 -545 0
2384 2411 -547 0
2384 2413 -549 0
2384 2415 -551 0
2384 2417 -553 0
2384 2419 -555 0
2384 2421 -557 0
2384 2423 -559 0
2384 2425 -561 0
2384 2427 -563 0
2384 2429 -565 0
2384 2431 -567 0
2384 2433 -569 0
2384 2435 -571 0
2384 2437 -573 0
2384 2439 -575 0
2384 2441 -577 0
2384 2443 -579 0
2384 2445 -581 0
2386 -543 0
2386 2408 -545 0
2386 2409 -547 0
2386 2411 -549 0
2386 2413 -551 0
2386 2415 -553 0
2386 2417 -555 0
2386 2419 -557 0
2386 2421 -559 0
2386 2423 -561 0
2386 2425 -563 0
2386 2427 -565 0
2386 2429 -567 0
2386 2431 -569 0
2386 2433 -571 0
2386 2435 -573 0
2386 2437 -575 0
2386 2439 -577 0
2386 2441 -579 0
2386 2443 -581 0
2386 2445 -583 0
2388 -545 0
2388 2408 -547 0
2388 2409 -549 0
2388 2411 -551 0
2388 2413 -553 0
2388 2415 -555 0
2388 2417 -557 0
2388 2419 -559 0
2388 2421 -561 0
2388 2423 -563 0
2388 2425 -565 0
2388 2427 -567 0
2388 2429 -569 0
2388 2431 -571 0
2388 2433 -573 0
2388 2435 -575 0
2388 2437 -577 0
2388 2439 -579 0
2388 2441 -581 0
2388 2443 -583 0
2388 2445 -585 0
2390 -547 0
2390 2408 -549 0
2390 2409 -551 0
2390 2411 -553 0
2390 2413 -555 0
2390 2415 -557 0
2390 2417 -559 0
2390 2419 -561 0
2390 2421 -563 0
2390 2423 -565 0
2390 2425 -567 0
2390 2427 -569 0
2390 2429 -571 0
2390 2431 -573 0
2390 2433 -575 0
2390 2435 -577 0
2390 2437 -579 0
2390 2439 -581 0
2390 2441 -583 0
2390 2443 -585 0
2390 2445 -587 0
2392 -549 0
2392 2408 -551 0
2392 2409 -553 0
2392 2411 -555 0
2392 2413 -557 0
2392 2415 -559 0
2392 2417 -561 0
2392 2419 -563 0
2392 2421 -565 0
2392 2423 -567 0
2392 2425 -569 0
2392 2427 -571 0
2392 2429 -573 0
2392 2431 -575 0
2392 2433 -577 0
2392 2435 -579 0
2392 2437 -581 0
2392 2439 -583 0
2392 2441 -585 0
2392 2443 -587 0
2392 2445 -589 0
2394 -551 0
2394 2408 -553 0
2394 2409 -555 0
2394 2411 -557 0
2394 2413 -559 0
2394 2415 -561 0
2394 2417 -563 0
2394 2419 -565 0
2394 2421 -567 0
2394 2423 -569 0
2394 2425 -571 0
2394 2427 -573 0
2394 2429 -575 0
2394 2431 -577 0
2394 2433 -579 0
2394 2435 -581 0
2394 2437 -583 0
2394 2439 -585 0
2394 2441 -587 0
2394 2443 -589 0
2394 2445 -591 0
2396 -553 0
2396 2408 -555 0
2396 2409 -557 0
2396 2411 -559 0
2396 2413 -561 0
2396 2415 -563 0
2396 2417 -565 0
2396 2419 -567 0
2396 2421 -569 0
2396 2423 -571 0
2396 2425 -573 0
2396 2427 -575 0
2396 2429 -577 0
2396 2431 -579 0
2396 2433 -581 0
2396 2435 -583 0
2396 2437 -585 0
2396 2439 -587 0
2396 2441 -589 0
2396 2443 -591 0
2396 2445 -593 0
2398 -555 0
2398 2408 -557 0
2398 2409 -559 0
2398 2411 -561 0
2398 2413 -563 0
2398 2415 -565 0
2398 2417 -567 0
2398 2419 -569 0
2398 2421 -571 0
2398 2423 -573 0
2398 2425 -575 0
2398 2427 -577 0
2398 2429 -579 0
2398 2431 -581 0
2398 2433 -583 0
2398 2435 -585 0
2398 2437 -587 0
2398 2439 -589 0
2398 2441 -591 0
2398 2443 -593 0
2398 2445 -595 0
2400 -557 0
2400 2408 -559 0
2400 2409 -561 0
2400 2411 -563 0
2400 2413 -565 0
2400 2415 -567 0
2400 2417 -569 0
2400 2419 -571 0
2400 2421 -573 0
2400 2423 -575 0
2400 2425 -577 0
2400 2427 -579 0
2400 2429 -581 0
2400 2431 -583 0
2400 2433 -585 0
2400 2435 -587 0
2400 2437 -589 0
2400 2439 -591 0
2400 2441 -593 0
2400 2443 -595 0
2400 2445 -597 0
2402 -559 0
2402 2408 -561 0
2402 2409 -563 0
2402 2411 -565 0
2402 2413 -567 0
2402 2415 -569 0
2402 2417 -571 0
2402 2419 -573 0
2402 2421 -575 0
2402 2423 -577 0
2402 2425 -579 0
2402 2427 -581 0
2402 2429 -583 0
2402 2431 -585 0
2402 2433 -587 0
2402 2435 -589 0
2402 2437 -591 0
2402 2439 -593 0
2402 2441 -595 0
2402 2443 -597 0
2402 2445 -599 0
2404 -561 0
2404 2408 -563 0
2404 2409 -565 0
2404 2411 -567 0
2404 2413 -569 0
2404 2415 -571 0
2404 2417 -573 0
2404 2419 -575 0
2404 2421 -577 0
2404 2423 -579 0
2404 2425 -581 0
2404 2427 -583 0
2404 2429 -585 0
2404 2431 -587 0
2404 2433 -589 0
2404 2435 -591 0
2404 2437 -593 0
2404 2439 -595 0
2404 2441 -597 0
2404 2443 -599 0
2404 2445 -601 0
2406 -563 0
2406 2408 -565 0
2406 2409 -567 0
2406 2411 -569 0
2406 2413 -571 0
2406 2415 -573 0
2406 2417 -575 0
2406 2419 -577 0
2406 2421 -579 0
2406 2423 -581 0
2406 2425 -583 0
2406 2427 -585 0
2406 2429 -587 0
2406 2431 -589 0
2406 2433 -591 0
2406 2435 -593 0
2406 2437 -595 0
2406 2439 -597 0
2406 2441 -599 0
2406 2443 -601 0
2406 2445 -603 0
c (36<=(aux552 + aux553 - shift(num_occupied_by_types_00000, -36)))
-2445 603 0
-2443 601 0
-2441 599 0
-2439 597 0
-2437 595 0
-2435 593 0
-2433 591 0
-2431 589 0
-2429 587 0
-2427 585 0
-2425 583 0
-2423 581 0
-2421 579 0
-2419 577 0
-2417 575 0
-2415 573 0
-2413 571 0
-2411 569 0
-2409 567 0
-2408 565 0
-2406 603 0
-2406 -2445 601 0
-2406 -2443 599 0
-2406 -2441 597 0
-2406 -2439 595 0
-2406 -2437 593 0
-2406 -2435 591 0
-2406 -2433 589 0
-2406 -2431 587 0
-2406 -2429 585 0
-2406 -2427 583 0
-2406 -2425 581 0
-2406 -2423 579 0
-2406 -2421 577 0
-2406 -2419 575 0
-2406 -2417 573 0
-2406 -2415 571 0
-2406 -2413 569 0
-2406 -2411 567 0
-2406 -2409 565 0
-2406 -2408 563 0
-2404 601 0
-2404 -2445 599 0
-2404 -2443 597 0
-2404 -2441 595 0
-2404 -2439 593 0
-2404 -2437 591 0
-2404 -2435 589 0
-2404 -2433 587 0
-2404 -2431 585 0
-2404 -2429 583 0
-2404 -2427 581 0
-2404 -2425 579 0
-2404 -2423 577 0
-2404 -2421 575 0
-2404 -2419 573 0
-2404 -2417 571 0
-2404 -2415 569 0
-2404 -2413 567 0
-2404 -2411 565 0
-2404 -2409 563 0
-2404 -2408 561 0
-2402 599 0
-2402 -2445 597 0
-2402 -2443 595 0
-2402 -2441 593 0
-2402 -2439 591 0
-2402 -2437 589 0
-2402 -2435 587 0
-2402 -2433 585 0
-2402 -2431 583 0
-2402 -2429 581 0
-2402 -2427 579 0
-2402 -2425 577 0
-2402 -2423 575 0
-2402 -2421 573 0
-2402 -2419 571 0
-2402 -2417 569 0
-2402 -2415 567 0
-2402 -2413 565 0
-2402 -2411 563 0
-2402 -2409 561 0
-2402 -2408 559 0
-2400 597 0
-2400 -2445 595 0
-2400 -2443 593 0
-2400 -2441 591 0
-2400 -2439 589 0
-2400 -2437 587 0
-2400 -2435 585 0
-2400 -2433 583 0
-2400 -2431 581 0
-2400 -2429 579 0
-2400 -2427 577 0
-2400 -2425 575 0
-2400 -2423 573 0
-2400 -2421 571 0
-2400 -2419 569 0
-2400 -2417 567 0
-2400 -2415 565 0
-2400 -2413 563 0
-2400 -2411 561 0
-2400 -2409 559 0
-2400 -2408 557 0
-2398 595 0
-2398 -2445 593 0
-2398 -2443 591 0
-2398 -2441 589 0
-2398 -2439 587 0
-2398 -2437 585 0
-2398 -2435 583 0
-2398 -2433 581 0
-2398 -2431 579 0
-2398 -2429 577 0
-2398 -2427 575 0
-2398 -2425 573 0
-2398 -2423 571 0
-2398 -2421 569 0
-2398 -2419 567 0
-2398 -2417 565 0
-2398 -2415 563 0
-2398 -2413 561 0
-2398 -2411 559 0
-2398 -2409 557 0
-2398 -2408 555 0
-2396 593 0
-2396 -2445 591 0
-2396 -2443 589 0
-2396 -2441 587 0
-2396 -2439 585 0
-2396 -2437 583 0
-2396 -2435 581 0
-2396 -2433 579 0
-2396 -2431 577 0
-2396 -2429 575 0
-2396 -2427 573 0
-2396 -2425 571 0
-2396 -2423 569 0
-2396 -2421 567 0
-2396 -2419 565 0
-2396 -2417 563 0
-2396 -2415 561 0
-2396 -2413 559 0
-2396 -2411 557 0
-2396 -2409 555 0
-2396 -2408 553 0
-2394 591 0
-2394 -2445 589 0
-2394 -2443 587 0
-2394 -2441 585 0
-2394 -2439 583 0
-2394 -2437 581 0
-2394 -2435 579 0
-2394 -2433 577 0
-2394 -2431 575 0
-2394 -2429 573 0
-2394 -2427 571 0
-2394 -2425 569 0
-2394 -2423 567 0
-2394 -2421 565 0
-2394 -2419 563 0
-2394 -2417 561 0
-2394 -2415 559 0
-2394 -2413 557 0
-2394 -2411 555 0
-2394 -2409 553 0
-2394 -2408 551 0
-2392 589 0
-2392 -2445 587 0
-2392 -2443 585 0
-2392 -2441 583 0
-2392 -2439 581 0
-2392 -2437 579 0
-2392 -2435 577 0
-2392 -2433 575 0
-2392 -2431 573 0
-2392 -2429 571 0
-2392 -2427 569 0
-2392 -2425 567 0
-2392 -2423 565 0
-2392 -2421 563 0
-2392 -2419 561 0
-2392 -2417 559 0
-2392 -2415 557 0
-2392 -2413 555 0
-2392 -2411 553 0
-2392 -2409 551 0
-2392 -2408 549 0
-2390 587 0
-2390 -2445 585 0
-2390 -2443 583 0
-2390 -2441 581 0
-2390 -2439 579 0
-2390 -2437 577 0
-2390 -2435 575 0
-2390 -2433 573 0
-2390 -2431 571 0
-2390 -2429 569 0
-2390 -2427 567 0
-2390 -2425 565 0
-2390 -2423 563 0
-2390 -2421 561 0
-2390 -2419 559 0
-2390 -2417 557 0
-2390 -2415 555 0
-2390 -2413 553 0
-2390 -2411 551 0
-2390 -2409 549 0
-2390 -2408 547 0
-2388 585 0
-2388 -2445 583 0
-2388 -2443 581 0
-2388 -2441 579 0
-2388 -2439 577 0
-2388 -2437 575 0
-2388 -2435 573 0
-2388 -2433 571 0
-2388 -2431 569 0
-2388 -2429 567 0
-2388 -2427 565 0
-2388 -2425 563 0
-2388 -2423 561 0
-2388 -2421 559 0
-2388 -2419 557 0
-2388 -2417 555 0
-2388 -2415 553 0
-2388 -2413 551 0
-2388 -2411 549 0
-2388 -2409 547 0
-2388 -2408 545 0
-2386 583 0
-2386 -2445 581 0
-2386 -2443 579 0
-2386 -2441 577 0
-2386 -2439 575 0
-2386 -2437 573 0
-2386 -2435 571 0
-2386 -2433 569 0
-2386 -2431 567 0
-2386 -2429 565 0
-2386 -2427 563 0
-2386 -2425 561 0
-2386 -2423 559 0
-2386 -2421 557 0
-2386 -2419 555 0
-2386 -2417 553 0
-2386 -2415 551 0
-2386 -2413 549 0
-2386 -2411 547 0
-2386 -2409 545 0
-2386 -2408 543 0
-2384 581 0
-2384 -2445 579 0
-2384 -2443 577 0
-2384 -2441 575 0
-2384 -2439 573 0
-2384 -2437 571 0
-2384 -2435 569 0
-2384 -2433 567 0
-2384 -2431 565 0
-2384 -2429 563 0
-2384 -2427 561 0
-2384 -2425 559 0
-2384 -2423 557 0
-2384 -2421 555 0
-2384 -2419 553 0
-2384 -2417 551 0
-2384 -2415 549 0
-2384 -2413 547 0
-2384 -2411 545 0
-2384 -2409 543 0
-2384 -2408 541 0
-2382 579 0
-2382 -2445 577 0
-2382 -2443 575 0
-2382 -2441 573 0
-2382 -2439 571 0
-2382 -2437 569 0
-2382 -2435 567 0
-2382 -2433 565 0
-2382 -2431 563 0
-2382 -2429 561 0
-2382 -2427 559 0
-2382 -2425 557 0
-2382 -2423 555 0
-2382 -2421 553 0
-2382 -2419 551 0
-2382 -2417 549 0
-2382 -2415 547 0
-2382 -2413 545 0
-2382 -2411 543 0
-2382 -2409 541 0
-2382 -2408 539 0
-2380 577 0
-2380 -2445 575 0
-2380 -2443 573 0
-2380 -2441 571 0
-2380 -2439 569 0
-2380 -2437 567 0
-2380 -2435 565 0
-2380 -2433 563 0
-2380 -2431 561 0
-2380 -2429 559 0
-2380 -2427 557 0
-2380 -2425 555 0
-2380 -2423 553 0
-2380 -2421 551 0
-2380 -2419 549 0
-2380 -2417 547 0
-2380 -2415 545 0
-2380 -2413 543 0
-2380 -2411 541 0
-2380 -2409 539 0
-2380 -2408 537 0
-2378 575 0
-2378 -2445 573 0
-2378 -2443 571 0
-2378 -2441 569 0
-2378 -2439 567 0
-2378 -2437 565 0
-2378 -2435 563 0
-2378 -2433 561 0
-2378 -2431 559 0
-2378 -2429 557 0
-2378 -2427 555 0
-2378 -2425 553 0
-2378 -2423 551 0
-2378 -2421 549 0
-2378 -2419 547 0
-2378 -2417 545 0
-2378 -2415 543 0
-2378 -2413 541 0
-2378 -2411 539 0
-2378 -2409 537 0
-2378 -2408 535 0
-2377 573 0
-2377 -2445 571 0
-2377 -2443 569 0
-2377 -2441 567 0
-2377 -2439 565 0
-2377 -2437 563 0
-2377 -2435 561 0
-2377 -2433 559 0
-2377 -2431 557 0
-2377 -2429 555 0
-2377 -2427 553 0
-2377 -2425 551 0
-2377 -2423 549 0
-2377 -2421 547 0
-2377 -2419 545 0
-2377 -2417 543 0
-2377 -2415 541 0
-2377 -2413 539 0
-2377 -2411 537 0
-2377 -2409 535 0
-2377 -2408 534 0
c ((aux586 + aux587 - shift(num_occupied_by_types_00001, -36))<=36)
2678 -605 0
2679 -606 0
2681 -608 0
2683 -610 0
2685 -612 0
2687 -614 0
2689 -616 0
2691 -618 0
2693 -620 0
2695 -622 0
2697 -624 0
2699 -626 0
2701 -628 0
2703 -630 0
2705 -632 0
2707 -634 0
2709 -636 0
2711 -638 0
2713 -640 0
2715 -642 0
2647 -605 0
2647 2678 -606 0
2647 2679 -608 0
2647 2681 -610 0
2647 2683 -612 0
2647 2685 -614 0
2647 2687 -616 0
2647 2689 -618 0
2647 2691 -620 0
2647 2693 -622 0
2647 2695 -624 0
2647 2697 -626 0
2647 2699 -628 0
2647 2701 -630 0
2647 2703 -632 0
2647 2705 -634 0
2647 2707 -636 0
2647 2709 -638 0
2647 2711 -640 0
2647 2713 -642 0
2647 2715 -644 0
2648 -606 0
2648 2678 -608 0
2648 2679 -610 0
2648 2681 -612 0
2648 2683 -614 0
2648 2685 -616 0
2648 2687 -618 0
2648 2689 -620 0
2648 2691 -622 0
2648 2693 -624 0
2648 2695 -626 0
2648 2697 -628 0
2648 2699 -630 0
2648 2701 -632 0
2648 2703 -634 0
2648 2705 -636 0
2648 2707 -638 0
2648 2709 -640 0
2648 2711 -642 0
2648 2713 -644 0
2648 2715 -646 0
2650 -608 0
2650 2678 -610 0
2650 2679 -612 0
2650 2681 -614 0
2650 2683 -616 0
2650 2685 -618 0
2650 2687 -620 0
2650 2689 -622 0
2650 2691 -624 0
2650 2693 -626 0
2650 2695 -628 0
2650 2697 -630 0
2650 2699 -632 0
2650 2701 -634 0
2650 2703 -636 0
2650 2705 -638 0
2650 2707 -640 0
2650 2709 -642 0
2650 2711 -644 0
2650 2713 -646 0
2650 2715 -648 0
2652 -610 0
2652 2678 -612 0
2652 2679 -614 0
2652 2681 -616 0
2652 2683 -618 0
2652 2685 -620 0
2652 2687 -622 0
2652 2689 -624 0
2652 2691 -626 0
2652 2693 -628 0
2652 2695 -630 0
2652 2697 -632 0
2652 2699 -634 0
2652 2701 -636 0
2652 2703 -638 0
2652 2705 -640 0
2652 2707 -642 0
2652 2709 -644 0
2652 2711 -646 0
2652 2713 -648 0
2652 2715 -650 0
2654 -612 0
2654 2678 -614 0
2654 2679 -616 0
2654 2681 -618 0
2654 2683 -620 0
2654 2685 -622 0
2654 2687 -624 0
2654 2689 -626 0
2654 2691 -628 0
2654 2693 -630 0
2654 2695 -632 0
2654 2697 -634 0
2654 2699 -636 0
2654 2701 -638 0
2654 2703 -640 0
2654 2705 -642 0
2654 2707 -644 0
2654 2709 -646 0
2654 2711 -648 0
2654 2713 -650 0
2654 2715 -652 0
2656 -614 0
2656 2678 -616 0
2656 2679 -618 0
2656 2681 -620 0
2656 2683 -622 0
2656 2685 -624 0
2656 2687 -626 0
2656 2689 -628 0
2656 2691 -630 0
2656 2693 -632 0
2656 2695 -634 0
2656 2697 -636 0
2656 2699 -638 0
2656 2701 -640 0
2656 2703 -642 0
2656 2705 -644 0
2656 2707 -646 0
2656 2709 -648 0
2656 2711 -650 0
2656 2713 -652 0
2656 2715 -654 0
2658 -616 0
2658 2678 -618 0
2658 2679 -620 0
2658 2681 -622 0
2658 2683 -624 0
2658 2685 -626 0
2658 2687 -628 0
2658 2689 -630 0
2658 2691 -632 0
2658 2693 -634 0
2658 2695 -636 0
2658 2697 -638 0
2658 2699 -640 0
2658 2701 -642 0
2658 2703 -644 0
2658 2705 -646 0
2658 2707 -648 0
2658 2709 -650 0
2658 2711 -652 0
2658 2713 -654 0
2658 2715 -656 0
2660 -618 0
2660 2678 -620 0
2660 2679 -622 0
2660 2681 -624 0
2660 2683 -626 0
2660 2685 -628 0
2660 2687 -630 0
2660 2689 -632 0
2660 2691 -634 0
2660 2693 -636 0
2660 2695 -638 0
2660 2697 -640 0
2660 2699 -642 0
2660 2701 -644 0
2660 2703 -646 0
2660 2705 -648 0
2660 2707 -650 0
2660 2709 -652 0
2660 2711 -654 0
2660 2713 -656 0
2660 2715 -658 0
2662 -620 0
2662 2678 -622 0
2662 2679 -624 0
2662 2681 -626 0
2662 2683 -628 0
2662 2685 -630 0
2662 2687 -632 0
2662 2689 -634 0
2662 2691 -636 0
2662 2693 -638 0
2662 2695 -640 0
2662 2697 -642 0
2662 2699 -644 0
2662 2701 -646 0
2662 2703 -648 0
2662 2705 -650 0
2662 2707 -652 0
2662 2709 -654 0
2662 2711 -656 0
2662 2713 -658 0
2662 2715 -660 0
2664 -622 0
2664 2678 -624 0
2664 2679 -626 0
2664 2681 -628 0
2664 2683 -630 0
2664 2685 -632 0
2664 2687 -634 0
2664 2689 -636 0
2664 2691 -638 0
2664 2693 -640 0
2664 2695 -642 0
2664 2697 -644 0
2664 2699 -646 0
2664 2701 -648 0
2664 2703 -650 0
2664 2705 -652 0
2664 2707 -654 0
2664 2709 -656 0
2664 2711 -658 0
2664 2713 -660 0
2664 2715 -662 0
2666 -624 0
2666 2678 -626 0
2666 2679 -628 0
2666 2681 -630 0
2666 2683 -632 0
2666 2685 -634 0
2666 2687 -636 0
2666 2689 -638 0
2666 2691 -640 0
2666 2693 -642 0
2666 2695 -644 0
2666 2697 -646 0
2666 2699 -648 0
2666 2701 -650 0
2666 2703 -652 0
2666 2705 -654 0
2666 2707 -656 0
2666 2709 -658 0
2666 2711 -660 0
2666 2713 -662 0
2666 2715 -664 0
2668 -626 0
2668 2678 -628 0
2668 2679 -630 0
2668 2681 -632 0
2668 2683 -634 0
2668 2685 -636 0
2668 2687 -638 0
2668 2689 -640 0
2668 2691 -642 0
2668 2693 -644 0
2668 2695 -646 0
2668 2697 -648 0
2668 2699 -650 0
2668 2701 -652 0
2668 2703 -654 0
2668 2705 -656 0
2668 2707 -658 0
2668 2709 -660 0
2668 2711 -662 0
2668 2713 -664 0
2668 2715 -666 0
2670 -628 0
2670 2678 -630 0
2670 2679 -632 0
2670 2681 -634 0
2670 2683 -636 0
2670 2685 -638 0
2670 2687 -640 0
2670 2689 -642 0
2670 2691 -644 0
2670 2693 -646 0
2670 2695 -648 0
2670 2697 -650 0
2670 2699 -652 0
2670 2701 -654 0
2670 2703 -656 0
2670 2705 -658 0
2670 2707 -660 0
2670 2709 -662 0
2670 2711 -664 0
2670 2713 -666 0
2670 2715 -668 0
2672 -630 0
2672 2678 -632 0
2672 2679 -634 0
2672 2681 -636 0
2672 2683 -638 0
2672 2685 -640 0
2672 2687 -642 0
2672 2689 -644 0
2672 2691 -646 0
2672 2693 -648 0
2672 2695 -650 0
2672 2697 -652 0
2672 2699 -654 0
2672 2701 -656 0
2672 2703 -658 0
2672 2705 -660 0
2672 2707 -662 0
2672 2709 -664 0
2672 2711 -666 0
2672 2713 -668 0
2672 2715 -670 0
2674 -632 0
2674 2678 -634 0
2674 2679 -636 0
2674 2681 -638 0
2674 2683 -640 0
2674 2685 -642 0
2674 2687 -644 0
2674 2689 -646 0
2674 2691 -648 0
2674 2693 -650 0
2674 2695 -652 0
2674 2697 -654 0
2674 2699 -656 0
2674 2701 -658 0
2674 2703 -660 0
2674 2705 -662 0
2674 2707 -664 0
2674 2709 -666 0
2674 2711 -668 0
2674 2713 -670 0
2674 2715 -672 0
2676 -634 0
2676 2678 -636 0
2676 2679 -638 0
2676 2681 -640 0
2676 2683 -642 0
2676 2685 -644 0
2676 2687 -646 0
2676 2689 -648 0
2676 2691 -650 0
2676 2693 -652 0
2676 2695 -654 0
2676 2697 -656 0
2676 2699 -658 0
2676 2701 -660 0
2676 2703 -662 0
2676 2705 -664 0
2676 2707 -666 0
2676 2709 -668 0
2676 2711 -670 0
2676 2713 -672 0
2676 2715 -674 0
c (36<=(aux586 + aux587 - shift(num_occupied_by_types_00001, -36)))
-2715 674 0
-2713 672 0
-2711 670 0
-2709 668 0
-2707 666 0
-2705 664 0
-2703 662 0
-2701 660 0
-2699 658 0
-2697 656 0
-2695 654 0
-2693 652 0
-2691 650 0
-2689 648 0
-2687 646 0
-2685 644 0
-2683 642 0
-2681 640 0
-2679 638 0
-2678 636 0
-2676 674 0
-2676 -2715 672 0
-2676 -2713 670 0
-2676 -2711 668 0
-2676 -2709 666 0
-2676 -2707 664 0
-2676 -2705 662 0
-2676 -2703 660 0
-2676 -2701 658 0
-2676 -2699 656 0
-2676 -2697 654 0
-2676 -2695 652 0
-2676 -2693 650 0
-2676 -2691 648 0
-2676 -2689 646 0
-2676 -2687 644 0
-2676 -2685 642 0
-2676 -2683 640 0
-2676 -2681 638 0
-2676 -2679 636 0
-2676 -2678 634 0
-2674 672 0
-2674 -2715 670 0
-2674 -2713 668 0
-2674 -2711 666 0
-2674 -2709 664 0
-2674 -2707 662 0
-2674 -2705 660 0
-2674 -2703 658 0
-2674 -2701 656 0
-2674 -2699 654 0
-2674 -2697 652 0
-2674 -2695 650 0
-2674 -2693 648 0
-2674 -2691 646 0
-2674 -2689 644 0
-2674 -2687 642 0
-2674 -2685 640 0
-2674 -2683 638 0
-2674 -2681 636 0
-2674 -2679 634 0
-2674 -2678 632 0
-2672 670 0
-2672 -2715 668 0
-2672 -2713 666 0
-2672 -2711 664 0
-2672 -2709 662 0
-2672 -2707 660 0
-2672 -2705 658 0
-2672 -2703 656 0
-2672 -2701 654 0
-2672 -2699 652 0
-2672 -2697 650 0
-2672 -2695 648 0
-2672 -2693 646 0
-2672 -2691 644 0
-2672 -2689 642 0
-2672 -2687 640 0
-2672 -2685 638 0
-2672 -2683 636 0
-2672 -2681 634 0
-2672 -2679 632 0
-2672 -2678 630 0
-2670 668 0
-2670 -2715 666 0
-2670 -2713 664 0
-2670 -2711 662 0
-2670 -2709 660 0
-2670 -2707 658 0
-2670 -2705 656 0
-2670 -2703 654 0
-2670 -2701 652 0
-2670 -2699 650 0
-2670 -2697 648 0
-2670 -2695 646 0
-2670 -2693 644 0
-2670 -2691 642 0
-2670 -2689 640 0
-2670 -2687 638 0
-2670 -2685 636 0
-2670 -2683 634 0
-2670 -2681 632 0
-2670 -2679 630 0
-2670 -2678 628 0
-2668 666 0
-2668 -2715 664 0
-2668 -2713 662 0
-2668 -2711 660 0
-2668 -2709 658 0
-2668 -2707 656 0
-2668 -2705 654 0
-2668 -2703 652 0
-2668 -2701 650 0
-2668 -2699 648 0
-2668 -2697 646 0
-2668 -2695 644 0
-2668 -2693 642 0
-2668 -2691 640 0
-2668 -2689 638 0
-2668 -2687 636 0
-2668 -2685 634 0
-2668 -2683 632 0
-2668 -2681 630 0
-2668 -2679 628 0
-2668 -2678 626 0
-2666 664 0
-2666 -2715 662 0
-2666 -2713 660 0
-2666 -2711 658 0
-2666 -2709 656 0
-2666 -2707 654 0
-2666 -2705 652 0
-2666 -2703 650 0
-2666 -2701 648 0
-2666 -2699 646 0
-2666 -2697 644 0
-2666 -2695 642 0
-2666 -2693 640 0
-2666 -2691 638 0
-2666 -2689 636 0
-2666 -2687 634 0
-2666 -2685 632 0
-2666 -2683 630 0
-2666 -2681 628 0
-2666 -2679 626 0
-2666 -2678 624 0
-2664 662 0
-2664 -2715 660 0
-2664 -2713 658 0
-2664 -2711 656 0
-2664 -2709 654 0
-2664 -2707 652 0
-2664 -2705 650 0
-2664 -2703 648 0
-2664 -2701 646 0
-2664 -2699 644 0
-2664 -2697 642 0
-2664 -2695 640 0
-2664 -2693 638 0
-2664 -2691 636 0
-2664 -2689 634 0
-2664 -2687 632 0
-2664 -2685 630 0
-2664 -2683 628 0
-2664 -2681 626 0
-2664 -2679 624 0
-2664 -2678 622 0
-2662 660 0
-2662 -2715 658 0
-2662 -2713 656 0
-2662 -2711 654 0
-2662 -2709 652 0
-2662 -2707 650 0
-2662 -2705 648 0
-2662 -2703 646 0
-2662 -2701 644 0
-2662 -2699 642 0
-2662 -2697 640 0
-2662 -2695 638 0
-2662 -2693 636 0
-2662 -2691 634 0
-2662 -2689 632 0
-2662 -2687 630 0
-2662 -2685 628 0
-2662 -2683 626 0
-2662 -2681 624 0
-2662 -2679 622 0
-2662 -2678 620 0
-2660 658 0
-2660 -2715 656 0
-2660 -2713 654 0
-2660 -2711 652 0
-2660 -2709 650 0
-2660 -2707 648 0
-2660 -2705 646 0
-2660 -2703 644 0
-2660 -2701 642 0
-2660 -2699 640 0
-2660 -2697 638 0
-2660 -2695 636 0
-2660 -2693 634 0
-2660 -2691 632 0
-2660 -2689 630 0
-2660 -2687 628 0
-2660 -2685 626 0
-2660 -2683 624 0
-2660 -2681 622 0
-2660 -2679 620 0
-2660 -2678 618 0
-2658 656 0
-2658 -2715 654 0
-2658 -2713 652 0
-2658 -2711 650 0
-2658 -2709 648 0
-2658 -2707 646 0
-2658 -2705 644 0
-2658 -2703 642 0
-2658 -2701 640 0
-2658 -2699 638 0
-2658 -2697 636 0
-2658 -2695 634 0
-2658 -2693 632 0
-2658 -2691 630 0
-2658 -2689 628 0
-2658 -2687 626 0
-2658 -2685 624 0
-2658 -2683 622 0
-2658 -2681 620 0
-2658 -2679 618 0
-2658 -2678 616 0
-2656 654 0
-2656 -2715 652 0
-2656 -2713 650 0
-2656 -2711 648 0
-2656 -2709 646 0
-2656 -2707 644 0
-2656 -2705 642 0
-2656 -2703 640 0
-2656 -2701 638 0
-2656 -2699 636 0
-2656 -2697 634 0
-2656 -2695 632 0
-2656 -2693 630 0
-2656 -2691 628 0
-2656 -2689 626 0
-2656 -2687 624 0
-2656 -2685 622 0
-2656 -2683 620 0
-2656 -2681 618 0
-2656 -2679 616 0
-2656 -2678 614 0
-2654 652 0
-2654 -2715 650 0
-2654 -2713 648 0
-2654 -2711 646 0
-2654 -2709 644 0
-2654 -2707 642 0
-2654 -2705 640 0
-2654 -2703 638 0
-2654 -2701 636 0
-2654 -2699 634 0
-2654 -2697 632 0
-2654 -2695 630 0
-2654 -2693 628 0
-2654 -2691 626 0
-2654 -2689 624 0
-2654 -2687 622 0
-2654 -2685 620 0
-2654 -2683 618 0
-2654 -2681 616 0
-2654 -2679 614 0
-2654 -2678 612 0
-2652 650 0
-2652 -2715 648 0
-2652 -2713 646 0
-2652 -2711 644 0
-2652 -2709 642 0
-2652 -2707 640 0
-2652 -2705 638 0
-2652 -2703 636 0
-2652 -2701 634 0
-2652 -2699 632 0
-2652 -2697 630 0
-2652 -2695 628 0
-2652 -2693 626 0
-2652 -2691 624 0
-2652 -2689 622 0
-2652 -2687 620 0
-2652 -2685 618 0
-2652 -2683 616 0
-2652 -2681 614 0
-2652 -2679 612 0
-2652 -2678 610 0
-2650 648 0
-2650 -2715 646 0
-2650 -2713 644 0
-2650 -2711 642 0
-2650 -2709 640 0
-2650 -2707 638 0
-2650 -2705 636 0
-2650 -2703 634 0
-2650 -2701 632 0
-2650 -2699 630 0
-2650 -2697 628 0
-2650 -2695 626 0
-2650 -2693 624 0
-2650 -2691 622 0
-2650 -2689 620 0
-2650 -2687 618 0
-2650 -2685 616 0
-2650 -2683 614 0
-2650 -2681 612 0
-2650 -2679 610 0
-2650 -2678 608 0
-2648 646 0
-2648 -2715 644 0
-2648 -2713 642 0
-2648 -2711 640 0
-2648 -2709 638 0
-2648 -2707 636 0
-2648 -2705 634 0
-2648 -2703 632 0
-2648 -2701 630 0
-2648 -2699 628 0
-2648 -2697 626 0
-2648 -2695 624 0
-2648 -2693 622 0
-2648 -2691 620 0
-2648 -2689 618 0
-2648 -2687 616 0
-2648 -2685 614 0
-2648 -2683 612 0
-2648 -2681 610 0
-2648 -2679 608 0
-2648 -2678 606 0
-2647 644 0
-2647 -2715 642 0
-2647 -2713 640 0
-2647 -2711 638 0
-2647 -2709 636 0
-2647 -2707 634 0
-2647 -2705 632 0
-2647 -2703 630 0
-2647 -2701 628 0
-2647 -2699 626 0
-2647 -2697 624 0
-2647 -2695 622 0
-2647 -2693 620 0
-2647 -2691 618 0
-2647 -2689 616 0
-2647 -2687 614 0
-2647 -2685 612 0
-2647 -2683 610 0
-2647 -2681 608 0
-2647 -2679 606 0
-2647 -2678 605 0
c ((aux620 + aux621 - shift(num_occupied_by_types_00002, -36))<=36)
2948 -676 0
2949 -677 0
2951 -679 0
2953 -681 0
2955 -683 0
2957 -685 0
2959 -687 0
2961 -689 0
2963 -691 0
2965 -693 0
2967 -695 0
2969 -697 0
2971 -699 0
2973 -701 0
2975 -703 0
2977 -705 0
2979 -707 0
2981 -709 0
2983 -711 0
2985 -713 0
2917 -676 0
2917 2948 -677 0
2917 2949 -679 0
2917 2951 -681 0
2917 2953 -683 0
2917 2955 -685 0
2917 2957 -687 0
2917 2959 -689 0
2917 2961 -691 0
2917 2963 -693 0
2917 2965 -695 0
2917 2967 -697 0
2917 2969 -699 0
2917 2971 -701 0
2917 2973 -703 0
2917 2975 -705 0
2917 2977 -707 0
2917 2979 -709 0
2917 2981 -711 0
2917 2983 -713 0
2917 2985 -715 0
2918 -677 0
2918 2948 -679 0
2918 2949 -681 0
2918 2951 -683 0
2918 2953 -685 0
2918 2955 -687 0
2918 2957 -689 0
2918 2959 -691 0
2918 2961 -693 0
2918 2963 -695 0
2918 2965 -697 0
2918 2967 -699 0
2918 2969 -701 0
2918 2971 -703 0
2918 2973 -705 0
2918 2975 -707 0
2918 2977 -709 0
2918 2979 -711 0
2918 2981 -713 0
2918 2983 -715 0
2918 2985 -717 0
2920 -679 0
2920 2948 -681 0
2920 2949 -683 0
2920 2951 -685 0
2920 2953 -687 0
2920 2955 -689 0
2920 2957 -691 0
2920 2959 -693 0
2920 2961 -695 0
2920 2963 -697 0
2920 2965 -699 0
2920 2967 -701 0
2920 2969 -703 0
2920 2971 -705 0
2920 2973 -707 0
2920 2975 -709 0
2920 2977 -711 0
2920 2979 -713 0
2920 2981 -715 0
2920 2983 -717 0
2920 2985 -719 0
2922 -681 0
2922 2948 -683 0
2922 2949 -685 0
2922 2951 -687 0
2922 2953 -689 0
2922 2955 -691 0
2922 2957 -693 0
2922 2959 -695 0
2922 2961 -697 0
2922 2963 -699 0
2922 2965 -701 0
2922 2967 -703 0
2922 2969 -705 0
2922 2971 -707 0
2922 2973 -709 0
2922 2975 -711 0
2922 2977 -713 0
2922 2979 -715 0
2922 2981 -717 0
2922 2983 -719 0
2922 2985 -721 0
2924 -683 0
2924 2948 -685 0
2924 2949 -687 0
2924 2951 -689 0
2924 2953 -691 0
2924 2955 -693 0
2924 2957 -695 0
2924 2959 -697 0
2924 2961 -699 0
2924 2963 -701 0
2924 2965 -703 0
2924 2967 -705 0
2924 2969 -707 0
2924 2971 -709 0
2924 2973 -711 0
2924 2975 -713 0
2924 2977 -715 0
2924 2979 -717 0
2924 2981 -719 0
2924 2983 -721 0
2924 2985 -723 0
2926 -685 0
2926 2948 -687 0
2926 2949 -689 0
2926 2951 -691 0
2926 2953 -693 0
2926 2955 -695 0
2926 2957 -697 0
2926 2959 -699 0
2926 2961 -701 0
2926 2963 -703 0
2926 2965 -705 0
2926 2967 -707 0
2926 2969 -709 0
2926 2971 -711 0
2926 2973 -713 0
2926 2975 -715 0
2926 2977 -717 0
2926 2979 -719 0
2926 2981 -721 0
2926 2983 -723 0
2926 2985 -725 0
2928 -687 0
2928 2948 -689 0
2928 2949 -691 0
2928 2951 -693 0
2928 2953 -695 0
2928 2955 -697 0
2928 2957 -699 0
2928 2959 -701 0
2928 2961 -703 0
2928 2963 -705 0
2928 2965 -707 0
2928 2967 -709 0
2928 2969 -711 0
2928 2971 -713 0
2928 2973 -715 0
2928 2975 -717 0
2928 2977 -719 0
2928 2979 -721 0
2928 2981 -723 0
2928 2983 -725 0
2928 2985 -727 0
2930 -689 0
2930 2948 -691 0
2930 2949 -693 0
2930 2951 -695 0
2930 2953 -697 0
2930 2955 -699 0
2930 2957 -701 0
2930 2959 -703 0
2930 2961 -705 0
2930 2963 -707 0
2930 2965 -709 0
2930 2967 -711 0
2930 2969 -713 0
2930 2971 -715 0
2930 2973 -717 0
2930 2975 -719 0
2930 2977 -721 0
2930 2979 -723 0
2930 2981 -725 0
2930 2983 -727 0
2930 2985 -729 0
2932 -691 0
2932 2948 -693 0
2932 2949 -695 0
2932 2951 -697 0
2932 2953 -699 0
2932 2955 -701 0
2932 2957 -703 0
2932 2959 -705 0
2932 2961 -707 0
2932 2963 -709 0
2932 2965 -711 0
2932 2967 -713 0
2932 2969 -715 0
2932 2971 -717 0
2932 2973 -719 0
2932 2975 -721 0
2932 2977 -723 0
2932 2979 -725 0
2932 2981 -727 0
2932 2983 -729 0
2932 2985 -731 0
2934 -693 0
2934 2948 -695 0
2934 2949 -697 0
2934 2951 -699 0
2934 2953 -701 0
2934 2955 -703 0
2934 2957 -705 0
2934 2959 -707 0
2934 2961 -709 0
2934 2963 -711 0
2934 2965 -713 0
2934 2967 -715 0
2934 2969 -717 0
2934 2971 -719 0
2934 2973 -721 0
2934 2975 -723 0
2934 2977 -725 0
2934 2979 -727 0
2934 2981 -729 0
2934 2983 -731 0
2934 2985 -733 0
2936 -695 0
2936 2948 -697 0
2936 2949 -699 0
2936 2951 -701 0
2936 2953 -703 0
2936 2955 -705 0
2936 2957 -707 0
2936 2959 -709 0
2936 2961 -711 0
2936 2963 -713 0
2936 2965 -715 0
2936 2967 -717 0
2936 2969 -719 0
2936 2971 -721 0
2936 2973 -723 0
2936 2975 -725 0
2936 2977 -727 0
2936 2979 -729 0
2936 2981 -731 0
2936 2983 -733 0
2936 2985 -735 0
2938 -697 0
2938 2948 -699 0
2938 2949 -701 0
2938 2951 -703 0
2938 2953 -705 0
2938 2955 -707 0
2938 2957 -709 0
2938 2959 -711 0
2938 2961 -713 0
2938 2963 -715 0
2938 2965 -717 0
2938 2967 -719 0
2938 2969 -721 0
2938 2971 -723 0
2938 2973 -725 0
2938 2975 -727 0
2938 2977 -729 0
2938 2979 -731 0
2938 2981 -733 0
2938 2983 -735 0
2938 2985 -737 0
2940 -699 0
2940 2948 -701 0
2940 2949 -703 0
2940 2951 -705 0
2940 2953 -707 0
2940 2955 -709 0
2940 2957 -711 0
2940 2959 -713 0
2940 2961 -715 0
2940 2963 -717 0
2940 2965 -719 0
2940 2967 -721 0
2940 2969 -723 0
2940 2971 -725 0
2940 2973 -727 0
2940 2975 -729 0
2940 2977 -731 0
2940 2979 -733 0
2940 2981 -735 0
2940 2983 -737 0
2940 2985 -739 0
2942 -701 0
2942 2948 -703 0
2942 2949 -705 0
2942 2951 -707 0
2942 2953 -709 0
2942 2955 -711 0
2942 2957 -713 0
2942 2959 -715 0
2942 2961 -717 0
2942 2963 -719 0
2942 2965 -721 0
2942 2967 -723 0
2942 2969 -725 0
2942 2971 -727 0
2942 2973 -729 0
2942 2975 -731 0
2942 2977 -733 0
2942 2979 -735 0
2942 2981 -737 0
2942 2983 -739 0
2942 2985 -741 0
2944 -703 0
2944 2948 -705 0
2944 2949 -707 0
2944 2951 -709 0
2944 2953 -711 0
2944 2955 -713 0
2944 2957 -715 0
2944 2959 -717 0
2944 2961 -719 0
2944 2963 -721 0
2944 2965 -723 0
2944 2967 -725 0
2944 2969 -727 0
2944 2971 -729 0
2944 2973 -731 0
2944 2975 -733 0
2944 2977 -735 0
2944 2979 -737 0
2944 2981 -739 0
2944 2983 -741 0
2944 2985 -743 0
2946 -705 0
2946 2948 -707 0
2946 2949 -709 0
2946 2951 -711 0
2946 2953 -713 0
2946 2955 -715 0
2946 2957 -717 0
2946 2959 -719 0
2946 2961 -721 0
2946 2963 -723 0
2946 2965 -725 0
2946 2967 -727 0
2946 2969 -729 0
2946 2971 -731 0
2946 2973 -733 0
2946 2975 -735 0
2946 2977 -737 0
2946 2979 -739 0
2946 2981 -741 0
2946 2983 -743 0
2946 2985 -745 0
c (36<=(aux620 + aux621 - shift(num_occupied_by_types_00002, -36)))
-2985 745 0
-2983 743 0
-2981 741 0
-2979 739 0
-2977 737 0
-2975 735 0
-2973 733 0
-2971 731 0
-2969 729 0
-2967 727 0
-2965 725 0
-2963 723 0
-2961 721 0
-2959 719 0
-2957 717 0
-2955 715 0
-2953 713 0
-2951 711 0
-2949 709 0
-2948 707 0
-2946 745 0
-2946 -2985 743 0
-2946 -2983 741 0
-2946 -2981 739 0
-2946 -2979 737 0
-2946 -2977 735 0
-2946 -2975 733 0
-2946 -2973 731 0
-2946 -2971 729 0
-2946 -2969 727 0
-2946 -2967 725 0
-2946 -2965 723 0
-2946 -2963 721 0
-2946 -2961 719 0
-2946 -2959 717 0
-2946 -2957 715 0
-2946 -2955 713 0
-2946 -2953 711 0
-2946 -2951 709 0
-2946 -2949 707 0
-2946 -2948 705 0
-2944 743 0
-2944 -2985 741 0
-2944 -2983 739 0
-2944 -2981 737 0
-2944 -2979 735 0
-2944 -2977 733 0
-2944 -2975 731 0
-2944 -2973 729 0
-2944 -2971 727 0
-2944 -2969 725 0
-2944 -2967 723 0
-2944 -2965 721 0
-2944 -2963 719 0
-2944 -2961 717 0
-2944 -2959 715 0
-2944 -2957 713 0
-2944 -2955 711 0
-2944 -2953 709 0
-2944 -2951 707 0
-2944 -2949 705 0
-2944 -2948 703 0
-2942 741 0
-2942 -2985 739 0
-2942 -2983 737 0
-2942 -2981 735 0
-2942 -2979 733 0
-2942 -2977 731 0
-2942 -2975 729 0
-2942 -2973 727 0
-2942 -2971 725 0
-2942 -2969 723 0
-2942 -2967 721 0
-2942 -2965 719 0
-2942 -2963 717 0
-2942 -2961 715 0
-2942 -2959 713 0
-2942 -2957 711 0
-2942 -2955 709 0
-2942 -2953 707 0
-2942 -2951 705 0
-2942 -2949 703 0
-2942 -2948 701 0
-2940 739 0
-2940 -2985 737 0
-2940 -2983 735 0
-2940 -2981 733 0
-2940 -2979 731 0
-2940 -2977 729 0
-2940 -2975 727 0
-2940 -2973 725 0
-2940 -2971 723 0
-2940 -2969 721 0
-2940 -2967 719 0
-2940 -2965 717 0
-2940 -2963 715 0
-2940 -2961 713 0
-2940 -2959 711 0
-2940 -2957 709 0
-2940 -2955 707 0
-2940 -2953 705 0
-2940 -2951 703 0
-2940 -2949 701 0
-2940 -2948 699 0
-2938 737 0
-2938 -2985 735 0
-2938 -2983 733 0
-2938 -2981 731 0
-2938 -2979 729 0
-2938 -2977 727 0
-2938 -2975 725 0
-2938 -2973 723 0
-2938 -2971 721 0
-2938 -2969 719 0
-2938 -2967 717 0
-2938 -2965 715 0
-2938 -2963 713 0
-2938 -2961 711 0
-2938 -2959 709 0
-2938 -2957 707 0
-2938 -2955 705 0
-2938 -2953 703 0
-2938 -2951 701 0
-2938 -2949 699 0
-2938 -2948 697 0
-2936 735 0
-2936 -2985 733 0
-2936 -2983 731 0
-2936 -2981 729 0
-2936 -2979 727 0
-2936 -2977 725 0
-2936 -2975 723 0
-2936 -2973 721 0
-2936 -2971 719 0
-2936 -2969 717 0
-2936 -2967 715 0
-2936 -2965 713 0
-2936 -2963 711 0
-2936 -2961 709 0
-2936 -2959 707 0
-2936 -2957 705 0
-2936 -2955 703 0
-2936 -2953 701 0
-2936 -2951 699 0
-2936 -2949 697 0
-2936 -2948 695 0
-2934 733 0
-2934 -2985 731 0
-2934 -2983 729 0
-2934 -2981 727 0
-2934 -2979 725 0
-2934 -2977 723 0
-2934 -2975 721 0
-2934 -2973 719 0
-2934 -2971 717 0
-2934 -2969 715 0
-2934 -2967 713 0
-2934 -2965 711 0
-2934 -2963 709 0
-2934 -2961 707 0
-2934 -2959 705 0
-2934 -2957 703 0
-2934 -2955 701 0
-2934 -2953 699 0
-2934 -2951 697 0
-2934 -2949 695 0
-2934 -2948 693 0
-2932 731 0
-2932 -2985 729 0
-2932 -2983 727 0
-2932 -2981 725 0
-2932 -2979 723 0
-2932 -2977 721 0
-2932 -2975 719 0
-2932 -2973 717 0
-2932 -2971 715 0
-2932 -2969 713 0
-2932 -2967 711 0
-2932 -2965 709 0
-2932 -2963 707 0
-2932 -2961 705 0
-2932 -2959 703 0
-2932 -2957 701 0
-2932 -2955 699 0
-2932 -2953 697 0
-2932 -2951 695 0
-2932 -2949 693 0
-2932 -2948 691 0
-2930 729 0
-2930 -2985 727 0
-2930 -2983 725 0
-2930 -2981 723 0
-2930 -2979 721 0
-2930 -2977 719 0
-2930 -2975 717 0
-2930 -2973 715 0
-2930 -2971 713 0
-2930 -2969 711 0
-2930 -2967 709 0
-2930 -2965 707 0
-2930 -2963 705 0
-2930 -2961 703 0
-2930 -2959 701 0
-2930 -2957 699 0
-2930 -2955 697 0
-2930 -2953 695 0
-2930 -2951 693 0
-2930 -2949 691 0
-2930 -2948 689 0
-2928 727 0
-2928 -2985 725 0
-2928 -2983 723 0
-2928 -2981 721 0
-2928 -2979 719 0
-2928 -2977 717 0
-2928 -2975 715 0
-2928 -2973 713 0
-2928 -2971 711 0
-2928 -2969 709 0
-2928 -2967 707 0
-2928 -2965 705 0
-2928 -2963 703 0
-2928 -2961 701 0
-2928 -2959 699 0
-2928 -2957 697 0
-2928 -2955 695 0
-2928 -2953 693 0
-2928 -2951 691 0
-2928 -2949 689 0
-2928 -2948 687 0
-2926 725 0
-2926 -2985 723 0
-2926 -2983 721 0
-2926 -2981 719 0
-2926 -2979 717 0
-2926 -2977 715 0
-2926 -2975 713 0
-2926 -2973 711 0
-2926 -2971 709 0
-2926 -2969 707 0
-2926 -2967 705 0
-2926 -2965 703 0
-2926 -2963 701 0
-2926 -2961 699 0
-2926 -2959 697 0
-2926 -2957 695 0
-2926 -2955 693 0
-2926 -2953 691 0
-2926 -2951 689 0
-2926 -2949 687 0
-2926 -2948 685 0
-2924 723 0
-2924 -2985 721 0
-2924 -2983 719 0
-2924 -2981 717 0
-2924 -2979 715 0
-2924 -2977 713 0
-2924 -2975 711 0
-2924 -2973 709 0
-2924 -2971 707 0
-2924 -2969 705 0
-2924 -2967 703 0
-2924 -2965 701 0
-2924 -2963 699 0
-2924 -2961 697 0
-2924 -2959 695 0
-2924 -2957 693 0
-2924 -2955 691 0
-2924 -2953 689 0
-2924 -2951 687 0
-2924 -2949 685 0
-2924 -2948 683 0
-2922 721 0
-2922 -2985 719 0
-2922 -2983 717 0
-2922 -2981 715 0
-2922 -2979 713 0
-2922 -2977 711 0
-2922 -2975 709 0
-2922 -2973 707 0
-2922 -2971 705 0
-2922 -2969 703 0
-2922 -2967 701 0
-2922 -2965 699 0
-2922 -2963 697 0
-2922 -2961 695 0
-2922 -2959 693 0
-2922 -2957 691 0
-2922 -2955 689 0
-2922 -2953 687 0
-2922 -2951 685 0
-2922 -2949 683 0
-2922 -2948 681 0
-2920 719 0
-2920 -2985 717 0
-2920 -2983 715 0
-2920 -2981 713 0
-2920 -2979 711 0
-2920 -2977 709 0
-2920 -2975 707 0
-2920 -2973 705 0
-2920 -2971 703 0
-2920 -2969 701 0
-2920 -2967 699 0
-2920 -2965 697 0
-2920 -2963 695 0
-2920 -2961 693 0
-2920 -2959 691 0
-2920 -2957 689 0
-2920 -2955 687 0
-2920 -2953 685 0
-2920 -2951 683 0
-2920 -2949 681 0
-2920 -2948 679 0
-2918 717 0
-2918 -2985 715 0
-2918 -2983 713 0
-2918 -2981 711 0
-2918 -2979 709 0
-2918 -2977 707 0
-2918 -2975 705 0
-2918 -2973 703 0
-2918 -2971 701 0
-2918 -2969 699 0
-2918 -2967 697 0
-2918 -2965 695 0
-2918 -2963 693 0
-2918 -2961 691 0
-2918 -2959 689 0
-2918 -2957 687 0
-2918 -2955 685 0
-2918 -2953 683 0
-2918 -2951 681 0
-2918 -2949 679 0
-2918 -2948 677 0
-2917 715 0
-2917 -2985 713 0
-2917 -2983 711 0
-2917 -2981 709 0
-2917 -2979 707 0
-2917 -2977 705 0
-2917 -2975 703 0
-2917 -2973 701 0
-2917 -2971 699 0
-2917 -2969 697 0
-2917 -2967 695 0
-2917 -2965 693 0
-2917 -2963 691 0
-2917 -2961 689 0
-2917 -2959 687 0
-2917 -2957 685 0
-2917 -2955 683 0
-2917 -2953 681 0
-2917 -2951 679 0
-2917 -2949 677 0
-2917 -2948 676 0
c ((aux654 + aux655 - shift(num_occupied_by_types_00003, -36))<=36)
3218 -747 0
3219 -748 0
3221 -750 0
3223 -752 0
3225 -754 0
3227 -756 0
3229 -758 0
3231 -760 0
3233 -762 0
3235 -764 0
3237 -766 0
3239 -768 0
3241 -770 0
3243 -772 0
3245 -774 0
3247 -776 0
3249 -778 0
3251 -780 0
3253 -782 0
3255 -784 0
3187 -747 0
3187 3218 -748 0
3187 3219 -750 0
3187 3221 -752 0
3187 3223 -754 0
3187 3225 -756 0
3187 3227 -758 0
3187 3229 -760 0
3187 3231 -762 0
3187 3233 -764 0
3187 3235 -766 0
3187 3237 -768 0
3187 3239 -770 0
3187 3241 -772 0
3187 3243 -774 0
3187 3245 -776 0
3187 3247 -778 0
3187 3249 -780 0
3187 3251 -782 0
3187 3253 -784 0
3187 3255 -786 0
3188 -748 0
3188 3218 -750 0
3188 3219 -752 0
3188 3221 -754 0
3188 3223 -756 0
3188 3225 -758 0
3188 3227 -760 0
3188 3229 -762 0
3188 3231 -764 0
3188 3233 -766 0
3188 3235 -768 0
3188 3237 -770 0
3188 3239 -772 0
3188 3241 -774 0
3188 3243 -776 0
3188 3245 -778 0
3188 3247 -780 0
3188 3249 -782 0
3188 3251 -784 0
3188 3253 -786 0
3188 3255 -788 0
3190 -750 0
3190 3218 -752 0
3190 3219 -754 0
3190 3221 -756 0
3190 3223 -758 0
3190 3225 -760 0
3190 3227 -762 0
3190 3229 -764 0
3190 3231 -766 0
3190 3233 -768 0
3190 3235 -770 0
3190 3237 -772 0
3190 3239 -774 0
3190 3241 -776 0
3190 3243 -778 0
3190 3245 -780 0
3190 3247 -782 0
3190 3249 -784 0
3190 3251 -786 0
3190 3253 -788 0
3190 3255 -790 0
3192 -752 0
3192 3218 -754 0
3192 3219 -756 0
3192 3221 -758 0
3192 3223 -760 0
3192 3225 -762 0
3192 3227 -764 0
3192 3229 -766 0
3192 3231 -768 0
3192 3233 -770 0
3192 3235 -772 0
3192 3237 -774 0
3192 3239 -776 0
3192 3241 -778 0
3192 3243 -780 0
3192 3245 -782 0
3192 3247 -784 0
3192 3249 -786 0
3192 3251 -788 0
3192 3253 -790 0
3192 3255 -792 0
3194 -754 0
3194 3218 -756 0
3194 3219 -758 0
3194 3221 -760 0
3194 3223 -762 0
3194 3225 -764 0
3194 3227 -766 0
3194 3229 -768 0
3194 3231 -770 0
3194 3233 -772 0
3194 3235 -774 0
3194 3237 -776 0
3194 3239 -778 0
3194 3241 -780 0
3194 3243 -782 0
3194 3245 -784 0
3194 3247 -786 0
3194 3249 -788 0
3194 3251 -790 0
3194 3253 -792 0
3194 3255 -794 0
3196 -756 0
3196 3218 -758 0
3196 3219 -760 0
3196 3221 -762 0
3196 3223 -764 0
3196 3225 -766 0
3196 3227 -768 0
3196 3229 -770 0
3196 3231 -772 0
3196 3233 -774 0
3196 3235 -776 0
3196 3237 -778 0
3196 3239 -780 0
3196 3241 -782 0
3196 3243 -784 0
3196 3245 -786 0
3196 3247 -788 0
3196 3249 -790 0
3196 3251 -792 0
3196 3253 -794 0
3196 3255 -796 0
3198 -758 0
3198 3218 -760 0
3198 3219 -762 0
3198 3221 -764 0
3198 3223 -766 0
3198 3225 -768 0
3198 3227 -770 0
3198 3229 -772 0
3198 3231 -774 0
3198 3233 -776 0
3198 3235 -778 0
3198 3237 -780 0
3198 3239 -782 0
3198 3241 -784 0
3198 3243 -786 0
3198 3245 -788 0
3198 3247 -790 0
3198 3249 -792 0
3198 3251 -794 0
3198 3253 -796 0
3198 3255 -798 0
3200 -760 0
3200 3218 -762 0
3200 3219 -764 0
3200 3221 -766 0
3200 3223 -768 0
3200 3225 -770 0
3200 3227 -772 0
3200 3229 -774 0
3200 3231 -776 0
3200 3233 -778 0
3200 3235 -780 0
3200 3237 -782 0
3200 3239 -784 0
3200 3241 -786 0
3200 3243 -788 0
3200 3245 -790 0
3200 3247 -792 0
3200 3249 -794 0
3200 3251 -796 0
3200 3253 -798 0
3200 3255 -800 0
3202 -762 0
3202 3218 -764 0
3202 3219 -766 0
3202 3221 -768 0
3202 3223 -770 0
3202 3225 -772 0
3202 3227 -774 0
3202 3229 -776 0
3202 3231 -778 0
3202 3233 -780 0
3202 3235 -782 0
3202 3237 -784 0
3202 3239 -786 0
3202 3241 -788 0
3202 3243 -790 0
3202 3245 -792 0
3202 3247 -794 0
3202 3249 -796 0
3202 3251 -798 0
3202 3253 -800 0
3202 3255 -802 0
3204 -764 0
3204 3218 -766 0
3204 3219 -768 0
3204 3221 -770 0
3204 3223 -772 0
3204 3225 -774 0
3204 3227 -776 0
3204 3229 -778 0
3204 3231 -780 0
3204 3233 -782 0
3204 3235 -784 0
3204 3237 -786 0
3204 3239 -788 0
3204 3241 -790 0
3204 3243 -792 0
3204 3245 -794 0
3204 3247 -796 0
3204 3249 -798 0
3204 3251 -800 0
3204 3253 -802 0
3204 3255 -804 0
3206 -766 0
3206 3218 -768 0
3206 3219 -770 0
3206 3221 -772 0
3206 3223 -774 0
3206 3225 -776 0
3206 3227 -778 0
3206 3229 -780 0
3206 3231 -782 0
3206 3233 -784 0
3206 3235 -786 0
3206 3237 -788 0
3206 3239 -790 0
3206 3241 -792 0
3206 3243 -794 0
3206 3245 -796 0
3206 3247 -798 0
3206 3249 -800 0
3206 3251 -802 0
3206 3253 -804 0
3206 3255 -806 0
3208 -768 0
3208 3218 -770 0
3208 3219 -772 0
3208 3221 -774 0
3208 3223 -776 0
3208 3225 -778 0
3208 3227 -780 0
3208 3229 -782 0
3208 3231 -784 0
3208 3233 -786 0
3208 3235 -788 0
3208 3237 -790 0
3208 3239 -792 0
3208 3241 -794 0
3208 3243 -796 0
3208 3245 -798 0
3208 3247 -800 0
3208 3249 -802 0
3208 3251 -804 0
3208 3253 -806 0
3208 3255 -808 0
3210 -770 0
3210 3218 -772 0
3210 3219 -774 0
3210 3221 -776 0
3210 3223 -778 0
3210 3225 -780 0
3210 3227 -782 0
3210 3229 -784 0
3210 3231 -786 0
3210 3233 -788 0
3210 3235 -790 0
3210 3237 -792 0
3210 3239 -794 0
3210 3241 -796 0
3210 3243 -798 0
3210 3245 -800 0
3210 3247 -802 0
3210 3249 -804 0
3210 3251 -806 0
3210 3253 -808 0
3210 3255 -810 0
3212 -772 0
3212 3218 -774 0
3212 3219 -776 0
3212 3221 -778 0
3212 3223 -780 0
3212 3225 -782 0
3212 3227 -784 0
3212 3229 -786 0
3212 3231 -788 0
3212 3233 -790 0
3212 3235 -792 0
3212 3237 -794 0
3212 3239 -796 0
3212 3241 -798 0
3212 3243 -800 0
3212 3245 -802 0
3212 3247 -804 0
3212 3249 -806 0
3212 3251 -808 0
3212 3253 -810 0
3212 3255 -812 0
3214 -774 0
3214 3218 -776 0
3214 3219 -778 0
3214 3221 -780 0
3214 3223 -782 0
3214 3225 -784 0
3214 3227 -786 0
3214 3229 -788 0
3214 3231 -790 0
3214 3233 -792 0
3214 3235 -794 0
3214 3237 -796 0
3214 3239 -798 0
3214 3241 -800 0
3214 3243 -802 0
3214 3245 -804 0
3214 3247 -806 0
3214 3249 -808 0
3214 3251 -810 0
3214 3253 -812 0
3214 3255 -814 0
3216 -776 0
3216 3218 -778 0
3216 3219 -780 0
3216 3221 -782 0
3216 3223 -784 0
3216 3225 -786 0
3216 3227 -788 0
3216 3229 -790 0
3216 3231 -792 0
3216 3233 -794 0
3216 3235 -796 0
3216 3237 -798 0
3216 3239 -800 0
3216 3241 -802 0
3216 3243 -804 0
3216 3245 -806 0
3216 3247 -808 0
3216 3249 -810 0
3216 3251 -812 0
3216 3253 -814 0
3216 3255 -816 0
c (36<=(aux654 + aux655 - shift(num_occupied_by_types_00003, -36)))
-3255 816 0
-3253 814 0
-3251 812 0
-3249 810 0
-3247 808 0
-3245 806 0
-3243 804 0
-3241 802 0
-3239 800 0
-3237 798 0
-3235 796 0
-3233 794 0
-3231 792 0
-3229 790 0
-3227 788 0
-3225 786 0
-3223 784 0
-3221 782 0
-3219 780 0
-3218 778 0
-3216 816 0
-3216 -3255 814 0
-3216 -3253 812 0
-3216 -3251 810 0
-3216 -3249 808 0
-3216 -3247 806 0
-3216 -3245 804 0
-3216 -3243 802 0
-3216 -3241 800 0
-3216 -3239 798 0
-3216 -3237 796 0
-3216 -3235 794 0
-3216 -3233 792 0
-3216 -3231 790 0
-3216 -3229 788 0
-3216 -3227 786 0
-3216 -3225 784 0
-3216 -3223 782 0
-3216 -3221 780 0
-3216 -3219 778 0
-3216 -3218 776 0
-3214 814 0
-3214 -3255 812 0
-3214 -3253 810 0
-3214 -3251 808 0
-3214 -3249 806 0
-3214 -3247 804 0
-3214 -3245 802 0
-3214 -3243 800 0
-3214 -3241 798 0
-3214 -3239 796 0
-3214 -3237 794 0
-3214 -3235 792 0
-3214 -3233 790 0
-3214 -3231 788 0
-3214 -3229 786 0
-3214 -3227 784 0
-3214 -3225 782 0
-3214 -3223 780 0
-3214 -3221 778 0
-3214 -3219 776 0
-3214 -3218 774 0
-3212 812 0
-3212 -3255 810 0
-3212 -3253 808 0
-3212 -3251 806 0
-3212 -3249 804 0
-3212 -3247 802 0
-3212 -3245 800 0
-3212 -3243 798 0
-3212 -3241 796 0
-3212 -3239 794 0
-3212 -3237 792 0
-3212 -3235 790 0
-3212 -3233 788 0
-3212 -3231 786 0
-3212 -3229 784 0
-3212 -3227 782 0
-3212 -3225 780 0
-3212 -3223 778 0
-3212 -3221 776 0
-3212 -3219 774 0
-3212 -3218 772 0
-3210 810 0
-3210 -3255 808 0
-3210 -3253 806 0
-3210 -3251 804 0
-3210 -3249 802 0
-3210 -3247 800 0
-3210 -3245 798 0
-3210 -3243 796 0
-3210 -3241 794 0
-3210 -3239 792 0
-3210 -3237 790 0
-3210 -3235 788 0
-3210 -3233 786 0
-3210 -3231 784 0
-3210 -3229 782 0
-3210 -3227 780 0
-3210 -3225 778 0
-3210 -3223 776 0
-3210 -3221 774 0
-3210 -3219 772 0
-3210 -3218 770 0
-3208 808 0
-3208 -3255 806 0
-3208 -3253 804 0
-3208 -3251 802 0
-3208 -3249 800 0
-3208 -3247 798 0
-3208 -3245 796 0
-3208 -3243 794 0
-3208 -3241 792 0
-3208 -3239 790 0
-3208 -3237 788 0
-3208 -3235 786 0
-3208 -3233 784 0
-3208 -3231 782 0
-3208 -3229 780 0
-3208 -3227 778 0
-3208 -3225 776 0
-3208 -3223 774 0
-3208 -3221 772 0
-3208 -3219 770 0
-3208 -3218 768 0
-3206 806 0
-3206 -3255 804 0
-3206 -3253 802 0
-3206 -3251 800 0
-3206 -3249 798 0
-3206 -3247 796 0
-3206 -3245 794 0
-3206 -3243 792 0
-3206 -3241 790 0
-3206 -3239 788 0
-3206 -3237 786 0
-3206 -3235 784 0
-3206 -3233 782 0
-3206 -3231 780 0
-3206 -3229 778 0
-3206 -3227 776 0
-3206 -3225 774 0
-3206 -3223 772 0
-3206 -3221 770 0
-3206 -3219 768 0
-3206 -3218 766 0
-3204 804 0
-3204 -3255 802 0
-3204 -3253 800 0
-3204 -3251 798 0
-3204 -3249 796 0
-3204 -3247 794 0
-3204 -3245 792 0
-3204 -3243 790 0
-3204 -3241 788 0
-3204 -3239 786 0
-3204 -3237 784 0
-3204 -3235 782 0
-3204 -3233 780 0
-3204 -3231 778 0
-3204 -3229 776 0
-3204 -3227 774 0
-3204 -3225 772 0
-3204 -3223 770 0
-3204 -3221 768 0
-3204 -3219 766 0
-3204 -3218 764 0
-3202 802 0
-3202 -3255 800 0
-3202 -3253 798 0
-3202 -3251 796 0
-3202 -3249 794 0
-3202 -3247 792 0
-3202 -3245 790 0
-3202 -3243 788 0
-3202 -3241 786 0
-3202 -3239 784 0
-3202 -3237 782 0
-3202 -3235 780 0
-3202 -3233 778 0
-3202 -3231 776 0
-3202 -3229 774 0
-3202 -3227 772 0
-3202 -3225 770 0
-3202 -3223 768 0
-3202 -3221 766 0
-3202 -3219 764 0
-3202 -3218 762 0
-3200 800 0
-3200 -3255 798 0
-3200 -3253 796 0
-3200 -3251 794 0
-3200 -3249 792 0
-3200 -3247 790 0
-3200 -3245 788 0
-3200 -3243 786 0
-3200 -3241 784 0
-3200 -3239 782 0
-3200 -3237 780 0
-3200 -3235 778 0
-3200 -3233 776 0
-3200 -3231 774 0
-3200 -3229 772 0
-3200 -3227 770 0
-3200 -3225 768 0
-3200 -3223 766 0
-3200 -3221 764 0
-3200 -3219 762 0
-3200 -3218 760 0
-3198 798 0
-3198 -3255 796 0
-3198 -3253 794 0
-3198 -3251 792 0
-3198 -3249 790 0
-3198 -3247 788 0
-3198 -3245 786 0
-3198 -3243 784 0
-3198 -3241 782 0
-3198 -3239 780 0
-3198 -3237 778 0
-3198 -3235 776 0
-3198 -3233 774 0
-3198 -3231 772 0
-3198 -3229 770 0
-3198 -3227 768 0
-3198 -3225 766 0
-3198 -3223 764 0
-3198 -3221 762 0
-3198 -3219 760 0
-3198 -3218 758 0
-3196 796 0
-3196 -3255 794 0
-3196 -3253 792 0
-3196 -3251 790 0
-3196 -3249 788 0
-3196 -3247 786 0
-3196 -3245 784 0
-3196 -3243 782 0
-3196 -3241 780 0
-3196 -3239 778 0
-3196 -3237 776 0
-3196 -3235 774 0
-3196 -3233 772 0
-3196 -3231 770 0
-3196 -3229 768 0
-3196 -3227 766 0
-3196 -3225 764 0
-3196 -3223 762 0
-3196 -3221 760 0
-3196 -3219 758 0
-3196 -3218 756 0
-3194 794 0
-3194 -3255 792 0
-3194 -3253 790 0
-3194 -3251 788 0
-3194 -3249 786 0
-3194 -3247 784 0
-3194 -3245 782 0
-3194 -3243 780 0
-3194 -3241 778 0
-3194 -3239 776 0
-3194 -3237 774 0
-3194 -3235 772 0
-3194 -3233 770 0
-3194 -3231 768 0
-3194 -3229 766 0
-3194 -3227 764 0
-3194 -3225 762 0
-3194 -3223 760 0
-3194 -3221 758 0
-3194 -3219 756 0
-3194 -3218 754 0
-3192 792 0
-3192 -3255 790 0
-3192 -3253 788 0
-3192 -3251 786 0
-3192 -3249 784 0
-3192 -3247 782 0
-3192 -3245 780 0
-3192 -3243 778 0
-3192 -3241 776 0
-3192 -3239 774 0
-3192 -3237 772 0
-3192 -3235 770 0
-3192 -3233 768 0
-3192 -3231 766 0
-3192 -3229 764 0
-3192 -3227 762 0
-3192 -3225 760 0
-3192 -3223 758 0
-3192 -3221 756 0
-3192 -3219 754 0
-3192 -3218 752 0
-3190 790 0
-3190 -3255 788 0
-3190 -3253 786 0
-3190 -3251 784 0
-3190 -3249 782 0
-3190 -3247 780 0
-3190 -3245 778 0
-3190 -3243 776 0
-3190 -3241 774 0
-3190 -3239 772 0
-3190 -3237 770 0
-3190 -3235 768 0
-3190 -3233 766 0
-3190 -3231 764 0
-3190 -3229 762 0
-3190 -3227 760 0
-3190 -3225 758 0
-3190 -3223 756 0
-3190 -3221 754 0
-3190 -3219 752 0
-3190 -3218 750 0
-3188 788 0
-3188 -3255 786 0
-3188 -3253 784 0
-3188 -3251 782 0
-3188 -3249 780 0
-3188 -3247 778 0
-3188 -3245 776 0
-3188 -3243 774 0
-3188 -3241 772 0
-3188 -3239 770 0
-3188 -3237 768 0
-3188 -3235 766 0
-3188 -3233 764 0
-3188 -3231 762 0
-3188 -3229 760 0
-3188 -3227 758 0
-3188 -3225 756 0
-3188 -3223 754 0
-3188 -3221 752 0
-3188 -3219 750 0
-3188 -3218 748 0
-3187 786 0
-3187 -3255 784 0
-3187 -3253 782 0
-3187 -3251 780 0
-3187 -3249 778 0
-3187 -3247 776 0
-3187 -3245 774 0
-3187 -3243 772 0
-3187 -3241 770 0
-3187 -3239 768 0
-3187 -3237 766 0
-3187 -3235 764 0
-3187 -3233 762 0
-3187 -3231 760 0
-3187 -3229 758 0
-3187 -3227 756 0
-3187 -3225 754 0
-3187 -3223 752 0
-3187 -3221 750 0
-3187 -3219 748 0
-3187 -3218 747 0
